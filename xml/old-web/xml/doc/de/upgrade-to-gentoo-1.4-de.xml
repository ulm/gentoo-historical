<?xml version='1.0'?>


<guide>

<title> Gentoo 1.4 Upgrade Anleitung</title>
<author title="Author"><mail link="gustavo@felisberto.net">
	Gustavo Felisberto</mail>
</author>
<author title="Author"><mail link="rjlouro@rjlouro.org">
	Ricardo Loureiro</mail>
</author>
<author title="Copy Editor"><mail link="zhen@gentoo.org"></mail></author>
<author title="&#220;bersetzung"><mail link="kontakt@hendrik-brandt.de">Hendrik Brandt</mail>
</author>


<abstract>
Diese Anleitung zeigt ihnen, wie sie ein &#228;lteres Gentoo-Linux-System (Gentoo 1.1a, 1.2 oder 1.3) zum neuen Gentoo 1.4 aktualisieren.
</abstract>



<version>0.3</version>
<date>17. September 2002</date>

<chapter>
<title>Bevor sie anfangen</title>
<section>
<title>Ein Hinweis f&#252;r Ungeduldige</title>
<body>
<p><b>WENN SIE NICHT SCHITT-F&#220;R-SCHRITT VORGEHEN WOLLEN</b> sollten sie nur das "Vorgehen in K&#252;rze" in Abschnitt 2 lesen.</p>
</body>
</section>

<section>
<title>Warnung an die Zartbesaiteden</title>
<body>
<warn>
Die geschilderte Prozedur wurde zwar ausgiebig getestet, trotzdem kann es ihr System unbenutzbar machen!
</warn>

<p>
Mit dieser Warnung im Kopf sollten sie wissen, dass die ganze Prozedur gef&#228;hrlich und zeitaufw&#228;ndig ist.
Wenn ihr Computer bereits mit der Installation von <i>stage1</i> zu k&#228;mpfen hatte, sollten sie lieber kein Upgrade durchf&#252;hren.
Bitte lesen sie das gesamte Dokument, ehe sie anfangen und &#252;berlegen sie es sich zweimal, bevor sie das Upgrade starten.
Wenn sie nicht viel Linux-Erfahrung haben, sollten sie von dem Ganze lieber die Finger lassen.
</p>
<p>
Einige der Texte in dieser Datei wurden aus der Datei README aus den Upgrade-Skripten von <mail link="carpaski@gentoo.org">Nicholas Jones</mail> entnommen.
</p>
</body>
</section>

<section>
<title>Ben&#246;tigte Dateien und allgemeine Informationen</title>
<body>
<p>
Sie ben&#246;tigen die vier Skripte von Nicholas Jones. 
Diese erhalten sie <uri link="http://www.gentoo.org/~carpaski/system_update/">hier</uri>.
Nehmen sie die Dateien mit den Namen <i>update-step1.sh</i>, <i>update-step2.sh</i>, <i>update-step3.sh</i> and <i>update-step4.sh</i>.
Vergessen sie nicht die Zugriffsrechte der Dateien zu &#228;ndern und sie ausf&#252;hrbar zu machen.
</p>

<warn>
<b>Starten sie die Skripte NIE alle mit einem Kommando!</b> z.B.: <i>update-step1.sh &amp;&amp; update-step2.sh &amp;&amp; ...</i>
</warn>

<p>
<uri link="http://www.gentoo.org/~carpaski/system_update/update-step1.sh">Skript 1</uri> f&#252;hrt einige Tests durch, um zu sehen, ob alles in Ordnung ist.
Au&#223;erdem wird es Sicherheitskopien von GCC, glibc, binutils, ncurses, gettext und texinfo erstellen.
Sie werden diese ben&#246;tigen, wenn etwas wirklich schief geht.
Dies w&#228;re sehr unangenehm (wir haben es bisher noch nicht erlebt, trotzdem kann es passieren), deshalb ist es besser darauf vorbereitet zu sein.
</p>

<p>
<uri link="http://www.gentoo.org/~carpaski/system_update/update-step2.sh">Skript 2</uri> startet den ersten Teil des Upgrades, es ver&#228;ndert die Profil-Systemlinks, spielt Portage ein und wird ein build+bootstap des <i>GCC</i> und der <i>binutils</i> durchf&#252;hren.
<note>
Um dieses Skript auch auf nicht-x86-Rechnern zum Laufen zu bringen, m&#252;ssen sie die Variable ARCH am Skriptanfang anpassen.
Sie k&#246;nnen <i>x86</i>, <i>ppc</i>, <i>sparc</i> und <i>sparc64</i> verwenden.
</note>
</p>

<p>
<uri link="http://www.gentoo.org/~carpaski/system_update/update-step3.sh">Skript 3</uri> setzt das Upgrade fort und wird ein komplettes stage3-Bootstrap abh&#228;ngig von ihrer <path>/etc/make.conf</path> durchf&#252;hren, dies betrifft GCC, glibc, binutils .....
</p>

<p>
<uri link="http://www.gentoo.org/~carpaski/system_update/update-step4.sh">Skript 4</uri> ist optional und w&#252;rde alle besch&#228;digten Pakete die eventuell nach Skript 3 existieren unmerge und wieder re-emerge (l&#246;schen und neu einspielen).
Sie haben ebenfalls die M&#246;glichkeit, anstatt Skript 4 ein <c>emerge -e world</c> durchzuf&#252;hren, um ihr komplettes System mit dem gcc 3.2 und den neuen CFLAGS neu zu bauen - allerdings wird dies ungleich l&#228;nger dauern.
</p>
</body>
</section>

<section>
<title>Ratschl&#228;ge der Autoren</title>
<body>
<p><e>&#220;bertakten sie ihr System w&#228;rend des Upgrades nicht!</e> 
Gustavo Felisberto (einer der Autoren) hatte eine sehr schmerzliche Erfahrung im Verlaufe seines Upgrades. 
Sein Dual-P3-866mhz-System war auf 1007MHz &#252;bertaktet - offenbar war das dem Hauptspeicher nicht recht und er erzeugte wiederholt Speicherzugriffsfehler.
</p>

<p>
Melden sie sich nachdem sie das zweite Skript gestartet haben NICHT ab, bis Skript 3 beendet wurde!
Das Upgrade ver&#228;ndert <i>init</i> und <i>login</i> und wird die Konsolen auf Grund fehlender Bibliotheken sperren.
Sie w&#252;rden eine Auflistungen von massenhaft Fehlermeldungen erhalten. 
Konsolenunabh&#228;ngige Dienste wie SSH werden auch weiterhin funktionieren, vorausgesetzt es sind keine C++ Programme.
</p>

<p>
Ver&#228;ndern sie NIE ihre CFLAGS, bevor Skript 2 nicht beendet wurde.
Durch das Hinzuf&#252;gen von gcc3-Flags zur make.conf vor Skript 2 w&#252;rde einige Teile des Skripts fehlschlagen.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Das Upgrade</title>
<section>

<title>Vorgehen in K&#252;rze</title>
<body>
<pre>
# <i>emerge rsync</i>      <codenote>Ein existierender Baum ist wichtig</codenote>
# <i>emerge -u world</i>   <codenote>Spart ihnen eine Menge Zeit und Nerven</codenote>

#                        <codenote>Setzen sie ihre CFLAGS f&#252;r bootstrap</codenote>
# <i>nano -w /etc/make.conf</i> <codenote>Verwenden sie <b>KEINE</b> gcc 3.2-Spezifischen Flags.</codenote>

# <i>./update-step1.sh</i> <codenote>Kurzes Skript, das Sicherheitskopien von gcc,glibc,usw. anlegt</codenote>

<warn><b>STARTEN SIE DAS SYSTEM NICHT NEU</b>, nachdem sie das Skript 2 begonnen haben!
Ihr System wird wahrscheinlich nicht starten, bevor Skript 3 nicht vollst&#228;ndig durchgef&#252;hrt wurde.
</warn>
<note>An dieser Stelle sollten sie sich an sovielen Konsolen anmelden, die sie brauchen bis Skript 3 abgearbeitet ist.</note>
# <i>nano -w update-step2.sh</i> <codenote>&#220;berpr&#252;ft die Variable ARCH. (x86,ppc,sparc,sparc64)</codenote>
# <i>./update-step2.sh</i>       <codenote>&#196;ndert das Profil, build-bootstrap gcc und glibc.</codenote>

<warn>Fehlermeldungen und Fehlschl&#228;ge vor diesem Punkt sind meist auf die fehlerhafte CFLAGS zur&#252;ck zuf&#252;hren.</warn>
# <i>nano -w /etc/make.conf</i>  <codenote>Ver&#228;ndern sie hier ihre CFLAGS.</codenote>
# <i>./update-step3.sh</i>       <codenote>bootstraps gcc und erneuert Login-kritische Pakete.</codenote>
# <i>etc-update</i>              <codenote>&#220;berpr&#252;fung <b>ALLER</b> &#196;nderung.</codenote>

# <codenote>An dieser Stelle m&#252;ssen sie entscheiden, ob sie alles neu &#252;bersetzen wollen oder aber</codenote>
  <codenote>relativ schnell ein laufendes System haben m&#246;chten.</codenote>
# <i>./update-step4.sh</i> <codenote>Optional. Erneuert nur besch&#228;digte Pakete.</codenote>
<warn>Dies wird ALLE besch&#228;digten Pakete entfernen, um sie anschlie&#223;end wieder einzuspielen.</warn>
# <i>emerge -e world</i>   <codenote>Optional. &#220;bersetzt das gesamte System mit den von ihnen angegebenen gcc-3.2 Optimierungen neu.</codenote>
<note>Beide M&#246;glichkeiten in der gegebenen Reihenfolge auszuf&#252;hren sollte problemlos funktionieren.</note>
</pre>
</body>
</section>

<section>
<title>Skript 1</title>
<body>
<p>Bevor sie damit anfangen irgendeines der Skripte auszuf&#252;hren, sollten sie ihren Portage-Tree aktualisieren (<c>emerge rsync</c>) und gegebenenfalls ihr System aktualisieren (<c>emerge -u world</c>).</p>

<pre>
# <i>emerge rsync</i>
# <i>emerge -u world</i>  <codenote>Dies ist zwar optional, aber eine gute Idee bevor sie fortfahren</codenote>
# <i>./update-step1.sh</i></pre>

<p>
Skript 1 wird einige Tests auf ihrem System durchf&#252;hren und gegebenenfalls das <i>gentoolkit</i> installieren, falls sie es noch nicht getan haben.
Der wichtigste Teil ist aber, dass Sicherheitskopien wichtiger Pakete in dem Pfad <path>/usr/portage/packages/All</path> angelegt werden.
Dies wird etwa 10 Minuten dauern.
</p>
</body>
</section>

<section>
<title>Skript 2</title>
<body>
<p>Dieses Skript wird den System-Link von <path>/etc/make.profile</path> auf den richtige Pfad f&#252;r das Upgrade setzen.
<warn>Wenn sie nicht auf einer x86-Architektur arbeiten M&#220;SSEN sie die Variable ARCH am Anfang dieser Datei auf den richtigen Wert f&#252;r <b>ihre Architektur</b> setzen (nochmal: gute Werte sind x86, ppc, sparc und sparc64).</warn></p>

<pre>
<codenote>Bezieht sich nur auf die vorangegangene Warnung:</codenote>
# <i>nano -w update-step2.sh</i></pre>
<p>Dieses Skript wird viel l&#228;nger laufen, als das vorherige - in etwa 30 Minuten auf einem Dual-Pentium3-866MHz mit 256MB RAM.</p>
<pre>
# <i>./update-step2.sh</i></pre>
</body>
</section>

<section>
<title>Skript 3</title>
<body>
<p>Okay, jetzt haben sie das System bootf&#228;hig (eng. bootstrapped) gemacht und die Grundpakete mit allgemeinen Flags &#252;bersetzt. 
Jetzt ist es an der Zeit, erneut das Boot-System zu &#252;bersetzen - diesmal mit GCC 3.2 und den von ihnen angepassten Flags.
Bearbeiten sie <path>make.conf</path> um sicherzustellen, dass alles in Ordnung ist.</p>
<pre>
# <i>nano -w /etc/make.conf</i>
# <i>./update-step3.sh</i>
</pre>

<note>
Wenn sie von GCC 2.x aktualisieren, beachten sie bitte, dass mit Version 3.x und dar&#252;ber neue Flags eingef&#252;hrt wurden.
Schauen sie unter <uri>http://www.freehackers.org/gentoo/gccflags/</uri> nach, um Informationen dar&#252;ber und andere GCC-Flags zu bekommen.
</note>

<p>
Jetzt einfach das Skript ausf&#252;hren.
Ich h&#228;tte gerne die Zeit gestoppt, um ihnen eine Vorstellung zu vermitteln, wie lang das Ganze dauert - aber dies ist wirklich systemabh&#228;ngig.
Fahren sie deshalb einfach fort und f&#252;hren sie das Skript aus. Dies kann einige Zeit dauern, auf einem Dual-AthlonMP mit 1.5GHz z.B. 156 Minuten. Der Autor empfiehlt den Film Star Wars Episode IV, damit die Zeit schneller vergeht.
</p>
<p>
Nach der Abarbeitung werden sie einige weiterf&#252;hrende Anweisungen bekommen.
Es ist sehr wichtig, dass sie ihre Konfigurationsdateien aktualisieren, da viele wichtige Dateien ge&#228;ndert wurden.
Der einfachste Weg dies zu machen, ist es <c>etc-update</c> auszuf&#252;hren.
</p>
<pre>
# <i>etc-update</i>
</pre>
<p>
Dieses Upgrade wird zumeist Probleme mit <i>init</i> und <i>login</i> verursachen.
Es gibt zwei Wege diese zu beseitigen, zum einen k&#246;nnen sie <c>sync ; init u</c> ausf&#252;hren oder einfach das System neu starten.
SSH sollte auch weiterhin funktionieren, somit k&#246;nnen sie sich jederzeit am Rechner anmelden, falls er blockiert ist.
Starten sie den Rechner neu, falls sich die Konsole aufh&#246;ngt oder sie anf&#228;ngt massenweise Fehlermeldungen auszugeben.
</p>
<pre>
# <i>sync</i>
# <i>init u</i>

<codenote>Wenn sich die Konsole aufh&#228;ngt oder sie massenweise Fehlermeldungen ausgibt:</codenote>
# <i>reboot</i></pre>
</body>
</section>
<section>

<title>Skript 4</title>
<body>
<p>
Wenn alles glatt geht haben sie jetzt ein fertiges GCC-3.2-System, allerdings teilweise mit besch&#228;digten Paketen.
Skript 4 wird diese f&#252;r sie suchen und reparieren.
Erneut sei darauf hingewiesen, dass dies ein optionaler Schritt ist - ihr Basissystem ist bereits nach dem 1.4-Profil aktualisiert.
Der Grund daf&#252;r, dass einige Pakete kaputt sind ist, dass einige Bibliotheken neu &#252;bersetzt oder aktualisiert wurden und Programme die von ihnen abh&#228;ngen nicht funktionieren werden, bis sie ebenfalls neu &#252;bersetzt wurden.
</p>
<pre>
# <i>./update-step4.sh</i></pre>
<p>
Dieser Vorgang wird sehr viel mehr Zeit in Anspruch nehmen, als alle anderen Schritte zusammen.
Wenn sie jetzt schon Star Wars Episode IV gesehen haben, w&#252;rde ich ihnen empfehlen sich die anderen vier Episoden anzuschauen.
Sollten sie einen wirklich langsamen Rechner besitzen, ist die Sammlung aller Seinfeld Episoden (ja, alle 180) eine noch bessere Idee.
Nur um ihnen eine Vorstellung zu geben: auf meinem 1.5GHz-Dual-AthlonMP hat der gesamte Vorgang 400 Minuten gedauert und er wurde  bei einigen Paketen, wie z.B. Evolution und Mozilla, unterbrochen, so dass ich diese erneut &#252;bersetzen musste.
Und wir alle wissen wie lange allein Mozilla daf&#252;r braucht.
</p>

<p>
Nach der Abarbeitung, wird Skript 4 die Pakete, die es nicht &#252;bersetzen konnte auflisten.
Einige Paket&#252;bersetzungen werden fehlschlagen, da diese noch auf GCC-3.2 angepasst sind.
Somit m&#252;ssen sie entweder warten oder selbst einige Ver&#228;nderung in den Ebuilds vornehmen, wenn sie wissen was sie tun!
</p>
<note>
Skript 4 wird nicht alle ihre installierten Pakete neu &#252;bersetzen.
Wenn sie wirklich alle Pakete auf ihrem System neu &#252;bersetzen wollen, m&#252;ssen sie <c>emerge -e world</c> ausf&#252;hren.
Sie k&#246;nnen dies anstatt oder nach Skript 4 ausf&#252;hren, aber seien sie darauf vorbereitet, dass nicht alle ihre Pakete &#252;bersetzt werden k&#246;nnen.
Wenn sie das ganze nach Skript 4 starten, erh&#246;hen sie die Chance, dass C++ Programme korrekt neu &#252;bersetzt werden.
</note>
</body>
</section>

</chapter>
<chapter>
<title>Abschlie&#223;ende &#220;berlegungen</title>
<section>
<body>
<p>
Wie sie festellen werden, ist das ganze eine sehr heikle Angelegenheit. Einer der Autoren und verschiedene andere Leute sind sehr zufrieden mit dem Ergebnis. Der andere Autor hatte jedoch ein paar Probleme, darunter ein schwerwiegendes (KDE verweigerte die Arbeit, obwohl es eingespielt wurde).
</p>
<p>
Eine m&#246;gliche Alternative zum Upgrade ist eine Neuinstallation von Gentoo 1.4.
Sichern sie einfach nur ihr <path>/home</path> und ihr <path>/etc</path> - sie werden ihre Benutzer gl&#252;cklich machen, wenn sie deren Dateien sichern, und mit den gesicherten Konfigurationsdateien wird die Installation des neuen Systems einfacher.
Es ist wirklich wichtig, dass sie jedes Paket auf ihrem System aktualisieren und sicherstellen, dass deren Konfigurationsdateien vorhanden sind bevor sie dies versuchen, da das neue System die neuste Version aller Pakete installiert.
Durch gegens&#228;tzliche Konfigurationen k&#246;nnten Programme fehlerhaft starten oder sich abnormal verhalten.
</p>
</body>
</section>
</chapter>
</guide>
