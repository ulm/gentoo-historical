<?xml version='1.0'?>
<!DOCTYPE guide SYSTEM "../www-xsl/guide.dtd">
<guide>
<title>Portage Handbuch</title>
<author title="Author and Editor">
<mail link="blocke@shivan.org">Bruce A. Locke</mail>
</author>
<author title="&#220;bersetzung">
<mail link="sebastian@beneke-it.de">Sebastian Beneke</mail>
</author>
<author title="&#220;bersetzung">
<mail link="jazz_rabbit@berlios.de">Erwin Hengl</mail>
</author>
<author title="&#220;bersetzung">
<mail link="kontakt@hendrik-brandt.de">Hendrik Brandt</mail>
</author>
<abstract>
Dieses Handbuch liefert einen generellen &#220;berblick &#252;ber Portage,
detaillierte Informationen sowie eine Anleitung zur Installation und
Pflege von Paketen des Portage Systems.
</abstract>

<version>0.9.6</version>
<date>18.Juli 2002</date>

<chapter>
<title>Portage: Ein &#220;berblick</title>

<section>
  <title>&#220;berblick</title>
  <body>
	<p>
        Portage ist ein sehr m&#228;chtiges und fortgeschrittenes Paket-Management-System.
        Seine Flexibilit&#228;t und F&#228;higkeit als einfaches Werkzeug zum Kompilieren
        von Software oder als Herzst&#252;ck einer brandaktuellen Linux Distribution 
        zu dienen ist nahezu einzigartig. Die Gentoo Linux Distribution wurde um 
        Portage entwickelt.
	</p>
	<p>
        Gentoo Linux wird oftmals als "Meta-Distribution" bezeichnet. Gentoo 
        besteht aus Portage und &#252;ber 2200 Anleitungen zum Kompilieren von Paketen,
        sogenannten <i>ebuilds</i>. Diese <i>ebuilds</i> geben Portage die 
        Anweisungen wie ein bestimmtes Softwarepaket kompiliert und installiert 
        werden soll. Durch die Benutzung von <i>Profilen</i> und dem Kommandozeilen 
        Programm <i>emerge</i> k&#246;nnen Benutzer und Entwickler Portage dazu nutzen 
        um die Pakete zu installieren und zu pflegen, die die Grundlage des Betriebssystems 
        und der darauf laufenden Anwendungen darstellen.
	</p>
	<p>
        Ein Gentoo Linux wird "on-the-fly" kompiliert, d.h. direkt auf den entsprechenden 
        Rechner angepasst und erstellt. Der Installationsprozess umfasst das Erstellen eines 
        funktionierenden Compilers sowie einer minimalen Umgebung, in der Portage Quelltexte
        aus dem Internet laden kann, um den Rest des "Systemkerns" und etwaige Anwendungen zu
        installieren. Auch wenn Portage die Benutzung von vorkompilierten Anwendungen 
        unterst&#252;tzt, stellt diese nur einen Kompromiss dar und wird nur zur Installation 
        auf langsamen Maschinen bzw. von Entwicklern die schnell ein bestimmtes Paket 
        wiederherstellen wollen verwendet. Desweiteren gibt es einem die M&#248;glichkeit, 
        Pakete auf einer schnellen Maschine 
        zu kompilieren um sie dann auf einem langsamen Rechner zu installieren.
	</p>
	<p>
        Durch das Kompilieren "on-the-fly" und der Tatsache, dass Portage stark konfigurierbar 
        ist sind nur sehr wenige Gentoo Installationen gleich. Im Grunde wird bei der 
        Installation von Gentoo Linux eine angepasste Linux Distribution erstellt, die sich 
        an den Optionen, wie sie in der Portage Konfiguration und den ebuilds selber definiert 
        sind, orientiert.
	</p>	
	<p>
        Auf den ersten Blick mag die Idee hinter Portage &#228;hnlich dem BSD Ports System sein.
        Beide kompilieren Pakete aus dem Source und erlauben es dem Benutzer Software sicher 
        zu installieren bzw. zu deinstallieren. Beide l&#246;sen Abh&#228;ngigkeiten automatisch auf. 
        Viele Ideen von Portage wurden beim BSD Ports System ausgeliehen, jedoch handelt es 
        sich bei Portage definitiv nicht um eine weitere "Ports-Kopie".
	</p>
	<p>
        Das Portage System ist eine Verbindung aus einem auf Python basierenden Kern und 
        Bash Script basierten <i>ebuilds</i>. Anstatt mit Makefiles und dem <i>make</i> 
        Kommando zu hantieren, verbindet Portage die M&#246;glichkeiten von Python und das 
        einfach zu handhabende Shellscripting mit einigen objektbasierten Charakteren, um 
        ein einzigartig m&#228;chtiges System zu erstellen. Dieses setzt Portage an die Spitze aller 
        aktuellen Ports Systeme.
	</p>
	<p>
        Einige der von Portage angebotenen erweiterten Funktionen sind die M&#246;glichkeit 
        verschiedene Versionen und &#220;berarbeitungen des gleichen Pakets im Tree zu halten, 
        Aufl&#246;sung der entsprechenden Abh&#228;ngigkeiten, feinstrukturiertes Paketmanagement, 
        sichere Installation via Sandbox, Schutz von bestehenden Konfigurationsdateien, 
        Profile und vieles mehr. Viele dieser Funktionen werden noch im Laufe dieses 
        Handbuches genauer erl&#228;utert.
	</p>
  </body>
</section>

<section>
<title>Umgebungsabh&#228;ngige Aufl&#246;sung von Abh&#228;ngigkeiten und Funktions Unterst&#252;tzung</title>
<body>
	<p>
        Das Portage System ist im Hinblick der Flexibilit&#228;t welches es dem User bietet 
        einzigartig. Traditionelle BSD Ports Systeme tendieren dazu nur jeweils eine 
        Version eines jeden Paketes im Tree zu unterst&#252;tzen. Portage hat diese Begrenzungen
        nicht. Es k&#246;nnen mehrere Versionen eines Paketes zur Installation zur Verf&#252;gung 
        stehen.Paketabh&#228;ngigkeiten (Pakete, die zum Kompilieren andere Pakete n&#246;tig sind) 
        k&#246;nnen entweder mit ihrem Namen oder mittels Namen mit zus&#228;tzlich angeh&#228;ngter 
        Versionsnummer definiert werden. Das erm&#246;glicht es mehrere Versionen eines Paketes 
        zeitgleich im Tree zu pflegen.
	</p>
	<p>
        Das Abh&#228;ngigkeits-System unterst&#252;tzt ebenfalls umgebungsabh&#228;ngige Abh&#228;ngigkeiten. 
        Portage hat daf&#252;r ein leistungsstarkes Konzept, die sogenannten <i>USE Settings</i>. 
        Durch das &#228;ndern einer Konfigurations-Variablen in einer Portage Konfiguration, ist 
        es m&#246;glich bestimmte Unterst&#252;tzung f&#252;r Funktionen oder Bibliotheken w&#228;hrend des 
        Kompilierens zu aktivieren bzw. abzuschalten. Dies ist ein sehr flexibles und 
        leistungsstarkes System, welchem wir uns im n&#228;chsten Kapitel widmen werden.
	</p>
	<p>
        Zus&#228;tzlich unterst&#252;tzt Portage Konzept der <i>SLOTs</i>. W&#228;hrend der Entwicklung von 
        Gentoo Linux wurde klar, da&#223; wir &#246;fters mehrere Versionen bestimmter Pakete (wie 
        z.B. Bibliotheken) ben&#246;tigen, um die Anspr&#252;che andere Pakete zu erf&#252;llen. Der
        traditionelle Weg um dieses Problem zu l&#246;sen war es, verschiedene Versionen eines 
        Paketes als unterschiedliche Pakete mit leicht abweichenden Namen zu behandeln.
        </p>
	<p>
        Anstatt verschiedene Versionen als eigene Pakete zu behandeln, brachten die Entwickler 
        Portage bei, wie mehrere Versionen eines Paketes gleichzeitig durch Benutztung von 
        <i>SLOTs</i> zu handhaben sind. Als Beispiel sei hier die g&#228;ngige Freetype Bibliothek 
        genannt. Die 1.x Reihe von Freetype ist mit der 2.x Reihe inkompatibel, jedoch sind 
        oftmals beide Versionen n&#246;tig, um die Abh&#228;ngigkeiten verschiedener Pakete zu erf&#252;llen. 
        Die meisten Distributionen und Ports Systeme tendieren dazu, ein "freetype" Paket f&#252;r 
        Freetype 1.x und ein "freetype2" Paket f&#252;r Freetype 2.x zu f&#252;hren. Dies betrachten wir 
        als beinahe komplett besch&#228;digtes Paketmanagement System. Wir erg&#228;nzen einfach die 
        <i>SLOT</i> Nummer 1 zur ersten und Nummer 2 zur zweiten Version. Mit dieser 
        Information ist Portage in der Lage beide Reihen zu pflegen und, falls n&#246;tig, beide auf 
        h&#246;here Versionen upzudaten.
	</p>
</body>
</section>

<section>
<title>Profile</title>
<body>

	<p>
        Portage unterst&#252;tzt ein weiteres Konzept, sogenannte <i>Profile</i>. Ein Profil enth&#228;lt 
        eine Liste von Paketnamen und Versionen mit Anweisungen und einigen Standardoptionen, 
        welche von Portage benutzt werden sollen. Ein Profil enth&#228;lt Informationen welche Pakete 
        und welche Versionen jeweils erlaubt bzw. verboten oder als zwingend notwendig behandelt werden 
        sollen. Der Benutzer kann zwischen verschiedenen Profilen wechseln in dem er einfach 
        einen Symlink &#228;ndert (<i>/etc/make.profile</i>).
	</p>
	<p>
        Der gesamte Aufwand, welcher bei der Entwicklung von Gentoo Linux betrieben wurde, 
        resultiert in einer Sammlung von <i>ebuilds</i> und einem Profil. Dieses Profil 
        beschreibt welche Pakete als Kernpakete f&#252;r den Betrieb des Systems wichtig sind.
        Das Profil erlaubt dar&#252;ber hinaus den Entwicklern bestimmte Pakete zu blockieren bzw.
        freizuschalten. Dies ist auch n&#252;tzlich um defekte Pakete zwischenzeitlich zu deaktivieren.
        Die <i>ebuild</i> Dateien definieren einfach nur wie bestimmte Pakete von Portage 
        kompiliert und installiert werden sollen, welche durch das Profil verlangt bzw. 
        erlaubt werden.
	</p>
	
</body>
</section>
</chapter>


<chapter>
<title>Portage konfigurieren</title>

<section>
<title>&#220;berblick</title>
<body>
	<p>
        Das folgende Kapitel soll verschiedene Aspekte von Portage abdecken, die jeweils f&#252;r 
        Benutzer wie Entwickler wichtig sind. Portage ist ein sehr flexibles System und Sie
        m&#252;ssen verstehen, wie man Portage richtig konfiguriert, um Ihr System genau auf Ihre
        Bed&#252;rfnisse abstimmen zu k&#246;nnen.
	</p>
	<p>
        Bitte beachten Sie, dass in diesem Dokument der Begriff "Benutzer" Personen mit
        administrativen Rechten definiert. Um die Portage Konfiguration zu &#228;ndern und neue
        Pakete zu installieren bzw. zu entfernen ben&#246;tigen Sie Root-Rechte.
	</p>
</body>
</section>

<section>
<title>Portage Konfigurations Dateien</title>
<body>
	<p>
	Fast alle Konfigurations-Optionen, die weiter unten erkl&#228;rt werden,
	befinden sich in den Dateien /etc/make.conf und /etc/make.global.
	Es ist wichtig zu wissen, das alle Einstellungen, die in /etc/make.conf
	definiert sind, von den Einstellungen, die in /etc/make.global gemacht
	wurden, fast immer &#252;berschrieben werden.
	
	Alle Einstellungen in /etc/make.conf und /etc/make.global k&#246;nnen als
	Global betrachtet werden, solang es Portage betrifft.
	</p>
	<p>

	Wenn Sie &#252;berpr&#252;fen wollen, ob eine Option bereits definiert
	wurde, ist es zu empfehlen, dass Sie zuerst /etc/make.conf &#252;berpr&#252;fen
	und erst dannach die /etc/make.global. Sofern nicht anders angegeben, werden
	Optionen, die in /etc/make.globals definiert wurden, von den Optionen in
	/etc/make.conf &#252;berschrieben.
	
	</p>
</body>
</section>

<section>
<title>USE Einstellungen</title>
  <body>
  	<p>
	Das USE-System ist eine flexible M&#246;glichkeit, um s&#228;mtliche
	Features, die von Anfang an beim Kompilierprozess von Gentoo Linux
	dabei oder erst hinzugekommen sind, ein- bzw. auszuschalten.
	Dies erlaubt eine Administrierbarkeit, wie die Pakete in Verbindung
	mit den angegebenen Features in der USE-Variable, kompiliert werden.
	Zum Beispiel, wenn ein Paket GNOME Support hat, k&#246;nnen Sie diesen
	Support abschalten, indem Sie in der USE-Variable <i>-gnome</i> angeben. 
        Wenn Sie jedoch den Support f&#252;r die Software, die GNOME
	unterst&#252;tzt, aktivieren wollen, dann setzen Sie in der USE-Variable
	ein <i>gnome</i> ein.
	</p>
	<p>Der Effekt der USE Einstellungen auf Pakete ist abh&#228;ngig davon,
	ob die Software und das ebuild Paket selbst, das jeweils gesetzte USE
	Feature optional unterst&#252;tzt. Wenn dem nicht so ist, so wirkt auch
	das jeweilige USE Feature nicht auf diese Software. Auch werden einige 
        Paketabh&#228;ngigkeiten bei mancher Software nicht als optional angesehen,  
        dadurch haben gesetzte USE Einstellungen keine Auswirkungen auf diese 
        vorgeschriebenen Abh&#228;ngigkeiten. Eine Liste der USE Einstellungen, die von 
        einem Paket benutzt werden, k&#246;nnen in der entsprechenden Ebuild Datei in 
        den Zeilen <i>DEPEND</i> und <i>RDEPEND</i> eingesehen werden.
	</p>
	<p>Eine Liste der USE Einstellungen, die von Gentoo Linux benutzt
	werden, k&#246;nnen Sie aus der Datei <i>/usr/portage/profiles/use.desc</i>
	beziehen. Jede USE Einstellung ist jeweils in einer Zeile mit einer
	zus&#228;tzlichen Beschreibung deklariert und erkl&#228;rt, was
	Sie f&#252;r ein Feature aktiviert.
	</p>

	<p>
	Portage bestimmt, welche USE Einstellung ein- bzw. ausgeschaltet ist,
	aufgrund einer &#252;berpr&#252;fung von bis zu vier verschiedenen Stellen,
	wo USE definiert sein kann. Diese Stellen bewirken, dass die USE
	Einstellungen, die an diesen Stellen definiert sind, "aufgestapelt" werden.
	Es durchforstet jede einzelne Stelle und merkt sich jedes USE Feature der
	fr&#252;heren Stellen, ob Sie ein- bzw. ausgeschaltet sind und f&#252;gt
	neu gefundene Features hinzu, so dass es eine lange USE Einstellung
	ergibt.
	Wird zum Beispiel ein Feature an einer fr&#252;heren Stelle abgeschaltet
	und am der aktuellen Stelle, die Portage durchforstet, eingeschaltet, so wird
	das Feature trotz Abschaltens an der fr&#252;heren Stelle wieder eingeschaltet.
	</p>

        <!-- Habe Ort mit Stelle ersetzt und einige Formulierungen angepasst, liesst sich afaik fluessiger [SB] --> 

	<p>
	Portage &#252;berpr&#252;ft die Stellen in denen USE Einstellungs definiert werden 
        in der Reihenfolge, wie sie in der Variable <i>USE_ORDER</i> in
	/etc/make.globals angegeben ist. M&#246;chten Sie eine Stelle ausschalten,
	dann entfernen Sie einfach jene in <i>USE_ORDER</i>.
	</p>
	<p>
	Die folgenden Abs&#228;tze beschreiben jeden Ort, der in <i>USE_ORDER</i>
	von der Portages Standard Konfiguration definiert wurde.
	</p>
	
	
	<p><b>Defaults</b></p>
	<p>Portage Profile k&#246;nnen einen Satz von standard USE Features
	beinhalten. Diese standard Features sind bei jedem Profil dabei und
	werden in der Datei make.defaults angegeben. Da /etc/make.profile
        als eine Verkn&#252;pfung zum aktuell benutzten Portage Profil fungiert,
	ist der Satz der standard USE Features des aktuellen Profils
	die Datei /etc/make.profile/make.defaults. Es ist nicht zu empfehlen,
	diese Datei zu bearbeiten aufgrund von zuk&#252;nftige Profil&#228;nderungen,
	die diese &#252;berschreiben w&#252;rde.
	</p>
	
	<p><b>Auto</b></p>
	<p>Diese Pakete sind in der Datei use.defaults im Portage Profil
	(/etc/make.profile/use.defaults) definiert. Jeder Eintrag beinhaltet
	eine USE Feature Bezeichnung und das dazugeh&#246;rende Paket.
	Wenn jenes Paket als USE Feature angegeben wurde, was bereits installiert
	ist, wird es als eingeschaltet betrachtet. 
        Wenn Sie zum Beispiel das Paket <i>x11-base/xfree</i> installieren und die USE-Option <i>X</i>
        nicht abschalten, so wird diese solange global eingeschaltet, wie das Paket installiert ist.
        Es ist nicht zu empfehlen, diese Datei zu bearbeiten
	aufgrund von zuk&#252;nftigen Profil&#228;nderungen, die diese &#252;berschreiben
	w&#252;rden.</p>

	<p><b>Conf</b></p>
	<p>Wenn eine <i>USE</i> Option in /etc/make.conf definiert ist, werden
	die USE Features, die in jener Option angegeben wurden, inkludiert.
	Wenn es keine <i>USE</i> Option in make.conf gibt, dann wird /etc/make.globals
	&#252;berpr&#252;ft. Solch ein Eintrag k&#246;nnte wie folgt aussehen:
	</p>

	<pre>
USE="slang readline gpm berkdb gdbm tcpd pam libwww ssl gb tk
     lm_sensors lvm ldap tex bonobo sdl gtk xfs evo pda ldap
     mmx mitshm perl python guile ruby postgres dvd 3dnow tcl
     lcms gif sdl vorbis ogg oss libg++ directfb decss snmp
     gnome X opengl mozilla pdflib gpg -nls gd xface jpilot
     -kde -qt -esd -motif -alsa oggvorbis"
	</pre>

	<p>
	USE Features werden eingeschaltet, indem Sie einfach in der USE-Variable
	angegeben werden. USE Features k&#246;nnen jedoch auch mittels 
        Negation durch ein <i>-</i> (Minus) vor dem Feature-Namen deaktiviert werden.
        Zum Beispiel schaltet <i>gnome</i> GNOME Support ein, w&#228;hrend <i>-motif</i> den MOTIF Support
	abschaltet.
	</p>
	<p>
	Die <i>USE</i> Option in /etc/make.conf ist der empfohlene Ort, wo man
	USE Features ein- bzw. ausschalten sollte. Diese Datei wird nicht
	automatisch von Portage &#252;berschrieben. Es wird empfohlen, dass Sie hier 
        die USE Einstellungen eintragen, die nicht von den vorangehenden Stellen ein bzw. 
        ausgeschaltet werden sollen. 
	</p>
	
	<p><b>Env</b></p>
	<p>Die USE Features kann man von Hand aus mit seiner eigenen Shell
	Umgebungseinstellung &#252;berschreiben.
	</p>

	<pre>
export USE="-gnome"
emerge net-im/gaim
	</pre>

	<p>Dies erlaubt &#252;ber kurz oder lang, das man spezifische
	Pakete ohne oder mit einem/mehrere USE Feature/s kompilieren kann.
	Diese von Ihnen per Hand &#252;berschriebenen USE Features bleiben
	bestehen, solange Sie in jener Shell Umgebung damit arbeiten.
	Verlassen Sie Ihre Umgebung ("exit"), ist auch das von Hand gesetzte USE Feature weg.
	</p>
	<note>
        Auch wenn Portage die aktuellen USE Einstellungen zum Zeitpunkt der 
        Installation des Pakets speichert, so sind diese Einstellungen nicht 
        dauerhaft gespeichert. Sollte dieses Paket in der Zukunft erneut installiert 
        bzw. aktualisiert werden, wird nur die aktuell im System definierte USE Einstellung 
        angewendet und keinesfalls die zum Zeitpunkt der Erstinstallation geltende.</note>

  </body>
</section>

<section>
<title>Compiler Optionen</title>
<body>
	<p>
        Die Compiler Optionen, welche von Portage zum kompilieren von Paketen genutzt 
        werden, k&#246;nnen in /etc/make.conf gesetzt werden indem <i>CHOST</i>, <i>CFLAGS</i> 
        und <i>CXXFLAGS</i> editiert werden. Die <i>CHOST</i> Einstellung gibt an, auf 
        welcher Plattform Sie kompilieren. <i>CFLAGS</i> und <i>CXXFLAGS</i> geben 
        Compiler Einstellungen an w&#228;hrend C bzw. C++ kompiliert wird.
	</p>
	<p>
        Es werden Ihnen einige kommentierte Standard Einstellungen f&#252;r unterschiedliche
        Plattformen angeboten. Diese Einstellungen k&#246;nnen als getestet und stabil angesehen 
        werden. Diese zu &#228;ndern, k&#246;nnte zu Fehlern in der Software und dem Compiler 
        f&#252;hren. Bitte seien Sie beim &#228;ndern der Standard Einstellung vorsichtig, da Sie 
        ein unbenutzbares bzw. besch&#228;digtes System erhalten k&#246;nnten.
        </p>
	<p>
        Benutzer eines Multiprozessor Systems k&#246;nnten einige Vorteile erhalten, indem sie in 
        /etc/make.globals die Option <i>MAKEOPTS</i> editieren. Diese Option wird w&#228;hrend des 
        Kompilierungsvorganges an <i>make</i> &#252;bergeben um mehrere GCC Instanzen zu aktivieren.
	</p>
	
</body>
</section>

<section>
<title>Lage der Verzeichnisse</title>
<body>
	<p>
        Portage erlaubt es Ihnen zu bestimmen in welchen Verzeichnissen Pakete kompiliert 
        und verschiedene Dateien gespeichert werden sollen. Die meisten Benutzer werden 
        diese Optionen nicht ben&#246;tigen. Folgende Optionen k&#246;nnen genutzt werden:
        </p>

	<ul>
	<li><i>PORTDIR</i> - Position des Portage Trees</li>
	<li><i>DISTDIR</i> - Lokaler Cache der runtergeladenen Pakete</li>
	<li><i>PKGDIR</i> - Ort der lokal erzeugten tbz2 Pakete</li>
	<li><i>RPMDIR</i> - Ort der lokal erzeugten RPM Pakete</li>
	<li><i>CURRENTFILE</i> - ???</li>
	<li><i>PORTAGE_TMPDIR</i> - Kurzfristiger Platz zum Kompilieren der Pakete</li>
	<li><i>BUILD_PREFIX</i> - Geh&#246;rt zu PORTAGE_TMPDIR</li>
	<li><i>PKG_TMPDIR</i> - Geh&#246;rt zu PKG_TMPDIR</li>
	</ul>
</body>
</section>
	

<section>
<title>Schutz der Konfigurationsdateien</title>
<body>
	<p>
        Portage erlaubt den Schutz aller Konfigurations Dateien in bestimmten 
        Verzeichnissen. Portage wird in gesch&#252;tzten Verzeichnissen keine Dateien 
        &#252;berschreiben. Wenn ein Paket versucht, bereits existierende Dateien zu 
        &#252;berschreiben, wird die entsprechende Datei nach dem Muster
        <i>._cfg0000_name</i> umbenannt. Dies geschieht damit der Benutzer sp&#228;ter 
        die neue Datei einsehen kann, um die Unterschiede manuell einzuf&#252;gen.
        </p>
	<p>
        Gesch&#252;tzte Verzeichnisse k&#246;nnen &#252;ber <i>CONFIG_PROTECT</i> entweder in 
        /etc/make.conf oder /etc/make.globals definiert werden. Bestimmte Dateien 
        und Unterverzeichnisse unterhalb gesch&#252;tzter Verzeichnisse k&#246;nnen durch
        <i>CONFIG_PROTECT_MASK</i> vom Schutz ausgenommen werden.
	</p>
	<p>
        Das Folgende ist nur ein Beispiel und sollte nicht blind kopiert werden:
	</p>

<pre>
CONFIG_PROTECT="/etc /usr/share/config /usr/kde/2/share/config"
CONFIG_PROTECT_MASK="/etc/gconf /etc/init.d /etc/pam.d"
</pre>

	<p>
        Benutzer k&#246;nnen mehr Informationen &#252;ber den Schutz von Konfigurations 
        Dateien erhalten, indem sie folgendes in ihrer Shell eingeben:
	</p>

<pre>
emerge --help config
</pre>

</body>
</section>

<section>
<title>FUNKTIONEN</title>
<body>
	<p>
        Portage bietet eine ganze Menge Optionen, die auf Entwickler abzielen, 
        welche regeln wollen wie sich Portage verh&#228;lt und nach der Installation 
        verschiedener Paketstufen aufr&#228;umt. Diese Optionen sollten nur f&#252;r
        Entwickler interessant sein. Bei normalen Benutzern k&#246;nnten sie Probleme 
        verursachen.
	</p>
	<p>
        Eine Liste an Funktionen kann unter <i>FEATURES</i> entweder in 
        /etc/make.conf oder /etc/make.globals aktiviert werden. Hier eine Liste 
        der verf&#252;gbaren Funktionen:
        </p>
	<p>
	<ul>
	<li><i>digest</i> : Erstellt automatisch einen Digest f&#252;r neue Ebuilds.</li>
	<li><i>cvs</i> : Erg&#228;nzt neue Ebuild Digests automatisch ins CVS.</li>
	<li><i>sandbox</i> : Aktiviert das Sandboxverfahren.</li>
	<li><i>noclean</i> : Portage r&#228;umt nach dem kompilieren nicht auf.</li>
	<li><i>noauto</i> : F&#252;hrt keine wichtigen Ebuild Schritte automatisch aus.</li>
	</ul>
	</p>
</body>
</section>

<section>
<title>Portage SYNC Einstellungen</title>
<body>
	<p>Portage bietet zwei verschiedenen Arten, den Portage Tree zu erneuern: 
        rsync oder anonymous CVS. Sie k&#246;nnen
	angeben, welche Methode Portage benutzen soll, um das update
	durchzuf&#252;hren. Jene Methode k&#246;nnen Sie &#252;ber die <i>SYNC</i>
	Option, die sich in der Datei /etc/make.conf befindet, angeben.
	</p>

	<p><b>RSYNC</b></p>

	<p>Es wird empfohlen, die rsync-Methode zu benutzen, es sei denn Sie
	planen, Ihre eigenen Ebuilds zu entwickeln. Diese entlastet unsere
	Server deutlich - im Gegensatz zu Anonymous CVS.
	Deshalb ist rsync die Standardmethode, welche in /etc/make.conf
	angegeben wurde.
	Sie k&#246;nnen sie folgenderma&#223;en angeben:
	</p>

<pre>
SYNC="rsync://cvs.gentoo.org/gentoo-x86-portage"
</pre>

	<note>
        Die rsync-Methode &#252;berschreibt blind alle Ver&#228;nderungen, die an Ihrem 
        lokalen Portage Tree vorgenommen wurden. Falls Sie lokale &#196;nderungen 
        behalten m&#246;chten, m&#252;ssen Sie die Anonymous CVS Methode w&#228;hlen.
        </note>

	<p><b>Anonymous CVS</b></p>

	<p>
        Portage kann den lokalen Portage Tree mit einem bestimmten anonymen CVS 
        Server abgleichen. Dies ist besonders f&#252;r Entwickler sinnvoll, die verhindern 
        wollen, dass Ihre Ver&#228;nderungen am Portage Tree beim Abgleichen &#252;berschrieben 
        werden. Diese Methode kann folgenderma&#223;en aktiviert werden:
        </p>

<pre>
SYNC="cvs://:pserver:anonymous@gentoo.org:/home/anoncvs"
</pre>

	<note>Anonymous CVS ist langsam und sehr ressourcenintensiv - sowohl f&#252;r
	den Server als auch f&#252;r den Client (lokal). Wir m&#246;chten
	Sie darum bitten, das Sie die rsync Methode verwenden, wenn Sie keine
	&#196;nderungen im lokalen Portage Tree vornehmen wollen.
	</note>

	<p>Bevor Sie beginnen Anonymous CVS zu benutzen, um Ihre lokale
	Kopie mit einem offiziellen Portage Tree zu synchronisieren, m&#252;ssen
	Sie zuerst den neuesten	Tree mittels <c>cvs</c> durch folgende Vorgehensweise herunterladen ("checkout"):
	</p>
<pre>
# Sichern des alten Portage Trees
cd /usr
mv portage portage.old

# Herunterladen ("checkout") des Trees
cvs -d :pserver:anonymous@gentoo.org:/home/anoncvs login
# Bet&#228;tigen Sie einfach Enter bei der Passwortabfrage
cvs -d :pserver:anonymous@gentoo.org:/home/anoncvs co gentoo-x86

# Verschieben Sie den neuen Tree zur gewohnten Stelle
mv gentoo-x86 portage
</pre>

	<p><b>Entwickler CVS</b></p>

	<p>
        Entwickler mit vollem Zugang zum CVS k&#246;nnen auch per <i>emerge</i> den lokalen
        Tree mit dem CVS abgleichen lassen, welches sie mittels RSH oder SSH erreichen
        k&#246;nnen.
	</p>
	<p>
	Laden Sie einfach den CVS Tree mittels Ihres Accounts herunter ("checkout"),
        verschieben Sie diesen nach /usr/portage und benutzen
	Sie folgende <i>SYNC</i> Option:
	</p>

<pre>
SYNC="cvs://Ihr_account@cvs.gentoo.org:/home/cvsroot"
</pre>

</body>
</section>

<section>
<title>Spiegelungen (Mirrors)</title>
<body>
	<p>
        Das Gentoo Projekt beinhaltet eine lokale Spiegelung von allen
	Archivdateien, die als Ebuild im Portage Tree vorliegen. Meistens
	werden Source Tarballs usw. auf langsamen Servern gespeichert, die
        ziemlich oft ausfallen k&#246;nnen. Auch Entwickler entfernen
	regelm&#228;ssig alte Versionen Ihrer Software von FTP-Seiten,
	wenn neue Releases gemacht wurden. Um das Leben von Benutzer, die
	die Gentoo Distribution nutzen, zu erleichtern, spiegeln wir diese
	Dateien. Das erlaubt ein schnelleres und sicheres Herunterladen
	der Archivdateien von Spiegel-Servern, die n&#228;her an Ihrem
	Standort liegen.
	</p>
	<p>
	Wann auch immer Sie vorhaben, ein Paket herunterzuladen, indem Sie es
	"mergen", versucht Portage zu allererst unseren Spiegel-Server
	f&#252;r die angeforderten Archive zu erreichen . Wenn sich auf diesem
	Server die ben&#246;tigten Dateien nicht befinden, versucht Portage
	den jeweiligen HTTP- oder FTP-Server, der im Ebuild Paket
	angegeben ist.
	</p>
	<p>
	Die Angabe des Spiegel-Server, welchen Portage benutzt, erfolgt
	in der <i>GENTOO_MIRRORS</i> Option, die sich in der Datei /etc/make.conf
	befindet.

	Das Folgende ist die standard Einstellung:
	</p>
<pre>
GENTOO_MIRRORS="http://www.ibiblio.org/gentoo"
</pre>
	<p>F&#252;r einen Gentoo-Spiegel-Server in Ihrer N&#228;he,
	besuchen Sie die Gentoo Webseite oder fragen Sie in Ihrer Mailinglist
	nach einem f&#252;r Sie g&#252;nstigeren Server.
	</p>
</body>
</section>

<section>
<title>Download-Programm</title>
<body>
	<p>
        Das Programm, welches von Portage zum Download der ben&#246;tigten Dateien 
        genutzt wird, kann durch die Optionen <i>FETCHCOMMAND</i> und 
	<i>RESUMECOMMAND</i> angegeben werden. Einige Beispiele werden in 
        /etc/make.conf und /etc/make.globals gezeigt. Als Standardprogramm verwendet 
        Portage wget, welches den meisten Anforderungen gen&#252;gen sollte.
	</p>

	<note>
        Portage gibt Informationen &#252;ber HTTP und FTP Proxies an das jeweilige 
        Download-Programm weiter, die in den HTTP_PROXY und FTP_PROXY Optionen 
        definiert sind.
        </note>
</body>
</section>

<section>
<title>Proxies</title>
<body>
	<p>
        Portage kann angewiesen werden, zum Download HTTP oder FTP Proxies zu nutzen 
        Die Proxies k&#246;nnen bei den Optionen <i>HTTP_PROXY</i> und <i>FTP_PROXY</i> 
        entweder in /etc/make.conf oder in /etc/make.globals angegeben werden. Auch hier 
        sollten die Einstellungen vorzugsweise in /etc/make.conf erfolgen. Wenn HTTP 
        und FTP &#252;ber den gleichen Proxy erfolgen soll, k&#246;nnen Sie auch einfach die 
        Option <i>PROXY</i> nutzen.
        </p>
	
	<p>Im Folgenden ein Beispiel:</p>

<pre>
HTTP_PROXY="http://192.168.1.1:8080"
FTP_PROXY="http://192.168.1.1:8080"

or

PROXY="http://192.168.1.1:8080"
</pre>

	<p>
        Portage kann ebenfalls angewiesen werden einen HTTP Proxy zur Verwendung von 
        Rsync zu nutzen. Dies kann durch die Option <i>RSYNC_PROXY</i> in 
        /etc/make.conf oder als Umgebungsvariable aktiviert werden
        </p>
	<p>
	Im Folgenden ein Beispiel:
	</p>

<pre>
RSYNC_PROXY="192.168.1.1:8080"
</pre>

	<note>
        Sollten Sie hinter einer Firewall sitzen und Rsync scheint Ihren HTTP 
        Proxy nicht nutzen zu k&#246;nnen, k&#246;nnen Sie Ihren Portage Tree durch einen 
        Snapshot Tarball updaten. Diesen k&#246;nnen Sie von <uri>http://www.ibiblio.org/gentoo/snapshots/</uri> 
        herunterladen.
	</note>

</body>
</section>

<section>
<title>Verschiedene Optionen</title>
<body>
	<p>Die folgenden Optionen k&#246;nnen f&#252;r einige Nutzer sinnvoll sein:</p>

	<ul>
	<li><i>NOCOLOR</i> : Erlaubt es dem Benutzer, das Verwenden von Farben bei Ausgaben von emerge zu deaktivieren.</li>
	<li><i>CLEAN_DELAY</i> : Dadurch verz&#246;gert Portage das Entfernen von Paketen, um Nutzern die M&#246;glichkeit zum Abbruch zu geben. Diese Zeit kann hier angegeben werden. Um das Verz&#246;gern zu verhindern, sollte die Zeit auf "0" gestellt werden.</li>
	</ul>

</body>
</section>

</chapter>

<chapter>
<title>Paketmanagement</title>

<section>
<title>Updaten des Portage Trees</title>
<body>
	<p>
        Der Portage Tree, welcher in /usr/portage liegt, enth&#228;lt die Bibliothek der 
        "Bauanleitungen" f&#252;r verschiedene Pakete (sogenannte <i>ebuilds</i>). Dar&#252;ber 
        hinaus enth&#228;lt der Tree auch noch Informationen aus dem Profil und der Datei 
        package.mask, welche wichtig sind, um das System aktuell zu halten. Um 
        immer die aktuellsten Versionen und neuesten Bugfixes zu haben, ist es wichtig 
        den Tree regelm&#228;&#223;ig mit dem offiziellen Tree abzugleichen. Sie k&#246;nnen den 
        Portage Tree mittels folgendem Kommando updaten:
	</p>
<pre>
emerge rsync
</pre>
	<p>
        Die Methode, welche von Portage genutzt wird, kann ge&#228;ndert werden. Schauen Sie 
        unter <i>Portage SYNC Einstellungen</i> im Kapitel <i>Portage konfigurieren</i> 
        nach, um weitere Informationen zu erhalten.
	</p>
</body>
</section>

<section>
<title>Pakete installieren (mergen)</title>
<body>
	<p>
        Der Vorgang des Kompilierens und Installierens eines Paketes durch Portage wird 
        als <i>mergen</i> bezeichnet. Portage kompiliert Pakete und installiert diese 
        kurzfristig in ein "Abbild-Verzeichnis", in dem es die zu installierenden Dateien 
        aufzeichnet. Diese Dateien werden dann aus dem "Abbild-Verzeichnis" ins Root (/) 
        Dateisystem integriert (gemerged).
	</p>
	<p>
        Das <i>emerge</i> Kommando dient als Front-End des Portage Systems. Das Installieren 
        und Entfernen von Paketen wird durch dieses Kommando und seine unz&#228;hligen Argumente 
        kontrolliert.
	</p>
	<p>
        Um die neueste, unmaskierte Version eines Paketes zu installieren, geben Sie einfach 
        den Paketnamen, wie folgt ein (Beispiel):
	</p>
<pre>
emerge galeon
</pre>
	<p>
        Dieses Kommando wird zun&#228;chst alle ben&#246;tigten Abh&#228;ngigkeiten (bereits alle USE 
        Einstellungen ber&#252;cksichtigt) und dann die neueste und unmaskierte Version von 
        Galeon kompilieren und installieren. Galeon k&#246;nnte auch mit vollem qualifizierten 
        Namen inklusive Kategorie angegeben werden: <i>net-www/galeon</i>
	</p>
	<p>
        Das <i>emerge</i> Kommando akzeptiert auch die Angabe von direkten Ebuild Dateien. 
        Dies erlaubt dem Nutzer auch &#228;ltere Versionen einers bestimmten Paketes oder
        Ebuilds einer dritten Partei zu installieren. Das Folgende ist ein Beispiel:
	</p>
<pre>
emerge /usr/portage/net-www/galeon/galeon-1.2.0-r3.ebuild
</pre>
	<p>

        Zus&#228;tzlich zum angeben eines Paketnamens oder einer Ebuild Datei, unterst&#252;tzt 
        <i>emerge</i> verschiedene weitere Argumente. Eines dieser Argumente ist 
        <i>--pretend</i>, vielleicht eines der n&#252;tzlichsten. Durch dieses Argument 
        wird das geplante Vorgehen nicht durchgef&#252;hrt. Stattdessen gibt Portage eine 
        Liste aller zu installierenden Pakete aus. Das Folgende zeigt eine Auflistung 
        der Pakete, die w&#228;hrend der Installation der neuesten Version des 
        Kdevelop Paketes installiert w&#252;rden:
	</p>

<pre>
root@kodiak blocke # emerge --pretend kdevelop

These are the packages that I would merge, in order.

Calculating dependencies ...done!
[ebuild  N   ] kde-base/kdelibs-2.2.2-r4 to /
[ebuild  N   ] dev-util/kdbg-1.2.2 to /
[ebuild   U  ] app-text/psutils-1.17 to /
[ebuild   U  ] app-text/a2ps-4.13b-r3 to /
[ebuild   U  ] app-text/jadetex-2.20 to /
[ebuild  N   ] app-text/sgmltools-lite-3.0.3-r2 to /
[ebuild  N   ] kde-base/kdoc-2.2.2-r1 to /
[ebuild  N   ] net-www/htdig-3.1.5-r2 to /
[ebuild  N   ] app-text/enscript-1.6.3-r1 to /
[ebuild  N   ] kde-base/kdebase-2.2.2-r2 to /
[ebuild  N   ] app-doc/qt-docs-2.3.1 to /
[ebuild  N   ] dev-util/kdevelop-2.0.2 to /
</pre>

        <p>
        Mit <i>N</i> gekennzeichnete Pakete sind noch nicht auf ihrem Rechner installiert, 
        w&#252;rden aber durch die angegebene Aktion eingespielt werden.
        Pakete, die mit einem <i>U</i>
	gekennzeichnet sind, befinden sich bereits installiert auf
	Ihrem System (wobei es sich h&#246;chstwahrscheinlich um veraltete
	Pakete handelt) und werden durch diese Aktion aktualisiert.
	</p>
	<p>
	Folgende Parameter sind ausserdem Verf&#252;gbar:
	</p>
	<p>
	<i>--fetchonly</i> : L&#228;d alle ben&#246;tigten Dateien herunter, die
	f&#252;r das Kompilieren notwendig sind, sowie alle Abh&#228;ngigkeiten,
	die dadurch entstehen.
	</p>
	<p>
	<i>--emptytree</i> : Diese Option l&#228;sst Portage vort&#228;uschen,
	dass keine der Abh&#228;ngigkeiten oder Pakete auf denen das zu installierende
        Paket beruht installiert sind.

	Dies l&#228;sst sich sehr gut Option <i>--pretend</i> verbinden, um eine komplette
	Liste der Abh&#228;ngigkeiten f&#252;r jedes einzelne Paket anzeigen
	zu lassen. Alle Abh&#228;ngigkeiten mit Ausnahme von Glibc werden dargestellt.
	</p>

	<p><i>--nodeps</i> : Mit dieser Option versucht Portage nur die angegebene Pakete
        zu "mergen" und ignoriert s&#228;mtliche Abh&#228;ngigkeiten. Bitte beachten Sie,
        dass diese Option zu Problemen f&#252;hren kann, wenn Sie die Pakete, von welche
        das jeweilige Paket abh&#228;ngig ist, nicht bereits installiert haben.
        </p>
	<p><i>--onlydeps</i> : Mit dieser Option ist es m&#246;glich, nur die Abh&#228;ngigkeiten
        des jeweiligen Paketes zu "mergen", jedoch <u>nicht</u> das ausgew&#228;hlte Paket selbst.
        </p>
	<p><i>--noreplace</i> : Wenn Sie Pakete zum "mergen" angeben, die bereits installiert
        sind, Sie jene aber nicht durch neue ersetzen wollen, hilft Ihnen diese Option weiter.
	</p>
	<p><i>--usepkg</i> : Anstatt das angegebene Paket zu kompilieren, versucht Portage
        mit dieser Option ein vorkompiliertes tbz2 Paket von einem angegebenen Platz zu 
        installieren . Jener Platz ist in der PKGDIR Shellumgebungsvariable anzugeben.
        </p>
	<p><i>--debug</i> : Um eine noch detailiertere Ausgabe zu bekommen, was w&#228;hrend
        der Aktion mit Portage passiert, benutzen Sie diese Option. Normalerweise werden Ausgaben
        "menschlich lesbarer" dargestellt. So haben Sie zum Beispiel als Entwickler die
        M&#246;glichkeit, syntaktische Fehler in Bash Script basierten ebuild Dateien zu
        erruieren.
	</p>
	<p><i>--autoclean</i> : Zwingt <i>emerge</i> zum totalen Bereinigen von
        spezifischen Tempor&#228;rverzeichnissen f&#252;r Kompiliervorg&#228;nge, bevor das
        Paket kompiliert wird. Portage erledigt dies bei standard Konfiguration von
        selbst, dadurch ist diese Option nur f&#252;r Entwickler interessant, die dieses
        Verhalten abgeschaltet haben.
	</p>
	<p><i>--verbose</i> : Sagt <i>emerge</i>, dass es im ausf&#252;hrlichen Modus
        laufen soll. Derzeit verursacht diese Option nur GNU Info Fehler-Meldungen.
        Diese k&#246;nnen jedoch von Benutzer ohne Weiteres ignoriert werden.
	</p>
</body>
</section>

<section>
<title>"Unmergen" (Deinstallieren) von Paketen</title>
<body>
	<p> Der Vorgang des "unmergens" ist, das die Dateien, die mit einem
        installierten Paket verbunden sind, gel&#246;scht werden. Damit ist
        die Software vom System entfernt und kann nicht mehr benutzt werden,
        bis Sie jenes Paket wieder "mergen".
	</p>
	<p>Pakete werden mittels des <i>emerge</i> Befehls und dem Parameter
        <i>unmerge</i>, gefolgt vom Namen des Paketes entfernt. Das folgende
        Beispiel beseitigt alle installierten Versionen vom <i>ltrace</i>
        Paket.
	</p>

<pre>
emerge unmerge ltrace

oder

emerge unmerge dev-util/ltrace
</pre>
	<p>Portage erlaubt ausserdem das "unmergen" von ganz spezifischen
        Versionen eines Paketes. Regul&#228;re Ausdr&#252;cke werden durch
        <i>=</i> (exakte version), <i>&lt;</i> (kleiner als), <i>&gt;</i>
        (gr&#246;sser als), <i>&lt;=</i>(kleiner als oder gleich), und
        <i>&gt;=</i> (gr&#246;sser als oder gleich) dargestellt.
        Das folgende Beispiel w&#252;rde alle Versionen, die gleich und &#228;lter
        des Paketes ltrace in der Version 0.3.15 sind, "unmergen".
	</p>

<pre>
emerge unmerge \&lt;=dev-utils/ltrace-0.3.15
</pre>

	<p>Wenn Sie regul&#228;re Ausdr&#252;cke f&#252;r Pakete
        benutzen, so stellen Sie sicher, das Sie jeweils f&#252;r die
        Zeichen <i>&gt;</i> und <i>&lt;</i> ein Backslash davorsetzen,
        so das Ihre Shell in diesem Fall dies nicht falsch interpretiert.
        Ausserdem ist es von N&#246;ten, die Kategorie des Paketes,
        wie im Beispiel gezeigt, anzugeben. F&#252;r andere regul&#228;re
        Ausdrucksbeispiele, f&#252;hren Sie den Befehl <i>emerge --help</i>
        aus.
	</p>

	<warn>Das "unmergen" von Paketen kann gef&#228;hrlich sein.
        Wenn Sie ein Paket des Grundsystems entfernen, verliert Ihr
        System an Funktionalit&#228;t und bei entfernten Bibliotheken
        droht funktionsunt&#252;chtige Software.
        
	<b>Portage warnt Sie nicht, wenn Sie Pakete des Grundsystems
        oder gar Abh&#228;ngigkeiten anderer Pakete entfernen.</b>
	</warn>

	<p>Wenn das zu entfernende Paket tats&#228;chlich installiert
        ist, wird das Programm emerge exakt anzeigen, welche Pakete
        entfernt werden und wartet eine gewisse Anzahl an Sekunden ab,
        um den Benutzer die M&#246;glichkeit zu geben, den Vorgang
        mittels der Tastenkombination Control-C abbzubrechen.
	</p>
	<p>
        Beginnt erstmal der Vorgang des "unmergens", sehen Sie eine
        lange Liste von Dateinamen, die mit dem Paket verbunden sind.
        Manche dieser Dateinamen haben ein Merkmal (flag), das an
        der linken Seite der Datei angezeigt wird. Die Merkmale
        <i>!mtime</i>, <i>!empty</i>, und <i>cfg</i> verdeutlichen,
        weshalb einige Dateien nicht entfernt worden sind, als das
        Paket "unmerged" wurde.

        Dateien ohne jegliche Merkmale wurden erfolgreich vom System
        entfernt.
	</p>
	<p>Das Merkmal <i>!mtime</i> sagt aus, dass die Datei ge&#228;ndert
        worden ist, nachdem das Paket installiert wurde. Das bedeutet, dass
        jemand nach dem "mergen" des Paketes diese Datei bearbeitet hat oder
        zu einem sp&#228;teren Zeitpunkt andere Pakete es &#252;berschrieben haben. 
        Dies erlaubt es, dass Pakete aktualisiert werden k&#246;nnen, 
        ohne die Gefahr, dass wichtige Dateien entfernt werden.
	</p>
	<p>Das Merkmal <i>!empty</i> weist auf Verzeichnisse hin, welches
        Portage verbietet, diese zu entfernen, da sie nicht leer sind
        (Mehrere Pakete teilen sich oft das selbe
        Verzeichniss, welches das Paket, was "unmerged" wird, entweder
        selbst angeh&#246;rt oder ebenfalls benutzt).

        Der Konfigurationsdatei Schutz-Mechanismus tritt dann ein, wenn
        Sie das <i>cfg</i> Merkmal sehen. Das bedeutet, ein neueres
        Paket, was installiert werden w&#246;rde, &#252;bernimmt den Besitz
        jener Konfigurationsdateien und Portage verweigert die Entfernung
        dieser Dateien.
	</p>
	<warn>
        Dateien werden immer dem letzten installierten Paket zugeordnet.
        Dies ist abh&#228;ngig von der Reihenfolge der Installation und
        unabh&#228;ngig von der aktuellen Versions- oder Revisionsnummer
        der Pakete, die installiert sind. Wenn ein Paket eine Datei besitzt, 
        wird diese immer mit deinstalliert, auch wenn eine &#228;ltere Version eines 
        Paketes diese Datei installiert hat, solange der Nutzer diese Datei 
        nicht manuell ge&#228;ndert hat.
        </warn>

</body>
</section>

<section>
<title>System Update</title>
<body>
<p>
Portage unterst&#252;tzt die M&#246;glichkeit, alle installierten Pakete mit einem einzigen Befehl zu aktualisieren. Das System-Update-Feature erm&#246;glicht es ihnen, die Kernpakete ihres Systems zu Versionen zu aktualisieren, die von den Gentoo-Entwicklern empfohlen werden und zum einwandfreien Betrieb von Gentoo Linux notwendig sind. Ein System-Update aktualisiert keine Pakete, die nicht als essenziell angesehen werden. Nur die Pakete, die im Portage Profil angegeben sind, werden als absolut wichtig f&#252;r den Betrieb und die Aufrechterhaltung des Systems erachtet
</p>
<p>
Um ein System-Update zu starten, geben sie den folgenden Befehl ein:
</p>
<pre>
emerge --update system
</pre>
<p>
Portage wird nun, abh&#228;ngig von den Versionen und Paketen, welche sie derzeit installiert haben, die Updates &#252;bersetzen und installieren, die vom aktuellen Portage-Profil empfohlen werden. Sie haben die M&#246;glichkeit sich mit der Option <i>--pretend</i> eine Liste mit den Paketen die installiert bzw. aktualisiert werden, ausgeben zu lassen, wenn das oben gezeigte Beispiel ausgef&#252;hrt w&#252;rde.
</p>
<note>
Wie sie aus der Gentoo-Installationsanleitung erfahren k&#246;nnen, ist einer der ersten Schritte der Befehl <i>emerge system</i>, um das Grundsystem zu installieren. Mit <i>emerge --update system</i> werden diese Basispakete auf den aktuellsten Stand gebracht.
</note>
</body>
</section>

<section>
<title>World Update</title>
<body>
<p>
Portage unterst&#252;tzt au&#223;erdem die M&#246;glichkeit, alle nicht-essenziellen Pakete mit einem einzigen Befehl zu aktualisieren. Das Portage-System besitzt daf&#252;r einen gewissen Grad an "Intelligenz", die es erm&#246;glicht, ein System mit verschiedene Versionen von Paketen, die in Konflikt zueinander stehen, sicher zu aktualisieren .
</p>
<p>
Das world-update-Feature von Portage &#252;berpr&#252;ft das Systemprofil, die Liste der blockierten Pakete (<i>package.mask</i>), das world-Profil und die Abh&#228;ngigkeiten (inkl. Versionkontrolle) von Paketen die im world-Profil stehen. Dadurch findet es heraus, welche Pakete aktualisiert werden m&#252;ssen. Ein Paket wird nur aktualisiert, wenn es eine neue Version gibt und das Paket im world-Profil aufgef&#252;hrt wird oder ein anderes Paket, das im world-Profil steht von ihm abh&#228;ngt. Selbstverst&#228;ndlich darf das Paket oder eine spezielle Version dessen nicht durch das Systemprofil oder die <i>package.mask</i> blockiert sein.
</p>

<p>
Portage versucht nun alle Pakete, die im world-Profil aufgef&#252;hrt sind auf die neuste verf&#252;gbare und unblockierte Version zu aktualisieren. Desweiteren &#252;berpr&#252;ft Portage auch die Abh&#246;ngigkeiten von jedem Paket im world-Profil und wird versuchen diese auf die neuste Version zu aktualisieren. Dabei wird eine Versionkontrolle durchgef&#252;hrt, so dass die Versionhierachie gewahrt bleibt. Au&#223;erdem d&#252;rfen diese Pakte weder durch das Systemprofil noch durch <i>package.mask</i> blockiert sein. Schlie&#223;lich werden auch noch die <i>SLOTS</i> &#252;berpr&#252;ft, die in einem vorangegangenen Kapitel besprochen wurden.
</p>

<p>
Benutzer, die andere Distributionen und ihre Paket-Management-Systeme neben Portage kennen, sind vielleicht etwas dar&#252;ber verwirrt, dass Portage nicht nur ein blindes Aktualisieren der Pakete vornimmt, einfach nur anhand der Versionsnummern (Wie es bis Gentoo 1.0 gehandhabt wurde).
</p>

<p>
Viele der Pakete die in Gentoo's Portage-Tree sind, stehen in verschiedenen Versionen zur Verf&#52;gung. Eine &#228;ltere oder neuere Version eines Paketes kann mit der Software, die auf sie aufbaut inkompatibel sein. Blindes Aktualisieren von Bibliotheken und Programmen, ohne R&#252;cksicht darauf, dass sie von anderen Paketen gebraucht werden, kann schnell zu vielen schwerwiegenden Problemen f&#252;hren. Um dies zu verhindern l&#228;sst Portage beim Aktualisieren Vorsicht walten und bezieht die Abh&#228;ngigkeiten aller Pakete, basierend auf den Angaben in den einzelnen ebuilds, mit ein.
</p>

<p>
Das Herz von Portage's-World-Update ist das world-Profil. Anders als das System-Profil, welches nur von den Entwicklern definiert wird und nie vom Benutzer ver&#228;ndert werden sollte, wird das World-Update-Profil indirekt mit der Zeit durch Aktionen des Benutzers erstellen. Das world-Profil funktioniert in etwa wie eine "Favoriten-Liste". Pakete die vom Benutzer manuell mit Hilfe von <c>emerge</c> installiert werden, werden in der Datei <i>world</i> aufgezeichnet. Diese Datei findet sich unter <path>/var/cache/edb/world</path>. Portage macht dies, da sie ihm  mitgeteilt haben es zu installieren (per emerge) und es annimmt, dass sie ein Interesse daran haben, das Paket immer auf dem aktuellsten Stand zu halten.
</p>

<p>
Die Datei <i>world</i> besteht aus einem Paketnamen mit Kategorie pro Zeile und sollte in etwa wie folgt aussehen:
</p>

<pre>
net-im/gaim
net-www/skipstone
net-www/galeon
app-editors/vim
app-text/ispell
net-mail/evolution
dev-util/ltrace
sys-apps/xfsprogs
=net-www/mozilla-0.9.8-r3
sys-apps/attr
sys-apps/dmapi
sys-kernel/linux-sources
sys-apps/acl
app-office/gnucash
app-cdr/xcdroast
</pre>

<p>
Nahezu alle Eintr&#228;ge in diesem Beispiel wurden von Portage automatisch hinzugef&#252;gt, als der Benutzer eines der Pakete manuell "ein-merge-te". Diese Pakete werden aktualisiert, wenn eine neuere Version verf&#252;gbar ist.
</p>

<note>
Um Zeit zu sparen und sicher zu stellen, dass alle Ihre bevorzugten Pakete aktuell gehalten werden, k&#246;nnen Sie die Datei <i>world</i> selbst bearbeiten und so Eintr&#228;ge f&#252;r diese Pakete hinzuf&#252;gen. Wenn Sie eine &#228;lteren Version von Portage aktualisieren, m&#252;ssen sie das world-Profil erstellen und dem System bekannt machen. Bei aktuellen Installationen von Gentoo und Portage sollte das world-Profil w&#228;rend der Installation erzeugt werden.
</note>
	
<p>
Ein interessanter Eintrag ist der f&#252;r das Mozilla-Paket (<i>=net-www/mozilla-0.9.8-r3</i>). Dieser Eintrag wurde von Hand hinzugef&#252;gt, um eine exakte Version festzulegen. Paketeinschr&#228;nkungen, wie sie im Abschnitt "Unmergen (Deinstallieren) von Paketen" in diesem Handbuch besprochen wurden, k&#246;nnen dazu verwendet werden Portage zu zwingen nur spezielle Versionen beim Aktualisieren von Paketen zu verwenden. Der obige Eintrag hat z.B. den Effekt, dass Portage auf das Paket mozilla-0.9.8-r3 als einzig verf&#252;gbare Version festgelegt ist. Somit wird es dieses Paket im Verlaufe eines World-Update nie aktualisieren.
</p>	
	
<p>World-Updates werden durch den folgenden Befehl gestartet:</p>

<pre>
emerge --update world
</pre>

<p>
Portage wird nun versuchen alle Pakete die in der Datei <i>world</i> stehen und (wenn n&#246;tig) deren Abh&#246;ngigkeiten aktualisieren. Abh&#246;ngigkeiten werden auf die neuste verf&#252;gbare Version, die vom zu aktualisierenden Paket gebraucht wird, gebracht. Pakete die nicht in der Datei <i>world</i> aufgef&#252;hrt sind und keine Abh&#246;ngigkeiten von den voher genannten Paketen sind, werden nicht aktualisiert.
</p>

<warn>
Portage wird keine Dateien in Verzeichnissen &#252;berschreiben, die durch die "Configuration File Protection" (Schutz von Konfigurationsdateien) gesch&#252;tzt sind. Es ist notwendig, dass Sie selbst die Unterschiede zwischen Ihren bestehenden und den neuen Dateien, die von Portage generiert wurden, ausgleichen. Wenn Sie Ihre Konfigurationsdateien nicht aktualisieren, werden verschiedene Programme nicht mehr funktionieren. Bitte schauen sie f&#252;r weitere Informationen unter "Schutz der Konfigurationsdateien" im Kapitel "Portage konfigurieren" nach oder benutzen sie den Befehl <i>emerge --help config</i>.
</warn>

<p>
Um eine Liste mit den Paketen zu bekommen, die von einem World-Update betroffen w&#228;ren, k&#246;nnen sie das Argument <i>--pretend</i> verwenden, so wie es bereits in einem vorangegangen Abschnitt in diesem Kapitel besprochen wurde.
</p>

<note>
Durch ein World-Update wird gleichzeitig auch ein System-Update durchgef&#252;hrt. Au&#223;erdem k&#246;nnen Kernpakete nicht auf Versionen in <i>world</i> festgelegt werden, da sie vom aktuellen Portage-Profil immer &#252;berschrieben werden!
</note>

<p>
Ein praktischer Nebeneffekt der Art wie World-Update arbeitet, ist f&#252;r Benutzer interessant, die ein komplettes neu-&#220;bersetzen aller installierten Pakete auf einem System w&#252;nschen. Da World-Update alle Pakete und deren Abh&#228;ngigkeiten, die in der Datei <i>world</i> stehen aktualisiert, gibt einem die Option <i>--emptytree</i> die M&#246;glichkeit ein Neu&#252;bersetzung s&#228;mtlicher Pakete und aller Abh&#228;ngigkeiten - mit Ausnahme der glibc - zu erzwingen. Das ist z.B. f&#252;r Leute n&#252;tzlich, die ihre Compiler-Optionen oder ihre USE-Variablen ge&#228;ndert haben und wollen, dass diese Ver&#228;nderungen von der gesamten Software die sie benutzen verwendet wird - ohne das sie nun jedes Paket selbst erneut "ein-mergen" m&#252;ssen. Dazu m&#252;ssen sie einfach die Datei <i>world</i> mit allen Paketen, die sie verwenden auff&#252;llen und den folgenden Befehl verwenden:
</p>

<pre>
emerge --update world --emptytree
</pre>

<p>
Sie k&#246;nnen die Option <i>--pretend</i> mit diesem Befehl verwenden, um eine Liste mit den Paketen, welche neu-&#220;bersetzt w&#252;rden, zu bekommen. 
</p>
</body>
</section>

<section>
<title>System aufr&#228;umen</title>
<body>

<p>
Portage hat die F&#228;higkeit verschiedene Versionen eines Paketes parallel zu installieren. Es gibt einige Pakete in Gentoo's Portage-Tree die diese Funktion nutzen (z.B. zur Kompatibilit&#228;tssicherung, wenn &#228;ltere Programme mit neueren Versionen inkompatibel sind).
</p>

<p>
Denken Sie daran, dass wenn eine neuere Version eines Paketes installiert wird, in den meisten F&#228;llen ein Gro&#223;teil des &#228;lteren Paketes &#252;berschrieben wird und alles was zur&#252;ckbleibt sind einige Dokumentationsdateien und andere, f&#252;r das System unwichtige. Mit der Zeit k&#246;nnen diese "Dateileichen" sehr viel Festplattenplatz verschwenden.
</p>

<p>
Um dies zu verhindern bietet Portage einen einfachen Weg an, R&#252;ckst&#228;nde veralteter Dateiversionen vom Benutzersystem zu entfernen. Diese Funktionalit&#228;t ergibt sich aus der emerge-Option <i>clean</i> und kann folgenderma&#223;en benutzt werden:
</p>

<pre>
emerge clean
</pre>

<p>
<i>emerge</i> wird nun eine Liste ausgeben mit Paketrevisionen und -versionen die entfernt werden und die Versionen die erhalten bleiben. Au&#223;erdem gibt es dem Benutzer Zeit, die Aktion mit STRG+C abzubrechen. Auf einem normalen System werden nun eine Vielzahl von Aktionen durchgef&#252;hrt, die lange Listen mit Dateien die entweder gel&#246;scht oder erhalten wurden, ausgibt.
</p>

<p>
Naheliegenderweise wird Portage die Aufr&#228;umaktion auf die Datei <i>world</i> (alle installierten Pakete) anwenden. Sie k&#246;nnen den Umfang der S&#228;uberung durch Optionen wie <i>world</i>, <i>system</i>, eine Liste von Paketnamen oder eine Einschr&#228;nkung auf Paketversionen, wie es im Abschnitt "Unmerge" in diesem Kapitel besprochen wurde, beeinflussen.
</p>

<p>
Beim Herausfinden, welche Paketversionen entfernt werden sollten, &#252;berpr&#252;ft Portage die verschiedenen Profile, die Beziehungen zu anderen Paketen und den SLOT eines Paketes. Vorausgesetzt dass alle Paketabh&#228;ngigkeiten f&#252;r alle Pakete richtig definiert sind, wird <c>emerge clean</c> nur veraltet Pakete vom System entfernen und nicht solche, deren Entfernung die Funktionalit&#228;t des Systems einschr&#228;nken w&#252;rde.
</p>
</body>
</section>

<section>
<title>Pakete s&#228;ubern</title>
<body>
<p>
Portage bietet au&#223;erdem die Funktion ein Paket zu s&#228;ubern (engl. <i>prune</i>). <i>prune</i> ist eine unsichere Variante von <i>clean</i>. Es entfernt alle Versionen aller Pakete, ausgenommen der zuletzt installierten Version. Es f&#252;hrt nur wenige &#220;berpr&#252;fung aus, die <i>clean</i> durchf&#252;hrt und kann grundlegende Abh&#228;ngigkeiten von Ihrem System entfernen! Wenn Sie diese Option nutzen, k&#246;nnen sie sehr schnell ihr System unbrauchbar machen. Somit wird diese Variante nicht empfohlen und sollte nur in wenigen Ausnahmenf&#228;llen verwendet werden.
</p>

<p>
Die Aktion <i>prune</i> akzeptiert die selben Optionen wie die Aktion <i>clean</i> und kann wie folgt angewendet werden:
</p>

<pre>
emerge prune
</pre>
</body>
</section>


<section>
<title>Den Portage-Tree durchsuchen</title>
<body>
<p>
Portage-Tress, wie jener der das Herzst&#252;ck von Gentoo Linux bildet k&#246;nnen sehr gro&#223; sein. Der Befehl <i>emerge</i> bietet eine Suchfunktion an, welche Suchanfragen in Form eines regul&#228;ren Ausdrucks, dieser muss von Anf&#252;hrungszeichen eingeschlossen sein, akzeptiert. Regul&#228;re Ausdr&#252;cke sind sehr komplizierte Biester und Anwendern die sich daf&#252;r interessieren, sei ein gutes Buch zum Thema empfohlen.
</p>

<p>
Die meisten einfachen Suchen k&#246;nne ohne Wissen, wie ein regul&#228;rer Ausdruck zu bilden ist durchgef&#252;hrt werden. Das folgende ist ein Beispiel f&#252;r eine einfache Suche nach einem Paket, das "gcc" hei&#223;t oder "gcc" im Namen hat:
</p>

<pre>
emerge search gcc
</pre>

<p>
F&#252;r jeden Treffer gibt der Befehl den Paketnamen, die neuste Version, die neuste installierte Version, seine Homepage und eine Beschreibung &#252;ber die Software im Paket aus.
</p>

</body>
</section>

<section>
<title>Hilfe erhalten</title>
<body>
<p>
Mehr Informationen &#252;ber die zahlreichen Optionen und Aktionen die <i>emerge</i> unterst&#252;tzt, erhalten Sie durch die Eingabe von:
</p>

<pre>
emerge --help
</pre>
</body>
</section>
	
		

<section>
<title>N&#252;tzliche Werkzeuge</title>
<body>
<p>
Verschiedenste Werkzeuge wurden von Gentoo-Nutzern erstellt, um das Leben mit <i>emerge</i> zu erleichtern. Diese Werkzeuge sind im Paket <i>app-admin/gentoolkit</i> im Gentoo-Portage-Tree zu finden.
</p>

	<p>
	<ul>
	<li><i>etc-update</i> : Shell-Skripte f&#252;r <i>vim</i>, die dabei helfen die Dateien in <path>/etc</path> abzugleichen (es ist gef&#228;hrlich diese falsch zu verwenden!)</li>
	<li><i>qpkg</i> : Werkzeug f&#252;r Datenbankanfragen</li>
	<li><i>epm</i> : ein weiteres Anfragewerkzeug f&#252;r die Datenbank mit RPM-&#252;hnlicher Syntax</li>
	</ul>
	</p>
</body>
</section>


</chapter>

</guide>

