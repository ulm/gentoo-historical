<?xml version='1.0'?>

<!DOCTYPE guide SYSTEM "../../../dtd/guide.dtd">

<guide>
<title>Gentoo Sparc/Sparc64 Linux Installation Guide</title>
<author title="Maintainer"><mail link="murphy@gentoo.org">Maarten Thibaut</mail></author>
<author title="Editor"><mail link="atom.stephens@ohiou.edu">Adam Stephens</mail></author>

<abstract>This is a guide for installing Gentoo Linux on a Sparc32 or Sparc64 based
machine. </abstract>

<version>0.3</version>
<date>17 Jun 2002</date>

<chapter>
<title>About this Guide and Sparc/Sparc64 Gentoo Linux</title>
<section>
<title>Sparc specific notes, Please Read Carefully</title>
<body>
<p>
The latest version of these SPARC Installation notes are at
<uri>http://gentoo.org/doc/gentoo-sparc-install.html</uri>

This is an alpha release. Some things don't work yet. We hope to get
them fixed. The install process for sparc is almost, but not completely,
the same as for Gentoo x86. This document assumes that you already know
how to install Gentoo on a x86 system.
</p><p>
The x86 installation docs can be found at
</p>
<uri>http://www.gentoo.org/doc/build.html</uri>.
<p>
For fixes, patches please use the BugZilla system at
<uri>http://bugs.gentoo.org/enter_bug.cgi</uri>
</p><p>
Nearly everything in this release is in some way borrowed from
existing open source projects: <uri link="http://www.debian.org">Debian</uri>, <uri link="http://www.rocklinux.org/">Rock Linux</uri>, <uri link="http://aurora.linuxpower.org/">RedHat (Aurora)</uri> and
<uri link="http://www.slackware.com/ports/sparc/">Slackware for Sparc</uri>, <uri link="http://gcc.gnu.org/">egcs</uri>, <uri link="http://silo.sourceforge.net/">SILO</uri> and many others. Thanks to all of you!
<p></p>
<p>
Our sparc port team is still in its infancy. Join us at irc.openprojects.net #gentoo and
#gentoo-sparc on irc.openprojects.net. Be patient as we may not be very responsive.
There is a <uri link="http://lists.gentoo.org/mailman/listinfo/gentoo-sparc">mailing list</uri>too. 
</p><p>
General Linux sparc information including a very good FAQ can be found
at <uri link="http://www.ultralinux.org/">http://www.ultralinux.org/</uri>.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Installation Instructions</title>
<section>
<body>
<p>
I advise you to use a working debian or other Linux port to install your
Gentoo sparc machine. Either a netboot or an existing Linux install will do.
</p><p>
An exhaustive Debian SPARC install guide can be found here. If all else fails
use it to install a Debian Linux on your sparc machine and then go to <uri link="#doc_chap5">Step 3</uri>.
</p><p>
	<uri>http://www.debian.org/releases/stable/sparc/install</uri>
</p>
</body>
</section>
</chapter>
<chapter>
<title>System Requirements</title>
<section>
<title>Space Requirements</title>
<body>
<p>
A typical install of Gentoo sparc uses about 500-1000 MB. Gentoo sparc itself
uses about 450 MB for a complete bootstrap. This is reduced to about 150 after
building is complete. You probably don't want to make your root partition smaller
than 1 Gigabyte if you use only one partition.
</p>
</body>
</section>
<section>
<title>Currently NOT Tested (Information Welcome)</title>
<body>
<p>
* Multiprocessor machines. Support really depends on the kernel, these
platforms are the same as single CPU machines for our purposes. Boot
images typically have SMP disabled in order to reduce the kernel size.
</p><p>
* Enterprise class machines (E250/450/4500/...). Same difference.
</p>
</body>
</section>
<section>
<title>Kernel</title>
<body>
<p>
Always use a 64 bit kernels on a 64 bit machine. This includes Ultra 1, 2,
5, 10 and 60, the SunBlade series, E250/E450, E4*00, E6*00, E10K and
StarFire platforms. The <c>uname -m</c> output of these machines is "sparc64"
or "sun4u".
</p><p>
Always use 32 bit kernels on 32 bit platforms (sun4c, sun4d or sun4m).
These include the IPC/IPX, SparcStations, etc. The "uname -m" output should
be one of the following: "sparc", "sun4c", "sun4d" or "sun4m".
</p><p>
Currently we use the ARCH environment variable specified in
/etc/make.profile/make.defaults to determine the kernel architecture
to build. This is subject to change. It will probably change to a USE
switch such as <c>arch=sparc64</c>.
</p><p>
Stage 1 builds that are made on 64 bit machines should work fine on
sparc32 machines. The same goes for stage2 I think (not tested). I'll
try it out.
</p><p>
Some kernels have trouble booting with large amounts of memory.
Try removing some memory, that worked for me, or try a newer image.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Part 2: Booting</title>
<section>
<body>
<p>
There are three ways of booting:
</p><p>
<uri link="#doc_chap4_sect2">booting over the network, or netboot</uri>
<uri link="#doc_chap4_sect3">booting from an existing SILO boot loader</uri>
<uri link="#doc_chap4_sect4">booting from cdrom</uri>
</p><p>
Using an existing Linux system already on the machine's hard drive is the
easiest method as it will probably provide you with a complete Unix
environment and a working ethernet connection. In this case boot into
your Linux system as normal, mount the destination partition at <path>/mnt/gentoo</path>
and skip to <uri link="#doc_chap5">Step 3</uri>.
</p><p>
If using an already installed Linux is not possible, then use a <uri link="#doc_chap4_sect2">netboot</uri>.
</p>
</body>
</section>
<section>
<title>Netboot</title>
<body>
<p>
At the boot prompt, type:
</p>
<pre>
ok <i>boot net</i>
</pre>
<note>You'll need to have another machine on the same network to provide RARP
(to allow the client to determine its IP address) and TFTP service (to get
the kernel over the network).
</note>
<p>
You can find good documentation on the Debian Sparc pages:
</p><p>
<uri>http://www.debian.org/releases/stable/sparc/install</uri>
</p><p>
The SunBlades haven't been supported very long and you may have trouble
finding good boot images. You can get decent netboot images at:
</p><p>
<uri>http://auric.debian.org/~bcollins/disks-sparc/current/</uri>
</p><p>
Once booted, choose a disk to install on and configure the network.
When the debian woody install disk asks you to setup a kernel, go
down to <c>Execute a shell</c>.
</p><p>
If your debian install system is failing DNS requests then you
probably moved away the <path>/target/etc/resolv.conf</path> file, make sure it's
there because that's where the debian install disk expects it to be.
</p><p>
You can also use your current Linux to untar the contents of the stage 1
into a partition and then mount it from the boot command line:
</p>
<pre>
ok <i>boot net root=/dev/sda4</i>
</pre>
</body>
</section>
<section>
<title>Existing SILO</title>
<body>
<p>
Or you can use your already-installed SILO to boot it (press TAB once the
SILO: appears). Of course this means you won't be able to load kernel
modules but that might not be a problem as the default sparc kernel configs
enable most SPARC hardware drivers by default. You could use your already
installed Linux sparc machine to compile a kernel with all your drivers
compiled in statically.
</p>
<pre>
ok <i>boot</i>
SILO: <codenote>Press TAB here.</codenote> boot:
linux
boot: <i>vmlinux root=/dev/hda4</i>
</pre>
<p>
or this will boot the 4th partition on the first disk:
</p>
<pre>
boot: <i>4/vmlinux root=/dev/hda4</i>
</pre>
</body>
</section>
<section>
<title>CDROM</title>
<body>
<p>
Please try to use a download mirror if possible. ISO images are
extremely big.  Get the latest Gentoo ISO image from <uri>http://www.gentoo.org/~murphy/</uri>
and use cdrecord to burn it to your CD writer.  Boot the CD from
the ok prompt and choose the ramdisk option:
</p>
<pre>
ok <i>boot cdrom</i>
SILO:
...
boot: <i>ramdisk</i>
</pre>
<p>
Then mount the cdrom and chroot into the right root dir for
your platform:
</p>
<pre>
# <i>mount -t iso9660 -o ro /dev/cdroms/cdrom0 /mnt</i>
# <i>chroot /mnt/root-\`uname -m\` bin/bash</i>
# <i>source /etc/profile</i>
</pre>
<p>
>From here you have a rescue environment which you can use to
fix your system. You can also partition disks here and mount
them for installation.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Part 3: Installing gentoo</title>
<section>
<body>
<p>
If you used netboot to boot your system and allowed it to layout
your disks then the target will be mounted as <path>/target</path>. In this case
you may want to put a symlink from <path>/mnt/gentoo</path> to <path>/target</path> as the
documentation assumes <path>/mnt/gentoo</path>. If not, you should mount a
partition as <path>/mnt/gentoo</path> and use it to install on.
</p>
<note>if you have used Debian to boot your system, then

  partition your hard disk(s)
  configure your network
  execute a shell
</note>
<note>
about NFS

You can also do NFS mounts for the /usr/portage and /usr/distfiles
dirs if needed.

When using an NFS mounted /usr/distfiles, make sure it is writable
and let the system know about it:

# export DISTDIR=/usr/distfiles
</note>
<note>
An emerge bootstrap uses about 500MB to compile and 150 MB when finished.
If you want a complete system that can compile other stage1's you'll need
at least a gigabyte. This is including the distfiles.
</note>
<note>
You can use wget to download the stage1 from the gentoo site.
Warning, debian netboot images do not carry a /usr/bin/bzip binary
so you should get a .tgz instead (if available).
</note>
<pre>
# <i>cd /mnt/gentoo</i>
# <i>wget http://www.ibiblio.org/gentoo/releases/build/1.1a/stage1-sparc-1.1a.tbz2</i>
# <i>tar xvpfj stage1-sparc-1.1a.tbz2</i>		<codenote>Using .bz2</codenote>
# <i>tar xvpfz stage1-sparc-1.1a.tgz</i>		<codenote>Using .tgz</codenote>
# <i>cp /etc/resolv.conf etc/resolv.conf</i>

# <i>rm etc/make.profile</i>
</pre>
<note>
When using the CD-ROM, do (this is an example, don't just copy/paste!)
</note>
<pre>
# <i>fdisk /dev/hda</i>
# <i>mount -n /dev/hda2 /mnt/gentoo; cd /mnt/gentoo</i>
# <i>bunzip2 -c /stage1-sparc-1.1a-r1.tbz2 | tar xvpf -</i>
# <i>nano /etc/resolv.conf</i>
</pre>
<p>
Now edit make.conf and comment out any other definitions for these:
</p>
<pre>
<i>
CHOST="sparc-unknown-linux-gnu"
CFLAGS="-O3 -pipe"
CXXFLAGS="-O3 -pipe"
</i>
</pre>
<note>
For /etc/make.conf change :

SYNC="rsync://cvs.gentoo.org/gentoo-portage"

to

SYNC="rsync://rsync.gentoo.org/gentoo-portage"
</note>
<pre>
# <i>mount -o bind /proc proc</i>
# <i>chroot . bin/bash</i>
# <i>env-update</i>
# <i>source /etc/profile</i>
# <i>emerge rsync</i>
# <i>rm etc/make.profile</i>
</pre>
<p>
Select the right platform, for sparc64:
</p>
<pre>
# <i>uname -m</i>
sparc64
# <i>ln -s ../usr/portage/profiles/default-sparc64-1.0 etc/make.profile</i>
</pre>
<p>
Or for sparc:
</p>
<pre>
# <i>uname -m</i>
sparc
# <i>ln -s ../usr/portage/profiles/default-sparc-1.0 etc/make.profile</i>
</pre>
<p>
If starting with stage 1, run:
</p>
<pre>
# <i>scripts/bootstrap.sh</i>
</pre>
<p>
This may take a while. You now have a stage 2 Gentoo.
</p><p>
Then:
</p>
<pre>
# <i>emerge system</i>
</pre>
<p>
You now have a stage 3 Gentoo.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Part 4: Building a kernel</title>
<section>
<body>
<p>
On sparc64 platforms we'll need a compiler for 64bit targets:
</p>
<pre>
# <i>emerge egcs64-sparc</i>
</pre>
<p>
Next, get the Linux sources. At this time the Gentoo
sys-kernel/linux-sources package seems to contain some platform specific
patches which make it fail compilation. If you find out what's causing it
or better yet find a fix then please file a bug on our bugzilla.
</p><p>
So get the vanilla kernel and do the work yourself. Be careful, any
deviation from this will result in kernel compilation errors.
</p>
<pre>
# <i>cd /usr/src</i>
# <i>wget http://www.kernel.org/pub/linux/kernel/v2.4/linux-2.4.18.tar.bz2</i>
# <i>tar xvfj linux-2.4.18.tar.bz2</i>
# <i>mv linux linux-2.4.18</i>
# <i>ln -s linux-2.4.18 linux</i>
# <i>cd linux</i>
</pre>
<p>
Apply any kernel patches you want to apply at this time. Do not
apply the -ac series kernel patches on Sparc systems (they make the
system extremely unstable). XFS (the filesystem) is not supported
on Sparc for now.
</p>
<note>To fix: we may need additional fixes for Sparc platforms.</note>
<p>
Now get a .config file, I like tmpfs (a dynamic RAM filesystem, very
nice for machines with a lot of RAM) so I copy the file and enable
tmpfs like this. Well, you get the picture.
</p>
<pre>
# <i>sed -s 's/.*CONFIG_TMPFS.*/CONFIG_TMPFS=m/' \
	-s 's/.*CONFIG_DEVFS_FS.*/CONFIG_DEVFS_FS=y/' \
	-s 's/.*CONFIG_DEVFS_MOUNT.*/CONFIG_DEVFS_MOUNT=y/' \
	-s 's/.*CONFIG_EXT3_FS.*/CONFIG_EXT3_FS=y/' \
	arch/`uname -m`/defconfig \
	> .config</i>
</pre>
<p>
Or just copy the file:
</p>
<pre>
# <i>cp arch/`uname -m`/defconfig .config</i>
</pre>
<p>
The oldconfig step is required to set some links:
</p>
<pre>
# <i>make ARCH=sparc64 oldconfig dep clean vmlinux modules</i>
# <i>make modules_install</i>
</pre>
<p>
The kernel has to be smaller than 3.6 megabytes to "fit" in the memory
space SILO uses:
</p>
<pre>
# <i>ls -al vmlinux</i>
-rwxr-xr-x    1 root     root      3503075 Apr 20 21:42 vmlinux
</pre>
<p>
We need a straight GZIP for SILO.
</p>
<pre>
# <i>gzip -9 vmlinux</i>
# <i>cp vmlinux.gz /boot/vmlinuz-2.4.18</i>
# <i>ln /boot/vmlinuz-2.4.18 /vmlinuz</i>
</pre>
<p>
If you haven't setup SILO on this disk and you want to boot from it:
</p>
<pre>
# <i>emerge silo</i>
# <i>nano /etc/silo.conf</i>
# <i>silo</i>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Supported Hardware</title>
<section>
<body>
<p>
Warning: Most of these platforms have not been tested. Development is
done by the maintainer on SPARCtation 20 (sun4m), Ultra 10 (sun4u)
and SunBlade 100. Reports of (non-)working installations/platforms
are welcome on our mailing lists.
</p>
</body>
</section>
<section>
<title>Supported by the 32-bit UltraLinux project (sparc)</title>
<body>
<p>
<table>
<tr><th>* Sun4c architecture(*):</th></tr>
<tr><ti>    o SPARCstation SLC (4/20)</ti></tr>
<tr><ti>    o SPARCstation ELC (4/25)</ti></tr>
<tr><ti>    o SPARCstation IPC (4/40)</ti></tr>
<tr><ti>    o SPARCstation IPX (4/50)</ti></tr>
<tr><ti>    o SPARCstation/server 1 (4/60)</ti></tr>
<tr><ti>    o SPARCstation/server 1+ (4/65)</ti></tr>
<tr><ti>    o SPARCstation/server 2 (4/75)</ti></tr>
<tr><th>* Sun4d architecture:</th></tr>
<tr><ti>    o SparcCenter 2000</ti></tr>
<tr><th>* Sun4m architecture:</th></tr>
<tr><ti>    o SPARCclassic</ti></tr>
<tr><ti>    o SPARCstation LC (4/15)</ti></tr>
<tr><ti>    o SPARCstation LX (4/30)</ti></tr>
<tr><ti>    o SPARCstation 4</ti></tr>
<tr><ti>    o SPARCstation/server 5 (70, 85, 110, and 170(**) Mhz)</ti></tr>
<tr><ti>    o SPARCstation/server 10 (with most MBUS processor cards)</ti></tr>
<tr><ti>    o SPARCstation/server 20 (with most MBUS processor cards)</ti></tr>
<tr><ti>    o JavaStation 1 (***)</ti></tr>
<tr><ti>    o JavaStation 10 (***)</ti></tr>
<tr><ti>    o JavaStation E (***)</ti></tr>
<tr><ti>    o JavaEngine 1 (***)</ti></tr>
</table>
</p><p>
(*)   There are some kernel related memory management problems with sun4c. This
      is being worked on.
</p><p>
(**)  The 170MHz SPARC 5 (Also known as the TurboSPARC) is only supported in the
      newer kernel releases. There is not much active development, and UltraLinux
      on this processor is not very stable.
</p><p>
(***) See the related question further in this section.
</p><p>
<table>
<tr><th>* The following MBUS modules are known to work:</th></tr>
<tr><ti>    o SuperSPARC Model 20, 30, 40, 402, 41, 412, 51, 512, 514, 52, 54,61, 612, 71, 712, 81</ti></tr>
<tr><ti>    o All HyperSPARC modules</ti></tr>
<tr><ti>    o Cypress modules</ti></tr>
</table>
</p>
</body>
</section>
<section>
<title>Supported by the 64-bit UltraLinux project (sparc64)</title>
<body>
<p>
<table>
<tr><th>* Sun4u architecture:</th></tr>
<tr><ti>    o UltraSPARC Sbus based workstations: Ultra1, Ultra2, Ultra1 Creator, Ultra2 Creator</ti></tr>
<tr><ti>    o UltraSPARC Sbus based servers: Netra i, Enterprise 1, 2, 150</ti></tr>
<tr><ti>    o UltraSPARC Sbus based large servers: Enterprise 3000, 3500, 4000, 4500, 5000, 6000, 6500, 10000</ti></tr>
<tr><ti>    o UltraSPARC PCI based board computers: SPARCengine CP1400, CP1500 (*)</ti></tr>
<tr><ti>    o UltraSPARC PCI based workstations: Ultra30, UltraAXe, UltraAXi, UltraAXmp, Ultra5, Ultra10, Ultra60, Ultra80, SunBlade 100, SunBlade 1000</ti></tr>
<tr><ti>    o UltraSPARC PCI based servers: Netra X1(**), Netra T series(***), Enterprise 250, 450</ti></tr>
</table>
</p><p>
(*) These boards are known to work without any modifications, see also (***)
</p><p>(**) Currently completely supported except the embedded network interfaces.
</p><p>(***) See also Eric Browser's Sun Microsystems CP1400/CP1500/Netra-T1 Platform Support Document).
</p>
</body>
</section>
<section>
<title>Devices</title>
<body>
<p>
<table>
<tr><th>* SCSI:</th></tr>
<tr><ti>    o Sun/PTI Qlogic SCSi cards</ti></tr>
<tr><ti>    o SCSI/ether Sbus expansion cards</ti></tr>
<tr><ti>    o SCSI CD-ROM drives</ti></tr>
<tr><ti>    o SCSI Tape drives</ti></tr>
<tr><th>* 3rd party SCSI(*):</th></tr>
<tr><ti>    o NCR53c8xx</ti></tr>
<tr><ti>    o Adaptec SCSI</ti></tr>
<tr><ti>    o Qlogic/ISP</ti></tr>
<tr><th>* Ethernet cards:</th></tr>
<tr><ti>    o Onboard SunLance</ti></tr>
<tr><ti>    o Sun QuadEthernet (**)</ti></tr>
<tr><ti>    o Sunswift Happy Meal SCSI/Ethernet</ti></tr>
<tr><ti>    o Myricom Gigabit Ethernet (Sbus)</ti></tr>
<tr><ti>    o Several Linux supported PCI based ethernet cards.</ti></tr>
<tr><th>* Framebuffers:</th></tr>
<tr><ti>    o MG1/MG2 - bwtwo (monochrome)</ti></tr>
<tr><ti>    o CG3 - cgthree (8-bit)</ti></tr>
<tr><ti>    o GX, GX+, TGX and TGX+ - cgsix (8-bit)</ti></tr>
<tr><ti>    o SX - cgfourteen (support for 8-bit only)</ti></tr>
<tr><ti>    o TCX - SS4 and SS5 (resp. 8-bit and 24-bit, AFX bus)</ti></tr>
<tr><ti>    o LEO - ZX/TurboZX (24-bit)</ti></tr>
<tr><ti>    o FFB/FFB2 - Creator/Creator3D (24-bit)</ti></tr>
<tr><ti>    o PGX - ATI Rage Pro (8-bit)</ti></tr>
<tr><ti>    o PGX24 - ATI Mach64 (8 and 24-bit)</ti></tr>
<tr><ti>    o AFB - Elite3D (accelerated only ***, 24-bit)</ti></tr>
<tr><ti>    o OEM framebuffers:</ti></tr>
<tr><ti>      + cgRDI (cgthree, 8-bit)</ti></tr>
<tr><ti>      + Raptor GFX (8-bit and 24-bit)</ti></tr>
<tr><th>* Storage:</th></tr>
<tr><ti>    o All tape drives and changers</ti></tr>
<tr><ti>    o StorEdge T3 (****)</ti></tr>
<tr><th>* Miscellaneous:</th></tr>
<tr><ti>    o serial console</ti></tr>
<tr><ti>    o CS4231 based audio</ti></tr>
<tr><th>*  Floppy drive(*****)</th></tr>
</table>
</p><p>
(*) Booting from these cards requires OBP firmware.</p><p>
(**) The sun4c platform has problems with these card due to firmware problems.
</p><p>(***) Use the Xsun24 X server with the "-noFFB" option to disable acceleration, or if you have the Solaris driver, see the related question in Section "Running".
</p><p>(****) See http://open-projects.linuxcare.com/t3 for more driver information.
</p><p>(*****) Booting from floppy might not work on certain sparc64 based machines.
        Also, the floppy driver has been disabled on the CD boot image.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Unsupported</title>
<section>
<body>
<p>
* Any building of userland 64-bit targets. Kernel compiles work fine.
You'll need package egcs64-sparc, type: "emerge egcs64-sparc" once the
"emerge system" completes to get the compiler.
</p><p>
* X-windows system is not currently supported in Gentoo Sparc, but
</p>
</body>
</section>
</chapter>
</guide>
