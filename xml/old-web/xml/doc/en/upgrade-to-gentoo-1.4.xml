<?xml version='1.0'?>

<!DOCTYPE guide SYSTEM "../dtd/guide.dtd">

<guide link="doc/upgrade-to-gentoo-1.4.html">

<title> Gentoo 1.4 Upgrade Guide</title>
<author title="Author"><mail link="gustavo@felisberto.net">
	Gustavo Felisberto</mail>
</author>
<author title="Author"><mail link="rjlouro@rjlouro.org">
	Ricardo Loureiro</mail>
</author>

<author title="Copy Editor"><mail link="zhen@gentoo.org"></mail></author>

<abstract>This guide shows you how to upgrade a older system running Gentoo 1.1a, 1.2 or 1.3 to the new 1.4 system.</abstract>



<version>0.3</version>
<date>17 September 2002</date>

<chapter>
	<title>Before you begin</title>
<section>
	<title>Warning to the light hearted</title>
	<body>
<warn>This procedure has been extensively tested, but it can make your system unbootable.</warn>
<p>With this in mind please note that this procedure is a dangerous and time consuming one. If
your machine was hurting on a stage1 install, you might not want to do the upgrade.
Please read the whole document before starting, and think twice before starting the upgrade. If you dont have alot of Linux experience this is not for you.
</p>
<p>Some of the text in this file is taken from the README file in the upgrade scripts by <mail link="carpaski@gentoo.org">Nicholas Jones</mail></p>
	</body>

</section>

<section>
	<title>Required Files and General Info</title>
	<body>
		<p>You will need to get the 4 scripts that Nicholas Jones made. You can get them <uri link="http://www.gentoo.org/~carpaski/system_update/">here</uri>. Get the files named update-step1.sh
		, update-step2.sh, update-step3.sh and update-step4.sh. Don't forget to change the file permissions and make them executable.
		</p>
		<p><uri link="http://www.gentoo.org/~carpaski/system_update/update-step1.sh">Script 1</uri> will do some tests to see if everything is ok as is. It will also make backups of GCC, 
		glibc, binutils, ncurses, gettext, texinfo. You will need these if something goes really wrong. It is very unlikely (we have not seen it yet, but it can happen), so it is good to be prepared.
		</p>
		<p><uri link="http://www.gentoo.org/~carpaski/system_update/update-step2.sh">Script 2</uri> will do the first part of the upgrade, it will make changes to the profile symlinks, 
		emerge portage and do a build+bootstap of GCC and binutils.
<note>For this script to work on non-x86 machines you have to change the ARCH var at the beginning of the script. You can use x86, ppc, sparc and sparc64.</note>		</p>
		<p><uri link="http://www.gentoo.org/~carpaski/system_update/update-step3.sh">Script 3</uri> will continue the upgrade and will do a full stage 3 bootstrap acording to 
		your <path>/etc/make.conf</path>, building GCC, glibc, binutils .....
                </p>
		<p><uri link="http://www.gentoo.org/~carpaski/system_update/update-step4.sh">Script 4</uri> is optional and it will unmerge and re-emerge all broken packages that may exist after script 3.
                </p>
	</body>
</section>
<section>
	<title>Advice from the Authors</title>
	<body>
		<p><e>Dont overclock your system during upgrade!</e> I (Gustavo Felisberto) had a very painfull experience during my upgrade. 
		My dual P3 866mhz system was overclocked to 1007mhz. Apparently,the memory did not like this, and I had constant segfaults.
		</p>
		<p>After starting the second script, DO NOT logout, and don't log out until after step 3. The upgrade process affects init and login and it will lock the consoles 
		upon logout due to missing libs. You may get "respawning to quickly, disabling". Non-console services such as SSH will continue to operate as expected, assuming that are not C++ applications.
		</p>
		<p>DO NOT change your CFLAGS before completing script 2. The addition of gcc3 flags to make.conf prior to script 2 will cause parts of the script to fail.</p>
	</body>
</section>
</chapter>

<chapter>
	<title>The Upgrade</title>
<section>
	<title>Script 1</title>
	<body>
		<p>Before starting to run any of the scripts please upgrade your portage tree and optionally do a upgrade to your system</p>
<pre>
# <i>emerge rsync</i>
# <i>emerge -u world</i>  <codenote> This one is optional, but a very good idea to do before going on</codenote>
# <i>./update-step1.sh</i>
</pre>
<p>Script 1 will do some checks on your system, and it will also install <i>gentoolkit</i> just in case you don't have it. 
The most important part is that it will backup some basic packages to <path>/usr/portage/packages/All</path> . This will take about 10 minutes.
</p>
	</body>
</section>
<section>
	<title>Script 2</title>
	<body>
		<p>This script will change the <path>/etc/make.profile</path> symlink to the correct location for the upgrade.
		<warn>If you are not running on an x86 architecture you MUST change the ARCH variable at the 
		top of this file to the correct value for <b>your architecture</b> (again, good values are x86, ppc, sparc and sparc64)</warn></p>
<pre>
<codenote>Applies only to the above warning:</codenote>
# <i>nano -w update-step2.sh</i>
</pre>
		<p>This script will take alot longer than the previous one, about 30 minutes on a dual P3 - 866MHz with 256MB RAM.</p>
<pre>
# <i>./update-step2.sh</i>
</pre>
	</body>

</section>

<section>
	<title>Script 3</title>
	<body>
		<p>Okay, so you have bootstrapped and built the main packages with general flags. 
		Now it's time to bootstrap again, this time with GCC 3.2 and with your personal flags. Edit <path>make.conf</path> just to make sure you have everything ok.</p>
<pre>
# <i>nano -w /etc/make.conf</i>
# <i>./update-step3.sh</i>
</pre>

	      <note>If you are upgrading from GCC 2.* please note that in version 3.x and up new arch flags 
	      have been introduced. Have a look at <uri>http://www.freehackers.org/gentoo/gccflags/</uri> for information about those and other GCC flags.</note>
	      
	      <p>Now, just run the script. I like to keep time, just to keep track of how long it took, but that's completely optional. 
	      So, just go ahead and execute the script. This one can take some time, it took 156 minutes on a dual 1.5Ghz Athlon MP. The author suggests the movie Star Wars episode IV so the time passes fast.</p>
	      <p>When it's over you will get some instrucions to follow. It's very important you update your configuration files because many important files have changed. The best way to do this is by running <c>etc-update</c>.</p>
<pre>
# <i>etc-update</i>
</pre>
	      <p>This upgrade will most likely cause problems with init and login. There are 2 ways to solve this, either type <c>sync ; init u</c> or simply reboot your computer. 
	      SSH should still work, so you can always log in to your computer in case of lockup. Reboot your computer if your console hangs or if it starts printing "respawning too quickly" messages.</p>
<pre>
# <i>sync</i>
# <i>init u</i>

<codenote>If console hangs or you get "respawning too quickly messages:</codenote>
# <i>reboot</i>
</pre>
		
	      
	</body>
</section>
<section>
	<title>Script 4</title>
	<body>
		<p>Ok, now you have a GCC 3.2 system ready, but the drawback is that some packages are broken. 
		Script 4 will try and fix these for you. Remember, this is an optional step, your base system is already updated according to the 1.4 profile. 
		The reason why some packages are broken is simple, some shared libraries were rebuilt or upgraded and programs that depend on them will fail, unless they are also rebuilt.
		</p>
<pre>
# <i>./update-step4.sh</i>
</pre>
<p>This process will take even more time than all the others combined. So, since you already saw Star Wars episode IV, I would advise you to see all of the other 4 episodes. 
If you have a really slow machine, then probably the entire collection of Seinfeld Episodes (yes, all 180) is a better idea. Just to give an idea, on my dual 1.5Ghz 
Athlon MP it took 400 minutes and it failed on some packages like evolution and mozilla, so after that I had to recompile them. And we all know how long mozilla takes to build.</p>
		<p>When done, script 4 will output the packages it could not compile. Some of them will fail because they are not GCC 3.2 ready yet, so you just will have to 
		wait or do some changes to the ebuilds, if you know what you are doing.</p>
		<note>Script 4 will not recompile all your installed packages. if you really want to recompile all packages on your system you'll have to run <c>emerge -e world</c>. 
		You may run that in place of or after Script 4, but be ready to have some packages that will not compile.</note>
	</body>
</section>

</chapter>
<chapter>
	<title>Final Considerations</title>
<section>
	<body>
		<p>As you can see this is a very tricky update. One of the authors and several other people have been very happy with the upgrade. 
		The other author had minor problems and a really wierd one (KDE stoped working even though it emerged).
		</p>
		<p>One good alternative to the upgrade is doing a fresh install of 1.4 . Just backup your <path>/home</path> and your <path>/etc</path>, 
		you will make your users happy by saving their files, and with your config files backed up installing your new system will be easier. 
		It is highly recommended that you update EVERY package on your system and ensure that their configuration files are current, as the new system will have the newest versions of all packages installed. 
		Conflicting configurations may cause applications to fail to start or to behave abnormally.
		</p>
	</body>

</section>
</chapter>
</guide>


