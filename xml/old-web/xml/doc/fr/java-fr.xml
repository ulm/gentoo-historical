<?xml version='1.0' encoding="iso-8859-15"?>
<guide>
<title>Guide Java avec Gentoo</title>
<author title="Author and Editor">
<mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>
<author title="Traduction">
<mail link="marc@pangos.com">Marc KRAUTH</mail>
</author>

<abstract>
Guide de l'Utilisateur et du Développeur pour Java avec Gentoo
</abstract>

<version>0.1.1</version>
<date>25 juin 2002</date>

<chapter>

<title>Installer JDK/JRE</title>
<section>
<title>Vue d'ensemble</title>
<body>
<p>Gentoo fournit de nombreuses versions de JDK et JRE. La version proposée par
défaut est celle de Blackdown, car elle est librement disponible et ceci 
sans avoir besoin de s'enregistrer. 
</p>

<note>Puisque kaffe devient valable comme JRE/JDK, il va certainement devenir le
JRE/JDK proposé par défaut.</note>

<p>En général, les JDK/JRE de Sun et de Java sont plus
rapides, mais elle nécessitent un peu plus de travail pour les
installer, puisque pour chacune d'entre elles, on vous demandera de lire
et d'accepter leurs licences avant de les télécharger. (IBM vous
demandera par ailleurs de remplir un formulaire d'enregistrement).</p>

<p>Nos ebuilds pour les JDK/JREs de Sun et IBM vous indiqueront exactement où les
télécharger.</p>
</body>
</section>

<section>
<title>Installer les JDK/JRE de Sun ou d'IBM</title>
<body>
<p>Si vous faites <c>emerge dev-java/sun-jdk-1.3.1</c> ou <c>emerge
dev-java/ibm-jdk-1.3.1</c>, un message vous avertira d'aller télécharger
les archives par vous-même. Ceci est rendu nécessaire par les restrictions de
licences de Sun pour le couple JDK/JRE et par la procédure
d'enregistrement demandée pour les JDK/JRE d'IBM.</p>

<note>Il y a aussi un dev-java/sun-jdk-1.4.0, mais tous les paquets ne
fonctionnent pas correctement avec Java 1.4. C'est donc à vos risques et
périls si vous décidez d'utiliser la JDK 1.4.0. </note> 

<p>Vous devez télécharger et placer les fichiers indiqués dans
<path>/usr/portage/distfiles</path>. Ceci fait, vous pouvez retourner à
la commande emerge et JDK/JRE sera alors correctement installé dans
<path>/opt</path>.</p>
</body>
</section>
</chapter>

<chapter>
<title>Configurer votre JDK/JRE</title>
<section>
<title>Vue d'ensemble</title>
<body>

<p>Gentoo donne la possibilité d'avoir plusieurs JDKs et JREs installées
sans pour autant les faire entrer en conflit. Il y a quelques
avertissements pour se faire, comme notés ci-dessous.</p> 

<p>En utilisant l'outil <c>java-config</c>, vous pouvez déterminer
la configuration par défaut de tout le système si vous avez les droits de
l'utilisateur root sur votre machine. Les utilisateurs peuvent aussi se
servir de <c>java-config</c> pour définir leur propre configuration par
défaut, mais elle ne sera en vigueur que pour cet utilisateur.</p>
</body>
</section>

<section>
<title>Mettre en place un JDK/JRE par défaut</title>
<body>
<p>En lançant la commande <c>java-config --list-available-vms</c>, vous
avez la liste de toutes les JREs et JDKs à disposition sur votre
système, ainsi : </p>
<pre>
[%1 ~] java-config --list-available-vms
[blackdown-jdk-1.3.1] Blackdown JDK 1.3.1 (/etc/env.d/java/20blackdown-jdk-1.3.1)
[blackdown-jre-1.3.1] Blackdown JRE 1.3.1 (/etc/env.d/java/20blackdown-jre-1.3.1)
[ibm-jdk-1.3.0] IBM JDK 1.3.0 (/etc/env.d/java/20ibm-jdk-1.3.0)
[ibm-jdk-1.3.1] IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
[ibm-jre-1.3.1] IBM JRE 1.3.1 (/etc/env.d/java/20ibm-jre-1.3.1)
[sun-jdk-1.4.0] Sun JDK 1.4.0 (/etc/env.d/java/20sun-jdk-1.4.0)
</pre>
<p>Le nom entre les crochets <path>"[]"</path> est le label ou l'ID
d'une machine virtuelle spécifique. Vous devez donner cet ID en
argument à <c>java-config --set-system-vm</c>, comme par exemple : </p>
<pre>
[#1 ~] java-config --set-system-vm=ibm-jdk-1.3.1
Now using IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
</pre>

<note>Vous devez avoir les droits de l'utilisateur root pour lancer 
--set-system-vm</note> 

<p>Une fois que vous avez défini avec <c>java-config --set-system-vm</c>
votre machine virtuelle, vous devrez regénérer votre /etc/profile.env,
comme indiqué :</p>
<pre>
[#1 ~] env-update
</pre>

<p>Pour finir, vous avez soit la possibilité de vous relogger ou bien de
ressourcer <path>/etc/profile</path> dans votre environnement.</p>

<p>En tant que simple utilisateur, vous pouvez utiliser 
<c>java-config --set-user-vm</c>, ce qui va créer dans 
<path>$HOME/.gentoo/java-env</path> toutes les
variables d'environnement requises. Vous devrez normalement sourcer
ceci depuis le script de démarrage de votre shell.
(<path>$HOME/.zshenv</path> dans mon cas).</p>
</body>
</section>

<section>
<title>Définir une CLASSPATH par défaut</title>
<body>
<p><c>java-config</c> peut aussi être utilisé pour définir votre
CLASSPATH par défaut, et bien entendu la CLASSPATH d'un utilisateur
spécifique.</p>

<p>En premier lieu, vous voulez lister les bibliothèques java qui peuvent être
intéressantes à ajouter à votre CLASSPATH. Vous
pouvez procéder ainsi :</p>
<pre>
[%1 ~] java-config --list-available-packages
[ant] No description (/usr/share/ant/classpath.env)
[java-gnome] No description (/usr/share/java-gnome/classpath.env)
[java-gtk] No description (/usr/share/java-gtk/classpath.env)
[log4j] "" (/usr/share/log4j/package.env)
</pre>

<note>Aucun de ces paquets ont leur propre description. C'est quelque
chose qui devrait être implémenté dans un futur pas si lointain.
</note>

<p>Encore une fois, les noms entre crochets <path>"[]"</path> définissent
les IDs que vous devez passer en argument à
<c>java-config --set-system-classpath</c>, comme par exemple :</p>
<pre>
java-config --set-system-classpath=log4j,java-gtk,java-gnome
</pre>
<note>Le répertoire (.) ne fera pas parti de votre CLASSPATH, comme cela devrait
être spécifié dans le profile du login root.
</note>
<p>Encore une fois, vous devrez lancer <c>env-update</c> pour mettre à
jour l'environnement de votre système et vous êtes supposé aussi vous
relogger ou ressourcer <path>/etc/profile</path>.</p>
<p>Pour les utilisateurs, <c>java-config --set-user-classpath</c> crééra 
<path>$HOME/.gentoo/java-env-classpath</path>, qui sera automatiquement
inclu dans <path>$HOME/.gentoo/java-env</path>.</p>
</body>
</section>
</chapter>

<chapter>
<title>Plus de documention</title>
<section>
<title>Documentation hors-ligne</title>
<body>
<ul>
<li>Les pages de manuel de java-config</li>
<li><c>java-config --help</c></li>
<li>Le script <path>/usr/bin/java-config</path> lui-même</li>
</ul>
</body>
</section>
<section>
<title>Documentation en ligne</title>
<body>
<ul>
<li>Les archives de listes de diffusion <uri link="http://lists.gentoo.org/pipermail/gentoo-dev/">
gentoo-dev </uri>, <uri link="http://lists.gentoo.org/pipermail/gentoo-user/"> gentoo-user </uri></li>
<li>#gentoofr sur irc.openprojects.net</li>
</ul>
</body>
</section>
</chapter>
<chapter>
<title>Avertissements</title>
<section>
<title>Généralités</title>
<body>
<p>Si vous sélectionnez une JRE comme votre machine virtuelle par
défaut, il se peut que vous n'ayez la commande <c>javac</c> disponible
tout le temps. Vous devrez alors créer vous-même un lien symbolique qui
prendra ceci en compte.</p>

<p>Jikes pourra être utilisé pour compiler la plupart des plus gros
paquets, s'ils sont diponibles. Avec le temps, nous espérons que vous
serez en mesure de compiler tous les paquets dépendant de java avec
Jikes, et ainsi certaines dépendances avec JDK pourront être remplacées
par des dépendances avec JRE.</p>

<p>Avec certaines versions de Portage, faire un <c>emerge --world
update</c> installera JDK sans vérifier si vous l'aviez installé
préalablement ou non. Ceci est un bug connu qui sera modifié dans une
version ultérieure de Portage.  </p>

</body>
</section>
</chapter>
</guide>
