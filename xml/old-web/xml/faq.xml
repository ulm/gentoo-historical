<?xml version='1.0'?>

<!DOCTYPE guide SYSTEM "../dtd/guide.dtd">

<guide link="/doc/faq.html">
<title>Gentoo Linux Frequently Asked Questions</title>
<author title="Chief Architect"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>

<abstract>This FAQ is a collection of questions and answers collected from the gentoo-dev mailing list and from IRC -- if you have any questions (or answers!) to add, please contact an author.</abstract>

<version>1.0.8</version>
<date>18 March 2002</date>

<chapter>
	<title>Getting Started</title>

	<section>
		<title>How is Gentoo pronounced, and what does it mean?</title>
		<body><p>Gentoo is a species of small fast penguin, pronounced "jen-two".</p></body>
	</section>

	<section>
		<title>What makes Gentoo different?</title>
		<body>
			<p>Gentoo Linux is a fast, modern distribution with a clean and flexible
			design -- in this respect, Gentoo may appeal to
			<uri link="http://www.slackware.com/">Slackware</uri>,
			<uri link="http://www.linuxfromscratch.org">Linux From Scratch</uri> or
            <uri link="http://www.bsd.org">BSD</uri> users. Unlike most Linux
            distros, Gentoo has a package system reminiscent of BSD's ports,
            meaning the packages are continually updated to the lastest
            versions.
        </p></body> 	</section> </chapter>

<chapter>
	<title>Installation</title>

	<section>
		<title>What is the difference between the .iso and .tbz2 files?</title>
		<body><p>The build <e>.tbz2</e> file is a minimal set of system files
		that is necessary for allowing a user to bootstrap and install
		Gentoo Linux.  The build <e>.iso</e> is a complete, bootable CD image that
		contains a system kernel, a reasonably complete set of kernel modules,
		necessary system tools such as <c>mkfs</c> and networking support,
		as well as the <e>.tbz2</e> minimal-system tarball.  Most users will install
		Gentoo Linux by burning the .iso file onto a CD, booting off of the CD,
		and installing from within the minimal linux environment provided by
		the Gentoo boot CD.  It is possible, however, for users to install
		Gentoo Linux directly from an already-existing Linux distribution.
		Such users need only download the .tbz2 file, install the contents
		on a spare partition (making sure to use the <c>p</c> flag when
		untarring the tarball!), chroot, and install in the usual fashion.</p>
        </body>
	</section>

	<section>
		<title>Why do the build .iso and .tbz2 files sometimes have different -r (revision) numbers?</title>
		<body><p>
		The .tbz2 minimal-system tarball only needs to be revised when there have
		been significant changes to the core Gentoo Linux system (such as baselayout
		changes, or a new profile), and as such .tbz2 updates are relatively rare.
		The .iso file tends to get updated whenever we discover that somebody has
		hardware that won't boot from our .iso.  Since new kernel modules and
		patches are constantly being generated, this situation probably won't
		stabilise anytime soon.
		</p>
	</body>
	</section>

<!--  Commenting out since this is really out of date now
	<section>
		<title>How do I install with no ISO image?</title>
		<body><p>We are working out a solution for 1.0_rc6+ systems as we speak.  Stay tuned and visit the <uri
link="/doc/build.html">Download/Install page</uri> for updates.</p> 
	</body>
	</section>
-->
	

	<section>
		<title>I have a Sony Super-Slim VAIO laptop, and the Gentoo Linux CD is having problems finding my PCMCIA ATAPI CD-ROM.</title>
		<body>
		<p>Make sure the second IDE port is set to CDROM (it unsets itself if the device isn't attached on boot) then do the following at the isolinux <c>boot:</c> prompt:</p>
<pre>
boot: <i>rescue ide2=0x180,0x386</i>
</pre>
<p>If you are using a 1.0_rc5 or earlier boot CD, type <c>gentoo</c> instead of <c>rescue</c>, above.</p>
</body>
</section>
	<section>
		<title>I'm finding things to be really unstable and I'm using "-O9 -ffast-math -fomit-frame-pointer" optimizations.  What gives?</title>
		<body>
		<p>When you use any optimizations beyond <c>-O3</c>, you're really taking the risk of having broken packages.
		Very aggressive optimizations sometimes cause the compiler to streamline the assembly code to the point where
		it doesn't quite do the same thing anymore.  <e>Loc-Dog</e> (on IRC) uses <c>-O3 -mcpu=1686 -march=i686 -fforce-addr -fomit-frame-pointer -funroll-loops -frerun-cse-after-loop -frerun-loop-opt -malign-functions=4</c>, which is about
		as much as I'd want to push global optimization settings.  Beyond this, it's best to use ultra-high optimizations
		only with specific packages where you really need that extra 2%, and where you can easily test the package 
		to ensure that it hasn't been optimized into oblivion.</p>
		</body>
	</section>

	<section>
		<title>What's the default root password after installation?</title>
		<body><p>The default password is blank; hit enter.</p></body>
	</section>

	<section>
		<title>Why can't a user su to root?</title>
		<body><p>For security reasons, users may only <c>su</c> to root if they belong to the <e>wheel</e> group. To add a <i>username</i> to the <e>wheel</e> group, issue the following command as root:</p>
		<pre># <i>usermod -G users,wheel username</i></pre>
</body>
	</section>
	<section>
		<title>How do I enable devfs?</title>
		<body>
<p>
If you're using 1.0_rc5 or greater, you don't need to do anything special to get 
devfs working; it's already active (you did make sure that devfs was built into the
kernel, didn't you?).  
However, if you are using a version of Gentoo Linux <e>prior</e> to version 1.0_rc5, add <c>devfs=mount</c> to your <c>GRUB</c> kernel boot options so that the line looks something like <c>kernel /boot/boot/bzImage devfs=mount foo=bar</c>  The kernel will then mount the <path>/dev</path> <e>devfs</e> filesystem automatically at boot-time.
</p>
	</body>
	</section>
	<section>
		<title>How to I disable devfs?</title>
		<body>
<p>Under Gentoo Linux 1.0_rc6 and later, you can disable devfs by passing the <c>gentoo=nodevfs</c> to the kernel.</p>
		</body>
	</section>
	<section>
		<title>How do I get a <path>/dev/mouse </path> that
		doesn't go away when I reboot (when using devfs)?</title>
		<body>
		<p>
		If you are using 1.0_rc6 or later, then you can just use <c>ln -s</c>
		to make the usual symbolic link from <path>/dev/mouse</path>, and
		it will be preserved between reboots.
		</p>
		<p>All other users need to edit <path>/etc/devfsd.conf</path>
		and add these lines:</p>
<pre>
REGISTER        ^misc/psaux$    CFUNCTION GLOBAL symlink misc/psaux mouse
UNREGISTER      ^misc/psaux$    CFUNCTION GLOBAL unlink mouse
</pre>
<p>If you are not using the devfs PS/2 mouse <path>/dev/misc/psaux</path> device,
adjust the <c>misc/psaux</c> strings above accoringly.  You'll then want to <c>killall -HUP devfsd</c>
		to get devfsd to reread <path>/etc/devfsd.conf</path>.</p>
		</body>
	</section>
	<section>
		<title>Grub can't find stage x.y?</title>
		<body><p>
		During installation the grub boot files are copied
		to <path>/boot/grub</path> (<path>/boot/boot/grub</path> in Gentoo Linux 1.0_rc5 and earlier.) Grub automatically
		looks in the <path>/boot/grub</path> directory on the
		boot partition.  (We strongly recommend having a separate
		no-auto boot partition mounted at <path>/boot</path>,
		since that way it is much more difficult to clobber your
		kernel and boot info by accident.)  The above error generally
		arises from (a) not using a separate boot partition, (b)
		forgetting to mount the boot partition at <path>/boot</path>
		before either unpacking the build snapshot or running
		<c>emerge --usepkg system</c>, or (c) forgetting the
		<c>notail</c> option when mounting a ReiserFS <path>/boot</path> partition.
		You can get more information on grub, including how to
		debug grub from the grub prompt, by reading the 
		<uri link="http://www-105.ibm.com/developerworks/education.nsf/linux-onlinecourse-bytitle/0F1731DC664023B7862569D0005C44AF?OpenDocument">IBM developerWorks Grub tutorial</uri>.
		</p>
                </body>
	</section>
</chapter>

<chapter>
	<title>Package Management</title>
	<section>
		<title>In what format are the packages stored?</title>
		<body><p>They exist in our portage tree as <e>ebuild</e> autobuild scripts; we are primarily a ports-based distribution, meaning that we provide scripts (<c>.ebuild</c> files) and a special system (Portage) so
that you can build apps from sources. We generally only build binaries for releases and snapshots. The <uri link="/doc/gentoo-howto.html">Development HOWTO</uri> covers the contents of an ebuild script in detail.  For full binary ISO releases, we create a full suite of binary packages in an enhanced <c>.tbz2</c> format (<c>.tar.bz2</c> compatible with meta-information attached to the end of the file.)</p>
		</body>
	</section>

	<section>
		<title>Why write a new port system (Portage) instead of using BSD's version?</title>
		<body>

<p>In one sentence, because Portage is much better in so many ways.  One of the design philosophies of the <c>.ebuild</c> syntax was to make it
an analog of what you'd type to install the program manually, thus making
Portage very easy to learn and modify to your needs.  We also have OpenBSD-style "fake" installs, safe unmerging,
system profiles, package masking, a real dependency system, and lots of other good stuff.</p>

		</body>
	</section>

	<section>
		<title>How does this differ from Debian's apt or BSD's ports?</title>
		<body><p>Portage features the best of apt and ports; for example, USE options, a full dependency system, safe installs and uninstalls, and a true package database.  Think of Portage as the best of both worlds; a ports system with the sensibilities and safety of a Linux package management system built-in.</p></body>
	</section>

	<section>
	        <title>How do I install and uninstall packages?</title>
	        <body>
	                <p>The <uri link="/doc/portage-user.html">Portage User Guide</uri> details how to install and uninstall packages, and update Portage.</p>
	        </body>
	</section>

	<section>
		<title>How can I set a global configuration for compiling packages?</title>
		<body><p><path>/etc/make.conf</path> should be modified to override global and profile-specific default options used to compile and merge packages. The most common options are as follows:</p>
		<table>
		<tr>
			<th>Flag</th>
			<th>Description</th>
		</tr>
		<tr>
			<ti>CHOST</ti>
			<ti>This sets the HOST variable for compiles, e.g. <c>i686-pc-linux-gnu</c></ti>
		</tr>
		<tr>
			<ti>CFLAGS</ti>
			<ti>The options for <c>gcc</c> when compiling programs written in C (*.c files)</ti>
		</tr>
		<tr>
			<ti>CXXFLAGS</ti>
			<ti>The options for <c>gcc</c> when compiling programs written in C++ (*.c files)</ti>
		</tr>
		<tr>
			<ti>USE</ti>
			<ti>This allows you to set what optional components you'd like compiled-in, if available.  For example, if you have <c>gnome</c> inside the USE string, then when you compile <c>xchat</c>, it will include GNOME support.  All our dependencies are also USE-aware.</ti>

		</tr>
		<tr>
			<ti>GENTOO_MIRRORS</ti>
			<ti>A space separated list of URIs currently mirroring the Gentoo packages.  Portage will attempt download from a <c>GENTOO_MIRROR</c> first before trying the official <c>SRC_URI</c>.  To force Portage to skip mirrors, set this variable to "".</ti>
		</tr>
		</table>
		</body>
	</section>

	<section>
		<title>What happened to <path>/etc/make.defaults</path>?</title>
		<body>

<p>As of Portage 1.5 onwards, <path>/etc/make.defaults</path> is antiquated; 
if you have portage-1.5-r1 or above installed then you can safely delete it.
This file has been replaced by <path>/etc/make.profile/make.defaults</path> (<path>/etc/make.profile</path> should actually be a symlink to <path>/usr/portage/profiles/default</path>),
which contains system profile-specific default settings. The priority order of
the various configuration files is as follows (highest first):

		
		<ol>
			<li>Environment variables</li>
			<li><path>/etc/make.conf</path>, for your use</li>
			<li><path>/etc/make.profile/make.defaults</path>, for profile-specific defaults</li>
			<li><path>/etc/make.globals</path>, for global defaults (settings not specified in any other place come from here)</li>
		</ol></p></body>
	</section>
	
	<section>
		<title>Is there a way to upgrade all installed packages
		a la <e>apt-get upgrade</e> or <e>make World</e>?</title>
		<body><p><b>YES!</b>  Type <c>emerge update</c> (use it with <c>--pretend</c> first) to update all 
		core system packages, and use <c>emerge --world update</c> (again, use it with <c>--pretend</c> first) 
		to do a complete system upgrade of all installed packages.
		</p></body>
	</section>


	<section>
		<title>When updating a package using <c>emerge</c> or <c>ebuild</c>, how do I avoid clobbering my config files?</title>
		<body><p>
		Portage now includes config file management support by default.  Type 
		<c>emerge --help config</c> for more details.  The (overly) simple answer is that if
		a package installs <path>foo</path> somewhere under <path>/etc</path>, and
		another <path>foo</path> already exists there, then the new <path>foo</path> will
		instead be renamed to <path>._cfgxxxx_foo</path> in that directory.  A useful
		tool for examining and updating any protected config files is <c>etc-update</c>,
		currently obtained by <c>emerge app-admin/gentoolkit</c>.
		</p></body>
	</section>

	<section>
		<title>I want to perform the <c>./configure</c> step myself.  Can I?</title>
		<body><p>
		Yes, but it is not trivial.  First do <c>man ebuild</c> followed by
		<c>ebuild foo-x.y.z.ebuild unpack</c>.  Then <c>cd</c> to 
		<path>/var/tmp/portage/foo-x.y.z/work</path>.  You can manually perform
		the <c>./configure</c> and <c>make</c> steps yourself (you'll have to do
		both, since Portage does not separate the configure and build steps).  To
		have Portage finish the installation (so that you can easily remove it later,
		should you desire to do so, and it will be registered in Portage as a possible
		dependency) you first need to <c>touch /var/tmp/portage/foo-x.y.z/.compiled</c>
		(tricking Portage into thinking that <c>ebuild foo-x.y.z.ebuild compile</c> has
		completed), followed by <c>ebuild foo-x.y.z.ebuild merge</c>.
		</p></body>
	</section>

	<section>
		<title>What if rsync doesn't work for me?</title>
		<body><p>
		If you're behind a firewall that doesn't permit
		rsync traffic, then you can instead download the daily
		/usr/portage snapshot from 
		<uri>http://cvs.gentoo.org/snapshots</uri>.  Just unpack
		the tarball (using <c>tar xvjf portage-foo.tbz2</c>) in
		the <path>/usr</path> directory.
		</p></body>
	</section>

	<section>
		<title>How do I use <i>emerge</i> from behind a firewall?</title>
		<body><p>
		Edit the PROXY settings in <path>/etc/make.conf</path>.  If that doesn't work,
		edit <path>/etc/wget/wgetrc</path> and edit http_proxy and ftp_proxy
		appropriately.
		</p></body>
	</section>

	<section>
		<title>Can I rsync from another operating system?</title>
		<body><p>There's a program called unison that works under both UNIX and Win32, available from <uri>http://www.cis.upenn.edu/~bcpierce/unison/</uri>.</p></body>
	</section>

	<section>
		<title>I have only slow modem connection at home. Can I download sources somewhere else and add them to my system?</title>
		<body><p>
		Definitely. You can run <c>emerge --pretend package</c> to see what programs
        are going to be installed. Download sources and bring them on any media
        home. Put the sources into <path>/usr/portage/distfiles</path> and run
        <c>emerge package</c> to see it picking up the sources you just brought
        in!
		</p></body>
	</section>

	<section>
		<title>.tar.gz sources for installed software are piling up in /usr/portage/distfiles/ using valuable space. Is it safe to delete these files?</title>
		<body><p>
		Yes, you can safely delete these files. But if you are on a slow
		connection, such as a modem, you might want to keep the archives if
		possible; often several ebuilds will be released for the same version of
		a specific piece of software  - if you have deleted the archive and you
		upgrade the software it will have to be downloaded from the internet
		again.
		</p></body>
	</section>



</chapter>

<chapter>
	<title>Usage</title>

	<section>
    	<title>I have installed openssh on my box, but can only log in as root - my normal user account doesn't work. </title>
    <body>
        <p>
            This is most probably because your user account doesn't have
            a valid shell specified. Check for your user entry in 
            <path>/etc/passwd</path> and see if it ends in /bin/bash 
            (or any other shell). If it doesn't, you must set a shell
            for the user. This is done using the usermod command, like
            this ;
        </p>
        <pre># <i>usermod -s /bin/bash myuser</i></pre>
    </body>
	</section>
	
	<section>
		<title>I can start X applications as root only.</title>
		<body><p>Your <path>/tmp</path> directory has the wrong permissions (it needs the sticky bit set). Type the following as root:</p>
		<pre># <i>chmod 1777 /tmp</i></pre>
		</body>
	</section>

	<section>
		<title>How do I set up an International Keyboard Layout?</title>
		<body><p>Edit the <c>KEYMAP</c> variable in <path>/etc/rc.conf</path>.
		Then either reboot or restart the keymaps script:
		<c>/etc/init.d/keymaps restart</c>.</p>
		</body>
	</section>

	<section>
		<title>DNS name resolution works for root only.</title>
		<body><p><path>/etc/resolv.conf</path> has the wrong permissions; <c>chmod</c> it as follows:</p>
		<pre># <i>chmod 0644 /etc/resolv.conf</i></pre>
		</body>
	</section>

	<section>
		<title>Why is KDE not reading <path>/etc/profile</path>?</title>
		<body><p>You need to add <c>--login</c> to the first line in <path>/opt/kde2.1/bin/startkde</path>, so that it reads as follows:</p>
		<pre>#!/bin/sh --login</pre>
		<p>This fix has been added to recent versions of KDE.</p>
		</body>
	</section>
</chapter>

<chapter>
	<title>Maintenance</title>
	<section>
		<title>ReiserFS and filesystem corruption issues -- how to fix'em, etc</title>
		<body>
		<p>
		ReiserFS has had serious problems with the 2.4-series kernels; we
		highly recommend avoiding ReiserFS for the time being.  If your
		ReiserFS partition is already corrupt, try booting the Gentoo 
		Linux boot CD and run <c>reiserfsck --rebuild-tree</c> on
		the corrupted filesystem.  This should make the filesystem consistent
		again, although you may have lost some files or directories due
		to the corruption.
		</p>
		</body>
	</section>

	<section>
		<title>How to I view the timestamps in /var/log/syslog.d, etc. on a pre-1.0_rc5 Gentoo system?</title>
		<body>

<p>To view multilog (Gentoo Linux 1.0_rc5 and earlier) timestamps, you need to pipe the current log through the <c>tai64nlocal</c>
command:</p>

<pre>
# <i>cat /var/log/syslog.d/current | tai64nlocal | less</i>
</pre>

<p>Or, alternatively, if you want to "tail" the log:</p>

<pre>
# <i>tail -f /var/log/syslog.d/current | tai64nlocal</i>
</pre>

</body>
	</section>
</chapter>

<chapter>
	<title>Development</title>
	<section>
		<title>Where can I report bugs?</title>
		<body><p>For bugs within a specific program, contact the program's author. Otherwise, use our Bugzilla bug tracker at <uri>http://bugs.gentoo.org</uri>.  You can also visit us in <c>#gentoo</c> on the <uri link="http://www.openprojects.net">OpenProjects</uri> IRC network.</p></body>
	</section>

	<section>
		<title>How often are new releases made?</title>
		<body><p>New releases are announced on the <uri link="http://lists.gentoo.org/mailman/listinfo/gentoo-announce">gentoo-announce</uri> mailing list<!-- TODO: approximatley every X months -->.</p></body>
	</section>

	<section>
		<title>I would like a package to be added to Portage; how would I go about this?</title>
		<body><p>Head over to <uri>http://bugs.gentoo.org</uri> and submit a new bug of the type "ebuild".  Attach your ebuild to the bug report.</p></body>
	</section>

	<section>
		<title>How can I add a question or answer to this FAQ?</title>
		<body><p>Submit a new bug over at <uri>http://bugs.gentoo.org</uri> and add it to the "Documents" product.</p></body>
	</section>

	<section>
		<title>make -f Makefile.cvs on a KDE app produces "invalid unused variable" errors</title>
		<body><p>
		Export <c>WANT_AUTOMAKE_1_4=1</c> for all KDE projects before running 
		<c>make -f Makefile.cvs</c>. Also, for KDE2 apps export <c>WANT_AUTOCONF_2_1=1</c>, 
		and for KDE3 apps export <c>WANT_AUTOCONF_2_5=1</c>.
		</p></body>
	</section>


	<section>
   		<title>My speaker beeps like crazy while compiling Mozilla. How do I disable console beeps?
    		</title>

    	<body>
        <p>
            Console beeps can be turned off using setterm, like this ;

        <pre># <i>setterm -blength 0</i></pre>

            If you would like to turn off the console beeps on boot
            you need to put this command in  
            <path>/etc/conf.d/local.start</path>. However, this only
            disables beeps for the current terminal. To disable
            beeps for other terminals, pipe the command output to the 
            target terminal, like this ;

        <pre># <i>setterm -blength 0 >/dev/vc/1</i></pre>

            You need to replace /dev/vc/1 with the terminal
            you would like to disable console beeps for.
        </p>
    	</body>
	</section>

</chapter>




<chapter>
<title>Resources</title>
	<section>
		<title>Where can I find more about supervise used by default in Gentoo Linux 1.0_rc5 and earlier?</title>
		<body><p><!-- TODO: --><uri>http://cr.yp.to/daemontools.html</uri></p></body>
	</section>

	<section>
		<title>Where can I find more information about Gentoo Linux?</title>
		<body><p>The official Gentoo documentation can be found on <uri>http://www.gentoo.org</uri>; general Linux information is at <uri>http://www.linuxdoc.org</uri>.</p></body>
	</section>

	<section>
		<title>Can I buy a CD of Gentoo Linux?</title>
		<body><p>Yes!  Fresh CDRs are available for $5 USD apiece from <uri>http://www.cheapbytes.com</uri>.
		</p></body>
	</section>
	<section>
		<title>This FAQ hasn't answered my question.  What do I do now?</title>
		<body>
		<p>A good first step is to browse the various Gentoo Linux mailing
		lists listed on <uri>www.gentoo.org</uri>.  Even better, Google
		(<uri>www.google.com</uri>) is a wonderful resource for searching
		the Gentoo lists: just enter "lists.gentoo.org foo" to search the
		Gentoo mailing lists for "foo".  If all else fails, or you just want
		to hang out with Gentoo folks, visit us on irc: <c>#gentoo</c>
		on <uri>irc.openprojects.net</uri>.
		</p>
		</body>
	</section>
</chapter>
</guide>
