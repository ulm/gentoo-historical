<?xml version='1.0'?>

<!DOCTYPE guide SYSTEM "../../gentoo-web/dtd/guide.dtd">

<guide>
  <title>TinyQt Overview</title>
  <author title="Core Developer">
	<mail link="gbevin@gentoo.org">Geert Bevin</mail>
  </author>
  
  <abstract>Provides information about the functionalities offered by TinyQt and links to detailed information about the available classes.</abstract>
  
  <version>1.0</version>
  <date>26 Mar 2002</date>
  
  <chapter>
	<title>Introduction</title>
	<section>
	  <title>Overview</title>
	  <body>
		<p>TinyQt is a stripped down version of Qt 3.x that has been put together to use as a backend library for the development of Portage2.</p>
		<p>It provides all the necessary library classes to comfortably develop in a c++ environment.</p>
	  </body>
	</section>
	<section>
	  <title>Details</title>
	  <body>
		<p>Below is an overview of all the classes that are available, click on the class names to get detailed information:</p>
		<table>
		  <tr>
			<th>Class</th><th>Include file</th><th>Description</th>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qasciicache.html">QAsciiCache</uri></ti><ti>qasciicache.h</ti><ti>Template class that provides a cache based on char* keys.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qasciicacheiterator.html">QAsciiCacheIterator</uri></ti><ti>qasciicache.h</ti><ti>Iterator for QAsciiCache collections.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qasciidict.html">QAsciiDict</uri></ti><ti>qasciidict.h</ti><ti>Template class that provides a dictionary based on char* keys.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qasciidictiterator.html">QAsciiDictIterator</uri></ti><ti>qasciidict.h</ti><ti>Iterator for QAsciiDict collections.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qbitarray.html">QBitArray</uri></ti><ti>qbitarray.h</ti><ti>Array of bits.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qbitval.html">QBitVal</uri></ti><ti>qbitarray.h</ti><ti>Internal class, used with QBitArray.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qbuffer.html">QBuffer</uri></ti><ti>qbuffer.h</ti><ti>I/O device that operates on a QByteArray.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qbytearray.html">QByteArray</uri></ti><ti>qcstring.h</ti><ti>Array of bytes.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qcache.html">QCache</uri></ti><ti>qcache.h</ti><ti>Template class that provides a cache based on QString keys.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qchar.html">QChar</uri></ti><ti>qstring.h</ti><ti>Lightweight Unicode character.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qcacheiterator.html">QCacheIterator</uri></ti><ti>qcache.h</ti><ti>Iterator for QCache collections.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qcharref.html">QCharRef</uri></ti><ti>qstring.h</ti><ti>Helper class for QString.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qconststring.html">QConstString</uri></ti><ti>qstring.h</ti><ti>String objects using constant Unicode data.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qcstring.html">QCString</uri></ti><ti>qcstring.h</ti><ti>Abstraction of the classic C zero-terminated char array (char *).</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdatastream.html">QDataStream</uri></ti><ti>qdatastream.h</ti><ti>Serialization of binary data to a QIODevice.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdate.html">QDate</uri></ti><ti>qdatetime.h</ti><ti>Date functions.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdatetime.html">QDateTime</uri></ti><ti>qdatetime.h</ti><ti>Date and time functions.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdir.html">QDir</uri></ti><ti>qdir.h</ti><ti>Access to directory structures and their contents in a platform-independent way.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomattr.html">QDomAttr</uri></ti><ti>qdom.h</ti><ti>Represents one attribute of a QDomElement.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomcdatasection.html">QDomCDATASection</uri></ti><ti>qdom.h</ti><ti>Represents an XML CDATA section.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomcharacterdata.html">QDomCharacterData</uri></ti><ti>qdom.h</ti><ti>Represents a generic string in the DOM.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomcomment.html">QDomComment</uri></ti><ti>qdom.h</ti><ti>Represents an XML comment.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomdocument.html">QDomDocumentFragment</uri></ti><ti>qdom.h</ti><ti>Tree of QDomNodes which is usually not a complete QDomDocument.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomdocumentfragment.html">QDomDocument</uri></ti><ti>qdom.h</ti><ti>The representation of an XML document.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomdocumenttype.html">QDomDocumentType</uri></ti><ti>qdom.h</ti><ti>The representation of the DTD in the document tree.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomelement.html">QDomElement</uri></ti><ti>qdom.h</ti><ti>Represents one element in the DOM tree.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomentity.html">QDomEntity</uri></ti><ti>qdom.h</ti><ti>Represents an XML entity.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomentityreference.html">QDomEntityReference</uri></ti><ti>qdom.h</ti><ti>Represents an XML entity reference.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomimplementation.html">QDomImplementation</uri></ti><ti>qdom.h</ti><ti>Information about the features of the DOM implementation.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomnamednodemap.html">QDomNamedNodeMap</uri></ti><ti>qdom.h</ti><ti>Collection of nodes that can be accessed by name.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomnode.html">QDomNode</uri></ti><ti>qdom.h</ti><ti>The base class for all nodes of the DOM tree.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomnodelist.html">QDomNodeList</uri></ti><ti>qdom.h</ti><ti>List of QDomNode objects.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomnotation.html">QDomNotation</uri></ti><ti>qdom.h</ti><ti>Represents an XML notation.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomprocessinginstruction.html">QDomProcessingInstruction</uri></ti><ti>qdom.h</ti><ti>Represents an XML processing instruction.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qdomtext.html">QDomText</uri></ti><ti>qdom.h</ti><ti>Represents textual data in the parsed XML document.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qfile.html">QFile</uri></ti><ti>qfile.h</ti><ti>I/O device that operates on files.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qfileinfo.html">QFileInfo</uri></ti><ti>qfileinfo.h</ti><ti>System-independent file information.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qintcache.html">QIntCache</uri></ti><ti>qintcache.h</ti><ti>Template class that provides a cache based on long keys.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qintcacheiterator.html">QIntCacheIterator</uri></ti><ti>qintcache.h</ti><ti>Iterator for QIntCache collections.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qintdict.html">QIntDict</uri></ti><ti>qintdict.h</ti><ti>Template class that provides a dictionary based on long keys.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qintdictiterator.html">QIntDictIterator</uri></ti><ti>qintdict.h</ti><ti>Iterator for QIntDict collections.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qiodevice.html">QIODevice</uri></ti><ti>qiodevice.h</ti><ti>The base class of I/O devices.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qlibrary.html">QLibrary</uri></ti><ti>qlibrary.h</ti><ti>Wrapper for handling shared libraries.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qmap.html">QMap</uri></ti><ti>qmap.h</ti><ti>Value-based template class that provides a dictionary.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qmapconstiterator.html">QMapConstIterator</uri></ti><ti>qmap.h</ti><ti>Iterator for QMap.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qmapiterator.html">QMapIterator</uri></ti><ti>qmap.h</ti><ti>Iterator for QMap.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qmemarray.html">QMemArray</uri></ti><ti>qmemarray.h</ti><ti>Template class that provides arrays of simple types.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qptrcollection.html">QPtrCollection</uri></ti><ti>qptrcollection.h</ti><ti>The base class of most pointer-based Qt collections.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qptrdict.html">QPtrDict</uri></ti><ti>qptrdict.h</ti><ti>Template class that provides a dictionary based on void* keys.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qptrdictiterator.html">QPtrDictIterator</uri></ti><ti>qptrdict.h</ti><ti>Iterator for QPtrDict collections.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qptrlist.html">QPtrList</uri></ti><ti>qptrlist.h</ti><ti>Template class that provides doubly-linked lists.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qptrlistiterator.html">QPtrListIterator</uri></ti><ti>qptrlist.h</ti><ti>Iterator for QPtrList collections.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qptrqueue.html">QPtrQueue</uri></ti><ti>qptrqueue.h</ti><ti>Template class that provides a queue.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qptrstack.html">QPtrStack</uri></ti><ti>qptrstack.h</ti><ti>Template class that provides a stack.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qptrvector.html">QPtrVector</uri></ti><ti>qptrvector.h</ti><ti>Template collection class that provides a vector (array).</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qregexp.html">QRegExp</uri></ti><ti>qregexp.h</ti><ti>Pattern matching using regular expressions.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qsettings.html">QSettings</uri></ti><ti>qsettings.h</ti><ti>Persistent platform-independent application settings.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qstrilist.html">QStrIList</uri></ti><ti>qstrlist.h</ti><ti>Doubly-linked list of char* with case-insensitive comparison.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qstrlist.html">QStrList</uri></ti><ti>qstrlist.h</ti><ti>Doubly-linked list of char*.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qstrlistiterator.html">QStrListIterator</uri></ti><ti>qstrlist.h</ti><ti>Iterator for the QStrList and QStrIList classes.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qstring.html">QString</uri></ti><ti>qstring.h</ti><ti>Abstraction of Unicode text and the classic C null-terminated char array.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qstringlist.html">QStringList</uri></ti><ti>qstringlist.h</ti><ti>List of strings.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qtextcodec.html">QTextCodec</uri></ti><ti>qtextcodec.h</ti><ti>Conversion between text encodings.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qtextdecoder.html">QTextDecoder</uri></ti><ti>qtextcodec.h</ti><ti>State-based decoder.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qtextencoder.html">QTextEncoder</uri></ti><ti>qtextcodec.h</ti><ti>State-based encoder.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qtextistream.html">QTextIStream</uri></ti><ti>qtextstream.h</ti><ti>Convenience class for input streams.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qtextostream.html">QTextOStream</uri></ti><ti>qtextstream.h</ti><ti>Convenience class for output streams.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qtextstream.html">QTextStream</uri></ti><ti>qtextstream.h</ti><ti>Basic functions for reading and writing text using a QIODevice.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qtime.html">QTime</uri></ti><ti>qdatetime.h</ti><ti>Clock time functions.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qurl.html">QUrl</uri></ti><ti>qurl.h</ti><ti>URL parser and simplifies working with URLs.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmlattributes.html">QXmlAttributes</uri></ti><ti>qxml.h</ti><ti>XML attributes.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmlcontenthandler.html">QXmlContentHandler</uri></ti><ti>qxml.h</ti><ti>Interface to report logical content of XML data.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmldeclhandler.html">QXmlDeclHandler</uri></ti><ti>qxml.h</ti><ti>Interface to report declaration content of XML data.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmldefaulthandler.html">QXmlDefaultHandler</uri></ti><ti>qxml.h</ti><ti>Default implementation of all XML handler classes.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmldtdhandler.html">QXmlDTDHandler</uri></ti><ti>qxml.h</ti><ti>Interface to report DTD content of XML data.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmlentityresolver.html">QXmlEntityResolver</uri></ti><ti>qxml.h</ti><ti>Interface to resolve extern entities contained in XML data.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmlerrorhandler.html">QXmlErrorHandler</uri></ti><ti>qxml.h</ti><ti>Interface to report errors in XML data.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmlinputsource.html">QXmlInputSource</uri></ti><ti>qxml.h</ti><ti>The input data for the QXmlReader subclasses.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmllexicalhandler.html">QXmlLexicalHandler</uri></ti><ti>qxml.h</ti><ti>Interface to report lexical content of XML data.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmllocator.html">QXmlLocator</uri></ti><ti>qxml.h</ti><ti>The XML handler classes with information about the actual parsing position.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmlnamespacesupport.html">QXmlNamespaceSupport</uri></ti><ti>qxml.h</ti><ti>Helper class for XML readers which want to include namespace support.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmlparseexception.html">QXmlParseException</uri></ti><ti>qxml.h</ti><ti>Used to report errors with the QXmlErrorHandler interface.</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmlreader.html">QXmlReader</uri></ti><ti>qxml.h</ti><ti>Interface for XML readers (i.e. for SAX2 parsers).</ti>
		  </tr>
		  <tr>
			<ti><uri link="http://doc.trolltech.com/3.0/qxmlsimplereader.html">QXmlSimpleReader</uri></ti><ti>qxml.h</ti><ti>Implementation of a simple XML reader (a SAX2 parser).</ti>
		  </tr>
		</table>
	  </body>
	</section>
  </chapter>
  <chapter>
	<title>Installation</title>
	<section>
	  <title>Getting it</title>
	  <body>
		<p>TinyQt is only available as a Portage package and can be easily installed with the following command:</p>
		<pre caption="How to install TinyQt">$ emerge dev-libs/tinyqt</pre>
	  </body>
	</section>
	<section>
	  <title>Using it</title>
	  <body>
		<p>TinyQt will be installed in the <path>/usr/qt/tiny</path> directory. To use this version of Qt instead of another installed version, you have to set the following environment variables:</p>
		<pre caption="Set up the TinyQt environment">$ export QTDIR=/usr/qt/tiny
$ export PATH=$QTDIR/bin:$PATH
$ export LD_LIBRARY_PATH=$QTDIR/lib:$LD_LIBRARY_PATH</pre>
		<p>Be sure that this environment is setup even before calling <uri link="http://doc.trolltech.com/3.0/qmake-manual.html">qmake</uri> to process your Qt project files. Otherwise the generated makefiles will link your application against the wrong version of the Qt libraries.</p>
	  </body>
	</section>
  </chapter>
  
</guide>
