<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/cs/devfs-guide.xml,v 1.4 2012/04/18 18:30:15 swift Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="cs">
<title>Průvodce devfs</title>
<author title="Autor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Korektor">
  <mail link="seemant@gentoo.org">Seemant Kulleen</mail>
</author>
<author title="Překladatel">
   <mail link="vaclav.kocian@wo.cz">Václav Kocián</mail>
</author>


<abstract>
V&nbsp;tomto dokumentu naleznete informace o tom, co je vlastně
devfs a jak s&nbsp;ním pracovat.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.6</version>
<date>2005-07-21</date>

<chapter>
<title>Co je devfs?</title>
<section>
<title>Staré (dobré?) časy</title>
<body>

<warn>
devfs je <e>překonaný</e> a byl ze stabilní větve 2.6 ve&nbsp;verzi 2.6.13
odstraněn. Uživatelům používajícím jádra 2.6 je tímto doporučeno, aby přešli na
udev. Pro další informace o udev si prosím přečtěte <uri
link="/doc/en/udev-guide.xml">Gentoo průvodce udev</uri>.
</warn>

<p>
Tradiční implementace Linuxu poskytují svým uživatelům abstraktní adresář
zařízení nazývaný <path>/dev</path>. Uvnitř tohoto adresáře může uživatel
nalézt <e>soubory zařízení</e> (device nodes), speciální soubory, které
reprezentují různá zařízení uvnitř systému, například <path>/dev/hda</path>
představující první IDE zařízení. Tento přístup umožňuje uživatelům vytvářet
programy, které pracují s&nbsp;hardwarem tak, jako by to byl běžný soubor,
místo aby museli využívat speciální API.
</p>

<p>
Soubory zařízení jsou rozděleny do dvou skupin, na <e>znaková</e> a
<e>bloková</e>. První skupinu tvoří zařízení, na nichž nejsou čtení ani zápis
bufferovány, kde se nepoužívá vyrovnávací paměť. Druhá skupina je přirozeně
tvořena hardwarem, jehož čtení a zápis bufferovány jsou. Z&nbsp;obou typů
zařízení může čtení probíhat po znacích nebo blocích. Označení může tedy znít
zmateně a, popravdě řečeno, je nesprávné.
</p>

<p>
Podíváte-li se na určitý soubor zařízení, můžete vidět něco takového:
</p>

<pre caption="Zobrazení informací o souboru zařízení">
# <i>ls -l /dev/hda</i>
brw-rw----    1 root     disk       3,   0 Jul  5  2000 /dev/hda
</pre>

<p>
V&nbsp;předchozím příkladu jsme viděli, že <path>/dev/hda</path> je blokové
zařízení. Důležitější však je, že má přiřazena dvě čísla:  <b>3, 0</b>.
Tento pár čísel je nazýván  <e>major-minor</e> pár, hlavní a vedlejší číslo. Je
využíván kernelem k&nbsp;mapování souboru zařízení na skutečný hardware. Major
odpovídá určitému zařízení, minor jeho části nebo dílčímu celku. Vypadá to
nejasně? Není.
</p>

<p>
Jako příklad můžeme uvést <path>/dev/hda4</path> nebo <path>/dev/tty5</path>.
První soubor zařízení odpovídá čtvrtému oddílu na prvním IDE zařízení. Jeho
major-minor pár je <b>3, 4</b>. Jinými slovy, minor odpovídá oddílu,
zatímco major odpovídá zařízení. Druhý příklad má major-minor pár <b>4,
5</b>. V&nbsp;tomto případě major odpovídá ovladači terminálu a minor číslu
terminálu (zde pátého).
</p>

</body>
</section>
<section>
<title>Problémy</title>
<body>

<p>
Pokud si takový <path>/dev</path> zběžně prohlédnete, zjistíte, že v&nbsp;něm
nejsou uvedena pouze vaše zařízení, nýbrž <e>všechna</e> možná, která si lze
představit. Jinak řečeno, máte soubory i pro zařízení, která nemáte. Správa
takovéto skupiny zařízení je přinejmenším nešikovná. Představte si například,
že potřebujete změnit přístupová práva u všech souborů, ke&nbsp;kterým existuje
ve vašem systému odpovídající zařízení, a ostatní ponechat beze změny.
</p>

<p>
Když do svého systému přidáte nový hardware, pro který dosud nemáte soubor
zařízení, budete si takový soubor muset vytvořit. Zkušení uživatelé vědí, že je
to možné provést pomocí <c>./MAKEDEV</c> uvnitř stromu <path>/dev</path>, ale
víte okamžitě, jaký soubor zařízení přesně vytvořit?
</p>

<p>
Máte-li programy pracující s&nbsp;hardwarem přes soubory zařízení, nemůžete mít
root oddíl připojený pouze pro čtení, přestože není žádný jiný důvod mít jej
připojený i pro zápis. Zároveň nelze mít <path>/dev</path> umístěný na
samostatném oddílu, protože <c>mount</c> potřebuje <path>/dev</path>
k&nbsp;připojování oddílů.
</p>

</body>
</section>
<section>
<title>Řešení</title>
<body>

<p>
Jak si dovedete představit, "kerneloví" hackeři vymysleli nejedno řešení těchto
problémů. Mnoho z&nbsp;nich má však jiné trhliny, jak je uvedeno
v&nbsp;<uri>http://www.atnf.csiro.au/people/rgooch/linux/docs/devfs.html#faq-why</uri>.
My zde nebudeme hovořit o všech těchto implementacích, ale zaměříme se na jednu,
která pronikla do oficiálních zdrojových kódů jádra: devfs.
</p>

</body>
</section>
<section>
<title>devfs jako absolutní vítěz?</title>
<body>

<p>
devfs řeší všechny zmíněné problémy. Poskytuje uživateli pouze existující
zařízení, přidává soubory, jakmile jsou nová zařízení nalezena a umožňuje
připojit kořenový souborový systém jen pro čtení. Řeší i mnoho dalších problémů,
které zde nejsou uvedeny, protože jsou pro uživatele méně zajímavé.
</p>

<p>
Například se s&nbsp;devfs nemusíte trápit s&nbsp;major-minor páry. Jsou sice
stále podporovány kvůli zpětné kompatibilitě, ale nejsou zapotřebí. To Linuxu
umožňuje podporovat ještě více zařízení, jelikož teď už neexistují žádné limity
(čísla mají vždy své meze :).
</p>

<p>
Jenže devfs přichází se svými vlastními problémy, které sice nejsou pro koncové
uživatele příliš viditelné, ale pro vývojáře kernelu jsou natolik závažné, aby
devfs označili za <e>obsolete</e> (zastaralý a překonaný) podporou <uri
link="/doc/en/udev-guide.xml">udev</uri>, který Gentoo podporuje a používá jako
výchozí na většině architektur od verze 2005.0 s&nbsp;jádrem řady 2.6.
</p>

<p>
Více o tom, proč je devfs označen jako obsolete, se dozvíte v&nbsp;<uri
link="http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev-FAQ">udev
FAQ</uri> a <uri
link="http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev_vs_devfs">udev
versus devfs</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Orientace ve&nbsp;stromu zařízení</title>
<section>
<title>Adresáře</title>
<body>

<p>
Jedna z&nbsp;prvních věcí, kterých si můžete všimnout, je, že devfs používá
k&nbsp;seskupování zařízení adresáře, což zlepšuje čitelnost.
</p>

<p>
Například všechna zařízení související s&nbsp;IDE naleznete v&nbsp;adresáři
<path>/dev/ide/</path> a SCSI zařízení v&nbsp;<path>/dev/scsi/</path>. SCSI a
IDE disky jsou zobrazeny stejným způsobem, tedy obojí mají stejnou strukturu
podadresářů.
</p>

<p>
IDE a SCSI disky jsou řízeny adaptérem (integrovaným nebo samostatnou kartou),
nazývaným <e>host</e>. Každý adaptér má několik kanálů. Kanálu se říká
<e>bus</e> (sběrnice). Na každém kanálu můžete být několik ID. Takové ID
identifikuje disk a říká se mu <e>target</e> (cíl). Některá SCSI zařízení mají
více tzv. LUN (<e>Logical Unit Numbers</e>), například zařízení obsluhující
najednou několik médií (rychlé hi-end páskové jednotky). Většina zařízení má
většinou jeden LUN, <path>lun0/</path>.
</p>

<p>
Takže, tam kde byl předtím <path>/dev/hda4</path>, máme nyní
<path>/dev/ide/host0/bus0/target0/lun0/part4</path>. To je mnohem jednodušší...
ne, nehádejte se se mnou... to <e>je</e> jednodušší... a basta! :)
</p>

<note>
Můžete také použít unixovatější označení souborů zařízení, jako třeba
<path>c0b0t0u0p2</path>. Tyto jsou k&nbsp;nalezení
v&nbsp;<path>/dev/ide/hd</path>, <path>/dev/scsi/hd</path> atd.
</note>

<p>
Pro představu, toto je výpis adresářů z&nbsp;mého notebooku:
</p>

<pre caption="Adresáře uvnitř /dev">
cdroms/     cpu/        discs/          floppy/
ide/        input/      loop/           misc/
netlink/    printers/   pts/            pty/
scsi/       sg/         shm/            sound/
sr/         usb/        vc/             vcc/
</pre>

</body>
</section>
<section>
<title>Zpětná kompatibilita při používání devfs</title>
<body>

<p>
Používání tohoto nového způsobu značení zní pěkně, ale některé nástroje a
programy používají předchozí, starý způsob. Pro zajištění funkčnosti systému je
k&nbsp;dispozici <c>devfsd</c>. Tento démon vytváří symbolické linky se starými
názvy ukazující na nové soubory zařízení.
</p>

<pre caption="Vytvořené symbolické odkazy">
$ <i>ls -l /dev/hda4</i>
lr-xr-xr-x    1 root     root           33 Aug 25 12:08 /dev/hda4 -> ide/host0/bus0/target0/lun0/part4
</pre>

<p>
S&nbsp;<c>devfsd</c> můžete také nastavit přístupová práva, vytvářet nové
soubory zařízení, definovat akce a podobně. To vše je popsáno
v&nbsp;následující kapitole.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Správa stromu zařízení</title>
<section>
<title>Restart devfsd</title>
<body>

<p>
Pokud změníte soubor <path>/etc/devfsd.conf</path> a chcete, aby se změny ihned
promítly do systému, nemusíte restartovat. V&nbsp;závislosti na tom, co chcete,
můžete použít následující signály:
</p>

<p>
<b>SIGHUP</b> přiměje <c>devfsd</c> znovu načíst konfigurační soubor, načíst
sdílené objekty a vygenerovat události REGISTER pro každý listový uzel stromu
zařízení.
</p>

<p>
<b>SIGUSR1</b> udělá totéž, avšak bez generování událostí REGISTER.
</p>

<p>
K&nbsp;zaslání signálu použijte <c>kill</c> nebo <c>killall</c>:
</p>

<pre caption="Zaslání signálu SIGHUP devfsd">
# <i>kill -s SIGHUP `pidof devfsd`</i>
<comment>nebo</comment>
# <i>killall -s SIGHUP devfsd</i>
</pre>

</body>
</section>
<section>
<title>Odstranění zpětně kompatibilních symbolických linků</title>
<body>

<warn>
V&nbsp;současné době Gentoo nemůže bez těchto linků fungovat.
</warn>

<p>
Jestliže chcete zpětně kompatibilní linky znečisťující <path>/dev</path>
odstranit ze&nbsp;svého Gentoo (Gentoo je implicitně aktivuje), otevřete soubor
<path>/etc/devfsd.conf</path> a odstraňte z&nbsp;něj následující řádky:
</p>

<pre caption="/etc/devfsd.conf pro zpětnou kompatibilitu">
<comment># Zakomentujte následující dva řádky pro odstranění symbolických odkazů</comment>
REGISTER        .*  MKOLDCOMPAT
UNREGISTER      .*  RMOLDCOMPAT
</pre>

<p>
Aby se změny projevily, musíte restartovat (počítač :-) ).
</p>

</body>
</section>
<section>
<title>Zakázání funkce autoload</title>
<body>

<p>
Jestliže zavedete modul, devfs automaticky vytvoří soubory zařízení. Pokud Vám
toto chování nevyhovuje, odstraňte následující řádek
z&nbsp;<path>/etc/devfsd.conf</path>:
</p>

<pre caption="/etc/devfsd.conf, funkce autoload">
LOOKUP      .*  MODLOAD
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Položky vztahující se k&nbsp;přístupovým právům</title>
<section>
<title>Nastavení/změna přístupových práv pomocí devfsd</title>
<body>

<note>
Tyto instrukce platí, pokud je v&nbsp;souboru
<path>/etc/pam.d/system-auth</path> zakázána pam_console. Pokud ji povolíte, má
poslední slovo ve věcech přístupových práv PAM.
</note>

<p>
Chcete-li nastavit přístupová práva pomocí <path>/etc/devfsd.conf</path>,
použijte syntaxi z&nbsp;následujícího příkladu:
</p>

<pre caption="Přístupová práva v /etc/devfsd.conf">
REGISTER    ^cdroms/.*  PERMISSIONS root.cdrom 0660
</pre>

<p>
Druhé pole je skupina zařízení, začínající z&nbsp;<path>/dev</path>. Jde o
regulární výraz, takže můžete jedním pravidlem vybrat několik souborů zařízení.
</p>

<p>
Čtvrté pole určuje vlastnictví souboru a páté obsahuje přístupová práva.
</p>

</body>
</section>
<section>
<title>Jak manuálně nastavit přístupová práva a nechat je devfsd uložit</title>
<body>

<p>
Výchozí chování Gentoo je toto: provedete-li <c>chown</c> (změnu vlastníka) nebo
<c>chmod</c> (změnu práv) u některého ze&nbsp;souborů zařízení, <c>devfsd</c>
tyto změny uloží, takže zůstanou platné i po restartu. To díky tomu, že soubor
<path>/etc/devfsd.conf</path> obsahuje následující řádky:
</p>

<pre caption="/etc/devfsd.conf pro ukládání přístupových práv">
REGISTER        ^pt[sy]/.*   IGNORE
CHANGE          ^pt[sy]/.*   IGNORE
CREATE          ^pt[sy]/.*   IGNORE
DELETE          ^pt[sy]      IGNORE
REGISTER        ^log         IGNORE
CHANGE          ^log         IGNORE
CREATE          ^log         IGNORE
DELETE          ^log         IGNORE
REGISTER        .*           COPY    /lib/dev-state/$devname $devpath
CHANGE          .*           COPY    $devpath /lib/dev-state/$devname
CREATE          .*           COPY    $devpath /lib/dev-state/$devname
DELETE          .*           CFUNCTION GLOBAL unlink
/lib/dev-state/$devname
RESTORE         /lib/dev-state
</pre>

<p>
Jinak řečeno, změněné soubory zařízení jsou, jakmile ke změně dojde,
překopírovány do <path>/lib/dev-state</path> odkud jsou při každém restartu
kopírovány zpět do <path>/dev</path>.
</p>

<p>
Jinou možností je připojit <path>/lib/dev-state</path> do <path>/dev</path> při
startu systému. Aby to bylo možné, musíte se ujistit, že devfs není připojován
automaticky (to znamená, že budete možná muset přeložit jádro) a že existuje
<path>/dev/console</path>. Potom někam na začátek startovacích skriptů vložte
následující:
</p>

<pre caption="Připojení /lib/dev-state do /dev">
mount --bind /dev /lib/dev-state
mount -t devfs none /dev
devfsd /dev
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Další zdroje</title>
<section>
<body>

<p>
Chcete-li se o devfs dozvědět více, prohlédněte si následující zdroje.
</p>

<p>
Manuálová stránka devfsd.conf vysvětluje syntaxi souboru
<path>/etc/devfsd.conf</path>. Pro její zobrazení spusťte příkaz <c>man
devfsd.conf</c>.
</p>

<p>
<uri
link="http://www.atnf.csiro.au/people/rgooch/linux/docs/devfs.html">devfs
často kladené otázky</uri> vysvětlí "všechno", co se týká devfs. Obsahuje také
popis vnitřní struktury devfs a způsobů, jak podporovat devfs v&nbsp;ovladačích.
</p>

<p>
Na <uri link="http://www.linuxjournal.com">LinuxJournal</uri> je zajímavý
článek o <uri link="http://www.linuxjournal.com/article.php?sid=6035">devfs pro
řízení a správu</uri>.
</p>

<p>
Daniel Robbins napsal soubor článků pro  IBM's DeveloperWorks o vyspělých
souborových systémech. Tři z&nbsp;nich jsou o devfs:
</p>

<ul>
  <li>
    <uri link="http://www-106.ibm.com/developerworks/linux/library/l-fs4/">
    Úvod do devfs</uri>
  </li>
  <li>
    <uri link="http://www-106.ibm.com/developerworks/linux/library/l-fs5/">
    Nastavení devfs</uri>
  </li>
  <li>
    <uri link="http://www-106.ibm.com/developerworks/linux/library/l-fs6/">
    Implementace devfs</uri>
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
