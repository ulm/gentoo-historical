<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/cs/handbook/hb-working-features.xml,v 1.6 2005/10/13 18:44:30 jkt Exp $ -->

<sections>

<version>1.27</version>
<date>2005-10-09</date>

<section>
<title>Možnosti Portage</title>
<body>

<p>
Aby se Vám s&nbsp;Gentoo lépe pracovalo, nabízí Portage mnoho dalších možností.
Některé z&nbsp;nich závisí na různých doplňkových nástrojích vylepšujících výkon,
spolehlivost, bezpečnost,...
</p>

<p>
Pro povolení nebo zakázání určité možnosti musíte změnit proměnnou
<c>FEATURES</c> v&nbsp;souboru <path>/etc/make.conf</path>, která obsahuje
různé hodnoty oddělené mezerami. V&nbsp;některých případech budete navíc muset
doinstalovat příslušný nástroj, na kterém daná funkce závisí.
</p>

<p>
V&nbsp;tomto dokumentu nebudou popsány všechny funkce, které Portage umí; pro
jejich kompletní přehled se podívejte na manuálovou stránku
<path>make.conf</path>:
</p>

<pre caption="Zobrazení manuálové stránky make.conf">
$ <i>man make.conf</i>
</pre>

<p>
Abyste zjistili, jaké možnosti jsou zapnuty, podívejte se do výstupu
<c>emerge --info</c> na proměnnou FEATURES:
</p>

<pre caption="Které FEATURES jsou již zapnuté?">
$ <i>emerge --info | grep FEATURES</i>
</pre>

</body>
</section>
<section>
<title>Distribuované kompilace</title>
<subsection>
<title>Použití distcc</title>
<body>

<p>
<c>distcc</c> slouží pro rozdělení kompilace mezi více strojů v&nbsp;síti, které
navíc nemusí být nutně stejné. Klient <c>distcc</c> posílá dostupným serverům, na
kterých běží <c>distccd</c>, všechny potřebné informace, takže mohou kompilovat
části zdrojového kódu paralelně. Výsledkem je celkové urychlení kompilace.
</p>

<p>
Více informací o <c>distcc</c> a o jejím použití s&nbsp;Gentoo můžete najít
v&nbsp;<uri link="/doc/cs/distcc.xml">Gentoo distcc dokumentaci</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Instalace distcc</title>
<body>

<p>
Distcc je dodávaná s&nbsp;grafickým nástrojem pro monitorování úkolů, které Váš
počítač požaduje od ostatních. Používáte-li Gnome, přidejte do USE proměnnou
'gnome', pokud ne, a přesto chcete mít tento nástroj k&nbsp;dispozici, přidejte
'gtk'.
</p>

<pre caption="Instalace distcc">
# <i>emerge distcc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Aktivace podpory v&nbsp;Portage</title>
<body>

<p>
V&nbsp;souboru <path>/etc/make.conf</path> přidejte do proměnné FEATURES hodnotu
<c>distcc</c>. Dále je potřeba změnit nastavení MAKEOPTS; známé pravidlo je
hodnota "-jX", kde X je celkový počet procesorů, na kterých běží <c>distccd</c>
(včetně počítače, který posílá požadavky na kompilace) plus jedna, avšak můžete
dosáhnout lepších výsledků i s&nbsp;jinými hodnotami.
</p>

<p>
Nyní spusťte <c>distcc-config</c> a zadejte seznam dostupných distcc serverů.
Popíšeme si jednoduchý příklad, kde budeme používat servery 192.168.1.102
(počítač, na kterém nyní pracujeme), 192.168.1.103 a 192.168.1.104 ("vzdálené"
stroje):
</p>

<pre caption="Nastavení distcc pro použití tří serverů">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>

<p>
Nezapomeňte spustit démona <c>distccd</c>:
</p>

<pre caption="Spuštění démonu distccd">
# <i>rc-update add distccd default</i>
# <i>/etc/init.d/distccd start</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Vyrovnávací paměť kompilace (cache)</title>
<subsection>
<title>Představujeme ccache</title>
<body>

<p>
<c>ccache</c> je rychlá vyrovnávací paměť (cache) kompilátoru, která si
zapamatuje výsledek každého překladu. V&nbsp;případě, že budete chtít
překompilovat stejný program později, se tak celý proces podstatně urychlí, pro
běžné aplikace přibližně pětkrát až desetkrát.
</p>

<p>
Pokud Vás zajímají výhody i nevýhody ccache, navštivte prosím její
<uri link="http://ccache.samba.org">domovskou stránku</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Instalace ccache</title>
<body>

<p>
Pro instalaci <c>ccache</c> spusťte <c>emerge ccache</c>:
</p>

<pre caption="Instalace ccache">
# <i>emerge ccache</i>
</pre>

</body>
</subsection>
<subsection>
<title>Aktivace podpory v&nbsp;Portage</title>
<body>

<p>
Otevřete soubor <path>/etc/make.conf</path> a přidejte <c>ccache</c> do proměnné
FEATURES. Navíc vytvořte další proměnnou CCACHE_SIZE a nastavte ji na hodnotu
"2G":
</p>

<pre caption="Změna CCACHE_SIZE v /etc/make.conf">
CCACHE_SIZE="2G"
</pre>

<p>
Abyste zjistili, zda ccache funguje, požádejte ji o zobrazení statistiky.
Protože Portage používá pro ccache jiný domovský adresář, musíte nastavit
proměnnou <c>CCACHE_DIR</c>:
</p>

<pre caption="Zobrazení statistiky ccache">
# <i>CCACHE_DIR="/var/tmp/ccache" ccache -s</i>
</pre>

<p>
Adresář <path>/var/tmp/ccache</path> je výchozí umístění domovského adresáře
ccache pro Portage. Chcete-li jej přesunout jinam, změňte proměnnou
<c>CCACHE_DIR</c> v&nbsp;souboru <path>/etc/make.conf</path>.
</p>

<p>
Když však spouštíte <c>ccache</c> ručně, snaží se používat adresář
<path>${HOME}/.ccache</path>. Při dotazech na využití ccache Portage proto
musíte použít proměnnou <c>CCACHE_DIR</c>.
</p>

</body>
</subsection>
<subsection>
<title>Použití ccache pro C kompilace mimo Portage</title>
<body>

<p>
Chcete-li používat ccache i pro kompilace mimo Portage, musíte přidat
<path>/usr/lib/ccache/bin</path> na začátek proměnné PATH (před
<path>/usr/bin</path>). Dosáhnete toho editací souboru
<path>/etc/env.d/00basic</path>, který obsahuje první definici proměnné
prostředí <c>PATH</c>:
</p>

<pre caption="Editace /etc/env.d/00basic">
PATH="<i>/usr/lib/ccache/bin</i>:/opt/bin"
</pre>

</body>
</subsection>
</section>
<section>
<title>Podpora binárních balíčků</title>
<subsection>
<title>Vytváření předkompilovaných balíčků</title>
<body>

<p>
Portage podporuje instalace z&nbsp;předkompilovaných balíčků. I když je samo
Gentoo kromě takzvaných GRP snapshotů neposkytuje, Portage je zpracovávat umí.
</p>

<p>
Pokud je balíček již nainstalován, můžete z něj vytvořit binární pomocí
<c>quickpkg</c>; pokud není, použijte <c>emerge</c> s&nbsp;parametrem
<c>--buildpkg</c> či <c>--buildpkgonly</c>.
</p>

<p>
Chcete-li, aby Portage vytvářelo předkompilované balíčky při každé instalaci,
přidejte do proměnné FEATURES hodnotu <c>buildpkg</c>.
</p>

<p>
Rozšířenější podporu vytváření předkompilovaných skupin balíčků poskytuje
<c>catalyst</c>; pro více informací si prosím přečtěte <uri
link="/proj/en/releng/catalyst/reference.xml">Referenční manuál Catalyst</uri>
a <uri link="/proj/en/releng/catalyst/catalyst-howto.xml">Catalyst Howto</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Instalace předkompilovaných balíčků</title>
<body>

<p>
Gentoo sice předkompilované balíčky přímo neposkytuje, ale můžete si je vytvořit
sami. Pokud se tak rozhodnete, musíte Portage informovat, kde je má hledat,
a to pomocí proměnné PORTAGE_BINHOST. Ukládáte-li například balíčky na
ftp://buildhost/gentoo, použijte:
</p>

<pre caption="Nastavení PORTAGE_BINHOST v /etc/make.conf">
PORTAGE_BINHOST="ftp://buildhost/gentoo"
</pre>

<p>
Když chcete nainstalovat předkompilovaný balíček, přidejte <c>--getbinpkg</c>
k&nbsp;volbě <c>--usepkg</c> příkazu emerge. První zajistí stažení
předkompilovaného balíčku, druhá jeho použití namísto nové kompilace.
</p>

<p>
Chcete-li například nainstalovat <c>gnumeric</c> z&nbsp;předkompilovaného
balíčku, použijte toto:
</p>

<pre caption="Instalace gnumeric z předkompilovaného balíčku">
# <i>emerge --usepkg --getbinpkg gnumeric</i>
</pre>

<p>
Více informací o předkompilovaných balíčcích najdete v&nbsp;manuálové stránce
příkazu emerge:
</p>

<pre caption="Manuálová stránka příkazu emerge">
$ <i>man emerge</i>
</pre>

</body>
</subsection>
</section>
</sections>
