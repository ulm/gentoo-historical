<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/cs/handbook/hb-working-variables.xml,v 1.5 2006/03/29 18:31:13 jkt Exp $ -->

<sections>

<version>1.14</version>
<date>2005-09-28</date>

<section>
<title>Proměnné prostředí?</title>
<subsection>
<title>Co to je</title>
<body>

<p>
Proměnná prostředí je pojmenovaný objekt, který uchovává nějakou informaci
používanou jedno nebo více aplikacemi. Mnoho uživatelů (hlavně ti, kdo
s&nbsp;Linuxem nepracují déle) tato nastavení považují za divné nebo nesnadno
udržovatelné, není to však pravda: použití proměnných prostředí se dá
ve&nbsp;skutečnosti snadno ovlivnit nastavení celé řady aplikací jedinou změnou.
</p>

</body>
</subsection>
<subsection>
<title>Důležité příklady</title>
<body>

<p>
V&nbsp;následující tabulce naleznete několik důležitých proměnných prostředí,
které jsou použity na linuxových systémech, včetně jejich popisu. Ukázkové
hodnoty jsou popsány níže.
</p>

<table>
<tr>
  <th>Proměnná</th>
  <th>Popis</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
    Tato proměnná obsahuje dvojtečkou oddělený seznam adresářů, ve&nbsp;kterých
    systém vyhledává spustitelné soubory. Zadáte-li jméno příkazu (jako
    například <c>ls</c>, <c>rc-update</c> nebo <c>emerge</c>), avšak tento není
    nalezen v&nbsp;žádném z&nbsp;těchto adresářů, systém jej nebude moci spustit
    a budete muset použít plnou cestu (například <c>/bin/ls</c>).
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
    Slouží ke&nbsp;stejné funkci jako <c>PATH</c>, avšak obsahuje seznam
    procházených adresářů pro uživatele root.
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
    Tato proměnná obsahuje dvojtečkou oddělený seznam adresářů procházených
    dynamickým linkerem při hledání knihovny.
  </ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>
    Dvojtečkou oddělený seznam adresářů, ve&nbsp;kterých příkaz <c>man</c>
    vyhledává manuálové stránky.
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
    Dvojtečkou oddělený seznam adresářů, ve&nbsp;kterých příkaz <c>info</c>
    vyhledává informační stránky.
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
    Cesta k&nbsp;programu, který se používá pro výpis obsahu souborů (například
    <c>less</c> nebo <c>more</c>).
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
    Tato proměnná určuje cestu k&nbsp;programu, který se používá pro editaci
    obsahu souborů (například <c>nano</c> nebo <c>vi</c>).
  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
    Obsahuje dvojtečkou oddělený seznam adresářů obsahujících data specifická
    pro KDE.
  </ti>
</tr>
<tr>
  <ti>CLASSPATH</ti>
  <ti>
    Dvojtečkou oddělený seznam adresářů obsahujících Javové třídy (class).
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
    Tato proměnná obsahuje <e>mezerou</e> oddělený seznam adresářů, které by
    Portage mělo při aktualizacích chránit.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
    Tato proměnná obsahuje <e>mezerou</e> oddělený seznam adresářů, které by
    Portage nemělo chránit během aktualizací.
  </ti>
</tr>
</table>

<p>
Následují ukázky definic všech výše zmíněných proměnných:
</p>

<pre caption="Ukázkovy proměnných">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CLASSPATH="/opt/blackdown-jre-1.4.1/lib/rt.jar:."
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf"
</pre>

</body>
</subsection>
</section>
<section>
<title>Globální definice proměnných</title>
<subsection>
<title>Adresář /etc/env.d</title>
<body>

<p>
Adresář <path>/etc/env.d</path> v&nbsp;Gentoo slouží k&nbsp;centralizaci správy
proměnných prostředí; naleznete v&nbsp;něm mnoho souborů, jako například
<path>00basic</path>, <path>05gcc</path> atd., které obsahují definice
proměnných pro aplikace, po kterých jsou pojmenovány.
</p>

<p>
Například při instalaci <c>gcc</c> byl ebuildem vytvořen soubor
<path>05gcc</path>, který obsahuje definice těchto proměnných:
</p>

<pre caption="/etc/env.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
Jiné distribuce Vás žádají o změnu nebo přidávání proměnných prostředí do
souboru <path>/etc/profile</path> nebo podobných, avšak Gentoo Vám (a systému
Portage) jejich správu usnadní, neboť vše potřebné naleznete v&nbsp;jednom
adresáři.
</p>

<p>
Například během aktualizace <c>gcc</c> dojde ke&nbsp;změně souboru
<path>/etc/env.d/05gcc</path> bez nutnosti ručního zásahu uživatele.
</p>

<p>
Toto není výhoda jenom pro Portage, ale i pro Vás jakožto uživatele. Občas
můžete potřebovat nastavit nějakou proměnnou pro celý systém, například
proměnnou <c>http_proxy</c>. Nemusíte se probírat obrovským souborem
<path>/etc/profile</path>, ale stačí, abyste vytvořili nový soubor
(<path>/etc/env.d/99local</path>) a do něj zadali potřebné definice:
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
Použitím jednoho souboru pro všechny Vaše proměnné navíc získáte přehled o těch
proměnných, které jste zadali sami.
</p>

</body>
</subsection>
<subsection>
<title>Skript env-update</title>
<body>

<p>
Proměnnou <c>PATH</c> definuje v&nbsp;adresáři <path>/etc/env.d</path> více
souborů. Není to však omyl - spuštění <c>env-update</c> spojí tyto definice
dohromady před samotnou aktualizací proměnných. Proto je snadné, aby jednotlivé
balíčky (a nebo uživatelé) přidávaly vlastní nastavení bez vzájemné
interference.
</p>

<p>
Skript <c>env-update</c> spojí definice proměnných ze&nbsp;souborů
z&nbsp;adresáře <path>/etc/env.d</path>; zpracovávány jsou pouze ty soubory,
jejichž jména začínají dvěma číslicemi.
</p>

<pre caption="Pořadí aktualizací pro env-update">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
Toto spojování obsahu proměnných však neproběhne vždy, avšak pouze pro tyto
proměnné: <c>KDEDIRS</c>, <c>PATH</c>, <c>CLASSPATH</c>, <c>LDPATH</c>,
<c>MANPATH</c>, <c>INFODIR</c>, <c>INFOPATH</c>, <c>ROOTPATH</c>,
<c>CONFIG_PROTECT</c>, <c>CONFIG_PROTECT_MASK</c>, <c>PRELINK_PATH</c> a
<c>PRELINK_PATH_MASK</c>. Pro všechny ostatní proměnné platí, že se
použije naposledy definovaná hodnota (abecední pořadí souborů uvnitř
<path>/etc/env.d</path>).
</p>

<p>
Spuštění skriptu <c>env-update</c> vytvoří proměnné prostředí a uloží je do
<path>/etc/profile.env</path>, který je dále používán souborem
<path>/etc/profile</path>. Zároveň použije informace z&nbsp;proměnné
<c>LDPATH</c> a použije je k&nbsp;vytvoření souboru
<path>/etc/ld.so.cache</path> sloužícího dynamickému linkeru.
</p>

<p>
Chcete-li ihned použít výsledky <c>env-update</c> ihned po jeho spuštění,
spusťte následující příkaz. Uživatelé, kteří Gentoo instalovali sami, si jej
pravděpodobně pamatují z&nbsp;instalace:
</p>

<pre caption="Aktualizace prostředí">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

<note>
Výše zmíněný příkaz pouze aktualizuje proměnné v&nbsp;aktuálním terminálu,
<e>nově otevřených</e> konzolích a jejich potomcích. Proto pokud pracujete
v&nbsp;X11, buď budete muset spustit <c>source /etc/profile</c> v&nbsp;každém
terminálu který otevřete nebo restartovat X, aby se změny promítly. Používáte-li
login manager (grafického správce přihlašování), spusťte jako root
<c>/etc/init.d/xdm restart</c>; pokud jej nepoužíváte, odhlaste se a znovu se
nalogujte.
</note>

</body>
</subsection>
</section>
<section>
<title>Lokální definice proměnných</title>
<subsection>
<title>Pro jednoho uživatele</title>
<body>

<p>
Ne vždy chcete definovat proměnnou prostředí globálně pro celý systém. Můžete
například chtít přidat <path>/home/uzivatel/bin</path> a aktuální adresář (tj.
ten, ve&nbsp;kterém se právě nacházíte) do proměnné <c>PATH</c>, avšak ne pro
všechny uživatele. V&nbsp;takovém případě byste měli použít
<path>~/.bashrc</path> nebo <path>~/.bash_profile</path>:
</p>

<pre caption="Rozšíření PATH pro jedonoho uživatele - ~/.bashrc">
<comment>(dvojtečka na konci použije aktuální adresář)</comment>
PATH="${PATH}:/home/my_user/bin:"
</pre>

<p>
Až se znovu přihlásíte, proměnná <c>PATH</c> bude změněna.
</p>

</body>
</subsection>
<subsection>
<title>Pro aktuální relaci</title>
<body>

<p>
Někdy můžete chtít použít programy z&nbsp;dočasnéhop adresáře bez jakéhokoli
editování souborů nebo zadávání plné cesty před každým příkazem, protože o
změnu stojíte pouze na krátkou dobu.
</p>

<p>
V&nbsp;takovém případě stačí definovat proměnnou <c>PATH</c> pouze pro současnou
relaci příkazem <c>export</c>. Tyto dočasné změny proměnné budou funkční až do
odhlášení.
</p>

<pre caption="Definice proměnné prostředí pro současnou relaci">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>
