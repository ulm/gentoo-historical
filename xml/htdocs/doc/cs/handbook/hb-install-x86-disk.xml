<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/cs/handbook/hb-install-x86-disk.xml,v 1.7 2005/08/20 18:40:57 jkt Exp $ -->

<sections>

<version>2.3</version>
<date>2005-08-02</date>

<section>
<title>Úvod do blokových zařízení</title>
<subsection>
<title>Bloková zařízení</title>
<body>

<p>
Nyní se podíváme na to, jak Gentoo Linux i Linux obecně zachází s&nbsp;disky
a souvisejícími věcmi, jako jsou třeba souborové systémy, diskové oddíly a
bloková zařízení. Až budete s&nbsp;těmito věcmi srozuměni, provedeme Vás
procesem vytvoření diskových oddílů a souborových systémů (filesystémů), na
které později nainstalujete svůj Gentoo Linux.
</p>

<p>
Na začátku představíme <e>bloková zařízení</e>. Nejznámější z&nbsp;nich jsou
zřejmě ta, která reprezentují první IDE zařízení v&nbsp;linuxovém systému,
a to sice <path>/dev/hda</path>. Pokud používáte SCSI nebo SATA zařízení,
váš první pevný disk bude <path>/dev/sda</path>.
</p>

<p>
Tato bloková zařízení poskytují abstraktní rozhraní pro přístup
k&nbsp;disku. Uživatelské programy je mohou používat, aniž by se museli starat
o to, jestli je Váš disk IDE, SCSI a nebo něco jiného - programy mohou disk
používat prostě jako úložiště dat, jako množinu souvislých, libovolně
přístupných bloků o velikosti 512 bajtů.
</p>

</body>
</subsection>
<subsection>
<title>Diskové oddíly</title>
<body>

<p>
I když můžete teoreticky použít celý disk pro uchování instalace svého
systému, téměř nikdy se to tak nedělá. Namísto toho se celé blokové zařízení
reprezentující disk rozdělí do několika menších, lépe spravovatelných částí,
tvořících opět další bloková zařízení. Na x86 systémech se jim říká <e>diskové
oddíly</e> čili <e>partition</e>.
</p>

<p>
Oddíly se dělí do tří typů:
<e>primární</e>, <e>rozšířený</e> a <e>logický</e>.
</p>

<p>
Informace o primárních diskových oddílech je uchovány přímo v&nbsp;MBR (master
boot record) disku. Protože je MBR velmi malý (512 bajtů), mohou být založeny
pouze čtyři primární oddíly, například <path>/dev/hda1</path> až
<path>/dev/hda4</path>.
</p>

<p>
<e>Rozšířený</e> oddíl je speciální primární oddíl, který může obsahovat další
oddíly. Původně rozšířené oddíly neexistovaly, ale protože se omezení na pouhé
čtyři oddíly na disk ukázalo jako silně limitující, byl tento způsob zaveden
jako zpětně kompatibilní metoda.
</p>

<p>
<e>Logický</e> oddíl sídlí v&nbsp;rozšířeném oddíle. Záznamy o logických
oddílech nejsou součástí MBR, ale jsou uschovány uvnitř rozšířeného oddílu.
</p>

</body>
</subsection>
<subsection>
<title>Pokročilé metody ukládání dat</title>
<body>

<p>
Instalační CD pro x86 architekturu podporují EVMS a LVM2, metody zvyšující
flexibilitu správy diskových oddílů. Během instalace se zaměříme na "běžná"
schémata, ale je dobré vědět, že máte EVMS i LVM2 k&nbsp;dispozici.
</p>

</body>
</subsection>
</section>
<section>
<title>Návrh rozdělení disku</title>
<subsection>
<title>Výchozí rozdělení disku</title>
<body>

<p>
Pokud Vás nezajímají detaily návrhu rozdělení disku, můžete použít výchozí
schéma, které používáme pro&nbsp;účely této příručky:
</p>

<table>
<tr>
  <th>Oddíl</th>
  <th>Systém souborů</th>
  <th>Velikost</th>
  <th>Popis</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>ext2</ti>
  <ti>32M</ti>
  <ti>bootovací oddíl</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>oddíl pro swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>ext3</ti>
  <ti>zbytek disku</ti>
  <ti>oddíl pro kořenový adresář</ti>
</tr>
</table>

<p>
Zajímá-li Vás, jak velké oddíly vytvářet nebo kolik jich je potřeba, čtěte
dále, jinak pokračujte rozdělením disku podle části <uri
link="#fdisk">rozdělení disků - fdisk</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Kolik a jak velké?</title>
<body>

<p>
Počet oddílů úzce závisí na Vašem prostředí. Máte-li kupříkladu hodně
uživatelů, asi budete chtít vyhradit pro <path>/home</path> vlastní diskový
oddíl pro zvýšení bezpečnosti a lepší zálohování. Pokud instalujete Gentoo
na budoucí mailserver, měli byste mít oddělený <path>/var</path>, protože bude
sloužit pro ukládání všech mailů. Dobrý výběr souborového systému poté zvýší
výkon celého systému. Herní servery budou mít pravděpodobně oddělený
<path>/opt</path>, protože většina herních serverů se instaluje právě tam.
Důvody jsou podobné jako u <path>/home</path>: bezpečnost a zálohy.
V&nbsp;každém případě je důležité ponechat dostatek místa na <path>/usr</path>
- nejen kvůli nainstalovaným aplikacím, ale i proto, že jen samotný strom
Portage zabírá okolo 500 MB bez stažených zdrojových kódů.
</p>

<p>
Jak vidíte, velmi záleží na tom, čeho chcete dosáhnout. Oddělené oddíly nebo
svazky mají tyto výhody:
</p>

<ul>
<li>
  můžete si vybrat nejlepší systém souborů pro každý oddíl či svazek
</li>
<li>
  systému nedojde volné místo kvůli tomu, že jeden nefunkční nástroj začne
  nepřetržitě zapisovat soubory do oddílu či svazku
</li>
<li>
  je-li to nezbytné, kontroly systému souborů mohou být zkráceny, protože se
  jich může provádět více paralelně (toto je velmi patrné zejména při
  konfiguracích s&nbsp;více fyzickými disky)
</li>
<li>
  můžete zlepšit bezpečnost připojením některých oddílů či svazků v&nbsp;režimu
  pouze pro čtení, nosuid (ignorování setuid bitů), noexec (ignorování příznaků
  "spustitelný") atd.
</li>
</ul>

<p>
Avšak více oddílů má jednu velkou nevýhodu: pokud není takové rozdělení
provedeno správně, můžete skončit se&nbsp;systémem, který má hodně volného
místa v&nbsp;jednom oddílu a žádné jinde. Navíc na SCSI a SATA existuje limit
15&nbsp;oddílů na disk.
</p>

<p>
Jako ukázkové rozdělení Vám předvedeme 20GB disk používaný v&nbsp;demonstračním
notebooku (obsahuje webserver, mailserver, GNOME,...):
</p>

<pre caption="Příklad využití souborových systémů">
$ <i>df -h</i>
Filesystem    Type    Size  Used Avail Use% Mounted on
/dev/hda5     ext3    509M  132M  351M  28% /
/dev/hda2     ext3    5.0G  3.0G  1.8G  63% /home
/dev/hda7     ext3    7.9G  6.2G  1.3G  83% /usr
/dev/hda8     ext3   1011M  483M  477M  51% /opt
/dev/hda9     ext3    2.0G  607M  1.3G  32% /var
/dev/hda1     ext2     51M   17M   31M  36% /boot
/dev/hda6     swap    516M   12M  504M   2% &lt;not mounted&gt;
<comment>(nerozdělené místo pro budoucí použití: 2 GB)</comment>
</pre>

<p>
<path>/usr</path> je v&nbsp;našem příkladu poměrně plný (z&nbsp;85%), ale
jakmile máme programy nainstalované, <path>/usr</path> už moc neroste.
Někteří si mohou myslet, že tolik místa pro <path>/var</path> je příliš,
což však není tak docela pravda, protože Gentoo kompiluje všechny programy
uvnitř <path>/var/tmp/portage</path>, takže by Váš <path>/var</path> měl mít
alespoň 1GB volného místa, pokud nechcete kompilovat velké aplikace, a alespoň
3GB, pokud Vás nezastraší ani kompilace KDE či OpenOffice.org.
</p>

</body>
</subsection>
</section>
<section id="fdisk">
<title>Rozdělení disků - fdisk</title>
<subsection>
<body>

<p>
V&nbsp;následující části vysvětlíme, jak přenést ukázkové rozvržení oddílů
na Váš pevný disk. Použijeme:
</p>

<table>
<tr>
  <th>Oddíl</th>
  <th>Popis</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>bootovací oddíl</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>oddíl pro swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>oddíl pro kořenový adresář</ti>
</tr>
</table>

<p>
Změňte si toto rozvržení podle vlastních potřeb.
</p>

</body>
</subsection>
<subsection>
<title>Zobrazení současného rozvržení oddílů</title>
<body>

<p>
<c>fdisk</c> je populární a mocný nástroj k&nbsp;rozdělení disku na oddíly.
Spusťte <c>fdisk</c> nad svým diskem (v&nbsp;našem příkladě použijeme
<path>/dev/hda</path>):
</p>

<pre caption="Spouštíme fdisk">
# <i>fdisk /dev/hda</i>
</pre>

<p>
Uvnitř nástroje <c>fdisk</c> budete uvítáni výzvou, která bude vypadat přibližně takto:
</p>

<pre caption="Výzva fdisku">
Command (m for help):
</pre>

<p>
Zadejte <c>p</c> pro zobrazení současného rozvržení oddílů:
</p>

<pre caption="Ukázkové rozdělění disku">
Command (m for help): <i>p</i>

Disk /dev/hda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        49    264600   82  Linux swap
/dev/hda3            50        70    158760   83  Linux
/dev/hda4            71      2184  15981840    5  Extended
/dev/hda5            71       209   1050808+  83  Linux
/dev/hda6           210       348   1050808+  83  Linux
/dev/hda7           349       626   2101648+  83  Linux
/dev/hda8           627       904   2101648+  83  Linux
/dev/hda9           905      2184   9676768+  83  Linux

Command (m for help):
</pre>

<p>
Tento disk je nakonfigurován tak, aby uchovával sedm linuxových souborových
systémů (každý oddíl je vypsán jako "Linux") a jeden oddíl pro swap (vypsáno
jako "Linux swap").
</p>

</body>
</subsection>
<subsection>
<title>Odstranění všech oddílů</title>
<body>

<p>
Nejdříve z&nbsp;disku odstraníme všechny oddíly. Pro odstranění oddílu napište
<c>d</c>. Chcete-li například odstranit stávající <path>/dev/hda1</path>:
</p>

<pre caption="Odstranění oddílu">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Oddíl byl naplánován k&nbsp;odstranění. Již se neukáže, napíšete-li <c>p</c>,
ale nebude vymazán, dokud nebudou změny uloženy. Pokud jste se spletli, ihned
napište <c>q</c> a zmáčkněte Enter; Vaše oddíly nebudou odstraněny.
</p>

<p>
Nyní, chcete-li opravdu smazat všechny oddíly ve svém systému, opakovaně
pište <c>p</c> (výpis tabulky oddílů) a poté <c>d</c> následované číslem oddílu
k&nbsp;vymazání. Nakonec budete mít tabulku oddílů prázdnou:
</p>

<pre caption="Prázdná tabulka oddílů">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Nyní je kopie tabulky oddílů v&nbsp;paměti, nad kterou program pracuje,
prázdná, a můžeme tedy přistoupit k&nbsp;vytvoření oddílů podle již probraného
schématu. Samozřejmě, pokud používáte vlastní rozvržení, nemůžete se řídit
těmito instrukcemi do posledního slova.
</p>

</body>
</subsection>
<subsection>
<title>Vytvoření bootovacího oddílu</title>
<body>

<p>
Napřed vytvoříme malý bootovací oddíl. Pro vytvoření nového oddílu zmáčkněte
<c>n</c> následované <c>1</c> pro výběr primárního typu oddílu. Program se Vás
zeptá na první cylindr ("First cylinder"), zmáčkněte Enter. Na dotaz na
poslední cylindr ("Last cylinder") napište <c>+32M</c>, aby měl oddíl velikost
32MB:
</p>

<pre caption="Vytvoření bootovacího oddílu">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-3876, default 1): <comment>(zmáčkněte Enter)</comment>
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <i>+32M</i>
</pre>

<p>
Když nyní zadáte <c>p</c>, měli byste uvidět následující rozvržení:
</p>

<pre caption="Vytvořený bootovací oddíl">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
</pre>

<p>
Nyní musíte označit oddíl jako bootovací; dosáhnete toho napsáním <c>a</c> a
<c>1</c>. Vyberete-li znovu <c>p</c>, uvidíte <path>*</path> ve&nbsp;sloupci
"Boot".
</p>

</body>
</subsection>
<subsection>
<title>Vytvoření oddílu pro swap</title>
<body>

<p>
Nyní vytvořme oddíl pro swap. Napište <c>n</c> pro nový oddíl, <c>p</c> pro
výběr primárního typu oddílu, poté <c>2</c>, protože se chystáte vytvořit druhý
primární oddíl čili <path>/dev/hda2</path>. Při dotazu na první cylindr
zmáčkněte Enter, při dotazu na druhý zadejte <c>+512M</c>, protože chcete
vytvořit oddíl o velikosti 512MB. Poté vyberte <c>t</c> pro nastavení typu
oddílu - napsáním <c>2</c> vyberete oddíl, který jste právě vytvořili, a
poté zadejte <c>82</c>, abyste nastavili jeho typ na "Linux Swap". Nakonec
můžete vybrat <c>p</c>, abyste se přesvědčili, že tabulka oddílů vypadá
podobně, jako tato:
</p>

<pre caption="Výpis tabulky oddílů po vytvoření oddílu pro swap">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
</pre>

</body>
</subsection>
<subsection>
<title>Vytvoření oddílu pro hlavní souborový systém</title>
<body>

<p>
Nyní vytvořme oddíl pro uložení kořenového systému souborů, takzvanou "root
partition". Nový oddíl vytvoříte napsáním <c>n</c>, poté <c>p</c>, aby fdisk
věděl, že chcete vytvořit primární oddíl, a <c>3</c>, neboť chcete vytvořit
třetí primární oddíl, <path>/dev/hda3</path>. Při dotazu na první cylindr
zmáčkněte Enter, totéž na dotaz o posledním, protože chcete, aby oddíl zabíral
veškeré zbylé místo na disku. Nakonec se můžete pomocí <c>p</c> přesvědčit, jak
jste to zvládli. Výsledek by měl vypadat přibližně takto:
</p>

<pre caption="Výpis tabulky oddílů po vytvoření oddílu pro kořenový systém
souborů">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
/dev/hda3         82      3876  28690200   83  Linux
</pre>


</body>
</subsection>
<subsection>
<title>Uložení rozvržení oddílů</title>
<body>

<p>
Pro uložení provedených změn a ukončení programu <c>fdisk</c> napište <c>w</c>.
</p>

<pre caption="Uložení a ukončení nástroje fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Nyní máme připravené diskové oddíly, můžeme tedy přistoupit k&nbsp;<uri
link="#filesystems">vytvoření souborových systémů</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Vytvoření souborových systémů</title>
<subsection>
<title>Úvod</title>
<body>

<p>
Máte připravené diskové oddíly, je tedy čas na nich vytvořit systém souborů,
filesystém. Pokud je Vám jedno, jaký filesystém si zvolit, a jste spokojeni
s&nbsp;výchozí volbou, kterou používáme v&nbsp;této příručce, pokračujte
<uri link="#filesystems-apply">vytvořením souborového systému na oddílu</uri>,
jinak čtěte dále, abyste se dozvěděli o dostupných filesystémech.
</p>

</body>
</subsection>
<subsection>
<title>Filesystémy?</title>
<body>

<p>
Linuxové jádro podporuje mnoho různých souborových systémů. Představíme si ext2,
ext3, ReiserFS, XFS a JFS, které jsou na linuxových strojích používané
nejčastěji.
</p>

<p>
<b>ext2</b> je pravý a vyzkoušený linuxový souborový systém, avšak nemá
žurnálování metadat (metadata journaling), což znamená, že rutinní prohlídky
filesystému při spuštění počítače mohou být časově poměrně náročné. Nyní je
k&nbsp;dispozici široký výběr souborových systémů nové generace, u kterých
probíhá kontrola konzistence velmi rychle a jsou proto všeobecně preferovány
před svými nežurnálovými konkurenty. Žurnálové filesystémy zabraňují dlouhým
prodlevám při spuštění počítače, kdy systém souborů nevypadá úplně
v&nbsp;pořádku.
</p>

<p>
<b>ext3</b> je žurnálovací verze souborového systému ext2, poskytující
žurnálování metadat pro rychlou obnovu spolu s&nbsp;vylepšenými žurnálovacími
režimy jako "full data journaling" a "ordered data journaling". ext3 je velmi
dobrý a spolehlivý filesystém. Má možnost doplňkového indexování pomocí
b-stromů, které umožňuje dosahovat vysokého výkonu v&nbsp;téměř každé
situaci (pro jeho povolení přidejte příkazu <c>mke2fs</c> parametr <c>-O
dir_index</c>). Zkrátka a dobře, ext3 je výborný filesystém.
</p>

<p>
<b>ReiserFS</b> je souborový systém založený na B*-tree, který poskytuje velmi
dobrý celkový výkon a vysoce předčí jak ext2, tak ext3, pokud jde o zpracování
malých souborů (menších než 4kB), často i 10x až 15x. ReiserFS je také velmi
dobře škálovatelný a má žurnálování metadat. Od kernelu 2.4.18 je ReiserFS
stabilní a použitelný stejně dobře jako všeobecný systém souborů i
v&nbsp;extrémních případech, jako je vytváření obrovských filesystémů, uchování
mnoha malých souborů a nebo naopak velmi velkých souborů či adresářů
obsahujících desetitisíce položek.
</p>

<p>
<b>XFS</b> je systém s žurnálováním metadat přicházející s&nbsp;širokou
paletou možností, optimalizovaný pro škálovatelnost. Doporučujeme ho pouze na
linuxové systémy s high-end SCSI nebo Fibre Channel zařízeními pro ukládání dat
a s&nbsp;UPS. Protože XFS uchovává mnoho dat v&nbsp;RAM, špatně navržené
programy (ty, které si nedávají dobrý pozor při zápisu na disk, a jejich
poměrně hodně) mohou ztratit velké množství dat, pokud systém havaruje.
</p>

<p>
<b>JFS</b> je vysoce výkonný žurnálovací systém souborů od IBM. Teprve nedávno
se stal připraveným k&nbsp;produkčnímu nasazení a tudíž ještě nemůže být jeho
stabilita objektivně hodnocena, ať už pozitivně či negativně.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Vytvoření souborového systému na oddílu</title>
<body>

<p>
Pro vytvoření systému souborů na diskovém oddíle jsou k&nbsp;dispozici tyto
odpovídající nástroje:
</p>

<table>
<tr>
  <th>Filesystém</th>
  <th>Příkaz k&nbsp;vytvoření</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Chcete-li kupříkladu mít bootovací oddíl (v&nbsp;našem příkladu
<path>/dev/hda1</path>) na ext2 a kořenový filesystém (<path>/dev/hda3</path>
dle&nbsp;příkladu) na ext3, použijete:
</p>

<pre caption="Vytvoření souborového systému na oddílu">
# <i>mke2fs /dev/hda1</i>
# <i>mke2fs -j /dev/hda3</i>
</pre>

<p>
Nyní vytvořte systémy souborů na svých diskových oddílech či logických
svazcích.
</p>

</body>
</subsection>
<subsection>
<title>Aktivace oddílu se swapem</title>
<body>

<p>
<c>mkswap</c> je příkaz používaný k&nbsp;inicializaci oddílů se&nbsp;swapem:
</p>

<pre caption="Inicializace swap oddílu">
# <i>mkswap /dev/hda2</i>
</pre>

<p>
Pro aktivaci swap oddílu použijte <c>swapon</c>:
</p>

<pre caption="Aktivace swap oddílu">
# <i>swapon /dev/hda2</i>
</pre>

<p>
Vytvořte a aktivujte oddíl se&nbsp;swapem pomocí výše zmíněných příkazů.
</p>

</body>
</subsection>
</section>
<section>
<title>Připojení souborových systémů</title>
<body>

<p>
Nyní jsou oddíly připraveny a inicializovány, a je je tedy možno připojit,
slouží k&nbsp;tomu příkaz <c>mount</c>. Nezapomeňte vytvořit nezbytné adresáře,
do kterých budete připojovat každý vytvořený systém souborů. Jako příklad
připojíme naše souborové systémy <path>/</path> a <path>/boot</path>:
</p>

<warn>
Kvůli chybě v balíčku e2fsprogs je nutné, abyste použili volbu <c>mount -t
ext3</c>, používáte-li ext3 filesystém.
</warn>

<pre caption="Připojení souborových systémů">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

<note>
Chcete-li, aby Váš <path>/tmp</path> byl na odděleném oddílu, změňte po
připojení jeho práva: <c>chmod 1777 /mnt/gentoo/tmp</c>. Toto platí i pro
<path>/var/tmp</path>.
</note>

<p>
Také budeme potřebovat připojit souborový systém proc (virtuální rozhraní
jádra) na <path>/proc</path>, avšak nejdříve musíme na nové filesystémy umístit
naše soubory.
</p>

<p>
Pokračujte <uri link="?part=1&amp;chap=5">instalací instalačních souborů</uri>.
</p>

</body>
</section>
</sections>
