<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/cs/handbook/hb-net-functions.xml,v 1.1 2006/01/07 14:44:50 jkt Exp $ -->

<sections>

<version>1.2</version>
<date>2005-12-22</date>

<section>
<title>Standardní funkce</title>
<body>

<p>
Pro ovlivnění operací <c>start</c> a <c>stop</c> můžete definovat čtyři vlastní
funkce. Jako první parametr je jim předáno jméno rozhraní, a proto můžete
využít jednu funkci pro nastavování více rozhraní.
</p>

<p>
Pokud funkce <c>preup()</c> a <c>predown()</c> vrátí hodnotu 0 (tj. úspěch),
může konfigurace či dekonfigurace rozhraní pokračovat. Pokud je
návratová hodnota nenulová, <c>preup()</c> přeruší aktivaci rozhraní a
<c>predown()</c> zabrání jeho deaktivaci.
</p>

<p>
Návratové hodnoty funkcí <c>postup()</c> a <c>postdown()</c> jsou ignorovány,
neboť na případné selhání již není možné reagovat.
</p>

<p>
Proměnná <c>${IFACE}</c> obsahuje jméno rozhraní, se kterým se právě operuje,
<c>${IFVAR}</c> je <c>${IFACE}</c> ve&nbsp;formátu, který bash povoluje pro
názvy proměnných.
</p>

<pre caption="Ukázky funkcí pre/post up/down">
preup() {
  <comment># Otestování spojení (typicky zasunutý kabel) před aktivací rozhraní.
  # Všechny druhy síťových adaptérů tuto funkci nepodporují, navíc je
  # vyžadována instalace balíčku mii-diag.</comment>
  if mii-tool ${IFACE} 2> /dev/null | grep -q 'no link'; then
    ewarn "No link on ${IFACE}, aborting configuration"
    return 1
  fi

  <comment># Otestování spojení (typicky zasunutý kabel) před aktivací rozhraní.
  # Všechny druhy síťových adaptérů tuto funkci nepodporují, navíc je
  # vyžadována instalace balíčku ethtool.</comment>
  if ethtool ${IFACE} | grep -q 'Link detected: no'; then
    ewarn "No link on ${IFACE}, aborting configuration"
    return 1
  fi

  <comment># Pro indikaci úspěchu je nutné vrátit hodnotu 0</comment>
  return 0
}

predown() {
  <comment># Výchozí chování této funkce zabrání deaktivaci rozhraní, pokud je
  # kořenový systém souborů připojený přes NFS. Pokud specifikujete vlastní
  # funkci predown(), zakážete tuto kontrolu. Zde je odpovídající kód:</comment>
  if is_net_fs /; then
    eerror "root filesystem is network mounted -- can't stop ${IFACE}"
    return 1
  fi

  <comment># Pro indikaci úspěchu je nutné vrátit hodnotu 0</comment>
  return 0
}

postup() {
  <comment># V&nbsp;této funkci můžete například zaregistrovat svoji IP adresu
  # do služby poskytující dynamická DNS jména, případně odeslat a přijmout poštu
  # a podobně.</comment>
       return 0
}

postdown() {
  <comment># Funkce postdown() existuje de facto pouze pro úplnost. Na žádné
  # kreativní využití jsme ještě nepřišli ;-)</comment>
  return 0
}
</pre>

</body>
</section>
<section>
<title>Funkce pro bezdrátové sítě</title>
<body>

<note>
Pokud používáte WPA Supplicant, nebudou tyto funkce pracovat, máte však možnost
využít proměnné <c>${ESSID}</c> a <c>${ESSIDVAR}</c> ve funkci <c>postup()</c>.
</note>

<p>
Pro kontrolu chování při asociaci k&nbsp;bezdrátové síti je možné definovat dvě
další funkce. Jejich první parametr je opět jméno rozhraní.
</p>

<p>
Návratová hodnota 0 (úspěch) funkce <c>preassociate()</c> indikuje, že
konfigurace/dekonfigurace rozhraní může pokračovat, nenulová hodnota prováděnou
akci přeruší.
</p>

<p>
Výsledek funkce <c>postassociate()</c> je ignorován, neboť na něj ani nelze
odpovídajícím způsobem reagovat.
</p>

<p>
Hodnota proměnné <c>${ESSID}</c> obsahuje přesné ESSID AP, na které se
připojujete, <c>${ESSIDVAR}</c> to samé, avšak po konverzi do podoby, kterou
bash akceptuje pro názvy proměnných.
</p>

<pre caption="Funkce před a po asociaci">
preassociate() {
  <comment># Následující kód přidává dvě konfigurační proměnné — leap_user_ESSID
  # a leap_pass_ESSID. Pokud obě dvě pro danou ESSID existují, je je možné
  # použít pro spuštení skriptu CISCO LEAP.</comment>

  local user pass
  eval user=\"\$\{leap_user_${ESSIDVAR}\}\"
  eval pass=\"\$\{leap_pass_${ESSIDVAR}\}\"

  if [[ -n ${user} &amp;&amp; -n ${pass} ]]; then
    if [[ ! -x /opt/cisco/bin/leapscript ]]; then
      eend "For LEAP support, please emerge net-misc/cisco-aironet-client-utils"
      return 1
    fi
    einfo "Waiting for LEAP Authentication on \"${ESSID//\\\\//}\""
    if /opt/cisco/bin/leapscript ${user} ${pass} | grep -q 'Login incorrect'; then
      ewarn "Login Failed for ${user}"
      return 1
    fi
  fi

  return 0
}

postassociate() {
  <comment># Funkce postdown() existuje de facto pouze pro úplnost. Na žádné
  # kreativní využití jsme ještě nepřišli ;-)</comment>

  return 0
}
</pre>

<note>
Proměnné <c>${ESSID}</c> a <c>${ESSIDVAR}</c> nejsou k&nbsp;dispozici
ve&nbsp;funkcích <c>predown()</c> a <c>postdown()</c>.
</note>

</body>
</section>

</sections>
