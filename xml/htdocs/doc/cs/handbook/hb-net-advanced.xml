<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/cs/handbook/hb-net-advanced.xml,v 1.3 2005/12/21 14:14:12 jkt Exp $ -->

<sections>

<version>1.3</version>
<date>2005-08-14</date>

<section>
<title>Pokročilá konfigurace</title>
<body>

<p>
Proměnná config_eth0 je jádrem konfigurace síťového rozhraní. Obsahuje seznam
instrukcí, jež se mají provést pro jeho správnou funkci. Příkazy jsou prováděny
jeden po druhém a aby bylo rozhraní považováno za funkční, musí alespoň jeden
z&nbsp;nich proběhnout bez chyb.
</p>

<p>
Následuje seznam dostupných instrukcí.
</p>

<table>
<tr>
  <th>Příkaz</th>
  <th>Popis</th>
</tr>
<tr>
  <ti>null</ti>
  <ti>nedělej nic</ti>
</tr>
<tr>
  <ti>noop</ti>
  <ti>
    pokud je rohraní v&nbsp;provozu a má přiřazenou adresu, skonči úspěšně
  </ti>
</tr>
<tr>
  <ti>IPv4 nebo IPv6 adresa</ti>
  <ti>přidej rozhraní tuto adresu</ti>
</tr>
<tr>
  <ti>
    dhcp, adsl nebo apipa (případně vlastní příkaz z&nbsp;dalšího modulu)
  </ti>
  <ti>
    Aktivuj modul, jenž poskytuje daný příkaz. Například "dhcp" zavede některý
    z&nbsp;modulů dhcpcd, udhcpc, dhclient či pump, jež všechny obsahují funkce
    pro práci s&nbsp;DHCP.
  </ti>
</tr>
</table>

<p>
Můžete zadat i další přikaz (fallback), který se provede tehdy, pokud
předcházející selže. Tento nouzový příkaz musí přesně odpovídat struktuře
konfigurace.
</p>

<p>
Výše zmíněné konstrukce se samozřejmě dají kombinovat. Následují ukázky
z&nbsp;praxe:
</p>

<pre caption="Ukázky konfigurace">
<comment># přidání tří adres IPv4</comment>
config_eth0=(
  "192.168.0.2/24"
  "192.168.0.3/24"
  "192.168.0.4/24"
)

<comment># přidání jedné IPv4 adresy a dvou adres pro IPv6</comment>
config_eth0=(
  "192.168.0.2/24"
  "4321:0:1:2:3:4:567:89ab"
  "4321:0:1:2:3:4:567:89ac"
)

<comment># Zachová adresu přiřazenou jádrem, pokud taková existuje,
# jinak se ji pokusí získat přes DHCP. Pokud DHCP selže, přidá statickou adresu
# určenou přes APIPA.</comment>
config_eth0=(
  "noop"
  "dhcp"
)
fallback_eth0=(
  "null"
  "apipa"
)
</pre>

<note>
Pokud používáte modul ifconfig a přidáváte více než jednu adresu, bude pro
každou další vytvořeno naaliasované rozhraní. Proto v&nbsp;předchozích dvou
příkladech dojde k&nbsp;aktivaci rozhraní eth0, eth0:1 a eth0:2. Nic zvláštního
se s&nbsp;nimi dělat nedá, protože jádro i další programy mezi nimi nerozlišují.
</note>

<impo>
Pořadí příkazů v&nbsp;bloku fallback je důležité. Pokud bychom nespecifikovali
volbu "null", byl by příkaz "apipa" proveden pouze tehdy, pokud by došlo
k&nbsp;selhání příkazu "noop".
</impo>

<note>
<uri link="?part=4&amp;chap=3#apipa">APIPA</uri> a
<uri link="?part=4&amp;chap=3#dhcp">DHCP</uri> jsou popsány dále.
</note>

</body>
</section>
<section>
<title>Závislosti a síťování</title>
<body>

<p>
Init skripty z&nbsp;<path>/etc/init.d</path> mohou záviset buď na konkrétním
síťovém rozhraní a nebo obecně na "dostupnosti sítě". Závislost na službě "net"
může znamenat různé věci, záleží na nastavení proměnné
<c>RC_NET_STRICT_CHECKING</c> v&nbsp;souboru <path>/etc/conf.d/rc</path>:
</p>

<table>
<tr>
  <th>Hodnota</th>
  <th>Popis</th>
</tr>
<tr>
  <ti>none</ti>
  <ti>vždy předpokládáme, že je služba net funkční</ti>
</tr>
<tr>
  <ti>no</ti>
  <ti>
    Alespoň jedna služba net.* kromě net.lo musí běžet. Tato volba je vhodná
    například pro majitele notebooků s&nbsp;WiFi a pevnou ethernetovou síťovou
    kartou, protože vyžaduje, aby bylo funkční alespoň jedno připojení
    k&nbsp;síti.
  </ti>
</tr>
<tr>
  <ti>lo</ti>
  <ti>
    Stejné jako volba "no", avšak net.lo je rovněž započítáváno. Tato volba se
    může hodit lidem, kteří nepotřebují mít žádné konkrétní rozhraní aktivní
    při bootu.
  </ti>
</tr>
<tr>
  <ti>yes</ti>
  <ti>
    aby byla služba "net" funkční, musí být v&nbsp;provozu všechna síťová
    rozhraní
  </ti>
</tr>
</table>

<p>
Ale co když má net.br0 záviset na net.eth0 a net.eth1? net.eth1 může být
bezdrátové zařízení nebo PPP spoj, a tudíž je ho potřeba konfigurovat předtím,
než se přidá do bridge. Takovou závislost však není možno zařídit
v&nbsp;souboru <path>/etc/init.d/net.br0</path>, protože je to symbolický odkaz
na net.lo.
</p>

<p>
Řešení je vytvořit vlastní funkci depend() v&nbsp;<path>/etc/conf.d/net</path>.
</p>

<pre caption="Závislost net.br0 v /etc/conf.d/net">
<comment># můžete použít všechny druhy závislostí, jež jsou podporovány (use, after, before)</comment>
depend_br0() {
  need net.eth0 net.eth1
}
</pre>

<p>
Pro více informací viz sekci <uri link="?part=2&amp;chap=4#doc_chap4">init
skripty</uri>.
</p>

</body>
</section>

<section id="variable_name">
<title>Jména a hodnoty proměnných</title>
<body>

<p>
Jména proměnných jsou dynamická. Normálně jsou ve&nbsp;tvaru
<c>proměnná_${rozhraní|mac|essid|apmac}</c>; například <c>dhcpcd_eth0</c>
určuje volby pro dhcpcd nad rozhraním eth0 a <c>dhcpcd_essid</c> určuje
parametry dhcpcd pro jakékoli zařízení, které se připojí k&nbsp;ESSID "essid".
</p>

<p>
Je zde však jedna komplikace — jména rozhraní nemusí být pouze ethx. Například
mnoho bezdrátových síťových karet používá jména jako wlanx či rax, rozhraní
vytvářená uživateli (například bridge) mohou mít dokonce zcela libovolné jméno.
Situace se stává ještě zajímavější, pokud přejdeme k&nbsp;bezdrátovým
přístupovým bodům — ty mohou mít jména obsahující i nealfanumerické znaky, a
protože jména proměnných mohou obsahovat ESSID, narážíme na problém.
</p>

<p>
Gentoo používá pro nastavování síťování bash a bash neumí používat proměnné
s&nbsp;názvy obsahujícími znaky ležící mimo anglickou abecedu. Proto se provádí
změna každého takového znaku na znak _, podtržítko.
</p>

<p>
Dalším z&nbsp;limitujících faktorů je samotný obsah proměnných — některé znaky
musí být vloženy pomocí escape sekvencí. Například znaky <c>"</c>, <c>'</c> a 
<c>\</c> musí být v&nbsp;zápisu doplněny znakem <c>\</c> těsně před nimi.
</p>

<p>
V&nbsp;tomto příkladu použijeme ESSID bezdrátové sítě, protože ty mohou
obsahovat nejvíce speciálních znaků. Předpokládejme ESSID <c>My "\ NET</c>:
</p>

<pre caption="Ukázka jména proměnné">
<comment># funguje, i když je jméno domény špatně:</comment>
dns_domain_My____NET="My \"\\ NET"

<comment># Výše uvedený příklad nastaví jméno DNS domény na My "\ NET pokaždé,
# když se bezdrátová síťová karta připojí na ESSID My "\ NET.</comment>
</pre>

</body>
</section>
</sections>
