<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/ja/gentoo-x86-install.xml">
  <title>Gentoo Linux 1.4_rc2 インストール手引書</title>
  <author title="Chief Architect">
    <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
  </author>
  <author title="Author">Chris Houser</author>
  <author title="Author">
    <mail link="jerry@gentoo.org">Jerry Alexandratos</mail>
  </author>
  <author title="Ghost">
    <mail link="g2boojum@gentoo.org">Grant Goodyear</mail>
  </author>
  <author title="Editor">
    <mail link="zhen@gentoo.org">John P. Davis</mail>
  </author>
  <author title="Editor">
    <mail link="Pierre-Henri.Jondot@wanadoo.fr">Pierre-Henri Jondot</mail>
  </author>
  <author title="Editor">
    <mail link="stocke2@gentoo.org">Eric Stockbridge</mail>
  </author>
  <author title="Editor">
    <mail link="rajiv@gentoo.org">Rajiv Manglani</mail>
  </author>
  <author title="Editor">
    <mail link="seo@gentoo.org">Jungmin Seo</mail>
  </author>
  <author title="翻訳">
    <mail link="makoto@dsb.club.ne.jp">yamakura</mail>
  </author>
  <abstract>Gentoo Linux 1.4_rc2のインストール手引書です。この手引書ではゼロからGentoo Linuxを構築することはもちろん、いろいろな段階からのインストールを解説します。
  </abstract>
  <version>2.3.8</version>
  <date>12 January 2003</date>
  <!-- Original revision: 1.41 -->

<chapter>
<title>インストールについて</title>
	<section>
		<body>
		<p>新しいブートCDは、ドライブとBIOSのサポートがあれば、最近のIDE CD-ROMドライブや多くのSCSI CD-ROMドライブから起動させることができます。IDEデバイス（カーネルに組込）だけでなくすべてのSCSIデバイス（モジュールとして提供）もサポートしています。さらに、Linuxがサポートするすべてのネットワークカードのモジュールはもちろん、ネットワークを設定し、<c>ssh</c>による接続やファイルのダウンロードを可能にするツールをも提供します。</p>
		<p>インストールを行なうには486以上のCPUおよび少なくとも64Mバイトのメモリが必要となります（Gentoo Linuxは64Mバイトのメモリと64Mバイトのスワップでビルドに成功していますが、このような環境下では、非常に遅くなります）。</p>
		<p>Gentoo Linuxは３つある&quot;ステージ&quot;の圧縮ファイルのうちのひとつを使ってインストールすることができます。どれを使うかは、システムのどの程度を自分でコンパイルして用意するかによって決まります。ステージ1圧縮ファイルは、ブートストラップしてシステム全体を一から組み立てるときに使います。ステージ2圧縮ファイルは、既にブートストラップが済んだ状態からシステムを構築する場合に使います。ステージ3圧縮ファイルは既にCPUに応じて最適化されたGentoo Linuxシステムを含んでいます。</p>
		<p>さて、インストールはどうやって進めたらいいでしょうか。まずインストールに使うLiveCDのISOイメージを<uri>http://www.ibiblio.org/gentoo/releases/1.4_rc2/x86/</uri>から選んでください。このディレクトリには、<c>athlon</c>などアーキテクチャ別に作成されたいくつかのサブディレクトリがあります。以下に、それぞれのディレクトリの内容を説明します。</p>
		<table>
		<tr>
		  <th>アーキテクチャ</th>
		  <th>説明</th>
		</tr>
		<tr>
		  <ti>x86</ti>
		  <ti>Stage 1 圧縮ファイル と &quot;gentoo-basic&quot; liveCD -- どのCPUでも動くでしょう。</ti>
		</tr>
		<tr>
		  <ti>i586</ti>
		  <ti>Stage 1-3の圧縮ファイル, GRPパッケージ、i586以上のCPU 用LiveCD</ti>
		</tr>
		<tr>
		  <ti>i686</ti>
		  <ti>Stage 1-3の圧縮ファイル, GRPパッケージ、i686以上のCPU 用LiveCD</ti>
		</tr>
		<tr>
		  <ti>athlon</ti>
		  <ti>Stage 1-3の圧縮ファイル, GRPパッケージ、AMD Athlon 用LiveCD</ti>
		</tr>
		<tr>
		  <ti>athlon-xp</ti>
		  <ti>Stage 1-3の圧縮ファイル, GRPパッケージ、AMD Athlon XP 用LiveCD</ti>
		</tr>
		<tr>
		  <ti>athlon-mp</ti>
		  <ti>Stage 1-3の圧縮ファイル, GRPパッケージ、AMD Athlon MP 用LiveCD</ti>
		</tr>
		<tr>
		  <ti>pentium3</ti>
		  <ti>Stage 1-3の圧縮ファイル, GRPパッケージ、Intel Pentium III、Pentium 4 用LiveCD</ti>
		</tr>
		</table>
		<!-- 日本語版Only ここから -->
		<note><comment>(日本語版独自の記述です)</comment>アーキテクチャ名はgcc-3.xのオプションと関連があります。CPUとオプションの対応については、次のページが参考になるかもしれません。<uri link="http://www.freehackers.org/gentoo/gccflags/flag_gcc3.html">http://www.freehackers.org/gentoo/gccflags/flag_gcc3.html</uri></note>
		<!-- 日本語版Only ここまで -->
		<p>それぞれのディレクトリ内には、<path>livecd/</path>ディレクトリがありLiveCDイメージが収められています。これらのLiveCDはどのアーキテクチャでもブートしますが、インストールに使う圧縮ファイルは特定のCPUタイプ向けに最適化されていますので、すべてのマシンで動くとは限りません。ただし、<path>x86</path>ディレクトリに収められている&quot;gentoo-basic&quot;LiveCDは例外で、どのマシンでもインストールに利用できます。</p>
		<p>LiveCDは完全なCDイメージですので、CD-RやCD-RWに書き込むことができます。現在、LiveCDには2種類あります。ひとつは&quot;gentoo-basic&quot;という名前の、40MB程度の大きさで<path>x86/livecd/</path>ディレクトリに収められているものです。このLiveCDは小さいのでダウンロード時間が短くてすみます。このCDでブートすると、<path>/mnt/cdrom/gentoo/</path>にステージ1圧縮ファイルがあります。</p>
		<p>もうひとつのLiveCDは&quot;livecd-grp&quot;と名づけられています。このCDはアーキテクチャ別に<path>arch/livecd</path>ディレクトリにあります。このCDには、そのアーキテクチャ用に最適化されたステージ1,2,3のそれぞれの圧縮ファイルとGRPパッケージが含まれています。このLiveCDを使うと完全に機能するGentoo Linuxシステムをとても素早く構築することができます。ただし、ISOイメージのサイズが大きく、大体600MBほどありますのでダウンロードには時間がかかります。</p>
		<impo>何らかの事情でインストール作業を中断することになっても、リブートして再開することができます。たとえば、パーティションを作成し、ステージXの圧縮ファイルを展開してchrootする用意ができていれば、インストールを再開できます。ただLiveCDを使って再起動して、通常どおりドライブ/パーティションを<path>/mnt</path>にマウントするだけです。基本的に、インストールのどの時点でもこのようにできます。ただし、パーティションを作成する前ではだめです。</impo>
		<warn>もしインストールプロセスのどこかでバグに遭遇し、バグレポートをする場合は、<uri>bugs.gentoo.org</uri>に送信してください。必要と判断された場合は、開発チームがそれをパッケージメンテナー(KDEなど)に流すなどの処理をします。</warn>
		<p>それではインストールの手順を簡単に見てみましょう。まず、LiveCDイメージをダウンロードしCDを作成します。LiveCDでブートしてプロンプトが出たら、パーティションを、続いてファイルシステムを作成し、任意でステージ1、ステージ2、ステージ3の圧縮ファイルを展開します。ステージ1かステージ2の圧縮ファイルを使用する場合、ステージ3に進むために適切な手順を踏む必要があります。ステージ3に進みシステムに対して各種の設定（設定ファイルの微調整、ブートローダーのインストールなど）を行なえばGentoo Linuxの完成です。スタートするステージごとにどのような手順が必要なのかを以下に示します。</p>
		<table>
		  <tr>
		    <th>圧縮ファイル</th>
		    <th>必要な手順</th>
		  </tr>
		  <tr>
		    <ti>1</ti>
		    <ti>パーティションとファイルシステムの作成、emerge sync、ブートストラップ、emerge system、emerge linux sources、最終調整</ti>
		  </tr>
		  <tr>
		    <ti>2</ti>
		    <ti>パーティションとファイルシステムの作成、emerge sync、emerge system、emerge linux sources、最終調整</ti>
		  </tr>
		  <tr>
		    <ti>3</ti>
		    <ti>パーティションとファイルシステムの作成、emerge sync、最終調整</ti>
		  </tr>
		</table>
		</body>
	</section>
</chapter>

<chapter>
<title>ブート</title>
	<section>
		<body>
		<p>LiveCDでブートするところから始めましょう。適切にデバイスが検出されれば、Gentoo Linuxロゴとともにブートスクリーンが表示されます。この画面ではブートプロセスを進めるためにEnterを押すか、ヘルプを見るためにF2を押すか、カーネルにブートオプションを渡すために<c>gentoo opt1 opt2</c>のように入力することができます。Enterを押すと、一連のテキストのあと通常のGentoo Linuxのブートシーケンスが表示されます。そのあと、自動的に&quot;root&quot;としてログインされ、安全のためランダムな文字列がrootのパスワードに設定されます。rootのプロンプト (&quot;<c>#</c>&quot;) が表示されるはずです。 ALT-F2、ALT-F3などの後でEnterを叩くと新しいコンソールを開くことができます。最初のコンソールに戻るには(想像どおりだと思いますが)ALT-F1を押します。</p>
		<p>既にお気づきかと思いますが、<c>#</c>プロンプトの上には、ネットワークデバイスの設定方法やGentoo Linuxステージ圧縮ファイル、パッケージのありかなどの説明が書かれたヘルプテキストが表示されています。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>カーネルモジュールのロード</title>
	<section>
		<body>
		<p>もしも自動検知に失敗しっぱいしたら、適切なモジュールを手動でロードしなければなりません。利用可能なネットワークカードモジュールの一覧を見るには、<c>ls /lib/modules/*/kernel/drivers/net/*</c>とタイプしてください。モジュールをロードするには、次のようにタイプします。</p>
		<pre caption = "PCIモジュール設定">
# <c>modprobe pcnet32</c>
<comment>(pcnet32をお使いのNICのモジュールに置き換えてください)</comment>
		</pre>
		<p>PCI自動検知で検出されなかったSCSIデバイスにアクセスできるようにするには、もういちど<c>modprobe</c>を利用して<path>/lib/modules</path>から適切なモジュールをロードします。</p>
		<pre caption = "SCSIモジュールのロード">
# <c>modprobe aic7xxx</c>
# <c>modprobe sd_mod</c>
		</pre>
		<p><c>aic7xxx</c>はSCSIコントローラを、<c>sd_mod</c>はSCSIハードディスクをサポートします。</p>
		<note> SCSI CD-ROMとハードディスクのサポートはカーネルに組み込まれています。</note>
		<p>ハードウェアRAIDをつかっているなら、お使いのRAIDコントローラ用のATA-RAIDモジュールをロードする必要があります。</p>
		<pre caption = "RAIDモジュールのロード">
# <c>modprobe ataraid</c>
# <c>modprobe pdcraid</c>
      <comment>(Promise Raid コントローラ)</comment>
# <c>modprobe hptraid</c>
      <comment>(Highpoint Raid コントローラ)</comment>
		</pre>
		<p>Gentoo LiveCDはDMAを有効にするはずですが、有効にならなかったときは<c>hdparm</c>を使ってドライブにDMAを設定できます。</p>
		<pre caption="DMA設定"><comment>hdXをディスクデバイス名で置き換えてください。</comment>
# hdparm -d 1 /dev/hdX <comment>DMAを有効にする</comment>
# hdparm -d1 -A1 -m16 -u1 -a64 <comment>DMAを有効にし、他の安全にパフォーマンスを向上させるオプションを有効にする</comment>
# hdparm -X66 /dev/hdX <comment>Ultra-DMAを強制的に有効にする。危険! ディスクの中身が台無しになる恐れがあります</comment>
		</pre>
		</body>
	</section>
</chapter>

<chapter>
<title>PCMCIAカーネルモジュールのロード</title>
	<section>
		<body>
		<p>PCMCIAネットワークカードを利用するには、ちょっとしたトリックが必要です。</p>
		<warn>トラブルを避けるために、<e>chrootする前に<c>cardmgr</c>を</e>実行してください。</warn>
		<pre caption = "PCMCIAモジュールのロード">
# <i>modprobe pcmcia_core</i>
# <i>modprobe i82365</i>
# <i>modprobe ds</i>
# <i>cardmgr -f</i>
		</pre>
		<p><c>cardmgr</c>がハードウェアを検知すると、ビープ音が鳴り、PCMCIAネットワークカードが使用可能になります。もちろん<i>cardmgr</i>がロードされた後で、 PCMCIAネットワークカードを挿入することもできます（技術的には、PCMCIAカードがどのモジュールを必要としているのか正確に分かっていれば、<c>cardmgr</c>を実行する必要はありません。しかしそうでない場合は、PCMCIAモジュールをすべてロードし、どのモジュールが動かないかを調べ、どのモジュールがそのPCMCIAカードに合うかを調べなければなりません。<c>cardmgr</c>はカードを抜いたときにPCMCIAモジュールをアンロードしてくれます）。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>ネットワークの設定</title>
	<section>
	<title> PPPoEの設定</title>
		<body>
		<p>インターネットへ接続するためにPPPoEが必要な場合、どのバージョンのlivecdにも含まれている<c>rp-pppoe</c>を使うのが簡単です。<c>adsl-setup</c>スクリプトを使って接続の設定をしてください。adslモデムに接続しているイーサネットデバイスとユーザ名、パスワード、DNSサーバのIPアドレス、ファイアウォールが必要かどうか、を入力してください。</p>
		<pre caption = "PPPoEの設定">
# <i> adsl-setup </i>
# <i> adsl-start </i>
		</pre>
		<p>うまくいかないようなら、ユーザ名とパスワードを間違いなく入力しているかどうか、<path>/etc/ppp/pap-secrets</path>や<path>/etc/ppp/chap-secrets</path>を見てよく確認してください。また正しいイーサネットデバイスを指定しているかどうかも確認してください。</p>
		</body>
	</section>
	<section>
	<title>ネットワークの自動設定</title>
		<body>
		<p>インストールを始める前に、ネットワークの設定をして、<c>ssh</c>、<c>scp</c>、<c>lynx</c>、<c>irssi</c>、<c>wget</c>が使えるようにします。今その必要がないとしても、設定をするべきです。一度設定してしまえば、Gentoo Linuxをインストールするために chroot環境になっていても、Portageは設定したネットワークを使うことができます。いちばん簡単な設定方法は、<c>net-setup</c>スクリプトを実行することです。</p>
		<pre caption = "Net-Setup スクリプト">
# <c>net-setup eth0</c>
		</pre>
		<p>もちろん、お好みであれば手動で設定することもできます。</p>
		</body>
	</section>
	<section>
	<title>DHCPを使った設定</title>
		<body>
		<p>DHCPの設定は簡単です。ご利用のISPがDHCPをサポートしていない場合は、固定IPの設定まで進んでください。</p> 
		<pre caption="DHCPを使ったネットワーク設定">
# <c>dhcpcd eth0</c> 
		</pre>
		<note>ISPによっては、ホスト名の入力が必要になります。その場合はdhcpdコマンドの後に<c>-h myhostname</c>と書き加えてください。</note>
		<p>もし<i>dhcpConfig</i>警告を受け取ったとしても、慌てないでください。このエラーはお飾りのようなものです。ネットワークのテストまで進んでください。</p>
		</body>
	</section>
	<section>
	<title>固定IP設定</title>
		<body>
		<p>システムの構築に必要なソースをダウンロードするために、ネットワークに対して適切な設定を行なう必要があります。下記のコマンドを入力してください。その際、$IFACEを使用するネットワークインターフェイス（たいていの場合<c>eth0</c>）に、$IPNUMを使用するIPアドレスに、$BCASTをブロードキャストアドレスに、$NMASKをネットマスクにそれぞれ置き換えてください。<c>route</c>コマンドでは、$GTWAYをデフォルトゲートウェイに置き換えてください。</p>
		<pre caption = "固定IPでのネットワーク設定">
# <c>ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</c>
# <c>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1</c>
		</pre>
		<p>ここで、<path>/etc/resolv.conf</path>を作成し、名前解決(Webサイトや FTPサイトのIPアドレスを直接指定するのではなく名前で指定)できるようにします。</p>
		<p>以下に、/etc/resolv.conf作成の参考になるようにテンプレートを示します。</p>
		<pre caption="/etc/resolv.conf テンプレート">
domain mydomain.com
nameserver 10.0.0.1
nameserver 10.0.0.2
		</pre>
		<p><c>10.0.0.1</c> と <c>10.0.0.2</c> をそれぞれプライマリDNSサーバとセカンダリDNSサーバのアドレスに書き換えてください。</p>
		</body>
	</section>
	<section>
	<title>プロクシ設定</title>
		<body>
		<p>プロクシを利用している場合は先に進む前にプロクシを利用する設定をしなければなりません。次のように環境変数を設定してください。</p>
		<pre caption = "プロクシの設定">
# <c>export http_proxy=&quot;machine.company.com:1234&quot; </c>
# <c>export ftp_proxy=&quot;$HTTP_PROXY&quot; </c>
# <c>export RSYNC_PROXY=&quot;$HTTP_PROXY&quot; </c>
		</pre>
		</body>
	</section>
	<section>
	<title>ネットワークのテスト</title>
		<body>
		<p>これでネットワークの設定は終了です。<c>/sbin/ifconfig -a</c>コマンドでネットワークカードが働いているかどうか確認してみましょう。下記の<e>UP</e>と<e>RUNNING</e>に注目してください。</p>
		<pre caption="/sbin/ifconfig で動作確認する">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
		</pre>
		<p>ISPのDNSサーバ(<path>/etc/resolv.conf</path>で調べてください)や適当なWebサーバに対してpingを打ち、パケットがネットワークに届くこと、DNSによる名前の解決がうまく機能していることなどを確かめることができます。</p>
		<pre caption = "更なるネットワークのテスト">
# <c>ping www.some_website.com </c>
		</pre>
		</body>
	</section>
	<section>
	<title>ネットワークの準備完了!</title>
		<body>
		<p>ネットワークの設定は終わりました。<c>ssh</c>、<c>scp</c>、<c>lynx</c>、<c>irssi</c>、<c>wget</c>コマンドを使って、LAN上のマシンやインターネットに接続することが可能です。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>パーティションの設定</title>
	<section>
		<body>
		<p>カーネルはネットワークカードとディスクコントローラーを利用できるようになりました。次はパーティションの設定をしましょう。</p>
		<p>簡単にGentoo Linuxの標準的なパーティションレイアウトを説明します。 Gentoo Linuxではswapパーティション、rootパーティション（Gentoo Linuxの大部分を保持します）、そしてbootパーティションと、少なくとも3つのパーティションを作成します。bootパーティションはGRUBブートローダの情報とカーネルを保持しています。また、Linuxのブートに関するあらゆる情報を格納する安全な場所を提供します。通常、Gentoo Linuxを使用している間はbootパーティションを切り離しておくべきです。こうすることによって、万が一ファイルシステムの不正でシステムクラッシュが起こったとき、カーネルがGRUBから利用できなくなることを防ぎます。また「ニワトリと卵」の問題(ファイルシステムが壊れていてGRUBがkernelを読めない。ブートできないのでファイルシステムを正常な状態に復元できない)を防ぎます。</p>
		<p>ファイルシステムについて説明します。Gentoo LinuxではXFS、ext2、ext3 （ジャーナリング）そしてReiserFSの四つのファイルシステムを使うことができます。ext2はLinuxで使い込まれた正式のファイルシステムですが、メタデータ・ジャーナリングを持っていません。ext3はメタデータ・ジャーナリングとオーダーデータの記録によるデータ・ジャーナリングの両方をもつext2の後継バージョンです。ReiserFSはB*-treeファイルシステムがベースで、優れたパフォーマンスを持っています。また、小さな（4K以下）ファイルの取り扱いではext2やext3をはるかに上回り、ときには、10～15倍ほどにもなります。 ReiserFSは規模を拡大しても良好で、メタデータ・ジャーナリングを持っています。ReiserFSは遂に非常に安定したものになったので強く推奨されています。 XFSはメタデータ・ジャーナリングを持つファイルシステムで、Gentoo Linux では<path>xfs-sources</path>カーネルで完全にサポートされます。しかし、システムがフリーズしたり不意に再起動したり(たとえば、停電など)した場合に更新されたばかりのデータを失うことがあるため、万人向けとはいえません。</p>
		<p>スタンダードなファイルシステムを使いたいときはext2を選択してください。頑丈なファイルシステムを希望するならばext3を選択してください。ジャーナリングを備えた高機能なファイルシステムを希望するならばReiserFSを選択してください。ext3、ReiserFSは両者とも成熟し、洗練されています。XFSを使うときは注意してください。ファイルシステムはシステムクラッシュや停電などでデータを喪失する恐れがあります。以下に推奨されるファイルシステムの容量とタイプを示します。</p>
		<table>
		  <tr>
		    <th>パーティション</th>
		    <th>サイズ</th>
		    <th>タイプ</th>
		    <th>デバイス例</th>
		  </tr>
		  <tr>
		    <ti>bootパーティション：カーネルとブート情報</ti>
		    <ti>100Mバイト</ti>
		    <ti>ext2/3を強く推奨(もっとも容易)：ReiserFSなら<c>-o notail</c>をつけてマウントしてください</ti>
		    <ti>/dev/hda1</ti>
		  </tr>
		   <tr>
		    <ti>swapパーティション（128Mバイト制限はありません）</ti>
		    <ti>実メモリの2倍以上が推奨ですが、カーネル2.4.10以降では要求されません</ti>
		    <ti>Linux swap</ti>
		    <ti>/dev/hda2</ti>
		  </tr>
		  <tr>
		    <ti>rootパーティション：/usr、/homeなどの主要なファイル</ti>
		    <ti>1.5Gバイト以上</ti>
		    <ti>ReiserFS、ext3を推奨：ext2も可</ti>
		    <ti>/dev/hda3</ti>
		  </tr>
		 </table>
		<p>パーティションの作成に先立って、<c>dd</c>を使ってハードディスクの初期化をするとよいでしょう。そうすることで、Linuxのマウントルーチンがファイルシステムのタイプをご認識することを予防できます。これをするには、次のようにタイプしてください。</p>
		<pre caption = "HDの最初の1024セクタを初期化する">
# <c>dd if=/dev/zero of=/dev/hdxy bs=1K count=1</c>
<comment>/dev/hdxyを&quot;初期化&quot;するデバイス名で置き換えてください。</comment>
		</pre>
		<p>ここで、<c>fdisk</c>を使ってパーティションを作成します。パーティションのタイプは、swapの場合は82、通常のファイルシステム(ReiserFS<e>または</e>ext2/3)の場合は83です。</p>
		<note>インストールCDには<i>cfdisk</i>が含まれています。これは<i>fdisk</i>と比べれば、扱いやすいでしょう。実行するには<c>cfdisk</c>とタイプしてください。デフォルトでは、<b>/dev/hda</b>を操作対象になります。もしパーティションを作成するのが/dev/hda以外のディスクであれば、パラメータとして正しい値を指定してください。たとえば、<c>cfdisk /dev/hde</c>となります。</note>
		<note>パーティションに対する変更は即座に反映されるわけではありません。fdiskやcfdiskを使った後は再起動してください。</note>
		<note>RAIDを使う場合は、パーティションの名前が少し異なり、このようになります: <path>/dev/ataraid/discX/partY</path>。Xはアレイを表すので、1アレイであれば、disk0となります。Yはパーティション番号で<path>/dev/hdaY</path>と同じです。</note>
		<p>パーティションの作成がおわったら、次はファイルシステムの初期化をしてデータを格納できるようにします。スワップの初期化は次のようにして実行します。</p>
		<pre caption= "Swapの初期化">
# <c>mkswap /dev/hda2</c>
		</pre>
		<p>ext2ファイルシステムを作成するには<c>mke2fs</c>コマンドを使用してください。</p>
		<pre caption = "ext2 Filesystemの作成">
# <i>mke2fs /dev/hda1</i>
		</pre>
		<p>XFSファイルシステムを作成するには<c>mkfs.xfs</c>コマンドを使用してください。</p>
		<pre caption = "XFS Filesystemの作成">
# <c>mkfs.xfs /dev/hda3</c>
		</pre>
		<note><c>mkfs.xfs</c>コマンドに対し、<c>-d agcount=3 -l size=32m</c>オプションを付加することができます。<c>-d agcount=3</c>オプションはアロケーショングループの数を減らします。XFSは4Gバイトごとに少なくともひとつのアロケーショングループを必要とします。つまり、20Gバイトのパーティションがあった場合、最低でも5つのアロケーショングループが必要になります。<c>-l size=32m</c>オプションはジャーナルサイズを32Mバイトに増加させ、パフォーマンスを良くします。</note>
		<warn>ReiserFSパーティションだったところにXFSパーティションを作成した場合、<c>mount -t xfs</c>と明示的に指定しないとマウントに失敗するかもしれません。解決方法は、XFSパーティションを作成する前に<c>dd if=/dev/zero of=/dev/hd<comment>x</comment> bs=1k</c>と入力してゼロアウトすることです。</warn>
		<p>ext3ファイルシステムを作成するには<c>mke2fs -j</c>コマンドを使用してください。</p>

		<pre caption = "ext3 Filesystemの作成">
# <c>mke2fs -j /dev/hda3</c>
		</pre>
		<note>Linux2.4でext3を使用する場合は以下のURLが参考になるでしょう。<uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri></note>
		<p>ReiserFSファイルシステムを作成するには<c>mkreiserfs</c>コマンドを使用してください。</p>
		<pre caption = "ReiserFS Filesystemの作成">
# <c>mkreiserfs /dev/hda3</c>
		</pre>
		</body>
	</section>
</chapter>

<chapter>
<title>パーティションのマウント</title>
	<section>
		<body>
		<p>後に仮想記憶が必要になるので、swapをアクティブにします。</p>
		<pre caption = "スワップをアクティブにする">
# <c>swapon /dev/hda2</c>
		</pre>
		<p>次に、<path>/mnt/gentoo</path>と<path>/mnt/gentoo/boot</path>というふたつのマウントポイントを設定し、作成したパーティションをマウントします。</p>
		<pre caption = "マウントポイントの作成">
# <c>mkdir /mnt/gentoo</c>
# <c>mount /dev/hda3 /mnt/gentoo</c>
# <c>mkdir /mnt/gentoo/boot</c>
# <c>mount /dev/hda1 /mnt/gentoo/boot</c>
		</pre>
		<p><path>/usr</path>や<path>/var</path>を別のパーティションとして設定している場合は、それぞれのパーティションを<path>/mnt/gentoo/usr</path>や<path>/mnt/gentoo/var</path>にマウントしてください。</p>
		<impo> <e>boot</e>パーティション(カーネルを保持しているパーティション) がReiserFSである場合、GRUBが正常にインストールされるように<c>-o notail</c>オプションを使ってマウントしてください。さらに<path>/etc/fstab</path>のbootパーティションに<c>notail</c>オプションを追加してください。すぐ後に出てきます。</impo>
		<impo>もしext2のbootパーティションをマウントするときに問題が発生したら、<c>mount /dev/hXX /mnt/gentoo/boot -t ext2 </c>を試してみてください。</impo>
		</body>
	</section>
</chapter>

<chapter>
<title>必要な'stage-x'圧縮ファイルを手に入れる</title>
	<section>
		<body>
		<p>もしstage1の圧縮ファイルから始めるなら、すでに用意ができています。<path>/mnt/cdrom/gentoo</path>に圧縮ファイルがあります。もし、最適化されたstage2かstage3の圧縮ファイルから始めたい場合は、Gentoo ミラーサイトからダウンロードしてください。(<path>/mnt/gentoo</path>に置くのがいいでしょう)</p>
		<pre caption = "必要なステージの圧縮ファイルのダウンロード">
# <c>cd /mnt/gentoo</c>
<comment>lynxを使って、圧縮ファイルのURLを確認してください。</comment>
# <c>lynx http://www.ibiblio.org/pub/Linux/distributions/gentoo/releases/1.4_rc2/x86/</c>
# <c>wget <comment>ここに必要な圧縮ファイルのURLを指定してください。</comment></c>
		</pre>
		</body>
	</section>
</chapter>

<chapter>
<title>圧縮ファイルの展開</title>
	<section>
		<body>
		<p>ここで、選択した圧縮ファイルを<path>/mnt/gentoo</path>に展開します。そのあと、chrootして新しい Gentoo Linux のインストール環境に入っていきます。</p>
		<impo><c>tar</c>する時は必ず<c>p</c>オプションを使用してください。これを怠ると、いくつかのファイルに誤ったパーミッションを与えてしまいます。</impo>
		<!--
		<p>もし「全てをゼロから」インストールをするならば、<path>stage1-ix86-1.4_beta.tbz2</path>を使用してください。2枚目のCD （gentoo-i686-1.2.iso）を使用しているのであればステージ2かステージ3も選択してください。設定の自由と引き換えに、時間を短縮できます（コンパイラの最適化法とデフォルトのUSE変数を設定してあります）。</p>
		-->
		<p>もし「全てをゼロから」インストールをするならば、<path>stage1</path>圧縮ファイルを使用してください。それなければ、<path>stage2</path>か<path>stage3</path>圧縮ファイルを選択することができます。これらを使えば、多少自由度が失われますが、時間を節約できます(コンパイラの最適化オプションとUSE変数の設定は既に設定済みです)。</p>
		<pre caption = "圧縮ファイルの展開">
# <c>cd /mnt/gentoo</c>
# <c>tar -xvjpf /mnt/cdrom/gentoo/stage?-*.tbz2</c>
# <c>mount -o bind /proc /mnt/gentoo/proc</c>
# <c>mount -o bind /dev /mnt/gentoo/dev</c>
<comment>ここで /dev をbindマウントするのは、perlを正常に構築するために必要となる場合があるからです。</comment>
# <c>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</c>
		</pre>
		<p>GRPを使う予定なら、次のコマンドを実行しておいてください。</p>
		<pre caption="GRPのための準備">
# <c>mkdir /mnt/gentoo/GRP</c>
# <c>mount -o bind /mnt/cdrom/gentoo/packages /mnt/gentoo/GRP</c>
		</pre>
		<pre caption = "chroot 環境に入る">
# <c>chroot /mnt/gentoo /bin/bash</c>
# <c>env-update</c>
Regenerating /etc/ld.so.cache...
# <c>source /etc/profile</c>
		</pre>
		<p>このコマンドを実行すればGentoo Linuxの「中」に入ることができます。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>Rsyncで最新のPortageツリーを取得する</title>
	<section>
		<body>
		<p>ここで、<c>emerge sync</c>を実行してください。これにより、最新のPortageツリーを取得できます。</p>
		<pre caption = "Rsyncを使って更新する">
# <c>emerge sync</c>
		</pre>
		<p>Portageツリーは、ダウンロードされて<path>/usr/portage</path>以下に格納されます。圧縮ファイルを除いて、おおよそ90Mbほどあります。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>Gentooを最適化する (make.conf)</title>
	<section>
		<body>
		<p>Portageツリーのコピーが終わったら、ステージ1を使用している場合は、次のようにブートストラップを設定してください。始めに/etc/make.confファイルを編集します。パッケージに組み込みたい機能を指定するUSE変数をセットしてください。一般的にはデフォルト（空かセットなし）でいいでしょう。<c>USE</c>フラグに関しては、<uri link="http://www.gentoo.org/doc/use-howto.html">ここ</uri>に詳しい説明があります。現在の全USEフラグのリストが<uri link="http://www.gentoo.org/dyn/use-index.xml">ここ</uri>にあります。</p>
		<p><c>CHOST</c>、<c>CFLAGS</c>、<c>CXXFLAGS</c>変数もそれぞれセットしてください（ファイルの下の方にセット例がコメントされています）。ほかにどのようなオプションが<c>CFLAGS</c>や<code>CXXFLAGS</code>に追加できるのか調べるには、<path>man gcc</path>するとよいでしょう。'Optimization'の項目を見てください。</p>
		<p>ファイアーウォールが設置されている場合はここでプロクシ情報をセットできます。</p>
		<pre caption = "make.conf オプションを設定する">
# <c>nano -w /etc/make.conf</c> <comment>(このファイルで設定してください)</comment>
		</pre>
		<note>ビルドプロセスに手を加えたいときは、<path>/etc/make.globals</path>を参照してください。このファイルは、gentooで使われるデフォルト値を保持しており、書き換えないようにすべきです。デフォルトで不十分な場合は、新しい値を<path>/etc/make.conf</path>に書き込んでください。<path>make.conf</path>で指定された値は、<path>make.globals</path>の設定を<comment>上書き</comment>します。ここで見つけたUSE設定を無効にしたいときは、適切な<c>USE=&quot;-foo&quot;</c>(<c>foo</c>を無効にしたい場合)を/etc/make.confに追加してください。</note>
		</body>
	</section>
</chapter>

<chapter>
<title>Stage1から始める</title>
	<section>
		<body>
		<p>stage1の圧縮ファイルは基本的なtweakageです。この圧縮ファイルを選択したということは、最適化されたシステムを求めていることになるでしょう。最適化こそがGentoo Linuxの勘所です。お楽しみください。</p>
		<p>もし、ステージ2かステージ3の圧縮ファイルを使用しているならば、すでにブートストラップは組み込まれています。<c>emerge sync</c>を行なって最新のシステムにしたいというのでなければ、この作業を行なう必要は<i>ありません</i>。高速なマシンを使っても、この作業には2時間以上かかります。</p>
		<p>「ブートストラップ」プロセスを開始します。AMD Athlon 1200Mhzで約2時間かかります。このプロセスでは、残りのシステムをコンパイルするために、展開されたビルドイメージが準備されます。GNUコンパイラ一式とGNU Cライブラリが構築されます。これらは時間がかかる処理で、ブートストラッププロセスの大半が構成されます。</p>
		<pre caption = "ブートストラッピング">
# <c>cd /usr/portage</c>
# <c>scripts/bootstrap.sh</c>
		</pre>
		<p>「ブートストラップ」プロセスが開始します。</p>
		<note>デフォルトのPortageはパッケージのビルド中に一時的に<c>/var/tmp</c>を数百Mバイト使用する時があります。一時ファイルの場所を変更している場合は、<e>ブートストラッププロセスを始める前に</e>PORTAGE_TMPDIR変数を変更してください。</note>
		<pre caption = "Portageの作業ディレクトリの設定">
# <c>export PORTAGE_TMPDIR=&quot;/otherdir/tmp&quot;</c>
		</pre>
		<p><c>bootstrap.sh</c>は<c>binutils</c>、<c>gcc</c>、<c>gettext</c>、<c>glibc</c>を構築し、<c>glibc</c>が構築された後、<c>binutils</c>、<c>gcc</c>、<c>gettext</c>を再構築します。言うまでもなく、このプロセスには時間がかかりますので、昼寝でもしていてください。このプロセスが終了すると&quot;stage2&quot;から始めたシステムと同じ状態になります。次に進んでください。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>Stage2から始める</title>
	<section>
		<body>
		<p>stage2の圧縮ファイルを使うと、既にブートストラップが済んだ状態から始めることができます。残りのシステムのインストールを始めましょう。</p>
		<note>もしまだなら、<path>/etc/make.conf</path>を好みに応じて書き換えておいてください。</note>
		<pre caption = "残りのシステムをインストールする">
# <c>export CONFIG_PROTECT=&quot;-*&quot;</c>
# <c>emerge -p system</c>
	<comment>[インストールされるパッケージのリストが出力される]</comment>
# <c>emerge system</c>
		</pre>
		<note><c>export CONFIG_PROTECT=&quot;-*&quot;</c>コマンドで、コンフィグファイルの編集ができない（<path>sys-apps/baselayout</path>に格納された）古いスクリプトを新しいスクリプトに上書きして<path>/etc</path>にインストールできるようにします。詳細については<c>emerge --help config</c>とタイプしてください。</note>
		<p>ベースシステム全体を構築するにはまとまった時間が必要です。そのかわりシステムは徹底的に最適化されます。もちろん暇つぶしの方法を見いださなければなりませんが。作者はプレイステーション2用ソフト「Star Wars - Super Bombad Racing」をおすすめします。</p>
		<p>このプロセスが終了すると&quot;stage3&quot;から始めたシステムと同じ状態になります。この後どのように進めるか決めて下さい。stage3の手順に進んでそれを完了させれば、最新のPortageツリーを使ってシステムを最新の状態にすることができます。この作業は必須ではありませんが、強く推奨します。stage3の手順で最新にするつもりがなければ、GRPインストールの手順に進むことができます。もしGRPを使うつもりがなければ、<uri link="http://www.gentoo.org/doc/en/gentoo-x86-install.xml#doc_chp16">16章の最終ステップ</uri>に進んでください。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>Stage3から始める</title>
	<section>
		<body>
		<p>stage3の圧縮ファイルはすでに一般的なシステムに合わせて最適化された状態になっています。しなければならないことはほとんどありませんが、最新のパッケージに更新しておくとよいでしょう。</p>
		<note>もしまだなら、<path>/etc/make.conf</path>を好みに応じて書き換えておいてください。</note>
		<pre caption="最新の状態にする">
# <c>emerge sync</c>
# <c>emerge -up world</c>
<comment>インストールされる [<i>packages</i>] の一覧が表示される</comment>
# <c>emerge -u world</c>
		</pre>
		<p>このステップが完了したら、この後どのように進めるか決めて下さい。もしGRPを使うつもりなら、GRPインストールの手順に進むことができます。もしGRPを使うつもりがなければ、<uri link="http://www.gentoo.org/doc/en/gentoo-x86-install.xml#doc_chp16">16章の最終ステップ</uri>に進んでください。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>GRPを使う</title>
	<section>
		<body>
		<p>構築済みのGRPパッケージセットを使えば、広く使われている巨大なパッケージ群をコンパイルすることなくインストールすることができます。現在、<c>openoffice-bin</c>、<c>gnome</c>、 <c>kde</c>そして<c>xfree</c>のそれぞれで必要なものすべてを提供しています。</p>
		<p>まず、パッケージディレクトリがある場所に<c>cd</c>する必要があります。この時点で<path>/GRP</path>にすでにマウントしてあります。このディレクトリには<c>grp-install.sh</c>スクリプト、すべてのバイナリパッケージが入っている<i>All</i>ディレクトリ、それに利用可能なGRPパッケージのリストがあります。これらのパッケージセットをインストールするには次のようにします。</p>
		<pre caption="GRPを使う">
# <c>cd /GRP</c>
# <c>sh grp-install.sh &lt;list of package lists&gt;</c>
<comment>&lt;list of package lists&gt;には、同じディレクトリにある*-list.txtファイルを指定できます。</comment>
		</pre>
		<p><c>grp-install.sh</c>は既にインストール済みのものを置き換えることなく何度でも実行できます。使い方が良くわからないときは、<c>sh grp-install.sh</c>を実行してみてください。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>最終ステップ：タイムゾーン</title>
	<section>
		<body>
		<p>ここまでで、あとは最終設定だけになりました。設定プロセスのはじめに、まずタイムゾーンの設定を行ないます。カーネルのビルドの前にタイムゾーンを設定することで、<c>uname -a</c>コマンドで正確な情報を得ることができます。</p>
		<p><path>/usr/share/zoneinfo</path>のなかからタイムゾーン（グリニッジ標準時を使用するならGMT）を選んでシンボリックリンクを作成してください。</p>
		<pre caption = "タイムゾーンの設定">
# <c>ln -sf /usr/share/zoneinfo/path/to/timezonefile /etc/localtime</c>
		</pre>
		<p><path>/etc/rc.conf</path>もチェックして、タイムゾーンの設定が正しいかどうか確認したほうがいいでしょう。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>最終ステップ：カーネルとシステムロガー</title>
	<section>
		<body>
		<note>もしまだなら、<path>/etc/make.conf</path>を好みに応じて書き換えておいてください。</note>
		<p>ここでは、Linuxのソースコードをマージします。現在提供しているのは次のとおりです。</p>
		<table>
		  <tr>
		    <th>ebuild名</th>
		    <th>説明</th>
		  </tr>
		  <tr>
		    <ti>
		      <path>gentoo-sources</path>
		    </ti>
		    <ti>Gentoo Linux独自の高性能で実用的なカーネル(XFSは含みません)</ti>
		  </tr>
		  <tr>
		    <ti>
		      <path>xfs-sources</path>
		    </ti>
		    <ti>Highly-compatible kernel with XFS support.</ti>
		  </tr>
		  <tr>
		    <ti>
		      <path>openmosix-sources</path>
		    </ti>
		    <ti>GPL <uri link="http://www.openmosix.com">openMosix</uri>ロード・バランシング/クラスタリング技術をサポートしたLinuxソース。</ti>
		  </tr>
		  <tr>
		    <ti>
		      <path>usermode-sources</path>
		    </ti>
		    <ti>ユーザーモードLinux（Linux inside Linux）をサポートしたLinuxソース。</ti>
		  </tr>
		  <tr>
		    <ti>
		      <path>vanilla-sources</path>
		    </ti>
		    <ti>kernel.orgから得ることのできるものと同じLinuxソース。</ti>
		  </tr>
		</table>
		<warn>自分でカーネルを設定して使う場合は、<i>grsecurity</i>オプションに注意してください。セキュリティの設定をきつくしすぎると、いくつかのプログラム(たとえばXなど)が正常に動作しなくなる恐れがあります。必要かどうかわからない場合は、無効にしておきましょう。</warn>
		<p>上からひとつを選び、下記のようにマージしてください。</p>
		<pre caption = "カーネルソースのマージ">
# <c>emerge sys-kernel/gentoo-sources</c>
		</pre>
		<p>カーネルの準備ができたら、好みに応じてカスタマイズしてカーネルをコンパイルしてください。</p>
		<p><path>/usr/src/linux</path>がシンボリックリンクであることに注意してください。このリンクはPortageによってカーネルソースがemergeされるときに自動的に作成されるものです。もし複数のカーネルソースをマージしているなら、<path>/usr/src/linux</path>のシンボリックリンクを適切に作り直してください。</p>
		<pre caption = "Linuxカーネルのコンパイル">
# <c>cd /usr/src/linux</c>
# <c>make menuconfig</c>
# <c>make dep &amp;&amp; make clean bzImage modules modules_install</c>
# <c>mv /boot/bzImage /boot/bzImage.orig</c>
<comment>[既にbzImageが存在する場合]</comment>
# <c>cp /usr/src/linux/arch/i386/boot/bzImage /boot</c>
		</pre>
		<warn>カーネルが適切に機能するために必要なオプションがいくつかあります。これらは<i>モジュールとしてコンパイルしてはなりません</i>。&quot;Code maturity level options&quot;の中にある&quot;Prompt for development and/or incomplete code/drivers&quot;オプションをチェックしてください。&quot;File systems&quot;の中の<i>&quot;Device File System&quot;</i>オプションにもチェックしてください（&quot;/dev/pts file system support&quot;オプションは<e>チェックする必要はありません</e>）。また、<i>&quot;Virtual Memory Filesystem&quot;</i>オプションにもチェックします。ReiserFSファイルシステムを使用している場合は ReiserFSオプションにチェックします。同様にExt3ファイルシステムを使用している場合は&quot;Ext3&quot;オプションにチェックします。XFSファイルシステムを使用している場合は&quot;SGI XFS filesystem support&quot;オプションにチェックします。いずれの場合も&quot;Ext2&quot;オプションはチェックしておいてください。IDEハードディスクを使用している場合は忘れずに&quot;USE DMA by default&quot;オプションをチェックしてください。これを忘れてしまうと、ディスクのパフォーマンスが非常に貧弱になってしまいます。もちろん&quot;IDE disk&quot;オプションをチェックするのを忘れずに。さもないと、カーネルがIDEディスクにアクセスできなくなってしまいます。</warn>
		<p>ハードウェアRAIDを利用する場合はさらにカーネルに組み込まなければならないオプションがあります。HighpointのRAIDコントローラを使っている場合は&quot;hpt366 chipset support&quot;、&quot;support for IDE RAID controllers&quot;、&quot;Highpoint 370 software RAID&quot;を選択してください。PromiseのRAIDコントローラを使っている場合は、&quot;PROMISE PDC202{46|62|65|67|68|69|70} support&quot;、&quot;support for IDE RAID controllers&quot;、&quot;Support Promise software RAID (Fasttrak(tm))&quot;を選択してください。</p>
		<p>インターネット接続にPPPoEを使っているなら、以下のオプションを選択してください(ビルトインか、できればモジュール)。&quot;PPP (point-to-point protocol) support&quot;、 &quot;PPP support for async serial ports&quot;、&quot;PPP support for sync tty ports&quot;。ふたつの圧縮に関するオプションは害はありませんが全く必要ありません。&quot;PPP over Ethernet&quot;オプションも、カーネルモードPPPoEを設定したときに<i>rp-pppoe</i>によって利用されるだけです。</p>
		<p>もし、IDE CD-Rを使うならば、SCSIエミュレーションを利用できるようにしてください。&quot;ATA/IDE/MFM/RLL support&quot; ---> &quot;IDE, ATA and ATAPI Block devices&quot; ---> &quot;SCSI emulation support&quot;をチェックしてください（モジュールとしてインストールするのが良いでしょう）。そして&quot;SCSI support&quot;の&quot;SCSI support&quot;、&quot;SCSI CD-ROM support&quot;と&quot;SCSI generic support&quot;をチェックしてください（これもモジュールとしてインストールするのが良いでしょう）。モジュールとしてインストールしたならば、<c>echo -e &quot;ide-scsi\nsg\nsr_mod&quot; >> /etc/modules.autoload</c>として、ブート時に読み込まれるようにしてください。</p>
		<note> 2.2カーネルベースのGentoo Linuxをインストールすることもできます。安定性と引き換えに 2.4カーネルの素晴らしい特徴（XFSファイルシステムとtmpfsファイルシステムやiptablesなど）が使えなくなります。ただし、 ReiserFSファイルシステムやdevfsはパッチを当てることで使えるようにできます。 Gentoo LinuxのブートスクリプトはtmpfsかRAMディスクのどちらかを必要としますので、2.2カーネルを使用する際にはRAMディスクサポートを組み込んでください（モジュールではなく）。<comment>必ず</comment><path>/boot/grub/grub.conf</path>ファイルに<e>gentoo=notmpfs</e>と記述して、RAMディスクをtmpfsのかわりにブートスクリプトにマウントしてください。devfsを使わないならば<e>gentoo=notmpfs,nodevfs</e>と記述してください。</note>
		<p>これで、あなたの好みに合ったカーネル(とモジュール)がインストールされました。次に好みのシステムロガーをインストールします。従来から使われているsysklogd デーモンが利用できます。yslog-ngデーモンやmetalogデーモンも用意してあります。パワーユーザーは（それほど性能のよくない）sysklogdデーモンから syslog-ngデーモンやmetalogデーモンに移行したいと思っているでしょう。疑わしくもポピュラーに見えるのでmetalogデーモンを試してみたいかもしれません。次の4つのロガーからひとつを選んでください。</p>
		<pre caption = "システムロガーの選択">
# <c>emerge app-admin/sysklogd</c>
# <c>rc-update add sysklogd default</c>
<comment>または</comment>
# <c>emerge app-admin/syslog-ng</c>
# <c>rc-update add syslog-ng default</c>
<comment>または</comment>
# <c>emerge app-admin/metalog</c>
# <c>rc-update add metalog default</c>
<comment>または</comment>
# <c>emerge app-admin/msyslog</c>
# <c>rc-update add msyslog default</c>
		</pre>
		<warn> syslog-ngデーモンを使用する場合は<path>/etc/syslog-ng/syslog-ng.conf</path>ファイルを作成してください。<path>/etc/syslog-ng</path>に設定ファイルのサンプルが用意してあります。</warn>
		<impo> metalogは一括して出力をディスクに流し込みます。そのため、システムログが継続的に記録されるわけではありません。デーモンのデバッグを行なう時には、このパフォーマンス向上のための動作はかえって邪魔になるでしょう。 Gentoo Linuxでは、一時的にメッセージバッファを止めるために（<i>tail -f <path>/var/log/everything/current</path></i>コマンドがリアルタイムで実行されることを期待して）metalogデーモンにUSR1信号を送ることができます。メッセージバッファを働かせるためにはUSR2信号を送ってください。常にバッファリングを無効にするには、<path>/etc/conf.d/metalog</path>の中のMETALOG_OPTS="-B"をMETALOG_OPTS="-B -s"に書き換えてください。</impo>
		<p>次にdcron、fcron、vcronの中から好みのcronを選んでください。どれを選べば分からない時はvcronをおすすめします。次のようにインストールしてください。</p>
		<pre caption = "cronデーモンの選択">
# <c>emerge sys-apps/dcron</c>
# <c>crontab /etc/crontab</c>
<comment>または</comment>
# <c>emerge sys-apps/fcron</c>
# <c>crontab /etc/crontab</c>
<comment>または</comment>
# <c>emerge sys-apps/vcron</c>
<comment>vcronを使う場合は、<c>crontab /etc/crontab</c>を実行する必要はありません。</comment>
<comment>適切なinitレベルに *cron を忘れずに追加してください。</comment>
# <c>rc-update add *cron default </c>
		</pre>
		<p>起動時に実行されるプログラムやデーモンに関しては、<uri link="/doc/en/rc-scripts.xml">rc-script guide</uri>を参照してください。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>最終ステップ: 追加パッケージのインストール</title>
	<section>
		<body>
		<p>もしネット接続にrp-pppoeが必要なら、ここでインストールしてください。</p>
		<pre caption = "rp-pppoeのインストール">
# <c>USE="-X" emerge rp-pppoe</c>
		</pre>
		<note><i>USE="-X"</i>はpppoeのXインタフェースがインストールされるのを防ぎます。これによって、XやXが依存するパッケージまでもがインストールされてしまうことを避けることができます。Xサポートが必要なら、後でいつでも<i>rp-pppoe</i>をマージしなおすことができます。</note>
		<note>rp-pppoeはインストールされましたが、設定されていません。はじめにGentooシステムをブートしたとき、もう一度 <c>adsl-setup</c> を実行してください。</note>
		<p>もしXFSやReiserFS、LVMといったオプション機能を使うのなら、 Portageツリーの他の追加パッケージも必要となります。もしXFSを使うのなら、<c>xfsprogs</c>をemergeしてください。</p>
		<pre caption = "ファイルシステムツールのマージ">
# <c>emerge sys-apps/xfsprogs</c>
<comment>ReiserFSを使いたいなら、ReiserFSツールをマージしてください。</comment>
# <c> emerge sys-apps/reiserfsprogs</c>
<comment>LVMを使うのなら、<c>lvm-user</c>パッケージをマージしてください。</comment>
# <c>emerge sys-apps/lvm-user</c>
		</pre>
		<p>もしラップトップを使っていて、rebootしたあともPCMCIAスロットを使いたいのなら、<i>pcmcia-cs</i>パッケージをインストールしてください。</p>
		<pre caption = "PCMCIA-csのマージ">
# <c>emerge sys-apps/pcmcia-cs</c>
		</pre>
		<warn>PCMCIAを機能させるためには、インストールがすべて終わったあとで再度<i>pcmcia-cs</i>をemergeしなおす必要があるでしょう。</warn>
		</body>
	</section>
</chapter>

<chapter>
<title>最終ステップ: /etc/fstab</title>
	<section>
		<body>
		<p>ここまでの作業でGentoo Linuxシステムはほぼ完成しました。あとは重要なシステムファイルを作成し、GRUBブートローダーをインストールします。まず、<path>/etc/fstab</path>ファイルを編集します。ReiserFSファイルシステムを使用する場合は<c>notail</c>オプションをbootパーティションに付加するのを忘れないでください。<c>ext2</c>、<c>ext3</c>や<c>reiserfs</c>などのファイルシステムのタイプも指定してください。</p>
		<p>下記の<path>/etc/fstab</path>のように設定してください。もちろん、&quot;BOOT&quot;、&quot;ROOT&quot;、&quot;SWAP&quot;のデバイス名を実際のデバイス名（<c>hda1など</c>）に変更してください。</p>
		<pre caption = "fstabの編集">
<comment>
# /etc/fstab: 静的なファイルシステム設定.
#
# noatime はパフォーマンスを向上させます (atimesは通常は必要ありません)
# notail は ReiserFS のパフォーマンスを向上させます (ディスク効率が犠牲になります)
# noatimeを削っても安全です。また、notailとtailは自由に切り替えられます。

# &lt;fs&gt;           &lt;mountpoint&gt;   &lt;type&gt;   &lt;opts&gt;          &lt;dump/pass&gt;

# NOTE: もしBOOTパーティションがReiserFSなら、notailオプションを加えてください。
</comment>
/dev/BOOT           /boot       ext2	 noauto,noatime	 1 2
/dev/ROOT           /           ext3	 noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro       0 0
proc                /proc       proc	 defaults        0 0
		</pre>
		<warn><i>/boot</i>がブート時にマウントされないことに気づいたでしょうか。これは/bootが破壊されることを防ぐためです。/bootにアクセスする必要があるときは、マウントしてください。</warn>
		</body>
	</section>
</chapter>

<chapter>
<title>最終ステップ: Root パスワード</title>
	<section>
		<body>
		<p>忘れないうちに、rootのパスワードを設定しましょう。</p>
		<pre caption = "rootパスワード設定">
# <c>passwd</c>
		</pre>
		</body>
	</section>
</chapter>

<chapter>
<title>最終ステップ: /etc/hostname</title>
	<section>
		<body>
		<p>完全なドメイン名をファイルに書き込んでください（例：<c>mymachine.mydomain.com</c>）</p>
		<pre caption = "Hostname設定">
# <c>echo mymachine.mydomain.com > /etc/hostname</c>
		</pre>
		</body>
	</section>
</chapter>

<chapter>
<title>最終ステップ: /etc/hosts</title>
	<section>
		<body>
		<p>このファイルにホストネームとIPアドレスを書き込んでください。ネームサーバに無いホストネームとIPアドレスの解決に使用されます。以下にこのファイルのテンプレートを示します。</p>
		<pre caption = "Hosts テンプレート">
127.0.0.1      localhost
<comment># 次の行にはローカルLANのIPとマシン名を記述します</comment>
192.168.1.1    mymachine.mydomain.com	mymachine
		</pre>
		<note>DHCPサーバを使ったネットワークにいるなら、<i>localhost</i>をあなたのマシンの名前に設定するとよいでしょう。GNOMEやその他の多くのプログラムが名前解決するときの助けとなります。</note>
		</body>
	</section>
</chapter>

<chapter>
<title>最終ネットワーク設定</title>
	<section>
		<body>
		<p><path>/etc/modules.autoload</path>ファイルにシステムに必要なモジュールを書き込んでください（その他のオプションがあれば、ここに書き込んでください）。Gentoo Linuxがブートする時、これらのモジュールが自動的に読み込まれます。特に重要なものがモジュールとしてコンパイルした場合のイーサネットカードモジュールです。</p>
		<pre caption="/etc/modules.autoload">
<comment>ここでは3comのカードを使っていると仮定しています。
<path>/lib/modules/`uname -r`/kernel/drivers/net</path>を見て、自分のカードを探してください。</comment>
3c59x
		</pre>
		<p>ブート時にネットワークの設定を読み込ませるために<path>/etc/conf.d/net</path>スクリプトを編集してください。</p>
		<pre caption = "ブート時のネットワーク設定">
# <c>nano -w /etc/conf.d/net</c>
# <c>rc-update add net.eth0 default</c>
		</pre>
		<p>もし、複数のネットワークカードを使用しているなら、それぞれに<path>net.eth<comment>x</comment></path>スクリプト（<comment>x</comment>=1,2,…）を追加してください。</p>
		<pre caption="複数のネットワークインタフェース">
# <c>cd /etc/init.d</c>
# <c>cp net.eth0 net.eth<comment>x</comment></c>
# <c>rc-update add net.eth<comment>x</comment> default</c>
		</pre>
		<p>PCMCIAカードをインストールしている場合は、<path>/etc/init.d/pcmcia</path>の中を見て問題ないか確認し、<path>/etc/init.d/net.eth<comment>x</comment></path>の一番上に以下を追加してください。</p>
		<pre caption = "/etc/init.d/net.ethx での PCMCIA用 depend">
depend() {
	need pcmcia
}
		</pre>
		<p>ネットワーク設定が読み込まれる際、自動的にPCMCIAドライバが読み込まれます。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>最終ステップ: 基本設定 (キーマップ設定など)</title>
	<section>
		<body>
		<pre caption="基本設定">
# <c>nano -w /etc/rc.conf</c>
		</pre>
		<p>基本設定を行うには、ファイル内の指示に従ってください。<c>CLOCK</c>が望みどおりに設定されているか確認しましょう。またKEYMAP変数が合っているか見てください。設定できるキーマップを見つけるには<path>/usr/share/keymaps</path>の中を探してください。</p>

		</body>
	</section>
</chapter>

<chapter>
<title>最終設定: GRUB設定</title>
	<section>
		<body>
		<p>GRUBを理解するのにもっとも重要なことは、GRUBがどうやってハードディスクとパーティションを参照するかということです。<path>/dev/hda1</path>パーティションはGRUBでは<path>(hd0,0)</path>と呼ばれます。hd0,0をカッコでくくる点に注意してください。ハードディスクはaからではなく0から数えます。パーティションは1からではなく0から数えます。注意しなければならないのは、数えられるのはハードディスクだけ、という点です。 CD-ROMプレイヤーやライターといったATAPI-IDEデバイスは数えられません。これはSCSIでも同じです(通常、SCSIはIDEより大きな番号が割り当てられます。ただし、BIOSでSCSIからブートするようになっている場合を除きます)。たとえば、ハードディスクが /dev/hda、CD-ROMドライブが /dev/hdb、CD-Rが /dev/hdc、二つ目のハードディスクが /dev/hddだとすると、<path>/dev/hdd7</path>は変換されて<path>(hd1,6)</path>となります。これはトリッキーに見えますし、実際にトリッキーなのですが、grubはtabキーによる補完の機能をもっているので、ハードディスクやパーティションがたくさんあってもgrubの番号付けで混乱することは少ないでしょう。感じが掴めたら、GRUBをインストールしましょう。</p>
		<p>GRUBをインストールするもっとも簡単な方法は、chrootから<c>grub</c>とタイプすることです。</p>
		<pre caption = "GRUBインストール">
# <c>grub</c>
		</pre>
		<impo>もしハードウェアRAIDを使っているのなら、ここの記述はうまく動かないでしょう。次のセクションにいき、<path>grub.conf</path>を作成してください。その後RAIDコントローラ用のgrub設定を完了させます。</impo>
		<p><c>grub&gt;</c>というgrubのコマンドラインプロンプトが表示されているでしょうか。ここではハードディスクにGRUBブートローダをインストールするために正しくコマンドを入力してください。設定例では、GRUBブートローダをハードディスクのMBR(マスターブートレコード)にインストールするので、コンピュータを起動したとき最初に目にするものが GRUBプロンプトになります。この場合は、次のように入力します。</p>
		<pre caption = "GRUBコマンド">
grub&gt; <c>root (hd0,0)</c>
grub&gt; <c>setup (hd0)</c>
grub&gt; <c>quit</c>
		</pre>
		<p>このふたつのコマンドの意味を説明します。<c>root ( )</c>はGURBにブートパーティション（上の例で言えばGURBの<path>(hd0,0)</path>つまり<path>/dev/hda1</path>）の位置を教えます。<c>setup ( )</c>はGRUBに<c>root ( )</c>で指定したブートパーティションを探すためのブートレコードをどこにインストールするのかを教えます。上の例では、ブートレコードをハードディスクのMBRにインストールするので、単純に<path>/dev/hda</path>（GRUBでは<path>(hd0)</path>です）と指定します。もしほかのブートローダを使用していて、GRUBをセカンダリ・ブートローダとしたいのであれば、GRUB を特定のパーティションにインストールすることができます。その場合はディスク全体ではなく、特定のパーティションを指定します。GRUBのインストールに成功したら、<c>quit</c>とタイプしてGRUBを終了してください。</p>
		<note> grubのTAB補完はgrub内で使えます。<c> root (</c>と書いてからTABを押すと利用可能なデバイスの一覧(ハードディスクだけではありません)が表示されます。<c> root (hd</c>を入力してからTABを押すと利用可能なハードディスクを一覧表示します。<c> root (hd0,</c>と書いてからTABを押すと最初のハードディスクのパーティションが一覧表示されます。 補完機能を使いながら、構文のチェックをすると正しい選択をしているか確認するのに役立ちます。</note>
		<p>これで Gentoo Linuxがインストールされました。しかし、システムをリブートしたとき、感じのいいGRUBブートメニューを表示させるには、<path>/boot/grub/grub.conf</path>を作成しなければなりません。方法は以下のとおりです。</p>
		<impo>GRUBの下位互換性を保つため、<i>grub.conf</i> から <i>menu.lst</i>へ忘れずにリンクを作成してください。これは、<c>ln -s /boot/grub/grub.conf /boot/grub/menu.lst </c>として実行します。</impo>
		<p>grub.confファイルを作成し(<c>nano -w /boot/grub/grub.conf</c> としてください)、以下の内容を書き込みます。</p>
		<pre caption = "Grub.conf 設定">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=My example Gentoo Linux
root (hd0,0) 
kernel /boot/bzImage root=/dev/hda3 

<comment>#Below is for setup using hardware RAID</comment>
title=My Gentoo Linux on RAID
root (hd0,0)
kernel /boot/bzImage root=/dev/ataraid/discX/partY

<comment># Below needed only for people who dual-boot</comment>
title=Windows NT Workstation
root (hd0,5) 
chainloader +1
		</pre>
		<note>(hd0,0) は括弧内に空白を入れずに記述しなければなりません。</note>
		<impo> IDE CD-R用にSCSIエミュレーションを設定しているなら、カーネルの引数に&quot;hdx=ide-scsi&quot;を追加してください（hdxはCD-Rの位置に合わせてください）。</impo>
		<p>このファイルを保存すれば、Gentoo Linuxのインストールは完了します。第一オプションを選択しておけば、GRUBはGentoo Linuxをブートします。 grub.confファイルの2番目の部分はGRUBでWindowsをブートする方法を示したものです。</p>
		<note>上で述べた<path>(hd0,0)</path>は&quot;boot&quot;パーティション（例では<path>/dev/hda1</path>）を指しています。<path>/dev/hda3</path>はrootパーティションを指しています。<path>(hd0,5)</path>にはNTブートローダーが存在しています。</note>
		<note>カーネルイメージへのパスはbootパーティションに対して相対的です。もしブートパーティション<path>(hd0,0)</path>とルートパーティション<path>(hd0,1)</path>を持っているなら、 grub.confのすべてのパスは<path>/bzImage</path>になります。</note>
		<p>カーネルに引数を与える必要があるならば、<c>kernel</c>コマンドの後に追加してください。上の例ではすでにひとつの引数（<c>root=/dev/hda3</c>）を与えていますが、さらに引数を与えることができます。<c>kernel</c>コマンドに<c>gentoo=nodevfs</c>を追加することにより、デフォルトでdevfsをオフにすることができます（意味が分からない場合は行なわないでください）。</p>
			<note>初期のGentoo Linuxには当てはまりませんが、devfsを有効にするために<c>kernel</c>コマンドに<c>devfs=mount</c>を追加する必要はありません。 rc6ではdevfsはデフォルトで有効になっています。</note>
		</body>
	</section>
</chapter>

<chapter>
<title>最終設定: LILOの設定</title>
	<section>
		<body>
		<p>GRUBは多くの人にとって新しい選択肢ですし、いつも安定しているというわけではありません。LILO(LInuxLOader)はその点ではLinuxブートローダとしての実績があります。安定性や設定が複雑すぎないことを求めるなら、LILOを試してみてください。</p>
		<p>まず、LILOをマージしてください。</p>
		<pre caption="Emerging LILO">
# <c>emerge lilo</c>
		</pre>
		<p>ではLILOの設定をしましょう。簡単な例を紹介し、その中身の説明をします。</p>
		<pre caption="lilo.confの例">
boot=/dev/hda
map=/boot/map
install=/boot/boot.b
prompt
timeout=50
message=/boot/message
lba32
default=linux

image=/boot/vmlinuz-2.4.20
	label=linux
	initrd=/boot/initrd-2.4.20.img
	read-only
	root=/dev/hda5

#windowsなどとデュアルブートにする場合
other=/dev/hda1
	label=dos
		</pre>
		<li><i>boot=/dev/hda</i> はLILO自身を最初のIDEコントローラ上の最初のハードディスクにインストールするように指示します。</li>
		<li><i>map=/boot/map</i> はマップファイルを指定します。通常これを書き換えるべきではありません。</li>
		<li><i>install=/boot/boot.b</i> は新たにブートセクタに書き込むファイルを指示します。通常はこれを書き換えるべきではありません。この行がないときは、デフォルトの/boot/boot.bが使われます。</li>
		<li><i>prompt</i>があるとき、LILOは何が参照されたかをメッセージラインに出力します。これを削除することは推奨されませんが、消してしまった場合はマシンがブートするときに[Shift]キーを押しつづけることでプロンプトを出すことができます。</li>
		<li><i>timeout=50</i> はLILOがデフォルトの設定を使ってブートする前にユーザの入力を待つ時間の長さを指定します。これは1/10秒単位で、デフォルトは50です。</li>
		<li><i>message=/boot/message</i> はLILOがユーザにオペレーティングシステムやカーネルを選択してもらう時に表示する画面を指示します。</li>
		<li><i>lba32</i> はハードディスクのジオメトリをLILOに知らせます。よくつかわれるものとしては、他にlinearがあります。何を意味しているのか良くわからないときは変更するべきではありません。システムがブートできなくなってしまうことがあります。</li>
		<li><i>default=linux</i> はデフォルトでブートするオペレーティングシステムを指定します。linuxは、その下で定義されるブートオプションの名前です。</li>
		<li><i>image=/boot/vmlinuz-2.4.20</i> はそのブートオプションで使われるLinuxカーネルを指定します。</li>
		<li><i>label=linux</i> LILOの画面表示で使われる、ブートオプションの名前を指定します。この場合は、defaultの行で指定されている名前でもあります。</li>
		<li><i>initrd=/boot/initrd-2.4.20.img</i> は初期化用RAMディスクイメージを指定します。このイメージはブート時にデバイスを初期化・開始し、カーネルが起動できるようにします。初期化用RAMディスクは、カーネルを読み込むために必要な、SCSIカード、ハードディスクなどの機械依存のドライバを保持しています。複数のマシンで共有するようなことはしないでください。</li>
		<li><i>read-only</i> はルートパーティション(下のroot行を参照)が読み込み専用であり、起動中には書き換えることができないということを指示します。</li>
		<li><i>root=/dev/hda5</i> はLILOにルートパーティションとして使うディスクパーティションを指示します。</li>
		<note>情報を提供してくれた<uri link="http://www.redhat.com">Redhat.com</uri>に感謝します。</note>
		<p><i>lilo.conf</i>を編集したら、LILOを実行してMBRに情報を書き込んでください。</p>
		<pre caption="LILOの実行">
# <c>/sbin/lilo</c>
		</pre>
		<p>LILOが設定されました。これでGentoo Linuxを起動する準備ができました!</p>
		</body>
	</section>
</chapter>

<chapter>
<title>最終設定: ブートディスク</title>
	<section>
	<title>GRUBブートディスク</title>
		<body>
		<p>どんなLinuxディストリビューションでも、最初にインストールするときにブートディスクも作っておくとよいでしょう。お守りのようなものですが、一般的に作っておいて損はありません。ハードウェアRAIDを利用している場合は、<e>必ず</e>GRUBブートディスクを作成してください。grubをchroot環境からRAIDにインストールしても失敗してしまいます。そこで、ブートディスクを作り、最初に再起動したときにGRUBをMBRにインストールします。ブートディスクは次のようにして作成します。</p>

		<pre caption = "RAIDブートディスクの作成">
# <c>mke2fs /dev/fd0</c>
# <c>mount /dev/fd0 /mnt/floppy</c>
# <c>mkdir -p /mnt/floppy/boot/grub</c>
# <c>cp /usr/share/grub/i386-pc/stage1 /mnt/floppy/boot/grub/</c>
# <c>cp /usr/share/grub/i386-pc/stage2 /mnt/floppy/boot/grub/</c>

# <c>grub</c>

grub&gt; <c>root (fd0)</c>
grub&gt; <c>setup (fd0)</c>
grub&gt; <c>quit</c>
		</pre>
		<p>ここでリブートしてフロッピーで起動してください。フロッピーの<c>grub&gt;</c>プロンプトが表示されたら、必要に応じて<c>root</c>や<c>setup</c>コマンドを実行できます。</p>
		</body>
	</section>
	<section>
	<title>LILOブートディスク</title>
		<body>
		<p>LILOを使う場合でも、ブートディスクを作っておくと良いでしょう。</p>
		<pre caption="LILOブートディスクの作成">
# <c>dd if=/boot/your_kernel of=/dev/fd0 </c>
<comment>カーネルサイズは1.4MB以下でなければなりません。</comment>
		</pre>
		</body>
	</section>
</chapter>

<chapter>
<title>インストール完了!</title>
	<section>
		<body>
		<p>これでGentoo Linuxがインストールされました。あとは必要な設定ファイルを更新し、chrootされたshellを終了して、パーティションを切り離したあと再起動しましょう。</p>
		<pre caption = "システムの再起動">
# <c>etc-update</c>
# <c>exit</c> 
<codenote>chrootされたshellを終了する。<c>^D</c>とタイプしても良い。</codenote>
# <c>cd / </c>
# <c>umount /mnt/gentoo/boot</c>
# <c>umount /mnt/gentoo/proc</c>
# <c>umount /mnt/gentoo/dev</c>
# <c>umount /mnt/gentoo</c>
# <c>reboot</c>
		</pre>
		<note>再起動したあとに<c>update-modules</c>コマンドを実行して<path>/etc/modules.conf</path>ファイルを作成するのも良いでしょう。一般的には、このファイルを直接修正する代わりに<path>/etc/modules.d</path>の中のファイルに変更を加えるべきです。</note>
		<impo>もしハードウェアRAIDを使っているなら、最初のrebootにはブートディスクを使うことを忘れないで下さい。再起動後、grubを真っ先にinstallしてください。これで終わりです。おめでとう!</impo>
		<p>何か疑問があったり、Gentoo Linuxの開発に携わりたい人は、gentoo-user メーリングリストやgentoo-devメーリングリストへの参加も考えてみてください。(<uri link="http://www.gentoo.org">main page</uri>に&quot;click to subscribe&quot;リンクがあります)。また、<uri link="http://www.gentoo.org/doc/en/desktop.xml">Desktop configuration guide</uri>はGentoo Linuxシステムを設定するときに役に立ちますし、<uri link="http://www.gentoo.org/doc/en/portage-user.xml">Portage user guide</uri>はPortageの基礎知識を得るのに役立ちます。その他のドキュメントは<uri link = "http://www.gentoo.org/main/en/docs.xml">こちら</uri>を参照してください。インストールやその他の問題で質問したいことがあるなら、Gentoo Linux <uri link = "http://www.gentoo.org/main/en/faq.xml">FAQ</uri>も見てください。Gentoo Linuxへようこそ！どうぞお楽しみ下さい。</p>
		</body>
	</section>
</chapter>

<chapter>
<title>Gentoo利用統計</title>
	<section>
		<body>
		<p> Gentoo Linux 利用統計プログラムは、開発者にユーザの動向を把握する手段を提供することを目的に始められました。この gentoo-stats プログラムは Gentoo Linuxの利用状況に関する情報を収集し、開発の優先順位を決定するために使われます。あくまでもオプションとして提供していますが、参加してもらえるととても嬉しく思います。集計結果は、<uri>http://stats.gentoo.org/</uri>で見ることができます。</p>
		<p> gentoo利用統計サーバはあなたのシステムに対してIDを割り当てます。これはそれぞれのシステムが間違いなく１度だけカウントされるようにするためのものです。IDを使ってあなたのシステムを識別したり、 IPアドレスやその他の情報とマッチングしたりすることはありません。あらゆる予防措置を講じて、あなたのシステムのプライバシーが守られるようにこのシステムを構築しています。以下が、現在&quot;gentoo-stats&quot;プログラムで監視している項目です。</p>
		<ul>
		<li>インストール済みパッケージとそのバージョン</li>
		<li>CPU情報: 速度(MHz)、ベンダ、モデル、CPUフラグ (&quot;mmx&quot;や&quot;3dnow&quot;など)</li>
		<li>メモリ情報 (物理メモリ量、スワップスペース量)</li>
		<li>PCIカードとネットワークコントローラチップ</li>
		<li>使われているプロファイル(/etc/make.profileがどこへリンクしているか)</li>
		</ul>
		<p>我々は、機密情報が公開されることが、多くのGentoo Linuxのユーザにとって(開発者にとってもそうですが)、脅威となることを承知しています。</p>
		<ul>
		<li>gentoo-statsプログラムを変更しない限り、次のような機密情報を通信することはありません: パスワード類、設定情報、靴のサイズ…</li>
		<li>e-mailアドレスの送信はオプションです。デフォルトでは送信されません。</li>
		<li>送信元のIPアドレスもあなたを識別できるような方法で記録されることは決してありません。
		「IPアドレスとシステムIDのペア」はどこにも記録されていません。</li>
		</ul>
		<p>インストールは簡単です。次のように入力してください。</p>
		<pre caption="gentoo-statsのインストール">
# <c>emerge gentoo-stats</c>   <codenote>gentoo-statsのインストール</codenote>
# <c>gentoo-stats --new</c>    <codenote>システムIDの取得</codenote>
		</pre>
		<p>上記の2番目のコマンドは新しいシステムIDをサーバに要求し、それを<path>/etc/gentoo-stats/gentoo-stats.conf</path> に自動的に記録します。このファイルにはさらに設定オプションを指定することができます。</p>
		<p>その後は、定期的に起動する必要があります(rootとして実行する必要はありません)。あなたのcrontabに次の行を追加してください。</p>
		<pre caption="cronでgentoo-statsを更新する">
<c>0 0 * * 0,4 /usr/sbin/gentoo-stats --update > /dev/null</c>
		</pre>
		<p><c>gentoo-stats</c>プログラムは単純なperlスクリプト(<path>/usr/sbin/gentoo-stats</path>)ですので、お好みのページャやエディタで見ることができます。</p>
		</body>
	</section>	
</chapter>

</guide>
