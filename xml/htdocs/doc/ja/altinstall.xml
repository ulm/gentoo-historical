<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ja/altinstall.xml,v 1.7 2006/03/30 12:02:33 idani Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/ja/altinstall.xml" lang="ja">

<title>Gentoo Linuxを通常以外の方法でインストールするための手引き</title>


<author title="Contributor">
  <mail link="gerrynjr@gentoo.org">Gerald Normandin Jr.</mail>
</author>
<author title="Contributor">
  <mail link="lordviram@rebelpacket.net">Travis Tilley</mail>
</author>
<author title="Contributor">
  <mail link="volontir@yahoo.com">Oleg Raisky</mail>
</author>
<author title="Contributor">
  <mail link="luminousit@hotmail.com">Alex Garbutt</mail>
</author>
<author title="Contributor">
  <mail link="alex@openvs.com">Alexandre Georges</mail>
</author>
<author title="Contributor">
  <mail link="vargen@b0d.org">Magnus Backanda</mail>
</author>
<author title="Contributor">
  <mail link="davoid@gentoo.org">Faust A. Tanasescu</mail>
</author>
<author title="Contributor">
  <mail link="aliz@gentoo.org">Daniel Ahlberg</mail>
</author>
<author title="Editor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Reviewer">
  Ken Nowack <!-- antifa@gentoo.org seems out -->
</author>
<author title="Editor">
  <mail link="blubber@gentoo.org">Tiemo Kieft</mail>
</author>
<author title="Editor">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Editor">
  <mail link="smithj@gentoo.org">Jonathan Smith</mail>
</author>
<author title="翻訳">
  <mail link="ihr@i-ml.com">石井博文</mail>
</author>

<abstract>
この手引きは、CD-ROMドライブがない、あるいはCDから起動できないコンピュー
タなど、特殊なインストール方法が必要なときの為に、Gentooの異なるインス
トール方法を集めることを目的としたものです。</abstract>

<license/>

<version>0.65</version>
<date>2005-08-07</date>
<!-- Original revision: 1.60 -->

<chapter>
<title>この手引きについて</title>
<section>
<body>

<p>
一般的なCDから起動するインストール方法ではうまくいかない、あるいは単に
そうしたくないときにはこの手引きが役に立ちます。この手引きは、Gentoo
Linuxの代替的なインストール方法を必要とする方のために提供されています。
また、その気があればこの手引きをあなたの変わったインストール方法を提供
する場とすることもできます。もしも、あなたが見付けた便利なインストール
方法があったり、Gentooのインストール方法で工夫した点があったりすれば、
その方法を詳しく書いて遠慮なく<uri link="http://bugs.gentoo.org">Bugzilla</uri> まで送ってください。
</p>

</body>
</section>
</chapter>

<chapter>
<title>Smart BootManagerを使ったインストールCDの起動</title>
<section>

<body>

<p>
Smart BootManagerを
<uri>http://btmgr.sourceforge.net/download.html</uri>からダウンロード
してください。多くの言語パックと一緒に、Linux用のソースコードと実行バ
イナリ、Windows用の.exeファイルが利用可能です。しかしながら、新しいバー
ジョンのNASMでソースコードをコンパイルできないので、今回はバイナリを使っ
た方が良いでしょう。</p>

<p>
パッケージをソースコードからコンパイルするかバイナリを入手してください。
起動用フロッピーを作るときには、下のような幾つかのオプションを利用でき
ます。
</p>

<pre caption="Smart BootManagerのオプション">
sbminst [-t theme] [-d drv] [-b backup_file] [-u backup_file]

   -t theme       select the theme to be used, in which the theme could be:
                    us = English theme       de = German theme 
                    hu = Hungarian theme     zh = Chinese theme 
                    ru = Russian theme       cz = Czech theme
                    es = Spanish theme       fr = French theme 
                    pt = Portuguese theme 

                 
   -d drv         set the drive that you want to install Smart BootManager on;
                  for Linux:
                    /dev/fd0 is the first floppy driver, 
                    /dev/hda is the first IDE harddisk driver.
                    /dev/sda is the first SCSI harddisk driver.
                  for DOS:
                    0   is the first floppy drive
                    128 is the first hard drive;

   -c             disable CD-ROM booting feature;

   -b backup_file backup the data that will be overwritten for
                  future uninstallation;

   -u backup_file uninstall Smart BootManager, should be used alone;

   -y             do not ask any question or warning.
</pre>

<pre caption="起動用フロッピーを作るためにsbminstを使う">
# <i>sbminst -t us  -d /dev/fd0</i>
</pre>

<note>
フロッピーを示すデバイス名が異なる場合は環境に応じて変更してください。
</note>

<p>
では、インストールCDを使って起動するコンピュータのCD-ROMドライブにイン
ストールCDをセットし、同じようにフロッピードライブにもフロッピーをセッ
トしてコンピュータを起動してください。
</p>

<p>
Smart BootManagerのダイアログが出迎えてくれるはずです。インストールCD
を起動するためにCD-ROMを選択してENTERを押してください。起動できたら標
準的なインストール方法に従ってください。
</p>

<p>
Smart BootManagerに関するもっと詳しい情報は
<uri>http://btmgr.sourceforge.net/</uri>から参照できます。
</p>

</body>
</section>
</chapter>

<chapter>
<title>Knoppixを利用したインストール</title>
<section>
<body>

<note>
Knoppixはx86ユーザしか利用できません。
</note>

<!-- this works with knoppix 3.6+ and gentoo 2004.3, 2005.0-->

<p>
<uri link="http://www.knoppix.org/">Knoppix</uri>のLiveCDを使って起動
する方法では、Gentooをコンパイルしている間でも完璧に動作するシステムを
使うことができます。bootstrapが終わるのを待つ間は、Tux Racerが暇潰しの
タネになりますし、OpenOfficeを使って仕事をすることもできます。
</p>

<warn>
Gentooシステムがインストールされるのを待つ間にKnoppixのホームディレク
トリに何かを保存した場合、再起動後にGentooからそれを利用することはでき
ません。重要なデータはハードディスクや何か他のコンピュータに保存するの
を忘れないでください！
</warn>

<p>
KnoppixのCDから起動します。Knoppix 3.6-3.8.2をお使いの場合は、2.6カー
ネルを呼び出すためにブートオプションとして<c>knoppix26</c>を指定する必
要があります。このステップを飛ばしてしまうと、<c>chroot</c>したときに、
カーネルが古すぎるというエラーメッセージが表示されます。しかし、もしも
Knoppix 3.9+をお使いの場合には、2.6カーネルがデフォルトで呼び出される
のでこのステップは必要ありません。
</p>

<p>
通常、KnoppixではKDEのデスクトップが起動します。パスワードを変更できる
ようにするために、konsoleを起動し<c>su -</c>を実行してください。これに
よってKnoppixでのroot ユーザのパスワードを設定できます。ここで、リモー
トログインのために<c>sshd</c>を必要に応じて設定できます。
</p>

<pre caption="マウントポイント /mnt/gentoo の作成">
# <i>mkdir /mnt/gentoo</i>
</pre>

<p>
この時点で、標準的なインストールの手引きの<uri link="/doc/en/handbook/handbook-x86.xml?part=1&amp;chap=4">パート
4</uri>(訳注: <uri link="/doc/ja/handbook/handbook-x86.xml?part=1&amp;chap=4">日本語版パー
ト4</uri>)の部分から続けてください。ただし、procシステムをマウントする
ときには、替わりに次のコマンドを実行してください。
</p>

<pre caption="proc仮想ファイルシステムのバインドマウント">
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
</pre>

<p>
また、KNOPPIXでは、PortageのFEATURES内のいくつかが動作しないことも知られています。
とりわけ、<c>userpriv</c>と<c>usersandbox</c>に注意してください。
もし、エラーが発生したら、オプション機能のいくつか、または全部を無効にすることが
賢明でしょう。
</p>

<!-- 
  Commenting out due to #78716. If it needs to be restated again, note
  that some will require to bind-mount it, others don't, and that you have
  a 50-50 chance of winning the gold strike.
  

<p>
また、多くのデバイスファイルのパーミッションの問題を解決するために、デ
バイスツリーもバインドマウントする必要があるでしょう。
</p>

< ! - -
  If this doesn't seem to work, #71901 mentions the following command:
    mount -o remount,rw,nosuid /dev/hd* /mnt/hd*
  before all. Looks weird to me, but if this doesn't work, we might want to try
  that.
- - >

<pre caption="デバイスツリーのバインドマウント">
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
</pre>
-->

</body>
</section>
</chapter>

<chapter>
<title>ネットワーク接続無しでのstage 1からのインストール</title>
<section>
<body>

<p>
インストールCDのISOイメージを焼きます。
</p>

<p>
最新のPortageのスナップショットを
<uri>http://distro.ibiblio.org/pub/linux/distributions/gentoo/snapshots/</uri>
(または、お好きな<uri link="http://www.gentoo.org/main/en/mirrors.xml">ミラーサイト</uri>)
(訳注: <uri link="http://www.gentoo.org/main/ja/mirrors.xml">日本語版
ミラーサイト一覧</uri>)から入手してください。このtarballをインストール
対象のコンピュータ上のパーティションに置くか、CDに焼いてください。
</p>

<p>
Gentooインストールハンドブックの第6章にある<c>chroot /mnt/gentoo</c>の
項まですべての作業を終わらせてください。CD-ROMドライブがひとつしか無い
場合は、インストールCDをアンマウントし、PortageのスナップショットCDを
マウントできるように、起動時に<c>docache</c>オプションを使うことを忘れ
ないでください。
</p>

<p>
新しいコンソール(Alt+F2)を開いて、インストール手引書のboorstrap.sh ス
クリプトを実行する直前までの作業を行ってください。
</p>

<warn>
古いバージョンのインストールCDをお使いの場合は、新たにログインする前に
<c>passwd</c>コマンドでパスワードを変更しておく必要があります。
</warn>

<p>
最初のコンソール(chrootをしていない方です。Alt-F1で戻ります。)に戻って、
二枚目のCDを<path>/mnt/gentoo/mnt/cdrom2</path>にマウントしてください。
cdrom2からPortageのtarballをコピーし、
<path>/mnt/gentoo/usr/portage</path>に展開します。
</p>

<pre caption="スナップショットCDのマウント">
# <i>umount /mnt/cdrom</i>
# <i>mkdir /mnt/gentoo/mnt/cdrom2</i>
# <i>mount /dev/cdroms/cdrom0 /mnt/gentoo/mnt/cdrom2</i>
# <i>cp /mnt/gentoo/mnt/cdrom2/portage-$date.tar.bz2 /mnt/gentoo/usr</i>
# <i>cd /mnt/gentoo/usr</i>
# <i>tar -xvjpf portage-$date.tar.bz2</i>
</pre>

<p>
F2のコンソールに戻ります。今bootstrap.shを実行しようとしても、ファイル
をダウンロードできないのでうまくいかないと思います。これらのファイルを、
どこか他の場所から入手して、(F2のコンソール上での)
/usr/portage/distfilesに置いてあげることにしましょう。
</p>

<p>
これにはstage 1に含まれるパッケージ(glibc, baselayout, texinfo,
gettext, zlib, binutils, gcc, ncurses)と、それらとの依存関係を持つもの
が必要です。
</p>

<note>
それぞれのパッケージのバージョンは、同期したPortageツリーで指定されて
いるものでなければならないことに注意してください。
</note>

<pre caption="ダウンロードするファイルのリストを取得">
<comment>(&gt;の前の2を忘れないこと)</comment>
# <i>emerge -fp glibc baselayout texinfo gettext zlib binutils gcc ncurses 2&gt; stage1.list</i>
# <i>mount -t vfat /dev/fd0 /mnt/floppy</i>
# <i>cp /mnt/gentoo/stage1.list /mnt/floppy</i>
# <i>umount /mnt/floppy</i>
</pre>

<p>
高速通信が可能なコンピュータのところまでフロッピーを持って行きましょう。
<path>stage1.list</path>というファイルをざっと眺めてみると、いくつかダ
ウンロードするURLがあると思います。残念ながら、この中には各々のパッケー
ジについて入手先としていくつかの不要なURLが挙げられています。最初のひ
とつを残して、すべてのURLを削ってしまいましょう。
</p>

<pre caption="URLを削る">

<comment>(このスクリプトの動作はemergeの出力に依存していますが、これは
将来特に通知されることなく変更される可能性があります。実行の際には注意
してください。)</comment>
# <i>cut -f 1 -d ' ' stage1.list &gt; stage1.download</i>
</pre>

<p>
では、<c>wget</c>を使って列挙されているすべてのソースコードを取ってきましょう。
</p>

<pre caption="wgetによるソースパッケージの入手">
# <i>wget -N -i stage1.download</i>
</pre>

<p>
ファイルをすべて入手できたら、それをインストール対象のコンピュータに移
して<path>/mnt/gentoo/usr/portage/distfiles</path>にコピーしてください。
これで<c>bootstrap.sh</c>を走らせることができるようになります。stage 2、
stage 3でもこれと同じ手順でwgetによるダウンロードと移動を繰り返してく
ださい。
</p>


</body>
</section>
</chapter>

<chapter><title>ディスクを使わず、PXEブートを利用したインストール方法</title>

<section><title>必要なもの</title>
<body>

<p>
ディスクを持たないクライアントには、多くの3comのカードのような、ブート
の際にPXEプロトコルを使えるネットワークカードが必要です。また、PXEによ
るブートをサポートしたBIOSも必要です。
</p>

</body>
</section>
<section>
<title>サーバ上のベースセットアップ</title>
<body>

<p>
ディレクトリの作成: まず最初に、ディスクレスのシステムが保存されるディ
レクトリを作成します。それぞれのディスクレスのクライアントをホストする
ために、<path>/diskless</path>のようなディレクトリを作成してください。
これ以降、この手引きでは'eta'という名前のクライアントのセットアップ作
業をすることにします。
</p>

<pre caption="ディレクトリの作成">
# <i>mkdir /diskless</i>
# <i>mkdir /diskless/eta</i>
# <i>mkdir /diskless/eta/boot</i>
</pre>

<p>
DHCPとTFTPの設定: クライアントはDHCPを使ってブート情報を取得し、TFTP 
を使って必要なファイルすべてをダウンロードします。では、DHCPをemerge 
して必要な基本設定を行いましょう。そして、次に示す内容を
<path>/etc/dhcp/dhcpd.conf</path>に追加してください。
</p>

<note>
下の例では静的なIPアドレスと、ここではpxegrubと名付けたPXE用のブートイ
メージまでのパスをクライアントに対して割り当てています。クライアントの
イーサ−ネットカードのMACアドレスと、それぞれのファイルを保存する場所
は状況にあわせて書き換えてください。</note>

<p>
DHCPdについては、<c>emerge dhcp</c>を実行するか、他のDHCPサーバを選ん
でください。<path>/etc/conf.d/dhcp</path>では、インタフェイスが正しく
選択されていることを確認しておいてください。
</p>

<pre caption="dhcp.conf">
option option-150 code 150 = text ;
ddns-update-style none ;
host eta {
hardware ethernet 00:00:00:00:00:00;
fixed-address <i>ip.add.re.ss</i>;
option option-150 "/eta/boot/grub.lst";
filename "/eta/boot/pxegrub";
}
</pre>

<p>TFTPについては、<c>app-admin/tftp-hpa</c>をemergeし、
<path>/etc/conf.d/in.tftpd</path>に次の内容を加えてください。</p>

<pre caption="in.tftpd">
INTFTPD_PATH="/diskless"
INTFTPD_USER="nobody"
INTFTPD_OPTS="-u ${INTFTPD_USER} -l -vvvvvv -p -c -s ${INTFTPD_PATH}"
</pre>

<p>GRUBのセットアップ: 私はPXEブートにGRUBを使っています。PXEイメージ
をコンパイルするときには自力でGRUBをコンパイルする必要がありますが、こ
れはとても簡単です。まず、GRUBの最新のソースコードを入手します
(<c>emerge -f grub</c>でtarballが<path>/usr/portage/distfiles</path> 
に保存されます)。 この圧縮ファイルを<path>/diskless</path>にコピーし、
PXEが使えるようにしてmakeするだけです。バイナリができてしまえば、それ
をディスクレスなクライアントのbootディレクトリにコピーします。このとき
grub.lstという設定ファイルも編集してください。</p>

<pre caption="grubのセットアップ">
# <i>tar zxvf grub-0.92.tar.gz</i>
# <i>cd grub-0.92</i>
# <i>./configure --help</i>

<comment>
(オプションには、サポートされているネットワークインターフェイスのリス
トが表示されているはずです。お使いのクライアントのネットワークカードで
利用可能なドライバを選択してください。ここでは仮に$nicとしています。)
</comment>

# <i>./configure --enable-diskless --enable-$nic</i>
# <i>make</i>
# <i>cd stage2</i>
# <i>cp pxegrub /diskless/eta/boot/pxegrub</i>
# <i>nano -w /diskless/eta/boot/grub.lst</i>
</pre>

<pre caption="grub.lst">
default 0
timeout 30

title=Diskless Gentoo
root (nd)
kernel /eta/bzImage ip=dhcp root=/dev/nfs nfsroot=<i>ip.add.re.ss</i>:/diskless/eta

<comment># nfsrootオプションについては、IPアドレスにサーバのものを、ディ
レクトリには(そのサーバ上で)ディスクレスクライアントのファイルが置かれ
ている場所を指定します。</comment>
</pre>

<p>
NFSのセットアップ: NFSの設定はとても簡単です。唯一必要なのは、
<path>/etc/exports</path>という設定ファイルに次のような内容を付け加え
ることだけです。
</p>

<pre caption="/etc/exports">
# <i>nano -w /etc/exports</i>
# /etc/exports: NFS file systems being exported.  See exports(5).
/diskless/eta eta(rw,sync,no_root_squash)
</pre>

<p>
hostsファイルの更新: これは重要な作業です。<path>/etc/hosts</path>を必
要にあわせて編集しなければなりません。
</p>

<pre caption="/etc/hosts">
127.0.0.1 localhost

192.168.1.10 eta.example.com eta
192.168.1.20 sigma.example.com sigma
</pre>

</body>
</section>
<section><title>サーバ上にシステムを作成する</title>
<body>

<p>
ここでGentooのインストールCDを使ってサーバをリブートしたくなるかもしれ
ませんが、既にインストール済みのシステム上でGentooのインストール手引き
に従って作業する方法が分かっていれば、そのままうまく作業を続けることが
できます。Gentooのインストール手引きで解説されている、標準的なインストー
ル方法に従ってください。ただし、ファイルシステムをマウントする際には、
以下のようにする点が異なります(hdaXは/dicklessディレクトリを作成したパー
ティションです)。ファイルのすべては<path>/diskless/eta</path>ディレク
トリ以下に置かれますから、他のパーティションをマウントする必要はありま
せん。
</p>

<pre caption="ファイルシステムのマウント">
#<i> mount /dev/hda3 /mnt/gentoo</i>
</pre>

<p>
stage tarballとchroot: この例ではstage 3の圧縮ファイルを使います。
<path>/proc</path>をディスクレスなシステム用のディレクトリにマウントし、
そこにchrootしてインストール作業を続けましょう。カーネルの設定の前まで
インストール手引書に従って作業してください。
</p>

<warn>
stage tarballを展開する場所には特に注意してください。すでにインストー
ルできているものに上書きしてしまった…なんてことはしたくありませんよね。
</warn>

<pre caption="stage tarballを展開">
# <i>cd /mnt/gentoo/diskless/eta/</i>
# <i>tar -xvjpf  /mnt/cdrom/gentoo/stage3-*.tar.bz2</i>
# <i>mount -t proc /proc /mnt/gentoo/diskless/eta/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/diskless/eta/etc/resolv.conf</i>
# <i>chroot /mnt/gentoo/diskless/eta/ /bin/bash</i>
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>

<p>
カーネルの設定: <c>make menuconfig</c>を使ってカーネルを設定するときに
は、インストール手引書で推奨されている項目以外にも、次の項目を有効にす
ることを忘れないでください。
</p>

<pre caption="menuconfigのオプション">
- お使いのネットワークカードデバイスのサポート
<comment>(モジュールと*せず*、カーネルに組み込んでください！)</comment>

- "Networking options" 以下:

[*] TCP/IP networking
[*] IP: kernel level autoconfiguration
[*] IP: DHCP support
[*] IP: BOOTP support


- "File systems --&gt; Network File Systems" 以下:

&lt;*&gt; NFS file system support
[*] Provide NFSv3 client support
[*] Root file system on NFS
</pre>

<p>
先ほどの作業でのpxgrubの設定に従って、カーネルをchroot後の
<path>/</path>(<path>/boot</path>ではありません)に保存してください。次
に、ディスクレスクライアントの<path>/etc/fstab</path>を設定します。
</p>

<pre caption="/etc/fstab">
# <i>nano -w /etc/fstab</i>
/dev/cdroms/cdrom0 /mnt/cdrom iso9660 noauto,ro 0 0
proc /proc proc defaults 0 0
tmpfs /dev/shm tmpfs nodev,nosuid,noexec 0 0
</pre>


<p>
また、クライアント側でのファイルシステムのチェックを無効にする必要があります。
</p>

<pre caption="クライアント側でのファイルシステムのチェックを無効化">
# <i>touch /fastboot</i>
# <i>echo "touch /fastboot" &gt;&gt; /etc/conf.d/local.start</i>
</pre>

<p>
クライアントがしっかりと依存している<c>nfs-utils</c>をインストールします。
</p>

<pre caption="nfs-utilsのインストール">
# <i>emerge nfs-utils</i>
</pre>

<p>
ブートローダについては、すでにpxgrubというブートローダがあるので他のも
のはインストールしないでください。インストール作業が終ったらサーバをリ
ブートしましょう。DHCP、TFTPD、NFSといった、新しいクライアントをブート
させるために必要なサービスも起動してください。
</p>

<pre caption="サービスの起動">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/in.tftpd start</i>
# <i>/etc/init.d/nfs start</i>
</pre>

</body>
</section>
<section>
<title>新しいクライアントの起動</title>
<body>

<p>
新しいクライアントを正しく起動させるには、起動時に(CD-ROMやフロッピー
より先に)まずPXEが使われるようにBIOSやネットワークカードを設定する必要
があります。この方法については、お使いのハードウェアのマニュアルやメー
カのウェブサイトを調べてください。ネットワークカードはDHCPを使ってIPア
ドレスを取得し、TFTPを使ってGRUB PXEのイメージをダウンロードします。こ
れで、よい感じのGRUBの白黒のブートメニューが表示されるので、起動するカー
ネルを選択してEnterキーを押します。すべてがうまくいっていれば、カーネ
ルが起動してNFSを使ってルートファイルシステムをマウントし、ログインプ
ロンプトが表示されるはずです。楽しんでくださいね。</p>

</body>
</section>
</chapter>

<chapter>
<title>既存のLinuxディストリビューションからGentooをインストールする</title> 
<section>
<title>必要なもの</title> 
<body>

<p>
既存のLinuxディストリビューション上からGentooをインストールするには、
既存のシステムにchrootコマンドがインストールされていて、インストールし
ようと思っているGentooのインストール用tarballかISOイメージが用意されて
いる必要があります。tarball(ところで、tarballとはtar.gzかtbzに圧縮され
ているもののことです)に収録されていない機能を使いたければ、ネットワー
クに接続できるとなお良いでしょう。本稿の著者は「ホスト側の」OSとして
RedHat Linux7.3を使いましたが、これについては大して重要ではありません。
さあ、始めましょう！
</p>

</body>
</section>
<section>
<title>概要</title>
<body>

<p>
まず、既存のLinuxパーティションの容量を変更してGentoo用のパーティショ
ンを確保してマウントし、マウントしたtarballを展開し、その仮想的なシス
テムにchrootしてビルド作業を始めます。bootstrapの作業が終わり、システ
ムを起動可能にするための最終的な設定を行えば、再起動してGentooを使うま
での準備ができたことになります。
</p>
</body>
</section>

<section>
<title>Gentoo用のスペースを作る方法</title>
<body>

<p>
ルートパーティションは<path>/</path>以下にマウントされるファイルシステ
ムです。とりあえず私のシステムでmountコマンドを使ってみた結果を御覧頂
ければ、何のことかすぐに分かって頂けると思います。ディスク領域をどれだ
け使っていてどれだけリサイズすれば良いかは、df (disk free)コマンドを使
えば分かります。ルートパーティションを無理矢理リサイズしないように注意
してください！リサイズ用のツールがサポートしていれば他のどんなものでも
リサイズ可能ですが、それについては後程触れることにします。
</p>


<pre caption="ファイルシステムの情報">
# <i>mount</i>
/dev/hdb2 on / type ext3 (rw)
none on /proc type proc (rw)
none on /dev/pts type devpts (rw,gid=5,mode=620)
none on /dev/shm type tmpfs (rw,nodev,nosuid,noexec)
# <i>df -h </i>
Filesystem           Size Used Avail Use% Mounted on 
/dev/hdb2            4.0G 1.9G  2.4G  82% /
none                  38M    0   38M   0% /dev/shm 
</pre>

<p>
御覧の通り、<path>/</path>にマウントされているパーティションは2.4GBの
空き領域のある<path>/dev/hdb2</path>に割り当てられています。私の場合は、
これを400MBの空き領域を残してリサイズしようと思います。つまり、Gentoo 
用に2GBを確保する訳です。まあ、このくらい用意すれば良いんじゃないかな
と思います。いろいろインストールできることでしょう。とはいえ、ほとんど
のユーザにとっては1GBでも十分かもしれません。さあ、パーティションの確
保を始めましょう！
</p>

</body>
</section>
<section>
<title>パーティションのリサイズのためにpartedを構築する</title> 
<body>

<p>
partedは、日常様々な場面で使っているツールを開発している、GNUという歴史
のある偉大で大規模なプロジェクトが提供しているユーティリティです。ここ
で挙げるのはたった一つのツールですが、こういう場面ではとても役に立ちま
す。これはpartedと呼ばれるパーティションエディタで、
<uri>http://www.gnu.org/software/parted/</uri> から入手できます。
</p>

<note>
同じようにパーティションをリサイズできるツールは他にもありますが、著者
はPartitionMagic(tm)や同じような機能のある他のソフトウェアについてはよ
く知らないしあまり興味もないので、そういったものに関することは読者の皆
さんにお任せします。</note>

<p>
先程のページから、リサイズするファイルシステムの種類と、partedがそれに
対応しているかを探してください。もしも、残念なことに対応していなければ、
Gentooで使うためにどこかのパーティションを潰して再インストールしなくて
はいけません。ソフトウェアをダウンロードし、インストールしてください。
ここでひとつ問題があります。私達はLinuxのルートパーティションをリサイ
ズするつもりですが、そのためには<path>/</path>をリサイズするための最小
限のLinuxシステムと、事前にコンパイルされたpartedを格納したフロッピー
ディスクが必要になります。しかし、Linuxを走らせたままで対象のパーティ
ションをアンマウントできるなら、以下の作業は必要ないのでラッキーです。
ではpartedをコンパイルして、アンマウントしたリサイズ用パーティションに
対して実行します。私のシステムでは以下のようにしました。
</p>

<impo>
そのパーティションに対して行おうとしている操作をpartedがサポートしてい
るかどうか確認してください！
</impo>

<p>
mininuxのブート/ルート用のディスク(2.4カーネルで動く、フロッピー向け
Linuxディストリビューション。無料です。)を
<uri>http://mininux.free.fr/uk/</uri>から入手し、ソフトウェアパッケー
ジに付属している解説書の内容に従ってフロッピーを作成し、次の手順のため
に新しいフロッピーをドライブに挿れてください。
</p>

<note>
Linuxは「やり方は一つではない」という言葉と同義であると言えます。目的
は、partedを使って、アンマウントされたパーティションを使えるようにする
ことです。mininux以外のboot/rootディスクも使えます。この手順は必ずしも
必要ではなく、要は現在のLinuxシステムからパーティションを再割り当てす
るファイルシステムをアンマウントしてpartedを実行できれば良いのです。
</note>

<pre caption="ユーティリティ ディスクの作成">
# <i>mkfs.minix /dev/fd0</i>
480 inodes
1440 blocks
Firstdatazone=19 (19)
Zonesize=1024
Maxsize=268966912
</pre>

<p>
ではpartedをビルドすることにしましょう。まだダウンロードや展開ができて
いなければ、まずそれを終わらせて、対応するディレクトリへcdするところま
で進めてください。そして、次のコマンドでユーティリティを構築してフロッ
ピーディスクへコピーします。
</p>

<pre caption="ユーティリティ・フロッピーディスクの構築">
# <i> mkdir /floppy; mount -t minix /dev/fd0 /floppy &amp;&amp; 
export CFLAGS="-O3 -pipe -fomit-frame-pointer -static" &amp;&amp; ./configure 
&amp;&amp; make &amp;&amp; cp parted/parted /floppy &amp;&amp; umount /floppy </i>
</pre>

<p>おめでとうございます。これで再起動してパーティションをリサイズする
準備ができました。この作業は最低でもGNUのウェブサイトにあるpartedのド
キュメントをざっと読んでから始めてください。大容量のハードディスクでは
リサイズに30分程度かかることがありますが、我慢して待ちましょう。
mininuxのブートディスクをフロッピードライブに入れて再起動し、ログイン
します。ログインできたらpartedを/floppyから呼び出せるように、先程作っ
たユーティリティ・ディスクに入れ換えてmount /dev/fd0 /floppyとタイプし
てください。さあ、始めましょう。partedを起動し、パーティションをリサイ
ズします。この長ったらしい作業が終れば、Gentooをインストールして色々と
遊べると思います。そして、再起動して元のLinuxシステムに戻りましょう。
操作するドライブは、リサイズするパーティションを含んでいるドライブです。
例えば、/dev/hda3をリサイズするならドライブは/dev/hdaになります。</p>

<pre caption="mininuxにログインしたときに使うコマンド">
# <i>mount /dev/fd0 /floppy </i>
# <i>cd /floppy; ./parted [操作するドライブ]</i>
(parted) <i> print </i>
Disk geometry for /dev/hdb: 0.000-9787.148 megabytes
Disk label type: msdos
Minor    Start       End     Type      Filesystem  Flags
1          0.031   2953.125  primary   ntfs        
3       2953.125   3133.265  primary   linux-swap  
2       3133.266   5633.085  primary   ext3        
4       5633.086   9787.148  extended              
5       5633.117   6633.210  logical               
6       6633.242   9787.148  logical   ext3        
(parted) <i> help resize </i>
  resize MINOR START END        resize filesystem on partition MINOR

        MINOR is the partition number used by Linux.  On msdos disk labels, the
        primary partitions number from 1-4, and logical partitions are 5
        onwards.
        START and END are in megabytes
(parted) <i> resize 2 3133.266 4000.000 </i>
</pre>

<impo>
我慢してお待ちください！コンピュータは働いています！マシンのケースにつ
いているLEDを見れば本当に働いているのが分かるはずです。この作業には2分
から30分程度はかかると思います。
</impo>

<p>
リサイズが終わったら、先程説明したようにリブートして元のLinuxシステム
に戻ってください。そして<uri link="/doc/en/handbook/handbook-x86.xml?part=1&amp;chap=4">The Gentoo
Handbook: Preparing the Disks</uri>(訳注: 日本語版は<uri link="/doc/ja/handbook/handbook-x86.xml?part=1&amp;chap=4">Gentoo
Linux Documentation -- ディスクの準備</uri>です。)を開き、その内容に従っ
て作業を進めてください。chrootする際には、環境を更新するために、以下の
コマンドを実行してください。
</p>

<pre caption="chroot時の環境更新">
# <i>env -i HOME=$HOME TERM=$TERM chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update</i>
# <i>source /etc/profile</i>
</pre>

<p>
楽しんでくださいね！
</p>

</body>
</section>
</chapter>

</guide>
