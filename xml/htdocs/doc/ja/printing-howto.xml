<?xml version='1.0' encoding="UTF-8"?> 
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ja/printing-howto.xml,v 1.11 2004/12/21 15:19:00 nakano Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/ja/printing-howto.xml"> 

<title>Gentoo 印刷環境構築ガイド</title> 

<author title="Author"><!-- zhen@gentoo.org -->
  John P. Davis
</author>
<author title="Editor">
  <mail link="wleggette@gate.net">Wesley Leggette</mail>
</author>
<author title="Editor">
  <mail link="carl@gentoo.org">Carl Anderson</mail>
</author>
<author title="Editor">
  <mail link="lanius@gentoo.org">Heinrich Wendel</mail>
</author>
<author title="Editor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Copyeditor">
  <mail link="phil@thenexusproject.org">Phil Bordelon</mail>
</author>
<author title="翻訳">
  <mail link="pocali77@hotmail.com">hibou</mail>
</author>
<author title="翻訳">
  <mail link="solidsneak@hyper.cx">小林弘樹</mail>
</author>

<abstract>
Gentoo Linuxの包括的な印刷環境構築ガイドです。
このドキュメントはlocal,network両方の印刷方式をカバーしています。
</abstract> 

<license/>

<version>1.20</version>
<date>October 25, 2004</date>

<!-- Original revision: 1.45 -->

<chapter> 
<title>CUPSとfoomaticのインストール</title> 
<section>
<body> 

<p>
CUPS (the Common Unix Printing System) やfoomaticなどの素晴らしいプログラムのおかげで、Gentoo Linuxで印刷環境を構築することは比較的危険の伴わない作業になっています。
現在、これらのプログラムは共にportage treeに取り込まれていて、エンドユーザーの方にとっても、設定することは非常に簡単です。
</p> 

<p>
cupsは"cross-desktop"です。
すなわち、このドキュメントに従うことでGNOMEやKDEの元でプリントすることができます。
KDEのプリンタ設定という別の選択肢もありますが、CUPSの方が設定が簡単であり、最も普及していると思います。
</p>

<p>
CUPSをemergeする前に<path>/etc/make.conf</path>のUSE変数にCUPSを加えるのはいい考えです。
</p>

<pre caption = "/etc/make.confの編集">
<comment>既存のUSE変数のリストにcups、foomaticdb、ppds、usb (USB接続のプリンタを使っている場合)を追加してください。</comment>
USE="cups foomaticdb ppds usb other_var1 other_var2"
</pre>

<p>
もっと詳細なUSE変数についての情報は、Gentooハンドブックの<uri link="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=2&amp;chap=2">USE flags</uri><uri link="http://www.gentoo.org/doc/ja/handbook/handbook-x86.xml?part=2&amp;chap=2">(日本語訳)</uri>の章を参照してください。
</p>

<pre caption = "必要なパッケージのemerge">
# <i>emerge cups</i>
# <i>emerge foomatic </i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>カーネルモジュールの設定</title> 
<section>
<title>概略</title>
<body>

<p>
では必要なパッケージがインストールされたので、次はプリンタ自身のインストールになります。
</p>

<p>
どのようなプリンタの接続タイプを使うかによりますが、パラレルポート接続のプリンタ、もしくはUSB接続のプリンタをカーネルで有効にする必要があるでしょう。
</p>

<note>
このセクションはローカルな印刷のみを扱っております。
もしsambaを介して印刷を行いたいのであれば、このセクションは飛ばしてください。
</note>

<note>
カーネルの再構築の方法が分からない場合は、<uri link="http://www.tldp.org/HOWTO/Kernel-HOWTO.html">Kernel Howto</uri>で具体的な手順を知ることができるでしょう(現在のところ査読のためにダウンしています)。
カーネルを再構築したりコンピューターを再起動させることなく、新しいモジュールをコンパイルし、インストールする方法を捜すようにしてください。
そうすることで時間の節約ができます。
</note>

</body>
</section>
<section>
<title>USBモジュール</title>
<body>

<p>
USBプリンタのサポートを有効にするためには、<c>USB support</c>へ行き、<c>Support for USB</c>と<c>USB Printer support</c>を有効にしてください。
それら両方とも有効にすることで、モジュールディレクトリにusbcore.oとprinter.oがインストールされます。
コンピューターを再起動させる必要がないので、モジュールを使用することをお勧めします。
2.6カーネルのユーザーは<c>Device Drivers</c>以下でこれらのオプションを見付けられるでしょう。
</p>

<p>
カーネルの再構築が済んだ後、システムを再起動させたなら、次は必要なモジュールの読み込みになります。
</p>

<pre caption = "USBモジュールの読み込み">
# <i>modprobe usbcore</i> 

<comment>(2.4カーネルユーザ用)</comment>
# <i>modprobe printer</i>
<comment>(2.6カーネルユーザ用)</comment>
# <i>modprobe usblp</i>
</pre> 

<p>
モジュールの読み込みに成功したらプリンタを接続してみます。
そして<c>dmesg</c>を確認して、プリンタが認識されていることを確認してください。
</p> 

<pre caption = "カーネルメッセージのチェック">
# <i>dmesg | tail</i>
</pre> 

<p>
このようなメッセージを見られるはずです。
</p>

<pre caption = "dmesgの出力">
hub.c: USB new device connect on bus2/2, assigned device number 2 
printer.c: usblp0: USB bidirectional printer dev 2 if 0 alt 1 proto 2 vid 0x03F0 pid 0x1104
</pre>

</body>
</section> 
<section>
<title>パラレルポートモジュール</title>
<body>

<p>
パラレルポートのサポートを有効にするには、<c>Parallel port support</c>へ行き、<c>Parallel port support</c>と<c>PC-style hardware</c>を有効にしてください。
また、使用しているプリンタにもよりますが、<c>Multi-IO cards (parallel and serial)</c>、<c>Support for foreign hardware</c>、そして<c>IEEE 1284 transfer mode</c>も有効にする必要があります。
次に<c>Character devices</c>へ行き、<c>Parallel Printer Support</c>を有効にしてください。
2.6カーネルのユーザは<c>Device Drivers</c>以下にあります。
</p>

<p>
カーネルのビルドが済んだなら、プリンタを接続し、コンピューターを再起動するようにしてください。
次に、必要なモジュールを読み込みましょう。
</p>

<pre caption = "パラレルポートモジュールの読み込み">
# <i>modprobe lp</i> <comment>(2.6カーネルのユーザーのみ)</comment>
# <i>modprobe parport</i> 
# <i>modprobe parport_pc</i>
</pre> 

<p>
モジュールの読み込みに成功したら、<path>/var/log/messages</path>を確認してプリンタが認識されていることを確認してください。
</p> 

<note>
sysklogd以外のシステムロガーを使用している場合はカーネルのログファイルが違ってくるでしょう。
</note>

<pre caption = "カーネルメッセージの確認">
# <i>tail /var/log/messages</i>
</pre> 

<p>
このようなメッセージを見られるはずです。
</p>

<pre caption = "/var/log/messagesの出力">
lp0: using parport0 (polling).
</pre>

</body>
</section>
<section>
<title>接続テスト</title>
<body>

<p>
CUPSを使用したプリンタの設定をする前に、シンプルで基本的なコマンドを使ってプリンタのテストをすることができます。
</p>

<note>
ある(特にHPの720/820/1000シリーズのような<uri link="http://pnm2ppa.sourceforge.net">PPAを基礎とした</uri>)プリンタは、ASCII-feedを受け付けません。
この様なプリンタを使っているなら、<e>PPAを基礎とした</e>プリンタを所有していることになり、たとえプリンタが動作してもここで説明するテストは失敗するでしょう。
</note> 

<note>
いくらかのプリンタ(例えばいくらかのHP LaserJets)は印刷を開始するためにファイルの最後に^L(Control-L)が必要です。
^Lが無いとcatは成功しますが、プリンタはデータを取り込むだけで何もしません。
</note>

<pre caption = "catを使ったプリンタのテスト">
# <i>touch test.txt</i>
# <i>echo "Hello World" > test.txt</i>
# <i>cat test.txt > /dev/usb/lp0 </i>

<comment> パラレルポート接続のプリンタでは、代わりに次のようにします</comment>
# <i>cat test.txt > /dev/lp0 </i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>特別なプリンタドライバ</title> 
<section>
<body> 

<p>
PPDファイルを生成するfoomaticを使用する前に、プリンタのためのサードパーティー製のドライバを捜し出す必要があるかもしれません。
例えば、エプソン社はオープンソースなOSのための<uri link="http://www.epkowa.co.jp/english/linux_e/linux.html">いくつかのプリンタドライバ</uri>を提供しています。
しかしながらエプソン社に限らず、これら多くの特別なドライバはオープンソースではありません。
</p>

<p>
gimp-print、omni、hpijs、pnm2ppaといったプリンタドライバはPortageのebuildで入手することができます。
</p>

<p>
HP社のInkjetsに加え、多くのプリンタでは一般的なLinuxのプリンタドライバを使用することができます。
特殊なプリンタの情報を得るには<uri link="http://www.linuxprinting.org/printer_list.cgi">linuxprinting.org printer support database</uri>に行ってください。
ダウンロードするドライバに付属しているインストレーションやライセンス情報のためのドキュメントを読むようにしてください。
</p> 

<p>
HP社のインクジェットプリンタを使用しているなら、<c>hpijs</c>プリンタドライバをインストールする必要があります。
このドライバはHP社のプリンタを動かすために必要な全てのPostscriptの解釈、処理をします。
<c>hpijs</c>ドライバはHP社のインクジェットプリンタ向けですが、便利なことにPortageを通して入手することができます。
HP社からの<c>hpijs</c>プリンタドライバ向のドキュメントは<path>/usr/share/doc/hpijs-&lt;version&gt;</path>にあります。
それを読むことを筆者は<e>強く</e>推奨します。 
</p>

<p>
PPA-basedプリンタを使っているなら、<c>pnm2ppa</c>をemergeする必要があります。
</p>

<pre caption="hpijsのemerge">
# <i>emerge hpijs</i>
</pre>

<note>
HP社のレーザージェットプリンタを使用しているなら、すでに "GNOME printing system" によってサポートが得られています。
HP社のインクジェットプリンタを使用していないのなら、この特殊なプリンタドライバをインストールする必要はありません。
</note>

</body>
</section>
</chapter>

<chapter>
<title>PPDファイルの設定</title>
<section>
<body>

<p>
さぁ、プリンタとCUPSの設定をしましょう。
プリンタがPostscriptを正確に解釈するためにCUPSはPPD(Printer Postscript Definition)ファイルを必要とします。
PPDを生成する一番簡単な方法はfoomaticを介すことです。
</p>

<note>
他に<uri link="http://www.linuxprinting.org">LinuxPrinting.orgg</uri>からPPDファイルをダウンロードし、それを<path>/usr/share/cups/model</path>に置く、という方法があります。
この方法をとった場合、このセクションの残りを飛ばし、<uri link="#doc_chap5">CUPSの設定</uri>へ進むことができます。
</note>

<p>
下記のコマンドをうまく働かせるために、プリンタのID(モデル)、デバイス名、ドライバの情報(前述の特別なプリンタドライバをインストールする必要があるのならば、それはhpijsになりえます) の三つの情報が必要となります。
プリンタのID(モデル)やドライバはfoomaticのデータベースの中から<c>grep</c>によって捜し出すことができ、プリンタのデバイス名とはプリンタの接続先です(<path>file:/dev/lp0</path>や<path>file:/dev/usb/lp0</path>であり、sambaを介して印刷するなら<path>smb://user:password@server/share</path>となります)。
</p>

<p>
<c>foomatic-configure</c>を使う前に<c>cupsd</c>を立ち上げることを忘れないでください。
</p>

<pre caption = "cupsdの起動">
# <i>/etc/init.d/cupsd start</i>
</pre>

<pre caption = "foomaticの一般的な使い方">
<comment>($printer_modelにプリンタモデルを、$printer_IDにプリンタのIDを入力してください)</comment>
<comment>(最後のfoomatic-configureコマンドを記述するために最初に２つのgrepを使います)</comment>
# <i>grep $printer_model /usr/share/foomatic/db/source/printer/* </i>
# <i>grep $printer_ID /usr/share/foomatic/db/source/driver/* </i>
# <i>foomatic-configure -s cups -p $printer_model_number -c file:$print_device_path -n queue name -d driver </i>
</pre>

<p>
ドライバがgrepで見つからなかった場合は、<uri link="http://www.linuxprinting.org">LinuxPrinting.org</uri>であなたのプリンタを検索し、どのドライバで動作することが知られているかをチェックしてください。
そしてそれらの中から一つを手に入れ、インストールしてください。
</p>

<pre caption="PPDドライバのインストール">
<comment>(複数のプリンタを持っているなら名前を分けてください。"default"の様な覚えやすいキュー名で十分です)</comment>
# <i>foomatic-configure -s cups -p &lt;printer model&gt; -c file:&lt;printer device&gt; -n &lt;queue name&gt; -d &lt;driver&gt;</i>
</pre>

<p>
では、ここで具体的な例をあげてみましょう。
下記のコードはEpson Stylus Color 980を所有していると仮定した場合のものです。
もちろんあなたが実際に所有しているプリンタモデルと置き換える必要があります。
</p>

<pre caption="Stylus Color 980に対するfoomaticの特殊な使い方">
# <i>grep "Stylus Color 980" /usr/share/foomatic/db/source/printer/* </i>
<comment> このような一行を見付けられると思います</comment>
/usr/share/foomatic/db/source/printer/Epson-Stylus_Color_980.xml:   &lt;model>Stylus Color 980&lt;/model>
<comment> Epson-Stylus_Color_980がプリンタID(モデル)です。 </comment>

# <i>grep Epson-Stylus_Color_980 /usr/share/foomatic/db/source/driver/* </i>
/usr/share/foomatic/db/source/driver/gimp-print-ijs.xml:  &lt;printer>&lt;id>printer/Epson-Stylus_Color_980&lt;/id>&lt;/printer>
<comment> ここでプリンタドライバがgimp-print-ijsであることが分かります。</comment>

# <i>foomatic-configure -s cups -p Epson-Stylus_Color_980 -c file:/dev/lp0 -n Epson -d gimp-print-ijs </i>
</pre>

</body> 
</section>
</chapter> 

<chapter> 
<title>CUPSの設定</title> 
<section>
<body> 

<p>
プリンタ自身の設定が済んだなら、次はプリンタのキューを操作するために CUPS の設定が必要です。
CUPSはプリンターサーバーのポート番号631を通してアクセスすることができます。
</p>

<p>
CUPSはデーモンのための組み込みの設定ファイルを持っており、最低でもURI形式なデバイス名を許可するように修正するべきです。
<path>/etc/cups/cupsd.conf</path>をお気に入りのエディタで開いて、<c>FileDevice</c>を<c>Yes</c>に設定します。
</p>

<pre caption="FileDeviceをYesに変更">
# <i>nano -w /etc/cups/cupsd.conf</i>
<comment>(FileDeviceをYesに変更します)</comment>
</pre>

<p>
新しいプリンタサーバを使うクライアントを設定したいなら、<path>/etc/cupsd/client.conf</path>をクライアントマシンで探して、<c>ServerName</c>変数がプリンタサーバのネットワーク名を指すようにしてください。
</p>

<pre caption = "デフォルトのランレベルへのCUPSの追加、及びCUPSの再起動">
# <i>rc-update add cupsd default</i>
# <i>/etc/init.d/cupsd restart</i>
</pre>

<p>
CUPSデーモンが走っているはずなので、好きなブラウザを開いて<uri>http://localhost:631</uri>をクリックし、<c>Manage Printer</c>をクリックしてください。
ここで新しくインストールされたプリンタを見付けることができるでしょう。
設定をするか、テストページを印刷するかしてください。
デフォルトのページサイズを利用する物(例えばLetterの代わりにA4)に設定するようにしてください。
</p> 

<note>
もし何らかの理由でプリンタが動かない場合は、CUPSのログが保存されているディレクトリへ行き、<c>error_log</c>に目を通してください。
</note>

</body> 
</section>
</chapter>

<chapter>
<title>CUPSを使用して印刷するためのプログラムの設定</title>
<section>
<title>一般的なプログラム</title>
<body>

<p>
今日、多くのプログラムはネイティブでCUPSのインターフェースを持っているので、何もせずにプログラムでの印刷をただ試すだけです。
</p>

</body>
</section>
<section>
<title>GIMP</title>
<body>

<p>
Gimpを使ってドキュメントを印刷できるようにするために、<c>gimp</c>パッケージを"gimpprint" USE変数を有効にして(再)インストールします。
これは<c>gimp-print</c>がインストールされていないならインストールします。
</p>

<pre caption="gimpを印刷能力付きでemerge">
<comment>(USE="gimpprint"を有効にするようにしてください)</comment>
# <i>emerge gimp</i>
</pre>

<p>
GIMPを立ち上げて既存のファイルを開くか、新規にファイルを作成してください。
<c>File</c>メニューを探しさえすればよいので、これはそんなに問題ではないはずです。
画像上で右クリックして<c>File/Print</c>へ行ってください。
プリントするためのダイアログが現れると思いますが、そこで新しいプリンタをクリックしてください。
あなたのプリンタがまだ一覧にないのならプリンタの名前を入力して、そのプリンタを選択してください。
さあ、今GIMPからプリントするための設定をしましょう。
設定を巧みに使って楽しんでください。
</p>

</body>
</section>
</chapter>

<chapter>
<title>LinuxをWindowsの共用プリントサーバーとして使う</title>
<section>
<body>

<p>
Linuxは素晴らしいプリントサーバーになります。
そしてまた、素晴らしいどのようなサーバーにもなります。
まず最初にしなくてはならないことは<path>/etc/samba/smb.conf</path>を環境に合わせて編集することです。
この<path>smb.conf</path>ファイルはLinuxマシンをWindowsマシンのためのWindows NTサーバーと同じようにするためのすべての設定を含んでいます。
下記はとても実用的な<path>smb.conf</path>の例です。
あなたのネットワーク環境に合わせて、必要に応じて編集してください。
</p>

<pre caption = "smb.confのサンプル">
[global]

workgroup = YOUR_WORKGROUP
server string = Gentoo Linux Server
encrypt passwords = True
security = user
smb passwd file = /etc/samba/private/smbpasswd
log file = /var/log/samba/log.%m
socket options = IPTOS_LOWDELAY TCP_NODELAY
domain master = Yes
local master = Yes
preferred master = Yes
os level = 65
dns proxy = No
name resolve order = lmhosts host bcast
bind interfaces only = True
interfaces = eth0
hosts deny = ALL
hosts allow = 192.168.1.4 127.0.0.1 (list of allow hosts here) 
debug level = 1
create mask = 0644
directory mask = 0755
level2 oplocks = True
read raw = no
write cache size = 262144

[printers]
comment = All Printer
path = /var/spool/samba
browseable = no
</pre>

<p>
ほとんどのWindowsのドライバはPCLドライバです。
Windowsから送られるジョブはCUPSによって<c>application/octet-stream</c>へと変換され、rawファイルとして印刷されます。
その為もしCUPSを使うなら、<path>/etc/cups/mime.types</path>を開いて以下の行のコメントを解除します。
</p>

<pre caption="/etc/cups/mime.typesの行をコメント解除">
application/octet-stream
</pre>

<p>
<path>/etc/cups/mime.convs</path>の以下の行でも同じようにしてください。
</p>

<pre caption="/etc/cups/mime.convsの行をコメント解除">
application/octet-stream application/vnd.cups-raw   0 -
</pre>

<p>
SAMBAの設定はこれで済みました。
sambaを再起動させてWindowマシンへ行き、ネットワークプリンタをインストールしてください。
ね、簡単でしょ？
</p>

</body>
</section>
</chapter>
</guide>
