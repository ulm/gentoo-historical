<?xml version='1.0' encoding="UTF-8"?> 
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ja/printing-howto.xml,v 1.10 2004/02/28 13:32:56 nakano Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link = "/doc/ja/printing-howto.xml"> 

<title>Gentoo プリンティング ガイド</title> 

<author title="Author"><!-- zhen@gentoo.org -->
  John P. Davis
</author>
<author title="Editor">
  <mail link="wleggette@gate.net">Wesley Leggette</mail>
</author>
<author title="Editor">
  <mail link="carl@gentoo.org">Carl Anderson</mail>
</author>
<author title="Editor">
  <mail link="lanius@gentoo.org">Heinrich Wendel</mail>
</author>
<author title="Editor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Copyeditor">
  <mail link="sunflare@gentoo.org">Phil Bordelon</mail>
</author> 
<author title="翻訳">
  <mail link="pocali77@hotmail.com">hibou</mail>
</author>

<abstract>
Gentoo Linuxの包括的なプリンティングガイドです。 
このドキュメントはlocal,network両方の印刷方式をカバーしています。
</abstract> 

<license/>

<version>1.7</version> 
<date>January 20, 2004</date> 
<!-- Original revision: 1.26-->
<chapter> 
<title>Installing CUPS and foomatic</title> 
<section>
<body> 

<p>
CUPS (the Common Unix Printing System) やfoomaticなどの素晴らしいプログラムのおかげで、
Gentoo Linuxでプリンティングシステムを構築することは比較的危険の伴わない作業になっています。
現在、これらのプログラムは共にportage treeに取り込まれていて、
エンドユーザーの方にとっても、設定することは非常に簡単です。
</p> 

<p>
cupsは "cross-desktop" です。
すなわち、このドキュメントに従うことでGNOMEやKDEの元でプリントすることができます。
KDEのプリンタ設定という別の選択肢もありますが、CUPSの方が設定が簡単であり、
最も普及していると思います。
</p>

<p>
CUPSをemergeする前に <path>/etc/make.conf</path>の USE変数にCUPSを加えるのはいい考えです。
</p>

<pre caption = "/etc/make.conf の編集">
<comment>既存のUSE変数のリストにcups、foomaticdb、ppds、usb (USB接続のプリンタを使っている場合)を追加してください。 </comment>
USE="cups foomaticdb ppds usb other_var1 other_var2"
</pre>

<p>
もっと詳細なUSE変数 についての情報は、以下を参照してください。 
<uri link = "http://www.gentoo.org/doc/en/use-howto.xml">USE HOWTO</uri>.
</p>

<pre caption = "必要なパッケージのemerge">
# <i>emerge cups</i>
# <i>emerge foomatic </i>
</pre>

</body>
</section>
</chapter>

<chapter>
 <title>カーネルモジュールの設定</title> 
<section>
<title>概略</title>
<body>

<p>
必要なパッケージがインストールされた今、次はプリンタ自身のインストールになります。
</p>

<p>
どのようなプリンタの接続タイプを使うかによりますが、パラレルポート接続のプリンタ、
もしくはUSB接続のプリンタをカーネルで有効にする必要があるでしょう。
</p>

<note>
このセクションはローカルな印刷のみを扱っております。
もしsambaを介して印刷を行いたいのであれば、このセクションは飛ばしてください。
</note>

<note>
カーネルの再構築の方法が分からない場合は、 <uri 
link="http://www.tldp.org/HOWTO/Kernel-HOWTO.html">Kernel Howto</uri> で具体的な手順を知ることができるでしょう。(現在のところ査読のために
ダウンしています。). カーネルを再構築したりコンピューターを再起動させることなく、新しいモジュールをコンパイルし、
インストールする方法を捜すようにしてください。そうすることで時間の節約ができます。
</note>

</body>
</section>
<section>
<title>USB モジュール</title>
<body>

<p>
USBプリンタのサポートを有効にするためには、<c>USB support</c> へ行き、<c>Support 
for USB</c> と <c>USB Printer support</c> を有効にしてください。
それら両方とも有効にすることで、モジュールディレクトリにusbcore.oとprinter.oがインストールされます。
コンピューターを再起動させる必要がないので、モジュールを使用することをお勧めします。
2.6カーネルのユーザーは<c>Device Drivers</c>以下でこれらのオプションを見付けられるでしょう。
</p>

<p>
カーネルの再構築が済んだ後、システムを再起動させたなら、
次は必要なモジュールの読み込みになります:
</p>

<pre caption = "USBモジュールの読み込み">
# <i>modprobe usbcore</i> 

<comment>(For 2.4 kernel users:)</comment>
# <i>modprobe printer</i>
<comment>(For 2.6 kernel users:)</comment>
# <i>modprobe usblp</i>
</pre> 

<p>
モジュールの読み込みに成功したらプリンタを接続してみます。
そして <path>/var/log/messages</path> をチェックして、
プリンタが認識されていることを確認してください。
</p> 

<note>
sysklogd以外のシステムロガーを使用している場合はカーネルのログファイルが違ってくるでしょう。
</note>

<pre caption = "カーネルメッセージのチェック">
# <i>tail /var/log/messages</i>
</pre> 

<p>
このようなメッセージを見られるはずです:
</p>

<pre caption = "/var/log/messages の出力">
hub.c: USB new device connect on bus2/2, assigned device number 2 
printer.c: usblp0: USB bidirectional printer dev 2 if 0 alt 1 proto 2 vid 0x03F0 pid 0x1104
</pre>

</body>
</section> 
<section>
<title>パラレルポートモジュール</title>
<body>

<p>
パラレルポートのサポートを有効にするには、<c>Parallel port support</c>へ行き、
<c>Parallel port support</c>と<c>PC-style hardware</c>を有効にしてください。
また、使用しているプリンタにもよりますが、<c>Multi-IO cards (parallel and serial)</c>、<c>Support for foreign hardware</c>、
そして<c>IEEE 1284 transfer mode</c>も有効にする必要があります。
次に<c>Character devices</c>へ行き、<c>Parallel Printer Support</c>を有効にしてください。
</p>

<p>
カーネルのビルドが済んだなら、プリンタを接続し、コンピューターを再起動するようにしてください。
次に、必要なモジュールを読み込みましょう。
</p>

<pre caption = "パラレルポートモジュールの読み込み">
# <i>modprobe lp</i> <comment>(2.6カーネルのユーザーのみ)</comment>
# <i>modprobe parport</i> 
# <i>modprobe parport_pc</i>
</pre> 

<p>モジュールの読み込みに成功したら
<path>/var/log/messages</path> をチェックしてプリンタが認識されていることを確認してください。
</p> 

<note>
sysklogd以外のシステムロガーを使用している場合はカーネルのログファイルが違ってくるでしょう。
</note>

<pre caption = "カーネルメッセージのチェック">
# <i>tail /var/log/messages</i>
</pre> 

<p>
このようなメッセージを見られるはずです:
</p>

<pre caption = "/var/log/messages の出力">
lp0: using parport0 (polling).
</pre>

</body>
</section>
<section>
<title>接続テスト</title>
<body>

<p>
CUPSを使用したプリンタの設定の前に、
シンプルで基本的なコマンドを使ってプリンタのテストをすることができます。
</p> 

<pre caption = "catを使ったプリンタのテスト">
# <i>touch test.txt</i>
# <i>echo "Hello World" > test.txt</i>
# <i>cat test.txt > /dev/usb/lp0 </i>

<comment> パラレルポート接続のプリンタでは、代わりに次のようにします: </comment>
# <i>cat test.txt > /dev/lp0 </i>
</pre>

<note>
一部のプリンタ (HP社のLaserJetsなど) は印刷を制御するために、
ファイルの終りに ^L (Control-L) が必要となります。 
^L なしでもcatは成功するのですが、プリンタはデータを吸収し、
じっとしているだけで何もしません。
</note>

</body>
</section>
</chapter>			

<chapter>
 <title>特別なプリンタドライバ</title> 
<section>
<body> 

<p>
PPDファイルを生成するfoomaticを使用する前に、プリンタのためのサードパーティー製のドライバを捜し出す必要があるかもしれません。
例えば、エプソン社はオープンソースなOSのための <uri 
link="http://www.epkowa.co.jp/english/linux_e/linux.html">いくつかのプリンタドライバ</uri>を提供しています。
しかしながらエプソン社に限らず、これら多くの特別なドライバはオープンソースではありません。
</p>

<p>
次にあげるプリンタドライバはportageのebuildで入手することができます。: gimp-print,
omni, hpijs, pnm2ppa.
</p>

<p>
HP社のInkjetsに加え、多くのプリンタでは一般的なLinuxのプリンタドライバを使用することができます。
特殊なプリンタの情報を得るには<uri 
link="http://www.linuxprinting.org/printer_list.cgi">linuxprinting.org printer 
support database</uri>に行ってください。
ダウンロードするドライバに付属している
インストレーションやライセンス情報のためのドキュメントを読むようにしてください。
</p> 

<impo>
HP社のインクジェットプリンタを使用しているなら、
<c>hpijs</c>プリンタドライバをインストールする必要があります。
このドライバは HP社のプリンタを動かすために必要な全ての Postscriptの解釈、処理をします。
<c>hpijs</c>ドライバはHP社のインクジェットプリンタ向けですが、
便利なことにPortageを通して入手することができます。
HP社からの<c>hpijs</c>プリンタドライバ向のドキュメントは<path>/usr/share/doc/hpijs-&lt;version&gt;</path>にあります。
それを読むことを筆者(John P. Davisさん)は<i>強く</i>推奨します。
</impo>

<pre caption = "hpijsプリンタドライバのemerge">
# <i>emerge hpijs</i>
</pre> 

<note>
HP社のレーザージェットプリンタを使用しているなら、
すでに "GNOME printing system" によってサポートが得られています。
HP社のインクジェットプリンタを使用していないのなら、
この特殊なプリンタドライバをインストールする必要はありません。
</note>

</body>
</section>
</chapter>

<chapter>
<title>PPDファイルの設定</title>
<section>
<body>

<p>
さぁ、プリンタとCUPSの設定をしましょう。
プリンタがPostscriptを正確に解釈するためにCUPSはPPD (Printer Postscript Definition) ファイルを必要とします。
PPDを生成する一番簡単な方法はfoomaticを介すことです。
</p>

<note>
他に<uri link="http://www.linuxprinting.org">LinuxPrinting.org</uri> からPPDファイルをダウンロードし、
それを<path>/usr/share/cups/model</path>に置く、という方法があります。
この方法をとった場合、このセクションの残りを飛ばし、<uri link="#doc_chap5">CUPS
Configuration</uri>へ進むことができます。
</note>

<p>
下記のコマンドをうまく働かせるために三つの情報が必要となります;プリンタのID(モデル)、
デバイス名、ドライバの情報(前述の特別なプリンタドライバをインストールする必要があるのならば、
それはhpijsになりえます)
プリンタのID(モデル)やドライバはfoomaticのデータベースの中から<c>grep</c>によって捜し出すことができ、
プリンタのデバイス名とはプリンタの接続先です(<path>/dev/lp0</path>や<path>/dev/usb/lp0</path>であり、
sambaを介して印刷するなら<path>smb://user:password@server/share</path>となります)。
</p>

<p>
<c>foomatic-configure</c>を使う前に<i>cupsd</i>を立ち上げることを忘れないでください。
</p>

<pre caption = "cupsdの開始">
# <i>/etc/init.d/cupsd start</i>
</pre>

<pre caption = "foomaticの一般的な使い方">
# <i>grep $printer_model /usr/share/foomatic/db/source/printer/* </i>
# <i>grep $printer_ID /usr/share/foomatic/db/source/driver/* </i>
# <i>foomatic-configure -s cups -p $printer_model_number -c $print_device_path -n queue name -d driver </i>
</pre>

<p>
ドライバがgrepで見つからなかった場合は、
<uri link="http://www.linuxprinting.org">LinuxPrinting.org</uri>であなたのプリンタを検索し、
どのドライバで動作することが知られているかをチェックしてください。
そしてそれらの中から一つを手に入れ、インストールしてください:
</p>

<pre caption="PPDドライバのインストール">
# <i>foomatic-configure -s cups -p &lt;printer model&gt; -c &lt;printer device&gt; -n &lt;queue name&gt; -d &lt;driver&gt;</i>
</pre>

<p>
今ここで具体的な例をあげます。下記のコードはEpson Stylus Color 980を所有していると仮定した場合のものです。
もちろんあなたが実際に所有しているプリンタモデルと置き換える必要があります。
</p>

<pre caption="Stylus Color 980に対するfoomaticの特殊な使い方">
# <i>grep Stylus Color 980 /usr/share/foomatic/db/source/printer/* </i>
<comment> このような一行を見付けられると思います: </comment>
/usr/share/foomatic/db/source/printer/Epson-Stylus_Color_980.xml:   &lt;model>Stylus Color 980&lt;/model>
<comment> Epson-Stylus_Color_980がプリンタID(モデル)です。</comment>

# <i>grep Epson-Stylus_Color_980 /usr/share/foomatic/db/source/driver/* </i>
/usr/share/foomatic/db/source/driver/gimp-print-ijs.xml:  &lt;printer>&lt;id>printer/Epson-Stylus_Color_980&lt;/id>&lt;/printer>
<comment>ここでプリンタドライバがgimp-print-ijsであることが分かります。</comment>

# <i>foomatic-configure -s cups -p Epson-Stylus_Color_980 -c file:/dev/lp0 -n Epson -d gimp-print-ijs </i>
</pre>

<impo>
もし問題があれば、より詳細な情報を得るためにfoomaticのドキュメント
<uri link="http://www.linuxprinting.org/foomatic/USAGE">ここ</uri>やthe <uri link="http://www.linuxprinting.org">linuxprinting.org</uri>を参照してください。
</impo>

</body> 
</section>
</chapter> 

<chapter> 
<title>CUPSの設定</title> 
<section>
<body> 

<p>
プリンタ自身の設定が済んだなら、次はプリンタのキューを操作するために CUPS の設定が必要です。
CUPSはプリンターサーバーのポート番号631を通してアクセスすることができます。
</p>

<impo>
CUPS はデーモンのためのビルドインの設定ファイルを持っていますが、
それを修正したほうが良いでしょう(しなければならない訳ではありません)。 
それを見たくなったら <path>/etc/cups/cupsd.conf</path> を見てください。
</impo>

<pre caption = "デフォルトのランレベルへのCUPSの追加、及びCUPSの開始">
# <i>rc-update add cupsd default</i>
# <i>/etc/init.d/cupsd start</i>
</pre>

<p>
今CUPSデーモンが走っているはずなので、好きなブラウザを開いて <uri link="http://127.0.0.1:631">ここ</uri> をクリックし、
<c>Manage Printer</c>をクリックしてください。
ここで新しくインストールされたプリンタを見付けることができるでしょう。
設定をするか、テストページを印刷するかしてください。
</p> 

<note>
もし何らかの理由でプリンタが動かない場合はCUPSのログが保存されているディレクトリへ行き、
<c>error_log</c>に目を通してください。
</note>

</body> 
</section>
</chapter>

<chapter>
<title>CUPSを使用して印刷するためのプログラムの設定</title>
<section>
<title>一般的なプログラム</title>
<body>

<p>
今日、多くのプログラムはネイティブでCUPSのインターフェースを持っているので、
何もせずにプログラムでの印刷をただ試すだけです。
</p>

</body>
</section>
<section>
<title>GIMP</title>
<body>

<p>
まず始めにGimpのCUPS rinting extentionsをemergeしましょう。
</p>

<pre caption="gimp-printのemerge">
# <i>emerge gimp-print </i>
</pre>

<p>
GIMPを立ち上げて既存のファイルを開くか、新規にファイルを作成してください。
<i>File</i>メニューを探しさえすればよいので、これはそんなに問題じゃないですね。
画像上で右クリックして <i>File/Print</i> へ行ってください。
プリントするためのダイアログが現れると思いますが、そこで新しいプリンタをクリックしてください。 
あなたのプリンタがまだ一覧にないのならプリンタの名前を入力して、そのプリンタを選択してください。 
さあ、今GIMPからプリントするための設定をしましょう。 設定を巧みに使って楽しんでください。
</p>

</body>
</section>
</chapter>

<chapter>
<title>LinuxをWindowsの共用プリントサーバーとして使う</title>
<section>
<body>

<p>
Linuxは素晴らしいプリントサーバーになります。そしてまた、
素晴らしいどのようなサーバーにもなります。 まず最初にしなくてはならないことは
<path>/etc/samba/smb.conf</path> を環境に合わせて編集することです。
この<i>smb.conf</i>ファイルはLinuxマシンをWindowsマシンのためのWindows NTサーバーと同じようにするためのすべての設定を含んでいます。
下記はとても実用的な<i>smb.conf</i>の例です。
あなたのネットワーク環境に合わせて、必要に応じて編集してください。
</p>

<pre caption = "smb.confのサンプル">
[global]

workgroup = YOUR_WORKGROUP
server string = Gentoo Linux Server
encrypt passwords = True
security = user
smb passwd file = /etc/samba/private/smbpasswd
log file = /var/log/samba/log.%m
socket options = IPTOS_LOWDELAY TCP_NODELAY
domain master = Yes
local master = Yes
preferred master = Yes
os level = 65
dns proxy = No
name resolve order = lmhosts host bcast
bind interfaces only = True
interfaces = eth0
hosts deny = ALL
hosts allow = 192.168.1.4 127.0.0.1 (list of allow hosts here) 
debug level = 1
create mask = 0644
directory mask = 0755
level2 oplocks = True
read raw = no
write cache size = 262144

[printers]
comment = All Printer
path = /var/spool/samba
browseable = no
</pre>

<p>
SAMBAの設定はこれで済みました。 sambaを再起動させてWindowマシンへ行き、
ネットワークプリンタをインストールしてください。 ね、簡単でしょ？
</p>

</body>
</section>
</chapter>
</guide>
