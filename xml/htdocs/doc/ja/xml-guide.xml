<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/ja/xml-guide.xml">
<title>Gentoo Linux XMLガイド</title>
<author title="Author"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title="Author"><mail link="zhen@gentoo.org">John P. Davis</mail></author>
<author title="Editor"><mail link="peesh@gentoo.org">Jorge Paulo</mail></author>
<author title="翻訳"><mail link="t-shige@humatec.co.jp">千里</mail></author><author title="翻訳"><mail link="088@t.ne.jp">Takasi Ota</mail></author>
<license/>

<abstract>
このガイドは、新しいGentooガイドXMLの簡易な構文を使用して、ウェブ・ドキュメンテーションを作成する方法を示します。この構文はGentooLinuxドキュメンテーションのための公式フォーマットです。
また、このドキュメントはそれ自身ガイドXMLを使用して作成されました。このガイドは、XMLとHTMLについての基礎的な動作の知識としての役目も担っています。
</abstract>

<version>2.0</version>
<date>12 May 2003</date>
<!-- Original revision: 1.12 -->
<chapter>
<title>ガイドの基本方針</title>

<section>
<title>XMLデザインガイドの目標</title>
<body>

<p>
このガイドXML構文は軽快で表現に富み、その結果として学習することは容易であり、かつウェブ・ドキュメンテーションの作成に私たちが必要とする特性をすべて提供します。
タグの数は（私たちが必要とする）最小限に抑えられます。
これにより、ガイドをDocBook XML/SGMLあるいはウェブに対応するHTMLのような他のフォーマットに容易に置き換えられます。
</p>

<p>
本稿のゴールとするところはガイドXMLドキュメントの<e>作成</e>および<e>変換</e>を容易にすることです。</p>

</body>
</section>

<section>
<title>ガイドXMLをHTMLにする方法</title>
<body>

<p> 
ガイドの構文自体を見る前に、ガイドXMLがどのようにウェブに対応するHTMLに変換されるか知ることは今後の助けとなるでしょう。
これを行なうために私たちは、コマンドラインXSLT処理ツール(これを”エンジン”と呼びます)に加えて、
<path>guide.xsl</path>と呼ばれる特別なファイルを使用します。
<path>guide.xsl</path>ファイルは、ターゲットのHTMLファイルを作成する元となるガイドXMLドキュメントの内容を変換する方法について精密に記述されています。
Gentoo Linuxでは<c>xsltproc</c>という変換ツールを使っており、<i>libxslt</i>パッケージに含まれています。
</p>


<pre caption="libxsltのインストール">
# <c>emerge libxslt</c>
</pre>

<p>これで道具は手に入りました。今度はいわば材料が必要です。言い換えれば、
変換するためにいくつかのGentoo XMLドキュメントが必要です。Gentooにはダウンロードして利用できる
２つのタイプのtarballがあります: </p>

<p><b>一つめのタイプは最新のGentoo Linux ウェブサイト全体を含んでいます</b>。
XSL テンプレートを含んでいるので、任意のドキュメントの変換を計画しているなら、
このtarballが必要でしょう。このtarballは
<uri link="http://www.gentoo.org/dyn/arch/xml-guide-latest.tar.gz">ここ</uri>で見つけることができます。</p>

<p><b>二つめのタイプは</b>提供しているすべての言語の<b>XMLドキュメントソースについて、
日毎のスナップショットを含んでいます。</b>このtarballに含まれるドキュメントだけで(訳注:ウェブ表示可能なドキュメントに)変換することは不可能なことに
注意してください。ですからあなた自身のドキュメントを思う存分作成したければweb tarball
をダウンロードしてください。これらのtarballは特に翻訳者に役に立ちます。
これらのtarballは<uri link="http://www.gentoo.org/dyn/doc-snapshots">ここ</uri>で見つけることができます。
</p>

<p>一つめのweb tarballをダウンロードして展開したら、
展開されたディレクトリに行き
<path>htdocs</path>ディレクトリに入ります。あたりを見回すとそのレイアウトで心地よくなりますが、
<path>xsl</path>と<path>doc</path>ディレクトリには注意してください。
お察しのとおり、XSLスタイルシートは<path>xsl</path>に、
そしてドキュメントは<path>doc</path>にあります。テストのために、以降では
<path>doc/en/gentoo-x86-install.xml</path>にある
Gentoo Linux CD Installation Guideを使います。XSLとXMLファイルの位置が
わかっていますから、
<c>xsltproc</c>を使って変換することができます。</p>

<pre caption="gentoo-x86-install.xmlの変換">
# <c>xsltproc xsl/guide.xsl doc/en/gentoo-x86-install.xml &gt; /tmp/install.html</c>
</pre>

<p>
これが成功すれば、<path>gentoo-x86-install.xml</path>のウェブ表示可能なバージョンが、<path>/tmp/install.html</path>にできているはずです。
このドキュメントをウェブブラウザで適切に表示するためには、
<path>css/main.css</path>および(確実に表示できるように)
<path>images</path>ディレクトリなど、
<path>htdocs</path>から<path>/tmp</path>にいくつかのファイルをコピーしなければなりません。
</p>

</body>
</section>
</chapter>
<chapter>
<title>ガイドのXML</title>
<section>
<title>基本構成</title>
<body>

<p>
さて、XMLを変換する方法について学びました。ここからはXML構文についての学習を始めます。
ガイドXMLドキュメントの中で使用される初期化用タグからはじめることにしましょう。</p>

<pre caption="ガイドXMLドキュメント 初期化部">
&lt;?xml version='1.0' encoding="UTF-8"?&gt;
&lt;guide link="relative_link_to_your_guide"&gt;
&lt;title&gt;<i>Gentoo Linux ドキュメンテーションガイド</i>&lt;/title&gt;
&lt;author title="<i>Chief Architect</i>"&gt;&lt;mail link="<i>drobbins@gentoo.org</i>"&gt;
	<i>Daniel Robbins</i>&lt;/mail&gt;
&lt;/author&gt;
&lt;author title="<i>Editor</i>"&gt;&lt;mail link="<i>thomasfl@gentoo.org</i>"&gt;
	<i>Thomas Flavel</i>&lt;/mail&gt;
&lt;/author&gt;

&lt;abstract&gt;<i>このガイドは、新しいGentooガイドXMLの簡易な構文を使用して、
ウェブ・ドキュメンテーションを構成する方法をあなたに示します。
この構文はGentooLinuxドキュメンテーションのための公式フォーマットです。
また、このドキュメントはそれ自身ガイドXMLを使用して作成されました。</i> &lt;/abstract&gt;

&lt;version&gt;<i>1.0</i>&lt;/version&gt;
&lt;date&gt;<i>29 Mar 2001</i>&lt;/date&gt;
</pre>
<p>1番上の行には、これがXMLドキュメントであると認識されるために必要なタグがあります。
それに続いて、<c>&lt;guide&gt;</c>タグがありますが、ガイド・ドキュメント全体は<c>&lt;guide&gt; &lt;/guide&gt;</c>のペアで囲まれます。
次に、<c>&lt;title&gt;</c>タグがあり、ガイド・ドキュメント全体のための
タイトルをセットするのに使用されています。
</p>

<p>その後、<c>&lt;author&gt;</c>タグに行き当たります。
(それらはドキュメントの著者などに関する情報を含んでいます)
各<c>&lt;author&gt;</c>タグは著者のドキュメントとの関係(Author、Co-author、Editorなど)
を特定するために使用されて、オプションの<c>title=</c>エレメントの記述も許可されます。
この例では、著者の名前は別のタグで囲まれています。
そして<c>&lt;mail&gt;</c>タグは、この人のためのメールアドレスを指定するために
使用されています。
<c>&lt;mail&gt;</c>タグはオプションであり省略することができます。
そして<c>&lt;author&gt;</c>エレメントはガイド・ドキュメントにつき一つ以上あってもかまいません。
</p>

<p>
さらに、<c>&lt;abstract&gt;</c>、<c>&lt;version&gt;</c>および<c>&lt;date&gt;</c>などのタグに行き当たります。
これらはドキュメント要約、現行版のバージョンおよび現行版の日付(DD MMM YYYYフォーマットで)をそれぞれ指定するために使用されています。
また、これらのタグが先頭に置かれることで、ガイド・ドキュメントは完成します。
<c>&lt;title&gt;</c>および<c>&lt;mail&gt;</c>のタグを除いて、<c>&lt;guide&gt;</c>タグの直後以外の、いかなる場所にも現われてはなりません。
また、一貫性という点ではドキュメントの内容が書かれる前に、
これらのタグが現われることが勧められます(しかし必ずしも必要と言うわけではありません)。
</p>

</body>
</section>

<section>
<title>章と節</title>
<body>
<p>
いったん初期化用タグが指定されたら、ドキュメントに構造化されているエレメントを追加する準備ができています。
ガイド・ドキュメントはいくつかの章に分割されます。また、各章は一つ以上の節を設けることができます。
すべての章および節はタイトルを持っています。
ここに例として、一つの段落から成る単一の節をもつ章があるものとします。
このXMLを<uri link="#doc_pre2">先程抜粋したXML</uri>に追加して、
のファイルの末尾に<c>&lt;/guide&gt;</c>をを追加すれば、(最低限の内容ではありますが)有効なガイド・ドキュメントの完成です。
</p>

<pre>
&lt;chapter&gt;
&lt;title&gt;<i>自分で作成した章</i>&lt;/title&gt;
&lt;section&gt;
	&lt;title&gt;<i>これは私が書いた章です</i>&lt;/title&gt;
	&lt;body&gt;
		&lt;p&gt;<i>ここに実際にこの節でのテキスト内容を記述します。</i>&lt;/p&gt;
	&lt;/body&gt;
&lt;/section&gt;
&lt;/chapter&gt;
</pre>

<p>
上記では、私は<c>&lt;chapter&gt;</c>エレメントに子要素である<c>&lt;title&gt;</c>エレメントを加えて章タイトルをセットしました。
その後、私は<c>&lt;section&gt;</c>エレメントを加えることにより節を作成しました。
<c>&lt;section&gt;</c>エレメントの内側を見ると、
それが<c>&lt;title&gt;</c>および<c>&lt;body&gt;</c>の2つの子要素を持っていることを理解して頂けると思います。
<c>&lt;title&gt;</c>に目新しいものはありませんが、<c>&lt;body&gt;</c>については、特にこの節の実際のテキスト内容を含んでいます。
それから、<c>&lt;body&gt;</c>エレメント内で使用できるちょっとしたタグもありますね。
</p>

<note>
<c>&lt;guide&gt;</c>エレメントは複数の<c>&lt;chapter&gt;</c>エレメントを含むことができます。
<c>&lt;chapter&gt;</c>エレメントは複数の<c>&lt;section&gt;</c>エレメントを含むことができます。
しかしながら<c>&lt;section&gt;</c>エレメントは<c>&lt;body&gt;</c>エレメントを一つしか含むこととができません。</note>

</body>
</section>

<section>
<title>&lt;body&gt;の例</title>
<body>
<p>
さてここからは、実際の内容を記述する方法を学習しましょう。以下は、<c>&lt;body&gt;</c>エレメントのためのXMLコードの例です。
</p>
<pre>
&lt;p&gt;
これはひとつの段落です。 &lt;path&gt;/etc/passwd&lt;/path&gt;はファイルです。
&lt;uri&gt;http://www.gentoo.org&lt;/uri&gt;はお気に入りのウェブサイトです。
&lt;c&gt;ls&lt;/c&gt;と入力、などは好ましいと思う場所にどうぞ。私は &lt;e&gt;本当に&lt;/e&gt; 眠いんです。
&lt;/p&gt;

&lt;pre&gt;
これは出力結果かコードのテキストです。
# &lt;i&gt;これはユーザ入力です&lt;/i&gt;

ある部分を選択して強調することで、HTML/XMLをより読みやすくしてください。
&lt;foo&gt;&lt;i&gt;bar&lt;/i&gt;&lt;/foo&gt;

&lt;codenote&gt;これはコード・ブロックにインラインの注記を挿入する方法です&lt;/codenote&gt;
&lt;/pre&gt;
&lt;note&gt;これは注記です&lt;/note&gt;
&lt;warn&gt;これは警告です&lt;/warn&gt;
&lt;impo&gt;これは重要項目です&lt;/impo&gt;
</pre>
<p>この<c>&lt;body&gt;</c>エレメントの内容がどのように表示されるか見てみましょう。</p>

<p>
これは一つの段落です。<path>/etc/passwd</path>はファイルです。
<uri>http://www.gentoo.org</uri>はお気に入りのウェブサイトです。
<c>ls</c>と入力、などは好ましいと思う場所にどうぞ。私は<e>本当に</e>眠いんです。
</p>

<pre>
これは出力結果かコードのテキストです。
# <i>これはユーザ入力です</i>

ある部分を選択して強調することで、HTML/XMLをより読みやすくしてください。
&lt;foo&gt;<i>bar</i>&lt;/foo&gt;

<codenote>これはコード・ブロックにインラインの注記を挿入する方法です</codenote>
</pre>
<note>これは注記です</note>
<warn>これは警告です</warn>
<impo>これは重要項目です</impo>
</body>
</section>

<section>
<title>&lt;body&gt;タグ</title>
<body>

<p>
私たちは前の節で多くの新しいタグを紹介しました。
次のことを覚えておいてください
<c>&lt;p&gt;</c>(段落:パラグラフ)、<c>&lt;pre&gt;</c>(コード・ブロック)、
<c>&lt;note&gt;</c>(訳注:注意)、<c>&lt;warn&gt;</c>(警告)および<c>&lt;impo&gt;</c>(重要)タグはすべてテキストを1以上行含むことができます。
<c>&lt;table&gt;</c>エレメント(すぐに説明します)を除いて、
これらのタグ以外のものが<c>&lt;body&gt;</c>内に最初に現れてはいけません。
別のものをこれらのタグに積み重ねては<e>いけません</e>。言いかえれば、 <c>&lt;note&gt;</c>エレメントを<c>&lt;p&gt;</c>エレメントの内部に置いてはいけない、
ということです。
ご推察のように、<c>&lt;pre&gt;</c>エレメントはコード抜粋には都合が良く、その余白を正確に保持します。
また、<c>&lt;pre&gt;</c>タグには名前をつけることができます:</p>

<pre caption = "名前がついた&lt;pre&gt;">
&lt;pre caption = "Output of uptime"&gt;
# &lt;i&gt;uptime&lt;/i&gt;
16:50:47 up 164 days,  2:06,  5 users,  load average: 0.23, 0.20, 0.25
&lt;/pre&gt;
</pre>

</body>
</section>
<section>
<title>&lt;path&gt;、&lt;c&gt;および&lt;e&gt;</title>
<body>

<p>
<c>&lt;path&gt;</c>、<c>&lt;c&gt;</c>および<c>&lt;e&gt;</c>のエレメントは<c>&lt;body&gt;</c>タグの<c>&lt;pre&gt;</c>を除く任意の子要素内で使用することができます。
</p>

<p>
<c>&lt;path&gt;</c>エレメントは、<e>ディスク上のファイル</e>を参照するマークアップするテキストに使用されます。これらは<e>絶対パスまたは相対パス</e>、あるいは<e>単なるファイル名</e>で示されます。
この要素は一般的に、標準の段落の中で目立たせるために等幅フォントで表示されます。
</p>

<p><c>&lt;c&gt;</c>エレメントは<e>コマンド</e>あるいは<e>ユーザ入力</e>をマークアップするために使用されます。
<c>&lt;c&gt;</c>については、読み手に何らかの結果を伴う入力が促されていることを警告す
る方法だと考えてください。
例えば、このドキュメントに表示されたXMLタグはすべて、<c>&lt;c&gt;</c>エレメントで囲まれます。
なぜなら、それらはユーザが入力することができるものを表わすのであって、パスを記載するときには使わないからです。
<c>&lt;c&gt;</c>エレメントの使用によって、読者がそれらが入力する必要のあるコマンドであると言うことを素早く識別する手助けになるでしょう。
さらに、<c>&lt;c&gt;</c>エレメントは、もともと通常のテキストとは違うフォントで表示されるようになっているわけですから、
<e>ダブルクォートでユーザ入力を囲んだりする必要がほとんどないというわけです</e>。
例えば、"<c>&lt;c&gt;</c>"エレメントなどと書いているような注目のさせかたは必要ないのです。
不必要なダブルクォートの使用の回避はドキュメントをより判読可能しやすくします!
</p>

<p><c>&lt;e&gt;</c>は単語か句に強調を適用するために使用されます。
たとえば私は、私はセミコロンの方を多く使うべきだと<e>本当に</e>思います。
このテキストは通常の段落のフォントより目立ちます。
これは、あなたの文をキリッと<e>引き締める</e>ことをサポートします!</p>

</body>
</section>

<section>
<title>&lt;mail&gt;および&lt;uri&gt;</title>
<body>

<p>私たちはこれまでにいくつか<c>&lt;mail&gt;</c>タグを見てきました。
それはあるテキストを特別のメールアドレスとリンクするために使用され、<c>&lt;mail link="foo@bar.com"&gt;Mr. Foo Bar&lt;/mail&gt;</c>の形式をとります。</p>

<p>
<c>&lt;uri&gt;</c>タグはインターネット上のファイル/ロケーションを指定するために使用されます。

このタグには二つの使われ方があり、一つめは、例えば<uri>http://www.gentoo.org</uri>へリンクするこのテキストのように、テキストそのものに実際のURIを表示したい場合です。
このリンクを作成するために、私は<c>&lt;uri&gt;http://www.gentoo.org&lt;/uri&gt;</c>と入力しました。
もう一つは、たとえば<uri link="http://www.gentoo.org">Gentoo Linux ウェブサイト</uri>のように、他のテキストにURIを関連させたい場合です。
<e>この</e>リンクを作成するのに、
私は<c>&lt;uri link="http://www.gentoo.org"&gt;Gentoo Linux ウェブサイト&lt;/uri&gt;</c>と入力しています。
</p>

</body>
</section>

<section>
<title>図</title>

<body>

<p>
では、ドキュメントに図を挿入する方法を紹介しましょう。<c>&lt;figure link="mygfx.png" short="私の写真" caption="いつの時も私の大好きな写真"/&gt;</c>。
<c>link=</c>属性は実際のグラフィックのイメージを指します。
<c>short=</c>属性には短い説明(今回は画像にHTMLの<c>alt=属性</c>を付けるために使用されています)やキャプションを指定します。
決して難しくありません:)
さらに、私たちは標準のHTMLスタイルのキャプションや境界のないイメージを加えるために&lt;img src="foo.gif"/&gt;タグをサポートします。
</p>

</body>
</section>
<section>
<title>テーブルと一覧</title>
<body>

<p>
ガイドXMLはHTML構文より簡潔なテーブル構文をサポートしています。
テーブルを始めるには、<c>&lt;table&gt;</c>グを使います。
実際のテーブルデータを挿入する際には、HTMLでいうところの&lt;td&gt;タグをサポートしていないので、列データを開始するには<c>&lt;tr&gt;</c>タグを使います。
そのかわり、列見出しを入れたいと時には<c>&lt;th&gt;</c>を使い、通常の情報ブロックには<c>&lt;ti&gt;</c>を使います。
でも、どんな箇所でも<c>&lt;th&gt;</c>と<c>&lt;ti&gt;</c>は使うことができますので、
<c>&lt;th&gt;</c>エレメントが必ず最初の列になければ
いけないとうことはありません。現在それらのタグではどんな属性もサポートされていませんが、
いくつか加えられる(<c>&lt;table&gt;</c>の<c>caption=</c>属性とか)予定です。
</p>

<p>
番号付きリストあるいは番号無しリストを作成するためには、HTMLスタイルと同じ<c>&lt;ol&gt;</c>、 <c>&lt;ul&gt;</c>と<c>&lt;li&gt;</c>タグを使用してください。
リスト・タグは <c>&lt;p&gt;</c>、<c>&lt;ti&gt;</c>、<c>&lt;note&gt;</c>、<c>&lt;warn&gt;</c>または<c>&lt;impo&gt;</c>タグの中でのみ使ってください。
</p>

</body>
</section>

<section>
<title>ドキュメント内部での参照</title>
<body>

<p>
ガイドXMLは、ハイパーリンクを使用してドキュメントの他の部分に参照を付けることを実に簡単に行えます。
<uri link="#doc_chap1">第1章</uri>を<c>&lt;uri link="#doc_chap1"&gt;第1章&lt;/uri&gt;</c>のように入力して
指し示すことで、リンクを作成することができます。
<uri link="#doc_chap1_sect2">第1章2節</uri>を指し示すためには、<c>&lt;uri link="#doc_chap1_sect2"&gt;第1章2節&lt;/uri&gt;</c>と入力します。
図3を参照するために、<c>&lt;uri link="doc_fig3"&gt;figure 3&lt;/uri&gt;</c>とタイプします。
あるいは、<uri link="#doc_pre2">コードリスト2</uri>を参照するには、<c>&lt;uri link="doc_pre2"&gt;コードリスト2&lt;/uri&gt;</c>と入力します。
私たちは他の自動リンク機能(たとえばテーブルへのリンクのサポート)を近いうちに追加する予定です。
</p>

</body>
</section>
</chapter>
<chapter>
<title>参考</title>
<section>
<title>書こう</title>
<body>
<p>
ガイドXMLは、とにかく"すっきりさっぱり"を念頭に作られていますから、
XMLを作成する人は、実際のXML構文の勉強に時間を費すことなくどんどんドキュメントを書いてみることができます。
このガイドが"文学者"というわけではない人たちにとって、質の高いGentoo Linuxドキュメントを
書き始めるきっかけになれば幸いです。
もし、あなたが支援したい場合(もしくは何かガイドに疑問がある場合)、
どうぞ<mail link="gentoo-doc@gentoo.org">gentoo-doc メーリングリスト</mail>へあなたの取り組みたいことをメッセージとして送ってください。それではどうぞ楽しんでください!</p>
</body>
</section>
</chapter>
</guide>

