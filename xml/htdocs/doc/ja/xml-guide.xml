<?xml version="1.0" encoding="euc-jp"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/xml-guide.html">
<title>Gentoo Linux ドキュメンテーションガイド</title>
<author title="Chief Architect"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>

<abstract>
このドキュメントは、Gentoo guide XMLの簡易な構文を使用して、ウェブ・ドキュメンテーションを構成する方法を説明します。
この構文はGentoo Linuxドキュメンテーションの公式フォーマットです。
また、このドキュメントはそれ自身guide XMLを使用して作成されました。
このドキュメントは、XMLとHTMLについての基礎的な動作の知識としての役目も担っています。
</abstract>

<version>1.0</version>
<date>07 Mar 2002</date>

<chapter>
<title>guideの基本方針</title>

<section>
<title>guide XMLデザインの目標</title>
<body>

<p> 
このguide XML構文は軽快で表現に富み、その結果として学習することは容易であり、かつウェブ・ドキュメンテーションの作成に私たちが必要とする特性をすべて提供します。
タグの数は（私たちが必要とする）最小限に抑えられます。
これにより、guideをDocBook XML/SGMLあるいはウェブに対応するHTMLのような他のフォーマットに容易に置き換えることができます。。
</p>

<p>
このドキュメントの目標とするところはguide XMLドキュメントの<e>作成</e>および<e>変換</e>を容易にすることです。
</p>

</body>
</section>

<section>
<title>guide XMLをHTMLにする方法</title>
<body>

<p> 
guideの構文自体を見る前に、guide XMLがどのようにウェブに対応するHTMLに変換されるか知ることは後の助けになります。
これを行なうために私たちは、コマンドラインXSLT処理ツール(これを”エンジン”と呼びます)に加えて、<path>guide-main.xsl</path>と呼ばれる特別なファイルを使用します。
<path>guide-main.xsl</path>ファイルは、ターゲットのHTMLファイルを作成する元となるguide XMLドキュメントの内容を変換する方法について精密に記述されています。
2つのポピュラーなXSLTプロセッサ、<c>sabcmd</c>(<path>app-text/sablotron</path>>パッケージに含まれます)および<c>xsltproc</c>(<path>gnome-libs/libxslt</path>のパッケージにあります)があります。
経験上、私たちは<c>xsltproc</c>がより高品質および機能豊富なXSLTプロセッサであることを知りました。
</p>

<p> 
いちど<c>xsltproc</c>あるいは<c>sabcmd</c>のいずれかをインストールしてしまえば、あなたはガイドXMLをウェブに対応するHTMLに変換する準備ができ上がってしまいます。
ここでは、それがどのように働くかについて見てみましょう。
最初に、私たちのウェブサイトの最新のスナップショットが<uri>http://www.gentoo.org/projects/xml.html</uri>から、<uri link="http://www.gentoo.org/projects/guide-xml-latest.tar.gz">xml-guide-latest.tar.gz</uri>をダウンロードしてください。そしてこのtarballを展開します。
その中で、<path>gentoo-src/xml</path>ディレクトリのように記述してある<path>gentoo-src</path>ディレクトリを見つけるでしょう。
さてここで、<path>gentoo-src/xml/install.xml</path>を見つけてください。(新規のユーザインストレーションガイド)。
これが私たちのガイドXMLのドキュメントのソースになります。
変換を実行する最も簡単な方法は、<path>guide-main.xsl</path>ファイルの存在する位置へディレクトリを移動することです。次に、以下のように<c>xsltproc</c>を実行してください:
</p>

<pre>
# <i>cd gentoo-web/xsl</i>
# <i>xsltproc guide-main.xsl ../xml/install.xml &gt; /tmp/install.html</i>
</pre>

<p> 
もしすべてがうまくいけば、<path>/tmp/install.html</path>でウェブ表示可能な<path>install.xml</path>のバージョンを得られるはずです。
ウェブ用ブラウザに適切に表示できるこのドキュメントについては、<path>css/main-new.css</path>および(安全のため)<path>images</path>ディレクトリ全体などのように、<path>gentoo-web</path>から<path>/tmp</path>にいくつかのファイルをコピーしなければなりません。
</p>

</body>
</section>
</chapter>
<chapter>
<title>guide XML</title>
<section>
<title>基本構成</title>
<body>

<p>
あなたは既にguide XMLを変換する方法を知っていますので、ガイドXML構文の学習をスタートする準備は整いました。
guide XMLドキュメントの中で使用される初期化用タグからはじめることにしましょう。
</p>

<pre caption="guide XMLドキュメント 初期化部">
&lt;?xml version='1.0'?&gt;
&lt;guide&gt;
&lt;title&gt;<i>
Gentoo Linux ドキュメンテーションガイド
</i>&lt;/title&gt;
&lt;author title="<i>Chief Architect</i>"&gt;&lt;mail link="<i>drobbins@gentoo.org</i>"&gt;
	<i>Daniel Robbins</i>&lt;/mail&gt;
&lt;/author&gt;
&lt;author title="<i>Editor</i>"&gt;&lt;mail link="<i>thomasfl@gentoo.org</i>"&gt;
	<i>Thomas Flavel</i>&lt;/mail&gt;
&lt;/author&gt;

&lt;abstract&gt;<i>
このガイドは、新しいGentoo guide XMLの簡易な構文を使用して、ウェブ・ドキュメンテーションを構成する方法をあなたに示します。
この構文はGentoo Linuxドキュメンテーションのための公式フォーマットです。
また、このドキュメントはそれ自身ガイドXMLを使用して作成されました。
</i> &lt;/abstract&gt;

&lt;version&gt;<i>1.0</i>&lt;/version&gt;
&lt;date&gt;<i>29 Mar 2001</i>&lt;/date&gt;
</pre>

<p>
1番上の行には、私たちがこれをXMLドキュメントであると認識するためのタグが見えます。
それに続いて、<c>&lt;guide&gt;</c>タグがありますが、ガイド・ドキュメント全体は<c>&lt;guide&gt; &lt;/guide&gt;</c>のペアで囲まれます。
次に、<c>&lt;title&gt;</c>タグがあり、ガイド・ドキュメント全体のためのタイトルをセットするのに使用されています。
</p>

<p>
その後、私たちは<c>&lt;author&gt;</c>タグに行き当たります。(それらはドキュメントの様々な著者に関する情報を含んでいます)
各<c>&lt;author&gt;</c>タグは著者のドキュメント(著者、共同執筆者、エディタなど)との関係を指定するために使用されて、オプションの<c>title=</c>エレメントの記述も許可されます。
特にこの例において、著者の名前は別のタグで囲まれています。それは <c>&lt;mail&gt;</c>タグで、特にこの人のためのメールアドレスを指定するために使用されております。
<c>&lt;mail&gt;</c>タグはオプションであり省略することができます。そして<c>&lt;author&gt;</c>エレメントはガイド・ドキュメントにつき1つ以上は要求されません。
</p>

<p>
さらに、私たちは<c>&lt;abstract&gt;</c>, <c>&lt;version&gt;</c>および<c>&lt;date&gt;</c>なのタグに行き当たります。
これらはドキュメント、現行版番号および現行版期日(DD MMM YYYYフォーマットで)の要約をそれぞれ指定するために使用されています。
この完成させたタグは、ガイド・ドキュメントの初めに現われるべきものです。
<c>&lt;title&gt;</c>および<c>&lt;mail&gt;</c>のタグを除いて、直ち<c>&lt;guide&gt;</c>タグの内部でという点を除いて、これらのものは、他のいかなる場所にも現われてはなりません。
また、一貫性という点ではドキュメントの内容が書かれる前に、これらのタグが現われることが勧められます(しかし必ずしも必要と言うわけではありません)。
</p>

</body>
</section>

<section>
<title>章と節</title>
<body>
<p>
いったん初期化用タグが指定されたら、あなたはドキュメントの構造のエレメントを加えていく準備ができています。
ガイド・ドキュメントはいくつかの章に分割されます。また、各章は1つ以上の節を保持することができます。
すべての章および節はタイトルを持っています。
ここに例として、一つの段落から成る単一の節をもつ章があるものとします。
XMLにこのXMLに<uri link="#doc_pre2">前の抜粋</uri>を追加して、またそのファイルの終わりへ<c>&lt;/guide&gt;</c>を追加することで、有効な(最小の場合)ガイド・ドキュメントを得ることができます。
</p>

<pre>
&lt;chapter&gt;
&lt;title&gt;<i>自分で作成した章</i>&lt;/title&gt;
&lt;section&gt;
	&lt;title&gt;<i>これは私が書いた章です</i>&lt;/title&gt;
	&lt;body&gt;
		&lt;p&gt;<i>ここに実際にこの節でのテキスト内容を記述します。</i>&lt;/p&gt;
	&lt;/body&gt;
&lt;/section&gt;
&lt;/chapter&gt;
</pre>

<p>
上記では、私は<c>&lt;chapter&gt;</c>エレメントに子供の<c>&lt;title&gt;</c>エレメントを加えて章タイトルをセットしました。
その後、私は<c>&lt;section&gt;</c>エレメントを加えることにより節を作成しました。
<c>&lt;section&gt;</c>エレメントの内側を見ると、それが<c>&lt;title&gt;</c>および<c>&lt;body&gt;</c>の2つの子供のエレメントを持っていることを理解して頂けるとおもいます。
<c>&lt;title&gt;</c>に目新しいものはありませんが、<c>&lt;body&gt;</c>については、特にこの節の実際のテキスト内容を含んでいます。
そして私たちは、<c>&lt;body&gt;</c>エレメントの内側で使用が許される小さなタグを見つけることができます。
</p>

<note>
<c>&lt;guide&gt;</c>エレメントは複数の<c>&lt;chapter&gt;</c>エレメントを含むことができます。
<c>&lt;chapter&gt;</c>エレメントは複数の<c>&lt;section&gt;</c>エレメントを含むことができます。
しかしながら<c>&lt;section&gt;</c>エレメントは<c>&lt;body&gt;</c>エレメントを一つしか含むとができません。
</note>
</body>
</section>

<section>
<title>&lt;body&gt;の例</title>
<body>
<p>
さてここらで、実際の内容をマークする方法を学習しましょう。
ここに、<c>&lt;body&gt;</c>エレメントのための例としてXMLコードがあります。
</p>
<pre>
&lt;p&gt;
これはひとつの段落です。 &lt;path&gt;/etc/passwd&lt;/path&gt;はファイルです。
&lt;uri&gt;http://www.gentoo.org&lt;/uri&gt;はお気に入りのウェブサイトです。
&lt;c&gt;ls&lt;/c&gt;と入力、などは好ましいと思う場所にどうぞ。私は &lt;e&gt;本当に&lt;/e&gt; 眠いんです。
&lt;/p&gt;

&lt;pre&gt;
これは出力結果かコードのテキストです。
# &lt;i&gt;これはユーザ入力です&lt;/i&gt;

HTML/XMLを選択的強調の使用により読むことをさらに容易にしてください。
&lt;foo&gt;&lt;i&gt;bar&lt;/i&gt;&lt;/foo&gt;

&lt;codenote&gt;これはコード・ブロックにインラインの注記を挿入する方法です&lt;/codenote&gt;
&lt;/pre&gt;
&lt;note&gt;これは注記です&lt;/note&gt;
&lt;warn&gt;これは警告です&lt;/warn&gt;
&lt;impo&gt;これは重要項目です&lt;/impo&gt;
</pre>
<p>
さて、ここで<c>&lt;body&gt;</c>エレメントがどのように応じるかを見てみましょう。
</p>

<p>
これは一つの段落です。<path>/etc/passwd</path>はファイルです。<uri>http://www.gentoo.org</uri>はお気に入りのウェブサイトです。<c>ls</c>と入力、などは好ましいと思う場所にどうぞ。私は<e>本当に</e>眠いんです。
</p>

<pre>
これは出力結果かコードのテキストです。
# <i>これはユーザ入力です</i>

HTML/XMLを選択的強調の使用により読むことをさらに容易にしてください。
&lt;foo&gt;<i>bar</i>&lt;/foo&gt;

<codenote>これはコード・ブロックにインラインの注記を挿入する方法です</codenote>
</pre>
<note>これは注記です</note>
<warn>これは警告です</warn>
<impo>これは重要項目です</impo>
</body>
</section>

<section>
<title>&lt;body&gt;タグ</title>
<body>

<p> 
私たちは前のセクションで多くの新しいタグを導入しました。ここには、あなたが知っておくべきことがあります。
<c>&lt;p&gt;</c>(段落)、<c>&lt;pre&gt;</c>(コード・ブロック)、<c>&lt;note&gt;</c>、<c>&lt;warn&gt;</c>(警告)および<c>&lt;impo&gt;</c>(重要)タグはすべてテキストを1以上行含むことができます。
<c>&lt;table&gt;</c>エレメントを除いて(私たちは一口でカバーするでしょう)、これらは<c>&lt;body&gt;</c>の内部で直ちに現われるべき、ただ一つのタグです。
別のものをこれらのタグに積み重ねては<e>いけません</e>。言いかえれば、 <c>&lt;note&gt;</c>エレメントを<c>&lt;p&gt;</c>エレメントの内部に置いてはいけない、ということです。
ご推察のように、<c>&lt;pre&gt;</c>エレメントはコード抜粋には都合が良く、その余白を正確に保持します。
</p>

</body>
</section>
<section>
<title>&lt;path&gt;, &lt;c&gt;および&lt;e&gt;</title>
<body>

<p>
<c>&lt;path&gt;</c>, <c>&lt;c&gt;</c>および<c>&lt;e&gt;</c>のエレメントは<c>&lt;body&gt;</c>タグの<c>&lt;pre&gt;</c>を除く任意の子供の内部で使用することができます。
</p>

<p>
<c>&lt;path&gt;</c>エレメントは、<e>on-disk file</e>を参照するマーク・テキストに使用されます。これらは<e>絶対または相対パス</e>、あるいは<e>単純なファイル名</e>で示されます。
この要素は一般的に標準の段落タイプからそれを除外して、一定間隔で配置されたフォントを与えられます。
</p>

<p>

<c>&lt;c&gt;</c>エレメントは<e>コマンド</e>あるいは<e>ユーザ入力</e>をマークするために使用されます。
<c>&lt;c&gt;</c>について考えると、読み手にそれをタイプインすることができること、あるいはある種類のアクションを実行するものだと、警告を出す方法であると言えます。
例えば、このドキュメントに表示されたXMLタグはすべて、<c>&lt;c&gt;</c>エレメントで囲まれます。なぜなら、それらがユーザがタイプインすることができるものを表わすのであって、パスではありえません。

<c>&lt;c&gt;</c>エレメントの使用によって、読者がそれらがタイプインする必要のあるコマンドであると言うことを素早く識別する手助けになるでしょう。
さらに、<c>&lt;c&gt;</c>エレメントは、規則的なテキストから既に削除されます、<e>ダブルクォートでユーザ入力を囲むようなサポートはめったに必要としません</e>。
例えば、"<c>&lt;c&gt;</c>"のようなエレメントの参照なしで文を作成しました。
不必要なダブルクォートの使用の回避はドキュメントをより判読可能にします、そして愛用しましょう!
</p>

<p>
<c>&lt;e&gt;</c>は単語か句に強調を適用するために使用されます。
たとえば私は、<e>実際</e>にはセミコロンより頻繁に使用するべきと思っています。
あなたが見てきたように、このテキストは強調のための規則的な段落のタイプから切り離されます。
これは、あなたの文をキリッと<e>引き締める</e>ことをサポートします!
</p>

</body>
</section>

<section>
<title>&lt;mail&gt;および&lt;uri&gt;</title>
<body>

<p>
私たちはこれまでに<c>&lt;mail&gt;</c>タグを確認しています。それはあるテキストを特別のメールアドレスとリンクするために使用され、<c>&lt;mail link="foo@bar.com"&gt;Mr. Foo Bar&lt;/mail&gt;</c>の形式をとります。
</p>

<p>
<c>&lt;uri&gt;</c>タグはインターネット上のファイル/ロケーションを指定するために使用されます。
それは2つの形式を持っており、1つは<uri>http://www.gentoo.org</uri>へリンクのようなテキスト本体に実際のURIを表示したい場合に使用することができます。
このリンクを作成するために、私は<c>&lt;uri&gt;http://www.gentoo.org&lt;/uri&gt;</c>とタイプしました。
別の形式は、たとえば<uri link="http://www.gentoo.org">the Gentoo Linux website</uri>のように、あなたが他のあるテキストにURIを関連させたい場合です。
<e>この</e>リンクを作成するのに、私は<c>&lt;uri link="http://www.gentoo.org"&gt;the Gentoo Linux website&lt;/uri&gt;</c>とタイプしています。
</p>

</body>
</section>

<section>
<title>体裁</title>

<body>

<p>
ここに、ドキュメントに図を挿入する方法があります。<c>&lt;figure link="mygfx.png" short="私の写真" caption="いつの時も私の大好きな写真"/&gt;</c>。
<c>link=</c>属性は実際のグラフィックのイメージを指します。
<c>short=</c>属性が指定する短い記述(現在イメージのHTML<c>alt=</c>属性のために使用された、およびキャプション。
決して難しくありません:)
さらに、私たちは標準のHTMLスタイルのキャプションや境界のないイメージを加えるために&lt;img src="foo.gif"/&gt;タグをサポートします。
</p>

</body>
</section>
<section>
<title>テーブルと一覧</title>
<body>

<p>
guideはHTMLに似ている単純化されたテーブル構文をサポートします。
テーブルを開始するには、<c>&lt;table&gt;</c>タグを使用してください。
<c>&lt;tr&gt;</c>タグで列を始めてください。
しかしながら、実際のテーブル・データの挿入のために、私たちはHTMLの&lt;td&gt;タグをサポート<e>していません</e>。
代わりに、<c>&lt;ti&gt;</c>を使用してください。ヘッダーを挿入していれば<c>&lt;th&gt;</c>、通常の情報のブロックを挿入していれば<c>&lt;ti&gt;</c>を使用してもよく、とくに要求されることはありません。<c>&lt;th&gt;</c>エレメントは第1列にのみ現われます。
現在、これらのタグは属性をサポートしていませんが、いくつかは(<c>&lt;table&gt;</c>のための<c>caption=</c>属性のような形で)まもなく加えられるでしょう。
</p>

<p>
リストを作成するためには、単にHTMLスタイルの<c>&lt;ol&gt;</c>, <c>&lt;ul&gt;</c>および<c>&lt;li&gt;</c>タグを使用してください。
リスト・タグは <c>&lt;p&gt;</c>, <c>&lt;ti&gt;</c>,<c>&lt;note&gt;</c>, <c>&lt;warn&gt;</c>または<c>&lt;impo&gt;</c>タグの内で単独で現われるべきです。
</p>

</body>
</section>

<section>
<title>ドキュメント内部での参照</title>
<body>

<p>
guideは、ハイパーリンクを使用してドキュメントの他の部分に参照を付けることを本当に簡単にできます。
リンクは<uri link="#doc_chap1">第1章</uri>を<c>&lt;uri link="#doc_chap1"&gt;第1章&lt;/uri&gt;</c>のようにタイプして指し示すことで作成することができます。
<uri link="#doc_chap1_sect2">第1章2節</uri>を指し示すためには、<c>&lt;uri link="#doc_chap1_sect2"&gt;第1章2節&lt;/uri&gt;</c>と入力します
図3を参照するために、<c>&lt;uri link="doc_fig3"&gt;figure 3&lt;/uri&gt;</c>とタイプします。
あるいは、<uri link="#doc_pre2">コードリスト2</uri>を参照するには、<c>&lt;uri link="doc_pre2"&gt;コードリスト2&lt;/uri&gt;</c>と入力します。
私たちは他の自動リンク機能(テーブル・サポートのような)をすぐに加えるでしょう。
</p>

</body>
</section>
</chapter>
<chapter>
<title>資料について</title>
<section>
<title>記述の開始</title>
<body>
<p>
guideは、特に"少数精鋭"であることを目指した結果、開発者は実際のXML構文を少ない時間で学習し、ドキュメンテーションにより多くの時間を過ごすことができます。
希望としては、これが異常に熱心な"文献学者"でない開発者にGentoo Linuxドキュメンテーションを書き始めることの促進剤となればと思ってます。
もし、あなたが支援したい場合(もしくは何かガイドに疑問がある場合)、どうぞ<mail link="gentoo-dev@gentoo.org">Gentoo^devメーリングリスト</mail>へあなたの取り組みたいことをメッセージとして送ってください。
それではどうぞ楽しんでください!
</p>
</body>
</section>
</chapter>
</guide>

