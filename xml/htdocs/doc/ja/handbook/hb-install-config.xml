<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ja/handbook/hb-install-config.xml,v 1.25 2011/11/06 22:52:57 naota Exp $ -->

<!-- Original revision: 1.108 -->
<!-- Translator: Infonomad -->
<!-- Translator: masuda -->
<!-- Translator: naota -->

<sections>

<abstract>
いくつかの重要な設定ファイルを編集する必要があります。
この章ではこれらのファイルの概要と編集の方法を説明します。
</abstract>

<version>15</version>
<date>2011-10-30</date>

<section>
<title>ファイルシステム情報</title>
<subsection>
<title>fstabって何</title>
<body>

<p>
Linuxにおいて、システムに使用されている全パーティションは<path>/etc/fstab</path>に記述されていなければなりません。このファイルにはそれぞれのパーティションのマウントポイント(ファイルシステムの構築のときに出てきた)、どのように、どんな特別なオプションでマウントされるか(自動的にマウントするか否か、ユーザーがマウントできるかどうか等)の情報が含まれます。
</p>

</body>
</subsection>
<subsection>
<title>/etc/fstabの作成</title>
<body>

<p>
<path>/etc/fstab</path>は特別な構文を使います。各々のラインは6つのフィールドから成り、空白(スペース、タブもしくはその両方)で分けられています。各々のフィールドにはそれぞれの意味があります。
</p>

<ul>
<li>
  1番目のフィールドには<b>パーティション</b>が記述されています。(デバイスファイルのパス)
</li>
<li>
  2番目のフィールドにはパーティションがマウントされるべき<b>マウントポイント</b>が記述されています。
</li>
<li>
  3番目のフィールドにはパーティションに使用されている<b>ファイルシステム</b>が記述されています。
</li>
<li>
  4番目のフィールドにはパーティションを<c>マウント</c>するときに適用したい<b>マウントオプション</b>が記述されています。各々のファイルシステムにはそれぞれ独自のマウントオプションがあるので、全てのオプションを見るには頑張ってマウントのマニュアルを読んでください。(<c>man mount</c>)。複数のマウントオプションはコンマで分けられます。
</li>
<li>
  5番目のフィールドは<c>dump</c>に使用され、そのパーティションが<b>dump</b>される必要があるかどうかを記述します。通常ここは<c>0</c>(ゼロ)のままで良いです。
</li>
<li>
  6番目のフィールドは<c>fsck</c>に使用され、システムが正常にシャットダウンしなかったときにどの順序でファイルシステムが<b>チェック</b>されるべきかを記述します。ルートパーティションは<c>1</c>に残りのパーティションは<c>2</c>にすべきでしょう。(もしくはもしファイルシステムのチェックが必要の無い場合は<c>0</c>にしてください)。
</li>
</ul>

<impo>
Gentooが提供している元々の<path>/etc/fstab</path><e>有効なfstab</e>ではありません。
自分のシステムの<path>/etc/fstab</path>を作成しなければなりません。
</impo>

<pre caption="/etc/fstabを開く">
# <i>nano -w /etc/fstab</i>
</pre>

</body>
<body test="func:keyval('/boot')">

<p>
では<path>/boot</path>パーティションのオプションをどのように書くかを見てみましょう。
これは単なる例であり、<path>/boot</path>を作っていない、もしくは作ることができなかったのなら、そのままコピーしないでください。
</p>

<p>
ディフォルトの<keyval id="arch"/>パーティションの例では、よくあるように<path>/boot</path>が<path><keyval id="/boot"/></path>パーティション、ファイルシステムが<c>ext2</c>となっています。
ブート中にチェックされる必要があります。
そこでこう書きます。
</p>

<pre caption="/etc/fstabでの/boot行の例">
<keyval id="/boot"/>   /boot     ext2    defaults        1 2
</pre>

<p>
<path>/boot</path>自身のシステムのセキュリティを向上させるためにパーティションが自動的にマウントされたくないユーザーもいます。そういう方々は<c>defaults</c>の代わりに<c>noauto</c>にしてください。これはこのパーティションを使いたいときは毎回手動でマウントする必要があるという事です。
</p>

</body>
<body>

<p>
パーティション分割の構成に合ったルールを追加し、CD-ROMドライブのためのルールを付け加えてください。
そして、その他のパーティションやドライブがあれば、当然それらも忘れないでください。
</p>

<p>
ここで<path>/etc/fstab</path>を作るために、以下の<e>例</e>を使います。
</p>

<pre caption="完全な/etc/fstabの例" test="func:keyval('arch')='HPPA'">
<keyval id="/boot"/>   /boot        ext2    defaults,noatime     1 2
/dev/sda3   none         swap    sw                   0 0
/dev/sda4   /            ext3    noatime              0 1

/dev/cdrom  /mnt/cdrom   auto    noauto,user          0 0

proc        /proc        proc    defaults             0 0
shm         /dev/shm     tmpfs   nodev,nosuid,noexec  0 0
</pre>

<pre caption="完全な/etc/fstabの例" test="func:keyval('arch')='Alpha' or func:keyval('arch')='MIPS' or func:keyval('arch')='x86' or func:keyval('arch')='AMD64'">
<keyval id="/boot"/>   /boot        ext2    defaults,noatime     1 2
/dev/sda2   none         swap    sw                   0 0
/dev/sda3   /            ext3    noatime              0 1

/dev/cdrom  /mnt/cdrom   auto    noauto,user          0 0

proc        /proc        proc    defaults             0 0
shm         /dev/shm     tmpfs   nodev,nosuid,noexec  0 0
</pre>

<pre caption="完全な/etc/fstabの例" test="func:keyval('arch')='SPARC'">
/dev/sda1   /               ext3        noatime              0 1
/dev/sda2   none            swap        sw                   0 0
/dev/sda4   /usr            ext3        noatime              0 2
/dev/sda5   /var            ext3        noatime              0 2
/dev/sda6   /home           ext3        noatime              0 2

<comment># You must add the rules for openprom</comment>
openprom    /proc/openprom  openpromfs  defaults             0 0

/dev/cdrom  /mnt/cdrom      auto        noauto,user          0 0

proc        /proc        proc    defaults             0 0
shm         /dev/shm     tmpfs   nodev,nosuid,noexec  0 0
</pre>

<pre caption="完全な/etc/fstabの例" test="func:keyval('arch')='PPC' or
func:keyval('arch')='PPC64'">
/dev/sda4   /            ext3    noatime              0 1
/dev/sda3   none         swap    sw                   0 0

/dev/cdrom  /mnt/cdrom   auto    noauto,user          0 0

proc        /proc        proc    defaults             0 0
shm         /dev/shm     tmpfs   nodev,nosuid,noexec  0 0
</pre>

<p>
<c>auto</c>は<c>mount</c>にファイルシステムを推測させ(多数のファイルシステムの内の1つで作成され得るリムーバルメディアに推奨されます)、<c>user</c>は非rootユーザーがCDをマウントできるようにします。
</p>

<p>
パフォーマンスを改善するのに多くのユーザーはマウントオプションとして
noatimeオプションを付け加えたいと考えることがあります。
アクセス時間が記録されないので、その結果はより高速なシステムになります(一般的にその記録はほとんど必要ありません)。
</p>

<p>
<path>/etc/fstab</path>を再チェックして、保存・終了して次に進んでください。
</p>

</body>
</subsection>
</section>
<section>
<title>ネットワーク情報</title>
<subsection>
<title>ホスト名、ドメイン名等</title>
<body>

<p>
ユーザーが決めなければならない選択の一つは自分のPCの名前です。至極簡単に思えますが<e>多くの</e>ユーザーは自分のLinux-pcに適当な名前を見付けるのに苦労してます。事を早く進めるために、選んだ名前は後で変更できることを知っておいてください。判りやすいように、ここでは単にマシンを<c>tux</c>、ドメイン名を<c>homenetwork</c>と呼ぶことにします。
</p>

<pre caption="ホスト名を設定">
# <i>nano -w /etc/conf.d/hostname</i>
   
<comment>(hostname変数に自分のホスト名を設定してください)</comment>
hostname="<i>tux</i>"
</pre>

<p>
次に、<e>もし</e>ドメイン名が必要なら、<path>/etc/conf.d/net</path>に設定します。
ISPやネットワーク管理者からそう言われているか、DHCPサーバは持っておらずDNSサーバを持っているときのみドメインが必要になります。
もしネットワークにつなげるときDHCPの設定を行っていれば、DNSやドメイン名に悩む必要はありません。
</p>

<pre caption="domain名を設定">
# <i>nano -w /etc/conf.d/net</i>
   
<comment>(dns_domain変数に自分のドメイン名を設定してください)</comment>
dns_domain_lo="<i>homenetwork</i>"
</pre>

<note>
ドメイン名を設定しないことを選択した場合、<path>/etc/issue</path>を編集することで、ログイン画面の"This is hostname.(none)"というメッセージを取り除くことができます。
そのファイルから文字列<c>.\O</c>を削除するだけです。
</note>

<p>
もしNISドメインがあれば(これについてわからなければ、それが無いということです)、それも定義しなければなりません。
</p>

<pre caption="NISドメイン名を設定">
# <i>nano -w /etc/conf.d/net</i>
   
<comment>(nis_domain変数に自分のNISドメイン名を設定してください)</comment>
nis_domain_lo="<i>my-nisdomain</i>"
</pre>

<note>
DNSとNISの設定に関する情報がもっと欲しい場合は、<c>bzless</c>を使って<path>/usr/share/doc/openrc-*/net.example.bz2</path>の例を読んでみてください。
DNS/NISの設定管理を楽にするため、<c>openresolv</c>をemergeしてもよいでしょう。
</note>

</body>
</subsection>
<subsection>
<title>ネットワークを設定する</title>
<body>

<p>
「ねえ、もうそれは済んでるんだけど」って気持ちになる前に、Gentooのインストールの初めに設定したネットワークは単にインストール用のものだったことを思い出してください。今ここで自分のGentooシステムに永続的なネットワーク設定をしていきましょう。
</p>

<note>
bonding、ブリッジ、802.1Q VLANや無線ネットワークなどの高度な話題を含むもっと詳しい情報は<uri link="?part=4">Gentooネットワーク設定</uri>セクションで扱っています。
</note>

<p>
全てのネットワーク情報は<path>/etc/conf.d/net</path>に集められます。このファイルでは単純な構文が使われているのですが、もしネットワークを手動で設定する方法を知らなれば一見しただけではわからないでしょう。でも恐がらなくてもいいですよ。全て説明しますから。<path>/usr/share/doc/openrc-*/net.example.bz2</path>には様々な設定と多くのコメントつきの例があります。
</p>

<p>
DHCPは標準で使用されています。
DHCPを動作させるためには、DHCPクライアントをインストールする必要があります。
これについては<uri link="?part=1&amp;chap=9#networking-tools">必要なシステムツールをインストールする</uri>に記述されています。
忘れずにDHCPクライアントのインストールしてください。
</p>

<p>
もし特定のDHCPのオプションが必要だったり、絶対にDHCPを使いたくなかったりして自分のネットワーク接続の設定が必要ならば、好みのエディターで<path>/etc/conf.d/net</path>を開いてください(この例では<c>nano</c>が使われています)。
</p>

<pre caption="編集のために/etc/conf.d/netを開く">
# <i>nano -w /etc/conf.d/net</i>
</pre>

<p>
下記のファイルを見て下さい。
</p>

<pre caption="Default /etc/conf.d/net">
# This blank configuration will automatically use DHCP for any net.*
# scripts in /etc/init.d.  To create a more complete configuration,
# please review /usr/share/doc/openrc-*/net.example.bz2 and save
# your configuration in /etc/conf.d/net (this file :]!).
</pre>

<p>
自身のIPアドレス、ネットマスク、ゲートウェイを入れるには、<c>config_eth0</c>と<c>routes_eth0</c>の両方を設定する必要があります。
</p>

<pre caption="eth0のIP情報を手動で設定する">
config_eth0="192.168.0.2 netmask 255.255.255.0 brd 192.168.0.255"
routes_eth0="default via 192.168.0.1"
</pre>

<p>
DHCPを使用するなら、<c>config_eth0</c>を設定してください。
</p>

<pre caption="eth0のIPを自動で取得する">
config_eth0="dhcp"
</pre>

<p>
全ての有効なオプション項目は<path>/usr/share/doc/openrc-*/net.example.bz2</path>を読んでください。
あなたの DHCP クライアントのmanページも読み、特別なDHCPオプションが必要かどうか確認してください。
</p>

<p>
もしいくつかのネットワークインターフェイスがあるなら、<c>config_eth1</c>、<c>config_eth2</c>のように上記ステップを繰り返してください。
</p>

<p>
さあ設定を保存・終了して次に進みましょう。
</p>

</body>
</subsection>
<subsection>
<title>ブート時に自動でネットワークを始動させる</title>
<body>

<p>
ブート時にネットワークインターフェースを有効にさせるには、それぞれのスクリプトをdefaultのランレベルに追加する必要があります。
</p>

<pre caption="defaultのランレベルにnet.eth0を追加">
# <i>cd /etc/init.d</i>
# <i>ln -s net.lo net.eth0</i>
# <i>rc-update add net.eth0 default</i>
</pre>

<p>
もしいくつかのネットワークインターフェイスがあるなら、適当な<path>net.eth1</path>、<path>net.eth2</path>等の為に起動スクリプトを作成する必要があります。<path>net.eth0</path>の時と同様に作成してください。
</p>

</body>
</subsection>
<subsection>
<title>ネットワーク情報を書き留める</title>
<body>

<p>
さてネットワークの情報に関してLinuxシステムに知らせる必要があります。これは<path>/etc/hosts</path>に定義され、自分のネームサーバーでは解決されないホストの為のホスト名とIPアドレスの解決に役立ちます。
これを自分のシステムに定義する必要があります。
自分自身で内部ネットワーク向けのDNSを設定したくない場合は、
ネットワークに存在する、他のシステムも定義してもよいでしょう。
</p>

<pre caption="/etc/hostsを開く">
# <i>nano -w /etc/hosts</i>
</pre>

<pre caption="ネットワーク情報を書き込む">
<comment>(これは現在のシステムを定義しています)</comment>
127.0.0.1     tux.homenetwork tux localhost

<comment>(自分のネットワークで、以下のように定義した固定IPを持つ必要がある、
別のシステムを定義します)</comment>
192.168.0.5   jenny.homenetwork jenny
192.168.0.6   benny.homenetwork benny
</pre>

<p>
保存・終了して次へ進みましょう。
</p>

<p test="func:keyval('arch')='AMD64' or func:keyval('arch')='x86' or substring(func:keyval('arch'),1,3)='PPC'">
もしPCMCIAが無ければ、<uri link="#sysinfo">システム情報</uri>に進むことができます。
PCMCIAユーザーは続くPCMCIAの項目を読んでください。
</p>

</body>
</subsection>
<subsection test="func:keyval('arch')='AMD64' or func:keyval('arch')='x86' or substring(func:keyval('arch'),1,3)='PPC'">
<title>自由選択:PCMCIAを作動させる</title>
<body>

<p>
PCMCIAユーザーは最初に<c>pcmciautils</c>パッケージをインストールしなければなりません。</p>

<pre caption="pcmciautilsのインストール">
# <i>emerge pcmciautils</i>
</pre>

<p>
<c>pcmcia-cs</c>がインストールされたら、<c>pcmcia</c>スクリプトを<e>default</e>のランレベルに追加します。
</p>

<pre caption="pcmciaスクリプトをdefaultのランレベルに追加">
# <i>rc-update add pcmcia default</i>
</pre>

</body>
</subsection>
</section>
<section id="sysinfo">
<title>システム情報</title>
<subsection>
<title>rootのパスワード</title>
<body>

<p>
最初にrootのパスワードを入力して設定します。
</p>

<pre caption="rootのパスワードを設定">
# <i>passwd</i>
</pre>

</body>
</subsection>
<subsection>
<title>システム情報</title>
<body>

<p>
Gentooでは<path>/etc/rc.conf</path>を一般的なシステム全般の設定として使用します。<path>/etc/rc.conf</path>を開いて、その中のコメントを読んで楽しんでください。:)
</p>

<pre caption="/etc/rc.confを開く">
# <i>nano -w /etc/rc.conf</i>
</pre>

<p>
<path>/etc/rc.conf</path>の設定が終われば、保存・終了してください。
</p>

<p>
見て判るように、このファイルには必要な設定の値を決めるのに役立つ良いコメントがされてます。

ユニコードを使って自分のシステムを設定し、標準のエディターとディスプレイマネージャー(gdmやkdmのような)を決める事ができます。
</p>
   
<p>
Gentooではキーボード設定を扱うのには<path>/etc/conf.d/keymaps</path>を使います。自分のキーボードを設定するにはこのファイルを編集してください。
</p>

<pre caption="/etc/conf.d/keymapsを開く">
 # <i>nano -w /etc/conf.d/keymaps</i>
</pre>
	    
<p>
<c>keymap</c>の設定には特に注意してください。もし間違った<c>keymap</c>を選ぶとキーボードをタイプするときにとんでもなく変な結果になるでしょう。
</p>

<note test="substring(func:keyval('arch'),1,3)='PPC'">
PPCではほとんどのシステムでx86キーマップが使われます。
</note>

<p>
<path>/etc/conf.d/keymaps</path>の設定が終われば、保存・終了してください。
</p>

<p>
Gentooではクロックオプションの設定には<path>/etc/conf.d/hwclock</path>を使います。必要に応じてこのファイルを編集してください。
</p>
     
<pre caption="/etc/conf.d/hwclockを開く">
# <i>nano -w /etc/conf.d/hwclock</i>
</pre>
 
<p>
ハードウェアクロックにUTCを使っていないのなら、<c>clock="local"</c>をこのファイルに追加する必要があります。
さもなければ、いくらか時間がずれてしまうでしょう。
</p>

<p>
<path>/etc/conf.d/hwclock</path>の設定が終われば、保存・終了してください。
</p>

<p>
さらに<c>sys-libs/timezone-data</c>パッケージを更新すると、自動的に<path>/etc/localtime</path>がアップデートされるよう、
さきほど<path>/etc/localtime</path>へコピーしたタイムゾーンを<path>/etc/timezon</path>に書くべきです。
例えば、もしタイムゾーンにGMTを使用しているとするなら、<c>GMT</c>と<path>/etc/timezon</path>に書きます。
</p>

<p test="not(func:keyval('arch')='PPC64')">
IBM PPC64のシステム上にGentooをインストールしていなければ 、<uri link="?part=1&amp;chap=9">必要なシステムツールをインストールする</uri>に進んでください。
</p>
      
</body>
</subsection>
<subsection test="func:keyval('arch')='PPC64'">
<title>コンソールを設定する</title>
<body>
	        
<p>
もし仮想コンソールを使っているなら、仮想コンソールでログインプロンプトを表示させるために<path>/etc/inittab</path>内の適切な行のコメントを外さなくてはなりません。
</p>
	     
<pre caption="/etc/inittabのhvcもしくはhvsiサポートを有効にする">
hvc0:12345:respawn:/sbin/agetty -L 9600 hvc0
hvsi:12345:respawn:/sbin/agetty -L 19200 hvsi0
</pre>

<p>
<path>/etc/securetty</path>に適切なコンソール名が挙げられているかも確認しなければなりません。
</p>
	 
<p>
では、<uri link="?part=1&amp;chap=9">必要なシステムツールをインストールする</uri>に進みましょう。
</p>

</body>
</subsection>
</section>
</sections>
