<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ja/handbook/hb-install-ppc-bootloader.xml,v 1.3 2007/07/13 08:40:58 nightmorph Exp $ -->

<!-- Original revision: 1.26 -->
<!-- Translater: Yuta SATOH -->

<sections>

<version>2.4</version>
<date>2005-05-12</date>

<section>
<title>ブートローダの選択</title>
<subsection>
<title>はじめに</title>
<body>

<p>
さて、カーネルを設定し、コンパイルし、そして必要なシステムの設定ファイルも適切に編集したので、システムを起動するときにカーネルを立ち上げるプログラムをインストールするときが来ました。そのようなプログラムは、<e>ブートローダ</e>と呼ばれています。けれども始める前に、あなたが何を選択するべきか検討しましょう…。
</p>

<p>
いくつかのブートローダがLinux/PPC用にあります。<uri link="#yaboot">yaboot</uri>(NewWorldのAppleとIBMマシン用)と<uri link="#bootx">BootX</uri>(OldWorldのAppleマシン用)です。Pegasosはブートローダを必要としませんが、我々はSmartFirmwareブートメニューを作成するために<uri link="#bootcreator">BootCreator</uri>を含めました。
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>一般的な選択: yabootを使用する</title>
<subsection>
<title>はじめに</title>
<body>

<impo>
yabootはNewWorldのAppleとIBMマシンでのみ使うことができます!
</impo>

<p>
最初にブートローダをインストールするときに必要になる<path>/dev</path>ファイルを作成しなければなりません。これは、インストールCDから<path>/dev</path>ファイルシステムを「bind」マッピングを行うことでできます。
</p>

<pre caption="/devファイルシステムをBindマウントする">
# <i>exit </i> # chroot環境から抜けます
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>
    
<p>
システムにyabootを設定する方法が2つあります。yabootに含まれている<c>yabootconfig</c>を使うことができます。また、何らかの理由のために、自動的に<path>/etc/yaboot.conf</path>を設定するための<c>yabootconfig</c>を実行したくないか、G5(<c>yabootconfig</c>が常に動作するとは限りません)にGentooをインストールしているならば、既にシステムにインストールされたサンプルファイルを編集することができます。 
</p>

<note>
もし、genkernelを使っているなら、yaboot.confファイルを編集する必要があるかもしれません。genkernelのebuildによって与えられた引数はカーネルイメージの部分にオプションとして加える必要があります。yaboot.confの適切な項目は以下の通りです。
</note>

<pre caption="ブート引数をyaboot.confに追加します">
<comment>#################
## 複数のカーネルまたは起動オプションのセットを持っているならば、この節を複写
## することができます。2.6.9をあなたのカーネルのバージョンに置換してください。
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/ram0		<comment># もしgenkernelを使っているなら、ここは/dev/ram0です。</comment>
  partition=3
  sysmap=/boot/System.map-2.6.9
  append="real_root=/dev/hda3 init=/linuxrc"	<comment># この行に引数を追加します。</comment>
  read-only
<comment>##################</comment>
</pre>

<ul>
  <li><uri link="#yabootconfig">一般的な選択: yabootconfigを使用する</uri></li>
  <li>
    <uri link="#manual_yaboot">もう一つの選択: 手動でyabootを構成する</uri>
  </li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig">
<title>一般的な選択: yabootconfigを使用する</title>
<body>

<p>
<c>yabootconfig</c>はマシンのパーティションを自動検出し、Linux、Mac OS、およびMac OS Xによるデュアルおよびトリプルブートの組み合わせを設定します。
</p>

<p>
<c>yabootconfig</c>を使用するために、ドライブはApple_Bootstrapパーティションを持っていなければならず、<path>/etc/fstab</path>はLinuxパーティションで設定されなければなりません。これらの両方は既に上記のステップで行われているべきです。手始めに、最新の<c>yaboot</c>がインストールされているか確認してください。
</p>

<pre caption = "GRPを使ってyabootをインストールする">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
さあ、chroot環境から抜けて、<c>yabootconfig --chroot /mnt/gentoo</c>を実行してください。プログラムが動作し、bootstrapパーティションの位置を確認するでしょう。それが正しいならば、<c>Y</c>を入力してください。もし、そうでなければ<path>/etc/fstab</path>を再確認してください。yabootconfigはその時システムの構成を詳しく調べて<path>/etc/yaboot.conf</path>を作成し、<c>mkofboot</c>を実行するでしょう。<c>mkofboot</c>はApple_Bootstrapパーティションをフォーマットし、そこにyabootの構成ファイルをインストールするために使用されます。これが終わったら、再びchroot環境に入ってください。
</p>

<pre caption="chroot環境に入る">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
<path>/etc/yaboot.conf</path>の内容を確認したいかもしれません。<path>/etc/yaboot.conf</path>に(既定で起動するOSの設定のような)変更を加える場合は、Apple_Bootstrapパーティションに変更を適用する<c>ybin -v</c>を再実行するのを忘れないでください。
</p>

<p>
それでは、<uri link="#reboot">システムの再起動</uri>へ進みましょう。
</p>

</body>
</subsection>
<subsection id="manual_yaboot">
<title>もう一つの選択: 手動でyabootを構成する</title>
<body>

<p>
最初に、最新の<c>yaboot</c>がシステムにインストールされているか確認してください。
</p>

<pre caption = "yabootをインストールする">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
以下に、あなたは完成した<path>yaboot.conf</path>ファイルを見つけることでしょう。それを思いのままに変更してください。G5ユーザは、マシンのディスクがシリアルATAディスクであることを意識するべきです。LinuxカーネルがSCSIディスクとして認識するからです(従って、<path>/dev/sda</path>を<path>/dev/hda</path>の代わりに使ってください)。
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## 詳細を得るために"man yaboot.conf"を実行してください。理解するまで変更しないでください!!
## 同様に/usr/share/doc/yaboot/examplesの構成例を見てください。
##
## デュアルブートメニューのために、下記の1つ以上を追加してください。
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## bootstrapパーティション:</comment>

boot=/dev/hda2

<comment>## ofbootはbootstrapパーティションを指定するOpen Firmwareのやり方です。
## これが定義されていないと、yabootはG5と一部のG4において(必要な引数を
## mkofbootやybinプログラムに渡さない限り)失敗します。
## hd:Xは/dev/sdaX(または/dev/hdaX)を意味しています。
## 
## G5ユーザはこの行をコメントアウトすべきです!!

#ofboot=hd:2

##hd:はOpen Firmwareがhda(訳注:またはsda)を要求します</comment>
device=hd:

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## 複数のカーネルまたは起動オプションのセットを持っているならば、この節を複写
## することができます。2.6.9をあなたのカーネルのバージョンに置換してください。
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/hda3
  partition=3
  sysmap=/boot/System.map-2.6.9
  read-only
<comment>##################

## G5ユーザと一部のG4ユーザは例で使われている値の代わりに次のように設定すべきです。
##   macos=hd:13
##   macosx=hd:12</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
いったん<path>yaboot.conf</path>があなたの望むように設定したら、bootstrapパーティションに設定をインストールするために<c>mkofboot -v</c>を実行します。<e>これを忘れないでください!</e> <c>mkofboot</c>が、新しいファイルシステムを作成するか尋ねた時には承認してください。 
</p>

<p>
全てがうまくいき、上記のサンプルと同じオプションを持っている場合、再起動後、簡素で5つの項目のブートメニューに出会うでしょう。もし、後でyabootの設定ファイルを更新するならば、bootstrapパーティションを更新するために<c>ybin -v</c>を実行する必要があるでしょう。<c>mkofboot</c>はただ初期設定のために使われます。
</p>

<p>
yabootの詳細については、<uri link="http://penguinppc.org/bootloaders/yaboot">yaboot project</uri>を見てください。ひとまず、<uri link="#reboot">システムの再起動</uri>へ進んでインストールを続行しましょう。
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>もう一つの選択: BootXを使用する</title>
<body>

<impo>
BootXはOldWorldのAppleマシンでのみ使うことができます!
</impo>

<p>
BootXがMacOSの中からLinuxをブートするので、カーネルをLinuxパーティションからMacOSパーティションにコピーする必要があります。最初に、chroot環境の外でMacOSパーティションをマウントします。<c>mac-fdisk -l</c>を使ってMacOSパーティションの番号を探してください(ここではsda6を例として使います)。パーティションがマウントされたら、BootXがカーネルを見つけられるように、システムフォルダにカーネルをコピーします。
</p>

<pre caption="カーネルをMacOSパーティションにコピーします">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux "/mnt/mac/System Folder/Linux Kernels"</i>
</pre>

<p>
もし、genkernelを使ったのなら、カーネルは別のところにあります。そして、initrdも同様にコピーする必要があるでしょう。
</p>

<pre caption="Genkernelが作ったカーネルとinitrdをMacOSパーティションにコピーします">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initrd-* "/mnt/mac/System Folder"</i>
</pre>

<p>
カーネルをコピーしたら、マウントしたすべてのパーティションをアンマウントすることができます。そして、待ちに待った次のコマンドを入力しましょう: <c>reboot</c>
</p>

<pre caption="すべてのパーティションをアンマウントし再起動する">
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
もちろん、すべてのブート可能なメディアを取り出すことを忘れないでください。今回は、MacOSをブートする必要があります。
</p>

<p>
さあ、MacOSでマシンが起動したら、BootXコントロールパネルを開いてください。もしgenkernelを使っていないのなら、<c>Options</c>を選択し、<c>Used specified RAM disk</c>のチェックを外してください。genkernelを使ったのなら、間違いなくgenkernelが作ったinitrdをインストールCDのinitrdの代わりに選択してください。genkernelを使っていないのなら、マシンのLinuxルートディスクとパーティションを指定するオプションがあります。適切な値でこれらを埋めてください。カーネルの設定によっては、ビデオオプションなどインストールCDをブートするために使った設定のいくつかを付加する必要があるかもしれません。
</p>

<p>
BootXは起動時にLinuxを始めるように設定することができます。これを選択すると、コンピュータはMacOSをブートし、起動中にBootXがLinuxを読み込み、スタートさせるでしょう。詳細については、<uri link="http://penguinppc.org/bootloaders/bootx/">BootX home</uri>をご覧ください。
</p>

<p>
それでは、もう一度再起動してLinuxを起動してください。それから、<uri link="?part=1&amp;chap=11">Gentooインストールの終わり</uri>へ進みましょう。
</p>

</body>
</section>
<section id="bootcreator">
<title>もう一つの選択: BootCreator</title>
<body>

<impo>
BootCreatorはPegasosのためにForthで書かれた素敵なSmartFirmwareブートメニューを作成するでしょう。
</impo>

<p>
最初に、最新の<c>bootcreator</c>がシステムにインストールされているか確認してください。
</p>

<pre caption = "bootcreatorをインストールする">
# <i>emerge --usepkg --update bootcreator</i>
</pre>

<p>
さあ、<path>/etc/bootmenu</path>に<path>/etc/bootmenu.example</path>をコピーし、必要なら編集してください。
</p>

<pre caption = "bootcreatorの設定ファイルを編集する">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
以下に、あなたは完成した<path>/etc/bootmenu</path>設定ファイルを見つけることでしょう。それを思いのままに変更してください。
</p>

<pre caption = "bootcreator設定ファイル">
<comment>#
# bootcreator 1.1用の記述ファイルの例
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux 2.6.10 (Normal)
ide:0 linux-2.6.10 video=radeonfb:1024x768@70 root=/dev/hda3

</pre>

<p>
最終的に、<path>bootmenu</path>はForthに変換されなければなりません。そして、SmartFirmwareが読めるように、それをbootパーティションにコピーします。そのためには、<c>bootcreator</c>を呼び出さなければなりません。
</p>

<pre caption = "bootmenuをインストールする">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
リブートするとき、必ずSmartFirmwareの設定を見てください。<path>menu</path>はデフォルトで読み込まれるであろうファイルです。
</note>

<p>
ひとまず、<uri link="#reboot">システムの再起動</uri>へ進んでインストールを続行しましょう。
</p>


</body>
</section>
<section id="reboot">
<title>システムの再起動</title>
<subsection>
<body>

<p>
chroot環境を抜けて、マウントしたすべてのパーティションをアンマウントしてください。そして、待ちに待った次のコマンドを入力しましょう: <c>reboot</c>
</p>

<pre caption="chrootを抜けて、すべてのパーティションをアンマウントし再起動する">
# <i>exit</i>
livecd ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo</i>
livecd ~# <i>reboot</i>
</pre>

<p>
再起動したら、<uri link="?part=1&amp;chap=11">Gentooインストールの終わり</uri>へ進んでインストールを完了させましょう。
</p>

</body>
</subsection>
</section>
</sections>
