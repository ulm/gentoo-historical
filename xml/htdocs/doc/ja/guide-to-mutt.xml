<?xml version='1.0' encoding="UTF-8"?>


<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/ja/guide-to-mutt.xml">
<title>Mutt e-mail クイックスタート・ガイド</title>
<author title="Author"><mail link="mikpolniak@adelphia.net">Mike Polniak</mail></author>
<author title="Editor"><mail link="antifa@gentoo.org">Ken Nowack</mail></author>
<author title="翻訳"><mail link="so1@lorenz.scitec.kobe-u.ac.jp">津田　宗一郎</mail></author>


<abstract>このガイドはe-mail用の強力なコマンドライン･ツールである、fetchmail、procmail、 Mutt、そしてnbsmtpについて解説します。</abstract>

<license/>

<version>1.0</version>
<date>2 May 2003</date>
<!-- Original revision: 1.4 -->

<chapter>
<title>はじめに：e-mailとは</title>
<section>
<body>

<p>もしあなたが綺麗なグラフィカル・ユーザーインターフェースを使ったe-mailクライアントが好きではなかったり、どれが合っているか決める前に他のe-mailクライアントを試してみようとしているところだったりするのならば、これらの強力なコマンドライン・ツールたちを始めるのに簡単な方法を紹介しましょう。</p>

<p><b>fetchmail->procmail->mutt->smtp</b></p>

<p>これらのプログラムは強力で、カスタマイズ性が優れているだけでなく、小さく、効率的です。一度このe-mailシステムを立ち上げて走らせてみれば、あなたは可能な事の多さに驚くでしょう。</p>

<p>これはクイック・スタートガイドなので、sendmail、postfixやeximなどのメール・トランスファー・エージェント（MTA）については省略します。つまり、複雑なMTAの設定はしていないということです。また、メール・サービスに25番ポートを用いる方法も省略します。</p>

<p>なぜ省略しても構わないかというと、fetchmailが取ってくるメールをポート25番に転送することなく直接メール・デリバリー・エージェント(MDA)に渡すことができるからです。つまり、私たちは単純なよくある外へのメールの配送に複雑なMTAを使う必要はないというわけです。</p>

<p>以下がe-mailシステムを走らせるために必要なプログラムです。</p>

<pre>
# <i>emerge fetchmail procmail mutt nbsmtp</i>
</pre> 

<p>さて、今からファイルを設定するためのたった４つの簡単なステップをふむだけで、全く新しいe-mailシステムを走らせることができます。</p>


<impo>各ステップが終わった後、セットアップが正しいかを確かめるためにテストするとよいでしょう。そうすれば、全ステップが終わった時点で、完璧に動作するe-mailシステムが手に入ります。</impo>

</body>
</section>
</chapter>


<chapter>
<title>fetchmail</title>  
<section>
<body>

<p>fetchmailはリモート・サーバー群からメールを取ってきて、ローカル・マシンの配送システムに渡します。そのために、自分のホーム・ディレクトリに以下の例のような<path>.fetchmailrc</path>ファイルを設定しておきましょう：</p>

<pre caption=".fetchmailrc　サンプル">
<i>poll mail.myisp.net  protocol pop3 user "myname" password "mypasswd"</i> 
</pre>

<p>一旦、<path>.fetchmailrc</path> ファイルを作成したら、chmodコマンドでそのファイルのパーミッションを変更しておく必要があります。ファイルはファイル所有者のみが閲覧可能であるようにしておかなければなりません。以下のコマンドでパーミッションを設定します：</p>

<pre>
# <i>chmod 710 .fetchmailrc</i>
</pre>

<p>動作状況を見たいのならば、verboseモード(-v)を使います。すべてのメッセージを取ってくるには -a を使います。また、fetchmailにメールをprocmailに送るように指示するには -m オプションを使わなければいけません。</p>

<warn>テストの間は、うまくいかなくてもう一度メールを取ってくる必要になった時のことを考えて、リモート・サーバーにメールを置いておくためのオプション、-kをfetchmailに渡しておくといいでしょう。</warn> 


<p>さて、fetchmailが動いているのを見てみましょう！</p>

<pre caption="fetchmail テスト #1">
# <i>fetchmail -akv -m "/usr/bin/procmail -d %T"</i> 
</pre>

<p>正常に動作するメール・システムが出来たら、それをcronのジョブに追加したり、gkrellmなどのモニターにおいておくことができます。fetchmailはポーリング間隔を秒単位で指定するデーモン・モードで走らせることもできます。</p>

</body>
</section>
</chapter>

<chapter>
<title>procmail</title>
<section>  
<body>

<p>procmailはfetchmailによって転送されてきたメールをフィルターする役割を持ちます。また、Mutt(あなたのメールクライアント)が読むことのできるメールボックスにメールを届けるMDAとしても働きます。</p>

<p>procmailを使うには、ホームディレクトリに<path>.procmailrc</path>ファイルを作る必要があります。クイック・スタート・ガイドという目的から、今はgentooの3つのメーリングリストをメールを、<e>gentoo-dev、gentoo-user</e>、<e>gentoo-announce</e>、というメールボックスへとフィルタリングする簡単な<path>.procmailrc</path>を用います。</p>

<note>procmailのフィルター・ルールはレシピと呼ばれており、ここではいくつかのスパムをフィルターするレシピも含んでいます。</note>

<pre caption="サンプル .procmailrc">
MAILDIR=$HOME/MuttMail                ##このディレクトリが存在するのを確認しましょう
LOGFILE=$HOME/.procmaillog
LOGABSTRACT=no
#VERBOSE=on...これはデバッグのために使われます
VERBOSE=off
FORMAIL=/usr/bin/formail
NL="
"
##レシピの行は:0から始まります
##レシピの行にはコメントを入れてはいけません
##あるレシピを無効にするには！を入れます
##条件行は*から始まり、正規表現を用います
##各条件はAND条件で評価され、*の後にあるものはすべて直接egrepに渡されます
##条件式のすぐ後に一つのアクションを記した行が続きます。この場合はメールボックスの名前です

#formailを使ってフィルタリングする
:0 Whc: .msgid.lock
| $FORMAIL -D 16384 .msgid.cache

:0 a
$MAILDIR/duplicates

#これらの人からのメールは常に受け入れる
:0 
* ^From:.*(craig\@hotmail|renee\@local.com)
$MAILDIR/friends 

#スパムの除去
:0  
* ^Subject:.*(credit|cash|money|debt|sex|sale|loan)
$MAILDIR/spam

#HTMLメールは受け入れない
:0
* ^Content-Type:.*html
$MAILDIR/junk

#MLのメールをメールボックスに入れる
:0 
* ^List-Id:.*gentoo-user
gentoo-user

:0 
* ^List-Id:.*gentoo-dev
gentoo-dev

:0 
* ^List-Id:.*gentoo-announce
gentoo-announce

#その他のgentooからのメールを取ってくる
:0 
* ^From:.*gentoo.org
gentoo

:0 
* ^From:.*@freshmeat\.net
freshmeat

###################################
# 最後のルール: 受信したメールは  #
# デフォルトのボックスへ入れる    #  
###################################
:0 
* .*
default

# End of file
</pre>

<note>procmailがaction lineにある名前をつかって必要とされるすべてのメールボックスを作ってくれるので、MAILDIR <path>$HOME/MuttMail</path>を作るだけで構いません。有用なリンクとしては<uri>http://www.procmail.org/</uri>を訪れてみてください。 </note>

<p>ここで、1つ目のステップでテストしたように、再びfetcmailコマンドを動かしてみることで<path>.procmailrc</path>のテストができます。-k オプションはやり直した時に取ってこれるよう、すべてのメールをリモート・サーバーに残しておくというオプションであることを覚えておいてください。</p>


 <pre caption="procmail テスト #1">
# <i>fetchmail -akv -m "/usr/bin/procmail -d %T"</i> 
</pre>

<p>さて、fetchmailとprocmailが動いたところで、<path>$HOME/MuttMail</path>へ移動してみて、<c>less</c>やファイル・マネージャーでメッセージを見てみましょう
</p>

</body>
</section>
</chapter>

<chapter>
<title>Mutt e-mail クライアント</title>
<section>
<body>

<p>Muttはe-mailを読んだり、書いたりするために使われます。強力でカスタマイズ性に優れているだけでなく、小さく、効率的です。</p>

<p>Muttは4種類のメールボックスの形式(mbox、 MMDF、 MH と Maildir)で読み書きするのをサポートしています。 メールボックスのタイプは自動的に検出されます。今回はメールボックスのすべてのメッセージが1つのファイルに保管されるmbox形式を使うことにします。</p>

<p>MuttはリモートIMAPサーバーにあるフォルダーで作業する機能も持っています。MuttマニュアルやMuttのウェブサイト<url>http://www.mutt.org/</url>のセクション4.11のIMAPサポートを見てください</p>

<p>1つ目のステップでMuttをemergeしたとき、その設定ファイルは<path>/etc/mutt/Muttrc</path>にインストールされます。あなたはホーム・ディレクトリに<path>.muttrc</path>ファイルを作る必要があります。</p>

<pre caption="サンプル .muttrc">
<codenote>/usr/share/doc/mutt*にある素晴らしいMuttマニュアルを必ず読むようにしてください。</codenote>
<codenote>ここにあるすべての設定は/etc/mutt/Muttrcにあるシステム設定を無効にします。</codenote>

# <i>cp /etc/mutt/Muttrc ~/.muttrc</i>
# <i>nano -w .muttrc</i>
set pager_context=1                        
set pager_index_lines=6                 #ページャーにミニ・インデックスを表示する
set menu_scroll  
set pgp_verify_sig=no                   #ページャーにpgpを表示しない
set status_on_top                       #ステータス行を一番上に持ってくる
set sort=threads                        #インデックスのメッセージ・スレッドでソートする

set status_format=" %r %b %f %n      Del %d      Msgs %m %l %> (%P)"
set pager_format="%-10.10i %[!%a %b %d %R]"
set date_format="!%H:%M %a %d %b     "
set index_format="%4C %Z %[%b%d] %-15.15F %s"
set folder_format="%2C %t %8s %d %N %f"

#set sendmail="/usr/bin/nbsmtp -d isp.net -h smtp.isp.net -f yourname@isp.net"

#set from="default-mailaddress"         #Fromアドレスの指定
#set realname="myname"

set record="$HOME/MuttMail/sent"        #送信メールはここに保存されます
set delete=yes                          #確認無しに消去する
set include=yes				#返信時にメッセージを引用する
set fast_reply=yes			#返信時の受取人とsubjectの入力プロンプトを省略
set beep=no				#うるさくしない
set markers=no				#折り返される行に＋を表示しない
set confirmappend=no			#=keepにメールを保存する時に確認しない
set to_chars=" +TCF"                    #購読しているMLの表示はしない

set folder = $HOME/MuttMail
mailboxes =gentoo-user
mailboxes =gentoo-dev
mailboxes =gentoo-announce
mailboxes =gentoo   
mailboxes =freshmeat
mailboxes =duplicates
mailboxes =default  
mailboxes =sent     
mailboxes =friends  
mailboxes =junk
mailboxes =spam
mailboxes =keep

save-hook .* =keep                      #メールを保存しておくデフォルトのメールボックスは =keep です
subscribe gentoo-user gentoo-dev        #購読済みML

bind pager h display-toggle-weed	#hキーでヘッダを切り替える

# 古いURLメニューをシミュレートする
macro index \cb |urlview\n 'call urlview to extract URLs out of a message'
macro pager \cb |urlview\n 'call urlview to extract URLs out of a message'

#Gキーを押すことでfetchmailを起動する
macro index G "!fetchmail -a -m 'procmail -d %T'\r"
macro pager G "!fetchmail -a -m 'procmail -d %T'\r"  

#.muttrcを編集して、その後変更を適用するのに用いる。再起動の必要はありません
macro generic ,sm ":source $HOME/.muttrc\r"
macro generic \cj "!rxvt -bg wheat -e joe $HOME/.muttrc\r"

#メールを表示する時にデフォルトで取り除くヘッダ領域のリスト
#すべてを取り除くようにしておいてから、見たいものだけを表示させる
ignore *
unignore  Date To From: Subject X-Mailer Organization User-Agent
hdr_order Date From To Subject X-Mailer User-Agent Organization 

##あなたのMuttには色がついてますよね？
##下の設定は4段階の引用文についての設定です
##これらは/etc/mutt/Muttrcにあるシステム設定を上書きします

#color quoted green  default
color quoted1 magenta blue 
#color quoted2 yellow default
#color quoted3 red default   
#color signature cyan cyan   


#下の色の設定は/etc/mutt/Muttrc.colorからコピーしたものです
#もし/etc/mutt/Muttrcにデフォルトの色を使いたければコメントアウトしてください
# Je vois la vie en rose (人生がバラ色に見える）:-) 
color	hdrdefault	brightcyan	blue
color	header		brightwhite	blue "^from:"
color   header          brightwhite    	blue   "^subject:"

color   quoted          brightgreen     blue
color   signature       brightwhite	blue

color   indicator       blue	        green

color   error           red             black
mono    error           bold
color   status          black cyan
mono	status		bold
color   tree            yellow   	blue

color   tilde           brightmagenta   blue
color	body	brightwhite		blue	"[-a-z_0-9.]+@[-a-z_0-9.]+"
mono    body    bold                    "[-a-z_0-9.]+@[-a-z_0-9.]+"
color   body            brightyellow    black   "^Good signature"
mono    body            bold                    "^Good signature"
color   body            brightwhite     red     "^Bad signature from.*"
mono    body            bold                    "^Bad signature from.*"
color   normal          white		blue
color	message		green	black
color	attachment	brightgreen	blue

# End of file...でもまだまだ続くはず....:)
</pre>


<p>はっきり言っておきますが、これは単に<path>.muttrc</path>のサンプルの1つに過ぎません。例えばgpgのような、設定可能なオプションがまだたくさんあります。より多くの例やヘルプは、<uri>http://mutt.netliberte.org/</uri>を見てみて下さい。(訳注：日本語でのMuttに関する情報は、<url>http://www.emaillab.org/mutt/</url>などを参照するとよいかもしれません)</p>

<p>さて、<path>.muttrc</path>をテストしてみましょう。 </p>

<pre caption=".muttrcのテスト">
# <i>mutt -y</i>
</pre>

<p>こうすると、テスト2でfetchmailコマンドを実行したときに作ったMuttのメールボックスを表示して、メニュー付きのMuttを開くはずです。</p>

<p>Muttのメールボックスを操作するためのヘルプは？をタイプしてください。</p>

</body>
</section>
</chapter>

<chapter>
<title>SMTP</title>
<section>
<body>

<p>最後のステップは、メールをSMTPサーバに送るために使う'No-Brainer SMTP(非常に簡単なSMTP)'であるnbsmtpのセットアップです。この設定はいままでで一番簡単で、あなたの<path>.muttrc</path>に１つのエントリーを加えるだけです。</p>

<p>domain: あなたがnbsmtpに属しているように言って欲しいドメインです。これはほぼ間違いなくあなたのe-mailアドレスのドメインと同じです。</p>

<p>from@addr: あなたがnbsmtpに対し、メッセージがどこからきたのか言ってほしいと望むアドレスです。これはあなたのMUAの"From:"とは違っていることに注意してください。</p>

<p>host: これはあなたがメールを送るSMTPサーバーです。</p>

<pre caption="SMTPサポートの追加">
# <i>nano -w .muttrc</i>
set sendmail="/usr/bin/nbsmtp -d isp.net -h smtp.isp.net -f urname@isp.net"
</pre>

<p>さて、メッセージを送る準備が整いました。Muttのページャーかインデックスの画面で、<c>m</c>キーを押してあなたのメールアドレスに対して送るテストメールを作成しましょう。あなたが<path>.muttrc</path>に<i>editor=</i>を設定していない限り、Muttはメール作成エディターにEDITORやVISUALの値を用います。メールの作成が終わったならば、<c>y</c>を押してメールを送信します。エラーが無ければ、'sending mail'に続いて'New mail in =sent'が表示されることでしょう。</p>

<p><path>.muttrc</path>において、送信済みのメールを保管しておく場所に<i>set record="$HOME/MuttMail/sent"</i>を指定したことを思い出しましょう。</p>

<p>ようやくテストが完了したので、再びfetchmailコマンドを実行してすべてのメールを受信し、あなたが自分のe-mailアドレスに送ったメールが届いていることを確認しましょう。テストメッセージを見つけたならば、<c>h</c>キーを押してすべてのヘッダの表示に切り替え、完全なメール送信パスを確認しましょう。</p>

<note>たぶんあなたが追加したいと思われる、urlviewと呼ばれるもう1つのプログラムがあります。これはメッセージ・テキストの中からURLを取り出し、ブラウザへ送ってくれます。</note>

<pre>
# <i>emerge urlview</i> 
</pre>

<p>次に<path>/usr/share/doc/urlview*/</path>から設定ファイルをコピーすることで<path>~/.urlview</path>を作り、ブラウザ・コマンドを設定します。</p>

<p>あなたはすでに強力でカスタマイズ性に優れたメール・システムを手にしています。マニュアルを読み、Googleで<path>procmailrc</path>や<path>muttrc</path>を検索してみることでウェブ上の多くのユーザー設定ファイルを見つけてください。</p>

</body>
</section>
</chapter>
</guide>

