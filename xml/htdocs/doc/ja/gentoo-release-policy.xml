<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ja/gentoo-release-policy.xml,v 1.9 2003/11/16 21:46:40 nakano Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/ja/gentoo-release-policy.xml">
<title>Gentoo Linuxリリースポリシー</title>
<author title = "Author">
<mail link = "drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title = "Author"> 
<mail link = "avenj@gentoo.org">Jon Portnoy</mail></author> 
<author title = "Editor"><!-- zhen@gentoo.org -->
 John P. Davis
</author>
<author title = "翻訳">
<mail link = "konno.katsuyuki@nifty.com">今野勝之</mail></author>

<license/>

<version>1.2</version>
<date>11 July 2003</date>
<!-- Original revision: 1.11 -->

<abstract>Gentoo Linux公式リリースポリシー</abstract>

	<chapter>
		<title>最初に気になること</title>
		<section>
			<title>Gentoo Linuxのリリースプロセスとは何ですか？</title>
			<body>
			<p>Gentoo Linuxのリリースプロセスとは、新しいrelease candidate、または Gentoo Linuxの新しい公式リリースを作るために開発チームが使用する、明確に定義され、文書化された手順です。実際には、開発チームのメンバが関わるような、チームベースの共同作業が重要とされます。
			</p>
			</body>
		</section>

		<section>
			<title>Gentoo Linuxのリリースプロセスの「責任者」は誰ですか？</title>
			<body>
			<p>リリースプロセスはリリースコーディネータやrelengのチームが調整しているのですが、リリースプロセス自身はチームの取り組みとなります。
      作業のすべて、または大部分にでさえ責任を持つ人はいません。リリースコーディネータの責任は、ステージのtarball、GRPパッケージのビルドといった管理や品質評価テストの実施に合わせたリリースプロセスにおいて、現行のリリースの進行状況に遅れが出ないよう全体を管理するために、-core メーリングリストに定期的なアップデートを流すといったようなことを行うことでチーム全体が関わるようにすることです。
			</p>
			</body>
		</section>

		<section>
			<title>Gentoo Linuxのリリースプロセスの目標</title>
			<body>
			<ul>
			<li>release candidate、Gentoo Linuxのフルバージョンの予定どおりのリリース</li>

			<li>新しいリリースの厳密な品質評価テスト</li>

			<li>安定した変更点をリリースに取り入れる機会</li>

			<li>リリースプロセスを*チーム*プロセスとすること</li>

			<li>Gentoo Linuxの新しい公式バージョンが公開できる準備ができていることを保証する</li>
			</ul>
			</body>
		</section>
	</chapter>
	
	<chapter>
		<title>Gentoo Linuxのリリースプロセスはどのように取り組むのですか？</title>
		<section>
			<title>最初の決定</title>
			<body>
			<p>リリースプロセスは、新しいGentoo Linuxリリースの公式決定で始まります。この決定はトップレベルマネジメントチームによって行われ、彼らはその後以下の事柄を提示します。
			</p>
		        
			<ul>
			<li>全てのマイルストーン、デッドラインを含めた明確なリリースプロセス用のスケジュール</li> 

			<li>このリリースの明確な目標リスト（任意）</li>
			</ul>
		
			<p>
			リリースコーディネータはその後リリースプロセスの案内をし、必要なリリース基盤が整っているか、それぞれが関連して正常に機能しているかを確認します。その後リリースマネージャは、全ての開発者に対し、次フェーズの開始を知らせます。次フェーズはすぐに始まります。			</p>
			</body>
		</section>

		<section>
			<title>ビルドとテスト</title>
			<body>
			<p>このフェーズでは、アーキテクチャごとに割り当てられたビルダが、現行のPortageのスナップショットを用いて「汎用CPU」のステージのtarballをビルドし、ビルドに関係したバグを修正するため、バグのレポート／修正／創出をします。加えて、最初の品質を確認するテスタは、これらのステージを使い、実行中に見つかったバグをレポートします。
			</p>

			<p>そのステージのtarballで新しいバグが見つかり修正され、そのステージのtarballのリリースが集められます。品質評価のためにスカウトされたユーザや開発者がテストを始められるように、このステージのtarballはみんながアクセス可能なWebサイトに掲載されます。
			</p>

			<p>開始後1週間、「ビルドとテスト」フェーズは、*現行*のCVSの使用からCVS treeの公式スナップショットGENTOO_x.y_SNAP_YYYYMMDDABの使用に切り換えます。未解決のビルド／ランタイムの問題を解決することに力を注ぎます。バグフィックスされると新しいGENTOO_x.y_SNAP_YYYYMMDDABが（新しい日付で）作成され、バグフィックスされたステージのtarballを作成するために、この新しいスナップショットが使用されます。
			</p>

			<p>「ビルドとテスト」フェーズの開始後10日間に、次のリリースが公式リリースになるのか、それともrelease candidateになるのかについて決断されます。それぞれのアーキテクチャの開発リーダ、リリースコーディネータ、開発マネージャ、およびチーフアーキテクト全員、この問題について満場一致での決定となります。
			</p>

			<p>クオリティがよかったら、それはすなわち、リリースのための目標が達成されていて、際立った問題は解決済み、または適当な期間内に解決可能なものだということになりますから、その後次期リリースは公式リリースとなります。</p>

			<p>最新のスナップショットGENTOO_x.y_SNAP_YYYYMMDDABは、このリリースで使われます。このスナップショットから作成された一般的なステージのtarballを使って、次のフェーズが始まります。
			</p>
			</body>
		</section>

		<section>
			<title>リリースビルドとテスト</title>
			<body>

			<p>すぐに、GRPパッケージセットを含めた完全な新しいGentoo Linuxリリース、またはrelease candidateをビルドするために、大規模な分散共同作業での取り組みが始まります。release candidateの場合、（たとえばi686やもしかすると1つ以上のx86と言った）システムの小さなサブセットが、状況によっては「フル」ビルドの代わりに選ばれるかもしれません。このビルドプロセスの間、タイムリミット寸前のどんな言い逃れも取り除かれます。インストールドキュメントは、新規リリース用に修正されます。リリースアナウンスが書かれますが、まだ公開はされません。また、最終リリースバイナリの非公開の品質評価テストが、コンパイル終了と同時に始まります。これはリリース前の最終的な品質検査です。
			</p>

			<p>LiveCD作成やibiblioへのアップロードを含むこのフェーズ全体が、4日間かからずに終了します。</p>
			</body>
		</section>

		<section>
			<title>リリース</title>
			<body>
			
			<p>Gentoo Linuxのrelease candidate、または新しいバージョンがリリースされ、適切なところにアナウンスされます。</p>

			</body>
		</section>
	</chapter>
</guide>
