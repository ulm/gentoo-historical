<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/ja/java.xml">
<title>Gentoo Java ガイド</title>
<author title="Author and Editor">
<mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>
<author title="翻訳">
<mail link="ryuui-o@users.sourceforge.jp">大滝竜一</mail>
</author>

<abstract>
Gentoo における利用者、開発者のためのJava ドキュメント
</abstract>

<license/>

<version>0.1.2</version>
<date>September 4, 2002</date>
<!-- Original revision: 1.8 -->

<chapter>

<title>JDK/JRE のインストール方法</title>
<section>
<title>概要</title>
<body>
<p>Gentoo は多数の JDK/JRE を備えています。デフォルトは Blackdown の JDK/JRE の
組合せとなっています。これは登録などの手間のかかることをすること無く
自由に利用することができるためです。</p>

<note>kaffe は JRE/JDK の代用となります。 kaffe はおそらく私達のデフォルトになります。</note>

<p>Sun と IBM の JDK/JRE は一般的により高速です。しかし、入手するためには
ライセンス条項を読み同意する必要があるため面倒な手続きが必要です。
(IBM の場合、それに加えてユーザ登録しなくてはなりません)。</p>

<p>私たちの ebuild は Sun と IBM の JDK/JRE をどこでダウンロードするのかを知らせます。</p>
</body>
</section>

<section>
<title>Sun と IBM の JDK/JRE のインストール方法</title>
<body>
<p>あなたが <c>emerge sun-jdk-1.3.1</c> または <c>emerge 
ibm-jdk-1.3.1</c> を実行した場合、アーカイブそのものは
自分自身でダウンロードする必要があることを知らされるでしょう。
これはライセンス上の制限です。 Sun の JDK/JRE の場合、オンライン上の
ライセンス条項に同意しなければなりません。 IBM の JDK/JRE の場合、
ユーザ登録を行わなければなりません。
</p>

<note>sun-jdk-1.4.0 の場合も同様です。しかし、全てのパッケージが
Java 1.4 と一緒にうまく動作するわけではありません。ですから、ご自分の判断で
JDK 1.4.0 を利用してください。</note>

<p>指示されたファイルを <path>/usr/portage/distfiles</path>
へダウンロードしてください。
ダウンロードが終わった後、emerge コマンドを実行すると
<path>/opt</path> へ JDK/JRE をインストールします。
</p>
</body>
</section>
</chapter>

<chapter>
<title>JDK/JRE の設定</title>
<section>
<title>概要</title>
<body>
<p>次に示すようにちょっとした注意をすることにより、 Gentoo は
矛盾することなく複数の JDK と JRE をインストールしておくことができます。</p>

<p>あなたが管理者権限を持っているならば、<c>java-config</c> ツールを
使用することにより、システム全体のデフォルトを決めることができます。
また、通常のユーザも <c>java-config</c> を使用することにより個人的な
デフォルトをシステム全体のものとは別に決めることができます。</p>
</body>
</section>

<section>
<title>デフォルト JDK/JRE の指定方法</title>
<body>
<p><c>java-config --list-available-vms</c> を実行することにより
システムで使用可能な JRE と JDK のリストを次のように得ることができます。</p>
<pre caption = "Listing available VMs">
[%1 ~] java-config --list-available-vms
[blackdown-jdk-1.3.1] Blackdown JDK 1.3.1 (/etc/env.d/java/20blackdown-jdk-1.3.1)
[blackdown-jre-1.3.1] Blackdown JRE 1.3.1 (/etc/env.d/java/20blackdown-jre-1.3.1)
[ibm-jdk-1.3.0] IBM JDK 1.3.0 (/etc/env.d/java/20ibm-jdk-1.3.0)
[ibm-jdk-1.3.1] IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
[ibm-jre-1.3.1] IBM JRE 1.3.1 (/etc/env.d/java/20ibm-jre-1.3.1)
[sun-jdk-1.4.0] Sun JDK 1.4.0 (/etc/env.d/java/20sun-jdk-1.4.0)
</pre>
<p>括弧 <path>"[]"</path> に囲まれた名前が VM を識別するための ID です。
この ID を <c>java-config --set-system-vm</c> へ次に示すように渡します。</p>

<pre caption = "Setting the System VM">
[#1 ~] java-config --set-system-vm=ibm-jdk-1.3.1
Now using IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
</pre>

<note> --set-system-vm を実行する場合には管理者権限が必要です。</note>

<p>一旦デフォルトの VM を <c>java-config --set-system-vm</c> で指定した場合、
次のコマンドを実行して /etc/profile.env を更新する必要があります。</p>

<pre caption = "Regenerating /etc/profile.env">
[#1 ~] env-update
</pre>

<p>この後、ログインし直してください。または、 <path>/etc/profile</path>
を環境に読み込み直してください。</p>

<p>通常のユーザの場合、 <c>java-config --set-user-vm</c> コマンドを実行することにより、
必要な環境変数を <path>$HOME/.gentoo/java-env</path> に作成することができます。
通常、シェルの初期化スクリプト(私の場合は <path>$HOME/.zshenv</path> です)で
読み込まれます。</p>
</body>
</section>

<section>
<title>デフォルト CLASSPATH の指定方法</title>
<body>
<p><c>java-config</c> はシステム全体のデフォルト CLASSPATH を指定することができます。
また、ユーザ毎のデフォルト CLASSPATH も指定することができます。</p>

<p>次のように CLASSPATH に追加することのできる有効な Java ライブラリを知ることができます。</p>

<pre caption = "Listing classes">
[%1 ~] java-config --list-available-packages
[ant] No description (/usr/share/ant/classpath.env)
[java-gnome] No description (/usr/share/java-gnome/classpath.env)
[java-gtk] No description (/usr/share/java-gtk/classpath.env)
[log4j] "" (/usr/share/log4j/package.env)
</pre>

<note>パッケージの正確な記述はありません。それほど遠くない将来、
何か実装されるでしょう。</note>

<p>括弧 <path>"[]"</path> に囲まれた名前が <c>java-config --set-system-classpath</c>
へ渡すべき ID となります。</p>
<pre caption = "Setting classpaths">
java-config --set-system-classpath=log4j,java-gtk,java-gnome
</pre>
<note>カレントディレクトリ (.) はシステムクラスパスに含まれていませんが、
管理者のログインプロファイルに加えるべきです。</note>
<p>あなたは、 <c>env-update</c> を実行してシステムの環境を更新なければなりません。
そして、ログインし直すか、または、 <path>/etc/profile</path> を
環境に読み込み直してください。</p>
<p>一般ユーザの場合、 <c>java-config --set-user-classpath</c> コマンドを
実行することにより <path>$HOME/.gentoo/java-env</path> によって自動的に読み込まれる
<path>$HOME/.gentoo/java-env-classpath</path> を作成することができます。</p>
</body>
</section>
</chapter>

<chapter>
<title>追加情報</title>
<section>
<title>オフライン情報</title>
<body>
<ul>
<li>java-config マニュアルページ</li>
<li><c>java-config --help</c></li>
<li>スクリプト自身 <path>/usr/bin/java-config</path></li>
</ul>
</body>
</section>
<section>
<title>オンライン情報</title>
<body>
<ul>
<li><uri link="http://news.gmane.org/gmane.linux.gentoo.devel">
gentoo-dev </uri> 、
<uri link="http://news.gmane.org/gmane.linux.gentoo.user"> gentoo-user
</uri> メーリングリストアーカイブ</li>
<li>IRC : irc.openprojects.net の #gentoo</li>
</ul>
</body>
</section>
</chapter>
<chapter>
<title>注意</title>
<section>
<title>一般</title>
<body>
<p>デフォルト VM として JRE を選んだ場合、 マニュアルで注意深く
シンボリックリンクを作成しない限り、 <c>javac</c> を利用することはできません。</p>

<p>いくつかの大きなパッケージをコンパイルする場合、 Jikes を利用することができます。
JDK への依存を JRE への依存に変更することにより、 やがて、Java に依存した全てのパッケージを
Jikes でコンパイルできるようになることを期待しています。</p>

<p>いくつかのバージョンの Portage では、 <c>emerge --update world</c> を
実行することにより、既に JDK をインストールしているかどうかに関わらず
新たに JDK をインストールしてしまいます。
これは既知のバグであり、将来のバージョンの Portage で取り組まれます。</p>
</body>
</section>
</chapter>
</guide>
