<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/security/shb-chroot.xml,v 1.2 2005/12/16 02:43:23 vanquirius Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.1</version>
<date>2005-12-15</date>

<section>
<title>Fazendo chroot</title>
<body>

<p>
Fazer chroot de um serviço é um jeito de limitar o ambiente de um serviço (ou um
usuário) a só acessar o que deve e não obter acesso (ou informações) que podem
levar a acesso de administrador (root). Ao rodar um serviço como um usuário
diferente de <c>root</c> (<c>nobody</c>, <c>apache</c>, <c>named</c>), um
indivíduo malicioso só pode ter acesso a arquivos com a permissão do usuário.
Isto significa que um indivíduo malicioso não pode obter acesso de <c>root</c>,
mesmo se os serviços tiverem uma falha de segurança.
</p>

<p>
Alguns serviços como o <c>pure-ftpd</c> e <c>bind</c> têm funções de chroot, e
outros serviços não têm. Se o serviço suportá-lo, use-o. Caso contrário, você
terá que descobrir como criar sua própria função de chroot. Vamos ver como criar
um chroot e para uma compreensão básica de como o chroot funciona, nós iremos
testá-lo com o <c>bash</c> (jeito fácil de aprender).
</p>

<p>
Crie o diretório <path>/chroot</path> com <c>mkdir /chroot</c>. E descubra com
que bibliotecas dinâmicas que o <c>bash</c> é compilado (se for compilado com
<c>-static</c> este passo não é necessário):
</p>

<p>
O seguinte comando irá criar uma lista de bibliotecas usadas pelo <c>bash</c>. 
</p>

<pre caption="Obtendo uma lista de bibliotecas usadas">
# <i>ldd /bin/bash</i>
  libncurses.so.5 => /lib/libncurses.so.5 (0x4001b000)
  libdl.so.2 => /lib/libdl.so.2 (0x40060000)
  libc.so.6 => /lib/libc.so.6 (0x40063000)
  /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)
</pre>

<p>
Agora, vamos criar o ambiente para o <c>bash</c>.
</p>

<pre caption="Criando ambiente de chroot para o bash">
# <i>mkdir /chroot/bash</i>
# <i>mkdir /chroot/bash/bin</i>
# <i>mkdir /chroot/bash/lib</i>
</pre>

<p>
Copie os arquivos usados pelo <c>bash</c> (<path>/lib</path>) para o
<path>lib</path> chrootado e copie o comando de bash para o diretório
<path>bin</path> chrootado. Isto irá criar o exato mesmo ambiente, só que com
menos funcionalidades. Depois de copiar, teste-o:
<c>chroot /chroot/bash /bin/bash</c>. Se você receber um prompt dizendo
<path>/</path>, ele está funcionando! Caso contrário ele dirá que algum arquivo
está faltando. Algumas bibliotecas compartilhadas dependem uma da outra.
</p>

<p>
Você perceberá que dentro do chroot nada funciona, fora talvez o <c>echo</c>.
Isto é porque não temos outros comandos fora do ambiente de chroot fora bash, e
o <c>echo</c> é uma função interna.
</p>

<p>
Este é basicamente o mesmo jeito que você criaria um serviço chrootado. A única
diferença é que os serviços às vezes dependem de dispositivos e arquivos de
configuração em <path>/etc</path>. Simplesmente copie-os (dispositivos podem ser
copiados com <c>cp -a</c>) para o ambiente de chroot, edite o script de init
para usar chroot antes de executar. Pode ser difícil descobrir que serviços e
arquivos de configuração um serviço precisa. Aqui é onde o comando <c>strace</c>
torna-se útil. Inicie o serviço com <c>/usr/bin/strace</c> bash e procure por
open, read, stat e talvez connect. Isto dará a você uma melhor idéia de que
arquivos copiar. Mas na maioria dos casos, só copiar o arquivo passwd (edite a
cópia e remova usuários que não têm nada em relação ao serviço),
<path>/dev/zero</path>, <path>/dev/log</path> e <path>/dev/random</path>.
</p>

</body>
</section>
<section>
<title>User Mode Linux</title>
<body>

<p>
Outro jeito de criar um ambiente mais seguro é rodando uma máquina virtual. Uma
máquina virtual, como o nome implica, é o processo que roda em cima de seu
sistema operacional real fornecendo um hardware e ambiente de sistema
operacional que parece ser sua própria máquina individual. O benefício de
segurança é que se o servidor rodando a máquina virtual for comprometido, só o
servidor virtual é afetado e não a instalação mestre.
</p>

<p>
Para mais informações sobre como configurar o User Mode Linux consulte o <uri
link="/doc/en/uml.xml">Guia de User Mode Linux</uri>.
</p>

</body>
</section>

</sections>
