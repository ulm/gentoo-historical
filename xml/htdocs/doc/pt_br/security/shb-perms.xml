<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/security/shb-perms.xml,v 1.1 2005/06/04 20:28:17 vanquirius Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.0</version>
<date>2005-05-31</date>

<section>
<title>Legíveis globalmente</title>
<body>

<p>
Os usuários normais não devem ter acesso a arquivos de configuração ou senhas. Um
indivíduo malicioso pode roubar senhas de bancos de dados ou website e usá-los para fazer
defaces--ou pior ainda, apagar--dados. É por isso que é importante que suas permissões de
arquivo estejam corretas. Se você tem certeza de que um arquivo somente é usado pelo root,
configure-o com as permissões <c>0600</c> e atribua o arquivo ao usuário correto
com <c>chown</c>.
</p>

</body>
</section>
<section>
<title>Graváveis globalmente/por grupo</title>
<body>

<pre caption="Encontrando arquivos e diretórios graváveis globalmente">
# <i>/usr/bin/find / -type f \( -perm -2 -o -perm -20 \) \ 
   -exec ls -lg {} \; 2>/dev/null >writable.txt</i>
# <i>/usr/bin/find / -type d \( -perm -2 -o -perm -20 \) \ 
   -exec ls -ldg {} \; 2>/dev/null >>writable.txt</i>
</pre>

<p>
Isto irá criar um enorme arquivo com permissões de todos arquivos tendo ou permissão de
escrita para o grupo ou para todos. Verifique as permissões e elimine arquivos
arquivos globais graváveis por todos, executando <c>/bin/chmod o-w</c> nos
arquivos.
</p>

</body>
</section>
<section>
<title>Arquivos SUID/SGID</title>
<body>

<p>
Arquivos com o bit SUID ou SGID configurados executam com os privilégios do usuário ou
grupo <e>proprietário</e> e não do usuário executando o arquivo. Normalmente esses bits são usados
em arquivos que devem ser rodados com root para fazer o que devem. Esses arquivos podem levar
a comprometimentos de root locais (se contiverem buracos de segurança). Isto é perigoso
e arquivos com bits de SUID ou SGID devem ser evitados a qualquer custo. Se você
não usa esses arquivos, use <c>chmod 0</c> neles ou desinstale o pacote de que
eles originaram (verifique a que pacote eles pertencem usando <c>equery</c>; se
você já não o tiver instalado simplesmente digite <c>emerge
gentoolkit</c>). Caso contrário desligue o bit de SUID com <c>chmod -s</c>.
</p>

<pre caption="Encontrando arquivos setuid">
# <i>/usr/bin/find / -type f \( -perm -004000 -o -perm -002000 \) \ 
   -exec ls -lg {} \; 2>/dev/null >suidfiles.txt</i>
</pre>

<p>
Isto irá criar um arquivo contendo uma lista de todos arquivos SUID/SGID.
</p>

<pre caption="Lista de binários com setuid">
/bin/su
/bin/ping
/bin/mount
/bin/umount
/var/qmail/bin/qmail-queue
/usr/bin/chfn
/usr/bin/chsh
/usr/bin/crontab
/usr/bin/chage
/usr/bin/expiry
/usr/bin/sperl5.6.1
/usr/bin/newgrp
/usr/bin/passwd
/usr/bin/gpasswd
/usr/bin/procmail
/usr/bin/suidperl
/usr/lib/misc/pt_chown
/usr/sbin/unix_chkpwd
/usr/sbin/traceroute
/usr/sbin/pwdb_chkpwd
</pre>

<p>
Por padrão o Gentoo Linux não tem muitos arquivos com SUID (embora isso dependa do
que você tem instalado), mas você pode obter uma lista como a acima. A maior parte dos
comandos não devem ser usados por usuários normais, só root. Desligue o bit de SUID
em <c>ping</c>, <c>mount</c>, <c>umount</c>, <c>chfn</c>, <c>chsh</c>, <c>newgrp</c>, <c>suidperl</c>, <c>pt_chown</c>
e <c>traceroute</c> executando <c>chmod -s</c> em cada arquivo. Não
remova o bit de <c>su</c>, <c>qmail-queue</c> ou <c>unix_chkpwd</c>. Remover o
sutuid destes arquivos impede que você faça <c>su</c> e receba
correio. Ao remover o bit (onde for seguro fazê-lo) você remove a possibilidade
de um usuário normal (ou um indivíduo malicioso) ganhar acesso de root através de qualquer um desses
arquivos.
</p>

<p>
Os únicos arquivos de SUID que eu tenho em meu sistema são <c>su</c>, <c>passwd</c>,
<c>gpasswd</c>, <c>qmail-queue</c>, <c>unix_chkpwd</c> e <c>pwdb_chkpwd</c>.
Mas se você estiver rodando o X, você pode ter mais algunas, já que o X precisa de acessos
elevados conseguidos através de SUID.
</p>
</body>
</section>
<section>
<title>Binários e hardlinks com SUID/SGID</title>
<body>

<p>
Um arquivo só é considerado apagado quando não há mais links apontando para ele.
Isto pode soar como um conceito estranho, mas considere que um nome de arquivo como
<path>/usr/bin/perl</path> é na verdade um link para o inode onde os dados são
gravados. Qualquer número de links pode apontar para um arquivo, e até todos serem
apagados, o arquivo ainda existe.
</p>

<p>
Se seus usuários têm acesso a uma partição que não é montada com <c>nosuid</c>
ou <c>noexec</c> (por exemplo, se <path>/tmp</path>, <path>/home</path>, ou 
<path>/var/tmp</path> não forem partições separadas) você deve tomar cuidado para
que seus usuários não criem hardlinks para binários com SUID ou SGID, de forma que
após a atualização do Portage eles ainda tenham acesso a versões antigas.
</p>

<warn>
se você recebeu um aviso do portage sobre hardlinks remanescentes, e seus
usuários podem escrever para uma partição que permite executar arquivos SUID/SGID, você
deve ler esta seção cuidadosamente. Um de seus usuários pode tentar
contornar sua atualização mantendo uma cópia antiga de um programa. Se seus
usuários não podem criar arquivos SUID, ou só podem executar programas usando
o carregador dinâmico (partições montadas com <c>noexec</c>), você não tem com o
que se preocupar.
</warn>

<note>
Usuários não precisam ter acesso de leitura a um arquivo para criar um link para ele, só precisam ter
permissão de leitura no diretório que o contém.
</note>

<p>
Para ver quantos links um arquivo tem, você pode usar o comando <c>stat</c>.
</p>

<pre caption="Comando stat">
$ stat /bin/su    
  File: `/bin/su'
  Size: 29350           Blocks: 64         IO Block: 131072 regular file
Device: 900h/2304d      Inode: 2057419     Links: 1
Access: (4711/-rws--x--x)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2005-02-07 01:59:35.000000000 +0000
Modify: 2004-11-04 01:46:17.000000000 +0000
Change: 2004-11-04 01:46:17.000000000 +0000
</pre>

<p>
Para encontrar arquivos SUID e SGID com links múltiplos, você pode usar o <c>find</c>.
</p>

<pre caption="Encontrando binários suid/sgid com links múltiplos">
$ find / -type f \( -perm -004000 -o -perm -002000 \) -links +1 -ls
</pre>

</body>
</section>
</sections>
