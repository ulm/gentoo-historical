<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/security/shb-intrusion.xml,v 1.1 2005/06/04 19:49:35 vanquirius Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.0</version>
<date>2005-05-31</date>

<section>
<title>AIDE (Advanced Intrusion Detection Environment)</title>
<body>

<p>
AIDE é um sistema de detecção de intrusão baseada em hosts (HIDS), uma alternativa gratuita para o
Tripewire (se você já conhece o Tripwire você não deverá ter dificuldades para aprender
o arquivo de configuração do AIDE). HIDS são usados para detectar mudanças em arquivos
de configuração de sistema e binários importantes, geralmente fazendo um hash
criptográfico singular para os arquivos a serem verificados e guardando-os em um lugar
seguro. Com freqüência (como uma vez por dia), o hash "conhecido" guardado é
comparado com o gerado pela cópia atual de cada arquivo, para determinar
se o arquivo mudou. HIDS são uma grande maneira de detectar mudanças não permitidas
a seu sistema, mas dão um pouco de trabalho para implementar adequadamente e tirar
proveito.
</p>

<p>
O arquivo de configuração é baseado em expressões regulares (regex), macros e regras para
arquivos e diretórios. Nós temos as seguintes macros:
</p>

<table>
<tr>
  <th>Macro</th>
  <th>Descrição</th>
  <th>Sintaxe</th>
</tr>
<tr>
  <ti>ifdef</ti>
  <ti>Se definido</ti>
  <ti>@@ifdef "nome"</ti>
</tr>
<tr>
  <ti>ifndef</ti>
  <ti>Se não definido</ti>
  <ti>@@ifndef "nome"</ti>
</tr>
<tr>
  <ti>define</ti>
  <ti>Definir uma variável</ti>
  <ti>@@define "nome" "valor"</ti>
</tr>
<tr>
  <ti>undef</ti>
  <ti>Cancelar uma variável</ti>
  <ti>@@undef "nome"</ti>
</tr>
<tr>
  <ti>ifhost</ti>
  <ti>se "hostname"</ti>
  <ti>@@ifhost "hostname"</ti>
</tr>
<tr>
  <ti>ifnhost</ti>
  <ti>se não "hostname"</ti>
  <ti>@@ifnhost "hostname"</ti>
</tr>
<tr>
  <ti>endif</ti>
<ti>
Endif deve ser usado depois de qualquer uma das macros acima fora define e undef
</ti>
<ti>@@endif</ti>
</tr>
</table>

<p>
Estas macros tornam-se úteis se você tem mais de uma máquina rodando Gentoo e quer
usar AIDE em todas elas. Mas nem todas máquinas rodam os mesmos serviços ou tem
os mesmos usuários.
</p>

<p>
A seguir temos conjuntos de opções para verificar arquivos e diretórios. Eles são uma
combinação de permissões, propriedades de arquivo e hashes criptográficos
(isto é, checksums).
</p>

<table>
<tr>
  <th>Opção</th>
  <th>Descrição</th>
</tr>
<tr>
  <ti>p</ti>
  <ti>permissões</ti>
</tr>
<tr>
  <ti>i</ti>
  <ti>inode</ti>
</tr>
<tr>
  <ti>n</ti>
  <ti>número de links</ti>
</tr>
<tr>
  <ti>u</ti>
  <ti>usuário</ti>
</tr>
<tr>
  <ti>g</ti>
  <ti>grupo</ti>
</tr>
<tr>
  <ti>s</ti>
  <ti>tamanho</ti>
</tr>
<tr>
  <ti>b</ti>
  <ti>contagem de bloco</ti>
</tr>
<tr>
  <ti>m</ti>
  <ti>mtime</ti>
</tr>
<tr>
  <ti>a</ti>
  <ti>atime</ti>
</tr>
<tr>
  <ti>c</ti>
  <ti>ctime</ti>
</tr>
<tr>
  <ti>S</ti>
  <ti>verificar tamanho crescente</ti>
</tr>
<tr>
  <ti>md5</ti>
  <ti>checksum de md5</ti>
</tr>
<tr>
  <ti>sha1</ti>
  <ti>checksum de sha1</ti>
</tr>
<tr>
  <ti>rmd160</ti>
  <ti>checksum de rmd160</ti>
</tr>
<tr>
  <ti>tiger</ti>
  <ti>checksum de tiger</ti>
</tr>
<tr>
  <ti>R</ti>
  <ti>p+i+n+u+g+s+m+c+md5</ti>
</tr>
<tr>
  <ti>L</ti>
  <ti>p+i+n+u+g</ti>
</tr>
<tr>
  <ti>E</ti>
  <ti>Grupo vazio</ti>
</tr>
<tr>
  <ti>&gt;</ti>
  <ti>Arquivo de registro crescente p+u+g+i+n+S</ti>
</tr>
</table>

<p>
E se o AIDE for compilado com suporte a mhash ele suporta algumas funções a mais:
</p>

<table>
<tr>
<th>Opção</th>
<th>Descrição</th>
</tr>
<tr>
<ti>haval</ti>
<ti>checksum de haval</ti>
</tr>
<tr>
<ti>gost</ti>
<ti>checksum de gost</ti>
</tr>
<tr>
<ti>crc32</ti>
<ti>checksum de crc32</ti>
</tr>
</table>

<p>
Agora crie suas próprias regras com base nas opções acima combinando-as
da seguinte maneira:
</p>

<pre caption="Criando conjunto de regras para o AIDE">
All=R+a+sha1+rmd160
Norm=s+n+b+md5+sha1+rmd160
</pre>

<p>
A última coisa de que precisamos para criar nosso arquivo de configuração é ver como adicionar
uma regra a um arquivo ou diretório. Para entrar com uma regra, combine o nome de arquivo ou diretório
e a regra. O AIDE irá adicionar todos arquivos recursivamente a menos que você especifique uma
regra alternativa.
</p>

<table>
<tr>
<th>Opção</th>
<th>Descrição</th>
</tr>
<tr>
<ti>!</ti>
<ti>Não adicionar este arquivo ou diretório.</ti>
</tr>
<tr>
<ti>=</ti>
<ti>Adicionar este diretório, mas não recursivamente.</ti>
</tr>
</table>

<p>
Então vamos ver um exemplo completo:
</p>

<pre caption="/etc/aide/aide.conf">
@@ifndef TOPDIR 
@@define TOPDIR /
@@endif

@@ifndef AIDEDIR 
@@define AIDEDIR /etc/aide
@@endif

@@ifhost smbserv
@@define smbactive
@@endif

# O local do banco de dados a ser lida.
database=file:@@{AIDEDIR}/aide.db

# O local do banco de dados a ser gravado.
database_out=file:aide.db.new

verbose=20
report_url=stdout

# Definição de regras
All=R+a+sha1+rmd160
Norm=s+n+b+md5+sha1+rmd160

@@{TOPDIR} Norm
!@@{TOPDIR}etc/aide
!@@{TOPDIR}dev
!@@{TOPDIR}proc
!@@{TOPDIR}root
!@@{TOPDIR}tmp
!@@{TOPDIR}var/log
!@@{TOPDIR}var/run
!@@{TOPDIR}usr/portage
@@ifdef smbactive
!@@{TOPDIR}etc/smb/private/secrets.tdb
@@endif
=@@{TOPDIR}home Norm
</pre>

<p>
No exemplo acima nós especificamos algumas macros onde o topdir começa e
onde o diretório do AIDE está. O AIDE verifica o arquivo <path>/etc/aide/aide.db</path>
para verificar a integridade de arquivo. Mas quando atualizando ou criando um novo arquivo ele
grava a informação em <path>/etc/aide/aide.db.new</path>. Isto é feito para que ele
não sobre-escreva o arquivo db antigo automaticamente. A opção
<c>report_URL</c> ainda não está implementada, mas a intenção do autor era
poder enviar e-mail ou talvez até executar scripts.
</p>

<p>
Depois de editar a configuração você deve criar seu arquivo db executando
<c>aide -i</c> e copiando o arquivo <path>/etc/aide/aide.db.new</path> para
<path>/etc/aide/aide.db</path> e adicionar a verificação ao cron executando
<c>crontab -e</c> como root.
</p>

<note>
Dependendo da sua CPU, velocidade de acesso a disco, e opções use que você tem nos arquivos,
isto pode levar um tempo.
</note>

<pre caption="Agendar o aide como cronjob">
0 3 * * * /usr/bin/aide -u
</pre>

<note>
Lembre-se de configurar um alias para que você receber o correio do root. Senão, você nunca saberá
quando o AIDE der notícias.
</note>

<p>
Neste caso ele roda uma vez às 3 da manhã. Isto é feito já que eu não quero perturbar
os usuários quando eles estao trabalhando. Note que estou usando a opção <c>-u</c> (Update)
ao invés de <c>-C</c> (Check). Já que <c>-u</c> também verifica os arquivos e
não sobre-escreve o arquivo db original isto economiza tempo já que tudo que você precisa fazer
é copiar um arquivo quando ele detectar algumas mudanças. Apenas verifique as mudanças para ver
se foi você que as fez ao invés de um indivíduo malicioso antes de copiar!
</p>

<p>
Há um risco inerente em gravar os arquivos db localmente, já que o
indivíduo malicioso irá (se souberem que o AIDE está instalado) quase certamente tentar alterar
o arquivo db, atualizar o arquivo db ou modificar <path>/usr/bin/aide</path>. Então você
deve criar um CD ou outra mídia e colocar uma cópia do arquivo .db e binário do
AIDE.
</p>

<p>
Pode-se encontrar mais informações na página de projeto do <uri
link="http://www.cs.tut.fi/~rammer/aide.html">AIDE</uri>.
</p>

</body>
</section>
<section>
<title>Snort</title>
<body>

<p>
Snort é um sistema de detecção de intrusão de rede (NIDS). Para instalar e configurá-lo
use os seguintes exemplos.
</p>

<pre caption="Adicione um usuário snort ao sistema">
# useradd snort -d /var/log/snort -s /dev/null
# chown -R snort /var/log/snort
</pre>

<pre caption="/etc/conf.d/snort">
PIDFILE=/var/run/snort_eth0.pid
MODE="full"
NETWORK="10.0.0.0/24"
LOGDIR="/var/log/snort"
CONF=/etc/snort/snort.conf
SNORT_OPTS="-D -s -u snort -dev -l $LOGDIR -h $NETWORK -c $CONF"
</pre>

<pre caption="/etc/snort/snort.conf">
<comment>(Passo 1)</comment>
var HOME_NET 10.0.0.0/24
var EXTERNAL_NET any
var SMTP $HOME_NET
var HTTP_SERVERS $HOME_NET
var SQL_SERVERS $HOME_NET
var DNS_SERVERS [10.0.0.2/32,212.242.40.51/32]
var RULE_PATH ./

<comment>(Passo 2)</comment>
preprocessor frag2
preprocessor stream4: detect_scans detect_state_problems detect_scans disable_evasion_alerts
preprocessor stream4_reassemble: ports all
preprocessor http_decode: 80 8080 unicode iis_alt_unicode double_encode iis_flip_slash full_whitespace
preprocessor rpc_decode: 111 32771
preprocessor bo: -nobrute
preprocessor telnet_decode

<comment>(Passo 3)</comment>
include classification.config

<comment>(Passo 4)</comment>
include $RULE_PATH/bad-traffic.rules
include $RULE_PATH/exploit.rules
include $RULE_PATH/scan.rules
include $RULE_PATH/finger.rules
include $RULE_PATH/ftp.rules
include $RULE_PATH/telnet.rules
include $RULE_PATH/smtp.rules
include $RULE_PATH/rpc.rules
include $RULE_PATH/rservices.rules
include $RULE_PATH/dos.rules
include $RULE_PATH/ddos.rules
include $RULE_PATH/dns.rules
include $RULE_PATH/tftp.rules
include $RULE_PATH/web-cgi.rules
include $RULE_PATH/web-coldfusion.rules
include $RULE_PATH/web-iis.rules
include $RULE_PATH/web-frontpage.rules
include $RULE_PATH/web-misc.rules
include $RULE_PATH/web-attacks.rules
include $RULE_PATH/sql.rules
include $RULE_PATH/x11.rules
include $RULE_PATH/icmp.rules
include $RULE_PATH/netbios.rules
include $RULE_PATH/misc.rules
include $RULE_PATH/attack-responses.rules
include $RULE_PATH/backdoor.rules
include $RULE_PATH/shellcode.rules
include $RULE_PATH/policy.rules
include $RULE_PATH/porn.rules
include $RULE_PATH/info.rules
include $RULE_PATH/icmp-info.rules
include $RULE_PATH/virus.rules
# include $RULE_PATH/experimental.rules
include $RULE_PATH/local.rules
</pre>

<pre caption="/etc/snort/classification.config">
config classification: not-suspicious,Not Suspicious Traffic,3
config classification: unknown,Unknown Traffic,3
config classification: bad-unknown,Potentially Bad Traffic, 2
config classification: attempted-recon,Attempted Information Leak,2
config classification: successful-recon-limited,Information Leak,2
config classification: successful-recon-largescale,Large Scale Information Leak,2
config classification: attempted-dos,Attempted Denial of Service,2
config classification: successful-dos,Denial of Service,2
config classification: attempted-user,Attempted User Privilege Gain,1
config classification: unsuccessful-user,Unsuccessful User Privilege Gain,1
config classification: successful-user,Successful User Privilege Gain,1
config classification: attempted-admin,Attempted Administrator Privilege Gain,1
config classification: successful-admin,Successful Administrator Privilege Gain,1

# NOVAS CLASSIFICAÇÕES
config classification: rpc-portmap-decode,Decode of an RPC Query,2
config classification: shellcode-detect,Executable code was detected,1
config classification: string-detect,A suspicious string was detected,3
config classification: suspicious-filename-detect,A suspicious filename was detected,2
config classification: suspicious-login,An attempted login using a suspicious username was detected,2
config classification: system-call-detect,A system call was detected,2
config classification: tcp-connection,A TCP connection was detected,4
config classification: trojan-activity,A Network Trojan was detected, 1
config classification: unusual-client-port-connection,A client was using an unusual port,2
config classification: network-scan,Detection of a Network Scan,3
config classification: denial-of-service,Detection of a Denial of Service Attack,2
config classification: non-standard-protocol,Detection of a non-standard protocol or event,2
config classification: protocol-command-decode,Generic Protocol Command Decode,3
config classification: web-application-activity,access to a potentially vulnerable web application,2
config classification: web-application-attack,Web Application Attack,1
config classification: misc-activity,Misc activity,3
config classification: misc-attack,Misc Attack,2
config classification: icmp-event,Generic ICMP event,3
config classification: kickass-porn,SCORE! Get the lotion!,1
</pre>

<p>
Mais informações no website do <uri
link="http://www.snort.org">Snort</uri>.
</p>

</body>
</section>

<section>
<title>Detectando malware com o chkrootkit</title>

<body>

<p>
HIDS como o AIDE são um bom jeito de detectar mudanças em seu sistema, mas nunca
faz mal ter outra linha de defesa. O <c>chkrootkit</c> é um utilitário que varre
arquivos de sistema comuns procurando a presença de rootkits--software desenhado para esconder as
ações de um invasor e permitir a ele manter seu acesso--e escaneia seu sistema por
traços prováveis de gravadores de teclas e outros "malware". Enquanto o <c>chkrootkit</c> (e
alternativas como o <c>rkhunter</c>) são ferramentas úteis, tanto para a manutenção
de sistema quanto para rastrear um intruso depois que um ataque aconteceu, eles
não podem garantir que seu sistema está seguro.
</p>

<p>
O melhor jeito de usar o <c>chkrootkit</c> para detectar uma invasão é rodá-lo
rotineiramente como <c>cron</c>. Para iniciar, faça emerge <path>app-admin/chkrootkit</path>. 
O <c>chkrootkit</c> pode ser rodado da linha de comando com o comando de mesmo
nome, ou do <c>cron</c> com uma entrada parecida com o seguinte:
</p>

<pre caption="Agendar chkrootkit como um cronjob">
0 3 * * * /usr/sbin/chkrootkit
</pre>

</body>
</section>


</sections>
