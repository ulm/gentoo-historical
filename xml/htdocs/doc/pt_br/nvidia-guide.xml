<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/nvidia-guide.xml,v 1.14 2012/04/18 18:30:34 swift Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="pt_br">
<title>Guia de nVidia do Gentoo Linux</title>

<author title="Autor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="curtis119@gentoo.org">M Curtis Napier</mail>
</author>
<author title="Editor">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Tradutor">
  <mail link="vanquirius@gentoo.org">Marcelo Góes</mail>
</author>

<abstract>
Muitos usuários de Gentoo têm um chipset da nVidia em seu sistema. A nVidia
oferece drivers específicos para Linux para melhorar a performance de sua placa.
Este guia informa como instalar e configurar esses drivers.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.20</version>
<date>2006-02-17</date>

<chapter>
<title>Introdução</title>
<section>
<body>

<p>
A nVidia lança seus próprios drivers de Linux que fornecem boa performance e
aceleração 3D completa. Os drivers são divididos em duas partes:
<c>nvidia-kernel</c> e <c>nvidia-glx</c>.
</p>

<p>
<c>nvidia-kernel</c> é um driver de kernel que lida com comunicação de
baixo nível com seu hardware de vídeo. É simplesmente um módulo de kernel,
chamado <c>nvidia</c>, que se instala contra suas fontes de kernel e precisa
ser carregado quando você quer usar os drivers da nvidia.
</p>

<p>
Bem como o driver de kernel, você precisa instalar o layer de X11 GLX
(<c>nvidia-glx</c>). É usado pelo X para desenhar gráficos, que usam
internamente o driver de kernel <c>nvidia-kernel</c> para interface com o
hardware.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configurando sua placa</title>
<section>
<title>Configuração de kernel</title>
<body>

<p>
Como mencionado acima, o driver de kernel da nVidia instala-se e roda contra seu
kernel atual. Já que se constrói como módulo, faz sentido que seu kernel deva
suportar carregamento de módulos de kernel. Se você usou <c>genkernel</c> para
configurar o kernel para você, tudo está pronto. Caso contrário, verifique que
sua configuração de kernel tem este suporte ativado:
</p>

<pre caption="Ativando suporte de módulos de kernel carregáveis">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
Você também precisa ativar  <e>Memory Type Range Register</e> em seu kernel:
</p>

<pre caption="Ativando MTRR">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>

<p>
Os módulos e bibliotecas da nVidia são combinados em dois pacotes:
<c>nvidia-glx</c> e <c>nvidia-kernel</c>. O primeiro são as bibliotecas de X11
GLX e o segundo são os módulos do kernel.
</p>

<p>
A ebuild de nvidia-kernel descobre automaticamente sua versão do kernel com base
no link simbólico <path>/usr/src/linux</path>. Por favor certifique-se que você
tem este link simbólico apontando para as fontes corretas e que seu kernel está
corretamente configurado. Veja a seção Configurando o kernel do <uri
link="/doc/pt_br/handbook/">Manual de instalação</uri> para detalhes sobre a
configuração de seu kernel.
</p>

<p>
Se você estiver usando gentoo-sources-2.6.11-r6, seu diretório
<path>/usr/src</path> deve parecer-se com o seguinte:
</p>

<pre caption="Verifique seu link simbólico /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ls -l</i>
<comment>(Verifique que linux aponta para o diretório correto)</comment>
lrwxrwxrwx   1 root root   22 Apr 23 18:33 linux -&gt; linux-2.6.11-gentoo-r6
drwxr-xr-x   4 root root  120 Apr  8 18:56 linux-2.4.26-gentoo-r4
drwxr-xr-x  18 root root  664 Dec 31 16:09 linux-2.6.10
drwxr-xr-x  18 root root  632 Mar  3 12:27 linux-2.6.11
drwxr-xr-x  19 root root 4096 Mar 16 22:00 linux-2.6.11-gentoo-r6
</pre>

<p>
Na saída acima, você perceberá que o link simbólico <c>linux</c> está apontando
para o kernel <c>linux-2.6.11-gentoo-r6</c>.
</p>

<p>
Se o link simbólico não estiver apontando para as fontes corretas, você deve
atualizar o link desta maneira:
</p>

<pre caption="Crie/atualize o link simbólico /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ln -snf linux-2.6.11-gentoo-r6 linux</i>
</pre>

</body>
</section>
<section>
<title>Opcional: verifique a existência de suporte para placas antigas (legacy)</title>
<body>

<note>
Infelizmente, certas placas antigas não são suportadas pelas novas versões de
<c>nvidia-glx</c> e <c>nvidia-kernel</c>. A nVidia fornece uma <uri
link="http://www.nvidia.com/object/IO_18897.html">lista de placas
suportadas</uri>. Por favor, verifique a lista antes de instalar os drivers.
</note>

<p>
A seguir há uma lista de placas antigas <b>sem suporte</b>:
</p>

<pre caption="Placas sem suporte">
TNT2
TNT2 Pro
TNT2 Ultra
TNT2 Model 64 (M64)
TNT2 Model 64 (M64) Pro
Vanta
Vanta LT
GeForce 256
GeForce DDR
GeForce2 GTS
GeForce2 Pro
GeForce2 Ti
GeForce2 Ultra
GeForce2 MX Integrated graphics
Quadro
Quadro2 Pro
Quadro2 EX
</pre>

<p>
Se você tiver uma dessas placas, você terá que mascarar as novas versões dos
drivers da nVidia, e instalar uma versão antiga:
</p>

<pre caption="Mascarando drivers novos">
# <i>echo "&gt;media-video/nvidia-kernel-1.0.6629-r4" &gt;&gt; /etc/portage/package.mask</i>
# <i>echo "&gt;media-video/nvidia-glx-1.0.6629-r7" &gt;&gt; /etc/portage/package.mask</i>
</pre>

</body>
</section>
<section>
<title>Instalando os drivers apropriados</title>
<body>

<p>
Agora está na hora de instalar <c>nvidia-kernel</c> e <c>nvidia-glx</c>. Já que
<c>nvidia-glx</c> depende de <c>nvidia-kernel</c>, instalar <c>nvidia-glx</c> é
o suficiente.
</p>

<pre caption="Instalando os módulos da nVidia">
# <i>emerge nvidia-glx</i>
</pre>

<impo>
Cada vez que você <uri link="/doc/pt_br/kernel-upgrade.xml">compilar um novo
kernel</uri> ou recompilar o atual, você precisa rodar <c>emerge
nvidia-kernel</c> para reinstalar os módulos da nVidia. <c>nvidia-glx</c> não é
afetado por uma mudança de kernel e não precisa nem mesmo ser reconstruído
quando você recompilar/atualizar o X.
</impo>

<p>
Quando a instalação terminar, rode <c>modprobe nvidia</c> para carregar o módulo
do kernel na memória.
</p>

<pre caption="Carregando o módulo do kernel">
# <i>modprobe nvidia</i>
</pre>

<p>
Para evitar ter que carregar o módulo manualmente a cada inicialização, você
provavelmente quer que isto seja feito cada vez que você carregar seu sistema,
portanto edite o <path>/etc/modules.autoload.d/kernel-2.6</path> (ou
<path>kernel-2.4</path>, dependendo de que versão de kernel você usar) e
adicione <c>nvidia</c>. Não se esqueça de rodar <c>modules-update</c> depois
disso.
</p>

<pre caption="Rodando modules-update">
# <i>modules-update</i>
</pre>

</body>
</section>
<section>
<title>Configurando o servidor de X</title>
<body>

<p>
Uma vez que os drivers apropriados forem instalados você precisa configurar seu
servidor de X (XFree86 ou Xorg) para usar o driver <c>nvidia</c> ao invés do
driver padrão <c>nv</c>.
</p>

<p>
Abra o <path>/etc/X11/xorg.conf</path> (ou o <path>/etc/X11/XF86Config</path> se
você ainda usar o local de configuração antigo do arquivo)
com seu editor favorito (como o <c>nano</c> ou o <c>vim</c>) e vá para seção
<c>Device</c>. Nesta seção, mude a linha <c>Driver</c>:
</p>

<pre caption="Mudando de nv para nvidia na configuração do servidor de X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
Então vá para seção <c>Module</c> e certifique-se que o módulo <c>glx</c> seja
carregado enquanto o <c>dri</c> não seja:
</p>

<pre caption="Atualizando a seção Module">
Section "Module"
  <comment>(...)</comment>
  <i># Load  "dri"
  Load  "glx"</i>
  <comment>(...)</comment>
EndSection
</pre>

<p>
A seguir, na seção <c>Screen</c>, certifique-se de que a diretiva
<c>DefaultDepth</c> está configurada em 16 ou 24, ou que você só tenha subseções
de <c>Display</c> com ajustes de <c>Depth</c> de 16 ou 24. Sem isso, as 
extensões de nvidia-glx não irão iniciar.
</p>

<pre caption="Atualizando a seção Screen">
Section "Screen"
  <comment>(...)</comment>
  <i>DefaultDepth 16</i>
  Subsection "Display"
  <comment>(...)</comment>
EndSection
</pre>

<p>
Rode <c>opengl-update</c> para que o servidor de X use as bibliotecas do nVidia
GLX:
</p>

<pre caption="Rodando opengl-update">
# <i>opengl-update nvidia</i>
</pre>

</body>
</section>
<section>
<title>Adicionando seus usuários ao grupo video</title>
<body>

<p>
Você tem que adicionar seu usuário ao grupo <c>video</c> para ele poder acessar
os arquivos de dispositivo da nvidia:
</p>

<pre caption="Adicionando seu usuário ao grupo video">
# <i>gpasswd -a youruser video</i>
</pre>

<p>
Isto pode não ser totalmente necessário se você não estiver usando <c>udev</c>,
mas não faz mal também e deixa seu sistema pronto para o futuro :)
</p>

</body>
</section>
<section>
<title>Testando sua placa</title>
<body>

<p>
Para testar sua placa da nVidia, inicie o X e rode o comando 
<c>glxinfo | grep direct</c>. Ele deve dizer que o direct rendering está
ativado:
</p>

<pre caption="Verificando o estado do direct rendering">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
Para monitorar suas FPS, rode <c>glxgears</c>. 
</p>

</body>
</section>
<section>
<title>Ativando suporte a nvidia</title>
<body>

<p>
Algumas ferramentas, como o <c>mplayer</c> e <c>xine-lib</c>, usam uma variável
de USE local chamada "nvidia" que ativa suporte a XvMCNVIDIA, útil na hora de
assistir filmes de alta resolução. Adicione "nvidia" em sua variável de USE em
<path>/etc/make.conf</path> ou adicione a variável de USE para
<c>media-video/mplayer</c> e/ou <c>media-libs/xine-lib</c> no
<path>/etc/portage/package.use</path>.
</p>

<p>
Então, rode <c>emerge -uD --newuse world</c> para reconstruir as aplicações que
irão tirar proveito da mudança de variável de USE.
</p>

</body>
</section>
<section>
<title>Usando a ferramenta NVidia Settings</title>
<body>

<p>
Desde que a NVidia lançou a versão 1.0.6106, ela também oferece uma ferramenta
de ajustes. Esta ferramenta permite mudar ajustes gráficos sem reiniciar o
servidor de X está disponível através do Portage como
<c>media-video/nvidia-settings</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Resolução de problemas</title>
<section>
<title>Fazendo 2D funcionar com máquinas com 4Gb de memória ou mais</title>
<body>

<p>
Se você tiver problemas com a aceleração 2D da nVidia é provável que você não
consiga configurar um alcance de write-combining com o MTRR. Para verificar,
veja o conteúdo de <path>/proc/mtrr</path>:
</p>

<pre caption="Verificando se você tem write-combining ativado">
# <i>cat /proc/mtrr</i>
</pre>

<p>
Cada linha deve conter "write-back" ou "write-combining". Se você vir uma linha
com "uncachable" nela, você precisa mudar um ajuste da BIOS para consertar o
problema.
</p>

<p>
Reinicie e entre na BIOS, então encontre os ajustes de MTRR (provavelmente em 
"CPU Settings"). Mude o ajuste de "continuous" para "discrete" e inicie o Linux
novamente. Você verá que não há mais entradas "uncachable" e a aceleração 2D
agora funciona sem problemas.
</p>

</body>
</section>
<section>
<title>Eu recebo avisos sobre tamanhos de stack de 4k sem suporte</title>
<body>

<p>
Os pacotes da <c>nvidia-kernel</c> mais antigos que o 1.0.6106 só suportam
kernéis usando um stack de 4K. Kernéis mais recentes (2.6.6 e mais novos) têm
suporte para stacks de 4K também. Não selecione stacks de 4K na sua configuração
 do kernel se você estiver usando um desses pacotes do <c>nvidia-kernel</c>.
Você pode encontrar essa opção na seção <c>Kernel Hacking</c>.
</p>

</body>
</section>
<section>
<title>
  Quando eu tento carregar o módulo de kernel eu recebo "no such device"
</title>
<body>

<p>
Isto normalmente acontece quando você não tem uma placa de vídeo compatível.
Certifique-se que você tem uma placa gráfica com chip da nVidia (você pode
verificar isso usando <c>lspci</c>).
</p>

<p>
Se você tem certeza de que tem uma placa de nVidia, verifique sua BIOS e veja
se a diretiva <e>Assign IRQ to VGA</e> está configurada.
</p>

</body>
</section>
<section>
<title>
  Eu obtenho "no screens found" e os registros dizem "Failed to initialize the
  NVIDIA kernel module!"
</title>
<body>

<p>
Você provavelmente está sem os arquivos de dispositivo
<path>/dev/nvidia*</path>. Crie-os usando <c>NVmakedevices.sh</c>:
</p>

<pre caption="Criando os dispositivos de nódulo de nvidia">
# <i>/sbin/NVmakedevices.sh</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>Configuração avançada</title>
<section>
<title>Documentação</title>
<body>

<p>
O pacote de driver da nVidia também vem com documentação completa. É instalada
em <c>/usr/share/doc</c> e pode ser vista com o seguinte comando:
</p>

<pre caption="Vendo a documentaçao da NVIDIA">
# <i>less /usr/share/doc/nvidia-glx-*/README.txt.gz</i>
</pre>

</body>
</section>
<section>
<title>Parâmetros de módulo do kernel</title>
<body>

<p>
O módulo de kernel <c>nvidia</c> aceita vários parâmetros (opções) que você pode
usar para ajustar o comportamento do driver. A maior parte deles é mencionada na
documentação. Para adicionar ou mudar os valores destes parâmetros, edite o
arquivo <c>/etc/modules.d/nvidia</c>. Lembre-se de rodar <c>modules-update</c>
depois de modificar o arquivo, e tenha em mente que você precisará recarregar o
módulo <c>nvidia</c> antes dos novos ajustes tomarem efeito.
</p>

<pre caption="Ajustando opções da nvidia">
<comment>(Edite /etc/modules.d/nvidia em seu editor favorito)</comment>
# <i>nano -w /etc/modules.d/nvidia</i>
<comment>(Atualizar informação de módulo)</comment>
# <i>modules-update</i>
<comment>(Descarregar o módulo nvidia...)</comment>
# <i>modprobe -r nvidia</i>
<comment>(...e carregá-lo novamente)</comment>
# <i>modprobe nvidia</i>
</pre>

</body>
</section>
<section>
<title>Configuração avançada do X</title>
<body>

<p>
O layer de GLX também tem uma plétora de opções que podem ser configuradas. Elas
controlam a configuração da saída de TV, displays duplos, detecção de freqüência
de monitor, etc... Novamente, as opções disponíveis são detalhadas na
documentação.
</p>

<p>
Se você desejar usar qualquer uma dessas opções, você precisa listá-las nas
seções Device relevante de seu arquivo de configuração do X (normalmente
<c>/etc/X11/xorg.conf</c>). Por exemplo, suponha que eu queira desativar o logo
de splash:
</p>

<pre caption="Configuração avançada da nvidia para a configuração do X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  <i>Option     "NoLogo" "true"</i>
  VideoRam   65536
EndSection
</pre>

</body>
</section>
</chapter>

</guide>
