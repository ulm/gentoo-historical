<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/articles/maximum-swappage.xml,v 1.2 2005/12/16 02:46:53 vanquirius Exp $ -->

<guide link="/doc/pt_br/articles/maximum-swappage.xml" disclaimer="articles" lang="pt_br">
<title>Tirando o máximo do swap</title>

<author title="Autor">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<!--<author title="Editor">
  <mail link="jackdark@gmail.com">Joshua Saddler</mail>
</author>-->
<author title="Tradutor">
  <mail link="vanquirius@gentoo.org">Marcelo Góes</mail>
</author>

<abstract>
Aprenda como melhorar sua performance de swap em seu servidor de Linux em várias
ordens de magnitude. O autor Daniel Robbins mostra os passos desta rápida disca
sobre como tirar o máximo de seu servidor.
</abstract>

<!-- A versão original deste artigo foi publicada primeiro na IBM
developerWorks, e é propriedade da Westtech Information Services. Este
documento é uma versão atualizada do artigo original e contém várias
melhorias feitas pelo time de documentação do Gentoo Linux. -->

<version>1.3</version>
<date>2005-10-09</date>

<chapter>
<title>Tirando o máximo do swap</title>
<section>
<body>

<p>
Quando você configurou um novo servidor Linux, você cria uma única partição de
swap de 128 MB? Se sim, você sabia que está limitando a performance de swap
severamente? Você gostaria de aumentar a performance de swap em várias ordens
de magnitude, e criar partições de swap maiores que 1 GB? É possível, sem
precisar de patches de kernel ou hardware especial, apenas conhecimento geek!
</p>

<p>
Alguns de vocês podem não se importar com swap. Afinal de contas, sistemas Linux
são tipicamente muito eficientes com relação à memória, e o swap quase nunca é
tocado. Embora isto seja verdade em sistemas de desktop, servidores são outra
história. Porque servidores podem lidar com cargas inesperadas, como processos
em fuga, ataques de denial of service, ou mesmo o efeito Slashdot, eles não têm
o swap de alta velocidade para não pararem e possivelmente entram em pane quando
toda memória física (e mais um pouco) é exaurida.
</p>

<p>
Ainda não convencido da importância? Eu vou mostrar como é fácil derrubar um
servidor lançando uma quantidade massiva de novos processos.
</p>

<warn>
Por favor, se você fizer isso, só faça em um servidor fora de produção que você
realmente administra!
</warn>

<p>
Vamos dizer que você tem dois comandos <c>grep</c> personalizados em
<path>/usr/bin</path>, chamados <c>bobgrep</c> e <c>jimgrep</c>. Agora, vamos
presumir que <c>bobgrep</c> é um simples script de shell que chama o executável
ELF <c>jimgrep</c>, como a seguir:
</p>

<pre caption="O script bobgrep">
#!/bin/bash
jimgrep -r $*
</pre>

<p>
Tudo bem até agora, mas o que acontece se o <c>jimgrep</c> é acidentamente
substituído com um link simbólico para <c>bobgrep</c>? Bem, neste caso, rodar
<c>bobgrep</c> ou <c>jimgrep</c> causará um loop infinito, fazendo com que
centenas de processos bash sejam lançados em meros segundos. Isto já aconteceu
comigo uma vez, e acredite, deu trabalho!
</p>

<p>
Se um servidor não tem swap adequado, uma situação como esta pode fazer com que
a máquina trave em muito menos que um minuto. Como consertamos o problema? Um
jeito é aumentar o tamanho de swap além de 128 MB. Felizmente para nós, não há
limite de swap de 128 MB em kernéis de Linux 2.2.x+ e mais novos, como havia no
passado. Os limites atuais são aproximadamente 2 GB para sistemas x86, PowerPC,
e MC680x0, 512 MB para sistemas MIPS, 128 GB para Alpha, e impressionantes 
3 terabytes em plataformas UltraSparc!
</p>

<pre caption="Limites de partição de swap em kernéis modernos de Linux">
x86                 2 Gigabytes
PowerPC             2 Gigabytes
Motorola 680x0      2 Gigabytes
Sparc               1 Gigabyte
MIPS                512 Megabytes
Alpha               128 Gigabytes
UltraSparc          3 Terabytes
</pre>

<p>
Embora seja interessante poder aumentar o tamanho de swap além de 128 MB, como
aumentar sua performance? Idealmente, seria bom se pudéssemos configurar
partições de swap em uma stripe de RAID 0, para que leituras e escritas fossem
igualmente balanceadas entre as partições. Se estas partições estão em drives
separados e/ou controles, isto irá multiplicar a performance de swap, permitindo
que seus servidores lidem com "picos" de uso de memória temporários, sem serem
atingidos dramaticamente.
</p>

<p>
De maneira impressionante, todos kernéis modernos do Linux, por padrão (sem
opções especiais de kernel ou patches) permitem que você faça swap paralelo,
como numa stripe de RAID 0. Ao usar a opção <c>pri</c> no
<path>/etc/fstab</path> para configurar múltiplas partições de swap com a mesma
prioridade, nós dizemos para o Linux usá-las em paralelo:
</p>

<pre caption="Configure múltiplas partições de swap com a mesma prioridade">
/dev/sda2       none    swap    sw,pri=3        0       0
/dev/sdb2       none    swap    sw,pri=3        0       0
/dev/sdc2       none    swap    sw,pri=3        0       0
/dev/sdd2       none    swap    sw,pri=1        0       0
</pre>

<p>
No exemplo acima, o Linux irá usar as partições de swap sda2, sdb2, e sdc2 em
paralelo. Já que estas partições estão em drives diferentes, e possivelmente até
controladores SCSI diferentes, o processamento de leitura e escrita irá quase
triplicar. A quarta partição, sdd2, só será usada depois das três primeiras
serem exauridas.
</p>

<p>
A opção <c>pri</c> é realmente fácil de usar. A prioridade deve ser um número
entre 0 e 32767, com 32767 sendo a maior prioridade. As partições de swap serão
usadas da maior prioridade para a menor prioridade, o que significa que uma
partição com uma prioridade de x só será usada se todas as partições com uma
prioridade maior que x já estiverem cheias. Se várias partições tiverem a mesma
prioridade, o Linux irá automaticamente paralelizar o acesso entre elas. Isto
permite que você não só paralelize o swap, mas também priorize acesso para que
as partições nos drives mais rápidos (ou regiões dos drives) sejam usadas
primeiro. Assim, você pode configurar uma partição de swap de emergência em um
disco mais antigo e lento, que só será usado se todo swap de alta velocidade for
exaurido primeiro.
</p>

<p>
Agora está na hora de pôr este conhecimento de swap em ação. Para citar
o Sr. Miyagi do Karate Kid: "Swap on, swap off, geek-san!"
</p>

</body>
</section>
<section>
<title>Recursos</title>
<body>

<ul>
  <li>
    Em <uri link="/doc/en/articles/partitioning-p1.xml">Partitioning in action:
    Moving /home</uri>, ensino o passo-a-passo de como mudar <path>/home</path>
    para uma nova partição.
  </li>
  <li>
    Em <uri link="/doc/en/articles/partitioning-p2.xml">Partitioning in
    action</uri>, eu mostro passo-a-passo como mudar <path>/var</path> e
    <path>/tmp</path> para uma nova partição.
  </li>
  <li>
    Em minha segunda dica, <uri
    link="/doc/en/articles/partition-planning-tips.xml">Partition planning
    tips</uri>, eu mostro várias maneiras de organizar seu arranjo de partições
    eficientemente.
  </li>
  <li>
    O <uri link="http://www.redhat.com/mirrors/LDP/LDP/sag/index.html">Linux
    system administrator's guide</uri> espelhado na home page da Red Hat.
  </li>
<!-- Link doesn't work anymore, commenting for the time being - fox2mike
  <li>
    A good high-level <uri link="http://www.gwdg.de/gs-2.0/chapter2_6.html">
    overview of Linux system administration</uri>.
  </li>
-->
  <li>
    Para mais informações sobre a otimização da performance de sistemas de
    arquivos, veja o <uri link="http://www.tldp.org">Linux Software RAID
    HOWTO</uri> de Linas Vepstas. Já que a maior parte do código de RAID recente
    foi adicionado à série 2.3 de kernéis, é uma opção viável para melhorar
    ainda mais a performance de disco do Linux.
  </li>
</ul>

</body>
</section>
<section>
<title>Sobre o autor</title>
<body>

<p>
Daniel Robbins mora em Albuquerque, New Mexico. Ele foi o Presidente/CEO da
Gentoo Technologies Inc., o chefe-arquiteto do Projeto do Gentoo e é um autor
contribuinte de vários livros publicados pela MacMillan: Caldera OpenLinux
Unleashed, SuSE Linux Unleashed, e Samba Unleashed. Daniel está envolvido com
computadores da mesma maneira desde a segunda série quando ele viu pela primeira
vez a linguagem de programação Logo e uma dose potencialmente letal de Pac Man.
Isto provavelmente explica porque ele já foi um artista-gráfico chefe na SONY
Electronic Publishing/Psygnosis. Daniel gosta de passar o tempo com sua esposa
Mary e sua nova filha neném, Hadassah. Você pode entrar em contato com Daniel em
<mail>drobbins@gentoo.org</mail> (em inglês).
</p>

</body>
</section>
</chapter>
</guide>
