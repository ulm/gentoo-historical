<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/genkernel.xml,v 1.1 2005/01/29 19:47:38 enderson Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/pt_br/genkernel.xml">
<title>O guia de genkernel do Gentoo Linux</title>

<author title="Autor">
  <mail link="plasmaroo@gentoo.org">Tim Yamin</mail>
</author>
<author title="Tradutor">
  <mail link="marcelogoes@gmail.com">Marcelo Góes</mail>
</author>

<abstract>
Este guia tem a intenção de servir como referência para todas as funções
providenciadas pelo genkernel.
</abstract>

<license/>

<version>1.1.2</version>
<date>5 de novembro, 2004</date>

<chapter>
<title>Introdução</title>
<section>
<title>Introdução</title>
<body>

<p>
O genkernel é desenhado para permitir aos usuários que não estão acostumados
a compilar um kernel usar uma configuração parecida com a que é usada
nos LiveCDs do Gentoo que auto-detectam seu hardware.
</p>

<p>
Alguns usuários também podem estar interessados em usar o genkernel para hardware
que requer inicialização e um kernel funcional antes de poder ser
carregado. Pelo fato de o genkernel também compilar automaticamente seus módulos de kernel,
ele permite que hardware que precisa ser carregados com parâmetros de módulo
sejam usados.
</p>

</body>
</section>
<section>
<title>O genkernel serve para mim?</title>
<body>

<p>
O genkernel é freqüentemente a escolha para aqueles que não tem o costume
de compilar seu próprio kernel ou não tem certeza sobre suas configurações
de hardware.
</p>

<p>
Pelo fato de o genkernel ser desenhado para usar uma configuração genérica, ele
é capaz de suportar todo seu hardware - no entanto, porque todos os
drivers e módulos têm de ser compilados também, a compilação do
kernel feita manualmente é normalmente muito mais rápida desde que você saiba do que precisa.
</p>

<p>
O genkernel não tem atualmente, no entanto, suporte para carregar o sistema a partir
de partições LVM2/EVMS2. Recomenda-se que os usuários usem um kernel compilado manualmente
por enquanto.
</p>

</body>
</section>
<section>
<title>Obtendo o genkernel</title>
<body>

<p>
Você pode obter o genkernel simplesmente rodando <c>emerge genkernel</c>. Não se
esqueça de usar a opção <c>-k</c> para instalá-lo se você estiver usando pacotes binários,
isto é, GRP. Devido aos pacotes GRP terem uma versão antiga do genkernel, as opções
são diferentes. Como resultado, você deve consultar o <uri 
link="/doc/pt_br/handbook/handbook-x86.xml?part=1&amp;chap=10">
Manual do Gentoo</uri> e <path>genkernel --help</path>.
</p>

</body>
</section>
<section>
<title>Plataformas suportadas</title>
<body>

<p>
A partir do genkernel 3.0.2, as seguintes plataformas devem ser
suportadas: alpha, amd64, parisc, parisc64, ppc, ppc64, sparc, sparc64, e x86. Se
você acredita que há um bug com o código de suporte, e não com o
genkernel, por favor relate um no <uri 
link="http://bugs.gentoo.org">Bugzilla do Gentoo.</uri>
</p>

</body>
</section>
</chapter>

<chapter>
<title>Uso do genkernel</title>
<section>
<title>Introdução</title>
<body>

<p>
O genkernel é desenhado para funcionar em três modos:
</p>

<ul>
  <li>modo "all": constrói o kernel e initrd</li>
  <li>modo "kernel": só constrói a imagem de kernel</li>
  <li>modo "initrd": só constrói o initrd</li>
</ul>

<p>
A maior parte dos usuários só devem rodar no modo "all", que roda os modos
"kernel" e "initrd" para você. <b>Note</b> que atualmente os modos "kernel" e
"initrd" são somente apelidos para o modo "all", então atualmente
eles não terão nenhum efeito especial.
</p>

<p>
Embora o genkernel seja principalmente um comando para tornar sua vida mais fácil quando
você precisar compilar um kernel, o genkernel também tem várias
opções diferentes que permitem que você personalize como seu kernel é
compilado ou configurado.
</p>

</body>
</section>
<section>
<title>Opções de compilador do genkernel</title>
<body>

<p>
O genkernel suporta as seguintes opções que são passadas para as
aplicações relevantes quando o kernel é montado:
</p>

<ul>
  <li>
    <b>--kernel-as=<c>algumAssembler</c></b>: Especifica um assembler para
    ser usado na compilação de seu kernel.
  </li>
  <li>
    <b>--kernel-cc=<c>algumCompilador</c></b>: Especifica um compilador para
    ser usado na compilação de seu kernel.
  </li>
  <li>
    <b>--kernel-ld=<c>algumLinker</c></b>: Especifica um linker para
    ser usado na compilação de seu kernel.
  </li>
  <li>
    <b>--kernel-make=<c>algumMake</c></b>: Especifica um GNU make alternativo
    para ser usado na compilação de seu kernel.
  </li>
</ul>

<ul>
  <li>
    <b>--utils-as=<c>algumAssembler</c></b>: Especifica um assembler para
    ser usado na compilação dos utilitários de suporte.
  </li>
  <li>
    <b>--utils-cc=<c>algumCompilador</c></b>: Especifica um compilador para
    ser usado na compilação dos utilitários de suporte.
  </li>
  <li>
    <b>--utils-ld=<c>algumLinker</c></b>: Especifica um linkador para
    ser usado na compilação dos utilitários de suporte.
  </li>
  <li>
    <b>--utils-make=<c>algumMake</c></b>: Especifica um GNU make alternativo
    para ser usado na compilação dos utilitários de suporte.
  </li>
</ul>

<ul>
  <li>
    <b>--makeopts=<c>-jTrabalhos</c></b>: Especifica as opções que devem ser
    passadas para o GNU make quando o kernel e os utilitários estiverem sendo compilados.
  </li>
</ul>

</body>
</section>
<section>
<title>Opções de kernel do genkernel</title>
<body>

<p>
O genkernel suporta as seguintes opções, algumas das quais 
tem uma <c>--<b>no-</b>opção</c> equivalente que influenciam
a compilação do kernel:
</p>

<ul>
  <li>
    <b>--callback="echo Hello"</b>: Esta rotina roda os argumentos
    especificados depois que o kernel e os módulos relevantes foram construídos; mas
    antes da initrd ser construída. Ela é útil quando você quiser instalar
    módulos externos no initrd fazendo emerge do ítem relevante
    usando callback e redefinindo o grupo de módulos do genkernel.
  </li>
  <li>
    <b>--<c>no-</c>clean</b>: Roda <e>ou não
    roda</e> <c>make clean</c> antes de compilar seu kernel. Isto
    faz com que todos arquivos de objeto e dependências sejam removidos.
  </li>
  <li>
    <b>--<c>no-</c>mrproper</b>: Roda <e>ou não
    roda</e> <c>make mrproper</c> antes de compilar seu kernel. Isto
    faz com que todos arquivos de objeto, dependências <b>e sua
    configuração</b> sejam apagados.
  </li>
</ul>

<ul>
  <li>
    <b>--kerneldir=<path>/caminho/para/fontes</path></b>: Especifica um
    local alternativo de fonte, ao invés do local padrão
    <path>/usr/src/linux</path>.
  </li>
  <li>
    <b>--kernel-config=<path>/caminho/para/arquivo-de-config</path></b>: Especifica uma
    configuração alternativa de kernel que seria usada; ao invés do
    não persistente <path>/caminho/para/fontes/.config</path> que é usado por
    padrão.
  </li>
</ul>

<ul>
  <li>
    <b>--<c>no-</c>bootsplash</b>: Adiciona <e>ou não adiciona</e> suporte a
    bootsplash no initrd que o genkernel constrói. Nem todas arquiteturas
    suportam bootsplash atualmente, e um kernel que suporte bootsplash também
    é necessário.
  </li>
  <li>
    <b>--<c>no-</c>menuconfig</b>: Roda <e>ou não roda</e> o configurador
    de kernel baseado em menus antes de construir seu kernel, depois que <c>make 
    oldconfig</c> tenha rodado.
  </li>
</ul>

<ul>
  <li>
    <b>--no-initrdmodules</b>: Não copia nenhum módulo para o initrd
    que o genkernel cria.
  </li>
  <li>
    <b>--<c>no-</c>install</b>: Instala <e>ou não instala</e> seu
    kernel, módulos e initrd uma vez que a compilação tenha terminado.
  </li>
</ul>

</body>
</section>
<section>
<title>Outras opções do genkernel</title>
<body>

<p>
O genkernel também suporta algumas outras opções que não entram nas
duas outras categorias:
</p>

<ul>
  <li>
    <b>--arch-override=<c>algumaArch</c></b>: Esta opção pode ser usada para sobre-carregar
    a arquitetura em que o genkernel pensa estar rodando, se o mecanismo de
    auto-detecção falhar (por favor, relate um bug se falhar!) ou se você deseja
    compilar um kernel para outra arquitetura.
  </li>
</ul>

<ul>
  <li>
    <b>--busybox-config=<path>/caminho/para/config-de-busybox</path></b>: Sobre-carrega
    o configuração de busybox padrão com o arquivo especificado
  </li>
  <li>
    <b>--busybox-bin=<path>/caminho/para/binário-de-busybox.tar.bz2</path></b>: Usar
    esta opção significa que um binário de busybox não será compilado, e a tarball
    especificada será usada. Note que o busybox <c>deve</c> ser compilado
    estaticamente!
  </li>
</ul>

<ul>
  <li>
    <b>--minkernpackage=<path>/saida/de/seukernel.tar.bz2</path></b>: Esta
    opção tira como saída uma tarball do seu kernel, chamada <path>kernel</path> e uma
    initrd chamada <path>initrd</path> para o arquivo especificado. Nenhuma informação
    de caminhos ou módulos será incluída na tarball.
  </li>
</ul>

</body>
</section>
<section>
<title>Rodando o genkernel</title>
<body>

<p>
Tudo que é necessário para rodar o genkernel é o genkernel com as
opções necessárias como administrador (root). Por exemplo:
</p>

<pre caption="Rodando o genkernel">
# genkernel --menuconfig --no-clean --no-install --bootsplash all
<comment>(Produziria um kernel, perguntando como configurá-lo de
acordo com suas preferências, deixando sós quaisquer objetos compilados, ativando
suporte a bootsplash, mas sem instalar nada.)</comment>
</pre>

<p>
Se você quiser que o genkernel instale seu kernel também, você deve ter certeza
de que sua partição <path>/boot</path> está montada - genkernels recentes
devem tentar fazer isso automaticamente para você se MOUNTBOOT estiver como
"yes" em <path>/etc/genkernel.conf</path>.
</p>

<pre caption="Montando seu /boot manualmente">
<comment>(Se /boot for uma entrada válida no /etc/fstab:)</comment>
# mount /boot
<comment>(... caso contrário para discos IDE:)</comment>
# mount /dev/hda1 /boot
<comment>(... e para discos SCSI:)</comment>
# mount /dev/sda1 /boot
</pre>

</body>
</section>
<section>
<title>Configurando o genkernel para funcionar com seu gerenciador de inicialização</title>
<body>

<p>
Para configurar o genkernel para trabalhar com seu gerenciador de inicialização, três ou quatro mudanças são
necessárias à sua configuração de gerenciador de inicialização.
</p>

<ol>
  <li>
    Adicione <c>root=/dev/ram0</c> e <c>init=/linuxrc</c> aos
    parâmetros de kernel passados à imagem de kernel.
  </li>
  <li>
    Adicione <c>real_root=/dev/hda3</c>, por exemplo, aos parâmetros de kernel
    passados à imagem de kernel, se <path>/dev/hda3</path> contiver sua partição
    raiz (root).
  </li>
  <li>
    Se você estiver usando bootsplash, adicione uma linha de modos adequada como
    <c>vga=0x317</c> aos parâmetros passados ao kernel e também adicione
    <c>splash=verbose</c> ou <c>splash=silent</c> dependendo da verbalidade que
    você requer de seu bootsplash.
  </li>
  <li>
    Adicione a initrd de acordo com as necessidades de seu gerenciador de inicialização: veja o <uri 
    link="/doc/pt_br/handbook/handbook-x86.xml?part=1&amp;chap=10">Manual do
    Gentoo</uri> para detalhes de como construí-lo para seu gerenciador de inicialização.
  </li>
</ol>

</body>
</section>
<section>
<title>Arquivos de configuração do kernel</title>
<body>

<p>
O genkernel irá salvar sua configuração de kernel em <path>/etc/kernels</path> e usá-la
quando quer que você rodar <c>genkernel</c> novamente. Se você quiser começar de novo
com os padrões, renomeie o arquivo em <path>/etc/kernels</path>. O genkernel irá
então usar o config de kernel localizado em
<path>/usr/share/genkernel/&lt;arch&gt;</path>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Portando o genkernel</title>
<section>
<title>Introdução</title>
<body>

<p>
Desde que sua arquitetura tenha todas bibliotecas necessárias e utilitários
de que o genkernel precisa, que inclui mas não limita-se a
um kernel que funcione para sua arquitetura, suíte de compiladores funcional, GNU
make, e uma distribuição funcional de busybox, tudo está pronto!
</p>

<p>
Para cada arquitetura, o genkernel usa
<path>/usr/share/genkernel/$archNome</path> para os arquivos de configuração
da arquitetura.
</p>

</body>
</section>
<section>
<title>Como o bootstrapping de sistema funciona</title>
<body>

<ol>
  <li>
    O gerenciador de configuração carrega a imagem do genkernel, construída de acordo com as especificações dos
    arquivos de configuração nos diretórios do genkernel bem como o initrd
    que é preparado pelo genkernel.
  </li>
  <li>
    O kernel inicia, aloca uma pequena quantia de RAM em que o busybox é
    iniciado, que sonda o sistema com os módulos na lista modules_load 
    para a arquitetura.
  </li>
  <li>
    Uma vez pronto, e vendo que o parâmetro <c>real_root</c> é o
    dispositivo de root boot como o busybox enxerga as coisas, o sistema é carregado do
    dispositivo.
  </li>
</ol>

</body>
</section>
<section>
<title>Os arquivos de configuração</title>
<body>

<ul>
  <li>
    <path>busy-config</path>: Esta é a configuração que é usada para construir o
    busybox para sua arquitetura.
  </li>
  <li>
    <path>config.sh</path>: Este é um script de shell que configura várias opções
    internas do genkernel. Veja um dos arquivos <path>config.sh</path> para um
    exemplo.
  </li>
  <li>
    <path>modules_load</path>: Este é um arquivo contendo uma lista delimitada por espaços
    de módulos que são carregados para suporte de SCSI, FireWire, ATARAID e PCMCIA. 
    Se nenhum estiver disponível para sua plataforma, deixe os campos em branco. Veja um dos
    arquivos <path>modules_load</path> para um exemplo.
  </li>
</ul>

<ul>
  <li>
    <path>kernel-config</path>: Uma configuração de kernel padrão usada para qualquer
    versão de kernel.
  </li>
  <li>
    <path>kernel-config-2.4</path>: Uma configuração de kernel padrão usada para a série
    de kernéis 2.4.
  </li>
  <li>
    <path>kernel-config-2.6</path>: Uma configuração de kernel padrão usada para a série
    de kernéis 2.6.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
