<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/handbook/hb-install-hppa-kernel.xml,v 1.10 2005/04/18 21:12:50 vanquirius Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.13</version>
<date>2005-04-16</date>

<section>
<title>Fuso horário</title>
<body>

<p>
Você deve primeiro selecionar seu fuso horário para que seu sistema saiba onde está localizado. Procure seu fuso horário em <path>/usr/share/zoneinfo</path>, então faça um link simbólico para <path>/etc/localtime</path> usando o comando <c>ln</c>:
</p>

<pre caption="Configurando informação de fuso horário">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Suponha que você queira usar GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalando as fontes</title>
<subsection>
<title>Escolhendo um kernel</title>
<body>

<p>
O centro através do qual todas distribuições são construídas é o kernel do Linux. Ele fica entre os programas de usuário e o hardware do sistema. O Gentoo permite que seus usuários escolham dentro de uma variedade de fontes de kernel. Uma lista completa com descrições pode ser encontrada no <uri link="/doc/pt_br/gentoo-kernel.xml">Guia de Kernel do Gentoo</uri>. 
</p>

<p>
O HPPA não é mais suportado pela série de kernéis 2.4. Você tem que usar os <c>hppa-sources</c>.
</p>

<pre caption="Instalando as fontes do kernel">
# <i>emerge hppa-sources</i>
</pre>

<p>
Quando você olhar em <path>/usr/src</path> você deve ver um link simbólico chamado
<path>linux</path> apontando para a fonte do kernel:
</p>

<pre caption="Vendo o link simbólico da fonte do kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.10_p1
</pre>

<p>
Se este não for o caso (isto é, o link simbólico apontar para uma fonte de kernel diferente) mude o link simbólico antes de continuar:
</p>

<pre caption="Mudando o link simbólico da fonte do kernel">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.10_p1 linux</i>
</pre>

<p>
Agora está na hora de configurar e compilar sua fonte do kernel. Você pode usar o comando <c>genkernel</c> para fazer isto, que irá construir um kernel genérico parecido com o do LiveCD. Iremos, porém, explicar a configuração manual primeiro, já que é a melhor maneira de otimizar seu ambiente.
</p>

<p>
Se você quiser configurar seu kernel manualmente, continue agora com  <uri
link="#manual">Padrão: Configuração manual</uri>. Se você quiser usar o comando <c>genkernel</c> você deve ler <uri link="#genkernel">Alternativa: Usando o genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Padrão: Configuração manual</title>
<subsection>
<title>Introdução</title>
<body>

<p>
Configurar um kernel manualmente é freqüentemente tido como o procedimento mais difícil que um usuário de Linux tem de fazer. Grande mentira -- depois de configurar uns dois kernéis você nem lembrará que foi difícil ;)
</p>

<p>
No entanto, uma coisa <e>é</e> verdade: você deve conhecer seu sistema quando você começar a configurar o kernel manualmente. A maior parte das informações pode ser obtida lendo o conteúdo de <path>/proc/pci</path> (ou usando o comando <c>lspci</c> se disponível). Você também pode rodar  <c>lsmod</c> para ver que módulos o LiveCD usa (pode dar uma boa dica sobre o que ativar).
</p>

<p>
Agora vá para o diretório da fonte do kernel e execute <c>make menuconfig</c>. Isto irá iniciar um menu de configuração baseado em ncurses.
</p>

<pre caption="Rodando o menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Você verá várias seções de configuração. Iremos primeiro listar algumas opções que você deve ativar (ou o Gentoo não irá funcionar, ou não irá funcionar sem mudanças adicionais).
</p>

</body>
</subsection>
<subsection>
<title>Ativando as opções necessárias</title>
<body>

<p>
Antes de tudo, ative o uso de código/drivers em desenvolvimento e experimentais. Você precisa disso, senão muito código/drivers importantes não irão aparecer:
</p>

<pre caption="Selecionando código/drivers experimentais">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Agora vá para <c>File Systems</c> e selecione suporte para os sistemas de arquivos que você usa.
<e>Não</e> os compile como módulos, senão seu sistema Gentoo não será capaz de montar suas partições. Também selecione <c>Virtual memory</c>, <c>/proc
file system</c>, <c>/dev file system</c> + <c>Automatically mount at boot</c>:
</p>

<pre caption="Selecionando sistemas de arquivos necessários">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)

<comment>(Selecione uma ou mais das seguintes opções conforme necessárias ao seu sistema)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Se você estiver usando PPPoE para conectar à Internet ou está usando um modem discado, você irá precisar das seguintes opções no kernel:
</p>

<pre caption="Selecionando drivers necessários para PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
As duas opções de compressão não fazem mal, mas não são absolutamente necessárias, bem como a opção <c>PPP over Ethernet</c>, que somente pode ser usada pelo comando <c>rp-pppoe</c> quando configurado para fazer PPPoE em modo de kernel.
</p>

<p>
Se você precisar, não se esqueça de incluir suporte no kernel para sua placa de rede.
</p>

<p>
Se você tiver um mouse ou teclado HIL, não se esqueça de compilar suporte para eles.
</p>

<pre caption="Ativando suporte a teclados HIL">
Input device support ---&gt;
  [*] Keyboards
  [*]   HP HIL keyboard support
</pre>
<pre caption="Ativando suporte a mouses HIL">
  [*] Mice
  [*]   HIL pointers (mice etc).
</pre>


<p>
Também inclua suporte ao driver gráfico:
</p>

<pre caption="Suporte ao driver gráfico">
Graphics support ---&gt;
  [*] Support for frame buffer devices
      [*] HP STI frame buffer device support
  Console display driver support ---&gt;
      [*] STI text console
      [*] Framebuffer Console support
</pre>

<p>
Quando você terminar de configurar seu kernel, continue com  <uri
link="#compiling">Compilando e instalando</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilando e instalando</title>
<body>

<p>
Agora que seu kernel está configurado, está na hora de compilá-lo e instalá-lo. Saia
da configuração e comece o processo de compilação:
</p>

<pre caption="Compilando o kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Quando o kernel terminar de compilar, copie a imagem do kernel para
<path>/boot</path>. No próximo exemplo nós presumimos que você configurou e 
compilou as <c>hppa-sources-2.6.10_p1</c> (que pode não ser o kernel certo para 
sua arquitetura!):
</p>

<pre caption="Instalando o kernel">
# <i>cp vmlinux /boot/vmlinux</i>
# <i>cp System.map /boot/System.map-2.6.10</i>
</pre>

<p>
Também é sábio copiar o seu arquivo de configuração do kernel para
<path>/boot</path>, caso você precise :)
</p>

<pre caption="Copiando sua configuração de kernel">
# <i>cp .config /boot/config-2.6.10</i>
</pre>

<p>
Agora continue com <uri link="#kernel_modules">Configurando módulos do kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativa: Usando o genkernel</title>
<body>

<p>
Se você estiver lendo esta seção, você escolheu usar nosso script <c>genkernel</c> para configurar o kernel para você.
</p>

<p>
Agora que a árvore fonte de seu kernel está instalada, está na hora de compilar seu kernel usando nosso script <c>genkernel</c> para construir um kernel automaticamente para você. 
O <c>genkernel</c> funciona configurando um kernel praticamente idêntico ao modo que nosso kernel do LiveCD é configurado. Isto significa que quando você usar o comando <c>genkernel</c> para construir seu kernel, seu sistema irá geralmente detectar seu hardware na hora da inicialização, como no Live CD. Dado que o genkernel não necessita de nenhuma configuração manual, é uma solução ideal para aqueles usuários que não se sentem confortáveis compilando seus próprios kernéis.
</p>

<p>
Agora vamos ver como usar o genkernel. Primeiro, faça emerge da ebuild do genkernel:
</p>

<pre caption="Instalando o genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Agora, compile suas fontes de kernel rodando <c>genkernel all</c>.
Esteja alerta, entretanto, de que como o <c>genkernel</c> compila um kernel que suporta quase todos hardwares, esta compilação irá demorar bastante para terminar!
</p>

<p>
Note que se sua partição de inicialização (boot) não usa ext2 ou ext3 como sistema de arquivos você precisará configurar manualmente seu kernel usando o comando  <c>genkernel --menuconfig all</c>
e adicionando suporte para seu sistema de arquivos <e>DENTRO</e> do kernel (isto é, <e>não</e> como módulo).
</p>

<pre caption="Rodando o genkernel">
# <i>genkernel all</i>
GenKernel v3.0.1_beta10
* ARCH: HPPA 
* KERNEL VER: 2.4.24
* kernel: configuring source
* kernel: running mrproper
<comment>(Output removed to increase readability)</comment>
* Kernel compiled successfully!
* Required Kernel Params:
*   : root=/dev/ram0 init=/linuxrc real_root=/dev/$ROOT
*     where $ROOT is the devicenode for your root partition as
*     you should have specified in /etc/fstab
*              
* You MUST tell your bootloader to use the generated initrd
*              
* Recommended Kernel Params:
*   : vga=0x317 splash=verbose
*              
* Do NOT report kernel bugs (configs included) as genkernel bugs.
* Make sure you have the latest genkernel before reporting bugs
*              
* For more info see /usr/share/genkernel/README
</pre>

<p>
Uma vez que o <c>genkernel</c> termine, um kernel, um conjunto completo de módulos e um <e>initial root disk</e> (initrd) serão criados. Nós iremos usar o kernel e o initrd quando formos configurar um gerenciador de inicialização numa parte mais adiantada deste documento. Escreva os nomes do kernel e initrd, uma vez que você irá precisar deles quando for escrever o arquivo de configuração do gerenciador de inicialização. A initrd será iniciada imediatamente após a inicialização para fazer a auto-detecção de hardware (igual ao Live CD), antes de seu sistema "de verdade" iniciar.
</p>

<pre caption="Verificando o nome da imagem de kernel criada e initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Agora, vamos fazer mais um passo para deixar nosso sistema mais parecido com o Live CD -- vamos instalar o <c>coldplug</c>. Enquanto o initrd detecta automaticamente hardware que é necessário para carregar seu sistema, o <c>coldplug</c> detecta o resto.
Para instalar e habilitar o <c>coldplug</c>, digite o seguinte:
</p>

<pre caption="Instalando e habilitando o coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

<p>
Se você quiser que seu sistema reaja a todos eventos de hotplugging, você deve
instalar e configurar o hotplug também:
</p>

<pre caption="Instalando e habilitando o hotplug">
# <i>emerge hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Configurando módulos do kernel</title>
<subsection>
<title>Configurando os módulos</title>
<body>

<p>
Você deve listar os módulos que você quer carregar automaticamente em 
<path>/etc/modules.autoload.d/kernel-2.6</path>. 
Você pode colocar opções adicionais aos módulos também se quiser.
</p>

<p>
Para ver todos módulos disponíveis, rode o seguinte comando usando o <c>find</c>. Não se esqueça de substituir "&lt;versão do kernel&gt;" com a versão do kernel que você acaba de compilar:
</p>

<pre caption="Vendo todos módulos disponíveis">
# <i>find /lib/modules/&lt;versão do kernel&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Por exemplo, para carregar o módulo <c>3c59x.o</c> automaticamente, edite o arquivo 
<path>kernel-2.6</path> e coloque o nome do módulo nele.
</p>

<pre caption="Editando o /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Continue a instalação com <uri link="?part=1&amp;chap=8">Configurando seu sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
