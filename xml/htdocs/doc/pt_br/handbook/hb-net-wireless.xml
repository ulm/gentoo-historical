<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/handbook/hb-net-wireless.xml,v 1.2 2005/06/17 21:34:49 vanquirius Exp $ -->

<sections>

<version>1.1</version>
<date>2005-06-14</date>

<section>
<title>Introdução</title>
<body>

<p>
Atualmente nós suportamos configurações wireless tanto através de wireless-tools
ou wpa_supplicant. A coisa importante a ser lembrada é que você configure para
redes wireless com base global e não com base em interface.
</p>

<p>
wpa_suppliant é a melhor escolha, mas não suporta todos drivers.
Para uma lista de drivers suportados,
<uri link="http://hostap.epitest.fi/wpa_supplicant">leia o site do
wpa_supplicant</uri>. Também, o wpa_supplicant só pode conectar atualmente a
SSID que você tenha configurado.
</p>

<p>
wireless-tools suporta quase todos cartões e drivers, mas não pode conectar
a pontos de acesso (APs) só de WPA.
</p>

<warn>
O driver linux-wlan-ng não é suportado pelo baselayout neste momento.
Isto ocorre porque o linux-wlan-ng tem seus próprios ajustes e configuração
que são completamente diferentes do resto. Existe um boato de que os
desenvolvedores do linux-wlan-ng estejam mudando sua configuração para a do
wireless-tools - quando isto acontecer, você poder usar o linux-wlan-ng com
o baselayout.
</warn>

</body>
</section>
<section>
<title>WPA Supplicant (suplicante)</title>
<body>

<p>
<uri link="http://hostap.epitest.fi/wpa_supplicant">WPA Supplicant</uri> é
um pacote que permite que você conecte-se a pontos de acesso com WPA. Sua
configuração é bem fluida já que ainda está em beta - no entanto, funciona bem
na maior parte.
</p>

<pre caption="Instale o wpa_supplicant">
# <i>emerge net-wireless/wpa_supplicant</i>
</pre>

<impo>
Você deve ter CONFIG_PACKET ativado em seu kernel para que o wpa_supplicant
funcione
</impo>

<p>
Agora nós configuramos o <path>/etc/conf.d/net</path> para que prefiramos
wpa_supplicant ao invés de wireless-tools (se ambos estiverem instalados, o
wireless-tools é o padrão).
</p>

<pre caption="configure /etc/conf.d/net para wpa_supplicant">
<comment># Preferir wpa_supplicant ao invés de wireless-tools</comment>
modules=( "wpa_supplicant" )

<comment># É importante dizer ao wpa_supplicant que driver nós devemos
# usar já que ele ainda não é bom em adivinhar</comment>
wpa_supplicant_eth0="-Dmadwifi"
</pre>

<note>
Se você estiver usando o driver host-ap, você precisará colocar o cartão em modo
Managed antes de poder ser usando com wpa_supplicant corretamente. Você pode
usar <e>iwconfig_eth0="mode managed"</e> para fazer isto no
<path>/etc/conf.d/net</path>.
</note>

<p>
Foi simples, não foi? Todavia, ainda precisamos configurar o próprio
wpa_supplicant, o que é um pouco complicado dependendo da segurança dos pontos
de acesso a que você está tentando conectar. O exemplo abaixo é tirado e
simplificado do <path>/etc/wpa_supplicant.conf.example</path> que vem
com o wpa_supplicant.
</p>

<pre caption="um exemplo de /etc/wpa_supplicant.conf">
<comment># A linha abaixo não pode ser mudada, senão não funcionamos</comment>
ctrl_interface=/var/run/wpa_supplicant

<comment># Certificar que só o administrador (root) pode ler a configuração de WPA</comment>
ctrl_interface_group=0

<comment># Permitir que o wpa_supplicant tome conta do escaneamento e seleção de AP</comment>
ap_scan=1

<comment># Caso simples: WPA-PSK, PSK como uma senha ASCII, permitir todas cifras válidas</comment>
network={
  ssid="simples"
  psk="senha super secreta"
  <comment># Quanto maior a prioridade, mais rápido somos encontrados</comment>
  priority=5
}

<comment># Igual ao anterior, mas pedir escaneamento específico de SSID (para APs que rejeitam
# broadcast SSID)</comment>
network={
  ssid="segundo ssid"
  scan_ssid=1
  psk="senha super secreta"
  priority=2
}

<comment># Só WPA-PSK é usado. QUalquer combinação válida de cifras é usada</comment>
network={
  ssid="exemplo"
  proto=WPA
  key_mgmt=WPA-PSK
  pairwise=CCMP TKIP
  group=CCMP TKIP WEP104 WEP40
  psk=06b4be19da289f475aa46a33cb793029d4ab3db7a23ee92382eb0106c72ac7bb
  priority=2
}

<comment># Conexão de texto simples (sem WPA, sem IEEE 802.1X)</comment>
network={
  ssid="textosimples-teste"
  key_mgmt=NONE
}

<comment># Conexão de chave WEP compartilhada (sem WPA, sem IEEE 802.1X)</comment>
network={
  ssid="static-wep-test"
  key_mgmt=NONE
  wep_key0="abcde"
  wep_key1=0102030405
  wep_key2="1234567890123"
  wep_tx_keyidx=0
  priority=5
}

<comment># Conexão de chave WEP compartilhada (sem WPA, sem IEEE 802.1X) usando chave compartilhada
# com autenticação IEEE 802.11</comment>
network={
  ssid="static-wep-test2"
  key_mgmt=NONE
  wep_key0="abcde"
  wep_key1=0102030405
  wep_key2="1234567890123"
  wep_tx_keyidx=0
  priority=5
  auth_alg=SHARED
}

<comment># rede IBSS/ad-hoc com WPA-None/TKIP</comment>
network={
  ssid="test adhoc"
  mode=1
  proto=WPA
  key_mgmt=WPA-NONE
  pairwise=NONE
  group=TKIP
  psk="senha secreta"
}
							
</pre>									

</body>
</section>
<section>
<title>Wireless Tools (ferramentas de wireless)</title>

<subsection>
<title>Configuração inicial e modo managed</title>
<body>

<p>
<uri link="http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html">
Wireless Tools</uri> fornecem um modo genérico de configurar interfaces de 
wireless básicas até o nível de segurança WEP. Embora o WEP seja um método de
segurança fraco, também é o predominante.
</p>

<p>
A configuração do Wireless Tools é controlada por algumas variáveis principais.
O arquivo de configuração abaixo deve descrever tudo de que você precisa. Uma
coisa para ter em mente é que nenhuma configuração significa "conectar ao ponto
de acesso sem criptografia mais forte" - nós sempre iremos tentar e conectar
você com alguma coisa.
</p>

<pre caption="Instale o wireless-tools">
# <i>emerge net-wireless/wireless-tools</i>
</pre>

<note>
Embora você possa gravar seus ajustes de wireless em
<path>/etc/conf.d/wireless</path> este guia recomenda que você guarde-os em
<path>/etc/conf.d/net</path>
</note>

<impo>
Você <e>irá</e> precisar consultar a
documentação de
<uri link="?part=3&amp;chap=2#variable_name">nomes de variáveis</uri>.
</impo>

<pre caption="exemplo de ajuste de iwconfig em /etc/conf.d/net">
<comment># Preferir iwconfig ao invés de wpa_supplicant</comment>
modules=( "iwconfig" )

<comment># Configurar chaves de WEP para pontos de acesso chamados ESSID1 e ESSID2</comment>
<comment># Você pode configurar até 4 chaves WEP, mas só 1 pode estar ativa
# durante qualquer hora, então damos um índice padrão [1] para configurar a chave [1] e então
# novamente depois para mudar a chave ativa para [1]
# Fazemos isto caso você defina outros ESSID's para usar as chaves WEP fora 1
# Prefixar a chave com s: significa que é uma chave ASCII, caso contrário é uma chave HEX
# enc open specified open security (mais seguro)
# enc restricted specified restricted security (menos seguro)</comment>
key_ESSID1="[1] s:suachaveaqui key [1] enc open"
key_ESSID2="[1] aaaa-bbbb-cccc-dd key [1] enc restricted"

<comment># O abaixo só funciona quando escaneamos pontos de acesso disponíveis</comment>

<comment># Às vezes mais de um ponto de acesso está visível, então precisamos
# definir um preferido para conectar</comment>
preferred_aps=( "ESSID1" "ESSID2" )
</pre>

</body>
</subsection>
<subsection>
<title>Ajustes finos de seleção de pontos de acesso</title>
<body>

<p>
Você pode encontrar algumas opções adicionais para fazer ajustes finos a sua
seleção de pontos de acesso, mas não são normalmente necessários.
</p>

<p>
Você pode decidir se apenas conectamos aos pontos de acesso preferidos ou não.
Por padrão, se tudo configurado falhar e pudermos conectar-nos a um
ponto de acesso sem criptografia, faremos isso. Isto pode ser controlado pela
variável <c>associate_order</c>. Aqui está uma tabela de valores e como eles
controlam isso.
</p>

<table>
<tr>
  <th>Valor</th>
  <th>Descrição</th>
</tr>
<tr>
  <ti>any</ti>
  <ti>Comportamento padrão</ti>
</tr>
<tr>
  <ti>preferredonly</ti>
  <ti>Só iremos conectar a pontos de acesso visíveis na lista de preferência</ti>
</tr>
<tr>
  <ti>forcepreferred</ti>
  <ti>
    Nós iremos forçar a conexão a pontos de acesso na ordem preferida se não
    forem encontrados em um escaneamento
  </ti>
</tr>
<tr>
  <ti>forcepreferredonly</ti>
  <ti>
    Não escanear pontos de acesso - ao invés disso, conectar-se a cada um em
    ordem
  </ti>
</tr>
<tr>
  <ti>forceany</ti>
  <ti>
    Igual a forcepreferred + conectar a qualquer outro ponto de acesso
    disponível
  </ti>
</tr>
</table>

<p>
Finalmente nós temos algumas seleções de blacklist_aps e unique_ap.
blacklist_aps funciona de uma forma parecida a preferred_aps. unique_ap é um
valor yes ou no que diz se uma segunda interface de wireless pode conectar-se ao
mesmo ponto de acesso que a primeira interface.
</p>

<pre caption="exemplo de blacklist_aps e unique_ap">
<comment># Às vezes você não deseja conectar-se a certos pontos de acesso</comment>
blacklist_aps=( "ESSID3" "ESSID4" )

<comment># Se você tiver mais que um cartão wireless, você pode dizer se você quer
# permitir que cada cartão se associe com o mesmo ponto de acesso ou não
# Valores são "yes" e "no"
# O padrão é "yes"</comment>
unique_ap="yes"
</pre>

</body>
</subsection>
<subsection>
<title>Modos Ad-Hoc e Master</title>
<body>

<p>
Se você quiser configurar-se como um node de Ad-Hoc se você não conseguir
conectar-se a nenhum ponto de acesso em modo managed, você também pode fazê-lo.
</p>

<pre caption="alternativa de modo ad-hoc">
adhoc_essid_eth0="Este node de Adhoc"
</pre>

<p>
E conectar-se a redes Ad-Hoc ou rodar em modo Master para tornar-se
um ponto de acesso? Aqui está uma configuração para isto! Você pode precisar
especificar chaves de WEP como mostrado acima.
</p>

<pre caption="exemplo de configuração de ad-hoc/master">
<comment># Configurar o modo - pode ser managed (padrão), ad-hoc ou master
# Nem todos drivers suportam todos modos</comment>
mode_eth0="ad-hoc"

<comment># Configure o ESSID da interface
# Em modo managed, isto força a interface a tentar e conectar-se ao
# ESSID especificado e nada mais</comment>
essid_eth0="Este node de Adhoc"

<comment># Nós usamos o canal 3 se você não especificar um</comment>
channel_eth0="9"
</pre>

<impo>
O abaixo é tirado diretamente da documentação de wavelan do BSD encontrada na
<uri link="http://www.netbsd.org/Documentation/network/wavelan.html">
documentação do NetBSD</uri>.
Existem 14 canais possíveis; É dito a nós que os canais 1-11 são legais para a
América do Norte, canais 1-13 para a maior parte da Europa, canais 10-13 para a
France, e só canal 14 para o Japão. Se em dúvida, por favor faça referência à
documentação que veio junto com seu cartão ou ponto de acesso. Certifique-se de
que o canal que você selecionar é o mesmo canal de seu ponto acesso (ou o mesmo
cartão na rede ad-hoc). O padrão para cartos vendidos na América do Norte e a
maior parte da Europa é 3; o padrão para cartões vendidos na França é 11, e o
padrão para cartões vendidos no Japão é 14.
</impo>

</body>
</subsection>
<subsection>
<title>Resolvendo problemas com o Wireless Tools</title>
<body>

<p>
Existem mais algumas variáveis que você pode usar para colocar sua conexão
wireless para funcionar devido a problemas de driver ou ambiente. Aqui está uma
tabela com outras coisas que você pode tentar.
</p>

<table>
<tr>
  <th>Variável</th>
  <th>Valor padrão</th>
  <th>Descrição</th>
</tr>
<tr>
  <ti>iwconfig_eth0</ti>
  <ti/>
  <ti>
    Veja a página de man do iwconfig para detalhes sobre o que enviar ao
    iwconfig
  </ti>
</tr>
<tr>
  <ti>iwpriv_eth0</ti>
  <ti/>
  <ti>
    Ver a página de man do iwpriv para detalhes sobre o que enviar ao iwpriv
  </ti>
</tr>
<tr>
  <ti>sleep_scan_eth0</ti>
  <ti>0</ti>
  <ti>
    O número de segundos para dormir antes de tentar escanear. Isto é
    necessário quando o driver/firmware precisa de mais tempo para ser ativado
    antes de ser usado.
  </ti>
</tr>
<tr>
  <ti>sleep_associate_eth0</ti>
  <ti>5</ti>
  <ti>
    O número de segundos para esperar que a interface se associe com um
    ponto de acesso antes de tentar o próximo
  </ti>
</tr>
<tr>
  <ti>associate_test_eth0</ti>
  <ti>MAC</ti>
  <ti>
    Alguns drivers não resetam o endereço de MAC associado com um
    inválido quando perdem ou tentam associação.<br/>
    Alguns drivers não resetam o nível de qualidade quando perdem
    ou tentam associação.<br/>
    Valores válidos são MAC, quality e all.
  </ti>
</tr>
<tr>
  <ti>scan_mode_eth0</ti>
  <ti/>
  <ti>
    Alguns drivers aqui tem que escanear em modo ad-hoc, então se o
    escaneamento falhar, tentar configurar ad-hoc aqui
  </ti>
</tr>
<tr>
  <ti>iwpriv_scan_pre_eth0</ti>
  <ti/>
  <ti>
    Envia alguns comandos de iwpriv para a interface antes de escanear.
    Ver a página de man do iwpriv para mais detalhes
  </ti>
</tr>
<tr>
  <ti>iwpriv_scan_post_eth0</ti>
  <ti/>
  <ti>
    Envia alguns comandos de iwpriv para a interface após escanear.
    Ver a página de man do iwpriv para mais detalhes
  </ti>
</tr>
</table>

</body>
</subsection>
</section>
<section>
<title>Definindo configuração de rede por ESSID</title>
<body>

<p>
Às vezes quando você se conecta ao ESSID1 você precisa de um IP estático e
quando você se conecta ao ESSID2 você precisa de DHCP. Na verdade, a maior parte
das variáveis de módulos variam por ESSID. Aqui está como fazemos isto.
</p>

<note>
O seguinte funciona se você estiver usando WPA Supplicant ou Wireless Tools.
</note>

<impo>
Você <e>irá</e> precisar consultar a
documentação de
<uri link="?part=3&amp;chap=2#variable_name">nomes de variáveis</uri>.
</impo>

<pre caption="sobrepor ajustes de rede por ESSID">
config_ESSID1=( "192.168.0.3/24 brd 192.168.0.255" )
routes_ESSID1=( "default via 192.168.0.1" )

config_ESSID2=( "dhcp" )
fallback_ESSID2=( "192.168.3.4/24" )
fallback_route_ESSID2=( "default via 192.168.3.1" )

<comment># Nós também podemos definir servidores de nome e outras coisas</comment>
<comment># NOTA: O DHCP irá sobrepor o seguinte a menos que seja dito o contrário</comment>
dns_servers_ESSID1=( "192.168.0.1" "192.168.0.2" )
dns_domain_ESSID1="algum.domínio"
dns_search_domains_ESSID1="procurar.este.domínio. procurar.aquele.domínio"

<comment># Você sobrepõe por endereço de MAC do ponto de acesso
# É útil se você vai para diferentes lugares que tem o mesmo ESSID</comment>
config_001122334455=( "dhcp" )
dhcpcd_001122334455="-t 10"
dns_servers_001122334455=( "192.168.0.1" "192.168.0.2" )
</pre>

</body>
</section>
</sections>
