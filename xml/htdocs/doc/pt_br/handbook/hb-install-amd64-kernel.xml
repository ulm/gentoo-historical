<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/handbook/hb-install-amd64-kernel.xml,v 1.15 2006/02/16 15:32:41 vanquirius Exp $ -->

<sections>

<version>2.13</version>
<date>2006-02-15</date>

<section>
<title>Fuso horário</title>
<body>

<p>
Você deve primeiro selecionar seu fuso horário para que seu sistema saiba onde 
está localizado. Procure seu fuso horário em <path>/usr/share/zoneinfo</path>, 
então copie-o para <path>/etc/localtime</path>. Por favor evite as zonas de fuso
horário em <path>/usr/share/zoneinfo/Etc/GMT*</path>, já que seus nomes não
refletem as zonas esperadas. Por exemplo, <path>GMT-8</path> é na verdade GMT+8.
</p>

<pre caption="Configurando informação de fuso horário">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Suponha que você queira usar GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalando as fontes</title>
<subsection>
<title>Escolhendo um kernel</title>
<body>

<p>
O centro através do qual todas distribuições são construídas é o kernel do
Linux. Ele fica entre os programas de usuário e o hardware do sistema. O Gentoo
permite que seus usuários escolham dentro de uma variedade de fontes de kernel.
Uma lista completa com descrições pode ser encontrada no
<uri link="/doc/pt_br/gentoo-kernel.xml">Guia de Kernel do Gentoo</uri>. 
</p>

<p>
Para sistemas baseados em AMD64 nós temos o <c>gentoo-sources</c> (fontes do
kernel v2.6 com patches específicos de amd64 para estabilidade, performance e
suporte para hardware).
</p>

<p>
Escolha sua fonte de kernel e instale-a usando o comando <c>emerge</c>.
O <c>USE="-doc"</c> é necessário para evitar instalar xorg-x11 ou outras
dependências neste ponto. <c>USE="symlink"</c> não é necessário para uma nova
instalação, mas garante a criação correta do link simbólico
<path>/usr/src/linux</path>.
</p>

<pre caption="Instalando uma fonte de kernel">
# <i>USE="-doc symlink" emerge gentoo-sources</i>
</pre>

<p>
Quando você olhar em <path>/usr/src</path> você deve ver um link simbólico
chamado <path>linux</path> apontando para a fonte do kernel. Neste caso, as
fontes de kernel instaladas apontam para <c>gentoo-sources-2.6.12-r10</c>. Sua
versão pode ser diferente, mantenha isto em mente.
</p>

<pre caption="Vendo o link simbólico da fonte do kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root    root        12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.12-gentoo-r10
</pre>

<p>
Agora está na hora de configurar e compilar sua fonte do kernel. Você pode usar
o comando <c>genkernel</c> para fazer isto, que irá construir um kernel genérico
parecido com o do CD de instalação. Iremos, porém, explicar a configuração
manual primeiro, já que é a melhor maneira de otimizar seu ambiente.
</p>

<p>
Se você quiser configurar seu kernel manualmente, continue agora com <uri
link="#manual">Padrão: Configuração manual</uri>. Se você quiser usar o comando
<c>genkernel</c>, você deve ler <uri link="#genkernel">Alternativa: Usando o
genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Padrão: Configuração manual</title>
<subsection>
<title>Introdução</title>
<body>

<p>
Configurar um kernel manualmente é freqüentemente tido como o procedimento mais
difícil que um usuário de Linux tem de fazer. Grande mentira -- depois de
configurar uns dois kernéis você nem lembrará que foi difícil ;)
</p>

<p>
No entanto, uma coisa <e>é</e> verdade: você deve conhecer seu sistema quando
você começar a configurar o kernel manualmente. A maior parte das informações
pode ser obtida instalando o pciutils (<c>emerge pciutils</c>), que contém o
<c>lspci</c>. Você poderá usar o <c>lspci</c> dentro do ambiente de chroot. Você
pode seguramente ignorar quaisquer avisos de <e>pcilib</e> (como pcilib: cannot
open /sys/bus/pci/devices) que o <c>lspci</c> der. Alternativamente, você pode
rodar <c>lspci</c> de um ambiente <e>fora do chroot</e>. Os resultados são os
mesmos. Você também pode rodar <c>lsmod</c> para quer ver módulos de kernel o CD
de Instalação usa (pode dar uma boa dica sobre o que ativar).
</p>

<p>
Agora vá para o diretório da fonte do kernel e execute <c>make menuconfig</c>.
Isto irá iniciar um menu de configuração baseado em ncurses.
</p>

<pre caption="Rodando o menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Você verá várias seções de configuração. Iremos primeiro listar algumas opções
que você deve ativar (ou o Gentoo não irá funcionar, ou não irá funcionar sem
mudanças adicionais).
</p>

</body>
</subsection>
<subsection>
<title>Ativando as opções necessárias</title>
<body>

<p>
Antes de tudo, ative o uso de código/drivers em desenvolvimento e experimentais.
Você precisa disso, senão muito código/drivers importantes não irão aparecer:
</p>

<pre caption="Selecionando código/drivers experimentais">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Agora vá para <c>General Setup</c> e já que o 2.6 é o padrão e único kernel
suportado por AMD64, iremos ativar <c>support for hot-pluggable devices</c> para
uso com udev.
</p>

<pre caption="General Support">
General setup ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Agora nós selecionamos o tipo exato de processador.
</p>

<pre caption="Selecionando tipo de processador e funções">
Processor type and features  --->
  Processor family (AMD-Opteron/Athlon64)  --->
    ( ) AMD-Opteron/Athlon64
    ( ) Intel EM64T
    ( ) Generic-x86-64"
</pre>

<p>
Agora vá para <c>File Systems</c> e selecione suporte para os sistemas de
arquivos que você usa. <e>Não</e> os compile como módulos, senão seu sistema
Gentoo não será capaz de montar suas partições. Também selecione <c>Virtual
memory</c> e <c>/proc file system</c>.
</p>

<pre caption="Selecionando sistemas de arquivos necessários">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)


<comment>(Selecione uma ou mais das seguintes opções conforme necessárias ao seu sistema)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Se você estiver usando PPPoE para conectar à Internet ou estiver usando um modem
discado, você irá precisar das seguintes opções no kernel:
</p>

<pre caption="Selecionando drivers necessários para PPPoE">
Device Drivers ---&gt;
  Networking Support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
As duas opções de compressão não fazem mal, mas não são absolutamente
necessárias, bem como a opção <c>PPP over Ethernet</c>, que somente pode ser
usada pelo comando <c>rp-pppoe</c> quando configurado para fazer PPPoE em modo
de kernel.
</p>

<p>
Se você precisar, não se esqueça de incluir suporte no kernel para sua placa de
rede.
</p>

<p>
Se você tem um sistema de CPUs múltiplas Opteron ou de cores múltiplos (como
AMD64 X2), você deve ativar o "Symmetric multi-processing support":
</p>

<pre caption="Ativando suporte de SMP">
Processor type and features ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Se você usa dispositivos USB (como teclado ou mouse) não se esqueça de ativá-los
também:
</p>

<pre caption="Ativando suporte a USB para dispositivos de entrada">
Device Drivers ---&gt;
  USB Support ---&gt;
    &lt;*&gt;   USB Human Interface Device (full HID) support
  [*] HID input layer support
</pre>

<p>
Quando você terminar de configurar seu kernel, continue com  <uri
link="#compiling">Compilando e instalando</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilando e instalando</title>
<body>

<p>
Agora que seu kernel está configurado, está na hora de compilá-lo e instalá-lo.
Saia da configuração e comece o processo de compilação:
</p>

<pre caption="Compilando o kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Quando o kernel terminar de compilar, copie a imagem do kernel para 
<path>/boot</path>. Use o nome que você achar mais adequado para sua escolha de
kernel e lembre-se dele, já que você irá precisar dele quando você for
configurar seu gerenciador de inicialização. Lembre-se de substituir
<path>&lt;versão-do-kernel&gt;</path> com o nome e versão de seu kernel.
</p>

<pre caption="Instalando o kernel">
+# <i>cp arch/x86_64/boot/bzImage /boot/&lt;versão-do-kernel&gt;</i>
</pre>

<p>
Agora continue com <uri link="#kernel_modules">Configurando módulos do
kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativa: Usando o genkernel</title>
<body>

<p>
Se você estiver lendo esta seção, você escolheu usar nosso script
<c>genkernel</c> para configurar o kernel para você.
</p>

<p>
Agora que a árvore fonte de seu kernel está instalada, está na hora de compilar
seu kernel usando nosso script <c>genkernel</c> para construir um kernel
automaticamente para você. O <c>genkernel</c> funciona configurando um kernel
praticamente idêntico ao modo que nosso kernel do CD de instalação é
configurado. Isto significa que quando você usar o comando <c>genkernel</c> para
construir seu kernel, seu sistema irá geralmente detectar seu hardware na hora
da inicialização, como no CD de instalação. Dado que o genkernel não necessita
de nenhuma configuração manual, é uma solução ideal para aqueles usuários que
não se sentem confortáveis compilando seus próprios kernéis.
</p>

<p>
Agora vamos ver como usar o genkernel. Primeiro, faça emerge da ebuild do
genkernel:
</p>

<pre caption="Instalando o genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Agora, compile suas fontes de kernel rodando <c>genkernel all</c>. Esteja
alerta, entretanto, de que como o <c>genkernel</c> compila um kernel que suporta
quase todos hardwares, esta compilação irá demorar bastante para terminar!
</p>

<p>
Note que se sua partição de inicialização (boot) não usa ext2 ou ext3 como
sistema de arquivos, você precisará configurar manualmente seu kernel usando o
comando  <c>genkernel --menuconfig all</c> e adicionando suporte para seu
sistema de arquivos <e>DENTRO</e> do kernel (isto é, <e>não</e> como módulo).
</p>

<pre caption="Rodando o genkernel">
# <i>genkernel all</i>
</pre>

<p>
Quando o <c>genkernel</c> terminar, um kernel, um conjunto completo de módulos
e um <e>initial root disk</e> (initrd) serão criados. Nós iremos usar o kernel e
o initrd quando formos configurar um gerenciador de inicialização numa parte
mais adiantada deste documento. Escreva os nomes do kernel e initrd, uma vez que
você irá precisar deles quando for escrever o arquivo de configuração do
gerenciador de inicialização. A initrd será iniciada imediatamente após a
inicialização para fazer a auto-detecção de hardware (igual ao CD de
instalação), antes de seu sistema "de verdade" iniciar.
</p>

<pre caption="Verificando o nome da imagem de kernel criada e initrd">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

<p>
Agora, vamos fazer mais um passo para deixar nosso sistema mais parecido com o
CD de instalação -- vamos instalar o <c>coldplug</c>. Enquanto o initrd detecta
automaticamente hardware que é necessário para carregar seu sistema, o
<c>coldplug</c> detecta o resto. Para instalar e habilitar o <c>coldplug</c>,
digite o seguinte:
</p>

<pre caption="Instalando e habilitando o coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Configurando módulos do kernel</title>
<subsection>
<title>Configurando os módulos</title>
<body>

<p>
Você deve listar os módulos que você quer carregar automaticamente em  
<path>/etc/modules.autoload.d/kernel-2.6</path>. Você pode colocar opções
adicionais aos módulos também se quiser.
</p>

<p>
Para ver todos módulos disponíveis, rode o seguinte comando usando o
<c>find</c>. Não se esqueça de substituir "&lt;versão do kernel&gt;" com a
versão do kernel que você acaba de compilar:
</p>

<pre caption="Vendo todos módulos disponíveis">
# <i>find /lib/modules/&lt;versão do kernel&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Por exemplo, para carregar o módulo <c>3c59x.o</c> automaticamente, edite o
arquivo <path>kernel-2.6</path> e coloque o nome do módulo nele.
</p>

<pre caption="Editando o /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Continue a instalação com <uri link="?part=1&amp;chap=8">Configurando seu
sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
