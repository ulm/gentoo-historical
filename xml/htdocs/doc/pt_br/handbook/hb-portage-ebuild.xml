<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/handbook/hb-portage-ebuild.xml,v 1.3 2005/01/20 16:32:17 enderson Exp $ -->

<sections>

<version>1.3</version>
<date>2004-10-24</date>

<section>
<title>Emerge e ebuild</title>
<body>

<p>
A aplicação <c>ebuild</c> é uma interface de baixo nível com o sistema do Portage.
Usando a aplicação você pode executar ações específicas em uma dada ebuild.
Por exemplo, você pode fazer passos de instalação individuais você mesmo.
</p>

<p>
Usar <c>ebuild</c> serve mais para propósitos de desenvolvimento; mais informações sobre
<c>ebuild</c> pode, logo, ser encontrado no <uri
link="/proj/en/devrel/handbook/handbook.xml">Manual dos Desenvolvedores</uri>, em inglês. No entanto,
iremos explicar que instâncias do ebuild são invocados pelo Portage durante o processo
de instalação de um certo título de software, e como invocar os passos de pós-configuração
que algumas ebuilds pedem que você faça.
</p>

</body>
</section>
<section>
<title>Instalando software manualmente</title>
<subsection>
<title>Baixando as fontes &amp; fazendo checksum delas</title>
<body>

<p>
Quando você invoca <c>ebuild</c> em um dado arquivo de ebuild, ele verifica se
as checksums de todos arquivos envolvidos são iguais às do
<path>Manifest</path> acompanhante ou arquivo 
<path>files/digest-&lt;nome&gt;-&lt;versão&gt;</path>. Isso
só acontece depois das fontes terem sido baixadas.
</p>

<p>
Para baixar as fontes usando <c>ebuild</c>, rode:
</p>

<pre caption="Baixando as fontes">
# <i>ebuild path/to/ebuild fetch</i>
</pre>

<p>
Se o md5sum da ebuild não bater com o listado no arquivo
<path>Manifest</path>, ou uma das fontes baixadas não bater com as
litadas no arquivo <path>files/digest-&lt;pacote&gt;</path>, você irá receber um
erro parecido com o seguinte:
</p>

<pre caption="Erro no checksum de um ebuild">
!!! File is corrupt or incomplete. (Digests do not match)
>>> our recorded digest: db20421ce35e8e54346e3ef19e60e4ee
>>>  your file's digest: f10392b7c0b2bbc463ad09642606a7d6
</pre>

<p>
A linha subseqüente irá mencionar o arquivo com erro.
</p>

<p>
Se você tiver certeza que as fontes que você baixou e o ebuild em si são
válidos, você pode gerar manualmente o <path>Manifest</path> e o arquivo
<path>digest-&lt;pacote&gt;</path> usando a função digest do
<c>ebuild</c>:
</p>

<pre caption="Gerando novo Manifest e digest">
# <i>ebuild caminho/para/ebuild digest</i>
</pre>

</body>
</subsection>
<subsection>
<title>Desempacotando as fontes</title>
<body>

<p>
Para desempacotar as fontes em <path>/var/tmp/portage</path> (ou qualquer outro local
que você especificou em <path>/etc/make.conf</path>), rode a função unpack da 
<c>ebuild</c>:
</p>

<pre caption="Desempacotando as fontes">
# <i>ebuild caminho/para/ebuild unpack</i>
</pre>

<p>
Isto irá executar a função src_unpack() da ebuild (que tem como padrão a
extração normal se nenhuma função src_unpack() é definida). É também nesse passo que
todos patches necessários são aplicados.
</p>

</body>
</subsection>
<subsection>
<title>Compilando as fontes</title>
<body>

<p>
O próximo passo no processo de instalação é compilar as fontes. A
função compile da <c>ebuild</c> faz esse passo ao executar a função
src_compile() da ebuild. Isto também faz os passos de configuração se
necessários.
</p>

<pre caption="Compilando as fontes">
# <i>ebuild caminho/para/ebuild compile</i>
</pre>

<p>
É recomendado que você edite a função src_compile() da ebuild se você quiser
mudar as instruções de compilação. No entanto, você também pode enganar o Portage a
acreditar que a aplicação <c>ebuild</c> terminou os passos de compilação. Rode
todos comandos necessários você mesmo e crie um arquivo vazio chamado
<path>.compiled</path> no diretório de trabalho:
</p>

<pre caption="Informando o Portage sobre trabalhos de compilação terminados">
# <i>touch .compiled</i>
</pre>

</body>
</subsection>
<subsection>
<title>Instalando os arquivos em um local temporário</title>
<body>

<p>
No próximo passo o Portage irá instalar todos arquivos necessários em um local
temporário. Este diretório irá conter todos arquivos que serão instalados
no sistema de arquivos de uso. Você pode fazer isso rodando a função install
da <c>ebuild</c>, que executa a função src_install() da ebuild:
</p>

<pre caption="Instalando os arquivos">
# <i>ebuild caminho/para/ebuild install</i>
</pre>

</body>
</subsection>
<subsection>
<title>Instalando os arquivos em um sistema de arquivos de uso</title>
<body>

<p>
O passo final é instalar todos arquivos no sistema de arquivos de uso e registrá-los
no backend do Portage. O <c>ebuild</c> chama o passo de "qmerge" e envolve os
seguintes passos:
</p>

<ul>
  <li>Executar a função pkg_preinst() se especificada</li>
  <li>Copiar todos arquivos para o sistema de arquivos de uso</li>
  <li>Registrar os arquivos no backend do Portage</li>
  <li>Executar a função pkg_postinst() se especificada</li>
</ul>

<p>
Rode a função qmerge do <c>ebuild</c> para fazer esses passos:
</p>

<pre caption="Instalando so arquivos no sistema de arquivos de uso">
# <i>ebuild caminho/para/ebuild qmerge</i>
</pre>

</body>
</subsection>
<subsection>
<title>Limpando o diretório temporário</title>
<body>

<p>
Finalmente, você pode limpar o diretório temporário usando a função clean
do <c>ebuild</c>:
</p>

<pre caption="Limpando o diretório temporário">
# <i>ebuild caminho/para/ebuild clean</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Funções adicionais do ebuild</title>
<subsection>
<title>Rodando todos comandos relacionados ao merge</title>
<body>

<p>
Usando a função merge do <c>ebuild</c> você pode rodar os comando fetch, unpack,
compile, install e qmerge de uma só vez:
</p>

<pre caption="Instalando software">
# <i>ebuild caminho/para/ebuild merge</i>
</pre>

</body>
</subsection>
<subsection>
<title>Fazendo ações de configuração</title>
<body>

<p>
Algumas aplicações incluem instruções que configuram o pacote para uso
em seu sistema. As instruções podem ser interativa e portanto não são
executadas automaticamente. Para rodar os passos de configuração, que estão listadas
na função opcional config() da ebuild, use a função config do
<c>ebuild</c>:
</p>

<pre caption="Configurando um pacote">
# <i>ebuild caminho/para/ebuild config</i>
</pre>

</body>
</subsection>
<subsection>
<title>Construindo um pacote (RPM)</title>
<body>

<p>
Você pode instruir o Portage para criar um pacote binário de uma ebuild ou até mesmo um
arquivo RPM. Use a função package ou rpm do <c>ebuild</c> para criar os arquivos.
Existem algumas diferenças entre as duas funções, todavia:
</p>

<ul>
  <li>
    A função package é bem parecida com a função merge, executando
    todos passos necessários (fetch, unpack, compile, install) antes de criar
    o pacote
  </li>
  <li>
    A função rpm cria um pacote RPM dos arquivos criados 
    <e>depois</e> de ter rodado a função install do <c>ebuild</c>
  </li>
</ul>

<pre caption="Criando pacotes">
<comment>(Para um pacote binário compatível com o Portage)</comment>
# <i>ebuild caminho/para/ebuild package</i>

<comment>(Para um pacote RPM)</comment>
# <i>ebuild caminho/para/ebuild rpm</i>
</pre>

<p>
O arquivo RPM criado, no entanto, não tem a informação de dependências da
ebuild.
</p>

</body>
</subsection>
</section>
<section>
<title>Mais informações</title>
<subsection>
<body>

<p>
Por favor, consulte as seguintes páginas de man para mais informações sobre o Portage, a
aplicação ebuild e os arquivos do ebuild:
</p>

<pre caption="Página de man">
$ <i>man portage</i>    <comment>(O próprio Portage)</comment>
$ <i>man emerge</i>     <comment>(O comando emerge)</comment>
$ <i>man ebuild</i>     <comment>(O comando ebuild)</comment>
$ <i>man 5 ebuild</i>   <comment>(sintaxe de arquivos ebuild)</comment>
</pre>

<p>
Você também pode encontrar mais informações relacionadas a desenvolvimento no <uri
link="/proj/en/devrel/handbook/handbook.xml">Manual dos Desenvolvedores</uri>, em inglês.
</p>

</body>
</subsection>
</section>
</sections>
