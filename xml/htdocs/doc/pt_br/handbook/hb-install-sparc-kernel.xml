<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/handbook/hb-install-sparc-kernel.xml,v 1.11 2006/01/24 00:40:33 vanquirius Exp $ -->

<sections>

<version>2.7</version>
<date>2006-01-06</date>

<section>
<title>Fuso horário</title>
<body>

<p>
Você deve primeiro selecionar seu fuso horário para que seu sistema saiba onde 
está localizado. Procure seu fuso horário em <path>/usr/share/zoneinfo</path>, 
então copie-o para <path>/etc/localtime</path>. Por favor evite as zonas de fuso
horário em <path>/usr/share/zoneinfo/Etc/GMT*</path>, já que seus nomes não
refletem as zonas esperadas. Por exemplo, <path>GMT-8</path> é na verdade GMT+8.
</p>

<pre caption="Configurando informação de fuso horário">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Suponha que você queira usar GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalando as fontes</title>
<subsection>
<title>Escolhendo um kernel</title>
<body>

<p>
O centro através do qual todas distribuições são construídas é o kernel do
Linux. Ele fica entre os programas de usuário e o hardware do sistema. O Gentoo
permite que seus usuários escolham dentro de uma variedade de fontes de kernel.
Uma lista completa com descrições pode ser encontrada no
<uri link="/doc/pt_br/gentoo-kernel.xml">Guia de Kernel do Gentoo</uri>. 
</p>

<p>
Para sistemas baseados em sparc nós temos as <c>sparc-sources</c> (fontes de
kernel otimizadas para usuários de SPARC) e <c>vanilla-sources</c> (a fonte
padrão de kernel como desenvolvida pelos desenvolvedores do kernel do Linux).
</p>

<p>
Escolha sua fonte de kernel e instale-a usando <c>emerge</c>. 
</p>

<p>
No próximo exemplo iremos instalar as <c>sparc-sources</c>. Substitua, claro,
com sua escolha de fontes, isso é meramente um exemplo.
O <c>USE="-doc"</c> é necessário para evitar instalar xorg-x11 ou outras
dependências neste ponto. <c>USE="symlink"</c> não é necessário para uma nova
instalação, mas garante a criação correta do link simbólico
<path>/usr/src/linux</path>.
</p>

<pre caption="Instalando uma fonte de kernel">
# <i>USE="-doc symlink" emerge sparc-sources</i>
</pre>

<p>
Quando você olhar em <path>/usr/src</path> você deve ver um link simbólico
chamado <path>linux</path> apontando para a fonte do kernel. Neste caso, as
fontes de kernel instaladas apontam para <c>sparc-sources-2.4.31</c>. Sua
versão pode ser diferente, mantenha isto em mente.
</p>

<pre caption="Vendo o link simbólico da fonte do kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root        12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.31-sparc
</pre>

<p>
Agora está na hora de configurar e compilar sua fonte do kernel.
</p>

</body>
</subsection>
</section>
<section>
<title>Configuração manual</title>
<subsection>
<title>Introdução</title>
<body>

<p>
Configurar um kernel manualmente é freqüentemente tido como o procedimento mais
difícil que um usuário de Linux tem de fazer. Grande mentira -- depois de
configurar uns dois kernéis você nem lembrará que foi difícil ;)
</p>

<p>
No entanto, uma coisa <e>é</e> verdade: você deve conhecer seu sistema quando
você começar a configurar o kernel manualmente. A maior parte das informações
pode ser obtida instalando o pciutils (<c>emerge pciutils</c>), que contém o
<c>lspci</c>. Você poderá usar o <c>lspci</c> dentro do ambiente de chroot. Você
pode seguramente ignorar quaisquer avisos de <e>pcilib</e> (como pcilib: cannot
open /sys/bus/pci/devices) que o <c>lspci</c> der. Alternativamente, você pode
rodar <c>lspci</c> de um ambiente <e>fora do chroot</e>. Os resultados são os
mesmos. Você também pode rodar <c>lsmod</c> para quer ver módulos de kernel o CD
de Instalação usa (pode dar uma boa dica sobre o que ativar).
</p>

<p>
Agora vá para o diretório da fonte do kernel e execute <c>make menuconfig</c>.
Isto irá iniciar um menu de configuração baseado em ncurses.
</p>

<pre caption="Rodando o menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Você verá várias seções de configuração. Iremos primeiro listar algumas opções
que você deve ativar (ou o Gentoo não irá funcionar, ou não irá funcionar sem
mudanças adicionais).
</p>

</body>
</subsection>
<subsection>
<title>Ativando as opções necessárias</title>
<body>

<p>
Antes de tudo, ative o uso de código/drivers em desenvolvimento e experimentais.
Você precisa disso, senão muito código/drivers importantes não irão aparecer:
</p>

<pre caption="Selecionando código/drivers experimentais">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Agora vá para <c>File Systems</c> e selecione suporte para os sistemas de
arquivos que você usa. <e>Não</e> os compile como módulos, senão seu sistema
Gentoo não será capaz de montar suas partições. Também selecione
<c>Virtual memory</c> e <c>/proc file system</c>. Se você estiver rodando um
kernel 2.4, você também deve selecionar <c>/dev file system</c> +
<c>Automatically mount at boot</c>:
</p>

<pre caption="Selecionando sistemas de arquivos necessários">
<comment>(Com um kernel 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Com um kernel 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Selecione uma ou mais das seguintes opções conforme necessárias ao seu sistema)</comment>
  &lt; &gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt; &gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt; &gt; XFS filesystem support
</pre>

<p>
Se você estiver usando PPPoE para conectar à Internet ou estiver usando um modem
discado, você irá precisar das seguintes opções no kernel:
</p>

<pre caption="Selecionando drivers necessários para PPPoE">
<comment>(Com um kernel 2.4.x)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(Com um kernel 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
As duas opções de compressão não fazem mal, mas não são absolutamente
necessárias, bem como a opção <c>PPP over Ethernet</c>, que somente pode ser
usada pelo comando <c>rp-pppoe</c> quando configurado para fazer PPPoE em modo
de kernel.
</p>

<p>
Se você precisar, não se esqueça de incluir suporte para a sua placa de rede no
kernel.
</p>

<p>
Agora ative o suporte de bus correto:
</p>

<pre caption="Ativando SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>(Only for UPA slot adapter used in many Ultras)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Only for SBUS slot adapter used in many SPARCStations)</comment>
</pre>

<p>
Claro que você deve ativar suporte para o OBP:
</p>

<pre caption="Ativando suporte a OBP">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
Você também vai precisar de suporte específico de SCSI:
</p>

<pre caption="Ativando suporte específico de SCSI">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Só para o adaptador de SCSI onboard SPARC ESP)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Só para controlador de SBUS SCSI da PTI ou QLogic)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Só para adaptador onboard do Ultra 60)</comment>
</pre>

<p>
Para suporte a sua placa de rede, selecione um dos seguintes:
</p>

<pre caption="Ativando suporte de rede">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>(Só para SPARCStation, sistemas Ultra antigos, e opção de Sbus )</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>(Só para Ultra; também suporta "qfe" quad-ethernet em PCI e Sbus)</comment>
    &lt;*&gt; DECchip Tulip (dc21x4x) PCI support <comment>(Para alguns Netras, como N1)</comment>
  Ethernet (1000Mbit) ---&gt;
    &lt;*&gt; Broadcom Tigon3 support <comment>(Netra moderno, máquinas Sun Fire)</comment>
</pre>

<p>
Quando você tiver uma máquina com 4 portas de Ethernet (10/100 ou 10/100/1000),
a ordem da porta é diferente da usada pelo Solaris. Você pode usar
<c>sys-apps/ethtool</c> ou <c>mii-tool</c> para verificar o status do link na
porta.
</p>

<p>
Quando você terminar de configurar seu kernel, continue com <uri
link="#compiling">Compilando e instalando</uri>. Todavia, após ter compilado o
kernel, verifique seu tamanho:
</p>

<pre caption="Vendo tamanho do kernel">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
Se o tamanho (descomprimido) é maior que 2.5 MB (para Sparc32) ou 3.5 MB (para
Sparc64), reconfigure seu kernel até que ele não exceda estes limites. Um jeito
de fazer isso é compilar a maior parte dos drivers do kernel como módulos.
Não fazer isso pode levar a um kernel que não carrega.
</p>

<note>
Se você usar um kernel 2.6.3 ou mais novo, os kernéis de sparc64 podem ter até
7.5 MB.
</note>

<p>
Também, se seu kernel é só um pouco grande demais, você pode tentar diminuir um
pouco usando o comando <c>strip</c>:
</p>

<pre caption="Fazendo strip do kernel">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Compilando e instalando</title>
<body>

<p>
Agora que seu kernel está configurado, está na hora de compilá-lo e instalá-lo.
Saia da configuração e comece o processo de compilação:
</p>

<pre caption="Compilando o kernel">
<comment>(Para kernel 2.4, sparc32)</comment>
# <i>make dep &amp;&amp; make clean vmlinux modules modules_install</i>

<comment>(Para kernel 2.4, sparc64)</comment>
# <i>make dep &amp;&amp; make clean vmlinux image modules modules_install</i>

<comment>(Para kernel 2.6, sparc32)</comment>
# <i>make &amp;&amp; make modules_install</i>

<comment>(Para kernel 2.6, sparc64)</comment>
# <i>make &amp;&amp; make image modules_install</i>
</pre>

<p>
Quando o kernel terminar de compilar, copie a imagem do kernel para 
<path>/boot</path>. Use o nome que você achar mais adequado para sua escolha de
kernel e lembre-se dele, já que você irá precisar dele quando você for
configurar seu gerenciador de inicialização. Lembre-se de substituir
<path>&lt;versão-do-kernel&gt;</path> com o nome e versão de seu kernel.
</p>

<pre caption="Instalando o kernel">
<comment>(Para kernel 2.4, sparc32)</comment>
# <i>cp arch/sparc64/boot/image /boot/&lt;versão-do-kernel&gt;</i>

<comment>(Para kernel 2.4, sparc64)</comment>
# <i>cp arch/sparc64/boot/image /boot/&lt;versão-do-kernel&gt;</i>

<comment>(Para kernel 2.4, sparc32)</comment>
# <i>cp arch/sparc/boot/image /boot/&lt;versão-do-kernel&gt;</i>

<comment>(Para kernel 2.6, sparc64)</comment>
# <i>cp arch/sparc64/boot/image /boot/&lt;versão-do-kernel&gt;</i>
</pre>

<p>
Agora continue com <uri link="#kernel_modules">Instalando módulos avulsos do
kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Instalando módulos avulsos do kernel</title>
<subsection>
<title>Configurando os módulos</title>
<body>

<p>
Você deve listar os módulos que você quer carregar automaticamente em  
<path>/etc/modules.autoload.d/kernel-2.4</path> (ou <path>kernel-2.6</path>).
Você pode colocar opções adicionais aos módulos também se quiser.
</p>

<p>
Para ver todos módulos disponíveis, rode o seguinte comando usando o
<c>find</c>. Não se esqueça de substituir "&lt;versão do kernel&gt;" com a
versão do kernel que você acaba de compilar:
</p>

<pre caption="Vendo todos módulos disponíveis">
# <i>find /lib/modules/&lt;versão do kernel&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Por exemplo, para carregar o módulo <c>3c59x.o</c> automaticamente, edite o
arquivo <path>kernel-2.4</path> ou <path>kernel-2.6</path> e coloque o nome do
módulo nele.
</p>

<pre caption="Editando o /etc/modules.autoload.d/kernel-2.4">
<comment>(Examplo para kernéis 2.4)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 ou kernel-2.6">
3c59x
</pre>

<p>
Continue a instalação com  <uri link="?part=1&amp;chap=8">Configurando
seu sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
