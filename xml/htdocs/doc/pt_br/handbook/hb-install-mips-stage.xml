<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/handbook/hb-install-mips-stage.xml,v 1.1 2006/03/02 19:33:20 vanquirius Exp $ -->

<sections>

<version>1.0</version>
<date>2006-02-27</date>

<section>
<title>Instalando um tarball de estágio (stage)</title>
<subsection>
<title>Configurando a Data/Hora</title>
<body>

<p>
Antes de continuar, você precisa verificar a data/hora e atualizá-las. Um
relógio mal configurado pode levar a resultados estranhos no futuro!
</p>

<p>
Para verificar a data/hora atual, execute <c>date</c>:
</p>

<pre caption="Verificando a data/hora">
# <i>date</i>
Fri Mar 29 16:21:18 CEST 2005
</pre>

<p>
Se a data/hora for exibida incorretamente, atualize-a usando <c>date
MMDDhhmmAAAA</c> sintaxe (<b>M</b>ês, <b>D</b>ia, <b>h</b>ora, <b>m</b>inuto
e <b>A</b>no). Por exemplo, para configurar a data para 29 de março de 2005,
16:21:
</p>

<pre caption="Configurando a data/hora">
# <i>date 032916212005</i>
</pre>

</body>
</subsection>
<subsection>
<title>Fazendo sua escolha</title>
<body>

<p>
O próximo passo que você precisa fazer é instalar a tarball de <e>stage</e> de
sua escolha em seu sistema.
<!--You have the option of downloading the required
tarball from the Internet or, if you are booted from one of the Gentoo
Universal Installation CDs, copy it over from the CD itself. If you have a 
Universal CD and the stage you want to use is on the CD, downloading it from 
the Internet is just a waste of bandwidth as the stage files are the same. In 
most cases, the command <c>uname -m</c> can be used to help you decide which 
stage file to download. -->
</p>

<!--
<ul>
<li><uri link="#doc_chap2">Default: Using a Stage from the Internet</uri></li>
<li>
  <uri link="#doc_chap3">Alternative: Using a Stage from the Installation CD</uri>
</li>
</ul>-->

</body>
</subsection>
</section>
<section>
<title>Usando um stage da Internet</title>
<subsection>
<title>Baixando a tarball de estágio</title>
<body>

<p>
Entre no ponto de montagem do Gentoo onde você montou seu sistema de arquivos
(provavelmente <path>/gentoo</path>):
</p>

<pre caption="Entrando no ponto de montagem do Gentoo">
# <i>cd /gentoo</i>
</pre>

<p>
A tabela abaixo especifica exatamente de que stages você precisa para seu
sistema dos <uri link="/main/en/mirrors.xml">servidores oficiais do Gentoo</uri>
dentro do diretório <c>releases/mips/current</c>.
</p>

<table>
<tr>
  <th>Endianness</th>
  <th>CPU</th>
  <th>Local</th>
</tr>
<tr>
  <ti>
    Big Endian<br />
    <e>(Usuários de SGI)</e>
  </ti>
  <ti>
    R4000<br />
    R4400<br />
    R4600
  </ti>
  <ti><c>mips3/stage#-mips3-LANCAMENTO.tar.bz2</c></ti>
</tr>
<tr>
  <ti>
    Big Endian<br />
    <e>(Usuários de SGI)</e>
  </ti>
  <ti>
    R5000<br />
    RM5200<br />
    RM7000<br />
    R10000<br />
    R12000<br />
    R14000
  </ti>
  <ti><c>mips4/stage#-mips4-LANCAMENTO.tar.bz2</c></ti>
</tr>
<tr>
  <ti>
    Little Endian<br />
    <e>(Usuários de Cobalt)</e>
  </ti>
  <ti>
    RM5230<br />
    RM5231
  </ti>
  <ti><c>cobalt/stage#-mipsel4-LANCAMENTO.tar.bz2</c></ti>
</tr>
</table>

<p>
Se você precisa usar um proxy, exporte as variáveis <c>http_proxy</c> e
<c>ftp_proxy</c>:
</p>

<pre caption="Configurando informações de proxy para wget">
# <i>export http_proxy="http://proxy.server.com:port"</i>
# <i>export ftp_proxy="http://proxy.server.com:port"</i>
</pre>

<p>
A imagem de inicialização de rede do Gentoo/MIPS fornece <c>wget</c> como meio
de baixar arquivos. Devido a restrições de espaço, não é possível oferecer
navegadores mais capazes em imagens de inicialização de rede para SGI. Usuários
de LiveCD podem usar <c>elinks</c>.
</p>

<pre caption="Baixando a tarball via wget">
# <i>wget -c http://distfiles.gentoo.org/releases/mips/mips4/stage3-mips4-2006.0.tar.bz2</i>
</pre>

<p>
Se quiser verificar a integridade do stage baixado, use o <c>md5sum</c> e
compare a saída com o MD5 checksum disponível no servidor. Por exemplo, para
checar a validade de uma tarball de stage de mips4:
</p>

<pre caption="Exemplo de verificação de integridade de um stage">
# <i>md5sum -c stage3-mips4-2006.0.tar.bz2.md5</i>
stage3-mips4-2006.0.tar.bz2: OK
</pre>

</body>
</subsection>
<subsection>
<title>Descompactando um stage</title>
<body>

<p>
Agora descompacte o stage no seu sistema. Nós usamos o <c>tar</c> do GNU, já que
para o processar este é o método mais fácil.
</p>

<pre caption="Descompactando o stage">
# <i>tar -xjpf stage?-*.tar.bz2</i>
</pre>

<p>
Certifique-se de que você está usando as mesmas opções (<c>-xjpf</c>). O
<c>x</c> significa <e>Extrair</e>, o <c>j</c> para
<e>Descompactar com bzip2</e>, o <c>p</c> para <e>Preservar as permissões</e> e
o <c>f</c> para definir que queremos extrair um arquivo, ao invés da entrada
padrão.
</p>

<p>
Agora que o stage está instalado, continue com <uri
link="#installing_portage">Instalando o Portage</uri>.
</p>

</body>
</subsection>
</section>
<!--
<section>
<title>Alternative: Using a Stage from the Installation CD</title>
<subsection>
<title>Extracting the Stage Tarball</title>
<body>

<p>
The stages on the CD reside in the <path>/mnt/cdrom/stages</path> directory. To
see a listing of available stages, use <c>ls</c>:
</p>

<pre caption="List all available stages">
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
If the system replies with an error, you may need to mount the CD-ROM first:
</p>

<pre caption="Mounting the CD-ROM">
# <i>ls /mnt/cdrom/stages</i>
ls: /mnt/cdrom/stages: No such file or directory
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom</i>
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Now go into your Gentoo mountpoint (usually <path>/mnt/gentoo</path>):
</p>

<pre caption="Changing directory to /mnt/gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
We will now extract the stage tarball of your choice. We will do this with the
GNU <c>tar</c> tool. Make sure you use the same options (<c>-xvjpf</c>)! Again,
the <c>v</c> argument is optional and not supported in some <c>tar</c> versions.
In the next example, we extract the stage tarball 
<path>stage3-&lt;subarch&gt;-2006.0.tar.bz2</path>.
Be sure to substitute the tarball filename with your stage.
</p>

<pre caption="Extracting the stage tarball">
# <i>tar -xvjpf /mnt/cdrom/stages/stage3-&lt;subarch&gt;-2006.0.tar.bz2</i>
</pre>

<p>
Now that the stage is installed, continue with <uri
link="#installing_portage">Installing Portage</uri>.
</p>

</body>
</subsection>
</section>-->
<section id="installing_portage">
<title>Instalando o Portage</title>
<subsection>
<title>Extraindo um snapshot do Portage</title>
<body>

<p>
Agora você irá instalar um snapshot do Portage, uma coleção de arquivos que
informam o Portage de que títulos de software você pode instalar, que profiles
estão disponíveis, etc...
</p>

</body>
</subsection>
<subsection id="installing_from_Internet">
<title>Baixe e instale um snapshot do Portage</title>
<body>

<p>
Vá para o ponto de montagem onde você montou seu sistema de arquivos
(provavelmente <path>/gentoo</path>):
</p>

<pre caption="Indo para o ponto de montagem do Gentoo">
# <i>cd /gentoo</i>
</pre>

<p>
Baixe um snapshot do portage de um <uri link="/main/en/mirrors.xml">servidor
local</uri>. Você irá encontrá-los no diretório <path>snapshots/</path>.
Transfira-o para o sistema alvo da mesma maneira que você fez com a tarball de
stage.
</p>

<pre caption="Extraindo um snapshot do Portage">
# <i>tar -xjf portage-*.tar.bz2 -C /gentoo/usr</i>
</pre>

</body>
</subsection>
</section>

<section id="compile_options">
<title>Configurando as opções de Compilação</title>
<subsection>
<title>Introdução</title>
<body>

<p>
Para otimizar o Gentoo, você pode ajustar um par das variáveis que causarão
impacto no comportamento do Portage. Todas essas variáveis podem ser
configuradas como variáveis de ambiente (usando <c>export</c>), mas isso não
é permanente. Para manter suas configurações, o Portage usa o
<path>/etc/make.conf</path>, um arquivo de configuração para o Portage. Este
é o arquivo que iremos editar agora.
</p>

<note>
Uma listagem comentada de todas as variáveis possíveis pode ser encontrada em
<path>/gentoo/etc/make.conf.example</path>. Para uma instalação com sucesso 
do Gentoo você só precisa configurar as variáveis conforme mencionado abaixo.
</note>

<p>
Abra seu editor de texto para que possamos alterar as variáveis de otimização
que iremos discutir aqui em diante. Dois editores são oferecidos, <c>vi</c>
(parte de Busybox) e <c>nano</c>. Presumimos que você está usando <c>nano</c>.
</p>

<pre caption="Abrindo o /etc/make.conf">
# <i>nano -w /gentoo/etc/make.conf</i>
</pre>

<p>
Como você provavelmente observou, o arquivo <path>make.conf.example</path> é
estruturado de uma maneira genérica: linhas de comentário começam com "#", 
outras linhas definem variáveis usando a sintaxe <c>VARIÁVEL="conteúdo"</c>.
O arquivo <path>make.conf</path> usa a mesma sintaxe. Diversas dessas variáveis
serão discutidas abaixo.
</p>

</body>
</subsection>
<!--<subsection>
<title>CHOST</title>
<body>

<warn>
Although it might be tempting for non-stage1 users, they should <e>not</e>
change the <c>CHOST</c> setting in <path>make.conf</path>. Doing so might render
their system unusable. Again: only change this variable if you use a
<e>stage1</e> installation.
</warn>

<p>
The <c>CHOST</c> variable defines what architecture <c>gcc</c> has to
compile programs for, as well as the <c>libc</c> (<c>glibc</c> or <c>µClibc</c>) used
for linking.
</p>

<table>
<tr>
  <th>Endianness</th>
  <th>Userland/ABI</th>
  <th>CHOST Setting</th>
</tr>
<tr>
  <ti>Big Endian <e>(SGI Users)</e></ti>
  <ti><c>glibc</c> <c>o32</c></ti>
  <ti>mips-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>Big Endian <e>(SGI Users)</e></ti>
  <ti><c>µClibc</c> <c>o32</c></ti>
  <ti>mips-unknown-linux-uclibc (1)</ti>
</tr>
<tr>
  <ti>Big Endian <e>(SGI Users)</e></ti>
  <ti><c>glibc</c> <c>n32</c> &amp; <c>n64</c></ti>
  <ti>mips64-unknown-linux-gnu (2)</ti>
</tr>
<tr>
  <ti>Little Endian <e>(Cobalt Users)</e></ti>
  <ti><c>glibc</c> <c>o32</c></ti>
  <ti>mipsel-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>Little Endian <e>(Cobalt Users)</e></ti>
  <ti><c>µClibc</c> <c>o32</c></ti>
  <ti>mipsel-unknown-linux-uclibc (1)</ti>
</tr>
<tr>
  <ti>Little Endian <e>(Cobalt Users)</e></ti>
  <ti><c>glibc</c> <c>n32</c> &amp; <c>n64</c></ti>
  <ti>mips64el-unknown-linux-gnu (2)</ti>
</tr>
</table>

<warn>
(1) µClibc stages are the realm of the
<uri link="/proj/en/base/embedded/">Gentoo Embedded</uri>
team, and are therefore not officially supported by the
Gentoo/MIPS team.  This <c>CHOST</c> setting is only mentioned here for
completeness.
</warn>

<warn>
(2) Currently we do not provide <c>n64</c> stages, and only provide <c>n32</c>
stages on the Big Endian MIPS4 architecture.  These are highly experimental
stages and are known to be totally broken in places.  Users are thus 
<e>highly</e> recommended to avoid these like the plague.
The only reason one would need the <c>mips64(el)</c> <c>CHOST</c>, is to use a
64-bit (<c>n32</c> or <c>n64</c>) userland.  This <c>CHOST</c> setting is only
mentioned here for completeness.
</warn>

</body>
</subsection>-->
<subsection>
<title>CFLAGS e CXXFLAGS</title>
<body>

<p>
As variáveis <c>CFLAGS</c> e <c>CXXFLAGS</c> definem as opções de otimização
para os compiladores de C e C++ do <c>gcc</c> respectivamente. Embora geralmente
sejam definidas aqui, você só irá obter máxima performance se otimizar as opções
para cada programa separadamente. A razão disto é que cada programa é diferente.
</p>

<p>
No <path>make.conf</path> você deve definir as opções de otimização que você
pensa que irão deixar seu sistema com uma melhor resposta <e>em geral</e>. Não
coloque configurações experimentais nesta variável; muitas otimizações podem
fazer o programa não se comportar bem ("dar pau", ou ainda pior, mal
funcionamento).
</p>

<p>
Não iremos explicar todas as opções de otimização possíveis. Se quiser 
conhecê-las, leia o <uri link="http://gcc.gnu.org/onlinedocs/">GNU
Online Manual(s)</uri> ou a página info do <c>gcc</c> (<c>info gcc</c> -- só
funciona em um sistema Linux já funcionando). O próprio arquivo 
<path>make.conf.example</path> contém inúmeros exemplos e informações; não
se esqueça de lê-lo também.
</p>

<p>
A primeira configuração é a opção <c>-march=</c>, que especifica o nome da 
arquitetura alvo. Possíveis opções são descritas no arquivo 
<path>make.conf.example</path> (com comentários).  Exemplos incluem níveis de
ISA (<c>mips1</c> ... <c>mips4</c>) e modelos de CPU (<c>r4400</c>,
<c>r4600</c> ... etc). Para arquiteturas de nível ISA puro, você pode
simplesmente especificar <c>-mips3</c> ao invés de <c>-march=mips3</c>.
</p>

<pre caption="Os ajustes de -march e -mips# para GCC">
<comment>(Para um sistema R4600...)</comment>
-march=r4600

<comment>(Qualquer CPU de classe MIPS4...)</comment>
-march=mips4

<comment>(Ou simplesmente especifique o nível de ISA diretamente...)</comment>
-mips4
</pre>

<p>
A segunda é a opção <c>-O</c> (que é um O maiúsculo, não é um zero), que 
especifica a classe da opção de otimização da <c>gcc</c>. Possíveis classes são
<c>s</c> (para otimização de tamanho), <c>0</c> (zero - para não otimizar), 
<c>1</c>, <c>2</c> ou <c>3</c> para opções com otimizações de velocidade (toda
classe tem as mesmas opções que a anterior, com alguns extras). Por exemplo,
para uma otimização de classe 2:
</p>

<pre caption="O ajuste do O do GCC">
-O2
</pre>

<p>
Um ajuste muito importante no mundo MIPS é a opção <c>-mabi=</c>. MIPS tem três
ABIs diferentes; <c>32</c> (32 bits pura, aka <c>o32</c>), <c>64</c> (totalmente
em 64 bits, aka <c>n64</c>) e <c>n32</c> (uma mistura de estruturas de dados de
32 bits com instruções de 64 bits). Esta opção permite escolher qual você
deseja usar. Note que as bibliotecas necessárias para a ABI que você selecionar.
Em termos leigos, por exemplo, você não pode usar <c>-mabi=64</c> com
ferramentas de usuário de 32 bits (ou mesmo <c>n32</c>).
</p>

<p>
Outra otimização popular é a opção <c>-pipe</c> (usar pipes ao invés de arquivos
temporários é melhor para comunicação entre os vários estágios de compilação).
</p>

<p>
Saiba você que usar <c>-fomit-frame-pointer</c> (que não mantém o frame pointer
em um registro para as funções que não necessitam de um) pode ter sérias
repercussões na eliminação de erros das aplicações!
</p>

<p>
Quando você define as <c>CFLAGS</c> e <c>CXXFLAGS</c>, pode-se combinar diversas
opções de otimização, como o exemplo a seguir:
</p>

<pre caption="Definindo as variáveis CFLAGS e CXXFLAGS">
CFLAGS="-mabi=32 -mips4 -pipe -O2"
CXXFLAGS="${CFLAGS}"                  <comment># Use os mesmos ajustes para as duas variáveis</comment>
</pre>

</body>
</subsection>
<subsection>
<title>MAKEOPTS</title>
<body>

<p>
Com <c>MAKEOPTS</c> você define quantas compilações paralelas deverão ocorrer
quando instalar um pacote. Uma boa escolha é o número de CPUs no seu sistema
mais um, mas esta regra não é perfeita.
</p>

<pre caption="MAKEOPTS para um sistema normal de 1 CPU">
MAKEOPTS="-j2"
</pre>

</body>
</subsection>
<subsection>
<title>Tudo pronto!</title>
<body>

<p>
Atualize seu <path>/gentoo/etc/make.conf</path> com suas preferências e
salve (usuários do <c>nano</c> podem pressionar <c>Ctrl-X</c>). Agora você está
pronto para continuar com <uri link="?part=1&amp;chap=6">Instalando o sistema
base do Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
