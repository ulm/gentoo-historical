<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/handbook/hb-install-alpha-kernel.xml,v 1.17 2006/01/24 00:10:00 vanquirius Exp $ -->

<sections>

<version>2.11</version>
<date>2006-01-06</date>

<section>
<title>Fuso horário</title>
<body>

<p>
Você deve primeiro selecionar seu fuso horário para que seu sistema saiba onde 
está localizado. Procure seu fuso horário em <path>/usr/share/zoneinfo</path>, 
então copie-o para <path>/etc/localtime</path>. Por favor evite as zonas de fuso
horário em <path>/usr/share/zoneinfo/Etc/GMT*</path>, já que seus nomes não
refletem as zonas esperadas. Por exemplo, <path>GMT-8</path> é na verdade GMT+8.
</p>

<pre caption="Configurando informação de fuso horário">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Suponha que você queira usar GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalando as fontes</title>
<subsection>
<title>Escolhendo um kernel</title>
<body>

<p>
O centro através do qual todas distribuições são construídas é o kernel do
Linux. Ele fica entre os programas de usuário e o hardware do sistema. O Gentoo
permite que seus usuários escolham dentro de uma variedade de fontes de kernel.
Uma lista completa com descrições pode ser encontrada no
<uri link="/doc/pt_br/gentoo-kernel.xml">Guia de Kernel do Gentoo</uri>. 
</p>

<p>
Para sistemas baseados em alpha nós temos as <c>vanilla-sources</c> (fontes
padrão de kernel 2.6).
</p>

<p>
Escolha sua fonte de kernel e instale-a usando o comando <c>emerge</c>. 
</p>

<p>
No próximo exemplo iremos instalar as <c>vanilla-sources</c>.
Substitua de acordo com sua escolha de fontes, isto é meramente um exemplo.
O <c>USE="-doc"</c> é necessário para evitar instalar xorg-x11 ou outras
dependências neste ponto. <c>USE="symlink"</c> não é necessário para uma nova
instalação, mas garante a criação correta do link simbólico
<path>/usr/src/linux</path>.
</p>

<pre caption="Instalando uma fonte de kernel">
# <i>USE="-doc symlink" emerge vanilla-sources</i>
</pre>

<p>
Quando você olhar em <path>/usr/src</path> você deve ver um link simbólico
chamado <path>linux</path> apontando para a fonte do kernel. Neste caso, as
fontes de kernel instaladas apontam para <c>vanilla-sources-2.6.11.2</c>. Sua
versão pode ser diferente, mantenha isto em mente.
</p>

<pre caption="Vendo o link simbólico da fonte do kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.11.2
</pre>

<p>
Agora está na hora de configurar e compilar sua fonte do kernel. Você pode usar
o comando <c>genkernel</c> para fazer isto, que irá construir um kernel genérico
parecido com o do CD de instalação. Iremos, porém, explicar a configuração
manual primeiro, já que é a melhor maneira de otimizar seu ambiente.
</p>

<p>
Se você quiser configurar seu kernel manualmente, continue agora com <uri
link="#manual">Padrão: Configuração manual</uri>. Se você quiser usar o comando
<c>genkernel</c>, você deve ler <uri link="#genkernel">Alternativa: Usando o
genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Padrão: configuração manual</title>
<subsection>
<title>Introdução</title>
<body>

<p>
Configurar um kernel manualmente é freqüentemente tido como o procedimento mais
difícil que um usuário de Linux tem de fazer. Grande mentira -- depois de
configurar uns dois kernéis você nem lembrará que foi difícil ;)
</p>

<p>
No entanto, uma coisa <e>é</e> verdade: você deve conhecer seu sistema quando
você começar a configurar o kernel manualmente. A maior parte das informações
pode ser obtida instalando o pciutils (<c>emerge pciutils</c>), que contém o
<c>lspci</c>. Você poderá usar o <c>lspci</c> dentro do ambiente de chroot. Você
pode seguramente ignorar quaisquer avisos de <e>pcilib</e> (como pcilib: cannot
open /sys/bus/pci/devices) que o <c>lspci</c> der. Alternativamente, você pode
rodar <c>lspci</c> de um ambiente <e>fora do chroot</e>. Os resultados são os
mesmos. Você também pode rodar <c>lsmod</c> para quer ver módulos de kernel o CD
de Instalação usa (pode dar uma boa dica sobre o que ativar).
</p>

<p>
Agora vá para o diretório da fonte do kernel e execute <c>make menuconfig</c>.
Isto irá iniciar um menu de configuração baseado em ncurses.
</p>

<pre caption="Rodando o menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Você verá várias seções de configuração. Iremos primeiro listar algumas opções
que você deve ativar (ou o Gentoo não irá funcionar, ou não irá funcionar sem
mudanças adicionais).
</p>

</body>
</subsection>
<subsection>
<title>Ativando as opções necessárias</title>
<body>

<p>
Antes de tudo, ative o uso de código/drivers em desenvolvimento e experimentais.
Você precisa disso, senão muito código/drivers importantes não irão aparecer:
</p>

<pre caption="Selecionando código/drivers experimentais, General setup">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
General setup ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Agora vá para <c>File Systems</c> e selecione suporte para os sistemas de
arquivos que você usa. <e>Não</e> os compile como módulos, senão seu sistema
Gentoo não será capaz de montar suas partições. Também selecione <c>Virtual
memory</c> e <c>/proc file system</c>. Se você estiver usando um kernel 2.4,
você também deve selecionar as opções <c>/dev file system</c> e
<c>Automatically mount at boot</c> e certificar-se de fazer <c>emerge
devfsd</c>.
</p>

<pre caption="Selecionando sistemas de arquivos necessários">
<comment>(Com um kernel da linha 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Com um kernel da linha 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Selecione uma ou mais das seguintes opções conforme necessárias ao seu sistema)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Se você estiver usando PPPoE para conectar à Internet ou estiver usando um modem
discado, você irá precisar das seguintes opções no kernel:
</p>

<pre caption="Selecionando drivers necessários para PPPoE">
<comment>(Com um kernel da linha 2.4.x)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(Com um kernel da linha 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
As duas opções de compressão não fazem mal, mas não são absolutamente
necessárias, bem como a opção <c>PPP over Ethernet</c>, que somente pode ser
usada pelo comando <c>rp-pppoe</c> quando configurado para fazer PPPoE em modo
de kernel.
</p>

<p>
Se você precisar, não se esqueça de incluir suporte no kernel para sua placa de
rede.
</p>

<p>
As seguintes opções também são recomendadas:
</p>

<pre caption="Opções recomendadas para Alpha">
General setup ---&gt;
  &lt;*&gt; SRM environment through procfs
  &lt;*&gt; Configure uac policy via sysctl

Plug and Play configuration ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;M&gt;   ISA Plug and Play support

SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; SYM53C8XX Version 2 SCSI support (NEW)
    &lt;*&gt; Qlogic ISP SCSI support

Network device support ---&gt;
  Ethernet (10 or 100 Mbit) ---&gt;
    &lt;M&gt; DECchip Tulip (dc21x4x) PCI support
    &lt;M&gt; Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA
    &lt;M&gt; EtherExpressPro/100 support (eepro100)
    &lt;M&gt; EtherExpressPro/100 support (e100)
  Ethernet (1000 Mbit) ---&gt;
    &lt;M&gt; Alteon AceNIC
      [*] Omit support for old Tigon I
    &lt;M&gt; Broadcom Tigon3
  [*] FDDI driver support
  &lt;M&gt; Digital DEFEA and DEFPA
  &lt;*&gt; PPP support
    &lt;*&gt; PPP Deflate compression

Character devices ---&gt;
  [*] Support for console on serial port
  [*] Direct Rendering Manager

File systems ---&gt;
  &lt;*&gt; Kernel automounter version 4 support
  Network File Systems ---&gt;
    &lt;*&gt; NFS
      [*] NFSv3 client
      &lt;*&gt; NFS server
      [*] NFSv3 server
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*] Alpha OSF partition support
  Native Language Support
    &lt;*&gt; NLS ISO 8859-1

Sound ---&gt;
  &lt;M&gt; Sound card support
    &lt;M&gt; OSS sound modules
      [*] Verbose initialisation
      [*] Persistent DMA buffers
      &lt;M&gt; 100% Sound Blaster compatibles
</pre>

<p>
Quando você terminar de configurar o kernel, continue com <uri
link="#compiling">Compilando e instalando</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilando e instalando</title>
<body>

<p>
Agora que seu kernel está configurado, está na hora de compilá-lo e instalá-lo.
Saia da configuração e comece o processo de compilação:
</p>

<pre caption="Compilando o kernel">
<comment>(Para um kernel da linha 2.4)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(Para um kernel da linha 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>

<comment>(Para todos kernéis)</comment>
# <i>make boot</i>
</pre>

<p>
Quando o kernel terminar de compilar, copie a imagem do kernel para 
<path>/boot</path>. Kernéis recentes podem criar <path>vmlinux</path> ao invés
de <path>vmlinux.gz</path>. Mantenha isto em mente quando você copiar sua imagem
de kernel.
</p>

<pre caption="Instalando o kernel">
# <i>cp arch/alpha/boot/vmlinux.gz /boot/</i>
</pre>

<p>
Agora continue com <uri link="#kernel_modules">Instalando módulos de kernel
avulsos</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativa: Usando o genkernel</title>
<body>

<p>
Se você estiver lendo esta seção, você escolheu usar nosso script
<c>genkernel</c> para configurar o kernel para você.
</p>

<p>
Agora que a árvore fonte de seu kernel está instalada, está na hora de compilar
seu kernel usando nosso script <c>genkernel</c> para construir um kernel
automaticamente para você. O <c>genkernel</c> funciona configurando um kernel
praticamente idêntico ao modo que nosso kernel do CD de instalação é
configurado. Isto significa que quando você usar o comando <c>genkernel</c> para
construir seu kernel, seu sistema irá geralmente detectar seu hardware na hora
da inicialização, como no CD de instalação. Dado que o genkernel não necessita
de nenhuma configuração manual, é uma solução ideal para aqueles usuários que
não se sentem confortáveis compilando seus próprios kernéis.
</p>

<p>
Agora vamos ver como usar o genkernel. Primeiro, faça emerge da ebuild do
genkernel:
</p>

<pre caption="Instalando o genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Agora, compile suas fontes de kernel rodando <c>genkernel all</c>. Esteja
alerta, entretanto, de que como o <c>genkernel</c> compila um kernel que suporta
quase todos hardwares, esta compilação irá demorar bastante para terminar!
</p>

<p>
Note que se sua partição de inicialização (boot) não usa ext2 ou ext3 como
sistema de arquivos, você precisará configurar manualmente seu kernel usando o
comando  <c>genkernel --menuconfig all</c> e adicionando suporte para seu
sistema de arquivos <e>DENTRO</e> do kernel (isto é, <e>não</e> como módulo).
</p>

<pre caption="Rodando o genkernel">
# <i>genkernel all</i>
GenKernel v3.0.1_beta10
* ARCH: Alpha 
* KERNEL VER: 2.6.11.2
* kernel: configuring source
* kernel: running mrproper
<comment>(Saída removida para aumentar legibilidade)</comment>
* Kernel compiled successfully!
* Required Kernel Params:
*   : root=/dev/ram0 init=/linuxrc real_root=/dev/$ROOT
*     where $ROOT is the devicenode for your root partition as
*     you should have specified in /etc/fstab
*              
* You MUST tell your bootloader to use the generated initrd
*              
* Recommended Kernel Params:
*   : vga=0x317 splash=verbose
*              
* Do NOT report kernel bugs (configs included) as genkernel bugs.
* Make sure you have the latest genkernel before reporting bugs
*              
* For more info see /usr/share/genkernel/README
</pre>

<p>
Quando o <c>genkernel</c> terminar, um kernel, um conjunto completo de módulos
e um <e>initial root disk</e> (initrd) serão criados. Nós iremos usar o kernel e
o initrd quando formos configurar um gerenciador de inicialização numa parte
mais adiantada deste documento. Escreva os nomes do kernel e initrd, uma vez que
você irá precisar deles quando for escrever o arquivo de configuração do
gerenciador de inicialização. A initrd será iniciada imediatamente após a
inicialização para fazer a auto-detecção de hardware (igual ao CD de
instalação), antes de seu sistema "de verdade" iniciar.
</p>

<pre caption="Verificando o nome da imagem de kernel criada e initrd">
# <i>ls /boot/kernel* /boot/initramfs-*</i>
</pre>

<p>
Agora, vamos fazer mais um passo para deixar nosso sistema mais parecido com o
CD de instalação -- vamos instalar o <c>coldplug</c>. Enquanto o initrd detecta
automaticamente hardware que é necessário para carregar seu sistema, o
<c>coldplug</c> detecta o resto. Para instalar e habilitar o <c>coldplug</c>,
digite o seguinte:
</p>

<pre caption="Instalando e habilitando o coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Instalando módulos de kernel avulsos</title>
<subsection>
<title>Instalando módulos adicionais</title>
<body>

<p>
Se adequado, você deve instalar ebuilds para hardware adicional que está
disponível em seu sistema. Aqui segue uma lista de ebuilds relacionadas a kernel
de que você pode fazer emerge:</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>Ebuild</th>
  <th>Propósito</th>
  <th>Comando</th>
</tr>
<tr>
  <ti>x11-drm</ti>
  <ti>
    Aceleração gráfica para ATI Radeon até 9200, Rage128, Matrox, Voodoo e 
    outras placas para xorg-x11. Por favor veja a variável
    <c>IUSE_VIDEO_CARDS</c> nas ebuilds em
    <path>/usr/portage/x11-base/x11-drm</path> para ver o que você deve colocar
    no lugar de <c>suaplaca</c>. 
  </ti>
  <ti><c>VIDEO_CARDS="suaplaca" emerge x11-drm</c></ti>
</tr>
</table>

<p>
Esteja avisado, entretanto, de que algumas dessas ebuilds podem lidar com
grandes dependências. Para verificar que pacotes serão instalados ao fazer
emerge de uma ebuild, use <c>emerge --pretend</c>. Por exemplo, para o pacote
<c>x11-drm</c>:
</p>

<pre caption="Ver lista completa de pacotes a serem instalados">
# <i>emerge --pretend x11-drm</i>
</pre>

</body>
</subsection>
<subsection>
<title>Configurando os módulos</title>
<body>

<p>
Você deve listar os módulos que você quer carregar automaticamente em  
<path>/etc/modules.autoload.d/kernel-2.4</path> (ou <path>kernel-2.6</path>). 
Você pode colocar opções adicionais aos módulos também se quiser.
</p>

<p>
Para ver todos módulos disponíveis, rode o seguinte comando usando o
<c>find</c>. Não se esqueça de substituir "&lt;versão do kernel&gt;" com a
versão do kernel que você acaba de compilar:
</p>

<pre caption="Vendo todos módulos disponíveis">
# <i>find /lib/modules/&lt;versão do kernel&gt;/ -type f -iname '*.o' -ou -iname '*.ko'</i>
</pre>

<p>
Por exemplo, para carregar o módulo <c>3c59x.o</c> automaticamente, edite o
arquivo <path>kernel-2.4</path> ou <path>kernel-2.6</path> e coloque o nome do
módulo nele.
</p>

<pre caption="Editando o /etc/modules.autoload.d/kernel-2.4">
<comment>(Exemplo para kernéis da linha 2.4)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 ou kernel-2.6">
3c59x
</pre>

<p>
Continue a instalação com <uri link="?part=1&amp;chap=8">Configurando seu
sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
