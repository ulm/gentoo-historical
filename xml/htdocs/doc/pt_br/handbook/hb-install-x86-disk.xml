<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/handbook/hb-install-x86-disk.xml,v 1.9 2006/01/23 23:39:29 vanquirius Exp $ -->

<sections>

<version>2.5</version>
<date>2006-01-01</date>

<section>
<title>Introdução a dispositivos de bloco</title>
<subsection>
<title>Dispositivos de bloco</title>
<body>

<p>
Iremos estudar os aspectos de manuseio de discos do Gentoo Linux e do Linux em
geral, incluindo sistemas de arquivos de Linux, partições e dispositivos de
bloco. Uma vez que você estiver familiar com o funcionamento de discos e
sistemas de arquivos, iniciaremos o processo de configuração de partições e
sistemas de arquivos para sua instalação do Gentoo Linux.
</p>

<p>
Para começar, iremos introduzir os <e>dispositivos de bloco</e>. O dispositivo
de bloco mais famoso é provavelmente aquele que representa o primeiro disco
rígido IDE em um sistema Linux, chamado de <path>/dev/hda</path>. Se seu sistema
usa discos SCSI ou SATA, então seu primeiro disco rígido será
<path>/dev/sda</path>.
</p>

<p>
Os dispositivos de bloco acima representam uma interface abstrata para o disco.
Programas de usuário podem usar os dispositivos de bloco para interagir com seu
disco sem preocupação se eles são IDE, SCSI ou outra coisa. O programa pode
simplesmente classificar o espaço de armazenagem no disco como um monte de
blocos de 512 bytes contíguos acessíveis aleatoriamente.
</p>

</body>
</subsection>
<subsection>
<title>Partições</title>
<body>

<p>
Embora seja teoricamente possível usar um disco inteiro para armazenar seu
sistema Linux, isto é quase nunca feito na prática. Ao invés disso, dispositivos
de bloco de discos são divididos em dispositivos de bloco menores e mais fáceis
de manusear. Em sistemas x86, são chamados de <e>partições</e>.
</p>

<p>
As partições são divididas em três tipos: <e>primária</e>, <e>estendida</e> e
<e>lógica</e>.
</p>

<p>
Uma partição <e>primária</e> é uma partição que tem sua informação gravada no 
registro mestre de inicialização (MBR). Como um MBR é muito pequeno (512 bytes),
somente quatro partições primárias podem ser definidas (por exemplo, de
<path>/dev/hda1</path> até <path>/dev/hda4</path>).
</p>

<p>
Uma partição <e>estendida</e> é uma partição primária especial (significando que 
a partição estendida deve ser uma das quatro partições primárias possíveis), que 
contém mais partições. Tal partição não existia originalmente, mas como quatro
partições eram muito pouco, estendeu-se o esquema de formatação sem perder
compatibilidade com o método antigo.
</p>

<p>
Uma partição <e>lógica</e> é uma partição dentro de uma partição estendida. Suas 
definições não são colocadas dentro do registro mestre de inicialização (MBR),
mas são declaradas dentro da partição estendida.
</p>

</body>
</subsection>
<subsection>
<title>Armazenamento avançado</title>
<body>

<p>
Os CDs de instalação de x86 oferecem suporte para EVMS e LVM2. EVMS e LVM2
aumentam a flexibilidade oferecida pela sua configuração de particionamento.
Durante as instruções de instalação, nós iremos focar em partições "normais",
mas ainda é bom saber que EVMS e LVM2 também são suportados.
</p>

</body>
</subsection>
</section>
<section>
<title>Desenhando um esquema de particionamento</title>
<subsection>
<title>Esquema de particionamento padrão</title>
<body>

<p>
Se você não está interessado em desenhar um esquema de particionamento para seu
sistema, você pode usar o esquema de particionamento que usamos neste manual
inteiro:
</p>

<table>
<tr>
  <th>Partição</th>
  <th>Sistema de arquivos</th>
  <th>Tamanho</th>
  <th>Descrição</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>ext2</ti>
  <ti>32M</ti>
  <ti>Partição de inicialização (boot)</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Partição de swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>ext3</ti>
  <ti>Resto do disco</ti>
  <ti>Partição raiz (root)</ti>
</tr>
</table>

<p>
Se você estiver interessado em saber o tamanho que uma partição (ou volume
lógico) deve ter, ou mesmo de quantas partições (ou volumes) você precisa, leia
mais. Senão, continue com <uri link="#fdisk">Usando o fdisk para particionar seu
disco</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Quantas e de que tamanho?</title>
<body>

<p>
O número de partições depende muito de seu ambiente. Por exemplo, se você tem
muitos usuários, você provavelmente deve ter seu <path>/home</path> separado
para aumentar a segurança e tornar backups mais fáceis. Se você estiver
instalando o Gentoo para funcionar como um servidor de e-mails, seu
<path>/var</path> deve ser separado, uma vez que todos e-mails são gravados
dentro de <path>/var</path>. Uma boa escolha de sistema de arquivos irá
maximizar sua performance. Servidores de jogos têm uma partição
<path>/opt</path> separada, uma vez que a maior parte de servidores de jogos são
instalados lá. A razão é semelhante à do <path>/home</path>: segurança e
backups. Você deve manter seu <path>/usr</path> grande: não só irá conter a
maior parte das aplicações, a árvore do Portage sozinha toma em torno de 500
Mbytes, excluindo as várias fontes que são gravadas nela.
</p>

<p>
Como você pode ver, muito depende do que você quer fazer. Partições ou volumes
separados têm as seguintes vantagens:
</p>

<ul>
<li>
  Você pode escolher o sistema de arquivos de melhor performance para cada 
  partição ou volume
</li>
<li>
  Seu sistema inteiro não irá ficar sem espaço se uma ferramenta defunta 
  estiver continuamente escrevendo arquivos em uma partição ou volume
</li>
<li>
  Se necessárias, verificações de sistemas de arquivos têm seu tempo reduzido,
  já que verificações múltiplas podem ser feitas em paralelo (embora esta
  vantagem seja maior com vários discos que com várias partições)
</li>
<li>
  A segurança pode ser melhorada ao montar algumas partições ou volumes como
  somente-leitura, nosuid (bits de setuid são ignorados), noexec (bits
  executáveis são ignorados), etc...
</li>
</ul>

<p>
No entanto, partições múltiplas têm uma grande desvantagem: se não forem
configuradas apropriadamente, você pode acabar com um sistema com muito espaço
livre em uma partição e nenhum em outra. Também existe um limite de 15 partições
para SCSI e SATA.
</p>

<p>
Como um exemplo de particionamento, iremos mostrar uma de um disco de 20GB,
usado como um laptop de demonstração (contendo um servidor de web, servidor
de e-mail, gnome, ...):
</p>

<pre caption="Exemplo de utilização de sistema de arquivos">
$ <i>df -h</i>
Filesystem    Type    Size  Used Avail Use% Mounted on
/dev/hda5     ext3    509M  132M  351M  28% /
/dev/hda2     ext3    5.0G  3.0G  1.8G  63% /home
/dev/hda7     ext3    7.9G  6.2G  1.3G  83% /usr
/dev/hda8     ext3   1011M  483M  477M  51% /opt
/dev/hda9     ext3    2.0G  607M  1.3G  32% /var
/dev/hda1     ext2     51M   17M   31M  36% /boot
/dev/hda6     swap    516M   12M  504M   2% &lt;not mounted&gt;
<comment>(Espaço sem particionamento para uso futuro: 2 GB)</comment>
</pre>

<p>
A partição <path>/usr</path> está bastante cheia (83% usado) aqui, mas uma vez 
que todo software está instalado, a <path>/usr</path> não tende a crescer tanto.
Embora alocar alguns gigabytes de espaço em disco para <path>/var</path> possa
parecer excessivo, lembre-se de que o Portage use esta partição por padrão para
compilar pacotes. Se você quiser manter a <path>/var</path> em um tamanho mais
razoável, como 1GB, você deve alterar sua variável <c>PORTAGE_TMPDIR</c> no
<path>/etc/make.conf</path> para apontar para a partição com espaço livre em
disco suficiente para compilar pacotes extremamente grandes como OpenOffice.
</p>

</body>
</subsection>
</section>
<section id="fdisk">
<title>Usando o fdisk para particionar seu disco</title>
<subsection>
<body>

<p>
As partes seguintes explicam como criar o modelo de partições descrito
anteriormente:
</p>

<table>
<tr>
  <th>Partição</th>
  <th>Descrição</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>Partição de inicialização (boot)</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>Partição de swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Partição raiz (root)</ti>
</tr>
</table>

<p>
Mude o seu arranjo de partições de acordo com sua preferência.
</p>

</body>
</subsection>
<subsection>
<title>Vendo o arranjo de partições atual</title>
<body>

<p>
O <c>fdisk</c> é uma ferramenta popular e poderosa para dividir seu disco em
partições. Inicie o <c>fdisk</c> em seu disco (em nosso exemplo, usamos
<path>/dev/hda</path>):
</p>

<pre caption="Iniciando o fdisk">
# <i>fdisk /dev/hda</i>
</pre>

<p>
Uma vez dentro do <c>fdisk</c>, você verá um prompt que se parece com o
seguinte:
</p>

<pre caption="prompt do fdisk">
Command (m for help): 
</pre>

<p>
Digite <c>p</c> para ver a configuração de partições atual de seu disco:
</p>

<pre caption="Um exemplo de configuração de partições">
Command (m for help): <i>p</i>

Disk /dev/hda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        49    264600   82  Linux swap
/dev/hda3            50        70    158760   83  Linux
/dev/hda4            71      2184  15981840    5  Extended
/dev/hda5            71       209   1050808+  83  Linux
/dev/hda6           210       348   1050808+  83  Linux
/dev/hda7           349       626   2101648+  83  Linux
/dev/hda8           627       904   2101648+  83  Linux
/dev/hda9           905      2184   9676768+  83  Linux

Command (m for help): 
</pre>

<p>
Este disco em particular está configurado para armazenar sete sistemas de
arquivos Linux (cada um com uma partição correspondente listada como "Linux"),
bem como uma partição de swap (listada como "Linux swap").
</p>

</body>
</subsection>
<subsection>
<title>Apagando todas partições</title>
<body>

<p>
Iremos primeiro apagar todas partições existentes do disco. Digite <c>d</c> para
apagar uma partição. Por exemplo, para apagar um <path>/dev/hda1</path> já
existente:
</p>

<pre caption="Apagando uma partição">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
A partição foi agendada para ser apagada. Ela não irá mais aparecer se você
digitar <c>p</c>, mas não será apagada até que suas mudanças sejam salvas. Se 
você cometeu um erro e quiser abortar sem salvar suas mudanças, digite <c>q</c> 
imediatamente e aperte enter e sua partição não será apagada.
</p>

<p>
Agora, presumindo que você realmente quer apagar todas partições de seu sistema,
aperte <c>p</c> repetidamente para mostrar uma listagem de partições e então
digite <c>d</c> e o número da partição para apagá-la. No fim, você terminará com
uma tabela de partições sem nada:
</p>

<pre caption="Uma tabela de partições vazia">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Agora que a tabela de partições na memória está vazia, estamos prontos para
criar as partições. Nós iremos usar o esquema de particionamento padrão que
discutimos anteriormente. Lógico, não siga as instruções à risca se você não
quer o mesmo esquema de particionamento!
</p>

</body>
</subsection>
<subsection>
<title>Criando a partição de inicialização (boot)</title>
<body>

<p>
Primeiro criamos uma pequena partição de inicialização (boot). Digite <c>n</c>
para criar uma nova partição, então <c>p</c> para selecionar a partição
primária, seguida de <c>1</c> para selecionar a primeira partição primária.
Quando pedido o primeiro cilindro, aperte enter. Quando pedido o último
cilindro, digite <c>+32M</c> para criar uma partição de 32 Mbytes de tamanho:
</p>

<pre caption="Criando a partição de inicialização (boot)">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-3876, default 1): <comment>(Aperte Enter)</comment>
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <i>+32M</i>
</pre>

<p>
Agora, quando você digitar <c>p</c>, você verá o seguinte esquema de
particionamento:
</p>

<pre caption="Partição de inicialização (boot) criada">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
</pre>

<p>
Nós precisamos fazer esta partição carregável. Digite <c>a</c> para ligar a
opção de carregável em uma partição e selecione <c>1</c>. Se você apertar
<c>p</c> de novo, você verá que um <path>*</path> foi colocado na coluna de
"Boot".
</p>

</body>
</subsection>
<subsection>
<title>Criando a partição de swap</title>
<body>

<p>
Vamos agora criar a partição de swap. Para fazer isto, digite <c>n</c> para
criar uma nova partição, então <c>p</c> para dizer ao fdisk que você quer uma
partição primária. Então digite <c>2</c> para criar a segunda partição primária,
<path>/dev/hda2</path> em nosso caso. Quando for pedido o primeiro cilindro,
aperte enter. Quando for pedido o último cilindro, digite <c>+512M</c> para
criar uma partição de 512MB. Depois que você fez isso, digite <c>t</c> para
ajustar o tipo de partição, <c>2</c> para selecionar a partição que você acabou
de criar e então digite <c>82</c> para ajustar o tipo de partição para "Linux
Swap". Depois de completar estes passos, ao digitar <c>p</c> você deve ver uma
tabela de partição que se parece com isso:
</p>

<pre caption="Listagem de partições depois de criar a partição de swap">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
</pre>

</body>
</subsection>
<subsection>
<title>Criando a partição raiz (root)</title>
<body>

<p>
Finalmente, vamos criar a partição de root. Para fazer isso, digite <c>n</c>
para criar uma nova partição, então <c>p</c> para dizer ao fdisk que você quer
uma partição primária. Então digite <c>3</c> para criar a terceira partição
primária, <path>/dev/hda3</path> em nosso caso. Quando for pedido o primeiro
cilindro, aperte enter. Quando for pedido o último cilindro, aperte enter para
criar uma partição que toma o resto do espaço disponível em seu disco. Depois de
completar estes passos, ao digitar <c>p</c> você deve ver uma tabela de
partições parecida com o seguinte:
</p>

<pre caption="Listagem de partições depois de criar a partição raiz (root)">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
/dev/hda3         82      3876  28690200   83  Linux
</pre>


</body>
</subsection>
<subsection>
<title>Salvando o arranjo de partições</title>
<body>

<p>
Para salvar o arranjo de partições e sair do <c>fdisk</c>, digite <c>w</c>.
</p>

<pre caption="Salve e saia do fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Agora que suas partições foram criadas, você pode continuar com <uri
link="#filesystems">Criando sistemas de arquivos</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Criando sistemas de arquivos</title>
<subsection>
<title>Introdução</title>
<body>

<p>
Agora que suas partições foram criadas, está na hora de colocar um sistema de
arquivos nelas. Se você não se importa em escolher o sistema de arquivos e está
contente com o que usamos como padrão neste manual, continue com  <uri
link="#filesystems-apply">Aplicando um sistema de arquivos a uma partição</uri>.
Caso contrário, leia mais para aprender sobre os sistemas de arquivos
disponíveis...
</p>

</body>
</subsection>
<subsection>
<title>Sistemas de arquivos?</title>
<body>

<p>
O kernel do Linux suporta vários sistemas de arquivos. Nós iremos explicar sobre
ext2, ext3, ReiserFS, XFS e JFS, já que estes são os sistemas de arquivos mais
usados em sistemas Linux.
</p>

<p>
O <b>ext2</b> é o sistema mais testado e fiel ao Linux, mas não tem jornal de
meta-dados, o que significa que verificações rotineiras de sistemas de arquivo
ext2 podem levar bastante tempo. Existe agora uma razoável seleção de sistemas
de arquivos de nova geração com jornal que podem ter sua consistência verificada
rapidamente e que são geralmente preferíveis aos seus respectivos sistemas sem
jornal. Sistemas de arquivo com jornal previnem longas esperas quando você
carrega seu sistema e seu sistema de arquivos está em um estado inconsistente.
</p>

<p>
O <b>ext3</b> é a versão com jornal do sistema de arquivos ext2, fornecendo
jornal de meta-dados para recuperação rápida, fora outros modos de jornal
aprimorados como dados completos e dados ordenados. O ext3 é um sistema de
arquivos muito bom e confiável. Tem uma opção adicional de catalogar hashed
b-trees que permite alta performance em quase todas situações. Você pode ativar
este catálogo adicionando <c>-O dir_index</c> ao comando <c>mke2fs</c>. Para
resumir, o ext3 é um excelente sistema de arquivos.
</p>

<p>
O <b>ReiserFS</b> é sistema de arquivos baseado em B*-trees que tem uma
performance em geral muito boa e muito superior a tanto o ext2 quanto o ext3 na
hora de lidar com arquivos pequenos (de menos de 4k), freqüentemente com um
fator de 10x-15x. O ReiserFS também escala extremamente bem e tem jornal de
meta-dados. A partir do kernel 2.4.18+, o ReiserFS está sólido e pronto para ser
usado tanto como um sistema de arquivos genérico quanto para casos extremos como
a criação de sistemas de arquivos enormes, uso de muitos arquivos pequenos,
arquivos muito grandes e diretórios contendo dezenas de milhares de arquivos.
</p>

<p>
O <b>XFS</b> é um sistema de arquivos com jornal de meta-dados que vem com um
robusto conjunto de funções e é otimizado para escalabilidade. Só recomendamos
usar este sistema de arquivos em sistemas rodando Linux com equipamento SCSI de
ponta e/ou armazenamento em canais de fibra e fonte de energia sem interrupção.
Pelo fato de o XFS criar cachês agressivamente de dados em uso na memória RAM,
programas mal desenhados (que não tomam precauções na hora de escrever os
arquivos em disco, e existem muitos deles) podem perder uma grande quantidade de
dados se o sistema for desligado sem aviso.
</p>

<p>
O <b>JFS</b> é o sistema de arquivos com jornal de alta performance da IBM.
Recentemente tornou-se pronto para uso em produção e não há experiência
suficiente para comentar a favor ou contra sua estabilidade geral neste ponto.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Aplicando um sistema de arquivos a uma partição</title>
<body>

<p>
Para criar um sistema de arquivos em uma partição ou volume, existem ferramentas
disponíveis para cada sistema de arquivos possível:
</p>

<table>
<tr>
  <th>Sistema de arquivos</th>
  <th>Comando de criação</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Por exemplo, para ter a partição de inicialização (boot) (<path>/dev/hda1</path>
em nosso exemplo) em ext2 e a partição de root (<path>/dev/hda3</path> em nosso
exemplo) em ext3 (como em nosso exemplo), você faria:
</p>

<pre caption="Aplicando um sistema de arquivos a uma partição">
# <i>mke2fs /dev/hda1</i>
# <i>mke2fs -j /dev/hda3</i>
</pre>

<p>
Agora crie os sistemas de arquivos em suas partições recém-criadas (ou
volumes lógicos).
</p>

</body>
</subsection>
<subsection>
<title>Ativando a partição de swap</title>
<body>

<p>
<c>mkswap</c> é o comando usado para iniciar partições de swap:
</p>

<pre caption="Criando uma assinatura de swap">
# <i>mkswap /dev/hda2</i>
</pre>

<p>
Para ativar a partição de swap, use <c>swapon</c>:
</p>

<pre caption="Ativando a partição de swap">
# <i>swapon /dev/hda2</i>
</pre>

<p>
Crie e ative o swap agora com os comandos mencionados acima.
</p>

</body>
</subsection>
</section>
<section>
<title>Montando</title>
<body>

<p>
Agora que suas partições foram iniciadas e possuem um sistema de arquivos, está 
na hora de montá-las. Use o comando <c>mount</c>. Não se esqueça de criar os
diretórios necessários de montagem para cada partição que você criou. Como
exemplo montamos a partição raiz (root) e de inicialização (boot):
</p>

<pre caption="Montando partições">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

<note>
Se você quiser que seu <path>/tmp</path> resida em uma partição separada,
certifique-se de mudar suas permissões depois de montá-la: <c>chmod 1777
/mnt/gentoo/tmp</c>. O mesmo vale para <path>/var/tmp</path>.
</note>

<p>
Agora iremos montar o sistema de arquivos proc (uma interface virtual com o
kernel) em <path>/proc</path>. Porém, primeiro iremos colocar nossos arquivos
nas partições.
</p>

<p>
Continue com <uri link="?part=1&amp;chap=5">Instalando os arquivos de instalação
do Gentoo</uri>.
</p>

</body>
</section>
</sections>
