<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/handbook/2005.0/hb-install-x86-kernel.xml,v 1.1 2005/05/06 21:31:16 vanquirius Exp $ -->

<sections>

<version>4.4</version>
<date>2005-03-29</date>

<section>
<title>Fuso horário</title>
<body>

<p>
Você deve primeiro selecionar seu fuso horário para que seu sistema saiba onde está localizado. Procure seu fuso horário em <path>/usr/share/zoneinfo</path>, então faça um link
simbólico para <path>/etc/localtime</path> usando o comando <c>ln</c>:
</p>

<pre caption="Configurando informação de fuso horário">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Suponha que você queira usar GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalando as fontes</title>
<subsection>
<title>Escolhendo um kernel</title>
<body>

<p>
O centro através do qual todas distribuições são construídas é o kernel do Linux. Ele fica entre os programas de usuário e o hardware do sistema. O Gentoo permite que seus usuários escolham dentro de uma variedade de fontes de kernel. Uma lista completa com descrições pode ser encontrada no <uri link="/doc/pt_br/gentoo-kernel.xml">Guia de Kernel do Gentoo</uri>.
</p>

<p>
Para sistemas baseados em x86, nosso kernel principal suportado é chamado
<c>gentoo-sources</c>. Este kernel é baseado nas fontes oficiais do Linux, mas
tem consertos de segurança, estabilidade, compatibilidade e bugs aplicados.
Alternativamente, as fontes de Linux normais e sem patches são oferecidas através do
pacote <c>vanilla-sources</c>.
</p>

<p>
Ambas fontes de kernel são baseadas nas fontes de kernel 2.6. Se você
deseja instalar um kernel baseado em 2.4, você precisará instalar o Gentoo com uma
conexão de Internet já que não oferecemos estas fontes em nosso
CD de Instalação.
</p>

<p>
Escolha sua fonte de kernel e instale-a usando o comando <c>emerge</c>. 
</p>

<pre caption="Instalando uma fonte de kernel">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Quando você olhar em <path>/usr/src</path> você deve perceber um link simbólico chamado 
<path>linux</path> apontando para a seu fonte do kernel. Iremos presumir que a fonte do
kernel instalado é a <c>gentoo-sources-2.6.11-r3</c>:
</p>

<pre caption="Vendo o link simbólico para a fonte do kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.11-gentoo-r3
</pre>

<p>
Se o link simbólico não apontar para a fonte de kernel de sua escolha (note que
<c>linux-2.6.11-gentoo-r3</c> é meramente um exemplo você deve mudá-lo para
o kernel certo:
</p>

<pre caption="Mudando o link simbólico para o kernel">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.11-gentoo-r3 linux</i>
</pre>

<p>
Agora está na hora de configurar e compilar sua fonte do kernel. Você pode usar o comando <c>genkernel</c> para fazer isto, que irá construir um kernel genérico parecido com o do CD de instalação. Iremos, porém, explicar a configuração manual primeiro, já 
que é a melhor maneira de otimizar seu ambiente.
</p>

<p>
Se você quiser configurar seu kernel manualmente, continue agora com  <uri
link="#manual">Padrão: Configuração manual</uri>. Se você quiser usar
o comando <c>genkernel</c> você deve ler <uri link="#genkernel">Alternativa: Usando
o genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Padrão: Configuração manual</title>
<subsection>
<title>Introdução</title>
<body>

<p>
Configurar um kernel manualmente é freqüentemente tido como o procedimento mais difícil
que um usuário de Linux tem de fazer. Grande mentira -- depois de configurar
uns dois kernéis você nem lembrará que foi difícil ;)
</p>

<p>
No entanto, uma coisa <e>é</e> verdade: você deve conhecer seu sistema quando você começar
a configurar o kernel manualmente. A maior parte das informações pode ser obtida lendo o
conteúdo de <path>/proc/pci</path> (ou usando o comando <c>lspci</c> se disponível). Você
também pode rodar  <c>lsmod</c> para ver que módulos o CD de instalação usa
(pode dar uma boa dica sobre o que ativar).
</p>

<p>
Agora vá para o diretório da fonte do kernel e execute <c>make menuconfig</c>. Isto
irá iniciar um menu de configuração baseado em ncurses.
</p>

<pre caption="Rodando o menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Você verá várias seções de configuração. Iremos primeiro listar algumas
opções que você deve ativar (ou o Gentoo não irá funcionar, ou não irá funcionar
sem mudanças adicionais).
</p>

</body>
</subsection>
<subsection>
<title>Ativando as opções necessárias</title>
<body>

<p>
Certifique-se de que todo driver que é vital no processo de inicialização de seu sistema (como 
controlador SCSI, ...) está compilado <e>no</e> kernel e não como módulo,
caso contrário seu sistema não será capaz de inicializar completamente.
</p>

<p>
Agora escolha a família correta de processador:
</p>

<pre caption="Selecionando seu processador">
Processor type and features ---&gt;
    Subarchitecture Type (PC-compatible)  ---&gt;
  <comment>(Change according to your system)</comment>
  (<i>Athlon/Duron/K7</i>) Processor family
</pre>

<p>
Agora vá para <c>File Systems</c> e selecione suporte para o sistema de arquivos que você usa.
<e>Não</e> os compile como módulos, caso contrário seu sistema Gentoo não será
capaz de montar suas partições. Também selecione <c>/proc file system</c> e
<c>Virtual memory</c>. <e>Não</e> selecione <c>/dev file system</c>.
</p>

<pre caption="Selecionando sistemas de arquivos necessários">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    &lt;*&gt; /proc file system support
    &lt; &gt; /dev file system support (OBSOLETE)
    &lt;*&gt; Virtual memory file system support (former shm fs)


<comment>(Selecione uma ou mais das seguintes opções conforme necessárias ao seu sistema)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Não se esqueça de ativar DMA para seus discos:
</p>

<pre caption="Ativando DMA">
Device Drivers ---&gt;
  ATA/ATAPI/MFM/RLL support ---&gt;
    [*] Generic PCI bus-master DMA support
    [*]   Use PCI DMA by default when available
</pre>

<p>
Se você estiver usando PPPoE para conectar à Internet ou está usando um modem discado, você irá precisar das seguintes opções no kernel:
</p>

<pre caption="Selecionando drivers necessários para PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
As duas opções de compressão não fazem mal, mas não são absolutamente necessárias, bem como a opção <c>PPP over Ethernet</c>, que somente pode ser usada pelo comando <c>rp-pppoe</c> quando configurado para fazer PPPoE em modo de kernel.
</p>

<p>
Se você precisar, não se esqueça de incluir suporte no kernel para sua placa de rede.
</p>

<p>
Se você tiver uma CPU Intel que suporta HyperThreading (tm), ou tem um
sistema de várias CPUs, você deve ativar "Symmetric multi-processing support":
</p>

<pre caption="Ativando suporte a SMP">
Processor type and features  ---&gt;
  &lt;*&gt; Symmetric multi-processing support
</pre>

<p>
Se você usa dispositivos USB (como teclado ou mouse) não se esqueça de ativá-los também:
</p>

<pre caption="Ativando suporte a USB para dispositivos de entrada">
Device Drivers ---&gt;
  USB Support ---&gt;
  &lt;*&gt;   USB Human Interface Device (full HID) support
  [*]   HID input layer support 
</pre>

<p>
Se você for um usuário de laptop e precisar de suporte a PCMCIA, lembre-se de compilá-lo
no kernel. Também como a opção abaixo, certifique-se de ativar suporte para
a ponte de cartão PCMCIA presente em seu sistema (encontrada no mesmo menu da
configuração).
</p>

<pre caption="Ativando suporte a PCMCIA">
Bus options (PCI, PCMCIA, EISA, MCA, ISA)  ---&gt;
  PCCARD (PCMCIA/CardBus) support  ---&gt;
    &lt;*&gt; PCCard (PCMCIA/CardBus) support
    <comment>(selecione 16 bit se você precisar de suporte para cartões PCMCIA antigos. A maior parte das pessoas deve colocar isso.)</comment>
    &lt;*&gt;   16-bit PCMCIA support
    [*]   32-bit CardBus support
    <comment>(selecione as pontes relevantes abaixo)</comment>
    --- PC-card bridges
    &lt;*&gt; CardBus yenta-compatible bridge support (NEW)
    &lt;*&gt; Cirrus PD6729 compatible bridge support (NEW)
    &lt;*&gt; i82092 compatible bridge support (NEW)
    &lt;*&gt; i82365 compatible bridge support (NEW)
    &lt;*&gt; Databook TCIC host bridge support (NEW)
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Compilando e instalando</title>
<body>

<p>
Agora que seu kernel está configurado, está na hora de compilá-lo e instalá-lo. Saia
da configuração e comece o processo de compilação:
</p>

<pre caption="Compilando o kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Quando o kernel terminar de compilar, copie a imagem do kernel para
<path>/boot</path>. Daqui em diante, presumimos que o kernel que você está
instalando seja a versão 2.6.11-r3 do <c>gentoo-sources</c>. Use qualquer 
nome que você achar apropriado e lembre-se dele, já que você precisará
mais tarde para configurar o gerenciador de inicialização.
</p>

<pre caption="Instalando o kernel">
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.6.11-gentoo-r3</i>
</pre>

<p>
Também é sábio copiar o seu arquivo de configuração do kernel para
<path>/boot</path>, caso você precise :)
</p>

<pre caption="Copiando sua configuração de kernel">
# <i>cp .config /boot/config-2.6.11-gentoo-r3</i>
</pre>

<p>
Agora continue com <uri link="?part=1&amp;chap=8">Configurando seu sistema</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativa: Usando o genkernel</title>
<body>

<p>
Se você estiver lendo esta seção, você escolheu usar nosso script <c>genkernel</c> para 
configurar o kernel para você.
</p>

<p>
Agora que sua fonte de kernel está instalada, está na hora de compilar seu
kernel usando nosso script <c>genkernel</c> para criar um kernel automaticamente para
você. O <c>genkernel</c> funciona configurando um kernel quase idêntico ao
modo que nosso kernel do CD de Instalação é configurado. Isto significa que quando você usa o
<c>genkernel</c> para construir seu kernel, seu sistema irá geralmente detectar todo
seu hardware durante a inicialização, igual a nosso CD de Instalação. Porque o genkernel
não precisa de configuração manual de kernel, é uma solução ideal para
os usuários que podem não estar confortáveis compilando seus próprios kernéis.
</p>

<p>
Agora vamos ver como usar o genkernel. Primeiro, faça emerge da ebuild do genkernel:
</p>

<pre caption="Instalando o genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
A seguir, copie a configuração de kernel usada no CD de Instalação para o
local onde o genkernel procura pela configuração padrão de kernel:
</p>

<pre caption="Copiando a configuração de kernel do CD de instalação">
# <i>zcat /proc/config.gz > /usr/share/genkernel/x86/kernel-config-2.6</i>
</pre>

<p>
Agora, compile suas fontes de kernel rodando <c>genkernel --udev all</c>.
Esteja alerta, entretanto, de que como o <c>genkernel</c> compila um kernel que suporta quase todos hardwares, esta compilação irá demorar bastante para terminar!
</p>

<p>
Note que se sua partição de inicialização (boot) não usa ext2 ou ext3 como sistema de arquivos você precisará configurar manualmente seu kernel usando o comando  <c>genkernel --menuconfig all</c>
e adicionando suporte para seu sistema de arquivos <e>dentro</e> do kernel (isto é, <e>não</e> como módulo). Usuários de EVMS2 ou LVM2 devem adicionar
<c>--evms2</c> ou <c>--lvm2</c> como argumento também.
</p>

<pre caption="Rodando o genkernel">
# <i>genkernel --udev all</i>
</pre>

<p>
Uma vez que o <c>genkernel</c> termine, um kernel, um conjunto completo de módulos e um <e>initial root disk</e> (initrd) serão criados. Nós iremos usar o kernel e o initrd quando formos configurar um gerenciador de inicialização numa parte mais adiantada deste documento. Escreva os nomes do kernel e initrd, uma vez que você irá precisar deles quando for escrever o arquivo de configuração do gerenciador de inicialização. A initrd será iniciada imediatamente após a inicialização para fazer a auto-detecção de hardware (igual ao CD de instalação), antes de seu sistema "de verdade" iniciar.
</p>

<pre caption="Verificando o nome da imagem de kernel criada e initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Se você quiser que seu sistema seja mais parecido com o CD de Instalação você deve,
quando sua instalação do Gentoo terminar, fazer emerge <c>coldplug</c>. Enquanto o
initrd auto-detecta hardware que é necessário para iniciar seu sistema,
o <c>coldplug</c> auto-detecta todo o resto. <c>coldplug</c> está disponível como um dos
pacotes do CD de pacotes.
</p>

<pre caption="Instalando e ativando o coldplug">
<comment>(Faça isso após a instalação, durante as instruções de instalação de GRP)</comment>
# <i>emerge -k coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

<p>
Se você quiser que seu sistema reaja a eventos de hotplugging, você deve
instalar e configurar o hotplug também:
</p>

<pre caption="Instalando e ativando o hotplug">
<comment>(Faça isso após a instalação, durante as instruções de instalação de GRP)</comment>
# <i>emerge -k hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

<p>
Agora continue com <uri link="?part=1&amp;chap=8">Configurando seu sistema</uri>.
</p>

</body>
</section>
</sections>
