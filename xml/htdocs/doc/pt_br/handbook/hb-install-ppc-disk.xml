<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/handbook/hb-install-ppc-disk.xml,v 1.8 2005/09/05 23:20:27 vanquirius Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>2.4</version>
<date>2005-08-25</date>

<section>
<title>Introdução a dispositivos de bloco</title>
<subsection>
<title>Dispositivos de bloco</title>
<body>

<p>
Iremos estudar os aspectos de manuseio de discos do Gentoo Linux e do Linux em
geral, incluindo sistemas de arquivos de Linux, partições e dispositivos de
bloco. Uma vez que você estiver familiar com o funcionamento de discos e
sistemas de arquivos, iniciaremos o processo de configuração de partições e
sistemas de arquivos para sua instalação do Gentoo Linux.
</p>

<p>
Para começar, iremos introduzir os <e>dispositivos de bloco</e>. O dispositivo
de bloco mais famoso é provavelmente aquele que representa o primeiro disco
rígido IDE em um sistema Linux, chamado de <path>/dev/hda</path>. Se seu sistema
usa discos SCSI ou SATA, então seu primeiro disco rígido será
<path>/dev/sda</path>.
</p>

<p>
Os dispositivos de bloco acima representam uma interface abstrata para o disco.
Programas de usuário podem usar os dispositivos de bloco para interagir com seu
disco sem preocupação se eles são IDE, SCSI ou outra coisa. O programa pode
simplesmente classificar o espaço de armazenagem no disco como um monte de
blocos de 512 bytes contíguos acessíveis aleatoriamente.
</p>

</body>
</subsection>
<subsection>
<title>Partições</title>
<body>

<p>
Embora seja teoricamente possível usar um disco inteiro para armazenar seu
sistema Linux, isto é quase nunca feito na prática. Ao invés disso, dispositivos
de bloco de discos são divididos em dispositivos de bloco menores e mais fáceis
de manusear. Na maior parte dos sistemas, são chamados de <e>partições</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Desenhando um esquema de particionamento</title>
<subsection>
<title>Esquema de particionamento padrão</title>
<body>

<p>
Se você não está interessado em desenhar um esquema de particionamento para seu
sistema, você pode usar o esquema de particionamento que usamos neste manual
inteiro:
</p>

<table>
<tr>
  <th>Partição NewWorld</th>
  <th>Partição OldWorld</th>
  <th>Partição Pegasos</th>
  <th>Partição RS/6000</th>
  <th>Sistema de arquivos</th>
  <th>Tamanho</th>
  <th>Descrição</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(Não aplicável)</ti>
  <ti>(Não aplicável)</ti>
  <ti>(Mapa de partições)</ti>
  <ti>32k</ti>
  <ti>Apple_partition_map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(Não aplicável)</ti>
  <ti>(Não aplicável)</ti>
  <ti>(Não aplicável)</ti>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti>(Não aplicável)</ti>
  <ti>(Não aplicável)</ti>
  <ti>(Não aplicável)</ti>
  <ti><path>/dev/sda1</path></ti>
  <ti>(PReP Boot)</ti>
  <ti>800k</ti>
  <ti>Type 0x41</ti>
</tr>
<tr>
  <ti>(Não aplicável)</ti>
  <ti><path>/dev/hda2</path> (Se usando quik)</ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(Não necessária)</ti>
  <ti>ext2</ti>
  <ti>32MB</ti>
  <ti>Partição de inicialização (boot)</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda2</path>(<path>/dev/hda3</path> se usando quik)</ti>
  <ti><path>/dev/hda2</path></ti>
  <ti><path>/dev/sda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Partição de swap, tipo 0x82</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti><path>/dev/hda3</path> (<path>/dev/hda4</path> se usando quik)</ti>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/sda3</path></ti>
  <ti>ext3, xfs</ti>
  <ti>Resto do disco</ti>
  <ti>Partição raiz (root), tipo 0x83</ti>
</tr>
</table>

<note>
Existem algumas partições chamadas: <path>Apple_Driver43, Apple_Driver_ATA, 
Apple_FWDriver, Apple_Driver_IOKit, Apple_Patches</path>. Se você não planeja
usar MacOS 9 você pode apagá-las, já que o MacOS X e o Linux não precisam delas.
Para apagá-las, use parted ou apague o disco inteiro iniciando o mapa de
partições.
</note>

<warn>
O <c>parted</c> é capaz de redimensionar partições. No CD de instalação há
patches incluídos para redimensionar sistemas de arquivos HFS+. Infelizmente é
arriscado redimensionar sistemas com jornal, certifique-se de desligar jornal no
Mac OS X primeiro e certifique-se de usar uma ferramenta de verificação de disco
após redimensionar. Tudo que você fizer em relação a redimensionamento com o
parted é de seu próprio risco! Certifique-se de ter feito cópias de seus dados!
</warn>

<p>
Se você estiver interessado em saber que tamanho uma partição deve ter, ou mesmo 
de quantas partições você precisa, leia mais. Caso contrário, continue agora com
<uri link="#fdisk">Padrão: Usando o mac-fdisk (Apple/IBM) para particionar seu
disco</uri> ou <uri link="#parted">Alternativa: Usando o parted (especialmente
para Pegasos) para particionar seu disco</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Quantas e de que tamanho?</title>
<body>

<p>
O número de partições depende muito de seu ambiente. Por exemplo, se você tem
muitos usuários, você provavelmente deve ter seu <path>/home</path> separado
para aumentar a segurança e tornar backups mais fáceis. Se você estiver
instalando o Gentoo para funcionar como um servidor de e-mails, seu
<path>/var</path> deve ser separado, uma vez que todos e-mails são gravados
dentro de <path>/var</path>. Uma boa escolha de sistema de arquivos irá
maximizar sua performance. Servidores de jogos têm uma partição
<path>/opt</path> separada, uma vez que a maior parte de servidores de jogos são
instalados lá. A razão é semelhante à do <path>/home</path>: segurança e
backups. Você deve manter seu <path>/usr</path> grande: não só irá conter a
maior parte das aplicações, a árvore do Portage sozinha toma em torno de 500
Mbytes, excluindo as várias fontes que são gravadas nela.
</p>

<p>
Como você pode ver, muito depende do que você quer fazer. Partições ou volumes
separados têm as seguintes vantagens:
</p>

<ul>
<li>
  Você pode escolher o sistema de arquivos de melhor performance para cada 
  partição ou volume
</li>
<li>
  Seu sistema inteiro não irá ficar sem espaço se uma ferramenta defunta 
  estiver continuamente escrevendo arquivos em uma partição ou volume
</li>
<li>
  Se necessárias, verificações de sistemas de arquivos têm seu tempo reduzido,
  já que verificações múltiplas podem ser feitas em paralelo (embora esta
  vantagem seja maior com vários discos que com várias partições)
</li>
<li>
  A segurança pode ser melhorada ao montar algumas partições ou volumes como
  somente-leitura, nosuid (bits de setuid são ignorados), noexec (bits
  executáveis são ignorados), etc...
</li>
</ul>

<p>
No entanto, partições múltiplas têm uma grande desvantagem: se não forem
configuradas apropriadamente, você pode acabar com um sistema com muito espaço
livre em uma partição e nenhum em outra. Também existe um limite de 15 partições
para SCSI e SATA.
</p>

</body>
</subsection>
</section>
<section id="mac-fdisk">
<title>Padrão: Usando o mac-fdisk (Apple) para particionar seu disco</title>
<body>

<p>
Neste ponto, crie suas partições usando o <c>mac-fdisk</c>:
</p>

<pre caption="Iniciando o mac-fdisk">
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
Primeiro apague as partições que você limpou anteriormente para abrir espaço
para suas partições de Linux. Use <c>d</c> no <c>mac-fdisk</c> para apagar essas
partições. Ele irá perguntar que número de partição deve apagar. A primeira
partição em máquinas NewWorld (Apple_partition_map) não pode ser apagada.
</p>

<p>
Em Macs NewWorld, crie uma partição <e>Apple_Bootstrap</e> usando <c>b</c>. Ele
irá perguntar em que bloco que você quer que comece. Coloque o número de sua
primeira partição livre, seguido de um <c>p</c>. Por exemplo, <c>2p</c>.
</p>

<note>
Esta partição <e>não</e> é uma partição <path>/boot</path>. Ela não é usada pelo
Linux de forma alguma; você não tem que colocar nenhum sistema de arquivos nela
e nunca deve montá-la. Usuários de Apple não precisam de uma partição adicional
para <path>/boot</path>.
</note>

<p>
Agora crie uma partição de swap usando <c>c</c>. De novo o <c>mac-fdisk</c> irá 
perguntar em que bloco que você quer que esta partição comece. Como nós usamos
<c>2</c> antes para criar a partição de Apple_Bootstrap, você agora tem que
colocar <c>3p</c>. Quando perguntado o tamanho, digite <c>512M</c> (ou o tamanho
que você quiser - recomenda-se 512MB, todavia). Quando perguntado o nome, digite
<c>swap</c> (obrigatório).
</p>

<p>
Para criar a partição raiz (root), digite <c>c</c>, seguido de <c>4p</c> para
selecionar em que bloco a partição raiz (root) deve começar. Quando perguntado o
tamanho, digite <c>4p</c> novamente. O <c>mac-fdisk</c> irá interpretar isso
como "Use todo o espaço disponível". Quando pedirem o nome, digite <c>root</c>
(obrigatório).
</p>

<p>
Para terminar, escreva a partição no disco usando <c>w</c> e <c>q</c> para sair
do <c>mac-fdisk</c>.
</p>

<note>
Para ter certeza de que tudo está bem, você deve rodar o mac-fdisk mais uma vez
e ver se todas partições estão lá. Se você não vir nenhuma partição que você
criou, ou as mudanças que você fez, você deve reinicializar suas partições
apertando "i" no mac-fdisk. Note que isso irá recriar o mapa de partições e
remover todas suas partições.
</note>

<p>
Agora que suas partições foram criadas, você pode continuar com  <uri
link="#filesystems">Criando sistemas de arquivos</uri>.
</p>

</body>
</section>
<section id="parted">
<title>Alternativa: Usando o parted (principalmente para Pegasos) para
particionar seu disco</title>
<body>

<p>
O <c>parted</c>, o Partition Editor (editor de partições), agora pode lidar com
partições HFS+ usadas pelo Mac OS e Mac OS X. Com esta ferramenta você pode
redimensionar suas partições de Mac e criar espaço para suas partições de Linux.
No entanto, o exemplo abaixo descreve como particionar para máquinas Pegasos
somente.
</p>

<p>
Para começar iniciamos o <c>parted</c>:
</p>

<pre caption="Iniciando o parted">
# <i>parted /dev/hda</i>
</pre>

<p>
Se o disco não estiver particionado, rode <c>mklabel amiga</c> para criar um
novo disklabel para o disco.
</p>

<p>
Você pode digitar <c>print</c> a qualquer momento no parted para mostrar a
tabela de partições atual. Se a qualquer momento você mudar de idéia ou fez um
erro você pode apertar <c>Ctrl-c</c> para abortar o parted.
</p>

<p>
Se você também tem a intenção de instalar o MorphOS em seu Pegasos crie um
sistema de arquivos affs1 chamado "BI0" (BI zero) no início do disco. 32MB devem
ser mais que o suficiente para armazenar o kernel do MorphOS. Se você tem um
Pegasos I ou tem a intenção de usar reiserfs ou xfs, você deverá armazenar o
kernel do Linux nessa partição também (o Pegasos II consegue carregar de
partições ext2/ext3 ou affs1). Para criar a partição rode <c>mkpart primary
affs1 INÍCIO FIM</c> onde <c>INÍCIO</c> e <c>FIM</c> devem ser substituídos com
a amplitude de megabytes (por exemplo, <c>0 32</c> cria uma partição de 32 MB
começando em 0MB e terminando em 32MB.
</p>

<p>
Você precisa criar duas partições para o Linux, um sistema de arquivos raiz
(root) para todos seus programas de arquivo e outras coisas e uma partição de
swap. Para criar um sistema de arquivos raiz (root) você precisa decidir-se
sobre qual sistema de arquivos usar. Opções possíveis são ext2, ext3, reiserfs e
xfs. A menos que você saiba o que está fazendo, use o ext3. Rode <c>mkpart
primary ext3 INÍCIO FIM</c> para criar uma partição ext3. Novamente, troque
<c>INÍCIO</c> e <c>FIM</c> com as marcas de início e fim em megabytes para a
partição.
</p>

<p>
É geralmente recomendável que você crie uma partição de swap de duas vezes o
tamanho da memória RAM em seu computador. Você provavelmente pode safar-se com
uma partição de swap menor a menos que você deseje rodar muitos aplicativos ao
mesmo tempo (embora no mínimo 512MB são recomendados). Para criar a partição de 
swap, rode <c>mkpart primary linux-swap INÍCIO FIM</c>.
</p>

<p>
Escreva os últimos números das partições uma vez que eles são necessários
durante o processo de instalação. Para ver os últimos número rode <c>print</c>.
Seus discos são acessados com <path>/dev/hdaX</path> onde X é substituído com o
último número da partição.
</p>

<p>
Quando você terminar com o parted, simplesmente rode <c>quit</c>.
</p>

</body>
</section>
<section id="filesystems">
<title>Criando sistemas de arquivos</title>
<subsection>
<title>Introdução</title>
<body>

<p>
Agora que suas partições foram criadas, está na hora de colocar um sistema de
arquivos nelas. Se você não se importa em escolher o sistema de arquivos e está
contente com o que usamos como padrão neste manual, continue com <uri
 link="#filesystems-apply">Aplicando um sistema de arquivos a uma partição</uri>.
Caso contrário, leia mais para aprender sobre os sistemas de arquivos
disponíveis...
</p>

</body>
</subsection>
<subsection>
<title>Sistemas de arquivos?</title>
<body>

<p>
Vários sistemas de arquivos estão disponíveis. ext2, ext3, ReiserFS e XFS estão
estáveis na arquitetura PPC.
</p>

<p>
O <b>ext2</b> é o sistema mais testado e fiel ao Linux, mas não tem jornal de
meta-dados, o que significa que verificações rotineiras de sistemas de arquivo
ext2 podem levar bastante tempo. Existe agora uma razoável seleção de sistemas
de arquivos de nova geração com jornal que podem ter sua consistência verificada
rapidamente e que são geralmente preferíveis aos seus respectivos sistemas sem
jornal. Sistemas de arquivo com jornal previnem longas esperas quando você
carrega seu sistema e seu sistema de arquivos está em um estado inconsistente.
</p>

<p>
O <b>ext3</b> é a versão com jornal do sistema de arquivos ext2, fornecendo
jornal de meta-dados para recuperação rápida, fora outros modos de jornal
aprimorados como dados completos e dados ordenados. O ext3 é um sistema de
arquivos muito bom e confiável. Tem uma opção adicional de catalogar hashed
b-trees que permite alta performance em quase todas situações. Você pode ativar
este catálogo adicionando <c>-O dir_index</c> ao comando <c>mke2fs</c>. Para
resumir, o ext3 é um excelente sistema de arquivos.
</p>

<p>
O <b>ReiserFS</b> é sistema de arquivos baseado em B*-trees que tem uma
performance em geral muito boa e muito superior a tanto o ext2 quanto o ext3 na
hora de lidar com arquivos pequenos (de menos de 4k), freqüentemente com um
fator de 10x-15x. O ReiserFS também escala extremamente bem e tem jornal de
meta-dados. A partir do kernel 2.4.18+, o ReiserFS está sólido e pronto para ser
usado tanto como um sistema de arquivos genérico quanto para casos extremos como
a criação de sistemas de arquivos enormes, uso de muitos arquivos pequenos,
arquivos muito grandes e diretórios contendo dezenas de milhares de arquivos.
</p>

<p>
O <b>XFS</b> é um sistema de arquivos com jornal de meta-dados que vem com um
robusto conjunto de funções e é otimizado para escalabilidade. Só recomendamos
usar este sistema de arquivos em sistemas rodando Linux com equipamento SCSI de
ponta e/ou armazenamento em canais de fibra e fonte de energia sem interrupção.
Pelo fato de o XFS criar cachês agressivamente de dados em uso na memória RAM,
programas mal desenhados (que não tomam precauções na hora de escrever os
arquivos em disco, e existem muitos deles) podem perder uma grande quantidade de
dados se o sistema for desligado sem aviso.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Aplicando um sistema de arquivos a uma partição</title>
<body>

<p>
Para criar um sistema de arquivos em uma partição ou volume, existem ferramentas
disponíveis para cada sistema de arquivos possível:
</p>

<table>
<tr>
  <th>Sistema de arquivos</th>
  <th>Comando de criação</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mkfs.ext2</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mkfs.ext3</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkfs.reiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
</table>

<p>
Por exemplo, para ter a partição raiz (root) (<path>/dev/hda4</path> em nosso
exemplo) em ext3 (como em nosso exemplo), você faria:
</p>

<pre caption="Aplicando um sistema de arquivos a uma partição">
# <i>mkfs.ext3 /dev/hda4</i>
</pre>

<p>
Agora crie os sistemas de arquivos em suas partições recém-criadas (ou volumes
lógicos).
</p>

<note>
No PegasosII sua partição que contém o kernel deve ser ext2 ou ext3. Máquinas
NewWorld podem carregar de sistemas de arquivo ext2, ext3, XFS, ReiserFS ou até
mesmo HFS/HFS+. Em máquinas OldWorld carregando com BootX, o kernel deve ser
colocado em uma partição HFS, mas isto será completo quando você configurar seu
gerenciador de inicialização.
</note>

</body>
</subsection>
<subsection>
<title>Ativando a partição de swap</title>
<body>

<p>
<c>mkswap</c> é o comando usado para iniciar partições de swap:
</p>

<pre caption="Criando uma assinatura de swap">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
Para ativar a partição de swap, use <c>swapon</c>:
</p>

<pre caption="Ativando a partição de swap">
# <i>swapon /dev/hda3</i>
</pre>

<p>
Crie e ative o swap agora.
</p>

</body>
</subsection>
</section>
<section>
<title>Montando</title>
<body>

<p>
Agora que suas partições foram iniciadas e possuem um sistema de arquivos, está
na hora de montá-las. Use o comando <c>mount</c>. Não se esqueça de criar os
diretórios necessários de montagem para cada partição que você criou. Como
exemplo montamos a partição raiz (root):
</p>

<pre caption="Montando partições">
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda4 /mnt/gentoo</i>
</pre>

<note>
Se você quiser que seu <path>/tmp</path> resida em uma partição separada,
certifique-se de mudar suas permissões depois de montá-la: <c>chmod 1777
/mnt/gentoo/tmp</c>. O mesmo vale para <path>/var/tmp</path>.
</note>

<p>
Agora iremos montar o sistema de arquivos proc (uma interface virtual com o
kernel) em <path>/proc</path>. Porém, primeiro iremos colocar nossos arquivos
nas partições.
</p>

<p>
Continue com <uri link="?part=1&amp;chap=5">Instalando os arquivos de instalação
do Gentoo</uri>.
</p>

</body>
</section>
</sections>
