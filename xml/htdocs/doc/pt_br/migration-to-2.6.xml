<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/migration-to-2.6.xml,v 1.9 2012/04/18 18:30:34 swift Exp $ -->

<guide lang="pt_br">

<title>O guia completo de migração para o Gentoo Linux 2.6</title>

<author title="Autor">
	<mail link="dsd@gentoo.org">Daniel Drake</mail>
</author>
<author title="Colaborador">
	<mail link="sergey_zlodey@mail.ru">Sergey Galkin</mail>
</author>
<author title="Colaborador">
	<mail link="svyatogor@gentoo.org">Sergey Kuleshov</mail>
</author>
<author title="Editor">
	<mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Editor">
        <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Tradutor">
	<mail link="vanquirius@gentoo.org">Marcelo Góes</mail>
</author>

<abstract>
Este documento irá ajudar você no processo de migração do Linux 2.4 para Linux
2.6, devfs para udev, OSS para ALSA, e LVM para LVM2.
</abstract>

<version>0.2.7</version>
<date>2005-08-24</date>

<chapter>
<title>Introdução</title>

<section>
<title>O que há de novo no Linux 2.6?</title>
<body>

<p>
Esta não é uma questão fácil de se responder. O Linux 2.6 é o resultado de mais
de 2 anos de desenvolvimento rápido e estabilização de novas funções, e é
arquiteturalmente muito diferente da versão 2.4. Algumas das mudanças principais
estão listadas abaixo:
</p>

<ul>
  <li>
    Melhorias de scheduler/interatividade: o Linux responde muito bem em
    sistemas de destkop e funciona muito melhor sob carga que o 2.4
</li>
  <li>
    Escalabilidade: o Linux agora tem uma escalabilidade muito melhor nos dois
    extremos - em pequenos dispositivos embedded e também sistemas com muitos
    processadores
  </li>
  <li>Performance: saída de aplicações comuns é muito melhor</li>
  <li>
    Suporte de hardware: agora o Linux suporta mais arquiteturas e dispositivos
    de hardware sem modificação que qualquer outro sistema operacional
</li>
</ul>

<p>
Joseph Pranevich escreveu um documento muito detalhado, <uri
link="http://www.kniggit.net/wwol26.html">O maravilhoso mundo do Linux
2.6</uri>, que você pode ter interesse em ler. Se você estiver interessado nos
detalhes mais técnicos, você pode ler o <uri
link="http://www.linux.org.uk/~davej/docs/post-halloween-2.6.txt">O
documento pós-halloween</uri> - mas saiba que ele está um pouco desatualizado
agora.
</p>

</body>
</section>
<section>
<title>O que é o udev?</title>
<body>

<p>
No passado, o Gentoo instruía seus usuários a usar o <e>devfs</e> para gerenciar
o diretório /dev, que contém uma série de interfaces de dispositivos para
permitir que aplicações de sistema comuniquem-se com o hardware (através do
kernel).
</p>

<p>
O <e>devfs</e>, embora um bom conceito, tem alguns problemas internos e
tornou-se obsoleto no Linux 2.6.
</p>

<p>
O <e>udev</e> é o novo jeito de gerenciar nódulos de dispositivos. Ele resolve
problemas dos gerenciadores de dispositivos anteriores, e também tenta resolver
outros problemas.
</p>

<p>
A parte de cima pode não significar muito para você, mas não se assuste, os
desenvolvedores do Gentoo esforçaram-se para tornar a migração do devfs muito
fácil.
</p>

</body>
</section>
<section>
<title>O que é a ALSA?</title>
<body>

<p>
Com o Linux 2.4, provavelmente você usou drivers OSS (open sound system) para
fazer sua placa de som funcionar. O OSS foi substituído por um conjunto mais
novo e melhor de drivers de som: ALSA.
</p>

<p>
ALSA, a Arquitetura de Som Avançada do Linux, é o novo conjunto de drivers de
som com uma API nova e melhorada, presente no kernel do Linux 2.6. Ela é
compatível com as aplicações OSS, desde que você selecione as opções de
configuração do kernel corretas!
</p>

<note>
Se você não tem nenhum hardware de som/áudio, você pode pular com segurança
quaisquer instruções relacionadas a ALSA neste documento.
</note>

</body>
</section>
<section>
<title>O que é o LVM?</title>
<body>

<p>
<e>Gerenciamento de volumes lógicos</e> (LVM) existe como um conjunto de
ferramentas que permitem que você gerencie seu armazenamento em disco de uma
maneira muito flexível. Entre outras coisas, ele permite um controle poderoso
sobre partições (por exemplo, redimensionar sem reiniciar), e torna operações
como mudanças de dispositivos relativamente simples. O LVM atua como uma
alternativa para o gerenciamento de disco baseado em partições.
</p>

<p>
O suporte para LVM foi historicamente implementado no Linux 2.4. O Linux 2.6
contém uma nova versão do LVM, chamada de <e>LVM2</e>. O processo de migração
requer que você instale novas versões de ferramentas de usuário (cobertas mais
tarde neste documento), mas deixará seus dados intactos!
</p>

<p>
<e>Se você não usa LVM para gerenciamento de armazenamento de dados, então a
migração de LVM2 não se aplica a você.</e> Se este for o caso, você pode
ignorar com segurança quaisquer partes do documento fazendo referência a
LVM/LVM2. Atualizar para o Linux 2.6 <e>não</e> requer que você armazene seus
dados em partições LVM - você pode manter seus dados em partições de formato
padrão como sempre manteve.
</p>

<p>
Se você não é um usuário de LVM, mas acha que o LVM2 parece útil para você, você
pode conveter seus discos para o formato mais tarde, seguindo o <uri
link="/doc/pt_br/lvm2.xml">Guia de instalação de LVM2 do Gentoo</uri>. Por hora,
vamos nos concentrar em fazer uma boa migração para o 2.6.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Preparação</title>
<section>
<title>Atualizando o seu sistema</title>
<body>

<p>
Algumas das atualizações que vieram com o Linux 2.6 também precisaram de algumas
mudanças nas aplicações de base. Antes de continuar, você deve ter certeza de
que seu sistema está relativamente atualizado, e para ter certeza total, você
deve atualizar todos os pacotes de world e system onde atualizações estiverem
disponíveis.
</p>

<p>
Em particular, certifique-se que você tem as últimas versões estáveis dos
seguintes pacotes:
</p>

<ul>
  <li><c>sys-apps/baselayout</c></li>
  <li><c>sys-apps/util-linux</c></li>
  <li>
    <c>sys-kernel/genkernel</c> (só se você quiser usar o genkernel ao invés
    de configuração manual)
</li>
</ul>

<pre caption="Atualizando todos pacotes de world">
# <i>emerge --sync</i>
# <i>emerge -ua world</i>
</pre>

</body>
</section>
<section>
<title>modutils e module-init-tools</title>
<body>

<p>
<c>sys-apps/modutils</c> é o pacote que fornece as ferramentas <c>modprobe</c>,
<c>rmmod</c> e <c>insmod</c> para Linux 2.4.
</p>

<p>
O Linux 2.6 introduziu um novo formato de módulos, e portanto precisa de novas
ferramentas para lidar com módulos. Elas estão reunidas no pacote
<c>sys-apps/module-init-tools</c>.</p>

<p>
Agora você deve remover modutils e instalar module-init-tools:
</p>

<pre caption="Mudando de modutils para module-init-tools">
# <i>emerge --unmerge sys-apps/modutils</i>
# <i>emerge module-init-tools</i>
</pre>

<note>
Não se preocupe - embora você tenha acabado de remover o modutils, o
module-init-tools fornece compatibilidade com o Linux 2.4, para que você ainda
possa carregar o Linux 2.4 e lidar com módulos do kernel.
</note>

<note>
Pela razão acima, o module-init-tools pode já estar instalado e funcionando com
seu kernel existente do Linux 2.4. Neste caso, não se preocupe sobre este passo
- seu sistema já está pronto para lidar com módulos do Linux 2.6.
</note>

</body>
</section>
<section>
<title>Instalando o udev</title>
<body>

<p>
Não há configuração envolvida aqui. Simplesmente use o <c>emerge</c> para
instalar o udev:
</p>

<pre caption="Instalando o udev">
# <i>emerge -a udev</i>
</pre>

<p>
Você agora deve ler o <uri link="/doc/pt_br/udev-guide.xml">Guia de udev do
Gentoo</uri> para ter uma idéia completa das diferenças entre udev e devfs.
</p>

</body>
</section>
<section>
<title>Verificando os nódulos de dispositivos essenciais</title>
<body>

<p>
Quando o sistema carregar, o sistema irá precisar de alguns nódulos de
dispositivos essenciais. Como o udev não é incluído no kernel, ele não é ativado
imediatamente. Para contornar o problema, você deve certificar-se que você tem
alguns nódulos de dispositivos essenciais em seu disco.
</p>

<p>
Nossos arquivos de estágio de instalação devem ter criados os dispositivos
necessários durante a instalação inicial. No entanto, alguns usuários disseram
que isso não é o caso. Nós iremos aproveitar a oportunidade para verificar se os
arquivos de dispositivos existem, e criá-los se não existirem.
</p>

<p>
Como seu gerenciador de dispositivos será montado em /dev, nós não podemos
acessá-lo diretamente. Para tanto, iremos fazer bind-mount de sua partição raiz
(root) em outro local e acessar o diretório /dev diretamente de lá.
</p>

<pre caption="Fazendo bind-mount da sua partição raiz (root) e listando dispositivos estáticos">
# <i>mkdir -p /mnt/temp</i>
# <i>mount -o bind / /mnt/temp</i>
# <i>cd /mnt/temp/dev</i>
# <i>ls -l console null</i>
</pre>

<p>
Se o comando <e>ls</e> acima relatou que nem <c>console</c> ou <c>null</c>
existem, você deve criá-los como visto abaixo.
</p>

<pre caption="Criando os nódulos de console e null que faltam">
# <i>mknod -m 660 console c 5 1</i>
# <i>mknod -m 660 null c 1 3</i>
</pre>

<p>
Você agora deve desmontar sua partição raiz (root) que foi bind-mounted, mesmo
se você não teve que criar os dispositivos:
</p>

<pre caption="Desmontando a raiz (root) bind-mounted">
# <i>cd</i>
# <i>umount /mnt/temp</i>
# <i>rmdir /mnt/temp</i>
</pre>

</body>
</section>
<section>
<title>Instalando utilitários da ALSA</title>
<body>

<p>
A ALSA precisa de que você tenha alguns pacotes instalados, para que as
aplicações possam usar a API da ALSA. Os pacotes também irão permitir que você
controle os níveis de mixador e volume. Instale os utilitários necessários como
abaixo:
</p>

<pre caption="Instalando utilitários e bibliotecas da ALSA">
# <i>emerge -a alsa-lib alsa-utils alsa-tools alsa-headers alsa-oss</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Instalando as fontes do Linux 2.6</title>

<section>
<title>Escolhendo e instalando um kernel</title>
<body>

<p>
A primeira coisa que você precisa fazer é instalar as fontes de um kernel 2.6 de
sua escolha. Os dois kernéis 2.6 suportados pelo Gentoo são atualmente
<e>gentoo-sources</e> (para desktops) e <e>hardened-sources</e> (para
servidores). Existem outros disponíveis, veja o <uri
link="/doc/pt_br/gentoo-kernel.xml">Guia de kernel do Gentoo</uri> para mais
escolhas.
</p>

<p>
Neste guia, iremos usar o <c>gentoo-sources</c> como um exemplo. Instale
as fontes de kernel escolhidas usando o utilitário <c>emerge</c>:
</p>

<pre caption="Instalando o gentoo-sources">
# <i>emerge -a gentoo-sources</i>
These are the packages that I would merge, in order:
Calculating dependencies ...done!
[ebuild  NS   ] sys-kernel/gentoo-sources-2.6.10-r4

Do you want me to merge these packages? [Yes/No] <i>y</i>
</pre>

<p>
Quando rodar o comando <c>emerge</c> acima, se você vir que ele quer instalar
uma versão 2.4 dos gentoo-sources (como <c>gentoo-sources-2.4.26</c>),
isto significa que o profile (perfil) que você está usando não é desenhado para
usuários de Linux 2.6. Por favor siga o <uri
link="/doc/pt_br/gentoo-upgrading.xml">Documento de atualização do Gentoo</uri>
para trocar para um profile baseado em 2.6, e tente instalar as fontes de kernel
2.6 novamente.
</p>

</body>
</section>
<section>
<title>Atualizando o link simbólico /usr/src/linux</title>
<body>

<p>
Vários componentes dos utilitários do Gentoo dependem de que o /usr/src/linux
seja um link simbólico para as fontes do kernel que você está rodando (ou contra
as quais deseja compilar).
</p>

<p>
Nós iremos agora atualizar nosso link /usr/src/linux para que ele aponte para as
fontes de kernel que nós acabamos de instalar. Continuando nosso exemplo:
</p>

<pre caption="Atualizando o softlink do /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ln -sfn linux-2.6.10-gentoo-r4 linux</i>
</pre>

</body>
</section>
</chapter>

<chapter id="pitfalls">
<title>Armadilhas conhecidas da migração para o Linux 2.6</title>
<section>
<body>

<p>
Antes de prendermo-nos na configuração do kernel, irei tentar detalhar os erros
mais comuns que as pessoas fazem na hora de migrar para o Linux 2.6, já que
alguns desses pontos irão influenciar como você configura o novo kernel.
</p>

<note>
Nem todos dos pontos são relevantes aqui, mas irei detalhar todos em um lugar, e
você pode tomar como referência depois.
</note>

</body>
</section>
<section>
<title>Não use "make oldconfig" com um .config de 2.4</title>
<body>

<note>
Se você não entende o que isso significa, não se preocupe, você não fará este
erro se você seguir o resto do guia corretamente.
</note>

<p>
Várias perguntas serão feitas, já que houve uma grande quantidade de mudanças.
Muitas pessoas que tentam fazer um <c>make oldconfig</c> de um config de 2.4
acabam criando um kernel que não funciona (como sem saída na tela, sem entrada
no teclado, etc...). Por favor salve-se do problema, e use o método de
configuração tradicional <c>menuconfig</c> só desta vez.
</p>

</body>
</section>
<section>
<title>Não use ide-scsi para gravar CDs/DVDs</title>
<body>

<p>
No Linux 2.4, o único jeito de conseguir bons resultados na gravação de CDs/DVDs
era ativar a (feiosa) emulação de <c>ide-scsi</c>. Para nossa sorte, o layer de
IDE no Linux 2.6 foi estendido com suporte para gravação de CDs/DVDs muito
melhor.
</p>

<p>
Você não precisa ativar nenhuma opção adicional para ativar o suporte a gravação
de CDs. Só certifique-se de <e>não</e> habilitar <c>ide-scsi</c> como você
costumava.
</p>

</body>
</section>
<section>
<title>Alto-falante do PC Speaker agora é uma opção configurável</title>
<body>

<p>
Você não irá receber seus bipes normais de console (ou qualquer resposta do
alto-falante do PC) se você não ativar especificamente a opção PC speaker
(<c>CONFIG_INPUT_PCSPKR</c>):
</p>

<pre caption="Local da opção PC speaker">
Device Drivers  ---&gt;
 Input device support  ---&gt;
  [*] Misc
   &lt;*&gt;   PC Speaker support
</pre>

<note>
Por "Speaker do PC", estou querendo dizer o alto-falante análogo que bipa quando
o seu sistema está ligando, não estou dizendo o som normal de hardware usado
para tocar músicas, etc...
</note>

</body>
</section>
<section>
<title>Novo bloco de armazenamento USB às vezes é problemático</title>
<body>

<p>
Muito recentemente, um novo driver de dispositivos de armazenamento USB foi
adicionado ao kernel. Quando o documento foi escrito, o driver ("ub") ainda
estava em seu estado inicial e alguns usuários acham que ele não é confiável. Se
você tiver problemas para acessar seu disco rígido USB, flash disk USB, leitor de
cartões USB, ou câmera digital USB, então você pode experimentar o driver antigo
no estilo SCSI:
</p>

<pre caption="Desligando o ub">
Device Drivers  ---&gt;
 Block devices  ---&gt;
  &lt; &gt; Low Performance USB Block driver
</pre>

<note>
O antigo driver no estilo SCSI  (USB Mass Storage support) está ativado por
padrão. Ele pode ser encontrado em "Device Drivers --&gt; USB support", mas
geralmente não irá funcionar quando o ub também estiver presente.
</note>

</body>
</section>
<section>
<title>usbdevfs renomeado para usbfs</title>
<body>

<p>
Se você editou seu arquivo <path>/etc/fstab</path> para personalizar o jeito que
o sistema de arquivos do dispositivo USB é montado, você pode ter que modificar
o tipo de sistema de arquivos de <e>usbdevfs</e> para <e>usbfs</e>.
</p>

<note>
Kernéis 2.4 recentes permitem que você use tanto "usbfs" quanto "usbdevfs",
então você não terá problemas de compatibilidade fazendo isso.
</note>

</body>
</section>
<section>
<title>Não faça renice do X</title>
<body>

<p>
Se você é um usuário de desktop 2.4, você pode ter hackeado seu sistema para
rodar o X com uma prioridade maior, e em alguns casos isso fornece uma
performance de desktop melhor.
</p>

<p>
Houve muitas mudanças no scheduler do 2.6 que mudaram este comportamento. Se
você continuar a rodar o X com uma prioridade maior, ele fará exatamente o
contrário que ele deve fazer (rodar o <e>servidor gráfico</e> com uma prioridade
muito alta) e você perceberá as conseqüências como o som gaguejando e tempos de
carregamento demorados de aplicações porque sua CPU está passando muito tempo
servindo o X e somente o X.
</p>

<p>
No Linux 2.6, você não precisa mais fazer renice de aplicações de desktop para
obter boa interatividade. Por favor remova seus hacks de "niceness"!
</p>

</body>
</section>
<section>
<title>Arquivo de configuração de X11 agora deve usar /dev/input/mice para
mouses PS/2 e USB</title>
<body>

<p>
Uma das mudanças que uma configuração padrão de udev introduz é uma organização
diferente dos nódulos de dispositivos de mouse. Anteriormente, você tinha nódulos
como <path>/dev/psaux</path> e <path>/dev/mouse</path>. Agora você terá
nódulos como <path>/dev/input/mouse0</path>, <path>/dev/input/mouse1</path>,
e um nódulo coletivo <path>/dev/input/mice</path> que combina movimentos
de todos mouses.
</p>

<p>
Já que as antigas configurações de X tipicamente fazem referência a
<path>/dev/mouse</path> ou <path>/dev/psaux</path> você pode ver um erro
parecido com o mostrado abaixo quando você tentar iniciar o X11:
</p>

<pre caption="Erro comum na hora de iniciar o X em um sistema udev pela primeira vez">
(EE) xf86OpenSerial: Cannot open device /dev/mouse
	No such file or directory.
(EE) Mouse0: cannot open input device
(EE) PreInit failed for input device "Mouse0"
No core pointer
</pre>

<p>
Para corrigir isso, abra sua configuração de X11 em um editor de texto, e
atualize a seção de mouse <e>InputDevice</e> para usar o dispositivo
<path>/dev/input/mice</path>. Um exemplo é mostrado abaixo:
</p>

<pre caption="Abrindo seu arquivo de configuração X11">
# <i>nano -w /etc/X11/xorg.conf</i>
</pre>

<note>
Se você ainda estiver usando XFree86, seu arquivo de configuração será
<path>/etc/X11/XF86Config</path>
</note>

<pre caption="Amostra de seção de mouse InputDevice">
Section "InputDevice"
	Identifier  "Mouse0"
	Driver      "mouse"
	Option      "Protocol" "auto"
	Option      "Device" "/dev/input/mice"
EndSection
</pre>

<note>
Se você estiver usando um mouse serial, o novo caminho de dispositivo será
<path>/dev/tts/0</path> ao invés de <path>/dev/ttyS0</path>.
</note>

</body>
</section>
<section>
<title>Novos drivers de Serial-ATA (SATA) dão nomes diferentes aos dispositivos</title>
<body>

<p>
Se você usou os drivers originais de Serial ATA no Linux 2.4, você provavelmente
observou que seus dispositivos de SATA tinham nomes como <c>/dev/hde</c>.
</p>

<p>
O Linux 2.6 introduziu novos drivers de SATA (libata) que são baseados no
subsistema de SCSI. Como os drivers são baseados em SCSI, seus discos de SATA
irão agora aparecer como dispositivos de SCSI. Seu primeiro disco de SATA será
chamado de <c>/dev/sda</c>. Você precisará atualizar seu arquivo
<c>/etc/fstab</c> para refletir isso, e você precisará ter isso em mente quando
for escolher o parâmetro de inicialização de kernel root/real_root mais adiante.
</p>

<note>
O libata foi portado para as versões recentes do Linux 2.4, então talvez você
esteja familiar com os novos nomes de dispositivos.
</note>

</body>
</section>
<section>
<title>O bootsplash não funciona mais</title>
<body>

<p>
Se você usava um kernel <c>gentoo-sources-2.4</c>, você pode ter usado a
funcionalidade de <e>bootsplash</e> para ter um console com um framebuffer
colorido.
</p>

<p>
O desenvolvedor do bootsplash parece ter perdido o interesse em seu projeto,
dado alguns problemas de design. No entanto, o desenvolvedor do Gentoo
<e>Michal Januszewski</e> está desenvolvendo um sucessor, <c>gensplash</c>, que
é incluído no kernel gentoo-sources-2.6. Você pode seguir as instruções do
Michal em <uri
link="http://dev.gentoo.org/~spock/projects/gensplash/archive/gensplash-in-5-easy-steps.txt">
Gensplash em 5 passos fáceis</uri> no documento para familiarizar-se com a
operação do gensplash.
</p>

</body>
</section>
<section>
<title>Drivers de I2C agora incluídos no kernel</title>
<body>

<p>
Se você usa o <c>lm-sensors</c> para monitorar temperaturas e níveis de
energia, você antes precisava instalar o pacote <c>i2c</c> para ter o suporte
de hardware.
</p>

<p>
Os drivers de hardware de I2C agora são incluídos no kernel do Linux 2.6, sem a
necessidade de um pacote i2c externo. Lembre-se de compilar suporte para seus
dispositivos I2C específicos na configuração do kernel. Você então poderá usar o
<c>lm-sensors</c> como normalmente.
</p>

</body>
</section>


</chapter>

<chapter id="conf">
<title>Configurando, construindo e instalando o kernel</title>
<section>
<body>

<p>
Com o Linux 2.4, você tem duas opções para gerenciar sua nova construção de
kernel.
</p>

<ol>
  <li>
    O método padrão é configurar o kernel manualmente. Isto pode parecer ousado,
    mas é o melhor método contanto que você conheça seu sistema. Se você
    quiser configurar seu kernel manualmente, por favor continue com o <uri
    link="#manual">próximo capítulo</uri>.
  </li>
  <li>
    A opção alternativa é usar o utilitário <c>genkernel</c> para configurar,
    compilar e instalar um kernel automaticamente para você. Se você deseja
    usar o <c>genkernel</c>, pule o próximo capítulo e continue com
    <uri link="#genkernel">usando o genkernel</uri>.
  </li>
</ol>

</body>
</section>
</chapter>

<chapter id="manual">
<title>Padrão: configuração manual</title>
<section>
<title>Configurando o kernel</title>
<body>

<p>
Agora vamos continuar com a configuração do kernel. Abra o menuconfig da maneira
normal:
</p>

<pre caption="Rodando o menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Você provavelmente deve estar familiar com o uso do menuconfig de configurar
kernéis 2.4. Felizmente, a front-end pouco mudou, mas você irá observar uma
organização muito melhor das opções de kernel, mais <e>muitas</e> novas opções
que não existiam no 2.4.
</p>

<p>
Certifique-se de ativar as seguintes importantes opções de kernel:
</p>

<pre caption="Opções de kernel necessárias">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)
    
<comment>(o seguinte é necessário para o udev):</comment>
General setup  ---&gt;
 [*] Support for hot-pluggable devices

<comment>(o seguinte é necessário para a ALSA):</comment>
Device Drivers  ---&gt;
 Sound  ---&gt;
  &lt;*&gt; Sound card support
  Advanced Linux Sound Architecture  ---&gt;
   &lt;M&gt; Advanced Linux Sound Architecture
   &lt;M&gt; Sequencer support
   &lt;M&gt; OSS Mixer API
   [*] OSS Sequencer API
<comment>(e não se esqueça de selecionar sua placa de som dos submenus!)</comment>

<comment>(os seguintes são necessários se voc6e usar LVM para gerenciamento de discos):</comment>
Device Drivers  ---&gt;
 Multi-device support (RAID and LVM)  ---&gt;
  [*] Multiple devices driver support (RAID and LVM)
   &lt;*&gt;   Device mapper support
</pre>

<warn>
Antigamente você pode ter incluído suporte para o <path>/dev</path> file system
(agora marcado OBSOLETO). Não ative suporte de devfs. Nós instalamos o udev,
que usaremos no lugar do devfs deste ponto em diante.
</warn>

<p>
Também, lembre-se de ativar suporte para os sistemas de arquivo que você usar, e
o hardware presente em seu sistema. Certifique-se de ativar suporte para seu
controlador IDE em sua placa-mãe se você deseja ter os benefícios de acesso
rápido de disco DMA. Veja a seção <uri
link="/doc/pt_br/handbook/handbook-x86.xml?part=1&amp;chap=7">Configurando o
kernel</uri> do <uri link="/doc/pt_br/handbook/index.xml">Manual do Gentoo</uri>
para assistência adicional aqui.
</p>

</body>
</section>
<section>
<title>Construindo o kernel</title>
<body>

<p>
Agora que nós configuramos o kernel, nós podemos começar o processo de
compilação:
</p>

<pre caption="Compilando a fonte do kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<note>
Você talvez lembre-se de ter de rodar <c>make dep</c> com fontes de Linux 2.4.
Isto não é mais necessário.
</note>

<p>
Espere a compilação do kernel terminar (e observe a saída da compilação muito
mais legível).
</p>

</body>
</section>
<section>
<title>Instalando o kernel</title>
<body>

<p>
O próximo passo é montar sua partição <path>/boot</path> e copiar a imagem do
kernel. Você deve então atualizar sua configuração de gerenciador de
inicialização manualmente.
</p>

<pre caption="Instalando o kernel">
# <i>mount /boot</i>
# <i>cp arch/i386/boot/bzImage /boot/bzImage-2.6.10-gentoo-r4</i>
# <i>cp System.map /boot/System.map-2.6.10-gentoo-r4</i>
</pre>

<p>
Note que as instruções acima são somente exemplos, você deve seguir seu
procedimento normal de atualização de kernéis seguindo as instruções no <uri
link="/doc/pt_br/handbook/index.xml">Manual do Gentoo</uri> (veja o capítulo <uri
link="/doc/pt_br/handbook/handbook-x86.xml?part=1&amp;chap=7">Configurando
o kernel</uri>).
</p>

<p>
Quando atualizar sua configuração de gerenciador de inicialização, não remova a
entrada antiga que aponta para seu kernel 2.4. Desta forma, você poderá
facilmente trocar entre os dois se algo não estiver funcionando.
</p>

<p>
Agora continue com a seção <uri link="#modules">Configuração de módulos</uri>.
</p>

</body>
</section>
</chapter>

<chapter id="genkernel">
<title>Alternativa: usando o genkernel</title>
<section>
<body>

<p>
Se você prefere usar o genkernel ao invés de configurar seu kernel manualmente,
você ficará feliz de ouvir que usar o genkernel para produzir kernéis 2.6 é
muito semelhante ao processo que você fez para produzir seu kernel 2.4 antigo.
</p>

<p>
Você pode rodar o genkernel como mostrado abaixo:
</p>

<pre caption="Rodando o genkernel com alguns argumentos comuns">
# <i>genkernel --udev --menuconfig --bootloader=grub all</i>
</pre>

<p>
No exemplo acima, aproveitamos as funções do genkernel de abrir o menuconfig
para permitir que você personalize a configuração do kernel (se você desejar), e
atualizar a configuração do gerenciador de inicialização do grub depois da
compilação.
</p>

<p>
Você deve escolher os argumentos do genkernel que atendem às suas necessidades,
mas não se esqueça de incluir o argumento <c>--udev</c>! Veja o <uri
link="/doc/pt_br/genkernel.xml">Guia de genkernel do Gentoo Linux</uri> e o
capítulo <uri
link="/doc/pt_br/handbook/handbook-x86.xml?part=1&amp;chap=7">Configurando o
kernel</uri> do <uri link="/doc/pt_br/handbook/index.xml">Manual do Gentoo</uri>
para mais informações.
</p>

<p>
Se você escolher atualizar a configuração do gerenciador de inicialização você
mesmo, você deve lembrar-se de incluir o parâmetro de kernel <c>udev</c>. Uma
amostra de seção de configuração do <e>grub</e> é mostrada abaixo, mas lembre-se
de ajustar o parâmetro <e>real_root</e> de acordo com seu sistema.
</p>

<pre caption="Amostra de configuração do GRUB para genkernel + udev">
title=Gentoo Linux (kernel 2.6)
root (hd0,0)
kernel /kernel-2.6.10-gentoo-r4 <i>udev</i> root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3
initrd /initrd-2.6.10-gentoo-r4
</pre>

</body>
</section>
</chapter>

<chapter id="modules">
<title>Configuração de módulos</title>

<section>
<title>Instalando módulos externos</title>
<body>

<p>
Muitos usuário irão ainda depender de módulos de kernel que são construídos fora
da árvore do kernel. Exemplos comuns são os drivers gráficos binários da ATI e
Nvidia. Você agora precisa instalar os módulos, que irão compilar contra as
fontes de 2.6 encontradas em <path>/usr/src/linux</path>. Este normalmente é o
caso de <c>emerge nomedopacote</c> para todos módulos externos que você costuma
usar com o 2.4.
</p>

<p>
Refira-se de novo ao capítulo <uri
link="/doc/pt_br/handbook/handbook-x86.xml?part=1&amp;chap=7">Configurando o
kernel</uri> do <uri link="/doc/pt_br/handbook/index.xml">Manual do
Gentoo</uri> para mais informações.
</p>

</body>
</section>
<section>
<title>Carregando módulos automaticamente</title>
<body>

<p>
Você pode ter decidido compilar alguns componentes do kernel como módulos (ao
invés de compilá-los diretamente no kernel) e gostaria de tê-los carregando
automaticamente na inicialização como você fazia com o 2.4. Também, se você
instalou quaisquer módulos externos da árvore do portage (como descrito acima),
você provavelmente quer que eles também carreguem automaticamente.
</p>

<p>
Você pode fazer isso de maneira parecida com o que você fez com o 2.4.
Simplesmente abra o arquivo <path>/etc/modules.autoload.d/kernel-2.6</path> em
um editor de texto e liste os nomes dos módulos que você quer carregar
automaticamente.
</p>

<pre caption="Abrindo a lista de módulos carregados automaticamente no nano">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="Lista de amostra de módulos para carregar automaticamente os módulos 3c59x e nvidia">
# /etc/modules.autoload.d/kernel-2.6:  módulos de kernel para carregar quando o sistema iniciar.
#
# Note que este arquivo é para kernéis 2.6.
#
# Adicione os nomes dos módulos que você deseja carregar quando o
# sistema iniciar neste arquivo, um por linha. Comentários começam com # e
# são ignorados. Leia man modules.autoload para mais detalhes.

3c59x
nvidia
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Migração de LVM para LVM2</title>
<section>
<title>Atualizando as ferramentas para LVM2</title>
<body>

<note>
Se você não usa LVM para gerenciar seu armazenamento de disco, você pode pular
este capítulo com segurança e ir para o próximo.
</note>

<p>
Felizmente, atualizar das ferramentas de usuário de LVM1 para a versão LVM2 é
muito simples:
</p>

<pre caption="Atualizando ferramentas de usuário de LVM1 para LVM2">
# <i>emerge --unmerge lvm-user</i>
# <i>emerge lvm2</i>
</pre>

<note>
As ferramentas de LVM2 são totalmente compatíveis com LVM1. Seus dados de disco
não serão tocados. Você não irá quebrar compatibilidade com versões anteriores
fazendo isso, você continuará podendo carregar o 2.4 como normalmente.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Iniciando o Linux 2.6</title>
<section>
<body>

<p>
Agora está na hora de iniciar no Linux 2.6. Feche todas aplicações e reinicie:
</p>

<pre caption="Reiniciando">
# <i>umount /boot</i>
# <i>reboot</i>
</pre>

<p>
Quando você reiniciar, se você seguiu este documento corretamente até aqui, você
terá a opção de escolher carregar o Linux 2.4 ou Linux 2.6 de seu gerenciador de
inicialização. Escolha Linux 2.6.
</p>

<p>
Uma vez que o sistema tiver iniciado, verifique se as coisas estão funcionando.
Se você fez um erro na configuração do kernel, não se preocupe, você pode voltar
à parte <uri link="#conf">Configurando, construindo e instalando o kernel</uri>,
fazer suas mudanças, recompilar e instalar a nova imagem de kernel, reiniciar e
tentar novamente!
</p>

</body>
</section>
<section>
<title>Configurando e ligando a ALSA</title>
<body>

<p>
Nós iremos agora completar a configuração da ALSA e ligar os canais de áudio. Os
pacotes da ALSA fornecem um utilitário para tornar o processo relativamente
simples:
</p>

<pre caption="Rodando o utilitário de configuração automática da ALSA">
# <i>alsaconf</i>
</pre>

<p>
O processo é simples: permitir que o arquivo <e>/etc/modules.d/alsa</e> seja
atualizado automaticamente, e que permitir que a ALSA seja recarregada. O
alsaconf irá então terminar. No entanto, você precisará rodá-lo várias vezes se
você tiver dispositivos de som múltiplos instalados em seu sistema.
</p>

<p>
Você deve agora adicionar <c>alsasound</c> ao runlevel boot, para que os volumes
sejam salvos na hora de desligar e restaurados na inicialização:
</p>

<pre caption="Adicionando alsasound ao runlevel boot">
# <i>rc-update add alsasound boot</i>
</pre>

<note>
O utilitário <c>alsaconf</c> escolhe volumes de som iniciais para seus 
dispositivos. Se eles não forem adequados, você pode modificá-los a qualquer
hora com o utilitário <c>alsamixer</c>.
</note>

</body>
</section>
<section>
<title>Qualquer problema imediato?</title>
<body>

<p>
Neste estágio você pode voltar à seção <uri link="#pitfalls">Armadilhas
conhecidas da migração para o Linux 2.6</uri> que pode ser útil com problemas
que você encontrar imediatamente.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Arquivos de cabeçalho e NPTL</title>
<section>
<body>

<p>
Agora você deve estar rodando Linux 2.6 e espera-se que todos os problemas foram
resolvidos. Você deve agora atualizar seus arquivos de cabeçalho do Linux e
reinstalar o glibc para que aplicações de usuário possam tirar proveito das
novas funções do Linux 2.6.
</p>

<pre caption="Atualizando os linux-headers">
# <i>emerge -u linux-headers</i>
</pre>

<p>
Depois de atualizar o pacote de cabeçalhos, você geralmente deve reinstalar o
glibc. Existe uma nova função aqui em que você deve estar interessado - NPTL. O
NTPL é um novo modelo de threading presente no Linux 2.6, que tem funções de
criação e destruição de threads muito mais rápidas. Isso não fará muita
diferença na maior parte dos sistemas, mas você pode querer ativar durante o
processo de migração! Para ativar o NPTL, edite o <path>/etc/make.conf</path>,
adicionando a opção <e>nptl</e> a sua variável de USE.
</p>

<warn>
Se você escolher ativar a variável "nptlonly", esteja ciente de que você não
poderá mais carregar um kernel 2.4.
</warn>

<p>
Agora reinstale o glibc (você deve fazer isso mesmo se você escolheu não ativar
o NPTL).
</p>

<pre caption="Reinstalando o glibc contra os novos cabeçalhos de kernel">
# <i>emerge -a glibc</i>
</pre>

<p>
Se você ativou o NPTL, os binários existentes não irão usá-los até eles serem
recompilados. No entanto, qualquer binário compilado daqui para frente
<e>irá</e> usar NTPL. Você pode querer recompilar todos binários agora, assim:
</p>

<pre caption="Recompilando todos pacotes no sistema">
# <i>emerge -e world</i>
</pre>

<p>
Alternativamente, você pode deixar seu sistema converter-se "naturalmente" para
NTPL conforme você for atualizando novas versões de pacotes quando elas foram
lançadas.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Notas finais</title>
<section>
<title>Problemas?</title>
<body>

<p>
Com a incrível quantidade trabalho que foi dada ao Linux 2.6, às vezes é
inevitável que coisas que antes funcionavam bem, não funcionem mais como
esperado.
</p>

<p>
Se você tiver problemas com seu kernel 2.6, e você pode confirmar que o
problema não existe com o Linux 2.4, por favor abra um bug conosco em nosso
<uri link="http://bugs.gentoo.org">Bugzilla</uri>. Nós iremos investigar o
problema, e se nós descobrimos que o problema é com a versão do kernel normal,
nós podemos pedir que você relate-o no bugzilla central do kernel.
</p>

</body>
</section>
<section>
<title>Conclusão</title>
<body>

<p>
Espera-se que você tenha tido uma migração fácil e que você está colhendo os
benefícios que o Linux 2.6 traz sobre o 2.4.
</p>

<p>
Eu gostaria de dizer obrigado aos vários usuários que realmente 'testaram' este
documento quando estava em seus estágios iniciais e deram feedback sobre como o
processo de migração foi. Sinto não poder ter respondido a todos emails (foram
muitos!), mas eu li cada um, e redefini este documento onde apropriado.
Aproveitem seus sistemas 2.6 :)
</p>

</body>
</section>
<section>
<title>Removendo o Linux 2.4 de seu sistema</title>
<body>

<p>
Depois que você estiver rodando o 2.6 por um tempo, você pode decidir que você
não precisa mais poder usar o Linux 2.4 Os passos que você pode tomar para
limpar seu sistema são detalhados abaixo. <e>Só siga o procedimento na seção se
você tiver certeza que você não quer/precisa usar o 2.4 novamente!</e>
</p>

<p>
O código-fonte do kernel 2.4 pode ser removido usando o utilitário emerge como
sempre. Por exemplo, presumindo que você tem as versões 2.4 do vanilla-sources e
do gentoo-sources instaladas, você pode usar o seguinte comando para removê-las
mantendo as versões 2.6 intactas:
</p>

<pre caption="Exemplo: removendo fontes de Linux 2.4">
# <i>emerge --unmerge =vanilla-sources-2.4.* =gentoo-sources-2.4.*</i>
</pre>

<p>
O Portage não irá limpar as instalações de fonte 2.4 completamente, porque
alguns arquivos temporários são criados durante a compilação. É seguro remover
os restos com o seguinte comando:
</p>

<pre caption="Removendo arquivos temporários restantes">
# <i>rm -rf /usr/src/linux-2.4.*</i>
</pre>

<p>
Você adicionalmente pode remover módulos e arquivos de informação relacionados a
sua antiga instalação de kernel 2.4, já que não são mais necessários.
</p>

<pre caption="Removendo módulos de 2.4 instalados anteriormente">
# <i>rm -rf /lib/modules/2.4.*</i>
</pre>

<p>
Os binários de kernel 2.4 usados para iniciar podem também ser removidos
com segurança. Você deve montar sua partição de <c>/boot</c>, e remover as
imagens. Você também deve atualizar sua configuração de gerenciador de
inicialização para que não mais faça referência às imagens de kernel apagadas.
</p>

<p>
Alguns usuários de Linux 2.4 terão instalado o pacote <c>alsa-driver</c> para
tirar proveito das novas capacidades de áudio inclusas no Linux 2.6. Se você é
um desses usuários, e você seguiu o conselho dado mais cedo no documento sobre
construir a ALSA com as fontes 2.6 do kernel (ao contrário de usar o pacote
<c>alsa-driver</c>), então você pode removê-lo com segurança para prevenir
conflitos no futuro.
</p>

<p>
Adicionalmente, usuários de <c>lm-sensors</c> terão usado anteriormente o pacote
<c>i2c</c> para fornecer os drivers de hardware. Como já mencionamos, os drivers
de I2C são agora incluídos no kernel, então o pacote também pode ser removido
para prevenir conflitos no futuro.
</p>

<p>
O daemon de gerenciamento devfs, <c>devfsd</c>, também pode ser removido com
segurança agora que estamos usando <c>udev</c> para gerenciamento de
dispositivos.
</p>

<pre caption="Removendo o alsa-driver, i2c, e devfsd">
# <i>emerge --unmerge alsa-driver i2c devfsd</i>
</pre>

<p>
Se você é um usuário de LVM2, você pode querer converter seus dados no formato
de dados do LVM2 para poder tirar vantagem dos benefícios do LVM2. No entanto, a
operação irá impedir que você acesse seus dados LVM de um kernel 2.4. Se você
quiser continuar com a conversão (isso é totalmente opcional!), você deve
examinar a página de man <c>vgconvert</c> para ver instruções de como fazê-lo.
Um exemplo é mostrado abaixo, onde <c>main</c> é o nome do grupo de volume.
</p>

<pre caption="Convertendo um volume de formato LVM1 para LVM2">
# <i>vgconvert -M2 main</i>
</pre>

</body>
</section>
</chapter>
</guide>
