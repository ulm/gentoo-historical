<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/prelink-howto.xml,v 1.5 2005/03/24 17:24:44 vanquirius Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/pt_br/prelink-howto.xml">
<title>Guia de Prelink do Gentoo Linux</title>

<author title="Autor">
  <mail link="cretin@gentoo.org">Stefan Jones</mail>
</author>
<author title="Editor"><!-- zhen@gentoo.org -->
  John P. Davis
</author>
<author title="Editor">
  <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Editor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="erwin@gentoo.org">Erwin</mail>
</author>
<author title="Tradutor">
  <mail link="vanquirius@gentoo.org">Marcelo Góes</mail>
</author>

<abstract>
Este guia ensina como usar o suporte de prelink no portage
2.0.46 e mais recente.
</abstract>

<license/>

<version>1.10</version>
<date>2005-03-18</date>


<chapter>
<title>Introdução</title>
<section>
<title>O que é o Prelink e como ele pode ajudar-me?</title>
<body>

<p>
A maior parte das aplicações usa bibliotecas compartilhadas. As bibliotecas
compartilhadas precisam ser carregadas na memória na hora de serem rodadas e as várias referências
simbólicas precisam ser resolvidas. Para a maior parte dos programas pequenos a
referência simbólica é muito rápida, mas para programas escritos em C++ que têm muitas
dependências de bibliotecas, a ligação simbólica pode levar um bom tempo.
</p>

<p>
Na maior parte dos sistemas, as bibliotecas não são alteradas com freqüência e quando um programa é
rodado, as operações levadas para ligar o programa são as mesmas toda vez.
O Prelink tira proveito disso carregando a ligação e gravando-a
dentro do executável, com efeito de pré-ligá-lo. Para o ligador, você
precisa do ld-linux.so no glibc; para reconhecer o pré-ligamento você precisa de
&gt;=glibc-2.3.1-r2.
</p>

<p>
O pré-ligamento pode diminuir o tempo de início das aplicações. Por exemplo,
o tempo de carregamento de um programa típico do KDE pode ser diminuído em até 50%. A única
manutenção necessária é rodar o prelink cada vez que uma biblioteca for atualizada
para um executável pré-ligado.
</p>

</body>
</section>
<section>
<title>Resumo</title>
<body>

<ul>
  <li>
    A pré-ligação é feita através de um programa chamado, surpreendentemente, <path>prelink</path>.
    Ele muda o binário para fazê-lo iniciar mais rápido.
  </li>
  <li>
    Se as bibliotecas de que uma aplicação dependem mudarem depois de você pré-ligá-las,
    você precisa re-pré-ligar a aplicação, caso contrário você perderá a vantagem
    da velocidade. Isto quer dizer, cada vez que você atualizar um pacote via portage que
    atualiza bibliotecas, elas precisam ser re-pré-ligadas.
  </li>
  <li>
    A mudança no binário é totalmente reversível. O  <path>prelink</path> tem uma 
    função desfazer.
  </li>
  <li>
    Novas versões do Portage podem lidar, via <path>prelink</path>, com as mudanças de
    MD5sums e mtimes dos binários.
  </li>
  <li>
    Você precisa de glibc-2.3.1-r2 ou mais recente instalado com binários compilados
    com binutils-2.13.90.0.xx ou mais recente.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Configurando o Prelink</title>
<section>
<title>Instalando os programas</title>
<body>

<note>
Eu presumo que você tem um sistema Gentoo-1.4 e que foi construído com gcc-3.2 ou
mais recente e binutils-2.13.90.0.xx ou mais recente. Deve ser deste jeito para seus
binários poderem ser pré-ligados.
</note>

<p>
Primeiro atualize sua árvore do portage, já que muitas das aplicações necessárias são novas
e consertos são constamente adicionados.
</p>

<pre caption = "Atualizando sua árvore do Portage">
# <i>emerge --sync</i>
</pre>

<p>
Certifique-se de que você tem portage-2.0.46 ou mais recente instalado. Isto é necessário para
que o portage possa reconhecer os binários pré-ligados e desinstalá-los
corretamente quando pedido. Isto ocorre porque a pré-ligação muda a MD5sum do
binário.
</p>

<pre caption = "Verificando versão do Portage">
# <i>emerge ">=portage-2.0.46"</i>
</pre>

<p>
Agora você pode instalar a ferramenta de pré-ligação. O processo do emerge verifica automaticamente
se seu sistema pode fazer pré-ligação seguramente.
</p>

<pre caption = "Instalando o Prelink">
# <i>emerge prelink</i>
</pre>

<p>
Várias pessoas obtêm errors na instalação do prelink porque testes
falham. Os testes foram colocados por motivos de segurança, o comportamento do
prelink não é definido se você desativá-los. Os errors de instalação normalmente só dependem
dos pacotes centrais; binutils, gcc, e glibc. Tente re-instalar os pacotes
nessa ordem.
</p>

<note>
Dica: Se você tiver um erro tente compilar e testar o <c>prelink</c> você mesmo
(<c>./configure</c> ; <c>make</c> ; <c>make check</c> ). Em um erro você pode
ver os arquivos de *.log no diretório de testes. Eles podem dar algumas
dicas úteis.
</note>

<p>
Se você tiver um conjunto de passos que reproduz o erro de instalação em outro sistema
por favor mande um e-mail deles para <mail link="cretin@gentoo.org">Stefan Jones</mail>.
</p>

</body>
</section>
<section>
<title>Configuração</title>
<body>

<p>
Rodar <c>env-update</c> irá gerar o arquivo <path>/etc/prelink.conf</path>
que diz ao <path>prelink</path> que arquivos pré-ligar.
</p>

<pre caption="Rodando env-update">
# <i>env-update</i>
</pre>

<p>
Infelizmente você não pode pré-ligar arquivos que foram compilados com versões antigas
do binutils. Muitas das aplicações vem de pacotes pré-compilados, só de
binários que são instalados em <path>/opt</path>.  Fazer o
seguinte arquivo irá avisar o prelink para não tentar pré-ligá-los.
</p>

<pre caption="/etc/env.d/60prelink">
PRELINK_PATH_MASK="/opt"
</pre>

<note>
Você pode adicionar mais ou menos diretórios à lista separada por dois pontos.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Pré-ligando</title>
<section>
<title>Uso do Prelink</title>
<body>

<p>
Eu uso o seguinte comando para pré-ligar todos binários nos diretórios
dados por <path>/etc/prelink.conf</path>.
</p>

<pre caption = "Pré-ligando arquivos listados">
# <i>prelink -amR</i>
</pre>

<warn>
Foi observado que se você estiver com pouco espaço em disco e você pré-ligar seu
sistema inteiro é possível que seus binários sejam trancados.
O resultado é um sistema defeitu0so. Use o comando <c>file</c> ou <c>readelf</c>
para verificar o estado de um arquivo binário. Alternativamente, verifique a quantidade
de espaço livre em disco antes de começar com <c>df -h</c>.
</warn>

<table>
<tr>
  <th>As opções explicadas:</th>
</tr>
<tr>
  <th>-a</th>
  <ti>"All": pré-ligar todos binários</ti>
</tr>
<tr>
  <th>-m</th>
  <ti>
    Conservar o espaço de memória virtual. É necessário se você
    tem muitas bibliotecas que precisam ser pré-ligadas.
  </ti>
</tr>
<tr>
  <th>-R</th>
  <ti>
    Random -- usar ordem aleatória de endereços, isto aumenta a
    segurança contra buffer overflows.
  </ti>
</tr>
</table>

<note>
Para mais opções e detalhes veja <c>man prelink</c>.
</note>

</body>
</section>
<section>
<title>Deixando o KDE mais rápido depois da pré-ligação</title>
<body>

<p>
O tempo de carregamento do KDE pode ser muito diminuído depois da pré-ligação. Se você informar ao KDE
que ele foi pré-ligado ele irá desligar o carregamento do <c>kdeinit</c> (já que
não é mais necessário) o que deixa o KDE ainda mais rápido.
</p>

<p>
Configure <c>KDE_IS_PRELINKED="true"</c> em <path>/etc/env.d/99kde-env</path> para
informar o KDE sobre a pré-ligação.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Problemas e consertos conhecidos</title>
<section>
<title>&quot;Cannot prelink against non-PIC shared library&quot;</title>
<body>

<p>
A causa deste problema é de bibliotecas compartilhadas mal-compiladas que não
foram compiladas com a opção do gcc -fPIC para todos seus arquivos de objeto.
</p>

<p>
A lista seguinte é uma lista das bibliotecas problemáticas e que pacotes
re-instalar se você tiver o erro acima.
</p>

<pre caption = "Consertos">
<codenote>Para a biblioteca do ORBit /usr/lib/libIIOP.so.0.5.17</codenote>
# <i>emerge ">=sys-apps/tcp-wrappers-7.6-r4" ORBit</i>

<codenote>Para a biblioteca do zlib usr/lib/libz.so.1.1.4</codenote>
# <i>emerge ">=sys-libs/zlib-1.1.4"</i>

<codenote>Para svgalib, /usr/lib/libsvga.so.xx</codenote>
# <i>emerge ">=media-libs/svgalib-1.9.16"</i>

<codenote>Para libpcap.so.0.6</codenote>
# <i>emerge ">=net-libs/libpcap-0.7.1-r2"</i>

<codenote>Para a biblioteca lcms, /usr/lib/liblcms.so.1</codenote>
# <i>emerge ">=media-libs/lcms-1.09"</i>
</pre>

<note>
Muitas bibliotecas ligam-se estaticamente ao zlib e/ou tcp-wrappers então primeiro tente
re-instalar eles e re-instalar a biblioteca problemática.
</note>

<p>
Aqui estão as bibliotecas que não foram arrumadas ou não podem ser arrumadas:
</p>

<ul>
  <li>
    As bibliotecas do pacote wine, incluindo o winex. Pré-ligação
    não melhora executáveis de MS Windows de qualquer jeito.
  </li>
  <li>
    A biblioteca em media-video/mjpegtools, 
    <path>/usr/lib/liblavfile-1.6.so.0</path>.
  </li>
</ul>

<p>
Se sua biblioteca problemática não foi listado por favor relate-a com, preferencialmente, um
patch para adicionar o <c>-fPIC</c> às CFLAGS relevantes.
</p>

</body>
</section>
<section>
<title>&quot;&lt;file&gt;: error while loading shared libraries: unexpected
reloc type...&quot;</title>
<body>

<p>
Isto foi arrumado no <c>sys-libs/glibc-2.3.1-r2</c> em 18/11/2002,
re-instale o glibc se o seu for mais antigo.
</p>

<p>
Sabe-se também que fazer <c>prelink -u -a -m</c> ; <c>prelink -a -m</c>
ajuda. Se tudo mais der errado simplesmente faça <c>prelink -u &lt;arquivo&gt;</c>.
</p>

</body>
</section>
<section>
<title>Quando eu pré-ligo meu sistema alguns binários estáticos não funcionam mais</title>
<body>

<p>
Até onde o glibc sabe, não existe nada como um binário 100% estático.
Se você compilar um binário estaticamente com o glibc, ele pode ainda depender
de outros arquivos de sistema. Abaixo está uma explicação por Dick Howell,
</p>

<p>
&quot;Eu suponho que a idéia é que tudo estará no arquivo baixado,
então nada depende de bibliotecas locais no sistema alvo. Infelizmente
com o Linux, e acho que qualquer outra coisa usando GLIBC, isto ainda não é
verdade. Existe o "libnss" (name service swith, que as pessoas parecem chamar de
network security system) que fornece funções para acessar vários
bancos de dados para autenticação, informações de rede, e outras coisas. Deve
fazer programas de aplicações independentes do ambiente de rede real
configurado separadamente na máquina. Uma boa idéia, mas mudanças ao GLIBC
podem levar a problemas em seu carregamento. E você não pode ligar estaticamente o "libnss", já
que ele é configurado para cada máquina individualmente. O problema resume-se, creio eu,
principalmente à ligação estática de outras bibliotecas do GLIBC, especialmente "libpthread",
"libm", e "libc", a partir das quais vem chamadas de funções incompatíveis com
o "libnss".&quot;
</p>

</body>
</section>
<section>
<title>O Prelink aborta com &quot;prelink: dso.c:306: fdopen_dso: Assertion
`j == k' failed.&quot;</title>
<body>

<p>
Este é um problema conhecido, bondosamente diagnosticado <uri
link="http://bugs.gentoo.org/show_bug.cgi?id=13878">aqui</uri>.
O Prelink não pode lidar com binários comprimidos com UPX. A partir do prelink-20021213
não existe conserto fora esconder os executáveis enquanto você estiver pré-ligando.
Veja a <uri link="#doc_chap2_sect2">seção de configuração</uri>
acima para um jeito fácil de fazer isso.</p>

</body>
</section>
<section>
<title>Eu uso o grsecurity e parece que o prelink não funciona.</title>
<body>

<p>
Para fazer a pré-ligação em um sistema com grsecurity usando uma base
mmap() aleatória, é necessário DESLIGAR o "randomized mmap() 
base" para o <path>/lib/ld-2.3.*.so</path>. Isto pode ser feito com o
utilitário <c>chpax</c>, mas deve ser feito quando o arquivo não
estiver em uso (por exemplo carregar de um CD de resgate).
</p>

</body>
</section>    
</chapter>

<chapter>
<title>Conclusão</title>
<section>
<body>

<p>
O prelink pode reduzir drasticamente a velocidade de início para um grande número
de aplicações. Há suporte dentro do Portage. O prelink também é seguro
já que você sempre pode desfazê-lo para qualquer binário com que você
tenha problemas. Só lembre-se de que quando você atualizar o glibc ou outras bibliotecas contra
as quais você pré-ligou, você precisa rodar o <path>prelink</path> de novo!
Para resumir, boa sorte!
</p>

</body>
</section>
</chapter>
</guide>
