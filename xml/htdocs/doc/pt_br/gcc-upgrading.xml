<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/gcc-upgrading.xml,v 1.1 2005/12/13 23:09:54 vanquirius Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/pt_br/gcc-upgrading.xml">
<title>Guia de atualização do GCC do Gentoo Linux</title>

<author title="Autor">
  <mail link="amne@gentoo.org">Wernfried Haas</mail>
</author>
<author title="Autor">
  <mail link="jkt@gentoo.org">Jan Kundrát</mail>
</author>
<author title="Editor">
  <mail link="halcy0n@gentoo.org">Mark Loeser</mail>
</author>
<author title="Editor">
  <mail link="wolf31o2@gentoo.org">Chris Gianelloni</mail>
</author>
<author title="Tradutor">
  <mail link="vanquirius@gentoo.org">Marcelo Góes</mail>
</author>


<abstract>
Este documento serve como guia para o usuário atualizar o GCC em suas máquinas
rodando Gentoo Linux.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>2</version>
<date>2005-12-08</date>

<chapter id="intro">
<title>Introdução</title>
<section>
<title>Atualizando o GCC</title>
<body>

<p>
Por que você deve atualizar? Bem, o GCC é parecido com qualquer outro pacote em
seu sistema, apenas mais crítico. Você deve atualizar o GCC quando uma nova
versão resolve um bug que incomoda você, nova funcionalidade é introduzida, ou
se você quer manter seu sistema atualizado. Se nenhum dos casos anteriores
aplicam-se a você, você pode adiar a atualização com segurança até sua versão do
GCC deixar de ser suportada pelos desenvolvedores do Gentoo.
</p>

<p>
Se você instalar uma nova versão do GCC, o sistema não irá trocar para usá-lo
automaticamente. Você terá que pedir a mudança explicitamente, porque o processo
de migração pode necessitar de alguns passos adicionais. Se você decidir não
trocar, o Portage continuará a usar a versão antiga de seu compilar, até você
mudar de idéia, ou remover o compilador antigo de seu sistema.
</p>

<p>
Este guia irá documentar os passos necessários para fazer uma atualização sem
problemas do compilador usado em sua máquina que roda Gentoo. Uma seção
específica é dedicada a <uri link="#upgrade-3.3-to-3.4">atualizar da versão do
GCC 3.3 para 3.4</uri> e problemas com <c>libstdc++</c>.
</p>

</body>
</section>
</chapter>

<chapter id="upgrade-general">
<title>Instruções gerais de atualização</title>
<section>
<title>Introdução</title>
<body>

<impo>
Se você estiver procurando instruções específicas para atualizar do GCC-3.3 para
GCC-3.4, por favor consulte a  <uri link="#upgrade-3.3-to-3.4">seção
dedicada</uri>.
</impo>

<p>
Geralmente falando, atualizações de <e>consertos de bugs</e>, como da 3.3.5 para
3.3.6, são bem seguras -- só faça emerge da nova versão, peça para seu sistema
usá-la e reconstrua o único pacote afetado, <c>libtool</c>. No entanto, algumas
atualizações do GCC quebram compatibilidade de binários; em tais casos, uma
reconstrução dos pacotes afetados (ou até mesmo toda a toolchain e o sistema)
pode ser necessária.
</p>

<p>
Quando nós falamos da necessidade de mudar seu compilador para a nova versão
manualmente, nós dissemos que a mudança não irá acontecer, automaticamente. No
entanto, existe uma exceção -- atualizações de consertos de bug, como de 3.3.5
para 3.3.6, caso você não use a funcionalidade "multislot", permitindo que
coexistam em um sistema. Multislot está desligado por padrão, já que a maioria
dos usuários não tiram proveito disso.
</p>

<pre caption="Atualizando o GCC">
# <i>emerge -uav gcc</i>

<comment>(Por favor substituia "i686-pc-linux-gnu-3.4.4" com a versão
do GCC e ajustes de CHOST para que você atualizou:)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Reconstruindo libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Agora, vamos reconstruir a toolchain e o world, para que possamos fazer uso do
novo compilador.
</p>

<pre caption="Reconstruindo o sistema">
# <i>emerge -eav system</i>
# <i>emerge -eav world</i>
</pre>

<p>
É seguro remover a versão antiga do GCC agora. Se você precisar fazer isso, rode
o seguinte comando (como sempre, troque <c>=sys-devel/gcc-3.3*</c> pela versão
que você quer desinstalar):
</p>

<pre caption="Removendo versão antiga do GCC">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="upgrade-3.3-to-3.4">
<title>Atualizando do GCC-3.3 para 3.4</title>
<section>
<title>Introdução</title>
<body>

<p>
A atualização do GCC/3.3 para 3.4 não é tão fácil, já que a ABI de C++ mudou
entre as duas versões, havendo um problema com a biblioteca <c>libstdc++</c>,
com a qual também deve ser lidada.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-choices">
<title>As escolhas</title>
<body>

<p>
Você tem duas possibilidades para atualizar seu sistema. O <uri
link="#upgrade-3.3-to-3.4-revdep-rebuild">primeiro método</uri> é mais rápido e
faz uso da ferramenta <c>revdep-rebuild</c> do pacote <c>gentoolkit</c>,
enquanto o <uri link="#upgrade-3.3-to-3.4-emerge-e">segundo</uri> reconstrói o
sistema inteiro do zero, tirando proveito das novas funções do GCC. Cabe a você
decidir qual dos dois métodos usar.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-revdep-rebuild">
<title>Usando revdep-rebuild</title>
<body>

<p>
Este método requer que você primeiro instale o <c>gentoolkit</c>, se você ainda
não tiver o feito. Então, nós iremos atualizar o GCC e trocar para o novo
compilador. Nós também iremos reconstruir o pacote <c>libtool</c> para
certificar que a toolchain está saudável.
</p>

<pre caption="Instalando o gentoolkit e atualizando o GCC">
# <i>emerge -an gentoolkit</i>
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Reconstruindo libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Isto presume que você tem <c>CHOST="i686-pc-linux-gnu"</c> configurado. Se você
estiver usando outro CHOST, por favor use a linha de gcc-config adequada.
</note>

<p>
Agora, nós queremos ver pacotes que o revdep-rebuild irá querer reconstruir.
A seguir, nós pediremos para o revdep-rebuild realmente reconstruir os pacotes.
Isto pode demorar um pouco, então tenha paciência.
</p>

<pre caption="Usando revdep-rebuild">
# <i>revdep-rebuild --library libstdc++.so.5 -- -p -v</i>
# <i>revdep-rebuild --library libstdc++.so.5</i>
</pre>

<note>
É possível que você possa ter problemas com versões de pacotes não existentes
devido a eles estarem obsoletos ou mascarados. Se este for o caso, você deve
usar a opção <c>--package-names</c> junto com o <c>revdep-rebuild</c>. Isto faz
com que pacotes sejam recompilados com base no nome do pacote, ao invés de nome
e versão exatas.
</note>

<p>
Para ter compatibilidade com aplicações binárias C++ antigas e outros pacotes
que o revdep-rebuild pode ter perdido, <c>sys-libs/libstdc++-v3</c> precisa ser
instalado antes de você desinstalar o GCC 3.3 de seu sistema.
</p>

<pre caption="Instalando o libstdc++-v3 e limpando">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
<section id="upgrade-3.3-to-3.4-emerge-e">
<title>Usando emerge -e</title>
<body>

<p>
Este método, embora seja mais lento, irá reconstruir seu sistema inteiro para
ter certeza de que tudo foi reconstruído com seu novo compilador, e é portanto
mais seguro. Primeiro, você irá atualizar o GCC e libtool e trocar para seu
novo compilador.
</p>

<pre caption="Atualizando o GCC">
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Reconstruindo libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Isto presume que você tem <c>CHOST="i686-pc-linux-gnu"</c> configurado. Se você
estiver usando outro CHOST, por favor use a linha de gcc-config adequada.
</note>

<p>
Para ter compatibilidade com aplicações binárias C++ mais antigas,
<c>sys-libs/libstdc++-v3</c> precisa ser instalado em seu sistema.
</p>

<pre caption="Instalando libstdc++-v3">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

<p>
Agora nós iremos primeiro reconstruir o alvo system, depois o alvo world. Isto
irá demorar muito, dependendo do número de pacotes que você tem instalado, já
que irá reconstruir toda a toolchain e arquivos de sistema de suporte, seguido
de todos pacotes em seu sistema, incluindo a toolchain. Isto é necessário para
ter certeza que todos pacotes foram compilados com a nova toolchain, incluindo
a própria toolchain.
</p>

<pre caption="Reconstruindo system e world">
# <i>emerge -e system</i>
# <i>emerge -e world</i>
</pre>

<p>
Agora é seguro remover versões antigas do GCC:
</p>

<pre caption="Limpando">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="common-pitfalls">
<title>Erros comuns</title>
<section>
<body>

<p>
É importante desligar o <c>distcc</c> durante a atualização. Misturar versões
de compiladores em seus nódulos <e>irá</e> causar problemas de construção. Isto
não é necessário para o ccache, já que os objetos de cache serão invalidados de
qualquer jeito.
</p>

<p>
Sempre use a mesma versão de GCC para seu kernel e módulos de kernel adicionais.
Uma vez que você reconstruir seu world com o novo GCC, módulos externos (como
<c>app-emulation/qemu-softmmu</c>) não carregarão com sucesso. Por favor,
reconstrua seu kernel com o novo GCC para consertar este problema.
</p>

</body>
</section>
<section>
<title>Mensagens de erro freqüentes</title>
<body>

<p>
Se seu sistema reclamar sobre algo como <e>libtool: link:
`/usr/lib/gcc-lib/i686-pc-linux-gnu/3.3.6/libstdc++.la' is not a valid libtool
archive</e>, por favor, rode <c>/sbin/fix_libtool_files.sh 3.3.6</c> (substitua
"3.3.6" com os números da versão da mensagem de erro).
</p>

<p>
Se você vir <e>error: /usr/bin/gcc-config: line 632:
/etc/env.d/gcc/i686-pc-linux-gnu-3.3.5: No such file or directory</e>, então
tente apagar <path>/etc/env.d/gcc/config-i686-pc-linux-gnu</path> e rodar
<c>gcc-config</c> novamente, seguido de <c>source /etc/profile</c>. Só faça isso
se você não tiver cross-compiladores configurados, todavia.
</p>

<p>
Se um pacote falhar durante um <c>emerge -e system/world</c>, você pode
continuar a operação com <c>emerge --resume</c>. Se um pacote falhar
repetidamente, pule-o com <c>emerge --resume --skipfirst</c>. Não rode outras
instâncias de emerge no meio termo ou você perderá a informação para continuar.
</p>

<p>
Se você obter uma mensagem de erro <e>spec failure: unrecognized spec option</e>
enquanto estiver atualizando seu compilador, tente voltar para seu compilador
padrão, apague a variável <c>GCC_SPECS</c> e atualize o GCC novamente:
</p>

<pre caption="Voltando a specs primários">
# <i>gcc-config 1</i>
# <i>source /etc/profile</i>
# <i>unset GCC_SPECS</i>
# <i>emerge -uav gcc</i>
</pre>

</body>
</section>

</chapter>
</guide>
