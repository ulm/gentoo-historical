<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pt_br/gcc-upgrading.xml,v 1.7 2012/04/18 18:30:34 swift Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="pt_br">
<title>Guia de atualização do GCC do Gentoo Linux</title>

<author title="Autor">
  <mail link="amne@gentoo.org">Wernfried Haas</mail>
</author>
<author title="Autor">
  <mail link="jkt@gentoo.org">Jan Kundrát</mail>
</author>
<author title="Editor">
  <mail link="halcy0n@gentoo.org">Mark Loeser</mail>
</author>
<author title="Tradutor">
  <mail link="vanquirius@gentoo.org">Marcelo Góes</mail>
</author>

<abstract>
Este documento serve como guia para o usuário atualizar o GCC em suas máquinas
rodando Gentoo Linux.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>8</version>
<date>2006-02-09</date>

<chapter id="intro">
<title>Introdução</title>
<section>
<title>Atualizando o GCC</title>
<body>

<p>
Por que você deve atualizar? Bem, o GCC é parecido com qualquer outro pacote em
seu sistema, apenas mais crítico. Você deve atualizar o GCC quando uma nova
versão resolve um bug que incomoda você, nova funcionalidade é introduzida, ou
se você quer manter seu sistema atualizado. Se nenhum dos casos anteriores
aplicam-se a você, você pode adiar a atualização com segurança até sua versão do
GCC deixar de ser suportada pelos desenvolvedores do Gentoo.
</p>

<p>
Se você instalar uma nova versão do GCC, o sistema não irá trocar para usá-lo
automaticamente. Você terá que pedir a mudança explicitamente, porque o processo
de migração pode necessitar de alguns passos adicionais. Se você decidir não
trocar, o Portage continuará a usar a versão antiga de seu compilar, até você
mudar de idéia, ou remover o compilador antigo de seu sistema.
</p>

<p>
Este guia irá documentar os passos necessários para fazer uma atualização do
compilador usado por sua máquina Gentoo. Uma seção específica é dedicada para a
<uri link="#upgrade-3.3-to-3.4">atualização do GCC 3.3 para 3.4 ou versões
superiores</uri> e problemas com <c>libstdc++</c>. Uma segunda seção é
específica para usuários <uri
link="#first-install">instalando pela primeira</uri> o Gentoo usando uma tarball
de stage3, depois de uma nova versão maior/menor do GCC haver sido lançada.
</p>

<note>
Deve ser notado que atualizar do GCC-3.4 para GCC-4.0 ou maior não precisa de
grandes mudanças feitas pelo usuário, já que GCC-3.4 e GCC-4.0 usam a mesma ABI.
Tudo que é necessário é o uso de <c>gcc-config</c> para selecionar o compilador
desejado.
</note>

</body>
</section>
</chapter>

<chapter id="upgrade-general">
<title>Instruções gerais de atualização</title>
<section>
<title>Introdução</title>
<body>

<impo>
Se você estiver procurando instruções específicas para atualização do GCC-3.3
para GCC-3.4 ou maior, por favor consulte a <uri
link="#upgrade-3.3-to-3.4">seção dedicada</uri>.
</impo>

<impo>
Se você estiver procurando instruções específicas para atualização do GCC em
novas instalações, por favor consulte a <uri link="#first-install">seção
dedicada</uri>.
</impo>

<p>
Geralmente falando, atualizações de <e>consertos de bugs</e>, como da 3.3.5 para
3.3.6, são bem seguras -- só faça emerge da nova versão, peça para seu sistema
usá-la e reconstrua o único pacote afetado, <c>libtool</c>. No entanto, algumas
atualizações do GCC quebram compatibilidade de binários; em tais casos, uma
reconstrução dos pacotes afetados (ou até mesmo toda a toolchain e o sistema)
pode ser necessária.
</p>

<p>
Quando nós falamos da necessidade de mudar seu compilador para a nova versão
manualmente, nós dissemos que a mudança não irá acontecer, automaticamente. No
entanto, existe uma exceção -- atualizações de consertos de bug, como de 3.3.5
para 3.3.6, caso você não use a funcionalidade "multislot", permitindo que
coexistam em um sistema. Multislot está desligado por padrão, já que a maioria
dos usuários não tiram proveito disso.
</p>

<pre caption="Atualizando o GCC">
# <i>emerge -uav gcc</i>

<comment>(Por favor substituia "i686-pc-linux-gnu-3.4.4" com a versão
do GCC e ajustes de CHOST para que você atualizou:)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Reconstruindo libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Agora, vamos reconstruir a toolchain e o world, para que possamos fazer uso do
novo compilador.
</p>

<pre caption="Reconstruindo o sistema">
# <i>emerge -eav system</i>
# <i>emerge -eav world</i>
</pre>

<p>
É seguro remover a versão antiga do GCC agora. Se você precisar fazer isso, rode
o seguinte comando (como sempre, troque <c>=sys-devel/gcc-3.3*</c> pela versão
que você quer desinstalar):
</p>

<pre caption="Removendo versão antiga do GCC">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="upgrade-3.3-to-3.4">
<title>Atualizando do GCC-3.3 para 3.4 ou maior</title>
<section>
<title>Introdução</title>
<body>

<p>
A atualização do GCC/3.3 para 3.4 não é tão fácil, já que a ABI de C++ mudou
entre as duas versões. Há um problema com a biblioteca <c>libstdc++</c>, com a
qual também deve ser lidada.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-choices">
<title>As escolhas</title>
<body>

<impo>
Se você estiver atualizando uma máquina SPARC, você terá que fazer uma
<uri link="#upgrade-3.3-to-3.4-emerge-e">reconstrução completa do sistema</uri>
devida a algumas <uri link="http://gcc.gnu.org/gcc-3.4/sparc-abi.html">mudanças
de ABI</uri> internas na passagem de parâmetros do GCC.
</impo>

<p>
Você tem duas possibilidades de como atualizar seu sistema. O <uri
link="#upgrade-3.3-to-3.4-revdep-rebuild">primeiro método</uri> é mais rápido e
requer o uso da ferramenta <c>revdep-rebuild</c> do pacote <c>gentoolkit</c>,
enquanto o <uri link="#upgrade-3.3-to-3.4-emerge-e">segundo</uri> reconstrói o
sistema inteiro do zero, para tirar proveito das novas funções do GCC. É sua a
decisão decidir qual dos dois métodos usar. Na maior parte dos casos, o primeiro
método é suficiente.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-revdep-rebuild">
<title>Usando revdep-rebuild</title>
<body>

<p>
Este método requer que você primeiro instale o <c>gentoolkit</c>, se você ainda
não tiver o feito. Então, nós iremos atualizar o GCC e trocar para o novo
compilador. Nós também iremos reconstruir o pacote <c>libtool</c> para
certificar que a toolchain está saudável.
</p>

<pre caption="Instalando o gentoolkit e atualizando o GCC">
# <i>emerge -an gentoolkit</i>
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Reconstruindo libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Isto presume que você tem <c>CHOST="i686-pc-linux-gnu"</c> configurado. Se você
estiver usando outro CHOST, por favor use a linha de gcc-config adequada.
</note>

<p>
Agora, nós queremos ver pacotes que o revdep-rebuild irá querer reconstruir.
A seguir, nós pediremos para o revdep-rebuild realmente reconstruir os pacotes.
Isto pode demorar um pouco, então tenha paciência.
</p>

<pre caption="Usando revdep-rebuild">
# <i>revdep-rebuild --library libstdc++.so.5 -- -p -v</i>
# <i>revdep-rebuild --library libstdc++.so.5</i>
</pre>

<note>
É possível que você possa ter problemas com versões de pacotes não existentes
devido a eles estarem obsoletos ou mascarados. Se este for o caso, você deve
usar a opção <c>--package-names</c> junto com o <c>revdep-rebuild</c>. Isto faz
com que pacotes sejam recompilados com base no nome do pacote, ao invés de nome
e versão exatas.
</note>

<p>
Para ter compatibilidade com aplicações binárias C++ antigas e outros pacotes
que o revdep-rebuild pode ter perdido, <c>sys-libs/libstdc++-v3</c> precisa ser
instalado antes de você desinstalar o GCC 3.3 de seu sistema.
</p>

<pre caption="Instalando o libstdc++-v3 e limpando">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
<section id="upgrade-3.3-to-3.4-emerge-e">
<title>Usando emerge -e</title>
<body>

<p>
Este método, embora seja mais lento, irá reconstruir seu sistema inteiro para
ter certeza de que tudo foi reconstruído com seu novo compilador, e é portanto
mais seguro. Primeiro, você irá atualizar o GCC e libtool e trocar para seu
novo compilador.
</p>

<pre caption="Atualizando o GCC">
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Reconstruindo libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Isto presume que você tem <c>CHOST="i686-pc-linux-gnu"</c> configurado. Se você
estiver usando outro CHOST, por favor use a linha de gcc-config adequada.
</note>

<p>
Para ter compatibilidade com aplicações binárias C++ mais antigas,
<c>sys-libs/libstdc++-v3</c> precisa ser instalado em seu sistema.
</p>

<pre caption="Instalando libstdc++-v3">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

<p>
Agora nós iremos primeiro reconstruir o alvo system, depois o alvo world. Isto
irá demorar muito, dependendo do número de pacotes que você tem instalado, já
que irá reconstruir toda a toolchain e arquivos de sistema de suporte, seguido
de todos pacotes em seu sistema, incluindo a toolchain. Isto é necessário para
ter certeza que todos pacotes foram compilados com a nova toolchain, incluindo
a própria toolchain.
</p>

<pre caption="Reconstruindo system e world">
# <i>emerge -e system</i>
# <i>emerge -e world</i>
</pre>

<p>
Agora é seguro remover versões antigas do GCC:
</p>

<pre caption="Limpando">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="first-install">
<title>Atualizando o GCC em uma primeira instalação</title>
<section>
<title>Introdução</title>
<body>

<p>
Uma atualização do GCC em um sistema depois da instalação de uma tarball de
stage3 é uma tarefa simples. Uma vantagem que os usuários de novas instalações
têm é que eles não têm muito software instalado que se liga contra a versão
antiga do GCC. O exemplo seguinte é para uma atualização de GCC-3.3 para 3.4 ou
superior. Certas partes serão diferentes se a atualização for de outras versões
de GCC. Por exemplo, os nomes de biblioteca usados para <c>revdep-rebuild</c>
são específicos do GCC 3.3, bem como a necessidade de instalar
<c>libstdc++-v3</c>.
</p>

<p>
Se um usuário ainda não houver personalizado seu sistema, são poucos passos para
atualizar seu sistema para uma nova versão do GCC. Como a atualização de GCC-3.3
para 3.4, o usuário tem duas opções. No entanto, diferente da atualização de
GCC-3.3 para 3.4, este é menos complicado, já que há menos diferenças entre os
métodos. O <uri link="#first-install-revdep-rebuild">primeiro método</uri> é
mais rápido e faz uso da ferramenta <c>revdep-rebuild</c> do <c>gentoolkit</c>,
parecido com o procedimento acima. Usar revdep-rebuild só faz com que pacotes
que realmente se ligam contra bibliotecas do GCC sejam reconstruídos, enquanto o
<uri link="#first-install-emerge-e">segundo método</uri> faz com que seu sistema
novo inteiro seja recompilado com a nova versão de GCC e leva muito mais tempo.
Este segundo método nunca é necessário e só é documentado para ser completo.
</p>

<p>
Estes primeiros passos são comuns com os dois métodos, e devem ser feitos por
todos.
</p>

<pre caption="Atualizando o GCC">
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Reconstruindo libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Isto presume que você tem <c>CHOST="i686-pc-linux-gnu"</c> configurado. Se você
estiver usando outro CHOST, por favor use a linha de gcc-config apropriada.
</note>

<p>
Para oferecer compatibilidade com aplicações C++ binárias mais antigas,
<c>sys-libs/libstdc++-v3</c> deve ser instalado no seu sistema.
</p>

<pre caption="Instalando libstdc++-v3">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

</body>
</section>

<section id="first-install-revdep-rebuild">
<title>Usando revdep-rebuild</title>
<body>

<p>
Este método necessita que você primeiro instale <c>gentoolkit</c> se você ainda
não tiver o feito. Nós iremos então rodar <c>revdep-rebuild</c> para realmente
procurar dentre os pacotes instalados os que precisamos reconstruir, e depois
fazer a reconstrução.
</p>

<pre caption="Instalando gentoolkit e rodando revdep-rebuild">
# <i>emerge -an gentoolkit</i>
# <i>revdep-rebuild --library libstdc++.so.5 -- -p -v</i>
# <i>revdep-rebuild --library libstdc++.so.5</i>
</pre>

<note>
É possível que você tenha problemas com versões de pacote inexistentes devido
a serem velhas ou mascaradas. Se for o caso, você deve usar a opção
<c>--package-names</c> com o <c>revdep-rebuild</c>. Isto faz com que pacotes
sejam recompilados com base no nome de pacote, ao invés do nome e versão exatos.
</note>

</body>
</section>
<section id="first-install-emerge-e">
<title>Usando emerge -e</title>
<body>

<p>
Este método, embora muito mais lento, irá reconstruir o alvo system para
certificar que tudo foi reconstruído com seu novo compilador. Isto não é
necessário, mas é válido se você também estiver fazendo mudanças a CFLAGS ou
outras variáveis de make.conf que irão afetar a compilação de sistema.
</p>

<pre caption="Atualizando o GCC">
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Reconstruindo o libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Isto presume que você tem <c>CHOST="i686-pc-linux-gnu"</c> configurado. Se você
estiver usando outro CHOST, por favor use a linha de gcc-config apropriada.
</note>

<p>
Para oferecer compatibilidade com binários C++ mais antigos,
<c>sys-libs/libstdc++-v3</c> precisa ser instalado em seu sistema.
</p>

<pre caption="Instalando libstdc++-v3">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

<p>
Já que estamos fazendo estas ações depois de uma instalação inicial, nós não
precisamos recompilar o alvo world como faríamos depois de fazer uma atualização
em um sistema já instalado. No entanto, você pode desejar fazer uma atualização
do world ao invés de system, para certificar-se de todos pacotes foram
atualizados.
</p>

<pre caption="Reconstruindo system">
# <i>emerge -e system</i>
</pre>

<p>
Também é seguro remover versões mais antigas de GCC agora. Já que esta é uma
instalação inicial, nós estamos usando a função prune do Portage para remover
todas versões mais antigas do GCC.
</p>

<pre caption="Limpando">
# <i>emerge -aC "&lt;sys-devel/gcc-SUA-NOVA-VERSÃO-DE-GCC"</i>
</pre>

</body>
</section>
</chapter>

<chapter id="common-pitfalls">
<title>Erros comuns</title>
<section>
<body>

<p>
É importante desligar o <c>distcc</c> durante a atualização. Misturar versões
de compiladores em seus nódulos <e>irá</e> causar problemas de construção. Isto
não é necessário para o ccache, já que os objetos de cache serão invalidados de
qualquer jeito.
</p>

<p>
Sempre use a mesma versão de GCC para seu kernel e módulos de kernel adicionais.
Uma vez que você reconstruir seu world com o novo GCC, módulos externos (como
<c>app-emulation/qemu-softmmu</c>) não carregarão com sucesso. Por favor,
reconstrua seu kernel com o novo GCC para consertar este problema.
</p>

<p>
Se você estiver atualizando em uma máquina SPARC, certifique-se de rodar
<c>silo -f</c> novamente após fazer emerge world para evitar possíveis
problemas.
</p>

</body>
</section>
<section>
<title>Mensagens de erro freqüentes</title>
<body>

<p>
Se seu sistema reclamar sobre algo como <e>libtool: link:
`/usr/lib/gcc-lib/i686-pc-linux-gnu/3.3.6/libstdc++.la' is not a valid libtool
archive</e>, por favor, rode <c>/sbin/fix_libtool_files.sh 3.3.6</c> (substitua
"3.3.6" com os números da versão da mensagem de erro).
</p>

<p>
Se você vir <e>error: /usr/bin/gcc-config: line 632:
/etc/env.d/gcc/i686-pc-linux-gnu-3.3.5: No such file or directory</e>, então
tente apagar <path>/etc/env.d/gcc/config-i686-pc-linux-gnu</path> e rodar
<c>gcc-config</c> novamente, seguido de <c>source /etc/profile</c>. Só faça isso
se você não tiver cross-compiladores configurados, todavia.
</p>

<p>
Se um pacote falhar durante <c>emerge -e system</c> ou <c>emerge -e world</c>,
você pode continuar a operação com <c>emerge --resume</c>. Se um pacote falhar
repetidamente, pule-o com <c>emerge --resume --skipfirst</c>. Não rode outras
instâncias do emerge no meio termo, ou você perderá a informação para continuar.
</p>

<p>
Se você obtiver uma mensagem de erro <e>spec failure: unrecognized spec option</e>
enquanto estiver atualizando seu compilador, tente voltar para seu compilador
padrão, apague a variável <c>GCC_SPECS</c> e atualize o GCC novamente:
</p>

<pre caption="Voltando a specs primários">
# <i>gcc-config 1</i>
# <i>source /etc/profile</i>
# <i>unset GCC_SPECS</i>
# <i>emerge -uav gcc</i>
</pre>

</body>
</section>
</chapter>
</guide>
