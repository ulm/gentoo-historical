<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: shb-chroot.xml,v 1.2 2007/01/03 14:43:18 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.1</version>
<date>2005-12-15</date>

<section>
<title>Chrootolás</title>
<body>

<p>
A chroot egy szolgáltatás, amivel más szolgáltatásokat (vagy felhasználókat) 
tudsz lekorlátozni úgy, hogy a környezetükben csak a számukra szükséges 
elemeket biztosítod. így nem lesz haszna a root hozzáférésnek (vagy 
információnak), ha valaki valahogy hozzájut.Futtasd a szolgáltatást 
<c>root</c>-on kívüli felhasználóval (<c>nobody</c>, <c>apache</c>, 
<c>named</c>), és a támadó csak olyan fájlokhoz tud hozzáférni, amihez a 
felhasználónak joga van. Ezzel az eszközzel a támadó nem tud hasznot húzni egy 
<c>root</c> jogosultságból, még ha a szolgáltatásban van is egy kiskapu.
</p>

<p>
Néhány szolgáltatás, mint például a <c>pure-ftpd</c> és a <c>bind</c> hajlandó 
chrootban futni, mások pedig nem. Ha a szolgáltatás tudja használni, akkor 
kérdés nélkül használd, és hozd létre a saját könyvtárát. Azért, hogy lásd, 
hogyan kell létrehozni egy chrootot, mutatok neked egy egyszerű példát mondjuk 
a <c>bash</c>-sal (könnyű lesz).
</p>

<p>
Hozd létre a <path>/chroot</path> könyvtárat a <c>mkdir /chroot</c> 
paranccsal, és keresd meg a <c>bash</c>-sal fordított, és ezáltal szükséges, 
dinamikus könyvtárakat (ha <c>-static</c> kapcsolóval fordítottad, akkor ez 
nem szükséges).
</p>

<p>
A következő parancs létrehozza a <c>bash</c>-nak szükséges könyvtárak listáját.
</p>

<pre caption="A használt könyvtárak kilistázása">
# <i>ldd /bin/bash</i>
  libncurses.so.5 => /lib/libncurses.so.5 (0x4001b000)
  libdl.so.2 => /lib/libdl.so.2 (0x40060000)
  libc.so.6 => /lib/libc.so.6 (0x40063000)
  /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)
</pre>

<p>
Most pedig hozd létre a <c>bash</c> futtatásához szükséges környezetet.
</p>

<pre caption="A chroot-környezet létrehozása a bashnak">
# <i>mkdir /chroot/bash</i>
# <i>mkdir /chroot/bash/bin</i>
# <i>mkdir /chroot/bash/lib</i>
</pre>

<p>
Ezek után másold be a <c>bash</c> által használt fájlokat (<path>/lib</path>) 
a chrootolt <path>lib</path>, a bash parancsot pedig a chrootolt 
<path>bin</path> könyvtárba. Ezzel létrehozod a pontosan ugyanolyan 
környezetet, csak egy kicsit kisebb funkcionalitással. Másolás után próbáld 
ki: <c>chroot /chroot/bash /bin/bash</c>. Ha a <path>/</path> prompt jelenik 
meg, akkor működik! Minden egyéb esetben elmondja, hogy milyen fájl hiányzik, 
ugyanis néhány megosztott könyvtár függ egymástól.
</p>

<p>
Értesítést fogsz kapni, hogy semmilyen munkát nem fogsz tudni végezni, kivéve 
az <c>echo</c> futtatását. Jelenleg nincsen más elérhető parancs a chrootolt 
környezetben, mint a bash, és az ő beépített funkciója, az <c>echo</c>.
</p>

<p>
Ez alapvetően ugyanaz, mintha létrehoznál egy a chrootolt szolgáltatást. Az 
egyetlen különbség, hogy a szolgáltatások néha hiányolják a drivereket és a 
beállítási fájljukat az <path>/etc</path> könyvtárból. Egyszerűen másold be 
őket (az eszközöket a <c>cp -a</c>-val) a chrootolt környezetbe, mondjuk úgy, 
hogy szerkeszted az init fájlját, hogy a chroot előtt hajtsa végre. Tudom, 
hogy nehéz egy szolgáltatásnak szükséges összes állományt megtalálni, de van 
egy ügyes kis programocska erre, a <c>strace</c>. Indítsd el a 
<c>/usr/bin/strace</c>-szel a basht, és megkeresi a nyitott, olvasott, stat és 
talán a kapcsolódó fájlokat. Ez ad egy listát a másolandó állományokról. 
Általában ezek a másolatok a passwd állomány (Másold be, utána szerkeszd a 
másolatot, és távolítsd el belőle a felhasználókat, mert a szolgáltatásokhoz 
szükséges adattal is beéri), a <path>/dev/zero</path>, a <path>/dev/log</path> 
és a <path>/dev/random</path>.
</p>

</body>
</section>
<section>
<title>Felhasználó Módú (User Mode) Linux</title>
<body>

<p>
A másik útja a biztonságos környezet létrehozásának a virtuális gépen való 
futtatás. A virtuális gép, mint a neve is elárulja, egy valódi operációs 
rendszerben fut, de csak egy hardvered van egy operációs rendszerrel, és ebben 
fut egy saját egyedi gép. A biztonsági előny az, hogyha a szervert a 
látszólagos gépen feltörik, akkor csak a virtuális gép irányítása került át, a 
szülő gépet nem érinti a probléma.
</p>

<p>
A User Mode Linux további beállítási lehetőségéért tanulmányozd át a 
<uri link="/doc/en/uml.xml">User Mode Linux Kézikönyvet</uri>.
</p>

</body>
</section>

</sections>
