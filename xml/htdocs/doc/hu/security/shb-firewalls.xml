<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: shb-firewalls.xml,v 1.1 2007/01/03 14:43:18 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.3</version>
<date>2006-11-19</date>

<section>
<title>Egy tűzfal</title>
<body>

<p>
Az emberek általában úgy gondolnak egy tűzfalra, mint a biztonság csúcsára, 
viszont ez a gondolat hibás. Általában egy rosszul beállított tűzfal kisebb 
biztonságot jelent, mintha nem lenne egyáltalán. A tűzfal szintén egy darabja 
a telepített programoknak, és ugyanúgy kellene kezelni, mint a többi 
programot, és ugyanúgy figyelni rá, mint a többi programra, mert ez is 
ugyanúgy tartalmazhat bogarat, mint a többi.
</p>

<p>
Így gondolkodj, mielőtt tűzfalat építesz! Valóban szükséged van egyre? Ha 
igen, akkor fogalmazd meg a biztonsági előírásokat a működéséről, gondold át, 
hogy mi legyen a típusa a tűzfalnak, és hogyan működjön. Viszont mindenek 
előtt olvasd el ezt az útmutatót.
</p>

<p>
Két céllal használok tűzfalat:
</p>

<ul>
<li>Tartok a felhasználóktól (férgek/támadók) kint</li>
<li>Tartok a felhasználóktól (alkalmazottak/gyerekek) bent</li>
</ul>

<p>
Három alapvető típusa van a tűzfalaknak:
</p>

<ul>
<li>Csomagszűrő</li>
<li>Circuit relay</li>
<li>Alkalmazáskapu</li>
</ul>

<p>
Egy tűzfalnak egy dedikált gépen kéne futnia, más mellette futó 
szolgáltatástól mentesen (esetleg lehet még egy <c>sshd</c> a gépen), és mint 
biztonságos utat ajánlja ez az útmutató.
</p>

</body>
</section>
<section>
<title>Csomagszűrés</title>
<body>

<p>
Minden hálózati forgalom csomag formájában történik.A nagy forgalom lebomlik 
kicsi csomagokra, hogy könnyű legyen kezelni, és újra összeáll, amikor 
megérkezett a rendeltetési helyre. A csomag fejlécében tartalmazza azokat az 
információkat, hogy hogyan és hol kéne azokat összeállítani. Mi ezt az 
információt fogjuk felhasználni a tűzfal szűrőjével. A szűrés alapja:
</p>

<ul>
<li>Fogadott vagy elutasított csomagok a forrás/célállomás IP címe alapján
</li>
<li>Fogadott vagy elutasított csomagok a forrás/célállomás IP portja alapján
</li>
<li>Fogadott vagy elutasított csomagok a protokoll alapján</li>
<li>Fogadott vagy elutasított csomagok a speciális protokollon belüli jelzők 
  alapján</li>
</ul>

<p>
Más szavakkal, ez a szűrő az összes adatot felhasználja a csomag fejlécén 
belül, anélkül, hogy a tartalmához nyúlna.
</p>

<p>
Hátrányok:
</p>

<ul>
<li>
  A csomag címinformáció hamis IP is cím lehet (vagy ahogy mondani szokás 
  <e>spoofed</e> (átverős) a feladó).
</li>
<li>
  A csomag adat vagy kérelem tartalma felesleges adattartalmat birtokolhat, 
  amit a támadó az ismert hibák ellen akar felhasználni a szolgáltatásokban, 
  vagy máshol a tűzfal mögött.
</li>
<li>Rendszerint egy hiba végzetes</li>
</ul>

<p>
Előnyök:
</p>

<ul>
<li>Egyszerű és könnyű üzembehelyezés</li>
<li>
  Figyelmeztet egy lehetséges támadás előtti történések alapján (pl. 
  portscant észlelt)
</li>
<li>Nagyon jó állítja meg a SYN támadásokat</li>
</ul>

<p>
Példák ingyenes csomagszűrőkre Linux alá:
</p>

<ul>
<li><uri link="http://www.iptables.org">Iptables</uri></li>
<li>
  <uri link="http://www.linuxdocs.org/HOWTOs/IPCHAINS-HOWTO.html">Ipchains</uri>
</li>
<li><uri link="http://www.smoothwall.org">SmoothWall</uri></li>
</ul>
<!--FIXME: A SmoothWallnak tényleg szerepelnie kéne itt, az nem az iptablest 
használja?-->
<note>
Ajánlott az iptables használata. Az ipchains elavult.
</note>

</body>
</section>
<section>
<title>Circuit relay</title>
<body>

<p>
Egy circuit level átjáró egy olyan tűzfal, ami a kapcsolatok érvényesítése 
előtt az adatot leellenőrzi. Nem egyszerűen a csomag fejléce alapján 
határozza meg a csomag engedélyezését, vagy elutasítását, hanem még az adatok 
célba érése előtt a tartalom és az előre beállított feltételek alapján 
meghatározza, hogy mindkét végnek érvényes-e a kapcsolata, és csak utána 
kapcsolja össze az ügyfeleket adatcserére. A szűrés alapjául szolgálhat:
</p>

<ul>
<li>Forrás/célállomás IP címe</li>
<li>Forrás/célállomás port címe</li>
<li>Egy időszakasz</li>
<li>Protokoll</li>
<li>Felhasználó</li>
<li>Jelszó</li>
</ul>

<p>
Minden forgalmat ellenőriz, és monitoroz, a felesleges forgalmat eldobja.

</p>

<p>
Hátrányok:
</p>

<ul>
<li>
  A szállítási rétegekkel (Transport Layer) manipulál, így lényeges 
  módosítását igényelheti a programoknak, hogy normálisan adják át a 
  szállítási függvényeket.
</li>
</ul>

</body>
</section>
<section>
<title>Alkalmazáskapu</title>
<body>

<p>
Az alkalmazás szintű kapu behelyettesíti magát, az alkalmazás elé így a 
kommunikációt ő végzi a kliensek között. E mögött biztonságban létezhet egy 
DMZ (De-Militarized Zone, Fegyver-Mentes Övezet), vagy egy tűzfal átengedheti 
a kívülről nem kapcsolódottakat. A szűrés alapjául szolgálhat:
</p>

<ul>
<li>Fogadott vagy elutasított csomagok a forrás/célállomás IP címe alapján
</li>
<li>A csomag tartalma alapján</li>
<li>Korlátozás a fájlelérési adatbázisban a fájl típusa, kiterjesztése alapján
</li>
</ul>

<p>
Előnyök:
</p>

<ul>
<li>Cacheli a fájlokat, így növekszik a hálózat teljesítménye</li>
<li>Az összes kapcsolat részletes naplózása</li>
<li>Helyes döntések (néhány proxy szerver képes az adatok "megosztására")</li>
<li>Nincs direkt hozzáférés kívülről</li>
<li>Röptében módosíthatod a csomag tartalmát</li>
</ul>

<p>
Hátrányok:
</p>

<ul>
<li>Összetett beállítás</li>
</ul>

<p>
Az alkalmazáskapuknál figyelj arra, hogy nem biztonságos rootként futtatni, és 
a hosztok nem érhetők el az Internet felől.
</p>

<p>
Szabad alkalmazáskapu például:
</p>

<ul>
<li><uri link="http://www.squid-cache.org/">Squid</uri></li>
</ul>

</body>
</section>
<section>
<title>Iptables</title>
<body>

<p>
Ha használni szeretnéd az Iptablest, akkor azt engedélyezned kell a kernelben. 
Nekem az iptables modulokként adtam hozzá (az <c>iptables</c> parancs fogja a 
memóriába tölteni), és újrafordítottam a kernelem (, de lehet, hogy te inkább 
a kernelbe szeretnéd fordítani, mert letiltottad a Betölthető Kernelmodulokat, 
mit már előbb meg lett vitatva).  Ha szeretnél bővebb információt kapni a 
kerneled iptableshez igazításáról, kérlek látogass el az 
<uri link="http://iptables-tutorial.frozentux.net/iptables-tutorial.html#PREPARATIONS">
Iptables Oktató 5. fejezet: Előkészületek</uri> oldalra. Miután lefordítottad 
az új kernelt (vagy a kernel beállítása közben), szerezd meg az 
<c>iptables</c> parancsot. <c>emerge iptables</c>, és már működik is.
</p>

<p>
A legegyszerűbb teszt az <c>iptables -L</c> futtatása. Ha bármi hibás, akkor 
ez hibát fog adni, és ha jó, akkor kilistázza a jelenlegi konfigurációt.
</p>

<p>
Az Iptables az új és nagyon feljavított csomagszűrő a 2.4-es kernelben. Ez a 
jogutódja az előző csomagszűrőnek, az Ipchainsnak, ami a 2.2.x kernelben volt. 
Az egyik legfontosabb újítás, hogy az Iptables teljes csomagszűrést tud 
végezni. Ez azt jelenti, hogy minden megalapozott TCP összefüggés nyomon 
követhető.
</p>

<p>
Egy TCP csatlakozás csomagjai tartalmazzák a forrás IP címét, a rendeltetés IP 
címét, a forrás kapuját, a rendeltetés kapuját és egy sorrendszámot, így nem 
tud összekeveredni egy hosszabb információ a csomagok célba érkezésének 
sorrendjétől függetlenül, és tudja, hogy mely csomagokat kell újrakérni 
csomagvesztés esetén. A TCP egy kapcsolat-központú protokoll, ellentétben az 
UDP-vel, ami kapcsolódás-mentes protokoll.
</p>

<p>
Megvizsgálva a TCP csomag fejlécét, egy teljes csomagszűrő meg tudja 
határozni, hogy az egy előzőleg elfogadott csomagnak része, vagy nem része, és 
meghatározhatja, mely csomagokat kell elfogadni vagy eldobni.
</p>

<p>
Egy részleges csomagszűrővel lehetséges, hogy egy bolond csomag beszivárog az 
elfogadott csomagok közé, pedig azt a TCP csomag manipulált fejléce alapján el 
kellett volna dobni.Ismert, hogy lehetséges a SYN jelzőt, vagy egyéb 
információt manipulálni a fejlécben, és így csinálni egy hamis csomagot, ami 
egy megalapozott kapcsolat részének tünteti fel magát (mivel a csomagszűrő 
maga nem követi az összefüggéseket). A teljes csomagszűrővel lehetséges olyan 
csomagok dobása, amelyek nem egy előzőleg megalapozott kapcsolatnak a részei. 
Szintén megszünteti a kapcsolatok "lopva letapogatását", ami a portscannek egy 
olyan fajtája, ami a letapogatást olyan csomagokkal végzi, amelyek zászlókkal 
rendelkeznek, így kevésbé felderíthető a tűzfal oldalról, mint a közönséges 
SYN csomagok.
</p>

<p>
Az Iptables egyéb tulajdonságai mellett támogatja a NAT (Network Address 
Translation, Hálózati Cím Fordítás) és a sebesség-korlátozás használatát. A 
sebesség-korlátozás nagyon hasznos, ha reménytelen megakadályozni egy SYN özön 
miatti DoS (Denial of Service, Szolgáltatás-megtagadás) támadást.
</p>

<p>
Egy TCP kapcsolat megalapozott egy három utas kézfogásnál. Amikor ki akarunk 
építeni egy TCP összefüggést, a kliens oldal küld egy csomagot a 
kiszolgálónak, amiben egy SYN zászlóval van beállíva. Amikor a szerver oldal 
elfogad egy SYN csomagot, akkor arra válaszol egy SYN+ACK csomaggal. Amikor a 
kliens oldal fogadja ezt a SYN+ACK csomagot, akkor küld egy harmadik ACK 
csomagot, azaz gyakorlatilag nyugtázza a csomagot.
</p>

<p>
Egy SYN özön támadás során temérdek SYN csomagot kap a kiszolgáló, viszont a 
SYN+ACK válasz csomagot botorság elküldeni. A kliens oldal képes arra, hogy 
hamisítson egy csomagot, és hamis forrás IP címmel lássa el, ami természetesen 
nem fog reagálni. A szerver oldal megpróbálja felállítani a kapcsolatot, 
hozzáad egy belépést a várakozási sorhoz amikor fogadja a SYN csomagot, és 
készenlétbe áll az ACK csomag fogadására, hogy törölhesse a függő kapcsolatok 
listájából. A várakozási sor korlátozott száma miatt, és az összes nyitott 
kapcsolat elfoglalása miatt, a szerver képtelen új kapcsolatok fogadására. Ha 
az ACK csomagot nem fogadja egy bizonyos időn belül, akkor a várakozási sorból 
automatikusan törölve lesz a nyitott kapcsolat. Az időtúllépés beállítása 
egyénenként függ, de tipikusan 30-60 másodperc, vagy több. A kliens oldal 
támadás során rengeteg SYN csomagot hamisít különböző forrás IP címekkel, és 
minél gyorsabban próbálja a célpont IP címére küldeni. Ezáltal betölti a 
szerver oldal várakozási sorában a félig nyitott kapcsolatok helyeit, és így 
megelőzi, hogy egyéb ügyfelek létrehozhassanak szabályos kapcsolatot a 
kiszolgálóval.
</p>

<p>
Ez az az eset, ahol a sebesség korlátozást érdemes használni. Az elfogadható SYN csomagok mennyiségének a korlátozásához használd a 
<c>-m korlát --limit 1/s</c>-t. Ez beállítja a másodpercenként elfogadott SYN 
csomagok számát, és ezért korlátozza az SYN özönkor sikeresen bevetett 
csomagok számát.
</p>

<note>
Egy másik lehetőség a SYN özön megelőzésére a 
<uri link="http://cr.yp.to/syncookies.html">SYN süti</uri>, ami megengedi, 
hogy a számítógéped válaszoljon SYN csomag nélkül, így feltöltve az űrt a 
kapcsolatok várakozási sorában. A SYN süti már benne van a Linux kernelben, de 
még csak kísérleti jelleggel.
</note>

<p>
Most pedig következzenek a gyakorlati dolgok!
</p>

<p>
Amikor az Iptables betölti a kernel modulokat, akkor kapsz 5 kampót, amire a 
szabályaidat építheted. Ezeket <c>INPUT</c> (BEJÖVŐ), <c>OUTPUT</c> (ELMENŐ), 
<c>FORWARD</c> (ÁTMENŐ), <c>PREROUTING</c> (ELŐROUTOLT) és 
<c>POSTROUTING</c> (UTÓROUTOLT) nevekkel illetik. Ezeket láncoknak és 
szabályok listájának hívják. Mindegyik szabály azt mondja meg, hogyha a csomag 
fejléce így néz ki, akkor tedd ezt vele. Ha a csomag nem illik össze a 
szabállyal, akkor a lánc következő tagjával is összeegyezteti.
</p>

<p>
A szabályok helyét tedd vagy közvetlenül az 5 láncba, vagy hozz létre egy új 
láncot, és fűzd hozzá a már meglévőkhöz. Az Iptables a következő opciókat 
támogatja.
</p>

<table>
<tr>
  <th>Opció:</th>
  <th>Meghatározás:</th>
</tr>
<tr>
  <ti>-A</ti>
  <ti>Hozzáfűz (Append)</ti>
</tr>
<tr>
  <ti>-D</ti>
  <ti>Töröl (Delete)</ti>
</tr>
<tr>
  <ti>-I</ti>
  <ti>Beszúr (Insert)</ti>
</tr>
<tr>
  <ti>-R</ti>
  <ti>Lecserél (Replace)</ti>
</tr>
<tr>
  <ti>-L</ti>
  <ti>Lista (List)</ti>
</tr>
<tr>
  <ti>-F</ti>
  <ti>Töröl minden szabályt minden láncban</ti>
</tr>
<tr>
  <ti>-Z</ti>
  <ti>A számláló nullázása egy bizonyos láncban vagy mindegyik láncban</ti>
</tr>
<tr>
  <ti>-C</ti>
  <ti>Ezzel a csomaggal a lánc tesztelése</ti>
</tr>
<tr>
  <ti>-N</ti>
  <ti>Felhasználó által meghatározott lánc indítása</ti>
</tr>
<tr>
  <ti>-X</ti>
  <ti>Felhasználó által meghatározott lánc törlése</ti>
</tr>
<tr>
  <ti>-P</ti>
  <ti>A célpont láncon egy szabály cseréje</ti>
</tr>
<tr>
  <ti>-E</ti>
  <ti>Egy lánc nevének a cseréje</ti>
</tr>
<tr>
  <ti>-p</ti>
  <ti>Protokoll (Protocol)</ti>
</tr>
<tr>
  <ti>-s</ti>
  <ti>Forrás (Source) cím/maszk</ti>
</tr>
<tr>
  <ti>-d</ti>
  <ti>Rendeltetés (Destination) cím/maszk</ti>
</tr>
<tr>
  <ti>-i</ti>
  <ti>Beérkezés (Input) neve (hálózati eszköz neve)</ti>
</tr>
<tr>
  <ti>-o</ti>
  <ti>Kimenet (Output) neve (Hálózati eszköz neve)</ti>
</tr>
<tr>
  <ti>-j</ti>
  <ti>Ugrás (Jump) (célpont szabályra)</ti>
</tr>
<tr>
  <ti>-m</ti>
  <ti>Kiterjesztett összemérés (Lehet használni kiterjesztést)</ti>
</tr>
<tr>
  <ti>-n</ti>
  <ti>A kimenő címek és portok száma</ti>
</tr>
<tr>
  <ti>-t</ti>
  <ti>Tábla manipulálása</ti>
</tr>
<tr>
  <ti>-v</ti>
  <ti>Bőbeszédű mód</ti>
</tr>
<tr>
  <ti>-x</ti>
  <ti>Kiterjesztett számok (megjeleníti a pontos értékeket)</ti>
</tr>
<tr>
  <ti>-f</ti>
  <ti>Csak a második vagy a további részekkel méri össze</ti>
</tr>
<tr>
  <ti>-V</ti>
  <ti>Csomagverzió</ti>
</tr>
<tr>
  <ti>--line-numbers</ti>
  <ti>Kiírja a sorok számát listázásnál</ti>
</tr>
</table>

<p>
Elsőnek próbáljuk meg elutasítani az összes ICMP csomagot, ami a gépünkre 
érkezik. Ezzel be is vezettük magunk az Iptables használatába.
</p>

<pre caption="Minden ICMP csomag blokkolása">
# <i>iptables -A INPUT -p icmp -j DROP</i>
</pre>

<p>
Először annak a láncnak kell a nevét megadni, amelyikhez hozzá szeretnénk 
fűzni a szabályt, utána a csomag protokollját kell megadni, végül a szabályra 
értelmezett eljárást. Az eljárás lehet egy felhasználó által meghatározott 
lánc, vagy egy különleges eljárás: <c>ACCEPT</c> (ELFOGAD), 
<c>DROP</c> (ELDOB), <c>REJECT</c> (ELUTASÍT), <c>LOG</c> (NAPLÓZ), 
<c>QUEUE</c> (VÁRAKOZTAT) vagy <c>MASQUERADE</c> (MASZKOL). A példánkban a 
<c>DROP</c>ot használtuk, ami eldobja a csomagot a kliens értesítése nélkül.
</p>

<note>
A <c>LOG</c> eljárás nem szakítja meg a láncot. Ha a csomag ráillik a 
<c>LOG</c> láncszem szabályára, akkor megkezdi a kiértékelést, a csomag 
viszont folytatja útját a láncon, hozzá illő láncszemet keresve. Ez megengedi, 
hogy naplózd a csomagot, miközben a feldolgozása normálisan megtörténik.
</note>

<p>
Most próbáld meg a <c>ping localhost</c>ot. Választ fogsz kapni, mert az 
iptables csak a bejövő ICMP csomagokat szűri. Viszont egy másik gépről érkező 
ICMP csomagot már dobni fog. Egy másik gépről érkező ping választ (pong) is 
dobni fog, mert annak a tartalma is ICMP protokollal jön. Most dobjuk el az 
eddigi szabályokat, és utána megint szabad utat kapnak az ICMP csomagok.
</p>

<pre caption="Összes szabály eldobása">
# <i>iptables -F</i>
</pre>

<p>
Mostanra áttanulmányoztuk mit is jelent a teljes csomagszűrés az Iptablesben.  
Ha engedélyezni szeretném a teljes vizsgálatát a bejövő porton érkező 
csomagoknak, akkor a következő parancsot adnám ki:
</p>

<pre caption="Accept packets that originate from an already established connection">
# <i>iptables -A INPUT -i eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT</i>
</pre>

<p>
Ez elfogadja az összes csomagból azokat, amik vagy egy már megalapozott 
kapcsolatnak részei vagy azzal összefüggésben vannak az INPUT láncon.  El 
tudod dobni az összes csomagot, aminek a státusza nem érvényes, ha a láncon 
közvetlenül előtte helyezed el az 
<c>iptables -A INPUT -i eth0 -m state --state INVALID -j DROP</c> szabályt. Ez 
betölti a "státusz" vizsgálatot, így képessé válik a teljes csomagszűrésre. Ha 
neked szükséges, hogy a többiek össze tudjanak kapcsolódni a gépeddel, akkor 
használd a <c>--state NEW</c> opciót. Az Iptables tartalmaz még néhány modult 
különböző célokra. A teljesség igénye nélkül:
</p>

<table>
<tr>
  <th>Modul/Összemérő</th>
  <th>Meghatározás</th>
  <th>Bővítő opciók</th>
</tr>
<tr>
  <ti>mac</ti>
  <ti>A bejövő csomag MAC címét ellenőrző kiterjesztés</ti>
  <ti>--mac-source</ti>
</tr>
<tr>
  <ti>state</ti>
  <ti>Engedélyezi a teljes vizsgálatot</ti>
  <ti>--state (states are ESTABLISHED,RELATED, INVALID, NEW)</ti>
</tr>
<tr>
  <ti>limit</ti>
  <ti>Összeméri a sávszélesség korlátját</ti>
  <ti>--limit, --limit-burst</ti>
</tr>
<tr>
  <ti>owner</ti>
  <ti>Összeveti a csomag alkotóját különböző feltételekkel</ti>
  <ti>
    --uid-owner userid --gid-owner groupid --pid-owner processid --sid-owner
    sessionid
  </ti>
</tr>
<tr>
  <ti>unclean</ti>
  <ti>Nem feltétel, de a szokatlan vagy deformált csomagokat megvizsgálja</ti><ti></ti>
</tr>
</table>

<p>
Hozz létre egy felhasználói láncot, és használd egy már létező lánc 
láncszemeként:
</p>

<pre caption="Felhasználói lánc létrehozása">
<comment>Egy új lánc létrehozása egy új szabállyal</comment>
# <i>iptables -X mychain</i>
# <i>iptables -N mychain</i>
# <i>iptables -A mychain -i eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT</i>
<comment>Az alapértelmezett profil legyen az, hogy minden kimenő csomagot 
fogadjon el, és minden bejövő csomagot dobjon el.</comment>
# <i>iptables -P OUTPUT ACCEPT</i>
# <i>iptables -P INPUT DROP</i>
<comment>Most pedig adjuk hozzá a saját láncunk az INPUT lánchoz</comment>
# <i>iptables -A INPUT -j mychain</i>
</pre>

<p>
A láncokon használt szabály: minden kimenő csomagot elfogadunk, és az összes 
bejövő csomagot eldobjuk.
</p>

<p>
További dokumentációkat találsz a <uri
link="http://www.iptables.org/documentation/index.html#HOWTO">
Netfilter/iptables dokumentációjában</uri>.
</p>

<p>
Az előbb egy példát láttál a teljesen nyitott tűzfalra. Nézzük most az általam 
tolerált eljárást:
</p>

<ul>
<li>Kapcsolódás csak a tűzfalhoz csak az ssh-n (22-es port) keresztül 
engedélyezett</li>
<li>
  A helyi hálózaton legyen hozzáférés a HTTP, HTTPS és az SSH portokhoz (ha 
  kell, akkor a DNS-hez is)
</li>
<li>
  Az ICMP forgalom mivel tartalmazhat felesleges tartalmat, ne legyen 
  megengedve. Viszont a magunk generált ICMP csomagot át kell engedni.
</li>
<li>A Port-szken mindig legyen eldobva, és naplózva</li>
<li>Legyen elkerülve a SYN támadás</li>
<li>Minden egyéb csomag legyen eldobva és naplózva</li>
</ul>

<pre caption="/etc/init.d/firewall">
#!/sbin/runscript
IPTABLES=/sbin/iptables
IPTABLESSAVE=/sbin/iptables-save
IPTABLESRESTORE=/sbin/iptables-restore
FIREWALL=/etc/firewall.rules
DNS1=212.242.40.3
DNS2=212.242.40.51
#belső hálózat
IIP=10.0.0.2
IINTERFACE=eth0
LOCAL_NETWORK=10.0.0.0/24
#külső hálózat
OIP=217.157.156.144
OINTERFACE=eth1

opts="${opts} showstatus panic save restore showoptions rules"

depend() {
  need net
}

rules() {
  stop
  ebegin "Belső szabályok beállítása"

  einfo "Alapértelmezett szabályok eldobása"
  $IPTABLES -P FORWARD DROP
  $IPTABLES -P INPUT   DROP
  $IPTABLES -P OUTPUT  DROP

  #default rule
  einfo "Állapotfüggő lánc létrehozása"
  $IPTABLES -N allowed-connection
  $IPTABLES -F allowed-connection
  $IPTABLES -A allowed-connection -m state --state ESTABLISHED,RELATED -j ACCEPT
  $IPTABLES -A allowed-connection -i $IINTERFACE -m limit -j LOG --log-prefix \
      "Rossz csomag: ${IINTERFACE}:"
  $IPTABLES -A allowed-connection -j DROP

  #ICMP traffic
  einfo "ICMP lánc létrehozása"
  $IPTABLES -N icmp_allowed
  $IPTABLES -F icmp_allowed
  $IPTABLES -A icmp_allowed -m state --state NEW -p icmp --icmp-type \
      time-exceeded -j ACCEPT
  $IPTABLES -A icmp_allowed -m state --state NEW -p icmp --icmp-type \
      destination-unreachable -j ACCEPT
  $IPTABLES -A icmp_allowed -p icmp -j LOG --log-prefix "Rossz ICMP forgalom:"
  $IPTABLES -A icmp_allowed -p icmp -j DROP

  #Incoming traffic
  einfo "Bejövő ssh forgalom láncának létrehozása"
  $IPTABLES -N allow-ssh-traffic-in
  $IPTABLES -F allow-ssh-traffic-in
  #Flood protection
  $IPTABLES -A allow-ssh-traffic-in -m limit --limit 1/second -p tcp --tcp-flags \
      ALL RST --dport ssh -j ACCEPT
  $IPTABLES -A allow-ssh-traffic-in -m limit --limit 1/second -p tcp --tcp-flags \
      ALL FIN --dport ssh -j ACCEPT
  $IPTABLES -A allow-ssh-traffic-in -m limit --limit 1/second -p tcp --tcp-flags \
      ALL SYN --dport ssh -j ACCEPT
  $IPTABLES -A allow-ssh-traffic-in -m state --state RELATED,ESTABLISHED -p tcp --dport ssh -j ACCEPT

  #outgoing traffic
  einfo "Kimenő ssh forgalom láncának létrehozása"
  $IPTABLES -N allow-ssh-traffic-out
  $IPTABLES -F allow-ssh-traffic-out
  $IPTABLES -A allow-ssh-traffic-out -p tcp --dport ssh -j ACCEPT

  einfo "Kimenő dns forgalom láncának létrehozása"
  $IPTABLES -N allow-dns-traffic-out
  $IPTABLES -F allow-dns-traffic-out
  $IPTABLES -A allow-dns-traffic-out -p udp -d $DNS1 --dport domain \
      -j ACCEPT
  $IPTABLES -A allow-dns-traffic-out -p udp -d $DNS2 --dport domain \
     -j ACCEPT

  einfo "Kimenő http/https forgalom láncának létrehozása"
  $IPTABLES -N allow-www-traffic-out
  $IPTABLES -F allow-www-traffic-out
  $IPTABLES -A allow-www-traffic-out -p tcp --dport www -j ACCEPT
  $IPTABLES -A allow-www-traffic-out -p tcp --dport https -j ACCEPT

  #Catch portscanners
  einfo "Portscan felismerő lánc létrehozása"
  $IPTABLES -N check-flags
  $IPTABLES -F check-flags
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL FIN,URG,PSH -m limit \
      --limit 5/minute -j LOG --log-level alert --log-prefix "NMAP-XMAS:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL ALL -m limit --limit \
      5/minute -j LOG --log-level 1 --log-prefix "XMAS:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL ALL -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG \
      -m limit --limit 5/minute -j LOG --log-level 1 --log-prefix "XMAS-PSH:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL NONE -m limit \
      --limit 5/minute -j LOG --log-level 1 --log-prefix "NULL_SCAN:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL NONE -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,RST SYN,RST -m limit \
      --limit 5/minute -j LOG --log-level 5 --log-prefix "SYN/RST:"
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,FIN SYN,FIN -m limit \
      --limit 5/minute -j LOG --log-level 5 --log-prefix "SYN/FIN:"
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP

  # Apply and add invalid states to the chains
  einfo "Láncok alkalmazása az INPUT (bejövő) láncon"
  $IPTABLES -A INPUT -m state --state INVALID -j DROP
  $IPTABLES -A INPUT -p icmp -j icmp_allowed
  $IPTABLES -A INPUT -j check-flags
  $IPTABLES -A INPUT -i lo -j ACCEPT
  $IPTABLES -A INPUT -j allow-ssh-traffic-in
  $IPTABLES -A INPUT -j allowed-connection

  einfo "Láncok alkalmazása a FORWARD (átmenő) láncon"
  $IPTABLES -A FORWARD -m state --state INVALID -j DROP
  $IPTABLES -A FORWARD -p icmp -j icmp_allowed
  $IPTABLES -A FORWARD -j check-flags
  $IPTABLES -A FORWARD -o lo -j ACCEPT
  $IPTABLES -A FORWARD -j allow-ssh-traffic-in
  $IPTABLES -A FORWARD -j allow-www-traffic-out
  $IPTABLES -A FORWARD -j allowed-connection

  einfo "Láncok alkalmazása a OUTPUT (kimenő) láncon"
  $IPTABLES -A OUTPUT -m state --state INVALID -j DROP
  $IPTABLES -A OUTPUT -p icmp -j icmp_allowed
  $IPTABLES -A OUTPUT -j check-flags
  $IPTABLES -A OUTPUT -o lo -j ACCEPT
  $IPTABLES -A OUTPUT -j allow-ssh-traffic-out
  $IPTABLES -A OUTPUT -j allow-dns-traffic-out
  $IPTABLES -A OUTPUT -j allow-www-traffic-out
  $IPTABLES -A OUTPUT -j allowed-connection

  # Megengedi a klienseknek a NAT (Network Address Translation) hálózat 
  # használatát
  $IPTABLES -t nat -A POSTROUTING -o $OINTERFACE -j MASQUERADE
  eend $?
}

start() {
  ebegin "Tűzfal indítása"
  if [ -e "${FIREWALL}" ]; then
    restore
  else
    einfo "${FIREWALL} Nem létezik. Alapértelmezett szabályokat használsz."
    rules
  fi
  eend $?
}

stop() {
  ebegin "Tűzfal leállítása"
  $IPTABLES -F
  $IPTABLES -t nat -F
  $IPTABLES -X
  $IPTABLES -P FORWARD ACCEPT
  $IPTABLES -P INPUT   ACCEPT
  $IPTABLES -P OUTPUT  ACCEPT
  eend $?
}

showstatus() {
  ebegin "Státusz"
  $IPTABLES -L -n -v --line-numbers
  einfo "NAT státusz"
  $IPTABLES -L -n -v --line-numbers -t nat
  eend $?
}

panic() {
  ebegin "Pánik beállítások"
  $IPTABLES -F
  $IPTABLES -X
  $IPTABLES -t nat -F
  $IPTABLES -P FORWARD DROP
  $IPTABLES -P INPUT   DROP
  $IPTABLES -P OUTPUT  DROP
  $IPTABLES -A INPUT -i lo -j ACCEPT
  $IPTABLES -A OUTPUT -o lo -j ACCEPT
  eend $?
}

save() {
  ebegin "Tűzfal szabályainak mentése"
  $IPTABLESSAVE &gt; $FIREWALL
  eend $?
}

restore() {
  ebegin "Tűzfal szabályainak visszaállítása"
  $IPTABLESRESTORE &lt; $FIREWALL
  eend $?
}

restart() {
  svc_stop; svc_start
}

showoptions() {
  echo "Usage: $0 {start|save|restore|panic|stop|restart|showstatus}"
  echo "start)      régi szabályok elmentése, újak használata"
  echo "stop)       minden szabály eltörlése, minden kapcsolat elfogadása"
  echo "rules)      mindenképpen az új szabályok használata"
  echo "save)       szabályok elmentve a ${FIREWALL}-ba"
  echo "restore)    szabályok visszaállítva a ${FIREWALL}-pól"
  echo "showstatus) futási állapot kijelzése"
}
</pre>

<p>
Néhány jótanács tűzfal készítéséhez:
</p>

<ol>
<li>A tűzfal létrehozása előtt tervezd meg az eljárásokat</li>
<li>Egyszerű legyen</li>
<li>
Ismerd meg a protokollokat (hasznos segédeszköz az <uri
link="http://www.ietf.org/">RFC</uri>(Request For Comments, Kérések Leírása))
</li>
<li>
Tartsd észben, hogy a tűzfal egy root jogokkal futó program.
</li>
<li>Teszteld a tűzfalad</li>
</ol>

<p>
Ha úgy gondolod, hogy az Iptables megértése neked túl magas, vagy túl sok 
időbe kerül egy tisztességes tűzfal beállítása, akkor a <uri
link="http://www.shorewall.net">Shorewall</uri>-t neked találták ki. Alapvetően az Iptablest használja, de a szabályait speciális protokollismeret nélkül használhatod.
</p>

</body>
</section>
<section>
<title>Squid</title>
<body>

<p>
A Squid egy nagyon erős proxy szerver. Idő, út/URI, forrás és rendeltetés 
IP-je, domain, böngésző, azonosított felhasználói név, MIME típus és portszám 
(protokoll) alapján tud forgalmat szűrni. Lehet, hogy néhány tulajdonságot 
kihagytam, de tudd meg, hogy nagyon nehéz lenne az összeset itt felsorolni..
</p>

<p>
A következő csak példa. Hozzáadtam egy banner szűrőt egy pornó oldal alapú 
szűrő helyett. Az indok, hogy így a Gentoo.org biztos <e>nem</e> lesz a 
pornó oldalak között. És én nem akartam fáradni azzal, hogy összevadásszak 
neked pár jó oldalt.
</p>

<p>
Ez esetben a szabályok kívánalmai:
</p>


<ul>
<li>
A szörfözés (HTTP/HTTPS) meg van engedve munkaidő alatt (Hétfőtől-péntekig 
8-17-ig és szombat 8-13-ig), viszont, ha munkaidőn kívül is bent kell maradni, 
akkor nincs szörfölés
</li>
<li>
Letölthető fájlok nincsenek elfogadva 
(.exe, .com, .arj, .zip, .asf, .avi, .mpg, .mpeg, etc)
</li>
<li>
Nem szeretem a hirdetéseket, így megszűröm őket, és kicserélem egy átlátszó 
giffre (vagy ide teheted a saját alkotásaid!)
</li>
<li>
Minden egyéb kapcsolat az Internet felől és az Internet felől legyen 
visszautasítva.
</li>
</ul>

<p>
Most pedig valósítsuk meg ezt a 4 <e>könnyű</e> lépést.
</p>

<pre caption="/etc/squid/squid.conf">
# Kössük le az IP-t és a portot
http_port 10.0.2.1:3128

# Alapkonfiguráció
hierarchy_stoplist cgi-bin ?
acl QUERY urlpath_regex cgi-bin \?
no_cache deny QUERY

# Alap hozzáférési-kontroll lista létrehozása
acl all src 0.0.0.0/0.0.0.0
acl manager proto cache_object
acl localhost src 127.0.0.1/255.255.255.255

# A proxy-szerverhez hozzáférés megadása
acl localnet src 10.0.0.0/255.255.0.0

# És a portok
acl SSL_ports port 443
acl Safe_ports port 80
acl Safe_ports port 443
acl purge method PURGE

# A hozzáférési lista megadása url-eken 
# található szabályos kifejezésekkel
acl archives urlpath_regex "/etc/squid/files.acl"
acl url_ads url_regex "/etc/squid/banner-ads.acl"

# Nap és idő függő hozzáférési lista megadása
acl restricted_weekdays time MTWHF 8:00-17:00
acl restricted_weekends time A 8:00-13:00

acl CONNECT method CONNECT

# Menedzser hozzáférése elfogadva a localhostról
http_access allow manager localhost
http_access deny manager

# Csak a localhostról fogadja el a tisztítás (purge) kérését
http_access allow purge localhost
http_access deny purge

# Elutasít minden kérést az ismeretlen portokon
http_access deny !Safe_ports

# Letiltva a kapcsolódás (CONNECT) minden nem SSL porton
http_access deny CONNECT !SSL_ports

# A saját szabályaim

# Távolítsuk el a reklámokat 
# a képernyőn megjelenő oldalról
deny_info NOTE_ADS_FILTERED url_ads

# Utána pedig tiltsuk le
http_access deny url_ads

# Minden archívum letiltása
http_access deny archives

# Korlátozott hozzáférés munkaidőben
http_access allow localnet restricted_weekdays
http_access allow localnet restricted_weekends

# Tiltva minden más
http_access deny all
</pre>

<p>
A következő lépés, hogy megadod, hogy milyen fájlokat nem tölthetnek le a 
felhasználók, azaz mi számít archívumnak. Nekem a zip, viv, exe, mp3, rar, 
ace, avi, mov, mpg, mpeg, au, ra, arj, tar, gz és z fájlok vannak megadva.
</p>

<pre caption="/etc/squid/files.acl">
\.[Zz][Ii][pP]$
\.[Vv][Ii][Vv].*
\.[Ee][Xx][Ee]$
\.[Mm][Pp]3$
\.[Rr][Aa][Rr]$
\.[Aa][Cc][Ee]$
\.[Aa][Ss][Ff]$
\.[Aa][Vv][Ii]$
\.[Mm][Oo][Vv]$
\.[Mm][Pp][Gg]$
\.[Mm][Pp][Ee][Gg]$
\.[Aa][Uu]$
\.[Rr][Aa]$
\.[Aa][Rr][Jj]$
\.[Tt][Aa][Rr]$
\.[Gg][Zz]$
\.[Zz]$
</pre>

<note>
Kérlek jegyezd meg, hogy fontos []-ben megadni mind a kis-, mind a 
nagybetűket minden karakternél. Így senki sem tudja a bolond szűrőt átverni 
egy AvI-val, amikor az ténylegesen egy avi.
</note>

<p>
A következő lépés, hogy megadjuk a reklámokat azonosító reguláris 
kifejezéseket. Próbáltam sokat ideírni, de lehet, hogy neked hosszabb lesz a 
listád:
</p>

<pre caption="/etc/squid/banner-ads.acl">
/adv/.*\.gif$
/[Aa]ds/.*\.gif$
/[Aa]d[Pp]ix/
/[Aa]d[Ss]erver
/[Aa][Dd]/.*\.[GgJj][IiPp][FfGg]$
/[Bb]annerads/
/adbanner.*\.[GgJj][IiPp][FfGg]$
/images/ad/
/reklame/
/RealMedia/ads/.*
^http://www\.submit-it.*
^http://www\.eads.*
^http://ads\.
^http://ad\.
^http://ads02\.
^http://adaver.*\.
^http://adforce\.
adbot\.com
/ads/.*\.gif.*
_ad\..*cgi
/Banners/
/SmartBanner/
/Ads/Media/Images/
^http://static\.wired\.com/advertising/
^http://*\.dejanews\.com/ads/
^http://adfu\.blockstackers\.com/
^http://ads2\.zdnet\.com/adverts
^http://www2\.burstnet\.com/gifs/
^http://www.\.valueclick\.com/cgi-bin/cycle
^http://www\.altavista\.com/av/gifs/ie_horiz\.gif
</pre>

<p>
És az utolsó mozzanat, hogy megadjuk, mit tegyen az eltávolított banner 
helyére. Ez alapvetően egy fél html fájl egy 4x4-es átlátszó gif képpel.
</p>

<pre caption="/etc/squid/errors/NOTE_ADS_FILTERED">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META HTTP-EQUIV="REFRESH" CONTENT="0; URL=http://localhost/images/4x4.gif"&gt;
&lt;TITLE>HIBA: A kért URL nem engedélyezett&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;H1&gt;Szűrve!&lt;/H1&gt;
</pre>

<note>
Ne zárd be a &lt;HTML&gt; és a &lt;BODY&gt; tagokat. Ezt majd megteszi a 
squid.
</note>

<p>
Mint látod a Squid-ban rengeteg lehetőség van, valamint nagyon eredményes 
szűrő és proxy. Nagyon jó alternatíva a Squid, akár nagyon nagy hálózatok 
számára is használható. A fenti konfigurációt nagyon kicsi (1-20 felhasználós) 
hálózatokon használom.
</p>

<p>
A legjobb megoldás talán a csomagszűrés (Iptables) és az alkalmazáskapu 
(Squid) kombinálása, még akkor is, ha a Squid helyi alkalmazású, így nem tud 
senki hozzáférni kívülről. Viszont még a belső támadások elhárításával törődni 
kell.
</p>

<p>
Most a kliensek böngészőjét fel kell készíteni a proxy kiszolgáló 
használatára. Az átjáró megelőz minden kapcsolatot, amit a felhasználók a 
proxy megkerülésével szeretnének létrehozni a külső hálózattal.
</p>

<note>
Mozillában ezt a Szerkesztés->Beállítások->Haladó->Hálózat->Beállítások alatt 
tudod megtenni.
</note>

<p>
Ha párhuzamosan szeretnéd használni az iptablest is, akkor minden átmenő 
forgalmat továbbítanod kell a Squid proxynak. Add hozzá ezt a továbbító/
előfeldolgozó (forwrding/prerouting) szabályt a tűzfaladhoz:
</p>

<pre caption="Port továbbításának engedélyezése a proxyszerverhez">
# <i>iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to proxyhost:3128</i>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 443 -j DNAT --to proxyhost:3128</i>
</pre>

<note>
Ha a proxy ugyanazon a hoszton fut, mint amin a csomagszűrő--ami nem ajánlott, 
de elő szokott fordulni, ha nincs elegendő használaton kívüli géped--használd 
a <c>REDIRECT</c> célpontot a <c>DNAT</c> helyett (a <c>REDIRECT</c> közvetlen 
a localhostnak továbbítja a csomagot)
</note>

</body>
</section>
<section>
<title>Megtanult leckék</title>
<body>

<p>
Összefoglalva:
</p>

<ol>
<li>
Egy tűzfal potenciális veszélyt jelent. Egy rosszul beállított tűzfal 
rosszabb, mintha egyáltalán nem lenne.
</li>
<li>Hogyan kell egy alap tűzfalat és tiszta proxyt összehozni.</li>
<li>A jó tűzfal titka az átengedni kívánt protokollok ismerete.</li>
<li>
Az IP forgalom nem mindig törvényes tartalmat hordoz. Egy ICMP csomag 
tartalmazhat mókás adatot.
</li>
<li>Hogy tudod megakadályozni a SYN támadást.</li>
<li>A szűrő el tudja távolítani a HTTP forgalomból a képeket, és a letöltött 
vírusokat.</li>
<li>
Kombináljuk a csomagszűrést az alkalmazáskapuval a jobb ellenőrzés érdekében.
</li>
</ol>

<p>
Ha neked <e>tényleg</e> szükséged van erre, akkor menj és csinálj egy olyat, 
amire neked van szükséged.
</p>

</body>
</section>

</sections>
