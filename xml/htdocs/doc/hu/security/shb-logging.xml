<?xml version='1.0' encoding='UTF-8'?>
<!-- $Id: shb-logging.xml,v 1.1 2006/10/28 09:32:36 neysx Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.2</version>
<date>2005-11-25</date>

<section>
<title>Bevezetés</title>
<body>
<p>
Extra naplózást kell használnod, hogy elfogj egy figyelmeztetést, vagy hibát, 
ami jelezné neked, hogy folyamatban van vagy sikeresen ki lett védve egy 
támadás. A támadó sokszor letapogat vagy szondát küld a rendszerre a csapás 
előtt.
</p>

<p>
Az szintén létfontosságú, hogy a log állományaid könnyen olvashatóak, 
kezelhetőek legyenek. A Gentoo Linux alatt 3 különböző telepíthető naplózót 
találsz.
</p>

</body>
</section>
<section>
<title>A Naplózó: Syslogd</title>
<body>

<p>
A syslogd az általánosan elfogadott Linux és Unix naplózó. Van néhány log 
forgató szolgáltatása, amit a <path>/usr/sbin/logrotate</path> szolgáltat 
időzítő igénybevételével (a logrotate a <path>/etc/logrotate.conf</path> 
állománnyal állítható be). Sok területen nagyon erős tulajdonságai vannak a
<c>logrotate</c>-nak.  A rotáció gyakorisága függ a rendszer használatától.
</p>

<p>
Lejebb van egy szabvány <path>syslog.conf</path> néhány hozzáadott 
szolgáltatással. Kikommenteltük a <c>cron</c> és <c>tty</c> sorokat, és 
hozzáadtunk egy távoli naplózó szervert. A saját biztonságunk érdekében 
érdemes a naplófájlokat két helyen tárolni.
</p>

<pre caption="/etc/syslog.conf">
#  /etc/syslog.conf      A syslogd beállító fájlja.
#
#                       További információkért nézd meg a syslog.conf(5)
#                       manlapot.
#                       A Debianból származik, és ezt használja most is
#                       Daniel Robbins, 99/5/15

#
# Elősször náhány szabványos logfájl. Könnyed naplózás.
#

auth,authpriv.*                 /var/log/auth.log
*.*;auth,authpriv.none          -/var/log/syslog
cron.*                         /var/log/cron.log
daemon.*                        -/var/log/daemon.log
kern.*                          -/var/log/kern.log
lpr.*                           -/var/log/lpr.log
mail.*                          /var/log/mail.log
user.*                          -/var/log/user.log
uucp.*                          -/var/log/uucp.log
local6.debug                    /var/log/imapd.log

#
# A levelező rendszer naplózása. Itt már elrugaszkodunk, 
# és írjunk egy könnyű scriptet az elemzéshez.
#
mail.info                       -/var/log/mail.info
mail.warn                       -/var/log/mail.warn
mail.err                        /var/log/mail.err

# Az INN hír rendszer naplózása
#
news.crit                       /var/log/news/news.crit
news.err                        /var/log/news/news.err
news.notice                     -/var/log/news/news.notice

#
# Némi `catch-all' logfájl.
#
*.=debug;\
        auth,authpriv.none;\
        news.none;mail.none     -/var/log/debug
*.=info;*.=notice;*.=warn;\
        auth,authpriv.none;\
        cron,daemon.none;\
        mail,news.none          -/var/log/messages

#
# 
# Sükséghelyzetek és figyelmeztetések küldése mindenki bejelentkezéséről
#
*.emerg                         *
*.=alert                        *

#
# Szeretném, hogy az üzenetek ne minden konzolon jelenjenek meg, 
# hanem egy virtuális konzolra küldje, hogy ne zavarjanak.
#
daemon,mail.*;\
       news.=crit;news.=err;news.=notice;\
       *.=debug;*.=info;\
       *.=notice;*.=warn       /dev/tty8

# A távoli naplózó szerver beállítása
*.*                        @logserver

# A /dev/xconsole nevű csövet vezesse az 'xconsole' segédprogramra. 
# Ha használni kell, akkor hívja meg az 'xconsole'-t a '-file' opcióval:
#
#    $ xconsole -file /dev/xconsole [...]
#
# NOTESZ: Állíts be egy listát, vagy meg fogsz őrülni egy forgalmasabb napon.
#
#daemon.*,mail.*;\
#       news.crit;news.err;news.notice;\
#       *.=debug;*.=info;\
#       *.=notice;*.=warn       |/dev/xconsole

local2.*                --/var/log/ppp.log
</pre>

<p>
A támadó valószínűleg megpróbálja majd eltüntetni a nyomát a naplófájlok 
szerkesztésével vagy törlésével. A beérkezését biztosan (nagy valószínűséggel) 
nyomon tudod követni, ha egy vagy több távoli naplózó szerveren (másik gépen) 
másolatotkat tartasz a naplófájlokról. További információkért keresd fel a 
hivatalos syslogd dokumentációt a <c>man syslog</c> használatával.
</p>

</body>
</section>
<section>
<title>Metalog</title>
<body>

<p>
Frank Dennis <uri link="http://metalog.sourceforge.net">Metalogja</uri> nem 
képes egy távoli naplózó szerverrel együttműködni, de nagy előnye a 
teljesítménye, és rugalmassága. Tud naplózni a fájl neve, sürgősség, képesség 
(syslogd szerűen) és szabályos kifelyezéssel tudsz külső scripteket indítani, 
ha jellegzetes mintát talál. A megíráskor erre volt szükség.
</p>

<p>
Az alap beállítások általában elegendő szokott lenni. Ha szeretnél egy 
figyelmeztető levelet kapni, ha egy bejelentkezés rosz jelszó miadt 
sikertelenül ért véget, akkor használd a következő scriptet.
</p>

<p>
Postfixhez:
</p>

<pre caption="/usr/local/sbin/mail_pwd_failures.sh postfixhez">
#! /bin/sh
echo "$3" | mail -s "Warning (program : $2)" root
</pre>

<p>
Qmailhez:
</p>

<pre caption="/usr/local/sbin/mail_pwd_failures.sh qmailhez">
#!/bin/sh
echo "To: root
Subject:Failure (Warning: $2)
$3
" | /var/qmail/bin/qmail-inject -f root
</pre>

<p>
Tedd futtathatóvá ezzel a paranccsal: 
<c>/bin/chmod +x /usr/local/sbin/mail_pwd_failures.sh</c>
</p>

<p>
végül vedd ki a kommentet a parancs (command) sor elől a 
"Password failures"-nél a <path>/etc/metalog/metalog.conf</path>-ban:
</p>

<pre caption="/etc/metalog/metalog.conf">
command  = "/usr/local/sbin/mail_pwd_failures.sh"
</pre>

</body>
</section>
<section>
<title>Syslog-ng</title>
<body>

<p>
A syslog-ng-nek sok tulajdonsága hasonló, mint a syslog-éi és a metalog-éi egy 
kis különbséggel persze. Ez tudja a rendszerüzeneteket szint és tartalom 
szerint szűrni. Ismeri a távoli naplózást, mint a syslog, és kezeli a syslogd 
naplóit (pl. adatfolyamként egy Solarisból). Ki tudja ezeket írni egy TTY-re, 
vagy végrehajthat programot, és tud olyan is lenni, mint egy naplózó szerver. 
Alapvetően ez a legjobb egyesítése a két másik naplózónak, megspékelve egy jó 
beállítási lehetőséggel.
</p>

<p>
Lejebb egy kicsit módosított klasszikus beéllítási fájlt láthatsz.
</p>

<pre caption="/etc/syslog-ng/syslog-ng.conf">
options { chain_hostnames(off); sync(0); };

#a forrás, ahonnan a naplót olvassa
source src { unix-stream("/dev/log"); internal(); };
source kernsrc { file("/proc/kmsg"); };

#rendeltetési hely meghatározása
destination authlog { file("/var/log/auth.log"); };
destination syslog { file("/var/log/syslog"); };
destination cron { file("/var/log/cron.log"); };
destination daemon { file("/var/log/daemon.log"); };
destination kern { file("/var/log/kern.log"); };
destination lpr { file("/var/log/lpr.log"); };
destination user { file("/var/log/user.log"); };
destination mail { file("/var/log/mail.log"); };

destination mailinfo { file("/var/log/mail.info"); };
destination mailwarn { file("/var/log/mail.warn"); };
destination mailerr { file("/var/log/mail.err"); };

destination newscrit { file("/var/log/news/news.crit"); };
destination newserr { file("/var/log/news/news.err"); };
destination newsnotice { file("/var/log/news/news.notice"); };

destination debug { file("/var/log/debug"); };
destination messages { file("/var/log/messages"); };
destination console { usertty("root"); };
destination console_all { file("/dev/tty12"); };
destination xconsole { pipe("/dev/xconsole"); };

#szűrők létrehozása
filter f_authpriv { facility(auth, authpriv); };
filter f_syslog { not facility(authpriv, mail); };
filter f_cron { facility(cron); };
filter f_daemon { facility(daemon); };
filter f_kern { facility(kern); };
filter f_lpr { facility(lpr); };
filter f_mail { facility(mail); };
filter f_user { facility(user); };
filter f_debug { not facility(auth, authpriv, news, mail); };
filter f_messages { level(info..warn)
        and not facility(auth, authpriv, mail, news); };
filter f_emergency { level(emerg); };

filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_crit { level(crit); };
filter f_err { level(err); };
filter f_failed { match("failed"); };
filter f_denied { match("denied"); };

#szűrő és rendeltetési hely összekapcsolása
log { source(src); filter(f_authpriv); destination(authlog); };
log { source(src); filter(f_syslog); destination(syslog); };
log { source(src); filter(f_cron); destination(cron); };
log { source(src); filter(f_daemon); destination(daemon); };
log { source(kernsrc); filter(f_kern); destination(kern); };
log { source(src); filter(f_lpr); destination(lpr); };
log { source(src); filter(f_mail); destination(mail); };
log { source(src); filter(f_user); destination(user); };
log { source(src); filter(f_mail); filter(f_info); destination(mailinfo); };
log { source(src); filter(f_mail); filter(f_warn); destination(mailwarn); };
log { source(src); filter(f_mail); filter(f_err); destination(mailerr); };

log { source(src); filter(f_debug); destination(debug); };
log { source(src); filter(f_messages); destination(messages); };
log { source(src); filter(f_emergency); destination(console); };

#alapértelmezett napló
log { source(src); destination(console_all); };
</pre>

<p>
A sysllog-ng-t nagyon könnyű beállítani, viszont nagyon könnyű hibát véteni a 
hatalmas beállító fájlban. A szerző azt igéri, hogy a közeljövőben néhány 
funkcióval bővíti a szolgáltatásokat: titkosítás, hitelesítés, tömörítés és 
MAC (Mandatory Access Control; Kötelező Elérési Ellenőrzés) ellenőrzés. 
Ezekkel a feltételekkel ez lesz a tökéletes hálózati naplózó, mert a kém nem 
tudja majd ellopni a naplót.
</p>

<p>
A syslog-ng másik nagy előnye: nem root jogkörrel fut!
</p>

</body>
</section>

<section>
<title>Napló elemzése Logcheck-kel</title>
<body>

<p>
Persze a naplózás önmagában még csak egy félig megnyert csata. Egy alkalmazással, mint például a Logcheck, sokkal egyszerűbb szabályokra épülő naplóelemzést készíteni. A Logcheck egy script, és meghívja a <c>logtail</c> binárist. Érdemes a cron démonnal futtatni, és az végigellenőrzi a naplóid, és keresi az általad felállított szabályokra illeszkedő gyanús tevékenységet. Ha eset van, akkor a kimenetet egy rootnak címzett levélben átadja neked.
</p>
<p>
A Logcheck és a logtail az <c>app-admin/logsentry</c> csomag része.
</p>
<p>
A Logcheck tartalmaz négy előre összeállított szűrőt, hogy könnyebb legyen 
kiválogatni a fontosat a lényegtelen közül. A <path>logcheck.hacking</path> 
tartalmazza az ismeret hackelési üzeneteket; a 
<path>logcheck.violations</path> tartalmazza a biztonság megsértésének a 
felismerését; a <path>logcheck.violations.ignore</path> tartalmazza azokat a 
biztonsági sértésekre hasonlító egyezéseket, melyeket a rendszer szabályosnak 
ítélt; és a <path>logcheck.ignore</path> tartalmazza azokat a bejegyzéseket, 
melyek nem illenek az előző háromba.
</p>

<warn>
Ne ürítsd ki a <path>logcheck.violations.ignore</path> fájlt. A logcheck a 
<c>grep</c>-pel elemzi a régi bejegyzéseket, és annak néhány változata az üres 
fájlokat nem tudja értelmezni. Azaz az összes megsértést figyelmen kívül fogja 
hagyni.
</warn>
<!-- FIXME: Might want to add more details on logcheck here...I have to install
it on Gentoo to figure out how it's configured! -->
</body>
</section>

</sections>
