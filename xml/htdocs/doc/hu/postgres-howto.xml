<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/hu/postgres-howto.xml,v 1.2 2012/04/18 18:30:23 swift Exp $ -->

<guide lang="hu">
<title>PostgreSQL ismertető</title>

<author title="Szerző">
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>
<author title="Szerkesztő">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Fordító">
  <mail link="sayusi.ando@gmail.com">Csányi András</mail>
</author>
<author title="Lektor">
  <mail link="">Lónyai Gergely</mail>
</author>

<abstract>
Ennek az imsertetőnek a célja, hogy bemutassa a PostgreSQL alap szintű
beállítását. Ez elegendő lesz kisebb webes alkalmazások működéséhez
illetve olyan programok üzemeltetéséhez melyeknek szükségük
van PostgreSQL -re.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.2</version>
<date>2007-04-25</date>

<chapter>
<title>Bevezető</title>
<section>
<title>PostgreSQL bevezető</title>
<body>

<p>
Ha több fejlesztő beszélget a különböző adatbázis megoldások használatáról
általában kettő kerül szóba. Az egyik a <c>MySQL</c>, és a másik - amit ez a
dokumentum mutat be a <c>PostgreSQL</c>. Ez egy örökös vita és már régóta tart
de akárhogyan is van a PostgreSQL sokkal közelebb áll az eredeti relációs
adatbázis elképzelésekhez. Az <b>IDEGEN KULCSOK (FOREIGN KEYS)</b> csak a
MYSQL 5-ös verziójába kerültek bele. Akárhogyan is áll a dolog ez a dokumentum
feltételezi, hogy te a PostgreSQL adatbázist akarod használni. Amivel kezdünk
az a telepítés az <c>emerge</c>-vel. Az ezt követő részben az alap beállítás
kerül bemutatásra az emerge segítségével.
</p>

</body>
</section>
<section>
<title>PostgreSQL telepítése</title>
<body>

<p>
Legelső lépésként az <c>emerge</c> paranccsal fel kell telepíteni a PostgreSQL
csomagot. Futtasd le a következő kódrészletet, hogy megbizonyosodj a
beállításokról:
</p>

<pre caption="Checking the PostgreSQL build options">
# <i>emerge -pv postgresql</i>

These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild  N    ] dev-db/postgresql-8.0.4  -doc -kerberos +nls +pam +perl -pg-intdatetime +python +readline (-selinux) +ssl -tcl +xml +zlib 0 kB
</pre>

<p>
Itt található, hogy melyik beállítás mit jelent:
</p>

<table>
<tr>
  <th>USE Flag</th>
  <th>Értelmezés</th>
</tr>
<tr>
  <ti>doc</ti>
  <ti>
    Ez a USE flag be- vagy kikapcsolásával a telepített állomány
    tartalmazni fog dokumentációt a man oldalakon kívül is. Akkor érdemes
    kikapcsolni ha kevés hellyel rendelkezel vagy egyéb módon (online, stb.)
    el tudod érni a dokumentációt.
  </ti>
</tr>
<tr>
  <ti>kerberos</ti>
  <ti>
    Ha ez az opció be van kapcsolva, akkor az adminisztrátor
    <c>kerberos</c> megoldást használhat az adatbázishoz csatlakozó
    felhasználók és egyéb szolgáltatások ellenőrzésére
    (autentikálására).
  </ti>
</tr>
<tr>
  <ti>nls</ti>
  <ti>
    Ha ez az opció be van kapcsolva, akkor a PostgreSQL a nem angol
    anyanyelvű felhasználóknak szóló rendszerüzeneteket használja.
   </ti>
</tr>
<tr>
  <ti>pam</ti>
  <ti>
    Ha ez az opció be van kapcsolva, és a konfigurációs fájlok a megfelelő
    beállításokat tartalmazzák, akkor a felhasználók/szolgáltatások
    <c>PAM</c> felhasználásával képesek csatlakozni és belépni.
  </ti>
</tr>
<tr>
  <ti>perl</ti>
  <ti>
    Ha ez az opció be van kapcsolva, akkor a PostgreSQL <c>perl</c>
    kötésekkel (bindings) kerül telepítésre.
  </ti>
</tr>
<tr>
  <ti>pg-intdatetime</ti>
  <ti>
    Ha ez az opció be van kapcsolva, akkor a PostgreSQL támogatja a 64 bites
    integer dátum típusokat.
  </ti>
</tr>
<tr>
  <ti>python</ti>
  <ti>
    Ha ez az opció be van kapcsolva, akkor a PostgreSQL <c>python</c>
    kötésekkel (bindings) kerül telepítésre.
  </ti>
</tr>
<tr>
  <ti>readline</ti>
  <ti>
    Ha ez az opció be van kapcsolva, akkor a PostgreSQL támogatja a
    <c>readline</c> stílusú parancssori műveleteket. Ez magában foglalja
    a régebbi parancsok tárolását és az isearch funkciókat.
  </ti>
</tr>
<tr>
  <ti>selinux</ti>
  <ti>
    Ha ez az opció be van kapcsolva, akkor a <c>selinux</c> szabályrendszer
    érvényesül.
  </ti>
</tr>
<tr>
  <ti>ssl</ti>
  <ti>
    Ha ez az opció be van kapcsolva, akkor a PostgreSQL az <c>OpenSSL</c>
    könyvtárakat (lib) használja a szerver és a kliens közti forgalom
    titkosítására.
  </ti>
</tr>
<tr>
  <ti>tcl</ti>
  <ti>
    Ha ez az opció be van kapcsolva, akkor a PostgreSQL <c>tcl</c>
    kötésekkel (bindings) kerül telepítésre.
  </ti>
</tr>
<tr>
  <ti>xml</ti>
  <ti>
    Ha ez az opció be van kapcsolva, akkor a telepített programban
    szerepel <c>XPATH</c> támogatás. Erről és a PostgreSQL xml
    támogatásáról további információkat itt találsz:
    <uri link="http://www.throwingbeans.org/postgresql_and_xml.html">
    PostgreSQL és XML</uri>.
  </ti>
</tr>
<tr>
  <ti>zlib</ti>
  <ti>
    Ezt igazából nem a PostgreSQL használja, hanem a <c>pg_dump</c>, hogy
    képes legyen tömöríteni kiírás(dump) során.
  </ti>
</tr>
</table>

<p>
Elsőként be kell állítani a PostgreSQL-t az igényeid szerint. Kezd az
<c>emerge</c> paranccsal:
</p>

<pre caption="A PostgreSQL emerge-lése">
# <i>emerge postgresql</i>
<comment>(A kimenet rövidítve lett)</comment>
>>> /usr/lib/libecpg.so.5 -> libecpg.so.5.0
>>> /usr/bin/postmaster -> postgres
 * Make sure the postgres user in /etc/passwd has an account setup with /bin/bash as the shell
 *
 * Execute the following command
 * emerge --config =postgresql-8.0.4
 * to setup the initial database environment.
 *
>>> Regenerating /etc/ld.so.cache...
>>> dev-db/postgresql-8.0.4 merged.
</pre>

<p>
A következő részben kerül bemutatásra a PostgreSQL beállítása.
</p>

</body>
</section>
</chapter>
<chapter>
<title>PostgreSQL beállítása</title>
<section>
<title>A kezdeti(alap) adatbázis környezet beállítása</title>
<body>

<p>
Korábban már láthattad az <c>emerge</c> kimenetét ahol azt írta, hogy az
alap környezetet létre kell hozni és be kell állítani. Az ebuild
fájl létrehoz egy postgres felhasználót a rendszeren akinek <e>nincsen</e>
jelszava. Szóval mielőtt elkezdjük, a jelszót a postgres
felhasználónak meg kell adni:
</p>

<pre caption="A jelszó beállítása">
# <i>passwd postgres</i>
New UNIX password:
Retype new UNIX password:
passwd: password updated successfully
</pre>

<p>
Most jön az alap környezet beállítása:
</p>

<pre caption="Az adatbázis környezet beállítása emerge --config paranccsal">
# <i>emerge --config =postgresql-8.0.4</i>


Configuring pkg...

 * Creating the data directory ...
 * Initializing the database ...
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale C.

fixing permissions on existing directory /var/lib/postgresql/data ... ok
creating directory /var/lib/postgresql/data/global ... ok
creating directory /var/lib/postgresql/data/pg_xlog ... ok
creating directory /var/lib/postgresql/data/pg_xlog/archive_status ... ok
creating directory /var/lib/postgresql/data/pg_clog ... ok
creating directory /var/lib/postgresql/data/pg_subtrans ... ok
creating directory /var/lib/postgresql/data/base ... ok
creating directory /var/lib/postgresql/data/base/1 ... ok
creating directory /var/lib/postgresql/data/pg_tblspc ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 1000
creating configuration files ... ok
creating template1 database in /var/lib/postgresql/data/base/1 ... ok
initializing pg_shadow ... ok
enabling unlimited row size for system tables ... ok
initializing pg_depend ... ok
creating system views ... ok
loading pg_description ... ok
creating conversions ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok

WARNING: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the -A option the
next time you run initdb.

Success. You can now start the database server using:

    /usr/bin/postmaster -D /var/lib/postgresql/data
or
    /usr/bin/pg_ctl -D /var/lib/postgresql/data -l logfile start

 *
 * You can use /etc/init.d/postgresql script to run PostgreSQL instead of pg_ctl.
 *
</pre>

<p>
Az alap adatbázis környezet létrehozása megtörtént. A következő részben
megnézzük a telepítés ellenőrzését és hogy miképpen állíthatunk be új
felhasználói hozzáféréseket.
</p>

</body>
</section>
<section>
<title>PostgreSQL adatbázis beállítása</title>
<body>

<p>
Most, hogy a PostgreSQL adatbázis beállítása megtörtént érdemes ellenőrizni.
Elsőként bizonyosodjunk meg arról, hogy a szolgáltatás (service) rendben
elindul:
</p>

<pre caption="A PostgreSQL indítása">
# <i>/etc/init.d/postgresql start</i>
* Starting PostgreSQL ...                                          [ ok ]
</pre>

<p>
Ha rendben működik, akkor egy jó gondolat, hogy az alapértelmezett futási
szinthez adjuk hozzá:
</p>

<pre caption="A default futási szinthez hozzáadás">
# <i>rc-update add postgresql default</i>
* postgresql added to runlevel default
</pre>

<p>
Ha rendben megy, akkor itt az ideje, hogy kipróbáljunk egy teszt adatbázist.
Kezdésként hozzunk létre egy test adatbázist és ehhez használjuk a
<c>createdb</c> parancsot. A <c>-U</c> kapcsolóval megadható, hogy melyik
felhasználóval csatlakozom (ha nem adsz meg semmit, akkor az aktuális
felhasználó lesz), és a <c>-W</c> kapcsoló pedig a kérni fogja a jelszót.
Végezetül add meg a létrehozni kívánt adatbázis nevét:
</p>

<pre caption="Adatbázis létrehozása createdb paranccsal">
$ <i>createdb -U postgres -W test</i>
Password:
CREATE DATABASE
</pre>

<p>
Az adatbázis sikeresen elkészült akkor ezután képes különböző feladatok
elvégzésére. Menjünk tovább előre és dobjuk(töröljük) el ezt az adatbázist a
<c>dropdb</c> paranccsal:
</p>

<pre caption="Adatbázis törlése dropdb pranccsal">
$ <i>dropdb -U postgres -W test</i>
Password:
DROP DATABASE
</pre>

<p>
Nos, csak a postgres felhasználó tud parancsokat futtatni. Nyilvánvaló, hogy a
beállításnak ez a módja nem jó mert mi egy többfelhasználós környezetet
szeretnénk. A következő bekezdés megmutatja hogyan lehet dolgozni felhasználói
hozzáférésekkel.
</p>

</body>
</section>
<section>
<title>Az adatbázis beállítása felhasználói hozzáférésekkel</title>
<body>

<p>
Mint azt korábban említettük csak, mint postgres felhasználó tudunk belépni és
ez nem kívánatos egy többfelhasználós környezetben. A legtöbb esetben
különböző felhasználók és szolgáltatások férnek hozzá a szerverhez, és
mindegyikük különböző jogosultságokkal rendelkezik. Nos, ezen segít a
<c>createuser</c> parancs. Ez a parancs egy nagymértékben rugalmassá teszi az
adminisztrációt. Az alábbiakban csinálunk két felhasználót, egy 'superuser' -t
aki felvehet felhasználókat, és adminisztrátora az adatbázisnak, majd egy alap
felhasználót:
</p>

<pre caption="Superuser létrehozása">
<comment>(cseréld ki a gergely-t arra amit használni szeretnél)</comment>
$ <i>createuser -a -d -P -E -U postgres -W gergely</i>
Enter password for new user:
Enter it again:
Password:
CREATE USER
</pre>

<p>
Most egy superusert hoztunk létre. A parancs opcióiban lévő <c>-a</c> adja
meg, hogy az újonnan létrejövő felhasználó hozhat létre új felhasználókat. A
<c>-d</c> kapcsoló adja meg, hogy létrehozhat adatbázisokat. A <c>-P</c>
hatására meg kell adni a jelszót, a <c>-E</c> titkosítja a megadott jelszót.
Akkor most próbáljuk ki az új felhasználó jogosultságait.
</p>

<pre caption="Általános felhasználó létrehozása">
<comment>(az andras-t cseréld ki a számodra megfelelőre)</comment>
$ <i>createuser -A -D -P -E -U gergely -W andras</i>
Enter password for new user:
Enter it again:
Password:
CREATE USER
</pre>

<p>
Siker! Az új felhasználót a fentiekben létrehozott superuser hozta létre.
A <c>-A</c> és <c>-D</c> parancssori kapcsolók szemben a <c>-a</c> és
<c>-d</c> opciókkal megtiltják, hogy az új felhasználó létrehozzon
új felhasználókat vagy új adatbázisokat. Akkor most ezek a felhasználók
készen állnak a munkára, a következő részben új adatbázissal
foglalkozunk
</p>

</body>
</section>
</chapter>
<chapter>
<title>PostgreSQL használata</title>
<section>
<title>Jogosultságok beállítása</title>
<body>

<p>
Nos van egy felhasználó, aki létrehozhat adatbázisokat és más felhasználókat,
és az alap postgres felhasználó, aki bármit megtehet. A felhasználó aki
korábban létrejött jelenleg be tud lépni az adatbázis szerverre, és ennyi.
Általában a felhasználóknak szükségük van arra, hogy adatokat szúrjanak be
(insert), javítsák, módosítsák azokat, és időnként más feladataik is
akadhatnak. Szóval ennek a felhasználónak meg kell adni egy s mást, hogy
majdnem bármit megtehessen, azaz kell állítani a megfelelő jogosultságokat. Ez
könnyen megtehető a <c>createdb</c> parancs <c>-O</c> kapcsolójának
megadásával. Elkezdjük létrehozni az új adatbázist - aminek a neve
<b>sajatDB</b> lesz, a superuserrel és az előző teszt felhasználó (nem a
superuser) lesz a gazdája:
</p>

<pre caption="A sajatDB létrehozása">
$ <i>createdb -O andras -U gergely -W sajatDB</i>
Password:
CREATE DATABASE
</pre>

<p>
Nos, van egy sajatDB nevű adatbázisunk amihez a teszt felhasználó hozzáférhet.
Tesztelésképpen lépjünk be az andras felhasználóval a sajatDB adatbázisba. Ezt
a <c>psql</c> programmal tehetjük meg. Ez az a program amit arra használunk,
hogy parancssoron keresztül csatlakozzunk a PostgreSQL adatbázishoz. Szóval
csatlakozzunk valahogy így:
</p>

<pre caption="Belépés a sajatDB adatbázisba a teszt-felhasználóval">
$ <i>psql -U andras -W sajatDB</i>
Password:
Welcome to psql 8.0.4, the PostgreSQL interactive terminal.

Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help with psql commands
       \g or terminate with semicolon to execute query
       \q to quit

sajatDB=&gt;
</pre>

<p>
A teszt-felhasználó belépett az adatbázisba és elkezdhet használni különböző
parancsokat. Azért, hogy megmutassuk a PostgreSQL használatának ízét a
következő részben megnézünk néhány alap parancsot amelyekkel a <c>psql</c>
kliensen keresztül használhatunk.
</p>

</body>
</section>
<section>
<title>Alap PostgreSQL parancsok és egy tábla létrehozása</title>
<body>

<p>
Kezdetnek itt van egy lista arról a pár parancsról amiket meg fogunk mutatni.
</p>

<table>
<tr>
  <th>Parancs</th>
  <th>Használat</th>
  <th>MySQL azonosság</th>
</tr>
<tr>
  <ti>\c[onnect] [DBNAME|- [USER]]</ti>
  <ti>Kapcsolódás másik adatbázissal</ti>
  <ti>USE DATABASE</ti>
</tr>
<tr>
  <ti>\q</ti>
  <ti>Kilépés a <c>psql</c> kliens programból</ti>
  <ti>quit</ti>
</tr>
<tr>
  <ti>\i FILE</ti>
  <ti>Parancsok vagy parancsfájl futtatása <c>FILE</c></ti>
  <ti>source FILE</ti>
</tr>
<tr>
  <ti>\o [FILE]</ti>
  <ti>A lekérés(query) eredményének <c>FILE</c>-ba irányítása </ti>
  <ti>INTO OUTFILE, de minden kimenet a fájlba kerül
  (nem csak a SELECT parancsé)</ti>
</tr>
<tr>
  <ti>\d [NAME]</ti>
  <ti>Adatbázis vagy tábla szerkezetének megtekintése
  (más funkciókra is alkalmas)</ti>
  <ti>DESC(RIBE)</ti>
</tr>
<tr>
  <ti>\db [PATTERN]</ti>
  <ti>A <c>PATTERN</c> mintára illeszkedő táblanevek listázása
  (ha nincsen minta megadva, akkor mindent kilistáz) </ti>
  <ti>SHOW TABLES</ti>
</tr>
</table>

<p>
A  <c>\c[onnect]</c> parancs kivételével mindegyik használatát be fogjuk
mutatni a későbbiek során. Akkor most az adatbázis üres. Be kell szúrni
(INSERT) valamennyi adatot. Az adatbevitel első lépése tulajdonképpen a tábla
létrehozása. De most nincsenek táblák az adatbázisban, szóval csinálnunk kell
egyet. Ezt megtehetjük a <c>CREATE TABLE</c> paranccsal. Meg kell határozni a
tábla elemeit. Ez tartalmazza a Product ID, Description, és price oszlopokat:
</p>

<pre caption="A products tábla létrehozása">
sajatDB=> CREATE TABLE products (
sajatDB(&gt;   product_id SERIAL,
sajatDB(&gt;   description TEXT,
sajatDB(&gt;   price DECIMAL
sajatDB(&gt; );
NOTICE:  CREATE TABLE will create implicit sequence "products_product_id_seq"
for serial column "products.product_id"
CREATE TABLE
</pre>

<p>
Nyugodtan hagyd figyelmen kívül a NOTICE részt. Teljesen ártalmatlan.
Nézd meg a funkció utolsó sorát: a <c>CREATE TABLE</c> jelzi ha a parancs
sikeresen végrehajtásra került. Akkor most haladjunk előre és nézzük
meg a <c>\d</c> paranccsal, hogy mit is csináltunk:
</p>

<pre caption="Az újonnan létrehozott tábla">
sajatDB=&gt; <i>\d products</i>
                                 Table "public.products"
   Column    |  Type   |                            Modifiers
-------------+---------+------------------------------------------------------------------
 product_id  | integer | not null default nextval('public.products_product_id_seq'::text)
 description | text    |
 price       | numeric |
</pre>

<p>
A tábla valóban létrejött. Most, hogy készen van tegyünk bele adatot.
A következő szakaszban ezt fogjuk megmutatni.
</p>

</body>
</section>
<section>
<title>Adatok bevitele (INSERT) az adatbázisba</title>
<body>

<p>
Ebben a részben két lehetőségét mutatom meg az adatbázis adatokkal való
feltöltésének. Elsőként nézzük meg az <c>INSERT</c> parancsot:
</p>

<pre caption="INSERT szintaxis">
INSERT INTO [tablename] (column1,column2,column3) VALUES(value1,value2,value3)
</pre>

<p>
<c>tablename</c> tartalmazza a tábla nevét amibe az adatok belekerülnek.
(column1,column2,column3) elemekkel adhatod meg, hogy melyik oszlopba
kerüljenek adatok. Fontos, hogy a VALUES részben is ebben a sorrendben
legyenek megadva az oszlopnevek. VALUES(value1,value2,value3) a bevitelre
kerülő értékek listája. Ismételten: a values rész sorrendjének ugyanannak kell
lennie, mint a columns résznek mert: column1-be kerül a value1, column2 -be
kerül a value2, stb. A két sorrendnek egyformának <e>kell</e> lennie. Akkor
most rakjunk (insert) adatokat az adatbázisba:
</p>

<impo>
Régóta dolgozom adatbázisokkal. A személyes javaslatom, hogy a fentiek
szerint legyenek meghatározva az <c>INSERT</c> részei. A fejlesztők gyakran
hibáznak amiatt, hogy az <c>INSERT INTO</c> részben nem adják meg az oszlopok
nevét. Szerintem ez a felfogás nem hatékony, ha új oszlopot adsz az
adatbázishoz, és hibát fog okozni, ha a value részben nem a megfelelő helyen
szerepel az érték. Javaslom, hogy még akkor is határozd meg az oszlopneveket,
hogy ha 300%-ig biztos vagy abban, hogy nem fogsz új oszlopokat hozzáadni.
</impo>

<pre caption="Adatok bevitele a táblába">
sajatDB=&gt; <i>INSERT INTO products (description,price)
VALUES('A test product', 12.00);</i>
INSERT 17273 1
</pre>

<p>
Az utolsó sort meg kell magyaráznom. Az insert parancs visszaad egy OID-t
(Objektum Azonosító) és a bevitelre került sorok számát. Az OID ezen
dokumentum hatókörén kívül esik. De itt olvashatsz róla:
<uri link="http://www.postgresql.org/docs/8.1/static/datatype-oid.html">
PostgreSQL manual</uri> A szituáció a következő: van 20,000 terméked és ennyi
adatnak a bevitele a fenti insertekkel kissé unalmas és fárasztó. De nincsen
semmi elveszve. A <c>COPY</c> paranccsal is lehet adatokat bevinni a táblába
stdin-en keresztül, fájlból. A példának megfelelően feltételezzük, hogy csv
(comma separated values, vesszővel elválasztott értékek) fájlban vannak
adataid, és ez a fájl így néz ki tartalmilag:
</p>

<pre caption="products.csv">
2,meat,6.79
3,soup,0.69
4,soda,1.79
</pre>

<p>
Most használjuk a <c>COPY</c> parancsot adatok bevitelére:
</p>

<impo>
A <c>COPY FROM STDIN</c> parancsot csak a postgres felhasználó használhatja.
Ennek biztonsági okai vannak.
</impo>

<pre caption="COPY használata adatok bevitelére">
sajatDB=&gt; <i>COPY products FROM STDIN WITH DELIMITER AS ',';</i>
Enter data to be copied followed by a newline.
End with a backslash and a period on a line by itself.
>> <i>2,meat,6.79</i>
>> <i>3,soup,0.69</i>
>> <i>4,soda,1.79</i>
>> <i>\.</i>
</pre>

<p>
Szerencsétlenségünkre ez a megoldás nem ad vissza semmi információt az adatok
beviteléről, mint azt az <c>INSERT INTO</c> teszi. Honnan tudjuk, hogy az
adatok bevitelre kerültek? A következő részben megnézzük hogyan tudunk
lekérdezéseket megírni, és futtatni az adatokon, hogy ellenőrizzük a bevitt
adatokat.
</p>

</body>
</section>
<section>
<title>PostgreSQL lekérdezések</title>
<body>

<p>
Ebben a részben megnézzük a <c>SELECT</c> használatát, hogy adatokat kérjünk
le a táblából. A <c>SELECT</c> így néz ki:
</p>

<pre caption="SELECT utasítás">
SELECT (column1,column2|*) FROM (table) [WHERE (conditionals)]
</pre>

<p>
Két lehetőség van: az első a <c>*</c>, hogy minden adatot, oszlopot
lekérdezzünk. A második, hogy megadjuk mely oszlopokat akarjuk lekérni. A
második lehetőség egy jó megoldás arra, hogy csak a kiválaszott oszlop adatait
lásd. Elsőként a <c>SELECT</c> -t használjuk a <c>*</c>-al, hogy minden
oszlop megjelenjen:
</p>

<pre caption="A products tábla">
sajatDB=&gt; <i>SELECT * FROM products;</i>
 product_id |  description   | price
------------+----------------+-------
          1 | A test product | 12.00
          2 | meat           |  6.79
          3 | soup           |  0.69
          4 | soda           |  1.79
(4 rows)
</pre>

<p>
Ami itt látható az az összes adat a táblában amit korábban felvittünk. Most
pedig csak a description és a price oszlopokat akarom látni, a product id nem
érdekel. Ebben az esetben meg kell adni, hogy melyik táblákat akarom
lekérdezni:
</p>

<pre caption="Megadott oszlopok megtekintése a products táblában">
sajatDB=&gt; <i>SELECT description,price FROM products;</i>
  description   | price
----------------+-------
 A test product | 12.00
 meat           |  6.79
 soup           |  0.69
 soda           |  1.79
(4 rows)
</pre>

<p>
Most a product és a price oszlopok tartalma látható, így csak a számomra
fontos adatokra koncentrálhatok. Akkor most nézzük meg, hogy hogyan nézhetjük
meg a $2.00 -nál nagyobb értékű termékeket. Itt használjuk a <c>WHERE</c>
klauzulát ilyen módon:
</p>

<pre caption="Feltételnek megfelelő sorok lekérdezése">
sajatDB=&gt; <i>SELECT description,price FROM products WHERE price > 2.00;</i>
  description   | price
----------------+-------
 A test product | 12.00
 meat           |  6.79
(2 rows)
</pre>

<p>
Most csak a $2.00 -nál drágább termékek jelennek meg. Így sokkal jobban
koncentrálhatunk a fontos adatokra. A lekérdezések ilyen módon való használata
nagyon hatékony módja az adatok kezelésének. Ilyen módon nagyon extrém
reportok készíthetőek.
</p>

</body>
</section>
<section>
<title>Befejezés</title>
<body>

<p>
Ez volt a PostgreSQL ismertető. Egy nagy köszönet illeti Masatomo Nakanot,
az előző Gentoo PostgreSQL karbantartónak a sok segítségéért. Bármilyen
javaslatod van ezzel az ismertetővel kapcsolatban, azt a
<mail>chriswhite@gentoo.org</mail> címre küldheted. További bővebb
információkat találsz <uri link="http://www.postgresql.org">PostgreSQL
weboldalán</uri>.
</p>

</body>
</section>
</chapter>
</guide>
