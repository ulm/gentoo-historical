<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Id: home-router-howto.xml,v 1.8 2012/04/18 18:30:23 swift Exp $ -->

<guide lang="hu">

<title>Otthoni router útmutató</title>

<author title="Szerző">
  <mail link="vapier@gentoo.org">Mike Frysinger</mail>
</author>
<author title="Fordító">
  <mail link="balage@makacs.duf.hu">Németh Balázs</mail>
</author>
<author title="Lektor">
  <mail link="alephlg@gmail.com">Lónyai Gergely</mail>
</author>

<abstract>
Ez a dokumentum arról szól, hogyan változtasd a kivénhedt, otthoni Gentoo-s 
gépedet routerré, hogy az otthoni hálózatod az internetre köthesd vele.
</abstract>

<!-- The content of this document is released into the public domain -->
<license/>

<version>1.37</version>
<date>2007-04-06</date>

<chapter>
<title>Bevezető</title>
<section>
<body>

<p>
Elavult, öreg cuccokból történő saját router építesének megvannak a maga 
előnyei olyan előrecsomagolt gyári verziókkal szemben, mint például  
amilyeneket a Linksys gyárt. Az egyik legnagyobb előnye, hogy behatásod van a 
kapcsolat felett. A többi előny a fantáziádra van bízva; közel bármit meg 
tudsz csinálni ezzel a leírással, csak attól függ, hogy mire van szükséged.
</p>

<p>
Ebben az útmutatóban szó lesz arról, hogyan állíthatod be a hálózati 
címfordítást (NAT - Network Address Translation) a routeren (kernel és 
iptables használatával), hogyan adj hozzá és állíts üzembe gyakori 
szolgáltatásokat (DNS - dnsmasq, dhcp - dhcpcd, ADSL - ppp), és végezetül 
néhány bonyolultabb finomságot (port forwarding, traffic shaping, 
proxies/caching, stb...).
</p>

<p>
Mielött belevágnál, néhány alap követelménnyel rendelkezned kell. Elöször is
szükséged lesz egy számítógépre legalább két hálózati kártyával (NIC - Network
Interface Card). Majd szükséged lesz az internet kapcsolatod beállításához
szükséges adatokra (olyanok mint IP/DNS/Gateway/felhasználónév/jelszó).
Végezetül szükséged lesz némi szabadidőre és némi Gentoo szeretetre.
</p>

<p>
Az útmutatóban használt konvenciók a következőek:
</p>

<ul>
 <li>eth0 - az a hálózati kártya, amely a helyi hálózathoz kapcsolódik (LAN)
</li>
 <li>eth1 - az a hálózati kártya, amely a \"külső\" hálózathoz kapcsolódik, 
pl. internethez (WAN)</li>
 <li>LAN, amely a 192.168.0.xxx privát IP tartományt használja</li>
 <li>A router IP címe a szabvány 192.168.0.1 cím legyen</li>
 <li>router, amely 2.4 vagy 2.6 Linuxot futtat; a 2.0/2.2-as kerneleket nem 
tárgyalja ez az útmutató</li>
</ul>

<impo>
Biztonsági megfontolások miatt erősen ajánlott, hogy állíts le minden 
nélkülözhető szolgáltatást a routeren, amíg be nem állítjuk és elindítjuk a 
tűzfalat. Az jelenleg futó szolgáltatások megtekintéséhez futtasd le az 
<c>rc-status</c> parancsot.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Kernel beállítása (ismerd meg önmagad szekció)</title>
<section>
<body>

<p>
A kerneledben mindkettő hálózati kártyád driverére szükség lesz. Használd az 
<c>ifconfig</c> parancsot, hogy megállapítsd a kártyáid rendben mennek-e? A 
kimeneted kissé különbözhet az alábbi példától, de ez így van rendjén. Az a 
lényeges, hogy minkét hálózati interfészt látható legyen.
</p>

<pre caption="Hálózati kártyák ellenőrzése">
# <i>ifconfig -a</i>
eth0      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B8
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:11 Base address:0x9800 

eth1      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B9
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:10 Base address:0x9400 
</pre>

<p>
Ha nem látod a két hálózati kártyádat és nem vagy biztos benne, hogy milyen 
hálózati kártyákkal is rendelkezel, próbál lefuttatni az <c>lspci | grep 
Ethernet</c> parancsot. Ha nincs lspci, akkor a <c>emerge pciutils</c> 
eredményeképpen már biztos lesz. Miután megszerezted a szükséges 
információkat, add hozzá a megfelelő driverek támogatását a kerneledhez.
</p>

<p>
A következő dolog amire szükséged lesz, az iptables és a NAT támogatása (és 
packet shaping ha szükséged van rá). A következő lista a következő 
jelöléseket használja: (*) mindenkinek szükséges, (a) adsl használóknak 
PPPoE-n keresztül, (x) mindenkinek ajánlott, (s) csak sharper használóknak. 
Nem számít, hogy a funkciókat belefordítod-e a kerneledbe vagy csak modulba 
rakod őket, amíg a szükséges modulok be vannak töltve (a modulok betöltésének 
mikéntjét az olvasóra bízom, mint vidám felfedezendő témát).
</p>

<pre caption="Hálózati Beállítások">
Networking options  ---&gt;
   [*] TCP/IP networking
      [*] IP: advanced router
   [*] Network packet filtering (replaces ipchains)
<comment>Ha 2.4.x kernelt használsz, akkor a DHCP érdekében engedélyezd a 
következőt:</comment>
   [*] Socket Filtering

   IP: Netfilter Configuration  ---&gt;
      [*] Connection tracking (required for masq/NAT)
         [x] FTP protocol support
         [x] IRC protocol support
      [*] IP tables support (required for filtering/masq/NAT)
         [*] IP range match support
         [x] MAC address match support
         [*] Multiple port match support
         [*] Packet filtering
            [*] REJECT target support
            [x] REDIRECT target support
         [*] Full NAT
            [*] MASQUERADE target support
         [s] Packet mangling
            [s] MARK target support
         [x] LOG target support

   QoS and/or fair queueing  ---&gt;
      [s] QoS and/or fair queueing
         [s] HTB packet scheduler
         [s] Ingress Qdisc

   [a] PPP (point-to-point protocol) support
      [a] PPP filtering
      [a] PPP support for async serial ports
      [a] PPP support for sync tty ports
      [a] PPP Deflate compression
      [a] PPP BSD-Compress compression
      [a] PPP over Ethernet
</pre>

<note>
Néhány dolog különbözik a 2.4 vs 2.6 kernel között, de szerintem ezekre 
rájösz magadtól is :).
</note>

</body>
</section>
</chapter>

<chapter>
<title>Nézzük a WAN részt (vagyis AZ Internetet)</title>

<section>
<title>Bevezető</title>
<body>

<p>
Több módszer is létezik, amivel az internethez kapcsolódhatsz, így csak azt 
fogom részletezni, amellyeket jól ismerek. Ez nemmás, mint az ADSL (PPPoE) és 
a kábel modemek (statikus/dinamikus). Ha ismersz más módszereket is, akkor ne 
habozz és írj egy kis ismertetőt róla és küldd el emailben nekem. Továbbá 
nyugodtan hagyd ki azokat a fejezeteket, amelyek nem vonatkoznak rád. Ez a 
fejezet azt taglalja, hogyan kapcsoljuk a routert az internetre az eth1 
interfészen keresztül.
</p>

</body>
</section>
<section>
<title>ADSL és PPPoE</title>
<body>

<p>
Az összes gusztusos PPPoE szoftver egy kis csomagba lett egybegyúrva, amit 
manapság rp-pppoe-nak hívnak 
(<uri link="http://www.roaringpenguin.com/">Roaring Penguin</uri>), és bele 
lett integrálva a 
<uri link="http://samba.org/ppp/">standard PPP csomagba</uri>. Egyszerűen 
telepítsd fel az <c>emerge ppp</c> paranccsal és már léphetsz is tovább. 
Emlékszel, említettem, hogy szükséged lesz a felhasználónév/jelszó párosra? 
Nos mivel nem tréfáltam, remélem mostanra a kezed ügyében van! Töltsd be a 
<path>/etc/conf.d/net</path> fájlt a kedvenc szövegszerkesztődbe és állítsd 
be a szükséges adatokat.
</p>

<note>
Hogy a következő beállítások működjenek, ahhoz a baselayout-1.12.9 vagy 
frissebb verziójának kell telepítve lennie.
</note>

<pre caption="Az eth1 beállítása">
<comment>(Cseréld le a 'felhasználó'-t a felhasználónevedre és a 'jelszó'-t a 
jelszavadra)</comment>

# <i>nano /etc/ppp/pap-secrets</i>
<comment># client    server  secret</comment>
"vla9h924" * "password"
# <i>nano /etc/conf.d/net</i>
<comment>Mondjuk meg a baselayout-nak, hogy az adsl-hez használja az eth1 
interfészt a ppp0-n keresztül:</comment>
config_ppp0=( "ppp" )
link_ppp0="eth1"
plugins_ppp0=( "pppoe" )
pppd_ppp0=(
        "defaultroute"
        "usepeerdns"
<comment>Ha kíváncsi vagy egyéb beállítási lehetőségekre is, akkor nézd meg a 
/etc/conf.d/net.example fájlt, amely további példákat tartalmaz.</comment>
)
username_ppp0="felhasználó"
password_ppp0="jelszó"

# <i>ln -s net.lo /etc/init.d/net.ppp0</i>
# <i>rc-update add net.ppp0 default</i>
# <i>/etc/init.d/net.ppp0 start</i>
</pre>

<warn>
Amikor a DSL interfész feléled, létrejön a ppp0 nevű interfészt. Habár a 
hálózati kártyádat eth1-nek hívják, az IP címet mégis a ppp0 fogja megkapni. 
Így mostantól, ha a példákban 'eth1'-et látsz, akkor cseréld le 'ppp0'-ra.
</warn>

<warn>
Változtasd meg úgy a /etc/conf.d/net jogosultságát, hogy csak a root tudja 
írni/olvasni, hiszen éppen most tettünk bele felhasználónevünket és 
jelszavunkat.
</warn>

<warn>
Az <c>rp-ppoe</c> csomagról váltóknak és azoknak akik furcsa 
kapcsolatszakadásokatt tapasztalnak, ellenőrizzék a Hibaelhárítás részben az 
MTU szekciót.
</warn>

</body>
</section>

<section>
<title>Kábel és/vagy dinamikus/statikus IP</title>
<body>

<p>
Ha statikus IP címmel rendelkezel, akkor valamivel több beállítani valód van 
mintha dinamikusan kapnád a címet. Statikus címet használóknak be kell 
állítaniuk az IP címet fixre, illetve a gateway-t és a DNS szervereket is.
</p>

<pre caption="Az eth1 beállítása">
<comment>Dinamikus IP felhasználóknak:</comment>
# <i>emerge dhcpcd</i>
# <i>nano /etc/conf.d/net</i>
<comment>A következő bejegyzésre lesz szükséged:</comment>
config_eth1=( "dhcp" )

<comment>Statikus IP felhasználóknak:</comment>
# <i>nano /etc/conf.d/net</i>
<comment>A következő bejegyzésre lesz szükséged:</comment>
config_eth1=( "66.92.78.102 broadcast 66.92.78.255 netmask 255.255.255.0" )
routes_eth1=( "default gw 66.92.78.1" )
# <i>nano /etc/resolv.conf</i>
<comment>Minden DNS szerver külön sorba kerül:</comment>
nameserver 123.123.123.123

<comment>Dinamikus és statikus beállításokhoz:</comment>
# <i>ln -s net.lo /etc/init.d/net.eth1</i>
# <i>rc-update add net.eth1 default</i>
# <i>/etc/init.d/net.eth1 start</i>
</pre>

<p>
Mostanra minden szükséges dolog be lett állítva.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Nézzük a LAN részt</title>
<section>
<body>

<p>
Ez a lépés gyerekjáték lesz az előző fejezethez képest.
</p>

<pre caption="Az eth0 interfész beállítása">
# <i>nano /etc/conf.d/net</i>
<comment>A következő sort adjuk hozzá:</comment>
config_eth0=( "192.168.0.1 broadcast 192.168.0.255 netmask 255.255.255.0" )
# <i>rc-update add net.eth0 default</i>
# <i>/etc/init.d/net.eth0 start</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>LAN Szolgáltatások (mert kedves emberek vagyunk)</title>

<section>
<title>DHCP Szerver</title>
<body>

<p>
Lemerném fogadni, hogy jó lenne, ha bárki az otthonodban csak rádugná a gépét 
a hálózatra és minden elsőre működne. Nem kell emlékezni a beállítás 
számszerű adataira, nem kevernénk össze a beállításokat! Az élet ilyen kegyes 
lenne? Bemutatkozik a DHCP (Dynamic Host Configuration Protocol) és, hogy 
miért is kell majd foglalkoznod vele.
</p>

<p>
DHCP pontosan azt csinálja amit a neve jelent. Egy protokoll, amely lehetővé 
teszi, hogy dinamikusan és automatikusan bekonfiguráljuk a hálózatra dugott 
gépeket. A DHCP szervert magán a routeren fogjuk futtatni, megadva minden 
információt a hálózatunkról (érvényes IP címek, DNS szerverek, gateway-ek, 
stb...), így amikor a gépek bekapcsolnak, lefuttatnak egy DHCP klienst, 
amelyek segítségével a gépek automatikusan beállítják magukat. Semmi 
összevisszaság! A DHCP-ről bővebb információkat találhatsz a 
<uri link="http://en.wikipedia.org/wiki/DHCP">Wikipédiában</uri>.
</p>

<p>
Mi a dnsmasq nevű csomagot fogjuk használni, amely mind DHCP, mind DNS 
szolgáltatást biztosít. De most még csak a DHCP-re fókuszáljunk. Amennyiben 
más DHCP szervert szeretnél futtatni, akkor másmilyen példákat is találhatsz 
a 'Kedves Dolgok' fejezetben.Valamint, ha inkább magad ácsolnád össze a DHCP 
szerver beállításait, akkor olvasd el a <path>/etc/dnsmasq.conf</path> 
megjegyzéseit. Az összes alapértelmezett értéknek működnie kell.
</p>

<pre caption="A DHCP szerver beállítása">
# <i>emerge dnsmasq</i>
# <i>nano /etc/dnsmasq.conf</i>
<comment>A következő sor engedélyezi a dhcp-t:</comment>
dhcp-range=192.168.0.100,192.168.0.250,72h
<comment>dnsmasq lekorlátozása csak a LAN interfészre</comment>
interface=eth0

# <i>rc-update add dnsmasq default</i>
# <i>/etc/init.d/dnsmasq start</i>
</pre>

<p>
Mostanra a kis routered egy tiszteséges, kis DHCP szerver lett! Dugd rá a 
gépeket a hálózatra és láss csodát, működnek! Windows rendszereken, menj be a 
TCP/IP Beállításokba és válaszd ki az 'IP cím automatikus kérése' és a 
'DNS-kiszolgáló címének automatikus kérése' opciókat. Néha a beállítások nem 
hajtódnak végre rögtön, ha így lenne, akkor nyisd meg a parancssort és 
futtasd le az <c>ipconfig /release</c> és az <c>ipconfig /renew</c> 
parancsokat. Ennyi elég volt a Windowsból, térjünk vissza a kedvenc 
pingvinünkhöz.
</p>

</body>
</section>

<section>
<title>DNS Szerver</title>
<body>

<p>
Amikor az emberek internet oldalakat látogatnak, akkor a neveket jegyzik meg, 
nem pedig számsorozatokat. Egyszerű belátni ha belegondolunk, hogy melyiket 
könyebb megjegyezni, az ebay.com-ot vagy az 66.135.192.87 IP címet? Itt lép a 
képbe a DNS. DNS szerverek futnak szerte az interneten, így amikor valaki meg 
akarja látogatni az 'ebay.com'-ot, ezek a szerverek változtatják az 
'ebay.com'-ot (amit mi megértünk) '66.135.192.87' címmé (amit a számítógépünk 
ért meg). Ha több információra vagy kiváncsi a DNS-ről, akkor nézz utánna a 
<uri link="http://en.wikipedia.org/wiki/DNS">Wikipédiában</uri>.
</p>

<p>
Mióta a dnsmasq-ot használjuk DHCP szerverként, és mivel az tartalmaz egy DNS 
szervert is, ezért más tennivalónk nincs is! A kis routered már DNS-t is 
szolgáltat a DHCP klienseknek. Lemerném fogadni, hogy azt kívánod, bárcsak 
minden ilyen könnyű lenne ;).
</p>

<p>
Természetesen választhatsz más DNS szervert is, ha úgy tartja kedved, de a 
dnsmasq-ot pont azért választottuk, mert pontosan arra lett tervezve amire 
szükségünk van, semmi többre. Egy kis méretű DNS caching/forwarding szerverre 
a helyi hálózatunk számára. Nem olyat keresünk, amely DNS-t szolgáltat az 
egész saját domainünk számára, csak egyszerű DNS-t szolgáltasson minden 
gépnek a lanunkban.
</p>

</body>
</section>

<section>
<title>NAT (vagyis IP-masquerading)</title>
<body>

<p>
Ennél a pontnál, az emberek már beszélgethetnek egymással a hálózatodon, és a 
hosztneveket is kikereshetik a DNS-en keresztül, de még mindig nem tudnak 
kapcsolódni az internethez. Amíg neked jó hír (nagyobb sávszélesség jut 
neked), addig mások tuti, hogy nem ennyire boldogak az ötlettől.
</p>

<p>
Itt lép képbe a hálózati címfordítás (NAT = Network Address Translation). A 
NAT egy módszer arra, hogy egy privát hálózat (LAN) gépeit az internetre 
köthesd, arra az esetre ha csak limitált számú publikus IP címed van. 
Tipikusan amikor 1db publikus IP címet kapsz az internet szolgáltatódtól, de 
te szeretnéd, hogy az egész lakás kapcsolódhasson az internetre. A NAT az ami 
ezt lehetővé teszi számunkra. Bővebb információkat találhatsz a NAT-ról a 
<uri link="http://en.wikipedia.org/wiki/NAT">Wikipédiában</uri>.
</p>

<note>
Mielőtt belevágnánk, győződj meg arról, hogy a rendszeredre telepítve van az 
iptables. Bár automatikusan települ a legtöbb rendszeren, előfordulhat, hogy 
mégsem rendelkezel vele. Amennyiben így jártál, akkor egyszerűen telepítsd a 
következő paranccsal: <c>emerge iptables</c>.
</note>

<pre caption="Az iptables beállítása">
<comment>Elöször is kitöröljük az aktuális szabályainkat</comment>
# <i>iptables -F</i>
# <i>iptables -t nat -F</i>

<comment>Alapértelmezett eljárások beállítása, a nem illeszkedő forgalmakra
</comment>
# <i>iptables -P INPUT ACCEPT</i>
# <i>iptables -P OUTPUT ACCEPT</i>
# <i>iptables -P FORWARD DROP</i>

<comment>Másold ki és illeszd be ezeket a példákat ...</comment>
# <i>export LAN=eth0</i>
# <i>export WAN=eth1</i>

<comment>Blokkoljuk a szolgáltatásainkat, így csak a LAN-on belül működnek
</comment>
# <i>iptables -I INPUT 1 -i ${LAN} -j ACCEPT</i>
# <i>iptables -I INPUT 1 -i lo -j ACCEPT</i>
# <i>iptables -A INPUT -p UDP --dport bootps -i ! ${LAN} -j REJECT</i>
# <i>iptables -A INPUT -p UDP --dport domain -i ! ${LAN} -j REJECT</i>

<comment>(Opcionális) Engedélyezzük az ssh szerverünkhöz való hozzáférést a 
WAN felől</comment>
# <i>iptables -A INPUT -p TCP --dport ssh -i ${WAN} -j ACCEPT</i>

<comment>Privilegizált portokra érkező TCP / UDP csomagok eldobása</comment>
# <i>iptables -A INPUT -p TCP -i ! ${LAN} -d 0/0 --dport 0:1023 -j DROP</i>
# <i>iptables -A INPUT -p UDP -i ! ${LAN} -d 0/0 --dport 0:1023 -j DROP</i>

<comment>Végezetül beállítjuk a NAT-hoz szükséges szabályokat</comment>
# <i>iptables -I FORWARD -i ${LAN} -d 192.168.0.0/255.255.0.0 -j DROP</i>
# <i>iptables -A FORWARD -i ${LAN} -s 192.168.0.0/255.255.0.0 -j ACCEPT</i>
# <i>iptables -A FORWARD -i ${WAN} -d 192.168.0.0/255.255.0.0 -j ACCEPT</i>
# <i>iptables -t nat -A POSTROUTING -o ${WAN} -j MASQUERADE</i>
<comment>Mondjuk meg a kernelnek, hogy az ip forwardingot használja</comment>
# <i>echo 1 > /proc/sys/net/ipv4/ip_forward</i>
# <i>for f in /proc/sys/net/ipv4/conf/*/rp_filter ; do echo 1 > $f ; done</i>

<comment>És a gép tegyen így minden boot során, hogy ne kelljen kézzel mindig 
megadnunk</comment>
# <i>/etc/init.d/iptables save</i>
# <i>rc-update add iptables default</i>
# <i>nano /etc/sysctl.conf</i>
<comment>adjuk hozzá/kommentezzük ki a következő sorokat:</comment>
net.ipv4.ip_forward = 1
net.ipv4.conf.default.rp_filter = 1

<comment>Ha van dinamikus internet-címed, és elérhetővé szeretnéd tenni, 
akkor engedélyezheted:</comment>
net.ipv4.ip_dynaddr = 1
</pre>

<p>
Miután mindezt megcsináltad, a hálózatod gépei képesek lesznek úgy 
kapcsolódni az internethez, mintha közvetlenül lennének rákapcsolva az 
internetre.
</p>

<p>
Az ip_dynaddr akkor hasznos, ha dial-on-demand rendszerről van szó, vagy az
ISP-d kívülre ad dinamikus címet. Ez a probléma általában az internet teljes
beállítása után szokott előfordulni, miután megkezték a hálózaton a munkát.
Valójában ezzel a routrered mögött lévő tapasztalt felhasználók számára tudod
elsimítani az utat.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Kedves Dolgok (esős napokra)</title>

<section>
<title>Bevezető</title>
<body>

<p>
Hiszed vagy nem, kész vagy mindennel :). Innentől kezdve olyan témaköröket
fogok tárgyalni, amelyek esetleg érdekelhetnek téged. Minden dolog ebben a
fejeztben teljesen opcionális.
</p>

</body>
</section>

<section>
<title>Port Továbbítás (Port Forwarding)</title>
<body>

<p>
Előfordulhat, hogy szeretnél szolgáltatásokat futtatni egy olyan gépen amelyik
a router mögött van, vagy csak szeretnéd az életed könyebbé tenni, amikor
távolról (például a WAN felől) kapcsolódsz a géphez. Talán szeretnél FTP, 
HTTP, SSH, vagy VNC szervert futtatni az egyik, vagy több gépen is a router 
mögött. Az egyetlen akadálya mindennek, hogy csak egyetlen szolgáltatás/gép 
kombináció használható portonként. Például, nem létezik olyan praktikus 
módszer, amivel három FTP szervert állíthatnál be a routered mögött, és 
mindegyikhez a 21-es porton keresztül csatlakoznál; csak egy lehet a 21-es 
porton, míg a többinek máson kell lennie, mondjuk a 123-as és az 567-es 
porton.
</p>

<p>
Az összes port továbbítási szabály megfelel a következő sablonnak <c>iptables
-t nat -A PREROUTING [-p protocol] --dport [external port on router] -i ${WAN}
-j DNAT --to [ip/port to forward to]</c>. Sajnos az iptables, nem fogadja el a
hosztnév alapján történő azonosítást port továbbításkor. Amikor egy külső
portot továbbítasz egy belső gépen lévő, ugyanazon portra, akkor elhagyhatod a
cél port részt (destination port). Bővebb információkért lásd az iptables(8)
man oldalát.
</p>

<pre caption="Az iptables parancs futtatása">
<comment>Másold ki és illeszd be ezeket a példákat ...</comment>
# <i>export LAN=eth0</i>
# <i>export WAN=eth1</i>

<comment>2-es port továbbítása egy belső gép ssh szolgáltatásának 22-es 
portjára</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 2 -i ${WAN} -j DNAT --to 192.168.0.2:22</i>

<comment>FTP továbbítása egy belső gépre</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 21 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>HTTP továbbítása egy belső gépre</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 80 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>VNC továbbítása belső gépekre</comment>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 5900 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 5901 -i ${WAN} -j DNAT --to 192.168.0.3:5900</i>
<comment>Ha VNC-zni szeretnél a 192.168.0.3 gépre, akkor csak add a router 
hosznevéhez a ':1' szótagot</comment>

<comment>SAMBA forwarding to an internal host (excess ports to cover Windows)
</comment>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 135 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 139 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 445 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p udp --dport 137:138 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p udp --dport 445 -i ${WAN} -j DNAT --to 192.168.0.2</i>

<comment>Bittorrent forwarding</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 6881:6889 -i ${WAN} -j DNAT --to 192.168.0.2</i>

<comment>eDonkey/eMule forwarding</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 4662 -i ${WAN} -j DNAT --to 192.168.0.55</i>

<comment>Game Cube Warp Pipe támogatása</comment>
# <i>iptables -t nat -A PREROUTING -p udp --dport 4000 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>Playstation 2 Online támogatás</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11</i>

<comment>Xbox Live</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 88 -i ${WAN} -j DNAT --to 192.168.0.69</i>
</pre>

<note>
Ha van más közérdekű / király példád, akkor küldd el 
<mail link="vapier@gentoo.org">emailben nekem</mail> (angolul).
</note>

</body>
</section>

<section>
<title>Identd (IRC részére)</title>
<body>

<p>
A Internet Relay Chat, röviden IRC, az ident szolgáltatást meglehetősen 
gyakran használja. Most mivel az IRC kliensek router mögött vannak, muszály 
lesz valahogy biztosítani az ident-et mind a router, mind a kliensek számára. 
Erre a célra való a <c>midentd</c> szerver.
</p>

<pre caption="ident beállítása">
# <i>emerge midentd</i>
# <i>rc-update add midentd default</i>
# <i>/etc/init.d/midentd start</i>
</pre>

<p>
Van még néhány, másfajta ident szerver is a portage-ban. Az igényeidtől 
függően ajánlom, hogy nézz utánna következőknek: <c>oidentd</c> és az
<c>fakeidentd</c>.
</p>

</body>
</section>

<!--
<section>
<title>Traffic Shaping</title>
<body>
<p>
This is an attempt to simply and Gentooify the <uri link="http://www.tldp.org/HOWTO/ADSL-Bandwidth-Management-HOWTO/">ADSL Bandwidth Management HOWTO</uri> 
found over at the TLDP.  Feel free to refer to the original document 
for more details.
</p>

<p>
Here we will be setting up what some people refer to as a "Packet Shaper", 
<uri link="http://en.wikipedia.org/wiki/Traffic_shaping">"Traffic Shaping"</uri>, 
or <uri link="http://en.wikipedia.org/wiki/QoS">"Quality of Service"</uri>.  
Simply put, we want to setup rules on our router that will slow down 
certain activities (like sending large e-mails or downloading from P2P 
networks) while keeping other activities (like browsing the web or playing 
online video games) reasonably fast.  A 30 second difference in a video 
game is a lot worse than a 30 second difference in downloading large 
files :).
</p>

<p>
The first thing is to make sure your kernel has all the features added to 
it.  See the chapter on <uri link="#doc_chap2">Kernel setup</uri> for more 
information.  Next, you will need to <c>emerge iptables iputils</c> so that 
you will have access to the <c>iptables</c>, <c>ip</c>, and <c>tc</c> 
commands.
</p>

<p>
Before we jump into the commands, let's cover a little of the theory.  The 
way this whole system works is to classify common network streams and then 
to prioritize them.  You use iptables to classify network streams, iputils 
to define the different priority levels, and the kernel to adjust speeds.  
Just remember that although you can control outbound traffic pretty tightly 
(from the LAN to the WAN), your ability to control inbound traffic (from 
the WAN to the LAN) is somewhat limited.  Just remember that the following 
examples are to get your feet wet; if you want more then I'd suggest 
reading up on the subject.  In this example, we will be using the 
<uri link="http://luxik.cdi.cz/~devik/qos/htb/">Hierarchical Token Buckets (HTB)</uri> 
packet scheduling algorithm.  Still with me?  Great, let's start shaping :).
</p>

<pre caption="Setup">
DEV=eth1 <comment>NIC connected to WAN</comment>
RATE_OUT=100 <comment>Available outbound bandwidth (in kilobits [kb])</comment>
RATE_IN=1400 <comment>Available inbound bandwidth (in kb)</comment>

<comment>Here we initialize the priority system.  The 45 is used to set the default classification level.</comment>
ip link set dev ${DEV} qlen 30
tc qdisc add dev ${DEV} root handle 1: htb default 45
tc class add dev ${DEV} parent 1: classid 1:1 htb rate ${RATE_OUT}kbit
</pre>

<p>
Here we initialized the system which will be used to prioritize all of 
our network traffic.  We created our queue, told it to use the HTB 
algorithm, and set the default classification level to '45'.  The 
default is completely arbitrary, as are the levels we choose from 
here on out.  The only thing that matters is how the levels compare 
relatively; a level '10' packet will be given preference over a 
level '45' packet.  Let's move on to declaring different levels.
</p>

<pre caption="Declaring levels">
tc class add dev $DEV parent 1:1 classid 1:10 htb rate $rkbit ceil $tkbit prio $p
tc qdisc add dev $DEV parent 1:10 handle 10: sfq
</pre>
</body>
</section>
-->

<section>
<title>Idő szerver</title>
<body>

<p>
Egy egészséges rendszer számára létfontosságú, hogy az időt pontosan mutassa.
Az egyik általános módszer ezen cél elérése érdekében az NTP (Network Time
Protocol) használata és az ntp csomag (amely mind szerver, mind kliens részt
biztosít számunkra).
</p>

<p>
Rengeteg ember futtat ntp klienst a számítógépükön. Nyílvánvaló, hogy minél
több kliens működik a világon, az ntp szerverek terheltsége annál nagyobb 
lesz. Olyan környezetekben, mint egy otthoni hálózat, segíthetünk a terhelség 
alacsonyan tartásán, miközben továbbra is pontos időt nyújtunk az összes 
kliensnek. Nem mellékes, hogy a klienseink számára nyújtott frissítések 
sokkal gyorabbak is lesznek! Amit tennük kell nemmás, mint egy saját ntp 
szerver beállítása a routerünkön, amely szinkronizálja magát egy publikus 
szerverrel, és ezt az értéket maga szolgáltatja a klienseknek. Kezdésnek 
emergeld az ntp csomagot a routeren: <c>emerge ntp</c>.
</p>

<pre caption="NTP szerver beállítása">
# <i>nano /etc/conf.d/ntp-client</i>
<comment>Testreszabhatod, ha úgy kívánod, de az alapértelmezett is megteszi
</comment>
# <i>rc-update add ntp-client default</i>

# <i>nano /etc/ntp.conf</i>
<comment>A következő sorokat add hozzá:</comment>
restrict default ignore
restrict 192.168.0.0 mask 255.255.255.0 notrust nomodify notrap
<comment>Ezzel azt érhetjük el, hogy csak a 192.168.0.xxx IP tartományban 
lévő kliensek használhatják az ntp szerverünket</comment>
# <i>nano /etc/conf.d/ntpd</i>
<comment>Testreszabhatod, ha úgy kívánod, de az alapértelmezett is megteszi
</comment>
# <i>rc-update add ntpd default</i>

# <i>/etc/init.d/ntp-client start</i>
# <i>/etc/init.d/ntpd start</i>
</pre>

<note>
Győződj meg arról, hogy engedélyezve van a ki- és bemenő kommunikáció az ntp
portján (123/udp) miközben beállítjuk a szervert. A kliensek számára csak
kimenő kommunikáció szükséges a 123-as udp porton.
</note>

<p>
Most, a klienseiden is telepítsd az ntp csomagot: <c>emerge ntp</c>. Mivel itt
csak az ntp klienseket fogjuk használni, így a beállítása is egyszerűbb.
</p>

<pre caption="NTP kliens beállítása">
# <i>nano /etc/conf.d/ntp-client</i>
<comment>Változtasd meg 'pool.ntp.org' szervert 
a NTPCLIENT_OPTS változóban '192.168.0.1'-re</comment>
# <i>rc-update add ntp-client default</i>
# <i>/etc/init.d/ntp-client start</i>
</pre>

</body>
</section>

<section>
<title>Rsync Szerver</title>
<body>

<p>
Azoknak akiknek több Gentoo-s gépe is van az otthoni hálózatában, hasznos  
lehet ha nem kell mindegyik gépen külön kiadni az <c>emerge sync</c>-et. Egy 
saját rsync szerver felállításával, spórolhatunk a saját, illetve a Gentoo 
rsync szervereinek a sávszélességén. Meglehetősen könnyű mindezt megcsinálni.
</p>

<note>
Egy sokkal részletesebb útmutatóért látogasd meg a hivatalos 
<uri link="/doc/en/rsync.xml#local">rsync útmutatót</uri>.
</note>

<p>
Mivel minden Gentoo-s gépen szükséges az rsync, ezért emergelni se kell, mert
alapból telepítve van. Szerkesszük át az alapértelmezett
<path>/etc/rsyncd.conf</path> konfig fájlt, szedd ki a komment jelet a
<c>[gentoo-portage]</c> szekció elől, és győződj meg arról, hogy hozzáadd az
<c>address</c> opciót. Az összes többi alapértelmezett érték jó lesz nekünk.
</p>

<pre caption="Rsync szerver beállítása">
pid file = /var/run/rsyncd.pid
use chroot = yes
read only = yes
address = 192.168.0.1

[gentoo-portage]
  path = /mnt/space/portage
  comment = Gentoo Linux Portage tree
  exclude = /distfiles /packages
</pre>

<p>
Ezekután el kell indítani a szolgáltatást (emlékeztető: az alapértelmezett 
értékek jók).
</p>

<pre caption="Rsync szerver elindítása">
# <i>/etc/init.d/rsyncd start</i>
# <i>rc-update add rsyncd default</i>
</pre>

<p>
Egy dolog maradt hátra, megmondani a klienseknek, hogy mostantól a routerrel 
szinkronozálják magukat.
</p>

<pre caption="Kliensek SYNC beállítása a make.conf fájlban">
SYNC="rsync://192.168.0.1/gentoo-portage"
</pre>

</body>
</section>

<section>
<title>Mail Szerver</title>
<body>

<p>
Néha igazán hasznos lehet, ha a saját SMTP (Simple Mail Transfer Protocol)
szervert futtatsz a routereden. Meglehet a saját indokod, hogy miért akarod, 
én azért használom, mert így a leveleket a felhasználók már a küldéskor 
láthajták, valamint így a válasz/útválasztás feladata a levelező szerverre 
hárul. Néhány internetszolgáltató nem engedélyezi a levéltovábbítást, azoknak 
a fiókoknak, amelyek nem tartoznak a saját hálózatukba (pl. Verizon). 
Továbbá, könyen felgyorsíthatod a levél kézbesítési folyamatot, mivel a 
nagyméretű csatolmányok nem fogják meg a kapcsolatodat fél órára.
</p>

<pre caption="SMTP beállítása">
# <i>emerge netqmail</i>
<comment>győződj meg róla, hogy a `hostname` kimenete helyes legyen</comment>
# <i>emerge --config netqmail</i>
# <i>iptables -I INPUT -p tcp --dport smtp -i ! ${LAN} -j REJECT</i>
# <i>ln -s /var/qmail/supervise/qmail-send /service/qmail-send</i>
# <i>ln -s /var/qmail/supervise/qmail-smtpd /service/qmail-smtpd</i>
# <i>cd /etc/tcprules.d</i>
# <i>nano tcp.qmail-smtp</i>
<!--
# <i>cd /etc</i>
# <i>nano tcp.smtp</i>
-->
<comment>Az engedélyező részhez add hozzá a következő sort:</comment>
192.168.0.:allow,RELAYCLIENT=""
<!--
# <i>tcprules tcp.qmail-qmtp.cdb rules.tmp &lt; tcp.qmail-smtp</i>
# <i>tcprules tcp.smtp.cdb rules.tmp &lt; tcp.smtp</i>
-->
# <i>make</i>
# <i>rc-update add svscan default</i>
# <i>/etc/init.d/svscan start</i>
</pre>

<p>
Lelkes rajongója vagyok a qmail-nek, de nyugodtan használhatsz más 
levélküldőt is :). Amikor a gépeken állítod be az e-mail küldést, SMTP 
szervernek a routert add meg (192.168.0.1) így minden flottul fog menni. 
Bővebb dokumentációt a qmail-ről a 
<uri link="http://netqmail.org/">netqmail honlapján</uri> találhatsz.
</p>

</body>
</section>

<!--
<section>
<title>E-mail Virus Scanning</title>
<body>
<p>
If you'd like to provide e-mail virus scanning for your users, but 
don't want to have to install a virus scanner on every single machine, 
then <c>pop3vscan</c> may just be the thing for you; a transparent 
Post Office Protocol (POP) scanner.
</p>

<pre caption="Setting up pop3vscan">
TODO
</pre>

</body>
</section>
-->

<section>
<title>Teljes DHCP Szerver</title>
<body>

<p>
Korábban már használtuk a dnsmasq-ot, hogy a klienseink számára DHCP-t
szolgáltasson. A legtöbb embernek, kisméretű lanokhoz ez bőven elegendő is. De
lehet, hogy olyanra lenne szükséged, amely több funkcióval rendelkezik. Ezért
áttérünk egy fullos DHCP szerverre amelyet, a <uri
link="http://www.isc.org/products/DHCP">ISC</uri> scrácok csináltak.
</p>

<pre caption="A dhcpd beállítása">
# <i>emerge dhcp</i>
# <i>nano /etc/dhcp/dhcpd.conf</i>
<comment>(Itt a minta konfigurációs fájl:)</comment>
authoritative;
ddns-update-style interim;
subnet 192.168.0.0 netmask 255.255.255.0 {
    range 192.168.0.100 192.168.0.250;
    default-lease-time 259200;
    max-lease-time 518400;
    option subnet-mask 255.255.255.0;
    option broadcast-address 192.168.0.255;
    option routers 192.168.0.1;
    option domain-name-servers 192.168.0.1;
}
# <i>nano /etc/conf.d/dhcpd</i>
<comment>(Állítsd be: IFACE="eth0")</comment>
# <i>rc-update add dhcpd default</i>
# <i>/etc/init.d/dhcpd start</i>
</pre>

<p>
Ez eddig minimális beállítás, amellyel lecserélhetjük a dnsmasq funkcióit,
amelyeket korábban használtuk. Persze biztosan eszedbe jutott, hogy le kell
tiltatni a dnsmasq DHCP szolgáltatását, nemde? Ha nem akkor itt az idő (csak
kommentezd a <c>dhcp-range</c> beállítást a <path>/etc/dnsmasq.conf</path>
fájlban és indítsd újra a szolgáltatást).
</p>

</body>
</section>

<section>
<title>Kapcsolódás egy másik LAN-hoz (vagy kettőhöz vagy háromhoz vagy ...)</title>
<body>

<p>
Előfordulhat, hogy a routeredet szeretnéd egy másik lanhoz is hozzákapcsolni.
Lehet, hogy ideiglenesen szeretnéd a haverokat összekötni, vagy csak alapos
vagy és szeretnéd a gépeket valami alapján csoportokba osztani, vagy csak
igazán unatkozol. Bármilyen indokod is van, a routered kiterjesztése egy másik
lanhoz elég egyszerű dolog. A következő példában feltételezem, hogy ez a
hálózat a harmadi ethernet kártyán keresztül csatlakozik a routerhez, amelyre
<c>eth2</c> névvel hivatkozhatunk.
</p>

<p>
Elöször is be kell állítani az interfészt. A szükséges lépéseket lásd a <uri
link="#doc_chap4_pre1">4.1 code listing</uri> fejezetben és cseréld le az
<c>eth0</c>-t <c>eth2</c>-re és a <c>192.168.0</c> tartományt a
<c>192.168.1</c> tartományra.
</p>

<p>
Ezekután a dnsmasq szolgáltatását kell kiterjeszteni erre az interfészre. 
Ehhez szerkesszük át a <path>/etc/conf.d/dnsmasq</path> fájlt újra és adjuk 
hozzá az <c>-i eth2</c> részt a 'DNSMASQ_OPTS'-hoz; az -i többszöri használata
megengedett. Azután szerkesszük a <path>/etc/dnsmasq.conf</path> fájlt és
adjunk hozzá mégegy dhcp-range sort, ahogy a <uri link="#doc_chap5_pre1">5.1
code listing</uri> fejezetben tettük, illetve cseréljük le a 
<c>192.168.0</c>-t a következőre <c>192.168.1</c>. Több dhcp-range sor 
használata szintén megengedett.
</p>

<p>
Végezetül nézzük át a <uri link="#doc_chap5_pre2">5.2 code listing</uri>
fejezetben lévő szabályokat, és duplázzuk meg azokat a szabályokat, amelyekben
szerepel a <c>-i ${LAN}</c> kifejezés. természetesen, létrehozhatsz mégegy
változót, mondjuk <c>LAN2</c> névvel, hogy átláthatóbb legyen az egész.
</p>

</body>
</section>

</chapter>

<chapter>
<title>Hibakeresés</title>

<section>
<title>Hasznos eszközök</title>
<body>

<p>
Ha problémákba ütközöl a gépeiddel történő kommunikációban, próbáld ki a
következő eszközöket (az összes a <c>net-analyzer</c> portage kategóriában
található meg):
</p>

<table>
<tr>
  <th>Segédprogram</th>
  <th>Leírás</th>
</tr>
<tr>
  <ti>wireshark</ti>
  <ti>GUI eszköz, amellyel a nyers hálózati adatokat nézhetjük át a szűrőknek 
megfelelően</ti>
</tr>
<tr>
  <ti>tcpdump</ti>
  <ti>konzolos eszköz, amellyel a nyers hálózati adatokat nézhetjük át a 
szűrőknek megfelelően</ti>
</tr>
<tr>
  <ti>iptraf</ti>
  <ti>ncurses alapú IP LAN monitor</ti>
</tr>
<tr>
  <ti>ettercap</ti>
  <ti>ncurses alapú hálózat monitor/kontrol</ti>
</tr>
</table>

</body>
</section>

<section>
<title>A DHCP nem indul el</title>
<body>

<p>
Amikor először futtatjuk a dhcp init.d szkriptjét, előfordulhat, hogy nem 
indul el és nem ad semmi használató információt sem a hibáról.
</p>

<pre caption="Példa DHCP indulási hibára">
# <i>/etc/init.d/dhcp start</i>
 * Setting ownership on dhcp.leases ...          [ ok ]
 * Starting dhcpd ...                            [ !! ]
</pre>

<p>
A trükk abban van, hogy tudni kell, hova küldi a dhcpd a kimenetét. Egyszerűen
nézd át a <path>/var/log</path> könyvtárat és olvasd át a naplófájlokat. Mivel
a pontos naplófájl függ attól, hogy milyen syslog csomagot használsz, ezért
próbáld a <c>grep -Rl dhcpd /var/log</c> paranccsal szűrni a lehetséges
bejegyzéseket. A legnagyobb az esély arra, hogy elgépeltél valamit a konfig
fájlokban. Továbbá kipróbálhatod a dhcpd-t előtérben futtatni és bekapcsolt
debug kimenettel, így ni: <c>dhcpd -d -f</c>.
</p>

</body>
</section>

<section>
<title>Érvénytelen MTU Érték</title>
<body>

<p>
Ha furcsa hibákba ütközöl (mint például néhány oldal nem töltődik be, míg 
mások igen), előfordulhat, hogy MTU útvonal felderítési problémába ütköztél. A
leggyorsabb módszer, ha a következő iptables paranccsal leteszteljük:
</p>

<pre caption="Vizsgáljuk meg az MTU hiba lehetőségét">
# <i>iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu</i>
</pre>

<p>
Ez az összes új kapcsolatra érvényes lesz, így egyszerűen csak frissítsd a
problémás weboldalt, hogy teszteld ez okozza-e a problémát? Abban az esetben 
ha ez segít, a szabvány MTU érték a 100mbit-es ethernet kapcsolatokhoz 
<c>1500</c>> szintén ennyi PPPoA kapcsolathoz, míg PPPoE kapcsolatokhoz 
<c>1492</c>. Bővebb információkért olvasd el a 
<uri link="http://lartc.org/howto/">Linux Advanced Routing &amp; Traffic 
Control HOGYAN</uri> 15. fejezetét.
</p>

</body>
</section>

</chapter>

<chapter>
<title>Megjegyzések</title>
<section>
<body>

<p>
Nincs más hozzáfűznivalóm, mint ha bármely problémád adódik az útmutatóval,
akkor vedd fel <mail link="vapier@gentoo.org">velem</mail> a kapcsolatot, 
vagy küldd el a hibát a <uri link="http://bugs.gentoo.org/">Gentoo 
Hibakeresés Weboldala</uri> oldalra. Ha olyan ötleteid lennének, amelyekkel 
javítani lehetne ezt az útmutatót, küldd el nekem bármi is legyen és 
beleteszem az útmutatóba.
</p>

<p>
Megjegyzés a magyar fordításhoz: Igyekeztem megtartani a legtöbb szakmai
kifejezést, bár van ahol keverve használtam az angol/magyar kifejezést a jobb
érthetőség érdekében (pl. forwarding/továbbítás). Amennyiben valamilyen
fordítási hibát találsz, vagy elgépelést, úgy kérlek jelezd <mail
link="balage@makacs.duf.hu">felém</mail>.
</p>

</body>
</section>
</chapter>
</guide>
