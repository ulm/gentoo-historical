<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/hu/handbook/2007.0/hb-install-hppa-disk.xml,v 1.1 2007/05/09 09:15:37 neysx Exp $ -->

<sections>

<version>8.0</version>
<date>2007-05-07</date>

<section>
<title>Pár szó az úgynevezett blokkeszközökről</title>
<subsection>
<title>Blokkeszközök</title>
<body>

<p>
Ahhoz, hogy tovább léphessünk, először alaposan áttekintjük a Gentoo Linux, 
és általában a Linuxok lemezkezelését. Szó lesz a Linux fájlrendszerekről,
partíciókról és blokkeszközökről. Miután tisztában leszel a lemez- és 
fájlkezelés minden csínjával-bínjával, végigvezetünk a Gentoo Linux 
telepítéséhez szükséges partíciók és fájlrendszerek létrehozásán.
</p>

<p>
Kezdjük mindjárt a <e>blokkeszközökkel</e>. A legismertebb ilyen eszköz
valószínűleg az, amelyik az első SCSI merevlemezt jelenti a Linux 
rendszerekben: a <path>/dev/sda</path>.
</p>

<p>
Az ilyen fenti blokkeszközök nem mások, mint absztrakt kapcsolódási pontok a 
lemezegységhez. A felhasználói programok ezeket az eszközöket használhatják a 
lemez eléréséhez, anélkül, hogy tudnák, az most IDE, SCSI vagy valami más 
fajta egység. A program egyszerűen csak 512 bájtos, összefüggő, 
véletlenszerűen elérhető blokkokban megcímzi a lemezt.
</p>

</body>
</subsection>
<subsection>
<title>Partíciók és szeletek</title>
<body>

<p>
Igaz, hogy elméletben lehetséges az egész lemezt egyben használni, s így 
telepíteni a Linuxot, de a gyakorlatban szinte sosem csinálják így. Ehelyett a 
teljes blokkeszközt feldarabolják kisebb, könnyebben kezelhető 
blokkeszközökre. A legtöbb rendszeren ezeket <e>particióknak</e> hívják. Mások 
hasonló technikát alkalmaznak, de <e>szeleteknek (slice)</e> nevezik őket.
</p>

</body>
</subsection>
</section>
<section>
<title>Hogyan tervezzük meg a partíció-kiosztást?</title>
<subsection>
<title>Hány és mekkora?</title>
<body>

<p>
A partíciók száma erősen függ a használat módjától. Például, ha sok 
felhasználód lesz, valószínűleg külön akarod tenni a <path>/home</path>-ot, 
mivel így nő a biztonság, és a mentés is egyszerűbb. Ha levelező szervernek 
telepíted a Gentoo-t, érdemes a <path>/var</path>-t külön helyre rakni, mivel 
ezen belül tárolódnak a levelek. Ha ehhez megfelelő fájlrendszert választasz, 
nagymértékben megnő a rendszered teljesítménye. A játékszervereknél az 
<path>/opt</path> mehet külön - a játékok szerverei többnyire ide kerülnek. Az 
oka hasonló, mint a <path>/home</path> esetén: biztonság és mentés. A 
<path>/usr</path>-t érdemes minél nagyobbra hagyni, mert nem csak az 
alkalmazások többsége települ ide, de maga a Portage-fa is körülbelül 500MB 
helyet foglal, nem számítva az itt tárolt forráskódokat.
</p>

<p>
Ebből már láthatod, a kérdésre adott válasz leginkább attól függ, mit akarsz
elérni. A különálló partícióknak vagy köteteknek az alábbi előnyei vannak:
</p>

<ul>
<li>
  A leggyorsabb fájlrendszert választhatod ki minden partíciónak vagy kötetnek
</li>
<li>
  A rendszered nem fog kifutni az összes szabad helyből, ha egy hibás program
  folyamatosan fájlokat ír egy partícióra vagy kötetre
</li>
<li>
  Ha szükséges, a fájlrendszer-ellenőrzés ideje csökkenthető, mivel a több
  ellenőrzés egymással párhuzamosan futtatható (bár ez inkább akkor előny, ha
  több lemezegységed van)
</li>
<li>
  A biztonság növelhető azzal, hogy egyes partíciókat, köteteket csak 
  olvashatóan, nosuid (a setuid bitet nem veszi figyelembe) és noexec (a
  futtatható bitet nem veszi figyelembe) jellemzőkkel csatolsz
</li>
</ul>

<p>
A több partíciónak azonban hátránya is van: ha nem állítod be megfelelően,
a rendszered egyes helyein túl sok, máshol túl kevés szabad helyed marad.
A SCSI és SATA eszközökre ráadásul legfeljebb 15 partíciót rakhatsz.
</p>

</body>
</subsection>
</section>
<section>
<title>A lemez particionálása az fdisk programmal HPPA rendszeren</title>
<body>

<p>
Az <c>fdisk</c> program segítségével készítheted el a partícióidat:
</p>

<pre caption="A lemez partícionálása">
# <i>fdisk /dev/sda</i>
</pre>

<p>
A HPPA rendszerek a PC-ken szokásos DOS partíciós táblákat használják.
Ennek létrehozásához az <c>o</c> parancsot kell használnod:
</p>

<pre caption="DOS partíciós tábla létrehozása">
# <i>fdisk /dev/sda</i>

Command (m for help): <i>o</i>
Building a new DOS disklabel.
</pre>

<p>
A PALO-nak (a HPPA rendszerbetöltője) egy speciális partíció is kell, hogy
működjön. Egy legalább 16MB-os darab, a lemez elején, <e>f0</e> (Linux/PA-RISC 
boot) típusú.
</p>

<impo>
Ha átugrod ezt a részt, és nem készíted el a speciális PALO partíciót, a
gép megharagszik rád és nem fog elindulni. Vigyázz arra is, hogy ha a lemezed
nagyobb, mint 2GB, a speciális boot partíció a lemez első 2GB-os részében
legyen! A PALO nem tudja beolvasni a 2GB-os limit után elhelyezkedő kernelt.
</impo>

<pre caption="Egy egyszerű partíció-beállítás">
# <i>cat /etc/fstab</i>
/dev/sda2    /boot   ext3    noauto,noatime   1 1
/dev/sda3    none    swap    sw               0 0
/dev/sda4    /       ext3    noatime          0 0

# <i>fdisk /dev/sda</i>

Command (m for help): <i>p</i>

Disk /dev/sda: 4294 MB, 4294816768 bytes
133 heads, 62 sectors/track, 1017 cylinders
Units = cylinders of 8246 * 512 = 4221952 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           8       32953   f0  Linux/PA-RISC boot
/dev/sda2               9          20       49476   83  Linux
/dev/sda3              21          70      206150   82  Linux swap
/dev/sda4              71        1017     3904481   83  Linux
</pre>

<p>
Most, hogy elkészültek a partícióid, folytathatod a <uri link="#filesystems">
Fájlrendszerek létrehozása</uri> fejezettel.
</p>

</body>
</section>
<section id="filesystems">
<title>Fájlrendszerek létrehozása</title>
<subsection>
<title>Bevezetés</title>
<body>

<p>
A partícióid elkészültek, ideje lenne valamilyen tenni is rájuk. Ha nem akarsz 
azzal bajlódni, hogy milyen típust válassz, és megfelel az, amit a Kézikönyv 
példáiban használunk, átugorhatsz a <uri link="#filesystems-apply">
Fájlrendszer létrehozása egy partíción</uri> fejezetre. Ha igen, akkor lássuk,
mik is ezek a különféle fájlrendszerek...
</p>

</body>
</subsection>
<subsection>
<title>Fájlrendszerek?</title>
<body>

<p>
Többféle fájlrendszer közül is választhatsz. Az ext2, ext3, XFS és reiserfs 
stabilan működik HPPA architektúrán. A többi még elég kísérleti jellegű.
</p>

<p>
Az <b>ext2</b> a leginkább kipróbált, igazi Linuxos fájlrendszer. Nem ismeri
a metaadat-naplózást, ezért az gép indulásakor történő ext2-ellenőrzés sokáig
eltarthat. Manapság többféle új generációs naplózó fájlrendszer közül lehet 
választani, melyek nagyon gyorsan ellenőriznek, ezért inkább ezeket érdemes
használni. A naplózó rendszerek megszüntetik a rendszerindítás során fellépő
hosszú várakozásokat, amikor a rendellenes állapotban lévő fájlrendszereket
kell kijavítani.
</p>

<p>
Az <b>ext3</b> lenne az ext2 rendszer naplózó változata. Ismeri a metaadat-
naplózást (vagyis gyorsan visszaállítja a sérült adatokat), valamint többféle 
fejlett naplózó módot is, mint például teljes és rendezett adatnaplózás. Egy 
átdolgozott B*-fa indexelést használ, ami lehetővé teszi, hogy a lehető 
legtöbb helyzetben kitűnően használható legyen. Az ext3 egy nagyon jó és 
megbízható fájlrendszer.
</p>

<p>
A <b>ReiserFS</b> egy B*-fa alapú fájlrendszer, nagyon jó átlagos 
teljesítménnyel. Ha kisméretű (4k-nál kisebb) fájlokkal kell dolgozni, bőven 
felülmúlja az ext2 és az ext3 teljesítményét, akár 10-15-szörösen is. Jól 
skálázható, metaadat-naplózást is ismer. A 2.4.18-as kerneltől kezdve 
megbízható, használható rendszer, mind átlagos, mind extrém használatra (mint 
például nagyon nagy fájlrendszerek létrehozása, rengeteg apró fájl, vagy 
nagyon nagy fájlok és több tízezer fájlt tartalmazó könyvtárak kezelése).
</p>

<p>
Az <b>XFS</b> is metaadat-naplózó fájlrendszer, rengeteg kiegészítő 
szolgáltatással, elsődlegesen a skálázhatóságra tervezve. Ezt csak felső 
kategóriás SCSI vagy optikai szálas adattárolók esetén javasoljuk, melyek 
önálló szünetmentes tápegységen vannak. Mivel az XFS nagyon agresszív módon 
cache-el (tárolja az átvitt adatokat a rendszer-memóriában), egy rosszul 
tervezett program (melyek nem elég alaposak, amikor fájlokat kell lemezre 
írniuk - s elég sok ilyen létezik) rengeteg adatot elveszíthet egy hirtelen 
rendszerleállás miatt.
</p>

<p>
A <b>JFS</b> az IBM nagyteljesítményű naplózó fájlrendszere. Nemrégiben vált
teljesen megbízhatóvá, így még nincs elég tapasztalat ahhoz, hogy a 
pozitívumairól, negatívumairól, vagy a megbízhatóságáról beszélhessünk.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Fájlrendszer létrehozása egy partíción</title>
<body>

<p>
Ahhoz, hogy egy partíción vagy köteten fájlrendszert hozz létre, az adott FS 
saját eszközeit kell használnod:
</p>

<table>
<tr>
  <th>Fájlrendszer</th>
  <th>A létrehozás parancsa</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Ha például a boot partícióra (jelen példánkban <path>/dev/sda2</path>) akarsz
ext2 rendszert tenni, a root-ra pedig (jelen példánkban <path>/dev/sda4</path>)
ext3-t, így csinálhatod meg:
</p>

<pre caption="Fájlrendszer létrehozása egy partíción">
# <i>mke2fs /dev/sda2</i>
# <i>mke2fs -j /dev/sda4</i>
</pre>

<p>
Most pedig hozd létre a választott fájlrendszereidet az újonnan
létrehozott partícióidon (vagy logikai köteteiden).
</p>

</body>
</subsection>
<subsection>
<title>A swap partíció bekapcsolása</title>
<body>

<p>
Az <c>mkswap</c> paranccsal lehet inicializálni a swap partíciót:
</p>

<pre caption="Swap bejegyzés létrehozása">
# <i>mkswap /dev/sda3</i>
</pre>

<p>
A swap partíció aktiválásához pedig a <c>swapon</c> parancs kell:
</p>

<pre caption="Swap partíció bekapcsolása">
# <i>swapon /dev/sda3</i>
</pre>

<p>
Hozd létre és kapcsold be a swap-et a fenti parancsokkal!
</p>

</body>
</subsection>
</section>
<section>
<title>Csatolás</title>
<body>

<p>
Készen vannak a partícióid, rajtuk az üres fájlrendszerekkel. Itt az ideje, 
hogy csatoljuk őket a <c>mount</c> paranccsal. Ne felejtsd el előtte 
létrehozni az új partícióidhoz szükséges csatolási könyvtárakat! A példánkban 
a root és a boot partíciókat csatoljuk:
</p>

<pre caption="Partíciók csatolása">
# <i>mount /dev/sda4 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/sda2 /mnt/gentoo/boot</i>
</pre>

<note>
Ha a <path>/tmp</path> könyvtárat külön partíción akarod tárolni, a csatolás 
után meg kell változtatnod a jogosultságait: 
<c>chmod 1777 /mnt/gentoo/tmp</c>. Ugyanez vonatkozik a <path>/var/tmp</path> 
könyvtárra is.
</note>

<p>
Ugyancsak csatolnunk kell a proc fájlrendszert is (ez egy virtuális 
kapcsolódási pont a kernelhez) a <path>/proc</path> könyvtárba. De először el 
kell helyeznünk az állományainkat az új partícióinkon.
</p>

<p>
Most pedig folytasd a <uri link="?part=1&amp;chap=5">Gentoo Install fájlok 
telepítése</uri> fejezettel.
</p>

</body>
</section>
</sections>
