<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/hu/handbook/2007.0/hb-install-ppc-disk.xml,v 1.3 2007/07/13 08:40:58 nightmorph Exp $ -->

<sections>

<version>8.0</version>
<date>2007-05-07</date>

<section>
<title>Pár szó az úgynevezett blokkeszközökről</title>
<subsection>
<title>Blokkeszközök</title>
<body>

<p>
Ahhoz, hogy tovább léphessünk, először alaposan áttekintjük a Gentoo Linux, 
és általában a Linuxok lemezkezelését. Szó lesz a Linux fájlrendszerekről,
partíciókról és blokkeszközökről. Miután tisztában leszel a lemez- és 
fájlkezelés minden csínjával-bínjával, végigvezetünk a Gentoo Linux 
telepítéséhez szükséges partíciók és fájlrendszerek létrehozásán.
</p>

<p>
Kezdjük mindjárt a <e>blokkeszközökkel</e>. A legismertebb ilyen eszköz
valószínűleg az, amelyik az első IDE merevlemezt jelenti a Linux rendszerekben:
a <path>/dev/hda</path>. Ha SCSI, FireWire, USB vagy SATA lemezekre 
telepítesz, az első merevlemez neve <path>/dev/sda</path> lesz. Minden további 
meghajtó az abc következő betűjét kapja. Például, a harmadik IDE lemezt 
<path>/dev/hdc</path> névvel kell illetni.
</p>

<p>
Az ilyen fenti blokkeszközök nem mások, mint absztrakt kapcsolódási pontok a 
lemezegységhez. A felhasználói programok ezeket az eszközöket használhatják a 
lemez eléréséhez, anélkül, hogy tudnák, az most IDE, SCSI vagy valami más 
fajta egység. A program egyszerűen csak 512 bájtos, összefüggő, 
véletlenszerűen elérhető blokkokban megcímzi a lemezt.
</p>

</body>
</subsection>
<subsection>
<title>Partíciók</title>
<body>

<p>
Igaz, hogy elméletben lehetséges az egész lemezt egyben használni, s így 
telepíteni a Linuxot, de a gyakorlatban szinte sosem csinálják így. Ehelyett a 
teljes blokkeszközt feldarabolják kisebb, könnyebben kezelhető 
blokkeszközökre. A legtöbb rendszeren ezeket <e>partícióknak</e> hívják.
</p>

</body>
</subsection>
</section>
<section>
<title>Hogyan tervezzük meg a partíció-kiosztást?</title>
<subsection>
<title>Egy alap kiosztás leírása</title>
<body>

<p>
Ha gyakorlatlan vagy a partícionálási sémákban, akkor ez a kis segédlet 
végigvezet lépésről-lépésre.  Válaszd azt a fájlrendszer-réteget, ami 
legjobban illeszkedik a telepítendő PowerPC rendszeredhez.
</p>

</body>
</subsection>
<subsection>
<title>Apple New World</title>
<body>

<p>
Az Apple New World gépeket nagyon egyszerű beállítani. Az első partíció mindig 
az <e>Apple Partition Map</e>. Ez a partíció tárolja a partíciós rétegek 
információját, így ne töröld semmiképp se (nem is tudod). A következő partíció 
pedig a bootstrap partíció. Ebben a felosztásban egy kicsi (800k) HFS 
fájlrendszer, és ebbe kerül a Yaboot rendszertöltő és a konfigurációs fájlja. 
Ez a partíció <e>nem</e> az a <path>/boot</path> partíció, mint amit más 
architektúrán megszoktál. A boot-partíció után következhet a megszokott 
linuxos felosztás. A swap partíció egy állandó hely, amit akkor használ a 
rendszer, amikor a fizikai memóriánál több adatot kell a memóriában tartani. A 
root partícióra lesz a Gentoo telepítve. Ha kettős rendszerindítást szeretnél, 
az OSX partíciót bárhová teheted a bootstrap partíció után, mert a yaboot az 
elindulása után már bárhonnan tud rendszert indítani.
</p>

<note>
Találhatsz olyan "Disk Driver" partíciókat a lemezen, aminek a nevei: 
<path>Apple_Driver63</path>, <path>Apple_Driver_ATA</path>, 
<path>Apple_FWDriver</path>, <path>Apple_Driver_IOKit</path>, and 
<path>Apple_Patches</path>. Ezeket a MacOS használja rendszerinduláskor, így 
ha neked nem ezek kellenek, akkor eltávolíthatod inicializálással a lemezről a 
mac-disk <c>i</c> opciójával. Ezzel teljesen törlöd a lemezt! Ha 
bizonytalanságban vagy efelől, akkor inkább hagyd úgy, ahogy van.
</note>

<note>
Ha a lemezed az Apple Disk Utility használatával partícionáltad, akkor 
észrevehetted, hogy a felosztások között 128 MB üres terület van. Ezt az Apple 
"jövőbeli használatra" tartogatja. Teljesen biztonságos ezeket eltávolítani.
</note>

<table>
<tr>
  <th>Partíció</th>
  <th>Méret</th>
  <th>Fájlrendszer</th>
  <th>Meghatározás</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32k</ti>
  <ti>Nincs</ti>
  <ti>Apple Partíciós Térkép</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>800k</ti>
  <ti>HFS</ti>
  <ti>Apple Bootstrap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Linux Swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti>Fennmaradó terület</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Linux Root</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Apple Old World</title>
<body>

<p>
Az Apple Old World gépeken kicsivel komplikáltabb kialakítani a partíciókat. 
Az első partíció mindig az <e>Apple Partition Map</e>. Ez a felosztás 
tartalmazza a partíciós táblák adatait. Erre ugyanaz a szabály vonatkozik, 
mint a New World gépekre: nem tudod törölni, de ne is akard. Ha a BootX-et 
használod, akkor feltételezem készítettél a MacOS telepítésekor egy szeparált 
lemezt. Ha nem tetted, akkor egyéb partíciókat hozott létre a lemezen a MacOS 
telepítő "Apple Disk Drivers" okból: <path>Apple_Driver63, Apple_Driver_ATA, 
Apple_FWDriver, Apple_Driver_IOKit, Apple_Patches</path> és a MacOS telepítő. 
Ha Quik-et akarsz használni, akkor szükséges egy boot-partíciót létrehozni, 
hasolóan az egyébb Apple boot módokhoz. A boot-partíció után következhet a 
megszokott linuxos felosztás. A swap partíció egy állandó hely, amit akkor 
használ a rendszer, amikor a fizikai memóriánál több adatot kell a memóriában 
tartani. A root partícióra lesz a Gentoo telepítve. Ha kettős rendszerindítást 
szeretnél, az OSX partíciót bárhová teheted a bootstrap partíció után, mert a 
yaboot az elindulása után már bárhonnan tud rendszert indítani.
</p>

<note>
Ha Old World gépet használsz, akkor szükséges a MacOS-t elérhető helyen 
(feltelepítve) tárolni. A példában felvázolt elrendezés feltételezi, hogy a 
MacOS-t egy külön merevlemezre telepítetted.
</note>

<table>
<tr>
  <th>Partíció</th>
  <th>Méret</th>
  <th>Fájlrendszer</th>
  <th>Meghatározás</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32k</ti>
  <ti>None</ti>
  <ti>Apple Partition Map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>32Mb</ti>
  <ti>ext2</ti>
  <ti>Quik Boot Partition (csak quik)</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Linux Swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti>Fennmaradó terület</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Linux Root</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Pegasos</title>
<body>

<p>
A Pegasos partíciós réteg egészen egyszerű az Apple felosztási rendszere után. 
Az első partíció itt is a Boot Partition, amelyik a bootoláshoz a kernelt 
tartalmazza, egy bootmenüt létrehozó Open Firmware scripttel. A boot-partíció 
után, következhet a megszokott linuxos felosztás. A swap partíció egy állandó 
hely, amit akkor használ a rendszer, amikor a fizikai memóriánál több adatot 
kell a memóriában tartani. A root partícióra lesz a Gentoo telepítve.
</p>

<table>
<tr>
  <th>Partíció</th>
  <th>Méret</th>
  <th>Fájlrendszer</th>
  <th>Meghatározás</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32Mb</ti>
  <ti>affs1 or ext2</ti>
  <ti>Boot Partíció</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Linux Swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Fennmaradó terület</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Linux Root</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>IBM PReP (RS/6000)</title>
<body>

<p>
Az IBM PowerPC Referencia Platform (PReP) igénye egy kis PReP boot-partíció a 
lemez első partíciójaként. Ezt szabadon követheti egy swap és a root partíció.
</p>

<table>
<tr>
  <th>Partíció</th>
  <th>Méret</th>
  <th>Fájlrendszer</th>
  <th>Meghatározás</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>800k</ti>
  <ti>Nincs</ti>
  <ti>PReP Boot Partíció (0x41 típus)</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Linux Swap (0x82 típus)</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Fennmaradó terület</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Linux Root (0x83 típus)</ti>
</tr>
</table>

<warn>
A <c>parted</c> partíciók átméretezésére is képes, ismeri a HFS+ típust is. A
HFS+ naplózó fájlrendszert azonban nem tudja átméretezni, ezért előtte kapcsold
ki a Mac OS X-en belül a naplózó módot. Ne feledd, minden átméretezés 
veszélyes, csak saját felelősségre próbáld meg! Mindenképpen mentsd el előtte 
az adataidat!
</warn>

<p>
Ha érdekel, mekkora lehet egy partíció mérete, vagy azt, hogy hány partícióra 
lesz szükséged, olvass tovább. Egyébként pedig folytathatod az 
<uri link="#mac-fdisk"> Alapértelmezett: a lemez partícionálása a mac-fdisk 
programmal (Apple)</uri> vagy az <uri link="#parted">Választható: a lemez 
partícionálása a parted programmal (IBM/Pegasos)</uri> című fejezettel.
</p>

</body>
</subsection>
<subsection>
<title>Hány és mekkora?</title>
<body>

<p>
A partíciók száma erősen függ a használat módjától. Például, ha sok 
felhasználód lesz, valószínűleg külön akarod tenni a <path>/home</path>-ot, 
mivel így nő a biztonság, és a mentés is egyszerűbb. Ha levelező szervernek 
telepíted a Gentoo-t, érdemes a <path>/var</path>-t külön helyre rakni, mivel 
ezen belül tárolódnak a levelek. Ha ehhez megfelelő fájlrendszert választasz, 
nagymértékben megnő a rendszered teljesítménye. A játékszervereknél az 
<path>/opt</path> mehet külön - a játékok szerverei többnyire ide kerülnek. Az 
oka hasonló, mint a <path>/home</path> esetén: biztonság és mentés. A 
<path>/usr</path>-t érdemes minél nagyobbra hagyni, mert nem csak az 
alkalmazások többsége települ ide, de maga a Portage-fa is körülbelül 500MB 
helyet foglal, nem számítva az itt tárolt forráskódokat.
</p>

<p>
Ebből már láthatod, a kérdésre adott válasz leginkább attól függ, mit akarsz
elérni. A különálló partícióknak vagy köteteknek az alábbi előnyei vannak:
</p>

<ul>
<li>
  A leggyorsabb fájlrendszert választhatod ki minden partíciónak vagy kötetnek
</li>
<li>
  A rendszered nem fog kifutni az összes szabad helyből, ha egy hibás program
  folyamatosan fájlokat ír egy partícióra vagy kötetre
</li>
<li>
  Ha szükséges, a fájlrendszer-ellenőrzés ideje csökkenthető, mivel a több
  ellenőrzés egymással párhuzamosan futtatható (bár ez inkább akkor előny, ha
  több lemezegységed van)
</li>
<li>
  A biztonság növelhető azzal, hogy egyes partíciókat, köteteket csak 
  olvashatóan, nosuid (a setuid bitet nem veszi figyelembe) és noexec (a
  futtatható bitet nem veszi figyelembe) jellemzőkkel csatolsz
</li>
</ul>

<p>
A több partíciónak azonban hátránya is van: ha nem állítod be megfelelően,
a rendszered egyes helyein túl sok, máshol túl kevés szabad helyed marad.
A SCSI és SATA eszközökre ráadásul legfeljebb 15 partíciót rakhatsz.
</p>

</body>
</subsection>
</section>
<section id="mac-fdisk">
<title>Alapértelmezett: a lemez particionálása a mac-fdisk programmal (Apple)</title>
<body>

<p>
Itt az idő, hogy elkészítsd partícióidat a <c>mac-fdisk</c> programmal:
</p>

<pre caption="A mac-fdisk indítása">
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
Először töröld le az előbb kiürített partíciókat, hogy elég hely legyen a 
Linuxosok részére. A <c>mac-fdisk</c> programon belül a <c>d</c> parancsot 
kell ehhez használnod. Csak a törölni kívánt partíció számát kell megadni. A 
NewWorld gépeken az első partíciót (Apple_partition_map) többnyire nem lehet 
törölni.
</p>

<p>
Másodjára létre kell hoznod az <e>Apple_Bootstrap</e> partíciót a <c>b</c> 
paranccsal. Meg fogja kérdezni, melyik blokkon kezdje el - az első szabad 
partíció számát írd ide, mögötte egy <c>p</c> betűvel. Példánkban ez a 
<c>2p</c>.
</p>

<note>
Ez a partíció <e>nem</e> boot partíció. Ezt a Linux egyáltalán nem használja, 
semmilyen fájlrendszert nem kell rá tenned, soha nem kell csatolnod. Az Apple-
felhasználóknak nincs külön partícióra szükségük a <path>/boot</path>-hoz.
</note>

<p>
A <c>c</c> megnyomásával készítsd el a swap partíciót is! A <c>mac-fdisk</c> 
megint csak megkérdezi, melyik blokkon akarod kezdeni. Mivel az előbb a 
<c>2</c>-t adtuk meg az Apple_Bootstrap partíciónál, most <c>3p</c>-t kell 
megadnod. Amikor a méretét kérdi, adj meg <c>512M</c>-ot (vagy annyit, 
amennyit jónak látsz -- de az 512MB-ot javasoljuk). Amikor pedig a nevét kell 
megadnod, írd be a <c>swap</c> szót (ez kötelező!).
</p>

<p>
A root partíció létrehozásához megint nyomd meg a <c>c</c>-t, majd 
<c>4p</c>-vel add meg a kezdőblokkot. Méretnek megint csak <c>4p</c> legyen. 
Ezt a <c>mac-fdisk</c> úgy fogja értelmezni, hogy "Használd a maradék helyet". 
A nevének a <c>root</c> szót írd be (ez is kötelező!).
</p>

<p>
A befejezéshez írasd ki a lemezre a partíciókat a <c>w</c> paranccsal, majd 
lépj ki a <c>mac-fdisk</c>-ből a <c>q</c> megnyomásával!
</p>

<note>
Nem árt ellenőrizni, hogy minden rendben ment-e. Ehhez indítsd el még egyszer 
a mac-fdisket, és nézd át, hogy a partíciók megvannak-e! Ha a létrehozott 
partíciók egyikét sem látod, vagy más értékekkel, az "i" megnyomásával 
újragenerálhatod a partíciós táblát. Ez egyben le is törli az összes partíciót.
</note>

<p>
Most, hogy elkészültek a partícióid, folytathatod a <uri link="#filesystems">
Fájlrendszerek létrehozása</uri> fejezettel.
</p>

</body>
</section>
<section id="parted">
<title>A lemez particionálása a parted programmal (főként Pegasos rendszeren)</title>
<body>

<p>
A <c>parted</c>, vagyis a Partition Editor (Partíció Szerkesztő) már tudja 
kezelni a Mac OS és Mac OS X által használt HFS+ típusú partíciókat. Ezzel az 
eszközzel át is tudod méretezni őket, hogy helyet csinálj a Linuxodnak. Az 
alábbi példa kizárólag Pegasos gépekre alkalmazható.
</p>

<p>
Itt az idő, hogy elkészítsd partícióidat a <c>parted</c> programmal:
</p>

<pre caption="A parted indítása">
# <i>parted /dev/hda</i>
</pre>

<p>
Ha a lemezegység még nem volt particionálva, add ki az <c>mklabel amiga</c> 
parancsot, amely új lemezcímkét készít.
</p>

<p>
A parteden belül bármikor beírhatod a <c>print</c> parancsot, hogy megnézd a
jelenlegi partíció-kiosztást. Ha meggondolod magad, vagy hibásan adtál meg 
valamit, a <c>Ctrl-c</c> megnyomásával kiléphetsz a partedből.
</p>

<p>
Ha a Pegasos gépedre MorphOS-t is akarsz majd telepíteni, egy affs1 
fájlrendszert is létre kell hoznod a lemez elején, "BI0" (BI nulla) névvel. 
32MB bőven elég lesz, hogy a MorpOS kernel elférjen rajta. Ha Pegasos I-ed 
van, vagy szeretnél reiserfs-t, xfs-t használni, a Linux kerneledet is itt 
kell majd tárolnod (a Pegasos II csak ext2/ext3 vagy affs1 típusú partícióról 
tud bootolni). Ennek létrehozásához add ki a 
<c>mkpart primary affs1 START END</c> parancsot, ahol a <c>START</c> és az 
<c>END</c> helyére a megabájtban megadott érték kerül. (Pl. <c>0 32</c> 
létrehoz neked egy 32MB-os partíciót, ami 0MB-on kezdődik és 32MB-on végződik.)
</p>

<p>
A Linux számára két partíciót kell létrehoznod, egy root fájlrendszert a 
programoknak, minden egyébnek, és egy swap partíciót. Mielőtt nekiesel, el 
kell döntened, a root milyen fáljrendszerű legyen. Az ext2, ext3, reiserfs és 
xfs közül választhatsz. Ha nem igazán értesz hozzá, válaszd az ext3-t! Ehhez 
add ki az <c>mkpart primary ext3 START END</c> parancsot, a <c>START</c> és 
<c>END</c> helyére megint csak a kezdő és végpont helyét írd be megabájtban!
</p>

<p>
A swap partíciónak általában kétszer akkora méretet szoktak javasolni, mint 
amennyi rendszermemória van a gépben. Valószínűleg kisebb is elég a normális 
működéshez, csak akkor kell több, ha rengeteg alkalmazást akarsz egyszerre 
futtatni (de minimum 512MB mindenképpen ajánlott). A swap létrehozásához add 
ki az <c>mkpart primary linux-swap START END</c> parancsot!
</p>

<p>
Ha készen vagy, csak add ki a <c>quit</c> parancsot, hogy kilépj a partedből!
</p>

</body>
</section>
<section id="filesystems">
<title>Fájlrendszerek létrehozása</title>
<subsection>
<title>Bevezetés</title>
<body>

<p>
A partícióid elkészültek, ideje lenne valamilyen tenni is rájuk. Ha nem akarsz 
azzal bajlódni, hogy milyen típust válassz, és megfelel az, amit a Kézikönyv 
példáiban használunk, átugorhatsz a <uri link="#filesystems-apply">
Fájlrendszer létrehozása egy partíción</uri> fejezetre. Ha igen, akkor lássuk,
mik is ezek a különféle fájlrendszerek...
</p>

</body>
</subsection>
<subsection>
<title>Fájlrendszerek?</title>
<body>

<p>
Többféle fájlrendszer közül is választhatsz. PPC architektúrán az ext2, ext3, 
ReiserFS és az XFS a stabil rendszerek.
</p>

<p>
Az <b>ext2</b> a leginkább kipróbált, igazi Linuxos fájlrendszer. Nem ismeri
a metaadat-naplózást, ezért az gép indulásakor történő ext2-ellenőrzés sokáig
eltarthat. Manapság többféle új generációs naplózó fájlrendszer közül lehet 
választani, melyek nagyon gyorsan ellenőriznek, ezért inkább ezeket érdemes
használni. A naplózó rendszerek megszüntetik a rendszerindítás során fellépő
hosszú várakozásokat, amikor a rendellenes állapotban lévő fájlrendszereket
kell kijavítani.
</p>

<p>
Az <b>ext3</b> lenne az ext2 rendszer naplózó változata. Ismeri a metaadat-
naplózást (vagyis gyorsan visszaállítja a sérült adatokat), valamint többféle 
fejlett naplózó módot is, mint például teljes és rendezett adatnaplózás. Egy 
átdolgozott B*-fa indexelést használ, ami lehetővé teszi, hogy a lehető 
legtöbb helyzetben kitűnően használható legyen. Az ext3 egy nagyon jó és 
megbízható fájlrendszer.
</p>

<p>
A <b>ReiserFS</b> egy B*-fa alapú fájlrendszer, nagyon jó átlagos 
teljesítménnyel. Ha kisméretű (4k-nál kisebb) fájlokkal kell dolgozni, bőven 
felülmúlja az ext2 és az ext3 teljesítményét, akár 10-15-szörösen is. Jól 
skálázható, metaadat-naplózást is ismer. A RaiserFS megbízható, használható 
rendszer, mind átlagos, mind extrém használatra (mint például nagyon nagy 
fájlrendszerek létrehozása, rengeteg apró fájl, vagy nagyon nagy fájlok és 
több tízezer fájlt tartalmazó könyvtárak kezelése).
</p>

<p>
Az <b>XFS</b> is metaadat-naplózó fájlrendszer, rengeteg kiegészítő 
szolgáltatással, elsődlegesen a skálázhatóságra tervezve. Ezt csak felső 
kategóriás SCSI vagy optikai szálas adattárolók esetén javasoljuk, melyek 
önálló szünetmentes tápegységen vannak. Mivel az XFS nagyon agresszív módon 
cache-el (tárolja az átvitt adatokat a rendszer- memóriában), egy rosszul 
tervezett program (melyek nem elég alaposak, amikor fájlokat kell lemezre 
írniuk - s elég sok ilyen létezik) rengeteg adatot elveszíthet egy hirtelen 
rendszerleállás miatt.
</p>

</body>
</subsection>
<subsection>
<title>A swap partíció bekapcsolása</title>
<body>

<p>
Az <c>mkswap</c> paranccsal lehet inicializálni a swap partíciót:
</p>

<pre caption="Swap bejegyzés létrehozása">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
A swap partíció aktiválásához pedig a <c>swapon</c> parancs kell:
</p>

<pre caption="Swap partíció bekapcsolása">
# <i>swapon /dev/hda3</i>
</pre>

<p>
Hozd létre és kapcsold be a swap-et a fenti parancsokkal!
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Fájlrendszer létrehozása egy partíción</title>
<body>

<p>
Ahhoz, hogy egy partíción vagy köteten fájlrendszert hozz létre, az adott FS 
saját eszközeit kell használnod:
</p>

<table>
<tr>
  <th>Fájlrendszer</th>
  <th>A létrehozás parancsa</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mkfs.ext2</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mkfs.ext3</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkfs.reiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
</table>

<p>
Ha például a root partícióra (jelen példánkban <path>/dev/hda4</path>) akarsz
ext3 rendszert (ugyancsak a példánkban...) tenni, így csinálhatod meg:
</p>

<pre caption="Fájlrendszer létrehozása egy partíción">
# <i>mkfs.ext3 /dev/hda4</i>
</pre>

<p>
Most pedig hozd létre a választott fájlrendszereidet az újonnan
létrehozott partícióidon (vagy logikai köteteiden).
</p>

<note>
A PegasosII rendszeren a kernelt tároló partíció csak ext2/ext3 vagy affs1
fájlrendszerű lehet. A NewWorld gépek már ext2, ext3, XFS, ReiserFS vagy akár 
HFS/HFS+ típusúakról is tudnak indulni. A BootX-et használó OldWorld gépek 
esetén a kernelt HFS típusú partícióra kell tenni, de ezt majd akkor kell
megcsinálni, amikor a rendszerbetöltőt állítod be.
</note>

</body>
</subsection>
</section>
<section>
<title>Csatolás</title>
<body>

<p>
Készen vannak a partícióid, rajtuk az üres fájlrendszerekkel. Itt az ideje, 
hogy csatoljuk őket a <c>mount</c> paranccsal. A példánkban a root partíciót 
csatoljuk:
</p>

<pre caption="Partíciók csatolása">
# <i>mount /dev/hda4 /mnt/gentoo</i>
</pre>

<note>
Ha a <path>/tmp</path> könyvtárat külön partíción akarod tárolni, a csatolás 
után meg kell változtatnod a jogosultságait: 
<c>chmod 1777 /mnt/gentoo/tmp</c>. Ugyanez vonatkozik a <path>/var/tmp</path> 
könyvtárra is.
</note>

<p>
Most pedig folytasd a <uri link="?part=1&amp;chap=5">Gentoo Install fájlok 
telepítése</uri> fejezettel.
</p>

</body>
</section>
</sections>
