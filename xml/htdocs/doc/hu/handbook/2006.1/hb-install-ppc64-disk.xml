<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Id: hb-install-ppc64-disk.xml,v 1.2 2007/01/03 14:43:18 neysx Exp $ -->

<sections>

<version>7.1</version>
<date>2006-11-02</date>

<section>
<title>Pár szó az úgynevezett blokkeszközökről</title>
<subsection>
<title>Blokkeszközök</title>
<body>

<p>
Ahhoz, hogy tovább léphessünk, először alaposan áttekintjük a Gentoo Linux, 
és általában a Linuxok lemezkezelését. Szó lesz a Linux fájlrendszerekről,
partíciókról és blokkeszközökről. Miután tisztában leszel a lemez- és 
fájlkezelés minden csínjával-bínjával, végigvezetünk a Gentoo Linux 
telepítéséhez szükséges partíciók és fájlrendszerek létrehozásán.
</p>

<p>
Kezdjük mindjárt a <e>blokkeszközökkel</e>. A legismertebb ilyen eszköz
valószínűleg az, amelyik az első IDE merevlemezt jelenti a Linux rendszerekben:
a <path>/dev/hda</path>. Ha a gépedben SCSI lemezek vannak, az első merevlemez
<path>/dev/sda</path> lesz. A Serial ATA eszközöknek ugyancsak 
<path>/dev/sda</path> alakúak, hiába IDE eszközökről van szó.
</p>

<p>
Az ilyen fenti blokkeszközök nem mások, mint absztrakt kapcsolódási pontok a 
lemezegységhez. A felhasználói programok ezeket az eszközöket használhatják a 
lemez eléréséhez, anélkül, hogy tudnák, az most IDE, SCSI vagy valami más 
fajta egység. A program egyszerűen csak 512 bájtos, összefüggő, 
véletlenszerűen elérhető blokkokban megcímzi a lemezt.
</p>

</body>
</subsection>
<subsection>
<title>Partíciók és szeletek</title>
<body>

<p>
Igaz, hogy elméletben lehetséges az egész lemezt egyben használni, s így 
telepíteni a Linuxot, de a gyakorlatban szinte sosem csinálják így. Ehelyett a 
teljes blokkeszközt feldarabolják kisebb, könnyebben kezelhető 
blokkeszközökre. A legtöbb rendszeren ezeket <e>partícióknak</e> hívják. Mások 
hasonló technikát alkalmaznak, de <e>szeleteknek (slice)</e> nevezik őket.
</p>

</body>
</subsection>
</section>
<section>
<title>Hogyan tervezzük meg a partíciókiosztást?</title>
<subsection>
<title>Egy alap kiosztás leírása</title>
<body>

<p>
Ha nem akarsz azzal szenvedni, hogy partíció-kiosztást tervezz a rendszered
számára, használhatod az alábbit, amelyet a könyv egészében alapul veszünk:
</p>

<table>
<tr>
  <th>Partíció</th>
  <th>Fájlrendszer</th>
  <th>Méret</th>
  <th>Leírás</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Partition map</ti>
  <ti>31.5k</ti>
  <ti>partíció-térkép</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>swap partíció</ti>
</tr>
<tr>
  <ti><path>/dev/sda4</path></ti>
  <ti>ext3</ti>
  <ti>a lemez többi része</ti>
  <ti>root partíció</ti>
</tr>
</table>

<note>
Van pár más partíció is, az alábbi nevekkel: <path>Apple_Driver43,
Apple_Driver_ATA, Apple_FWDriver, Apple_Driver_IOKit,
Apple_Patches</path>. Ha nem akarsz MacOS 9-et használni, letörölheted őket, 
mivel sem a MacOS X-nek, sem a Linuxnak nincs rájuk szüksége. Ehhez a parted 
programot érdemes használnod, a max-fdisk még nem képes ezeket törölni.
</note>

<p>
Ha érdekel, mekkora lehet egy partíció mérete, vagy azt, hogy hány partícióra 
lesz szükséged, olvass tovább. Egyébként pedig folytathatod az
<uri link="#mac-fdisk">Apple G5: a lemez particionálása a mac-fdisk 
programmal</uri> vagy az <uri link="#fdisk">IBM pSeries: a lemez 
particionálása az fdisk programmal</uri> című fejezettel.
</p>

</body>
</subsection>
<subsection>
<title>Hány és mekkora?</title>
<body>

<p>
A partíciók száma erősen függ a használat módjától. Például, ha sok 
felhasználód lesz, valószínűleg külön akarod tenni a <path>/home</path>-ot, 
mivel így nő a biztonság, és a mentés is egyszerűbb. Ha levelező szervernek 
telepíted a Gentoo-t, érdemes a <path>/var</path>-t külön helyre rakni, mivel 
ezen belül tárolódnak a levelek. Ha ehhez megfelelő fájlrendszert választasz, 
nagymértékben megnő a rendszered teljesítménye. A játékszervereknél az 
<path>/opt</path> mehet külön - a játékok szerverei többnyire ide kerülnek. Az 
oka hasonló, mint a <path>/home</path> esetén: biztonság és mentés. A 
<path>/usr</path>-t érdemes minél nagyobbra hagyni, mert nem csak az 
alkalmazások többsége települ ide, de maga a Portage-fa is körülbelül 500MB 
helyet foglal, nem számítva az itt tárolt forráskódokat.
</p>

<p>
Ebből már láthatod, a kérdésre adott válasz leginkább attól függ, mit akarsz
elérni. A különálló partícióknak vagy köteteknek az alábbi előnyei vannak:
</p>

<ul>
<li>
  A leggyorsabb fájlrendszert választhatod ki minden partíciónak vagy kötetnek
</li>
<li>
  A rendszered nem fog kifutni az összes szabad helyből, ha egy hibás program
  folyamatosan fájlokat ír egy partícióra vagy kötetre
</li>
<li>
  Ha szükséges, a fájlrendszer-ellenőrzés ideje csökkenthető, mivel a több
  ellenőrzés egymással párhuzamosan futtatható (bár ez inkább akkor előny, ha
  több lemezegységed van)
</li>
<li>
  A biztonság növelhető azzal, hogy egyes partíciókat, köteteket csak 
  olvashatóan, nosuid (a setuid bitet nem veszi figyelembe) és noexec (a
  futtatható bitet nem veszi figyelembe) jellemzőkkel csatolsz
</li>
</ul>

<p>
A több partíciónak azonban hátránya is van: ha nem állítod be megfelelően,
a rendszered egyes helyein túl sok, máshol túl kevés szabad helyed marad.
A SCSI és SATA eszközökre ráadásul legfeljebb 15 partíciót rakhatsz.
</p>

</body>
</subsection>
</section>
<section id="mac-fdisk">
<title>Alapértelmezett: a lemez partícionálása a mac-fdisk (Apple G5) programmal</title>
<body>

<p>
Itt az idő, hogy elkészítsd partícióidat a <c>mac-fdisk</c> programmal:
</p>

<pre caption="A mac-fdisk indítása">
# <i>mac-fdisk /dev/sda</i>
</pre>

<p>
Először töröld le az előbb kiürített partíciókat, hogy elég hely legyen a 
Linuxosok részére. A <c>mac-fdisk</c> programon belül a <c>d</c> parancsot 
kell ehhez használnod. Csak a törölni kívánt partíció számát kell megadni.
</p>

<p>
Másodjára létre kell hoznod az <e>Apple_Bootstrap</e> partíciót a <c>b</c> 
paranccsal. Meg fogja kérdezni, melyik blokkon kezdje el - az első szabad 
partíció számát írd ide, mögötte egy <c>p</c> betűvel. Példánkban ez a 
<c>2p</c>.
</p>

<note>
Ez a partíció <e>nem</e> boot partíció. Ezt a Linux egyáltalán nem használja, 
semmilyen fájlrendszert nem kell rá tenned, soha nem kell csatolnod. A PPC-
felhasználóknak nincs külön partícióra szükségük a <path>/boot</path>-hoz.
</note>

<p>
A <c>c</c> megnyomásával készítsd el a swap partíciót is! A <c>mac-fdisk</c> 
megint csak megkérdezi, melyik blokkon akarod kezdeni. Mivel az előbb a 
<c>2</c>-t adtuk meg az Apple_Bootstrap partíciónál, most <c>3p</c>-t kell 
megadnod. Amikor a méretét kérdi, adj meg <c>512M</c>-ot (vagy annyit, 
amennyit jónak látsz). Amikor pedig a nevét kell megadnod, írd be a 
<c>swap</c> szót (ez kötelező!).
</p>

<p>
A root partíció létrehozásához megint nyomd meg a <c>c</c>-t, majd 
<c>4p</c>-vel add meg a kezdőblokkot. Méretnek megint csak <c>4p</c> legyen. 
Ezt a <c>mac-fdisk</c> úgy fogja értelmezni, hogy "Használd a maradék helyet". 
A nevének a <c>root</c> szót írd be (ez is kötelező!).
</p>

<p>
A befejezéshez írasd ki a lemezre a partíciókat a <c>w</c> paranccsal, majd 
lépj ki a <c>mac-fdisk</c>-ből a <c>q</c> megnyomásával!
</p>

<note>
Nem árt ellenőrizni, hogy minden rendben ment-e. Ehhez indítsd el még egyszer 
a mac-fdisket, és nézd át, hogy a partíciók megvannak-e! Ha a létrehozott 
partíciók egyikét sem látod, vagy más értékekkel, az "i" megnyomásával 
újragenerálhatod a partíciós táblát. Ez egyben le is törli az összes partíciót.
</note>

<p>
Most, hogy elkészültek a partícióid, folytathatod a 
<uri link="#filesystems">Fájlrendszerek létrehozása</uri> fejezettel.
</p>

</body>
</section>
<section id="fdisk">
<title>IBM pSeries, iSeries és OpenPower: a lemez partícionálása az fdisk programmal</title>
<subsection>
<body>

<note>
Ha a telepített Gentoo Linuxodon RAID tömböt akarsz használni, és POWER5-alapú
hardvered van, érdemes futtatnod az <c>iprconfig</c> parancsot, hogy Advanced
Function típusúra formázd a lemezeket, és létrehozd a tömböket. Ehhez a 
telepítés elkészülte után telepítened kell az <c>iprutils</c> csomagot.
</note>

<p>
Ha ipr-alapú SCSI csatolód van, most érdemes lehet elindítani az ipr 
szolgáltatásokat.
</p>

<pre caption="Az ipr szolgáltatások indítása">
# <i>/etc/init.d/iprinit start</i>
</pre>

<p>
Ebben a részben elmagyarázzuk, hogyan hozd létre az előző példában leírt 
partíció-kiosztást, vagyis:
</p>

<table>
<tr>
  <th>Partíció</th>
  <th>Leírás</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>PPC PReP boot partíció</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>swap partíció</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>root partíció</ti>
</tr>
</table>

<p>
A kiosztást természetesen a saját igényeid szerint változtasd meg.
</p>

</body>
</subsection>
<subsection>
<title>A jelenlegi partíció-kiosztás megtekintése</title>
<body>

<p>
Az <c>fdisk</c> egy népszerű és hasznos eszköz ahhoz, hogy a lemezedet
partíciókra oszthasd. Indítsd el az <c>fdisk</c>-et a megfelelő
lemezen! (A példánkban a <path>/dev/sda</path> eszközt használjuk.)
</p>

<pre caption="Az fdisk indítása">
# <i>fdisk /dev/sda</i>
</pre>

<p>
Ha elindult az <c>fdisk</c>, az alábbihoz hasonló prompt fogad:
</p>

<pre caption="fdisk prompt">
Command (m for help):
</pre>

<p>
A <c>p</c> megnyomásával megnézheted a partíciók jelenlegi kiosztását:
</p>

<pre caption="Egy példa a partíciók beállítására">
Command (m for help): p

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1          12       53266+  83  Linux
/dev/sda2              13         233      981571+  82  Linux swap
/dev/sda3             234         674     1958701+  83  Linux
/dev/sda4             675        6761    27035410+   5  Extended
/dev/sda5             675        2874     9771268+  83  Linux
/dev/sda6            2875        2919      199836   83  Linux
/dev/sda7            2920        3008      395262   83  Linux
/dev/sda8            3009        6761    16668918   83  Linux

Command (m for help):
</pre>

<p>
A fenti lemez úgy lett beállítva, hogy hat darab Linux fájlrendszer
legyen rajta (a hozzájuk tartozó partíció "Linux" felirattal szerepel), 
valamint egy swap partíció ("Linux swap" névvel).
</p>

</body>
</subsection>
<subsection>
<title>Minden partíció törlése</title>
<body>

<p>
Először minden létező partíciót törlünk a lemezről. Ehhez használd a 
<c>d</c> billentyűt. Például, a létező <path>/dev/sda1</path> törléséhez:
</p>

<note>
Ha nem akarod az összes partíciót törölni, csak azokat szedd le, melyekre
nincs szükséged. Ennél a pontnál a szerző azt javasolja, hogy csinálj
biztonsági mentést az adataidról, nehogy elvesszenek.
</note>

<pre caption="Partíció törlése">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Így a partíciót törlésre jelölted meg. A <c>p</c> megnyomására többé nem 
jelenik meg a listában, de addig nem törlődik, míg el nem mented a 
változtatásaidat. Ha elrontasz valamit, és mentés nélkül abba akarod hagyni a 
particionálást, azonnal nyomd meg a <c>q</c> billentyűt, majd üss entert. Így 
a partíciód nem törlődik.
</p>

<p>
Most, feltételezve, hogy a rendszered összes partícióját el akarod tüntetni, 
ismételten nyomogasd a <c>p</c>-t, hogy megnézd az aktuális állapotot, majd a 
<c>d</c>-t és a partíció számát, hogy töröld azt. A végén egy üres partíciós 
táblát kapsz:
</p>

<pre caption="Üres partíciós tábla">
Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
A memóriában lévő partíciós tábla már üres, nekiállhatunk létrehozni az 
újakat. Az előzőekben leírt alapértelmezett particionálási sémát fogjuk
használni. Természetesen, ha neked nem ilyenre van szükséged, ne betűről
betűre ugyanezeket írd be!
</p>

</body>
</subsection>
<subsection>
<title>A PPC PReP boot partíció létrehozása</title>
<body>

<p>
Először egy kisméretű PReP boot partíciót készítünk el. Add ki az <c>n</c> 
parancsot, majd <c>p</c>-vel válassz primary (elsődleges) partíció-típust, 
s utána <c>1</c>-et, hogy az egyes számú legyen. Amikor az első cilindert 
kérdezi, csak üss entert. Amikor pedig az utolsót, a <c>+7M</c> begépelésével
hozz létre egy 7 Mbyte-os darabot. Miután ezzel megvagy, a <c>t</c> paranccsal
változtasd meg a típusát: először <c>1</c>, hogy kiválaszd az előbb létrehozott
partíciót, majd <c>41</c>, hogy "PPC PReP Boot" típusúra állítsd. A végén pedig
bootolhatóra kell még állítanod.
</p>

<note>
A PReP partíciónak kisebbnek kell lennie, mint 8 MByte!
</note>

<pre caption="A PReP boot partíció létrehozása">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System

Command (m for help): <i>n</i>
Command action
      e   extended
      p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-6761, default 1): 
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-6761, default
6761): <i>+8M</i>

Command (m for help): <i>t</i>
Selected partition 1
Hex code (type L to list codes): <i>41</i>
Changed system type of partition 1 to 41 (PPC PReP Boot)

Command (m for help): <i>a</i>
Partition number (1-4): <i>1</i>
Command (m for help):
</pre>

<p>
Ha most kiadod a <c>p</c> parancsot, a következő kiosztást láthatod:
</p>

<pre caption="A kész boot partíció">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1  *            1           3       13293   41  PPC PReP Boot

Command (m for help):
</pre>
</body>
</subsection>
<subsection>
<title>A swap partíció létrehozása</title>
<body>

<p>
Alkossuk meg a swap partíciót is! Ehhez használd az <c>n</c> parancsot, 
hogy új partíciót hozz létre, majd a <c>p</c>-t, hogy elsődleges (primary)
típusút. Majd <c>2</c>, mivel a második primary partíciót készíted, 
esetünkben a <path>/dev/sda2</path>-t. Amikor az első cilindert kérdezi, 
csak üss entert. Amikor pedig az utolsót, add meg a <c>+512M</c>-t, 
így egy 512MB méretűt hoz létre. Ha kész vagy, a <c>t</c> paranccsal
állítsd be a partíció típusát, válaszd a <c>2</c>-es partíciót, majd
adj meg <c>82</c>-es típust, vagyis "Linux Swap"-et. Ezek után a <c>p</c>
parancs ehhez hasonló kiosztást fog mutatni:
</p>

<pre caption="Partíció-kiosztás a swap létrehozása után">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           3       13293   41  PPC PReP Boot
/dev/sda2               4         117      506331   82  Linux swap

Command (m for help):
</pre>

</body>
</subsection>
<subsection>
<title>A root partíció létrehozása</title>
<body>

<p>
Végül pedig készítsük el a root partíciót. Ehhez az <c>n</c> paranccsal
létrehozod az újat, <c>p</c>-vel megadod, hogy elsődleges (primary) kell,
majd a <c>3</c>-mal azt, hogy a harmadik primary, esetünkben a 
<path>/dev/sda3</path>-ról van szó. Amikor az első cilindert kérdezi, csak 
üss entert. Amikor az utolsót, üss megint entert, így egy akkora partíciót hoz
létre, amely a lemez összes maradék helyét elfoglalja. Ezek után a 
<c>p</c> parancs ehhez hasonló kiosztást fog mutatni:
</p>

<pre caption="Partíció-kiosztás a root partíció létrehozása után">
Command (m for help): p

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           3       13293   41  PPC PReP Boot
/dev/sda2               4         117      506331   82  Linux swap
/dev/sda3             118        6761    29509326   83  Linux

Command (m for help):
</pre>
</body>
</subsection>
<subsection>
<title>A partíció-kiosztás elmentése</title>
<body>

<p>
A kiosztás mentéséhez és az <c>fdisk</c>-ből való kilépéshez 
használd a <c>w</c> parancsot.
</p>

<pre caption="Mentés és kilépés az fdiskből">
Command (m for help): <i>w</i>
</pre>

<p>
Most, hogy elkészültek a partícióid, folytathatod a 
<uri link="#filesystems">Fájlrendszerek létrehozása</uri> fejezettel.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Fájlrendszerek létrehozása</title>
<subsection>
<title>Bevezetés</title>
<body>

<p>
A partícióid elkészültek, ideje lenne valamilyen tenni is rájuk. Ha nem akarsz 
azzal bajlódni, hogy milyen típust válassz, és megfelel az, amit a Kézikönyv 
példáiban használunk, átugorhatsz a <uri link="#filesystems-apply">
Fájlrendszer létrehozása egy partíción</uri> fejezetre. Ha igen, akkor lássuk,
mik is ezek a különféle fájlrendszerek...
</p>

</body>
</subsection>
<subsection>
<title>Fájlrendszerek?</title>
<body>

<note>
Többféle fájlrendszer közül is választhatsz. Az ext2, ext3 és ReiserFS a 
telepítő CD-n lévő kernelbe van építve. A JFS és XFS fájlrendszereket kernel 
modulokon keresztül érheted el.
</note>

<p>
Az <b>ext2</b> a leginkább kipróbált, igazi Linuxos fájlrendszer. Nem ismeri
a metaadat-naplózást, ezért az gép indulásakor történő ext2-ellenőrzés sokáig
eltarthat. Manapság többféle új generációs naplózó fájlrendszer közül lehet 
választani, melyek nagyon gyorsan ellenőriznek, ezért inkább ezeket érdemes
használni. A naplózó rendszerek megszüntetik a rendszerindítás során fellépő
hosszú várakozásokat, amikor a rendellenes állapotban lévő fájlrendszereket
kell kijavítani.
</p>

<p>
Az <b>ext3</b> lenne az ext2 rendszer naplózó változata. Ismeri a metaadat-
naplózást (vagyis gyorsan visszaállítja a sérült adatokat), valamint többféle 
fejlett naplózó módot is, mint például teljes és rendezett adatnaplózás. Egy 
átdolgozott B*-fa indexelést használ, ami lehetővé teszi, hogy a lehető 
legtöbb helyzetben kitűnően használható legyen. Az ext3 egy nagyon jó és 
megbízható fájlrendszer.
</p>

<p>
A <b>ReiserFS</b> egy B*-fa alapú fájlrendszer, nagyon jó átlagos 
teljesítménnyel. Ha kisméretű (4k-nál kisebb) fájlokkal kell dolgozni, bőven 
felülmúlja az ext2 és az ext3 teljesítményét, akár 10-15-szörösen is. Jól 
skálázható, metaadat-naplózást is ismer. A 2.4.18-as kerneltől kezdve 
megbízható, használható rendszer, mind átlagos, mind extrém használatra (mint 
például nagyon nagy fájlrendszerek létrehozása, rengeteg apró fájl, vagy 
nagyon nagy fájlok és több tízezer fájlt tartalmazó könyvtárak kezelése).
</p>

<p>
Az <b>XFS</b> is metaadat-naplózó fájlrendszer, rengeteg kiegészítő 
szolgáltatással, elsődlegesen a skálázhatóságra tervezve. Ezt csak 
felső kategóriás SCSI vagy optikai szálas adattárolók esetén javasoljuk, 
melyek önálló szünetmentes tápegységen vannak. Mivel az XFS nagyon agresszív 
módon cache-el (tárolja az átvitt adatokat a rendszer-memóriában), egy rosszul 
tervezett program (melyek nem elég alaposak, amikor fájlokat kell lemezre 
írniuk - s elég sok ilyen létezik) rengeteg adatot elveszíthet egy hirtelen 
rendszerleállás miatt.
</p>

<p>
A <b>JFS</b> az IBM nagyteljesítményű naplózó fájlrendszere. Nemrégiben vált
széles körben elérhetővé.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Fájlrendszer létrehozása egy partíción</title>
<body>

<p>
Ahhoz, hogy egy partíción vagy köteten fájlrendszert hozz létre, az adott FS 
saját eszközeit kell használnod:
</p>

<table>
<tr>
  <th>Fájlrendszer</th>
  <th>A létrehozás parancsa</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Ha például a root partícióra (jelen példánkban <path>/dev/sda4</path>) akarsz
ext3 rendszert tenni, így csinálhatod meg:
</p>

<pre caption="Fájlrendszer létrehozása egy partíción">
# <i>mke2fs -j /dev/sda4</i>
</pre>

<p>
Most pedig hozd létre a választott fájlrendszereidet az újonnan
létrehozott partícióidon (vagy logikai köteteiden).
</p>

</body>
</subsection>
<subsection>
<title>A swap partíció bekapcsolása</title>
<body>

<p>
Az <c>mkswap</c> paranccsal lehet inicializálni a swap partíciót:
</p>

<pre caption="Swap bejegyzés létrehozása">
# <i>mkswap /dev/sda3</i>
</pre>

<p>
A swap partíció aktiválásához pedig a <c>swapon</c> parancs kell:
</p>

<pre caption="Swap partíció bekapcsolása">
# <i>swapon /dev/sda3</i>
</pre>

<p>
Hozd létre és kapcsold be a swap-et a fenti parancsokkal!
</p>

</body>
</subsection>
</section>
<section>
<title>Csatolás</title>
<body>

<p>
Készen vannak a partícióid, rajtuk az üres fájlrendszerekkel. Itt az ideje, 
hogy csatoljuk őket a <c>mount</c> paranccsal. A példánkban a root partíciót 
csatoljuk:
</p>

<pre caption="Partíciók csatolása">
# <i>mount /dev/sda4 /mnt/gentoo</i> 
</pre>

<note>
Ha a <path>/tmp</path> könyvtárat külön partíción akarod tárolni, a csatolás 
után meg kell változtatnod a jogosultságait: 
<c>chmod 1777 /mnt/gentoo/tmp</c>. Ugyanez vonatkozik a <path>/var/tmp</path> 
könyvtárra is.
</note>

<p>
Most pedig folytasd a <uri link="?part=1&amp;chap=5">Gentoo Install fájlok 
telepítése</uri> fejezettel.
</p>

</body>
</section>
</sections>
