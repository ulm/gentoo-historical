<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/hu/handbook/2006.1/hb-install-alpha-disk.xml,v 1.1 2006/10/06 11:05:37 neysx Exp $ -->

<sections>

<version>7.0</version>
<date>2006-08-30</date>

<section>
<title>Pár szó az úgynevezett blokkeszközökről</title>
<subsection>
<title>Blokkeszközök</title>
<body>

<p>
Ahhoz, hogy tovább léphessünk, először alaposan áttekintjük a Gentoo Linux, 
és általában a Linuxok lemezkezelését. Szó lesz a Linux fájlrendszerekről,
partíciókról és blokkeszközökről. Miután tisztában leszel a lemez- és 
fájlkezelés minden csínjával, bínjával, végigvezetünk a Gentoo Linux 
telepítéséhez szükséges partíciók és fájlrendszerek létrehozásán.
</p>

<p>
Kezdjük mindjárt a <e>blokkeszközökkel</e>. A legismertebb ilyen eszköz
valószínűleg az, amelyik az első SCSI merevlemezt jelenti a Linux 
rendszerekben:
a <path>/dev/sda</path>.
</p>

<p>
Az ilyen fenti blokkeszközök nem mások, mint absztrakt kapcsolódási pontok a 
lemezegységhez. A felhasználói programok ezeket az eszközöket használják a 
lemez eléréséhez, anélkül, hogy tudnák, az most IDE, SCSI vagy valami más 
fajta egység. A program egyszerűen csak 512 bájtos, összefüggő, 
véletlenszerűen elérhető blokkokban megcímzi a lemezt.
</p>

</body>
</subsection>
<subsection>
<title>Szeletek</title>
<body>

<p>
Igaz, hogy elméletben lehetséges az egész lemezt egyben használni, s így 
telepíteni a Linuxot, de a gyakorlatban szinte sosem csinálják így. Ehelyett a 
teljes blokkeszközt feldarabolják kisebb, könnyebben kezelhető 
blokkeszközökre. Az Alpha rendszereken ezeket <e>szeleteknek (slice)</e> 
hívják.
</p>

</body>
</subsection>
</section>
<section>
<title>Hogyan tervezzük meg a partíciókiosztást?</title>
<subsection>
<title>Egy alap kiosztás leírása</title>
<body>

<p>
A példáinkban az alábbi módon szeleteljük fel a lemezt:
</p>

<table>
<tr>
  <th>Szelet</th>
  <th>Leírás</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Swap szelet</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>Root szelet</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>A teljes lemez (kötelező megadni)</ti>
</tr>
</table>


<p>
Ha érdekel, mekkora lehet egy partíció mérete, vagy azt, hogy hány partícióra 
(más néven kötetre) lesz szükséged, olvass tovább. Egyébként pedig folytathatod
<uri link="#fdisk_SRM">A lemez partícionálása az fdisk programmal 
(SRM rendszeren)</uri>, vagy <uri link="#fdisk_ARC">A lemez partícionálása 
az fdisk programmal (ARC/AlphaBIOS rendszereken)</uri> című fejezettel.
</p>

</body>
</subsection>
<subsection>
<title>Hány és mekkora?</title>
<body>

<p>
A partíciók száma erősen függ a használat módjától. Például, ha sok 
felhasználód lesz, valószínűleg külön akarod tenni a <path>/home</path>-ot, 
mivel így nő a biztonság, és a mentés is egyszerűbb. Ha levelező szervernek 
telepíted a Gentoo-t, érdemes a <path>/var</path>-t külön helyre rakni, mivel 
itt tárolódnak a levelek. Ha ehhez megfelelő fájlrendszert választasz, 
nagymértékben megnő a rendszered teljesítménye. A játékszervereknél 
az <path>/opt</path> mehet külön - a játékok szerverei többnyire ide kerülnek. 
Az oka hasonló, mint a <path>/home</path> esetén: biztonság és mentés. 
A <path>/usr</path>-t érdemes minél nagyobbra hagyni, mert nem csak az 
alkalmazások többsége települ ide, de maga a Portage-fa is körülbelül 500MB 
helyet foglal, nem számítva az itt tárolt forráskódokat.
</p>

<p>
Ebből már láthatod, a kérdésre adott válasz leginkább attól függ, mit akarsz
elérni. A különálló partícióknak vagy köteteknek az alábbi előnyei vannak:
</p>

<ul>
<li>
  A leggyorsabb fájlrendszert választhatod ki minden partíciónak vagy kötetnek
</li>
<li>
  A rendszered nem fog kifutni az összes szabad helyből, ha egy hibás eszköz
  folyamatosan fájlokat ír egy partícióra vagy kötetre
</li>
<li>
  Ha szükséges, a fájlrendszer-ellenőrzés ideje csökkenthető, mivel a több
  ellenőrzés egymással párhuzamosan futtatható (bár ez inkább akkor előny, ha
  több lemezegységed van)
</li>
<li>
  A biztonság növelhető azzal, hogy egyes partíciókat, köteteket csak 
  olvashatóan, nosuid (a setuid bitet nem veszi figyelembe) és noexec (a
  futtatható bitet nem veszi figyelembe) jellemzőkkel csatolsz
</li>
</ul>

<p>
A több partíciónak azonban hátránya is van: ha nem állítod be megfelelően,
a rendszered egyes helyein túl sok, máshol túl kevés szabad helyed marad.
</p>

</body>
</subsection>
</section>
<section id="fdisk_SRM">
<title>A lemez partícionálása az fdisk programmal (SRM rendszeren)</title>
<subsection>
<body>

<p>
Ebben a részben elmagyarázzuk, hogyan hozd létre az előző példában leírt 
szelet-kiosztást, vagyis:
</p>

<table>
<tr>
  <th>Szelet</th>
  <th>Leírás</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Swap szelet</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>Root szelet</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>A teljes lemez (kötelező)</ti>
</tr>
</table>

<p>
A kiosztást természetesen a saját igényeid szerint változtasd meg.
</p>


</body>
</subsection>
<subsection>
<title>A lemezegységek azonosítása</title>
<body>

<p>
Ahhoz, hogy megtudd, milyen lemezegységek vannak a gépedben, futtasd az alábbi
parancsokat:
</p>

<pre caption="A lemezegységek azonosítása">
# <i>dmesg | grep 'drive$'</i>        <comment>(IDE lemezekhez)</comment>
# <i>dmesg | grep 'scsi'</i>          <comment>(SCSI lemezekhez)</comment>
</pre>

<p>
A parancsok kimeneteiből meg tudod állapítani, milyem lemezeket ismert fel
a rendszered, és kiírja a megfelelő <path>/dev</path> bejegyzésüket is. A
következőkben azt feltételezzük, hogy egy SCSI lemezed van, <path>/dev/sda</path>
névvel.
</p>

<p>
Most pedig indítsd el az <c>fdisk</c> programot:
</p>

<pre caption="Az fdisk indítása">
# <i>fdisk /dev/sda</i>
</pre>

</body>
</subsection>
<subsection>
<title>Az összes szelet törlése</title>
<body>

<p>
Ha a lemezegységed teljesen üres, először egy BSD lemezcímkét kell 
létrehoznod.
</p>

<pre caption="BSD lemezcímke létrehozása">
Command (m for help): <i>b</i>
/dev/sda contains no disklabel.
Do you want to create a disklabel? (y/n) <i>y</i>
<comment>Itt egy rakás lemezre vonatkozó adat íródik ki</comment>
3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  c:        1      5290*     5289*    unused        0     0
</pre>

<p>
Először le kell törölni az összes szeletet, <e>kivéve</e> a 'c'-szeletet (erre
szükség van a BSD lemezcímkék használatához). A példában láthatod, hogyan
kell szeleteket törölni (itt éppen az 'a'-t). Addig ismételd, amíg a többit
is letörölted (kivéve a 'c' szeletet).
</p>

<p>
A <c>p</c> paranccsal nézheted meg a létező szeleteket. A <c>d</c> parancs pedig töröl.
</p>

<pre caption="Szelet törlése">
BSD disklabel command (m for help): <i>p</i>

8 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        1       235*      234*    4.2BSD     1024  8192    16
  b:      235*      469*      234*      swap
  c:        1      5290*     5289*    unused        0     0
  d:      469*     2076*     1607*    unused        0     0
  e:     2076*     3683*     1607*    unused        0     0
  f:     3683*     5290*     1607*    unused        0     0
  g:      469*     1749*     1280     4.2BSD     1024  8192    16
  h:     1749*     5290*     3541*    unused        0     0

BSD disklabel command (m for help): <i>d</i>
Partition (a-h): <i>a</i>
</pre>

<p>
Miután az összes szeletre megismételted a fenti lépéseket, a lista valahogy így
fog kinézni:
</p>

<pre caption="Üres partíció-szerkezet megtekintése">
BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  c:        1      5290*     5289*    unused        0     0
</pre>

</body>
</subsection>
<subsection>
<title>A swap szelet létrehozása</title>
<body>

<p>
Alpha-alapú rendszereken nincs szükség külön boot partícióra. Az első cilindert
azonban nem használhatod fel, ugyanis itt található az <c>aboot</c> fájlkép.
</p>

<p>
A swap szeletet a harmadik cilinderen indítjuk, 1GB méretben. Az <c>n</c>
parancs hoz létre új szeletet. Miután elkészült, a típusát <c>1</c> (egy)
értékre állítjuk, ez jelenti azt, hogy <e>swap</e>.
</p>

<pre caption="A swap szelet létrehozása">
BSD disklabel command (m for help): <i>n</i>
Partition (a-p): <i>a</i>
First cylinder (1-5290, default 1): <i>3</i>
Last cylinder or +size or +sizeM or +sizeK (3-5290, default 5290): <i>+1024M</i>

BSD disklabel command (m for help): <i>t</i>
Partition (a-c): <i>a</i>
Hex code (type L to list codes): <i>1</i>
</pre>

<p>
Ezek után valami ilyesmi kiosztást kell, hogy kapj:
</p>

<pre caption="A szeletek kiosztása a swap szelet elkészülte után">
BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        3      1003      1001       swap
  c:        1      5290*     5289*    unused        0     0
</pre>

</body>
</subsection>
<subsection>
<title>A root szelet létrehozása</title>
<body>

<p>
Példánkban már csak a root szeletet kell létrehoznunk, a swap <e>után</e> következő
első lehetséges cilindertől. A <c>p</c> paranccsal nézd meg, hol ér véget a swap
szelet. A példánkban 1003-on, vagyis a root 1004-en kezdődik majd.
</p>

<p>
Jelenleg van egy hiba az <c>fdisk</c> programban, amely miatt azt hiszi, hogy a
cilinderek száma eggyel nagyobb, mint amennyi fizikailag létezik a lemezen. 
Vagyis amikor a szelet utolsó cilinderét kérdezi, eggyel kevesebbet kell beírnod 
(példánkban 5290).
</p>

<p>
Miután elkészült a partíció, a típusát <c>8</c>-ra, vagyis <e>ext2</e>-re váltjuk.
</p>

<pre caption="A root szelet létrehozása">
D disklabel command (m for help): <i>n</i>
Partition (a-p): <i>b</i>
First cylinder (1-5290, default 1): <i>1004</i>
Last cylinder or +size or +sizeM or +sizeK (1004-5290, default 5290): <i>5289</i>

BSD disklabel command (m for help): <i>t</i>
Partition (a-c): <i>b</i>
Hex code (type L to list codes): <i>8</i>
</pre>

<p>
A kiosztásod tehát valahogy így fog kinézni:
</p>

<pre caption="A szelet-kiosztás megtekintése">
BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        3      1003      1001       swap
  b:     1004      5289      4286       ext2
  c:        1      5290*     5289*    unused        0     0
</pre>

</body>
</subsection>
<subsection>
<title>Kiosztás mentése és kilépés</title>
<body>

<p>
Mentsd el az <c>fdisk</c>-et a <c>w</c> paranccsal! Ez egyben a kiosztást is elmenti.
</p>

<pre caption="Mentés és kilépés az fdisk programból">
Command (m for help): <i>w</i>
</pre>

<p>
Most, hogy elkészültek a szeleteid, folytathatod a <uri link="#filesystems">
Fájlrendszerek létrehozása</uri> fejezettel.
</p>

</body>
</subsection>
</section>
<section id="fdisk_ARC">
<title>A lemez partícionálása az fdisk programmal (ARC/AlphaBIOS rendszereken)</title>
<subsection>
<body>

<p>
Ebben a részben elmagyarázzuk, hogyan hozd létre az előző példában leírt 
partíció-kiosztást, vagyis:
</p>

<table>
<tr>
  <th>Partíció</th>
  <th>Leírás</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Boot partíció</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>Swap partíció</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>Root partíció</ti>
</tr>
</table>

<p>
A kiosztást természetesen a saját igényeid szerint változtasd meg.
</p>

</body>
</subsection>
<subsection>
<title>A lemezegységek azonosítása</title>
<body>

<p>
Ahhoz, hogy megtudd, milyen lemezegységek vannak a gépedben, futtasd az alábbi
parancsokat:
</p>

<pre caption="A lemezegységek azonosítása">
# <i>dmesg | grep 'drive$'</i>        <comment>(IDE lemezekhez)</comment>
# <i>dmesg | grep 'scsi'</i>          <comment>(SCSI lemezekhez)</comment>
</pre>

<p>
A parancsok kimeneteiből meg tudod állapítani, milyem lemezeket ismert fel
a rendszered, és kiírja a megfelelő <path>/dev</path> bejegyzésüket is. A
következőkben azt feltételezzük, hogy egy SCSI lemezed van, <path>/dev/sda</path>
névvel.
</p>

<p>
Most pedig indítsd el az <c>fdisk</c> programot:
</p>

<pre caption="Az fdisk indítása">
# <i>fdisk /dev/sda</i>
</pre>

</body>
</subsection>
<subsection>
<title>Az összes partíció törlése</title>
<body>

<p>
Ha a lemezegységed teljesen üres, először egy DOS lemezcímkét kell 
létrehoznod.
</p>

<pre caption="DOS lemezcímke létrehozása">
Command (m for help): <i>o</i>
Building a new DOS disklabel.
</pre>

<p>
Először le kell törölni az összes partíciót. A példában láthatod, hogyan
kell partíciót törölni (itt éppen az '1'-t). Addig ismételd, amíg a többit
is mindet letörölted.
</p>

<p>
A <c>p</c> paranccsal nézheted meg a létező partíciókat. A <c>d</c> parancs pedig töröl.
</p>

<pre caption="Partíció törlése">
command (m for help): <i>p</i>

Disk /dev/sda: 9150 MB, 9150996480 bytes
64 heads, 32 sectors/track, 8727 cylinders
Units = cylinders of 2048 * 512 = 1048576 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1         478      489456   83  Linux
/dev/sda2             479        8727     8446976    5  Extended
/dev/sda5             479        1433      977904   83  Linux Swap
/dev/sda6            1434        8727     7469040   83  Linux

command (m for help): <i>d</i>
Partition number (1-6): <i>1</i>
</pre>


</body>
</subsection>
<subsection>
<title>A boot partíció létrehozása</title>
<body>

<p>
Azokon az Alpha rendszereken, amelyek a MILO-t használják rendszerindításra,
létre kell hozni egy kisméretű, vfat típusú boot partíciót.
</p>

<pre caption="A boot partíció létrehozása">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-8727, default 1): <i>1</i>
Last cylinder or +size or +sizeM or +sizeK (1-8727, default 8727): <i>+16M</i>

Command (m for help): <i>t</i>
Selected partition 1
Hex code (type L to list codes): <i>6</i>
Changed system type of partition 1 to 6 (FAT16)
</pre>

</body>
</subsection>
<subsection>
<title>A swap partíció létrehozása</title>
<body>

<p>
A swap-et a harmadik cilinderen indítjuk, 1GB méretben. Az <c>n</c> parancs hoz 
létre új partíciót.
</p>

<pre caption="A swap partíció létrehozása">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>2</i>
First cylinder (17-8727, default 17): <i>17</i>
Last cylinder or +size or +sizeM or +sizeK (17-8727, default 8727): <i>+1000M</i>

Command (m for help): <i>t</i>
Partition number (1-4): <i>1</i>
Hex code (type L to list codes): <i>82</i>
Changed system type of partition 2 to 82 (Linux swap)
</pre>

<p>
Ezek után valami ilyesmi kiosztást kell, hogy kapj:
</p>

<pre caption="Partíció-kiosztás a swap partíció elkészülte után">
Command (m for help): <i>p</i>

Disk /dev/sda: 9150 MB, 9150996480 bytes
64 heads, 32 sectors/track, 8727 cylinders
Units = cylinders of 2048 * 512 = 1048576 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1          16       16368    6  FAT16
/dev/sda2              17         971      977920   82  Linux swap
</pre>

</body>
</subsection>
<subsection>
<title>A root partíció létrehozása</title>
<body>

<p>
Most pedig a root partíciót hozzuk létre. Ezt is az <c>n</c> paranccsal teheted
meg.
</p>

<pre caption="A root partíció létrehozása">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>3</i>
First cylinder (972-8727, default 972): <i>972</i>
Last cylinder or +size or +sizeM or +sizeK (972-8727, default 8727): <i>8727</i>
</pre>

<p>
Ezek után valami ilyesmi kiosztást kell, hogy kapj:
</p>

<pre caption="Partíció-kiosztás a root partíció elkészülte után">
Command (m for help): <i>p</i>

Disk /dev/sda: 9150 MB, 9150996480 bytes
64 heads, 32 sectors/track, 8727 cylinders
Units = cylinders of 2048 * 512 = 1048576 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1          16       16368    6  FAT16
/dev/sda2              17         971      977920   82  Linux swap
/dev/sda3             972        8727     7942144   83  Linux
</pre>

</body>
</subsection>
<subsection>
<title>Partíció-kiosztás mentése és kilépés</title>
<body>

<p>
Mentsd el az <c>fdisk</c>-et a <c>w</c> paranccsal! Ez egyben a partíció-kiosztásodatt 
is elmenti.
</p>

<pre caption="Mentés és kilépés az fdisk programból">
Command (m for help): <i>w</i>
</pre>

<p>
Most, hogy elkészültek a szeleteid, folytathatod a <uri link="#filesystems">
Fájlrendszerek létrehozása</uri> fejezettel.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Fájlrendszerek létrehozása</title>
<subsection>
<title>Bevezetés</title>
<body>

<p>
A partícióid elkészültek, ideje lenne valamilyen tenni is rájuk. Ha nem akarsz 
azzal bajlódni, hogy milyen típust válassz, és megfelel az, amit a Kézikönyv 
példáiban használunk, átugorhatsz a <uri link="#filesystems-apply">
Fájlrendszer létrehozása egy partíción</uri> fejezetre. Ha igen, akkor lássuk,
mik is ezek a különféle fájlrendszerek...
</p>

</body>
</subsection>
<subsection>
<title>Fájlrendszerek?</title>
<body>

<p>
Többféle közül választhatsz. Ezek stabilan működik az Alpha architektúrán.
</p>

<note>
Az <c>aboot</c> kizárólag <b>ext2</b> és <b>ext3</b> típusú partíciókról tud
indítani!
</note>

<p>
Az <b>ext2</b> a leginkább kipróbált, igazi Linuxos fájlrendszer. Nem ismeri
a metaadat-naplózást, ezért az gép indulásakor történő ext2-ellenőrzés sokáig
eltarthat. Manapság többféle újgenerációs naplózó fájlrendszer közül lehet 
választani, melyek nagyon gyorsan ellenőriznek, ezért inkább ezeket érdemes
használni. A naplózó rendszerek megszüntetik a rendszerindítás során fellépő
hosszú várakozásokat, amikor a rendellenes állapotban lévő fájlrendszereket
kell kijavítani.
</p>

<p>
Az <b>ext3</b> lenne az ext2 rendszer naplózó változata. Ismeri a metaadat-naplózást
(vagyis gyorsan visszaállítja a sérült adatokat), valamint többféle fejlett 
naplózó módot is, mint például teljes és rendezett adatnaplózás. Az ext3 egy 
nagyon jó és megbízható fájlrendszer.
</p>

<p>
A <b>ReiserFS</b> egy B*-fa alapú fájlrendszer, nagyon jó átlagos teljesítménnyel.
Ha kisméretű (4k-nál kisebb) fájlokkal kell dolgozni, bőven felülmúlja az ext2 
és az ext3 teljesítményét, akár 10-15-szörösen is. Jól skálázható, metaadat-
naplózást is ismer. A 2.4.18-as kerneltől kezdve megbízható, használható 
rendszer, mind átlagos, mind extrém használatra (mint például nagyon nagy 
fájlrendszerek létrehozása, rengeteg apró fájl, vagy nagyon nagy fájlok és 
több tízezer fájlt tartalmazó könyvtárak kezelése).
</p>

<p>
Az <b>XFS</b> is metaadat-naplózó fájlrendszer, rengeteg kiegészítő 
szolgáltatással, elsődlegesen a skálázhatóságra tervezve. Ezt csak 
felsőkategóriás SCSI vagy optikai szálas adattárolók esetén javasoljuk, melyek 
önálló szünetmentes tápegységen vannak. Mivel az XFS nagyon agresszív módon 
cache-el (tárolja az átvitt adatokat a rendszer-memóriában), egy rosszul 
tervezett program (melyek nem elég alaposak, amikor fájlokat kell lemezre 
írniuk - s elég sok ilyen létezik) rengeteg adatot elveszíthet egy hirtelen 
rendszerleállás miatt.
</p>

<p>
A <b>JFS</b> az IBM nagyteljesítményű naplózó fájlrendszere. Nemrégiben vált
teljesen megbízhatóvá, így még nincs elég tapasztalat ahhoz, hogy a 
pozitívumairól, negatívumairól, vagy a megbízhatóságáról beszélhessünk.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Fájlrendszer létrehozása egy partíción</title>
<body>

<p>
Ahhoz, hogy egy partíción vagy köteten fájlrendszert hozz létre, a saját
eszközeiket kell használnod:
</p>

<table>
<tr>
  <th>Fájlrendszer</th>
  <th>A létrehozás parancsa</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Ha például a root partíción (a példánkban <path>/dev/sda2</path>) egy ext3 
fájlrendszert akarsz létrehozni, így adhatod meg:
</p>

<pre caption="Fájlrendszer létrehozása egy partíción">
# <i>mke2fs -j /dev/sda2</i>
</pre>

<p>
Most pedig hozd létre a választott fájlrendszereidet az újonnan
létrehozott partícióidon (vagy logikai köteteiden).
</p>

</body>
</subsection>
<subsection>
<title>A swap partíció bekapcsolása</title>
<body>

<p>
Az <c>mkswap</c> paranccsal lehet inicializálni a swap partíciót:
</p>

<pre caption="Swap bejegyzés létrehozása">
# <i>mkswap /dev/sda1</i>
</pre>

<p>
A swap partíció aktiválásához pedig a <c>swapon</c> parancs kell:
</p>

<pre caption="Swap partíció bekapcsolása">
# <i>swapon /dev/sda1</i>
</pre>

<p>
Hozd létre és kapcsold be a swap-et a fenti parancsokkal!
</p>

</body>
</subsection>
</section>
<section>
<title>Csatolás</title>
<body>

<p>
Készen vannak a partícióid, rajtuk az üres fájlrendszerekkel. Itt az ideje, 
hogy csatoljuk őket a <c>mount</c> paranccsal. Ne felejtsd el előtte 
létrehozni az új partícióidhoz szükséges csatolási könyvtárakat! A példánkban 
a root és a boot partíciókat csatoljuk:
</p>

<pre caption="Partíciók csatolása">
# <i>mount /dev/sda2 /mnt/gentoo</i>
</pre>

<note>
Ha a <path>/tmp</path> könyvtárat külön partíción akarod tárolni, a csatolás után
meg kell változtatnod a jogosultságait: <c>chmod 1777 /mnt/gentoo/tmp</c>. Ugyanez
vonatkozik a <path>/var/tmp</path> könyvtárra is.
</note>

<p>
Ugyancsak csatolnunk kell a proc fájlrendszert is (ez egy virtuális 
kapcsolódási pont a kernelhez) a <path>/proc</path> könyvtárba. De először el 
kell helyeznünk az állományainkat az új partícióinkon.
</p>

<p>
Most pedig folytasd a <uri link="?part=1&amp;chap=5">Gentoo Install fájlok telepítése</uri>
fejezettel.
</p>

</body>
</section>
</sections>
