<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: java.xml,v 1.9 2007/05/04 09:34:47 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/hu/java.xml" lang="hu">

<title>Gentoo Java Útmutató</title>

<author title="Szerző">
  <mail link="nichoj@gentoo.org">Joshua Nichols</mail>
</author>
<author title="Szerző">
  <mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>
<author title="Szerkesztő">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Fordító">
  <mail link="katalin.konkoly@gmail.com">Konkoly Katalin</mail>
</author>
<author title="Lektor">
  <mail link="alephlg@gmail.com">Lónyai Gergely</mail>
</author>

<abstract>
Ez az útmutató bevezet a Java programnyelvbe, és elmagyarázza, hogyan használd 
Gentoo Linuxon.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.15</version>
<date>2007-04-28</date>

<chapter>
<title>Mi a Java?</title>
<section>
<title>Áttekintés</title>
<body>

<p>
A Java a Sun Microsystems mérnökei által kifejlesztett, objektum-orientált
programozási nyelv. Úgy tervezték, hogy többféle platformon is fusson, a kód
újrafordítása nélkül. Noha a Javát natív programként is le lehet fordítani,
népszerűségét mégis nagyrészt portolhatóságának köszönheti, olyan képességei
mellett, mint a Garbage Collection.  A platform-függetlenség érdekében a Java
fordító a Java kódot egy "Java bytecode"-nak nevezett köztes megjelenítési
rétegre fordítja le, amely aztán egy JRE-ben (Java Runtime Environment) fut, s
nem közvetlenül az operációs rendszeren.
</p>

<p>
A Java bytecode futtatásához telepíteni kell egy JRE-t (Java Runtime
Environment), ami biztosítja többek között a fő függvénykönyvtárakat, egy
platformfüggetlen Java virtuális gépet (Java Virtual Machine) és bővítményeket
a böngészőkhöz. A JDK (Java Development Kit) pedig programozási eszközöket
biztosít, pl. bytecode fordítót és hibakeresőt.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Mielőtt elkezdenéd</title>
<section>
<title>Létező telepítés</title>
<body>

<p>
Ha már van egy létező bármilyen Java környezeted, akkor győződj meg róla, hogy 
követted a 
<uri link="/proj/en/java/java-upgrade.xml">Java frissítési segítséget</uri>.
</p>

</body>
</section>
<section>
<title>Új telepítés</title>
<body>

<p>
Az új telepítés nem igényel további előkészítést.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Egy Virtuális Gép telepítése</title>
<section>
<title>Lehetőségek</title>
<body>

<p>
A Gentooban számos futtatási környezet (Java Runtime Environment) JRE és 
fejlesztői eszköz (Java Development Kit) JDK áll rendelkezésünkre. A jelenlegi 
alternatívák a következők:
</p>

<table>
<tr>
  <th>Gyártó</th>
  <th>JDK</th>
  <th>JRE</th>
</tr>
<tr>
  <ti>Blackdown Java Kit</ti>
  <ti>dev-java/blackdown-jdk</ti>
  <ti>dev-java/blackdown-jre</ti>
</tr>
<tr>
  <ti>Sun Java Kit</ti>
  <ti>dev-java/sun-jdk</ti>
  <ti>dev-java/sun-jre-bin</ti>
</tr>
<tr>
  <ti>IBM Java Kit</ti>
  <ti>dev-java/ibm-jdk-bin</ti>
  <ti>dev-java/ibm-jre-bin</ti>
</tr>
<tr>
  <ti>Compaq Java Kit Alpha/Linux/GNU-hoz</ti>
  <ti>dev-java/compaq-jdk</ti>
  <ti>dev-java/compaq-jre</ti>
</tr>
<tr>
  <ti>BEA WebLogic J2SE Development Kit</ti>
  <ti>dev-java/jrockit-jdk-bin</ti>
</tr>
</table>

<!--
TODO: list free implmentations? 
note about not drop-in replacemenets 
kaffe/sablevm/gcj/jamvm 
-->
<p>
Mind JRE, mind JDK tekintetében a Blackdown az alapértelmezés, mivel ingyen 
("free as in beer"), mindenféle regisztrációs hercehurca nélkül telepíthető.
</p>

<p>
A Sun JDK/JRE, az IBM JDK/JRE és a BEA JDK/JRE általában véve gyorsabbak, de 
egy kicsit komplikáltabb őket beszerezni, mivel letöltés előtt el kell olvasni 
és elfogadni a licencüket (az IBM-nél még regisztrálni is kell)
</p>

</body>
</section>
<section>
<title>JRE/JDK telepítése</title>
<body>

<p>
A profilodhoz tartozó alapértelmezett JDK telepítéséhez futtasd az 
<c>emerge virtual/jdk</c>, vagy a JRE-hez a <c>emerge virtual/jre</c> 
parancsot..
</p>

<p>
Nemrégiben a Sun új licenszszerződéssel bocsájtotta ki a saját JDK/JRE 
verzióit - több Linux disztribúció baráti licenszt kapott. Ennek eredményeként 
a a Java 1.5-től kezdve szabadon letölthető, minden huzavona nélkül.
</p>

<note>
A JDK tartalmazza a JRE-t is, ezért JDK telepítésekor nem kell JRE-t is 
telepítened.
</note>

</body>
</section>
<section>
<title>Előre letöltős JRE/JDK-k telepítése</title>
<body>

<p>
Mint már említettem, néhány JDK és JRE igényli, hogy néhány apróbb lépéssel 
letöltsd a szükséges állományokat a telepítés előtt. Ez könnyen kiderül, ha 
normálisan próbálod telepíteni a csomagokat. Az ebuild rövid magyarázattal fog 
szolgálni, hogy mit és honnan tölts le.
</p>

<p>
A megnevezett fájlokat az <path>/usr/portage/distfiles</path> alá kell 
letölteni. Amint ez kész, ismét futtathatod az emerge parancsot, ezáltal a JRE/
JDK elkezd települni.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Virtuális gép konfigurálása</title>
<section>
<title>Áttekintés</title>
<body>

<p>
A Gentooban lehetőség van arra, hogy több JRE/JDK is telepítve legyen anélkül, 
hogy ütköznének egymással.
</p>

<p>
A <c>java-config</c> segítségével beállíthatod az egész rendszerre érvényes 
alapértelmezést, ha van root hozzáférésed. A felhasználók is használhatják a 
<c>java-config</c>-ot a személyes alapértelmezett JRE/JDK beállítására, amely 
különbözhet a rendszer alapértelmezettjétől..
</p>

<note>
Az <e>eselect</e> segítségével is beállíthatod a rendszer és a felhasználók 
VM-jét. Lásd <c>eselect java-VM help</c>.
</note>

</body>
</section>
<section>
<title>Az alapértelmezett Virtuális gép beállítása</title>
<body>

<p>
Kiadva az alábbi parancsot: <c>java-config --list-available-vms</c>, megkapod 
a rendszereden elérhető JRE-k és JDK-k listáját,az alábbi példához hasonlóan:
</p>

<pre caption="Az elérhető VM-ek listája">
# <i>java-config --list-available-vms</i>
The following VMs are available for generation-2:
1)      Blackdown JDK 1.4.2.03 [blackdown-jdk-1.4.2]
2)      Blackdown JRE 1.4.2.03 [blackdown-jre-1.4.2]
3)      Blackdown 32bit JRE 1.4.2.03 [emul-linux-x86-java-1.4.2]
4)      Sun 32bit JRE 1.5.0.08 [emul-linux-x86-java-1.5]
5)      Kaffe 1.1.7 [kaffe]
*)      Sun JDK 1.5.0.08 [sun-jdk-1.5]
</pre>

<p>
A <e>*</e> jelzi, hogy melyik a jelenleg aktív VM (rendszer-VM vagy 
felhasználói VM, amennyiben be van állítva). A szögletes zárójelekben 
(<e>[]</e>) szereplő név  az adott VM azonosítója. Ezt átadva a 
<c>java-config --set-system-vm</c> parancsnak beállíthatod a VM-et, így:
</p>

<pre caption="A rendszer-VM beállítása">
<comment>(Azonosító alapján (javallott))</comment>
# <i>java-config --set-system-vm blackdown-jdk-1.4</i>
Now using blackdown-jdk-1.4 as your generation-2 system JVM
<comment>(Szám alapján)</comment>
# <i>java-config --set-system-vm 6</i>
</pre>

<p>
Egyszerű felhasználóként a <c>java-config --set-user-vm</c> parancsot 
használhatod.
</p>

<note>
Már nem kell <c>source</c>-olni ahhoz, hogy a felhasználói/rendszer-VM 
beállítások életbe lépjenek.
</note>

</body>
</section>
<section id="preferred-vm">
<title>A preferált VM</title>
<body>

<p>
Java csomagok fordításánál a szükséges VM-re lehet váltani.
</p>

<p>
Mivel igen széles az elérhető VM-változatok köre, nincs erőforrásunk minden 
csomagot mindegyiken tesztelni. Viszont szeretnénk biztosítani, hogy minden 
csomag simán leforduljon, ezért összeállítottunk egy listát az 
<e>alapértelmezett/támogatott VM-ekről</e> architektúránként, amit megtalálsz 
az <path>/usr/share/java-config-2/config/jdk-defaults.conf</path>-ban. Ha 
valamilyen Java-csomagot fordítasz, és az észreveszi, hogy a számára szükséges 
VM telepítve van, automatikusan azt fogja használni a rendszer 
alapértelmezettje helyett.
</p>

<p>
A fordítás idejére történő VM-váltás akkor is szükséges, ha pl. a rendszer-VM 
1.4-re van beállítva, de a fordítandó csomagnak az 1.5-ös szükséges. Fordítás 
közben a preferált 1.5-ös VM-et fogja használni, érintetlenül hagyva a 
rendszered alapértelmezettjét.
</p>

<p>
Minthogy a Gentoo lényege a választás lehetősége, ezeket az alapbeállításokat 
természetesen felülbírálhatod az 
<path>/etc/java-config-2/build/jdk.conf</path>-ban, így teljes mértékben te 
döntöd el, melyik VM-et használod. Íme néhány példa:
</p>

<pre caption="Példa az /etc/java-config-2/build/jdk.conf-ra">
<comment>(Mindig a sun-jdk-t akarom használni, azaz a sun-jdk-1.4-et az 
1.4-hez, sun-jdk-1.5-öt az 1.5-höz stb.)</comment>
*=sun-jdk
</pre>

<pre caption="Példa az /etc/java-config-2/build/jdk.conf-ra">
<comment>(Ha csak lehet, mindig a sun-jdk-1.5-öt használja, kivéve ha 
kifejezetten 1.4 vagy 1.3 kell)</comment>
*=sun-jdk-1.5
</pre>

<pre caption="Példa az /etc/java-config-2/build/jdk.conf-ra">
<comment># Az 1.3-hoz a sun-jdk-1.4et akarom használni, de ha az nem elérhető, 
akkor legyen az ibm-jdk-bin, Az 1.4-hez használom a blackdown-jdk-t, 
az 1.5-höz pedig a sun-jdk-t </comment>
1.3=sun-jdk-1.4 ibm-jdk-bin
1.4=blackdown-jdk
1.5=sun-jdk
</pre>

<warn>
Ne szerkeszd ezt a fájlt! Ha változtatsz a beállításokon, mert mondjuk egy nem 
támogatott VM-et akarsz használni, az súlyos hibákat okozhat. Nem támogatott 
VM által okozott hibák kissebb fontosságot élveznek, ha támogatott VM-eknél 
nem jelentkezik.
</warn>

</body>
</section>
</chapter>

<chapter>
<title>Fordítóprogramok</title>
<section>
<body>

<p>
A fordításokhoz használt standard Java fordító a javac, amelyet minden JDK 
tartalmaz. Nem csak a fordítás idején használt VM-et lehet beállítani, hanem a 
fordítóprogramot is. Lényegében egy listát határozhatsz meg a preferált 
Java-fordítókról az <path>/etc/java-config-2/build/compilers.conf</path>-ban.
</p>

<pre caption="/etc/java-config-2/build/compilers.conf">
# If the ebuild supports it
# it will check the COMPILERS var front to back and
# use the first compiler that is installed

COMPILERS="ecj-3.1 jikes javac"
</pre>

<p>
Néhány fordítóprogram nem támogatja az összes lehetséges -target és -source 
argumentumot, ezért mindegyik listában szereplő fordítót ellenőrzi, hogy 
képes-e támogatni a kívánt -target/-source argumentumot. A javac mindig 
működik, tehát ha nem talál más megfelelő fordítót, akkor azt használja a 
rendszer.
</p>

<p>
Az alábbi táblázatban találsz részleteket az egyes fordítókról:
</p>

<table>
<tr>
  <th>Név</th>
  <th>Azonosító</th>
  <th>Csomag</th>
  <th>Leírás</th>
</tr>
<tr>
  <ti>javac</ti>
  <ti>javac</ti>
  <ti>N/A</ti>
  <ti>
Ez az alapértelmezett fordító, ezt minden JDK tartalmazza.
  </ti>
</tr>
<tr>
  <ti>jikes</ti>
  <ti>jikes</ti>
  <ti>dev-java/jikes</ti>
  <ti>
A Jikes-t eredetileg az IBM fejlesztette ki. Az anekdoták szerint általában 
gyorsabb, mint a javac, ugyanakkor pedánsabb is, azaz bizonyos körülmények 
között elhasal, amikor a javac gond nélkül teszi a dolgát. A Java 1.5-ös 
szintakszist sem támogatja még.
  </ti>
</tr>
<tr>
  <ti>Eclipse Compiler for Java</ti>
  <ti>ecj-3.1</ti>
  <ti>=dev-java/eclipse-ecj-3.1*</ti>
  <ti>
Az ECJ fordítót szokták használni az Eclipse szoftverfejlesztő készlettel 
együtt. Nagyon sokat tud, és igen gyors. Támogatja a Java 1.5-ös szintakszist.
  </ti>
</tr>
</table>

</body>
</section>
</chapter>

<chapter>
<title>Az alapértelmezett CLASSPATH beállítása</title>
<section>
<body>

<warn>
Az alább leírt opciókat tekintsd érvénytelennek, valószínűleg törölni is 
fogjuk a közeljövőben. Nem tanácsoljuk ezek használatát, mert a Java 
projektjeid vagy alkalmazásaid ideálisan tudják kezelni a saját classpath-
jaikat. Ha saját alapértelmezett CLASSPATH-ot definiálsz, néhány alkalmazás 
váratlan viselkedést fog produkálni, ugyanis olyan osztályokat találhatnak a 
classpath-ban, amelyekre nem számítottak.
</warn>

<p>
A <c>java-config</c> segítségével a rendszer alapértelmezett CLASSPATH 
változója is beállítható, és persze a felhasználók saját specifikus 
alapértelmezett CLASSPATH változói is.
</p>

<p>
Először is fel kell soroltatni azokat a könyvtárakat, amelyeket érdemes lehet 
bevenni a CLASSPATH-ba, imígyen:
</p>

<pre caption="Osztályok listázása">
# <i>java-config --list-available-packages</i>
[xerces-2] The next generation of high performance, fully compliant XML parsers in the Apache Xerces family (/usr/share/xerces-2/package.env)
[junit] Simple framework to write repeatable tests (/usr/share/junit/package.env)
[bsh] BeanShell: A small embeddable Java source interpreter (/usr/share/bsh/package.env)
[bcel] The Byte Code Engineering Library: analyze, create, manipulate Java class files (/usr/share/bcel/package.env)
[log4j] A low-overhead robust logging package for Java (/usr/share/log4j/package.env)
...
</pre>

<p>
Mint már említettük, a szögletes zárójelek (<e>[]</e>) közötti nevek azok az 
azonosítók, amelyeket a <c>java-config --set-system-classpath</c> parancsnak 
kell átadni, eképpen:
</p>

<pre caption="Classpath beállítása">
# <i>java-config --set-system-classpath log4j,xerces-2</i>
</pre>

<note>
Az aktuális könyvtár (<path>.</path>) nem lesz benne a rendszer-classpathban, 
mivel azt a bejelentkezési profile-ban kell megadni.
</note>

<p>
Ezután frissíteni kell a környezetet, vagy ki- és bejelentkezéssel, vagy 
az <path>/etc/profile</path> source-olásával.
</p>

<p>
Felhasználók esetében a <c>java-config --set-user-classpath</c> létrehozza 
a <path>$HOME/.gentoo/java-env-classpath</path>-ot, amelyet utána source-olni 
kell a shelled profile-jából.
</p>

<pre caption="Felhasználó-specifikus classpath source-olása">
<i>if [[ -f "${HOME}/.gentoo/java-env-classpath" ]]; then
       source ${HOME}/.gentoo/java-env-classpath
fi</i>
</pre>

<p>
Ha valóban rendszerszintű vagy felhasználói alapértelmezett classpath-ot 
akarsz, az alábbihoz hasonló sort adhatsz hozzá a shelled profile-jához - de 
ezt nem mi nem tanácsolnánk.
</p>

<pre caption="A classpath beállítása">
# <i>export CLASSPATH="${CLASSPATH}:$(java-config --classpath log4j,xerces-2)"</i> 
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Java böngésző pluginek</title>
<section>
<title>Plugin telepítése</title>
<body>

<p>
Ha telepíteni szeretnéd a Java plugint a webböngésződbe, akkor a Java VM-et 
az <c>nsplugin</c> USE zászlóval kell emergelned.
</p>

<note>
Az <c>nsplugin</c> nem minden architektúrán érhető el. Légyszi nézd meg a 
telepítés előtt az elérhetőségét az <c>emerge -pv &lt;java-vm&gt;</c> 
kimenetében.
</note>

<p>
A Portage rendszere lehetővé teszi több Java plugin verzió telepítését 
egyazon gépre, viszont a webböngésző csak egyet tud egyszerre használni. Nézd 
meg, hogy nálad hány elérhető plugin van telepítve:
</p>

<pre caption="Az elérhető pluginok listázása">
# <i>eselect java-nsplugin list</i>
   [1]   sun-jre-bin-1.5
   [2]   blackdown-jre-1.4.2
</pre>

<p>
A példánkban a <c>sun-jre-bin</c>-t fogjuk kiválasztani a webböngésző 
pluginjának.
</p>

<pre caption="Egy plugin kiválasztása">
# <i>eselect java-nsplugin set sun-jre-bin-1.5</i>
</pre>

<p>
A kiválasztás helyességének leellenőrzése:
</p>

<pre caption="Helyes plugint választottunk?">
# <i>eselect java-nsplugin list</i>
   [1]   sun-jre-bin-1.5  current
   [2]   blackdown-jre-1.4.2
</pre>

<p>
A Java.com-on található egy weblap, amivel leellenőrizhető, hogy a 
<uri link="http://java.com/en/download/installed.jsp">telepített plugin 
megfelelő-e</uri>. Ha Mozilla alapú webböngésződ van, akkor másképpen is 
leellenőrizheted a jelenleg érvényben lévő Java plugint. Írd be a link 
sorába: <c>about:plugins</c>.
</p>

</body>
</section>
<section>
<title>Pluginok a multilib rendszereken</title>
<body>

<p>
Ha kevert (32 és 64 bites) multilib rendszert (például AMD64) használsz, akkor 
csak a 32 bites verziót fel kell telepítened.
</p>

<p>
Ha 32 bites plugint használsz, akkor emergelned kell a 
<c>emul-linux-x86-java</c> csomagot az <c>nsplugin</c> USE flaggel.
</p>

<pre caption="Egy 32 bites plugin telepítése">
# <i>echo "app-emulation/emul-linux-x86-java nsplugin" >> /etc/portage/package.use</i>
# <i>emerge emul-linux-x86-java</i>
</pre>

<p>
Utánna nézd meg, hogy mely pluginok elérhetőek:
</p>

<pre caption="Az elérhető pluginok listázása">
# <i>eselect java-nsplugin list</i>
Available 32-bit Java browser plugins
  [1]   emul-linux-x86-java-1.4.2
  [2]   emul-linux-x86-java-1.5
</pre>

<p>
Miután kiválasztottál egy 32 bites plugint a 32 bites böngészőhöz (például: 
<c>firefox-bin</c>), a 64 bites böngésződ (például: <c>konqueror</c>) a Java 
VM-et szintén tudja már használni. Ha lehetséges, akkor a 64 bites 
<c>blackdown</c> verziót; azaz nem szükséges külön konfigurálni.
</p>

<p>
Most válassz ki egy jó plugint a 32 bites böngésződnek:
</p>

<pre caption="Pluginok kiválasztása">
# <i>eselect java-nsplugin set 32bit emul-linux-x86-java-1.5</i>
</pre>

<p>
A kiválasztás helyességének leellenőrzése:
</p>

<pre caption="Helyes plugint választottunk?">
# <i>eselect java-nsplugin list</i>
Available 32-bit Java browser plugins
  [1]   emul-linux-x86-java-1.4.2
  [2]   emul-linux-x86-java-1.5  current
</pre>

</body>
</section>
</chapter>

<chapter>
<title>USE flagek használata Javával</title>
<section>
<title>A USE flagek beállítása</title>
<body>

<p>
A USE flagek használatáról a Gentoo Kézikönyv  
<uri link="/doc/hu/handbook/handbook-x86.xml?part=2&amp;chap=2">USE 
flagek</uri> fejezetében olvashatsz bővebben.
</p>

</body>
</section>
<section>
<title>A flagek</title>
<body>

<ul>
  <li>A <b>java</b> flag sokféle program Java-támogatását biztosítja</li>
  <li>
Az <b>nsplugin</b> flag támogatást nyújt a Mozilla-típusú böngészőkhöz 
(beleértve a Firefoxot). Erre szükséged lesz, ha Mozilla-alapú böngészőben 
Java-kisalkalmazásokat akarsz megtekinteni.
  </li>
  <li>
A <b>source</b> flag a csomagok forráskódját zippelt formában telepíti. Ezt 
jellemzően olyankor használják, ha az IDE (integrált fejlesztőkörnyezet) 
számára szükséges a csomag forráskódja.
    
  </li>
  <li>
A <b>doc</b> flag jellemzően telepíti az API dokumentációt, ahogyan a javadoc 
generálja.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>További anyagok</title>
<section>
<title>Offline anyagok</title>
<body>

<ul>
  <li>a java-config kézikönyv-oldala (man)</li>
  <li><c>java-config --help</c></li>
</ul>

</body>
</section>
<section>
<title>Online anyagok</title>
<body>

<ul>
  <li>
A <uri link="http://www.gentoo.org/proj/en/java/">Java Project Page</uri>
  </li>
  <li>
A <uri link="http://news.gmane.org/gmane.linux.gentoo.java">gentoo-java</uri>,
<uri link="http://news.gmane.org/gmane.linux.gentoo.user">gentoo-user</uri>, 
és 
<uri link="http://news.gmane.org/gmane.linux.gentoo.devel">gentoo-dev</uri> 
levelezőlisták archívuma.
  </li>
  <li>#gentoo és #gentoo-java az irc.freenode.net szerveren</li>
  <li>
    <uri link="http://en.wikipedia.org/wiki/Java_programming_language">
Wikipedia Java-bejegyzések</uri>
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
