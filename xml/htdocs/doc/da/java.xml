<?xml version='1.0' encoding="utf-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/java.xml,v 1.7 2005/03/06 12:37:03 aaby Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link = "/doc/da/java.xml">
<title>Java vejlednigen</title>

<author title="Forfatter og Redaktør">
 <mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>
<author title="Redaktør">
 <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Redaktør">
 <mail link="marcelogoes@gmail.com">Marcelo Góes</mail>
</author>
<author title="Oversætter">
 <mail link="aaby@gentoo.org">Arne Mejlholm</mail>
</author>
<author title="Korrektur">
 <mail link="broeman@gentoo.org">Jesper Brodersen</mail>
</author>

<abstract>
Denne guide vil introducere brugere og udviklere til Java og forklare
hvordan man bruger Java med Gentoo Linux.
</abstract>

<license/>

<version>0.1.5</version>
<date>2005-02-07</date>

<chapter>
<title>Hvad er Java?</title>
<section>
<title>Overblik</title>
<body>

<p>
Java er et programmeringssprog udviklet af ingeniørerne hos Sun
Microsystems. Sproget er objekt-orienteret og designet til at køre på
forskellige platforme uden brug for at gen-kompilere kode til hver
platform. Selvom Java kan kompileres til et platform specifikt
program, så skylde meget af dets popularitet dets flytbarhed, sammen
med andre ting såsom automatisk garbage collection. Muligheden for at
kompilere en gang og køre på forskellige platforme opnås ved brug af 
just-in-time kompilere (JIT), som kompilerer Java bytecode til
platform specifikt kode når et givent program bliver kørt.
</p>

<p>
For at kunne køre Java bytecode, så er man nødt til at have et JRE
(Java Runtime Environment) installeret. Et JRE tilbyder essentielle
biblioteker, en platform afhængig Java Virtual Machine, plug-ins til
browsere, for at nævne nogle. Et JDK (Java Development Kit) tilføjer
programmeringsværktøjer, såsom en bytecode kompiler og en debugger.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installering af en JRE/JDK</title>
<section>
<title>Valgene</title>
<body>
  	 
<p>
Gentoo tilbyder adskillige JRE'er og JDK'er. Bland de nuværende
alternativer er der:
</p>
  	 
<ul>
<li>blackdown-jre og blackdown-jdk, Blackdown Java Kit</li>
<li>sun-jre-bin og sun-jdk, Sun's Java Kit </li>
<li>ibm-jre-bin og ibm-jdk-bin, IBM Java Kit</li>
<li>compaq-jre og compaq-jdk, the Compaq Java Kit til Alpha/Linux/GNU</li>
<li>jrockit-jdk-bin, BEA WebLogic's J2SE Development Kit</li>
</ul>
  	 
<p>
Standarden er Blackdown JRE/JDK parret, da det er gratis ("free as in beer")
tilgængeligt uden nogen form for registreringshalløj.
</p>

<p>
Både Sun JRE/JDK og IBM JRE/JDK er generelt hurtigere, men at få fat i
dem er lidt sværere, da du kræves at læse og acceptere deres licens
før at du downloader (IBM kræver derudover at du registrer dig).
</p>

<p>
Vores ebuilds til Sun og IBM JRE/JDK fortæller dig hvor du skal gå hen
for at downloade dem.
</p>
			
</body>
</section>

<section>
<title>Installering af Sun/IBM JREs/JDK</title>
<body>

<p>
Hvis du kører <c>emerge =sun-jdk-1.4.2.06</c> eller
<c>ibm-jdk-bin-1.4.2</c>, bliver du underrettet om at du selv skal
downloade de aktuelle tarballs. Dette er pga. restriktioner for Sun
JRE/JDK (online klik-indpaknings licens) og registrerings problemer
med IBM JRE/JDK.
</p>

<note>
ibm-jdk-bin er pt. masked, så du bliver selv nødt til at unmaske den
for at bruge den.
</note>

<p>
Du bør downloade de(n) indikerede fil(er) til
<path>/usr/portage/distfiles</path>. Når det først er gjort, kan du
køre emerge kommandoen igen, derefter bliver JRE/JDK installeret
korrekt i <path>/opt</path>.
</p>
			
</body>
</section>
</chapter>

<chapter>
<title>Konfiguration af din JRE/JDK</title>
		
<section>
<title>Overblik</title>
			
<body>
			
<p>
Gentoo har evnen til at have adskillige JDK'er og JRE'er installeret
samtidig uden at få konflikter pga. dette.
</p>

<p>
Ved at bruge <c>java-config</c> værktøjet kan du sætte en stadard, der gælder for hele
systemet hvis du har root adgang. Brugere kan også bruge <c>java-config</c> til at sætte
deres personlige standard, der er forskellig fra den standard, der er sat på systemet.
</p>
			
</body>
</section>

<section>
<title>At sætte en standard JRE/JDK</title>
<body>

<p>
At køre kommandoen <c>java-config --list-available-vms</c> vil give
dig en liste over alle de JRE og JDK, der er på systemet, her er et
eksempel på output:
</p>
			
<pre caption = "At liste de tilgængelige VMs">
[%1 ~] <i>java-config --list-available-vms</i>
[blackdown-jdk-1.3.1] Blackdown JDK 1.3.1 (/etc/env.d/java/20blackdown-jdk-1.3.1)
[blackdown-jre-1.3.1] Blackdown JRE 1.3.1 (/etc/env.d/java/20blackdown-jre-1.3.1)
[ibm-jdk-1.3.0] IBM JDK 1.3.0 (/etc/env.d/java/20ibm-jdk-1.3.0)
[ibm-jdk-1.3.1] IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
[ibm-jre-1.3.1] IBM JRE 1.3.1 (/etc/env.d/java/20ibm-jre-1.3.1)
[sun-jdk-1.4.0] Sun JDK 1.4.0 (/etc/env.d/java/20sun-jdk-1.4.0)
</pre>
			
<p>
Navnet i de firkantede paranteser <path>"[]"</path> er ID'et for den
pågældende VM. Du sender dette ID til <c>java-config
--set-system-vm</c>. Her er et eksempel på hvorden du sætter global VM.
</p>

<pre caption = "At sætte en global VM">
[#1 ~] <i>java-config --set-system-vm=ibm-jdk-1.3.1</i>
Now using IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
</pre>

<note>
Du bliver nødt til at være root for at køre --set-system-vm
</note>

<p>
Når du først har kørt <c>java-config --set-system-vm</c> med et bestemt ID for en
VM, bliver du nødt til at regenerere din /etc/profile.env. Du kan gøre
det sådan:
</p>
			
<pre caption = "At regenerere /etc/profile.env" >
[#1 ~] <i>env-update</i>
</pre>

<p>
Efter dette bliver du nødt til at logge ind igen eller bruge ressourcen
<path>/etc/profile</path> til dit miljø.
</p>

<p>
Som almindelig bruger kan du køre <c>java-config --set-user-vm</c>,
hvilket vil lave <path>~/.gentoo/java-env</path> med alle krævede miljø-variabler. Du ville normalt
hente dette fra din shells opstartsscript (<path>~/.bashrc</path>
i mit tilfælde).
</p>
			
</body>
</section>

<section>
<title>At sætte en standard CLASSPATH</title>
<body>

<p>
<c>java-config</c> kan også bruges til at sætte en global standard for
hele systemets CLASSPATH, og selvfølgelig også en bruger-specifik standard CLASSPATH.
</p>

<p>
Du ønsker først at liste alle de tilgængelige java biblioteker der
måske er interessante at putte i din CLASSPATH, her er et eksempel på output:
</p>
			
<pre caption = "At liste klasser">
[%1 ~]<i> java-config --list-available-packages</i>
[bsh] BeanShell is a small, free, embeddable, Java source interpreter
with object scripting language features. (/usr/share/bsh/package.env)
[oro] A set of text-processing Java classes that provide Perl5
compatible regular expressions, AWK-like regular expressions, glob
expressions, and utility classes for performing substitutions, splits,
filtering filenames, etc. (/usr/share/oro/package.env)
[bcel] The Byte Code Engineering Library: analyze, create, manipulate Java class files (/usr/share/bcel/package.env)
[jsch] JSch is a pure Java implementation of SSH2.(/usr/share/jsch/package.env)
...
</pre>

<p>
Igen, navnet i de firkantede paranteser <path>"[]"</path> er de ID'er
som du sender til  <c>java-config --set-system-classpath</c>, 
her er et eksempel:
</p>

<pre caption = "At sætte classpaths">
<i>java-config --set-system-classpath=log4j,java-gtk,java-gnome</i>
</pre>
			
<note>
Det nuværende bibliotek (.) vil ikke være en del af systemets
classpath, da dette bør være tilføjet i root's login profil.
</note>

<p>
Du vil igen ønske at køre <c>env-update</c> for at opdatere dit
systems miljø og du vil måske også ønske at logge ind igen eller
bruge <path>/etc/profile</path>.
</p>
			
<p>
For brugere vil <c>java-config --set-user-classpath</c> lave
<path>~/.gentoo/java-env-classpath</path>,
som automatisk bliver inkluderet af <path>~/.gentoo/java-env</path>.
</p>

</body>
</section>
</chapter>
  	 
<chapter>
<title>USE flag der skal bruges sammen med Java</title>
<section>
<title>Opsætning af USE flag</title>
<body>
  	 
<p>
For mere information omkring USE flag, referer da til <uri
link="/doc/da/handbook/handbook-x86.xml?part=2&amp;chap=2">USE flag</uri> 
kapitlet i Gentoo Håndbogen.
</p>
		
</body>
</section>

<section>
<title>Flagene</title>
<body>
  	 
<ul>
 <li>
  <b>java</b> flaget tilføjer understøttelse for Java i de
  forskellige programmer der understøtter det.
 </li>
 <li>
  <b>mozilla</b> flaget tilføjer understøttelse for Mozilla-lignende
  browsere (inklusiv Firefix) hvis du bruger blackdown's Java kit. Du
  får brug for dette for at kunne se Java applets i din
  Mozilla-lignende browser.
 </li>
</ul>
  	 
</body>
</section>
</chapter>

<chapter>
<title>Yderligere ressourcer</title>
<section>
<title>Offline ressourcer</title>
			
<body>

<ul>
<li>java-config man siden</li>
<li><c>java-config --help</c></li>
<li><path>/usr/bin/java-config</path>
	scriptet selv</li>
</ul>
			
</body>
</section>

<section>
<title>Online ressourcer</title>

<body>

<ul>
<li><uri link="http://news.gmane.org/gmane.linux.gentoo.devel">
gentoo-dev </uri>, 
<uri link="http://news.gmane.org/gmane.linux.gentoo.user"> gentoo-user
</uri> mailingliste arkiverne</li>
<li>#gentoo og #gentoo-java på irc.freenode.net</li>
<li><uri link="http://en.wikipedia.org/wiki/Java_programming_language">Wikipedia's Java indgang</uri></li>
</ul>
			
</body>
</section>
</chapter>
</guide>
