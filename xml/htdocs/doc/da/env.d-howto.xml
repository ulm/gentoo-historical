<?xml version='1.0' encoding="iso-8859-1"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/Attic/env.d-howto.xml,v 1.2 2003/12/16 22:01:41 aaby Exp $ -->
<!DOCTYPE guide SYSTEM "http://www.gentoo.org/dtd/guide.dtd">

<guide link = "/doc/da/env.d-howto.xml">
<title>Env.d HOWTO</title>
<author title="Forfatter"><!-- zhen@gentoo.org -->John P. Davis</author>
<author title="Oversætter"><mail link="aaby@gentoo.org">Arne Mejlholm</mail></author>
<author title="Korrektur"><mail link="broeman@gentoo.org">Jesper
Brodersen</mail></author>
<author title="Korrektur"><mail link="aaby@gentoo.org">Arne Mejlholm</mail></author>


<abstract>
Denne guide forklarer formålet og brugen af /etc/env.d
biblioteket og dets indhold.
</abstract>

<license/>

<version>1.7</version>
<date>5. December, 2003</date>

<chapter>
	
<title>Introduktion til <c>env.d</c> og generiske variable</title>	
<section>
		
<title>Basale Gentoo miljø-variabler</title>
<body>
<p>
Et af de mest almindelige spørgsmål vi hører fra Gentoo-brugere er
"hvor er mine miljø-variabler og hvad er de sat til?". For at forstå
dette spørgsmål er vi først nødt til at vide hvad en miljø-variabel
er. En miljø variabel bliver sat, når <c>export</c> kommandoen bliver
kørt. F.eks, hvis du kørte en <c>export EDITOR="/usr/sbin/vim"</c>, så
satte du en miljø-variabel, der fortæller systemet, at din standard
editor er vim. Der er mange forskellige slags miljø-variabler, der kan
sættes på dit Gentoo system; her er nogle eksempler:
</p>

<note>
<c>export</c> vil sætte miljø-variablen i shell'en <e>og</e> i alle de efterfølgende
processer. Hvis du vil sætte variablen uden at påvirke de
efterfølgende processer, så skal du gøre noget lignende <i>FOO="bar"</i>.
</note>

<note>
Din <i>00basic</i> fil kan skille sig ud fra det følgende. Dette er
ikke noget problem, da disse variable er standarder der kommer med Gentoo.
</note>

<note>
Disse eksempler kan findes i <path>/etc/env.d/00basic</path>.
</note>

<table>
<tr>
<th>Variabel</th>
<th>Funktion</th>
</tr>
<tr>
<ti>PATH</ti>
<ti>
Dette sætter standard-stien til hvor programmer kan findes. Den bliver
afgrænset af ':'. En "sti" variabel vil ligne det følgende <c>PATH=/usr/local/bin:/opt/bin</c>.
</ti>
</tr>
<tr>
<ti>ROOTPATH</ti>
<ti>
Denne variabel er ligesom den ovenfor, men den sætter standard-roden
til programmer for brugeren <c>root</c>.  Et eksempel på dette vil
være noget i stil med <c>ROOTPATH=/usr/local/bin:/opt/bin</c>.
</ti>
</tr>
<tr>
<ti>LDPATH</ti>
<ti>
Denne variabel specificerer hvad den bibliotek-sti som henvises
til er. Denne er også afgrænset af ':'. Et eksempel på denne kunne være <c>LDPATH=/usr/local/lib</c>.
</ti>
</tr>
<tr>
<ti>MANPATH</ti>
<ti>
Dette specificerer hvor man-siderne gemmes på din maskine. Det er
ligesom <i>PATH</i>, men den bruges til man-sider. Et eksempel kunne være
<c>MANPATH=/usr/share/man:/usr/local/share/man</c>.
</ti>
</tr>
<tr>
<ti>INFODIR</ti>
<ti>
Dette specificerer hvor alle dine info-filer bliver opbevaret. Et
eksempel på dette kunne være <c>INFODIR=/usr/share/info</c>.
</ti>
</tr>
<tr>
<ti>PAGER</ti>
<ti>
Dette specificerer hvilken pager der skal bruges, f.eks. less eller
more. Et eksempel på dette ville være <c>PAGER=/usr/bin/less</c>.
</ti>
</tr>
<tr>
<ti>EDITOR</ti>
<ti>
Dette specificerer standard-editoren for systemet. Det kunne se sådan ud: <c>EDITOR=/usr/bin/vim</c>.
</ti>
</tr>
</table>

<p>
Dette er et eksempel på en <i>00basic</i> fil. Dette giver dig bare en
idé om hvordan de ser ud. Hvis din <c>00basic</c> bliver ødelagt, kan
du bruge denne!
</p>

<pre caption = "00basic">
# /etc/env.d/00basic:
# $Header: /home/cvsroot/gentoo-src/rc-scripts/etc/env.d/00basic,v 1.11 2003/02/17 02:48:39 azarah Exp &#36;

PATH="/usr/local/bin:/opt/bin"
ROOTPATH="/usr/local/bin:/opt/bin"
LDPATH="/usr/local/lib"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info"
INFOPATH="/usr/share/info"
CVS_RSH="ssh"
PAGER="/usr/bin/less"
LESSOPEN="|lesspipe.sh %s"
</pre>
</body>
</section>

<section>
<title>env.d Formattering</title>
<body>
<p>
Filerne indeni <c>env.d</c> er arrangeret i en logisk rækkefølge sådan
at når <c>env-update</c> køres, så ordner den variablerne
korrekt. Tallene foran filerne specificerer i hvilken rækkefølge de
bliver behandlet, så <i>00basic</i> kommer først, derefter bliver
<i>01etellerandet</i> behandlet og så videre. Indholdet i en af disse
filer har et specifikt format:
</p>

<pre caption = "Formatet af indhold">
<comment># Dette er en kommentar, ligesom med BASH</comment>
<i>VARIABEL1=/sti/til/etellerandet</i>
<comment># Nogle af variablerne kan have : til at afgrænse argumenter.</comment>
<i>VAR1A=/sti/til/etellerandet:/sti/til/enanden/etellerandet</i>
<i>VARIABEL2=etellerandet_navn</i>
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Specielle variabler og hvordan det hele hænger sammen</title>
<section>
<title>Specielle variabler</title>
<body>
<p>
Der er nogle specielle variabler, der er inkluderet i <c>env.d</c>.  
Deriblandt er:  <i>KDEDIRS, PATH, CLASSPATH, LDPATH, MANPATH, INFODIR, 
ROOTPATH, CONFIG_PROTECT, CONFIG_PROTECT_MASK</i>. Disse er specielle,
fordi de er forudbehandlede på en speciel måde og de bliver puttet ind
i specielle filer, hvilket jeg vil forklare senere.
</p>

<note>
Nogle af de variabler, der bliver nævnt nedenfor, bliver også nævnt i 
<i>00basic</i>. Dette er fint nok, fordi disse variable kan bruges mere
end en gang i seperate filer (forklares yderligere nedenfor).
</note>

<table>
<tr>
<th>Variabel</th>
<th>Funktion</th>
</tr>
<tr>
<ti>KDEDIRS</ti>
<ti>
Dette er stien til alle KDE's filer.
</ti>
</tr>
<tr>
<ti>PATH</ti>
<ti>
Nævnt før. ':' afgrænset (se ovenfor).
</ti>
</tr>
<tr>
<ti>CLASSPATH</ti>
<ti>
Sætter stien for Java klasser, ':' afgrænset 
</ti>
</tr>
<tr>
<ti>LDPATH</ti>
<ti>
Nævnt før. (se ovenfor). ':' afgrænset.
</ti>
</tr>
<tr>
<ti>MANPATH</ti>
<ti>
Nævnt før. (se ovenfor). ':' afgrænset.
</ti>
</tr>
<tr>
<ti>INFODIR</ti>
<ti>
Nævnt før. (se ovenfor). ':' afgrænset.
</ti>
</tr>
<tr>
<ti>ROOTPATH</ti>
<ti>
Nævnt før. (se ovenfor). ':' afgrænset.
</ti>
</tr>
<tr>
<ti>CONFIG_PROTECT</ti>
<ti>
Dette specificerer hvilke konfigurationsfiler i <path>/etc</path> som
du vil beskytte mod nye ebuilds, argumenterne der gives til dette er
afgrænset af mellemrum.
</ti>
</tr>
<tr>
<ti>CONFIG_PROTECT_MASK</ti>
<ti>
Dette er ganske simpelt den inverse af CONFIG_PROTECT, den ubeskytter
bestemte filer i <path>/etc</path> som du ønsker skal ændres
automatisk af emerge processen.
</ti>
</tr>
</table>
</body>
</section>

<section>
<title>At samle det hele</title>
<body>
<p>
Okay, så nu hvor jeg har defineret alting, spekulerer du garanteret på
hvad dette dog har at gøre med dig og din Gentoo maskine. Styrken i <i>env.d</i>
er den, at du kan ændre disse variable til, hvad du end har brug for at
de skal være. Med definitionerne ovenfor skulle du forhåbentligt være
i stand til at gøre dette.
</p>

<p>
Da vi har styr på hvad der sker, er det tid til at forklare, hvad der
sker med disse variable. Når <c>env-update</c> bliver kaldt, linker (henviser) det
alle disse filer i rækkefølge. Husker du, da jeg sagde at det er i
orden at have adskillige <i>PATH</i> variabler, sålænge at de er i
forskellige filer? Dette er fordi <c>env-update</c> går gennem filerne
sekventielt og føjer stierne sammen. Så hvis du har en <i>PATH</i> til
KDE, GNOME, din standard <i>PATH</i> og en til X, så vil
<c>env-update</c> sammenslutte alle disse stier så din standard
 <i>PATH</i> bliver alle disse stier kombineret. Smart ikke?
</p>

<p>
Da disse variabler nu er linket sammen, er det vigtigt at notere hvor
de bliver gemt.
</p>

<note>
Filerne nedenfor bliver lavet ved at køre <c>env-update</c>.
</note>

<pre caption = "Filer lavet ved opsummeringen af alle filer i env.d">
<i>LDPATH ----&gt;/etc/ld.so.conf</i>
<i>CONFIG_PROTECT and CONFIG_PROTECT_MASK ----&gt;/etc/profile.env (som eksporterede variable)</i>
<i>De specielle og andre ----&gt;/etc/profile.env</i>
</pre>

<p>
Hvis du kigger i <path>/etc/ld.so.conf</path> kan du klart se at 
<i>env.d</i> var kilden til al den information der er indeholdt deri.
</p>

<pre caption = "/etc/ld.so.conf">
# ld.so.conf autogenerated by env-update; make all changes to
# contents of /etc/env.d directory
/usr/local/lib
/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2
/usr/lib/opengl/nvidia/lib
/usr/lib/mozilla
/usr/X11R6/lib
/opt/blackdown-jdk-1.3.1/jre/lib/i386/
/opt/blackdown-jdk-1.3.1/jre/lib/i386/native_threads/
/usr/qt/3/lib
/usr/qt/2/lib
/usr/kde/3/lib
</pre>

<p>
Det er en god ting at vide at <path>/etc/profile.env</path> skabes af
din shell-session. Dette er en god ting; nu kan du bruge alle dine
nydefinerede variable næste gang du logger ind.
</p>

<pre capton = "Sekvensen af hændelser fra env-update">
<i>/etc/env.d settings ---&gt; env-update ---&gt; /etc/profile.env ---&gt; /etc/profile 
---&gt; bash ---&gt; alle dine programmer</i>
</pre>

<p>
Nu hvor du har en <i>profile.env</i> så skulle den gerne ligne dette:
</p>

<pre caption = "/etc/profile.env">
<comment>(For at øge læsbarheden har vi klappet to linier sammen i
dette eksempel)</comment>
export CONFIG_PROTECT='/usr/kde/3/share/config /usr/share/config'
export KDEDIRS='/usr/kde/3:/usr'
export MANPATH='/usr/share/man:/usr/local/share/man:/usr/X11R6/man:/opt/blackdown-jdk-1.3.1/man'
export INFODIR='/usr/share/info:/usr/X11R6/info'
export PATH='/usr/local/bin:/opt/bin:/opt/rar/bin:/usr/X11R6/bin:/opt/blackdown-jdk-1.3.1/bin: \ 
/opt/blackdown-jdk-1.3.1/jre/bin:/usr/qt/3/bin:/usr/qt/2/bin:/usr/kde/3/bin'
export CONFIG_PROTECT_MASK='/etc/gconf'
export CLASSPATH='/opt/blackdown-jdk-1.3.1/jre/lib/rt.jar:.'
export ROOTPATH='/usr/local/bin:/opt/bin:/opt/rar:/usr/X11R6/bin:/opt/blackdown-jdk-1.3.1/bin: \ 
/opt/blackdown-jdk-1.3.1/jre/bin:/usr/qt/3/bin:/usr/qt/2/bin:/usr/kde/3/bin'
export KDEDIR='/usr/kde/3'
export VIMRUNTIME='/usr/share/vim/vim61'
export JDK_HOME='/opt/blackdown-jdk-1.3.1'
export JAVAC='/opt/blackdown-jdk-1.3.1/bin/javac'
export PAGER='/usr/bin/less'
export HOSTNAME='l00ser.muc.edu'
export QMAKESPEC='linux-g++'
export LESSOPEN='|lesspipe.sh %s'
export CVS_RSH='ssh'
export EDITOR='/usr/bin/vim'
export QTDIR='/usr/qt/3'
export JAVA_HOME='/opt/blackdown-jdk-1.3.1'
export XINITRC='/etc/X11/xinit/xinitrc'
export MOZILLA_FIVE_HOME='/usr/lib/mozilla'
</pre>

<p>
Okay, det er alt hvad jeg har at sige, så smut hen og hav det sjovt,
og lad være med at ødelægge for meget!
</p>
</body> 
</section>
</chapter>
</guide>
