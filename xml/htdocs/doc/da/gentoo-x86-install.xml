<?xml version="1.0" encoding="iso-8859-1"?>
 <!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/gentoo-x86-install.xml,v 1.5 2003/11/28 23:47:24 aaby Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/da/gentoo-x86-install.xml">
<title>Gentoo Linux 1.4 x86 installationsvejledning</title>
<author title="Chef-arkitekt">
    <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Forfatter">Chris Houser</author>
<author title="Forfatter">Jerry Alexandratos</author>
<author title="Anmelder">
    <mail link="g2boojum@gentoo.org">Grant Goodyear</mail>
</author>
<author title="Redaktør">
    <!--<mail link="zhen@gentoo.org"> -->
    John P. Davis
    <!--</mail>-->
</author>
<author title="Redaktør">
    <mail link="Pierre-Henri.Jondot@wanadoo.fr">Pierre-Henri Jondot</mail>
</author>
<author title="Redaktør">
    <mail link="stocke2@gentoo.org">Eric Stockbridge</mail>
</author>
<author title="Redaktør">
    <mail link="rajiv@gentoo.org">Rajiv Manglani</mail>
</author>
<author title="Redaktør">
    <mail link="seo@gentoo.org">Jungmin Seo</mail>
</author>
<author title="Redaktør">
    <mail link="zhware@gentoo.org">Stoyan Zhekov</mail>
</author>
<author title="Redaktør">
    <mail link="jhhudso@gentoo.org">Jared Hudson</mail>
</author>
<author title="Redaktør">Colin Morey</author>
<author title="Redaktør">
    <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Redaktør">
    <mail link="carl@gentoo.org">Carl Anderson</mail>
</author>
<author title="Redaktør, Reviewer">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Redaktør">
    <mail link="avenj@gentoo.org">Jon Portnoy</mail>
</author>
<author title="Redaktør">
     <mail link="klasikahl@gentoo.org">Zack Gilburd</mail>
</author>
<author title="Redaktør">
     <mail link="erwin@gentoo.org">Erwin</mail>
</author>
<author title="Redaktør">
    <mail link="gerrynjr@gentoo.org">Gerald J. Normandin Jr.</mail>
</author>
<author title="Redaktør">
    <mail link="spyderous@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Redaktør">
    <mail link="antifa@gentoo.org">Ken Nowack</mail>
</author>
<author title="Oversætter">
    <mail link="aaby@gentoo.orgk">Arne Mejlholm</mail>
</author>
<author title="Oversætter">
    <mail link="broeman@gentoo.org">Jesper Brodersen</mail>
</author>
<author title="Korrektur">
    <mail link="bro3man@yahoo.dk">Jesper Brodersen</mail>
</author>
<author title="Korrektur">
    <mail link="aaby@gentoo.org">Arne Mejlholm</mail>
</author>

<abstract>
Denne vejledning vil tage dig trin for trin igennem 
processen for at installere Gentoo Linux 1.4, dvs. den endelige udgave,
ikke en af _rc udgaverne. Gentoo Linux installationsprocessen understøtter
flere tilgange, alt afhængigt af hvor meget
af systemet man vil bygge og tilpasse fra begyndelsen af.
</abstract>

<license/>

<version>2.6.26</version>
<date>27. November 2003</date>

<chapter>
<title>Omkring installationen</title>
<section>
<body>

<p>
Velkommen til Gentoo Linux! Gentoo Linux kan installeres på mange
forskellige måder. De der leder efter en hurtig installation kan burge
præ-byggede pakker, mens dem der gerne vil have den ultimative måde at
skræddersy på kan kompilere Gentoo Linux helt fra den originale
kildekode. Hvilken metode du vælger er op til dig.
</p>

<p>
En betydningsfuld ændring i forbindelse med den officielle 1.4
udgivelse er vores nye 2-CD installations-sæt, som kan bestilles fra 
<uri link="http://store.gentoo.org">The Gentoo Linux Store</uri>, 
ud over at være tilgængelige fra vores filspejle. Vi har pt. 2-CD
installations sæt til x86 (486 og derover), i686 (Pentium Pro, Pentium
II, Athlon/Duron og derover), Pentium III, Pentium 4 og Athlon XP.
For at se hvilket 2-CD sæt er det rette for dig, skal du læse de 
detaljerede beskrivelser af hvert produkt i <uri
link="http://store.gentoo.org">butikken</uri>. Butikkens beskrivelser
indeholder rimelig omfattende information om CPU kompabilitet.
</p>

<p>
Du kan finde og downloade ISO filerne til LiveCD'en fra vores 
<uri link="http://www.gentoo.org/main/en/mirrors.xml">Fil
spejle</uri>. LiveCD'erne til x86 cpu arkitekturen befinder sig i
<path>releases/x86/1.4/livecd/</path> underbiblioteket.
</p>

</body>
</section>
<section>
<title>Installations CD'erne</title>
<body>

<p>
Så, omkring 2 CD sættet -- her er hvad der er på hver CD. 
Den første CD ("CD 1") er kaldet "Live CD installation" og er en 
CD-ROM der kan bootes fra, hvilket betyder at du kan putte "CD 1" 
direkte i dit drev og køre Gentoo Linux direkte fra CD'en.
Du kan derefter bruge denne CD-baserede version af Gentoo 
til at installere Gentoo Linux 1.4 på din harddisk.
Udover at indeholde et Gentoo Linux miljø, indeholder CD 1 
alt hvad du har brug for, for at installere Gentoo Linux
hurtigt, endda uden en forbindelse til Internettet. 
Derudover er der inkluderet adskillige præ-kompilerede pakker på CD 1,
som f.eks den altid vigtige XFree86 X-server. Hvis du har en ISO
CD-ROM billedfil til at udgøre CD 1, så indeholder dens navn
"<path>-cd1</path>". 
</p>

<p>
I modsætning til den første CD er den sekundære CD ("CD 2") ikke til
at boote fra og indeholder en hel del præ-byggede pakker til dit
system. Der er inkluderet optimerede versioner af pakker som KDE,
GNOME, OpenOffice, Mozilla, Evolution og andre. CD 2 er <e>valgfri</e>
og er tilsigtet dem som interesseret i at installere Gentoo Linux meget
hurtigt. Pakkerne på CD 2 tager typisk omkring 36 timer at kompilere
fra kildekode på et typisk moderne enkel-processor system. Hvis du har
en ISO CD-ROM billedfil til at udgøre CD 2 så indeholder dens navn
"<path>-cd2</path>". 
</p>

<note>
Et komplet Gentoo Linux 2-CD sæt indeholder Gentoo Reference
Platformen (GRP), hvilket er et komplet præ-bygget Gentoo Linux system
inklusiv GNOME, KDE, Mozilla, og OpenOffice. Gentoo Reference
Platformen blev lavet for at tillade hurtig installation af Gentoo
Linux pakker for dem som har brug for den egenskab. Funktionaliteten
"Kompilering fra kildekode" som er en af hjørnestenene i Gentoo Linux
vil også altid være en fuldt understøttet valgmulighed. Formålet med
GRP er at lave Gentoo Linux mere behændigt for nogle brugere uden at
beskadige Gentoo's kraftfulde "Kompilering fra kildekode"
installationsprocess på nogen måde. 
</note> 

<p>
Ud over vores 2-CD sæt, har vi også en meget lille "basis" Live CD som
du kan bruge til at boote dit system. Når dit system er bootet kan du
konfigurere en forbindelse til Internettet og derefter installere
Gentoo over netværket. Fordelen ved denne "basis" CD er at den er
lille og derfor kan ISO CD-ROM billedfilen downloades hurtigt. Hvis du
er en avanceret bruger, som ønsker at installere den mest opdaterede
version af Gentoo Linux der er tilgængelig og du har en hurtig
netværksforbindelse, så vil du måske foretrække den mulighed. Hvis du
har en ISO CD-ROM billedfil til at udgøre vores "basis" Live CD, så vil
dens navn indeholde "<path>-basic</path>".
</p>

</body>
</section>
<section>
<title>Krav</title>
<body>
  	 	
<p>
For at bruge enhver Gentoo Linux CD-baseret installationsmetode er du
nødt til at have en 486+ processor og ideelt have mindst 64 Megabyte
RAM. (Gentoo Linux er blevet bygget med succes med 64MB RAM og 64MB
swap plads, men bygge processen er frygtelig langsom under disse vilkår.)
</p>

</body>
</section>
<section>
<title>At vælge en installationsmetode</title>
<body>

<p>
Idet du booter en af vores Live CD'er så har du endnu flere
muligheder. Gentoo Linux kan installeres ved brug af en af de tre
&quot;stage&quot; tarball filer. Hvilken en du vælger, afhænger af hvor
meget af systemet du vil kompilere selv. <e>Stage1</e> tarball'en bruges når
du laver bootstrap og bygger hele systemet fra bunden af. <e>Stage2</e>
tarball'en bruges når du vil bygge systemet fra en boostrap'pet
"semi-kompileret" tilstand. <e>Stage3</e> tarball'en indeholder allerede et
basis Gentoo Linux system, der er blevet bygget for dig. Hvis du
er interreseret i at lave en "GRP" installation, så er det stage3
tarball'en du skal bruge.
</p>

<p>
<b>Hvis du ikke laver en GRP installation, skal du så starte fra en
stage1, stage2 eller stage3 tarball? </b> 
</p>

<p>
Her er noget information der
skulle hjælpe dig med at træffe denne beslutning.
</p>

<p>
At starte fra en stage1 giver dig mulighed for at have total kontrol
over optimeringsindstillingerne og valgfri bygningsperiode-funktionalitet,
der er slået til fra start på dit system. Dette gør
stage1-installationer gode til power-brugere, der ved hvad de laver. Det er
også en god installationsmulighed for dem som ønsker at vide mere om
hvordan de indre dele af Gentoo Linux virker.
</p>

<p>
Stage2-installationer giver dig mulighed for at springe
bootstrap-processen over og ved at gøre dette, er det fint, hvis du er tilfreds med
optimeringsindstillingerne som vi har valgt til din valgte stage2-tarball.
</p>

<p>
Og hvis du vælger en stage3, får du mulighederne for at lave den
hurtigste installation af Gentoo Linux, men det betyder også at dit
basis system har de optimeringsindstillinger som vi har valgt for
dig (som, for at være ærlig, er gode indstillinger og blev udvalgt med
forsigtighed, for at forbedre ydelse, imens der bliver bibeholdt
stabilitet). Siden at større udgivelser af Gentoo Linux har
stage3-specifikke optimeringer til forskellige populære processorer, kan det give
alle fordelene at starte fra stage3 
-- en hurtig installation og et system der er godt optimeret. 
</p>

<p>
<b>Hvis du bruger Gentoo Linux for den første gang skal du nok overveje at
bruge en stage3 tarball til installation eller en stage3 med GRP.</b>
</p>

<note>
<b>Avancerede brugere:</b> Hvis du bruger en stage3 installation,
skal du ikke ændre den oprindelige (default) CHOST indstilling i
<path>/etc/make.conf</path>. Hvis du har brug for sådan en ændring, så
skal du starte med en stage1-tarball i stedet for og bygge dit system
med den ønskede CHOST indstilling. CHOST indstillingen ser typisk
sådan ud: <c>i686-pc-linux-gnu</c>.
</note>

<impo>
Hvis du støder på et problem under en vilkårlig del af installationen
og ønsker at rapportere den som en fejl, så skal det ske til
<uri>http://bugs.gentoo.org</uri>. Hvis det er nødvendigt at sende til
de originale software udviklere (f.eks. holdet bag KDE) så tager
<e>Gentoo Linux udviklerne</e> sig af det for dig.
</impo>

<note>
Installationsinstruktionerne på LiveCD'en er ikke nødvendigvis så
opdaterede, som vores dokumentation på Web-adressen 
<uri>http://www.gentoo.org/doc/da/gentoo-x86-install.xml</uri>. Kig
altid på vores Web-dokumentation for de mest opdaterede installationsinstruktioner. 
</note>

</body>
</section>
<section>
<title>Installations processen</title>
<body>

<p>
Lad os nu hurtigt gennemgå installationsprocessen. Først downloader
vi, brænder CD(er) og starter en LiveCD. Efter at have fået en root
prompt, laver vi partitioner, skaber vores filsystemer og pakker enten
e stage1-, stage2- eller stage3-tarball'en ud. Hvis vi bruger en stage1-
eller stage2-tarball, tager vi de passende skridt for at få vores
system til stage3. Når vores system først er stage3 kan vi konfigurere
det (ændre konfigurationsfiler, installere en bootloader, osv.),
genstarte det og have et fuldt ud funktionelt Gentoo Linux system. Efter
at dit basis Gentoo Linux system er oppe at køre, kan du vælge at bruge
"CD 2" fra 2-CD sættet og installere ethvert antal af præ-byggede
pakker såsom KDE, GNOME, OpenOffice, Mozilla eller andre du ønsker i
dit system.
</p>

<p>
Alt efter hvad stage af byggeprocessen du starter fra, er følgende hvad der
er krævet til en installation:
</p>

<table>
<tcolumn width="0.75in"/>
<tcolumn width="1in"/>
<tcolumn width="1.25in"/>
<tcolumn widht="3.5in"/>
<tr>
 <th>
Stage Tarball
</th>
 <th>
Internet Adgang Krævet
</th>
 <th>
Medie Krævet
</th>
 <th>
Trin
</th>
</tr>
<tr>
 <ti>
1
</ti>
 <ti>
Ja
</ti>
 <ti>
<e>basis</e> eller <e>CD 1</e>
</ti>
 <ti>
partition/filsystem opsætning, emerge sync, bootstrap, emerge system,
endelig konfiguration
</ti>
</tr>
<tr>
 <ti>
2
</ti>
 <ti>
Ja
</ti>
 <ti>
<e>basis</e> eller <e>CD 1</e>
</ti>
 <ti>
partition/filesystem opsætning, emerge sync, emerge system, endelig
konfiguration
</ti>
</tr>
<tr>
 <ti>
3
</ti>
 <ti>
Nej ved brug af <e>CD 1</e>, Ellers Ja
</ti>
 <ti>
<e>basis</e> eller <e>CD 1</e>
</ti>
 <ti>
partition/filesystem opsætning, emerge sync (ikke krævet ved brug af
<e>CD 1</e>), endelig konfiguration
</ti>
</tr>
<tr>
 <ti>
3+GRP
</ti>
 <ti>
Nej
</ti>
 <ti>
<e>CD 1</e>, <e>CD 2</e> valgfrit
</ti>
 <ti>
partition/filesystem opsætning, endelig konfiguration, installer
 CD1 præ-byggede pakker (valgfrit), genstart, installer ekstra
 præ-byggede pakker som KDE og GNOME (hvis "CD 2" bruges)
</ti>
</tr>
</table>

<note>
Brugere af Hardware ATA RAID bør læse sektionen omkring ATA RAID i
bunden af dette dokument, før de fortsætter.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Opstart</title>
<section>
<body>

<warn>
Læs hele denne sektion før du fortsætter, og læg specielt mærke til de
mulige opstartsmuligheder. At springe dette over, kan føre til de forkerte
tastatur-indstillinger, ustartede pcmcia ydelser osv...
</warn>

<p>
Start med at opstarte fra din foretrukne Live CD. Du bør se en smart boot
skærm med Gentoo Linux logo'et på. Ved denne skærm kan du trykke Enter
for at begynde opstartsprocessen eller starte LiveCD'en med udvalgte
opstartsmuligheder, dette gøres ved at specificere en kerne fulgt af opstartsmuligheder og så
trykke Enter. Et eksempel: <c>gentoo nousb nohotplug</c>. Hvis du
installerer Gentoo Linux på et system med mere end en processor
("SMP"), så bør du taste <c>smp</c> i stedet for <c>gentoo</c> i
prompten. Dette tillader LiveCD'en at se alle processorerene i dit
system, ikke kun den første.
</p>
		
<p>
Konsulter den følgende tabel for en delvis liste over de mulige kerner
og muligheder eller tryk F2 og F3 for at se hjælpeskærmene.
</p>

<table>
<tcolumn width="2in"/>
<tcolumn width="4in"/>
<tr>
<th>Mulige kerner</th>
<th>Beskrivelse</th>
</tr>
<tr>
<ti>gentoo</ti>
<ti>standard gentoo kerne (default)</ti>
</tr>
<tr>
<ti>nofb</ti>
<ti>framebuffer mode slået fra</ti>
</tr>
<tr>
<ti>smp</ti>
<ti>loader en smp kerne i noframebuffer mode</ti>
</tr>
<tr>
<ti>acpi</ti>
<ti>slår acpi til + loader acpi moduler under opstart</ti>
</tr>
<tr>
<ti>memtest</ti>
<ti>opstarter et hukommelsestest-program</ti>
</tr>
</table>

<table>
<tcolumn width="2in"/>
<tcolumn width="4in"/>
<tr>
<th>Tilgængelige opstartsmuligheder</th>
<th>Beskrivelse</th>
</tr>
<tr>
<ti>doataraid</ti>
<ti>henter ide-raid-moduler fra initrd</ti>
</tr>
<tr>
<ti>dofirewire</ti>
<ti>modprober firewire-moduler i initrd (til firewire
cdrom'er,osv.)</ti>
</tr>
<tr>
<ti>dokeymap</ti>
<ti>slår keymap-valg til, for ikke-US tastatur layout</ti>
</tr>
<tr>
<ti>dopcmcia</ti><ti>starter pcmcia servicer</ti>
</tr>
<tr>
<ti>doscsi</ti>
<ti>scanner efter scsi enheder (ødelægger nogle netkort)</ti>
</tr>
<tr>
<ti>noapm</ti>
<ti>slår apm module loadning fra</ti>
</tr>
<tr>
<ti>nodetect</ti>
<ti>gør at hwsetup/kudzu og hotplug ikke køres</ti>
</tr>
<tr>
<ti>nodhcp</ti>
<ti>dhcp starter ikke automatisk hvis netkort bliver fundet</ti>
</tr>
<tr>
<ti>nohotplug</ti><ti>slår loadning af hotplug servicer fra</ti>
</tr>
<tr>
<ti>noraid</ti>
<ti>slår loadning af evms moduler fra</ti>
</tr>
<tr>
<ti>nousb</ti>
<ti>slår usb modul loadning fra initrd fra, slår
hotplug fra</ti>
</tr>
<tr>
<ti>ide=nodma</ti>
<ti>tvinger dma til at slå fra, til brug ved ide enheder der ikke
virker korrekt</ti>
</tr>
<tr>
<ti>cdcache</ti>
<ti>laver en cache med hele runtime-delen af cd'en
i hukommelsen. Dette bruger 40MB RAM, men tillader dig at unmounte
<path>/mnt/cdrom</path> og mounte en anden cdrom</ti>
</tr>
</table>

<p>
Idet du trykker Enter, bliver du ønsket velkommen med en endnu smartere
bootskærm og status linie.
</p>

<warn>
Hvis din skærm bliver sort istedet for at du får en blæret opstarts
skærmbillede, prøv da at boote med <e>nofb</e> kernen. Det er højest
sandsynligt at vores kerne ikke understøtter dit grafik kort
mth. framebuffer (grafik tilstand uden X server).
</warn>

<p>
Idet opstartsprocessen færdiggøres, bliver du automatisk logget ind til det
"Live" Gentoo Linux system, som "<e>root</e>", "superbrugeren". Du
burde have en root ("#") prompt i den nuværende konsol og kan også
skifte til andre konsoller ved at trykke Alt-F2, Alt-F3 og Alt-F4. Kom
tilbage til den du startede med, ved at trykke Alt-F1.
</p>

<note>
<b>Avancerede brugere:</b> Når Live CD'en starter, bliver
root-passwordet på Live CD'en sat til en tilfældig streng af
sikkerhedsårsager. Hvis du påregner at starte <c>sshd</c> for at tillade login
udefra til din Live CD, så bør du sætte Live CD root passwordet nu, ved
at taste <c>passwd</c> og følge det der står i prompten. Ellers kender
du ikke det rigtige password til at logge ind på Live CD'en over et netværk.
</note>

<p>
Du har sikkert også lagt mærke til, at over din # prompt er der et sæt
af hjælpetekst, der forklarer ting, som at konfigurere dit Linux
netværk og hvor du kan finde ting som Gentoo Linux stage tarball'er samt
pakker på din CD.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Valgfri hardware konfiguration</title>
<section>
<body>

<p>
Når Live CD'en starter, prøver den på at finde alle dine
hardware-enheder og hente de passende moduler i kernen til at understøtte din
hardware. I størstedelen af tilfældene gør den det utroligt godt. Men
i nogle tilfælde kan det ske at den ikke automatisk henter de moduler
i kernen, som du har brug for. Hvis PCI auto-søgning "misser" noget af
dit systemshardware bliver du nødt til selv at loade de passende
kerne-moduler manuelt. For at se en liste over alle tilgængelige
netkortsmoduler, skriv <c>ls /lib/modules/`uname
-r`/kernel/drivers/net/*</c>. For at hente et bestemt modul, skal du skrive:
</p>

<pre caption="Konfiguration af PCI Moduler">
<comment>(udskift pcnet32 med dit netkorts modul)</comment>
# <i>modprobe pcnet32</i>
</pre>

<p>
Tilsvarende, hvis du vil være i stand til at få adgang til SCSI-hardware, der
ikke automatisk blev fundet under den startende opstart-autosøgningsprocess, bliver du nødt til at hente de passende moduler fra
<path>/lib/modules</path> også ved hjælp af <c>modprobe</c>:
</p>

<pre caption="At hente SCSI-moduler">
<comment>(udskift aic7xxx med dit SCSI adapter modul)</comment>
# <i>modprobe aic7xxx</i>
<comment>(sd_mod er modulet for SCSI-diskunderstøttelse)</comment>
# <i>modprobe sd_mod</i>
</pre>

<note>
Understøttelse for SCSI CDROM-drev og diske er allerede bygget ind i kernen.
</note>

<note>
<b>Avancerede brugere:</b> Gentoo LiveCD'en burde have slået DMA til
på dine diske, sådan at disk-overførsler er så hurtige, som muligt, men
hvis den ikke har, kan <c>hdparm</c> bruges til at slå DMA til på dine
disks, således:

<pre caption="At slå DMA til">
<comment>(Udskift hdX med din disk enhed)</comment>
<comment>(Slår DMA til)</comment>
# <i>hdparm -d 1 /dev/hdX</i> 
<comment>(Slår DMA og andre sikre ydelsesfremmende muligheder til</comment>
# <i>hdparm -d1 -A1 -m16 -u1 -a64 /dev/hdX</i>
<comment>(Tvinger Ultra-DMA til at slås til -- farligt -- det kan være
skyld i at nogle drev ikke fungere hensigtsmæssigt)</comment>
# <i>hdparm -X66 /dev/hdX</i>
</pre>
</note>

			
</body>
</section>
</chapter>
<chapter>
<title>Valgfri netværkskonfiguration</title>
<section>
<title>Måske virker det bare?</title>
<body>

<p>
Hvis dit system er tilsluttet et Ethernet netværk, så er det meget
sandsynligt at din netværkskonfiguration allerede er blevet sat
automatisk op for dig. Hvis dette er tilfældet, burde du være i stand
til at udnytte de mange inkluderede netværksbaserede kommandoer på
LiveCD'en, så som <c>ssh</c>, <c>scp</c>, <c>ping</c>, <c>irssi</c>,
<c>wget</c> og <c>links</c> blandt andre.
</p>
	  
<p>
Hvis netværkopsætningen er blevet konfigureret for dig så burde
<c>/sbin/ifconfig</c> kommandoen lave en liste nogle Internet-enheder udover
lo, så som eth0:
</p>

<pre caption="/sbin/ifconfig for et fungerende netkort">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11 Base address:0xe800 
</pre>

<p>
Du kan prøve at pinge din ISP's DNS server (Den findes i
<path>/etc/resolv.conf</path>) og en hjemmeside af eget valg, bare vær
sikker på at dine pakker forbinder til nettet, DNS-navnebestemmelse virker korrekt, osv...
</p>

<pre caption="Yderligere netværkstests">
# <i>ping -c 3 www.yahoo.com</i>
</pre>

<p>
Er du i stand til at bruge dit netværk? Hvis dette er tilfældet, så kan
du springe resten af denne sektion over.
</p>

</body>
</section>
<section>
<title>PPPoE konfiguration</title>
<body>

<p>
Underforstået at du behøver PPPoE til at forbinde til internettet, har
LiveCD'en (enhver version) gjort tingene nemme for dig, ved at
inkludere <c>rp-pppoe</c>. Brug det givne <c>adsl-setup</c> script til
at konfigurere din forbindelse. Du vil blive spurgt om den
ethernet-enhed der er forbundet til dit adsl modem, dit brugernavn og password,
IP-adressen på din DNS server og om du har brug for en basis firewall eller ikke.
</p>

<pre caption="PPPoE Konfiguration">
# <i> adsl-setup </i>
# <i> adsl-start </i>
</pre>

<p>
Hvis noget går galt bør du dobbelt-tjekke at du trykkede brugernavn og
password korrekt ved at kigge på <path>/etc/ppp/pap-secrets</path> eller	
<path>/etc/ppp/chap-secrets</path> og være sikker på at du bruger den
rigtige ethernet-enhed.
</p>

</body>
</section>

<section>
<title>Automatisk Netværk Konfiguration </title>
<body>

<p>
Den simpleste måde at sætte netværket op på, hvis det ikke automatisk
blev konfigureret, er ved at køre <c>net-setup</c> scriptet:
</p>

<pre caption="Net-Setup Scriptet">
# <i>net-setup eth0</i>
</pre>

<p>
Du kan selvfølgelig sætte netværket op manuelt hvis du foretrækker
det. Det er beskrevet efterfølgende.
</p>

</body>
</section>
<section>
<title>Manuel DHCP-opsætning</title>
<body>

<p>
Netværksopsætningen er simpelt med DHCP; Hvis din ISP ikke bruger
DHCP, så spring ned til den statiske konfiguration i sektionen nedenfor.
</p>

<pre caption="Netwærksopsætning med DHCP">
# <i>dhcpcd eth0</i>
</pre>

<note>
Nogle ISP'er kræver at du giver dem et hostname. For at gøre dette, tilføj
et <c>-h myhostname</c> flag til dhcpcd kommandoen i linjen ovenfor.
</note>

<p>
Hvis du modtager <e>dhcpConfig</e> advarsler, så gå ikke i panik; Disse
fejl er højest sandsynligt kosmetiske. Spring ned til testningen af
netværket nedenunder.
</p>

</body>
</section>
<section>
<title>Manuel statisk opsætning</title>
<body>

<p>
Vi bliver nødt til at sætte nok netværk op, så vi lige kan downloade de
kilder, der skal til at bygge systemet og også det krævede localhost
interface. Den krævede information er forklaret i den næste tabel.
</p>

<table>
<tcolumn width="1.25in"/>
<tcolumn width="4in"/>
<tcolumn width="1.25in"/>
<tr>
<th>Information</th>
<th>Beskrivelse</th><th>Eksemplarisk værdi</th>
</tr>
<tr>
<ti>IP adresse</ti>
<ti>IP adressen du vil fastsætte til dit
netværkskort</ti><ti>192.168.1.2</ti>
</tr>
<tr>
<ti>Broadcast adresse</ti>
<ti>IP-adressen, som vil broadcaste pakkerne
til alle værterne i netværket</ti><ti>192.168.1.255</ti>
</tr>
<tr>
<ti>Netværks maske</ti>
<ti>Den maske, som bruges sammen med IP-adressen til at se hvilken del
af adressen der er til netværksidentifikation og
værts-identifikation</ti>
<ti>255.255.255.0</ti>
</tr>
<tr>
<ti>Gateway</ti>
<ti>Den IP-adresse på computeren, som skal fremadrette
de pakker, der ikke er tiltænkt til det lokale netværk (det meste
af tiden, den computer der deler internetforbindelsen)</ti>
<ti>192.168.1.1</ti>
</tr>
</table>

<p>
Tast de følgende kommandoer, hvor du udskifter <c>$IFACE</c> med dit
netværks interface (typisk <c>eth0</c>), <c>$IPNUM</c> med din IP-adresse, 
<c>$BCAST</c> med din broadcast-adresse og <c>$NMASK</c> med din netværksmaske. Til <c>route</c> kommandoen, udskift <c>$GTWAY</c> med din
standard (default) gateway.
</p>

<pre caption="Statisk IP-netværksopsætnig">
# <i>ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</i>
# <i>route add -net default gw $GTWAY netmask 0.0.0.0 metric 1 $IFACE</i>
</pre>

<p>
Nu er det tid til at lave <path>/etc/resolv.conf</path> filen, sådan at
navnebestemmelsen (at finde Web/FTP sider på deres navn fremfor IP-adresser alene) kommer til at virke. Du kan bruge <c>nano -w
/etc/resolv.conf</c> til at lave
<path>/etc/resolv.conf</path>. <c>nano</c> er en lille og nem-at-bruge
editor.
</p>

<p>
Her er en skabelon at følge til at skabe din <path>/etc/resolv.conf</path> 
fil:
</p>

<pre caption="/etc/resolv.conf skabelon">
domain mydomain.com
nameserver 10.0.0.1
nameserver 10.0.0.2
</pre>

<p>
Udskift <c>10.0.0.1</c> og <c>10.0.0.2</c> med IP adresserne på dine
primære og sekundære DNS-servere.
</p>

</body>
</section>

<section>
<title>Proxy-opsætning</title>
<body>

<p>
Hvis du er bag en proxy, kan det være nødvendigt at konfigurere din
proxy før at du fortsætter. Vi exporterer følgelig nogle variable for at sætte
proxy'en op.
</p>

<pre caption="At sætte en Proxy op">
<comment>Hvis proxy'en begrænser HTTP trafik:</comment>
# <i>export http_proxy="http://maskine.firma.dk:1234"</i>
<comment>Hvis proxy'en begrænser FTP trafik:</comment>
# <i>export ftp_proxy="ftp://maskine.firma.dk"</i>
<comment>Hvis proxy'en begrænser RSYNC trafik:</comment>
# <i>export RSYNC_PROXY="rsync://maskine.firma.dk"</i>
</pre>

<note>
Hvis din proxy kræver godkendelse, så skal du bruge en sammensætning
som <c>http://brugernavn:password@maskine.firma.com</c> (bemærk det tilføjede
  	 &quot;brugernavn:password@&quot;).

</note>


</body>
</section>

<section>
<title>Netværket kører!</title>
<body>

<p>

Netværket burde nu være sat op og brugbar. Du burde være i
stand til at bruge de inkluderede <c>ssh</c>, <c>scp</c>, <c>links</c>, <c>irssi</c> og <c>wget</c> 
kommandoer til at forbinde til andre maskiner på dit LAN eller Internet.
</p>

</body>
</section>
</chapter>

<chapter>
<title>At sætte din systemsdato og klokken</title>
<section>
<body>

<p>
Nu skal du sætte din systemsdato og klokken. Dette kan du gøre med <c>date</c> kommandoen.
</p>

<pre caption="At sætte din systemsdato">
# <i>date</i>
Thu Feb 27 09:04:42 CST 2003
<comment>(Hvis din dato er forkert, sæt da datoen med den følgende kommando)</comment>
# <i>date 022709042003</i>
<comment>(date MMDDhhmmCCYY)</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Filsystemer, partitioner og blok-enheder</title>
<section>
<title>Introduktion til blok-enheder</title>
<body>

<p>
I denne sektion betrager vi de disk-orienterede aspekter
af Gentoo Linux og Linux generelt. Dette inkludere Linux filsystemer,
partitioner og blok-enheder. Når du er bekendt med input og output af
diske og filsystemer bliver du guidet igennem den proces, det er at
sætte partitioner og filsystemer op til din Gentoo Linux installation.
</p>

<p>
Til at begynde med vil jeg introducere "blok-enheder". Den mest
berømte blok-enhed er sandsynligvis den, der repræsenterer det første
IDE drev i et Linux system:
</p>
<pre caption="/dev/hda, den blok-enhed, der repræsenterer det primære master IDE drev i dit system">
/dev/hda
</pre>

<p>
Hvis dit system bruger SCSI-drev, så vil dit første harddisk-drev være:
</p>

<pre caption="/dev/sda, den blok-enhed, der repræsenterer den første
logiske SCSI-enhed i dit system">
/dev/sda
</pre>

<p>
Blok-enhederne ovenfor repræsenterer en <e>abstrakt</e> grænseflade til
disken. Brugerprogrammer kan bruge disse blok-enheder til at påvirke
din disk uden at bekymre sig om hvorvidt dine drev er IDE, SCSI eller
noget andet. Programmet kan simpelthen adressere lagerpladsen på
disken, som en samling af kontinuerte, vilkårlig-tilgængelige
512-byte blokke.
</p>

</body>
</section>
<section>
<title>Partitioner og fdisk</title>
<body>

<p>
I Linux skaber vi filsystemer ved at bruge en speciel kommando ved navn
<c>mkfs</c> (eller <c>mke2fs</c>, <c>mkreiserfs</c>, osv.), der
specificerer en bestemt blok enhed som et kommando-linie argument.
</p>

<p>
Selvom det er teoretisk muligt at bruge en "hel disk"s blok-enhed (en
der repræsenterer <e>hele</e> disk'en) såsom <path>/dev/hda</path>
eller <path>/dev/sda</path> til at huse et enkelt filsystem, sker det
næsten aldrig i praksis. I stedet for bliver hele diskens blok-enheder
delt op i mindre, mere overskuelige blok-enheder kaldet
"partitioner". Partitioner bliver skabt med et værktøj kaldet
<c>fdisk</c>, som bliver brugt til at skabe og redigere den
patitionstabel, der bliver gemt på hver disk. Partitionstabellen
definerer præcis hvordan hele disken er delt op.
</p>

<p>
Vi kan betragte en disks partitiontabel ved at køre <c>fdisk</c> og
specificere en blok-enhed, der repræsenterer en hel disk som et argument:
</p>

<note>
Alternative grænseflader til diskens patitiontabel inkluderer
<c>cfdisk</c>, <c>parted</c> og <c>partimage</c>. Vi anbefaler
<c>fdisk</c> fordi det er mere kraftfuld og velkendt i hele Unix/Linux verdenen.
</note>

<pre caption="At starte fdisk op">
# <i>fdisk /dev/hda</i>
</pre>

<p>
eller
</p>

<pre caption="Vi starter fdisk op, for at kigge på partitionstabellen
på /dev/sda">
# <i>fdisk /dev/sda</i>
</pre>

<impo>
Bemærk at du bør <e>ikke</e> gemme eller lave nogen ændringer til en
disks partitionstabel, hvis nogen af dens partitioner indeholder
filsystemer, der er i brug eller indeholder vigtige data. At gøre dette
vil generelt gøre at data på disken vil blive tabt.
</impo>

<p>
Når du først er i <c>fdisk</c> bliver du modtaget af en prompt, der ser
sådan ud:
</p>

<pre caption="fdisk prompten">
Command (m for help): 
</pre>

<p>
Tryk <c>p</c> for at vise din disks nuværende partitions konfiguration:
</p>

<pre caption="An example partition configuration">
Command (m for help): <i>p</i>

Disk /dev/hda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        49    264600   82  Linux swap
/dev/hda3            50        70    158760   83  Linux
/dev/hda4            71      2184  15981840    5  Extended
/dev/hda5            71       209   1050808+  83  Linux
/dev/hda6           210       348   1050808+  83  Linux
/dev/hda7           349       626   2101648+  83  Linux
/dev/hda8           627       904   2101648+  83  Linux
/dev/hda9           905      2184   9676768+  83  Linux

Command (m for help): 
</pre>

<p>
Denne disk er opsat til at huse syv Linux filsystemer (hver med
overensstemmende partitioner vist som "Linux") og så en swap-partition
der er listet som "Linux swap".
</p>

<p>
Bemærk navnet på den pågældende partitions blok-enhed på den venstre
side, startende med <path>/dev/hda1</path> og op til
<path>/dev/hda9</path>. I PC'ens tidlige dage var det kun tilladt at
lave maksimum fire partitioner (kaldet "primary" partitions). Dette
var for begrænsende, så en anden løsning kaldet <e>extended
patitioning</e> (udvidet partitionering) blev udviklet. En udvidet
partition minder meget om en primær partition og tæller mod den
begrænsning på fire, som der er på primære partitioner. Udvidede
partitioner kan derimod indeholde ethvert antal af såkaldte
<e>logiske</e> partitioner, hvilket giver en effektiv måde at omgå
problemet med begrænsningen på de fire primære partitioner.
</p>

<p>
Alle partitionerne fra <path>/dev/hda5</path> og højere er logiske
partitioner. Numrene fra 1 til 4 er reserverede til primære eller
udvidede partitioner.
</p>

<p>
Så i vores tilfælde er <path>/dev/hda1</path> til
<path>/dev/hda3</path> primære partitioner. <path>/dev/hda4</path> er
en udvidet partition, der indeholder <path>/dev/hda5</path> til
<path>/dev/hda9</path>, som er logiske partitioner. Du vil aldrig
rigtig <e>bruge</e> <path>/dev/hda4</path> til direkte at gemme et
filsystem -- det fungerer simpelthen som en lagerplads for partitionerne <path>/dev/hda5</path> til 
<path>/dev/hda9</path>.
</p>

<p>
Bemærk også at hver partition har et "Id" også kaldet en "partitions
type". Når du skaber en ny partition, skal du være sikker på at
partitions typen er korrekt sat. '83' er den korrekte partitions type
til partitioner der indeholder Linux filsystemer, '82' er den korrekte
partitions type til Linux swap partitioner og 'fd' er den anbefalede
partitions type til Software RAID partitioner. Du kan sætte
partitionstyperne ved at bruge <c>t</c> kommandoen i
<c>fdisk</c>. Linux kernen bruger partitionstypen for at finde filsystemer
og swap enheder ved auto-søgning på disken ved opstart.
</p>

</body>
</section>

<section>
<title>At bruge fdisk til at sættet partitioner op med</title>
<body>

<p>
Nu hvor du har fået en introduktion til hvordan partitionering gøres
under Linux, så er det blevet tid til at hjælpe dig igennem processen
at partitionere en disk til din Gentoo Linux installation. Efter dette
vil din partitionskonfiguration ligne denne:
</p>

<pre caption="Den Partitionskonfiguration som du vil have efter at følge
disse skridt">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1   *         1        14    105808+  83  Linux
/dev/hda2            15        81    506520   82  Linux swap
/dev/hda3            82      3876  28690200   83  Linux

Command (m for help):
</pre>

<p>
I vores foreslået "nybegynder" partitionskonfiguration har vi tre
partitioner. Den første (<path>/dev/hda1</path>) i starten af disken
er en lille partition, kaldet en boot partition. Boot-partitionens
formål er at indeholde alle de kritiske data, der har med opstarten at
gøre -- information til GRUB bootloaderen (hvis du bruger GRUB) og din(e) Linux kerne(r). 
Boot-partitionen giver os et sikkert sted at gemme alt, der har med opstarten at gøre. Under din normale hverdagsbrug af Gentoo Linux bør din
boot-partition forblive <e>unmounted</e> af sikkerhedsgrunde. Hvis du
sætter et SCSI system op bliver din boot partition højest sandsynligt
<path>/dev/sda1</path>.
</p> 

<p>
Det er anbefalet at have boot-partitioner (der indeholder alt der er
nødvendigt for at bootloaderen kan fungere) i starten af
disken. Selvom det ikke nødvendigvis er krævet længere, er det en brugbar
tradition fra de dage, hvor lilo bootloaderen ikke var i stand til at
hente kerner fra filsystemer, der strakte sig ud over diskens cylinder 1024.
</p>

<p>
Den anden partition (<path>/dev/hda2</path>) bruges til swap-plads. Kernen bruger swap-plads som en virtuel lagerplads når der
bliver lidt hukommelse til rådighed. Denne partition, er relativt sagt, ikke
særlig stor heller, typisk omkring 512MB. Hvis du sætter et SCSI
system op, ender denne partition sandsynligvis med at komme til at
hedde <path>/dev/sda2</path>.
</p>

<p>
Den tredje partition (<path>/dev/hda3</path>) er ret stor og fylder
resten af disken. Denne partition kaldes vores "root" partition og vil
blive brugt til at gemme vores filsystem der indeholder selve Gentoo
Linux. På et SCSI system kommer denne højest sandsynligt til at være <path>/dev/sda3</path>.
</p>

<p>
Før vi partitionerer disken, er her et hurtigt teknisk overblik over de
foreslåede partitioner og filsystemets konfiguration, der kan bruges når
man installerer Gentoo Linux: 
</p>

<table>
<tcolumn width="1.5in"/>
<tcolumn width="2.5in"/>
<tcolumn width="2.5in"/>
<tcolumn width="1in"/>
<tr>
 <th>Partition</th>
 <th>Størrelse</th>
 <th>Type</th>
 <th>eksemplarisk enhed</th>
</tr>
<tr>
 <ti>boot partition, indeholdende kerne(r) og boot information</ti>
 <ti>32 Megabytes</ti>
 <ti>ext2/3 højt anbefalet (nemmest); hvis ReiserFS så
 mount med <c>-o notail</c>. Hvis du bruger ext3 eller ReiserFS, så
 skal du tilføje journal størrelsen til partitionsstørrelsen; i disse
 tilfælde er 64 Megabytes anbefalet</ti>
 <ti><path>/dev/hda1</path></ti>
</tr>
<tr>
 <ti>swap partition (ikke længere en 128 Megabyte begrænsning, nu 2GB)</ti>
 <ti>Generelt, skal man konfigurere et swap område der er en til to
 gange størrelsen af den fysiske RAM i dit system</ti>
 <ti>Linux swap</ti>
 <ti><path>/dev/hda2</path></ti>
</tr>
<tr>
 <ti>root partition, indeholder hovedfilesystemet (/usr, /home, osv.)</ti>
 <ti>&gt;=1.5 Gigabytes</ti>
 <ti>ReiserFS, ext3 anbefales; ext2 er ok</ti>
 <ti><path>/dev/hda3</path></ti>
</tr>
</table>

<p>
Ok, nu til at skabe partitionerne som i eksemplet og tabellen
ovenfor. Start først fdisk ved at taste <c>fdisk /dev/hda</c> eller
<c>fdisk /dev/sda</c> afhængigt af om du bruger IDE eller
SCSI. Derefter tast <c>p</c> for at se din nuværende
partition-konfiguration. Er der noget på disken, som du får brug for at beholde?
Hvis der er tilfældet, <b>stop nu</b>. Hvis du fortsætter med disse
angivelser <b>så bliver alt eksisterende data på din disk slettet</b>.
</p>

<impo>
At følge instruktionerne nedenfor vil gøre at alt tidligere data på
din disk vil <b>blive slettet</b>! Hvis der er nogetsomhelst på dit
drev, så vær sikker på at det er ikke-kritisk information som du ikke
har noget imod at miste. Vær også sikker på at du har <b>valgt det
korrekte drev</b> så du ikke ved uheld kommer til at slette data fra
det forkerte drev.
</impo>

<p>
Nu er det tid til at slette alle eksisterende partitioner. For at gøre
dette, skriv <c>d</c> og tryk Enter. Du bliver så spurgt efter det
partitionsnummer som du gerne vil slette. For at slette en allerede
eksisterende <path>/dev/hda1</path> skriver man:
</p>

<pre caption="At slette en partition">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Partitionen er blevet planlagt til at blive slettet. Den dukker ikke
længere op hvis du skriver <c>p</c>, men den bliver ikke slettet før
dine ændringer bliver gemt. Hvis du har lavet en fejl og vil afslutte
uden at gemme dine ændringer, så tryk <c>q</c> med det samme og tryk
Enter og så bliver din partition ikke slettet.
</p>

<p>
Nu med den antagelse at du faktisk vil slette alle partitionerne på
dit system, tryk gentagne gange <c>p</c> for at printe en liste over
partitionerne på skærmen og tryk <c>d</c> og det nummer på den
partition der skal slettes. På et tidspunkt kommer du til en
partitions tabel hvor der ikke er noget på:
</p>

<pre caption="En tom partition tabel">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Nu hvor partitions tabellen i hukommelsen er tom, er vi klar til at
skabe en boot partition. For at gøre dette, tryk <c>n</c> for at skabe
en ny partition. Derefter tryk <c>1</c> for at skabe den første
primære partition. Når du bliver spurgt efter den første cylinder så
tryk Enter. Når du bliver spurgt om den sidste cylinder, tryk
<c>+32M</c> for at lave en partition med størrelse 32MB. Du kan se
outputtet af disse skridt nedenunder:
</p>

<note>
Filsystemer med journal kræver ekstra plads til journalen. Standard
indstillinger kræver omkring 33 Megabytes plads. Derfor hvis du bruger
et filsystem med journal til <path>/boot</path> bør du taste
<c>+64M</c>, når du bliver spurgt efter den sidste cylinder.
</note>

<pre caption="Skridt for at skabe vores boot­partition">
Command (m for help): <i>n</i>
Command action
e   extended
p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-3876, default 1): <comment>(Tryk Enter)</comment>
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <i>+32M</i>
</pre>

<p>
Når du taster <c>p</c> burde du få følgende partitionsliste:
</p>

<pre caption="Vores første partition er blevet skabt">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
</pre>

<p>
Lad os så skabe swap-partitionen. For at gøre dette, tast <c>n</c> for
at skabe en ny partition, derefter <c>p</c> for at fortælle fdisk at
du vil have endnu en primær partition. Derefter tast <c>2</c> for at
skabe den anden primære partition, <path>/dev/hda2</path> i vores
tilfælde. Når du bliver spurgt efter den første cylinder, skal du
taste Enter. Når du bliver spurgt efter den sidste cylinder, skal du
taste <c>+512M</c> for at skabe en partition med størrelsen
512MB. Efter du har gjort dette, tast da <c>t</c> for at sætte
partitionstypen, <c>2</c> for at vælge den partition du har lavet
og derefter tast <c>82</c> for at sætte partitionstypen til "Linux
Swap". Efter at have færdiggjort disse trin, tast <c>p</c> som burde
give en partitionstabel der ca. ser sådan ud:
</p>

<pre caption="Vores swap-partition er blevet skabt">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
</pre>

<p>

Lad os til sidst lave root-partitionen. For at gøre dette tast <c>n</c>
for at lave en ny partition, derefter <c>p</c> for at fortælle at du
vil have en primær partition. Tast derefter <c>3</c> for at skabe den
tredje primære partition, <path>/dev/hda3</path> i vores tilfælde. Når
du bliver spurgt efter den første cylinder, tast Enter. Når du bliver
spurgt efter den sidste cylinder, tast Enter for at lave en partition
der fylder resten af den tilgængelige plads på din disk. Efter at have
udført disse skridt får du, ved at taste <c>p</c>, en partitionstabel
der ca. ser sådan ud:
</p>

<pre caption="Vores root-partition er blevet skabt">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
/dev/hda3         82      3876  28690200   83  Linux
</pre>

<p>
Til sidst er vi nødt til at sætte "bootable" flag på vores boot
partition og skrive vores ændringer til disken. For at sætte
<path>/dev/hda1</path> som en "bootable" partition skal du taste
<c>a</c> i menuen og så taste <c>1</c> for partitionsnummeret. Hvis
du taster <c>p</c> nu, kan du se at <path>/dev/hda1</path> har en
<c>*</c> i "Boot" søjlen. Lad os nu skrive ændringerne to disken. For
at gøre dette, tast <c>w</c> og tast Enter. Din disks partitioner er
nu passende konfigureret til en Gentoo Linux installation.
</p>

<note>
Hvis <c>fdisk</c> eller <c>cdfisk</c> beder dig om at genstarte så gør
det venligst for at tillade dit system, at finde den nye partitionskonfiguration.
</note>

</body>
</section>

<section>
<title>At lave filsystemer</title>
<body>

<p>
Nu hvor vores partitioner er blevet skabt, er det tid til at sætte
vores filsystemer op på boot- og root-partitionerne, således at de kan
mountes og bruges til at gemme data. Vi konfigurerer også
swap-partitionen til at fungere som swap-lagerplads.
</p>

<p>
Gentoo Linux understøtter en hel del forskellige typer af filsystemer;
hver type har deres styrker og svagheder og deres egne sæt af
ydelseskarakteristikker. Lige nu, understøtter vi skabelsen af
filsystemerne ext2, ext3, XFS, JFS og ReiserFS.
</p>

<p>
ext2 er det prøvede og sande Linux filsystem, men det har ikke
metadata journaler, hvilket betyder at rutine tjek af filsystemet ved
opstart kan bliver ret tidskrævende. Der er nu et større udvalg af
nyere generationers <e>journal</e> filsystemer der kan tjekkes for
konsistens meget hurtigt og er derfor generelt at foretrække, frem
for modstykker uden journal. Filsystemer med journal kan forebygge
lange afbrydelser når dit system starter og når det er i en <e>ikke
konsistent</e> tilstand.
</p>

<p>
ext3 er den version af ext2 filsystemet som har journal, hvor den har
metadata journal til hurtig gendannelse, oveni andre forebedrede
journal muligheder som fuld data og ordnet data journal. ext3 er et meget
godt og pålideligt filsystem. Det tilbyder generelt anstændig ydelse
under de fleste omstændigheder. Fordi det ikke i udstrakt grad gør
brug af "træer" i dets interne design, skalerer det ikke særlig godt,
betydende at det ikke er det ideelle valg til et meget stort
filsystem, eller situationer hvor du kommer til at håndtere meget
store filer eller store antal af filer i et enkelt bibliotek. Men når
det bliver brugt indenfor de rammer det er designet til, er ext3 et
fremragende filsystem.
</p>

<p>
ReiserFS er et B*-træ baseret filsystem der samlet set har en god
ydelse og overhaler både ext2 og ext3 stort når man har med små filer
at gøre (filer mindre end 4k), ofte med en faktor af 10x-15x. ReiserFS
skalerer også ekstremt godt og har metadata journaler. Fra og med
kerne 2.4.18+ er ReiserFS stensikker og højest anbefalelsesværdig både
til brug til alment filsystem og til ekstreme tilfælde, såsom skabelsen
af store filsystemer, brugen af man små filer, meget store filer og
biblioteker indeholdende titusinder af filer. ReiserFS er det
filsystem vi anbefaler, som standard til alle partitioner, der ikke er /boot.
</p>

<p>
XFS er et filsystem med metadata journaler, der er fuldt understøttet
under Gentoo Linuxs <c>xfs-sources</c> kerne. Det kommer med et
robust sæt af muligheder og er optimeret til skalerbarhed. Vi
anbefaler kun dette filsystem til Linux systemer med high-end SCSI
og/eller fiber kanal lagerplads og en UPS (ikke afbrydbart
strømforsyning). Fordi XFS aggressivt gemmer indkommende data i hukommelsen, kan
forkert designede programmer (dem der ikke tager de rigtige
forholdsregler når de skriver filer til disken, og dem er der faktisk
en del af) tabe en stor del data hvis systemet uventet går ned.
</p>  

<p>
JFS er IBMs højt-ydelses filsystem med journal. Det er fornyligt blevet
produktions-klart og der er derfor ikke nok erfaring med dette, til at
komme med positive eller negative kommentarer, om dets generelle
stabilitet på dette tidspunkt.
</p>

<p>
Hvis du leder efter det mest robuste filsystem med journal, så brug
ext3. Hvis du leder efter et godt højt-ydelses filsystem med journal
til alment brug, så brug ReiserFS; både ext3 og ReiserFS er modne,
videre-udviklede og anbefalet til generel brug.
</p>

<p>
Baseret på vores eksempel ovenfor, vil vi bruge de følgende kommandoer
til at initialisere vores partitioner til brug:
</p>

<pre caption="Initialisering af vore partitioner (eksempel)">
# <i>mke2fs /dev/hda1</i>
# <i>mkswap /dev/hda2</i>
# <i>mkreiserfs /dev/hda3</i>
</pre>

<p>
Vi vælger ext2 til vores <path>/dev/hda1</path> boot partition fordi
det er et robust filsystem med journal og er understøttet af alle
større bootloadere. Vi brugte <c>mkswap</c> til vores
<path>/dev/hda2</path> swap-partition -- valget er åbenlyst her.
Til vores root filsystem på <path>/dev/hda3</path> valgte vi
ReiserFS, fordi det er et godt filsystem med journal, der giver
forrygende ydelse. Gå nu bare i gang med at initialisere dine partitioner.
</p>

<p>
Til reference er der forskellige <c>mkfs</c>-lignende kommandoer
til rådighed under installationsprocessen:
</p>

<p>
<c>mkswap</c> er den kommando, der bruges til at initialisere swap-partitioner:
</p>

<pre caption="Initialisering af Swap">
# <i>mkswap /dev/hda2</i>
</pre>

<p>
Du kan bruge <c>mke2fs</c> kommandoen til at lave ext2 filsystemer:
</p>

<pre caption="At skabe et ext2 Filsystem">
# <i>mke2fs /dev/hda1</i>
</pre>

<p>
Hvis du vil bruge ext3, kan du gøre dette ved at bruge
<c>mke2fs -j</c>:
</p>

<pre caption="At skabe et ext3 Filsystem">
# <i>mke2fs -j /dev/hda3</i>
</pre>

<note>
Du kan finde ud af mere omkring brugen af ext3 under Linux 2.4 på
<uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>.
</note>

<p>
For at skabe ReiserFS filesystemer skal du bruge <c>mkreiserfs</c> kommandoen:
</p>

<pre caption="At skabe et ReiserFS Filsystem">
# <i>mkreiserfs /dev/hda3</i>
</pre>

<p>
For at skabe et XFS filsystem brug <c>mkfs.xfs</c> kommandoen:
</p>

<pre caption="At skabe et XFS Filsystem">
# <i>mkfs.xfs /dev/hda3</i>
</pre>

<note>
Du vil muligvis ønske at tilføje et par ekstra flags til <c>mkfs.xfs</c> 
kommandoen: <c>-d agcount=3 -l size=32m</c>. Den ekstra <c>-d agcount=3</c> kommando 
vil sænke numret af allokeringsgrupper. XFS insisterer på at bruge
mindst 1 allokeringsgruppe pr. 4 GB af din partition, så f.eks. hvis
du har en 20 GB partition, får du brug for en minimum agcount på 5. Den ekstra
<c>-l size=32m</c> kommando forøger journal størrelsen til 32 Mb,
hvilket forøger ydelsen.
</note>

<p>
For at skabe et JFS filsystem, brug <c>mkfs.jfs</c> kommandoen:
</p>

<pre caption="At skabe et JFS Filsystem">
# <i>mkfs.jfs /dev/hda3</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>At mounte partitioner</title>
<section>
<body>

<p>
Nu vil vi aktivere vores ny-initialiserede swap-drev, fordi vi måske
får brug for den ekstra virtuelle hukommelse, som den leverer, senere:
</p>

<pre caption="Aktivering af Swap">
# <i>swapon /dev/hda2</i>
</pre>

<p>
Derefter vil vi skabe <path>/mnt/gentoo/boot</path> mount-punktet,
og vi vil mounte vores filsystemer til mount-punkterne. Når vores boot
og root filsystemer er mountede, vil alle de filer vi kopierer og
skaber indeni <path>/mnt/gentoo</path> blive placeret i de nye
filsystemer. Bemærk hvis du er ved at sætte Gentoo Linux op med selvstændige
<path>/usr</path> eller <path>/var</path> filsystemer, skal disse
mountes under henholdsvis <path>/mnt/gentoo/usr</path> og <path>/mnt/gentoo/var</path>.
</p>

<impo>
Hvis din <path>/boot</path> partition (den der indeholder din kerne)
er ReiserFS, så vær sikker på at mounte den med <c>-o notail</c>
parameteren sådan at GRUB bliver rigtigt installeret. Vær også sikker
på at <c>notail</c> kommer med i din nye <path>/etc/fstab</path> boot
partition indgang. Det kommer vi snart til. Hvis du vil bruge LILO med
ReiserFS så er det ikke nødvendigt med <c>-o notail</c> Det er altid
sikkert at specificere <c>-o notail</c> i forbindelse med ReiserFS
hvis du er i tvivl om, hvad du skal gøre.
</impo>

<pre caption="At lave Mount punkter">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

<impo>
Hvis du har problemer med at mounte din boot-partition med ext2, så prøv
<c>mount /dev/hXX /mnt/gentoo/boot -t ext2</c>
</impo>

</body>
</section>
</chapter>


<chapter>
<title>Stage-tarball'er og chroot</title>
<section>
<title>At vælge den ønskede stage tarball</title>
<body>

<p>
Nu skal du beslutte hvilken tarball du gerne vil bruge som en basis til
installationen, hvis du ikke allerede har gjort det. De forskellige
stage'er findes på Live CD'en i <path>/mnt/cdrom/stages/</path> og du
kan skrive <c>ls /mnt/cdrom/stages/</c> for at se hvad der er
tilgængeligt på din CD.
</p>

<p>
<b>GRP brugere</b> bør bruge <path>stage3-xx-yy.tar.bz2</path> tarball.
</p>

<p>
Hvis du gerne vil lave en installation med en stage tarball der <e>ikke</e>
er på din CD (hvilket er meget sandsynligt hvis du bruger vores
"basis" Live CD) er dette stadig muligt, men du bliver nødt til at
downloade den stage vha. de følgende instruktioner. Hvis du allerede
har den stage tarball du gerne vil bruge (hvilket de fleste brugere
vil have), så fortsæt til "At pakke stage tarball'en ud" sektionen.
</p>

<note>
Hvis du vil bruge en proxy (som proxy.server.tld:8080), tilføj
<c>-http-proxy proxy.server.tld:8080</c> til <c>links</c> kommandoen
vist forneden.
</note>

<pre caption="At hente den krævede Stage">
# <i>cd /mnt/gentoo</i>
<comment>Brug links til at få URL'en på din tarball:</comment>
# <i>links http://gentoo.oregonstate.edu/releases/x86/1.4/</i>
<comment>Brug <c>Up</c> and <c>Down</c> pil-tasterne (eller <c>TAB</c>
tasten) for at gå til det rigtige bibliotek
Marker den passende stage du vil downloade
Tryk <c>d</c> for at starte med at downloade
Gem filen og quit browseren

<b>Eller</b> brug wget fra kommandolinen:</comment>
# <i>wget </i><comment>(indsæt URL til den ønskede stage tarball her)</comment>
</pre>

</body>
</section>
<section>
<title>At pakke stage tarball'en ud</title>
<body>

<p>
Nu er det tid til at pakke den komprimerede stage-tarball, som du har
valgt, ud til <path>/mnt/gentoo/</path>. Husk at du behøver kun pakke
<b>én</b> stage-tarball ud, uanset om du har valgt en stage1, stage2
eller stage3 installation. Så hvis du vil installere en stage3-installation af Gentoo, så skal du bare pakke stage3 tarball'en
ud. Pak stage-tarball'en ud, således:
</p>

<impo>
Vær sikker på at bruge <c>p</c> muligheden med <c>tar</c>. At glemme
dette, vil gøre at bestemte filer har forskellige rettigheder.
</impo>

<pre caption="At pakke en stage ud">
# <i>cd /mnt/gentoo</i>
<comment>Ændre "stage3" til "stage2" eller "stage1" hvis du vil starte
fra disse i stedet for.</comment>
<comment>Hvis du har downloadet din stage-tarball, så ændre stien
nedenfor til at begynde med "/mnt/gentoo/"
i stedet for "/mnt/cdrom/stages/".</comment>
# <i>tar -xvjpf /mnt/cdrom/stages/stage3-*.tar.bz2</i>
</pre>

<p>
Hvis du har downloaded din stage tarball til <path>/mnt/gentoo</path>
så kan du nu slette denne ved at skrive <c>rm /mnt/gentoo/stage*.tar.bz2</c>.
</p>

</body>
</section>

<section>
<title>GRP pakke/snapshot trin</title>
<body>

<impo>
De følgende instruktioner er kun for GRP brugere. Hvis du ikke bruger GRP, fortsæt til "Valg af filspejle (Valgfrit)"
</impo>

<p>
<b>GRP bruger</b>: Der er et Portage snapshot på Live CD'en. Du bliver
nødt til at bruge dette snapshot så du kan springe <c>emerge sync</c>
skridtet over senere i dette dokument, siden at <c>emerge sync</c>
kræver en netværksforbindelse. Pak dette snapshot ud som følger:
</p>

<pre caption="At bruge et Portage snapshot">
<comment>Udskift yyyymmdd med den dato der er i filnavnet.</comment>
# <i>tar -xvjf /mnt/cdrom/snapshots/portage-yyyymmdd.tar.bz2 -C /mnt/gentoo/usr</i>
</pre>

<p>
Dette vil pakke et snapshot af Portage træet ud til din friske Gentoo
installation. Nu behøver du ikke forbinde til Internet og bruge <c>emerge
sync</c> for at downloade et Portage træ. Kopier nu distfiles og
pakkerne fra Live CDen på plads
</p>

<pre caption="At kopiere GRP filer">
# <i>cp -R /mnt/cdrom/distfiles /mnt/gentoo/usr/portage/distfiles</i>
# <i>cp -a /mnt/cdrom/packages /mnt/gentoo/usr/portage/packages</i>
</pre>

<p>
Alle relevante filer er nu på plads til at bruge GRP. Du bør have alt
kopieret over og udpakket som du får brug for til at installere Gentoo
Linux -- selv uden en Internet-forbindelse.
</p>

</body>
</section>

<section>
<title>At vælge filspejle (Valgfrit)</title>
<body>

<p>
<c>mirrorselect</c> er et redskab designet til automatisk at vælge de
hurtigste filspejle (mirrors) baseret på hvor du befinder dig, eller manuelt
vælge et filspejl fra en liste.
Desværre virker <c>mirrorselect</c> ikke godt bag ved alle routere.
</p>

<pre caption="At bruge mirrorselect">
<comment>(For at bruge mirrorselect automatisk:)</comment>
# <i>mirrorselect -a -s4 -o &gt;&gt; /mnt/gentoo/etc/make.conf</i>
<comment>(For interaktivt af vælge et filspejl:)</comment>
# <i>mirrorselect -i -o &gt;&gt; /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Hvis <c>mirrorselect</c> fejler pga. en given fejl burde du være i
stand til at fortsætte med denne guide, da der ikke bliver lavet nogen
ændringer. En af grundene til hvorfor <c>mirrorselect</c> kan fejle er
simpelthen fordi den ikke er der. <c>mirrorselect</c> er ikke
tilgængeligt på alle installationsmedier.
</p>

</body>
</section>
<section>
<title>At komme ind i chroot'en</title>
<body>

<p>
Nu vil vi bruge <c>chroot</c> til at komme til den nye Gentoo Linux
installation og "komme ind" i vores nye Gentoo Linux system:
</p>

<note>
Du får måske en bemærkning under <c>env-update</c> om at
<path>/etc/make.profile/make.defaults</path> ikke er tilgængelig:
ignorer dette. Vi kører <c>emerge sync</c> senere i dette dokument og
dette vil løse problemet.
</note>

<pre caption="At gøre det chroot'ede miljø klar og at komme ind i det">
# <i>mount -t proc proc /mnt/gentoo/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
<comment>(Det ovenforstående peger din shell til de nye stier og
opdaterede binære filer)</comment>
</pre>

<p>
Efter du har eksekveret disse kommandoer, er du "inde i" dit nye Gentoo
Linux miljø i <path>/mnt/gentoo</path>. Vi kan lave resten af
installationsprocessen inde i chroot'en.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Brug af sync for at få nuværende Portage-træ</title>
<section>
<body>

<impo>
Hvis du laver en GRP installation, så kan du ignorere følgende sektion om
<c>emerge sync</c>.
</impo>

<p>
Nu har du brug for at køre <c>emerge sync</c>. Denne kommando fortæller Portage,
at den skal downloade det sidste nye Gentoo Linux Portage-træ fra Internettet. 
Hvis du har udpakket et Portage-træ snapshot fra <e>CD 1</e> tidligere,
kan du med sikkerhed springe dette trin over. Portage-træet indeholder alle de scripts
(kaldet ebuilds) som bruges til at bygge enhver pakke under Gentoo
Linux. På nuværende tidspunkt, har vi ebuild-scripts op til ca. 4000
pakker. Når <c>emerge sync</c> er færdig, vil du have et komplet Portage-træ i
<path>/usr/portage</path>:
</p>

<pre caption="Opdatér ved at bruge sync">
# <i>emerge sync</i>
</pre>

<p>
Hvis du bliver advaret om at en ny version af Portage er tilgængelig
og at du skal opdatere Portage, så kan du roligt se bort fra
dette. Portage bliver opdateret senere som en del af bootstrap processen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Opsætning af Gentoo til optimal udnyttelse (make.conf)</title>
<section>
<body>

<p>
Nu da du har en brugbar kopi af Portage-træet, er det tid til at opsætte
optimal udnyttelse og valgbare bygge-indstillinger til at benytte på dit
Gentoo Linux system. Portage vil bruge disse indstillinger når den kompilerer
programmer for dig. For at gøre dette, rediger filen <path>/etc/make.conf</path>.
I denne fil burde du ændre dine USE-flag, som specificerer valgbar
funktionalitet, du vil have bygget ind i pakkerne hvis muligt;
generelt er standarden (en <e>tom</e> eller usat USE-variabel) fin.
Flere informationer omkring USE flags kan blive fundet <uri
link="http://www.gentoo.org/doc/da/use-howto.xml">Use-flag brugervejledningen</uri>. En komplet liste over
nuværende mulige USE-flag kan blive fundet <uri
link="http://www.gentoo.org/dyn/use-index.xml">Beskrivelse af USE
variable (engelsk)</uri>.  
</p>

<p>
Hvis du starter fra en stage1-tarball, burde du også sætte de mulige 
CHOST-, CFLAGS- og CXXFLAGS-indstillinger for systemets skyld 
(kommenterede eksempler kan blive fundet længere nede i filen).
</p>

<warn>
Hvis du 
bruger en stage2- eller stage3-tarball, er dine indstillinger allerede opsat
optimalt. CHOST-indstillingen <e>må ikke</e> blive ændret da dette kan
føre til et smadret system.
</warn>

<warn>
<b>Avancerede brugere:</b> Hvis du planlægger at installere et
ACCEPT_KEYWORDS="~x86" Gentoo System, vælg da ikke at sætte
ACCEPT_KEYWORDS før at bootstrap-fasen (stage1) er færdig.
</warn>

<impo>
<b>Avancerede brugere:</b> CFLAGS- og CXXFLAGS-indstillinger bliver
brugt til at fortælle C og C++ kompilere, hvordan koderne skal
optimeres, der bliver genereret på dit system. Det er normalt for
brugere med Athlon XP-processorer at specificere "-march=athlon-xp"
indstillingen i deres CFLAGS- og CXXFLAGS-indstillinger, så alle
pakker, der bliver bygget, vil f.eks. blive optimeret til
instruktionssættet og ydelseskarakteren af deres
CPU. <path>/etc/make.conf</path> filen indeholder en generel guide for
at indstille rigtige indstillinger af CFLAGS og CXXFLAGS. 
</impo>

<!-- needs qa
<note>
<b>Advanced users:</b>If you are building from a stage1 and don't want
to manually configure CFLAGS and CXXFLAGS, you can use the <c>genflags</c>
utility, which will try to guess accurate flags for your CPU architecture.
Simply type <c>emerge -O genflags</c> and then execute
<c>info2flags</c>. <c>info2flags</c> will suggest CHOST, CFLAGS and
CXXFLAGS settings, which you can then add to
<path>/etc/make.conf</path>.
</note>
-->

<p>
Hvis nødvendigt, kan du også indsætte proxy-informationer her, hvis du er bag en 
firewall. Brug den følgende kommando for at redigere <path>/etc/make.conf</path> 
ved brug af <c>nano</c>, et simpelt visuelt redigeringsprogram.
</p>

<pre caption="Opsætning af make.conf indstillinger">
# <i>nano -w /etc/make.conf</i>
</pre>

<note>
<b>Avancerede brugere:</b> Folk, som virkeligt behøver at opsætte
deres bygge-proces, burde tage og kigge i
<path>/etc/make.globals</path> filen. Denne 
fil omfatter gentoo standard-indstillinger og burde aldrig blive ændret. Hvis standarden
ikke slår til, kan nye værdier indsættes i <path>/etc/make.conf</path>, 
da posteringer i <path>make.conf</path> <e>overskriver</e> posteringer 
i <path>make.globals</path>.  Hvis du er interesseret i at ændre USE-indstillingerne,
 tag og kig i <path>/etc/make.profile/make.defaults</path>.
Hvis du ikke vil bruge nogen USE-indstillinger, som er fundet her, tilføj 
<c>USE="-foo"</c> i <path>/etc/make.conf</path> for at stoppe brugen af alle <c>foo</c> 
USE-indstillinger, som er aktiveret som standard i <path>/etc/make.globals</path> eller 
<path>/etc/make.profile/make.defaults</path>.
</note>

<warn>
Vær sikker op at du ikke tilføjer '<c>static</c>' til dine USE-variabler indtil efter 
stage1.
</warn>

</body>
</section>
</chapter>

<chapter>
<title>Start fra Stage1</title>
<section>
<body>

<note>
Hvis du ikke starter fra en stage1-tarball, så spring denne sektion over.
</note>

<p>
stage1-tarball'en er lavet for fuld opsætning og optimering af dit system. Hvis 
du har valgt denne tarball, vil du sikkert se frem til at have et 
super-optimeret og up-to-date system. Indstil dig på at lave noget sjovt imens! 
At installere fra stage1 tager en del tid, men resulterer i et system,
der har været optimeret fra bunden af til din specifikke maskine og
dit behov.
</p>

<p>
Nu er det tid til at starte "bootstrap" processen. Denne proces tager omkring 
to timer for en 1200MHz AMD Athlon computer. I denne tid vil GNU C-biblioteket,
 kompilerings-pakken og andre nøgle-systemprogrammer blive bygget. Start 
bootstrappen som følgende:
</p>

<pre caption="Bootstrap Processen">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>

<p>
"bootstrap" processen vil derefter starte.
</p>

<note>
<c>bootstrap.sh</c> understøtter nu <c>--fetchonly</c> indstillingen. Opkalds-brugere
vil finde det specielt brugbart. Det vil downloade alle bootstrap-relaterede
filer på én gang for at kompilere senere. Se <c>bootstrap.sh -h</c> for flere 
informationer.
</note>

<note>
Portage, bruger som standard <path>/var/tmp</path> imens den bygger pakker,
ofte ved at bruge flere hundrede megabytes til midlertidig oplagring. Hvis du gerne 
vil ændre hvor Portage gemmer disse midlertidige filer, så opsæt en ny 
PORTAGE_TMPDIR <e>før</e> du starter med bootstrap-processen, som følgende:
<pre caption="Ændring af Portages oplagringssti">
# <i>export PORTAGE_TMPDIR="/andetbib/tmp"</i>
</pre>
</note>

<p>
<c>bootstrap.sh</c> vil bygge <c>binutils</c>, <c>gcc</c>, <c>gettext</c>,
og <c>glibc</c>, samt ombygge <c>gettext</c> efter <c>glibc</c>. Det er nødvendigt at sige
at processen tager tid. Når processen er færdig er dit system 
lig med et "stage2" system, hvilket betyder at du kan gå til  
stage2-instruktionerne forneden.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Start fra Stage2 og fortsættelse af Stage1</title>
<section>
<body>

<note>
Denne sektion er for dem, der fortsætter fra en stage1-installation eller
starter ved stage2. Hvis det ikke er for dig (f.eks. at du bruger en stage3), så spring denne sektion over.
</note>

<warn>
Hvis du starter fra stage2, glem ikke at ændre CHOST variablen i
<path>/etc/make.conf</path>. Ved at glemme dette, sker der mærkelige fejl og
afbrydelser af dine kompileringer.
</warn>
		
<p>
stage2-tarball'en har allerede gjort bootstrapping for dig. Alt hvad du skal gøre 
er at installere resten af systemet:
</p>

<note>
Hvis du starter fra en forud-bygget stage2 og vil være sikker på at
din kompiler-værktøjskæde er up-to-date, tilføj et <c>-u</c>
indstilling til kommandoerne forneden. Hvis du ikke ved hvad det betyder, er
det sikkert at springe det råd over.
</note>

<pre caption="Installation af resten af systemet">
# <i>emerge -p system</i>
<comment>(viser de pakker, som skal installeres)</comment>
# <i>emerge system</i>
</pre>

<p>
Det kommer til at tage et stykke tid for at færdiggøre bygningen af hele det grundlæggende system.  
Din gevinst er at du får et gennemført optimeret system.  
Ulempen er at du skal finde noget andet at lave imens.  
Forfatteren tilbyder at spille "Star Wars - Super Bombad Racing" på PS2.
</p>

<p>
Bygningen er nu færdig. Nu kan du springe ned til "Opsætning af din tidszone" sektionen.
</p>

</body>
</section>
</chapter>


<chapter>
<title>Start fra Stage3</title>
<section>
<body>

<note>
Denne sektion er for dem der <b>starter</b> fra stage3 og ikke for dem der 
har startet på stage1 eller stage2, og skulle springe denne sektion over. GRP-brugere 
skulle også springe over til næste sektion.
</note>

<warn>
Husk, at hvis du starter fra stage3, så lav ikke om på CHOST-variablen i
<path>/etc/make.conf</path>. Dette kan medføre fejl i kompileringen.
</warn>

<p>
stage3-tarball'en skaffer dig et fuldt funktionelt grundlæggende Gentoo system,
så der ikke er brug for bygning.
</p>
	 
<note>
<b>Avancerede brugere:</b> Siden stage3-tarball'en er forudbygget er den 
måske ubetydelig forældet. Hvis det bekymrer dig, kan du opdatere din eksisterende
stage3 automatisk for at indeholde de meste up-to-date versioner af alle system-pakker 
ved at lave en backup af <path>/etc/make.conf</path>, og så indtaste <c>CONFIG_PROTECT="-*" emerge -u system</c> (dette kræver en netværksforbindelse) og genskabe backup'en bagefter igen. 
Notér, at det kan tage lang tid, hvis din stage3 er meget gammel;
ellers vil denne proces generelt være hurtig og tillade dig at gøre glæde af 
de mest sidst-nye Gentoo opdateringer og reparationer. I hvilken som helst hensigt, føl dig
fri til at springe disse trin over og fortsætte til den næste sektion, hvis du vil.
</note>
		
</body>
</section>
</chapter>


<chapter>
<title>Opsætning af din tidszone</title>
<section>
<body>

<p>
Nu skal du indstille din tidszone.
</p>

<p>
Se efter hvilken tidszone du har (eller GMT hvis du bruger Greenwich Mean Time)
i <path>/usr/share/zoneinfo</path>. Derefter, lav et symbolsk link til
<path>/etc/localtime</path> ved at indtaste:
</p>

<pre caption="Lav et symbolsk link til tidszone">
# <i>ln -sf /usr/share/zoneinfo/path/to/timezonefile /etc/localtime</i>
</pre>

<p>Danske brugere kan bruge <c>/usr/share/zoneinfo/Europe/Copenhagen</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Ændringer i /etc/fstab til din maskine</title>
<section>
<body>

<impo>
For at redigere filer, husk at bruge <c>nano -w "filename"</c>.
</impo>

<p>
Dit Gentoo Linux system er snart klar til brug. Alt hvad vi mangler er
at indstille et par vigtige system-filer og installere
bootloaderen. Den første fil som vi mangler at indstille, er
<path>/etc/fstab</path>.  Husk at du burde bruge <c>notail</c>
opsætningen til din boot-partition, hvis du ønsker at lave et
ReiserFS-filsystem på den. Husk at specificere de passende
<c>ext2</c>, <c>ext3</c> eller <c>reiserfs</c> filsystem-typer.
</p>

<p>
Brug noget lignende i din <path>/etc/fstab</path> som det der er vist
nedenfor, men vær selvfølgelig sikker på at ændre "BOOT", "ROOT" og
"SWAP" til de virkelige block-enheder du bruger (så som <c>hda1</c>
etc.) samt "ext2" og"ext3" med de virkelige filsystemer du bruger:
</p>

<pre caption="Redigering af fstab">
<comment># /etc/fstab: informationer om det statiske filsystem.
#
# noatime slukker for atimes for at få en bedre ydelse (atimes skal normalt
# ikke bruges; notail forbedrer ydelsen af ReiserFS (på bekostning af lagerets
# effektivitet). Det er sikkert at droppe noatime-indstillingerne hvis du vil og at 
# skifte imellem notail og tail, som det passer dig.

# &lt;fs&gt;           &lt;mount point&gt;   &lt;type&gt;   &lt;opts&gt;          &lt;dump/pass&gt;

# NOTE: Hvis din BOOT-partition er ReiserFS, tilføj notail indstillingen til opts.
</comment>
/dev/BOOT           /boot       ext2	 noauto,noatime	 1 2
/dev/ROOT           /           reiserfs noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro,user  0 0
proc                /proc       proc	 defaults        0 0
</pre>

<warn>
Læg venligst mærke til at <path>/boot</path> <e>ikke</e> er mountet ved start. Det 
er gjort for at beskytte data i <path>/boot</path> for fordærvelse. Hvis du behøver 
adgang til <path>/boot</path>, så mount den senere!
</warn>

</body>
</section>
</chapter>


<chapter>
<title>Installation af kernen og system-logning</title>
<section>
<title>Valg i kernen</title>
<body>
	
<p>
Der er to muligheder for at installere kernen. Du kan enten opsætte din 
egen kerne eller bruge <c>genkernel</c> værktøjet til at opsætte og kompilere 
din kerne automatisk.
</p>
	
<p>
Lige meget om du opsætter din kerne selv eller ved brug af
<c>genkernel</c> bliver du nød til at emerge de Linux
kerne-kildekoder, som du vil bruge. 
Gentoo tilbyder forskellige kerne ebuilds; en liste af disse kan findes
<uri link="/doc/en/gentoo-kernel.xml">her</uri>. Hvis du er usikker på
hvilke kerne-kildekoder du vil bruge, anbefalder vi at bruge <c>gentoo-sources</c>.
Hvis du vil have XFS support, skal du vælge <c>xfs-sources</c> eller 
<c>gs-sources</c>. Gentoos LiveCD bruger <c>gs-sources</c> og 
<c>xfs-sources</c>. Der er også <c>gaming-sources</c> kernen, som er optimeret 
til spil og virker meget godt, når "Preemptible kernel" indstillingen er sat til.
</p>

<p>
Vælg en kerne og emerge den som følgende:
</p>

<pre caption="Emerge Kerne-kildekoder">
# <i>emerge -k sys-kernel/gentoo-sources</i>
</pre>

<p>
Det symbolske link <path>/usr/src/linux</path> vil pege mod dit
ny-installerede kerne-kildetræ. Portage bruger det symbolske link 
<path>/usr/src/linux</path> til et specielt formål. Alle forskellige ebuilds 
du installerer, som indeholder kerne-moduler vil blive opsat til at arbejde 
med kerne-kildetræet som er udpeget af <path>/usr/src/linux</path>. 
<path>/usr/src/linux</path> er skabt, når du emerger din første kerne-kildepakke, 
men efter at den eksisterer, vil Portage ikke ændre dette symbolske link.
</p>

</body>
</section>
<section>
<title>Brug af genkernel til at kompilere din kerne</title>
<body>

<p>
Nu da dit kerne-kildetræ er installeret, er det tid til at kompilere din 
kerne. Der er to metoder til at gøre dette med. Den første er at bruge vores nye 
<c>genkernel</c> script til at bygge din kerne automatisk for dig. 
<c>genkernel</c> virker ved at opsætte en kerne næsten ligesom vores 
Live CD-kerne er opsat. Dette betyder at, når du bruger <c>genkernel</c> 
til at bygge din kerne, vil dit system generelt finde alt dit hardware når 
det starter, ligesom din Live CD gør. Fordi at genkernel ikke kræver nogen 
manuel kerne-opsætning, er den en ideal løsning for de brugere, som ikke er 
glad for at kompilere deres egen kerne.
</p>

<p>
Lad os se hvordan vi bruger genkernel. For det første, emerge genkernel ebuild:
</p>

<pre caption="Emerge genkernel">
# <i>emerge -k genkernel</i>
</pre>
		
<p>
Så kompilere dine kerne-kildekoder ved at køre <c>genkernel</c>:
</p>

<note>
<b>Avancerede bruger:</b> du kan taste <c>genkernel --config</c> i stedet for,
hvilket vil sørge for at genkernel vil tillade dig at lege med standard kerne-opsætningen før kompileringen sker.
</note>

<pre caption="Kørsel af genkernel">
<comment>Hvis du bruger genkernel 1.2 (medregnet i 1.4-20030803 x86/i686 GRP-sættet), brug følgende:</comment>
# <i>genkernel gentoo-sources</i>
<comment>Hvis du i stedet bruger genkernel 1.4 eller nyere, er det ikke nødvendig at specificere en kerne:</comment>
# <i>genkernel</i>
Gentoo Linux genkernel, version 1.4
Copyright 2003 Gentoo Technologies, Inc., Bob Johnson, Daniel Robbins
Distributed under the GNU General Public License version 2

Settings:
compile optimization: 1 processor(s)
source tree: /usr/src/linux-2.4.20-gaming-r3
config: gentoo (customized)
config loc: /etc/kernels/config-2.4.20-gaming-r3
initrd config: (default) /etc/kernels/settings

* Running "make oldconfig"...                                                                     [ ok ]
* Logging to /var/log/genkernel.log...                                                            [ ok ]
* Starting 2.4.20-gaming-r3 build...                                                              [ ok ]
* Running "make dep"...                                                                           [ ok ]
* Running "make bzImage"...                                                                       [ ok ]
* Running "make modules"...                                                                       [ ok ]
* Running "make modules_install"...                                                               [ ok ]
* Moving bzImage to /boot/kernel-2.4.20-gaming-r3...                                              [ ok ]
* Building busybox...                                                                             [ ok ]
* Creating initrd...                                                                              [ ok ]

* Build completed successfully!

* Please specify /boot/kernel-2.4.20-gaming-r3 and /boot/initrd-2.4.20-gaming-r3
* when customizing your boot loader configuration files.
</pre>

<p>
Når <c>genkernel</c> er færdig, er en kerne, et fuld sæt af moduler og en 
<e>initial root disk</e> (initrd) blevet fremskabt. Vi vil bruge kernen 
og initrd, når vi sætter en bootloader op senere i dette dokument. Skriv
navne på kernen og initrd, da du vil få brug for det, når du skrive
bootloaderens opsætningsfil. initrd vil blive startet med det samme
efter at opstarten har gennemført den automatiske hardware-finding
(ligesom på Live CDen) før dit "rigtige" system starter op.
</p>

<p>
Lad os nu gennemføre et trin mere for at få vores system til at blive mere som Live 
CDen -- lad os emerge <c>hotplug</c>. Imens initrd finder hardware automatisk, som 
er nødvendigt for at starte dit system, vil <c>hotplug</c> finde alt andet automatisk.
For at emerge og opsætte <c>hotplug</c>, tast følgende:
</p>

<pre caption="Emerge og sætte hotplug til">
# <i>emerge -k hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

<p>
Nu da du har kørt og opsat dit system til at bruge <c>genkernel</c>, kan 
du springe "Manuelt kerne-opsætning" sektionen over.
</p>

</body>
</section>
<section>
<title>Manuelt kerne-opsætning</title>
<body>

<p>
Hvis du har valgt ikke at bruge genkernel til at kompilere din kerne, vil denne sektion
guide dig igennem processen for at opsætte og kompilere en kerne selv.	
Vær opmærksom på at <path>/usr/src/linux</path> er et symlink til din
nuværende emerged kerne-kildepakke og at den er sat automatisk af Portage, efter
emerge. Hvis du har flere samtidige kerne-kildepakker, er det nødvendigt at sætte
<path>/usr/src/linux</path> symlinken til den korrekte, før man fortsætter.
</p>

<warn>
Hvis du opsætter din egen kernel, være forsigtig med <i>grsecurity</i> 
valget. Aggressiv opsætning af dine sikkerhedsindstillinger kan få 
nogle programmer (f.eks. XFree) til ikke at køre ordenligt. Hvis du er i tvivl, lad vær med at vælge det.
</warn>

<note>
Hvis du vil bruge den samme opsætning som i Live CD-kernen eller at basere
din opsætning på det, burde du udføre <c>cd /usr/src/linux &amp;&amp; cat /proc/config > .config &amp;&amp; make oldconfig</c>. 
Hvis du ikke bruger <c>xfs-sources</c>, vil den stille dig nogle spørgsmål 
omkring forskellighederne mellem dit kerne-valg og <c>xfs-sources</c>.
</note>

<pre caption="Opsætning af Linux Kernen">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<warn>
For at få din kerne til at virke ordenligt, er der flere indstillinger som du skal
være sikker på er i kernen -- og vi mener at de skal <e>være indbygget og ikke 
 være kompileret som moduler</e>. Vær sikker på at inkludere &quot;ReiserFS&quot; hvis du 
har ReiserFS-partitioner; det samme gælder for &quot;Ext3&quot;.  Hvis du bruger 
XFS, sæt &quot;SGI XFS filesystem support&quot; valget til.  Det er altid 
en god idé at lade ext2 være sat til ligemeget om du bruger det eller ej.
</warn>

<p>
Nedenfor er der nogle normale indstillinger som du vil få brug for:
</p>

<pre caption="make menuconfig valg">
Code maturity level options ---&gt;
[*] Prompt for development and/or incomplete code/drivers&quot;
<comment>(Du vil få brug for den for at vise valg nedenfor)</comment>
...

File systems ---&gt;
&lt;*&gt; Reiserfs support
<comment>(Kun ved brug af reiserfs)</comment>
... 
&lt;*&gt; Ext3 journalling file system support
<comment>(Kun ved brug af ext3)</comment>
...
[*] Virtual memory file system support (former shm fs)
<comment>(Krævet af Gentoo Linux)</comment>
...
&lt;*&gt; JFS filesystem support
<comment>(Kun ved brug af JFS)</comment>
...
[*] /proc file system support
<comment>(Krævet af Gentoo Linux)</comment>
[*] /dev file system support (EXPERIMENTAL)
[*]   Automatically mount at boot          
<comment>(Krævet af Gentoo Linux)</comment>
[ ] /dev/pts file system for Unix98 PTYs
<comment>(Fravælg denne, det er ikke en nødvendighed, medmindre du bruger en 2.6 kerne)</comment>
...
&lt;*&gt; Second extended fs support
<comment>(Kun ved brug af ext2)</comment>
...
&lt;*&gt; XFS filesystem support
<comment>(Kun ved brug af XFS)</comment>
</pre>

<p>
Hvis du bruger PPPoE til at forbinde til Internettet, vil du få brug for følgende
valg i kernen (indbygget eller bedre som moduler): &quot;PPP 
(point-to-point protokollen) support&quot;, &quot;PPP support for async serial 
ports&quot;, &quot;PPP support for sync tty ports&quot;. De to kompressionsvalg 
vil ikke ødelægge noget, men du har ikke brug for dem, heller ikke &quot;PPP 
over Ethernet&quot; valget, som muligvis kun bliver brugt af <c>rp-pppoe</c> når 
den er opsat til lave kernel-mode PPPoE.
</p>

<p>
Hvis du har en IDE-cdbrænder, vil du få brug for at sætte
SCSI-emulation til i kernelen. Vælg &quot;ATA/IDE/MFM/RLL support&quot; ---&gt; &quot;IDE, ATA 
and ATAPI Block devices&quot; ---&gt; &quot;SCSI emulation support&quot; 
(laves normalt som et modul), og under &quot;SCSI support&quot; vælg 
&quot;SCSI support&quot;, &quot;SCSI CD-ROM support&quot; og &quot;SCSI 
generic support&quot; (igen, laves de normalt som moduler).  Hvis du
også vil bruge moduler, så tast <c>echo -e &quot;ide-scsi\nsg\nsr_mod&quot;
&gt;&gt; /etc/modules.autoload.d/kernel-2.4</c> for at få dem til at starte 
automatisk når du starter. 
</p>

<p>
Hvis du har brug for det, så husk at indbygge netkortssupport i kernen.
</p>

<note>
For dem der ønsker det, er der mulighed for at installere Gentoo Linux med en 2.2 
kerne.	Men når du gør dette, betaler du en pris: du vil miste mange af de interessante 
egenskaber som er nye i 2.4 kerne-serien (som XFS og tmpfs filsystemer, iptables
og mere), selvom 2.2 kerne-kildekoderne kan blive "lappet" med ReiserFS og devfs support.  
Gentoo linuxs bootscripter kræver enten tmpfs eller ramdisk support i kernelen, 
så 2.2 kerne-brugere skal være sikker på at ramdisk support er kompileret ind
(ikke som et modul). Det er <comment>vitalt</comment> at 
<e>gentoo=notmpfs</e> flaget skal tilføjes til kerne-linien i 
<path>/boot/grub/grub.conf</path> eller til den lignende linie i 
<path>/etc/lilo.conf</path> for 2.2 kernen, så at ramdisk er mounted 
til bootscripterne i stedet for tmpfs. Hvis du ikke vælger at bruge devfs, så skal du
bruge <e>gentoo=notmpfs,nodevfs</e> i stedet for.
</note>

<pre caption = "Kompilering og installation af kernen">
# <i>make dep &amp;&amp; make clean bzImage modules modules_install</i>
# <i>cp /usr/src/linux/arch/i386/boot/bzImage /boot</i>
</pre>

</body>
</section>
<section>
<title>Installation af flere hardware-specifikke ebuilds</title>
<body>

<p>
Endeligt skal du emerge ebuilds for alt andet hardware der er i dit system.
Her er en liste over kernel-relaterede ebuilds, som du burde emerge:
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
 <th>Ebuild</th>
 <th>Hensigt</th>
 <th>Kommando</th>
</tr>
<tr>
 <ti>nvidia-kernel</ti>
 <ti>Accelereret NVIDIA-grafik til XFree86</ti>
 <ti><c>emerge -k nvidia-kernel</c></ti>
</tr>
<tr>
 <ti>nforce-net</ti>
 <ti>Indbygget netværks-controller på NVIDIA NForce(2) bundkort</ti>
 <ti><c>emerge nforce-net</c></ti>
</tr>
<tr>
 <ti>nforce-audio</ti>
 <ti>Indbygget lyd på NVIDIA NForce(2) bundkort</ti>
 <ti><c>emerge nforce-audio</c></ti>
</tr>
<tr>
 <ti>e100</ti>
 <ti>Intel e100 Fast Ethernet Adapters</ti>
 <ti><c>emerge e100</c></ti>
</tr>
<tr>
 <ti>e1000</ti>
 <ti>Intel e1000 Gigabit Ethernet Adapters</ti>
 <ti><c>emerge e1000</c></ti>
</tr>
<tr>
 <ti>emu10k1</ti>
 <ti>Creative Sound Blaster Live!/Audigy support</ti>
 <ti><c>emerge emu10k1</c></ti>
</tr>
<tr>
 <ti>ati-drivers</ti>
 <ti>Accelereret ATI Radeon 8500+/FireGL grafik til XFree86</ti>
 <ti><c>emerge ati-drivers</c></ti>
</tr>
<tr>
 <ti>xfree-drm</ti>
 <ti>Accelereret grafik til ATI Radeon op til 9200, Rage128, Matrox, Voodoo og andre grafikkorte til XFree86</ti>
 <ti><c>VIDEO_CARDS="ditkort" emerge xfree-drm</c></ti>
</tr>
</table>

<p>
<c>nvidia-kernel</c>, <c>ati-drivers</c> og <c>xfree-drm</c> pakkerne 
vil kræve tilføjende opsætning for at blive aktiveret. Alle andre
ebuilds, som er vist foroven, skulle blive automatisk fundet ved
opstart via <c>hotplug</c> pakken. Hvis 
du ikke bruger hotplug, så vær sikker på at tilføje de brugte moduler til
<path>/etc/modules.autoload.d/kernel-2.4</path>.
</p>

<p>
Mere information om <c>xfree-drm</c> kan blive fundet i vores <uri
link="/doc/en/dri-howto.xml">Direct Rendering Guide</uri>.
</p>


</body>
</section>
<section>
<title>Installation af system-logning</title>
<body>

<p>
Din nye skræddersyede kernel (og moduler) er nu installeret.  Nu mangler du at vælge
hvilken system-logning, som du ønsker at installere. Vi tilbyder sysklogd, som er
det traditionelle sæt af system-logningsdaemons. Vi har også msyslog, 
syslog-ng og metalog. Hvis du er i tvivl, kan du prøve syslog-ng,
siden den er meget fleksibel og rig på egenskaber. For at emerge dit
logningsprogram, som du vælger, tast <e>én</e> af de næste fire
kommando-sæt: 
</p>

<pre caption="Emerge din valgte system-logning">
# <i>emerge -k app-admin/sysklogd</i>
# <i>rc-update add sysklogd default</i>
<comment>eller</comment>
# <i>emerge -k app-admin/syslog-ng</i>
# <i>rc-update add syslog-ng default</i>
<comment>eller</comment>
# <i>emerge -k app-admin/metalog</i>
# <i>rc-update add metalog default</i>
<comment>eller</comment>
# <i>emerge -k app-admin/msyslog</i>
# <i>rc-update add msyslog default</i>
</pre>

<impo>
Hvis du vælger <c>metalogd</c>, vær venlig at læse <uri link="faq.xml#doc_chap6_sect3">denne FAQ</uri> omkring metalogds buffering.
</impo>

<p>
Nu kan du også vælge den cron-pakke, som du vil gerne vil bruge.
Lige nu tilbyder vi dcron, fcron og vcron. Hvis du ikke ved hvilken du vil
bruge, kan du lige så godt bruge vcron.
</p>

<pre caption="Valg af CRON daemons">
# <i>emerge -k sys-apps/dcron</i>
# <i>rc-update add dcron default</i>
# <i>crontab /etc/crontab</i>
<comment>eller</comment>
# <i>emerge -k sys-apps/fcron</i>
# <i>rc-update add fcron default</i>
# <i>crontab /etc/crontab</i>
<comment>eller</comment>
# <i>emerge -k sys-apps/vcron</i>
# <i>rc-update add vcron default</i>
<comment>Du behøver ikke at køre <i>crontab /etc/crontab</i> for at bruge vcron.</comment>
</pre>

<p>
For mere information omkring start-programmer og daemons (baggrundsprocesser) ved opstart, se
<uri link="/doc/da/rc-scripts.xml">rc-script guiden</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installation af forskellige nødvendige pakker</title>
<section>
<body>

<p>
Hvis du skal bruge rp-pppoe for at forbinde til nettet, vær opmærksom
på at det ikke er installeret fra dette punkt, men det vil være en
god idé at gøre det: 
</p>

<pre caption="Installation af rp-pppoe">
# <i>USE="-X" emerge rp-pppoe</i>
<comment>(GRP-brugere bør taste følgende:)</comment>
# <i>emerge -K rp-pppoe</i>
</pre>

<note>
<i>USE="-X"</i> forebygger pppoe fra at installere dens valgfrie
X-grænseflade, hvilken er en god ting, da X og dens afhængige filer
vil blive installeret oveni. Du kan altid geninstallere
<i>rp-pppoe</i> med X-support senere. GRP-versionen af rp-pppoe har
den valgbare X-grænseflade aktiveret. Hvis du ikke bruger GRP,
kompilér fra kildekoderne som i det første eksempel. 
</note>
<!-- this pkg is a candidate for moving from .tbz2 to distfiles/ (source) -->

<note>
Læg mærke til at rp-pppoe er installeret, men ikke blevet
indstillet. Du bliver nød til at gøre det igen ved at bruge
<c>adsl-setup</c> når du starter dit Gentoo system for første gang. 
</note>

<p>
Du bliver måske nødt til at installere nogle ekstra-pakker i
Portage-træet, hvis du bruger nogle valgfrie egenskaber, som XFS,
ReiserFS eller LVM.  Hvis du bruger XFS skulle du emerge
<c>xfsprogs</c> pakken:  
</p>

<pre caption="Emerge filsystemsværktøjer">
# <i>emerge -k xfsprogs</i>
<comment>Hvis du vil bruge ReiserFS skal du emerge ReiserFS-værktøjer: </comment>
# <i>emerge -k reiserfsprogs</i>
<comment>Hvis du vil bruge JFS skal du emerge JFS-værktøjer: </comment>
# <i>emerge -k jfsutils</i>
<comment>Hvis du bruger LVN skal du emerge <c>lvm-user</c> pakken: </comment>
# <i>emerge -k lvm-user</i>
</pre>

<p>
Hvis du er en bærbar-bruger og ønsker at bruge dine PCMCIA-slots på
din første rigtige genstart, bør du installere <i>pcmcia-cs</i>
pakken. 
</p>

<pre caption="Emerge PCMCIA-cs">
# <i>emerge -k sys-apps/pcmcia-cs</i>
</pre>

<!-- fix the bug or fix the docs, don't send the user in circles
(drobbins)
		<warn>You will have to re-emerge <i>pcmcia-cs</i> after installation to get PCMCIA
			to work.
			</warn>
	-->

</body>
</section>
</chapter>

<chapter>
<title>Brugerhåndtering</title>
<section>
<title>Opsætning af et root kodeord</title>
<body>

<p>
Før du glemmer det, sæt root kodeordet ved at taste:
</p>

<pre caption="Opsætning af root kodeord">
# <i>passwd</i>
</pre>

</body>
</section>
<section>
<title>Tilføjelse af bruger til daglig brug</title>
<body>

<p>
At arbejde som root på et Unix/Linux system er <e>farligt</e> og 
burde undgås så vidt som muligt. Derfor er det <e>stærkt</e>
anbefalet at tilføje en bruger til daglig brug:
</p>

<pre caption = "Tilføjelse af en bruger">
# <i>useradd din_bruger -m -G users,wheel,audio -s /bin/bash</i>
# <i>passwd din_bruger</i>
</pre>

<p>
Erstat <c>din_bruger</c> med dit brugernavn.
</p>

<p>
Lige meget hvornår du mangler at lave en opgave, som kun root kan klare,
brug <c>su -</c> til at ændre dine privilegier til root-privilegier, eller tag et kig på <c>sudo</c> pakken.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Opsætning af værtsnavn</title>
<section>
<body>

<p>
Rediger <path>/etc/hostname</path> så den indeholder dit værtsnavn 
på en enkelt linie, f.eks. <c>minmaskine</c>. 
</p>

<pre caption="Opsætning af værtsnavn">
# <i>echo minmaskine &gt; /etc/hostname</i>
</pre>

<p>
Så rediger <path>/etc/dnsdomainname</path> så den indeholder dit DNS 
domænenavn, f.eks. <c>mitdomaene.dk</c>.
</p>

<pre caption="Opsætninng af domænenavn">
# <i>echo mitdomaene.dk &gt; /etc/dnsdomainname</i>
</pre>

<p>
Hvis du har et NIS-domæne skulle du sætte det i 
<path>/etc/nisdomainname</path>.
</p>

<pre caption="Opsætning af NIS-domænenavn">
# <i>echo nis.mitdomaene.dk &gt; /etc/nisdomainname</i>
</pre>

</body>
</section>
</chapter>


<chapter>
<title>Ændringer i /etc/hosts</title>
<section>
<body>

<p>
Denne fil indeholder en liste over IP-adresser og deres tilknyttede værtsnavn.
Det er brugt af systemet til at bestemme de IP-adresser af vilkårlige værtsnavne, som ikke er i dine nameservere.  Her er en skabelon for denne fil:
</p>

<pre caption="Hosts skabelon">
127.0.0.1      localhost
<comment># den næste linie indeholder din IP til dit lokale LAN og dit tilknyttet maskine-navn</comment>
192.168.1.1    minmaskine.mitdomaene.com	mymachine
</pre>

<note>
Hvis du er på et DHCP-netværk vil det være hjælpsomt at tilføje din
maskines rigtige værtsnavn efter <i>localhost</i>. Dette vil hjælpe 
GNOME og mange andre programmer med navne-bestemmelser.
</note>

</body>
</section>
</chapter>


<chapter>
<title>Afsluttende netværksopsætning</title>
<section>
<title>Start af kerne-moduler</title>
<body>

<p>
Tilføj navne på de moduler, som er nødvendige for at dit system fungerer,
til <path>/etc/modules.autoload.d/kernel-2.4</path> filen (du kan også 
tilføje andre valg du skulle mangle på samme linie). Når Gentoo Linux starter, vil disse moduler blive startet automatisk. Et virkeligt vigtigt modul, er netkorts-modulet, hvis du har kompileret den som modul:
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.4">
<comment>Dette forudsætter at du bruger et 3com-netkort. 
Se efter i /lib/modules/&lt;kernel version&gt;/kernel/drivers/net for at finde dit kort. </comment>
3c59x
</pre>

</body>
</section>
<section>
<title>Opsætning af Netværksgrænseflader</title>
<body>

<p>
Rediger <path>/etc/conf.d/net</path> scriptet for at få dit netværk sat op 
til den første opstart.
</p>

<pre caption="Netværkopsætning til opstart">
# <i>nano -w /etc/conf.d/net</i>
</pre>

<p>
Hvis du vil have eth0 til at modtage dens IP, sæt <c>iface_eth0</c>
til <e>dhcp</e>. Ellers udfyld din IP, broadcast-adresse og 
netmask. Hvis du har flere grænseflader, gør det samme for <c>iface_eth1</c>,
<c>iface_eth2</c> osv.
</p>

<p>
Tilføj nu <c>net.eth0</c> init-scriptet til standard-runlevel <e>hvis</e>
der ikke er et PCMCIA-netværkskort:
</p>

<pre caption="Automatisk start af netværksgrænseflader i opstartsfasen">
# <i>rc-update add net.eth0 default</i>
</pre>

<p>
Hvis du har flere netkort installeret samtidig eller tokenring-grænseflader, skal du lave ekstra <path>net.eth<comment>x</comment></path> eller 
<path>net.tr<comment>x</comment></path> scripter, som er med respekt til hinanden (<comment>x</comment> = 1, 2, ...):
</p>

<pre caption="Flere netværkskortsgrænseflader">
# <i>cd /etc/init.d</i>
# <i>ln -s net.eth0 net.eth<comment>x</comment></i>
</pre>

<p>
For hver opsat init-script, tilføj det til standard-runlevel (igen 
kun hvis det ikke er et PCMCIA-netværkskort):
</p>

<pre caption = "Tilføjelse af net.ethx til standard-runlevel">
# <i>rc-update add net.eth<comment>x</comment> default</i>
</pre>

</body>
</section>
<section>
<title>Kun for PCMCIA-brugere</title>
<body>

<p>
Hvis du hare et PCMCIA-kort installeret, tag et hurtigt kig ind i 
<path>/etc/conf.d/pcmcia</path> for at verificere at tingene ser OK ud for 
din opsætning, og kør derefter følgende kommando:
</p>

<pre caption = "Få PCMCIA-services til at starte automatisk">
# <i>rc-update add pcmcia boot</i>
</pre>

<p>
Dette sørger for at PCMCIA-driverne er automatisk startet når dit netværk er startet. De tilhørige <path>/etc/init.d/net.eth*</path> services
vil blive startet af pcmcia-servicen automatisk.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Afsluttende trin: Opsætning af grundlæggende indstillinger (medregnet internationale tastatur-indstillinger)</title>
<section>
<body>

<pre caption="Grundlæggende indstilling">
# <i>nano -w /etc/rc.conf</i>
</pre>

<p>
Følg filens anvisninger for at opsætte de grundlæggende indstillinger. Alle brugere bør vær sikker på at CLOCK er indstillet til hans/hendes smag. Internationale tastatur-brugere bør sætte deres KEYMAP variabel (skim 
<path>/usr/share/keymaps</path> for at se forskellige muligheder).</p>

<p>
Danske brugere kan bruge CLOCK="<c>local</c>" og KEYMAP="<c>dk</c>" eller "<c>dk-latin1</c>".
</p>

</body>
</section>
</chapter>

<chapter>
<title>Opsætning af Bootloader</title>
<section>
<title>Noter</title>
<body>

<p>
I Gentoos ånd har brugere nu flere bootloadere at vælge imellem istedet for én.
Når vi bruger vores virtuelle pakke system kan brugere nu vælge imellem 
både GRUB og LILO som deres bootloadere. 
</p>

<p>
Vær opmærksom på at du ikke behøver at installere begge bootloadere.
Det kan faktisk være en ulempe, så vælg venligst én.
</p>

<p>
Du bliver også nødt til at opsætte en bootloader anderledes, afhængig af 
om du bruger <c>genkernel</c> (med kernelen og initrd) eller en 
kernel som du selv har kompileret. Vær sikker på at huske vigtige 
forskelligheder.
</p>

</body>
</section>
<section>
<title>Opsætning af GRUB</title>
<body>

<p>
Det mest kritiske ved at forstå GRUB er at blive god til at forstå, hvordan 
GRUB angiver harddiske og partitioner. Din Linux partition 
<path>/dev/hda1</path> er kaldet <path>(hd0,0)</path> under GRUB.  Læg mærke til
parenteserne omkring hd0,0 - de er et krav. Harddiske tæller fra nul
i stedet for et "a" og partitioner starter ved nul i stedet for ét. Vær også opmærksom 
på at angående hd-enheder er kun harddiske omtalt, ikke atapi-ide enheder 
som cdrom-drev, brændere og at den samme konstruktion kan bruges med 
scsi-drev. (Normalt får de højere numre end ide-enheder, undtagen når 
bios'en er sat op til at boote fra scsi-enheder). Hvis du har en harddisk 
på <path>/dev/hda</path>, et cdrom-drev på <path>/dev/hdb</path>, en brænder på
<path>/dev/hdc</path>, en anden harddisk på <path>/dev/hdd</path> og ingen 
SCSI-harddiske, bliver <path>/dev/hdd7</path> oversat til 
<path>(hd1,6)</path>. Det lyder måske problemfyldt, og det er det også, men som 
du kommer til at se senere, leverer GRUB en tabulator-brugsmekanisme som er handy for 
dem der har mange harddiske og partitioner og føler sig en smule faret vild 
i GRUBs nummerskema. Hvis du har den følelse, er det tid til 
at installere GRUB.
</p>

<p>
Den nemmeste metode for at installere GRUB er ved at taste <c>grub</c> i din chrooted 
shell prompt:
</p>

<pre caption="Installation af GRUB">
# <i>emerge -k grub</i>
# <i>grub</i>
</pre>

<p>
Du vil blive præsenteret med en <e>grub&gt;</e> grub kommando-linie prompt.
Nu bliver du nødt til at taste de rigtige kommandoer for at installere
GRUB-bootrecord til din harddisk. I dette opsætnings-eksempel, vil du
installere GRUB boot record på din harddisks MBR (master boot record),
så det første du ser når du tænder for din computer er
GRUB-prompten. I dette eksempel er kommandoerne du skal taste således: 
</p>

<pre caption="GRUB på MBR">
grub&gt; <i>root (hd0,0)</i> <comment>(Din boot-partition)</comment>
grub&gt; <i>setup (hd0)</i> <comment>(Hvor boot record er installeret; her er det MBR)</comment>
</pre>
	
<pre caption="GRUB ikke på MBR">
<comment>Alternativt kan du installere en bootloader andre steder end MBR:</comment>
grub&gt; <i>root (hd0,0)</i> <comment>(Din boot-partition)</comment>
grub&gt; <i>setup (hd0,4)</i> <comment>(Hvor boot record er installeret; her er det /dev/hda5)</comment>
grub&gt; <i>quit</i>
</pre>

<p>
De to kommandoer virker på denne måde:  Den første <c>root ( )</c> kommando fortæller 
GRUB, hvor din boot-partionen er placeret (i eksemplet <path>/dev/hda1</path> eller <path>(hd0,0)</path> i GRUB terminologi. Den 
anden <c>setup ( )</c> kommando fortæller GRUB, hvor bootrecorden skal
installeres - den vil blive sat op til at kigge på dens specielle
filer ved <c>root ( )</c> placeringen, som du har specificeret. I
dette tilfælde, ville du have boot recorden på MBR på harddisken, så
der blev specificeret <path>/dev/hda</path> (også kendt som
<path>(hd0)</path>). Hvis du ville bruge en anden boot-loader og ville
sætte GRUB op som en sekundær boot-loader, kan du installere GRUB til
bootrecorden på en bestemt partition. I det tilfælde, kan du
specificere en bestemt partition i stedet for hele disken. Efter at
GRUB boot record er blevet installeret med succes, kan du taste
<c>quit</c> for at afslutte GRUB.
</p>

<note>
Tabulator-brugsmekanismen til GRUB kan blive brugt inde i GRUB-programmet.
Når du skriver <c> root (</c> og trykker TAB-tasten, vil du blive mødt
af en liste af de mulige enheder (ikke kun harddiske). Ved at bruge TAB første gang skrives <c> root (hd</c> og GRUB vil vise de mulige harddiske og brug af TAB efter at der står skrevet <c> root (hd0,</c>
ville få GRUB til at vise en liste over partioner på den første harddisk.
Ved at checke syntaksen af GRUB placeringen efter afslutning burde hjælpe med at tage det rigtige valg.
</note>
			
<p>
Gentoo Linux er nu installeret, men vi mangler stadig at lave 
<path>/boot/grub/grub.conf</path> filen, så vi kan få en flot GRUB-bootmenu
når systemet genstarter. Her er hvordan det gøres:
</p>

<impo>
For at sikre tidligere understøttelse af GRUB, husk at lave et link fra
<path>grub.conf</path> til <path>menu.lst</path>. Du kan gøre dette ved at taste <c>ln -s /boot/grub/grub.conf /boot/grub/menu.lst</c>.
</impo>

<p>
Lav nu <path>grub.conf</path> filen (<c>nano -w 
/boot/grub/grub.conf</c>) og tilføj følgende:
</p>

<pre caption="grub.conf til GRUB">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

<comment># Hvis du har kompileret din egen kernel, brug noget lignende dette:</comment>
title=Mit Eksempel Gentoo Linux
root (hd0,0) 
kernel (hd0,0)/boot/bzImage root=/dev/hda3 

<comment># Hvis du bruger genkernel, brug noget lignende dette:</comment>
title=Mit Eksempel Gentoo Linux (genkernel)
root (hd0,0)
kernel (hd0,0)/boot/kernel-KV root=/dev/hda3
initrd (hd0,0)/boot/initrd-KV

<comment># Nedenfor bruges kun til folk med dual-boot</comment>
title=Windows XP
root (hd0,5) 
chainloader (hd0,5)+1
</pre>

<p>
Erstat <c>KV</c> med den kernel version du har installeret.
</p>

<note>
(hd0,0) skal være skrevet uden nogen mellemrum imellem parenteserne.
</note>

<impo>
Hvis du har opsat "SCSI emulation" for en IDE-cd-brænder tidligere, skal du,
for at få det til at virke, tilføje en <c>hdx=ide-scsi</c> fragment til kernel-linjen i <path>grub.conf</path> (hvor "hdx" skal være enheden for din
cd-brænder).
</impo>

<p>
Efter at du har gemt filen er Gentoo Linux installationen færdig.  Ved
at vælge det første valg beder du GRUB at boote Gentoo Linux uden tilføjelser. Den anden part af <path>grub.conf</path> filen er valgbar og viser dig hvordan man bruger GRUB til at boote en Windows partition, som kan bootes fra i forvejen.
</p>

<note>
Ovenover burde <path>(hd0,0)</path> vise din "boot" partition
(<path>/dev/hda1</path> i dette opsætningseksempel) og
<path>/dev/hda3</path> burde vise dit root filsystem
<path>(hd0,5)</path>, som indeholder NT boot-loaderen. 
</note>

<note>
Stien til kernel-image er relativ til boot-partitionen. Hvis du f.eks. 
havde separeret boot-partition <path>(hd0,0)</path> fra root-partitionen
<path>(hd0,1)</path> ville alle stier i <path>grub.conf</path> filen 
vil blive forvandlet til <path>/bzImage</path>.
</note>

<p>
Hvis du vil tilføje andre valg til kernen, tilføj dem i slutningen 
af <c>kernel</c> kommandoen.  Vi har allerede tilføjet et valg 
(<c>root=/dev/hda3</c>), men du kan selv tilføje flere. Specifikt kan du 
lade være med at bruge devfs som standard (ikke en god idé med mindre du ved 
hvad du gør) ved at tilføje <c>gentoo=nodevfs</c> valget til <c>kernel</c> 
kommandoen.
</p>

<note>
I modsætning til tidligere versioner af Gentoo Linux, behøver du ikke længere tilføje 
<c>devfs=mount</c> ved slutningen af <c>kernel</c> linien for at tillade devfs.
devfs er nu tilladt som standard.
</note>

</body>
</section>
<section>
<title>Opsætning af LILO</title>
<body>

<p>
Imens GRUB er et nyt alternativ til de fleste, er den ikke altid den bedste
løsning. LILO, LInuxLOader, er den prøvede og virkelige arbejdshest af Linux bootloadere. Her er hvordan du installerer LILO hvis du vil bruge den i stedet for GRUB.
</p>

<p>
Det første trin er at emerge LILO: 
</p>

<pre caption="Emerge LILO">
# <i>emerge -k lilo</i>
</pre>

<p>
Det er nu tid til at opsætte LILO. Her er en mulig opsætningsfil 
<path>/etc/lilo.conf</path>:
</p>

<pre caption="lilo.conf eksempel">
boot=/dev/hda
map=/boot/map
install=/boot/boot.b
prompt
timeout=50
lba32
default=linux

<comment># Brug noget lignende de næste 4 linier, hvis du har kompileret din kernel selv</comment>
image=/boot/bzImage
	label=linux
	read-only
	root=/dev/hda3

<comment># Hvis du brugte genkernel, brug noget lignende dette:</comment>
image=/boot/kernel-KV
	label=gk_linux
	root=/dev/hda3
	initrd=/boot/initrd-KV
	append="root=/dev/hda3 init=/linuxrc"

	
<comment># For dual boot windows/andet styresystem</comment>
other=/dev/hda1
	label=dos
</pre>

<p>
Erstat <c>KV</c> med den kerne-version du har installeret og
vær sikker på at <c>default=</c> peger til din etikette (<c>gk_linux</c> hvis
du brugte genkernel).
</p>

<ul>
<li>
<c>boot=/dev/hda</c> fortæller LILO at installere sig selv på den
første harddisk på den første IDE-controller.
</li>
<li>
<c>map=/boot/map</c> angiver map-filen. Ved normalt brug burde det
ikke blive ændret.
</li>
<li>
<c>install=/boot/boot.b</c> fortæller LILO at installere den
specifikke fil som en ny boot-sektor. Ved normalt brug burde det ikke
blive ændret. Hvis install-linien mangler, tror LILO at den er
placeret ved <path>/boot/boot.b</path> og denne fil vil blive brugt.
</li>
<li>
Eksistensen af <c>prompt</c> fortæller LILO at vise den klassiske
<e>lilo:</e> prompt ved opstart. Imens det ikke er anbefalet at du
sletter prompt-linien, hvis du sletter den alligevel, kan du stadig få
en prompt ved at holde [Shift]-knappen nede imens din computer
starter.
</li>
<li>
<c>timeout=50</c> sætter længden af tiden som LILO vil vente for
bruger-input før den starter standard-valget. Dette er målt i
tiende-dele af et sekund, med 50 som standard. 
</li>
<li>
<c>lba32</c> beskriver harddisk-geometrien til LILO. En anden typisk
indført variabel her er linear. Du burde ikke ændre denne linie, med
mindre du ved med stor sikkerhed hvad du gør. Ellers kunne du bringe
dit system i en ikke-startbar situation.
</li>
<li>
<c>default=linux</c> refererer til det standard-valg af styresystem
som LILO vil starte udfra valgene vist nedenfor denne linie. Navnet
linux refererer til en etikette nedenunder i hver af boot-valgene. 
</li>
<li>
<c>image=/boot/bzImage</c> specificerer linux-kernen til at starte
med dette specifikke boot-valg. 
</li>
<li>
<c>label=linux</c> navngiver styresystemets valg i LILO-skærmen. I
dette tilfælde referer den til standard linien. 
</li>
<li>
<c>read-only</c> specificer at root-partitionen (se root-linien
nedenunder) er kun læsbart og kan ikke blive ændret under
start-processen. 
</li>
<li>
<c>root=/dev/hda3</c> fortæller LILO hvilken disk-partition man skal
bruge som root-partition.
</li>
</ul>

<p>
Efter at du har redigeret din <path>lilo.conf</path> fil, er der tid til at køre LILO 
for at hente informationen ind i MBR:
</p>

<pre caption="Starte LILO">
# <i>/sbin/lilo</i>
</pre>

<p>
LILO nu er opsat og din maskine er klar til at starte Gentoo Linux!
</p>

</body>
</section>

<section>
<title>Brug af framebuffer</title>
<body>

<p>
Brugere, som har valgt framebuffer i deres kerne, burde tilføje <c>vga=xxx</c> 
til deres bootloaders opsætningsfil. <c>xxx</c> er en af de værdier i den følgende
tabel:</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="1in"/>
<tcolumn width="1in"/>
<tcolumn width="1in"/>
<tr>
<ti></ti>
<th>640x480</th>
<th>800x600</th>
<th>1024x768</th>
<th>1280x1024</th>
</tr>
<tr>
<th>8 bpp</th>
<ti>769</ti>
<ti>771</ti>
<ti>773</ti>
<ti>775</ti>
</tr>
<tr>
<th>16 bpp</th>
<ti>785</ti>
<ti>788</ti>
<ti>791</ti>
<ti>794</ti>
</tr>
<tr>
<th>32 bpp</th>
<ti>786</ti>
<ti>789</ti>
<ti>792</ti>
<ti>795</ti>
</tr>
</table>

<p>
LILO-brugere skal tilføje <c>vga=xxx</c> i starten af deres opsætningsfil
</p>

<p>
GRUB-brugere skal tilføje <c>vga=xxx</c> til <c>kernel
(hd0,0)...</c> linien.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Startdisketter</title>
<section>
<title>GRUB Startdisketter</title>
<body>

<impo>
Husk at indsætte en floppy-disk i dit floppydrev før du fortsætter.
</impo>

<p>
Det er altid en god idé at lave en startdiskette, efter at du har
installeret en Linux distribution. Det er en sikkerhedsblanket
og generelt ikke en dårlig ting at gøre. Hvis dit hardware ikke tillader 
dig at installere en virkningsfuld bootloader fra chroot-miljøet, 
burde du lave en GRUB start-diskette. 
Hvis du er i den gruppe, lav en GRUB startdiskette og når du genstarter 
første gang kan du installere GRUB på MBR (Hardisken). Lav dine start-disketter sådan her:
</p>

<pre caption="Lav en GRUB startdiskette">
# <i>cd /usr/share/grub/i386-pc/</i>
# <i>cat stage1 stage2 &gt; /dev/fd0</i>
</pre>

<p>
Du kan nu genstarte og starte din diskette. Ved diskettens <c>grub&gt;</c> prompt, kan du 
starte de nødvendige <c>root</c> og <c>setup</c> kommandoer.
</p>

</body>
</section>
<section>
<title>LILO startdisketter</title>
<body>

<impo>
Husk at indsætte en floppy-disk i dit floppydrev før du fortsætter.
</impo>

<p>
Hvis du bruger LILO er det også en god idé at lave en startdiskette:
</p>

<pre caption="Lav en LILO startdiskette">
<comment>(Det vil kun virke, hvis din kerne er mindre end 1.4MB)</comment>
# <i>dd if=/boot/din_kerne of=/dev/fd0 </i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Brugen af GRP</title>
<section>
<body>

<p>
GRP-bruger kan, fra dette trin, installere binære pakker:
</p>

<pre caption="Installere fra GRP">
# <i>emerge -k xfree</i> 
</pre>

<p>
CD 1 indeholder nok programmer til at installere et brugbart system med XFree86.
Oveni indeholder CD2 af 2-CD GRP-sættet programmer som 
KDE, GNOME, Mozilla og andre. For at installere disse pakker, bliver du nødt til at genstarte ind i dit nye Gentoo system først (som står skrevet i "Installationen er 
færdig!" sektionen i slutningen af dette dokument). Efter at du kører dit 
grundlæggende Gentoo system fra harddisken, kan du nu mounte den anden CD og kopiere filer derfra:
</p>

<pre caption="Hente binære pakker fra CD2">
# <i>mount /dev/cdrom /mnt/cdrom</i>
# <i>cp -a /mnt/cdrom/packages/* /usr/portage/packages/</i>
</pre>

<p>
Nu kan de andre programmer blive installeret på samme måde. For eksempel:
</p>

<pre caption="Installation af KDE fra GRP">
# <i>emerge -k kde</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Installationen er færdig!</title>
<section>
<body>

<p>
Nu er din Gentoo Linux installeret. Der er kun nogle trin tilbage for at opdatere nødvendige 
konfigurationsfiler, afslutte chroot-miljøet, unmounte dine partitioner sikkert
og genstarte systemet:
</p>

<warn>
<c>etc-update</c> kan skaffe dig en liste over konfigurationsfiler, der har fået nye versioner ved evt. opdatering. Bekræft at ingen af konfigurationsfilerne har en stor indflydelse (som f.eks. <path>/etc/fstab</path>,
<path>/etc/make.conf</path>, <path>/etc/rc.conf</path>, osv.). Emerge
filer som ikke har stor indflydelse, slet opdateringerne af de
andre eller se forskellen og opdater konfigurationsfilerne manuelt.
</warn>

<pre caption="Genstart af systemet">
# <i>etc-update</i>
# <i>exit</i> 
<comment>(Dette afslutter chroot-miljøet; du kan også taste <i>^D</i>)</comment>
# <i>cd / </i>
# <i>umount /mnt/gentoo/boot</i>
# <i>umount /mnt/gentoo/proc</i>
# <i>umount /mnt/gentoo</i>
# <i>reboot</i>
<comment>(Glem ikke at fjerne den startbare CD)</comment>
</pre>

<note>
Efter genstarten er det en god ide at køre <c>update-modules</c> kommandoen for at 
skabe <path>/etc/modules.conf</path> filen.  I stedet for at ændre denne fil
burde du generelt lave ændringer til filerne i <path>/etc/modules.d</path>.
</note>

<p>
Hvis du har spørgsmål eller vil involvere dig i Gentoo Linuxs 
udvikling burde du overveje at slutte dig til vores gentoo-user og gentoo-dev maillister
(mere information på vores <uri 
link="http://www.gentoo.org/main/en/lists.xml">maillist</uri> side (engelsk)).
Vi har også en handy <uri 
link="http://www.gentoo.org/doc/en/desktop.xml">Skrivebord Opsætningsguide</uri>, der vil hjælpe
dig med at fortsætte med at opsætte dit nye Gentoo Linux system og en brugbar <uri 
link="http://www.gentoo.org/doc/da/portage-user.xml">Portage brugerguide</uri>
til at hjælpe dig med at forstå Portage grundlæggende. Du kan finde resten af 
Gentoo Dokumentationen <uri 
link="http://www.gentoo.org/doc/da/index.xml">Gentoo Linux bruger
dokumentation</uri> siden. Hvis du har andre spørgsmål 
som involverer installationen eller noget lignende, kig venligst på Gentoo Linux <uri 
link="http://www.gentoo.org/doc/da/faq.xml">FAQ</uri> (Ofte Stillede Spørgsmål). Nyd det og velkommen til Gentoo Linux!
</p>

</body>
</section>
</chapter>


<!--
            Gentoo Stats is down currently. Commenting out for the
            time being. I've also changed double-dash to dash-space-dash
            because otherwise commenting fails. 
<chapter>
<title>Gentoo-Stats</title>
<section>
<body>

<p>
Gentoo Linux usage statistics programmet var startet, for at give udviklerne en metode, for at vide hvor stor brugerbasen er. Den indsamler informationer om brug af Gentoo Linux, for at hjælpe os med at sætte prioriteter i vores udvikling. Du kan fuldstændig selv vælge at installere det, men det vil være glædeligt hvis du skulle vælge at bruge det. Kompileret statistiker kan ses på <uri>http://stats.gentoo.org/</uri>.
</p>

<p>
Gentoo-stats serveren vil fastsætte en unik ID til dit system.
Denne ID bliver brugt til at hver system kun er optalt én gang. ID'en 
vil ikke blive brugt til at identificere dit individuelle system, heller vil den blive sat  
sammen med en IP-adresse eller andre personlige informationer. Enhver forholdsregel er blevet taget for at sikre dit privatliv i udviklingen af dette system. Det følgende er hvad vi overvåger lige nu via "gentoo-stats" programmet:
</p>

<ul>
<li>
Installerede pakker og deres version-nummer
</li>
<li>
CPU information: hastighed (MHz), salgsnavn, modelnavn, CPU flag (som -->
<!--"mmx" eller "3dnow")
</li>
<li>
Information om hukommelse (total anvendelig fysisk RAM, total -->
<!--anvendelig swap-plads)
</li>
<li>
PCI-kort og netværks-kontrolchips
</li>
<li>
Gentoo Linux profilen din maskine bruger (der er hvad -->
<!--<path>/etc/make.profile</path> linket viser).
</li>
</ul>

<p>
Vi er klar over at afsløringer af sensibel information er en trussel for de fleste 
Gentoo Linux brugere (ligesom det er for udviklerne).
</p>

<ul>
<li>
Medmindre du ændrer gentoo-stats programmet, vil den aldrig sende sensitive 
informationer som kodeord, opsætningsdata, sko-størrelse...
</li>
<li>
Overførsel af dine email-adresser er valgbar og er slået fra ved -->
<!--installation.
</li>
<li>
IP-adressen, hvor dine data overføres fra, vil aldrig blive gemt 
(logged) så vi kan identificere dig. Der er ingen "IP-adresse/system ID" par.
</li>
</ul>

<p>
Installation er let - brug bare disse følgende kommandoer:
</p>

<pre caption="Installation af gentoo-stats">
# <i>emerge gentoo-stats</i>   <comment>(Installerer gentoo-stats)</comment>
# <i>gentoo-stats - -new</i>    <comment>(Opnår et ny system ID)</comment>
</pre>

<p>
Nummer to kommando foroven vil sende en forespørgsel for et nyt system ID og putte det ind i <path>/etc/gentoo-stats/gentoo-stats.conf</path> automatisk. Du kan se i denne fil og finde flere opsætningsvalg.
</p>

<p>
Efter dette, programmet burde køres regulært (gentoo-stats behøves 
ikke at blive kørt som root). Tilføj denne linie til din <path>crontab</path>:
</p>

<pre caption="Opdatering af gentoo-stats med cron">
0 0 * * 0,4 /usr/sbin/gentoo-stats - -update &gt; /dev/null
</pre>

<p>
<c>Gentoo-stats</c> programmet er et simpelt perl-script, som kan blive set
med dit yndlings-redigeringsprogram: <path>/usr/sbin/gentoo-stats</path>.
</p>

</body>
</section>
</chapter>

-->

<chapter>
<title>Gentoo på ikke så almindelig hardware</title>
<section>
<title>Hardware ATA-RAID</title>
<body>

<p>
Brugere der vil installere Gentoo på Hardware ATA-RAID skal være 
opmærksom på de næste trin i rækkefølge, for at installere dem på
Gentoo Linux:
</p>

<ul>
<li
>Husk at starte LiveCDen med <c>doataraid</c> kerne-valg.
</li>
<li>
Hvis du har glemt at vælge <c>doataraid</c> ved opstart eller at modulerne mystiskvis ikke startede, start dem efter behov:
<pre caption = "Start af RAID moduler">
# <i>modprobe ataraid</i>
<comment>For Promise Raid Controllere:</comment>
# <i>modprobe pdcraid</i> 
<comment>For Highpoint Raid Controllere:</comment>
# <i>modprobe hptraid</i>
</pre>
</li>
<li>
Nogle ATA-RAID Controllere kræver at du genstarter efter
partitionering; formateringen vil ellers fejle.
</li>
<li>Før du chroot'er, mount dit enhedstræ ind i det nye miljø:
<pre caption = "Mounting /dev into /mnt/gentoo/dev">
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
</pre>
</li>
<li>
Ved kerne-opsætningen, vælg den krævede RAID option:
<pre caption = "RAID i Linux kerne-opsætningen">
<comment>For Highpoint RAID controllere:</comment>
ATA/IDE/MFM/RLL support  ---&gt;
[*] HPT36X/37X chipset support 
[*] Support for IDE Raid controllers
[*] Highpoint 370 software RAID
<comment>For Promise RAID controllere:</comment>
ATA/IDE/MFM/RLL support  ---&gt;
[*] PROMISE PDC202{46|62|65|67} support 
<comment>og/eller</comment>
[*] PROMISE PDC202{68|69|70|71|75|76|77} support
[*] Support for IDE Raid controllers
[*] Support Promise software RAID (Fasttrak(tm))
</pre>
</li>
<li>GRUB brugere skal tilføje <c>--stage2=/boot/grub/stage2</c> når man kører <c>grub</c> til <c>setup</c> kommandoen:
<pre caption = "Installation af GRUB på Hardware RAID systemer">
grub&gt; <i>root (hd0,0)</i>
grub&gt; <i>setup --stage2=/boot/grub/stage2 (hd0)</i>
grub&gt; <i>quit</i>
</pre>
Husk også at når du bruger GRUB, at sætte <c>root</c>
til den passende RAID enhed:
<pre caption = "grub.conf med RAID">
title=Min Gentoo Linux på RAID
root (hd0,0)
kernel (hd0,0)/boot/bzImage root=/dev/ataraid/dXpY
</pre></li>
<li>LILO brugere burde sætte deres <c>root</c> option til den passende RAID enhed:
<pre caption = "lilo.conf med RAID">
image=/boot/bzImage
label=linux
read-only
root=/dev/ataraid/dXpY
</pre></li>
</ul>

<p>
Hvis du stadig har problemer med at installere Gentoo Linux på din Hardware
RAID, send venligst en rapport til <uri>http://bugs.gentoo.org</uri>. 
</p>

<p>
Tak fordi du bruger Gentoo Linux og ha' det sjovt med din nye installation!
</p>


</body>
</section>
</chapter>
</guide>
