<?xml version='1.0' encoding="iso-8859-1"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/da/distcc.xml">

<title>Distcc vejledningen</title>

<author title="Forfatter">
    <mail link="lisa@gentoo.org">Lisa M. Seelye</mail>
</author>
<author title="Redaktør">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Redaktør">
    <mail link="vapier@gentoo.org">Mike Frysinger</mail>
</author>
<author title="Redaktør">
    <mail link="erwin@gentoo.org">Erwin</mail>
</author>
<author title="Anmelder">
    <mail link="blubber@gentoo.org">Tiemo Kieft</mail>
</author>
<author title="Oversætter">
    <mail link="aaby@gentoo.org">Arne Mejlholm</mail>
</author>
<author title="Korrektur">
    <mail link="broeman@gentoo.org">Jesper Brodersen</mail>
</author>

<version>1.2.5</version>
<date>29. November 2003</date>

<license/>

<abstract>
Dette dokument fungerer som en HOWTO for at bruge distcc med Gentoo.
</abstract>

<chapter>
<title>Introduktion</title>
<section>
<title>Hvad er distcc?</title>
<body>
<p>
Distcc er et program designet til at distribuere kompileringsopgaver
på tværs af et netværk til deltagende værtscomputere. Det er bestående
af en server, <c>distccd</c>, og et klient program,
<c>distcc</c>. Distcc kan fungere transparent med <uri
link="http://ccache.samba.org">ccache</uri> og Portage med lidt 
opsætning. 
</p>

</body>
</section>
</chapter>

<chapter>
<title>Opsætning</title>
<section>
<title>Afhængigheder</title>
<body>
<pre caption="Distcc Afhængigheder (fra 2.8 til 2.10)">
&gt;=sys-apps/portage-2.0.46-r11
<codenote>Distcc-2.11 og senere kræver &gt;=sys-apps/portage-2.0.49-r6</codenote>
&gt;=sys-devel/gcc-config-1.3.1
sys-apps/shadow
<codenote>(Fra version 2.8 og op til 2.11) og følgende valgfrie afhængigheder, når du har
<c>gtk</c> i dine <c>USE</c>-flag:</codenote>
&gt;=x11-libs/gtk+-2.2.1
</pre>

<pre caption="Distcc Afhængigheder (før 2.11.1)">
&gt;=sys-apps/portage-2.0.49-r6
&gt;=sys-devel/gcc-config-1.3.1
sys-apps/shadow
<codenote>I denne udgave, kan du vælge imellem en Gnome og GTK grafisk overvåger (GUI-monitor),</codenote>
<codenote>og de har følgende tilføjet afhængigheder:</codenote>
<codenote>Til GTK:</codenote>
&gt;=x11-libs/gtk+-2.0.0
&gt;=gnome-base/libglade-2.0.0
x11-libs/pango
<codenote>Til Gnome:</codenote>
&gt;=x11-libs/gtk+-2.0.0
&gt;=gnome-base/libglade-2.0.0
x11-libs/pango
&gt;=gnome-base/libgnomeui-2.0.0.0
&gt;=gnome-base/libgnome-2.0.0
</pre>
</body>
</section>

<section>
<title>Installation af Distcc</title>
<body>

<p>
At installere Distcc er meget let. Du skal simpelthen bare sætte dine USE-flag og <c>emerge distcc</c>. Men der er nogle indstillinger, du burde vide om.
</p>

<p>
Distcc sendes med en grafisk overvåger til at overvåge opgaver, som din computer sender afsted til kompileringen. Hvis du bruger Gnome, så put 'gnome' i dine USE-flag. Imens, hvis du ikke bruger Gnome og stadigvæk vil have overvågeren, så skal du putte 'gtk' i dine USE-flag.
</p>

</body>
</section>

<section>
<title>At sætte Portage op til at bruge Distcc</title>
<body>

<p>
Opsætningen af distcc er meget nemt i Portage. Følg disse
simple trin på <e>hver</e> af de computere, du vil bruge distcc på:
</p>

<pre caption="Integration af Distcc og Portage">
# <i>emerge distcc</i>
# <i>nano -w /etc/make.conf</i>
</pre>

<impo>
Hvis du bruger distcc-2.11.1 eller nyere med &gt;=portage-2.0.49-r6, så skal du kun indstille dine hosts (se næste kode-blok), modificere MAKEOPTS i <path>/etc/make.conf</path>, og tilføje 'distcc' til FEATURES i <path>/etc/make.conf</path>.
</impo>

<note>
Redigér dine FEATURES-flag til at indeholde &quot;distcc&quot;
</note>

<note>
Du burde også udkommentere PORTAGE_TMPDIR-linien i <path>/etc/make.conf</path>
</note>

<note>
Indstil <c>DISTCC_DIR=${PORTAGE_TMPDIR}/portage/.distcc</c> nær slutningen af filen (sidste linie er okay).
</note>

<p>
Derefter skal du specificere hvilken vært du vil bruge. For at gøre
dette kan du bruge kommandoen <i>distcc-config</i> for at lave denne
liste af værter. Her er et eksempel på nogle værter, som måske er med i
din liste:
</p>

<pre caption="Eksempler på vært definitioner">
192.168.0.1        192.168.0.2                     192.168.0.3
192.168.0.1/2      192.168.0.2                     192.168.0.3/10
192.168.0.1:4000/2 192.168.0.2/1                   192.168.0.3:3632/4
@192.168.0.1       @192.168.0.2:/usr/bin/distccd   192.168.0.3
</pre>

<p>
Det kan godt se meget indviklet ud, men i de fleste tilfælde vil en
variation af linie 1 eller 2 virke. En forklaring af hver linie er:
Linie 1 er bare en pladsbegrænsende liste af værter, der bruger
standard (default) af alle ting. Linie 2 er en liste af værter, der
specificerer det maksimale antal af jobs (ved at bruge /N) der højest
kan sendes til en vært på ethvert givent tidspunkt (specificeret med <c>/n</c>).
Da de fleste folk ikke kommer til at bruge linerne 3 og 4, vil jeg blot pege på <uri 
link="http://distcc.samba.org/man/distcc_1.html">distcc docs</uri> for 
at få mere information.
</p>

<p>Et kommando-eksempel for at indstille hosts (for linie 1) er:</p>
<pre caption="Kommando-eksempel for at indstille værter">
<i>/usr/bin/distcc-config --set-hosts "192.168.0.1 192.168.0.2 192.168.0.3"</i>
</pre>

<p>
Det sidste trin for at integrere distcc ind i Portage, er at åbne din 
<path>/etc/make.conf</path> igen og ændre din <c>MAKE_OPTS</c> til at 
indeholde <c>-jN</c> 
(hvor N er et positivt heltal).  Typisk vil du sætte dette til det
totale antal processorer i dit netværk plus en.
</p>

<pre caption="Sidste trin i make.conf">
# <i>nano -w /etc/make.conf</i>
MAKE_OPTS=-jN
</pre>

<impo>
Glem ikke at starte distcc daemon! <c>/etc/init.d/distccd start</c>
</impo>

</body>
</section>

<section>
<title>At sætte Distcc op til at virke med Automake</title>
<body>

<p>
Dette er i nogle tilfælde nemmere end opsætningen af Portage. Det du
skal gøre er at opdatere din <c>PATH</c> miljø-variabel til at
inkludere <path>/usr/lib/distcc/bin</path> før det bibliotek, hvor gcc
befinder sig (<path>/usr/bin</path>). Men ikke uden en advarsel. Hvis du
bruger ccache, skal du sætte distcc efter ccache delen. Sådan her:
</p>

<pre caption="Opsætning af din sti">
# <i>export PATH="/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"</i>
</pre>

<p>
Derefter, når du normalt ville skrive <c>make</c>, skal du nu skrive 
<c>make -jN</c> 
(hvor N igen er et positivt heltal). Et sikkert nummer at bruge på Ns
plads afhænger af dit netværk og typen af de computere du bruger til
at kompilere. Jeg har selv en dual processor P3 og en K6-2/400 der
kompilerer alt til min desktop (en 1200MHz Athlon Thunderbird) og jeg
bruger -j5. Test dine egne indstillinger for at finde det rigtige tal.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Cross-Compiling</title>
<section>
<title>En note om Cross-Compiling</title>
<body>

<p>
Cross-compiling bruger en arkitektur til at bygge programmer til en
anden arkitektur. Dette er så simpelt som at bruge en Athlon (i686)
til at bygge et program til en K6-2 (i586), eller at bruge en Sparc
til at bygge at program til en ppc.
</p>

</body>
</section>

<section>
<title>Et personlig notat om Cross-compiling</title>
<body>

<p>
Jeg ville meget gerne være i stand til at hjælpe med på Gentoo's
indsats med Cross-compiling, men jeg har ikke nogen ikke-x86
maskiner. Jeg kan lave ting der virker <e>i teorien</e>, men jeg må
stole på andre personer til at teste det jeg skriver. Det virker til
et vist punkt, men det er svært ;-)
</p>

<p>
I den nærmeste fremtid håber jeg, at kunne skaffe en Sparc af en eller type
så jeg kan putte Gentoo på den og lege med det i min lejlighed.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Brug af distcc til bootstrap</title>
<section>
<title>Trin 1: Indstilling a ny computer</title>
<body>
<p>Det næste du skal gøre, er at starte din nye computer med en Gentoo Linux LiveCD og følge alle trin op til bootstrapping. Så følg denne lille indledende vejledning på den nye computer.
</p>

        <pre caption="Indledende indstillinger">
	<codenote>Her tilføjer vi distcc til FEATURES</codenote>
        # <i>nano -w /etc/make.conf</i>

	<codenote>Tilføj &quot;distcc&quot; til FEATURES</codenote>

	<codenote>Modificér MAKEOPTS i <path>/etc/make.conf til at indeholde -jN (som beskrevet foroven)</path></codenote>
	
	</pre>

<p>
Derefter, tilføj distcc brugeren til din <path>/etc/passwd</path>:
</p>

<pre caption="Tilføj distcc brugeren til /etc/passwd">
	# <i>echo "distcc:x:240:2:distccd:/dev/null:/bin/false" &gt;&gt;/etc/passwd</i>
	<codenote>Glem ikke `<i>&gt;&gt;</i>'</codenote>
  </pre>

</body>
</section>
<section>
        <title>Trin 2: At få fat i Distcc</title>
        <body>
        <p>
	Nu burde du udføre den følgende kommando inden i chroot på den nye computer.
	</p>
        
	<pre caption="Få fat i Distcc på den nye computer">
	# <i>USE='-*' emerge --nodeps distcc</i>
        </pre>

<note>
<uri link="http://bugs.gentoo.org/show_bug.cgi?id=34262">Bug
34262</uri> bemærker at der er et problem med pkg-config
(dev-util/pkgconfig) så det kan være nødvendigt at køre en <c>emerge
--nodeps pkgconfig</c> før den ovenfor nævnte emerge.
</note>


       </body>
</section>
<section>
             <title>Trin 3: Indstillingen af distcc selv</title>
           <body>
             <p>Nu, indstil selve distcc...</p>
             <pre caption="Afsluttende distcc opsætning">
# <i>/usr/bin/distcc-config --install</i>
# <i>/usr/bin/distcc-config --set-hosts "localhost host1 host2 host3 ..."</i>
        </pre>
   <p>
   distcc burde nu være sat op til bootstrap! Fortsæt med den officielle installationsvejledning, og glem ikke at gen-emerge distcc efter <c>emerge system</c>.
   </p>
   
   </body>
 </section>
</chapter>

<chapter>
<title>Fejlfinding</title>

<section>
<title>Mozilla og XFree</title>
<body>

<p>
Når du emerger forskellige pakker, vil du bemærke at de ikke bliver
distribueret (og virkelig ikke bliver bygget parallelt). Dette er
fordi at udviklerne af Mozilla og XFree .ebuild'ene har slået parallel
bygning fra, fordi det er kendt for at skabe problemer. Dette er ikke
nødvendigvis et distcc problem.
</p>

<p>
Det skal ikke forstås som, at nogle gange vil distcc-kompileringen få
en pakke til at mislykkes.
</p>

</body>
</section>

<section>
  <title>En blanding af modstandsdygtig-gcc og ikke-modstandsdygtig-gcc værter vil være fejlfuld.</title>
      <body>
    <p>
    Med sådan en lang titel, er næsten alt forklaring unødvendigt. Men, hvis du planlægger at bruge distcc spredt over værter, som bruger <uri link="http://www.gentoo.org/proj/en/hardened/etdyn-ssp.xml">PaX/hardened-gcc</uri> modstandsdygtig projekt, og andre ikke har, vil du løbe ind i problemer.
    </p>

    <p>
    Løsningen kræver en lille smule fremsynethed fra din side; du bliver nødt til at køre <c>hardened-gcc -R</c> på væreten, som har PaX/hardened-gcc, eller du bliver nødt til at aktivere PaX beskyttelser i din kerne og <c>emerge hardened-gcc</c>.  Begge ting er godt at gør, siden for det meste er beskyttelserne tilbud af begge pakker, og det er en god idé at være transparent over for brugeren.
    </p>

</body>
</section>
<section>
      <title>GCC-versionsmix</title>
       <body>
       <p>
       Hvis du har forskellige versioner af GCC på dine værter, vil der sikkert opstå mærkelige problemer. Løsningen er at blive sikker på at alle væreter bruger samme GCC-version.
       </p>

</body>
</section>
</chapter>
<chapter>
<title>Distcc ekstra ting</title>
<section>
<title>Distcc overvågere</title>
<body>

<p>
Distcc kommer med to overvågningsværktøjer. Den tekst-baserede bliver
altid bygget og kaldes <c>distccmon-text</c>. Når du kører den for den
første gang kan det godt virke lidt forvirrende, men den er faktisk
ganske nem at bruge. Hvis du kører programmet uden en parameter så
kører det kun en gang. Hvis du derimod giver den et tal så opdaterer
den hver N sekunder, hvor N er den parameter du giver den
</p>

<p>
Det andet overvågningsværktøj findes kun hvis du har <c>gtk</c> i dit 
<c>USE</c> flag. Denne er baseret på GTK+ og kører i et X miljø, og er
faktisk ret dejligt.
</p>

<p>
Der følger en advarsel med til brugeren af disse programmer. Hvis du
vil overvåge en vilkårlig emerge, så er du nødt til at starte
overvågningsværktøjet sådan:
</p>

<pre caption="At starte overvågningsværktøjerne">
# <i>DISTCC_DIR=/sti/til/distccdir distccmon-text N</i>
<codenote>Eller du kan starte den grafiske overvåger...</codenote>
# <i>DISTCC_DIR=/sti/til/distccdir distccmon-gnome</i>
</pre>

<impo>
Hvis du bruger Portage og brugte ovenstående eksemple, vil det være
<c>DISTCC_DIR=/var/tmp/portage/.distcc</c>.
</impo>

<note>
Hvis du ikke bruger Portage, behøver du ikke at specificere DISTCC_DIR (med andre ord, bare taste distccmon-text N).
</note>

</body>
</section>
</chapter>

<chapter>
<title>Fremtidige planer for Distcc og Gentoo</title>
<section>
<title>distcc-subnetscan</title>
<body>

<p>
<c>distcc-subnetscan</c> er et perl program under udvikling, der kommer
til at kunne skanne et del-netværk for værter, der har deltagende distcc
daemons (baggrundsprocesser). Dette vil blive forbedret til at teste om daemon'en på en
fjernvært vil tilpasses til en specifik <c>CHOST</c> indstilling for
at gøre cross-compiling nemmere.
</p>

<p>
Perl scriptet findes <uri
link="http://dev.gentoo.org/~lisa/distcc/distcc-subnetscan/distcc-subnetscan.pl">lige
her</uri> indtil et mere formelt hjem bliver fundet.
</p>

</body>
</section>

<section>
<title>distcc-config</title>
<body>

<p>
<c>distcc-config</c> er et brugerbaserede konfigurationsværkøj til
distcc, men er forældet. Den er blevet skrevet forfra og er at finde i
<path>distcc-2.11.1-r1</path> og højere.
</p>

</body>
</section>
</chapter>
</guide>
