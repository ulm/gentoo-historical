<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-working-features.xml,v 1.2 2004/03/10 22:58:43 broeman Exp $ -->

<sections>
<section>
<title>DistCC</title>
<subsection>
<title>Hvad er DistCC?</title>
<body>

<p>
<c>distcc</c> er et program, der distribuerer kompilering over flere, ikke
nødvendigvis identiske, maskiner på et netværk. <c>distcc</c>-klienten sender alle
nødvendige informationer til de tilgængelige DistCC-servere (som kører <c>distccd</c>),
så de kan kompilere dele af kildekode for klienten. Slutresultatet er en
hurtigere kompileringstid.
</p>

<p>
Du kan finde flere uddybbende informationer om <c>distcc</c> (og informationer om
hvordan man får det til at virke med Gentoo) i vores <uri link="/doc/da/distcc.xml">Gentoo
Distcc Dokumentation</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Installation af DistCC</title>
<body>

<p>
Distcc kommer med en grafisk overvåger til at overvåge de opgaver, som
din computer sender afsted til kompileringen. Hvis du bruger Gnome, så
indsæt 'gnome' i dine USE-flag. Hvis du imidlertid ikke bruger Gnome og
stadigvæk vil have overvågeren, så skal du indsætte 'gtk' i dine
USE-flag.
</p>

<p>
Installation er, som det er med alt software, tilgængelig igennem Gentoos
Portage, med stor lethed:
</p>

<note>
Fra nu af, idet du ved hvordan man installerer binære pakker, vil vi
springe <c>--usepkg</c>-valgmuligheden over igennem resten af Gentoo-håndbogen.
</note>

<pre caption="Installation af Distcc">
# <i>emerge distcc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Aktivering af Portage-understøttelse</title>
<body>

<p>
Nå, hvis installationen var let, burde resten også være let :) Lad os hurtigt
aktivere Portage-understøttelse til <c>distcc</c>.
</p>

<p>
Først, åben <path>/etc/make.conf</path> og rediger <c>FEATURES</c>-variabelen, så
den indeholder <c>distcc</c>-nøgleordet. Derefter, rediger <c>MAKEOPTS</c>-variabelen,
så den læser <c>-jX</c> med <c>X</c>, antalet af CPUer, som kører <c>distccd</c>
(inklusiv den nuværende vært) plus én:
</p>

<pre caption="Mulige MAKEOPTS-indstilling i /etc/make.conf">
<comment># Antag at du har 2 enkelt-processor distccd-værter uden at tælle
denne vært med:</comment>
MAKEOPTS="-j4"
</pre>

<p>
Mens du stadigvæk er inde i <path>/etc/make.conf</path>, udkommenter
<c>PORTAGE_TMPDIR</c>-linien og tilføj den følgende linie i slutningen
af filen:
</p>

<pre caption="Tilføj en ekstra, distcc-specifik variabel til /etc/make.conf">
<comment># Glem ikke at udkommentere den følgende PORTAGE_TMPDIR variabel</comment>
DISTCC_DIR=${PORTAGE_TMPDIR}/portage/.distcc
</pre>

<p>
Kør nu <c>distcc-config</c> og gå til listen over DistCC-servere der
er til rådighed. For et simpelt eksempel, forventer vi at de tilrådige
DistCC servere er <c>192.168.1.102</c> (nuværende vært), <c>192.168.1.103</c> og 
<c>192.168.1.104</c> (to "fjerne" værter):
</p>

<pre caption="Indstillinger af distcc for bruge tre tilrådige DistCC-servere">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>

<p>
Selvfølgelig, glem ikke også at køre <c>distccd</c>-daemon (baggrundsprocess):
</p>

<pre caption="Start af distcc-daemon">
# <i>/etc/init.d/distccd start</i>
</pre>

<p>
Tillykke, dit system vil nu bruge distribueret kompilering! For flere
dybdegående informationer om DistCC og Gentoo, læs venligst vores <uri
link="/doc/da/distcc.xml">Gentoo DistCC Dokumentation</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>ccache</title>
<subsection>
<title>Hvad er ccache?</title>
<body>

<p>
<c>ccache</c> er en hurtig opbevarelse af midlertidige kompileringer. Når du kompilerer
et program, vil den 'cache' mellemresultater, så når du igen genkompilerer det samme program,
vil kompileringstiden blive reduceret meget. I normale kompileringer kan det resultere
op fra 5 til 10 gange hurtigere kompileringstid.
</p>

<p>
Hvis du er interesseret i hvordan <c>ccache</c> fungerer, besøg venligst
<uri link="http://ccache.samba.org">ccache hjemmeside</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Installation af ccache</title>
<body>

<p>
Installation af <c>ccache</c> med Gentoo, kan gøres med lethed. Emerge den bare og du er færdig
:)
</p>

<pre caption="Installation af ccache">
# <i>emerge ccache</i>
</pre>

</body>
</subsection>
<subsection>
<title>Aktivering af Portage-understøttelse</title>
<body>

<p>
Først, skal du redigere <path>/etc/make.conf</path> og ændre <c>FEATURES</c>-variabelen,
så den indeholder <c>ccache</c>-nøgleordet:
</p>

<pre caption="Redigering af FEATURES i /etc/make.conf">
FEATURES="ccache"
</pre>

<p>
Derefter, skal du redigere (eller oprette) <c>CCACHE_SIZE</c>-variabelen (også i
<path>/etc/make.conf</path>), så den indeholder summen af harddisk-pladsen, som du vil
opgive til <c>ccache</c>:
</p>

<pre caption="Redigering af CCACHE_SIZE i /etc/make.conf">
CCACHE_SIZE="2G"
</pre>

<p>
Fra nu af, vil Portage bruge <c>ccache</c> for at øge hastigheden på kompileringer, når det er
muligt. Hvis du er usikker på hvordan <c>ccache</c> virker, kan du køre <c>ccache
-s</c> og se <c>ccache</c> statistikker:
</p>

<pre caption="Se ccache-statistikker">
# <i>ccache -s</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Binære pakker</title>
<subsection>
<title>Oprettelse af binære pakker</title>
<body>

<p>
Vi har allerede diskuteret hvordan man arbejder med præ-byggede pakker, men hvordan kan du
lave dine egne præ-byggede pakker?
</p>

<p>
Er pakken allerede installeret, kan du bruge <c>quickpkg</c>-kommandoen,
som vil lave en tarball af de installerede filer. Dette er meget interessant for
lave backup!
</p>

<pre caption="Brug af quickpkg">
# <i>quickpkg gnumeric</i>
</pre>

<p>
Hvis pakken ikke er installeret endnu, kan du installere den ved brug af <c>emerge</c> og
også spørge efter at bygge en binær pakkke. <c>emerge</c> bruger <c>--buildpkg</c>-valgmuligheden
(<c>-b</c> forkortet) til dette:
</p>

<pre caption="Installation af gnumeric og også bygning af binære pakker">
# <i>emerge --buildpkg gnumeric</i>
</pre>

<p>
Hvis du vil have Portage til at gøre dette som standard, bør du sætte <c>buildpkg</c>
nøgleordet i <c>FEATURES</c>-variabelen, erklæret i <path>/etc/make.conf</path>.
</p>

<pre caption="Automatisk oprettede binære pakker">
FEATURES="buildpkg"
</pre>

<p>
Hvis du ikke vil installere softwaren, men kun vil bygge pakken, kan du
bruge <c>--buildpkgonly</c> valgmuligheden (<c>-B</c> skrevet kort):
</p>

<pre caption="Bygning af binære pakker til gnumeric">
# <i>emerge --buildpkgonly gnumeric</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Sikkerhedsrelaterede egenskaber</title>
<subsection>
<title>Sandbox</title>
<body>

<p>
Imens bygningen og installationen af pakkerne foregår, bruger Portage <e>sandbox</e> for at beskytte
dit direkte system. Dette betyder, at så længe at pakken ikke er installeret på
dit system, kan pakken ikke røre nogen anden fil udenfor sandbox. Dette
sikrer at Portage ved hvilke filer, som bliver oprettet og ændret af en pakke.
</p>

<p>
Når pakke-kompileringen er færdig, vil Portage "præ-installere" pakken
i sandbox, som registrerer hvilke filer er placeret og hvor. Det vil så flytte
disse filer fra sandbox til dit system.
</p>

</body>
</subsection>
<subsection>
<title>Bruger-privilegier</title>
<body>

<p>
Portage understøtter også bygning af pakker, som en ikkeroot-bruger (mere præcist, som
brugeren "portage" og gruppen "portage"). Dette øger sikkerheden igennem
bygningsprocessen. Du kan vælge, at bruge bruger-privilegier med eller uden brug af sandbox.
Selvfølgelig kan det ikke siges om bruger-privilegier eller brug af sandbox, der er den mest
brugte metode :)
</p>

</body>
</subsection>
<subsection>
<title>Aktivering af sandbox og/eller userpriv</title>
<body>

<p>
Portage vil bruge <c>sandbox</c> som standard. Hvis du vil bruge <c>userpriv</c>, bør
du tilføje den til <c>FEATURES</c>-variabelen. Noter, at når du aktiverer
<c>userpriv</c>, vil den fjerne <c>sandbox</c>-understøttelse, undtagen hvis du også aktiverer
<c>usersandbox</c>:
</p>

<pre caption="Activering af userpriv og usersandbox">
FEATURES="userpriv usersandbox"
</pre>

<warn>
Fjern <e>ikke</e> <c>sandbox</c> fra <c>FEATURES</c>-variabelen!
</warn>

</body>
</subsection>
<subsection>
<title>Stram kontrol</title>
<body>

<p>
Portage kan blive spurgt om at reagere stærkt på mulige farlige betingelser (som
glemte eller forkerte Manifesti-filer). For at aktivere denne stramme kontrol, tilføj
<c>strict</c>-nøgleordet til <c>FEATURES</c> variabelen:
</p>

<pre caption="Aktivering af stram kontrol">
FEATURES="strict"
</pre>

</body>
</subsection>
<subsection>
<title>'Smart File System Permissions'</title>
<body>

<p>
Portage kan blive bedt om automatisk at håndtere potentielt farlige
fil-tilladelser, som kan være en sikkerhedsrisiko. Den gør dette, ved at fjerne
"group" og "other" læsbare bits på setuid-filer og fjerne "other"
læsbar bit på setgid-filer i den præ-installerbare fase.  For at aktivere
'smart file system permissions', tilføj <c>sfperms</c>-nøgleordet til
<c>FEATURES</c>-variabelen:
</p>

<pre caption="Aktivering af 'smart file system permissions'">
FEATURES="sfperms"
</pre>

</body>
</subsection>
</section>
<section>
<title>Andre egenskaber</title>
<subsection>
<title>Portage hjælp</title>
<body>

<p>
Der er en del andre nøgleord, som du kan placere i <c>FEATURES</c>-variabelen.
De fleste af dem er målrettet til udviklere og mindre interessant for den daglige
bruger. Hvis du er interesseret i at lære mere om disse egenskaber (eller Portage
generelt), glem ikke at læse <path>make.conf</path>s man-side, som vi leverer.
</p>

<pre caption="Mere Portage-relaterede informationer">
# <i>man make.conf</i>
</pre>

</body>
</subsection>
</section>
</sections>
