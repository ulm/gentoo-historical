<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-portage-ebuild.xml,v 1.2 2005/01/30 20:59:34 aaby Exp $ -->

<sections>

<version>1.3</version>
<date>2004-10-24</date>

<section>
<title>Emerge og Ebuild</title>
<body>

<p>
<c>ebuild</c>-programmet er en low-level grænseflade til Portage systemet.
Ved brug af dette program, kan du udføre specifikke handlinger til en given ebuild.
F.eks. kan du udføre de individuelle merge-trin selv.
</p>

<p>
Brugen af <c>ebuild</c> er mere til udviklingsopgaver; flere informationer omkring
<c>ebuild</c> kan derfor findes i <uri
link="/proj/en/devrel/handbook/handbook.xml">Udviklernes håndbog</uri>
(på engelsk). Dog, vil vi forklare hvilke instanser af en ebuild, der bliver påkaldt
af Portage igennem emerge-processen for en specifik softwaretitel og
hvordan man påkalder de føropsætningstrin, som nogle ebuilds tillader
dig at udføre.
</p>

</body>
</section>
<section>
<title>Manuel installation af software</title>
<subsection>
<title>At hente kilder samt checksum</title>
<body>

<p>
Når du påkalder en <c>ebuild</c> til en given ebuild-fil, vil den
verificere om checksummen af alle involverede filer er lig med dem der
er givet i den medfølgende <path>Manifest</path> eller
<path>files/digest-&lt;navn&gt;-&lt;version&gt;</path>-fil. Dette sker
efter at kilderne er hentet.
</p>

<p>
For at hente kilderne ved brug af <c>ebuild</c>, kør da:
</p>

<pre caption="At hente kildekode">
# <i>ebuild sti/til/ebuild fetch</i>
</pre>

<p>
Hvis ebuildens md5sum ikke passer sammen med den, der er vist i
<path>Manifest</path>-filen, eller en af de hentede kildekoder ikke passer med dem
vist i <path>files/digest-&lt;pakke&gt;</path>-filen, vil du modtage 
en fejl lignende til dette:
</p>

<pre caption="Ebuild checksum-fejl">
!!! File is corrupt or incomplete. (Digests do not match)
>>> our recorded digest: db20421ce35e8e54346e3ef19e60e4ee
>>>  your file's digest: f10392b7c0b2bbc463ad09642606a7d6
</pre>

<p>
Den underliggende linie vil forklare den fejlbare fil. 
</p>

<p>
Hvis du er sikker på, at de kildekoder du har fanget og ebuilden i sig selv er
valid, kan du regenerere <path>Manifest</path> og
<path>digest-&lt;package&gt;</path>-filen ved brug af <c>ebuild</c>s digest-funktionalitet:
</p>

<pre caption="Regenerering af Manifest og digest">
# <i>ebuild sti/tíl/ebuild digest</i>
</pre>

</body>
</subsection>
<subsection>
<title>Udpakning af kildekode</title>
<body>

<p>
For at pakke kildekode ud i <path>/var/tmp/portage</path> (eller en anden
placering du har specificeret i <path>/etc/make.conf</path>), kør da <c>ebuild</c>s
unpack-funktionalitet:
</p>

<pre caption="Udpakning af kildekoder">
# <i>ebuild sti/til/ebuild unpack</i>
</pre>

<p>
Dette vil udføre ebuilds src_unpack() funktion (der som standard er en normal
udpakning, hvis ingen src_unpack() funktion er defineret). Det er også i dette trin, at
alle nødvendig patches er tilføjet.
</p>

</body>
</subsection>
<subsection>
<title>Samling af kildekoderne</title>
<body>

<p>
Det næste trin i emerge-processen er at samle kildekoderne.
<c>ebuild</c>s kompilerings-funktionalitet tager sig af dette trin ved at udføre
src_compile() funktionen i ebuilden. Dette inkluderer også 'configure'-trin, hvis
de tilhører titlen.
</p>

<pre caption="Samling af kildekoderne">
# <i>ebuild sti/til/ebuild compile</i>
</pre>

<p>
Du bør redigere ebuilds src_compile() funktion, hvis du ønsker at ændre
samlingsinstruktionerne. Dog kan du også snyde Portage til at tro
at <c>ebuild</c>-programmet har udført samlingstrinnet. Kør
alle nødvendige kommandoer selv, og opret en tom fil kaldet
<path>.compiled</path> i 'working'-folderen:
</p>

<pre caption="At informere Portage om de færdiggjorte samlingsjobs">
# <i>touch .compiled</i>
</pre>

</body>
</subsection>
<subsection>
<title>Installation af filer i en midlertidig placering</title>
<body>

<p>
I det næste trin vil Portage installere alle de nødvendige filer til en midlertidig
placering. Denne folder vil indeholde alle filer, som skal emerges til
det rigtige filsystem. Du kan gøre dette ved at køre <c>ebuild</c>s install-funktionalitet,
som udfører ebuilds src_install() funktion:
</p>

<pre caption="Installation af filerne">
# <i>ebuild sti/til/ebuild install</i>
</pre>

</body>
</subsection>
<subsection>
<title>Emerge af filer til det direkte filsystem</title>
<body>

<p>
Det sidste trin er at merge alle filerne til det direkte filsystem og registrere disse
i Portages backend. <c>ebuild</c> kalder dette trin "qmerge" og involverer disse
følgende trin:
</p>

<ul>
  <li>Udføre pkg_preinst() funktionen, hvis specificeret</li>
  <li>Kopiere alle filer til det direkte filsystem</li>
  <li>Registrere filerne i Portages backend</li>
  <li>Udføre pkg_postinst() funktionen, hvis specificeret</li>
</ul>

<p>
Kør <c>ebuild</c>s qmerge-funktionalitet for at udføre disse trin:
</p>

<pre caption="Emerge af filer til det direkte filsystem">
# <i>ebuild sti/til/ebuild qmerge</i>
</pre>

</body>
</subsection>
<subsection>
<title>Rensning af den midlertidige folder</title>
<body>

<p>
Endeligt kan du rense hele den midlertidige folder ved brug af <c>ebuild</c>s 
clean-funktionalitet:
</p>

<pre caption="Rensning af den midlertidige folder">
# <i>ebuild sti/til/ebuild clean</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Yderligere Ebuild-egenskaber</title>
<subsection>
<title>Kørsel af alle emerge-relaterede kommandoer</title>
<body>

<p>
Ved brug af <c>ebuild</c>s merge-funktionalitet, kan du køre fetch, unpack,
compile, install og qmerge-kommandoerne på én gang:
</p>

<pre caption="Installation af software">
# <i>ebuild sti/til/ebuild merge</i>
</pre>

</body>
</subsection>
<subsection>
<title>Udførelse af opsætningsaktiviteter</title>
<body>

<p>
Nogle programmer har også instruktioner, som opsætter pakken yderligere på
dit system. Disse instruktioner kan være interaktive og kan derfor ikke blive 
udført automatisk. For at køre disse opsætningstrin, som er placeret i
ebuilds (valgmulige) config() funktion, brug <c>ebuild</c>s 
config-funktionalitet:
</p>

<pre caption="Opsætning af en package">
# <i>ebuild sti/til/ebuild config</i>
</pre>

</body>
</subsection>
<subsection>
<title>Bygning af en (RPM) pakke</title>
<body>

<p>
Du kan instruere Portage til at oprette en binær pakke af en ebuild eller endda en RPM-fil.
Brug <c>ebuild</c>s package- eller rpm-funktionalitet for at oprette disse arkiver.
Der er dog nogle få forskelle imellem disse to funktionaliteter:
</p>

<ul>
  <li>
    package-funktionaliteten minder meget om merge-funktionaliteten, undtagen
    alle nødvendige trin (fetch, unpack, compile, install) før oprettelsen af
    pakken
  </li>
  <li>
    rpm-funktionaliteten bygger en RPM-pakke fra de filer, oprettet
    <e>efter</e> at have kørt <c>ebuild</c>s install-funktionalitet
  </li>
</ul>

<pre caption="Oprettelse af pakker">
<comment>(Til en Portage-kompatibel binær pakke)</comment>
# <i>ebuild sti/til/ebuild package</i>

<comment>(Til en RPM-pakke)</comment>
# <i>ebuild sti/til/ebuild rpm</i>
</pre>

<p>
Den oprettede RPM-fil indeholder dog ikke ebuilds afhængighedsinformationer.
</p>

</body>
</subsection>
</section>
<section>
<title>Flere informationer</title>
<subsection>
<body>

<p>
Læs venligst de følgende man-sider for flere informationer omkring Portage,
ebuild-programmet og ebuild-filer:
</p>

<pre caption="Man-sider">
$ <i>man portage</i>    <comment>(Portage selv)</comment>
$ <i>man emerge</i>     <comment>(emerge-kommandoen)</comment>
$ <i>man ebuild</i>     <comment>(ebuild-kommandoen)</comment>
$ <i>man 5 ebuild</i>   <comment>(ebuild filsyntaks)</comment>
</pre>

<p>
Du kan også finde flere udviklingsrelaterede informationer i <uri
link="/proj/en/devrel/handbook/handbook.xml">Udviklerens håndbog</uri> (på engelsk).
</p>

</body>
</subsection>
</section>
</sections>
