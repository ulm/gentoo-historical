<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/2004.3/Attic/hb-install-system.xml,v 1.1 2005/01/08 22:26:03 broeman Exp $ -->

<sections>

<version>1.55</version>
<date>6. November 2004</date>

<section>
<title>At skifte rod-mappe (Chrooting)</title>
<subsection>
<title>Valgfrit: Valg af filspejle</title>
<body>

<p>
Hvis du er startet op fra en Gentoo LiveCD, så er du i stand til at
bruge <c>mirrorselect</c> til at opdatere <path>/etc/make.conf</path>,
så hurtige filspejle bliver brugt til både Portage og kildekode (selvfølgelig
kræver det en fungerende netværksforbindelse):
</p>

<pre caption="Vælg hurtige filspejle">
# <i>mirrorselect -a -s4 -o &gt;&gt; /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Hvis <c>mirrorselect</c> af en eller anden grund skulle fejle, så gå
ikke i panik. Dette trin er 100% valgfrit.
</p>


</body>
</subsection>
<subsection>
<title>Kopiering af DNS-information</title>
<body>

<p>
Der mangler stadig én ting, før vi skifter til det nye miljø, og det
er at kopiere DNS-informationerne i <path>/etc/resolv.conf</path>.  Du
skal gøre dette for at sikre, at netværket stadig virker, efter
skiftet til det nye miljø. <path>/etc/resolv.conf</path> indeholder
navneserverne til dit netværk.
</p>

<pre caption="Kopiering af DNS-information">
<comment>("-L" muligheden er nødvendigt for at være sikker på at vi ikke kopiere et symbolsk link)</comment>
# <i>cp -L /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

</body>
</subsection>
<subsection>
<title>Mount af proc-filsystemet</title>
<body>

<p>
Mount <path>/proc</path>-filsystemet til <path>/mnt/gentoo/proc</path> for at tillade installationen at bruge de kerne-leverede informationer, selv inde i det chrootede miljø.
</p>

<pre caption="Mount af /proc">
# <i>mount -t proc none /mnt/gentoo/proc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Skift til det nye miljø</title>
<body>

<p>
Nu, hvor alle partitionerne er initialiseret og basismiljøet
installeret, er det tid til at skifte til vores nye installationsmiljø,
ved at lave et <c>rod skifte</c>. Det betyder at vi skifter fra
det nuværende installationsmiljø (LiveCD eller andet installationsmedie)
til dit installationssystem (nemlig de initialiserede partitioner).
</p>

<p>
Denne rodskiftning gøres i tre skridt. Først vil vi ændre roden fra
<path>/</path> (på installationsmediet) til <path>/mnt/gentoo</path>
(på dine partitioner) ved at bruge <c>chroot</c>. Derefter vil vi
skabe et nyt miljø ved at bruge <c>env-update</c>, som hovedsageligt
opretter miljø-variabler. Til sidst indlæser vi disse variabler ind i
hukommelsen, ved brug af <c>source</c>.
</p>

<pre caption = "Skifte til det nye miljø">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
 * Caching service dependencies...
# <i>source /etc/profile</i>
</pre>

<p>
Tillykke! Du er nu inde i dit eget Gentoo Linux miljø.
Selvfølgelig er det langt fra færdig, hvilket er derfor installationen
stadigvæk har nogle sektioner tilbage :-)
</p>

</body>
</subsection>
<subsection>
<title>Valgfrit: Opdatering af Portage-træet</title>
<body>

<p>
Hvis du ikke har installeret et Portage-snapshot i det sidste kapitel, bliver
du nødt til at hente det sidste nye Portage-træ fra Internet. <c>emerge --sync</c>
gør dette for dig. Andre brugere kan springe dette over og fortsætte med <uri
link="#configure_USE">Opsætning af USE-variabler</uri>.
</p>

<pre caption="Opdatering af Portage-træet">
# <i>emerge --sync</i>
</pre>

<p>
Portage bruger RSYNC protokollen til at opdatere Portage træet. Hvis
den ovenforstående kommando fejler pga. din firewall, brug da
<c>emerge-webrsync</c>, som henter og installerer et snapshot af
portage for dig ved brug af den almindelige HTTP protokol.
</p>
  	 
<pre caption="At opdatere Portage-træet med emerge-webrsync">
# <i>emerge-webrsync</i>
</pre>

<p>
Hvis du bliver advaret om, at der eksisterer en ny version af Portage og
at du skal opdatere Portage, bør du ignorere det. Portage
bliver opdateret for dig senere under installationen.
</p>

</body>
</subsection>
<subsection id="configure_USE">
<title>Opsætning af USE-variabler</title>
<body>

<warn>
Lav ikke nogle ændringer i USE-variabelen, hvis du udfører en stage3
med GRP-installation. Du kan ændre USE-variabelen efter at have installeret
pakkerne som du ønsker. Gremlins er kendte for at angribe dit system,
hvis du ignorerer denne advarsel!
</warn>

<p>
<c>USE</c> er en af de mest kraftfulde variabler, som Gentoo udbyder
til dens brugere. Mange programmer kam kompileres med eller uden
valgfri understøttelse af bestemte ting. For eksempel, kan nogle programmer
kompileres med gtk understøttelse, eller med qt understøttelse. Andre
kan kompileres med eller uden SSL understøttelse. Nogle programmer kan
endda kompileres med framebuffer understøttelse (svgalib) i stedet for 
X11-understøttelse (X-server).
</p>

<p>
De fleste distributioner kompilerer deres pakker med understøttelse for så
meget som muligt, hvilket forøger størrelsen og starttiden på
programmerne, for ikke at tale om de enorme mængder af afhængigheder.
Med Gentoo kan du selv definere, hvilke muligheder, dine pakker skal
kompileres med. Det er her <c>USE</c>, kommer ind i spillet.
</p>

<p>
I <c>USE</c>-variablen, definerer du nøgleord, som bliver lagt oven på
kompileringsparametrene. For eksempel vil <e>ssl</e> kompilere
ssl understøttelse ind i de programmer, der understøtter det. <e>-X</e> vil
fjerne understøttelse af X-server (bemærk minus-tegnet forrest).<e>gnome gtk
-kde -qt</e> vil kompilere dine programmer med gnome (og gtk) understøttelse,
men ikke med kde (og qt) understøttelse, hvilket gør dit system fuldt ud
fin-indstillet til GNOME.
</p>

<p>
Standard <c>USE</c>-indstillingerne er placeret i
<path>/etc/make.profile/make.defaults</path>.
Hvad du placerer i <path>/etc/make.conf</path> bliver udregnet mod
disse standardværdier. Hvis du lægger noget til <c>USE</c>-indstillingen,
bliver den lagt til standardlisten. Hvis du fjerner
noget fra <c>USE</c>-indstillingen (ved at placere et minus-tegn foran
det) så bliver det fjernet fra standardlisten (hvis det på noget
tidspunkt var til stede). Redigér <e>ALDRIG</e> noget i
<path>/etc/make.profile</path> biblioteket; det bliver overskrevet når
du opdaterer Portage!
</p>

<p>
En fuld beskrivelse af <c>USE</c> kan findes i den anden halvdel af
Gentoo-håndbogen, <uri link="?part=2&amp;chap=2">USE-flag</uri>.
En fuld beskrivelse er tilgængeligt. USE-flag kan blive fundet i dit system ved
<path>/usr/portage/profiles/use.desc</path>.
</p>

<pre caption="Se mulige USE-flag">
# <i>less /usr/portage/profiles/use.desc</i>
<comment>(Du kan scrolle ved bruge af pil-tasterne og afslutte ved at trykke 'q')</comment>
</pre>

<p>
Som et eksempel, viser vi en <c>USE</c>-indstilling til et KDE baseret system med DVD, ALSA og brænding af CD-ROM understøttelse:
</p>

<pre caption="Åbning af /etc/make.conf">
# <i>nano -w /etc/make.conf</i>
</pre>

<pre caption="USE indstilling">
USE="-gtk -gnome qt kde dvd alsa cdr"
</pre>

<p>
Du vil sikkert bruge en eller måske to locales på dit system. Indtil nu
efter samlingen af <c>glibc</c>, var et fuld sæt af locales være tilgængelige og
oprettet. Fra nu af kan du aktivere <c>userlocales</c> USE-flaget og specifere
kun de locales, du har brug for i <path>/etc/locales.build</path>.
</p>
  	 
<pre caption="Aktivering af userlocales USE-flag, specielt til glibc">
# <i>mkdir /etc/portage</i>
# <i>echo "sys-libs/glibc userlocales" >> /etc/portage/package.use</i>
</pre>
  	 
<p>
Specificer nu locales, som du ønsker at bruge:
</p>
  	 
<pre caption="nano -w /etc/locales.build">
en_US/ISO-8859-1
en_US.UTF-8/UTF-8
de_DE/ISO-8859-1
de_DE@euro/ISO-8859-15
</pre>

</body>
</subsection>
<subsection>
<title>Valgfrit: Brug af distribueret kompilering</title>
<body>

<p>
Hvis du er interesseret i at bruge en samling af systemer til at
hjælpe dig med kompilering af dit system, bør du overveje at tage et
kig på vores <uri link="/doc/da/distcc.xml">DistCC Guide</uri>.
Ved at bruge <c>distcc</c> kan du bruge processor kraften af flere
systemer til at hjælpe dig med installationen.
</p>

</body>
</subsection>
</section>
<section>
<title>Forskelle mellem Stage1, Stage2, og Stage3</title>
<body>

<p>
Sæt dig ned og tænk over de tidligere trin. Vi bad dig vælge
<e>stage1</e>, <e>stage2</e> eller <e>stage3</e> og advarede dig, om
at dit valg ville være vigtigt for de videre installationstrin.
Her er det første sted, hvor dit valg definerer de følgende trin.
</p>

<ul>
<li>
  Hvis du valgte <e>stage1</e>, så skal du følge <e>begge</e> trin i
  dette kapitel (startende med <uri link="#doc_chap3">Fra Stage1 til Stage2</uri>)
</li>
<li>
  Hvis du valgte <e>stage2</e> skal du kun springe det første
  trin over og straks starte med det andet trin (<uri
  link="#doc_chap3">Fra Stage2 til Stage3</uri>)
</li>
<li>
  Hvis du valgte <e>stage3</e> (enten med eller uden GRP) så kan du
  springe begge trin over og fortsætte med <uri
  link="?part=1&amp;chap=7">Opsætning af kernen</uri>
</li>
</ul>

</body>
</section>
<section>
<title>Fra Stage1 til Stage2</title>
<subsection>
<title>Introduktion til bootstrapping</title>
<body>

<p>
Så du vil kompilere alting fra bunden? jamen okay så :-)
</p>

<p>
I dette trin vil vi <e>bootstrappe</e> dit Gentoo system.
Dette tager lang tid, men resultatet er et system, som er blevet
optimeret, fra bunden og op, til din specifikke maskine og dine behov.
</p>

<p>
At <e>bootstrappe</e> betyder at man bygger GNU C biblioteket, GNU
Compiler Collection og flere andre nøgle-systemprogrammer. GNU
Compiler Collectionen skal enddag bygges to gange: Først med den
generelle compiler, som vi udbyder, og en anden gang med den compiler,
du lige har bygget.
</p>

<p>
Før vi starter med at bootstrappe, lister vi lige et par valgmuligheder du måske eller måske ikke vil have med. Hvis du ikke gider at læse dem, så fortsæt med <uri link="#bootstrap">Bootstrap af systemet</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Valgfrit: Hent kildekoden først</title>
<body>

<p>
Hvis du ikke har kopieret alt kildekoden til dit system tidligere, så
vil bootstrap-scriptet automatisk hente alle de nødvendige filer.
Dette virker selvfølgelig kun hvis dit netværk virker :-)
Hvis du vil hente kildekoden først og så senere bootstrappe system
(f.eks. fordi du ikke vil have din internet forbindelse åben under
kompilering) så kan du bruge <e>-f</e> (bogstavet f for det engelske
fetch) parameteren på bootstrap-scriptet,
det vil resultere i at den henter alt kildekoden for dig.
</p>

<pre caption = "Download den nødvendige kildekode">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh -f</i>
</pre>

</body>
</subsection>
<subsection id="bootstrap">
<title>Bootstrappe af systemet</title>
<body>

<p>
Okay så, tag dit keyboard og tast den næste kommando ind for at starte
bootstrap-processen. Gå derefter et eller andet sted hen og underhold
dig selv fordi det her kommer til at tage en god del tid, at blive færdig med.
</p>

<pre caption = "At bootstrappe systemet">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>

<p>
Forsæt nu med det næste trin, <uri link="#doc_chap4">Fra Stage2 til Stage3</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Fra Stage2 til Stage3</title>
<subsection>
<title>Introduktion</title>
<body>

<p>
Hvis du læser denne sektion, så har du et bootstrappet system (enten
fordi du selv har bootstrappet tidligere, eller fordi du bruger en
<e>stage2</e>). Du skal nu til at bygge alle systempakkerne.
</p>

<p>
<e>Alle</e> systempakkerne? Nej ikke rigtigt. I dette trin bygger du
de system pakker, hvor der ikke er nogle alternativer til, og som skal
bruges til et virkende system. Nogle system pakker har flere
alternativer (så som system loggere) og eftersom Gentoo, handler om
valg, så vil vi ikke tvinge en type ned over hovedet på dig.
</p>

</body>
</subsection>
<subsection>
<title>Valgfrit: Oversigt over hvad der bliver lavet</title>
<body>

<p>
Hvis du vil vide hvilke pakker, der vil blive installeret, så kan du køre
<c>emerge --pretend system</c>. 
Dette vil vise en liste med alle pakker der vil blive kompileret.
Eftersom den liste er rimelig stor skal du nok bruge en pager som
f.eks. <c>less</c> eller <c>more</c> til at gå op og ned gennem listen.
</p>

<pre caption = "Vis hvad 'emerge system' vil gøre">
# <i>emerge --pretend system | less</i>
</pre>

</body>
</subsection>
<subsection>
<title>Valgfrit: Hente kildekoder</title>
<body>

<p>
Hvis du vil have <c>emerge</c> til at downloade kildekoden, før du
fortsætter (f.eks. fordi du ikke vil have internet-forbindelsen åben,
mens du kompilerer alle pakkerne) så kan du bruge <e>--fetchonly</e>
parametren til <c>emerge</c>, som vil hente alt kildekode for dig.
</p>

<pre caption = "Hentning af kildekoder">
# <i>emerge --fetchonly system</i>
</pre>

</body>
</subsection>
<subsection>
<title>Opbygning af systemet</title>
<body>

<p>
For at starte opbygningsprocessen af system, skal du køre <c>emerge
system</c>. Dette trin tager forholdsvis lang tid at færdiggøre så find
på noget andet at lave end at stirre ind i skærmen.
</p>

<pre caption = "Opbygning af systemet">
# <i>emerge system</i>
</pre>

<p>
Du kan nu med sikkerhed ignorere alle advarsler omkring de opdaterede
opsætningsfiler (og køre <c>etc-update</c>). Når dit Gentoo system er
fuldt installeret og genstartet, læs da vores dokumentation omkring <uri
link="?part=3&amp;chap=2#doc_chap3">opsætning af filbeskyttelse</uri>.
</p>

<p>
Når opbygningen er færdig, skal du forsætte med <uri
link="?part=1&amp;chap=7">Opsætning af kernen</uri>.
</p>

</body>
</subsection>
</section>

</sections>
