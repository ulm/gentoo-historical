<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-working-variables.xml,v 1.3 2004/05/16 17:22:18 broeman Exp $ -->

<sections>
<section>
<title>Miljø-variabler?</title>
<subsection>
<title>Hvad de er</title>
<body>

<p>
En miljø-variabel er et navngivent objekt, der inderholder informationer, som
bliver benyttet af en eller flere applikationer. Mange brugere (specielt dem 
der er nye i Linux) finder det en smule mærkeligt eller uhåndterligt. Dette er
dog forkert; ved at bruge miljø-variabler, kan man let skifte en indstilling for 
en eller flere applikationer.
</p>

</body>
</subsection>
<subsection>
<title>Vigtige eksempler</title>
<body>

<p>
Den følgende tabel viser en række af variabler, der benyttes af et Linux system 
og beskriver deres brug. Eksempelværdier er præsenteret efter tabellen.
</p>

<table>
<tr>
  <th>Variabel</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
    Denne variabel indeholder en kolonsepareret liste over mapper, som 
    dit system leder i efter eksekverbare filer. Hvis du indtaster et navn på
    en eksekverbar fil (som f.eks. <c>ls</c>, <c>rc-update</c> eller <c>emerge</c>),
    og denne fil ikke er placeret i en af de oplistede mapper, vil dit system 
    ikke eksekvere den (medmindre du angiver den fulde sti som kommando, f.eks. 
    <c>/bin/ls</c>).
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
    Denne variabel har samme funktion som <c>PATH</c>, men denne bestemmer kun 
    hvilke mapper, som skal tjekkes når root-brugeren indtaster en kommando.
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
    Denne variabel indeholder en kolonsepareret liste over mapper, som den 
    'dynamiske linker' søger igennem, for at finde et bibliotek.
  </ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>
    Denne variabel indeholder en kolonsepareret liste over mapper, som 
    kommandoen <c>man</c> søger i, efter man-siderne.
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
    Denne variabel indeholder en kolonsepareret liste over mapper, som 
    kommandoen <c>info</c> søger i, efter info-siderne.
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
    Denne variabel indeholder stien til det program, der benyttes til at vise
    indholdet af en fil med (som f.eks. <c>less</c> eller <c>more</c>).
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
    Denne variabel indeholder stien til det program, der benyttes til at ændre
    indholdet af filer med (som f.eks. <c>nano</c> eller <c>vi</c>).
  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
    Denne variabel indeholder en kolonsepareret liste over mapper, som 
    indeholder KDE-specifikt materiale.
  </ti>
</tr>
<tr>
  <ti>CLASSPATH</ti>
  <ti>
    Denne variabel indeholder en kolonsepareret liste over mapper, som
    indeholder Java-klasser.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
    Denne variabel indeholder en <e>mellemrums</e>-adskilt liste over mapper,
    der skal beskyttes af Portage under opdateringer.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
    Denne variabel indeholder en <e>mellemrums</e>-adskilt liste over mapper,
    der ikke skal beskyttes af Portage under opdateringer. 
  </ti>
</tr>
</table>

<p>
Nedenfor finder du et eksempel af en definition af alle disse variabler:
</p>

<pre caption="Eksempeldefinitioner">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CLASSPATH="/opt/blackdown-jre-1.4.1/lib/rt.jar:."
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf"
</pre>

</body>
</subsection>
</section>
<section>
<title>Definition af variabler globalt</title>
<subsection>
<title>Mappen /etc/env.d</title>
<body>

<p>
For at centralisere definitionerne af disse variable, introducerer Gentoo 
mappen <path>/etc/env.d</path>. I denne mappe finder du en række af filer, som 
<path>00basic</path>, <path>05gcc</path> etc., der indeholder variablerne som 
applikationernes filnavne antyder, har brug for.
</p>

<p>
Da du f.eks. installerede <c>gcc</c>, blev en fil kaldet <path>05gcc</path> 
oprettet, af den ebuild, der indeholder definitionerne på de følgende variabler:
</p>

<pre caption="/etc/conf.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
Andre distributioner vil fortælle dig, at du skal ændre eller tilføje sådanne 
miljø-variabeldefinitioner i <path>/etc/profile</path> eller andre steder. 
Gentoo gør på den anden side det let for dig (og for Portage), at vedligeholde
og administrere miljø-variablerne uden at skulle lægge mærke til rækken af filer,
der kan indeholde miljø-variabler.
</p>

<p>
Når f.eks. <c>gcc</c> bliver opdateret, bliver filen <path>/etc/env.d/05gcc</path> 
også opdateret, uden at kræve nogen som helst interaktion fra brugeren. 
</p>

<p>
Dette er ikke kun til fordel for Portage, men også for dig som bruger. Fra tid
til anden kan du blive spurgt, om du vil sætte en bestemt miljøvariabel for hele
systemet. Som et eksempel tager vi variablen <c>http_proxy</c>. I stedet for at
rode med <path>/etc/profile</path>, kan du nu oprette en fil 
(<path>/etc/env.d/99local</path>) og indtaste din(e) definition(er) i den:
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
Ved at benytte samme fil til alle dine variabler, har du et hurtigt overblik 
over de variabler, du har defineret selv. 
</p>

</body>
</subsection>
<subsection>
<title>Scriptet env-update</title>
<body>

<p>
Flere filer i <path>/etc/env.d</path> definerer variablen <c>PATH</c>. Dette er
ikke forkert; når du kører <c>env-update</c>, vil det tilføje de flere 
definitioner før den opdaterer miljø-variablerne, og gør det dermed nemmere for 
pakker (eller brugere) at tilføje deres egen opsætning af miljø-variablerne, uden
at forstyrre de allerede eksisterende værdier.
</p>

<p>
Scriptet <c>env-update</c> vil tilføje værdierne i den alfabetiske rækkefølge 
af <path>/etc/env.d</path> filerne. Dette er årsagen til mange af filerne i 
<path>/etc/env.d</path> begynder med et nummer.
</p>

<pre caption="Opdateringsrækkefølge benyttet af env-update">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
Når du kører <c>env-update</c>, vil scriptet automatisk oprette alle 
miljøvariablerne og placere dem i <path>/etc/profile.env</path> (som er brugt 
af <path>/etc/profile</path>). Det vil også trække informationen ud fra 
variablen <c>LDPATH</c>, og bruge den til at oprette 
<path>/etc/ld.so.conf</path>.
Efter dette, vil det køre <c>ldconfig</c> for at genskabe filen 
<path>/etc/ld.so.cache</path>, der benyttes af den 'dynamiske linker'.
</p>

<p>
Hvis du vil se effekten af <c>env-update</c> straks efter du har kørt det, kør 
den følgende kommando for at opdatere dit miljø. Brugere, der selv har 
installeret Gentoo, vil sikkert huske dette fra installationsinstruktionerne:
</p>

<pre caption="Opdatering af miljøet">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Definering af variabler lokalt</title>
<subsection>
<title>Brugerspecifikt</title>
<body>

<p>
Det er ikke altid, du vil definere dine miljø-variabler globalt. F.eks. har du måske 
lyst til at tilføje <path>/home/min_bruger/bin</path> til variablen <c>PATH</c>,
men du vil ikke have, at alle andre brugere på dit system også skal have det i 
deres <c>PATH</c>. Hvis du vil definere en miljøvariabel lokalt, skal du bruge
<path>~/.bashrc</path> eller <path>~/.bash_profile</path>:
</p>

<pre caption="Udvidelse af PATH til lokalt brug i ~/.bashrc">
PATH="${PATH}:/home/min_bruger/bin"
</pre>

<p>
Når du logger ind igen, vil variablen <c>PATH</c> være opdateret.
</p>

</body>
</subsection>
<subsection>
<title>Sessionsspecifikt</title>
<body>

<p>
Nogle gange er der behov for endnu strengere definitioner. Du vil
måske gerne være i stand til at benytte binære filer fra en
midlertidigt mappe, som du har oprettet, uden at bruge stien til de
binære filer, eller ændre i <path>~/.bashrc</path> til de få gange, du
har brug for den.
</p>

<p>
I sådant et tilfælde kan du blot definere variablen <c>PATH</c> i din 
nuværende session, ved at bruge kommandoen <c>export</c>. Så længe du ikke 
logger ud, vil variablen <c>PATH</c> bruge de midlertidige indstillinger.
</p>

<pre caption="Definering af en sessionsspecifik miljø-variabel">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>
