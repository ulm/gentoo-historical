<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-install-ppc-kernel.xml,v 1.8 2005/05/29 20:46:18 broeman Exp $ -->

<sections>

<version>2.4</version>
<date>2005-04-16</date>

<section>
<title>Tidszone</title>
<body>
  	 
<p>
Du bliver først nødt til at vælge din tidszone så. at dit system ved
hvor det er lokaliseret. Kig efter din tidszone i
<path>/usr/share/zoneinfo</path>, og lav derefter en symbolsk
henvisning til <path>/etc/localtime</path> ved brug af <c>ln</c>:
</p>
  	 
<pre caption="At sætte tidszone informationen">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Hvis du vil bruge GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>
  	 
</body>
</section>

<section>
<title>Installation af kildekoderne</title>
<subsection>
<title>Valg af kerne</title>
<body>

<p>
Kernen omkring alle distributioner er bygget på Linux-kernen. Det er et
lag imellem bruger-programmer og dit systems hardware. Gentoo giver dens
brugere flere forskellige mulige kerne-kildekoder. En fuld liste med 
beskrivelser forefindes i <uri link="/doc/da/gentoo-kernel.xml">Gentoo 
Linux kerne vejledning</uri>. 
</p>

<p>
Til PPC kan du vælge imellem <c>vanilla-sources</c> og <c>gentoo-sources</c>
(begge 2.6-kerner). Den sidste er tilgængelig, når du udfører en netværksfri installation.
Udover disse, er der en speciel 2.6-kerne-patchsæt til Pegasos: 
<c>pegasos-dev-sources</c>. Så lad os fortsætte med at <c>emerge</c> kerne-kildekoderne:
</p>
  	 
<pre caption="Installation af kerne-kildekode">
# <i>emerge gentoo-sources</i>
</pre>

<note>
PowerPC-kildekoder er baseret på 2.6.10-kernen med sikkerhedspatches fra 2.6.11 tilbageført.
På tidspunktet af udgivelsen har 2.6.11-kernen produceret en del problemer på
forskellige PowerPC-maskiner.
</note>

<p>
Når du tager et kig i <path>/usr/src</path>, burde du se en genvej 
kaldet <path>linux</path>, som peger mod din kerne-kildekode. Vi forudsætter at
kerne-kildekoderne, som er installeret er <c>gentoo-sources-2.6.10-r8</c>:
</p>

<pre caption="Se genvej til kerne-kildekode">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           22  Mar 18 16:23 /usr/src/linux -&gt; linux-2.6.10-gentoo-r8
</pre>

<p>
Hvis genvejen ikke peger til kerne-kildekoderne, som du valgte (noter
at <c>linux.2.6.10-gentoo-r8</c> kun er et eksempel) bør du ændre
genvejen før du fortsætter:
</p>

<pre caption="Ændring af genvejen til kerne-kildekode">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.10-gentoo-r8 linux</i>
</pre>

<p>
Nu er det tid til at opsætte og kompilere din kernes kildekoder. Alle
arkitekturer kan bruge <c>genkernel</c> til dette, som vil bygge en omfattende
kerne, som også er brugt på installationsCDen. Vi forklarer dog den "manuelle" 
opsætning først, idet det er den bedste metode til at optimere dit system.
</p>

<p>
Hvis du vil opsætte din kerne manuelt, forsæt nu med <uri
link="#manual">Standard: Manuel opsætning</uri>. Hvis du vil bruge
<c>genkernel</c>, bør du læse <uri link="#genkernel">Alternativ: Brug
af genkernel</uri> i stedet for.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Standard: Manuel opsætning</title>
<subsection>
<title>Introduktion</title>
<body>

<p>
At opsætte kernen manuelt bliver ofte anset som det sværeste, som enhver
Linux-bruger skal gå igennem. Intet er mindre rigtigt -- efter
opsætninger af nogle kerner, vil du ikke kunne huske at det var svært ;)
</p>

<p>
Én ting er dog <e>rigtigt</e>: du skal kende dit system, når du starter med at
opsætte en kerne manuelt. De fleste informationer kan blive indsamlet ved at se
på indholdet af <path>/proc/pci</path> (eller ved at bruge <c>lspci</c>, hvis 
den er tilgængelig). Du kan også køre <c>lsmod</c> for at se hvilke 
kerne-moduler, installationsCDen bruger (det vil måske give dig en god idé om hvad du 
skal aktivere).
</p>

<p>
Gå nu til kerne-kildekode mappen og udfør <c>make menuconfig</c>. Dette
vil starte en ncurses-baseret opsætningsmenu.
</p>

<pre caption="Påkalde menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Du vil blive hilst af flere opsætningssektioner. Vi vil først give dig
en liste af de valgmuligheder, som du skal aktivere (ellers vil Gentoo
ikke funktionere, eller funktionere ordentligt uden ekstra
finindstillinger).
</p>

</body>
</subsection>
<subsection>
<title>Aktivering af krævede valgmuligheder</title>
<body>

<p>
Først skal du aktivere brugen af udviklings- og forsøgskoder/-drivere.
Du vil få brug for dette, ellers vil meget vigtige koder/drivere ikke vise sig:
</p>

<pre caption="Valg af eksperimentielle koder/drivere">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Gå nu til <c>File Systems</c> og vælg understøttelse til de filsystemer, som 
du bruger. Kompiler dem <e>ikke</e> som moduler, ellers vil dit Gentoo system 
ikke have mulighed for at montere dine partitioner. Vælg også <c>Virtual memory</c> og 
<c>/proc file system</c>. Vælg <e>ikke</e> <c>/dev file system</c>.
</p>

<pre caption="Valg af nødvendige filsystemer">
File systems ---&gt;
 Pseudo Filesystems ---&gt;
   [*] /proc file system support
   [ ] /dev file system support (OBSOLETE)
   [*] Virtual memory file system support (former shm fs)

<comment>(Vælg en eller flere af de følgende valgmuligheder, som er nødvendige for dit system)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Hvis du bruger PPPoE til at forbinde til Internettet eller du bruger en opkaldsmodem, vil du få brug for de følgende valgmuligheder i kernen:
</p>

<pre caption="Valg af PPPoE nødvendige drivere">
 Device Drivers ---&gt;
   Networking support ---&gt;
     &lt;*&gt; PPP (point-to-point protocol) support
     &lt;*&gt;   PPP support for async serial ports
     &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
De to kompressionsvalgmuligheder vil ikke være ubrugelige, men er slet ikke 
nødvendige, det samme med <c>PPP over Ethernet</c> valgmuligheden, som måske 
vil blive brugt af <c>rp-pppoe</c>, når den er opsat til at lave kerne-modus 
PPPoE.
</p>

<p>
Hvis du kræver det, glem ikke at inkludere understøttelse af dit netkort
i kernen.
</p>

<p>
Fravælg alle ADB raw keycodes:
</p>

<pre caption="Fravælg ADB raw keycodes">
Macintosh Device Drivers ---&gt;
  [ ] Support for ADB raw keycodes
</pre>

<p>
Vælg også den korrekte RTC-understøttelse (<e>fravælg</e> <c>Enhanced RTC</c> 
valgmuligheden):
</p>

<pre caption="Aktivering af den korrekte RTC valgmulighed">
Character devices ---&gt;
  [ ] Enhanced RTC

General setup ---&gt;
  [*] Support for /dev/rtc
</pre>

<p>
Brugere af "OldWorld" maskiner bør have HFS-understøttelse, så de kan 
kopiere kompilerede kerner til MacOS-partitionen. Dette gælder også til
NewWorld-maskiner, som er nødvendig for den specielle Apple_Bootstrap-partition:
</p>

<pre caption="Aktivering af HFS-understøttelse">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
Når du er færdig med at opsætte din kerne, fortsæt med <uri
link="#compiling">Kompilering og installation</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilering og installation</title>
<body>

<p>
Nu da din kerne er opsat, er det tid til at kompilere og installere den. 
Afslut opsætningen (Exit) og kør kommandoerne, som vil kompilere kernen:
</p>

<pre caption="Kompilering af kerne">
# <i>make all &amp;&amp; make modules_install</i>
</pre>

<p>
Når kernen er færdig med at kompilere, kopier den da over til
<path>/boot</path> (vær sikker på at den er mountet rigtigt på Pegasos).
</p>

<pre caption="Installation af kerne">
<comment>Erstat 2.6.10 med din kerne-version</comment>
(Apple/IBM)  # <i>cp vmlinux /boot/kernel-2.6.10</i>
(Pegasos)    # <i>cp arch/ppc/boot/images/zImage.chrp /boot/kernel-2.6.10</i>
</pre>

<p>
Det er også klogt at kopiere din kerneopsætningsfil til
<path>/boot</path>, bare for en sikkerheds skyld :)
</p>

<pre caption="Backup af din kerneopsætning">
# <i>cp .config /boot/config-2.6.10-gentoo-r8</i>
</pre>

<p>
Fortsæt nu med <uri link="#kernel_modules">Installation af separate
kernemoduler</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Installation af separate kernemoduler</title>
<subsection>
<title>Opsætning af moduler</title>
<body>

<p>
Du bør opliste de moduler, som du vil have automatisk hentet, i <path>/etc/modules.autoload.d/kernel-2.6</path>. Du kan også tilføje ekstra valgmuligheder til modulerne, hvis du vil.
</p>

<p>
For at se alle de tilgængelige moduler, kør følgende <c>find</c>-kommando. Glem ikke
at udskifte "&lt;kernel version&gt;" med den version af kernen, du lige
har kompileret:
</p>

<pre caption="Se alle mulige moduler">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
For automatisk at hente f.eks <c>3c59x.o</c> modulet, skal du ændre
<path>kernel-2.6</path>-filen og skrive
modulnavnet i den.
</p>

<pre caption="At redigere /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Fortsæt nu med installationen med <uri link="?part=1&amp;chap=8">Opsætning
af dit system</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativ: Brug af genkernel</title>
<body>

<p>
Hvis du læser denne sektion, så har du valgt at bruge vores <c>genkernel</c>
script til at opsætte din kerne for dig.
</p>

<p>
Nu da dit kerne-kildekodetræ er installeret, er det tid til at kompilere din
kerne ved at bruge vores <c>genkernel</c> script til at automatisk bygge en 
kerne for dig. <c>genkernel</c> virker ved at opsætte en kerne, næsten 
identisk med hvordan vores LiveCD-kerne er blevet opsat. Dette betyder, at når 
du bruger <c>genkernel</c> til at bygge din kerne, vil dit system generelt 
finde alt dit hardware ved opstart, ligesom din installationsCD gør. Fordi at genkernel 
ikke kræver nogen manuel kerneopsætning, er den en ideel løsning for
de brugere, som ikke føler sig veltilpas med at kompilere deres egne kerner.
</p>

<p>
Lad os nu se hvordan vi bruger genkernel. Først skal du emerge
genkernelens ebuild:
</p>

<pre caption="Emerge genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Dernæst kopier kerneopsætningen brug af installationsCDen til placeringen,
hvor genkernel kigger efter standard kerneopsætninger:
</p>

<pre caption="Kopiering af installationsCDens kerneopsætnings">
# <i>zcat /proc/config.gz > /usr/share/genkernel/ppc/kernel-config-2.6</i>
</pre>

<p>
Du skal nu samle dine kerne-kildekoder ved at køre <c>genkernel --udev all</c>.
Vær agtsom på at <c>genkernel</c> samler en kerne, som understøtter det meste
hardware, derfor tager den en del tid!
</p>

<p>
Noter at, hvis din partition, hvor kernen skal være placeret, ikke bruger
ext2 eller ext3 som filsystem, skal du måske manuelt opsætte din kerne ved
brug af <c>genkernel --menuconfig all</c> og tilføje understøttelse til dit filsystem
<e>i</e> kernen (dvs. <e>ikke</e> som modul). Brugere af EVMS2 eller LVM2 vil sikkert
ønske også at tilføje <c>--evms2</c> eller <c>--lvm2</c> som argument.
</p>

<pre caption="Start af genkernel">
# <i>genkernel --udev all</i>
</pre>

<p>
Når <c>genkernel</c> afslutter, vil en kerne, et fuld sæt af moduler og
<e>initial root disk</e> (initrd) være færdiggjort. Vi vil bruge kernen
og initrd, når vi opsætter en boot-loader senere i dette dokument. Skriv
navnene på kernen og initrd ned, da du vil få brug for dem, når du skriver til
boot-loaderens opsætningsfil. Initrd vil blive startet med det samme efter
at opstartsprocessen udfører automatisk-hardwarefinding (ligesom på LiveCDen) 
før dit "rigtige" system starter op. Vær sikker på også at kopiere de rigtige
opstartsargumenter, da disse er krævet for en succesfuld opstart med genkernel.
</p>

<pre caption="Tjekker oprettelsen af kerne-billedfils navn og initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Lad os nu udføre et trin mere, for at få vores system til at blive mere som 
installationsCDen -- lad os emerge <c>coldplug</c>. Imens initrd automatisk finder 
hardware, som der er brug for til at starte dit system, vil <c>coldplug</c> 
automatisk finde alt andet.
For at emerge og aktivere <c>coldplug</c>, tast følgende:
</p>

<pre caption="Emerge og aktivering af coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>
  	 
<p>
Hvis du vil have at dit system reagerer på hotplug-aktiviter, vil du også få brug for
at installere og indstille hotplug:
</p>

<pre caption="Emerge og aktivering af hotplug">
# <i>emerge hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

<p>
Fortsæt nu med <uri link="?part=1&amp;chap=8">Opsætning af dit system</uri>.
</p>

</body>
</section>
</sections>
