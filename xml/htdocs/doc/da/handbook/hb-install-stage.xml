<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-install-stage.xml,v 1.2 2004/01/23 00:42:09 aaby Exp $ -->

<sections>
<section>
<title>Vælg den rigtige etape</title>
<body>

<p>
Da vi bad dig om at vælge et installationsmedie (LiveCDer,
eksisterende distributioner osv.), forklarede vi hvilke fordele og
ulemper, der var.  En af disse var valg af en installationsetape
(herefter kaldet stage): hvis du går efter en fuld kompilering
(<e>stage1</e>), springe over bootstrapping (<e>stage2</e>), eller
starte fra et prækompileret stadie (<e>stage3</e>)?
</p>

<p>
Afhængigt af dit installationsmedie, kan du stadig foretage dit
valg. Andre vil allerede have valgt i starten af installationen.
Det er nu tid til at installere dit valg af stage.
</p>

<p>
De følgende to sektioner forklarer, hvordan du installerer din
foretrukne stage. Standard-muligheden er her, at hente den valgte
stage fra Internet. Der er dog nogle LiveCDer som har disse
stages, klarlagt på CDen.
</p>

<p>
Hvis du har en fungerende Internet-forbindelse, rådes du til at bruge
standard-muligheden. Har du ikke en fungerende Internet-forbindelse,
eller vil du installere Gentoo ved brug af GRP (præ-kompilerede
pakker), så skal du vælge den alternative måde.
</p>

<ul>
 <li><uri link="#doc_chap2">Standard: At hente fra Internet</uri></li>
 <li><uri link="#doc_chap3">Alternativ: Brug af en Stage-fil fra LiveCDen</uri></li>
</ul>

</body>
</section>
<section>
<title>Standard: At hente fra Internet</title>
<subsection>
<title>Hentning af stage-tarball</title>
<body>

<p>
Skift til dit Gentoo mountpoint, hvor du mountede dit filsystem (højst
sandsynligt <path>/mnt/gentoo</path>):
</p>

<pre caption="Gå til Gentoo-mountpunkt">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Afhængigt af dit installationsmedie, har du et par forskellige
værktøjer tilgængeligt til at hente en stage.
Hvis du har <c>lynx</c> til rådighed, så kan du med det samme surfe
hen til <uri link="/main/en/mirrors.xml">Gentoo filspejl-listen</uri>
og vælge et filspejl nær ved dig.
Vælg så <path>releases/</path> biblioteket, efterfulgt af din
arkitektur (for eksempel <path>x86/</path>) og Gentoo version
(<path>1.4/</path>), afslut med at gå ind i <path>stages/</path>
biblioteket. Der skulle du gerne se alle tilgængelige stage-filer, til
din arkitektur. Vælg en og tryk på <c>D</c> for at hente den.
Når du er færdig tryk da på <c>Q</c> for at lukke browseren.
</p>

<pre caption="Surfe til filspejl-listen med lynx">
# <i>lynx http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Hvis du ikke har <c>lynx</c>, så burde du have <c>links2</c>
til rådighed.
<c>links2</c> er mere kraftfuld end <c>lynx</c>, men den har nogle
svagheder. En af dem er, at den ikke kigger på de proxy-variabler, vi
tidligere har sat. Hvis du skal bruge en proxy, så brug
<c>links2 -http-proxy proxy.server.com:8080</c>. Herfra skal du følge
de samme trin som i <c>lynx</c>, eftersom disse er ens.
</p>

<pre caption="Surf til filspejl-listen med links2">
<comment>(Uden proxy:)</comment>   
# <i>links2 http://www.gentoo.org/main/en/mirrors.xml</i>
<comment>(Med proxy:)</comment>      
# <i>links2 -http-proxy proxy.server.com:8080 http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Hvis du vil tjekke integriteten af den downloadede stage tarball, brug da
<c>md5sum</c> og sammenlign outputtet med den MD5 checksum der er på filspejlet.
</p>
  	 
<pre caption="At tjekke integriteten af en stage tarball">
# <i>md5sum stage1-x86-20030910.tar.bz2</i>
6cda1cc745ba882731ac07fbae0dd973  stage1-x86-20030910.tar.bz2
</pre>


</body>
</subsection>
<subsection>
<title>Udpakning af en stage tarball</title>
<body>

<p>
Nu skal vi udpakke din hentede stage-fil til dit system. Vi bruger GNUs
<c>tar</c> til dette, eftersom det er det nemmeste:
</p>

<pre caption="Udpakning af stagen">
# <i>tar -xvjpf stage?-*.tar.bz2</i>
</pre>

<p>
Sørg for at du bruger de samme parametre (<c>-xvjpf</c>).
<c>x'et</c> står for <e>Extract</e>, <c>v'et</c> står for
<e>Verbose</e> (denne er valgfri), <c>j'et</c> står for <e>Decompress
with bzip2</e>, <c>p'et</c> står for <e>Preserve permissions</e> og
<c>f'et</c> pointerer at vi vil udpakke en fil, i stedet for standard input.
</p>

<p>
Færdig? Okay, du er nu klar til at fortsætte med den næste sektion på
<uri>link="#doc_chap4">Opsætning af kompileringsparametre</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternativ: Brug af en stage-fil fra LiveCDen</title>
<subsection>
<title>Udpakning af stage-tarball</title>
<body>

<p>
De forskellige etaper på CDen ligger i <path>/mnt/cdrom/stages</path>
biblioteket.  For at se en liste af tilgængelige stage-filer, brug
<c>ls</c>:
</p>

<pre caption="Liste af tilgængelige stage-filer">
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Hvis systemet svarer med en fejl, er det måske fordi du skal mounte
CDROM-drevet først:
</p>

<pre caption="Mounting af CDROM-drevet">
# <i>ls /mnt/cdrom/stages</i>
ls: /mnt/cdrom/stages: No such file or directory
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom</i>
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Gå nu ind i dit Gentoo mountpunkt (som regel <path>/mnt/gentoo</path>):
</p>

<pre caption="Skift bibliotek til /mnt/gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Vi vil nu udpakke den valgte stage-tarball.  Vi vil gøre dette ved
brug af af GNU <c>tar</c> værktøjet.  Sørg for at bruge de samme
parametre (<c>-xvjpf</c>)! I det næste eksempel vil vi udpakke
<path>stage3-20031011.tar.bz2</path>.  Sørg for at udskifte
tarball-filnavnet med den valgte stage-fil.
</p>

<pre caption="Udpakning af stage-tarball">
# <i>tar -xvjpf /mnt/cdrom/stages/stage3-20031011.tar.bz2</i>
</pre>

</body>
</subsection>
<subsection>
<title>Installation af Portage-snapshot og kildekode</title>
<body>

<p>
Der er et Portage-snapshot tilgængeligt på nogle LiveCDer. Siden du
læser dette, kan vi formode at du bruger sådan en LiveCD, til at
installere dette snapshot.
Tag et kig på <path>/mnt/cdrom/snapshots/</path> for at se hvilke
snapshot vi har tilgængelig:
</p>

<pre caption="Kig på indholdet af /mnt/cdrom/snapshots">
# <i>ls /mnt/cdrom/snapshots</i>
</pre>

<p>
Udpak nu et snapshot med den følgende opbygning.  Igen skal du sørge
for de korrekte parametre til <c>tar</c>. Derudover er <c>-C</c> med
et stort <c>C</c>, ikke et lille <c>c</c>.  I det næste eksempel
bruger vi <path>portage-20031011.tar.bz2</path>, som snapshot filnavn.
Sørg for at erstatte det med dit snapshot.
</p>

<pre caption="Udpakning af Portage-snapshot">
# <i>tar -xvjf /mnt/cdrom/snapshots/portage-20031011.tar.bz2 -C /mnt/gentoo/usr</i>
</pre>

<p>
Du skal også kopiere alt kildekoden fra CDen.
</p>

<pre caption="Kopiering af kildekoden">
# <i>mkdir /mnt/gentoo/usr/portage/distfiles</i>
# <i>cp /mnt/cdrom/distfiles/* /mnt/gentoo/usr/portage/distfiles/</i>
</pre>

<p>
Hvis du vil bruge GRP (præ-kompilerede binære pakker), så læs dette.
Ellers fortsæt med <uri link="#doc_chap4">Opsætning af
kompileringsparametre</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Valgfrit: Forberedelse af GRP</title>
<body>

<p>
Hvis du vil installere Gentoo ved brug af GRP (præ-kompilerede
pakker), skal du kopiere alle pakkerne over på dit filsystem, således
at Portage kan bruge dem.
</p>

<pre caption="Kopiering af præ-kompilerede pakker">
# <i>mkdir -p /mnt/gentoo/usr/portage/packages/All</i>
# <i>cp /mnt/cdrom/packages/All/* /mnt/gentoo/usr/portage/packages/All/</i>
</pre>

<p>
Forsæt nu med <uri link="#doc_chap4">Opsætning af kompileringsparametre</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Opsætning af kompileringsparametre</title>
<subsection>
<title>Introduktion</title>
<body>

<p>
For at optimere Gentoo kan du sætte et par variable, som har
inflydelse på den måde Portage opfører sig.
Alle disse variabler kan sættes som miljø variable (ved brug af
<c>export</c>), men det er ikke permanent.  For at gemme din
opsætning, kommer Portage med <path>/etc/make.conf</path>, en
opsætningsfil til Portage.  Det er denne fil, vi nu vil rette i.
</p>

<note>
En kommenteret liste af alle mulige variable, kan findes i
<path>/mnt/gentoo/etc/make.conf(.example)</path>.
For at få en fungerende Gentoo installation, behøver du kun at sætte de
variabler, som er nævnt herunder.
</note>

<p>
Åben dit favorit redigeringsprogram (i denne guide bruger vi <c>nano</c>), så vi
kan komme i gang med at ændre de optimeringsvariabler, vi vil diskutere herefter.
</p>

<pre caption="Åbning af /etc/make.conf">
# <i>nano -w /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Som du nu sikkert har lagt mærke til, er
<path>make.conf(.example)</path>-filen struktureret på en generel
måde: kommentar-linier, som starter med "#" og andre linier, som
definerer variabler ved brug af <c>VARIABLE="indhold"</c> syntaxen.
Flere af disse variabler bliver diskuteret i næste trin.
</p>

</body>
</subsection>
<subsection>
<title>CHOST</title>
<body>

<warn>
Selvom det måske kan være interessant for ikke-stage1 brugere, så skal
de <e>IKKE</e> udskifte deres <c>CHOST</c>-opsætning i
<path>make.conf</path>.  Gør man dette, bliver systemet måske
ubrugeligt. Igen: Du skal kun ændre denne variabel, hvis du bruger en
<e>stage1</e>-installation.  </warn>

<p>
<c>CHOST</c>-variablen definerer hvilken arkitektur, <c>gcc</c> skal
kompilere programmerne til.  Mulighederne er:
</p>

<table>
<tr>
  <th>Arkitektur</th>
  <th>Underarkitektur</th>
  <th>CHOST opsætning</th>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i386</ti>
  <ti>i386-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i486</ti>
  <ti>i486-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i586</ti>
  <ti>i586-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i686 og derover (inkl. Athlon)</ti>
  <ti>i686-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>alpha</ti>
  <ti></ti>
  <ti>alpha-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>ppc</ti>
  <ti></ti>
  <ti>powerpc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>sparc</ti>
  <ti></ti>
  <ti>sparc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>(generic)</ti>
  <ti>hppa-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>pa7000</ti>
  <ti>hppa1.1-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>pa8000 og derover</ti>
  <ti>hppa2.0-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>mips</ti>
  <ti></ti>
  <ti>mips-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>amd64</ti>
  <ti></ti>
  <ti>x86_64-pc-linux-gnu</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>CFLAGS og CXXFLAGS</title>
<body>

<p>
<c>CFLAGS</c>- og <c>CXXFLAGS</c>-variablerne definerer optimeringsflag
til <c>gcc</c>, med C og C++ kompilerne i den rækkefølge.
Selvom vi definerer dem generelt her, vil du kun få optimal ydeevne,
hvis du optimerer disse flag for hvert program seperat.
Det skyldes at alle programmer er forskellige.
</p>

<p>
I <path>make.conf</path> skal du <e>generelt</e> optimere de flag du
tror vil gøre dit system bedst.  Lad være med at placere
eksperimenterende opsætninger i denne variabel; For meget optimering
kan få programmer til at opføre sig mærkelig (gå ned, eller endnu
værre, fungere forkert).
</p>

<p>
Vi vil ikke forklare alle mulige optimeringsmuligheder. Hvis du vil
kende dem alle, kan du læse <uri
link="http://www.gnu.org/software/gcc/onlinedocs/">Gnu Online
Manual(s)</uri> eller <c>gcc</c> info siden (<c>info gcc</c> virker
kun på et færdig opsat Linux-system).  <path>make.conf</path>-filen i
sig selv, indeholder også mange eksempler og informationer; glem ikke,
at du også skal læse dette.
</p>

<p>
Den første parameter er <c>-march=</c>-flaget, som specificerer navnet
på din arkitektur. Mulige parametre er beskrevet i
<path>make.conf</path>-filen (som kommentarer).  For eksempel til x86
Athlon XP arkitekturen:
</p>

<pre caption="GCC march opsætning">
-march=athlon-xp
</pre>

<p>
En anden parameter er <c>-O</c>-flaget, som specificerer <c>gcc</c>s
optimeringsklasse-flag.  Mulige klasser er <c>s</c> (for størrelses
optimering), <c>0</c>(ingen optimering), <c>1</c>, <c>2</c>, <c>3</c> til
mere hastighedsoptimering, (hver klasse har samme flag som den
forrige, plus nogle ekstra).  For eksempel en klasse 2 optimering:
</p>

<pre caption="GCC O opsætning">
-O2
</pre>

<p>
Andre populære optimeringsflag er <c>-pipe</c> (brug af pipes i stedet
for midlertidige filer til kommunikation mellem forskellige stadier af
kompilering) og <c>-fomit-frame-pointer</c> (sørger for at
framepointere ikke er i registret til de funktioner, der ikke skal bruge den).
</p>

<p>
Når du definerer dine <c>CFLAGS</c> og <c>CXXFLAGS</c>, bør du
kombinere forskellige optimeringsflag, som i det følgende eksempel:
</p>

<pre caption="Definering af CFLAGS og CXXFLAGS variablerne">
CFLAGS="-march=athlon-xp -pipe -O2"
CXXFLAGS="${CFLAGS}" <comment># Bruger den samme opsætning til begge flag</comment>
</pre>

</body>
</subsection>
<subsection>
<title>MAKEOPTS</title>
<body>

<p>
Med <c>MAKEOPTS</c> definerer du, hvor mange parallele kompileringer, der
skal fortages, når du installere en pakke. Det foreslået nummer, er
antallet af CPUer i dit system, plus en ekstra.
</p>

<pre caption="MAKEOPTS for et regulært, 1-CPUs system">
MAKEOPTS="-j2"
</pre>

</body>
</subsection>
<subsection>
<title>Klar, parat, start!</title>
<body>

<p>
Opdatér din <path>/mnt/gentoo/etc/make.conf</path>, så den passer dig,
og gem.  Du er nu klar til at fortsætte med <uri
link="?part=1&amp;chap=6">Installationer til Gentoo
base-systemet</uri>.
</p>

</body>
</subsection>
</section>
</sections>
