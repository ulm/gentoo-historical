<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-install-stage.xml,v 1.18 2005/05/29 19:39:36 broeman Exp $ -->

<sections>

<version>2.00</version>
<date>2005-03-28</date>

<section>
<title>Installation af stage-tarball</title>
<subsection>
<title>At sætte Dato/Tid rigtigt</title>
<body>
  	 
<p>
Før du forsætter, så bliver du nødt til at tjekke din dato/tid og
opdatere den. Et ur der ikke er sat ordentlig op kan lede til
mærkelige resultater i fremtiden!
</p>
  	 
<p>
For at verificere den nuværende dato/tid, kør da <c>date</c>:
</p>
  	 
<pre caption="At verificere dato/tid">
# <i>date</i>
 Fri Mar 29 16:21:18 CEST 2005
</pre>
  	 
<p>
Hvis dato/tid bliver vist forkert, opdater den da ved brug af 
<c>date MMDDhhmmCCYY</c> syntaksen (<b>M</b>åned, <b>D</b>ag, <b>h</b>(time), <b>m</b>inut,
<b>C</b>(årtusinde) og <b>Y</b>(år)). F.eks. sæt datoen til den 29. marts 16:21 i året 2005:
</p>
  	 
<pre caption="At sætte dato/tid">
# <i>date 032916212005</i>
</pre>
  	 
</body>
</subsection>
<subsection>
<title>Gør dit valg</title>
<body>

<p>
Det næste trin, som du skal udføre, er at installere
<e>stage</e>-tarball'en, som du har valgt, på dit system. Du har
muligheden for at hente den krævede tarball fra Internet eller, hvis
du har startet fra én af Gentoo universelle installationsCDer, kopiere den så fra
CDen selv. Hvis du har en universel CD, og den ønskede stage er på CDen, 
at hente den fra Internet, er spild af båndbredde, idet stage-filerne er de samme.
I de fleste tilfælde kan kommandoen <c>uname -m</c> blive brugt til at finde ud af, hvilken
stage-fil du skal hente.
</p>

<ul>
 <li><uri link="#doc_chap2">Standard: Brug af stage-fil fra Internet</uri></li>
 <li><uri link="#doc_chap3">Alternativ: Brug af en Stage-fil fra installationsCDen</uri></li>
</ul>

</body>
</subsection>
</section>
<section>
<title>Standard: Bruge af stage-fil fra Internet</title>
<subsection>
<title>Hentning af stage-tarball</title>
<body>

<p>
Skift til dit Gentoo mountpunkt, hvor du mountede dit filsystem (højst
sandsynligt <path>/mnt/gentoo</path>):
</p>

<pre caption="Gå til Gentoo-mountpunkt">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Afhængigt af dit installationsmedie, har du et par forskellige
værktøjer tilgængeligt til at hente en stage. Hvis du har <c>links2</c> til rådighed, så kan du med det samme surfe
hen til <uri link="/main/en/mirrors.xml">Gentoo filspejl-listen</uri>
og vælge et filspejl nær ved dig.</p>

<p>
Hvis du ikke har <c>links2</c> tilgængeligt,
bør du have <c>lynx</c> til rådighed. Hvis du har brug for en proxy, export
<c>http_proxy</c>- og <c>ftp_proxy</c>-variablerne:
</p>

<pre caption="Opsætning af proxy-informationer til lynx">
# <i>export http_proxy="http://proxy.vært.dk:port"</i>
# <i>export ftp_proxy="http://proxy.vært.dk:port"</i>
</pre>

<p>
Vi vil nu forudsætte at du har <c>links2</c> tilrådighed.
</p>

<p>
Vælg <path>releases/</path> biblioteket, efterfulgt af arkitekturen
(<path>x86/</path>) og Gentoo-versionen (for eksempel <path>2005.0/</path>)
og afslut med at gå ind i <path>stages/</path>
biblioteket. Der skulle du gerne se alle tilgængelige stage-filer til
din arkitektur (de vil evt. blive gemt i underbiblioteker som er navngivet efter hver underarkitektur). Vælg én og tryk på <c>D</c> for at hente den.
Når du er færdig tryk da på <c>Q</c> for at lukke browseren.
</p>

<pre caption="Surf til filspejl-listen med links2">
# <i>links2 http://www.gentoo.org/main/en/mirrors.xml</i>
<comment>(Hvis du har brug for proxy-understøttelse med links2:)</comment>      
# <i>links2 -http-proxy proxy.server.com:8080 http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Hvis du vil tjekke integriteten af den downloadede stage tarball, brug da <c>md5sum</c> og sammenlign outputtet med den MD5 checksum der er på filspejlet. F.eks. for at tjekke ægtheden af x86 stage tarball:
</p>
  	 
<pre caption="Et eksempel på at tjekke integriteten af en stage tarball">
# <i>md5sum -c stage1-x86-2005.0.tar.bz2.md5</i>
stage1-x86-2005.0.tar.bz2: OK
</pre>

</body>
</subsection>
<subsection>
<title>Udpakning af en stage tarball</title>
<body>

<p>
Nu skal vi udpakke din hentede stage-fil til dit system. Vi bruger GNUs
<c>tar</c> til dette, eftersom det er det nemmeste:
</p>

<pre caption="Udpakning af stagen">
# <i>tar -xvjpf stage?-*.tar.bz2</i>
</pre>

<p>
Sørg for at du bruger de samme parametre (<c>-xvjpf</c>).
<c>x'et</c> står for <e>Extract</e>, <c>v'et</c> står for
<e>Verbose</e> for at se hvad der sker i udpakningsprocessen (denne er valgfri), 
<c>j'et</c> står for <e>Decompress with bzip2</e>, <c>p'et</c> står for 
<e>Preserve permissions</e> og <c>f'et</c> pointerer at vi vil udpakke en fil, 
i stedet for standard input.
</p>

<note>
Nogle arkitekturers (f.eks. MIPS) installationsCDer og opstart-billedfiler afhænger at om
<c>tar</c> er indbygget til BusyBox, som på nuværende tidspunkt ikke understøtter <c>-v</c>
valgmuligheden. Derfor vil den måske ikke virke.
</note>

<p>
Nu da denne etape er færdig, fortsæt med
<uri link="#installing_portage">Installere Portage</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternativ: Brug af en stage-fil fra installationsCDen</title>
<subsection>
<title>Udpakning af stage-tarball</title>
<body>

<p>
De forskellige etaper på CDen ligger i <path>/mnt/cdrom/stages</path>
biblioteket.  For at se en liste af tilgængelige stage-filer, brug
<c>ls</c>:
</p>

<pre caption="Liste af tilgængelige stage-filer">
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Hvis systemet svarer med en fejl, er det måske fordi du skal mounte
CDROM-drevet først:
</p>

<pre caption="Mounting af CDROM-drevet">
# <i>ls /mnt/cdrom/stages</i>
ls: /mnt/cdrom/stages: No such file or directory
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom</i>
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Gå nu ind i dit Gentoo mountpunkt (som regel <path>/mnt/gentoo</path>):
</p>

<pre caption="Skift bibliotek til /mnt/gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Vi vil nu udpakke den valgte stage-tarball.  Vi vil gøre dette ved
brug af af GNU <c>tar</c> værktøjet.  Sørg for at bruge de samme
parametre (<c>-xvjpf</c>)! Igen, er <c>v</c>-argumentet valgfrit og ikke understøttet
i nogle <c>tar</c>-versioner. I det næste eksempel vil vi udpakke
<path>stage3-&lt;subarch&gt;-2005.0.tar.bz2</path>.  Sørg for at udskifte
tarball-filnavnet med den valgte stage-fil.
</p>

<pre caption="Udpakning af stage-tarball">
# <i>tar -xvjpf /mnt/cdrom/stages/stage3-&lt;subarch&gt;-2005.0.tar.bz2</i>
</pre>

<p>
Nu da denne etape er installeret, fortsæt med 
<uri link="#installing_portage">Installere Portage</uri>.
</p>

</body>
</subsection>
</section>
<section id="installing_portage">
<title>Installere Portage</title>
<subsection>
<title>Udpakning af Portage-snapshot</title>
<body>

<p>
Du skal nu installere et Portage-snapshot, en samling af filer, som informerer hvilke
softwaretitler, som du kan installere, hvilke profiler der er tilgængelige osv.
</p>

</body>
</subsection>
<subsection id="installing_from_LiveCD">
<title>Hent og Installere et Portage-snapshot</title>
<body>

<p>
Gå til det mount-punkt, hvor du mountede dit filsystem (meget sandsynligt
<path>/mnt/gentoo</path>):
</p>

<pre caption="Går til Gentoo-mountpunktet">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Fyr op for <c>links2</c> (eller <c>lynx</c>) og gå til vores
<uri link="/main/en/mirrors.xml">Gentoo filspejleliste</uri>. Vælg et filspejl
tæt på dig og åben <path>snapshots/</path> folderen. Derinde hent den sidste
nye Portage-snapshot ved at vælge den og taste <c>D</c>.
</p>

<pre caption="Gennemse Gentoo filspejle">
# <i>links2 http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Afslut nu browseren ved at taste <c>Q</c>. Du vil nu have et Portage-snapshot
gemt i <path>/mnt/gentoo</path>. I næste trin, vil vi udpakke Portage-snapshottet
til dit filsystem. Vær sikker på at du bruger præcist denne kommando; den sidste
valgmulighed er med stort <c>C</c>, ikke <c>c</c>.
</p>

<pre caption="Udpakning af Portage-snapshot">
<comment>(Udskift &lt;dato&gt; med den datostempel af den hentede snapshot)</comment>
# <i>tar -xvjf /mnt/gentoo/portage-&lt;date&gt;.tar.bz2 -C /mnt/gentoo/usr</i>
</pre>

</body>
</subsection>
</section>

<section id="compile_options">
<title>Opsætning af kompileringsparametre</title>
<subsection>
<title>Introduktion</title>
<body>

<p>
For at optimere Gentoo kan du sætte et par variabler, som har
inflydelse på den måde Portage opfører sig.
Alle disse variabler kan sættes som miljø-variable (ved brug af
<c>export</c>), men det er ikke permanent.  For at gemme din
opsætning, kommer Portage med <path>/etc/make.conf</path>, en
opsætningsfil til Portage.  Det er denne fil, vi nu vil rette i.
</p>

<note>
En kommenteret liste af alle mulige variable, kan findes i
<path>/mnt/gentoo/etc/make.conf.example</path>.
For at få en fungerende Gentoo installation, behøver du kun at sætte de
variabler, som er nævnt herunder.
</note>

<p>
Åben dit favorit redigeringsprogram (i denne guide bruger vi <c>nano</c>), så vi
kan komme i gang med at ændre de optimeringsvariabler, vi vil diskutere herefter.
</p>

<pre caption="Åbning af /etc/make.conf">
# <i>nano -w /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Som du nu sikkert har lagt mærke til, er <path>make.conf.example</path>-filen struktureret på en generel måde: kommentar-linier, som starter med "#" og andre linier, som definerer variabler ved brug af <c>VARIABLE="indhold"</c> syntaxen. <path>make.conf</path> bruger samme syntaks. Flere af disse variabler bliver diskuteret i næste trin.
</p>

</body>
</subsection>
<subsection>
<title>CHOST</title>
<body>

<warn>
Selvom det måske kan være interessant for ikke-stage1 brugere, så skal
de <e>IKKE</e> udskifte deres <c>CHOST</c>-opsætning i
<path>make.conf</path>.  Gør man dette, bliver systemet måske
ubrugeligt. Igen: Du skal kun ændre denne variabel, hvis du bruger en
<e>stage1</e>-installation.  </warn>

<p>
<c>CHOST</c>-variablen definerer hvilken arkitektur, <c>gcc</c> skal
kompilere programmerne til.  Mulighederne er:
</p>

<table>
<tr>
  <th>Arkitektur</th>
  <th>Underarkitektur</th>
  <th>CHOST opsætning</th>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i386</ti>
  <ti>i386-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i486</ti>
  <ti>i486-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i586</ti>
  <ti>i586-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i686 og derover (inkl. Athlon)</ti>
  <ti>i686-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>alpha</ti>
  <ti></ti>
  <ti>alpha-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>ppc</ti>
  <ti></ti>
  <ti>powerpc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>ppc64</ti>
  <ti></ti>
  <ti>powerpc64-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>sparc</ti>
  <ti></ti>
  <ti>sparc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>sparc64</ti>
  <ti></ti>
  <ti>sparc-unknown-linux-gnu</ti>
</tr>

<tr>
  <ti>hppa</ti>
  <ti>(generic)</ti>
  <ti>hppa-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>pa7000</ti>
  <ti>hppa1.1-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>pa8000 og derover</ti>
  <ti>hppa2.0-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>mips</ti>
  <ti></ti>
  <ti>mips-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>amd64</ti>
  <ti></ti>
  <ti>x86_64-pc-linux-gnu</ti>
</tr>
</table>

<p>
Vær venligst sikker på at du bruger den <e>korrekte</e> CHOST-indstilling. F.eks.
er CHOST-indstillingen til sparc64 stadigvæk <c>sparc-unknown-linux-gnu</c> og
<e>ikke</e> <c>sparc64-unknown-linux-gnu</c>!
</p>

<p>
Brugere, som er interesseret i at bootstrappe hele deres system med NPTL-understøttelse på
et x86-system, skal indstille deres CHOST til <c>i586-pc-linux-gnu</c> eller højere.
</p>

</body>
</subsection>
<subsection>
<title>CFLAGS og CXXFLAGS</title>
<body>

<p>
<c>CFLAGS</c>- og <c>CXXFLAGS</c>-variablerne definerer optimeringsflag
til <c>gcc</c>, med C og C++ kompilerne i den rækkefølge.
Selvom vi definerer dem generelt her, vil du kun få optimal ydeevne,
hvis du optimerer disse flag for hvert program seperat.
Det skyldes at alle programmer er forskellige.
</p>

<p>
I <path>make.conf</path> skal du <e>generelt</e> optimere de flag du
tror vil gøre dit system bedst.  Lad være med at placere
eksperimenterende opsætninger i denne variabel; For meget optimering
kan få programmer til at opføre sig mærkelig (gå ned, eller endnu
værre, fungere forkert).
</p>

<p>
Vi vil ikke forklare alle mulige optimeringsmuligheder. Hvis du vil
kende dem alle, kan du læse <uri
link="http://gcc.gnu.org/onlinedocs/">GNU Online
Manual(er)</uri> eller <c>gcc</c> info siden (<c>info gcc</c> virker
kun på et færdigt opsat Linux-system).  <path>make.conf.example</path>-filen i
sig selv, indeholder også mange eksempler og informationer; glem ikke,
at du også skal læse dette.
</p>

<p>
Den første parameter er <c>-march=</c>-flaget, som specificerer navnet
på din arkitektur. Mulige parametre er beskrevet i
<path>make.conf.example</path>-filen (som kommentarer).  For eksempel til x86
Athlon XP arkitekturen:
</p>

<pre caption="GCC march opsætning">
<comment># AMD64 brugere, som ønsker at bruge et rent 64 bit system, bør bruge -march=k8</comment>
-march=athlon-xp
</pre>

<p>
En anden parameter er <c>-O</c>-flaget(det er et stort O, ikke et nul), som specificerer <c>gcc</c>s
optimeringsklasse-flag.  Mulige klasser er <c>s</c> (for størrelses
optimering), <c>0</c>(nul - ingen optimering), <c>1</c>, <c>2</c>, <c>3</c> til
mere hastighedsoptimering, (hver klasse har samme flag som den
forrige, plus nogle ekstra).  For eksempel en klasse 2 optimering:
</p>

<pre caption="GCC O opsætning">
-O2
</pre>

<p>
Et andet populært optimeringsflag er <c>-pipe</c> (brug af pipes i stedet
for midlertidige filer til kommunikation mellem forskellige stadier af
kompilering).
</p>

<p>
Husk at hvis du bruger <c>-fomit-frame-pointer</c> (som sørger for at
framepointere ikke er i registret til de funktioner, der ikke skal bruge den)
kan skabe seriøse problemer med at debugge programmer!
</p>

<p>
Når du definerer dine <c>CFLAGS</c> og <c>CXXFLAGS</c>, bør du
kombinere forskellige optimeringsflag, som i det følgende eksempel:
</p>

<pre caption="Definering af CFLAGS og CXXFLAGS variablerne">
<comment># AMD64 brugere bør bruge march=k8</comment>
CFLAGS="-march=athlon-xp -pipe -O2"
CXXFLAGS="${CFLAGS}" <comment># Bruger den samme opsætning til begge flag</comment>
</pre>

</body>
</subsection>
<subsection>
<title>MAKEOPTS</title>
<body>

<p>
Med <c>MAKEOPTS</c> definerer du, hvor mange parallele kompileringer, der
skal fortages, når du installere en pakke. Et godt valg er antallet
af CPUer i dit system, plus en ekstra, men den retningslinie er ikke altid perfekt.
</p>

<pre caption="MAKEOPTS for et regulært, 1-CPUs system">
MAKEOPTS="-j2"
</pre>

</body>
</subsection>
<subsection>
<title>Klar, parat, start!</title>
<body>

<p>
Opdater din <path>/mnt/gentoo/etc/make.conf</path>, så den passer dig, og gem den (<c>nano</c>-brugere ville bruge <c>Ctrl+X</c>.  Du er nu klar til at fortsætte med <uri link="?part=1&amp;chap=6">Installation af Gentoo basissystem</uri>.
</p>

</body>
</subsection>
</section>
</sections>
