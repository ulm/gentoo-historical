<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-net-advanced.xml,v 1.1 2005/08/07 21:05:57 aaby Exp $ -->

<sections>

<version>1.2</version>
<date>2005-06-14</date>

<section>
<title>Avanceret Opsætning</title>
<body>

<p>
config_eth0 variablen er det mest centrale i opsætningen af et
grænseflader. Det er en high level liste af instruktioner der er
nødvendige for at konfigurere interfacet (eth0 i dette tilfælde). Hver
kommando i instruktionslisten bliver udført sekventielt. Interfacet
bliver betragtet som OK, hvis bare en af kommandoerne virker.
</p>

<p>
Her er en liste over indbyggede instruktioner.
</p>

<table>
<tr>
  <th>Kommando</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti>null</ti>
  <ti>Gør ingenting</ti>
</tr>
<tr>
  <ti>noop</ti>
  <ti>
    Hvis interfacet er oppe og der er en adresse, så afbryde
  opsætningen og reporter succes.
  </ti>
</tr>
<tr>
  <ti>en IPv4 eller IPv6 adresse</ti>
  <ti>Tilskriv adressen til interfacet</ti>
</tr>
<tr>
  <ti>
    dhcp, adsl eller apipa (eller en anden kommando fra et tredje
  parts modul)
  </ti>
  <ti>
  Kør det modul der indeholder kommandoen. For eksempel vil "dhcp"
  køre det modul der indeholder dhcp kommandoen, dette kan være enten dhcpcd,
    udhcpc, dhclient eller pump.
  </ti>
</tr>
</table>

<p>
Hvis en kommando fejler, så du kan specificere en nødløsnings
kommando. Strukturen på denne skal stemme fuldstændig overens med
strukturen på config som den er beskrevet ovenfor.
</p>

<p>
Du kan kæde disse kommandoer sammen. Her er nogle eksempler fra den
virkelige verden.
</p>

<pre caption="Eksempler på opsætning">
<comment># At tilføje tre IPv4 adresser</comment>
config_eth0=(
  "192.168.0.2/24"
  "192.168.0.3/24"
  "192.168.0.4/24"
)

<comment># At tilføje en IPv4 adresse og to IPv6 adresser</comment>
config_eth0=(
  "192.168.0.2/24"
  "4321:0:1:2:3:4:567:89ab"
  "4321:0:1:2:3:4:567:89ac"
)

<comment># Behold den adresse kernen tildeler, medmindre grænsefladen
# går ned, i det tilfælde tildel en anden via. Hvis DHCP fejler så tilføj en 
# statisk adresse afgjort af APIPA</comment>
config_eth0=(
  "noop"
  "dhcp"
)
fallback_eth0=(
  "null"
  "apipa"
)
</pre>

<note>
Når du bruger ifconfig modulet og tilføjger mere end en adresse, så
vil der blive lavet et alias per ekstra adresse for
grænsefladerne. Så med de to eksempler ovenfor vil du gå grænsefladerne
eth0, eth0:1 og eth0:2. Du kan ikke gøre noget specielt med disse
grænseflader da kernen og andre programmer bare vil behandle eth0:1 og 
eth0:2 som eth0.
</note>

<impo>
Rækkefølgen ved fejl er vigtig! Hvis vi ikke specificerede "null"
valgmuligheden, så ville "apipa" kommandoen kun blive kørt hvis "noop"
kommandoen fejlede.
</impo>

<note>
<uri link="?part=4&amp;chap=3#apipa">APIPA</uri> og
<uri link="?part=4&amp;chap=3#dhcp">DHCP</uri> bliver diskuteret senere.
</note>

</body>
</section>
<section>
<title>Netværkafhængigheder</title>
<body>

<p>
Init scripts i <path>/etc/init.d</path> kan være afhængige af et
bestemt netværksgrænseflade eller bare net. "net" kan defineres i
<path>/etc/conf.d/rc</path> til at betyde forskellige ting igennem
<c>RC_NET_STRICT_CHECKING</c> variablen.
</p>

<table>
<tr>
  <th>Værdi</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti>none</ti>
  <ti>Net servicen bliver altid betragtet som værende oppe</ti>
</tr>
<tr>
  <ti>no</ti>
  <ti>
    Dette betyder ganske basalt at minimum en net.* service ud over
    net.lo skal være oppe. Det kan bruges af notebook brugere, der har
    et wifi og et statisk nic, og kun vil have et oppe på alle
    tidspunkter for at få net servicen til at blive set som oppe.
  </ti>
</tr>
<tr>
  <ti>lo</ti>
  <ti>
    Dette er det samme som 'no' valgmuligheden, men net.lo bliver også
    talt med. Dette skulle være brugbart for folk der ikke bekymrer
    sig omkring at en specifikt grænseflade er oppe ved boot tid.
  </ti>
</tr>
<tr>
  <ti>yes</ti>
  <ti>
    Med denne skal ALLE netværksgrænseflader være oppe for at 'net'
  servicen bliver betragtet som værende oppe.
  </ti>
</tr>
</table>

<p>
Men hvad med at lade net.br0 være afhængigt af net.eth0 og net.eth1?
net.eth1 kan være et wireless eller ppp enhed der kræver opsætning før
den kan tilføjes til broen. Dette kan ikke gøres i
<path>/etc/init.d/net.br0</path> da det er et symbolsk link til net.lo
</p>

<p>
Svaret er at lave din egen depend() funktion i <path>/etc/conf.d/net</path>
</p>

<pre caption="net.br0 afhængighed i /etc/conf.d/net">
<comment># Du kan bruge enhver afhængighed (use, after, before) som de findes i nuværende scripts</comment>
depend_br0() {
  need net.eth0 net.eth1
}
</pre>

<p>
For en mere detaljeret diskussion omkring afhængigheder, så kig i
sektionen <uri
link="/doc/da/handbook/handbook-x86.xml?part=2&amp;chap=4#doc_chap4">Om
at skrive Init scripte</uri> i Gentoo Håndbogen.
</p>

</body>
</section>

<section id="variable_name">
<title>Variabel navne og værdier</title>
<body>

<p>
Variabel navne er dynamiske. De følger normalt strukturen
<c>variabel_${grænseflade|mac|essid|apmac}</c>. For eksempel, variablen
<c>dhcpcd_eth0</c> holder værdien for dhcpcd muligheder for eth0 og
<c>dhcpcd_essid</c> holder værdien dhcpcd muligheder når ethvert
grænseflade forbinder til essid'en "essid".
</p>

<p>
Der er derimod ikke nogen hårde og faste regler der siger at
grænsefladers navne skal være ethx. Mange wireless grænseflader har
faktisk navne såsom wlanx, rax lige som ethx. Ydermere kan bruger
definerede grænseflader såsom broer gives ethvert navn, såsom foo. For
at gøre livet mere interesserende, så kan wireless Access Points have
navne med ikke alpha-numeriske karakterer i dem - dette er vigtigt
fordi du kan konfigurere netværks parametre per ESSID.
</p>

<p>
Nedesiden af alt dette er at Gentoo bruger bash variabler til netværk -
og bash kan ikke bruge andet end engelske alpha-numeriske tegn. For at
komme ud over denne begrænsning, så ændrer vi enhver karakter der ikke er et
engelsk alpha-numerisk tegn til et _ tegn.
</p>

<p>
En anden nedeside ved bash er at indholdet af variabler - er at nogle
karakterer skal escapes. Dette kan klares ved at placere \ karakteren
foran den karakter der skal escapes. Den følgende liste af karakterer
kræver at blive escapet på denne måde: <c>"</c>, <c>'</c> og <c>\</c>.
</p>

<p>
I dette eksempel bruger vi wireless ESSID da de kan indeholde det
bredeste scope af karakterer. Vi bruger ESSID'en <c>My "\ NET</c>:
</p>

<pre caption="Eksempel på variabel navn">
<comment># Dette virker, men domænet er ikke gyldigt</comment>
dns_domain_My____NET="My \"\\ NET"

<comment># Det ovenforstående sætter dns domænet til My "\ NET når et wireless kort
# forbinder til et AP hvor ESSID er My "\ NET</comment>
</pre>

</body>
</section>
</sections>
