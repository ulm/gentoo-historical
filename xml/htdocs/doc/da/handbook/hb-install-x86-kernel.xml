<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-install-x86-kernel.xml,v 1.12 2005/06/29 03:01:24 broeman Exp $ -->

<sections>

<version>3.1</version>
<date>2005-06-12</date>

<section>
<title>Tidszone</title>
<body>
  	 
<p>
Du bliver først nødt til at vælge din tidszone så. at dit system ved
hvor det er lokaliseret. Kig efter din tidszone i
<path>/usr/share/zoneinfo</path>, og lav derefter en symbolsk
henvisning til <path>/etc/localtime</path> ved brug af <c>ln</c>:
</p>
  	 
<pre caption="At sætte tidszone informationen">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Hvis du vil bruge GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>
  	 
</body>
</section>

<section>
<title>Installation af kildekoderne</title>
<subsection>
<title>Valg af kerne</title>
<body>

<p>
Kernen omkring alle distributioner er bygget på Linux-kernen. Det er et
lag imellem bruger-programmer og dit systems hardware. Gentoo giver dens
brugere flere forskellige mulige kerne-kildekoder. En fuld liste med 
beskrivelser forefindes i <uri link="/doc/da/gentoo-kernel.xml">Gentoo 
Linux kerne vejledning</uri>. 
</p>

<p>
Til x86-baserede systemer har vi, iblandt andre kerner, <c>vanilla-sources</c>
(standard kernekildekode, som er udviklet af linux-kerne udviklerne),
<c>gentoo-sources</c> (kernekildekode, som er patchet med ydelsesforbedrende
egenskaber), ...
</p>

<p>
Vælg din kerne-kildekode og installer den ved at bruge <c>emerge</c>. 
</p>

<pre caption="Installation af kerne-kildekode">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Når du tager et kig i <path>/usr/src</path>, burde du se en genvej 
kaldet <path>linux</path>, som peger mod din kerne-kildekode. 
Vi forudsætter at kerne-kildekoderne som er installeret er 
<c>gentoo-sources-2.6.11-r3</c>:
</p>

<pre caption="Se genvej til kerne-kildekode">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.11-gentoo-r3
</pre>

<p>
Hvis genvejen ikke peger mod de kerne-kilderkoder, som du har valgt (noter at
<c>linux-2.6.11-gentoo-r3</c> er kun som et eksempel) bør du ændre den til den
rigtige kerne:
</p>

<pre caption="Ændring af genvejen til kerne-kildekode">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.11-gentoo-r3 linux</i>
</pre>

<p>
Nu er det tid til at opsætte og kompilere din kernes kildekoder. Alle
arkitekturer kan bruge <c>genkernel</c> til dette, som vil bygge en omfattende
kerne, som også er brugt på installationsCDen. Vi forklarer dog den "manuelle" 
opsætning først, idet det er den bedste metode til at optimere dit system.
</p>

<p>
Hvis du vil opsætte din kerne manuelt, forsæt nu med <uri
link="#manual">Standard: Manuel opsætning</uri>. Hvis du 
du vil bruge <c>genkernel</c>, bør du læse <uri 
link="#genkernel">Alternativ: Brug af genkernel</uri> i stedet for.
</p>

</body>
</subsection>
</section>
<section>
<title>Standard: Manuel opsætning</title>
<subsection>
<title>Introduktion</title>
<body>

<p>
At opsætte kernen manuelt bliver ofte anset som det sværeste, som enhver
Linux-bruger skal gå igennem. Intet er mindre rigtigt -- efter
opsætninger af nogle kerner, vil du ikke kunne huske at det var svært ;)
</p>

<p>
Én ting er dog <e>rigtigt</e>: du skal kende dit system, når du starter med at
opsætte en kerne manuelt. De fleste informationer kan blive indsamlet ved at emerge
pciutils (<c>emerge pciutils</c>), som indeholder <c>lspci</c>. Du vil nu have
mulighed for at bruge <c>lspci</c> indenfor det chrootede miljø. Du kan med sikkerhed
ignorere alle <e>pcilib</e> advarsler (som pcilib: cannot open /sys/bus/pci/devices), som
<c>lspci</c> fortæller. Alternativt kan du køre <c>lspci</c> fra et <e>ikke-chrootet</e>
miljø. Resultatet er det samme. Du kan også køre <c>lsmod</c> for at se hvilke 
kerne-moduler, installationsCDen bruger (det vil måske give dig en god idé om hvad du 
skal aktivere).
</p>

<p>
Gå nu til kerne-kildekode mappen og udfør <c>make menuconfig</c>. Dette
vil starte en ncurses-baseret opsætningsmenu.
</p>

<pre caption="Påkalde menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Du vil blive hilst af flere opsætningssektioner. Vi vil først give dig
en liste af de valgmuligheder, som du skal aktivere (ellers vil Gentoo
ikke funktionere, eller funktionere ordentligt uden ekstra
finindstillinger).
</p>

</body>
</subsection>
<subsection>
<title>Aktivering af krævede valgmuligheder</title>
<body>

<p>
Først skal du aktivere brugen af udviklings- og forsøgskoder/-drivere.
Du vil få brug for dette, ellers vil meget vigtige koder/drivere ikke vise sig:
</p>

<pre caption="Valg af eksperimentielle koder/drivere, Generel opsætning">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
General setup  ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Vær sikker på at alle drivere, som er vitale for at starte dit system (som f.eks.
en SCSI-kontroller, ...) er samlet <e>i</e> kernen og ikke som et modul, ellers
vil dit system ikke være til at starte komplet.
</p>

<p>
Fortsæt nu med at vælge den korrekte processor-familie:
</p>
  	 
<pre caption="Selecting correct processor family">
Processor type and features ---&gt;
  <comment>(Ændre denne i overenstemmelse med dit system)</comment>
  (<i>Athlon/Duron/K7</i>) Processor family
</pre>
  	 
<p>
Gå nu til <c>File Systems</c> og vælg understøttelse til de filsystemer, som 
du bruger. Kompiler dem <e>ikke</e> som moduler, ellers vil dit Gentoo system ikke have 
mulighed for at montere dine partitioner. Vælg også <c>Virtual memory</c> og 
<c>/proc file system</c>. Vælg <e>ikke</e> <c>/dev file system</c>, da Gentoo/x86 bruger
<c>udev</c> som standard nu. Hvis du bruger en 2.4-kerne, skal du stadigvæk vælge
<c>/dev file system</c>, idet 2.4-kerner ikke understøtter <c>udev</c>:
</p>

<pre caption="Valg af nødvendige filsystemer">
<comment>(Med en 2.4.x kerne)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Med en 2.6.x kerne)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [ ] /dev file system support (OBSOLETE)
    [*] Virtual memory file system support (former shm fs)
  	 
<comment>(Vælg en eller flere af de følgende valgmuligheder, som er nødvendige for dit system)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Hvis din BIOS ikke kan håndtere store hardiske og du har sat "jumperne" til at rapportere en begrænset størrelse, skal du aktivere følgende egenskab for at opnå adgang til hele harddisken:
</p>

<pre caption="Valg af autogeometrisk størrelse understøttelse">
<comment>(kun til 2.4.x kernen)</comment>
ATA/IDE/MFM/RLL support ---&gt;
  IDE, ATA and ATAPI Block devices ---&gt;
    &lt;*&gt;   Include IDE/ATA-2 DISK support
    [ ]     Use multi-mode by default
    [*]     Auto-Geometry Resizing support
</pre>

<p>
Glem ikke at aktivere DMA til dine harddiske:
</p>

<pre caption="Aktivering af DMA">
Device Drivers ---&gt;
  ATA/ATAPI/MFM/RLL support ---&gt;
    [*] Generic PCI bus-master DMA support
    [*]   Use PCI DMA by default when available
</pre>

<p>
Hvis du bruger PPPoE til at forbinde til Internettet eller du bruger en opkaldsmodem, vil du få brug for de følgende valgmuligheder i kernen:
</p>

<pre caption="Valg af PPPoE nødvendige drivere">
<comment>(Med en 2.4.x kerne)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(With a 2.6.x kernel)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
De to kompressionsvalgmuligheder vil ikke være ubrugelige, men er slet ikke 
nødvendige, det samme med <c>PPP over Ethernet</c> valgmuligheden, som måske 
vil blive brugt af <c>rp-pppoe</c>, når den er opsat til at lave kerne-modus 
PPPoE.
</p>

<p>
Hvis du kræver det, glem ikke at inkludere understøttelse af dit netkort
i kernen.
</p>

<p>
Hvis du har en Intel CPU, som understøtter HyperThreading (tm), eller du har et
multi-processor system, bør du aktivere "Symmetric multi-processing support":
</p>

<pre caption="Aktivering af SMP-understøttelse">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Hvis du bruger USB input-enheder (som tastatur eller mus), så glem ikke aktivere disse:
</p>

<pre caption="Aktivering af USB-understøttelse af input-enheder">
USB Support ---&gt;
  &lt;*&gt;   USB Human Interface Device (full HID) support
</pre>

<p>
Bærbar-brugere, som ønsker PCMCIA-understøttelse, skal <e>ikke</e> bruge PCMCIA-driverne, hvis de vælger
2.4-kernen. Nyere drivere er tilgængelige igennem <c>pcmcia-cs</c>-pakken, som vil blive installeret senere.
Brugere af 2.6-kernen, kan dog bruge PCMCIA-driverne i kernen.
</p>

<p>
Udover at samle PCMCIA-understøttelse i 2.6-kernen, glem ikke at aktivere
understøttelse til PCMCIA-kort-bridge som er på dit system:
</p>

<pre caption="Aktivering af PCMCIA-understøttelse i 2.6-kerner">
Bus options (PCI, PCMCIA, EISA, MCA, ISA)  ---&gt;
  PCCARD (PCMCIA/CardBus) support  ---&gt;
    &lt;*&gt; PCCard (PCMCIA/CardBus) support
<comment>(vælg 16 bit, hvis du vil have understøttelse til ældre PCMCIA-kort. De fleste vil have dette.)</comment>
    &lt;*&gt;   16-bit PCMCIA support
    [*]   32-bit CardBus support
<comment>(vælg de relevante bridges nedenfor)</comment>
    --- PC-card bridges
    &lt;*&gt; CardBus yenta-compatible bridge support (NEW)
    &lt;*&gt; Cirrus PD6729 compatible bridge support (NEW)
    &lt;*&gt; i82092 compatible bridge support (NEW)
    &lt;*&gt; i82365 compatible bridge support (NEW)
    &lt;*&gt; Databook TCIC host bridge support (NEW)
</pre>

<p>
Når du er færdig med at opsætte kernen, forsæt til <uri 
link="#compiling">Kompilering og installation</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilering og installation</title>
<body>

<p>
Nu da din kerne er opsat, er det tid til at kompilere og installere den. 
Afslut opsætningen (Exit) og starte samlingsprocessen:
</p>

<pre caption="Kompilering af kerne">
<comment>(Til 2.4 kernen)</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>(Til 2.6 kernen)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Når kernen er færdig med at kompilere, kopier den da over til
<path>/boot</path>. Herfra antager vi at den kerne du installerer er
2.6.11-r3 versionen af <c>gentoo-sources</c>. Brug hvilket som helst navn
du føler er passende for dit valg og husk det, da du får brug for det
senere når du skal sætte din bootloader op.
</p>

<pre caption="Installation af kerne">
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.6.11-gentoo-r3</i>
# <i>cp System.map /boot/System.map-2.6.11-gentoo-r3</i>
</pre>

<p>
Det er også klogt at kopiere din kerneopsætningsfil til
<path>/boot</path>, bare for en sikkerheds skyld :)
</p>

<pre caption="Backup af din kerneopsætning">
# <i>cp .config /boot/config-2.6.11-gentoo-r3</i>
</pre>

<p>
Hvis du er en MIPS-bruger og dit system ikke vil starte ELF-kerner, kompiler
kernen ved brug af <c>make vmlinux.ecoff</c> i stedet for <c>make vmlinux</c>.
Kerne-billedfilen vil blive gemt som <path>arch/mips/boot/vmlinux.ecoff</path> 
i stedet for <path>vmlinux</path>.
</p>

<p>
Fortsæt nu med <uri link="#kernel_modules">kernemoduler</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativ: Brug af genkernel</title>
<body>

<p>
Hvis du læser denne sektion, så har du valgt at bruge vores <c>genkernel</c>
script til at opsætte din kerne for dig.
</p>

<p>
Nu da dit kerne-kildekodetræ er installeret, er det tid til at kompilere din
kerne ved at bruge vores <c>genkernel</c> script til at automatisk bygge en 
kerne for dig. <c>genkernel</c> virker ved at opsætte en kerne, næsten 
identisk med hvordan vores installationsCD-kerne er blevet opsat. Dette betyder, at når 
du bruger <c>genkernel</c> til at bygge din kerne, vil dit system generelt 
finde alt dit hardware ved opstart, ligesom din installationsCD gør. Fordi at genkernel 
ikke kræver nogen manuel kerneopsætning, er den en ideel løsning for
de brugere, som ikke føler sig veltilpas med at kompilere deres egne kerner.
</p>

<p>
Lad os nu se hvordan vi bruger genkernel. Først skal du emerge
genkernel'ens ebuild:
</p>

<pre caption="Emerge genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Dernæst kopier kerneopsætningen brug af installationsCDen til placeringen,
hvor genkernel kigger efter standard kerneopsætninger:
</p>

<pre caption="Kopiering af installationsCDens kerneopsætnings">
<comment>(Gør det kun hvis du vil opsætte en 2.6-kerne)</comment>
# <i>zcat /proc/config.gz > /usr/share/genkernel/ppc/kernel-config-2.6</i>
</pre>

<p>
Du skal nu samle dine kerne-kildekoder ved at køre <c>genkernel --udev all</c> (for 2.6-kerner)
eller <c>genkernel all</c> (for 2.4-kerner).
Vær agtsom på at <c>genkernel</c> samler en kerne, som understøtter det meste
hardware, derfor tager den en del tid!
</p>

<p>
Notér at hvis din boot-partition ikke bruger ext2- eller ext3- filsystem, 
skal du måske manuelt opsætte din kernel ved brug af <c>genkernel --menuconfig all</c> 
og tilføje understøttelse til dit filsystem <e>i</e> kernen (dvs. <e>ikke</e> som modul).
Brugere af EVMS2 eller LVM2 vil sikkert ønske at også tilføje <c>--evms2</c> eller
<c>--lvm2</c> argumenterne.
</p>

<pre caption="Start af genkernel">
<comment>(Til 2.6-kerner)</comment>
# <i>genkernel --udev all</i>

<comment>(Til 2.4-kerner)</comment>
# <i>genkernel all</i>
</pre>

<p>
Når <c>genkernel</c> afslutter, vil en kerne, et fuld sæt af moduler og
<e>initial root disk</e> (initrd) være færdiggjort. Vi vil bruge kernen
og initrd, når vi opsætter en boot-loader senere i dette dokument. Skriv
navnene på kernen og initrd ned, da du vil få brug for dem, når du skriver til
boot-loaderens opsætningsfil. Initrd vil blive startet med det samme efter
at opstartsprocessen udfører automatisk-hardwarefinding (ligesom på installationsCDen) 
før dit "rigtige" system starter op.
</p>

<pre caption="Tjekker den oprette kerne-billedfils navn og initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Lad os nu udføre et trin mere, for at få vores system til at blive mere som 
installationsCDen -- lad os emerge <c>coldplug</c>. Imens initrd automatisk finder 
hardware, som der er brug for til at starte dit system, vil <c>coldplug</c> 
automatisk finde alt andet.
For at emerge og aktivere <c>coldplug</c>, tast følgende:
</p>

<pre caption="Emerge og aktivering af coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>
  	 
<p>
Hvis du vil have at dit system reagerer på hotplug-aktiviter, vil du også få brug for
at installere og indstille hotplug:
</p>

<pre caption="Emerge og aktivering af hotplug">
# <i>emerge hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Kernemoduler</title>
<subsection>
<title>Opsætning af moduler</title>
<body>

<p>
Du bør opliste de moduler, som du vil have automatisk hentet, i <path>/etc/modules.autoload.d/kernel-2.4</path> 
(eller <path>kernel-2.6</path>). Du kan også tilføje ekstra valgmuligheder til modulerne, hvis du vil.
</p>

<p>
For at se alle de tilgængelige moduler, kør følgende <c>find</c>-kommando. Glem ikke
at udskifte "&lt;kernel version&gt;" med den version af kernen, du lige
har kompileret:
</p>

<pre caption="Se alle mulige moduler">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
For automatisk at hente f.eks <c>3c59x.o</c> modulet, skal du ændre
<path>kernel-2.4</path> eller <path>kernel-2.6</path> filen og skrive
modulnavnet i den.
</p>

<pre caption="At redigere /etc/modules.autoload.d/kernel-2.4">
<comment>(Eksempel for 2.4 kerner)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 eller kernel-2.6">
3c59x
</pre>

<p>
Fortsæt installationen med <uri link="?part=1&amp;chap=8">Opsætning af
dit system</uri>.
</p>

</body>
</subsection>
</section>
</sections>
