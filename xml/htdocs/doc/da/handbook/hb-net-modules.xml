<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-net-modules.xml,v 1.1 2005/07/18 04:55:20 broeman Exp $ -->

<sections>

<version>1.1</version>
<date>2005-06-14</date>

<section>
<title>Netværksmoduler</title>
<body>

<p>
Vi understøtter nu modulære netværksscripts, hvilket betyder at vi med lethed kan tilføje understøttelse til nye grænsefladetypder og opsætningsmoduler, imens vi beholder kompatibilitet til de eksisterende.
</p>

<p>
Moduler starter som standard, hvis pakken de behøver er installeret. Hvis du specificerer en modul her, som ikke har dens pakke installeret, så får du en fejlbesked, som fortæller dig hvilken pakke, du skal have installeret. Idealt, bruger du kun modul-indstillinger, når du har to eller flere pakker installeret, som giver dig samme service og du ønsker at bruge den ene, i stedet for den anden.
</p>

<pre caption="Modulpræference">
<comment># Helst iproute2 før ifconfig</comment>
modules=( "iproute2" )

<comment># Du kan også specificere andre moduler til en grænseflade
# I dette tilfælde, vi ønsker udhcpc før dhcpcd</comment>
modules_eth0=( "udhcpc" )

<comment># Du kan også specificere, hvilke moduler du ikke ønsker at bruge - f.eks. bruger du
# en supplant eller linux-wlan-ng til at kontrollere trådløs opsætning, men
# du vil stadigvæk opsætte netværksindstillinger pr. ESSID.</comment>
modules=( "!iwconfig" )
</pre>

</body>
</section>
<section>
<title>Handlers til grænseflader</title>
<body>

<p>
Vi leverer to grænseflade-"handlers": ifconfig og iproute2.
Vi skal bruge en af disse for at få en form af netværksopsætning.
</p>

<p>
ifconfig er den nuværende Gentoo-standard, og den er inkluderet i systemprofilen.
iproute2 er mere kraftfuld og fleksibel, men er ikke inkluderet som standard.
</p>

<pre caption="At installere iproute2">
# <i>emerge sys-apps/iproute2</i>

<comment># For at bruge iproute2 før ifconfig, hvis begge er installeret</comment>
modules=( "iproute2" )
</pre>

<p>
Da både ifconfig og iproute2 gør mange af tingene ens, vil vi tillade deres 
basisopsætning til at virke for hinanden. F.eks. vil nedenstående udklip virke, uanset hvilken modul du bruger.
</p>

<pre caption="ifconfig og iproute2 eksempler">
config_eth0=( "192.168.0.2/24" )
config_eth0=( "192.168.0.2 netmask 255.255.255.0" )

<comment># We can also specify broadcast</comment>
config_eth0=( "192.168.0.2/24 brd 192.168.0.255" )
config_eth0=( "192.168.0.2 netmask 255.255.255.0 broadcast 192.168.0.255" )
</pre>

</body>
</section>
<section id="dhcp">
<title>DHCP</title>
<body>

<p>
DHCP er en måde at modtage netværksinformationer (IP-adresse, DNS-servere,
Gateway, osv.) fra en DHCP-server. Dette betyder at hvis der er en DHCP-server, som kører på netværket, skal du bare fortælle hver klient til at bruge DHCP og den opsætter netværket helt selv. Selvfølgelig skal du opsætte andre ting, som f.eks. trådløs, PPP og andre ting, hvis det er krævet, før du kan bruge DHCP.
</p>

<p>
DHCP kan leveres af dhclient, dhcpcd, dhclient, pump eller udhcpc. Hver DHCP 
modul har deres fordele og ulemper - her er en hurtig oversigt.
</p>

<table>
<tr>
  <th>DHCP-modul</th>
  <th>Pakke</th>
  <th>Fordele</th>
  <th>Ulemper</th>
</tr>
<tr>
  <ti>dhclient</ti>
  <ti>net-misc/dhcp</ti>
  <ti>
    Lavet af ISC, de samme folk, som laver BIND DNS-software. Meget 
    opsætbar
  </ti>
  <ti>
    Opsætning er yderst kompleks, software er en del bloated, kan ikke få 
    NTP-servere fra DHCP, sender ikke hostname som standard
  </ti>
</tr>
<tr>
  <ti>dhcpcd</ti>
  <ti>net-misc/dhcpcd</ti>
  <ti>
    Har i lang tid været Gentoos standard, ikke afhængig af udenstående værktøjer
  </ti>
  <ti>
    Ikke længere vedligeholdt af udviklerne, kan være langsom til tider, vil ikke baggrundsprocesse, når leasingen er uendelig
  </ti>
</tr>
<tr>
  <ti>pump</ti>
  <ti>net-misc/pump</ti>
  <ti>
    Letvægt, ingen ightweight, ingen afhængighed af udenstående værktøjer
  </ti>
  <ti>
    Ikke længere vedligeholdt af udviklerne, ustabil, specielt på modemer, kan ikke få NIS-servere fra DHCP
  </ti>
</tr>
<tr>
  <ti>udhcpc</ti>
  <ti>net-misc/udhcp</ti>
  <ti>
    Letvægt - mindste dhcp-klient som er rundt omkring, lavet til embedded systemer
  </ti>
  <ti>
    Uprøvet - ingen distro bruger det som standard, kan ikke definere en timeout under 3 sekuner
  </ti>
</tr>
</table>
     
<p>
Hvis du har mere end en DHCP-klient installeret, skal du specificere hvilken en, du bruger - ellers vil standard dhcpcd være tilgængelig.
</p>

<p>
For at sende specifikke valgmuligheder til dhcp-modulet, brug module_eth0="..."
<e>(modulet skal ændres til den DHCP-modul, som du bruger - f.eks. dhcpcd_eth0)</e>
</p>

<p>
Vi prøver og laver DHCP relativt agnostisk - som sådan understøtter vi følgende kommandoer, ved brug af dhcp_eth0 variablerne. Standarden er ikke sat i nogen af dem
</p>

<ul>
  <li>release - udgiver IP-adressen til genbrug</li>
  <li>nodns - overskriv ikke /etc/resolv.conf</li>
  <li>nontp - overskriv ikke /etc/ntp.conf</li>
  <li>nonis - overskriv ikke /etc/yp.conf</li>
</ul>

<pre caption="Udklip af DHCP-opsætning i /etc/conf.d/net">
<comment># Kun hvis du har mere end en DHCP-modul installeret</comment>
modules=( "dhcpcd" ) 

config_eth0=( "dhcp" )
dhcpcd_eth0="-t 10" <comment># Timeout efter 10 sekunder</comment>
dhcp_eth0="release nodns nontp nonis" <comment># Få kun en adresse</comment>
</pre>

<note>
dhcpcd, udhcpc og pump sender den nuværende værtsnavn til DHCP-serveren som standard, så du skal ikke specificere denne længere.
</note>

</body>
</section>
<section>
<title>ADSL Modem</title>
<body>

<p>
Først skal vi installere ADSL-software.
</p>

<pre caption="Installere rp-pppoe pakken">
# <i>emerge net-dialup/rp-pppoe</i>
</pre>

<warn>
baselayout-1.11.x understøtter kun PPPOE. Forhåbentlig vil fremtidige versioner også understøtte PPPOA.
</warn>

<p>
Nu skal vi instruere opsætningen af eth0 til at være en ADSL-grænseflade og tilføje vores brugernavn.
</p>

<pre caption="Opsætning af eth0 til ADSL">
config_eth0=( "adsl" )
user_eth0="brugernavn"
</pre>

<p>
Til sidst skal du definere dit brugernavn og kodeord i
<path>/etc/ppp/pap-secrets</path>
</p>

<pre caption="Udklip af /etc/ppp/pap-secrets">
<comment># * er vigtig</comment>
"brugernavn"  *  "kodeord"
</pre>

</body>
</section>
<section id="apipa">
<title>APIPA (Automatic Private IP Addressing)</title>
<body>

<p>
APIPA prøver at finde tilgængelige adresser i området 169.254.0.0-169.254.255.255 ved at arpe en vilkårlig adresse i dette området til grænsefladen. Hvis der ikke er nogen svar er fundet, tilføjer vi denne adresse til grænsefladen.
</p>

<p>
Dette er kun brugbart til LAN, hvor der ikke er nogen DHCP-server og du ikke forbinder dig direkte til Internet og alle andre computere bruger APIPA.
</p>

<p>
For APIPA-understøttelse, emerge net-misc/iputils or net-analyzer/arping
</p>

<pre caption="APIPA-opsætning i /etc/conf.d/net">
<comment># Prøv først DHCP - hvis det fejler, så gå tilbage til APIPA</comment>
config_eth0=( "dhcp" )
fallback_eth0=( "apipa" )

<comment># Brug bare APIPA</comment>
config_eth0=( "apipa" )
</pre>

</body>
</section>
<section>
<title>Bonding</title>
<body>

<p>
Til link bonding/trunking emerge net-misc/ifenslave
</p>

<p>
Bonding er brugt til at øge netværksbåndbredden. Hvis du har to netkorte på
samme netværk, kan du binde dem samme, så dine programmer kun ser en grænseflade, men bruger i virkeligheden begge netværkskorte.
</p>

<pre caption="bonding opsætning i /etc/conf.d/net">
<comment>For at binde grænseflader sammen</comment>
slaves_bond0="eth0 eth1 eth2"

<comment># Du vil måske ikke have en IP på det bundne grænseflade</comment>
config_bond0=( "null" )

<comment># Afhængig af eth0, eth1 og eth2, da disse kræver ekstra opsætning</comment>
depend_bond0() {
  need net.eth0 net.eth1 net.eth2
}
</pre>

</body>
</section>
<section>
<title>Bridging (802.1d support)</title>
<body>

<p>
Til bridging-understøttelse, emerge net-misc/bridge-utils
</p>

<p>
Bridging er brugt til at sammenslutte netværk sammen. F.eks. har du en server, som er forbundet til Internet via et ADSL-modem, og et trådløs adgangskort til at aktivere andre computere til at forbinde til Internet via ADSL-modemet. Du kunne lave en bro til at sammenslutte de to grænseflader.
</p>

<pre caption="Bridge-opsætning i /etc/conf.d/net">
<comment># Opsætning af broen - "man btctl" for flere detaljer</comment>
brctl_br0=( "setfd 0" "sethello 0" "stp off" )

<comment># At tilføje porte til broen br0</comment>
bridge_br0="eth0 eth1"

<comment># Du skal opsætte portene til nul-værdier, så dhcp ikke starter dem</comment>
config_eth0=( "null" )
config_eth1=( "null" )

<comment># Til sidst, giv broen en adresse - du kunne også bruge DHCP</comment>
config_br0=( "192.168.0.1/24" )

<comment># Afhængig af eth0 og eth1, sa disse kræver ekstra opsætning</comment>
depend_br0() {
  need net.eth0 net.eth1
}
</pre>

<impo>
Til nogle bridge-opsætninger, bør du kigge på 
<uri link="?part=3&amp;chap=2#variable_name">variabelnavn</uri>
dokumentationen.
</impo>

</body>
</section>
<section>
<title>MAC-adresse</title>
<body>

<p>
Du behøver ikke at emerge noget for at ændre MAC-adressen på din grænseflade,hvis du ændrer til en specifik adresse. Dog, hvis du vil ændre den til en 
vilkårlig adresse eller en vilkårlig adresse udfra en given type, så skal du
emerge net-analyzer/macchanger.
</p>

<pre caption="Eksempel af MAC-adresse ændring">
<comment># For at opsætte MAC-adressen til grænsefladen</comment>
mac_eth0="00:11:22:33:44:55"

<comment># For at kun vilkårliggøre de sidste 3 bytes</comment>
mac_eth0="random-ending"

<comment># For at vilkårliggøre imellem de samme fysiske typer af forbindelser (f.eks. fiber,
# kobber, trådløs), alle udbydere</comment>
mac_eth0="random-samekind"

<comment># For at vilkårliggøre imellem hvilken som helst fysiske forbindelse (f.eks. fiber, kobber,
# trådløs), alle udbydere</comment>
mac_eth0="random-anykind"

<comment># Fuldt vilkårligt  - ADVARSEL: nogle MAC-adresser, som er genereret på denne måde vil
# IKKE fungerere som forventet</comment>
mac_eth0="random-full"
</pre>

</body>
</section>
<section>
<title>Tunnelling</title>
<body>

<p>
Du skal ikke emerge noget for at bruge  tunnelling som grænsefladehåndterer, da den kan gøre det for dig.
</p>

<pre caption="Tunnelling-opsætning i /etc/conf.d/net">
<comment># Til GRE-tunneler</comment>
iptunnel_vpn0="mode gre remote 207.170.82.1 key 0xffffffff ttl 255"

<comment># Til IPIP-tunneler</comment>
iptunnel_vpn0="mode ipip remote 207.170.82.2 ttl 255"

<comment># For at opsætte grænsefladen</comment>
config_vpn0=( "192.168.0.2 peer 192.168.1.1" ) 
</pre>

</body>
</section>
<section>
<title>VLAN (802.1q support)</title>
<body>

<p>
For at få VLAN-understøttelse, emerge net-misc/vconfig
</p>

<p>
Virtuel LAN er en gruppe af netværksenheder, som opfører som om de forbundet til et netværkssegment - selvom de ikke er det. VLAN-medlemmer kan kun se medlemmer fra samme VLAN, selvom de måske deler samme fysiske netværk.
</p>

<pre caption="VLAN-opsætning i /etc/conf.d/net">
<comment># Speciferer VLAN-numre til grænsefladen, som dette.</comment>
<comment># Vær sikker på at din VLAN IDer IKKE er nulstillet</comment>
vlans_eth0="1 2"

<comment># Du kan også opsætte VLANet,</comment>
<comment># se vconfig man-side for flere detaljer</comment>
vconfig_eth0=( "set_name_type VLAN_PLUS_VID_NO_PAD" )
vconfig_vlan1=( "set_flag 1" "set_egress_map 2 6" )

<comment># Opsæt grænsefladen som normalt</comment>
config_vlan1=( "172.16.3.1 netmask 255.255.254.0" )
config_vlan2=( "172.16.2.1 netmask 255.255.254.0" )
</pre>

<impo>
For at bruge nogle VLAN-opsætninger, skal du måske kigge i 
<uri link="?part=3&amp;chap=2#variable_name">variabelnavn</uri>
dokumentationen.
</impo>

</body>
</section>

</sections>
