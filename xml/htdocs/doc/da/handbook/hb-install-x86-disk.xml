<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-install-x86-disk.xml,v 1.9 2005/01/29 15:37:57 broeman Exp $ -->

<sections>

<version>1.13</version>
<date>2004-01-28</date>

<section>
<title>Introduktion til blok-enheder</title>
<subsection>
<title>Blok-enheder</title>
<body>

<p>
Vi vil tage et godt kig på disk-orienterede aspekter af Gentoo Linux
og Linux generelt, inklusiv Linux filesystemer, partitioner og blok-enheder.
Så, når du er blevet godt kendt med diske og filsystemer,
vil du blive vejledt igennem processen af at opsætte partioner og filsystemer
til din Gentoo Linux installation.
</p>

<p>
For at begynde, vil vi introducere begrebet <e>blok-enheder</e>. Den mest kendte blok-enhed er sikkert den, som repræsenterer den første IDE-harddisk på et Linux system, med navnet <path>/dev/hda</path>. Hvis dit system bruger SCSI-drev eller SATA-drev, så vil din første harddisk være <path>/dev/sda</path>.
</p>

<p>
Blok-enhederne ovenover repræsenterer en abstrakt grænseflade til
harddisken.  Brugerprogrammer kan bruge disse blok-enheder, til at
interagere med din harddisk, uden at skulle bekymre sig om at dine drev
er IDE, SCSI eller noget andet. Programmet kan simpelthen adressere
lageret på harddisken, som et bundt af tilstødende,
vilkårlige-tilgængelige 512-byte blokke.
</p>

</body>
</subsection>
<subsection>
<title>Partitioner</title>
<body>

<p>
Selvom det er teoretisk muligt at bruge hele harddisken til dit Linux
system, er det næsten aldrig gjort i praksis. I stedet for er hele
hardiskens blok-enheder opsplittet i mindre, mere håndgribelige
blok-enheder. På de fleste systemer er disse kaldet
<e>partitioner</e>
</p>

<p>
Partitioner er opdelt i tre typer:
<e>primære</e>, <e>udvidet</e> og <e>logiske</e>.
</p>

<p>
En <e>primær</e> partition er en partition, som har dens informationer gemt på
MBR (master boot record). Da en MBR er meget lille (512 bytes) kan kun fire
primære partitioner blive defineret (f.eks. <path>/dev/hda1</path> til
<path>/dev/hda4</path>).
</p>

<p>
En <e>udvidet</e> partition er en speciel primær partition (som
betyder, at den udvidede partition skal være én af de første fire mulige
primære partitioner) som indeholder flere partitioner. Sådan en
partition eksisterede ikke oprindeligt, men da fire partitioner var
for lidt, kom nogen med idéen om at udvide formateringsskemaet uden at tabe
bagud-kompatibilitet.
</p>

<p>
En <e>logisk</e> partition er en partition inden i den udvidet partition. Deres
definitioner er ikke placeret inde i MBR, men er erklæret inde i den udvidet
partition. 
</p>

</body>
</subsection>
<subsection>
<title>Advanceret lagring</title>
<body>

<p>
x86-arkitekturen leverer understøttelse til EVMS eller LVM2, hvis du har startet op fra en Gentoo LiveCD. EVMS eller LVM2 forøger fleksibiliteten, givet af din partitionsopsætning. Igennem installationsinstruktionerne, vil vi fokusere på "normale" partitioner, men det er stadigvæk godt at vide at EVMS og LVM2 også er understøttet.
</p>

</body>
</subsection>
</section>
<section>
<title>Design af et partitionsskema</title>
<subsection>
<title>Standard partitionsskema</title>
<body>

<p>
Hvis du ikke er interesseret i at tegne en partitionsoversigt selv,
til dit system, kan du bruge vores (non-LVM) partitionsskema, som vi
bruger igennem denne bog:
</p>

<table>
<tr>
  <th>Partitioner</th>
  <th>Filsystem</th>
  <th>Størrelse</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>ext2</ti>
  <ti>32M</ti>
  <ti>Boot partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Swap partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>ext3</ti>
  <ti>Resten af harddisken</ti>
  <ti>Root partition</ti>
</tr>
</table>

<p>
Hvis du er interesseret i at vide hvor stor en partition (eller logical 
volume) burde være, eller hvor mange partitioner (eller volumes) du behøver, læs videre. 
Ellers fortsæt nu med at partitionere din harddisk ved at læse <uri link="#fdisk">Brug af fdisk for at partionere din harddisk</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Hvor mange og hvor stort?</title>
<body>

<p>
Antallet af partitioner er meget afhængigt af dit miljø. F.eks., hvis
du har en hel del brugere, vil det være nærmest at lave dit
<path>/home</path> separat, idet at det forøger sikkerheden og gør det
nemmere at lave backup.  Hvis du installerer Gentoo for at arbejde som
en mail-server, burde din <path>/var</path> være separat, idet alle
emails er gemt inde i <path>/var</path>. Et godt valg af filsystem vil
derefter maksimere din ydelse. Spil-servere bør have en separat
<path>/opt</path>, idet at de fleste spil-servere bliver installeret
der. Forklaringen er den samme som for <path>/home</path>: sikkerhed
og backup.
</p>

<p>
Som du kan se, afhænger det meget af hvad du vil opnå. Separate
partitioner eller volumes har følgende fordele:
</p>

<ul>
<li>
  Du kan vælge det bedste ydelsesstærke filsystem til hver partition eller volume
</li>
<li>
  Hele dit system bør ikke løbe tør for fri harddisk-plads, hvis et ødelagt værktøj bliver
  ved med at skrive filer til en partition eller volume
</li>
<li>
  Hvis nødvendigt, et filsystem-tjek er reduceret i tid, idet flere tjek kan blive
  gjort parallelt (selvom denne fordel er større med flere harddiske
  end med flere partitioner)
</li>
<li>
  Sikkerhed kan blive forøget ved at mounte nogle partitioner eller volumes read-only (kun-læs), 
  nosuid (setuid bits er ignoreret), noexec (executable bits er ignoreret) osv.
</li>
</ul>

<p>
Dog har flere partitioner en stor ulempe: hvis det ikke er opsat
ordentligt, kan det betyde at have et system med masser
af fri plads på én partition og intet på en anden. Der er også en
begræsning på 15 partitioner på SCSI og SATA.
</p>

<p>
Som et eksempel på partitionering, viser vi dig en til en 20 GB harddisk, brugt som
demonstrationsbærbar (som indeholder webserver, mailserver, gnome, ...):
</p>

<pre caption="Brug af filsystem eksempel">
$ <i>df -h</i>
Filesystem    Type    Size  Used Avail Use% Mounted on
/dev/hda5     ext3    509M  132M  351M  28% /
/dev/hda2     ext3    5.0G  3.0G  1.8G  63% /home
/dev/hda7     ext3    7.9G  6.2G  1.3G  83% /usr
/dev/hda8     ext3   1011M  483M  477M  51% /opt
/dev/hda9     ext3    2.0G  607M  1.3G  32% /var
/dev/hda1     ext2     51M   17M   31M  36% /boot
/dev/hda6     swap    516M   12M  504M   2% &lt;not mounted&gt;
<comment>(Upartitioneret plads til fremtidig brug: 2 GB)</comment>
</pre>

<p>
<path>/usr</path> er pænt fyldt op (83% brugt) her, men når først alt
softwaren er installeret, vil tendensen være at <path>/usr</path> ikke
gror særligt meget.  Til <path>/var</path> kan folk måske tro at der
er blevet afsat for meget plads. Dog kompilerer Gentoo alle programmer
inde i <path>/var/tmp/portage</path>, så du burde have
<path>/var</path> med minimum 1GB fri plads, hvis du ikke vil
kompilere store programmer og mindst 3GB fri plads, så kompileringen
af KDE og OpenOffice.org ikke bliver til et problem for dig.
</p>

</body>
</subsection>
</section>
<section id="fdisk">
<title>Brug af fdisk for at partitionere din harddisk</title>
<subsection>
<body>

<impo>
Kun brugere med <e>x86</e> eller <e>amd64</e> baserede systemer bør læse denne
sektion.
</impo>

<p>
De følgende dele forklarer hvordan man laver partitionslayoutet, som
beskrevet førhen, nemlig:
</p>

<table>
<tr>
  <th>Partition</th>
  <th>Beskrivelse</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>Boot partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>Swap partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Root partition</ti>
</tr>
</table>

<p>
Du kan ændre partitionslayoutet som du ønsker det.
</p>

</body>
</subsection>
<subsection>
<title>Et kig på den nuværende partitionslayout</title>
<body>

<p>
<c>fdisk</c> er et populært og et kraftfuld værktøj til at splitte din
harddisk ind i partitioner.  Fyr op for din <c>fdisk</c> på din
harddisk (i vores eksempel, bruger vi <path>/dev/hda</path>):
</p>

<pre caption="Start af fdisk">
# <i>fdisk /dev/hda</i>
</pre>

<p>
Når du er i <c>fdisk</c>, vil du blive hilst af en prompt, som ligner dette:
</p>

<pre caption="fdisk prompt">
Command (m for help): 
</pre>

<p>
Tast <c>p</c> for at vise din harddisks nuværende opsætning:
</p>

<pre caption="Et eksempel på en partitionsopsætning">
Command (m for help): <i>p</i>

Disk /dev/hda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        49    264600   82  Linux swap
/dev/hda3            50        70    158760   83  Linux
/dev/hda4            71      2184  15981840    5  Extended
/dev/hda5            71       209   1050808+  83  Linux
/dev/hda6           210       348   1050808+  83  Linux
/dev/hda7           349       626   2101648+  83  Linux
/dev/hda8           627       904   2101648+  83  Linux
/dev/hda9           905      2184   9676768+  83  Linux

Command (m for help): 
</pre>

<p>
Denne specifikke harddisk er opsat til at huse syv Linux filesystemer (partitionerne,
hver især, er vist som "Linux") samt en swap-partition (vist
som "Linux swap"). 
</p>

</body>
</subsection>
<subsection>
<title>At slette alle partitioner</title>
<body>

<p>
Vi vil først slette alle de eksisterende partitioner fra harddisken. Tast <c>d</c> for
at slette en partition. F.eks. for at slette en eksisterende <path>/dev/hda1</path>:
</p>

<pre caption="Slette en partition">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Partitionen er blevet planlagt til at blive slettet. Den vil nu ikke
længere blive vist, når du taster <c>p</c>, men den er ikke slettet
før dine ændringer er blevet gemt. Hvis du har lavet en fejl og vil
afbryde uden at gemme, tast <c>q</c> med det samme, tryk Enter og
din partition vil ikke blive slettet.
</p>

<p>
Forudsat at du nu virkelig vil udslette alle partitioner på dit
system, tast gentagne gange <c>p</c> for at udskrive partitionslisten og tast
<c>d</c> og nummeret på partitionen, for at slette den. Til sidst vil
du ende med en partitionstabel uden noget i:
</p>

<pre caption="En tom partitionstabel">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Nu da partitionstabellen, som ligger i hukommelsen, er tom, er det nu
tid til at lave partitioner. Vi vil bruge standard partitionsskemaet,
som diskuteret tidligere.  Selvfølgelig, følg ikke disse instruktioner
til punkt og prikke, hvis du ikke vil have det samme partitionsskema!
</p>

</body>
</subsection>
<subsection>
<title>Oprettelse af boot-partition</title>
<body>

<p>
Først vil vi lave en lille boot-partition. Tast <c>n</c> for at oprette en
ny partition, så <c>p</c> for at vælge en primær partition, fulgt af
<c>1</c> for at vælge den første primære partition. Når du bliver
spurgt om den første cylinder, tryk Enter. Når du bliver spurgt om den
sidste cylinder, tast <c>+32M</c> for at lave en partition på 32 Mbyte
i størrelse:
</p>

<pre caption="Oprettelse af boot-partition">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-3876, default 1): <comment>(Tryk Enter)</comment>
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <i>+32M</i>
</pre>

<p>
Når du nu taster <c>p</c>, vil du se følgende partitionsudskrift:
</p>

<pre caption="Oprettet boot-partition">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
</pre>

<p>
Vi mangler at gøre denne partition startbar. Tast <c>a</c> for at skifte opstartsflag på en partition og vælge <c>1</c>. Hvis du taster <c>p</c> igen, vil du se at <path>*</path> er placeret i "Boot"-kolonnen.
</p>

</body>
</subsection>
<subsection>
<title>Oprettelse af swap-partition</title>
<body>

<p>
Lad os nu lave en swap-partition. For at gøre dette, tast <c>n</c> for
at lave en ny partition, så <c>p</c> for at fortælle fdisk, at du vil
have en primær partition. Tast så <c>2</c> for at lave den anden
primære partition, <path>/dev/hda2</path> i vores eksempel. Når du
bliver spurgt om den første cylinder, så tryk Enter. Når du bliver spurgt
om den sidste cylinder, tast <c>+512M</c> for at oprette en partition
på 512MB i størrelse. Efter at du har gjort det, tast <c>t</c> for at
indstille partitionstypen, <c>2</c> for at vælge partitionen, som du
lige har oprettet, og tast så <c>82</c> for at indstille
partitionenstypen til "Linux Swap". Efter afslutningen af disse trin,
ved at taste <c>p</c>, burde vise en partitionstabel, som ser ud som
dette:
</p>

<pre caption="Partitionsliste efter oprettelse af en swap-partition">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
</pre>

</body>
</subsection>
<subsection>
<title>Oprettelse af root-partition</title>
<body>

<p>
Lad os nu, til sidst, oprette root-partitionen. For at gøre dette, tast
<c>n</c> for at oprette en ny partition, så <c>p</c> for at fortælle
fdisk, at du vil have en primær partition.  så tast <c>3</c> for at
oprette den tredje primære partition, <path>/dev/hda3</path> i vores
tilfælde. Når du bliver spurgt om den første cylinder, tryk Enter. Når
du bliver spurgt om den sidste cylinder, tryk Enter for at oprette en
partition, som tager resten af den frie plads der er tilbage på din
harddisk. Efter at have afsluttet disse trin, ved at taste <c>p</c>
burde vise en partitionstabel, som ser ud som dette:
</p>

<pre caption="Partitionsliste efter oprettelsen af root-partition">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
/dev/hda3         82      3876  28690200   83  Linux
</pre>


</body>
</subsection>
<subsection>
<title>At gemme partitionslayout</title>
<body>

<p>
For at gemme partitionslayoutet og afslutte <c>fdisk</c>, tast <c>w</c>.
</p>

<pre caption="Gem og afslut fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Nu da dine partitioner er oprette, kan du nu fortsætte med <uri
link="#filesystems">Oprettelse af filsystemer</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Oprettelse af filsystemer</title>
<subsection>
<title>Introduktion</title>
<body>

<p>
Nu da dine partitioner er lavet, er det tid til at lave filsystemer på
dem. Hvis du er ligeglad med hvilket filsystem du vælger og er
tilfreds med hvad vi bruger som standard her i denne håndbog, så kan
du fortsætte med <uri link="#filesystems-apply">At anvende et filsystem på en
partition</uri>. Ellers kan du fortsætte for at lære mere om de
tilgængelige filsystemer...
</p>

</body>
</subsection>
<subsection>
<title>Filsystemer?</title>
<body>

<p>
Der er adskillige filsystemer til rådighed. Vi vil forklare ext2, ext3,
ReiserFS, XFS og JFS, da disse er normalt brugt på Linux-systemer.
</p>

<p>
<b>ext2</b> er det afprøvede og sande Linux filsystem, men det har
ikke metadata journaler, hvilket betyder at rutinemæssige tjek af
filsystemer ved opstart kan tage en del tid. Der er nu et udvalg af
filsystemer af nyere generation med journal, der kan tjekkes for
konsekvens meget hurtigt og er derfor at foretrække fremfor deres
tilsvarende uden journal. Filsystemer med journal kan afskaffe lange
ventetider når dit system starter op og dine filsystemer er i en ikke
konsekvent tilstand.
</p>

<p>
<b>ext3</b> er den journaliserede udgave af ext2 filsystemet, der
giver metadata journaler til hurtig genskabelse og yderligere andre
ydelse fremmende journal muligheder så fuld data og ordnet data
journal. ext3 er meget godt og et pålideligt filsystem. Det har en ekstra
mulighed for at bruge hashede b-træer til at indeksere, hvilket giver høj
ydelse i næsten alle situationer. For at sige det kort, ext3 er et
fremragende filsystem.
</p>

<p>
<b>ReiserFS</b> er et filsystem baseret på B*-træer der har en god
alsidig ydelse og slår både ext2 og ext3 stor når det kommer til at
håndtere små filer (filer mindre end 4k), ofte med en faktor på
10x-15x. ReiserFS skalerer også ekstremt godt og har metadata
journaler. Fra og med kerne 2.4.18+ er ReiserFS solid og brugbart til
både et formål som alment filsystem, og til ekstreme tilfælde
hvor man laver store filsystemer, brugen af mange små filer,
meget store filer og biblioteker, der indeholder titusinder af filer.
</p>

<p>
<b>XFS</b> er et filsystem med metadata journaler, som kommer med et
robust sæt af muligheder og er optimeret til skalerbarhed. Vi
anbefaler kun at bruge dette filsystem til Linux systemer med high-end
SCSI og/eller fiberkanal lager og en uafbrydbar strømforsyning. Fordi
XFS aggressivt cachér indkommende data i RAM, kan dårligt designede
programmer (dem der ikke tager fornuftige forholdregler, når de
skriver filer til disken og der er faktisk en del af dem) miste en hel
del data, hvis systemet uventet går ned.
</p>

<p>
<b>JFS</b> er IBM's høj-ydelses filsystem med journal. Det er
fornyligt blevet klar til produktion og der har ikke være
tilstrækkelige optegnelser til at kommentere positivt eller negativt
omkring dets stabilitet pt.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>At anvende et filsystem på en partition</title> 
<body>

<p>
For at lave et filsystem på en partition eller enhed, så er der
værktøjer til rådighed for hvert filsystem:
</p>

<table>
<tr>
  <th>Filsystem</th>
  <th>Kommando til at lave</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
F.eks. for at få boot partitionen (<path>/dev/hda1</path> i vores
tilfælde) i ext2 og root partitionen (<path>/dev/hda3</path> i vores
tilfælde) i ext3 (som i vores tilfælde), ville vi bruge:
</p>

<pre caption="At anvende et filsystem på en partition">
# <i>mke2fs /dev/hda1</i>
# <i>mke2fs -j /dev/hda3</i>
</pre>

<p>
Lav nu filsystemerne på dine for nyligt skabte partitioner (eller
logiske enheder).
</p>

</body>
</subsection>
<subsection>
<title>At aktivere swap-partitionen</title>
<body>

<p>
<c>mkswap</c> er kommandoen der bruges til at initialisere swap partitioner:
</p>

<pre caption="At lave en swap signatur">
# <i>mkswap /dev/hda2</i>
</pre>

<p>
For at aktivere swap-partitionen, brug <c>swapon</c>:
</p>
	 
<pre caption="At aktivere swap-partitionen">
# <i>swapon /dev/hda2</i>
</pre>

<p>
Lav og aktiver swap nu.
</p>

</body>
</subsection>
</section>
<section>
<title>At mounte</title>
<body>

<p>
Nu hvor dine partitioner er initialiserede og huser et filsystem, er
det tid til at mounte disse partitioner. Brug <c>mount</c>
kommandoen. Glem ikke at lave de nødvendige mount-biblioteker til hver partition, som du har oprettet. Som et eksempel vil vi mounte root og boot-partionerne:
</p>

<pre caption="At mounte partitioner">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

<note>
Hvis du vil have din <path>/tmp</path> til at være på en separat
partition, så vær sikker på at ændre dens rettigheder efter at være
blevet mountet: <c>chmod 1777 /mnt/gentoo/tmp</c>. Dette gælder også
for <path>/var/tmp</path>.
</note>

<p>
Vi bliver også nødt til at mounte proc filsystemet (en virtuel
grænseflade til kernen) på <path>/proc</path>. Men først skal vi placere vores filer på partitionerne.
</p>

<p>
Fortsæt med <uri link="?part=1&amp;chap=5">Installere Gentoo installationsfiler</uri>.
</p>

</body>
</section>
</sections>
