<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/handbook/hb-install-sparc-kernel.xml,v 1.2 2004/05/16 17:22:18 broeman Exp $ -->

<sections>
<section>
<title>Tidszone</title>
<body>
  	 
<p>
Du bliver først nødt til at vælge din tidszone så. at dit system ved
hvor det er lokaliseret. Kig efter din tidszone i
<path>/usr/share/zoneinfo</path>, og lav derefter en symbolsk
henvisning til <path>/etc/localtime</path> ved brug af <c>ln</c>:
</p>
  	 
<pre caption="At sætte tidszone informationen">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Hvis du vil bruge GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>
  	 
</body>
</section>

<section>
<title>Installation af kildekoderne</title>
<subsection>
<title>Valg af kerne</title>
<body>

<p>
Kernen omkring alle distributioner er bygget på Linux-kernen. Det er et
lag imellem bruger-programmer og dit systems hardware. Gentoo giver dens
brugere flere forskellige mulige kerne-kildekoder. En fuld liste med 
beskrivelser forefindes i <uri link="/doc/da/gentoo-kernel.xml">Gentoo 
Linux kerne vejledning</uri>. 
</p>

<p>
Til sparc-baserede systemer har vi <c>vanilla-sources</c> (standard 
kerne-kildekode, som er udviklet af linux-kerne udviklerne),
<c>development-sources</c> (standard 2.6 kerne kildekoden) og 
<c>sparc-sources</c> (kerne-kildekode optimeret til SPARC-brugere).
</p>

<p>
Vælg din kerne-kildekode og installer den ved at bruge <c>emerge</c>. 
</p>

<p>
I det næste eksempel vil vi installere <c>vanilla-sources</c>. Selvfølgelig kan du udskifte dit valg af kildekode:
</p>

<pre caption="Installation af kerne-kildekode">
# <i>emerge vanilla-sources</i>
</pre>

<p>
Når du tager et kig i <path>/usr/src</path>, burde du se en genvej 
kaldet <path>linux</path>, som peger mod din kerne-kildekode:
</p>

<pre caption="Se genvej til kerne-kildekode">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.26
</pre>

<p>
Hvis det ikke er det (altså at genvejen peger mod en anden 
kerne-kildekode) skal du ændre genvejen før du fortsætter:
</p>

<pre caption="Ændring af genvejen til kerne-kildekode">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.26 linux</i>
</pre>

<p>
Nu er det tid til at opsætte og kompilere din kernes kildekoder.
</p>

</body>
</subsection>
</section>
<section>
<title>Manuel opsætning</title>
<subsection>
<title>Introduktion</title>
<body>

<p>
At opsætte kernen manuelt bliver ofte anset som det sværeste, som enhver
Linux-bruger skal gå igennem. Intet er mindre rigtigt -- efter
opsætninger af nogle kerner, vil du ikke kunne huske at det var svært ;)
</p>

<p>
Én ting er dog <e>rigtigt</e>: du skal kende dit system, når du starter med at
opsætte en kerne manuelt. De fleste informationer kan blive indsamlet ved at se
på indholdet af <path>/proc/pci</path> (eller ved at bruge <c>lspci</c>, hvis 
den er tilgængelig). Du kan også køre <c>lsmod</c> for at se hvilke 
kerne-moduler, LiveCDen bruger (det vil måske give dig en god idé om hvad du 
skal aktivere).
</p>

<p>
Gå nu til kerne-kildekode mappen og udfør <c>make menuconfig</c>. Dette
vil starte en ncurses-baseret opsætningsmenu.
</p>

<pre caption="Påkalde menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Du vil blive hilst af flere opsætningssektioner. Vi vil først give dig
en liste af de valgmuligheder, som du skal aktivere (ellers vil Gentoo
ikke funktionere, eller funktionere ordentligt uden ekstra
finindstillinger).
</p>

</body>
</subsection>
<subsection>
<title>Aktivering af krævede valgmuligheder</title>
<body>

<p>
Først skal du aktivere brugen af udviklings- og forsøgskoder/-drivere.
Du vil få brug for dette, ellers vil meget vigtige koder/drivere ikke vise sig:
</p>

<pre caption="Valg af eksperimentielle koder/drivere">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Gå nu til <c>File Systems</c> og vælg understøttelse til de filsystemer, som 
du bruger.
Kompiler dem <e>ikke</e> som moduler, ellers vil dit Gentoo system ikke have 
mulighed for at montere dine partitioner. Vælg også <c>Virtual memory</c>, 
<c>/proc file system</c>, <c>/dev file system</c> og 
<c>Automatically mount at boot</c>:
</p>

<pre caption="Valg af nødvendige filsystemer">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot

<comment>(Fravælg disse følgende, medmindre du har en 2.6 kerne)</comment>
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Vælg en eller flere af de følgende valgmuligheder, som er nødvendige for dit system)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
Brugere af en 2.6 kerne vil finde nogle af de ovennævnte valgmuligheder under 
<c>Pseudo filesystems</c>, som er en underafdeling af <c>File systems</c>.
</note>

<p>
Hvis du bruger PPPoE til at forbinde til Internettet eller du bruger en opkaldsmodem, vil du få brug for de følgende valgmuligheder i kernen:
</p>

<pre caption="Valg af PPPoE nødvendige drivere">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<note>
Brugere af en 2.6 kerne vil finde nogle af de ovennævnte valgmuligheder under 
<c>Networking support</c>, som er en underafdeling af <c>Device Drivers</c>.
</note>

<p>
De to kompressionsvalgmuligheder vil ikke være ubrugelige, men er slet ikke 
nødvendige, det samme med <c>PPP over Ethernet</c> valgmuligheden, som måske 
vil blive brugt af <c>rp-pppoe</c>, når den er opsat til at lave kerne-modus 
PPPoE.
</p>

<note>
Brugere af en 2.6 kerne vil finde nogle af de ovennævnte valgmuligheder under 
<c>Device Drivers</c>.
</note>

<p>
Hvis du kræver det, glem ikke at inkludere understøttelse af dit netkort
i kernen.
</p>

<p>
Aktiver den korrekte bus-understøttelse:
</p>

<pre caption="Aktivering af SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>(Kun til UPA slot adapter, brugt i mange Ultra'er)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Kun til SBUS slot adapter, brugt i mange SPARCStations)</comment>
</pre>

<p>
Selvfølgelig skal du også have understøttelse til OBP'en:
</p>

<pre caption="Aktivering af OBP-understøttelse">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
Du vil også få brug for SCSI-specifik understøttelse:
</p>

<pre caption="Aktivering af SCSI-specifik understøttelse">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Kun til SPARC ESP on-board SCSI adapter)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Kun til SBUS SCSI controllers from PTI or QLogic)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Kun til Ultra 60 on-board SCSI adapter)</comment>
</pre>

<p>
For at understøtte dit netværkskort, vælg én af de følgende:
</p>

<pre caption="Aktivering af netværksunderstøttelse">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>(Kun til SPARCStation, ældre Ultra systemer, og som Sbus-valgmulighed)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>(Kun til Ultra; understøtter også "qfe" quad-ethernet på PCI og Sbus)</comment>
</pre>

<p>
Når du er færdig med at opsætte din kerne, fortsæt med <uri
link="#compiling">Kompilering og installation</uri>. Dog, efter at have
kompileret kerne, kig efter størrelsen:
</p>

<pre caption="Tjek af kerne-størrelse">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
Hvis den (ukomprimerede) størrelse er større end 2.5Mb (til Sparc32) eller 
3.5Mb (til Sparc64), genopsæt din kerne indtil at den ikke overskrider disse 
begrænsninger. Én metode til at gøre dette, er ved at have de fleste 
kerne-drivere kompileret som moduler.
Ignorerer du dette kan det føre til en ikke-opstartbar kerne.
</p>

<p>
Hvis din kerne er en lille smule for stor, kan du prøve at "strippe" den ved 
at bruge <c>strip</c>-kommandoen:
</p>

<pre caption="Skrælle kernen">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilering og installation</title>
<body>

<p>
Nu da din kerne er opsat, er det tid til at kompilere og installere den. 
Afslut opsætningen (Exit) og kør <c>make dep &amp;&amp; make bzImage modules 
modules_install</c>:
</p>

<pre caption="Kompilering af kerne">
<comment>(Til 2.4 kerne, sparc32)</comment>
# <i>make dep &amp;&amp; make clean vmlinux modules modules_install</i>

<comment>(Til 2.4 kerne, sparc64)</comment>
# <i>make dep &amp;&amp; make clean vmlinux image modules modules_install</i>

<comment>(Til 2.6 kerne, sparc32)</comment>
# <i>make dep &amp;&amp; make modules_install</i>

<comment>(Til 2.6 kerne, sparc64)</comment>
# <i>make dep &amp;&amp; make image modules_install</i>
</pre>

<p>
Når kernen er færdig med at kompilere, kopier den da over til
<path>/boot</path>.
</p>

<pre caption="Installation af kerne">
<comment>(til 2.4 kerne, sparc32)</comment>
# <i>cp vmlinux /boot/kernel-2.4.26</i>

<comment>(til 2.4 kerne, sparc64)</comment>
# <i>cp arch/sparc64/boot/image /boot/kernel-2.4.26</i>

<comment>(til 2.6 kerne, sparc32)</comment>
# <i>cp arch/sparc/boot/image /boot/kernel-2.4.26</i>

<comment>(til 2.6 kerne, sparc64)</comment>
# <i>cp arch/sparc64/boot/image /boot/kernel-2.4.26</i>

<comment>(Glem ikke at kopiere System.map over også)</comment>
# <i>cp System.map /boot</i>
</pre>

<p>
Det er også klogt at kopiere din kerneopsætningsfil til
<path>/boot</path>, bare for en sikkerheds skyld :)
</p>

<pre caption="Backup af din kerneopsætning">
# <i>cp .config /boot/config-2.4.26</i>
</pre>

<p>
Fortsæt nu med <uri link="#kernel_modules">Installation af separate
kernemoduler</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Installation af separate kernemoduler</title>
<subsection>
<title>Opsætning af moduler</title>
<body>

<p>
Du bør opliste de moduler, som du vil have automatisk hentet, i <path>/etc/modules.autoload.d/kernel-2.4</path> (eller <path>kernel-2.6</path>). Du kan også tilføje ekstra valgmuligheder til modulerne, hvis du vil.
</p>

<p>
For at se alle de tilgængelige moduler, kør følgende <c>find</c>-kommando. Glem ikke
at udskifte "&lt;kernel version&gt;" med den version af kernen, du lige
har kompileret:
</p>

<pre caption="Se alle mulige moduler">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
For automatisk at hente f.eks <c>3c59x.o</c> modulet, skal du ændre
<path>kernel-2.4</path> eller <path>kernel-2.6</path> filen og skrive
modulnavnet i den.
</p>

<pre caption="At redigere /etc/modules.autoload.d/kernel-2.4">
<comment>(Eksempel for 2.4 kerner)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 eller kernel-2.6">
3c59x
</pre>

<p>
Kør nu <c>modules-update</c> for at overgive dine ændringer til
<path>/etc/modules.conf</path> filen:
</p>

<pre caption="Start af modules-update">
# <i>modules-update</i>
</pre>

<p>
Fortsæt installationen med <uri link="?part=1&amp;chap=8">Opsætning af
dit system</uri>.
</p>

</body>
</subsection>
</section>
</sections>
