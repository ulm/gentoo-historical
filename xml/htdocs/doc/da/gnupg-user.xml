<?xml version='1.0' encoding="utf-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/da/gnupg-user.xml,v 1.6 2004/08/30 20:44:29 broeman Exp $ -->
<guide link = "/doc/da/gnupg-user.xml" lang="da">
<title>GnuPG Gentoo brugervejledning</title>
<author title="Forfatter">
<mail link="gustavo@felisberto.net">Gustavo Felisberto</mail>
</author>
<author title="Redaktør">
<mail link="zhen@gentoo.org">John P. Davis</mail>
</author>
<author title="Redaktør">
<mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Redaktør">
<mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Oversætter">
<mail link="dysk@gaudity.com">Frands Sohn Frøkjær-Jensen</mail>
</author>
<author title="Oversætter">
<mail link="redeeman@metanurb.dk">Kasper Sandberg</mail>
</author>
<author title="Korrektur">
<mail link="broeman@gentoo.org">Jesper Brodersen</mail>
</author>
<author title="Korrektur">
<mail link="aaby@gentoo.org">Arne Mejlholm</mail>
</author>

<abstract>
Denne lille vejledning vil lære dig den basale brug af GnuPG, som er et redskab til sikker kommunikation.
</abstract>

<license/>

<version>1.0.7</version>
<date>15. April 2004</date>

<chapter>
<title>Introduktion</title>
<section>
<title>Hvad denne vejledning indeholder</title>
<body>

<p>
Denne vejledning regner med at du har nogenlunde kendskab til
public-key kryptografi, kryptering, og digitale underskrifter. Hvis
dette ikke er tilfældet, så spring til <uri
link="#doc_chap6">Offentlig nøglekryptografi</uri> eller tag et kig på
<uri link="http://www.gnupg.org/(en)/documentation/guides.html">GnuPG
håndbogen</uri> (engelsk) kapitel 2, og så kom tilbage.
</p>

<p>
Denne vejledning vil lære dig hvordan man installerer GnuPG, hvordan
man laver et nøglepar, hvordan man tilføjer nøgler til din nøglering,
hvordan man tilføjer sin offentlige nøgle til en nøgle-server og
hvordan man signerer, dekrypterer, verificerer eller dekoder
meddelelser, som du sender eller modtager. Du vil også lære hvordan
man krypterer filer på din lokale computer for at beskytte dem mod at
blive læst af andre personer.
</p>

</body>
</section>
<section>
<title>Installation af den nødvendige software</title>
<body>

<p>
På et meget basalt niveau skal du <c>emerge gnupg</c>. Mange
programmer i dag har en slags understøttelse for gpg, så at have gpg i
dine USE-flag er sikkert en god idé. Hvis du ønsker at benytte en
email klient, som kan bruge gnupg, kan du anvende pine (<c>emerge
pinepgp</c>), mutt (<c>emerge mutt</c>), Mozilla/Netscape Mail,
evolution (evolution er en GNOME klon af Microsoft Outlook) og KDEs egen
KMail (KMail er en del af kdenetwork-pakken).
</p>

<p>
<c>Kgpg</c> er måske af interesse hvis du bruger KDE. Dette lille program
giver dig mulighed for at generere nøglepar, importere nøgler fra
ASCII filer, signere og importere nøgler, eksportere nøgler, og et par
flere nyttige ting.
</p>

</body>
</section>
</chapter>

<chapter>
<title>At generere din nøgle og tilføje den til din offentlige nøglering</title>
<section>
<title>At generere din nøgle</title>
<body>

<p>
For at generere din nøgle, bare kør <c>gpg --gen-key</c>. Første gang
du kører den, vil den lave nogle mapper; kør den igen, og den vil lave
de aktuelle nøgler:
</p>

<pre caption="genereringsprocessen af dine nøgler">
# <i>gpg --gen-key</i>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.

Please select what kind of key you want:
 (1) DSA and ElGamal (default)
 (2) DSA (sign only)
 (4) ElGamal (sign and encrypt)
 (5) RSA (sign only)
 Your selection? <i>1</i>
</pre>

<p>
Her kan du vælge den type nøgle du vil bruge. De fleste brugere vil
vælge den normale DSA og ElGamal. Det næste er størrelsen på din nøgle
- husk at jo større den er, desto bedre, men brug ikke mere end 2048
med DSA/ElGamal nøgler. Normalt 1024 er mere end nok til almindelige
emails.
</p>

<p>
Efter størrelse kommer udløbsdatoen. Her er lavest det bedre, men de
fleste brugere kan bruge en nøgle, som aldrig udløber eller fra 2 til
3 år.
</p>

<pre caption="Valg af størrelse på nøgle">
DSA keypair will have 1024 bits.
About to generate a new ELG-E keypair.
            minimum keysize is  768 bits
            default keysize is 1024 bits
  highest suggested keysize is 2048 bits
  What keysize do you want? (1024) <i>2048</i>
Requested keysize is 2048 bits       
Please specify how long the key should be valid.
       0 = key does not expire
       &lt;n&gt;= key expires in n days
       &lt;n&gt;w = key expires in n weeks
       &lt;n&gt;m = key expires in n months
       &lt;n&gt;y = key expires in n years
       Key is valid for? (0) <i>0</i>
Key does not expire at all
</pre>

<p>
Nu er det så tid til at indtaste nogle personlige informationer
omkring dig selv. Hvis du har planlagt at sende din offentlige nøgle
til andre mennesker, skal du indtaste din rigtige email-adresse her.
</p>

<pre caption="Indtastning af bruger information">
Is this correct (y/n)? <i>y</i>
                      
You need a User-ID to identify your key; the software constructs the user id
from Real Name, Comment and Email Address in this form:
"Henrik Hansen (Digteren) &lt;henrik@opdigtetnet.dk&gt;"

Real name: <i>John Doe</i>
Email address: <i>john@nowhere.someplace.flick</i>
Comment: <i>The Real John Doe</i>
You selected this USER-ID:
"John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"

Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? <i>O</i> 
You need a Passphrase to protect your secret key.    

Enter passphrase: 
</pre>

<p>
Nu skal du indtaste koden 2 gange. Det er en god idé at bruge en stærk
kode. Hvis nogen får fat på din private nøgle og bryder din kode, vil
de være istand til at sende beskeder signeret af *dig*, som alle vil
tro vitterligt er signeret af dig.
</p>

<p>
Nu vil GnuPG generere din nøgle. Hvis du flytter med musen eller
spiller en mp3 i baggrunden, vil det hjælpe på hastigheden, da den
genererer en masse tilfældig data.
</p>

</body>
</section>
<section>
<title>Generere et tilbagetrækkelsescerfifikat</title>
<body>

<impo>
Denne del er meget vigtig, og du skal gøre det <e>NU</e>.
</impo>

<p>
Efter du har lavet dine nøgler bør du lave et
tilbagetrækkelsescertifikat. Ved at gøre dette, bliver du istand til
at tilbagetrække dine nøgler i tilfælde af at noget slemt sker for
dine nøgler (nogen får fat på din nøgle/kodeord)
</p>

<pre caption="Generering af tilbagetrækkelsescertifikat">
# <i>gpg --list-keys</i>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;
sub  2048g/96D6CDAD 2002-12-08

# <i>gpg --output revoke.asc --gen-revoke 75447B14</i>

sec  1024D/75447B14 2002-12-08   John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;

Create a revocation certificate for this key? <i>y</i>
Please select the reason for the revocation:   
0 = No reason specified
1 = Key has been compromised
2 = Key is superseded
3 = Key is no longer used
Q = Cancel
(Probably you want to select 1 here)
Your decision? <i>1</i>
Enter an optional description; end it with an empty line:
&gt; <i>Someone cracked me and got my key and passphrase</i>
&gt;
Reason for revocation: Key has been compromised
Someone cracked me and got my key and passphrase
Is this okay? <i>y</i>

You need a passphrase to unlock the secret key for
user: "John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"
1024-bit DSA key, ID 75447B14, created 2002-12-08

ASCII armored output forced.
Revocation certificate created.

Please move it to a medium which you can hide away; if Mallory gets
access to this certificate he can use it to make your key unusable.
It is smart to print this certificate and store it away, just in case
your media become unreadable.  But have some caution:  The print system of
your machine might store the data and make it available to others!
</pre>

<p>
<c>gpg --list-keys</c>-kommandoen vil vise dine nøgler i din
offentlige nøglering. Du kan bruge det til at se ID'en af din nøgle så
du kan lave tilbagetrækkelsescertifikatet. Nu er det en god idé at
kopierer hele .gnupg-mappen og tilbagetrækkelseiscertifikatet (i ASCII
- <path>revoke.asc</path>) til at sikkert medium (2 disketter eller en
CDR, som du gemmer et sikkert sted). Husk at <path>revoke.asc</path>
kan blive brugt til at tilbagetrække din nøgle og lave den ubrugelig i
fremtiden.
</p>

<note>
Hvis du har adskillige email-adresser, som du vil benytte med denne
nøgle, kan du køre <c>gpg --edit-key DIN_ID</c> og så
<c>adduid</c>-kommandoen. den vil så spørge dig om dit navn, email og
kommentar af din nummer 2 ID, du vil benytte.  
</note>

</body>
</section>
<section>
<title>Eksportering af nøgler</title>
<body>

<p>
For at eksportere din nøgle, skriver du <c>gpg --armor --output
john.asc --export john@nowhere.someplace.flick</c>. Du kan nærmest
altid bruge ID'et af din nøgle eller noget, der identificerer nøglen
(her bruger vi email-adressen). Nu har vi en <path>john.asc</path>,
som kan sendes til venner, eller et sted på en webside, så folk kan
kommunikere sikkert med ham.
</p>

</body>
</section>
<section>
<title>Importering af nøgler</title>
<body>

<p>
For at tilføje filer til din offentlige nøglering, skal du først
importere den, så tjekke dets fodspor, og efter du har verificeret
fodsporet, bør du validere det.
</p>

<note>
Du bør være mere end sikker når du verificerer nøgler. Det er nemlig
en af de svage punkter af en offentlig nøgle-kryptering.  
</note>

<p>
Nu vil vi tilføje Luis Pinto's (en af mine venners) offentlige nøgle
til vores nøglering. Efter at ringe til ham og spørge ham om hans
nøgles fodspor, sammenligner jeg fodsporet med det jeg får fra
kommandoen <c>fpr</c>. Eftersom nøglen er autentisk, tilføjer jeg den
til nøgleringen. I dette opsatte tilfælde, vil Luis's nøgle udløbe
2003-12-01, og jeg bliver derfor spurgt om jeg vil have mit signatur
til at udløbe det samme tidspunkt.
</p>

<pre caption="Importering og signering af nøgler">
# <i>gpg --import luis.asc</i>
gpg: key 462405BB: public key imported
gpg: Total number processed: 1
gpg:               imported: 1
# <i>gpg --list-keys</i>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;
sub  2048g/96D6CDAD 2002-12-08

pub  1024D/462405BB 2002-12-01 Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;
      uid                            Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
sub  4096g/922175B3 2002-12-01 [expires: 2003-12-01]

# <i>gpg --edit-key lmpinto@dei.uc.pt</i>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.


gpg: checking the trustdb
gpg: checking at depth 0 signed=0 ot(-/q/n/m/f/u)=0/0/0/0/0/1
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
sub  4096g/922175B3  created: 2002-12-01 expires: 2003-12-01
(1)  Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
(2). Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;

Command> <i>fpr</i>
pub  1024D/462405BB 2002-12-01 Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
           Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB
           
Command> <i>sign</i>
Really sign all user IDs? <i>y</i>
                         
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
           Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB

           Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
           Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;

This key is due to expire on 2003-12-01.
Do you want your signature to expire at the same time? (Y/n) <i>Y</i>
How carefully have you verified the key you are about to sign actually belongs
to the person named above?  If you don't know what to answer, enter "0".

 (0) I will not answer. (default)
 (1) I have not checked at all.
 (2) I have done casual checking.
 (3) I have done very careful checking.

 Your selection? <i>3</i>
Are you really sure that you want to sign this key
with your key: "John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"

I have checked this key very carefully.

Really sign? <i>y</i>
            
You need a passphrase to unlock the secret key for
user: "John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"
1024-bit DSA key, ID 75447B14, created 2002-12-08

Command> <i>check</i>
uid  Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   John Doe (The Real John Doe) &lt;john@nowhe
uid  Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   John Doe (The Real John Doe) &lt;john@nowhe
</pre>

</body>
</section>				
</chapter>

<chapter>
<title>Udveksling af nøgler med en nøgle-server</title>
<section>
<title>Afsendelse af nøgler til nøgle-server</title>
<body>

<p>
Nu da vi har din nøgle, er det formodentlig en god idé, at sende den
til en nøgle-server. Der er masser af nøgle-servere i verden, og de
fleste af dem udveksler nøgler imellem dem. Her skal vi sende Luis's
nøgle til pgp.mit.edu nøgle-serveren. Den bruger HTTP, så hvis du har
brug for en proxy til HTTP trafik, glem ikke at sætte den. (<c>export
http_proxy=http://proxy_host:port/</c>). Kommandoen for at sende
nøglen er: <c>gpg --keyserver pgp.mit.edu --keyserver-options
honor-http-proxy --send-key john@nowhere.someplace.flick</c>. Hvis du
ikke har brug for en HTTP Proxy til HTTP trafik kan du fjerne:
<e>--keyserver-options honor-http-proxy</e>.
</p>

<p>
Du kan også sende andre folks nøgler, som du har signeret til
nøgle-serveren. Vi kunne sende Luis Pinto's nøgle til
nøgle-serveren. På denne måde kan nogen som stoler på din nøgle bruge
det signatur, som du har lagt på nøgle-serveren, til at stole på
Luis's Nøgle.
</p>

</body>
</section>
<section>
<title>Afhentning af nøgler fra nøgle-server</title>
<body>

<p>
Nu vil vi så prøve at søge for Gustavo Fellisbertos nøgle og tilføje
den til John Does nøglering (i tilfælde af at du ikke har opdaget det
endnu, er Gustavo Felisberto personen, som har skrevet denne guide :)
).
</p>

<pre caption="Søgning på nøgler fra nøgle-server">
# <i>gpg --keyserver pgp.mit.edu --keyserver-options honor-http-proxy --search-keys humpback@felisberto.net</i>
gpg: searching for "humpback@felisberto.net" from HKP server pgp.mit.edu
Keys 1-5 of 5 for "humpback@felisberto.net"
(1)	Gustavo Felisberto (apt-get install anarchy) &lt;humpback@felisberto.net&gt; 1024
        created 2002-12-06, key B9F2D52A
(2)	Gustavo Felisberto &lt;humpback@altavista.net&gt; 1024
        created 1999-08-03, key E97E0B46
(3)	Gustavo A.S.R. Felisberto &lt;humpback@altavista.net&gt; 1024
        created 1998-12-10, key B59AB043
(4)	Gustavo Adolfo Silva Ribeiro Felisberto &lt;humpback@altavista.net&gt; 1024
        created 1998-08-26, key 39EB133D
(5)	Gustavo Adolfo Silva Ribeiro Felisberto &lt;humpback@altavista.net&gt; 1024
        created 1998-06-14, key AE02AF87
        Enter number(s), N)ext, or Q)uit &gt;<i>1</i>
gpg: requesting key B9F2D52A from HKP keyserver pgp.mit.edu
gpg: key B9F2D52A: public key imported
gpg: Total number processed: 1
gpg:               imported: 1
</pre>

<p>
Som du kan se i svaret fra nøgle-serveren, har jeg et par nøgler
indrykket på nøgle-serveren, men jeg bruger kun <e>B9F2D52A</e> for
tiden. Nu kan John Doe få den og signere den, hvis han stoler på den.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Arbejde med dokumenter</title>
<section>
<title>Kryptering og signering</title>
<body>

<p>
Lad os antage, at du har en fil du ønsker at sende til Luis nu. Du kan
kryptere den, signere den, eller kryptere og signere den. Kryptering
betyder at kun Luis vil være istand til at åbne den, signaturet
fortæller luis at det vitterligt var dig, der lavede filen.
</p>

<p>
De næste 3 kommandoer vil bare gøre det at, kryptere, signere og kryptere/signere.
</p>

<pre caption="Krypterer og underskrivelse af filer">
# <i>gpg --output doc.gpg --encrypt --recipient lmpinto@dei.uc.pt doc_to_encrypt</i>
# <i>gpg --output doc.gpg --sign --recipient lmpinto@dei.uc.pt doc_to_sign</i>
# <i>gpg --output doc.gpg --encrypt --sign --recipient lmpinto@dei.uc.pt doc_to_encrypt_and_sign</i>
</pre>

<p>
Det her vil lave binære filer, men hvis du ønsker at lave ASCII-filer,
bare tilføj <c>--clearsign</c> i starten af kommandoen.
</p>

</body>
</section>
<section>
<title>Dekryptering og verificering af signaturer</title>
<body>

<p>
Antaget at du har modtaget en fil der er krypteret til dig, vil
kommandoen til at dekryptere den være: <c>gpg --output document
--decrypt encrypted_doc.gpg</c>.  Det vil dekryptere dokumentet og
verificere signaturen (hvis der er en)
</p>

</body>
</section>
<section>
<title>Advancerede egenskaber</title>
<body>

<p>
Der er nogle spændende advancerede egenskaber i GnuPG. For at finde
dem, åben <path>~/.gnupg/options</path>-filen.
</p>

<pre caption="~/.gnupg/options">
#keyserver x-hkp://pgp.mit.edu
#keyserver-options auto-key-retrieve include-disabled include-revoked
</pre>

<p>
Søg efter de to ovenstående linjer og afkommentere dem. Dette vil gøre,
at hver gang GnuPG skal tjekke en underskrift og den ikke finde den
offentlige nøgle på den lokale nøglering, vil den kontakte
nøgle-serveren hos <uri link="http://pgp.mit.edu">pgp.mit.edu</uri> og
den vil prøve at hente den fra der.
</p>

<p>
En anden interessant kommando er <c>gpg --refresh-keys</c>. Dette vil
kontakte nøgleserveren, som er defineret i options-filen og
genopfriske offentlige nøgle i din lokale nøglering fra der, ved at
søge efter tilbagekaldte nøgler, nye ID'er og nye underskrifter på
nøgler. Du bør dog køre denne én eller to gange om måneden, så, hvis
nogen tilbagekalder hans nøgle, vil du blive kontaktet.
</p>

</body>
</section>
</chapter>

<chapter>
<title>GnuPG Grænseflader</title>
<section>
<title>Om email-underskrifter</title>
<body>

<p>
95% af tiden, hvor du bruger GnuPG til mail, er
underskrivning/kryptering af udegående beskeder og læse
underskrevne/krypterede beskeder. Så det er kun fair at tale om dette
først.
</p>

<p>
Der er to metoder for at underskrive/kryptere en email med GnuPG: den
gamle metode og den nye metode :). Ved den gamle metode, vil beskeder
vise sig i ren tekst, uden nogen mulig formatering og vedhæftede filer
ville ikke blive underskrevet/krypteret, her er et eksempel på en
besked, underskrevet på den gamle metode:
</p>

<pre>
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Test message
				   	 
-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 6.5.8 for non-commercial use
							   	 
iQA/AwUBP8461jMX0745gR7AEQIEOwCg011GbufXO3ED3FkLWXmfzg7xm1cAoJD0
0EU3Kd2EKNCqataEqM5qjpPs
=LchZ
-----END PGP SIGNATURE-----
</pre>

<p>
Beskeder ved denne metoder er ikke godt i dag, hvor vi har flotte
grafiske grænseflader og email-læsere som kan forstå HTML.
</p>

<p>
For at løse dette, blev en udvidelse til MIME (Multipurpose Internet
Mail Extensions) oprettet. Dette tilføjede et felt til emailen, som
fortæller mail-læseren at det fuldstændige indhold af en besked er
underskrevet og/eller krypteret. Problemet er at ikke alle mail-læsere
understøtter dette. Og nogle ødelægger endda indholdet, hvilket
Microsofts Outlook er berømt for.
</p>

</body>
</section>
<section>
<title>Kgpg</title>
<body>

<p>
kgpg er et dejligt grafisk program til at administrere GnuPG, i
hovedskærmen kan man sætte text ind som man ønsker at have signeret
eller krypteret, man kan også indsætte den ASCII-beskyttede text, som
man ønsker at dekryptere.
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/kgpg1.png" short="kgpg hoved vindue"/>

<p>
På det her billede kan du se kgpg-hovedvinduet med ASCII beskyttet og
krypteret text indsættet til det. Derfra kan man dekryptere det (du
vil blive nødt til at give koden), kryptere andre filer, eller
indsætte nyt text til at signere ...
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/kgpg2.png" short="kgpg nøgle administrations vindue"/>

<p>
Nu kan du se nøgle-administrationsvinduet, derfra kan vi se vores gode
nøgle, for john doe. De 2 nøgler vi stoler på, fra Gustavo og Luis, og
den nøgle fra Daniel Robbins (jeg har stadig ikke ringet til ham, for
at tjekke hans fodspor :) ).
</p>

</body>
</section>
<section>
<title>Seahorse</title>
<body>

<p>
Seahorse sigter mod at være en GnuPG grafisk grænseflade til GNOME
Desktop. Softwaren har udviklet sig hurtigt, men den mangler stadigvæk
vigtige egenskaber, som kan blive fundet i Kgpg eller kommando-linje
versionen.
</p>

</body>
</section>
<section>
<title>Mozilla Enigmail</title>
<body>

<p>
Mozillas version fra 1.0 og opefter, kommer med Enigmail, et plugin
til email-klienter, som er meget simpelt at opsætte. Bare gå til
Opsætning -&gt; Privacy &amp; Security -&gt; Enigmail. Der skriver du
emailen til din nøgle, og så er det det.
</p>

<p>
Meddelelser, der kommer med en upålidelig pgp eller gpg signatur, vil
blive mærket med en ødelagt pen, andre der har et godt og pålideligt
signatur, vil komme som en fin og pæn pen. Enigmail kommer endda med
muligheden for at hente nøgler fra nøgle-servere, men hvis det har
problemer, vil det komme med nogle mærkelige meddelelser (men du kan
jo stadig huske måden at gøre det på i CLI, ikke? ;-) ).
</p>

</body>
</section>
<section>
<title>KMail</title>
<body>

<p>
Kmail er også temmelig nem at sætte op, og jeg vil bare vise et par
billeder som beskriver hvordan man gør. Egentlig er det eneste du
behøver er bare, at fortælle kmail at den skal bruge GPG, og så hvilke
nøgler du vil signere med.
</p>

<figure link="http://www.gentoo.org/images/kmail_identity.png" caption="KMail identificerer OpenGPG-nøgle"/>
<figure link="http://www.gentoo.org/images/kmail_security_openpgp.png" caption="KMail sikkerhedsvalgmuligheder OpenPGP"/>
<figure link="http://www.gentoo.org/images/kmail_security_plugins.png" caption="KMail sikkerhedsvalgmuligheder krypteringsindstillinger"/>

</body>
</section>
<section>
<title>Sylpheed-Claws</title>
<body>

<p>
Dette er min favorit email-læser. Den er <e>meget</e> hurtig med store
mailboxes, har alle de spændende egenskaber, som man vil have i
email-læsere og virker godt med gpg. Det eneste problem er at den ikke
virker med de gamle PGP-signaturer, så når du modtager disse emails,
bliver du nødt til at manuelt tjekke signaturerne.
</p>

<p>
For at bruge din gpg-nøgle med Sylpheed-Claws, gå bare ind i
konto-indstillingerne (account configuration) og vælg privacy. Når du
er der, vælg så hvilken nøgle du vil bruge, og de fleste vil nok bruge
standard-nøglen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Offentlig nøglekryptografi</title>
<section>
<title>Grundlæggende offentlig nøglekryptografi</title>
<body>

<p>
Konceptet bag om offentlig nøglekryptografi blev opfundet af Whitfield
Diffie og Martin Hellman i 1976. Da jeg først hørte ordene "offentlig
nøgle" og "kryptografi" i samme sætning, tilbage i 1993, troede jeg at
det ville være umuligt at gøre sådan en ting. I disse dage var der
ingen Internet (det var det godt nok, men ikke for mig) så jeg gik hen
til det offentlige bibliotek og spurgte for bøger om kryptografi. Jeg
må sige, at jeg var 16 år på dette tidspunkt, så bibliotekaren så på
mig med forbløffelse og gav mig en bog til børn om udskiftelige cypher
(disse, hvor du ændrer et bogstav til et andet, som den berømte Caesar
kode eller ROT-13 (Tragbb Ebpxf, naq lbh xabj vg vf tbbq orpnhfr lbh
ner ernqvat guvf qbp.), (emerge rotix hvis du ikke kan læse den
foregående tekst)). Jeg var meget sur over dette, og startede med at
søge for flere informationer. Det er godt at have matematikere i
familien, da jeg begyndte at tale til en af dem, var jeg introduceret
til en ny verden.
</p>

<p>
Og nu en smule matematik:
</p>
   	 
<pre caption="Matematiske koncepter">
Definationer:
				   	 
1- Et primtal er en positiv integer nummer, som kun kan divideres med med 1 og sig selv (huskeren er delingen af 0). De første 8 primtal er 1,2,3,5,7,11,13,17	


Læresætning (ingen beviser her)

1- For ethvert ikke positiv primtal integer, er det muligt at bryde det som produktet af primtalsnumre, og dette produkt er unik.
4=2*2
6=2*3
8=2*4=2*2*2
10=2*5
12=2*6=2*2*3

"Fakta":

1- Det er matematisk let at gange to store heltal.
2- Det er svært at finde prim-faktorerne af et givet positivt heltal.
</pre>

<p>
Hvis jeg giver dig nummeret 35, og jeg fortæller dig at dette nummer
er et produkt af to primtal, er det let at finde ud af at det var 5 og
7. Men hvis jeg fortæller dig det samme for 1588522601, vil du bruge
en del tid (eller processorkraft) til at finde ud af at det var
49811*31891. Og hvis dette nummer er virkeligt stort, vil opgaven
blive "umulig". Så hvis jeg nu giver verdenen mit store nummer, som
er et produkt af to primtal, vil jeg vide noget om det nummer, som
ingen andre ved.
</p>

<p>
Dette er grundlaget for offentlig nøglekryptografiske ('Public Key
Cryptography (PKC)') implementeringer i dag. Som et (urealistisk)
eksempel, vil jeg give nogen mit nummer og denne vil bruge det til at
kryptere en besked til mig. Alle, som kan se den krypterede besked, og
fordi at jeg er den eneste som kender en genvej til at læse den, skal
alle andre først begynde at "splitte" det store nummer for at kunne
læse beskeden, og det er "fakta" at det er umuligt at gøre dette på
kort tid (metoder i dag og hurtigere computere i verdenen vil tage
tusinder af år om at gøre dette). I denne indstilling vil de to store
primtal blive kaldet for PRIVAT NØGLE (PRIVATE KEY), og det store ikke
primtal er den OFFENTLIGE NØGLE (PUBLIC KEY).
</p>

<p>
I praksis er dette ikke 100% nøjagtigt med realiteten, men vil give et
godt indblik til den nyankomne. For flere informationer, kig på
hack.gr omkring <uri
link="http://www.hack.gr/users/dij/crypto/overview/diffie.html">Diffie-Hellman</uri>
protokollen. For endnu flere informationer, gå hen til dit offentlige
bibliotek og få fat i en kopi af <uri
link="http://www.cacr.math.uwaterloo.ca/hac/">"Handbook of Applied
Cryptography"</uri> af Alfred J. Menezes, Paul C. van Oorschot og
Scott A. Vanstone. Denne bog er også tilgængelig gratis online på
ovenstående side.
</p>

<p>
En konsekvens af det ovenstående er at hvis du koder en besked til
mig, og du mister den originale ukodede besked, vil du ikke længere
have mulighed for at hente den fra den kodede version.
</p>

</body>
</section>
<section>
<title>Signaturer</title>
<body>

<p>
Vi har allerede set hvordan nogen kan sende os en kodet besked, hvis de har
vores offentlige nøgle. Men hvordan ved vi om forfatteren af beskeden
virkelig er den, som han påstår han er? Eller i andre ord: Hvis vi
modtager en email fra dig, hvordan ved jeg virkeligt at det var dig og
ikke en anden, som påstår at være dig?
</p>

<p>
Huskede du det var mig som sagde at PKC ikke var så simpelt, som jeg
sagde? Ideen er at når du koder en besked til mig, underskriver du den
med din private nøgle, så når jeg modtager den, kan jeg bruge din
offentlige nøgle for at tjekke din signatur og så bruge den i min
private nøgle til at dekode beskeden. Som du kan se, kunne vi ikke
gøre dette i opsætningen, som beskrevet før.
</p>

<p>
Det er også vigtigt, for at underskrive beskeder, at du ikke skal kode
dem førhen. Som sådan kan du oprette beskeder, som kan blive læst af
alle, men kommer med din "branding". Og hvis noget tegn er ændret i
beskeden, kan (og vil) det blive opdaget.
</p>

</body>
</section>
<section>
<title>Nøgleservere og underskrevne nøgler</title>
<body>

<p>
Men lad os sige at jeg ikke har nogen foregående kontakt med dig,
indtil du sender mig en besked, hvordan kan jeg få din offentlige
nøgle, og hvordan ved jeg virkeligt at det er dit?
</p>

<p>
For at løse dette problem, er offentlige nøgleservere skabt. Når du
opretter et nøglepa (offentlig og privat nøgle) sender du din
offentlige nøgle til nøgleserveren. Efter dette, vil alle kunne
modtage din nøgle derfra. Dette løser problemet med at finde
nøglen. Men hvordan ved jeg virkelig at nøglen er forfatterens nøgle?
Til dette, skal et nyt koncept introduceres, og det er
nøgle-underskrivelse:
</p>

<p>
Nøgle-underskrivelse betyder, at hvis jeg har en offentlig nøgle fra
en anden person, og jeg ved <e>virkeligt</e> at det er dens persons
nøgle (det er min personlige ven, nogen jeg kender i den virkelige
verden osv.) kan jeg underskrive denne offentlige nøgle og sende det
til nøgleservere, og på den måde fortæller jeg verdenen: "Denne nøgle
tilhører virkelig den person, som påstår at tilhøre den". På den måde
kan personer, som har offentlige nøgler og stoler på mig, bruge denne
tillid til at stole andre nøgler.
</p>

<p>
Det kan til tider være forvirrende, så lad os se på en situation fra
den virkelige verden.
</p>

<p>
Lad os forestille os en tre-persons situation: John, Mary og
Lisa. John er en god ven af Mary, men kender ikke Lisa; Lisa er en god
ven af Mary, men kender ikke John. En dag sender Lisa en underskreven
email til John. John vil hente Lisas offentlige nøgle fra
nøgleserveren og teste beskeden, hvis den gik igennem, vil han se at
hvem der end har skrevet den besked, også lavede den nøgle. Men
hvordan vil jeg vide at det virkelig er den person, som der påståes?
</p>

<p>
Han ser så at den er underskrevet af Mary, som han kan tjekke, idet
han allerede har Marys nøgle og stoler på den. Med den ring af tillid
fortsætter han med at tro på at emailen, som har modtaget, virkelig er
skrevet af Lisa.
</p>

<p>
Du er nu klar til at bruge denne vejledning, og kan nu gå tilbage til
kapitel 1 med at lære om at bruge gpg.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Sidste tanker og anerkendelser</title>
<section>
<title>Nogle problemer</title>
<body>

<p>
Jeg har problemer med billeder i nøgler. Tjek den version du
bruger. Hvis du har GnuPG 1.2.1-r1 eller højere, er det sikkert okay,
ældre version kan har problemer. Også kan de fleste nøgleservere ikke
lide nøgler med billeder, så det er bedre, hvis du ikke tilføjer
billeder.
</p>

<p>
De sidste versioner af gnupg virker tilsyneladende ikke med <c>gpg
--send-keys</c>, som var brugt til at sende alle nøgler fra din
nøglering til den offentlige server.
</p>

</body>
</section>
<section>
<title>Hvad ikke er her</title>
<body>

<p>
GPG er et meget komplekst værktøj, som tillader at gøre MEGET mere end
hvad jeg har været omkring i den her guide. dette dokument er for
brugeren, som er ny til GnuPG. For flere informationer, bør du tjekke:
<uri link="http://www.gnupg.org">GnuPG Hjemmesiden</uri>.
</p>

<p>
Jeg kommer heller ikke omkring andre programmer som <c>pgp4pine</c>,
<c>gpgpine</c>, <c>evolution</c> og måske windows-værktøjer, men jeg
vil formodentlig udvide dette dokument i fremtiden.
</p>

</body>
</section>
<section>
<title>Anerkendelser</title>
<body>

<p>
John Michael Ashleys <uri link="http://www.gnupg.org">GnuPG Håndbog</uri> 
er en meget god bog til begynnere.
</p>

<p>
Swift (Sven Vermeulen) for at skubbe mig til at omskrive dette.
</p>

<p>
Alle jer i #gentoo-doc holdet, I er simpelthen for seje!.
</p>

<p>
Tiago Serra for at få mig tilbage til privacy vejen
</p>

</body>
</section>
</chapter>
</guide>
