<?xml version='1.0' encoding="UTF-8"?>
<!-- REV: 1.29 -->
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/altinstall.xml,v 1.1 2004/07/23 14:27:26 sergey Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
	  

<guide link="/doc/ru/altinstall.xml">
<title>Руководство по альтернативным методам установки Gentoo Linux.</title>
<author title="Contributor"><mail link="gerrynjr@gentoo.org">Gerald Normandin Jr.</mail></author>
<author title="Contributor"><mail link="lordviram@rebelpacket.net">Travis Tilley</mail></author>
<author title="Contributor"><mail link="volontir@yahoo.com">Oleg Raisky</mail></author>
<author title="Contributor"><mail link="luminousit@hotmail.com">Alex Garbutt</mail></author>
<author title="Contributor"><mail link="alex@openvs.com">Alexandre Georges</mail></author>
<author title="Contributor"><mail link="vargen@b0d.org">Magnus Backanda</mail></author>
<author title="Contributor"><mail link="davoid@gentoo.org">Faust A. Tanasescu</mail></author>
<author title="Contributor"><mail link="aliz@gentoo.org">Daniel Ahlberg</mail></author>
<author title="Editor"><mail link="swift@gentoo.org">Sven Vermeulen</mail></author>
<author title="Reviewer"><mail link="antifa@gentoo.org">Ken Nowack</mail></author>
<author title="Editor"><mail link="blubber@gentoo.org">Tiemo Kieft</mail></author>
<author title="Translator"><mail link="kansas@pochta.ru">Alexander D. Barakin</mail></author>
<abstract>
Этот HOWTO представляет собой руководство по альтернативным методам установки
Gentoo. Представляет интерес в специфических случаях, таких как невозможность
загрузиться с cd или отсутствие cdrom-привода как такового. 
</abstract>

<license/>

<version>0.40</version>
<date>Apr 25, 2004</date>

<chapter>
<title>Об этом документе</title>
<section>
<body>

<p>Если у Вас не работает стандартный метод установки boot-from-CD
(или он Вас не устраивает), Вам сюда. Этот документ описывает
альтернативные приемы установки Gentoo Linux для тех, кто в них
нуждается. Или, если хотите, это место сбора всех "оригинальных"
способов установки. Если у Вас один такой завалялся, или Вы откопали
новую прикольную методу, не стесняйтесь, пишите мне
<mail link="antifa@gentoo.org">сюда</mail>
</p>


</body>
</section>
</chapter>

<chapter>
<title>Загрузка с LiveCD при помощи Smart BootManager</title>
<section>

<body>
<p>Скачайте Smart BootManager <uri link="http://btmgr.sourceforge.net/index.php3?body=download.html">http://btmgr.sourceforge.net/index.php3?body=download.html</uri>. Доступны как исходники, так и бинарники для Linux, не говоря уже про виндовский .exe и множество языковых пакетов. Все-таки, в настоящее время, бинарный формат предпочтительнее, поскольку исходники могут не откомпилироваться современными версиями NASM.</p>

<p>Скомпилируйте пакет или возьмите уже готовый. Ниже я расскажу о некоторых полезных опциях, доступных при создании загрузочной дискеты.</p>

<pre caption="Опции Smart BootManager">
<i>sbminst [-t тема] [-d диск] [-b backup_file] [-u backup_file]

   -t тема      выбор используемой темы, где тема должна быть:
                   us = English тема       de = German тема 
                   hu = Hungarian тема     zh = Chinese тема 
                   ru = Russian тема       cz = Czech тема
                   es = Spanish тема       fr = French тема 
                   pt = Portuguese тема 

                 
   -d диск      выбор диска, куда Вы собираетесь инсталлировать Smart BootManager;
                 для Linux:
                   /dev/fd0 первый floppy-диск, 
                   /dev/hda первый IDE-диск.
                   /dev/sda первый SCSI-диск.
                 для DOS:
                    0   первый floppy-диск
                    128 первый жесткий диск;

   -c           отключить загрузку с CD-ROM;

   -b backup_file сохранить (для будущей деинсталляции) данные, которые будут
                  перезаписаны;

   -u backup_file деинсталлировать Smart BootManager, нельзя использовать
                  с другими ключами;

   -y             никаких вопросов и предупреждений.</i>
</pre>

<pre caption="Использование sbminst для создания загрузочной дискеты">
# <i>sbminst -t us  -d /dev/fd0</i>
</pre>
<note> Замените fd0 на имя Вашего floppy-дисковода (если у Вас он называется по-другому). </note>
<p>Теперь просто вставьте дискету в дисковод компьютера, на котором Вы хотите запустить LiveCD, и загрузитесь с нее.</p>

<p>Вас поприветствует Smart BootManager. Выберите CD-ROM и нажмите ENTER для загрузки LiveCD. Если все прошло удачно, следуйте стандартной процедуре установки.</p>

<p>Больше информации по Smart BootManager Вы найдете на <uri>http://btmgr.sourceforge.net/</uri></p>
</body>
</section>
</chapter>


<chapter>
<title>Установка при помощи Knoppix</title>
<section>

<body>
<p>Загрузившись с <uri link="http://www.knoppix.org/">Knoppix</uri> LiveCD, Вы получаете полностью работоспособную linux-систему для компиляции Gentoo. Во время сборки Tux Racer скрасит Ваше ожидание.</p>

 <p>Загрузитесь с Knoppix CD. Knoppix очень даже неплохо определит состав оборудования. К тому же, Вы можете добавить и некоторые загрузочные параметры. </p>

<p>По умолчанию Вы попадаете на рабочий стол KDE 3.0. Первое, что я делаю - это открываю консоль и набираю <c>sudo passwd root</c>. Это позволяет задать пароль для root в Knoppix.</p>

<p> Дальше командой su я переключаюсь на root-а и ввожу <c>usermod -d /root -m root</c>. То есть, делаю /root домашним каталогом (как принято в Gentoo) вместо /home/root (как в Knoppix). Если этого не сделать, при сборке посыпятся ошибки что-то вроде "/home/root: not found".</p>

<p>Я ввожу <c>exit</c> и снова <c>su</c>. Я опять root, но с учетом измений, проделанных командой usermod. Теперь создаю точку монтирования <path>/mnt/gentoo</path>, используя  <c>mkdir</c>:</p>

<pre caption="Создание точки монтирования /mnt/gentoo">
# <i>mkdir /mnt/gentoo</i>
</pre>

<p>Далее Вы можете придерживаться стандартного руководства по установке, начиная с
<uri link="/doc/en/handbook/handbook-x86.xml?part=1&amp;chap=4">part 4</uri>. Кроме монтирования /proc. Тут Вам надо поступить по-другому:</p>

<pre caption = "Bind-mounting the proc pseudo filesystem">
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Установка со Stage 1 без доступа в сеть</title>
<section>
<body>


<p>Создайте LiveCD из iso-образа.</p>

<p>Возьмите последний snapshot портежей из <uri>http://distro.ibiblio.org/pub/linux/distributions/gentoo/snapshots/</uri> (или с любимого <uri link="http://www.gentoo.org/main/en/mirrors.xml">зеркала</uri>). Запишите этот tarball на существующий раздел в компьютере, где будет проходить установка, или прожгите его на CD.</p>

<p>Следуйте инструкции из Gentoo Install Doc вплоть до <c>chroot /mnt/gentoo</c> на шаге 8 (Step 8). Если у Вас в наличии только один привод CD-ROM, не забудьте при загрузке ввести опцию <c>cdcache</c> чтобы иметь возможность размонтировать LiveCD и смонтировать CD со snapshot-ом портежей.</p>

<p>Открыв новую консоль (Alt-F2), а в ней руководство по установке, мы можем следовать ему вплоть до запуска скрипта bootstrap.sh.</p>

<warn>В старых релизах livecd требуется изменить пароль командой <c>passwd</c> прежде чем логиниться с другой консоли.</warn>

<p>Возвращаемся к первой консоли (Alt-F1, without chroot) и монтируем второй CD в <path>/mnt/gentoo/mnt/cdrom2</path>. Копируем portage tarball с cdrom2 и распаковываем в <path>/mnt/gentoo/usr/portage</path>.</p>

<pre caption="Монтирование snapshot cd">
# <i>umount /mnt/cdrom</i>
# <i>mkdir /mnt/gentoo/mnt/cdrom2</i>
# <i>mount /dev/cdroms/cdrom0 /mnt/gentoo/mnt/cdrom2</i>
# <i>cp /mnt/gentoo/mnt/cdrom2/portage-$date.tar.bz2 /mnt/gentoo/usr/portage</i>
# <i>cd /mnt/gentoo/usr/portage</i>
# <i>tar xvjpf portage-$date.tar.bz2</i>
</pre>

<p>Снова переключаемся на вторую консоль. Если сейчас попытаться запустить bootstrap.sh, ничего не выйдет, так как он не сможет закачать ни одного файла. Мы получим эти файлы из другого места и разместим их в <path>/usr/portage/distfiles</path> (в консоли F2). </p>

<p>Нам необходим список пакетов Stage1: glibc, baselayout, texinfo, gettext, zlib, binutils, gcc, ncurses плюс их зависимости. </p>

<note>Не забываете, что Вам нужны версии пакетов, синхронизированные с Вашим деревом портежей.</note>

<pre caption="Получение списка для скачивания">
<comment>(Не забывайте 2 перед &gt;)</comment>
# <i>emerge -fp glibc baselayout texinfo gettext zlib binutils gcc ncurses 2&gt; stage1.list</i>
# <i>mount -t vfat /dev/fd0 /mnt/floppy</i>
# <i>cp /mnt/gentoo/stage1.list /mnt/floppy</i>
# <i>umount /mnt/floppy</i>
</pre>

<p>
Вставьте дискету в компьютер с хорошим каналом. Если заглянуть в файл
<path>stage1.list</path>, можно увидеть, что в нем перечисляются несколько
ссылок на каждую загрузку. К сожалению, это не совсем то, что нам надо.
Сначала список надо почистить от лишнего:
</p>

<pre caption="Stripping URLs">
<comment>(Этот скрипт привязан к формату вывода emerge, который может измениться
 без предварительного предупреждения - используйте с осторожностью!)</comment>
# <i>cut -f 1 -d ' ' stage1.list > stage1.download</i>
</pre>

<p>
Теперь используйте <c>wget</c> для загрузки списка исходников:
</p>

<pre caption="Загружаем пакеты с помощью wget">
# <i>wget -N -i stage1.download</i>
</pre>

 <p>Получив все файлы, переносим их в наш компьютер в <path>/mnt/gentoo/usr/portage/distfiles</path>. Вот теперь можно запускать <c>bootstrap.sh</c>. Повторяем ту же операцию с wget для stage2 и 3.</p>



</body>
</section>
</chapter>

<chapter><title>Бездисковая установка с загрузкой через PXE</title>

<section><title>Что необходимо</title>
<body>
<p>Нужна сетевая карта на бездисковом клиенте, которая способна загружаться по протоколу PXE (многие карточки 3com). BIOS тоже должен поддерживать такой способ загрузки.</p>
</body></section>

<section><title>Настройки на стороне сервера</title>
<body>
 <p>Создание папок: Во-первых следует создать папки, в которых будет размещена Ваша бездисковая система. Начнем с <path>/diskless</path>, в ней будет находиться по отдельной папке для каждого бездискового клиента. Дальше мы рассмотрим работу с клиентом 'eta'.</p>

<pre caption="создание папок">
# <i>mkdir /diskless</i>
# <i>mkdir /diskless/eta</i>
# <i>mkdir /diskless/eta/boot</i>
</pre>

<p>Настройка DHCP и TFTP: Клиент получает загрузочную информацию, используя DHCP, затем загружает необходимые файлы с помощью TFTP. Собираем DHCP командой emerge и настраиваем его для наших нужд. Добавляем следующее в <path>/etc/dhcp/dhcpd.conf</path>:</p>

<note>Мы получим статический IP для клиента и путь к загрузочному образу PXE, здесь pxegrub. Вам необходимо подставить соответствующий MAC-адрес сетевой карты Вашего клиента и определиться с директорией, где будут храниться клиентские файлы.</note>

<pre caption="dhcp.conf">
option option-150 code 150 = text ;
host eta {
hardware ethernet 00:00:00:00:00:00;
fixed-address <i>ip.add.re.ss</i>;
option option-150 "/eta/boot/grub.lst";
filename "/eta/boot/pxegrub";
}
</pre>

<p>Для установки TFTP, соберите <c>app-admin/tftp-hpa</c>. Впишите следующее в <path>/etc/conf.d/in.tftpd</path> :</p>

<pre caption="in.tftpd">
INTFTPD_PATH="/diskless"
INTFTPD_USER="nobody"
INTFTPD_OPTS="-u ${INTFTPD_USER} -l -vvvvvv -p -c -s ${INTFTPD_PATH}"
</pre>

<p>Настройка GRUB: Я использую GRUB для PXE-загрузки. Чтобы можно было использовать PXE, Вы должны самостоятельно скомпилировать GRUB ... ведь это просто. Во-первых, скачайте самую свежую версию исходников GRUB (<c>emerge -f grub</c> поместит tarball в <path>/usr/portage/distfiles</path>). Скопируйте tarball в <path>/diskless</path> и скомпилируйте GRUB, чтобы получить доступный для pxe бинарник. Готовый бинарник копируем в boot-папку бездискового клиента. И редактируем файл grub.lst:</p>

<pre caption="установка grub">
# <i>tar zxvf grub-0.92.tar.gz</i>
# <i>cd grub-0.92</i>
# <i>./configure --help</i>
<codenote>Среди опций Вы увидите список поддерживаемых драйверов сетевых интерфейсов. </codenote>
<codenote>Выберите драйвер, совместимый с Вашей картой. Здесь он фигурирует как $nic</codenote>
# <i>./configure --enable-diskless --enable-$nic</i>
# <i>make</i>
# <i>cd stage2</i>
# <i>cp pxegrub /diskless/eta/boot/pxegrub</i>
# <i>nano -w /diskless/eta/boot/grub.lst</i>
</pre>

<pre caption="grub.lst">
default 0
timeout 30

title=Diskless Gentoo
root (nd)
kernel /eta/bzImage ip=dhcp root=/dev/nfs nfsroot=<i>ip.add.re.ss</i>:/diskless/eta

<codenote>В опции nfsroot указывается IP адрес сервера и путь к директории,</codenote>
<codenote>в которой на сервере лежат файлы нашего бездискового клиента.</codenote>
</pre>

<p>Настройка NFS: NFS легко сконфигурировать. Все что нам надо - это добавить одну строку в конфигурационный файл <path>/etc/exports</path> :</p>

<pre caption="/etc/exports">
# <i>nano -w /etc/exports</i>
NFS file systems being exported. See exports(5).
/diskless/eta eta(rw,sync,no_root_squash)
</pre>

<p>Обновление hosts:  Еще одно важное дело - изменение файла <path>/etc/hosts</path>. </p>

<pre caption="/etc/hosts">
127.0.0.1 localhost

192.168.1.10 eta.example.com eta
192.168.1.20 sigma.example.com sigma
</pre>
</body>
</section>

<section><title>Создание системы на сервере</title>

<body>

<p>Загрузите сервер с Gentoo LiveCD. Следуйте стандартной процедуре установки, как описано в Gentoo Install Howto  НО! с некоторыми отличиями. Для монтирования файловой системы сделайте следующее (здесь hdaX - раздел, в котором создана папка /diskless). Вам не надо монтировать другие разделы, так как все файлы располагаются в <path>/diskless/eta</path>.</p>

<pre caption="монтирование файловой системы">
#<i> mount /dev/hdaX /mnt/gentoo</i>
</pre>

<p>Stage tarballs и chroot: Этот пример использует tarball stage3. Смонтируйте <path>/proc</path> в Вашу бездисковую директорию и выполните chroot в нее(директорию) для продолжения установки. Дальше - по инструкции вплоть до конфигурации ядра.</p>

<warn>Будьте очень внимательны при разархивировании stage tarball. Не распакуйте
его в существующую систему.</warn>

<pre caption="извлечение stage tarball">
# <i>cd /mnt/gentoo/diskless/eta/</i>
# <i>tar -xvjpf  /mnt/cdrom/gentoo/stage3-*.tar.bz2</i>
# <i>mount -t proc /proc /mnt/gentoo/diskless/eta/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/diskless/eta/etc/resolv.conf</i>
# <i>chroot /mnt/gentoo/diskless/eta/ /bin/bash</i>
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>

<p>Конфигурация ядра: При выполнении <c>make menuconfig</c> во время конфигурации ядра, не забудьте сделать доступными следующие опции (помимо рекомендуемых в руководстве по установке):</p>

<pre caption="опции menuconfig">
- Your network card device support

- Under "Networking options" :

[*] TCP/IP networking
[*] IP: kernel level autoconfiguration
[*] IP: DHCP support
[*] IP: BOOTP support


- Under "File systems --> Network File Systems" :

&lt;*&gt; NFS file system support
[*] Provide NFSv3 client support
[*] Root file system on NFS
</pre>

<p>Теперь время настроить <path>/etc/fstab</path> нашего бездискового клиента.</p>

<pre caption="/etc/fstab">
# <i>nano -w /etc/fstab</i>
/dev/cdroms/cdrom0 /mnt/cdrom iso9660 noauto,ro 0 0
proc /proc proc defaults 0 0
tmpfs /dev/shm tmpfs defaults 0 0
</pre>

<p>Загрузчик. Не устанавливайте других загрузчиков, так как один у нас уже есть - pxegrub. Просто завершаете установку и перезагружаете сервер. Запустите службы, необходимые для загрузки новоиспеченного клиента: DHCP, TFTPD и  NFS.</p>

<pre caption="Запуск служб">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/tftpd start</i>
# <i>/etc/init.d/nfs start</i>
</pre>

</body></section>

<section><title>Загрузка нового клиента</title>
<body>
<p>Чтобы клиент загрузился, надо настроить bios и сетевую карту для
использования PXE как первого способа загрузки - до CD-ROM или floppy.
Помощником Вам будет документация к оборудованию или website производителя.
Сетевая карта должна получить IP адрес от DHCP и загрузить PXE-образ GRUB при
помощи TFTP. Дальше Вы увидите симпатичное черно-белое меню GRUB, в котором
можно выбрать ядро для загрузки, а нажав Enter, и загрузить его. Если все в
порядке, ядро примонтирует корневую файловую систему, используя NFS, и выведет
на терминал приглашение для входа в систему. Вот и все.</p>
</body></section>

</chapter>



<chapter> <title>Установка Gentoo из существующей Linux-системы</title> 
<section> <title> Что необходимо </title> 
<body>
<p>Для установки Gentoo из существующей системы Linux Вам должна быть 
доступна команда chroot, а также копия установочного tarball-а Gentoo, 
либо его ISO-образ. Не помешает доступ в сеть, если Вы не хотите 
ограничиваться тем, что есть в Вашем tarball-е. (к слову, tarball - это 
просто файл, заканчивающийся на .tbz иди .tar.gz). Автор (ориг.текста) 
использовал RedHat Linux 7.3 как "базовую" ОС, хотя это не так уж важно. 
 Итак, приступим! </p>
</body>
</section>

<section> <title> Обзор </title>
<body>
<p>Сперва надо отвести раздел для Gentoo, изменив размер существующего раздела
Linux, смонтировать его, разархивировать tarball, chroot внутрь нашей
псевдо-системы, и начинаем строительство. После настройки загрузчика немного
поработаем напильником, просто для того, чтобы система была способна загрузиться самостоятельно, перезагружаемся и пользуемся Gentoo. </p>
</body>
</section>

<section> <title> Как отвести место для Gentoo? </title>
<body>

<p>Корневой раздел - это файловая система, примонтированная к <path>/</path>. Запущенная команда mount показывает, о чем я веду речь. Еще мы можем выполнить df (disk free), чтобы посмотреть, сколько свободного места у нас есть. Прошу заметить - совсем не обязательно кромсать Ваш root раздел! Вы можете отрезать в любом другом месте, доступном Вашей программе редактирования разделов жесткого диска, но мы поговорим об этом чуть позже.</p>


<pre caption="Информация о файловых системах">
# <i>mount</i>
/dev/hdb2 on / type ext3 (rw) 
none on /proc type proc (rw) 
none on /dev/pts type devpts (rw,gid=5,mode=620) 
none on /dev/shm type tmpfs (rw) 
# <i>df -h </i>
Filesystem           Size Used Avail Use% Mounted on 
/dev/hdb2            4.0G 1.9G  2.4G  82% /
none		      38M    0   38M   0% /dev/shm 
</pre>

<p>Как видите, раздел, смонтированный как <path>/</path> носит имя <path>/dev/hdb2</path> и на нем еще свободно 2.4 гигабайта. В моем случае, думаю, 400 МБ свободного пространства хватит с головой, следовательно под Gentoo отводим 2 ГБ. Совсем неплохо, учитывая, что большинству пользователей хватит и одного гигабайта. Приступим! </p> 

</body>
</section>

<section>
<title>Сборка parted для переразбивки разделов</title> 
<body>

<p>Parted - утилита, поддерживаемая GNU foundation, старым, респектабельным, безразмерным проектом, софтом которого мы в данный момент и собираемся воспользоваться. Всего одним инструментом, который вполне нам подходит. Называется он parted, partition editor, загрузить его можно из <uri>http://www.gnu.org/software/parted/</uri></p>

<note>Конечно, существуют и другие инструменты для работы с разделами, но 
автор не уверен/не интересуется, сможет ли PartitionMagic(tm) или любая 
другая программа сделать то, что нам нужно. Проверить - это забота читателя.</note>

<p>Взгляните на ту страницу руководства parted, где речь идет о 
типе файловой системы, размер которой Вы собираетесь изменять, и узнайте, 
сможет ли parted это сделать. Если нет, что ж, Вам не повезло. Прийдется 
убить какой-нибудь раздел и создать по-новому, чтобы было место для Gentoo.
Вперед, качаем программу, устанавливаем. Возникает проблема. Мы хотим изменить 
размер корневого раздела, следовательно нам нужно загрузить с дискеты минимальную 
linux-систему и использовать предварительно скомпилированный parted для
редактирования <path>/</path>. Если в Вашем случае можно отмонтировать
выбранный раздел, оставаясь в Linux, Вам везет и нет необходимости делать 
то, что описано ниже. Просто соберите parted и запустите его на разделе, 
который хотите урезать. А вот то, что я сделал в своей системе.</p>

<impo>Убедитесь, что действия, которые Вы собираетесь проделать с разделом,
поддерживаются parted!</impo>

<p>Скачал tomsrtbt boot/root диск (свободное использование) из <uri>http://freshmeat.net/tomsrtbt </uri>, создал дискету, как описано в прилагающейся документации, вставил еще одну чистую дискету в дисковод и перешел к следующему шагу.</p>

<note>Опять замечу, что Linux - синоним понятия "Этот путь не единственный". Наша цель - запустить parted на отмонтированном разделе жесткого диска и это можно сделать не только описанным способом. Вы можете использовать любой другой набор boot/root дискет, не только tomsrtbt. Вы можете вообще не выполнять данный шаг, главное, что нужно - отмонтировать файловую систему, которую Вы собираетесь использовать под Gentoo, и перекроить ее, используя parted.</note>

<pre caption="Создание вспомогательной дискеты">
# <i>mkfs.minix /dev/fd0</i>
480 inodes
1440 blocks
Firstdatazone=19 (19)
Zonesize=1024
Maxsize=268966912
</pre>

<p>Продолжим со сборкой parted. Если он еще не закачан и не распакован, сделайте это. А затем перейдите в каталог, куда Вы его распаковали. И здесь выполните следующий набор команд для сборки утилиты и записи ее на дискету.</p>

<pre caption="Подготовка вспомогательной дискеты">
# <i> mkdir /floppy; mount -t minix /dev/fd0 /floppy &amp;&amp; 
export CFLAGS="-O3 -pipe -fomit-frame-pointer -static" &amp;&amp; ./configure 
&amp;&amp; make &amp;&amp; cp parted/parted /floppy &amp;&amp; umount /floppy </i>
</pre>

<p>Поздравляю, Вы готовы перезагрузиться и изменять выбранный раздел. 
Только делайте это после хотя бы беглого просмотра документации к parted 
на GNU website. Наберитесь терпения - изменение размера может занять больше 
получаса на больших дисках. Загрузитесь с дискеты tomsrtbt, а после этого 
замените загрузочную дискету на вспомогательную, которую мы только что 
создали. Введите mount /dev/fd0 /floppy и parted будет доступен в папке 
/floppy. Нам туда. Запускаете parted и перекраиваете нужный раздел жесткого 
диска. Когда этот бесконечный процесс наконец завершится, все будет готово 
для того, чтобы получить истинное наслаждение, устанавливая Gentoo. 
Диск, с которым мы работаем - это тот, на котором находится раздел, 
размер которого мы меняем. К примеру, если мы хотим изменить /dev/hda3, 
то диск, соответственно, будет называться /dev/hda.</p>

<pre caption="Команды, которые следует выполнить, загрузившись с tomsrtbt">
# <i>mount /dev/fd0 /floppy </i>
# <i>cd /floppy; ./parted [диск, с которым мы работаем]</i>
(parted) <i> print </i>
Disk geometry for /dev/hdb: 0.000-9787.148 megabytes
Disk label type: msdos
Minor    Start       End     Type      Filesystem  Flags
1          0.031   2953.125  primary   ntfs        
3       2953.125   3133.265  primary   linux-swap  
2       3133.266   5633.085  primary   ext3        
4       5633.086   9787.148  extended              
5       5633.117   6633.210  logical               
6       6633.242   9787.148  logical   ext3        
(parted) <i> help resize </i>
  resize MINOR START END        resize filesystem on partition MINOR

        MINOR is the partition number used by Linux.  On msdos disk labels, the
        primary partitions number from 1-4, and logical partitions are 5
        onwards.
        START and END are in megabytes
(parted) <i> resize 2 3133.266 4000.000 </i>
</pre>

<impo> Наберитесь терпения! Компьютер работает! Посмотрите на индикатор 
обращения к жесткому диску (находится на корпусе), чтобы убедиться, 
что это так. Процесс может занять от 2 до 30 минут. </impo>

<p>Когда процесс завершиться, перезагрузитесь в Вашу старую linux-систему. После этого откройте <uri link="/doc/en/handbook/handbook-x86.xml?part=1&amp;chap=5">The Gentoo Handbook: Installing the Gentoo Installation Files</uri> и следуйте инструкциям. Дойдя до chroot, используйте следующую команду чтобы очистить переменные окружения:
</p>

<pre caption = "Flushing the environment during chroot">
# <i>env -i /usr/sbin/chroot /mnt/gentoo /bin/bash</i>
</pre>

<p>
Удачи!
</p>
</body>
</section>
</chapter>
</guide>
