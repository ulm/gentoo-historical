<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/virt-mail-howto.xml,v 1.8 2006/03/21 10:55:18 achumakov Exp $ -->

<guide link="/doc/ru/virt-mail-howto.xml" lang="ru" disclaimer="draft">
<title>Создание виртуальной почтовой системы</title>

<author title="автор">
  <mail link="antifa@gentoo.org">Ken Nowack</mail>
</author>
<author title="автор">
  <mail link="ezra@revoltltd.org">Ezra Gorman</mail>
</author>
<author title="переводчик">
  <mail link="Shurik_M@macbox.ru">Александр Ложечник</mail>
</author>

<abstract>
Этот документ описывает как создать виртуальную почтовую систему с помощью
программ postfix, mysql, courier-imap, и cyrus-sasl.
</abstract>

<version>1.0.4</version>
<date>2003-11-13</date>

<chapter>
<title>Введение</title>
<section>
<body>

<p>
Для большинства пользователей gentoo простого почтового клиента и fetchmail
(для сбора почты) достаточно. Однако, если вы размещаете на своей системе домен,
вам необходим полноценный MTA (Mail Transfer Agent). И если вы размещаете на
своей системе несколько доменов, тогда вам точно необходимо что-то мощное для
обработки всей почты ваших пользователей. Эта система была разработана для
элегантного решения этой проблемы.
</p>

<p>
Виртуальная почтовая система должна быть способна обработать почту от
многочисленных доменов с множеством пользователей через разнообразные
интерфейсы. С этим связано несколько проблем, которые надо решить. Для примера,
что если вы имеете двух пользователей в разных доменах, которые хотят иметь
одинаковые имена? Если вы предоставляете сервисы imap и smtp-авторизации, как
вы комбинируете различные демоны авторизации в одной системе? Как обеспечиваете
безопасность многочисленных компонентов которая содержит система? Как вы
управляете этим всем?
</p>

<p>
Это howto покажет вам, как настроить гибкую систему обработки почты из стольких
доменов, сколько ваша поддерживает система, как создавать виртуальных
пользователей не требующих наличия аккаунта в системе, иметь доменные имена
пользователей, как авторизовать пользователей через веб, imap, smtp и pop3
снова таки из одной базы данных, использовать ssl-транспорт для безопасности,
как обрабатывать списки рассылки для любого домена на машине, и контролировать
все хорошей и простой базой данных mysql.
</p>

<p>
Конечно существует множество путей настройки виртуальной почтовой системы.
Другой способ возможно окажется более подходящим вашим нуждам. Дополнительную
информацию вы можете найти на <uri>http://www.qmail.org/</uri> и
<uri>http://www.exim.org/</uri>
</p>

<p>
Мы будем использовать следующие программы: apache, courier-imap, pam_mysql,
postfix, mod_php, phpmyadmin, squirrelmail, cyrus-sasl, mysql, php, и mailman.
</p>

<p>
Убедитесь что вы добавили в файле <path>/etc/make.conf</path> в переменную USE
следующие пакеты: <c>USE="mysql imap libwww maildir sasl ssl"</c>. Иначе,
возможно, вам придeтся перекомпилировать пакеты, для поддержки всех необходимых
протоколов. Затем, хорошей идеей будет отключить любые другие почтовые и
сетевые программы которые вам не нужны, вроде IPv6.
</p>

<impo>
Это howto написано для postfix-2.0.x. Если вы используете postfix версии &lt; 2
некоторые переменные используемые в этом документе могут отличается. В таком
случае рекомендуется обновить postfix. Некоторые пакеты используемые в этом
документе зависят от версии. Вы поступите мудро, если прочтете документацию
поставляемую с пакетами, при возникновении вопросов.
</impo>

<impo>
В нашем документе мы будем использовать apache-1.3.x. В портежах Apache-2 был
помечен stable, но как бы то ни было существуют еще некоторые проблемы
интеграции с php. Пока php-поддержка в apache-2.0.x не будет отмечена stable, в
этом документе будем продолжать использовать apache-1.3.x.
</impo>

<impo>
Вам необходимо доменное имя для работы общедоступного почтового сервера, или по
крайней мере иметь МХ-записи для домена. В идеале вы должны иметь контроль над
двумя доменами, для извлечения пользы из функциональности новой виртуальной
системы.
</impo>

<impo>
Убедитесь что в <path>/etc/hostname</path> указано правильное имя сервера,
также убедитесь что в <path>/etc/hosts</path> нет конфликтных значений.
</impo>

<note>
Рекомендуется прочесть документ полностью и ознакомится со всеми шагами
настройки, перед тем как начинать инсталляцию. Если вы столкнетесь с проблемами
при любом из шагов, проверьте troubleshooting guide в конце этого документа.
Также не все упомянутые пакеты необходимы, просто настройка, описанная здесь,
достаточна гибка. Для примера, если вам не требуется веб-интерфейса, вы
свободны пропустить соответствующий раздел squirrelmail.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Начальная настройка postfix</title>
<section>
<body>

<pre caption="Инсталляция postfix">
# <i>emerge postfix</i>
</pre>

<warn>
Проверьте чтобы у вас не были проинсталлированы любые другие MTA, например
ssmtp, exim или qmail, иначе у вас могут быть БОЛЬШИЕ проблемы.
</warn>

<p>
После инсталляции postfix, время его настроить. Измените следующие настройки в
<path>/etc/postfix/main.cf</path>:
</p>

<pre caption="/etc/postfix/main.cf">
myhostname = $host.domain.name
mydomain = $domain.name
inet_interfaces = all
mydestination = $myhostname, localhost.$mydomain $mydomain
mynetworks = my.ip.net.work/24, 127.0.0.0/8
home_mailbox = .maildir/
local_destination_concurrency_limit = 2
default_destination_concurrency_limit = 10 
</pre>

<p>
Следующие изменения следуют для <path>/etc/postfix/master.cf</path>. Они
включат режим подробного протоколирования для отладки:
</p>

<pre caption="/etc/postfix/master.cf">
# service type  private unpriv  chroot  wakeup  maxproc command + args
#               (yes)   (yes)   (yes)   (never) (50)
#
==========================================================================
smtp      inet  n       -       n       -       -       smtpd -v

<comment>(Просто добавьте <i>-v</i> после smtpd)</comment>
</pre>

<p>
Дальше правим <path>/etc/mail/aliases</path> для добавления локальных
псевдонимов. По крайне туда должен быть включен псевдоним для root типа:
<c>root: your@email.address</c>.
</p>

<pre caption="Запуск postfix'а в первый раз">
# <i>/usr/bin/newaliases</i>
<comment>(Это создаст новые псевдонимы. Это требуется делать)</comment>
<comment>(когда вы создаете или обновляете файл псевдонимов.)</comment>
# <i>/etc/init.d/postfix start</i>
</pre>

<p>
Теперь postfix запущен, запустите вашего любимого консольного почтового клиента
и пошлите самому себе письмо. Я использую <c>mutt</c> для всей переписки из
консоли.
</p>

<note>
Настоятельно рекомендуется проверить, чтобы postfix доставлял почту локальным
пользователям, перед тем как перейти к следующему шагу.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Courier-imap</title>
<section>
<body>

<pre caption="Инсталляция courier-imap">
# <i>emerge courier-imap</i>
</pre>

<pre caption="Настройка courier-imap">
# <i>cd /etc/courier-imap</i>
<comment>(Если вы хотите использовать возможности ssl в courier-imap или pop3, )</comment>
<comment>(вам необходимо создать сертификаты.)</comment>
<comment>(Если вы не хотите использовать ssl, просто пропустите следующий шаг. )</comment>

# <i>nano -w pop3d.cnf</i>
# <i>nano -w imapd.cnf</i>
<comment>(Измените значения C, ST, L, CN и адреса e-mail.)</comment>

# <i>mkpop3dcert</i>
# <i>mkimapdcert</i>
</pre>

<pre caption="Запуск нужных вам сервисов courier">
# <i>/etc/init.d/courier-imapd start</i>
# <i>/etc/init.d/courier-imapd-ssl start</i>
# <i>/etc/init.d/courier-pop3d start</i>
# <i>/etc/init.d/courier-pop3d-ssl start</i>
</pre>

<p>
Снова запустите ваш любимый почтовый клиент и проверьте что сервисы начали
принимать и посылать почту. Теперь когда основная часть заработала, перейдем к
связыванию всех компонентов, для получения спокойно работающей системы. Снова,
проверьте, что все что мы сделали работает, перед тем как переходить к
следующему шагу.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Cyrus-sasl</title>
<section>
<body>

<p>
Следующим шагом будет инсталляция cyrus-sasl. Sasl на самом деле играет роль
передатчика авторизационных переменных к pam (Pluggable Authentication
Modules), который передаст эту информацию mysql, для авторизации smtp
пользователей. Мы не будем проверять работоспособность sasl, пока не настроим
mysql, и не создадим тестовых пользователей. В конечном результате, он будет
авторизовать пользователей в mysql.
</p>

<note>
По некоторым причинам, sasl плохо работает с pam используя shadow. Для меня
долгое время это была большая проблема. Если кто-нибудь знает почему sasl не
авторизирует пользователей из /etc/shadow в текущем релизе gentoo, пожалуйста
напишите мне об этом, я буду очень рад услышать решение этой проблемы. <mail
link="ken@kickasskungfu.com">E-mail</mail>.
</note>

<pre caption="Инсталляция и настройка cyrus-sasl">
# <i>USE='-ldap -mysql' emerge cyrus-sasl</i>
<comment>(Мы не используем ldap и мы не используем возможности sasl-mysql,
поэтому мы отключаем их. )</comment>
</pre>

<p>
Дальше правим <path>/usr/lib/sasl2/smtp.conf</path>.
</p>

<pre caption="Запуск sasl">
# <i>nano -w /usr/lib/sasl2/smtp.conf</i>
pwcheck_method: saslauthd
mech_list: LOGIN PLAIN
<comment>(Важно выключить метод авторизации который мы не используем.
Они могут привести к граблям на некоторых почтовых клиентах.)</comment>
# <i>/etc/init.d/saslauthd start</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>SSL-сертификаты для Postfix и Apache</title>
<section>
<body>

<p>
Дальше делаем ssl-сертификаты для posfix и apache.
</p>

<pre caption="">
# <i>cd /etc/ssl/</i>
# <i>nano -w openssl.cnf</i>
<comment>(Измените следующие значения для вашего домена:)</comment>
countryName_default
stateOrProvinceName_default
localityName_default
0.organizationName_default
commonName_default
emailAddress_default.

<comment>(Если каких-то переменных нет, просто добавьте их в любое удобное место.)</comment>


# <i>cd misc</i>
# <i>nano -w CA.pl</i>
<comment>(Нам необходимо добавить -nodes в код строк "# create a certificate" и
"# create a certificate request" таким образом чтобы наши новые ssl-сертификаты
загрузились без пароля. Иначе после перезагрузки системы ssl-сертификаты будут 
не доступны.)</comment>
<comment>(Найдите эти строки в файле и измените их:)</comment>

# create a certificate
system ("$REQ -new -nodes -x509 -keyout newreq.pem -out newreq.pem $DAYS");

# create a certificate request
system ("$REQ -new -nodes -keyout newreq.pem -out newreq.pem $DAYS");

<comment>(Далее создаем сертификат для postfix)</comment>

# <i>./CA.pl -newca</i>
# <i>./CA.pl -newreq</i>
# <i>./CA.pl -sign</i>
# <i>cp newcert.pem /etc/postfix</i>
# <i>cp newreq.pem /etc/postfix</i>
# <i>cp demoCA/cacert.pem /etc/postfix</i>
<comment>(А теперь такой же для apache)</comment>

# <i>openssl req -new &gt; new.cert.csr</i>
# <i>openssl rsa -in privkey.pem -out new.cert.key</i>
# <i>openssl x509 -in new.cert.csr -out new.cert.cert -req -signkey new.cert.key -days 365</i>
<comment>(Оставьте получившиеся сертификаты, мы их проинсталлируем когда будем настраивать apache. )</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Добавим SSL и SASL поддержку в Postfix</title>
<section>
<body>

<p>
Теперь поправим конфигурацию postfix чтобы включить совместимость с sasl и ssl.
Добавьте следующие параметры в конец файла, где их легко потом можно будет
найти.
</p>

<pre caption="/etc/postfix/main.cf">
# <i>nano -w /etc/postfix/main.cf</i>

smtpd_sasl_auth_enable = yes
smtpd_sasl2_auth_enable = yes
smtpd_sasl_security_options = noanonymous
broken_sasl_auth_clients = yes
smtpd_sasl_local_domain =

<comment>(Опция broken_sasl_auth_clients и метод авторизации используется только
для outlook и outlook express, они не документированы. Опция smtpd_sasl_local_domain 
добавляет имя домена для клиентов использующих smtp-авторизацию. Убедитесь что 
postfix отвергает пустое или просто имя пользователя, и они не могут авторизоватся. )</comment>

smtpd_recipient_restrictions =
        permit_sasl_authenticated,
        permit_mynetworks,
        reject_unauth_destination


smtpd_use_tls = yes
#smtpd_tls_auth_only = yes
smtpd_tls_key_file = /etc/postfix/newreq.pem
smtpd_tls_cert_file = /etc/postfix/newcert.pem
smtpd_tls_CAfile = /etc/postfix/cacert.pem
smtpd_tls_loglevel = 3
smtpd_tls_received_header = yes
smtpd_tls_session_cache_timeout = 3600s
tls_random_source = dev:/dev/urandom

<comment>(Опция smtpd_tls_auth_only закомментирована для простоты тестирования,
вы можете включить ее позже, если захотите.)</comment>

# <i>postfix reload</i>
</pre>

<p>
Теперь мы попробуем проверить работоспособность postfix'а, и то что он прочел
файлы конфигурации.
</p>

<pre caption="Проверка поддержки sasl и tls">
# <i>telnet localhost 25</i>

Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
220 mail.domain.com ESMTP Postfix
<i>EHLO domain.com</i>
250-mail.domain.com
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-STARTTLS
250-AUTH LOGIN PLAIN
250-AUTH=LOGIN PLAIN
250-XVERP
250 8BITMIME
<i>^]</i>
telnet&gt; <i>quit</i>
</pre>

<p>
Проверьте, что ответ postfix'а содержит линии AUTH и STARTTLS. Как уже
замечалось выше, AUTH пока не будет работать, потому что sasl пытается
авторизовать из sasldb, вместо shadow по неизвестным причинам. Итак мы просто
пропускаем это и дальше настраиваем mysql для принятия нашей авторизации и
информации о виртуальных доменах.
</p>

</body>
</section>
</chapter>

<chapter>
<title>MySQL</title>
<section>
<body>

<p>
Для инсталляции mysql нам необходим dump-файл genericmailsql.sql
<uri 
link="http://kickasskungfu.com/~ken/genericmailsql.sql">genericmailsql.sql</uri>
</p>

<pre caption="Инсталляция и настройка MySQL">
# <i>emerge mysql</i>

# <i>/usr/bin/mysql_install_db</i>
<comment>(Далее следуйте указаниям на экране, для добавления пароля root в 
mysql, не mysqladmin, иначе ваша база будет открыта всем ветрам.)</comment>

# <i>/etc/init.d/mysql start</i>
# <i>mysqladmin -u root -p create mailsql</i>
# <i>mysql -u root -p mailsql &lt; genericmailsql.sql</i>

# <i>mysql -u root -p mysql</i>
mysql&gt; <i>GRANT SELECT,INSERT,UPDATE,DELETE</i>
        -&gt;     <i>ON mailsql.*</i>
        -&gt;     <i>TO mailsql@localhost</i>
        -&gt;     <i>IDENTIFIED BY '$password';</i>

        -&gt;     <i>quit</i>
<comment>(Проверьте, что новый mailsql пользователь, может подключатся к mysql серверу.)</comment>

# <i>mysql -u mailsql -p mailsql</i>
</pre>

<p>
Ваша новая база имеет значения по умолчанию и таблицы для двух доменов. Вложены
следующие таблицы:
</p>

<ul>
  <li>alias - локальные e-mail  и информация о псевдонимах для mailman</li>
  <li>relocated - информация о адресах перемещенных пользователях</li>
  <li>
    transport - информация о почтовых транспортах для всех доменов
    размещающихся у вас
  </li>
  <li>users - информация о всех пользователях</li>
  <li>virtual - информация о псевдонимах для виртуальных доменов</li>
</ul>

<pre caption="пример таблицы псевдонимов">
id   alias    destination
1    root     foo@bar.com
2  postmaster foo@bar.com
</pre>

<pre caption="пример таблицы пользователей">
<comment>(Приведем для ясности строку)</comment>
id email            clear     name     uid     gid     homedir     \
        maildir                                quota  postfix
10 foo@virt-bar.org $password realname virtid  virtid  /home/vmail \
        /home/vmail/virt-bar.org/foo/.maildir/        y
13 foo@bar.com      $password realname localid localid /home/foo   \
        /home/foo/.maildir/                           y
</pre>

<pre caption="пример таблицы транспортов">
id   domain       destination
1    bar.com      local:
2    virt-bar.org virtual:
</pre>

<pre caption="пример таблицы псевдонимов для виртуальных доменов">
id   email            destination
3   root@virt-bar.org other@email.address
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Apache и phpMyAdmin</title>
<section>
<body>

<p>
Итак, следующим шагом мы настроим apache и создадим интерфейс для еще более
простого взаимодействия с базой данных.
</p>

<pre caption="Настройка apache и phpmyadmin">
# <i>emerge apache mod_php phpmyadmin</i>
</pre>

<p>
Существует множество руководств по настройке apache с поддержкой php. Например,
<uri>http://www.linuxguruz.org/z.php?id=31</uri>. Также многочисленные
сообщения на <uri>http://forums.gentoo.org</uri> где рассматриваются решения
проблем возникших в ходе инсталляции (поиск по "apache php"). Итак, я не
стараюсь раскрыть эту тему здесь. Настройте apache и php, затем продолжим
вместе настройку. Теперь слово для умных: .htaccess положите в директорию к
phpmyadmin. Если вы не сделаете этого, поисковые системы проиндексируют
страницы phpmyadmin и каждый сможет получить к нему доступ с помощью google, и
изменить ваши базы, что не есть хорошо. Существует много howto как это сделать.
<uri>http://docs.csoft.net/micro/black-htaccess.html</uri>.
</p>

<p>
Теперь мы переходим к инсталляции сертификатов для apache, созданных нами
ранее. Директивы apache которые вам требуется изменить для этого:
</p>

<ul>
  <li>SSLCertificateFile /path/to/certs/new.cert.cert</li>
  <li>SSLCertificateKeyFile /path/to/certs/new.cert.key</li>
</ul>

<pre caption="Инсталляция Apache SSL сертификатов">
# <i>cp /etc/ssl/misc/new.cert.cert /etc/apache/conf/ssl/</i>
# <i>cp /etc/ssl/misc/new.cert.key /etc/apache/conf/ssl/</i>
# <i>nano -w /etc/apache/conf/vhosts/ssl.default-vhost.conf</i>
<comment>(Измените следующие параметры)</comment>

ServerName host.domain.name
ServerAdmin your@email.address
SSLCertificateFile /etc/apache/conf/ssl/new.cert.cert
SSLCertificateKeyFile /etc/apache/conf/ssl/new.cert.key

# <i>/etc/init.d/apache restart</i>
</pre>

<note>
Если у вас apache уже проинсталлирован, вам вероятно придется сделать
перезагрузку сервера. Проверьте логи системы на предмет корректного запуска
apache.
</note>

<p>
Дальше настраиваем phpMyAdmin.
</p>

<pre caption="Настройка phpMyAdmin">
# <i>nano -w /home/httpd/htdocs/phpmyadmin/config.inc.php</i>
<comment>(Измените следующие параметры)</comment>

$cfg['Servers'][$i]['host'] = 'localhost';          // MySQL hostname
$cfg['Servers'][$i]['controluser'] = 'mailsql';     // MySQL настройки системного аккаунта
                                                    // (этот аккаунт должен иметь read-only
$cfg['Servers'][$i]['controlpass'] = '$password';   // доступ к таблицам "mysql/user"
                                                    // и "mysql/db" tables)
$cfg['Servers'][$i]['user'] = 'mailsql';            // MySQL пользователь
$cfg['Servers'][$i]['password'] = '$password';      // MySQL пароль
</pre>

<p>
Теперь введите адрес phpmyadmin страницы и просмотрите ваши таблицы в базе. Вы
можете добавить локальные псевдонимы, поправить таблицу пользователей и
добавить тестового пользователя, изменить таблицу транспортов для добавления
информации о ваших доменах. Значений по умолчанию которые устанавливаются
вместе с dump-файлом должно быть достаточно для примера, чтобы помочь вам
настроить систему. Убедитесь что ввели в базу корректную информацию. Для
примера, убедитесь что директории локальных пользователей существуют и указаны
корректные uid/gid. Почтовые директории пользователей, должны быть созданы
postfix, при первой принятой почте для пользователя. Будет неплохо, если вы
пошлете "Добро пожаловать!", чтобы убедится, что .maildir создан.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Vmail-пользователь</title>
<section>
<body>

<p>
Здесь вы можете быть удивлены, узнав, что для виртуальных акаунтов,
используются пользователи и директории, и будете правы.
</p>

<pre caption="Adding the vmail user">
# <i>adduser -d /home/vmail -s /bin/false vmail</i>
# <i>uid=`cat /etc/passwd | grep vmail | cut -f 3 -d :`</i>
# <i>groupadd -g $uid vmail</i>
# <i>mkdir /home/vmail</i>
# <i>chown vmail. /home/vmail</i>
</pre>

<p>
Теперь, когда вы настраиваете виртуальный акаунт, используйте vmail uid, gid ,
и его домашнюю папку. Когда вы создаете локальный акаунт, используйте uid, gid
и домашнюю папку нового пользователя, а не vmail. Мы имеем ввиду, что если вы
захотите создать php-страничку для администрирования пользователей, не
забывайте, что phpmyadmin в целом справляется с этой работой очень неплохо.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Настройка MySQL авторизации и виртуальных доменов</title>
<section>
<body>

<p>
Дальше мы перенастроим нашу авторизацию, на использование mailsql базы в
courier-imap и postfix. Во всех следующих примерах, замените $paasword паролем,
который вы задали пользователю mailsql для mysql.
</p>

<pre caption="">
# <i>emerge /usr/portage/sys-libs/pam_mysql/pam_mysql-$currentversion.ebuild</i>
<comment>(Этот пакет здесь задан маской, которую вы должны заменить на текущую 
версию пакета. версию пакета вы можете посмотреть в portage. )</comment>

# <i>nano -w /etc/pam.d/imap</i>
<comment>(Закомментируйте существующие строки настройки авторизации, и добавьте 
указанные ниже.)</comment>

#auth       required     pam_nologin.so
#auth       required     pam_stack.so service=system-auth
#account    required     pam_stack.so service=system-auth
#session    required     pam_stack.so service=system-auth

auth     optional       pam_mysql.so host=localhost db=mailsql user=mailsql \
  passwd=$password table=users usercolumn=email passwdcolumn=clear crypt=0
account  required       pam_mysql.so host=localhost db=mailsql user=mailsql \
  passwd=$password table=users usercolumn=email passwdcolumn=clear crypt=0

# <i>nano -w /etc/pam.d/pop3</i>
# <i>nano -w /etc/pam.d/smtp</i>
<comment>(Сделайте такие же изменения в pop3 и smtp файлах)</comment>
</pre>

<p>
Далее нам нужно поправить конфигурацию авторизации courier.
</p>

<pre caption="">
# <i>nano -w /etc/courier-imap/authdaemonrc</i>
authmodulelist="authmysql authpam"

# <i>nano -w /etc/courier-imap/authdaemond.conf</i>
AUTHDAEMOND="authdaemond.mysql"

# <i>nano -w /etc/courier-imap/authmysqlrc</i>
MYSQL_SERVER            localhost
MYSQL_USERNAME       mailsql
MYSQL_PASSWORD      $password
MYSQL_DATABASE          mailsql
MYSQL_USER_TABLE        users
#MYSQL_CRYPT_PWFIELD    crypt (эта строка должна быть закомментирована)
MYSQL_CLEAR_PWFIELD     clear
MYSQL_UID_FIELD         uid
MYSQL_GID_FIELD         gid
MYSQL_LOGIN_FIELD       email
MYSQL_HOME_FIELD        homedir
MYSQL_NAME_FIELD        name
MYSQL_MAILDIR_FIELD     maildir

# <i>/etc/init.d/authdaemond restart</i>
# <i>/etc/init.d/saslauthd restart</i>
</pre>

<p>
Мы уже почти подошли к тому что вам обещал. Далее мы настроим необходимые
конфиги postfix'a для связки с базой данных для всех необходимых необходимых
транспортов.
</p>

<pre caption="/etc/postfix/mysql-aliases.cf">
# <i>nano -w /etc/postfix/mysql-aliases.cf</i>
# mysql-aliases.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = alias
select_field    = destination
where_field     = alias
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-relocated.cf">
# <i>nano -w /etc/postfix/mysql-relocated.cf</i>
# mysql-relocated.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = relocated
select_field    = destination
where_field     = email
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-transport.cf (необязательно)">
# <i>nano -w /etc/postfix/mysql-transport.cf</i>
# mysql-transport.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = transport
select_field    = destination
where_field     = domain
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-gid.cf (необязательно)">
# <i>nano -w /etc/postfix/mysql-virtual-gid.cf</i>
#myql-virtual-gid.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = gid
where_field     = email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-maps.cf">
# <i>nano -w /etc/postfix/mysql-virtual-maps.cf</i>
#myql-virtual-maps.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = maildir
where_field     = email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-uid.cf (необязательно)">
# <i>nano -w /etc/postfix/mysql-virtual-uid.cf</i>
# mysql-virtual-uid.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = uid
where_field     = email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual.cf">
# <i>nano -w /etc/postfix/mysql-virtual.cf</i>
# mysql-virtual.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = virtual
select_field    = destination
where_field     = email
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<p>
И последнее, правим <path>/etc/postfix/main.cf</path> еще один раз.
</p>

<pre caption="/etc/postfix/main.cf">
# <i>nano -w /etc/postfix/main.cf</i>
alias_maps = mysql:/etc/postfix/mysql-aliases.cf
relocated_maps = mysql:/etc/postfix/mysql-relocated.cf

local_transport = local
local_recipient_maps = $alias_maps $virtual_mailbox_maps unix:passwd.byname

virtual_transport = virtual
virtual_mailbox_domains =
        virt-bar.com,
        $other-virtual-domain.com

virtual_minimum_uid = 1000
virtual_gid_maps = static:$vmail-gid
virtual_mailbox_maps = mysql:/etc/postfix/mysql-virtual-maps.cf
virtual_alias_maps = mysql:/etc/postfix/mysql-virtual.cf
virtual_uid_maps = static:$vmail-uid
virtual_mailbox_base = /
#virtual_mailbox_limit =
</pre>

<p>
Здесь видно чем значительно отличается postfix 2.0.x от 1.1.x. Сильнее всего
заметно отсутствие необходимости в таблицах транспорта, virtual-gid и
virtual-uid, хотя эти таблицы и вкладываются, чтобы вы могли их использовать
при необходимости.
</p>

<note>
Рекомендуем прочесть VIRTUAL_README идущий с postfix, для большего количества
информации.
</note>

<pre caption="">
# <i>postfix reload</i>
</pre>

<p>
Теперь, если все прошло хорошо, вы должны иметь работающий почтовый сервер.
Пользователи должны быть способны авторизоватся в sql базе, использовать свой
полный почтовый адрес для pop3, imap, и smtp. Настоятельно рекомендую проверить
, что всё это действительно работает. Если вы столкнулись с проблемами,
проверьте раздел troubleshooting в конце документа.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Squirrelmail</title>
<section>
<body>

<pre caption="">
# <i>emerge squirrelmail</i>
<comment>(Добавим ссылку на htdocs для более короткого пути.)</comment>

# <i>ln -s /home/httpd/htdocs/squirrelmail/ /home/httpd/htdocs/mail</i>
# <i>cd /home/httpd/htdocs/mail/conf</i>
# <i>./conf.pl</i>
<comment>(Измените настройки Organization, Server, и Folder для squirrelmail.)</comment>
<comment>(Теперь вы имеете возможность залогинится в squirrelmail, снова с вашим 
полным email адресом, и использовать ваш новый webmail setup.)</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Mailman</title>
<section>
<body>

<p>
Последний шаг - mailman. Новая версия имеет великолепную поддержку виртуальных
доменов, поэтому я использую его, не говоря уже о том что это просто
великолепная программа. Настоятельно рекомендую прочесть документацию mailman,
включающую README.POSTFIX.gz, для более полного понимания.
</p>

<p>
Одно замечание, текущая версия mailman инсталируется в /usr/local/mailman. Если
вы хотите изменить директорию инсталляции, вы можете изменить в ebuild файле
переменную INSTALLDIR.
</p>

<pre caption="/usr/portage/net-mail/mailman/mailman-$ver.ebuild">
# <i>nano -w /usr/portage/net-mail/mailman/mailman-$ver.ebuild</i>
MAILGID="280"
<comment>(Задайте MAILGID для группы mailman взаммен nobody)</comment>
<comment>(Это необходимо для интеграции с postfix)</comment>
</pre>

<pre caption="">
# <i>emerge mailman</i>
<comment>(Имя этого пакета маскировано, поэтому вам надо указать emerge путь к 
ebuild. После инсталляции, следуйте инструкциям в README.gentoo.gz *исключая* - 
не добавляйте псевдонимы в /etc/mail/aliases. Вместо этого, мы укажем postfix 
использовать псевдонимы из базы.)</comment>

# <i>zless /usr/share/doc/mailman-$ver/README.gentoo.gz</i>
</pre>

<pre caption="Настройки по умолчанию: Mailman/Defaults.py">
# <i> nano -w /var/mailman/Mailman/Defaults.py</i>
<comment>(Измените значения приведенные ниже на ваши, дальше будем настраивать 
виртуальные домены.)</comment>
DEFAULT_EMAIL_HOST = 'domain.com'
DEFAULT_URL_HOST = 'www.domain.com'
</pre>

<pre caption="настройка mailman: mm_cfg.py">
# <i>nano -w /var/mailman/Mailman/mm_cfg.py</i>
MTA = "Postfix"
POSTFIX_STYLE_VIRTUAL_DOMAINS = ['virt-domain.com', 'virt.domain2.com']
add_virtualhost('www.virt.domain.com', 'virt.domain.com')
add_virtualhost('www.virt.domain2.com', 'virt.domain2.com')
<comment>(Это нужно для работы mailman с виртуальными доменами.)</comment>
</pre>

<pre caption="">
<comment>(Создадим наш первый лист рассылки.)</comment>

# <i>su mailman</i>
# <i>cd ~</i>
# <i>bin/newlist test</i>
Enter the email of the person running the list: your@email.address
Initial test password:
Hit enter to continue with test owner notification...
<comment>(Листы виртуального домена могут быть указаны в виде list@domain.com)</comment>
# <i>bin/genaliases</i>
<comment>(Теперь ваши псевдонимы сгенерированы, проверьте, что они добавлены правильно.)</comment>

# <i>nano -w data/aliases</i>
# STANZA START: test
# CREATED:
test:             "|/var/mailman/mail/mailman post test"
test-admin:       "|/var/mailman/mail/mailman admin test"
test-bounces:     "|/var/mailman/mail/mailman bounces test"
test-confirm:     "|/var/mailman/mail/mailman confirm test"
test-join:        "|/var/mailman/mail/mailman join test"
test-leave:       "|/var/mailman/mail/mailman leave test"
test-owner:       "|/var/mailman/mail/mailman owner test"
test-request:     "|/var/mailman/mail/mailman request test"
test-subscribe:   "|/var/mailman/mail/mailman subscribe test"
test-unsubscribe: "|/var/mailman/mail/mailman unsubscribe test"
# STANZA END: test

# <i>/etc/init.d/mailman start</i>
# <i>rc-update add mailman default</i>
<comment>(Для запуска mailman при каждой загрузке)</comment>
</pre>

<pre caption="Добавление поддержки псевдонимов mailman в postfix">
# <i>nano -w /etc/postfix/main.cf</i>
owner_request_special = no
recipient_delimiter = +
<comment>(Прочтите README.POSTFIX.gz для более детальной информации)</comment>

alias_maps     =
        hash:/var/mailman/data/aliases,
        mysql:/etc/postfix/mysql-aliases.cf

virtual_alias_maps =
        hash:/var/mailman/data/virtual-mailman,
        mysql:/etc/postfix/mysql-virtual.cf
<comment>(Это добавит поддержку файлов псевдонимов mailman'a в postfix, конечно
вы можете использовать таблицу в mysql для этого, но я ненавижу делать это руками. 
Также если вы не используете виртуальных доменов, добавление псевдонимов, может
привести к проблемам.)</comment>
</pre>

<p>
Теперь вы можете создавать листы рассылок для каждого домена в вашей системе.
Последнее замечание, убедитесь, что mailman запущен из под пользователя mailman
(<c>su mailman</c>) иначе у вас будут проблемы с разрешениями. прочтите
документацию mailman для более детальной информации по управлению листами
рассылки.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Фильтрация содержимого и Anti-Virus</title>
<section>
<body>

<p>
Скоро будет,... это уже существует, но я должен еще немного разобраться в
perl'e и протестировать результат. Если вы хотите помочь с этим, свяжитесь со
мной.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Окончание</title>
<section>
<body>

<p>
Итак,. Вы все сделали, теперь поправьте <path>/etc/postfix/master.cf</path> и
отключите режим verbose. Возможно вы захотите довавить сервис в автозагрузку.
Убедитесь что вы добавили в автозагрузку все сервисы которые используете -
apache, mysql, saslauthd, postfix, courier-imapd, courier-imapd-ssl,
courier-pop3d, и courier-pop3d-ssl, все зависит от вашего решения какие сервисы
предоставлять. Обычно я разрешаю все сервисы.
</p>

<pre caption="Окончание">
# <i>postfix reload</i>
# <i>rc-update add $service default</i>
</pre>

<p>
<e>Вобщем инджой и хэв фан!</e>
</p>

</body>
</section>
</chapter>

<chapter>
<title>Troubleshooting</title>
<section>
<title>Введение</title>
<body>

<p>
Troubleshooting: Это небольшой список решений для проблем, наиболее часто
возникающих в ходе установки. Это не исчерпывающая информация, но вы можете
начать поиск решения граблей отсюда. Такая запутанная настройка и инсталляция
как в этом документе, может привести к тому что некоторые компоненты будут
работать неправильно. Вообще советую сделать несколько следующих шагов.
Запустите систему в базовой конфигурации, добавляя компонент за компонентом,
чтобы выяснить какой из них сбоит.
</p>

</body>
</section>
<section>
<title>Шаг 1: Проверьте ваши файлы конфигурации. </title>
<body>

<p>
Опечатки - главный враг, особенно когда идет речь о системе авторизации.
Проверьте ваши конфигурационные файлы и базу данных на предмет опечаток. Если
вы делаете изменения настроек для сервиса, убедитесь, что вы перезапустили
сервиса, дабы изменения вступили в силу.
</p>

<pre caption="">
# <i>/etc/init.d/service restart</i>
</pre>

</body>
</section>
<section>
<title>Шаг 2: Все необходимые сервисы запущены и работают?</title>
<body>

<p>
Если не запущены, запустите. Крайне сложно отлаживать программу если она не
запущена. Иногда сервис запускается, но не функционирует. Иногда, когда
используется неправильный файл конфигурации сервис может использовать другой
порт предназначенный другому процессу. Иногда вы можете воспользоваться
netstat. Или если возможно , перезагрузите ваш сервер, это очистит любой
зависший сервис.
</p>

<pre caption="">
# <i>/etc/init.d/$service status</i>
# <i>netstat -a | grep $service (или $port)</i>
</pre>

</body>
</section>
<section>
<title>Шаг 3: Все сервисы используют правильные файлы конфигурации?</title>
<body>

<p>
Если вы внесли изменения в конфигурационные файлы сервиса, убедитесь что он
использует новые параметры. Некоторые программы, вроде postfix могут показывать
конфигурацию их параметров.
</p>

<pre caption="">
# <i>apachectl fullstatus</i>  (необходим lynx)
# <i>apachectl configtest</i> (проверка нормальной конфигурации)
# <i>postconf -n</i> (показывает текущие параметры используемые postfix)
# <i>/etc/init.d/$service restart</i>
</pre>

</body>
</section>
<section>
<title>Шаг 4: Проверьте логи.</title>
<body>

<p>
На то логи и существуют, чтобы помочь нам выяснить причину, а иногда и
подсказать решение проблемы. Просмотрите все логи, которые имеют отношение к
программе, ее сбою.
</p>

<pre caption="">
# <i>kill -USR1 `ps -C metalog -o pid=`</i>(для выключения metalog buffering)
# <i>nano -w /var/log/mail/current</i>
# <i>cat /var/log/mysql/mysql.log</i>
# <i>tail /var/log/apache/error_log</i>
</pre>

<p>
Вы также можете найти параметр debug_peer в main.cf который может быть полезен.
Включение этого параметра, увеличит подробность выводящихся сообщений в логи.
</p>

<pre caption="добавление поддержки debug_peer">
# <i>nano -w /etc/postfix/main.cf</i>
debug_peer_level = 5
debug_peer_list = $host.domain.name
<comment>(Раскомментируйте одну из нужных строк.)</comment>
</pre>

</body>
</section>
<section>
<title>Шаг 5: Попробуйте связаться с сервисом.</title>
<body>

<p>
SMTP, IMAP, и POP3 отвечают на telnet сессию, как вы видели немного раньше при
конфигурации postfix. Иногда помогает открыть telnet сессию с сервисом, для
того чтобы выяснить что случилось.
</p>

<pre caption="">
# <i>telnet localhost $port</i>
<comment>(SMTP на 25-м, IMAP, на 143-м, POP3 на 110-м порту. по крайней мере вы
должны увидеть слово ОК. Так вы будете знать что сервис запущен, и готов к ответу.)</comment>

Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
* OK Courier-IMAP ready. Copyright 1998-2002 Double Precision, Inc.
</pre>

</body>
</section>
<section>
<title>Шаг 6: Иногда только большая пушка может дать нам информацию: strace.</title>
<body>

<p>
Вы должны иметь эту программу всегда под рукой. Это бесценный инструмент для
отлаживания программ. Вы можете запустить из командной строки starce и
наблюдать все системные вызовы происходящие в программе. Часто дамп содержит
огромное количество информации, так что вы можете либо наблюдать в реальном
времени, за транзакцией приводящей к краху программы, или записать его в файл,
для неторопливого просмотра позже.
</p>

<pre caption="">
# <i>emerge strace</i>
# <i>strace $command</i>
# <i>strace -p `ps -C $service -o pid=`</i>
</pre>

</body>
</section>
<section>
<title>Шаг 7: Обзор</title>
<body>

<p>
Если получив информацию, вы смогли понять и устранить проблемы - великолепно!
Если нет, вам необходимо поискать в интернете информацию, которая поможет вам.
Ниже приведен список сайтов, где вы можете поискать решение своей проблемы,
если она была решена раньше.
</p>

<ul>
  <li>
    <uri>http://forums.gentoo.org/</uri> - Великолепный форум для 
    gentoo-пользователей
  </li>
  <li>
    <uri>http://bugs.gentoo.org/</uri> - База багов gentoo - хорошее место для
    поиска специфических ошибок
  </li>
  <li><uri>http://postfix.state-of-mind.de/</uri> - smtp-auth howto</li>
  <li>
    <uri>http://marc.theaimsgroup.com/?l=postfix-users</uri> - Почтовая
    рассылка postfix - возможен поиск
  </li>
  <li>
    <uri>http://sourceforge.net/mailarchive/forum.php?forum_id=6705</uri> -
    Архив почтовой рассылки  courier-imap - поиск невозможен
  </li>
  <li>
    <uri>http://www.google.com/</uri> -  Если ничего не помогает, всегда
    остается google, который еще никого не подводил.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>

