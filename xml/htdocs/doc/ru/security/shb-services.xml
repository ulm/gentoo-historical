<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/security/shb-services.xml,v 1.5 2006/12/02 00:36:03 nightmorph Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->
<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.2</version>
<date>2006-12-01</date>

<section>
<title>Apache</title>
<body>

<p>
Apache (1.3.26) поставляется с достаточно полным конфигурационным файлом по
умолчанию, но опять же необходимо улучшить некоторые аспекты, например,
использовать для Apache только один адрес. Ниже приведены параметры, которые вы
должны внести в конфигурационный файл.
</p>

<p>
Если вы не отключали поддержку <c>ssl</c> в <path>/etc/make.conf</path> перед
установкой Apache, то теперь вы должны иметь доступ к серверу с включенным SSL.
Чтобы включить ее, просто добавьте следующую строку.
</p>

<pre caption="/etc/conf.d/apache">
HTTPD_OPTS="-D SSL"
</pre>

<pre caption="/etc/apache/conf/apache.conf">
#Добавьте свой IP для прослушивания
Listen 127.0.0.1
BindAddress 127.0.0.1
#Не следует использовать nobody или nogroup для каждого сервиса, запущенного
#без административных привелегий
#(просто добавляем пользователя apache с группой apache)
User apache
Group apache
#Не сообщать информацию о версии сервера
ServerSignature Off
ServerTokens Prod
</pre>

<p>
Apache собран с параметрами <c>--enable-shared=max</c> и
<c>--enable-module=all</c>. По умолчанию это включает все модули, поэтому вы
должны закомментировать все неиспользуемые модули в разделе <c>LoadModule</c>
(<c>LoadModule</c> и <c>AddModule</c>). Затем перезапустите сервис, выполнив
<c>/etc/init.d/apache restart</c>.
</p>

<p>
Документация доступна по адресу <uri>http://www.apache.org</uri>.
</p>

</body>
</section>

<section>
<title>Bind</title>
<body>

<p>
Документация может быть найдена на сайте <uri
link="http://www.isc.org/products/BIND/bind9.html">Internet Software
Consortium</uri>. Руководство администратора BIND 9 также доступно в
<path>doc/arm</path>.
</p>

<p>
Новые сборочные файлы BIND поддерживают изменение корневого каталога из
коробки. После установки <c>bind</c> следуйте этим простым инструкциям:
</p>

<pre caption="Изолирование среды BIND">
ebuild /var/db/pkg/net-dns/bind-9.2.2-r2/bind-9.2.2-r2.ebuild config\`"
<comment>(Перед запуском следующей команды вам может потребоваться изменить
каталог chroot в файле /etc/conf.d/named. Иначе будет использован
/chroot/dns.)</comment>
<comment>(Вам понадобится заменить номер версии текущей версией)</comment>
</pre>
</body>
</section>
<section>
<title>Djbdns</title>
<body>

<p>
Djbdns &mdash; это реализация DNS, за обнаружение уязвимостей в которой автор
готов выплачивать <uri
link="http://cr.yp.to/djbdns/guarantee.html">деньги</uri>. Принцип работы
сильно отличается от  Bind 9, однако он работает. Дополнительная информация
может быть получена на сайте <uri>http://www.djbdns.org</uri>.
</p>

</body>
</section>

<section>
<title>FTP</title>
<body>

<p>
В общем случае использование FTP (File Transfer Protocol, протокол передачи
файлов) является плохой идеей. Этот протокол отправляет данные незашифрованными
(в том числе и пароли), прослушивает 2 порта (обычно это порты 20 и 21), и
часто злоумышленники ищут анонимный доступ для обмена варезом. Так как протокол
содержит ряд проблем безопасности, то следует использовать <c>sftp</c> или
HTTP. Если это невозможно, то максимально обезопасьте свои сервисы и будьте
готовы.
</p>

</body>
</section>
<section>
<title>Mysql</title>
<body>

<p>
Если вам необходимо предоставить доступ к базе данных <c>mysql</c> локальным
приложениям, раскомментируйте следующую строку в <path>/etc/mysql/my.cnf</path>.
</p>

<pre caption="Отключение доступа к сети">
skip-networking
</pre>

<p>
Затем мы отключаем использование команды LOAD DATA LOCAL INFILE. Это
предотвратит несанкционированное чтение локальных файлов. Это также подходит
против SQL-инъекций в PHP-сценариях.
</p>

<pre caption="Отключение LOAD DATA LOCAL INFILE в разделе [mysqld]">
set-variable=local-infile=0
</pre>

<p>
Затем необходимо удалить тестовую базу данных (test) и все учетные записи за
исключением <c>root</c>.
</p>

<pre caption="Удаление тестовой базы данных и всех ненужных пользователей">
mysql> <i>drop database test;</i>
mysql> <i>use mysql;</i>
mysql> <i>delete from db;</i>
mysql> <i>delete from user where not (host="localhost" and user="root");</i>
mysql> <i>flush privileges;</i>
</pre>

<warn>
Если вас уже есть настроенные учетные записи, то будьте осторожны с этими
командами.
</warn>

<note>
Если вы изменяли пароли в командной строке MySQL, то всегда очищайте
<path>~/.mysql_history</path> и <path>/var/log/mysql/mysql.log</path>, так как
они сохраняют список выполненных SQL-команд с открытыми паролями.
</note>

</body>
</section>
<section>
<title>Proftpd</title>
<body>

<p>
У proftpd было несколько проблем с безопасностью, но большинство из них было
исправлено. Тем не менее, неплохо внести некоторые улучшения:
</p>

<pre caption="/etc/proftpd/proftpd.conf">
ServerName "My ftp daemon"
# Не показывать ident сервера
ServerIdent on "Go away"

# Упрощаем создание виртуальных пользователей
RequireValidShell off

# Использовать альтернативные файлы паролей и групп (в формате passwd)
AuthUserFile "/etc/proftpd/passwd"
AuthGroupFile "/etc/proftpd/group"

# Разрешения
Umask 077

# Таймауты и ограничения
MaxInstances 30
MaxClients 10 "Only 10 connections allowed"
MaxClientsPerHost 1 "You have already logged on once"
MaxClientsPerUser 1 "You have already logged on once"
TimeoutStalled 10
TimeoutNoTransfer 20
TimeoutLogin 20

# Все входят в изолированную оболочку
DefaultRoot ~

# Не запускать с правами администратора
User  nobody
Group nogroup

# Регистрировать любые передачи
TransferLog /var/log/transferlog

# Проблемы с универсализацией имен файлов
DenyFilter \*.*/
</pre>

<p>
Дополнительная информация может быть найдена на
<uri>http://www.proftpd.org</uri>.
</p>

</body>
</section>

<section>
<title>Pure-ftpd</title>
<body>

<p>
Pure-ftpd является ответвлением оригинального trollftpd с модификациями
Фрэнка Денниса по части безопасности и функциональности.
</p>

<p>
Используйте виртуальных пользователей (и никогда не применяйте системные
учетные записи), включив параметр  <c>AUTH</c>. Установите его для
<c>-lpuredb:/etc/pureftpd.pdb</c> и создайте пользователей с использование
<c>/usr/bin/pure-pw</c>.
</p>

<pre caption="/etc/conf.d/pure-ftpd">
AUTH="-lpuredb:/etc/pureftpd.pdb"

## Misc. Others ##
MISC_OTHER="-A -E -X -U 177:077 -d -4 -L100:5 -I 15"
</pre>

<p>
Добавьте к переменной <c>MISC_OTHER</c> параметры запрета на подключение
анонимных пользователей (<c>-E</c>), изменения корневого каталога для всех
(<c>-A</c>), запрета записи и чтения файлов, начинающихся с точки
(<c>-X</c>), максимального периода бездействия (<c>-I</c>), ограничения
рекурсии (<c>-L</c>) и подходящего <c>umask</c>.
</p>

<warn>
<e>Не используйте</e> параметры <c>-w</c> или <c>-W</c>! Если же вы хотите,
чтобы у вас был сайт с варезом, то перестаньте читать это руководство!
</warn>

<p>
Дополнительная информация может быть найдена на
<uri>http://www.pureftpd.org</uri>.
</p>

</body>
</section>
<section>
<title>Vsftpd</title>
<body>

<p>
Vsftpd (сокращение от very secure ftp) &mdash; это небольшой FTP-демон,
который может запускаться с настройками по умолчанию. Он прост и не имеет
множества возможностей, присущих pureftp и proftp.
</p>

<pre caption="/etc/vsftpd">
anonymous_enable=NO
local_enable=YES

#read only
write_enable=NO

#enable logging of transfers
xferlog_std_format=YES

idle_session_timeout=20
data_connection_timeout=20
nopriv_user=nobody

chroot_list_enable=YES
chroot_list_file=/etc/vsftpd/chrootlist

ls_recurse_enable=NO
</pre>

<p>
Как вы можете видеть, нет возможности установить для данного сервиса
индивидуальные разрешения, но если используется настройки для анонимного
доступа, то это он не так уж плох. Иногда неплохо иметь анонимный FTP-сервер
(для доступа к открытому ПО), и vsftpd неплохо подходит для этой работы.
</p>

</body>
</section>
<section>
<title>Qmail</title>
<body>

<p>
Qmail часто признается наиболее безопасным почтовым сервером. Он написан с
прицелом на безопасность (и паранойю). По умолчанию он не разрешает релей и,
начиная с 1996 года, он не имел никаких уязвимостей безопасности. Просто
наберите <c>emerge qmail</c> и настройте его!
</p>
</body>
</section>
<section>
<title>Samba</title>
<body>

<p>
Samba &mdash; это протокол, предоставляющий файлы в сетях Microsoft/Novell,
и он <e>не должен</e> использоваться в интернете. Его необходимо обезопасить.
</p>

<pre caption="/etc/samba/smb.conf">
[global]
  #Bind to an interface
  interfaces = eth0 10.0.0.1/32

  #Make sure to use encrypted password
  encrypt passwords = yes
  directory security mask = 0700

  #allow traffic from 10.0.0.*
  hosts allow = 10.0.0.

  #Enables user authentication
  #(don't use the share mode)
  security = user

  #Disallow privileged accounts
  invalid users = root @wheel

  #Maximum size smb shows for a share (not a limit)
  max disk size = 102400

  #Uphold the password policy
  min password length = 8
  null passwords = no

  #Use PAM (if added support)
  obey pam restrictions = yes
  pam password change = yes
</pre>

<p>
Удостоверьтесь, что для каждого ресурса разрешения выставлены правильно и не
забудьте прочитать <uri link="http://www.samba.org">документацию</uri>.
</p>

<p>
Теперь перезапустите сервер и добавьте пользователей, которым необходим доступ
к этому сервису. Это может быть выполнено с помощью команды
<path>/usr/bin/smbpasswd</path> с параметром <c>-a</c>.
</p>

</body>
</section>
<section>
<title>ssh</title>
<body>

<p>
Для OpenSSH необходимо лишь одно улучшение &mdash; использование более
надежного механизма аутентификации, основанного на шифровании с использование
открытого ключа. Очень много сайтов (например,
<uri>http://www.sourceforge.net</uri>, <uri>http://www.php.net</uri> и
<uri>http://www.apache.org</uri>) было подвержено несанкционированному доступу
из-за пустых или слабых паролей.
</p>

<pre caption="/etc/ssh/sshd_config">
#Включаем только версию 2
Protocol 2

#Отключаем вход администратора. Пользователи могут использовать su для входа
PermitRootLogin no

#Включаем аутентификацию по открытому ключу
PubkeyAuthentication yes
AuthorizedKeysFile      .ssh/authorized_keys

#Отключаем .rhost и обычную аутентификацию по паролю
HostbasedAuthentication no
PasswordAuthentication no
PermitEmptyPasswords no

#Разрешаем подключаться только пользователям из групп wheel или admin
AllowGroups wheel admin

#Из этих групп разрешаем подключаться только следующим пользователям
#@&lt;domainname&gt; не обязательна, но заменяет старую директиву
#AllowHosts
AllowUsers kn@gentoo.org bs@gentoo.org

#Вход в систему
SyslogFacility AUTH
LogLevel INFO

ListenAddress 127.0.0.1
</pre>

<p>
Также проверьте, что в конфигурационном файле нет параметра <c>UsePAM
yes</c>, который перекрывает механизм аутентификации с помощью открытого
ключа.
</p>

<p>
Теперь создайте для каждого пользователя ключ (на компьютере, с которого они
будут регистрироваться) с помощью следующей команды:
</p>

<pre caption="Создание пар ключей DSA">
# <i>/usr/bin/ssh-keygen -t dsa</i>
</pre>

<p>
И введите пароль.
</p>

<pre caption="Вывод ssh-keygen">
Generating public/private dsa key pair.
Enter file in which to save the key (/home/kn/.ssh/id_dsa):<i>[Press enter]</i>
Created directory '/home/kn/.ssh'.
Enter passphrase (empty for no passphrase): <i>[Enter passphrase]</i>
Enter same passphrase again: <i>[Enter passphrase again]</i>
Your identification has been saved in /home/kn/.ssh/id_dsa.
Your public key has been saved in /home/kn/.ssh/id_dsa.pub.
The key fingerprint is:
07:24:a9:12:7f:83:7e:af:b8:1f:89:a3:48:29:e2:a4 kn@knielsen
</pre>

<p>
После этого в каталоге <path>~/.ssh/</path> появятся два файла с названием
<path>id_dsa</path> и <path>id_dsa.pub</path>. Файл <path>id_dsa</path>
является секретным ключом и должен оберегаться от других. Другой файл,
<path>id_dsa.pub</path>, должен быть размещен на каждом сервере, к которому
необходим доступ. Добавьте этот ключ в каталог
<path>~/.ssh/authorized_keys</path> в домашнем каталоге пользователя. Теперь
пользователь должен иметь доступ к подключению:
</p>

<pre caption="Adding the id_dsa.pub file to the authorized_keys file">
$ <i>scp id_dsa.pub other-host:/var/tmp/currenthostname.pub</i>
$ <i>ssh other-host</i>
password:
$ <i>cat /var/tmp/currenthostname.pub >> ~/.ssh/authorized_keys</i>
</pre>

<p>
Теперь ваши пользователи должны тщательно оберегать свои секретные ключи.
Поместите их на сменный носитель, который они будут всегда носить с собой или
спрячьте их на рабочих станциях пользователей (поместите их под правила
<uri link="?part=1&amp;chap=1#security_policies">паролей</uri>).
</p>

<p>
Для дальнейшей информации посетите веб-сайт <uri
link="http://www.openssh.org">OpenSSH</uri>.
</p>

</body>
</section>
<section>
<title>Использование xinetd</title>
<body>

<p>
xinetd является заменой <c>inetd</c> (которого в Gentoo нет), демона сетевых
сервисов. Он поддерживает контроль доступа, основанный на адресе удаленного
узла и времени доступа. Он также предоставляет расширенные возможности
регистрации событий, включая время запуска сервера, адрес удаленного узла, имя
удаленного пользователя, время работы сервера и выполненные запросы.
</p>

<p>
Как в случае с другими сервисами, важно создать хорошую конфигурацию по
умолчанию. Но так как <c>xinetd</c> запускается с правами администратора и
поддерживает протоколы, о работе которых вы можете не знать, рекомендуется не
использовать его. Но если вы все равно хотите использовать его, то вы можете
укрепить его безопасность:
</p>

<pre caption="Установка xinetd">
# <i>emerge xinetd tcp-wrappers</i>
</pre>

<p>
И отредактируйте конфигурационный файл:
</p>

<pre caption="/etc/xinetd.conf">
defaults
{
 only_from = localhost
 instances = 10
 log_type = SYSLOG authpriv info
 log_on_success = HOST PID
 log_on_failure = HOST
 cps = 25 30
}

# Это установит работу pserver (cvs) через xinetd со следующими:
# настройками:
# максимум 10 обработчиков (10 подключений одновременно)
# использовать только TCP
# использовать пользователя cvs для запуска сервиса
# использовать только 1 IP
# разрешать доступ с 10.0.0.*
# разработчики могут пользоваться cvs только с 8 до 17 часов
# использовать упаковщики tpcd (контроль доступа через
# <i>/etc/hosts.allow</i> и <i>/etc/hosts.deny</i>)
# max_load для компьютера 1.0
# Отключающий флаг для настроек по умолчанию, я предпочитаю,
# чтобы он был отключен
service cvspserver
{
 socket_type = stream
 protocol = tcp
 instances = 10
 protocol = tcp
 wait = no
 user = cvs
 bind = 10.0.0.2
 only_from = 10.0.0.0
 access_times = 8:00-17:00
 server = /usr/sbin/tcpd
 server_args = /usr/bin/cvs --allow-root=/mnt/cvsdisk/cvsroot pserver
 max_load = 1.0
 log_on_failure += RECORD
 disable = no
}
</pre>

<p>
Для большей информации см. <c>man 5 xinetd.conf</c>.
</p>

</body>
</section>

<section>
<title>X</title>
<body>

<p>
По умолчанию Xorg настроен функционировать к качестве Xserver. Это может быть
опасным, так как X использует незашифрованные TCP-соединения и прослушивает
подключения xclient.
</p>

<impo>
Если вам не нужен этот сервис, отключите его!
</impo>

<p>
Но если вам требуется использовать рабочую станцию в качестве X-сервера,
используйте команду <c>/usr/X11R6/bin/xhost</c> очень осторожно. Эта команда
позволит клиентам других узлов подключаться к вашему экрану. Это может быть
полезно при необходимости запуска приложения X с другого компьютера, и это
возможно лишь через сеть, но это может быть использовано и злоумышленником.
Синтаксис этой команды &mdash; <c>/usr/X11R6/bin/xhost +hostname</c>.
</p>

<warn>
Не используйте возможность <c>xhost +</c>! Эта возможность позволит любому
клиенту подключиться и взять контроль над X-сервером. Если злоумышленник может
получить доступ к X, то сможет регистрировать нажатия на клавиши, что позволит
ему взять контроль над вашим компьютером. Если вы все же используете ее, то
всегда указывайте узел.
</warn>

<p>
Более безопасным решением является полное отключение этой возможности при
старте X-сервера с помощью <c>startx -- -nolisten tcp</c> или отключение ее
навсегда в файлах конфигурации.
</p>

<pre caption="/usr/X11R6/bin/startx">
defaultserverargs="-nolisten tcp"
</pre>

<p>
Вы должны защитить <path>startx</path>, чтобы не допустить его перезаписи при
установке новой версии Xorg. Добавьте следующую строку в
<path>/etc/make.conf</path>:
</p>

<pre caption = "/etc/make.conf">
CONFIG_PROTECT_MASK="/usr/X11R6/bin/startx"
</pre>

<p>
Если вы используете графический диспетчер входа в систему, вам понадобится
другой подход.
</p>

<p>
Для <c>gdm</c> (Gnome Display Manager)
</p>

<pre caption="/etc/X11/gdm/gdm.conf">
[server-Standard]
command=/usr/X11R6/bin/X -nolisten tcp
</pre>

<p>
Для <c>xdm</c> (X Display Manager) и <c>kdm</c> (Kde Display Manager)
</p>

<pre caption="/etc/X11/xdm/Xservers">
:0 local /usr/bin/X11/X -nolisten tcp
</pre>

</body>
</section>

</sections>
