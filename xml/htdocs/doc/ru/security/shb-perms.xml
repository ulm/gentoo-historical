<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/security/shb-perms.xml,v 1.4 2006/09/18 09:22:48 neysx Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->
<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.1</version>
<date>2006-09-16</date>

<section>
<title>Файлы, доступные по чтению для всех</title>
<body>

<p>
Обычные пользователи не должны иметь доступ к конфигурационным файлам или
паролям. Атакующий может украсть пароли к базе данных или веб-сайту и
использовать их для дефейса или даже хуже &mdash; для удаления файлов. Вот
почему важно правильно установить разрешения на файлы. Если вы уверены, что
определенный файл может использоваться только суперпользователем, установите
для него права <c>0600</c> и назначьте ему правильного владельца с помощью
<c>chown</c>.
</p>

</body>
</section>
<section>
<title>Файлы, доступные по записи для группы или для всех</title>
<body>

<pre caption="Поиск файлов, доступных по записи всем">
# <i>find / -type f \( -perm -2 -o -perm -20 \) -exec ls -lg {} \; 2>/dev/null >writable.txt</i>
# <i>find / -type d \( -perm -2 -o -perm -20 \) -exec ls -ldg {} \; 2>/dev/null >>writable.txt</i>
</pre>

<p>
Эти команды создадут огромный файл, содержащий имена файлов, которые имеют
права на запись для группы и всех остальных. Проверьте их и устраните ненужные
права, запустив для файлов команду <c>/bin/chmod o-w</c>.
</p>

</body>
</section>
<section>
<title>Файлы SUID/SGID</title>
<body>

<p>
Файлы с битами SUID или SGID будут запущены с привелегиями <e>владельца или
группы владельца</e>, а не с привелегиями запустившего их пользователя. Обычно
это используется для файлов, которые должны запускаться с правами
суперпользователя для выполнения необходимых задач. Эти файлы, если содержат
уязвимости, могут стать источником повышения привелегий локальным
пользователем. Это может быть опасным, поэтому с подобных файлов необходимо
любой ценой удалить установленный бит SUID или SGID. Если вы не используете эти
файлы, запустите для них команду <c>chmod 0</c> или удалите пакет, установивший
этот файл (проверить, какому пакету принадлежит определенный файл, можно с
помощью команды <c>equery</c>; если у вас ее еще нет, то, чтобы установить ее,
просто наберите <c>emerge gentoolkit</c>). Иначе просто удалите бит SUID с
помощью <c>chmod -s</c>.
</p>

<pre caption="Поиск файлов с setuid">
# <i>find / -type f \( -perm -004000 -o -perm -002000 \) -exec ls -lg {} \; 2>/dev/null >suidfiles.txt</i>
</pre>

<p>
Эта команда создаст файл, содержащий список всех SUID/SGID-файлов.
</p>

<pre caption="Список файлов с setuid">
/bin/su
/bin/ping
/bin/mount
/bin/umount
/var/qmail/bin/qmail-queue
/usr/bin/chfn
/usr/bin/chsh
/usr/bin/crontab
/usr/bin/chage
/usr/bin/expiry
/usr/bin/sperl5.6.1
/usr/bin/newgrp
/usr/bin/passwd
/usr/bin/gpasswd
/usr/bin/procmail
/usr/bin/suidperl
/usr/lib/misc/pt_chown
/usr/sbin/unix_chkpwd
/usr/sbin/traceroute
/usr/sbin/pwdb_chkpwd
</pre>

<p>
По умолчанию в Gentoo Linux не так много файлов с битом SUID (хотя это зависит
от типа вашей установки), но у вас может получиться список, представленный
выше. Большинство команд используется только суперпользователем. Удалите
SUID-бит с <c>ping</c>, <c>mount</c>, <c>umount</c>, <c>chfn</c>, <c>chsh</c>,
<c>newgrp</c>, <c>suidperl</c>, <c>pt_chown</c> и <c>traceroute</c>, запустив
для каждого из них <c>chmod -s</c>. Не удаляйте бит с <c>su</c>,
<c>qmail-queue</c> или <c>unix_chkpwd</c>. Удалив setuid с этих файлов, вы не
сможете стать суперпользователем и получать почту. Удаляя бит (там, где это
безопасно), вы исключаете возможность обычного пользователя (или
злоумышленника) получить права суперпользователя с помощью этих файлов.
</p>

<p>
В моей системе есть только несколько SUID-файлов: <c>su</c>, <c>passwd</c>,
<c>gpasswd</c>, <c>qmail-queue</c>, <c>unix_chkpwd</c> и <c>pwdb_chkpwd</c>.
Но если у вас запущен X-сервер, то в вашей системе их будет больше, так как X
нужны повышенные привелегии, которые могут быть предоставлены посредством SUID.
</p>

</body>
</section>
<section>
<title>SUID/SGID-файлы и жесткие ссылки</title>
<body>

<p>
Файл может считаться удаленным лишь в том случае, когда нет больше ссылок,
указывающих на него. Это может звучать странно, но просто следует понять, что
файл (например, <path>/usr/bin/perl</path>) на самом деле является ссылкой на
inode, в котором сохранены данные. На файл может указывать любое число ссылок,
и пока каждая их них не будет удалена, файл будет существовать.
</p>

<p>
Если у ваших пользователей есть доступ к разделам, которые не смонтированы с
параметрами <c>nosuid</c> или <c>noexec</c> (например, если <path>/tmp</path>,
<path>/home</path>, <path>/var/tmp</path> не являются отдельными разделами), вы
должны удостовериться, что они не смогут создать жесткие ссылки на файлы с SUID-
или SGID-битами, благодаря чему они могут иметь доступ к устаревшим версиям
файлов.
</p>

<warn>
Если вы получаете предупреждения об оставшихся жестких ссылках, а ваши
пользователи имеют доступ по записи к разделам, позволяющим запускать файлы
с SUID/SGID-битами, вы должны прочитать этот раздел очень внимательно. Любой
из ваших пользователей может разрушить ваши обновления, сохранив устаревшую
версию программы. Если ваши пользователи не могут создавать собственные файлы с
битом SUID или могут только запускать программы с помощью динамического
загрузчика (разделы, смонтированные с параметром <c>noexec</c>), то вам не о
чем беспокоиться.
</warn>

<note>
Пользователям не нужен доступ по чтению для файла, чтобы создать на него
ссылку, им нужен всего лишь доступ по чтению к каталогу, содержащему этот файл.
</note>

<p>
Чтобы проверить, сколько ссылок имеет файл, вы можете использовать команду
<c>stat</c>.
</p>

<pre caption="Команда stat">
$ stat /bin/su
  File: `/bin/su'
  Size: 29350           Blocks: 64         IO Block: 131072 regular file
Device: 900h/2304d      Inode: 2057419     Links: 1
Access: (4711/-rws--x--x)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2005-02-07 01:59:35.000000000 +0000
Modify: 2004-11-04 01:46:17.000000000 +0000
Change: 2004-11-04 01:46:17.000000000 +0000
</pre>

<p>
Чтобы найти файлы с SUID и SGID со множеством ссылок, вы можете задействовать
команду <c>find</c>.
</p>

<pre caption="Поиск suid/sgid-файлов с несколькими ссылками">
$ find / -type f \( -perm -004000 -o -perm -002000 \) -links +1 -ls
</pre>

</body>
</section>
</sections>
