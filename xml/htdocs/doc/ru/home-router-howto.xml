<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/home-router-howto.xml,v 1.4 2005/12/01 23:17:49 achumakov Exp $ -->

<guide link="/doc/ru/home-router-howto.xml" lang="ru" disclaimer="draft">
<title>Руководство по развертыванию домашнего маршрутизатора</title>

<author title="автор">
  <mail link="vapier@gentoo.org">Mike Frysinger</mail>
</author>
<author title="переводчик">
  <mail link="azazello1984@mail.ru">Азамат Хакимов</mail>
</author>

<abstract>
В этом документе описывается как превратить старый компьютер с установленной
ОС Gentoo в маршрутизатор для подключения вашей домашней сети к интернету.
</abstract>

<!-- The content of this document is released into the public domain -->
<!-- Текст этого документа сделан общественным достоянием -->
<license/>

<version>1.22</version>
<date>2005-11-04</date>

<chapter>
<title>Введение</title>
<section>
<body>

<p>
По признанию Linksys, сборка собственного маршрутизатора из старых деталей
имеет множество преимуществ перед покупкой специализированного маршрутизатора.
Одним из самых больших является контроль над соединениями. Другие преимущества
оставим вашему воображению. Все, что может быть сделано по этому руководству,
будет хорошим подспорьем для этого.
</p>

<p>
В этом руководстве рассказывается, как вам создать трансляцию сетевых адресов
(NAT) на маршрутизаторе (на базе ядра Linux и iptables), добавить и настроить
распространенные сервисы (систему доменных имен (DNS) с помощью dnsmasq,
протокол динамической конфигурации хоста (DHCP) с помощью dhcpcd, ADSL с
помощью rp-pppoe) и завершить настройку более детальной разработкой и
интересными вещами (пробрасывание портов, ограничение трафика,
прокси/кеширование и многое другое...).
</p>

<p>
Перед тем, как начать, вы должны отвечать нескольким базовым требованиям.
Во-первых, вам понадобится компьютер, в котором установлены не менее 2 сетевых
карт (NIC). Во-вторых, вам понадобятся параметры настроек вашего соединения к
интернету (возможно, включая параметры IP/DNS/шлюза/имени пользователя/пароля).
Наконец, вам понадобится немного времени и любовь к ОС Gentoo.
</p>

<p>
Соглашения, используемые в данном руководстве:
</p>

<ul>
 <li>eth0 &mdash; сетевая карта, подключенная к локальной вычислительной сети
(LAN)</li>
 <li>eth1 &mdash; сетевая карта, подключенная внешней сети (WAN)</li>
 <li>в LAN используется частная сеть с адресами 192.168.0.xxx</li>
 <li>маршрутизатору в соответствии со стандартами присвоен IP-адрес
192.168.0.1</li>
 <li>маршрутизатор работает под управлением ОС Linux с ядром 2.4 или 2.6; вы
можете попробовать у себя ядра 2.0/2.2</li>
</ul>

<impo>
Из соображений безопасности, я настоятельно рекомендую вам отключить ненужные
сервисы на маршрутизаторе, пока мы не установим межсетевой экран и не заставим
его работать. Чтобы просмотреть запущенные сервисы, наберите <c>rc-status</c>.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Настройка ядра (сначала познай себя)</title>
<section>
<body>

<p>
Вашему ядру нужны драйверы, работающие для обеих сетевых карт. Чтобы
просмотреть, определены ли ваши карты системой, наберите <c>ifconfig</c>.
Ваш вывод программы может несколько отличаться от нижеприведенного, это
нормально. Важно то, что интерфейсы полностью отображены.
</p>

<pre caption="Проверка сетевых карт">
# <i>ifconfig -a</i>
eth0      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B8
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:11 Base address:0x9800

eth1      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B9
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:10 Base address:0x9400
</pre>

<p>
Если вы не увидели ваши две карты и вы не уверены, какие карты у вас есть,
попробуйте запустить <c>lspci</c> из пакета <c>pciutils</c>. Просмотрите строки,
содержащие &laquo;Ethernet controller&raquo;. Как только вы получите эту
информацию, переходите к конфигурированию ядра и добавьте поддержку
соответсвующих драйверов.
</p>

<p>
Следующим шагом включите поддержку межсетевого экрана iptables и NAT (а также
ограничителя пакетов, если вам он нужен). Приведенный список разделен на
обязательные (*), обязательные для ADSL через PPPoE (a), рекомендуемые (x)
функции и функции для ограничителя трафика (s).
Неважно, как вы будете осуществлять их поддержку &mdash; в самом ядре или в
качестве модулей, если функция будет затребована, соответствующий модуль будет
загружен (загрузка модуля оставлена для читателя как занимательное для любого
упражнение).
</p>

<pre caption="Сетевые функции">
Networking options  ---&gt;
   [*] TCP/IP networking
      [*] IP: advanced router
   [*] Network packet filtering (replaces ipchains)
<comment>Если вы используете ядро 2.4.x, вам понадобится включить следующее для DHCP:</comment>
   [*] Socket Filtering

   IP: Netfilter Configuration  ---&gt;
      [*] Connection tracking (required for masq/NAT)
         [x] FTP protocol support
         [x] IRC protocol support
      [*] IP tables support (required for filtering/masq/NAT)
         [*] IP range match support
         [x] MAC address match support
         [*] Multiple port match support
         [*] Packet filtering
            [*] REJECT target support
            [x] REDIRECT target support
         [*] Full NAT
            [*] MASQUERADE target support
         [s] Packet mangling
            [s] MARK target support
         [x] LOG target support

   QoS and/or fair queueing  ---&gt;
      [s] QoS and/or fair queueing
         [s] HTB packet scheduler
         [s] Ingress Qdisc

   [a] PPP (point-to-point protocol) support
      [a] PPP filtering
      [a] PPP support for async serial ports
      [a] PPP support for sync tty ports
      [a] PPP Deflate compression
      [a] PPP BSD-Compress compression
      [a] PPP over Ethernet
</pre>

<note>
Что-то может немного отличаться между ядрами веток 2.4 и 2.6, но вы в этом
разберетесь сами :).
</note>

</body>
</section>
</chapter>

<chapter>
<title>Подключение к WAN (или к интернету)</title>

<section>
<title>Введение</title>
<body>

<p>
Есть множество способов подключиться к интернету, поэтому я рассмотрю те, в
которых хорошо разбираюсь сам. Остановимся на ADSL (PPPoE) и кабельном
подключении (с использованием статических/динамических IP-адресов). Если другие
способы не описаны здесь, смело пишите небольшое руководство и отправляйте мне
по электронной почте. Вы можете смело пропускать следующие разделы, не
касающиеся вас. В этой главе описывается подключение маршрутизатора к интернету
через интерфейс eth1.
</p>

</body>
</section>
<section>
<title>ADSL и PPPoE</title>
<body>

<p>
Все разнообразное ПО для PPPoE было объединено в один замечательный маленький
пакет, именуемый ныне <uri link="http://www.roaringpenguin.com/">Roaring
Penguin</uri> (Хохочущий Пингвин &mdash; <e>прим. пер.</e>). Просто наберите
<c>emerge rp-pppoe</c> и вы будете на правильном пути. Помните, я говорил, что
вам может понадобиться информация о имени пользователя и пароле? Что ж, я не
лгал и я надеюсь, что она у вас есть! Загрузите <path>/etc/ppp/pppoe.conf</path>
в ваш любимый текстовый редактор и внесите ее в файл.
</p>

<note>
Для того, чтобы настройки для net.eth1 работали, у вас должен быть установлен
baselayout-1.10.1 или выше в вашей системе.
</note>

<pre caption="Настройка eth1">
<comment>(Замените "vla9h92" вашим именем пользователя и "password" вашим паролем)</comment>

# <i>nano /etc/ppp/pppoe.conf</i>
<comment># Сетевая карта, подключенная к ADSL-модему</comment>
ETH=eth1
<comment># Имя пользователя ADSL.</comment>
USER=vla9h92
# <i>nano /etc/ppp/pap-secrets</i>
<comment># клиент    сервер  пароль</comment>
"vla9h924" * "password"
# <i>nano /etc/conf.d/net</i>
<comment>Добавьте параметр config_eth1 и установите его равным adsl:</comment>
config_eth1=( "adsl" )
# <i>ln -s net.lo /etc/init.d/net.eth1</i>
# <i>rc-update add net.eth1 default</i>
# <i>/etc/init.d/net.eth1 start</i>
</pre>

<warn>
Когда поднимется DSL-интерфейс, создастся устройство ppp0. Хотя ваша сетевая
карта называется eth1, IP-адрес на самом деле будет привязан к ppp0. Теперь,
когда вы увидете в примерах использование &laquo;eth1&raquo;, замените его на
&laquo;ppp0&raquo;.
</warn>

</body>
</section>

<section>
<title>Кабельное соединение и/или динамические/статические IP-адреса</title>
<body>

<p>
Если у вас статический IP-адрес, то, по сравению с динамическим IP-адресом,
вам потребуется несколько больше параметров настроек. Дополнительно вам
понадобится ваш IP-адрес, адреса шлюза и DNS-серверов.
</p>

<pre caption="Настройка eth1">
<comment>Для пользователей с динамическим IP-адресом:</comment>
# <i>emerge dhcpcd</i>
# <i>nano /etc/conf.d/net</i>
<comment>Добавьте параметр, подобный этому:</comment>
config_eth1=( "dhcp" )

<comment>Для пользователей со статическим IP-адресом:</comment>
# <i>nano /etc/conf.d/net</i>
<comment>Добавьте параметры, подобные этим:</comment>
ifconfig_eth1=( "66.92.78.102 broadcast 66.92.78.255 netmask 255.255.255.0" )
routes_eth1=( "default gw 66.92.78.1" )
# <i>nano /etc/resolv.conf</i>
<comment>Добавьте по одной строке на каждый DNS-сервер:</comment>
nameserver 123.123.123.123

<comment>Настройки для обоих вариантов:</comment>
# <i>ln -s net.lo /etc/init.d/net.eth1</i>
# <i>rc-update add net.eth1 default</i>
# <i>/etc/init.d/net.eth1 start</i>
</pre>

<p>
У вас должно всё работать, чтобы вы могли идти дальше.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Подключение к LAN (приведите несколько друзей)</title>
<section>
<body>

<p>
Этот шаг сравним с одним из предыдущих.
</p>

<pre caption="Настройка eth0">
# <i>nano /etc/conf.d/net</i>
<comment>Добавьте строку, подобную приведённой:</comment>
ifconfig_eth0=( "192.168.0.1 broadcast 192.168.0.255 netmask 255.255.255.0" )
# <i>rc-update add net.eth0 default</i>
# <i>/etc/init.d/net.eth0 start</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Сервисы LAN (потому что мы славные люди)</title>

<section>
<title>DHCP-сервер</title>
<body>

<p>
Уверен, было бы славно, если любой в вашем доме мог просто подключить свой
компьютер к сети и сразу начать работать. Нет нужды запоминать бесполезные
детали или тратить время, путаясь в диалогах конфигураций! Жизнь должна быть
хороша, не правда ли? Введение в протокол динамической конфигурации хоста (DHCP)
и почему вы должны об этом позаботиться.
</p>

<p>
DHCP полностью оправдывает свое название. Это протокол, позволяющий вам
автоматически настраивать другие компьютеры. Вы запускаете DHCP-сервер (dhcpd)
на маршрутизаторе, даете ему всю информацию о вашей сети (доступные IP-адреса,
серверы DNS, шлюзы и т. д...), а затем, когда начнет загружаться другой
компьютер, он запустит DHCP-клиент и автоматически настоится. Ни суматохи, ни
беспорядка! Для более детальной информации вы всегда можете посетить <uri
link="http://ru.wikipedia.org/wiki/DHCP">Википедию</uri>.
</p>

<p>
Мы воспользуемся пакетом dnsmasq, который предоставляет оба сервиса DHCP и DNS.
Сейчас перенесем свое внимание на DHCP. Помните, что если вы хотите запустить
отдельный сервер DHCP, то вы найдете другой пример в главе Забавные вещи.
Также если вы хотите отточить настройки DHCP-сервера, просто прочтите
комментарии в <path>/etc/dnsmasq.conf</path>. Настройки по умолчанию должны
работать великолепно.
</p>

<pre caption="Настройка DHCP-сервера">
# <i>emerge dnsmasq</i>
# <i>nano /etc/dnsmasq.conf</i>
<comment>Просто добавьте эту строку:</comment>
dhcp-range=192.168.0.100,192.168.0.250,72h

# <i>nano /etc/conf.d/dnsmasq</i>
<comment>Добавьте "-i eth0" в DNSMASQ_OPTS</comment>
# <i>rc-update add dnsmasq default</i>
# <i>/etc/init.d/dnsmasq start</i>
</pre>

<p>
Теперь ваш маленький маршрутизатор еще и DHCP-сервер! Подключите несколько
компьютеров и понблюдайте за их работой! Для систем с ОС Windows вам выбрать
параметры &laquo;Obtain an IP address automatically&raquo; (&laquo;Получать
IP-адреса автоматически&raquo;) и &laquo;Obtain DNS server address
automatically&raquo; (&laquo;Получать адреса DNS-серверов автоматически&raquo;)
в настройках соединения. Изменения не будут мгновенными, поэтому запустите
командную строку и введите в ней <c>ipconfig /release</c> и <c>ipconfig
/renew</c>. Но довольно о Windows, вернемся назад к нашим любимым пингвинам.
</p>

</body>
</section>

<section>
<title>DNS-сервер</title>
<body>

<p>
Когда люди хотят посетить место в интернете, они запоминают названия, а не
набор бесполезных цифр. В конце концов, что проще запомнить &mdash; ebay.com
или 66.135.192.87?  Вот здесь появляется система доменных имён &mdash; Domain
Name System (DNS). DNS-серверы работают по всему интернету, и если кто-нибудь
захочет посетить ebay.com, то они заменят ebay.com (понятный для нас) на
66.135.192.87 (понятный для компьютеров). Для более детальной информации о DNS
вы можете всегда посетить
<uri link="http://ru.wikipedia.org/wiki/DNS">Википедию</uri>.
</p>

<p>
Мы использовали пакет dnsmasq в качестве DHCP-сервера, но он также содержит и
DNS-сервер, и вам больше ничего не надо делать! Ваш маленький маршрутизатор
уже предоставляет услуги DNS для своих клиентов DHCP. Держу пари, что вы хотели
бы, чтобы все было так просто ;).
</p>

<p>
Вы можете выбрать другой сервер DNS, если он более удобен для вас, но причина
использования dnsmasq заключается в том, что он разработан специально для того,
что хотим мы и ничего более. Это небольшой кеширующий/пробрасывающий сервер DNS
для локальных сетей. Нам не нужно предоставлять DNS для нашего домена, просто
осуществлять простые операции с DNS вне нашей локальной сети.
</p>


</body>
</section>

<section>
<title>NAT (или IP-маскарадинг)</title>
<body>

<p>
На данный момент люди вашей сети могут общаться друг с другом и могут
преобразовывать имена узлов с помощью DNS, но они всё еще не могут по настоящему
выйти в интернет. Вы можете подумать, что это великолепно (больше канала для
вас!), но я готов поспорить, что они так не считают.
</p>

<p>
Вот здесь на сцену выходит трансляция сетевых адресов (Network Address
Translation &mdash; NAT). NAT &mdash; это способ подключить множество
компьютеров в частной сети к интернету, если у вас в распоряжении есть только
небольшой набор IP-адресов. Обычно вы получаете от провайдера только 1 IP-адрес,
но вы хотите позволить всему вашему дому подключаться к интернету. NAT &mdash;
это то самое колдовство, делающее это возможным. Для более детальной информации
о NAT вы всегда можете посетить <uri
link="http://en.wikipedia.org/wiki/NAT">Википедию</uri>.
</p>

<note>
Перед тем, как начать, удостоверьтесь, что в вашей системе есть iptables.
Несмотря на то, что он автоматически устанавливается в большинстве систем, у
вас он может не быть. Если у вас его нет, просто наберите <c>emerge
iptables</c>.
</note>

<pre caption="Настройка iptables">
<comment>Сначала обнуляем наши текущие правила</comment>
# <i>iptables -F</i>
# <i>iptables -t nat -F</i>

<comment>Установим политики по умолчанию для трафика, не соответсвующего ни
одному из правил</comment>
# <i>iptables -P INPUT ACCEPT</i>
# <i>iptables -P OUTPUT ACCEPT</i>
# <i>iptables -P FORWARD DROP</i>

<comment>Скопируйте и вставьте для примера...</comment>
# <i>export LAN=eth0</i>
# <i>export WAN=eth1</i>

<comment>Теперь закроем наши сервисы так, чтобы они могли работать только для LAN</comment>
# <i>iptables -I INPUT 1 -i ${LAN} -j ACCEPT</i>
# <i>iptables -I INPUT 1 -i lo -j ACCEPT</i>
# <i>iptables -A INPUT -p UDP --dport bootps -i ! ${LAN} -j REJECT</i>
# <i>iptables -A INPUT -p UDP --dport domain -i ! ${LAN} -j REJECT</i>

<comment>(Необязательно) Разрешаем доступ к нашему ssh-серверу из интернета</comment>
# <i>iptables -A INPUT -p TCP --dport ssh -i ${WAN} -j ACCEPT</i>

<comment>Отбросим все TCP/UDP-пакеты, обращающиеся к привилегированным портам</comment>
# <i>iptables -A INPUT -p TCP -i ! ${LAN} -d 0/0 --dport 0:1023 -j DROP</i>
# <i>iptables -A INPUT -p UDP -i ! ${LAN} -d 0/0 --dport 0:1023 -j DROP</i>

<comment>В конце добавляем правила для NAT</comment>
# <i>iptables -I FORWARD -i ${LAN} -d 192.168.0.0/255.255.0.0 -j DROP</i>
# <i>iptables -A FORWARD -i ${LAN} -s 192.168.0.0/255.255.0.0 -j ACCEPT</i>
# <i>iptables -A FORWARD -i ${WAN} -d 192.168.0.0/255.255.0.0 -j ACCEPT</i>
# <i>iptables -t nat -A POSTROUTING -o ${WAN} -j MASQUERADE</i>
<comment>Сообщаем ядру, что ip-форвардинг разрешен</comment>
# <i>echo 1 > /proc/sys/net/ipv4/ip_forward</i>
# <i>for f in /proc/sys/net/ipv4/conf/*/rp_filter ; do echo 1 > $f ; done</i>

<comment>Сохраняем правила, чтобы потом не вводить всё вручную заново при перезагрузке</comment>
# <i>/etc/init.d/iptables save</i>
# <i>rc-update add iptables default</i>
# <i>nano /etc/sysctl.conf</i>
<comment>Добавьте/Раскомментируйте следующие строки:
net.ipv4.ip_forward = 1
net.ipv4.conf.default.rp_filter = 1</comment>
</pre>

<p>
Как только все это будет написано, остальные из вашей сети смогут пользоваться
интернетом так, как будто сами подключены напрямую к нему.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Забавные вещи (во время дождливых дней)</title>

<section>
<title>Введение</title>
<body>

<p>
Верите ли или нет, но вы всё уже сделали :). Начиная с этого раздела, я опишу
несколько полезных тем, которые могут быть полезными для вас. Любая из этих глав
необязательна.
</p>

</body>
</section>

<section>
<title>Пробрасывание портов</title>
<body>

<p>
Когда-нибудь вам может потребоваться сервисы на компьютере за маршрутизатором
или же вы просто хотите сделать жизнь проще, подключаясь к локальной сети из
интернета. Возможно, вы захотите запустить серверы FTP, HTTP, SSH или VNC на
одном или нескольких компьютерах за вашим маршрутизатором и подключаться к ним
всем. Есть только одно ограничение &mdash; вы можете запускать только по одному
сервису на компьютере на каждый порт. Например, невозможно настроить три
FTP-сервера за вашим маршрутизатором и попробовать подключиться ко всем трем из
интернета через порт 21; только один из них будет на порту 21, когда как
остальные будут использовать, скажем, порты 123 и 567.
</p>

<p>
Все правила проброса портов имеют вид <c>iptables -t nat -A PREROUTING [-p
протокол] --dport [внешний порт маршрутизатора] -i ${WAN} -j DNAT --to
[IP-адрес/порт для проброса]</c>. К сожалению, iptables не принимает имена
узлов при пробрасывании портов. Если вы пробрасываете внешний порт на порт с тем
же номером для внутреннего компьютера, то вы можете опустить порт назначения.
Смотрите страницу помощи iptables(8) для большей информации.
</p>

<pre caption="Выполнение команд iptables">
<comment>Скопируйте и вставьте это для примера...</comment>
# <i>export LAN=eth0</i>
# <i>export WAN=eth1</i>
<comment>Пробрасывание порта 2 на ssh внутреннего хоста</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 2 -i ${WAN} -j DNAT --to 192.168.0.2:22</i>

<comment>Пробрасывание FTP-трафика на внутренний компьютер</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 21 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>Пробрасывание HTTP-трафика на внутренний компьютер</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 80 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>Пробрасывание VNC-трафика для внутренних компьютеров</comment>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 5900 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 5901 -i ${WAN} -j DNAT --to 192.168.0.3:5900</i>
<comment>Теперь, если вам необходимо подключиться к VNC по адресу 192.168.0.3,
то просто добавьте ":1" к имени роутера</comment>
<!-- У автора не :5901, а :1 - ошибка? -->

<comment>Проброс трафика Bittorrent</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 6881:6889 -i ${WAN} -j DNAT --to 192.168.0.2</i>

<comment>Проброс трафика eDonkey/eMule</comment>
+# <i>iptables -t nat -A PREROUTING -p tcp --dport 4662 -i ${WAN} -j DNAT --to
192.168.0.55</i>

<comment>Поддержка Game Cube Warp Pipe</comment>
# <i>iptables -t nat -A PREROUTING -p udp --dport 4000 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>Поддержка Playstation 2 Online</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11</i>

<comment>Xbox Live</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 88 -i ${WAN} -j DNAT --to 192.168.0.69</i>
</pre>

<note>
Если у вас есть полезные/интересные примеры, пожалуйста,
<uri link="mailto:vapier@gentoo.org">пишите мне</uri>.
</note>

</body>
</section>

<section>
<title>identd (для IRC)</title>
<body>

<p>
Ретранслируемые интернет-чаты (Internet Relay Chat, IRC) усиленно
используют сервис ident. Теперь, когда IRC-клиенты находятся за маршрутизатором,
нам нужен способ настроить свой ident для маршрутизатора и клиентов. Подобный
сервер называется <c>midentd</c>.
</p>

<pre caption="Настройка и запуск ident">
# <i>emerge midentd</i>
# <i>rc-update add midentd default</i>
# <i>/etc/init.d/midentd start</i>
</pre>

<p>
В портеже есть и другие серверы ident. В зависимости от ваших нужд,
рекомендую попробовать <c>oidentd</c> и <c>fakeidentd</c>.
</p>

</body>
</section>

<section>
<title>Сервер времени</title>
<body>

<p>
Сохранять системное время точным является неотъемлемой частью сопровождения
хорошей системы. Одним из самых распространенных способов сделать это являются
протокол сетевого времени (Network Time Protocol, NTP) и пакет ntp (содержащий
реализации как сервера, так и клиента).
</p>

<p>
Многие запускают клиенты NTP на своих компьютерах. Очевидно, что множество
клиентов по всему миру сильно загружают серверы NTP, обращаясь к ним. В
условиях домашней сети мы можем помочь снизить нагрузку общедоступных серверов,
предоставляя в свою очередь время нашим компьютерам. А в качестве бонуса
обновление в локальной сети будет происходить намного быстрее! Все, что нам
нужно, &mdash; запустить NTP-сервер на маршрутизаторе, который будет
синхронизироваться с общедоступными серверами и предоставлять время другим
компьютерам в локальной сети. Чтобы начать, просто наберите <c>emerge ntp</c> на
маршрутизаторе.
</p>

<pre caption="Настройка и запуск сервера NTP">
# <i>nano /etc/conf.d/ntp-client</i>
<comment>Измените, если хотите, но настройки по умолчанию вполне подойдут</comment>
# <i>rc-update add ntp-client default</i>

# <i>nano /etc/ntp.conf</i>
<comment>Добавьте следующие строки:</comment>
restrict default ignore
restrict 192.168.0.0 mask 255.255.255.0 notrust nomodify notrap
<comment>Это разрешит использовать ваш NTP-сервер только NTP-клиентам с адресом
из диапазона 192.168.0.xxx</comment>
# <i>nano /etc/conf.d/ntpd</i>
<comment>Измените, если хотите, но настройки по умолчанию вполне подойдут</comment>
# <i>rc-update add ntpd default</i>

# <i>/etc/init.d/ntp-client start</i>
# <i>/etc/init.d/ntpd start</i>
</pre>

<note>
Удостоверьтесь, что разрешили входящие и исходящие соединения на порт ntp
(123/udp) при настройке сервера. Клиентам требуется только исходящий доступ на
порт 123 через udp.
</note>

<p>
Теперь на клиентах также наберите <c>emerge ntp</c>. А дальше просто запустите
ntp-клиент, потому что настройка элементарна.
</p>

<pre caption="Настройка и запуск клиента NTP">
# <i>nano /etc/conf.d/ntp-client</i>
<comment>Измените "pool.ntp.org" в переменной NTPCLIENT_OPTS на "192.168.0.1"</comment>
# <i>rc-update add ntp-client default</i>
# <i>/etc/init.d/ntp-client start</i>
</pre>

</body>
</section>

<section>
<title>Сервер rsync</title>
<body>

<p>
Вы сможете уберечь тех, кто использует машины с ОС Gentoo в локальной сети, от
синхронизации каждой машины посредством <c>emerge sync</c> с удаленными
серверами. Запустив локальный rsync, вы снизите свой трафик и загруженность
канала rsync-серверов Gentoo. Это сделать очень просто.
</p>
<note>
Для более детальной информации о rsync, пожалуйста, посетите официальное <uri
link="/doc/ru/rsync.xml#doc_chap4">руководство по rsync</uri>
</note>

<p>
Хотя каждый компьютер с установленной ОС Gentoo нуждается в rsync, нет
необходимости устанавливать его на всех клиентах. Отредактируйте
<path>/etc/rsyncd.conf</path> файл, раскомментируйте раздел
<c>[gentoo-portage]</c>, и удостоверьтесь, что добавили параметр <c>address</c>.
Остальные настройки подходят по умолчанию.
</p>

<pre caption="Настройка сервера rsync">
pid file = /var/run/rsyncd.pid
use chroot = yes
read only = yes
address = 192.168.0.1

[gentoo-portage]
	path = /mnt/space/portage
	comment = Gentoo Linux Portage tree
	exclude = /distfiles /packages
</pre>

<p>
Теперь вам необходимо стартовать сервис (и снова, настройки по умолчанию
подойдут).
</p>

<pre caption="Запуск сервера rsync">
# <i>/etc/init.d/rsyncd start</i>
# <i>rc-update add rsyncd default</i>
</pre>

<p>
Все, что остается вам, &mdash; сообщить вашим клиентам синхронизироваться с
маршрутизатором.
</p>

<pre caption="Настройка SYNC в файле make.conf на клиентской машине">
SYNC="rsync://192.168.0.1/gentoo-portage"
</pre>

</body>
</section>

<section>
<title>Почтовый сервер</title>
<body>

<p>
Когда-нибудь будет неплохо запустить на маршрутизаторе собственный сервер SMTP
(Simple Mail Transfer Protocol &mdash; простой протокол передачи почты). У вас
могут быть есть свои причины сделать это, но я запускаю его для того, чтобы
пользователи видели, как их почта быстро уходит, а вся работа по
получении/маршрутизации перекладывалась на почтовый сервер. К тому же некоторые
провайдеры не разрешают трансляцию почты для учетных записей, не являющихся
частью их собственных сетей (например Verizon). Также, вы можете просто
регулировать доставку почты, и большие вложения не будут постоянно забивать ваш
канал на полчаса.
</p>

<pre caption="Настройка и запуск SMTP">
# <i>emerge qmail</i>
<comment>удостоверьтесь, что вывод `hostname` верный</comment>
# <i>ebuild /var/db/pkg/*-*/qmail-1.03-r*/*.ebuild config</i>
# <i>iptables -I INPUT -p tcp --dport smtp -i ! ${LAN} -j REJECT</i>
# <i>ln -s /var/qmail/supervise/qmail-send /service/qmail-send</i>
# <i>ln -s /var/qmail/supervise/qmail-smtpd /service/qmail-smtpd</i>
# <i>cd /etc</i>
# <i>nano tcp.smtp</i>
<comment>Добавьте строку, подобную этой, в раздел разрешений:</comment>
192.168.0.:allow,RELAYCLIENT=""
# <i>tcprules tcp.smtp.cdb rules.tmp &lt; tcp.smtp</i>
# <i>rc-update add svscan default</i>
# <i>/etc/init.d/svscan start</i>
</pre>

<p>
Я прожженный фанат qmail, но вы вольны использовать другой MTA :). Как только вы
настроете электронную почту для узлов вашей сети, сообщите им, что теперь их
почтовый сервер имеет адрес 192.168.0.1 и теперь всё будет по первому разряду.
Вам можете посетить <uri link="http://qmail.org/">домашнюю страницу
qmail</uri> для более подробной документации.
</p>

</body>
</section>

<!--
<section>
<title>Проверка электронный почты на вирусы</title>
<body>
<p>
Если вы хотите производить проверку электронной почты ваших пользователей, но
не хотите устанавливать сканер вирусов на каждой машине, то <c>pop3vscan</c>,
прозрачный сканер Post Office Protocol (POP), &mdash; для вас.
</p>

<pre caption="Setting up pop3vscan">
TODO
</pre>

</body>
</section>
-->

<section>
<title>Полный DHCP-сервер</title>
<body>
<p>
Ранее мы использовали dnsmasq для предоставления сервиса DHCP всем нашим
клиентам. Для большинства людей, работающих в небольших локальных сетях, этого
более чем достаточно. Но вам может понадобиться что-то с более широкими
возможностями. Для этого мы перейдем к полноценному DHCP-серверу,
разработанному людьми из <uri link="http://www.isc.org/products/DHCP">ISC</uri>.
</p>

<pre caption="Настройка dhcpd">
# <i>emerge dhcp</i>
# <i>nano /etc/dhcp/dhcpd.conf</i>
<comment>(Вот пример файла настроек)</comment>
authoritative;
ddns-update-style interim;
subnet 192.168.0.0 netmask 255.255.255.0 {
    range 192.168.0.100 192.168.0.250;
    default-lease-time 259200;
    max-lease-time 518400;
    option subnet-mask 255.255.255.0;
    option broadcast-address 192.168.0.255;
    option routers 192.168.0.1;
    option domain-name-servers 192.168.0.1;
}
# <i>nano /etc/conf.d/dhcp</i>
<comment>(Установите IFACE="eth0")</comment>
# <i>rc-update add dhcp default</i>
# <i>/etc/init.d/dhcp start</i>
</pre>
<p>
Это минимальные настройки, необходимые для замены DHCP-возможностей от dnsmasq,
использованного нами ранее. Кстати, не забыли ли вы отключить возможности DHCP
в dnsmasq? Если да, то вы должны сделать это сейчас (просто закомментируйте
настройки <c>dhcp-range</c> в <path>/etc/dnsmasq.conf</path> и перезапустите
сервис).
</p>

</body>
</section>
</chapter>

<chapter>
<title>Проблемы</title>

<section>
<title>Полезные утилиты</title>
<body>

<p>
Если у вас проблемы в подключении компьютеров к сети, вы можете попробовать
устранить их с помощью следующих утилит (всех их можно найти в портежах в
категории <c>net-analyzer</c>):
</p>

<table>
<tr>
  <th>Утилиты</th>
  <th>Описание</th>
</tr>
<tr>
  <ti>ethereal</ti>
  <ti>Графическая утилита, позволяющая просмотреть весь низкоуровневый сетевой
трафик, распределенный по фильтрам</ti>
</tr>
<tr>
  <ti>tcpdump</ti>
  <ti>Консольная утилита для дампа всего низкоуровневого сетевого трафика,
распределенного по фильтрам</ti>
</tr>
<tr>
  <ti>iptraf</ti>
  <ti>Основанный на ncurses монитор IP-трафика LAN</ti>
</tr>
<tr>
  <ti>ettercap</ti>
  <ti>Основанный на ncurses сетевой монитор</ti>
</tr>
</table>

</body>
</section>

<section>
<title>Ошибки DHCP при старте</title>
<body>

<p>
При первом старте init.d-сценария dhcp вы можете получить ошибку загрузки без
какой-либо полезной информации.
</p>

<pre caption="Пример ошибки DHCP">
# <i>/etc/init.d/dhcp start</i>
 * Setting ownership on dhcp.leases ...          [ ok ]
 * Starting dhcpd ...                            [ !! ]
</pre>

<p>
Все дело в том, что надо знать, куда dhcpd направляет свой вывод. Просто
просмотрите /var/log и почитайте log-файлы. В зависимости от того, какой
пакет вы используете в качестве syslog, попробуйте запустить <c>grep -Rl dhcpd
/var/log</c> для того, чтобы сузить поиск. Возможно, вы случайно совершили
ошибку в конфигурационном файле. Также вы можете попробовать запустить <c>dhcpd
-d -f</c> (для быстрой отладки/запуска) и исправить на основе вывода ошибки.
</p>

</body>
</section>

<section>
<title>Некорректное значение MTU</title>
<body>

<p>
Если вы сталкиваетесь со странными ошибками (например, не загружаются
определенные web-страницы), возможно, у вас проблема Path MTU Discovery.
Быстрый способ проверить это &mdash; запустить эту команду iptables:
</p>

<pre caption="Определение проблем с MTU">
# <i>iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu</i>
</pre>

<p>
Это повлияет на все новые соединения, поэтому для теста просто обновите
страницу, с которой у вас проблемы. Если это поможет, то стандартным значением
MTU для 100 Мбит/с сетей является <c>1500</c>, когда как для PPPoE-соединений
&mdash; <c>1492</c>. Для более детальной информации прочтите главу 15 из
документа <uri link="http://lartc.org/howto/">Linux Advanced Routing &amp;
Traffic Control HOWTO</uri>.
</p>

</body>
</section>

</chapter>

<chapter>
<title>Послесловие</title>
<section>
<body>

<p>
У меня нет послесловия, если не считать того, что если вы испытываете проблемы
с этим руководством, пожалуйста, свяжитесь <mail link="vapier@gentoo.org">со
мной</mail> или отправьте файл с ошибкой через <uri
link="http://bugs.gentoo.org/">систему управления изменениями
Gentoo</uri>. Если у вас есть интересная информация и вы хотите расширить данное
руководство, в любом случае, направляйте ее мне для добавления.
</p>

</body>
</section>
</chapter>
</guide>

<!-- *$Localization:
target-language: Russian
target-version: 1.22-r3
target-date: 2005-12-02
source-cvs-revision: 1.36
translated-by: Azamat H. Hackimov
edited-by:

notes:
-->
