<?xml version='1.0' encoding="UTF-8"?>

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/Attic/ebuild-mistakes.xml,v 1.3 2004/10/16 19:56:35 vapier Exp $ -->

<!-- REV: 1.3 -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/ru/ebuild-mistakes.xml">
<title>Частые ошибки в ebuild'ах Gentoo</title>
<author title="Author">
  <mail link="liquidx@gentoo.org">Alastair Tse</mail>
</author>
<author title="Translator">
  <mail link="svyatogor@gentoo.org">Sergey Kuleshov</mail>
</author>

<abstract>
Здесь описаны ошибки, наиболее часто допускaемые при при написании и отправке
ebuild'ов, как помошниками, так и самими разработчиками.
</abstract>

<license/>

<version>1.0</version>
<date>Февраль 10, 2004</date>

<chapter>
<title>Ошибки, допускаемые при написании ebuild'ов</title>
<section>
<title>Введение</title>
<body>

<p>
Вот список ошибок, которые я встречаю чаще всего в ebuild'aх, присылаемых
пользователями. Мне бы очене не хотелось бы видеть их в Вашем ebuild'е. Перед
его отправкой, пожалусйта прочитайте <uri link="/doc/en/policy.xml">Gentoo
Development Policy</uri> и <uri link="/doc/en/gentoo-howto.xml">Gentoo
Ebuild HOWTO</uri>. Кроме того, прочитайте несколько (т.е. не один и не два)
ebuild'a в дереве, чтобы почувствовать стиль в котором они написаны.
</p>

<p>
Будет также полезно посмотреть несколько ebuild'ов использующех eclass'ы и
понять принципы их использования. В этом вам поможет <uri
link="/doc/en/eclass-howto.xml">Eclass HOWTO</uri>. Наконец, внимательно изучите
<uri link="/doc/en/ebuild-submit.xml">Contributing Ebuilds Guide</uri> прежде
чем отправлять свой ebuild.
</p>

</body>
</section>
<section>
<title>Неправильны/Битый/Отсутствующий заголовок</title>
<body>

<p>
Когда вы отправляете ebuild, заголовок должен быть <e>точно</e> такой как в  
<path>/usr/portage/skel.ebuild</path>. Самое главное - не меняйте его и ставьте
строку  <c>&#36;Header: &#36;</c> в исходном виде.
</p>

<p>
Первые три строки <e>должны</e> выглядеть так:
</p>

<pre caption="Правильный заголовок">
# Copyright 1999-2004 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# &#36;Header: &#36;
</pre>

<p>
Если вы отправляете пропатченный или обновленный ebuild, вы не должны менять
стркоу <c>&#36;Header: &#36;</c>, но она обязательно должна присутствовать.
Когда мы добавим ebuild в CVS, он автоматически изменит заголовок, добавив
правильный номер версии и дату. Так что вам не нужно менять это самим.
</p>

</body>
</section>
<section>
<title>Пропущенный IUSE</title>
<body>

<p>
Если что и пропускают - так это переменную IUSE. Согласно 
<uri link="/doc/en/gentoo-howto.xml">Gentoo HOWTO</uri>) вы должны прописать
IUSE, даже если вы не используете USE флагов. Если вы действительно не
поддерживаете никаких USE фалгов, тогда добавьте такую строчку:
</p>

<pre caption="Пустая переменная IUSE">
IUSE=""
</pre>

</body>
</section>
<section>
<title>Переопределенные P, PV, PN, PF</title>
<body>

<p>
Вы никогда не должны переопределять эти переменные! Всегда используйте 
MY_P, MY_PN, MY_PV, P0 и т.д. Посмотрите другие ebuild'ы в дереве портежей,
чтобы увидеть, как это делается. Большинство из них использует "Pаrameter
Expansion" из bash. Прочитайте man страницы по bash, чтобы понять, как это
работает.
</p>

<p>
Кстати, если вы найдете пакет, который переопределяет эти переменные, не
копируйте его. Отправьте нам отчет об ошибка, касательно этого пакета.
</p>

</body>
</section>
<section>
<title>Включение номеров версий в SRC_URI и S</title>
<body>

<p>
Не надо включать номера версий в SRC_URI и S. Постарайтесь использовать ${PV}
или ${P}. Это сильно упрощает поддержку ebuild'ов. Если номера версий не
соответствуют именам тарболов - используйте MY_P. Например dev-python/pyopenal
грузит архив с названием PyOpenAL, и определение переменной выглядит следующим
образом:
</p>

<pre caption="Пример переопределения версии">
MY_P=${P/pyopenal/PyOpenAL}
SRC_URI="http://oomadness.tuxfamily.org/downloads/${MY_P}.tar.gz"
S=${WORKDIR}/${MY_P}
</pre>

</body>
</section>
<section>
<title>Синтаксические ошибки в DEPEND</title>
<body>

<p>
Много чего можно намудрить при написании полей DEPEND и RDEPEND. Пострайтесь
имет в виду эти основные пунткы при описании зависимостей:
</p>

<ul>
  <li>
    <e>Всегда указывайте категорию.</e><br />
    Например, пишите <c>&gt;=x11-libs/gtk+-2</c>, а не <c>&gt;=gtk+-2</c>.
  </li>
  <li>
    <e>Не используйте звездочку (*) для &gt;= зависимостей.</e><br />
    Пишите <c>&gt;=x11-libs/gtk+-2</c>, а не <c>&gt;=x11-libs/gtk+-2*</c>.
  </li>
  <li><e>Отдельно для GTK. Всегда пишите =x11-libs/gtk+-1.2* для GTK+1
  приложений.</e></li>
  <li>
    <e>Никогда не включайте зависимости от мета-пакетов.</e><br />
	Так что зависимость должна быть не от gnome-base/gnome, а от конкретных
	библиотек, например libgnome.
  </li>
  <li>
    <e>Одна зависимость в строке.</e><br />
	Не пишите более одной зависимости в строке, иначе их будет тяжело читать а
	занчит и отслеживать.
  </li>
</ul>

</body>
</section>
<section>
<title>Неполный DEPEND</title>
<body>

<p>
Это еще одна частая ошибка - автор отправляет ebuild, который "просто работает",
не проверяя зависимости. Вот несколько советов, которые помогут создать
правильный список зависимостей.
</p>

<ul>
  <li>
    <e>Посмотрите в configure.in или configure.ac</e><br />
	Ищите проверки пакетов, такие как pkg-config или функции AM_*.
  </li>
  <li>
    <e>Проверьте .spec файлы</e><br />
	Неплохо будет, если вы проверите, какие зависимости указаны в .spec файле.
	Однако, не надо считать этот список исчерпывающим.
  </li>
  <li>
    <e>Ознакомьтесь с сайтом программы/библиотеки</e><br />
	На веб сайте могут быть указаны необходимые и желательные зависимости.
  </li>
  <li>
    <e>Прочитайте README и INSTALL для пакета</e><br />
	В этих файлах часто можно найти полезную информацию о сборке и установке
	пакета.
  </li>
  <li>
    <e>Не забудьте не-бинарные зависимости, такие как pkg-config, программы
	генерации документации и т.д.</e><br />
    Обычно, в процессе сборки нужны утилиты типа intltool,
    libtool, pkg-config, doxygen, scrollkeeper, gtk-doc и т.д. Они должны быть
	четко указаны.
  </li>
</ul>

</body>
</section>
<section>
<title>Неверное поле LICENSE</title>
<body>

<p>
Другой частой ошибкой является указание неверной лицензии. Например писать
<c>GPL</c> - неправильно. Вы должны указать <c>GPL-1</c> или <c>GPL-2</c>. Тоже
самое касается и <c>LGPL</c>. Лицензия, указанная в поле <c>LICENCSE</c> должна
существовать в  <path>/usr/portage/licenses</path>. Совет: проверьте <path>COPYING</path> 
в архиве сорсов. Если в пакете не указано явно использует ли он <c>GPL-1</c> или <c>GPL-2</c>, 
скорее все это <c>GPL-2</c>.
</p>

<p>
Если у пакета уникальная лицензия, которой нет в <path>/usr/portage/licenses/</path>, 
то вы должны включить ее отдельным файлом.
</p>

</body>
</section>
<section>
<title>Не тестированные ARCH в KEYWORDS</title>
<body>
<p>
Пожалуйста, не включайте архитектур в KEYWORDS, если ebuild не был на них
протестирован. Кроме того, все новые ebuild'ы должны идти как ~x86 (или для
какой архитектуры они написаны). Если ebuild сделан для новой версии, то все
стабильные архитектуры в KEYWORDS должны быть помечены как <c>~</c>.
</p>

</body>
</section>
<section>
<title>Пропущенный SLOT</title>
<body>

<p>
Переменная SLOT должна быть в ebuild'e. Если вы не собираетесь ее использовать,
не удаляйте ее а укажите:
</p>

<pre caption="Значение SLOT по умолчанию">
SLOT="0"
</pre>

</body>
</section>
<section>
<title>Неправильные DESCRIPTION и HOMEPAGE</title>
<body>

<p>
Пожалуйста, проверьте, что в переменной HOMEPAGE указана правильный адрес
домашней страницы, где пользователь может найти подробную информацию о пакете.
Поле DESCRIPTION не должно быть слишком длинным. В идеале вы должны описать
главное назначение пакета одним предложением.
</p>

</body>
</section>
<section>
<title>Неправильное использование пробелов и табуляции</title>
<body>

<p>
Есть более интересные занятия, чем переформатировать ebuild'ы, только потому, что
пользователь решил использовать пробелы вместо знаков табуляции. Поэтому,
<e>пожалуйста</e>, используйте табуляцию, как это и описано в правилах!
</p>

</body>
</section>
<section>
<title>Лишние пробелы</title>
<body>

<p>
Я сам это часто делаю... Не забудьте запустить repoman для своих ebuild'ов - он
скажет если вы добавили лишние пробелы в конце строк или на пустых строках.
</p>

</body>
</section>
<section>
<title>Ненужные S=${WORKDIR}/${P}</title>
<body>

<p>
Если <c>S=${WORKDIR}/${P}</c>, то это вообще не надо писать. Это
подразумевается, как само собой разумеющееся. Добавляйте такое определение,
только если оно не равно <c>${WORKDIR}/${P}</c>.
</p>

</body>
</section>
<section>
<title>Пропущенная докумeнтация</title>
<body>

<p>
Если пакет содержит документация, не забудьте установить ее коммандой
<c>dodoc</c> или в <path>/usr/share/doc/${PF}</path>. Не забудьте проверить
возможные ошибки при запуске <c>dodoc</c>/<c>doins</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Частые ошибки при отправке ебилдов</title>
<section>
<title>Введение</title>
<body>

<p>
Пожалуйста, отправляйте ебилды следуя иструкциям в <uri
link="/doc/en/ebuild-submit.xml">Contributing Ebuild HOWTO</uri> на странице <uri
link="/doc/en/index.xml">Gentoo Docs Page</uri>.
</p>

</body>
</section>
<section>
<title>Архивы с ebuild'ами</title>
<body>

<p>
Пожалуйста, не запаковывайте ebuild'ы в архивы! Добавляйте патчи отдельно в виде
вложений (attachment), чтобы мы их могли легко изучить.
</p>

</body>
</section>
<section>
<title>Ebuild'ы в тексте отчета</title>
<body>

<p>
Не вставляйте ebuild в поле комментариев bugzilla! 
</p>

</body>
</section>
<section>
<title>Отсутствует описание пакета</title>
<body>

<p>
Пожалуйста, скажите нам, что за пакет вы прислали и если у него есть домашняя
страница, укажите ее URL.
</p>

</body>
</section>
<section>
<title>Обновления пакетов без описаний изменений</title>
<body>

<p>
Если вы отправляете обновления пакет, то укажите какие вы внесли в ebuild
изменения. Например, если в пакте добавлена новая функция или опция, и вы
используете USE флаг, скажите об этом в комментариях к отчету.
</p>

<p>
Вместо того чтобы отправлять весь ebuild, можно отправить diff файл,
сгенерированный следующей командой:
</p>

<pre caption="Создание diff файла">
$ <i>diff -u some-package-0.1.0.ebuild some-package-0.2.0.ebuild &gt; ~/some-package-0.2.0.diff</i>
</pre>

</body>
</section>
<section>
<title>Отправка неизмененных ebuild'ов для обновления версии</title>
<body>

<p>
Если вы отправляете пакет для обновления версии, проверьте что существующий
ebuild действительно работает и что вы внесли в него необходимые изменения
(например добавили документацию). Если же никаких изменений вносить не пришлось,
не надо вкладывать ebuild. Достаточно сказать, что вы скопировали предыдущую
версия и пакет был правильно собран и установлен.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Комментарии и предложения</title>
<section>
<body>

<p>Отправляйте все комментари, исправления и предложения <mail 
link="liquidx@gentoo.org">Alastair Tse</mail>.
</p>

</body>
</section>
</chapter>
</guide>
