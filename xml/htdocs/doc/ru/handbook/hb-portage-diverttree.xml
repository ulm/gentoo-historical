<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-portage-diverttree.xml,v 1.12 2013/01/20 15:47:40 swift Exp $ -->

<sections>

<abstract>
Глава "Использование собственного дерева Portage" дает вам некоторые подсказки 
по тому, как использовать свое собственное дерево Portage, как синхронизировать 
только те категории, которые вам нужны, вставлять пакеты, и многое другое.
</abstract>

<version>3</version>
<date>2012-11-12</date>

<section>
<title>Использование собственного дерева Portage</title>
<subsection>
<title>Исключение пакета/категории</title>
<body>

<p>
Вы можете выборочно обновлять определенные категории/пакеты, игнорируя 
обновление других категорий/пакетов. Это достигается путем исключения таких 
категорий/пакетов программой <c>rsync</c> на этапе выполнения <c>emerge 
--sync</c>.
</p>

<p>
Вам потребуется определить имя файла, содержащего шаблоны исключаемых пакетов, 
в переменной <c>PORTAGE_RSYNC_EXTRA_OPTS</c> в своем файле <path>/etc/portage/make.conf</path>.
</p>

<pre caption="Указание файла исключаемых пакетов в /etc/portage/make.conf">
PORTAGE_RSYNC_EXTRA_OPTS="--exclude-from=/etc/portage/rsync_excludes"
</pre>

<pre caption="Исключение всех игр в файле /etc/portage/rsync_excludes">
games-*/*
</pre>

<p>
Заметьте, однако, что это может привести к проблемам с зависимостями, так как 
новые разрешенные пакеты могут зависеть от других новых, но исключенных из 
обновления пакетов.
</p>
    
</body>
</subsection>
</section>
<section>
<title>Добавление неофициального сборочного файла ebuild</title>
<subsection>
<title>Определение оверлейного каталога портежей</title>
<body>

<p>
Вы можете указать Portage использовать сборочные файлы, не входящие в 
официальное дерево Portage. Создайте новый каталог (к примеру, 
<path>/usr/local/portage</path>), в котором будут находиться файлы ebuild 
сторонних разработчиков. Используйте в точности такую же структуру каталогов, 
как и в официальном дереве портежей!
</p>

<p>
Затем определите переменную PORTDIR_OVERLAY в <path>/etc/portage/make.conf</path>, 
чтобы она указывала на ранее созданный каталог. Теперь при использовании 
Portage, эти сборочные файлы будут рассматриваться как часть системы, и не 
будут удаляться/перезаписываться при последующих запусках <c>emerge --sync</c>.
</p>

</body>
</subsection>
<subsection>
<title>Работа с несколькими оверлейными каталогами</title>
<body>

<p>
Для продвинутых пользователей, ведущих разработку в нескольких оверлейных
каталогах, тестирующих пакеты перед включением в основное дерево портежей или
просто желающих использовать неофициальные сборочные файлы ebuild из разных 
источников, в пакете <c>app-portage/layman</c> есть утилита 
<c>layman</c>, которая поможет поддерживать ваши оверлейные репозитории в 
актуальном состоянии.
</p>

<p>
Сначала установите и сконфигурируйте <c>layman</c>, как показано в 
<uri link="/proj/en/overlays/userguide.xml">Руководстве пользователя по оверлеям</uri>, 
и добавьте необходимые вам репозитории с помощью команды <c>layman -a &lt;имя-оверлея&gt;</c>.
</p>

<p>
Допустим, у вас есть два репозитория, названных <c>java</c> (для новых ebuild, 
разработанных на java), и <c>entapps</c> (для приложений, разработанных только 
для вашего предприятия). Вы можете обновить эти репозитории следующей командой:
</p>

<pre caption="Используем layman для обновления всех репозиториев">
# <i>layman -S</i>
</pre>

<p>
Для более детальной информации по работе с оверлеями, прочитайте <c>man layman</c> и 
<uri link="/proj/en/overlays/userguide.xml">Руководство пользователя по оверлеям</uri>
</p>

</body>
</subsection>
</section>
<section>
<title>Программы, поддерживаемые не через Portage</title>
<subsection>
<title>Использование Portage с пакетами самостоятельной сборки</title>
<body>

<p>
Иногда вам может потребоваться сконфигурировать, установить и поддерживать 
программное обеспечение самостоятельно, без автоматизации со стороны Portage, 
не смотря на то, что оно поддерживается Portage. Наиболее известные случаи 
&mdash; это исходные коды ядра и драйверы от nVidia. Вы можете настроить 
Portage так, чтобы системе стало известно, что определенные пакеты установлены 
вручную. Этот процесс называется <e>внедрение</e>, и поддерживается Portage 
посредством файла <path>/etc/portage/profile/package.provided</path>.
</p>

<p>
Например, если вы захотите сообщить Portage, что пакет 
<c>gentoo-sources-2.6.11.6</c> установлен вручную, нужно добавить следующую 
строку в <path>/etc/portage/profile/package.provided</path>:
</p>

<pre caption="Пример строки из файла package.provided">
sys-kernel/gentoo-sources-2.6.11.6
</pre>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-date: 2012-11-12
source-cvs-revision: 1.17
translated-by: Vasiliy Golubev [vas@nightmail.ru]
edited-by:  Alexey Chumakov [achumakov@gentoo.org]
edited-by: Romanov Vladimir [blueboar2@gmail.com]
-->
