<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-install-hppa-kernel.xml,v 1.10 2014/06/12 01:43:19 blueboar Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>6</version>
<date>2014-05-11</date>

<section>
<title>Установка исходных кодов ядра</title>
<subsection>
<title>Выбор ядра</title>
<body>

<p>
Ядро Linux &mdash; это то, вокруг чего формируются все дистрибутивы. Это слой
между пользовательскими программами и вашими аппаратными средствами.
Пользователи Gentoo могут использовать один из нескольких типов ядра. Полный
список с их описанием можно найти в <uri
link="https://wiki.gentoo.org/wiki/Kernel/Overview">Руководстве по выбору ядра Gentoo</uri>.
</p>

<p>
Для <keyval id="arch"/>-систем у нас есть <c>gentoo-sources</c>
(исходный код ядра с патчами для дополнительных возможностей).
</p>

<p>
Выберите ваш исходный код ядра, и установите его, используя
<c>emerge</c>
</p>

<pre caption="Установка исходных кодов ядра">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Если вы просмотрите содержимое каталога <path>/usr/src</path>, то увидите
символическую ссылку <path>linux</path>, которая указывает на каталог с
исходными кодами ядра. В данном случае, установленный исходный код ядра
указывает на <c>gentoo-sources-<keyval id="kernel-version"/></c>. Ваша 
версия может отличаться, имейте это в виду:
</p>

<pre caption="Просмотр каталога с исходными кодами ядра">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx 1 root root 12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
Теперь настало время настройки и компиляции ядра. Во всех архитектурах можно
использовать для этого <c>genkernel</c>, который сформирует стандартное ядро,
аналогичное используемому на установочном компакт-диске. Сначала мы рассмотрим
конфигурацию вручную, так как это наилучший способ оптимизировать вашу систему.
</p>

<p>
Если вы хотите вручную настроить ядро, то переходите к разделу <uri
link="#manual">По умолчанию: ручная настройка</uri>. Если вы хотите
использовать <c>genkernel</c>, то читайте <uri link="#genkernel">Альтернатива:
использование genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>По умолчанию: ручная настройка</title>
<subsection>
<title>Введение</title>
<body>

<p>
Ручная настройка ядра считается одним из самых сложных вопросов для
пользователей Linux. Зато после настройки нескольких ядер, вы и не вспомните,
что это было трудно ;).
</p>

<p>
Когда вы запускаете ручную настройку ядра, вы должны знать аппаратную часть
своего компьютера. Большую часть информации можно получить после установки
пакета pciutils (<c>emerge pciutils</c>), который содержит <c>lspci</c>. После
этого вы сможете использовать <c>lspci</c> внутри временной среды установки.
Можете не обращать внимания на предупреждения, касающиеся <e>pcilib</e>
(например, pcilib: cannot open /sys/bus/pci/devices [pcilib: не могу открыть
/sys/bus/pci/devices]), которые выводит на экран <c>lspci</c>. В качестве
альтернативы, вы можете запустить <c>lspci</c> <e>вне временной среды
установки</e>. Результат тот же. Вы также можете запустить <c>lsmod</c> для
просмотра модулей ядра используемых установочным компакт-диском (это послужит
хорошей подсказкой, на предмет того, какие опции надо включить).
</p>

<p>
Теперь войдите в каталог с исходными кодами ядра и введите команду <c>make
menuconfig</c>. Этой командой вы вызовете конфигурационное меню, использующее
ncurses.
</p>

<pre caption="Вызов конфигурационного меню">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Перед вами появятся несколько разделов настроек. Сначала перечислим
пункты, которые надо активировать (иначе Gentoo не будет работать или будет
работать неправильно без дополнительных настроек). Кроме того, на Gentoo-вики есть
<uri link="https://wiki.gentoo.org/wiki/Kernel/Gentoo_Kernel_Configuration_Guide">
статья по настройке ядра в Gentoo</uri>. Она также может вам помочь.
</p>

</body>
</subsection>
<subsection>
<title>Активация нужных параметров</title>
<body>

<p>
Сначала войдите в <c>File Systems</c> и выберите поддержку всех нужных вам
файловых систем. <e>Не</e> компилируйте файловую систему, которую использует
ваш корневой раздел как модуль, иначе система Gentoo не сможет смонтировать 
ваш раздел. Также выберите <c>Virtual memory</c> и <c>/proc file system</c>:
</p>

<pre caption="Выбор необходимых файловых систем">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Выберите один или несколько параметров, необходимых вашей
системе)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Если вы используете PPPoE или dial-up модем для соединений к интернету, то
вам нужно включить в ядре следующие параметры:
</p>

<pre caption="Выбор нужных драйверов PPPoE">
Device Drivers ---&gt;
  Network device support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Два параметра сжатия данных не являются необходимыми, но и вреда от них тоже не
будет. То же относится и к опции <c>PPP over Ethernet</c> которая нужна только
для <c>ppp</c>, сконфигурированного для работы с PPPoE в ядре.
</p>

<p>
Если вам надо использовать сетевые карты, то не забудьте включить в ядре их
поддержку.
</p>

<p>
Если у вас мышь или клавиатура HIL, не забудьте собрать их поддержку.
</p>

<pre caption="Включение поддержки HIL">
Input core support ---&gt;
  [*] Keyboard support
  [*] Mouse support
  [*] Event interface support
</pre>

<p>
Если у вас к HIL-порту не модключена мышь, используйте только базовую
поддержку:
</p>

<pre caption="Базовая поддержка HIL">
HIL support ---&gt;
  [*] HIL Keyboard (basic) support
</pre>

<p>
Если вы все же хотите включить <e>полную</e> поддержку HIL, выберите следующие
параметры:
</p>

<pre caption="Полная поддержка HIL">
HIL support ---&gt;
  [*] HP System Device Controller i8042 Support
  [*] HIL MLC Support
  [*] HIL Keyboard (full) support
  [*] HIL Mouse &amp; Pointer support
</pre>

<p>
Также включите поддержку драйверов монитора:
</p>

<pre caption="Поддержка драйвера монитора">
Graphics support ---&gt;
  [*] Support for frame buffer devices
      [*] HP STI frame buffer device support
  Console display driver support ---&gt;
      [*] STI text console
</pre>

<p>
Далее, выберите <e>Maintain a devtmpfs file system to mount at /dev</e>,
чтобы критические файлы устройств уже существовали в самом начале
процесса загрузки.
</p>

<pre caption="Включаем поддержку devtmpfs">
Device Drivers ---&gt;
  Generic Driver Options ---&gt;
    [*] Maintain a devtmpfs filesystem to mount at /dev
    [ ] Automount devtmpfs at /dev, after the kernel mounted the rootfs
</pre>

<p>
Когда вы закончите настройку ядра, можете переходить к разделу <uri
link="#compiling">Компиляция и установка</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Компиляция и установка</title>
<body>

<impo>
Если вы хотите скомпилировать 64-битное ядро, сначала вам нужно установить
<c>kgcc64</c>. Однако запуск 64-битного ядра не рекомендуется. Вы должны
запускать 64-битное ядро только если у вас более 64Гб ОЗУ, либо если вашему
серверу это необходимо, например, на A500.
</impo>

<p>
Теперь, когда ваше ядро настроено, настало время его скомпилировать и 
установить. Выйдите из конфигурационного меню и запустите процесс компиляции:
</p>

<pre caption="Компиляция ядра">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Когда ядро будет скомпилировано, скопируйте образ ядра в каталог
<path>/boot</path>. Используйте любое имя, кажущееся вам наиболее подходящим 
для ядра, но не забудьте его, так как оно нам потребуется позже при настройке 
загрузчика. Не забудьте заменить <c><keyval id="kernel-name"/></c> на
имя и версию своего ядра.
</p>

<pre caption="Установка ядра">
# <i>cp vmlinux /boot/<keyval id="kernel-name"/></i>
</pre>

<p>
Теперь переходите к разделу <uri link="#kernel_modules">Модули ядра</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Альтернатива: использование genkernel</title>
<body>

<p>
Если вы читаете этот раздел, то вы хотите использовать наш сценарий
<c>genkernel</c> для настройки своего ядра.
</p>

<p>
Теперь, когда исходные коды ядра установлены, настало время скомпилировать ядро,
используя сценарий <c>genkernel</c> для автомотической сборки ядра.
<c>genkernel</c> создаст ядро почти идентичное тому, что используется на
установочном компакт-диске. Т.е. при использовании <c>genkernel</c> для сборки
ядра, ваша система будет искать новые устройства при каждой загрузке, подобно
установочному компакт-диску. Поскольку genkernel не требует ручной настройки
ядра, это идеальное решение для пользователей которые чувствуют себя неуютно от
одной мысли, что придется компилировать ядро.
</p>

<p>
Рассмотрим как использовать genkernel. Сначала выполним emerge genkernel:
</p>

<pre caption="Установка genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Теперь скомпилируйте исходные коды ядра, запустив <c>genkernel all</c>. Знайте,
так как <c>genkernel</c> компилирует ядро, поддерживающее всевозможное
оборудование, это займет много времени до окончания!
</p>

<p>
Помните, что если загрузочный раздел не использует ext2 или ext3 в качестве ФС,
то вам понадобится вручную сконфигурировать ядро с помощью <c>genkernel
--menuconfig all</c> и включить поддержку вашей файловой системы <e>в</e> ядре
(то есть <e>не</e> в качестве модуля).
</p>

<pre caption="Запуск genkernel">
# <i>genkernel all</i>
</pre>

<p>
Когда <c>genkernel</c> завершит свою работу, будет создано ядро, полный набор
модулей и <e>начальный RAM-диск</e> (initramfs). Мы будем использовать ядро и
initrd в процессе настройки загрузчика системы, далее в этом руководстве.
Запишите имена ядра и начального корневого диска, так как они нам понадобятся
при редактировании конфигурационного файла загрузчика. initrd будет запущен
сразу после загрузки для автоматического определения устройств (точно так же как
и в установочном компакт-диске), прежде чем ваша система перейдет к настоящей
загрузке.
</p>

<pre caption="Проверяем название созданного ядра и initrd">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Модули ядра</title>
<subsection>
<include href="hb-install-kernelmodules.xml"/>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-date: 2014-05-11
source-cvs-revision: 1.56
translated-by: Vasiliy Golubev <vas@nightmail.ru>
translated-by: Azamat H. Hackimov <azazello1984@mail.ru>
edited-by: Vladimir Romanov <blueboar2@gmail.com>
-->
