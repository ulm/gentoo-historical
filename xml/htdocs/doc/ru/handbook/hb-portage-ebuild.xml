<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-portage-ebuild.xml,v 1.3 2006/03/20 16:02:20 achumakov Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.3</version>
<date>2004-10-24</date>

<section>
<title>Emerge и Ebuild</title>
<body>

<p>
Команда <c>ebuild</c> - это низкоуровневый интерфейс к системе Portage. С
ее помощью вы можете выполнять конкретные операции на нужными ebuild'ами.
Например, вы можете сами выполнить отдельные этапы установки.
</p>

<p>
Программа <c>ebuild</c> предназначена в основном для разработчиков, поэтому
более подробную информациювы можете найти в <uri
link="/proj/en/devrel/handbook/handbook.xml">Developers Handbook</uri>.
Однако, мы расскажем какие экземпляры ebuild вызываются системой Portage
на разных этапах установки и как выполнить пост-конфигурационные шаги, 
необходимы для некоторых пакетов.
</p>

</body>
</section>
<section>
<title>Ручная установка программного обеспечения</title>
<subsection>
<title>Загрузка исходников и проверка контрольных сумм</title>
<body>

<p>
Каждый раз, когда вы вызываете <c>ebuild</c> для какого-то ebuild файла,
проверяется совапдение контрольной суммы всех задействованных файлов с
указаной в файлах <path>Manifest</path> или
<path>files/digest-&lt;имя&gt;-&lt;версия&gt;</path>. Проверка выполняется
после загрузки исходников.
</p>

<p>
Чтобы загрузить исходники с помощью <c>ebuild</c>, запустите:
</p>

<pre caption="Загрузка исходнико">
# <i>ebuild путь/к/ebuild fetch</i>
</pre>

<p>
Если md5 сумма ebuild'а не совпадает с той что указана в <path>Manifest</path>
файле или же один из загруженных файлов не совпадает с описанием в
<path>files/digest&lt;пакет&gt;</path> файле, вы получите сообщение об ошибка
похожее на такое:
</p>

<pre caption="Ошибка контрольной суммы ebuild'а">
!!! File is corrupt or incomplete. (Digests do not match)
>>> our recorded digest: db20421ce35e8e54346e3ef19e60e4ee
>>>  your file's digest: f10392b7c0b2bbc463ad09642606a7d6
</pre>

<p>
На следующей строке будет указан проблемный файл.
</p>

<p>
Если вы абсолютно уверены, что загруженные вами исходники и сам ebuild именно
те, что вам нужны, можете повторно сгенерировать  <path>Manifest</path> и
<path>digest-&lt;пакетe&gt;</path> файлы, используя фукцию <c>ebuild</c>'а digest:
</p>

<pre caption="Генерируем новый Manifest и digest">
# <i>ebuild path/to/ebuild digest</i>
</pre>

</body>
</subsection>
<subsection>
<title>Распаковка исходников</title>
<body>

<p>
Чтобы рапаковать исходники в <path>/var/tmp/portage</path> (или любую другую
директорию указанную в <path>/etc/make.conf</path>), запустите функцию
<c>ebuild</c>'а unpack:
</p>

<pre caption="Распаковываем исходники">
# <i>ebuild path/to/ebuild unpack</i>
</pre>

<p>
Эта комманда выполнит функцию src_unpack() из ebuild'а (если она не определена
то по умолчанию будут просто распакованы архивы). Кроме того, на этом этапе
будут наложены все необходимые патчи.
</p>

</body>
</subsection>
<subsection>
<title>Компиляция исходников</title>
<body>

<p>
Следующим этапом в процессе установки является компиляция исходников. Для этого
выполняется функция src_compile() вашего ebuild'а. Если нужно сначала будет
выполнена конфигурация.
</p>

<pre caption="Компилируем исходники">
# <i>ebuild path/to/ebuild compile</i>
</pre>

<p>
Если вы хотите изменить инструкции компиляции, отредактируйте фукнцию
src_compile(). Однако, вы можете обмануть Portage, заставив его думать, что этот
этап уже завершен. Запустите небходимы комманды сами и создайте пустой файл
<path>.compile</path> в рабочей директоррии.
</p>

<pre caption="Говорим Portage что этап компиляции был завершен">
# <i>touch .compiled</i>
</pre>

</body>
</subsection>
<subsection>
<title>Установка файлов во временную папку</title>
<body>

<p>
Следующим шагом будет установка всех необходимых файлов во временную папку.
Потом она будет объединена с основной системой. На этом этапе выполняется
функция src_install() ebuild'а.
</p>

<pre caption="Установка файлов">
# <i>ebuild path/to/ebuild install</i>
</pre>

</body>
</subsection>
<subsection>
<title>Перенос файлов в рабочую файловую систему</title>
<body>

<p>
Наконец, нам нужно перенести все файлы в рабочую систему и зарегистрировать их в
системе Portage. <c>ebuild</c> называет этот этап "qmerge". Здесь выполняются
следующие действия:
</p>

<ul>
  <li>Выполняется функция pkg_preinst(), если она определена</li>
  <li>Файлы копируются в рабочую файловую систему</li>
  <li>Файлы регистрируются в системе Portage</li>
  <li>Выполняется функция pkg_postinst(), если она определена</li>
</ul>

<p>
Запустите у <c>ebuild</c> функцию qmerge чтобы выполнить этот этап.
</p>

<pre caption="Переносим файлы в рабочую систему">
# <i>ebuild path/to/ebuild qmerge</i>
</pre>

</body>
</subsection>
<subsection>
<title>Очистка временной директории</title>
<body>

<p>
Наконец вы можете очистить временную директорию используя clean команду 
<c>ebuild</c>'a:
</p>

<pre caption="Очистка временной директории">
# <i>ebuild path/to/ebuild clean</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Дополнительные функции</title>
<subsection>
<title>Запуск всех комманд установки</title>
<body>

<p>
Используя функцию merge, вы можете загрузить, распаковать, собрать, установить
и выполнить qmerge одной командой:
</p>

<pre caption="Установка ПО">
# <i>ebuild path/to/ebuild merge</i>
</pre>

</body>
</subsection>
<subsection>
<title>Выполнение этапа конфигурации</title>
<body>

<p>
Некоторые пакеты содержат инструкции для конфигурации пакета после его установки.
Этот этап может потребовать взаимодействия с пользователем и, следовательно, не
может быть выполнен автоматически. Для запуска конфигурации, описанной в 
необязательной функции config(), используйте опцию <c>ebuild</c>'а config:
</p>

<pre caption="Настройка пакета">
# <i>ebuild path/to/ebuild config</i>
</pre>

</body>
</subsection>
<subsection>
<title>Сборка (RPM) пакета</title>
<body>

<p>
Вы можете попросить Portage создать бинарный пакет или даже RPM для вашего 
ebuild'а, воспользовавшись опциями package и rpm соответственно. Эти две опции
несколько различаются:
</p>

<ul>
  <li>
  Опция package во многом напоминает установку программы и включает этапы
  загрузки, распаковки, сборки и установки и лишь потом создает пакет
  </li>
  <li>
  Опция rpm создает RPM пакет из файлов созданных <e>после</e> окончания этапа
  установки
  </li>
</ul>

<pre caption="Создание пакетов">
<comment>(Создаем бинарный пакет совместимый с Portage)</comment>
# <i>ebuild path/to/ebuild package</i>

<comment>(Создаем RPM пакет)</comment>
# <i>ebuild path/to/ebuild rpm</i>
</pre>

<p>
Созданный RPM не будет содержать информацию о зависимостях из ebuild'а.
</p>

</body>
</subsection>
</section>
<section>
<title>Более подробная информация</title>
<subsection>
<body>

<p>
Если вы хотите получить больше информации о системе Portage, программе ebuild и
ebuild скриптах, смотрите следующие man страницы:
</p>

<pre caption="Man pages">
$ <i>man portage</i>    <comment>(Система Portage)</comment>
$ <i>man emerge</i>     <comment>(Комманда emerge)</comment>
$ <i>man ebuild</i>     <comment>(Комманда ebuild)</comment>
$ <i>man 5 ebuild</i>   <comment>(Синтакс ebuild файлов)</comment>
</pre>

<p>
Кроме того, вы можете найти больше информации касающейся разработки в <uri
link="/proj/en/devrel/handbook/handbook.xml">Developers Handbook</uri>.
</p>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 1.3-r2
target-date: 2005-11-11
source-cvs-revision: 1.8
translated-by: Sergey Kuleshov <svyatogor@gentoo.org>
edited-by: none
-->
