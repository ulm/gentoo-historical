<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-install-sparc-kernel.xml,v 1.4 2006/01/23 21:37:40 achumakov Exp $ -->

<sections>

<version>2.7</version>
<date>2006-01-06</date>

<section>
<title>Часовой пояс</title>
<body>

<p>
Сначала вы должны выбрать часовой пояс (time zone), чтобы система знала, где вы 
находитесь. Найдите нужный пояс в <path>/usr/share/zoneinfo</path>, затем 
скопируйте его в <path>/etc/localtime</path>. Постарайтесь, пожалуйста, 
избегать использования часовых поясов 
<path>/usr/share/zoneinfo/Etc/GMT*</path>, т. к. их названия не соответствуют
ожидаемым поясам. Например, <path>GMT-8</path> фактически является поясом GMT+8.
</p>

<pre caption="Установка часового пояса">
# <i>ls /usr/share/zoneinfo</i>
<comment>(допустим, вы хотите использовать GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Установка исходников</title>
<subsection>
<title>Выбор Ядра</title>
<body>

<p>
Основа, вокруг которой собраны все поставки ОС - ядро Linux'а. Это уровень 
между пользовательскими программами и оборудованием Вашей системы. ОС Gentoo 
предлагает своим пользователям несколько возможных исходников ядра. Полный 
список с описанием находится по адресу <uri 
link="/doc/en/gentoo-kernel.xml">Путеводитель По Ядру ОС Gentoo</uri>.
</p>

<p>
Для sparc-ориентированных систем у нас имеется <c>sparc-sources</c> (исходный 
код ядра оптимизированного для пользователей SPARC) и <c>vanilla-sources</c> 
(исходный код ядра по умолчанию разработанный программистами linux-kernel).
</p>

<p>
Выберите ядро и установите его используя команду <c>emerge</c>.
</p>

<p>
В нашем примере мы воспользуемся установкой ядра <c>sparc-sources</c>. Вы 
можете изменить его в соответствии с выбранным вами исходником, здесь 
приводится просто пример. <c>USE="-doc"</c> требуется, чтобы на этом этапе 
избежать установки xorg-x11 или других зависимых пакетов. <c>USE="symlink"</c> 
для новой установки не требуется, но обеспечивает правильное создание 
символьной ссылки <path>/usr/src/linux</path>.
</p>

<pre caption="Установка исходных кодов ядра">
# <i>USE="-doc symlink" emerge sparc-sources</i>
</pre>

<p>
Посмотрев в каталог <path>/usr/src</path>, вы увидите символическую ссылку, 
названную <path>linux</path>, указывающую на исходный код ядра. В данном 
случае, установленный исходный код ядра указывает на 
<c>gentoo-sources-2.6.12-r10</c>. Ваша версия может отличаться, имейте это в 
виду:
</p>

<pre caption="Символическая ссылка на исходный код ядра">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.31-sparc
</pre>

<p>
А сейчас давайте настроим и скомпилируем исходный код ядра.
</p>

</body>
</subsection>
</section>
<section>
<title>Настройка Вручную</title>
<subsection>
<title>Введение</title>
<body>

<p>
Настройка ядра вручную часто видится как самая сложная процедура которую 
пользователь Linux'а должен выполнить. Нет ничего более правильного -- после 
настройки нескольких ядер вы даже не вспомните о том что это когда-то было 
тяжело. ;)
</p>

<p>
Несмотря на это, одна вещь <e>является</e> истинной: вы должны знать свою 
систему для настройки ядра вручную. Большую часть информации можно получить 
установив утилиту pciutils (<c>emerge pciutils</c>), которая содержит 
<c>lspci</c>. После этого можно будет воспользоваться командой <c>lspci</c> из 
среды установки. Предупреждения команды <e>pcilib</e> которые бросает 
<c>lspci</c> можно спокойно проигнорировать. Как альтернативу можно запустить 
<c>lspci</c> из <e>не-установочной</e> среды. Результат будет таким же. Можно 
также запустить команду <c>lsmod</c>, чтобы посмотреть какие модули использует 
установочный компакт-диск (это может помочь определить что включить в ядро).
</p>

<p>
Теперь перейдите в каталог, где находится исходный код ядра и выполните команду 
<c>make menuconfig</c>. Эта команда запустит меню настройки.
</p>

<pre caption="Запуск menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Вам будет представлено несколько настроечных секций. Для начала, мы укажем те, 
которые необходимы (иначе ОС Gentoo не сможет функционировать или 
функционировать правильно без дополнительных ухищрений):
</p>

</body>
</subsection>
<subsection>
<title>Включение требуемых параметров</title>
<body>

<p>
Во-первых, активизируйте использование разработочного и экспериментального 
кода/драйверов. Это необходимо, иначе некоторые очень важные программы/драйвера 
будут не видимы.
</p>

<pre caption="Выбор экспериментального кода/драйверов">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Далее идите в <c>File Systems</c> и выберите поддержку используемых файловых 
систем. <e>Не</e> компилируйте их как модули, иначе система Gentoo не сможет 
смонтировать их как разделы. Также выберите <c>Virtual memory</c>, <c>/proc 
file system</c>. Если вы используете ядро 2.4, также следует выбрать <c>/dev 
file system</c> + <c>Automatically mount at boot</c>:
</p>

<pre caption="Выбор необходимых файловых систем">
<comment>(для ядра 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(для ядра 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Выберите один или больше параметров в соответствии с требованиями системы)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Если для подключения к интернету вы используете PPPoE, или пользуетесь 
телефонным модемом, вам потребуются следующие параметры ядра:
</p>

<pre caption="Выбор необходимых драйверов для PPPoE">
<comment>(для ядра 2.4.x)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(для ядра 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Две директивы сжатия не навредят, но не являются необходимыми, точно также как 
и директива <c>PPP over Ethernet</c>, которая должна использоваться только для 
варианта <c>rp-pppoe</c> когда настраивается режим ядра PPPoE.
</p>

<p>
Если необходимо, не забудьте включить в ядро поддержку сетевой Ethernet-карты.
</p>

<p>
Теперь активизируйте правильную поддержку шины:
</p>

<pre caption="Активизация SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>(Только для адаптера типа UPA, используемого во многих Ultras системах)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Только для адаптера типа SBUS, используемого во многих SPARC системах)</comment>
</pre>

<p>
Необходима также поддержка OBP:
</p>

<pre caption="Активизация поддержки OBP">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
Ещё нужно активизировать поддержку специальных SCSI:
</p>

<pre caption="Активизация поддержки SCSI-specific">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Только для встроенных SCSI адаптеров SPARC ESP)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Только для контроллеров SBUS SCSI от PTI или QLogic)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Только для встроенных SCSI адаптеров Ultra 60)</comment>
</pre>

<p>
Для поддержки сетевой карты, выберите одну из списка:
</p>

<pre caption="Активизация поддержки сети">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>(Только для SPARCS станций, устаревших Ultra систем, и варианта Sbus)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>(Только для Ultra систем; также поддерживает "qfe" quad-ethernet на PCI и Sbus)</comment>
    &lt;*&gt; DECchip Tulip (dc21x4x) PCI support <comment>(Для некоторых систем Netras, like N1)</comment>
  Ethernet (1000Mbit) ---&gt;
    &lt;*&gt; Broadcom Tigon3 support <comment>(Современные Netra, компьютеры Sun Fire)</comment>
</pre>

<p>
Если у вас имеется 4-х портовый Ethernet компьютер (10/100 или 10/100/1000) 
порядок портов отличается от используемого в Solaris. Можете использовать 
<c>sys-apps/ethtool</c> или <c>mii-tool</c> для проверки связи состояния порта.
</p>

<p>
Когда вы закончите настройку вашего ядра, продолжайте по ссылке <uri 
link="#compiling">Компиляция и установка</uri>. Тем не менее, после 
компиляции ядра, проверьте его размер:
</p>

<pre caption="Проверка размера ядра">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
Если размер несжатого ядра больше чем 2.5 MB (для Sparc32) или 3.5MB (Sparc64), 
перенастройте ваше ядро так чтобы оно не превышало этих пределов. Одним из 
путей достижения этого является компиляция большинства драйверов ядра как 
модулей. Игнорирование этого может привести к незагружаемому ядру.
</p>

<note>
Если вы используете ядро версии 2.6.3 или выше, ядро sparc64 может иметь размер 
до 7.5 MB.
</note>

<p>
Также если ваше ядро чуть-чуть больше чем необходимо, Вы можете попробовать 
уменьшить его используя для этого команду <c>strip</c>:
</p>

<pre caption="Уменьшение ядра">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Компилирование и Установка</title>
<body>

<p>
Сейчас когда ваше ядро сконфигурировано, настало время для его компиляции и 
установки. Выйдите из программы настройки и запустите процесс компиляции:
</p>

<pre caption="Компилирование ядра">
<comment>(Для ядра 2.4, sparc32)</comment>
# <i>make dep &amp;&amp; make clean vmlinux modules modules_install</i>

<comment>(Для ядра 2.4, sparc64)</comment>
# <i>make dep &amp;&amp; make clean vmlinux image modules modules_install</i>

<comment>(Для ядра 2.6, sparc32)</comment>
# <i>make &amp;&amp; make modules_install</i>

<comment>(Для ядра 2.6, sparc64)</comment>
# <i>make &amp;&amp; make image modules_install</i>
</pre>

<p>
Когда процесс компиляции ядра завершится, скопируйте полученный образ ядра в 
каталог <path>/boot</path>. Не забудьте заменить 
<path>&lt;версия-ядра&gt;</path> на имя и версию своего ядра.
</p>

<pre caption="Установка ядра">
<comment>(Для ядра 2.4, sparc32)</comment>
# <i>cp vmlinux /boot/&lt;версия-ядра&gt;</i>

<comment>(Для ядра 2.4, sparc64)</comment>
# <i>cp arch/sparc64/boot/image /boot/&lt;версия-ядра&gt;</i>

<comment>(Для ядра 2.6, sparc32)</comment>
# <i>cp arch/sparc/boot/image /boot/&lt;версия-ядра&gt;</i>

<comment>(Для ядра 2.6, sparc64)</comment>
# <i>cp arch/sparc64/boot/image /boot/&lt;версия-ядра&gt;</i>
</pre>

<p>
Теперь можете продолжать по ссылке <uri link="#kernel_modules">Установка 
Отдельных Модулей Ядра</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Установка Отдельных Модулей Ядра</title>
<subsection>
<title>Настройка Модулей</title>
<body>

<p>
Вы должны вставить список модулей, которые вы хотите загружать по умолчанию в 
файл <path>/etc/modules.autoload.d/kernel-2.4</path> (or 
<path>kernel-2.6</path>). Можно также добавить дополнительные параметры для 
этих модулей.
</p>

<p>
Чтобы увидеть все доступные модули, запустите команду <c>find</c>. Не забудьте 
заменить "&lt;kernel version&gt;" на версию ядра которое только что было 
скомпилировано:
</p>

<pre caption="Просмотр всех доступных модулей">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Например, чтобы автоматически загружать модуль <c>3c59x.o</c>, отредактируйте 
файл <path>kernel-2.4</path> или <path>kernel-2.6</path> и вставьте в него имя 
модуля.
</p>

<pre caption="Редактирование файла /etc/modules.autoload.d/kernel-2.4">
<comment>(Пример для ядра версии 2.4)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="Файл /etc/modules.autoload.d/kernel-2.4 or kernel-2.6">
3c59x
</pre>

<p>
Продолжайте установку по ссылке <uri link="?part=1&amp;chap=8">Настройка вашей 
Системы</uri>.
</p>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 2.7-r1
target-date: 2006-01-23
source-cvs-revision: 1.22
translated-by: Igor Korot <ikorot@earthlink.net>
edited-by:

notes:
needs refinement
-->