<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-install-sparc-kernel.xml,v 1.8 2013/04/14 16:51:06 swift Exp $ -->

<sections>

<version>5</version>
<date>2013-04-06</date>

<section>
<title>Установка исходников</title>
<subsection>
<title>Выбор Ядра</title>
<body>

<p>
Основа, вокруг которой собраны все поставки ОС - ядро Linux'а. Это уровень 
между пользовательскими программами и оборудованием Вашей системы. ОС Gentoo 
предлагает своим пользователям несколько возможных исходников ядра. Полный 
список с описанием находится в <uri 
link="/doc/en/gentoo-kernel.xml">путеводителе по ядру Gentoo (англ.)</uri>.
</p>

<p>
Для <keyval id="arch"/>-ориентированных систем у нас имеется <c>gentoo-sources</c> 
(исходные коды ядра, с патчами для дополнительных возможностей).
</p>

<p>
Выберите ваши исходные коды ядра, и установите их с помощью <c>emerge</c>.
</p>

<pre caption="Установка исходных кодов ядра">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Посмотрев в каталог <path>/usr/src</path>, вы увидите символическую ссылку, 
названную <path>linux</path>, указывающую на исходный код ядра. В данном 
случае, установленный исходный код ядра указывает на 
<c>linux-<keyval id="kernel-version"/></c>. Ваша версия может отличаться, имейте это в 
виду:
</p>

<pre caption="Символическая ссылка на исходный код ядра">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
А сейчас давайте настроим и скомпилируем исходный код ядра.
</p>

</body>
</subsection>
</section>
<section>
<title>Настройка Вручную</title>
<subsection>
<title>Введение</title>
<body>

<p>
Настройка ядра вручную часто видится как самая сложная процедура которую 
пользователь Linux'а должен выполнить. Нет ничего более правильного -- после 
настройки нескольких ядер вы даже не вспомните о том что это когда-то было 
тяжело. ;)
</p>

<p>
Несмотря на это, одна вещь <e>является</e> истинной: вы должны знать свою 
систему для настройки ядра вручную. Большую часть информации можно получить 
установив утилиту pciutils (<c>emerge pciutils</c>), которая содержит 
<c>lspci</c>. После этого можно будет воспользоваться командой <c>lspci</c> из 
среды установки. Предупреждения команды <e>pcilib</e> которые бросает 
<c>lspci</c> можно спокойно проигнорировать. Как альтернативу можно запустить 
<c>lspci</c> из <e>не-установочной</e> среды. Результат будет таким же. Можно 
также запустить команду <c>lsmod</c>, чтобы посмотреть какие модули использует 
установочный компакт-диск (это может помочь определить что включить в ядро).
</p>

<p>
Теперь перейдите в каталог, где находится исходный код ядра и выполните команду 
<c>make menuconfig</c>. Эта команда запустит меню настройки.
</p>

<pre caption="Запуск menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Вам будет представлено несколько настроечных секций. Для начала, мы укажем те, 
которые необходимы (иначе ОС Gentoo не сможет функционировать или 
функционировать правильно без дополнительных ухищрений):
</p>

</body>
</subsection>
<subsection>
<title>Включение требуемых параметров</title>
<body>

<p>
Сначала нам нужно настроить правильные настройки кросс-компиляции, чтобы
быть уверенным в том, что ядро Linux будет создано для корректного типа
системы. Чтобы это сделать, установите <e>Cross-compiler tool prefix</e> в
<c>sparc64-unknown-linux-gnu-</c> (включая последнее тире):
</p>

<pre caption="Определяем правильную платформу для кросс-компиляции">
General setup ---&gt;
  (<i>sparc64-unknown-linux-gnu-</i>) Cross-compiler tool prefix
</pre>

<p>
Далее, выберите <e>Maintain a devtmpfs file system to mount at /dev</e>,
чтобы критические файлы устройств уже существовали в самом начале
процесса загрузки.
</p>

<pre caption="Включаем поддержку devtmpfs">
Device Drivers ---&gt;
  Generic Driver Options ---&gt;
    [*] Maintain a devtmpfs filesystem to mount at /dev
    [ ] Automount devtmpfs at /dev, after the kernel mounted the rootfs
</pre>

<p>
Теперь войдите в <c>File Systems</c> и выберите поддержку всех нужных вам
файловых систем. <e>Не</e> компилируйте файловую систему, которую использует
ваш корневой раздел как модуль, иначе система Gentoo не сможет смонтировать 
ваш раздел. Также выберите <c>Virtual memory</c> и <c>/proc file system</c>:
</p>

<pre caption="Выбор необходимых файловых систем">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Выберите один или больше параметров в соответствии с требованиями системы)</comment>
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Second extended fs support
</pre>

<p>
Если для подключения к интернету вы используете PPPoE, или пользуетесь 
телефонным модемом, вам потребуются следующие параметры ядра:
</p>

<pre caption="Выбор необходимых драйверов для PPPoE">
Device Drivers ---&gt;
  Network device support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Две директивы сжатия не навредят, но не являются необходимыми, точно также как 
и директива <c>PPP over Ethernet</c>, которая должна использоваться только для 
варианта <c>ppp</c> когда настраивается режим ядра PPPoE.
</p>

<p>
Теперь активизируйте правильную поддержку шины:
</p>

<pre caption="Активизация SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>(Только для адаптера типа UPA, используемого во многих Ultras системах)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Только для адаптера типа SBUS, используемого во многих SPARC системах)</comment>
</pre>

<p>
Необходима также поддержка OBP:
</p>

<pre caption="Активизация поддержки OBP">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
Ещё нужно активизировать поддержку специальных SCSI:
</p>

<pre caption="Активизация поддержки SCSI-specific">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Только для встроенных SCSI адаптеров SPARC ESP)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Только для контроллеров SBUS SCSI от PTI или QLogic)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Только для встроенных SCSI адаптеров Ultra 60)</comment>
</pre>

<p>
Для поддержки сетевой карты, выберите одну из списка:
</p>

<pre caption="Активизация поддержки сети">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>(Только для SPARCS станций, устаревших Ultra систем, и варианта Sbus)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>(Только для Ultra систем; также поддерживает "qfe" quad-ethernet на PCI и Sbus)</comment>
    &lt;*&gt; DECchip Tulip (dc21x4x) PCI support <comment>(Для некоторых систем Netras, like N1)</comment>
  Ethernet (1000Mbit) ---&gt;
    &lt;*&gt; Broadcom Tigon3 support <comment>(Современные Netra, компьютеры Sun Fire)</comment>
</pre>

<p>
Если у вас имеется 4-х портовый Ethernet компьютер (10/100 или 10/100/1000) 
порядок портов отличается от используемого в Solaris. Можете использовать 
<c>sys-apps/ethtool</c> для проверки связи состояния порта.
</p>

<p>
Если вы используете контроллер диска qla2xxx, вам нужно ядро 2.6.27 или более
новое. Кроме того, вам нужно установить <c>sys-block/qla-fc-firmware</c>. Далее
запустите <c>make menuconfig</c> и зайдите в раздел Device Drivers. Вам нужно
добавить поддержку загрузки внешней прошивки.
</p>

<pre caption="Enabling external firmware">
Device Drivers ---&gt;
  Generic Driver Options ---&gt;
  () External firmware blobs to build into the kernel binary
  () Firmware blobs root directory
</pre>

<p>
Установите "External firmware blobs" в <path>ql2200_fw.bin</path> и
"Firmware blobs root directory" в <path>/lib/firmware</path>.
</p>

<p>
Когда вы закончите настройку вашего ядра, продолжайте по ссылке <uri 
link="#compiling">Компиляция и установка</uri>. Тем не менее, после 
компиляции ядра, проверьте его размер:
</p>

<pre caption="Проверка размера ядра">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
Если размер несжатого ядра больше чем 7.5 MB, перенастройте ваше ядро так 
чтобы оно не превышало этих пределов. Одним из путей достижения этого 
является компиляция большинства драйверов ядра как модулей. Игнорирование 
этого может привести к незагружаемому ядру.
</p>

<p>
Также если ваше ядро чуть-чуть больше чем необходимо, Вы можете попробовать 
уменьшить его используя для этого команду <c>strip</c>:
</p>

<pre caption="Уменьшение ядра">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Компилирование и Установка</title>
<body>

<p>
Сейчас когда ваше ядро сконфигурировано, настало время для его компиляции и 
установки. Выйдите из программы настройки и запустите процесс компиляции:
</p>

<pre caption="Компилирование ядра">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Когда процесс компиляции ядра завершится, скопируйте полученный образ ядра в 
каталог <path>/boot</path>.
</p>

<pre caption="Установка ядра">
# <i>cp arch/sparc/boot/image /boot/<keyval id="kernel-name"/></i>
</pre>
</body>
</subsection>

<subsection>
<include href="hb-install-initramfs.xml"/>
</subsection>

</section>
<section id="kernel_modules">
<title>Модули ядра</title>
<subsection>
<include href="hb-install-kernelmodules.xml"/>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-date: 2013-04-06
source-cvs-revision: 1.47
translated-by: Igor Korot <ikorot@earthlink.net>
edited-by: Romanov Vladimir <blueboar2@gmail.com>
-->
