<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-install-filesystems.xml,v 1.2 2013/01/20 15:47:40 swift Exp $ -->
<!DOCTYPE included SYSTEM "/dtd/guide.dtd">

<included>

<version>2</version>
<date>2012-10-28</date>

<section id="filesystemsdesc"> 
<title>Файловые системы</title>
<body>

<p test="contains('x86 Alpha',func:keyval('arch'))">
Ядро Linux поддерживает различные файловые системы. Мы объясним, как работают
ext2, ext3, ext4, ReiserFS, XFS и JFS, так как они являются наиболее частоиспользуемыми
файловыми системами на системах Linux
</p>

<p test="func:keyval('arch')='IA64'">
Ядро Linux поддерживает различные файловые системы. Мы объясним, как работают
vfat, ext2, ext3, ext4, ReiserFS, XFS и JFS, так как они являются наиболее частоиспользуемыми
файловыми системами на системах Linux
</p>

<p test="func:keyval('arch')='AMD64'">
Существует несколько файловых систем. Некоторые из них стабильны на 
архитектуре amd64, другие нет. Следующие файловые системы стабильны:
ext2, ext3, ext4 и XFS. JFS и ReiserFS могут работать, но нуждаются
в дальнейшем тестировании. Если вы любите приключения, вы можете
попробовать другие файловые системы.
</p>


<p test="func:keyval('arch')='arm'">
Существует несколько файловых систем. Некоторые из них стабильны на 
архитектуре arm, другие нет. ext2, ext3 и ext4 стабильны. 
JFS, XFS и ReiserFS могут работать, но нуждаются в дальнейшем тестировании. 
Если вы любите приключения, вы можете попробовать другие файловые системы.
</p>

<p test="func:keyval('arch')='HPPA'">
Существует несколько файловых систем. Ext2, ext3, ext4, XFS и reiserfs
стабильны на архитектуре HPPA. Другие являются очень экспериментальными.
</p>

<p test="func:keyval('arch')='MIPS'">
Существует несколько файловых систем. ReiserFS, EXT2, EXT3 и EXT4
стабильны на архитектуре MIPS. Другие являются очень экспериментальными.
</p>

<p test="func:keyval('arch')='PPC'">
Несколько файловых систем существуют для использования на архитектуре
PowerPC, включая ext2, ext3, ext4, ReiserFS и XFS, каждая со своими
достоинствами и недостатками.
</p>

<note test="func:keyval('arch')='PPC64'">
Существуют несколько файловых систем. Поддержка ext2, ext3, ext4 и ReiserFS
встроена в ядра на Installation CD. Поддержка JFS и XFS существует
в виде модулей ядра.
</note>

<p test="func:keyval('arch')='SPARC'">
Существует несколько файловых систем, некоторые из которых стабильны на
архитектуре SPARC. Ext2, ext3 и ext4, например, работают хорошо.
Другие файловые системы могут работать некорректно.
</p>

<note test="func:keyval('arch')='Alpha'">
<c>aboot</c> поддерживает загрузку только с разделов 
<b>ext2</b> и <b>ext3</b>.
</note>

</body>
<body>
	
<p test="func:keyval('arch')='IA64'">
<b>vfat</b> это файловая система MS-DOS, расширенная для поддержки длинных имен
файлов. Это единственная файловая система, которую понимает прошивка EFI на
системах ia64. Загрузочный раздел на системах ia64 всегда должен быть vfat,
однако для ваших разделов с данными вы должны использовать одну из других
фаловых систем, перечисленных ниже.
</p>

<p>
<b>ext2</b> это проверенная временем файловая система Linux, но в ней нет 
журналирования, что означает, что рутинные проверки файловой системы ext2 
при загрузке системы могут быть достаточно долгими. Сейчас есть большой выбор 
более новых журналируемых файловых систем, которые можно проверить очень 
быстро, поэтому, обычно их предпочитают перед их нежурналируемыми аналогами. 
Журналируемые файловые системы позволяют избежать долгого ожидания при 
загрузке вашей системы, когда ваша файловая система находится в ошибочном 
состоянии. Если вы ставите Gentoo на очень маленький диск (менее 4Гб), тогда 
вам нужно указать ext2 зарезервировать достаточно инодов, когда вы создаете 
файловую систему. Приложение <c>mke2fs</c> использует настройку "bytes-per-inode" 
для вычисления, сколько инодов должна иметь файловая система. Если запустить 
<c>mke2fs -T small /dev/&lt;device&gt;</c>, число инодов, обычно, будет в 
4 раза больше для конкретной файловой системы, так как настройка 
"bytes-per-inode" уменьшится с одного на 16Кб до одного на 4Кб. Вы можете изменить 
это еще больше, используя <c>mke2fs -i &lt;ratio&gt; /dev/&lt;device&gt;</c>.
</p>

<p>
<b>ext3</b> это журналируемая версия файловой системы ext2. Она имеет возможность 
журналирования метаданных для быстрого восстановления, а также дополнительные режимы 
журналирования, такие как полное журналирование данных и журналирование упорядоченных данных. 
Она использует индекс HTree, который дает высокую производительность почти во всех 
ситуациях. Если кратко, ext3 это очень хорошая и надежная файловая система. 
Ext3 это рекомендованная всеплатформенная файловая система на любой случай. Если вы 
ставите Gentoo на очень маленький диск (менее 4Гб), тогда вам нужно указать ext3 
зарезервировать достаточно инодов, когда вы создаете файловую систему. Приложение 
<c>mke2fs</c> использует настройку "bytes-per-inode" для вычисления, сколько инодов 
должна иметь файловая система. Если запустить <c>mke2fs -j -T small /dev/&lt;device&gt;</c>, 
число инодов, обычно, будет в 4 раза больше для конкретной файловой системы, 
так как настройка "bytes-per-inode" уменьшится с одного на 16Кб до одного на 4Кб. 
Вы можете изменить это еще больше, используя <c>mke2fs -j -i &lt;ratio&gt; /dev/&lt;device&gt;</c>.
</p>

<p test="contains('x86 Alpha MIPS AMD64 arm IA64 SPARC HPPA PPC PPC64',func:keyval('arch'))">
<b>ext4</b> это файловая система, созданная как ветка ext3. Она имеет новые возможности, 
улучшения скорости, а также не имеет лимита на размеры, с не очень большими изменениями 
формата на диске. Она может работать с дисками до 1 Эб, и максимальным размером файла 
16Тб. Вместо классической карты выделения блоков, как в ext2/3, в ext4 используются 
<uri link="http://en.wikipedia.org/wiki/Extent_%28file_systems%29">экстенты</uri>, 
которые улучшают производительность на больших файлах и уменьшают фрагментацию. 
Кроме того, ext4 также имеет более сложные алгоритмы выделения блока (отложенное выделение 
и многоблоковое выделение), что дает драйверу файловой системы больше возможностей 
для оптимизации распределения данных на диске. Файловая система ext4 это компромисс 
между стабильностью кода и желанием ввести расширения в почти десятилетнюю файловую систему.
</p>
</body>

<body test="not(func:keyval('arch')='SPARC')">

<p test="not(func:keyval('arch')='PPC')">
<b>JFS</b> это высокопроизводитиельная журналируемая файловая система от IBM. 
JFS это маленькая, быстрая и надежная файловая система, основанная на 
B+tree, с хорошей производительностью в различных условиях.
</p>

<p>
<b>ReiserFS</b> это основанная на B+tree журналируемая файловая система с 
хорошей общей производительностью, особенно, когда происходит работа со 
множеством маленьких файлов за счет большей нагрузки на ЦП. ReiserFS хуже 
поддерживается, чем другие файловые системы. 
</p>

<p>
<b>XFS</b> это файловая система с журналированием метаданных, которая имеет удобный 
набор возможностей и оптимизирована для масштабирования. XFS имеет меньше 
возможностей по восстановлению после различных проблем с железом.
</p>

</body>
</section>
</included>

<!-- *$Localization:
target-language: Russian
target-date: 2012-10-28
source-cvs-revision: 1.12
moved-by: Vladimir Romamov <blueboar2@gmail.com>
-->
