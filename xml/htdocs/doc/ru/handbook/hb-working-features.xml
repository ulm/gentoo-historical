<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-working-features.xml,v 1.5 2006/03/27 09:40:44 achumakov Exp $ -->

<sections>

<version>1.28</version>
<date>2005-12-01</date>

<section>
<title>Возможности Portage</title>
<body>

<p>
В Portage есть несколько дополнительных возможностей (features), которые 
значительно улучшат ваше впечатление от Gentoo. Многие из этих возможностей 
полагаются на определенные программы, повышающие производительность, 
надежность, безопасность и т.п.
</p>

<p>
Для включения и выключения определенных возможностей Portage нужно 
редактировать в файле <path>/etc/make.conf</path> переменную <c>FEATURES</c>, в 
которой перечислены ключевые слова, разделенные пробелами, обозначающие 
различные возможности. Иногда для использования соответствующих возможностей  
потребуется установка дополнительных утилит.
</p>

<p>
Здесь перечислены не все возможности, поддерживаемые Portage. Полный перечень
представлен на странице справки <path>make.conf</path>: 
</p>

<pre caption="Вызов страницы справки make.conf">
$ <i>man make.conf</i>
</pre>

<p>
Чтобы узнать, какие возможности включены по умолчанию, запустите <c>emerge 
--info</c> и найдите переменную FEATURES (или отфильтруйте ее с помощью grep):
</p>

<pre caption="Выявление уже включенных возможностей">
$ <i>emerge --info | grep FEATURES</i>
</pre>

</body>
</section>
<section>
<title>Распределенная компиляция</title>
<subsection>
<title>Использование distcc</title>
<body>

<p>
<c>distcc</c> &mdash; программа, распределяющая компиляцию по нескольким, не 
обязательно одинаковым, машинам в сети. Клиент <c>distcc</c> посылает всю 
необходимую информацию на доступные серверы distcc (на которых выполняется 
<c>distccd</c>), чтобы они могли компилировать для клиента части исходного 
кода. Чистый выигрыш &mdash; более быстрая компиляция.
</p>

<p>
Подробная информация о <c>distcc</c> (и как заставить его заработать в 
Gentoo) находится в нашем <uri link="/doc/ru/distcc.xml">описании distcc 
в Gentoo</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Установка distcc</title>
<body>

<p>
Distcc поставляется с графическим монитором (средством контроля), позволяющим 
отслеживать задачи, которые ваш компьютер отсылает на компиляцию. Если вы 
используете Gnome, тогда добавьте &laquo;gnome&raquo; к переменной USE. 
А если вы не пользуетесь Gnome, но при этом хотите пользоваться 
монитором, добавьте &laquo;gtk&raquo; к переменной USE.
</p>

<pre caption="Установка distcc">
# <i>emerge distcc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Подключение поддержки Portage</title>
<body>

<p>
Добавьте <c>distcc</c> к переменной FEATURES в файле 
<path>/etc/make.conf</path>. Затем отредактируйте переменную MAKEOPTS, как вам 
нравится. Известная рекомендация &mdash; указывать директиву 
&laquo;-jX&raquo;, где X &mdash; число центральных процессоров, на которых
работает <c>distccd</c> (включая текущий компьютер) плюс один; у вас могут 
получиться лучшие результаты и с другими значениями.
</p>

<p>
Теперь запустите <c>distcc-config</c> и введите список доступных серверов 
distcc. Для простоты примера, предположим, что доступные серверы DistCC &mdash; 
192.168.1.102 (текущий компьютер), 192.168.1.103 и 192.168.1.104 (два 
&laquo;удаленных&raquo; компьютера):
</p>

<pre caption="Настройка distcc для использования трех доступных серверов distcc">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>

<p>
Не забудьте также запустить демон <c>distccd</c>:
</p>

<pre caption="Запуск демонов distccd">
# <i>rc-update add distccd default</i>
# <i>/etc/init.d/distccd start</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Кэширование компиляции</title>
<subsection>
<title>О средстве ccache</title>
<body>

<p>
<c>ccache</c> &mdash; это быстрый кэш компилятора. Когда вы компилируете 
программу, он кэширует промежуточные результаты так, что всякий раз, когда вы 
перекомпилируете ту же самую программу, время компиляции значительно 
сокращается. В типичных случаях общее время компиляции может сокращаться в
5&mdash;10 раз.
</p>

<p>
Если вы интересуетесь подробностями ccache, пожалуйста, посетите 
<uri link="http://ccache.samba.org">домашнюю страницу ccache</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Установка ccache</title>
<body>

<p>
Для установки <c>ccache</c>, выполните <c>emerge ccache</c>:
</p>

<pre caption="Установка ccache">
# <i>emerge ccache</i>
</pre>

</body>
</subsection>
<subsection>
<title>Подключение поддержки Portage</title>
<body>

<p>
Откройте <path>/etc/make.conf</path> и добавьте <c>ccache</c> к переменной 
FEATURES. Затем добавьте новую переменную по имени CCACHE_SIZE (размер кэша), и 
установите её равной &laquo;2G&raquo;:
</p>

<pre caption="Редактирование CCACHE_SIZE в /etc/make.conf">
CCACHE_SIZE="2G"
</pre>

<p>
Для проверки работоспособности ccache, запросите статистику ccache. 
Из-за того, что Portage использует другой домашний каталог ccache, вам также 
потребуется установить переменную <c>CCACHE_DIR</c>:
</p>

<pre caption="Просмотр статистики ccache">
# <i>CCACHE_DIR="/var/tmp/ccache" ccache -s</i>
</pre>

<p>
Домашний каталог ccache по умолчанию &mdash; <path>/var/tmp/ccache</path>;
изменить это назначение можно, определив переменную <c>CCACHE_DIR</c> 
в <path>/etc/make.conf</path>.
</p>

<p>
Однако, при запуске <c>ccache</c> используется каталог по умолчанию, 
<path>${HOME}/.ccache</path>, вот почему при запросе статистики (Portage) 
ccache требуется определять переменную <c>CCACHE_DIR</c>.
</p>

</body>
</subsection>
<subsection>
<title>Использование ccache для компиляции Си не в Portage</title>
<body>

<p>
Если вы хотите использовать ccache для компиляций не в Portage, добавьте 
<path>/usr/lib/ccache/bin</path> в начало вашей переменной PATH (перед 
<path>/usr/bin</path>). Это можно сделать, отредактировав 
<path>/etc/env.d/00basic</path>, который является первым файлом среды, 
где определяется переменная <c>PATH</c>:
</p>

<pre caption="Редактирование /etc/env.d/00basic">
PATH="<i>/usr/lib/ccache/bin</i>:/opt/bin"
</pre>

</body>
</subsection>
</section>
<section>
<title>Поддержка двоичных пакетов</title>
<subsection>
<title>Создание готовых (заранее собранных) пакетов</title>
<body>

<p>
Portage поддерживает установку заранее собранных готовых пакетов. Несмотря на 
то, что в саму Gentoo не входят заранее собранные пакеты (за исключением 
снимков GRP), Portage можно настроить на полноценное управление готовыми 
пакетами.
</p>

<p>
Чтобы создать двоичный пакет, можно использовать <c>quickpkg</c>, если 
пакет уже установлен в вашей системе, или <c>emerge</c> с параметрами 
<c>--buildpkg</c> или <c>--buildpkgonly</c>.
</p>

<p>
Если вы хотите, чтобы Portage создавал двоичные пакеты из каждого пакета, 
который вы будете устанавливать, добавьте <c>buildpkg</c> к переменной 
FEATURES.
</p>

<p>
Расширенная поддержка создания наборов готовых пакетов имеются в 
<c>catalyst</c>. Для получения подробной информации о catalyst, пожалуйста,
прочитайте <uri link="/proj/en/releng/catalyst/2.x/reference.xml">справочное 
руководство по catalyst</uri> и <uri 
link="/proj/en/releng/catalyst/faq.xml">Распространенные вопросы о 
catalyst</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Установка двоичных пакетов</title>
<body>

<p>
Хотя в Gentoo такого хранилища нет, вы можете создать централизованное 
хранилище для заранее скомпилированных двоичных пакетов. Чтобы использовать 
такое хранилище, потребуется указать Portage путь к нему с помощью переменной 
PORTAGE_BINHOST. Например, если двоичные пакеты находятся на 
ftp://buildhost/gentoo:
</p>

<pre caption="Установка PORTAGE_BINHOST в /etc/make.conf">
PORTAGE_BINHOST="ftp://buildhost/gentoo"
</pre>

<p>
При установке двоичных пакетов, указывайте в команде emerge параметр 
<c>--getbinpkg</c> вместе с параметром <c>--usepkg</c>. Первый указывает emerge 
загрузить двоичный пакет c сервера, определенного раньше, а второй сообщает 
emerge, что до загрузки исходных кодов и их компиляции сначала нужно попытаться 
установить этот двоичный пакет.
</p>

<p>
Например, чтобы установить <c>gnumeric</c> из двоичных пакетов:
</p>

<pre caption="Установка двоичного пакета gnumeric">
# <i>emerge --usepkg --getbinpkg gnumeric</i>
</pre>

<p>
Подробную информацию о параметрах установки двоичных пакетов можно найти на 
странице справки emerge:
</p>

<pre caption="Чтение справки по emerge">
$ <i>man emerge</i>
</pre>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 1.28-r1
target-date: 2005-12-04
source-cvs-revision: 1.31
translated-by: Alexey Glazunov [glazunov_aleksey@mail.ru]
edited-by: Alexey Chumakov [achumakov@gentoo.org]
-->
