<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-working-features.xml,v 1.9 2013/12/31 05:02:45 blueboar Exp $ -->

<sections>

<abstract>
Узнайте, какие возможности имеет Portage, такие как поддержка распределенной 
компиляции, ccache, и многое другое.
</abstract>

<version>3</version>
<date>2013-12-17</date>

<section>
<title>Возможности Portage</title>
<body>

<p>
В Portage есть несколько дополнительных возможностей (features), которые 
значительно улучшат ваше впечатление от Gentoo. Многие из этих возможностей 
полагаются на определенные программы, повышающие производительность, 
надежность, безопасность и т.п.
</p>

<p>
Для включения и выключения определенных возможностей Portage нужно 
редактировать в файле <path>/etc/portage/make.conf</path> переменную <c>FEATURES</c>, в 
которой перечислены ключевые слова, разделенные пробелами, обозначающие 
различные возможности. Иногда для использования соответствующих возможностей  
потребуется установка дополнительных утилит.
</p>

<p>
Здесь перечислены не все возможности, поддерживаемые Portage. Полный перечень
представлен на странице справки <path>make.conf</path>: 
</p>

<pre caption="Вызов страницы справки make.conf">
$ <i>man make.conf</i>
</pre>

<p>
Чтобы узнать, какие возможности включены по умолчанию, запустите <c>emerge 
--info</c> и найдите переменную FEATURES (или отфильтруйте ее с помощью grep):
</p>

<pre caption="Выявление уже включенных возможностей">
$ <i>emerge --info | grep FEATURES</i>
</pre>

</body>
</section>
<section>
<title>Распределенная компиляция</title>
<subsection>
<title>Использование distcc</title>
<body>

<p>
<c>distcc</c> &mdash; программа, распределяющая компиляцию по нескольким, не 
обязательно одинаковым, машинам в сети. Клиент <c>distcc</c> посылает всю 
необходимую информацию на доступные серверы distcc (на которых выполняется 
<c>distccd</c>), чтобы они могли компилировать для клиента части исходного 
кода. Чистый выигрыш &mdash; более быстрая компиляция.
</p>

<p>
Подробная информация о <c>distcc</c> (и как заставить его заработать в 
Gentoo) находится в нашем <uri link="https://wiki.gentoo.org/wiki/Distcc">описании distcc 
в Gentoo</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Установка distcc</title>
<body>

<p>
Distcc поставляется с графическим монитором (средством контроля), позволяющим 
отслеживать задачи, которые ваш компьютер отсылает на компиляцию. Если вы 
используете Gnome, тогда добавьте &laquo;gnome&raquo; к переменной USE. 
А если вы не пользуетесь Gnome, но при этом хотите пользоваться 
монитором, добавьте &laquo;gtk&raquo; к переменной USE.
</p>

<pre caption="Установка distcc">
# <i>emerge distcc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Подключение поддержки Portage</title>
<body>

<p>
Добавьте <c>distcc</c> к переменной FEATURES в файле 
<path>/etc/portage/make.conf</path>. Затем отредактируйте переменную MAKEOPTS, как вам 
нравится. Известная рекомендация &mdash; указывать директиву 
&laquo;-jX&raquo;, где X &mdash; число центральных процессоров, на которых
работает <c>distccd</c> (включая текущий компьютер) плюс один; у вас могут 
получиться лучшие результаты и с другими значениями.
</p>

<p>
Теперь запустите <c>distcc-config</c> и введите список доступных серверов 
distcc. Для простоты примера, предположим, что доступные серверы DistCC &mdash; 
192.168.1.102 (текущий компьютер), 192.168.1.103 и 192.168.1.104 (два 
&laquo;удаленных&raquo; компьютера):
</p>

<pre caption="Настройка distcc для использования трех доступных серверов distcc">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>

<p>
Не забудьте также запустить демон <c>distccd</c>:
</p>

<pre caption="Запуск демонов distccd">
# <i>rc-update add distccd default</i>
# <i>/etc/init.d/distccd start</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Кэширование компиляции</title>
<subsection>
<title>О средстве ccache</title>
<body>

<p>
<c>ccache</c> это быстрый кеш компилятора. Когда вы компилируете программу, она будет 
кешировать промежуточные результаты, так что когда вы будете перекомпилировать ту же 
самую программу, время компиляции будет сильно уменьшено. Первый раз, когда вы запустите 
ccache, компиляция будет гораздо медленнее, чем обычная компиляция. Последующие 
перекомпиляции должны быть быстрее. ccache полезна только если вы перекомпилируете 
одно и тоже приложение много раз, поэтому эта программа будет полезна, скорее всего, 
только для разработчиков приложений.
</p>

<p>
Если вы интересуетесь подробностями ccache, пожалуйста, посетите 
<uri link="http://ccache.samba.org">домашнюю страницу ccache</uri>.
</p>

<warn>
Известно, что <c>ccache</c> вызывает некоторые ошибки компиляции. Иногда она оставляет 
ненужные, или испорченные файлы, что может привести к пакетам, которые не могут быть 
установлены. Если это случится (если вы получите ошибки типа "File not recognized. File truncated"), 
попробуйте перекомпилировать приложение с отключенным ccache 
(<c>FEATURES="-ccache"</c> в <path>/etc/portage/make.conf</path>) прежде чем писать о баге. 
Если вы не делаете какую-то разработку, <e>не включайте ccache</e>.
</warn>

</body>
</subsection>
<subsection>
<title>Установка ccache</title>
<body>

<p>
Для установки <c>ccache</c>, выполните <c>emerge ccache</c>:
</p>

<pre caption="Установка ccache">
# <i>emerge ccache</i>
</pre>

</body>
</subsection>
<subsection>
<title>Подключение поддержки Portage</title>
<body>

<p>
Откройте <path>/etc/portage/make.conf</path> и добавьте <c>ccache</c> к переменной 
FEATURES. Затем добавьте новую переменную по имени CCACHE_SIZE (размер кэша), и 
установите её равной &laquo;2G&raquo;:
</p>

<pre caption="Редактируем CCACHE_SIZE в /etc/portage/make.conf">
CCACHE_SIZE="2G"
</pre>

<p>
Для проверки работоспособности ccache, запросите статистику ccache. 
Из-за того, что Portage использует другой домашний каталог ccache, вам также 
потребуется установить переменную <c>CCACHE_DIR</c>:
</p>

<pre caption="Просмотр статистики ccache">
# <i>CCACHE_DIR="/var/tmp/ccache" ccache -s</i>
</pre>

<p>
Домашний каталог ccache по умолчанию &mdash; <path>/var/tmp/ccache</path>;
изменить это назначение можно, определив переменную <c>CCACHE_DIR</c> 
в <path>/etc/portage/make.conf</path>.
</p>

<p>
Однако, при запуске <c>ccache</c> используется каталог по умолчанию, 
<path>${HOME}/.ccache</path>, вот почему при запросе статистики (Portage) 
ccache требуется определять переменную <c>CCACHE_DIR</c>.
</p>

</body>
</subsection>
<subsection>
<title>Использование ccache для компиляции Си не в Portage</title>
<body>

<p>
Если вы хотите использовать ccache для компиляций не в Portage, добавьте 
<path>/usr/lib/ccache/bin</path> в начало вашей переменной PATH (перед 
<path>/usr/bin</path>). Это можно сделать, отредактировав 
<path>.bash_profile</path> в домашнем каталоге вашего пользователя.
Использование <path>.bash_profile</path> это один из способов определения
переменных PATH.
</p>

<pre caption="Редактирование .bash_profile">
PATH="<i>/usr/lib/ccache/bin</i>:/opt/bin:${PATH}"
</pre>

</body>
</subsection>
</section>
<section>
<title>Поддержка двоичных пакетов</title>
<subsection>
<title>Создание готовых (заранее собранных) пакетов</title>
<body>

<p>
Portage поддерживает установку заранее собранных готовых пакетов. Несмотря на 
то, что в саму Gentoo не входят заранее собранные пакеты, Portage можно настроить 
на полноценное управление готовыми пакетами.
</p>

<p>
Чтобы создать двоичный пакет, можно использовать <c>quickpkg</c>, если 
пакет уже установлен в вашей системе, или <c>emerge</c> с параметрами 
<c>--buildpkg</c> или <c>--buildpkgonly</c>.
</p>

<p>
Если вы хотите, чтобы Portage создавал двоичные пакеты из каждого пакета, 
который вы будете устанавливать, добавьте <c>buildpkg</c> к переменной 
FEATURES.
</p>

<p>
Расширенная поддержка создания наборов готовых пакетов имеются в 
<c>catalyst</c>. Для получения подробной информации о catalyst, пожалуйста,
прочитайте <uri link="/proj/en/releng/catalyst/faq.xml">распространенные вопросы о 
catalyst (англ.)</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Установка двоичных пакетов</title>
<body>

<p>
Хотя в Gentoo такого хранилища нет, вы можете создать централизованное 
хранилище для заранее скомпилированных двоичных пакетов. Чтобы использовать 
такое хранилище, потребуется указать Portage путь к нему с помощью переменной 
PORTAGE_BINHOST. Например, если двоичные пакеты находятся на 
ftp://buildhost/gentoo:
</p>

<pre caption="Установка PORTAGE_BINHOST в /etc/portage/make.conf">
PORTAGE_BINHOST="ftp://buildhost/gentoo"
</pre>

<p>
При установке двоичных пакетов, указывайте в команде emerge параметр 
<c>--getbinpkg</c> вместе с параметром <c>--usepkg</c>. Первый указывает emerge 
загрузить двоичный пакет c сервера, определенного раньше, а второй сообщает 
emerge, что до загрузки исходных кодов и их компиляции сначала нужно попытаться 
установить этот двоичный пакет.
</p>

<p>
Например, чтобы установить <c>gnumeric</c> из двоичных пакетов:
</p>

<pre caption="Установка двоичного пакета gnumeric">
# <i>emerge --usepkg --getbinpkg gnumeric</i>
</pre>

<p>
Подробную информацию о параметрах установки двоичных пакетов можно найти на 
странице справки emerge:
</p>

<pre caption="Чтение справки по emerge">
$ <i>man emerge</i>
</pre>

</body>
</subsection>
</section>

<section>
<title>Скачивание файлов</title>
<subsection>
<title>Параллельная загрузка</title>
<body>

<p>
Когда вы устанавливаете набор пакетов, Portage может скачивать исходные файлы 
для следующего пакета в списке даже пока компилируется другой пакет. Это 
приводит к сокращению времени компиляции. Чтобы использовать эту возможность, 
добавьте "parallel-fetch" к переменной FEATURES. Заметьте, что она включена по 
умолчанию, так что вам не нужно делать что-либо специальное, чтобы ее включить.
</p>

</body>
</subsection>
<subsection>
<title>Userfetch</title>
<body>

<p>
Когда Portage запущен как root, FEATURES="userfetch" позволит Portage отказаться 
от привилегий root при скачивании исходников пакетов. Это приводит к небольшому
увеличению безопасности.
</p>

</body>
</subsection>
</section>

<section id="webrsync-gpg">
<title>Загрузка проверенных образов дерева Portage</title>
<body>

<p>
Как администратор, вы можете захотеть обновлять ваше локальное дерево Portage 
только с использованием криптографически проверенного образа дерева Portage, 
которое выпускается инфраструктурой Gentoo. Это удостоверяет, что никакое небезопасное 
зеркало rsync не добавит нежелательный код или пакеты в дерево, которое вы скачиваете.
</p>

<p>
Чтобы сконфигурировать Portage, сначала создайте каталог с доверенными ключами, 
в который вы скачаете и примете ключи Инфраструктуры Gentoo, ответственной за 
подпись образов дерева Portage. Конечно, если вы хотите, вы можете проверить этот 
GPG-ключ, как описано в 
<uri link="https://wiki.gentoo.org/wiki/GnuPG#Importing_keys">соответствующем документе</uri>. 
(например, проверить слепки ключа). Вы можете найти список ключей GPG,
используемых командой разработчиков на их <uri link="/proj/en/releng/index.xml">странице проекта</uri>.
</p>

<pre caption="Создаем каталог с доверенными ключами Portage">
# <i>mkdir -p /etc/portage/gpg</i>
# <i>chmod 0700 /etc/portage/gpg</i>
<comment>(... Замените ключи теми, которые вы найдете на сайте, указанном выше ...)</comment>
# <i>gpg --homedir /etc/portage/gpg --keyserver subkeys.pgp.net --recv-keys 0xDB6B8C1F96D8BF6D</i>
# <i>gpg --homedir /etc/portage/gpg --edit-key 0xDB6B8C1F96D8BF6D trust</i>
</pre>

<p>
Далее отредактируйте <path>/etc/portage/make.conf</path> и включите поддержку для проверки 
подписанных образов дерева Portage (используйте <c>FEATURES="webrsync-gpg"</c>), и 
отключите обновление дерева Portage, используя обычный метод <c>emerge --sync</c>.
</p>

<pre caption="Обновление make.conf">
FEATURES="webrsync-gpg"
PORTAGE_GPG_DIR="/etc/portage/gpg"
</pre>

<pre caption="Обновление repos.conf">
<comment># Проверьте, чтобы sync-type и sync-uri были закомментированы</comment>
# sync-type = rsync
# sync-uri = ...
</pre>

<p>
Вот и все. Теперь когда вы запустите <c>emerge-webrsync</c>, только образы с правильной 
сигнатурой будут установлены в вашу файловую систему.
</p>

</body>
</section>

</sections>

<!-- *$Localization:
target-language: Russian
target-date: 2013-12-17
source-cvs-revision: 1.48
translated-by: Alexey Glazunov [glazunov_aleksey@mail.ru]
edited-by: Alexey Chumakov [achumakov@gentoo.org]
edited-by: Vladimir Romanov [blueboar2@gmail.com]
-->
