<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-working-use.xml,v 1.4 2005/11/11 03:29:15 achumakov Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.31</version>
<date>2005-10-26</date>

<section>
<title>Что такое USE-флаги?</title>
<subsection>
<title>Суть USE-флагов</title>
<body>

<p>
Когда вы устанавливаете Gentoo (или любой другой дистрибутив, или даже
операционную систему вообще), вы выбираете те или иные возможности в зависимости
от среды, с которой работаете. Установка сервера отличается от установки рабочей
станции, а установка игровой станции &mdash; от платформы 3D-рендеринга.
</p>

<p>
Это касается не только того, какие пакеты устанавливать, но и какие функции
должны поддерживаться. Если вам не нужен OpenGL, то зачем вам его ставить
и собирать поддержку OpenGL в большинстве программ? Если вы не собираетесь
использовать KDE, зачем вам собирать пакеты с его поддержкой, если они работают
и без этого?
</p>

<p>
Чтобы помочь пользователям в выборе того, что устанавливать/активировать, а что
нет, мы предоставляем им простой способ описания рабочей среды. Это позволяет
пользователю решить, что же ему на самом деле надо и облегчить работу с Portage,
нашей системой управления пакетами.
</p>

</body>
</subsection>
<subsection>
<title>Определение USE-флагов</title>
<body>

<p>

Рассмотрим USE-флаги. USE-флаг представляет собой ключевое слово, описывающие
поддержку и зависимости той или иной функции или концепции. Если вы определяете
какой-то USE-флаг, то Portage будет знать, что вы хотите активировать поддержку
данной функции. Конечно, это изменит также и информацию о зависимостях для
пакета.
</p>

<p>
Давайте рассмотрим конкретный пример &mdash; ключевое слово <c>kde</c>. Если у
вас нет этого слова в переменной <c>USE</c>, то все пакеты, где поддержка KDE
является <e>необязательной</e>, будут собраны <e>без</e> нее. Все пакеты, где
зависимость от KDE является <e>необязательной</e>, будут установлены <e>без</e>
установки библиотек KDE в качестве зависимости. Если же вы определили ключевое
слово <c>kde</c>, то эти пакеты будут собраны с поддержкой KDE, и KDE будет
установлен как необходимая зависимость.
</p>

<p>
Правильно определив ключевые слова, вы получите систему, собранную под ваши
нужды.
</p>

</body>
</subsection>
<subsection>
<title>Какие существуют USE-флаги?</title>
<body>

<p>
Существует два типа USE-флагов: <e>глобальный</e> и <e>локальный</e>.
</p>

<ul>
  <li>
    <e>Глобальный</e> USE-флаг используется несколькими пакетами и является
    системным. Это и есть то, что видят большинство пользователей в качестве
    USE-флагов.
  </li>
  <li>
    <e>Локальный</e> USE-флаг используется одним пакетом для каких-то
    специфичных для него настроек.
  </li>
</ul>

<p>
Список доступных глобальных USE-флагов можно найти <uri
link="/dyn/use-index.xml">в сети</uri> или локально в
<path>/usr/portage/profiles/use.desc</path>. Вот небольшая (<e>далеко</e> не
полная) выдержка:
</p>

<pre caption="Короткая выдержка из списка доступных USE-флагов">
gtk     - поддержка x11-libs/gtk+ (The GIMP Toolkit)
gtk2    - использовать gtk+-2.0 вместо gtk+-1.2 если программа поддерживает оба
gtkhtml - поддержка gnome-extra/gtkhtml
guile   - поддержка dev-util/guile (интерпретатор для Scheme)
icc     - использовать компилятор Intel C++ если пакет поддерживает его
icc-pgo - включить генерацию данных PGO или использовать при использовании icc
imap    - поддержка протокола IMAP
</pre>
<p>
Список локальных USE-флагов можно найти в
<path>/usr/portage/profiles/use.local.desc</path>.
</p>

</body>
</subsection>
</section>
<section>
<title>Использование USE-флагов.</title>
<subsection>
<title>Определение постоянных USE-флагов.</title>
<body>

<p>
Надеемся, что теперь у вас нет сомнений в необходимости USE-флагов, и мы можем
вам рассказать, как их установить.
</p>

<p>
Как было ранее сказано, все USE-флаги определяются в переменной <c>USE</c>.
Чтобы упростить пользователям поиск и выбор флагов, мы предоставляем настройки
USE <e>по умолчанию</e>, которые представляют собой список USE-флагов, которые,
как нам кажется, наиболее часто используются пользователями Gentoo. Эти
настройки прописаны в файле <path>make.defaults</path> вашего профиля.
</p>

<p>
Профиль вашей системы <path>/etc/make.profile</path> является
символической ссылкой. Каждый профиль работает на основе предыдущего, более
крупного, а в конце получается результат сложения всех профилей. Верхний профиль
является <path>базовым</path> (<path>/usr/portage/profiles/base</path>).
</p>

<p>
Давайте взглянем на настройки по умолчанию для профиля 2004.3:
</p>

<pre caption="Переменная USE в итоговом make.defaults для профиля 2004.3">
<comment>(Этот пример является суммой настроек base, default-linux,
default-linux/x86 и default-linux/x86/2004.3)</comment>
USE="x86 oss apm arts avi berkdb bitmap-fonts crypt cups encode fortran f77
     foomaticdb gdbm gif gpm gtk gtk2 imlib jpeg kde gnome libg++ libwww mad
     mikmod motif mpeg ncurses nls oggvorbis opengl pam pdflib png python qt
     quicktime readline sdl spell ssl svga tcpd truetype X xml2 xmms xv zlib"
</pre>

<p>
Как видите, эта переменная уже содержит достаточно много ключевых слов. <b>Не
меняйте</b> файл <path>make.defaults</path> для настройки переменной <c>USE</c>
под свои нужды: изменения в этом файле будут удалены при обновлении Poratage!
</p>

<p>
Чтобы изменить настройки по умолчанию, вам надо добавить или удалить ключевые
слова из переменной <c>USE</c>. Это можно сделать глобально, определив
переменную <c>USE</c> в <path>/etc/make.conf</path>. В эту переменную вы можете
добавить необходимые USE-флаги или удалить ненужные. Чтобы удалить флаг, его
надо прописать с приставкой минус (&laquo;-&raquo;).
</p>

<p>
Например, чтобы убрать поддержку KDE и QT, но добавить поддержку ldap, вы
определяете переменную <c>USE</c> в <path>/etc/make.conf</path> следующего вида:
</p>

<pre caption="Пример настройки USE в /etc/make.conf">
USE="-kde -qt ldap"
</pre>

</body>
</subsection>
<subsection>
<title>Установка USE флагов для определенных пакетов</title>
<body>

<p>
Иногда нужно определить некоторые USE-флаги только для одного или нескольких
пакетов, не трогая системных настроек. Для этого необходимо создать каталог
<path>/etc/portage</path> (если его еще нет) и отредактировать файл
<path>/etc/portage/package.use</path>.
</p>

<p>
Например, вам не нужна поддержка <c>berkdb</c> нигде, кроме <c>mysql</c>:
</p>

<pre caption="Пример /etc/portage/package.use">
dev-db/mysql berkdb
</pre>

<p>
Естественно, можно и <c>отключить</c> USE-флаги для некоторых пакетов. Например,
если вам не нужна поддержка <c>java</c> в PHP:
</p>

<pre caption="Второй пример /etc/portage/package.use">
dev-php/php -java
</pre>

</body>
</subsection>

<subsection>
<title>Объявление временных USE-флагов.</title>
<body>

<p>
Иногда необходимо установить какой-то USE-флаг только на один раз. Вместо того,
чтобы дважды редактировать <path>/etc/make.conf</path> (сначала добавить
изменения USE, а потом удалить), вы можете объявить USE как переменную среды.
Помните, что при переустановке или обновлении приложения (индивудуальном или
как часть обновления системы вцелом) ваши изменения будут утеряны!
</p>

<p>
В качестве примера, мы уберем java из настроек USE на время установки mozilla.
</p>

<pre caption="Использование USE как переменной среды">
# <i>USE="-java" emerge mozilla</i>
</pre>

</body>
</subsection>
<subsection>
<title>Автоматические USE-флаги</title>
<body>

<p>
После установки некоторых пакетов автоматически включаются дополнительные
USE-флаги, есл вы не отключили их явным образом. Чтобы просмотреть список
пакетов, включающих автоматические USE-флаги, проверьте файлы
<path>/etc/make.profile/use.defaults</path> и <path>use.defaults</path> в
родительских профилях.
</p>

<pre caption="Выдержка из /etc/make.profile/use.defaults">
gnome           gnome-base/gnome
gtk             x11-libs/gtk+
qt              x11-libs/qt
kde             kde-base/kdebase
motif           x11-libs/openmotif
</pre>

</body>
</subsection>
<subsection>
<title>Наследование</title>
<body>

<p>
Конечно же, существует определенная последовательность наследования настроек
USE. Вы же не хотите объявить <c>USE="-java"</c> только для того, чтобы узнать,
что <c>java</c> все еще определена на более верхнем уровне. Последовательность
наследования настроек USE в порядке приоритета (от меньшего к большему) такова:
</p>

<ol>
  <li>
    Настройки по умолчанию, определенные в <path>make.defaults</path>
  </li>
  <li>
    Унаследованные настройки USE, если устанавливается пакет из
    профиля <path>use.defaults</path>
  </li>
  <li>
    Настройки, определенные пользователем в <path>/etc/make.conf</path>
  </li>
  <li>
    Настройки, определенные пользователем в
    <path>/etc/portage/package.use</path>
  </li>
  <li>
    Настройки, определенные пользователям, как переменная среды
  </li>
</ol>

<p>
Чтобы узнать, какие же настройки <c>USE</c> в конечном счете видит Portage,
запустите <c>emerge --info</c>. Эта команда выведет значение всех переменных
(включая <c>USE</c>), которые будет использовать Portage.
</p>

<pre caption="Запускаем emerge --info">
# <i>emerge --info</i>
</pre>

</body>
</subsection>
<subsection>
<title>Адаптация всей системы под новые USE-флаги</title>
<body>

<p>
Если вы изменили свои USE-фалги и хотите обновить всю систему под новое значение
USE, запустите <c>emerge</c> с опцией <c>--newuse</c>
</p>


<pre caption="Пересборка всей системы">
# <i>emerge --update -deep --newuse world</i>
</pre>

<p>
Теперь запустите функцию depclean чтобы удалить условные зависимости
установленные в &laquo;старой&raquo; системе и которые больше не нужны с новыми
USE-флагами.
</p>

<warn>
Запуск <c>emerge --depclean</c> является опасной операцией и должна
использоваться со осторожностью. Дважды перепроверьте список
&laquo;ненужных&raquo; пакетов и убедитесь, что не удалятся нужные пакеты. В
следующем примере мы добавили ключ <c>-p</c>, чтобы depclean только перечислил
пакеты, не удаляя их.
</warn>

<pre caption="Удаляем ненужные пакеты">
# <i>emerge -p --depclean</i>
</pre>

<p>
Когда depclean закончит свою работу, запустите <c>revdep-rebuild</c>, чтобы
пересобрать программы, динамически слинкованные с библиотеками, которые
предоставлялись возможно удаленными пакетами. <c>revdep-rebuild</c> является
частью пакета <c>gentoolkit</c>, так что сначала не забудьте поставить его.
</p>

<pre caption="Запуск revdep-rebuild">
# <i>revdep-rebuild</i>
</pre>

<p>
Когда вы закончите все эти шаги, ваша система будет полностью использовать новые
USE-флаги.
</p>

</body>
</subsection>
</section>
<section>
<title>Специфичные для пакетов USE-флаги</title>
<subsection>
<title>Просмотр доступных USE-флагов</title>
<body>

<p>
Возьмем к примеру <c>mozilla</c> &mdash; какие USE-флаги она может
использовать? Чтобы это выяснить, запустим <c>emerge</c> с опциями
<c>--pretend</c> и <c>--verbose</c>:
</p>

<pre caption="Просмотр используемых USE флагов">
# <i>emerge --pretend --verbose mozilla</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild  N    ] net-www/mozilla-1.5-r1 +java +crypt -ipv6 -gtk2 +ssl +ldap
+gnome -debug +mozcalendar -mozaccess -mozxmlterm -moznoirc -moznomail
-moznocompose -moznoxft
</pre>

<p>
<c>emerge</c> &mdash; не единственная утилита для решения этой задачи. У нас
есть программа специально предназначенная для вывода информация о пакетах. Она
называется <c>equery</c> и находится в пакете <c>gentoolkit</c>. Для начала
установим этот пакет:
</p>

<pre caption="Установка gentoolkit">
# <i>emerge gentoolkit</i>
</pre>

<p>
Теперь запустим <c>equery</c> с аргументом <c>uses</c> для просмотра USE-флагов
какого-нибудь пакета. Пусть это будет <c>gnumeric</c>:
</p>

<pre caption="Используем equery для просмотра доступных USE-флагов">
# <i>etcat uses gnumeric</i>
[ Colour Code : <i>set</i> <comment>unset</comment> ]
[ Legend      : (U) Col 1 - Current USE flags       ]
[             : (I) Col 2 - Installed With USE flags]

 U I [ Found these USE variables in : app-office/gnumeric-1.2.0 ]
 - - <comment>libgda</comment>  : Adds GNU Data Access (CORBA wrapper) support for gnumeric
 - - <comment>gnomedb</comment> : unknown
 + + <i>python</i>  : Adds support/bindings for the Python language
 + + <i>bonobo</i>  : Adds support for gnome-base/bonobo (Gnome CORBA interfaces)
</pre>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 1.31-r1
target-date: 2005-11-11
source-cvs-revision: 1.37
translated-by: unknown
edited-by: Azamat H. Hackimov

notes:
Translator unknown up to v1.23
Slightly checked by Chumakov, but may need further proof upon publication
-->
