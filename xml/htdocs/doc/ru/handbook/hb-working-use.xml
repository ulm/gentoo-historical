<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-working-use.xml,v 1.9 2013/01/20 15:47:40 swift Exp $ -->

<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<abstract>
USE флаги — очень важный аспект Gentoo. Прочитав эту главу, вы научитесь 
обращаться с ними и разберетесь, как USE флаги влияют на систему. 
</abstract>

<version>2</version>
<date>2012-07-24</date>

<section>
<title>Что такое USE флаги?</title>
<subsection>
<title>Смысл USE флагов</title>
<body>

<p>
Устанавливая Gentoo (или любой другой дистрибутив, или даже операционную 
систему вообще), вы выбираете те или иные возможности в зависимости от среды, с 
которой работаете. Установка сервера отличается от установки рабочей станции, а 
установка игровой станции &mdash; от платформы 3D-рендеринга.
</p>

<p>
Это касается не только того, какие пакеты устанавливать, но и какие функции
определенных пакетов должны поддерживаться. Если вам не нужен OpenGL, то зачем 
вам его ставить и встраивать поддержку OpenGL в большинство программ? Если вы 
не собираетесь использовать KDE, зачем собирать пакеты с его поддержкой, если 
они работают и без этого?
</p>

<p>
Чтобы помочь пользователям в выборе того, что устанавливать/активировать, а что
&mdash; нет, мы захотели дать им простой способ описания рабочей среды. Это 
позволяет пользователю решить, что же ему на самом деле надо, и облегчить 
работу с Portage, нашей системой управления пакетами.
</p>

</body>
</subsection>
<subsection>
<title>Определение USE флагов</title>
<body>

<p>
Рассмотрим USE флаги. USE флаг &mdash; это ключевое слово, включающее сведения 
о поддержке и зависимостях определенного понятия или функции. При определении
какого-либо USE флага, Portage узнает, что вам нужна поддержка соответствующей
функции. Конечно, это также влияет на сведения о зависимостях пакета.
</p>

<p>
Давайте рассмотрим конкретный пример &mdash; ключевое слово <c>kde</c>. Если в
вашей переменной <c>USE</c> нет этого слова, то все пакеты, где поддержка KDE
является <e>необязательной</e>, собрираются <e>без</e> нее. Все пакеты, где
зависимость от KDE является <e>необязательной</e>, устанавливаются <e>без</e>
установки библиотек KDE (по зависимости). Если же вы определите ключевое
слово <c>kde</c>, то эти пакеты будут собираться <e>с поддержкой</e> KDE,
а библиотеки KDE будут установлены в качестве зависимостей.
</p>

<p>
Правильно определяя ключевые слова, вы создаете систему, подогнанную специально 
для ваших нужд.
</p>

</body>
</subsection>
<subsection>
<title>Какие USE флаги существуют?</title>
<body>

<p>
Есть два типа USE флагов: <e>глобальные</e> и <e>локальные</e>.
</p>

<ul>
  <li>
    <e>Глобальный</e> USE флаг используется несколькими пакетами и является
    системным. Это то, что большинство видит в качестве USE флагов.
  </li>
  <li>
    <e>Локальный</e> USE флаг используется единичным пакетом для настройки
    определенных параметров самого пакета.
  </li>
</ul>

<p>
Список доступных глобальных USE флагов можно найти <uri
link="/dyn/use-index.xml">в сети</uri> или локально в
<path>/usr/portage/profiles/use.desc</path>.
</p>

<p>
Список локальных USE флагов находится в вашей системе в
<path>/usr/portage/profiles/use.local.desc</path>.
</p>

</body>
</subsection>
</section>
<section>
<title>Использование USE флагов</title>
<subsection>
<title>Объявление постоянных USE флагов</title>
<body>

<p>
В надежде, что вы убедились в важности USE флагов, теперь мы расскажем, как их 
объявлять.
</p>

<p>
Как сказано ранее, все USE флаги объявляются в переменной <c>USE</c>.
Чтобы упростить пользователям поиск и выбор флагов, мы предлагаем значение
USE <e>по умолчанию</e>, которое представляют собой список USE флагов,
как нам кажется, наиболее часто используемых пользователями Gentoo. Это
значение приведено в файле <path>make.defaults</path> вашего профиля.
</p>

<p>
Профиль, на который ориентируется ваша система, указывается символьной ссылкой
<path>/etc/portage/make.profile</path>. Каждый профиль основывается на предыдущем, 
более крупном, а итоговый складывается из всех профилей. Верхним является
<path>базовый</path> профиль (<path>/usr/portage/profiles/base</path>).
</p>

<p>
Давайте взглянем на значение по умолчанию для профиля 10.0:
</p>

<pre caption="Итоговая переменная USE make.defaults для профиля 10.0">
<comment>(в этом примере объединяются значения из base, default/linux,
default/linux/x86 и default/linux/x86/10.0/)</comment>
USE="a52 aac acpi alsa branding cairo cdr dbus dts dvd dvdr emboss encode exif
fam firefox flac gif gpm gtk hal jpeg lcms ldap libnotify mad mikmod mng mp3
mp4 mpeg ogg opengl pango pdf png ppds qt3support qt4 sdl spell
startup-notification svg tiff truetype vorbis unicode usb X xcb x264 xml xv 
xvid"
</pre>

<p>
Как видите, эта переменная уже содержит достаточно много ключевых слов. <b>Не
меняйте</b> файл <path>make.defaults</path> для настройки переменной <c>USE</c>
под свои нужды: изменения в этом файле аннулируются при обновлении Portage!
</p>

<p>
Для изменения значения по умолчанию, нужно добавлять или удалять ключевые
слова из переменной <c>USE</c>. Это делается глобально, определением переменной 
<c>USE</c> в <path>/etc/portage/make.conf</path>. В эту переменную можно добавить
нужные вам USE флаги, или удалить ненужные. Для удаления флага, его надо 
указывать со знаком минус в виде приставки (&laquo;-&raquo;). 
</p>

<p>
Например, чтобы убрать поддержку KDE и QT, но добавить поддержку ldap,
можно определить в <path>/etc/portage/make.conf</path> переменную <c>USE</c> следующего 
вида:
</p>

<pre caption="Пример значения USE в /etc/portage/make.conf">
USE="-kde -qt4 ldap"
</pre>

</body>
</subsection>
<subsection>
<title>Объявление USE флагов для отдельных пакетов</title>
<body>

<p>
Иногда нужно определить некоторые USE флаги только для одного или нескольких
пакетов, не трогая системных настроек. Для этого необходимо создать каталог
<path>/etc/portage</path> (если его еще нет) и отредактировать файл
<path>/etc/portage/package.use</path>. Обычно это отдельный файл, но может
быть и каталогом. За более детальной информацией обратитесь к man-странице
<c>portage</c>. Следующие примеры предполагают, что <path>package.use</path>
является отдельным файлом.
</p>

<p>
Например, вам не нужна глобальная поддержка <c>berkdb</c>, но она необходима в
<c>mysql</c>: 
</p>

<pre caption="Пример /etc/portage/package.use">
dev-db/mysql berkdb
</pre>

<p>
Естественно, можно в явном виде <c>отключить</c> USE флаги для определенного 
пакета. Например, если вам не нужна поддержка <c>java</c> в PHP:
</p>

<pre caption="Второй пример /etc/portage/package.use">
dev-php/php -java
</pre>

</body>
</subsection>
<subsection>
<title>Объявление временных USE флагов</title>
<body>

<p>
Иногда необходимо установить какой-то USE флаг только на один раз. Вместо того,
чтобы дважды редактировать <path>/etc/portage/make.conf</path> (сначала добавить
изменения USE, а потом удалить), можно просто объявить USE как переменную 
среды. Помните, что при переустановке или обновлении приложения (явном или в
составе обновления системы) ваши изменения будут утеряны! 
</p>

<p>
Например, уберем java из значения USE на время установки seamonkey.
</p>

<pre caption="Использование USE в виде переменной среды">
# <i>USE="-java" emerge seamonkey</i>
</pre>

</body>
</subsection>
<subsection>
<title>Приоритет</title>
<body>

<p>
Конечно же, существует определенная последовательность формирования значения
USE. Вы же не хотите объявить <c>USE="-java"</c> только для того, чтобы узнать,
что <c>java</c> все еще включена из-за значения с более высоким приоритетом. 
Последовательность установки значения USE в порядке приоритета (от меньшего 
к большему) такова:
</p>

<ol>
  <li>
    значение USE по умолчанию, объявленное в файлах <path>make.defaults</path> 
    в составе вашего профиля
  </li>
  <li>
    значение, определенное пользователем в <path>/etc/portage/make.conf</path>
  </li>
  <li>
    значение, указанное пользователем в <path>/etc/portage/package.use</path>
  </li>
  <li>
    значение, определенное пользователям в переменной среды
  </li>
</ol>

<p>
Чтобы узнать, какие же настройки <c>USE</c> в конечном счете видит Portage,
запустите <c>emerge --info</c>. Эта команда выводит значения всех переменных
(включая <c>USE</c>), используемые Portage.
</p>

<pre caption="Запуск emerge --info">
# <i>emerge --info</i>
</pre>

</body>
</subsection>
<subsection>
<title>Адаптация всей системы под новые USE флаги</title>
<body>

<p>
Если вы изменили свои USE флаги и хотите обновить всю систему в соответствии с 
новым значением USE, запустите <c>emerge</c> с параметром <c>--newuse</c>:
</p>


<pre caption="Пересборка всей системы">
# <i>emerge --update -deep --newuse world</i>
</pre>

<p>
Теперь запустите функцию Portage depclean, чтобы удалить условные зависимости,
присутствующие в &laquo;старой&raquo; системе, но больше не нужные при новом
составе USE флагов.
</p>

<warn>
Запуск <c>emerge --depclean</c> является опасной операцией, которую следует
использовать с осторожностью. Дважды проверьте список &laquo;ненужных&raquo; 
пакетов и убедитесь, что не удалятся нужные пакеты. В следующем примере мы 
добавляем ключ <c>-p</c>, чтобы depclean только перечислил пакеты, не удаляя 
их.
</warn>

<pre caption="Удаление ненужных пакетов">
# <i>emerge -p --depclean</i>
</pre>

<p>
Когда depclean закончит свою работу, запустите <c>revdep-rebuild</c>, чтобы
пересобрать программы, динамически связанные с библиотеками, входящими в
потенциально удаленные пакеты. <c>revdep-rebuild</c> входит в пакет 
<c>gentoolkit</c>, так что не забудьте сначала установить его. 
</p>

<pre caption="Запуск revdep-rebuild">
# <i>revdep-rebuild</i>
</pre>

<p>
После выполнения всех этих действий, ваша система будет полностью использовать 
новые значения USE флагов.
</p>

</body>
</subsection>
</section>
<section>
<title>USE флаги отдельных пакетов</title>
<subsection>
<title>Просмотр доступных USE флагов</title>
<body>

<p>
Возьмем, к примеру, <c>seamonkey</c> &mdash; какие USE флаги она может
использовать? Чтобы это выяснить, запустим <c>emerge</c> с параметрами
<c>--pretend</c> и <c>--verbose</c>:
</p>

<pre caption="Просмотр используемых USE флагов">
# <i>emerge --pretend --verbose seamonkey</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild R ] www-client/seamonkey-1.0.7 USE="crypt gnome java -debug -ipv6
-ldap -mozcalendar -mozdevelop -moznocompose -moznoirc -moznomail -moznopango
-moznoroaming -postgres -xinerama -xprint" 0 kB
</pre>

<p>
<c>emerge</c> &mdash; не единственное средство для решения этой задачи. 
Существует программа, специально предназначенная для вывода информация о 
пакетах. Она называется <c>equery</c> и находится в пакете <c>gentoolkit</c>. 
Для начала установим этот пакет:
</p>

<pre caption="Установка gentoolkit">
# <i>emerge gentoolkit</i>
</pre>

<p>
Теперь для просмотра USE флагов какого-нибудь пакета запустим <c>equery</c> с 
аргументом <c>uses</c>. Пусть это будет пакет <c>gnumeric</c>: 
</p>

<pre caption="Запуск equery для просмотра доступных USE флагов">
# <i>equery --nocolor uses =gnumeric-1.6.3 -a</i>
[ Searching for packages matching =gnumeric-1.6.3... ]
[ Colour Code : set unset ]
[ Legend : Left column (U) - USE flags from make.conf        ]
[ : Right column (I) - USE flags packages was installed with ]
[ Found these USE variables for app-office/gnumeric-1.6.3 ]
 U I
- - debug  : Enable extra debug codepaths, like asserts and extra output.
             If you want to get meaningful backtraces see
             http://www.gentoo.org/proj/en/qa/backtraces.xml.
+ + gnome  : Adds GNOME support
+ + python : Adds support/bindings for the Python language
- - static : !!do not set this during bootstrap!! Causes binaries to be
             statically linked instead of dynamically
</pre>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-date: 2012-07-24
source-cvs-revision: 1.52
translated-by: unknown up to v1.23
edited-by: Azamat H. Hackimov; Alexey Chumakov [achumakov@gentoo.org]
edited-by: Vladimir Romanov [blueboar2@gmail.com]
-->
