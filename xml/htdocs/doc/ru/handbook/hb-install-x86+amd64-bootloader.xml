<?xml version='1.0' encoding='UTF-8'?>

<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-install-x86+amd64-bootloader.xml,v 1.5 2014/01/03 03:33:17 blueboar Exp $ -->

<sections>

<version>7</version>
<date>2013-12-31</date>

<section>
<title>Выбор загрузчика</title>
<subsection>
<title>Введение</title>
<body>

<p>
Теперь, когда ядро настроено и собрано, а нужные конфигурационные файлы 
заполнены как надо, пришло время установить программу, которая будет запускать 
ваше ядро при старте системы. Такого рода программа называется 
<e>загрузчиком</e>. 
</p>

</body>

<body test="contains('AMD64 x86', func:keyval('arch'))">
<p>
Для архитектуры <keyval id="arch"/> в Gentoo Linux есть загрузчики 
<uri link="#grub2">GRUB2</uri>, <uri link="#lilo">LILO</uri> и <uri link="#grub">GRUB Legacy</uri>.
</p>
</body>

<body>
<p>
Но прежде, чем приступить к установке загрузчика, мы расскажем, как настроить 
кадровый буфер (естественно, если вы захотите). С помощью кадрового буфера 
можно работать в командной строке Linux на фоне графических элементов
(например, симпатичного изображения из загрузочной заставки Gentoo).
</p>

</body>
</subsection>
<subsection>
<title>Дополнительно: кадровый буфер</title>
<body>

<p>
<e>Если</e> вы настроили в ядре поддержку кадрового буфера (или оставили 
настройки по умолчанию при использовании <c>genkernel</c>), вы можете включить 
буфер, добавив параметр <c>video</c> в файл конфигурации своего загрузчика.
</p>

<p>
Прежде всего, вам нужно знать ваше устройство кадрового буфера. Вы должны
использовать <c>uvesafb</c> в качестве <e>драйвера VESA</e>.
</p>

<p>
Параметр <c>video</c> отвечает за порядок отображения кадрового буфера. В нем 
указывается название драйвера кадрового буфера, а затем режимы, которые нужно 
включить. Все режимы приведены в <path>/usr/src/linux/Documentation/fb/vesafb.txt</path>.
Самые частоиспользуемые опции следующие:
</p>

<table>
<tr>
  <th>Переменная</th>
  <th>Описание</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    считать, что видеоплата может закольцовывать свою память (продолжать 
    выборку с начального адреса, когда достигнут конечный) 
  </ti>
</tr>
<tr>
  <ti>mtrr:<c>n</c></ti>
  <ti>
    установка регистров MTRR; допустимые значения <c>n</c>:<br/>
    0 - отключено<br/>
    1 - без кэширования<br/>
    2 - отложенная запись (write-back)<br/>
    3 - объединенная запись (write-combining)<br/>
    4 - сквозная запись (write-through)<br/>
  </ti>
</tr>
<tr>
  <ti><c>mode</c></ti>
  <ti>
    Установить разрешение, цветность и частоту кадров. Например, 
    <c>1024x768-32@85</c> для разрешения 1024x768, 32-битного цвета и частоты 
    кадров 85 Гц. 
  </ti>
</tr>
</table>

<p>
В результате должно получиться что-то вроде
<c>video=uvesafb:mtrr:3,ywrap,1024x768-32@85</c>. Запишите
составленное значение, скоро оно понадобится.
</p>

<p test="func:keyval('arch')='IA64'">
Теперь вам нужно установить <uri link="#elilo">загрузчик elilo</uri>.
</p>

<p test="not(func:keyval('arch')='IA64')">
Перейдем к установке <uri link="#grub">GRUB</uri>, <uri link="#grub2">GRUB2</uri>
<e>или</e> <uri link="#lilo">LILO</uri>.
</p>

</body>
</subsection>
</section>

<section id="grub2" test="contains('AMD64 x86', func:keyval('arch'))">
<title>По умолчанию: Используем GRUB2</title>
<subsection>
<title>Установка GRUB2</title>
<body>

<p>
GRUB2 находится в пакете <c>sys-boot/grub</c>.
</p>

<pre caption="Устанавливаем GRUB2">
# <i>emerge sys-boot/grub</i>
</pre>

<p>
Программа GRUB2 теперь установлена на вашей системе, но еще не активирована.
</p>

</body>
</subsection>
<subsection>
<title>Конфигурирование GRUB2</title>
<body>

<p>
Прежде всего, давайте установим необходимые файлы GRUB2 в <path>/boot/grub</path>.
Если предположить, что первый диск (тот, откуда система загружается),
называется <path>/dev/sda</path>, то следующая команда сделает это за нас:
</p>

<pre caption="Устанавливаем файлы GRUB2 в /boot/grub">
# <i>grub2-install /dev/sda</i>
</pre>

<p>
Далее, мы можем сгенерировать конфигурацию GRUB2 на основании конфигурации из файла
<path>/etc/default/grub</path> и скриптов <path>/etc/grub.d</path>. В большинстве
случаев, пользователю не нужно выполнять никакую конфигурацию, так как GRUB2 автоматически
определит ядро для загрузки (ядро самой высокой версии, которое находится в
<path>/boot</path>), а также то, какая файловая система является корневой.
</p>

<p>
Для генерации финальной конфигурации GRUB2, выполните команду <c>grub2-mkconfig</c>:
</p>

<pre caption="Генерируем конфигурацию GRUB2">
# <i>grub2-mkconfig -o /boot/grub/grub.cfg</i>
Generating grub.cfg ...
Found linux image: /boot/<keyval id="kernel-name" />
Found initrd image: /boot/<keyval id="genkernel-initrd" />
done
</pre>

<p>
В выводе команды <e>должно</e> быть указано, что найдено хотя бы одно ядро Linux
так как оно нужно для загрузки системы. Если вы используете initramfs, либо
использовали <c>genkernel</c> для компиляции ядра, также должен определиться
правильный образ initrd. Если этого не произошло, перейдите в <path>/boot</path>
и проверьте его содержимое с помощью команды <c>ls</c>. Если файлы и в самом деле
отсутствуют, вернитесь к инструкциям по конфигурации и установке ядра.
</p>

</body>
</subsection>
</section>

<section id="lilo" test="contains('AMD64 x86', func:keyval('arch'))">
<title>Альтернатива: использование LILO</title>
<subsection>
<title>Установка LILO</title>
<body>

<p>
LILO (сокращение от LInux LOader) &mdash; это проверенная временем рабочая 
лошадка среди загрузчиков Linux-систем. Но ей недостает ряда возможностей,  
которые есть в GRUB (и в том числе в этом заключается причина растущей 
популярности GRUB). LILO все еще используется, потому что на некоторых системах 
он работает, а GRUB &mdash; нет. Конечно же, он используется еще и потому, что 
многие просто знакомы с LILO и сроднились с ним. Так или иначе, в Gentoo 
поддерживаются оба загрузчика, и вы, видимо, решили использовать LILO.
</p>

<p>
Установка LILO в систему проста как пробка: просто используйте <c>emerge</c>.
</p>

<pre caption = "Установка LILO">
# <i>emerge lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Настройка LILO</title>
<body>

<p>
Для настройки LILO нужно создать файл <path>/etc/lilo.conf</path>. Запустите 
свой любимый редактор (в руководстве мы для единообразия используем 
<c>nano</c>) и создайте файл. 
</p>

<pre caption = "Создание /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Несколькими разделами раньше мы попросили вас запомнить название созданного 
файла образа ядра. В следующем примере <path>lilo.conf</path> мы используем
нашу схему разбивки для примера.
</p>

<p>
Удостоверьтесь, что у себя вы указываете имя <e>своего</e> файла образа ядра, и 
при необходимости имя <e>своего</e> образа начального корневого диска (initrd).
</p>

<note>
Если ваша корневая файловая система &mdash; JFS, <e>необходимо</e> добавить
&laquo;ro&raquo; в строку <c>kernel</c>, поскольку JFS 
&laquo;накатывает&raquo; свой журнал перед тем, как разрешить монтирование 
раздела на чтение-запись.
</note>

<pre caption="Пример /etc/lilo.conf">
boot=/dev/sda         <comment># установка LILO в MBR</comment>
prompt                <comment># предоставление шанса выбора другого варианта</comment>
timeout=50            <comment># ожидание пять секунд до загрузки варианта по умолчанию</comment>
default=gentoo        <comment># по истечении времени загрузка варианта gentoo</comment>

image=/boot/<keyval id="kernel-name"/>
  label=gentoo        <comment># название этого варианта</comment>
  read-only           <comment># запуск с корневой ФС только для чтения; не менять!</comment>
  root=/dev/sda4      <comment># расположение корневой файловой системы</comment>

image=/boot/<keyval id="kernel-name"/>
  label=gentoo.rescue   <comment># название этого варианта</comment>
  read-only             <comment># запуск с корневой ФС только для чтения; не менять!</comment>
  root=/dev/sda4        <comment># расположение корневой файловой системы</comment>
  append="init=/bin/bb" <comment># запустить оболочку восстановления Gentoo</comment>

<comment># следующие две строки нужны только для двойной загрузки с Windows</comment>
<comment># в этом примере Windows находится на /dev/sda6</comment>
other=/dev/sda6
  label=windows
</pre>

<note>
Если вы разбили жесткий диск по-другому, или у вас другое ядро, внесите 
необходимые изменения.
</note>

<p>
Если при компиляции ядра Linux вы решили включить initramfs для загрузки, то вам
нужно изменить конфигурацию, указав на этот файл initramfs, и сказав initramfs,
где находится настоящее корневое устройство:
</p>

<pre caption="LILO snippet for initramfs-enabled kernel builds">
image=/boot/<keyval id="kernel-name"/>
   label=gentoo
   read-only
   <i>append="real_root=/dev/sda4"</i>
   <i>initrd=/boot/<keyval id="genkernel-initrd" /></i>
</pre>

<p>
Если нужно передать ядру дополнительные параметры, добавьте в соответствующий 
раздел файла выражение <c>append</c>. Например, добавим параметр <c>video</c> 
для включения кадрового буфера: 
</p>

<pre caption = "Использование append для добавления параметров ядра">
image=/boot/<keyval id="kernel-name"/>
  label=gentoo
  read-only
  root=/dev/sda4
  <i>append="video=uvesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
Если вы используете ядро 2.6.7 или выше, а объем жесткого диска ограничили 
перемычками из-за того, что BIOS не в состоянии работать с дисками большого
размера, вам потребуется добавить <c>sda=stroke</c>. Замените sda на имя
устройства, которое требует данную опцию.
</p>

<p>
Тем, кто использует <c>genkernel</c>, нужно помнить, что их ядро использует 
такие же загрузочные параметры, как на установочном компакт-диске. Например, 
если у вас есть устройства SCSI, следует передать ядру параметр 
<c>doscsi</c>.
</p>

<p>
Теперь сохраните файл и выйдите из редактора. Для окончания установки 
нужно запустить <c>/sbin/lilo</c>, чтобы LILO смог отразить настройки, 
сделанные в <path>/etc/lilo.conf</path>, в вашей системе (т.е. записался на 
диск). Имейте в виду, что при каждой установке нового ядра или изменении меню 
вам потребуется выполнять <c>/sbin/lilo</c> заново.
</p>

<pre caption = "Завершение установки LILO">
# <i>/sbin/lilo</i>
</pre>

<p>
Если у вас есть вопросы по использованию LILO, посмотрите
<uri link="http://en.wikipedia.org/wiki/LILO_(boot_loader)">страницу в Википедии</uri>,
посвященную данной программе.
</p>

<p>
Переходите к <uri link="#reboot">перезагрузке системы</uri>.
</p>

</body>
</subsection>
</section>

<section id="grub" test="contains('AMD64 x86',func:keyval('arch'))">
<title>Альтернатива: использование GRUB Legacy</title>

<subsection>
<title>Что такое Legacy?</title>
<body>

<p>
GRUB был переработан, и теперь существует новая версия, называемая GRUB2. Новый
код GRUB2 очень отличается от GRUB, и именно поэтому версия GRUB теперь называется
Legacy (наследием).
</p>
</body>
</subsection>

<subsection>
<title>Введение в терминологию GRUB</title>
<body>

<p>
Самое сложное в освоении GRUB &mdash; освоиться с тем, как в нем именуются 
жесткие диски и разделы. Ваш Linux-раздел <path>/dev/sda2</path>, скорее всего, 
в GRUB станет называться <path>(hd0,1)</path>. Обратите внимание на круглые 
скобки вокруг <path>hd0,1</path> &mdash; они обязательны.
</p>

<p>
Жесткие диски нумеруются, начиная с нуля, а не с &laquo;а&raquo;; разделы 
&mdash; c нуля, а не с единицы. Нужно помнить, что в виде hd нумеруются только
жесткие диски, но не устройства atapi-ide, такие как приводы компакт-дисков.
Та же нумерация используется для устройств SCSI (обычно им присваиваются номера 
большие, чем устройствам IDE, кроме случаев, когда BIOS настроен на загрузку с 
устройства SCSI). Когда BIOS настроен на загрузку с другого жесткого диска 
(например, с первичного ведомого), <e>именно этот</e> жесткий диск и становится 
<path>hd0</path>.
</p>

<p>
Например, если у вас есть жесткий диск <path>/dev/sda</path>, и еще два
<path>/dev/sdb</path> и <path>/dev/sdc</path>, то <path>/dev/sdb7</path>
будет соответствовать <path>(hd1,6)</path>. Возможно, это покажется запутанным 
(так и есть), но, как мы увидим, в GRUB есть механизм автодополнения по tab, 
облегчающий жизнь обладателям множества жестких дисков и разделов, а также тем, 
кто теряется в схеме нумерации устройств GRUB.
</p>

<p>
Почувствовав, что к чему, пора установить GRUB.
</p>

</body>
</subsection>
<subsection>
<title>Установка GRUB</title>
<body>

<p>
Для установки GRUB Legacy сначала добавим его в систему:
</p>

<impo test="func:keyval('arch')='AMD64'">
Если вы используете 
<uri link="?part=1&amp;chap=6#doc_chap2">профиль</uri> без использования
32-битных библиотек, и все равно хотите устанавливать Grub Legacy вместо
GRUB2, вы <b>не</b> должны устаналивать <c>grub:0</c>, а, вместо него,
должны установить <c>grub-static</c> (это возможно, только если вы
включили эмуляцию IA-32).
</impo>

<pre caption="Установка GRUB">
# <i>emerge sys-boot/grub:0</i>
</pre>

<p>
Хотя GRUB уже установлен, нам еще потребуется подправить его файл конфигурации,
и поместить GRUB в MBR, чтобы он автоматически загружал ядро. С помощью 
<c>nano</c> (или другого редактора) создайте <path>/boot/grub/grub.conf</path>:
</p>

<pre caption="Создание /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Теперь заполним <path>grub.conf</path> своими значениями. Удостоверьтесь, что у 
себя вы указываете имя <e>своего</e> файла образа ядра, и при необходимости имя 
<e>своего</e> образа начального корневого диска (initrd).
</p>

<note>
Grub назначает имена устройствам из BIOS. Если вы измените настройки BIOS,
ваши буквы и цифры в именах устройств могут также измениться. Например,
если вы измените порядок загрузки с устройств, вам может понадобиться также
изменить вашу конфигурацию grub.
</note>

<note>
Если ваша корневая файловая система &mdash; JFS, <e>необходимо</e> добавить
&laquo; ro&raquo; в строку <c>kernel</c>, поскольку JFS 
&laquo;накатывает&raquo; свой журнал перед тем, как разрешить монтирование 
раздела на чтение-запись.
</note>

<note>
Если кроме Linux вы также хотите пользоваться Windows, то пример разбивки,
который используется в данной книге будет недостаточен (в нашем примере мы
используем все четыре первичных раздела для Linux, в то время как хотя бы
один из них должен быть расширенным, если мы хотим установить Windows на
логический раздел). Продолжайте с осторожностью, и считайте примеры, которые
приведены ниже только примерами. Их нужно будет изменить под ваши нужды.
</note>

<pre caption = "Пример grub.conf">
<comment># какой пункт загружать по умолчанию: 0 - первый, 1 - второй и т.д.</comment>
default 0
<comment># сколько секунд ждать до начала загрузки пункта по умолчанию</comment>
timeout 30
<comment># симпатичная заставка, добавить по вкусу :)
# закомментируйте, если у вас не установлена графическая видеоплата</comment>
splashimage=(hd0,1)/boot/grub/splash.xpm.gz

title Gentoo Linux <keyval id="kernel-version"/>
<comment># раздел с файлом образа ядра (или операционной системой)</comment>
root (hd0,1)
kernel /boot/<keyval id="kernel-name"/> root=/dev/sda4

title Gentoo Linux <keyval id="kernel-version"/> (rescue)
<comment># раздел с файлом образа ядра (или операционной системой)</comment>
root (hd0,1)
kernel /boot/<keyval id="kernel-name"/> root=/dev/sda4 init=/bin/bb

<comment># следующие 4 строки нужны только, если вы также используете</comment>
<comment># также систему с Windows. В данном случае, мы считаем, что</comment>
<comment># Windows находится на /dev/sda6</comment>
title Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<p>
Если при компиляции ядра Linux вы решили включить initramfs для загрузки, то вам
нужно изменить конфигурацию, указав на этот файл initramfs, и сказав initramfs,
где находится настоящее корневое устройство:
</p>

<pre caption="Выдержка из GRUB для ядер со включенным initramfs">
title Gentoo Linux <keyval id="kernel-version"/>
root (hd0,1)
kernel /boot/<keyval id="kernel-version"/> <i>real_</i>root=/dev/sda4
<i>initrd /boot/<keyval id="genkernel-initrd"/></i>
</pre>

<p>
Если вы разбили жесткий диск по-другому, или у вас другое ядро, внесите 
необходимые изменения. При этом убедитесь, что все пути, следующие
за упоминанием устройства GRUB (например <path>(hd0,1)</path>), приведены
относительно точки подключения, а не корня файловой системы. Другими словами,
<path>(hd0,1)/grub/splash.xpm.gz</path> &mdash; на самом деле 
<path>/boot/grub/splash.xpm.gz</path>, так как <path>(hd0,1)</path> &mdash; это
<path>/boot</path>.
</p>

<p>
Кроме того, если вы избрали другую схему разбиения диска, и не выделяли для 
<path>/boot</path> отдельный раздел, префикс <path>/boot</path>,  
использованный в примерах выше, <e>обязателен</e>. Если же вы следовали 
рекомендованному нами плану разбиения, префикс <path>/boot</path> 
не требуется, но все работает благодаря символьной ссылке <path>boot</path>.
Короче говоря, приведенные примеры должны работать независимо от того, 
есть у вас отдельный раздел для <path>/boot</path> или нет.
</p>

<p>
Если вам надо передать ядру дополнительные параметры, просто добавьте их в
конец строки kernel. Один параметр мы уже передаем ядру (<c>root=/dev/sda4</c> 
или <c>real_root=/dev/sda4</c>); можно добавлять и другие, например,
параметр <c>video</c> для кадрового буфера, обсуждавшийся выше.
</p>

<p>
Если файл конфигурации вашего начального загрузчика содержит параметр
real_root, то используйте параметр real_rootflags для установки опций 
монтирования корневой файловой системы.
</p>

<p>
Если вы используете ядро 2.6.7 или выше, а объем жесткого диска ограничили 
перемычками из-за того, что BIOS не в состоянии работать с дисками большого
размера, вам потребуется добавить <c>sda=stroke</c>. Замените sda на
устройство, которое требует данную опцию.
</p>

<p>
Тем, кто использует <c>genkernel</c>, нужно помнить, что их ядро использует 
такие же загрузочные параметры, как на установочном компакт-диске. Например, 
если у вас есть устройства SCSI, следует передать ядру параметр <c>doscsi</c>.
</p>

<p>
Теперь сохраните <path>grub.conf</path> и выйдите из редактора. Вам по-прежнему 
необходимо записать GRUB в MBR (Master Boot Record), чтобы GRUB автоматически 
запускался при загрузке системы.
</p>

<p>
Разработчики GRUB рекомендуют использовать <c>grub-install</c>. Однако, на 
случай некорректной работы <c>grub-install</c> есть возможность записать GRUB 
вручную.
</p>

<p>
Переходите к разделу <uri link="#grub-install-auto">по умолчанию:
установка GRUB с помощью grub-install</uri> или <uri
link="#grub-install-manual">альтернатива: установка GRUB вручную</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>По умолчанию: установка GRUB с помощью grub-install</title>
<body>

<p>
Для установки GRUB вам надо выполнить команду <c>grub-install</c>. 
Однако, <c>grub-install</c> не заработает сам по себе, т.к. мы находимся в
среде с измененным корневым каталогом. Нам нужно создать файл 
<path>/etc/mtab</path>, перечислив в нем все смонтированные файловые системы. К 
счастью, для этого есть очень легкий способ: просто скопируйте содержимое 
<path>/proc/mounts</path> поверх <path>/etc/mtab</path>, исключив строку 
<c>rootfs</c>, если вы не создавали отдельный загрузочный раздел. Следующая 
команда подойдет в обоих случаях:
</p>

<pre caption="Создание /etc/mtab">
# <i>grep -v rootfs /proc/mounts &gt; /etc/mtab</i>
</pre>

<p>
При использовании дисков virtio Linux, нам нужно сказать grub, где нужно
искать диски, так как в противном случае команда <c>grub-install</c> не
сможет выполниться. Это делается путем добавления описания устройства
в файл <path>device.map</path>:
</p>

<pre caption="Добавляем диск virtio к таблице устройств">
# <i>echo "(hd0) /dev/vda" >> /boot/grub/device.map</i>
</pre>

<p>
Теперь мы можем установить GRUB, используя <c>grub-install</c>:
</p>

<pre caption="Выполнение grub-install">
# <i>grub-install --no-floppy /dev/sda</i>
</pre>

<p>
Если у вас есть вопросы о GRUB, пожалуйста, обратитесь к <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ (англ.)</uri>,
<uri link="http://grub.enbug.org/GrubLegacy">GRUB Wiki</uri>, или прочитайте
<c>info grub</c> в вашем терминале.
</p>

<p>
Переходите к <uri link="#reboot">перезагрузке системы</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Альтернатива: установка GRUB вручную</title>
<body>

<p>
Для начала настройки, введите <c>grub</c>. Вы увидите приглашение 
<path>grub&gt;</path> &mdash; это командная строка grub. Теперь потребуется
набрать команды, нужные для установки загрузочной записи GRUB на ваш жесткий 
диск.
</p>

<pre caption ="Запуск оболочки GRUB">
# <i>grub --no-floppy</i>
</pre>

<note>
Если у вас нет приводов для дискет, к приведенной команде добавьте 
<c>--no-floppy</c>, чтобы grub зря не опрашивал несуществующие дисководы.
</note>

<p>
В приводимом примере мы хотим установить GRUB так, чтобы он считывал нужную 
информацию с загрузочного раздела <path><keyval id="/boot"/></path>, а загрузочная запись
GRUB находилась в MBR (Master Boot Record) жесткого диска, чтобы первое, что мы 
видели после включения компьютера &mdash; это приглашение GRUB. Естественно, 
если вы при установке отклонялись от предлагаемой схемы, внесите необходимые
поправки.
</p>

<p>
Находясь в GRUB, можно использовать автодополнение по клавише TAB. К примеру, 
если ввести &laquo;<c>root (</c>&raquo;, а затем TAB, появится список 
устройств (таких как <path>hd0</path>). Если ввести &laquo;<c>root 
(hd0,</c>&raquo; и нажать TAB, появится список для выбора раздела из возможных 
(такого как <path>hd0,1</path>).
</p>

<p>
Благодаря автодополнению установка GRUB не так сложна. Теперь приступим к 
настройке GRUB.
</p>

<pre caption ="Установка GRUB в MBR">
grub&gt; <i>root (hd0,1)</i>          <comment>(указание расположения раздела с /boot)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(установка GRUB в MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(выход из оболочки GRUB)</comment>
</pre>

<note>
Если вы хотите установить GRUB в определенный раздел вместо MBR, команду 
<c>setup</c> потребуется исправить так, чтобы она указывала на нужный раздел.
Например, команда для установки GRUB в <path>/dev/sda4</path> &mdash; <c>setup 
(hd0,3)</c>. Однако, так поступают немногие.
</note>

<p>
Если у вас есть вопросы о GRUB, пожалуйста, обратитесь к <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ (англ.)</uri>,
<uri link="http://grub.enbug.org/GrubLegacy">GRUB Wiki</uri>, или прочитайте
<c>info grub</c> в вашем терминале.
</p>

<p>
Переходите к <uri link="#reboot">перезагрузке системы</uri>.
</p>

</body>
</subsection>
</section>


<section id="elilo" test="func:keyval('arch')='IA64'">
<title>По умолчанию: Установка elilo</title>
<body>

<p>
На платформе IA64, начальный загрузчик называется <c>elilo</c>. Вам может понадобиться
сначала установить его на вашей машине.
</p>

<pre caption="Устанавливаем elilo">
# <i>emerge elilo</i>
</pre>

<p>
Файл конфигурации данной программы находится в файле <path>/etc/elilo.conf</path>,
а файл с примерами - в обычном каталоге с документацией
<path>/usr/share/doc/elilo-&lt;ver&gt;/</path>. Вот еще один пример
конфигурации:
</p>

<pre caption="Пример /etc/elilo.conf">
boot=/dev/sda1
delay=30
timeout=50
default=Gentoo
append="console=ttyS0,9600"
prompt

image=/vmlinuz
       label=Gentoo
       root=/dev/sda2
       read-only

image=/vmlinuz.old
       label=Gentoo.old
       root=/dev/sda2
       read-only
</pre>

<p>
Строка <c>boot</c> указывает elilo на положение загрузочного раздела (в данном
случае, это <path>/dev/sda1</path>). Строка <c>delay</c> устанавливает число
10<sup>х</sup> долей секунды, которые программа будет ждать, прежде чем
автоматически загрузит значения по умолчанию в неинтерактивном режиме. Строка
<c>timeout</c> делает примерно то же самое, что и delay, но для интерактивного
режима. Строка <c>default</c> устанавливает значение по умолчанию (оно
определено ниже). Строка <c>append</c> добавляет дополнительные опции к
командной строке ядра. <c>prompt</c> устанавливает поведение elilo по умолчанию,
как интерактивное.
</p>

<p>
Разделы, которые начинаются с <c>image</c> определяют различные загрузочные
образы. Каждый образ имеет красивую метку <c>label</c>, корневую файловую
систему <c>root</c> и смонтирует корневую файловую систему только для
чтения (<c>read-only</c>).
</p>

<p>
Если при компиляции ядра Linux вы решили включить initramfs для загрузки, то вам
нужно изменить конфигурацию, указав на этот файл initramfs, и сказав initramfs,
где находится настоящее корневое устройство:
</p>

<pre caption="ELILO snippet for initramfs-enabled kernel-builds">
image=/vmlinuz
     label=Gentoo
     <i>initrd=/<keyval id="genkernel-initrd"/></i>
     <i>append = "initrd=<keyval id="genkernel-initrd"/> real_root=/dev/sda2 console=ttyS0,9600"</i>
     read-only
</pre>

<p>
Когда конфигурация закончена, просто запустите <c>elilo --efiboot</c>.
Опция <c>--efiboot</c> добавляет пункт меню для Gentoo Linux в менеджер
загрузки EFI.
</p>

<pre caption="Применяем конфигурацию elilo">
# <i>elilo --efiboot</i>
</pre>

<p>
Теперь продолжайте с <uri link="#reboot">Перезагрузки системы</uri>.
</p>

</body>
</section>

<section id="reboot">
<title>Перезагрузка системы</title>
<subsection>
<body>

<p>
Выйдите из изолированной среды и размонтируйте все смонтированные разделы. 
Затем введите ту самую волшебную команду, которую вы так заждались: 
<c>reboot</c>.
</p>

<pre caption="Размонтирование всех разделов и перезагрузка" test="func:keyval('arch')='IA64'">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount -l /mnt/gentoo/dev{/pts,/shm,}</i>
cdimage ~# <i>umount -l /mnt/gentoo{/boot,/sys,/proc,}</i>
cdimage ~# <i>reboot</i>
</pre>

<pre caption="Размонтирование всех разделов и перезагрузка" test="not(func:keyval('arch')='IA64')">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount -l /mnt/gentoo/dev{/shm,/pts,}</i>
cdimage ~# <i>umount -l /mnt/gentoo{/boot,/proc,}</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Естественно, не забудьте вынуть загрузочный компакт-диск, иначе он загрузится 
сам вместо вашей новой системы Gentoo.
</p>

<p test="func:keyval('arch')='IA64'">
Когда вы перезагрузитесь, вы должны увидеть новую опцию с Gentoo Linux в менеджере
загрузки EFI, при выборе которой произойдет загрузка  Gentoo.
</p>

<p>
Загрузив вновь установленную систему, переходите к <uri 
link="?part=1&amp;chap=11">завершению установки Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-date: 2013-12-31
source-cvs-revision: 1.39
translated-by: Vasiliy Golubev [vas@nightmail.ru]
edited-by: Sergey Kuleshov
edited-by: Alexey Chumakov [achumakov@gentoo.org]
edited-by: Vladimir Romanov [blueboar2@gmail.com]
-->
