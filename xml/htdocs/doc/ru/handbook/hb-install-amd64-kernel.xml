<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/Attic/hb-install-amd64-kernel.xml,v 1.4 2005/11/27 12:11:03 achumakov Exp $ -->

<sections>

<version>2.11</version>
<date>2005-11-26</date>

<section>
<title>Часовой пояс</title>
<body>

<p>
Сначала вы должны выбрать часовой пояс (time zone), чтобы система знала, где вы 
находитесь. Найдите нужный пояс в <path>/usr/share/zoneinfo</path>, затем 
скопируйте его в <path>/etc/localtime</path>. Постарайтесь, пожалуйста, 
избегать использования часовых поясов 
<path>/usr/share/zoneinfo/Etc/GMT*</path>, т. к. их названия не соответствуют
ожидаемым поясам. Например, <path>GMT-8</path> фактически является поясом GMT+8.
</p>

<pre caption="Установка часового пояса">
# <i>ls /usr/share/zoneinfo</i>
<comment>(допустим, вы хотите использовать GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>

<section>
<title>Установка исходных кодов ядра</title>
<subsection>
<title>Выбор ядра</title>
<body>

<p>
Ядро Linux - это то, вокруг чего формируются все дистрибутивы. Это слой между
пользовательскими программами и вашими аппаратными средствами. Пользователи
Gentoo могут использовать один из нескольких типов ядра. Полный их список с
описанием можно найти в <uri link="/doc/en/gentoo-kernel.xml">Руководстве по
выбору ядра Gentoo</uri>.
</p>


<p>
Для AMD64 систем имеется <c>gentoo-sources</c> (ядро ветви 2.6 с заплатками,
специфичными для amd64, улучшающими стабильность, производительность и
поддержку оборудования).
</p>


<p>
Выберите и установите ядро, используя команду <c>emerge</c>. <c>USE="-doc"</c> 
требуется, чтобы на этом этапе избежать установки xorg-x11 или других зависимых 
пакетов:
</p>

<pre caption="Установка исходных кодов ядра">
# <i>USE="-doc" emerge gentoo-sources</i>
</pre>

<p>
Если вы просмотрите содержимое каталога <path>/usr/src</path>, то увидите
символическую ссылку <path>linux</path>, которая указывает на каталог с
исходными кодами ядра:
</p>

<pre caption="Просмотр папки с исходными кодами ядра">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root    root       12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.12-gentoo-r10
</pre>

<p>
Если же это не так (например, ссылка указывает на каталог с исходными кодами
другого ядра), внесите необходимые изменения перед продолжением.
</p>

<pre caption="Смена ссылки">
# <i>rm /usr/src/linux </i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.12-gentoo-r10 linux</i>
</pre>

<p>
Теперь настало время настройки и компиляции ядра. Вы можете использовать
сценарий <c>genkernel</c>, который сформирует стандартное ядро, аналогичное
используемому на установочном компакт-диске. Однако сначала мы расскажем о
"ручной" настройке ядра, т.к. это наиболее подходящий способ оптимизации
системы.
</p>

<p>
Если вы хотите вручную настроить ядро, то переходите к разделу <uri
link="#manual">По умолчанию: Ручная настройка</uri>. Если вы  хотите
использовать <c>genkernel</c>,то читайте <uri link="#genkernel">Альтернатива:
Использование genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>По умолчанию: Ручная настройка</title>
<subsection>
<title>Введение</title>
<body>

<p>
Ручная настройка ядра считается одним из самых сложных вопросов для
пользователей Linux.Зато, после настройки нескольких ядер, вы и не вспомните,
что это было трудно ;)
</p>

<p>
Однако есть одна <e>истина</e>: когда вы запускаете ручную настройку ядра, вы
должны знать аппаратную часть своего компьютера. Большую часть информации можно
получить после установки пакета pciutils (<c>emerge pciutils</c>), который
содержит <c>lspci</c>. После этого вы сможете использовать <c>lspci</c> внутри
временной среды установки. Можете не обращать внимания на предупреждения,
касающиеся <e>pcilib</e> (например: pcilib: cannot open /sys/bus/pci/devices
[pcilib: не могу открыть /sys/bus/pci/devices]), которые выводит на экран
<c>lspci</c>. В качестве альтернативы, вы можете запустить <c>lspci</c> <e>вне
временной среды установки</e>. Результат тот же. Вы также можете запустить
<c>lsmod</c> для просмотра модулей ядра используемых установочным компакт-диском
(это послужит хорошей подсказкой, на предмет того, какие опции надо включить).
</p>

<p>
Теперь войдите в каталог с исходными кодами ядра и введите команду <c>make
menuconfig</c>. Этой командой вы вызовете конфигурационное меню, использующее
ncurses.
</p>

<pre caption="Вызов конфигурационного меню">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Перед вами появятся несколько секций настроек. Мы сначала перечислим пункты,
которые надо активировать (иначе Gentoo не будет работать, или будет работать
не так как надо без дополнительных настроек).
</p>

</body>
</subsection>
<subsection>
<title>Активация нужных пунктов</title>
<body>

<p>
Прежде всего разрешите использование разрабатываемых и экспериментальных
кодов/драйверов. Если этого не сделать, вы не увидите некоторых важных пунктов:
</p>

<pre caption="Выбор эксперементального кода/драйверов">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers"
</pre>

<p>
Теперь перейдите к пункту меню <c>General Setup</c> и так как ядро 2.6 является
ядром по умолчанию и только оно поддерживается на платформе AMD64, мы включим
поддержку &quot;горячего&quot; подключения устройств (<c>support for
hot-pluggable devices</c>) для использования совместно с udev.
</p>

<pre caption="General Support">
General setup ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Далее вам необходимо выбрать тип процессора.
</p>

<pre caption="Выбор типа процессора">
Processor type and features  --->
  Processor family (AMD-Opteron/Athlon64)  --->
    ( ) AMD-Opteron/Athlon64
    ( ) Intel EM64T
    ( ) Generic-x86-64"
</pre>

<p>
Теперь войдите в <c>File Systems</c> и выберите поддержку всех нужных вам
файловых систем. <e>Не</e> компилируйте их как модули, иначе система Gentoo не
сможет смонтировать эти разделы. Также выберите <c>Virtual memory</c> и
<c>/proc file system</c>. <e>Не</e> выбирайте <c>/dev file system</c>, так как
Gentoo/AMD64 по умолчанию использует <c>udev</c>.
</p>

<pre caption="Выбор необходимых файловых систем">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [ ] /dev file system support (OBSOLETE)
    [*] Virtual memory file system support (former shm fs)

<comment>(Включите поддержку одной или нескольких из нижеперечисленных ФС, в соответствии с вашими потребностями)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Если вы используете PPPoE или dial-up для соединения с интернетом, вам нужно
включить в ядре следующие опции:
</p>

<pre caption="Выбор нужных драйверов PPPoE">
Device Drivers ---&gt;
  Networking Support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Две опции сжатия данных не являются необходимыми, но и вреда от них тоже не
будет. То же относится и к опции <c>PPP over Ethernet</c> которая нужна только
для <c>rp-pppoe</c>, сконфигурированного для работы с PPPoE в ядре.
</p>

<p>
Если вам надо использовать сетевые карты, то не забудьте включить в ядре их
поддержку.
</p>

<p>
Если у вас многопроцессорная система на базе Opteron, то вам надо включить
"Symmetric multi-processing support":
</p>

<pre caption="Активация поддержки SMP">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Если вы используете USB устройства ввода (например мышь или клавиатуру), не
забудьте включить их поддержку:
</p>

<pre caption="Включение поддержки USB для устройств ввода">
Device Drivers ---&gt;
  USB Support ---&gt;
    &lt;*&gt;   USB Human Interface Device (full HID) support
  [*] HID input layer support
</pre>

<p>
Когда вы закончите настройку ядра, можете переходить к разделу <uri
link="#compiling">Компиляция и установка</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Компиляция и установка</title>
<body>

<p>
Теперь ваше ядро настроено, настало время его скомпилировать и  установить.
Выйдете из конфигурационного меню и запустите процесс компиляции:
</p>

<pre caption="Компиляция ядра">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Когда ядро будет скомпилировано, скопируйте образ ядра в каталог
<path>/boot</path>.
</p>

<pre caption="Установка ядра">
# <i>cp arch/x86_64/boot/bzImage /boot/kernel-2.6.12-gentoo-r10</i>
</pre>

<p>
Также стоит скопировать ваш конфигурационный файл ядра в каталог
<path>/boot</path>, так, на всякий случай :)
</p>

<pre caption="Создание резервной копии конфигурационного файла ядра">
# <i>cp .config /boot/config-2.6.12-gentoo-r10</i>
</pre>

<p>
Теперь переходите к разделу <uri link="#kernel_modules">Конфигурирование
модулей ядра</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Альтернатива: Использование genkernel</title>
<body>

<p>
Если вы читаете эти строки, значит вы хотите использовать наш сценарий
<c>genkernel</c> для настройки своего ядра.
</p>

<p>
Теперь когда исходные коды ядра установлены, настало время скомпилировать ядро,
используя сценарий <c>genkernel</c>. <c>genkernel</c> создаст ядро почти
идентичное тому, что используется на установочном компакт-диске. Т.е. при
использовании <c>genkernel</c> для сборки  ядра, ваша система будет искать
новые устройства при каждой загрузке, подобно установочному компакт-диску.
Поскольку genkernel не требует ручной настройки ядра, это идеальное решение для
пользователей которые чувствуют себя неуютно от одной мысли, что придется
компилировать ядро.
</p>

<p>
Рассмотрим как использовать genkernel. Сначала выполним emerge genkernel:
</p>

<pre caption="Установка genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Теперь соберем ядро, запустив <c>genkernel all</c>. Однако, так как
<c>genkernel</c> будет собирать ядро поддерживающее почти все оборудование,
этот процесс может занять приличное время.
</p>

<p>
Если ваш загрузочный (boot) раздел не использует ext2 или ext3, то вам придется
вручную настроить ядро, запустив <c>genkernel --menuconfig all</c> и добавить
поддержку вашей файловой системы <e>в</e> ядро (т.е. <e>не</e> модулем).
</p>

<pre caption="Запуск genkernel">
# <i>genkernel all</i>
</pre>

<p>
Когда <c>genkernel</c> завершит совою работу, будет создано ядро, полный набор
модулей и <e>начальный корневой диск</e> (initrd). Мы будем использовать ядро и
initrd в процессе настройки загрузчика системы, далее в этом руководстве.
Запишите имена ядра и начального корневого диска так как они нам понадобятся при
редактировании конфигурационного файла загрузчика. initrd будет запущен сразу
после загрузки для автоматического определения устройств (точно так же как и в
установочном компакт-диске), прежде чем ваша система перейдет к настоящей
загрузке. 
</p>

<pre caption="Проверяем название созданного ядра и initrd">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

<p>
Теперь давайте сделаем нашу систему еще ближе к установочному компакт-диску - 
соберем <c>coldplug</c>. В то время как initrd автоматически находит
оборудование необходимое для загрузки системы, <c>coldplug</c> автоматически
определяет все остальное оборудование. Установим <c>coldplug</c>, командой: 
</p>

<pre caption="Установка и активация coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Конфигурирование модулей ядра</title>
<subsection>
<title>Конфигурация модулей</title>
<body>

<p>
Вы должны перечислить модули, которые должны загружаться автоматически, в файле
<path>/etc/modules.autoload.d/kernel-2.6</path>. Также, при желании, можно
сообщить модулям некоторые дополнительные параметры.
</p>

<p>
Для просмотра всех доступных модулей запустите команду <c>find</c>, заменив
"&lt;kernel version&gt;" на версию ядра, которое вы только что собрали:
</p>

<pre caption="Просмотр доступных модулей">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Например, если вы хотите автоматически загружать модуль <c>3c59x.o</c>,
отредактируйте файл <path>kernel-2.6</path> и пропишите туда имя модуля.
</p>

<pre caption="Редактируем /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Теперь можете продолжить установку и перейти к разделу <uri
link="?part=1&amp;chap=8">Настройка системы</uri>.
</p>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 2.11-r1
target-date: 2005-11-27
source-cvs-revision: 1.34
translated-by: Vasiliy Golubev [vas@nightmail.ru]
edited-by:  none

note:
this document is subject to stylistic changes introduced to x86 arch.
-->
