<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-install-hppa-disk.xml,v 1.2 2006/03/08 00:52:45 achumakov Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.12</version>
<date>2005-08-02</date>

<section>
<title>Общие сведения о блочных устройствах</title>
<subsection>
<title>Блочные устройства</title>
<body>

<p>
Мы достаточно подробно рассмотрим аспекты работы с дисками в Gentoo Linux 
и Linux вообще, включая файловые системы, разделы и блочные устройства. 
Позже, когда вы уже разберетесь с вводом-выводом на диск и файловыми системами 
мы поможем вам с разметкой диска на разделы и файловые системы для 
вашей установки Gentoo Linux.
</p>

<p>
Для начала давайте познакомимся с <e>блочными устройствами</e>. Наиболее 
известным блочным устройством, вероятно, является устройство, представляющее
собой первый SCSI диск в Linux системе, и известное как <path>/dev/hda</path>.
</p>

<p>
Блочные устройства, аналогичные приведенным примерам, представляют собой 
абстрактный интерфейс к диску. Это позволяет пользовательскому ПО использовать 
эти блочные устройства для обращения к дискам не беспокоясь, к какому типу они 
принадлежат: IDE, SCSI или какому-то еще. ПО может адресовать место на диске, 
как набор смежных 512-байтных блоков с произвольным доступом.
</p>

</body>
</subsection>
<subsection>
<title>Разделы и slices</title>
<body>

<p>
Не смотря на то, что теоретически возможно использовать весь диск для
размещения вашей Linux системы, этого почти никогда не случается на практике.
Вместо этого все большое блочное устройство (диск) разбивается на меньшие,
более удобные для обращения, блочные устройства. Для всех систем они
называются <e>разделами</e>. Другие архитектуры используют похожую технологию,
называемую <e>slices</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Разработка схемы разделения диска</title>
<subsection>
<title>Сколько и какого размера?</title>
<body>

<p>
Количество разделов очень сильно зависит от используемого ПО. Например если в
вашей системе зарегистрировано большое количество пользователей, вероятно вы
захотите, чтобы <path>/home</path> находился отдельно для увеличения
безопасности и упрощения создания резервных копий. Если вы устанавливаете
Gentoo в качестве почтового сервера, то <path>/var</path> должен находиться на
отдельном разделе, т. к. вся почта хранится в <path>/var</path>. Правильный
выбор файловой системы для разделов позволит увеличить производительность вашей
системы. Игровые серверы должны иметь отдельный раздел с <path>/opt</path>,
т. к. большая часть ПО для их работы устанавливается в этот каталог. Причина
выделения на собственный раздел аналогична для <path>/home</path>: безопасность
и резервные копии. Определенно стоит оставить побольше места для 
<path>/usr</path> т.к. помимо того, что здесь хранится большинство приложений,
одно дерево Portage занимает около 500 МБ, не считая архивов с исходными кодами,
размещенных внутри дерева.
</p>

<p>
Как вы можете видеть, все зависит от ваших целей. Наличие отдельных разделов или
томов имеет следующие преимущества:
</p>

<ul>
<li>
  Вы можете выбрать наиболее подходящую файловую систему для каждого раздела
  или тома.
</li>
<li>
  Вы не столкнетесь с нехваткой места на диске для всей системы, например если
  какое-нибудь неправильно работающее приложение постоянно производит запись
  на раздел или том.
</li>
<li>
  В случае необходимости проверка ФС займет меньше времени, т. к. проверка
  разных разделов может выполняться параллельно (однако еще больший выигрыш по
  времени дает использование нескольких физических дисков).
</li>
<li>
  Безопасность системы может быть улучшена если некоторые разделы будут
  смонтированы в режиме read-only (только для чтения), nosuid (setuid бит
  игнорируется), noexec (бит запуска игнорируется) и т.д.
</li>
</ul>

<p>
Однако, создание множества разделов имеет один большой минус: при неправильной
настройке вы можете получит систему в которой много свободного места на одном
разделе и полная его нехватка на другом. Также существует ограничение, в
размере 15 штук на возможное количество разделов для дисков SCSI и SATA.
</p>

</body>
</subsection>
</section>
<section>
<title>Использование fdisk в HPPA для создания разделов</title>
<body>

<p>
Используйте <c>fdisk</c> для создания необходимых разделов:
</p>

<pre caption="Разделение диска">
# <i>fdisk /dev/sda</i>
</pre>

<p>
Компьютеры HPPA используют стандартные таблицы разделов DOS. Чтобы создать
новую таблицу, просто задействуйте команду <c>o</c>.
</p>

<pre caption="Создание табицы разделов DOS">
# <i>fdisk /dev/sda</i>

Command (m for help): <i>o</i>
Building a new DOS disklabel.
</pre>

<p>
Для PALO (начальный загрузчик HPPA) для работы необходим специальный раздел.
Для ээтого вам необходимо создать в начале диска раздел размером не меньше 16
МБ. Тип раздела должен быть <e>f0</e> (Linux/PA-RISC boot).
</p>

<impo>
Если вы проигнорируете это и продолжите без специального раздела PALO, ваша
система перестанет любить вас <!--так в оригинале - system will stop loving
you--> и не сможет загружаться. Если ваш диск больше 2 ГБ, также проверьте,
что загрузочный раздел находится в первых 2 ГБ диска. Иначе PALO не сможет
прочитать ядро за пределами 2 ГБ.
</impo>

<pre caption="Простая схема разделов по умолчанию">
# <i>cat /etc/fstab</i>
/dev/sda2    /boot   ext3    noauto,noatime   1 1
/dev/sda3    none    swap    sw               0 0
/dev/sda4    /       ext3    noatime          0 0

# <i>fdisk /dev/sda</i>

Command (m for help): <i>p</i>

Disk /dev/sda: 4294 MB, 4294816768 bytes
133 heads, 62 sectors/track, 1017 cylinders
Units = cylinders of 8246 * 512 = 4221952 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           8       32953   f0  Linux/PA-RISC boot
/dev/sda2               9          20       49476   83  Linux
/dev/sda3              21          70      206150   82  Linux swap
/dev/sda4              71        1017     3904481   83  Linux
</pre>

<p>
Теперь, когда разделы созданы, вы можете продолжить с <uri
link="#filesystems">создания файловых систем</uri>.
</p>

</body>
</section>
<section id="filesystems">
<title>Создание файловых систем</title>
<subsection>
<title>Введение</title>
<body>

<p>
Разделы созданы, настало время разместить файловые системы на них. Если вам
безразлично, какую ФС использовать и вы вполне довольны файловой системой,
используемой нами в этой Настольной книге по-умолчанию, вы можете перейти к
разделу <uri link="#filesystems-apply">Размещение файловых систем на
разделе</uri>. Если нет, то продолжайте чтение и узнайте больше о доступных для
использования файловых системах...
</p>

</body>
</subsection>
<subsection>
<title>Файловые системы?</title>
<body>

<p>
Доступно несколько файловых систем. ext2, ext3, ReiserFS и XFS признаны
стабильным для архитектуры HPPA. Поддержка других еще экспериментальна.
</p>

<p>
<b>ext2</b> &mdash; это проверенная временем и родная для Linux файловая
система, но она не обладает средствами журналирования метаданных, что при
повседневном использовании означает, что проверка целостности во время запуска
системы может оказаться весьма продолжительной. Сегодня существует достаточно
широкий выбор ФС нового поколения, так называемых журналируемых файловых
систем, которые могут быть проверены на целостность очень быстро и по этому
более предпочтительны нежели их не журналируемые собратья. Журналируемая ФС
позволяет избежать долгих задержек при старте системы, если при том ваша
файловая система оказалась в нестабильном состоянии.
</p>

<p>
<b>ext3</b> &mdash; это журналируемая версия ext2. Она обладает средствами
журналирования метаданных для быстрого восстановления наряду с другими
режимами ведения журнала, такими как журналирование всех данных и упорядоченное
ведение журнала данных. ext3 &mdash; это очень хорошая и надежная ФС. У нее
есть дополнительная возможность индексации через хэшированные B-деревья, что
позволяет повысить производительность практически в любой ситуации. Вы можете
включить индексирование, добавив <c>-O dir_index</c> к команде <c>mke2fs</c>.
Подводя итог, можно сказать, что ext3 &mdash; превосходная ФС.
</p>

<p>
<b>ReiserFS</b> &mdash; это ФС, основанная на так называемых B*-деревьях. Она
обладает очень хорошей производительностью и сильно (иногда в 10&mdash;15 раз)
превосходит ext2 и ext3 при работе с файлами малого размера (размером менее 4
КБ). ReiserFS также очень хорошо масштабируется и обладает средствами
журналирования. Начиная со времени выхода ядра версии 2.4.18, ReiserFS признана
стабильной и пригодной для использования как в системах общего назначения, так и
в системах с большой нагрузкой, такой как создание больших файловых систем,
использованием множества файлов малого размера, файлов очень большого размера и
каталогов, содержащих десятки тысяч файлов.
</p>

<p>
<b>XFS</b> &mdash; это файловая система, обладающая наряду со средствами
ведения журнала хорошим набором дополнительных возможностей, оптимизирована для
хорошей масштабируемости. Мы рекомендуем ее применение только в Linux-системах
с высококлассными SCSI и/или оптоволоконными дисками и оборудованными
источниками бесперебойного питания. Из-за того, что XFS очень агрессивно
кеширует данные в памяти, очень вероятна ситуация, когда неправильно
спроектированная программа (не обладающая достаточной осторожностью при записи
файлов на диск, но таких мало) может потерять большой объем информации при
неожиданном отключении питания.
</p>

<p>
<b>JFS</b> &mdash; это высокопроизводительная журналируемая файловая система,
разработанная корпорацией IBM. Она недавно получила статус готовой для
применения в промышленности. Так как история ее применения еще мала, то трудно
сказать что-то определенное о ее стабильности, плюсах и минусах.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Размещение файловых систем на разделе</title>
<body>

<p>
Для создания файловой системы на разделе или томе существуют утилиты для
каждого доступного типа:
</p>

<table>
<tr>
  <th>Файловая система</th>
  <th>Команда</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
К примеру, для создания загрузочного раздела (<path>/dev/hda2</path> в нашем
примере) с ФС ext2 и корневого раздела (<path>/dev/sda4</path> в нашем
примере), вы должны выполнить следующие команды:
</p>

<pre caption="Размещение ФС на разделе">
# <i>mke2fs /dev/sda2</i>
# <i>mke2fs -j /dev/sda4</i>
</pre>

<p>
Теперь разместите файловые системы на вновь созданных разделах (или логических
томах).
</p>

</body>
</subsection>
<subsection>
<title>Активация раздела подкачки</title>
<body>

<p>
<c>mkswap</c> &mdash; команда, используемая для инициализации раздела подкачки:
</p>

<pre caption="Создание сигнатуры раздела подкачки">
# <i>mkswap /dev/sda3</i>
</pre>

<p>
Для активации раздела подкачки используется <c>swapon</c>:
</p>

<pre caption="Активация раздела подкачки">
# <i>swapon /dev/sda3</i>
</pre>

<p>
Создайте и активируйте раздел подкачки командой, описаной выше.
</p>

</body>
</subsection>
</section>
<section>
<title>Монтирование</title>
<body>

<p>
Теперь, когда разделы созданы и файловые системы размещены настало время
смонтировать эти разделы. Используйте команду <c>mount</c>. Не забудьте
предварительно создать необходимые каталоги для монтирования каждого раздела.
В этом примере мы создаем точку монтирования и монтируем корневой раздел:
</p>

<pre caption="Монтирование разделов">
# <i>mount /dev/sda4 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/sda2 /mnt/gentoo/boot</i>
</pre>

<note>
Если вы хотите разместить <path>/tmp</path> на отдельном разделе, не забудьте
изменить права доступа к этому каталогу после монтирования: <c>chmod 1777
/mnt/gentoo/tmp</c>. В этом каталоге также размещается <path>/var/tmp</path>.
</note>

<p>
Нам также необходимо будет смонтировать ФС proc (виртуальный интерфейс ядра) в
каталог <path>/proc</path>. Но для начала надо разместить необходимые нам файлы
на разделах.
</p>

<p>
Переходите к разделу <uri link="?part=1&amp;chap=5">Подготовка установочных
файлов Gentoo</uri>.
</p>

</body>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 1.12-r1
target-date: 2005-09-07
source-cvs-revision: 1.18
translated-by: Vasiliy Golubev <vas@nightmail.ru>, Azamat H. Hackimov
<azazello1984@mail.ru>
edited-by: none
notes:
hb-install-x86-* is used as translation template (by V. Golubev)
(**)Needs further review /achumakov
-->
