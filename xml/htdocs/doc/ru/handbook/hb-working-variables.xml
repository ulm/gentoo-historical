<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-working-variables.xml,v 1.2 2005/11/11 03:23:19 achumakov Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.13</version>
<date>2005-09-28</date>

<section>
<title>Переменные среды</title>
<subsection>
<title>Что это такое?</title>
<body>

<p>
Переменная среды &mdash; это именованный объект, который содержит информацию,
используемую одним или несколькими приложениями. Многие пользователи,
(особенно новички в Linux) находят эту методику немного странной или
неуправляемой. Тем не менее, это не так. Используя переменные
среды, можно очень легко и просто изменить настройки одной или нескольких
программ.
</p>

</body>
</subsection>
<subsection>
<title>Важные примеры</title>
<body>

<p>
В следующей таблице описывается список переменных, используемых в системе Linux.
Примеры их значений приведены далее.
</p>

<table>
<tr>
  <th>Переменная</th>
  <th>Описание</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
    Эта переменная содержит список каталогов, разделённых двоеточиями, в которых
    система ищет исполняемые файлы. Если вы вводите имя исполняемого файла
    (например, <c>ls</c>, <c>rc-update</c> или <c>emerge</c>), но который не
    находится ни в одной из перечисленных каталогов, то этот файл не будет
    запущен (если, конечно, вы не указали полный путь, например, <c>/bin/ls</c>).
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
    Эта переменная имеет такое же значение что и <c>PATH</c>, но содержит
    список только тех каталогов, которые должны быть проверены, когда команда
    вводится пользователем с правами root.
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
    Эта переменная содержит список каталогов, разделённых двоеточиями, в
    которых динамический линковщик ищет библиотеки.
  </ti>
</tr>

<!-- ** новое слово в глоссарий - [динамический] линковщик, в раннем переводе
было линкер -->

<tr>
  <ti>MANPATH</ti>
  <ti>
    Эта переменная содержит список каталогов, разделённых двоеточиями, в которых
    команда <c>man</c> ищет man-страницы.
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
    Эта переменная содержит список каталогов, разделённых двоеточиями, в которых
    команда <c>info</c> ищет info-страницы.
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
    Эта переменная содержит путь к программе, позволяющей постранично
    просматривать содержимое файла, например <c>less</c> или <c>more</c>.
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
    Эта переменная содержит путь к программе, используемой для редактирования
    файлов, например <c>vi</c> или <c>nano</c>.
  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
   Эта переменная содержит список каталогов, разделённых двоеточиями, в которых
   находятся ресурсы KDE.
  </ti>
</tr>
<tr>
  <ti>CLASSPATH</ti>
  <ti>
    Эта переменная содержит список каталогов, разделённых двоеточиями,
    содержащих классы Java.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
    Эта переменная содержит список защищённых от Portage во время обновления
    каталогов, разделённых <c>пробелами</c>.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
    Эта переменная содержит список каталогов, разделённых <c>пробелами</c>,
    которые не должены быть защищены от Portage во время обновления.
  </ti>
</tr>
</table>

<p>
Ниже представлен пример определения всех этих переменных:
</p>

<pre caption="Пример определения">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CLASSPATH="/opt/blackdown-jre-1.4.1/lib/rt.jar:."
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf"
</pre>

</body>
</subsection>
</section>
<section>
<title>Глобальное определение переменных</title>
<subsection>
<title>Каталог /etc/env.d</title>
<body>

<p>
Для того, чтобы определить эти переменные централизованно, в Gentoo был введён
каталог <path>/etc/env.d</path>. В нём находится ряд файлов, например
<path>00basic</path>, <path>05gcc</path> и так далее, в которых определяются
переменные, необходимые стоящей в названии программе.
</p>

<p>
Например, при установке <c>gcc</c> ebuild создаёт файл <path>05gcc</path>,
содержащий следующие определения переменных:
</p>

<pre caption="/etc/conf.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
В других дистрибутивах вам, возможно, потребуется добавить или дополнить эти
определения в <path>/etc/profile</path> или где-нибудь ещё. Gentoo делает это
для вас (и для Portage) намного легче, так как больше не надо уделять внимание
многочисленным файлам, содержащим определения переменных.
</p>

<p>
Например, когда <c>gcc</c> будет обновлён, то будет обновлён и
<path>/etc/env.d/05gcc</path> без какого-либо вмешательства со стороны
пользователя.
</p>

<p>
Это удобно не только для Portage, но и для вас, пользователя. Иногда вам может
потребоваться установить какую-нибудь переменную глобально. Возьмем к примеру
переменную <c>http_proxy</c>. Вместо того, чтобы возиться с
<path>/etc/profile</path>, вы просто можете создать файл в
<path>/etc/env.d/</path> (например <path>/etc/env.d/99local</path>) и добавить
нужные определения туда:
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
Используя подобный файл для всех ваших переменных, вы сможете быстро
просматривать все определённые вами переменные.
</p>

</body>
</subsection>
<subsection>
<title>Сценарий env-update</title>
<body>

<p>
Переменная <c>PATH</c> определена в нескольких файлах в <path>/etc/env.d</path>.
Нет, нет это не ошибка: когда вы запустите <c>env-update</c>, он объединит
разные определения перед обновлением переменных среды, позволяя пакетам (или
пользователям) добавлять свои определения переменных без изменения уже
существующих настроек.
</p>

<p>
Сценарий <c>env-update</c> объединит значения переменных из файлов в алфавитном
порядке в <path>/etc/env.d</path>. Имена файлов должны начинаться с
двухзначного числа.
</p>

<pre caption="Порядок, в котором env-update производит обновление">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
Объединение переменных осуществляется не всегда, только для следующих
переменных: <c>KDEDIRS</c>, <c>PATH</c>, <c>CLASSPATH</c>, <c>LDPATH</c>,
<c>MANPATH</c>, <c>INFODIR</c>, <c>INFOPATH</c>, <c>ROOTPATH</c>,
<c>CONFIG_PROTECT</c>, <c>CONFIG_PROTECT_MASK</c>, <c>PRELINK_PATH</c> и
<c>PRELINK_PATH_MASK</c>. Для других переменных будет использовано последнее
определённое значение (в алфавитном порядке для файлов в каталоге
<path>/etc/env.d</path>).
</p>

<p>
При запуске сценария <c>env-update</c> создадутся все переменные среды и будут
размещены в <path>/etc/profile.env</path>, (используемый файлом
<path>/etc/profile</path>). Кроме того, сценарий на основе переменной
<c>LDPATH</c> создаст <path>/etc/ld.so.conf</path>. После этого он запустит
<c>ldconfig</c> для регенерации нового файла <path>/etc/ld.so.cache</path>,
используемом динамическим линковщиком.
</p>

<p>
Если вы хотите, чтобы результаты работы <c>env-update</c> вступили в силу
немедлено, выполните следующую команду для обновления вашей среды. Пользователи,
самостоятельно устанавливавшие ОС Gentoo, возможно, вспомнят её из инструкций по
установке:
</p>

<pre caption="Обновление среды">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

<note>
Эти команды обновят переменные только в вашем текущем терминале, в <e>новых</e>
консолях и их потомках. Это означает, что при использовании X11 в должны
набирать <c>source /etc/profile</c> в каждом открываемом вами терминале и
перезапустить X, благодаря чему все новые терминалы будут использовать новые
переменные. Если вы используете менеджер входа в систему, станьте пользователем
с правами root и наберите <c>/etc/init.d/xdm restart</c>. Иначе вам необходимо
выйти и зайти снова в оболочку X, чтобы породившиеся потомки использовали новые
значения переменных.
</note>

</body>
</subsection>
</section>
<section>
<title>Локальное определение переменных</title>
<subsection>
<title>Определения для пользователя</title>
<body>

<p>
Далеко не всегда нужно определять переменные глобально. Например, вы хотите
добавить <path>/home/my_user/bin</path> и текущий каталог (в котором вы
находитесь) к переменной <c>PATH</c>, но не
хотите, чтобы это оказалось в <c>PATH</c> у всех пользователей вашей системы.
Если вы хотите определить переменную среды локально, используйте
<path>~/.bashrc</path> или <path>~/.bash_profile</path>:
</p>

<pre caption="Расширяем PATH для локального использования в ~/.bashrc">
<comment>(Если после разделителя нет каталога, подразумевается текущий каталог)</comment>
PATH="${PATH}:/home/my_user/bin:"
</pre>

<p>
Когда вы снова войдете в систему, ваш <c>PATH</c> будет обновлён.
</p>

</body>
</subsection>
<subsection>
<title>Определения для сессии</title>
<body>

<p>
Иногда необходимо наложить ещё более жёсткие ограничения. Например, вы хотите
использовать испоняемые файлы из созданного вами временного каталога, не
указывая полный путь до них или не изменяя файл <path>~/.bashrc</path> ради
нескольких
минут.
</p>

<p>
В этом случае вы можете просто определить переменную <c>PATH</c> для текущей
сессии, воспользовавшись командой <c>export</c>. Переменная будет использовать
временное значение до тех пор, пока вы не закончите сеанс.
</p>

<pre caption="Определение переменной среды для сессии">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 1.13-r1
target-date: 2005-09-28
source-cvs-revision: 1.16
translated-by: unknown
edited-by: Azamat H. Hackimov [azazello1984@mail.ru]

notes:
new word into glossary - [dynamically] linker - [динамический] линковщик

(**) needs further editing!
-->

