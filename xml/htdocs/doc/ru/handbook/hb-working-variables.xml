<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-working-variables.xml,v 1.5 2006/03/31 07:41:50 achumakov Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.13</version>
<date>2005-09-28</date>

<section>
<title>Переменные среды</title>
<subsection>
<title>Что это такое?</title>
<body>

<p>
Переменная среды &mdash; это именованный объект, который содержит информацию,
используемую одним или несколькими приложениями. Многие пользователи
(особенно новички в Linux) находят этот подход несколько странным или
неуправляемым. Но это впечатление ошибочно: используя переменные
среды, можно очень легко изменить настройку разнообразных программ.
</p>

</body>
</subsection>
<subsection>
<title>Важные примеры</title>
<body>

<p>
В следующей таблице описывается ряд переменных, используемых в системе Linux.
Примеры их значений приведены далее.
</p>

<table>
<tr>
  <th>Переменная</th>
  <th>Описание</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
    В этой переменной содержится список каталогов, разделенных двоеточиями, в 
    которых система ищет исполняемые файлы. Если вы вводите имя исполняемого 
    файла например, <c>ls</c>, <c>rc-update</c> или <c>emerge</c>), который 
    не находится ни в одной из перечисленных здесь каталогов, этот файл не 
    запустится (если, конечно, вы не указали полный путь, например, 
    <c>/bin/ls</c>). 
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
    У этой переменной такое же значение, что и у <c>PATH</c>, но в ней 
    перечисляются только те каталоги, которые нужно просматривать при вводе
    команды пользователем с правами root.
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
    В этой переменной содержится список каталогов, разделенных двоеточиями, в
    которых динамический компоновщик ищет библиотеки.
  </ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>
    В этой переменной содержится список каталогов, разделенных двоеточиями, в
    которых команда <c>man</c> ищет страницы справки.
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
    В этой переменной содержится список каталогов, разделенных двоеточиями, в
    которых команда <c>info</c> ищет info-страницы.
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
    В этой переменной содержится путь к программе, позволяющей постранично
    просматривать содержимое файлов, например <c>less</c> или <c>more</c>.
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
    В этой переменной содержится путь к программе, используемой для изменения
    файлов, например <c>vi</c> или <c>nano</c>.
  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
   В этой переменной содержится список каталогов, разделенных двоеточиями, в
   которых находятся ресурсы KDE.
  </ti>
</tr>
<tr>
  <ti>CLASSPATH</ti>
  <ti>
    В этой переменной содержится список каталогов, разделенных двоеточиями, в
    которых находятся классы Java.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
    В этой переменной содержится список каталогов, защищаемых Portage при
    обновлении, разделенных <c>пробелами</c>.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
    В этой переменной содержится список каталогов, исключаемых из защиты 
    Portage при обновлении, разделенных <c>пробелами</c>
  </ti>
</tr>
</table>

<p>
Ниже представлен пример определения всех этих переменных:
</p>

<pre caption="Пример определения">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CLASSPATH="/opt/blackdown-jre-1.4.1/lib/rt.jar:."
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf"
</pre>

</body>
</subsection>
</section>
<section>
<title>Глобальное определение переменных</title>
<subsection>
<title>Каталог /etc/env.d</title>
<body>

<p>
Для того, чтобы определить эти переменные централизованно, в Gentoo появился
каталог <path>/etc/env.d</path>. В нём находится ряд файлов, например,
<path>00basic</path>, <path>05gcc</path> и так далее, в которых определяются
переменные, необходимые программам, указанным в названии файлов.
</p>

<p>
Например, при установке <c>gcc</c> ebuild создает файл <path>05gcc</path>,
содержащий следующие определения переменных:
</p>

<pre caption="/etc/env.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
В других дистрибутивах вам предлагается изменять или добавлять определения 
переменных среды в <path>/etc/profile</path> или где-нибудь еще. Gentoo, с 
другой стороны, облегчает вам (и Portage) поддержку и управление переменными 
среды, избавляя от необходимости уделять внимание многочисленным файлам, 
содержащим определения переменных.  
</p>

<p>
Например, когда обновляется <c>gcc</c>, также без малейшего участия 
пользователя обновляется и <path>/etc/env.d/05gcc</path>.
</p>

<p>
От этого выигрывает не только Portage, но и вы, пользователь. Иногда от вас 
может потребоваться глобальная установка какой-нибудь переменной. Возьмем, к 
примеру, переменную <c>http_proxy</c>. Вместо того, чтобы возиться с 
<path>/etc/profile</path>, теперь можно просто создать файл 
(<path>/etc/env.d/99local</path>) и добавить нужные определения туда:
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
Используя один и тот же файл для всех своих переменных, вы можете быстро 
увидеть все определенные вами переменные вместе.
</p>

</body>
</subsection>
<subsection>
<title>Сценарий env-update</title>
<body>

<p>
Переменная <c>PATH</c> определяется в нескольких файлах в 
<path>/etc/env.d</path>. Нет, нет это не ошибка: при запуске <c>env-update</c>
различные определения объединяются перед обновлением переменных среды, позволяя 
пакетам (или пользователям) добавлять собственные значения переменных, не влияя
на уже существующие.
</p>

<p>
Сценарий <c>env-update</c> объединяет значения переменных из файлов, 
находящихся в <path>/etc/env.d</path>, в алфавитном порядке. Имена файлов 
должны начинаться с двух десятичных цифр.
</p>

<pre caption="Порядок обновления, используемый env-update">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
Объединение выполняется не всегда, а только для следующих переменных: 
<c>KDEDIRS</c>, <c>PATH</c>, <c>CLASSPATH</c>, <c>LDPATH</c>, 
<c>MANPATH</c>, <c>INFODIR</c>, <c>INFOPATH</c>, <c>ROOTPATH</c>,
<c>CONFIG_PROTECT</c>, <c>CONFIG_PROTECT_MASK</c>, <c>PRELINK_PATH</c> и
<c>PRELINK_PATH_MASK</c>. Для всех остальных переменных используется значение,
определенное в последнем из файлов (по алфавиту в каталоге 
<path>/etc/env.d</path>). 
</p>

<p>
При запуске сценария <c>env-update</c> создаются все переменные среды, и 
помещаются в <path>/etc/profile.env</path> (используемый файлом
<path>/etc/profile</path>). Кроме того, на основе значения <c>LDPATH</c> 
создается <path>/etc/ld.so.conf</path>. После этого запускается
<c>ldconfig</c>, чтобы вновь создать файла <path>/etc/ld.so.cache</path>,
используемый динамическим компоновщиком.
</p>

<p>
Если вы хотите, чтобы результаты работы <c>env-update</c> вступили в силу
немедлено, для обновления среды выполните следующую команду. Пользователи,
самостоятельно устанавливавшие Gentoo, возможно, помнят ее из указаний по
установке:
</p>

<pre caption="Обновление среды">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

<note>
Эта команда обновляет переменные только в текущем терминале, в <e>новых</e>
консолях и их потомках. То есть, если вы работаете в X11, потребуется или
набирать <c>source /etc/profile</c> в каждом открываемом терминале, или
перезапустить X, чтобы все новые терминалы обращались к новым переменным.
Если вы используете диспетчер входа в систему, станьте пользователем
с правами root и наберите <c>/etc/init.d/xdm restart</c>. Если нет, вам 
придется выйти и снова войти в систему, чтобы X порождала потомков, 
использующих новые значения переменных.
</note>

</body>
</subsection>
</section>
<section>
<title>Локальное определение переменных</title>
<subsection>
<title>Пользовательские переменные</title>
<body>

<p>
Далеко не всегда нужно определять переменные глобально. Например, вам может 
понадобиться добавить <path>/home/my_user/bin</path> и текущий рабочий каталог 
(где вы находитесь) к переменной <c>PATH</c>, но при этом не нужно, чтобы это
добавление появилось и в переменной <c>PATH</c> у всех остальных пользователей.
Если вы хотите определить переменную среды локально, используйте
<path>~/.bashrc</path> или <path>~/.bash_profile</path>:
</p>

<pre caption="Расширение PATH в ~/.bashrc для локальных нужд">
<comment>(двоеточие без последующего указания каталога означает текущий рабочий каталог)</comment>
PATH="${PATH}:/home/my_user/bin:"
</pre>

<p>
Обновление вашей переменной <c>PATH</c> произойдет, когда вы выйдете и снова
войдете в систему.
</p>

</body>
</subsection>
<subsection>
<title>Сеансовые переменные</title>
<body>

<p>
Иногда нужны еще более жесткие ограничения. Вам может потребоваться возможность 
запуска исполняемых файлов из специально созданного временного каталога
без указания полного пути к ним, и без изменения файла <path>~/.bashrc</path> 
ради нескольких минут.
</p>

<p>
В этом случае можно просто определить переменную <c>PATH</c> для текущего
сеанса командой <c>export</c>. Переменной будет присвоено временное значение
до тех пор, пока вы не завершите сеанс.
</p>

<pre caption="Определение сеансовой переменной среды">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 1.13-r2
target-date: 2006-03-24
source-cvs-revision: 1.17
translated-by: unknown
edited-by: Azamat H. Hackimov [azazello1984@mail.ru]; Alexey Chumakov

notes:
-->
