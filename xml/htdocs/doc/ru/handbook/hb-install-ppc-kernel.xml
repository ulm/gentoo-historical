<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-install-ppc-kernel.xml,v 1.7 2005/11/22 23:03:31 achumakov Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>2.14</version>
<date>2005-11-21</date>

<section>
<title>Часовой пояс</title>
<body>

<p>
Сначала вы должны выбрать часовой пояс (time zone), чтобы система знала, где вы 
находитесь. Найдите нужный пояс в <path>/usr/share/zoneinfo</path>, затем 
скопируйте его в <path>/etc/localtime</path>. Постарайтесь, пожалуйста, 
избегать использования часовых поясов 
<path>/usr/share/zoneinfo/Etc/GMT*</path>, т. к. их названия не соответствуют
ожидаемым поясам. Например, <path>GMT-8</path> фактически является поясом GMT+8.
</p>

<pre caption="Установка часового пояса">
# <i>ls /usr/share/zoneinfo</i>
<comment>(допустим, вы хотите использовать GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Установка исходных кодов ядра</title>
<subsection>
<title>Выбор ядра</title>
<body>

<p>
Ядро Linux &mdash; это то, вокруг чего формируются все дистрибутивы. Это слой
между пользовательскими программами и вашими аппаратными средствами.
Пользователи Gentoo могут использовать один из нескольких типов ядра. Полный
список с их описанием можно найти в <uri
link="/doc/ru/gentoo-kernel.xml">Руководстве по выбору ядра Gentoo</uri>.
</p>

<p>
Мы советуем использовать или <c>vanilla-sources</c>, или <c>gentoo-sources</c>
для PPC, использующие ядра 2.6. Последний из двух доступен при установки без
доступа к сети. Продолжим с установки исходных кодов ядра с помощью
<c>emerge</c>. <c>USE="-doc"</c> требуется, чтобы на этом этапе избежать 
установки xorg-x11 или других зависимых пакетов:
</p>

<pre caption="Установка исходных кодов ядра">
# <i>USE="-doc" emerge gentoo-sources</i>
</pre>

<note>
Предлагаемыми ядрами во время выхода выпуска 2005.1 являются
<c>gentoo-sources-2.6.12-r4</c> и <c>vanilla-sources-2.6.12.2</c>.
</note>

<p>
Если вы просмотрите содержимое каталога <path>/usr/src</path>, то увидите
символическую ссылку <path>linux</path>, которая указывает на каталог с
исходными кодами ядра. Допустим, что вы установили
<c>gentoo-sources-2.6.12-r4</c>:
</p>

<pre caption="Просмотр каталога с исходными кодами ядра">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           22  Mar 18 16:23 /usr/src/linux -&gt; linux-2.6.12-gentoo-r4
</pre>

<p>
Если же каталог, на который указывает ссылка, не соответствует выбранному вами
ядру (обратите внимание, что <c>linux-2.6.12-gentoo-r4</c> не более чем пример),
то ее надо изменить:
</p>

<pre caption="Смена ссылки">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.12-gentoo-r4 linux</i>
</pre>

<p>
Теперь настало время настройки и компиляции ядра. Вы можете использовать
<c>genkernel</c>, который сформирует стандартное ядро, аналогичное
используемому на установочном компакт-диске, или вы можете настроить ядро
вручную для большей оптимизации вашей системы.
</p>

<p>
Если вы хотите вручную настроить ядро, то переходите к разделу <uri
link="#manual">По умолчанию: ручная настройка</uri>. Если вы хотите
использовать <c>genkernel</c>, то читайте <uri link="#genkernel">Альтернатива:
использование genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>По умолчанию: ручная настройка</title>
<subsection>
<title>Введение</title>
<body>

<p>
Ручная настройка ядра считается одним из самых сложных вопросов для
пользователей Linux. Зато после настройки нескольких ядер, вы и не вспомните,
что это было трудно ;).
</p>

<p>
Есть одна истина: начиная ручную настройку ядра, вы должны знать аппаратную 
часть своего компьютера. Большую часть информации можно получить после 
установки пакета pciutils (<c>emerge pciutils</c>), который содержит 
<c>lspci</c>. После этого вы сможете использовать <c>lspci</c> внутри временной 
среды установки. Можете не обращать внимания на предупреждения, касающиеся 
<e>pcilib</e> (например, pcilib: cannot open /sys/bus/pci/devices [pcilib: не 
могу открыть /sys/bus/pci/devices]), которые выводит на экран <c>lspci</c>. В 
качестве альтернативы, вы можете запустить <c>lspci</c> <e>вне временной среды
установки</e>. Результат тот же. Вы также можете запустить <c>lsmod</c> для
просмотра модулей ядра используемых установочным компакт-диском (это послужит
хорошей подсказкой, на предмет того, какие опции надо включить). Другой
способ узнать, какие компоненты следует включить, &mdash; просмотреть
сообщения успешно загруженного ядра, но до этого вам еще далеко. Наберите
<c>dmesg</c>, чтобы увидеть сообщения ядра.
</p>

<p>
Теперь перейдите в каталог исходных кодов вашего ядра; пора настроить ядро. 
Рекомендуется сначала добавить в вашу конфигурацию параметры по умолчанию, 
запустив <c>make defconfig</c>. После создания конфигурации по умолчанию,
запустите <c>make menuconfig</c>. Этой командой вы вызовете конфигурационное 
меню, использующее ncurses.
</p>

<pre caption="Вызов конфигурационного меню">
# <i>cd /usr/src/linux</i>
# <i>make defconfig</i>
# <i>make menuconfig</i>
</pre>

<p>
Перед вами появятся несколько разделов настроек. Мы сначала перечислим
пункты, которые надо активировать (иначе Gentoo не будет работать или будет
работать не так как надо без дополнительных настроек).
</p>

</body>
</subsection>
<subsection>
<title>Активация нужных параметров</title>
<body>

<p>
Прежде всего, разрешите использование разрабатываемых и экспериментальных
кодов/драйверов. Если этого не сделать, вы не увидите некоторых важных
параметров:
</p>

<pre caption="Выбор эксперементальных кодов/драйверов, основные настройки">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
General setup --->
  [*] Support for hot-pluggable devices
</pre>

<p>
Теперь войдите в <c>File Systems</c> и выберите поддержку всех нужных вам
файловых систем. <e>Не</e> компилируйте их как модули, иначе система Gentoo не
сможет смонтировать эти разделы. Также выберите <c>/proc file system</c> и
<c>Virtual memory</c>. <e>Не</e> выбирайте <c>/dev file system</c>.
</p>

<pre caption="Выбор необходимых файловых систем">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [ ] /dev file system support (OBSOLETE)
    [*] Virtual memory file system support (former shm fs)

<comment>(Выберите один или несколько параметров, необходимых вашей
системе)</comment>
  &lt;*&gt; Second extended fs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Reiserfs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Если вы используете PPPoE или dial-up модем для соединений к интернету, то
вам нужно включить в ядре следующие параметры:
</p>

<pre caption="Выбор нужных драйверов PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Два параметра сжатия данных не являются необходимыми, но и вреда от них тоже не
будет. То же относится и к опции <c>PPP over Ethernet</c> которая нужна только
для <c>rp-pppoe</c>, сконфигурированного для работы с PPPoE в ядре.
</p>

<p>
Если вам надо использовать сетевые карты, то не забудьте включить в ядре их
поддержку.
</p>

<p>
Пользователям компьютеров NewWorld и OldWorld обычно нужна поддержка HFS.
Пользователям OldWorld она нужна, чтобы скопировать собранные ядра в раздел
MacOS. Пользователям NewWorld она нужна для конфигурирования специального
раздела Apple_Bootstrap:
</p>

<pre caption="Включение поддержки HFS">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
На данный момент возможность kernel preemption <!-- перевод неизвестен -->все
еще нестабильна для PPC и может вызвать ошибки компиляции и различные ошибки
сегментации. <e>Настоятельно</e> рекомендуется не использовать эту
возможность.
</p>

<pre caption="Удостоверьтесь, что параметр Preemptible Kernel отключен">
Platform options ---&gt;
  [ ] Preemptible Kernel
</pre>

<p>
Если вы загружаетесь с устройств Firewire, вам понадобится включить их
поддержку. Если вы не хотите включать в ядро их поддержку, добавьте эти модули
и их зависимости в initrd.
</p>

<pre caption="Поддержка устройств firewire при загрузке">
Device Drivers ---&gt;
  IEEE 1394 (FireWire) support ---&gt;
    &lt;*&gt; IEEE 1394 (FireWire) support
    &lt;*&gt;   OHCI-1394 support
    &lt;*&gt;   SBP-2 support (Harddisks etc.)
</pre>

<p>
Если вы загружаетесь с устройств USB, вам понадобится включить их
поддержку. Если вы не хотите включать в ядро их поддержку, добавьте эти модули
и их зависимости в initrd.
</p>

<pre caption="Поддержка устройств USB при загрузке">
Device Drivers ---&gt;
  USB support ---&gt;
    &lt;*&gt; Support for Host-side USB
    &lt;*&gt;   OHCI HCD support
    &lt;*&gt;   USB Mass Storage support
</pre>

<p>
Не отключайте в ядре поддержку кадрового буфера, если он необходим при успешной
загрузке системы. Если вы используете видеокарту на основе чипсета NVIDIA,
вы должны использовать кадровый буфер OpenFirmware. Если вы используете
видеокарту на основе чипсета ATI, вы должны выбрать драйвер кадрового буфера,
основанный на вашем чипсете (Mach64, Rage128 или Radeon).
</p>

<pre caption="Выбор драйвера кадрового буфера">
Device Drivers ---&gt;
  Graphics support ---&gt;
    &lt;*&gt; Support for frame buffer devices
    [*] Open Firmware frame buffer device support
    &lt;*&gt; ATI Radeon display support
    &lt;*&gt; ATI Rage128 display support
    &lt;*&gt; ATI Mach64 display support
    Console display driver support ---&gt;
      &lt;*&gt; Framebuffer Console support
</pre>

<note>
Если вы выберете более одного устройства кадрового буфера, по умолчанию может
использоваться драйвер для другого устройства. Так или иначе, используйте
только одно устройство кадрового буфера или укажите, какой драйвер следует
использовать ядру при загрузке системы, например <c>video=radeonfb</c>.
</note>

<p>
Когда вы закончите настройку ядра, можете переходить к разделу <uri
link="#compiling">Компиляция и установка</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Компиляция и установка</title>
<body>

<p>
Теперь, когда ваше ядро настроено, настало время его скомпилировать и 
установить. Выйдите из конфигурационного меню и запустите процесс компиляции:
</p>

<pre caption="Компиляция ядра">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Когда ядро будет скомпилировано, скопируйте образ ядра в каталог
<path>/boot</path> (удостоверьтесь, что он правильно смотирован на компьютерах
Pegasos).
</p>

<pre caption="Установка ядра">
<comment>замените 2.6.12 на вашу версию ядра</comment>
(Apple/IBM)  # <i>cp vmlinux /boot/kernel-2.6.12</i>
(Pegasos)    # <i>cp arch/ppc/boot/images/zImage.chrp /boot/kernel-2.6.12</i>
</pre>

<p>
Также стоит скопировать ваш конфигурационный файл ядра в каталог
<path>/boot</path>, так, на всякий случай :).
</p>

<pre caption="Создание резервной копии конфигурационного файла ядра">
# <i>cp .config /boot/config-2.6.12-gentoo-r4</i>
</pre>

<p>
Теперь переходите к разделу <uri link="#kernel_modules">Установка отдельных
модулей ядра</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Установка отдельных модулей ядра</title>
<subsection>
<title>Конфигурация модулей</title>
<body>

<p>
Вы должны перечислить модули, которые должны загружаться автоматически, в файле
<path>/etc/modules.autoload.d/kernel-2.6</path>. Также, при желании, можно
сообщить модулям некоторые дополнительные параметры.
</p>

<p>
Для просмотра всех доступных модулей запустите команду <c>find</c>, заменив
"&lt;kernel version&gt;" на версию ядра, которое вы только что собрали:
</p>
<!-- Непонятен ключ -iname '*.o', разве в ядрах 2.6 используется это
расширение? -->
<pre caption="Просмотр доступных модулей">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Например, если вы хотите автоматически загружать модуль <c>3c59x.o</c>,
отредактируйте файл <path>kernel-2.6</path> и пропишите туда имя модуля.
</p>

<pre caption="Редактирование /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Теперь можете продолжить установку и перейти к разделу <uri
link="?part=1&amp;chap=8">Настройка системы</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Альтернатива: использование genkernel</title>
<body>

<p>
Если вы читаете этот раздел, то вы хотите использовать наш сценарий
<c>genkernel</c> для настройки своего ядра.
</p>

<p>
Теперь, когда исходные коды ядра установлены, настало время скомпилировать ядро,
используя сценарий <c>genkernel</c>. <c>genkernel</c> создаст ядро почти
идентичное тому, что используется на установочном компакт-диске. Т.е. при
использовании <c>genkernel</c> для сборки ядра, ваша система будет искать
новые устройства при каждой загрузке, подобно установочному компакт-диску.
Поскольку genkernel не требует ручной настройки ядра, это идеальное решение для
пользователей которые чувствуют себя неуютно от одной мысли, что придется
компилировать ядро.
</p>

<p>
Рассмотрим как использовать genkernel. Сначала выполним emerge genkernel:
</p>

<pre caption="Установка genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Далее, скопируйте конфигурационный файл ядра, используемый установочным
компакт-диском, в каталог, который genkernel просматривает на предмет
конфигурации по умолчанию:
</p>

<pre caption="Копирование конфигурационного файла ядра с установочного
компакт-диска">
# <i>zcat /proc/config.gz > /usr/share/genkernel/ppc/kernel-config-2.6</i>
</pre>

<p>
Если вы используете Firewire или USB для загрузки, вам понадобится
добавить соответсвующие модули в initrd. Отредактируйте
<path>/usr/share/genkernel/ppc/modules_load</path> и измените 
<c>MODULES_FIREWIRE="ieee1394 ohci1394 sbp2"</c> для поддержки Firewire или 
<c>MODULES_USB="usbcore ohci-hcd ehci-hcd usb-storage"</c> для поддержки USB.
</p>

<p>
Теперь соберем ядро, запустив <c>genkernel --genzimage all</c>. Для Pegasos нам
потребуется использовать другой конфигурационный файл и создать zImage вместо
ядра vmlinux, используемого комрьютерами Apple. Так как <c>genkernel</c> будет
собирать ядро, поддерживающее почти все оборудование, этот процесс может занять
приличное время!
</p>

<p>
Помните, если раздел, в котором будет находиться ядро, не использует в
качестве ФС ext2 или ext3, возможно, вам потребуется вручную настроить ваше
ядро, задействовав <c>genkernel --menuconfig --genzimage all</c>, и включить
поддержку используемых файловых систем <e>в</e> ядре (т.е. <e>не</e> в
качестве модуля). Пользователям EVMS2 или LVM2, возможно, потребуется
добавить <c>--evms2</c> или <c>--lvm2</c> в качестве аргумента.
</p>

<pre caption="Запуск genkernel">
# <i>genkernel all</i>
</pre>

<pre caption="Запуск genkernel на Pegasos">
# <i>genkernel --genzimage --kernel-config=/usr/share/genkernel/ppc/Pegasos all</i>
</pre>

<p>
Когда <c>genkernel</c> завершит свою работу, будет создано ядро, полный набор
модулей и <e>начальный корневой диск</e> (initrd). Мы будем использовать ядро и
initrd в процессе настройки загрузчика системы, далее в этом руководстве.
Запишите имена ядра и начального корневого диска, так как они нам понадобятся
при редактировании конфигурационного файла загрузчика. initrd будет запущен
сразу после загрузки для автоматического определения устройств (точно так же как
и в установочном компакт-диске), прежде чем ваша система перейдет к настоящей
загрузке. Убедитесь, что записали требуемые параметры загрузки, необходимые для
успешной загрузки с genkernel.
</p>

<pre caption="Проверяем название созданного ядра и initrd">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

<p>
Теперь давайте сделаем нашу систему еще ближе к установочному компакт-диску
&mdash; соберем <c>coldplug</c>. В то время как initrd автоматически находит
оборудование, необходимое для загрузки системы, <c>coldplug</c> автоматически
определяет все остальное оборудование. Установим <c>coldplug</c>, командой: 
</p>

<pre caption="Установка и включение coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

<p>
Теперь можете перейти к разделу <uri link="?part=1&amp;chap=8">Настройка
системы</uri>.
</p>

</body>
</section>

</sections>

<!-- *$Localization:
target-language: Russian
target-version: 2.14-r1
target-date: 2005-11-22
source-cvs-revision: 1.37
translated-by: Vasiliy Golubev <vas@nightmail.ru>, Azamat H. Hackimov
<azazello1984@mail.ru>
edited-by: none

notes:
hb-install-x86-* is used as translation template (by V. Golubev)

requires translated gentoo-kernel.xml
(**)Needs further review /achumakov
-->
