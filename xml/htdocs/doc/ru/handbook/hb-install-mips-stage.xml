<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-install-mips-stage.xml,v 1.1 2013/07/08 17:34:36 blueboar Exp $ -->

<sections>

<abstract>
Установка Gentoo выполняется с помощью архива третьей стадии (stage3). 
В этой главе мы расскажем, как извлечь файл третьей стадии и настроить Portage. 
</abstract>

<version>1</version>
<date>2012-12-09</date>

<section>
<title>Установка архива стадии</title>
<subsection>
<title>Установка текущей даты и времени</title>
<body>

<p>
Перед тем, как продолжать, убедитесь в правильности системной даты и времени, 
и при необходимости обновите их. Если часы установлены неверно, это в будущем 
может привести к странным результатам! 
</p>

<p>
Для проверки времени, введите команду <c>date</c>: 
</p>

<pre caption="Проверка даты и времени">
# <i>date</i>
Fri Mar 29 16:21:18 CEST 2005
</pre>

<p>
Если часы установлены неправильно, измените время командой date <c>ММДДччммГГГГГ</c> 
(формат: <b>М</b>есяц, <b>Д</b>ень, <b>ч</b>асы, <b>м</b>инуты и <b>Г</b>од).
Например, для установки часов на 29 марта, 16:21, 2005 год, выполните: 
</p>

<pre caption="Установка даты и времени">
# <i>date 032916212010</i>
</pre>

</body>
</subsection>
<subsection>
<title>Выбор источника</title>
<body>

<p>
Следующий необходимый шаг — установка архива <c>stage3</c> на вашу систему. 
</p>

</body>
</subsection>
</section>
<section>
<title>Загрузка архива стадии</title>
<subsection>
<body>

<p>
Перейдите в точку подключения файловой системы Gentoo 
(обычно — <path>/mnt/gentoo</path>): 
</p>

<pre caption="Переход к точке подключения Gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
В таблице ниже вы можете точно узнать, какая стадия необходима для вашей системы.
Архив стадии можно скачать с <uri link="/main/ru/mirrors.xml">официальных зеркал Gentoo</uri> в
каталоге <c>releases/mips/current</c>.
</p>

<table>
<tr>
  <th>Порядок байт</th>
  <th>Процессор</th>
  <th>Откуда скачивать</th>
</tr>
<tr>
  <ti>
    Big Endian<br />
    <e>(Пользователи SGI)</e>
  </ti>
  <ti>
    R4000<br />
    R4400<br />
    R4600
  </ti>
  <ti><c>mips3/stage#-mips3-RELEASE.tar.bz2</c></ti>
</tr>
<tr>
  <ti>
    Big Endian<br />
    <e>(Пользователи SGI)</e>
  </ti>
  <ti>
    R5000<br />
    RM5200<br />
    RM7000<br />
    R10000<br />
    R12000<br />
    R14000
  </ti>
  <ti><c>mips4/stage#-mips4-RELEASE.tar.bz2</c></ti>
</tr>
<tr>
  <ti>
    Little Endian<br />
    <e>(Пользователи Cobalt)</e>
  </ti>
  <ti>
    RM5230<br />
    RM5231
  </ti>
  <ti><c>cobalt/stage#-mipsel4-RELEASE.tar.bz2</c></ti>
</tr>
<tr>
  <ti>
    Little Endian<br />
    <e>(Остальные)</e>
  </ti>
  <ti>
    Все стандартные типы процессоров
  </ti>
  <ti><c>cobalt/stage#-mipsel1-RELEASE.tar.bz2</c></ti>
</tr>
</table>

<warn>
Хотя мы и предоставляем архивы стадий для MIPS1 little-endian, поддержка систем
MIPS little-endian все еще ограничена серверами Cobalt. Данные архивы предоставляются
для тех, кто хочет проэкспериментировать с Gentoo на пока еще неподдерживаемых
платформах, поэтому считается, что вы знаете, что вы делаете.
</warn>

<p>
Если требуется использовать прокси-сервер, экспортируйте переменные 
<c>http_proxy</c> и <c>ftp_proxy</c>: 
</p>

<pre caption="Настройка информации о прокси-сервере для wget">
# <i>export http_proxy="http://proxy.server.com:port"</i>
# <i>export ftp_proxy="http://proxy.server.com:port"</i>
</pre>

<p>
Образы сетевой загрузки Gentoo/MIPS используют <c>wget</c> для скачивания
файлов. Из-за ограничения объема, невозможно разместить браузеры с большим
количеством возможностей на образах сетевой загрузки SGI. Пользователи,
загрузившиеся с живого CD могут использовать <c>elinks</c>.
</p>

<pre caption="Загрузка архива, используя wget">
# <i>wget -c http://distfiles.gentoo.org/releases/mips/mips4/stage3-mips4-2008.0.tar.bz2</i>
</pre>

<p>
Если вы хотите проверить целостность загруженного архива стадии, используйте 
<c>md5sum</c> или <c>sha1sum</c>, и сравните их вывод с контрольной суммой MD5,
данной на зеркале. Например, чтобы проверить целостность архива стадии mips4:
</p>

<pre caption="Пример проверки целостности архива стадии">
# <i>md5sum -c stage3-mips4-2008.0.tar.bz2.DIGESTS</i>
stage3-mips4-2008.0.tar.bz2: OK
# <i>sha1sum -c stage3-mips4-2008.0.tar.bz2.DIGESTS</i>
stage3-mips4-2008.0.tar.bz2: OK
</pre>

</body>
</subsection>
<subsection>
<title>Распаковка архива стадии</title>
<body>

<p>
Распакуйте загруженный архив стадии на вашу систему. Мы используем GNU <c>tar</c>, 
т.к. это простейший способ: 
</p>

<pre caption="Распаковка архива стадии">
# <i>tar -xjpf stage?-*.tar.bz2</i>
</pre>

<p>
Убедитесь, что вы используете точно такие же параметры командной строки (<c>-xjpf</c>). 
Значения параметров: <c>x</c> — <e>извлечение</e>, <c>j</c> — <e>декомпрессия bzip2</e>, 
<c>p</c> — <e>сохранение прав доступа</e>, и, наконец, <c>f</c> — указывает на то, что 
мы распаковываем файл, а не то, что подается на стандартный ввод. 
</p>

<p>
После развертывания установки стадии переходите 
к <uri link="#compile_options">настройке параметров компиляции</uri>.
</p>

</body>
</subsection>
</section>

<section id="compile_options">
<title>Настройка параметров компиляции</title>
<subsection>
<title>Введение</title>
<body>

<p>
Для оптимизации Gentoo вы можете создать ряд переменных, которые повлияют 
на поведение Portage. Все эти переменные можно создавать как переменные среды 
(с помощью <c>export</c>), но тогда они будут лишь временными. Для хранения 
ваших настроек предназначен конфигурационный файл Portage, 
<path>/etc/make.conf</path>. Именно его мы сейчас будем редактировать. 
</p>

<note>
Список и описание всех допустимых переменных находятся в файле 
<path>/mnt/gentoo/etc/make.conf.example</path>. Для успешной установки Gentoo, 
достаточно установить значения только тех переменных, которые описаны ниже. 
</note>

<p>
Запустите ваш любимый редактор для изменения параметров оптимизации, которые 
обсуждаются далее. Можно пользоваться двумя редакторами, <c>vi</c> (часть
Busybox) и <c>nano</c>. Мы будем предполагать, что вы используете <c>nano</c>.
</p>

<pre caption="Открытие /etc/make.conf">
# <i>nano -w /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Как вы могли заметить, у файла <path>make.conf.example</path> обычная структура: 
строки комментария начинаются со знака «#», а в остальных строках выражениями вида 
<c>ПЕРЕМЕННАЯ="значение"</c> определяются переменные. У файла <path>make.conf</path> 
такой же формат. Некоторые из переменных мы обсудим ниже. 
</p>

</body>
</subsection>
<subsection>
<title>CFLAGS и CXXFLAGS</title>
<body>

<p>
Переменные <c>CFLAGS</c> и <c>CXXFLAGS</c> определяют параметры оптимизации 
компилятора <c>gcc</c> для языков C и C++, соответственно. Хотя мы определим
данные переменные здесь, максимальная производительность достигается в том случае, 
когда для каждой компилируемой программы устанавливаются свои собственные 
оптимальные параметры. Причина в том, что все программы различны. 
</p>

<p>
В файле <path>make.conf</path> следует указывать параметры оптимизации, которые, 
на ваш взгляд, повысят скорость системы <e>в целом</e>. Не помещайте сюда 
экспериментальные значения; излишняя оптимизация может привести к плохому 
поведению программ (аварийным завершениям, или, что хуже, неправильной работе). 
</p>

<p>
Мы не будем описывать все возможные параметры оптимизации. Если вы хотите узнать 
о них всё, почитайте <uri link="http://gcc.gnu.org/onlinedocs/">онлайновые руководства GNU (англ.)</uri> 
или страницу описания <c>gcc</c> (<c>info gcc</c> — доступна только на 
работающей системе Linux). Не забудьте прочитать сам файл 
<path>make.conf.example</path>: в нем также есть немало примеров и полезных сведений. 
</p>

<p>
Первый параметр — флаг <c>-march=</c> или флаг <c>-mtune=</c>, где указывается 
название целевой архитектуры. Возможные варианты описаны в комментариях в 
файле <path>make.conf.example</path>. Например, там могут быть уровни системы
команд (<c>mips1</c> ... <c>mips4</c>) или модели процессоров (<c>r4400</c>,
<c>r4600</c> ... и т.д.). Просто для указания на уровень системы команд,
нужно указать <c>-mips3</c>, а не <c>-march=mips3</c>.
</p>

<pre caption="Настройки -march и -mips# для GCC">
<comment>(На системе R4600...)</comment>
-march=r4600

<comment>(На любом MIPS4 процессоре...)</comment>
-march=mips4

<comment>(Или укажите уровень системы команд явно...)</comment>
-mips4
</pre>

<p>
Следующий — флаг <c>-O</c> (заглавная латинская «O», а не ноль), определяющий 
класс оптимизации в <c>gcc</c>. Допустимые значения: <c>s</c> — оптимизация 
по размеру; <c>0</c> — ноль, без оптимизации; <c>1</c>, <c>2</c> или даже <c>3</c> — 
все большая оптимизация по скорости (в каждый класс входят все флаги предыдущего, и 
некоторые дополнительные). <c>-O2</c> является рекомендуемым значением по умолчанию. 
<c>-O3</c> при использовании для всей системы, иногда вызывает проблемы, поэтому 
мы рекомендуем вам остановиться на <c>-O2</c>. 
</p>

<pre caption="Настройка O для GCC">
-O2
</pre>

<p>
Очень важная настройка в мире MIPS это флаг <c>-mabi=</c>. У MIPS есть 3
различных ABI: <c>32</c> (чистые 32 бит, также <c>o32</c>), <c>64</c>
(полные 64 бит, также <c>n64</c>) и <c>n32</c> (смесь 32-битных структур
данных с 64-битными инструкциями). Этот флаг выбирает, какую опцию
из указанных вы хотите использовать. Заметьте, что вам понадобятся
библиотеки для той ABI, которую вы веберете. В терминах layman, это означает,
что, например, вы не сможете использовать <c>-mabi=64</c> на 32-битном
пользовательском окружении (или даже на пользовательском окружении <c>n32</c>).
</p>

<p>
Другой популярный флаг оптимизации — <c>-pipe</c> (использование для связи между 
различными проходами компилятора каналов вместо временных файлов).
</p>

<p>
Использование <c>-fomit-frame-pointer</c> (не хранить в регистре указатель стекового 
кадра для функций, которым он не нужен) может всерьез помешать отладке программ. 
</p>

<p>
При определении переменных <c>CFLAGS</c> и <c>CXXFLAGS</c>, нужно объединить несколько 
флагов оптимизации, как показано в примере ниже.
</p>

<pre caption="Определяем переменные CFLAGS и CXXFLAGS">
CFLAGS="-mabi=32 -mips4 -pipe -O2"
CXXFLAGS="${CFLAGS}"                  <comment># Используем одни и те же значения для обеих переменных</comment>
</pre>

<note>
Вы можете также захотеть просмотреть 
<uri link="/doc/en/gcc-optimization.xml">гайд по оптимизации процесса компиляции</uri> для 
более детальной информации о том, как различные опции компиляции могут повлиять на вашу систему. 
</note>

</body>
</subsection>
<subsection>
<title>MAKEOPTS</title>
<body>

<p>
С помощью <c>MAKEOPTS</c> определяется, сколько параллельных процессов 
компиляции можно запускать при установке пакета. Хорошим вариантом (но не всегда 
оптимальным) является значение, равное количеству процессоров (или ядер) в 
вашей системе плюс один. 
</p>

<pre caption="MAKEOPTS для обычной однопроцессорной системы">
MAKEOPTS="-j2"
</pre>

</body>
</subsection>
<subsection>
<title>На старт, внимание, марш!</title>
<body>

<p>
Измените <path>/mnt/gentoo/etc/make.conf</path> в соответствии со своими 
пожеланиями, и сохраните изменения (пользователям <c>nano</c> нужно нажать 
<c>CTRL-X</c>). Теперь вы готовы к 
<uri link="?part=1&amp;chap=6">установке базовой системы Gentoo</uri>. 
</p>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-date: 2012-12-09
source-cvs-revision: 1.13
moved-by: Vladimir Romanov [blueboar2@gmail.com]
-->
