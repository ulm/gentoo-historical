<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-portage-files.xml,v 1.8 2012/12/09 19:13:29 swift Exp $ -->

<sections>

<abstract>
Так как вы хотите полностью узнать Portage, вы должны знать, где он хранит 
свои файлы и данные.
</abstract>

<version>2</version>
<date>2012-07-24</date>

<section>
<title>Файлы Portage</title>
<subsection>
<title>Директивы настройки</title>
<body>

<p>
Настройки Portage по умолчанию хранятся в <path>/etc/make.globals</path>. Когда 
вы откроете этот файл, вы увидите, что все настройки представляют собой 
переменные. Что означает каждая из переменных, описано ниже.
</p>

<p>
Так как многие директивы отличаются в зависимости от используемой архитектуры, 
к Portage прилагаются настройки по умолчанию, которые входят в ваш профиль. На 
ваш профиль указывает символическая ссылка  <path>/etc/portage/make.profile</path>. 
Настройка Portage выполняется c помощью файлов <path>make.defaults</path> 
вашего профиля и всех родительских профилей. Более подробно о профилях и 
каталоге <path>/etc/portage/make.profile</path> мы расскажем позже.
</p>

<p>
Если вы планируете вносить изменения в конфигурационные переменные, <e>не</e> 
изменяйте <path>/etc/make.globals</path> или <path>make.defaults</path>. Вместо 
этого пользуйтесь файлом <path>/etc/portage/make.conf</path>, который имеет приоритет 
перед вышеуказанными файлами. Вы также обнаружите файл 
<path>/usr/share/portage/config/make.conf.example</path>. Как понятно из его названия, это просто 
пример &mdash; Portage не использует этот файл.
</p>

<p>
Переменные Portage также можно устанавливать как переменные среды, но мы не 
рекомендуем этого делать.
</p>

</body>
</subsection>
<subsection>
<title>Конфигурация, определяемая профилем</title>
<body>

<p>
Мы уже встречались с каталогом <path>/etc/portage/make.profile</path>. На самом деле 
это не каталог, а символическая ссылка на профиль, по умолчанию на тот, что 
содержится в <path>/usr/portage/profiles</path>, однако вы можете создавать 
свои собственные профили где угодно и ссылаться на них. Профиль, указанный 
ссылкой, является профилем, к которому принадлежит ваша система.
</p>

<p>
В профиле содержатся сведения для Portage, специфичные для архитектуры, такие 
как список пакетов, принадлежащих соответствующей системе, список 
неработоспособных (или замаскированных) пакетов, и т.д.
</p>

</body>
</subsection>
<subsection>
<title>Конфигурация, задаваемая пользователем</title>
<body>

<p>
Если вам необходимо изменить поведение Portage относительно установки 
программного обеспечения, вам потребуется отредактировать файлы, находящиеся в 
<path>/etc/portage</path>. Мы <e>настоятельно рекомендуем</e> вам пользоваться 
файлами из <path>/etc/portage</path>, <e>всеми силами отговариваем</e> от 
настройки поведения Portage через переменные среды!
</p>

<p>
Внутри <path>/etc/portage</path> вы можете создать следующие файлы:
</p>

<ul>
  <li>
    <path>package.mask</path>, в котором перечислены пакеты, которые 
    Portage никогда не следует устанавливать
  </li>
  <li>
    <path>package.unmask</path>, со списком пакетов, для которых вы хотите 
    иметь возможность установки, даже если разработчики Gentoo отговаривают вас
    от этого
  </li>
  <li>
    <path>package.accept_keywords</path>, где перечислены пакеты, которые должны быть
    доступны для установки, несмотря на то, что они не подходят для вашей
    системы или архитектуры (пока) 
  </li>
  <li>
    <path>package.use</path>, где перечислены значения USE-флагов, которые 
    необходимо указывать для конкретных пакетов, а не для всей системы
  </li>
</ul>

<p>
Не обязательно создавать файлы с такими названиями, можно создать каталоги,
которые будут содержать по одному файлу на каждый пакет. Дополнительные 
сведения о каталоге <path>/etc/portage</path>, а также список всех файлов, 
которые там можно создавать, находятся на справочной странице Portage:
</p>

<pre caption="Вызов справки по Portage">
$ <i>man portage</i>
</pre>

</body>
</subsection>
<subsection>
<title>Изменение файлов Portage и размещения каталогов</title>
<body>

<p>
Ранее упомянутые конфигурационные файлы нельзя хранить где угодно &mdash; 
Portage всегда ищет свои настроечные файлы в строго определенных местах. Однако 
Portage также использует множество каталогов для других целей: каталог для 
сборки, место для хранения исходных кодов, место для дерева Portage, и т.д.
</p>

<p>
Для этих целей существуют хорошо известные каталоги по умолчанию, положение 
которых можно изменить на свой вкус, внеся изменения в 
<path>/etc/portage/make.conf</path>. Оставшаяся часть этой главы посвящена описанию 
того, какие специальные места Portage использует для своих целей, и как 
изменить их расположение в файловой системе.
</p>

<p>
Этот документ не претендует на статус справочника. Если вам необходим полный 
объем информации, пожалуйста, обратитесь к страницам справки по Portage и 
<path>make.conf</path>:
</p>

<pre caption="Вызов справки по Portage и make.conf">
$ <i>man portage</i>
$ <i>man make.conf</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Хранение файлов</title>
<subsection>
<title>Дерево Portage</title>
<body>

<p>
Дерево Portage размещается, по умолчанию, в <path>/usr/portage</path>. Это 
определяется значением переменной PORTDIR. Когда вы храните дерево Portage 
где-либо в другом месте (изменив эту переменную), не забывайте соответственно 
изменить символическую ссылку <path>/etc/portage/make.profile</path>.
</p>

<p>
Если вы измените переменную PORTDIR, вам может потребоваться изменить и 
следующие переменные: PKGDIR, DISTDIR, RPMDIR, так как они не замечают 
изменений PORTDIR. Это связано с особенностями их обработки Portage.
</p>

</body>
</subsection>
<subsection>
<title>Двоичные пакеты</title>
<body>

<p>
Несмотря на то, что Portage по умолчанию не использует прекомпилированное 
программное обеспечение, для него предусмотрена очень мощная поддержка. Если вы 
укажете Portage работать с прекомпилированными пакетами, они будут 
разыскиваться в <path>/usr/portage/packages</path>. Это расположение 
определяется переменной PKGDIR.
</p>

</body>
</subsection>
<subsection>
<title>Исходные коды</title>
<body>

<p>
Исходные коды приложений хранятся в <path>/usr/portage/distfiles</path> 
по умолчанию. Это определяется переменной DISTDIR.
</p>

</body>
</subsection>
<subsection>
<title>База данных Portage</title>
<body>

<p>
Portage хранит состояние вашей системы (какие пакеты установлены, какие файлы 
относятся к определенным пакетам и т. п.) в <path>/var/db/pkg</path>. <e>Не 
изменяйте</e> эти файлы вручную! Это может разрушить знание вашей системы 
Portage.
</p>

</body>
</subsection>
<subsection>
<title>Кэш Portage</title>
<body>

<p>
Кэш Portage (включая сведения о времени изменения, виртуальные пакеты, 
информацию дерева зависимостей и т. д.) хранится в <path>/var/cache/edb</path>. 
Это место действительно является кэшем: вы можете его очистить в любой момент, 
когда не запущены приложения, связанные с Portage.
</p>

</body>
</subsection>
</section>
<section>
<title>Сборка программного обеспечения</title>
<subsection>
<title>Временные файлы Portage</title>
<body>

<p>
По умолчанию Portage хранит временные файлы в <path>/var/tmp</path>. За это 
отвечает переменная PORTAGE_TMPDIR.
</p>

<p>
Если вы измените переменную PORTAGE_TMPDIR, вам может потребоваться изменить и 
переменную BUILD_PREFIX, так как она не замечает изменений PORTAGE_TMPDIR. Это 
связано с особенностями ее обработки Portage.
</p>

</body>
</subsection>
<subsection>
<title>Каталог сборки</title>
<body>

<p>
Portage создает специфичные каталоги сборки для каждого пакета внутри 
<path>/var/tmp/portage</path>. Это расположение задается переменной 
BUILD_PREFIX.
</p>

</body>
</subsection>
<subsection>
<title>Размещение &laquo;живой файловой системы&raquo;</title>
<body>

<p>
По умолчанию Portage устанавливает все файлы в текущую файловую систему 
(<path>/</path>), но это можно изменить, установив переменную окружения ROOT.   
Это может оказаться полезным при построении новых образов системы.
</p>

</body>
</subsection>
</section>
<section>
<title>Ведение журнала</title>
<subsection>
<title>Журнал Ebuild</title>
<body>

<p>
Portage может создавать отдельные файлы журнала для каждого файла ebuild, но 
только тогда, когда переменная PORT_LOGDIR указывает на место, доступное для 
записи для Portage (пользователя <e>portage</e>). По умолчанию эта переменная 
не установлена. Если вы не установите переменную PORT_LOGDIR, вы не получите 
никаких логов о компиляции с текущей системой логгинга, хотя вы можете получить 
некоторые логи с помощью нового <c>elog</c>. Если у вас определена переменная 
PORT_LOGDIR, и вы используете elog, вы можете получить логи о компиляции и 
любые логи, сохраненные программой elog, как будет объяснено ниже.
</p>

<p>
Portage предлагает множество вариантов логгинга при использовании <c>elog</c>:
</p>

<ul>
  <li>
    PORTAGE_ELOG_CLASSES: Здесь вы описываете, какие виды сообщений нужно логгировать. 
    Вы можете использовать любой набор из следующих величин, разделенных пробелами:
    <c>info</c>, <c>warn</c>, <c>error</c> и <c>log</c> и <c>qa</c>.
    <ul>
      <li><c>info</c>: Помещает в лог сообщения einfo, напечатанные ebuild</li>
      <li><c>warn</c>: Помещает в лог сообщения ewarn, напечатанные ebuild</li>
      <li><c>error</c>: Помещает в лог сообщения eerror, напечатанные ebuild</li>
      <li><c>log</c>: Помещает в лог сообщения elog, которые есть в некоторых ebuild</li>
      <li><c>qa</c>: Помещает в лог сообщения QA Notice, напечатанные ebuild</li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_SYSTEM: Это выбирает модуль(ли), которые будут обрабатывать 
    сообщения логов. Если его оставить пустым, логгинг будет выключен. Вы можете 
    использовать любую комбинацию из следующих значений, разделенных пробелами - 
    <c>save</c>, <c>custom</c>, <c>syslog</c> и <c>mail</c>. Хотя бы одно значение 
    нужно выбрать, чтобы использовать elog.
    <ul>
      <li>
        <c>save</c>: Это сохраняет один лог на каждый пакет в <path>$PORT_LOGDIR/elog</path> 
        или <path>/var/log/portage/elog</path>, если $PORT_LOGDIR не определена.
      </li>
      <li>
        <c>custom</c>: Передает все сообщения определенной пользователем команде в 
        $PORTAGE_ELOG_COMMAND, которая будет обсуждаться позже.
      </li>
      <li>
        <c>syslog</c>: Посылает все сообщения на установленный системный логгер
      </li>
      <li>
        <c>mail</c>: Передает все сообщения на определенный пользователем почтовый сервер в 
        $PORTAGE_ELOG_MAILURI, это будет обсуждаться позже. Возможности mail 
        требуют &gt;=<c>portage 2.1.1</c>.
      </li>
      <li>
        <c>save_summary</c>: Похоже на save, но он сохраняет все сообщения в 
        <path>$PORT_LOGDIR/elog/summary.log</path>, или в <path>/var/log/portage/elog/summary.log</path>, 
        если $PORT_LOGDIR не определена.
      </li>
      <li>
        <c>mail_summary</c>: Похоже на mail, но посылает все сообщения в одном письме, 
        когда emerge завершает работу.
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_COMMAND: Эта переменная используется только когда включен модуль 
    <c>custom</c>. Именно здесь вы определяете команду для работы с сообщениями 
    лога. Заметьте, что вы можете использовать две переменные: ${PACKAGE} — 
    это имя и версия пакета и ${LOGFILE}, это абсолютный путь к файлу лога. 
    Вот один из возможных способов использования:
    <ul>
      <li>
        PORTAGE_ELOG_COMMAND="/path/to/logger -p '\${PACKAGE}' -f '\${LOGFILE}'" 
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_MAILURI: Это содержит настройки для модуля mail, такие как адрес, 
    пользователь, пароль, почтовый сервер и номер порта. Значение по умолчанию - 
    "root@localhost localhost"
  </li>
  <li>
    Вот пример для smtp-сервера, который требует имя пользователя и пароль на 
    конкретный порт (по умолчанию порт 25):
    <ul>
      <li>
        PORTAGE_ELOG_MAILURI="user@some.domain username:password@smtp.some.domain:995" 
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_MAILFROM: Позволяет вам настроить поле отправителя адресов писем с 
    логами. Обычно это "portage", если данная переменная пуста.
  </li>
  <li>
    PORTAGE_ELOG_MAILSUBJECT: Позволяет вам настроить поле "тема" для писем с логами. 
    Заметьте, что вы можете использовать две переменных: ${PACKAGE} — покажет название 
    пакета и версию, и ${HOST}, который является полным именем домена на котором Portage работает.
  </li>
  <li>
    Вот один из примеров использования:
    <ul>
      <li>
        PORTAGE_ELOG_MAILSUBJECT="package \${PACKAGE} was merged on \${HOST} with some messages" 
      </li>
    </ul>
  </li>
</ul>

<impo>
Если вы использовали <c>enotice</c> в Portage-2.0.*, вы должны полностью убрать enotice, 
так как она несовместима с elog.
</impo>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-date: 2012-07-24
source-cvs-revision: 1.22
translated-by: Vasiliy Golubev [vas@nightmail.ru]
edited-by: Alexey Chumakov [achumakov@gentoo.org]
edited-by: Vladimir Romanov [blueboar2@gmail.com]
-->
