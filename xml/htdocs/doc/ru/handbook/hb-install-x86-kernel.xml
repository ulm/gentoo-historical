<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">


<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<!-- Текст этого документа распространяется на условиях лицензии CC-BY-SA -->
<!-- См. http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/Attic/hb-install-x86-kernel.xml,v 1.11 2006/03/30 15:29:45 achumakov Exp $ -->


<sections>

<version>3.11</version>
<date>2006-01-06</date>

<section>
<title>Часовой пояс</title>
<body>

<p>
Сначала необходимо выбрать часовой пояс (time zone), чтобы система знала, где 
вы находитесь. Найдите подходящий пояс в <path>/usr/share/zoneinfo</path>, 
затем скопируйте его в <path>/etc/localtime</path>. Постарайтесь, пожалуйста, 
избегать использования часовых поясов 
<path>/usr/share/zoneinfo/Etc/GMT*</path>, т. к. их названия не соответствуют
ожидаемым поясам. Например, <path>GMT-8</path> фактически является поясом GMT+8.
</p>

<pre caption="Установка часового пояса">
# <i>ls /usr/share/zoneinfo</i>
<comment>(допустим, вы хотите использовать GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>

<section>
<title>Установка исходных кодов ядра</title>
<subsection>
<title>Выбор ядра</title>
<body>

<p>
Ядро Linux &mdash; это то, вокруг чего формируются все дистрибутивы. Это слой 
между пользовательскими программами и вашим оборудованием. Пользователи Gentoo 
могут выбирать из нескольких типов ядра. Их полный список и описание находится 
в <uri link="/doc/en/gentoo-kernel.xml">руководстве по выбору ядра Gentoo 
(англ.)</uri>.
</p>

<p>
Для x86 систем, помимо прочего, есть такие ядра, как <c>vanilla-sources</c> 
(ядро по умолчанию от разработчиков linux ядра), <c>gentoo-sources</c> (ядро с
заплатками, улучшающими производительность).
</p>

<p>
С помощью команды <c>emerge</c> выберите и установите ядро. <c>USE="-doc"</c> 
требуется, чтобы на этом этапе избежать установки xorg-x11 или других связанных 
пакетов. <c>USE="symlink"</c> при новой установке не требуется, но обеспечивает
правильное создание символьной ссылки <path>/usr/src/linux</path>:
</p>

<pre caption="Установка исходных кодов ядра">
# <i>USE="-doc symlink" emerge gentoo-sources</i>
</pre>

<p>
Просмотрев содержимое каталога <path>/usr/src</path>, вы увидите
символьную ссылку <path>linux</path>, которая указывает на каталог с
исходными кодами ядра. В данном случае, установленный исходный код ядра
указывает на <c>gentoo-sources-2.6.12-r10</c>. Имейте в виду, что ваша версия 
может отличаться.
</p>

<pre caption="Просмотр папки с исходными кодами ядра">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.12-gentoo-r10
</pre>

<p>
Теперь настало время настройки и компиляции ядра. Можно использовать сценарий 
<c>genkernel</c>, который сформирует стандартное ядро, аналогичное 
используемому на установочном компакт-диске. Однако сначала мы расскажем о
&laquo;ручной&raquo; настройке ядра, так как это лучший из способов
оптимизации системы.
</p>

<p>
Если вы собираетесь настроить ядро вручную, то переходите к разделу <uri
link="#manual">по умолчанию: ручная настройка</uri>. Если вы хотите
использовать <c>genkernel</c>, то читайте <uri link="#genkernel">альтернатива:
использование genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>По умолчанию: ручная настройка</title>
<subsection>
<title>Введение</title>
<body>

<p>
Ручная настройка ядра считается одним из самых сложных вопросов для 
пользователей Linux. Зато после настройки нескольких вариантов ядра вы и не
вспомните, что это когда-то было трудно ;)
</p>

<p>
Однако есть одна непреложная <e>истина</e>: запуская ручную настройку ядра, 
следует знать состав аппаратуры своего компьютера. Большую часть информации 
можно собрать, установив пакет pciutils (<c>emerge pciutils</c>), в который 
входит <c>lspci</c>. <c>lspci</c> можно использовать, находясь в среде с 
временным корневым каталогом. Можно не обращать внимания на предупреждения, 
касающиеся <e>pcilib</e> (например: pcilib: cannot open /sys/bus/pci/devices 
[pcilib: не могу открыть /sys/bus/pci/devices]), которые выводит на экран 
<c>lspci</c>. Можно запустить <c>lspci</c> и <e>вне временной среды 
установки</e>. Результат тот же. Вы также можете запустить <c>lsmod</c> для 
просмотра модулей ядра, используемых установочным компакт-диском (это даст 
хорошую подсказку, какие параметры включать).
</p>

<p>
Теперь войдите в каталог с исходными кодами ядра и введите команду <c>make
menuconfig</c>. Этой командой вы вызовете меню настройки, использующее
ncurses.
</p>

<pre caption="Вызов меню настройки">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Перед вами появятся несколько разделов настройки. Сначала перечислим пункты,
включение которых обязательно (иначе Gentoo не заработает, или для его работы
потребуются дополнительные ухищрения).
</p>

</body>
</subsection>
<subsection>
<title>Включение нужных пунктов</title>
<body>

<p>
Прежде всего, разрешите использование разрабатываемого и экспериментального
кода и драйверов. Без этого не появятся некоторые важные пункты:
</p>

<pre caption="Выбор экспериментальных кодов/драйверов, основные параметры">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers"
General setup  ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Удостоверьтесь, что каждый драйвер, жизненно необходимый для загрузки системы
(например, SCSI-контроллера), собран <e>внутри</e> ядра, а не как модуль, иначе 
система совсем не сможет загрузиться.
</p>

<p>
Далее выберите нужное семейство процессоров:
</p>

<pre caption="Выбор нужного семейства процессоров">
Processor type and features ---&gt;
  <comment>(измените в соответствии со своей системой)</comment>
  (<i>Athlon/Duron/K7</i>) Processor family 
</pre>

<p>
Теперь войдите в <c>File Systems</c> и выберите поддержку всех нужных
файловых систем. <e>Не</e> компилируйте их как модули, иначе система Gentoo не
сможет смонтировать дисковые разделы. Также выберите <c>Virtual memory</c> и
<c>/proc file system</c>. При использовании ядра 2.4, вам потребуется включить 
<c>/dev file system</c>, т.к. это ядро не поддерживает <c>udev</c>.
</p>

<pre caption="Выбор необходимых файловых систем">
<comment>(при использовани ядра 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   automatically mount /dev at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(при использовании ядра 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(включите поддержку всех нужных вам файловых систем)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Если ваш BIOS не поддерживает жесткие диски большого размера, и вы ограничили
перемычками сообщаемый диском объем, то для получения доступа ко всему диску
нужно включить следующие параметры ядра:
</p>

<pre caption="Включение поддержки автокоррекции геометрии">
<comment>(только в ядре 2.4.x)</comment>
ATA/IDE/MFM/RLL support ---&gt;
  IDE, ATA and ATAPI Block devices ---&gt;
    &lt;*&gt;   Include IDE/ATA-2 DISK support
    [ ]     Use multi-mode by default
    [*]     Auto-Geometry Resizing support
</pre>

<p>
Не забудьте включить поддержку режима DMA для ваших дисков:
</p>

<pre caption="Включение DMA">
Device Drivers ---&gt;
  ATA/ATAPI/MFM/RLL support ---&gt;
    [*] Generic PCI bus-master DMA support
    [*]   Use PCI DMA by default when available
</pre>

<p>
Если вы используете PPPoE или коммутируемого соединения для соединения с 
интернетом, потребуется включить в ядре следующие функции:
</p>

<pre caption="Выбор нужных драйверов PPPoE">
<comment>(при использовании ядра 2.4.х)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
  
<comment>(при использовании ядра 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Два параметра сжатия данных не являются обязательными, но и не повредят.
То же относится и к параметру <c>PPP over Ethernet</c> который нужен только
для <c>rp-pppoe</c>, для поддержки PPPoE в режиме ядра.
</p>

<p>
При необходимости, не забудьте включить в ядре поддержку своей сетевой платы.
</p>

<p>
Если у вас процессор Intel с поддержкой HyperTreading или многопроцессорная 
система, следует включить &laquo;симметричную многопроцессорную 
обработку&raquo;:
</p>

<pre caption="Включение поддержки SMP">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Если вы пользуетесь устройствами ввода на шине USB, (например, мышью или 
клавиатурой), не забудьте включить их поддержку:
</p>

<pre caption="Включение поддержки USB для устройств ввода">
USB Support ---&gt;
  &lt;*&gt;   USB Human Interface Device (full HID) support
</pre>

<p>
Владельцам ноутбуков, которым нужна поддержка PCMCIA, <e>не нужно</e> 
включать драйверы PCMCIA в ядре, выбрав ядро версии 2.4. В пакете 
<c>pcmcia-cs</c>, который будет устанавливаться позже, есть более свежие 
драйверы. Пользователям ядра 2.6 следует использовать драйверы PCMCIA, 
включенные в ядро.
</p>

<p>
Наряду с включением поддержки PCMCIA в ядре 2.6, не забудьте включить
поддержку моста PCMCIA своей системы:
</p>

<pre caption="Включение поддержки PCMCIA для ядра 2.6">
Bus options (PCI, PCMCIA, EISA, MCA, ISA)  ---&gt;
  PCCARD (PCMCIA/CardBus) support  ---&gt;
    &lt;*&gt; PCCard (PCMCIA/CardBus) support
<comment>(если нужно (обычно нужно), включите поддержку старых 16-битных карт PCMCIA)</comment>
    &lt;*&gt;   16-bit PCMCIA support
    [*]   32-bit CardBus support
<comment>(выберите наиболее подходящий мост)</comment>
    --- PC-card bridges
    &lt;*&gt; CardBus yenta-compatible bridge support (NEW)
    &lt;*&gt; Cirrus PD6729 compatible bridge support (NEW)
    &lt;*&gt; i82092 compatible bridge support (NEW)
    &lt;*&gt; i82365 compatible bridge support (NEW)
    &lt;*&gt; Databook TCIC host bridge support (NEW)
</pre>

<p>
Закончив настройку ядра, приступайте к <uri link="#compiling">компиляции и 
установке</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Компиляция и установка</title>
<body>

<p>
Теперь, когда ядро настроено, настало время его скомпилировать и установить. 
Выйдите из настройки и запустите процесс компиляции:
</p>

<pre caption="Компиляция ядра">
<comment>(для ядра 2.4)</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>(для ядра 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
По завершении компиляции, скопируйте образ ядра в каталог <path>/boot</path>. 
Используйте любое имя, которое вам покажется подходящим для избранного ядра, и
запомните его, так как позже при настройке начального загрузчика оно 
потребуется. Не забудьте заменить <path>&lt;версия-ядра&gt;</path> на
имя и версию своего ядра.
</p>

<pre caption="Установка ядра">
# <i>cp arch/i386/boot/bzImage /boot/&lt;версия-ядра&gt;</i>
</pre>

<p>
Теперь переходите к <uri link="#kernel_modules">модулям ядра</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Альтернатива: использование genkernel</title>
<body>

<p>
Если вы читаете эти строки, значит, вы собираетесь использовать наш сценарий
<c>genkernel</c> для настройки ядра за вас.
</p>

<p>
Теперь когда исходные коды ядра установлены, настало время скомпилировать ядро,
собрав его автоматически при помощи сценария <c>genkernel</c>. <c>genkernel</c> 
выполняет настройку ядра практически так же, как настраивается ядро на 
установочном компакт-диске. То есть система, ядро которой собрано 
<c>genkernel</c>, как правило, будет выполнять определение всех устройств при
загрузке. Поскольку genkernel не требует никакой ручной настройки ядра, это 
идеальное решение для тех, кому неуютно от одной мысли, что придется 
компилировать ядро.
</p>

<p>
Рассмотрим, как использовать genkernel. Сначала установите его:
</p>

<pre caption="Установка genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Теперь, если вы собираетесь использовать ядро ветви 2.6, скопируйте настройку 
ядра, используемую установочным диском, в каталог, где genkernel ищет настройку 
по умолчанию:
</p>

<pre caption="Копирование файла настройки ядра с установочного диска">
<comment>(только если вы собираетесь настраивать ядро 2.6.х)</comment>
# <i>zcat /proc/config.gz &gt; /usr/share/genkernel/x86/kernel-config-2.6</i>
</pre>

<p>
Теперь скомпилируйте исходный код ядра, запустив <c>genkernel all</c>. Имейте в 
виду, что компиляция займет приличное время, поскольку <c>genkernel</c> 
собирает ядро, поддерживающее практически любое оборудование.
</p>

<p>
Если в загрузочном разделе не используется файловая система ext2 или ext3, то 
вам придется вручную настроить ядро, запустив <c>genkernel --menuconfig 
all</c>, добавив поддержку используемой файловой системы <e>в</e> ядро (т.е. 
<e>не</e> модулем). Пользователям EVMS2 или LVM2, вероятно, захочется также 
добавить параметр командной строки <c>--evms2</c> или <c>--lvm2</c>.
</p>

<pre caption="Запуск genkernel">
# <i>genkernel all</i>
</pre>

<p>
В итоге работы <c>genkernel</c> будет создано ядро, полный набор модулей и 
<e>начальный корневой диск</e> (initrd). Ядро и initrd будут использоваться
в процессе настройки загрузчика системы, которая описана далее в руководстве.
Запишите имена ядра и начального корневого диска, так как они понадобятся при 
составлении конфигурационного файла загрузчика. initrd запускается сразу при
начальной загрузке, выполняя автоматическое определение устройств (точно так 
же, как при запуске установочного диска), до запуска &laquo;настоящей&raquo; 
системы.
</p>

<pre caption="Уточнение названия созданного образа ядра и initrd">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

<p>
Теперь давайте еще на шаг приблизим нашу систему к установочному диску: соберем 
<c>coldplug</c>. Если initrd определяет оборудование, необходимое для загрузки 
системы, <c>coldplug</c> выполняет автоопределение всех остальных устройств. 
Для установки и подключения <c>coldplug</c> введите команду:
</p>

<pre caption="Установка и подключение coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Модули ядра</title>
<subsection>
<title>Настройка модулей</title>
<body>

<p>
Модули, которые требуется загружать автоматически, нужно указать в
<path>/etc/modules.autoload.d/kernel-2.4</path> (или <path>kernel-2.6</path>).
Также, при желании, модулям можно сообщить дополнительные параметры.
</p>

<p>
Для просмотра всех доступных модулей запустите команду <c>find</c>, заменив
&laquo;&lt;версия ядра&gt;&raquo; на версию только что собранного ядра:
</p>

<pre caption="Просмотр перечня доступных модулей">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Например, для автоматической загрузки модуля <c>3c59x.o</c> измените файл 
<path>kernel-2.4</path> или <path>kernel-2.6</path>, указав в нем имя модуля.
</p>

<pre caption="Изменение /etc/modules.autoload.d/kernel-2.4">
<comment>(показан пример для ядра 2.4.x)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 или kernel-2.6">
3c59x
</pre>

<p>
Далее переходите к <uri link="?part=1&amp;chap=8">настройке 
параметров системы</uri>.
</p>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 3.10-r2
target-date: 2006-03-30
source-cvs-revision: 1.60
translated-by: Vasiliy Golubev [vas@nightmail.ru]
edited-by: Alexey Chumakov [achumakov@gentoo.org]
-->
