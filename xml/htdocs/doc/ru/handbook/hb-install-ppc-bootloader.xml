<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-install-ppc-bootloader.xml,v 1.5 2006/03/08 12:51:37 achumakov Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>2.9</version>
<date>2006-02-27</date>

<section>
<title>Делаем выбор</title>
<subsection>
<title>Введение</title>
<body>

<p>
Теперь, когда выше ядро сконфигурировано и скомпилировано, вам нужен
<e>начальный загрузчик</e> для запуска Linux. Необходимый вам <e>начальный
загрузчик</e> зависит от используемого вами типа компьютера PPC.
</p>

<p>
Если у вас компьютер NewWorld Apple или IBM, вам нужно использовать <uri
link="#yaboot">yaboot</uri>. Для компьютеров OldWorld Apple есть два решения,
<uri link="#bootx">BootX</uri> (рекомендуется) и <uri link="#quik">quik</uri>.
Компьютерам Pegasos не нужен начальный загрузчик, но вам понадобится
установить <uri link="#bootcreator">BootCreator</uri> для создания загрузочных
меню SmartFirmware.

Для платформы Linux/PPC существует несколько загрузчиков. Это 
<uri link="#yaboot">Yabooot</uri> (для компьютеров NewWorld от Apple и IBM)
и <uri link="#bootx">BootX</uri> (для компьютеров OldWorld от Apple).
Для Pegasos загрузчик не нужен, но мы включили 
<uri link="#bootcreator">BootCreator</uri> для создания меню SmartFirmware.
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>По умолчанию: использование Yaboot</title>
<subsection>
<title>Введение</title>
<body>

<impo>
yaboot можно использовать только на компьютерах NewWorld Apple или IBM!
</impo>

<p>
Чтобы найти загрузочные устройства, yaboot необходим доступ к файлам устройств, 
создаваемым udev при запуске, и файловой системе sysfs. Эти две файловые 
системы находятся в <path>/dev</path> и <path>sys</path>, соответственно.
Для этого вам потребуется &laquo;привязать&raquo; эти файловые системы с корня 
установочного диска на точки монтирования <path>/dev</path> и <path>/sys</path>
внутри среды измененного корня (chroot). Если файловые системы уже привязаны, 
делать это повторно не требуется.
</p>

<pre caption="Монтирование файловых систем устройств и системной">
# <i>exit </i> # выйдем из chroot
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>mount -o bind /sys /mnt/gentoo/sys</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>
    
<p>
Чтобы установить yaboot, вы можете использовать <c>yabootconfig</c> для
автоматического создания конфигурационного файла. Если вы устанавливаете Gentoo
на компьютер G5 (где <c>yabootconfig</c> не всегда работает) или вы планируете
загружаться с firewire или USB, вам придется вручную настроить yaboot.
</p>

<note>
Если вы использовали genkernel, возможно вам придется вручную подправить
yaboot.conf, даже если вы запускали yabootconfig. Раздел образа ядра должен
быть исправлен, как показано ниже:
</note>

<pre caption="Добавление параметров загрузки genkernel yaboot.conf">
<comment>###########################################################
## Этот раздел может быть повторен, если у вас несколько ядер или вы хотите
## установить параметры загрузки. Замените kernel-2.6.15 точным именем вашего 
## ядра.
###########################################################</comment>
image=/boot/kernel-2.6.15
  label=Linux
  root=/dev/ram0    <comment># Если вы использовали genkernel, то это /dev/ram0</comment>
  partition=3
  sysmap=/boot/System.map-2.6.9
  append="real_root=/dev/hda3 init=/linuxrc"  
  <comment># Вы можете добавить дополнительные параметры ядра, например
  # rootdelay=10 для загрузки с USB/Firewire</comment>
  
  read-only
<comment>##########################################################</comment>
</pre>

<ul>
  <li>
    <uri link="#yabootconfig">По умолчанию: использование yabootconfig</uri>
  </li>
  <li>
    <uri link="#manual_yaboot">Альтернатива: конфигурирование Yaboot вручную</uri>
  </li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig">
<title>По умолчанию: использование yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> автоматически определит разделы на вашей машине и установит
двойную или тройную комбинацию загрузки для Linux, Mac OS и Mac OX X.
</p>

<p>
Чтобы использовать <c>yabootconfig</c>, на вынем диске должен быть раздел
Apple_Bootstrap, а в <path>/etc/fstab</path> должны быть отражены ваши разделы 
Linux. Эти шаги должны были быть выполнены ранее, но все же проверьте
<path>/etc/fstab</path>, прежде чем продолжить. Убедимся, что у вас установлен
<c>yaboot</c>.
</p>

<pre caption = "Установка yaboot">
# <i>emerge yaboot</i>
</pre>

<p>
Теперь выйдем из chroot и запустим <c>yabootconfig --chroot /mnt/gentoo</c>.
После запуска программа попросит подтвердить путь к загрузочному разделу.
Если вы использовали предложенную схему разбивки диска, заргузочным разделом 
будет /dev/hda2. Нажмите <c>Y</c>, если раздел указан правильно. Если нет,
перепроверьте файл <path>/etc/fstab</path>. Затем yabootconfig просмотрит 
настройку вашей системы, создаст <path>/etc/yaboot.conf</path> и запустит 
<c>mkofboot</c>. <c>mkofboot</c> используется для форматирования раздела 
Apple_Bootstrap и установки в него конфигурационных файлов. После этого войдите 
в chroot снова. 
</p>
<pre caption="Возвращение в chroot">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Вам следует убедиться в правильности <path>/etc/yaboot.conf</path>. Если вы
измените этот файл (например для выбора основной системы для загрузки), вам
следует запустить <c>ybin -v</c> для того, чтобы изменения вступили в силу.
</p>

<p>
Теперь переходите к разделу <uri link="#reboot">Перезагрузка системы</uri>
</p>

</body>
</subsection>
<subsection id="manual_yaboot">
<title>Альтернатива: настройка Yaboot вручную</title>
<body>

<p>
Для начала убедитесь что у вас установлен <c>yaboot</c>.
</p>

<pre caption = "Установка yaboot">
# <i>emerge yaboot</i>
</pre>

<p>
Ниже представлен полный пример файла <path>yaboot.conf</path>, но вам
понадобится изменить его под свои нужды. Пользователи G5 и пользователи,
загружающие систему с FireWire или USB, должны помнить, что их диски для ядра
выглядят как SCSI-диски, поэтому они должны заменить <path>/dev/hda</path> на
<path>/dev/sda</path>.
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## запустите: "man yaboot.conf" для получения более подробной информации
## До тех пор ничего не меняйте!!!
## См. также примеры конфигурации: /usr/share/doc/yaboot/examples 
##
## Для меню с двойной загрузкой добавьте одну или более строк:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## раздел bootstrap:</comment>
boot=/dev/hda2

<comment>## ofboot - это метод указания bootstrap-раздела для openfirmware
## Если вы его не укажите, yaboot не будет работать на G5 и некоторых G4
## и вам придется передать соответствующие параметры программам mkofboot/ybin.
## hd:X означает /dev/sdaX (или /dev/hdaX).
## 
## Пользователи G5 должны должны раскомментировать эту строку!!!
# ofboot=hd:2
## Пользователи, загружающиеся со встроенного ПО должны добавить строку,
## подобную этой:
# ofboot=fw/node/sbp-2/disk@0:

## Пользователи, загружающиеся с USB должны добавить строку, подобную этой:
# ofboot=usb/disk@0:

## hd: - это сокращение для первого жесткого диска, который
видит OpenFirmware</comment>
device=hd:

<comment>## Пользователи Firewire и USB должны указать соответствующее OF-имя
## устройства. Оно может быть определено при помощи ofpath из пакета yaboot.

# device=fw/node@0001d200e00d0207/sbp-2@c000/disk@0:
</comment>

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Этот раздел можно повторять, если у вас несколько ядер и вариантов 
## загрузочных опций. Замените 2.6.9 на свою версию ядра.
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/hda3
  partition=3
  <comment>#  append="rootdelay=10"  # Необходимо для загрузки с USB/Firewire</comment>
  read-only
<comment>##################

## Пользователи G5 и некоторых G4 должны выставить 
##   macos=hd:13
##   macosx=hd:12
## вместо значений в примере.</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Как только <path>yaboot.conf</path> будет настроен, запустите <c>mkofboot -v</c>
для форматирования раздела Apple_bootstrap и установки настроек. Если вы
измените yaboot.conf после создания Apple_bootstrap, вы можете обновить
настройки, запустив <c>ybin -v</c>
</p>

<p>
Для более подробной информации о Yaboot зайдите на сайт <uri  
link="http://penguinppc.org/bootloaders/yaboot">проекта Yaboot</uri>. А сейчас
переходите к разделу <uri link="#reboot">Перезагрузка системы</uri>.
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>Альтернатива: BootX</title>
<body>

<impo>
BootX можно использовать только на OldWorld компьютерах Apple и IBM!
</impo>

<p>
Так как BootX загружает Linux из MacOS, нам придется скопировать ядро с
раздела Linux на раздел с Mac OS. Сначала смонтируйте раздел с Mac OS извне
среды измененного корня. Используйте <c>mac-fdisk -l</c> чтобы узнать номер
раздела. Далее мы будем использовать sda6. Когда раздел будет смонтирован, мы
скопируем ядро в системный каталог, чтобы BootX смог его найти.
</p>

<pre caption="Копирование ядра в раздел Mac OS">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux "/mnt/mac/System Folder/Linux Kernels"</i>
</pre>

<p>
Если был использован genkernel, необходимо скопировать ядро и initrd в раздел
Mac OS.
</p>

<pre caption="Копирование ядра и initrd в раздел Mac OS">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initramfs-* "/mnt/mac/System Folder"</i>
</pre>


<p>
Теперь, когда ядро скопировано, вам понадобится перезагрузиться для установки
BootX.
</p>

<pre caption="Размонтирование всех разделов и перезагрузка">
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Конечно, не забудьте убрать загрузочный CD из привода, так как на этот раз
необходимо загрузить Mac OS.
</p>

<p>
Как только компьютер загрузится в Mac OS, откройте панель управления BootX.
Если вы не использовали genkernel, выберите <c>Options</c> и снимите флажок с
<c>Used specified RAM disk</c>. Иначе проверьте, что выбран именно initrd от
genkernel, а не с установочного диска. Если вы не использовали genkernel, то у
вас есть возможность указать корневой диск и раздел Linux. Укажите необходимые
параметры и, если необходимо, параметры загрузки, зависящие от
конфигурации ядра.
</p>

<p>
BootX можно настроить для запуска Linux во время загрузки. Если вы
сделаете так, то сначала ваша машина будет загружаться в Mac OS, но во время
загрузки BootX запустит и загрузит Linux. Подробнее смотрите тут: <uri
link="http://penguinppc.org/bootloaders/bootx/">домашняя страница BootX</uri>.
</p>

<impo>
Убедитесь, что в вашем ядре есть поддержка файловых систем HFS и HFS+, а то вы 
не сможете обновлять или изменять ядро на своем разделе MacOS.
</impo>

<p>
Теперь снова перезагрузитесь и загрузитесь в Linux, затем продолжите с 
<uri link="?part=1&amp;chap=11">Окончание установки Gentoo</uri>.
</p>

</body>
</section>

<section id="quik">
<title>Альтернатива: quik</title>
<body>

<p>
quik позволяет загружаться компьютерам OldWorld без Mac OS. Тем не менее, он не
очень хорошо поддерживает множество quirk'ов (причуд &mdash; <e>прим. пер.</e>).
Если есть выбор, рекомендуется использовать BootX, так как он намного надежнее
и проще, чем quik.
</p>

<p>
Сначала нам необходимо установить quik:
</p>

<pre caption="Установка quik">
# <i>emerge quik</i>
</pre>

<p>
Затем необходимо его настроить. Отредактируйте /etc/quik.conf и укажите
скопированный в загрузочный раздел образ ядра.
</p>

<pre caption="Настройка quik.conf">
# Пример quik.conf
init-message = "Gentoo 2006.0\n"
partition = 2           <comment># Загрузочный раздел</comment>
root = /dev/hda4
timeout = 30
default = gentoo
image = /vmlinux-2.6.15
        label = gentoo
</pre>

<p>
Файл quik.conf <e>должен находиться</e> на том же диске, что и загрузочные
образы quik, хотя он может быть на другом разделе этого диска. Однако
рекомендуется перенести его в загрузочный раздел.
</p>

<pre caption="Перенос quik.conf в /boot">
# <i>mv /etc/quik.conf /boot/quik.conf</i>
</pre>

<p>
Теперь настроим переменные загрузки, с которыми будет запускаться quik при
загрузке. Для этого мы воспользуемся программой <c>nvsetenv</c>. Необходимые
вам переменные различны для разных компьютеров, лучше найдите <uri
link="http://penguinppc.org/bootloaders/quik/quirks.php">quirk'и</uri> для
вашего компьютера перед тем, как начать.
</p>

<pre caption="Настройка переменных загрузки">
# <i>nvsetenv auto-boot true</i>
<comment># Установите в false, если вы хотите загружаться в OF, не все модели способны 
отображать вывод OF</comment>
# <i>nvsetenv output-device video</i>
<comment># Проверьте страницу quirk'ов, здесь очень много вариаций.</comment>
# <i>nvsetenv input-device kbd</i>
# <i>nvsetenv boot-device scsi/sd@1:0</i> <comment># Для SCSI</comment>
# <i>nvsetenv boot-device ata/ata-disk@0:0</i> <comment># Для ATA</comment>
# <i>nvsetenv boot-file /boot/vmlinux-2.6.15 root=/dev/hda4</i>
<comment># Первый параметр - путь к ядру, второй - корневой раздел. Вы можете добавить
любые параметры ядра в конец этой строки.</comment>
# <i>nvsetenv boot-command boot</i>
<comment># Установите это, чтобы распрощаться с Mac OS и загружаться в Linux</comment>
</pre>

<note>
Также можно изменить переменные загрузки Mac OS. В зависимости от модели нужно
выбрать или 
<uri link="http://penguinppc.org/bootloaders/quik/BootVars.sit.hqx">bootvars</uri>,
или
<uri link="ftp://ftp.apple.com/developer/macosxserver/utilities/SystemDisk2.3.1.smi.bin">
Apple System Disk</uri>.
Пожалуйста, загляните на страницу quik для более детальной информации.
</note>

<p>
Теперь, чтобы настроить компьютер для загрузки, нам нужно удостовериться, что
загрузочные образы установлены правильно. Запустите <c>quik -v -C
/boot/quik.conf</c>. Должно появиться сообщение, что был установлен первый
загрузочный блок QUIK.
</p>

<note>
Если что-то произошло не так, вы всегда можете переустановить PRAM назад к
значениям по умолчанию, удерживая <c>command + option + p + r</c> перед
загрузкой компьютера. Этим вы очистите установленные вами значения с nvsetenv и
вы сможете загрузить загрузочный диск Mac OS или Linux.
</note>

<p>
Теперь можете продолжить установку с раздела <uri
link="#reboot">Перезагрузка системы</uri>.
</p>

</body>
</section>

<section id="bootcreator">
<title>Альтернатива: BootCreator</title>
<body>

<impo>
BootCreator создаст для Pegasos загрузочное меню SmartFirmware, написанное на
Forth.
</impo>

<p>
Сначала проверим, что у нас установлена самая свежая версия <c>bootcreator</c>.
</p>

<pre caption = "Установка bootcreator">
# <i>emerge bootcreator</i>
</pre>

<p>
Теперь скопируйте <path>/etc/bootmenu.example</path> в
<path>/etc/bootmenu</path> и отредактируйте так, как в вам нужно:
</p>

<pre caption = "Редкатировние конфигурационного файла bootcreator">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
Пример конфигурационного файла <path>/etc/bootmenu</path> представлен ниже.
</p>

<pre caption = "Конфигурационный файл bootcreator">
<comment>#
# Пример файла описания для bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux 2.6.15 (Normal)
ide:0 linux-2.6.15 video=radeonfb:1024x768@70 root=/dev/hda3

[SECTION]
Local HD -> Genkernel (Normal)
ide:0 kernelz-2.6.15 root=/dev/ram0 real_root=/dev/hda3 init=/linuxrc

</pre>

<p>
После всего <path>bootmenu</path> должен быть переведен в Forth и скопирован в
загрузочный раздел, где его сможет прочитать SmartFirmware. Чтобы сделать это,
запустите <c>bootcreator</c>:
</p>

<pre caption = "Установка загрузочного меню">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
После перезагрузки обязательно проверьте настройки SmartFirmware и
удостоверьтесь, что по умолчанию загружается именно <path>menu</path> файл.
</note>

<p>
Теперь вы можете читать раздел <uri link="#reboot">Перезагрузка системы</uri>.
</p>

</body>
</section>

<section id="reboot">
<title>Перезагрузка системы</title>
<subsection>
<body>
<p>
Выйдите из chroot, размонтируйте все смонтированные разделы, чтобы вы смогли
безопасно перезагрузиться, и введите <c>reboot</c>.
</p>

<pre caption="Выход из chroot, размонтирование всех разделов и перезагрузка">
# <i>exit</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Как только ваша новая установка Gentoo загрузится, закончите чтение
разделом <uri link="?part=1&amp;chap=11">Окончание установки Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 2.9-r1
target-date: 2006-03-08
source-cvs-revision: 1.33
translated-by: Aleksandr Zelinski <delph@ultranet.ru>, Sergey Kuleshov
<svyatogor@gentoo.org>, Azamat H. Hackimov <azazello1984@mail.ru>
edited-by: Sergey Kuleshov <svyatogor@gentoo.org>, Azamat H. Hackimov <azazello1984@mail.ru>

notes:
quik section added

(**)Needs further review /achumakov
-->
