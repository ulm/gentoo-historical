<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/handbook/hb-portage-tools.xml,v 1.2 2005/11/11 05:10:01 achumakov Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.4</version>
<date>2005-07-28</date>

<section>
<title>etc-update</title>
<body>
<p>
<c>etc-update</c> - это утилита, котроая предназначена для обновления в системе
<path>._cfg0000_&lt;имя&gt;</path> файлов.  Она обеспечивает интерактивное обновление 
настроек и может так же автоматически обновлять тривиальные изменения.
<path>._cfg0000_&lt;имя&gt;</path> файлы генерируются Portage, когда он хочет
перезаписать файл в директории, защищенной переменной CONFIG_PROTECT.
</p>

<p>
Выполнить <c>etc-update</c> довольно просто:
</p>

<pre caption="Запуск etc-update">
# <i>etc-update</i>
</pre>

<p>
После выполнения тривиальных обновлений, вы увидите список защищенных файлов, которые ожидают обновления. 
Внизу вам предложат следующие возможные опции:
</p>

<pre caption="Опции etc-update">
Please select a file to edit by entering the corresponding number.
              (-1 to exit) (-3 to auto merge all remaining files) [(-1 для выхода)
                           (-5 to auto-merge AND not use 'mv -i'):
</pre>

<p>
Если вы введете <c>-1</c>, <c>etc-update</c> выйдет, прекращая последующие изменения.
Если вы введете <c>-3</c> или <c>-5</c>, <e>все</e> перечисленные файлы конфигурации будут перезаписаны более новыми версиями. 
Следовательно, очень важно сначало выбирать файлы, которые не должны быть
автоматически обновлены. Для этого надо только ввести номер указанный слева от
файла.
</p>

<p>
Например, мы выбираем файл конфигурации <path>/etc/pear.conf</path>:
</p>

<pre caption="Обновление конкретного конфигурационного файла">
Beginning of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
<comment>[...]</comment>
End of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
1) Replace original with update 
2) Delete update, keeping original as is 
3) Interactively merge original with update 
4) Show differences again 
</pre>

<p>
Теперь вы можете видеть различия между двумя файлами. 
Если вы считаете, что обновленный файл конфигурации может быть использован без проблем, введите <c>1</c>. 
Если вы считаете, что обновленный файл конфигурации не нужен, или не содержит новую или полезную информацию, введите <c>2</c>. 
Если вы хотите обновить текущий файл в интерактивном режиме, введите <c>3</c>.
</p>

<p>
Нет никакого смысла в подробном описании интерактивного обновления. 
Для полноты изложения, мы перечислим возможные команды, которые вы можете
использовать во время того, как вы объедините два файла. 
Вас приветствуют 2 строки (одна оригинальная и вторая измененная) и запрос, в который вы можете ввести одну из следующих команд: 
</p>

<pre caption="Комманды доступные при интерактивном объединении двух файлов">
ed:     Редактируйте с использованием обеих версий, каждой будет добавлен заголовок.
eb:     Редактируйте с использованием обеих версий.
el:     Редактируйте с использованием левой версии.
er:     Редактируйте с использованием правой версии.
e:      Редактируйте новую версию.
l:      Используйте левую версию.
r:      Используйте правую версию.
s:      Режим Silent (тихий режим).
v:      Режим Verbose ('многословный' режим).
q:      Выход.
</pre>

<p>
Когда вы закончили обновлять важные файлы конфигурации, можете автоматически обновить оставшиеся файлы конфигурации. 
<c>etc-update</c> выйдет, если не найдет других файлов, подлежащих обновлению.
</p>

</body>
</section>
<section>
<title>dispatch-conf</title>
<body>

<p>
	С помощью <c>dispatch-conf</c> вы можете объединять оригинальные и
	обновленные файлы конфигурации, сохраняя при этом историю изменений.
	<c>dispatch-conf</c> хранит различия между файлами конфигурации, как патчи
	или в системе ревизий RCS.
</p>

<p>
Как <c>etc-update</c>, вы можете попросить сохранить файл конфигурации как есть, использовать новый файл конфигурации, редактировать текущий или добавить изменения интерактивно. 
Однако, <c>dispatch-conf</c> также имеет некоторые дополнительные возможности:
</p>

<ul>
  <li>
    Автоматическое обновление файлов, в которых обновились только комментарии
  </li>
  <li>
    Автоматическое обновление файлов, которые различаются только в количестве пробелов
  </li>
</ul>

<p>
Убедитесь, что вы сначала отредактировали <path>/etc/dispatch-conf.conf</path> и
создали директорию, прописанную в archive-dir.
</p>

<p>
Для большей информации, посмотрите man <c>dispatch-conf</c>:
</p>

<pre caption="Читаем руководство по dispatch-conf">
$ <i>man dispatch-conf</i>
</pre>

</body>
</section>
<section>
<title>quickpkg</title>
<body>

<p>
С <c>quickpkg</c> вы можете создавать архивы пакетов, которые уже установлены в вашей системе. 
Эти архивы могут быть использованы, как пре-компилированные пакеты. 
Выполнять <c>quickpkg</c> просто: только добавьте имена пакетов, архивы которых вам нужны.
</p>

<p>
Например, для архива <c>curl</c>, <c>arts</c> и <c>procps</c>:
</p>

<pre caption="Пример использование quickpkg">
# <i>quickpkg curl arts procps</i>
</pre>

<p>
Prebuilt пакеты будут храниться в <path>$PKGDIR/All</path> (по умолчанию 
<path>/usr/portage/packages/All</path>). Символьные ссылки указывающие на 
пакеты, расположены в <path>$PKGDIR/&lt;категория&gt;</path>.
</p>

</body>
</section>
</sections>

<!-- *$Localization:
target-language: Russian
target-version: 1.4-r1
target-date: 2005-11-11
source-cvs-revision: 1.7
translated-by: Analyzer
edited-by: none
-->
