<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/nvidia-guide.xml,v 1.6 2006/11/08 11:02:04 achumakov Exp $ -->

<guide link="/doc/ru/nvidia-guide.xml" lang="ru" disclaimer="draft">
<title>Руководство по видеокартам nVidia в Gentoo Linux</title>

<author title="автор">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="редактор">
  <mail link="curtis119@gentoo.org">M Curtis Napier</mail>
</author>
<author title="редактор">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="редактор">
  <mail link="wolf31o2@gentoo.org">Chris Gianelloni</mail>
</author>

<author title="переводчик">
  <mail link="selecter@spray.se">Антон Кузьмин</mail>
</author>
<author title="переводчик">
  <mail link="azamat.hackimov@gmail.com">Азамат Хакимов</mail>
</author>
<author title="переводчик, редактор перевода">
  <mail link="yuri@yast.msk.ru">Астахов Юрий</mail>
</author>

<abstract>
Многие гентузиасты являются владельцами чипсетов nVidia. nVidia 
предоставляет специальные драйверы Linux для увеличения производительности 
вашей карты. Из этого руководства вы узнаете, как установить и настроить эти 
драйверы.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.28</version>
<date>2006-10-23</date>

<chapter>
<title>Введение</title>
<section>
<body>

<p>
Компания nVidia выпускает свои собственные драйверы для Linux, отличающиеся 
хорошей производительностью и поддержкой трехмерного ускорения. В дереве 
Portage присутствуют два драйвера &mdash; <c>nvidia-drivers</c> для новых 
видеокарт nVidia и <c>nvidia-legacy-drivers</c> для старых.
</p>

<note>
Раньше в Gentoo было два отдельных пакета &mdash; для модуля ядра 
nVidia(<c>nvidia-kernel</c>) и для библиотек GLX X11 
(<c>nvidia-glx</c>). Эти пакеты были удалены из дерева Portage для замены на 
<c>nvidia-drivers</c> и <c>nvidia-legacy-drivers</c>. Если вы до сих пор 
используете <c>nvidia-kernel</c> и <c>nvidia-glx</c>, то вы должны перейти 
на использование новых пакетов.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Настройка карты</title>
<section>
<title>Конфигурирование ядра</title>
<body>

<p>
Как уже было сказано, драйвер nVidia настраивается и запускается для 
текущего ядра. Он собирается в качестве модуля, поэтому ядро должно 
поддерживать загрузку модулей. Если вы использовали <c>genkernel</c> для 
конфигурации ядра, тогда все уже сделано. Если же нет, тогда дважды 
проверьте конфигурацию вашего ядра на наличие поддержки загружаемых модулей:
</p>

<pre caption="Включение загрузки модулей ядра">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
Также вам потребуется включить в ядре <e>Memory Type Range Register</e>:
</p>

<pre caption="Включение MTRR">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>

<p> Также, если у вас AGP-видеокарта, вы можете включить поддержку 
<c>agpgart</c> в ядре или в виде модуля. Если вы не используете встроенный 
agpgart, то драйверы будут использовать собственную реализацию 
<c>agpgart</c> под названием <c>NvAGP</c>. На одних системах эта реализация 
работает лучше, чем встроенная, на других &mdash; хуже. Вам понадобится
проверить это на своей собственной системе, чтобы сделать выбор в пользу лучшей 
производительности. Если вы не хотите экспериментировать, просто используйте 
встроенный в ядро agpgart:
</p>

<pre caption="Включение agpgart">
Device Drivers ---&gt;
Character devices ---&gt;
&lt;*&gt; /dev/agpgart (AGP Support)
</pre> 

</body>
</section>
<section>
<title>Замечания к архитектурам</title>
<body>

<impo>
Что касается процессоров x86 и AMD64, встроенный в ядро драйвер конфликтует 
с двоичным драйвером, выпускаемым nVidia. Если вы собираете ядро для этих 
процессоров, следует полностью убрать поддержку встроенного драйвера, как
показано ниже:
</impo>

<pre caption="Удаление встроенного драйвера">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt; &gt;   nVidia Framebuffer Support
&lt; &gt;   nVidia Riva support
</pre>

<p>
Хорошей альтернативой кадрового буфера будет <c>VESA</c>:
</p>

<pre caption="Включение поддержки VESA">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt;*&gt;   VESA VGA graphics support
</pre>

<p>
Затем в разделе &laquo;VESA driver type&raquo; выберите либо <c>vesafb</c>, 
либо <c>vesafb-tng</c>. Если у вас процессор AMD64, вы должны выбрать 
<c>vesafb</c>, а не <c>vesafb-tng</c>:
</p>

<pre caption="Выбор типа кадрового буфера">
(X) vesafb
( ) vesafb-tng
</pre>

<p>
Если вы используете <c>vesafb</c>, то дополнительную информацию можно 
посмотреть в файле <path>/usr/src/linux/Documentation/fb/vesafb.txt</path>, 
или же найдите нужную документацию по кадровому буферу в каталоге 
<path>/usr/src/linux/Documentation/fb/</path>.
</p>

</body>
</section>
<section>
<title>Последующая настройка ядра</title>
<body>

<p>
The <c>nvidia-drivers</c> and <c>nvidia-legacy-drivers</c> ebuilds 
автоматически определят версию ядра на основании символической ссылки 
<path>/usr/src/linux</path>. Пожалуйста проверьте правильность конфигурации 
ядра и что эта ссылка правильно указывает на исходные коды. Обратитесь к 
разделу &laquo;Конфигурирование ядра&raquo; из <uri 
link="/doc/ru/handbook/">Настольной книги</uri> за подробностями 
конфигурирования ядра.
</p>

<p>
Если вы используете gentoo-sources-2.6.11-r6, каталог <path>/usr/src</path> 
может выглядеть примерно так:
</p>

<pre caption="Проверка символической ссылки /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ls -l</i>
<comment>(Проверьте, что ссылка linux указывает на нужный каталог)</comment>
lrwxrwxrwx   1 root root   22 Apr 23 18:33 linux -&gt; linux-2.6.11-gentoo-r6
drwxr-xr-x   4 root root  120 Apr  8 18:56 linux-2.4.26-gentoo-r4
drwxr-xr-x  18 root root  664 Dec 31 16:09 linux-2.6.10
drwxr-xr-x  18 root root  632 Mar  3 12:27 linux-2.6.11
drwxr-xr-x  19 root root 4096 Mar 16 22:00 linux-2.6.11-gentoo-r6
</pre>

<p>
В приведенном выводе можно увидеть, что символическая ссылка <c>linux</c> 
указывает на ядро <c>linux-2.6.11-gentoo-r6</c>.
</p>

<p>
Если ссылка не указывает на правильные исходники, вы должны обновить ее:
</p>

<pre caption="Создание или обновление символической ссылки /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ln -snf linux-2.6.11-gentoo-r6 linux</i>
</pre>

</body>
</section>
<section>
<title>Необязательный шаг: уточнение поддержки устаревших видеокарт</title>
<body>

<note>
К несчастью, некоторые устаревшие видеокарты не поддерживаются более новыми 
версиями пакетов <c>nvidia-drivers</c>. У nVidia есть <uri 
link="http://www.nvidia.com/object/IO_18897.html">список поддерживаемых 
видеокарт</uri>. Посмотрите этот список, прежде чем будете устанавливать 
драйверы.
</note>

<p>
В следующем списке указаны <b>неподдерживаемые</b> ныне видеокарты:
</p>

<pre caption="Неподдерживаемые видеокарты">
TNT2
TNT2 Pro
TNT2 Ultra
TNT2 Model 64 (M64)
TNT2 Model 64 (M64) Pro
Vanta
Vanta LT
GeForce 256
GeForce DDR
GeForce2 GTS
GeForce2 Pro
GeForce2 Ti
GeForce2 Ultra
GeForce2 MX Integrated graphics
Quadro
Quadro2 Pro
Quadro2 EX
</pre>

<p>
Если ваша карта присутствует в списке устаревших карт, то для поддержки 3D 
вам потребуется установить <c>nvidia-legacy-drivers</c>.
</p>

</body>
</section>
<section>
<title>Установка подходящих драйверов</title>
<body>

<p>
Теперь пора установить драйверы.
</p>

<pre caption="Установка драйверов nVidia">
<comment>(если вашей карты нет в списке устаревших карт)</comment>
# <i>emerge nvidia-drivers</i>
<comment>(если ваша карта присутствует в списке устаревших карт)</comment>
# <i>emerge nvidia-legacy-drivers</i>
</pre>

<impo>
Каждый раз, когда вы <uri link="/doc/ru/kernel-upgrade.xml">собираете новое 
ядро</uri> или пересобираете текущее, вам понадобится запускать 
<c>emerge nvidia-drivers</c> или <c>emerge nvidia-legacy-drivers</c> для 
переустановки модулей ядра nVidia.
</impo>

<p>
После завершения установки запустите <c>modprobe nvidia</c> для загрузки 
модуля в память.
</p>

<pre caption="Загрузка модуля">
# <i>lsmod | grep nvidia &amp;&amp; rmmod nvidia</i>
# <i>modprobe nvidia</i>
</pre>

<p>
Чтобы не приходилось вручную загружать модуль после каждой загрузки, 
вероятно, вам потребуется, чтобы это делалось автоматически при загрузке, 
поэтому откройте <path>/etc/modules.autoload.d/kernel-2.6</path> (или 
<path>kernel-2.4</path> в зависимости от используемой версии ядра) и 
добавьте строку <c>nvidia</c> в файл.  После этого не забудьте запустить 
<c>modules-update</c>.
</p>

<impo>
Если вы собрали <c>agpgart</c> в качестве модуля, то вам понадобиться 
указать его в <path>/etc/modules.autoload.d/kernel-2.6</path> (или 
<path>kernel-2.4</path>, в зависимости от версии ядра).
</impo>

<pre caption="Запуск modules-update">
# <i>modules-update</i>
</pre>

</body>
</section>
<section>
<title>Настройка X-сервера</title>
<body>

<p>
Как только необходимые драйверы установлены, вам потребуется настроить 
X-сервер, чтобы задействовать драйвер <c>nvidia</c> вместо используемого по 
умолчанию <c>nv</c>.
</p>

<p>
Откройте файл <path>/etc/X11/xorg.conf</path> своим любимым текстовым 
редактором (как <c>nano</c> или <c>vim</c>) и найдите раздел 
<c>Device</c>. В этом разделе измените строку <c>Driver</c>:
</p>

<pre caption="Замена nv на nvidia в файле настроек X-сервера">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
Теперь перейдите в раздел <c>Module</c> и проверьте, что будет загружаться 
модуль <c>glx</c>, а <c>dri</c>&nbsp;&mdash; не будет:
</p>

<pre caption="Изменение раздела Module">
Section "Module"
  <comment>(...)</comment>
  <i># Load  "dri"
  Load  "glx"</i>
  <comment>(...)</comment>
EndSection
</pre>

<p>
Далее, в разделе <c>Screen</c> проверьте, что каждая из инструкций 
<c>DefaultDepth</c> установлена в 16 или 24, или что у вас есть только 
подразделы <c>Display</c> с установленной <c>Depth</c> в 16 или 24. Без 
этого расширение nVidia GLX не будет запускаться.
</p>

<pre caption="Обновление раздела Screen">
Section "Screen"
  <comment>(...)</comment>
  <i>DefaultDepth 16</i>
  Subsection "Display"
  <comment>(...)</comment>
EndSection
</pre>

<p>
Запустите <c>eselect</c>, чтобы X-сервер использовал GLX-библиотеки nVidia:
</p>

<pre caption="Запуск eselect">
# <i>eselect opengl set nvidia</i>
</pre>

</body>
</section>
<section>
<title>Добавление пользователей в группу video</title>
<body>

<p>
Добавьте ваших пользователей в группу <c>video</c>, чтобы у них был доступ к 
файлам устройств nvidia:
</p>

<pre caption="Добавление пользователя в группу video">
# <i>gpasswd -a youruser video</i>
</pre>

<p>
Если вы не используете файловую систему <c>udev</c>, то, в целом, нет 
необходимости делать шаги, описываемые в следующем разделе, но они ничего не 
испортят и сделают систему стойкой к переменам.
</p>

</body>
</section>
<section>
<title>Тестирование карты</title>
<body>

<p>
Для тестирования карты nVidia запустите X и наберите <c>glxinfo | grep 
direct</c>. Вы должны увидеть, что прямая прорисовка (direct rendering)  
включена:
</p>

<pre caption="Проверка статуса прямой прорисовки">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
Чтобы узнать скорость прорисовки FPS (кадров в секунду), используйте 
программу <c>glxgears</c>.
</p>

</body>
</section>
<section>
<title>Включение поддержки nvidia</title>
<body>

<p>
Некоторые пакеты, например, <c>mplayer</c> и <c>xine-lib</c>, используют 
локальный USE-флаг &laquo;nvidia&raquo;, который разрешает поддержку 
аппаратного ускорения потока Mpeg (XvMCNVIDIA), полезного при просмотре 
широкоформатных фильмов. Добавьте &laquo;nvidia&raquo; к переменной USE в 
файле <path>/etc/make.conf</path> или добавьте его в качестве USE-флага для 
<c>media-video/mplayer</c> и/или <c>media-libs/xine-lib</c> в 
<path>/etc/portage/package.use</path>.
</p>

<p>
Затем запустите <c>emerge -uD --newuse world</c>, чтобы пересобрать 
приложения, которых коснулось изменение USE-флагов.
</p>

</body>
</section>
<section>
<title>Использование инструмента nVidia Settings</title>
<body>

<p>
Начиная с версии 1.0.6106, компания nVidia поставляет программу 
настройки. Эта программа может изменять настройки графики без перезапуска 
X-сервера и находится в дереве Portage под названием 
<c>media-video/nvidia-settings</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Проблемы</title>
<section>
<title>Работа 2D на компьютерах с ОЗУ 4 ГБ и более</title>
<body>

<p>
Если вы сталкиваетесь с проблемами при 2D-ускорении nVidia, скорее всего, вы 
не можете установить диапазон совмещения записи (write-combining range) для
MTRR. Чтобы проверить это, просмотрите содержимое <path>/proc/mtrr</path>:
</p>

<pre caption="Включена ли поддержка write-combining">
# <i>cat /proc/mtrr</i>
</pre>

<p>
Каждая строка должна содержать &laquo;write-back&raquo; или 
&laquo;write-combining&raquo;. Если вы видите строку, содержащую 
&laquo;uncachable&raquo;, то вам понадобится изменить настройки BIOS, чтобы 
исправить это.
</p>

<p>
Перезагрузитесь и войдите в BIOS, затем найдите настройки MTRR (возможно в 
&laquo;CPU Settings&raquo;). Измените установки с &laquo;continuous&raquo; 
на &laquo;discrete&raquo; и загрузитесь назад в Linux. Теперь вы не нигде не 
должны увидеть значения &laquo;uncachable&raquo;, и 2D-ускорение должно 
работать без какого-либо замедления.
</p>

</body>
</section>
<section>
<title>
  Пытаясь загрузить модуль ядра, я в ответ получаю &laquo;no such 
device&raquo;
</title>
<body>

<p>
Обычно это происходит, когда у вас нет подходящей видеокарты. Убедитесь, что 
ваша видеокарта основана на чипе nVidia (это можно проверить командой 
<c>lspci</c>).
</p>

<p>
Если вы уверены, что у вас карта nVidia, проверьте BIOS и проверьте, включен 
ли параметр <e>Assign IRQ to VGA</e>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Настройка для опытных</title>
<section>
<title>Документация</title>
<body>

<p>
Пакет драйверов nVidia поставляется с исчерпывающей документацией. Она 
устанавливается в <c>/usr/share/doc</c>, ее можно посмотреть следующей 
командой:
</p>

<pre caption="Просмотр документации NVIDIA">
<comment>(для nvidia-drivers)</comment>
$ <i>less /usr/share/doc/nvidia-drivers-*/README.gz</i>
<comment>(для nvidia-legacy-drivers)</comment>
$ <i>less /usr/share/doc/nvidia-legacy-drivers-*/README.gz</i>
</pre>

</body>
</section>
<section>
<title>Параметры модуля ядра</title>
<body>

<p>
Модуль ядра <c>nvidia</c> способен принимать некоторые параметры, с помощью 
которых вы можете изменять поведение драйвера. Большинство из них описано в 
документации. Чтобы добавить или изменить эти параметры, отредактируйте файл 
<c>/etc/modules.d/nvidia</c>. Не забудьте запустить <c>modules-update</c> 
после изменения этого файла и держите в голове, что вам понадобиться 
перезагрузить модуль <c>nvidia</c>, чтобы новые настройки подействовали.
</p>

<pre caption="Изменение параметров nvidia">
<comment>(Отредактируйте /etc/modules.d/nvidia вашим любимым редактором)</comment>
# <i>nano -w /etc/modules.d/nvidia</i>
<comment>(Обновление информации о модулях)</comment>
# <i>modules-update</i>
<comment>(Выгрузка модуля nvidia...)</comment>
# <i>modprobe -r nvidia</i>
<comment>(...и его загрузка снова)</comment>
# <i>modprobe nvidia</i>
</pre>

</body>
</section>
<section>
<title>Расширенная настройка X-сервера</title>
<body>

<p>
GLX-интерфейс также имеет множество настраиваемых параметров. Они управляют 
настройками TV-вывода, двойных мониторов, определением частоты монитора и 
т.д.  И снова, все доступные параметры подробно описаны в документации.
</p>

<p>
Если вы хотите задействовать любой из этих параметров, то вам нужно 
перечислить их в соответствующем разделе Device конфигурационного файла 
X-сервера (обычно <c>/etc/X11/xorg.conf</c>). Например, я хочу отключить 
всплывающий логотип nVidia при загрузке X-сервера:
</p>

<pre caption="Расширенная конфигурация nvidia в настройках X-сервера">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  <i>Option     "NoLogo" "true"</i>
  VideoRam   65536
EndSection
</pre>

</body>
</section>
</chapter>

</guide>

<!-- *$Localization:
target-language: Russian
target-version: 1.28-r2
target-date: 2006-11-07
sourde-cvs-version: 1.33
translated-by: Azamat H. Hackimov <azamat.hackimov@gmail.com>
edited-by:

notes:
slightly checked //achumakov
-->
