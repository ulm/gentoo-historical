<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ru/nvidia-guide.xml,v 1.5 2005/11/13 10:58:08 achumakov Exp $ -->

<guide link="/doc/ru/nvidia-guide.xml" lang="ru" disclaimer="draft">
<title>Руководство по видеокартам nVidia в Gentoo Linux</title>

<author title="автор">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="редактор">
  <mail link="curtis119@gentoo.org">M Curtis Napier</mail>
</author>
<author title="переводчик">
  <mail link="selecter@spray.se">Антон Кузьмин</mail>
</author>
<author title="переводчик">
  <mail link="azazello1984@mail.ru">Азамат Хакимов</mail>
</author>

<abstract>
Многие пользователи Gentoo <!--в раннем переводе gentooists - джентульмены,
круто перевел Антон, однако :) //Азамат--> являются владельцами чипсетов nVidia.
nVidia предоставляет специальные для Linux драйверы для увеличения
производительности вашей карты. Из этого руководства вы узнаете, как
установить и настроить эти драйверы.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.16</version>
<date>2005-10-25</date>

<chapter>
<title>Введение</title>
<section>
<body>

<p>
Компания nVidia выпускает свои собственные драйверы для Linux, отличающиеся
хорошей производительностью и полной 3D-ускорением. Выпускаемые драйверы
разделены на две части: <c>nvidia-kernel</c> и <c>nvidia-glx</c>.
</p>

<p>
<c>nvidia-kernel</c> является модулем для ядра, взаимодействующим с
оборудованием на низком уровне. Это просто модуль ядра, называемый <c>nvidia</c>
и устанавливаемый под исходный коды текущего ядра, и его нужно загружать каждый
раз, когда вы захотите задействовать драйверы nvidia.
</p>

<p>
Помимо модуля, вам потребуется установить GLX-библиотеку для X11
(<c>nvidia-glx</c>). Она используется X-сервером при прорисовке графики,
которая сама использует драйвер <c>nvidia-kernel</c> для взаимодействия с
видеокартой.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Настройка карты</title>
<section>
<title>Установка соответствующих драйверов</title>
<body>

<p>
Как говорилось выше, драйвер nVidia настраивается и запускается для текущего
ядра. Он собирается в качестве модуля, поэтому ядро должно поддерживать
загрузку модулей. Если вы использовали <c>genkernel</c> для конфигурации ядра,
тогда за вас все уже сделано. Если же нет, тогда дважды проверьте конфигурацию
вашего ядра на наличие поддержки:
</p>

<pre caption="Включение загрузки модулей ядром">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
Также вам потребуется включить в ядре <e>Memory Type Range Register</e>:
</p>

<pre caption="Включение MTRR">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>

<p>
Модули nVidia и библиотеки объединены в два пакета: <c>nvidia-glx</c> и
<c>nvidia-kernel</c>. Первый содержит GLX-библиотеки для X11, а второй
&mdash; модули ядра.
</p>

<p>
Сценарий установки пакета nvidia-kernel автоматически определит версию ядра
на основании символической ссылки <path>/usr/src/linux</path>. Пожалуйста,
проверьте, что эта ссылка указывает на верные исходные коды и что ядро
правильно сконфигурировано. Ознакомьтесь с разделом &laquo;Конфигурирование
ядра&raquo; из <uri link="/doc/ru/handbook/">Настольной книги</uri> для
подробностей конфигурирования ядра.
</p>

<p>
Если вы используете gentoo-sources-2.6.11-r6, каталог <path>/usr/src</path> 
может выглядеть примерно так:
</p>

<pre caption="Проверка символической ссылки /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ls -l</i>
<comment>(Проверьте, что каталог linux указывает на
правильное расположение)</comment>
lrwxrwxrwx   1 root root   22 Apr 23 18:33 linux -&gt; linux-2.6.11-gentoo-r6
drwxr-xr-x   4 root root  120 Apr  8 18:56 linux-2.4.26-gentoo-r4
drwxr-xr-x  18 root root  664 Dec 31 16:09 linux-2.6.10
drwxr-xr-x  18 root root  632 Mar  3 12:27 linux-2.6.11
drwxr-xr-x  19 root root 4096 Mar 16 22:00 linux-2.6.11-gentoo-r6
</pre>

<p>
В приведенном выводе можно увидеть, что символическая ссылка <c>linux</c>
указывает на ядро <c>linux-2.6.11-gentoo-r6</c>.
</p>

<p>
Если ссылка не указывает на правильные исходники, вы должны обновить ее:
</p>

<pre caption="Создание/обновление символической ссылки /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ln -snf linux-2.6.11-gentoo-r6 linux</i>
</pre>

<p>
Теперь пора установить <c>nvidia-kernel</c> и <c>nvidia-glx</c>. Так как 
<c>nvidia-glx</c> зависит от <c>nvidia-kernel</c>, установка <c>nvidia-glx</c>
установит их оба:
</p>

<pre caption="Установка модулей nVidia">
# <i>emerge nvidia-glx</i>
</pre>

<impo>
Каждый раз, когда вы <uri link="/doc/ru/kernel-upgrade.xml">компилируете новое
ядро</uri> или перекомпилируете текущее, вам понадобится запускать <c>emerge
nvidia-kernel</c> для переустановки модулей nVidia. nvidia-glx неподвержен
изменению ядра и его не нужно пересобирать при перекомпиляции/обновлении X.
</impo>

<p>
После завершения установки запустите <c>modprobe nvidia</c> для загрузки модуля
в память.
</p>

<pre caption="Загрузка модуля">
# <i>modprobe nvidia</i>
</pre>

<p>
Очевидно, что вы хотите, чтобы это делалось автоматически при каждой загрузке
системы, поэтому откройте <path>/etc/modules.autoload.d/kernel-2.6</path> (или
<path>kernel-2.4</path> в зависимости от используемой вами версии ядра) и
добавьте строку <c>nvidia</c> в файл. После этого не забудьте запустить
<c>modules-update</c>.
</p>

<pre caption="Запуск modules-update">
# <i>modules-update</i>
</pre>

</body>
</section>
<section>
<title>Настройка X-сервера</title>
<body>

<p>
Как только необходимые драйверы установлены, вам нужно настроить X-сервер, 
(XFree86 или Xorg), чтобы задействовать <c>nvidia</c> драйвер вместо
используемого по умолчанию <c>nv</c>.
</p>

<p>
Откройте файл <path>/etc/X11/xorg.conf</path> (или
<path>/etc/X11/XF86Config</path>, если вы еще используете старое размещение
файла) вашим любимым текстовым редактором (как <c>nano</c> или <c>vim</c>) и
найдите раздел <c>Device</c>. В этом разделе измените строку <c>Driver</c>:
</p>

<pre caption="Меняем nv на nvidia в файле настройки X-сервера">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
Теперь перейдите в раздел <c>Module</c> и проверьте, что будет загружаться
модуль <c>glx</c>, а не <c>dri</c>:
</p>

<pre caption="Изменение раздела Module">
Section "Module"
  <comment>(...)</comment>
  <i># Load  "dri"
  Load  "glx"</i>
  <comment>(...)</comment>
EndSection
</pre>

<p>
Далее, в разделе <c>Screen</c> проверьте, что каждая из директив
<c>DefaultDepth</c> установлена в 16 или 24, или что у вас есть только
подразделы <c>Display</c> с установленной <c>Depth</c> в 16 или 24. Без этого
расширение nvidia-glx не будет запускаться.
</p>

<pre caption="Updating the Screen section">
Section "Screen"
  <comment>(...)</comment>
  <i>DefaultDepth 16</i>
  Subsection "Display"
  <comment>(...)</comment>
EndSection
</pre>

<p>
Запустите <c>opengl-update</c> для того, чтобы X-сервер использовал
GLX-библиотеки от nVidia:
</p>

<pre caption="Запуск opengl-update">
# <i>opengl-update nvidia</i>
</pre>

</body>
</section>
<section>
<title>Добавление пользователей в группу video</title>
<body>

<p>
Добавьте ваших пользователей в группу <c>video</c>, чтобы они имели доступ 
к устройствам nvidia:
</p>

<pre caption="Добавление пользователя в группу video">
# <i>gpasswd -a youruser video</i>
</pre>

<p>
Если вы еще не используете <c>udev</c>, то в целом этого не нужно, но это не
причинит вреда и сделает систему готовой к будущему :).
</p>

</body>
</section>
<section>
<title>Тестирование карты</title>
<body>

<p>
Для тестирования nVidia-карты запустите X и наберите <c>glxinfo | grep
direct</c>. Вы должны увидеть, что direct rendering включен:
</p>

<pre caption="Проверка статуса direct rendering">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
Для мониторинга FPS используйте утилиту <c>glxgears</c>. 
</p>

</body>
</section>
<section>
<title>Включение поддержки nvidia</title>
<body>

<p>
Некоторые утилиты, например <c>mplayer</c> и <c>xine-lib</c>, используют
локальный USE-флаг &laquo;nvidia&raquo;, включающий поддержку XvMCNVIDIA,
которая полезна при просмотре фильмов. Добавьте &laquo;nvidia&raquo; к
переменной USE в файле <path>/etc/make.conf</path> или добавьте его в качестве
USE-флага для <c>media-video/mplayer</c> и/или <c>media-libs/xine-lib</c> в
<path>/etc/portage/package.use</path>.
</p>

<p>
Затем запустите <c>emerge -uD --newuse world</c>, чтобы пересобрать приложения,
которых коснулось изменение USE-флагов.
</p>

</body>
</section>
<section>
<title>Использоваие утилиты nVidia Settings</title>
<body>

<p>
Начиная с версии 1.0.6106, компания nVidia предоставляет утилиту настроек. Эта
утилита, позволяющая изменять настройки графики без перезапуска X-сервера,
находится в Portage под названием <c>media-video/nvidia-settings</c>.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Решение проблем</title>
<section>
<title>Работа 2D на компьютерах с ОЗУ 4 ГБ и более</title>
<body>

<p>
Если вы сталкиваетесь с проблемами при 2D-ускорении nVidia, скорее всего, вы не
можете установить write-combining для MTRR. Чтобы проверить это, просмотрите
содержимое <path>/proc/mtrr</path>:
</p>

<pre caption="Проверка включенности write-combining">
# <i>cat /proc/mtrr</i>
</pre>

<p>
Каждая строка должна содержать &laquo;write-back&raquo; или
&laquo;write-combining&raquo;. Если вы видите строку, содержащую
&laquo;uncachable&raquo;, то вам понадобится изменить настройки BIOS,
чтобы исправить это.
</p>

<p>
Перезагрузитесь и войдите в BIOS, затем найдите настройки MTRR (возможно
в &laquo;CPU Settings&raquo;). Измените установки с &laquo;continuous&raquo; на
&laquo;discrete&raquo; и загрузитесь назад в Linux. Теперь вы не должны увидеть
нигде значения &laquo;uncachable&raquo;, и 2D-ускорение должно работать без
какого-либо замедления.
</p>

</body>
</section>
<section>
<title>Я получаю предупреждения о неподдержке 4К-стека</title>
<body>

<p>
Пакеты <c>nvidia-kernel</c> версии старее 1.0.6106 поддерживают ядра только с
размером стека 8K. Последние версии ядер (2.6.6 и выше) способны поддерживать 
4K-стек. Не выбирайте размер стека 4K при конфигурации ядра, если вы
используете подобный пакет <c>nvidia-kernel</c>. Вы можете найти этот
параметр в разделе <c>Kernel Hacking</c>.
</p>

</body>
</section>
<section>
<title>
Пытаясь загрузить модуль ядра, я в ответ получаю &laquo;no such device&raquo;
</title>
<body>

<p>
Обычно это происходит, когда у вас нет подходящей видеокарты. Убедитесь, что 
ваша видеокарта основана на чипе nVidia (это можно проверить командой 
<c>lspci</c>).
</p>

<p>
Если вы уверены, что у вас карта nVidia, проверьте BIOS и посмотрите,
включен ли параметр <e>Assign IRQ to VGA</e>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Настройка для опытных</title>
<section>
<title>Документация</title>
<body>

<p>
Пакет драйверов nVidia поставляется с исчерпывающей документацией. Она
устанавливается в <c>/usr/share/doc</c> и может быть просмотрена следующей
командой:
</p>

<pre caption="Просмотр документации NVIDIA">
# <i>less /usr/share/doc/nvidia-glx-*/README.txt.gz</i>
</pre>

</body>
</section>
<section>
<title>Параметры модуля ядра</title>
<body>

<p>
Модуль ядра <c>nvidia</c> способен принимать некоторые параметры, с помощью
которых вы можете изменять поведение драйвера. Большинство из них описано в 
документации. Чтобы добавить или изменить эти параметры, отредактируйте файл
<c>/etc/modules.d/nvidia</c>. Не забудьте запустить <c>modules-update</c>
после изменения этого файла и то, что вам понадобиться перезагрузить модуль
<c>nvidia</c>, чтобы новые настройки были применены.
</p>

<pre caption="Изменение параметров nvidia">
<comment>(Отредактируйте /etc/modules.d/nvidia вашим любимым редактором)</comment>
# <i>nano -w /etc/modules.d/nvidia</i>
<comment>(Обновление информации о модулях)</comment>
# <i>modules-update</i>
<comment>(Выгрузка модуля nvidia...)</comment>
# <i>modprobe -r nvidia</i>
<comment>(...и его загрузка снова)</comment>
# <i>modprobe nvidia</i>
</pre>

</body>
</section>
<section>
<title>Продвинутая конфигурация X-сервера</title>
<body>

<p>
GLX-интерфейс также имеет множество настраиваемых параметров. Они управляют
настройками TV-вывода, двойных мониторов, детектирования частоты монитора и так
далее. И снова все доступные параметры подробно описаны в документации.
</p>

<p>
Если вы хотите задействовать любой из этих параметров, то вам нужно перечислить
их в соответствующем разделе Device конфигурационного файла X-сервера (обычно
<c>/etc/X11/xorg.conf</c>). Например, я хочу отключить всплывающий логотип
nVidia при загрузке X-сервера:
</p>

<pre caption="Продвинутая конфигурация nvidia в настройках X-сервера">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  <i>Option     "NoLogo" "true"</i>
  VideoRam   65536
EndSection
</pre>

</body>
</section>
</chapter>

</guide>

<!-- *$Localization:
target-language: Russian
target-version: 1.16-r1
target-date: 2005-11-13
sourde-cvs-version: 1.20
translated-by: Azamat H. Hackimov <azazello1984@mail.ru>
edited-by:

notes:
slightly checked //achumakov
-->
