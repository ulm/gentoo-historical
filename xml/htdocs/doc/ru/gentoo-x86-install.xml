<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/en/gentoo-x86-install.xml">
<!-- Revision 1.150 -->
  <title>Инструкции по установке Gentoo Linux 1.4 </title>
    <author title="Chief Architect">
    <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
  </author>
  <author title="Author">Chris Houser</author>
  <author title="Author">Jerry Alexandratos</author>
  <author title="Ghost">
    <mail link="g2boojum@gentoo.org">Grant Goodyear</mail>
  </author>
  <author title="Editor">
    <mail link="zhen@gentoo.org">John P. Davis</mail>
  </author>
  <author title="Editor">
    <mail link="Pierre-Henri.Jondot@wanadoo.fr">Pierre-Henri Jondot</mail>
  </author>
  <author title="Editor">
    <mail link="stocke2@gentoo.org">Eric Stockbridge</mail>
  </author>
  <author title="Editor">
    <mail link="rajiv@gentoo.org">Rajiv Manglani</mail>
  </author>
  <author title="Editor">
    <mail link="seo@gentoo.org">Jungmin Seo</mail>
  </author>
  <author title="Editor">
    <mail link="zhware@gentoo.org">Stoyan Zhekov</mail>
  </author>
  <author title="Editor">
    <mail link="jhhudso@gentoo.org">Jared Hudson</mail>
  </author>
  <author title="Editor">
    Colin Morey
  </author>
  <author title="Editor">
    <mail link="peesh@gentoo.org">Jorge Paulo</mail>
  </author>
  <author title="Editor">
    <mail link="carl@gentoo.org">Carl Anderson</mail>
  </author>
  <author title="Editor, Reviewer">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
  </author>
  <author title="Editor">
    <mail link="avenj@gentoo.org">Jon Portnoy</mail>
  </author>
  <author title="Reviewer">
    <mail link="gerrynjr@gentoo.org">Gerald J. Normandin Jr.</mail>
  </author>
  <author title="Reviewer">
    <mail link="spyderous@gentoo.org">Donnie Berkholz</mail>
  </author>
  <author title="Translator">
    <mail link="syschenko@ukr.net">Gleb Syschenko</mail>
  </author>
  <author title="Editor">
    <mail link="svyatogor@gentoo.org">Sergey Kuleshov</mail>
  </author>



  <abstract>Этот документ содержит инструкции по установке  релиза Gentoo Linux 1.4 (не _rc версий). 
	Существует много способов установки Gentoo Linux, все зависит от того, какую часть системы вы хотите собрать с нуля.
	</abstract>
<license/>
<version>2.6.4</version>
 <date>8 августа 2003</date>
  <chapter>
    <title>Об Установке</title>
    <section>
      <body>
	  <p>
	  Если вы здесь впервые, то позвольте сказать 'Добро пожаловать!'. Gentoo
	  Linux можно установить несколькими способами. Те кто хотят провести
	  установку быстро, могу воспользоваться набором заранее собранных пакетов.  
	  Желающие настроить как можно больше параметров могут собрать Gentoo Linux
	  полностью из исходных кодов (source code). Метод выбирать вам.
	  </p>
	  <p>
	  Серьезным отличием релиза 1.4 является новый двухдисковый комплект,
	  который вы можете заказать в <uri link="http://store.gentoo.org">Магазине
	  Gentoo</uri> или загрузить с наших зеркал. В настоящий момент у нас есть
	  комплекты состоящие из 2x CD для x86 (486 и выше), i686 (Pentium Pro,
	  Pentium II, Athlon/Duron и выше), Pentium III, Pentium 4 и Athlon XP. Что
	  бы узнать, какой комплект вам подходит лучше всего, прочитайте описание
	  каждого продукта в нашем <uri
	  link="http://store.gentoo.org">магазине</uri>.
	  </p>
	  <p>Теперь о том, что находится на каждом из дисков. Первый диск (&quot;CD
	  1&quot;) называется &quot;Live CD Installation&quot; и является
	  загрузочным CD-ROM - это означает, что вы можете вставить его в свой
	  CD-Drive и загрузить Gentoo Linux прямо с диска. Затем вы можете
	  использовать эту версию Gentoo для установки Gentoo Linux 1.4 на ваш
	  жесткий диск. Кроме загрузочной среды, каждый CD1 содержит все, что вам
	  необходимо, чтобы быстро установить Gentoo Linux, даже не имея Internet
	  подключения. Плюс к этому этот диск содержит несколько заранее собранных
	  пакетов, таких как XFree86 X сервер. Если у вас есть ISO образ диска CD 1,
	  то его имя будет оканчиваться на &quot;-cd1.iso&quot;.
	  </p>
	  <p>
	  Второй диск (&quot;CD 2&quot;) не является загрузочным и содержит набор
	  заранее собранных пакетов для вашей системы. На этом диске вы найдете
	  собранные и оптимизированные версии таких программ, как KDE, Gnome,
	  OpenOffic, Mozilla, Evolution и другие. CD 2 является <i>выборочным</i> и
	  предназначен для тех, кто хочет установить Gentoo Linux быстро. Пакеты
	  на этом диске займут потребуют около 36 часов компиляции на стандартной
	  однопроцессорной машине, если вы захотите собрать их из исходников. Если у 
	  вас есть ISO образ диска CD 2, то его имя будет оканчиваться на 
	  &quot;-cd2.iso&quot;.
	  </p>
	  <note>
	  Полный двух-дисковый комплект Gentoo Linux содержит Gentoo Reference
	  Platform, который является полной, заранее собранной системой Gentoo
	  Linux, включающей GNOME, KDE, Mozilla и OpenOffice. Gentoo Reference
	  Platform (GRP) был создан, что бы позволить провести установку Gentoo
	  Linux быстро, если вам это необходимо. Возможность "сборки из исходных
	  кодов", которая является краеугольным камнем Gentoo Linux всегда будет
	  является полностью поддерживаемым вариантом установки. Целью GRP является
	  сделать Gentoo Linux более удобным некоторым пользователям, не затронув при
	  этом возможность "установки из исходников" никаким образом.
	  </note>
	  <p>
	  Помимо двухдискового комплекта, мы также предоставляем очень маленький
	  "базовым" Live CD, который вы можете использовать для загрузки системы.
	  После загрузки вы можете настроить подключение к Internet и установить
	  Gentoo через сеть. Плюсом этого "базового" CD является то, что он
	  маленький и ISO образ может быть загружен очень быстро. Если вы
	  опытный пользователь и хотите установить самую свежую версию Gentoo Linux,
	  и при этом у вас быстрое сетевое подключение, то вы можете выбрать этот
	  вариант установки.Если у 
	  вас есть ISO образ этого диска, то его имя будет оканчиваться на 
	  &quot;-basic.iso&quot;.
	  </p>
	  <p>
	  Чтобы воспользоваться любым методом установки Gentoo Linux с CD, вам нужно
	  иметь процессор 486+ и, в идеале, 64 МБ RAM. (Gentoo Linux был успешно
	  собран с 64 МБ RAM + 64 МБ подкачки, но установка проходит крайне
	  медленно.)
	  </p>
      <p>
	  После загрузки с Live CD вам предоставляется еще больший выбор.
		
		Установка Gentoo Linux возможна из 3-х тарболов &quot;stage&quot;. Выбор тарболла
зависит от того, что именно из системы вы хотите скомпилировать  сами.
Тарбол stage1 позволяет загрузится и полностью построить всю систему с нуля. 
Тарбол stage2 строит Gentoo Linux на базе 'полусобранной' системы. 
Тарбол stage3 уже содержит базовый Gentoo Linux. Если вас интересует GRP
установка, то вы должны использовать stage3.</p>
        <p><b>Если вы делаете GRP установку, то с какого пакета вам начать -
		stage1, stage2 или stage3?</b> Дальнейшая информация поможет вам
		принять правильное решение.</p>
		<p>
		Stage1 позволяет полностью контролировать процесс установки и
		оптимизации и, по желанию, предварительно задействованную
		функциональность системы времени сборки.Пожалуй stage1 
		наиболее подойдет опытным пользователям, которые точно знают что они делают. 
		Кроме того этот метод прекрасно подходит тем, кто хочет побольше узнать
		о внутренней работе Gentoo Linux.
		</p>
		<p>
		Установка из тарбола Stage2, позволяет опустить процесс начальной сборки
		(bootstrap) и довольствоваться тем
		уровнем оптимизации, который был предусмотрен разработчиками.
		</p>
		<p>
		Быстрее всего можно
		установить систему используя тарбол stage3. Но это подразумевает, что
		настройки оптимизации будут теми, которые мы выбрали для вас (честно
		говоря, они достаточно хорошие и были тщательно выбраны, чтобы
		обеспечить максимальную производительность при высокой стабильности.)
		Так как основные релизы содержат stage3 пакеты специально
		оптимизированные под различные популярные процессоры, начав со stage3
		позволяет вам убить двух зайцев одним выстрелом: вы получаете быструю
		установку при высокой степени оптимизации.</p>
		<p>
		<b>Stage3 или Stage3 + GRP наиболее подходит для тех пользователей, 
		которые решили установить Gentoo Linux впервые.</b></p>
		
	<note><b>Опытным пользователям:</b>Если вы используете stage3 установку, то
	вы не должны менять установки CHOST в make.conf. Если вам нужно внести такие
	изменения, начните с stage1 и соберите систему с нужными установками CHOST.
	Установки CHOST как правило выглядят таким образом: <c>i686-pc-linux-gnu</c>
	</note>
	<impo>
	Если вы сталкиваетесь с проблемой в ходе установки и хотите сообщить о
	ней как об ошибке, вы можете сделать это на
	<uri>http://bugs.gentoo.org</uri>. Если об ошибке нужно сообщить
	непосредственно разработчикам программы (например KDE), то <e>разработчики
	Gentoo Linux</e> займутся этим.
	</impo>
	<note>Замечание: Инструкция по установке Gentoo Linux, которая находится на
	установочном диске может быть не самой новой так что рекомендуется
	использовать самую свежую версию с адреса
	<uri>http://www.gentoo.org/doc/en/gentoo-x86-install.xml</uri>. Разработчики
	Gentoo Linux рекомендуют использовать всю документацию с сайта т.к. там
	лежат самые свежие версии всех инструкций.</note>
	<p>
	Давайте взглянем в целом на процесс установки. Сначала нужно скачать образ
	диска, записать его с помощью cd-rw привода и загрузиться с него. Из консоли
	после загрузки диска уже с правами суперпользователя мы создадим партиции  и
	соответствующую файловую систему на них, распакуем необходимый архив:
	stage1, stage2 или stage3. Если вы выбрали stage1 или stage2 то придется
	выполнить некоторые действия чтобы довести его до готовности stage3 архива.
	Когда наша система доведена до состояния stage3, мы сможем ее настроить
	(настроить конфигурационные файлы, установить загрузчик и т.д.), загрузиться
	и получить полностью работоспособную систему Gentoo Linux. После того, как
	базовая система запущена, вы можете, по желанию, использовать CD 2 и
	установить заранее собранные пакеты, такие как KDE, GNOME, OpenOffice,
	Mozilla или другие, которые вы хотите, чтобы присутствовали в системе.
	</p>
<p>
В зависимости от того, с какого тарбола мы начинали, вот перечень того, что будет необходимо для инсталляции: </p>
        <table>
          <tr>
            <th>Тарбол</th>
			<th>Интернет доступ</th>
            <th>Необходимый носитель</th>
			<th>Шаги</th>
          </tr>
          <tr>
            <ti>1</ti>
			<ti>Да</ti>
			<ti><e>basic</e> или <e>CD 1</e></ti>
            <ti>разбиение диска/установка файловых систем, sync, боотстрап, установка системы, конечная настройка</ti>
          </tr>
          <tr>
            <ti>2</ti>
			<ti>Да</ti>
			<ti><e>basic</e> или <e>CD 1</e></ti>
            <ti>разбиение диска/установка файловых систем, sync,установка системы, конечная настройка</ti>
          </tr>
          <tr>
            <ti>3</ti>
			<ti>Нет если используется CD 1, иначе - Да</ti>
			<ti><e>basic</e> или <e>CD 1</e></ti>
            <ti>разбиение диска/установка файловых систем, sync(не нужен если
			используется CD 1),конечная настройка</ti>
          </tr>
        </table>
        <note>Владельцам ATA RAID прежде чем приступить 
	к установке следует ознакомиться с разделом ATA RAID в конце документа.
        </note>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Загрузка</title>
    <section>
      <body>
        <warn>Прежде чем приступить к установке, внимательно ознакомьтесь с 
		документом, особенно с разделом посвященным типам загрузки. Это может
		повлиять на работу клавиатуры,бездействие pcmcia, и.т.д.</warn>

        <p>Загрузитесь с выбранного вами LiveCD. Вы увидите прикольный логотип 
		Gentoo Linux logo на экране. Нажмите Enter чтобы приступить к загрузке
		или же предварительно укажите тип ядра и опции загрузки. Например  
		<c>gentoo nousb nohotplug</c>. Если вы устанавливаете Gentoo на систем 
		с более чем одним процессором, то укажите <c>smp</c> вместо gentoo. Это 
		позволит LiveCD видеть все процессоры, а не только первый.</p>
	<p> Смотрите таблицу ниже для частичного списка доступных ядер или нажмите F2
	и F3, чтобы увидеть экраны помощи.</p>
	<table>
	<tr>
		<th>Типы ядра.</th>
		<th>описание</th>
	</tr>
	
	<tr><ti>gentoo</ti><ti>базовое ядро gentoo (по умолчанию)</ti></tr>
	<tr><ti>nofb</ti><ti>без framebuffer</ti></tr>
	<tr><ti>smp</ti><ti>загрузка smp ядра с отключенным framebuffer-ом</ti></tr>
	<tr><ti>acpi</ti><ti>поддержка acpi=on с загрузкой модулей acpi вовремя инициализации</ti></tr>
	<tr><ti>memtest</ti><ti>загрузка программы тестирования памяти</ti></tr>

	</table>
	
	<p>
	<table>
	<tr>
		<th>Типы загрузки.</th>
		<th>описание</th>
	</tr>

	<tr><ti>doataraid</ti>
	<ti>загружает модули ide raid из initrd</ti></tr>
	
	<tr><ti>dofirewire</ti>
	<ti>загрузка модулей firewire для устройств firewire (firewire cd-rom, и др.) из initrd </ti></tr>

	<tr><ti>dokeymap</ti>
	<ti>выбор раскладки клавиатуры </ti></tr>

	<tr><ti>dopcmcia</ti>
	<ti>запуск службы pcmcia</ti></tr>

	<tr><ti>doscsi</ti>
	<ti>ищет устройства scsi (может негативно повлиять на работу некоторых сетевых карт)</ti></tr>

	<tr><ti>noapm</ti>
	<ti>отключение модуля apm при загрузке</ti></tr>

	<tr><ti>nodetect</ti>
	<ti>отключает запуск программ hwsetup/kudzu и hotplug</ti></tr>

	<tr><ti>nodhcp</ti>
	<ti>не включает службу dhcp если обнаружен nic</ti></tr>

	<tr><ti>nohotplug</ti>
	<ti>отключает загрузку службы hotplug устройств</ti></tr>

	<tr><ti>noraid</ti>
	<ti>отключает загрузку модулей evms</ti></tr>

	<tr><ti>nousb</ti>
	<ti>отключает загрузку модулей usb из initrd, также отключает hotplug</ti></tr>

	<tr><ti>ide=nodma</ti>
	<ti>отключает dma режим для некорректно работающих устройств ide</ti></tr>

	<tr><ti>cdcache</ti>
	<ti>Кэширует содержимое cd-rom в оперативную память, используется 40mb RAM ,
	но это зато позволит выполнить размонтировать /mnt/cdrom и подключить другой диск.</ti></tr>

	</table></p>


	<p>После нажатия Enter wвы увидите еще более прикольный экран и индикатор
	загрузки:</p>
<!--
	<figure link="/images/install/livecd-1.4-boot.png" caption="The Gentoo
	Linux Live CD booting" />
-->
<p>После окончания загрузки вы автоматически входите в систему "Live" Gentoo
Linux  с аккаунтом администратора-
&quot;<c>root</c>&quot; - супер пользователь. 
После получения стандартного приглашения командной строки пользователя root
(&quot;<c>#</c>&quot;) вы можете переключать консоли с помощью Alt-F2, Alt-F3 и Alt-F4. 			
Чтобы вернутся на исходную консоль, нажмите Alt-F1. Консоль будет выглядеть
примерно так:
</p>
<!--
	<figure link="/images/install/livecd-1.4-con.png" caption="The Gentoo
	Linux Live CD console" />
-->
<note><b>Опытным пользователям</b>: Когда вы загрузитесь с Gentoo Live CD пароль
от суперпользователя будет выбран случайно в целях безопасности. Если вы
планируете <c>sshd</c> подключение к Live CD то необходимо задать пароль для
суперпользователя командой <c>passwd</c> и следовать ею инструкциям.В противном
случае пароль от суперпользователя останется неизвестным и вы не сможете
подключаться к Live CD по сети.</note>
<p>Вы также заметите, что приглашение командной строки <c>#</c> будет сопровождаться
различными подсказками по настройке сети и местом расположения stage тарболов  Gentoo 
Linux на компакт-диске.</p>
</body>
  </section>
  </chapter>
  <chapter>
    <title>Настройка оборудования</title>
    <section>
      <body>
        <p>При загрузке Live CD пытается определить ваше оборудование и
		загрузить модули ядра необходимые для его поддержки. В большинстве
		случаев это работает. Однако иногда необходимые модули могут оказаться
		не загружены. Если автоопределение PCI пропустило ваше оборудование, следует 
		вручную загрузить соответствующие модули ядра.
			Для просмотра списка доступных модулей сетевых карт наберите <c>ls
			/lib/modules/`uname -r`/kernel/drivers/net/*</c>. Для загрузки модуля наберите:
			</p>
<pre caption="Конфигурация PCI модулей">
# <i>modprobe pcnet32</i>
<comment>(замените pcnet32 на модуль вашей сетевой карты)</comment>
</pre>
        <p>На получения доступа к SCSI устройствам, которые не были найдены автоматически, загрузите 
			соответствующие модули из  /lib/modules, опять таки используя <c>modprobe</c>:
			</p>
<pre caption="Загрузка модулей SCSI">
# <i>modprobe aic7xxx</i>
<comment>(замените aic7xxx на модуль вашего адаптера SCSI)</comment>
# <i>modprobe sd_mod</i>
<comment>(sd_mod - это модуль для поддержки SCSI-дисков)</comment>
</pre>
			<note>
			Поддержка SCSI CD-ROM-а и дисков уже включена в ядро.
			</note>
<note><b>Опытным пользователям</b> Gentoo LiveCD также включит поддержку DMA на 
ваших дисках, для увеличения скорости доступа, но если этого не произошло, используйте
			<c>hdparm</c> чтобы самостоятельно установить необходимые параметры
			. </note>

<pre caption="Настройка DMA">
<comment>Замените hdX на имя вашего диска.</comment>
# <i>hdparm -d 1 /dev/hdX</i> <comment>Включает DMA </comment>
# <i>hdparm -d1 -A1 -m16 -u1 -a64 /dev/hdX</i>
<comment>(Включает DMA и другие безвредные опции, улучшающие быстродействие)</comment>
# <i>hdparm -X66 /dev/hdX</i>
<comment>(Принудительно включает Ultra-DMA -- опасно -- может привести к нестабильной работе дисков)</comment>
</pre>

      </body>
    </section>
  </chapter>
<!-- ЭТОТ РАЗДЕЛ НЕЖЕЛАТЕЛЕН, ЕСЛИ HOTPLUG ВКЛЮЧЕН В  1.4_rc3 (дроббинс)
  <chapter>
    <title>Загрузка модулей PCMCIA</title>
    <section>
      <body>
        <p>Если у вас  сетевая карта PCMCIA, вам следует предпринять дополнительные шаги.
			</p>
        <warn>Для избежания проблем с <c>cardmgr</c>, вам  <e>обязательно</e> следует запустить его <e>до того</e> как начнет выполняться  стадия установки chroot.</warn>
<pre caption="Загрузка модулей PCMCIA">
# <i>modprobe pcmcia_core</i>
# <i>modprobe i82365</i>
# <i>modprobe ds</i>
# <i>cardmgr -f</i>
</pre>
        <p>После того, как <c>cardmgr</c> обнаружит существующее оборудование,система просигналит об этом,
			и после этого ваша сетевая PCMCIA карта должна быть в порядке. Конечно можно попробовать
			вставить карту уже после того, как загрузится <c>cardmgr</c>, если это конечно 
			предпочтительнее.
			(В принципе нет смысла запускать <c>cardmgr</c> если вы точно знаете какой 
			модуль соответствует вашей PCMCIA карте.Можно просто попытаться загрузить все
			модули  PCMCIA карт, и посмотреть какой именно работает.
			Также <c>cardmgr</c> выгрузит все модули после изъятия карты из слота. </p>
      </body>
    </section>
  </chapter>
-->
  <chapter>
    <title>Конфигурация сети</title>
	<section>
      <title>А может она уже работает?</title>
      <body>
		<p>Если ваша система включена в Ethernet сеть, высока вероятность, что
		поддержка сети была автоматически сконфигурирована.
		Если так, то будут доступны команды с LiveCD типа <c>ssh</c>, <c>scp</c>, <c>ping</c>, <c>irssi</c>, 
		<c>wget</c> and <c>lynx</c>, и прочие.</p>
	  
        <p>Проверьте конфигурацию сети с помощью <c>/sbin/ifconfig</c>, и просмотрите функционирующие сетевые интерфейсы
		кроме <c>lo</c>, такие как <c>eth0</c>:
		</p>
<pre caption="/sbin/ifconfig for a working network card">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
</pre>
        <p>Можно попробовать пропинговать DNS сервер вашего провайдера(адрес DNS сервера указывается в<path>/etc/resolv.conf</path>), чтобы проверить что пакеты достигают сети, DNS работает корректно и др.</p>
<pre caption="Дальнейшее тестирование сети">
# <c>ping -c 3 www.yahoo.com </c>
</pre>
		<p>Ну что, сеть работает? Тогда можете следующий раздел не читать.</p>
      </body>
    </section>
    <section>
      <title> Конфигурирование PPPoE</title>
      <body>
        <p>Если вы пользуетесь соединением интернет типа PPPoE, то с помощью пакета <c>rp-pppoe</c>, он 
			есть на всех LiveCD (любой версии) настройка будет очень легкой.
			С помощью скрипта <c>adsl-setup</c> конфигурируем соединение - указываем 
			сетевое устройство подключенное к adsl модему,имя пользователя и пароль,
			IP адреса DNS  серверов, а также необходимость использования базового файервола.</p>
<pre caption="Конфигурация PPPoE">
# <c> adsl-setup </c>
# <c> adsl-start </c>
</pre>
        <p>Если возникли неполадки, проверьте правильность написания имени пользователя и пароль 
			в файле <path>/etc/ppp/pap-secrets</path> или <path>/etc/ppp/chap-secrets</path>, 
			и убедитесь что имя сетевого устройства указано правильно.</p>
      </body>
    </section>
    <section>
      <title> Автоматическое конфигурирование сети </title>
      <body>
       <p>Наиболее простой способ быстро сконфигурировать сеть, если она не была
	   сконфигурирована автоматически, это запустить скрипт <c>net-setup</c>.</p>
<pre caption="Скрипт установки сети">
# <c>net-setup eth0</c>
</pre>
        <p>Хотя конечно вы можете сделать тоже самое вручную. Об этом далее.</p>
      </body>
    </section>
    <section>
      <title>Конфигурирование DHCP вручную</title>
      <body>
        <p>Использование DHCP позволяет очень легко настроить сеть; Если же ваш провайдер 
		не использует DHCP, пропустите эту часть и следуйте с раздел конфигурирования сети со статическим адресом. </p>
<pre caption="Конфигурирование сети с использованием DHCP">
# <c>dhcpcd eth0</c>
</pre>
        <note>Некоторые ISP требуют от вас имя компьютера. Для этого добавьте
		 флаг <c>-h myhostname</c> к команде демона dhcpcd ниже.
		</note>
        <p>Если вы получили предупреждения <i>dhcpConfig</i>, не волнуйтесь; ошибки
		скорее всего пустяковые и следуйте далее к тестированию сети ниже.</p>
      </body>
    </section>
    <section>
      <title>Конфигурирование сети со статическим адресом вручную.</title>
      <body>
        <p>На этом этапе сеть нам нужна исключительно для того, чтобы мы смогли выкачать
		исходники для построения системы, равно как и для локального интерфейса.Информацию об этом вы найдете далее.</p>

<table>
<tr><th>Информация</th><th>Описание</th><th>Пример (значение)</th></tr>
<tr><ti>IP адрес</ti><ti>IP-адрес, назначаемый вами сетевой карте</ti><ti>192.168.1.2</ti></tr>
<tr><ti>Широковещательный адрес</ti><ti>IP-адрес транслирующий пакеты всем компьютерам сети.</ti><ti>192.168.1.255</ti></tr>
<tr><ti>Маска сети</ti><ti>Маска используемая для определения, какая часть IP адреса идентифицирует сеть, а какая  компьютер</ti><ti>255.255.255.0</ti></tr>
<tr><ti>Шлюз</ti><ti>IP-aдрес компьютера, перенаправляющего пакеты не предназначенные для локальной сети (чаще всего компьютер, напрямую подключенный к интернет)</ti><ti>192.168.1.1</ti></tr>
</table>
        
		<p>Наберите следующие команды, заменив $IFACE вашим сетевым интерфейсом
		(обычно<c>eth0</c>), $IPNUM своим IP адресом,$BCAST широковещательным
		адресом, и $NMASK маской сети. Для команды <c>route</c> замените 
		$GTWAY своим шлюзом.
		</p>
<pre caption="Конфигурация сети со статическим IP адресом">
# <i>ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</i>
# <i>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1 $IFACE</i>
</pre>
        <p>Теперь пора создать файл<path>/etc/resolv.conf</path>
		для того, чтобы корректно работало разрешение имен (необходимо для 
	поиска веб и ftp страниц по имени, а не по  IP-адресу). 
	Так же можно использовать <c>nano -w /etc/resolv.conf</c> для создания
	файла <path>/etc/resolv.conf</path>. 
        <c>nano</c> это такой маленький и простенький редактор.</p>
        <p>Вот типовой шаблон для создания вашего /etc/resolv.conf: </p>
<pre caption="Шаблон /etc/resolv.conf">
domain mydomain.com
nameserver 10.0.0.1
nameserver 10.0.0.2
</pre>
        <p>Замените <c>10.0.0.1</c> и <c>10.0.0.2</c> IP адресами ваших 
		первичного и вторичного DNS серверов соответственно.</p>
      </body>
    </section>
    <section>
      <title>Конфигурирование прокси</title>
      <body>
        <p>Если доступ в интернет осуществляется через прокси-сервер, обязательно нужно настроить и его.
		Мы экспортируем несколько переменных чтобы настроить прокси. </p>
<pre caption="Конфигурирование прокси">
<codenote>Если прокси запрещает трафик HTTP :</codenote>
# <i>export http_proxy=&quot;machine.company.com:1234&quot; </i>
<codenote>Если прокси не пускает на FTP:</codenote>
# <i>export ftp_proxy=&quot;machine.company.com&quot; </i>
<codenote>Если запрещен RSYNC :</codenote>
# <i>export RSYNC_PROXY=&quot;machine.company.com&quot; </i>
</pre>
      </body>
    </section>
        <section>
      <title>Сеть готова!</title>
      <body>
        <p>Теперь сеть сконфигурирована и готова к работе. Теперь команды <c>ssh</c>, <c>scp</c>, 
		<c>lynx</c>, <c>irssi</c> и <c>wget</c> полностью доступны и можно подключаться к интернету и другим компьютерам 
		в локальной сети и через интернет.</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Установка времени и даты</title>
    <section>
      <body>
        <p>Теперь необходимо установить системное время и дату.
	   Это делается с помощью команды <c>date</c>.</p>
<pre caption="Установка даты">
# <i>date</i>
Thu Feb 27 09:04:42 CST 2003
<comment>(Если дата отображается неверно, попробуйте следующую команду)</comment>
# <i>date 022709042003</i>
<comment>(date MMDDhhmmCCYY)</comment>
</pre>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Файловые системы, разделы и блочные устройства</title>
    <section>
		<title>Описание блочных устройств</title>
      <body>
<p>
В этой секции мы рассмотрим работу Gentoo Linux и Linux в общем с дисковыми устройствами, включая файловые системы  Linux,
разделы дисков и блочные устройства. После того как вы получите представление о работе дисков и файловых систем,
можно будет приступать к разбиению диска на разделы для установки  Gentoo Linux.
</p>
<p>
Для начала, начнем с "блочных устройств". Наиболее известным блочным устройством, пожалуй будет
первый IDE диск в системе Linux:
</p>
<pre caption="/dev/hda, блочное устройство - первичный мастер IDE диск в вашей системе">
/dev/hda
</pre>

<p>
Если ваша система использует SCSI, то первым жестким диском будет:
</p>

<pre caption="/dev/sda, блочное устройство, первый  логический SCSI диск в системе">
/dev/sda
</pre>

<p>Блочное устройство представляет из себя <i>абстрактный</i> интерфейс диска.
Благодаря этому, программы пользователя могут свободно общаться с диском, не 
волнуясь по поводу того IDE это диск или же это SCSI или что-то еще. Программа может
обращаться к хранилищу на диске просто как набор всяческих 512-байтных блоков. </p>
</body>
</section>
<section>
<title>Разделы диска и fdisk</title>
<body>
<p> В Linux, файловые системы создаются с помощью команды <c>mkfs</c> (или <c>mke2fs</c>, 
<c>mkreiserfs</c>, и т.д.,) с указанием непосредственного блочного устройства в командной
строке в качестве аргумента. </p>

<p> И хотя теоретически возможно использовать все блочное устройство,
<i>представляющее</i> целый диск под
одну файловую систему (например <c>/dev/hda</c> или <c>/dev/sda</c>),
этого на практике практически никогда не случается. Наоборот, все диски 
разбиваются на более мелкие, более компактные и управляемые блочные устройства 
под названием "разделы". Разделы создаются инструментом под названием 
<c>fdisk</c>,  с помощью которого можно создавать, редактировать таблицу
разделов, хранящуюся на каждом диске. А сами таблицы определяют, как именно
разбит целый диск. </p>

<p> Взглянем на таблицу разделов  запустив <c>fdisk</c>, и указав
в качестве аргумента нужный диск как блочное устройство:</p>

<note> Альтернативные варианты <c>fdisk</c> называются <c>cfdisk</c>,
<c>parted</c> и <c>partimage</c>. Мы рекомендуем<c>fdisk</c> потому что он
является наиболее мощным средством из используемых в мире Unix/Linux.</note>

<pre caption="Запуск fdisk">
# <i>fdisk /dev/hda</i>
</pre>
<p>
или
</p>
<pre caption="Запускаем fdisk чтобы просмотреть таблицу разделов на /dev/sda">
# fdisk /dev/sda
</pre>

<impo>
<b>Обратите внимание, что <i>не следует</i> сохранять или делать какие либо изменения
в таблице разделов диска, если он уже содержит информацию о файловых системах
или которые на данный момент используются - это приведет к потере данных.</b>
</impo>

<p>
Строка приглашения fdisk выглядит следующим образом:
</p>

<pre caption="Строка приглашения fdisk ">
Command (m for help): 
</pre>


<p>
Type <c>p</c> to display your disk's current partition configuration:
</p>

<pre caption="Образец конфигурации диска">
Command (m for help): p

Disk /dev/hda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        49    264600   82  Linux swap
/dev/hda3            50        70    158760   83  Linux
/dev/hda4            71      2184  15981840    5  Extended
/dev/hda5            71       209   1050808+  83  Linux
/dev/hda6           210       348   1050808+  83  Linux
/dev/hda7           349       626   2101648+  83  Linux
/dev/hda8           627       904   2101648+  83  Linux
/dev/hda9           905      2184   9676768+  83  Linux

Command (m for help): 
</pre>

<p> Этот диск, в частности, разбит на 7 разделов с файловыми системами Linux ( каждая
соответствующим разделом отмечена как "Linux") равно как и раздел swap.
(помечен как "Linux swap").  </p>

<p>
Обратите внимание на  соответствующие разделы блочных устройств с левой стороны:
начиная с <c>/dev/hda1</c> и заканчивая <c>/dev/hda9</c>. Ранее, на заре
персональных компьютеров было дозволено не более 4-х разделов, называемых 
"primary" - первичные.Этого катастрофически не хватало, поэтому были придуманы
<i>extended</i> - расширенные. Как и первичные, их количество ограничено четырьмя,
но, в отличии от от первичных,они могут содержать неограниченное количество 
так называемых <i>логических</i>, что позволило обойти проблему ограничения
создания первичных дисков.</p>

<p>
Все разделы начиная с <c>hda5</c> и выше являются логическими. Номера с 1-го по 4-й
зарезервированы под первичные и расширенные разделы </p>

<p> Например, <c>hda1</c> по <c>hda3</c> являются первичными.
<c>hda4</c> это расширенный раздел, содержащий логические разделы с
<c>hda5</c> по <c>hda9</c>. Собственно, никогда не придется использовать
<c>/dev/hda4</c> для непосредственного хранения файловой системы -- она просто
будет действовать как хранилище для разделов с <c>hda5</c> по <c>hda9</c>.  </p>

<p> Также обратите внимание, что каждый раздел имеет свой "Id", еще называемый
"тип раздела".  Когда бы вы ни создавали новый раздел, проверьте что корректно указали
тип раздела.Тип раздела '83' говорит о том, что раздел размещает файловую систему 
Linux filesystems, '82' - подразумевает Linux swap  а  'fd' рекомендуется для использования
с разделами Software RAID.Тип раздела устанавливается опцией <c>t</c> в <c>fdisk</c>.
Ядро Linux использует тип раздела для автоопределение файловой системы и раздела подкачки
по время загрузки.</p>
</body>
</section>
<section>
<title>Разбиение диска на разделы с помощью fdisk </title>
<body>

<p>Теперь, когда у вас уже имеется общее представление о процессе разбиения дисков
в Linux, подробно рассмотрим процесс создания разделов для Gentoo Linux. После разбиения,
диск будет иметь следующую структуру: </p>

<pre caption="Структура разделов после выполнения следующих операций">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

   Device Boot    Start       End    Blocks   Id  System
/dev/hda1   *         1        14    105808+  83  Linux
/dev/hda2            15        81    506520   82  Linux swap
/dev/hda3            82      3876  28690200   83  Linux

Command (m for help):
</pre>

<p>На нашем диске "для новичка" теперь 3 раздела. Первый, в начале диска,
под именем (<c>/dev/hda1</c>) очень маленький раздел предназначенный для
загрузки. На нем будет размещена информация о загрузчике  GRUB, ( если это
будет он) ну и конечно ядро(а) Linux. Подобное размещение информации о 
загрузке представляется наиболее оптимальным и безопасным. А во время
обычного ежедневного использования  Gentoo Linux, этот раздел должен 
оставаться <e>размонтированным</e> в целях безопасности. В случае со SCSI,
загрузочный раздел будет называться <c>/dev/sda1</c>.</p> 

<p>Для стабильной работы рекомендуется помещать загрузочный раздел (содержащий
все необходимое для загрузки) в начале диска, хотя на сегодняшний момент это уже
не является принципиальным. Это исключительно старая добрая традиция, когда
загрузчик lilo не мог загрузить ядро системы из раздела находящегося дальше 
1024 цилиндра.</p>

<p>Второй раздел(<c>/dev/hda2</c>) используется для подкачки (swap). Ядро использует 
файл подкачки на диске в качестве дополнительной виртуальной памяти в том
случае, когда испытывается недостаток оперативной памяти RAM. Собственно этот 
раздел также не следует создавать очень большим, его типичный размер обычно
не должен превышать 512MB. В случае со SCSI, раздел будет называться <c>/dev/sda2</c>.  </p>

<p>Третий раздел (<c>/dev/hda3</c>) занимает оставшееся место на диске. Этот
раздел называется основным или же раздел "root". Все ваши и служебные данные 
Gentoo Linux хранятся на этом диске. Если у вас SCSI диск, он будет называться
будет <c>/dev/sda3</c>.</p>


<p>Прежде чем начать делить диск, ознакомьтесь с краткой сводкой о 
рекомендуемых разделах и файловых системах для установки и использования с 
Gentoo Linux:</p>

<table>
	<tr>
	<th>Раздел</th>
	<th>Размер</th>
	<th>Тип</th>
	<th>устройство</th>
	</tr>
	<tr>
	<ti>загрузочный раздел, содержит ядро(а)и информацию необходимую для загрузки</ti>
	<ti>32 мегабайта</ti>
	<ti>ext2/3 настоятельно рекомендуется (и просто);если все же ReiserFS тогда монтируется с опцией <c>-o notail</c>. При использовании ext3 или ReiserFS, следует добавить к размеру раздела размер журнала; в этом случае рекомендуется 64 Mб</ti>
	<ti>/dev/hda1</ti>
	</tr>
	<tr>
	<ti>раздел подкачки (swap) (более без ограничения в 128 Mб, теперь можно до 2GB)</ti>
	<ti>Обычно размер свопа составляет количество оперативной памяти умноженное на 2.</ti>
	<ti>Linux swap</ti>
	<ti>/dev/hda2</ti>
	</tr>
	<tr>
	<ti>основной раздел "root", содержит основную файловую систему и данные (/usr, /home, etc)</ti>
	<ti>&gt;=1.5 Гигабайта</ti>
	<ti>ReiserFS, ext3 рекомендуется; ext2 тоже ничего</ti>
	<ti>/dev/hda3</ti>
	</tr>
</table>

<p>А теперь давайте создадим разделы, приведенные выше. Для начала наберем:
<c>fdisk /dev/hda</c> или <c>fdisk /dev/sda</c>, в зависимости от типа диска-
IDE или SCSI. Потом нажимаем на букву <c>p</c> для просмотра текущей конфигурации.
Так, на диске есть что-то такое чтобы хотелось сохранить? Тогда срочно <b>остановиться</b>.
Если продолжать дальше,<b>ВСЯ существующая информация на диске исчезнет</b></p>

<impo>Если следовать следующим инструкциям, вся информация на диске будет <b>стерта</b>! 
Убедитесь, что на диске нет критично важной информации для вас и ее не жалко 
удалить. Еще раз проверьте что вы выбрали <b>нужный диск</b> чтобы не удалить 
данные не с того диска.</impo>

<p>А теперь начинаем все удалять. Для этого нажимаем на буковку <c>d</c> и подтверждаем
действие нажатием Enter. Еще вас попросят указать номер раздела который следует удалить.
Для удаления уже существующего <c>/dev/hda1</c>, набираем:</p>

<pre caption="Deleting a partition">
Command (m for help): d
Partition number (1-4): 1
</pre>

<p>Теперь раздел поставлен в очередь на удаление.Отобразить раздел уже не удастся
нажав <c>p</c>, но данные будут находиться в целости до тех пор пока вы не 
сохраните изменения. Если вы ошиблись, и хотите выйти без сохранения изменений,
срочно нажмите  <c>q</c> и потом enter и раздел с данными останется.</p>
<p>Допустим что вы решились удалить все разделы на диске, тогда нажимайте <c>p</c> 
для вывода на экран информации об оставшихся разделах, а затем нажимайте <c>d</c> 
и номер раздела, который нужно удалить.В конце концов у вас на диске ничего не останется:</p>

<pre caption="An empty partition table">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

   Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>Теперь, когда в памяти таблица разделов опустела, можно создавать раздел загрузки
или "boot partition". Для этого нажимаем <c>n</c> для создания раздела и <c>p</c> 
чтобы указать что раздел первичный. Дальше нажимаем <c>1</c> для создания первого
первичного раздела. На запрос о номере первого цилиндра просто нажмите "enter". 
На вопрос о номере последнего цилиндра наберите <c>+32M</c> для создания раздела
размером в 32MB. Вот так это будет выглядеть на экране:</p>

<note>
Журналируемые файловые системы требуют дополнительное место для журнала.
Настройки по умолчанию требую дополнительно 33 мегабайта. Следовательно, если вы
используете журналуруюмую файловую систему для <path>/boot</path>, вы должны
набрать <c>+64</c> в ответ на запрос о цилиндре.
</note>

<pre caption="Steps to create our boot partition">
Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 1
First cylinder (1-3876, default 1):
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): +32M
</pre>

<p>Теперь, если нажать <c>p</c>, на экране появится следующее сообщение:</p>

<pre caption="Our first partition has been created">
Command (m for help): p

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

   Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
</pre>

<p>Теперь создаем своп он же <c>swap</c>. Для этого опять нажимаем <c>n</c> и 
создаем раздел, затем  <c>p</c> чтобы сказать fdisk что раздел тоже первичный,
потом нажимаем <c>2</c> - это значит что это будет второй первичный раздел,
и конечно в нашем случае<c>/dev/hda2</c>.
На вопрос о первом цилиндре просто жмем enter. На вопрос о последнем отвечаем:
<c>+512M</c> и раздел получается размером в 512MB. После этого жмем <c>t</c> 
для выбора типа раздела, <c>2</c> для выбора только что созданного раздела
и  <c>82</c> что значит "Linux Swap" т.е. нужный нам своп. Заканчиваем и
набираем <c>p</c> для просмотра информации и разделах и что мы видим?
А видим мы что-то вроде:</p>

<pre caption="Our swap partition has been created">
Command (m for help): p

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

   Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        81    506520   82  Linux swap
</pre>

<p>Ну и наконец создаем основной раздел.Опять таки жмем <c>n</c> и создаем 
новый раздел, потом  <c>p</c> это у нас тоже будет первичный раздел.
Укрываем номер раздела. Это конечно будет раздел номер <c>3</c> и затем
<c>/dev/hda3</c>.  Опять вопрос о первом цилиндре и опять жмем enter.
Потом опять вопрос о последнем цилиндре и мы снова жмем enter и этот раздел займет 
оставшееся место на диске до самого конца. Закончив со всем нажимаем
<c>p</c> и видим следующую таблицу разделов:</p>

<pre caption="Сoздан основной раздел">
Command (m for help): p

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

   Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        81    506520   82  Linux swap
/dev/hda3            82      3876  28690200   83  Linux
</pre>

<p>
И вот наконец ставим флаг "bootable" т.е. загрузочный напротив первого, раздела загрузки
и записываем изменения на диск.Чтобы отметить <c>/dev/hda1</c> как "загрузочный" жмем
<c>a</c> в меню и указываем номер раздела <c>1</c>. Теперь, если нажать <c>p</c>,
напротив  <c>/dev/hda1</c> стоит <c>*</c> в колонке "Boot". Теперь записываем 
изменения на диск - посему жмем <c>w</c> и затем enter. Теперь жесткий диск готов
к установке на негоGentoo Linux. 
</p>

<note>Если <c>fdisk</c> или <c>cfdisk</c> просят перезагрузиться, лучше перезагрузитесь,
чтобы система смогла найти новые разделы.</note>
</body>
</section>
<section>
<title>Создаем файловые системы</title>
<body>
<p>Теперь, когда были созданы все разделы, пора приступать к установке файловых
систем на загрузочном и основном разделах, чтобы в дальнейшем их можно было
смонтировать и использовать. Также мы настроим и раздел свопа.
</p>

<p>В Gentoo Linux осуществлена поддержка большого количества файловых систем. 
Каждая из них имеет свои преимущества и недостатки. На данный момент поддерживается
создание файловых систем ext2, ext3, XFS, JFS и ReiserFS.</p>

<p>Добрая старая ext2 очень неплохо себя зарекомендовала, но она не поддерживает
журналирование метаданных, а это значит что рутинная проверка диска при загрузке 
может превратится достаточно длительную процедуру. Есть более современные
системы, наследницы ext2, с поддержкой <i>журналирования</i>. Более надежные, и чья 
проверка занимает гораздо меньше времени.Обычно все предпочитают журналируемую систему
которые предотвращают длительные задержки при загрузке когда файловая система 
находится в "бессознательном" состоянии.
</p>

<p>ext3 это журналируемый вариант ext2. Она обеспечивает журналирование метаданных
что позволяет быстро восстановить повреждения,и еще такие функции как журналирование 
данных и журналирование отсортированных данных. Это очень хорошая и надежная
файловая система.Она работает практически в любых условиях и обеспечивает
среднее быстродействие. Поскольку в ее основе не лежит "древовидная" организация
структуры, она плохо масштабируется, а значит она плохо подходит для создания больших
файловых систем или хранения большого количества файлов, особенно в одной директории.
Но правильно настроенная и используемая в соответствующих условиях она
практически идеальна.</p>

<p>Файловая система ReiserFS имеет B*-древовидную структуру построения, что 
положительно сказывается на производительности. Она оставила далеко позади
ext2 и ext3 особенно в работе с небольшими файлами (меньше 4k),часто по фактору 
10x-15x. ReiserFS хорошо масштабируется и поддерживает журналирование метаданных.
Поддержка ReiserFS имеется во всех ядрах Linux начиная с ядра 2.4.18+, ее можно
использовать как и на обычных компьютерах, так и на крупных системах для хранения 
маленьких, больших, средних файлов и директорий с десятками тысяч файлов.
Мы рекомендуем ReiserFS для всех разделов кроме загрузочного.</p>

<p>XFS это еще одна журналируемая файловая система, которая поддерживается  
Gentoo Linux (ядро <path>xfs-sources</path>). Имеет большое количество
возможностей и отлично масштабируется. Рекомендуется к использованию на 
SCSI устройствах класса high-end или/и оптоволоконных хранилищах с бесперебойным
питанием.Из-за того что XFS интенсивно кэширует транзитные  входящие данные 
в оперативную память, некоторые не совсем корректно написанные программы, могут
привести к потери информации, при некорректном
завершении работы.</p>  

<p>JFS это высокопроизводительная файловая система от IBM с поддержкой журналирования
данных. Поставляется недавно и по ней доступно очень мало информации,
поэтому трудно комментировать ее положительные и отрицательные характеристики.</p>

<p>Наиболее простой в употреблении, из журналируемых систем, будет ext3. Если же
вы ищете удобную и надежную систему общего пользования, берите ReiserFS; Обе, и
ext3 равно как и ReiserFS зрелые отточенные файловые системы пригодные к использования 
в большинстве задач.</p>

<!-- Corner case, confusing
		<p>Пожалуй следовало бы предварительно инициализировать существующий раздел используя <c>dd</c>. 
			Это особенно полезно при переходе например с ReiserFS  на XFS. Это поможет избежать неверной
			идентификации раздела системой.
			Это можно сделать следующим образом:	
			</p>
<pre caption="Инициализация первых 1024 байт раздела">
# <c>dd if=/dev/zero of=/dev/hda3 bs=1k count=1</c>
<comment>(замените /dev/hda3 на название своего раздела &quot;clean.&quot;)</comment>
</pre>
	<warn>Следующая команда уничтожит все данные на <path>/dev/hda3</path>. 
	Внимательно проверьте, какой именно раздел вы будете обнулять.
	Ошибка будет стоить вам потери данных.
	</warn>
-->

<p>Основываясь на вышеприведенных примерах, будем использовать следующие команды
для инициализации наших разделов:</p>

<pre caption="Инициализация разделов (пример)">
# <i>mke2fs -j /dev/hda1</i>
# <i>mkswap /dev/hda2</i>
# <i>mkreiserfs /dev/hda3</i>
</pre>

<p>Для <c>/dev/hda1</c> мы выбрали  ext3, поскольку она поддерживается большинством
загрузчиков. Мы пользовались <c>mkswap</c> для свопа на  <c>/dev/hda2 </c>  -- здесь все ясно
И для основного раздела на <c>/dev/hda3</c> мы выбрали ReiserFS, поскольку эта файловая 
система показывает отличное быстродействие. А теперь инициализируем разделы.</p>

<p>К сведению, вот ряд вариаций на тему <c>mkfs</c>-образных команд, которые
можно использовать во время установки:</p>

	<p><c>mkswap</c> используется для инициализации свопа:</p>
<pre caption="Инициализация раздела Swap">
# <c>mkswap /dev/hda2</c>
</pre>
<p>для создания ext2 берем <c>mke2fs</c>:</p>
<pre caption="Создаем файловую систему ext2">
# <i>mke2fs /dev/hda1</i>
</pre>
<p>Если все же собрались создавать ext3, делаем следующее:
	<c>mke2fs -j</c>:</p>
<pre caption="Создаем файловую систему ext3">
# <c>mke2fs -j /dev/hda3</c>
</pre>
        <note>Подробнее, об использовании ext3 под Linux 2.4 можно узнать на
	<uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>.</note>
        <p>Для создания  системы ReiserFS, используем команду <c>mkreiserfs</c>:</p>
<pre caption="Создаем файловую систему ReiserFS">
# <c>mkreiserfs /dev/hda3</c>
</pre>
        <p>Создание файловой системы XFS с помощью <c>mkfs.xfs</c>:</p>
<pre caption="Создаем файловую систему XFS">
# <c>mkfs.xfs /dev/hda3</c>
</pre>
        <note>Можно добавить несколько дополнительных аргументов командой
	<c>mkfs.xfs</c>: <c>-d agcount=3 -l size=32m</c>. 
	Аргумент <c>-d agcount=3</c> уменьшает количество распределяемых групп.
	XFS настаивает на использовании как минимум 1 группы на 4 GB раздела
	поэтому на раздел размером 20 GB потребуется минимум 5 agcount. 
	<c>-l size=32m</c> увеличивает размер журнала до 32 Mb, 
	что улучшает быстродействие.</note>

	<p>Файловая система JFS создается с помощью команды <c>mkfs.jfs</c>:</p>
<pre caption="Создаем файловую систему JFS">
# <c>mkfs.jfs /dev/hda3</c>
</pre>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Точки монтирования</title>
    <section>
      <body>
        <p>Теперь активируем только что инициализированный раздел свопа (swap), поскольку в дальнейшем
			нам может понадобиться дополнительная виртуальная память:
			</p>
<pre caption="Активация Swap">
# <c>swapon /dev/hda2</c>
</pre>

        <p>Далее создаем точки монтирования <path>/mnt/gentoo</path> и
		<path>/mnt/gentoo/boot</path> и монтируем туда
			наши файловые системы. Теперь все файлы которые мы создаем или копируем в <path>/mnt/gentoo</path>
			будут размещаться на новых файловых системах.
			Если вы создали отдельные разделы для <path>/usr</path> или <path>/var</path>, то тогда они
   			будут смонтированы в <path>/mnt/gentoo/usr</path> и <path>/mnt/gentoo/var</path> соответственно.
			</p>
 
			 <impo>Если раздел,содержащий ядро форматирован под ReiserFS,
			 убедитесь что он смонтирован с <c>-o notail</c> опцией, так что
			 GRUB будет правильно установлен. Убедитесь, что
			и в <path>/etc/fstab</path> добавлено <c>notail</c>. Мы дойдем до
			этого чуть позже.
			Для LILO с ReiserFS, аргумент <c>-o notail</c> не требуется.
			Но все же лучше указать <c>-o notail</c> для ReiserFS на всякий
			случай.
			</impo>

<pre caption="Создание точек монтирования">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

                      <impo>Если не удается смонтировать загрузочный раздел под ext2, попробуйте
		   	<c>mount /dev/hXX /mnt/gentoo/boot -t ext2 </c> </impo>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Тарболы Stage и chroot</title>
    <section>
		<title>Выбор тарбола</title>
      <body>

<p>
Теперь пора, если вы конечно еще не определились,
выбрать тарбол который вы будете использовать для установки.
Пакеты на LiveCD находятся в <path>/mnt/cdrom/stages</path>, и вы можете набрать
<c>ls /mnt/cdrom/stages/</c>, чтобы посмотреть, что есть на CD.
</p>
<p><b>GRP пользователи</b> должны использовать
пакет <path>stage3-xx-yy.tar.bz2</path></p>

<p>Если для установки вы выбрали тарбол которого нет на компакт диске (что может
случится если вы используете basic LiveCD) -
это вполне возможно. Но перед этим следует выкачать нужный тарбол из интернета.
Если же нужный тарбол имеется в вашем распоряжении, тогда пора переходить
к разделу
"Извлечение тарбола".</p>

<pre caption="Загрузка необходимых тарболов">
# <c>cd /mnt/gentoo</c>
<comment>Загрузите из интернета нужный тарбол с помощью браузера lynx:</comment>
# <c>lynx http://www.ibiblio.org/pub/Linux/distributions/gentoo/releases/1.4_rc4/x86/</c>
<comment>Стрелки <c>Up</c> и <c>Down</c> (или <c>TAB</c>)используются для навигации.
Начать загрузку можно нажав <c>d</c>.
сохраните файл и закройте браузер.

<b>ИЛИ</b> используйте wget из командной строки:</comment>
# <c>wget <comment>сюда впишите URL нужного тарбола.</comment></c>
</pre>
      </body>
    </section>
    <section>
		<title>Извлечение тарбола</title>
      <body>

<p>Теперь следует извлечь сжатый тарбол в <path>/mnt/gentoo/</path>. 
Помните что необходимо только распаковать <b>один</b> тарбол нужной стадии
а не все 3 - один из stage1,  stage2 или stage3.  Поэтому если вы собрались производить
установку из тарбола stage3,то просто распакуйте его следующим образом:</p>

<impo>Обязательно используйте опцию <c>p</c> с архиватором <c>tar</c>. Если вы забудете сделать это
некоторые файлы могут распаковаться но с другими правами.</impo>

<pre caption="Распаковка">
# <c>cd /mnt/gentoo</c>
<comment>Замените на  "stage3","stage2" или "stage1" в зависимости от вашего выбора.</comment>
<comment>Если вы используете тарбол выкачанный из интернет,измените путь на  "/mnt/gentoo/"
вместо  "/mnt/cdrom/stages/".</comment>
# <c>tar -xvjpf /mnt/cdrom/gentoo/stage3-*.tar.bz2</c>
</pre>

<p>Если вы загрузили тарбол в <path>/mnt/gentoo</path>, теперь можете удалить его набрав
<c>rm /mnt/gentoo/stage*.tar.bz2</c>.</p>
</body>
</section>
<section>
<title>Действия для пакетов GRP</title>
<body>
<impo>Следующие инструкции относятся только к пользователям GRP.</impo>
<p><b>GRP Пользователи</b>: На LiveCD есть снимок дерева портежей. Вам надо
будет воспользоваться этим снимком, чтобы избежать <c>emerge sync</c> далее в
этом описании, так как <c>emerge sync</c> требует сетевого подключения.
Распакуйте снимок следующим образом:</p>
<pre caption="Использование снимка дерева портежей:">
<comment>Замените yyyymmdd меткой даты в имени файла.</comment>
# <c>tar -xvjf /mnt/cdrom/snapshots/portage-yyyymmdd.tar.bz2 -C /mnt/gentoo/usr</c>
</pre>
<p>Это распакует снимок дерева портежей в вашу свежую установку Gentoo. Теперь
вам не потребуется Интернет подключение и не надо будет выполнять <c>emerge
sync</c> для загрузки дерева из сети. Теперь скопируйте файлы distfiles и пакеты с
LiveCD:</p>

<pre caption="Копирование файлов GRP">
# <i>cp -R /mnt/cdrom/distfiles /mnt/gentoo/usr/portage/distfiles</i>
# <i>cp -a /mnt/cdrom/packages/* /mnt/gentoo/usr/portage/packages/</i>
</pre>

<p>Теперь все файлы, необходимы для использования GRP, находятся на месте.
Теперь вы можете установить Gentoo Linux даже без сетевого подключения
</p>

</body>
</section>

<section>
<title>Выбор зеркал (не обязательно)</title>
<body>

<p>
<c>mirrorselect</c> - это для автоматического выбора наиболее быстрых зеркал, в
зависимости от вашего местоположения. Также она позваляет выбрать сервер из
списка. К сожалению, <c>mirrorselect</c> работает не со всеми рутерами.
</p>

<pre caption="Использование mirrorselect">
<comment>Автоматический выбор зеркала:</comment>
# <i>mirrorselect -a -s4 -o &gt;&gt; /mnt/gentoo/etc/make.conf</i>
<comment>Выбор в интерактивном режиме:</comment>
# <i>mirrorselect -i -o &gt;&gt; /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Если, по какой-то причине <c>mirrorselect</c> не сработает, то вы все равно
сможете продолжить, так как не будет сделано никаких изменений.
</p>

</body>
</section>

<section>
<title>Вход в chroot</title>
<body>
<p>
Теперь сменим корень с помощью <c>chroot</c> установку Gentoo Linux и
&quot;войдем&quot; в новую систему Gentoo Linux.
</p>

<note>
Во время <c>env-update</c> может появиться следующее сообщение:
<path>/etc/make.profile/make.defaults</path> не доступен: не обращайте внимание. 
Далее мы запустим <c>emerge sync</c> и, таким образом, решим эту проблему.
</note>

<pre caption="Подготовка ко входу в среду chroot">
# <i>mount -t proc proc /mnt/gentoo/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
<comment>(Теперь оболчкe указаны новые пути и обновленныe бинарники.)</comment>
</pre>
        <p>После выполнения этих команд, вы будете &quot;внутри&quot; вашей
		новой среды Gentoo Linux в <path>/mnt/gentoo</path>.
		Мы можем оставшуюся часть установки проделать внутри chroot.
		</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Получение текущего дерева портежей с использованием sync</title>
    <section>
      <body>

<!-- Еще не работает. Раскоментируйте когда будет работать!

<p>Для наиболее быстрой загрузки выберите rsync- и ближайшее зеркало. Для упрощения задачи был придуман <c>mirrorselect</c>. Используйте следующие команды:</p>

<pre caption="Выбор зеркала">
<comment>Сначала mirrorselect выберет ближайшие  5 зеркал.</comment>
# <i>mirrorselect -a -s5</i>
<comment>Теперь мы выберем зеркало rsync- самостоятельно:</comment>
# <i>mirrorselect -i -r</i>
</pre>

-->
<impo>
Если вы делаете установку с использованием GRP, то можете пропустить следующий
раздел о <c>emerge sync</c>.
</impo>
<p>Теперь следует выполнить <c>emerge sync</c>. Эта команда говорит Portage
загрузить самую последнюю копию дерева портежей Gentoo Linux из Интернет. Если
вы распаковали снимок дерева с CD 1 ранее, то можете спокойно пропустить этот
шаг. Дерево Portage 
содержит все скрипты, (называются ebuilds) необходимые для сборки каждого пакета под Gentoo Linux. 
На текущий момент существует порядка 4000 скриптов для разных пакетов. После окончания <c>emerge sync</c>
дерево портежей будет расположено в<path>/usr/portage</path>.</p>

<pre caption="Обновление с помощью sync">
# <c>emerge sync</c>
</pre>
 
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Настройка оптимизации Gentoo (make.conf)</title>
    <section>
      <body>

<p>Теперь, когда у нас есть работоспособное дерево портежей, можно начинать настраивать
оптимизацию и различные настройки вашего Gentoo Linux. В дальнейшем Portage 
будет использовать их для компиляции программ. Для изменения этих настроек, отредактируйте
файл <path>/etc/make.conf</path>. Укажите ваши флаги <c>USE</c>, где указываются
дополнительные функции которые можно будет вкомпилировать;
В принципе достаточно и настроек по умолчанию: (<e>пустое</e> или опущенное значение переменной <c>USE</c>)
Более подробная информация по переменной  <c>USE</c>находится в <uri
link="http://www.gentoo.org/doc/en/use-howto.xml">здесь</uri>.  Полный список 
флагов  USE лежит на  <uri
link="http://www.gentoo.org/dyn/use-index.xml">здесь</uri>.  </p>

<p>Если вы начинаете со stage1, также следует указать нужные параметры для <c>CHOST</c>, <c>CFLAGS</c> и  <c>CXXFLAGS</c> 
в зависимости от типа системы вы хотите получить.
(откоментированные примеры находятся ниже.) Если вы используете stage2 или
stage3,то эти переменные уже сконфигурированы и их не надо трогать.
</p>
<impo><b>Опытным пользователям:</b>
Настройки CFLAGS и CXXFKAGS будут использоваться для
того чтобы компиляторы C и C++ знали как следует оптимизировать код который создается в вашей 
системе. Например, пользователи Athlon XP обычно указывают "-march=athlon-xp" в CFLAGS и CXXFLAGS,
для корректной оптимизации под инструкции этого процессора.
Файл <path>/etc/make.conf</path> содержит общие указания по корректным настройкам
для CFLAGS и CXXFLAGS.</impo>
			
<p>При желании тут также можно указать информацию о прокси сервере, если вы
находитесь за firewall'ом.
Этой командой можно начать редактирование <path>/etc/make.conf</path> 
с использованием простенького редактора <c>nano</c>.
</p>
<pre caption="Редактирование файла make.conf">
# <c>nano -w /etc/make.conf</c>
</pre>
        <note>
			<b>Опытным пользователям:</b>
			Те, кто хочет детально настроить процесс сборки, могут
			также посмотреть файл <path>/etc/make.globals</path>.В этом файле приведены
			настройки gentoo по умолчанию и его редактирование очень нежелательно. Если все же
			настройки по умолчание не устраивают, то новые значения следует отдельно указать 
			в <path>/etc/make.conf</path>, значения приведенные в <path>make.conf</path>
			<comment>перекрывают</comment> значения в файле <path>make.globals</path>. Если
			вас заинтересовали настройки USE, загляните в <path>/etc/make.profile/make.defaults</path>.
			Если вы хотите отключить любую опцию USE, добавьте соответствующую <c>USE=&quot;-foo&quot;</c>
			в <path>/etc/make.conf</path>  После этого соответствующие настройки по умолчанию USE в файлах
			<path>/etc/make.globals</path> или <path>/etc/make.profile/make.defaults</path> будут отключены.
			</note>
       <warn>Не пытаетесь добавить значение '<c>static</c>' к переменной <c>USE</c> до установки тарбола stage1.</warn>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Установка начиная с тарбола Stage1</title>
    <section>
      <body>
	  	<note>Если  установка производится без использования тарбола stage1, то
		можете пропустить этот раздел.</note>
        <p>Тарбол stage1 позволяет полностью контролировать процесс настройки и оптимизации. Если вы уж начали
		с него, то похоже вы надеетесь получить супер производительную систему. В
		этом случае милости просим! В данном случае установка займет некоторые время, но в
		результате система будет полностью оптимизирована под ваш компьютер.
		</p>
        <p>Посему начнем загрузку. У меня на 1200MHz AMD Athlon это заняло 2 часа.
Будут построены библиотекиe GNU C, компиляторы и другие ключевые компоненты. Начнем со следующего:</p>
<pre caption="Предварительная загрузка">
# <c>cd /usr/portage</c>
# <c>scripts/bootstrap.sh</c>
</pre>
        <p>Сейчас начнется загрузка - &quot;bootstrap&quot;.</p>
	<note><c>bootstrap.sh</c> теперь поддерживает опцию <c>--fetchonly</c>. Для пользователей диалапа это должно показаться особенно удобно.Загрузятся все файлы необходимые для загрузки и дальнейшей компиляции. <c>bootstrap.sh -h</c> для дополнительной информации.</note>
        <note>
			Для построения пакетов по умолчанию Portage используется <c>/var/tmp</c>, причем иногда размер
			 /var/tmp достигает до нескольких сот мегабайт. Сменить директорию
			временных файлов можно указав PORTAGE_TMPDIR <e>перед</e> началом загрузки
			следующим образом:
			</note>
<pre caption="Изменение директории временных файлов Portage">
# <c>export PORTAGE_TMPDIR=&quot;/otherdir/tmp&quot;</c>
</pre>
        <p><c>bootstrap.sh</c> соберет <c>binutils</c>, <c>gcc</c>, <c>gettext</c>,
			и <c>glibc</c>, перестроит <c>gettext</c>
			после <c>glibc</c>. Разумеется на все это уйдет прилично времени.
			После окончания процесса, система будет эквивалентна  &quot;stage2&quot;а следовательно,
			пора переходить к рекомендация по установке stage2 .
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Начало установки Stage2 и продолжение установки Stage1</title>
    <section>
      <body>
	  	
		<note>В этой секции описывается продолжение установки из stage1 и начало установки из stage2.
		Если вы решили использовать тарбол stage3, то вам это читать не обязательно.
        </note>

        <warn>
        Если вы начали устанавливать из stage2, не меняйте значение переменной CHOST в файле
        <path>/etc/make.conf</path>. Это может привести к довольно странным ошибкам во время 
	компиляции. Но мы конечно над этим работаем.
        
        </warn>
		
		<p>В пакете stage2 процесс bootstrap уже выполнен. Вам остается только 
		самостоятельно до установить оставшиеся компоненты.
			</p>
		<note>Если  вы используете предварительно построенный stage2 и вы хотите проверить
		свежесть компилятора, добавьте к командам указанной ниже  опцию <c>-u</c>.
		Если вы не знаете что это такое, можете оставить все как есть.</note>

<pre caption="Установка остальных компонентов">
# <c>emerge -p system</c>
<comment>(Список компонентов для установки)</comment>
# <c>извлечение системы</c>
</pre>
               <p>Окончание установки всей системы займет некоторое время.						
			Но наградой вам будет исключительно оптимизированная система.
			Единственный недостаток - куча свободного времени во время установки.
			По мнению автора его можно потратить с помощью &quot;Star Wars - 
			Super Bombad Racing&quot; для PS2. 
			</p>
			<p>
			Построение системы закончено. Теперь переходим к секции "Настройка времени и даты".
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Установка из Stage3</title>
    <section>
      <body>
  		<note>Этот раздел предназначен для тех, кто решил произвести <b>установку</b> с stage3, тем кто устанавливал из
		тарболов stage1 или stage2 можно не читать.GRP пользователи могут
		перейти к следующему разделу.</note>
		
        <warn>
         Не меняйте значение переменной CHOST в <path>/etc/make.conf</path>, 
	если установка производится из stage3. Это может привести к ошибкам 
	во время компилирования.
        </warn>
<p>
        Тарбол stage3 заключает в себе полно-функциональный базовый Gentoo, поэтому построения системы не будет.
</p>
	 <note><b>Опытным пользователям</b> В связи с тем, что тарбол stage3 частично предпостроен, он может быть несколько устаревшим. В этом случае
	 можно автоматично обновить существующий тарбол stage3 для получения наиболее новой версии всех системных пакетов.
	 Это делается следующим образом: <c>export CONFIG_PROTECT="-*
	 /etc/make.conf" emerge -u sytem</c> (это потребует сетевого подключения). Учтите, что если ваш тарбол stage3 сильно устарел, то потребуется больше времени;
	 Иначе сам процесс будет достаточно скор, да к тому же вы станете обладателем наиболее новых пакетов.
	 Обновления и исправления Gentoo.
	 В принципе ничего особенного,
	 Можете смело переходить к следующему разделу.
	</note>
		
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Установка временной зоны</title>
    <section>
      <body>
        <p>Теперь пора установить временную зону.</p>
        <p>Найдите вашу временную зону ( или GMT, если это ваше время)
	   в папке <path>/usr/share/zoneinfo</path>. Создайте символьную ссылку на нее в 
	   /etc/localtime набрав:</p>
<pre caption="Создание символьной ссылки на вашу временную зону">
# <c>ln -sf /usr/share/zoneinfo/path/to/timezonefile /etc/localtime</c>
</pre>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Редактирование /etc/fstab</title>
    <section>
      <body>
  	 <impo>
  	 Для редактирования файлов используйте <c>nano -w "filename"</c>.
  	 </impo>
 
        <p>Ваш Gentoo Linux уже почти готов к работе. Осталось подправить несколько 
			файлов конфигурации системы и установить загрузчик.
			Сначала мы отредактируем файл <path>/etc/fstab</path>.  
			Не забывайте, что для ReiserFS на загрузочном разделе следует использовать опцию <c>notail</c>.
			Правильно укажите тип файловой системы: <c>ext2</c>, <c>ext3</c> или <c>reiserfs</c>.
			</p>
        <p>Идем в  <path>/etc/fstab</path> и заменяем  &quot;BOOT&quot;,&quot;ROOT&quot; и &quot;SWAP&quot; на нормальные блочные устройства (типа <c>hda1</c>, и др.)</p>
<pre caption="Редактирование fstab">
<comment># /etc/fstab: содержит информацию о файловых системах.
#
# опция noatime отключает atimes, что увеличивает производительность (обычно atime 
# не нужен; notail увеличивает производительность ReiserFS (но за счет емкостиat the expense of storage
# efficiency).  It is safe to drop the noatime options if you want and to 
# switch between notail and tail freely.

# &lt;fs&gt;           &lt;mount point&gt;   &lt;type&gt;   &lt;opts&gt;          &lt;dump/pass&gt;

# NOTE: Если раздел содержащий ядро и отформатирован в ReiserFS, добавьте опцию notail.
</comment>
/dev/BOOT           /boot       ext2	 noauto,noatime	 1 2
/dev/ROOT           /           ext3	 noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro       0 0
proc                /proc       proc	 defaults        0 0
</pre>
        <warn>Обратите внимание, что раздел <i>/boot</i> не монтируется во время загрузки.
			Это сделано ради того, чтобы уберечь данные на <i>/boot</i> от
			повреждения. Для доступа к <i>/boot</i> просто подключите его!
			</warn>
      </body>
    </section>
  </chapter>

  <chapter>
    <title>Установка ядра и системного журнала</title> 
    <section>
      <body>
	  <p>Существует два варианта установки ядра. Вы можете или сконфигурировать
	  свое собственное ядро или воспользоваться <c>genkernel</c> для
	  автоматической конфигурации и компиляции ядра.</p>
	  <p>Не зависимо от того, собираете вы ядро сами, или используете
	  <c>genkernel</c>, вам надо установить исходники ядра, которое вы хотите
	  использовать. Gentoo предоставляет несколько ebuild для разных ядер.Список
	  можете найти <uri link="/doc/en/gentoo-kernel.xml">здесь</uri>. Если вы сомневаетесь,
        какое именно ядро выбрать, рекомендуем воспользоваться
		<c>gentoo-sources</c>. 
        Если требуется поддержка XFS, для этого есть
        <c>xfs-sources</c>. Кстати, в LiveCD Gentoo используются
		<c>gs-sources</c> и <c>xfs-sources</c>. Также доступно ядро
		<c>gaming-sources</c>, оптимизированное под игры. Оно прекрасно подходит
		для этой цели при включенной опции "Preemptible kernel".
			</p>
        <p>Выберите подходящее ядро и выполните следующее:</p>
<pre caption="Извлечение исходного кода ядра">
# <c>emerge -k sys-kernel/gentoo-sources</c>
</pre>

		<p>Путь <path>/usr/src/linux</path> является символьной ссылкой на извлеченное вами ядро,
		она используется Portage для своих целей. Все пакеты содержащие модули
		ядра будут сконфигурированы для использования того ядра, на которое
		указывает <path>/usr/src/linux</path>. <path>/usr/src/linux</path>
		создается Portage после распаковки первого пакета ядра, но после этого
		уже не меняется.
		</p>
</body>
</section>
<section>
	<title>Использование genkernel для сборки ядра</title>
<body>

		<p>Теперь когда дерево исходников ядра установлено, пора его собрать.
		Существует два способа это сделать. Первый способ заключается в
		использовании <c>gentkernel</c> для автоматической сборки ядра.
		<c>genkernel</c> конфигурирует ядро почти идентичное тому, что
		присутствует на LiveCD. Это означает, что когда вы используете
		<c>genkernel</c> ваша система определит оборудование при загрузке почти
		также, как это делает LiveCD. Поскольку genkernel не требует ручной
		настройки ядра, он идеально подходит для пользователей, которые неуютно
		себя чувствуют при необходимости настроить ядро самим.</p>

		<p>Теперь давайте посмотрим, как пользоваться genkernel. В первую
		очередь его надо установить:</p>

<pre caption="Установка genkernel">
<comment>Если вы используете genkernel 1.2 (включая тот, что в GRP наборе
1.4-20030803 x86/i686), используйте следующее:</comment>
  	 # <i>genkernel gentoo-sources</i>
  	 <comment>Если вы используете 1.4 или новее, то не надо указывать тип ядра:</comment>
  	 # <i>genkernel</i>
</pre>
		
		<p>Теперь собираем исходники ядра командой<c>genkernel</c>:</p>

		<note><b>Опытным пользователям:</b> вы можете использовать <c>genkernel
		--config</c> - это позволит вам провести некоторую настройку, прежде чем
		genkernel соберет ядро.</note>


<pre caption="Запуск genkernel">
# <c>genkernel</c>
Gentoo Linux genkernel, version 1.4
 Copyright 2003 Gentoo Technologies, Inc., Bob Johnson, Daniel Robbins
 Distributed under the GNU General Public License version 2

Settings:
 compile optimization: 1 processor(s)
 source tree: /usr/src/linux-2.4.20-gaming-r3
 config: gentoo (customized)
 config loc: /etc/kernels/config-2.4.20-gaming-r3
 initrd config: (default) /etc/kernels/settings

 * Running "make oldconfig"...                                                                     [ ok ]
 * Logging to /var/log/genkernel.log...                                                            [ ok ]
 * Starting 2.4.20-gaming-r3 build...                                                              [ ok ]
 * Running "make dep"...                                                                           [ ok ]
 * Running "make bzImage"...                                                                       [ ok ]
 * Running "make modules"...                                                                       [ ok ]
 * Running "make modules_install"...                                                               [ ok ]
 * Moving bzImage to /boot/kernel-2.4.20-gaming-r3...                                              [ ok ]
 * Building busybox...                                                                             [ ok ]
 * Creating initrd...                                                                              [ ok ]

 * Build completed successfully!

 * Please specify /boot/kernel-2.4.20-gaming-r3 and /boot/initrd-2.4.20-gaming-r3
 * when customizing your boot loader configuration files.

#
</pre>

		<p>После того как <c>genkernel</c> закончит свою работу, у вас будет
		ядро, полный набор модулей и <i>начальный корневой диск - initial root
		disk</i> (initrd). Мы будем использовать ядро и initrd при настройке
		системного загрузчика далее в этом документе. initrd будет запущен сразу
		после загрузки для определения оборудования (как это делает LiveCD)
		прежде чем будет запущена ваша "настоящая" система.</p>
		
		<p>Теперь давайте выполним еще несколько операций, чтобы система была
		еще более похожа на LiveCD - давайте установим hotplug. Если initrd
		определяет оборудование необходимое для загрузки, то hotplug определяет
		все остальное. Для установки hotplug выполним:</p>

<pre caption="Установка и включение hotplug">
# <c>emerge -k hotplug</c>
# <c>rc-update add hotplug default</c>
</pre>

		<p>Наконец, установите пакеты, необходимые для поддержки вашего
		оборудование. Вот список ebuild, которые могли бы вам пригодится: 
		</p>

		<table>
		<tr>
			<th>ebuild</th>
			<th>Назначение</th>
			<th>Команда</th>
		</tr>
		<tr>
			<ti>nvidia-kernel</ti>
			<ti>Ускоренна NVIDIA графика для XFree86</ti>
			<ti><c>emerge -k nvidia-kernel</c></ti>
		</tr>
		<tr>
			<ti>nforce-net</ti>
			<ti>Встроенные ethernet контролер на материнских платах NVIDIA
			NForce(2)</ti>
			<ti><c>emerge nforce-net</c></ti>
		</tr>
		<tr>
			<ti>nforce-audio</ti>
			<ti>Встроенное аудио на материнскую платах NVIDIA NForce(2)</ti>
			<ti><c>emerge nforce-audio</c></ti>
		</tr>
		<tr>
			<ti>e100</ti>
			<ti>Intel e100 Fast Ethernet адаптер</ti>
			<ti><c>emerge e100</c></ti>
		</tr>
		<tr>
			<ti>e1000</ti>
			<ti>Intel e1000 Gigabit Ethernet адаптер</ti>
			<ti><c>emerge e1000</c></ti>
		</tr>
		<tr>
			<ti>emu10k1</ti>
			<ti>Поддержка Creative Sound Blaster Live!/Audigy</ti>
			<ti><c>emerge emu10k1</c></ti>
		</tr>
		<tr>
			<ti>ati-drivers</ti>
			<ti>Ускоренная ATI Radeon 8500+/FireGL графика для XFree86</ti>
			<ti><c>emerge ati-drivers</c></ti>
		</tr>
        <tr>
            <ti>xfree-drm</ti>
            <ti>Ускоренная графика для ATI Radeon up to 9200, Rage128,
            Matrox, Voodoo и других карт для XFree86</ti>
            <ti><c>VIDEO_CARDS="ваша_карта" emerge xfree-drm</c></ti>
        </tr>
</table>
		<p>nvidia-kernel, ati-drivers и xfree-drm packages потребуют включения
		дополнительных опций. Все остальные перечисленные ebuild будут
		автоматически определены hotplug при загрузке.</p>
		
		<p>Теперь, когда вы сконфигурировали систему с помощью genkernel, вы
		можете пропустить раздел о ручной конфигурации.</p>
</body>
</section>
<section>
<title>Ручная настройка ядра</title>
<body>

	<p>Если вы решили не использовать genkernel, то этот раздел расскажет вам,
	как настроить и собрать ядро вручную. Пожалуйста обратите внимание, что
	<path>/usr/src/linux</path> является символьной ссылкой на ваш текущий пакет
	ядра и создается Portage при установке. Если у вас есть несколько пакетов
	ядра, то не забудьте правильно установить <path>/usr/src/linux</path> прежде
	чем продолжить. </p>

<warn>
Если вы настраиваете ядро сами, то будете осторожны с настройками
<i>grsecurity</i>. Слишком агрессивная настройка безопасности может привести к
неработоспособности некоторых программ (таких как X). Если не уверены, то лучше
не трогайте эти опции.
</warn>
        <note>
        Для использования типичной конфигурации ядра с LiveCD или для того чтобы 
        взять за основу конфигурацию ядра LiveCD, выполняется следующая команда
        <c>cd /usr/src/linux &amp;&amp; cat /proc/config > .config &amp;&amp; make oldconfig</c>. 
        Если вы не брали за основу  <c>xfs-sources</c>, у системы возникнут вопросы о разнице 
        между вашим  ядром и <c>xfs-sources</c>.
        </note>
<pre caption="Конфигурация ядра">
# <c>cd /usr/src/linux</c>
# <c>make menuconfig</c>
</pre>
        <warn>Для нормального функционирования системы, следует включить в ядро поддержку нескольких функций,
			причем, они не должны быть выполнены в качестве модулей а <i>встроены в само ядро</i>. 
			Обязательно включите поддержку &quot;ReiserFS&quot; если у вас есть разделы с ReiserFS; 
			тоже самое относится и к &quot;Ext3&quot;. Для использования XFS,задействуйте
			&quot;SGI XFS filesystem support&quot;. Вне зависимости от того, используете вы ext2
			или нет, поддержка ext2 также должна быть включена.</warn>
			<p>
			Ниже приведены некоторые из опций
			которые вам пригодятся:</p>
<pre caption="make menuconfig options">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers&quot;
<comment>(Понадобится для задействования некоторых функций, указанных ниже.)</comment>
     ...

File systems ---&gt;
  &lt;*&gt; Reiserfs support
<comment>(Необходимо только если используется reiserfs.)</comment>
       ... 
  &lt;*&gt; Ext3 journalling file system support
<comment>(Необходимо для использования ext3.)</comment>
       ...
  [*] Virtual memory file system support (former shm fs)
<comment>(Требуется Gentoo Linux.)</comment>
       ...
  &lt;*&gt; JFS filesystem support
<comment>(Поддержка JFS.)</comment>
       ...
  [*] /proc file system support
<comment>(Требуется for Gentoo Linux.)</comment>
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot          
<comment>(Требуется for Gentoo Linux.)</comment>
  [ ] /dev/pts file system for Unix98 PTYs
<comment>(можно и не включать.)</comment>
       ...
  &lt;*&gt; Second extended fs support
<comment>(Поддержка ext2.)</comment>
       ...
  &lt;*&gt; XFS filesystem support
<comment>(Поддержка XFS.)</comment>
</pre>
        <p>Если для соединения с интернет используется PPPoE, вам следует
		включить поддержку (на уровне ядрa
			хотя желательно в виде модуля)следующие опции :
			&quot;PPP (point-to-point protocol) support&quot;, &quot;PPP support for async serial ports&quot;,
			&quot;PPP support for sync tty ports&quot;. Парочкa методов компрессии вряд ли будут необходимы,
			разве что также включить и &quot;PPP over Ethernet&quot;но эта опция применима только
			в случае дополнительного задействования <i>rp-pppoe</i>, причем PPPoE должно быть сконфигурировано
			не модулем а встроено в ядро.
			</p>
        <p>Если у вас есть IDE CD-RW, необходимо включить в ядро эмуляцию SCSI следующим образом&quot;ATA/IDE/MFM/RLL support&quot; 
			---&gt; &quot;IDE, ATA and ATAPI Block devices&quot; ---&gt; &quot;SCSI emulation support&quot; 
			(у меня на машине это модуль), далее в разделе &quot;SCSI support&quot; включите &quot;SCSI support&quot;, 
			&quot;SCSI CD-ROM support&quot; и &quot;SCSI generic support&quot; (опять таки, у меня это модуль).  
			Если вы планируете использовать модули, то тогда <c>echo -e &quot;ide-scsi\nsg\nsr_mod&quot;
			&gt;&gt; /etc/modules.autoload</c> для автоматической загрузки модулей во время загрузки компьютера. 
			</p>
	<p>Также в ядро можно включить и поддержку вашей сетевой карты.</p>
        <note>
			Кроме всего прочего, 
			теперь с Gentoo Linux можно использовать и ядра серии 2.2.
			Правда это будет стоить вам многих полезных функций из 2.4.: 
			например отсутствие поддержки XFS и tmpfs, iptables,и др., 
			хотя существуют патчи для поддержки 2.2. ReiserFS и devfs.  
			Загрузочные скрипты Gentoo linux boot требуют поддержки ядром либо tmpfs или ramdisk.
			Поэтому убедитесь что в ядре 2.2 включена поддержка ramdisk (именно
			в ядре а не модулем).
			И <comment>обязательно</comment> добавьте строку <e>gentoo=notmpfs</e> в <path>/boot/grub/grub.conf</path> 
			или <path>/etc/lilo.conf</path> для ядра 2.2, чтобы подключался для загрузки скриптов не tmpfs а ramdisk.  
			Если же вы не используете devfs, тогда следует добавить следующее <e>gentoo=notmpfs,nodevfs</e> .
			</note>

<pre caption = "Сборка и установка ядра">
# <c>make dep &amp;&amp; make clean bzImage modules modules_install</c>
# <c>cp /usr/src/linux/arch/i386/boot/bzImage /boot</c>
</pre>
</body>
</section>
<section>
<title>Установка системного журнала</title>
<body>
        <p>Теперь, когда вы установили ядро и модули ядра, следует выбрать системный журнал.
			Мы предоставляем sysklogd, с достаточно традиционным набором журналов.
			Конечно есть еще  msyslog, syslog-ng и metalog. Опытные пользователи
			предпочитают не пользоваться sysklogd (который не очень то шустрый) 
			и выбирают другие варианты.  
			Если вы сомневаетесь, попробуйте metalog, он тоже достаточно популярный.
			Чтобы установить ваш журнал, выберите что-то <e>одно</e> из списка: 
			</p>
<pre caption="Выбор и установка системного журнала">
# <c>emerge app-admin/sysklogd</c>
# <c>rc-update add sysklogd default</c>
<comment>или</comment>
# <c>emerge app-admin/syslog-ng</c>
# <c>rc-update add syslog-ng default</c>
<comment>или</comment>
# <c>emerge app-admin/metalog</c>
# <c>rc-update add metalog default</c>
<comment>или</comment>
# <c>emerge app-admin/msyslog</c>
# <c>rc-update add msyslog default</c>
</pre>
        <impo>
			
			Metalog не записывает события сразу же в журнал, а сначала складывает данные в блоки	
			на диск. Поэтому если вы решили заняться отладкой демона, его попытки улучшить производительность
			вряд ли вам помогут, так что после старта Gentoo Linux можно отправить metalog 
			сигнал USR1 чтобы временно отключить буферизацию (это значит,что  
			<i>tail -f <path>/var/log/everything/current</path></i> будет
			работать в реальном времени). А чтобы обратно 
			включить буферизацию, посылается сигнал USR2. Если вы хотите на всегда отключить
			буферизацию, то следует поменять METALOG_OPTS="-B" на METALOG_OPTS="-B -s"
			в <path>/etc/conf.d/metalog</path>. 
			</impo>
<pre caption="Отключение буферизации в metalog">
<codenote>Чтобы отключить буферизацию:</codenote>
# <c>killall -USR1 metalog</c>
<codenote>Чтобы включить обратно:</codenote>
# <c>killall -USR2 metalog</c>
</pre>
        <p>Теперь можно выбрать какой пакет cron будет использоваться.
			В распоряжении имеются dcron, fcron и vcron. Если сомневаетесь,
			ставьте vcron.
			</p>
<pre caption="Выбор CRON демона">
# <c>emerge sys-apps/dcron</c>
# <c>rc-update add dcron default</c>
# <c>crontab /etc/crontab</c>
<comment>или</comment>
# <c>emerge sys-apps/fcron</c>
# <c>rc-update add fcron default</c>
# <c>crontab /etc/crontab</c>
<comment>или</comment>
# <c>emerge sys-apps/vcron</c>
# <c>rc-update add vcron default</c>
<comment>Для использования vcron можно не запускать <c>crontab /etc/crontab</c>.</comment>
</pre>
			 <p>За дополнительной информацией о программах которые стартуют при загрузке и демонах,
			подробнее читайте здесь:
			<uri link="/doc/en/rc-scripts.xml">rc-script guide</uri>. 
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Установка прочих пакетов</title>
    <section>
      <body>
        <p>Если для доступа к интернет используется rp-pppoe,  установим его прямо сейчас. </p>
<pre caption="Установка rp-pppoe">
# <c>USE="-X" emerge rp-pppoe</c>
<comment>GRP пользователи должны выполнить:</comment>
# <c>USE="-X bindist" emerge -K rp-pppoe</c>
</pre>

		<note><i>USE="-X"</i> отключает установку интерфейса для X-ов. Интерфейс
		штука неплохая и удобная, но требует наличия X'ов.
		В любом случае позже можно пересобрать пакет с поддержкой Х.
		</note>
        <note> Не забывайте, что rp-pppoe установлен, но он не отконфигурирован.
			Следует обратиться к <c>adsl-setup</c> при первой загрузкой Gentoo.
			</note>
        <p>Если вы используете XFS, ReiserFS или LVM, возможно вам захочется установить несколько дополнительных
			пакетов из Portage. Можно установить <c>xfsprogs</c>, если используется XFS: 
			</p>
<pre caption="Установка средств управления файловыми системами">
# <c>emerge -k sys-apps/xfsprogs</c>
<comment>Для ReiserFS устанавливается пакет ReiserFS tools: </comment>
# <c>emerge -k sys-apps/reiserfsprogs</c>
<comment>Для JFS, установите JFS tools: </comment>
# <c>emerge -k jfsutils</c>
<comment>Для  LVM, ставится пакет <c>lvm-user</c> package: </comment>
# <c>emerge -k sys-apps/lvm-user</c>
</pre>
        <p>Если у вас ноутбук и вы хотите чтобы после перезагрузки заработали
		PCMCIA слоты, установите
			пакет  <i>pcmcia-cs</i>.
			</p>
<pre caption="Установка PCMCIA-cs">
# <c>emerge -k sys-apps/pcmcia-cs</c>
</pre>
</body>
    </section>
  </chapter>
  <chapter>
    <title>Создание пользователей</title>
	    <section>
      <title>Установка пароля root</title>
      <body>
        <p>Пока не забыли, установите пароль root'a: </p>
<pre caption="Установка пароля root">
# <c>passwd</c>
</pre>
      </body>
    </section>
    <section>
      <title>Добавление пользователя для повседневной работы</title>
      <body>
        <p>Работать с привилегиями пользователя root в системах Unix/Linux  <e>опасно</e> и
        следует стараться этого избегать. Поэтому рекомендуется создать пользователя
        для обычной работы на компьютере.</p>
        <pre caption = "Добавление пользователя">
# <i>useradd имя_пользователя -m -G users,wheel,audio -s /bin/bash</i>
# <i>passwd имя_пользователя</i></pre>
        <p>И замените <c>имя_пользователя</c> на что-то другое.</p>
        <p>В случае, если прав пользователя не хватает для того чтобы выполнить какую либо задачу,,
        воспользуйтесь<c>su -</c> чтобы изменить привилегии до привилегий пользователя root или
        воспользуйтесь пакетом <c>sudo</c>.</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Задание имени компьютера</title>
    <section>
      <body>
        <p>
        Имя компьютера хранится в <path>/etc/hostname</path> 
        можно его задать одной строкой, что-то типа: <c>мойкомп</c>. 
        </p>
<pre caption="Конфигурация имени">
# <i>echo mymachine &gt; /etc/hostname</i>
</pre>
        <p>
        Укажите в <path>/etc/dnsdomainname</path> имя домена:<c>mydomain.com</c>.
        </p>
<pre caption="Конфигурация имени домена">
# <i>echo mydomain.com &gt; /etc/dnsdomainname</i>
</pre>
        <p>
        Если у вас домен NIS, его следует указать в  <path>/etc/nisdomainname</path>.
        </p>
<pre caption="Конфигурация домена NIS">
# <i>echo nis.mydomain.com &gt; /etc/nisdomainname</i>
</pre>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Правка /etc/hosts</title>
    <section>
      <body>
        <p>Здесь содержатся названия и IP-адреса машин в сети.
			/etc/hosts используется для хранения имен машин, не привязанных к
			какому либо серверу имен. Вот шаблон файла:
			</p>
<pre caption="Шаблон hosts">
127.0.0.1      localhost
<comment># следующая строка содержит IP-адрес машины в локальной сети и ее имя.</comment>
192.168.1.1    mymachine.mydomain.com	mymachine
</pre>
        <note>Если у вас сеть DHCP, не помешает добавить имя компьютера и в
        файл <i>localhost</i>. Это поможет GNOME и другим программам правильно
	определить имена.
		</note>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Окончательная конфигурация сети</title>
    <section>
      <body>
        <p>Укажите названия всех необходимых модулей в <path>/etc/modules.autoload</path>.
			Кроме этого, рядом с именем модуля можно добавить туда любые опции.
			При загрузке Gentoo Linux эти модули буду автоматически загружаться.
			Особое внимание уделите модулю вашей сетевой карты, если вы
			скомпилировали его как ядро:
			</p>
<pre caption="/etc/modules.autoload"><comment>Предположим что у вас сетевая от  3com. 
проверьте <path>/lib/modules/`uname -r`/kernel/drivers/net</path> для вашей карты. </comment>
3c59x
</pre>
        <p>Отредактируйте скрипт<path>/etc/conf.d/net</path> чтобы сеть заработала после перезагрузки: </p>
<pre caption="Конфигурация сети во время загрузки">
# <c>nano -w /etc/conf.d/net</c>
# <c>rc-update add net.eth0 default</c>
</pre>
        <p>Для каждой дополнительной сетевой карты или интерфейса tokenring создайте отдельный дополнительный скрипт<path>net.eth<comment>x</comment></path> или <path>net.tr<comment>x</comment></path>  (<comment>x</comment> = 1, 2, ...): </p>
<pre caption="Несколько сетевых интерфейсов">
# <c>cd /etc/init.d</c>
# <c>cp net.eth0 net.eth<comment>x</comment></c>
# <c>rc-update add net.eth<comment>x</comment> default</c>
</pre>
        <p>Если у вас есть карта PCMCIA, загляните в <path>/etc/init.d/pcmcia</path> 
			и убедитесь что там все в порядке и готово к установке, а после
			добавьте строки в начало <path>/etc/init.d/net.ethx</path>:
			</p>
<pre caption="PCMCIA depend in /etc/init.d/net.ethx">
depend() {
	need pcmcia
}
</pre>
        <p>Теперь драйвер карты PCMCIA будет автоматически загружаться каждый
		раз при включения сети.
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>И последнее: Конфигурация основных параметров (включая раскладку клавиатуры)</title>
    <section>
      <body>
<pre caption="Основная конфигурация">
# <c>nano -w /etc/rc.conf</c>
</pre>
        <p>Следуйте указаниям в файле чтобы настроить основные параметры.  
			Для все пользователей должны быть созданы настройки <c>CLOCK</c>.
			Настроить клавиатуру для использования дополнительных раскладок,
			можно изменив значение <c>KEYMAP</c>.
			Возможные варианты расположены в <path>/usr/share/keymaps</path> 
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Настройка загрузчика</title>
	<section>
	<title>Заметки</title>
	<body>
	<p> В Gentoo на выбор есть несколько загрузчиков.
	Вы сами можете выбрать, каким именно загрузчиком вы собираетесь пользоваться: GRUB или LILO.
	</p>
	<p> Только помните, что устанавливать оба загрузчика <c>совсем</c> не
	обязательно. Это может лишь привести к проблемам, так что выберите только
	один вариант.
	</p>
	<p>
	Кроме всего прочего вам придется сконфигурировать загрузчик по разному, в
	зависимости от того использовали ли вы <c>genkernel</c> (ядро с initrd) или
	собирали ядро вручную. Обратите внимание на разницу в настройках.
	</p>
	<impo>Если ваша материнская плата на основе чипсета от NVIDIA nForce или nForce2
	с интегрированной видеокартой GeForcе, все таки воспользуйтесь LILO и не трогайте GRUB. Дело в том,
	нижняя часть оперативной памяти будет 
	использоваться под нужды видео, а GRUB также использует нижнюю часть  памяти во время загрузки,
	и это может привести к "нехватке" памяти. Так что если у вас nForce и встроенная видеокарта,
	пользуйтесь LILO. Даже если сейчас вы не используете интегрированную видео
	карту, а отдельную плату, было бы здорово иметь возможность убрать видео
	плату и вернутся к интегрированной карте.</impo>
	</body>
	</section>
    <section>
	<title>Настройка GRUB</title>
      <body>
        <p>Главное в GRUB, это понять как он обращается к жесткому диску и разделам.
			Разделы Linux <path>/dev/hda1</path> называются в  GRUB <path>(hd0,0)</path>.
			Обратите внимание, что правописание  GRUB  требует наличие скобок вокруг hd0,0 .
			Отсчет дисков ведется с нуля а не с &quot;a&quot;,тоже относится и к разделам.
			Также под "hd" подразумеваются только жесткие диски, а не CD-ROM, CD-RW и любые 
			другие устройства atapi-ide.Тот же механизм при наименовании и scsi дисков.
			(Обычно они просто получают другие, большие номера, за исключением тех случаев, 
			когда в bios разрешена загрузка со scsi.) Предположим у нас есть жесткий диск
			на /dev/hda,  cdrom на /dev/hdb, cdrw на /dev/hdc, второй жесткий диск на /dev/hdd, 
			scsi диска нет, тогда <path>/dev/hdd7</path> будет выглядеть как <path>(hd1,6)</path>.
			Это может показаться несколько мудреным, но, как мы увидим дальше,
			GRUB позволяет дополнять уже набранный текст, что может быть
			особенно удбон тем, у кого много жестких дисков и разделов, и кто
			немного запутался в системе нумерации GRUB. Ну удобно, теперь пора
			установить GRUB.
			</p>
        <p>Чтобы установить GRUB достаточно просто набрать находясь в вашей
		среде измененного корня (chroot) <c>grub</c> : </p>
<pre caption="Установка GRUB">
# <c>emerge -k grub</c>
# <c>grub</c>
</pre>
        <p>Далее в командной строке последует приглашение <c>grub&gt;</c> grub.
			Теперь главное правильно набирать команды для установки
			загрузочной записи GRUB.  В образце, приведенном ниже, 
			загрузочная запись GRUB будет записывать на жесткий диск в MBR (главная загрузочная запись), 
			так что первое что будет видно после включения компьютера, это приглашение GRUB.
			В моем случае все выглядело так:
			</p>

<pre caption="Запись GRUB в MBR">
grub&gt; <c>root (hd0,0)</c> <codenote>Загрузочный раздел</codenote>
grub&gt; <c>setup (hd0)</c> <codenote>Место куда устанавливается  GRUB,собственно  MBR</codenote>
</pre>
	
<pre caption="Запись GRUB вне MBR">
<comment>Можно установить  загрузчик и вне MBR</comment>
grub&gt; <c>root (hd0,0)</c> <codenote>Загрузочный раздел</codenote>
grub&gt; <c>setup (hd0,4)</c> <codenote>Место установки записи загрузчика /dev/hda5</codenote>
grub&gt; <c>quit</c>
</pre>
       
	<p>А вот как работают эти команды. Первая <c>root ( )</c> указывает GRUB
			размещение загрузочного раздела (в нашем случае это <path>/dev/hda1</path> или 
			<path>(hd0,0)</path> в грамматике GRUB. А вторая <c>setup ( )
			</c> указывает GRUB куда прописать загрузочную запись - причем свои собственные 
			файлы он будет искать по адресу указанному в <c>root( )</c>. В моем случае,
			загрузочная запись расположена в MBR,  поэтому я просто указываю <path>/dev/hda</path> 
			(он же <path>(hd0)</path>). 
			Если у вас был установлен другой загрузчик,и вы хотите установить GRUB вторым
			загрузчиком, то GRUB можно установить в загрузочную запись другого раздела. В этом
			случае, следует указывать именно раздел а не целый диск. После того как GRUB
			установится, можно выйти из программы набрав <c>quit</c>.
			</p>

			<note> Механизм автоматического заполнения строки по tab в  grub можно использовать
			предположим набрав <c> root (</c> и нажав TAB,после чего отобразится
			список доступных устройств (не только жестких дисков). Если же нажать TAB 
			предварительно набрав <c> root (hd</c>, grub отобразит список всех жестких 
			дисков.А набрав  <c> root (hd0,</c> и нажав TAB, выведет список всех разделов
			на этом диске.

			Эта функция должна помочь получить команды с правильным синтаксисом
			и указанием дисков.
			</note>			
			<p>
			Gentoo Linux уже установлен,
			но еще необходимо создать <path>/boot/grub/grub.conf</path> чтобы на экран, 
			выводилось после перезагрузки удобное меню GRUB.Это делается так.
			</p>
        <impo>Пожалуй стоит еще добавить ссылочку с <i>grub.conf</i> на <i>menu.lst</i>. Делаем следующее:
			<c>ln -s /boot/grub/grub.conf /boot/grub/menu.lst </c>. </impo>
        <p>Теперь создаем grub.conf (<c>nano -w /boot/grub/grub.conf</c>),и добавляем туда:
			</p>
<pre caption="grub.conf for GRUB">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

<comment>#Если вы собирали ядро сами:</comment>
title=My example Gentoo Linux
root (hd0,0) 
kernel (hd0,0)/boot/bzImage root=/dev/hda3 

<comment>#Если вы использовали genkernel:</comment>
title=My example Gentoo Linux (genkernel)
root (hd0,0)
kernel (hd0,0)/boot/kernel-KV root=/dev/hda3
initrd (hd0,0)/boot/initrd-KV

<comment>#Только для тех, кто использует двойную загрузку</comment>
title=Windows XP
root (hd0,5) 
chainloader (hd0,5)+1
</pre>

        <note>
			(hd0,0) пишется без пробелов внутри кавычек.
			</note>
        <impo>
			Для правильной работы CD-RW, эмуляцию scsi следует добавить в grub.conf строку
			&quot;hdx=ide-scsi&quot; (где &quot;hdx&quot; адрес cdrw).
			</impo>
        <p>После сохранения изменений в grub.conf, установка Gentoo Linux завершена.  Первая часть GRUB 
			отвечает за загрузку Gentoo Linux. Вторая часть необязательна и может использоваться
			для загрузки той же Windows.
			</p>
        <note>Здесь <path>(hd0,0)</path> это адрес загрузочного раздела	(<path>/dev/hda1</path> в нашем случае), 
			а <path>/dev/hda3</path> указывает на основной раздел. На <path>(hd0,5)</path> 
			расположен загрузчик NT.
			</note>
			<note>Путь к ядру указывается относительно корневого раздела. Если у
			вас boot раздел это <path>(hd0,0)</path>, а root - это
			<path>(hd0,1)</path>, то все пути выше превратятся в
			<path>bzImage</path></note>
        <p>Если требуется передать ядру дополнительные опции загрузки, добавьте их в конец команды <c>kernel</c>.
			Опция (<c>root=/dev/hda3</c>)пропускается, но можно опустить и другие. В частности можно
			отключить devfs (не стоит этого делать ясли вы толком не знаете, что делаете), просто добавьте
			<c>gentoo=nodevfs</c> к <c>kernel</c>.
			</p>
        <note>Так же теперь можно не указывать <c>devfs=mount</c> чтобы devfs
		заработала. Теперь devfs включена по умолчанию.
			</note>
      </body>
    </section>
	<section>
    <title>Настройка LILO</title>
      <body>
        <p>Пускай многим нравится GRUB, но он не всегда самое лучшее из того что есть.
	LILO, (LInuxLOader), давно известный загрузчик Linux.Если не устанавливать GRUB,
	установка LILO произойдет следующим образом:
	</p>
        <p>Установка LILO: 
	</p>
<pre caption="Установка LILO">
# <c>emerge -k lilo</c>
</pre>
        <p>Теперь настроим  LILO. Это образец конфигурационного файла <path>/etc/lilo.conf</path>
	</p>
<pre caption="Пример lilo.conf">
boot=/dev/hda
map=/boot/map
install=/boot/boot.b
prompt
timeout=50
lba32
default=linux

<comment>#Если вы собирали ядро сами</comment>
image=/boot/bzImage
	label=linux
	read-only
	root=/dev/hda3

<comment>#Если вы использовали genkernel:</comment>
image=/boot/kernel-KV
	label=gk_linux
	root=/dev/hda3
	initrd=/boot/initrd-KV
	append="root=/dev/ram0 init=/linuxrc"

	
<comment>#Для загрузки Windows или другой ОС:</comment>
other=/dev/hda1
	label=dos
</pre>
	<ul>
        <li><i>boot=/dev/hda</i> записывает LILO на первый жесткий диск на первой контроллере IDE.</li>
        <li><i>map=/boot/map</i> объявление map. Обычно этого можно не менять. </li>
        <li><i>install=/boot/boot.b</i> устанавливает указанный файл как новый загрузочный сектор.
	Тоже можно не менять. Если строка install отсутствует, LILO использует /boot/boot.b по умолчанию. </li>
        <li>Наличие<i>prompt</i>, отображает классический вариант загрузки LILO- <i>lilo:</i>.
	Хотя это не рекомендуется, если удалить <i>prompt</i> из  lilo.conf, получить командную сроку LILO при загрузке можно
	удерживая клавишу [Shift]. </li>
        <li><i>timeout=50</i> Время, которое LILO будет ждать выбора пользователя, перед тем как начать загружаться. 
	Измеряется в десятых долях секунды.50 установлено по умолчанию. </li>
        <li><i>lba32</i> описывает геометрию жесткого диска. Часто
		устанавливается равным linear. Но не стоит его
	менять без острой на то надобности. Может закончиться тем, что система не сможет загрузиться. </li>
        <li><i>default=linux</i> rуказывает что операционная система для загрузки по умолчанию  Linux.
	Имя linux это тот label который вы назначили вашим загрузочным параметрам. </li>
        <li><i>image=/boot/bzImage</i> указывает, какое именно ядро linux загружать. Возможно указание доп. параметров.</li>
        <li><i>label=linux</i> название операционной системы, выводимое на экран LILO. В нашем случае также и 
	операционная система по умолчанию. </li>
        <li><i>read-only</i> указывает что основной- root  раздел не подлежит изменению во время загрузки. </li>
        <li><i>root=/dev/hda3</i> указывает LILO на основной раздел. </li>
	</ul>
        <p>После окончания редактирования <i>lilo.conf</i>, записываем  LILO в MBR:
	</p>
<pre caption="Запуск LILO">
# <c>/sbin/lilo</c>
</pre>
        <p>Теперь LILO настроено, и можно загружать Gentoo Linux!
	</p>
      </body>
    </section>
	<section>
	<title>Использование framebuffer</title>
	<body>
	    <p>
    Те кто включил в ядро поддержку framebuffer, надо добавить <c>vga=xxx</c> в конфигурационный файл их загрузчика, как параметр ядра. <c>xxx</c> примет значение из следующей таблицы:
    </p>
<table>
<tr><ti></ti><th>640x480</th><th>800x600</th><th>1024x768</th><th>1280x1024</th></tr>
<tr><th>8 bpp</th><ti>769</ti><ti>771</ti><ti>773</ti><ti>775</ti></tr>
<tr><th>16 bpp</th><ti>785</ti><ti>788</ti><ti>791</ti><ti>794</ti></tr>
<tr><th>32 bpp</th><ti>786</ti><ti>789</ti><ti>792</ti><ti>795</ti></tr>
</table>
<p>Пользователи LILO должны добавить <c>vga=xxx</c> наверху файла
конфигурации</p>
<p>Пользователи GRUB должны добавить <c>vga=xxx</c> к строке <c>kernel
(hd0,0)...</c></p>
	</body>
	</section>
  </chapter>
  <chapter>
    <title>Создание загрузочных дисков</title>
    <section>
      <title>Загрузочные диски GRUB</title>
      <body>
	  <impo>
	  Не забудьте вставить флоппи диск в дисковод, прежде продолжить.
	  </impo>
        <p>Если linux  устанавливается впервые, не будет лишним создать и
	загрузочный диск. Это вопрос безопасности, и диск никогда не помешает. 
	Если существуют системные ограничения, не позволяющие установить рабочий
    	загрузчик под  chroot-ом, то вам придется создать загрузочный диск GRUB. 
	Если это так, создайте загрузочный диск GRUB, а после перезагрузки, установите
   	GRUB в MBR. Диск создается так:
			</p>
<pre caption="Создание загрузочного диска GRUB">
# <c>cd /usr/share/grub/i386-pc/</c>
# <c>cat stage1 stage2 > /dev/fd0</c>
</pre>
        <p>Теперь перезагрузитесь с дискеты. Из строки <c>grub&gt;</c>, можно выполнить любые нужные 
		для установки команды.</p>
      </body>
    </section>
    <section>
      <title>Загрузочный диск LILO</title>
      <body>
	  <impo>
	  Не забудьте вставить флоппи диск в дисковод, прежде продолжить.
	  </impo>
        <p>LILO также позволяет создать загрузочный диск:
		</p>
<pre caption="Создание загрузочного диска">
# <c>dd if=/boot/your_kernel of=/dev/fd0 </c>
<comment>Но это сработает только в том случае, если ядро меньше 1.4MB</comment>
</pre>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Использование GRP</title>
    <section>
     <body>

     <p>GRP пользователи могут начать установку бинарных пакетов:</p>

<pre caption="Установка из GRP">
# <c>USE="bindist" emerge -k xfree</c> 
<codenote>Переменная USE="bindist" должна быть установлена при установке GRP
пакетов, использующих XFree86.</codenote>
</pre>

     <p>CD 1 содержит достаточно пакетов для установки работающей системы с
	 XFree86. Второй диск из комплекта содержит дополнительные приложения,
	 включая KDE, GNOME, Mozilla и другие. Для установки этих пакетов вам надо
	 будет перезапустить систему (это описывается в следующем разделе). После
	 того, как ваша базовая система Gentoo будет запущена с жесткого диска, вы
	 сможете смонтировать второй CD и скопировать файлы:
</p>
     <pre caption="Загрузка бинарных пакетов со второго CD">
# <c>mount /dev/cdrom /mnt/cdrom</c>
# <c>cp -a /mnt/cdrom/packages/* /usr/portage/packages/</c>
</pre>

     <p>Теперь разные приложения можно устанавливать тем же способом. Например:</p>

     <pre caption="Установка KDE из GRP">
# <c>USE="bindist" emerge -k kde</c>
</pre>

     </body>
  </section>
  </chapter> 
  <chapter>
    <title>Установка завершена!</title>
    <section>
      <body>
        <p>Gentoo Linux наконец установлен.  Осталось только обновить
		конфигурационные файлы, выйти из под chroot среды, отключить диски и перезагрузиться:
			</p>
<warn>
<c>etc-update</c> может предоставить список файлов, для которых доступны более
свежие версии. Проверьте, чтобы эти файлы не внесли больших изменений (такие как  
<path>/etc/fstab</path>, <path>/etc/make.conf</path>, <path>/etc/rc.conf</path>, ...). 
Объедините файлы, которые не вносят столь больших изменений, удалите обновления
остальных или посмотрите разницу и вручную обновите конфигурационные файлы.
</warn>
<pre caption="Перезагрузка">
# <c>etc-update</c>
# <c>exit</c> 
<comment>(это выведет вас из среды chroot; еще можно нажать <c>^D</c>)</comment>
# <c>cd / </c>
# <c>umount /mnt/gentoo/boot</c>
# <c>umount /mnt/gentoo/proc</c>
# <c>umount /mnt/gentoo</c>
# <c>reboot</c>
</pre>
        <note>
			После перезагрузки неплохо бы выполнить<c>update-modules</c> для создания
			<path>/etc/modules.conf</path>. Вместо редактирования этого файла
			надо изменять файлы в <path>/etc/modules.d</path>.
			</note>
        <p>Для получения ответов по вопросам разработки Gentoo Linux а также по любым другим, 
			подпишитесь на наши рассылки: gentoo-user и gentoo-dev.
			(дополнительная информация находится на <uri
			link="http://www.gentoo.org/main/en/lists.xml">странице</uri> наших рассылок).
			Еще мы написали <uri link="http://www.gentoo.org/doc/en/desktop.xml">Руководство по настройке рабочей станции</uri>
			Там вы также найдете много полезной информации, посвященной настройке Gentoo Linux, и еще загляните на 
			<uri link="http://www.gentoo.org/doc/en/portage-user.xml">Руководство по использованию Portage</uri>
			для того чтобы ознакомится с базовыми понятиями Portage. Остальная документация Gentoo находится на :
			<uri link="http://www.gentoo.org/main/en/docs.xml">here</uri>. Если у вас возникли вопросы по установке
			Gentoo  обратитесь к <uri
			link="http://www.gentoo.org/doc/en/faq.xml">Gentoo Linux FAQ</uri>.
			Удачи и добро пожаловать в Gentoo Linux!
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Gentoo-Stats</title>
    <section>
      <body>
        <p>Программа сбора статистической информации Gentoo Linux был начата с целью ознакомить разработчиков с кругом
		пользователей. Программа собирает информацию по использованию Gentoo Linux с целью помочь разработчикам 
		с определением приоритетных направлений развития.  Устанавливать программу совсем необязательно, но команда 
		Gentoo была бы вам очень признательна.С результатами можно ознакомиться здесь <uri>http://stats.gentoo.org/</uri>.
		</p>
        <p>Сервер gentoo-stats присвоит вашей системе уникальный ID. Сделано это для того, чтобы избежать
		многократной регистрации одной машины.Этот ID не будет использоваться для индивидуальной 
		идентификации, равно как и для сбора информации об IP-адресах или
		персональной информации.
		Приняты все необходимые меры для неразглашения информации о
		пользователях Gentoo.
		Программа &quot;gentoo-stats&quot; собирает следующую информацию:
		</p>
        <ul>
          <li>установленные пакеты и их версия</li>
          <li>Инфо о процессоре: тактовая частота (MHz), модель, флаги CPU ( типа &quot;mmx&quot; или &quot;3dnow&quot;)</li>
          <li>оперативная память (всего RAM, размер свопа)</li>
          <li>PCI карты  и тип сетевого устройства</li>
          <li>Профиль машины Gentoo Linux берется из того места, на которое идет
		  ссылка с /etc/make.profile.</li>
        </ul>
        <p>Мы знаем, что разглашение частной информации может привести к нежелательным последствиям для пользователей Gentoo Linux.
		(равно как и разработчиков).
		</p>
        <ul>
          <li>gentoo-stats никогда не передаст частную информацию, разве что вы ее сами не модифицируете.
		О передачи информации о паролях, информации о пользователях и т.д. не может быть и речи.</li>
          <li>Передача вашего e-mail возможна, но по умолчанию отключена.</li>
          <li>Также не предусмотрено сохранение IP адресов, так, чтобы мы смогли бы вас
		идентифицировать. Ничего подобного &quot;IP address/system ID&quot; нет.</li>
        </ul>
        <p>Установка проста - выполните просто следующие команды:
		</p>
<pre caption="Установка gentoo-stats">
# <c>emerge gentoo-stats</c>   <codenote>Устанавливает gentoo-stats</codenote>
# <c>gentoo-stats --new</c>    <codenote>Получение нового ID</codenote>
</pre>
        <p>Вторая команда запросит новый ID для вашей системы, и автоматически занесет
		его в <path>/etc/gentoo-stats/gentoo-stats.conf</path>. Просмотрите этот файл для ознакомления с 
		дополнительными настройками.
		</p>
        <p>Теперь, программа будет регулярно, по расписанию выполняться.
		(ее не обязательно выполнять от имени пользователя root). Добавьте в  <path>crontab</path> следующее:
		</p>
<pre caption="Обновление gentoo-stats с помощью cron">
<c>0 0 * * 0,4 /usr/sbin/gentoo-stats --update &gt; /dev/null</c>
</pre>
        <p><c>gentoo-stats</c> это простой скрипт, написанный на perl, его можно просмотреть
		в любом текстовом редакторе: <path>/usr/sbin/gentoo-stats</path>.	</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Gentoo и нестандартное оборудование</title>
    <section>
       <title>ATA RAID</title>
       <body>
       <p>
       Тем кто использует оборудование ATA RAID и планирует установить Gentoo,
       следует обратить внимание на следующее, для успешного проведения
	   установки:
       </p>
       <ul>
       <li>Старт с LiveCD выполняется с опцией <c>doataraid</c>.</li>
       <li>Если вы не указали<c>doataraid</c> вовремя загрузки, и модули 
       оказались не загружены, загрузите их как указано:
       <pre caption = "Загрузка модулей RAID">
# <i>modprobe ataraid</i>
<comment>Для контроллеров Promise Raid:</comment>
# <i>modprobe pdcraid</i> 
<comment>Для контроллеров Highpoint Raid:</comment>
# <i>modprobe hptraid</i>
       </pre>
       </li>
       <li>Для некоторых контроллеров ATA RAID, после деления необходимо 
	перегрузиться; иначе форматирование не сработает.</li>
       <li>Перед chroot,выполните mount для дерева устройств в новое окружение:
       <pre caption = "Mounting /dev into /mnt/gentoo/dev">
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
       </pre>
       </li>
       <li>Настраивая ядро, выберите требуемые параметры RAID :
       <pre caption = "Конфигурирование ядра  Linux  для использования RAID ">
<comment>Для контроллеров Highpoint RAID:</comment>
ATA/IDE/MFM/RLL support  ---&gt;
  [*] HPT36X/37X chipset support 
  [*] Support for IDE Raid controllers
  [*] Highpoint 370 software RAID
<comment>Для контроллеров Promise RAID:</comment>
ATA/IDE/MFM/RLL support  ---&gt;
  [*] PROMISE PDC202{46|62|65|67} support 
  <comment>и/или</comment>
  [*] PROMISE PDC202{68|69|70|71|75|76|77} support
  [*] Support for IDE Raid controllers
  [*] Support Promise software RAID (Fasttrak(tm))
       </pre></li>
       <li>Если используется GRUB добавьте <c>--stage2=/boot/grub/stage2</c> для 
       запуска <c>grub</c> с командой <c>setup</c>:
       <pre caption = "Установка GRUB для использования с Hardware RAID">
grub&gt; <i>root (hd0,0)</i>
grub&gt; <i>setup --stage2=/boot/grub/stage2 (hd0)</i>
grub&gt; <i>quit</i>
       </pre>
       Настраивая GRUB правильно укажите <c>root</c> раздел  RAID:
       <pre caption = "grub.conf и RAID">
title=Мой Gentoo Linux на RAID
root (hd0,0)
kernel (hd0,0)/boot/bzImage root=/dev/ataraid/dXpY
       </pre></li>
       <li>Пользователи LILO указывают <c>root</c> для необходимого устройства RAID:
       <pre caption = "lilo.conf и RAID">
image=/boot/bzImage
    label=linux
    read-only
    root=/dev/ataraid/dXpY
       </pre></li>
     </ul>
   </body>
 </section>
</chapter>
</guide>
