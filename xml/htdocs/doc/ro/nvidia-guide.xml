<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/nvidia-guide.xml,v 1.8 2005/07/08 19:09:07 alin Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/ro/nvidia-guide.xml" lang="ro">
<title>Ghid Gentoo pentru nVidia</title>

<author title="Autor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="curtis119@gentoo.org">M Curtis Napier</mail>
</author>
<author title="Translator">
  <mail link="zinky@gentoo.ro">Talos Teodor</mail>
</author>
<author title="Translator">
  <mail link="alin@gentoo.org">Alin Dobre</mail>
</author>

<abstract>
Mulţi utilizatori Gentoo au pe sistemul lor un chipset nVidia. nVidia asigură
drivere specifice pentru Linux pentru a îmbunătăţi performanţele plăcii. Acest
ghid vă informează cum să instalaţi şi să configuraţi aceste drivere.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.12</version>
<date>2005-07-06</date>

<chapter>
<title>Introducere</title>
<section>
<body>

<p>
nVidia au publicat driver-ele lor proprii de Linux ce oferă performanţe bune şi
accelerare 3D totală. Versiunile publicate ale driver-elor sunt împărţite în
două părţi: <c>nvidia-kernel</c> şi <c>nvidia-glx</c>.
</p>

<p>
<c>nvidia-kernel</c> este un driver de kernel ce manipulează o comunicare la
nivelul inferior cu componentele video hardware. Acesta constă pur şi simplu
într-un modul de kernel, denumit <c>nvidia</c>, ce se instalează utilizând
sursele dvs. de kernel şi este necesar a fi încărcat de oricâte ori doriţi să
utilizaţi driver-ele nvidia.
</p>

<p>
La fel ca şi driver-ul de kernel, trebuie să instalaţi nivelul GLX pentru X11
(<c>nvidia-glx</c>). Acesta este utilizat de X pentru a interpreta informaţiile
grafice, ce utilizează intern driver-ul de kernel <c>nvidia-kernel</c> pentru a
interfaţa cu componentele hardware.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configurarea Plăcii Dumneavoastră</title>
<section>
<title>Instalarea Driver-elor Aferente</title>
<body>

<p>
Aşa cum am menţionat anterior, driver-ul de kernel nVidia se instalează şi
rulează pe baza kernel-ului ce rulează curent. Se compilează ca modul, deci are
sens suportul kernel-ului dvs. pentru încărcarea modulelor de kernel. Dacă aţi
folosit <c>genkernel</c> ca să configuraţi kernel-ul sunteţi pregătiţi. Dacă
nu, mai faceţi încă o verificare în configurarea kernel-ului pentru ca acest
suport să fie activ:
</p>

<pre caption="Activarea Încărcării de Module">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
Va trebui, de asemenea, să activaţi în kernel opţiunea <e>Memory Type Range
Register</e>:
</p>

<pre caption="Activarea MTRR">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>

<p>
Modulele nVidia şi librăriile sunt găsite în două pachete: <c>nvidia-glx</c> şi
<c>nvidia-kernel</c>. Primele sunt librăriile X11 GLX în timp ce ultimile sunt
modulele de kernel.
</p>

<p>
Ebuild-ul pachetului nvidia-kernel descoperă automat versiunea dvs. de kernel
pe baza link-ului simbolic <path>/usr/src/linux</path>. Vă rugăm să vă
asiguraţi că acest link simbolic indică spre sursele corecte de kernel şi că
acestea sunt configurate corect. Vă rugăm să consultaţi secţiunea despre
Configurarea Kernel-ului din <uri link="/doc/ro/handbook/">Manualul de
Instalare</uri> pentru detalii despre configurarea kernel-ului dvs.
</p>

<p>
Dacă utilizaţi gentoo-sources-2.6.11-r6, conţinutul directorului /usr/src ar
trebui să fie ca în următorul exemplu:
</p>

<pre caption="Verificaţi link-ul simbolic /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ls -l</i>
<comment>(Verificaţi că linux indică spre directorul corect)</comment>
lrwxrwxrwx   1 root root   22 Apr 23 18:33 linux -&gt; linux-2.6.11-gentoo-r6
drwxr-xr-x   4 root root  120 Apr  8 18:56 linux-2.4.26-gentoo-r4
drwxr-xr-x  18 root root  664 Dec 31 16:09 linux-2.6.10
drwxr-xr-x  18 root root  632 Mar  3 12:27 linux-2.6.11
drwxr-xr-x  19 root root 4096 Mar 16 22:00 linux-2.6.11-gentoo-r6
</pre>

<p>
În textul afişat mai sus, veţi observa că link-ul simbolic <c>linux</c> indică
spre kernel-ul <c>linux-2.6.11-gentoo-r6</c>.
</p>

<p>
Dacă link-ul simbolic nu indică spre sursele corecte, trebuie să îl actualizaţi
în modul următor:
</p>

<pre caption="Creaţi/Actualizaţi link-ul simbolic /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ln -snf linux-2.6.11-gentoo-r6 linux</i>
</pre>

<p>
Acum este timpul să instalaţi <c>nvidia-kernel</c> şi <c>nvidia-glx</c>.
Deoarece <c>nvidia-glx</c> depinde de <c>nvidia-kernel</c>, instalarea
<c>nvidia-glx</c> este suficientă:
</p>

<pre caption="Instalarea modulelor nVidia ">
# <i>emerge nvidia-glx</i>
</pre>

<impo>
De fiecare dată când <uri link="/doc/ro/kernel-upgrade.xml">compilaţi un nou
kernel</uri> sau îl recompilaţi pe cel curent, trebuie să rulaţi şi <c>emerge
nvidia-kernel</c> pentru a reinstala modulele nVidia. nvidia-glx nu este
afectat de modificările de kernel şi nu trebuie reinstalat nici măcar când
recompilaţi/actualizaţi X.
</impo>

<p>
Odată ce instalarea s-a finalizat, executaţi comanda <c>modprobe nvidia</c>
pentru a încărca modulele de kernel în memorie.
</p>

<pre caption="Încărcarea modulelor de kernel">
# <i>modprobe nvidia</i>
</pre>

<p>
Pentru a preveni încărcarea manuală a modulului la fiecare pornire a
sistemului, probabil că doriţi această operaţie să fie efectuată automat de
fiecare dată când sistemul dumneavoastră porneşte, aşa că editaţi
<path>/etc/modules.autoload.d/kernel-2.6</path> (sau <path>kernel-2.4</path>)
şi adăugaţi <c>nvidia</c> în acesta. Nu uitaţi să rulaţi <c>modules-update</c>
ulterior.
</p>

<pre caption="Rularea modules-update">
# <i>modules-update</i>
</pre>

</body>
</section>
<section>
<title>Configurarea Serverului X</title>
<body>

<p>
Odată ce driver-ele aferente au fost instalate trebuie să configuraţi Serverul
X (XFree86 sau Xorg) pentru a folosi driver-ul <c>nvidia</c> în loc de
driver-ul <c>nv</c> implicit.
</p>

<p>
Deschideţi <path>/etc/X11/xorg.conf</path> (sau
<path>/etc/X11/XF86Config</path> dacă încă mai utilizaţi locaţia mai veche a
fişierului de configurare) cu editorul dumneavoastră favorit (spre exemplu
<c>nano</c> sau <c>vim</c>) şi căutaţi linia cu secţiunea <c>Device</c>. În
aceea secţiune, schimbaţi linia <c>Driver</c>:
</p>

<pre caption="Schimbarea de la nv la nvidia în configuraţia X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
Apoi căutaţi secţiunea <c>Module</c> şi asiguraţi-vă că modulul <c>glx</c> este
definit pentru a fi încărcat şi că modulul <c>dri</c>, nu:
</p>

<pre caption="Actualizarea secţiunii Module">
Section "Module"
  <comment>(...)</comment>
  <i># Load  "dri"
  Load  "glx"</i>
  <comment>(...)</comment>
EndSection
</pre>

<p>
Apoi, în secţiunea <c>Screen</c>, asiguraţi-vă, fie că directiva
<c>DefaultDepth</c> este setată la 16 sau 24, fie că aveţi subsecţiuni
<c>Display</c> cu setări <c>Depth</c> la 16 sau 24. Fără aceasta, extensiile
nvidia-glx nu vor porni.
</p>

<pre caption="Actualizarea secţiunii Screen">
Section "Screen"
  <comment>(...)</comment>
  <i>DefaultDepth 16</i>
  Subsection "Display"
  <comment>(...)</comment>
EndSection
</pre>

<p>
Rulaţi <c>opengl-update</c> pentru ca aplicaţia server X să folosească
librăriile nVidia GLX:
</p>

<pre caption="Rularea opengl-update">
# <i>opengl-update nvidia</i>
</pre>

</body>
</section>
<section>
<title>Adăugarea de Utilizatori în Grupul video</title>
<body>

<p>
Va trebui să adăugaţi utilizatorul dvs. în grupul <c>video</c> pentru a avea
acces la fişierele dispozitiv nvidia:
</p>

<pre caption="Adăugarea utilizatorului dvs. în grupul video">
# <i>gpasswd -a youruser video</i>
</pre>

<p>
Aceasta nu este în totalitate necesar dacă nu utilizaţi <c>udev</c>, dar nu vă
poate afecta în nici un mod, şi vă va pregăti sistemul pentru viitor :)
</p>

</body>
</section>
<section>
<title>Testarea plăcii dumneavoastră</title>
<body>

<p>
Pentru a testa placa dumneavoastră nVidia, lansaţi X şi rulaţi comanda
<c>glxinfo | grep direct</c>. Ar trebui să afişeze că direct rendering este
activat:
</p>

<pre caption="verificarea stării direct rendering">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
Pentru a monitoriza FPS (numărul de cadre pe secundă), rulaţi <c>glxgears</c>. 
</p>

</body>
</section>
<section>
<title>Activarea Suportului nvidia</title>
<body>

<p>
Unele utilitare, cum ar fi <c>mplayer</c> şi <c>xine-lib</c>, utilizează un
indicator USE local, denumit "nvidia" care activează suportul XvMCNVIDIA, util
în cazul filmelor cu rezoluţie mare. Adăugaţi "nvidia" în definiţia variabilei
dvs. USE din <path>/etc/make.conf</path> sau adăugaţi-l ca indicator USE pentru
<c>media-video/mplayer</c> şi/sau <c>media-libs/xine-lib</c> în
<path>/etc/portage/package.use</path>.
</p>

<p>
Apoi, rulaţi <c>emerge -uD --newuse world</c> pentru a recompila toate
aplicaţiile ce beneficiază de modificarea acestui indicator USE.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Probleme</title>
<section>
<title>Activarea funcţionalităţilor 2D pe maşinile cu mai mult de 4GO Memorie</title>
<body>

<p>
Dacă aveţi probleme cu accelerarea 2D de la nVidia, cel mai probabil nu puteţi
seta o plajă valorică pentru proprietatea write-combining cu MTRR. Pentru a
verifica, analizaţi conţinutul fişierului <path>/proc/mtrr</path>:
</p>

<pre caption="Verificarea dacă este activată proprietatea write-combining">
# <i>cat /proc/mtrr</i>
</pre>

<p>
Fiecare linie ar trebui să conţină "write-back" sau "write-combining". Dacă
este o linie ce conţine "uncachable" în acest fişier, va trebui să schimbaţi o
setare din BIOS pentru a repara eroarea.
</p>

<p>
Reporniţi şi intraţi în mediul BIOS, cautaţi setările MTRR (probabil sub "CPU
Settings"). Schimbaţi setarea din "continuous" în "discrete" şi porniţi înapoi
în Linux. ACum, veţi observa că nu mai există nici o intrare cu valoarea
"uncachable" şi accelerarea 2D funcţionează fără probleme.
</p>

</body>
</section>
<section>
<title>Primesc mesaje de eroare despre mărimi de stivă de 4K nesuportate (unsupported 4K stack sizes)</title>
<body>

<p>
Pachetele <c>nvidia-kernel</c> mai vechi de versiunea 1.0.6106 suportă doar
versiuni de kernel ce utilizează mărimea stivei de 8K. Versiunile mai recente
de kernel (2.6.6 sau mai noi) conţin suport pentru mărimea stivei de 4K, de
asemenea. Nu selectaţi mărimea stivei de 4K în configuraţia dvs. de kernel,
dacă utilizaţi o asemenea versiune a pachetului <c>nvidia-kernel</c>. Puteţi
găsi această opţiune în secţiunea <c>Kernel Hacking</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configurare Avnasată</title>
<section>
<title>Documentaţie</title>
<body>

<p>
Pachetul driver-ului nVidia conţine, de asemenea, o documentaţie comprehensivă.
Aceasta este instalată în <c>/usr/share/doc</c> şi poate fi vizualizată cu
următoarea comandă:
</p>

<pre caption="Vizualizarea documentaţiei NVIDIA">
# <i>less /usr/share/doc/nvidia-glx-*/README.txt.gz</i>
</pre>

</body>
</section>
<section>
<title>Parametrii modulelor de kernel</title>
<body>

<p>
Modulul de kernel <c>nvidia</c> acceptă un număr de parametri (opţiuni) ce pot
fi utilizaţi pentru a personaliza comportamentul driver-ului. Cei mai mulţi
dintre aceştia sunt menţionaţi în documentaţie. Pentru a adăuga sau modifica
valorile acestor parametri, editaţi fişierul <c>/etc/modules.d/nvidia</c>.
Aminiţi-vă să rulaţi <c>modules-update</c> după ce modificaţi acest fişier şi
tineţi mine că trebuie să reîncărcaţi modulul <c>nvidia</c> înainte ca setările
să aibă efect.
</p>

</body>
</section>
<section>
<title>Configurare avansată pentru X</title>
<body>

<p>
Nivelul GLX are, de asemenea, o mulţime de opţiuni ce pot fi configurate.
Acestea controlează configuraţia ieşirii TV, afişări pe două monitoare,
detecţia frecvenţei monitorului, etc. Din nou, toate aceste opţiuni disponibile
sunt detaliate în documentaţie.
</p>

<p>
Dacă doriţi să utilizaţi oricare din aceste opţiuni, va trebui să le includeţi
în secţiunea Device relevantă din fişierul de configurare al X (de obiciei
<c>/etc/X11/xorg.conf</c>). Spre exemplu, presupunând că se doreşte
dezactivarea imaginii logo:
</p>

<pre caption="Configurare avansată pentru nvidia în configuraţia X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  <i>Option     "NoLogo" "true"</i>
  VideoRam   65536
EndSection
</pre>

</body>
</section>
</chapter>

</guide>
