<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/udev-guide.xml,v 1.4 2005/07/03 18:53:20 alin Exp $ -->
<guide link="/doc/ro/udev-guide.xml" lang="ro">
<title>Ghid Gentoo pentru udev</title>

<author title="Autor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Contribuitor">
  <mail link="greg_g@gentoo.org">Gregorio Guidi</mail>
</author>
<author title="Translator">
  <mail link="wladyx@gentoo.ro">Vlad Mocanu</mail>
</author>

<abstract>
Acest document explică ce reprezintă udev şi cum îl puteţi folosi conform
nevoilor dvs.
</abstract>

<license/>

<version>0.20</version>
<date>2005-07-02</date>

<chapter>
<title>Ce este udev?</title>
<section>
<title>Directorul /dev</title>
<body>

<p>
Când utilizatorii Linux vorbesc despre structura sistemului lor în apropierea
unor persoane care cred Linuxul a fi un virus sau o marcă de cafea, la
folosirea termenilor "slash dev slash foo" precis vor avea o privire ciudată.
Dar pentru utilizatorul norocos (această categorie vă include), folosirea
<path>/dev/hda1</path> este doar o cale mai rapidă pentru a explica faptul că
vorbim despre discul primary master IDE, prima partiţie. Sau nu este aşa?
</p>

<p>
Ştim cu toţii ce este un fişier dispozitiv. Unii ştiu chiar de ce fişierele
dispozitiv au numere speciale, în momentul în care ne uităm mai atent la ele
lansăm <c>ls -l</c> în <path>/dev</path>. Dar, ce luăm de bun este faptul că
atunci când vorbim despre discul primary master IDE ne referim la
<path>/dev/hda</path>. Poate că dvs. nu consideraţi astfel, dar aceasta este o
greşeală.
</p>

<p>
Gândiţi-vă la dispozitivele hotpluggable gen USB, IEEE1394, PCI hot-swappable,
... Care este primul dispozitiv? Şi pentru cât timp? Cum vor fi celelalte
dispozitive denumite în momentul în care primul dispare? Cum va afecta aceasta
transferurile ce  urmează? Nu ar fi distractiv ca o sarcină de imprimare să fie
transferată de la imprimanta dvs. cu laser super-nouă la matriciala aproape
decedată, din cauză că mama dvs. s-a decis să scoată din priză imprimanta
laser, care din întâmplare este prima imprimantă?
</p>

<p>
Introducere in <e>udev</e>. Scopurile proiectului udev sunt deopotrivă
interesante şi folositoare:
</p>

<ul>
  <li>Rulează în spaţiul rezervat utilizatorului</li>
  <li>Crează/şterge dinamic fişiere ale dispozitivelor</li>
  <li>Oferă denumiri consistente</li>
  <li>Oferă o interfaţă a programării aplicaţiei în spaţiul rezervat utilizatorului</li>
</ul>

<p>
Pentru a oferi aceste funcţii, udev este dezvoltat în trei proiecte separate:
<e>namedev</e>, <e>libsysfs</e> şi, bineînţeles, <e>udev</e>.
</p>


</body>
</section>
<section>
<title>namedev</title>
<body>

<p>
Namedev vă permite să definiţi numele dispozitivelor separat de programul udev.
Aceasta permite politici de denumiri flexibile şi scheme de denumiri dezvoltate
de entităţi separate. Acest subsistem de denumire oferă o interfaţă standard pe
care udev o poate folosi.
</p>

<p>
Momentan o singura schemă de denumiri este oferită de namedev; cea oferită de
LANANA, folosită de majoriatea sistemelor Linux şi din acest motiv foarte
potrivită pentru majoritatea utilizatorilor Linux.
</p>

<p>
Namedev foloseşte o procedură în 5 paşi pentru a găsi numele unui anume
dispozitiv. Dacă numele dispozitivului este găsit în unul din cei cinci paşi,
acel nume este folosit. Paşii sunt:
</p>

<ul>
  <li>eticheta sau numărul de serie</li>
  <li>numărul magistralei dispozitivului</li>
  <li>topologia magistralei</li>
  <li>denumirea dată static</li>
  <li>numele oferit de kernel</li>
</ul>

<p>
Pasul <e>eticheta sau numărul de serie</e> verifică dacă dispozitivul are un
identificator unic. De exemplu dispozitivele USB are un număr de serie unic;
dispozitivele SCSI au un UUID unic. Dacă namedev găseşte o potrivire între
acest număr unic şi un fişier de configurare dat, este folosit numele oferit în
fişierul de configurare.
</p>

<p>
Pasul <e>numărul magistralei dispozitivului</e> verifică numărul magistralei
dispozitivului. Pentru mediile fără dispozitive ce pot fi schimbate în timpul
rulării această procedură este suficientă pentru a identifica un dispozitiv
hardware. De exemplu numerele magistralelor PCI se schimbă rar în durata de
viaţă a unui sistem. Din nou, dacă namedev găseşte o potrivire între această
poziţie şi un fişier de configurare, este folosit numele oferit în acel fişier
de configurare.
</p>

<p>
În mod asemănător, <e>topologia magistralei</e> este o metodă mai statică de a
defini numele dispozitivelor, atât timp cât utilizatorul nu schimbă
dispozitivele. Atunci când poziţia dispozitivului se potriveşte unei setări
oferite de utilizator, numele care îl însoţeşte este folosit.
</p>

<p>
Al patrulea pas, <e>denumirea dată static</e>, este o simplă schimbare a unui
lanţ de caractere. Când denumirea oferită de kernel (denumirea implicită) se
potriveşte unuei denumiri date pentru înlocuire, sustitutul va fi folosit.
</p>

<p>
În ultimul pas (<e>numele oferit de kernel</e>) acesta ia numele dat implicit
de către kernel. În majoritatea cazurilor acesta este suficient, deoarece se
potriveşte denumirilor dispozitivelor folosite în momentul de faţă de către
sistemele Linux.
</p>


</body>
</section>
<section>
<title>libsysfs</title>
<body>

<p>
udev interacţionează cu kernel-ul prin pseudo-sistemul de fişiere sysfs.
Proiectul libsysfs oferă o interfaţă comună a programării aplicaţiilor pentru a
accesa informaţiile oferite de sistemul de fişiere sysfs, într-un mod generic.
Aceasta permite interogarea echipamentului fără a fi nevoiţi să facem
presupuneri asupra tipului acestuia.
</p>

</body>
</section>
<section>
<title>udev</title>
<body>

<p>
De fiecare dată când kernel-ul observă o actualizare în structura
dispozitivelor lansează programul <path>/sbin/hotplug</path>. Hotplug rulează
aplicaţiile care au o legătură în directorul
<path>/etc/hotplug.d/default</path>, unde veţi găsi şi o legătură simbolică la
aplicaţia udev. Hotplug direcţionează informaţia oferită de kernel către
aplicaţia udev, care efectuează acţiunile necesare structurii <path>/dev</path>
(crează sau şterge fişierele dispozitiv).
</p>

</body>
</section>
</chapter>

<chapter>
<title>Folosirea udev în Gentoo</title>
<section>
<title>Cerinţe</title>
<body>

<p>
udev este menit să fie folosit în combinaţie cu un kernel 2.6 (cum ar fi
<c>vanilla-sources</c> sau <c>gentoo-sources</c>). Dacă folosiţi un
astfel de kernel atunci trebuie doar să vă asiguraţi că aveţi o versiune
recentă a <c>sys-apps/baselayout</c>. Asta e tot ce vă trebuie.
</p>

<pre caption="Instalarea udev">
# <i>emerge udev</i>
</pre>

<p>
udev va instala <c>hotplug-base</c> ca una dintre dependenţele sale. Nu este
nevoie să instalaţi <c>hotplug</c> decât dacă doriţi ca modulele dvs. să se
încarce automat când introduceţi dispozitivele. <c>hotplug</c> de asemenea
manipulează pornirea automată a dispozitivelor de reţea şi descărcarea
aplicaţiilor firmware.
</p>

<pre caption="Instalarea de scripturi opţionale pentru hotplug">
# <i>emerge hotplug</i>
</pre>

<p>
Dacă doriţi încărcarea modulelor pentru dispozitive ce au fost conectate
înainte de a porni sistemul, folosiţi pachetul coldplug:
</p>

<pre caption="Instalarea pachetului coldplug">
# <i>emerge coldplug</i>
</pre>

<p>
Nu uitaţi să adăugaţi <c>coldplug</c> în nivelul de execuţie boot:
</p>

<pre caption="Adăugarea coldplug nivelulului de execuţie boot">
# <i>rc-update add coldplug boot</i>
</pre>

<p>
Din punct de vedere al kernel-ului, asiguraţi-vă ca aţi activat următoarele
opţiuni:
</p>

<pre caption="Opţiuni necesare în kernel">
General setup ---&gt;
  [*] Support for hot-pluggable devices

File systems ---&gt;
  Pseudo filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)
</pre>

<p>
Puteţi lăsa <c>/dev file system support (OBSOLETE)</c> activat dacă doriţi dar
trebuie să vă asiguraţi că opţiunea "Automatically mount at boot" este
dezactivată:
</p>

<pre caption="Nu se mount-ează devfsd la iniţializarea sistemului">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /dev file system support (OBSOLETE)
      [ ]   Automatically mount at boot
</pre>

<p>
Dacă folosiţi <c>genkernel</c>, nu uitaţi să îl rulaţi cu opţiunea
<c>--udev</c> pentru a activa toate directivele de configurare necesare
kernelului. Configuraţia implicită oferită de această invocare a
<c>genkernel</c> este suficientă.
</p>

</body>
</section>
<section>
<title>Configurare</title>
<body>

<p>
Dacă doriţi să folosiţi trucurile udev pe care Gentoo le-a adăugat pentru a vă
face viaţa mai confortabilă, nu este nevoie să mai citiţi altceva. Gentoo va
folosi udev dar va păstra un director <path>/dev</path> static pentru ca dvs.
să nu vă lipsească niciodată noduri ale dispozitivelor. Scripturile Gentoo de
iniţializare nu vor rula demonul devfs şi vor dezactiva devfs la iniţializarea
sistemului.
</p>

<p>
Dar dacă sunteţi încăpăţânat şi doriţi să rulaţi un sistem bazat numai pe udev,
fără trucuri aşa cum este intenţionat de către dezvoltatorii udev (incluzând
dificultăţile lipsei nodurilor dispozitivelor pentru că udev nu le suportă
încă), sunteţi invitat să citiţi în continuare :)
</p>

<p>
Vom dezactiva regulile care salvează fişierele cu nodurile dispozitivelor:
editaţi variabila <c>RC_DEVICE_TARBALL</c> din <path>/etc/conf.d/rc</path> şi
setaţi-o pe <c>no</c>:
</p>

<pre caption="/etc/conf.d/rc">
RC_DEVICE_TARBALL="no"
</pre>

<p>
Dacă aţi inclus suportul devfs în kernel, îl puteţi dezactiva din configurarea
aplicaţiti bootloader: adăugaţi <c>gentoo=nodevfs</c> ca parametru al
kernelului. Dacă doriţi să folosiţi devfs şi să dezactivaţi udev, adăugaţi
<c>gentoo=noudev</c> ca parametru de kernel.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Probleme cunoscute</title>
<section>
<title>Lipsa fişierelor cu noduri ale dispozitivelor la iniţializarea sistemului</title>
<body>

<p>
Dacă nu puteţi iniţializa sistemul cu succes din cauza unei erori ce afirmă că
<path>/dev/null</path> nu poate fi găsit, sau că lipseşte consola iniţială,
problema constă în faptul că vă lipsesc nişte fişiere ale dispozitivelor care
trebuie să fie disponibile <e>înainte</e> ca <path>/dev</path> să fie mount-at
şi controlat de udev. Această problemă este comună sistemelor ce au Gentoo
instalat de pe medii mai vechi.
</p>

<p>
Dacă rulaţi <c>sys-apps/baselayou-1.8.12</c> sau o versiune mai nouă, această
problemă este îmbunătăţită pentru că procesul de iniţializare al sistemului
reuşeşte totuşi să se încheie. Totuşi, pentru a scăpa de aceste avertizmente
iritante, ar trebui să creaţi fişierele dispozitiv aşa cum este descris mai
jos.
</p>

<p>
Pentru a vedea care noduri ale dispozitivelor sunt prezente înainte ca sistemul
de fişiere <path>/dev</path> să fie mount-at, rulaţi următoarele comenzi:
</p>

<pre caption="Afişarea nodurilor dispozitivelor disponibile la iniţializarea sistemului">
# <i>mkdir test</i>
# <i>mount --bind / test</i>
# <i>cd test/dev</i>
# <i>ls</i>
</pre>

<p>
Dispozitivele necesare pentru o iniţializare reuşită sunt
<path>/dev/null</path> şi <path>/dev/console</path>. Dacă ele nu au apărut în
testul anterior, va trebui să le creaţi manual. Lansaţi în execuţie următoarele
comenzi în directorul <path>test/dev/</path>:
</p>

<pre caption="Crearea fişierelor nodurilor dispozitivelor necesare">
# <i>mknod -m 660 console c 5 1</i>
# <i>mknod -m 660 null c 1 3</i>
</pre>

<p>
Când aţi terminat nu uitaţi să demount-aţi directorul <path>test/</path>:
</p>

<pre caption="Demount-area directorului test/">
# <i>cd ../..</i>
# <i>umount test</i>
# <i>rmdir test</i>
</pre>

</body>
</section>
<section>
<title>udev şi nvidia</title>
<body>

<p>
Dacă folosiţi driver-ele proprietare oferite de nVidia şi serverul X eşuează la
pornire pe un sistem doar cu udev, atunci asiguraţi-vă că aveţi:
</p>

<ul>
  <li>
    modulul <c>nvidia</c> listat în
    <path>/etc/modules.autoload.d/kernel-2.6</path>
  </li>
  <li>
    o versiune a pachetului <c>nvidia-kernel</c> egală sau mai mare decât
    <c>media-video/nvidia-kernel-1.0.5336-r2</c>
  </li>
  <li>
    o versiune a pachetului baselayout egală sau mai mare decât
    <c>sys-apps/baselayout-1.8.12</c>
  </li>
</ul>

</body>
</section>
<section>
<title>Dispariţia Denumirilor LVM2</title>
<body>

<p>
Atunci când folosiţi <c>udev</c> împreună cu LVM2, puteţi observa că grupurile
volumelor şi volumele logice create de dvs. au dispărut. În realitate, însă, nu
este aşa, dar au fost, din păcate, denumite <path>/dev/dm-#</path>, #
reprezentând 0,1, ...
</p>

<p>
Pentru a rezolva aceasta, editaţi <path>/etc/udev/rules.d/50-udev.rules</path>
şi îndepărtaţi comentariul de pe următoarea linie:
</p>

<pre caption="Decomentaţi această linie din /etc/udev/rules.d/50-udev.rules">
KERNEL="dm-[0-9]*",     PROGRAM="/sbin/devmap_name %M %m", NAME="%k", SYMLINK="%c"
</pre>

</body>
</section>
<section>
<title>Lipsa unei Denumiri Consistente între DevFS şi udev</title>
<body>

<p>
Deşi intenţia noastră este de a avea o schemă de denumiri consistentă între
ambele soluţii de administrare dinamică a dispozitivelor, uneori denumiri
diferite apar.
</p>

<p>
Una dintre aceste discrepanţe este în cazul controllerului RAID HP Smart Array
5i (mai precis modulul de kernel <c>cciss</c>). Cu udev, dispozitivele sunt
denumite <path>/dev/cciss/cXdYpZ</path> cu X, Y şi Z numere obişnuite. În cazul
devfs, dispozitivele sunt <path>/dev/hostX/targetY/partZ</path> sau legături
simbolice ale <path>/dev/cciss/cXdY</path>
</p>

<p>
În acest caz, nu uitaţi să actualizaţi fişierele <path>/etc/fstab</path> şi cel
de configurare al aplicaţiei bootloader, corespunzător.
</p>

<p>
Acelaşi lucru se petrece în cazul multor altor legături simbolice care se aflau
în <path>/dev</path>, de exemplu <path>/dev/mouse</path>, pe care <c>udev</c>
nu îl mai crează. Asiguraţi-vă că aţi verificat configuraţia serverului X şi că
regula Device pentru mouse-ul dvs. indică spre un fişier al unui dispozitiv ce
există.
</p>

</body>
</section>
<section>
<title>Alte probleme</title>
<body>

<p>
Dacă nodurile dispozitivului nu sunt create când un modul este încărcat din
<path>/etc/modules.autoload.d/kernel-2.6</path> dar acestea apar atunci când
încărcaţi modulul manual cu modprobe atunci ar trebui să încercaţi să
actualizaţi <c>sys-apps/baselayout-1.8.12</c> sau o versiune mai nouă.
</p>

<p>
Suportul pentru dispozitivele framebuffer (<path>/dev/fb/*</path>) este
integrat în kernel începând cu versiunea 2.6.6-rc2.
</p>

<p>
Pentru versiuni ale kernelului mai vechi de 2.6.4 trebuie să includeţi explicit
suportul pentru sistemul de fişiere <path>/dev/pts</path>.
</p>

<pre caption="Activarea sistemului de fişiere /dev/pts">
File systems ---&gt;
  Pseudo filesystems ---&gt;
    [*] /dev/pts file system for Unix98 PTYs
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Resurse şi Recunoaşteri</title>
<section>
<body>

<p>
Discursul depre udev de la Simpoziomul Linux (Ottawa, Ontario Canada - 2003)
ţinut de către Greg Kroah-Hartman (Corporaţia IBM) a asigurat o întelegere
solidă a aplicaţiei udev.
</p>

<p>
<uri
link="http://webpages.charter.net/decibelshelp/LinuxHelp_UDEVPrimer.html">Decibel's
UDEV Primer</uri> este un document foarte amănunţit despre udev şi Gentoo.
</p>

<p>
Documentul despre <uri link="http://www.reactivated.net/udevrules.php">Scrierea
regulilor udev</uri> al dezvoltatorului Gentoo Daniel Drake este unul excelent
pentru a învăţa cum să vă modelaţi instalarea udev.
</p>

</body>
</section>
</chapter>

</guide>
