<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/security/shb-perms.xml,v 1.1 2005/06/01 19:05:57 alin Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.0</version>
<date>2005-05-31</date>

<section>
<title>Accesibil tuturor pentru citire</title>
<body>

<p>
Utilizatorii normali nu ar trebui să aibă acces la fişierele de configurare sau
parole. Un atacator poate sustrage parolele din bazele de date sau site-uri web
şi să le utilizeze pentru compromiterea -- sau chiar mai rău, pentru ştergerea
-- datelor. De aceea este important ca permisiunile fişierelor să fie corecte.
Dacă sunteţi sigur că un fişier este utilizat doar de root, atribuiţi-i
acestuia permisiunile <c>0600</c> şi utilizatorul corect cu <c>chown</c>.
</p>

</body>
</section>
<section>
<title>Accesibil pentru scriere tuturor/grupului</title>
<body>

<pre caption="Găsirea fişierelor şi directoarelor accesibile pentru scriere tuturor">
# <i>/usr/bin/find / -type f \( -perm -2 -o -perm -20 \) \ 
   -exec ls -lg {} \; 2>/dev/null >writable.txt</i>
# <i>/usr/bin/find / -type d \( -perm -2 -o -perm -20 \) \ 
   -exec ls -ldg {} \; 2>/dev/null >>writable.txt</i>
</pre>

<p>
Aceasta va crea un fişier imens cu permisiunile tuturor fişierelor ce au
permisiuni de scriere setate, fie pentru grup, fie pentru oricine. Verificaţi
aceste permisiuni şi eliminaţi fişierele accesibile pentru scriere tuturor,
prin execuţia <c>/bin/chmod o-w</c> pentru fişierele respective.
</p>

</body>
</section>
<section>
<title>Fişiere SUID/SGID</title>
<body>

<p>
Fişierele cu bitul SUID sau SGID setat, execută cu privilegiile utilizatorului
sau grupului <e>proprietar</e> şi nu cu cele ale utilizatorului care execută
acel fişier. În mod normal, aceşti biţi sunt utilizaţi pe fişierele ce trebuie
să ruleze ca root pentru a îşi urma paşii de execuţie firesc. Aceste fişiere
pot conduce la compromiteri de root locale (dacă au probleme de securitate).
Aceasta este periculos şi fişierele cu biţii SUID sau SGID setaţi ar trebui să
fie evitate cu orice preţ. Dacă nu utilizaţi aceste fişiere, executaţi <c>chmod
0</c> pe ele sau dezinstalaţi pachetul care le conţine (verificaţi cărui pachet
aparţin prin utilizarea <c>equery</c>; dacă nu îl aveţi deja instalat, tastaţi
<c>emerge gentoolkit</c>). Altfel, dezactivaţi bitul SUID cu <c>chmod -s</c>.
</p>

<pre caption="Găsirea fişierelor setuid">
# <i>/usr/bin/find / -type f \( -perm -004000 -o -perm -002000 \) \ 
   -exec ls -lg {} \; 2>/dev/null >suidfiles.txt</i>
</pre>

<p>
Aceasta va crea un fişier conţinând lista tuturor fişierelor cu bitul SUID/SGID
activ.
</p>

<pre caption="Lista cu binarele setuid">
/bin/su
/bin/ping
/bin/mount
/bin/umount
/var/qmail/bin/qmail-queue
/usr/bin/chfn
/usr/bin/chsh
/usr/bin/crontab
/usr/bin/chage
/usr/bin/expiry
/usr/bin/sperl5.6.1
/usr/bin/newgrp
/usr/bin/passwd
/usr/bin/gpasswd
/usr/bin/procmail
/usr/bin/suidperl
/usr/lib/misc/pt_chown
/usr/sbin/unix_chkpwd
/usr/sbin/traceroute
/usr/sbin/pwdb_chkpwd
</pre>

<p>
Implicit, Gentoo Linux nu are multe fişiere SUID (deşi acest lucru depinde de
pachetele instalate), dar aţi putea să vă creaţi o listă ca cea de mai sus.
Majoritatea comenzilor nu ar trebui să fie rulate de utilizatorii normali, ci
doar de root. Dezactivaţi botul SUID pentru <c>ping</c>, <c>mount</c>,
<c>umount</c>, <c>chfn</c>, <c>chsh</c>, <c>newgrp</c>, <c>suidperl</c>,
<c>pt_chown</c> şi <c>traceroute</c> prin execuţia comenzii <c>chmod -s</c> pe
fiecare fişier în parte. Nu dezactivaţi bitul pentru <c>su</c>,
<c>qmail-queue</c> sau <c>unix_chkpwd</c>. Dezactivarea setuid pentru aceste
fişiere vă va opri să mai puteţi rula <c>su</c> şi recepţionarea mesajelor
electronice. Prin dezactivarea bitului (în cazurile în care este sigur) opriţi
posibilitatea ca un utilizator de sitem normal (sau un atacator) să obţină
acces de root prin oricare din aceste fişiere.
</p>

<p>
Singurele fişiere SUID pe care le am pe sistemul propriu sunt <c>su</c>,
<c>passwd</c>, <c>gpasswd</c>, <c>qmail-queue</c>, <c>unix_chkpwd</c> şi
<c>pwdb_chkpwd</c>. Dar, dacă rulaţi aplicaţia X, este posibil să aveţi mai
multe, deoarece X are nevoie de acces superior ce îl poate obţine prin
intermediul SUID.
</p>
</body>
</section>
<section>
<title>Binare şi hardlink-uri SUID/SGID</title>
<body>

<p>
Un fişier este considerat şters când nu mai există nici un link ce indică spre
acesta. Acest concept poate fi ciudat, dar luaţi în considerare un fişier ca
<path>/usr/bin/perl</path> care este, de fapt, un link către inodul unde este
stocată data. Orice număr de link-uri pot indica către acest fişier şi până
când toate acestea dispar, fişierul încă există.
</p>

<p>
Dacă utilizatorii dvs. au acces pe o partiţie ce nu este mount-ată cu
<c>nosuid</c> sau <c>noexec</c> (spre ex., dacă <path>/tmp</path>,
<path>/home</path> sau <path>/var/tmp</path> nu sunt partiţii separate) ar
trebui să vă asiguraţi că utilizatorii nu crează hardlink-uri indicând spre
binare SUID sau SGID, astfel încât, după ce Portage se actualizează, ei încă
mai au acces la vechile versiuni.
</p>

<warn>
Dacă aţi primit un avertisment de la portage despre unele hardlink-uri rămase
şi utilizatorii dvs. pot scrie pe o partiţie ce permite execuţia fişierelor
SUID/SGID, ar trebui să consultaţi această secţiune cu atenţie. Unul din
utilizatorii dvs. poate încerca să înşele procesul dvs. de actualizare prin
păstrarea unei versiuni vechi a programului. Dacă utilizatorii dvs. nu pot crea
fişierele lor proprii SUID, pot doar să execute programe utilizând modulul de
încărcare dinamică (partiţiile mount-ate <c>noexec</c>), atunci nu aveţi de ce
să vă îngrijoraţi.
</warn>

<note>
Utilizatorii nu au nevoie de acces de citire pentru un fişier pentru a crea un
link la acesta, ci doar de permisiuni de citire pentru directorul ce conţine
acel fişiere.
</note>

<p>
Pentru a verifica numărul de link-uri al unul fişier, puteţi utiliza comanda
<c>stat</c>.
</p>

<pre caption="Comanda stat">
$ stat /bin/su    
  File: `/bin/su'
  Size: 29350           Blocks: 64         IO Block: 131072 regular file
Device: 900h/2304d      Inode: 2057419     Links: 1
Access: (4711/-rws--x--x)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2005-02-07 01:59:35.000000000 +0000
Modify: 2004-11-04 01:46:17.000000000 +0000
Change: 2004-11-04 01:46:17.000000000 +0000
</pre>

<p>
Pentru a găsi fişierele SUID şi SGID cu mai multe link-uri, puteţi utiliza
<c>find</c>.
</p>

<pre caption="Găsirea binarelor suid/sgid cu mai multe link-uri">
$ find / -type f \( -perm -004000 -o -perm -002000 \) -links +1 -ls
</pre>

</body>
</section>
</sections>
