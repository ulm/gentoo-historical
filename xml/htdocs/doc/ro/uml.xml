<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/uml.xml,v 1.4 2005/11/17 20:00:32 alin Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/ro/uml.xml" lang="ro">
<title>Ghidul Dezvoltatorului Gentoo Linux pentru Testarea Sistemului cu User-Mode Linux</title>

<author title="Editor">
  <mail link="g2boojum@gentoo.org">Grant Goodyear</mail>
</author>
<author title="Editor"><!-- zhen@gentoo.org -->
  John Davis
</author>
<author title="Editor">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Translator">
  <mail link="adiroiban@gmail.com">Adi Roiban</mail>
</author>

<abstract>
Acest ghid descrie programatorilor Gentoo Linux cum să folosească şi să
seteze user-mode linux pentru testarea modificărilor care pot duce la
deteriorarea sistemului.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.12</version>
<date>2005-11-17</date>

<chapter>
<title>Obţinerea User-Mode Linux</title>
<section>
<body>

<p>
După cum scrie pe pagina user-mode linux
(<uri>http://user-mode-linux.sourceforge.net</uri>) , user-mode linux permite
unui utilizator să "ruleze Linux în interiorul lui". În special, user-mode
linux oferă o maşină virtuală în care un utilizator poate "[r]ula
programe instabile, experimenta noi versiuni de kernel Linux sau distribuţii,
şi poate afla funcţionarea internă a sistemului Linux, toate acestea
fără a risca avarierea sitemului principal Linux." Modificări experimentale ale
pachetelor principale Gentoo cum ar fi <e>sys-apps/baselayout</e> sau
<e>sys-libs/glibc</e> au un potenţial de a distruge sistemul şi al aduce
într-o stare în care nu mai poate fi pornit; cu ajutorul user-mode linux
putem testa modificările fără a ne îngrijora de integritatea sistemului
principal.
</p>

<p>
Majoritatea versiunilor de kernel 2.6 au suport pentru UML. Deşi puteţi
utiliza sursele dvs. curente de kernel, ar fi mai înţelept să vă
păstraţi ramurile de kernel UML într-o locaţie separată. La urma urmei,
veţi compila un kernel cu o configuraţie diferită şi veţi vrea să
aveţi sisteme eterogene în sistemul dvs. principal de Linux (mai multe
kerne-uri UML diferite).
</p>

<p>
Deci, descărcaţi o serie de surse de kernel (ca cea vanilla de la <uri
link="http://www.kernel.org">kernel.org</uri>) şi extrageţi-o într-o
locaţie utilizată pentru dezvoltare.
</p>

<p>
Urmează configurarea acestui kernel UML aşa cum aţi face-o pentru orice
alt sistem, dar adăugaţi <e>ARCH=um</e> pentru ca aplicaţia de compilare a
kernel-ului să interpreteze faptul că acest kernel trebuie să ruleze ca
un proces de sine stătător în sistemul părinte.
</p>

<pre caption="Compilarea kernel-ului UML">
# <i>cd /srv/aegis/src/uml-linux</i>
# <i>make menuconfig <comment>ARCH=um</comment></i>
# <i>make linux <comment>ARCH=um</comment></i>
# <i>cp linux /usr/local/bin/linux</i>
</pre>

<warn>
Partea <e>ARCH=um</e> este <e>extrem</e> de importantă!
</warn>

<p>
Asiguraţi-vă că <path>/usr/local/bin</path> există. Modificaţi
<path>/etc/env.d/00basic</path> în aşa fel încăt variabila PATH să
conţină <path>/usr/local/bin</path> şi rulaţi din nou <c>env-update</c>:
</p>

<pre caption="Modificarea 00basic">
# <i>nano -w /etc/env.d/00basic</i>
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>

<p>
Pentru ca kernelul user-mode linux să încarce corespunzător un sistem
Gentoo kernelul trebuie să fie configurat să <e>nu</e> monteze implicit
automat <path>/dev</path> (devfs). De asemenea, foarte probabil veţi dori ca
suportul pentru <e>tmpfs</e> ("Virtual Memory Filesystem") să fie compilat
în kernel, întrucât script-ul de pornire al Gentoo linux stochează
informaţiile lui intr-o mică partiţie tmpfs. (Imaginea de kernel binară
disponibilă pe pagina oficiala user-mode linux mount-ează automat
<path>/dev</path>, şi nu conţine tmpfs compilat; nu vă deranjaţi
utilizându-l).
</p>

<p>
Recomand imperios citirea documentaţiei user-mode linux, dar idea de bază
este că, rulând programul <path>/usr/local/bin/linux</path>, el porneşte
kernel-ul user-mode linux şi încearcă să iniţializeze sistemul stocat
în fişierul <path>root_fs</path>  care ar trebui să se afle în directorul
de lucru curent.
</p>

<p>
Nu strică să intalaţi, de asemenea, utilitarele user-mode linux.
</p>

<pre caption="Instalarea utilitarelor UML">
# <i>emerge sys-apps/usermode-utilities</i>
</pre>

<p>
Aceste utilitare uşurează protocolul de reţea (printre alte) dintre
sistemul virtual user-mode linux şi sistemul gazdă Linux.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Creearea root_fs</title>
<section>
<title>Creearea Gentoo chroot</title>
<body>

<p>
Fişierul <path>root_fs</path> necesar pentru user-mode linux este un singur
fişier care conţine un întreg sistem de fişiere Gentoo Linux. Pentru a
genera acest fişier aveţi nevoie ca dispozitivul Loopback să fie
disponibil în kernelul sistemul gazdă (cel non-user-mode).
</p>

<p>
Crearea fişierului <path>root_fs</path> va fi ultimul pas pe care îl vom
efectua. Mai întâi vom genera un sistem de fişiere Gentoo într-un mediu
chroot normal. Avem nevoie de arhivele tar stage, care pot fi descărcate
separat sau extrase pe de mediu Installation CD, sau extrase dintr-un fişier
.iso al mediului Installation CD.
</p>

<pre caption="Mount-area unui fişier .iso Installation CD">
# <i>mkdir /mnt/loop</i>
# <i>mount -o loop /calea/catre/install-&lt;TAB&gt;.iso /mnt/loop</i>
</pre>

<p>
Setarea mediului chroot este aproape identică cu cea din instalarea unui
Gentoo Linux obişnuit.
</p>

<pre caption="Crearea unui mediu chroot Gentoo pentru a putea fi mount-at">
# <i>mkdir /mnt/gentoo</i>
# <i>cd /mnt/gentoo</i>
# <i>tar xvjpf /cale/catre/stage&lt;TAB&gt;.tar.bz2</i>
</pre>

<p>
Demount-aţi fişierul .iso. De acum nu mai aveţi nevoie de el.
</p>

<p>
Porniţi procesul de bootstrap şi instalare a sistemului în mod normal.
Urmaţi doar instrucţiunile de instalare :)
</p>

<p>
Adăugaţi orice alt pachet de care aveţi nevoie. Puteţi chiar să-i daţi
un nume sistemului dumneavoastră vitual Gentoo. În  <path>/etc/fstab</path>
cel mai probabil va trebui ca <path>/dev/ROOT</path> sa fie
<path>/dev/ubda</path>, cu un tip fs ext2, ext3, sau reiserfs. Modificaţi ca
<path>/dev/SWAP</path> să fie <path>/dev/ubdb</path>, şi comentaţi
<path>/dev/BOOT</path>.
</p>

<p>
În acest moment nu uitaţi să definiţi parola de root.
</p>

<pre caption="Definirea parole de root">
# <i>passwd</i>
</pre>

<p>
Acum, trebuie să efectuăm unele modificări script-urilor de boot.
Ştergeţi consolefont şi keymaps din nivelul de execuţie boot:
</p>

<pre caption="Ştergerea script-urilor de iniţializare care nu sunt necesare">
# <i>rc-update del consolefont boot</i>
# <i>rc-update del keymaps boot</i>
</pre>

<p>
Ieşiţi din mediul chroot, demount-aţi tot ce aţi mount-at anterior,
arhivaţi noua distribuţie Gentoo, iar apoi ştergeţi fişierele.
</p>

<pre caption="Finalizarea instalării">
# <i>cd /mnt/gentoo</i>
# <i>tar cvjpf ~/gentoo.tbz2 *</i>
# <i>cd</i>
# <i>rm -rf /mnt/gentoo</i>
</pre>

</body>
</section>
<section>
<title>Crearea root_fs</title>
<body>

<p>
Mediul chroot Gentoo pe care îl avem noi are aproape 300 MB, de aceea
<path>root_fs</path> trebuie să aibă cel puţin acea dimensiune. Vom alege
0.5 GOcteţi ca fiind o dimensiune rezonabilă.
</p>

<pre caption="Crearea fişierelor UML">
# <i>dd if=/dev/zero of=root_fs seek=500 count=1 bs=1M</i>
# <i>mke2fs -F root_fs</i>
# <i>mount -o loop root_fs /mnt/loop</i>
# <i>tar xvjpf gentoo.tbz2 -C /mnt/loop</i>
# <i>umount /mnt/loop</i>
</pre>

<p>
Ar fi de asemenea frumos să aveţi o partiţie swap de 0.5 GOcteţi.
</p>

<pre caption="Crearea partiţie swap">
# <i>dd if=/dev/zero of=swap_fs seek=500 count=1 bs=1M</i>
# <i>mkswap -f swap_fs</i>
</pre>

<p>
Acum vedeţi dacă merge!
</p>

<pre caption="Pornirea kernelului UML">
# <i>linux ubd0=root_fs ubd1=swap_fs</i>
</pre>

<note>
User-mode linux foloseşte terminale xterm pentru consolele virtuale care sunt
rulate în momentul pornirii sistemului, deci trebuie să vă asiguraţi că
terminalul din care rulaţi user-mode linux are variabila $DISPLAY definită
(împreună cu permisiunile xhost/xauth adecvate).
</note>

<p>
Cu puţin noroc ar trebui să vă puteţi inregistra în noul sistem Gentoo
user-mode linux. Singurul lucru care impiedică acestă vesiune de user-mode
linux să fie funcţională este legătură de reţea dintre maşina
virtuală şi maşina gazda.  
</p>

</body>
</section>
</chapter>

<chapter>
<title>Reţeaua</title>
<section>
<title>Utilizarea unei Reţele deja Existentă</title>
<body>

<p>
Asiguraţi-vă că imaginea de kernel a sistemului gazdă are următoarele
setări compilate ca module:
</p>

<pre caption="Configurarea imaginii de kernel pentru sistemul gazdă">
Networking --&gt;
  IP: Netfilter Configuration --&gt;
    IP tables support --&gt;
      Full NAT --&gt;
        &lt;M&gt; MASQUERADE target support 
    
    Network Device Support --&gt; 
      &lt;M&gt; TUN/TAP Support
</pre>

<p>
Rulaţi următoarele comenzi pe maşina <e>gazdă</e>:
</p>

<pre caption="Setarea reţelei">
# <i>modprobe tun</i>
<comment>(Dacă primiţi o eroare de tip FATAL, aici, încercaţi să ştergeţi /dev/net/tun şi apoi reîncercaţi)</comment>
# <i>modprobe iptable_nat</i>
# <i>iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</i>
# <i>echo 1 > /proc/sys/net/ipv4/ip_forward</i>
</pre>

<p>
Linia iptables defineşte mascarada IP dintre reţeaua privată în care se
va afla sistemul user-mode şi internetul (accesat via <c>eth0</c> în cazul
nostru). Linia cu echo activează înaintarea pachetelor între reţeau
privată şi interfaţa la care este conectată poarta de acces (eth0 pentru
noi).
</p>

<p>
Acum pornim sistemul user-mode linux şi vedem daca reţeaua este funcţională.
</p>

<pre caption="Porniţi UML">
# <i>linux ubd0=root_fs ubd1=swap_fs eth0=tuntap,,,192.168.0.254</i>
<comment>(vă autentificaţi în sistemul user-mode)</comment>
# <i>ifconfig eth0 192.168.0.1 up</i>
# <i>ping -c 2 192.168.0.254</i>
PING 192.168.0.254 (192.168.0.254): 56 octets data
64 octets from 192.168.0.254: icmp_seq=0 ttl=255 time=0.8 ms
64 octets from 192.168.0.254: icmp_seq=1 ttl=255 time=0.6 ms

--- 192.168.0.254 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.6/0.7/0.8 ms
# <i>route add default gw 192.168.0.254</i>
# <i>netstat -rn</i>
Kernel IP routing table
Destination  Gateway        Genmask        Flags MSS Window irtt Iface
192.168.0.0  0.0.0.0        255.255.255.0  U      40 0         0 eth0
0.0.0.0      192.168.0.254  0.0.0.0        UG     40 0         0 eth0
# <i>scp user@192.168.0.254:/etc/resolv.conf /etc/resolv.conf</i> <comment>(if needed)</comment>
# <i>ping -c 2 www.gentoo.org</i>
PING www.gentoo.org (207.170.82.202): 56 octets data
64 octets from 207.170.82.202: icmp_seq=0 ttl=240 time=119.6 ms
64 octets from 207.170.82.202: icmp_seq=1 ttl=240 time=92.0 ms

--- www.gentoo.org ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 92.0/105.8/119.6 ms
</pre>

<p>
Pe sistemul user-mode am alocat interfeţei user-mode eth0 o adresă IP
privată 192.168.0.1 şi am pornit interfaţa. Gazda are IP adresa privată
IP 192.168.0.254, şi trimitem un mesaj echo (ping) să ne asiguram că
interfaţa este funcţională. Liniile route adaugă adresa gateway
implicită, adică sistemul gazdă, folosim scp pentru a obţine un
<path>/etc/resolv.conf</path> funţional (dacă este necesar), şi trimitem
un mesaj echo (ping) către www.gentoo.org  pentru a ne asigura că
rezolvarea numelor funcţionează (şi în general accesul la internet) în
sistemul nostru user-mode. Acum sistemul user-mode poate folosi <c>emerge</c>
după bunul plac!
</p>

</body>
</section>
<section>
<title>Utilizarea unei Reţele Virtuale</title>
<body>

<p>
Înainte de a deveni prea încântat, aceasta nu este o reţea virtuală
privată. Este o reţea care este accesibilă doar din instanţele UML.
Pachetul <c>usermode-utilities</c> oferă un utilitar denumit
<c>uml_switch</c> ce defineşte punctele terminale ale comutării.
</p>

<pre caption="Activarea punctelor terminale ale unei comutări UML">
<comment>(Dacă informaţia comutării trebuie să stea în prim plan:)</comment>
$ <i>uml_switch -unix ~/tmp/switch.sock</i>

<comment>(Dacă trebuie să fie în fundal:)</comment>
$ <i>uml_switch -unix ~/tmp/switch.sock &amp;&gt; ~/tmp/switch.log &amp;</i>
</pre>

<p>
Pentru a porni instanţele UML pe acest comutator, rulaţi următoarea
comandă. Interfaţa dvs. (virtuală) de reţea va fi conectată la procesul
<c>uml_switch</c> şi va utiliza adresa MAC specificată.
</p>

<pre caption="Rularea primei instanţe UML">
$ <i>linux ubd0=first_rootfs ubd1=first_swapfs eth0=daemon,10:00:01:02:00:00,,~/tmp/switch.sock</i>
</pre>

<p>
Încă vă mai puteţi conecta sistemul la reţeaua existentă, sau să
aveţi un al doilea proces ataşat atât la interfaţa virtuală cât şi la
cea existentă:
</p>

<pre caption="Rularea celei de-a doua instanţe UML">
$ <i>linux ubd0=second_rootfs ubd1=second_swapfs eth0=daemon,10:00:01:02:00:01,,~/tmp/switch.sock \
  eth1=tuntap,,,192.168.1.43</i>
</pre>

<p>
Mai multe informaţii despre setarea tuntap pot fi regăsite în secţiunea
anterioară.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Testarea fişierului .iso</title>
<section>
<body>

<p>
Poate, ceea ce este cel mai folositor pentru testarea sistemului Gentoo Linux
este pornirea fişierului .iso cu user-mode linux şi să finalizaţi
instalarea sistemului Gentoo din interiorul sistemului virtual user-mode linux.
</p>

<p>
Pornirea fişierului .iso, sai mai precis a imaginii initrd de pe fişierul
.iso, este destul de facilă:
</p>

<pre caption="Pornirea cu fişierul ISO">
# <i>mount -o loop /path/to/install-&lt;TAB&gt;.iso /mnt/loop</i>
# <i>cp /mnt/loop/isolinux/gentoo.igz .</i>
# <i>linux load_ramdisk=1 prompt_ramdisk=0 ramdisk_size=22000 \</i>
&gt; <i>initrd=rescue.gz root=/dev/ram0 ubd0=root_fs ubd1=swap_fs \</i>
&gt; <i>ubd2=/dev/cdroms/cdrom0 eth0=tuntap,,,192.168.0.254</i>
</pre>

<p>
Acum puteţi urma paşii din documentul de instalare a sistemului Gentoo,
exact cum sunt specificaţi, şi va mai trebui să ştiti că sistemul de
fişiere "root" va fi <path>/dev/ubd/0</path>, "partiţia" swap va fi
<path>/dev/ubd/1</path>, iar dispozitivul cdrom va fi<path>/dev/ubd/2</path>.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Resurse</title>
<section>
<body>

<ul>
  <li>
    <uri link="http://edeca.net/articles/bridging/index.html">Bridging cu
    UML</uri>
  </li>
  <li>
    <uri link="http://user-mode-linux.sourceforge.net/">Pagina Oficială
    UML</uri>
  </li>
  <li>
    <uri link="http://www.theshore.net/~caker/uml/">Note despre UML de
    Caker</uri>
  </li>
  <li>
    <uri
    link="http://sourceforge.net/mailarchive/forum.php?forum_id=3647">Arhivele
    Listelor de Discuţii UML</uri>
  </li>
</ul>

</body>
</section>
</chapter>

</guide>
