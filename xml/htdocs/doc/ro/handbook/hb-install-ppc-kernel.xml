<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/handbook/hb-install-ppc-kernel.xml,v 1.12 2005/06/04 11:16:16 alin Exp $ -->

<sections>

<version>2.6</version>
<date>2005-06-02</date>

<section>
<title>Zona de Fus Orar</title>
<body>

<p>
Trebuie, mai întâi să setaţi fusul orar, astfel încât sistemul
dumneavoastră să ştie unde se află. Uitaţi-vă după fusul orar
potrivit în <path>/usr/share/zoneinfo</path>, apoi faceţi un symlink către
<path>/etc/localtime</path>, folosind <c>ln</c>:
</p>

<pre caption="Setarea informaţiilor referitoare la fusul orar">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Presupunănd că doriţi să utilizaţi GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalarea Surselor</title>
<subsection>
<title>Alegerea unui Kernel</title>
<body>

<p>
Nucleul în jurul carora sunt construite toate distributiile, este kernelul
Linux. Este nivelul dintre programe şi componentele hardware ale sistemului
dumneavoastră. Gentoo pune la dispoziţia utilizatorilor, mai multe surse de
kernel. O listă completă alături de descrierea lor, este accesibilă la
<uri link="/doc/ro/gentoo-kernel.xml">Ghidul Gentoo pentru Kernel</uri>. 
</p>

<p>
Pentru arhitectura PPC puteţi alege între <c>vanilla-sources</c> şi
<c>gentoo-sources</c> (amândouă din generaţia 2.6). Cel din urmă este
disponibil în cazul în care efectuaţi o instalare fără reţea. În afară de
acestea există un set de patch-uri pentru kernel pentru Pegasos:
<c>pegasos-sources</c>. Aşa că să continuăm cu instalarea surselor, utilizând
<c>emerge</c>:
</p>

<pre caption="Instalarea unor surse de kernel">
# <i>emerge gentoo-sources</i>
</pre>

<note>
Sursele PowerPC sunt bazate pe versiunea 2.6.10-kernel cu patch-uri de
securitate din versiunea 2.6.11 portate regresiv. La momenul publicării,
versiunea de kernel 2.6.11 producea unele probleme pe unele maşini PowerPC.
</note>

<p>
Când vă veţi uita în <path>/usr/src</path> ar trebui să vedeţi un
symlink numit <path>linux</path>. Vom presupune că versiunea de kernel
instalată este <c>gentoo-sources-2.6.10-r8</c>:
</p>

<pre caption="Vizualizare symlink sursă kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           22  Mar 18 16:23 /usr/src/linux -&gt; linux-2.6.10-gentoo-r8
</pre>

<p>
Dacă acesta nu este cazul dvs. (notaţi faptul că <c>linux-2.6.10-gentoo-r8</c>
este doar un exemplu) modificaţi symlink-ul pentru a indica către sursa de
kernel corectă:
</p>

<pre caption="Modificarea symlink-ului sursei kernel-ului">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.10-gentoo-r8 linux</i>
</pre>

<p>
Acum este timpul să configurăm şi să compilăm sursa kernel. Puteţi utiliza
<c>genkernel</c> pentru asta, care vă va construi un kernel generic aşa cum
este folosit pe mediul Installation CD. Vom explica configurarea manuală,
totuşi, fiind cea mai bună cale de a vă optimiza sistemul.
</p>

<p>
Dacă doriţi să configuraţi kernel-ul manual, continuaţi cu secţiunea <uri
link="#manual">Implicit: Configurarea Manuală</uri>. Dacă doriţi să utilizaţi
<c>genkernel</c>, trebuie să consultaţi secţiunea <uri
link="#genkernel">Alternativ: Utilizarea genkernel</uri>, în loc.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Implicit: Configurarea Manuală</title>
<subsection>
<title>Introducere</title>
<body>

<p>
Configurarea manuală a kernel-ului este des percepută ca cea mai grea
incercare, pe care fiecare user Linux trebuie să o treacă. Nimic mai fals
-- după ce veţi configura câteva kernel-uri, nici nu vă veţi mai aminti
că a fost greu ;)
</p>

<p>
Totuşi, un lucru <e>este</e> adevărat: trebuie să vă cunoaşteţi
sistemul înainte de a începe configurarea manuală a kernel-ului. Cele mai
multe informaţii le puteţi obţine prin instalarea pciutils (<c>emerge
pciutils</c>) ce conţine <c>lspci</c>. Acum veţi putea să utilizaţi
comanda <c>lspci</c> în interiorul mediului chroot. Puteţi ignora cu
încredere orice avertismente <e>pcilib</e> (cum ar fi: pcilib: cannot open
/sys/bus/pci/devices) afişate de <c>lspci</c>. Alternativ, puteţi rula
<c>lspci</c> dintr-un mediu <e>non-chroot</e>. Rezultatele sunt aceleaşi. De
asemenea, puteţi rula <c>lsmod</c> pentru a vizualiza modulele kernel-ului
folosit de mediul Installation CD (ar putea să vă formeze o idee despre ce
anume să activaţi).
</p>

<p>
Acum mergeţi in directorul ce conţine sursa kernel-ului şi executaţi
<c>make menuconfig</c>. Aceasta va porni un meniu de configurare bazat pe
ncurses.
</p>

<pre caption="Invocarea menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Veţi fi întâmpinat cu mai multe secţiuni de configurare. Mai întăi vom
enumera cateva opţiuni pe care trebuie să le activaţi (altfel Gentoo nu va
funcţiona deloc sau nu va funcţiona corect fară anumite trucuri
suplimentare).
</p>

</body>
</subsection>
<subsection>
<title>Activarea Opţiunilor Necesare</title>
<body>

<p>
Mai întâi de toate, activaţi utilizarea codului/driverelor în dezvoltare
sau experimentale. Aveţi nevoie de acesta, altfel anumite drivere foarte
importante nu vor fi afişate:
</p>

<pre caption="Selectarea codului/driverelor experimentale">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Acum mergeţi la <c>File Systems</c> şi selectaţi suportul pentru sistemul
de fişiere pe care îl folosiţi. <e>Nu</e> le compilaţi ca module, altfel
Gentoo nu va putea să mount-eze partiţiile. De asemenea, selectaţi
<c>Virtual memory</c> şi <c>proc file system</c>. <e>Nu</e> selectaţi
<c>/dev file system</c>:
</p>

<pre caption="Selectarea sistemelor de fişiere necesare">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [ ] /dev file system support (OBSOLETE)
    [*] Virtual memory file system support (former shm fs)

<comment>(Selectaţi una sau mai multe dintre opţiunile următoare, după necesităţile sistemului)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Dacă folosiţi PPPoE pentru conectarea la Internet sau daca folosiţi un
modem tip dial-up, va trebui să activaţi următoarele opţiuni in kernel:
</p>

<pre caption="Selectarea driverelor PPPoE necesare">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Cele două opţiuni de compresie nu vor afecta, dar nu sunt întru totul
necesare, la fel ca şi opţiunea <c>PPP over Ethernet</c>, care ar putea fi
folosită doar de <c>rp-pppoe</c>, când este configurat să folosească
modul PPPoE.
</p>

<p>
Dacă o doriţi, nu uitaţi să includeţi suport in kernel pentru placa de
reţea.
</p>

<p>
Utilizatorii de maşini OldWorld vor dori suport pentru HFS pentru a copia
kernel-uri compilate pe partiţia MacOS. Aceasta este aplicabilă şi în
cazul maşinilor NewWorld, deoarece acestea necesită partiţia specială
Apple_Bootstrap:
</p>

<pre caption="Activarea suportului HFS">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
Momentan, preemptivitatea în kernel este încă într-o formă instabilă pe PPC
şi poate cauza erori de compilare şi erori segmentation fault aleatoare. Este
<e>foarte</e> sugerat să nu utilizaţi această opţiune.
</p>

<pre caption="Asiguraţi-vă că opţiunea Preemptible Kernel este dezactivată">
Platform options ---&gt;
  [ ] Preemptible Kernel
</pre>

<p>
Când terminaţi de configurat kernel-ul, continuaţi cu <uri
link="#compiling">Compilare şi Instalare</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilare şi Instalare</title>
<body>

<p>
Acum, că kernelul este configurat, este timpul să îl compilaţi şi
să-l instalaţi. Ieşiţi din meniul de configurare şi rulaţi <c>make dep
&amp;&amp; make bzImage modules modules_install</c>:
</p>

<pre caption="Compilarea kernel-ului">
# <i>make all &amp;&amp; make modules_install</i>
</pre>

<p>
Când compilarea s-a terminat, copiaţi imaginea de kernel în directorul
<path>/boot</path> (asiguraţi-vă că este mount-ată corect pe Pegasos).
</p>

<pre caption="Instalarea kernel-ului">
<comment>înlocuiţi 2.6.10 cu versiunea dvs. de kernel</comment>
(Apple/IBM)  # <i>cp vmlinux /boot/kernel-2.6.10</i>
(Pegasos)    # <i>cp arch/ppc/boot/images/zImage.chrp /boot/kernel-2.6.10</i>
</pre>

<p>
Este, de asemenea, recomandat să vă copiaţi fişierul de configurare a
kernel-ului în <path>/boot</path>, pentru orice eventualitate :)
</p>

<pre caption="Back-up pentru fişierul de configurare al kernel-ului">
# <i>cp .config /boot/config-2.6.10-gentoo-r8</i>
</pre>

<p>
Acum, continuaţi cu <uri link="#kernel_modules">Instalarea de Module Separate
de Kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Instalarea de Module Separate de Kernel</title>
<subsection>
<title>Configurarea Modulelor</title>
<body>

<p>
Va trebui să enumeraţi toate modulele, care vreţi să fie încărcate
automat, în <path>/etc/modules.autoload.d/kernel-2.4</path> (sau
<path>kernel-2.6</path>). Puteţi, de asemenea, să adaugaţi extra opţiuni
modulelelor dacă doriţi.
</p>

<p>
Pentru a vizualiza toate modulele disponibile, folosiţi următoarea comandă
<c>find</c>. Nu uitaţi să înlocuiţi "&lt;versiune kernel&gt;" cu versiunea
efectivă de kernel pe care tocmai aţi compilat-o:
</p>

<pre caption="Vizualizarea tuturor modulelor disponibile">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
De exemplu, pentru a încarca automat modulul <c>3c59x</c>, editaţi fişierul
<path>kernel-2.4</path> sau <path>kernel-2.6</path> şi scrieţi numele
modulului în el.
</p>

<pre caption="Editarea /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Continuaţi instalarea cu <uri link="?part=1&amp;chap=8">Configurarea
Sistemului</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativ: Utilizarea genkernel</title>
<body>

<p>
Dacă citiţi această secţiune, înseamnă că aţi ales script-ul nostru
<c>genkernel</c> pentru a vă configura kernel-ul.
</p>

<p>
Acum că sursele kernel-ului sunt instalate, este timpul să compilăm
kernel-ul folosind scriptul <c>genkernel</c>, pentru o compilarea automată a
kernel-ului. <c>genkernel</c> funcţionează prin a configura un kernel
aproape identic cu  cel al mediului Installation CD. Asta înseamnă că atunci
când folosiţi <c>genkernel</c> pentru a vă construi un kernel, sistemul va
detecta, la modul general, toate componentele hardware, in timpul procesului de
boot, aşa cum o face mediul Installation CD. Deoarece genkernel nu necesită
vreo configurare manuală a kernel-ului, este ideal pentru cei carora nu le este
la îndemână să-şi compileze propriile kernel-uri.
</p>

<p>
Acum să vedem cum se foloseşte genkernel. Mai întăi, instalaţi pachetul
genkernel:
</p>

<pre caption="Instalarea genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Apoi, copiaţi configuraţia kernel-ului utilizată de mediul Installation CD în
locaţia unde genkernel caută configuraţia implicită de kernel:
</p>

<pre caption="Copierea configuraţiei de kernel de pe Installation CD">
# <i>zcat /proc/config.gz > /usr/share/genkernel/ppc/kernel-config-2.6</i>
</pre>

<p>
Acum, compilaţi sursa kernel-ului rulând <c>genkernel --udev all</c>. Fiţi atenţi,
totuşi, că <c>genkernel</c> compilează un  kernel care suportă aproape
toate componentele hardware, compilarea durând ceva timp pentru a se termina.
</p>

<p>
Trebuie să ştiţi că daca partiţia de boot nu foloseşte ext2 sau ext3
ca sistem de fişiere, va trebui să configuraţi manual kernel-ul, folosind
<c>genkernel --menuconfig all</c> şi să adăugaţi suport pentru sistemul
respectiv de fişiere <e>în</e> kernel (<e>nu</e> ca modul). Utilizatorii de
EVMS2 sau LVM2, vor trebui, probabil, să adauge <c>--evms2</c> sau
<c>--lvm2</c> ca argumente, de asemenea.
</p>

<pre caption="Rularea genkernel">
# <i>genkernel --udev all</i>
</pre>

<p>
Odată ce <c>genkernel</c> îşi încheie execuţia, vor fi create un set întreg de
module şi <e>initial root disk</e> (initrd). Vom folosi kernel-ul şi initrd
cănd vom configura aplicaţia bootloader. Notaţi undeva numele imaginii de
kernel şi a fişierului initrd pentru că vă va trebui cănd veţi configura
aplicaţia bootloader. Initrd-ul va porni imediat după boot, pentru a iniţia
autodetecţia hardware (la fel ca şi la mediul Installation CD) înainte ca
"adevăratul" sistem să pornească. Asiguraţi-vă că vă notaţi parametrii necesari
de boot, pentru că sunt necesari pentru a efectua cu succes un proces de boot
cu genkernel.
</p>

<pre caption="Verificarea numelor imaginii de kernel creată şi a initrd-ului">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Acum să parcurgem încă un pas spre a face sistemul să semene mai mult cu
mediul Installation CD -- să instalăm <c>coldplug</c>. În timp ce initrd
autodetectează componentele hardware necesare procesului de boot,
<c>coldplug</c> detectează tot ceea ce rămâne. Pentru a instala şi activa
<c>coldplug</c>, tastaţi următoarele comenzi:
</p>

<pre caption="Instalarea şi activarea coldplug">
<comment>(Efectuaţi acest pas după instalare, în timpul instrucţiunilor de instalare pentru GRP</comment>
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

<p>
Pentru ca sistemul dvs. să răspundă evenimentelor de hotplugging, va trebui să
instalaţi şi să setaţi pachetul <c>hotplug</c>, de asemenea:
</p>

<pre caption="Instalarea şi activarea hotplug">
<comment>(Efectuaţi acest pas după instalare, în timpul instrucţiunilor de instalare pentru GRP</comment>
# <i>emerge hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

<p>
Acum continuaţi consultând capitolul <uri link="?part=1&amp;chap=8">Configurarea
Sistemului</uri>.
</p>

</body>
</section>

</sections>
