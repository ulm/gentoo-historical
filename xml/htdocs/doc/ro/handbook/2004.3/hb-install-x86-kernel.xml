<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/handbook/2004.3/hb-install-x86-kernel.xml,v 1.1 2005/01/20 11:29:45 neysx Exp $ -->

<sections>

<version>1.28</version>
<date>2005-01-04</date>

<section>
<title>Zona de fus orar</title>
<body>

<p>
Trebuie, mai întâi să setaţi fusul orar, astfel încât sistemul
dumneavoastră să ştie unde se află. Uitaţi-vă după fusul orar
potrivit în <path>/usr/share/zoneinfo</path>, apoi faceţi un symlink către
<path>/etc/localtime</path>, folosind <c>ln</c>:
</p>

<pre caption="Setarea informaţiilor referitoare la fusul orar">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Presupunănd că doriţi să utilizaţi GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalarea surselor</title>
<subsection>
<title>Alegerea unui kernel</title>
<body>

<p>
Nucleul în jurul carora sunt construite toate distributiile, este kernelul
Linux. Este nivelul dintre programe şi componentele hardware ale sistemului
dumneavoastră. Gentoo pune la dispoziţia utilizatorilor, mai multe surse de
kernel. O listă completă alături de descrierea lor, este accesibilă la
<uri link="/doc/en/gentoo-kernel.xml">Ghidul Gentoo pentru Kernel</uri>. 
</p>

<p>
Pentru sistemele bazate pe arhitectura x86 vă oferim, alături de alte surse
de kernel, <c>vanilla-sources</c> (sursele de kernel implicite dezvoltate de
programatorii de kernel linux), <c>gentoo-sources</c> (sursele de kernel 2.4 ce
conţin patch-uri pentru îmbunătăţirea performanţei),
<c>gentoo-dev-sources</c> (sursele de kernel v2.6 ce conţin pacth-uri pentru
îmbunătăţirea performanţei), <c>development-sources</c> (sursele de
kernel vanilla 2.6), ...
</p>

<p>
Alegeţi sursele de kernel şi instalaţi-le utilizând <c>emerge</c>. 
</p>

<pre caption="Instalarea unor surse de kernel">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Când vă veţi uita în <path>/usr/src</path> ar trebui să vedeţi un
symlink numit <path>linux</path>, ce indică spre sursa kernel-ului dvs. Vom
presupune că sursa de kernel instalată este
<c>gentoo-sources-2.4.26-r9</c>:
</p>

<pre caption="Vizualizare symlink sursă kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.26-gentoo-r9
</pre>

<p>
Dacă symlink-ul nu indică spre sursele de kernel alese de dvs. (notaţi
faptul că <c>linux-2.4.26-gentoo-r9</c> este doar un exemplu) ar trebui să
îl modificaţi către kernel-ul corect:
</p>

<pre caption="Modificarea symlink-ului sursei kernel-ului">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.26-gentoo-r9 linux</i>
</pre>

<p>
Acum este timpul să configurăm şi să compilăm sursa kernel. Toate
arhitecturile pot folosi <c>genkernel</c> pentru asta, care vă va construi un
kernel generic aşa cum este folosit pe LiveCD. Vom explica configurarea
manuală, totuşi, fiind cea mai bună cale de a vă optimiza sistemul.
</p>

<p>
Dacă doriţi să vă configuraţi manual kernel-ul, continuaţi acum cu
<uri link="#manual">Implicit: Configurarea Manuală</uri>. Dacă doriţi să
utilizaţi <c>genkernel</c>, ar trebui să citiţi <uri
link="#genkernel">Alternativ: Utilizarea genkernel</uri>, în loc.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Implicit: Configurarea Manuală</title>
<subsection>
<title>Introducere</title>
<body>

<p>
Configurarea manuală a kernel-ului este des percepută ca cea mai grea
incercare, pe care fiecare user Linux trebuie să o treacă. Nimic mai fals
-- după ce veţi configura câteva kernel-uri, nici nu vă veţi mai aminti
că a fost greu ;)
</p>

<p>
Totuşi, un lucru <e>este</e> adevărat: trebuie să vă cunoaşteţi
sistemul înainte de a începe configurarea manuală a kernel-ului. Cele mai
multe informaţii le puteţi obţine prin vizualizarea conţinutului
<path>/proc/pci</path> (sau prin folosirea <c>lspci</c>, dacă există). De
asemenea, puteţi rula <c>lspci</c> pentru a vizualiza modulele kernel-ului
folosit de LiveCD (ar putea să vă formeze o idee despre ce anume să
activaţi).
</p>

<p>
Acum mergeţi in directorul ce conţine sursa kernel-ului şi executaţi
<c>make menuconfig</c>. Aceasta va porni un meniu de configurare bazat pe
ncurses.
</p>

<pre caption="Invocarea menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Veţi fi întâmpinat cu mai multe secţiuni de configurare. Mai întăi vom
enumera cateva opţiuni pe care trebuie să le activaţi (altfel Gentoo nu va
funcţiona deloc sau nu va funcţiona corect fară anumite trucuri
suplimentare).
</p>

</body>
</subsection>
<subsection>
<title>Activarea Opţiunilor Necesare</title>
<body>

<p>
Mai întâi de toate, activaţi utilizarea codului/driverelor în dezvoltare
sau experimentale. Aveţi nevoie de acesta, altfel anumite drivere foarte
importante nu vor fi afişate:
</p>

<pre caption="Selectarea codului/driverelor experimentale">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Asiguraţi-vă compilarea kernel-ului dvs. cu familia de procesoare corectă:
</p>

<pre caption="Selectarea familiei de procesoare corectă">
Processor type and features ---&gt;
  <comment>(Schimbaţi în concordanţă cu sistemul dvs.)</comment>
  (<i>Athlon/Duron/K7</i>) Processor family
</pre>

<p>
Acum mergeţi la <c>File Systems</c> şi selectaţi suportul pentru sistemul
de fişiere pe care îl folosiţi. <e>Nu</e> le compilaţi ca module, altfel
Gentoo nu va putea să mount-eze partiţiile. De asemenea, selectaţi
<c>Virtual memory</c>, 
<c>proc file system</c>, <c>/dev file system</c> + <c>Automatically mount at boot</c>:
</p>

<pre caption="Selectarea sistemelor de fişiere necesare">
<comment>(În cazul unui kernel 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(În cazul unui kernel 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)

<comment>(Selectaţi una sau mai multe dintre opţiunile următoare, după necesităţile sistemului)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Dacă BIOS-ul dvs. nu poate manipula harddisk-uri mari, şi aţi utilizat
elemente de contact pentru ca dispozitivul să raporteze o mărime
limitată, trebuie să activaţi următoarea opţiune pentru a avea acces la
întregul harddisk:
</p>

<pre caption="Selectarea suportului pentru redimensionare automată a geometriei">
<comment>(Doar în cazul versiunii 2.4.x de kernel)</comment>
ATA/IDE/MFM/RLL support ---&gt;
  IDE, ATA and ATAPI Block devices ---&gt;
    &lt;*&gt;   Include IDE/ATA-2 DISK support
    [ ]     Use multi-mode by default
    [*]     Auto-Geometry Resizing support
</pre>

<p>
Dacă folosiţi PPPoE pentru conectarea la Internet sau daca folosiţi un
modem tip dial-up, va trebui să activaţi următoarele opţiuni in kernel:
</p>

<pre caption="Selectarea driverelor PPPoE necesare">
<comment>(În cazul unui kernel 2.4.x)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(În cazul unui kernel 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Cele două opţiuni de compresie nu vor afecta, dar nu sunt întru totul
necesare, la fel ca şi opţiunea <c>PPP over Ethernet</c>, care ar putea fi
folosită doar de <c>rp-pppoe</c>, când este configurat sa  folosească
modul PPPoE.
</p>

<p>
Dacă o doriţi, nu uitaţi să includeţi suport in kernel pentru placa de
reţea.
</p>

<p>
Dacă deţineţi un procesor Intel ce suportă HyperThreading (tm), sau
aveţi un sistem multiprocesor, ar trebui să activaţi "Symmetric
multi-processing support":
</p>

<pre caption="Activarea suportului SMP">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Dacă utilizaţi Dispozitive de Intrare pe portul USB (cum ar fi tastatura sau
mouse-ul), nu uitaţi să le activaţi şi pe acestea:
</p>

<pre caption="Activarea suportului USB pentru dispozitive de intrare">
USB Support ---&gt;
  &lt;*&gt;   USB Human Interface Device (full HID) support
</pre>

<p>
Utilizatorii de laptop ce doresc suport PCMCIA, <e>nu</e> ar trebui să
utilizeze driverele PCMCIA dacă doresc să utilizeze un kernel 2.4. Cele mai
recente drivere sunt disponibile prin intermediul pachetului <c>pcmcia-cs</c>
ce va fi instalat mai târziu. Totuşi, utilizatorii versiunii 2.6 de kernel,
ar trebui să selecteze driverele PCMCIA din kernel.
</p>

<p>
Când terminaţi de configurat kernel-ul, continuaţi cu <uri
link="#compiling">Compilare şi Instalare</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilare şi Instalare</title>
<body>

<p>
Acum, că kernelul este configurat, este timpul să îl compilaţi şi
să-l instalaţi. Ieşiţi din meniul de configurare şi rulaţi <c>make dep
&amp;&amp; make bzImage modules modules_install</c>:
</p>

<pre caption="Compilarea kernel-ului">
<comment>(Pentru kernel 2.4)</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>(Pentru kernel 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Când compilarea s-a terminat, copiaţi imaginea de kernel în directorul
<path>/boot</path>. Începând de-aici, vom presupune că versiunea de kernel
pe care o instalaţi este versiunea 2.4.26 a surselor <c>gentoo-sources</c>.
Utilizaţi ce nume consideraţi potrivit pentru alegerea efectuată şi
notaţi-l pentru că veţi avea nevoie de el ulterior când veţi configura
aplicaţia bootloader.
</p>

<pre caption="Instalarea kernel-ului">
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.4.26-gentoo-r9</i>
# <i>cp System.map /boot/System.map-2.4.26-gentoo-r9</i>
</pre>

<p>
Este, de asemenea, recomandat să vă copiaţi fişierul de configurare a
kernel-ului în <path>/boot</path>, pentru orice eventualitate :)
</p>

<pre caption="Back-up pentru fişierul de configurare al kernel-ului">
# <i>cp .config /boot/config-2.4.26-gentoo-r9</i>
</pre>

<p>
Acum, continuaţi cu <uri link="#kernel_modules">Instalarea de Module Separate
de Kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativ: Utilizarea genkernel</title>
<body>

<p>
Dacă citiţi această secţiune, înseamnă că aţi ales script-ul nostru
<c>genkernel</c> pentru a vă configura kernel-ul.
</p>

<p>
Acum că sursele kernel-ului sunt instalate, este timpul să compilăm
kernel-ul folosind scriptul <c>genkernel</c>, pentru o compilarea automată a
kernel-ului. <c>genkernel</c> funcţionează prin a configura un kernel
aproape identic cu  cel al LiveCD-ului. Asta înseamnă că atunci când
folosiţi <c>genkernel</c> pentru a vă construi un kernel, sistemul va
detecta,la modul general, toate componentele hardware, in timpul procesului de
boot, aşa cum o face LiveCD-ul. Deoarece  genkernel nu necesită vreo
configurare manuală a kernel-ului, este ideal pentru cei carora nu le este la
îndemână să-şi compileze propriile kernel-uri.
</p>

<p>
Acum să vedem cum se foloseşte genkernel. Mai întăi, instalaţi pachetul
genkernel:
</p>

<pre caption="Instalarea genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Acum, compilaţi sursa kernel-ului rulând <c>genkernel all</c>. Fiţi atenţi,
totuşi, că <c>genkernel</c> compilează un  kernel care suportă aproape
toate componentele hardware, compilarea durând ceva timp pentru a se termina.
</p>

<p>
Trebuie să ştiţi că daca partiţia de boot nu foloseşte ext2 sau ext3
ca sistem de fişiere, va trebui să configuraţi manual kernel-ul, folosind
<c>genkernel --menuconfig all</c> şi să adăugaţi suport pentru sistemul
respectiv de fişiere <e>în</e> kernel (<e>nu</e> ca modul).
</p>

<pre caption="Rularea genkernel">
# <i>genkernel all</i>
</pre>

<p>
Odată ce <c>genkernel</c> îşi încheie execuţia, vor fi create un set
întreg de module şi <e>initial root disk</e> (initrd). Vom folosi kernel-ul
şi initrd cănd vom configura boot-loader-ul. Notaţi undeva numele imaginii
de kernel şi a fişierului initrd pentru că vă va trebui cănd veţi
configura aplicaţia bootloader. Initrd-ul va porni imediat după boot, pentru
a iniţia autodetecţia hardware (la fel ca şi la LiveCD) înainte ca
"adevăratul" sistem să pornească.
</p>

<pre caption="Verificarea numelor imaginii de kernel creată şi a initrd-ului">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Acum să parcurgem încă un pas spre a face sistemul să semene mai mult cu
LiveCD-ul -- să instalăm <c>coldplug</c>. În timp ce initrd
autodetectează componentele hardware necesare procesului de boot,
<c>coldplug</c> detectează tot ceea ce rămâne. Pentru a instala şi a
activa <c>coldplug</c>, scrieţi:
</p>

<note>
Dacă rulaţi o instalare fără-reţea, vă rugăm să utilizaţi
<c>hotplug</c> în locul <c>coldplug</c>. Coldplug a fost introdus după
publicarea versiunii 2004.3, iar aplicaţia <c>hotplug</c> din 2004.3 are
aceeaşi funcţionalitate.
</note>

<pre caption="Instalarea şi activarea coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug default</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Instalarea de Module Separate de Kernel</title>
<subsection>
<title>Instalarea Modulelor Adiţionale</title>
<body>

<p>
Dacă este cazul, va trebui să instalaţi pachetele pentru orice
componentă hardware prezentă în sistemul dvs. Urmează o listă cu
pachetele legate de kernel pe care le-aţi putea instala:
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>Pachet</th>
  <th>Scop</th>
  <th>Commandă</th>
</tr>
<tr>
  <ti>nvidia-kernel</ti>
  <ti>Grafică NVIDIA accelerată pentru xorg-x11</ti>
  <ti><c>emerge nvidia-kernel</c></ti>
</tr>
<tr>
  <ti>nforce-audio</ti>
  <ti>Sunet On-board prezent pe plăcile NVIDIA NForce(2)</ti>
  <ti><c>emerge nforce-audio</c></ti>
</tr>
<tr>
  <ti>e100</ti>
  <ti>Plăci de reţea Intel e100 Fast Ethernet</ti>
  <ti><c>emerge e100</c></ti>
</tr>
<tr>
  <ti>e1000</ti>
  <ti>Plăci de reţea Intel e1000 Gigabit Ethernet</ti>
  <ti><c>emerge e1000</c></ti>
</tr>
<tr>
  <ti>emu10k1</ti>
  <ti>Suport pentru Creative Sound Blaster Live!/Audigy (doar pentru versiunile
  2.4 de kernel)</ti>
  <ti><c>emerge emu10k1</c></ti>
</tr>
<tr>
  <ti>ati-drivers</ti>
  <ti>Grafică ATI Radeon 8500+/FireGL accelerată pentru xorg-x11</ti>
  <ti><c>emerge ati-drivers</c></ti>
</tr>
</table>

<p>
Notaţi, totuşi, unele din aceste pachete pot avea multe dependenţe. Pentru
a verifica ce pachete vor fi instalate alături de instalarea acestor pachete,
utilizaţi <c>emerge --pretend</c>. Spre exemplu, pentru pachetul
<c>emu10k1</c>:
</p>

<pre caption="Vizualizarea întregii liste de pachete">
# <i>emerge --pretend emu10k1</i>
</pre>

<p>
Dacă nu doriţi pachetele care se doresc instalate, utilizaţi <c>emerge
--pretend --verbose</c> pentru a analiza ce indicatori USE sunt verificaţi în
momentul deciderii dependenţelor:
</p>

<pre caption="Vizualizarea utilizării indicatorilor USE">
# <i>emerge --pretend --verbose emu10k1</i>
<comment>...</comment>
[ebuild  N    ] media-sound/aumix-2.8  +gpm +nls +gtk +gnome +alsa -gtk2
</pre>

<p>
În exemplul anterior, puteţi observa că una din dependenţele pachetului
<c>emu10k1</c> (<c>aumix</c>) utilizează <c>gtk</c> şi <c>gnome</c> ca
indicatori USE, determinând ca gtk (ce depinde de xorg-x11) să fie compilat
cu acesta.
</p>

<p>
Dacă nu doriţi toate acestea să fie compilate, deselectaţi toţi
indicatorii USE, spre exemplu:
</p>

<pre caption="Instalarea emu10k1 cu toţi indicatorii USE deselectaţi">
# <i>USE="-gpm -nls -gtk -gnome -alsa" emerge --pretend emu10k1</i>
</pre>

<p>
Dacă sunteţi mulţumit de rezultat, înlăturaţi parametrul
<c>--pretend</c> pentru a porni instalarea <c>emu10k1</c>.
</p>

</body>
</subsection>
<subsection>
<title>Configurarea Modulelor</title>
<body>

<p>
Va trebui să enumeraţi toate modulele, care vreţi să fie încărcate
automat, în <path>/etc/modules.autoload.d/kernel-2.4</path> (sau
<path>kernel-2.6</path>). Puteţi, de asemenea, să adaugaţi extra opţiuni
modulelelor dacă doriţi.
</p>

<p>
Pentru a vizualiza toate modulele disponibile, folosiţi următoarea comandă
<c>find</c>. Nu uitaţi să înlocuiţi "&lt;versiune kernel&gt;" cu versiunea
efectivă de kernel pe care tocmai aţi compilat-o:
</p>

<pre caption="Vizualizarea tuturor modulelor disponibile">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
De exemplu, pentru a încarca automat modulul <c>3c59x</c>, editaţi fişierul
<path>kernel-2.4</path> sau <path>kernel-2.6</path> şi scrieţi numele
modulului în el.
</p>

<pre caption="Editarea /etc/modules.autoload.d/kernel-2.4">
<comment>(Example for 2.4 kernels)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 sau kernel-2.6">
3c59x
</pre>

<p>
Acum executaţi <c>modules-update</c> pentru a actualiza modificările
făcute în fişierul <path>/etc/modules.conf</path>.
</p>

<pre caption="Rularea modules-update">
# <i>modules-update</i>
</pre>

<p>
Continuaţi instalarea cu <uri link="?part=1&amp;chap=8">Configurarea
Sistemului</uri>.
</p>

</body>
</subsection>
</section>
</sections>
