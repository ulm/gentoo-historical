<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/handbook/hb-install-mips-disk.xml,v 1.2 2004/11/10 10:46:10 neysx Exp $ -->

<sections>

<version>1.6</version>
<date>14 Septembrie 2004</date>

<section>
<title>Introducere în Dispozitive Bloc</title>
<subsection>
<title>Dispozitive Bloc</title>
<body>

<p>
Vom arunca o privire atentă asupra aspectelor în legătură cu discurile din Gentoo Linux şi Linux, în general, incluzând sistemele de fişiere, partiţii si dispozitive bloc. Apoi, odată ce vă familiarizaţi cu toate aspectele despre discuri şi sisteme de fişiere, veţi fi ghidaţi prin procesul de setare al partiţiilor şi sistemelor de fişiere pentru instalarea dvs. de Gentoo Linux.
</p>

<p>
Pentru a începe, vom face introducerea <e>dispozitivelor bloc</e>. Cel mai renumit dispozitiv bloc este probabil cel care reprezintă primul hard-disk SCSI într-un sistem Linux, şi anume <path>/dev/sda</path>.
</p>

<p>
Dispozitivele bloc amintite mai sus, reprezintă o interfaţă abstractă pentru disc. Programele utilizator pot folosi aceste dispozitive bloc pentru a interacţiona cu discul dvs. fără a avea grija dacă hard-disk-urile sunt IDE, SCSI sau altceva. Programul poate adresa ceea ce urmează să se stocheze pe disc ca o mulţime continuă de blocuri de 512 octeţi accesibile aleator.
</p>

</body>
</subsection>
<subsection>
<title>Partitiţii</title>
<body>

<p>
Deşi este teoretic posibil să utilizăm un disc întreg pentru a găzdui sistemul dvs. Linux, acesta este un lucru foarte rar pus în practică. În loc, dispozitivele bloc întregi sunt împărţite în dispozitive bloc mai mici şi mai uşor de manipulat. Acestea sunt numite <e>partiţii</e>. 
</p>

</body>
</subsection>
</section>
<section>
<title>Proiectarea unei Scheme de Partiţionare</title>
<subsection>
<title>Cât de Multe şi Cât de Mari?</title>
<body>

<p>
Numărul de partiţii este în foarte mare măsură dependent de mediul dvs. Spre exemplu, dacă aveţi un număr foarte mare de utilizatori, cel mai probabil veţi dori să aveţi directorul <path>/home</path> separat, deoarece sporeşte securitatea şi facilitează operaţiile de backup. Dacă instalaţi Gentoo ca server de mail, directorul dvs. <path>/var</path> ar trebui să fie separat, pentru că toate mail-urile sunt stocate în <path>/var</path>. O bună alegere a sistemului de fişiere va mări la maxim performanţele. Serverele de jocuri vor avea o partiţie <path>/opt</path> separată, deoarece majoritatea aplicaţiilor server pentru jocuri sunt instalate acolo. Motivul este similar cu cel pentru <path>/home</path>: securitate şi backup.
</p>

<p>
După cum puteţi observa, depinde foarte mult scopul pe care doriţi să-l atingeţi. Partiţii sau volume separate au următoarele avantaje:
</p>

<ul>
<li>
Puteţi alege cel mai performant sistem de fişiere pentru fiecare partiţie sau volum
</li>
<li>
Întregul sistem nu poate rămâne făra spaţiu liber dacă o aplicaţie nefuncţională scrie în continuu fişiere pe o partiţie sau volum
</li>
<li>
Dacă este necesar, verificările sistemului de fişiere sunt reduse ca timp, deoarece se pot executa mai multe verificări în paralel (deşi acest avantaj este mai mare în cazul discurilor multiple, decât în cel al partiţiilor multiple)
</li>
<li>
Securitatea poate fi îmbunătăţită prin mount-area unor partiţii sau volume doar pentru citire, în mod nosuid (biţii setuid sunt ignoraţi), noexec (biţii pentru execuţie sunt ignoraţi), etc.
</li>
</ul>

<p>
În orice caz, partiţiile multiple au un mare dezavantaj: dacă nu sunt configurate corect, pot cauza ca un sistem să aibă foarte mult loc liber pe o partiţie şi fără loc liber pe alta. Există, de asemenea, o limitare la 15 partiţii pentru SCSI şi SATA.
</p>

</body>
</subsection>
</section>
<section>
<title>Utilizarea fdisk pe arhitectura MIPS pentru a vă partiţiona discul</title>
<subsection>
<title>Crearea SGI Disk Label</title>
<body>

<p>
Toate discurile pe un sistem SGI necesită definirea informaţiei <e>SGI Disk Label</e>, ce oferă o funcţionalitate similară cu zonele din Sun şi MS-DOS -- Stochează informaţii despre partiţiile de pe disc. Crearea unei zone SGI Disk Label va crea două partiţii speciale pe disc:
</p>

<ul>
  <li>
    <e>Antetul de Volum SGI</e> (a 9-a partiţie): Această partiţie este importantă. Este locaţia unde vor fi stocate imaginile de kernel. Pentru a stoca imaginile de kernel, veţi utiliza o aplicaţie numită <c>dvhtool</c> pentru a copia imaginile pe această partiţie. Apoi, veţi putea să boot-aţi de pe această partiţie cu ajutorul SGI PROM Monitor.
  </li>
  <li>
    <e>Volumul SGI</e> (a 11-a partiţie): Această partiţie este similară ca scop cu a treia partiţie a Sun Disklabel ca "Întregul Disc". Această partiţie acoperă întregul disc, şi ar trebui lăsată neatinsă. Ea nu are un scop special, decât să asiste componenta PROM într-un mod nedocumentat (sau este utilizat de IRIX într-un anumit mod).
  </li>
</ul>

<warn>
Antetul de Volum SGI <e>trebuie</e> să înceapă la cilindrul 0. Dacă nu se întâmplă aşa, nu veţi putea boot-a de pe disc.</warn>

<p>
Urmează un extract dintr-o sesiune de <c>fdisk</c>. Citiţi şi adaptaţi-l după nevoile dvs...
</p>

<pre caption="Crearea SGI Disklabel">
# <i>fdisk /dev/sda</i>

Command (m for help): <i>x</i>

Expert command (m for help): <i>m</i>
Command action
   b   move beginning of data in a partition
   c   change number of cylinders
   d   print the raw data in the partition table
   e   list extended partitions
   f   fix partition order
   g   create an IRIX (SGI) partition table
   h   change number of heads
   m   print this menu
   p   print the partition table
   q   quit without saving changes
   r   return to main menu
   s   change number of sectors/track
   v   verify the partition table
   w   write table to disk and exit

Expert command (m for help): <i>g</i>
Building a new SGI disklabel. Changes will remain in memory only,
until you decide to write them. After that, of course, the previous
content will be unrecoverably lost.

Expert command (m for help): <i>r</i>

Command (m for help): <i>p</i>

Disk /dev/sda (SGI disk label): 64 heads, 32 sectors, 17482 cylinders
Units = cylinders of 2048 * 512 bytes

----- partitions -----
Pt#     Device  Info     Start       End   Sectors  Id  System
 9:  /dev/sda1               0         4     10240   0  SGI volhdr
11:  /dev/sda2               0     17481  35803136   6  SGI volume
----- Bootinfo -----
Bootfile: /unix
----- Directory Entries -----

Command (m for help):
</pre>

<note>
Dacă discul deja conţine o informaţie SGI Disklabel, atunci fdisk nu vă va mai oferi opţiunea de a crea una nouă. Există două soluţii în acest caz. Una este să creaţi o informaţie Sun sau MS-DOS, scrieţi schimbările pe disc şi restartaţi fdisk. A doua este să suprascrieţi tabela de partiţii cu date nule prin intermediul următoarei comenzi: <c>dd if=/dev/zero of=/dev/sda bs=512 count=1</c>.
</note>

</body>
</subsection>
<subsection>
<title>Redimensionarea Antetului de Volum SGI la mărimea corectă</title>
<body>

<p>
Acum, că informaţi SGI DiskLabel este creată, partiţiile pot fi acum definite. În exemplul de mai sus, aveţi deja definite două partiţii. Acestea sunt cele două partiţii speciale menţionate mai anterior şi nu ar trebui în mod normal să fi alterate. Dar, pentru a instala Gentoo, vom avea nevoie să scriem mai multe imagini de kernel direct în antetul de volum, deoarece înca nu există nici o aplicaţie Bootloader pentru SGI disponibilă în Portage. Antetul de volum poate stoca până la <e>opt</e> imagini de orice mărimi, fiecare imagine cu numele de până la opt caractere.
</p>

<p>
Procesul de a mări capacitatea antetului de volum nu este chiar cum ar trebui -- este nevoie de unele trucuri pentru aceasta. Nu se poate şterge şi re-adăuga antetul de volum din cauza comportamentului ciudat al fdisk. În exemplul oferit mai jos, vom crea un antet de volum de 50 MO alături de o partiţie de 50 MO pentru /boot. Schema actuală a discului dvs. poate varia, dar aceasta este doar în scop ilustrativ.
</p>

<pre caption="Redimensionarea Antetului de Volum SGI corect">
Command (m for help): <i>n</i>
Partition number (1-16): <i>1</i>
First cylinder (5-8682, default 5): <i>51</i>
 Last cylinder (51-8682, default 8682): <i>101</i>
<comment>(Observaţi cum fdisk permite doar Partiţiei #1 să fie recreată începând cu minimum cilindrul 5)</comment>
<comment>(Aţi încercat să ştergeţi şi să recreaţi Antetul de Volum SGI în acest fel, aceasta este aceeaşi problemă pe care aţi fi întâlnit-o.)</comment>
<comment>(În exemplul nostru, vrem ca /boot să fie de 50 MO, deci va începe de la cilindrul 51 (Antetul de Volum trebuie să înceapă de la cilindrul 0, vă aminitiţi?), şi să-i setăm cilindrul la 101, care va fi aproximativ 50 MO (+/- 1-5 MO))</comment>

Command (m for help): <i>d</i>
Partition number (1-16): <i>9</i>
<comment>(Ştergeţi partiţia #9 (Antetul de Volum SGI)</comment>

Command (m for help): <i>n</i>
Partition number (1-16): <i>9</i>
First cylinder (0-50, default 0): <i>0</i>
 Last cylinder (0-50, default 50): <i>50</i>
<comment>(Re-creaţi Partiţia #9, ce se va termina chiar înainte de Partiţia #1)</comment>
</pre>

</body>
</subsection>
<subsection>
<title>Schema de partiţionare finală</title>
<body>

<p>
Odată terminat procesul, este sigur să creaţi restul partiţiilor care le doriţi. După ce toate partiţiile sunt create, asiguraţi-vă că setaţi identificatorul partiţiei pentru swap la <c>82</c>, care este Linux Swap. Implicit, va fi <c>83</c>, Linux Native.
</p>

<p>
Acum că partiţiile dvs. sunt create, puteţi continua cu <uri link="#filesystems">Crearea Sistemelor de Fişiere</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Crearea Sistemelor de Fişiere</title>
<subsection>
<title>Introducere</title>
<body>

<p>
Acum, că partiţiile dvs. sunt create, este timpul să aplicăm un sistem de fişiere pe acestea. Dacă nu vă pasă ce sistem de fişiere să alegeţi şi sunteţi mulţumiţi cu ceea ce utilizăm noi implicit în acest manual, continuaţi cu <uri link="#filesystems-apply">Aplicarea unui Sistem de Fişiere pe o Partiţie</uri>. Altfel, citiţi mai departe pentru a învăţa despre sistemele de fişiere disponibile...
</p>

</body>
</subsection>
<subsection>
<title>Sisteme de Fişiere?</title>
<body>

<p>
Sunt disponibile mai multe sisteme de fişiere. Ext2 şi ext3 sunt considerate stabile pe arhitectura MIPS, celelalte fiind considerate experimentale.
</p>

<p>
<b>ext2</b> este cel mai încercat sistem de fişiere Linux, dar nu conţine destule informaţii de tip metadata pentru jurnalizare, ceea ce înseamnă că verificările de rutină ale sistemului de fişiere ext2 la pornirea sistemului pot dura o perioada considerabilă de timp. Există acum o mulţime de sisteme de fişiere jurnalizate din noua generaţie ce pot fi verificate pentru consistenţă foarte repede şi sunt, de aceea, preferate celor corespondente nejurnalizate. Sistemele de fişiere jurnalizate previn durata lungă la pornirea sistemului când sistemul de fişiere este într-o stare de inconsitenţă.
</p>

<p>
<b>ext3</b> este versiunea jurnalizată a sistemului de fişiere ext2, oferind informaţii de jurnalizare de tip metadata pentru recuperări rapide în plus faţă de alte moduri de îmbunătăţire ca jurnalizarea completă a datelor şi jurnalizarea ordonată a datelor. ext3 este un sistem de fişiere foarte bun şi sigur. Conţine o indexare adiţională b-tree, opţiune de indexare ce oferă o performanţă bună în aproape toate situaţiile. Pe scurt, ext3 este un sistem de fişiere excelent.
</p>

<p>
<b>ReiserFS</b> este un sistem de fişiere B*-tree ce oferă în general o performanţă foarte bună şi depăşeşte mult atât ext2 cât şi ext3 în cazul fişierelor mici (mai mici de 4K), în cele mai multe cazuri cu un coeficient de 10-15 ori. ReiserFS oferă o scalabilitate foarte bună şi conţine jurnalizare de tip metadata. Începând cu kernel 2.4.18+, ReiserFS este solid şi utilizabil atât în cazuri normale cât şi pentru cazuri extreme cum ar fi crearea de sisteme de fişiere foarte mari, utilizarea multor fişiere foarte mici, fişiere foarte mari şi directoare conţinând zeci de mii de fişiere.
</p>

<p>
<b>XFS</b> este un sistem de fişiere cu jurnalizare metadata ce are un set de funcţionalităţi robuste şi este optimizat pentru scalabilitate. Recomandăm utilizarea acestui sistem de fişiere doar pe sistemele Linux ce conţin discuri SCSI şi/sau sisteme de stocare pe fibra optică şi care deţin o sursă de alimentare neîntreruptibilă. Deoarece XFS utilizează într-un mod agresiv păstrarea datelor tranzitate în RAM, programele ce nu sunt proiectate corect (cele care nu îşi asigură precauţii la scrierea fişierelor pe disc care sunt destul de puţine) pot pierde multe date dacă sistemul se opreşte în mod neaşteptat.
</p>

<p>
<b>JFS</b> este sistemul de fişiere cu jurnalizare de înaltă performanţă al IBM. A devenit gata pentru producţie şi nu există prea multe înregistrări pentru a comenta pozitiv sau negativ asupra stabilităţii generale a acestuia în acest moment.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Aplicarea unui Sistem de Fişiere pe o Partiţie</title>
<body>

<p>
Pentru a crea un sistem de fişiere pe o partiţie sau volum, există utilitare disponibile pentru fiecare sistem de fişiere posibil:
</p>

<table>
<tr>
  <th>Sistem de Fişiere</th>
  <th>Comanda pentru Creare</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Spre exemplu, pentru a avea partiţia de boot (<path>/dev/sda1</path> în exemplul nostru) ca ext2 şi partiţia rădăcină (<path>/dev/sda3</path> în exemplul nostru) ca ext3 (ca în exemplul nostru), ar trebui să utilizaţi:
</p>

<pre caption="Aplicarea unui sistem de fişiere pe o partiţie">
# <i>mke2fs /dev/sda1</i>
# <i>mke2fs -j /dev/sda3</i>
</pre>

<p>
Acum creaţi sistemele de fişiere pe partiţiile (sau volumele logice) nou create.
</p>

</body>
</subsection>
<subsection>
<title>Activarea Partiţiei Swap</title>
<body>

<p>
<c>mkswap</c> este comanda utilizată pentru a iniţializa partiţiile swap:
</p>

<pre caption="Crearea unei semnături Swap">
# <i>mkswap /dev/sda2</i>
</pre>

<p>
Pentru a activa partiţia swap, utilizaţi <c>swapon</c>:
</p>

<pre caption="Activarea partiţiei swap">
# <i>swapon /dev/sda2</i>
</pre>

<p>
Creaţi şi activaţi partiţia swap acum.
</p>

</body>
</subsection>
</section>
<section>
<title>Mount-area</title>
<body>

<p>
Acum ca partiţiile dvs. sunt iniţializate şi găzduiesc un sistem de fişiere, este timpul să mount-aţi aceste partiţii. Utilizaţi comanda <c>mount</c>. Nu uitaţi să creaţi directoarele de mount pentru fiecare partiţie creată. Ca un exemplu, vom mount-a partiţiile rădăcină şi de boot:
</p>

<pre caption="Mount-area partiţiilor">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

<note>
Dacă doriţi ca directorul <path>/tmp</path> să se afle pe o partiţie separată, asiguraţi-vă că îi schimbaţi permisiunile după mount-are: <c>chmod 1777 /mnt/gentoo/tmp</c>. Aceasta este valabil şi pentru <path>/var/tmp</path>.
</note>

<p>
Trebuie, de asemenea, să utilizăm mount pentru sistemul de fişiere proc (o interfaţă virtuală cu kernel-ul) în <path>/proc</path>. Dar, mai întâi va trebui să stocăm fişierele noastre pe partiţii.
</p>

<p>
Continuaţi cu <uri link="?part=1&amp;chap=5">Instalarea Fişierelor de Instalare Gentoo</uri>.
</p>

</body>
</section>
</sections>
