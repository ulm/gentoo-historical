<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/handbook/2005.1/hb-install-ppc64-kernel.xml,v 1.5 2005/11/24 18:36:52 alin Exp $ -->

<sections>

<version>5.4</version>
<date>2005-11-24</date>

<section>
<title>Zona de Fus Orar</title>
<body>

<p>
Trebuie, mai întâi să setaţi fusul orar, astfel încât sistemul
dumneavoastră să ştie unde se află. Uitaţi-vă după fusul orar
potrivit în <path>/usr/share/zoneinfo</path>, apoi copiaţi-l ca
<path>/etc/localtime</path>. Vă rugăm să evitaţi zonele de fus din
<path>/usr/share/zoneinfo/Etc/GMT*</path> deoarece numele acestora nu indică
zonele presupuse. Spre exemplu <path>GMT-8</path> este, de fapt, GMT+8.
</p>

<pre caption="Setarea informaţiilor referitoare la fusul orar">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Presupunănd că doriţi să utilizaţi ora Bucureştiului)</comment>
# <i>cp /usr/share/zoneinfo/Europe/Bucharest /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalarea Surselor</title>
<subsection>
<title>Alegerea unui Kernel</title>
<body>

<p>
Nucleul în jurul căruia sunt construite toate distribuţiile, este kernel-ul
Linux. Este nivelul dintre programe şi componentele hardware ale sistemului
dumneavoastră. Gentoo pune la dispoziţia utilizatorilor, mai multe surse de
kernel. O listă completă alături de descrierea lor, este accesibilă la <uri
link="/doc/ro/gentoo-kernel.xml">Ghidul Gentoo pentru Kernel</uri>. 
</p>

<p>
Pentru arhitectura PPC64 puteţi utiliza <c>gentoo-sources</c>. Aşa că să
continuăm cu instalarea surselor, utilizând <c>emerge</c>. <c>USE="-doc"</c>
este necesar pentru a evita instalarea xorg-x11 sau a altor dependenţe, în
acest moment:
</p>

<pre caption="Instalarea unor surse de kernel">
# <i>USE="-doc" emerge gentoo-sources</i>
</pre>

<p>
Când vă veţi uita în <path>/usr/src</path> ar trebui să vedeţi un symlink numit
<path>linux</path>, ce indică spre sursa kernel-ului dvs.:
</p>

<pre caption="Vizualizare symlink sursă kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.12-gentoo-r10
</pre>

<p>
Dacă acesta nu este cazul dvs. (ex: symlink-ul indică spre o altă sursă kernel)
modificaţi symlink-ul înainte de a continua:
</p>

<pre caption="Modificarea symlink-ului sursei kernel-ului">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.12-gentoo-r10 linux</i>
</pre>

<p>
Acum este timpul să configurăm şi să compilăm sursa kernel. Există
posibilitatea de a folosi <c>genkernel</c> care vă va construi un kernel
generic aşa cum este folosit pe mediul Installation CD, dar nu este
funcţional în totalitate pentru PPC64, în prezent.
</p>

<p>
Acum, continuaţi cu secţiunea despre <uri link="#manual">Configurarea
Manuală</uri>. 
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Configurarea Manuală</title>
<subsection>
<title>Introducere</title>
<body>

<p>
Configurarea manuală a kernel-ului este des percepută ca cea mai grea
încercare, pe care fiecare user Linux trebuie să o treacă. Nimic mai fals --
după ce veţi configura câteva kernel-uri, nici nu vă veţi mai aminti că a fost
greu ;)
</p>

<p>
Totuşi, un lucru <e>este</e> adevărat: trebuie să vă cunoaşteţi
sistemul înainte de a începe configurarea manuală a kernel-ului. Cele mai
multe informaţii le puteţi obţine prin instalarea pciutils (<c>emerge
pciutils</c>) ce conţine <c>lspci</c>. Acum veţi putea să utilizaţi
comanda <c>lspci</c> în interiorul mediului chroot. Puteţi ignora cu
încredere orice avertismente <e>pcilib</e> (cum ar fi: pcilib: cannot open
/sys/bus/pci/devices) afişate de <c>lspci</c>. Alternativ, puteţi rula
<c>lspci</c> dintr-un mediu <e>non-chroot</e>. Rezultatele sunt aceleaşi. De
asemenea, puteţi rula <c>lsmod</c> pentru a vizualiza modulele kernel-ului
folosit de mediul Installation CD (ar putea să vă formeze o idee despre ce
anume să activaţi).
</p>

<p>
Acum mergeţi în directorul ce conţine sursa kernel-ului şi executaţi <c>make
menuconfig</c>. Aceasta va porni un meniu de configurare bazat pe ncurses.
</p>

<p>
Când compilaţi kernel-ul într-un mediu pe 32 de biţi, adăugaţi următoarea linie
la sfârşitul fişierului /etc/profile:
</p>

<pre caption="Alias pentru make în mediul pe 32 de biţi">
# <i>echo 'alias ppc64make="make ARCH=ppc64 CROSS_COMPILE=powerpc64-unknown-linux-gnu-"' >> /etc/profile</i>
# <i>source /etc/profile</i>
</pre>

<pre caption="Invocarea menuconfig">
# <i>cd /usr/src/linux</i>
(mediu pe 64 de biţi)  # <i>make menuconfig</i>
(mediu pe 32 de biţi)  # <i>ppc64make menuconfig</i>
</pre>

<p>
Veţi fi întâmpinat cu mai multe secţiuni de configurare. Mai întâi vom enumera
câteva opţiuni pe care trebuie să le activaţi (altfel Gentoo nu va funcţiona
deloc sau nu va funcţiona corect fără anumite trucuri suplimentare).
</p>

</body>
</subsection>
<subsection>
<title>Activarea Opţiunilor Necesare</title>
<body>

<p>
Mai întâi de toate, activaţi utilizarea codului/driverelor în dezvoltare sau
experimentale. Aveţi nevoie de acesta, altfel anumite drivere foarte importante
nu vor fi afişate:
</p>

<pre caption="Selecting experimental code/drivers, General setup">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
General setup ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Acum mergeţi la <c>File Systems</c> şi selectaţi suportul pentru sistemul de
fişiere pe care îl folosiţi. <e>Nu</e> le compilaţi ca module, altfel Gentoo nu
va putea să mount-eze partiţiile. De asemenea, selectaţi <c>Virtual memory</c>,
<c>proc file system</c> şi <c>/dev/pts file system for Unix98 PTYs</c>:
</p>

<pre caption="Selectarea sistemelor de fişiere necesare">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev/pts file system for Unix98 PTYs

<comment>(Selectaţi una sau mai multe dintre opţiunile următoare, după necesităţile sistemului)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
Veţi găsi unele din opţiunile menţionate în <c>Pseudo Filesystems</c>, o
subcategorie a <c>File systems</c>.
</note>

<p>
Dacă folosiţi PPPoE pentru conectarea la Internet sau dacă folosiţi un modem
tip dial-up, va trebui să activaţi următoarele opţiuni în kernel (veţi găsi
opţiunile menţionate sub <c>Networking support</c> ce este o subcategorie a
<c>Device Drivers</c>)::
</p>

<pre caption="Selectarea driverelor PPPoE necesare">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Cele două opţiuni de compresie nu vor afecta, dar nu sunt întru totul necesare,
la fel ca şi opţiunea <c>PPP over Ethernet</c>, care ar putea fi folosită doar
de <c>rp-pppoe</c>, când este configurat sa  folosească modul PPPoE.
</p>

<p>
Dacă o doriţi, nu uitaţi să includeţi suport în kernel pentru placa de reţea.
</p>

<p>
Dezactivaţi suportul ADB pentru codurile de taste raw.
</p>

<pre caption="Dezactivarea suportului ADB pentru codurile de taste raw.">
Macintosh Device Drivers ---&gt;
  [ ] Support for ADB raw keycodes
</pre>

<p>
Când terminaţi de configurat kernel-ul, continuaţi cu <uri
link="#compiling">Compilare şi Instalare</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilare şi Instalare</title>
<body>

<p>
Acum, că kernel-ul este configurat, este timpul să îl compilaţi şi să-l
instalaţi. Ieşiţi din meniul de configurare şi să începeţi procesul de
compilare:
</p>

<pre caption="Compilarea kernel-ului">
(mediu pe 64 de biţi)  # <i>make &amp;&amp; make modules_install</i>
(mediu pe 32 de biţi)  # <i>ppc64make &amp;&amp; ppc64make modules_install</i>
</pre>

<p>
Când compilarea s-a terminat, copiaţi imaginea de kernel în directorul
<path>/boot</path>.
</p>

<pre caption="Instalarea kernel-ului">
(Apple/IBM)  # <i>cp vmlinux /boot/kernel-2.6.12-gentoo-r10</i>
</pre>

<p>
Este, de asemenea, recomandat să vă copiaţi fişierul de configurare a
kernel-ului în <path>/boot</path>, pentru orice eventualitate :)
</p>

<pre caption="Back-up pentru fişierul de configurare al kernel-ului">
# <i>cp .config /boot/config-2.6.12-gentoo-r10</i>
</pre>

<p>
Acum, continuaţi cu <uri link="#kernel_modules">Configurarea Modulelor</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Configurarea Modulelor</title>
<body>

<p>
Va trebui să enumeraţi toate modulele, care vreţi să fie încărcate automat, în
<path>/etc/modules.autoload.d/kernel-2.6</path>. Puteţi, de asemenea, să
adăugaţi extra opţiuni modulelelor dacă doriţi.
</p>

<p>
Pentru a vizualiza toate modulele disponibile, folosiţi următoarea comandă
<c>find</c>. Nu uitaţi să înlocuiţi "&lt;versiune kernel&gt;" cu versiunea
efectivă de kernel pe care tocmai aţi compilat-o:
</p>

<pre caption="Vizualizarea tuturor modulelor disponibile">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
De exemplu, pentru a încărca automat modulul <c>3c59x</c>, editaţi fişierul
<path>kernel-2.4</path> sau <path>kernel-2.6</path> şi scrieţi numele modulului
în el.
</p>

<pre caption="Editarea /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Continuaţi instalarea cu <uri link="?part=1&amp;chap=8">Configurarea
Sistemului</uri>.
</p>

</body>
</section>
</sections>
