<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/handbook/2005.1/hb-install-x86-bootloader.xml,v 1.6 2005/11/27 19:03:49 alin Exp $ -->

<sections>

<version>5.3</version>
<date>2005-11-25</date>

<section>
<title>Alegerea</title>
<subsection>
<title>Introducere</title>
<body>

<p>
Acum, că kernel-ul este configurat şi compilat şi fişierele de
configurare a sistemului sunt completate corect, este timpul să instalăm un
program ce va încărca kernel-ul când porniţi sistemul. Un astfel de
program se numeşte <e>bootloader</e>. Pentru arhitectura x86, Gentoo Linux
oferă <uri link="#grub">GRUB</uri> şi <uri link="#lilo">LILO</uri>. Dar,
înainte de a instala unul dintre aceste aplicaţii bootloader, vă vom
informa cum să configuraţi framebuffer-ul (presupunând că doriţi acest
lucru, bineînţeles). Cu framebuffer puteţi rula linia de comandă Linux
beneficiind de unele caracteristici (limitate) grafice (cum ar fi utilizarea
imaginii bootsplash pe care Gentoo o oferă).
</p>

</body>
</subsection>
<subsection>
<title>Opţional: Framebuffer</title>
<body>

<p>
<e>Dacă</e> v-aţi configurat kernel-ul cu suport pentru framebuffer (sau
aţi utilizat configuraţia implicită din <c>genkernel</c>), puteţi activa
framebuffer prin adăugarea parametrului <c>vga</c> sau <c>video</c>  în
configuraţia aplicaţiei bootloader.
</p>

<p>
Mai întâi de toate, trebuie să ştiţi ce device utilizaţi pentru framebuffer.
Dacă utilizaţi surse de kernel cu patch-uri Gentoo (cum sunt
<c>gentoo-sources</c>) veţi putea selecta <c>vesafb-tng</c> ca <e>VESA driver
type</e> (opţiune implicită pentru aceste surse de kernel). Dacă acesta este şi
cazul dvs., utilizaţi <c>vesafb-tng</c> şi nu vă este necesară setarea
parametrului <c>vga</c>. Altfel, utilizaţi driver-ul <c>vesafb</c> şi trebuie
să setaţi parametrul <c>vga</c>.
</p>

<p>
Parametrul <c>vga</c> controlează rezoluţia şi adâncimea de culoare pentru
ecranul framebuffer pentru <c>vesafb</c>. Aşa cum este mentionat şi în
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> (ce este instalat odată
cu un pachet de surse de kernel), trebuie să adăugaţi ca valoare numărul VESA
corespunzător rezoluţiei dorite şi adâncimea de culoare pentru aceasta.
</p>

<p>
Următorul tabel listează rezoluţiile disponibile şi adâncimile de culoare, şi
le asociază cu valoarea pe care trebuie să i-o adăugaţi parametrului
<c>vga</c>.
</p>

<table>
<tr>
  <ti></ti>
  <th>640x480</th>
  <th>800x600</th>
  <th>1024x768</th>
  <th>1280x1024</th>
</tr>
<tr>
  <th>256</th>
  <ti>0x301</ti>
  <ti>0x303</ti>
  <ti>0x305</ti>
  <ti>0x307</ti>
</tr>
<tr>
  <th>32k</th>
  <ti>0x310</ti>
  <ti>0x313</ti>
  <ti>0x316</ti>
  <ti>0x319</ti>
</tr>
<tr>
  <th>64k</th>
  <ti>0x311</ti>
  <ti>0x314</ti>
  <ti>0x317</ti>
  <ti>0x31A</ti>
</tr>
<tr>
  <th>16M</th>
  <ti>0x312</ti>
  <ti>0x315</ti>
  <ti>0x318</ti>
  <ti>0x31B</ti>
</tr>
</table>

<p>
Parametrul <c>video</c> controlează opţiunile de afişare pentru framebuffer.
Necesită driver-ul de framebuffer (<c>vesafb</c> pentru versiunile de kernel
2.6 sau <c>vesa</c> pentru versiunile 2.4) urmat de valorile pe care doriţi să
le activaţi. Toate variabilele sunt afişate în
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path>, dar vă vom informa
despre cele 3 mai utilizate opţiuni:
</p>

<table>
<tr>
  <th>Control</th>
  <th>Descriere</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    Presupune că placa grafică îşi poate realoca memoria consecutiv (spre ex.
    să continue de la început când a ajuns la sfârşit)
  </ti>
</tr>
<tr>
  <ti>mtrr</ti>
  <ti>
    Setează regiştrii MTRR
  </ti>
</tr>
<tr>
  <ti><c>mod</c></ti>
  <ti>
    (doar pentru <c>vesafb-tng</c>)<br/>
    Setează rezoluţia, adâncimea de culoare şi rata de reîmprospătare. Spre
    exemplu, <c>1024x768-32@85</c> pentru o rezoluţie de 1024x768, 32 biţi
    adâncimea de culoare şi o rata de reîmprospătare de 85 Hz.
  </ti>
</tr>
</table>

<p>
Rezultatul acestor două argumente poate fi ceva asemănător cu <c>vga=0x318
video=vesafb:mtrr,ywrap</c> sau <c>video=vesafb:mtrr,ywrap,1024x768-32@85</c>.
Reţineţi (sau notaţi-vă) aceste setări; veţi avea nevoie de ele în scurt timp.
</p>

<p>
Acum, continuaţi cu instalarea <uri link="#grub">GRUB</uri> <e>sau</e> <uri
link="#lilo">LILO</uri>.
</p>

</body>
</subsection>
</section>
<section id="grub">
<title>Implicit: Utilizarea GRUB</title>
<subsection>
<title>Înţelegerea terminologiei implementată în GRUB</title>
<body>

<p>
Cea mai critcă parte în procesul de înţelegere a aplicaţiei GRUB este
familiarizarea cu modul cum acesta se referă la harddisk-uri şi partiţii.
Partiţia dvs. de Linux <path>/dev/hda1</path> va fi denumită mai mult ca sigur
<path>(hd0,0)</path> în GRUB. Atenţie la parantezele din jurul
<path>hd0,0</path> - sunt necesare.
</p>

<p>
Drive-urile de harddisk sunt numerotate de la zero în loc de "a" şi
partiţiile incep de la zero în loc de unu. Atenţie, din nou, cu faptul că
doar drive-urile de harddisk-uri sunt numerotate, nu şi dispozitivele
non-atapi cum ar fi dispozitivele cdrom şi cele de înregistrat cd-uri. De
asemenea, aceeaşi referire există şi pentru drive-urile SCSI. (Normal,
ele sunt numerotate până la numere mai mari decât drive-urile IDE,
exceptând cazul când BIOS-ul este configurat să boot-eze de pe
dispozitivele SCSI). Când configuraţi în BIOS să boot-eze de pe un disc
diferit spre exemplu discul primary slave), <e>acel</e> disc este detectat ca
<path>hd0</path>.
</p>

<p>
Presupunând că aveţi un hard-disk pe <path>/dev/hda</path>, un cdrom pe
<path>/dev/hdb</path>, un cdwriter pe <path>/dev/hdc</path>, un al doilea
hard-disk pe <path>/dev/hdd</path> şi nici un hard-disk SCSI, atunci
<path>/dev/hdd7</path> devine pentru GRUB <path>(hd1,6)</path>. Ar putea
părea înşelător şi chiar este, dar aşa cum vom vedea, GRUB-ul
oferă un mecanism de completare cu tab la îndemâna celor care au multe
hard-disk-uri şi partiţii şi din acastă cauză s-au pierdut în schema
de numerotare a GRUB-ului.
</p>

<p>
Obişnuindu-ne cu ideea, este timpul să începem instalarea GRUB-ului.
</p>

</body>
</subsection>
<subsection>
<title>Instalarea GRUB</title>
<body>

<p>
Pentru a instala GRUB-ul, trebuie mai întâi sa daţi comanda emerge.
</p>

<pre caption="Instalarea GRUB">
# <i>emerge grub</i>
</pre>

<p>
Deşi GRUB este acum instalat, tot mai trebuie să îi scriem un fişier de
configurare şi să-l instalăm în zona MBR pentru ca GRUB să boot-eze
automat în noul kernel creat. Creaţi <path>/boot/grub/grub.conf</path> cu
<c>nano</c> (sau, dacă este cazul, cu alt editor):
</p>

<pre caption="Crearea /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Acum vom scrie un fişier <path>grub.conf</path>. Mai jos, veţi regăsi
două fişiere <path>grub.conf</path> pentru exemplul de partiţionare
utilizat în acest ghid. Doar primul fişier <path>grub.conf</path> a fost
comentat intensiv. Aveţi grijă să utilizaţi imaginea <e>dvs.</e> de
kernel şi, dacă este cazul, imaginea <e>dvs.</e> initrd.
</p>

<ul>
  <li>
    Primul fişier <path>grub.conf</path> este pentru persoanele care nu au
    utilizat <c>genkernel</c> pentru a-şi construi kernel-ul
  </li>
  <li>
    Al doilea fişier <path>grub.conf</path> este pentru persoanele care au
    utilizat <c>genkernel</c> pentru a-şi construi kernel-ul
  </li>
</ul>

<note>
Dacă sistemul de fişiere al partiţiei dvs. rădăcină este JFS, <e>trebuie</e>
să adăugaţi " ro" în linia de <c>kernel</c>, deoarece JFS trebuie să-şi
restaureze log-ul înainte de a permite mount-area în modul read-write
(citire-scriere).
</note>

<pre caption="grub.conf pentru utilizatorii care nu au folosit genkernel">
<comment># Care intrare să boot-exe implicit. 0 este prima, 1 este a doua, etc.</comment>
default 0
<comment># Câte secunde să aştepte înainte de a încărca intrarea implicită.</comment>
timeout 30
<comment># O imagine splash drăguţă pentru a colora situaţia :)
# Comentaţi dacă nu aveţi o placă grafică instalată</comment>
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux 2.6.12-r10
<comment># Partiţia unde se află imaginea de kernel (sau sistemul de operare)</comment>
root (hd0,0)
kernel /boot/kernel-2.6.12-gentoo-r10 root=/dev/hda3

<comment># Următoarele patru linii sunt numai dacă utilizaţi dualboot cu un sistem Windows.</comment>
<comment># În acest caz, Windows se află pe /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<pre caption="grub.conf pentru utilizatorii genkernel">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux 2.6.12-r10
root (hd0,0)
kernel /boot/kernel-genkernel-x86-2.6.12-gentoo-r10 root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev
initrd /boot/initramfs-genkernel-x86-2.6.12-gentoo-r10

<comment># Doar în cazul în care utilizaţi dual-boot</comment>
title=Windows XP
root (hd0,5)
makeactive
chainloader +1
</pre>

<p>
Dacă utilizaţi o schemă de partiţionare şi/sau imagine de kernel
diferită, modificaţi în consecinţă. Oricum, asiguraţi-vă că orice
precedă un device GRUB (cum ar fi <path>(hd0,0)</path>) este relativ la mount
point nu la rădăcină. Cu alte cuvinte,
<path>(hd0,0)/grub/splash.xpm.gz</path> este în realitate
<path>/boot/grub/splash.xpm.gz</path> deoarece <path>(hd0,0)</path> este
<path>/boot</path>.
</p>

<p>
În plus, dacă alegeţi să utilizaţi o altă schemă de partiţionare şi nu aţi pus
<path>/boot</path> pe o partiţie separată, prefixul <path>/boot</path> utilizat
în exemplele de cod de mai sus este chiar <e>necesar</e>. Dacă aţi urmat planul
de partiţionare sugerat de noi, prefixul <path>/boot</path> nu este necesar,
însă link-ul simbolic <path>boot</path> îl face să funcţioneze. Pe scurt,
exemplele de mai sus ar trebuie să funcţioneze, indiferent dacă aţi utilizat o
partiţie separată pentru <path>/boot</path> sau nu.
</p>

<p>
Dacă doriţi să introduceţi opţiuni adiţionale pentru kernel,
adăugaţi-le la sfârşitul comenzii kernel. Deja avem o opţiune
(<c>root=/dev/hda3</c> sau <c>real_root=/dev/hda3</c>), dar puteţi introduce
şi altele, cum ar fi parametrii <c>video</c> şi/sau <c>vga</c> pentru
framebuffer, aşa cum am specificat anterior.
</p>

<p>
Dacă utilizaţi o versiune de kernel 2.6.7 sau mai nouă şi aţi modificat
contactele pe hard-disk pentru că BIOS-ul dvs. nu poate manipula discuri
mari, va trebui să adăugaţi opţiunea <c>hdx=stroke</c>.
</p>

<p>
Utilizatorii <c>genkernel</c> ar trebui să ştie că kernel-urile lor
utilizează aceleaşi opţiuni folosite pentru mediul Installation CD. Spre
exemplu, dacă aveţi dispozitive SCSI, ar trebui să adăugaţi <c>doscsi</c> ca
opţiune de kernel.
</p>

<p>
Acum salvaţi fişierul <path>grub.conf</path> şi ieşiţi. Tot mai trebuie
să instalăm GRUB în zona MBR (Master Boot Record) pentru ca acesta să
fie încărcat automat la pornirea sistemului.
</p>

<p>
Dezvoltatorii GRUB ne recomandă să utilizăm <c>grub-install</c>.
Totuşi, dacă dintr-un motiv <c>grub-install</c> nu funcţionează corect,
tot mai aveţi soluţia să instalaţi GRUB manual.
</p>

<p>
Continuaţi cu <uri link="#grub-install-auto">Implicit: Setarea GRUB Utilizând
grub-install</uri> sau <uri link="#grub-install-manual">Alternativ: Setarea
GRUB Utilizând Instrucţiuni Manuale</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Implicit: Setarea GRUB utilizând grub-install</title>
<body>

<p>
Pentru a instala GRUB trebuie să rulaţi comanda <c>grub-install</c>. Totuşi,
<c>grub-install</c> nu va funcţiona ca la carte pentru că ne aflăm într-un
mediu chroot. Trebuie să creăm <path>/etc/mtab</path> ce conţine toate
sistemele de fişiere mount-ate. Din fericire, există o soluţie simplă pentru a
realiza acest pas - trebuie doar să copiaţi <path>/proc/mounts</path> ca
<path>/etc/mtab</path>, excluzând linia <c>rootfs</c>, în cazul în care nu aţi
creat o partiţie separată de boot. Următoarea comandă va funcţiona în ambele
cazuri:
</p>

<pre caption="Crearea /etc/mtab">
# <i>grep -v rootfs /proc/mounts &gt; /etc/mtab</i>
</pre>

<p>
Acum, puteţi instala grub, utilizând <c>grub-install</c>:
</p>

<pre caption="Rularea grub-install">
# <i>grub-install /dev/hda</i>
</pre>

<p>
Dacă aveţi mai multe întrebări cu privire la GRUB, vă rugăm să
consultaţi documentul despre <uri
link="http://www.gnu.org/software/grub/grub-faq.html">Întrebări Frecvente
despre GRUB</uri> sau <uri
link="http://www.gnu.org/software/grub/manual/">Manualul GRUB</uri>.
</p>

<p>
Continuaţi cu <uri link="#reboot">Repornirea Sistemului</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Alternativ: Setarea GRUB Utilizând Instrucţiuni Manuale</title>
<body>

<p>
Pentru a începe configurarea GRUB, tastaţi <c>grub</c>. Vi se va afişa
<path>grub&gt;</path>, linia de comandă a grub. Acum, trebuie să tastaţi
comenzile potrivite pentru a instala GRUB pe disc.
</p>

<pre caption ="Rularea GRUB shell">
# <i>grub</i>
</pre>

<note>
Dacă sistemul dvs. nu are dispozitive floppy, adăugaţi opţiunea
<c>--no-floppy</c> comenzii de mai sus pentru a preveni grub să probeze
dispozitivele floppy (neexistente).
</note>

<p>
În configuraţia exemplu, vrem să instalăm GRUB pentru a îl determina
să citească informaţia de pe partiţia de boot <path>/dev/hda1</path> şi
să instaleze înregistrarea de boot GRUB în zona MBR (Master Boot Record) a
discului, pentru ca primul lucru afişat în momentul pornirii sistemului să
fie promptul GRUB. Bineînţeles, dacă nu aţi urmat configuraţia exemplu
din timpul instalării, schimbaţi comenzile în concordanţă.
</p>

<p>
Mecanismul de completare prin tab a aplicaţiei GRUB poate fi utilizat pentru
a-l instala. Spre exemplu, dacă tastaţi "<c>root (</c>" urmat de un TAB, vi
se va afişa o listă de dispozitive (cum ar fi <path>hd0</path>). Dacă
tastaţi "<c>root (hd0,</c>" urmat de un TAB, vi se va afişa o listă cu
partiţiile disponibile din care să alegeţi (cum ar fi <path>hd0,0</path>).
</p>

<p>
Prin utilizarea completării cu tab, setarea GRUB nu ar trebui să fie aşa
de complicată. Acum, haideţi, configuraţi GRUB, da? :-)
</p>

<pre caption =" Instalarea GRUB în zona MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(Specificaţi unde se află partiţia dvs. /boot)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Instalaţi GRUB în zona MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Ieşiţi din GRUB shell)</comment>
</pre>

<note>
Dacă doriţi să instalaţi GRUB într-o anumită zonă în loc de MBR, va
trebui să modificaţi comanda <c>setup</c> pentru a indica partiţia
corespunzătoare. Spre exemplu, dacă doriţi să instalaţi GRUB în
<path>/dev/hda3</path>, atunci comanda devine <c>setup (hd0,2)</c>. Totuşi,
puţini utilizatori doresc acest lucru.
</note>

<p>
Dacă aveţi mai multe întrebări în legătura cu GRUB, vă rugăm să
consultaţi <uri
link="http://www.gnu.org/software/grub/grub-faq.html">Întrebări Frecvente
despre GRUB (FAQ)</uri> sau <uri
link="http://www.gnu.org/software/grub/manual/">Manualul GRUB</uri>.
</p>

<note>
Când reinstalaţi un kernel, nu trebuie să mai copiaţi fişierele. Trebuie
doar să rulaţi <c>make install</c> după compilarea surselor de kernel;
aceasta va copia în mod automat fişierele necesare pentru ajustarea
configuraţiei GRUB.
</note>

<p>
Continuaţi cu <uri link="#reboot">Repornirea Sistemului</uri>.
</p>

</body>
</subsection>
</section>
<section id="lilo">
<title>Alternativ: Utilizarea LILO</title>
<subsection>
<title>Instalarea LILO</title>
<body>

<p>
LILO, (LInuxLOader) este cu adevărat cel mai încercat dintre bootloader-ele
de Linux. Totuşi îi lipsesc câteva caracteristici pe care GRUB-ul le are
(acesta este şi motivul pentru care GRUB-ul câştigă popularitate).
Motivul pentru care LILO este în continuare folosit, este acela că pe
anumite sisteme GRUB-ul nu funcţionează, iar LILO funcţionează. Desigur,
mai este folosit şi pentru ca unii cunosc LILO şi vor să-l folosească
în continuare. În ambele cazuri Gentoo este compatibil cu amândouă şi
s-ar părea că aţi hotărât să foloseşti LILO.
</p>

<p>
Instalarea LILO este foarte uşoară; numai utilizaţi <c>emerge</c>.
</p>

<pre caption = "Instalarea LILO">
# <i>emerge  lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Configurarea LILO</title>
<body>

<p>
Ca să configuraţi LILO trebuie să creaţi <path>/etc/lilo.conf</path>.
Porniţi editorului dvs. preferat (în acest handbook, folosim <c>nano</c>)
şi creaţi fişierul.
</p>

<pre caption = "Crearea /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Cu câteva secţiuni în urmă v-am cerut să vă amintiţi numele
kernel-image creat. În următorul exemplu <path>lilo.conf</path> folosim, de
asemenea, schema de partiţionare din acest exemplu. Sunt două părţi
separate: 
</p>

<ul>
  <li>
    Pentru cei care nu au folosit <c>genkernel</c> la compilarea kernel
  </li>
  <li>
    Pentru cei care au folosit <c>genkernel</c> la compilarea kernel
  </li>
</ul>

<p>
Aveţi grijă să utilizaţi imaginea <e>dvs.</e> de kernel şi, dacă este
cazul, imaginea <e>dvs.</e> initrd.
</p>

<note>
Dacă sistemul de fişiere al partiţiei dvs. rădăcină este JFS, <e>trebuie</e>
să adăugaţi " ro" în linia de <c>kernel</c>, deoarece JFS trebuie să-şi
restaureze log-ul înainte de a permite mount-area în modul read-write
(citire-scriere).
</note>

<pre caption="Exemplu /etc/lilo.conf">
boot=/dev/hda             <comment># Instalare LILO în MBR</comment>
prompt                    <comment># Acordaţi utilizatorului şansa de a selecta altă secţiune</comment>
delay=50                  <comment># Se aşteaptă cinci (5) secunde înainte de boot-area secţiunii default</comment>
default=gentoo            <comment># După ce a trecut timpul se boot-eaza secţiunea "gentoo"</comment>

<comment># Pentru utilizatori non-genkernel</comment>
image=/boot/kernel-2.6.12-gentoo-r10
  label=gentoo            <comment># Numele dat acestei secţiuni</comment>
  read-only               <comment># încarcă un root doar cu permisiuni de citire (read-only). Nu modificaţi!</comment>
  root=/dev/hda3          <comment># Locaţia sistemului de fişiere root</comment>

<comment># Pentru utilizatorii genkernel</comment>
image=/boot/kernel-genkernel-x86-2.6.12-gentoo-r10
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev"
  initrd=/boot/initramfs-genkernel-x86-2.6.12-gentoo-r10

<comment># Următoarele două linii sunt doar dacă doriţi un dual-boot cu un sistem Windows.</comment>
<comment># În acest caz, Windows-ul este găzduit în /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Dacă folosiţi o schemă de partiţionare şi/sau imagine kernel
diferită, adaptaţi în consecinţă.
</note>

<p>
Dacă doriţi să adăugaţi opţiuni în plus pentru kernel, adăugaţi
<c>append</c> la secţiune. De exemplu, vom adăuga opţiunea <c>video</c>
pentru a activa framebuffer:
</p>

<pre caption="Folosirea append pentru a adăugarea opţiunilor pentru kernel">
image=/boot/kernel-2.6.12-gentoo-r10
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="video=vesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
Dacă utilizaţi o versiune de kernel 2.6.7 sau mai nouă şi aţi modificat
contactele pe hard-disk pentru că BIOS-ul dvs. nu poate manipula discuri
mari, va trebui să adăugaţi opţiunea <c>hdx=stroke</c>.
</p>

<p>
Utilizatorii <c>genkernel</c> trebuie să ştie că kernel-urile lor folosesc
aceleaşi opţiuni la boot ca cele folosite pentru mediul Installation CD. De
exemplu, pentru un SCSI trebuie să adaugi <c>doscsi</c> ca opţiune kernel.
</p>

<p>
Acum salvaţi fişierul şi ieşiţi. Ca să terminaţi, trebuie să
rulaţi <c>/sbin/lilo</c> pentru ca LILO să poată aplica
<path>/etc/lilo.conf</path> sistemului dvs. (spre ex. să se instaleze pe
hard-disk). Reţineţi faptul că va trebui să rulaţi din nou
<c>/sbin/lilo</c> de câte ori instalaţi un nou kernel sau efectuaţi
schimbări meniului!
</p>

<pre caption = "Finalizarea instalării LILO">
# <i>/sbin/lilo</i>
</pre>

<note>
Când reinstalaţi un kernel, nu trebuie să mai copiaţi fişierele. Trebuie
doar să rulaţi <c>make install</c> după compilarea surselor de kernel;
aceasta va copia în mod automat fişierele necesare pentru ajustarea
configuraţiei LILO.
</note>

<p>
Acum, continuaţi cu <uri link="#reboot">Repornirea Sistemului</uri>.
</p>

</body>
</subsection>
</section>
<section id="reboot">
<title>Repornirea Sistemului</title>
<subsection>
<body>

<p>
Ieşiţi din mediul chroot şi demount-aţi toate partiţiile. Apoi, tastaţi
comanda magică pe care aţi aşteptat-o: <c>reboot</c>.
</p>

<pre caption="Demount-area tuturor partiţiilor şi repornirea">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Bineînţeles, nu uitaţi să îndepărtaţi CD-ul boot-abil, altfel sistemul
va boot-a din nou de pe CD în locul noului dvs. sistem Gentoo.
</p>

<p>
Odată repornit sistemul în instalarea dvs. Gentoo, terminaţi cu <uri
link="?part=1&amp;chap=11">Finalizarea Instalării Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
