<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/handbook/2004.2/hb-install-hppa-kernel.xml,v 1.1 2004/11/26 18:00:01 neysx Exp $ -->

<sections>

<version>1.8</version>
<date>2004-09-01</date>

<section>
<title>Zona de fus orar</title>
<body>

<p>
Trebuie, mai întâi să setaţi fusul orar, astfel încât sistemul dumneavoastră să ştie unde se află. Uitaţi-vă după fusul orar potrivit în <path>/usr/share/zoneinfo</path>, apoi faceţi un symlink către <path>/etc/localtime</path>, folosind <c>ln</c>:
</p>

<pre caption="Setarea informaţiilor referitoare la fusul orar">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Presupunănd că doriţi să utilizaţi GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalarea surselor</title>
<subsection>
<title>Alegerea unui kernel</title>
<body>

<p>
Nucleul în jurul carora sunt construite toate distributiile, este kernelul Linux. Este nivelul dintre programe şi componentele hardware ale sistemului dumneavoastră. Gentoo pune la dispoziţia utilizatorilor, mai multe surse de kernel. O listă completă alături de descrierea lor, este accesibilă la <uri link="/doc/en/gentoo-kernel.xml">Ghidul Gentoo pentru Kernel</uri>. 
</p>

<p>
În cazul HPPA avem <c>hppa-sources</c> pentru versiunile de kernel 2.4 şi <c>hppa-dev-sources</c> pentru versiunile de kernel 2.6. Continuaţi cu instalarea acestor surse de kernel:
</p>

<pre caption="Instalarea unor surse de kernel">
# <i>emerge hppa-sources</i>
</pre>

<p>
Când vă veţi uita în <path>/usr/src</path> ar trebui să vedeţi un symlink numit <path>linux</path>, ce indică spre sursa kernel-ului dvs.:
</p>

<pre caption="Vizualizare symlink sursă kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.24
</pre>

<p>
Dacă acesta nu este cazul dvs. (ex: symlink-ul indică spre o altă sursă kernel) modificaţi symlink-ul înainte de a continua:
</p>

<pre caption="Modificarea symlink-ului sursei kernel-ului">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.24 linux</i>
</pre>

<p>
Acum este timpul să configurăm şi să compilăm sursa kernel. Toate arhitecturile pot folosi <c>genkernel</c> pentru asta, care vă va construi un kernel generic aşa cum este folosit pe LiveCD. Vom explica configurarea manuală, totuşi, fiind cea mai bună cale de a vă optimiza sistemul.
</p>

<p>
Dacă doriţi să vă configuraţi manual kernel-ul, continuaţi acum cu <uri link="#manual">Implicit: Configurarea Manuală</uri>. Dacă doriţi să utilizaţi <c>genkernel</c>, ar trebui să citiţi <uri link="#genkernel">Alternativ: Utilizarea genkernel</uri>, în loc.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Implicit: Configurarea Manuală</title>
<subsection>
<title>Introducere</title>
<body>

<p>
Configurarea manuală a kernel-ului este des percepută ca cea mai grea incercare, pe care un utilizator Linux trebuie să o efectueze. Nimic mai fals -- după ce veţi configura câteva kernel-uri, nici nu vă veţi mai aminti că a fost greu ;)
</p>

<p>
Totuşi, un lucru <e>este</e> adevărat: trebuie să vă cunoaşteţi sistemul înainte de a începe configurarea manuală a kernel-ului. Cele mai multe informaţii le puteţi obţine prin vizualizarea conţinutului <path>/proc/pci</path> (sau prin folosirea <c>lspci</c>, dacă există). De asemenea, puteţi rula <c>lspci</c> pentru a vizualiza modulele kernel-ului folosit de LiveCD (ar putea să vă formeze o idee despre ce anume să activaţi).
</p>

<p>
Acum mergeţi in directorul ce conţine sursa kernel-ului şi executaţi <c>make menuconfig</c>. Aceasta va porni un meniu de configurare bazat pe ncurses.
</p>

<pre caption="Invocarea menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Veţi fi întâmpinat cu mai multe secţiuni de configurare. Mai întăi vom enumera cateva opţiuni pe care trebuie să le activaţi (altfel Gentoo nu va funcţiona deloc sau nu va funcţiona corect fară anumite trucuri suplimentare).
</p>

</body>
</subsection>
<subsection>
<title>Activarea Opţiunilor Necesare</title>
<body>

<p>
Mai întâi de toate, activaţi utilizarea codului/driverelor în dezvoltare sau experimentale. Aveţi nevoie de acesta, altfel anumite drivere foarte importante nu vor fi afişate:
</p>

<pre caption="Selectarea codului/driverelor experimentale">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Acum mergeţi la <c>File Systems</c> şi selectaţi suportul pentru sistemul de fişiere pe care îl folosiţi. <e>Nu</e> le compilaţi ca module, altfel Gentoo nu va putea să mount-eze partiţiile. De asemenea, selectaţi <c>Virtual memory</c>, 
<c>proc file system</c>, <c>/dev file system</c> + <c>Automatically mount at boot</c>:
</p>

<pre caption="Selectarea sistemelor de fişiere necesare">
<comment>(Pentru un kernel 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Pentru un kernel 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)

<comment>(Selectaţi una sau mai multe dintre opţiunile următoare, după necesităţile sistemului)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Dacă folosiţi PPPoE pentru conectarea la Internet sau daca folosiţi un modem tip dial-up, va trebui să activaţi următoarele opţiuni in kernel:
</p>

<pre caption="Selectarea driverelor PPPoE necesare">
<comment>(Pentru un kernel 2.4.x)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(Pentru un kernel 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Cele două opţiuni de compresie nu vor afecta, dar nu sunt întru totul necesare, la fel ca şi opţiunea <c>PPP over Ethernet</c>, care ar putea fi folosită doar de <c>rp-pppoe</c>, când este configurat sa  folosească modul PPPoE.
</p>

<p>
Dacă o doriţi, nu uitaţi să includeţi suport in kernel pentru placa de reţea.
</p>

<p>
Dacă aveţi un  mouse sau o tastatură tip HIL, nu uitaţi să compilaţi suportul pentru acestea.
</p>

<pre caption="Activarea suportului HIL">
Input core support ---&gt;
  [*] Keyboard support
  [*] Mouse support
  [*] Event interface support
</pre>

<p>
Dacă nu aveţi nici un mouse pe portul HIL, folosiţi doar suportul de bază:
</p>

<pre caption="Suportul de  bază HIL">
HIL support ---&gt;
  [*] HIL Keyboard (basic) support
</pre>

<p>
Dacă vreodată doriţi suport complet HIL, selectaţi următoarele opţiuni:
</p>

<pre caption="Suport HIL complet">
HIL support ---&gt;
  [*] HP System Device Controller i8042 Support
  [*] HIL MLC Support
  [*] HIL Keyboard (full) support
  [*] HIL Mouse &amp; Pointer support
</pre>

<p>
De asemenea, includeţi şi suport pentru driverul de display:
</p>

<pre caption="Activarea suportului pentru Driverul de Display">
Graphics support ---&gt;
  [*] Support for frame buffer devices
      [*] HP STI frame buffer device support
  Console display driver support ---&gt;
      [*] STI text console
</pre>

<p>
Când terminaţi de configurat kernel-ul, continuaţi cu <uri link="#compiling">Compilare şi Instalare</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilare şi Instalare</title>
<body>

<p>
Acum că avem kernel-ul configurat, este timpul să îl instalăm. Ieşiţi din meniul de configurare şi executaţi <c>make dep &amp;&amp; make vmlinux modules modules_install</c>:
</p>

<pre caption="Compilarea kernel-ului">
<comment>(Pentru kernel 2.4)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(Pentru kernel 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Când compilarea de kernel este gata, copiaţi imaginea de kernel în directorul <path>/boot</path>. În următorul exemplu,vom presupune că aţi configurat şi compilat <c>vanilla-sources-2.4.24</c> (care ar putea să nu fie tocmai kernel-ul potrivit pentru arhitectura  de care dispuneţi!):
</p>

<pre caption="Instalare kernel">
# <i>cp vmlinux /boot/kernel-2.4.24</i>
# <i>cp System.map /boot/System.map-2.4.24</i>
</pre>

<p>
Este de asemenea indicat să copiaţi fişierul de configurare în <path>/boot</path>, pentru orice eventualitate :)
</p>

<pre caption="Back-up la configuraţia kernel-ului">
# <i>cp .config /boot/config-2.4.24</i>
</pre>

<p>
Acum continuaţi cu <uri link="#kernel_modules">Configurarea Modulelor pentru Kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativ: Utilizarea genkernel</title>
<body>

<p>
Dacă citiţi  această secţiune înseamnă că aţi ales să folosiţi scriptul nostru <c>genkernel</c>, pentru a vă configura kernel-ul.
</p>

<p>
Acum că sursele kernel-ului sunt instalate, este timpul să compilăm kernel-ul folosind scriptul <c>genkernel</c>, pentru o compilarea automată a kernel-ului. <c>genkernel</c> funcţionează prin a configura un kernel aproape identic cu  cel al LiveCD-ului. Asta înseamnă că atunci când folosiţi <c>genkernel</c> pentru a vă construi un kernel, sistemul va detecta,la modul general, toate componentele hardware, in timpul procesului de boot, aşa cum o face LiveCD-ul. Deoarece  genkernel nu necesită vreo configurare manuală a kernel-ului, este ideal pentru cei carora nu le este la îndemână să-şi compileze propriile kernel-uri.
</p>

<p>
Acum să vedem cum se foloseşte genkernel. Mai întăi, instalaţi pachetul genkernel:
</p>

<pre caption="Instalarea genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Acum, compilaţi sursa kernel-ului rulând <c>genkernel all</c>. Fiţi atenţi, totuşi, că <c>genkernel</c> compilează un  kernel care suportă aproape toate componentele hardware, compilarea durând ceva timp pentru a se termina.
</p>

<p>
Trebuie să ştiţi că daca partiţia de boot nu foloseşte ext2 sau ext3 ca sistem de fişiere, va trebui să configuraţi manual kernel-ul, folosind <c>genkernel --menuconfig all</c> şi să adăugaţi suport pentru sistemul respectiv de fişiere <e>în</e> kernel (<e>nu</e> ca modul).
</p>

<pre caption="Rularea genkernel">
# <i>genkernel all</i>
GenKernel v3.0.1_beta10
* ARCH: HPPA 
* KERNEL VER: 2.4.24
* kernel: configuring source
* kernel: running mrproper
<comment>(Output removed to increase readability)</comment>

* Kernel compiled successfully!
* Required Kernel Params:
*   : root=/dev/ram0 init=/linuxrc real_root=/dev/$ROOT
*     where $ROOT is the devicenode for your root partition as
*     you should have specified in /etc/fstab
*              
* You MUST tell your bootloader to use the generated initrd
*              
* Recommended Kernel Params:
*   : vga=0x317 splash=verbose
*              
* Do NOT report kernel bugs (configs included) as genkernel bugs.
* Make sure you have the latest genkernel before reporting bugs
*              
* For more info see /usr/share/genkernel/README
</pre>

<p>
Odată ce <c>genkernel</c> îşi încheie execuţia, vor fi create un set întreg de module şi <e>initial root disk</e> (initrd). Vom folosi kernel-ul şi initrd cănd vom configura boot-loader-ul. Notaţi undeva numele imaginii de kernel şi a fişierului initrd pentru că vă va trebui cănd veţi configura aplicaţia bootloader. Initrd-ul va porni imediat după boot, pentru a iniţia autodetecţia hardware (la fel ca şi la LiveCD) înainte ca "adevăratul" sistem să pornească.
</p>

<pre caption="Verificarea numelor imaginii de kernel creată şi a initrd-ului">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Acum să parcurgem încă un pas spre a face sistemul să semene mai mult cu LiveCD-ul -- să instalăm <c>hotplug</c>. În timp ce initrd autodetectează componentele hardware necesare procesului de boot, <c>hotplug</c> detectează tot ceea ce rămâne. Pentru a instala şi a activa <c>hotplug</c>, scrieţi:
</p>

<pre caption="Instalarea şi activarea hotplug">
# <i>emerge hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Configurarea Modulelor pentru Kernel</title>

<subsection>
<title>Configurarea Modulelor</title>
<body>

<p>
Va trebui să enumeraţi toate modulele, care vreţi să fie încărcate automat, în <path>/etc/modules.autoload.d/kernel-2.4</path> (sau <path>kernel-2.6</path>). Puteţi, de asemenea, să adaugaţi extra opţiuni modulelelor dacă doriţi.
</p>

<p>
Pentru a vizualiza toate modulele disponibile, folosiţi următoarea comandă <c>find</c>. Nu uitaţi să înlocuiţi "&lt;versiune kernel&gt;" cu versiunea efectivă de kernel pe care tocmai aţi compilat-o:
</p>

<pre caption="Vizualizarea tuturor modulelor disponibile">
# <i>find /lib/modules/&lt;versiune kernel&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
De exemplu, pentru a încarca automat modulul <c>3c59x</c>, editaţi fişierul <path>kernel-2.4</path> sau <path>kernel-2.6</path> şi scrieţi numele modulului în el.
</p>

<pre caption="Editarea /etc/modules.autoload.d/kernel-2.4">
<comment>(Examplu pentru kernel 2.4)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 sau kernel-2.6">
3c59x
</pre>

<p>
Acum executaţi <c>modules-update</c> pentru a actualiza modificările făcute în fişierul <path>/etc/modules.conf</path>.
</p>

<pre caption="Rularea modules-update">
# <i>modules-update</i>
</pre>

<p>
Continuaţi instalarea cu <uri link="?part=1&amp;chap=8">Configurarea Sistemului</uri>.
</p>

</body>
</subsection>
</section>
</sections>
