<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ro/usb-guide.xml,v 1.10 2012/04/18 18:30:35 swift Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="ro">
<title>Ghid USB pentru Gentoo Linux</title>

<author title="Autor">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Translator">
  <mail link="robert.datcu@gentoo.ro">Robert Datcu</mail>
</author>

<abstract>
Acest document ajută utilizatorul în configurarea USB pe un sistem Gentoo
precum şi a diverselor dispozitive USB.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.9</version>
<date>2006-01-14</date>

<chapter>
<title>Introducere</title>
<section>
<title>Ce înseamnă USB?</title>
<body>

<p>
USB este abrevierea pentru Universal Serial Bus (Magistrală Serială Universală)
şi este în esenţă o interfaţă externă standard care oferă posibilitatea
comunicării între computer şi diverse alte periferice. Unele din cele mai
folosite dispozitive în mod obişnuit sunt tastaturile, dispozitivele mouse,
dispozitivele de stocare pen-drive, camerele digitale, unităţile CD externe
&amp; inscriptoarele DVD, imprimante etc.
</p>

<p>
În acest moment sunt două versiuni ale standardului USB în uz, USB 1.1 şi USB
2.0. Cum USB a păstrat întotdeauna compatibilitatea "în urmă" cu versiunile lui
anterioare, USB 2.0 păstrează compatibilitatea cu USB 1.1. Ultimele dispozitive
USB sunt de obicei compatibile USB 2.0. USB 2.0 suportă a viteză maximă de
transmitere a datelor de 480 Mbps sau 60 MBps şi aceasta este diferenţa majoră
dintre cele două standarde. Un alt avantaj al folosirii USB este că toate
dispozitivele sunt <e>hot-pluggable</e>, ceea ce înseamnă că nu trebuie să
reporniţi sistemul pentru a putea folosi aceste dispozitive.
</p>

</body>
</section>
<section>
<title>O Perspectivă Tehnică</title>
<body>

<p>
Înainte de a ajunge la opţiunile de configurare exacte din kernel, ar fi
potrivit să privim un pic mai în detaliu USB. Dacă vă grăbiţi sau doriţi să
săriţi peste această secţiune, treceţi la <uri link="#kernel">Configurarea
Kernel-ului</uri>.
</p>

<p>
Un sistem USB are un dispozitiv controller gazdă, hub-uri, un <e>hub
rădăcină</e> printre altele şi poate suporta până la 127 dispozitive USB cu tot
cu hub-uri. Controlerul gazdă nu este altceva decât interfaţa hardware între
dispozitivul USB şi sistemul de operare. Există câteva controlere HCI (Host
Controller Interface - Interfaţă controler gazdă) în folosinţă astăzi, anume
OHCI (Open HCI) de la Compaq, UHCI (Universal HCI) şi EHCI (Enhanced HCI),
ambele de la Intel. OHCI/UHCI sunt cele două interfeţe standard USB 1.1 din
industrie în timp ce EHCI este pentru USB 2.0.
</p>

<p>
Producătorul hardware oferă o interfaţă pentru programator ce permite
sistemului să interacţioneze cu hardware-ul şi aceasta se numeşte HCD sau
Dispozitiv Controler Gazdă. Tocmai prin acest HCD interacţionează dispozitivele
cu aplicaţiile din sistem. Următoarea diagramă ar trebui să facă lucrurile mai
uşor de înţeles.
</p>

<pre caption="Arhitectura Generală USB">
<comment>(Software-ul constă şi din alte componente cum ar fi driver-ele
dispozitivelor, dar de dragul simplităţii, acestea nu sunt prezentate)</comment>

    + ----  Hardware  ----   + ----  Software  ---- +
    |                        |                      |
    | [USB Dev] -+-> {EHCI} -+--->  ( EHCD )        |
    |            |           |                      |  Utilizator
    |            `-> {UHCI} -+--->  ( UHCD )        |
    |                        |                      |
    + ----  Hardware  ----   + ----  Software  ---- +
</pre>

<p>
Un dispozitiv USB poate folosi ori un driver general sau unul deja prezent în
sistem şi acest lucru se bazează pe conceptul de <e>clasă</e> de dispozitive.
Aceasta înseamnă că dacă un dispozitiv aparţine unei oarecare <e>clase</e>,
atunci alte dispozitive aparţinând aceleiaşi <e>clase</e> pot funcţiona
folosind acelaşi driver dispozitiv. Unele din aceste <e>clase</e> sunt clasa
USB HID (Human Interface Devices - Dispozitivele Interfaţă Umană), care acoperă
dispozitivele de intrare cum sunt tastaturile şi dispozitivele mouse, clasa de
dispozitive USB Mass Storage, care acoperă dispozitive cum sunt unităţile
stocare pen-drive, camerele digitale, dispozitive de redare audio etc şi clasa
USB CDC (Communication Devices Class - Clasa Dispozitivelor de Comunicaţie),
care, în esenţă, acoperă dispozitivele modem USB şi dispozitivele similare.
</p>

</body>
</section>
<section>
<title>Ce se află în maşina dvs.?</title>
<body>

<p>
Este foarte simplu să aflaţi dacă maşina dvs. are sau nu suport USB 2.0. Vom
folosi comanda <c>lspci</c> în acest scop.
</p>

<note>
Comanda <c>lspci</c> este parte a pachetului <c>sys-apps/pciutils</c>. Dacă nu
aveţi acest pachet instalat, instalaţi-l cu <c>emerge pciutils</c>. Luaţi în
considerare că trebuie să aveţi drepturi root cât timp rulaţi comanda
<c>lspci</c>.
</note>

<pre caption="Diverse rezultate ale comenzii lspci">
<comment>(Într-un sistem ce îndeplineşte doar standardul USB 1.1, reţineţi doar UHCI)</comment>

# <i>lspci -v | grep USB</i>
0000:00:04.2 USB Controller: Intel Corp. 82371AB/EB/MB PIIX4 USB (rev 01) (prog-if 00 [UHCI])

<comment>(Într-un sistem ce îndeplineşte standardul USB 2.0, reţineţi EHCI şi UHCI)</comment>

00:1d.0 USB Controller: Intel Corp. 82801DB USB (Hub #1) (rev 01) (prog-if 00 [UHCI])
00:1d.1 USB Controller: Intel Corp. 82801DB USB (Hub #2) (rev 01) (prog-if 00 [UHCI])
00:1d.2 USB Controller: Intel Corp. 82801DB USB (Hub #3) (rev 01) (prog-if 00 [UHCI])
00:1d.7 USB Controller: Intel Corp. 82801DB USB EHCI Controller (rev 01) (prog-if 20 [EHCI])
</pre>

<p>
Deci, folosind comanda <c>lspci</c>, putem afla dacă sistemul suportă USB 2.0.
Este un lucru folositor, pentru că vom activa opţiunile corespunzătoare în
kernel.
</p>

</body>
</section>
</chapter>

<chapter id="kernel">
<title>Configurarea Kernel-ului</title>
<section>
<title>Procurarea unui kernel</title>
<body>

<note>
Începând cu versiunea 2005.0, Gentoo Linux foloseşte arborele 2.6 drept kernel
implicit. Doar dacă specificaţi folosirea profilului 2.4, <c>gentoo-sources</c>
va fi un kernel generaţia 2.6 pe <e>cele mai multe</e> arhitecturi. Verificaţi
versiunea kernel-ului şi apoi procedaţi cu o configurare corespunzătoare.
</note>

<p>
În primul rând instalaţi sursele kernel-ului ales de dvs. Aici vom folosi
<c>gentoo-sources</c> Pentru mai multe informaţii referitoare la diferite surse
disponibile în arborele Portage, verificaţi <uri
link="/doc/ro/gentoo-kernel.xml">Ghidul pentru Kernel în Gentoo Linux</uri>.
</p>

<pre caption="Instalarea surselor kernel-ului">
# <i> emerge gentoo-sources</i>
</pre>

<p>
Acum, să mergem mai departe cu sarcina configurării kernel-ului.
</p>

<pre caption="Înaintând către sursă">
# <i> cd /usr/src/linux</i>
# <i> make menuconfig</i>
</pre>

<note>
Exemplul de mai sus presupune că link-ul simbolic <path>/usr/src/linux</path>
indică sursele kernel-ului pe care doriţi să le folosiţi. Asiguraţi-vă de acest
lucru înainte de a proceda.
</note>

</body>
</section>
<section id="newkernelconfig">
<title>Opţiuni de configurare pentru un kernel 2.6.x</title>
<body>

<p>
Acum ne vom uita la anumite opţiuni pe care va trebui să le activăm în
kernel-ul 2.6, pentru a asigura un suport corespunzător pentru dispozitivele
noastre. Dacă folosiţi un kernel 2.4, urmaţi <uri
link="#oldkernelconfig">Opţiuni de configurare pentru un kernel 2.4.x </uri>.
</p>

<note>
Exemplele din acest document vor prezenta opţiuni de configurare pentru un
suport USB de bază, care este necesar în mod obişnuit, de exemplu un dispozitiv
de stocare USB (cele mai multe camere şi dispozitive pendrive). Dacă aveţi un
dispozitiv USB specific ce trebuie configurat, consultaţi manualul
dispozitivului dvs. sau căutaţi online pentru a afla dacă dispozitivul dvs. are
suport construit în kernel sau diverse alte driver-e ce pot fi folosite. Luaţi
aminte că pentru uşurinţă, toate exemplele au diversele opţiuni compilate în
kernel. Dacă doriţi să aveţi un kernel modular, asiguraţi-vă că vă notaţi
diversele module şi modificaţi fişierele dvs. de configurare corespunzător.

</note>
<pre caption="opţiuni de compilare pentru kernel-urile 2.6">
Device Drivers  ---&gt;
  SCSI device support  ---&gt;

<comment>(Cu toate că SCSI va fi activat automat când selectăm USB Mass Storage,
va trebui să activăm opţiunea disk support.)</comment>
---   SCSI support type (disk, tape, CD-ROM)
&lt;*&gt;   SCSI disk support

<comment>(Apoi vă întoarceţi la pasul anterior şi mergeţi la USB support)</comment>
USB support  ---&gt;

<comment>(Acesta este hub-ul rădăcină şi este necesar pentru suport USB.
Dacă doriţi să-l compilaţi ca modul, va avea numele usbcore.)</comment>
&lt;*&gt; Support for Host-side USB

<comment>(Activaţi această opţiune pentru a vedea dispozitivele dvs. USB în /proc/bus/usb.
Opţiunea este recomandată.)</comment>
 [*]   USB device filesystem

<comment>(Selectaţi cel puţin unul din aceste controlere HCD.
Dacă sunteţi nesiguri, alegerea tuturor este perfectă.)</comment>
--- USB Host Controller Drivers
&lt;*&gt; EHCI HCD (USB 2.0) support
&lt; &gt; OHCI HCD support
&lt;*&gt; UHCI HCD (most Intel and VIA) support

<comment>(Mergând un pic mai jos, ajungem la opţiunile CDC şi mass storage.)</comment>
&lt; &gt; USB Modem (CDC ACM) support
&lt;*&gt; USB Printer support
&lt;*&gt; USB Mass Storage support
 [*]   USB Mass Storage Write-Protected Media Detection (EXPERIMENTAL)

<comment>(Apoi opţiunea HID. Trebuie să selectaţi suportul pentru dispozitive de intrare HID, dacă aveţi
un dispozitiv USB ca tastatura, mouse, joystick sau alt dispozitiv de intrare USB)</comment>
--- USB Input Devices
&lt;*&gt; USB Human Interface Device (full HID) support
 [*]   HID input layer support

<comment>(Dacă aveţi o placă de reţea USB cum este RTL8150, veţi avea nevoie de această opţiune)</comment>
USB Network Adapters  --->
    &lt;*&gt; USB RTL8150 based ethernet device support (EXPERIMENTAL)

<comment>(Dacă aveţi un convertor port serial în USB cum ar fi Prolific 2303,
veţi avea nevoie de această opţiune)</comment>
USB Serial Converter support  --->
    &lt;*&gt; USB Serial Converter support
    &lt;*&gt; USB Prolific 2303 Single Port Serial Driver (NEW)
</pre>

<p>
Acum că opţiunile dvs. sunt stabilite, puteţi (re)compila kernel-ul şi suportul
USB ar trebui să fie funcţional odată ce aţi repornit cu noul kernel. Acum
puteţi citi <uri link="#postkern">Demonstraţie a lucrului cu USB</uri> şi să
vedeţi dacă totul funcţionează cum trebuie.
</p>

</body>
</section>
<section id="oldkernelconfig">
<title>Opţiuni de configurare pentru un kernel 2.4.x</title>
<body>

<p>
Vom trece în revistă opţiunile ce vor trebui activate într-un kernel 2.4,
pentru a asigura suport USB corespunzător pentru dispozitivele noastre. Dacă
folosiţi un kernel 2.6, citiţi <uri link="#newkernelconfig">Opţiuni de
configurare pentru un kernel 2.6.x</uri>.
</p>

<note>
Exemplele din acest document vor prezenta opţiuni de configurare pentru un
suport USB de bază, care este necesar în mod obişnuit, de exemplu un dispozitiv
de stocare USB (cele mai multe camere şi dispozitive pendrive). Dacă aveţi un
dispozitiv USB specific ce trebuie configurat, consultaţi manualul
dispozitivului dvs. sau căutaţi online pentru a afla dacă dispozitivul dvs. are
suport construit în kernel sau diverse alte driver-e ce pot fi folosite. Luaţi
aminte că pentru uşurinţă, toate exemplele au diversele opţiuni compilate în
kernel. Dacă doriţi să aveţi un kernel modular, asiguraţi-vă că vă notaţi
diversele module şi modificaţi fişierele dvs. de configurare corespunzător.
</note>

<pre caption="opţiuni de compilare pentru kernel-urile 2.4">
<comment>(Următoarea configuraţie este doar pentru cei care au dispozitive de intrare USB.
Suportul principal pentru dispozitive de intrare va fi cerut mai târziu de USB HID.)</comment>
Input core support  ---&gt;
   &lt;*&gt; Input core support
   &lt; &gt;   Keyboard support
   &lt; &gt;   Mouse support
   &lt; &gt;   Event interface support

USB support  ---&gt;

<comment>(Acesta este hub-ul rădăcină şi este cerut pentru suportul USB.
Dacă doriţi să îl compilaţi ca modul, va avea numele usbcore.o)</comment>
&lt;*&gt; Support for USB

<comment>(Activaţi această opţiune pentru a vedea dispozitivele dvs. USB în /proc/bus/usb.
Opţiunea este recomandată.)</comment>
 [*]   Preliminary USB device filesystem

<comment>(Selectaţi cel puţin unul din aceste controlere HCD.
Dacă sunteţi nesiguri, alegerea tuturor este perfectă.)</comment>
--- USB Host Controller Drivers
&lt;*&gt;   UHCI Alternate Driver (JE) support
&lt; &gt;   OHCI (Compaq, iMacs, OPTi, SiS, ALi, ...) support

<comment>(Aceasta este secţiunea cu dispozitive. Selectaţi doar ce aveţi nevoie.)</comment>
--- USB Device Class drivers
&lt; &gt;   USB Audio support
&lt;*&gt;   USB Mass Storage support
&lt; &gt;   USB Modem (CDC ACM) support
&lt;*&gt;   USB Printer support

<comment>(Urmată de secţiunea HID. Aceasta este necesară dacă aveţi dispozitive de intrare bazate pe USB.)</comment>
--- USB Human Interface Devices (HID)
&lt;*&gt;   USB Human Interface Device (full HID) support
 [*]     HID input layer support

<comment>(Dacă aveţi un convertor  port serial - USB cum ar fi Prolific 2303,
veţi avea nevoie de această opţiune)</comment>
USB Serial Converter support  --->
    &lt;*&gt; USB Serial Converter support
    &lt;*&gt; USB Prolific 2303 Single Port Serial Driver (NEW)
</pre>

<p>
Acum că toate opţiunile sunt stabilite, puteţi (re)compila kernel-ul, iar
suportul USB ar trebui să fie funcţional odată ce aţi repornit sistemul cu noul
kernel.
</p>

</body>
</section>
</chapter>

<chapter id="postkern">
<title>Demonstraţie a lucrului cu USB</title>
<section>
<title>dmesg este prietenul dvs.!</title>
<body>

<p>
A venit vremea să ne jucăm cu aceste dispozitive USB :) Deci să îi dăm drumul.
În acest capitol, vom vedea cum răspunde sistemul unor diverse dispozitive USB.
Vom începe prin introducerea în sistem a unui dispozitiv de stocare a memoriei
Pen Drive, 512 MB. Puteţi folosi şi alte dispozitive similare. Vom folosi în
principal <c>dmesg</c> pentru a vedea ce se întâmplă şi cum răspunde sistemul
acestui dispozitiv.
</p>

<note>
<c>dmesg</c> oferă în general o mulţime de informaţii, înaintea celor de care
avem nevoie, pentru că citeşte din memoria buffer a kernel-ului, care conţine
toate mesajele de iniţializare de asemenea. Ieşirile, în exemplele următoare,
au doar porţiunile relevante şi spaţii în plus între ele pentru a obţine o
vizualizare mai bună. Dacă este nevoie, folosiţi parametrii <c>dmesg | more</c>
sau <c>dmesg | less</c> pentru a vedea mai bine informaţiile de ieşire ale
sistemului dvs.
</note>

<pre caption="informaţii rezultat ale dmesg pentru un Memory Stick">
<comment>(Conectaţi stick-ul într-un port USB disponibil şi apoi..)</comment>
# <i>dmesg | less</i>

<comment>(Dispozitivul este încărcat ca un dispozitiv USB 1.1 şi i se alocă o adresă.
De asemenea se afişează şi tipul dispozitivului controller folosit)</comment>
usb 1-1: new full speed USB device using uhci_hcd and address 2

<comment>(emularea SCSI automat este activată)</comment>
scsi0 : SCSI emulation for USB Mass Storage devices
usb-storage: device found at 2

<comment>(Acum sunt afişate informaţii referitoare la dispozitiv şi modelul acestuia)</comment>
usb-storage: waiting for device to settle before scanning
  Vendor: JetFlash  Model: TS512MJF2A        Rev: 1.00
  Type:   Direct-Access                      ANSI SCSI revision: 02
SCSI device sda: 1003600 512-byte hdwr sectors (514 MB)

<comment>(Protecţia la scriere este cod EXPERIMENTAL în ultimele versiuni de kernel)</comment>
sda: Write Protect is off
sda: Mode Sense: 0b 00 00 08
sda: assuming drive cache: write through
SCSI device sda: 1003600 512-byte hdwr sectors (514 MB)
/dev/scsi/host0/bus0/target0/lun0: p1
Attached scsi removable disk sda at scsi0, channel 0, id 0, lun 0
Attached scsi generic sg0 at scsi0, channel 0, id 0, lun 0,  type 0
usb-storage: device scan complete
<comment>(În acest moment, dispozitivul este accesibil prin mount-area /dev/sda1)</comment>

<comment>(Când dispozitivul este deconectat, sistemul reacţionează la acest lucru)</comment>
usb 1-1: USB disconnect, address 2
</pre>

<p>
Odată ce dispozitivul este conectat şi montat, îl puteţi accesa ca pe un disc
normal. Comenzi uzuale ca <c>cp</c>, <c>mv</c>, <c>rm</c> etc funcţionează
corect. Aţi putea crea, de asemenea, un sistem de fişiere pe stick-ul USB sau
să îl formataţi.
</p>

<pre caption="Accesarea stick-ului de memorie">
# <i>mount /dev/sda1 /mnt/usb</i>
# <i>df -h</i>
Filesystem            Size  Used Avail Use% Mounted on
/dev/hda8             9.4G  7.5G  1.9G  80% /
/dev/hda9              11G  8.1G  2.4G  78% /usr
none                  189M     0  189M   0% /dev/shm
/dev/sda1             490M   34M  457M   7% /mnt/usb
</pre>

<note>
Camerele digitale pot fi accesate în acelaşi mod ca dispozitivele de memorie.
Am o cameră Nikon Coolpix 5200 şi acesta este modul în care o accesez. Camerele
din ziua de astăzi deţin două moduri de a transfera fotografiile; comportarea
ca un dispozitiv de stocare USB şi prin modul PTP (Picture Transfer Protocol).
este setată să se comporte ca un dispozitiv de stocare USB şi procedura este
exact aceeaşi, din această cauză nu am explicat în detaliu aceleaşi lucruri.
Luaţi aminte că această metodă nu poate funcţiona în toate cazurile şi cu
toate camerele digitale care au suport USB.
</note>

<p>
Cum va apare un dispozitiv mouse USB în cazul în care aveţi unul? Va fi afişat
ca un dispozitiv HID.
</p>

<pre caption="Dispozitiv Mouse Optic USB">
# <i>dmesg | grep USB</i>
drivers/usb/input/hid-core.c: v2.0:USB HID core driver
usb 1-1: new low speed USB device using address 2
input: USB HID v1.10 Mouse [Logitech USB-PS/2 Optical Mouse] on usb-0000:00:07.2-1
</pre>

<p>
O altă comandă grozavă ce poate fi folosită pentru a vedea starea porturilor
dvs. USB este <c>lsusb</c>. Este parte a pachetului <c>sys-apps/usbutils</c> şi
va fi prezentarea acesteia este acoperită în următorul capitol.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Spaţiu Utilizator USB</title>
<section>
<title>Unelte grozave</title>
<body>

<p>
Până acum am văzut cât de mult suport există pentru USB, din punct de vedere al
kernel-ului/sistemului Linux. Vom arunca o privire asupra suportului asigurat
de Gentoo pentru USB, în spaţiul utilizator.
</p>

<p>
Una din cele mai folositoare unelte este <c>lsusb</c>. Aceasta afişează toate
dispozitivele USB conectate în sistem. Instalarea este rapidă.
</p>

<pre caption="Instalarea usbutils">
# <i>emerge usbutils</i>
</pre>

<p>
Odată instalat, rulaţi <c>lsusb</c> pentru a primi simple informaţii
referitoare la dispozitivele USB ataşate maşinii dvs.
</p>

<note>
În cele mai multe cazuri, trebuie să aveţi drepturi root pentru a rula
<c>lsusb</c>.
</note>

<warn>
<c>lsusb</c> citeşte informaţiile referitoare la dispozitivele USB din
<path>/proc/bus/usb</path>. Dacă nu aţi activat această opţiune în kernel, sunt
şanse ca <c>lsusb</c> să nu funcţioneze deloc. Asiguraţi-vă că aveţi activat în
kernel-ul dvs. suportul pentru sistemul de fişiere <path>/proc</path> şi că
<c>usbfs</c> este mount-at în <path>/proc/bus/usb</path> (ceea ce ar trebui să
se întâmple automat).
</warn>

<pre caption="lsusb la lucru">
# <i>lsusb</i>
<comment>(Acesta este un stick de memorie de 512 MB de la Transcend)</comment>
Bus 001 Device 003: ID 0c76:0005 JMTek, LLC. USBdisk
<comment>(Acesta este dispozitivul mouse optic)</comment>
Bus 001 Device 002: ID 046d:c00e Logitech, Inc. Optical Mouse
<comment>(Acesta este hub-ul rădăcină)</comment>
Bus 001 Device 001: ID 0000:0000
</pre>

<p>
Dacă sunteţi de genul celor ce adoră să vadă multe informaţii, aveţi opţiunea
rulării <c>lsusb -v</c>. Încercaţi-o şi vedeţi cantitatea de informaţii pe care
o oferă. O altă bună opţiune se referă la faptul că <c>lsusb</c> arată ierarhia
fizică curentă USB ca un arbore şi astfel face mai uşor de înţeleasă harta
exactă a dispozitivelor. Comanda este <c>lsusb -t</c>. De exemplu,
</p>

<pre caption="lsusb arătând ierarhia USB">
# <i>lsusb -t</i>
Bus#  1
`-Dev#   1 Vendor 0x0000 Product 0x0000
  |-Dev#   2 Vendor 0x046d Product 0xc00e
  `-Dev#   3 Vendor 0x0c76 Product 0x0005
</pre>

<p>
Puteţi uşor corela rezultatele <c>lsusb</c> şi <c>lsusb -t</c>, ce ajută
depanarea ca şi înţelegerea modului de funcţionare al USB.
</p>

</body>
</section>
<section>
<title>Conectare Hot sau Cold ??</title>
<body>

<p>
Gentoo foloseşte două pachete, <c>sys-apps/hotplug</c> şi
<c>sys-apps/coldplug</c> pentru a realiza ceva magie cu dispozitivele
<e>hot-pluggable</e>. Ca în cazul oricărei magii, există o logică simplă în
spatele acesteia, de asemenea. Vom vedea acum ce este, şi să sperăm că în acest
proces vom fi apţi să înţelegem mai bine aceste două pachete gemene.
</p>

<p>
Firmware-ul poate fi definit ca software în hardware, ce este încărcat şi
executat, dar care nu poate fi modificat uşor. Multe dispozitive au firmware
încorporat pentru siguranţa corectei funcţionări şi adesea firmware-ul poate
conţine cod critic, pentru a avea siguranţa că hardware-ul va funcţiona aşa cum
s-a prevăzut. Firmware-ul este prezent într-o largă varietate de componente de
calculator, de la chip-uri ROM până la avansate card-uri USB şi PCMCIA. Când un
dispozitiv este conectat, firmware-ul (care în unele cazuri poate fi chiar
driver-ul) este citit şi încărcat în memorie după care dispozitivul poate fi
folosit de sistem.
</p>

<p>
Pentru a scurta lunga poveste, Gentoo foloseşte <c>sys-apps/hotplug</c> pentru
lucrul cu firmware-ul în cazul dispozitivelor <e>hot-pluggable</e>.
<c>sys-apps/hotplug</c> va folosi firmware-ul corespunzător pentru a face
respectivul dispozitiv utilizabil. Firmware-ul ar trebui pus în directorul
<path>/lib/firmware</path> şi încărcat de acolo. Rezolvarea este simplă;
obişnuita comandă emerge va face acest lucru.
</p>

<pre caption="Instalarea hotplug">
# <i>emerge hotplug</i>
</pre>

<p>
Acum întrebarea evidentă ar fi, ce este coldplug şi de ce este necesar?
<c>sys-apps/coldplug</c> are acelaşi rol ca hotplug, dar îl îndeplineşte pentru
dispozitivele <e>hot-pluggable</e> care sunt deja conectate în momentul
pornirii. Un bun exemplu în acest caz ar fi un card de reţea USB. Înainte,
hotplug era pachetul responsabil cu lucrul în ambele situaţii, dar apoi a
fost împărţit în hotplug şi coldplug, coldplug efectuând tot ce este necesar.
Instalaţi-l dacă aveţi dispozitive <e>hot-pluggable</e> pe care trebuie să le
activaţi la pornire.
</p>

<pre caption="Instalarea coldplug">
# <i>emerge coldplug</i>
<comment>(Şi îl puteţi adăuga în nivelul de iniţializare boot)</comment>
# <i>rc-update add coldplug boot</i>
 * coldplug added to runlevel boot
 * rc-update complete.
</pre>

<note>
Script-ul de iniţializare de mai sus are acelaşi rol ca şi cel pe care îl avea
cel al hotplug (pentru dispozitive hot-pluggable deja ataşate). Script-ul
curent <path>/etc/init.d/hotplug</path> nu face altceva decât să verifice dacă
opţiunea CONFIG_HOTPLUG este activată pentru kernel-ul curent.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Şi mulţumiri către...</title>
<section>
<title>Referinţe</title>
<body>

<p>
Un număr bun de documente online m-au ajutat în timpul redactării acestui
material, şi iată câteva care sunt de înalt nivel tehnic dar cu adevărat
interesante. Cred că acestea merită creditul nostru. Deci, iată-le!
</p>

<ul>
  <li><uri link="http://www.usb.org">Site-ul Oficial USB</uri></li>
  <li>
    <uri link="http://www.usb.org/about/faq">Întrebări Frecvente despre
    USB</uri>
  </li>
  <li>
    <uri
    link="http://h18000.www1.hp.com/productinfo/development/openhci.html">Standardul
    OHCI de la Compaq</uri>
  </li>
  <li>
    <uri
    link="http://developer.intel.com/technology/usb/uhci11d.htm">Standardul
    UHCI de la Intel</uri>
  </li>
  <li>
    <uri link="http://www.intel.com/technology/usb/ehcispec.htm">Standardul
    EHCI de la Intel</uri>
  </li>
</ul>

</body>
</section>
<section>
<title>Alte Referinţe Interesante</title>
<body>

<ul>
  <li><uri link="/doc/en/liveusb.xml">Ghidul Gentoo Linux pentru LiveUSB</uri></li>
</ul>

</body>
</section>
</chapter>
</guide>
