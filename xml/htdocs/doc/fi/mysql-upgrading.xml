<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fi/mysql-upgrading.xml,v 1.12 2012/04/18 18:30:21 swift Exp $ -->

<guide lang="fi">
<title>Ohje MySQL 4:n tai 5.0:n päivitykseen</title>

<author title="Tekijä">
  <mail link="citizen428@gentoo.org">Michael Kohl</mail>
</author>
<author title="Tekijä">
  <mail link="vivo@gentoo.org">Francesco Riosa</mail>
</author>
<author title="Kääntäjä">
  <mail link="rogkaa@gmail.com">rogk</mail>
</author>
<author title="Vastuullinen kääntäjä">
  <mail link="flammie@gentoo.org">Flammie Pirinen</mail>
</author>

<abstract>
MySQL 5 löytyy pian Gentoon portagepuusta
epävaakaana versiona. Tässä on päivitysohje kaikille halukkaille testaajille.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.17</version>
<date>2007-06-04</date>

<chapter>
<title>Suora päivitys, suositus välillä 4.1 ⇒ 5.0</title>
<section>
<body>

<p>
Myisam-engine MySQL 4.1:ssä on riittävän valmis suoraan päivitykseen
major-versioiden välillä:
</p>

<note>
Tämä ei päde jos käytetään MERGE-tauluja. Silloin suora päivitys tuottanee
ongelmia. Nämä taulut pitää dumpata ja luoda uudestaan ja palauttaa sisällöt
käsin päivitettäessä. Jollet tiedä miten tämä tapahtuu, suorita
<uri link="#doc_chap2">päivitys vanhemmista MySQL:n versioista</uri>.
</note>

<p>
Tähän tarvitaan kahta shelliä, koska lukot ovat sessiokohtaisia.
</p>

<pre caption="Suora päivitys 4.1 5.0">
# <i>quickpkg dev-db/mysql</i>
# <i>alias MYSQL="mysql --user=root --password=</i><comment>'your_password'</comment><i>"</i>
# <i>DATADIR=$(MYSQL --batch --raw --silent --skip-column-names \</i>
     <i>--execute='SHOW variables LIKE "datadir";' \</i>
  <i>| sed -e 's|datadir[ \t]||')</i>
<comment>(Tämä tehdään toiselta shelliltä, korvaa <i>salasana</i> salasanallasi)
</comment>
# <i>mysql --user=root --password=</i><comment>'salasana'</comment>
mysql&gt; <i>FLUSH TABLES WITH READ LOCK;</i>
# <i>MYSQL --execute="FLUSH TABLES WITH READ LOCK;"</i>
<comment>(Palaa ensimmäiselle shellille:)</comment>
# <i>tar -cjpvf ~/mysql.$(date +%F"T"%H-%M).tar.bz2 \</i>
<i>/etc/conf.d/mysql /etc/mysql/my.cnf "${DATADIR}"</i>
<comment>(Toisella shellillä:)</comment>
mysql&gt; <i>UNLOCK TABLES;</i>
mysql&gt; <i>quit</i>
<comment>(Ensimmäisellä shellillä:)</comment>
# <i>tar -tjvf ~/mysql.*.tar.bz2</i>
# <i>emerge -av "&gt;dev-db/mysql-5.0"</i>
# <i>dispatch-conf</i>
# <i>revdep-rebuild</i>
# <i>/etc/init.d/mysql restart</i>
# <i>mysql_upgrade_shell --user=root --password=</i><comment>'your_password'</comment><i> \</i>
     <i>--protocol=tcp --datadir="${DATADIR}"</i>
# <i>/etc/init.d/mysql restart</i>
# <i>unset DATADIR</i>
# <i>unalias MYSQL</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>MySQL-päivitys vanhasta versioista</title>
<section>
<body>

<p>
Käyttäjien, jotka päivittävät vanhemmasta (&lt;4.0.24) MySQL-versiosta,
täytyy ensin asentaa MySQL 4.0.25. Jos sinulla on jo käytössäsi tämä
versio, voit jättää väliin tämän osan ja
<uri link="#backup">siirtyä seuraavaan</uri>.
</p>

<pre caption="Suora päivitys">
# <i>emerge -av --buildpkg "&lt;mysql-4.1"</i>
</pre>

</body>
</section>
</chapter>

<chapter id="backup">
<title>Nykyisten tietojen varmuuskopiointi</title>
<section>
<body>

<impo>
Ensiöavaimet toimivat eri tavoin eri MySQL:issä, <uri
link="http://bugs.gentoo.org/108502">Gentoon bugi 108502</uri> sisältää
lisätietoja liittyvistä ongelmista. Suositeltavaa on etsiä arvoja 0 tai
vähemmän ja korvata ne arvoiksi 1 tai enemmän.
</impo>

<p>
Yksi tärkeimmistä tehtävistä, mikä jokaisen tietokannoista vastaavan
järjestelmänvalvojan tulee suorittaa, on varmuuskopionti. Ja se menee näin:
</p>

<pre caption="Varmuuskopioidaan kaikki tietokannat">
# <i>mysqldump \</i>
  <i>-uroot \</i>
  <i>--password=</i>'<comment>salasana</comment>'<i> \</i>
  <i>-hlocalhost \</i>
  <i>--all-databases \</i>
  <i>--opt \</i>
  <i>--allow-keywords \</i>
  <i>--flush-logs \</i>
  <i>--hex-blob \</i>
  <i>--master-data \</i>
  <i>--max_allowed_packet=16M \</i>
  <i>--quote-names \</i>
  <i>--result-file=BACKUP_MYSQL_4.0.SQL</i>
</pre>

<p>
Nyt sinulta pitäisi löytyä tiedosto nimeltä, <path>BACKUP_MYSQL_4.0.SQL</path>,
mitä voidaan myöhemmin käyttää tietojen palauttamiseen. Tiedot ovat kuvattu
MySQL:n SQL-kielellä (Structured Query Language).
</p>

<p>
Nyt on hyvä aika todeta tehdyn varmuuskopionnin toimivuus.

</p>

</body>
</section>
</chapter>

<chapter>
<title>Päivittäminen tuoreemmasta MySQL-versiosta</title>
<section>
<body>

<p>
Jos hyppäsit kohdan 1 yli, sinun täytyy nyt luoda varmuuskopio nykyisestä
tietokanta-palvelimen (ei tietojen) versiosta:
</p>

<pre caption="Binääri-pakettien varmuuskopionti">
# <i>quickpkg dev-db/mysql</i>
</pre>

<p>
Nyt poistetaan nykyinen versio ja kaikki siihen liittyvät tieto:
</p>

<pre caption="Poistetaan MySQL">
# <i>/etc/init.d/mysql stop</i>
# <i>emerge -C mysql</i>
# <i>tar cjpvf ~/mysql.$(date +%F"T"%H-%M).tar.bz2 /etc/mysql/my.cnf /var/lib/mysql/</i>
# <i>ls -l ~/mysql.*</i>
# <i>rm -rf /var/lib/mysql/ /var/log/mysql</i>
</pre>

<note>
Nyt sinulla pitäisi olla kaksi erillaista varmuuskopiota: SQL, mikä on
siirrettävissä eri MySQL versioiden välillä, ja toinen, joka mahdollistaa
tietokantojen nopean palautuksen. Tästä kerrotaan tarkemmin myöhemmässä
vaiheessa tätä ohjetta.
</note>

<p>
Sen jälkeen, kun olet poistanut vanhan MySQL-asennuksen, voit asentaa tilalle
uuden. Huomaa, että <c>revdep-rebuild</c> on välttämätön rakennettaessa
uudelleen MySQL linkityksiä.
</p>

<pre caption="Päivitetään binäärit">
# <i>emerge -av "&gt;mysql-4.1"</i>
<comment>(Myös dispatch-confia voi käyttää)</comment>
# <i>etc-update</i>
# <i>revdep-rebuild</i>
</pre>

<p>
Määrittele nyt asetukset juuri asennettuun MySQL-versioon ja käynnistä palvelu
uudelleen.
</p>

<pre caption="Määrittele MySQL:n perusasetukset">
# <i>emerge --config =mysql-4.1.<comment>&lt;mikroversio&gt;</comment></i>
# <i>/etc/init.d/mysql start</i>
</pre>

<p>
Lopuksi voit tuoda varmuuskopiot, jotka loit kohdassa 2:
</p>


<impo>
Oletuksena asetustiedostossa <path>/etc/mysql/my.cnf</path> on päällä
binäärimuotoinen lokikirjoitus (<c>log-bin</c>). Tähän lokiin kirjoitetaan
kaikki transaktiot, jotka voivat muuttaa dataa. Isoissa tietokannoissa
(yli 1 gigan) tämä luo nopeasti kookkaita lokeja. Jos levytilaa on vähän,
lokien poistaminen käytöstä saattaa auttaa.
</impo>

<impo>
Oletusmerkistö Gentoon MySQL:ssä 4.1:stä lähtien on <c>UTF-8</c>. Jos
lähdedatassa oli ASCII-alueen ulkopuolisia merkkejä, tietokannan
merkistö saattaa tarvita säilyttää vanhana korvaamalla <c>utf8</c>:t
<c>latin1</c>:llä tiedostossa <path>/etc/mysql/my.cnf</path>. Lisää
aiheesta kerrotaan
<uri link="#On_charset_conversion">merkistömuunnos-kappaleessa</uri>.
</impo>

<impo>
Ylläpidollisen <c>mysql</c>-kannan, joka sisältää käyttäjänimet ja
salasanat, <e>pitää olla</e> UTF-8:na.
</impo>

<p>
Vanhemmat mysqldumpit saattavat viedä tauluja väärässä järjestyksessä
foreign key -constraintienn kanssa. Tämän voi kiertää SQL:llä seuraavasti:
</p>

<pre caption="Korjataan foreign keyt">
SET FOREIGN_KEY_CHECKS=0
SET FOREIGN_KEY_CHECKS=1
</pre>

<pre caption="Palautetaan SQL-varmuuskopio">
# <i>cat BACKUP_MYSQL_4.0.SQL \</i>
     <i>| mysql \</i>
     <i>-uroot \</i>
     <i>--password=</i>'<comment>salasana</comment>'<i> \</i>
     <i>-hlocalhost \</i>
     <i>--max_allowed_packet=16M</i>

# <i>mysql_fix_privilege_tables \</i>
     <i>--defaults-file=/etc/mysql/my.cnf \</i>
     <i>--user=root \</i>
     <i>--password=</i>'<comment>salasana</comment>'
</pre>

<p>
Jos nyt käynnistät uudelleen MySQL-palvelun ja kaikki on mennyt niinkuin
pitikin, sinulla on nyt toimiva versio 4.1.x!
</p>

<pre caption="Käynnistä MySQL uudelleen">
# <i>/etc/init.d/mysql restart</i>
</pre>

<p>
Jos kohtaat ongelmia päivittäessäsi, ilmoitathan niistä
<uri link="https://bugs.gentoo.org">Gentoon bugzillaan</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Palautetaan vanha MySQL 4.0-asennus</title>
<section>
<body>

<p>
Jos et ole tyytyväinen MySQL 4.1:een, on mahdollista palata takaisin MySQL
4.0:aan.
</p>

<pre caption="Paluu vanhaan">
# <i>/etc/init.d/mysql stop</i>
# <i>emerge -C mysql</i>
# <i>rm -rf /var/lib/mysql/ /var/log/mysql</i>
# <i>emerge --usepkgonly "&lt;mysql-4.1"</i>
<comment>(korvaa &lt;aika&gt; sillä, mitä käytit varmuuskopiodessasi.)</comment>
# <i>tar -xjpvf mysql.&lt;aika&gt;.tar.bz2 -C /</i>
# <i>/etc/init.d/mysql start</i>
</pre>

<impo>
Jos muita mysql-sovelluksia on asennettu päivityksen jälkeen, pitää
suorittaa <c>revdep-rebuild</c>, joka varmistaa että ohjelmat linkittävät
oikeaan mysqlclient.sohon.
</impo>

</body>
</section>
</chapter>
<chapter id="On_charset_conversion">
<title>Merkistömuunnos</title>
<section>
<title>Johdanto</title>
<body>

<p>
Tämä ei ole täydellinen opas muunnoksiin vaan lyhyt ohje, josta saa
vähän tietoa mitä saattaa joutua tekemään.
</p>

<p>
Tietokannan muunnos on monimutkainen tehtävä ja vaikenee datan
monipuolistuessa. Sarjallistetut oliot ja binääridata ovat esimerkiksi
vaikeasti hallittavia muunnoskohteita.
</p>

</body>
</section>
<section>
<title>Indeksit</title>
<body>

<p>
Jokainen UTF-8-merkki on indeksin kannalta 3 tavua. MySQL-indeksien ko’on
yläraja on 1000 tavua (767 InnoDB-tauluissa). Huomaa, että rajat on annettu
tavuissa, vaikka sarakkeiden koko lasketaan merkeissä.
</p>

<p>
MySQL:ssä voi myös tehdä indeksejä sarakkeiden osista, josta voi olla apua.
Alla muutama esimerkki:
</p>

<pre caption="Indeksointi prefikseillä">
$ <i>mysql -uroot -p'<comment>salasana</comment>' test</i>

mysql> <i>SHOW variables LIKE "version" \G</i>
*************************** 1. row ***************************
Variable_name: version
    Value: <comment>5.0.24-log</comment>
1 row in set (0.00 sec)

mysql> <i>CREATE TABLE t1 (</i>
  ->   <i>c1 varchar(255) NOT NULL default '',</i>
  ->   <i>c2 varchar(255) NOT NULL default ''</i>
  ->   <i>) ENGINE=MyISAM DEFAULT CHARSET=utf8;</i>
Query OK, 0 rows affected (0.01 sec)

mysql> <i>ALTER TABLE t1</i>
  ->   <i>ADD INDEX idx1 ( c1 , c2 );</i>
<comment>ERROR 1071 (42000): Specified key was too long; max key length is 1000 bytes</comment>

mysql> <i>ALTER TABLE t1</i>
  ->   <i>ADD INDEX idx1 ( c1(165) , c2(165) );</i>
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> <i>CREATE TABLE t2 (</i>
  ->   <i>c1 varchar(255) NOT NULL default '',</i>
  ->   <i>c2 varchar(255) NOT NULL default ''</i>
  ->   <i>) ENGINE=MyISAM DEFAULT CHARSET=sjis;</i>
Query OK, 0 rows affected (0.00 sec)

mysql> <i>ALTER TABLE t2</i>
  ->   <i>ADD INDEX idx1 ( c1(250) , c2(250) );</i>
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> <i>CREATE TABLE t3 (</i>
  ->   <i>c1 varchar(255) NOT NULL default '',</i>
  ->   <i>c2 varchar(255) NOT NULL default ''</i>
  ->   <i>) ENGINE=MyISAM DEFAULT CHARSET=latin1;</i>
Query OK, 0 rows affected (0.00 sec)

mysql> <i>ALTER TABLE t3</i>
  ->   <i>ADD INDEX idx1 ( c1 , c2 );</i>
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0
</pre>

</body>
</section>
<section>
<title>Ympäristö</title>
<body>


<p>
Järjestelmän pitää tukea käytettyä UTF-8-lokaalia. Lisätietoja tästä löytää
<uri link="/doc/fi/utf-8.xml">UTF-8-oppaasta</uri> ja
<uri link="/doc/fi/guide-localization.xml">Paikallisasetusoppaasta</uri>.
</p>

<p>
Tässä esimerkissä asetamme ympäristön suomenkieliseksi UTF-8-järjestelmäksi
käyttäen järjestelmänlaajuista asetustiedostoa
<path>/etc/env.d/02locale</path>:
</p>

<pre caption="/etc/env.d/02locale-asetukset">
LC_ALL=en_US.UTF-8
LANG=en_US.UTF-8
</pre>

<p>
Muista ajaa <c>env-update &amp;&amp; source /etc/profile</c> muokkaamisen
jälkeen.
</p>

</body>
</section>
<section>
<title>Iconv</title>
<body>

<p>
<c>Iconv</c>, kuuluu pakettiin <c>sys-libs/glibc</c>. Sitä käytetään
tekstitiedostojen muunnoksessa merkistöjen välillä. Myös pakettia
<c>app-text/recode</c> voi käyttää.
</p>

<pre caption="Using iconv">
<comment>(latin1:stä UTF-8:ksi)</comment>
$ <i>iconv -f ISO-8859-15 -t UTF-8 file1.sql &gt; file2.sql</i>

<comment>(japanista UTF-8:ksi)</comment>
$ <i>iconv -f ISO2022JP -t UTF-8 file1.sql &gt; file2.sql</i>
</pre>

<p>
<c>Iconv</c> muuntaa sql-kannan vaikka käyttöympäristö ei ole
UTF-8-asetuksilla.
</p>

</body>
</section>
<section>
<title>SQL-muunnokset</title>
<body>

<p>
SQL-skripteissä voi käyttää <c>CONVERT()</c>- ja <c>CAST()</c>-funktioita
muunnosten toteuttamiseen.
</p>

</body>
</section>
<section>
<title>Apache</title>
<body>

<p>
UTF-8:n käyttö apachessa vaatii asetuksia tiedostossa <path>httpd.conf</path>:
AddDefaultCharset, CharsetDefault, CharsetSourceEnc.
Jos lähdetiedostot eivät ole UTF-8:aa, nekin pitää muuntaa <c>iconv</c>illa
tai <c>recode</c>lla.
</p>

</body>
</section>
</chapter>
</guide>
