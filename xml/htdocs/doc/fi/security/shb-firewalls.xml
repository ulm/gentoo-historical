<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fi/security/shb-firewalls.xml,v 1.1 2006/07/18 14:15:27 flammie Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.1</version>
<date>2005-10-16</date>

<section>
<title>Palomuuri</title>
<body>

<p>
Palomuurin luullaan usein antavan lopullisen tietoturvan, mutta se ei aivan
pidä paikkaansa. Väärin asetettu palomuuri on vähemmän tietoturvallinen kuin
ei palomuuria ollenkaan. Palomuuria pitää myös käsitellä kuten muutakin
ohjelmistoa, koska siinäkin voi olla bugeja.
</p>

<p>
Kannattaa harkita ennen palomuurin toteuttamista. Jos se on tarpeellinen,
tulee pohtia miten se toimisi, minkätyyppinen se olisi ja kuka sitä käyttäisi.
Ensin lue kuitenkin tämä opas.
</p>

<p>
Palomuureja käytetään kahdesta keskeisestä syystä:
</p>

<ul>
<li>Käyttäjien pitämiseksi ulkona (matojen tai hyökkääjien)</li>
<li>Käyttäjien pitämiseksi sisällä (työntekijöiden tai lasten)</li>
</ul>

<p>
Palomuureja on kolmea tyyppiä:
</p>

<ul>
<li>pakettisuodattimia</li>
<li>Circuit relay</li>
<li>ohjelmistoportteja.</li>
</ul>

<p>
Palomuurin tulisi olla erillinen kone, jolla ei ajeta mitään palveluita (tai
enintään <c>sshd</c>:tä). Se kannattaisi suojata kuten tämä opas kertoo.
</p>

</body>
</section>
<section>
<title>Pakettisuodatin</title>
<body>

<p>
Kaikki verkon data lähetetään paketteina. Suuri verkkoliikennemäärä jaetaan
pienempiin paketteihin ja kootaan takaisin kohteessa. Jokaisessa paketissa
on otsake, joka kertoo minne se on menossa. Pakettisuodatin käyttää juuri
tätä otsaketta. Suodatus perustuu pakettien hylkäämiseen ja hyväksymiseen
perusteena:
</p>

<ul>
<li>lähde- tai kohde-IP-osoite</li>
<li>lähde- tai kohde-portti</li>
<li>yhteyskäytäntö tai</li>
<li>yhteyskäytännön asetukset</li>
</ul>

<p>
Suodatus perustuu siis käytännössä kaikkeen dataan otsakkeessa, eikä juurikaan
sisältöön.
</p>

<p>
Heikkoudet:
</p>

<ul>
<li>
  Osoitetiedossa voi käyttää huijattua IP:tä (ns. spoofattua osoitetta)
</li>
<li>
  Paketin sisältö saattaa olla tarkoiteuttu hyväksikäyttämään tunnettua 
  virhettä palomuurissa tai sen takana olevassa palvelussa.
</li>
<li>Pullonkaula</li>
</ul>

<p>
Hyödyt:
</p>

<ul>
<li>Yksinkertainen ja helppo toteuttaa</li>
<li>
  Voi antaa varoituksen tulevasta hyökkäyksestä (esim. tunnistamalla
  porttiskannauksen)
</li>
<li>Pysäyttää SYN-hyökkäykset</li>
</ul>

<p>
Ilmaisia pakettisuodattimia Linuxille:
</p>

<ul>
<li><uri link="http://www.iptables.org">Iptables</uri></li>
<li>
  <uri link="http://www.linuxdocs.org/HOWTOs/IPCHAINS-HOWTO.html">Ipchains</uri>
</li>
<li><uri link="http://www.smoothwall.org">SmoothWall</uri></li>
</ul>
<!--FIXME: should SmoothWall really be included, since it uses iptables?-->
<note>
Iptables on suositeltu, Ipchains vanhentunut.
</note>

</body>
</section>
<section>
<title>Circuit relay</title>
<body>

<p>
Circuit relay on palomuuri, joka tarkastaa yhteydenotot ennen kuin päästää
dataa lävitse. Paketteja ei siis hyväksytä tai hylätä paketin otsakkeen 
perusteella, vaan tarkastamalla yhteyden päätepisteiden sopivuuden sääntöihin
ennen kuin yhteys avataan. Suodatus perustuu:
</p>

<ul>
<li>lähde- tai kohde-IP-osoitteeseen</li>
<li>lähde- tai kohdeporttiin</li>
<li>ajanjaksoon</li>
<li>yhteyskäytäntöön</li>
<li>käyttäjään</li>
<li>salasanaan</li>
</ul>

<p>
Kaikki liikenne tarkastetaan ja ei-haluttu ohitetaan.
</p>

<p>
Heikkoudet:
</p>

<ul>
<li>
  Toimii tiedonsiirtotasolla ja vaatii muutoksia ohjelmiin, jotka tarjoavat
  tiedonsiirtotoiminnot.
</li>
</ul>

</body>
</section>
<section>
<title>Sovelluspalomuuri</title>
<body>

<p>
Sovellustason palomuuri on välitin ohjelmille. Se hoitaa tiedonsiirtoa
etäjärjestelmien kanssa asiakasohjelmien sijaan. Sovelluspalomuuri kuuluu
DMZ-alueelle (De-Militarized Zone, se osio yksityistä verkkoa joka näkyy
palomuurin takaa) tai palomuurin taakse. Suodatus perustuu:
</p>

<ul>
<li>lähde- tai kohde-IP-osoitteeseen</li>
<li>paketin sisältöön</li>
<li>tiedostotyyppiin tai tiedoston tarkenteeseen</li>
</ul>

<p>
Hyödyt:
</p>

<ul>
<li>Voi pitää tietoja välimuistissa ja parantaa verkon tehokkuutta</li>
<li>Kirjaa kaikki yhteydet</li>
<li>Skaalautuu (välittimet voivat jakaa välimuistidataa)</li>
<li>Ei suoraa pääsyä ulkopuolelta</li>
<li>Voi muutella pakettien sisältöjä lennosta</li>
</ul>

<p>
Heikkoudet:
</p>

<ul>
<li>Säätäminen on hankalaa</li>
</ul>

<p>
Sovelluspalomuureja pidetään parhaana ratkaisuna tietoturvaan, sillä ne eivät
tarvitse rootin oikeuksia ja koneet niiden takana eivät näy Internetiin.
</p>

<p>
Vapaa sovelluspalomuuri:
</p>

<ul>
<li><uri link="http://www.squid-cache.org/">Squid</uri></li>
</ul>

</body>
</section>
<section>
<title>Iptables</title>
<body>

<p>
Iptables pitää lisätä ytimeen, jotta se toimisi. Sen voi lisätä moduulina,
jolloin iptables latautuu tarvittaessa tai kääntää ytimeen (varsinkin jos
ladattavien moduulien tuki on poistettu kuten aiempana ehdotettiin).
Lisätietoja iptablesin asetuksista on ohjeessa <uri
link="http://iptables-tutorial.frozentux.net/iptables-tutorial.html#PREPARATIONS">Iptables
Tutorial Chapter 5: Preparations</uri>. Kun ydin käännetty, pitää 
<c>iptables</c>-ohjelma hankkia asentamalla se emergellä.
</p>

<p>
Seuraavaksi testataan toimivuutta komennolla <c>iptables -L</c>. Jos se ei
toimi, pitää asetukset tarkistaa vielä.
</p>

<p>
Iptables on uusi ja parannettu pakettisuodatin Linuxin versiosta 2.4 lähtien.
Se korvaa aiemman ipchainsin Linux-2.2:sta. Tärkeimpiä uudistuksia on
tilainen pakettisuodatus, jonka avulla voi seurata yhteyksiä.
</p>

<p>
TCP-yhteys koostuu paketeista, jotka sisältävät lähde-IP-osoitteen,
kohde-IP-osoitteen, lähdeportin, kohdeportin ja järjestysluvun kokoamista
varten. TCP on yhteyksittäinen käytäntö, kun taas UDP yhteysriippumaton.
</p>

<p>
TCP-paketin otsakkeesta selviää, onko se osa jo olemassaolevaa yhteyttä, ja 
sen perusteella palomuuri voi päättää hyväksyykö vai hylkääkö paketin.
</p>

<p>
Tilaista pakettisuodatinta voi huijata hyväksymään vääriä paketteja
muokkaamalla TCP-pakettien otsakkeita. Esimerkiksi SYNiä tai muita flägejä
säätämällä paketin saa näyttämään toiseen yhteyteen kuuluvaksi, sillä
pakettisuodatin ei itsessään toteuta yhteyksien seurantaa. Tilaisella
pakettisuodattimella tällaiset paketit on mahdollista sivuuttaa, kun
ne eivät kuulu olemassaolevaan yhteyteen. Tällä myös vältetään
piilotetumpia stealth-skannauksi, joissa käytetään paketteja, jotka
palomuurit harvemmin huomioivat kuin tavalliset SYN-paketit.
</p>

<p>
Iptables sisältää muitakin ominaisuuksia, kuten NATtauksen (engl. Network
Address Translation) ja rajoitukset. Rajoituksilla voi estää tietyntyyppisiä
DoS-hyökkäyksiä kuten SYN-floodeja.
</p>

<p>
TCP-yhteyden ns. kättelyvaihe koostuu kolmesta osasta. Kun yhteyttä luodaan,
asiakas lähettää ensin SYNillisen paketin, johon palvelin vastaa SYN+ACK.
Kun asiakas saa SYN+ACK-paketin, se vastaa siihen ACKilla luoden yhteyden.
</p>

<p>
SYN-floodi toteutetaan lähettämällä SYNejä vastaamatta SYN+ACK-paketteihin.
Asiakas voi kehitellä pakettiin myös väärän lähde-IP-osoitteen, koska sen
ei tarvitse kuitenkaan vastata. Palvelinjärjestelmä joutuu SYNin saatuaan
lisäämään yhteyden jonoon osittain avattuja yhteyksiä odottamaan ACKia
ennen kuin se pystytään poistamaan jonosta. Kun jonossa on vain rajattu
määrä paikkoja, se täyttyy odottavista yhteyksistä eikä palvelin voi
vastata uusiin pyyntöihin. Kuitenkin kun ACK-pakettia ei tule tietyn
ajan kuluessa, odottava yhteys aikakatkaistaan. Aikakatkaisu on tyypillisesti
noin 30—60 sekuntia tai enemmänkin. Asiakas laatii hyökkäyksen tekemällä
joukon SYN-paketteja väärillä IP-osoitteilla ja lähettämällä ne
mahdollisimman nopeasti täyttämään jonoa ja estämään muita yhteyksiä
toimimasta.
</p>

<p>
Tämän ratkaisemiseksi rajoitukset ovat tehokkaita. SYN-pakettien määrää voi
rajoittaa valitsimilla <c>-m limit --limit 1/s</c>, jotka rajaavat
SYNien määrän yhteen sekunnissa, joka estää SYN-floodien toimivuutta.
</p>

<note>
Toinen vaihtoehto SYN-floodien estoon on <uri link =
"http://cr.yp.to/syncookies.html">SYN cookies</uri>, jotka mahdollistavat
vastaamisen SYNeihin täyttämättä yhteysjonoa. SYN cookies löytyy ytimen
asetuksista, mutta se on tällä hetkellä kokeellinen.
</note>

<p>
Seuraavaksi käytännön palomuuritoteutuksen kimppuun.
</p>

<p>
Ytimen lataamassa iptablesissa on yleensä viisi koukkua, joihin säännöt
kiinnittää. Ne ovat <c>INPUT</c>, <c>OUTPUT</c>, <c>FORWARD</c>,
<c>PREROUTING</c> ja <c>POSTROUTING</c>. Näitä kutsutaan ketjuiksi, ja ne
sisältävät luettelon sääntöjä. Jokainen sääntö koostuu paketin otsakkeeseen
kohdistuvasta ehdosta ja sitä seuraavasta toiminnosta. Jos sääntö ei
täsmää pakettiin, koetetaan ketjun seuraavaa sääntöä.
</p>

<p>
Viiteen pääketjuun voi panna suoraan sääntöjä, tai tehdä uusia ketjuja ja
liittää ne vanhoihin. Iptablesissa on seuraavat asetukset:
</p>

<table>
<tr>
  <th>Valitsin:</th>
  <th>Merkitys:</th>
</tr>
<tr>
  <ti>-A</ti>
  <ti>Lisää perään (append)</ti>
</tr>
<tr>
  <ti>-D</ti>
  <ti>Poista (delete)</ti>
</tr>
<tr>
  <ti>-I</ti>
  <ti>Lisää väliin (insert)</ti>
</tr>
<tr>
  <ti>-R</ti>
  <ti>Korvaa (replace)</ti>
</tr>
<tr>
  <ti>-L</ti>
  <ti>Näytä (list)</ti>
</tr>
<tr>
  <ti>-F</ti>
  <ti>Poista kaikki säännöt ketjusta tai ketjuista (flush)</ti>
</tr>
<tr>
  <ti>-Z</ti>
  <ti>Nollaa laskurit ketjusta tai ketjuista (zero)</ti>
</tr>
<tr>
  <ti>-C</ti>
  <ti>Testaa pakettia ketjuun</ti>
</tr>
<tr>
  <ti>-N</ti>
  <ti>Luo uusi ketju (new)</ti>
</tr>
<tr>
  <ti>-X</ti>
  <ti>Poista ketju</ti>
</tr>
<tr>
  <ti>-P</ti>
  <ti>Muuta oletuskäytösta ketjussa (policy)</ti>
</tr>
<tr>
  <ti>-E</ti>
  <ti>Vaihda ketjun nimi (rename)</ti>
</tr>
<tr>
  <ti>-p</ti>
  <ti>Yhteyskäytäntö (protocol)</ti>
</tr>
<tr>
  <ti>-s</ti>
  <ti>Lähdeosoite tai sen peite (source)</ti>
</tr>
<tr>
  <ti>-d</ti>
  <ti>Kohdeosoite tai sen peite (destination)</ti>
</tr>
<tr>
  <ti>-i</ti>
  <ti>Lähdeliitynnän nimi (interface)</ti>
</tr>
<tr>
  <ti>-o</ti>
  <ti>Kohdeliitynnän nimi</ti>
</tr>
<tr>
  <ti>-j</ti>
  <ti>Siirry (jump)</ti>
</tr>
<tr>
  <ti>-m</ti>
  <ti>Lisäsääntöjä (extended match)</ti>
</tr>
<tr>
  <ti>-n</ti>
  <ti>Osoitteiden ja porttien lukuarvoja (numeric)</ti>
</tr>
<tr>
  <ti>-t</ti>
  <ti>Muutettava taulu (table)</ti>
</tr>
<tr>
  <ti>-v</ti>
  <ti>Monisanainen tuloste (verbose)</ti>
</tr>
<tr>
  <ti>-x</ti>
  <ti>Laajenna luvut (expand)</ti>
</tr>
<tr>
  <ti>-f</ti>
  <ti>Täsmää vain jäljempiin osasiin</ti>
</tr>
<tr>
  <ti>-V</ti>
  <ti>Paketin versio</ti>
</tr>
<tr>
  <ti>--line-numbers</ti>
  <ti>Näytä rivinumerot</ti>
</tr>
</table>

<p>
Ensin estetään kaikki ICMP-paketit koneeseen. 
</p>

<pre caption="ICMP-pakettien estäminen">
# <i>iptables -A INPUT -p icmp -j DROP</i>
</pre>

<p>
Ensin määritellään ketju, johon sääntö lisätään. Seuraavaksi pakettien
protokolla, ja viimeiseksi kohde. Kohteen nimenä voi olla joko luotu ketju
tai yksi ennalta määrätyistä <c>ACCEPT</c> <c>DROP</c>, <c>REJECT</c>,
<c>LOG</c>, <c>QUEUE</c>, tai <c>MASQUERADE</c>. Tässä tapauksessa
käytetään kohdetta <c>DROP</c>, joka ohittaa paketin vastaamatta lähettäjälle
mitään.
</p>

<note>
<c>LOG</c>-kohteeseen sääntöjen käsittely ei lopu. Jos paketti täsmää
sääntöön, jossa on <c>LOG</c> kohteena, paketin käsittely jatkuu vielä sen
jälkeisissäkin säännöissä. Tällä kohteella voi kirjata ylös paketteja,
mutta käsitellä ne silti normaalisti.
</note>

<p>
Nyt voi kokeilla <c>ping localhost</c>ia. Vastausta ei pitäisi tulla, sillä
iptables pudottaa kaikki tulevat ICMP-paketit. Myöskään muita koneita ei
voi enää pingata, koska ICMP-vastauspaketitkin suodatetaan. Nyt voidaan
poistaa kaikki säännöt ketjusta.
</p>

<pre caption="Poistetaan kaikki säännöt">
# <i>iptables -F</i>
</pre>

<p>
Seuraavaksi kokeillaan tilaista pakettisuodatusta iptablesilla. Esimerkiksi
eth0:n tulevien pakettien tiloja tutkitaan seuraavalla komennolla:
</p>

<pre caption="Hyväksytään paketit, jotka kuuluvat jo avattuun yhteyteen">
# <i>iptables -A INPUT -i eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT</i>
</pre>

<p>
Tuo sääntö hyväksyy kaikki paketit, jotka kuuluvat jo avattuun yhteyteen.
Mahdollista on myös ohittaa paketit, jotka eivät ole tilataulukossa komennolla
<c>iptables -A INPUT -i eth0 -m state --state INVALID -j DROP</c>. Nämä
komennot kytkevät päälle tilaisen pakettisuodatuksen laajennuksella
state. Kun halutaan hyväksyä uusia yhteyksiä tilaisella suodattimella, 
käytetään valitsinta <c>--state NEW</c>. Iptablesissa on muitakin
moduuleja:
</p>

<table>
<tr>
  <th>Moduuli tai täsmäyskohde</th>
  <th>Kuvaus</th>
  <th>Valitsimet</th>
</tr>
<tr>
  <ti>mac</ti>
  <ti>Täsmää pakettien mac-osoitteeseen.</ti>
  <ti>--mac-source</ti>
</tr>
<tr>
  <ti>state</ti>
  <ti>Käyttää tilaista pakettisuodatusta</ti>
  <ti>--state (mahdolliset tilat ovat ESTABLISHED, RELATED, INVALID, NEW)</ti>
</tr>
<tr>
  <ti>limit</ti>
  <ti>Rajoittaa yhteyksiä</ti>
  <ti>--limit, --limit-burst</ti>
</tr>
<tr>
  <ti>owner</ti>
  <ti>Täsmää paketin luojan ominaisuuksiin</ti>
  <ti>
    --uid-owner userid --gid-owner groupid --pid-owner processid --sid-owner 
    sessionid
  </ti>
</tr>
<tr>
  <ti>unclean</ti>
  <ti>Tekee muita yleisiä testejä varmistaakseen paketin järkevyyden</ti>
  <ti></ti>
</tr>
</table>

<p>
Tehdään seuraavaksi uusi ketju ja liitetään se toiseen ketjuun:
</p>

<pre caption="Uuden ketjun luonti">
<comment>(Luodaan uusi ketju ja yksi sääntö siihen)</comment>
# <i>iptables -X mychain</i>
# <i>iptables -N mychain</i>
# <i>iptables -A mychain -i eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT</i>
<comment>(Oletukseksi ulosmenevä liikenne sallitaan ja sisääntuleva ohitetaan.)</comment>
# <i>iptables -P OUTPUT ACCEPT</i>
# <i>iptables -P INPUT DROP</i>
<comment>(Lisätään uusi ketju INPUTin perään)</comment>
# <i>iptables -A INPUT -j mychain</i>
</pre>

<p>
Oletussäännöillä -P määritellään käytännöt: ulosmenevä liikenne sallitaan
ja sisääntuleva estetään.
</p>

<p>
Lisää ohjeita löytyy sivuilta <uri
link="http://www.iptables.org/documentation/index.html#HOWTO">Netfilter/iptables
documentation</uri>.
</p>

<p>
Luodaan vielä täysimittainen esimerkki eräästä toimivasta
palomuuri—gatewaytoteutuksesta:
</p>

<ul>
<li>Sisääntulevat yhteydet sallitaan vain SSH:hon (portti 22).</li>
<li>
  Paikallinen liikenne sallitaan HTTP:hen, HTTPS:ään ja SSH:hon (DNS kannattaa
  myös sallia).
</li>
<li>
  ICMP-liikenne voi rasittaa verkkoa ja sitä pitää karsia. Osa siitä kannattaa
  kuitenkin sallia.
</li>
<li>Porttiskannaukset tarkastetaan ja kirjataan ylös.</li>
<li>SYN-hyökkäykset vältetään.</li>
<li>Muu liikenne ohitetaan ja kirjataan ylös.</li>
</ul>

<pre caption="/etc/init.d/firewall">
#!/sbin/runscript
IPTABLES=/sbin/iptables
IPTABLESSAVE=/sbin/iptables-save
IPTABLESRESTORE=/sbin/iptables-restore
FIREWALL=/etc/firewall.rules
DNS1=212.242.40.3
DNS2=212.242.40.51
#inside
IIP=10.0.0.2
IINTERFACE=eth0
LOCAL_NETWORK=10.0.0.0/24
#outside
OIP=217.157.156.144
OINTERFACE=eth1

opts="${opts} showstatus panic save restore showoptions rules"

depend() {
  need net
}

rules() {
  stop
  ebegin "Setting internal rules"

  einfo "Setting default rule to drop"
  $IPTABLES -P FORWARD DROP
  $IPTABLES -P INPUT   DROP
  $IPTABLES -P OUTPUT  DROP

  #default rule
  einfo "Creating states chain"
  $IPTABLES -N allowed-connection
  $IPTABLES -F allowed-connection
  $IPTABLES -A allowed-connection -m state --state ESTABLISHED,RELATED -j ACCEPT
  $IPTABLES -A allowed-connection -i $IINTERFACE -m limit -j LOG --log-prefix \ 
      "Bad packet from ${IINTERFACE}:"
  $IPTABLES -A allowed-connection -j DROP

  #ICMP traffic
  einfo "Creating icmp chain"
  $IPTABLES -N icmp_allowed
  $IPTABLES -F icmp_allowed
  $IPTABLES -A icmp_allowed -m state --state NEW -p icmp --icmp-type \ 
      time-exceeded -j ACCEPT
  $IPTABLES -A icmp_allowed -m state --state NEW -p icmp --icmp-type \ 
      destination-unreachable -j ACCEPT
  $IPTABLES -A icmp_allowed -p icmp -j LOG --log-prefix "Bad ICMP traffic:"
  $IPTABLES -A icmp_allowed -p icmp -j DROP

  #Incoming traffic
  einfo "Creating incoming ssh traffic chain"
  $IPTABLES -N allow-ssh-traffic-in
  $IPTABLES -F allow-ssh-traffic-in
  #Flood protection
  $IPTABLES -A allow-ssh-traffic-in -m limit --limit 1/second -p tcp --tcp-flags \ 
      ALL RST --dport ssh -j ACCEPT
  $IPTABLES -A allow-ssh-traffic-in -m limit --limit 1/second -p tcp --tcp-flags \ 
      ALL FIN --dport ssh -j ACCEPT
  $IPTABLES -A allow-ssh-traffic-in -m limit --limit 1/second -p tcp --tcp-flags \ 
      ALL SYN --dport ssh -j ACCEPT
  $IPTABLES -A allow-ssh-traffic-in -m state --state RELATED,ESTABLISHED -p tcp --dport ssh -j ACCEPT

  #outgoing traffic
  einfo "Creating outgoing ssh traffic chain"
  $IPTABLES -N allow-ssh-traffic-out
  $IPTABLES -F allow-ssh-traffic-out
  $IPTABLES -A allow-ssh-traffic-out -p tcp --dport ssh -j ACCEPT

  einfo "Creating outgoing dns traffic chain"
  $IPTABLES -N allow-dns-traffic-out
  $IPTABLES -F allow-dns-traffic-out
  $IPTABLES -A allow-dns-traffic-out -p udp -d $DNS1 --dport domain \ 
      -j ACCEPT
  $IPTABLES -A allow-dns-traffic-out -p udp -d $DNS2 --dport domain \ 
     -j ACCEPT

  einfo "Creating outgoing http/https traffic chain"
  $IPTABLES -N allow-www-traffic-out
  $IPTABLES -F allow-www-traffic-out
  $IPTABLES -A allow-www-traffic-out -p tcp --dport www -j ACCEPT
  $IPTABLES -A allow-www-traffic-out -p tcp --dport https -j ACCEPT

  #Catch portscanners
  einfo "Creating portscan detection chain"
  $IPTABLES -N check-flags
  $IPTABLES -F check-flags
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL FIN,URG,PSH -m limit \ 
      --limit 5/minute -j LOG --log-level alert --log-prefix "NMAP-XMAS:" 
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL ALL -m limit --limit \ 
      5/minute -j LOG --log-level 1 --log-prefix "XMAS:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL ALL -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG \ 
      -m limit --limit 5/minute -j LOG --log-level 1 --log-prefix "XMAS-PSH:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL NONE -m limit \ 
      --limit 5/minute -j LOG --log-level 1 --log-prefix "NULL_SCAN:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL NONE -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,RST SYN,RST -m limit \ 
      --limit 5/minute -j LOG --log-level 5 --log-prefix "SYN/RST:"
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,FIN SYN,FIN -m limit \ 
      --limit 5/minute -j LOG --log-level 5 --log-prefix "SYN/FIN:"
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP

  # Apply and add invalid states to the chains
  einfo "Applying chains to INPUT"
  $IPTABLES -A INPUT -m state --state INVALID -j DROP
  $IPTABLES -A INPUT -j icmp_allowed 
  $IPTABLES -A INPUT -j check-flags
  $IPTABLES -A INPUT -i lo -j ACCEPT
  $IPTABLES -A INPUT -j allow-ssh-traffic-in
  $IPTABLES -A INPUT -j allowed-connection

  einfo "Applying chains to FORWARD"
  $IPTABLES -A FORWARD -m state --state INVALID -j DROP
  $IPTABLES -A FORWARD -j icmp_allowed 
  $IPTABLES -A FORWARD -j check-flags
  $IPTABLES -A FORWARD -o lo -j ACCEPT
  $IPTABLES -A FORWARD -j allow-ssh-traffic-in
  $IPTABLES -A FORWARD -j allow-www-traffic-out
  $IPTABLES -A FORWARD -j allowed-connection

  einfo "Applying chains to OUTPUT"
  $IPTABLES -A OUTPUT -m state --state INVALID -j DROP
  $IPTABLES -A OUTPUT -j icmp_allowed
  $IPTABLES -A OUTPUT -j check-flags
  $IPTABLES -A OUTPUT -o lo -j ACCEPT
  $IPTABLES -A OUTPUT -j allow-ssh-traffic-out
  $IPTABLES -A OUTPUT -j allow-dns-traffic-out
  $IPTABLES -A OUTPUT -j allow-www-traffic-out
  $IPTABLES -A OUTPUT -j allowed-connection

  #Allow client to route through via NAT (Network Address Translation)
  $IPTABLES -t nat -A POSTROUTING -o $IINTERFACE -j MASQUERADE 
  eend $?
}

start() {
  ebegin "Starting firewall"
  if [ -e "${FIREWALL}" ]; then
    restore
  else
    einfo "${FIREWALL} does not exists. Using default rules."
    rules
  fi
  eend $?
}

stop() {
  ebegin "Stopping firewall"
  $IPTABLES -F
  $IPTABLES -t nat -F
  $IPTABLES -X
  $IPTABLES -P FORWARD ACCEPT
  $IPTABLES -P INPUT   ACCEPT
  $IPTABLES -P OUTPUT  ACCEPT
  eend $?
}

showstatus() {
  ebegin "Status"
  $IPTABLES -L -n -v --line-numbers
  einfo "NAT status"
  $IPTABLES -L -n -v --line-numbers -t nat
  eend $?
}

panic() {
  ebegin "Setting panic rules"
  $IPTABLES -F
  $IPTABLES -X
  $IPTABLES -t nat -F
  $IPTABLES -P FORWARD DROP
  $IPTABLES -P INPUT   DROP
  $IPTABLES -P OUTPUT  DROP
  $IPTABLES -A INPUT -i lo -j ACCEPT
  $IPTABLES -A OUTPUT -o lo -j ACCEPT
  eend $?
}

save() {
  ebegin "Saving Firewall rules"
  $IPTABLESSAVE &gt; $FIREWALL
  eend $?
}

restore() {
  ebegin "Restoring Firewall rules"
  $IPTABLESRESTORE &lt; $FIREWALL
  eend $?
}

restart() {
  svc_stop; svc_start
}

showoptions() {
  echo "Usage: $0 {start|save|restore|panic|stop|restart|showstatus}"
  echo "start)      will restore setting if exists else force rules"
  echo "stop)       delete all rules and set all to accept"
  echo "rules)      force settings of new rules"
  echo "save)       will store settings in ${FIREWALL}"
  echo "restore)    will restore settings from ${FIREWALL}"
  echo "showstatus) Shows the status" 
}
</pre>

<p>
Joitain ohjeita palomuuria varten:
</p>

<ol>
<li>Mieti käytännöt ennen toteutusta.</li>
<li>Yksinkertainen on kaunista</li>
<li>
  Selvitä yhteyskäytäntöjen toiminta (<uri
   link="http://www.ietf.org/">RFC:istä</uri>(Request For Comments))
</li>
<li>
  Palomuurikin on ohjelmisto, jota ajetaan roottina.
</li>
<li>Testaa palomuurisi.</li>
</ol>

<p>
Jos iptables on liian hankala, myös <uri
 link="http://www.shorewall.net">Shorewallia</uri> kannattaa harkita.
Se käyttää iptablesia palomuurina, mutta keskittyy sääntöihin eikä
käytäntöihin.
</p>

</body>
</section>
<section>
<title>Squid</title>
<body>

<p>
Squid on tehokas välipalvelin. Se osaa suodattaa liikennettä ajan,
säännöllisten lausekkeiden täsmäämien polkujen ja URIen, lähde- ja
kohde-IP-osoitteen, verkkoalueen, selaimen, käyttäjänimen, MIME-tyypin ja
porttinumeron perusteella. Lisääkin ominaisuuksia saattaa olla.
</p> 

<p>
Seuraavaan on asetettu mainossuodatin pornosuodattimen sijaan, koska
gentoo.orgia kannata listata pornosivustoksi.
</p>

<p>
Tässä käytäntö on:
</p>

<ul>
<li>
  Veppisurffailu (HTTP- tai HTTPS-liikenne) on sallittu työaikaan
  maanantaista perjantaihin 8—17 ja lauantaina 8—13, mutta muulloin
  työntekijöiden pitää työskennellä surffailematta.
</li>
<li>
  Lataukset on estetty (esim. .exe-, .com-, .arj-, .zip-, .asf-, .avi-, 
  .mpg-, .mpeg-tiedostot)
</li>
<li>Mainokset suodatetaan ja korvataan läpinäkyvillä giffeillä luovasti</li>
<li>Muut yhteydet Internetin välillä kielletään.</li>
</ul>

<p>
Tämä toteutetaan neljässä osassa:
</p>

<pre caption="/etc/squid/squid.conf">
# Bind to a ip and port
http_port 10.0.2.1:3128

# Standard configuration
hierarchy_stoplist cgi-bin ?
acl QUERY urlpath_regex cgi-bin \?
no_cache deny QUERY

# Add basic access control lists
acl all src 0.0.0.0/0.0.0.0
acl manager proto cache_object
acl localhost src 127.0.0.1/255.255.255.255

# Add who can access this proxy server
acl localnet src 10.0.0.0/255.255.0.0

# And ports
acl SSL_ports port 443
acl Safe_ports port 80
acl Safe_ports port 443
acl purge method PURGE

# Add access control list based on regular
# expressions within urls
acl archives urlpath_regex "/etc/squid/files.acl"
acl url_ads url_regex "/etc/squid/banner-ads.acl"

# Add access control list based on time and day
acl restricted_weekdays time MTWHF 8:00-17:00
acl restricted_weekends time A 8:00-13:00

acl CONNECT method CONNECT

#allow manager access from localhost
http_access allow manager localhost
http_access deny manager

# Only allow purge requests from localhost
http_access allow purge localhost
http_access deny purge

# Deny requests to unknown ports
http_access deny !Safe_ports

# Deny CONNECT to other than SSL ports
http_access deny CONNECT !SSL_ports

# My own rules

# Add a page do be displayed when
# a banner is removed
deny_info NOTE_ADS_FILTERED url_ads

# Then deny them
http_access deny url_ads

# Deny all archives
http_access deny archives

# Restrict access to work hours
http_access allow localnet restricted_weekdays
http_access allow localnet restricted_weekends

# Deny the rest
http_access deny all
</pre>

<p>
Seuraavaksi valitaan tiedostotarkenteet, jota ei ladata. Alla on esimerkiksi
tarkenteet
zip, viv, exe, mp3, rar, ace, avi, mov, mpg, mpeg, au, ra, arj, tar, gz
ja z.
</p>

<pre caption="/etc/squid/files.acl">
\.[Zz][Ii][pP]$
\.[Vv][Ii][Vv].*
\.[Ee][Xx][Ee]$
\.[Mm][Pp]3$
\.[Rr][Aa][Rr]$
\.[Aa][Cc][Ee]$
\.[Aa][Ss][Ff]$
\.[Aa][Vv][Ii]$
\.[Mm][Oo][Vv]$
\.[Mm][Pp][Gg]$
\.[Mm][Pp][Ee][Gg]$
\.[Aa][Uu]$
\.[Rr][Aa]$
\.[Aa][Rr][Jj]$
\.[Tt][Aa][Rr]$
\.[Gg][Zz]$
\.[Zz]$
</pre>

<note>
Hakasulut suur- ja pienaakkosille varmistavat, että suodatin huomaa myös
AvIt sun muut avin lisäksi.
</note>

<p>
Seuraavaksi säännölliset ilmaukset mainoksille. Tässä voisi käyttää enemmänkin
luovuutta halutessaan:
</p>

<pre caption="/etc/squid/banner-ads.acl">
/adv/.*\.gif$
/[Aa]ds/.*\.gif$
/[Aa]d[Pp]ix/
/[Aa]d[Ss]erver
/[Aa][Dd]/.*\.[GgJj][IiPp][FfGg]$
/[Bb]annerads/
/adbanner.*\.[GgJj][IiPp][FfGg]$
/images/ad/
/reklame/
/RealMedia/ads/.*
^http://www\.submit-it.*
^http://www\.eads.*
^http://ads\.
^http://ad\.
^http://ads02\.
^http://adaver.*\.
^http://adforce\.
adbot\.com
/ads/.*\.gif.*
_ad\..*cgi
/Banners/
/SmartBanner/
/Ads/Media/Images/
^http://static\.wired\.com/advertising/
^http://*\.dejanews\.com/ads/
^http://adfu\.blockstackers\.com/
^http://ads2\.zdnet\.com/adverts
^http://www2\.burstnet\.com/gifs/
^http://www.\.valueclick\.com/cgi-bin/cycle
^http://www\.altavista\.com/av/gifs/ie_horiz\.gif
</pre>

<p>
Lopuksi määritellään tiedosto korvaamaan poistettua mainosta. Tämä on
käytännössä 4×4 pikselin läpinäkyvä gif-kuva.
</p>

<pre caption="/etc/squid/errors/NOTE_ADS_FILTERED">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META HTTP-EQUIV="REFRESH" CONTENT="0; URL=http://localhost/images/4x4.gif"&gt;
&lt;TITLE>ERROR: The requested URL could not be retrieved&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;H1&gt;Add filtered!&lt;/H1&gt;
</pre>

<note>
HTML:ää ja BODYä ei suljeta, vaan squid hoitaa sen.
</note>

<p>
Squidissa on siis paljon toimintoja ja se on hyvin käytännöllinen suodatukseen
ja välipalvelimeksi. Se voi myös hyödyntää muita Squid-palvelimia
laajoissa verkoissa. Nämä asetukset sopivat parhaiten pieneen 1—20 hengen 
verkkoon.
</p>

<p>
Pakettisuodattimen ja sovelluspalomuurin yhdistely on kuitenkin paras
ratkaisu, vaikka squid olisi jossain turvassa ulkopuolisilta hyökkäyksiltä.
</p>

<p>
Seuraavaksi asetetaan selaimet käyttämään välipalvelinta. Gateway estää
käyttäjiä yhdistämästä ilman välipalvelinta.
</p>

<note>
Mozillassa valikosta Edit→Preferences→Advanced→Proxies.
</note>

<p>
On myös mahdollista ohjata iptablesilla kaikki liikenne automaattisesti
välipalvelimen kautta. Tämä toteutetaan forwarding/PREROUTING-säännöillä.
</p>

<pre caption="Siirretään tietyt ulosmenevät portit välipalvelimen läpi">
# <i>iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to proxyhost:3128</i>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 443 -j DNAT --to proxyhost:3128</i>
</pre>

<note>
Jos välipalvelin on pakettisuodattimen kanssa samassa palvelimessa, pitää
käyttää <c>REDIRECT</c>iä <c>DNAT</c>in sijaan, se ohjaa paketit
localhostille. Tämä ei kuitenkaan ole suositeltavaa, ellei laitteista
ole pulaa, ettei palvelujen ajaminen eri koneilla ole mahdollista.
</note>

</body>
</section>
<section>
<title>Yhteenveto</title>
<body>

<ol>
<li>
  Palomuuri voi olla tietoturvariski. Virheellisesti asetettu palomuuri
  haittaa enemmän kuin ei palomuuria ollenkaan.
</li>
<li>Asennetaan gateway ja välipalvelin.</li>
<li>Hyvä palomuurikäytäntö tietää yhteydet mitkä hyväksyä.</li>
<li>
  Liikenteessä voi olla pahansuopaa esim ICMP-hyökkäysdataa, joka on
  tarkoitettu aiheuttamaan rasitetta.
</li>
<li>SYN-hyökkäysten välttäminen.</li>
<li>
  HTTP-liikenteestä voi poistaa pahat kuvat ja lataukset, joissa voi olla
  viruksia.
</li>
<li>
  Pakettisuodatin ja sovelluspalomuuri kannattaa yhdistää.
</li>
</ol>

</body>
</section>

</sections>
