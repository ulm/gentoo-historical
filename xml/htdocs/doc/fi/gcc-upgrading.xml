<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fi/gcc-upgrading.xml,v 1.4 2012/04/18 18:30:21 swift Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="fi">
<title>Gentoon GCC:n päivitysohje</title>

<author title="Tekijä">
  <mail link="amne@gentoo.org">Wernfried Haas</mail>
</author>
<author title="Tekijä">
  <mail link="jkt@gentoo.org">Jan Kundrát</mail>
</author>
<author title="Toimittaja">
  <mail link="halcy0n"/>
</author>
<author title="Toimittaja">
  <mail link="nightmorph"/>
</author>
<author title="Vastuullinen kääntäjä">
  <mail link="flammie"/>
</author>

<abstract>
Tässä ohjeessa kerrotaan miten GCC päivitetään Gentoossa.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>23</version>
<date>2008-07-19</date>

<chapter id="intro">
<title>Johdanto</title>
<section>
<title>GCC:n päivitys</title>
<body>

<p>
Vaikka GCC on sinänsä kuin mikä tahansa muukin paketti koneella, se on
käytännössä järjestelmän kannalta muita kriittisempi. GCC kannattaa päivittää
vain kun uusi versio sisältää päivityksiä bugeihin, jotka päivitettävällä
koneella ovat merkityksellisiä, kun tarpeellisia uusia toimintoja tulee tai
kun järjestelmä täytyy jostain syystä pitää aivan ajanatasaisena. Muutoin
GCC:n päivitys on turvallista ja kannattavaa lykätä tuonnemmaksi niin kauan
kuin käytössä oleva GCC on Gentoon tukema versio.
</p>

<p>
Jos GCC:stä asennetaan kokonaan uusi pääversio, kuten päivityksessä 3.3.6:sta
3.4.5:een, järjestelmää ei siirretä automaattisesti. Tälläinen muutos pitää
vahvistaa erikseen tekemällä tiettyjä asioita, jotka varmistavat kunnollisen
päivitysprosessin. Jos tätä muutosta ei vahvisteta, Portage käyttää vanhempaa
versiota GCC:stä kunnes muutos vahvistetaan tai vanha kääntäjä poistetaan.
Pienemmät versiomuutokset toteututetaan automaattisesti, kuten vaikkapa
päivitys 3.4.5:stä 3.4.6:een.
</p>

<p>
Tämä ohje auttaa suorittamaan päivityksen Gentoo-järjestelmään. Ohjeessa on
kokonaan erillinen kappale <uri link="#upgrade-3.3-to-3.4">päivitykseen
versiosta 3.3 versioon 3.4</uri> ja ongelmiin <c>libstdc++</c>:n kanssa.
Toinen kappale on omistettu <uri link="#first-install">ensiasennukselle</uri>
Gentoo-järjestelmään stage3-paketista uuden GCC-versiojulkaisun kanssa.
</p>

<warn>
On tärkeää huomata, että päivityksessä versioon 4.1 tai uudempaan versioista
3.3 tai 3.4 tulee seurata <uri link="#upgrade-general">yleistä päivitysohjetta
</uri>, koska ABIt eroavat.
</warn>

</body>
</section>
</chapter>

<chapter id="upgrade-general">
<title>Yleinen päivitysohje</title>
<section>
<title>Johdanto</title>
<body>

<impo>
Jos olet päivittämässä 3.3:sta 3.4:ään, seuraa ohjetta erillisessä
<uri link="#upgrade-3.3-to-3.4">3.3:sta 3.4:ään päivityskappaleessa</uri>.
</impo>

<impo>
Jos olet asentamassa GCC:tä uuteen Gentoo-asennukseen, seuraa ohjetta
<uri link="#first-install">uuden asennuksen päivityskappaleessa</uri>.
</impo>

<p>
Yleisesti <e>bugikorjauspäivitykset</e>, kuten 3.3.5:stä 3.3.6:een, ovat
melko turvallisia suorittaa asentamalla emergellä uusi versio ja asentamalla
uudelleen vain <c>libtool</c>. Kuitenkin jotkin GCC-päivitykset särkevät
binäärien yhteensopivuuden. Tälläisissä tapauksissa joudutaan asentamaan
uudelleen kaikki liittyvät paketit (tai jopa koko työkaluohjelmisto ja
järjestelmä).
</p>

<p>
Uuden version asentaminen ei tee muutosta järjestelmään automaattisesti, paitsi
kun kyseessä on bugikorjauspäivitys, jollei käytössä ole multislot-ominaisuus,
joka aiheuttaa myös näiden versioiden yhteisasennuksen samaan järjestelmään.
Multislot on oletusarvoisesti pois päältä, sillä useimmat eivät tarvitse sitä.
</p>

<pre caption="GCC:n päivitys">
# <i>emerge -uav gcc</i>

<comment>(Korvaa ”i686-pc-linux-gnu-4.1.1” päivityksen GCC-versiolla
ja käytössä olevalla CHOSTilla:)</comment>
# <i>gcc-config i686-pc-linux-gnu-4.1.1</i>
# <i>env-update &amp;&amp; source /etc/profile</i>

<comment>Jos päivitys on versiosta 3 versioon 4, pitää fix_libtool_files.sh
ajaa käsin</comment>
<comment>(Korvaa $CHOST /etc/make.confin CHOST-asetuksella)</comment>
<comment>(Korvaa &lt;gcc-version&gt; uuden GCC:n versiolla)</comment>
# <i>/usr/share/gcc-data/$CHOST/&lt;gcc-version&gt;/fix_libtool_files.sh 3.4.6</i>

<comment>(libtoolin päivitys)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Päivityksen toimivuuden tarkistamiseksi <e>täytyy</e> kääntää työkaluohjelmisto
ja world uudella kääntäjällä.
</p>

<pre caption="Järjestelmän päivitys">
# <i>emerge -eav system</i>
# <i>emerge -eav world</i>
</pre>

<p>
Vanhan GCC-version poisto tässä vaiheessa on jo turvallista. Jos se on
tarpeen, sen voi tehdä komennolla (korvaa versionumero haluamallasi):
</p>

<pre caption="Vanhan GCC:n poisto">
# <i>emerge -aC =sys-devel/gcc-3.4*</i>
</pre>

<impo>
GCC 4.1 ei toimi versiota 2.4.34 pienempien Linuxien kääntämiseen. Jos käytät
vanhaa ydintä, älä poista vanhaa GCC:tä.
</impo>

<impo> <!-- FIXME: do we really want to keep it here? -->
Jos päivitys on versiosta 3.3, pitää suorittaa <c>emerge --oneshot
sys-libs/libstdc++-v3</c>, että vanhat binäärit toimivat.
</impo>

</body>
</section>
</chapter>

<chapter id="upgrade-3.3-to-3.4">
<title>Päivitys GCC 3.3:sta 3.4:ään</title>
<section>
<title>Johdanto</title>
<body>

<p>
Päivitys 3.3:sta 3.4:ään ei ole helppo, koska C++ ABI on muuttunut versioiden
välillä. Myös <c>libstc++</c>-kirjastossa on ongelmia.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-choices">
<title>Vaihtoehdot</title>
<body>

<impo>
Jos päivitys on 3.4:stä 4.1:een, seuraa <uri
link="#upgrade-general">yleisiä päivitysohjeita</uri>.
</impo>

<impo>
Jos käytössä on SPARC, pitää
<uri link="#upgrade-3.3-to-3.4-emerge-e">koko järjestelmä kääntää
uudestaan</uri> <uri link="http://gcc.gnu.org/gcc-3.4/sparc-abi.html">
ABI-muutosten</uri> takia.
</impo>

<p>
Päivitys 3.3:sta 3.4:ään on mahdollista suorittaa kahdella tavalla:
<uri link="#upgrade-3.3-to-3.4-revdep-rebuild">ensimmäinen tapa</uri>
on nopeampi, ja käyttää <c>revdep-rebuild</c>-työkalua <c>gentoolkit</c>istä,
kun taas <uri link="#upgrade-3.3-to-3.4-emerge-e">toinen tapa</uri> vaatii
koko järjestelmän uudelleenasennuksen, niin että se käyttää uuden GCC:n
ominaisuuksia. Kumpikin tapa on yhtä toimiva, mutta yleensä ensimmäinen
riittää.
</p>

<p>
Päivitettäessä 3.3:sta 4.1:een ei voi käyttää revdep-rebuildia, vaan pitää
<uri link="#upgrade-3.3-to-3.4-emerge-e">kääntää koko järjestelmä
uudelleen</uri>.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-revdep-rebuild">
<title>Revdep-rebuildin käyttö</title>
<body>

<p>
Ensin pitää asentaa <c>gentoolkit</c>, jos sitä ei vielä ole. Sitten
voi päivittä GCC:n ja vaihtaa uuteen kääntäjään. Myös <c>libtool</c> käännetään
uusiksi, että varmistutaan järjestelmän yhtenäisyydestä.
</p>

<pre caption="Gentoolkitin asennus ja GCC:n kääntö">
# <i>emerge -an gentoolkit</i>
# <i>emerge -uav gcc</i>
<comment>(Korvaa ”i686-pc-linux-gnu-3.4.5” GCC:n versiolla ja järjestelmän
CHOSTilla:)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.5</i>
# <i>source /etc/profile</i>

<comment>(libtoolin uudelleenasennus)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Seuraavaksi katsotaan mitkä paketit revdep-rebuild haluaa asentaa uudelleen ja
käännetään ne. Tässä vaiheessa saattaa vierähtää tovi.
</p>

<pre caption="Revdep-rebuildin käyttö">
# <i>revdep-rebuild --library libstdc++.so.5 -- -p -v</i>
# <i>revdep-rebuild --library libstdc++.so.5</i>
</pre>

<note>
Joskus saattaa tulla ongelmia puuttuvien versioiden kanssa, jos ne ovat
vanhentuneet tai peitetty. Tässä tapauksessa pitää käyttää valitsinta
<c>--package-names</c>. Tällöin paketit päivitetään vain nimen perusteella,
eikä tarkan versioinnin.
</note>

<p>
Yhteensopivuus vanhojen C++-sovellusten ja muiden revdep-rebuildin missaamien
pakettien kanssa saadaan toimimaan asentamalla <c>sys-libs/libstdc++-v3</c>
ennen GCC 3.3:n poistoa.
</p>

<pre caption="Libstdc++-v3:n korjailu">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
<section id="upgrade-3.3-to-3.4-emerge-e">
<title>Täysi uudelleenasennus emerge -e:llä</title>
<body>

<p>
Tässä päivitystavassa koko järjestelmä asennetaan uusiksi uudella kääntäjällä.
Tämä on turvallisempaa, koska järjestelmä on sen jälkeen varmasti yhtenäinen.
Ensiksi pitää päivittää GCC ja libtool, ja sitten siirtyä uuteen kääntäjään.
</p>

<pre caption="GCC:n päivitys">
# <i>emerge -uav gcc</i>
<comment>Korvaa ”i686-pc-linux-gnu-3.4.5” GCC:n versiolla ja käytetyn
järjestelmän CHOSTilla:)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.5</i>
# <i>source /etc/profile</i>

<comment>Jos päivitys on versiosta 3 versioon 4, pitää fix_libtool_files.sh
ajaa käsin</comment>
<comment>(Korvaa $CHOST /etc/make.confin CHOST-asetuksella)</comment>
<comment>(Korvaa &lt;gcc-version&gt; uuden GCC:n versiolla)</comment>
# <i>/usr/share/gcc-data/$CHOST/&lt;gcc-version&gt;/fix_libtool_files.sh 3.3.6</i>

<comment>(libtoolin uudelleenasennus)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Yhteensopivuus vanhempien C++-sovellusten kanssa saadaan asentamalla
järjestelmään <c>sys-libs/libstdc++-v3</c>.
</p>

<pre caption="Libcstc++-v3:n asennus">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

<p>
Seuraavaksi asennetaan system ja sitten world. Tässä voi kestää hyvinkin
pitkään, riippuen järjestelmän paketin määrästä, sillä kaikki pitää
kääntää uudelleen työkaluohjelmisto mukaan lukien. Tämä on tarpeellista,
jotta varmistutaan järjestelmän kaikkien pakettien olevan samalla kääntäjällä
tehdyt.
</p>

<pre caption="Järjestelmän uudelleenkääntäminen">
# <i>emerge -e system</i>
# <i>emerge -e world</i>
</pre>

<p>
Myös vanhat GCC:t voi nyt poistaa:
</p>

<pre caption="Siivoaminen">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="first-install">
<title>GCC:n päivitys ensiasennuksessa</title>
<section>
<title>Johdanto</title>
<body>

<p>
GCC:n päivitys uuden asennuksen yhteydessä stage3:sta on helppoa. Uudessa
järjestelmässä ei esimerkiksi ole suurta määrää uudelleenasennettavia
vanhaan GCC:n versioon linkitettynä. Seuraava esimerkki on 3.3:n
päivityksestä 3.4:ään. Siinä on joitain eroavaisuuksia yleisiin päivityksiin,
esimerkiksi kirjastonimet <c>revdep-rebuild</c>issa ovat GCC 3.3 -kohtaisia,
kuten koko <c>libstdc++-v3</c>.
</p>

<p>
Jos järjestelmää ei ole mukautettu vielä, päivitys on hyvin nopea. Kuten
3.3:n yleisessä päivityksessä 3.4:ään, tässäkin on kaksi tapaa. Kuitenkin
toisin kuin yleisessä päivityksessä, erot ovat pienempiä <uri
link="#first-install-revdep-rebuild">ensimmäinen tapa</uri> on nopeampi ja
käyttää <c>revdep-rebuild</c>ia <c>gentoolkit</c>-paketista. Revdep-rebuild
kääntää vanhan GCC:n kirjastoihin linkitetyt paketit uudelleen, kun taas <uri
link="#first-install-emerge-e">toisessa tavassa</uri> koko järjestelmä
käännetään uusiksi. Tämä toinen tapa ei uudessa asennuksessa ole tarpeen,
ja on kerrottu täällä vain symmetrian vuoksi.
</p>

<p>
Seuraavat askelet ovat päivitystavoille yhteiset:
</p>

<pre caption="GCC:n päivitykset">
# <i>emerge -uav gcc</i>
<comment>(Korvaa kohdan ”i686-pc-linux-gnu-3.4.5” GCC-versio ja CHOST
päivitetyn järjestelmän arvoilla)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.5</i>
# <i>source /etc/profile</i>

<comment>(libtoolin uudelleenasennus)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Yhteensopivuus vanhojen C++-sovellusten kanssa saavutetaan asentamalla
järjestelmään <c>sys-libs/libstdc++-v3</c>.
</p>

<pre caption="Libstdc++-v3:n asennus">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

</body>
</section>

<section id="first-install-revdep-rebuild">
<title>Revdep-rebuildin käyttö</title>
<body>

<p>
Ensin pitää asentaa <c>gentoolkit</c>, jos sitä ei vielä ole. Sitten katsotaan
mitkä paketit <c>revdep-rebuild</c> haluaa asentaa uudelleen ja käännetään ne.
Tässä vaiheessa saattaa vierähtää tovi.
</p>

<pre caption="Revdep-rebuildin käyttö">
# <i>emerge -an gentoolkit</i>
# <i>revdep-rebuild --library libstdc++.so.5 -- -p -v</i>
# <i>revdep-rebuild --library libstdc++.so.5</i>
</pre>

<note>
Joskus saattaa tulla ongelmia puuttuvien versioiden kanssa, jos ne ovat
vanhentuneet tai peitetty. Tässä tapauksessa pitää käyttää valitsinta
<c>--package-names</c>. Tällöin paketit päivitetään vain nimen perusteella,
eikä tarkan versioinnin.
</note>

</body>
</section>
<section id="first-install-emerge-e">
<title>Koko järjestelmän uudelleenasennus emerge -e:llä</title>
<body>

<p>
Tässä asennustavassa käännetään koko järjestelmä, jotta varmistutaan uuden
järjestelmän yhtenäisyydestä kääntäjän kanssa. Tämä ei ole tarpeellista, mutta
voi olla hyödyllistä jos tehdään myös suuria muutoksia CFLAGSeihin tai
muihin make.confin muuttujiin, jotka vaikuttavat järjestelmän käännökseen.
</p>

<p>
Koska tämä tehdään uudelle asennukselle. ei <c>world</c>ia tarvitse kääntää
uudestaan kuten vanhassa järjestelmässä. Systemin sijaan voi tosin käyttää
worldia.
</p>

<pre caption="Järjestelmän uudelleenkääntö">
# <i>emerge -e system</i>
</pre>

</body>
</section>
<section id="first-install-cleaning-up">
<title>Lopettelu</title>
<body>

<p>
Tässä vaiheessa on turvallista poistaa vanhat GCC:t. Korvaa
<c>UUSI-GCC</c> päivitetyllä versioluvulla:
</p>

<pre caption="Lopettelu">
# <i>emerge -aC "&lt;sys-devel/gcc-UUSI-GCC"</i>
</pre>

</body>
</section>
</chapter>

<chapter id="common-pitfalls">
<title>Yleiset ongelmat</title>
<section>
<body>

<p>
<c>Distcc</c> pitää poistaa käytöstä päivityksen ajaksi. Kääntäjien versioiden
sekottaminen tuottaa sille ongelmia. Ccachea ei ole tarpeen poistaa, sillä
välimuisti poistetaan käytöstä joka tapauksessa.
</p>

<p>
Ytimen ja sen moduulien pitää aina olla samalla GCC:llä käännettyjä. Kun world
on päivitetty GCC:llä, ulkoiset moduulit, kuten
<c>app-emulation/qemu-softmmu</c> eivät toimi. Tämä korjaantyy kääntämällä ydin
uudella GCC:llä.
</p>

<p>
Jos päivitetään SPARCia, pitää ajaa <c>silo -f</c> worldin asennuksen jälkeen.
</p>

</body>
</section>
<section>
<title>Yleiset virheviestit</title>
<body>

<p>
Ongelma tyyppiä <e>libtool: link:
`/usr/lib/gcc-lib/i686-pc-linux-gnu/3.3.6/libstdc++.la' is not a valid libtool
archive</e>, korjaantuu komennolla
<c>usr/share/gcc-data/$CHOST/&lt;gcc-version&gt;/fix_libtool_files.sh 3.3.6</c>
(jossa 3.3.6 korvataan virheviestin numeroilla).
</p>

<p>
Virhe <e>error: /usr/bin/gcc-config: line 632:
/etc/env.d/gcc/i686-pc-linux-gnu-3.3.5: No such file or directory</e>,
korjaantuu poistamalla <path>/etc/env.d/gcc/config-i686-pc-linux-gnu</path> ja
komennolla <c>gcc-config</c> sekä <c>source /etc/profile</c>. Tämä toimii vain
jos ei ole asennetuna ristiinkäännösjärjestelmiä.
</p>

<p>
Jos jokin käännöksistä <c>emerge -e system</c>issä <c>emerge -e world</c>issä,
hajoaa, voi sitä koettaa uudellen komennolla <c>emerge --resume</c>.
Jos tämäkään ei tepsi, voi ongelmallista pakettia yrittää ohittaa komennolla
<c>emerge --resume --skipfirst</c>. Tämä toimii vain jos välissä ei ole
ajettu emergeä kertaakaan, sillä silloin jatkamistiedot tuhotaan.
</p>

<p>
Jos virheviesti on <e>spec failure: unrecognized spec option</e>, voi kokeilla
vaihtaa takaisin oletuskääntäjään, nollata muuttuja <c>GCC_SPECS</c> ja
päivittää uudestaan:
</p>

<pre caption="Määritelmien nollaus">
# <i>gcc-config 1</i>
# <i>source /etc/profile</i>
# <i>unset GCC_SPECS</i>
# <i>emerge -uav gcc</i>
</pre>

</body>
</section>
</chapter>
</guide>
