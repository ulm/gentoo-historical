<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fi/handbook/hb-working-rcscripts.xml,v 1.3 2005/05/14 23:47:30 flammie Exp $ -->

<sections>

<version>1.18</version>
<date>2005-05-06</date>

<section>
<title>Runlevelit</title>
<subsection>
<title>Järjestelmän käynnistys</title>
<body>

<p>
Järjestelmän käynnistyessä liuta tekstiä soljunee ohitse. Jos katsot tarkkaan,
ilmoitukset ovat samoja joka kerta. Tätä toimintojen sarjaa kutsutaan
<e>käynnistyssekvenssiksi</e> ja se on (enimmäkseen) staattisesti määrätty.
</p>

<p>
Ensimmäisenä käynnistyslatain lataa asetustenmukaisen ytimen muistiin, jonka
jälkeen suorittimelle annetaan käsky ytimen ajamisesta. Ytimen latauduttua
se käynnistää omat rakenteensa ja ajaa <c>init</c>-prosessin.
</p>

<p>
Tämä prosessi varmistaa (<path>/etc/fstab</path>issa) määriteltyjen
tiedostojärjestelmien liitokset ja käyttäkelpoisuuden. Tämän jälkeen
suoritetaan hakemistossa <path>/etc/init.d</path> sijaitsevia palveluita
jotka ovat käynnistykselle välttämättömiä.
</p>

<p>
Kun kaikki skriptit on vihdoin ajettu, <c>init</c> aktivoi terminaalit (yleensä,
virtuaalikonsolit jotka löytyvät näppäilemällä <c>Alt-F1</c>,
<c>Alt-F2</c>, jne.) liittämällä <c>agetty</c>-prosessin niihin. Tämä prosessi
huolehtii kirjautumismuodollisuuksista ajamalla komennon <c>login</c>.
</p>

</body>
</subsection>
<subsection>
<title>Initskriptit</title>
<body>

<p>
<c>init</c> ei tietenkään suorita satunnaisesti skriptejä hakemistosta
<path>/etc/init.d</path>. Se ei edes suorita kaikkia <path>/etc/init.d</path>:n
skriptejä, vaan vain ne jotka on määrätty. Suoritettaviksi määrätyt skriptit
löytyvät hakemistosta <path>/etc/runlevels</path>.
</p>

<p>
Ensiksi <c>init</c> ajaa kaikki <path>/etc/runlevels/boot</path>iin linkitetyt
skriptit hakemistosta <path>/etc/init.d</path>. Yleensä suoritusjärjestys
noudattaa aakkostusta, mutta joissakin skripteissä
on riippuvuustietoja jotka käskevät järjestelmää käynnistämään muita ennen
itseään.
</p>

<note>
Aakkosjärjestys jota noudatetaan on useissa tilanteissa POSIX-määritelmän
mukainen, siis ääkköset eivät ole järjestyksessä ja aakkoset a-z esiintyvät
tunnetussa järjestyksessä.
</note>

<p>
Kun kaikki <path>/etc/runlevels/boot</path>in skriptit on suoritettu,
<c>init</c> jatkaa ajamalla skriptejä joihin on linkit hakemistossa
<path>/etc/runlevels/default</path>. Järjestys vastaa jälleen aakkostettua
riippuvuustietojen muokkaamaa käynnistyssarjaa.
</p>

</body>
</subsection>
<subsection>
<title>Kuinka init toimii?</title>
<body>

<p>
Tietenkään <c>init</c> ei päätä kaikkea itsestään. Se käyttää asetustiedostoja
ratkaistessaan mitä toimintoja tulee suorittaa. Asetustiedosto löytyy
sijainnista <path>/etc/inittab</path>.
</p>

<p>
Jos muistelet mitä käynnistyssekvenssistä kerrottiin äsken, niin ensimmäisenähän
<c>init</c> liitti kaikki tiedostojärjestelmät. Tämän määrää asetustiedoston
<path>/etc/inittab</path> seuraavannäköinen rivi:
</p>

<pre caption="Järjestelmän alustus tiedostossa /etc/inittab">
si::sysinit:/sbin/rc sysinit
</pre>

<p>
Rivillä käsketään <c>init</c>iä ajamaan komento <c>/sbin/rc sysinit</c>
järjestelmän alustamiseksi. Skripti <path>/sbin/rc</path> pitää pitkälti
huolen alustuskuvioista, joten voisi sanoa ettei <c>init</c>ille jää paljoakaan
tehtävää -- sehän vain delegoi alustustoiminnot muille prosesseille.
</p>

<p>
Seuraavaksi <c>init</c> suoritti kaikki ne skriptit joihin oli symboliset
linkit hakemistossa <path>/etc/runlevels/boot</path>. Tästä toiminnosta määrää
rivi:
</p>

<pre caption="Jatkoa järjestelmän alustukselle">
rc::bootwait:/sbin/rc boot
</pre>

<p>
Taas kutsutaan <c>rc</c>-skriptiä tekemään tehtäviä. Huomaa, että <c>rc</c>:lle
annettu parametri (<e>boot</e>) on sama kuin <path>/etc/runlevels</path>:in
alihakemisto jota käytetään.
</p>

<p>
Seuraavaksi <c>init</c> etsii asetustiedostosta <e>runlevel</e>in joka ajetaan.
Tästä kerrotaan <path>/etc/inittab</path>issa rivillä:
</p>

<pre caption="Initdefault-rivi">
id:3:initdefault:
</pre>

<p>
Tässä tapauksessa (kuten valtaosassa Gentoita yleensä) <e>runlevel</e>in
tunnus on 3. Tämän tiedon avulla <c>init</c> voi tarkastaa mitä tarvitaan
<e>runlevel 3</e>:n käynnistämiseksi:
</p>

<pre caption="Runlevelien määritelmät">
l0:0:wait:/sbin/rc shutdown
l1:S1:wait:/sbin/rc single
l2:2:wait:/sbin/rc nonetwork
l3:3:wait:/sbin/rc default
l4:4:wait:/sbin/rc default
l5:5:wait:/sbin/rc default
l6:6:wait:/sbin/rc reboot
</pre>

<p>
Kolmatta leveliä määrittävä rivi, jälleen kerran, käyttää <c>rc</c>-skriptiä
palveluiden käynnistämiseen (tällä kertaa parametriksi tarjoillaan
<e>default</e>). Jälleen huomaa että <c>rc</c>:n parametri on
<path>/etc/runlevels</path>in alihakemisto
</p>

<p>
<c>rc</c>:n lopetettua <c>init</c> päättää aktivoitavat virtuaalikonsolit ja
niillä suoritettavat komennot:
</p>

<pre caption="Virtuaalikonsolien määritelmät">
c1:12345:respawn:/sbin/agetty 38400 tty1 linux
c2:12345:respawn:/sbin/agetty 38400 tty2 linux
c3:12345:respawn:/sbin/agetty 38400 tty3 linux
c4:12345:respawn:/sbin/agetty 38400 tty4 linux
c5:12345:respawn:/sbin/agetty 38400 tty5 linux
c6:12345:respawn:/sbin/agetty 38400 tty6 linux
</pre>


</body>
</subsection>
<subsection>
<title>Mikä on runlevel?</title>
<body>

<p>
Edellä huomattiin että <c>init</c> käyttää numeroita <e>runlevel</e>ien
tunnistamiseen. <e>Runlevel</e> on tila jota järjestelmä suorittaa, ja
se sisältää joukon skriptejä (runlevel-skriptejä tai <e>initskriptejä</e>)
jotka täytyy suorittaa tiloihin tullessa ja poistuttaessa.</p>

<p>
Gentoossa on seitsemän runleveliä: kolme sisäiseen käyttöön ja neljä
käyttäjän määriteltäviksi. Sisäiset ovat <e>sysinit</e>, <e>shutdown</e>
sekä <e>reboot</e> ja ne toimivat kuten nimet antavat ymmärtää:
käynnistävät järjestelmän, sammuttavat koneen ja uudelleenkäynnistävät.
</p>

<p>
Käyttäjän määrittelemät ovat ne, joihin liittyy
<path>/etc/runlevels</path>in alihakemistot: <path>boot</path>,
<path>default</path>, <path>nonetwork</path> ja <path>single</path>.
<path>boot</path> käynnistää kaikki järjestelmälle tarpeelliset palvelut
joita muut runlevelitkin käyttävät. Jäljellä olevat kolme käynnistävät eri
joukot palveluita: <path>default</path> liittyy päivittäiseen käyttöön,
<path>nonetwork</path> verkottomaan ja <path>single</path>
järjesetelmän korjailemiseen.
</p>

</body>
</subsection>
<subsection>
<title>Initskriptien käsitteleminen</title>
<body>

<p>
<c>rc</c>:n käynnistämiä skriptejä kustutaan <e>initskripteiksi</e>.
Kaikki hakemiston <path>/etc/init.d</path> skriptit ymmärätävät parametreja
<e>start</e>, <e>stop</e>, <e>restart</e>, <e>pause</e>, <e>zap</e>,
<e>status</e>, <e>ineed</e>, <e>iuse</e>, <e>needsme</e>, <e>usesme</e> ja
<e>broken</e>.
</p>

<p>
Palvelun käynnistämiseen, pysäyttämiseen ja uudelleenkäynnistämiseen käytetään
parametreja <c>start</c>, <c>stop</c> ja <c>restart</c> vastaavasti:
</p>

<pre caption="Postfixin käynnistys">
# <i>/etc/init.d/postfix start</i>
</pre>

<note>
Vain palvelut jotka <e>tarvitsevat</e> (need) tätä palvelua pysähtyvät
tai uudelleenkäynnistyvät. Muut riippuvaiset palvelut (ne jotka <e>käyttävät</e>
(use) tätä palvelua) jäävät koskematta.
</note>

<p>
Pysäyttääksesi vain yhden palvelun jättäen siitä riippuvat palvelut käyntiin
käytät komentoa <c>pause</c>:
</p>

<pre caption="Postfixin pysäytys pysäyttämättä riippuvia palveluja">
# <i>/etc/init.d/postfix pause</i>
</pre>

<p>
Jos haluat nähdä missä tilassa jokin palvelu on (käynnissä, pysäytetty, pause,
...), käytä komentoa <c>status</c>:
</p>

<pre caption="Postfixin tila">
# <i>/etc/init.d/postfix status</i>
</pre>

<p>
Jos tila näyttää siltä että palvelu olisi käynnissä vaikka tiedät sen olevan
poissa päältä, voit nollata tilatiedon pysähtyneeksi komennolla
<c>zap</c>:
</p>

<pre caption="Postfixin tilatiedon nollaus">
# <i>/etc/init.d/postfix zap</i>
</pre>

<p>
Riippuvuuksia saa selville parametreillä <c>iuse</c> ja <c>ineed</c>.
<c>ineed</c> kertoo toiminnalle välttämättömät riippuvuudet, <c>iuse</c>
taas palvelut joita voi käyttää hyväksi, mutta jotka eivät ole välttämättömiä.
</p>

<pre caption="Postfixin välttämättömien riippuvuuksien tarkastelu">
# <i>/etc/init.d/postfix ineed</i>
</pre>

<p>
Samoin voidaan katsella mitkä palvelut tarvitsevat annettua palvelua
(<c>needsme</c>) tai mitkä voivat käyttää sitä (<c>useme</c>):
</p>

<pre caption="Postfixia tarvitsevien palvelujen tarkastelu">
# <i>/etc/init.d/postfix needsme</i>
</pre>

<p>
Lopulta voidaan tarkstella mitkä tarpeelliset riippuvuudet puuttuvat:
</p>

<pre caption="Postfixin puuttuvien riippuvuuksien tarkastelu">
# <i>/etc/init.d/postfix broken</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Rc-updaten käyttäminen</title>
<subsection>
<title>Mikä on rc-update?</title>
<body>

<p>
Gentoon käynnistysjärjestelmä käyttää riippuvuuspuuta päättääkseen palvelujen
käynnistysjärjestyksen. Tehtävä on hankala, joten käyttäjiltä on säästetty
sen tekemisen vaivaa; tekemämme työkalut helpottavat runlevelien ja
initskriptien ylläpitoa.
</p>

<p>
Komennolla <c>rc-update</c> voit lisätä ja poistaa initskriptejä runleveliltä.
<c>rc-update</c> päivittää riippuvuuspuun automaattisesti komennolla
<c>depscan.sh</c>.
</p>

</body>
</subsection>
<subsection>
<title>Palveluiden lisäys ja poisto</title>
<body>

<p>
Asennuksen aikaan olet jo lisännyt default-runlevelille joitain initskriptejä.
Silloin defaultin merkitys ei kai ollut vielä selvä, mutta nyt varmaan
tiedetään tarkemmin mitä se tekee. <c>rc-update</c>n toiseksi komennoksi pitää
antaa toiminnon nimi: <e>add</e>, <e>del</e> tai <e>show</e>.
</p>

<p>
Skriptin lisäyksessä ja poistossa <c>rc-update</c>lle annetaan
komennot <c>add</c> ja <c>del</c>, vastaavasti, ja perään skriptin nimi ja
runlevelin nimi. Esimerkiksi:
</p>

<pre caption="Postfixin poisto default runlevelistä">
# <i>rc-update del postfix default</i>
</pre>

<p>
Komennolla <c>rc-update show</c> saadaan esiin listaus initskripteistä ja
niihin liitetyistä runleveleistä:
</p>

<pre caption="Initskriptien tietojen tarkastelu">
# <i>rc-update show</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Palvelujen asettaminen</title>
<subsection>
<title>Mihin tarvitaan ylimääräisia asetuksia?</title>
<body>

<p>
Initskriptit voivat olla kovinkin monimutkaisia. Siksi ei varmaankaan ole
mielekästä ihmisten suoraan niitä editoida, se lisäisi virhealttiuttakin
huomattavasti. On kuitenkin tärkeää että palvelun asetuksia voi muuttaa,
esimerkiksi niille voi tarvita antaa lisäparametreja.
</p>

<p>
Toinen syy erillisiin asetustiedostoihin on initskriptien päivitettävyyden
mahdollistaminen sotkematta käyttäjän asetuksia.
</p>

</body>
</subsection>
<subsection>
<title>Hakemisto /etc/conf.d</title>
<body>

<p>
Gentoossa palvelujen asetukset on helppo tehdä: jokaisella asetettavissa
olevalla skriptillä on asetustiedosto hakemistossa <path>/etc/conf.d</path>.
Esimerkiksi apache2:n initskripti (<path>/etc/init.d/apache2</path>) tottelee
asetuksia tiedostossa <path>/etc/conf.d/apache2</path>, mikä sisältää
Apache 2 -palvelimelle meneviä käynnistysasetuksia:
</p>

<pre caption="Muuttuja tiedostossa /etc/conf.d/apache2">
APACHE2_OPTS="-D PHP4"
</pre>

<p>
Tällainen asetustiedosto sisältää vain ja ainoastaan muuttujia (aivan kuten
<path>/etc/make.conf</path>), joten sitä on erittäin helppo säätää. Se
myöskin mahdollistaa muuttujien toiminnan informatiivisen kommentoinnin.
</p>

</body>
</subsection>
</section>
<section>
<title>Initskriptien kirjoittaminen</title>
<subsection>
<title>Onko se pakollista?</title>
<body>

<p>
Skriptejä ei täydy kirjoittaa. Gentoo tarjoaa valmiiksi käyttöön jo skriptit
kaikilla käytetyillä
palveluille, joten omien kirjoittaminen ei useinkaan ole tarpeen. Kuitenkin,
jos vaikkapa asensit palvelun Portagen ulkopuolelta saattaa olla tarpeellista
luoda sille initskripti.
</p>

<p>
Älä käytä palvelujen omia initskriptejä jollei niitä ole erikseen kirjoitettu
Gentoota varten; Gentoon initskriptit eivät ole yhteensopivia muiden jakeluiden
initskriptien kanssa!
</p>

</body>
</subsection>
<subsection>
<title>Sisällöt</title>
<body>

<p>
Initskriptin perussisältö näyttää seuraavalta:
</p>

<pre caption="Initskriptin perussisältö">
#!/sbin/runscript

depend() {
  <comment>(Tiedot riippuvuuksista)</comment>
}

start() {
  <comment>(Käynnistyskomennot)</comment>
}

stop() {
  <comment>(Sulkemiskomennot)</comment>
}

restart() {
  <comment>(Uudelleenkäynnistyskomennot)</comment>
}
</pre>

<p>
Kaikissa initskripteissä <e>pitää</e> olla <c>start()</c>-funktio. Muut ovat
vapaaehtoisia.
</p>

</body>
</subsection>
<subsection>
<title>Riippuvuudet</title>
<body>

<p>
Voidaan määritellä kahdentyyppisiä riippuvuuksia: <c>use</c> ja <c>need</c>.
Kuten aiempana mainittiin, <c>need</c> on tiukempi vaatimus kuin <c>use</c>.
Tällä riippuvuudella määritellään tarvittu palvelu tai
<e>virtuaalinen</e> riippuvuus.
</p>

<p>
<e>Virtuaalinen</e> riippuvuus on sellainen jonka jokin palvelu täyttää, mutta
sen täyttäviä palveluita on olemassa useampia. Initskripti voisi olla
riippuvainen järjestelmälokista, mutta niitä on useita (metalogd, syslog-ng,
sysklogd, ...). Koska ei ole mahdollista tarvita (<c>need</c>) jokaista niistä
(eihän missään järjestelmässä kaikkia järjestelmälokeja ole käytössä), nämä
palvelut varmasti tarjoavat (<c>provide</c>) sopivan virtuaalisen riippuvuuden.
</p>

<p>
Katsokaamme esimerkiksi postfixin riippuvuuksia.
</p>

<pre caption="Postfixin riippuvuudet">
depend() {
  need net
  use logger dns
  provide mta
}
</pre>

<p>
Kuten näet, postfix:
</p>

<ul>
  <li>
    vaatii toimivan (virtuaalisen) <c>net</c>-riippuvuuden (jonka voi tarjota
    vaikkapa <path>/etc/init.d/net.eth0</path>)
  </li>
  <li>
    käyttää (virtuaalista) <c>logger</c>-riippuvuutta (jonka esimerkiksi
    <path>/etc/init.d/syslog-ng</path> tarjoaa)
  </li>
  <li>
    käyttää (virtuaalista) <c>dns</c>-riippuvuutta (jonka esimerkiksi
    <path>/etc/init.d/named</path> tarjoaa)
  </li>
  <li>
    tarjoaa (virtuaalisen) <c>mta</c> riippuvuuden (joka liittyy kaikkiin
    postipalvelimiin)
    </li>
</ul>

</body>
</subsection>
<subsection>
<title>Järjestyksen määrittäminen</title>
<body>

<p>
Joissain tapauksissa ei ole tarpeellista vaatia jotain palvelua, vaan saada
vain se käynnistämään ennen (<c>before</c>) tai jälkeen (<c>after</c>)
määrättyä palvelua, <e>jos</e> sellainen järjestelmästä löytyy (ja vain jos
löytyy - kyseessä ei ole enää riippuvuus), ja <e>jos</e> se on samalla
runlevelillä (ja vain jos runlevel on sama - muihin ei puututa). Nämä tiedot
voidaan laittaa asetuksiin <c>before</c> ja <c>after</c>.
</p>

<p>
Esimerkkinä tarkastelemme Portmapin asetuksia:
</p>

<pre caption="Portmapin depend()-funktio">
depend() {
  need net
  before inetd
  before xinetd
}
</pre>

<p>
Jokerimerkillä "*" valitaan kaikki samalla runlevelillä olevat toiminnot,
tämän käyttö ei kuitenkaan ole suositeltavaa.
</p>

<pre caption="Initskriptin ajaminen runlevelin ensimmäisenä">
depend() {
  before *
}
</pre>

</body>
</subsection>
<subsection>
<title>Standardifunktiot</title>
<body>

<p>
Seuraavaksi toiminnallisuuden <c>depend()</c> jälkeen täytyy määritellä
<c>start()</c>-funktio. Se sisältää kaikki palvelun käynnistämiseen tarvittavat
komennot. On järkevää kertoa käyttäjälle tapahtumista käskyillä
<c>ebegin</c> ja <c>eend</c>:
</p>

<pre caption="start()-esimerkki">
start() {
  ebegin "Palvelu käynnistyy"
  start-stop-daemon --start --quiet --exec /hakemisto/polku/palveluun
  eend $?
}
</pre>

<p>
Lisää esimerkkejä funktiosta <c>start()</c> löytyy hakemiston
<path>/etc/init.d</path> sisältämistä initskriptien lähdekoodeista. Komennolle
<c>start-stop-daemon</c> on saatavilla myös loistava ohjesivu lisätietoa varten:
</p>

<pre caption="start-stop-daemonin man-sivun katselu">
# <i>man start-stop-daemon</i>
</pre>

<p>
Muut määriteltävät funktiot ovat <c>stop()</c> ja <c>restart()</c>. Näitä
ei ole pakko määritellä! Init-järjestelmämme pystyy täyttämään nämä kohdat
itsekin jos komentoa <c>start-stop-daemon</c> on käytetty.
</p>

<p>
Gentoon initskriptit ovat syntaksiltaan lähinnä bashia (Bourne Again Shell),
joten niissä voi käyttää bashmaisia rakenteita missä vain.
</p>

</body>
</subsection>
<subsection>
<title>Mukailtujen asetusten lisäily</title>
<body>

<p>
Jos tarvitset initskriptiin enemmän parametrejä kun mihin me olemme
törmänneet, lisää nimi <c>opts</c>-muuttujaan ja tee nimeä vastaava funktio.
Esimerkiksi tuki restartdelay-komennolle lisättäisiin seuraavasti:
</p>

<pre caption="Tuki restartdelay-komennolle">
opts="${opts} restartdelay"

restartdelay() {
  stop()
  sleep 3    <comment># Odota uudelleenkäynnistysta 3 sekuntia</comment>
  start()
}
</pre>

</body>
</subsection>
<subsection>
<title>Palvelujen asetusmuuttujat</title>
<body>

<p>
Hakemistossa <path>/etc/conf.d</path> sijaitsevien asetustietojen tukemiseen
ei tarvita mitään muuta: kun initskripti käynnistyy nämä tiedostot sourcetetaan
(eli niiden muuttujat tulevat käytettäviksi):
</p>

<ul>
  <li><path>/etc/conf.d/&lt;initskriptisi&gt;</path></li>
  <li><path>/etc/conf.d/basic</path></li>
  <li><path>/etc/rc.conf</path></li>
</ul>

<p>
Lisäksi jos initskripti tarjoaa virtuaalisen riippuvuuden (kuten <c>net</c>in),
siihen liittyvä tiedostokin (kuten <path>/etc/conf.d/net</path>) sourcetetaan.
</p>

</body>
</subsection>
</section>
<section>
<title>Runlevelin toiminnan muuttaminen</title>
<subsection>
<title>Kuka tällaisesta hyötyisi?</title>
<body>

<p>
Useille kannettavien käyttäjille tuttu tilanne: kotona ollessa pitää
saada käyntiin <c>net.eth0</c> kun taas matkoilla ei (kun ei verkkoakaan
ole saatavilla). Gentoossa runleveleitä voi muokata mielensä mukaan.
</p>

<p>
Esimerkiksi voisi luoda toisen käynnistyvän default-runlevelin, joka ajaisi
erilaiset initskriptit. Sitten käynnistysaikaisesti voisi valit minkä runlevelin
haluaa.
</p>

</body>
</subsection>
<subsection>
<title>SOFTLEVELin käyttö</title>
<body>

<p>
Aloita tekemällä runlevel toista defaulttia varten. Esimerkkinä käytämme
<path>offline</path>ä:
</p>

<pre caption="Runlevel-hakemiston luonti">
# <i>mkdir /etc/runlevels/offline</i>
</pre>

<p>
Lisää tarvittavat initskriptit uusille runleveleille. Esimerkiksi
yksityiskohtainen kopio nykyisestä <c>default</c>ista ilman <c>net.eth0</c>:aa
saadaan aikaan näin:
</p>

<pre caption="Tarvittavien initskriptien lisäys">
# <i>ls /etc/runlevels/default</i>
acpid  domainname  local  net.eth0  netmount  postfix  syslog-ng  vcron
# <i>rc-update add acpid offline</i>
# <i>rc-update add domainname offline</i>
# <i>rc-update add local offline</i>
# <i>rc-update add syslog-ng offline</i>
# <i>rc-update add vixie-cron offline</i>
</pre>

<p>
Seuraavaksi editoidaan käynnistyslataimen asetustiedostoon kohta
<c>offline</c>-runlevelille. Esimerkiksi tiedostoon
<path>/boot/grub/grub.conf</path>:
</p>

<pre caption="Offlinen lisäys ">
title Gentoo Linux ilman verkkoa
  root (hd0,0)
  kernel (hd0,0)/kernel-2.4.25 root=/dev/hda3 <i>softlevel=offline</i>
</pre>

<p>
Ja sitten kaikki olikin valmista. Jos nyt uudelleenkäynnistät järjestelmän ja
valitset uuden valikkokohdan, <c>offline</c>-runlevel ajetaan <c>default</c>in
asemesta.
</p>

</body>
</subsection>
<subsection>
<title>BOOTLEVELin käyttö</title>
<body>

<p>
<c>bootlevel</c>iä käytetään täysin samoin kuin <c>softlevel</c>iäkin. Ainoa
ero on että tässä määriteltäisiin toinen boot-runlevel eikä toista
defaulttia.
</p>

</body>
</subsection>
</section>
</sections>
