<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/kernel-upgrade.xml,v 1.3 2012/06/30 18:55:53 swift Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide disclaimer="obsolete" lang="sv">
<title>Gentoo Linux guide till att uppgradera kärnan</title>
<author title="Författare">
  <mail link="dsd@gentoo.org">Daniel Drake</mail>
</author>
<author title="Översättare">
  <mail link="martin@skjoldebrand.org">Martin Skjöldebrand</mail>
</author>
<abstract>
Detta dokument beskriver processen att uppgradera din kärna från en version till en annan.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->
<license/>

<version>0.1.2</version>
<date>2005-04-06</date>

<chapter>
<title>Inledning</title>
<section>
<body>

<p>
Kärnan är en av de få paketklasser i portage som kräver viss manuell inblandning för att slutföra uppgraderingen. Portage kommer att ladda ner och installera kärnnas källkod åt dig, men det är upp till dig att faktiskt kompilera den nya kärnan innan några förändringar får effekt.
</p>

<p>
Även om denna guides målgrupp är användare som uppgraderar från en version av kärnan till en annan, är den också användbar för användare som flyttar från ett kärnpaket till ett annat.
</p>

<p>
<c>gentoo-sources</c> används som exempel i detta dokument, instruktionerna här passar emellertid för alla paket som för närvarande finns i vårt träd.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Varför uppgradera kärnan?</title>
<section>
<body>

<p>
Att uppgradera från en mindre version av kärnan till en annan innebär, rent generellt, inte några större skillnader. Orsaken till att man uppgraderar är snarare att antingen dra nytta av någon specifik ny funktion eler drivrutin, att skydda sig mot något säkerhetshål eller att bara ha ett uppdaterat och väl fungerande system.
</p>

<p>
Även om du väljer at inte uppdatera till varenda ny version av kärnan, rekommenderas det att du uppdaterar då och då. En stark rekommendation är att uppdatera omedelbart om den nya versionen löser ett säkerhetsproblem.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Skaffa den nyare källkoden med Portage</title>
<section>
<body>

<p>
Du uppgraderar kärnans källkod på samma sätt som du uppgraderar alla andra paket - genom att använda verktyget <c>emerge</c>. Förmodligen vill du uppgradera när du ser uppdateringen dyka upp i din lista över world uppdateringar. Exempelvis:
</p>

<pre caption="Ny källkod för kärnan i uppdateringslistan">
# <i>emerge -Dup world</i>
Calculating dependencies ...done!
[ebuild    NS ] sys-kernel/gentoo-sources-2.6.9-r2 [2.6.8-r5]
</pre>

<note>
"NS" här ovan betyder att den nya kärnan kommer att installeras i en New Slot, d.v.s. källkoden till den äldre kärnan kommer att finnas kvar till dess att du tar bort den manuellt.
</note>

<p>
Du kan fortsätta med att installera uppdateringen, t ex:
</p>

<pre caption="Uppdatera källkoden till kärnan">
# <i>emerge -u gentoo-sources</i>
</pre>

<p>
Kärnans källkod installeras därpå i en underkatalog till <path>/usr/src</path>. I ovanstående exempel installeras min nya källkod i <path>/usr/src/linux-2.6.9-gentoo-r2</path>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Uppdatera den symboliska länken /usr/src/linux</title>
<section>
<body>

<p>
Gentoo kräver att du underhåller en symbolisk länk i <path>/usr/src/linux</path>. Denna ska peka på källkoden till den kärna du kör.
</p>

<p>
I detta fall behöver vi uppdatera den symboliska länken så att den pekar på källkoden till den kärna vi ska uppgradera till. Vi fortsätter med vårt exempel:
</p>

<pre caption="Uppdatera länken /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ln -sfn linux-2.6.9-gentoo-r2 linux</i>
</pre>

</body>
</section>
</chapter>

<chapter id="install">
<title>Konfigurera, kompilera och installera den nya kärnan</title>
<section>
<body>

<p>
För varje alternativ ovan bör du ha instruktionerna i <uri link="http://www.gentoo.org/doc/en/handbook/index.xml">Gentoohandboken</uri> som handlar om <e>Konfigurera kärnan</e> och <e>Konfigurera systemladdaren</e> till hands. En kort sammanfattningen ges här.
</p>

</body>
</section>
<section>
<title>Alternativ 1: Konfigurera kärnan automatiskt med genkernel</title>
<body>

<p>
Om du använder genkernel behöver du bara upprepa de steg du vidtog för att installera kärnan första gången.
</p>

<p>
Kör helt enkelt genkernel på vanligt sätt:
</p>

<pre caption="Anropa genkernel">
# <i>genkernel all</i>
</pre>

<p>
Du kan också använda extra parametrar för annan funktionalitet i genkernel. Om du till exempel vill konfigurera några extra alternativ med <c>menuconfig</c> och vill att genkernel automatiskt ska uppdatera din grub systemladdarkonfiguration, anropar du genkernel som här nedan:
</p>

<pre caption="Anropa genkernel med några vanliga argument">
# <i>genkernel --menuconfig --bootloader=grub all</i>
</pre>

<p>
För mer information följ länken till <uri link="http://www.gentoo.org/doc/en/genkernel.xml">Gentoo Linux Genkernelguide</uri>, eller slå upp i handboken.
</p>

</body>
</section>
<section>
<title>Alternativ 2: Manuell konfiguration</title>
<body>

<p>
Börja med att öppna <c>menuconfig</c> verktyget i kärnans källkodsträd:
</p>

<pre caption="Anropa menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Välj de alternativ din hårdvara och miljö kräver. Vi hänvisar till <e>Gentoohandboken</e> för ytterligare vägledning om detta.
</p>

<p>
Därefter kompilerar du kärnan och kopierar den till din bootpartition. Vi hänvisar återigen till handbokens instruktioner men glöm inte att montera din /boot partition först! I den ursprungliga installationen har du redan monterat den vid ett mycket tidigare tillfälle.
</p>

<pre caption="Kompilera och installera den nya kärnan">
# <i>make &amp;&amp; make modules_install</i>
# <i>mount /boot</i>
# <i>cp arch/i386/boot/bzImage /boot/bzImage-2.6.9-gentoo-r2</i>
# <i>cp System.map /boot/System.map-2.6.9-gentoo-r2</i>
</pre>

<p>
Slutligen ska du uppdatera din systemladdares konfiguration, och lägga till en ny post för den nya kärnan (radera inte den gamla ännu!) och avmontera <path>/boot</path> partitionen. Referenser till detta finns (återigen) i handboken.
here.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installera om externa moduler</title>
<section>
<body>

<p>
Om du använder några kärnmoduler som inte ingår i kärnans källkod men som erhålls på annat sätt genom Portage (t ex Nvidia eller ATI grafikdrivrutiner) måste du installera o dessa vid varje uppgradering av kärnan. Detta görs enkelt genom att köra emerge igen så att modulerna byggs om mot rätt källkod i 
<path>/usr/src/linux</path> - de installeras därför mot just den kärna vi just kompilerade.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Starta om till den nya kärnan</title>
<section>
<body>

<p>
Nästa steg är att stänga alla applikationer och starta om ditt system. Om du har följt instruktionerna här ovan korrekt så ska du se en post for den nya kärnan i din systemladdare. Välj den posten och starta systemet.
</p>

<p>
Förhoppningsvis startar ditt system utan problem och du kan logga in och kan börja jobba som vanligt. Om allting fungerar är uppgraderingen nu klar.
</p>

<p>
Om du har gjort något misstag och ditt system inte startar med den nya kärnan, kan du helt enkelt starta om och starta med din tidigare fungerande kärna. Du kan börja om från <uri link="#install">Konfigurera, kompilera och installera den nya kärnan</uri> - se till att göra lämpliga förändringar för att rätta till dina misstag. I vissa fall (t ex kan du ha glömt en nätverksdrivrutin) kanske du inte ens behöver starta om för att göra detta.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Att köra flera kärnor</title>
<section>
<body>

<p>
Du kanske såg, när du installerade källkoden för din nya kärna, att källkoden till de tidigare kärnorna inte togs bort. Detta är avsiktligt och låter dig enkelt byta mellan att köra olika kärnor.
</p>

<p>
Att byta mellan olika kärnor gör du helt enkelt genom att låta kärnans källkod vara kvar under <path>/usr/src/</path> och att lämna <path>bzImage</path> binärerna kvar i din <path>/boot</path> partition (med poster i din systemladdares konfiguration). Varje gång du vill starta har du en möjlighet att välja vilken kärna du startar med.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Ta bort äldre kärnor</title>
<section>
<body>

<p>
Utifrån det föregående avsnittet kan du vara nöjd med din nya kärna och du vill inte spara någon av de äldre kärnorna. För att enkelt ta bort all källkod för en specifik kärna, utom den nyaste, kan du dra nytta av emerge-funktioen <e>prune</e>. Vi fortsätter exemplet med gentoo-sources:
</p>

<pre caption="Ta bort äldre versioner med prune">
# <i>emerge -P gentoo-sources</i>
</pre>

<p>
I de flesta fall ligger filer som använts temporärt under kompilationen kvar under respektive underkatalog i <path>/usr/src</path>. Du kan riskfritt ta bort dem med <c>rm</c>.
</p>

<p>
Du kan också riskfritt ta bort alla moduler som användes med denna kärna. Detta görs genom att radera respektive katalog under <path>/lib/modules/</path> som hänvisar till den version av kärnan du håller på att ta bort. Var försiktig så att du inte tar bort några moduler som hör till de kärnor du fortfarande använder!
</p>

<p>
Avslutningsvis kan du monrtera din <path>/boot</path> partition och ta bort <path>bzImage</path> och <path>System.map</path> filerna för de kärnor som rensar bort. Du ska också redigera din systemladdares konfiguration så att den inte längre refererar till den borttagna kärnan.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Avancerat: Använd din gamla kärnas .config för att konfigurera en ny</title>
<section>
<body>

<p>
Ibland är det möjligt att spara tid genom att återanvända konfigurationsfilen från din gamla kärna när du konfigurerar den nya. Notera att detta generellt är osäkert - för många ändringar mellan varje version av kärnan för att det ska vara en pålitlig uppgraderingsväg.
</p>

<p>
Den enda situation där detta kan vara lämpligt är när man uppgraderar från en revision till en annan. Om man exempelvis byter mellan <c>gentoo-sources-2.6.9-r1</c> och <c>gentoo-sources-2.6.9-r2</c> kommer skillnaderna att vara mycket små, det är är vanligtvis okey att använda denna metod. Det är emellertid inte okey om man uppgraderar från 2.6.8 till 2.6.9. Det finns alltför många ändringar mellan de officiella versionerna, och den beskrivna metoden visar inte tillräckligt mycket kontext vilket ofta betyder att användaren råker i trubbel då man har avaktiverat alternativ som de faktiskt inte ville röra.
</p>

<p>
För att återanvända den gamla konfigurationsfilen kopierar du helt enkelt över den och kör <c>make oldconfig</c>. I följande exempel tar vi konfigurationsfilen från 
<c>gentoo-sources-2.6.9-r1</c> och importerar den till <c>gentoo-sources-2.6.9-r2</c>.
</p>

<pre caption="Återanvänd din gamla konfigurationsfil">
# <i>cd /usr/src/linux-2.6.9-gentoo-r2</i>
# <i>cp ../linux-2.6.9-gentoo-r1/.config .</i>
# <i>make oldconfig</i>
</pre>

<p>
Kommen så långt blir du ombedd att ange konfigurationsalternativ som har förändrats mellan de två versionerna. När du har gjort det kan du kompilera och installera din kärna på vanligt sätt, utan att behöva gå igenom konfigurationsprocessen med <c>menuconfig</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Problem efter uppgraderingen av kärnan?</title>
<section>
<body>

<p>
Med den snabba utvecklingen av Linuxkärnan är det ofrånkomligt att vissa förändringar från den ena versionen till den andra kan ställa till vissa problem. Om du har problem med de senaste versionerna av <uri link="/doc/en/gentoo-kernel.xml#doc_chap2"> Gentoostödda kärnor</uri> ber vi dig att rapportera detta till oss.
</p>

</body>
</section>
</chapter>

</guide>
