<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/hb-install-system.xml,v 1.4 2005/04/29 15:45:19 neysx Exp $ -->

<sections>

<version>2.4</version>
<date>2005-04-09</date>

<section>
<title>Chroota</title>
<subsection>
<title>Valfritt: Välj spegling</title>
<body>
<p>
För att snabbt ladda ner källkod är det rekommenderat att välja en snabb spegling. Portage tittar i din <path>make.conf</path> fil efter GENTOO_MIRRORS variabeln och använder speglingarna som anges där. Du kan surfa till vår <uri link="/main/en/mirrors.xml">lista på speglingar</uri> och söka efter en spegling (eller speglingar) nära dig (då dessa oftast är de snabbaste), men vi tillhandahåller en trevligt verktyg kallat <c>mirrorselect</c> som ger dig ett gränssnitt så du kan välja de speglingar du vill.
</p>

<pre caption="Använd mirrorselect för variabeln GENTOO_MIRRORS">
# <i>mirrorselect -i -o &gt;&gt; /mnt/gentoo/etc/make.conf</i>
</pre>

<warn>
Använd inte någon IPv6 spegling. Våra stage-filer stöder för närvarande inte IPv6.
</warn>

<p>
Ett andra viktigt värde är SYNC värdet i <path>make.conf</path>. Denna variabel anger den rsync server du vill använda när du uppdaterar portageträdet (samlingen ebuildskript, skript som innehåller all den information Portage behöver för att ladda ner och installera mjukvara). Även om du manuellt kan ange en SYNC server själv, kan <c>mirrorselect</c> underlätta för dig:
</p>

<pre caption="Välj en rsync spegling med mirrorselect">
# <i>mirrorselect -i -r -o &gt;&gt; /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Efter att ha kört <c>mirrorselect</c> rekommenderar vi dig att dubbelkolla värdena i <path>/mnt/gentoo/etc/make.conf</path> !
</p>

</body>
</subsection>
<subsection>
<title>Kopiera DNS information</title>
<body>

<p>
En sak som fortfarande återstår att göra innan vi kan använda den nya miljön är att kopiera över 
DNS informationen i <path>/etc/resolv.conf</path>. Du behöver denna för att säkerställa att 
nätverksanslutningen fungerar även efter det att du bytt till den nya miljön. <path>/etc/resolv.conf</path> 
innehåller namnservrarna för ditt nätverk. 
</p>

<pre caption="Kopiera över DNS information">
<comment>("-L" flaggan är nödvändig för att säkerställa att vi inte kopierar en symbolisk länk)</comment>
# <i>cp -L /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

</body>
</subsection>
<subsection>
<title>Montera proc filsystemet</title>
<body>

<p>
Montera <path>/proc</path> filsystemet på <path>/mnt/gentoo/proc</path> för att tillåta installationen
att använda information som ges av kärnan även i den chrootade miljön.
</p>

<pre caption="Montera /proc">
# <i>mount -t proc none /mnt/gentoo/proc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Byt till den nya miljön</title>
<body>

<p>
Nu när alla partitioner är initialiserade och grundsystemet är installerat är det dags att byta till
vår nya installationsmiljö genom att <e>chroota</e> till det. Detta betyder att vi byter från den
aktuella miljön (installations CD eller något annat installationsmedium) till vårt installerade system 
(de initialiserade partitionerna).
</p>

<p>
Chrootningen görs i tre steg. Först kommer vi att byta rot från <path>/</path> (på installationsmediet)
 till <path>/mnt/gentoo</path> (på våra partitioner) genom att använda <c>chroot</c>. Därefter 
skapar vi en ny miljö med <c>env-update</c>, som huvudsakligen skapar miljövariabler. Slutligen 
laddar vi dessa variabler i minnet med <c>source</c>.
</p>

<pre caption = "Chroota till den nya miljön">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
 * Caching service dependencies...
# <i>source /etc/profile</i>
</pre>

<p>
Gratulerar! Du är nu i din egen Gentoo Linux miljö.
Du är naturligtvis långt ifrån klar. Det är därför det finns ytterligare
några avsnitt kvar av installationsbeskrivningen :-)
</p>

</body>
</subsection>
<subsection>
<title>Uppdatera portageträdet</title>
<body>

<p>
Du ska nu uppdatera ditt portageträde till den senaste versionen <c>emerge --sync</c> gör detta åt dig.
</p>

<pre caption="Uppdatera Portageträdet">
# <i>emerge --sync</i>
</pre>

<p>
Om du är bakom en brandvägg som stoppar rsync-traffik kan du använda <c>emerge-webrsync</c> som laddar ner och installerar en portagebild åt dig.
</p>

<p>
Om du varnas för att en nyare version av Portage finns tillgänglig och att du ska
uppdatera Portage, ska du ignorera detta. Portage kommer att uppdateras åt dig
senare i installationen.
</p>

</body>
</subsection>

<subsection>
<title>Välj rätt profil</title>
<body>

<p>
En kort definition är på sin plats.
</p>

<p>
En profil är en byggsten för alla Gentoosystem. Den specificerar inte bara standardvärdena för CHOST, CFLAGS och andra viktiga variabler utan låser också systemet till en särskild mängd paketversioner. Detta underhålls av Gentooutvecklarna.
</p>

<p>
Tidigare rörde användarna knappt en sådan profil. Under senare tid kan dock användare av x86, hppa och alpha välja mellan två profiler, en för 2.4 kärnan och en för 2.6 kärnan. Detta krav har införts för att förbättra integrationen av 2.6 kärnorna.
</p>

<p>
Du kan se vilken profil du använder genom att utföra följande kommando:
</p>

<pre caption="Verifiera systemprofilen">
# <i>ls -l /etc/make.profile</i>
lrwxrwxrwx  1 root root 48 Mar  7 11:55 /etc/make.profile ->
../usr/portage/profiles/default-linux/x86/2005.0
</pre>

<p>
Om du använder en av de tre ovannämnda arkitekturerna kan du se övriga profiler än den som pekas ut av den symboliska länken <path>make.profile</path>:
</p>

<pre caption="Ta reda på om det finns ytterligare profiler">
# <i>ls -F /etc/make.profile/</i>
2.4/  packages  parent  virtuals
</pre>

<p>
Som du ser finns det en 2.4 underkatalog i exemplet ovan. Detta betyder att den aktuella profilen använder en 2.6 kärna. Om du vill använda ett 2.4-baserat system måste du länka om den symboliska länken <path>make.profile</path>:
</p>

<pre caption="Länka om profilen">
# <i>ln -snf /usr/portage/profiles/default-linux/x86/2005.0/2.4 /etc/make.profile</i>
</pre>

</body>
</subsection>
<subsection id="configure_USE">
<title>Konfigurera USE variablerna</title>
<body>

<p>
<c>USE</c> är en av de mest kraftfulla variablerna som Gentoo ger sina användare.
Många program kan kompileras med eller utan valfritt stöd för vissa funktioner. Program kan
t ex kompileras utan gtk-stöd, eller stöd för qt. Andra kan kompileras med eller utan SSL stöd.
Vissa program kan till och med kompileras med fb stöd i (svgalib) istället för X11 stöd (X-server).
</p>

<p>
De flesta distributioner kompilerar sina paket med stöd för så mycket som möjligt, vilket ger större 
filstorlekar och längre starttider, för att inte tala om den enorma mängd relationer som blir följden. 
Med Gentoo kan du definiera vilka tillägg ett paket ska kompileras med. Det är här  <c>USE</c> 
kommer in. 
</p>

<p>
I <c>USE</c> variabeln kan du definiera nyckelord som mappas till kompileringsval.
Några exempel; <e>ssl</e> kommer att kompilera ssl-stöd i program som stöder ssl.
<e>-X</e> kommer att avlägsna stöder för X-servern (lägg märke till minustecknet). 
<e>gnome gtk -kde -qt</e> ger dig program med gnome (och gtk) stöd men utan
stöd för kde (och qt), vilket resulterar i ett system specifik för GNOME.
</p>

<p>
Standardvärden för <c>USE</c> anges i <path>make.defaults</path> filen i din profil. Du hittar <path>make.defaults</path> filerna i den katalog som <path>/etc/make.profile</path> pekar på, och dessutom i alla kataloger över denna. Standardvärdet av <c>USE</c> är summan av alla <c>USE</c>
värden i alla <path>make.defaults</path> filer. Det du anger i <path>/etc/make.conf</path> korrelleras mot dessa standardvärden.
Om du lägger till något till <c>USE</c> värdet läggs det även till i listan på standardvärden.
Om du tar bort något från <c>USE</c> värdet (genom att sätta ett minustecken framför) 
tas det även bort från listan på standardvärden (om det överhuvudtaget finns i den listan).
Ändra <e>aldrig</e> något i <path>/etc/make.profile</path> katalogen. Det skrivs över varje
gång du uppdaterar Portage!
</p>

<p>
En fullständig beskrivning av <c>USE</c> hittar du i den andra delen av 
Gentoohandboken, <uri link="?part=2&amp;chap=1">Kapitel 1: USE flaggor</uri>. 
En fullständig beskrivning av tillgängliga USE flaggor hittar du också i ditt system i
<path>/usr/portage/profiles/use.desc</path>. 
</p>

<pre caption="Se tillgängliga USE flaggor">
# <i>less /usr/portage/profiles/use.desc</i>
<comment>(Du kan bläddra med piltangenterna, avsluta med 'q')</comment>
</pre>

<p>
Som ett exempel ger vi <c>USE</c> värdena för ett KDE-baserat system med DVD, ALSA
och stöd för CD-bränning:
</p>

<pre caption="Öppna /etc/make.conf">
# <i>nano -w /etc/make.conf</i>
</pre>

<pre caption="USE värden">
USE="-gtk -gnome qt kde dvd alsa cdr"
</pre>

</body>
</subsection>
<subsection>
<title>Valfritt: GLIBC localer</title>
<body>

<p>
Du kommer förmodligen bara att använda en eller kanske två lokaler i ditt system. Fram tills nu har, efter att ha kompilerat <c>glibc</c> en fullständig samling lokaler skapats 
Från och med nu kan du aktivera USE-flaggan <c>userlocales</c> och specificera endast de lokaler du behöver i <path>/etc/locales.build</path>. Gör detta endast om du vet vilka lokaler du vill använda. Detta kommer inte att fungera för bootstrappningen, men när du däremot kompilerar om glibc efteråt kommer det att göra det.
</p>

<pre caption="Aktivera USE-flaggan userlocales specifikt för glibc">
# <i>mkdir /etc/portage</i>
# <i>echo "sys-libs/glibc userlocales" >> /etc/portage/package.use</i>
</pre>

<p>
Nu specificerar du de lokaler du vill kunna använda:
</p>

<pre caption="Öppna /etc/locales.build">
# <i>nano -w /etc/locales.build</i>
</pre>

<p>
Följande lokaler är ett exempel för att få båda engelska  (USA) och tyska (Tyskland) med medföljande teckenuppsättning (som UTF-8).
</p>

<pre caption="Specificera dina lokaler">
en_US/ISO-8859-1
en_US.UTF-8/UTF-8
de_DE/ISO-8859-1
de_DE@euro/ISO-8859-15
</pre>

</body>
</subsection>
</section>
<section>
<title>Skillnaderna mellan Stage1, Stage2 och Stage3</title>
<body>

<p>
Slå dig nu ner och tänk igenom det du gjort hitills. Vi bad dig tidigare att välja en
<e>stage1</e>, <e>stage2</e> eller <e>stage3</e> och varnade dig för att 
detta val är viktigt för den framtida installationen. Du har nu nått det första stället 
där det val du då gjorde påverkar de följande steg du behöver följa. 
</p>

<ul>
<li>
  Om du valde <e>stage1</e>, måste du genomföra <e>båda</e> stegen i detta kapitel
  (med början med <uri link="#doc_chap3">Gå vidare från Stage1 till Stage2</uri>)
</li>
<li>
  Om du valde <e>stage2</e> kan du bara hoppa över det första steget och börja med det
  andra (<uri link="#doc_chap4">Gå vidare från Stage2 till Stage3</uri>)
</li>
<li>
  Om du valde <e>stage3</e> kan du hoppa över båda stegen och 
  fortsätta med <uri link="?part=1&amp;chap=7">Konfigurera kärnan</uri>
</li>
</ul>

</body>
</section>
<section>
<title>Gå vidare från Stage1 till Stage2</title>
<subsection>
<title>Introduktion till Bootstrapping</title>
<body>

<p>
Så du vill kompilera allt från grunden? Okey då :-)
</p>

<p>
I detta steg kommer vi att <e>bootstrap</e>a ditt Gentoosystem. Detta tar lång tid,
men resultatet är ett system som har optimerats från grunden för ditt specifik system
och behov. 
</p>

<p>
Att <e>bootstrapp</e>a betyder att bygga GNU C biblioteken, GNU Compiler
Collection och många andra nyckelsystem och program. 
</p>

<p>
Innan vi börjar bootstrapningen kan du ladda ner all nödvändig källkod, om du inte vill det fortsätter du <uri link="#bootstrap">
Bootstrappa systemet</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Valfritt: Hämta ner källkoden först</title>
<body>

<p>
Om du inte redan har kopierat över all källkod kommer bootstrapskriptet att
hämta de nödvändiga filerna. Det säger sig självt att detta bara fungerar om
du har en fungerande nätverksanslutning :-) Om du vill hämta källkoden först och
därefter låter bootstrappa systemet (om du till exempel inte vill ha internetanslutningen
öppen under kompileringen) använder du <e>-f</e> flaggan i bootstrapskriptet, 
detta kommer att hämta (därav bokstaven<e>f</e>; efter engelskan "fetch" ö.a.) all 
källkod åt dig.
</p>

<pre caption = "Hämta den nödvändiga källkoden">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh -f</i>
</pre>

</body>
</subsection>
<subsection id="bootstrap">
<title>Bootstrappa systemet</title>
<body>

<p>
Nu så, ta ditt tangentbord och knappa in följande kommandon. Gå sedan och gör 
något kul, för detta steg tar ett bra tag att slutföra.
</p>

<pre caption = "Bootstrappa systemet">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>

<p>
Du kan nu fortästta med nästa steg, <uri link="#doc_chap4">Gå vidare från Stage2 till
Stage3</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Gå vidare från Stage2 till Stage3</title>
<subsection>
<title>Inledning</title>
<body>

<p>
Om du läser detta avsnitt så har du ett bootstrappat system (antingen för att
du tidigare har bootstrappat det, eller för att du använder en <e>stage2</e>).
Det är nu tid att bygga alla systempaket.
</p>

<p>
<e>Alla</e> systempaket? Nej, egentligen inte. I detta steg kommer du att bygga
de systempaket till vilka det inte finns några alternativ. Vissa systempaket har flera
alternativ (såsom systemloggaren) och eftersom Gentoo handlar om valfrihet, kommer
vi inte tvinga dig att använda något av dem.
</p>

</body>
</subsection>
<subsection>
<title>Valfritt: Visa vad som kommer att ske</title>
<body>

<p>
Om du vill veta vilka paket som kommer att installeras, exekvera <c>emerge
--pretend --emptytree system</c>. Detta kommer att ge dig en lista på alla paket som kommer att byggas.
Eftersom detta är en ganska lång lista bör du också använda <c>less</c> eller <c>more</c> 
för att bläddra uppåt och neråt i listan.
</p>

<pre caption = "Visa vad 'emerge system' kommer att göra">
# <i>emerge --pretend --emptytree system | less</i>
</pre>

<p>
Notera att om du inte har ändrat värdena på CFLAGS/CXXFLAGS räcker det med att använda <c>emerge --pretend --newuse system</c>. Om du inte ändrade USE-flaggorna heller (jämfört med vad vi använda när vi byggde stage2 filen), varför gör du då en stage2-installation?
</p>

</body>
</subsection>
<subsection>
<title>Valfritt: Hämta ner källkoden</title>
<body>

<p>
Om du vill att <c>emerge</c> ska hämta källkoden innan du fortsätter
(till exempel om du inte vill ha internetanslutningen öppen medan du bygger alla paket)
kan du använda flaggan <e>--fetchonly</e> till <c>emerge</c> som gör att all källkod först hämtas åt dig. 
</p>

<pre caption = "Hämta källkoden">
# <i>emerge --fetchonly system</i>
</pre>

</body>
</subsection>
<subsection>
<title>Bygg systemet</title>
<body>

<p>
För att börja bygga system exekverar du <c>emerge --emptytree system</c>. Gå sedan och sysselsätt dig,
för detta steg tar lång tid att bli klart.
</p>

<pre caption = "Bygg systemet">
# <i>emerge --emptytree system</i>
</pre>

<p>
Återigen, om du inte har ändrat standardvärdena på CFLAGS och CXXFLAGS fungerar <c>--newuse</c> lika bra.
</p>

<p>
Du kan för tillfället lugnt ignorera eventuella varningar om uppdaterade konfigurationsfiler (och om 
att köra <c>etc-update</c>). När ditt Gentoosystem är färdiginstallerat och startat bör du läsa 
dokumentationen kring <uri link="?part=2&amp;chap=4#doc_chap1">Konfigurera filsäkerhet</uri>.
</p>

<p>
När byggprocessen är klar fortsätter du med <uri link="?part=1&amp;chap=7">Konfigurera kärnan</uri>.
</p>

</body>
</subsection>
</section>

</sections>
