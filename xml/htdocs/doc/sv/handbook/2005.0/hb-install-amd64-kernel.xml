<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/2005.0/hb-install-amd64-kernel.xml,v 1.1 2005/04/28 08:58:24 neysx Exp $ -->

<sections>

<version>4.4</version>
<date>2005-04-16</date>	

<section>
<title>Tidszoner</title>
<body>

<p>
Först behöver du välja din tidszon så systemet vet var du befinner dig. Leta efter din tidszon i <path>/usr/share/zoneinfo</path>, 
och gör sedan en symbolisk länk till <path>/etc/localtime</path> med <c>ln</c>:
</p>

<pre caption="Ange tidszonsinformation">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Vi antar att du vill använda GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installera källkoden</title>
<subsection>
<title>Att välja kärna</title>
<body>

<p>
Det allting byggs kring i alla distributioner är Linuxkärnan. Den är lagret mellan användarprogramen och systemets hårdvara. Gentoo
ger användarna möjlighet att en av flera uppsättningar källkod till kärnan. En fullständig lista finns på <uri link="/doc/en/gentoo-kernel.xml">
Gentoo Kernel Guide</uri>. 
</p>

<p>
Till amd64-baserade system har vi <c>gentoo-sources</c> (2.6 kärnans källkod patchad med amd64 specifika fixar för stabilitet, prestanda och hårdvarustöd).
</p>

<p>
Välj källkoden till den kärna du föredrar och installera den med <c>emerge</c>. 
</p>

<note>
Att köra <c>emerge gentoo-sources</c> kommer att misslyckas på grund av en bugg i Universal Installation CDn. Se istället till att köra <c>emerge =gentoo-sources-2.6.11-r3</c>. Detta har inga andra effekter på din miljö eftersom Portage automatiskt kommer att hämta ner en senare källkod till kärnan när den uppdaterar ditt system (efter installationen).
</note>


<pre caption="Installera källkoden till en kärna">
# <i>echo "=sys-kernel/gentoo-sources-2.6.11-r3 ~amd64" &gt;&gt; /etc/portage/package.keywords</i>
# <i>emerge =gentoo-sources-2.6.11-r3</i>

</pre>

<p>
När du sedan tittar i <path>/usr/src</path> kommer du att se en symbolisk känk som heter <path>linux</path> 
som pekar till din kärnas källkod.
</p>

<pre caption="Att se den symboliska länken till kärnans källkod">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.11-gentoo-r3
</pre>

<p>
Om detta inte är fallet (d.v.s. om den symboliska länken på en annan källkod) ändrar du länken innan du fortsätter:

</p>

<pre caption="Att ändra den symboliska länken till kärnans källkod">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.11-gentoo-r3 linux</i>
</pre>

<p>
Nu är det dags att konfigurera och kompilera kärnan. Du kan använda <c>genkernel</c> för detta, vilket kommer att bygga en generisk kärna, en sådan som används av Installation CDn. Vi beskriver den "manuella" konfigurationen först, eftersom det är det bästa sättet att optimera din miljö.
</p>

<p>
Om du nu vill konfigurera kärnan manuellt fortsätter du med <uri link="#manual">Standard: Manuell konfiguration</uri>. Om du vill använda <c>genkernel</c> ska du läsa <uri link="#genkernel">Alternativ: 
Att använda genkernel</uri> istället.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Standard: Manuell konfiguration</title>
<subsection>
<title>Inledning</title>
<body>

<p>
Att manuellt konfigurera kärnan ses ofta som det svåraste en Linuxanvändare behöver göra. Inget kunde vara mindre sant - efter att du har konfigurerat ett par kärnor kommer du inte ens att komma ihåg att det var svårt ;)
</p>

<p>
<e>En</e> sak är trots allt ändå sant: du måste känna ditt system när du börjar konfigurera din kärna manuellt. Mycket information kan hittas i <path>/proc/pci</path> (eller genom att använda <c>lspci</c> om det är tillgängligt). Du kan också använda <c>lsmod</c> för att se vilka modular kärnan på LiveCD använder (vilket också kan ge dig en ledtråd till vad som ska aktiveras).
</p>

<p>
Gå nu till kärnans källkatalog och kör <c>make menuconfig</c>. Detta startar en ncurses-baserad konfigurationsmeny.
</p>

<pre caption="Att starta menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Du möts här av flera konfigurationssektioner. Vi anger först några alternativ du måste aktivera (annars kommer Gentoo inte att fungera, eller fungera korrekt utan ytterligare modifieringar). 
</p>

</body>
</subsection>
<subsection>
<title>Aktivera nödvändiga alternativ</title>
<body>

<p>
Till att börja med aktiverar du användningen av utvecklingsversion och experimentell kod/drivrutiner. Detta är nödvändigt för annars kommer viktig kod/drivrutiner inte att visas:
</p>

<pre caption="Att välja experimentell kod/drivrutiner">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Gå nu till <c>File Systems</c> och välj stöd för de filsystem du vill använda.
<e>Du ska inte</e> kompilera dem som moduler, då kommer ditt Gentoo system inte att kunna montera dina partitioner. Välj också 
<c>Virtual memory</c>, <c>/proc filsystem</c>.  Välj <e>inte</e> <c>/dev file system support</c> eftersom 2005.0/AMD64 nu använder <c>udev</c> som standard.
</p>

<pre caption="Välja nödvändig filsystem">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [ ] /dev file system support (OBSOLETE)
    [*] Virtual memory file system support (former shm fs)

<comment>(Välj en eller flera av följande alternativ till ditt system)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Om du använder PPPoE för att ansluta till Internet eller om du använder ett telemodem, kommer du att behöva aktivera följande alternativ i kärnan:
</p>

<pre caption="Välja drivrutiner för PPPoE">
Device Drivers ---&gt;
  Networking Support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
De två komprimeringsmöjligheterna skadar inte, men krävs inte heller. Likaså kan man undvara <c>PPP over Ethernet</c> valet, som bara kan användas av <c>rp-pppoe</c> när den är konfigurerad till att använda kärnans PPPoE läge.
</p>

<p>
Du kan behöva kontrollera att du aktiverar stöd i kärnan för ditt ethernetkort.
</p>

<p>
Om du har ett multi-CPU Opteron system bör du aktivera "Symmetric multi-processing support":
</p>

<pre caption="Aktivera SMP support">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Om du använder USB tillbehör för indata (som tangentbord eller mus) får du inte glömma att aktivera dessa också:
</p>

<pre caption="Aktivera stöd för vissa USB tillbehör">
Device Drivers ---&gt;
  USB Support ---&gt;
    &lt;*&gt;   USB Human Interface Device (full HID) support
    [*] HID input layer support
</pre>

<p>
När du konfigurerat kärnan, fortsätt med <uri link="#compiling">Kompilering och installation</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilering och installation</title>
<body>

<p>
Nu när du har konfigurerat din kärna är det dags att kompilera och installera den. Avsluta konfigurationen och starta kompilationsprocessen:
</p>

<pre caption="Kompilera kärnan">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
När kärnan har slutat kompileras kopierar du kärnan till <path>/boot</path>.
</p>

<pre caption="Installera kärnan">
# <i>cp arch/x86_64/boot/bzImage /boot/kernel-2.6.11-gentoo-r3</i>
</pre>

<p>
Det är också klokt att kopiera din konfigurationsfile till <path>/boot</path>, utifall att ... :)
</p>

<pre caption="Säkerhetskopiering av kärnans konfiguration">
# <i>cp .config /boot/config-2.6.11-gentoo-r3</i>
</pre>

<p>
Fortsätt nu med <uri link="#kernel_modules">Konfigurera moduler till kärnan</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativ: Använda genkernel</title>
<body>

<p>
Om du läser det här avsnittet  har du valt att låta vårt <c>genkernel</c> skript att konfigurera kärnan åt dig.
</p>

<p>
Nu när källkoden till kärnan är installerad är det dags att kompilera din kärna. Med hjälp av vårt <c>genkernel</c> skript kan du automatiskt bygga en kärna åt dig. <c>genkernel</c> konfigurerar kärnan närmast identiskt med den som finns på vår Installation CD. Detta betyder att när du använder <c>genkernel</c> för att bygga kärnan så kommer ditt system att upptäcka all hårdvara vid uppstarten, precis som vår Installation CD gör. Eftersom genkernel inte kräver någon manuell konfiguration av kärnan är det den idealiska lösningen för de användare som känner sig osäkra på att kompilera sina egna kärnor.
</p>

<p>
Så låt oss då se hur vi använder genkernel. Först installerar vi en ebuild för genkernel:
</p>

<pre caption="Installera genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Kompilera nu kärnans källkod genom att köra <c>genkernel all</c>. Tänk dock på att <c>genkernel</c> skapar en kärna som stöder nästan all hårdvara. Det kommer att ta tid innan denna kompilering är klar!
</p>

<p>
Notera att om din bootpartition inte använder något av filsystemen ext2 eller ext3 kan du behöva konfigurera din kärna manuellt med 
<c>genkernel --menuconfig all</c> och lägga till stöd för ditt filsystem <e>i</e> kärnan (d.v.s. <e>inte</e> som en modul). 
</p>

<pre caption="Exekvera genkernel">
# <i>genkernel all</i>
</pre>

<p>
När väl <c>genkernel</c> är färdig har en kärna, en komplett uppsättning moduler och <e>initial root disk</e> (initrd) skapats. Vi kommer att använda  kärnan och initrd när vi konfigurerar systemladdaren senare i dokumentet. Skriv ner namnen på kärnan och initrd då du kommer att behöva dessa när du skriver systemladdarens konfigurationsfil.  initrd startas direkt efter systemstart för att automatiskt hitta all hårdvara (preics som på Installation CD) innan ditt "riktiga" system startar.
</p>

<pre caption="Kontrollera namnen på kärnan och initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Nu återstår ett steg innan ditt system liknar Installation CD -- att installera <c>coldplug</c>. Medan initrd automatiskt hittar hårdvaran som behövs för att starta ditt system, hittar <c>coldplug</c> allting annat. För att installera och aktivera <c>coldplug</c> skriver du:
</p>

<pre caption="Installera och aktivera coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

<p>
Om du vill att systemet också ska reagera på hotplug händelser ska du också installera och konfigurera <c>hotplug</c>:
</p>

<pre caption="Installera och konfigurera hotplug">
# <i>emerge -k hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>


</body>
</section>
<section id="kernel_modules">
<title>Konfigurera moduler till kärnan</title>

<subsection>
<title>Konfigurera modulerna</title>
<body>

<p>
Du bör skriva ner de moduler du vill ladda automatiskt i <path>/etc/modules.autoload.d/kernel-2.6</path>.
Du kan lägga till extra valmöjligheter till modulerna om du så vill.
</p>

<p>
För att se alla tillgänliga moduler anger du kommandot <c>find</c>. Glöm inte att ersätta  "&lt;kernel version&gt;" med den versionen av den kärna du just kompilerat:
</p>

<pre caption="Att visa alla tillgängliga moduler">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Om du till exempel vill ladda modulen <c>3c59x.o</c> automatiskt, redigerar du filen <path>kernel-2.6</path> och anger modulnamnet där.
</p>

<pre caption="Redigera /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Kör nu <c>modules-update</c> för att fastställa dina förändringar av <path>/etc/modules.conf</path> filen:
</p>

<pre caption="Exekvera modules-update">
# <i>modules-update</i>
</pre>

<p>
Fortsätt installationen med <uri link="?part=1&amp;chap=8">Konfigurera ditt system</uri>.
</p>

</body>
</subsection>
</section>
</sections>
