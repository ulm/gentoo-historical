<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/2005.0/hb-install-amd64-bootloader.xml,v 1.1 2005/04/28 08:58:24 neysx Exp $ -->

<sections>

<version>4.5</version>
<date>2005-04-16</date>


<section>
<title>Att göra ditt val</title>
<subsection>
<title>Inledning</title>
<body>

<p>
Nu när din kärna är konfigurerad och kompilerad och de nödvändiga systemkonfigurationsfilerna är korrekta, är det dags att installera ett program som laddar kärnan när du startar systemet. Ett sådant program kallas en <e>systemladdare</e>. 
</p>

</body>
</subsection>
<subsection>
<title>Valfritt: Framebuffer</title>
<body>
<!-- Verbatim copy from x86 bootloader framebuffer explanation -->

<p>
<e>Om</e> du har konfigurerat din kärna med stöd för framebuffer (eller har använt standardvärdena i konfigurationen av <c>genkernel</c>), så kan du aktivera den genom att ange en <c>vga-sats</c> och/eller en <c>video</c>sats i din systemladdares konfigurationsfil.
</p>
<p>
Till att börja med behöver du veta vilken typ av framebuffer enhet du använder. OM du använder en patchad Gentoo kärna (som <c>gentoo-sources</c>) kommer du att ha möjligheten att välja <c>vesafb-tng</c> som <e>VESA drivrutinstyp</e> (vilket är standard för dessa kärnor). Om detta är fallet använder du <c>vesafb-tng</c> och behöver inte ange något <c>vga</c> argument. Annars använder du en <c>vesafb</c> drivrutin och behöver ange ett <c>vga</c> argument.
</p>

<p>
<c>vga</c> argumentet kontrollerar upplösningen och färgdjupet på din framebuffer skärm för <c>vesafb</c>. Som anges i  <path>/usr/src/linux/Documentation/fb/vesafb.txt</path> (som installeras samtidigt med kärnans källkod), måste du skicka den det VESA nummer som korresponderar mot den begärda upplösningen och färgdjupet.
</p>

<p>
Följande tabell listar de tillgängliga upplösningarna och färgdjupen och de motsvarande värdena som du ska skicka med <c>vga</c> argumentet.
</p>

<table>
<tr>
<ti></ti>
<th>640x480</th>
<th>800x600</th>
<th>1024x768</th>
<th>1280x1024</th>
</tr>
<tr>
<th>256</th>
<ti>0x301</ti>
<ti>0x303</ti>
<ti>0x305</ti>
<ti>0x307</ti>
</tr>
<tr>
<th>32k</th>
<ti>0x310</ti>
<ti>0x313</ti>
<ti>0x316</ti>
<ti>0x319</ti>
</tr>
<tr>
<th>64k</th>
<ti>0x311</ti>
<ti>0x314</ti>
<ti>0x317</ti>
<ti>0x31A</ti>
</tr>
<tr>
<th>16M</th>
<ti>0x312</ti>
<ti>0x315</ti>
<ti>0x318</ti>
<ti>0x31B</ti>
</tr>
</table>

<p>
<c>Video</c> argumentet kontrollerar grafikvisningsmöjligheterna.Den behöver skickas till frambufferdrivrutinen (<c>vesafb</c> för 2.6 kärnor, eller <c>vesa</c> för
2.4 kärnor) följt av de kontrollargument du vill aktivera. Alla variabler listas i <path>/usr/src/linux/Documentation/fb/vesafb.txt</path>, men vi informerar dig om de tre mest använda valen här:
</p>

<table>
<tr>
<th>Kontroll</th>
<th>Beskrivning</th>
</tr>
<tr>
<ti>ywrap</ti>
<ti>
Anta att grafikkortet kan WRAPPA runt sitt minne (d.v.s. fort i början när den kommit till slutet)
</ti>
</tr>
<tr>
<ti>mtrr</ti>
<ti>
Skapa MTRR register
</ti>
</tr>
<tr>
<ti>mode</ti>
<ti>
(<c>vesafb-tng</c> endast)<br/>
Ange upplösning, färgdjup och uppdateringsfrekvens. Exempelvis <c>1024x768-32@85</c> för en upplösning av 1024x768, 32 bitar färgdjup och en uppdateringsfrekvens om 85 Hz.
</ti>
</tr>
</table>

<p>
Resultatet av dessa två argument kan bli något liknande <c>vga=0x318 video=vesafb:mtrr,ywrap</c> eller <c>video=vesafb:mtrr,ywrap,1024x768-32@85</c>. Kom ihåg (eller skriv ner) dessa värden, du kommer snart att behöva dem.
</p>

<p>
Fortsätt nu med att installera GRUB.
</p>

</body>
</subsection>
</section>
<section>
<title>Använd GRUB</title>
<subsection>
<title>Att förstå GRUBs terminologi</title>
<body>

<p>
Den mest avgörande delen av att förstå sig på GRUB är att bli införstådd med hur GRUB refererar till hårddiskar och partitioner. Din Linuxpartition <path>/dev/hda1</path> kommer sannolikt att kallas <path>(hd0,0)</path> i GRUB. Notera paranteserna runt <path>hd0,0</path> - de krävs.
</p>

<p>
Hårddiskarna räknas från noll snarare än "a" och partitioner startar på noll snarare än ett. Tänk också på att vad gäller hd enheter räknas endast hårddiskar, inte atapi-ide enheter som CD-ROM spelare och brännare. Dessutom används samma konstruktion för SCSI enheter. (De ges vanligtvis högre nummer än IDE enheter förutom när BIOS är konfigurerat att starta från SCSI enheter.) När du ber BIOS att boota från en annan hårddisk (till exempel din primära slavenhet), <e>ses den</e> hårddisken som <path>hd0</path>.
</p>

<p>
Om vi antar att du har en hårddisk på <path>/dev/hda</path>, en CD-ROM på <path>/dev/hdb</path>,en brännare på <path>/dev/hdc</path>, en andra hårddisk på <path>/dev/hdd</path> men ingen SCSI disk, kommer <path>/dev/hdd7</path> att översättas till <path>(hd1,6)</path>. Det låter kanske knepigt och det är det, men som vi ska upptäcka finns det i GRUB en tab-kompletteringsfunktion som är användbar för de som har många hårddiskar och partitioner och inte riktigt hänger med i GRUBs numreringsschema.
</p>

<p>
När du nu fått kläm på detta är det dags att installera GRUB.
</p>

</body>
</subsection>

<subsection>
<title>Installera GRUB</title>
<body>

<p>
För att installera GRUB, ska vi först köra emerge.
</p>

<pre caption = "Installera GRUB">
# <i>emerge grub</i>
</pre>

<p>
Även om GRUB nu är installerad behöver vi skriva dess konfigurationsfil och installera GRUB i MBR så att GRUB  automatiskt startar din nyligen skapade kärna. Skapa 
<path>/boot/grub/grub.conf</path> med <c>nano</c> (eller, om så önskas, en annan editor):
</p>

<pre caption = "Skapa /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Nu ska vi skriva ihop en <path>grub.conf</path>. Nedan hittar du två möjliga <path>grub.conf</path> för partitioneringsexemplet vi använder i denna guide med 
i denna guide med kärnan <path>kernel-2.6.11-gentoo-r1</path>.
</p>

<ul>
<li>
Denn första <path>grub.conf</path> är för de som inte har använt <c>genkernel</c> för att bygga kärnan.
</li>
<li>
Den andra <path>grub.conf</path> är för de som har använt <c>genkernel</c> för att bygga kärnan.
</li>
</ul>

<note>
Om rotfilsystemet är JFS <e>måste</e> du lägga till " ro" till raden med <c>kernel</c> eftersom JFS behöver återspela sin logg innan den tillåter monterar med läs-skrivrättigheter.
</note>

<pre caption = "grub.conf för användare utan genkernel">
<comment># Vilken post som ska köras som standard. 0 är den första, 1 den andra o.s.v.</comment>
default 0
<comment># Hur många sekunders väntetid innan standardvalet körs.</comment>
timeout 30
<comment># Vacker fat splash-bild för att snygga till saker och ting up :)
# Kommentera bort om du inte har installerat något grafikkort</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.6.11
<comment># Partition där kärnan (eller operativsystemet) ligger</comment>
root (hd0,0)
kernel /kernel-2.6.11-gentoo-r1 root=/dev/hda3

<comment># De följande fyra raderna behövs bara om du ibland startar Windows.</comment>
<comment># I detta fall är Windows installerat på /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>


<pre caption = "grub.conf för genkernelanvändare">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.6.11
root (hd0,0)
kernel /kernel-2.6.11-gentoo-r1 root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev
initrd /initrd-2.6.11-gentoo-r1

<comment># Endast om du ibland startar andra system</comment>
title=Windows XP
root (hd0,5)
makeactive
chainloader +1
</pre>

<note>
Om du använder en annan partitionering och/eller kärna ändrar du efter behov. Se dock till att allt som följer en GRUB-enhet (som <path>(hd0,0)</path>) anges relativt monteringsplatsen, inte roten. Med andra ord, <path>(hd0,0)/grub/splash.xpm.gz</path> är i verkligheten <path>/boot/grub/splash.xpm.gz</path> eftersom <path>(hd0,0)</path> är <path>/boot</path>.
</note>

<p>
Om du behöver skicka ytterligare argument till kärnan lägger du helt enkelt till dem i slutet av kernel kommandot. Vi skickar redan ett argument (<c>root=/dev/hda3</c> eller <c>real_root=/dev/hda3</c>), men du kan skicka andra också, som <c>video</c> argumenten för framebuffer vi redan diskuterat.
</p>

<p>
<c>genkernel</c>användare bör känna till att dera kärnor använder samma startargument som används på Installation CDn. Om du till exempel har SCSI enheter ska du lägga till <c>doscsi</c> som ett argumentet till kärnan.
</p>

<p>
Nu sparar du <path>grub.conf</path> filen och avslutar. Vi behöver dock fortfarande installera GRUB i MBR (Master Boot Record).
</p>

<p>
GRUB-utvecklarna rekommenderar att man använder <c>grub-install</c>. Om <c>grub-install</c> fallerar av någon anledning kan du i alla fall installera den manuellt.
</p>

<p>
Fortsätt med <uri link="#grub-install-auto">Standard: Konfigurera GRUB med grub-install</uri> eller <uri link="#grub-install-manual">Alternativ: Konfigurera GRUB manuellt</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Standard: Konfigurera GRUB med grub-installl</title>
<body>

<p>
För att installera GRUB behöver du ge kommandot <c>grub-install</c>. <c>grub-install</c> kommer dock inte att fungera direkt eftersom vi är i en chrootad miljö. Vi behöver uppdatera <path>/etc/mtab</path> (filen med information om alla monterade filsystem) förstt: lyckligtvis finns det ett enkelt sätt att lösa detta - kopiera bara över  <path>/proc/mounts</path> till <path>/etc/mtab</path>:
</p>

<pre caption="Uppdatera /etc/mtab">
# <i>cp /proc/mounts /etc/mtab</i>
</pre>

<p>
Nu kan vi installera GRUB med <c>grub-install</c>:
</p>

<pre caption="Kör grub-install">
# <i>grub-install --root-directory=/boot /dev/hda</i>
</pre>

<p>
Om du ar fler frågor om GRUB, hänvisar vi till <uri link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> eller <uri link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

<p>
Fortsätt med <uri link="#reboot">Starta om systemet</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Alternativ: Konfigurera GRUB manuellt</title>
<body>

<p>
För att börja konfigurera GRUB ger du kommandot <c>grub</c>. Du kommer att se <path>grub&gt;</path> kommandorad. Nu ska du skriva in de rätta kommandona för att installera GRUB startposten på din hårddisk.
</p>

<pre caption =" Starta GRUB skalet">
# <i>grub</i>
</pre>

<note>
Om ditt system inte har någon diskettenhet lägger du till <c>--no-floppy</c> argumentet till kommandot ovan för att förhindra GRUB från att söka efter den (icke existerande) diskettenheten.
</note>

<p>
I exempelkonfigurationen vill vi installera GRUB så att den läser information från boot-partitionen <path>/dev/hda1</path> och installerar GRUB i hårddiskens MBR 
(master boot record) så att det första vi ser när vi startar datorn är GRUB. Om du inte följt exempelkonfigurationen ändrar du naturligtvis kommandona så att de överenstämmer med verkligheten.
</p>

<p>
Du kan använda GRUBs tab-kompletteringsfunktion i GRUB. Om du till exempel skrivit in "<c>root (</c>" följt av TAB, kommer du att se en lista på enheter (som  <path>hd0</path>).
</p>

<p>
Genom att använda tab-komplettering när du konfigurerar GRUB bör det inte vara svårt. Så, ska vi konfigurera GRUB? :-)
</p>

<pre caption =" Installera GRUB in the MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(Ange var din /boot partition finns)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Installera GRUB i MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Avsluta GRUB skalet)</comment>
</pre>

<note>
Om du vill installera GRUB på en särskild partition istället för i MBR, behöver du ändra <c>setup</c> kommandot så det pekar på rätt partition. Om du till exempel vill installera GRUB i <path>/dev/hda3</path>, så är kommandot <c>setup (hd0,2)</c>. Det är dock få användare som vill göra så.
</note>

<p>
Om du har fler frågor om GRUB, hänvisar vi till <uri link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> eller <uri
link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

<p>
Fortsätt nu med <uri link="#reboot">Starta om systemet</uri>.
</p>

</body>
</subsection>
</section>

<section id="reboot">
<title>Starta om systemet</title>
<subsection>
<body>

<p>
Gå ur den chrootade miljön och avmontera alla monterade partitioner. Därefter skriver du det magiska kommandot du har väntat på: <c>reboot</c>.
</p>

<pre caption="Avmontera alla partitioner och starta om">
# <i>exit</i>
# <i>cd</i>
# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
# <i>reboot</i>
</pre>

<p>
Glöm naturligtvis inte att ta bort den startbara CDn annars kommer CDn att starta igen - istället för ditt nya Gentoosystem.
</p>

<p>
När du väl startat om avslutar du Gentooinstallationen med <uri link="?part=1&amp;chap=11">Slutför din Gentooinstallation</uri>.
</p>

</body>
</subsection>
</section>
</sections>

