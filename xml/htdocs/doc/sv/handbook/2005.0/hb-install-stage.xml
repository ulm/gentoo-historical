<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/2005.0/hb-install-stage.xml,v 1.2 2005/05/12 09:45:08 neysx Exp $ -->

<sections>
	
<version>4.2</version>
<date>2005-05-04</date>

<section>
<title>Installera ett stagearkiv</title>
<subsection>
<title>Ställ in rätt tid och datum</title>
<body>

<p>
Innan du fortsätter behöver du kontrollera tid/datum och uppdatera dem. En felinställd klocka kan leda till konstiga resultat längre fram.
</p>

<p>
För att kontrollera datum och tid kör du <c>date</c>:
</p>

<pre caption="Bekräfta datum och tid">
# <i>date</i>
Fri Mar 29 16:21:18 CEST 2005
</pre>

<p>
Om tiden och/eller datumet är fel uppdaterar du det med <c>date
MMDDttmmÅÅÅÅ</c> syntax (<b>M</b>ånad, <b>D</b>ag, <b>t</b>imme, <b>m</b>inut
och <b>Å</b>r). För att exempelvis ange tid och datum till 16:21 29e mars år 2005:
</p>

<pre caption="Att ställa in datum och tid">
# <i>date 032916212005</i>
</pre>

</body>
</subsection>
<subsection>
<title>Hitta stage3 filen</title>
<body>

<p>
Om du har konfigurerat nätverksanslutningen för att du behöver ladda ner en stage3 fil för din arkitektur fortsätter du med <uri link="#download">Alternativ: Använd en Stage3 från Internet</uri>. Annars läser du <uri link="#available">Standard: Använd en Stage3 från Installation CDn</uri>.
</p>

</body>
</subsection>
</section>

<section id="available">
<title>Standard: Använd en Stage-fil från Installation CDn</title>
<subsection>
<title>Extrahera stagearkivet</title>
<body>

<p>
Stagefilerna på CDn finns i katalogen <path>/mnt/cdrom/stages</path>. För att få en lista på alla tillgängliga stage, använder du <c>ls</c>:
</p>

<pre caption="Lista alla tillgängliga stagefiler">
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Om du får ett felmeddelande kan du behöva montera CDn först:
</p>

<pre caption="Montera din CD-ROM">
# <i>ls /mnt/cdrom/stages</i>
ls: /mnt/cdrom/stages: No such file or directory
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom</i>
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Gå nu till den plats där du monterat Gentoo (vanligtvis <path>/mnt/gentoo</path>):
</p>

<pre caption="Byt katalog till /mnt/gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Vi ska nu extrahera det stage-arkiv du har valt. Vi gör detta med verktyget GNU <c>tar</c>. Se till att du använder samma argument (<c>-xvjpf</c>)!  <c>x</c> står för <e>Extrahera</e>, <c>v</c> för <e>Verbose</e> (mångordig, ö.a.) för att se vad som händer under extraheringsprocessen (detta är valfritt), <c>j</c> för <e>Dekomprimera med bzip2</e>, <c>p</c> för <e>Bevara rättigheter</e> och <c>f</c> betyder att vi vill extrahera en fil, inte standard indata. I nästa exempel extraherar vi stage-arkivet <path>stage3-&lt;subarch&gt;-2005.0.tar.bz2</path>.  Se till att ersätta arkivnamnet med filnamnet på ditt stage-arkiv.
</p>

<pre caption="Extrahera stargearkivet">
# <i>tar -xvjpf /mnt/cdrom/stages/stage3-&lt;subarch&gt;-2005.0.tar.bz2</i>
</pre>

<p>
Nu här stagearkivet är installerat kan du fortsätta med <uri link="#installing_portage">Installera Portage</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternativ: Att använda en stage från Internet</title>
<subsection>
<title>Hämta ner stagearkivet</title>
<body>

<p>
Gå till den plats i filsystemet där du monterade dina filsystem (troligen <path>/mnt/gentoo</path>):
</p>

<pre caption="Att flytta till monteringsplatsen för Gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Beroende på ditt installationsmedium har du några verktyg att välja på för att hämta ner en stage. 
Om du har tillgång till <c>links2</c> kan surfa direkt till <uri link="/main/en/mirrors.xml">speglingslistan
på Gentoo</uri> och välja en spegling nära dig.
</p>

<p>
Om du inte har <c>links2</c> tillgängligt ska du ha <c>lynx</c> till hands. Om du behöver använda en proxy exporterar du <c>http_proxy</c> och
<c>ftp_proxy</c> variablerna:
</p>

<pre caption="Ange proxyinformation för lynx">
# <i>export http_proxy="http://proxy.server.com:port"</i>
# <i>export ftp_proxy="http://proxy.server.com:port"</i>
</pre>

<p>
Vi kommer nu att anta att du har tillgång till <c>links2</c>.
</p>

<p>
Välj <path>releases/</path> katalogen, därefter din arkitektur (till exempel <path>x86/</path>) och den Gentooversion (<path>2005.0/</path>) för att till slut välja 
<path>stages/</path> katalogen. Där bör du se alla tillgängliga stagefiler för din arkitektur (de kan vara sparade i underkataloger namngivna efter inidividuella underarkitekturer). Välj en och tryck <c>D</c> för att ladda ner den. När du är klar tryck <c>Q</c> för att stänga webbläsaren.
</p>

<pre caption="Surfa till speglingslistan med links2">
# <i>links2 http://www.gentoo.org/main/en/mirrors.xml</i>

<comment>(Om du behöver proxystöd med links2)</comment>     
# <i>links2 -http-proxy proxy.server.com:8080 http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Om du vill kontrollera det hämtade stagearkivets integritet, använder du <c>md5sum</c> 
och jämför resultatet med den MD5 kontrollsumman som finns på speglingssajten. Om du exempelvis vill
validera ett x86 stagearkiv:
</p>

<pre caption="Exempel för att kontrollera ett stagearkivs integritet">
# <i>md5sum -c  stage3-x86-2005.0.tar.bz2.md5</i>
stage3-x86-2005.0.tar.bz2: OK
</pre>

</body>
</subsection>
<subsection>
<title>Packa upp stagearkivet</title>
<body>

<p>
Packa nu upp den stage du hämtat ner till ditt system. Vi använder GNU <c>tar</c> 
här eftersom det är det enklaste sättet:
</p>

<pre caption="Packa upp stagefilen">
# <i>tar -xvjpf stage3-*.tar.bz2</i>
</pre>

<p>
<c>x</c> står för <e>Extrahera</e>, <c>v</c> för <e>Verbose</e> (mångordig, ö.a.) för att se vad som händer under extraheringsprocessen (detta är valfritt), <c>j</c> för <e>Dekomprimera med bzip2</e>, <c>p</c> för <e>Bevara rättigheter</e> och <c>f</c> betyder att vi vill extrahera en fil, inte standard indata.
</p>

<p>
Nu när du har installerat din stage fortsätter du med <uri link="#installing_portage">Installera Portage</uri>.
</p>

</body>
</subsection>
</section>
<section id="installing_portage">
<title>Installera Portage</title>
<subsection>
<title>Packa upp en portagebild</title>
<body>

<p>
Du behöver nu installera en bild av portage, en samling filer som informerar Portage om vilka mjukvarutitlar du kan installera, vilka profiler som är tillgängliga o.s.v.
</p>

</body>
</subsection>
<subsection id="installing_from_InstallCD">
<title>Packa upp ögonblicksbilden från Installation CDn</title>

<body>
<p>
För att installera ögonblicksbilden tittar du i <path>/mnt/cdrom/snapshots/</path> för att se vad som finns tillgängligt:
</p>

<pre caption="Kontrollera innehållet i /mnt/cdrom/snapshots/">
# <i>ls  /mnt/cdrom/snapshots/</i>
</pre>

<p>
Extrahera nu ögonblicksbilden med följande konstruktion. Återigen, se till att du använder de korrekta argumenten till <c>tar</c>. Notera också att <c>-C</c> är ett versalt
<c>C</c>, inte <c>c</c>. I nästa exempel använder vi <path>portage-&lt;date&gt;.tar.bz2</path> som bildfil. Se till att du ersätter namnet på filen med den som finns på din Installation CD.
</p>

<pre caption="Extrahera en portagebild">
# <i>tar -xvjf /mnt/cdrom/snapshots/portage-&lt;date&gt;.tar.bz2 -C /mnt/gentoo/usr</i>
</pre>
</body>
</subsection>

<subsection id="copysources">
<title>Kopiera källkodsarkiven</title>
<body>

<p>
Du behöver också kopiera över all källkod från din Universal Installation CD. 
</p>

<pre caption="Kopiera över källkoden">
# <i>mkdir /mnt/gentoo/usr/portage/distfiles</i>
# <i>cp /mnt/cdrom/distfiles/* /mnt/gentoo/usr/portage/distfiles/</i>
</pre>

</body>
</subsection>
</section>

<section id="compile_options">
<title>Konfigurera kompileringsmöjligheterna</title>
<subsection>
<title>Inledning</title>
<body>

<p>
För att optimera Gentoo kan du ange några variabler som påverkar hur
Portage beter sig. Alla variabler kan anges som miljövariabler (med <c>export</c>) 
men är då inte permanenta. För att behålla inställningar tillhandahåller Portage
konfigurationsfilen <path>/etc/make.conf</path>. Det är denna fil vi kommer att
redigera nu. 
</p>

<note>
En kommenterad lista på alla möjliga variabler finns i <path>/mnt/gentoo/etc/make.conf.example</path>. 
För att lyckas med Gentoo installationen behöver du bara ange variablerna som nämns här nedan.
</note>

<p>
Starta din favoriteditor (i denna guide använder vi <c>nano</c>) så kan vi ändra de optimeringsvariabler
som vi kommer att diskutera framöver. 
</p>

<pre caption="Öppna /etc/make.conf">
# <i>nano -w /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Som du förmodligen märkte har filen <path>make.conf.example</path> en generisk
struktur: kommenterade rader börjar med "#", andra rader definierar variabler med syntaxen
<c>VARIABLE="content"</c>. <path>make.conf</path> filen använder 
samma syntax. Flera av dessa variabler diskuteras här nedan. 
</p>

<warn>
Gör inga förändringar av USE variabeln om du gör en stage3 installation med GRP. Du kan ändra USE variabeln efter att ha installerat paket om du så vill. Vättar och allsköns annat oknytt är kända för att attackera system där man struntat i denna varning!
</warn>

</body>
</subsection>
<subsection>
<title>CHOST</title>
<body>

<warn>
Även om det kan vara lockande för andra än stage1 användare så ska de <e>inte</e>
ändra <c>CHOST</c> värdet i <path>make.conf</path>. Om man gör det kan systemet bli
oanvändbart. Återigen: ändra bara denna variabel om du använder en <e>stage1</e> installation.
</warn>

<p>
Den nätverkslösa installationsmetoden stöder endast stage3 installationer. Rör inte <e>CHOST</e> variabeln!
</p>

</body>
</subsection>
<subsection>
<title>CFLAGS och CXXFLAGS</title>
<body>

<p>
<c>CFLAGS</c> och <c>CXXFLAGS</c> variabler definierar optimeringsflaggor för 
<c>gcc</c>, C respektive C++ kompilatorerna. Även om vi gör en generell definition av dessa
här så kommer du bara att ha maximal prestanda om du optimerar dessa flaggor för 
varje enskilt program. Orsaken till detta är att alla program är olika. 
</p>

<p>
I <path>make.conf</path> ska du definiera optimeringsflaggor du <e>generellt</e> tror 
förbättrar prestandan i ditt system. Experimentera inte med detta värde. För mycket 
optimering kan få dina program att uppföra sig dåligt (krascha eller, vad värre är, till och med sluta 
fungera).
</p>

<p>
Vi kommer inte att förklara alla möjliga optimeringsmöjligheter. Om du vill lära dig alla dessa - läs <uri link="http://gcc.gnu.org/onlinedocs/">GNU Online Manual(s)</uri> eller 
infosidan <c>gcc</c> (<c>info gcc</c> -- endast på ett fungerande Linuxsystem). 
Filen <path>make.conf.example</path> innehåller också mycket exempel och information,
glöm inte att läsa den också. 
</p>

<p>
Ett första värde är <c>-march=</c> flaggan, som specifierar namnet på målarkitekturen. 
Möjliga val beskrivs i filen <path>make.conf.example</path> (som kommentarer). Exempelvis 
x86 Athlon XP arkitekturen:
</p>

<pre caption="GCC march värdet">
<comment># AMD64 användare som vill använda det egna 64-bitars systemet ska använda -march=k8</comment>
-march=athlon-xp
</pre>

<p>
Ett andra värde är <c>-O</c> flaggan (det är ett stort O, inte en nolla), som specifierar flaggan för
<c>gcc</c> optimeringsklass. Möjliga klasser är <c>s</c> (för storleksoptimerad), <c>0</c> 
(noll - för ingen optimering), <c>1</c>, <c>2</c> eller <c>3</c> för mer hastighetsoptimering 
(varje klass har samma flaggor som den föregående, plus några till). Som exempel tar vi klass 2
optimering:
</p>

<pre caption="GCC O värdet">
-O2
</pre>

<p>
Annan populär optimeringsflagga är <c>-pipe</c> (använd pipes snarare än tillfälliga filer
för kommunikation mellan de olika stegen i kompileringen).
</p>

<p>
Tänk på att att använda <c>-fomit-frame-pointer</c> (som inte behåller rampekaren i ett register för funktioner som inte behöver en) which doesn't keep the frame 
pointer in a register for functions that don't need one) kan ha allvarliga återverkningar när du avlusar program!
</p>

<p>
När du definierar <c>CFLAGS</c> och <c>CXXFLAGS</c> ska du kombinera flera optimeringsflaggor, 
som i följande exempel:
</p>

<pre caption="Definiera CFLAGS och CXXFLAGS värden">
CFLAGS="-march=athlon-xp -pipe -O2"   <comment># AMD64 användare ska använda -march=k8</comment>
CXXFLAGS="${CFLAGS}"                  <comment># Använd samma värden för båda variablerna</comment>
</pre>

</body>
</subsection>
<subsection>
<title>MAKEOPTS</title>
<body>

<p>
Med <c>MAKEOPTS</c> definierar du hur många parallella kompileringar som ska ske
när du installerar ett paket. Ett bra värde är antalet CPU i ditt system plus ett, men denna
tumregel är inte alltid helt perfekt.
</p>

<pre caption="MAKEOPTS för ett vanligt 1-CPU system">
MAKEOPTS="-j2"
</pre>

</body>
</subsection>
<subsection>
<title>Klara, färdiga, gå!</title>
<body>

<p>
Uppdatera din <path>/mnt/gentoo/etc/make.conf</path> enligt dina egna önskemål och spara 
(<c>nano</c> användare trycker <c>Ctrl-X</c>). Du är nu redo att fortsätta med 
<uri link="?part=1&amp;chap=6">Chroota till Gentoos bassystem</uri>.
</p>

</body>
</subsection>
</section>
</sections>
