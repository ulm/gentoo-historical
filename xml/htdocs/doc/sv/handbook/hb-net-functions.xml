<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<sections>

<version>1.0</version>
<date>2005-06-06</date>

<section>
<title>Standardfunktionskrokar</title>
<body>

<p>
Fyra funktioner kan definieras vilka kommer att anropas kring start/stop
operationerna. Funktionerna anropas med gränssnittsnamnet först så att en
funktion kan kontrollera flera adaptrar.
</p>

<p>
Returvärdena för preup och predown funktionerna ska vara 0 (lyckad) för att
indikera att konfigurationen eller dekonfigurationen av gränssnittet kan
fortsätta. Om preup ger ett returvärde som inte är noll, kommer konfigurationen
av gränssnittet inte att tillåtas att fortsätta. 
</p>

<p>
Returvärdet för postup och postdown funktionerna ignoreras då det inte
finns något att göra om de misslyckas.
</p>

<p>
<c>${IFACE}</c> får värdet på det gränssnitt som är på väg upp/ner<br/>
<c>${IFVAR}</c> är <c>${IFACE}</c> konverterat till ett variabelnamn som bash
tillåter.
</p>

<pre caption="pre/post up/down funktionsexempel">
preup() {
<comment># Testa länken till gränssnittet innan det går upp. Detta fungerar
# bara på vissa nätverksadaptrar och kräver att paketet mii-diag är
# installerad.</comment>
if mii-tool ${IFACE} 2> /dev/null | grep -q 'no link'; then
	ewarn "No link on ${IFACE}, aborting configuration"
	return 1
fi

<comment># Testa länken till gränssnittet innan det går upp. Detta fungerar
# bara på vissa nätverksadaptrar och kräver att paketet ethtool
# är installerad.</comment>
if ethtool ${IFACE} | grep -q 'Link detected: no'; then
	ewarn "No link on ${IFACE}, aborting configuration"
	return 1
fi
<comment># Kom ihåg att returnera 0 om det lyckas</comment>
return 0
}

predown() {
<comment># Standard i skriptet är att testa för NFS rot and inte tillåta att ta
# ner gränssnittet i det fallet. Notera att om du specificerar en predown()
# funktion kommer du att åsidosätta den logiken. Här är det, om du fortfarande
#vill ha det ...</comment>
if is_net_fs /; then
	eerror "root filesystem is network mounted -- can't stop ${IFACE}"
	return 1
fi

<comment># Kom ihåg att returnera 0 om det lyckas</comment>
return 0
}

postup() {
<comment># Denna funktion kan användas, till exempel, för att anmäla sig till en
# dynamisk DNS tjänst. En annan möjlighet vore att skicka/ta emot epost när väl
# gränssnittet är uppe.</comment>
return 0
}

postdown() {
<comment># Denna funktion är med mest för att komplettera de övriga. Jag har
# inte kommit på något finurligt att göra med den ännu ;-)</comment>
return 0
}
</pre>

</body>
</section>

<section>
<title>Wireless Tools funktionskrokar</title>
<body>

<note>
Detta kommer inte att fungera med WPA Supplicant - men <c>${ESSID}</c> och
<c>${ESSIDVAR}</c> variablerna finns tillgängliga i postup() funktionen.
</note>

<p>
Två funktioner kan definieras som kommer att kalla på omgivande associerade
funktioner. Funktionerna kallas på med gränssnittets namn först så att den
funktionen kan kontrollera flera adaptrar.
</p>

<p>
Returvärdet för det förassocicerade funktionen ska vara 0(lyckad) för att
indikera att konfigurationen eller dekonfigurationen av gränssnittet kan
fortsätta . Om förassocierade värdet returnerar något annat värde än noll,
kommer konfigurationen av gränssnittet att avbrytas.
</p>

<p>
Returvärdet för den efterassocierade funktionen ignoreras eftersom det inte
finns något att göra om den indikerar ett misslyckande.
</p>

<p>
<c>${ESSID}</c> anges till den exakta ESSID för den AP du ansluter till<br/>
<c>${ESSIDVAR}</c> är <c>${ESSID}</c> konverterad till ett variabelnamn
bash tillåter.
</p>

<pre caption="pre/post associeringsfunktioner">
preassociate() {
<comment># Nedan adderas två konfigurationsvariabler leap_user_ESSID
# och leap_pass_ESSID. När båda har konfigurerats för den ESSID det
#ansluts till kör vi CISCO LEAP skriptet</comment>
local user pass
eval user=\"\$\{leap_user_${ESSIDVAR}\}\"
eval pass=\"\$\{leap_pass_${ESSIDVAR}\}\"

if [[ -n ${user} &amp;&amp; -n ${pass} ]]; then
	if [[ ! -x /opt/cisco/bin/leapscript ]]; then
		eend "For LEAP support, please emerge
		net-misc/cisco-aironet-client-utils"
		return 1
	fi
	einfo "Waiting for LEAP Authentication on \"${ESSID//\\\\//}\""
	if /opt/cisco/bin/leapscript ${user} ${pass} | grep -q 'Login
	incorrect'; then
		ewarn "Login Failed for ${user}"
		return 1
	fi
fi

return 0
}

postassociate() {
<comment># Denna funktion är med mest för att komplettera de övriga. Jag har
# inte kommit på något finurligt att göra med den ännu ;-)</comment>
	return 0
}
</pre>

<note>
<c>${ESSID}</c> och <c>${ESSIDVAR}</c> är inte tillgängliga i predown() och
postdown() funktionerna.
</note>

</body>
</section>

</sections>
