<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/hb-portage-tools.xml,v 1.1 2005/04/02 18:45:42 neysx Exp $ -->

<sections>

<version>1.3</version>
<date>2004-10-24</date>

<section>
<title>etc-update</title>
<body>

<p>
<c>etc-update</c> är ett verktyg som hjälper till att infoga <path>._cfg0000_&lt;name&gt;</path> filerna. Den erbjuder ett interaktivt gränssnitt för att infoga filerna och kan också automatiskt infoga triviala förändringar.
<path>._cfg0000_&lt;name&gt;</path> filer genereras av Portage när den vill spara en fil i en katalog som skyddas av variabeln CONFIG_PROTECT.
</p>

<p>
Att köra <c>etc-update</c> innebär inga konstigheter:
</p>

<pre caption="Köra etc-update">
# <i>etc-update</i>
</pre>

<p>
Efter att ha infogat de enkla förändringarna presenteras du med en lista av skyddade filer för vilka det finns väntande uppdateringar. I slutet på listan finns de val du kan göra:
</p>

<pre caption="etc-update valmöjligheter">
Please select a file to edit by entering the corresponding number.
              (-1 to exit) (-3 to auto merge all remaining files)
                           (-5 to auto-merge AND not use 'mv -i'):
</pre>

<p>
IOm du anger <c>-1</c>, avslutas <c>etc-update</c> utan att genomföra några förändringar. Om du anger <c>-3</c> ellerr <c>-5</c>, kommer <e>alla</e> uppräknade konfigurationsfiler att skrivas över av de nyare versionerna. Det är därför mycket viktigt att först välja de konfigurationsfiler som inte ska uppdateras automatiskt. Det görs gneom att helt enkelt ange siffran som ges till vänster om konfigurationsfilen.
</p>

<p>
Vi väljer som exempel konfigurationsfilen <path>/etc/pear.conf</path>:
</p>

<pre caption="Uppadatera en specifik konfigurationsfil">
Beginning of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
<comment>[...]</comment>
End of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
1) Replace original with update
2) Delete update, keeping original as is
3) Interactively merge original with update
4) Show differences again
</pre>

<p>
Du kan nu se vilka skillnaderna är mellan de två filerna. Om du tror att den uppdaterade konfigurationsfilen kan användas utan problem anger du <c>1</c>. 
Om du tror att den uppdaterade konfigurationsfilen inte är nödvändig eller inte tillför någon ny eller användbar information väljer du <c>2</c>. Om du vill uppdatera filen interaktivt väljer du <c>3</c>.
</p>

<p>
Du är inte meningsfullt att vidare gå in på interaktiv infogning här. För fullständigheten skull ger vi en lista på de möjliga kommandon du kan använda medan du interaktivt sammanfogar de två filerna. Du presenteras med två rader (originalet och den föreslagna förändringen) och en prompt där du kan ange ett av följande kommandon:
</p>

<pre caption="Kommandon för interaktiv sammanslagning">
ed:     Edit then use both versions, each decorated with a header.
eb:     Edit then use both versions.
el:     Edit then use the left version.
er:     Edit then use the right version.
e:      Edit a new version.
l:      Use the left version.
r:      Use the right version.
s:      Silently include common lines.
v:      Verbosely include common lines.
q:      Quit.
</pre>

<p>
När du är klar med uppdateringen av de viktiga konfigurationsfilerna kan du nu automatiskt uppdatera alla de andra. <c>etc-update</c> kommer att avslutas om den inte hittar några fler uppdateringsbara filer.
</p>

</body>
</section>
<section>
<title>dispatch-conf</title>
<body>

<p>
Med <c>dispatch-conf</c> kan du slå samman uppdaterade konfigurationsfiler samtidigt som du har koll på alla förändringar. <c>dispatch-conf</c> sparar skillnaderna mellan konfigurationsfilerna som patchar eller genom att använda revisionshanteringsystemet RCS.
</p>

<p>
Precis som <c>etc-update</c> kan du begära att behålla konfigurationsfilen som den är, använda den nya konfigurationsfilen, redigera den befintliga eller sammanfoga filerna interaktivt. Dessutom har <c>dispatch-conf</c> några flera trevliga funktioner:
</p>

<ul>
  <li>
   Automatiskt sammanfoga konfigurationsfiler som bara innehåller uppdateringar av kommentarerna.
</li>
  <li>
   Automatiskt sammanfoga konfigurationsfiler vars enda skillnad består i mängden tomma rader.
</li>
</ul>

<p>
Försäkra dig om att du redigerat <path>/etc/dispatch-conf.conf</path> först och skapa katalogen som hänvisas till av variabeln archive-dir.
</p>

<p>
För mer information om <c>dispatch-conf</c> hänvisas till man sidan:
</p>

<pre caption="Läsa man sidan för dispatch-conf">
$ <i>man dispatch-conf</i>
</pre>

</body>
</section>
<section>
<title>quickpkg</title>
<body>

<p>
Med <c>quickpkg</c> kan du skapa arkiv av redan installerade paket på ditt system. Dessa arkiv kan användas som förkompilerade paket. Att köra 
<c>quickpkg</c> är okomplicerat: lägg bara till namnen på de paket du vill arkivera.
</p>

<p>
Om du till exempel vill arkivera <c>curl</c>, <c>arts</c>och <c>procps</c>:
</p>

<pre caption="Exampel på användning av quickpkg">
# <i>quickpkg curl arts procps</i>
</pre>

<p>
De förkompilerade paketen kommer att sparas i <path>/usr/portage/packages/All</path>. Symboliska länkar till dessa paket läggs i 
<path>/usr/portage/packages/&lt;category&gt;</path>.
</p>

</body>
</section>
</sections>
