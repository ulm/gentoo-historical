<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/hb-install-ppc-bootloader.xml,v 1.2 2005/06/08 10:29:18 neysx Exp $ -->

<sections>

<version>2.3</version>
<date>2005-04-11</date>


<section>
<title>Att göra ditt val</title>
<subsection>
<title>Inledning</title>
<body>

<p>
Nu när din kärna är konfigurerad och kompilerad och de nödvändiga systemkonfigurationsfilerna är korrekta, är det dags att installera ett program som laddar kärnan när du startar systemet. Ett sådant program kallas en <e>bootloader</e>. För x86, tillhandahåller Gentoo Linux <uri
link="#grub">GRUB</uri> och <uri link="#lilo">LILO</uri>. Men innan vi installerar någon av dessa två ska vi gå igenom hur man konfigurerar en framebuffer (om du vill använda den). Med framebuffer kan du använda Linux kommandorad med (rudimentära) grafiska funktioner (såsom att visa den fina startbilden som Gentoo kommer med).
</p>
<p>
Det finns flera systemladdare för Linux/PPC. Vi har <uri link="#yaboot">yaboot</uri> (för NewWorld Apple och IBM maskiner) och <uri link="#bootx">BootX</uri> (för 
OldWorld Apple maskiner). Pegasos behöver ingen systemladdare men vi har tagit med <uri link="#bootcreator">BootCreator</uri> för att skapa en startmeny i SmartFirmware.
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>Standard: Använd yaboot</title>
<subsection>
<title>Inledning</title>
<body>

<impo>
yaboot kan bara användas på NewWorld Apple och IBM system!
</impo>

<p>
Först måste vi skapa <path>/dev</path> filerna i vårt nya hem, som behövs under installationen av systemladdaren. Detta kan göras genom att mappa upp <path>/dev</path>-filsystemet från installations-CDn:
</p>

<pre caption="Bind-montera /dev-filsystemet">
# <i>exit </i> # detta lämnar den chrootade miljön
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>

<p>
Det finns två sätt att konfigurera yaboot för ditt system. Du kan använda den inkluderade <c>yabootconfig</c> för att automatiskt konfigurera yaboot. Om du av någon anledning inte vill köra <c>yabootconfig</c> för att automatiskt redigera <path>/etc/yaboot.conf</path> eller om du installerar Gentoo på en G5 (på vilken <c>yabootconfig</c> inte alltid fungerar), kan du redigera exempelfilen som redan är installerad på ditt system.
</p>

<note>
Du kan behöva redigera yaboot.conf filen om du använder genkernel.  Argumenten som tillhandahålls av genkernels ebuild-fil behöver läggas till som ett val till kärnan. Den relevanta delen av yaboot.conf följer här nedan:
</note>

<pre caption="Lägga till startargument till yaboot.conf">
<comment>#################
## Denna del kan kopieras om du har mer än en kärna eller samling
## startargument - ersätt 2.6.9 med din version av kärnan
#################</comment>
image=/boot/kernel-2.6.9
label=Linux
root=/dev/ram0<comment># Om genkernel används är detta /dev/ram0</comment>
partition=3
sysmap=/boot/System.map-2.6.9
append="real_root=/dev/hda3 init=/linuxrc"<comment># Lägg till argumenten till denna rad</comment>
read-only
<comment>##################</comment>
</pre>

<ul>
<li><uri link="#yabootconfig">Standard: Använda yabootconfig</uri></li>
<li>
<uri link="#manual_yaboot">Alternativ: Manuell yaboot-konfiguration</uri>
</li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig">
<title>Standard: Använd yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> kommer att automatiskt hitta partitionerna på din maskin och kommer att konfigurera dubbel- eller trippelstartskombinationer med Linux, Mac OS och Mac OS X.
</p>

<p>
För att använda <c>yabootconfig</c>, måste din disk ha en Apple_Bootstrap-partition, och <path>/etc/fstab</path> måste konfigureras med dina Linuxpartitioner. Detta ska ha gjorts redan i tidigare steg här ovan. Till att börja med ser du till att den senaste versionen av <c>yaboot</c> är installerad.
</p>

<pre caption = "Installera yaboot med GRP">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Gå nu ur din chrootade miljön och kör <c>yabootconfig --chroot /mnt/gentoo</c>. Programet kommer att köras och kommer att konfigurera platsen för bootstrap-partitionen.
Skriv <c>Y</c> om den är korrekt. Om inte, dubbelkolla <path>/etc/fstab</path>. yabootconfig söker därefter av din systemkonfiguration, skapar <path>/etc/yaboot.conf</path> och kör <c>mkofboot</c> åt dig. <c>mkofboot</c> används för att formatera Apple_Bootstrap-partitionen och installerar yaboots konfigurationsfil i den. Efter detta går du åter in i den chrootade miljön.
</p>
<pre caption="Gå in i den chrootade miljön">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Du kan vilja verifiera innehållet i <path>/etc/yaboot.conf</path>. Om du gör förändringar av <path>/etc/yaboot.conf</path> (som att ange standard/start OS), se då till att köra  <c>ybin -v</c> igen för att applicera ändringarna på Apple_Bootstrap-partitionen.
</p>

<p>
Fortsätt nu med <uri link="#reboot">Starta om systemet</uri>.
</p>

</body>
</subsection>
<subsection id="manual_yaboot">
<title>Alternativ: Manuell yaboot-konfiguration</title>
<body>

<p>
Se först till att du har den senate versionen av <c>yaboot</c> installerad på ditt system:
</p>

<pre caption = "Installera yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Nedan hittar du en färdigställd <path>yaboot.conf</path> fil. Ändra den som du tycker. G5 användare ska vara medvetna om att deras diskar är Serial ATA som ses som SCSI av Linuxkärnan (ersätt därför <path>/dev/hda</path> med <path>/dev/sda</path>).
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## kör: "man yaboot.conf" för detaljer. Gör inga förändringar innan dess!!
## se också: /usr/share/doc/yaboot/examples för exempelkonfigurationer.
##
## För dubbelstartsmeny, lägg till en eller fler av:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## our bootstrap partition:</comment>

boot=/dev/hda2

<comment>## ofboot är det sätt openfirmware specificerar bootstrap-partitionen.
## Om detta inte specificeras kommer yaboot att misslyckas på G5 och vissa G4 (såvida inte
## du skickar de nödvändiga argumenten till mkofboot/ybin programet).
## hd:X betyder /dev/sdaX (or /dev/hdaX).
## 
## G5 användare ska avkommentera följande rad!!

#ofboot=hd:2

## hd: är open firmware sätt att säga hda</comment>
device=hd:

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Denna del kan kopieras om du har mer än en kärna eller en samling
## startargument - ersätt 2.6.9 med versionen på din kärna
#################</comment>
image=/boot/kernel-2.6.9
label=Linux
root=/dev/hda3
partition=3
sysmap=/boot/System.map-2.6.9
read-only
<comment>##################

## G5 användare och vissa G4 användare ska ange 
##   macos=hd:13
##   macosx=hd:12
## istället för exempelvärdena.</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
När väl <path>yaboot.conf</path> är konfigurerad på det sätt du vill ha den, kör du <c>mkofboot -v</c> för att installera värdena i bootstrap-partitionen. <e>Glöm inte detta!</e> Kontrollera detta när <c>mkofboot</c> ber dig skapa ett nytt filsystem.
</p>

<p>
Om allt går väl och du har samma val som i exemplet ovan, kommer nästa omstarta att ge dig en enkel startmeny om fem poster. Om du uppdaterar yaboot konfigurationen senare behöver du köra <c>ybin -v</c> för att uppdatera bootstrap-partitionen - <c>mkofboot</c> används bara för den ursprungliga konfigurationen.
</p>

<p>
För mer information om yaboot hänvisar vi till <uri link="http://penguinppc.org/bootloaders/yaboot">yaboot project</uri>. För tillfället kan du fortsätta installationen med 
<uri link="#reboot">Starta om systemet</uri>.
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>Alternativ: BootX</title>
<body>

<impo>
BootX kan bara användas på OldWorld Apple system!
</impo>

<p>
Då BootX startar Linux från inuti MacOS behöver kärnan kopieras från Linuxpartitionen till MacOS-partitionen. Montera första MacOS-partitionen från utanför den chrootade miljön. Använd <c>mac-fdisk -l</c> för att hitta partitionsnumret för MacOS-partitionen, sda6 används i exemplet här. När partitionen är monterad kopierar vi kärnan till systemmappen så att BootX kan hitta den.
</p>

<pre caption="Kopiera kärnan till MacOS-partitionen">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux "/mnt/mac/System Folder/Linux Kernels"</i>
</pre>

<p>
Om genkernel används finns kärnan på ett annat ställe och initrd-filen behöver också kopieras.
</p>

<pre caption="Kopiera genkernel kärnan och initrd-filen till MacOS-partitionen">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initrd-* "/mnt/mac/System Folder"</i>
</pre>

<p>
Nu när kärnan kopierats över avmonterar du alla monterade filsystem och ger det magiska kommando du har väntat på: <c>reboot</c>.
</p>

<pre caption="Avmontera alla partitioner och starta om">
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Glöm naturligtvis inte att avlägsna alla startbara media. Den här gången behöver MacOS starta.
</p>

<p>
Nu när maskinen har startat MacOS, öppnar du BootX kontrollpanelen och väljer
<c>Options</c>. Bocka ur <c>Used specified RAM disk</c> om du inte använder
genkernel.  Om du använder genkernel, se då till att genkernel initrd är valt
istället för Installation CD initrd.  Om du inte använder genkernel, finns det
nu ett alternativ att specificera maskinen Linuxrotdisk och partition. Fyll i
dessa med lämpliga värden. Beroende på kärnans konfiguration kan vissa
startargument behöva anges.
</p>

<p>
BootX kan konfigureras att starta Linux från början. Om du väljer detta kommer datorn att starta med MacOS varpå BootX laddas som i sin tur starar Linux. Se 
<uri link="http://penguinppc.org/bootloaders/bootx/">Boot X sajten</uri> för mer information.
</p>

<p>
Nu startar du om igen och startar då med Linux för att fortsätta med <uri link="?part=1&amp;chap=11">Slutföra din Gentooinstallation</uri>.
</p>

</body>
</section>
<section id="bootcreator">
<title>Alternativ: BootCreator</title>
<body>

<impo>
BootCreator kommer att bygga en trevlig SmartFirmware starmeny skriven i Forth för Pegasos.
</impo>

<p>
Se första till att du har den senaste <c>bootcreator</c> installerad på ditt system:
</p>

<pre caption = "Installera bootcreator">
# <i>emerge --usepkg --update bootcreator</i>
</pre>

<p>
Kopiera nu filen <path>/etc/bootmenu.example</path> till <path>/etc/bootmenu</path> och redigera den efter dina behov:
</p>

<pre caption = "Redigera konfigurationsfilen för bootcreator">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
Nedan hittar du en färdig <path>/etc/bootmenu</path> konfigurationsfil. Ändra den efter behov.
</p>

<pre caption = "bootcreator config file">
<comment>#
# Exempel på beskrivningsfil för bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux 2.6.10 (Normal)
ide:0 linux-2.6.10 video=radeonfb:1024x768@70 root=/dev/hda3

</pre>

<p>
Slutligen måste <path>bootmenu</path> filen föras över till Forth och kopieras till din startpartition så att SmartFirmware kan läsa den.  Du behöver därför anropa  <c>bootcreator</c>:
</p>

<pre caption = "Installera startmenyn">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
Se till titta efter i SmartFirmwares inställningar så att <path>menu</path> verkligen är den som laddas som standard när du startar.
</note>

<p>
För tillfället kan du fortsätta med <uri link="#reboot">Starta om systemet</uri>.
</p>


</body>
</section>

<section id="reboot">
<title>Starta om systemet</title>
<subsection>
<body>

<p>
Gå ur den chrootade miljön och avmontera alla monterade partitioner. Därefter skriver du det magiska kommandot du har väntat på: <c>reboot</c>.
</p>

<pre caption="Avmontera alla partitioner och starta om">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Glöm naturligtvis inte att ta bort den startbara CDn annars kommer CDn att starta igen - istället för ditt nya Gentoosystem.
</p>

<p>
När du väl startat om avslutar du Gentooinstallationen med <uri link="?part=1&amp;chap=11">Slutför din Gentooinstallation</uri>.
</p>

</body>
</subsection>
</section>
</sections>

