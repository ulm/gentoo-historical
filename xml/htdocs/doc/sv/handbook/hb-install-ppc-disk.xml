<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/hb-install-ppc-disk.xml,v 1.1 2005/04/29 16:05:17 neysx Exp $ -->

<sections>

<version>2.00</version>
<date>2005-03-28</date>

<section>
<title>Introduktion till blockenheter</title>
<subsection>
<title>Blockenheter</title>
<body>

<p>
Vi kommer att ta en ordentlig titt på de diskorienterade aspekterna av Gentoo Linux
och Linux generellt, inklusive Linux filsystem, partitioner och blockenheter. När du
väl känner dig mer hemma på diskar och filsystem kommer du att guidas genom processen att 
sätta upp partitioner och filsystem för din Gentoo Linux installation.
</p>

<p>
Vi börjar med att presentera <e>blockenheter</e>. Den mest kända blockenheten är förmodligen
den som representerar den första IDE disken i ett Linuxsystem, nämligen <path>/dev/hda</path>. 
Om ditt system använder SCSI eller SATA diskar, kommer den första hårddisken att vara 
<path>/dev/sda</path>.
</p>

<p>
Blockenheterna ovan representerar ett abstrakt gränssnitt till disken. Användarprogram kan 
använda dessa blockenheter för att interagera med din disk utan att oroa sig för om din disk
är IDE, SCSI eller något annat. Programen direkt adressera lagringsplatsen på disken som en
samling sammanhängande slumpmässigt tillgängliga 512-bitar block. 
</p>

</body>
</subsection>
<subsection>
<title>Partitioner och skivor</title>
<body>

<p>
Även om det teoretiskt är möjligt att använda en hel disk för att härbärgera ditt Linuxsystem förekommer det nästan aldrig i praktiken. Istället partitionerar man en diskenhet i mindre, mer hanterliga enheter. På de flesta system kallas dessa <e>partitioner</e>.  Andra arkitekturer använder en liknande teknik som kallas <e>skivor</e>.
</p>

</body>
</subsection>
<subsection>
<title>Avancerad förvaring</title>
<body>

<p>
x86 Installation CD stöder EVMS och LVM2. EVMS och LVM2 ökar flexibiliteten hos din partitionering. Under installationsinstruktionerna ska vi fokusera på den "vanliga" partitionerna, men det är ändå bra att veta att också EVMS och LVM2 stöds.
</p>

</body>
</subsection>
</section>
<section>
<title>Skapa ett partitonsschema</title>
<subsection>
<title>Ett standardiserat partitionsschema</title>
<body>

<p>
Om du inte är intresserad av att skapa ett partitionsschema för ditt system kan du använda det partitionsschema vi använder genomgående i denna bok:
</p>

<table>
<tr>
  <th>Partition Nyare </th>
  <th>Partition Äldre</th>
  <th>Partition Pegasos</th>
  <th>Partition RS/6000</th>
  <th>Filsystem</th>
  <th>Storlek</th>
  <th>Beskrivning</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(Ej relevant)</ti>
  <ti>(Ej relevant)</ti>
  <ti>(Partitionskarta)</ti>
  <ti>32k</ti>
  <ti>Apple_partitionskarta</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(Behövs ej)</ti>
  <ti>(Ej relevant)</ti>
  <ti>(Ej relevant)</ti>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti>(Ej relevant)</ti>
  <ti>(Ej relevant)</ti>
  <ti>(Ej relevant)</ti>
  <ti><path>/dev/sda1</path></ti>
  <ti>(PReP Boot)</ti>
  <ti>800k</ti>
  <ti>Type 0x41</ti>
</tr>
<tr>
  <ti>(Behövs ej)</ti>
  <ti>(Behövs ej)</ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(Behövs ej)</ti>
  <ti>ext2</ti>
  <ti>32MB</ti>
  <ti>Startpartition</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda2</path></ti>
  <ti><path>/dev/hda2</path></ti>
  <ti><path>/dev/sda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Växlingspartition, Type 0x82</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/sda3</path></ti>
  <ti>ext3, xfs</ti>
  <ti>Rest of the disk</ti>
  <ti>Root partition, Type 0x83</ti>
</tr>
</table>

<note>
Det finns vissa partitioner med namn som: <path>Apple_Driver43, Apple_Driver_ATA, Apple_FWDriver, Apple_Driver_IOKit, Apple_Patches</path>. Om du inte tänker använda MacOS 9 kan du radera dem, eftersom MacOS X och Linux inte behöver dem. Du kan behöva använda <c>parted</c> för att kunna radera dem då mac-fdisk ännu inte kan radera dem.
</note>

<warn>
<c>parted</c> kan ändra storleken på partitioner. På installations-CDn finns det patchar för att ändra storleken på HFS+ filsystem. Olyckligtvis är det inte möjligt att ändra storleken på journalförda HFS+ filsystem, även om journalföringen har stängts av i Mac OS X.  Alla storleksförändringar du gör med parted gör du på egen risk! Se till att säkerhetskopiera din data!
</warn>

<p>
Läs vidare om du är intresserad av att veta hur stor en partition bör vara, eller till och med hur många partitioner du behöver. Annars kan du nu fortsätta med <uri link="#fdisk">Standard: Använda mac-fdisk (Apple/IBM) för att partitionera din disk</uri> eller <uri link="#parted">Alternativ: Använda parted (särskilt Pegasos) för att partitionera din disk</uri>.

</p>

</body>
</subsection>
<subsection>
<title>Hur många och hur stora?</title>
<body>

<p>
Antalet partitioner är beror i hög grad på din miljö. Om du exempelvis har många användare kommer du sannolikt att vilja skilja ut din <path>/home</path> för att öka säkerheten och förenkla säkerhetskopiering. Om du använder Gentoo som epostserver bör du skilja ut din <path>/var</path> då all epost förvaras där. Ett bra val av filsystem kan därefter maximera prestandan. En spelserver bör ha en separat <path>/opt</path> eftersom de flesta spelservrar installeras där. Skälen desamma som för <path>/home</path>: säkerhet och säkerhetskopiering.
</p>

<p>
Som du ser beror det mycket på vad du vill uppnå. Skiljda partitioner eller volymer har följande fördelar:
</p>

<ul>
<li>
  Du kan välja det prestandamässigt bästa filformatet för varje partition eller volym.
</li>
<li>
 Hela systemet kan inte få slut på diskutrymme om ett trasigt verktyg kontinuerligt skriver filer i en partition eller en volym. 
</li>
<li>
 Om det nödvändigt tar filsystemskontroller mindre tid då flera kontroller kan göras samtidigt (även om denna fördel mer att göra med flera diskar än flera partitioner)
</li>
<li>
  Säkerheten kan ökas genom att vissa partitioner eller volymer monteras med enbart läsrättigheter, nosuid (setuid bitar ignoreras), noexec (exekverbara bitar ignoreras) osv.
</li>
</ul>

<p>
Det finns emellertid en stor nackdel med flera partitioner: om dessa inte konfigureras ordentligt kan du få ett filsystem med mycket ledigt utrymme i en partition men inget på ett annat. Det finns också en begränsning till högst 15 partitioner för SCSI och SATA.
</p>


</body>
</subsection>
</section>
<section id="fdisk">
<title>Standard: Använd mac-fdisk för att partitionera din disk</title>
<subsection>
<body>

<p>
Nu skapar du dina partitioner med hjälp av <c>mac-fdisk</c>:
</p>

<pre caption="Starta mac-fdisk">
 <i>mac-fdisk /dev/hda</i>
</pre>

<p>
Först raderar du de partitioner du har rensat tidigare för att göra plats åt dina Linuxpartitioner. Använd <c>d</c> i <c>mac-fdisk</c> för att radera dessa partitioner. Den kommer att fråga dig om numret på den partition du vill radera. Vanligtvis kan inte den första partitionen på nyare maskiner ( Apple_partitionskarta) inte raderas.
</p>

<p>
Därefter skapar du en <e>Apple_Bootstrap</e> partition genom att använda <c>b</c>. Den kommer att fråga dig om vilket block du vill starta vid. Ange numret på den första lediga partitionen följt av ett <c>p</c>. Exempelvis så här: <c>2p</c>.
</p>

<note>
Denna partition är <e>inte</e> en <path>/boot</path> partition. Den används inte alls av Linux: du behöver inte lägga något filsystem på den och du ska aldrig montera den. Appleanvändare behöver ingen extra partition för <path>/boot</path>.
</note>

<p>
Nu skapar du en växlingspartition genom att trycka <c>c</c>. Återigen kommer <c>mac-fdisk</c> att fråga efter det block du vill börja denna partition från. Eftersom vi använda <c>2</c> när vi skapade Apple_Bootstrap partitionen ska du nu ange <c>3p</c>. Når du tillfrågas om storlek anger du <c>512M</c> (eller vilken storlek du nu vill ha -- 512MB rekommenderas dock). När du tillfrågas om ett namn anger du <c>swap</c> (krävs).
</p>

<p>
För rotpartitionen trycker du <c>c</c>, följt av <c>4p</c> för att välja det block där rotpartitionen ska börja. När du tillfrågas om storlek skriver du <c>4p</c> igen.  <c>mac-fdisk</c> kommer att tolka detta som "Använd allt tillgängligt utrymme". När du tillfrågas om partitionens namn anger du <c>root</c> (krävs).
</p>

<p>
Avsluta ,med att skriva partitionerna till disk med <c>w</c> och <c>q</c> för att avsluta <c>mac-fdisk</c>.
</p>

<note>
För att försäkra dig om att allt är OK bör du köra mac-fdisk igen och kontrollera om alla partitioner är på plats. Om du inte ser någon av de partitioner du skapade, eller du förändringar du gjort bör du initialisera om dina partitioner med <c>i</c> i mac-fdisk. Notera att detta kommer att återskapa partitionskartan och därmed radera alla dina partitioner.
</note>

<p>
Nu när dina partitioner har skapats kan du fortsätta med <uri link="#filesystems">Skapa filsystem</uri>.
</p>

</body>
</subsection>
</section>
<section id="parted">
<title>Använd parted (särskilt Pegasos) för att partitionera din disk</title>
<body>

<p>
<c>parted</c>, Partition Editor, kan nu hantera HFS+ partitioner som används av Mac OS och Mac OS X. Med detta verktyg kan du ändra storleken på dina Mac-partitioner och skapa utrymme för dina Linuxpartitioner. Trots det beskriver exemplet nedan endast  partitioneringen för Pegasosmaskiner.
</p>

<p>
Vi börjar med att starta <c>parted</c>:
</p>

<pre caption="Starting parted">
# <i>parted /dev/hda</i>
</pre>

<p>
Om disken är opartitionerad kör du <c>mklabel amiga</c> för att skapa ett namn för disken.
</p>

<p>
Du kan skriva <c>print</c> när som helst för att visa den aktuella partitonstabellen. Om du någon gång ändrar dig eller gör ett misstag kan du trycka <c>Ctrl-c</c> för att avbryta parted.
</p>

<p>
Om du också tänker installera MorphOS på din Pegasos skapa då filsystemet affs1 kallat"BI0" (BI zero) i början av disken. 32Mb bör vara mer än tillräckligt för att lagra din MorphOS kärna. Om du har en Pegasos I eller tänker använda reiserfs eller xfs behöver du också lagra din Linuxkärna på denna partition  (Pegasos II kan bara starta från  ext2/ext3 eller affs1 partitioner). För att skapa partitionen kör du <c>mkpart primary affs1 START SLUT</c> där <c>START</c> och <c>SLUT</c> ersätts med omfattningen av megabyte (e.g. <c>0 32</c> skapar en 32 MB partition med början vid 0MB och slut vid 32MB.
</p>

<p>
Du behöver skapa två partitioner för Linux, ett rotfilsystem för alla dina program, mm och en växlingspartition. För att skapa rotfilsystemet måste du först besluta dig för vilket filsystem du vill använda. Du kan välja mellan ext2, ext3, reiserfs och xfs. Om du inte vet vad du gör så välj ext3. Kör <c>mkpart primary ext3 START SLUT</c> för att skapa en ext3 partition. Ersätt återigen <c>START</c> och <c>SLUT</c> med start- och stoppposition i megabyte för partitionen.
</p>

<p>
Det rekommenderas generellt att du skapar en växlingspartition som är dubbelt så stort som mängden RAM i din dator. Du kommer förmodligen undan med en mindre växlingspartition om du inte tänker köra många applikationer åt gången (även om minst 512 MB rekommenderas). För att skapa växlingspartitionen kör du <c>mkpart primary linux-swap START END</c>.
</p>

<p>
Skriv ner partitionsnumren då de behövs under installationsprocessen. För att visa dessa kör du <c>print</c>. Dina diskar kommer du åt som <path>/dev/hdaX</path> där X ersätts med partitionsnumret.
</p>

<p>
När du är klar med parted kör du helt enkelt <c>quit</c>.
</p>

</body>


</section>
<section id="filesystems">
<title>Skapa filsystem</title>
<subsection>
<title>Inledning</title>
<body>

<p>
Nu när dina partitioner har skapats är det dags att lägga ett filsystem på dem. Om du inte bryr dig om vilket filsystem det är och är nöjd med det vi använder som standard i denna handbok kan du fortsätta med <uri link="#filesystems-apply">Lägga ett filsystem på en partition</uri>. Annars läser du vidare för att lära dig lite om de filsystem som erbjuds...
</p>

</body>
</subsection>
<subsection>
<title>Filsystem?</title>
<body>

<p>
Det finns flera filsystem av välja på. ext2, ext3 och XFS har visat sig vara stabila på PPC arkitekturen. jfs stöds inte, ReiserFS har fortfarande vissa problem på ppc och stöds inte heller.
</p>

<p>
<b>ext2</b> är det välkända filsystemet på Linux men har inte metadatajournaler. Vilket betyder att rutinartade kontroller av ext2 filsystem vid systemstart kan ta ganska lång tid. Det finns nu ett större urval av nyare, journalbaserade filsystem som kan kontrollera filsystemet mycket snabbt och brukar därför föredras före filsystem utan journaler. Journalbaserade filsystem förhindrar långa förseningar när du startar ditt system och filsystemet råkar vara inkonsistent.
</p>

<p>
<b>ext3</b> är en journalbaserad version av filsystemet ext2, som ger journalföring av metadata för snabb återställning utöver förbättrad journalföringslägen som full och ordnad datajournaler. ext3 är ett mycket bra och pålitligt filsystem. Det har en extra hashad b-tree indexmöjlighet som möjliggör hög prestanda i nästan alla situationer. I korthet, ext3 är ett utmärkt filsystem.
</p>

<p>
<b>ReiserFS</b> är en B*-tree baserat filsystem som har mycket god allmän prestanda och utklassar både ext2 och ext3 när den hanterar små filer (mindre än 4k), ofta  med så mycket som 10-15 gånger. ReiserFS skalar också extremt bra och har journalförd metadata. I och med 2.4.18 kärnan och senare är ReiserFS ett solitt och användbart filsystem för såväl allmäna situationer som extrema fall som skapande av stora filsystem bestående av många små filer, mycket stora filer och kataloger innehållandes tiotusentals filer. Dessvärre har vi fortfarande vissa problem med ReiserFS på ppc. Vi uppmuntrar inte folk att använda detta filsystem.
</p>

<p>
<b>XFS</b> är ett filsystem med journalförd metadata som kommer med en robust uppsättning funktioner och är optimerat för skalbarhet.  Vi rekommenderar detta filsystem endast för Linuxsystem med mer avancerade SCSI och/eller fibre channel lagringsystem med UPS. Eftersom XFS cachar in-transit data aggresivt i RAM, kan felaktigt designade program (sådana som inte tar tillräckliga försiktighetsåtgärder när de skriver till disk och det finns en hel del sådana)  förlora en hel del data om systemet går ner oväntat.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Lägga ett filsystem på en partition</title>
<body>

<p>
För att skapa ett filsystem på en partition eller volym finns det verktyg för det på varje möjligt filsystem:
</p>

<table>
<tr>
    <th>Filsystem</th>
    <th>Kommando för att skapa</th>
</tr>
<tr>
    <ti>ext2</ti>
    <ti><c>mkfs.ext2</c></ti>
</tr>
<tr>
    <ti>ext3</ti>
    <ti><c>mkfs.ext3</c></ti>
</tr>
<tr>
    <ti>reiserfs</ti>
    <ti><c>mkfs.reiserfs</c></ti>
</tr>
<tr>
    <ti>xfs</ti>
    <ti><c>mkfs.xfs</c></ti>
</tr>
</table>

<p>
Som exempel tar vi rotpartitionen (<path>/dev/hda4</path> i vårt exempel) i ext3 då du ska använda:
</p>

<pre caption="Lägga ett filsystem på en partition">
# <i>mkfs.ext3 /dev/hda4</i>
</pre>

<p>
Nu skapar du filsystem på de nyligen skapade partitionerna (eller logiska volymerna).
</p>

<note>
På äldre maskiner och PegasosII måste den partition där kärnan ligger vara ext2 eller ext3.  Nyare maskiner kan starta från något av filsystemen ext2, ext3, XFS, ReiserFS eller till och med HFS/HFS+.
</note>


</body>
</subsection>
<subsection>
<title>Aktivera växlingspartitionen</title>
<body>

<p>
<c>mkswap</c> är kommandot som används för att initialisera växlingspartitioner:
</p>

<pre caption="Skapa en växlingspartition">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
För att aktivera växlingspartitionen använder du <c>swapon</c>:
</p>

<pre caption="Aktivera växlingspartitionen">
# <i>swapon /dev/hda3</i>
</pre>

<p>
Skapa och aktivera nu växlingspartitionen.
</p>

</body>
</subsection>
</section>
<section>
<title>Montering</title>
<body>

<p>
Nu när dina partitioner har initialiserats och har ett filsystem är det dags att montera dessa. Använd kommandot <c>mount</c>. Glöm inte att skapa de nödvändiga monteringskatalogerna för varje partition du skapade. Som exempel väljer vi att skapa en monteringspunkt och rotpartitionen:
</p>

<warn>
På grund av en bugg i e2fsprogs paketet behöver du explicit använda argumentet  <c>mount -t ext3</c> om du använder ett ext3-filsystem.
</warn>

<pre caption="Montera partitioner">
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda4 /mnt/gentoo</i>
<comment>(För ext3 partitioner:)</comment>
# <i>mount -t ext3 /dev/hda4 /mnt/gentoo</i>
</pre>

<note>
Om du vill att din <path>/tmp</path> ska ligga på en separat partition se till att ändra dess rättigheter efter monteringen: <c>chmod 1777 /mnt/gentoo/tmp</c>. Detta gäller också för <path>/var/tmp</path>.
</note>

<p>
Vi kommer också att behöva montera proc filsystemet (ett virtuellt gränssnitt till kärnan) på <path>/proc</path>. Men innan vi gör det måste vi lägga in filer i våra partitioner.
</p>

<p>
Fortsätt med <uri link="?part=1&amp;chap=5">Installera Gentoos installationsfiler</uri>.
</p>

</body>
</section>
</sections>
