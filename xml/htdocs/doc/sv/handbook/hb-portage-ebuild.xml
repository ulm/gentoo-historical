<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/hb-portage-ebuild.xml,v 1.1 2005/04/02 18:49:45 neysx Exp $ -->

<sections>

<version>1.3</version>
<date>2004-10-24</date>

<section>
<title>Emerge och Ebuild</title>
<body>

<p>
<c>ebuild</c> applikationen är ett lågnivågränssnitt till Portagesystemet. Genom att använda denna applikation kan du exekvera specifika åtgärder mot en given ebuild. Du kan till exempel genomföra de enskilda installationsstegen själv. 
</p>

<p>
Att använda <c>ebuild</c> är mer lämpat för utvecklingsändamål; mer information om ebuild hittar du därför i  <uri link="/proj/en/devrel/handbook/handbook.xml">Utvecklarhandboken</uri>. Vi ska emellertid förklara vilka ebuildinstances som anropas av Portage under installationsprocessen av specifika mjukvaror, och hur du anropar post-konfigurationsstegen som vissa ebuildskript låter dig genomföra.
</p>

</body>
</section>
<section>
<title>Manuell installation av mjukvara</title>
<subsection>
<title>Hämta källkoden &amp; Checksumma</title>
<body>

<p>
Närhelst du anropa <c>ebuild</c> mot en given ebuildfil kommer den att verifiera om checksumman av alla inblandade filer motsvarar den som anges i det tillhörande   <path>Manifest</path>- eller <path>files/digest-&lt;name&gt;-&lt;version&gt;</path> filen. Detta sker efter det att källkoderna har hämtats.
</p>

<p>
För att hämta källkoden med hjälp av <c>ebuild</c>, kör:
</p>

<pre caption="Hämta källkoden">
# <i>ebuild path/to/ebuild fetch</i>
</pre>

<p>
Om ebuildfilens (filernas) md5sum inte stämmer överens med den som anges i <path>Manifest</path> filen, eller om en av de nedladdade källkoderna inte överensstämmer med de som uppges i <path>files/digest-&lt;package&gt;</path> filen kommer du att få ett felmeddelande liknande detta:
</p>

<pre caption="Ebuild checksummefel">
!!! File is corrupt or incomplete. (Digests do not match)
>>> our recorded digest: db20421ce35e8e54346e3ef19e60e4ee
>>>  your file's digest: f10392b7c0b2bbc463ad09642606a7d6
</pre>

<p>
Den därpå följande raden kommer att nämna den felaktiga filen. 
</p>

<p>
Om du är säker på att källkoderna du har hämtat och själva ebuildfilen är korrekta kan du generera om <path>Manifest</path>- och <path>digest-&lt;package&gt;</path> filerna genom att använda <c>ebuild</c>s digestfunktion:
</p>

<pre caption="Generera nya Manifest and digest filer">
# <i>ebuild path/to/ebuild digest</i>
</pre>

</body>
</subsection>
<subsection>
<title>Packa upp källkoden</title>
<body>

<p>
För att packa uppn källkoden i <path>/var/tmp/portage</path> (eller någon annan katalog du har specificerat i <path>/etc/make.conf</path>), kör du <c>ebuild</c>s
unpackfunktion:
</p>

<pre caption="Packa upp källkoden">
# <i>ebuild path/to/ebuild unpack</i>
</pre>

<p>
Detta kommer att exekvera ebuildskriptets src_unpack() funktion (som som standard använder vanlig uppackning om inte src_unpack() funktion är definierad). Det är också i detta steg som alla nödvändiga patchar appliceras.
</p>

</body>
</subsection>
<subsection>
<title>Kompilera källkoden</title>
<body>

<p>
Nästa steg i installationsprocessen är att kompilera källkoden. <c>ebuild</c>skriptets funktionalitet hanterar detta steg genom att exekvera funktionen src_compile() i ebuild. Detta inkluderar också konfigurationsstegen om de så krävs. 
</p>

<pre caption="Kompilera källkoden">
# <i>ebuild path/to/ebuild compile</i>
</pre>

<p>
Du råds att redigera ebuilds src_compile() funktion om du vill andra kompileringsinstruktionerna. Emellertid kan du också lura Portage att tro att <c>ebuild</c> applikationen kompilerat klart. Kör alla nödvändiga kommandon själv och skapa en tom fil med namnet <path>.compiled</path> i arbetskatalogen:
</p>

<pre caption="Informera Portage om det avslutade kompileringsjobbet">
# <i>touch .compiled</i>
</pre>

</body>
</subsection>
<subsection>
<title>Installera filerna på en tillfälllig plats</title>
<body>

<p>
I nästa steg kommer Portage att installera alla nödvändiga filer i på en temporär plas. Denna katalog kommer därefter att innehålla alla filer som ska infogas i det aktuella filsystemet. Du kan åstadkomma detta genom att köra <c>ebuild</c>s installationfunktion, som exekverar ebuilds src_install() funktion:
</p>

<pre caption="Installera filerna">
# <i>ebuild path/to/ebuild install</i>
</pre>

</body>
</subsection>
<subsection>
<title>Sammanfoga filerna med det aktuella filsystemet</title>
<body>

<p>
Det sista steget är att sammanfoga alla filer med det aktuella filsystemet och registrera dessa i Portage backend. <c>ebuild</c> kallar detta steg "qmerge" och det innefattar följande steg:
</p>

<ul>
  <li>Exekvera pkg_preinst() funktion om det är nödvändigt</li>
  <li>Kopiera över alla filer till det aktuella filsystemet</li>
  <li>Registrera filerna i Portage backend</li>
  <li>Exekvera pkg_postinst() funktionen om det är nödvändigt</li>
</ul>

<p>
Kör <c>ebuild</c>s qmerge function för att klara av dessa steg:
</p>

<pre caption="Sammanfoga filerna med det aktuella filsystemet">
# <i>ebuild path/to/ebuild qmerge</i>
</pre>

</body>
</subsection>
<subsection>
<title>Städa den tillfälliga katalogen</title>
<body>

<p>
Du kan slutligen städa den tillfälliga katalogen med hjälp av <c>ebuild</c>s cleanfunktion:
</p>

<pre caption="Städa den tillfälliga katalogen">
# <i>ebuild path/to/ebuild clean</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Ytterligare ebuildfunktioner</title>
<subsection>
<title>Kör alla installationsrelaterade kommandon</title>
<body>

<p>
Med hjälp av <c>ebuild</c>s mergefunktion kan du köra fetch, unpack,compile, install och qmerge kommandona i ett steg:
</p>

<pre caption="Installera mjukvara">
# <i>ebuild path/to/ebuild merge</i>
</pre>

</body>
</subsection>
<subsection>
<title>Konfigurationsrutiner</title>
<body>

<p>
Vissa program inkluderar instruktioner som konfigurerar paketet ytterligare för ditt system. Dessa instruktioner kan vara interaktiva och exekveras därför inte automatiskt. För att köra dessa konfigurationssteg, som kan listas i ebuilds config() funktion, använder du <c>ebuild</c>s konfigfunktion:
</p>

<pre caption="Konfigurera ett paket">
# <i>ebuild path/to/ebuild config</i>
</pre>

</body>
</subsection>
<subsection>
<title>Bygga ett (RPM) paket</title>
<body>

<p>
Du kan instruera Portage att skapa ett binärt paket av en ebuild eller till och med en RPM fil. Använd <c>ebuild</c>s package eller rpm functionalitet för att skapa dessa arkiv.
Det finns dock ett par skillnader mellan dessa funktioner:
</p>

<ul>
  <li>
    Paketfunktionaliteten är i stort likt installationsfunktionaliteten, exekverande alla nödvändiga steg (fetch, unpack, compile, install) innan den skapar paketet  
</li>
  <li>
    RPM funktionaliteten bygger ett RPM paket utifrån de filer som skapats <e>efter</e> <c>ebuild</c>s install function har körts
  </li>
</ul>

<pre caption="Skapa paket">
<comment>(För ett Portagekompatibelt binärpaket)</comment>
# <i>ebuild path/to/ebuild package</i>

<comment>(För ett RPM paket)</comment>
# <i>ebuild path/to/ebuild rpm</i>
</pre>

<p>
Den skapade RPM filen innehåller emellertid inte ebuilds relationsinformation.
</p>

</body>
</subsection>
</section>
<section>
<title>Ytterligare information</title>
<subsection>
<body>

<p>
Vi hänvisar till man sidorna ör mer information om Portage, ebuild applikationen och ebuildfiler:
</p>

<pre caption="Man sidor">
$ <i>man portage</i>    <comment>(själva Portage)</comment>
$ <i>man emerge</i>     <comment>(emerge kommandot)</comment>
$ <i>man ebuild</i>     <comment>(ebuild kommandot)</comment>
$ <i>man 5 ebuild</i>   <comment>(ebuild filens syntax)</comment>
</pre>

<p>
Du kommer också att hitta mer utvecklarrelaterad information i <uri link="/proj/en/devrel/handbook/handbook.xml">Utvecklarhandboken</uri>.
</p>

</body>
</subsection>
</section>
</sections>
