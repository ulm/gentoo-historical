<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/hb-portage-diverttree.xml,v 1.1 2005/04/02 18:49:05 neysx Exp $ -->

<sections>

<version>1.1</version>
<date>2004-10-21</date>

<section>
<title>Använda en delmängd av portageträdet</title>
<subsection>
<title>Exkludera paket/kategorier</title>
<body>

<p>
Du kan välja att selektivt uppdatera vissa kategorier/paket och ignorera andra kategorier/paket. Vi uppnår detta genom att låta <c>rsync</c> exkludera kategorier/paket under  <c>emerge --sync</c> steget.
</p>

<p>
Som standard kommer <c>rsync</c> att kontrollera innehållet i <path>/etc/portage/rsync_excludes</path> (om den finns) som innehåller de kategorier eller paket som du <e>inte</e> vill att <c>rsync</c> uppdaterar.
</p>

<p>
Notera att detta kan leda till relationsproblem mellan paket, eftersom nya, godkända, paket kan vara beroende av exkluderade paket. 
</p>

</body>
</subsection>
</section>
<section>
<title>Lägga till inofficiella ebuildskript</title>
<subsection>
<title>Definiera en Portage Overlay katalog</title>
<body>

<p>
Du kan be Portage att använda ebuildskript som inte är officiellt tillgängliga genom portageträdet. Skapa en ny katalog (t ex <path>/usr/local/portage</path>) vari du förvarar tredjeparts ebuildskript. Använda samma katalogstruktur som det officiella portageträdet!
</p>

<p>
Definiera sedan PORTDIR_OVERLAY i <path>/etc/make.conf</path> och peka den till den tidigare skapade katalogen. När du nu använder Portage kommer den att ta hänsyn också till dessa ebuildskript utan att radera eller skriva över dessa ebuildskript nästa gång du kör <c>emerge --sync</c>.
</p>

</body>
</subsection>
</section>
<section>
<title>Mjukvara utanför Portage</title>
<subsection>
<title>Använda Portage med mjukvara utan ebuildskript</title>
<body>

<p>
I vissa fall kan du vilja konfigurera, installera och underhålla mjukvara själv utan att Portage automatiserar denna process åt dig - även om Portage kan tillhandahålla dessa titlar. Kända exempel är källkoden till kärnan och nvidias drivrutiner. Du kan konfigurera Portage så den vet att ett visst paket är separat installerat i ditt system. Detta kallas att  <e>injicera</e> och  stöds av Portage genom filen <path>/etc/portage/profile/package.provided</path>.
</p>

<p>
Om du till exempel vill informera Portage om att du har installera <c>development-sources-2.6.8.1</c> manuellt, lägger du till följande rad till  <path>/etc/portage/profile/package.provided</path>:
</p>

<pre caption="Exampelrad i package.provided">
sys-kernel/development-sources-2.6.8.1
</pre>

</body>
</subsection>
</section>
</sections>
