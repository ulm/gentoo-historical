<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<sections>

<version>1.0</version>
<date>2005-06-06</date>

<section>
<title>Nätverksmoduler</title>
<body>

<p>
Vi stöder nu modulära nätverksskript, vilket betyder att vi enkelt kan lägga
till stöd för nya gränssnittstyper och konfigurera moduler och samtidigt behålla
kompatibiliteten med de existerande.
</p>

<p>
Modulerna laddas som standard om paketet de behöver har installerats. Om du här 
specificerar en modul som inte har de nödvändiga paketet installerat får du ett
felmeddelande som talar om vad du behöver installera. I bästa fall använder du
bara modulinställningen när du har två eller flera paket installerade som
tillhandahåller samma tjänst och du måste ange en preferens mellan dessa.
</p>

<pre caption="Modulpreferens">
<comment># Föredra iproute2 före ifconfig</comment>
modules=( "iproute2" )

<comment># Du kan också specificera en annan modul för gränssnittet
# I detta fall föredrar vi udhcpc före dhcpcd</comment>
modules_eth0=( "udhcpc" )

<comment># Du kan också specificera vilka moduler som inte ska användas, du
# kan exempelvis använda en supplicant eller linux-wlan-ng för att kontrollera
# trådlös konfiguration medan du fortfarande vill konfigurera
# nätverksinställningarna per ESSID associerad med den.</comment>
modules=( "!iwconfig" )
</pre>

</body>
</section>

<section>
<title>Gränssnitthanterare</title>
<body>

<p>
Vi tillhandahåller för närvarande två gränssnittshanterare: ifconfig
och iproute2.
Du behöver ha en av dessa installerad för all nätverkskonfiguration.
</p>

<p>
ifconfig är den nuvarande Gentoo standarden och finns med i systemprofilen.<br/>
iproute2 är ett mer kraftfullt och flexibelt paket, men är inte med som
standard.
</p>

<pre caption="Installera iproute2">
# <i>emerge sys-apps/iproute2</i>

<comment># För att föredra iproute2 före ifconfig om båda är installerade.
</comment>
modules=( "iproute2" )
</pre>

<p>
Då ifconfig och iproute2 båda gör ungefär samma saker låter vi deras
grundläggande konfiguration att fungera med varandra. Exempelvis fungerar
följande kodsnutt oavsett vilken modul du använder.
</p>

<pre caption="ifconfig och iproute2 exampel">
config_eth0=( "192.168.0.2/24" )
config_eth0=( "192.168.0.2 netmask 255.255.255.0" )

<comment># Vi kan också ange massutskick</comment>
config_eth0=( "192.168.0.2/24 brd 192.168.0.255" )
config_eth0=( "192.168.0.2 netmask 255.255.255.0 broadcast 192.168.0.255" )
</pre>

</body>
</section>

<section id="dhcp">
<title>DHCP</title>
<body>

<p>
DHCP är ett sätt att erhålla nätverksinformation (IP adress, DNS servrar,
gateway, etc) från en DHCP server. Detta betyder att om det finns en DHCP server
på nätverket behöver du bara tala om för varje klient att använda DHCP varpå den
själv konfigurerar nätverksinställningarna. Du behöver naturligtvis konfigurera
annat, som trådlös anslutning och ppp innan du kan använda DHCP.
</p>

<p>
DHCP kan tillhandahållas av dhclient, dhcpcd, dhclient, pump eller udhcpc. Varje
DHCP modul har sina för- och nackdelar; här följer en kort sammanfattning.
</p>

<table>
  <tr>
    <th>DHCP modul</th>
    <th>Paket</th>
    <th>För</th>
    <th>Emot</th>
  </tr>
  <tr>
    <ti>dhclient</ti>
    <ti>net-misc/dhcp</ti>
    <ti>
        Görs av ISC, samma personer som gör BIND DNS mjukvaran<br />
	Många konfigurationsmöjligheter
    </ti>
    <ti>
        Konfiguratinen är för komplex<br />
	Mjukvaran gör för mycket<br />
	Kan inte ta emot NTP servrar över DHCP<br />
	Skickar inte värdnamn som standard
    </ti>
  </tr>
  <tr>
    <ti>dhcpcd</ti>
    <ti>net-misc/dhcpcd</ti>
    <ti>
        Gentoostandard sedan länge<br />
	Inte beroende av externa verktyg
    </ti>
    <ti>
        Utvecklas inte längre<br />
	Kan vara långsam ibland<br />
	Körs inte som demon vid oändlig lease
    </ti>
  </tr>
  <tr>
    <ti>pump</ti>
    <ti>net-misc/pump</ti>
    <ti>
        Liten<br />
	Inte beroende av externa verktyg
    </ti>
    <ti>
        Utvecklas inte längre<br />
	Opålitlig, i synnerhet över modemanslutningar<br />
	Kan inte få NIS servrar över DHCP
    </ti>
  </tr>
  <tr>
    <ti>udhcpc</ti>
    <ti>net-misc/udhcp</ti>
    <ti>
        Liten - den minsta dhcp klienten som finns<br />
	För inbyggda system
    </ti>
    <ti>
        Otestad - ingen distribution använder den som standard<br />
	Kan inte hantera timeout-er längre än 3 sekunder
    </ti>
  </tr>
</table>

<p>
Om du har fler än en DHCP klient installerad, måste du ange vilken som ska
användas - annars använder vi dhcpcd som standard, om den är tillgänglig.
</p>

<p>
För att skicka särskilda valmöjligheter till dhcp modulen, använder du
modul_eth0="..." <e>(ändra modul till den DHCP modul du använder - t ex
dhcpcd_eth0)</e>
</p>

<p>
Vi försöker göra DHCP relativt agnostisk - till den delen stöder vi följande
kommandon genom dhcp_eth0 variabeln. Standardvärdet har inte angetts för
något av de följande
</p>

<ul>
  <li>release - släpp IP adressen för återanvändning</li>
  <li>nodns - skriv inte över /etc/resolv.conf</li>
  <li>nontp - skriv inte över /etc/ntp.conf</li>
  <li>nonis - skriv inte över /etc/yp.conf</li>
</ul>

<pre caption="Exempel på DHCP konfiguration i /etc/conf.d/net">
<comment># Behövs endast om du har mer än en DHCP modul installerad</comment>
modules=( "dhcpcd" ) 

config_eth0=( "dhcp" )
dhcpcd_eth0="-t 10" <comment># Timeout efter 10 sekunder</comment>
dhcp_eth0="release nodns nontp nonis" <comment># Skaffa bara en adress</comment>
</pre>

<note>
dhcpcd, udhcpc och pump skickar som standard det aktuella värdnamnet till DHCP
servern så du behöver inte ange detta längre.
</note>

</body>
</section>

<section>
<title>ADSL-modem</title>
<body>

<p>
Först måste vi installera mjukvaran för ADSL.
</p>

<pre caption="Installera paketet rp-pppoe">
# <i>emerge net-dialup/rp-pppoe</i>
</pre>

<warn>
baselayout-1.11.x stöder endast PPPOE<br/>
Framtida versioner kommer förhoppningsvis att stöda PPPOA<br/>
</warn>

<p>
Nu måste vi konfigurera eth0 som ett ADSL gränssnitt och ange vårt användarnamn.
</p>

<pre caption="Konfigurera eth0 för ADSL">
config_eth0=( "adsl" )
user_eth0="användarnamn"
</pre>

<p>
Avslutningsvis måste du ange ditt användarnamn och lösenord i
 <path>/etc/ppp/pap-secrets</path>
</p>

<pre caption="Exempel på /etc/ppp/pap-secrets">
<comment># * är viktig</comment>
"användarnamn"	*	"lösenord"
</pre>

</body>
</section>

<section id="apipa">
<title>APIPA (Automatic Private IP Addressing)</title>
<body>

<p>
APIPA försöker hitta en ledig adress i serien 169.254.0.0-169.254.255.255
genom att "arpa" en slumpmässig adress inom den adressrymden på gränssnittet.
Om inget svar erhållet tilldelas gränssnittet adressen.
</p>

<p>
Detta är bara användbart där det inte finns någon DHCP server och du inte kan
ansluta till internet direkt och alla andra datorer använder APIPA.
</p>

<p>
För APIPA stöd, installera net-misc/iputils eller net-analyzer/arping.
</p>

<pre caption="APIPA konfiguration i /etc/conf.d/net">
<comment># Försök med DHCP - om det misslyckas använd APIPA</comment>
config_eth0=( "dhcp" )
fallback_eth0=( "apipa" )

<comment># Använd bara APIPA</comment>
config_eth0=( "apipa" )
</pre>

</body>
</section>

<section>
<title>Bonding</title>
<body>

<p>
För länk bonding/trunking installerar du net-misc/ifenslave.
</p>

<p>
Bonding används för att öka bandbredden. Om du har två nätverkskort till samma
nätverk, kan du använda dem tillsammans så att dina applikationer bara ser ett
gränssnitt, medan de i verkligheten använder båda nätverkskorten.
</p>

<pre caption="Bonding konfiguration i /etc/conf.d/net">
<comment>För att koppla sammman gränssnitten</comment>
slaves_bond0="eth0 eth1 eth2"

<comment># Du kanske inte vill tilldela det sammanslagna gränssnittet
# en IP adress</comment>
config_bond0=( "null" )

<comment># Sätt ett beroende av eth0, eth1 och eth2 som kan behöva extra
# konfiguration</comment>
depend_bond0() {
	need net.eth0 net.eth1 net.eth2
}
</pre>

</body>
</section>

<section>
<title>Brygga (802.1d stöd)</title>
<body>

<p>
För stöd för bryggor installerar du net-misc/bridge-utils.
</p>

<p>
Bryggor används för att sammanfoga två nätverk. Du kan t ex ha en server
som ansluter till Internet via ett ADSL modem och ett kort för trådlös
kommunikation för att möjliggöra för andra datorer att ansluta till ADSL
modemet. Du kan skapa en brygga för att sammanfoga de två gränssnitten.
</p>

<pre caption="Bryggkonfiguration i /etc/conf.d/net">
<comment># Konfigurera bryggan, se manualsidan för btctl mer detaljer</comment>
brctl_br0=( "setfd 0" "sethello 0" "stp off" )

<comment>#Lägg till en port för bryggan br0</comment>
bridge_br0="eth0 eth1"

<comment># Du behöver konfigurera null-värden för portarna så inte DHCP inte
# startar.</comment>
config_eth0=( "null" )
config_eth1=( "null" )

<comment># Ge avslutningsvis bryggan en adress - du kan också använda
# DHCP</comment>
config_br0=( "192.168.0.1/24" )

<comment># Sätt ett beroende av eth0, eth1 och eth2 som kan behöva extra
# konfiguration</comment>
depend_br0() {
	need net.eth0 net.eth1
}
</pre>

<impo>
För vissa brygginställningar kan du behöva läsa dokumentationen för <uri
 link="?part=3&amp;chap=2#variable_name">variabelnamn</uri>.
</impo>

</body>
</section>

<section>
<title>MAC adresser</title>
<body>

<p>
Du behöver inte installera någonting för att ändra MAC adressen på ditt
gränssnitt om du ändrar till en specifik adress. Om du däremot vill ändra till
en slumpmässig adress, eller en slumpmässig adress av en viss typ behöver du
installera net-analyzer/macchanger.
</p>

<pre caption="Exempel på byte av MAC address.">
<comment># Ange gränsnittets MAC adress</comment>
mac_eth0="00:11:22:33:44:55"

<comment># Slumpgenerera de tre sista bytes</comment>
mac_eth0="random-ending"

<comment># Slumpgenerera samma fysiska typ av anslutning (t ex fiber,
# koppar, trådlöst) , alla tillverkare</comment>
mac_eth0="random-samekind"

<comment># Slumpgenerera valfri fysisk typ av anslutning (t ex fiber,
# koppar, trådlöst) , alla tillverkare</comment>
mac_eth0="random-anykind"

<comment># Full slumpgenerering - VARNING: vissa MAC adresser som tas fram på
# detta sätt kanske INTE fungerar som förväntat</comment>
mac_eth0="random-full"
</pre>

</body>
</section>

<section>
<title>Tunlar</title>
<body>

<p>
Du behöver inte installera någonting för att använda tunlar då gränssnittet
hanterar detta åt dig.
</p>

<pre caption="Tunnelkonfiguration i /etc/conf.d/net">
<comment># För GRE tunlar</comment>
iptunnel_vpn0="mode gre remote 207.170.82.1 key 0xffffffff ttl 255"

<comment># För IPIP tunlar</comment>
iptunnel_vpn0="mode ipip remote 207.170.82.2 ttl 255"

<comment># För att konfigurera gränssnittet</comment>
config_vpn0=( "192.168.0.2 peer 192.168.1.1" ) 
</pre>

</body>
</section>

<section>
<title>VLAN (802.1q stöd)</title>
<body>

<p>
För VLAN stöd, installera net-misc/vconfig.
</p>

<p>Virtuella LAN är en grupp nätverksenheter som uppträder som om de vore
anslutna till ett och samma nätverkssegment - även om de kanske inte är det.
VLAN-medlemmar kan bara se medlemmar på samma VLAN även om de delar samma
fysiska nätverk med andra enheter.
</p>

<pre caption="VLAN konfiguration i /etc/conf.d/net.">
<comment># Specificera VLAN numret för gränsnittet så här</comment>
<comment># Se till att VLAN IDn INTE fylls ut med nollor</comment>
vlans_eth0="1 2"

<comment># Du kan också konfigurera VLANet</comment>
<comment># se manualsidan för vconfig för detaljer</comment>
vconfig_eth0=( "set_name_type VLAN_PLUS_VID_NO_PAD" )
vconfig_vlan1=( "set_flag 1" "set_egress_map 2 6" )

<comment># Konfigurera gränssnittet som vanligt</comment>
config_vlan1=( "172.16.3.1 netmask 255.255.254.0" )
config_vlan2=( "172.16.2.1 netmask 255.255.254.0" )
</pre>

<impo>
För vissa VLAN-inställningar kan du behöva läsa dokumentationen för
<uri link="?part=3&amp;chap=2#variable_name">variabelnamn</uri>.
</impo>

</body>
</section>

</sections>
