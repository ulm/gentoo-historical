<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/hb-install-hppa-kernel.xml,v 1.1 2005/05/18 08:43:47 neysx Exp $ -->

<sections>

<version>1.13</version>
<date>2005-04-16</date>	

<section>
<title>Tidszoner</title>
<body>

<p>
Först behöver du välja din tidszon så systemet vet var du befinner dig. Leta
efter din tidszon i <path>/usr/share/zoneinfo</path>, och gör sedan en
symbolisk länk till <path>/etc/localtime</path> med <c>ln</c>:
</p>

<pre caption="Ange tidszonsinformation">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Vi antar att du vill använda GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installera källkoden</title>
<subsection>
<title>Att välja kärna</title>
<body>

<p>
Det allting byggs kring i alla distributioner är Linuxkärnan. Den är lagret mellan användarprogramen och systemets hårdvara. Gentoo
ger användarna tillgång till en av flera uppsättningar källkod till kärnan. En fullständig lista finns på <uri link="/doc/en/gentoo-kernel.xml">
Gentoo Kernel Guide</uri>. 
</p>

<p>
HPPA stöder inte 2.4 serien längre. Du är tvungen att använda <c>hppa-sources</c>.
</p>

<pre caption="Installera källkoden till kärnan">
# <i>emerge hppa-sources</i>
</pre>

<p>
När du sedan tittar i <path>/usr/src</path> kommer du att se en symbolisk känk som heter <path>linux</path> 
som pekar till din kärnas källkod. Vi kommer att utgå från att den installerade källkoden är  <c>gentoo-sources-2.6.10_p1</c>:
</p>

<pre caption="Att se den symboliska länken till kärnans källkod">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.10_p1
</pre>

<p>
Om så inte är fallet (om länken pekar på någon annan fill) ändrar du den symboliska länken innan du fortsätter:
</p>

<pre caption="Att ändra den symboliska länken till kärnans källkod">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.10_p1 linux</i>
</pre>

<p>
Nu är det dags att konfigurera och kompilera kärnan. Alla arkitekturer kan använda <c>genkernel</c> för detta, vilket kommer att bygga en generisk kärna, en sådan som används av Live CDn. Vi beskriver den "manuella" konfigurationen först, eftersom det är det bästa sättet att optimera din miljö.
</p>

<p>
Om du nu vill konfigurera kärnan manuellt fortsätter du med <uri link="#manual">Standard: Manuell konfiguration</uri>. Om du vill använda <c>genkernel</c> ska du läsa <uri link="#genkernel">Alternativ: 
Att använda genkernel</uri> istället.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Standard: Manuell konfiguration</title>
<subsection>
<title>Inledning</title>
<body>

<p>
Att manuellt konfigurera kärnan ses ofta som det svåraste en Linuxanvändare behöver göra. Inget kunde vara mindre sant - efter att du har konfigurerat ett par kärnor kommer du inte ens att komma ihåg att det var svårt ;)
</p>

<p>
<e>En</e> sak är trots allt ändå sant: du måste känna ditt system när du börjar konfigurera din kärna manuellt. Mycket information kan hittas i <path>/proc/pci</path> (eller genom att använda <c>lspci</c> om det är tillgängligt). Du kan också använda <c>lsmod</c> för att se vilka modular kärnan på LiveCD använder (vilket också kan ge dig en ledtråd till vad som ska aktiveras).
</p>

<p>
Gå nu till kärnans källkatalog och kör <c>make menuconfig</c>. Detta startar en ncurses-baserad konfigurationsmeny.
</p>

<pre caption="Att starta menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Du möts här av flera konfigurationssektioner. Vi anger först några alternativ du måste aktivera (annars kommer Gentoo inte att fungera, eller fungera korrekt utan ytterligare modifieringar). 
</p>

</body>
</subsection>
<subsection>
<title>Aktivera nödvändiga alternativ</title>
<body>

<p>
Till att börja med aktiverar du användningen av utvecklingsversion och experimentell kod/drivrutiner. Detta är nödvändigt för annars kommer viktig kod/drivrutiner inte att visas:
</p>

<pre caption="Att välja experimentell kod/drivrutiner">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Gå nu till <c>File Systems</c> och välj stöd för de filsystem du vill använda.
<e>Du ska inte</e> kompilera dem som moduler, då kommer ditt Gentoo system inte att kunna montera dina partitioner. Välj också 
<c>Virtual memory</c>, <c>/proc filsystem</c>, <c>/dev file system</c> + <c>Automatically mount at boot</c>:
</p>

<pre caption="Välja nödvändig filsystem">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*] Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)

<comment>(Välj en eller flera av följande alternativ till ditt system)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Om du använder PPPoE för att ansluta till Internet eller om du använder ett telefonmodem, kommer du att behöva aktivera följande alternativ i kärnan:
</p>

<pre caption="Välja drivrutiner för PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
De två komprimeringsmöjligheterna skadar inte, men krävs inte heller. Likaså kan man undvara <c>PPP over Ethernet</c> valet, som bara kan användas av <c>rp-pppoe</c> när den är konfigurerad till att använda kärnans PPPoE läge.
</p>

<p>
Du kan behöva kontrollera att du aktiverar stöd i kärnan för ditt ethernetkort.
</p>

<p>
Om du har en  HIL mus eller tangentbord, glöm då inte att kompilera in stöd för dem.
</p>

<pre caption="Aktivera HIL tangentbordsstöd">
Input device support ---&gt;
[*] Keyboards
[*]   HP HIL keyboard support
</pre>
<pre caption="Aktivera HIL musstöd">
[*] Mice
[*]   HIL pointers (mice etc).
</pre>

<p>
Inkludera också drivrutiner för skärmar:
</p>

<pre caption="Stöd för skärmdrivrutiner">
Graphics support ---&gt;
[*] Support for frame buffer devices
[*] HP STI frame buffer device support
Console display driver support ---&gt;
[*] STI text console
[*] Framebuffer Console support
</pre>

<p>
När du konfigurerat kärnan, fortsätt med <uri link="#compiling">Kompilering och installation</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilering och installation</title>
<body>

<p>
Nu när du har konfigurerat din kärna är det dags att kompilera och installera den. Avsluta konfigurationen och starta kompilationsprocessen:
</p>

<pre caption="Kompilera kärnan">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
När kärnan har slutat kompileras kopierar du kärnan till <path>/boot</path>. I följande exempel antar vi att du har konfigurerat och kompilerat <c>hppa-sources-2.6.10_p1</c> (vilket kanske inte är rätt kärna för din arkitektur!):
</p>

<pre caption="Installera kärnan">
# <i>cp vmlinux /boot/vmlinux</i>
# <i>cp System.map /boot/System.map-2.6.10_p1</i>
</pre>

<p>
Det är också klokt att kopiera din konfigurationsfil till <path>/boot</path>, utifall att ... :)
</p>

<pre caption="Säkerhetskopiering av kärnans konfiguration">
# <i>cp .config /boot/config-2.6.10_p1</i>
</pre>

<p>
Fortsätt nu med <uri link="#kernel_modules">Konfigurera moduler till kärnan</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativ: Använda genkernel</title>
<body>

<p>
Om du läser det här avsnittet  har du valt att låta vårt <c>genkernel</c> skript konfigurera kärnan åt dig.
</p>

<p>
Nu när källkoden till kärnan är installerad är det dags att kompilera din kärna. Med hjälp av vårt <c>genkernel</c> skript kan du automatiskt bygga en kärna åt dig. <c>genkernel</c> konfigurerar kärnan närmast identiskt med den som finns på vår Live CD. Detta betyder att när du använder <c>genkernel</c> för att bygga kärnan så kommer ditt system att upptäcka all hårdvara vid uppstarten, precis som vår Live CD gör. Eftersom genkernel inte kräver någon manuell konfiguration av kärnan är det den idealiska lösningen för de användare som känner sig osäkra på att kompilera sina egna kärnor.
</p>

<p>
Låt oss då se hur vi använder genkernel. Först installerar vi en ebuild för genkernel:
</p>

<pre caption="Installera genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Kompilera nu din kärna genom att köra <c>genkernel all</c>.
Tänk dock på att <c>genkernel</c> skapar en kärna som stöder nästan all hårdvara. Det kommer att ta tid innan denna kompilering är klar!
</p>

<p>
Notera att om din bootpartition inte använder något av filsystemen ext2 eller ext3 behöver du konfigurera din kärna manuellt med 
<c>genkernel --menuconfig all</c> och lägga till stöd för ditt filsystem <e>i</e> kärnan (d.v.s. <e>inte</e> som en modul).
</p>

<pre caption="Exekvera genkernel">
# <i>genkernel all</i>

GenKernel v3.0.1_beta10
* ARCH: HPPA 
* KERNEL VER: 2.4.24
* kernel: configuring source
* kernel: running mrproper
<comment>(Output removed to increase readability)</comment>
* Kernel compiled successfully!
* Required Kernel Params:
*   : root=/dev/ram0 init=/linuxrc real_root=/dev/$ROOT
*     where $ROOT is the devicenode for your root partition as
*     you should have specified in /etc/fstab
*              
* You MUST tell your bootloader to use the generated initrd
*              
* Recommended Kernel Params:
*   : vga=0x317 splash=verbose
*              
* Do NOT report kernel bugs (configs included) as genkernel bugs.
* Make sure you have the latest genkernel before reporting bugs
*              
* For more info see /usr/share/genkernel/README
</pre>

<p>
När väl <c>genkernel</c> är färdig, har en kärna, en komplett uppsättning moduler och <e>initial root disk</e> (initrd) skapats. Vi kommer att använda  kärnan och initrd när vi konfigurerar systemladdaren senare i dokumentet. Skriv ner namnen på kärnan och initrd då du kommer att behöva dessa när du skriver systemladdarens konfigurationsfil.  initrd startas direkt efter systemstart för att automatiskt hitta all hårdvara (precis som på Live CD) innan ditt "riktiga" system startar.
</p>

<pre caption="Kontrollera namnen på kärnan och initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Nu återstår ett steg innan ditt system liknar Live CDn -- att installera <c>coldplug</c>. Medan initrd automatiskt hittar hårdvaran som behövs för att starta ditt system, hittar <c>coldplug</c> allting annat. För att installera och aktivera <c>coldplug</c> skriver du:
</p>

<pre caption="Installera och aktivera coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug default</i>
</pre>

<p>
Om du vill att ditt system också ska reagera på hotplug-händelser behöver du installera och konfigurera hotplug:
</p>

<pre caption="Installera och aktivera hotplug">
# <i>emerge hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>


</body>
</section>
<section id="kernel_modules">
<title>Konfigurera moduler till kärnan</title>

<body>

<p>
Du bör skriva ner de moduler du vill ladda automatiskt i <path>/etc/modules.autoload.d/kernel-2.6</path>.
Du kan lägga till extra valmöjligheter till modulerna om du så vill.
</p>

<p>
För att se alla tillgänliga moduler anger du kommandot <c>find</c>. Glöm inte att ersätta  "&lt;kernel version&gt;" med den versionen av den kärna du just kompilerat:
</p>

<pre caption="Att visa alla tillgängliga moduler">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Om du till exempel vill ladda modulen <c>3c59x.o</c> automatiskt, redigerar filen <path>kernel-2.6</path> och skriver in modulnamnet.
</p>

<pre caption="Redigera /etc/modules.autoload.d/kernel-2.4">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Fortsätt installationen med <uri link="?part=1&amp;chap=8">Konfigurera ditt system</uri>.
</p>

</body>

</section>
</sections>
