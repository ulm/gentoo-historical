<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/sv/handbook/hb-working-variables.xml,v 1.1 2005/04/03 09:03:00 neysx Exp $ -->

<sections>

<version>1.8</version>
<date>2004-08-30</date>

<section>
<title>Miljövariabler?</title>
<subsection>
<title>Vad de är</title>
<body>

<p>
En miljövariabel är ett bestämt objekt som innehåller information som används av en eller fler applikationer. Många användare (och speciellt de inte använt Linux tidigare) tycker att detta är lite konstigt och ohanterligt. Det är emellertid en missuppfattning: genom att använda miljövariabler kan man eneklt ändra ett konfigurationsvärde för ett eller flera applikationer. 
</p>

</body>
</subsection>
<subsection>
<title>Viktiga exempel</title>
<body>

<p>
Följande tabell ger ett flertal variabler som används av Linuxsystem och beskriver deras funktion. Exempelvärden ges efter tabellen.
</p>

<table>
<tr>
  <th>Variabel</th>
  <th>Beskrivning</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
    Denna variabel innehåller en kolonseparerad lista av kataloger i vilken ditt system letar efter exekverbara filer. Om du skriver in namnet på en exekverbar fil (som t ex 
    <c>ls</c>, <c>rc-update</c> eller <c>emerge</c>) men denna exekvarbara fil inte finns i en angiven katalog kommer ditt system inte att exekvera den (om du inte anger hela sökvägen till kommandot, som exempelvis <c>/bin/ls</c>).
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
    Denna variabel har samma funktion som <c>PATH</c>, men denna lista anger vara kataloger som ska kontrolleras när rootanvändaren skriver ett kommando.
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
    Denna variabel innehåller en kolonseparerad lista av kataloger i vilka den dynamiska länkaren söker efter biblioteksfiler.
  </ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>
	  Denna variabel innehåller en kolonseparerad lista av kataloger i vilka <c>man</c> kommandot söker efter man sidor.
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
	  Denna variabel innehåller en kolonseparerad lista av kataloger i vilka <c>info</c> kommandot söker efter info sidor.
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
    Denna variabel innehåller sökvägen till det program som används för att visa innehållet i filer (som <c>less</c> eller <c>more</c>).
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
    Denna variabel innehåller sökvägen till det program som används för att redigera innehållet i filer (som <c>nano</c> eller <c>vi</c>).
  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
    Denna variabel innehåller en kolonseparerad lista av kataloger som innehåller KDE-speficikt material.
  </ti>
</tr>
<tr>
  <ti>CLASSPATH</ti>
  <ti>
    Denna variabel innehåller en kolonseparerad lista av kataloger som innehåller Java klasser.
</ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
    Denna variabel innehållen en <e>mellanslagsseparerad</e> lista av kataloger som ska skyddas av Portage under uppdateringar.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
	  Denna variabel innehållen en <e>mellanslagsseparerad</e> lista av kataloger som inte ska skyddas av Portage under uppdateringar. 
  </ti>
</tr>
</table>

<p>
Nedan hittar du en exempeldefinition av alla dessa variabler:
</p>

<pre caption="Exampeldefinitioner">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CLASSPATH="/opt/blackdown-jre-1.4.1/lib/rt.jar:."
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf
</pre>

</body>
</subsection>
</section>
<section>
<title>Definiera globala variabler</title>
<subsection>
<title>/etc/env.d katalogen</title>
<body>

<p>
För att centralisera definitionerna av dessa variabler introducerade Gentoo introduced <path>/etc/env.d</path> katalogen. I denna katalog hittar du ett antal filer, såsom <path>00basic</path>, <path>05gcc</path>, osv. som innehåller variablerna som används av applikationen som indikeras av filnamneet.
</p>

<p>
Som exempel när du installerade <c>gcc</c>, skapades en fil med namnet <path>05gcc</path> av ebuildskriptet. Denna fil innehåller definitiornerna av följande variabler:
</p>

<pre caption="/etc/env.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
Andra distributioner menar att du ska ändra eller lägga till definitionerna av sådana miljövariabler i <path>/etc/profile</path> eller andra platser. Gentoo å andra sidan förenklar för dig (och för Portage) att underhålla miljövariablerna utan att behöver hålla reda på mängder av filer som kan innehålla miljövariabler. När, exempelvis, <c>gcc</c> uppdateras så uppdateras också filen <path>/etc/env.d/05gcc</path> utan användaren behöver göra något. 
</p>

<p>
Detta underlättar inte bara för Portage, utan även för dig, som användare. Då och då kan du blin ombedd att sätta en viss miljövariabel för hela systemet. Ett exempel är variabeln för <c>http_proxy</c>. Istället för att fumla runt med <path>/etc/profile</path>, kan du nu helt enkelt skapa en fil (<path>/etc/env.d/99local</path>) och ange dina definitioner i den:
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
Genom att använda samma fil för alla dina variabler kan du snabbt få överblick över de variabler du själv har definierat. 
</p>

</body>
</subsection>
<subsection>
<title>env-update skriptet</title>
<body>

<p>
Många filer i <path>/etc/env.d</path> definierar <c>PATH</c> variabeln. Detta är inte ett misstag: när du kör <c>env-update</c>, lägger den till flera definitioner innan den uppdaterar miljövariablerna. Vilket gör det enkelt för paket (och användare) att lägga till deras egna miljövariabler utan att redigera redan befintliga variabelvärden.
</p>

<p>
<c>env-update</c> skriptet kommer att lägga till värdena i alfabetisk ordning av filerna i <path>/etc/env.d</path>. Det är därför många av filerna i <path>/etc/env.d</path> börjar med ett nummer.
</p>

<pre caption="Uppdateringsordning som används av env-update">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
När du kör <c>env-update</c> kommer skriptet att skapa alla miljövariabler och lägga in dem i <path>/etc/profile.env</path> (som används av <path>/etc/profile</path>). Den kommer också att extrahera informationen från <c>LDPATH</c> variabeln och använda det för att skapa <path>/etc/ld.so.conf</path>. Efter detta kommer den att köra  <c>ldconfig</c> för att skapa <path>/etc/ld.so.cache</path> filen som används av den dynamiska länkaren.
</p>

<p>
Om du  vill se effekten av <c>env-update</c> omedelbart efter att du kört den exekverar du följande kommando för att uppdatera din miljö. Användare som har installerat Gentoo själva kommer förmodligen ihåg detta från installationsinstruktionerna:
</p>

<pre caption="Uppdatera miljön">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Definiera lokala variabler</title>
<subsection>
<title>Användarspecifikt</title>
<body>

<p>
Du vill inte alltid definiera globala miljövariabler. Du kan till exempel vilja lägga till <path>/home/my_user/bin</path> till <c>PATH</c> variabeln, men du vill inte att alla andra användare också ska ha det i sina <c>PATH</c>. Om du vill definiera en lokal miljövariabel ska du använda <path>~/.bashrc</path> eller <path>~/.bash_profile</path>:
</p>

<pre caption="Utöka PATH för lokal användning i ~/.bashrc">
PATH="${PATH}:/home/my_user/bin"
</pre>

<p>
Nästa gång du loggar in kommer din <c>PATH</c> variabel att uppdateras.
</p>

</body>
</subsection>
<subsection>
<title>Sessionsspecifikt</title>
<body>

<p>
Ibland kan ännu striktare definitioner krävas. Du kan vilja kunna använda binära filer från en temporär katalog du skapat utan att använda sökvägen till binärfilerna eller att behöva redigera <path>~/.bashrc</path> för den korta tid du behöver detta.
</p>

<p>
I detta fall kan du definiera <c>PATH</c> variabeln i din aktuella session genom att använda <c>export</c>kcommandot. Så länge du inte loggar ut kommer <c>PATH</c> variabeln att använda den tillfälliga inställningen.
</p>

<pre caption="Definiera en sessionsspecifik miljövariabel">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>
