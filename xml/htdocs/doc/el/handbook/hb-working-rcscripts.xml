<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Το περιεχόμενο αυτού του κειμένου είναι κατοχυρωμένο υπό την άδεια CC-BY-SA -->
<!-- βλ. http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/el/handbook/hb-working-rcscripts.xml,v 1.2 2008/06/21 13:49:28 neysx Exp $ -->

<sections>

<abstract>
Το Gentoo χρησιμοποιεί μια ειδική μορφή σεναρίων του init η οποία, ανάμεσα στα
άλλα χαρακτηριστικά, επιτρέπει αποφάσεις που καθοδηγούν εξαρτήσεις και εικονικά
σενάρια του init. Το παρών κεφάλαιο εξηγεί όλες αυτές τις πτυχές και εξηγεί πώς
να ασχοληθείτε με αυτά τα σενάρια.
</abstract>

<version>1.25</version>
<date>2007-10-11</date>

<section>
<title>Επίπεδα Εκτέλεσης</title>
<subsection>
<title>Εκκίνηση του Συστήματος</title>
<body>

<p>
Όταν εκκινείτε το σύστημά σας, θα παρατηρήσετε να εμφανίζεται αρκετό κείμενο. Αν
δώσετε προσοχή, θα διαπιστώσετε ότι το κείμενο αυτό είναι πάντα το ίδιο κάθε 
φορά που εκκινείτε το σύστημα. Η ακολουθία όλων αυτών των ενεργειών ονομάζεται 
<e>ακολουθία εκκίνησης</e> και είναι (λίγο ή πολύ) στατιστικά καθορισμένη.
</p>

<p>
Αρχικά, ο φορτωτής εκκίνησης φορτώνει στη μνήμη την εικόνα του πυρήνα,
όπως έχει οριστεί στο αρχείο παραμετροποίησης του φορτωτή, και
στη συνέχεια δίνει εντολή στον επεξεργαστή να εκτελέσει τον πυρήνα. Όταν ο
πυρήνας φορτωθεί και εκτελεστεί, αρχικοποιεί όλες τις δομές που σχετίζονται με
τον πυρήνα και ξεκινά τη διεργασία <c>init</c>.
</p>

<p>
Η διεργασία αυτή φροντίζει όλα τα συστήματα αρχείων (που ορίζονται στο
<path>/etc/fstab</path>) να προσαρτώνται και να είναι έτοιμα για χρησιμοποίηση.
Μετά εκτελεί διάφορα σενάρια που βρίσκονται στον κατάλογο 
<path>/etc/init.d</path>, τα οποία εκκινούν τις υπηρεσίες που χρειάζεστε 
προκειμένου να έχετε ένα σύστημα που εκτέλεσε σωστή εκκίνηση.
</p>

<p>
Τέλος, αφού όλα τα σενάρια εκτελεστούν, το <c>init</c> ενεργοποιεί όλα τα 
τερματικά (στις περισσότερες περιπτώσεις μόνο τις εικονικές κονσόλες που είναι
κρυμμένες με τα <c>Alt-F1</c>, <c>Alt-F2</c>, κτλ.) συνδέοντάς τα με μια ειδική
διεργασία με όνομα <c>agetty</c>. Η διεργασία αυτή θα φροντίσει να μπορείτε να
συνδεθείτε μέσω των τερματικών αυτών εκτελώντας το <c>login</c>.
</p>

</body>
</subsection>
<subsection>
<title>Σενάρια του Init</title>
<body>

<p>
Το <c>init</c> δεν εκτελεί απλά τα σενάρια στον κατάλογο
<path>/etc/init.d</path> με τυχαία σειρά. Επίσης, δεν εκτελεί όλα τα σενάρια στο
<path>/etc/init.d</path>, παρά μόνο αυτά που του δίνεται εντολή να εκτελέσει.
Μετά αποφασίζει ποια σενάρια να εκτελέσει ελέγχοντας τον κατάλογο
<path>/etc/runlevels</path>.
</p>

<p>
Αρχικά, το <c>init</c> εκτελεί όλα τα σενάρια από τον κατάλογο
<path>/etc/init.d</path> που έχουν συμβολικό σύνδεσμο στον κατάλογο
<path>/etc/runlevels/boot</path>. Συνήθως, ξεκινά τα σενάρια σε αλφαβητική
σειρά, αλλά ορισμένα από αυτά έχουν πληροφορίες εξαρτήσεων μέσα τους,
πληροφορώντας το σύστημα ότι κάποιο άλλο σενάριο πρέπει να εκτελεστεί προτού 
εκτελεστούν πρώτα τα ίδια.
</p>

<p>
Όταν όλα τα σενάρια σχετιζόμενα με το <path>/etc/runlevels/boot</path> 
εκτελεστούν, το <c>init</c> συνεχίζει με την εκτέλεση των σεναρίων για τα οποία
υπάρχει ένας συμβολικός σύνδεσμος στο <path>/etc/runlevels/default</path> προς
αυτά. Και πάλι θα χρησιμοποιήσει αλφαβητική σειρά προκειμένου να επιλέξει ποια
σενάρια θα εκτελέσει πρώτα, εκτός αν ένα σενάριο έχει πληροφορίες εξάρτησης και
στην περίπτωση αυτή η σειρά αλλάζει ώστε να υπάρξει μια σωστή σειρά εκκίνησης.
</p>

</body>
</subsection>
<subsection>
<title>Πώς Δουλεύει το Init</title>
<body>

<p>
Φυσικά το <c>init</c> δεν αποφασίζει για όλα αυτά από μόνο του. Χρειάζεται ένα
αρχείο ρυθμίσεων που καθορίζει ποιες ενέργειες πρέπει να γίνουν. Το αρχείο αυτό
είναι το <path>/etc/inittab</path>.
</p>

<p>
Αν θυμάστε την ακολουθία εκκίνησης που περιγράφηκε παραπάνω, θα θυμάστε ότι η
πρώτη ενέργεια του <c>init</c> είναι να προσαρτήσει όλα τα συστήματα αρχείων. 
Αυτό ορίζεται στην εξής γραμμή από το αρχείο <path>/etc/inittab</path>:
</p>

<pre caption="Η γραμμή αρχικοποίησης του συστήματος στο /etc/inittab">
si::sysinit:/sbin/rc sysinit
</pre>

<p>
Η γραμμή αυτή δίνει εντολή στο <c>init</c> να εκτελέσει το
<c>/sbin/rc sysinit</c> για να φέρει το σύστημα σε μια αρχική κατάσταση. Το 
σενάριο <path>/sbin/rc</path> φροντίζει για την αρχικοποίηση του συστήματος,
οπότε μπορεί να σκεφθεί κανείς ότι το <c>init</c> δεν κάνει και πολλά - αναθέτει
την εργασία της αρχικοποίησης του συστήματος σε μια άλλη διεργασία.
</p>

<p>
Στη συνέχεια, το <c>init</c> εκτελεί όλα τα σενάρια που είχαν συμβολικούς
συνδέσμους στον κατάλογο <path>/etc/runlevels/boot</path>. Αυτό ορίζεται στην
ακόλουθη γραμμή:
</p>

<pre caption="Η αρχικοποίηση του συστήματος, συνέχεια">
rc::bootwait:/sbin/rc boot
</pre>

<p>
Και πάλι το σενάριο <c>rc</c> αναλαμβάνει τις απαραίτητες εργασίες. Σημειώστε
ότι η επιλογή που δίνεται στο <c>rc</c> (<e>boot</e>) είναι η ίδια με το
όνομα του υποκαταλόγου από τον κατάλογο <path>/etc/runlevels</path> που 
χρησιμοποιείται.
</p>

<p>
Τώρα το <c>init</c> ελέγχει το αρχείο ρυθμίσεών του για να δει ποιο 
<e>runlevel</e> θα πρέπει να εκτελέσει. Για να το κάνει αυτό, διαβάζει την 
ακόλουθη γραμμή από το αρχείο <path>/etc/inittab</path>:
</p>

<pre caption="Η γραμμή initdefault">
id:3:initdefault:
</pre>

<p>
Στην περίπτωση αυτή (την οποία οι περισσότεροι χρήστες του Gentoo
χρησιμοποιούν), ο αριθμός του <e>επιπέδου εκτέλεσης</e> είναι 3. Χρησιμοποιώντας αυτή την
πληροφορία, το <c>init</c> ελέγχει τι πρέπει να εκτελέσει για να εκκινήσει το
<e>επίπεδο εκτέλεσης 3</e>:
</p>

<pre caption="Οι ορισμοί του επιπέδου εκτέλεσης">
l0:0:wait:/sbin/rc shutdown
l1:S1:wait:/sbin/rc single
l2:2:wait:/sbin/rc nonetwork
l3:3:wait:/sbin/rc default
l4:4:wait:/sbin/rc default
l5:5:wait:/sbin/rc default
l6:6:wait:/sbin/rc reboot
</pre>

<p>
Η γραμμή που ορίζει το επίπεδο 3 και πάλι χρησιμοποιεί το σενάριο <c>rc</c> για
να ξεκινήσει τις υπηρεσίες (τώρα με την παράμετρο <e>default</e>). Σημειώστε
πάλι ότι η παράμετρος του <c>rc</c> είναι η ίδια με τον υποκατάλογο από το
<path>/etc/runlevels</path>.
</p>

<p>
Όταν το <c>rc</c> τελειώσει, το <c>init</c> αποφασίζει για ποιες εικονικές
κονσόλες θα πρέπει να ενεργοποιήσει και τι εντολές θα εκτελέσει σε καθεμία από
αυτές:
</p>

<pre caption="Ο ορισμός των εικονικών κονσολών">
c1:12345:respawn:/sbin/agetty 38400 tty1 linux
c2:12345:respawn:/sbin/agetty 38400 tty2 linux
c3:12345:respawn:/sbin/agetty 38400 tty3 linux
c4:12345:respawn:/sbin/agetty 38400 tty4 linux
c5:12345:respawn:/sbin/agetty 38400 tty5 linux
c6:12345:respawn:/sbin/agetty 38400 tty6 linux
</pre>


</body>
</subsection>
<subsection>
<title>Τι είναι ένα Επίπεδο Εκτέλεσης;</title>
<body>

<p>
Παρατηρήσατε ότι το <c>init</c> χρησιμοποιεί κάποιους αριθμούς για να αποφασίζει
ποιο <e>επίπεδο εκτέλεσης</e> θα πρέπει να ενεργοποιήσει. Το <e>επίπεδο εκτέλεσης</e> είναι μια
κατάσταση στην οποία το σύστημά σας εκτελείται και περιέχει μια συλλογή από
σενάρια (σενάρια επιπέδου εκτέλεσης ή <e>σενάρια του init</e>) που πρέπει να εκτελούνται όταν
εισάγετε ή αφήνετε ένα επίπεδο εκτέλεσης.
</p>

<p>
Στο Gentoo ορίζονται 7 επίπεδα εκτέλεσης: τρία εσωτερικά και 4 οριζόμενα από το χρήστη.
Τα εσωτερικά επίπεδα εκκίνησης ονομάζοναι <e>sysinit</e>, <e>shutdown</e> και
<e>reboot</e> και εκτελούν αυτό που υποννοεί το όνομά τους: αρχικοποιούν το
σύστημα, το κλείνουν και το επανεκκινούν.
</p>

<p>
Τα οριζόμενα από το χρήστη runlevel είναι αυτά με το συνοδευτικό υποκατάλογο του
<path>/etc/runlevels</path>: <path>boot</path>, <path>default</path>,
<path>nonetwork</path> και <path>single</path>. Το επίπεδο εκτέλεσης <path>boot</path>
ξεκινά όλες τις απαραίτητες για το σύστημα υπηρεσίες που χρησιμοποιούν τα άλλα
επίπεδα εκκίνησης. Τα υπόλοιπα τρία επίπεδα εκκίνησης διαφοροποιούνται στο ποιες υπηρεσίες
ξεκινούν: Το <path>default</path> χρησιμοποιείται για όλες τις καθημερινές
εργασίες, το <path>nonetwork</path> χρησιμοποιείται στην περίπτωση που δεν
απαιτείται σύνδεση δικτύου και το <path>single</path> χρησιμοποιείται όταν
θέλετε να επιδιορθώσετε το σύστημά σας.
</p>

</body>
</subsection>
<subsection>
<title>Η Εργασία με τα Σενάρια του Init</title>
<body>

<p>
Τα σενάρια που ξεκινά η διεργασία <c>rc</c> ονομάζονται <e>σενάρια του init</e>.
Κάθε σενάριο στον κατάλογο <path>/etc/init.d</path> μπορεί να εκτελεστεί με τις
παραμέτρους <e>start</e>, <e>stop</e>, <e>restart</e>, <e>pause</e>, <e>zap</e>,
<e>status</e>, <e>ineed</e>, <e>iuse</e>, <e>needsme</e>, <e>usesme</e> ή
<e>broken</e>.
</p>

<p>
Για να εκκινήσετε, τερματήσετε ή επανεκκινήσετε μια υπηρεσία (και όλες τις 
εξαρτώμενες από αυτήν υπηρεσίες) χρησιμοποιείστε τα <c>start</c>, <c>stop</c> 
και <c>restart</c>:
</p>

<pre caption="Εκκίνηση του Postfix">
# <i>/etc/init.d/postfix start</i>
</pre>

<note>
Μόνο οι υπηρεσίες που <e>χρειάζονται</e> τη συγκεκριμένη υπηρεσία τερματίζουν ή
εκκινούν. Οι άλλες υπηρεσίες (αυτές που <e>χρησιμοποιούν</e> την υπηρεσία αλλά
δεν την χρειάζονται) μένουν ανέπαφες.
</note>

<p>
Αν επιθυμείτε να τερματίσετε μια υπηρεσία, αλλά όχι τις υπηρεσίες που εξαρτώνται
από αυτήν, μπορείτε να χρησιμοποιήσετε την παράμετρο <c>pause</c>:
</p>

<pre caption="Παύση του Postfix αλλά με διατήρηση των εξαρτώμενων υπηρεσιών σε λειτουργία">
# <i>/etc/init.d/postfix pause</i>
</pre>

<p>
Αν θέλετε να δείτε σε ποια κατάσταση είναι μια υπηρεσία (έχει εκκινήσει,
τερματίσει, είναι σε παύση, ...) χρησιμοποιήστε την παράμετρο <c>status</c>:
</p>

<pre caption="Πληροφορίες κατάστασης για το postfix">
# <i>/etc/init.d/postfix status</i>
</pre>

<p>
Αν η πληροφορία κατάστασης σας πληροφορεί ότι η υπηρεσία εκτελείται, αλλά 
γνωρίζετε ότι δεν εκτελείται, μπορείτε να επαναφέρετε την κατάσταση πληροφορίας
σε "τερματισμένη" με την παράμετρο <c>zap</c>:
</p>

<pre caption="Επαναφορά της πληροφορίας κατάστασης για το postfix">
# <i>/etc/init.d/postfix zap</i>
</pre>

<p>
Για να δείτε επίσης ποιες εξαρτήσεις έχει μια υπηρεσία, χρησιμοποιήστε την
παράμετρο <c>iuse</c> ή <c>ineed</c>. Με την <c>ineed</c> βλέπετε τις υπηρεσίες
που είναι πραγματικά απαραίτητες για τη σωστή λειτουργία της υπηρεσίας. Η
<c>iuse</c> από την άλλη δείχνει τις υπηρεσίες που μπορεί να χρησιμοποιεί η
προκειμένη υπηρεσία, αλλά δεν είναι απαραίτητες για τη σωστή λειτουργία της
τελευταίας.
</p>

<pre caption="Εμφάνιση λίστας υπηρεσιών από τις οποίες εξαρτάται το Postfix">
# <i>/etc/init.d/postfix ineed</i>
</pre>

<p>
Με παρόμοιο τρόπο, μπορείτε να δείτε ποιες υπηρεσίες απαιτούν μια υπηρεσία
(<c>needsme</c>) ή ποιες μπορεί να τις χρησιμοποιούν (<c>usesme</c>):
</p>

<pre caption="Εμφάνιση λίστας όλων των υπηρεσιών που απαιτούν το Postfix">
# <i>/etc/init.d/postfix needsme</i>
</pre>

<p>
Τέλος, μπορείτε να δείτε τις εξαρτήσεις μιας υπηρεσίας που λείπουν:
</p>

<pre caption="Εμφάνιση λίστας χαμένων εξαρτήσεων του Postfix">
# <i>/etc/init.d/postfix broken</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Η Εργασία με το rc-update</title>
<subsection>
<title>Τι είναι το rc-update;</title>
<body>

<p>
Το init σύστημα του Gentoo χρησιμοποιεί ένα δέντρο εξαρτήσεων για να αποφασίζει
ποιες υπηρεσίες πρέπει να εκκινούν πρώτα. Μια και αυτό είναι μια βαρετή εργασία
που δεν είναι επιθυμητό να εκτελούν οι χρήστες, δημιουργήσαμε εργαλεία που
διευκολύνουν τη διαχείριση των επιπέδων εκτέλεσης και των σεναρίων του init.
</p>

<p>
Με το <c>rc-update</c> μπορείτε να προσθέσετε ή αφαιρέσετε σενάρια init σε ένα
runlevel. Το εργαλείο <c>rc-update</c> στη συνέχεια θα ζητήσει από το σενάριο
<c>depscan.sh</c> να ξαναχτίσει το δέντρο εξαρτήσεων.
</p>

</body>
</subsection>
<subsection>
<title>Προσθήκη και Αφαίρεση Υπηρεσιών</title>
<body>

<p>
Έχετε ήδη προσθέσει σενάρια init στο επίπεδο εκτέλεσης "default" κατά τη
διάρκεια της εγκατάστασης του Gentoo. Στο σημείο εκείνο, μπορεί να μην είχατε
ιδέα για το τι είναι το "default", αλλά τώρα πρέπει να έχετε. Το σενάριο <c>rc-update</c>
απαιτεί μια παράμετρο που ορίζει την ενέργεια: <e>add</e> (προσθήκη), <e>del</e>
(διαγραφή) ή <e>show</e> (εμφάνιση).
</p>

<p>
Για να προσθέσετε ή αφαιρέσετε ένα σενάριο init, απλά δώστε <c>rc-update</c> με
την <c>add</c> ή <c>del</c> παράμετρο, ακολουθούμενο από το σενάριο init και το
επίπεδο εκτέλεσης. Για παράδειγμα:
</p>

<pre caption="Αφαίρεση του Postfix από το επίπεδο εκτέλεσης default">
# <i>rc-update del postfix default</i>
</pre>

<p>
Η εντολή <c>rc-update show</c> εμφανίζει όλα τα διαθέσιμα σενάρια init καθώς και
το επίπεδο εκτέλεσης στο οποίο εκτελούνται:
</p>

<pre caption="Εμφάνιση πληροφοριών σχετικά με τα σενάρια init">
# <i>rc-update show</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Παραμετροποίηση των Υπηρεσιών</title>
<subsection>
<title>Γιατί η Ανάγκη για Επιπλέον Παραμετροποίηση;</title>
<body>

<p>
Τα σενάρια init μπορούν να είναι ιδιαίτερα περίπλοκα. Γι αυτό λοιπόν δεν είναι
επιθυμητό να πρέπει οι χρήστες να επεξεργάζονται το σενάριο init απευθείας,
διαδικασία που είναι επιρρεπής σε λάθη. Είναι ωστόσο σημαντικό να μπορούν να
παραμετροποιούν μια τέτοια υπηρεσία. Για παράδειγμα, μπορεί να επιθυμείτε να
δώσετε περισσότερες παραμέτρους σε μια υπηρεσία.
</p>

<p>
Ένας δεύτερος λόγος για την ύπαρξη αυτής της παραμετροποίησης εκτός του σεναρίου
init είναι για να μπορεί κάποιος να ενημερώνει τα σενάρια init χωρίς το φόβο
ότι οι ρυθμίσεις θα χαθούν.
</p>

</body>
</subsection>
<subsection>
<title>Ο Κατάλογος /etc/conf.d</title>
<body>

<p>
Το Gentoo παρέχει ένα εύκολο τρόπο για την παραμετροποίηση μια υπηρεσίας: κάθε
σενάριο init που μπορεί να παραμετροποιηθεί έχει ένα αρχείο στον κατάλογο
<path>/etc/conf.d</path>. Για παράδειγμα, το σενάριο init apache2
(που ονομάζεται <path>/etc/init.d/apache2</path>) έχει ένα αρχείο ρυθμίσεων
με όνομα <path>/etc/conf.d/apache2</path>, που περιέχει τις επιλογές που πιθανόν
να χρειάζεται ο διακομιστής Apache 2 κατά την εκκίνησή του:
</p>

<pre caption="Μεταβλητή οριζόμενη στο /etc/conf.d/apache2">
APACHE2_OPTS="-D PHP5"
</pre>

<p>
Ένα τέτοιο αρχείο ρυθμίσεων περιέχει μόνο μεταβλητές (όπως το αρχείο
<path>/etc/make.conf</path>), καθιστώντας εύκολη την παραμετροποίηση μιας
υπηρεσίας. Επίσης, επιτρέπει να παρέχουμε περισσότερες πληροφορίες σχετικά με τις
μεταβλητές (με τη μορφή σχολίων).
</p>

</body>
</subsection>
</section>
<section>
<title>Συγγραφή Σεναρίων Init</title>
<subsection>
<title>Πρέπει να Κάνω;</title>
<body>

<p>
Όχι, η συγγραφή ενός σεναρίου init συνήθως δεν είναι απαραίτητη, μια και το Gentoo
παρέχει έτοιμα προς χρήση σενάρια init για όλες τις παρεχόμενες υπηρεσίες.
Ωστόσο, υπάρχει περίπτωση να εγκαταστήσατε μια υπηρεσία χωρίς το Portage για την
οποία πιθανόν να χρειαστεί να γράψετε ένα σενάριο init.
</p>

<p>
Μην χρησιμοποιείτε το σενάριο init που παρέχεται με την υπηρεσία αν δεν είναι
ρητά γραμμένο για το Gentoo: τα σενάρια init του Gentoo δεν είναι συμβατά με τα
σενάρια init από άλλες διανομές!
</p>

</body>
</subsection>
<subsection>
<title>Δομή</title>
<body>

<p>
Παρακάτω εμφανίζεται η βασική δομή ενός σεναρίου init.
</p>

<pre caption="Η βασική δομή ενός σεναρίου init">
#!/sbin/runscript

depend() {
  <comment>(Πληροφορίες εξαρτήσεων)</comment>
}

start() {
  <comment>(Εντολές απαραίτητες για την εκκίνηση της υπηρεσίας)</comment>
}

stop() {
  <comment>(Εντολές απαραίτητες για τον τερματισμό της υπηρεσίας)</comment>
}

restart() {
  <comment>(Εντολές απαραίτητες για την επανεκκίνηση της υπηρεσίας)</comment>
}
</pre>

<p>
Κάθε σενάριο init <e>απαιτεί</e> τον ορισμό της συνάρτησης <c>start()</c>. Όλα
τα υπόλοιπα τμήματα είναι προαιρετικά.
</p>

</body>
</subsection>
<subsection>
<title>Εξαρτήσεις</title>
<body>

<p>
Υπάρχουν δύο ειδών εξαρτήσεων που μπορείτε να ορίσετε: οι <c>use</c> και
<c>need</c>. Όπως είδαμε προηγουμένως, η εξάρτηση <c>need</c> είναι πιο αυστηρή
από την <c>use</c>. Ακολουθώντας αυτό τον τύπο εξάρτησης, εισάγετε την υπηρεσία
από την οποία εξαρτάται η υπηρεσία σας, ή την <e>εικονική</e> εξάρτηση.
</p>

<p>
Η <e>εικονική</e> εξάρτηση είναι μια εξάρτηση που παρέχει μια υπηρεσία, αλλά
αυτή δεν παρέχεται αποκλειστικά από αυτή την υπηρεσία και μόνο. Το σενάριο init
μπορεί να εξαρτάται από τον καταγραφέα ημερολογίου (logger) του συστήματος, αλλά
υπάρχουν διαθέσιμα αρκετά συστήματα καταγραφέων (metalogd, syslog-ng, sysklogd,
...). Έτσι ενώ δεν μπορείτε να <c>χρειάζεστε</c> καθένα από αυτά (κανένα σωστό
σύστημα δεν έχει όλους τους παραπάνω καταγραφείς ημερολογίου εγκατεστημένους να
εκτελούνται), σιγουρέψαμε το γεγονός όλες αυτές οι υπηρεσίες να <c>παρέχουν</c>
μια εικονική εξάρτηση.
</p>

<p>
Ας δούμε τις πληροφορίες εξαρτήσεων για την υπηρεσία postfix.
</p>

<pre caption="Πληροφορίες εξαρτήσεων για το Postfix">
depend() {
  need net
  use logger dns
  provide mta
}
</pre>

<p>
Όπως βλέπετε, η υπηρεσία postfix:
</p>

<ul>
  <li>
    απαιτεί την εικονική εξάρτηση <c>net</c> (η οποία παρέχεται για παράδειγμα
    από το <path>/etc/init.d/net.eth0</path>)
  </li>
  <li>
    χρησιμοποιεί την (εικονική) εξάρτηση <c>logger</c> (η οποία παρέχεται για
    παράδειγμα από το <path>/etc/init.d/syslog-ng</path>)
  </li>
  <li>
    χρησιμοποιεί την (εικονική) εξάρτηση <c>dns</c> (η οποία παρέχεται για
    παράδειγμα από το <path>/etc/init.d/named</path>)
  </li>
  <li>
    παρέχει την (εικονική εξάρτηση) <c>mta</c> (η οποία είναι κοινή για όλους τους
    διακομιστές ταχυδρομείου)
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Έλεγχος της Σειράς</title>
<body>

<p>
Σε μερικές περιπτώσεις μπορεί να μην απαιτείτε μια υπηρεσία, αλλά θέλετε η 
υπηρεσία σας να ξεκινήσει <c>πριν</c> (ή <c>μετά</c>) από μια άλλη υπηρεσία
<e>εάν</e> υπάρχει στο σύστημα (προσέξτε το υποθετικό - αυτό δεν αποτελεί πλέον
εξάρτηση) <e>και</e> να εκτελεστεί στο ίδιο επίπεδο εκτέλεσης (προσέξτε το υποθετικό -
μόνο υπηρεσίες του ίδιου επιπέδου εκτέλεσης εμπλέκονται). Μπορείτε να παρέχετε αυτές τις
πληροφορίες χρησιμοποιώντας τις ρυθμίσεις <c>before</c> ή <c>after</c>.
</p>

<p>
Ως παράδειγμα θα δούμε τις ρυθμίσεις για την υπηρεσία Portmap:
</p>

<pre caption="Η συνάρτηση depend() στην υπηρεσία Portmap">
depend() {
  need net
  before inetd
  before xinetd
}
</pre>

<p>
Μπορείτε επίσης να χρησιμοποιήσετε το χαρακτήρα "*" για να λάβετε υπόψη όλες τις
υπηρεσίες στο ίδιο επίπεδο εκτέλεσης, παρόλο που αυτό δεν ενδείκνυται.
</p>

<pre caption="Εκτέλεση ενός σεναρίου init ως πρώτο στο επίπεδο εκτέλεσης">
depend() {
  before *
}
</pre>

<p>
Αν η υπηρεσία σας πρέπει να γράψει σε τοπικούς δίσκους, θα χρειαστεί το
<c>localmount</c>. Αν τοποθετήσει οτιδήποτε στο <path>/var/run</path>
όπως ένα αρχείο pid, τότε θα πρέπει να ξεκινήσει μετά το <c>bootmisc</c>:
</p>

<pre caption="Παράδειγμα συνάρτησης depend()">
depend() {
  need localmount
  after bootmisc
}
</pre>

</body>
</subsection>
<subsection>
<title>Καθιερωμένες Συναρτήσεις</title>
<body>

<p>
Εκτός από τη λειτουργικότητα του <c>depend()</c>, πρέπει επίσης να ορίσετε τη
συνάρτηση <c>start()</c>. Αυτή περιέχει όλες τις απαραίτητες εντολές για την
εκκίνηση της υπηρεσίας. Προτείνεται να χρησιμοποιείτε τις συναρτήσεις <c>ebegin</c>
και <c>eend</c> για να πληροφορείτε το χρήστη σχετικά με το τι συμβαίνει:
</p>

<pre caption="Παράδειγμα συνάρτησης start()">
start() {
  ebegin "Εκκίνηση του my_service"
  start-stop-daemon --start --quiet --exec /path/to/my_service
  eend $?
}
</pre>

<p>
Και το <c>--exec</c> και το <c>--pidfile</c> πρέπει να χρησιμοποιηθούν στις
συναρτήσεις για εκκίνηση και τερματισμό. Αν η υπηρεσία δεν δημιουργεί ένα
αρχείο pid, τότε χρησιμοποιήστε το <c>--make-pidfile</c> αν είναι δυνατό,
αν και θα 'πρεπε να το τεστάρετε για να είστε σίγουροι. Αλλιώς, μην 
χρησιμοποιήτε αρχεία pid. Μπορείτε επίσης να προσθέσετε το <c>--quiet</c>
στις επιλογές του <c>start-stop-daemon</c>, αλλά αυτό δεν προτείνεται εκτός
αν η υπηρεσία είναι υπερβολικά λεπτομερής. Η χρήση του <c>--quiet</c> ίσως
εμποδίσει την απασφαλμάτωση αν η υπηρεσία αποτύχει να εκκινήσει.
</p>

<note>
Σιγουρευτείτε ότι το <c>--exec</c> όντως καλεί μία υπηρεσία και όχι μόνο
ένα σενάριο φλοιού το οποίο τρέχει υπηρεσίες και τερματίζει -- αυτό είναι
αυτό που υποτίθεται ότι πρέπει να κάνει το σενάριο init.
</note>

<p>
Αν χρειάζεστε περισσότερα παραδείγματα της συνάρτησης <c>start()</c>, διαβάστε
τον πηγαίο κώδικα των διαθέσιμων σεναρίων init στον κατάλογο <path>/etc/init.d</path>.
</p>

<p>
Άλλες συναρτήσεις που μπορείτε να ορίσετε είναι: <c>stop()</c> και
<c>restart()</c>. Δεν είναι υποχρεωτικό να οριστούν! Το init σύστημά μας είναι
αρκετά έξυπνο ώστε να συμπληρώσει τις συναρτήσεις αυτές από μόνο του αν
χρησιμοποιήσετε το <c>start-stop-daemon</c>.
</p>

<p>
Αν και δεν <e>πρέπει</e> να δημιουργήσετε μία συνάρτηση <c>stop()</c>, εδώ είναι
ένα παράδειγμα:
</p>

<pre caption="Παράδειγμα συνάρτησης stop()">
stop() {
  ebegin "Stopping my_service"
  start-stop-daemon --stop --exec /path/to/my_service \
    --pidfile /path/to/my_pidfile
  eend $?
}
</pre>

<p>
Αν η υπηρεσία σας τρέχει κάποια άλλα σενάρια (για παράδειγμα, bash, python ή
perl), και αυτό το σενάριο αργότερα αλλάζει ονόματα (για παράδειγμα, από 
<c>foo.py</c> σε <c>foo</c>), τότε θα χρειαστεί να προσθέσετε το <c>--name</c>
στον <c>start-stop-daemon</c>. Πρέπει να καθορίσετε το νέο όνομα στο οποίο θα
αλλάξει το σενάριό σας. Σε αυτό το παράδειγμα, μια υπηρεσία ξεκινά το <c>foo.py</c>,
το οποίο αλλάζει όνομα σε <c>foo</c>:
</p>

<pre caption="Μια υπηρεσία που ξεκινάει το σενάριο foo">
start() {
  ebegin "Starting my_script"
  start-stop-daemon --start --exec /path/to/my_script \
    --pidfile /path/to/my_pidfile --name foo
  eend $?
}
</pre>

<p>
Ο <c>start-stop-daemon</c> έχει μια εξαιρετική σελίδα man διαθέσιμη αν
χρειάζεστε περισσότερες πληροφορίες:
</p>

<pre caption="Εμφάνιση της σελίδα man του start-stop-daemon">
# <i>man start-stop-daemon</i>
</pre>

<p>
Η σύνταξη των σεναρίων init του Gentoo βασίζεται στο Bourne Again Shell (bash),
οπότε μπορείτε να χρησιμοποιήσετε δομές συμβατές με το bash μέσα στο σενάριό σας
init.
</p>

</body>
</subsection>
<subsection>
<title>Προσθήκη Προσαρμοσμένων Επιλογών</title>
<body>

<p>
Αν επιθυμείτε το σενάριο σας init να υποστηρίζει περισσότερες επιλογές από αυτές
που έχουμε ήδη δει, θα πρέπει να προσθέσετε την επιλογή στην μεταβλητή
<c>opts</c> και να δημιουργήσετε μια συνάρτηση με ίδιο όνομα. Για παράδειγμα,
για να υποστηρίζετε μια επιλογή με το όνομα <c>restartdelay</c>:
</p>

<pre caption="Υποστήριξη της επιλογής restartdelay">
opts="${opts} restartdelay"

restartdelay() {
  stop
  sleep 3    <comment># Περιμένετε 3 δευτ. πριν ξαναεκκινήσετε</comment>
  start
}
</pre>

</body>
</subsection>
<subsection>
<title>Μεταβλητές Ρύθμισης Υπηρεσίας</title>
<body>

<p>
Δε χρειάζεται να κάνετε κάτι προκειμένου να υποστηρίξετε ένα αρχείο ρυθμίσεων
στον κατάλογο <path>/etc/conf.d</path>: αν εκτελεστεί το σενάριο σας init, 
αναζητώνται τα παρακάτω αρχεία για ανάγνωση (οι μεταβλητές είναι διαθέσιμες προς
χρησιμοποίηση):
</p>

<ul>
  <li><path>/etc/conf.d/&lt;το σενάριό σας init&gt;</path></li>
  <li><path>/etc/conf.d/basic</path></li>
  <li><path>/etc/rc.conf</path></li>
</ul>

<p>
Επίσης, αν το σενάριο init παρέχει μια εικονική εξάρτηση (όπως η <c>net</c>),
το αρχείο που σχετίζεται με την εξάρτηση αυτή (όπως το
<path>/etc/conf.d/net</path>) επίσης θα αναγνωσθεί.
</p>

</body>
</subsection>
</section>
<section>
<title>Αλλαγή της Συμπεριφοράς του Επιπέδου Εκτέλεσης</title>
<subsection>
<title>Ποιος Ίσως Κερδίσει Από Αυτό;</title>
<body>

<p>
Πολλοί χρήστες φορητών Η/Υ γνωρίζουν την κατάσταση: στο σπίτι πρέπει να εκκινούν
το <c>net.eth0</c>, ενώ δεν πρέπει να εκκινούν την <c>net.eth0</c> όσο είναι
στο δρόμο (εφόσον δεν υπάρχει διαθέσιμο δίκτυο). Με το Gentoo μπορείτε να
αλλάξετε τη συμπεριφορά του επιπέδου εκτέλεσης όπως επιθυμείτε.
</p>

<p>
Για παράδειγμα, μπορείτε να δημιουργήσετε ένα δεύτερο επίπεδο εκτέλεσης "default" με το
οποίο θα εκκινήσετε και θα έχει άλλα σενάρια init συσχετισμένα με αυτό. Μπορείτε
τότε κατά την εκκίνηση να επιλέξετε ποιο επίπεδο εκτέλεσης default θα χρησιμοποιήσετε.
</p>

</body>
</subsection>
<subsection>
<title>Χρησιμοποίηση του softlevel</title>
<body>

<p>
Καταρχήν, δημιουργήστε τον κατάλογο για το επίπεδο εκτέλεσης για το δεύτερο "default"
επίπεδο εκτέλεσης. Για παράδειγμα, δημιουργούμε το επίπεδο εκτέλεσης<path>offline</path>:
</p>

<pre caption="Δημιουργία ενός καταλόγου επιπέδου εκτέλεσης">
# <i>mkdir /etc/runlevels/offline</i>
</pre>

<p>
Προσθέστε τα απαραίτητα σενάρια init στα μόλις δημιουργηθέντα επίπεδα εκτέλεσης. Για
παράδειγμα, αν θέλετε να έχετε ένα ακριβές αντίγραφο του τρέχοντος
<c>default</c> επιπέδου εκτέλεσης αλλά χωρίς το <c>net.eth0</c>:
</p>

<pre caption="Προσθήκη των απαραίτητων σεναρίων init">
<comment>(Αντιγραφή όλων των υπηρεσιών από το default επίπεδο εκτέλεσης στο offline
επίπεδο εκτέλεσης)</comment>
# <i>cd /etc/runlevels/default</i>
# <i>for service in *; do rc-update add $service offline; done</i>
<comment>(Αφαίρεση ανεπιθύμητων υπηρεσιών από το επίπεδο εκτέλεσης offline)</comment>
# <i>rc-update del net.eth0 offline</i>
<comment>(Εμφάνιση των ενεργών υπηρεσιών για το επίπεδο εκτέλεσης offline)</comment>
# <i>rc-update show offline</i>
<comment>(Τμήμα δείγματος εξόδου)</comment>
               acpid | offline
          domainname | offline
               local | offline
            net.eth0 |
</pre>

<p>
Αν και το <c>net.eth0</c> έχει αφαιρεθεί από το επίπεδο εκτέλεσης offline,
το <c>udev</c> ακόμα θα προσπαθήσει να αρχίσει οποιαδήποτε συσκευή εντοπίσει
και να αρχίσει τις κατάλληλες υπηρεσίες. Γι αυτό, πρέπει να προσθέσετε κάθε
υπηρεσία δικτύου που δεν θέλετε να ξεκινάει (καθώς επίσης υπηρεσίες από
οποιαδήποτε άλλη συσκευή που μπορεί να αρχίσει από το udev) στο
<path>/etc/conf.d/rc</path> όπως φαίνεται.
</p>

<pre caption="Απενεργοποίηση υπηρεσιών αρχικοποίησης συσκευών στο /etc/conf.d/rc">
RC_COLDPLUG="yes"
<comment>(Μετά, καθορίστε τις υπηρεσίες που δεν θέλετε να ξεκινούν αυτόματα)</comment>
RC_PLUG_SERVICES="!net.eth0"
</pre>

<note>
Για περισσότερες πληροφορίες στις υπηρεσίες αρχικοποίησης συσκευών, δείτε τα
σχόλια μέσα στο αρχείο <path>/etc/conf.d/rc</path>.
</note>

<p>
Τώρα επεξεργαστείτε το αρχείο ρύθμισης του φορτωτή εκκίνησης
και προσθέστε μια νέα εγγραφή για το <c>offline</c> επίπεδο εκτέλεσης. Για παράδειγμα,
στο αρχείο <path>/boot/grub/grub.conf</path>:
</p>

<pre caption="Προσθήκη εγγραφής για το επίπεδο εκτέλεσης offline">
title Gentoo Linux Offline Usage
  root (hd0,0)
  kernel (hd0,0)/kernel-2.4.25 root=/dev/hda3 <i>softlevel=offline</i>
</pre>

<p>
Voilà, είστε έτοιμοι. Αν επανεκκινήσετε το σύστημά σας και επιλέξτε τη νέα
εγγραφή στην εκκίνηση, θα χρησιμοποιηθεί το επίπεδο εκτέλεσης <c>offline</c> αντί του
<c>default</c>.
</p>

</body>
</subsection>
<subsection>
<title>Χρησιμοποίηση του bootlevel</title>
<body>

<p>
Η χρησιμοποίηση του <c>bootlevel</c> είναι ανάλογη εκείνης του <c>softlevel</c>.
Η μόνη διαφορά είναι ότι εδώ ορίζετε ένα δεύτερο επίπεδο εκτέλεσης "boot" αντί για ένα
δεύτερο επίπεδο εκτέλεσης "default".
</p>

</body>
</subsection>
</section>
</sections>
