<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide disclaimer="obsolete">
<title>Gentoo Линукс Conky инсталация и конфигурация</title>

<author title="Author">
  <mail link="admin@sdesign.us">Bill Woodford</mail>
</author>
<author title="Editor">
  <mail link="brenden@rty.ca">Brenden Matthews</mail>
</author>
<author title="Editor">
  <mail link="nightmorph"/>
</author>
<author title="Translator">
  <mail link="admin@projectkick.org">Dian Dimitrov</mail>
</author>

<abstract>
В този документ са описани инсталацията и конфигурацията на системният монитор известен като Conky.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.5</version>
<date>2008-08-31</date>

<chapter>
<title>Обща Информация</title>
<section>
<title>Въвение в Conky</title>
<body>

<p>
Добре, имате Gentoo компютър и сте научили 30 различни команди за наблюдение 
на различни части от системата. Какво ще правите от тук нататък ? Няма ли по лесен начин  
за наблюдение на поведението и текущите процеси в системата.както и ресурсите, 
който използва всяка една задача. Всичко може да буде свършено от системен монитор като Conky.
</p>

</body>
</section>
<section>
<title>Функции</title>
<body>

<p>
Нетипично за системни монитори като top, Conky може да бъде пуснат 
като отделен прозорец в X (графична) сесия или завлачен до root прозорецът ( също така 
има възможност Conky да показва информацията на stdout (стандартен изход на информацията), 
но това няма да бъде разгледано в тази статия). Conky показва информацията, както за текстовата, 
така и за графичната среда. За разлика от top, начинът по който е подреден 
е изключително стилен и достъпен за потребителя. Като бонус към системното наблюдение Conky
може да ви даде информация от няколко програми за слушане на музика (като BMPx, Music Player
Daemon, and Audacious Media Player), да ви съобщи ако имате нови съобщения в електронната ви поща и т.н.
Ако това , което ви трябва не е в Conky све още, винаги можете на направите скрипт, за да получите информацията,
която ви е необходима - някой такива скриптове, които вече са направени са RSS feeds, POP3
брой на съобщенията в Е-поща, local weather, boinc състояние, дори и състояние на portage.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Инсталация на Conky</title>
<section>
<title>Основна Инсталация</title>
<body>

<p>
Gentoo предлага възможност за бързо и лесно инсталиране на Conky. 
Обърнете внимание на USE flags. Най - вероятно ще ви е нужен Х11 поддръжка (<c>X</c>), 
и да не забравите да посочите USE flags за някой от музикалните програми (различни от MPD) 
които желаете, например Audacious (<c>audacious</c>). Ако желаете да използвате 
TCP port наблюдение, непременно махнете  <c>ipv6</c> use flag, защото порт наблюдението е само за ipv4 системи.
</p>

<p>
Допълнение : <c>truetype</c> USE flag прибавя TrueType шрифтове, 
които се използват от Xft. Този USE flag ще е нужен на повечето потребители.
</p>

<p>
Може да добавите синтаксис за конфигурационният файл на Conky с 
<c>vim-syntax</c> and <c>nano-syntax</c> USE flags, в зависимост от предпочитаният редактор.
</p>

<pre caption="/etc/portage/package.use">
<comment>(Използвайте следното като пример)</comment>
# <i>echo app-admin/conky truetype audacious -ipv6 >> /etc/portage/package.use</i>
</pre>

<p>
След като посочите подходящите USE flags е време за инсталация.
</p>

<pre caption="Инсталиране на Conky">
# <i>emerge -av conky</i>
</pre>

<p>
Можете да проверите как ще като напишете командата <c>conky</c> в терминал.
Тази команда ще ви даде добра насока на това как ще изглежда и какво искате да промените, добавите или дори да премахнете.
</p>

<pre caption="Стартиране на Conky за първи път">
$ <i>conky</i>
</pre>

<note>
Double Buffer Extension (DBE) поддръжка е необходима от X server 
за да се предотврати трептене , защото Conky не може да обнови прозорец 
достатъчно бързо. Това може да бъде активирано в 
<path>/etc/X11/xorg.conf</path>с добавяне на <c>Load "dbe"</c> в <b>Section "Module"</b>.
</note>

<p>
След като вече знаете как изглежда, можете да продължите с конфигурацията.
</p>

</body>
</section>
<section>
<title>Конфигурация на Conky</title>
<body>

<p>
Conky ще търси файл с конфигурация в домашната директория на потребителя,
която се намира в <path>~/.conkyrc</path>. Този файл съдържа всичките 
настройки на Conky, от цветове и шрифт, до това каква информация се показва на потребителя.
Примерна конфигурация можете да намерите в <path>/etc/conky/conky.conf</path>.
</p>

<pre caption="Копиране на примерната конфигурация до вашата домашна директория">
$ <i>cp /etc/conky/conky.conf ~/.conkyrc</i>
</pre>

<p>
Сега отворете примерната конфигурация с текстов редактор по ваш избор.
Може да забележите, че файлът се състои от две отделни части.
Първата част на този файл съдържа конфигурацията на програмата и контролира поведението й.
Това включва неща като <c>update_interval</c>, или колко често ще бъде обновявана информацията на екранът.
Втората част съдържа текстът, графиките и променливите, които се виждат на екранът. 
Това включва неща като uptime (<c>$uptime</c>), cpu usage (<c>$cpu</c>) и всичко друго, което желате да бъде показано.
Първата част започва в началото, а втората се състои от всичко след <c>TEXT</c>.
Коментарите започват с <c>#</c>, но помнете, че дори и някой ред да е като коментар във втората част, пак ще бъде показан на екранът.
</p>

<p>
Списък с всяка една възможна конфигурация може да намерите в
<uri>http://conky.sourceforge.net/config_settings.html</uri> и
<uri>http://conky.sourceforge.net/variables.html</uri>. Освен това има няколко страхотни снимки и примерни скриптове в
<uri>http://conky.sourceforge.net/screenshots.html</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Подобрение на Conky</title>
<section>
<title>Отвъд вградените променливи</title>
<body>

<p>
Стигнахте до тук, прегледахте документацията, за тази екстра променлива, 
която Conky изглежда няма.... Днес имате късмет. Conky предоставя няколко променливи само поради тази причина.
<c>$exec</c> ще стартира команда всеки път, когато Conky се обновява, 
<c>$execi</c> ще стартира команда в определено време и  <c>$texeci</c> ще стартира команда своя собствена нишка в определено време.
</p>

<pre caption="Примерни скриптове">
<i>${exec grep 'sudo' /var/log/messages | tail -n 4}</i>
<i>${execi 30 ~/scripts/emerge-status.sh}</i>
<i>${texeci 600 ~/scripts/gmail.pl}</i>
</pre>

<note>
Всяка команда която работи в shell терминал ще работи, помнете, че командата 
трябва да излиза успешно. Команда като <c>tail -f</c>, която не излиза сама НЯМА да работи както трябва.
</note>

</body>
</section>
</chapter>
</guide>
