<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ko/gentoo-x86-quickinstall.xml,v 1.1 2004/11/04 11:45:14 neysx Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/ko/gentoo-x86-quickinstall.xml">
<title>젠투리눅스 설치 가이드</title>
<author title="저자">Steven Wagner</author>
<author title="편집자">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="번역자">
  bobo2
</author>
<author title="번역자">
  <mail link="swift@gentoo.org">Hwang Joonhyung</mail>
</author>

<abstract>
퀵인스톨 가이드 문서는 인스톨 과정의 모든 것을 자세하지 않게 모두 다 설명한다.
사용자들이 이 가이드를 따라하길 원한다면 사용자들은 이미 젠투 리눅스를 인스톨하는 선행체험을 해야 한다.
</abstract>

<license/>

<version>1.17</version>
<date>2004년 10월 2일</date>

<chapter>
<title>퀵인스톨 가이드</title>
<section>
<body>

<p>
설치할 수 있는 ISO 파일들은
<uri link="http://www.gentoo.org/main/en/mirrors.xml">젠투 미러</uri>에 있다.
다른 CD의 세부적인 설명은 <uri link="http://store.gentoo.org">젠투 가게</uri>에서 얻을 수 있다.
CD1은 인터넷 연결 없이 젠투리눅스를 신속하게 설치하기 위해 필요한 모든 것을 포함하고 있다.
CD2는 선택사항이며, KDE, 그놈(GNOME), 오픈오피스(OpenOffice), 모질라(Mozilla), 에볼루션(Evolution) 등의 컴파일된 패키지들을 포함하고 있다.
</p>

<p>
첫 번째 젠투 CD로 부팅을 한다. &lt;F1&gt;이나 &lt;F2&gt;를 누르면 이용가능한 부팅 옵션을 볼 수 있다.
기본 커널로 진행하기 위해서는 &lt;ENTER&gt;를 누르면 된다. 부팅 과정이 진행되는 것을 볼 수 있을 것이다.
</p>

<pre caption = "설정 시작하기">
# <i>date</i> (시각, 날짜가 정확한지 확인한다. 잘못되었다면 <i>date MMDDhhmmCCYY</i>로 설정한다)
# <i>modprobe module_name</i> (선택사항 - 필요한 모듈을 적재한다)
# <i>net-setup eth0</i> (네트워크를 설정한다)
# <i>fdisk /dev/hda</i> (설치할 드라이브의 파티션 설정을 한다)
</pre>

<p>
권장되는 설정은 /boot 볼륨을 ext2에 64Mb 정도로, 스왑 파티션을 사용가능한 RAM 용량의 두 배 정도로, 그리고 나머지를 모두 ReiserFS를 사용하여 root 파티션에 할당하는 것이다.
</p>

<p>
<c>mke2fs</c> (Ext2), <c>mke2fs -j</c> (Ext3), <c>mkreiserfs</c> (ReiserFS), <c>mkfs.xfs</c> (XFS),
<c>mkfs.jfs</c> (JFS), <c>mkswap</c> (스왑 파티션) 등을 이용해 파티션을 초기화한다. 예를 들면 다음과 같다:
<c>mke2fs -j /dev/hda3</c>.
</p>

<p>
파티션을 마운트하고 적절한 스테이지 파일의 압축을 풀어서 계속한다.
</p>

<pre caption = "설치 준비하기">
(스왑 파티션 활성화하기)        # <i>swapon /dev/hdax</i>
(root 파티션 마운트하기)        # <i>mount /dev/hdax /mnt/gentoo</i>
(/boot 마운트 포인트 생성하기)  # <i>mkdir /mnt/gentoo/boot</i>
(/boot 파티션 활성화하기)       # <i>mount /dev/hdax /mnt/gentoo/boot</i>
(마운트 포인트로 이동하기)      # <i>cd /mnt/gentoo</i>
(스테이지 타르볼 파일 압축 해제하기...)
                                # <i>tar -xvjpf /mnt/cdrom/stages/stage&lt;여러분의 스테이지&gt;.tar.bz2</i>
(<comment>또는</comment> 최신 타르볼 다운로드...)    
                                # <i>links http://www.gentoo.org/main/en/mirrors.xml</i>
(    ... 그리고 압축 해제하기)  # <i>tar -xvjpf stage&lt;여러분의 스테이지&gt;.tar.bz2</i>
(선택 사항: 포티지 트리 압축 해제하기)
                                # <i>tar -xvjf /mnt/cdrom/snapshots/portage-*.tar.bz2 \
				  -C /mnt/gentoo/usr</i>
(선택 사항: distfiles 디렉토리 복사하기)
                                # <i>cd /mnt/gentoo/usr/portage; mkdir distfiles;</i>
				# <i>cp /mnt/cdrom/distfiles/* distfiles/</i>
(미러 선택하기)                 # <i>mirrorselect -a -s4 -o | grep 'GENTOO_MURRORS=' \
                                  &gt;&gt; /mnt/gentoo/etc/make.conf</i>
(네임서버 정보 복사하기)        # <i>cp -L /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
(/proc 파일시스템 마운트하기)   # <i>mount -t proc proc /mnt/gentoo/proc</i>
(새로운 환경으로 chroot하기)    # <i>chroot /mnt/gentoo /bin/bash</i>
(필요한 변수 불러오기)          # <i>env-update; source /etc/profile</i>
(네트워크가 연결된 경우, 비 GRP 사용자: 포티지 업데이트하기)
                                # <i>emerge --sync</i>
</pre>

<p>
이제 젠투를 인스톨한다:
</p>

<pre caption = "젠투 설치">
(USE, CFLAGS, CXXFLAGS 변경하기. Stage1 사용자는 CHOST 를 같이 변경한다)
                                # <i>nano -w /etc/make.conf</i>
(스테이지1일 경우: 시스템 부트스트랩하기)
                                # <i>cd /usr/portage; scripts/bootstrap.sh</i>
(스테이지1, 스테이지2일 경우: 기본 시스템 설치하기)
                                # <i>emerge system</i>
</pre>

<p>
이제 필요한 정보를 설정한다:
</p>

<pre caption = "설정파일 설정하기">
(시각구역, 시간형식 설정하기)   # <i>ln -sf /usr/share/zoneinfo/<comment>&lt;시각 구역 파일로의 경로&gt;</comment> /etc/localtime</i>
(fstab 정보(파일 시스템 구성)수정)
                                # <i>nano -w /etc/fstab</i>
</pre>

<p>
다음을 <e>서식</e>으로 해서 (그대로 복사하지 마라.) <path>/etc/fstab</path>을 만드라.
</p>

<pre caption = "/etc/fstab">
# &lt;fs&gt;                  &lt;mountpoint&gt;    &lt;type&gt;          &lt;opts&gt;                  &lt;dump/pass&gt;
/dev/hdax               /boot           ext2            noauto,noatime          1 2
/dev/hdax               none            swap            sw                      0 0
/dev/hdax               /               reiserfs        noatime                 0 1
/dev/cdroms/cdrom0      /mnt/cdrom      auto            noauto,user             0 0
none                    /proc           proc            defaults                0 0
none                    /dev/shm        tmpfs           defaults                0 0
</pre>

<p>
이어서 리눅스 커널을 설치한다:
</p>

<pre caption = "커널 설치">
(커널 소스 설치)                # <i>emerge -k <comment>&lt;커널 패키지&gt;</comment></i>
(genkernel을 이용해 커널 설정...)
                                # <i>emerge -k genkernel; genkernel</i>
(<comment>또는</comment> (1) 선택적으로 커널을 빌드)
                                # <i>cd /usr/src/linux; make menuconfig;</i>
(   (2) VM, /proc, /dev 파일시스템, /dev 파일시스템 부팅시 자동 마운트 포함)
(   (3) 커널 컴파일)            # <i>make dep &amp;&amp; make clean bzImage modules modules_install</i>
(   (4) 커널 복사)              # <i>cp arch/i386/boot/bzImage /boot; cp System.map /boot</i>
</pre>

<p>
필요한 다른 도구를 설치한다:
</p>

<pre caption = "중요한 시스템 도구 설치">
(시스템 로거 설치; 선택: sysklogd, metalog, msyslog, syslog-ng)
                                # <i>emerge -k syslog-ng </i>
(시스템 로거가 부팅시 자동으로 시작되도록)
                                # <i>rc-update add syslog-ng default</i>
(크론 데몬 설치, vcron, dcron, fcron 중에서 하나를 선택)
                                # <i>emerge -k vcron</i>
(크론 데몬을 부팅시 자동으로 시작되도록)
                                # <i>rc-update add vcron default</i>   
(genkernel 사용자일 경우: hotplug 설치)
                                # <i>emerge -k hotplug</i>
(genkernel 사용자일 경우: hotplug가 부팅시 자동으로 시작되도록)
                                # <i>rc-update add hotplug default</i>
(비 ext2, ext3 사용자일 경우, reiserfsprogs, xfsprogs, jfsutils 중에서 선택)
                                # <i>emerge -k reiserfsprogs</i>
(도메일 이름 init 스크립트)     # <i>rc-update add domainname default</i>
</pre>

<p>
만약 여러분이 특성화된 커널 이빌드를 필요로 한다면, 지금 설치하라:
</p>

<pre caption = "특성화된 커널 이빌드 설치">
# <i>emerge pcmcia-cs</i> (or <i>nforce-net</i>, <i>nforce-audio</i>, <i>e100</i>, <i>e1000</i>, <i>ati-drivers</i>, <i>rp-pppoe</i>)
# <i>VIDEO_CARDS="yourcard" emerge xfree-drm</i>  <comment>(ATI Radeon 9200까지, Rage128, Matrox, Voodoo 나 다른 카드)</comment>
</pre>

<p>
자신의 시스템에 적합하게 설정을 마무리 한다:
</p>

<pre caption = "설정 마무리">
(시스템 관리자 암호 설정하기)   # <i>passwd</i>
(일반계정 생성하기)             # <i>useradd your_user -m -G users,wheel,audio -s /bin/bash</i>
(일반계정 암호 설정하기)        # <i>passwd your_user</i>
(시스템 호스트네임 설정하기)    # <i>echo mymachine &gt; /etc/hostname</i>
(시스템 도메인네임 설정하기)    # <i>echo mydomain.com &gt; /etc/dnsdomainname</i>
(hosts 파일 설정하기, 예:"127.0.0.1 localhost mymachine")
                                # <i>nano -w /etc/hosts</i>
(기본 시스템 설정; 주석을 따라서)
                                # <i>nano -w /etc/rc.conf</i>
</pre>

<pre caption = "네트워크 설치">
(네트워크 설정하기, dhcp 사용자들은 iface_eth0="dhcp"와 같이 설정한다)
                                # <i>nano -w /etc/conf.d/net</i>
(시작할 때 읽혀질 모듈의 목록 작성)
                                # <i>nano -w /etc/modules.autoload.d/kernel-<comment>&lt;버전&gt;</comment></i>
(PCMCIA를 사용하지 않는 분만: 부팅할 때 네트워크 자동 시작)
                                # <i>rc-update add net.eth0 default</i>
(여러 네트워크 인터페이스가 있는 분만:)
   (1) 각각의 인터페이스를 위한 initscript 만들기)
                                # <i>ln -s /etc/init.d/net.eth0 /etc/init.d/net.ethx</i>
   (2) PCMCIA가 없으면 부팅할 때 자동으로 시작)
                                # <i>rc-update add net.ethx default</i>
(PCMCIA를 사용하는 분만: /etc/conf.d/pcmcia를 확인하고 부팅할 때 PCMCIA 읽기)
                                # <i>rc-update add pcmcia boot</i>
</pre>

<p>
이제 부트로더를 설치한다.
</p>

<pre caption="GRUB 설치와 설정">
# <i>emerge grub</i>
# <i>grub</i>
grub&gt; <i>root (hd0,0)</i>
grub&gt; <i>setup (hd0)</i>
grub&gt; <i>quit</i>
# <i>nano -w /boot/grub/grub.conf</i>
default 0
timeout 15
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux
  root (hd0,0)
  <comment># genkernel을 사용하는 경우:</comment>
  kernel /kernel-<comment>&lt;커널 버전&gt;</comment> root=/dev/ram0 init=/linuxrc real_root=/dev/hda3
  initrd /initrd-<comment>&lt;커널 버전&gt;</comment>
  <comment># genkernel을 사용하지 않는 경우:</comment>
  kernel /kernel-<comment>&lt;커널 버전&gt;</comment> root=/dev/hda3
</pre>

<pre caption="LILO 설치와 설정">
# <i>emerge lilo</i>
# <i>nano -w /etc/lilo.conf</i>
boot=/dev/hda
prompt
timeout=50
default=gentoo

image=/boot/kernel-<comment>&lt;커널 버전&gt;</comment> 
  label=gentoo
  read-only
  <comment># genkernel을 사용하는 경우:</comment>
  append="init=/linuxrc real_root=/dev/hda3"
  root=/dev/ram0
  initrd=/boot/initrd-<comment>&lt;커널 버전&gt;</comment>
  <comment># genkernel을 사용하지 않는 경우:</comment>
  root=/dev/hda3

# <i>/sbin/lilo</i>
</pre>

<p>
이제 모든 파티션을 언마운트하고 새 시스템으로 재부팅한다:
</p>

<pre caption="마치고 GUI 설치">
(chroot를 종료하기)             # <i>exit; cd /</i>
(활성화된 파일 시스템 끄기)     # <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
(리부팅하기, 설치 시디를 드라이브에서 제거)
                                # <i>reboot</i>
(리부팅한 뒤:)
(ADSL 사용자일 경우)            # <i>adsl-setup</i>
(GRP 사용자일 경우)
   (1) CD2 마운트하기           # <i>mount /dev/cdrom /mnt/cdrom</i>
   (2) packages 디렉토리 복사하기
                                # <i>mkdir /usr/portage/packages</i>
                                # <i>cp -a /mnt/cdrom/* /usr/portage/packages/</i>
   (3) 필요한 소프트웨어 설치하기
                                # <i>USE="bindist" emerge -k xfree gnome kde mozilla openoffice-bin</i>
   (4) X서버 설정하기           # <i>/usr/X11R6/bin/xf86config</i>
</pre>

<p>
여러분은 <uri link="index.xml">젠투 문서</uri>에서
더 많은 정보를 얻을 수 있다.
</p>
</body>
</section>
</chapter>	
</guide>
