<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ko/java.xml,v 1.2 2012/04/18 18:30:29 swift Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide>
<title>젠투 자바 가이드</title>

<author title="저자 겸 편집자">
 <mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>
<author title="편집자">
 <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="번역자">
  <mail link="envia@chol.com">Hwang Joonhyung</mail>
</author>

<abstract>
젠투에서 자바를 사용하는 것에 대한 사용자와 개발자를 위한 지침서
</abstract>

<license/>

<version>0.1.4</version>
<date>2003년 11월 21일</date>

<chapter>
<title>JDK/JRE 설치</title>
<section>
<title>개요</title>
<body>

<p>
젠투는 많은 수의 JDK와 JRE를 제공한다. 기본으로 제공하는 것은 등록 과정 없이 무료로 구할 수 있는 Blackdown JDK/JRE이다.
</p>

<note>
미래에는 JRE/JDK를 대신할 수 있는 kaffe를 기본으로 제공할 것 같다.
</note>

<p>
일반적으로 Sun JDK/JRE와 IBM JDK/JRE가 더 빠르지만, 얻으려면 사용권 계약을 읽고 동의해야 하기 때문에 더 번거롭다. (IBM의 경우 등록을 해야 한다.)
</p>

<p>
Sun과 IBM의 JDK/JRE의 ebuild는 설치 파일을 어디에서 다운로드 해야 하는지 알려준다.
</p>

</body>
</section>

<section>
<title>Sun/IBM JDK/JRE 설치</title>
<body>

<p>
여러분이 <c>emerge sun-jdk-1.3.1</c>나 <c>emerge ibm-jdk-1.3.1</c>을 실행하면, 타르볼을 직접 다운로드 해야 한다는 것을 통보받게 된다. Sun JDK/JRE의 경우 온라인으로 사용권 조항에 동의해야 하며, IBM JDK/JRE의 경우 등록을 해야 한다.</p>

<note>
sun-jdk-1.4.0도 마찬가지이다. 모든 패키지들이 Java 1.4와 잘 동작하는 것은 아니기 때문에, 1.4.0 JDK를 쓸지는 여러분이 직접 판단하라.
</note>

<p>
지시받은 파일을 <path>/usr/portage/distfiles</path>에 다운로드 하라. 다운로드가 끝난 뒤 emerge 명령어를 다시 실행하면 JDK/JRE가 <path>/opt</path>에 정상적으로 설치될 것이다.
</p>

</body>
</section>
</chapter>

<chapter>
<title>JDK/JRE 설정</title>
<section>
<title>개요</title>
<body>

<p>
젠투에는 여러 JDK와 JRE를 충돌 없이 설치해 둘 수 있는 능력이 있다.
</p>

<p>
여러분이 root 권한을 가지고 있다면 <c>java-config</c> 도구를 써서 시스템 전체의 기본값을 설정할 수 있다. 사용자들도 <c>java-config</c>를 써서 시스템 전체의 기본값과는 다른 개인적인 기본값을 설정할 수 있다.
</p>

</body>
</section>

<section>
<title>기본 JDK/JRE 지정</title>
<body>

<p>
<c>java-config --list-available-vms</c>을 실행하면 시스템에 있는 모든 사용할 수 있는 JRE와 JDK의 목록을 아래와 같이 얻게 된다.
</p>

<pre caption="사용할 수 있는 VM의 목록 출력">
# <i>java-config --list-available-vms</i>
[blackdown-jdk-1.3.1] Blackdown JDK 1.3.1 (/etc/env.d/java/20blackdown-jdk-1.3.1)
[blackdown-jre-1.3.1] Blackdown JRE 1.3.1 (/etc/env.d/java/20blackdown-jre-1.3.1)
[ibm-jdk-1.3.0] IBM JDK 1.3.0 (/etc/env.d/java/20ibm-jdk-1.3.0)
[ibm-jdk-1.3.1] IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
[ibm-jre-1.3.1] IBM JRE 1.3.1 (/etc/env.d/java/20ibm-jre-1.3.1)
[sun-jdk-1.4.0] Sun JDK 1.4.0 (/etc/env.d/java/20sun-jdk-1.4.0)
</pre>

<p>
괄호 <path>"[]"</path>에 둘러싸인 이름이 그 VM에 해당되는 ID(핸들)다. 이 ID를 <c>java-config --set-system-vm</c>에 아래와 같이 넘긴다.
</p>

<pre caption="시스템 VM 설정">
# <i>java-config --set-system-vm=ibm-jdk-1.3.1</i>
Now using IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
</pre>

<note>
--set-system-vm을 실행하려면 root 권한이 필요하다.
</note>

<p>
일단 <c>java-config --set-system-vm</c>을 특정한 VM ID로 실행시켰다면, /etc/profile.env을 아래와 같은 방법으로 다시 만들어야 한다.
</p>

<pre caption="/etc/profile.env 다시 만들기" >
# <i>env-update</i>
</pre>

<p>
그 다음, 다시 로그인 하거나 source 명령으로 <path>/etc/profile</path>을 여러분의 환경에 읽어들여라.
</p>

<p>
일반 사용자는 <c>java-config --set-user-vm</c>을 써서 필요한 환경 변수를 모두 포함하는 <path>$HOME/.gentoo/java-env</path>를 만들 수 있다. 보통 여러분은 이것을 셸의 시작 스크립트(저의 경우 <path>$HOME/.zshenv</path>)에서 source 명령으로 읽어들이게 될 것이다.
</p>

</body>
</section>

<section>
<title>기본 CLASSPATH 설정</title>
<body>

<p>
<c>java-config</c>은 시스템 전체의 기본 CLASSPATH를 설정할 때에도 쓰이며, 물론 사용자 마다의 기본 CLASSPATH를 설정할 때에도 쓰인다.
</p>

<p>
먼저 여러분은 CLASSPATH에 집어넣을 수 있는, 사용 가능한 자바 라이브러리의 목록을 볼 것이다.
</p>

<pre caption="클래스 목록 출력">
# <i>java-config --list-available-packages</i>
[ant] No description (/usr/share/ant/classpath.env)
[java-gnome] No description (/usr/share/java-gnome/classpath.env)
[java-gtk] No description (/usr/share/java-gtk/classpath.env)
[log4j] "" (/usr/share/log4j/package.env)
</pre>

<note>
이 패키지들에 대한 적절한 설명은 없다. 가까운 미래에 구현될 것이다.
</note>

<p>
여기서도 괄호 <path>"[]"</path> 안의 이름이 다음과 같이 <c>java-config --set-system-classpath</c>에 넘길 ID다.
</p>

<pre caption="classpath 설정">
# <i>java-config --set-system-classpath=log4j,java-gtk,java-gnome</i>
</pre>

<note>
현재 디렉토리(.)는 root의 로그인 프로파일에 포함되어 있을 것이기 때문에 시스템 classpath에 포함되어 있지 않다.
</note>

<p>
여기서도 여러분은 <c>env-update</c>를 실행시켜 시스템 환경을 업데이트 한 뒤, 다시 로그인 하거나 <path>/etc/profile</path>을 source로 읽어들일 것이다.
</p>

<p>
일반 사용자들은 <c>java-config --set-user-classpath</c>로 <path>$HOME/.gentoo/java-env</path>에 의해 자동으로 읽히는 <path>$HOME/.gentoo/java-env-classpath</path>를 만든다.
</p>

</body>
</section>
</chapter>

<chapter>
<title>추가 정보</title>
<section>
<title>오프라인 정보</title>
<body>

<ul>
<li>java-config 매뉴얼 페이지</li>
<li><c>java-config --help</c></li>
<li><path>/usr/bin/java-config</path> 스크립트 자신</li>
</ul>

</body>
</section>

<section>
<title>온라인 정보</title>
<body>

<ul>
<li><uri link="http://news.gmane.org/gmane.linux.gentoo.devel"
>gentoo-dev</uri>, <uri link="http://news.gmane.org/gmane.linux.gentoo.user"
>gentoo-user</uri> 메일링 리스트 보관소</li>
<li>irc.freenode.net의 #gentoo와 #gentoo-java</li>
</ul>

</body>
</section>
</chapter>
</guide>

