<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/ko/ebuild-mistakes.xml,v 1.1 2004/09/27 10:55:39 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/ko/ebuild-mistakes.xml">
<title>이빌드를 작성할 때 흔히 하는 실수</title>
<author title="저자">
  <mail link="liquidx@gentoo.org">Alastair Tse</mail>
</author>
<author title="번역자">
  <mail link="shavete@hotmail.com">shavete</mail>
</author>

<abstract>
이 문서는 이빌드를 쓰고 제출하면서 기여자와 개발자가 자주 하는 실수를 설명한다.
</abstract>

<license/>

<version>1.0</version>
<date>2004년 2월 10일</date>

<chapter>
<title>이빌드를 작성할 때 흔히 하는 실수</title>
<section>
<title>소개</title>
<body>

<p>
사용자들이 제출한 이빌드에서 흔히 볼 수 있는 실수에 대한 목록이다. 부디 이런 실수를 하지 않도록 제출할 이빌드를 확인해야 한다. 이빌드를 제출하기 전에 <uri link="/doc/ko/policy.xml">젠투 개발 정책</uri>과 <uri link="/doc/ko/gentoo-howto.xml">젠투 이빌드 하우투</uri>를 읽고 확인해야 한다. 또한, 트리에 이미 작성된 두개(하나 혹은 둘 이상)의 이빌드를 살펴보고 그것의 스타일을 익히는 것이 좋다.
</p>

<p>
그리고 eclass를 사용하는 이빌드 몇개를 살펴보고, <uri link="/doc/ko/eclass-howto.xml">이클래스 하우투</uri>를 통해 이클래스가 어떻게 사용되는 지 이해하는 것은 매우 유익하다. 마지막으로 여러분은 이빌드를 제출하기 전에 꼼꼼하게 <uri link="/doc/ko/ebuild-submit.xml">이빌드 기여 가이드</uri>를 읽어보아야 한다.
</p>

</body>
</section>
<section>
<title>존재하지 않는/유효하지 않은/손상된/ 헤더</title>
<body>

<p>
여러분이 이빌드를 제출할 때, 헤더는 <path>/usr/portage/skel.ebuild</path>에 있는 헤더와 <e>완벽하게</e> 일치해야 한다. 가장 중요한 것은 헤더를 수정하지 않는 것이며, <c>&#36;Header: &#36;</c>부분이 손상되지 않은 것을 확인하는 것이다.
</p>

<p>
처음 세줄은 <e>반드시</e> 아래와 같아야 한다:
</p>

<pre caption="Valid Header">
# Copyright 1999-2003 Gentoo Technologies, Inc.
# Distributed under the terms of the GNU General Public License v2
# &#36;Header: &#36;
</pre>

<p>
패치하거나, 버전 충돌이 나는 이빌드를 제출하는 경우에도 <c>&#36;Header: &#36;</c>을 고치면 안된다. 그 줄이 반드시 있어야 한다. 우리가 이빌드를 CVS에 넣기 위해 체크할 때, 정확한 버전과 날짜 정보로 이빌드를 수정할 것이다. 따라서 여러분이 손수 header를 고칠 필요가 없다.
</p>

</body>
</section>
<section>
<title>존재하지 않는 IUSE</title>
<body>

<p>
지금까지 가장 흔하게 하는 생략은 IUSE의 생략이다. 여러분은(<uri link="/doc/ko/gentoo-howto.xml">젠투 하우투</uri>에 따르면) USE flag를 사용하지 않는다고 하여도 IUSE변수를 꼭 포함시켜야 한다. USE 플래그를 사용하지 않는다면, 그냥 아래와 같이 추가하면 된다.
</p>

<pre caption="빈 IUSE">
IUSE=""
</pre>

</body>
</section>
<section>
<title>P, PV, PN, PF 재정의하기</title>
<body>

<p>
여러분은 위에 열거한 변수를 절대로 재정의하면 안된다. 항상 MY_P, MY_PN, MY_PV, P0와 같은 식으로 사용해야 한다. 더 많은 정보를 보려면 포티지에 있는 다른 이빌드를 살펴보아라. 대다수의 이빌드는 bash의 "매개변수 확장(Parameter Expansion)"과 같은 식으로 한다. bash의 man 문서를 읽고, "매개변수 확장"을 어떤 식으로 하는지 이해하기 바란다.
</p>

<p>
작업을 하는 중, 만약에 위의 변수들을 재정의한 이빌드를 발견해도 그것을 따라하지 마라. 그 이빌드에 관한 버그를 제출하면 된다.
</p>
</body>
</section>

<section>
<title>버전 번호를 포함한 SRC_URI나 S</title>
<body>

<p>
여러분은 버전 번호를 SRC_URI와 S에 사용하지 않도록 해야 한다. 항상 ${PV} 나 ${P}와 같은 식으로 사용하라. 이렇게 하면 이빌드의 관리를 매우 쉽게 할 수 있다. 버전 번호가 타르볼(tarball)이나 소스(source)와 일관성이 없다면, MY_P를 사용하라. 예를 들어 dev-python/pyopenal는 PyOpenAL이라는 타르볼을 불러와서 아래와 같이 재정의 한다:
</p>

<pre caption="버전 재정의의 예Example versioning redefinition">
MY_P=${P/pyopenal/PyOpenAL}
SRC_URI="http://oomadness.tuxfamily.org/downloads/${MY_P}.tar.gz"
S=${WORKDIR}/${MY_P}
</pre>

</body>
</section>
<section>
<title>DEPEND의 문법적 오류</title>
<body>

<p>
여러분이 제출한 이빌드의 DEPEND와 RDEPEND 필드에는 잘못된 곳이 많이 있기도 하다. 여러분이 의존성 부분을 작성할 때 따라야할 중요한 몇 개의 포인트가 있다.
</p>

<ul>
  <li>
    <e>카테고리를 꼭 포함해야 한다.</e><br />
    예를 들어, <c>&gt;=x11-libs/gtk+-2</c>와 같이 사용해야 한다. <c>&gt;=gtk+-2</c>와 같이 사용하면 안된다.
  </li>
  <li>
    <e>별표(*)를 >=기호를 포함하는 의존성에 사용하면 안된다.</e><br />
    예를 들어, <c>&gt;=x11-libs/gtk+-2*</c>보다는 <c>&gt;=x11-libs/gtk+-2</c>와 같이 사용해야 한다.
  </li>
  <li>
    <e>GTK에서 GTK+1를 사용하는 응용프로그램은 꼭 =x11-libs/gtk+-1.2*와 같이 사용해야 한다.</e>
  </li>
  <li>
    <e>메타(meta) 패키지를 의존성에 포함하면 안된다.</e><br />
    gnome-base/gnome을 의존성에 포함하면 안되고 libgnome과 같이 구체적인 라이브러리를 의존성에 포함해야 한다.
  </li>
  <li>
    <e>한 줄에 하나의 의존성만 포함해야 한다.</e><br />
    여러개의 의존성을 한 줄에 포함하면 안된다. 보기에 흉하고 이해하기도 어렵다.
  </li>
</ul>
</body>
</section>
<section>
<title>불완전한 DEPEND</title>
<body>
<p>
이것은 또하나의 흔한 오류이다. 이빌드 제출자들은 의존성 부분이 정확한 지 않은 지 확인하지 않고 "필요한 작업"만을 작성한 후 제출한다. 아래에 의존성의 정확성을 검사하는 몇개의 팁이 있다.
</p>
<ul>
  <li>
    <e>configure.in이나 configure.ac파일의 내부를 보아라.</e><br />
    파일 안에서 패키지들을 찾아보아라. 살펴보아야 할 부분은 pkg-config의 체크 부분이나 특정 버전을 체크하는 AM_* functions부분이다.
  </li>
  <li>
    <e>포함되어 있는 .spec파일들을 살펴보아라.</e><br />
    적절한 의존성을 위해 포함되어 있는 .spec파일들은 의존성을 보는 좋은 지표이다. 그러나 그것들이 완벽하게 최종적인 의존성 목록이라고 믿지는 말아라.
  </li>
  <li>
    <e>응용프로그램/라이브러리 웹사이트를 찾아 본다.</e><br />
    응용프로그램의 웹사이트를 방문하여 그들이 제안하는 필요할 법한 의존성들을 체크한다.
  </li>
  <li>
    <e>패키지의 README나 INSTALL파일을 읽어본다.</e><br />
	그 파일들은 보통 패키지의 빌드작업과 설치작업에 관한 유용한 정보를 포함한다.
  </li>
  <li>
    <e>pkg-config, 문서 발생 프로그램등의 바이너리 파일이 아닌 의존성을 기억하라.</e><br />
    빌드 작업은 보통 intltool, libtool, pkg-config, doxygen, scrollkeeper, gtk-do과 같은 의존성들을 필요로 한다. 그것들이 제대로 명시되어 있는 지 확인한다.
  </li>
</ul>

</body>
</section>
<section>
<title>유효하지 않은 LICENSE</title>
<body>

<p>
사용자들이 이빌드를 제출할 때 저지르는 또 하나의 흔한 실수는 유효하지 않은 라이선스를 제공하는 것이다. 예를 들어 <c>GPL</c>은 유요한 라이선스가 아니다. 여러분은 <c>GPL-1</c>이나 <c>GPL-2</c>를 구체적으로 명시해야 한다. <c>LGPL</c>의 경우도 마찬가지이다. 여러분이 <c>LICENSE</c>필드에 사용하는 라이선스가 <path>/usr/portage/licenses</path>에 명시된 라이선스인지 확인해야 한다. 타르볼 소스 내부의 <path>COPYING</path>부분에서 라이선스를 체크하는 것도 좋은 방법이다. 패키지가 <c>GPL-1</c>나 <c>GPL-2</c>중 무엇을 사용하는 지 구체적으로 명시하지 않은 경우, 그것은 <c>GPL-2</c>을 사용할 가능성이 높다.
</p>

<p>
만약에 여러분이 제출하는 패키지의 라이선스가 유일하거나 (기존에 존재하지 않았거나) <path>/usr/portage/licenses/</path>에 명시되어 있지 않은 경우, 여러분은 반드시 새로운 라이선스를 파일에 분리하여 제출하여야 한다.
</p>

</body>
</section>
<section>
<title>검증되지 않은 ARCH KEYWORDS</title>
<body>

<p>
이빌드가 다른 ARCH(다른 종류의 아키텍쳐)에서 테스트 되지 않았던 것이면, KEYWORDS부분에 다른 ARCH를 추가하지 말아라. 물론 모든 새로운 이빌드는 ~x86이나 그 아키텍처에 맞는 것이어야 한다. 버전 충돌이 일어난다면, 안정된 KEYWORDS가 <c>~</c>로 표시되어 있는지 확인하라.
</p>

</body>
</section>
<section>
<title>존재하지 않은 SLOT</title>
<body>

<p>
이빌드안에 SLOT 변수가 있는 지 확인하라. 만약 SLOT 변수를 사용할 계획이라면 그것을 지우지 말아라. 아래와 같이 쓴다:
</p>

<pre caption="SLOT 변수 기본값">
SLOT="0"
</pre>

</body>
</section>
<section>
<title>잘못된 DESCRIPTION과 HOMEPAGE 변수</title>
<body>

<p>
HOMEPAGE 변수가 정확하고, 그들이 패키지에 대해서 더 많은 정보를 얻고자 할 때 정확한 페이지로 이동할 수 있는 지 확인하라. 그리고 DESCRIPTION 변수가 너무 길지 않은 지 확인하라. 한 문장 안에 패키지의 주요 기능을 표현한 것이 좋은 DESCRIPTION이다.
</p>

</body>
</section>
<section>
<title>탭 대신 잘못 사용한 스페이스</title>
<body>

<p>
스페이스보다는 탭을 사용하라는 가이드라인을 제출자가 지키지 않아서 해야 하는 라인 재배열은 재미있는 일이 아니다.
<e>부디</e> 탭을 사용하라.
</p>


</body>
</section>
<section>
<title>줄줄이 있는 공백</title>
<body>

<p>
나도 종종 이러한 잘못을 저지른다. repoman을 여러분의 이빌드에 실행시켜서 비어 있는 줄이나, 줄의 마지막 부분에 줄줄이 있는 공백들이 있는 지 검사하는 것을 기억하라.
</p>

</body>
</section>
<section>
<title>장황하게 S=${WORKDIR}/${P} 추가하기</title>
<body>

<p>
만일 <c>S=${WORKDIR}/${P}</c>라면, 여러분은 그것을 여러분의 이빌드에 추가하면 안된다. 그것은 이미 포함되어 있다. 여러분은 다른 <c>${WORKDIR}/${P}</c>을 사용할 경우에만 추가해 주면 된다.
</p>

</body>
</section>
<section>
<title>빼놓은 문서</title>
<body>

<p>
여러분의 패키지가 문서를 포함할 경우, <c>dodoc</c>이나 <path>/usr/share/doc/${PF}</path>을 통해 문서를 넣었는 지 확인하라. <c>dodoc</c>/<c>doins</c>을 실행할 때 나타나는 오류를 확인하는 것을 기억하라.
</p>


</body>
</section>
</chapter>

<chapter>
<title>이빌드를 제출할 때 흔히 하는 실수</title>
<section>
<title>소개</title>
<body>

<p>
<uri link="/doc/ko/index.xml">젠투 문서 페이지</uri>에 있는 <uri link="/doc/ko/ebuild-submit.xml">이빌드 기여 하우투</uri>를 준수하여 이빌드를 제출해야 한다.
</p>

</body>
</section>
<section>
<title>타르볼로 이빌드 압축하기</title>
<body>

<p>
제발, 제발, 제발 이빌드를 타르볼파일로 만들어 첨부하지 마라. 우리가 그것들을 검사하기 편하도록 분리하여 첨부하라.
</p>

</body>
</section>
<section>
<title>이빌드 인라이닝(Inlining Ebuilds)</title>
<body>

<p>
bugzilla의 주석 부분에 이빌드를 복사/붙여넣기하지 마라.
</p>

</body>
</section>
<section>
<title>패키지에 관한 설명 빠뜨리기</title>
<body>

<p>
제발 우리가 패키지가 어떠한 것인지 알 수 있게 하고, 응용프로그램의 홈 페이지가 존재한다면, 그것의 URL을 써 넣어라.
</p>

</body>
</section>
<section>
<title>바꾼 점에 대한 설명이 없는 패키지 업데이트</title>
<body>

<p>
만일 여러분이 업데이트 패키지를 제출할 경우, 이빌드를 어떻게 바꾸었는 지 설명하는 것을 잊지 마라. 예를 들어, 만일 패키지가 새로운 기능/옵션을 갖고, USE 플래그를 사용한다면, 그러한 것들은 여러분의 버그에 올려라. 우리가 그것을 찾아 헤매지 않도록 하라.
</p>

<p>
이빌드 전체를 업데이트하는 것 보다는 diff를 제출하는 것이 현명한 행동이다. diff를 만드는 가장 좋은 방법은 아래와 같다:
</p>

<pre caption="diff 만들기">
$ <i>diff -u some-package-0.1.0.ebuild some-package-0.2.0.ebuild &gt; ~/some-package-0.2.0.diff</i>
</pre>

</body>
</section>
<section>
<title>버전충돌이 나는 변경되지 않은 이빌드 제출하기</title>
<body>

<p>
만일 여러분이 포티지에 있는 패키지의 새로운 버전을 제출하는 경우, 기존의 이빌드가 제대로 작동하는 것을 확인하라. 그리고 새롭게 바꾼 부분이 새로운 이빌드에서 잘못된 작동(추가된 문서)을 하는 지 확인하라. 만일 그 전 버전을 바꿀 필요가 없다면, 이빌드를 첨부하지 마라. 단지 복사해 놓은 이빌드의 버그리포트에 그러한 사항을 작성하고, 그 패키지가 제대로 작동하고 설치되는 것을 확인하면 된다.
</p>

</body>
</section>
</chapter>
<chapter>
<title>제안이나 덧붙일 말</title>
<section>
<body>

<p>
덧붙이고 싶은 말이나, 고쳐야 할 부분, 제안은 <mail link="liquidx@gentoo.org">Alastair Tse</mail>로 메일을 보내라.
</p>

<p>
역자에게 따로 할 말은 <mail link="shavete@hotmail.com">shavete</mail>로 보내라.
</p>

</body>
</section>
</chapter>
</guide>

