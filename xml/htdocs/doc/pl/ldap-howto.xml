<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/ldap-howto.xml,v 1.7 2005/09/27 01:21:21 rane Exp $ -->

<guide link="/doc/pl/ldap-howto.xml" lang="pl">
<title>Autoryzacja LDAP w Gentoo</title>

<author title="Autor">
  <mail link="sj7trunks@gentoo.org">Benjamin Coles</mail>
</author>
<author title="Redaktor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Redaktor">
  <mail link="tseng@gentoo.org">Brandon Hale</mail>
</author>
<author title="Redaktor">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Tłumacz">
  Damian Kuras
</author>

<abstract>
Ten przewodnik przedstawia podstawy LDAP i pokazuje w jaki sposób skonfigurować
OpenLDAP w celu autoryzacji w grupach komputerów z Gentoo.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/license/by-sa/2.5 -->
<license/>

<version>0.18.2</version>
<date>2005-06-10</date>

<chapter>
<title>Wprowadzenie do OpenLDAP</title>
<section>
<title>Co to jest LDAP?</title>
<body>

<p>
Pod pojęciem LDAP kryje się <e>lekki protokół dostępu do katalogów</e>
(Lightweight Directory Access Protocol). Jest oparty na X.500 i zawiera
w sobie większość jego podstawowych funkcji, a jest pozbawiony jego funkcji
zaawansowanych. Czym jest X.500?
</p>

<p>
X.500 jest modelem usług katalogowych w ujęciu OSI. Zawiera
definicje przestrzeni nazw i protokołów zapytań oraz aktualizacji
katalogów. Zwykle jest jednak zbyt rozbudowanym rozwiązaniem.
LDAP, tak jak X.500, zawiera model danych i przestrzeni nazw dla
katalogu oraz dla protokołu. Został tak zaprojektowany, aby działać
bezpośrednio nad stosem TCP/IP. Można go postrzegać jako uproszczoną wersję
X.500.
</p>

</body>
</section>

<section>
<title>Nie rozumiem. Co to jest katalog?</title>
<body>

<p>
Katalog jest wyspecjalizowaną bazą danych zaprojektowaną dla dużej ilości
zapytań i małej ilości aktualizacji. W przeciwieństwie do zwykłych baz danych
nie zawiera wsparcia dla transakcji odwrotnych. Katalogi można łatwo kopiować
w celu podwyższenia dostępności i niezawodności. Kiedy są kopiowane może
dochodzić do pewnych niezgodności, trwających tak długo, jak długo będą się
synchronizowały.
</p>

</body>
</section>

<section>
<title>W jaki sposób rozmieszczono informacje?</title>
<body>

<p>
Wszystkie informacje wewnątrz katalogu rozmieszczone są w określonej
hierarchii. Jeśli zechcemy odczytać dane wewnątrz katalogu, katalog musi
wiedzieć w jaki sposób zgromadzić dane wewnątrz drzewa. Przyjrzyjmy się
fikcyjnej firmie i jej strukturze organizacji:
</p>

<pre caption = "Struktura organizacji dla GenFic, fikcyjnej firmy Gentoo.">
dc:         com
             |
dc:        genfic         <comment>(Organizacja)</comment>
          /      \
ou:   ludzie   serwery    <comment>(Jednostki Organizacji)</comment>
      /    \     ..
uid: ..   john            <comment>(OU-specyficzne dane)</comment>
</pre>

<p>
W związku z tym, że dane do bazy nie są wprowadzane kolejno jak na powyższym
grafie każda jej część musi posiadać określoną nazwę. Większość dystrybucji LDAP
(wliczając w to OpenLDAP) posiada już sporą ilość zdefiniowanych (i ogólnie
przyjętych) schematów, takich jak inetorgperson, powszechnie używany schemat
definiowania użytkowników.
</p>

<p>
Zainteresowanym użytkownikom polecam przeczytanie dokumentu <uri
link="http://www.openldap.org/doc/admin21/">OpenLDAP Admin Guide</uri>.
</p>

</body>
</section>

<section>
<title>Zatem... Po co to wszystko?</title>
<body>

<p>
LDAP można używać do kilku rzeczy. W tym dokumencie opisujemy scentralizowane
zarządzanie kontami użytkowników poprzez przechowywanie ich w jednym, należącym
do LDAP miejscu (co nie znaczy, że znajdują się na jednym serwerze, LDAP
pozwala na rozdysponowanie tej informacji na wielu serwerach). Za pomocą LDAP
można dokonać jednak znacznie więcej.
</p>

<ul>
  <li>
  Zarządzanie infrastrukturą kluczy publicznych
  </li>
  <li>
  Wspólny harmonogram
  </li>
  <li>
  Wspólna książka adresów
  </li>
  <li>
  Przechowywanie informacji DHCP i DNS
  </li>
  <li>
  Wytyczne konfiguracji kategorii systemów - System Class Configuration
  Directives (śledzenie konfiguracji oddzielnych serwerów)
  </li>
  <li>...</li>
</ul>

</body>
</section>

</chapter>

<chapter>
<title>Konfiguracja OpenLDAP</title>
<section>
<title>Konfiguracja wstępna</title>
<body>

<note>
Na codzień am ten plik pusty, a kiedy zachodzi potrzeba zmiany użytkownikowi
hasła robię to zarówno w ldap jak i w pliku <path>/etc/passwd</path>. Zapisuje
tam hasło na 10 sekund na czas kiedy dokonuję zmian i zaraz po ich wprowadzeniu
je usuwam.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Ustawienia bezpieczeństwa dla OpenLDAP</title>
<section>
<title>Prawa dostępu OpenLDAP</title>
<body>

<p>
Jeśli przyjrzymy się plikowi <path>/etc/openldap/slapd.conf</path> zauważymy, że
służy on do precyzowania ACL-i (praw dostępu) dotyczących odczytu i zapisu
danych przez użytkowników:
</p>

<pre caption="/etc/openldap/slapd.conf">
access to *
  by dn="uid=root,ou=people,dc=genfic,dc=com" write
  by users read
  by anonymous auth

access to attrs=userPassword,gecos,description,loginShell
  by self write
</pre>

<p>
Dzięki temu użytkownik zyska dostęp do wszystkiego co może być w stanie zmienić.
Będzie miał prawo do zapisu własnych informacji oraz do odczytu informacji
innych użytkowników. Anonimowi użytkownicy mogą wysłać login i hasło tak, aby
się zalogować. Są cztery poziomy dostępu, kolejno, od najniższego do
najwyższego: <c>auth</c> (autoryzacja), <c>search</c> (wyszukiwanie),
<c>read</c> (odczyt) oraz <c>zapis</c> (zapis).
</p>

<p>
Następny ACL jest znacznie bezpieczniejszy, ponieważ blokuje normalnym
użytkownikom dostęp do ukrytych haseł innych osób:
</p>

<pre caption="/etc/openldap/slapd.conf">
access to attrs="userPassword"
  by dn="uid=root,ou=people,dc=genfic,dc=com" write
  by dn="uid=John,ou=People,dc=genfic,dc=com" write
  by anonymous auth
  by self write
  by * none

access to *
  by dn="uid=root,ou=People,dc=genfic,dc=com" write
  by * read
</pre>

<p>
Taka konfiguracja zapewnia suerużytkownikowi oraz użytkownikowi "john" dostęp do
odczytu (read), zapisu (write) oraz wyszukiwania (search) wszystkiego poniżej drzewa
<path>dc=genfic,dc=com</path>. Pozwala również użytkownikowi na zmianę własnego
<path>userPassword</path>. W ostatecznym rozrachunku wszyscy pozostali muszą
jedynie wiedzieć, że mają możliwość wyszukiwania (tj. mają dostęp do
filtra wyszukującego), jednak nie mogą odczytać wyników wyszukiwania. Możliwe
jest posiadanie wielu ACL-i, warto jednak w związku z kolejnością ich
przetwarzania zachować zasadę, że najwyższy stopień powinien być najbardziej
restrykcyjnym.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Praca z OpenLDAP</title>
<section>
<title>Utrzymywanie katalogu</title>
<body>

<p>
Teraz możemy rozpocząć korzystanie z katalogu do autoryzacji użytkowników w
takich programach jak apache, proftpd, qmail, czy samba. Możemy administrować
nim przy użyciu Webmina, który posiada bardzo przejrzysty i ergonomiczny
interfejs. Możemy również korzystać z gq lub directory_administrator.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Podziękowania</title>
<section>
<body>

<p>
Chcieliśmy podziękować Mattowi Helerowi za użyczenie nam swojego komputera na
cele tego przewodnika. Podziękowania należą się również ludziom z kanału #ldap
w sieci freenode (irc.freenode.net).
</p>

</body>
</section>

</chapter>
</guide>
