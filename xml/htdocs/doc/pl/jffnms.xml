<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/jffnms.xml,v 1.2 2006/06/05 18:22:30 shadoww Exp $ -->

<guide link="/doc/pl/jffnms.xml" lang="pl">
<title>Przewodnik po instalacji i konfiguracji Jffnms</title>

<author title="Autor">
  <mail link="angusyoung@gentoo.org">Otavio R. Piske</mail>
</author>
<author title="Tłumaczenie">
  Wojciech Arabczyk
</author>

<abstract>
Przewodnik ten opisuje proces instalacji Jffnms, systemu zarządzania i
monitoringu sieci, a także pokaże, jak przy jego pomocy monitorować systemy.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.1</version>
<date>2006-04-25</date>

<chapter>
<title>Podstawy Jffms</title>
<section>
<title>Wprowadzenie</title>
<body>

<p>
<uri link="http://www.jffnms.org">Jffnms</uri> jest systemem monitorowania i
zarządzania siecią. Pozwala na pobieranie informacji z różnego rodzaju
komputerów/hostów i protokołów.  W przewodniku tym pokażemy jak poprawnie
zainstalować Jffnms oraz w jaki sposób monitorować własne systemy za pomocą
tego wspaniałego narzędzia.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Wstępne ustawienia</title>
<section>
<title>Wybór flag USE</title>
<body>

<p>
Aby dopasować program do naszym potrzeb, ebuild Jffnms posiada następujące
flagi USE:
</p>

<table>
<tr>
  <th>Flagi USE dla Jffnms</th>
  <th>Opis</th>
</tr>
<tr>
  <ti><c>mysql</c></ti>
  <ti>Użycie Mysql do przechowywania danych Jffnms</ti>
</tr>
<tr>
  <ti><c>postgres</c></ti>
  <ti>Użycie PostgreSQL do przechowywania danych Jffnms</ti>
</tr>
<tr>
  <ti><c>snmp</c></ti>
  <ti>
  Dodaje wsparcie dla protokołu snmp, który uaktywnia zbieranie informacji
  z innych komputerów.
  </ti>
</tr>
</table>

</body>
</section>
<section>
<title>Flagi USE dla PHP</title>
<body>

<p>
Jako program napisany w PHP, Jffnms jest niezwykle zależny od flag USE użytych
dla php. 
</p>

<table>
<tr>
  <th>Flagi USE dla PHP</th>
  <th>Opis</th>
</tr>
<tr>
  <ti><c>gd</c></ti>
  <ti>Dodanie wsparcia dla media-libs/gd (generowanie grafiki w locie)</ti>
</tr>
<tr>
  <ti><c>wddx</c></ti>
  <ti>
  Dodanie wsparcie dla rozproszonego systemu wymiany danych poprzez Internet
  (Web Distributed Data eXchange)
  </ti>
</tr>
<tr>
  <ti><c>sockets</c></ti>
  <ti>Dodanie wsparcia dla gniazd tcp/ip</ti>
</tr>
<tr>
  <ti><c>spl</c></ti>
  <ti>Dodanie wsparcia dla standardowej biblioteki PHP</ti>
</tr>
<tr>
  <ti><c>cli</c></ti>
  <ti>Uaktywnienie CLI SAPI</ti>
</tr>
</table>

</body>
</section>
<section>
<title>Instalacja</title>
<body>

<p>
Jak każdy pakiet w Portage, jffnms można zainstalować przy pomocy
<c>emerge</c>:
</p>

<pre caption="Instalacja Jffnms">
# <i>emerge jffnms</i>
</pre>

<p>
Jffnms powinien zostać zainstalowany w <path>/opt/jffnms/</path>.
</p>

</body>
</section>
<section>
<title>Konfiguracja Apache 2</title>
<body>

<warn>
Ten prosty opis konfiguracji apache nie wyczerpuje wszystkich możliwych
aspektów konfiguracji serwera www.
</warn>

<p>
Czasami chcemy uruchomić Jffnms na swoim komputerze zamiast na zdalnym
serwerze. Jeżeli tak jest w rzeczywistości, to jest możliwe, że nie mamy
zainstalowanego ani skonfigurowanego apache'a. Portage powinno zainstalować go
w naszym imieniu. Niemniej wciąż musimy go skonfigurować i uruchomić, co (na
szczęście) nie jest takie trudne. Zaczynamy od dodania apache do domyślnego
poziomu uruchomieniowego:
</p>

<pre caption="Dodawanie apache 2 do domyślnego runlevel'a">
# <i>rc-update add apache2 default</i>
 * apache2 added to runlevel default
 * rc-update complete.
</pre>

<p>
Następnie uruchamiamy apache2:
</p>

<pre caption="Uruchamianie apache2">
# <i>/etc/init.d/apache2 start</i>
</pre>

<p>
Wreszcie kierujemy swoją przeglądarkę na adres <uri>http://localhost</uri>, aby
zobaczyć stronę z informacjami o świeżo zainstalowanym Apache 2. Teraz - gdy
już wiemy, że Apache działa, możemy przejść do konfiguracji mod_php.
Uruchamiamy ulubiony edytor, otwieramy plik <path>/etc/conf.d/apache2</path> i
dodajemy <c>-D PHP4</c> do zmiennej APACHE2_OPTS.
</p>

<pre caption="Konfiguracja Apache 2">
# <i>nano -w /etc/conf.d/apache2</i>
APACHE2_OPTS="-D DEFAULT_VHOST -D PHP4"
</pre>

<p>
Następnie tworzymy dowiązanie symboliczne z katalogu z instalacją Jffnms do
katalogu głównego Apache. W Gentoo, Apache domyślnie używa
<path>/var/www/localhost/htdocs</path>. Należy więc wykonać następującą
czynność:
</p>

<pre caption="Tworzenie dowiązania do Jffnms">
# <i>cd /var/www/localhost/htdocs &amp;&amp; ln -s /opt/jffnms/htdocs</i>
</pre>

</body>
</section>
<section>
<title>Konfiguracja PHP</title>
<body>

<p>
Teraz, gdy apache działa, czas skonfigurować PHP. Jffnms wymaga pewnych
zmiennych w php.ini do poprawnego działania. Plik php.ini domyślnie znajduje
sie w <path>/etc/php/apache2-php4/php.ini</path>. Musimy ustawić następujące
zmienne:
</p>

<pre caption="Konfiguracja PHP">
# <i>nano -w /etc/php/apache2-php4/php.ini</i>
register_globals = On
register_argc_argv = On 
error_reporting  =  E_ALL &amp; ~E_NOTICE
allow_url_fopen = On
include_path = ".:/usr/share/php4:/usr/share/php:/usr/share/php/PEAR"
short_open_tag = On
</pre>

</body>
</section>
<section>
<title>Instalacja bazy danych</title>
<body>

<warn>
Kest to bardzo podstawowa procedura konfiguracji bazy danych.
</warn>

<p>
Jffnms pozwala używać zarówno PostgreSQL jak i MySQL jako bazy danych. Skupimy
się tutaj na tworzeniu bazy, jak i odpowiednich tabel, w których Jffnms będzie
przechowywał swoje dane. Jffnms nie wymaga bazy danych zainstalowanej
lokalnie. Jedyna różnica w instalacji polega na wykonywaniu niżej
zamieszczonych poleceń na komputerze zdalnym.
</p>

</body>
</section>
<section>
<title>Ustawianie PostgreSQL</title>
<body>

<note>
Posiadacze działającej bazy PostgreSQL, mogą przejść do <uri
link="#use-pg">następnej sekcji</uri>.
</note>

<p>
Należy dodać PostgreSQL do domyślnego poziomu uruchomieniowego, aby był
uruchamiany za każdym razem przy starcie komputera.
</p>
 
<pre caption="Dodawanie  PostgreSQL do domyślnego runlevel'a">
# <i>rc-update add postgresql default</i>
 * postgresql added to runlevel default
 * rc-update complete.
</pre>

<p>
Teraz należy przygotować katalogi dla PostgreSQL. Robi się to przy pomocy
polecenia <c>initdb</c>. Domyślnie PostgreSQL przechowuje swoje dane w
folderze <path>/var/lib/postgresql/data</path>.
</p>

<impo>
Następne polecenie należy wydać jako użytkownik PostgreSQL. Domyślnie jest
to "postgres".
</impo>
 
<pre caption="Przygotowywanie katalogów dla PostgreSQL">
# <i>su - postgres</i>
$ <i>initdb -D /var/lib/postgresql/data</i>
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale C.

creating directory /var/lib/postgresql/data ... ok
creating directory /var/lib/postgresql/data/global ... ok
creating directory /var/lib/postgresql/data/pg_xlog ... ok
creating directory /var/lib/postgresql/data/pg_xlog/archive_status ... ok
creating directory /var/lib/postgresql/data/pg_clog ... ok
creating directory /var/lib/postgresql/data/pg_subtrans ... ok
creating directory /var/lib/postgresql/data/base ... ok
creating directory /var/lib/postgresql/data/base/1 ... ok
creating directory /var/lib/postgresql/data/pg_tblspc ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 1000
creating configuration files ... ok
creating template1 database in /var/lib/postgresql/data/base/1 ... ok
initializing pg_shadow ... ok
enabling unlimited row size for system tables ... ok
initializing pg_depend ... ok
creating system views ... ok
loading pg_description ... ok
creating conversions ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok

WARNING: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the -A option the
next time you run initdb.

Success. You can now start the database server using:

    postmaster -D /var/lib/postgresql/data
or
    pg_ctl -D /var/lib/postgresql/data -l logfile start
</pre>

<p>
Jeżeli initdb wykonało się poprawnie, można wrócić do użytkownika root i
uruchomić PostgreSQL.
</p>

<pre caption="Uruchamianie  PostgreSQL">
# <i>/etc/init.d/postgresql start</i>
</pre>

</body>
</section>
<section id="use-pg">
<title>Używanie bazy PostgreSQL</title>
<body>

<p>
Po uruchomieniu bazy PostgreSQL należy utworzyć użytkownika i bazę dla Jffnms.
Załączyliśmy pliki do obydwu operacji.
</p>

<note>
Jeżeli nie używamy <path>/usr/portage</path> jako katalogu dla drzewa portage
($PORTDIR), musisz zmienić ostatni człon komendy tak, by to odzwierciedlała.
</note>

<pre caption="Tworzenie użytkownika Jffnms">
# <i>psql template1 postgres &lt; /usr/portage/net-analyzer/jffnms/files/postgresql_db</i>
</pre>

<pre caption="Tworzenie bazy Jffnms">
# <i>psql template1 postgres &lt; /usr/portage/net-analyzer/jffnms/files/postgresql_db_table</i>
</pre>

<p>
Na koniec musimy stworzyć wszystkie tabele w których przechowywane będą dane:
</p>

<pre caption="Creating Jffnms database">
# <i>psql jffnms jffnms &lt; /opt/jffnms/docs/jffnms-0.8.2.pgsql</i>
</pre>

<p>
Po uruchomieniu tych skryptów, PostgreSQL powinien być gotowy do współpracy z
Jffnms.
</p>

</body>
</section>
<section>
<title>Użycie MySQL jako bazy danych dla Jffnms</title>
<body>

<warn>
Instalacja i konfiguracja bazy danych MySQL nie jest zawarta w tym przewodniku.
Proszę zapoznać się z <uri link="/doc/pl/mysql-howto.xml">Wprowadzeniem do
systemu zarządzania bazą danych MySQL</uri>.
</warn>

<p>
W przypadku, gdy baza którą wybrano to MySQL, proces instalacji jest troszkę
prostszy. Stworzyliśmy dwa pliki, które utworzą bazę, użytkownika i tabele w
MySQL.
</p>

<note>
Jeżeli nie używamy <path>/usr/portage</path> jako katalogu dla swojego drzewa
portage ($PORTDIR), musimy zmienić ostatni człon komendy tak, by
odzwierciedlała faktyczne położenie drzewa.
</note>

<pre caption="Tworzenie bazy i użytkownika mysql">
# <i>mysql -u <comment>username</comment> -p <comment>password</comment> &lt; /usr/portage/net-analyzer/jffnms/files/mysql_db</i>
</pre>

<pre caption="Tworzenie tabel w mysql">
# <i>mysql -u jffnms -pjffnms jffnms &lt; /opt/jffnms/docs/docs/jffnms-0.8.2.mysql</i>
</pre>

</body>
</section>
<section>
<title>Wykrywanie i monitoring portów UDP</title>
<body>

<warn>
Sekcja ta opisuje konfigurację i uruchamianie programów z suid. Może ona być
nieodpowiednia dla systemów, w których bezpieczeństwo ma priorytet.
</warn>

<p>
Jeżeli chcemy, by wykrywanie i monitorowanie portów UDP funkcjonowało
poprawnie, musimy uruchomić <c>nmap</c> i <c>fping</c> jako programy SUID. W
przypadku gdy w którymś z tych programów znajdzie się błąd, może to stworzyć
dziurę w zabezpieczeniach. By uruchomić je z SUID, należy wykonać poniższe
polecenia:
</p>

<pre caption="Konfiguracja wykrywania i monitoringu portu udp">
# <i>chmod +s /usr/bin/nmap ; chmod a+x /usr/bin/nmap</i>
# <i>chmod +s /usr/sbin/fping ; chmod a+x /usr/sbin/fping</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Konfiguracja Jffnms</title>
<section>
<title>Konfiguracja procesu zbierającego informacje</title>
<body>

<p>
Proces zbierający informacje jest odpowiedzialny za pobieranie danych z hostów.
By pobierał on dane w regularnych odstępach czasu, musi zostać dodany do
crontaba.
</p>

<pre caption="Zbieranie danych w regularnych odstępach czasu">
# <i>crontab -u jffnms /opt/jffnms/docs/unix/crontab</i>
# <i>crontab -e -u jffnms</i>
</pre>

</body>
</section>
<section>
<title>Końcowe ustawienia</title>
<body>

<p>
Od tej chwili Jffnms powinien być poprawnie zainstalowany w naszym systemie.
Jednak cały czas musimy go odpowiednio skonfigurować. Na szczęście, wraz z
Jffnms dostarczane jest narzędzie, dostępne jako strona internetowa, do
konfiguracji baz danych, zezwoleń dla użytkowników jak również do kontroli czy
aktualna konfiguracja zapewni Jffnms poprawne działanie. Do panelu możemy się
dostać poprzez adres: <uri>http://localhost/jffnms/admin/setup.php</uri>.
Dodatkowo powinniśmy odwiedzić stronę <uri link="http://www.jffnms.org/">domową
programu Jffnms</uri>, aby dokładniej poznać proces konfiguracji.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Wsparcie techniczne</title>
<section>
<title>Wsparcie techniczne</title>
<body>

<p>
Pomimo, że Jffnms jest wspaniałym programem, nie jest prosty w instalacji. W
przypadku, gdy pojawią się problemy, jest kilka miejsc gdzie możesz szukać
pomocy:
</p>

<ul>
  <li>
    <uri link="http://www.jffnms.org/docs/installing.html">Podręcznik
    instalacji Jffnms</uri>
  </li>
  <li>
    <uri link="http://www.jffnms.org/docs/jffnms.html">Podręcznik Jffnms</uri>
  </li>
  <li><uri link="http://forums.gentoo.org">Forum Gentoo</uri></li>
  <li>
    <uri
    link="http://www.postgresql.org/docs/8.0/static/index.html">Dokumentacja
    PostreSQL 8</uri>
  </li>
  <li><uri link="http://dev.mysql.com/doc/">Dokumentacja MySQL</uri></li>
</ul>

<p>
Można także napotkać problemy związane z konfiguracją Apache i PHP (w
szczególności, gdy uruchamia się PHP4 i PHP5 na tym samym systemie).  W takim
przypadku, nasz podręcznik <uri
link="/proj/en/php/php4-php5-configuration.xml">konfiguracji Apache do pracy z
PHP4 i PHP5</uri> może okazać się pomocny.
</p>

</body>
</section>
</chapter>
</guide>
