<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- Orig revision: 1.8 -->
<!-- Translator: ShadoWW <damian@lezajsk.info> -->
<!-- Status: Finished -->
<!-- $Id: kernel-upgrade.xml,v 1.6 2005/09/29 01:14:30 rane Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<guide link="/doc/pl/kernel-upgrade.xml" lang="pl">
<title>Aktualizacja jądra w systemie Gentoo</title>
<author title="Autor">
  <mail link="dsd@gentoo.org">Daniel Drake</mail>
</author>
<author title="Tłumacz">
  Damian Kuras
</author>

<abstract>
W dokumencie tym opisano proces aktualizacji jądra systemu.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.1.6</version>
<date>2005-06-04</date>

<chapter>
<title>Wprowadzenie</title>
<section>
<body>

<p>
Jądro jest jednym z niewielu rodzajów pakietów w portage, które wymagają
interwencji użytkownika do zakończenia procesu aktualizacji. Portage ściągnie i
zainstaluje źródła jądra, jednak od tego momentu to użytkownik przed
osiągnięciem jakichkolwiek zauważalnych zmian musi skompilować jądro
samodzielnie.
</p>

<p>
Chociaż ten przewodnik jest przeznaczony dla użytkowników aktualizujących jądro
z jednej wersji do drugiej, może być również użyteczny dla użytkowników
przechodzących z jednego rodzaju jądra na inny.
</p>

<p>
W tym dokumencie jako przykładu użyto pakietu <c>gentoo-sources</c>, jednak
tych instrukcji można również użyć do innych pakietów, które znajdują się w
naszym drzewie.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Po co aktualizować jądro systemu?</title>
<section>
<body>

<p>
Generalnie aktualizacje jądra nie przynoszą większych zmian. Jest jednak klika
powodów, dla których je wciąż przeprowadzamy.
Jednym z nich jest chęć poznania nowych funkcji lub skorzystania z nowego
sterownika, kolejnym jest potrzeba ochrony przed słabymi punktami w
bezpieczeństwie lub ostatecznie, posiadanie stabilnego i aktualnego systemu.
</p>

<p>
Nawet jeśli nie zechcemy aktualizować jądra za każdym razem gdy wyjdzie nowa
wersja, zalecane jest robienie tego od czasu do czasu. W przypadku gdy nowe
aktualizacje wnoszą poprawki związane z bezpieczeństwem aktualizacja jest
bezwzględnie zalecana.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Pobieranie nowych źródeł poprzez Portage</title>
<section>
<body>

<p>
Jądro systemu aktualizujemy tak samo jak inne programy - używając <c>emerge</c>.
Prawdopodobnie zechcemy to zrobić, gdy pozycja ta pojawi się na liście
aktualizacji world. Na przykład:
</p>

<pre caption="Nowe źródła jądra pojawiły się na liście aktualizacji">
# <i>emerge -Dup world</i>
Calculating dependencies ...done!
[ebuild   NS ] sys-kernel/gentoo-sources-2.6.9-r2 [2.6.8-r5]
</pre>

<note>
Etykieta "NS" w powyższym wyniku polecenia oznacza, że nowe jądro zostanie
zainstalowane w nowym slocie. Znaczy to tyle, że źródła starego jądra będą w
systemie dopóki nie usuniemy ich ręcznie.
</note>

<p>
Aktualizację można zainstalować np. tak:
</p>

<pre caption="Aktualizacja źródeł jądra">
# <i>emerge -u gentoo-sources</i>
</pre>

<p>
Źródła zostaną zainstalowane jako podkatalog w katalogu <path>/usr/src</path>. W
powyższym przykładzie będzie to katalog <path>/usr/src/linux-2.6.9-gentoo-r2</path>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Aktualizacja dowiązania symbolicznego /usr/src/linux.</title>
<section>
<body>

<p>
Gentoo wymaga, aby dowiązanie symboliczne <path>/usr/src/linux</path>
prowadziło do jądra, którego aktualnie używamy.
</p>

<p>
Portage może automatycznie zaktualizować dowiązanie symboliczne kiedy
zainstalujemy nowe źródła jądra przy użyciu polecenia emerge. Musimy jedynie
dodać flagę <c>symlink</c> do zmiennej USE w pliku <path>/etc/make.conf</path>.
</p>

<pre caption="Przykład zmiennej USE w pliku /etc/make.conf">
<comment>(Dodajemy zmienną symlink)</comment>
USE="<i>symlink</i> x86 3dnow 3dnowex X aac aalib adns alsa apache2"
</pre>

<p>
Jeśli koniecznie chcemy wykonać powyższą operację ręcznie, poniższy przykład
pokazuje jak zrobić dowiązanie do <path>linux-2.6.9-gentoo-r2</path>:
</p>

<pre caption="Aktualizacja dowiązania symbolicznego/usr/src/linux ręcznie">
# <i>cd /usr/src</i>
# <i>ln -sfn linux-2.6.9-gentoo-r2 linux</i>
</pre>

</body>
</section>
</chapter>

<chapter id="install">
<title>Konfiguracja, kompilacja i instalacja nowego jądra.</title>
<section>
<body>

<p>
Przy każdej z tych operacji powinniśmy się odnosić do instrukcji, które zawarte
są w <uri link="/doc/pl/handbook/index.xml">Podręczniku Gentoo </uri> wzorując
się na rozdziałach <e>Konfiguracja jądra</e> i <e>Konfiguracja bootloadera</e>.
Poniżej napisane jest w skrócie jak to zrobić.
</p>

</body>
</section>
<section>
<title>Opcja 1: Automatyczna konfiguracja jądra przy pomocy genkernel</title>
<body>

<p>
Jeżeli używamy genkernel, musimy jedynie powtórzyć to co robiliśmy gdy pierwszy
raz instalowaliśmy jądro systemu.
</p>

<p>
Po prostu uruchamiamy genkernel w normalny sposób:
</p>

<pre caption="Uruchamianie genkernel">
<comment>(Dla jąder serii 2.4:)</comment>
# <i>genkernel all</i>

<comment>(Dla jąder serii 2.6:)</comment>
# <i>genkernel --udev all</i>
</pre>

<p>
Możemy również użyć dodatkowych parametrów jeżeli zechcemy skonfigurować
dodatkowe opcje jądra przy pomocy <c>menuconfig</c> i chcemy by genkernel
automatycznie zaaktualizował konfigurację gruba, wtedy uruchamiamy genkernel w
podany niżej sposób:
</p>

<pre caption="Uruchamianie genkernel z parametrami">
# <i>genkernel --menuconfig --bootloader=grub all</i>
</pre>

<p>
Więcej informacji znajdziemy w opisie <uri
link="/doc/pl/genkernel.xml">konfiguracji genkernel</uri> lub w <uri
link="/doc/pl/handbook/index.xml">Podręczniku Gentoo</uri>. Dużą część opcji
możemy ustawić w pliku konfiguracyjnym <c>genkernela</c>, czyli
<path>/etc/genkernel.conf</path>.
</p>

</body>
</section>
<section>
<title>Opcja 2: Konfiguracja ręczna</title>
<body>

<p>
Aby rozpocząć uruchamiamy <c>menuconfig</c> w katalogu źródeł jądra:
</p>

<pre caption="Uruchamianie menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Wybieramy opcje, które są wymagane przez urządzenia i środowisko, w którym
będziemy pracować. Po dodatkowe informacje dotyczące konfiguracji jądra,
zaglądamy do rodziału <e>Konfiguracja Jądra</e> w <uri
link="/doc/pl/handbook/index.xml">Podręczniku Gentoo</uri>.
</p>

<p>
Następnie kompilujemy jądro i kopiujemy je na partycję /boot. Ponownie
korzystamy z instrukcji zawartych w <uri link="/doc/pl/handbook/index.xml">
Podręczniku Gentoo</uri> w rozdziale <e>Konfiguracja bootloadera</e>. Jeżeli
<path>/boot</path> znajduje się na oddzielnej partycji, upewniamy się iż jest
ona zamontowana przed skopiowaniem skompilowanego jądra do niej! Nie zrobienie
tego powinno powstrzymać nas od uruchamiania systemu z nowym jądrem.
</p>

<pre caption="Kompilacja i instalacja nowego jądra">
# <i>make &amp;&amp; make modules_install</i>
# <i>mount /boot</i>
# <i>cp arch/i386/boot/bzImage /boot/bzImage-2.6.9-gentoo-r2</i>
# <i>cp System.map /boot/System.map-2.6.9-gentoo-r2</i>
</pre>

<p>
Na koniec powinniśmy zaktualizować konfigurację programu ładującego dodając
pozycję dotyczącą nowego jądra (nie kasujmy jeszcze starej!) i odmontujemy
partycję <path>/boot</path>. Ponownie odnosimy się do <uri
link="/doc/pl/handbook/index.xml">Podręcznika Gentoo</uri> po dokładniejsze
instrukcje opisanego tutaj postępowania.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Ponowna instalacja zewnętrznych modułów</title>
<section>
<body>

<p>
Jeśli używamy dodatkowych modułów, które nie są zawarte w źródłach jądra (np.
sterowniki graficzne NVIDIA lub ATI), ale znajdują się w portage, muszą być
ponownie zainstalowane po każdej aktualizacji jądra systemu. Jest to tak samo
proste jak ponowna instalacja innych pakietów. Po bardziej szczegółowe
instrukcje należy udać się do <uri link="/doc/pl/handbook/index.xml">Podręcznika
Gentoo</uri> do rozdziału <e>Konfiguracja jądra</e>. Aby zagwarantować, że
pakiety te zbudują się na źródłach znajdujących się w
<path>/usr/src/linux</path>, powinniśmy odinstalować pakiety, następnie ponownie
je zemergować. Jeżeli stare źródła dla tego pakietu są utrzymywane przez
portage, takie postępowanie zagwarantuje nam iż przebudowane pakiety będą
poprawnie działały z nowy jądrem.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Uruchamianie systemu z nowym jądrem</title>
<section>
<body>

<p>
Następnie zamykamy wszystkie aplikacje i uruchamiamy ponownie system. Jeśli
postępowaliśmy zgodnie z instrukcjami, które są zamieszczone powyżej na liście
programu ładującego zobaczymy pozycję odnoszącą się do nowego jądra. Wybieramy
ją i uruchamiamy system.
</p>

<p>
Jeżeli wszystko dobrze skonfigurowaliśmy system uruchomi się z nowym jądrem bez
żadnych problemów i będziemy mogli się do niego zalogować oraz rozpocząć pracę.
I na tym kończy się proces aktualizacji jądra.
</p>

<p>
Jeżeli popełniliśmy błąd i system nie wystartował z nowym jądrem, wtedy po
prostu uruchamiamy go ponownie wybierając w programie ładującym wpis, który
odpowiada ostatnio działającej wersji jądra. Następnie przechodzimy z powrotem
do <uri link="#install">Konfiguracji, kompilacji i instalacji nowego jądra</uri>
- wprowadzamy odpowiednie poprawki, aby naprawić błędy. W niektórych przypadkach
(np. gdy po prostu nie zaznaczyliśmy sterownika karty sieciowej, urządzenia
audio itp.) nie będziemy musieli nawet uruchamiać ponownie komputera, aby to
zrobić.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Uruchamianie wielu jąder</title>
<section>
<body>

<p>
Podczas instalacji nowych źródeł, źródła jądra którego aktualnie używaliśmy nie
zostają usunięte. Jest to zamierzone działanie i pozwala w prosty sposób
przełączać się, uruchamiając różne jądra.
</p>

<p>
Przełączanie między różnymi jądrami jest związane z  pozostawieniem źródeł jądra
w <path>/usr/src</path> oraz pozostawieniem pliku obrazu <path>bzImage</path> w
partycji <path>/boot</path> (nawiązując do wpisów w konfiguracji bootloadera).
Za każdy razem gdy będziemy uruchamiali system, będziemy proszeni o wybór
wersji jądra, która ma być użyta.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Usuwanie starego jądra.</title>
<section>
<body>

<p>
Kontynuując poprzedni wątek, po aktualizacji możemy być całkowicie zadowoleni z
nowego jądra i nie potrzebować starej wersji. Prostym sposobem na usunięcie
wszystkich źródeł z wyjątkiem tych najnowszych jest użycie opcji <e>prune</e>
emerge'a. W dalszym ciągu w przykładzie używamy gentoo-sources:
</p>

<pre caption="Usuwanie starych wersji">
# <i>emerge -P gentoo-sources</i>
</pre>

<p>
W większości przypadków, pliki tymczasowe używane podczas kompilacji będą
nadal zapisane w odpowiednim podkatalogu w katalogu <path>/usr/src</path>.
Bezpiecznym rozwiązaniem jest usunięcie ich poprzez użycie polecenia
<c>rm</c>.
</p>

<p>
Możemy również bezpiecznie usunąć moduły, które były używane przez poprzednie
jądro. Można to osiągnąć poprzez usunięcie właściwych katalogów w
<path>/lib/modules</path> odnoszących się do jądra, które właśnie usuwamy.
Należy uważać, aby nie usunąć modułów należących do jądra aktualnie używanego!
</p>

<p>
Na koniec możemy zamontować partycję <path>/boot</path> i usunąć pliki
<path>bzImage</path> oraz <path>System.map</path> jąder systemowych, które
skasowaliśmy. Powinniśmy także wyedytować konfigurację programu ładującego tak,
aby nie było już odwołań do tych jąder.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Zaawansowane: Użycie starego pliku .config do konfiguracji nowego jądra.</title>
<section>
<body>

<p>
Czasami możliwe jest zaoszczędzenie czasu jeżeli użyjemy ponownie pliku
konfiguracyjnego ze starego jądra podczas konfiguracji nowego. Zauważmy jednak,
że jest to generalnie niebezpieczne - między kolejnymi wydaniami, wprowadzanych
jest zbyt wiele zmian, aby uznać taką metodę za rzetelną.
</p>

<p>
Jedyną sytuacją kiedy takie postępowanie jest uzasadnione jest przypadek gdy
aktualizujemy jądro z jednej wersji Gentoo do innej. Dla przykładu, różnice
pomiędzy <c>gentoo-sources-2.6.9-r1</c>, a <c>gentoo-sources-2.6.9-r2</c> będą
bardzo małe, więc użycie opisywanej metody nie powinno przysporzyć problemów.
Jednak nie jest wskazane używanie tej metody w przypadku aktualizacji z wersji
np. 2.6.8 do 2.6.9, gdyż różnice pomiędzy oficjalnymi są zbyt duże. Opisana
poniżej metoda nie wykazuje tych zmian, co często prowadzi do dodatkowych
problemów dla użytkownika poprzez wyłączenie opcji, których wcale nie chciał
wyłączać.
</p>

<p>
Aby ponownie użyć starego pliku <path>.config</path> po prostu kopiujemy go w o
odpowiednie miejsce i uruchamiamy polecenie <c>make oldconfig</c>. W tym
przykładzie, skopiujemy ten plik z <c>gentoo-sources-2.6.9-r1</c> i
zaimportujemy go do <c>gentoo-sources-2.6.9-r2</c>.
</p>

<pre caption="Ponowne użycie starej konfiguracji">
# <i>cd /usr/src/linux-2.6.9-gentoo-r2</i>
# <i>cp ../linux-2.6.9-gentoo-r1/.config .</i>
# <i>make oldconfig</i>
</pre>

<p>
W tym momencie możemy zostać poproszeni o udzielenie odpowiedzi na kilka pytań
dotyczących konfiguracji, która zmieniła się pomiędzy tymi dwoma wydaniami.
Kiedy to zrobimy, będziemy mogli skompilować i zainstalować jądro w taki sposób
w jaki zazwyczaj to czynimy, pomijając jednak proces konfiguracji uruchamiany
poleceniem <c>menuconfig</c>.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Problemy po aktualizacji jądra?</title>
<section>
<body>

<p>
W szybko rozwijanym jądrze Linuksa nieuniknione jest, że zmiany poczynione
między jedną wersją a drugą będą sprawiały jakieś problemy. Jeżeli mamy jakieś
rozwiązania pojawiających się problemów z ostatnimi wersjami <uri
link="/doc/pl/gentoo-kernel.xml#doc_chap2">jąder wspieranych przez Gentoo </uri>
należy napisać raport o tym rozwiązaniu do nas.
</p>

</body>
</section>
</chapter>

</guide>
