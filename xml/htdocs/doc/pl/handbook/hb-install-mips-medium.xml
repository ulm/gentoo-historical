<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-install-mips-medium.xml,v 1.17 2005/12/30 19:40:22 rane Exp $ -->

<sections>

<version>1.11</version>
<date>2005-11-11</date>

<section>
<title>Wymagania sprzętowe</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Przed przystąpieniem do procesu instalacji należy upewnić się, że komputer
spełnia podstawowe wymagania sprzętowe Gentoo.
</p>

</body>
</subsection>
<subsection>
<title>Wymagania sprzętowe</title>
<body>

<table>
<tr>
  <th>Pamięć</th>
  <ti>64 MB</ti>
</tr>
<tr>
  <th>Miejsce na dysku</th>
  <ti>1.5 GB (bez miejsca na partycję wymiany)</ti>
</tr>
<tr>
  <th>Partycja wymiany</th>
  <ti>Co najmniej 256 MB</ti>
</tr>
</table>

<p>
Reszta wymagań znajduje się w dokumencie <uri
link="/doc/pl/mips-requirements.xml">MIPS Hardware Requirements</uri> na naszej
stronie internetowej.
</p>

</body>
</subsection>
</section>
<section>
<title>Informacje dotyczące instalacji</title>
<subsection>
<title>Kilka słów o architekturze procesorów</title>
<body>

<p>
Na wielu architekturach procesory przeszły przez kilka etapów rozwoju, przy czym
każdy kolejny był opierany na poprzednim. MIPS nie jest tu wyjątkiem. W skład
architektury MIPS zalicza się kilka różnych procesorów. Aby wybrać odpowiedni
tarball etapu i dobrać prawidłowe <c>CFLAGS</c> należy znać rodzinę do jakiej
należy procesor komputera. Te architektury to ISA (<b>I</b>nstruction
<b>S</b>et <b>A</b>rchitecture).
</p>

<table>
  <tr>
    <th>MIPS ISA</th>
    <th>32/64-bit</th>
    <th>Procesor</th>
  </tr>
  <tr>
    <ti>MIPS 1</ti>
    <ti>32-bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R2000">R2000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R2000">R3000</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 2</ti>
    <ti>32-bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R6000">R6000</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 3</ti>
    <ti>64-bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4400</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4600</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4700</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 4</ti>
    <ti>64-bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R5000">R5000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R5000">RM5000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/RM7000">RM7000</uri>
      <uri link="http://www.linux-mips.org/wiki/index.php/R8000">R8000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R10000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R12000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R14000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R16000</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 5</ti>
    <ti>64-bit</ti>
    <ti>
      Na razie brak
    </ti>
  </tr>
</table>

<p>
Inną wartą wzmianki właściwością jest <b>końcowość</b> (endianness). Jest to
sposób w jaki procesor odczytuje słowa z pamięci głównej. Słowo może być
odczytywane jak <b>duża</b> endiana (najważniejszy bit na początek) lub
<b>mała</b> endiana (najmniej ważny bit na początek). Komputery Intel x86 są
generalnie oparte na małej endianie, a komputery Sparc i Apple na dużej. Na
architekturze MIPS możliwe są obie sytuacje. Aby je odróżniać dodajemy <c>el</c>
od nazwy architektury, by zaznaczyć używanie małej endiany.
</p>

<table>
  <tr>
    <th>Architektura</th>
    <th>32/64-bit</th>
    <th>Końcowość</th>
    <th>Komputery</th>
  </tr>
  <tr>
    <ti><c>mips</c></ti>
    <ti>32-bit</ti>
    <ti>Big Endian</ti>
    <ti>Silicon Graphics</ti>
  </tr>
  <tr>
    <ti><c>mipsel</c></ti>
    <ti>32-bit</ti>
    <ti>Little Endian</ti>
    <ti>DECStations, Cobalt Servers, PlayStation 2</ti>
  </tr>
  <tr>
    <ti><c>mips64</c></ti>
    <ti>64-bit</ti>
    <ti>Big Endian</ti>
    <ti>Silicon Graphics</ti>
  </tr>
  <tr>
    <ti><c>mips64el</c></ti>
    <ti>64-bit</ti>
    <ti>Little Endian</ti>
    <ti>Cobalt Servers, PlayStation 2</ti>
  </tr>
</table>

<p>
Dla osób chcących dowiedzieć się więcej o ISA pożyteczne mogą okazać się
następujące strony internetowe:
</p>

<ul>
  <li>
    <uri link="http://www.linux-mips.org/wiki/index.php/Instruction_Set_Architecture">
      Linux/MIPS Website: MIPS ISA
    </uri>
  </li>
  <li>
    <uri link="http://www.linux-mips.org/wiki/index.php/Endianess">
      Linux/MIPS Website: Endianness
    </uri>
  </li>
  <li>
    <uri link="http://www.linux-mips.org/wiki/index.php/Processors">
      Linux/MIPS Website: Processors
    </uri>
  </li>
  <li>
    <uri link="http://en.wikipedia.org/wiki/Instruction_set">
      Wikipedia: Instruction Set
    </uri>
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Archiwum stage3</title>
<body>

<p>
Plik ten to archiwum zawierające podstawowy system Gentoo, z którego będzie
można kontynuować instalację w sposób opisany w tym Podręczniku. W przeszłości
znajdowały się tu instrukcje dotyczące instalacji z trzech różnych plików tego
typu. Wciąż udostępniamy archiwa stage1 i stage2, ale w oficjalnym opisie
instalacji prezentujemy jedynie czynności związane z użyciem stage3. Informacje
dotyczące instalacji za pomocą stage1 i stage2 znajdują się w Gentoo FAQ w
podrozdziale <uri link="/doc/pl/faq.xml#stage12">How do I Install Gentoo Using
a Stage1 or Stage2 Tarball?</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Uruchamianie z sieci - przegląd</title>
<subsection>
<body>

<p>
W tym rozdziale omówimy wszystko co jest niezbędne dla uruchomienia komputera
Silicon Graphics lub Cobalt Server z sieci. Jest to skrócony opis, więcej
informacji odnaleźć można w  <uri link="/doc/pl/diskless-howto.xml">Diskless
HOWTO</uri>.
</p>

<p>
Co będzie potrzebne? To zależy od komputera, istnieje wiele różnych urządzeń,
które pozwolą na zainstalowanie Linuksa.
</p>

<ul>
  <li>
    Generalnie:
    <ul>
      <li>Serwer DHCP/BOOTP (zalecane ISC DHCPd)</li>
      <li>Cierpliwość, mnóstwo cierpliwości</li>
    </ul>
  </li>
  <li>
    Dla komputerów Silicon Graphics:
    <ul>
      <li>Serwer TFTP (zalecane tftp-hpa)</li>
      <li>
        Jeśli konieczna jest konsola szeregowa:
        <ul>
          <li>Przewód MiniDIN8 --&gt; RS-232</li>
          <li>Przewód Null-modem</li>
          <li>Terminal VT100 lub kompatybilny z ANSI</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    Dla Cobalt Servers (ale NIE dla Qube):
    <ul>
      <li>Serwer NFS</li>
      <li>Przewód Null-modem</li>
      <li>Terminal VT100 lub kompatybilny z ANSI</li>
    </ul>
  </li>
</ul>

<note>
Komputery SGI używają złącza MiniDIN 8 dla portów szeregowych. Modemy Apple
wydają się doskonale pracować na kablach szeregowych, ale w związku ze wzrostem
popularności modemów wewnętrznych oraz USB coraz trudniej je dostać. Na
szczęście istnieje kilka stron opisujących sposób wykonywania takich kabli
(Google naszym przyjacielem). Poniższa niemiecka strona strona szczególnie
zasługuje na uwagę: <uri
link="http://www.arbeitsplatzvernichtung-durch-outsourcing.de/marty44/sgihard.html">http://www.arbeitsplatzvernichtung-durch-outsourcing.de/marty44/sgihard.html</uri>.
</note>

<note>
Jeśli chodzi o terminal to może być to VT100/ANSI lub zwykły terminal PC z
emulacją (jak HyperTerminal, Minicom, seyon, Telex, xc, screen - zależnie od
upodobań). Platforma sprzętowa nie jest ważna, o ile komputer posiada port
szeregowy RS-232 i odpowiednie oprogramowanie.
</note>

<note>
Warto zauważyć, że ten przewodnik nie bierze pod uwagę pracy z oryginalnym Qube.
Serwer taki nie posiada portu szeregowego i dlatego nie jest na nim możliwa
instalacja Gentoo bez pomocy śrubokręta czy podobnego narzędzia. Pełen opis
instalacji Gentoo na takich komputerach znajduje się pod adresem <uri
link="http://www.metzner.org/projects/qube/">http://www.metzner.org/projects/qube/</uri>.
</note>

</body>
</subsection>
<subsection>
<title>Krótki opis konfiguracji TFTP i DHCP</title>
<body>

<p>
Po zebraniu wszystkich potrzebnych elementów przychodzi pora na krótkie
omówienie procesu uruchamiania z sieci, jak już wspominaliśmy nie jest to pełen
opis.
</p>

<p>
Warto zauważyć, że serwer, z którego będziemy uruchamiać system nie musi
koniecznie działać pod kontrolą Gentoo, może to być FreeBSD lub inna platforma
UNIX-owa. W tym przewodniku zakładamy jednak, że tym systemem będzie Gentoo,
inną opcjonalną możliwością jest uruchomienie serwerów TFTP i DHCP na osobnych
komputerach.
</p>

<p>
Pierwsza czynność to konfigurowanie DHCP. Aby demon ISC DHCP mógł odpowiadać na
zapytania BOOTP (tak jak to jest wymagane przez SGI &amp; Cobalt BOOTROM)
potrzebne jest uruchomienie dynamicznego BOOTP na odpowiednim zakresie adresów,
a później wprowadzenie odpowiednich danych na każdym z komputerów klientów
wskazujących na odpowiedni obraz do uruchomienia.
</p>

<pre caption="Instalowanie ISC DHCP">
# <i>emerge dhcp</i>
</pre>

<p>
Po zainstalowaniu należy utworzyć plik <path>/etc/dhcp/dhcpd.conf</path>. Oto
przykładowa konfiguracja:
</p>

<pre caption="Przykładowy dhcpd.conf">
<comment># Wyłączenie dynamicznego DNS</comment>
<comment># dhcpd odmówi pracy jeśli nie zostanie to dokonane</comment>
ddns-update-style none;

<comment># Utworznie podsieci:</comment>
subnet <i>192.168.10.0</i> netmask <i>255.255.255.0</i> {
<comment># Zakres adresów dla klientów, nie należy zapominać o bicie 'dynamic-bootp'</comment>
  pool {
    range dynamic-bootp <i>192.168.10.1 192.168.10.254</i>;
  }

  <comment># Serwery DNS i domyślna bramka-- należy zastąpić odpowiednie wpisy
  własnymi ustawieniami</comment>
  option domain-name-servers <i>203.1.72.96</i>, <i>202.47.56.17</i>;
  option routers <i>192.168.10.1</i>;

  <comment># Ustawia serwerowi DHCP zarządzanie podsiecią</comment>
  authoritative;

  <comment># Umożliwia BOOTP korzystanie z podsieci</comment>
  allow bootp;
}
</pre>

<p>
Przy takiej konfiguracji we fragmencie dotyczącym podsieci można podać wiele
komputerów klientów. Szczegółowo omówimy to w dalszej części tekstu.
</p>

<p>
Następny krok to konfiguracja serwera TFTP. Na potrzeby tego tekstu ograniczymy
się do demona tftp-hpa, którego sam używam na moich komputerach SGI, serwerach
Cobalt i klientach PXE bez żadnych problemów. Proces instalacji i konfiguracji
wygląda następująco:
</p>

<pre caption="Instalowanie tftp-hpa">
# <i>emerge net-ftp/tftp-hpa</i>
</pre>

<p>
W tym momencie przesuwam katalog <path>/tftpboot</path> do <path>/home</path>,
gdzie mam znacznie więcej miejsca. Jest to całkowicie opcjonalna możliwość,
która może być przekonfigurowana za pomocą pliku
<path>/etc/conf.d/in.tftpd</path>. Jeśli chodzi o dalszą część tekstu zakładamy,
że użytkownik pozostawił ten katalog w domyślnym miejscu.
</p>

<p>
Po skonfigurowaniu wszystkiego pora na przejście do znacznie ciekawszej
części, pora na dopasowanie naszej konfiguracji do komputera, który zamierzamy
uruchamiać z sieci.
</p>

</body>
</subsection>
</section>
<section>
<title>Uruchamiania komputerów SGI z sieci</title>
<subsection>
<title>Pobieranie obrazu</title>
<body>

<p>
W zależności od komputera, na którym instalowany jest system należy wybrać jeden
z kilku dostępnych obrazów. Wszystkie mają nazwy odpowiednie dla systemu i
procesora, dla których zostały skompilowane. Oto ich lista:
</p>

<table>
  <tr>
    <th>Nazwa kodowa</th>
    <th>Komputery</th>
  </tr>
  <tr>
    <ti>IP22</ti>
    <ti>Indy, *Indigo 2, **Challenge S</ti>
  </tr>
  <tr>
    <ti>IP26</ti>
    <ti>*Indigo 2 Power</ti>
  </tr>
  <tr>
    <ti>IP27</ti>
    <ti>Origin 200, Origin 2000</ti>
  </tr>
  <tr>
    <ti>IP28</ti>
    <ti>*Indigo 2 Impact</ti>
  </tr>
  <tr>
    <ti>IP30</ti>
    <ti>Octane</ti>
  </tr>
  <tr>
    <ti>IP32</ti>
    <ti>O2</ti>
  </tr>
</table>

<note>
Częstą pomyłką jest pomieszanie IRIS Indigo (IP12 z R3000 CPU lub IP20 z R4000
CPU, z których żaden nie jest w stanie pracować pod kontrolą Linuksa), Indigo 2
(IP22, który sobie radzi z Linuksem), opartego na R8000 Indigo 2 Power (nie
pracujący z Linuksem) i opartego na R10000 Indigo 2 Impact (IP28, bardzo
eksperymentalny). Należy pamiętać, że są to różne komputery.
</note>

<note>
Na Challenge S, port sieci UTP zawiera kartę WD33C95 SCSI, która nie jest
obsługiwana przez Linuksa. W związku z tym należy użyć nadbiornika AUI--&gt;UTP
podłączonego do portu AUI.
</note>

<p>
Również w nazwach plików r4k odnosi się do serii procesorów R4000, r5k do R5000,
rm5k do RM5200 i r10k do R10000. Wszystkie obrazy znajdują się pod adresem <uri
link="http://dev.gentoo.org/~kumba/mips/netboot">http://dev.gentoo.org/~kumba/mips/netboot</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Konfiguracja DHCP od strony klienta SGI</title>
<body>

<p>
Po pobraniu pliku wystarczy umieścić go w katalogu <path>/tftpboot</path> i
dodać wpis o kliencie do pliku <path>/etc/dhcp/dhcpd.conf</path>.
</p>

<note>
Jeśli katalog <path>/tftpboot</path> nie istnieje to należy go utworzyć.
</note>

<pre caption="Fragment dhcpd.conf dla komputera SGI">
subnet xxx.xxx.xxx.xxx netmask xxx.xxx.xxx.xxx {
  <comment># ... to co zwykle ...</comment>

  <comment># Komputer SGI ... należy zamienić 'sgi' nazwą hosta komputera SGI</comment>
  host <i>sgi</i> {

    <comment># Adres MAC komputera SGI. Zwykle zapisany z tyłu urządzenia</comment>
    hardware ethernet <i>08:00:69:08:db:77</i>;

    <comment># Serwer TFTP (domyślnie ten sam co serwer DHCP)</comment>
    next-server <i>192.168.10.1</i>;

    <comment># Adres IP dla komputera SGI</comment>
    fixed-address <i>192.168.10.3</i>;

    <comment># Nazwa pliku jaki ma pobrać i uruchomić PROM</comment>
    filename "<i>/gentoo-r4k.img</i>";
  }
}
</pre>
</body>
</subsection>
<subsection>
<title>Opcje kernela</title>
<body>

<p>
To już niemal koniec, pozostało już do przeprowadzenia tylko kilka drobnych
zmian. Uruchamiamy konsolę z prawami dostępu roota i wpisujemy następujące
polecenia:
</p>

<pre caption="Poprawki dla komputerów SGI by TFTP działało poprawnie">
<comment>(Wyłączenie "Path Maximum Transfer Unit", aby SGI mogło znaleźć plik
jądra)</comment>
# <i>echo 1 &gt; /proc/sys/net/ipv4/ip_no_pmtu_disc</i>

<comment>(Set the port range usable by the SGI PROM)</comment>
# <i>echo "2048 32767" &gt; /proc/sys/net/ipv4/ip_local_port_range</i>
</pre>

<p>
To powinno wystarczyć do poprawnej pracy serwera Linuksowego z PROM-em SGI.
</p>

</body>
</subsection>
<subsection>
<title>Uruchamianie demonów</title>
<body>

<p>
Pora na uruchomienie demonów, dokonuje się tego za pomocą poleceń:
</p>

<pre caption="Uruchamianie demonów DHCP i TFTP">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/in.tftpd start</i>
</pre>

<p>
Jeśli wszystko poszło dobrze to ostatnim krokiem jaki pozostał do wykonania
jest włączenie komputera. Jeśli serwer DHCP nie uruchamia się z jakichś powodów
należy uruchomić "dhcpd" z linii poleceń i sprawdzić jakie drukuje komunikaty o
błędach. Gdy wszystko jest w porządku demon uruchamia się w tle, jeśli nie to
pojawi się informacja 'exiting.' - wyłączanie, zaraz po poinformowaniu o
zaistniałym problemie.
</p>

<p>
Łatwym sposobem sprawdzenia poprawności pracy demona tftp jest wpisanie
następującego polecenia, jeśli wszystko działa poprawnie to jego wynik powinien
być taki jak ten poniżej.
</p>

<pre caption="Sprawdzanie TFTPd">
# <i>netstat -al | grep ^udp</i>
udp        0      0 *:bootpc                *:*
udp        0      0 *:631                   *:*
udp        0      0 *:xdmcp                 *:*
udp        0      0 *:tftp                  *:* <comment>&lt;-- (najważniejsza linia)</comment>
</pre>

</body>
</subsection>
<subsection>
<title>Uruchamianie z sieci komputera SGI</title>
<body>

<p>
W porządku, wszystko gotowe, DHCP i TFTP działają. Pora na uruchomienia
komputera SGI. Włączamy go, po chwili pojawi się napis "Running power-on
diagnostics", wtedy musimy kliknąć "Stop For Maintenance" lub wcisnąć klawisz
ESCAPE. Pojawi się menu takie jak poniżej, należy w nim wpisać następujące
polecenia:
</p>

<pre caption="Menu zarządzania SGI PROM">
        Running power-on diagnostics

System Maintenance Menu

1) Start System
2) Install System Software
3) Run Diagnostics
4) Recover System
5) Enter Command Monitor

Option? <i>5</i>
Command Monitor. Type "exit" to return to the menu.
&gt;&gt; <i>bootp(): root=/dev/ram0</i>
</pre>

<p>
W tym momencie komputer powinien zacząć pobierać i uruchamiać obraz, następnie,
około 20 sekund później rozpocząć uruchamianie Linuksa. Jeśli również to uda się
bez problemów użytkownik powinien znaleźć się w Busybox, powłoce <c>ash</c>,
takiej jak poniżej, skąd może przejść bezpośrednio do rozdziału <uri
link="?part=1&amp;chap=3">Konfigurowanie sieci</uri>.
</p>

<pre caption="Jeśli wszystko poszło dobrze...">
init started:  BusyBox v1.00-pre10 (2004.04.27-02:55+0000) multi-call binary

Gentoo Linux; http://www.gentoo.org/
 Copyright 2001-2004 Gentoo Technologies, Inc.; Distributed under the GPL

 Gentoo/MIPS Netboot for Silicon Graphics Machines
 Build Date: April 26th, 2004

 * To configure networking, do the following:

 * For Static IP:
 * /bin/net-setup &lt;IP Address&gt; &lt;Gateway Address&gt; [telnet]

 * For Dynamic IP:
 * /bin/net-setup dhcp [telnet]

 * If you would like a telnetd daemon loaded as well, pass "telnet"
 * As the final argument to /bin/net-setup.

Please press Enter to activate this console.
</pre>

</body>
</subsection>
<subsection>
<title>Potencjalne problemy</title>
<body>

<p>
Jeśli komputer uparcie odmawia pobrania obrazu to mógł zaistnieć jeden z dwóch
problemów. (1) użytkownik popełnił błąd w procesie konfiguracji lub (2) potrzeba
trochę delikatnej perswazji (Nie, nie takiej, proszę odłożyć młotki). Oto lista
rzeczy, które warto sprawdzić:
</p>

<ul>
  <li>
    Czy dhcpd podaje komputerowi SGI adres IP. Zapytania BOOTP powinny być
    widoczne w logach. <c>tcpdump</c> również się może się tu okazać przydatny.
  </li>
  <li>
    Czy prawa dostępu do plików w katalogu tftp są ustawione poprawnie
    (normalnie <path>/tftpboot</path> powinien być dostępny dla wszystkich)
  </li>
  <li>
    Czy serwer tftp nie zgłasza w swoich logach żadnych błędów.
  </li>
<!--
  I really think this tip can go...

  <li>
    Pray to a Tux plushie (this may or may not work, and is not an officially
    supported troubleshooting technique)
  </li>-->
</ul>

<p>
Jeżeli wszystko poszło prawidłowo od strony serwera, ale komputer SGI wciąż nie
może się połączyć należy wpisać następujące polecenia:
</p>

<pre caption="Naprawianie SGI PROM">
&gt;&gt; <i>resetenv</i>
&gt;&gt; <i>unsetenv netaddr</i>
&gt;&gt; <i>unsetenv dlserver</i>
&gt;&gt; <i>init</i>
&gt;&gt; <i>bootp(): root=/dev/ram0</i>
</pre>

</body>
</subsection>
</section>

<section>
<title>Uruchamianie z sieci serwerów Cobalt</title>
<subsection>
<body>

</body>
</subsection>
<subsection>
<title>Przegląd procedury uruchamiania z sieci</title>
<body>

<p>
W przeciwieństwie do SGI, serwery Cobalt używają systemu NFS do pobrania jądra w
celu uruchomienia z sieci. Komputer uruchamia się trzymając klawisz strzałki w
górę. Wtedy maszyna spróbuje pobrać adres IP poprzez BOOTP, podmontować
katalog <path>/nfsroot</path> z serwera poprzez NFS, a następnia pobrać i
uruchomić plik <path>vmlinux_raq-2800.gz</path>, który jest standardową binarką
typu ELF.
</p>

<p>
Niestety BOOTPROM Cobaltów nie posiada żadnych informacji o tej procedurze, więc
plik MUSI znajdować się w katalogu <path>/nfsroot</path> oraz musi mieć rozmiar
mniejszy nić 675kB. W tym przewodniku skonfigurujemy <uri
link="http://www.colonel-panic.org/cobalt-mips/">CoLo</uri>, które umożliwi
uruchamianie większych jąder. CoLo również obsługuje wbudowane ramdyski, w
związku z czym nie jest niezbędne by cały system znajdował się wewnątrz
<path>/nfsroot</path>.
</p>

</body>
</subsection>

<subsection>
<title>Pobieranie obrazu</title>
<body>

<p>
Wewnątrz <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/netboot/">
http://dev.gentoo.org/~kumba/mips/cobalt/netboot/</uri>
znajdują się obrazy niezbędne do uruchomienia z sieci. Pliki mają nazwę
<path>cobalt-netboot-YYYYMMDD.img.gz</path>, należy wybrać najnowszy z nich i
umieścić go w katalogu <path>/nfsroot</path>.
</p>

<p>
Po dokonaniu tego należy udać się pod adres
<uri link="http://www.colonel-panic.org/cobalt-mips/">
http://www.colonel-panic.org/cobalt-mips/</uri> i pobrać najnowszą wersję
programu ładującego CoLo. Wewnątrz utworzonego katalogu
<path>colo-1.XX/binaries</path> powinien znajdować się plik o nazwie
<path>colo-chain.elf</path>. Należy spakować go przy pomocy Gzip i umieścić w
katalogu <path>/nfsroot</path> pod nazwą <path>vmlinux_raq-2800.gz</path>. W
niektórych przypadkach konieczne jest także utworzenie dowiązania
symbolicznego o nazwie <path>boot</path> wskazującego na <path>/nfsroot</path>.
Dokonuje się tego następującymi poleceniami:
</p>

<note>
Należy zauważyć, że RaQ1 i Qube 2700 poszukują <path>vmlinux.gz</path>, a nie
<path>vmlinux_raq-2800.gz</path>.
</note>

<pre caption="Umieszczanie CoLo w /nfsroot">
# <i>tar -xzvf colo-1.XX.tar.gz</i>
# <i>cd colo-1.XX/binaries</i>

<comment>(dla  Qube 2800, RaQ2, etc)</comment>
# <i>gzip -9vc colo-chain.elf &gt; /nfsroot/vmlinux_raq-2800.gz</i>

<comment>(dla RaQ1, Qube 2700)</comment>
# <i>gzip -9vc colo-chain.elf &gt; /nfsroot/vmlinux.gz</i>
# <i>cd /nfsroot</i>
# <i>ln . boot</i>
</pre>

<note>
Jeśli najnowsza wersja CoLo odmawia uruchomienia można użyć starszej. Wszystkie
do 1.16 na pewno działają prawidłowo.
</note>

</body>
</subsection>

<subsection>
<title>Konfiguracja serwera NFS</title>
<body>

<p>
W związku z tym, że komputer używa NFS do pobrania obrazu potrzebne będzie
wyeksporotwanie <path>/nfsroot</path> na serwer. Jeśli nie dokonano tego
wcześniej będzie trzeba zainstalować pakiet net-fs/nfs-utils.
</p>

<pre caption="Instalowanie nfs-utils">
# <i>emerge net-fs/nfs-utils</i>
</pre>

<p>
Następnie należy umieścić następujący wpis w pliku <path>/etc/exports</path>. W
razie potrzeby można dodać nieco bardziej restrykcyjny wpis.
</p>

<pre caption="Exportowanie katalogu /nfsroot">
/nfsroot      *(ro,sync)
</pre>

<p>
Po dokonaniu tego należy uruchomić serwer NFS:
</p>

<pre caption="Uruchamianie serwera NFS">
# <i>/etc/init.d/nfs start</i>
</pre>

<p>
Jeśli serwer NFS był już uruchamiany należy sprawdzić jego plik
<c>exports</c> za pomocą <c>exportfs</c>.
</p>

<pre caption="Exportowanie nowego systemu plików">
# <i>exportfs -av</i>
</pre>

</body>
</subsection>
<subsection>
<title>Konfiguracja DHCP dla komputera Cobalt</title>
<body>

<p>
Konfiguracja DHCP jest prosta, wystarczy dodać następujące wpisy do pliku
<path>/etc/dhcp/dhcpd.conf</path>:
</p>

<pre caption="Fragment dhcpd.conf dla serwerów Cobalt">
subnet xxx.xxx.xxx.xxx netmask xxx.xxx.xxx.xxx {
  <comment># ... to co zawsze ...</comment>

  <comment># Konfiguracja serwera Cobalt</comment>
  <comment># Ustawienia hostname:</comment>
  host <i>qube</i> {
    <comment># Ścieżka do katalogu nfsroot</comment>
    <comment># Opcja specjalnie dla CoLo przez TFTP</comment>
    option root-path "/nfsroot";

    <comment># Adres MAC serwera Cobalt</comment>
    hardware ethernet <i>00:10:e0:00:86:3d</i>;

    <comment># Serwer z obrazem</comment>
    next-server <i>192.168.10.1</i>;

    <comment># Adres IP serwera Cobalt</comment>
    fixed-address <i>192.168.10.2</i>;

    <comment># Obraz do pobrania</comment>
    <comment># Po raz kolejny opcja specjalnie dla CoLo</comment>
    filename "<i>gentoo-cobalt.img.gz</i>";
  }
}
</pre>

</body>
</subsection>

<subsection>
<title>Uruchamianie demonów</title>
<body>

<p>
W tym momencie należy uruchomić demony, dokonuje się tego za pomocą poleceń:
</p>

<pre caption="Uruchamianie demonów DHCP i NFS">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/nfs start</i>
</pre>

<p>
Jeśli wszystko poszło dobrze można będzie włączyć komputer. Jeśli serwer DHCP
nie uruchamia się z jakichś powodów należy wpisać w konsoli polecenie 'dhcpd' i
sprawdzić jakie zgłasza komunikaty o błędach. Jeśli wszystko idzie dobrze demon
po prostu uruchamia się w tle, jeśli problem występuje to pojawia się komunikat
'exiting.' tuż pod informacją o błędzie.
</p>

</body>
</subsection>

<subsection>
<title>Uruchamianie komputera Cobalt z sieci</title>
<body>

<p>
W porządku, wszystko gotowe, działają serwery DHCP i NFS. Teraz pora na
uruchomienie Cobalta. Podpinamy kabel, przestawiamy terminal na prędkość
transmisji 115200, 8 bitów, bez parzystości, 1 bit przerwania oraz emulację
VT100. Następnie przytrzymujemy klawisze strzałek w prawo i lewo podczas
uruchamiania komputera.
</p>

<p>
Jeśli wszystko poszło prawidło panel powinien wyświetlić napis "Net Booting",
powinna również pojawić się pewna aktywność sieciowa związana ze startem CoLo.
Na tylnym panelu należy przewinąć ekran w dół aż do pojawienia się napisu "Boot
Shell", a następnie nacisnąć ENTER. Na konsoli szeregowej powinien pojawić się
znak zachęty taki jak ten poniżej.
</p>

<note>
W nowszych wersjach CoLo wystarczy wybrać opcję uruchamiania poprzez NFS. Jeśli
to nie zadziała należy wykonać wszystkie poniższe czynności:
</note>

<pre caption="Uruchamianie CoLo do znaku zachęty">
[ "CoLo" v1.13 ]
stage2: 87fb0000-88000000
pci: unit type &lt;Qube2&gt;
tulip: {00:10:e0:00:86:3d}
ide: resetting
boot: running boot menu
&gt;
</pre>

<p>
Pierwszy krok to nauczenie komputera pobierania adresu IP przez DHCP. Należy w
tym celu wpisać <c>dhcp</c> w wierszu poleceń.
</p>

<pre caption="Pobieranie adresu przez DHCP">
&gt; <i>dhcp</i>
net: interface up
dhcp: DISCOVER
dhcp: OFFER 10.0.0.1 &lt;-- 192.168.10.254
dhcp: REQUEST
arp: sent request for 192.168.10.254
udp: no matching socket 192.168.5.1:67 --&gt; 10.0.0.1:68
arp: resolved 192.168.10.254
udp: no matching socket 192.168.5.1:67 --&gt; 10.0.0.1:68
dhcp: DISCOVER
dhcp: OFFER 10.0.0.1 &lt;-- 192.168.10.254
dhcp: REQUEST
udp: no matching socket 192.168.5.1:67 --&gt; 10.0.0.1:68
dhcp: ACK
net: interface down
net: interface up
  address     10.0.0.1
  netmask     255.255.255.0
  gateway     10.0.0.254
  name server 192.168.5.1
</pre>

<p>
UWAGA: W sieciach opartych o Windows mogą pojawić się informacje <c>udp: no
matching socket</c>. Jest to odpowiedź na broadcast sieci, na który CoLo nie
jest w stanie odpowiedzieć. Komunikaty te są równie nieszkodliwe co denerwujące.
</p>

<pre caption="Błędy 'no matching socket'">
udp: no matching socket 10.0.0.254:138 --&gt; 10.0.0.255:138
udp: no matching socket 10.0.0.254:138 --&gt; 10.0.0.255:138
udp: no matching socket 10.0.0.253:1062 --&gt; 10.0.0.255:137
udp: no matching socket 10.0.0.253:1062 --&gt; 10.0.0.255:137
</pre>

<p>
Kolejny krok to pobranie jądra.
</p>

<pre caption="Pobieranie jądra">
&gt; <i>nfs 10.0.0.254 /nfsroot gentoo.img.gz</i>
arp: sent request for 10.0.0.254
arp: resolved 10.0.0.254
udp: no matching socket 10.0.0.253:1062 --&gt; 10.0.0.255:137
nfs: mounted "/nfsroot"
nfs: lookup "gentoo.img.gz"
nfs: mode &lt;0100644&gt;
4651KB loaded (1240KB/sec)
0048ada0 4763040t
</pre>

<p>
To wszystko... pora na uruchomienia jądra.
</p>

<pre caption="Uruchamianie jądra">
&gt; <i>execute</i>
elf: 80080000 &lt;-- 00001000 6586368t + 192624t
elf: entry 80328040
net: interface down
CPU revision is: 000028a0
FPU revision is: 000028a0
Primary instruction cache 32kB, physically tagged, 2-way, linesize 32 bytes.
Primary data cache 32kB 2-way, linesize 32 bytes.
Linux version 2.4.26-mipscvs-20040415 (root@khazad-dum) (gcc version 3.3.3...
Determined physical RAM map:
 memory: 08000000 @ 00000000 (usable)
Initial ramdisk at: 0x80392000 (3366912 bytes)
On node 0 totalpages: 32768
zone(0): 32768 pages.
zone(1): 0 pages.
zone(2): 0 pages.
Kernel command line: console=ttyS0,115200 root=/dev/ram0
Calibrating delay loop... 249.85 BogoMIPS
Memory: 122512k/131072k available (2708k kernel code, 8560k reserved, 3424k dat)
</pre>

<p>
Jeśli wszystko poszło prawidłowo pojawi się powłoka <c>ash</c> o nazwie Busybox.
Pora na przejście do rozdziału <uri link="?part=1&amp;chap=3">Konfiguracja
sieci</uri>.  
</p>

<pre caption="Kiedy wszystko jest w porządku...">
VFS: Mounted root (ext2 filesystem) readonly.
Freeing unused kernel memory: 280k freed
init started:  BusyBox v1.00-pre10 (2004.04.27-02:55+0000) multi-call binary

Gentoo Linux; http://www.gentoo.org/
 Copyright 2001-2004 Gentoo Technologies, Inc.; Distributed under the GPL

 Gentoo/MIPS Netboot for Cobalt Microserver Machines
 Build Date: April 26th, 2004

 * To configure networking, do the following:

 * For Static IP:
 * /bin/net-setup &lt;IP Address&gt; &lt;Gateway Address&gt; [telnet]

 * For Dynamic IP:
 * /bin/net-setup dhcp [telnet]

 * If you would like a telnetd daemon loaded as well, pass "telnet"
 * As the final argument to /bin/net-setup.

Please press Enter to activate this console.
</pre>

</body>
</subsection>

<subsection>
<title>Potencjalne problemy</title>
<body>

<p>
Jeśli komputer uparcie odmawia pobrania obrazu to mógł zaistnieć jeden z dwóch
problemów. (1) użytkownik popełnił błąd w procesie konfiguracji lub (2) potrzeba
trochę delikatnej perswazji (Nie, nie takiej, proszę odłożyć młotki). Oto lista
rzeczy, które warto sprawdzić:
</p>

<ul>
  <li>
    Czy dhcpd podaje Cobaltowi adres IP. W takim wypadku powinny się pojawić
    logi z zapytań BOOTP. Program <c>tcpdump</c> może się tu również okazać
    przydatny.
  </li>
  <li>
    Czy prawa do katalogu <path>/nfsroot</path> są ustawione prawidłowo
    (powinien być dostępny dla wszystkich).
  </li>
  <li>
    Czy serwer NFS działa i udostępnia katalog <path>/nfsroot</path>. Sprawdza
    się to za pomocą polecenia <c>exportfs -v</c> na serwerze.
  </li>
</ul>
</body>
</subsection>
</section>
<!--

  Commented Out Until Further Notice

<section>
<title>Gentoo/MIPS LiveCD</title>
<subsection>
<title>Overview</title>
<body>

<p>
On Silicon Graphics machines, it is possible to boot from a CD in order to
install operating systems.  (This is how one installs IRIX for instance)
Recently, images for such bootable CDs to install Gentoo have been made
possible.  These CDs are designed to work in the same way.
</p>

<p>
At the moment the Gentoo/MIPS Live CD will only work on the SGI Indy,
Indigo 2 and O2 workstations equipped with R4000 and R5000-series CPUs, however
other platforms may be possible in future.
</p>

<p>
You can find the Live CD images for download on your favourite Gentoo Mirror
under the <path>experimental/mips/livecd</path> directory.
</p>

<warn>
These CDs are highly experimental at this time.  They may or may not work at
this time.  You can report success or failures either on
<uri link="http://bugs.gentoo.org">Bugzilla</uri>,
<uri link="http://forums.gentoo.org/viewtopic.php?t=242518">this forum
thread</uri> or in the <c>#gentoo-mips</c>
<uri link="http://www.gentoo.org/main/en/irc.xml">IRC channel</uri>.  We would
love to hear from you.
</warn>

</body>

</subsection>

<subsection>
<title>Burning a Live CD</title>
<body>

<p>
An important thing to note, the SGI PROM does not understand the ISO9660 format,
nor does it know anything about the El Torito boot standard.  These CD images
are constructed as a SGI disklabel with the boot image in the volume header like
a hard drive.  Therefore, care must be taken when burning the CD image.
</p>

<p>
Below is an example command that assumes 24x burning speed on an IDE burner.  If
you have a SCSI burner for instance, you may want to adjust the <c>dev</c>
statement as appropriate.  Likewise with the <c>speed</c> option - if you
strike troubles, you might want to try dropping the speed.
</p>

<pre caption="Burning using cdrecord">
# <i>bzip2 -d mips-livecd-prototype-rc2-20041027.img.bz2</i>
# <i>cdrecord -vv -pad speed=24 dev=ATAPI:0,0,0 -tao mips-livecd-prototype-rc2-20041027.img</i>
</pre>

<note>
It may be possible to burn these CDs under Windows, assuming your burning
program just blindly burns the image as is.  However, no one has succeeded in
making a working CD this way to date.
</note>

<note>
If you don't know what to put as your <c>dev</c> argument, run <c>cdrecord
-scanbus</c> as root - this will tell you where your burner is located.
</note>

</body>
</subsection>
</section>
-->

</sections>

