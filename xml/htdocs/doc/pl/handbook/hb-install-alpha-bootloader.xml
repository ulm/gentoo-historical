<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->
<!-- Orig revision: 1.14 -->

<!-- Translator: sekretarz <sekretarz@gentoo.org> -->
<!-- Title: O instalacji Gentoo Linux -->
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-install-alpha-bootloader.xml,v 1.9 2005/09/28 23:55:05 rane Exp $ -->

<!-- Status: Release -->
<!-- $Id: hb-install-alpha-bootloader.xml,v 1.9 2005/09/28 23:55:05 rane Exp $ -->

<sections>

<version>2.1</version>
<date>2005-03-29</date>

<section>
<title>Podejmowanie decyzji</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Po konfiguracji jądra i odpowiedniej modyfikacji niezbędnych systemowych plików
konfiguracyjnych nadeszła pora na zainstalowanie programu, który uruchomi jądro
w momencie startu systemu. Taki program nazywa się <e>bootloader</e>.
Ale nim zaczniemy, rozważmy wszystkie opcje...
</p>

<p>
Istnieją dwa bootloadery, które działają na architekturze Alpha: <uri
link="#aboot">aBoot</uri> i <uri link="#milo">MILO</uri>. Należy wybrać jeden z
nich.
</p>

</body>
</subsection>
</section>
<section id="aboot">
<title>Domyślnie: Użycie programu aBoot</title>
<body>

<p>
Zacznijmy od zainstalowania tego programu w systemie, oczywiście przy pomocy
polecenia <c>emerge</c>:
</p>

<pre caption = "Instalowanie programu aboot">
# <i>emerge --usepkg aboot</i>
</pre>

<p>
Następny krok umożliwi start systemu z dysku. <c>aboot</c> zostanie uruchomiony
bezpośrednio po włączeniu komputera. Jest to możliwe dzięki zapisaniu
bootloadera <c>aboot</c> na samym początku dysku.
</p>

<pre caption = "Włączenie startu z dysku">
# <i>swriteboot -f3 /dev/sda /boot/bootlx</i>
# <i>abootconf /dev/sda 2</i>
</pre>

<note>
Jeśli używamy innego schematu partycjonowania niż przedstawiony w tym
Podręczniku, należy odpowiednio zmodyfikować wszystkie polecenia. Polecamy
przeczytać odpowiednie strony podręcznika systemowego (<c>man 8 swriteboot</c>
oraz <c>man 8 abootconf</c>). Ponadto jeśli partycja główna posiada system
plików JFS należy ją najpierw zamontować jako <c>ro</c> poprzez podanie
odpowiedniej opcji dla jądra.  
</note>

<p>
Dodatkowo możemy uprościć start Gentoo poprzez ustawienie pliku konfiguracyjnego
programu aBoot i zmiennej SRM boot_osflags. Należy upewnić się, że bootdef_dev
jest także ustawiony poprawnie (łatwiej to zrobić w konsoli SRM niż spod
Linuksa).  
</p>

<pre caption = "Automatyczny start Gentoo">
# <i>echo '0:2/boot/vmlinux.gz root=/dev/sda2' &gt; /etc/aboot.conf</i>
# <i>cd /proc/srm_environment/named_variables</i>
# <i>echo -n 0 &gt; boot_osflags</i>
# <i>echo -n '' &gt; boot_file</i>
# <i>echo -n 'BOOT' &gt; auto_action</i>
# <i>echo -n 'dkc100' &gt; bootdef_dev</i>
<comment>(Zamieniamy dkc100 na nazwę naszego urządzenia)</comment>
</pre>

<p>
Jeżeli w przyszłości zainstnieje potrzeba wejścia na konsole SRM (aby odzyskać
instalację Gentoo, trzeba pobawić się zmiennymi ;)) naciskamy CTRL+C, aby
przerwać automatyczny proces ładowania systemu.
</p>

<p>
Jeśli instalujemy poprzez port szeregowy nie możemy zapomnieć umieścić
flagi startu z konsoli szeregowej w <path>aboot.conf</path>.
Plik <path>/etc/aboot.conf.example</path> zawiera dodatkowe informacje.
</p>

<p>
Aboot jest już skonfigurowany i gotowy do użycia. Możemy przejść do rozdziału
<uri link="?part=1&amp;chap=10">Instalacja niezbędnych narzędzi systemowych</uri>.
</p>

</body>
</section>
<section>
<title>Alternatywnie: Użycie MILO</title>
<body>

<p>
Zanim przejdziemy dalej, musimy zdecydować się, w jaki sposób chcemy uruchamiać
MILO. W tej części zakładamy, że chcemy utworzyć dyskietkę startową z MILO.
Jeśli chcesz bootować z partycji MS-DOS dysku twardego, musisz odpowiednio
zmodyfikować wszystkie polecenia.
</p>

<p>
Zainstalujmy MILO przy pomocy polecenia <c>emerge</c>.
</p>

<pre caption = "Instalowanie MILO">
# <i>emerge --usepkg milo</i>
</pre>

<p>
Po zainstalowaniu MILO obrazy MILO powinny znajdować się w
<path>/opt/milo</path>. Polecenia poniżej utworzą dyskietkę startową zawierającą
MILO. Pamiętać należy, by użyć obrazu właściwego dla danej architektury (Alpha).
</p>

<pre caption = "Instalowanie MILO na dyskietce">
<comment>(Wkładamy pustą dyskietkę)</comment>
# <i>fdformat /dev/fd0</i>
# <i>mformat a:</i>
# <i>mcopy /opt/milo/milo-2.2-18-gentoo-ruffian a:\milo</i>
# <i>mcopy /opt/milo/linload.exe a:\lilnload.exe</i>
<comment>(Dotyczy systemu typu Ruffian:</comment>
  # <i>mcopy /opt/milo/ldmilo.exe a:\ldmilo.exe</i>
<comment>)</comment>
# <i>echo -ne '\125\252' | dd of=/dev/fd0 bs=1 seek=510 count=2</i>
</pre>

<p>
Dyskietka startowa MILO jest już przygotowana do uruchomienia Gentoo Linux. Być
może trzeba będzie ustawić zmienne środowiskowe w ARCS Firmware by MILO się
uruchamiało; wyjaśnienie znajdziemy pod adresem
<uri link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri> wraz z kilkoma
przykładami popularniejszych systemów i niektórymi komendami do zastosowania w
trybie interaktywnym.
</p>

<p>
Pominięcie <uri link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri>
byłoby <e>złym</e> pomysłem.
</p>

<p>
Następnie przechodzimy do paragrafu <uri link="#reboot">Ponowne uruchomienie 
systemu</uri>.
</p>

</body>
</section>
<section id="reboot">
<title>Ponowne uruchomienie systemu</title>
<subsection>
<body>

<p>
Wychodzimy ze środowiska chroot i odmontowujemy wszystkie zamontowane partycje.
Następnie wpisujemy magiczne polecenie: <c>reboot</c>.
</p>

<pre caption="Wyjście z chroota, odmontowanie wszystkich zamontowanych partycji i ponowne uruchomienie">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Nie zapominamy o wyjęciu LiveCD z napędu, by zabootować nowe Gentoo.
</p>

<p>
Po ponownym uruchomieniu komputera w celu dokończenia instalacji Gentoo
przechodzimy do rozdziału <uri link="?part=1&amp;chap=11">Finalizowanie
instalacji Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>



