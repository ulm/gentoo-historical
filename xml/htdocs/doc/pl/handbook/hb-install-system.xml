<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-install-system.xml,v 1.16 2006/02/03 15:00:42 shadoww Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<sections>

<version>2.15</version>
<date>2006-01-19</date>

<section>
<title>Praca w chroot</title>
<subsection>
<title>Opcjonalnie: Wybieranie serwerów lustrzanych</title>
<body>

<p>
Aby móc szybko ściągać źródła programów należy wybrać szybki serwer lustrzany.
Portage używa serwerów zawartych w zmiennej GENTOO_MIRRORS, która znajduje się
w pliku <path>make.conf</path>. Aby zobaczyć listę serwerów, które znajdują się
blisko nas, można wejść na stronę <uri link="/main/en/mirrors.xml">
mirror list</uri> lub użyć sympatycznego narzędzia <c>mirrorselect</c>, które
udostępnia prosty sposób wyboru serwerów lustrzanych
</p>

<pre caption="Sposób użycia programu mirrorselect">
# <i>mirrorselect -i -o &gt;&gt; /mnt/gentoo/etc/make.conf</i>
</pre>

<warn>
Nie należy wybierać żadnych serwerów IPv6. Nasze pliki stage aktualnie nie 
wspierają IPv6.
</warn>

<p>
Następną ważną sprawą jest ustawienie zmiennej SYNC w pliku 
<path>make.conf</path>. Zmienna ta wskazuje na serwer rsync, z którego będzie 
uaktualniane drzewo Portage (kolekcje ebuildów, czyli skryptów które zawierają
wszystkie informacje potrzebne do ściągnięcia i zainstalowania programów). 
Można ręcznie wpisać serwer, którego chcemy używać lub skorzystać z programu 
<c>mirrorselect</c>:
</p>

<pre caption="Wybór serwera rsync za pomocą programu mirrorselect">
# <i>mirrorselect -i -r -o &gt;&gt; /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Po konfiguracji plików za pomocą programu <c>mirrorselect</c> zaleca się
sprawdzenie ustawień w pliku <path>/mnt/gentoo/etc/make.conf</path> !
</p>

</body>
</subsection>
<subsection>
<title>Kopiowanie informacji o DNS</title>
<body>

<p>
Zanim zmienimy środowisko pracy musimy wykonać pewną bardzo ważną czynność. Jest
nią przekopiowanie ustawień DNS z pliku <path>/etc/resolv.conf</path> do nowego
środowiska. Jest to konieczne, by sieć działała także tam.  Plik
<path>/etc/resolv.conf</path> określa jakie serwery nazw będą używane dla sieci.
</p>

<pre caption="Kopiowanie informacji o DNS">
<comment>(Opcja "-L" jest konieczna, sprawia, że nie zostanie skopiowane dowiązanie symboliczne)</comment>
# <i>cp -L /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

</body>
</subsection>
<subsection>
<title>Montowanie systemu plików /proc i /dev</title>
<body>

<p>
Następnie przemontowujemy system plików <path>/proc</path> do
<path>/mnt/gentoo/proc</path>, aby umożliwić systemowi korzystanie z informacji
dostarczanych przez jądro także w środowisku chrootowanym oraz ponownie
montujemy system plików <path>/dev</path> w innym miejscu.
</p>

<pre caption="Montowanie /proc">
 # <i>mount -t proc none /mnt/gentoo/proc</i>
 # <i>mount -o bind /dev /mnt/gentoo/dev</i>
</pre>

</body>
</subsection>
<subsection>
<title>Zmiana środowiska</title>
<body>

<p>
Teraz, gdy wszystkie partycje są już założone, a podstawowe środowisko
zainstalowane, nadszedł czas wejścia do niego poprzez <e>chroot</e>. Oznacza to
przejście z systemu źródła instalacyjnego (livecd lub innego) do systemu
instalowanego (czyli na założone partycje).  
</p>

<p>
Przechodzenie odbywa sie w trzech etapach. Najpierw zamieniamy katalog
z <path>/</path> (na medium instalacyjnym) na <path>/mnt/gentoo</path>
(na założonych partycjach) poleceniem <c>chroot</c>. Następnie tworzymy nowe
środowisko przy pomocy polecenia <c>env-update</c>, które wyeksportuje nowe
zmienne środowiskowe. Ostatecznie wczytujemy te zmienne do pamięci poleceniem
<c>source</c>.  
</p>

<pre caption = "Zmiana środowiska poprzez chroot">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
* Caching service dependencies...
# <i>source /etc/profile</i>
# <i>export PS1="(chroot) $PS1"</i>
</pre>

<p>
Gratulacje! Znajdujemy się wewnątrz nowego systemu Gentoo Linux. Oczywiście do
końca jeszcze daleko i to jest powód, dla którego zostało jeszcze kilka
rozdziałów Podręcznika. :]
</p>

</body>
</subsection>
</section>
<section>
<title>Konfiguracja Portage</title>
<subsection>
<title>Opcjonalnie: Aktualizacja drzewa Portage</title>
<body>

<p>
Należy teraz uaktualnić drzewo Portage. Dokonujemy tego poleceniem
<c>emerge --sync</c>.
</p>

<pre caption="Aktualizowanie drzewa Portage">
# <i>emerge --sync</i>
<comment>(Dla wolnych terminali, takich jak konsola bufora ramki, należy dodać
parametr --quiet dla przyspieszenia całego procesu) </comment>
# <i>emerge --sync --quiet</i>
</pre>

<p>
Portage używa protokołu RSYNC do uaktualniania drzewa pakietów. Jeżeli powyższe
polecenie zakończy się niepowodzeniem (np. z winy firewalla) używamy polecenia
<c>emerge-webrsync</c>, które ściąga i instaluje snapshot drzewa Portage przy
za pomocą protokołu HTTP.
</p>

<pre caption="Aktualizacja drzewa Portage poprzez emerge-webrsync">
# <i>emerge-webrsync</i>
</pre>

<p>
Jeśli otrzymamy ostrzeżenie, że dostępna jest nowa wersja programu Portage i
należy dokonać jego aktualizacji, możemy je zignorować. Portage zostanie
zaktualizowane nieco później.
</p>

</body>
</subsection>
<subsection>
<title>Wybór odpowiedniego profilu</title>
<body>

<p>
Najpierw mała definicja.
</p>

<p>
Profil jest szablonem budowy systemu Gentoo. Nie tylko określa domyślne wartości
dla CHOST, CFLAGS i innych ważnych zmiennych, ale również ogranicza wersje
pakietów jakie mogą zostać zainstalowane w systemie.  Wszystkie te informacje są
utrzymywane przez deweloperów Gentoo.
</p>

<p>
Dawniej, użytkownik w bardzo małym stopniu miał wpływ na profil. Jednakże
ostatnio użytkownicy architektur x86, hppa i alpha mogą wybierać między
dwoma profilami, jednym dla jąder serii 2.4 i drugim dla jąder serii 2.6.
Wymaganie takie wynikło z potrzeby lepszej integracji jąder serii 2.6.
Architektury ppc i ppc64 mają kilka różnych profili do wyboru, szczegółowo
omówimy je później.
</p>

<p>
Aktualnie używany profil można sprawdzić za pomocą poniższego polecenia:
</p>

<pre caption="Sprawdzanie profilu systemowego">
# <i>ls -FGg /etc/make.profile</i>
lrwxrwxrwx  1 48 Apr  8 18:51 /etc/make.profile -> ../usr/portage/profiles/default-linux/x86/2005.1/
</pre>

<p>
W przypadku jednej z trzech wspomnianych wcześniej architektur zostanie
wyświetlony dodatkowy profil w dowiązaniu symbolicznym
<path>make.profile</path>.
</p>

<pre caption="Sprawdzanie, czy istnieje dodatkowy profil">
# <i>ls -d /usr/portage/profiles/default-linux/x86/no-nptl/2.4</i>
/usr/portage/profiles/default-linux/x86/no-nptl/2.4
</pre>

<p>
Powyższy przykład wskazuje na to, że istnieje dodatkowy profil dla jądra 2.4
(nie pojawił się błąd związany z nieistniejącym katalogiem). Zalecamy pozostanie
przy domyślnym profilu, jeśli jednak konieczne jest skorzystanie z 2.4, można go
ustawić w następujący sposób:
</p>

<pre caption="Przechodzenie na profil 2.4">
<comment>(x86 poniżej należy zastąpić nazwą konkretnej architektury, jeśli to konieczne)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/x86/no-nptl/2.4 /etc/make.profile</i>
<comment>(Lista plików profilu 2.4)</comment>
# <i>ls -FGg /etc/make.profile/</i>
total 12
-rw-r--r--  1 939 Dec 10 14:06 packages
-rw-r--r--  1 347 Dec  3  2004 parent
-rw-r--r--  1 573 Dec  3  2004 virtuals
</pre>

<p>
W wydaniu 2005.1 pojawiła się cała seria nowych profili dla architektury ppc.
</p>

<pre caption="Profile dla PPC">
<comment>(Wspólny dla wszysstkich podarchitektur główny profil PPC)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc /etc/make.profile</i>
<comment>(Profil G3)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc/G3 /etc/make.profile</i>
<comment>(Profil G3 i Pegasos)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc/G3/Pegasos/ /etc/make.profile</i>
<comment>(Profil G4 (Altivec)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc/G4 /etc/make.profile</i>
<comment>(Profil G4 Pegasos)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc/G4/Pegasos/ /etc/make.profile</i>
</pre>

<p>
Architektura ppc64 od wydania 2005.1 również posiada szereg nowych profili.
</p>

<pre caption="Profile dla PPC64">
<comment>(Wspólny 64-bitowy profil dla wszystkich komputerów PPC64)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc64/64bit-userland /etc/make.profile</i>
<comment>(Wspólny 32-bitowy profil dla wszystkich komputerów PPC64)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc64/32bit-userland /etc/make.profile</i>
<comment>(Każdy z profili posiada podprofile, należy zastąpić wpis (userland) jedną z powyższych pozycji)</comment>
<comment>(Profil 970 dla JS20)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc64/(userland)/970 /etc/make.profile</i>
<comment>(Profil G5)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc64/(userland)/970/pmac /etc/make.profile</i>
<comment>(Profil POWER3)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc64/(userland)/power3 /etc/make.profile</i>
<comment>(Profil POWER4)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc64/(userland)/power4 /etc/make.profile</i>
<comment>(Profil POWER5)</comment>
# <i>ln -snf /usr/portage/profiles/default-linux/ppc/2005.1/ppc64/(userland)/power5 /etc/make.profile</i>
<comment>(Profil multilib nie jest jeszcze stabilny w tym wydaniu)</comment>
</pre>

</body>
</subsection>
<subsection id="configure_USE">
<title>Konfiguracja zmiennych USE</title>
<body>

<p>
<c>USE</c> to jedna z najważniejszych zmiennych w Gentoo. Niektóre programy mogą
być kompilowane z dodatkową obsługi niektórych funkcji lub bez niej. Na przykład
możliwe jest budowanie różnych programów ze wsparciem dla bibliotek gtk lub qt.
Inne pakiety możemy z kolei wyposażyć w obsługę SSL, bądź też jej pozbawić.
Jeszcze inne mogą być kompilowane ze wsparciem bufora ramki (svgalib) zamiast
X11 (serwera X).
</p>

<p>
Większość dystrybucji kompiluje swoje pakiety ze wsparciem dla tak wielu
elementów, jak to tylko możliwe, powiększając rozmiar programów i czas ich
uruchamiania, nie wspominając o olbrzymiej liczbie zależności. W Gentoo możemy
zdecydować, z którymi opcjami dany pakiet powinien być budowany. I to właśnie
jest moment, kiedy <c>USE</c> wkracza do gry.
</p>

<p>
W zmiennych <c>USE</c> definiujemy słowa kluczowe zamieniane następnie na opcje
kompilowania. Na przykład dodanie do zmiennej <e>ssl</e> włączy obsługę SSL w
programach, które go wykorzystują. <e>-X</e> usunie wsparcie dla serwera X
(należy zwrócić uwagę na znak minusa z przodu). Ustawienie <e>gnome gtk -kde
-qt</e> zaowocuje wsparciem dla GNOME (oraz gtk), ale nie dla KDE (i związanym z
nim ściśle qt), znakomicie przygotowując grunt pod GNOME.
</p>

<p>
Domyślny zestaw flag <c>USE</c> znajduje się w pliku <path>make.defaults</path>
wybranego profilu. Wszystkie pliki <path>make.defaults</path> znajdują się w
katalogu wskazywanym przez dowiązanie <path>/etc/make.profile</path> oraz w
katalogach nadrzędnych. Aktualna konfiguracja <c>USE</c> jest zawsze sumą
wszystkich flag ustawionych w plikach <path>make.defaults</path>. Wszystko co
umieścimy w pliku <path>/etc/make.conf</path> zostanie dodane do tej zmiennej,
jeśli natomiast chcemy coś z niej usunąć wpisujemy wybraną flagę ze znakiem
minus na początku.
</p>

<p>
Pełny opis <c>USE</c> znajduje się w drugiej części Podręcznika
Gentoo, w rozdziale <uri link="?part=2&amp;chap=2">Flagi USE</uri>.
Kompletną charakterystykę dostępnych flag USE znajdziemy w pliku
<path>/usr/portage/profiles/use.desc</path>.
</p>

<pre caption="Przegląd dostępnych flag USE">
# <i>less /usr/portage/profiles/use.desc</i>
<comment>(Używamy strzałek aby przewijać plik. Aby wyjść naciskamy
'q')</comment> 
</pre>

<p>
Jako przykład przedstawimy flagi <c>USE</c> dla systemu bazującego na KDE ze
wsparciem dla DVD, ALSA i nagrywania CD:
</p>

<pre caption="Edytowanie /etc/make.conf">
# <i>nano -w /etc/make.conf</i>
</pre>

<pre caption="Ustawienia USE">
USE="-gtk -gnome qt kde dvd alsa cdr"
</pre>

</body>
</subsection>
<subsection>
<title>Opcjonalnie: Lokalizacje GLIBC</title>
<body>

<p>
Zwykle w systemie używa się tylko jednej, góra dwóch lokalizacji.
Po skompilowaniu <c>glibc</c> dostępne są wszystkie jakie kiedykolwiek zostały
stworzone.  Możemy aktywować flagę USE <c>userlocales</c> i zdecydować w pliku
<path>/etc/locales.build</path>, których lokalizacji będziemy potrzebować.
Należy robić to tylko wtedy, gdy ma się dokładną wiedzę na temat tego co należy
wybrać! 
</p>

<pre caption="Aktywacja flagi userlocales dla glibc">
# <i>mkdir -p /etc/portage</i>
# <i>echo "sys-libs/glibc userlocales" >> /etc/portage/package.use</i>
</pre>

<p>
Następnie decydujemy, których lokali zamierzamy używać:
</p>

<p>
Poniższy przykład to lokalizacje polskie oraz angielskie (Ameryka)z obsługą
kodowania znaków (jak UTF-8).
</p>

<pre caption="nano -w /etc/locales.build">
en_US/ISO-8859-1
en_US.UTF-8/UTF-8
pl_PL/ISO-8859-2
pl_PL.UTF-8/UTF-8
</pre>

<p>
Kolejny etap instalacji to <uri link="?part=1&amp;chap=7">Konfigurowanie
jądra</uri>.
</p>

</body>
</subsection>
</section>
</sections>
