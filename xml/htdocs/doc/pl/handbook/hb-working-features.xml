<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-working-features.xml,v 1.21 2010/09/19 18:40:24 shadow Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<abstract>
Ten rozdział pomaga odkryć dodatkowe funkcje Portage.
</abstract>

<version>1.33</version>
<date>2010-07-12</date>

<section>
<title>Funkcje Portage</title>
<body>

<p>
Portage posiada szereg dodatkowych funkcji, które potrafią znacznie uprzyjemnić
pracę z Gentoo. Wiele z nich opiera się na zewnętrznych programach, które
zwiększają wydajność, stabilność i bezpieczeństwo pracy.
</p>

<p>
Aby włączyć lub wyłączyć określone dodatkowe funkcje Portage należy odpowiednio
zmienić zmienną <c>FEATURES</c> w pliku <path>/etc/make.conf</path>. Zmienna ta
to podzielona spacjami lista nazw dodatkowych możliwości. W niektórych
przypadkach, aby móc korzystać z pewnych funkcji trzeba również zainstalować
dodatkowe oprogramowanie.
</p>

<p>
Nie wszystkie funkcje, które Portage obsługuje są tutaj wymienione. By poznać
wszystkie funkcje, należy przeczytać dokumentację <path>make.conf</path>:
</p>

<pre caption="Warto zajrzeć na stronę man pliku make.conf">
$ <i>man make.conf</i>
</pre>

<p>
By dowiedzieć się, jakie FEATURES są standardowo włączone, należy uruchomić
<c>emerge --info</c> i poszukać zmiennej FEATURES za pomocą programu grep:
</p>

<pre caption="Sprawdzanie czy FEATURES są już ustawione">
$ <i>emerge --info | grep FEATURES</i>
</pre>

</body>
</section>
<section>
<title>DistCC</title>
<subsection>
<title>Czym jest DistCC?</title>
<body>

<p>
<c>Distcc</c> to program, dzięki któremu możemy rozłożyć obciążenie związane z
kompilacją pomiędzy kilka niekoniecznie identycznych maszyn. Klient
<c>distcc</c> wysyła wszystkie potrzebne informacje do dostępnych serwerów
DistCC (na których jest uruchomiony <c>distccd</c>), które następnie kompilują
części kodu źródłowego dla klienta. Końcowym wynikiem jest krótszy czas
kompilacji.
</p>

<p>
Dokładniejsze informacje na temat <c>distcc</c> (oraz informacje na temat tego,
jak używać distcc w Gentoo) można odnaleźć <uri
link="/doc/pl/distcc.xml">Dokumentacji Distcc Gentoo</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Instalacja DistCC</title>
<body>

<p>
Distcc jest dostarczany z graficznym monitorem, dzięki któremu możliwe jest
obserwowanie postępu zadań, które komputer wysłał do serwerów distcc. Jeśli
używany jest Gnome, należy umieścić "gnome" w ustawieniach flag <c>USE</c>.
Jeśli nie jest zainstalowany Gnome, a mimo to chcielibyśmy mieć możliwość
monitorowania distcc, należy umieścić w flagach <c>USE</c> "gtk".
</p>

<pre caption="Instalacja Distcc">
# <i>emerge distcc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Używanie distcc z Portage</title>
<body>

<p>
Najpierw należy dodać <c>distcc</c> do zmiennej FEATURES w pliku
<path>/etc/make.conf</path>. Następnie należy dostosować zmienną MAKEOPTS do
swoich potrzeb. Zwykle ma ona postać <c>-jX</c>, gdzie <c>X</c> to liczba
procesorów, na których uruchomiony jest <c>distccd</c> (włącznie z komputerem,
na którym teraz pracujemy) powiększona o jeden. Czasem inne wartości od tych
zalecanych przynoszą lepsze rezultaty.
</p>

<p>
Teraz trzeba uruchomić <c>distcc-config</c> i wprowadzić listę dostępnych
serwerów DistCC. W naszym prostym przykładzie zakładamy, że dostępne serwery
DistCC to: <c>192.168.1.102</c> (aktualny host), <c>192.168.1.103</c> i
<c>192.168.1.104</c> (dwa "zdalne" hosty):
</p>

<pre caption="Użycie trzech serwerów DistCC">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>

<p>
Trzeba też pamiętać o uruchomieniu demona <c>distccd</c> na zdalnych hostach:
</p>

<pre caption="Uruchamianie demona distcc">
# <i>rc-update add distccd default</i>
# <i>/etc/init.d/distccd start</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>ccache</title>
<subsection>
<title>Czym jest ccache?</title>
<body>

<p>
<c>ccache</c> jest szybkim cache kompilatora. Dzięki niemu pliki pośrednie
powstające w trakcie kompilacji będą cache'owane i podczas rekompilacji
programu czas budowania plików wynikowych zostanie znacznie skrócony. Przy
pierwszy uruchomieniu ccache kompilacja przebiega znacznie dłużej niż w
normalnych warunkach. Kolejne rekompilacje będą już szybsze. ccache przydaje
się jedynie w przypadku gdy rekompilujemy te same aplikacje kilka razy, z tego
powodu aplikacja ta skierowana jest do programistów.
</p>

<p>
Szczegóły na temat <c>ccache</c> można odnaleźć na <uri
link="http://ccache.samba.org">stronie domowej ccache</uri>.
</p>

<warn>
<c>ccache</c> w wielu przypadkach jest powodem błędów kompilacji. Jets to
spowodowane przypadkami, w których ccache zachowa stare obiekty bądź
uszkodzone pliki, co może prowadzić do braku możliwości zainstalowania
pakietu. W przypadku gdy staniemy się ofiarą takiego błędu (jeśli otrzymamy
błąd "File not recognized: File truncated") należy spróbować ponownie
skompilować aplikację wyłączając obsługę ccache (<c>FEATURES="-ccache"</c> w
pliku <path>/etc/make.conf</path>) <e>przed</e> zgłoszeniem błędu. Zalecanym
jest, w przypadku osób nie zajmujących się rozwojem oprogramowania, <e>o nie
używanie ccache</e>.
</warn>

</body>
</subsection>
<subsection>
<title>Instalacja ccache</title>
<body>

<p>
Instalowanie <c>ccache</c> w Gentoo jest bardzo proste - jedyne, co należy
zrobić, to zainstalować odpowiedni pakiet:
</p>

<pre caption="Instalacja ccache">
# <i>emerge ccache</i>
</pre>

</body>
</subsection>
<subsection>
<title>Portage i ccache</title>
<body>

<p>
Otwieramy plik <path>/etc/make.conf</path> i zmieniamy <c>FEATURES</c> tak, aby
zawierało słowo kluczowe <c>ccache</c> oraz dodajemy zmienną CCACHE_SIZE o
wartości "2G".
</p>

<pre caption="Zmiana CCACHE_SIZE w /etc/make.conf">
CCACHE_SIZE="2G"
</pre>

<p>
Aby sprawdzić czy ccache działa poprawnie, należy sprawdzić statystyki.
Ponieważ Portage używa innych katalogów domowych ccache, należy ustawić zmienną
<c>CCACHE_DIR</c> na początku polecenia:
</p>

<pre caption="Przeglądanie statystyk ccache">
# <i>CCACHE_DIR="/var/tmp/ccache" ccache -s</i>
</pre>

<p>
Katalog <path>/var/tmp/ccache</path> jest domyślną lokalizacją ccache w
Portage. Jeżeli chcemy zmodyfikować tę pozycję należy ustawić zmienną
<c>CCACHE_DIR</c> w pliku <path>/etc/make.conf</path>.
</p>

<p>
Jednak gdy będziemy uruchamiać polecenie <c>ccache</c>, będzie ono odwoływało
się do domyślnej lokalizacji <path>${HOME}/.ccache</path>, dlatego też musimy
za każdym razem ustawiać zmienną <c>CCACHE_DIR</c>, gdy będziemy chcieli
zobaczyć statystyki.
</p>

</body>
</subsection>
<subsection>
<title>Używanie ccache dla kompilacji programów w C spoza Portage</title>
<body>

<p>
Jeśli ccache ma być używane do kompilacji programów w C, ale nie znajdujących
się w Portage, należy dodać katalog <path>/usr/lib/ccache/bin</path> na
początku zmiennej PATH (przed wpisem <path>/usr/bin</path>). Robi się to przez
edytowanie pliku <path>.bash_profile</path> w naszym katalogu domowym. Użycie
<path>.bash_profile</path> jest jednym ze sposobów określenia zmiennej PATH.
</p>

<pre caption="Edytowanie .bash_profile">
PATH="<i>/usr/lib/ccache/bin</i>:/opt/bin:${PATH}"
</pre>

</body>
</subsection>
</section>
<section>
<title>Pakiety binarne</title>
<subsection>
<title>Tworzenie pakietów binarnych</title>
<body>

<p>
Portage umożliwia pracę z prekompilowanymi pakietami. Nie dostarczamy wprawdzie
ich zestawów użytkownikom (poza GRP, które wychodzą co kilka miesięcy wraz z
wydaniami Gentoo), ale mimo wszystko pozostawiamy możliwość korzystania z nich
w naszym oprogramowaniu.
</p>

<p>
Jeśli dany pakiet już jest zainstalowany, można użyć polecenia <c>quickpkg</c>,
które utworzy archiwum tar zawierające zainstalowane pliki (bardzo przydatne
przy robieniu kopii zapasowych). Jeśli nie jest zainstalowany, należy
skorzystać z polecenia <c>emerge</c> z opcją <c>--buildpkg</c> lub
<c>--buildpkgonly</c>.
</p>

<p>
Aby Portage domyślnie tworzyło binarne pakiety, wystarczy umieścić słowo
kluczowe <c>buildpkg</c> w zmiennej <c>FEATURES</c>.
</p>

<p>
Szersze możliwości budowania pakietów daje program <c>catalyst</c>. Wszystkie
informacje o nim znajdują się w <uri
link="/proj/pl/releng/catalyst/faq.xml">Catalyst FAQ</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Instalacja prekompilowanych pakietów</title>
<body>

<p>
Fakt, że Gentoo nie posiada repozytorium z prekompilowanymi pakietami nie
oznacza, że użytkownicy nie mogą stworzyć takiego samodzielnie. Aby z niego
korzystać, należy ustawić zmienną PORTAGE_BINHOST tak, aby na nie wskazywała.
Na przykład, jeżeli prekompilowane pakiety znajdują się pod adresem
ftp://buildhost/gentoo:
</p>

<pre caption="Konfiguracja zmiennej PORTAGE_BINHOST w pliku /etc/make.conf">
PORTAGE_BINHOST="ftp://buildhost/gentoo"
</pre>

<p>
Za każdym razem, gdy chcemy zainstalować prekompilowany pakiet, musimy
skorzystać z parametru <c>--getbinpkg</c> razem z opcją <c>--usepkg</c>.
Pierwsza opcja nakazuje pobrać prekompilowany pakiet ze zdalnego serwera, druga
nakazuje emerge skorzystanie ze ściągniętego pakietu podczas instalacji.
</p>

<p>
Na przykład, aby zainstalować <c>gnumeric</c> z prekompilowanego pakietu:
</p>

<pre caption="Instalacja prekompilowanego gnumeric">
# <i>emerge --usepkg --getbinpkg gnumeric</i>
</pre>

<p>
Więcej informacji o prekompilowanych pakietach znajduje się na stronie man
programu emerge.
</p>

<pre caption="Strona man programu emerge">
$ <i>man emerge</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Pobieranie plików</title>
<subsection>
<title>Pobieranie równoległe</title>
<body>

<p>
Kiedy instalujemy kilka pakietów, Portage może pobierać pliki źródłowe dla
pozostałych pakietów, które są na liście nawet podczas kompilacji innego
programu, przez co skraca się czas całej operacji. Aby uaktywnić tę funkcję
należy dodać wartość "parallel-fetch" do zmiennej FEATURES.
</p>

</body>
</subsection>
<subsection>
<title>Userfetch</title>
<body>

<p>
Kiedy uruchomimy Portage jako root, wpis FEATURES="userfetch" pozwoli na
odrzucenie przez Portage uprawnień administratora podczas ściągania plików
źródłowych dla pakietów. Dzięki temu uzyskamy małą poprawę bezpieczeństwa.
</p>

</body>
</subsection>
</section>

</sections>
