<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Orig revision: 1.29 -->
<!-- Translator: Spock <spock@gentoo.org> -->
<!-- Title: Kontrola zachowania Portage -->
<!-- Status: Release -->
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-working-features.xml,v 1.10 2005/07/21 07:07:13 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Id: hb-working-features.xml,v 1.10 2005/07/21 07:07:13 neysx Exp $ -->

<sections>

<version>1.26</version>
<date>2005-07-02</date>

<section>
<title>Funkcje Portage</title>
<body>

<p>
Portage posiada szereg dodatkowych funkcji, które potrafią znacznie uprzyjemnić
pracę z Gentoo. Wiele z nich opiera się na zewnętrznych programach, które
zwiększają wydajność, stabilność i bezpieczeństwo pracy.
</p>

<p>
Aby włączyć lub wyłączyć określone dodatkowe funkcje Portage należy odpowiednio
zmienić zmienną <c>FEATURES</c> w pliku <path>/etc/make.conf</path>. Zmienna ta
to de facto podzielona spacjami lista nazw dodatkowych możliwości. W niektórych
przypadkach, aby móc korzystać z pewnych funkcji trzeba również zainstalować
dodatkowe oprogramowanie.
</p>

<p>
Not all features that Portage supports are listed here. For a full overview,
please consult the <path>make.conf</path> man page:
</p>

<pre caption="Consulting the make.conf man page">
$ <i>man make.conf</i>
</pre>

<p>
To find out what FEATURES are default set, run <c>emerge --info</c> and search
for the FEATURES variable or grep it out:
</p>

<pre caption="Finding out the FEATURES that are already set">
$ <i>emerge --info | grep FEATURES</i>
</pre>

</body>
</section>
<section>
<title>DistCC.</title>
<subsection>
<title>Czym jest DistCC?</title>
<body>

<p>
<c>distcc</c> to program, dzięki któremu możemy rozłożyć obciążenie związane z kompilacją
pomiędzy kilka niekoniecznie identycznych maszyn. Klient <c>distcc</c> wysyła wszystkie
potrzebne informacje do dostępnych serwerów DistCC (na których jest uruchomiony <c>distccd</c>),
które następnie kompilują części kodu źródłowego dla klienta. Końcowym wynikiem
jest krótszy czas kompilacji.
</p>

<p>
Dokładniejsze informacje na temat <c>distcc</c> (oraz informacje na temat tego,
jak używać distcc w Gentoo) znajdziesz w naszej
<uri link="/doc/pl/distcc.xml">Dokumentacji Distcc Gentoo</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Instalacja DistCC.</title>
<body>

<p>
Distcc jest dostarczany z graficznym monitorem, dzięki któremu możesz obserwować postęp
zadań, które Twój komputer wysłał do serwerów distcc. Jeśli używasz Gnome, umieść 'gnome'
w swoich ustawieniach flag <c>USE</c>. Jeśli nie masz zainstalowanego Gnome, a mimo to
chciałbyś mieć możliwość monitorowania distcc, umieść w swoich flagach <c>USE</c> 'gtk'.
</p>

<p>
Instalacja distcc, tak jak instalacja całego oprogramowania dostępnego w Portage,
jest niezwykle łatwa:
</p>

<note>
Ponieważ wiesz już jak instalować binarne pakiety, od tego momentu będziemy pomijać
opcję <c>--usepkg</c>.
</note>

<pre caption="Instalacja Distcc">
# <i>emerge distcc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Używanie distcc z Portage.</title>
<body>

<p>
Jeśli instalacja była prosta, cała reszta też powinna taka być :) Włączmy
więc szybko wsparcie Portage dla <c>distcc</c>.
</p>

<p>
Najpierw otwórz plik <path>/etc/make.conf</path> i wyedytuj zmienną <c>FEATURES</c> tak, aby
zawierała słowo kluczowe <c>distcc</c>. Następnie zmień <c>MAKEOPTS</c> tak, aby wyglądała
następująco: <c>-jX</c>, gdzie <c>X</c> to liczba procesorów, na których uruchomiony jest <c>distccd</c>
(włącznie z komputerem, na którym teraz pracujesz) powiększona o jeden:
</p>

<pre caption="Przykładowe ustawienia MAKEOPTS w /etc/make.conf">
<comment># Załóżmy, że mamy 2 jednoprocesorowe komputery, nie licząc aktualnego hosta:</comment>
MAKEOPTS="-j4"
</pre>

<p>
Teraz, nie zamykając pliku <path>/etc/make.conf</path>, odkomentuj linijkę zawierającą
<c>PORTAGE_TMPDIR</c> i dodaj na końcu pliku następującą linijkę:
</p>

<pre caption="Dodaj dodatkową zmienną distcc w /etc/make.conf">
<comment># Nie zapomnij o odkomentowaniu zmiennej PORTAGE_TMPDIR</comment>
DISTCC_DIR=${PORTAGE_TMPDIR}/portage/.distcc
</pre>

<p>
Teraz uruchom <c>distcc-config</c> i wprowadź listę dostępnych serwerów DistCC.
W naszym prostym przykładzie zakładamy, że dostępne serwery DistCC to:
<c>192.168.1.102</c> (aktualny host), <c>192.168.1.103</c> i
<c>192.168.1.104</c> (dwa "zdalne" hosty):
</p>

<pre caption="Użycie trzech serwerów DistCC">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>

<p>
Musisz też pamiętać o uruchomieniu demona <c>distccd</c> na zdalnych hostach:
</p>

<pre caption="Uruchamianie demona distcc">
# <i>/etc/init.d/distccd start</i>
</pre>

<p>
Gratulacje, od tej pory Twój system będzie używał kompilacji rozproszonej!
Jeśli szukasz dokładniejszych informacji na temat DistCC i Gentoo, zajrzyj
do naszej <uri link="/doc/pl/distcc.xml">Dokumentacji Gentoo DistCC</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>ccache.</title>
<subsection>
<title>Czym jest ccache?</title>
<body>

<p>
<c>ccache</c> jest szybkim cache kompilatora. Dzięki niemu pliki pośrednie
powstające w trakcie kompilacji będą cache'owane i podczas rekompilacji
programu czas budowania plików wynikowych zostanie znacznie skrócony. W typowych
sytuacjach czas kompilacji może być od 5 do 10 razy krótszy.
</p>

<p>
Jeśli jesteś zainteresowany szczegółami <c>ccache</c>, odwiedź
<uri link="http://ccache.samba.org">stronę domową ccache</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Instalacja ccache.</title>
<body>

<p>
Instalowanie <c>ccache</c> w Gentoo jest bardzo proste - jedyne, co musisz zrobić,
to zemerge'ować odpowiedni pakiet:
</p>

<pre caption="Instalacja ccache">
# <i>emerge ccache</i>
</pre>

</body>
</subsection>
<subsection>
<title>Portage i ccache.</title>
<body>

<p>
Na początek otwórz plik <path>/etc/make.conf</path> i zmień <c>FEATURES</c> tak,
aby zawierało słowo kluczowe <c>ccache</c>:
</p>

<pre caption="Zmiana FEATURES w /etc/make.conf">
FEATURES="ccache"
</pre>

<p>
Następnie, wyedytuj (lub stwórz) zmienną <c>CCACHE_SIZE</c> (też w pliku
<path>/etc/make.conf</path>) tak, aby zawierała ilość miejsca dysku, jaką zamierzasz
przeznaczyć dla <c>ccache</c>:
</p>

<pre caption="Zmiana CCACHE_SIZE w /etc/make.conf">
CCACHE_SIZE="2G"
</pre>

<p>
Od tej chwili Portage będzie używał <c>ccache</c> aby przyspieszyć kompilację
- tam, gdzie to możliwe. Jeśli masz wątpliwości co do tego czy <c>ccache</c>
działa możesz uruchomić <c>ccache -s</c> aby przejrzeć statystyki:
</p>

<pre caption="Przeglądanie statystyki ccache">
# <i>ccache -s</i>
</pre>

</body>
</subsection>
<subsection>
<title>Używanie ccache dla kompilacji programów w C spoza Portage</title>
<body>

<p>
Jeśli ccache ma być używane do kompilacji programów w C, ale nie znajdujących
się w Portage, należy dodać katalog <path>/usr/lib/ccache/bin</path> na początku
zmiennej PATH (przed wpisem <path>/usr/bin</path>). Robi się to edytując plik
<path>/etc/profile</path>:
</p>

<pre caption="Edytowanie /etc/profile">
PATH="<i>/usr/lib/ccache/bin</i>:${PATH}"
</pre>

</body>
</subsection>
</section>
<section>
<title>Pakiety binarne.</title>
<subsection>
<title>Tworzenie pakietów binarnych.</title>
<body>

<p>
Omawialiśmy już wcześniej gotowe pakiety binarne, ale jak można zbudować
swoje własne pakiety tego typu?
</p>

<p>
Jeśli dany pakiet już jest zainstalowany, możesz użyć polecenia <c>quickpkg</c>,
które utworzy ztarowany plik zawierający zainstalowane pliki (bardzo przydatne
przy robieniu kopii zapasowych).
</p>

<pre caption="Używanie quickpkg">
# <i>quickpkg gnumeric</i>
</pre>

<p>
Jeśli pakiet nie jest jeszcze zainstalowany, możesz zainstalować go używając
<c>emerge</c> i jednocześnie utworzyć pakiet binarny. <c>emerge</c> ma do tego
celu opcję <c>--buildpkg</c> (lub krócej: <c>-b</c>):
</p>

<pre caption="Instalowanie gnumeric i budowanie binarnego pakietu">
# <i>emerge --buildpkg gnumeric</i>
</pre>

<p>
Jeśli chcesz, aby Portage domyślnie tworzył binarne pakiety, powinieneś umieścić
słowo kluczowe <c>buildpkg</c> w zmiennej <c>FEATURES</c> zadeklarowanej w
<path>/etc/make.conf</path>.
</p>

<pre caption="Automatyczne tworzenie binarnych pakietów">
FEATURES="buildpkg"
</pre>

<p>
Jeśli nie chcesz instalować samego programu, a jedynie zbudować binarną paczkę,
możesz użyć opcji <c>--buildpkgonly</c> (w skrócie: <c>-B</c>):
</p>

<pre caption="Budowanie binarnego pakietu dla gnumeric">
# <i>emerge --buildpkgonly gnumeric</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Bezpieczeństwo w Portage.</title>
<subsection>
<title>Sandbox.</title>
<body>

<p>
W trakcie budowania i instalacji pakietów Portage używa <e>sandboxa</e> w celu
ochrony Twojego systemu. Polega to na tym, że dopóki pakiet nie jest zainstalowany
w Twoim systemie, nie może naruszyć żadnego pliku poza sandboxem. Dzięki temu
Portage wie, które pliki są tworzone i modyfikowane przez dany pakiet.
</p>

<p>
Kiedy kompilacja pakietu zostaje zakończona, Portage "preinstaluje" pakiet w
sandboxie i rejestruje, gdzie są położone poszczególne pliki tego pakietu. Następnie
pliki te są przenoszone z sandboxa do właściwego systemu.
</p>

</body>
</subsection>
<subsection>
<title>Uprawnienia użytkowników.</title>
<body>

<p>
Portage potrafi również budować pakiety pracując jako użytkownik "portage" (a nie root)
z grupy "portage". Budowanie pakietów jako użytkownik "portage" zwiększa bezpieczeństwo
podczas kompilacji i instalacji programów. Pracę w trybie zwykłego użytkownika można
prowadzić zarówno z jak i bez sandboxa. Oczywiście najlepiej użyć jednego i drugiego :)
</p>

</body>
</subsection>
<subsection>
<title>Włączanie sandbox i/lub userpriv.</title>
<body>

<p>
<c>sandbox</c> jest domyślnym ustawieniem używanym przez Portage. Jeśli chcesz
aktywować <c>userpriv</c> musisz go dodać do zmiennej <c>FEATURES</c>. Włączenie
<c>userpriv</c> wyłączy <c>sandbox</c>. Aby używać jednego i drugiego, musisz w zmiennej
<c>FEATURES</c> umieścić również słowo kluczowe <c>usersandbox</c>:
</p>

<pre caption="Włączanie userpriv i usersandbox">
FEATURES="userpriv usersandbox"
</pre>

<warn>
Pamiętaj, aby <e>nie</e> usuwać słowa <c>sandbox</c> ze zmiennej <c>FEATURES</c>!
</warn>

</body>
</subsection>
<subsection>
<title>Dokładne sprawdzanie.</title>
<body>

<p>
Portage może automatycznie reagować na niebezpieczne sytuacje (takie jak brakujące
lub nieprawidłowe pliki Manifest). Aby włączyć dokładne sprawdzanie dodaj
słowo kluczowe <c>strict</c> do zmiennej <c>FEATURES</c>:
</p>

<pre caption="Włączanie dokładnego sprawdzania">
FEATURES="strict"
</pre>

</body>
</subsection>
<subsection>
<title>Inteligentne podejście do praw do plików.</title>
<body>

<p>
Portage może zostać skonfigurowane, tak aby automatycznie radziło sobie z
potencjalnie niebezpiecznymi uprawnieniami dostępu do plików. Portage
czyści wtedy bity odczytu dla grupy i innych użytkowników - w przypadku plików
setuid oraz bit odczytu dla innych użytkowników - w przypadku plików setgid.
Zmiana uprawnień dokonywana jest w fazie "pre-install". Aby włączyć
"smart file permissions", dodaj słowo kluczowe <c>sfperms</c> do zmiennej
<c>FEATURES</c>:
</p>

<pre caption="Włączanie smart file system permissions">
FEATURES="sfperms"
</pre>

</body>
</subsection>
</section>
<section>
<title>Inne.</title>
<subsection>
<title>Pomoc Portage.</title>
<body>

<p>
Istnieje jeszcze kilka innych słów kluczowych, które możesz umieścić w zmiennej
<c>FEATURES</c>. Większość z nich jest przydatna developerom i mniej interesująca
dla przeciętnego użytkownika. Jeśli chciałbyś dowiedzieć się więcej na temat tych
dodatkowych słów kluczowych (lub ogólnie na temat Portage) przeczytaj
podręcznik systemowy <path>make.conf</path>.
</p>

<pre caption="Więcej informacji na temat Portage">
# <i>man make.conf</i>
</pre>

</body>
</subsection>
</section>
</sections>
