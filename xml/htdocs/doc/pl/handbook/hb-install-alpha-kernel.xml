<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-install-alpha-kernel.xml,v 1.27 2007/08/01 14:26:47 shadoww Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>8.1</version>
<date>2007-05-15</date>

<section>
<title>Strefa czasowa</title>
<body>

<p>
Aby system wiedział gdzie się znajduje należy najpierw wybrać strefę czasową.
Odszukujemy ją w <path>/usr/share/zoneinfo</path>, a następnie kopiujemy ją do
pliku <path>/etc/localtime</path>. Należy unikać stref czasowych o nazwie
<path>/usr/share/zoneinfo/Etc/GMT*</path>, ponieważ ich nazwy mogą być mylące,
na przykład <path>GMT-8</path> jest w rzeczywistości GMT+8.
</p>

<pre caption="Konfiguracja strefy czasowej">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Przykład dla Warszawy)</comment>
# <i>cp /usr/share/zoneinfo/Europe/Warsaw /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalacja źródeł</title>
<subsection>
<title>Wybór jądra</title>
<body>

<p>
Sercem każdej dystrybucji jest jądro Linux. Stanowi ono interfejs pomiędzy
programami i sprzętem. Gentoo dostarcza użytkownikom różne źródła kerneli.
Pełna lista wraz z opisami znajduje się na <uri
link="/doc/pl/gentoo-kernel.xml">liście jąder Gentoo</uri>.
</p>

<p>
Dla systemów Alpha udostępniamy źródła <c>gentoo-sources</c> (domyślne jądro
serii 2.6).
</p>

<pre caption="Instalacja źródeł kernela">
# <i>emerge gentoo-sources</i>
</pre>

<p>
W katalogu <path>/usr/src</path> powinniśmy mieć mniej więcej taki symlink, o
nazwie <path>linux</path>, wskazujący na źródła Twojego aktualnego kernela. W
tym wypadku wskazuje na źródła <c>gentoo-sources-<keyval
id="kernel-version"/></c>. W komputerze użytkownika może być to inna wersja,
dlatego należy mieć to na uwadze.
</p>

<pre caption="Podgląd symlinka do źródeł kernela">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
Pora na konfigurację i kompilację źródeł jądra. Można użyć do tego celu
programu <c>genkernel</c>, który zbuduje uniwersalne jądro, takie jak np. to
używane przez płytę instalacyjną. Można też przeprowadzić cały proces ręcznie
i lepiej dostosować kernel do własnych potrzeb. Zaczniemy od omówienia
tej drugiej, znacznie lepszej metody.
</p>

<p>
Jeśli zdecydowaliśmy się na ręczną konfigurację kernela przechodzimy do
paragrafu <uri link="#manual">Domyślnie: Ręczna konfiguracja</uri>. Jeżeli
natomiast zdecydowaliśmy użyć programu <c>genkernel</c> należy przeczytać <uri
link="#genkernel">Alternatywnie: Genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Domyślnie: Ręczna konfiguracja</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Ręczna konfiguracja kernela postrzegana jest często jako najtrudniejsza
czynność jaką użytkownicy Linuksa muszą wykonywać. Nie jest to prawdą, po
skompilowaniu kilku kerneli zapomnimy, że kiedykolwiek uważaliśmy to za trudne
zadanie.
</p>

<p>
Nie sposób jednak zaprzeczyć, że należy dobrze znać swój komputer, aby móc
prawidłowo skonfigurować jądro. Większość informacji można zdobyć poprzez
zainstalowanie pakietu pciutils (<c>emerge pciutils</c>) zawierającego program
<c>lspci</c>. Dzięki temu będzie możliwe używanie <c>lspci</c> wewnątrz
chrootowanego środowiska. Podczas pracy z tym programem można bezpiecznie
zignorować wszelkie ostrzeżenia związane z <e>pcilib</e> (jak np.  "pcilib:
cannot open /sys/bus/pci/devices). Ponadto można również uruchomić <c>lspci</c>
poza środowiskiem chroot. Powinno dać to taki sam efekt. Dodatkowe informacje o
sterownikach, które należy włączyć do jądra można uzyskać dzięki poleceniu
<c>lsmod</c>, które pokaże listę modułów jakie załadował system płyty
instalacyjnej.
</p>

<p>
Kiedy już zbierzemy wszystkie informacje przechodzimy do katalogu ze
źródłami i wpisujemy polecenie <c>make menuconfig</c>. Uruchomi się menu
konfiguracyjne oparte na ncurses.
</p>

<pre caption="Uruchamianie menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Zobaczymy okienko z listą sekcji, na które podzielono cały proces konfiguracji.
Zaczniemy od omówienia opcji, które należy aktywować, aby zapewnić prawidłowe
działanie Gentoo.
</p>

</body>
</subsection>
<subsection>
<title>Zaznaczanie wymaganych ustawień</title>
<body>

<p>
Po pierwsze włączamy możliwość korzystania z rozwojowych i eksperymentalnych
fragmentów kodu jądra. Jeśli tego nie zrobimy, nawet nie ujrzymy kilku bardzo
ważnych opcji.
</p>

<pre caption="Wybieranie opcji experimental code/drivers i główna konfiguracja">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
General setup ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Następnie przechodzimy do <c>File Systems</c> i wybieramy wsparcie dla systemów
plików, których zamierzamy używać. Jeśli tego zaniedbamy, Gentoo nie będzie w
stanie zamontować partycji, a czasem nawet się nie uruchomi. Pamiętać należy
również, aby włączać te sterowniki na stałe do jądra, nie jako moduły. Przy
okazji zaznaczamy też <c>Virtual memory</c> i <c>/proc file system</c>.
</p>

<pre caption="Wybór potrzebnych systemów plików">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Wybieramy jedną lub kilka z tych opcji zależnie od używanych systemów
plików.)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Jeśli używamy PPPoE do łączenia się z Internetem, lub gdy używamy modemu
dial-up będzie trzeba włączyć następujące opcje:
</p>

<pre caption="Sterowniki niezbędne dla użytkowników PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Obie opcje dotyczące kompresji nie są wprawdzie wymagane, ale również nie
zaszkodzą naszemu systemowi, podobnie zresztą jak opcja <c>PPP over
Ethernet</c>, która jest przydatna tylko gdy skonfigurujemy <c>ppp</c> do
pracy w trybie jądra PPPoE.
</p>

<p>
Nie należy zapomnieć wkompilować sterownika dla karty sieciowej.
</p>

<p>
Wypada też zaznaczyć wszystkie opcje dotyczące Alpha.
</p>

<pre caption="Zalecane opcje dla Alpha">
General setup ---&gt;
  &lt;*&gt; SRM environment through procfs
  &lt;*&gt; Configure uac policy via sysctl

Plug and Play configuration ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;M&gt;   ISA Plug and Play support

SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; SYM53C8XX Version 2 SCSI support (NEW)
    &lt;*&gt; Qlogic ISP SCSI support

Network device support ---&gt;
  Ethernet (10 or 100 Mbit) ---&gt;
    &lt;M&gt; DECchip Tulip (dc21x4x) PCI support
    &lt;M&gt; Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA
    &lt;M&gt; EtherExpressPro/100 support (eepro100)
    &lt;M&gt; EtherExpressPro/100 support (e100)
  Ethernet (1000 Mbit) ---&gt;
    &lt;M&gt; Alteon AceNIC
      [*] Omit support for old Tigon I
    &lt;M&gt; Broadcom Tigon3
  [*] FDDI driver support
  &lt;M&gt; Digital DEFEA and DEFPA
  &lt;*&gt; PPP support
    &lt;*&gt; PPP Deflate compression

Character devices ---&gt;
  [*] Support for console on serial port
  [*] Direct Rendering Manager

File systems ---&gt;
  &lt;*&gt; Kernel automounter version 4 support
  Network File Systems ---&gt;
    &lt;*&gt; NFS
      [*] NFSv3 client
      &lt;*&gt; NFS server
      [*] NFSv3 server
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*] Alpha OSF partition support
  Native Language Support
    &lt;*&gt; NLS ISO 8859-1

Sound ---&gt;
  &lt;M&gt; Sound card support
    &lt;M&gt; OSS sound modules
      [*] Verbose initialisation
      [*] Persistent DMA buffers
      &lt;M&gt; 100% Sound Blaster compatibles
</pre>

<p>
Gdy skończymy konfigurować kernel przechodzimy do paragrafu
<uri link="#compiling">Kompilacja i instalacja</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilacja i instalacja</title>
<body>

<p>
Po skonfigurowaniu kernela przyszła pora na jego skompilowanie i
instalację. Opuszczamy program konfiguracyjny i rozpoczynamy proces kompilacji:
</p>

<pre caption="Kompilowanie kernela">
# <i>make &amp;&amp; make modules_install</i>
# <i>make boot</i>
</pre>

<p>
Kiedy jądro skończy się kompilować kopiujemy jego obraz do katalogu
<path>/boot</path>. W nowszych kernelach obraz nazywa się
<path>vmlinux</path> zamiast <path>vmlinux.gz</path>. Należy o tym pamiętać w
czasie gdy będziemy kopiować kernel.
</p>

<pre caption="Instalowanie kernela">
# <i>cp arch/alpha/boot/vmlinux.gz /boot/</i>
</pre>

<p>
Następnie przechodzimy do paragrafu <uri link="#kernel_modules">Instalacja
osobnych modułów jądra</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternatywnie: Użycie genkernel</title>
<body>

<p>
Paragraf jest przeznaczony dla użytkowników, którzy zdecydowali się użyć
programu <c>genkernel</c> do skonfigurowania jądra.
</p>

<p>
Po zainstalowaniu źródeł wypada je skonfigurować. Zrobimy to automatycznie przy
pomocy <c>genkernel</c>. Program <c>genkernel</c> robi to dokładnie w ten sam
sposób w jaki konfigurowany jest kernel płyty instalacyjnej. Oznacza to, że
kiedy użyjemy <c>genkernel</c> do budowy jądra system będzie musiał wykrywać
dostępny sprzęt przy każdym uruchomieniu komputera, tak jak na płycie
instalacyjnej. Ponieważ genkernel nie wymaga od użytkownika żadnych ręcznych
poprawek w konfiguracji, jest doskonałym rozwiązaniem dla tych wszystkich,
którzy nie są najmocniejsi w samodzielnym kompilowaniu jądra.
</p>

<p>
Zanim jednak zdradzimy jak używa się tego cudownego programu musimy wytłumaczyć
jak go zainstalować:
</p>

<pre caption="Emergowanie genkernela">
# <i>emerge genkernel</i>
</pre>

<p>
Źródła skompilujemy przy użyciu polecenia <c>genkernel all</c>. Kompilacja
zajmie całe wieki, ponieważ <c>genkernel</c> tworzy uniwersalne jądro,
zawierające wsparcie dla niemal całego dostępnego sprzętu.
</p>

<p>
Jeśli na partycji boot założyliśmy system plików inny niż ext2 i ext3 będzie
trzeba dodatkowo wprowadzić kilka ręcznych poprawek do konfiguracji genkernela.
Dokonuje się tego wydając najpierw polecenie <c>genkernel --menuconfig all</c>,
a następnie dopisując wsparcie dla sterowników <e>w</e> kernelu (na stałe, nie
jako moduły).
</p>

<pre caption="Uruchamianie genkernela">
# <i>genkernel all</i>
</pre>

<p>
W toku tego procesu powstanie właściwy plik jądra, zwany dalej obrazem,
ogromna ilość modułów oraz plik initrd. Nazwy plików kernela i initrd będą
potrzebne przy konfiguracji bootloadera do prawidłowego wypełnienia jego pliku
konfiguracyjnego, więc warto je sobie zapisać. Przy następnym uruchomieniu
komputera zostanie najpierw wykonany plik initrd, który wykryje cały dostępny
sprzęt i wczyta odpowiednie moduły, a następnie uruchomi się właściwy system.
</p>

<pre caption="Sprawdzanie nazwy utworzonych obrazów kernela i initrd">
# <i>ls /boot/kernel* /boot/initramfs-*</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Instalacja dodatkowych modułów jądra</title>
<subsection>
<title>Konfigurowanie modułów</title>
<body>

<p>
Lista modułów, które chcemy aby były automatycznie ładowane przy starcie systemu
powinna znajdować się w pliku <path>/etc/modules.autoload.d/kernel-2.6</path>.
Czasem jeśli chcemy, możemy dodać kilka opcji dla modułów.
</p>

<p>
Żeby przejrzeć listę wszystkich dostępnych użyjemy komendy:
</p>

<pre caption="Znajdowanie dostępnych modułów">
# <i>modprobe -l</i>
</pre>

<p>
Na przykład aby automatycznie ładować do pamięci moduł <c>3c59x.o</c> edytujemy
plik <path>kernel-2.6</path> i wprowadzamy do niego nazwę tego modułu.
</p>

<pre caption="Edycja /etc/modules.autoload.d/kernel-2.6">
<comment>(przykład dla kerneli 2.6)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Następnie przechodzimy do rozdziału <uri link="?part=1&amp;chap=8">Konfiguracja
systemu</uri>.
</p>

</body>
</subsection>
</section>
</sections>
