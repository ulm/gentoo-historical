<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/draft/Attic/hb-install-arm-kernel.xml,v 1.2 2008/03/14 12:07:41 rane Exp $ -->

<sections>

<version>9.0</version>
<date>2008-02-29</date>

<section>
<title>Strefa czasowa</title>
<body>

<p>
Aby system wiedział gdzie się znajduje, należy najpierw wybrać strefę czasową.
Odszukujemy ją w <path>/usr/share/zoneinfo</path>, a następnie kopiujemy ją do
pliku <path>/etc/localtime</path>. Należy unikać stref czasowych o nazwie
<path>/usr/share/zoneinfo/Etc/GMT*</path>, ponieważ ich nazwy mogą być mylące,
na przykład <path>GMT-8</path> jest w rzeczywistości GMT+8.
</p>

<pre caption="Konfiguracja strefy czasowej">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Przykład dla Warszawy)</comment>
# <i>cp /usr/share/zoneinfo/Europe/Warsaw /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalowanie źródeł</title>
<subsection>
<title>Wybór jądra</title>
<body>

<p>
Jądro Linux jest sercem każdej dystrybucji i stanowi interfejs pomiędzy
programami użytkownika, a sprzętem. Gentoo pozwala użytkownikom na wybranie
spośród kilku różnych jego źródeł. Pełna ich lista wraz z opisami znajduje się w
dokumencie zatytułowanym <uri link="/doc/pl/gentoo-kernel.xml">Omówienie źródeł
jądra dostępnych w Gentoo</uri>.
</p>

<p>
Na architekturze ARM korzysta się z <c>gentoo-sources</c>. Są to źródła
zawierające dodatkowe patche i funkcje.
</p>

<p>
Wybrane źródła instaluje się przy pomocy polecenia <c>emerge</c>.
</p>

<pre caption="Instalowanie źródeł jądra">
# <i>emerge gentoo-sources</i>
</pre>

<p>
W katalogu <path>/usr/src</path>, pod nazwą <c>linux</c>, powinno znajdować się
mniej więcej takie dowiązanie symboliczne wskazujące na aktualne źródła. W tym
przykładzie wskazuje na źródła <c>gentoo-sources-<keyval
id="kernel-version"/></c>.
</p>

<pre caption="Podgląd dowiązania symbolicznego do źródeł jądra">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root   root    12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

</body>
</subsection>
</section>
<section id="manual">
<title>Domyślnie: Ręczna konfiguracja</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Ręczna konfiguracja jądra to zwykle najtrudniejsze zadanie przed jakim musi
stanąć każdy początkujący użytkownik Linuksa. Zwykle po skompilowaniu kilku
zapomina się, że kiedykolwiek uważało się to za trudną czynność.
</p>

<p>
Nie sposób jednak zaprzeczyć, że należy dobrze znać swój komputer, aby móc
prawidłowo skonfigurować jądro. Większość informacji można zdobyć poprzez
instalację pakietu pciutils (<c>emerge pciutils</c>) zawierającego program
<c>lspci</c>. Dzięki temu będzie możliwe używanie <c>lspci</c> wewnątrz
chrootowanego środowiska. Podczas pracy z tym programem można bezpiecznie
zignorować wszelkie ostrzeżenia związane z <e>pcilib</e> (jak np. "pcilib:
cannot open /sys/bus/pci/devices)". Ponadto można również uruchomić <c>lspci</c>
poza środowiskiem chroot. Powinno dać to taki sam efekt. Dodatkowe informacje o
sterownikach, które należy włączyć do jądra, można uzyskać dzięki poleceniu
<c>lsmod</c>, które pokaże listę modułów jakie załadował system płyty
instalacyjnej.
</p>

<p>
Kiedy już zbierzemy wszystkie informacje, przechodzimy do katalogu ze źródłami i
wpisujemy polecenie <c>make menuconfig</c>. Uruchomi się menu konfiguracyjne
oparte na bibliotekach graficznych ncurses.
</p>

<pre caption="Wywoływanie menu konfiguracyjnego">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Cała konfiguracja została podzielona na kilka sekcji, co znacznie ułatwia
odnalezienie i wybranie odpowiednich sterowników. Poniżej wymieniamy wszystkie
opcje, które należy włączyć, aby Gentoo mogło prawidłowo funkcjonować.
</p>

</body>
</subsection>
<subsection>
<title>Zaznaczanie wymaganych ustawień</title>
<body>

<p>
W związku z bardzo specyficznym charakterem sprzętu na którym instalujemy
system, zamiast zwykłego opisu, omówimy tutaj konfigurację dla konkretnych płyt.
Jeśli danego komputera nie ma na liście, należy poszukać wskazówek dotyczących
konfiguracji jądra dla niego w Internecie.
</p>

<p>
Należy wybrać odpowiedni komputer z poniższej listy, aby przenieść się do
odpowiedniej dla niej części dokumentacji.
</p>

<ul>
 <li><uri link="#netwinder">NetWinder</uri></li>
</ul>

</body>
</subsection>
</section>
<section id="netwinder">
<title>Konfiguracja dla NetWindera</title>
<body>

<p>
Obsługa EXT2 jest niezbędna dla partycji rozruchowej, ponieważ to jedyny system
plików, który obsługuje nasz program ładujący. Z pozostałych systemów plików
przetestowany został jedynie EXT3, ale można także spróbować innych.
</p>

<pre caption="Opcje konfiguracji NetWindera">
<comment>Generowanie domyślnej konfiguracji</comment>
# <i>make netwinder_defconfig</i>

<comment>Wymagane opcje</comment>
System Type ---&gt;
  ARM system type (FootBridge) ---&gt;
    (X) FootBridge
  Footbridge Implementations ---&gt;
    [*] NetWinder

Floating point emulation ---&gt;
  [*] NWFPE math emulation

File systems ---&gt;
  [*] Second extended fs support
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

Device Drivers ---&gt;
  ATA/ATAPI/MFM/RLL support ---&gt;
    [*] ATA/ATAPI/MFM/RLL support
    [*]   Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support
    [*]     Include IDE/ATA-2 DISK support
    ---     IDE chipset support/bugfixes
    [*]     PCI IDE chipset support
    [*]       Winbond SL82c105 support
    [*]       Generic PCI bus-master DMA support

  Network device support ---&gt;
    [*] Network device support
    Ethernet (10 or 100Mbit) ---&gt;
      [*] Ethernet (10 or 100Mbit)
      Tulip family network device support ---&gt;
        [*] "Tulip" family network device support
        [*]   DECchip Tulip (dc2114x) PCI support
        [*]     Use PCI shared mem for NIC registers
        [*]     Use NAPI RX polling
      [*] EISA, VLB, PCI and on board controllers
      [*]   PCI NE2000 and clones support

  Character devices ---&gt;
    Serial drivers ---&gt;
      [*] 8250/16550 and compatible serial support
      [*]   Console on 8250/16550 and compatible serial port
      --- Non-8250 serial port support
      [*] DC21285 serial port support
      [*]   Console on DC21285 serial port
    Watchdog Cards ---&gt;
      [*] Watchdog Timer Support
      [*]   NetWinder WB83C977 watchdog
    [*] NetWinder thermometer support
    [*] NetWinder Button
    [*]   Reboot Using Button

<comment>Polecane opcje</comment>
Kernel Features ---&gt;
  [*] Preemptible Kernel
  [*] Timer and CPU usage LEDs
  [*]   CPU usage LED

File systems ---&gt;
  [*] Ext3 journalling file system support

Device Drivers ---&gt;
  Input device support ---&gt;
    [*] Keyboards ---&gt;
      [*] AT keyboard
    [*] Mouse ---&gt;
      [*] PS/2 mouse

  Graphics support ---&gt;
    [*] Support for frame buffer devices
    [*]   Enable firmware EDID
    [*]   CyberPro 2000/2010/5000 support
    Logo configuration ---&gt;
      [*] Bootup logo
      [*]   Standard 224-color Linux logo

  Sound ---&gt;
    [*] Sound card support
    Open Sound System ---&gt;
      [*] Open Sound System
      [*]   OSS sound modules
      [*]     Yamaha FM synthesizer (YM3812/OPL-3) support
      [*]     Netwinder WaveArtist

<comment>Opcja umożliwiająca aktualizację flasha</comment>
Device Drivers ---&gt;
  Character devices ---&gt;
    [*] NetWinder flash support
</pre>

<p>
Po zakończeniu konfigurowania jądra przechodzimy do paragrafu <uri
link="#compiling">kompilowanie i instalowanie</uri>.
</p>

</body>
</section>
<section id="compiling">
<title>Kompilowanie i instalowanie</title>
<body>

<p>
Po skonfigurowaniu kernela przyszła pora na jego skompilowanie i instalację.
Opuszczamy program konfiguracyjny i rozpoczynamy proces kompilacji:
</p>

<pre caption="Kompilowanie kernela">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Kiedy jądro skończy się kompilować należy przekopiować jego obraz do katalogu
<path>/boot</path>. Wybieramy dowolną nazwę dla naszego jądra jednak należy
pamiętać jaka to nazwa, gdyż będziemy jej potrzebowali w późniejszym czasie w
trakcie konfiguracji bootloadera. Należy pamiętać o zastąpieniu części wpisu
<c><keyval id="kernel-name"/></c> swoją nazwą i wersją kernela.
</p>

<pre caption="Instalowanie jądra">
# <i>cp vmlinux.gz /boot/<keyval id="kernel-name"/></i>
</pre>

<p>
Następnie przechodzimy do akapitu dotyczącego <uri
link="#kernel_modules">modułów</uri>.
</p>

</body>
</section>
<section id="kernel_modules">
<title>Moduły jądra</title>

<subsection>
<include href="hb-install-kernelmodules.xml"/>
</subsection>

</section>
</sections>
