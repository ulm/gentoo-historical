<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-install-x86+amd64-bootloader.xml,v 1.7 2007/12/08 23:14:06 rane Exp $ -->

<sections>

<version>5.1</version>
<date>2007-11-27</date>

<section>
<title>Podejmowanie decyzji</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Po skonfigurowaniu jądra i modyfikacji odpowiednich plików konfiguracyjnych
systemu, można przejść do etapu instalacji programu, który uruchomi jądro w
momencie uruchomienia systemu. Taki program nazywa się <e>bootloader</e>.
</p>

</body>
<body test="contains('AMD64 x86', func:keyval('arch'))">

<p>
Dla architektury <keyval id="arch"/>, Gentoo posiada dwa takie programy: <uri
link="#grub">GRUB</uri> oraz <uri link="#lilo">LILO</uri>.
</p>

<warn test="func:keyval('arch')='AMD64'">
Używanie LILO na architekturze AMD64 nie jest wskazane.
</warn>

</body>
<body>

<p>
Przed instalacją któregokolwiek z nich opiszemy jeszcze jak skonfigurować bufor
ramki, program umożliwiający poprawę wyglądu konsoli. Jeśli użytkownik nie chce
korzystać z bufora ramki, może pominąć rozdział o nim.
</p>

</body>
</subsection>
<subsection>
<title>Opcjonalnie: Bufor ramki</title>
<body>

<p>
<e>Jeżeli</e> jądro zostało skompilowane z obsługą bufora ramki (lub użyto
<c>genkernela</c>), należy dodać parametr <c>vga</c> i/lub <c>video</c> w
odpowiednim miejscu pliku konfiguracyjnego bootloadera, aby go aktywować.
</p>

<p test="func:keyval('arch')='x86'">
Najważniejszą informacją jaką należy poznać przed rozpoczęciem konfiguracji jest
nazwa używanego urządzenia bufora ramki. Niektóre jądra, takie jak na przykład
<c>gentoo-sources</c>, domyślnie posiadają obsługę <c>vesafb-tng</c> jako
<e>sterownika typu VESA</e>. Użytkownicy <c>vesafb-tng</c> nie muszą dodawać
parametru <c>vga</c>. Pozostali, używający <c>vesafb</c>, wciąż muszą dopisywać
<c>vga</c>.
</p>

<p test="contains('AMD64 IA64',func:keyval('arch'))">
Systemy 64-bitowe muszą korzystać ze sterownika <c>vesafb</c>. Konieczne jest
także podanie wyrażenia <c>vga</c>.
</p>

<p>
Za pomocą parametru <c>vga</c> określa się rozdzielczość oraz głębię kolorów
ekranu bufora ramki <c>vesafb</c>. Każdy numer określa inną głębię i
rozdzielczość. Ich lista znajduje się w dokumencie
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path>, który instaluje się w
systemie wraz ze źródłami jądra.
</p>

<p>
Oto tabela parametrów <c>vga</c>, która zawiera wszystkie dostępne
rozdzielczości i głębie kolorów:
</p>

<table>
<tr>
  <ti></ti>
  <th>640x480</th>
  <th>800x600</th>
  <th>1024x768</th>
  <th>1280x1024</th>
</tr>
<tr>
  <th>256</th>
  <ti>0x301</ti>
  <ti>0x303</ti>
  <ti>0x305</ti>
  <ti>0x307</ti>
</tr>
<tr>
  <th>32k</th>
  <ti>0x310</ti>
  <ti>0x313</ti>
  <ti>0x316</ti>
  <ti>0x319</ti>
</tr>
<tr>
  <th>64k</th>
  <ti>0x311</ti>
  <ti>0x314</ti>
  <ti>0x317</ti>
  <ti>0x31A</ti>
</tr>
<tr>
  <th>16M</th>
  <ti>0x312</ti>
  <ti>0x315</ti>
  <ti>0x318</ti>
  <ti>0x31B</ti>
</tr>
</table>

<p>
Parametr <c>video</c> odpowiada za opcje wyświetlania bufora ramki. Jest mu
niezbędna nazwa sterownika bufora ramki (<c>vesafb</c> dla jąder 2.6 lub
<c>vesa</c> w 2.4) oraz opcje z jakimi ma być uruchamiany bufor. Wszystkie
zmienne znajdują się w pliku
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path>, oto najważniejsze z
nich:
</p>

<table>
<tr>
  <th>Zmienna</th>
  <th>Opis</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    Włącza zawijanie pamięci karty graficznej
  </ti>
</tr>
<tr>
  <ti>mtrr:n</ti>
  <ti>
    <c>n</c> może być:<br/>
    0 - disabled<br/>
    1 - uncachable<br/>
    2 - write-back<br/>
    3 - write-combining<br/>
    4 - write-through
  </ti>
</tr>
<tr test="func:keyval('arch')='x86'">
  <ti><c>mode</c></ti>
 <ti>
   (tylko dla <c>vesafb-tng</c>)<br/>
   Pozwala na ustawienie rozdzielczości, głębi kolorów oraz częstotliwości
   odświeżania. Na przykład <c>1024x768-32@85</c> ustawi rozdzielczość 1024x768,
   32-bitową głębię kolorów i częstotliwość odświeżania 85 Hz.
 </ti>
</tr>
</table>

<p test="contains('AMD64 IA64',func:keyval('arch'))">
Rezultatem powinno być coś podobnego do <c>vga=0x318
video=vesafb:mtrr:3,ywrap</c> lub <c>video=vesafb:mtrr,ywrap,1024x768-32@85</c>.
Warto zapamiętać (lub zapisać) wybraną wartość; niedługo się ona przyda.
</p>

<p test="func:keyval('arch')='x86'">
Wynik tych działań powinien wyglądać mniej więcej tak: <c>vga=0x318
video=vesafb:mtrr:3,ywrap</c> lub <c>video=vesafb:mtrr,ywrap,1024x768-32@85</c>.
Warto zapamiętać te ustawienia, wkrótce będą potrzebne.
</p>

<p test="func:keyval('arch')='IA64'">
W tym momencie należy zainstalować program <uri link="#elilo">elilo</uri>
</p>

<p>
Kolejny etap to instalacja <uri link="#grub">GRUB</uri> <e>lub</e> <uri
link="#lilo">LILO</uri>.
</p>

</body>
</subsection>
</section>
<section id="grub" test="contains('AMD64 x86',func:keyval('arch'))">
<title>Domyślnie: Użycie programu GRUB</title>
<subsection>
<title>Wyjaśnienie terminologii związanej z GRUB</title>
<body>

<p>
Najważniejszym czynnikiem prowadzącym do zrozumienia programu GRUB jest pojęcie
jego sposobu odnoszenia się do dysków i partycji. Partycja
<path>/dev/hda1</path> (dla dysków IDE) lub <path>/dev/sda1</path> (dla dysków
SCSI/SATA) jest określana przez GRUB-a jako <path>(hd0,0)</path>. Zauważmy
nawiasy po obu stronach <path>hd0,0</path> - ich użycie jest wymagane.
</p>

<p>
Dyski twarde są liczone od zera, a nie od "a". Partycje także zaczynają się od
zera, a nie od jedynki. W grupie urządzeń pamięci masowej tylko twarde dyski są
liczone, nie ma to natomiast miejsca w przypadku napędów ATAPI-IDE takich jak
CD-ROM-y i nagrywarki. Ta sama sytuacja ma miejsce w przypadku dysków SCSI.
Normalnie otrzymują one wyższe numery niż dyski IDE, z wyjątkiem sytuacji, gdy
BIOS jest ustawiony na start systemu z urządzenia SCSI.
</p>

<p>
Zakładając, że w komputerze jest zainstalowany dysk twardy oznaczony jako
<path>/dev/hda</path>, odtwarzacz cd-rom <path>/dev/hdb</path>, nagrywarka
<path>/dev/hdc</path>, drugi dysk twardy <path>/dev/hdd</path> i nie ma żadnego
dysku SCSI, urządzenie <path>/dev/hdd7</path> jest rozumiane jako
<path>(hd1,6)</path>. Całość wygląda dość pokrętnie, jednakże GRUB oferuje
mechanizm uzupełniania wiersza polecenia klawiszem TAB, co z pewnością jest
wybawieniem dla tych, którzy mają dużo dysków twardych i partycji, a gubią się
nieco w sposobie numeracji używanym przez program GRUB.
</p>

<p>
Nadeszła pora na zainstalowanie GRUB-a.
</p>

</body>
</subsection>
<subsection>
<title>Instalacja programu GRUB</title>
<body>

<p>
Po pierwsze należy zainstalować program GRUB:
</p>

<impo test="func:keyval('arch')='AMD64'">
Jeżeli używamy <uri link="?part=1&amp;chap=6#doc_chap2">profilu</uri> bez
multilib, <b>nie</b> powinniśmy instalować GRUB-a. Zamiast niego należy
skompilować <c>grub-static</c>.
</impo>

<pre caption="Instalowanie GRUB-a">
# <i>emerge grub</i>
</pre>

<p>
GRUB został zainstalowany, teraz należy go jeszcze skonfigurować i umieścić w
MBR, aby automatycznie uruchamiał nowo zainstalowane jądra. Najpierw przy pomocy
<c>nano</c> lub dowolnego innego edytora należy utworzyć plik
<path>/boot/grub/grub.conf</path>:
</p>

<pre caption="Tworzenie /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Następnie należy dokonać edycji pliku <path>grub.conf</path>. Poniżej znajdują
się dwa przykłady plików <path>grub.conf</path>, odpowiadające schematowi
partycjonowania użytemu w tym podręczniku. Tylko pierwszy z nich został
wyczerpująco opatrzony komentarzami.
</p>

<ul>
  <li>
   Pierwszy <path>grub.conf</path> jest dla osób, które nie wykorzystały
   programu <c>genkernel</c> do budowania jądra
  </li>
  <li>
    Drugi <path>grub.conf</path> jest dla tych, którzy użyli programu
    <c>genkernel</c> do zbudowania jądra.
  </li>
</ul>

<note>
Jeśli system plików głównej partycji to JFS, <e>należy</e> dodać "ro" do linii
<c>kernel</c>, gdyż JFS musi odtworzyć swój log zanim pozwoli na montowanie w
trybie do odczytu i zapisu.
</note>

<pre caption="grub.conf dla osób nie używających genkernel">
<comment># Która pozycja ma być uruchamiana domyślnie. 0 oznacza pierwszą, 1 drugą itd.</comment>
default 0
<comment># Ile sekund oczekiwać przed uruchomieniem pozycji domyślnej.</comment>

timeout 30
<comment># Ładny obrazek na zaostrzenie apetytu
# Dla użytkowników, którzy skonfigurowali bufor ramki</comment>
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux <keyval id="kernel-version"/>
<comment># Partycja, na której znajduje się obraz jądra (lub system operacyjny)</comment>

root (hd0,0)
kernel /boot/<keyval id="kernel-name"/> root=/dev/hda3

title=Gentoo Linux <keyval id="kernel-version"/> (rescue)
<comment># Partycja, na której znajduje się obraz jądra (lub system operacyjny)</comment>
kernel /boot/<keyval id="kernel-name"/> root=/dev/hda3 init=/bin/bb

<comment># Następne cztery linie są potrzebne tylko gdy będzie uruchamiany również system Windows.</comment>
<comment># W tym przypadku Windows znajduje się na /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<pre caption="grub.conf dla użytkowników genkernela">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux <keyval id="kernel-version"/>
root (hd0,0)
kernel /boot/<keyval id="genkernel-name"/> root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev
initrd /boot/<keyval id="genkernel-initrd"/>

<comment># Tylko, gdy będą uruchamiane dwa systemy</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<note>
Wspomniany na końcu linii append wpis <c>udev</c> został dodany w celu obejścia
jednego z błędów genkernela, który <e>czasem</e> nie współpracuje poprawnie z
udev.
</note>

<p>
Jeśli użyto innego schematu partycjonowania lub/i obrazu jądra, należy nanieść
odpowiednie poprawki na konfigurację. Należy się wtedy upewnić, że wszystko co
się dopisuje w konfiguracji, jest dopisywane w formacie nazewnictwa urządzeń
specyficznym dla GRUB-a (w stylu <path>(hd0,0)</path>) i jest względne dla
punktu montowania, a nie katalogu głównego. Innymi słowy,
<path>(hd0,0)/grub/splash.xpm.gz</path> powinien być dopisany jako
<path>/boot/grub/splash.xpm.gz</path> w związku z tym, że <path>(hd0,0)</path>
to <path>/boot</path>.
</p>

<p>
Jeśli wybrano inny schemat partycjonowania, a <path>/boot</path> nie znajduje
się na osobnej partycji, prefiks <path>/boot</path> użyty w powyższych
przykładach jest wciąż wymagany. Jeśli natomiast wybrany schemat
partycjonowania jest taki jak ten w Podręczniku, prefiks w niczym nie
przeszkadza, należy tylko dodatkowo utworzyć odpowiednie dowiązanie symboliczne
o nazwie boot. W skrócie: powyższe przykładowe konfiguracje będą działać bez
względu na to czy utworzono osobną partycję <path>/boot</path>, czy nie.
</p>

<p>
Jeżeli przy uruchomieniu systemu zachodzi potrzeba przekazania do jądra
dodatkowych opcji, wystarczy dopisać je na końcu polecenia kernel. W tym
przykładzie został już dodany parametr (<c>root=/dev/hda3</c> lub
<c>real_root=/dev/hda3</c>), a wpis można wzbogacić o kolejne. Na przykład można
dodać opcję <c>vga</c> dotyczącą bufora ramki, która została opisana wcześniej.
</p>

<p>
Użytkownicy jąder 2.6.7 i nowszych, którzy przy pomocy zworki ograniczyli
wielkość dysku, ponieważ ich BIOS nie jest w stanie współpracować z większymi
napędami, mogą dodać opcję <c>hdx=stroke</c>, aby korzystać z całego dostępnego
na urządzeniu miejsca.
</p>

<p>
Użytkownicy programu <c>genkernel</c> powinni wiedzieć, że jądra, które
zbudowali używają tych samych opcji uruchamiania co LiveCD. Na przykład jeżeli
komputer ma zainstalowane urządzenie SCSI, należy dodać parametr <c>doscsi</c>.
</p>

<p>
Następnie trzeba zapisać plik <path>grub.conf</path> i opuścić edytor. Kolejnym
krokiem będzie dopisanie GRUB-a do MBR.
</p>

<p>
Twórcy GRUB-a zalecają użycie <c>grub-install</c>. Czasem jednak program ten z
jakiegoś powodu odmawia współpracy. Mimo to, wciąż pozostaje możliwość ręcznego
zainstalowania GRUB-a.
</p>

<p>
Teraz można przejść do paragrafu <uri link="#grub-install-auto">Domyślnie:
Instalowanie GRUB-a przy pomocy grub-install</uri> lub <uri
link="#grub-install-manual">Alternatywnie: Ręczne instalowanie GRUB-a</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Domyślnie: Instalacja GRUB-a przy pomocy grub-install</title>
<body>

<p>
Aby zainstalować GRUB-a, należy wpisać komendę <c>grub-install</c>. Nie zadziała
to jednak bez pewnych zmian, bo wciąż działamy w chrootowanym środowisku. Należy
stworzyć plik <path>/etc/mtab</path> (plik z informacjami dotyczącymi
zamontowanych napędów). Na szczęście jest na to prosta metoda, wystarczy
skopiować plik <path>/proc/mounts</path> do <path>/etc/mtab</path>, pomijając
jedynie linię <c>rootfs</c> - o ile nie stworzono osobnej partycji rozruchowej.
W obu przypadkach zadziała następujące polecenie:
</p>

<pre caption="Tworzenie /etc/mtab">
# <i>grep -v rootfs /proc/mounts &gt; /etc/mtab</i>
</pre>

<p>
Następnie przy pomocy <c>grub-install</c> zainstalowany zostaje GRUB:
</p>

<pre caption="Uruchamianie grub-install">
# <i>grub-install --no-floppy /dev/hda</i>
</pre>

<p>
Więcej informacji o GRUB-ie można znaleźć w dokumentach: <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> i <uri
link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

<p>
Następnie należy przejść do części <uri link="#reboot">Ponowne uruchamianie
systemu</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Alternatywnie: Ręczna instalacja GRUB-a</title>
<body>

<p>
Aby zacząć, należy wpisać polecenie <c>grub</c>. Znak zachęty zmieni się na
<path>grub&gt;</path>. Teraz należy wprowadzić serię odpowiednich komend, aby
GRUB został zapisany na dysku. Komendy te zostaną opisane poniżej.
</p>

<pre caption="Uruchamianie powłoki GRUB-a">
# <i>grub --no-floppy</i>
</pre>

<note>
Jeżeli komputer nie ma zainstalowanej stacji dyskietek, należy dodać opcję
<c>--no-floppy</c> do powyższego polecenia, aby GRUB nie marnował czasu na
poszukiwanie nieistniejącego napędu.
</note>

<p>
Wyobraźmy sobie, że chcemy zainstalować GRUB, aby odczytywał informacje z
bootowalnej partycji <path><keyval id="/boot"/></path> i instalował swój rekord
rozruchowy w MBR twardego dysku oraz by pierwszą rzeczą jaką zobaczymy po
uruchomieniu komputera był znak zachęty GRUB-a. Oczywiście należy odpowiednio
dostosować wszystkie opcje do używanej konfiguracji.
</p>

<p>
Mechanizm uzupełniania składni jest bardzo pomocny przy konfigurowaniu GRUB-a.
Na przykład wpisując "<c>root (</c>" i wciskając TAB można zobaczyć wszystkie
urządzenia (np. <path>hd0</path>). Jeśli zostanie wpisane "<c>root (hd0,</c>" i
potem zostanie naciśnięty TAB, ukaże się lista wszystkich dostępnych partycji na
urządzeniu (np. <path>hd0,0</path>).
</p>

<p>
Skonfigurowanie GRUB-a przy pomocy tego systemu powinno być proste.
</p>

<pre caption="Instalacja GRUB-a w głównym sektorze rozruchowym">
grub&gt; <i>root (hd0,0)</i>          <comment>(Odpowiednia partycja /boot)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Instalacja GRUB-a w MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Opuszczenie powłoki GRUB)</comment>
</pre>

<note>
W przypadku konieczności zainstalowania GRUB poza MBR, należy zmienić komendę
<c>setup</c>, aby wskazywała na odpowiednie urządzenie. Na przykład dla GRUB-a
zainstalowanego w <path>/dev/hda3</path> będzie to <c>setup (hd0,2)</c>.
Niewielu użytkowników decyduje się na skorzystanie z tej możliwości.
</note>

<p>
Więcej informacji można znaleźć na stronach: <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> i <uri
link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

<p>
Następnie można przejść do sekcji <uri link="#reboot">Ponowne uruchamianie
systemu</uri>.
</p>

</body>
</subsection>
</section>
<section id="lilo" test="contains('AMD64 x86', func:keyval('arch'))">
<title>Alternatywnie: Użycie LILO</title>
<subsection>
<title>Instalowanie LILO</title>
<body>

<warn test="func:keyval('arch')='AMD64'">
Korzystanie z LILO na architekturze AMD64 nie jest wskazane.
</warn>

<p>
LILO, czyli LInuxLOader, to program naprawdę wypróbowany i używany od bardzo
dawna przez bardzo wielu użytkowników. Brakuje mu jednak niektórych cech
posiadanych przez program GRUB, co jest, między innymi, powodem rosnącej
popularności tego drugiego. Fakt, że na niektórych systemach LILO działa, a GRUB
nie, powoduje, że LILO jest ciągle w użyciu. Oczywiście nie jest to jedyny powód
Niektórzy po prostu lepiej znają LILO i wolą przy nim pozostać, zamiast uczyć
się obsługi całkiem nowego programu. My, jak zawsze, wybór pozostawiamy
użytkownikom, Gentoo wspiera obydwa programy.
</p>

<p>
Instalacja LILO jest prosta, używamy do tego polecenia <c>emerge</c>.
</p>

<pre caption="Instalowanie LILO">
# <i>emerge lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Konfigurowanie LILO</title>
<body>

<p>
Aby skonfigurować LILO, należy utworzyć plik <path>/etc/lilo.conf</path>. Można
to zrobić poprzez uruchomienie ulubionego edytora (w tym Podręczniku
konsekwentnie używamy <c>nano</c>) i w ten sposób stworzyć ten plik.
</p>

<pre caption="Tworzenie /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Kilka rozdziałów temu prosiliśmy o zapamiętanie nazwy utworzonego obrazu jądra.
W naszym przykładowym <path>lilo.conf</path> użyty zostanie uprzednio
zaprezentowany schemat partycjonowania. Przygotowane zostały dwie części:
</p>

<ul>
  <li>
    Pierwsza dla tych, którzy nie skorzystali z programu <c>genkernel</c> przy
    budowaniu jądra
  </li>
  <li>
    Druga dla używających <c>genkernela</c>
  </li>
</ul>

<p>
Należy znać nazwy <e>swojego</e> obrazu jądra i <e>swojego</e> obrazu initrd.
</p>

<note>
Jeśli system plików głównej partycji to JFS, <e>należy</e> dodać "ro" do linii
<c>kernel</c>, ponieważ JFS musi odtworzyć swój log zanim pozwoli na montowanie
w trybie do odczytu i zapisu.
</note>

<pre caption="Example /etc/lilo.conf">
boot=/dev/hda             <comment># Instalacja LILO w MBR</comment>
prompt                    <comment># Dajemy użytkownikowi możliwość wyboru innej pozycji</comment>
timeout=50                <comment># Czekamy 5 sekund przed uruchomieniem domyślnej pozycji</comment>
default=gentoo            <comment># Kiedy oczekiwanie się zakończy, uruchamiana jest pozycja "gentoo"</comment>

<comment># Dla osób nie korzystających z genkernela</comment>
image=/boot/<keyval id="kernel-name"/>
  label=gentoo            <comment># Nazwa tej części</comment>
  read-only               <comment># Tryb tylko do odczytu na starcie, nie zmieniać!</comment>
  root=/dev/hda3          <comment># Miejsce, w którym znajduje się partycja główna</comment>

image=/boot/<keyval id="kernel-name"/>
  label=gentoo.rescue     <comment># Nazwa tej części</comment>
  read-only               <comment># Tryb tylko do odczytu na starcie, nie zmieniać!</comment>
  root=/dev/hda3          <comment># Miejsce, w którym znajduje się partycja główna</comment>
  append="init=/bin/bb"   <comment># Uruchamia statyczną powłokę ratunkową shell</comment>

<comment># Dla użytkowników genkernela</comment>
image=/boot/<keyval id="genkernel-name"/>
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev"
  initrd=/boot/<keyval id="genkernel-initrd"/>

<comment># Następne dwie linie są podane na wypadek, gdybyśmy chcieli uruchamiać także system Windows</comment>
<comment># W tym przypadku Windows znajduje się na /dev/hda6</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Parametr <c>udev</c> na końcu linii "append" jest niezbędny dla obejścia błędu w
pewnych wersjach genkernela, występującego gdy używa się udev na pierwszym
miejscu, co jest zresztą domyślnym ustawieniem.
</note>

<note>
Jeśli używany jest inny schemat partycjonowania i/lub obrazu jądra, należy
dokonać niezbędnych poprawek.
</note>

<p>
Jakiekolwiek dodatkowe parametry startowe jądra dodaje się po słowie kluczowym
<c>append</c>. Jako przykład podajemy opcję <c>video</c> służącą do włączenia
bufora ramki:
</p>

<pre caption="Dodawanie funkcji jądra poprzez linię append">
image=/boot/<keyval id="kernel-name"/>
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="video=vesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
Dla jądra 2.6.7 lub nowszego i ograniczenia przy pomocy przełączników rozmiaru
twardego dysku, gdy BIOS nie obsługuje tak dużych napędów, należy dopisać do
linii append polecenie <c>hdx=stroke</c>.
</p>

<p>
Użytkownicy programu <c>genkernel</c> powinni wiedzieć, że jądra, które
zbudowali, używają tych samych opcji bootowania co płyty instalacyjne. Na
przykład w przypadku korzystania z urządzenia SCSI należy dodać parametr
<c>doscsi</c>.
</p>

<p>
Po zakończeniu konfiguracji, należy zapisać plik i opuścić edytor. Teraz
wystarczy uruchomić program <c>/sbin/lilo</c>, LILO zastosuje ustawienia z
<path>/etc/lilo.conf</path> (tzn. zainstaluje się na dysku). Przy każdej zmianie
w <path>/etc/lilo.conf</path> oraz przy zmianie jądra, trzeba ponownie wykonać
polecenie <c>/sbin/lilo</c>.
</p>

<pre caption="Kończenie instalacji LILO">
# <i>/sbin/lilo</i>
</pre>

<p>
Dużo ciekawych informacji o LILO znajduje się w <uri
link="http://en.wikipedia.org/wiki/LILO_(boot_loader)">artykule w
Wikipedii</uri> na jego temat.
</p>

<p>
Kolejny rozdział to <uri link="#reboot">Ponowne uruchamianie systemu</uri>.
</p>

</body>
</subsection>
</section>
<section id="elilo" test="func:keyval('arch')='IA64'">
<title>Domyślnie: instalacja elilo</title>
<body>

<p>
Na platformie IA64 program ładujący nosi nazwę elilo. Zaczniemy od jego
instalacji.
</p>

<pre caption="Instalacjaelilo">
# <i>emerge elilo</i>
</pre>

<p>
Plik konfiguracyjny to <path>/etc/elilo.conf</path>, a przykładowy plik tego
typu znajduje się w <path>/usr/share/doc/elilo-&lt;ver&gt;/</path>. Poniżej
jeszcze jedna przykładowa konfiguracja:
</p>

<pre caption="Przykład /etc/elilo.conf">
boot=/dev/sda1
delay=30
timeout=50
default=Gentoo
append="console=ttyS0,9600"
prompt

image=/vmlinuz
        label=Gentoo
        root=/dev/sda2
        read-only

image=/vmlinuz.old
        label=Gentoo.old
        root=/dev/sda2
        read-only
</pre>

<p>
Linia <c>boot</c> to nazwa partycji rozruchowej, tutaj <path>/dev/sda1</path>.
Linia <c>delay</c> to liczba dziesiątek sekund ile program czeka przed
uruchomieniem domyślnej opcji. Linia <c>timeout</c> to odpowiednik linii delay
dla trybu interaktywnego. Linia <c>default</c> to domyślne jądro, a linia
<c>append</c> to opcje jego ładowania. Linia <c>prompt</c> przestawi domyślny
tryb uruchomienia elilo na interaktywny.
</p>

<p>
Fragmenty zaczynające się od <c>image</c> to różne obrazy jakie będzie można
uruchomić. Każdy z nich posiada etykietę <c>label</c> oraz ma określoną partycję
główną <c>root</c>, która będzie montowana tylko do odczytu (<c>read-only</c>).
</p>

<p>
Po zakończeniu konfiguracji należy uruchomić <c>elilo --efiboot</c>. Opcja
<c>--efiboot</c> doda do menu wpis dla menedżera ładowania EFI.
</p>

<pre caption="Zapisywanie konfiguracji">
# <i>elilo --efiboot</i>
</pre>

<p>
Następny rozdział to <uri link="#reboot">Ponowne uruchamianie systemu</uri>.
</p>

</body>
</section>
<section id="reboot">
<title>Ponowne uruchamianie systemu</title>
<subsection>
<body>

<p>
Należy opuścić chroot i odmontować wszystkie zamontowane partycje. Następnie
trzeba wpisać komendę <c>reboot</c>.
</p>

<pre caption="Odmontowywanie partycji i ponowne uruchamianie" test="func:keyval('arch')='IA64'">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/sys /mnt/gentoo/dev  /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<pre caption="Odmontowywanie partycji i ponowne uruchamianie" test="not(func:keyval('arch')='IA64')">
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Trzeba pamiętać o usunięciu płyty z napędu, bo zamiast nowiutkiego Gentoo znów
zobaczymy system z płyty instalacyjnej.
</p>

<p test="func:keyval('arch')='IA64'">
Po ponownym uruchomieniu systemu w EFI pojawi się wpis dla Gentoo.
</p>

<p>
Następnie wystarczy zakończyć proces instalacji zgodnie ze wskazówkami opisanymi
w rozdziale <uri link="?part=1&amp;chap=11">Finalizowanie instalacji
Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
