<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-working-use.xml,v 1.2 2004/12/31 17:14:15 swift Exp $ -->

<sections>

<version>1.23</version>
<date>2004-12-28</date>

<section>
<title>Czym są flagi USE?</title>
<subsection>
<title>Idea flag USE.</title>
<body>

<p>
Kiedy instalujesz Gentoo (lub dowolną inną dystrybucję, albo nawet inny 
system operacyjny) dokonujesz wyborów zależnych od środowiska, w którym 
pracujesz. Instalacja dla serwera różni się od instalacji dla stacji 
roboczej. Stacja dla gracza różni się od stacji do obróbki grafiki 3D.
</p>

<p>
Nie jest tak tylko w przypadku pakietów, które wybierasz przy instalacji, 
ale także dla cech, które dany pakiet powinien posiadać. Jeżeli nie 
potrzebujesz obsługi OpenGL, dlaczego miałbyś instalować OpenGL oraz 
jego obsługę w większości Twoich pakietów? Jeżeli nie chcesz używać KDE, 
dlaczego miałbyś budować pakiety ze wsparciem dla KDE, jeżeli te pakiety 
pracują bez problemów bez KDE?
</p>

<p>
Aby ułatwić użytkownikom decydowanie o tym co chcą, a czego nie chcą
instalować/aktywować stworzyliśmy dla nich specjalne środowisko. Dzięki niemu
użytkownik może zdecydować co jest mu potrzebne, a Portage może ułatwić cały
proces wyboru najlepszych ustawień.
</p>

</body>
</subsection>
<subsection>
<title>Definicja flag USE.</title>
<body>

<p>
Każda flaga jest słowem kluczowym, które reprezentuje wspierane funkcje 
oraz informacje o zależnościach dla wybranego wątku. Jeżeli zdefiniujesz 
daną flagę USE, Portage będzie wiedziało, że potrzebujesz wsparcia funkcji
przypisanej danemu słowu kluczowemu. Oczywiście uwzględnione zostaną 
także pakiety zależne.
</p>

<p>
Przyjrzyjmy się zatem przykładowi: słowu kluczowemu <c>kde</c>. Jeżeli nie 
posiadasz go wśród zmiennych <c>USE</c>, wszystkie pakiety, które 
posiadają <e>opcjonalną</e> obsługę KDE, zostaną skompilowane 
<e>bez</e> obsługi KDE. Wszystkie pakiety, które będą 
<e>opcjonalnie</e> zależne od KDE, zostaną zainstalowane <e>bez</e> 
bibliotek KDE jako zależności. Jeżeli zdefiniujesz słowo kluczowe 
<c>kde</c>, to te pakiety zostaną skompilowane <e>z</e> obsługą
KDE oraz biblioteki KDE zostaną zainstalowane jako pakiety zależne.
</p>

<p>
Dzięki dobremu doborowi słów kluczowych otrzymasz system dokładnie 
dostosowany do swoich potrzeb.
</p>

</body>
</subsection>
<subsection>
<title>Jakie wyróżniamy flagi USE?</title>
<body>

<p>
Wyróżniamy dwa typy flag USE: <e>globalne</e> oraz <e>lokalne</e>.
</p>

<ul>
<li>
<e>Globalne</e> flagi USE są używane dla większej ilości pakietów,
są ogólnosystemowe. Większość ludzi postrzega je właśnie jako flagi USE.
</li>
<li>
<e>Lokalne</e> flagi USE są używane przez pojedynczy pakiet w celu 
dokonania decyzji specyficznych dla danego pakietu.
</li>
</ul>

<p>
Lista dostępnych globalnych flag USE jest dostępna <uri
link="/dyn/use-index.xml">w Internecie</uri> lub też lokalnie w pliku
<path>/usr/portage/profiles/use.desc</path>. Krótki (<e>bardzo</e> 
niekompletny) fragment tego:
</p>

<pre caption="Krótki fragment dostępnych flag USE">
gtk     - Dodaje wsparcie dla x11-libs/gtk+ (The GIMP Toolkit)
gtk2    - Używa gtk+-2.0.0 zamiast gtk+-1.2 w przypadku, gdy program wspiera oba formaty.
gtkhtml - Dodaje wsparcie dla gnome-extra/gtkhtml
guile   - Dodaje wsparcie dla dev-util/guile (Intepreter dla Scheme)
icc     - Używa kompilatora Intel C++ jeżeli pakiet posiada dla niego wsparcie
icc-pgo - Włącza generację danych PGO lub używa przy icc.
imap    - Dodaje wsparcie dla IMAP
</pre>

<p>
Lista dostępnych lokalnych flag USE znajduje się w pliku
<path>/usr/portage/profiles/use.local.desc</path>.
</p>

</body>
</subsection>
</section>
<section>
<title>Używanie flag USE.</title>
<subsection>
<title>Deklarowanie stałych flag USE.</title>
<body>

<p>
Kiedy już przekonaliśmy Cię jak ważny jest właściwy dobór flag USE możemy
przystąpić do tłumaczenia jak się je deklaruje.
</p>

<p>
Jak już wcześniej wspominaliśmy, wszystkie flagi <c>USE</c> są deklarowane 
wewnątrz zmiennej USE. Aby ułatwić użytkownikom szukanie oraz wybór flag 
USE dostarczamy dobrany przez nas <e>domyślny</e> zestaw. Zestaw ten 
jest kolekcją flag USE, które według nas są najczęściej używane przez 
użytkowników Gentoo. Domyślny zestaw jest zdeklarowany w pliku 
<path>make.defaults</path> i jest on częścią Twojego profilu. 
Rzućmy okiem na te domyślne ustawienia:
</p>

<pre caption="Zmienna USE w tage/profiles/default-linux/x86/2004.3/make.defaults">
<comment>(To jest tylko przykład i ustawienia tej flagi mogły ulec zmienie)</comment>
USE="x86 oss apm arts avi berkdb bitmap-fonts crypt cups encode fortran f77
foomaticdb gdbm gif gpm gtk gtk2 imlib jpeg kde gnome libg++ libwww mad
mikmod motif mpeg ncurses nls oggvorbis opengl pam pdflib png python qt
quicktime readline sdl spell ssl svga tcpd truetype X xml2 xmms xv zlib"
</pre>

<p>
Jak łatwo zauważyć domyślny zestaw zawiera dość dużo słów
kluczowych. Pamiętaj, <b>nie</b> dokonuj zmian w żadnym pliku 
<path>make.defaults</path>, aby dostosować zmienną 
<c>USE</c> do swoich potrzeb: zmiany te zostaną usunięte przy najbliższej
aktualizacji Portage!
</p>

<p>
Aby zmienić domyślne ustawienia, musisz dodać (lub usunąć) słowa kluczowe 
do zmiennej <c>USE</c>. Dokonuje się tego definiując globalnie zmienną 
<c>USE</c> w pliku <path>/etc/make.conf</path>. Do tej zmiennej możesz 
dodać flagi, które są Ci potrzebne, lub też usunać te, których 
nie potrzebujesz. Usunięcia flagi dokonuje się poprzez wstawienie znaku 
minus ("-") przed wybraną flagą.
</p>

<p>
Na przykład, aby usunąć obsługę KDE i QT oraz dodać obsługę ldap, zmienna 
<c>USE</c> w pliku <path>/etc/make.conf</path> powinna wyglądać następująco:
</p>

<pre caption="Przykładowe ustawienia zmiennej USE w pliku /etc/make.conf">
USE="-kde -qt ldap"
</pre>

</body>
</subsection>
<subsection>
<title>Deklaracja flag USE tylko dla wybranego pakietu.</title>
<body>

<p>
Czasami chcesz zadeklarować wybraną flagę USE dla jednej (czasem kilku) aplikacji,
ale nie dla całego systemu. Aby tego dokonać, będziesz
musiał utworzyć katalog <path>/etc/portage</path> (jeżeli już nie istnieje)
i wyedytować <path>/etc/portage/package.use</path>.
</p>

<p>
Na przykład, jeżeli nie chcesz globalnego wsparcia dla <c>berkdb</c> natomiast
chciałbyś mieć jego wsparcie dla <c>mysql</c>, pownieneś dodać:
</p>

<pre caption="Przykład /etc/portage/package.use">
dev-db/mysql berkdb
</pre>

<p>
Oczywiście możesz całkowicie <e>wyłączyć</e> flagi USE dla wybranej aplikacji.
Na przykład, jeżeli nie chcesz obsługi <c>javy</c> w PHP:
</p>

<pre caption="2 przykład /etc/portage/package.use">
dev-php/php -java
</pre>

</body>
</subsection>
<subsection>
<title>Deklaracja tymczasowych flag USE.</title>
<body>

<p>
Czasami zachodzi potrzeba użycia flagi USE tylko jeden raz. Zamiast 
edytować plik <path>/etc/make.conf</path> dwa razy (aby zmienić, a potem
cofnąć zmiany w USE), możesz po prostu zadeklarować flagę 
USE jako zmienną środowiskową. Pamiętaj, że jeżeli ponownie zainstalujesz lub
zaktualizujesz tą aplikację (przypadkowo lub przy aktualizacji systemu)
to Twoje zmiany zostaną pominięte.
</p>

<p>
Jako przykład usuniemy obsługę javy na czas instalacji mozilli.
</p>

<pre caption="Używanie USE jako zmiennej środowiskowej">
# <i>USE="-java" emerge mozilla</i>
</pre>

</body>
</subsection>
<subsection>
<title>Dziedziczenie flag USE.</title>
<body>

<p>
Niektóre pakiety nie tylko używają flag USE, ale także ich dostarczają. 
Kiedy instalujesz taki pakiet flagi USE, których on dostarcza są dodawane 
do już istniejących flag. Aby przejrzeć listę pakietów, które 
dostarczają flagi USE, zajrzyj do pliku 
<path>/etc/make.profile/use.defaults</path>:
</p>

<pre caption="Fragment pliku /etc/make.profile/use.defaults">
gnome           gnome-base/gnome
gtk             x11-libs/gtk+
qt              x11-libs/qt
kde             kde-base/kdebase
motif           x11-libs/openmotif
</pre>

</body>
</subsection>
<subsection>
<title>Pierwszeństwo.</title>
<body>

<p>
Oczywiście istnieje pierwszeństwo w przydzielaniu priorytetów konkretnym 
flagom USE. Nie ma sensu deklarować zmiennej <c>USE="-java"</c> tylko po 
to, aby zobaczyć, że <c>java</c> i tak zostanie użyta. Hierarchia flag USE
prezentuje się następujące (pierwsze mają najniższy priorytet):
</p>

<ol>
<li>
Domyślne ustawienia zmiennej USE znajdujące się w pliku 
<path>make.defaults</path> będącego częścią Twojego profilu
</li>
<li>
Dziedziczne ustawienia USE, jeżeli zainstalowany został pakiet 
znajdujący się w pliku <path>/etc/make.profile/use.defaults</path>
</li>
<li>
Zdefiniowana przez użytkownika zmienna USE znajdująca się w pliku 
<path>/etc/make.conf</path>
</li>
<li>
Zdefiniowana przez użytkownika zmienna USE w pliku
<path>/etc/portage/package.use</path>
</li>
<li>
Zmienna USE zdefiniowana przez użytkownika jako zmienna 
środowiskowa.
</li>
</ol>

<p>
Aby sprawdzić ostateczne ustawienia zmiennej <c>USE</c> widziane przez 
Portage wpisz polecenie <c>emerge info</c>.
Polecenie to ukaże wszystkie istotne zmienne (włączając zmienną 
<c>USE</c>) z wartościami użytymi przez Portage.
</p>

<pre caption="Wykonywanie polecenia emerge info">
# <i>emerge info</i>
</pre>

</body>
</subsection>
<subsection>
<title>Adaptacja systemu do nowych flag USE.</title>
<body>

<p>
Jeżeli zmodyfikowałeś swoje flagi USE i chcesz teraz uaktualnić swój system, tak
aby pakiety używały nowych flag USE, wywołaj <c>emerge</c> z opcją <c>--newuse</c>
</p>

<p>
Po pierwsze, przekompiluj swój system używając nowych flag USE:
</p>
   
<pre caption="Rekompilacja systemu">
# <i>emerge --update --deep --newuse world</i>
</pre>   
 
<p>
Następnie uruchom depclean, aby usunąć niepotrzebne zależności, które 
zostały zemergowane na "starym" systemie, ale są nieaktualne z nowymi flagami USE. 
</p>

<warn>
Uruchomienie <e>emerge depclean</e> jest niebezpieczną operacją i powinno być wykonywane
z zachowaniem pełnej ostrożności. Sprawdź podwójnie listę "nieaktualnych" pakietów i upewnij
się, że Portage nie chce usunąć czegoś, czego potrzebujesz. W poniższym przykładzie
dodajemy opcję <c>-p</c>, aby zobaczyć tylko listę pakietów, bez usuwania ich.
</warn>

<pre caption="Usuwanie niepotrzebnych pakietów">
# <i>emerge -p depclean</i>
</pre>
     
<p>
Po zakończeniu depclean'a uruchom <c>revdep-rebuild</c> aby przebudować
aplikacje, które mogą być połączone dynamicznie z bibliotekami, które zostały
usunięte. <c>revdep-rebuild</c> jest częścią pakietu <c>gentoolkit</c>.
</p>

<pre caption="Uruchomienie revdep-rebuild">
 # <i>revdep-rebuild</i>
</pre>
		   	 
<p>
Po zakończeniu tych wszystkich czynności Twój system będzie używał nowych
ustawień flag USE.
</p>         

</body>
</subsection>
</section>
<section>
<title>Zmienne USE specyficzne dla pakietów.</title>
<subsection>
<title>Przeglądanie dostępnych flag USE.</title>
<body>

<p>
Weźmy na przykład <c>mozillę</c> i dowiedzmy się których flag USE ona używa. Aby
się tego dowiedzieć, użyjemy polecenia <c>emerge</c> z parametrami
<c>--pretend</c> oraz <c>--verbose</c>:
</p>

<pre caption="Przeglądanie używanych flag USE:">
# <i>emerge --pretend --verbose mozilla</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild  N    ] net-www/mozilla-1.5-r1 +java +crypt -ipv6 -gtk2 +ssl 
+ldap +gnome -debug +mozcalendar -mozaccess -mozxmlterm -moznoirc -moznomail
-moznocompose -moznoxft 
</pre>

<p>
<c>emerge</c> nie jest jedynym narzędziem wykorzystywanym w celu przeglądania informacji o 
pakietach. Do dyspozycji mamy jeszcze program <c>etcat</c>, znajdujący się w pakiecie 
<c>gentoolkit</c>. Zacznijmy od zainstalowania <c>gentoolkit</c>:
</p>

<pre caption="Instalacja gentoolkit">
# <i>emerge gentoolkit</i>
</pre>

<p>
Następnie uruchamiamy <c>etcat</c> z argumentem <c>uses</c> aby przejrzeć flagi 
USE dla konkretnego pakietu. Dla przykładu sprawdźmy pakiet 
<c>gnumeric</c>:
</p>

<pre caption="Użycie etcat do przeglądania użytych flag USE:">
# <i>etcat uses gnumeric</i>
[ Colour Code : <i>set</i> <comment>unset</comment> ]
[ Legend      : (U) Col 1 - Current USE flags        ]
[             : (I) Col 2 - Installed With USE flags ]

 U I [ Found these USE variables in : app-office/gnumeric-1.2.0 ]
 - - <comment>libgda</comment>  : Adds GNU Data Access (CORBA wrapper) 
support for gnumeric
 - - <comment>gnomedb</comment> : unknown
 + + <i>python</i>  : Adds support/bindings for the Python language
 + + <i>bonobo</i>  : Adds support for gnome-base/bonobo (Gnome CORBA 
interfaces)
</pre>

</body>
</subsection>
</section>
</sections>
