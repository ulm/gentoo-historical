<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-net-advanced.xml,v 1.6 2005/10/12 01:40:45 rane Exp $ -->
<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.3</version>
<date>2005-08-14</date>

<section>
<title>Zaawansowana konfiguracja</title>
<body>

<p>
Zmienna config_eth0 jest sercem konfiguracji interfejsu sieciowego. Jest to
lista poleceń konfiguracyjnych wysokiego poziomu (w tym przypadku urządzenia
eth0). Każde polecenie z listy poleceń jest uruchamiane w sposób sekwencyjny.
Urządzenie uruchomi się jeżeli co najmniej jedno polecenie zostanie poprawnie
uruchomione.
</p>

<p>
Poniżej znajduje się lista wbudowanych poleceń.
</p>

<table>
<tr>
  <th>Polecenie</th>
  <th>Opis</th>
</tr>
<tr>
  <ti>null</ti>
  <ti>Nie robi nic</ti>
</tr>
<tr>
  <ti>noop</ti>
  <ti>
    Jeżeli urządzenie działa i jest przypisany adres, zakończy pomyślnie konfigurację.
  </ti>
</tr>
<tr>
  <ti>adres IPv4 lub IPv6</ti>
  <ti>Dodaje wskazany adres do interfejsu</ti>
</tr>
<tr>
  <ti>
    dhcp, adsl lub apipa
    (lub dowolne polecenie pochodzące z modułu producenta)
  </ti>
  <ti>
    Uruchamia moduł, który posiada dane polecenie. Dla przykładu, "dhcp"
    uruchomi moduł, który zapewnia dhcp i który może być którymś z grupy
    dhcpcd, udhcpc, dhclient lub pump.
  </ti>
</tr>
</table>

<p>
Jeżeli jakieś polecenie się nie wykona, można zdefiniować takie które będzie
wykonywane zamiennie. Polecenie to musi pasować dokładnie do struktury
konfiguracji głównej.
</p>

<p>
Można połączyć te polecenia razem. Poniżej znajduje się kilka przykładów.
</p>

<pre caption="Przykłady konfiguracji">
<comment># Dodawanie trzech adresów IPv4</comment>
config_eth0=(
   "192.168.0.2/24"
   "192.168.0.3/24"
   "192.168.0.4/24"
)

<comment># Dodawanie adresu IPv4 oraz dwóch adresów IPv6</comment>
config_eth0=(
   "192.168.0.2/24"
   "4321:0:1:2:3:4:567:89ab"
   "4321:0:1:2:3:4:567:89ac"
)

<comment>
# Zachowuje przypisany adres, chyba że urządzenie zostanie wyłączone
# - w takim wypadku należy przypisać kolejny adres poprzez DHCP.
# Jeżeli pobranie adresu przez DHCP nie powiedzie się - zostanie
# przypisany stały adres IP poprzez APIPA</comment>
config_eth0=(
   "noop"
   "dhcp"
)
fallback_eth0=(
   "null"
   "apipa"
)
</pre>

<note>
Przy używaniu modułu ifconfig oraz dodawaniu więcej niż jednego adresu zostają
utworzone aliasy dla każdego dodatkowego adresu. Wobec tego, powyższe dwa
przykłady utworzą interfejsy eth0, eth0:1 oraz eth0:2.
Nie można nic specjalnego z tymi interfejsami zrobić, gdyż jądro oraz programy
będą traktować interfejsy eth0:1 oraz eth0:2 jako eth0.
</note>

<impo>
Kolejność zapasowej konfiguracji jest bardzo ważna! Gdyby polecenie "null" nie
zostało zdefiniowane, to polecenie "apipa" zostałoby wykonane tylko w przypadku
gdyby polecenie "noop" nie powiodło się.
</impo>

<note>
<uri link="?part=4&amp;chap=3#apipa">APIPA</uri> oraz
<uri link="?part=4&amp;chap=3#dhcp">DHCP</uri> będą omawiane później.
</note>

</body>
</section>
<section>
<title>Zależności sieciowe</title>
<body>

<p>
Skrypty startowe znajdujące się w <path>/etc/init.d</path> mogą być zależne
od konkretnego urządzenie sieciowego lub po prostu od usługi 'net'. Usługa 'net'
może być zdefiniowana w <path>/etc/conf.d/rc</path> za pomocą zmiennej
<c>RC_NET_STRICT_CHECKING</c> i może oznaczać różne rzeczy.
</p>

<table>
<tr>
  <th>Wartość</th>
  <th>Opis</th>
</tr>
<tr>
  <ti>none</ti>
  <ti>Zakłada, że sieć jest zawsze włączona</ti>
</tr>
<tr>
  <ti>no</ti>
  <ti>
    Oznacza, że co najmniej jedna usługa sieciowa oprócz net.lo musi być
    włączona. Opcja ta może być używana przez właścicieli komputerów
    przenośnych z kartami wifi oraz zwykłymi kartami sieciowymi, w których
    powinno być uruchomione jednocześnie tylko jedno urządzenie.
  </ti>
</tr>
<tr>
  <ti>lo</ti>
  <ti>
    Działa podobnie jak opcja 'no', z tą różnicą, że net.lo również jest
    wliczane. Jest to szczególnie przydatne dla osób, którym nie robi różnicy
    czy uruchamia się jakiekolwiek urządzenie sieciowe.
 </ti>
</tr>
<tr>
  <ti>yes</ti>
  <ti>
    Ta opcja oznacza, że WSZYSTKIE urządzenia sieciowe MUSZĄ być uruchomione,
    aby można było uznać usługę 'net' za działającą.
  </ti>
</tr>
</table>

<p>
Ale co z net.br0 zależnym od net.eth0 oraz net.eth1?
net.eth1 może być urządzeniem bezprzewodowym lub ppp, które potrzebuje
skonfigurowania zanim zostanie uruchomione.
Czynność ta nie może być dokonana w <path>/etc/init.d/net.br0</path>, gdyż jest
to link symboliczny do net.lo.
</p>

<p>
Rozwiązaniem tego problemu jest samodzielne stworzenie funkcji depend() w
<path>/etc/conf.d/net</path>
</p>

<pre caption="Zależność net.br0 w /etc/conf.d/net">
<comment># Można użyć dowolnej zależności (use, after, before) według przykładów znalezionych w skryptach startowych</comment>
depend_br0() {
   need net.eth0 net.eth1
}
</pre>

<p>
Więcej informacji o zależnościach można znaleźć w sekcji dotyczącej
<uri link="?part=2&amp;chap=4#doc_chap4">
tworzenia skryptów inicjacyjnych</uri> w Podręczniku Gentoo.
</p>

</body>
</section>
<section id="variable_name">
<title>Nazwy zmiennych i ich wartości</title>
<body>

<p>
Nazwy zmiennych są dynamiczne. Najczęściej posiadają one strukturę
<c>zmienna_${interfejs|mac|essid|apmac}</c>. Przykładowo, zmienna
<c>dhcpcd_eth0</c> przechowuje wartość dla opcji dhcpcd dla interfejsu eth0, zaś
<c>dhcpcd_essid</c> przechowuje wartości dla opcji dhcpcd gdy interfejs podłączy
się do essida o nazwie "essid".
</p>

<p>
Jednakże, nie ma zasady mówiącej o tym, iż nazwy interfejsów muszą mieć format
ethx. Wiele urządzeń bezprzewodowych posiadają nazwy takie jak wlanx, rax, jak
również eth.x Dodatkowo, niektóre interfejsy sieciowe zdefiniowane przez
użytkowników, takie jak mostki, mogą posiadać dowolną nazwą, np. foo. Aby
urozmaicić życie, bezprzewodowe punkty dostępu mogą mieć nazwy ze znakami nie
alfanumerycznymi - jest to ważne, gdyż część opcji można konfigurować dla
konkretnego ESSIDa.
</p>

<p>
Na domiar złego, Gentoo używa zmiennych bashowych do kontrolowania sieci - a
bash nie potrafi korzystać z niczego co pochodzi spoza angielskich znaków
alfanumerycznych. Aby ominąć te ograniczenie, każdy znak pochodzący spoza znaków
dopuszczalnych zamieniany jest na znak _.
</p>

<p>
Kolejnym ograniczeniem powłoki bash jest to, że niektóre ze znaków muszą być
specjalnie cytowane, czyli musi pojawić się przed nimi symbol "\". Znaki,
których to dotyczy to <c>"</c>, <c>'</c> oraz <c>\</c>.

Kolejnym ograniczeniem basha jest zawartość zmiennych - niektóre znaki muszą być
eskejpowane. Można to osiągnąć poprzez zastosowanie znaku \ przed znakiem który
musi być tak potraktowany. Znaki które potrzebują stosowania uciekania to:
<c>"</c>, <c>'</c> oraz  <c>\</c>.
</p>

<p>
W poniższym przykładzie, zostaje użyty bezprzewodowy ESSID z najszerszym
możliwym zestawem znaków. Zostanie użyty ESSID <c>My "\ NET</c>:
</p>

<pre caption="przykład nazewnictwa zmiennej">
<comment># Poniższe działa, ale domena jest nieprawidłowa</comment>
dns_domain_My____NET="My \"\\ NET"

<comment># Powyższe ustawienia ustawiają domenę dns jako My "\ NET gdy karta
#bezprzewodowa połączy się z punktem dostępu którego ESSID to My "\
#NET</comment>
</pre>

</body>
</section>
</sections>
