<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-net-functions.xml,v 1.5 2005/10/11 20:19:06 rane Exp $ -->

<sections>

<version>1.1</version>
<date>2005-06-14</date>

<section>
<title>Standardowe zaczepy funkcji</title>
<body>

<p>
Można zdefiniować cztery funkcje, które będą uruchamiane przy okazji operacji
start/stop. Początkowo funkcje są uruchamiane razem z nazwą interfejsu tak, aby
jedna funkcja mogła kontrolować wiele urządzeń.
</p>

<p>
Wartości jakie są zwracane po wykonaniu funkcji preup oraz predown powinny być
równe 0 (sukces), aby powiadomić, że konfiguracja urządzenia mogła być
kontynuowana. Jeżeli funkcja preup zwróci wartość różną od 0, konfiguracja
zostanie przerwana. Jeżeli funkcja predown zwróci wartość różną od zera, to
niemożliwa będzie dalsza dekonfiguracja urządzenia.
</p>

<p>
Wartości jakie są zwracane po wykonaniu funkcji postup oraz postdown są
ignorowane, gdyż nic nie jest wykonywane w przypadku niepowodzenia.
</p>

<p>
<c>${IFACE}</c> jest ustawione jako nazwa urządzenia, które jest
włączane/wyłączane.
<c>${IFVAR}</c> to <c>${IFACE}</c> przekonwertowane do zmiennej akceptowanej
przez bash
</p>

<pre caption="Przykłady funkcji pre/post up/down">
preup() {
   <comment># Sprawdza czy istnieje link na interfejsie, który jest
   # uruchamiany. Ta opcja działa jedynie na kilku urządzeniach
   # sieciowych i wymaga, aby pakiet mii-diag był zainstalowany</comment>
   if mii-tool ${IFACE} 2> /dev/null | grep -q 'no link'; then
      ewarn "Nie ma linku na ${IFACE}, przerywam konfigurację"
      return 1
   fi

   <comment># Sprawdza czy istnieje link na interfejsie przed jego
   # uruchomieniem. Ta opcja działa tylko na niektórych urządzeniach
   # sieciowych i wymaga, aby pakiet ethtool był zainstalowany</comment>
   if ethtool ${IFACE} | grep -q 'Link detected: no'; then
      ewarn "Brakuje linku na ${IFACE}, przerywam konfigurację"
      return 1
   fi

   <comment># Należy pamiętać o zwróceniu wartości 0 w przypadku powodzenia</comment>
   return 0
}

predown() {
   <comment># Domyślny skrypt sprawdza czy istnieje katalog główny NFS i
   # nie zezwala na wyłączenie interfejsów w takim przypadku. Należy
   # zauważyć, że jeśli określi się własną funkcję predown(), to właściwość
   # ta zostanie usunięta. Poniżej znajduje się ten skrypt, jeśli okazałoby
   # się, że jest nadal potrzebny...</comment>
   if is_net_fs /; then
      eerror "katalog główny jest zamontowany przez sieć -- nie można zatrzymać ${IFACE}"
      return 1
   fi

   <comment># Należy pamiętać o zwróceniu wartości 0 w przypadku powodzenia</comment>
   return 0
}

postup() {
   <comment># Ta funkcja zostanie użyta dla przykładu, aby zarejestrować
   # interfejs z usługą DNS. Inną możliwością jest np. wysłanie wiadomości
   # mailowej z informacją o uruchomieniu interfejsu</comment>
   return 0
}

postdown() {
   <comment># Ta funkcja jest tu tylko dla zasady... Jeszcze nie
   # wiadomo co fajnego można z nią zrobić ;-)</comment>
   return 0
}
</pre>

</body>
</section>

<section>
<title>Funkcje dla sieci bezprzewodowych</title>
<body>

<note>
Poniższe funkcje nie zadziałają z WPA Supplicant, ale zmienne<c>${ESSID}</c> oraz
<c>${ESSIDVAR}</c> są dostępne w funkcji postup().
</note>

<p>
Można zdefiniować dwie funkcje, które zostaną uruchomione razem z powiązaną
funkcją. Funkcje te są uruchamiane najpierw z nazwą interfejsu, aby jedna
z nich mogła obsługiwać wiele urządzeń.
</p>

<p>
Zwracane wartości dla funkcji uruchamianych przed uruchomieniem urządzenia
powinny być równe 0 (sukces), aby wskazać, że konfiguracja może być kontynuowana.
Jeżeli zostanie zwrócona wartość różna od zera, konfiguracja zostanie przerwana.
</p>

<p>
Zwracane wartości dla funkcji uruchamianych po starcie urządzenia są
ignorowane gdyż i tak nie mają wpływu na dalszą konfigurację.
</p>

<p>
<c>${ESSID}</c> jest równe wartości ESSID punktu dostępu z którym dokonywane
jest połączenie. <c>${ESSIDVAR}</c> jest równe <c>${ESSID}</c> przekonwertowane
do zmiennej akceptowanej przez powłokę bash
</p>

<pre caption="Funkcje pre/post association">
preassociate() {
   <comment># Poniższe linijki dodają dwie zmienne leap_user_ESSID oraz
   # leap_pass_ESSID. Jeżeli obie są skonfigurowane dla ESSIDa z którym są
   # połączone, uruchamiany jest skrypt CISCO LEAP</comment>

   local user pass
   eval user=\"\$\{leap_user_${ESSIDVAR}\}\"
   eval pass=\"\$\{leap_pass_${ESSIDVAR}\}\"

   if [[ -n ${user} &amp;&amp; -n ${pass} ]]; then
      if [[ ! -x /opt/cisco/bin/leapscript ]]; then
         eend "For LEAP support, please emerge net-misc/cisco-aironet-client-utils"
         return 1
      fi
      einfo "Waiting for LEAP Authentication on \"${ESSID//\\\\//}\""
      if /opt/cisco/bin/leapscript ${user} ${pass} | grep -q 'Login incorrect'; then
         ewarn "Login Failed for ${user}"
         return 1
      fi
   fi

   return 0
}

postassociate() {
   <comment># Ta funkcja jest tu tylko dla zasady... Jeszcze nie
   # wiadomo co fajnego można z nią zrobić ;-)</comment>

   return 0
}
</pre>

<note>
<c>${ESSID}</c> oraz <c>${ESSIDVAR}</c> są niedostępne dla funkcji predown()
oraz postdown()
</note>

</body>
</section>

</sections>
