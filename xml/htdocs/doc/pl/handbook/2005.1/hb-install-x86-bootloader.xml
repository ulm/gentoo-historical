<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/2005.1/hb-install-x86-bootloader.xml,v 1.3 2006/02/03 18:13:49 shadoww Exp $ -->

<sections>
<version>5.4</version>
<date>2006-01-19</date>

<section>
<title>Podejmowanie decyzji</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Po skonfigurowaniu jądra i modyfikacji odpowiednich plików konfiguracyjnych
systemu, można przejść do etapu instalacji programu, który uruchomi jądro w
momencie uruchomienia systemu. Taki program nazywa się <e>bootloader</e>. Dla
architektury x86, Gentoo Linux używa dwóch takich programów: <uri
link="#grub">GRUB</uri> oraz <uri link="#lilo">LILO</uri>. Przed instalacją
któregokolwiek z nich, zostanie opisane jak należy skonfigurować bufor ramki -
zakładając oczywiście, że będzie on używany.
</p>

</body>
</subsection>
<subsection>
<title>Opcjonalnie: Bufor ramki</title>
<body>

<p>
<e>Jeżeli</e> jądro zostało skompilowane z obsługą bufora ramki, należy dodać
parametr <c>vga</c> w odpowiednim miejscu pliku konfiguracyjnego bootloadera.
</p>

<p>
Najważniejszą informacją jaką należy posiadać przed rozpoczęciem konfiguracji
jest nazwa używanego urządzenia bufora ramki. Niektóre jądra, takie jak na
przykład <c>gentoo-sources</c>, domyślnie posiadają obsługę <c>vesafb-tng</c>
jako <e>sterownika typu VESA</e>. Użytkownicy <c>vesafb-tng</c> nie muszą
dodawać parametru <c>vga</c>. Pozostali, używający <c>vesafb</c> wciąż muszą go
dopisywać.
</p>

<p>
Za pomocą parametru <c>vga</c> określa się rozdzielczość oraz głębię kolorów
ekranu bufora ramki. Każdy numer określa inną głębię i rozdzielczość, ich lista
znajduje się w dokumencie
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path>, który instaluje się w
systemie wraz ze źródłami jądra.
</p>

<p>
Oto tabela parametrów <c>vga</c>, która zawiera wszystkie dostępne
rozdzielczości i głębie kolorów:
</p>

<table>
<tr>
  <ti></ti>
  <th>640x480</th>
  <th>800x600</th>
  <th>1024x768</th>
  <th>1280x1024</th>
</tr>
<tr>
  <th>256</th>
  <ti>0x301</ti>
  <ti>0x303</ti>
  <ti>0x305</ti>
  <ti>0x307</ti>
</tr>
<tr>
  <th>32k</th>
  <ti>0x310</ti>
  <ti>0x313</ti>
  <ti>0x316</ti>
  <ti>0x319</ti>
</tr>
<tr>
  <th>64k</th>
  <ti>0x311</ti>
  <ti>0x314</ti>
  <ti>0x317</ti>
  <ti>0x31A</ti>
</tr>
<tr>
  <th>16M</th>
  <ti>0x312</ti>
  <ti>0x315</ti>
  <ti>0x318</ti>
  <ti>0x31B</ti>
</tr>
</table>

<p>
Parametr <c>video</c> odpowiada za opcje wyświetlania bufora ramki. Jest mu
niezbędna nazwa sterownika bufora ramki (<c>vesafb</c> dla jąder 2.6 lub
<c>vesa</c> w 2.4) oraz opcje z jakimi ma być uruchamiany bufor. Wszystkie
zmienne znajdują się w pliku
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path>, oto trzy najważniejsze
z nich:
</p>

<table>
<tr>
  <th>Kontrolka</th>
  <th>Opis</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    Włącza zawijanie pamięci karty graficznej
  </ti>
</tr>
<tr>
  <ti>mtrr</ti>
  <ti>
    Włącza rejestry MTRR
  </ti>
</tr>
<tr>
  <ti><c>mode</c></ti>
  <ti>
    (tylko dla <c>vesafb-tng</c>)<br/> Pozwala na ustawienie rozdzielczości,
    głębi kolorów oraz częstotliwości odświeżania. Na przykład
    <c>1024x768-32@85</c> ustawi rozdzielczość 1024x768, 32 bitową głębię
    kolorów i częstotliwość odświeżania 85 Hz.
  </ti>
</tr>
</table>

<p>
Wynik tych działań powinien wyglądać mniej więcej tak: <c>vga=0x318
video=vesafb:mtrr,ywrap</c> lub <c>video=vesafb:mtrr,ywrap,1024x768-32@85</c>.
Warto zapamiętać te ustawienia, wkrótce będą potrzebne.
</p>

<p>
Kolejny etap to instalacja <uri link="#grub">GRUB</uri> <e>lub</e> <uri
link="#lilo">LILO</uri>.
</p>


</body>
</subsection>
</section>
<section id="grub">
<title>Domyślnie: Użycie programu GRUB</title>
<subsection>
<title>Wyjaśnienie terminologii związanej z GRUB</title>
<body>

<p>
Najważniejszym czynnikiem prowadzącym do zrozumienia programu GRUB jest pojęcie
jego sposobu odnoszenia się do dysków i partycji.  Linuksowa partycja
<path>/dev/hda1</path> jest określana przez GRUB jako <path>(hd0,0)</path>.
Należy zwrócić uwagę na nawiasy po obu stronach <path>hd0,0</path> - ich użycie
jest wymagane.
</p>

<p>
Dyski twarde są liczone od zera, a nie od "a". Partycje także zaczynają się od
zera, a nie od jedynki. Należy być świadomym również tego, że w grupie urządzeń
pamięci masowej tylko twarde dyski są liczone, nie ma to natomiast miejsca w
przypadku napędów ATAPI-IDE takich jak cdromy i nagrywarki. Ta sama sytuacja ma
miejsce w przypadku dysków SCSI.  (Normalnie otrzymują one wyższe numery niż
dyski IDE, z wyjątkiem sytuacji, gdy BIOS jest ustawiony na start systemu z
urządzenia SCSI).
</p>

<p>
Zakładając, że w komputerze jest zainstalowany dysk twardy oznaczony jako
<path>/dev/hda</path>, odtwarzacz cdrom <path>/dev/hdb</path>, nagrywarka
<path>/dev/hdc</path>, drugi dysk twardy <path>/dev/hdd</path> i nie ma żadnego
dysku SCSI, urządzenie <path>/dev/hdd7</path> jest rozumiane jako
<path>(hd1,6)</path>. Całość wygląda dość pokrętnie, jednakże GRUB oferuje
mechanizm uzupełniania wiersza polecenia klawiszem TAB, co z pewnością jest
wybawieniem dla tych, którzy mają dużo dysków twardych i partycji, a gubią się
nieco w sposobie numeracji używanym przez program GRUB.
</p>

<p>
Nadeszła pora na zainstalowanie GRUB-a.
</p>

</body>
</subsection>
<subsection>
<title>Instalowanie GRUB-a</title>
<body>

<p>
Po pierwsze należy zainstalować program GRUB:
</p>

<pre caption="Instalowanie GRUB-a">
# <i>emerge grub</i>
</pre>

<p>
GRUB został zainstalowany, teraz należy go jeszcze skonfigurować i umieścić w
MBR, tak by automatycznie uruchamiał nowo zainstalowane jądra. Najpierw przy
pomocy nano, lub dowolnego innego edytora należy utworzyć plik
<path>/boot/grub/grub.conf</path>:
</p>

<pre caption="Tworzenie /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Następnie należy dokonać edycji pliku <path>grub.conf</path>. Poniżej znajdują
się dwa przykłady plików <path>grub.conf</path>, odpowiadające schematowi
partycjonowania użytemu w tym przewodniku. Tylko pierwszy z nich został
wyczerpująco opatrzony komentarzami.
</p>

<ul>
  <li>
   Pierwszy <path>grub.conf</path> jest dla osób, które nie wykorzystały
   programu <c>genkernel</c> do budowania jądra
  </li>
  <li>
    Drugi <path>grub.conf</path> jest dla tych, którzy użyli programu
    <c>genkernel</c> do zbudowania jądra.
  </li>
</ul>

<pre caption="grub.conf dla nie używających genkernela">
<comment># Która pozycja ma być uruchamiana domyślnie. 0 oznacza pierwszą, 1 drugą itd.</comment>
default 0
<comment># Ile sekund oczekiwać przed uruchomieniem pozycji domyślnej.</comment>
timeout 30
<comment># Ładny obrazek na zaostrzenie apetytu :)
# Zakomentuj jeśli nie masz zainstalowanej karty graficznej</comment>
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux 2.6.12-r10
<comment># Partycja na której znajduje się obraz jądra (lub system operacyjny) </comment>
root (hd0,0)
kernel /boot/kernel-2.6.12-gentoo-r10 root=/dev/hda3

<comment># Następne trzy linie są potrzebne tylko gdy będzie uruchamiany również system Windows.</comment>
<comment># W tym przypadku Windows znajduje się na /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
chainloader +1
</pre>

<pre caption="grub.conf dla użytkowników genkernela">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux 2.6.12-r10
root (hd0,0)
kernel /boot/kernel-genkernel-x86-2.6.12-gentoo-r10 root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev
initrd /boot/initramfs-genkernel-x86-2.6.12-gentoo-r10

<comment># Tylko, gdy będą uruchamiane dwa systemy</comment>
title=Windows XP
rootnoverify (hd0,5)
chainloader +1
</pre>

<p>
Jeżeli podział na partycje jest inny niż w niniejszym przykładzie lub zostały
użyte inne obrazy jądra, należy dokonać niezbędnych poprawek. Warto pilnować,
aby wszystko co dotyczy urządzenia z GRUB'em (np. <path>(hd0,0)</path>) było
względne w stosunku do punktu montowania, a nie partycji root. Innymi słowy,
<path>(hd0,0)/grub/splash.xpm.gz</path> w rzeczywistości znaczy
<path>/boot/grub/splash.xpm.gz</path>, gdyż <path>(hd0,0)</path> to partycja
<path>/boot</path>.
</p>

<p>
Ponadto jeśli wybrano inny schemat partycjonowania, a <path>/boot</path> nie
znajduje się na osobnej partycji, prefiks <path>/boot</path> użyty w powyższych
przykładach jest wciąż wymagany. Jeśli natomiast wybrany schemat
partycjonowania jest taki jak ten w Podręczniku, prefiks w niczym nie
przeszkadza, należy tylko dodatkowo utworzyć odpowiednie dowiązanie symboliczne
o nazwie <path>boot</path>. W skrócie: powyższe przykładowe konfiguracje będą
działać bez względu na to czy utworzono osobną partycję <path>/boot</path>, czy
nie.
</p>

<p>
Jeżeli przy uruchomieniu systemu zachodzi potrzeba przekazania do jądra
dodatkowych opcji, wystarczy dopisać je na końcu polecenia kernel. W tym
przykładzie został już dodany jeden parametr (<c>root=/dev/hda3</c> lub
<c>real_root=/dev/hda3</c>), który można wzbogacić o kolejne. Przykładowo
posłużymy się opcją <c>vga</c>, dotyczącą bufora ramki, która została opisana
wcześniej:
</p>

<p>
Użytkownicy jąder 2.6.7 i nowszych, którzy przy pomocy przełącznika ograniczyli
wielkość dysku, ponieważ ich BIOS nie jest w stanie współpracować z większymi
napędami mogą dodać opcję <c>hdx=stroke</c>, aby korzystać z całego dostępnego
na urządzeniu miejsca.
</p>

<p>
Użytkownicy programu <c>genkernel</c> powinni wiedzieć, że jądra, które
zbudowali używają tych samych opcji bootowania co LiveCD. Na przykład jeżeli
komputer ma zainstalowane urządzenie SCSI, należy dodać parametr <c>doscsi</c>.
</p>

<p>
Następnie trzeba zapisać plik <path>grub.conf</path> i opuścić edytor. Kolejnym
krokiem będzie dopisanie GRUB-a do MBR.
</p>

<p>
Twórcy GRUB-a zalecają użycie <c>grub-install</c>. Czasem jednak program ten z
jakiegoś powodu odmawia współpracy. Mimo to, wciąż pozostaje możliwość ręcznego
zainstalowania GRUB-a.
</p>

<p>
Teraz można przejść do paragrafu <uri link="#grub-install-auto">Domyślnie:
Instalowanie GRUB-a przy pomocy grub-install</uri> lub <uri
link="#grub-install-manual"> Alternatywnie: Ręczne instalowanie GRUB-a</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Domyślnie: Instalacja GRUB-a przy pomocy grub-install</title>
<body>

<p>
Żeby zainstalować GRUB-a należy wpisać komendę <c>grub-install</c>. Nie
zadziała to jednak bez pewnych zmian, bo wciąż działamy w chrootowanym
środowisku. Należy stworzyć plik <path>/etc/mtab</path> (plik z informacjami
dotyczącymi zamontowanych napędów). Na szczęście jest na to prosta metoda,
wystarczy skopiować plik <path>/proc/mounts</path> do <path>/etc/mtab</path>,
pomijając jedynie linię <c>rootfs</c> - o ile nie stworzono osobnej partycji
rozruchowej.  W obu przypadkach zadziała następujące polecenie:
</p>

<pre caption="Uaktualnianie /etc/mtab">
# <i>grep -v rootfs /proc/mounts &gt; /etc/mtab</i>
</pre>

<p>
Następnie przy pomocy <c>grub-install</c> zainstalowany zostaje GRUB:
</p>

<pre caption="Uruchamianie grub-install">
# <i>grub-install --root-directory=/boot /dev/hda</i>
</pre>

<p>
Więcej informacji o GRUB-ie można znaleźć w dokumentach: <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> i <uri
link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

<p>
Następnie należy przejść do części <uri link="#reboot">Ponowne uruchamianie
systemu</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Alternatywnie: Ręczna instalacja GRUB'a</title>
<body>

<p>
Aby zacząć, należy wpisać polecenie <c>grub</c>. Znak zachęty zmieni się na
<path>grub&gt;</path>. Teraz należy wprowadzić serię odpowiednich komend, aby
GRUB został zapisany na dysku. Komendy te zostaną opisane poniżej.
</p>

<pre caption="Uruchamianie powłoki GRUB">
# <i>grub</i>
</pre>

<note>
Jeżeli komputer nie ma zainstalowanej stacji dyskietek, należy dodać opcję
<c>--no-floppy</c> do powyższego polecenia, żeby GRUB nie marnował czasu na
poszukiwanie nieistniejącego napędu.
</note>

<p>
Wyobraźmy sobie, że chcemy zainstalować GRUB tak aby odczytywał informacje z
bootowalnej partycji <path>/dev/hda1</path> i instalował swój rekord rozruchowy
w MBR twardego dysku, tak żeby pierwszą rzeczą jaką zobaczymy po uruchomieniu
komputera był znak zachęty GRUB-a. Oczywiście należy odpowiednio dostosować
wszystkie opcje do używanej konfiguracji.
</p>

<p>
Mechanizm uzupełniania składni jest bardzo pomocny przy konfigurowaniu GRUB-a.
Na przykład wpisując "<c>root (</c>" i wciskając TAB można zobaczyć wszystkie
urządzenia (np. <path>hd0</path>). Jeśli zostanie wpisane "<c>root (hd0,</c>" i
potem zostanie naciśnięty TAB, ukaże się lista wszystkich dostępnych partycji na
urządzeniu (np. <path>hd0,0</path>).
</p>

<p>
Przy pomocy tego systemu skonfigurowanie GRUB-a powinno być proste.
</p>

<pre caption ="Instalacja GRUB w głównym sektorze rozruchowym">
grub&gt; <i>root (hd0,0)</i>          <comment>(Odpowiednia partycja /boot)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Instalacja GRUB-a w MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Opuszczenie powłoki GRUB)</comment>
</pre>

<note>
W przypadku konieczności zainstalowania GRUB poza MBR, należy zmienić komendę
<c>setup</c> tak by wskazywała na odpowiednie urządzenie. Na przykład dla GRUB-a
zainstalowanego w <path>/dev/hda3</path> będzie to <c>setup (hd0,2)</c>.
</note>

<p>
Więcej informacji można znaleźć na stronach: <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> i <uri
link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

<p>
Następnie można przejść do sekcji <uri link="#reboot">Ponowne uruchamianie
systemu</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatywnie: Używanie LILO</title>
<subsection>
<title>Instalowanie LILO</title>
<body>

<impo>
LILO może być użyte tylko dla architektury x86!
</impo>

<p>
LILO, czyli LInuxLOader to program naprawdę wypróbowany i używany od bardzo
dawna przez bardzo wielu użytkowników. Brakuje mu jednak niektórych cech
posiadanych przez program GRUB, co jest, między innymi, powodem rosnącej
popularności tego drugiego.  Fakt, że na niektórych systemach LILO działa, a
GRUB nie, powoduje, iż LILO jest ciągle w użyciu. Oczywiście nie jest to jedyny
powód - niektórzy po prostu lepiej znają LILO i wolą przy nim pozostać, zamiast
uczyć się obsługi całkiem nowego programu. My jak zawsze wybór pozostawiamy
użytkownikom, Gentoo wspiera obydwa programy.
</p>

<p>
Instalacja LILO jest prosta, używamy do tego polecenia <c>emerge</c>.
</p>

<pre caption="Instalowanie LILO">
# <i>emerge lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Konfigurowanie LILO</title>
<body>

<p>
Aby skonfigurować LILO, należy utworzyć plik <path>/etc/lilo.conf</path>. Można
to zrobić poprzez uruchomienie ulubionego edytora (w tym Podręczniku
konsekwentnie używamy <c>nano</c>) i w ten sposób stworzyć ten plik.
</p>

<pre caption = "Tworzenie /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Kilka rozdziałów temu prosiliśmy o zapamiętanie nazwy utworzonego obrazu jądra.
W naszym przykładowym <path>lilo.conf</path> użyty zostanie uprzednio
zaprezentowany schemat partycjonowania. Przygotowane zostały dwie części:
</p>

<ul>
  <li>
    Pierwsza dla tych, którzy nie skorzystali z programu <c>genkernel</c> przy
    budowaniu jądra.
  </li>
  <li>
    Druga dla używających <c>genkernela</c>.
  </li>
</ul>

<p>
Należy upewnić się, że używamy nazwy <e>naszego</e> obrazu jądra oraz z nazwy
<e>naszego</e> pliku initrd, jeśli z niego korzystamy.
</p>

<note>
Jeśli system plików katalogu /root to JFS, <e>konieczne</e> jest dodanie linii
<c>append="ro"</c> dla każdego obrazu jądra, ponieważ JFS musi odtworzyć swoje
logi przez umożliwieniem zamontowania urządzenia do zapisu/odczytu.
</note>

<pre caption = "Przykładowy /etc/lilo.conf">
boot=/dev/hda             <comment># Instalacja LILO w MBR</comment>
prompt                    <comment># Dajemy użytkownikowi możliwość wyboru innej pozycji</comment>
timeout=50                <comment># Czekamy 5 sekund przed uruchomieniem domyślnej pozycji</comment>
default=gentoo            <comment># Kiedy oczekiwanie się zakończy, uruchamiana jest pozycja "gentoo"</comment>
<comment># Tylko jeśli używany jest bufor ramki. W przeciwnym wypadku należy usunąć następującą linię:</comment>
vga=788                   <comment># Ustawienia bufora ramki. Można dopasować wedle uznania.</comment>

<comment># Dla niekorzystających z genkernela</comment>
image=/boot/kernel-2.6.12-gentoo-r10
label=gentoo            <comment># Nazwa, jaką mianujemy tę pozycję</comment>
read-only               <comment># Zaczynamy z partycją root tylko do odczytu. Nie zmieniać!</comment>
root=/dev/hda3          <comment># Umiejscowienie głównego systemu plików</comment>

<comment># Dla użytkowników genkernela</comment>
image=/boot/kernel-genkernel-x86-2.6.12-gentoo-r10
label=gentoo
read-only
root=/dev/ram0
append="init=/linuxrc real_root=/dev/hda3"
initrd=/boot/initramfs-genkernel-x86-2.6.12-gentoo-r10

<comment># Następne dwie linie są podane na wypadek, gdybyśmy chcieli uruchamiać także system Windows.</comment>
<comment># W tym przypadku, Windows mieści się na /dev/hda6.</comment>
other=/dev/hda6
label=windows
</pre>

<note>
Jeśli używany jest inny schemat partycjonowania i/lub obrazu jądra, należy
dokonać niezbędnych poprawek.
</note>

<p>
Jakiekolwiek dodatkowe parametry startowe jądra dodaje się po słowie kluczowym
<c>append</c>. Jako przykład, podajemy opcję <c>acpi=off</c> służącą
do wyłączenia obsługi ACPI:
</p>

<pre caption="Dodawanie funkcji jądra poprzez linię append">
image=/boot/kernel-2.6.12-gentoo-r10
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="vga=788"</i>
</pre>

<p>
W przypadku używania jądra 2.6.7 lub nowszego i ograniczenia przy pomocy
przełączników rozmiaru twardego dysku, gdy BIOS nie obsługuje tak dużych
napędów, należy dopisać do linii append polecenie <c>hdx=stroke</c>.
</p>

<p>
Użytkownicy programu <c>genkernel</c> powinni wiedzieć, że jądra, które
zbudowali, używają tych samych opcji bootowania co płyty instalacyjne. Na
przykład w przypadku korzystania z urządzenia SCSI należy dodać parametr
<c>doscsi</c>.
</p>

<p>
Po zakończonej konfiguracji, należy zapisać plik i opuścić edytor. By zakończyć
wystarczy uruchomić program <c>/sbin/lilo</c>, LILO zastosuje ustawienia z
<path>/etc/lilo.conf</path> (tzn. zainstaluje się na dysku). Przy każdej zmianie
w /etc/lilo.conf oraz przy zmianie jądra, trzeba ponownie wykonać polecenie
<c>/sbin/lilo</c>.
</p>

<pre caption = "Kończenie instalacji LILO">
# <i>/sbin/lilo</i>
</pre>

<note>
Po instalacji nowego jądra nie trzeba ręcznie kopiować plików. Dokona tego
polecenie <c>make install</c> wprowadzone zaraz po przygotowaniu obrazu jądra.
Umieści ono automatycznie nowe jądro w odpowiednim miejscu i dokona niezbędnych
poprawek w konfiguracji LILO.
</note>

<p>
Teraz należy przejść do rozdziału <uri link="?part=1&amp;chap=10">Instalacja
niezbędnych narzędzi systemowych</uri>.
</p>

</body>
</subsection>
</section>
<section id="reboot">
<title>Ponowne uruchamianie systemu</title>
<subsection>
<body>

<p>
Należy opuścić teraz chroot i odmontować wszystkie zamontowane partycje.
Następnie trzeba wpisać komendę <c>reboot</c>.
</p>

<pre caption="Odmontowywanie partycji i ponowne uruchamianie komputera">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Trzeba pamiętać o usunięciu płyty z napędu, bo zamiast nowiutkiego Gentoo znów
zobaczymy system z płyty instalacyjnej. ;)
</p>

<p>
Następnie wystarczy zakończyć proces instalacji zgodnie ze wskazówkami opisanymi
w rozdziale <uri link="?part=1&amp;chap=11">Finalizowanie instalacji
Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
