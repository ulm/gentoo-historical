<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/2005.1/hb-install-x86-kernel.xml,v 1.2 2005/12/08 01:25:41 rane Exp $ -->
<sections>

<version>5.4</version>
<date>2005-11-24</date>

<section>
<title>Strefa czasowa</title>
<body>

<p>
System musi wiedzieć gdzie się znajduje, musimy zatem poprawnie skonfigurować
jego ustawienia strefy czasowej. Zaczynamy od wyszukania odpowiedniej dla nas
strefy w katalogu <path>/usr/share/zoneinfo</path>, a następnie kopiujemy do
<path>/etc/localtime</path>. Należy unikać stref czasowych o nazwie
<path>/usr/share/zoneinfo/Etc/GMT*</path>, ponieważ ich nazwy mogą być mylące,
na przykład <path>GMT-8</path> jest w rzeczywistości GMT+8.
</p>

<pre caption="Ustawianie strefy czasowej">
# <i>ls /usr/share/zoneinfo</i>
<comment>(przy założeniu, że nasza strefa to "Poland")</comment>
# <i>cp /usr/share/zoneinfo/Poland /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalowanie źródeł</title>
<subsection>
<title>Wybór jądra</title>
<body>

<p>
Jądro Linux jest sercem każdej dystrybucji i stanowi interfejs pomiędzy
programami użytkownika, a sprzętem. Gentoo pozwala użytkownikom na wybranie
spośród kilku różnych jego źródeł. Pełna ich lista wraz z opisami znajduje się
w dokumencie <uri link="/doc/pl/gentoo-kernel.xml">Gentoo Linux Kernel
Guide</uri>.
</p>

<p>
Dla architektury x86 głównym wspieranym jądrem jest <c>gentoo-sources</c>. Jest
ono oparte na oficjalnych źródłach Linuksa, jednak posiada poprawki związane ze
stabilnością, bezpieczeństwem i kompatybilnoscią, wprowadzone przez deweloperów
Gentoo. Alternatywnie można skorzystać ze źródeł pozbawionych poprawek. Znajdują
się one w pakiecie <c>vanilla-sources</c>.
</p>

<p>
Oba pakiety źródeł oprate są na jądrze serii 2.6. Jeśli chcemy użyć kernela
serii 2.4, konieczne jest połączenie z internetem, gdyż te źródła nie znajdują
się na płycie instalacyjnej.
</p>

<p>
Wybrane źródła instaluje się przy pomocy polecenia <c>emerge</c>. Zmienna
<c>USE="-doc"</c> zapobiegnie instalacji zbędnych na tym etapie zależności,
takich jak np. xorg-x11.
</p>

<pre caption="Instalowanie źródeł jądra">
# <i>USE="-doc" emerge gentoo-sources</i>
</pre>

<p>
W katalogu <path>/usr/src</path>, pod nazwą <c>linux</c>, powinno znajdować się
mniej więcej takie dowiązanie symboliczne wskazujące na aktualne źródła:
</p>

<pre caption="Podgląd dowiązania symbolicznego do źródeł jądra">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root    root     12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.12-gentoo-r10
</pre>

<p>
Jeśli informacje z dowiązania nie pokrywają się z rzeczywistością (np. wskazuje na
inne źródła, niż te aktualnie używane) to konieczne będzie jego poprawienie przed
przejściem do dalszych etapów instalacji.
</p>

<pre caption="Zmiana dowiązania symbolicznego do źródeł jądra">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.12-gentoo-r10 linux</i>
</pre>

<p>
Pora na skonfigurowanie i skompilowanie źródeł jądra. Można użyć do tego
programu <c>genkernel</c>, który zbuduje uniwersalne jądro, takie jak
to znajdujące się na płytach instalacyjnych. Można również przeprowadzić cały
proces ręcznie, co pozwoli na lepsze dostosowanie jądra do indywidualnych
potrzeb użytkownika. Najpierw omówimy tę drugą, znacznie lepszą metodę.
</p>

<p>
Proces ręcznej konfiguracji jądra został opisany w paragrafie <uri
link="#manual">Domyślnie: ręczna konfiguracja</uri>. Opis użycia
<c>genkernela</c> znajduje się w części <uri link="#genkernel">Alternatywnie:
użycie genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Domyślnie: Ręczna konfiguracja</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Ręczna konfiguracja jądra to zwykle najtrudniejsze zadanie przed jakim musi
stanąć każdy początkujący użytkownik Linuksa. Zwykle po skompilowaniu kilku
zapomina się, że kiedykolwiek uważało się to za trudną czynność. :]
</p>

<p>
Nie sposób jednak zaprzeczyć, że należy dobrze znać swój komputer, aby móc
prawidłowo skonfigurować jądro. Większość informacji można zdobyć poprzez
instalację pakietu pciutils (<c>emerge pciutils</c>) zawierającego program
<c>lspci</c>. Dzięki temu będzie możliwe używanie <c>lspci</c> wewnątrz
chrootowanego środowiska. Podczas pracy z tym programem można bezpiecznie
zignorować wszelkie ostrzeżenia związane z <e>pcilib</e> (jak np.
"pcilib: cannot open /sys/bus/pci/devices). Ponadto można również uruchomić
<c>lspci</c> poza środowiskiem chroot. Powinno dać to taki sam efekt. Dodatkowe
informacje o sterownikach, które należy włączyć do jądra można uzyskać dzięki
poleceniu <c>lsmod</c>, które pokaże listę modułów jakie załadował system płyty
instalacyjnej.
</p>

<p>
Kiedy już zbierzemy wszystkie informacje przechodzimy do katalogu ze
źródłami i wpisujemy polecenie <c>make menuconfig</c>. Uruchomi się menu
konfiguracyjne oparte na bibliotekach graficznych ncurses.
</p>

<pre caption="Wywoływanie menu konfiguracyjnego">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Cała konfiguracja została podzielona na kilka sekcji, co znacznie ułatwia
odnalezienie i wybranie odpowiednich sterowników. Poniżej wymieniamy wszystkie
opcje, które należy włączyć, aby Gentoo mogło prawidłowo funkcjonować.
</p>

</body>
</subsection>
<subsection>
<title>Zaznaczanie wymaganych ustawień</title>
<body>

<p>
Wszystkie sterowniki potrzebne do wystartowania systemu
(takie jak kontroler SCSI) muszą być <e>wkompilowane na stałe</e> w jądro - nie
należy ich dodawać w formie modułów.
</p>

<p>
Na samym początku należy wybrać odpowiednią dla posiadanego sprzętu rodzinę procesorów:
</p>

<pre caption="Ogólne ustawienia; wybór rodziny procesorów">
General setup  ---&gt;
        [*] Support for hot-pluggable devices
Processor type and features ---&gt;
   Subarchitecture Type (PC-compatible)  ---&gt;
  <comment>(Change according to your system)</comment>
  (<i>Athlon/Duron/K7</i>) Processor family
</pre>

<p>
Następnie przechodzimy do <c>File Systems</c> i wybieramy obsługę systemów
plików, z których zamierzamy używać. Jeśli pominiemy ten krok, to Gentoo nie
będzie w stanie zamontować niektórych partycji lub nawet się nie uruchomi.
Sterowniki te również powinny być wkompilowane w jądro na stałe, nie należy ich
dodawać w modułach. Ponadto powinniśmy zaznaczyć opcje <c>/proc file system</c>
i <c>Virtual memory</c>. <e>Nie należy</e> zaznaczać <c>/dev file system</c>.
</p>

<pre caption="Wybór potrzebnych systemów plików">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    &lt;*&gt; /proc file system support
    &lt; &gt; /dev file system support (OBSOLETE)
    &lt;*&gt; Virtual memory file system support (former shm fs)

<comment>(Zaznaczamy opcje odpowiednie dla używanych systemów plików)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Nie zapominajmy o włączeniu DMA dla dysków:
</p>

<pre caption="Włączanie obsługi DMA">
Device Drivers ---&gt;
  ATA/ATAPI/MFM/RLL support ---&gt;
    [*] Generic PCI bus-master DMA support
    [*]   Use PCI DMA by default when available
</pre>

<p>
Użytkownicy łączący się z Internetem za pomocą PPoE i połączeń dial-up powinni
zaznaczyć również:
</p>

<pre caption="Sterowniki niezbędne dla użytkowników PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Obie opcje dotyczące kompresji nie są wprawdzie wymagane, ale również nie
zaszkodzą naszemu systemowi, podobnie zresztą jak opcja <c>PPP over
Ethernet</c>, która jest przydatna tylko gdy skonfiguruje się <c>rp-pppoe</c>
do pracy w trybie PPPoE jądra (kernel mode PPPoE).
</p>

<p>
Należy wkompilować odpowiednie sterowniki dla wszystkich posiadanych kart
sieciowych.
</p>

<p>
Posiadacze procesorów z HyperThreading oraz komputerów wieloprocesorowych powinni
zadbać o to, aby została zaznaczona opcja "Symmetric multi-processing support":
</p>

<pre caption="Włączanie obsługi SMP">
Processor type and features  ---&gt;
  &lt;*&gt; Symmetric multi-processing support
</pre>

<p>
Wszystkie urządzenia działające na USB (jak myszka czy klawiatura) również
wymagają skompilowania właściwych sterowników:
</p>

<pre caption="Aktywowanie obsługi urządzeń wejściowych używających USB">
Device Drivers ---&gt;
USB Support ---&gt;
  &lt;*&gt;   USB Human Interface Device (full HID) support
  [*]   HID input layer support
</pre>

<p>
Jeśli jesteśmy posiadaczami laptopa i potrzebujemy obsługi PCMCIA, musimy
pamiętać o wkompilowaniu jej w jądro. Poza tym konieczne jest włączenie obsługi
mostu PCMCIA znajdującego się w systemie (odpowiednie opcje występują w tym
samym menu konfiguracji).
</p>

<pre caption="Włączanie obsługi PCMCIA">
Bus options (PCI, PCMCIA, EISA, MCA, ISA)  ---&gt;
  PCCARD (PCMCIA/CardBus) support  ---&gt;
    &lt;*&gt; PCCard (PCMCIA/CardBus) support
<comment>(starsze karty wymagają tu opcji 16 bit - zapewne większość użytkowników zechce włączyć tą opcję)</comment>
    &lt;*&gt;   16-bit PCMCIA support
    [*]   32-bit CardBus support
<comment>(wybieramy odpowiednie mostki)</comment>
    --- PC-card bridges
    &lt;*&gt; CardBus yenta-compatible bridge support (NEW)
    &lt;*&gt; Cirrus PD6729 compatible bridge support (NEW)
    &lt;*&gt; i82092 compatible bridge support (NEW)
    &lt;*&gt; i82365 compatible bridge support (NEW)
    &lt;*&gt; Databook TCIC host bridge support (NEW)
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilowanie i instalowanie</title>
<body>

<p>
Po skonfigurowaniu kernela przyszła pora na jego skompilowanie i instalację.
Opuszczamy program konfiguracyjny i rozpoczynamy proces kompilacji:
</p>

<pre caption="Kompilowanie jądra">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Kiedy jądro skończy się kompilować należy przekopiować jego obraz do katalogu
<path>/boot</path>. W przykładzie zakładamy, że właśnie zostały skompilowane
źródła 2.6.12-r10 jądra <c>gentoo-sources</c>. Nieważna jest tu obrazu,
będziemy jej używać wyłącznie przy konfigurowaniu bootloadera.
</p>

<pre caption="Instalowanie jądra">
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.6.12-gentoo-r10</i>
</pre>

<p>
Warto również na wszelki wypadek skopiować do <path>/boot</path> plik
konfiguracyjny jądra.
</p>

<pre caption="Kopia zapasowa pliku konfiguracyjnego jądra">
# <i>cp .config /boot/config-2.6.12-gentoo-r10</i>
</pre>

<p>
Następnie przechodzimy do akapitu dotyczącego <uri
link="#kernel_modules">modułów</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternatywnie: użycie genkernela</title>
<body>

<p>
Ten paragraf jest przeznaczony dla użytkowników, którzy zdecydowali się użyć
programu <c>genkernel</c> do skonfigurowania jądra.
</p>

<p>
Po zainstalowaniu źródeł należy je skonfigurować. Zrobimy to automatycznie przy
pomocy programu <c>genkernel</c>, który wykonuje cały proces dokładnie w ten sam
sposób w jaki jest konfigurowane jądro na płycie instalacyjnej. Konsekwencją
wyboru genkernela jest to, że system będzie zmuszony do wykrywania dostępnego
sprzętu przy każdym uruchomieniu komputera. W związku z tym, że genkernel nie
wymaga od użytkownika żadnych ręcznych poprawek w konfiguracji, jest doskonałym
rozwiązaniem dla tych wszystkich, którzy nie są najmocniejsi w samodzielnym
kompilowaniu jądra.
</p>

<p>
Zanim jednak zdradzimy jak używa się tego cudownego programu musimy wytłumaczyć
jak go zainstalować:
</p>

<pre caption="Instalowanie genkernela">
# <i>emerge genkernel</i>
</pre>

<p>
Kompilujemy jądro przy pomocy polecenia <c>genkernel all</c>. Kompilowanie
zajmie mnóstwo czasu, ponieważ <c>genkernel</c> zawiera niemal wszystkie
dostępne sterowniki.
</p>

<p>
Jeśli na partycji rozruchowej został stworzony inny system plików niż ext2 lub
ext3 to konieczne będzie dodanie potrzebnych sterowników, które można wybrać za
pomocą menu wywołanego poleceniem <c>genkernel --menuconfig all</c>. Sterowniki
te muszą być wkompilowane w jądro <e>na stałe</e>, nie można dodawać ich w
postaci modułów. Użytkownicy EVMS2 lub LVM2 powinni dodać również <c>--evms2</c>
lub <c>--lvm2</c> do listy argumentów.
</p>

<pre caption="Uruchamianie genkernela">
# <i>genkernel all</i>
</pre>

<p>
W toku tego procesu powstanie właściwy plik jądra, initrd (initial root disk)
oraz ogromna rzesza modułów. Nazwy plików jądra i initrd będą potrzebne przy
konfiguracji bootloadera do prawidłowego wypełnienia jego pliku
konfiguracyjnego, więc warto je sobie zapisać. Przy następnym uruchomieniu
komputera zostanie najpierw wykonany plik initrd, który wykryje cały dostępny
sprzęt i wczyta odpowiednie moduły, a następnie uruchomi się właściwy system.
</p>

<pre caption="Sprawdzanie nazw utworzonych plików jądra">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

<p>
Następna czynność jeszcze bardziej upodobni nasz system do tego dostępnego na
płycie instalacyjnej, zemergujemy <c>coldplug</c>. Podczas gdy initrd automatycznie
wykrywa sprzęt, co jest niezbędne do uruchomienia systemu, <c>coldplug</c>
będzie wykrywał wszystko inne.
</p>

<pre caption="Instalacja i uruchamianie coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Moduły jądra</title>
<subsection>
<title>Konfigurowanie modułów</title>
<body>

<p>
Moduły ładowane w czasie startu systemu muszą zostać dopisane do pliku
<path>/etc/modules.autoload.d/kernel-2.6</path> (lub <path>kernel-2.4</path>).
Można tu również dodać dodatkowe opcje ich ładowania.
</p>

<p>
Listę wszystkich dostępnych modułów pokaże polecenia find z podaną poniżej
składnią.
</p>

<pre caption="Znajdowanie dostępnych modułów">
# <i>find /lib/modules/&lt;wersja jądra&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Dla przykładu, aby załadować moduł <c>3c59x.o</c> należy edytować plik
<path>kernel-2.6</path> (lub <path>kernel-2.4</path>) i dodać tam jego nazwę.
</p>

<pre caption="Edytowanie /etc/modules.autoload.d/kernel-2.6">
<comment>(Przykład dla jąder 2.6)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Kolejny etap instalacji to <uri link="?part=1&amp;chap=8">Konfigurowanie
systemu</uri>.
</p>

</body>
</subsection>
</section>
</sections>
