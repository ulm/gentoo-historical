<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Id: hb-install-amd64-disk.xml,v 1.2 2006/01/18 14:14:09 rane Exp $ -->
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/2005.1/hb-install-amd64-disk.xml,v 1.2 2006/01/18 14:14:09 rane Exp $ -->

<sections>

<version>5.2</version>
<date>2006-01-01</date>

<section>
<title>Wprowadzenie do urządzeń blokowych</title>
<subsection>
<title>Urządzenia blokowe</title>
<body>

<p>
Rzućmy okiem na aspekty Gentoo Linux, oraz ogólnie Linuksa związane z dyskami.
Omówimy systemy plików, partycje oraz urządzenia blokowe. Następnie wspólnie
przejdziemy przez proces podziału twardego dysku, aby móc jak najlepiej
wykorzystać dostępne miejsce.
</p>

<p>
Zaczniemy od omówienia <e>urządzeń blokowych</e>. Najpopularniejszym z nich
prawdopodobnie jest <path>/dev/hda</path> reprezentujący w Linuksie pierwszy
napęd IDE. Jeśli w komputerze znajdują się urządzenia SCSI lub SATA, to
pierwszym takim dyskiem jest <path>/dev/sda</path>.
</p>

<p>
Urządzenia blokowe stanowią abstrakcyjny interfejs dysków. Programy
użytkownika mogą z nich korzystać nie martwiąc się czy napędy
są typu IDE, SCSI, lub jeszcze innego. Przechowywane dane
adresuje się jako ciąg 512-bajtowych bloków.
</p>

</body>
</subsection>
<subsection>
<title>Partycje i plastry</title>
<body>

<p>
Teoretycznie możliwe jest przeznaczenie całego dysku na system, zazwyczaj nie
jest to jednak rozwiązanie zbyt praktyczne. Zamiast tego dzielimy napęd na
mniejsze i dużo łatwiejsze w zarządzaniu urządzenia blokowe.
W większości platform nazywane są one <e>partycjami</e>. Część architektur
korzystająca z podobnych technik nazywa je <e>plastrami</e>.
</p>

</body>
</subsection>
<subsection>
<title>Partycje</title>
<body>

<p>
Wyróżniamy trzy rodzaje partycji: <e>podstawowe</e>, <e>rozszerzone</e> oraz
<e>logiczne</e>.  
</p>

<p>
Informacje o partycjach <e>podstawowych</e> przechowywane są w MBR
(master boot record). Jako że jest on bardzo mały (512 bajtów), mieszczą
się w nim dane maksymalnie czterech takich partycji (na przykład,
od <path>/dev/hda1</path> do <path>/dev/hda4</path>).
</p>

<p>
Specjalną odmianą partycji podstawowych są partycje <e>rozszerzone</e>
(również obowiązuje je powyższy limit). Przechowują one kolejne partycje. W ten
sposób można ominąć niewygodną granicę i lepiej zagospodarować przestrzeń
dyskową bez utraty kompatybilności wstecz.
</p>

<p>
Partycje umieszczone i opisane wewnątrz rozszerzonych nazywamy
<e>logicznymi</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Projektowanie schematu podziału</title>
<subsection>
<title>Domyślny schemat podziału</title>
<body>

<p>
Jeśli nie mamy ochoty samodzielnie rozrysowywać schematu podziału dysku można
skorzystać z domyślnego, którego użyjemy w Podręczniku:
</p>

<table>
<tr>
  <th>Partycja</th>
  <th>System plików</th>
  <th>Rozmiar</th>
  <th>Opis</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>ext2</ti>
  <ti>32M</ti>
  <ti>Partycja Boot</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Partycja Swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>ext3</ti>
  <ti>Reszta dysku</ti>
  <ti>Partycja Root</ti>
</tr>
</table>

<p>
Jeśli nasze rady dotyczące rozmiarów partycji (lub woluminów logicznych) oraz
ich ilości, wydaja się interesujące, proponujemy kontynuowanie lektury. W
przeciwnym wypadku proponujemy przejść od razu do paragrafu <uri link="#fdisk">Podział dysku przy pomocy fdisk</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Jak dużo jak wielkich?</title>
<body>

<p>
Ilość partycji ściśle zależy od naszego środowiska. Na przykład jeśli
administrujemy systemem mającym wielu użytkowników prawdopodobnie uznamy za
stosowne oddzielenie <path>/home</path>, co poprawi bezpieczeństwo i uprości
proces tworzenia kopii zapasowych. Jeżeli docelowym zastosowaniem instalowanego
systemu jest serwer pocztowy to na osobnej partycji należy umieścić
<path>/var</path> gdzie przechowywane są listy. Dobry wybór systemu plików może
tu znacznie zwiększyć wydajność. Za to oddzielenie <path>/opt</path> jest
dobrym rozwiązaniem na serwerach gier, gdyż większość używanego oprogramowania
będzie instalowana właśnie tam. Powodami przyjęcia takiego rozwiązania są
również bezpieczeństwo i łatwość tworzenia kopii zapasowych. Warto upewnić się,
że partycja <path>/usr</path> będzie wystarczająco duża ponieważ będą tam
znajdowały się nie tylko dane wszystkich aplikacji, ale również ważące 500 MB
drzewo Portage.
</p>

<p>
Jak widać, wiele zależy od oczekiwanego rezultatu. Wydzielenie partycji
lub woluminów ma wiele zalet:
</p>

<ul>
<li>
Istnieje możliwość dostosowania jak najwydajniejszego w danym zastosowaniu
systemu plików dla poszczególnych partycji lub woluminów.
</li>
<li>
Zapełnienie całego wolnego miejsca na partycji przez wadliwie działające
narzędzie nie ma szkodliwego wpływu na całość systemu.  
</li>
<li>
Jeśli to konieczne, można skrócić czas kontroli systemów plików dzięki
możliwości jednoczesnego dokonywania jej na kilku partycjach (ma to znaczenie
zwłaszcza na sprzęcie z wieloma dyskami).
</li>
<li>
Montując część partycji lub woluminów z opcjami read-only (tylko do odczytu),
nosuid (ignorowane są bity setuid), noexec (ignorowane są bity wykonywalności)
itd. można znacznie poprawić bezpieczeństwo.
</li>
</ul>


<p>
Niestety zbyt rozbudowany podział niesie ze sobą spore niebezpieczeństwo: źle
zaplanowany zaowocuje pustkami na zbyt dużych i ciasnotą na zbyt małych
partycjach.  Istnieje także limit 15 partycji dla SCSI i SATA.
</p>

<p>
W przykładzie pokażemy partycjonowanie dysku 20GB, wykorzystywanego
w pokazowym laptopie z zainstalowanymi serwerami poczty oraz WWW,
GNOME, itd.:
</p>

<pre caption="Przykładowy podział dysku">
Filesystem    Type    Size  Used Avail Use% Mounted on
/dev/hda5      ext3    509M  132M  351M  28% /
/dev/hda2      ext3    5.0G  3.0G  1.8G  63% /home
/dev/hda7      ext3    7.9G  6.2G  1.3G  83% /usr
/dev/hda8       ext3   1011M  483M  477M  51% /opt
/dev/hda9      ext3    2.0G  607M  1.3G  32% /var
/dev/hda1      ext2     51M   17M   31M  36% /boot
/dev/hda6      swap    516M   12M  504M   2% &lt;not mounted&gt;
<comment>(Zostało nam 2GB niespartycjonowanej przestrzeni, którą będziemy mogli wykorzystać w przyszłości)</comment>
</pre>

<p>
<path>/usr</path> jest niemal w pełni zajęty (wykorzystane 83%), ale po
instalacji wszystkich potrzebnych pakietów nie będzie się on zbytnio rozrastał.
Przeznaczenie kilku gigabajtów na <path>/var</path> może wydać się zbyt
rozrzutne. Należy jednak zwrócić uwagę, że Gentoo kompiluje tam domyślnie
wszystkie pakiety. Jeżeli chcemy, aby <path>/var</path> posiadało mniejszy
rozmiar, na przykład 1GB, powinniśmy zmodyfikować zmienną <c>PORTAGE_TMPDIR</c> 
w pliku <path>/etc/make.conf</path>, tak aby prowadziła do partycji z 
odpowiednią ilością wolnego miejsca do kompilacji ekstremalnie dużych pakietów
takich jak OpenOffice.
</p>

</body>
</subsection>
</section>
<section id="fdisk">
<title>Partycjonowanie dysku za pomocą fdisk</title>
<subsection>
<body>

<p>
W kolejnych podsekcjach pokażemy jak utworzyć partycje takie
jak w zaprezentowanym wcześniej schemacie:
</p>

<table>
<tr>
  <th>Partycja</th>
  <th>Opis</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>Partycja Boot</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>Partycja Swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Partycja Root</ti>
</tr>
</table>

<p>
Należy zmodyfikować go analogicznie do własnej konfiguracji.
</p>

</body>
</subsection>
<subsection>
<title>Wyświetlanie aktualnego podziału dysku</title>
<body>

<p>
<c>fdisk</c> to popularne i wygodne narzędzie do partycjonowania dysków.
Zacznijmy od uruchomienia go dla naszego dysku (pokażemy to na przykładzie
<path>/dev/hda</path>):
</p>

<pre caption="Uruchamianie fdisk">
# <i>fdisk /dev/hda</i>
</pre>

<p>
Naszym oczom ukaże się taki znak zachęty:
</p>

<pre caption="Znak zachęty fdisk">
Command (m for help):
</pre>

<p>
Aby wyświetlić obecną konfigurację partycji, należy wpisać <c>p</c>:
</p>

<pre caption="Przykładowa konfiguracja partycji">
Command (m for help): <i>p</i>

Disk /dev/hda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        49    264600   82  Linux swap
/dev/hda3            50        70    158760   83  Linux
/dev/hda4            71      2184  15981840    5  Extended
/dev/hda5            71       209   1050808+  83  Linux
/dev/hda6           210       348   1050808+  83  Linux
/dev/hda7           349       626   2101648+  83  Linux
/dev/hda8           627       904   2101648+  83  Linux
/dev/hda9           905      2184   9676768+  83  Linux

Command (m for help):
</pre>

<p>
Na prezentowanym dysku znajduje się siedem linuksowych systemów plików
(każdy na osobnej partycji, oznaczonej jako "Linux") oraz partycja
wymiany (oznaczona jako "Linux swap").
</p>

</body>
</subsection>
<subsection>
<title>Kasowanie wszystkich partycji</title>
<body>

<p>
Zacznijmy od usunięcia partycji. Służy do tego polecenie <c>d</c> z odpowiednim
parametrem. Na przykład, aby pozbyć się <path>/dev/hda1</path>:
</p>

<pre caption="Usuwanie partycji">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Nasza partycja została zaznaczona do usunięcia. Nie będzie więcej pojawiać się
po wydaniu polecenia <c>p</c>, ale pozostanie nienaruszona dopóki zmiany nie
zostaną zapisane fizycznie. Jeśli popełniony zostanie błąd i wymagane będzie
anulowanie wszystkich wprowadzonych zmian, należy wpisać natychmiast <c>q</c> i
wcisnąć Enter. Niefortunne modyfikacje pójdą w niepamięć.
</p>

<p>
Zakładając, że chcemy pozbyć się wszystkich istniejących partycji, należy na
przemian wykonywać <c>p</c>, aby wyświetlić ich listę i po kolei kasować je
poleceniem <c>d</c> z odpowiednim numerem. Po ukończeniu, <c>p</c> powinno dać
następujący rezultat:
</p>

<pre caption="Pusta tablica partycji">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Kiedy nasza tymczasowa kopia tablicy partycji będzie pusta, możemy rozpocząć
tworzenie nowego podziału. Pokażemy to na przykładzie domyślnego omawianego
schematu. Oczywiście jeśli zamierzamy używać innego, należy zmodyfikować 
prezentowane polecenia.
</p>

</body>
</subsection>
<subsection>
<title>Zakładanie partycji boot</title>
<body>

<p>
Rozpoczniemy od utworzenia niewielkiej partycji boot. Należy wpisać <c>n</c> aby
ją założyć, następnie <c>p</c> aby nadać jej typ podstawowy i <c>1</c>,
ponieważ będzie to pierwsza taka partycja. Gdy zostaniemy spytani o pierwszy
cylinder wciśniemy Enter, natomiast gdy o ostatni, wpiszemy <c>+32M</c>, żeby
nadać jej rozmiar 32MB.
</p>

<pre caption="Zakładanie partycji boot">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-3876, default 1): <comment>(Naciskamy Enter)</comment>
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <i>+32M</i>
</pre>

<p>
Teraz polecenie <c>p</c> powinno pokazać następujący listing:
</p>

<pre caption="Utworzona partycja boot">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
</pre>

<p>
Musimy oznaczyć naszą partycję jako uruchamialną. W tym celu skorzystamy
z polecenia <c>a</c>. Na kolejnych wydrukach podziału, w kolumnie
"Boot" pokazywać się będzie <path>*</path>.
</p>

</body>
</subsection>
<subsection>
<title>Zakładanie partycji wymiany</title>
<body>

<p>
Nadszedł czas na utworzenie partycji wymiany. Ponownie skorzystajmy z polecenia
<c>n</c>, następnie podajemy <c>p</c> gdyż ma to być partycja podstawowa i
<c>2</c>, ponieważ będzie ona drugą tego typu. Gdy zostaniemy spytani o pierwszy
cylinder wciskamy Enter, natomiast na pytanie o ostatni wpisujemy <c>+512M</c>,
żeby nadać partycji rozmiar 512MB. Po ukończeniu wykujemy <c>t</c>, aby zmienić
jej typ, <c>2</c>, aby wybrać tę, którą właśnie stworzyliśmy i <c>82</c>, żeby
oznaczyć ją jako "Linux Swap". Teraz polecenie <c>p</c> powinno dać następujący
listing:
</p>

<pre caption="Listing podziału po utworzeniu partycji wymiany">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
</pre>

</body>
</subsection>
<subsection>
<title>Zakładanie partycji root</title>
<body>

<p>
Na koniec, utworzymy partycję root. Jeszcze raz posłużymy się w tym celu
poleceniem <c>n</c>. Gdy zostaniemy spytani o rodzaj wpisujemy <c>p</c>,
ponieważ chcemy by była podstawowa, następnie <c>3</c>, gdyż będzie już trzecią
tego typu, czyli w naszym przypadku <path>/dev/hda3</path>. Na pytanie o
pierwszy i ostatni cylinder wciskamy Enter, dzięki temu zajmie ona całą 
pozostałą wolną przestrzeń. Teraz polecenie <c>p</c> powinno pokazać
następujący wydruk:
</p>

<pre caption="Listing podziału po utworzeniu partycji root">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
/dev/hda3         82      3876  28690200   83  Linux
</pre>


</body>
</subsection>
<subsection>
<title>Zapisywanie podziału partycji</title>
<body>

<p>
Aby zachować ustalony podział i opuścić <c>fdisk</c> wpisujemy <c>w</c>.
</p>

<pre caption="Zachowywanie zmian i zamykanie fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Partycje są już gotowe, możemy więc teraz przejść do <uri
link="#filesystems">Zakładania Systemów Plików</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Tworzenie systemów plików</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Po utworzeniu partycji nadszedł czas na założenie na nich systemów plików.
Jeśli jest to obojętne jakie zostaną wybrane lub odpowiadają nam domyślne
ustawienia w podręczniku, przejdźmy do paragrafu <uri
link="#filesystems-apply">Zakładanie systemów plików na partycjach</uri>.
W przeciwnym wypadku polecamy dalszą lekturę aby dowiedzieć się więcej na ich
temat.  
</p>

</body>
</subsection>
<subsection>
<title>Systemy plików?</title>
<body>

<p>
Jądro Linuksa może współpracować z wieloma różnymi systemami plików. W
Podręczniku omówimy te najczęściej używane, czyli ext2, ext3, ReiserFS, xfs i
JFS.
</p>

<p>
<b>Ext2</b> to sprawdzony i popularny linuksowy system plików, którego główną
wadą jest to, że nie posiada księgowania. Powoduje to, iż jego regularne
kontrole przy starcie systemu bywają długotrwałe. Obecnie istnieją
nowoczesne systemy plików z księgowaniem, które można szybko sprawdzić i to
właśnie te polecamy naszym użytkownikom. Księgowanie zapobiega długotrwałym
kontrolom podczas uruchamiania systemu oraz ewentualnym błędom spójności
danych.
</p>

<p>
<b>Ext3</b> to odpowiednik ext2 posiadający księgowanie w trybach full oraz
ordered, dzięki czemu w razie awarii dane odzyskiwane są błyskawicznie. Jest on
bardzo dobrym i niezawodnym rozwiązaniem. Posiada ukrytą opcję korzystania z
drzewa b, co znacznie poprawia wydajność niemal we wszystkich sytuacjach.
Obsługę księgowania włącza się dodając parametr <c>-O dir_index</c> do polecenia
<c>mke2fs</c>. Krótko mówiąc, ext3 jest świetny.
</p>

<p>
<b>ReiserFS</b> to system plików oparty na drzewie B*, oferujący
dużą wydajność. Przy wielu małych plikach (poniżej 4k) może
być szybszy od ext3 nawet piętnastokrotnie. ReiserFS jest
wysoce skalowalny i posiada księgowanie, a począwszy od jądra 2.4.18,
charakteryzuje go niezawodność i użyteczność zarówno na partycjach ogólnego
przeznaczenia jak i w ekstremalnych przypadkach, takich jak ogromne
partycje, operacje na wielu bardzo małych, lub bardzo dużych plikach czy też
operacje na katalogach zawierających dziesiątki tysięcy plików.
</p>

<p>
<b>XFS</b> to system plików z księgowaniem, w pełni wspierany
w Gentoo Linux przez jądro xfs-sources. Jest bardzo funkcjonalny i
zoptymalizowany do skalowalności. Zalecamy go wyłącznie do systemów z
nowoczesnymi dyskami SCSI i/lub ciągłego zapisu danych z nieprzerwanym dostępem
zasilania. Ponieważ XFS przechowuje dużo danych w pamięci RAM, źle
zaprojektowane programy (te nie zachowujące odpowiednich środków ostrożności
podczas zapisywania plików na dysk, których niestety jest sporo) mogą
doprowadzić w razie padu systemu do utraty danych.
</p>

<p>
<b>JFS</b> to bardzo wydajny system plików IBM'a wyposażony w księgowanie.
Jest dość nowy i jest jeszcze za wcześnie by oceniać jego stabilność.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Zakładanie systemów plików na partycjach</title>
<body>

<p>
Aby założyć na woluminie lub partycji system plików powinno się skorzystać z
odpowiednich narzędzi: 
</p>

<table>
<tr>
  <th>System plików</th>
  <th>Komenda do zakładania</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Na przykład, aby założyć ext2 na partycji boot (w naszym przypadku 
<path>/dev/hda1</path>) oraz ext3 na partycji root (w naszym przypadku
<path>/dev/hda3</path>) powinniśmy wykonać następujące polecenia:
</p>

<pre caption="Zakładanie na partycji systemu plików">
# <i>mke2fs /dev/hda1</i>
# <i>mke2fs -j /dev/hda3</i>
</pre>

<p>
Teraz należy stworzyć systemy plików na partycjach.
</p>

</body>
</subsection>
<subsection>
<title>Aktywacja partycji wymiany</title>
<body>

<p>
Aby utworzyć partycję wymiany skorzystamy z programu <c>mkswap</c>.
</p>

<pre caption="Tworzenie partycji wymiany">
# <i>mkswap /dev/hda2</i>
</pre>

<p>
Do aktywowania partycji wymiany użyjemy programu <c>swapon</c>:
</p>

<pre caption="Aktywacja partycji wymiany">
# <i>swapon /dev/hda2</i>
</pre>

<p>
Stwórzmy teraz i aktywujmy partycję wymiany.
</p>

</body>
</subsection>
</section>
<section>
<title>Montowanie</title>
<body>

<p>
Po założeniu partycji i utworzeniu na nich systemów plików nadszedł czas na ich
zamontowanie. Służy do tego program <c>mount</c>. Nie należy zapomnieć o
utworzeniu odpowiednich katalogów dla montowanych partycji. W przykładzie
zamontujemy partycje boot i root:
</p>

<pre caption="Montowanie partycji">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

<note>
Jeżeli chcemy przenieść <path>/tmp</path> na osobną partycję,
nie zapomnijmy po zamontowaniu odpowiednio zmienić praw dostępu: <c>chmod
1777 /mnt/gentoo/tmp</c>. Dotyczy to również <path>/var/tmp</path>.
</note>

<p>
Konieczne będzie również podmontowanie systemu plików proc (wirtualnego
interfejsu jądra) w katalogu <path>/proc</path>, ale najpierw musimy umieścić
wszystkie niezbędne pliki na partycjach.
</p>

<p>
Kolejny rozdział to <uri link="?part=1&amp;chap=5">Wypakowywanie plików
instalacyjnych</uri>.
</p>

</body>
</section>
</sections>
