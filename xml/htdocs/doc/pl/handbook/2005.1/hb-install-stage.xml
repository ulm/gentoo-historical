<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/2005.1/hb-install-stage.xml,v 1.3 2005/12/07 16:57:07 rane Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>5.5</version>
<date>2005-08-16</date>

<section>
<title>Instalowanie tarballa stage</title>
<subsection>
<title>Ustawienie poprawnej daty i czasu</title>
<body>

<p>
Na samym początku całego procesu instalacji należy sprawdzić datę/czas i
ewentualnie je zaktualizować. Niezsychronizowany zegar może być przyczyną
dziwnych błędów w przyszłości!
</p>

<p>
Aby zweryfikować aktualną datę/czas, uruchamiamy <c>date</c>:
</p>

<pre caption="Sprawdzenie daty/czasu">
# <i>date</i>
nie sie 21 01:56:26 CEST 2005
</pre>

<p>
Jeżeli wyświetlane data i czas są złe, musimy je uaktualnić poleceniem <c>date
MMDDggmmRRRR</c> (<b>M</b>iesiąc, <b>D</b>zień, <b>g</b>odzina, <b>m</b>inuta i
<b>R</b>ok). Na przykład, aby ustawić datę 29 marca 2005 roku, 16:21:
</p>

<pre caption="Ustawienie daty/czasu">
# <i>date 032916212005</i>
</pre>

</body>
</subsection>
<subsection>
<title>Podejmowanie decyzji</title>
<body>

<p>
W następnym kroku należy wykonać instalację wybranego tarballa <e>stage</e>.
Można go pobrać z Internetu lub, jeśli działamy z którejś płytki Gentoo
Universal Installation CD, przekopiować z CD. Jeżeli mamy Universal CD i na płycie
znajduje się stage którego chcemy używać ściąganie go z Internetu jest tylko
niepotrzebną stratą czasu, gdyż pliki stage są takie same.
</p>

<ul>
<li><uri link="#doc_chap2">Domyślnie: Użycie stage z Internetu</uri>.</li>
<li><uri link="#doc_chap3">Alternatywnie: Wykorzystanie stage z płyty
instalacyjnej</uri>.</li>
</ul>

</body>
</subsection>
</section>
<section>
<title>Domyślnie: Użycie stage z Internetu</title>
<subsection>
<title>Pobieranie tarballa stage</title>
<body>

<p>
Na początku przechodzimy do punktu montowania systemu plików Gentoo
(zwykle jest to <path>/mnt/gentoo</path>):
</p>

<pre caption="Przechodzenie do punktu montowania systemu plików Gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
W zależności od medium instalacyjnego mamy do dyspozycji kilka narzędzi, za
pomocą których możemy pobrać plik stage. Jeżeli mamy program <c>links2</c>
możemy wejść bezpośrednio na <uri link="/main/en/mirrors.xml">listę serwerów
lustrzanych Gentoo</uri> i wybrać serwer, który znajduje się najbliżej.
</p>

<p>
Jeżeli nie mamy programu <c>links2</c>, musimy skorzystać z przeglądarki
<c>lynx</c> do tego celu. Aby używać serwera proxy musimy również
wyeksportować zmienne <c>http_proxy</c> i <c>ftp_proxy</c>:
</p>

<pre caption="Ustawienie informacji o proxy dla lynxa">
# <i>export http_proxy="http://proxy.server.com:port"</i>
# <i>export ftp_proxy="http://proxy.server.com:port"</i>
</pre>

<p>
W dalszej części zakładamy, że do swojej dyspozycji mamy przeglądarkę <c>links2</c>.
</p>

<p>
Przechodzimy do <path>releases/</path>, a następnie do katalogu odpowiedniej
architektury (np. <path>x86/</path>) oraz wersji Gentoo (<path>2005.1/</path>) i
na koniec do <path>stages/</path>. Znajdują się tam pliki stage dla wybranej
architektury (czasem mogą być umieszczone w podkatalogach dla różnych
podarchitektur). Wybieramy jeden i naciskamy <c>D</c>, aby go ściągnąć. Kiedy
pobieranie dobiegnie końca wciskamy <c>Q</c>, aby wyjść z przeglądarki.
</p>

<pre caption="Przeglądanie listy serwerów lustrzanych za pomocą links2">
# <i>links2 http://www.gentoo.org/main/en/mirrors.xml</i>

<comment>(Jeżeli potrzebne jest proxy w links2:)</comment>
# <i>links2 -http-proxy serwer.proxy.com:8080 http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Jeśli chcemy zweryfikować poprawność pobranych archiwów stage, musimy porównać
wynik polecenia <c>md5sum</c> z sumami MD5 udostępnianymi na serwerze. Np.
aby sprawdzić poprawność tarballa stage dla architektury x86:
</p>

<pre caption="Sprawdzanie integralności tarballa stage">
# <i>md5sum -c stage1-x86-2005.1.tar.bz2.md5</i>
stage1-x86-2005.1.tar.bz2: OK
</pre>

</body>
</subsection>
<subsection>
<title>Rozpakowywanie tarballa Stage</title>
<body>

<p>
Wypakowujemy pobrany plik stage przy pomocy GNU <c>tar</c>:
</p>

<pre caption="Wypakowanie stage">
# <i>tar -xvjpf stage3-&lt;subarch&gt;-2005.1.tar.bz2</i>
</pre>

<p>
Należy użyć dokładnie tych samych przełączników (<c>-xvjpf</c>). Opcja <c>x</c>
oznacza <e>wypakuj</e>, <c>v</c> to <e>wyświetl</e>, aby widzieć co się dzieje
podczas wypakowywania (ok, to jest opcjonalne), <c>j</c> służy do
<e>dekompresji  archiwum bzip2</e>, <c>p</c> to <e>zachowuj uprawnienia</e>,
natomiast <c>f</c> podkreśla, że chcemy rozpakować to, co czytamy z pliku, a nie
ze standardowego wejścia.
</p>

<!-- 2005.1: stage3 for athlon xp, pentium3 and pentium4 are b0rked -->
<warn>
Pliki <path>stage3-athlon-xp-2005.1.tar.bz2</path>,
<path>stage3-pentium3-2005.1.tar.bz2</path> i
<path>stage3-pentium4-2005.1.tar.bz2</path> posiadają poważny błąd związany z
prawami dostępu. Po ich rozpakowaniu należy wykonać polecenie <c>chmod 0755
/mnt/gentoo</c>, które naprawi błąd. Trzeba tego dokonać <e>przed</e> przejściem
do dalszych etapów instalacji.
</warn>

<note>
Obrazy płyt instalacyjnych niektórych architektur (np. MIPS) zawierają <c>tar</c>
wbudowany w BusyBox, który aktualnie nie posiada opcji <c>-v</c>, więc nie będzie
ona działała.
</note>

<p>
Gdy stage jest już zainstalowany, pora przejść do <uri
link="#installing_portage">Instalacji Portage</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatywnie: Wykorzystanie stage z płyty instalacyjnej</title>
<subsection>
<title>Rozpakowanie tarballa stage</title>
<body>

<p>
Pliki stage umieszczone są na CD w katalogu <path>/mnt/cdrom/stages</path>.  Aby
obejrzeć ich spis korzystamy z polecenia <c>ls</c>:
</p>

<pre caption="Lista dostępnych wersji stage">
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Jeśli system zgłasza błąd to możliwe, że musimy najpierw zamontować CD-ROM:
</p>

<pre caption="Montowanie CD-ROM">
# <i>ls /mnt/cdrom/stages</i>
ls: /mnt/cdrom/stages: No such file or directory
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom</i>
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Teraz przechodzimy do punktu montowania Gentoo (zwykle
<path>/mnt/gentoo</path>):
</p>

<pre caption="Zmiana katalogu na /mnt/gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Następnie wypakowujemy wybrany tarball. Użyjemy do tego celu GNU <c>tar</c>.
Przełączniki (<c>-xvjpf</c>) muszą być takie same! Należy pamiętać, że
argument <c>v</c> jest opcjonalny i nie jest obsługiwany przez pewne wersje
programu <c>tar</c>. W kolejnym przykładzie wykorzystujemy plik
<path>stage3-&lt;podarchitektura&gt;-2005.1.tar.bz2</path>. Oczywiście jego
nazwę należy odpowiednio zmodyfikować.
</p>

<pre caption="Wypakowanie tarballa stage">
# <i>tar -xvjpf /mnt/cdrom/stages/stage3-&lt;subarch&gt;-2005.1.tar.bz2</i>
</pre>

<!-- 2005.1: stage3 for athlon xp, pentium3 and pentium4 are b0rked -->
<warn>
Pliki <path>stage3-athlon-xp-2005.1.tar.bz2</path>,
<path>stage3-pentium3-2005.1.tar.bz2</path> i
<path>stage3-pentium4-2005.1.tar.bz2</path> posiadają poważny błąd związany z
prawami dostępu. Po ich rozpakowaniu należy wykonać polecenie <c>chmod 0755
/mnt/gentoo</c>, które naprawi błąd. Trzeba tego dokonać <e>przed</e> przejściem
do dalszych etapów instalacji.
</warn>

<p>
Gdy stage zostanie zainstalowany, przechodzimy do <uri
link="#installing_portage">Instalacji Portage</uri>.
</p>

</body>
</subsection>
</section>
<section id="installing_portage">
<title>Instalacja Portage</title>
<subsection>
<title>Wypakowanie snapshota Portage</title>
<body>

<p>
W tym rozdziale omówimy proces instalacji snapshota Portage, kolekcji plików,
które informują Portage jakie programy można zainstalować, które profile są
dostępne itp.
</p>

</body>
</subsection>
<subsection id="installing_from_Internet">
<title>Ściąganie i instalowanie snapshota Portage</title>
<body>

<p>
Przechodzimy do miejsca gdzie zamontowaliśmy system plików (zwykle
<path>/mnt/gentoo</path>):
</p>

<pre caption="Przechodzenie do punktu montowania Gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Uruchamiamy <c>links2</c> (lub <c>lynx</c>) i przechodzimy do <uri
link="/main/en/mirrors.xml">listy mirrorów Gentoo</uri>. Wybieramy jeden z
serwerów, najlepiej jak najbliższy naszej lokalizacji i przechodzimy do katalogu
<path>snapshots/</path>. Ściągamy najnowszy snapshot Portage poprzez jego
wybranie i naciśnięcie klawisza <c>D</c>.
</p>

<pre caption="Przeglądanie listy mirrorów Gentoo">
# <i>links2 http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Teraz wychodzimy z przeglądarki naciskając klawisz <c>Q</c>. Plik snapshot
znajduje się teraz w <path>/mnt/gentoo</path>. W następnym kroku wypakujemy
snapshot Portage. Należy użyć dokładnie tych samych poleceń; ostatnia opcja to
duża litera <c>C</c>, nie małe <c>c</c>.
</p>

<pre caption="Wypakowywanie snapshota Portage">
<comment>(Zastępujemy wartość &lt;data&gt; to przez nas pożądaną)</comment>
# <i>tar -xvjf /mnt/gentoo/portage-&lt;data&gt;.tar.bz2 -C /mnt/gentoo/usr</i>
</pre>

</body>
</subsection>
</section>
<section id="compile_options">
<title>Konfigurowanie opcji kompilacji</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Jest wiele możliwych do skonfigurowania zmiennych wpływających na zachowanie
Gentoo. Możemy je wprowadzać jako zmienne środowiskowe (poprzez <c>export</c>),
ale wtedy nie zostaną zapisane na stałe. Zamiast tego Portage do zachowywania
konfiguracji używa pliku konfiguracyjnego <path>/etc/make.conf</path>. Pora
wziąć się za jego edycję.
</p>

<note>
Opatrzona komentarzami lista wszystkich możliwych zmiennych znajduje się
w pliku <path>/mnt/gentoo/etc/make.conf.example</path>. Do szczęśliwego
ukończenia instalacji wystarczy wyedytowanie tylko kilku z nich, tych, których
listę przedstawiamy poniżej.
</note>

<p>
Uruchamiamy ulubiony edytor (w przykładach używamy <c>nano</c>),
którym wprowadzimy omawiane nieco dalej opcje optymalizacji.
</p>

<pre caption="Edytowanie /etc/make.conf">
# <i>nano -w /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Plik <path>make.conf.example</path> ma charakterystyczną strukturę: linie z
komentarzem rozpoczynają się od znaku "#", linie zawierające zmienne używają
składni <c>ZMIENNA="zawartość"</c>. Takiej samej składni używa także plik
<path>/etc/make.conf</path>. Kilka z tych zmiennych zostało przedyskutowanych
poniżej.
</p>

</body>
</subsection>
<subsection>
<title>CHOST</title>
<body>

<warn>
Mimo, że może to kusić tych, którzy nie korzystają ze stage1, <e>nie</e>
należy zmieniać ustawienia <c>CHOST</c> w <path>make.conf</path>. Dokonanie
tego może zepsuć cały system. Powtarzamy: tę zmienną modyfikuje się tylko
podczas instalacji ze <e>stage1</e>.
</warn>

<p>
Zmienna <c>CHOST</c> definiuje architekturę, pod którą za pomocą <c>gcc</c> będą
kompilowane programy. Możliwe jej wartości:
</p>

<table>
<tr>
  <th>Architektura</th>
  <th>Podarchitektura</th>
  <th>Ustawienia CHOST</th>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i386</ti>
  <ti>i386-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i486</ti>
  <ti>i486-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i586</ti>
  <ti>i586-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i686 i wyżej (także athlon)</ti>
  <ti>i686-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>alpha</ti>
  <ti></ti>
  <ti>alpha-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>ppc</ti>
  <ti></ti>
  <ti>powerpc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>ppc64</ti>
  <ti></ti>
  <ti>powerpc64-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>sparc</ti>
  <ti></ti>
  <ti>sparc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>sparc64</ti>
  <ti></ti>
  <ti>sparc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>(uniwersalne)</ti>
  <ti>hppa-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>pa7000</ti>
  <ti>hppa1.1-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>pa8000 i wyżej</ti>
  <ti>hppa2.0-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>mips</ti>
  <ti></ti>
  <ti>mips-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>amd64</ti>
  <ti></ti>
  <ti>x86_64-pc-linux-gnu</ti>
</tr>
</table>

<p>
Upewniamy się, czy na pewno dobrze ustawiliśmy zmienną CHOST. Na przykład,
zmienna CHOST dla sparc64 to nadal <c>sparc-unknown-linux-gnu</c>, a nie
<c>sparc64-unknown-linux-gnu</c>!
</p>

<p>
Użytkownicy zainteresowani bootstrapowaniem systemu z obsługą NPTL w
architekturze x86 muszą ustawić CHOST na <c>i586-pc-linux-gnu</c> lub wyższy.
</p>

</body>
</subsection>
<subsection>
<title>CFLAGS i CXXFLAGS</title>
<body>

<p>
Zmienne <c>CFLAGS</c> i <c>CXXFLAGS</c> definiują flagi optymalizujące
używane odpowiednio przez kompilator <c>gcc</c> C i C++. Choć generalnie
określamy ich wartości tutaj, maksimum wydajności osiągniemy dopasowując
je do każdego programu z osobna. Jest tak dlatego, że programy znacząco
różnią się między sobą.
</p>

<p>
W <path>make.conf</path> należy zdefiniować flagi optymalizacji co do
których jesteśmy przekonani, że <e>w głównej mierze</e> poprawią czas reakcji
systemu. Nie przypisujemy pod tę zmienną ustawień eksperymentalnych; przesada
w optymalizacji może spowodować, że programy zaczną źle funkcjonować
(nagle przerywać działanie, lub nawet gorzej, wcale nie działać).
</p>

<p>
Nie będziemy tłumaczyć znaczenia wszystkich możliwych opcji optymalizacji.
Wszystkie są wymienione w <uri link="http://gcc.gnu.org/onlinedocs/">Podręczniku
Online GNU </uri> lub stronę info <c>gcc</c> (<c>info gcc</c> -- działa tylko na
systemach linuksowych). Plik <path>make.conf.example</path> sam zawiera dużo
informacji i przykładów  - należy go uważnie przeczytać.
</p>

<p>
Pierwszym ustawieniem jakim się tu zajmiemy jest flaga <c>-march=</c>, która
określa docelową architekturę. Możliwe jej wartości są opisane jako komentarze w
<path>make.conf.example</path>. Na przykład dla architektury x86 Athlon XP
będzie to:
</p>

<pre caption="Ustawienie GCC march">
<comment># Użytkownicy AMD64, którzy chcą mieć natywny system 64bit powinni używać flagi -march=k8</comment>
<comment># Użytkownicy EM64T powinni wybrać march=nocona</comment>
-march=athlon-xp
</pre>

<p>
Prosimy, upewnijcie się, że macie <e>poprawnie</e> ustawiony CHOST. Na przykład
ustawienie CHOST dla sparc64 to <c>sparc-unknown-linux-gnu</c>, a nie
<c>sparc64-unknown-linux-gnu</c>!
</p>

<p>
Drugim jest flaga <c>-O</c> (to jest duże O, nie zero), która określa
klasę optymalizacji <c>gcc</c>. Dostępne klasy to <c>s</c> (optymalizacja
rozmiaru), <c>0</c> (brak optymalizacji), <c>1</c>, <c>2</c> lub <c>3</c> -
coraz silniej optymalizujące (każda z nich używa tych samych flag, co
poprzednia oraz dodaje własne). Jako przykład posłuży nam klasa optymalizacji
2:
</p>

<pre caption="Ustawienia optymalizacji poprzez GCC">
-O2
</pre>

<p>
Inne popularne flagi optymalizujące to <c>-pipe</c> (gcc używa potoków zamiast
plików tymczasowych w komunikacji między różnymi etapami kompilacji) oraz
<c>-fomit-frame-pointer</c> (w rejestrach nie będą przechowywane wskaźniki
ramki dla funkcji, które ich nie wymagają).
</p>

<p>
Używanie flagi <c>-fomit-frame-pointer</c> może powodować poważne problemy
podczas debugowania kodu!
</p>

<p>
Podczas definiowania <c>CFLAGS</c> i <c>CXXFLAGS</c> można łączyć kilka
flag optymalizacji, na przykład w ten sposób:
</p>

<pre caption="Definiowanie zmiennych CFLAGS i CXXFLAGS">
CFLAGS="-march=athlon-xp -pipe -O2"   <comment># Użytkownicy AMD64 powinni używać flagi march=k8</comment>
                                      <comment># Użytkownicy EM64T powinni wybrać march=nocona</comment>
CXXFLAGS="${CFLAGS}"                  <comment># Użycie tych samych ustawień dla obu zmiennych</comment>
</pre>

</body>
</subsection>
<subsection>
<title>MAKEOPTS</title>
<body>

<p>
Za pomocą <c>MAKEOPTS</c> definiujemy jak wiele równoległych kompilacji będzie
przeprowadzanych podczas przygotowywania pakietu do instalacji. Sugerowaną
liczbą jest ilość procesorów w systemie powiększona o jeden, nie jest to jednak
zawsze najlepsze wyjście.
</p>

<pre caption="MAKEOPTS dla przeciętnego systemu jednoprocesorowego">
MAKEOPTS="-j2"
</pre>

</body>
</subsection>
<subsection>
<title>Gotowi, do biegu, start!</title>
<body>

<p>
Na koniec poprawiamy jeszcze odrobinę <path>/mnt/gentoo/etc/make.conf</path> i
zapisujemy wyniki naszych prac (w <c>nano</c> za pomocą <c>Ctrl-X</c>).
Teraz jesteśmy przygotowani na <uri link="?part=1&amp;chap=6"> Instalację
systemu podstawowego </uri>.
</p>

</body>
</subsection>
</section>
</sections>
