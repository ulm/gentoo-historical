<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- Orig revision: 1.27 -->
<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-install-ppc-bootloader.xml,v 1.10 2005/08/20 20:13:12 rane Exp $ -->

<!-- Translator: rane <rane@gentoo.pl> -->
<!-- Title: Konfiguracja bootloadera dla PPC -->

<!-- Status: Release -->
<!-- $Id: hb-install-ppc-bootloader.xml,v 1.10 2005/08/20 20:13:12 rane Exp $ -->

<sections>

<version>2,4</version>
<date>2005-05-12</date>

<section>
<title>Podejmowanie decyzji.</title>
<subsection>
<title>Wstęp.</title>
<body>

<p>
Gdy skonfigurowałeś jądro i zmodyfikowałeś odpowiednio niezbędne systemowe
pliki konfiguracyjne, nadeszła pora zainstalowania programu, który uruchomi jądro
w momencie startu systemu. Taki program nazywa się <e>bootloader</e>.
</p>

<p>
Dla Linux/PPC istnieje kilka bootloaderów. Zaliczają się do nich min. <uri
link="#yaboot">Yaboot</uri> (dla maszyn NewWorld Apple i IBM) oraz <uri
link="#bootx">BootX</uri> (dla maszyn OldWorld Apple i IBM). Pegasos nie
potrzebuje bootloadera. Nie możesz używać na nim ani Yaboot, ani BootX'a. Jeśli
jesteś użytkownikiem Pegasosa przejdź teraz do sekcji <uri
link="#reboot">Ponowne uruchamianie systemu</uri>.
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>Domyślnie: Używanie yaBoot.</title>
<subsection>
<title>Wprowadzenie.</title>
<body>

<impo>
yaBoot może być używany tylko na systemach klasy NewWorld PPC!
</impo>


<p>
Dla poprawnej instalacji bootloadera najpierw musimy utworzyć odpowiednie pliki
<path>/dev</path>. Najprościej zrobić to przez dowiązanie systemu plików
<path>/dev</path> z LiveCD do naszego nowego systemu.
</p>

<pre caption="Dowiązywanie systemu plików /dev">
# <i>exit </i> # opuszczamy chroot
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>

<p>
Są dwa sposoby konfiguracji yaBoot. Możesz wykonać konfigurację
yaboot automatycznie za pomocą nowego i poprawionego narzędzia
<c>yabootconfig</c> zawartego w wersji <path>yaboot-1.3.8-r1</path>
i późniejszych. Jeśli z jakiegoś powodu nie chcesz uruchamiać
<c>yabootconfig</c> do automatycznego tworzenia <path>/etc/yaboot.conf</path>
lub instalujesz Gentoo na G5 (na którym <c>yabootconfig</c> nie zawsze chce działać),
możesz najzwyczajniej w świecie wyedytować wzorcowy plik już zainstalowany w systemie.
</p>

<ul>
 <li><uri link="#doc_chap8_sect2">Domyślnie: Użycie yabootconfig</uri>.</li>
 <li><uri link="#doc_chap8_sect3">Alternatywnie: Ręczna konfiguracja
 yaBoot</uri>.</li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig">
<title>Domyślnie: Użycie yabootconfig.</title>
<body>

<p>
<c>yabootconfig</c> automatycznie wykryje partycje na Twoim komputerze
i umożliwi uruchamianie wybranego z dwóch lub trzech systemów, którymi mogą
być Linux, Mac OS, and Mac OS X.
</p>

<p>
Przed użyciem <c>yabootconfig</c>, musisz mieć na dysku partycję bootstrap
oraz odpowiednie wpisy dotyczące partycji Linuksa w <path>/etc/fstab</path>.
Obydwa warunki powinny być już spełnione, wszystko opisaliśmy w poprzednich
rozdziałach. Upewnij się, że masz zainstalowaną najnowszą wersję yaboot wykonując
polecenie <c>emerge --update yaboot</c>. Jest to wymagane, gdyż aktualna
wersja bedzie dostępna poprzez Portage, ale może jej jeszcze nie być w plikach
stage.
</p>

<pre caption = "Instalowanie yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<pre caption = "Installing yaboot with GRP">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Następnie opuść chroot i wykonaj polecenie <c>yabootconfig --chroot
/mnt/gentoo</c>. Uruchomi się program i potwierdzi lokalizację partycji
bootstrap. Wciśnij <c>Y</c> jeśli wszystko się zgadza. Jeśli jest inaczej,
sprawdź dwa razy <path>/etc/fstab</path>. yabootconfig przeskanuje Twoje
ustawienia, utworzy <path>/etc/yaboot.conf</path> i uruchomi <c>mkofboot</c>.
<c>mkofboot</c> służy do formatowania partycji bootstrap i umieszczenia na niej
pliku konfiguracyjnego yaboot. Następnie z powrotem wejdź do chroota.
</p>

<pre caption="Powrót w chroot">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Zweryfikuj zawartość <path>/etc/yaboot.conf</path>. Jeśli zmienisz
<path>/etc/yaboot.conf</path> (choćby ustawienia domyślnie startującego
OS), uruchom <c>ybin -v</c> aby zmiany odniosły skutek na partycji bootstrap.
</p>

<p>
Kiedy skończysz przejdź do rozdziału <uri link="?part=1&amp;chap=10">Instalacja
niezbędnych narzędzi systemowych</uri>.
</p>

</body>
</subsection>
<subsection id="manual_yaboot">
<title>Alternatywnie: Ręczna konfiguracja yaBoot.</title>
<body>

<p>
Po pierwsze upewnij się, że masz zainstalowaną aktualną wersję
<c>yaboot</c>:
</p>

<pre caption = "Instalowanie yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Poniżej znajdziesz kompletny plik <path>yaboot.conf</path>.
Oczywiście powienieneś dostosować go do swoich potrzeb. Posiadacze G5 muszą
pamiętać, że ich dyski są w standardzie Serial ATA, przez co jądro Linux widzi
je jako dyski SCSI (a więc muszą zamienić wszystkie <path>/dev/hda</path> na
<path>/dev/sda</path>).
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## uruchom: "man yaboot.conf" by poznać szczegóły. Nie zmieniaj nic, jeśli nie musisz!!
## dodatkowe przykłady możesz obejrzeć w: /usr/share/doc/yaboot/examples
##
## W celu uruchamiania innych systemów, dodaj jedną lub więcej pozycji spośród:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## nasza partycja bootstrap:</comment>

boot=/dev/hda9


<comment>## ofboot w openfirmware służy do wyboru partycji startowej.
## Jeśli tego parametru nie będzie, yaboot nie zadziała na G5
## (dopóki nie przekażesz odpowiednich opcji do programu mkofboot/ybin).
## hd:X oznacza /dev/sdaX (lub /dev/hdaX).
##
## Posiadacze G5 powinni odkomentować tą linię !!

#ofboot=hd:9</comment>

<comment>##hd: w terminologii openfirmware oznacza hda</comment>
device=hd:
partition=11

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Ta sekcja może zostać powielona w przypadku posiadania więcej niż
## jednego jądra, lub zestawu parametrów startowych. Należy zastąpić
## kernel-2.6.12 nazwą posiadanego jądra.
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/hda3
  partition=3
<comment>#  append="rootdelay=10"  # Wymagane dla bootowania z urządzeń USB/Firewire</comment>
  read-only
<comment>##################

## Użytkownicy G5 i niektórzy użytkownicy G4 powinni wykorzystać ustawienia: 
##   macos=hd:13
##   macosx=hd:12
## zamiast przykładowych wartości.</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Gdy plik <path>yaboot.conf</path> jest prawidłowo skonfigurowany, należy
uruchomić <c>mkofboot -v</c>, czego efektem będzie sformatowanie partycji
Apple_bootstrap i zainstalowanie na niej aktualnej konfiguracji. Jeśli
<path>yaboot.conf</path> zostanie zmodyfikowany po utworzeniu partycji
Apple_bootstrap, konieczne będzie zaktualizowanie ustawień przy użyciu polecenia
<c>ybin -v</c>.
</p>

<p>
Więcej informacji o yabootcie uzystać można na stronie <uri
link="http://penguinppc.org/bootloaders/yaboot">projektu yaboot</uri>. Po
skonfigurowaniu bootloadera kontunuujemy instalację zgodnie z instrukcjami w
podrozdziale <uri link="#reboot">Rebootowanie systemu</uri>.
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>Alternatywnie: BootX</title>
<body>

<impo>
BootX może być używany tylko na systemach OldWorld Apple!
</impo>

<p>
Aby BootX mógł zbootować Linuksa z wnętrza MacOSa, jądro systemu musi zostać
przekopiowane z partycji Linuksa na partycję MacOSa. Dokonamy tego montując
najpierw partycję MacOSa spoza środowiska chrootowanego, a następnie kopiując
kernel do folderu systemowego, aby BootX mógł go odnaleźć. W celu określenia,
na której partycji znajduje się MacOS użyjemy polecenia <c>mac-fdisk -l</c>
(sda6 zostało poniżej użyte jako przykład).
</p>

<pre caption="Kopiowanie jądra na partycję MacOSa">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux "/mnt/mac/System Folder/Linux Kernels"</i>
</pre>

<p>
Jeśli użyto programu genkernel, to zarówno jądro, jak i initrd muszą zostać
skopiowane na partycję MacOSa.
</p>

<pre caption="Kopiowanie jądra i initrd wygenerowanych genkernelem na partycję
MacOSa">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initramfs-* "/mnt/mac/System Folder"</i>
</pre>

<p>
Gdy jądro zostało skopiowane, musimy zrebootować komputer i skonfigurować BootX.
</p>

<pre caption="Odmontowywanie wszystkich partycji i rebootowanie">
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Oczywiście należy usunąć wszystkie bootowalne nośniki, ponieważ teraz powinien
uruchomić się MacOS.
</p>

<p>
Gdy uruchomiony zostanie MacOS, otwieramy panel sterowania BootX. Jeśli nie
korzystaliśmy z genkernela, wybieramy <c>Options</c> i odznaczamy <c>Used
specified RAM disk</c>. Natomiast jeśli użyliśmy genkernela, musimy upewnić się,
że initrd genkernela jest wybrany zamiast initrd płyty instalacyjnej.
Użytkownicy niekorzystający z genkernela mogą określić teraz partycję roota
- podajemy tutaj wartość odpowiadającą naszemu podziałowi dysku. W zależności od
konfiguracji jądra można dodać inne argumenty.
</p>

<p>
Program BootX można skonfigurować tak, aby automatycznie startował Linuksa.
Jeśli się na to zdecydujemy, najpierw zobaczymy ekran ładowania MacOS, a
następnie, już w trakcie wczytywania systemu, BootX załaduje i wystartuje
Linuksa. Więcej informacji uzyskać można na <uri
link="http://penguinppc.org/bootloaders/bootx/">Stronie domowej BootX</uri>.
</p>

<p>
Następnie jeszcze raz restartujemy komputer, uruchamiamy Linuksa i kontunuujemy
instalację zgodnie z instrukcjami w rozdziale <uri
link="?part=1&amp;chap=11">Finalizowanie instalacji Gentoo</uri>.
</p>

</body>
</section>
<section id="quik">
<title>Alternatywnie: quik</title>
<body>

<p>
quik pozwala na bootowanie z pominięciem MacOSa na maszynach OldWorld Macs.
Nie jest to jednak dobrze wspierane i zalecane rozwiązanie, gdyż może spowodować
występowanie licznych dziwactw. Jeśli tylko istnieje taka możliwość, zalecane
jest korzystanie z programu BootX zamiast quik, ze względu na znacznie większą
stabilność i łatwiejszą konfigurację tego pierwszego.
</p>

<p>
Jeśli mimo wszystko zdecydujemy się na to rozwiązanie, postępujemy zgodnie z
poniższymi instrukcjami.
Po pierwsze musimy zainstalować quik:
</p>

<pre caption="Emergowanie quik">
# <i>emerge quik</i>
</pre>

<p>
Następnie musimy dokonać jego konfiguracji. Edytujemy plik
<path>/etc/quik.conf</path> ustawiając w nim obraz naszego jądra, które
skopiowaliśmy na partycję boot.
</p>

<pre caption="Konfigurowanie quik.conf">
# Przykładowy plik quik.conf
init-message = "Gentoo 2005.1\n"
partition = 2		<comment># Partycja boot</comment>
root = /dev/hda4
timeout = 30
default = gentoo
image = /vmlinux-2.6.12
	label = gentoo
</pre>

<p>
Plik quik.conf <e>musi</e> znajdować się na tym samym dysku co bootowalny obraz,
ale niekoniecznie na tej samej partycji. Jest jednak wskazane aby przenieść go
do partycji boot.
</p>

<pre caption="Przenoszenie quik.conf do /boot">
# <i>mv /etc/quik.conf /boot/quik.conf</i>
</pre>

<p>
Teraz musimy ustawić zmienne związane z bootowaniem, aby quik był
uruchamiany. Użyjemy do tego programu <c>nvsetenv</c>. To, jakie zmienne musimy
ustawić, zależy od maszyny jaką posiadamy. Zaleca się odszukanie <uri
link="http://penguinppc.org/bootloaders/quik/quirks.php">prawidłowych
wartości quirks</uri> przed rozpoczęciem konfiguracji.
</p>

<pre caption="Ustawianie zmiennych związanych z bootowanie">
# <i>nvsetenv auto-boot true</i> <comment># Ustawiamy "false" aby uruchamiać
# OF; nie wszystkie maszyny mogą korzystać z trybu OF</comment>
# <i>nvsetenv output-device video</i> <comment># Wartość wybieramy na podstawie
# powyższej strony quirks</comment>
# <i>nvsetenv input-device kbd</i>
# <i>nvsetenv boot-device scsi/sd@1:0</i> <comment># Dla SCSI</comment>
# <i>nvsetenv boot-device ata/ata-disk@0:0</i> <comment># Dla ATA</comment>
# <i>nvsetenv boot-file /boot/vmlinux-2.6.12 root=/dev/hda4</i>
# <comment>Pierwszy element wskazuje ścieżkę do jądra, drugi do partycji root.
# Dodać tu można wszelkie inne opcje jakie chcemy przekazać do jądra.</comment>
# <i>nvsetenv boot-command boot</i> <comment># Ustawiamy "bye" dla MacOS i
# "boot" dla Linuksa</comment>
</pre>

<note>
Możliwa jest także zmiana zmiennych związanych z bootowaniem z poziomu MacOSa. W
zależności od posiadanego modelu należy użyć <uri
link="http://penguinppc.org/bootloaders/quik/BootVars.sit.hqx">bootvars</uri>
lub <uri
link="ftp://ftp.apple.com/developer/macosxserver/utilities/SystemDisk2.3.1.smi.bin">.
Apple System Disk</uri>. Warto odwiedzić powyższą stronę quirks w celu
uzyskania szerszych informacji na ten temat.
</note>

<p>
Gdy ustawiliśmy już opcje uruchamiania, musimy upewnić się, że bootowalne obrazy
są poprawnie zainstalowane. Uruchamiamy <c>quik -v -C /boot/quik.conf</c>.
Powinniśmy uzyskać informację, że posiadamy boot block QUIK.
</p>

<note>
Jeśli coś poszło nie tak, możemy zresetować PRAM do ustawień domyślnych poprzez
kombinację <c>command + option + p + r</c>, przed uruchomieniem naszej maszyny.
Wyczyści to wartości jakie ustawiliśmy przy pomocy programu nvsetenv i powinno
umożwilić uruchomienie zarówno z bootowalnej płyty MacOSa jak i z płyty LiveCD
Linuksa.
</note>

<p>
Kolejnym krokiej jest <uri link="#reboot">Rebootowanie systemu</uri>.
</p>

</body>
</section>
<section id="bootcreator">
<title>Alternatywnie: BootCreator</title>
<body>

<impo>
BootCreator stworzy boot menu SmartFirmware napisane dla maszyn Pegasos.
</impo>

<p>
Po pierwsze, upewnijmy się, że mamy zainstalowany program <c>bootcreator</c>:
</p>

<pre caption = "Instalowanie programu bootcreator">
# <i>emerge bootcreator</i>
</pre>

<p>
Teraz przekopiujmy plik <path>/etc/bootmenu.example</path> do
<path>/etc/bootmenu</path> i zmodyfikujmy go, aby odpowiadał naszym potrzebom:
</p>

<pre caption = "Edycja pliku configuracyjnego programu bootcreator">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
Poniżej znajduje się przykładowy plik <path>/etc/bootmenu</path>.
</p>

<pre caption = "Plik konfiguracyjny programu bootcreator">
<comment>#
# Przykładowy plik dla programu bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux 2.6.12 (Normal)
ide:0 linux-2.6.12 video=radeonfb:1024x768@70 root=/dev/hda3

[SECTION]
Local HD -> Genkernel (Normal)
ide:0 kernelz-2.6.12 root=/dev/ram0 real_root=/dev/hda3 init=/linuxrc
</pre>

<p>
Następnie zajmiemy się <path>bootmenu</path>. Musimy skopiować go na partycję
boot, aby SmartFirmware mógł go odczytać. Użyjemy to tego programu
<c>bootcreator</c>:
</p>

<pre caption = "Instalowanie bootmenu">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
W czasie rebootowania musimy upewnić się, że <path>menu</path> jest plikiem,
który zostanie załadowany jako domyślny.
</note>

<p>
Następnym etapem instalacji jest <uri link="#reboot">Rebootowanie systemu</uri>.
</p>


</body>
</section>
<section id="reboot">
<title>Rebootowanie systemu</title>
<subsection>
<body>

<p>
Opuszczamy środowisko chrootowane i odmontowujemy wszystkie partycje aby możliwy
był czysty restart. Nastepnie używamy komendy <c>reboot</c>.
</p>

<pre caption="Opuszczanie chroot, odmontowywanie partycji i rebootowanie">
# <i>exit</i>
livecd ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo</i>
livecd ~# <i>reboot</i>
</pre>

<p>
Gdy nasz nowy Gentoo uruchomi się, kończymy instalację zgodnie z instrukcjami w
rozdziale.<uri link="?part=1&amp;chap=11">Finalizowanie instalacji Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
