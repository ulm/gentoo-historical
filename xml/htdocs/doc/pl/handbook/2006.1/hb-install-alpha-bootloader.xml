<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/2006.1/hb-install-alpha-bootloader.xml,v 1.1 2006/10/02 14:03:52 shadoww Exp $ -->

<sections>

<version>7.0</version>
<date>2006-08-30</date>

<section>
<title>Podejmowanie decyzji</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Gdy skonfigurowałeś jądro i zmodyfikowałeś odpowiednio niezbędne systemowe
pliki konfiguracyjne nadeszła pora zainstalowania programu, który uruchomi jądro
w momencie startu systemu. Taki program nazywa się <e>bootloader</e>.
Ale zanim zaczniesz, rozważ wszystkie opcje...
</p>

<p>
Istnieją dwa bootloadery, które działają na architekturze Alpha:  <uri
link="#aboot">aBoot</uri> i <uri link="#milo">MILO</uri>. Musisz wybrać jeden z
nich.
</p>

</body>
</subsection>
</section>
<section id="aboot">
<title>Domyślnie: Użycie programu aboot</title>
<body>

<note>
<c>aboot</c> posiada jedynie wsparcie dla partycji typu <b>ext2</b> i
<b>ext3</b>.
</note>

<p>
Zacznijmy od zainstalowania tego programu w systemie, oczywiście przy pomocy
polecenia <c>emerge</c>:
</p>

<pre caption = "Instalowanie programu aboot">
# <i>emerge aboot</i>
</pre>

<p>
Następny krok umożliwi start systemu z dysku. <c>aboot</c> zostanie uruchomiony
bezpośrednio po włączeniu komputera. Jest to możliwe dzięki zapisaniu
bootloadera <c>aboot</c> na samym początku dysku.
</p>

<pre caption = "Włączenie startu z dysku">
# <i>swriteboot -f3 /dev/sda /boot/bootlx</i>
# <i>abootconf /dev/sda 2</i>
</pre>

<note>
Jeśli używasz innego schematu partycjonowania niż przedstawiony w tym
Podręczniku odpowiednio zmodyfikuj wszystkie polecenia. Przeczytaj odpowiednie
strony podręcznika systemowego (<c>man 8 swriteboot</c> oraz <c>man 8
abootconf</c>). Ponadto jeśli partycja główna posiada system plików JFS
należy ją najpierw zamontować jako <c>ro</c> poprzez podanie odpowiedniej
opcji dla jądra.
</note>

<p>
Dodatkowo możesz uprościć start Gentoo poprzez ustawienie pliku
konfiguracyjnego programu aboot i zmiennej SRM boot_osflags.
Musisz upewnić się, że bootdef_dev jest także ustawiony poprawnie
(łatwiej to zrobić w konsoli SRM niż spod Linuksa).
</p>

<pre caption = "Automatyczny start Gentoo">
# <i>echo '0:2/boot/vmlinux.gz root=/dev/sda2' &gt; /etc/aboot.conf</i>
# <i>cd /proc/srm_environment/named_variables</i>
# <i>echo -n 0 &gt; boot_osflags</i>
# <i>echo -n '' &gt; boot_file</i>
# <i>echo -n 'BOOT' &gt; auto_action</i>
# <i>echo -n 'dkc100' &gt; bootdef_dev</i>
<comment>(Zamień dkc100 na nazwę Twojego urządzenia)</comment>
</pre>

<p>
Jeżeli w przyszłości będziesz potrzebował wejść na konsole SRM (aby odzyskać
swoją instalację Gentoo, pobaw się zmiennymi ;)) naciśnij CTRL+C, aby przerwać
automatyczny proces ładowania systemu.
</p>

<p>
Jeśli instalujesz poprzez port szeregowy nie zapomnij umieścić
flagi startu z konsoli szeregowej w <path>aboot.conf</path>.
Plik <path>/etc/aboot.conf.example</path> zawiera dodatkowe informacje.
</p>

<p>
Aboot jest już skonfigurowany i gotowy do użytku. Możesz przejść do rozdziału
<uri link="#reboot">Ponowne uruchamianie systemu</uri>.
</p>

</body>
</section>
<section id="milo">
<title>Alternatywnie: Użycie MILO</title>
<body>

<p>
Zanim przejdziesz dalej, zdecyduj w jaki sposób chcesz uruchamiać
MILO. W tej części zakładamy, że chcesz utworzyć dyskietkę startową
z MILO. Jeśli chcesz bootować z partycji MS-DOS dysku twardego,
musisz odpowiednio zmodyfikować wszystkie polecenia.
</p>

<p>
Zainstalujmy MILO przy pomocy polecenia <c>emerge</c>.
</p>

<pre caption = "Instalowanie MILO">
# <i>emerge --usepkg milo</i>
</pre>

<p>
Po zainstalowaniu MILO obrazy MILO powinny znajdować się
w <path>/opt/milo</path>. Polecenia poniżej utworzą dyskietkę
startową zawierającą MILO. Pamiętaj by użyć właściwego obrazu
, czyli tego dla Twojej architektury (Alpha).
</p>

<pre caption = "Instalowanie MILO na dyskietce">
<comment>(Najpierw włóż pustą dyskietkę)</comment>
# <i>fdformat /dev/fd0</i>
# <i>mformat a:</i>
# <i>mcopy /opt/milo/milo-2.2-18-gentoo-ruffian a:\milo</i>
# <i>mcopy /opt/milo/linload.exe a:\lilnload.exe</i>
<comment>(Dotyczy systemu typu Ruffian:</comment>
  # <i>mcopy /opt/milo/ldmilo.exe a:\ldmilo.exe</i>
<comment>)</comment>
# <i>echo -ne '\125\252' | dd of=/dev/fd0 bs=1 seek=510 count=2</i>
</pre>

<p>
Twoja dyskietka startowa MILO jest już przygotowana do uruchomienia
Gentoo Linux. Być może musisz ustawić zmienne środowiskowe
w ARCS Firmware by MILO się uruchamiało; wyjaśnienie znajdziesz pod adresem
<uri link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri> wraz z kilkoma
przykładami popularniejszych systemów i niektórymi komendami do zastosowania
w trybie interaktywnym.
</p>

<p>
Pominięcie <uri link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri>
byłoby <e>złym</e> pomysłem.
</p>

<p>
Następnie przejdź do paragrafu <uri link="#reboot">Ponowne uruchomienie
systemu</uri>.
</p>

</body>
</section>
<section id="reboot">
<title>Ponowne uruchomienie systemu</title>
<subsection>
<body>

<p>
Wyjdź ze środowiska chroot i odmontuj wszystkie zamontowane partycje. Następnie
wpisz to magiczne polecenie na które tak długo czekałeś: <c>reboot</c>
</p>

<pre caption="Wyjście z chroota, odmontowanie wszystkich zamontowanych partycji i ponowne uruchomienie">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Nie zapomnij o wyjęciu LiveCD z napędu, bo zabootujesz system z płyty zamiast
swojego nowego Gentoo.
</p>

<p>
Po ponownym uruchomieniu komputera w celu dokończenia instalacji Gentoo przejdź
do rozdziału <uri link="?part=1&amp;chap=11">Finalizowanie instalacji
Gentoo</uri>.
</p>

</body>
</subsection>
</section>

</sections>
