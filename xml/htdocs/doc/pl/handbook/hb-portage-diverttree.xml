<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/handbook/hb-portage-diverttree.xml,v 1.18 2010/09/19 18:25:25 shadow Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<abstract>
Opis kilku sztuczek związanych z codzienną pracą w Gentoo, m.in. tworzenia
własnego drzewa Portage, synchronizowania tylko wybranych kategorii, czy
wstrzykiwania (inject) pakietów.
</abstract>

<version>1.7</version>
<date>2010-07-13</date>

<section>
<title>Używanie podzestawów drzewa Portage</title>
<subsection>
<title>Pomijanie kategorii/pakietów</title>
<body>

<p>
Możemy selektywnie uaktualniać poszczególne kategorie/pakiety oraz zignorować
pozostałe kategorie/pakiety. Osiągamy to zmuszając <c>rsync</c> do pominięcia
kategorii/pakietów podczas wykonywania <c>emerge --sync</c>.
</p>

<p>
W pliku  <path>/etc/make.conf</path> można skonfigurować zmienną
<c>--exclude-from</c>, która powinna zawierać ścieżkę do pliku, w którym
znajdują się informacje o kategoriach i pakietach, które mają być pomijane przy
aktualizowaniu drzewa.
</p>

<pre caption="Definiowanie pliku z pominiętymi pakietami w make.conf">
PORTAGE_RSYNC_EXTRA_OPTS="--exclude-from=/etc/portage/rsync_excludes"
</pre>

<pre caption="Wyłączanie wszystkich gier w pliku /etc/portage/rsync_excludes">
games-*/*
</pre>

<p>
Należy zwrócić uwagę, że może to doprowadzić do problemów z zależnościami, gdyż
nowe, niepominięte pakiety mogą zależeć od nowych lecz pominiętych pakietów.
</p>

</body>
</subsection>
</section>
<section>
<title>Dodawanie nieoficjalnych ebuildów</title>
<subsection>
<title>Definiowanie katalogu-nakładki na Portage</title>
<body>

<p>
Można zmusić Portage, aby używało ebuildów, które nie są dostępne w oficjalnym
drzewie. W tym celu najpierw należy utworzyć nowy katalog (na przykład
<path>/usr/local/portage</path>), w którym będą znajdować się dodatkowe ebuildy,
przy czym należy pamiętać o zachowaniu struktury katalogów takiej jak w
oficjalnym drzewie Portage.
</p>

<p>
Następnie trzeba zdefiniować zmienną PORTDIR_OVERLAY w pliku
<path>/etc/make.conf</path>, aby wskazywała na właśnie utworzony katalog.
Możliwe jest teraz użycie tych ebuildów bez obawy, że zostaną usunięte lub
nadpisane przy następnym uruchomieniu <c>emerge --sync</c>.
</p>

</body>
</subsection>
<subsection>
<title>Praca z kilkoma nakładkami (ang. overlay)</title>
<body>

<p>
Zaawansowani użytkownicy często chcą zdefiniować kilka nakładek na drzewo
Portage, gdyż dzięki temu mogą w łatwy sposób testować programy, które jeszcze
nie znalazły się oficjalnym drzewie lub po prostu używać programów, do których
ebuildów w nim nie ma i nie będzie. Pakiet <c>app-portage/layman</c> zawiera
program <c>layman</c>, który pozwala na łatwą aktualizację tych nakładek
z repozytoriów ich projektów.
</p>

<p>
Instalację i konfigurację aplikacji <c>layman</c> przedstawiono w dokumencie
<uri link="/proj/en/overlays/userguide.xml">Overlays Users' Guide</uri>. Po
instalacji należy dodać interesujące nas repozytorium wydając polecenie
<c>layman -a &lt;overlay-name&gt;</c>.
</p>

<p>
Przypuśćmy, że posiadamy dwa repozytoria, <c>java</c> (dla ebuildów java) oraz
<c>entapps</c> (dla aplikacji rozwijanych w warunkach domowych, jednak na
potrzeby przedsiębiorstw). Ich aktualizację możemy przeprowadzić w następujący
sposób:
</p>

<pre caption="Użycie layman do aktutalizacji repozytoriów">
# <i>layman -S</i>
</pre>

<note>
Więcej informacji na temat pracy z repozytoriami, znajdziemy w manualu
dostępnym po wydaniu komendy <c>man layman</c> oraz w <uri
link="/proj/en/overlays/userguide.xml">podręczniku użytkowników layman</uri>.
</note>

</body>
</subsection>
</section>
<section>
<title>Programy, którymi nie zarządza Portage</title>
<subsection>
<title>Informowanie Portage a programach, którymi ma nie zarządzać</title>
<body>

<p>
Bardzo często chcemy skonfigurować, zainstalować i zarządzać programami
samodzielnie, bez pomocy Portage, nawet jeśli Portage zawiera te programy.
Najczęściej są to źródła jądra i sterowniki nvidii. Można skonfigurować Portage,
aby myślało, że dany pakiet jest zainstalowany w systemie. Ten proces nazywany
jest <e>wstrzykiwaniem</e> i jest obsługiwany przez Portage dzięki plikowi
<path>/etc/portage/profile/package.provided</path>.
</p>

<p>
Na przykład, jeśli chcemy poinformować Portage, że ręcznie zainstalowaliśmy
<c>gentoo-sources-2.6.11.6</c>, dodajemy następującą linijkę do
<path>/etc/portage/profile/package.provided</path>:
</p>

<pre caption="Przykładowa linijka dla pliku package.provided">
sys-kernel/gentoo-sources-2.6.11.6
</pre>

</body>
</subsection>
</section>
</sections>
