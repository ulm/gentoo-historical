<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/articles/prompt-magic.xml,v 1.2 2005/10/14 10:07:14 rane Exp $ -->

<guide link="/doc/pl/articles/prompt-magic.xml" lang="pl" disclaimer="articles">
<title>Prompt dla zaawansowanych</title>

<author title="Autor">
<mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Tłumaczenie">
<mail link="linux_user@o2.pl">Michał Kurgan</mail>
</author>

<abstract>
Dlaczego trzymać się domyślnego znaku zachęty jeśli z łatwością można go
poprawić, poprzez dodanie kolorów czy dodatkowych informacji. W tym poradniku,
Daniel Robbins pokazuje co należy zrobić, aby prompt spełniał nasze
oczekiwania, również tutaj można znaleźć opis konfiguracji terminala tak by
jego pasek tytułowy był automatycznie aktualizowany.
</abstract>

<!-- The original version of this article was first published on IBM
developerWorks, and is property of Westtech Information Services. This
document is an updated version of the original article, and contains
various improvements made by the Gentoo Linux Documentation team -->

<version>1.0</version>
<date>2005-10-09</date>

<chapter>
<title>Modyfikujemy znak zachęty</title>
<section>
<body>

<p>
Każdy użytkownik systemu Linux/UNIX wiele czasu spędza pracując na konsoli,
widząc na swoim ekranie to:
</p>

<pre caption="Znak zachęty zwykłego użytkownika">
bash-2.04$
</pre>

<p>
Jeśli przypadkiem jest zalogowany na koncie administratora, ma zaszczyt
oglądać inną wersję tego samego "pięknego" znaku zachęty:
</p>

<pre caption="Znak zachęty administratora">
bash-2.04#
</pre>

<p>
Pokazane znaki zachęty nie są szczególnie interesujące. Nie dziwi więc, że
szereg dystrybucji Linuksa stosuje własne, dodając kolory i inne informacje.
Pomimo tego, nawet jeśli posiadasz taką nowoczesną dystrybucję, często znak
zachęty nie jest idealny. Możliwe jest zarówno dodanie jak i usunięcie kolorów,
czy informacji. Jego modyfikacja, czy też stworzenie od zera, nie jest takie
trudne jak mogłoby się wydawać.
</p>

</body>
</section>
<section>
<title>Podstawy</title>
<body>

<p>
Korzystając z powłoki bash, do zmiany znaku zachęty doprowadzimy przez
modyfikację zmiennej środowiskowej <c>PS1</c>.
</p>

<pre caption="Modyfikacja zmiennej środowiskowej">
$ <i>export PS1="> "</i>
>
</pre>

<p>
Zmiany zostaną natychmiast wprowadzone w życie, co można będzie łatwo zauważyć.
By zachować ustawienia znaku zachęty należy dodać definicję <c>export</c> w
pliku <path>~/.bashrc</path>. <c>PS1</c> może zawierać zwykły tekst:
</p>

<pre caption="Własny znak zachęty">
$ <i>export PS1="To jest mój ultra fantastyczny znak zachęty > "</i>
To jest mój ultra fantastyczny znak zachęty >
</pre>

<p>
Można coś takiego uznać za interesujące, ale nie jest to szczególnie użyteczne,
gdy prompt zawiera dużo zwykłego tekstu. Większość stosowanych znaków zachęty
zawiera informacje takie jak nazwa użytkownika, aktualny katalog, czy nazwę
hosta. Tego typu dane znacznie ułatwiają korzystanie z powłoki. Przykładowo,
następujący znak zachęty będzie zawierał nazwę użytkownika i hosta:
</p>

<pre caption="Bardziej użyteczny znak zachęty">
$ <i>export PS1="\u@\H > "</i>
drobbins@freebox >
</pre>

<p>
Pokazany znak zachęty jest użyteczny dla ludzi, którzy pracują zdalnie używając
różnych kont, jako że pokazuje on zarówno gdzie oraz na jakim koncie się
znajdujemy.
</p>

<p>
W powyższym przykładzie, by uzyskać potrzebne informacje, używamy specjalnych
sekwencji, które przez bash są interpretowane jako pewne wartości, które są
używane gdy znajdują się w zmiennej <c>PS1</c>. Użyliśmy <c>\u</c> by pokazać
nazwę użytkownika oraz <c>\H</c> by uzyskać nazwę hosta. Poniżej znajduje się
kompletna lista rozpoznawanych przez bash sekwencji (znajduje się ona także na
stronie man basha, w sekcji "PROMPTING"):
</p>

<table>
<tr>
  <th>Sekwencja</th>
  <th>Opis</th>
</tr>
<tr>
  <ti>\a</ti>
  <ti>Znak dzwonka ASCII (można też użyć <c>\007</c>)</ti>
</tr>
<tr>
  <ti>\d</ti>
  <ti>Data w formacie "DzieńTyg Miesiąc Dzień"</ti>
</tr>
<tr>
  <ti>\e</ti>
  <ti>Znak ucieczki ASCII (można też użyć <c>\033</c>)</ti>
</tr>
<tr>
  <ti>\h</ti>
  <ti>Nazwa hosta do pierwszej kropki (np. "mybox")</ti>
</tr>
<tr>
  <ti>\H</ti>
  <ti>Nazwa hosta (np. "mybox.mydomain.com")</ti>
</tr>
<tr>
  <ti>\j</ti>
  <ti>Liczba zawieszonych procesów w danej powłoce (używając <c>^Z</c>)</ti>
</tr>
<tr>
  <ti>\l</ti>
  <ti>Nazwa urządzenia terminala (np. "ttyp4")</ti>
</tr>
<tr>
  <ti>\n</ti>
  <ti>Znak nowej linii</ti>
</tr>
<tr>
  <ti>\r</ti>
  <ti>Powrót karetki</ti>
</tr>
<tr>
  <ti>\s</ti>
  <ti>Nazwa pliku wykonywalnego powłoki (np. "bash")</ti>
</tr>
<tr>
  <ti>\t</ti>
  <ti>Bieżący czas w formacie 24-godzinnym (np. "23:01:01")</ti>
</tr>
<tr>
  <ti>\T</ti>
  <ti>Bieżący czas w formacie 12-godzinnym (np. "11:01:01")</ti>
</tr>
<tr>
  <ti>\@</ti>
  <ti>Bieżący czas w formacie 12-godzinnym z am/pm</ti>
</tr>
<tr>
  <ti>\u</ti>
  <ti>Nazwa użytkownika</ti>
</tr>
<tr>
  <ti>\v</ti>
  <ti>Wersja pliku wykonywalnego powłoki (np. 2.04)</ti>
</tr>
<tr>
  <ti>\V</ti>
  <ti>Wersja pliku wykonywalnego powłoki, włączając wersję poprawki</ti>
</tr>
<tr>
  <ti>\w</ti>
  <ti>Bieżący katalog roboczy (np. <path>/home/drobbins</path>)</ti>
</tr>
<tr>
  <ti>\W</ti>
  <ti>Główna część nazwy bieżącego katalogu roboczego (np. "drobbins")</ti>
</tr>
<tr>
  <ti>\!</ti>
  <ti>Numer polecenia w historii</ti>
</tr>
<tr>
  <ti>\#</ti>
  <ti>Numer polecenia (będzie wzrastał w czasie używania powłoki)</ti>
</tr>
<tr>
  <ti>\$</ti>
  <ti>
    Jeśli jesteś administratorem jest zastępowany znakiem <c>#</c>, w przeciwnym
    przypadku używany jest symbol <c>$</c>
  </ti>
</tr>
<tr>
  <ti>\xxx</ti>
  <ti>
    Znak ASCII odpowiadający liczbie szesnastkowej xxx (nieużywane cyfry należy
    zastąpić zerami, np. <c>\007</c>)
  </ti>
</tr>
<tr>
  <ti>\\</ti>
  <ti>Odwrotny ukośnik</ti>
</tr>
<tr>
  <ti>\[</ti>
  <ti>
    Początek sekwencji znaków niedrukowalnych (występujące po nim znaki nie
    powodują zmiany położenia kursora, mogą to być np. ustawienia kolorów
    terminala). Sekwencja ta umożliwia prawidłowe    zawijanie wierszy.
  </ti>
</tr>
<tr>
  <ti>\]</ti>
  <ti>
    Koniec sekwencji znaków niedrukowalnych.
  </ti>
</tr>
</table>

<p>
Są to wszystkie specjalne sekwencje interpretowane przez bash. Znając ich
działanie można teraz trochę własnoręcznie eksperymentować. Po tym głębszym
zapoznaniu się z mechanizmami rządzącymi znakiem zachęty czas na jej kolejne
urozmaicenie, dodamy kolory.
</p>

</body>
</section>
<section>
<title>Kolory</title>
<body>

<p>
Dodanie kolorów jest oczywiście bardzo proste; pierwszym krokiem jest
stworzenie odpowiadającego nam prompta bez użycie dodatkowych kolorów.
Następnie jedyne co musimy zrobić to dodać specjalne sekwencje sterujące
terminalem (nie powłoką bash), które dodadzą nieco barw znakowi zachęty.
Standardowy terminal systemowy oraz te graficzne umożliwiają zmianę koloru tła,
pierwszego planu (tekst), a także wagi czcionki (czy tekst jest pogrubiony, czy
nie). Do wyboru mamy osiem podstawowych kolorów, więc mamy z czego wybierać :).
</p>

<p>
Użycie danego koloru wiąże się z zastosowaniem specjalnej sekwencji sterującej w
zmiennej <c>PS1</c> -- zasadniczo umieszczając odpowiednie liczby pomiędzy
<c>\e[</c> (znak ucieczki) i <c>m</c>. Jeśli chcemy użyć większą ilość kodów,
używamy znaku średnika pomiędzy każdą z nich. Poniżej przykładowy kod koloru:
</p>

<pre caption="Dodanie koloru">
"\e[0m"
</pre>

<p>
Zastosowanie powyższego kodu spowoduje powrót do wartości domyślnych ustawień
terminala, dotyczących koloru pierwszego planu, tła oraz wagi tekstu. Z tego
powodu jest on najczęściej stosowany na końcu znaku zachęty, aby tekst używany
w powłoce nie był kolorowy. Czas poznać kody umożliwiające na zastosowanie
wszystkich dostępnych w terminalu barw:
</p>

<figure link="/images/docs/prompt-magic-colortable.gif" caption="Tabelka z
kolorami"/>

<p>
By otrzymać wymagany kod wpierw należy wybrać żądany kolor, następnie znaleźć
liczby  odpowiadające pierwszemu planowi (30-37) i tłu (40-47). Przykładowo,
jeśli chcemy użyć zielonego koloru na czarnym tle, musimy użyć liczb 32 i 40.
Na koniec należy dodać znalezione kody do definicji znaku zachęty:
</p>

<pre caption="Podstawowy znak zachęty">
$ <i>export PS1="\w> "</i>
</pre>

<p>
Teraz należy dodać interesujące nas kolory:
</p>

<pre caption="Kolorowy znak zachęty">
$ <i>export PS1="\e[32;40m\w> "</i>
</pre>

<p>
Jak na razie całkiem nieźle, ale to jeszcze nie koniec. Po tym jak bash
zaprezentuje nam bieżący katalog roboczy, musimy jeszcze zmienić z powrotem
aktualny kolor na domyślny używając wspomnianej już sekwencji <c>\e[0m</c>:
</p>

<pre caption="Poprawiony, kolorowy znak zachęty">
$ <i>export PS1="\e[32;40m\w> \e[0m"</i>
</pre>

<p>
Powyższy przykład zapewni nam przyjemny, zielony znak zachęty, ale ciągle
możemy go poddać drobnym, aczkolwiek wskazanym, modyfikacjom. Po pierwsze nie
musimy wskazywać użycia koloru tła, jako że kolor czarny, oznaczony przez
liczbę 40, jest jego wartością domyślną. Także sam kolor zielony jest trochę
ciemny, aby był jaśniejszy wystarczy dodać kod <c>1</c> dzięki czemu uzyskamy
tego co chcemy. Dodatkowo wszystkie niedrukowalne znaki powinniśmy otoczyć
specjalnymi sekwencjami <c>\[</c> i <c>\]</c>, co spowoduje, że bash będzie
poprawnie rozpoznawał ilość znaków  występujących w promptcie i zapewni poprawne
zawijanie linii. Gdybyśmy ich nie dodali, otrzymamy oczywiście taki sam prompt,
ale gdy będziemy chcieli użyć komendy nie mieszczącej się w jednej linii
terminala zakończy się to bałaganem na ekranie, uniemożliwiającym sprawną pracę.
Oto finalny rezultat naszych modyfikacji:
</p>

<pre caption="Znak zachęty po modyfikacjach">
$ <i>export PS1="\[\e[32;1m\]\w> \[\e[0m\]"</i>
</pre>

<p>
Oczywiście możemy dodać znacznie więcej kolorów by uatrakcyjnić jego wygląd:
</p>

<pre caption="Więcej kolorów">
$ <i>export PS1="\[\e[36;1m\]\u@\[\e[32;1m\]\H> \[\e[0m\]"</i>
</pre>

</body>
</section>
<section>
<title>Zabawa z xterm</title>
<body>

<p>
Teraz każdy z nas może się pochwalić już całkiem pokaźną wiedzą dotyczącą znaku
zachęty, ale wciąż to jeszcze nie wszystko. Możemy zastosować kolejne specjalne
kody, dzięki którym pasek tytułowy terminala X (np. rxvt, aterm) będzie
dynamicznie odświeżany. By tego dokonać wystarczy dodać następującą sekwencję do
zmiennej <c>PS1</c>:
</p>

<pre caption="Zmiana paska tytułowego terminala">
"\e]2;pasek tytułowy\a"
</pre>

<p>
Zmieniając ciąg <c>pasek tytułowy</c> możemy w prosty sposób modyfikować
zawartość paska tytułowego terminala. Oczywiście nie musimy używać statycznego
tekstu i możemy zastosować sekwencje specjalne omówione już wcześniej. W ten
sposób możemy więc uzyskać nazwę użytkownika, hosta, czy też aktualny katalog
roboczy widoczny zarówno na pasku tytułowym jak i w samym znaku zachęty.
</p>

<pre caption="Niezwykle przydatny prompt">
$ <i>export PS1="\[\e]2;\u@\H \w\a\e[32;1m\]>\[\e[0m\] "</i>
</pre>

<p>
Powyższy znak zachęty został użyty na przedstawionym wcześniej zrzucie ekranu
zawierającym tabelę z dostępnymi w terminalu kolorami. Sam używam właśnie takiej
konfiguracji z tego względu, że cała potrzebna informacja zawarta jest w pasku
tytułowym, pozostawiając dla linii poleceń maksymalnie wiele miejsca. W tym
przypadku należy także pamiętać o dodaniu znaków <c>\[</c> i <c>\]</c> dla
części odpowiedzialnej za generowanie informacji dla paska tytułowego, gdyż nie
są one drukowane w znaku zachęty, więc musimy o tym fakcie poinformować powłokę.
W powyższym przykładzie pozostaje jednak problem przypadku gdy nie używamy
terminala z poziomu uruchomionego serwera X. Wtedy informacja o aktualnym
położeniu może być pomocna, więc by była ona widoczna musimy oba te przypadki
odseparować. W tym celu można dodać do <path>~/.bashrc</path> następujące
komendy:
</p>

<pre caption="Uniwersalny znak zachęty dla xterm i konsoli systemowej">
if [ "$TERM" = "linux" ]
then
    <comment># Pracujemy na konsoli systemowej lokalnie lub zdalnie</comment>
    export PS1="\[\e[32;1m\]\u@\H > \[\e[0m\]"
else
    <comment># Nie używamy konsoli systemowej, przyjmujemy że jest to xterm</comment>
    export PS1="\[\e]2;\u@\H \w\a\e[32;1m\]>\[\e[0m\] "
fi
</pre>

<p>
Warunek dotyczący używanego znaku zachęty zapewni jego odpowiedni dobór w
zależności od typu terminala. Dodatkowo należy jeszcze poprawić zawartość
<path>~/.bash_profile</path> tak, by zawartość pliku <path>~/.bashrc</path> była
używana przy starcie powłoki:
</p>

<pre caption="Edycja bash_profile">
source ~/.bashrc
</pre>

<p>
Tym sposobem uzyskaliśmy niezwykle pomocny w codziennej pracy znak zachęty 
niezależnie od tego czy uruchomimy powłokę systemową, czy też jeden z 
xterminali.
</p>

<p>
To już wszystkie sekrety związane z tworzeniem własnego znaku zachęty, uzyskana
w poradniku wiedza z pewnością pomoże w stworzeniu własnego, unikalnego prompta.
</p>

</body>
</section>
<section>
<title>Materiały</title>
<body>

<ul>
<li>
<uri link="http://www.rxvt.org">rxvt</uri> jest doskonałym, małym xterminalem,
posiadającym rozbudowaną dokumentację opisującą sekwencje sterujące. Znajduje
się ona w katalogu <path>doc</path> tarballa zawierającego źródła programu.
</li>
<li>
<uri link="http://aterm.sourceforge.net">aterm</uri> jest kolejnym xterminalem,
bazującym na rxvt. Charakteryzuje się wieloma ciekawymi możliwościami
wizualnymi m.in. przeźroczystość.
</li>
<li>
<uri
link="http://bashish.mine.nu/BashishWiki/index.php/Main_Page">bashish</uri>
jest motywem tematycznym dla różnych typów terminali. <uri
link="http://bashish.mine.nu/BashishWiki/index.php/Screenshots">Tutaj</uri>
można zobaczyć go w działaniu.
</li>
</ul>

</body>
</section>
</chapter>
</guide>
