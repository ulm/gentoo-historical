<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/articles/partitioning-p2.xml,v 1.2 2005/10/09 21:43:23 rane Exp $ -->

<guide link="/doc/pl/articles/partitioning-p2.xml" lang="pl" disclaimer="articles">
<title>Dzielenie dysku na partycje, przenosiny /tmp i /var</title>

<author title="Autor">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Tłumaczenie">
  <mail link="edi15ta@gazeta.pl">Mateusz Kotyrba</mail>
</author>

<abstract>
W drugiej części wskazówek zmian organizacji partycji w systemie, Daniel
Robbins pokazuje jak przenieść /tmp i /var na ich własną, wspólną partycję.
Pokazuje on również kilka sztuczek za pomocą, których można zminimalizować
przestoje i zapobiec popełnieniu kosztownych błędów.
</abstract>

<!-- The original version of this article was first published on IBM
developerWorks, and is property of Westtech Information Services. This
document is an updated version of the original article, and contains
various improvements made by the Gentoo Linux Documentation team -->

<version>1.2</version>
<date>2005-10-09</date>

<chapter>
<title>Łączenie danych</title>
<section>
<title>Wprowadzenie</title>
<body>

<p>
W mojej <uri link="/doc/pl/articles/partitioning-p1.xml">ostatniej
wskazówce</uri>, z powodzeniem przenieśliśmy katalog <path>/home</path> na
nową partycję. Teraz nadszedł czas, aby się nauczyć jak przenieść często
modyfikowane pliki na nową partycję. Często modyfikowane pliki znacznie się
przyczyniają do fragmentacji. Jedną z najlepszych możliwości, aby temu
zapobiec jest przechowywanie ich na osobnej partycji. W ten sposób
fragmentacja wywołana przez często modyfikowane pliki nie ma wpływu na inne
partycje. Jako sam pomysł, jest to łatwe do zrozumienia, ale jak to się ma do
wykonania?
</p>

<p>
Po pierwsze należy stworzyć nową partycję dla naszego konkretnego celu --
przechowywania często modyfikowanych plików. W celu zwiększenia wydajności
można umieścić tę partycję na osobnym dysku. Następnie wykonamy kilka kroków
wymaganych, aby przenieść <path>/tmp</path> i <path>/var</path> na tę nową
partycję.
</p>

<warn>
Omawiana technika opisuje sposób przeniesienia partycji. Jest ona tak
zaprojektowana, aby użytkownik mógł wycofać się w każdym momencie, ale
nie chroni ona przed błędem użytkownika. Innymi słowy w dowolnym momencie,
kiedy formatujemy partycje lub kopiujemy duże ilości plików, istnieje
możliwość, że wpiszemy złe polecenie, powodując tym samym zniszczenie
dużej ilości danych. Z tego powodu gorąco się zaleca, aby <e>podjąć
odpowiednie kroki i przed przejściem dalej stworzyć kopię zapasową wszystkich
niezbędnych plików</e>.
</warn>

</body>
</section>
<section>
<title>Tworzymy system plików na nowej partycji</title>
<body>

<p>
W pierwszym kroku stworzymy nową partycję, która będzie dostatecznie duża,
aby pomieścić <path>/var</path> i <path>/tmp</path>. Będziemy potrzebowali
dodatkowy dysk lub wolną (nieużywaną) partycję, na której umieścimy często
modyfikowane pliki. Jeśli stworzymy partycję za pomocą <c>fdisk</c> lub
<c>cfdisk</c>, wtedy konieczne będzie ponowne uruchomienie systemu. Następnie
formatujemy nową partycję (możemy to wykonywać w trybie multiuser; dam
znać kiedy należy przejść do trybu single-user):
</p>

<pre caption="Tworzenie systemu plików">
# <i>mkfs.ext2 /dev/???</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Montujemy to do /mnt/rwstorage</title>
<section>
<body>

<p>
Tak jak w mojej poprzedniej wskazówce <path>???</path> należy zastąpić nazwą
urządzenia nowej, pustej partycji. Przypadkowo wpisując złą nazwę zniszczymy
istniejące dane, więc należy być ostrożnym! Po wpisaniu tego polecenia,
otrzymamy system plików ext2 na zupełnie nowej partycji. Jesteśmy prawie
gotowi, aby go zamonotować, ale najpierw stwórzmy punkt montowania.
</p>

<pre caption="Tworzenie punktu montowania">
# <i>mkdir /mnt/odczytzapis</i>
</pre>

<p>
Wybrałem nazwę <path>odczytzapis</path>, aby przypomnieć, że ta partycja
została stworzona szczególnie po to, aby przechowywać często modyfikowane
pliki. Montujemy partycję wpisując:
</p>

<pre caption="Montowanie partycji">
# <i>mount /dev/??? /mnt/odczytzapis</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Tworzenie nowego /tmp</title>
<section>
<body>

<p>
Partycja jest już zamontowana i jesteśmy gotowi, aby stworzyć nowy katalog
<path>/tmp</path>:
</p>

<pre caption="Tworzenie nowego /tmp">
# <i>cd /mnt/odczytzapis</i>
# <i>mkdir tmp</i>
# <i>chmod 1777 tmp</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Przejście do trybu single-user</title>
<section>
<body>

<p>
Nowy katalog w <path>/mnt/odczytzapis/tmp</path> posiada odpowiednie prawa
dostępu dla katalogu tymczasowego. Teraz przechdzimy do trybu single-user,
ponieważ musimy skopiować <path>/var</path>. Jak zwykle maksymalnie opóźniłem
przejście do trybu single-user. Nie chcemy, aby żaden program odczytywał lub
zapisywał pliki w <path>/var</path>, więc należy zatrzymać wszystkie demony,
odłączyć wszystkich użytkowników i wpisać:
</p>

<pre caption="Wejście w tryb single-user">
# <i>init 1</i>
</pre>

<p>
W razie potrzeby wpisujemy hasło. Teraz powinniśmy znajdować się w
powłoce roota i wszystkie niepotrzebne demony powinny być zatrzymane.
Tworzymy nowy katalog dla naszych plików z <path>/var</path> poprzez wpisanie:
</p>

<pre caption="Tworzenie nowego katalogu">
# <i>cd /mnt/odczytzapis</i>
# <i>mkdir var</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Kopiujemy /var</title>
<section>
<body>

<p>
Domyślne uprawnienia dla katalogu <path>/mnt/newstorage/var</path> powinny
być poprawne, więc jesteśmy gotowi, aby skopiować wszystkie dane z
<path>/var</path> na nową partycję:
</p>

<pre caption="Kopiowanie danych">
# <i>cd /var </i>
# <i>cp -ax * /mnt/odczytzapis/var</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Kopia zapasowa i tworzenie dowiązań symbolicznych</title>
<section>
<body>

<p>
Po wykonaniu tego polecenia, będziemy posiadali dokładną kopię katalogu
<path>/var</path> w <path>/mnt/odczytzapis/var</path>. Pewnie jesteśmy ciekawi
jak zmusić Gentoo, aby używało <path>/mnt/odczytzapis/var</path> i
<path>/mnt/odczytzapis/tmp</path> zamiast domyślnych w katalogu systemowym.
Wykonamy to bardzo łatwo poprzez stworzenie dowiązań symbolicznych --
stworzymy nowe dowiązania symboliczne, <path>/tmp</path> i <path>/var</path>,
które będą wskazywały na odpowiednie katalogi w <path>/mnt/odczytzapis</path>.
Najpierw, stwórzmy kopię zapasową oryginalnych katalogów:
</p>

<pre caption="Kopia zapasowa katalogów">
# <i>cd /</i>
# <i>cp var var.old</i>
# <i>cp tmp tmp.old</i>
</pre>

<p>
Ostatnia linia prawdopodobnie nie jest konieczna, ponieważ jest bardzo
prawdopodobne, że w <path>/tmp</path> nie znajduje się nic istotnego. Teraz
tworzymy dowiązania symboliczne:
</p>

<pre caption="Tworzenie dowiązań symbolicznych">
# <i>cd /</i>
# <i>ln -s /mnt/odczytzapis/var /var</i>
# <i>ln -s /mnt/odczytzapis/tmp /tmp</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Kończące zmiany w /etc/fstab</title>
<section>
<body>

<p>
Teraz kiedy którykolwiek z programów zechce skorzystać z katalogu
<path>/var</path>, będzie automatycznie przeniesiony do
<path>/mnt/odczytzapis/var</path>! Podobnie dla <path>/tmp</path>. Został nam
ostatni krok. Jednakże może on być bezpiecznie wykonany w trybie multiuser.
Nadszedł czas, aby uruchomić ponownie Apache i pozwolić wszystkim użytkownikom
na zalogowanie się. Wychodzimy z poziomu uruchamiania 1 poprzez wciśnięcie
<c>CTRL-D</c>. Po uruchomieniu systemu logujemy się jako root.
</p>

<p>
W ostatnim kroku konfigurujemy <path>/etc/fstab</path>, żeby
<path>/dev/???</path> był automatycznie montowany w
<path>/mnt/odczytzapis</path>. Dodajemy następującą linię do
<path>/etc/fstab</path>:
</p>

<pre caption="Konfiguracja fstab">
/dev/???   /mnt/odczytzapis   ext2   defaults   1   2
</pre>

<impo>
Jeśli używamy jądra w okolicach 2.3+, bardzo prawdopodobne, że w
<path>/etc/fstab</path> będzie się znajdowała następująca linia:
</impo>

<pre caption="Pamięć współdzielona">
none   /var/shm   shm   defaults   0   0
</pre>

<p>
Ta linia włącza pamięć współdzieloną w systemie i domyślnie jest montowana w
<path>/var</path>. W celu właściwego działania tej linii, należy ją umieścić
pod dodaną przez nas linią. W ten sposób, podczas włączania Gentoo,
<path>/mnt/odczytzapis</path> zostanie najpierw zamonotowane (włączając /var).
Wtedy i tylko wtedy urządzenie shm zostanie zamontowane w katalogu
<path>/var/shm</path>, którym jest tak naprawdę
<path>/mnt/odczytzapis/var/shm</path>. Należy się upewnić, że obie linie są w
następującym porządku:
</p>

<pre caption="Włączanie pamięci współdzielonej">
/dev/???        /mnt/odczytzapis  ext2    defaults       1     2
none            /var/shm        shm     defaults       0     0
</pre>

<p>
Po zapisaniu zmian w <path>/etc/fstab</path>, nasz system został pomyślnie
rozbudowany! Po sprawdzeniu czy wszystko działa poprawnie, będziemy mogli
bezpiecznie usunąć katalogi kopii zapasowych <path>/tmp.old</path> i
<path>/var.old</path>. Gratulacje -- pomyślnie skonfigurowaliśmy partycje w
systemie, uzyskując optymalną wydajność.
</p>

</body>
</section>
<section id="resources">
<title>Zasoby</title>
<body>

<ul>
  <li>
    W <uri link="/doc/pl/articles/partitioning-p1.xml">Dzielenie dysku na
partycje, przenosiny /home</uri>, pokazuję krok po kroku jak przenieść
katalog <path>/home</path> na nową partycję.
  </li>
  <li>
    W <uri link="/doc/pl/articles/maximum-swappage.xml">Maksymalna wydajność
swapa</uri>, pokazuję jak drastycznie zwiększyć wydajność swapa pod Linuksem.
  </li>
  <li>
    W <uri link="/doc/pl/articles/partition-planning.xml">Wskazówki
dotyczące podziału dysku na partycje</uri>, dzielę się kilkoma możliwościami
wydajnego rozmieszczenia partycji na dysku.
  </li>
  <li>
    Zawsze polecam sprawdzenie <uri
link="http://tldp.org/docs.html#howto">przewodników</uri> na <uri
    link="http://tldp.org/">The Linux Documentation Project</uri> -- są
one cennym źródłem.
  </li>
</ul>

</body>
</section>
<section>
<title>O autorze</title>
<body>

<p>
Daniel Robbins lives in Albuquerque, New Mexico. He was the President/CEO of
Gentoo Technologies Inc., the Chief Architect of the Gentoo Project and is a
contributing author of several books published by MacMillan: Caldera OpenLinux
Unleashed, SuSE Linux Unleashed, and Samba Unleashed. Daniel has been involved
with computers in some fashion since the second grade when he was first exposed
to the Logo programming language and a potentially lethal dose of Pac Man. This
probably explains why he has since served as a Lead Graphic Artist at SONY
Electronic Publishing/Psygnosis. Daniel enjoys spending time with his wife Mary
and his new baby daughter, Hadassah. You can contact Daniel at
<mail>drobbins@gentoo.org</mail>.
</p>

</body>
</section>
</chapter>
</guide>
