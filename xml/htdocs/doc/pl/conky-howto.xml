<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/conky-howto.xml,v 1.2 2006/04/08 17:48:22 rane Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/pl/conky-howto.xml" lang="pl">
<title>Gentoo Linux Conky Howto</title>

<author title="Autor">
  <mail link="admin@sdesign.us">Bill Woodford</mail>
</author>
<author title="Redaktor">
  <mail link="brenden@rty.ca">Brenden Matthews</mail>
</author>
<author title="Tłumaczenie">
  <mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>

<abstract>
Opis instalacji i konfiguracji programu Conky, służącego do monitorowania
systemu.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.0</version>
<date>2006-03-11</date>

<chapter>
<title>Wprowadzenie</title>
<section>
<title>Krótko o Conky</title>
<body>

<p>
Posiadacze komputerów z Gentoo zwykle muszą się nauczyć 30 różnych poleceń w
celu sprawdzania co w danym momencie ich maszyna robi. Znacznie łatwiej jest
użyć do tych celów programu monitorującego, takiego jak Conky.
</p>

</body>
</section>
<section>
<title>Jak to działa?</title>
<body>

<p>
W przeciwieństwie do innych programów monitorujących, takich jak np. top,
conky może zostać uruchomione w osobnym oknie w środowisku graficznym lub po
prostu w oknie "root" - czyli na tapecie. Istnieje również opcja wysyłania
informacji z Conky do stdout, ale nie jest to przedmiotem tego artykułu.
Program potrafi wyświetlać zebrane informacje na wiele różnych sposobów, za
pomocą tekstu, pasków postępu i wykresów. W przeciwieństwie do programu top,
można tu w pełni skonfigurować wygląd raportu. Dodatkowo conky potrafi udzielać
informacji na temat różnych programów służących do odtwarzania muzyki (takich
jak XMMS, BMPx, Music Player Deamon, Audacious Media Player), informuje ile
maili oczekuje w kolejce do przeczytania itd. Jeśli conky nie posiada
możliwości wyświetlenia żądanej informacji, zwykle wystarczy dopisanie
krótkiego skryptu. Przykładami takiego postępowania są strumienie RSS,
zliczanie oczekującej na przeczytanie poczty, informacje o pogodzie, informacje
z boinc, a nawet dane dotyczące portage.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Instalowanie Conky</title>
<section>
<title>Podstawowa instalacja</title>
<body>

<p>
W Gentoo dostępny jest ebuild umożliwiający szybką i bezproblemową instalację
Conky. Warto zwrócić uwagę na dostępne flagi USE. Większość osób zapewne
wybierze tu współpracę ze środowiskiem graficznym (<c>X</c>) oraz flagi
związane z programami służącymi do odtwarzania muzyki jakich używa (poza mpd).
Współpraca z XMMS (<c>xmms</c>) i Audacious (<c>audacious</c>) jest realizowana
za pomocą dodatku xmms-infopipe (<c>infopipe</c>). Aby używać opcji
kontrolowania portów TCP, należy WYŁĄCZYĆ flagę USE <c>ipv6</c>, ponieważ
monitorowanie działa jedynie z ipv4.
</p>

<p>
Dzięki fladze <c>truetype</c> zostanie dokompilowana obsługa czcionek TrueType
z użyciem Xft. Większość osób włącza tę opcję.
</p>

<pre caption="/etc/portage/package.use">
<comment>(Przykładowe ustawienia USE)</comment>
# <i>echo app-admin/conky truetype audacious -xmms -infopipe -ipv6 >> /etc/portage/package.use</i>
</pre>

<p>
Po ustawieniu flag USE przystępujemy do instalacji Conky.
</p>

<pre caption="Instalowanie Conky">
# <i>emerge -av conky</i>
</pre>

<p>
Można przetestować program, wpisując po prostu <c>conky</c> w oknie terminala.
Pozwoli to na szybkie zapoznanie się z wyglądem programu i zdecydowanie co chce
się zmienić lub usunąć.
</p>

<pre caption="Pierwsze uruchomienie Conky">
$ <i>conky</i>
</pre>

<p>
Kolejny krok to konfiguracja Conky, tak by odpowiadało indywidualnym potrzebom
użytkownika.
</p>

</body>
</section>
<section>
<title>Konfiguracja Conky</title>
<body>

<p>
Domyślnie Conky szuka pliku konfiguracyjnego w katalogu domowym użytkownika, w
<path>~/.conkyrc</path>. Plik ten może zawierać wszystkie opcje konfiguracyjne,
tekst, kolory i zmienne, służące do kontrolowania wyglądu programu. Przykładowy
plik konfiguracyjny znajduje się w
<path>/usr/share/doc/&lt;conky-version&gt;/Conkyrc.sample.gz</path>. Oczywiście
&lt;conky-version&gt; to numer używanej wersji Conky.
</p>

<pre caption="Kopiowanie przykładowego pliku konfiguracyjnego do katalogu domowego">
<comment>(Należy zastąpić <b>1.4.0-r1</b> wersją używanego programu)</comment>
$ <i>zcat /usr/share/doc/conky-1.4.0-r1/conkyrc.sample.gz >> ~/.conkyrc</i>
</pre>

<p>
Następnie otwieramy ten plik w ulubionym edytorze. Od razu widać, że plik ten
został podzielony na dwie sekcje. Pierwsza dotyczy wszelkich opcji
konfiguracyjnych programu i kontroluje jego zachowanie. Są tam opcje takie jak
<c>update_interval</c>, czyli jak często Conky będzie odświeżane na ekranie.
Druga część pliku zawiera dokładny tekst, wykresy i zmienne, które są
wyświetlane na ekranie. Są tam wpisy takie jak czas od włączenia komputera
(<c>$uptime</c>), obciążenie procesora (<c>$cpu</c>) i wszystko, co tylko
chcemy, aby było wyświetlane. Pierwsza część rozpoczyna się na początku pliku,
druga od słowa <c>TEXT</c>. Komentarze zaczynają się od znaku <c>#</c>. (Tylko
w pierwszej części pliku, w drugiej wyświetlane jest wszystko).
</p>

<p>
Listy wszystkich dostępnych opcji konfiguracyjnych i zmiennych znajdują się pod
adresami <uri>http://conky.sourceforge.net/config_settings.html</uri> i
<uri>http://conky.sourceforge.net/variables.html</uri>. Zdjęcia ekranu, skrypty
i przykładowe pliki konfiguracyjne można znaleźć pod adresem
<uri>http://conky.sourceforge.net/screenshots.html</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rozszerzanie Conky</title>
<section>
<title>Wychodzimy poza wbudowane możliwości</title>
<body>

<p>
Jeśli pożądanej opcji nie ma w Conky, można skorzystać z możliwości
rozszerzania wbudowanych w program. Służą do tego zmienne <c>$exec</c>, która
uruchomi podane po niej polecenie wraz z każdym odświeżeniem Conky,
<c>$execi</c>, która uruchomi polecenie co jakiś podany odstęp czasu oraz
<c>$texeci</c>, która uruchomi własny wątek z podaną częstotliwością.
</p>

<pre caption="Przykłady skryptów">
<i>${exec grep 'sudo' /var/log/messages | tail -n 4}</i>
<i>${execi 30 ~/scripts/emerge-status.sh</i>
<i>${texeci 600 ~/scripts/gmail.pl}</i>
</pre>

<note>
W każdej z tych zmiennych zadziała każde polecenie, które da się uruchomić w
powłoce. Warto jednak pamiętać, że polecenia te muszą się kończyć, co oznacza,
że wpisy takie jak <c>tail -f</c> po prostu nie będą działały poprawnie.
</note>

</body>
</section>
</chapter>
</guide>
