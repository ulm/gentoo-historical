<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/gcc-upgrading.xml,v 1.3 2005/12/18 10:41:16 rane Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/pl/gcc-upgrading.xml" lang="pl">
<title>Aktualizacja GCC w Gentoo Linux</title>

<author title="Autor">
  <mail link="amne@gentoo.org">Wernfried Haas</mail>
</author>
<author title="Autor">
  <mail link="jkt@gentoo.org">Jan Kundrát</mail>
</author>
<author title="Redaktor">
  <mail link="halcy0n@gentoo.org">Mark Loeser</mail>
</author>
<author title="Tłumaczenie">
  <mail link="prizman@o2.pl">Artur Czepiel</mail>
</author>  

<abstract>
Ten przewodnik ma za zadanie przeprowadzić użytkownika przez proces
uaktualniania GCC w Gentoo Linux.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>3</version>
<date>2005-12-08</date>

<chapter id="intro">
<title>Wstęp</title>
<section>
<title>Uaktualnienie GCC</title>
<body>

<p>
Dlaczego należy uaktualniać GCC? Kompilator jest podobny do innych pakietów
zainstalowanych w systemie, jest tylko trochę ważniejszy od reszty. Powinniśmy
zatem aktualizować GCC jeżeli tylko pojawi się nowsza wersja, która naprawia
część błędów poprzedniej lub posiada nowe, ważne dla nas funkcje.  Jeżeli
jednak mimo wszystko chcemy mieć stare GCC możemy odkładać uaktualnienie dopóki
ta wersja GCC będzie wspierana przez Gentoo.
</p>

<p>
Jeżeli chcemy zainstalować nowszą wersję GCC, nasz system nie zacznie jej
używać dopóki go odpowiednio nie skonfigurujemy. Zmiana nie może zostać
przeprowadzona automatycznie i bez udziału użytkownika, ponieważ wymaga 
od niego podjęcia dodatkowych czynności. Jeżeli zdecydujemy jednak, aby nie
dokonywać zmiany, Portage będzie dalej pracowało ze starszą wersją kompilatora,
dopóki nie zmienimy jej na nowszą lub dopóki nie usuniemy z systemu starszej
wersji GCC.
</p>

<p>
Ten poradnik opisuje najważniejsze kroki potrzebne do przygotowania
bezproblemowej aktualizacji kompilatora w Gentoo. Specjalna część jest
dedykowana <uri link="#upgrade-3.3-to-3.4">aktualizacji GCC 3.3 do GCC 3.4
</uri> oraz problemom związanym z <c>libstdc++</c>.
</p>

</body>
</section>
</chapter>

<chapter id="upgrade-general">
<title>Wskazówki dotyczące aktualizacji</title>
<section>
<title>Wstęp</title>
<body>

<impo>
Jeżeli jest to zmiana z GCC-3.3 na GCC-3.4, szczegółowy opis znajduje się pod
<uri link="#upgrade-3.3-to-3.4">tym adresem</uri>.
</impo>

<p>
Generalnie mówiąc, uaktualnienia w zakresie jednej wersji, poprawiające tylko
drobne błędy (np. z 3.3.5 do 3.3.6) powinny być bezpieczne. Zwykle wystarcza
wtedy instalacja nowej wersji i przekonfigurowanie systemu tak, aby jej używał
oraz przebudowanie jedynego pakietu, który w takich wypadkach przebudowania
wymaga, <c>libtool</c>. Niektóre aktualizacje GCC łamią kompatybilność
skompilowanych programów. W takich przypadkach może być wymagana przebudowa
także innych pakietów, czasem całego toolchaina, a w ekstremalnych przypadkach
nawet całego systemu.
</p>

<p>
Kiedy mówiliśmy o potrzebie zmiany kompilatora na nowszą wersję, wspominaliśmy,
że nie odbywa się to automatycznie.  Wyjątkiem są tu uaktualnienia w zakresie
tej samej wersji (np. z 3.3.5 do 3.3.6) - w takim przypadku nie używa się kilku
slotów z wersjami, ponieważ GCC jest automatycznie przestawiane na nowszą
wersję. Instalowanie w takim wypadku nowego GCC na inny slot nie miało sensu,
gdyż niewielu użytkowników tego potrzebowało.
</p>

<pre caption="Aktualizacja GCC">
# <i>emerge -uav gcc</i>

<comment>(Należy zmienić "i686-pc-linux-gnu-3.4.4" na odpowiednią wersję GCC oraz ustawienie zmiennej CHOST)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Przebudowanie pakietu libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Teraz przebudujemy podstawowe składniki systemu czyli tzw. toolchain oraz resztę
pakietów z grup system i world, aby zrobić użytek z naszego nowego kompilatora :)
</p>

<pre caption="Przekompilowanie systemu">
# <i>emerge -eav system</i>
# <i>emerge -eav world</i>
</pre>

<p>
Teraz możemy bezpiecznie usunąć stare GCC z systemu. (Zastępujemy
=sys-devel/gcc-3.3* odpowiednią wersją GCC)
</p>

<pre caption="Usuwanie starszej wersji GCC">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="upgrade-3.3-to-3.4">
<title>Aktualizacja z GCC-3.3 do 3.4</title>
<section>
<title>Wstęp</title>
<body>

<p>
Aktualizacja GCC 3.3 do wersji 3.4 jest trochę bardziej skomplikowana, ponieważ
mogą wystąpić pewne problemy z biblioteką <c>libstdc++</c>.
</p>


</body>
</section>
<section id="upgrade-3.3-to-3.4-choices">
<title>Wybór metody aktualizacji</title>
<body>

<p>
Mamy dwie możliwości aktualizacji naszego systemu. <uri
link="upgrade-3.3-to-3.4.-revdep-rebuild">Pierwsza metoda</uri> jest szybsza i
wymaga użycia programu <c>revdep-rebuild</c> wchodzącego w skład pakietu
<c>gentoolkit</c>, podczas gdy <uri link="#upgrade-3.3-to-3.4-emerge-e">druga
metoda</uri> przebudowuje wszystkie pakiety naszego systemu. Wybór metody
pozostawiamy użytkownikowi.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-revdep-rebuild">
<title>Użycie revdep-rebuild</title>
<body>

<p>
Ta metoda wymaga zainstalowania pakietu <c>gentoolkit</c>. Zainstalujemy
najnowsze GCC oraz skonfigurujemy system tak, aby go używał. Przebudujemy
również pakiet <c>libtool</c>, aby upewnić się, że toolchain będzie w dobrej
formie.
</p>

<pre caption="Instalacja gentoolkit oraz aktualizacja GCC">
# <i>emerge -an gentoolkit</i>
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Przebudowanie pakietu libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Zakładamy, że została ustawiona zmienna <c>CHOST="i686-pc-linux-gnu"</c>.
Jeżeli zmienna ta ma inną wartość, musimy wybrać stosowną dla niej opcję w
gcc-config (3 linijka).
</note>

<p>
Najpierw sprawdzimy, które pakiety chce przebudować revdep-rebuild, później
każemy mu to zrobić. Może to zająć trochę czasu.
</p>

<pre caption="Użycie revdep-rebuild">
# <i>revdep-rebuild --library libstdc++.so.5 -- -p -v</i>
# <i>revdep-rebuild --library libstdc++.so.5</i>
</pre>

<note>
Mogą pojawić się problemy z nieistniejącymi wersjami pakietów, ponieważ mogły
się one przedawnić lub zostać zamaskowane. W takim przypadku może zajść
potrzeba uruchomienia <c>revdep-rebuild</c> z opcją <c>--package-names</c>.
Sprawia ona, że <c>revdep-rebuild</c> instaluje pakiety w najnowszej wersji,
nieważne jaka wersja jest obecnie zainstalowana w systemie.
</note>

<p>
Aby zadbać o kompatybilność już skompilowanych aplikacji napisanych w C++ oraz
wszelkich pakietów jakie revdep-rebuild mógłby opuścić,
<c>sys-libs/libstdc++-v3</c> musi zostać przebudowane przed odinstalowaniem GCC
3.3 z systemu.
</p>

<pre caption="Instalacja libstdc++-v3 oraz oczyszczanie systemu">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
<section id="upgrade-3.3-to-3.4-emerge-e">
<title>Użycie emerge -e</title>
<body>

<p>
Ta metoda zajmuje znacznie więcej czasu, zakłada bowiem przekompilowanie całego
systemu. Najpierw uaktualnimy GCC i skonfigurujemy system tak, aby z niego
korzystał.
</p>

<pre caption="Aktualizacja GCC">
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Przebudowanie pakietu libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Zakładamy, że została ustawiona zmienna <c>CHOST="i686-pc-linux-gnu"</c>.
Jeżeli zmienna ta ma inną wartość, musimy wybrać stosowną dla niej opcję w
gcc-config (2 linijka).
</note>

<p>
<c>sys-libs/libstdc++-v3</c> musi zostać przebudowane przed odinstalowaniem GCC
3.3 z systemu, co zapewni kompatybilność już skompilowanych aplikacji
napisanych w C++.
</p>

<pre caption="Instalacja libstdc++-v3">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

<p>
Najpierw przekompilujemy pakiety z grupy system, a następnie pakiety z grupy
world. Może to zająć trochę czasu, zależnie od ilości zainstalowanych pakietów,
Przekompilowane zostaną podstawowe składniki systemu (jak np. binutils, glibc
czyli tak zwany toolchain) oraz podstawowe pliki systemowe. Następnie,
wykorzystując nowy toolchain, zostanie przekompilowana reszta plików, wliczając
w to sam toolchain.
</p>

<pre caption="Przekompilowanie grup system i world">
# <i>emerge -e system</i>
# <i>emerge -e world</i>
</pre>

<p>
W tym momencie możemy bezpiecznie usunąć stare GCC z systemu.
</p>

<pre caption="Oczyszczanie systemu">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="common-pitfalls">
<title>Częste problemy</title>
<section>
<body>

<p>
Przed aktualizacją (nieważne którą metodą) należy wyłączyć <c>distcc</c> (jeśli
się go używa). Mieszanie wersji kompilatorów może spowodować <e>problemy z
kompilacją</e>. Nie jest to wymagane w przypadku ccache, ponieważ obiekty z
ccache zostaną i tak unieważnione.
</p>

<p>
Moduły jądra systemu (np. <c>app-emulation/qemu-softmmu</c>) przekompilowane
przy pomocy GCC 3.4 nie będą działać ze starym kernelem. Przekompilowanie jądra
za pomocą GCC 3.4 rozwiązuje ten problem.
</p>

</body>
</section>
<section>
<title>Najczęstsze problemy</title>
<body>

<p>
Jeżeli pojawi się błąd: <e>libtool: link: `
/usr/lib/gcc-lib/i686-pc-linux-gnu/3.3.6/libstdc++.la' is not a valid libtool
archive</e>, należy uruchomić <c>/sbin/fix_libtool_files.sh 3.3.6</c>
(zastępując 3.3.6 odpowiednią wersją).
</p>

<p>
Jeżeli pojawi się błąd: <e>/usr/bin/gcc-config: line 632:
/etc/env.d/gcc/i686-pc-linux-gnu-3.3.5: No such file or directory</e> należy
usunąć <path>/etc/env.d/gcc/config-i686-pc-linux-gnu</path> oraz uruchomić
<c>gcc-config</c> jeszcze raz, a następnie wpisać <c>source /etc/profile</c>.
Można to robić jednak tylko wtedy jeżeli nie zostały ustawione żadne
kompilatory skrośne.
</p>

<p>
Jeżeli kompilacja jakiegoś pakietu podczas wykonywania <c>emerge -e
system/world</c> nie powiedzie się, można wznowić ją poleceniem <c>emerge
--resume</c>. Jeżeli za każdym razem kompilacja nie wychodzi, można ominąć
pakiet używając <c>emerge --resume --skipfirst</c>. W międzyczasie nie wolno
uruchamiać emerge w innym celu. W przeciwnym wypadku nastąpi utrata informacji
potrzebnych do wznowienia kompilacji grup system lub world i trzeba będzie
zaczynać te kompilacje od początku.
</p>

<p>
Jeżeli pojawia się błąd: <e>spec failure: unrecognized spec option</e> podczas
aktualizacji kompilatora, należy z powrotem zmienić domyślny kompilator,
wyzerować opcję <c>GCC_SPECS</c> i ponownie zaktualizować GCC:
</p>

<pre caption="Odzyskiwanie początkowych ustawień">
# <i>gcc-config 1</i>
# <i>source /etc/profile</i>
# <i>unset GCC_SPECS</i>
# <i>emerge -uav gcc</i>
</pre>

</body>
</section>
</chapter>
</guide>
