<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/security/shb-perms.xml,v 1.2 2005/06/10 19:16:38 fox2mike Exp $ -->

<!-- Orig revision: 1.1 -->
<!-- Translator: rane <rane@gentoo.pl> -->
<!-- Title: Zabezpieczanie plików -->
<!-- Status: Finished -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.0</version>
<date>2005-05-31</date>

<section>
<title>Dostępne do odczytu dla wszystkich</title>
<body>

<p>
Zwykli użytkownicy nie powinni mieć dostępu do plików konfiguracyjnych i
zawierających hasła. Jeśli włamywaczowi uda się wykraść hasła z bazy danych lub
strony internetowej to będzie mógł podmienić albo nawet usunąć nasze pliki.
Właśnie to jest powodem, dla którego warto uważnie ustawić prawa do wszystkich
ważnych plików. Jeśli jest się pewnym, że z danego pliku będzie korzystał
wyłącznie root należy ustawić jego prawa na <c>0600</c> i przypisać plik
odpowiedniemu użytkownikowi przy pomocy polecenia <c>chown</c>.
</p>

</body>
</section>
<section>
<title>Dostępne do zapisu dla wszystkich</title>
<body>

<pre caption="Znajdowanie takich plików i katalogów">
# <i>/usr/bin/find / -type f \( -perm -2 -o -perm -20 \) \ 
   -exec ls -lg {} \; 2>/dev/null >writable.txt</i>
# <i>/usr/bin/find / -type d \( -perm -2 -o -perm -20 \) \ 
   -exec ls -ldg {} \; 2>/dev/null >>writable.txt</i>
</pre>

<p>
Polecenie to utworzy listę plików z prawami do zapisu dla wszystkich
użytkowników lub grup. Należy sprawdzić prawa, a następnie usunąć zapisywalność
przy pomocy polecenia <c>/bin/chmod o-w</c> dla każdego z plików.
</p>

</body>
</section>
<section>
<title>Pliki z bitami SUID i SGID</title>
<body>

<p>
Pliki z ustawionymi bitami SUID i SGID uruchamiane są zawsze z prawami dostępu
swojego <e>właściciela</e>, a nie z prawami osoby je uruchamiającej. Normalnie
bity te są ustawiane na programach, które do poprawnej pracy wymagają praw
roota. Jeśli taki plik zawiera błąd może spowodować kompromitację lokalnego
konta root. W związku z takim niebezpieczeństwem należy za wszelką cenę unikać
ustawiania tych bitów. Jeśli któryś z takich plików nie jest używany wykonujemy
na nim polecenie <c>chmod 0</c> lub odmergowujemy pakiet do którego należy
(pakiety do którego należą dane pliki wyszukujemy przy pomocy polecenia
<c>equery</c>; jeśli nie ma takiego polecenia należy zainstalować pakiet
gentoolkit). W każdym innym wypadku należy użyć polecenia <c>chmod -s</c> do
zdjęcia bitu SUID.
</p>

<pre caption="Znajdowanie plików z bitem SUID">
# <i>/usr/bin/find / -type f \( -perm -004000 -o -perm -002000 \) \ 
   -exec ls -lg {} \; 2>/dev/null >suidfiles.txt</i>
</pre>

<p>
To polecenie utworzy plik z listą wszystkich programów, które mają ustawione
bity SUID i SGID.
</p>

<pre caption="Lista plików binarnych z suidem">
/bin/su
/bin/ping
/bin/mount
/bin/umount
/var/qmail/bin/qmail-queue
/usr/bin/chfn
/usr/bin/chsh
/usr/bin/crontab
/usr/bin/chage
/usr/bin/expiry
/usr/bin/sperl5.6.1
/usr/bin/newgrp
/usr/bin/passwd
/usr/bin/gpasswd
/usr/bin/procmail
/usr/bin/suidperl
/usr/lib/misc/pt_chown
/usr/sbin/unix_chkpwd
/usr/sbin/traceroute
/usr/sbin/pwdb_chkpwd
</pre>

<p>
Domyślnie Gentoo nie zawiera wielu plików SUID (chociaż ich ilość zależy od tego
jakie programy są zainstalowane). Większość komend nie powinna być uruchamiana
przez zwykłych użytkowników z prawami roota. Polecamy zdjęcie bitów SUID z
programów <c>ping</c>, <c>mount</c>, <c>umount</c>, <c>chfn</c>,
<c>chsh</c>, <c>newgrp</c>, <c>suidperl</c>, <c>pt_chown</c> i
<c>traceroute</c>. Dokonuje się tego przy pomocy polecenia <c>chmod -s</c>. Nie
należy usuwać tego bitu z <c>su</c>, <c>qmail-queue</c> czy <c>unix_chkpwd</c>.
Usunięcie setuid z tych plików spowoduje utratę możliwości przełączania się na
konto superużytkownika czy otrzymywania poczty. Usuwając SUID odbieramy zwykłemu
użytkownikowi (lub włamywaczowi) możliwość uzyskania dostępu do konta roota
przez któryś z tych plików.
</p>

<p>
Jedyne plikami z SUID w moim systemie to: <c>su</c>, <c>passwd</c>,
<c>gpasswd</c>, <c>qmail-queue</c>, <c>unix_chkpwd</c> i <c>pwdb_chkpwd</c>.
Każdy kto używa serwera X może potrzebować jeszcze kilku, ponieważ serwer
korzysta czasem z rozszerzonego dostępu, oferowanego przez bity SUID.
</p>

</body>
</section>
<section>
<title>Twarde dowiązania do plików binarnych z SUID/SGID</title>
<body>

<p>
Plik można uznać za skasowany tylko wtedy gdy nie istnieją żadne na niego
wskazujące odnośniki. Może to wydawać się dziwne, ale na przykład plik
<path>/usr/bin/perl</path> jest wyłącznie odnośnikiem do inody gdzie znajdują
się właściwe dane. Do pliku może istnieć nieskończenie duża ilość dowiązań i
dopóki wszystkie nie zostaną skasowane plik wciąż istnieje.
</p>

<p>
Jeśli użytkownicy posiadają dostęp do partycji nie zamontowanej z opcjami
<c>nosuid</c> i <c>noexec</c> (na przykład gdy <path>/tmp</path>,
<path>/home</path>, lub <path>/var/tmp</path> nie znajdują się na osobnych
partycjach) należy się upewnić, że nie będą mieli możliwości utworzenia twardego
dowiązania do plików binarnych i korzystania z nich np. po uaktualnieniu przez
Portage pliku do nowej, nie zawierającej błędów wersji.
</p>

<warn>
Jeśli otrzymamy od Portage ostrzeżenie o istniejących twardych dowiązaniach, a
użytkownicy mają dostęp do partycji umożliwiającej wykonywanie plików SUID/SGID
należy uważnie przeczytać ten rozdział. Jeden z użytkowników może podejmować
próbę obejścia uaktualnień poprzez zatrzymanie przestarzałej wersji
programu. Jeśli użytkownicy nie mogą tworzyć własnych plików SUID lub uruchamiać
programów poprzez dynamiczny program ładujący (partycje zamontowane jako
<c>noexec</c>) nie ma powodu do zmartwień.
</warn>

<note>
Użytkownik nie musi posiadać prawa odczytu pliku, aby móc utworzyć do niego
dowiązanie, wystarczy, że ma prawa do katalogu go zawierającego.
</note>

<p>
Aby sprawdzić ilość istniejących dowiązań do danego pliku należy skorzystać z
polecenia <c>stat</c>.
</p>

<pre caption="Polecenie stat">
$ stat /bin/su    
  File: `/bin/su'
  Size: 29350           Blocks: 64         IO Block: 131072 regular file
Device: 900h/2304d      Inode: 2057419     Links: 1
Access: (4711/-rws--x--x)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2005-02-07 01:59:35.000000000 +0000
Modify: 2004-11-04 01:46:17.000000000 +0000
Change: 2004-11-04 01:46:17.000000000 +0000
</pre>

<p>
Do znajdowania plików z ustawionymi bitami SUID i SGID korzystamy z programu
<c>find</c>.
</p>

<pre caption="Znajdowanie wielokrotnie zlinkowanych plików binarnych z bitem
suid/sgid">
$ find / -type f \( -perm -004000 -o -perm -002000 \) -links +1 -ls
</pre>

</body>
</section>
</sections>
