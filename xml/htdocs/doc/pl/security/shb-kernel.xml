<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/security/shb-kernel.xml,v 1.2 2005/06/10 19:16:38 fox2mike Exp $ -->

<!-- Orig revision: 1.1 -->
<!-- Translator: rane <rane@gentoo.pl> -->
<!-- Title: Bezpieczeństwo w jądrze Linux -->
<!-- Status: Finished -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.0</version>
<date>2005-05-31</date>

<section>
<title>Usuwanie zbędnych funkcji</title>
<body>

<p>
Podstawową zasadą przy konfigurowaniu jądra jest to, by wyłączać wszystko
czego się nie potrzebuje. Dzięki temu stworzymy nie tylko małe, ale i mniej
podatne na potencjalne błędy jądro.
</p>

<p>
Ponadto warto rozważyć wyłączenie opcji 'loadable module support' - wsparcia
dla ładowania modułów. Nie uniemożliwi to zainstalowania rootkita przez moduły
jądra, ale na pewno znacznie to utrudni - zwłaszcza mniej wyedukowanym
włamywaczom.
</p>

</body>
</section>
<section>
<title>System plików proc</title>
<body>

<p>
Wiele parametrów jądra można skonfigurować poprzez system plików
<path>/proc</path> lub przy pomocy <c>sysctl</c>.
</p>

<p>
Możliwość zmiany tych parametrów bez konieczności restartowania komputera
umożliwia zaznaczenie opcji <c>CONFIG_SYSCTL</c> w konfiguracji jądra. Jest ona
standardowo zaznaczona w kernelach serii 2.4.
</p>

<pre caption="Wyłączanie przekazywania IP">
# <i>/bin/echo "0" &gt; /proc/sys/net/ipv4/ip_forward</i>
</pre>

<p>
Należy upewnić się, że przekazywanie (forwardowanie) IP jest wyłączone. Jest ono
potrzebne jedynie w przypadku stacji roboczych czy węzłów sieciowych o wielu
podłączeniach. Radzimy wyłączyć tą flagę na samym początku, ponieważ zmienia ona
wartość kilku innych omawianych tu opcji.
</p>

<pre caption="Upuszczanie pakietów ping">
# <i>/bin/echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_all</i>
</pre>

<p>
Włączenie tej opcji spowoduje, że kernel po prostu zignoruje wszystkie
wiadomości typu ping (czyli wiadomości typu 0 protokołu ICMP). Uzasadnieniem
takiej decyzji jest to, że pakiet IP przenoszący wiadomość ICMP może przenosić
ładunek inny niż możnaby się po nim spodziewać. Administratorzy często używają
ping jako narzędzia diagnostycznego i narzekają jeśli jest wyłączony, ale są
również powody dla których warto zabronić pingowania serwera ludziom z zewnątrz.
Czasem zdarza się sytuacja, że ktoś z wewnątrz będzie chciał użyć ping, dlatego
znacznie lepszym pomysłem jest wyłączenie tego typu pakietów w firewallu i
umożliwienie korzystania z tego narzędzia administratorom naszej sieci.
</p>

<pre caption="Ignorowanie transmisji ping">
# <i>/bin/echo "1" &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts</i>
</pre>

<p>
Opcja ta wyłączy odpowiedzi na rozgłaszanie ICMP (ICMP broadcast) co
zapobiegnie atakom typu smurf. Atak typu smurf polega na wysłaniu wiadomości
ICMP typu 0 (czyli ping) na adres całej sieci ze sfałszowanego adresu, co
spowoduje odpowiedź wszystkich działających w tej sieci komputerów i zalania
falą odpowiedzi komputera, którego adresu użył atakujący.
</p>

<pre caption="Wyłączanie source routingu">
# <i>/bin/echo "0" &gt; /proc/sys/net/ipv4/conf/all/accept_source_route</i>
</pre>

<p>
Ustawienie to spowoduje odrzucanie source routowanych pakietów. Włamywacze mogą
ich używać do stworzenia pozorów, że ruch pochodzący od nich tak naprawdę
pochodzi z wnętrza sieci, a faktycznie będzie routowany z powrotem do ich
komputera. Source routingu bardzo rzadko używa się do legalnych czynności, więc
można go bezpiecznie wyłączyć.
</p>

<pre caption="Wyłączanie akceptowania przedresowań">
# <i>/bin/echo "0" &gt; /proc/sys/net/ipv4/conf/all/accept_redirects</i>
# <i>/bin/echo "0" &gt; /proc/sys/net/ipv4/conf/all/secure_redirects</i>
</pre>

<p>
Spowoduje to odrzucanie przeadresowanych pakietów ICMP, które mogą być używane
do zmiany tablic routingu, co zwykle źle się kończy.
</p>

<pre caption="Ochrona przed błędnymi informacjami o błędach">
# <i>/bin/echo "1" &gt; /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses</i>
</pre>

<p>
Włącza ochronę przed błędnymi komunikatami o błędach.
</p>

<pre caption="Włączanie filtrowania trasy powrotnej (reverse path filtering)">
# <i>for i in /proc/sys/net/ipv4/conf/*; do
        /bin/echo "1" &gt; $i/rp_filter
done</i>
</pre>

<p>
Włącza filtrowanie trasy powrotnej pakietu. Dzięki temu wszystkie pakiety, które
nie docierają interfejsem, z którego rzekomo wyszło zapytanie zostaną
zignorowane. Znacznie poprawia to bezpieczeństwo, ponieważ poważnie utrudnia
spoofowanie IP. Aby uzyskać pełną funkcjonalność musimy je uruchomić dla każdego
<path>net/ipv4/conf/*</path>.
</p>

<warn>
Wyłączenie filtrowania trasy powrotnej może stwarzać problemy jeśli korzysta się
z routingu asymetrycznego (pakiety od nas do komputera docelowego podróżują inną
trasą niż te od niego do nas) lub jeśli pracuje się na nie routoującym hoście
posiadającym kilka adresów IP na różnych interfejsach.
</warn>

<pre caption="Logowanie wszystkich spoofowanych, source routowanych lub
przeadresowanych pakietów">
# <i>/bin/echo "1" &gt; /proc/sys/net/ipv4/conf/all/log_martians</i>
</pre>

<p>
Loguje wszystkie spoofowane, source routowane i przeadresowane pakiety.
</p>

<p>
Wszystkie wprowadzone w powyższy sposób zmiany zostaną zresetowane po ponownym
uruchomieniu komputera. Aby zapamiętać je na dłużej należy dopisać je do pliku
<path>/etc/sysctl.conf</path>, z którego informacje są automatycznie wczytywane
przez skrypt startowy <path>/etc/init.d/bootmisc</path>.
</p>

<p>
Składnia pliku <path>/etc/sysctl.conf</path> jest bardzo przejrzysta. Wystarczy
usunąć z podanych wyżej linii <path>/proc/sys/</path> i zamienić wszystkie
<path>/</path> na <path>.</path>.
</p>

<pre caption="Tłumaczenie na składnię sysctl.conf">
<comment>(Ręcznie, przy użyciu echo):</comment>
/bin/echo "0" &gt; /proc/sys/net/ipv4/ip_forward

<comment>(Automatycznie w sysctl.conf:)</comment>
net.ipv4.ip_forward = 0
</pre>

</body>
</section>
<section>
<title>Grsecurity</title>
<body>

<p>
Łatka <uri link="http://grsecurity.net">grsecurity</uri> jest standardowo
nakładana na jądra Gentoo, chociaż w domyślnym pliku konfiguracyjnym wyłączamy
wszystkie dostarczane przez nią moduły. Najpierw konfiguruje się standardowe
opcje kernela, potem przychodzi pora na dodanie tych związanych z grsecurity.
Dokładne omówienie wszystkich użytych ustawień znajduje się na stronie projektu
<uri link="/proj/en/hardened">Gentoo Hardened</uri>.
</p>

<p>
Najnowsze <c>grsec-sources</c> są oparte na wersjach 2.* Grsecurity. Więcej
informacji o tych łatkach znajduje się na stronach <uri
link="http://www.grsecurity.net/">projektu Grsecurity</uri>.
</p>

</body>
</section>
<section>
<title>Kerneli</title>
<body>

<p>
<uri link="http://www.Kerneli.org">Kerneli</uri> jest to łatka dodająca
do jądra funkcje związane z szyfrowaniem takie jak szyfry kryptograficzne,
algorytmy skrótów czy filtry pętli kryptograficznych.
</p>

<warn>
Przy używaniu kerneli trzeba zachować ostrożność, nie jest to jeszcze wersja
stabilna.
</warn>

</body>
</section>
<section>
<title>Inne przydatne patche dla jądra.</title>
<body>

<ul>
<li><uri link="http://www.openwall.com">The OpenWall Project</uri></li>
<li><uri link="http://www.lids.org">Linux Intrusion Detection System</uri></li>
<li><uri link="http://www.rsbac.org">Rule Set Based Access Control</uri></li>
<li>
  <uri link="http://www.nsa.gov/selinux">NSA's security enhanced kernel</uri>
</li>
<li><uri link="http://sourceforge.net/projects/wolk/">Wolk</uri></li>
</ul>

<p>
I wiele innych.
</p>

</body>
</section>
</sections>
