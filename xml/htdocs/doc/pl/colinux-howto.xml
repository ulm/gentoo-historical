<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/Attic/colinux-howto.xml,v 1.5 2006/07/26 16:01:18 rane Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/pl/colinux-howto.xml" lang="pl" disclaimer="obsolete">

<title>Uruchamianie Gentoo poprzez coLinux</title>

<author title="Autor">
  IWBCMAN
</author>
<author title="Autor">
  janlaur
</author>
<author title="Redaktor">
  <mail link="joshua@sungentoo.homeunix.com">Joshua Preston</mail>
</author>
<author title="Redaktor">
  <mail link="avenj@gentoo.org">Jon Portnoy</mail>
</author>
<author title="Tłumaczenie">
  Mateusz Kotyrba
</author>

<abstract>
Zbiór czynności niezbędnych do uruchomienia Gentoo pod Windowsem za pomocą
coLinux.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5-->
<license/>

<version>1.5</version>
<date>2006-07-25</date>

<chapter>
<title>Wstęp</title>
<section>
<title>Co to jest coLinux?</title>
<body>

<p>
coLinux jest demonem dla systemu Windows. Jego celem jest uruchomienie jądra
Linuksa jako rdzennego wątku w Windowsie, a zatem, aby Linux mógł być
uruchomiony rdzennie wewnątrz Windowsa.
</p>

<p>
Główną wadą takiego rozwiązania jest utrata wydajności. Wydajność aplikacji
korzystających ze środowiska X jest kiepska, choć znośna. Zwykłe, konsolowe
aplikacje działają tak szybko jak pod prawdziwym Linuksem.
</p>

<warn>
coLinux jest ciągle w fazie testów. Działa, ale jest jeszcze wiele rzeczy, które
nie są dopracowane.
</warn>

<p>
Ten poradnik jest kompilacją i połączeniem dwóch świetnych HOWTO umieszczonych
na <uri link="http://forums.gentoo.org">forum Gentoo</uri> przez IWBCMANa i
janlaura. Odnośniki do tych wątków znajdują się poniżej:
</p>

<ul>
  <li>
    <uri link="http://forums.gentoo.org/viewtopic.php?t=162420">Część od
    IWBCMANa</uri></li>
  <li>
    <uri link="http://forums.gentoo.org/viewtopic.php?t=163154">Część od
    janlaura</uri></li>
</ul>

</body>
</section>
</chapter>
<chapter>
<title>Instalacja</title>
<section>
<title>Pozyskiwanie coLinux</title>
<body>

<warn>
Aby używać coLinux należy posiadać Windows 2000, 2003 lub XP
(Home albo Professional).
</warn>

<p>
Wystarczy ściągnąć najnowszy plik z obrazem z <uri
link="http://colinux.org/snapshots/">coLinux.org</uri>.
</p>

<note>
Podczas pisania tego tekstu posługiwaliśmy się plikiem coLinux-20040417.exe. W
nowszych wersjach jest jednak wiele pożytecznych poprawek, dlatego zalecamy
korzystanie właśnie z nich.
</note>

<p>
Plik .EXE to program instalacyjny, który ściąga podstawowy obraz dla dystrybucji
(Gentoo/Debian/Fedora) z SourceForge.
</p>

<p>
Uruchamiamy plik .EXE, pozostawiając domyślne wartości tak jak są, oczywiście za
wyjątkiem wyboru dystrybucji - wybieramy oczywiście Gentoo.
</p>

<p>
Obraz (<path>gentoo-i586-ext3-2g-deluxe.bz2</path>) zostanie ściągnięty do
katalogu instalacyjnego.
</p>

<p>
Plik zawiera wirtualną partycję, w formacie ext3, wraz z instalacją Gentoo
ze stage3. W rzeczywistości obraz zawiera nie tylko tę instalację, lecz także
programy XFree86, XFCE4, Firefox, GAIM i XChat.
</p>

<ul>
  <li>
    Plik należy wypakować na dowolną partycję systemu Windows, która ma co
    najmniej 2GB wolnego miejsca.
  </li>
  <li>
   W ścieżce dostępu do pliku nie powinien się znajdować żaden znak
   odstępu</li>
  <li>Opcjonalnie można wykasować plik .bz2 po wypakowaniu</li>
</ul>

<p>
Prawdopodobnie będzie potrzebny Winrar dla Windows, aby wypakować ten plik.
Należy sprawdzić <uri link="http://wiki.colinux.org/cgi-bin/NiceTools">stronę
coLinux Nice Tools</uri>, aby znaleźć potrzebne narzędzia do wypakowania pliku
obrazu oraz stworzenia wirtualnych partycji wymiany.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Konfiguracja</title>
<section>
<title>Modifikacja pliku konfiguracyjnego</title>
<body>

<p>
Jest tylko jeden plik konfiguracyjny, który znajduje się w katalogu
instalacyjnym i nazywa się <path>default.colinux.xml</path>. Otwieramy go
ulubionym edytorem i edytujemy następujące linie:
</p>

<pre caption="default.colinux.xml">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;colinux&gt;
    <comment>&lt;!-- ścieżki dostępu mogą się nieznacznie różnić.
--&gt;</comment>
    &lt;block_device index="0" path="\DosDevices\e:\gentoo-i586-ext3-2g-deluxe"
enabled="true"&gt;&lt;/block_device&gt;
    &lt;bootparams&gt;root=/dev/cobd0&lt;/bootparams&gt;
    &lt;image path="vmlinux"&gt;&lt;/image&gt;
    <comment>&lt;!-- tę wartość dobieramy do naszych potrzeb --&gt;</comment>
     &lt;memory size="256"&gt;&lt;/memory&gt;
    <comment>&lt;!-- Należy się upewnić, aby name="dokładna nazwa urządzenia
TAP w naszych połączeniach  sieciowych"!--&gt;</comment>
    &lt;network index="0" type="tap" name="TAP"&gt;&lt;/network&gt;
&lt;/colinux&gt;
</pre>

<p>
Zmieniamy ścieżkę dostępu na tę gdzie wypakowaliśmy obraz i ustawiamy ilość
pamięci, która zostanie przydzielona coLinuksowi.
</p>

</body>
</section>
<section>
<title>Zakładanie sieci</title>
<body>

<p>
Wprawdzie można już uruchomić coLinuksa poprzez dwukrotne kliknięcie na
colinux-daemon.exe, ponieważ jednak większość osób potrzebuje sieci, więc
teraz przystąpimy do jej konfiguracji. Po pierwsze należy zainstalować wirtualną
kartę sieciową.
</p>

<ul>
  <li>
     Z panelu sterowania wybieramy "Dodaj sprzęt", po czym klikamy
    "Dalej"
  </li>
  <li>
    Klikamy "Tak, urządzenie zostało już podłączone", a następnie
    klikamy "Dalej"
  </li>
  <li>
    W następnym oknie przewijamy w dół listy i wybieramy "Dodaj nowe
    urządzenie sprzętowe" i klikamy "Dalej"
  </li>
  <li>
    Zaznaczamy "Zainstaluj sprzęt, który wybiorę ręcznie z listy"
    po czym klikamy "Dalej"
  </li>
  <li>Wybieramy "Karty sieciowe", a następnie klikamy "Dalej"</li>
  <li>
    Klikamy "Z dysku..." i przechodzimy do miejsca w którym wypakowaliśmy obraz
    coLinux. Przechodzimy do katalogu "netdriver", gdzie odpowiedni plik
    powinien się pojawić.
  </li>
  <li>Wybieramy go i klikamy "Otwórz"</li>
</ul>

<p>
Właśnie zainstalowaliśmy wirtualną kartę sieciową! Od tej pory możemy ją
konfigurować tak jak inne urządzenia w naszym komputerze.
</p>

<ul>
  <li>Przechodzimy do "Panel sterowania->Połączenia sieciowe"</li>
  <li>
    Klikamy na połączenie internetowe, a następnie CTRL+klikamy na nasze nowe
połączenie sieciowe TAP.
  </li>
  <li>Klikamy prawym przyciskiem i wybieramy "Połączenia mostkowe".</li>
</ul>

<p>
Windows powinien stworzyć mostek sieciowy. Jeśli nadal w Windowsie mamy aktywne
połączenie z Internetem, prawdopodobnie wszystko się powiodło.
</p>

</body>
</section>
<section>
<title>Uruchamianie</title>
<body>

<p>
Teraz jesteśmy gotowi, aby otworzyć colinux-daemon.exe i zobaczyć magiczne
słowa. Uruchomiona została podstawowa instalacja Gentoo, z programami takimi jak
XFree86, XFCE4, GAIM, kernel-2.4.26 i innymi podstawowymi programami, które są
do naszej dyspozycji.
</p>

<p>
Kiedy już będziemy wewnątrz wykonamy kilka rzeczy. Najpierw:
</p>

<ul>
  <li>
    Logujemy się jako root bez hasła, po czym ustawiamy ustawiamy hasło dla
    użytkownika root</li>
  <li>Sprawdzamy czy działa sieć</li>
  <li>
    Uruchamiamy sshd, a następnie otwieramy sesję ssh poprzez Putty (jako
    terminala używamy cygwin)
  </li>
</ul>

<p>
Aby uaktualnić system wykonujemy następujące czynności:
</p>

<pre caption="Finalizowanie ustawień">
# <i>emerge --sync</i>
# <i>env-update &amp;&amp; source /etc/profile</i>
<comment>(Jeśli preferujemy vnc)</comment>
# <i>emerge tightvnc</i>
</pre>

<p>
Teraz należy skonfigurować środowisko X. Można po prostu skopiować
<path>/etc/X11/XF86Config</path> z istniejącej instalacji Linuksa do instalacji
coLinuksa.
</p>

<note>
Można używać tylko sterowników dostarczonych wraz ze środowiskiem X (np.
niedostępne są nvidia-glx i nvidia-kernel), które w dodatku działają tylko z
głębią kolorów równą 16. W związku z tym należy pozmieniać parę rzeczy w pliku
konfiguracyjnym. Należy pamiętać, że nie mamy bezpośredniego dostępu do urządzeń
video systemu Windows, więc trzeba stworzyć ten plik samemu lub skopiować go
skądś. Ewentualnie można uruchomić komputer przy pomocy Knoppixa i
pozwolić mu utworzyć plik <path>XF86Config</path> za nas.
</note>

<p>
Kiedy to skończymy tworzymy <path>~/.vnc/xstartup</path>:
</p>

<pre caption="Przykładowy ~/.vnc/xstartup">
startxfce4 &amp;
</pre>

<p>
Następnie uruchamiamy vncserver z naszymi opcjami. Zostaniemy poproszeni
o hasło, które musimy ustawić i zapamiętać.
</p>

<pre caption="Uruchamianie vncserver">
$ <i>vncserver -geometry "1024x768" -depth 16</i>
</pre>

<p>
Potrzebujemy jeszcze ściągnąć VNC dla Windows. Uruchamiamy vncviewer i podajemy
mu adres IP naszej wirtualnej karty sieciowej (np. 192.168.0.X:1) wraz z hasłem.
Jeśli wszystko pójdzie pomyślnie vncviewer powinien uruchomić pulpit XFCE4 -
miłej zabawy!
</p>

</body>
</section>
</chapter>
<chapter>
<title>Tematy zaawansowane</title>
<section>
<title>Dodawanie partycji wymiany</title>
<body>

<p>
Ściągamy plik wymiany <uri
link="http://gniarf.nerim.net/colinux/swap/">stąd</uri> (nazwa pliku wskazuje
wielkość partycji wymiany). Wypakowujemy go gdziekolwiek mamy miejsce i dodajemy
następujące linijki do pliku <path>default.colinux.xml</path>:
</p>

<pre caption="Dodawanie dysku wymiany">
<comment>&lt;-- index="1" oznacza, że zostanie ona zapisana do /dev/cobd1
--&gt;</comment>
    &lt;block_device index="1" path="\DosDevices\e:\swap-file"
enabled="true"&gt;&lt;/block_device&gt;
</pre>

<p>
Teraz (ponownie) uruchamiamy coLinux i wykonujemy polecenie <c>mkswap</c>:
</p>

<pre caption="Zakładanie partycji wymiany">
# <i>mkswap /dev/cobd1</i>
</pre>

<p>
Musimy edytować <path>/etc/fstab</path> i dodać następującą linię:
</p>

<pre caption="Dodawanie partycji wymiany /etc/fstab">
/dev/cobd1   none    swap    sw     0 0
</pre>

<p>
A teraz włączymy partycję wymiany bez ponownego uruchamiania!
</p>

<pre caption="Włączanie partycji wymiany">
# <i>swapon -a</i>
</pre>

</body>
</section>
<section>
<title>Dostęp do istniejących partycji linuksowych spod coLinux</title>
<body>

<p>
Na stronie internetowej coLinux znajduje się dokument  zawierający <uri
link="http://wiki.colinux.org/cgi-bin/GettingStarted">podstawowe
informacje</uri> o programie. Po zapoznaniu się z tym dokumentem nasz plik
konfiguracyjny powinien wyglądać mniej więcej tak:
</p>


<pre caption="Nowy default.colinux.xml">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;colinux&gt;
    &lt;block_device index="0" path="\DosDevices\e:\gentoo-i586-ext3-2g-deluxe" enabled="true"&gt;&lt;/block_device&gt;
    &lt;block_device index="1" path="\DosDevices\e:\swap-file"
    enabled="true"&gt;&lt;/block_device&gt;
    <comment>&lt;!-- Nasze ścieżki dostępu mogą się różnić nieznacznie, w
    zależności od tego jak mamy podzielony dysk, itp.--&gt;</comment>
    &lt;block_device index="2" path="\Device\Harddisk0\Partition5"
    enabled="true"&gt;&lt;/block_device&gt;
    &lt;bootparams&gt;root=/dev/cobd0&lt;/bootparams&gt;
    &lt;image path="vmlinux"&gt;&lt;/image&gt;
    &lt;memory size="256"&gt;&lt;/memory&gt;
    &lt;network index="0" type="tap" name="TAP"&gt;&lt;/network&gt;
&lt;/colinux&gt;
</pre>

<p>
Będziemy zmuszeni (ponownie) uruchomić coLinux, aby zmiany zostały wzięte pod
uwagę. Powinniśmy mieć dostep do "\Device\Harddisk0\Partition5" poprzez
urządzenie /dev/cobd2 w coLinuksie.
</p>

<pre caption="Montowanie">
# <i>mount /dev/cobd2 /mnt/linux</i>
</pre>

<impo>
Należy pamiętać, że to rozwiązanie będzie działać tylko z partycjami, których
Windows nie używa. Jeśli Windows ich używa, wtedy dostęp do nich uzyskamy
poprzez smbfs.
</impo>

</body>
</section>
</chapter>
<chapter>
<title>Pytania i odpowiedzi</title>
<section>
<title>Jakich flag USE używać?</title>
<body>

<p>
Flagi USE są takie same jak w rdzennym systemie.
</p>

</body>
</section>
<section>
<title>Czy będę mógł współdzielić moje łącze dial-up?</title>
<body>

<p>
coLinux używa współdzielenia połączenia internetowego, aby połączyć sieć
Linuksową ze światem zewnętrznym, więc można wymostkować połączenie TAP do
połączenia PPP.
</p>

</body>
</section>
<section>
<title>Czy jądro Linuksa ma nadal dostęp do sprzętu?</title>
<body>

<p>
coLinux emuluje każdy rodzaj potrzebnego sprzętu. Nie są jeszcze dostępne USB,
direct graphics lub dostęp do karty dźwiękowej. Dobra wiadomość jest taka, że
autorzy coLinux obecnie pracują nad uruchomieniem USB (wyłączając myszy oraz
klawiatury USB).
</p>

</body>
</section>
<section>
<title>Czy są jakieś alternatywy dla coLinux?</title>
<body>

<p>
Tak!
</p>

<ul>
<li><uri link="http://www.vmware.com/">VMWare</uri></li>
<li><uri link="http://bochs.sourceforge.net/">Bochs</uri></li>
</ul>

</body>
</section>
<section>
<title>Czy coLinux będzie współpracował z jądrem 2.6?</title>
<body>

<p>
Obecnie, nie. coLinux używa jądra na bazie 2.4, na którego zostały nałożone
łatki, aby uwzględnić emulowane urządzenia oraz współdzielone zasoby z systemem
Windows.
</p>

</body>
</section>
<section>
<title>Dlaczego nie działa środowisko X?</title>
<body>

<p>
Nie ma rdzennego wsparcia dla środowiska X. Należy używać vnc bądź Cygwin-X11.
Wskazówki jak je uruchomić znajdują się w tym tekście.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Zakończenie</title>
<section>
<body>

<p>
coLinux to niezwykle szeroka gama możliwości. Pod coLinuksem można mieć
uruchomione serwery Apache, Samba, DHCP, mail, distcc, NFS, czy <e>jakikolwiek
inny</e>. Gdyby nie wsparcie sprzętowe oraz czasy dostępu do dysków nikt nie
odróżniłby, że mamy uruchomionego Linuksa pod Windowsem, co jest rzeczywiście
zadziwiające.
</p>

</body>
</section>
</chapter>
</guide>
