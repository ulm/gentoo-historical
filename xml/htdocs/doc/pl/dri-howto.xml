<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/dri-howto.xml,v 1.7 2005/09/29 01:14:30 rane Exp $ -->

<guide link="/doc/pl/dri-howto.xml" lang="pl">
<title>Przewodnik po sprzętowej akceleracji 3D</title>

<author title="Autor">
  <mail link="spyderous@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Redaktor">
  <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Tłumacz">
  Krzysztof Smirnow
</author>

<abstract>
Dokument ten ma pomóc włączyć akcelerację 3D z użyciem X11-DRM
Linuksie Gentoo z Xorg.
</abstract>

<license/>

<version>1.0.13</version>
<date>2005-07-30</date>

<chapter>
<title>Wprowadzenie</title>
<section>
<title>Sprzętowa akceleracja 3D - czym jest i po co?</title>
<body>

<p>
Dzięki sprzętowemu przyspieszeniu 3D proces trójwymiarowego renderowania
wykorzystuje procesor graficzny na karcie graficznej do rysowania trójwymiarowych
obrazów zamiast zużywania cennych zasobów procesora głównego. Nazywa się to
"sprzętową akceleracją", w odróżnieniu od "akceleracji programowej", ponieważ bez
przyspieszenia 3D procesor główny musiałby rysować wszystko samodzielnie używając
bibliotek renderowania Mesa, co pochłania dużo mocy obliczeniowej. Podczas gdy
Xorg typowo obsługuje dwuwymiarową akcelerację sprzętową, często nie ma sprzętowej
akceleracji 3D. Trójwymiarowe sprzętowe przyspieszenie jest cenne w sytuacjach
wymagających przedstawiania trójwymiarowych obiektów, np. w grach lub
trójwymiarowym modelowaniu, czy też w 3D CAD.
</p>

</body>
</section>
<section>
<title>Jak uruchomić sprzętową akcelerację 3D?</title>
<body>

<p>
W wielu przypadkach istnieją zarówno sterowniki binarne, jak i o otwartym
źródle. Wypada preferować te drugie, skoro używamy Linuksa i otwartość
oprogramowania stanowi jedną z podstawowych zasad. Czasami jednak nie mamy
wyboru i musimy użyć sterowników binarnych, jak w przypadku kart nVidii.
Sterowniki binarne to na przykład media-video/nvidia-kernel i
media-video/nvidia-glx dla kart nVidia, media-video/mgavideo dla kart Matroxa
oraz media-video/ati-drivers dla kart ATI. Inne sterowniki open-source to
media-video/kyro-kernel dla kart KyroII i media-video/ati-gatos dla kart ATI,
które mają na celu lepiej wspierać możliwości wideo ATI.
</p>

</body>
</section>
<section>
<title>Czym jest DRI?</title>
<body>

<p>
<uri link="http://dri.freedesktop.org/wiki/">Direct Rendering
Infrastructure</uri>), czyli Infrastruktura Bezpośredniego Odtwarzania, znana
jako DRI, jest szkieletem dla bezpośredniego dostępu do sprzętu graficznego w
sposób wydajny i bezpieczny.  Zawiera modyfikacje dla serwera X, bibliotek
klient-serwer oraz jądra.  Najważniejszym zastosowaniem DRI jest tworzenie
środowiska do szybkiej implementacji OpenGL.
</p>

</body>
</section>
<section>
<title>Co to jest X11-DRM i jaki ma związek z Xorg?</title>
<body>

<p>
X11-DRM jest <e>rozszerzeniem</e> Xorga, które dodaje akcelerację 3D dla kart
graficznych poprzez dołączenie do jądra systemu modułu niezbędnego do
bezpośredniego renderingu.
</p>

</body>
</section>
<section>
<title>Do czego służy ten przewodnik</title>
<body>

<p>
Przewodnik ten jest dla tych, którzy nie mogą uzyskać bezpośredniego renderingu
z samym serwerem Xorg. X11-DRM działa ze sterownikami serii 3dfx, gamma, i8x0, matrox, rage128,
radeon, mach64 oraz sis300. Więcej informacji pod adresem<uri
link="http://dri.sourceforge.net">strony DRI</uri>.
</p>

</body>
</section>
<section>
<title>Pytania, sugestie, propozycje</title>
<body>

<p>
Wszelkie pytania, sugestie i propozycje prosimy zgłaszać na
adres <mail link="spyderous@gentoo.org">Donniego Berkholza</mail>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Instalowanie Xorg i konfiguracja jądra systemu</title>
<section>
<title>Instalowanie Xorg</title>
<body>

<p>
Aby uruchomić Xorg, należy przeczytać <uri
link="/doc/pl/xorg-config.xml">Przewodnik po konfiguracji Xorg</uri>.
</p>

</body>
</section>
<section>
<title>Konfiguracja jądra</title>
<body>

<p>
Należy zaznaczyć odpowiednią dla posiadanego chipsetu opcję.
</p>

<pre caption="Sprawdzanie chipsetu AGP">
# <i>emerge pciutils; lspci | grep AGP</i>
# <i>00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)</i>
<comment>(Wyniki sprawdzenia mogą być różne zależnie od sprzętu.)</comment>
</pre>

<p>
Jeżeli jądra nie jest w stanie obsługiwać chipsetu ciągle jest szansa
uruchomienia sprzętu poprzez użycie parametru <c>agp=try_unsupported</c>.
Spowoduje on użycie rdzennych algorytmów Intela do obsługi AGP. Aby dodać ten
parametr do konfiguracji jądra, należy wyedytować plik konfiguracyjny
bootloadera.
</p>

<p>
Poniższe opcje dotyczą większości, jeżeli nie wszystkich typów jądra
systemu. Zostały one skonfigurowane z użyciem gentoo-sources-2.4.20-r5.
</p>

<pre caption="Konfiguracja jądra systemu.">
# <i>ls -l /usr/src/linux </i>
lrwxrwxrwx    1 root     root           22 May 29 18:20 /usr/src/linux -> linux-2.4.20-gentoo-r5
<comment>(Należy się upewnić, że /usr/src/linux to link symboliczny do aktualnego kernela.)</comment>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<pre caption="Opcje w make menuconfig">
Processor type and features ---&gt;
&lt;*&gt; MTRR (Memory Type Range Register) support
Character devices ---&gt;
&lt;M&gt; /dev/agpgart (AGP Support)
[*] Intel 440LX/BX/GX and I815/I820/I830M/I830MP/I840/I845/I850/I860 support
<comment>(Należy wybrać swój chipset zamiast powyższego)</comment>
[ ] Direct Rendering Manager (XFree86 DRI support)
</pre>

<p>
Posiadacze jądra serii 2.4 muszą się upewnić, że Direct Rendering
Manager (DRM) jest wyłączony (<e>off</e>). Pakiet X11-DRM sam to ustawi.
Użytkownicy kernela serii 2.6 powinni uruchomić (<e>enable</e>) DRM ręcznie,
ponieważ jak dotychczas pakiet X11-DRM nie jest obsługiwany w serii 2.6.
</p>

</body>
</section>
<section>
<title>Kompilowanie i instalacja jądra systemu</title>
<body>

<pre caption="Kompilacja i instalacja jądra systemu">
# <i>make dep &amp;&amp; make clean bzImage modules modules_install</i>
# <i>mount /boot</i>
# <i>cp arch/i386/boot/bzImage /boot</i>
</pre>

<p>
Aby zmienić nazwę obrazu na inną niż "bzImage" należy po prostu skopiować obraz
do "/boot/INNA_NAZWA" zamiast do "/boot". Trzeba również pamiętać o
poprawieniu pliku konfiguracyjnego bootloadera (lilo.conf lub grub.conf). W
przypadku LILO, trzeba jeszcze wczytać konfigurację przy pomocy polecenia
/sbin/lilo.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Instalowanie X11-DRM i konfiguracja direct rendering</title>
<section>
<title>Instalowanie X11-DRM</title>
<body>

<warn>
Użytkownicy jąder serii 2.6 mogą pominąć tę część i przejść bezpośrednio do
<uri link="#configure_xorg">konfiguracji Xorg.conf</uri>.
</warn>

<pre caption="Instalowanie X11-DRM">
# <i>emerge x11-drm</i>
</pre>

</body>
</section>
<section id="configure_xorg">
<title>Konfigurowanie xorg.conf</title>
<body>

<p>
Na niektórych chipsetach konieczne będzie przebudowanie pakietu <c>xorg-x11</c>
z flagą <c>USE="insecure-drivers"</c>. Dotyczy to układów mach64, unichrome i
savage na xorg-x11-6.8.2 oraz mach64 i unichrome na xorg-x11-6.8.99.x.
Posiadacze układów Savage nie powinni korzystać z xorg-x11-6.8.99.x, ponieważ
jego obsługa tam jest zepsuta.
</p>
  
<pre caption="Ponowna kompilacja xorg-x11">
# <i>vim /etc/portage/package.use</i>
<comment>(Dla wspomnianych wyżej układów należy dodać poniższy wpis)</comment>
x11-base/xorg-x11 insecure-drivers
# <i>emerge xorg-x11</i>
</pre>
  
<p>
Następny krok to otwarcie <path>/etc/X11/xorg.conf</path> w edytorze tekstu i
dokonanie w nim zmian aktywujących DRI oraz GLX.
</p>

<pre caption="xorg.conf">
...
Section "Module"
  Load "dri"
  Load "glx"
  ...
EndSection
...
Section "Device"
  Driver "radeon"
  ...
EndSection
...
Section "dri"
  Mode 0666
EndSection
</pre>

<p>
Użytkownicy innych sterowników muszą odpowiednio zmodyfikować wpis "radeon".
</p>

</body>
</section>
</chapter>

<chapter>
<title>Testowanie akceleracji 3D</title>
<section>
<title>Ponowne uruchomienie systemu z użyciem nowego jądra</title>
<body>

<p>
Po ponownym uruchomieniu systemu należy sprawdzić czy direct
rendering został zainstalowany i czy dobrze działa.
</p>

<pre caption="Testowanie renderingu">
# <i>startx</i>
<comment>(Nie ma potrzeby ręcznego ładowania modułów dla agpart, powinny wczytać się automatycznie</comment>
# <i>glxinfo | grep rendering</i>
direct rendering: Yes
<comment>(Jeżeli odpowiedź brzmi: "No", akcelaracja 3D nie została zainstalowana)</comment>
# <i>glxgears</i>
<comment>(Test ilości ramek na sekundę (FPS) w domyślnej wielkości. Liczba powinna być)</comment>
<comment>(znacząco wyższa niż przed instalacją x11-drm. Test należy wykonać w czasie, kiedy procesor możliwie nie jest zajęty innymi zadaniami.)</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Używanie źródeł z CVS</title>
<section>
<body>

<warn>
Nie należy ich używać jeżeli pakiet działa prawidłowo.
</warn>

</body>
</section>
<section>
<title>Czy CVS jest potrzebny?</title>
<body>

<p>
Po pierwsze należy sprawdzić czy pakiet x11-drm działa. Jeżeli nie działa, a przegląd
logów wykazał, że nie jest to błąd konfiguracji, może się okazać konieczne
wykorzystanie źródeł CVS. Można tam również pobrać aktualną na dany dzień wersję
sterownika.
</p>

</body>
</section>
<section>
<title>Czy źródła CVS obsługują daną kartę?</title>
<body>

<p>
Należy sprawdzić <uri link="http://dri.freedesktop.org/wiki/Status">na liście
kart obsługiwanych przez DRI</uri>, czy dana karta się na niej znajduje. Jeżeli
nie ma akurat naszej, może wystarczyć podobna.
</p>

<!-- I see a couple of 8x AGP stuff on the Internet about vanilla 2.4 kernels;
     is this now available or not? I've commented it out for the time being,
     hoping that this doesn't affect us :)

<warn>
"Linux 2.4 doesn't support agp 8x, so I had to go find a backport. The backport
works .... it doesn't patch quite properly, and it requires 2.4.21 (I've only
gotten it to work with vanilla, straight from the tarball (not ebuild)). First
go get the 2.4.20-2.4.21 patch from kernel.org .... (then get the patch,) It
was on a mailing list somewhere. It doesn't patch cleanly - - one file fails,
the pci_ids.h file, but if you actually read the file and the reject list, it's
very easy to fix. But it does load, and it gives me 1600x1200 with video
(although a bit slow b/c of lack of dga) with xfree-drm." (SanityInAnarchy on
#gentoo)
</warn>

<impo>
The patch is a little tricky to work with but <uri
link="http://www.ussg.iu.edu/hypermail/linux/kernel/0302.2/att-1618/01-agp3.diff.bz2">here's
the link</uri>. If you can disable 8X AGP in your BIOS, change it to 4X and you
may not need the patch.
</impo>
-->

</body>
</section>
<section>
<title>Podążanie za instrukcjami CVS</title>
<body>

<p>
Projekt DRI posiada <uri
link="http://dri.freedesktop.org/wiki/Building">dokumentację</uri>
na temat kompilowania CVS. Należy wybrać odpowiednią instrukcję:
<e>Instalacja dla XFree86</e> lub
<e>Instalacja dla X.org</e>.
</p>

</body>
</section>
<section>
<title>Instalowanie CVS</title>
<body>

<p>
Należy sprawdzić czy moduły DRI kernela zostały zbudowane:
</p>

<pre caption="Weryfikacja">
# <i>cd ~/DRI-CVS/build/xc/programs/Xserver/hw/xfree86/os-support/linux/drm/kernel; ls</i>
</pre>

<p>
Dla 3dfx Voodoo powinno być <path>tdfx.o</path>. W przypadku Matroxa
G200/G400, <path>mga.o</path>. Dla Ati Rage 128, powinno być
<path>r128.o</path>. W przypadku Ati Radeona
<path>radeon.o</path>. Dla Intela i810, powinno być <path>i810.o</path>.
Jeżeli nie udało się zbudować modułu DRI kernela należy sprawdzić, czy
używana jest właściwa wersja jądra Linux. Zwykle najnowsze jądra nie
obsługują DRI.
</p>

<p>
Kolejnym krok to instalacja na XFree86 lub X.org. Po pierwsze trzeba wykonać kopię
zapasową xfree lub xorg-x11.
</p>

<pre caption="Kopia zapasowa Xorg">
# <i>quickpkg xorg-x11</i>
<comment>(Tak się wykonuje kopię zapasową xorg-11)</comment>
# <i>make install</i>
</pre>

<p>
Powrót do instrukcji "Konfiguracja Xorg" powyżej.
</p>

<p>
Aby załadować właściwy moduł DRM do działającego jądra systemu, należy
skopiować moduł kernela do <path>/lib/modules/`uname -r`/kernel/drivers/char/drm/</path>.
Następnie uruchomić <c>modules-update</c> i zrestartować serwer X. Jeżeli nie jest
uruchamiany kernel z wbudowanym tym elementem, zamiast <c>`uname -r`</c> należy
użyć nazwy jądra.

</p>

<warn>
Należy się upewnić że wszystkie wcześniejsze wersje modułów DRI zostały
odłączone. Z drugiej strony niektóre moduły DRM wymagają wcześniejszego
załadowania agpart.
</warn>

</body>
</section>
</chapter>

<chapter>
<title>Ulepszanie działania</title>
<section>
<title>Przyspieszanie direct renderingu</title>
<body>

<p>
Kilka odpowiednio ustawionych opcji może zwiększyć wydajność nawet o
30 procent. Ustawia się je w <path>/etc/X11/xorg.conf</path>.
</p>

<pre caption="xorg.conf">
Section "Device"
  Option     "AGPMode" "4"
  <comment>(Tak zwiększa się ilość FPS z 609 do 618.)</comment>
  Option     "AGPFastWrite" "True"
  <comment>(Ta opcja nie daje wymiernego efektu, za to może zdestabilizować system)</comment>
  <comment>(Może się okazać konieczne ustawienie jej również w BIOS-ie)</comment>
  Option     "EnablePageFlip" "True"
  <comment>(Ta opcja zwiększa ilość FPS z 618 do 702. Jej użycie jest również ryzykowne)</comment>
  ...
EndSection
</pre>

<p>
Aby poznać więcej opcji należy udać się pod adres <uri
link="http://dri.freedesktop.org/wiki/FeatureMatrix">tabeli możliwości</uri> na
stronie DRI lub przeczytać <uri
link="http://dri.sourceforge.net/doc/dri_driver_features.phtml">ich listę</uri>
na stronie Sourceforge.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rozwiązywanie problemów</title>
<section>
<title>Sterowniki przestały działać po wymianie jądra na nowsze</title>
<body>

<p>
Za każdym razem gdy rekompiluje się jądro lub nawet przełącza się na nowe,
należy przebudować również jego moduły. Nie ma potrzeby ponownego instalowania
xfree, czy xorg-11, ale niezbędne będzie przemergowanie x11-drm.
</p>

</body>
</section>
<section>
<title>Nie działa rendering, nie wiem dlaczego</title>
<body>

<p>
Spróbuj <c>insmod radeon</c> przed wystartowaniem serwera X. Spróbuj
również wbudować agpgart do kernela, zamiast ładować go jako moduł.
</p>

</body>
</section>
<section>
<title>Kiedy wpiszę startx, wyskakuje błąd: "[drm] failed to load kernel module agpgart"</title>
<body>

<p>
Spowodowane jest to tym, że agpart został wkompilowany do jądra, zamiast być
użytym jako moduł. Jeśli nie występują inne problemy można spokojnie zignorować
ten komunikat.
</p>

</body>
</section>
<section>
<title>Direct rendering nie działa, a w /var/log/Xorg.0.log widzę komunikat błędu o zbyt starej wersji sterownika</title>
<body>

<p>
Nie używasz sterownika x11-drm. Sprawdź, czy masz skompilowany DRM oraz
sterownik w jądrze. Prawdopodobnie nie masz.
</p>

</body>
</section>
<section>
<title>Mam Radeona, chcę mieć TV-Out</title>
<body>

<p>
Spróbuj sterowników ati-gatos. <c>emerge -s gatos</c>.
</p>

</body>
</section>
<section>
<title>To nie działa. Moja karta jest bardzo nowa i w ogóle nie jest wspierana</title>
<body>

<p>
Spróbuj sterowników binarnych. Dla sterowników ati, listę znajdziesz tu:
<uri>http://www.schneider-digital.de/html/download_ati.php</uri>. Jeżeli to nie
pomoże, użyj fbdev. Jest powolny, ale działa.
</p>

</body>
</section>
<section>
<title>Mam kartę PCI i nic nie działa. Pomocy!</title>
<body>

<p>
W sekcji "Device" uruchom ForcePCIMode.
</p>

<pre caption="Enabling ForcePCIMode">
Option "ForcePCIMode" "True"
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Podziękowania</title>
<section>
<body>

<ol>
  <li>
  Dla Christophera Webbera za sugestię podpowiedzi na temat zmiany lub
  rekompilacji kernela.
  </li>
  <li>
  Dla Steve'a, za zwrócenie uwagi na wypadki dri oraz DRI w XF86Config.
  </li>
</ol>

</body>
</section>
</chapter>

<chapter>
<title>Przydatne adresy</title>
<section>
<body>

<ol>
  <li><uri>http://forums.gentoo.org/viewtopic.php?t=46681</uri></li>
  <li><uri>http://forums.gentoo.org/viewtopic.php?t=29264</uri></li>
  <li><uri>http://dri.freedesktop.org/</uri></li>
  <li><uri>http://www.retinalburn.net/linux/dri_status.html</uri></li>
</ol>

</body>
</section>
</chapter>
</guide>
