<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/vi-guide.xml,v 1.3 2005/08/26 20:04:52 rane Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/pl/vi-guide.xml" lang="pl">
<title>Nauka vi metodą "ściągawki"</title>

<author title="Autor">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Autor">
  <mail link="stocke2@gentoo.org">Eric Stockbridge</mail>
</author>
<author title="Redaktor">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Tłumacz">
  <mail link="lucass@gentoo.org">Łukasz Strzygowski</mail>
</author>

<abstract>
Przewodnik ten stanowi wprowadzanie do znakomitego edytora - vi. Naukę ułatwi
posłużenie się ściągawką. Jest to pierwsza instrukcja do tego programu
przeznaczona dla początkujących.
</abstract>

<version>1.1.7</version>
<date>2005-07-21</date>

<chapter>
<title>Zaczynamy</title>
<section>
<title>Wprowadzenie</title>
<body>

<p>
Niniejszy samouczek przedstawia sposób obsługi znakomitego edytora jakim jest
vi. Użytkownik może nauczyć się z niego w jaki sposób poruszać się po tekście,
wprowadzać zmiany, korzystać z trybu edycji, kopiować oraz wklejać, a także
korzystać z udoskonaleń wprowadzonych w vimie, jak na przykład tryb wizualny czy
korzystanie z wielu okien.  Wykorzystana metoda <e>ściągawki</e> znacznie ułatwi
naukę, a nie wymaga dużej ilości czasu.
</p>

<p>
Użytkownicy, którzy do tej pory nie czuli się pewnie korzystając z vi, mogą
dzięki niniejszemu przewodnikowi udoskonalić swoje umiejętności używania
najpopularniejszego i najpotężniejszego programu do wizualnej edycji tekstu dla
Linuksa i UNIX-a.
</p>

</body>
</section>
<section>
<title>O przewodniku</title>
<body>

<p>
Duża ilość poleceń stanowi główny czynnik utrudniający naukę vi.  Aby używać go
efektywnie, wystarczy jednakże zapamiętać tylko część. Niemniej jednak, może to
zająć nieco czasu, a jednym z celów tego tekstu jest jak największe jego
skrócenie. Zatem już na wstępie mamy pierwszy problem - w jaki sposób w
krótkim czasie zapamiętać sporo poleceń?
</p>

<p>
Postanowiliśmy to rozwiązać za pomocą ściągawki, którą zamierzamy stopniowo
kompletować. Umieścimy na niej wszystkie istotne polecenia vi. Po ukończeniu
samouczka, wciąż będzie można się nią podpierać. W miarę upływu czasu i
przyswajania kolejnych poleceń zacznie się stawać coraz mniej przydatna. Z
pewnością umożliwi ona naukę szybszą niż kiedykolwiek do tej pory!
</p>

</body>
</section>
<section>
<title>Proces nauki</title>
<body>

<p>
W przewodniku zamierzam wykorzystać kilka technik, które pomogą w nauce. Po
pierwsze, tak jak oczekują tego użytkownicy, opiszę jak działa poszczególne
polecenie. Następnie zachęcę do wypróbowania go w praktyce oraz dopisania do
ściągawki (na przyszłość). Dokładne wykonywanie przedstawionych kroków jest
bardzo istotne jeśli chcemy, aby nauka nie trwała długo. Wypróbowywanie i
zapisywanie poleceń pomaga szybciej je zapamiętać.
</p>

</body>
</section>
<section>
<title>Przedstawiamy vima</title>
<body>

<p>
Istnieje wiele wersji vi. My zamierzamy zaprezentować odmianę o nazwie
<c>vim</c>. Cieszy się ona sporą popularnością i zawiera wiele udoskonaleń w
stosunku do zwykłego vi (za każdym razem kiedy zademonstrujemy polecenie
dostępne jedynie w vimie, wyraźnie to zaznaczymy).  Program można pobrać ze
strony <uri link="http://www.vim.org/">www.vim.org</uri>. W dodatku do
udoskonalonej wersji konsolowej, vim posiada również wersję graficzną,
korzystającą z biblioteki GTK+, o nazwie <c>gvim</c>.  Oto prezentujący ją zrzut
ekranu:
</p>

<figure link="/images/vishot.png" short="zrzut ekranu" caption="Zrzut ekranu z VIM"/>

<p>
Początkującym użytkownikom vi korzystanie z graficznego interfejsu użytkownika
może nieco ułatwić jego naukę.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Pierwsze kroki</title>
<section>
<title>Wybieramy plik</title>
<body>

<p>
Zanim nauczymy się edytować pliki, najpierw powinniśmy się nauczyć po nich
poruszać. vi posiada wiele służących do tego poleceń, a my zamierzamy przyjrzeć
się wielu z nim. Zaczniemy od wybrania niezbyt ważnego pliku tekstowego i
załadowania go w vi wpisując w konsoli:
</p>

<pre caption="Ładowanie pliku w vi">
$ <i>vi plik.txt</i>
</pre>

<p>
Użytkownicy, którzy zainstalowali vima, powinni wpisać <c>vim plik.txt</c>.  Z
kolei ci, którzy preferują gvima, mogą go uruchomić poleceniem <c>gvim
plik.txt</c> (oczywiście należy zmienić <path>plik.txt</path> na nazwę pliku
tekstowego do edycji).
</p>

</body>
</section>
<section>
<title>Wewnątrz vi</title>
<body>

<p>
Po uruchomieniu vi naszym oczom powinna się ukazać część załadowanego pliku
tekstowego. Gratulacje - oto vi! W przeciwieństwie do wielu edytorów, vi zaraz
po uruchomieniu aktywuje <e>tryb poleceń</e> (ang. insert mode). Oznacza to, że
na przykład po wciśnięciu klawisza <c>l</c>, zamiast dopisania go do tekstu,
kursor poruszy się o jeden znak w prawo.  W trybie poleceń klawisze używane są
w celu wysyłania poleceń do vi, nie do wpisywania tekstu. Polecenia służące do
poruszania się należą do najistotniejszych; rzućmy na nie okiem.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Poruszanie się</title>
<section>
<title>Poruszanie się w vi, część 1</title>
<body>

<p>
W trybie poleceń do poruszania kursorem w lewo, dół, górę oraz w prawo można
skorzystać odpowiednio z klawiszy <c>h</c>, <c>j</c>, <c>k</c> oraz <c>l</c>. W
nowoczesnych wersjach vi służą do tego także klawisze kursora. <c>h</c>,
<c>j</c>, <c>k</c> i <c>l</c> są jednak wygodniejsze, ponieważ po
przyzwyczajeniu się do nich, aby poruszać się po dokumencie nie trzeba przesuwać
całej ręki. Spróbuj skorzystać z obu metod i przejść na początek linii klawiszem
<c>h</c>. vi nie pozwala automatycznie przejść do poprzedniej linii za pomocą
<c>h</c> kiedy kursor dotrze do pierwszego znaku.  Analogicznie, nie pozwala
przejść do następnej za pomocą <c>l</c> kiedy kursor dojdzie do końca bieżącej.
</p>

</body>
</section>
<section>
<title>Poruszanie się w vi, część 2</title>
<body>

<p>
vi udostępnia specjalne skróty do szybkiego przemieszczania się.  Do
przesunięcia kursora na początek linii służy klawisz <c>0</c> (zero), natomiast
do przesunięcia go na jej koniec, klawisz <c>$</c>. Wypróbuj je. Liczne poręczne
polecenia do przesuwania kursora powodują, że vi świetnie nadaje się na tzw.
"pager" (taki jak programy less oraz more). Wykorzystanie go w tym celu pomoże
ci szybciej zapamiętać polecenia.
</p>

<p>
Do poruszania się w przód i w tył o długość strony służą odpowiednio kombinacje
<c>&lt;CTR&gt;F</c> oraz <c>&lt;CTR&gt;B</c>. Nowoczesne odmiany vi (jak na
przykład vim) pozwalają również korzystać w tym celu z klawiszy <c>PGUP</c> oraz
<c>PGDOWN</c>.
</p>

</body>
</section>
<section>
<title>Poruszanie się pomiędzy słowami, część 1</title>
<body>

<p>
vi udostępnia także wygodne skróty do przeskakiwania kursorem pomiędzy słowami.
Aby przenieść się do <e>pierwszego</e> znaku kolejnego słowa, wciśnij <c>w</c>.
Aby się przenieść do <e>ostatniego</e> znaku kolejnego słowa, wciśnij <c>e</c>.
Aby się przenieść do pierwszego znaku <e>poprzedniego</e> słowa, wciśnij
<c>b</c>. Spróbuj.
</p>

</body>
</section>
<section>
<title>Poruszanie się pomiędzy słowami, część 2</title>
<body>

<p>
Ponieważ vi dzieli słowa w miejscach spacji <e>oraz</e> znaków interpunkcji,
słowa takie jak <c>foo-bar-oni</c> traktuje jako pięć osobnych.
<c>foo-bar-oni</c> jest zatem dzielone na <c>foo</c>, <c>-</c>, <c>bar</c>,
<c>-</c> oraz <c>oni</c>.
</p>

<p>
Nie zawsze jest to działanie pożądane. Na szczęście vi posiada także pojęcie
"dużego słowa", dzielonego <e>jedynie w miejscach spacji oraz znaków nowej
linii</e>. Wtedy <c>foo-bar-oni</c> jest traktowane jako jedno duże słowo.
</p>

</body>
</section>
<section>
<title>Poruszanie się pomiędzy słowami, część 3</title>
<body>

<p>
Aby przeskoczyć do następnego lub poprzedniego dużego słowa, wystarczy
skorzystać z pisanych wielką literą odpowiedników poleceń dla normalnych słów. A
zatem, żeby przenieść się do pierwszego znaku kolejnego dużego słowa, wciśnij
<c>W</c>. Z kolei żeby przenieść się do ostatniego znaku kolejnego dużego słowa,
wciśnij <c>E</c>. Żeby przenieść się do pierwszego znaku poprzedniego dużego
słowa, wciśnij <c>B</c>. Spróbuj i porównaj te polecenia z odpowiednimi dla
normalnych słów, żeby lepiej zrozumieć różnicę.
</p>

</body>
</section>
<section>
<title>Przemieszczanie się na większe odległości</title>
<body>

<p>
Zanim umieścimy wszystko na ściągawce, musimy omówić jeszcze kilka poleceń.
<c>(</c> oraz <c>)</c> służą do przemieszczania się odpowiednio na początek
poprzedniego i kolejnego zdania.  Za pomocą <c>{</c> oraz <c>}</c> możesz
natomiast przenieść się na początek bieżącego oraz następnego paragrafu.
Wypróbuj je.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Zamykanie vi</title>
<section>
<body>

<p>
Istnieje jeszcze jedna grupa poleceń, które musisz poznać.  Wpisanie <c>:q</c>
zamknie vi. Jeśli nie działa, prawdopodobnie zmodyfikowałeś w jakiś sposób
otwarty plik. Aby wyjść z vi i pominąć wszystkie modyfikacje, wpisz <c>:q!</c>.
</p>

<p>
W vi, dowolne polecenie zaczynające się dwukropkiem, to tak zwane polecenie
<e>trybu ex</e>. <e>ex</e> to wbudowany w vi niewizualny edytor. Można z niego
korzystać podobnie jak z seda to edycji pojedynczych linii. Ponadto, jak właśnie
zobaczyliśmy, można z niego korzystać do zamykania vi.  Wciśnięcie w trybie
poleceń klawisza <c>Q</c> przenosi do trybu ex. Jeśli to zrobisz, powinieneś
zobaczyć : jako znak zachęty. Naciśnięcie entera spowoduje przewinięcie ekranu o
jedną linię. Żeby powrócić do vi, wystarczy wpisać vi i wcisnąć enter.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Ściągawka</title>
<section>
<title>Zaczynamy pisać ściągawkę</title>
<body>

<p>
Przedstawiliśmy już wiele poleceń. Nadszedł czas zapisać je na naszej ściągawce.
Wszystko powinno się zmieścić na jednej kartce papieru rozmiaru US letter lub
A4. Oto zdjęcie mojej własnej ściągawki po zapisaniu tego co omówiliśmy do tej
pory. Postaraj się zrobić swoją podobnie, żeby na nic nie zabrakło miejsca.
</p>

<figure link="/images/vicheat-first.png" short="Pierwsza część ściągawki"
caption="Ściągawka"/>

</body>
</section>
<section>
<title>Inne ważne polecenia</title>
<body>

<p>
Kontynuujmy. W trybie poleceń, za pomocą <c>G</c> można przenieść kursor do
dowolnej linii. Na przykład, aby przeskoczyć do pierwszej, należy wpisać
<c>1G</c> (<c>G</c> pisane wielką literą). 
</p>

<p>
Aby przeskoczyć do kolejnego wystąpienia określonego tekstu należy wpisać
<c>/&lt;regexp&gt;</c> i nacisnąć <c>enter</c>.  Zastąp &lt;regexp&gt;
poszukiwanym wyrażeniem regularnym.  Jeśli nie znasz się na wyrażeniach
regularnych to nic straconego - wpisanie <c>/foo</c> tak jak to oczekiwane
wyszuka następne wystąpienie słowa <e>foo</e>. Jedyną rzeczą, o której należy
pamiętać to znaki specjalne: <c>^</c>, <c>.</c>, <c>$</c> oraz <c>\</c>. Trzeba
je poprzedzić znakiem <c>\</c>. Na przykład, aby odnaleźć "foo.gif", wystarczy
wpisać <c>/foo\.gif</c>.
</p>

<p>
Aby powtórzyć wyszukiwanie w przód, wciśnij <c>n</c> lub <c>//</c>. Aby je
powtórzyć wstecz, wciśnij <c>N</c>. Jak zwykle wypróbuj te polecenia
samodzielnie.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Zapisywanie oraz edycja</title>
<section>
<title>Zapisz i zapisz jako...</title>
<body>

<p>
Omówiliśmy już jedno polecenie trybu <e>ex</e>: <c>:q</c>, służące do zamykania.
Aby przed wyjściem zapisać zmiany, wpisz <c>:w</c>. Jeśli chcesz je zapisać do
innego pliku, na przykład <e>plik.txt</e>, wpisz <c>:w plik.txt</c>. Aby jednym
poleceniem zapisać zmiany i wyjść, wpisz <c>:x</c> lub <c>:wq</c>.
</p>

<p>
W vimie (oraz innych zaawansowanych klonach vi, jak elvis), można edytować
jednocześnie wiele plików. Żeby otworzyć plik w nowym, podzielonym oknie, wpisz
<c>:sp plik.txt</c>.  Aby przełączyć się pomiędzy oknami, wciśnij
<c>&lt;CTR&gt;w&lt;CTR&gt;w</c> (dwukrotnie control-w).  Każde z poleceń:
<c>:q</c>, <c>:q!</c>, <c>:w</c> i <c>:x</c> odnosi się jedynie do aktywnego
okna.
</p>

</body>
</section>
<section>
<title>Prosta edycja</title>
<body>

<p>
Czas nauczyć się prostych poleceń służących do edycji.  Mówimy o nich
<e>proste</e>, ponieważ pozostawiają vi w trybie poleceń. Bardziej złożone
automatycznie aktywują tryb edycji -- tryb umożliwiający bezpośrednie wpisywanie
tekstu z klawiatury. Im również poświęcimy nieco czasu.
</p>

<p>
Spróbuj wcisnąć kilka razy <c>x</c>. Polecenie to usuwa znak aktualnie
wskazywany kursorem. Następnie przesuń kursor do środka paragrafu i wciśnij
<c>J</c> (wielką literą).  Połączysz w ten sposób następną linię z końcem
bieżącej.  Zaznaczając jakiś znak kursorem i wciskając <c>r</c> oraz dowolny
inny znak, zamienisz go na podany. W końcu spróbuj polecenia <c>dd</c> - usunie
ono całą bieżącą linię.
</p>

</body>
</section>
<section>
<title>Powtarzanie i usuwanie</title>
<body>

<p>
Za pomocą klawisza <c>.</c> można powtórzyć dowolne polecenie edycji. Wpisanie
<c>dd...</c> spowoduje usunięcie czterech linii, a <c>J......</c> połączenie
sześciu. 
</p>

<p>
Aby usunąć tekst, można połączyć polecenie <c>d</c> z dowolnym poleceniem ruchu.
Na przykład <c>dw</c> usunie wszystko od kursora do początku kolejnego słowa;
<c>d)</c> usunie wszystko do końca kolejnego zdania, a <c>d}</c> wszystko do
końca paragrafu. Wypróbuj podobnych połączeń samemu, aby się do nich
przyzwyczaić.
</p>

</body>
</section>
<section>
<title>Cofnij!</title>
<body>

<p>
Skoro już eksperymentujemy z usuwaniem, to najwyższa pora żeby nauczyć się cofać
zmiany. Oryginalna wersja vi pozwalała na cofnięcie jedynie ostatniego
polecenia, za pomocą <c>u</c>.  Na szczęście nowocześniejsze edycje, jak vim
pozwalają cofać większą ilość zmian. Spróbuj na przemian poleceń <c>d</c> oraz
<c>u</c>.
</p>

</body>
</section>
<section>
<title>Aktualizacja ściągawki</title>
<body>

<p>
Czas zaktualizować naszą ściągawkę! Po dodaniu wszystkich poleceń, które do tej
pory omówiliśmy, powinna wyglądać jak na rysunku:
</p>

<figure link="/images/vicheat-edit.png" short="Ściągawka" caption="Ściągawka
z dopisanymi poleceniami edycji"/>

</body>
</section>
</chapter>

<chapter>
<title>Tryb edycji</title>
<section>
<body>

<p>
Jak dotąd omówiliśmy poruszanie się po vi, obsługę plików oraz podstawowe
polecenia edycji. Wciąż jednak nie pokazaliśmy w jaki sposób po prostu
wprowadzać tekst!  Było to zamierzone, ponieważ tryb edycji vi jest nieco
skomplikowany. Kiedy się go nauczysz, złożoność okaże się jednakże jego zaletą.
</p>

<p>
W <e>trybie edycji</e> można bezpośrednio wprowadzać tekst, podobnie jak w
innych wizualnych edytorach. Aktywuje się go poleceniami <c>i</c> oraz <c>a</c>.
Jeśli użyjesz pierwszego, tekst zostanie <e>wstawiony</e> przed kursorem, a
jeśli wybierzesz następne, zostanie za nim <e>dopisany</e>. Aby powrócić do
trybu poleceń, wystarczy wcisnąć <c>&lt;ESC&gt;</c>.
</p>

</body>
</section>
<section>
<title>Zalety trybu edycji</title>
<body>

<p>
Nie zwlekaj i spróbuj obu poleceń: <c>a</c> oraz <c>i</c>.  Wprowadź trochę
tekstu i wciśnij escape aby wrócić do trybu poleceń. Zobacz co się stanie jeśli
naciśniesz <c>&lt;ENTER&gt;</c>, klawisze kursora, <c>&lt;DEL&gt;</c>. Klawisze
te pozwalają na wprowadzanie sporych zmian bez ciągłego przełączania się
pomiędzy trybami edycji oraz poleceń.
</p>

</body>
</section>
<section>
<title>Opcje edycji</title>
<body>

<p>
Oto kilka innych użytecznych sposobów aktywowania trybu edycji.  Wciśnięcie
<c>A</c> spowoduje umieszczenie kursora na <c>końcu</c> bieżącej linii,
niezależnie od jego aktualnej pozycji. <c>I</c> natomiast przeniesie go na
<e>początek</e> linii. Wciśnięcie <c>o</c> utworzy nową pustą linię pod
bieżącą, a <c>O</c> powyżej bieżącej. Aby zastąpić całą aktualną linię, wciśnij
<c>cc</c>. Żeby zastąpić wszystko od kursora do końca linii, wciśnij <c>c$</c>.
Aby zastąpić wszystko od kursora do początku linii, wpisz <c>c0</c>.
</p>

<p>
Oprócz przeprowadzenia specyficznej operacji, każde z powyższych poleceń
aktywuje tryb edycji. Po zakończeniu wpisywania tekstu należy wcisnąć
<c>&lt;ESC&gt;</c> żeby powrócić do trybu poleceń.
</p>

</body>
</section>
<section>
<title>Modyfikacja tekstu</title>
<body>

<p>
Z poleceniem <c>c</c> (od ang. change - zmiana) spotkaliśmy się już omawiając
<c>cc</c>, <c>c0</c> oraz <c>c$</c>. <c>cc</c> to specjalna forma polecenia
<c>c</c>, podobna do <c>dd</c>.  Natomiast <c>0</c> oraz <c>c$</c> są
przykładani połączenia polecenia zmiany z poleceniami ruchu. Pod tym względem
<c>c</c> zachowuje się podobnie do <c>d</c>, z tym wyjątkiem, że pozostawia
edytor w trybie edycji abyś mógł od razu nadpisać zastępowany tekst. Spróbuj
połączyć <c>c</c> z różnymi poleceniami ruchu, na przykład wpisując <c>cW</c>,
<c>ce</c> czy <c>c(</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Polecenia złożone</title>
<section>
<body>

<p>
vi jest <e>naprawdę</e> potężny dzięki złożonym poleceniom, jak <c>D{</c> czy
<c>cw</c>. Pozwala między innymi na łączenie liczb z dowolnymi poleceniami
ruchu. Wpisanie <c>3w</c> spowoduje przesunięcie kursora o trzy słowa w prawo.
Oto dwa inne przykłady złożonych poleceń: <c>12b</c>, <c>4j</c>.
</p>

<p>
W dodatku do połączeń (liczba)(polecenie ruchu), vi pozwala na dodawanie do nich
<c>d</c> oraz <c>c</c>. Zatem <c>d3w</c> usunie trzy słowa za kursorem, a
<c>d2j</c> bieżącą oraz dwie następne linie. Spróbuj sam żeby przekonać się jak
potężny oraz zwięzły jest vi. Kiedy się przyzwyczaisz, będziesz mógł edytować
pliki znacznie szybciej.
</p>

</body>
</section>
<section>
<title>Aktualizacja ściągawki</title>
<body>

<p>
Czas ponownie zaktualizować ściągawkę. Oto jak teraz powinna wyglądać:
</p>

<figure link="/images/vicheat-compound.png" short="Ściągawka" caption="Ściągawka
z poleceniami złożonymi"/>

</body>
</section>
<section>
<title>Funkcje pozwalające zwiększyć efektywność</title>
<body>

<p>
Omówiliśmy już jak się poruszać, zapisywać, wychodzić, edytować, usuwać oraz
korzystać z trybu edycji. Możesz już używać vi do dowolnych zadań.
</p>

<p>
Vi posiada znacznie więcej użytecznych poleceń.  W tej części pokażemy jak
<e>wycinać</e>, <e>kopiować</e> i <e>wklejać</e>, <e>wyszukiwać</e> i
<e>zastępować</e> oraz korzystać z <e>autoindent</e>.
</p>

</body>
</section>
<section>
<title>Tryb wizualny</title>
<body>

<p>
Najlepszą metodą wycinania oraz wklejania tekstu jest korzystanie z <e>trybu
wizualnego</e>, specjalnego trybu dodanego do nowocześniejszych wersji vi, jak
vim oraz elvis. Należy traktować go po prostu jako tryb "zaznaczania tekstu".
Kiedy tekst zostanie zaznaczony, możesz go kopiować lub usuwać, a następnie
wklejać. W gvim można zaznaczać za pomocą lewego przycisku myszy:
</p>

<figure link="/images/vihighlight.png" short="Zaznaczony tekst" caption="VIM z zaznaczonym tekstem"/>

<p>
Ponadto, tryb wizualny można aktywować wciskając <c>v</c> (jeśli używasz vi w
konsoli, jest to jedyna możliwość).  Następnie przesuwając kursor, będziesz
jednocześnie zaznaczał fragmenty tekstu. Kiedy skończysz, będziesz mógł go
wycinać oraz kopiować.
</p>

<p>
Aby skopiować zaznaczony tekst, wciśnij <c>y</c> (od ang. yank).
Aby go wyciąć, wciśnij <c>d</c>. Zostaniesz z powrotem przeniesiony
do trybu poleceń. Następnie przesuń kursor do miejsca
gdzie chcesz wstawić tekst i wciśnij <c>P</c> (żeby go wkleić
przed kursorem) lub <c>p</c> (żeby go wkleić za kursorem).
Gotowe! Zanim przejdziesz do kolejnej sekcji, spróbuj sam.
</p>

</body>
</section>
<section>
<title>Zastępowanie tekstu</title>
<body>

<p>
Aby zastąpić wzorce tekstu, skorzystamy z trybu <e>ex</e>.
Jeśli chciałbyś zastąpić pierwsze wystąpienie podanego
wyrażenia regularnego w bieżącej linii,
wpisz <c>:s/&lt;regexp&gt;/&lt;zamiennik&gt;/</c> i wciśnij
<c>&lt;ENTER&gt;</c>. &lt;regexp&gt; zastąp poszukiwanym
wyrażeniem regularnym, a &lt;zamiennik&gt; tekstem, którym
chcesz go zastąpić. Żeby podmienić wszystkie wystąpienia
w bieżącej linii, wpisz <c>:s/&lt;regexp&gt;/&lt;zamiennik&gt;/g</c>.
Jeśli chcesz zastąpić wszystkie wystąpienia w pliku, wpisz
<c>:%s/&lt;regexp&gt;/&lt;zamiennik&gt;/g</c>. Aby
zastąpić wszystkie wystąpienia, ale każdą zamianę osobno
potwierdzać, wpisz <c>:%s/&lt;regexp&gt;/&lt;zamiennik&gt;/gc</c>
(c od ang. confirm) i wciśnij <c>&lt;ENTER&gt;</c>.
</p>

</body>
</section>
<section>
<title>Wcięcia</title>
<body>

<p>
vi obsługuje automatyczne dodawanie wcięć w czasie edycji kodu źródłowego, tzw.
autoindent. Większość nowoczesnych wersji (jak vim) domyślnie aktywuje tryb
autoindent po otworzeniu pliku z kodem (na przykład .c). Kiedy jest on włączony,
możesz przenieść się o jeden poziom wcięcia w lewo za pomocą <c>&lt;CTR&gt;d</c>
(control-d) oraz w prawo za pomocą <c>&lt;CTR&gt;t</c> (control-t). Jeśli
autoindent nie został włączony automatycznie, możesz to zrobić ręcznie
poleceniem trybu <e>ex</e>: <c>:set autoindent</c>.  Możesz ponadto ustawić
rozmiar wcięcia za pomocą <c>:set tabstop</c>. Dosyć popularne jest <c>:set
tabstop=4</c>.
</p>

</body>
</section>
<section>
<title>Ostateczna wersja ściągawki</title>
<body>

<p>
Samouczek vi dobiegł końca! Po dopisaniu wszystkich zaawansowanych poleceń do
ściągawki, powinna wyglądać podobnie do tej na rysunku:
</p>

<figure link="/images/vicheat-final.png" short="Ściągawka" caption="Ostateczna
wersja ściągawki"/>

<p>
Możesz już zacząć używać vi do edycji plików oraz pisania listów.  Trzymaj swoją
ściągawkę pod ręką i w razie czego do niej zaglądaj.  W ciągu tygodnia
powinieneś zapamiętać większość poleceń, a twoja efektywność wkrótce bardzo cię
zaskoczy!
</p>

<p>
Jeśli chcesz ustawić vi jako domyślny edytor, wpisz w <path>/etc/rc.conf</path>:
</p>

<pre caption="Ustawienie vi jako domyślnego edytora">
<comment>(Zmienna EDITOR powinna wskazywać na preferowany edytor.)</comment>
#EDITOR="/bin/nano"
EDITOR="/usr/bin/vim"
#EDITOR="/usr/bin/emacs"
</pre>

</body>
</section>
<section>
<title>Przydatne zasoby</title>
<body>

<p>
Oto kilka stron, które mogą się okazać przydatne w dalszej nauce vi:
</p>

<ul>
  <li>
    <uri link="http://www.thomer.com/thomer/vi/vi.html">The vi Lovers
    Home Page</uri>, doskonałe źródło informacji o vi
    </li>
  <li>
    <uri link="http://www.vim.org/">Strona domowa vima</uri> zawiera
    większość rzeczy jakich mógłbyś potrzebować
  </li>
  <li>
    Jeśli szukasz dobrej książki, <uri
    link="http://www.oreilly.com/catalog/vi6/">Learning the vi Editor,
    6th Edition</uri> to doskonały wybór. Zawiera dobry opis zarówno
    samego vi, jak i jego odmian.
  </li>
</ul>

</body>
</section>
<section>
<title>O niniejszym dokumencie</title>
<body>

<p>
Oryginalna wersja tego artykułu została po raz pierwszy opublikowana w serwisie
IBM developerWorks i jest własnością Westtech Information Services.  Niniejszy
dokument stanowi zaktualizowaną wersję oryginału i zawiera rozmaite poprawki
wprowadzone przez zespół dokumentacji Gentoo Linux.
</p>

</body>
</section>
</chapter>
</guide>
