<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/pl/gentoo-sparc-netboot-howto.xml,v 1.4 2005/09/29 01:14:30 rane Exp $ -->
<guide link="/doc/pl/gentoo-sparc-netboot-howto.xml" lang="pl">

<title>Uruchamianie systemów przez sieć</title>

<author title="Deweloper SPARC">
  <mail link="weeve@gentoo.org">Jason Wever</mail>
</author>
<author title="Tłumaczenie">
  Aleksander Kamil Modzelewski
</author>

<abstract>
Podręcznik budowy serwera obsługującego uruchamianie systemów przez sieć
(netboot) do rozprowadzania obrazów instalacyjnych Gentoo/SPARC.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license />

<version>1.2</version>
<date>2005-08-18</date>

<chapter>
<title>Wprowadzenie</title>
<section>
<body>

<note>
Ten podręcznik jest silnie skoncentrowany na architekturze SPARC.  Oczekujemy,
że serwer netboot będzie instalowany na już skonfigurowanym systemie Gentoo
Linux.
</note>

<p>
Ten dokument pokazuje jak umożliwić sieciowy start komputera opartego na Sun
Microsystems SPARC lub UltraSPARC. Podczas pisania przyjęto założenie, że
czytelnik dysponuje komputerem z zainstalowanym Gentoo Linux, który może zostać
wykorzystany jako serwer netboot.
</p>

<p>
Zarówno serwer jak i klient netboot będą musiały znajdować się w tej samej
podsieci, ponieważ protokół ARP z reguły nie jest rozprowadzany pomiędzy różnymi
segmentami sieci.
</p>

<p>
Ogólnie, proces uruchamiania z sieci przebiega tak:
</p>

<ol>
  <li>
    Klient wysyła zapytanie odwrotnego ARP (ang. reverse ARP, RARP), aby uzyskać
    swój adres IP
  </li>
  <li>
    Serwer odpowiada wysyłając klientowi jego adres IP
  </li>
  <li>
    Za pośrednictwem protokołu tftp próbuje ściągnąć obraz startowy z serwera
    RARP
  </li>
  <li>Po ściągnięciu obrazu klient używa go do startu systemu</li>
</ol>

<p>
Jak widać potrzebne będą serwery odwrotnego ARP oraz tftp.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Instalacja i konfiguracja oprogramowania</title>
<section>
<title>Demon odwrotnego ARP</title>
<body>

<p>
Dostępne są w tej chwili dwie implementacja serwera RARP: net-misc/iputils
(instalowane razem z podstawowym profilem systemu) oraz net-misc/rarpd.
</p>

<note>
Instalacja net-misc/rarpd spowoduje nadpisanie rarpd oraz jego strony mana
pochodzących z net-misc/iputils.
</note>

<p>
<b>Konfiguracja podstawowych składników rarpd</b>: <path>/etc/ethers</path>
</p>

<p>
Niezależnie od wybranego rarpd należy zmodyfikować plik
<path>/etc/ethers</path>. Plik ten informuje demona o tym, którym komputerom ma
odpowiadać na zapytania oraz jaki ma im przyznawać adres.
</p>

<p>
Każdy wiersz <path>/etc/ethers</path>składa się z adresu MAC karty sieciowej, z
której zdalna maszyna będzie próbowała się uruchomić oraz nazwa komputera. Pola
są oddzielane białymi znakami, natomiast rekordy powinny znajdować się w
oddzielnych wierszach. Następujący przykład przeznaczony jest dla hosta
nazywającego się sparc-netboot.gentoo.org:
</p>

<pre caption="Przykładowy /etc/ethers">
08:00:20:77:1f:3e       sparc-netboot.gentoo.org
</pre>

<note>
Jeśli dany bajt w adresie MAC zaczyna się od 0 to dopuszczalne jest pominięcie
pierwszego zera (na przykład 08:00:20:77:1f:3e można zapisać jako
8:0:20:77:1f:3e).
</note>

<p>
Daemon rarpd sprawdza zawartość pliku <path>/etc/ethers</path> za każdym razem,
gdy otrzyma zapytanie, więc po modyfikacji nie jest potrzebny restart.
</p>

<p>
<b>Rozwiązywanie nazw</b>: <path>/etc/hosts</path>
</p>

<p>
Ponieważ każdy wpis w <path>/etc/ethers</path>jest nazwą hosta, serwer netboot
musi być w stanie ją rozwiązać na odpowiadający jej adres IP. Jest to możliwe na
dwa sposoby, za pośrednictwem <path>/etc/hosts</path> lub serwera nazw z którego
serwer netboot korzysta.
</p>

<p>
Nowy wpis <path>/etc/hosts</path> będzie bardzo podobny do tego, który już
prawdopodobnie znalazł się tam podczas instalacji Gentoo na serwerze. Na
przykład, załóżmy, że hostowi sparc-netboot.gentoo.org odpowiada adres IP
10.0.1.15. Tak więc odpowiedni wpis <path>/etc/hosts</path>wyglądałby tak:
</p>

<pre caption="/etc/hosts">
10.0.1.15  sparc-netboot.gentoo.org
</pre>

<note>
W niektórych środowiskach niezbędny może okazać się kontakt z administratorem w
celu uzyskania adresu (lub adresów) IP dla klienta netboot.
</note>

<p>
Jeśli preferowane jest wykorzystanie serwera nazw, to administrator DNS będzie
musiał dodać rekord dla nazwy hosta, w naszym przypadku
sparc-netboot.gentoo.org, wskazujący na odpowiedni adres IP. W tym celu należy
się skonsultować z administratorem DNS i/lub dokumentacją serwera DNS.
</p>

<note>
Jeśli zarówno <path>/etc/hosts</path>jak i serwer DNS mają wpisy dla
uruchamianego komputera to preferowany będzie wpis w <path>/etc/hosts</path>(o
ile kolejność w <path>/etc/nsswitch.conf</path> nie została zmieniona z wartości
domyślnej).
</note>

<p>
<b>Konfiguracja net-misc/iputils rarpd</b>
</p>

<p>
Niestety nie istnieje skrypt init.d dla rarpd w wersji z net-misc/iputils, więc
wpis taki trzeba będzie dodać do <path>/etc/conf.d/local.start</path>.
Przykładowy wpis może wyglądać tak:
</p>

<pre caption="/etc/conf.d/local.start">
/usr/sbin/rarpd -v -e eth0
</pre>

<p>
Objaśnienie powyższych opcji:
</p>

<ul>
  <li>-v Szczegółowe wyjście</li>
  <li>
    -e Nie sprawdzaj obecności obrazu bootowania, odpowiedz jeśli za pomocą bazy
    <path>/etc/ethers</path> oraz DNS da się przypisać danemu adresowi MAC adres
    IP.
  </li>
  <li>eth0 interfejs, na którym rarpd ma nasłuchiwać.</li>
</ul>

<p>
Więcej informacji znajduje się na stronie man rarpd, w sekcji ósmej.
</p>

<p>
<b>Konifguracja net-misc/rarpd</b>
</p>

<p>
Najpierw należy zainstalować rarpd:
</p>

<pre caption="Instalacja rarpd">
# <i>emerge net-misc/rarpd</i>
</pre>

<p>
Następnie należy ustawić właściwe opcje w <path>/etc/conf.d/rarpd</path>. Na
przykład, dla konfiguracji podobnej jak poprzednio dla rarpd w wersji
net-misc/iputils, powinno się ustawić opcje jak następuje:
</p>

<pre caption="/etc/conf.d/rarpd">
RARPD_OPTS="-v -i eth0"
</pre>

<p>
Wytłumaczenie powyższych opcji:
</p>

<ul>
  <li>
    <c>-v</c> Szczegółowe wyjście. Pokazuj zapytania, na które daemon 
    odpowiada.
  </li>
  <li>
    <c>-i</c> Nasłuchuj na wymienionym interfejsie. Domyślnie rarpd nasłuchuje 
    na domyślnym interfejsie dla lokalnego rodzaju systemu - o ile jest on
    dostępny.
  </li>
</ul>

<p>
Więcej opcji jest opisanych w stronie mana dla rarpd oraz w <c>rarpd --help</c>.
</p>

</body>
</section>
<section>
<title>Demon tftpd</title>
<body>

<p>
Dostępne są trzy wersje daemona tftp, net-misc/atftp, net-misc/netkit-tftp oraz
net-misc/tftp-hpa. Potrzebny jest tylko jeden z nich.
</p>

<p>
<b>Konfiguracja elementów wspólnych dla tftp</b>
</p>

<p>
Każdy demon tftp potrzebuje katalogu, w którym umieszczone będą pliki przez
niego udostępniane. W tym podręczniku użyjemy w tym celu <path>/tftpboot</path>.
Katalog ten będzie traktowany jak katalog główny (<path>/</path>) podczas 
obsługi otrzymanych zapytań. Dodatkowo, skonfigurujemy system tak, aby deamon
tftp działał z uprawnieniami użytkownika i grupy nobody.
</p>

<p>
Jeżeli wybrany katalog nie istnieje, to niezbędne stworzenie go poleceniem
mkdir. Na przykład, dla <path>tftpboot</path>, właściwym poleceniem jest:
</p>

<pre caption="Tworzenie /tftpboot">
# <i>/bin/mkdir /tftpboot</i>
</pre>

<p>
Następnie potrzebna będzie zmiana właściciela i grupy <path>/tftpboot</path>na
nobody:
</p>

<pre caption="Zmiana właściciela">
# <i>chown nobody:nobody /tftpboot</i>
</pre>

</body>
</section>
<section>
<title>Daemon atftp</title>
<body>

<p>
Najpierw instalujemy pakiet net-misc/atftp:
</p>

<pre caption="Instalacja atftp">
# <i>emerge net-misc/atftp</i>
</pre>

<p>
Po instalacji net-misc/atftp niezbędna jest jego konfiguracja.  Jeżeli usługa
tftpd jest potrzebna zaraz po starcie systemu, to potrzebne będzie dodanie wpisu
do <path>/etc/conf.d/local.start</path>, ponieważ atftp nie ma własnych skryptów
dla init.d, inetd ani xinetd. Jeżeli potrzebne jest wykorzystanie inetd albo
xinetd, to należy zwrócić się do właściwych stron man.
</p>

<p>
Poniżej znajduje się przykładowy wpis atftpd w
<path>/etc/conf.d/local.start</path>:
</p>

<pre caption="/etc/conf.d/local.start">
/usr/sbin/in.tftpd -v --daemon /tftpboot
</pre>

<p>
Wyjaśnienie powyższych opcji:
</p>

<ul>
  <li>   
    <c>-v</c> Zwiększenie lub ustawienie poziomu logowania. Bez argumentów 
    podnosi poziom o jeden w stosunku do poziomu domyślnego. Domyślnym 
    poziomem jest LOG_NOTICE, dla objaśnienia należy skonsultować się ze
    stroną syslog(3). Dostępne wartości mieszczą się pomiędzy 0 (LOG_EMERG)
    do 7 (LOG_DEBUG).
  </li>
  <li>
    <c>--daemon</c> Działaj jako daemon. Nie należy wykorzystywać tej opcji
    jeżeli atftpd jest uruchamiany przez inetd.
  </li>
</ul>

<p>
Więcej opcji jest opisanych w stronie mana atftpd w sekcji 8.
</p>

</body>
</section>
<section>
<title>Daemon netkit-tftp</title>
<body>

<p>
Najpierw instalujemy pakiet net-misc-tftp jak następuje:
</p>

<pre caption="Instalacja netkit-tftp">
# <i>emerge net-misc/netkit-tftp</i>
</pre>

<p>
Następnie instalujemy sys-apps/xinetd - o ile nie jest już zainstalowany. Kiedy
oba pakiety są już dostępne można skonfigurować netkit-tftp. Program ten musi
być wykonywany z poziomu xinetd, jednak nie są z nim dostarczane żadne skrypty
przykładowe, więc zapewniamy jeden poniżej:
</p>

<pre caption="Przykładowy plik /etc/xinetd.d/tftp">
service tftp
{
    protocol        = udp
    port            = 69
    socket_type     = dgram
    wait            = yes
    user            = nobody
    group           = nobody
    server          = /usr/sbin/in.tftpd
    server_args     = /tftpboot
    only_from       = 10.0.1.0
    disable         = no
}
</pre>

<note>
Ten przykładowy plik konfiguracyjny tftp używa wiersza "disable = no", który
sprawia, że usługa jest domyślnie aktywna.  Jest to przeciwne do konfiguracji
typowej dla pakietów w Gentoo, które disable ustawiają na wartość "yes".
</note>

<p>
Wyjaśnienie tych spośród powyższych opcji, które można zmienić: user to
użytkownik z którego uprawnieniami wykonany zostanie in.tftpd, group to grupa z
której uprawnieniami wykonany zostanie in.tftpd, server_args to katalog główny
dla daemona tftp, a only_from to adresy, z których xinetd dopuszcza połączenia.
</p>

<p>
Dodatkowe informacje dostępne są na stronie manuala xinetd.conf, w sekcji 5.
</p>

<p>
Jeżeli xinetd działa, można mu wysłać sygnał HUP aby ponownie odczytał swoje
pliki konfiguracyjne.
</p>

<pre caption="Wysyłanie xinetd sygnału HUP">
# <i>/bin/killall -HUP xinetd</i>
</pre>

<p>
Jeżyli xinetd nie działa, należy go uruchomić za pośrednictwem skryptu init.d;
</p>

<pre caption="Startowanie xinetd">
# <i>/etc/init.d/xinetd start</i>
</pre>

<p>
Więcej informacji znajduje się w sekcji ósmej manuala, na stronie o in.tftpd.
</p>

</body>
</section>
<section>
<title>Daemon tftp-hpa</title>
<body>

<p>
Najpierw należy zainstalować pakiet tftp-hpa za pomocą następującego polecenia:
</p>

<pre caption="Instalacja tftp-hpa">
# <i>emerge net-misc/tftp-hpa</i>
</pre>

<p>
Razem z tftp-hpa dostarczony jest skrypt init.d oraz odpowiadający mu plik
konfiguracyjny conf.d. Należy upewnić się, że INTFTPD_PATH oraz INTFTPD_OPTS w
<path>/etc/conf.d/in.tftpd</path>zgadzają się z podanymi:
</p>

<pre caption="/etc/conf.d/in.tftpd">
INTFTPD_PATH="/tftpboot"
INTFTPD_OPTS="-s -v -l ${INTFTPD_PATH}"
</pre>

<p>
Daemon tftp może teraz zostać uruchomiony ze skryptu init.d:
</p>

<pre caption="Startowanie in.tftpd">
# <i>/etc/init.d/in.tftpd start</i>
</pre>

<p>
Więcej informacji można znaleźć w stronie manuala poświęconej tftpd, znajdującej
się w sekcji ósmej.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Przygotowanie obrazu tftpboot do wykorzystania przez klienta</title>
<section>
<body>

<p>
Należy upewnić się, że dysponuje się przygotowanym obrazem netboot. Dla SPARC
oraz SPARC64 obrazy dostępne są na mirrorach Gentoo w katalogu
<path>experimental/sparc/tftpboot</path>. Zakładamy teraz, że bootowany jest
system sparc64 przy użyciu pliku
<path>gentoo-sparc64-1.4_rc4-20040102.tftpboot</path>.
</p>

<p>
Po przygotowaniu obrazu należy go skopiować do katalogu <path>/tftpboot</path>:
</p>

<pre caption="Kopiowanie obrazu">
# <i>cp gentoo-sparc64-1.4_rc4-20040102.tftpboot /tftpboot</i>
</pre>

<p>
Teraz, gdy klient netboot wykonuje zapytanie tftp, szuka pliku o nazwie
składającym się z jego numeru IP w postaci szesnastkowej oraz, na niektórych
architekturach, z końcówki <path>.ARCH</path>. Numer szesnastkowy powinien być
podany <e>wielkimi</e>literami.
</p>

<p>
Przewodnik konwersji z postaci dziesiątkowej na szesnastkową dostępny jest na
stronie <uri>http://www.permadi.com/tutorial/numDecToHex/</uri>.
</p>

<p>
Dla leniwych/niecierpliwych, narzędzie do konwersji między postacią dziesiętną i
szesnastkową dostępne jest na <uri>http://dan.drydog.com/hextemp.html</uri>
</p>

<note>
Każdy oktet adresu IP (na przykład 10 w 10.0.1.15) należy przetłumaczyć na
postać szesnastkową oddzielnie.
</note>

<p>
Tak więc odpowiednikiem naszego przykładowego adresu IP, 10.0.1.15, będzie:
</p>

<pre caption="Przykładowy adres IP">
dziesiątkowo  10  0   1   15
szesnastkowo  0A  00  01  0F
</pre>

<p>
Tak więc przykładowy klient sparc64 podczas startu będzie szukał pliku o nazwie
0A00010F.
</p>

<p>
Klienty oparte na sparc będą szukały natomiast pliku 0A00010F.SUN4M,
0A00010F.SUN4C lub 0A00010F.SUN4D, zależnie od konkretnego systemu.
</p>

<p>
Alternatywnie można sprawdzić w logach tftp jakiego pliku szuka klient podczas
startu.
</p>

<p>
Należy upewnić się, że demony rarpd oraz tftpd są uruchomione, następnie
uruchomić klienta tak, jak jest to opisane w części "Uruchamianie klienta z
sieci".
</p>

<p>
Po wydaniu polecania boot klient będzie sprawiał wrażenie zawieszonego. Teraz,
na serwerze netboot, można sprawdzić dziennik systemowy w poszukiwaniu wpisu od
in.tftpd.
</p>

<p>
Przykładowy wpis na serwerze z działającym sysklogd oraz tftp-hpa wygląda tak:
</p>

<pre caption="Wpis w dzienniku systemowym serwera uruchamiania z sieci">
Jan  3 22:48:59 stargazer in.tftpd[8368]: RRQ from 10.0.1.15 filename 0A00010F
</pre>

<p>
Nazwa pliku znajduje się po napisie "filename" we wpisie, w tym przypadku jest
to 0A00010F.
</p>

<p>
Aby utrzymać kontrolę nad wykorzystanym obrazem netboot oraz aby umożliwić wielu
maszynom korzystanie z tego samego obrazu, można stworzyć dowiązanie symboliczne
do pliku o nazwie szesnastkowej.  Aby dokonać tego z naszym przykładowym
komputerem sparc64 oraz obrazem
<path>gentoo-sparc64-1.4_rc4-20040102.tftpboot</path> należy wykonać następujące
polecenie:
</p>

<pre caption="Dowiązanie obrazów">
# <i>/bin/ln -s /tftpboot/gentoo-sparc64-1.4_rc4-20040102.tftpboot /tftpboot/0A00010F</i>
</pre>

<p>
Teraz wszystko powinno już być gotowe do wystartowania!
</p>

</body>
</section>
</chapter>

<chapter>
<title>Uruchamianie klienta z sieci</title>
<section>
<body>

<p>
Korzystając z PROM OpenBoot (OBP) na SPARCu, należy wydać polecenie:
</p>

<pre caption="Startowanie OBP">
ok <i>boot net</i>
</pre>

<p>
Inną metodą, dostępną na pewnych maszynach, jest:
</p>

<pre caption="Startowanie OBP, wersja alternatywna">
ok <i>boot net-tpe</i>
</pre>

<note>
Jeżeli system nie wyświetla znaku zachęty OBP, to należy albo przytrzymać
klawisze Stop oraz A, albo przesłać sygnał break z konsoli szeregowej. Jeżeli
komputer nie może znaleźć systemu operacyjnego, to albo spróbuje wystartować
przez interfejs sieciowy (czego właśnie chcemy), albo pozostanie przy znaku
zachęty.
</note>

<p>
W ten sposób uruchomiony zostanie proces startu z sieci.  Powinien być widoczny
ciągle zmieniający się łańcuch znaków szesnastkowych. Kiedy obraz zostanie
załadowany, jądro przejmie kontrolę i rozpocznie procedurę ładowania systemu. W
przypadku obrazu sparc64 dojdzie on do znaku zachęty powłoki, z którego można
rozpocząć procedurę instalacji.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Znajdowanie i poprawianie błędów</title>
<section>
<body>

<p>
<b>Budowa wymaganego oprogramowania</b>
</p>

<p>
Jeśli serwer netboot pracuje na systemie Gentoo/Linux oraz występują problemy z
instalacją pakietów rarpd, należy przeszukać <uri>http://forums.gentoo.org</uri>
oraz <uri>http://bugs.gentoo.org</uri>, aby sprawdzić, czy problem przydarzył
się komuś innego. Jeśli nie, lub jeżeli odnalezione rozwiązania nie działają,
prosimy o zgłoszenie błędu na stronie <uri>http://bugs.gentoo.org</uri>.
</p>

<p>
<b>Po wydaniu polecenia boot net system sprawia wrażenie zawieszonego.</b>
</p>

<p>
Prawdopodobnie plik który system próbuje załadować z serwera tftp nie jest
dostępny. Na maszynie SPARC prawdopodobnie ukazałyby się następujące komunikaty:
</p>

<pre caption="System zawiesza się podczas startu">
Rebooting with command: boot
Boot device: net  File and args:
</pre>

<p>
Należy dokładnie upewnić się, że plik potrzebny klientowi znajduje się w
<path>/tftpboot</path>. Można zweryfikować nazwę pliku sprawdzając dziennik
systemu. Dodatkowo, jeśli plik istnieje, klient spróbuje go załadować. Czasem,
gdy pliku na początku nie było, zawiesi się, kiedy tylko się on pojawi. Aby
sobie z tym poradzić należy powrócić do zachęty OBP i ponownie wykonać polecenie
"boot net". Wtedy komputer powinien ściągnąć obraz i wystartować system
operacyjny.
</p>

<p>
<b>Próbuję wystartować przez sieć, ale jedyne, co widzę, to komunikaty "Timeout
waiting for ARP/RARP packet".</b>
</p>

<p>
Może to wynikać z kilku różnych problemów:
</p>

<ol>
  <li>
    Należy upewnić się, że dla danego komputera istnieje wpis
    <path>/etc/ethers</path>. Jeżeli adres MAC jest nieprawidło i/lub serwer
    netboot nie może rozwiązać nazwy klienta, nie może udzielić niezbędnej dla
    klienta informacji.
  </li>
  <li>
    Należy sprawdzić, czy koncentrator/przełącznik ethernetowy pomiędzy serwerem
    oraz klientem są połączone i umożliwiają swobodny przepływ ruchu RARP. Jeśli
    klient nie może wysłać wiadomości do serwera, lub vice-versa, to komputer
    nie będzie w stanie kontynuować.
  </li>
  <li>
    Nikt nie odpowiada na zapytania RARPD ponieważ nikt nie słucha. Należy
    upewnić się, że usługa rarpd jest uruchomiona.
  </li>
  <li>
    Klient uważa, że NIC jest połączony z koncentratorem/przełącznikiem do
    którego jest przypięty. Należy upewnić się, że dioda połączenia na
    przełączniku lub koncentratorze jest zapalona. Jeśli tak, to powinno się
    sprawdzić jak ustawiona jest wartość tpe-link-test? w OBP przy pomocy
    polecenia <c>printenv tpe-link-test?</c>. Wynikiem powinno być coś podobnego
    do <e>tpe-link-test? false true</e>. Pierwsza kolumna podaje nazwę
    parametru, druga aktualną jego wartość, a trzecia jego wartość domyślną. W
    tym przykładzie widać, że wartością jest false, więc klient nie sprawdza,
    czy łącze jest dostępne przed wysłaniem zapytania RARP. Dość często jest to
    przyczyną problemu.
  </li>
</ol>

<p>
Aby zmienić wartość parametru tpe-link-test? w OBP należy wydać następujące
polecenie:
</p>

<pre caption="Zmiana wartości tpe-link-test">
ok <i>setenv tpe-link-test? true</i>
tpe-link-test? =      true
</pre>

<p>
Teraz widać, że wartość tpe-link-test? jest już true. Należy ponownie uruchomić
klienta.
</p>

</body>
</section>
</chapter>
</guide>
