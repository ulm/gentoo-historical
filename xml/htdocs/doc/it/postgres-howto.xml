<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/postgres-howto.xml,v 1.6 2012/11/13 11:17:59 ago Exp $ -->

<guide lang="it">
<title>Guida rapida a PostgreSQL</title>

<author title="Autore">
  <mail link="titanofold@gentoo.org">Aaron W. Swenson</mail>
</author>
<author title="Redazione">
  <mail link="pgsql-bugs@gentoo.org">Mikkel A. Clausen</mail>
</author>
<author title="Traduzione">
  <mail link="lucamarturana@gmail.com">Luca Marturana</mail>
</author>
<author title="Traduzione">
  <mail link="netcelli.tux@gmail.com">Davide Simoncelli</mail>
</author>
<author title="Traduzione">
  <mail link="fturco@fastmail.fm">Francesco Turco</mail>
</author>

<abstract>
Questa è una guida rapida all'installazione e alla configurazione di
PostgreSQL. Le informazioni riportate qui non sostituiscono quelle che si
trovano nella documentazione ufficiale, ma sono ad esse complementari.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>11</version>
<date>2012-06-13</date>

<chapter>
<title>Introduzione</title>
<section>
<title>Un po' su PostgreSQL</title>
<body>

<p>
<uri link="http://www.postgresql.org">PostgreSQL</uri> è un sistema libero ed
open source per la gestione di basi di dati relazionali. Supporta funzionalità
quali le transaction, gli schema e le foreign key, ed è spesso considerato
più strettamente aderente agli standard SQL e più sicuro, di default, di ogni
altro database, commerciale o meno.
</p>
<p>
Visitare la pagina <uri link="http://www.postgresql.org/about/">About</uri> su
postgresql.org per ulteriori informazioni.
</p>

</body>
</section>

<section>
<title>Di cosa questo articolo si occupa</title>
<body>
<p>
Questo articolo contiene dettagli, specifici per Gentoo, sull'installazione del
database PostgreSQL.
</p>

<p>
Gli ebuild utilizzati in questo articolo sono <uri
link="http://packages.gentoo.org/package/dev-db/postgresql-docs">dev-db/postgresql-docs</uri>,
<uri
link="http://packages.gentoo.org/package/dev-db/postgresql-base">dev-db/postgresql-base</uri>
e <uri
link="http://packages.gentoo.org/package/dev-db/postgresql-server">dev-db/postgresql-server</uri>.
</p>

<p>
In questo articolo si assume che il lettore voglia installare l'ultima versione
stabile di PostgreSQL che, al momento di scrivere, è la 9.0.3. Si prega di
modificare i comandi che verranno proposti in modo da utilizzare la versione di
proprio gradimento.
</p>

<impo>
Il supporto per le versioni del ramo 8.2 verrà interrotto nel dicembre 2011. Si
consiglia di pianificare per tempo la migrazione a versioni successive.
</impo>

</body>
</section>

<section>
<title>A proposito degli ebuild</title>
<body>

<p>
Gli ebuild per PostgreSQL presenti in Portage ricorrono alla funzionalità di
slotting sulla base della versione primaria. Questo consente di avere
simultaneamente due instanze di PostgreSQL appartenenti a versioni primarie
diverse, ad esempio la 8.4 e la 9.0. Ciò è utile nel caso in cui si debbano
spostare dati da un vecchio database ad uno nuovo, oppure qualora occorra
installare sulla stessa macchina un database sperimentale ed uno in produzione.
Inoltre questa funzionalità impedisce che un database venga sovrascritto da un
aggiornamento incompatibile, assieme alle librerie e agli eseguibili
corrispondenti. Questo infatti richiederebbe una migrazione, che ad ogni modo
è descritta in questa guida.
</p>

<p>
Bug e problemi di sicurezza possono invece essere corretti effettuando semplici
aggiornamenti che si contraddistinguono per una variazione della sola versione
secondaria, e possono essere applicati senza timore di corrompere un database o
l'installazione stessa di PostgreSQL; la versione 9.0.2 può essere facilmente
aggiornata alla 9.0.3 in quanto la loro compatibilità è garantita, e ciò
richiede soltanto il riavvio del processo; non sono necessarie la migrazione, la
riconfigurazione o l'inizializzazione.
</p>

<p>
Leggere la pagina sulle
<uri link="http://www.postgresql.org/support/versioning">regole</uri> in merito
alle versioni di PostgreSQL per maggiori informazioni.
</p>

</body>
</section>

<section>
<title>Di cosa questo articolo non si occupa</title>
<body>

<p>
Molti aspetti non verranno trattati. Basti pensare che la <uri
link="http://www.postgresql.org/docs/">documentazione ufficiale</uri> consiste
in approssimativamente 2000 pagine, e questa invece è una guida rapida. Ci si
occuperà solo di problematiche specifiche derivanti dall'impiego di PostgreSQL
in ambiente Gentoo, oltre a qualche raccomandazione per una configurazione di
base.
</p>

</body>
</section>
</chapter>

<chapter id="installation">
<title>Installazione</title>
<section>
<title>Gli ebuild obsoleti</title>
<body>

<p>
Qualora sul proprio sistema sia ancora presente uno qualunque dei seguenti
ebuild è necessario subito effettuare una migrazione: dev-db/postgresql-libs,
dev-db/postgresql-client, dev-db/libpq e dev-db/postgresql.
</p>
<p>
Questo articolo si occupa della <uri link="#oldmigration">migrazione</uri> dai
vecchi ebuild a quelli nuovi.
</p>

</body>
</section>
<section>
<title>USE flag</title>
<body>

<table>
  <tr>
    <th>Flag USE</th>
    <th>Significato</th>
  </tr>
  <tr>
    <ti>doc</ti>
    <ti>
      Con questa opzione la <uri link="http://www.postgresql.org/docs/">
      documentazione in linea</uri> verrà installata sul sistema.
    </ti>
  </tr>
  <tr>
    <ti>kerberos</ti>
    <ti>Abilita il supporto all'impiego di Kerberos per l'autenticazione.</ti>
  </tr>
  <tr>
    <ti>ldap</ti>
    <ti>
      Abilita il supporto per l'utilizzo dell'autenticazione LDAP e per
      il controllo del parametro di connessione.
    </ti>
  </tr>
  <tr>
    <ti>nls</ti>
    <ti>
      Abilita la visualizzazione dei messaggi in una lingua diversa
      dall'inglese. Questa flag viene usata insieme alla variabile LINGUAS di
      Portage.
    </ti>
  </tr>
  <tr>
    <ti>pam</ti>
    <ti>
      Abilita il supporto ai Pluggable Authentication Modules per
      l'autenticazione.
    </ti>
  </tr>
  <tr>
    <ti>perl</ti>
    <ti>
      Abilita il supporto all'utilizzo di Perl per scrivere funzioni e attivare
      procedure.
    </ti>
  </tr>
  <tr>
    <ti>pg-intdatetime (deprecata)</ti>
    <ti>
      Usa il nuovo metodo che si basa su valori interi a 64-bit per la
      visualizzazione dei timestamp al posto del vecchio metodo che si basa su
      valori a virgola mobile. A meno di non disporre di un'installazione
      precedente che utilizza il vecchio metodo, lasciare questa USE flag
      abilitata (vedere le note).
    </ti>
  </tr>
  <tr>
    <ti>pg_legacytimestamp</ti>
    <ti>
      Usa il vecchio metodo che si basa su valori a virgola mobile al posto del
      nuovo metodo che si basa su valori interi a 64-bit. A meno di non disporre
      di un'installazione precedente che utilizza il vecchio metodo, lasciare
      questa USE flag disabilitata (vedere le note).
    </ti>
  </tr>
  <tr>
    <ti>python</ti>
    <ti>
        Abilita il supporto all'utilizzo di Python per scrivere funzioni e
        attivare procedure.
    </ti>
  </tr>
  <tr>
    <ti>readline</ti>
    <ti>
      È vivamente consigliato di abilitare questa flag. Se disabilitata verranno
      infatti rimosse le funzionalità di history e di editing della linea di
      comando da psql.
    </ti>
  </tr>
  <tr>
    <ti>selinux</ti>
    <ti>
      Installa le policy SELinux. Questa flag può essere abilitata soltanto usando
      il profilo SELinux.
    </ti>
  </tr>
  <tr>
    <ti>ssl</ti>
    <ti>Abilita il supporto alle connessioni SSL.</ti>
  </tr>
  <tr>
    <ti>tcl</ti>
    <ti>
        Abilita il supporto all'utilizzo di Tcl per scrivere funzioni e attivare
        procedure.
    </ti>
  </tr>
  <tr>
    <ti>threads</ti>
    <ti>
      Rende le librerie del client thread-safe. Il resto del sistema deve
      anch'esso essere thread-safe.
    </ti>
  </tr>
  <tr>
    <ti>uuid</ti>
    <ti>
      Include il supporto alla generazione di identificatori casuali unici a
      128 bit. Ciò è utile quando occorre unire assieme dei database, in modo
      tale che la probabilità di avere collisioni risulti estremamente bassa.
    </ti>
  </tr>
  <tr>
    <ti>xml</ti>
    <ti>Abilita il supporto a SQL/XML.</ti>
  </tr>
  <tr>
    <ti>zlib</ti>
    <ti>Abilita il supporto ad archivi compressi in pg_dump e pg_restore.</ti>
  </tr>
</table>

<note>
Se si altera la flag "pg-intdatetime" o la flag "pg_legacytimestamp" è poi
necessario effettuare il dump ed il restore di ogni database che utilizza i
timestamp. I due metodi sono tra loro incompatibili.
</note>

</body>
</section>
<section>
<title>Avviare l'installazione</title>
<body>

<pre caption="Installare il server PostgreSQL">
# <i>emerge -av dev-db/postgresql-server</i>

[ebuild N ] dev-db/postgresql-docs-9.0.3 0 kB
[ebuild N ]dev-db/postgresql-base-9.0.3 USE="doc nls pam readline ssl zlib
-kerberos -ldap -pg_legacytimestamp -threads" LINGUAS="-af -cs -de -es -fa -fr
-hr -hu -it -ko -nb -pl -pt_BR -ro -ru -sk -sl -sv -tr -zh_CN -zh_TW" 0 kB
[ebuild N ] dev-db/postgresql-server-9.0.3 USE="doc nls perl python
-pg_legacytimestamp (-selinux) -tcl -uuid -xml" LINGUAS="-af -cs -de -es -fa
-fr -hr -hu -it -ko -nb -pl -pt_BR -ro -ru -sk -sl -sv -tr -zh_CN -zh_TW" 0 kB
</pre>

<p>
È possibile che uno o più tra i paccheti riportati sopra risulti essere bloccato
da uno o più tra i seguenti pacchetti: dev-db/postgresql-libs,
dev-db/postgresql-client, dev-db/libpq o dev-db/postgresql. Questi pacchetti
<b>non sono più supportati</b> e sono obsoleti. Si prega di consultare la
sezione sulla <uri link="#oldmigration">migrazione</uri> per sapere come gestire
questa situazione.
</p>

</body>
</section>
<section>
<title>Preparazione all'inizializzazione del cluster di database</title>
<body>

<p>
Una volta terminata l'installazione dei pacchetti si può procedere alla modifica
del file <path>/etc/conf.d/postgresql-9.0</path>. Ci sono tre righe che <b>non
possono</b> essere cambiate in seguito senza dover prima procedere
all'eliminazione della directory che contiene il cluster di database e alla
reinizializzazione.
</p>

<p>
<e>PGDATA</e> definisce la posizione dei file di configurazione. <e>DATA_DIR</e>
definisce invece il luogo in cui creare il cluster di database e i file ad esso
correlati. <e>PG_INITDB_OPTS</e>, infine, può contenere <uri
link="http://www.postgresql.org/docs/current/static/app-initdb.html">opzioni
extra</uri> a discrezione dell'utente. Tali opzioni extra, tuttavia, <b>non</b>
sono in alcun modo obbligatorie in quanto le opzioni predefinite sono del tutto
ragionevoli.
</p>

<p>
Nel seguente esempio <e>PGDATA</e> dichiara che i file di configurazione sono
posti in <path>/etc/postgresql-9.0/</path>. <e>DATA_DIR</e> dichiara invece che
il cluster di database è posto in <path>/var/lib/postgresql/9.0/data/</path> (la
directory predefinita). Qualora le scelte del lettore differissero da quelle
predefinite si tenga conto che è comunque un'<b>ottima idea</b> mantenere la
versione primaria nel percorso. <e>PG_INITDB_OPTS</e> dichiara infine che il
locale di default è <e>en_US.UTF-8</e>, e che cioè verranno usati l'ordinamento
e la formattazione dell'inglese americano, e la codifica dei caratteri UTF-8.
</p>

<pre caption="Esempio del contenuto di /etc/conf.d/postgresql-9.0">
<comment># Percorso dei file di configurazione.</comment>
PGDATA="/etc/postgresql-9.0/"
<comment># Percorso della directory data.</comment>
DATA_DIR="/var/lib/postgresql/9.0/data"
<comment># Opzioni extra da passare a initdb.
# Consultare "man initdb" per conoscere le opzioni disponibili.</comment>
PG_INITDB_OPTS="--locale=en_US.UTF-8"
</pre>

<note>
Le impostazioni precedenti determinano solamente il locale e la codifica dei
caratteri predefiniti. È possibile specificare locale e codifiche dei caratteri
diversi in fase di creazione del database (<c>CREATE DATABASE</c>) all'interno
dello stesso cluster di database.
</note>

<p>
Ci sono sei opzioni che, se usate, hanno la precedenza su <e>--locale=</e>. La
seguente tabella elenca le sei opzioni per le quali è necessario usare lo schema
<c>--opzione=lo_LO.ENCODING</c>.
</p>

<table>
  <tr>
    <th>Opzione</th>
    <th>Effetti</th>
  </tr>
  <tr>
    <ti>lc-collate</ti>
    <ti>Ordinamento delle stringhe</ti>
  </tr>
  <tr>
    <ti>lc-ctype</ti>
    <ti>
      Classificazione dei caratteri (Cos'è una lettera? Qual è l'equivalente
      maiuscolo di una lettera?
    </ti>
  </tr>
  <tr>
    <ti>lc-messages</ti>
    <ti>Lingua dei messaggi</ti>
  </tr>
  <tr>
    <ti>lc-monetary</ti>
    <ti>Formattazione delle somme di denaro</ti>
  </tr>
  <tr>
    <ti>lc-numeric</ti>
    <ti>Formattazione dei numeri</ti>
  </tr>
  <tr>
    <ti>lc-time</ti>
    <ti>Formattazione delle date e degli orari</ti>
  </tr>
</table>

<p>
Se ad esempio l'utente vuole che l'inglese sia la lingua predefinita ma che i
messaggi vengano visualizzati in svedese occorre definire <e>PG_INITDB_OPTS</e>
nel seguente modo:
</p>

<pre caption="Esempio">
PG_INITDB_OPTS="--locale=en_US.UTF-8 --lc-messages=sv_SE.UTF-8"
</pre>

<p>
Un elenco completo delle lingue e delle codifiche dei caratteri supportate dal
server è disponibile nella documentazione, ma anche il sistema deve supportarle.
Il lettore può confrontare l'output del comando <c>locale -a</c> con la pagina
nella documentazione sulle <uri
link="http://www.postgresql.org/docs/current/static/multibyte.html">codifiche
</uri>.
</p>

<p>
È possibile cambiare il locale e la codifica dei caratteri al momento della <uri
link="http://www.postgresql.org/docs/current/static/sql-createdatabase.html">
creazione</uri> di un database, mentre per farlo successivamente è necessario
effettuare il drop del database e iniziare da capo.
</p>

<pre caption="Completare l'installazione">
# <i>emerge --config dev-db/postgresql-server:9.0</i>
</pre>

<p>
Questo comando crea il cluster di database e memorizza tutti i file
corrispondenti in <e>PGDATA</e> e <e>DATA_DIR</e>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configurazione</title>
<section>
<title>Posizione dei file di configurazione</title>
<body>

<p>
Questa volta l'attenzione sarà focalizzata sui file che si trovano nella
directory definita da <e>PGDATA</e>, <path>/etc/postgresql-9.0</path>, ed in
particolare sui file <path>postgresql.conf</path> e <path>pg_hba.conf</path>.
</p>

</body>
</section>

<section>
<title>postgresql.conf</title>
<body>

<p>
Questo è il file di configurazione principale. Di immediato interesse è la riga
con <e>listen_addresses</e>. Questa variabile definisce infatti gli indirizzi ai
quali PostgreSQL effettua il binding. Normalmente esso è effettuato solo con
localhost e con i socket Unix. Cambiare <e>listen_addresses</e> non è
sufficiente se si vogliono abilitare le connessioni remote. Questo argomento
verrà affrontato nella prossima sezione. La <uri
link="http://www.postgresql.org/docs/current/static/runtime-config.html">
documentazione ufficiale</uri> è abbastanza semplice da comprendere ed è
piuttosto esauriente. Si consiglia di leggere anche quella in aggiunta a ciò che
è scritto qui in quanto alcune cose possono differire.
</p>

<p>
Di secondaria importanza è il percorso per i file di log. Normalmente tutto
viene memorizzato in <path>postmaster.log</path> nella directory
<e>DATA_DIR</e>. Esiste un'intera sottosezione in <path>postgresql.conf</path>
con numerose opzioni per come, dove e di cosa effettuare il log. Questa
sottosezione è indicata con: ERROR REPORTING AND LOGGING.
</p>

<p>
A parte <e>listen_addresses</e> e le opzioni per il logging, le altre
impostazioni predefinite sono piuttosto ragionevoli, e consentono al lettore di
procedere oltre.
</p>

</body>
</section>

<section>
<title>pg_hba.conf</title>
<body>

<p>
Il file di configurazione <path>pg_hba.conf</path> serve ad indicare coloro i
quali possiedono l'autorizzazione a connettersi al server e quale metodo di
autenticazione deve essere usato per stabilire tale connessione. Ancora una
volta la documentazione è piuttosto esauriente nel spiegare il significato di
ciascuna opzione, ma alcune cose sono trattate qui al fine di chiarire alcuni
punti.
</p>

<pre caption="pg_hba.conf predefinito">
<comment># TYPE DATABASE USER CIDR-ADDRESS METHOD
# "local" è solo per connessioni tramite gli Unix domain socket</comment>
local all all trust
<comment># connessioni IPv4 locali:</comment>
host all all 127.0.0.1/32 trust
<comment># connessioni IPv6 locali:</comment>
host all all ::1/128 trust
</pre>

<p>
Come si accennava in precedenza, il server è abbastanza sicuro anche nelle sue
impostazioni predefinite. L'unico database di cui si effettua il log è
<e>postgres</e>. Inoltre l'unico modo per stabilire una connessione al database
è tramite il socket Unix <path>/var/run/postgresql/.s.PGSQL.5432</path>, che
appartiene all'utente e al gruppo di sistema <e>postgres</e>, oppure tramite
localhost. Ad ogni modo ogni utente del sistema può stabilire una connessione
con il database tramite localhost, anche come utente amministratore del database
<e>postgres</e>.
</p>

<p>
Tuttavia per stabilire una connessione tramite il socket Unix gli utenti,
compresi quelli di altri servizi come <e>apache</e>, devono appartenere al
gruppo di sistema <e>postgres</e>. Il lettore può usare il comando
<c>gpasswd -a <e>utente</e> postgres</c> per aggiungere <e>utente</e> al gruppo
<e>postgres</e>. Agli utenti che non appartengono al gruppo <e>postgres</e>
viene negato l'accesso con il messaggio "Permission denied". 
</p>

<warn>
Si prega di non disabilitare mai completamente il socket Unix in quanto gli
script init richiedono di poter accedere ad esso per il loro corretto
funzionamento. La modalità invece può essere cambiata liberamente.
</warn>

<p>
Il metodo <e>trust</e> è quello che permette ad ogni utente del sistema di
effettuare l'accesso come un qualunque utente del database senza fornire la
password. In altre parole questo metodo specifica che occorre consentire ogni
connessione verso un determinato database ad ogni utente del database stesso
(ma non da ogni utente di sistema) senza fornire una password, a patto comunque
che la provenienza e il tipo della connessione siano quelli previsti. Ciò non è
così pericoloso come può apparire in prima battuta, ma costituisce comunque un
serio rischio per la sicurezza nelle circostanze più comuni.
</p>

<p>
I due metodi che vengono generalmente utilizzati sono <e>password</e> e
<e>md5</e>. Il metodo <e>password</e> specifica che una password è necessaria
per stabilire una connessione e che essa viene trasmessa in chiaro. Questo
metodo è appropriato quando tali informazioni non lasciano la macchina da cui
provengono, ad esempio nel caso in cui ci si connette tramite il socket unix o
localhost. Il metodo <e>md5</e> è simile al precedente, ma protegge la password
adoperando un hash md5. È questo il metodo preferito qualora la password debba
attraversare una rete.
</p>

<p>
A questo punto è possibile concentrarsi sulle ultime due righe (quattro se si
includono i commenti) del file <path>pg_hba.conf</path>. PostgreSQL supporta
nativamente il protocollo IPv6 indipendentemente dalle esigenze dell'utente.
Inoltre agli indirizzi IPv4 sono automaticamente associati indirizzi IPv6. Ad
esempio a 127.0.0.1 viene associato ::FFFF:127.0.0.1 e l'indirizzo "puro"
::FFFF:7F00:0001.
</p>

<p>
Sembra comunque esserci un'incomprensione quanto alle modalità con le quali ai
nomi di host vengono associati gli indirizzi IP. Il file di riferimento è <path>
/etc/hosts</path>.
</p>

<pre caption="Esempio di /etc/hosts">
<comment># Alias IPv4 e IPv6 per localhost</comment>
127.0.0.1 localhost
::1 localhost
</pre>

<p>
Dall'esempio precedente è possibile notare che ad entrambi gli indirizzi IPv4 e
IPv6 viene associato localhost. Quando consulta questo file <c>psql</c> prende
la prima corrispondenza e usa quella come indirizzo, in questo caso 127.0.0.1.
Quando analizza il file PostgreSQL usa anche il corrispondende indirizzo IPv6,
ovvero ::ffff:127.0.0.1. Se invece l'indirizzo IPv6 appare prima, allora
<c>psql</c> usa soltanto ::1, e ::1 non equivale a ::ffff:127.0.0.1. In questo
caso infatti se a ::1 non corrisponde un valido metodo di accesso, <c>psql</c>
non sarà in grado di stabilire una connessione. Inoltre il kernel deve
supportare il protocollo IPv6.
</p>

<p>
È quindi meglio specificare soltanto gli indirizzi IP per <c>psql</c> in
<path>pg_hba.conf</path> piuttosto che dipendere da un corretto ordinamento
interno al file <path>/etc/hosts</path>, dal momento che ciò elimina ogni
possibile dubbio in merito a quali indirizzi IP siano ammessi o a quale server
ci si connette.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Avviare il server</title>
<section>
<title>Fare un tentativo</title>
<body>

<p>
Occorre ora avviare PostgreSQL e impostare la password per l'utente
<e>postgres</e>. I seguenti comandi vanno impartiti dall'utente root:
</p>

<pre caption="Avviare il server">
<comment>(Impostare "password" invece che "trust" per le connessioni a
localhost.)</comment>
# <i>nano -w /etc/postgresql-9.0/pg_hba.conf</i>
# <i>/etc/init.d/postgresql-9.0 start</i>
postgresql-9.0 | * Starting PostgreSQL ... [ ok ]

<comment>(Stabilire una connessione con il server e impostare la password.)
</comment>
# <i>psql -U postgres</i>
psql (9.0.3)
Type "help" for help.
postgres=# <i>\password</i>
Enter new password:
Enter it again:
postgres=# <i>\q</i>

<comment>(Impostare "password" invece che "trust" per la connessione locale.)
</comment>
# <i>nano -w /etc/postgresql-9.0/pg_hba.conf</i>
# <i>/etc/init.d/postgresql-9.0 reload</i>
postgresql-9.0 | * Reloading PostgreSQL configuration ... [ ok ]
# <i>rc-update add postgresql-9.0 default</i>
* service postgresql-9.0 added to runlevel default
</pre>

<p>
A questo punto si può proseguire con il <uri
link="http://www.postgresql.org/docs/current/static/tutorial.html">tutorial
ufficiale di PostgreSQL</uri>, che guida il lettore nella creazione dei role,
dei database e degli schema.
</p>

</body>
</section>
</chapter>

<chapter id="migrating">
<title>Migrazione</title>
<section>
<title>Casi in cui occorre effettuare una migrazione</title>
<body>

<p>
Ci sono solo due casi in cui occorre effettuare una migrazione: quando si passa
da una versione principale ad un'altra, ad esempio dalla versione 8.4.7 di
PostgreSQL alla versione 9.0.3 (ma non dalla 9.0.2 alla 9.0.3); o quando si
passa dal vecchio formato a virgola mobile per i timestamp a quello nuovo basato
su numeri interi a 64-bit.
</p>

<note>
Occorre effettuare la migrazione del database anche quando si smette di usare i
vecchi ebuild (dev-db/libpq, dev-db/postgresql, dev-db/postgresql-libs e
dev-db/postgresql-client) per passare a quelli nuovi (dev-db/postgresql-docs,
dev-db/postgresql-base e dev-db/postgresql-server).
</note>

</body>
</section>

<section id="post90">
<title>Migrazione per versioni a partire dalla 9.0</title>
<body>

<p>
<e>pg_upgrade</e> è un nuovo strumento, disponibile a partire dalla versione
9.0, che semplifica molto il processo di migrazione.
</p>

<p>
Ci sono però due fattori che bisogna considerare quando si usa pg_upgrade. Il
primo è che pg_upgrade non supporta il caso in cui i file di configurazione
siano in una directory differente da quella in cui si trovano i dati. Questo
problema può essere risolto usando i collegamenti simbolici. Il secondo è che
pg_upgrade può essere usato solo per effettuare la migrazione di database creati
con una versione di PostgreSQL pari o superiore alla 8.3. Se si dispone di
database più vecchi è necessario leggere le <uri link="#pre90">istruzioni
specifiche per versioni precedenti alla 9.0</uri>.
</p>

<pre caption="Effettuare la migrazione con pg_upgrade">
<comment>(Fermare i server dai quali e verso i quali si effettua la migrazione.)
</comment>
# <i>/etc/init.d/postgresql-8.4 stop</i>
# <i>/etc/init.d/postgresql-9.0 stop</i>
# <i>ln -s /etc/postgresql-8.4/*.conf /var/lib/postgresql/8.4/data/</i>
# <i>ln -s /etc/postgresql-9.0/*.conf /var/lib/postgresql/9.0/data/</i>
<comment>(Controllare le versioni disponibili, e poi selezionare le proprie.)
</comment>
# <i>eselect postgresql list</i>
# <i>eselect postgresql set 9.0</i>

<comment>(Impostare su "trust" il metodo dell'utente "postgres" sulle
connessioni locali per ogni database.)</comment>
# <i>nano -w /etc/postgresql-8.4/pg_hba.conf</i>
# <i>nano -w /etc/postgresql-9.0/pg_hba.conf</i>

<comment>(Potrebbe essere necessario cambiare i permessi della directory
"/var/lib/postgresql/" prima di procedere con il passo successivo.)</comment>
# <i>su - postgres</i>
$ <i>pg_upgrade -u postgres \
-d /var/lib/postgresql/8.4/data -D /var/lib/postgresql/9.0/data \
-b /usr/lib/postgresql-8.4/bin -B /usr/lib/postgresql-9.0/bin</i>
<comment>(Qualora ce ne fossero, svolgere tutte le azioni che pg_upgrade dice
all'utente di effettuare.)</comment>
$ <i>logout</i>

<comment>(Rimuovere i collegamenti simbolici che sono stati creati in
precedenza.)</comment>
# <i>rm /var/lib/postgresql/8.4/data/*.conf</i>
# <i>rm /var/lib/postgresql/9.0/data/*.conf</i>
# <i>/etc/init.d/postgresql-9.0 start</i>
</pre>

</body>
</section>
<section id="pre90">
<title>Migrazione per versioni precedenti alla 9.0 (con i nuovi ebuild)</title>
<body>

<p>
I nuovi ebuild dispongono di funzionalità di slotting più avanzate rispetto a
quelle degli ebuild precedenti, e pertanto il downtime dovrebbe essere
abbastanza ridotto (minuti anzichè ore).
</p>

<p>
Negli esempi successivi si assume che l'utente stia usando valori predefiniti
per i percorsi e le porte, e che stia migrando dalla versione 8.3 alla 8.4. Si
prega di modificare opportunamente le istruzioni nel caso in cui ciò non sia
vero.
</p>

<p>
Qualora non lo si abbia ancora fatto, prima di effettuare la migrazione è
necessario seguire le <uri link="#installation">instruzioni per l'installazione
</uri>. Il processo di compilazione potrebbe ridurre le prestazioni del server,
ma esso continuerebbe comunque a funzionare.
</p>

<p>
È necessario modificare un paio di file prima di iniziare con il processo di
migrazione. Impostare <e>PGPORT</e> in <path>/etc/conf.d/postgresql-8.4</path>
al valore 6543. In generale va bene ogni valore diverso da quello della porta
alla quale prestava ascolto la vecchia versione di PostgreSQL.
</p>

<p>
Modificare quindi il file <path>/etc/postgresql-8.3/pg_hba.conf</path> in modo
tale che solo l'amministratore del database (<e>postgres</e>) possa accedere al
cluster tramite il socket Unix.
</p>

<pre caption="Effettuare la migrazione con i nuovi ebuild">
# <i>cp -p /etc/postgresql-8.3/pg_hba.conf /etc/postgresql-8.4/</i>
<comment>(Il seguente comando dovrebbe essere sicuro. Leggere la documentazione
per esserne certi.)</comment>
# <i> cp -p /etc/postgresql-8.3/postgresql.conf /etc/postgresql-8.4/</i>
<comment>(Non occorre dimenticarsi di copiare ogni altro file di configurazione
di cui si ha bisogno.)
</comment>
# <i>/etc/init.d/postgresql-8.3 reload</i>
# <i>/etc/init.d/postgresql-8.4 start</i>

<comment>(Trasferire i dati dal vecchio cluster a quello nuovo.)</comment>
# <i>pg_dumpall -U postgres -p 5432 | psql -U postgres -d postgres -p 6543</i>
# <i>/etc/init.d/postgresql-8.3 stop</i>
# <i>/etc/init.d/postgresql-8.4 stop</i>

<comment>(Impostare nuovamente PGPORT al valore 5432.)</comment>
# <i>nano -w /etc/conf.d/postgresql-8.4</i>

<comment>(Permettere agli utenti di accedere.)</comment>
# <i>nano -w /etc/postgresql-8.4/pg_hba.conf</i>
# <i>/etc/init.d/postgresql-8.4 start</i>
# <i>rc-update del postgresql-8.3 &amp;&amp; rc-update add postgresql-8.4 default</i>
</pre>

<p>
A questo punto si spera che tutto sia andato per il meglio è che il nuovo server
contenga gli stessi dati di quello vecchio.
</p>

</body>
</section>
<section id="oldmigration">
<title>Migrazione per versioni precedenti alla 9.0 (con i vecchi ebuild)</title>
<body>

<p>
I vecchi ebuild <b>non</b> possono essere installati contemporaneamente a quelli
nuovi. Per questo motivo sarà necessario interrompere l'attività del proprio
server per alcune ore. Si consiglia di programmare in anticipo questa operazione
ed effettuarla ad esempio nel fine settimana.
</p>

<p>
Prima di iniziare con la migrazione occorre negare l'accesso al server, in modo
tale che non venga fatto alcun cambiamento. È possibile anche che il lettore
voglia effettuare il backup dei file <path>postgresql.conf</path> e
<path>pg_hba.conf</path>, o di ogni altro file che si reputa importante.
</p>

<pre caption="Procedimento per effettuare la migrazione dai vecchi ebuild">
# <i>pg_dumpall -U postgres > backup_file</i>
# <i>/etc/init.d/postgresql stop</i>
# <i>emerge -C dev-db/postgresql dev-db/libpq dev-db/postgresql-client \
dev-db/postgresql-client</i>
<comment>(Seguire il procedimento indicato in questo articolo per installare e
configurare il server.</comment>
# <i>/etc/init.d/postgresql-8.4 start</i>
# <i>psql -f backup_file postgres</i>
</pre>

<p>
È possibile che alcuni pacchetti risultino ora corrotti perchè dipendono da
quelli che sono stati rimossi, ma dopo aver installato dev-db/postgresql-base
e/o dev-db/postgresql-server è possibile eseguire <c>revdep-rebuild</c> in modo
tale da reinstallare ogni pacchetto corrotto.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Strumenti</title>
<section>
<title>pgAdmin III</title>
<body>

<p>
<uri link="http://www.pgadmin.org/">pgAdmin III</uri> è uno strumento grafico
per la gestione di PostgreSQL.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Risoluzione dei problemi</title>
<section>
<title>Al server mancano le funzioni strumentali</title>
<body>

<p>
Questo è un problema facile da risolvere, e la soluzione dipende dalla versione
in uso. È necessario importare le funzioni strumentali dal file
<path>adminpack.sql</path>. Eseguire il comando corrispondente alla propria
versione:
</p>

<pre
caption="Aggiungere le funzioni strumentali per versioni precedenti alla 9.1">
# <i>psql -U postgres --file /usr/share/postgresql-9.0/contrib/adminpack.sql</i>
</pre>

<pre
caption="Aggiungere le funzioni strumentali per versioni pari o successive alla 9.1">
# <i>psql -U postgres -c "CREATE EXTENSION adminpack;"</i>
</pre>

</body>
</section>
</chapter>
</guide>
