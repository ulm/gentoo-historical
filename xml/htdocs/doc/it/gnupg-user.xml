<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link = "/doc/en/gnupg-user.xml">
	<title>
		GnuPG Gentoo user guide
	</title>
	<author title="Author">
		<mail link="gustavo@felisberto.net">
			Gustavo Felisberto
		</mail>
	</author>
	<author title="Editor">
		<mail link="zhen@gentoo.org">
			John P. Davis
		</mail>
	</author>
	<author title="Traduttore">
		<mail link="cirix@ngi.it">
			Andrea Cerisara
		</mail>
	</author>
	
	<abstract>
		Questa breve guida ti insegnerà l'essenziale sull'utilizzo di GnuPG, un tool per gestire comunicazioni in sicurezza.
	</abstract>

	<version>
		1.0.1
	</version>

	<date>
		19 Maggio 2003
	</date>

<chapter>
	<title>Introduzione</title>

	<section>
		<title>Cosa ti insegnerà questa guida</title>

		<body>
			<p>
				Questa guida parte dal presupposto che tu abbia familiarità con i concetti di crittografia a chiave pubblica e firma digitale. In caso contrario dai uno sguardo al capitolo 2 del <uri link="http://www.gnupg.org/(en)/documentation/guides.html">GnuPG handbook</uri>.
			</p>

			<p>
				Questa guida ti insegnerà ad installare GnuPG, come creare la tua coppia di chiavi, come aggiungere delle chiavi al tuo portachiavi, come mandare la tua chiave pubblica ad un keyserver e come (firmare/criptare)/(verificare/decriptare) i messaggi che mandi/ricevi. Impererai anche a criptare i files presenti sul tuo computer in modo che altri utenti non possano leggerli.
			</p>

		</body>
	</section>
	<section>
		<title>Installazione del software necessario</title>

		<body>
			<p>
				Come prima cosa hai bisogno di lanciare <c>emerge gnupg</c>; se desideri avere un client e-mail che supporti gnupg puoi usare pine (<c>emerge pinepgp</c>), mutt (<c>emerge mutt</c>), Mozilla/Netscape Mail, evolution (evolution è un clone GNOME di Microsoft Outlook) e KMail (KMail fa parte del pacchetto kdenetwork di KDE).
			</p>

			<p>
				Kgpg potrebbe interessarti se usi KDE. Questo piccolo programma ti permette di generare la tua coppia di chiavi, importare le chiavi da un file ASCII, firmare le chiavi importate, esportarle, e fare altre cose interessanti (ha dei problemi nell'importare le chiavi dai keyservers, ma imparerai come farlo da linea di comando).
			</p>
		</body>
	</section>
</chapter>
<chapter>
	<title>Come generare la tua chiave e aggiungere chiavi al portachiavi pubblico</title>

	<section>
		<title>Creazione della chiave</title>

		<body>
			<p>Per creare la tua chiave, digita semplicemente <c>gpg --gen-key</c>. La prima volta che eseguirai questo comando, ti creerà alcune directory; rilancialo per generare la chiavi:

<pre caption = "processo di creazione delle chiavi " >
# <c>gpg --gen-key</c>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.

Please select what kind of key you want:
   (1) DSA and ElGamal (default)
   (2) DSA (sign only)
   (4) ElGamal (sign and encrypt)
   (5) RSA (sign only)
   Your selection? <c>1</c></pre>
			</p>
			<p>
				Qui puoi scegliere il tipo di chiave da usare. Molti utenti utilizzano l'opzione di default DSA e ElGamal. La scelta successiva riguarda la dimensione della chiave, ricorda che più grande è meglio è, ma non usare una dimensione maggiore di 2048 con le chiavi DSA/ElGamal. Generalmente 1024 è abbastanza per l'utilizzo con la posta elettronica.
			</p>

			<p>
				Dopo la dimensione è ora di scegliere la data scadenza. In questo caso è meglio sceglierla piccola, anche se molti utenti scelgono una chiave senza scadenza o che scade dopo 1 o 2 anni.

				<pre caption = "Scelta della dimensione della chiave" >
DSA keypair will have 1024 bits.
About to generate a new ELG-E keypair.
              minimum keysize is  768 bits
              default keysize is 1024 bits
    highest suggested keysize is 2048 bits
    What keysize do you want? (1024) <c>2048</c>
Requested keysize is 2048 bits
Please specify how long the key should be valid.
         0 = key does not expire
	 &lt;n&gt;= key expires in n days
	 &lt;n&gt;w = key expires in n weeks
	 &lt;n&gt;m = key expires in n months
	 &lt;n&gt;y = key expires in n years
	 Key is valid for? (0) <c>0</c>
Key does not expire at all
</pre>
			</p>
			<p>
				Ora è il momento di inserire alcune tue informazioni personali. Se hai intenzione di mandare la tua chiave pubblica ad altra gente dovresti inserire dei dati validi.
				<pre caption = "Inserimento informazioni dell'utente" >
					Is this correct (y/n)? <c>y</c>

You need a User-ID to identify your key; the software constructs the user id
from Real Name, Comment and Email Address in this form:
"Heinrich Heine (Der Dichter) &lt;heinrichh@duesseldorf.de&gt;"

Real name: <c>John Doe</c>
Email address: <c>john@nowhere.someplace.flick</c>
Comment: <c>The Real John Doe</c>
You selected this USER-ID:
"John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"

Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? <c>O</c>
You need a Passphrase to protect your secret key.

Enter passphrase:
</pre>
			</p>
			<p>
				Ora inserisci due volte la frase segreta per la chiave. E' buona norma scegliere una frase complessa. Se qualcuno dovesse entrare in possesso della tua chiave privata e craccare la tua password, sarebbe in grado di mandare messaggi firmati da "te" e tutti penserebbero che effettivamente saresti stato tu a mandarli.
			</p>

			<p>
				GnuPG quindi genererà la tua chiave. Muovendo il mouse o ascoltando mp3 velocizzerai il processo perchè esso genera numeri casuali.
			</p>

		</body>
	</section>
	<section>
		<title>Generazione del certificato di revoca</title>

		<body>
			<impo>Questa parte è molto importante e devi assolutamente farla ADESSO.</impo>

			<p>
				Dopo aver creato le tue chiavi dovresti creare anche un certificato di revoca. Questo ti permetterà di revocare la tua chiave nel caso in cui accedesse qualcosa di spiacevole (qualcuno ottiene la tua chiave/frase segreta).

			<pre caption = "Generazione del certificato di revoca" >
# <c>gpg --list-keys</c>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;
sub  2048g/96D6CDAD 2002-12-08

# <c>gpg --output revoke.asc --gen-revoke <e>75447B14</e></c>

sec  1024D/75447B14 2002-12-08   John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;

Create a revocation certificate for this key? <c>y</c>
Please select the reason for the revocation:
  0 = No reason specified
  1 = Key has been compromised
  2 = Key is superseded
  3 = Key is no longer used
  Q = Cancel
(Probably you want to select 1 here)
Your decision? <c>1</c>
Enter an optional description; end it with an empty line:
> <c>Someone cracked me and got my key and passphrase</c>
>
Reason for revocation: Key has been compromised
Someone cracked me and got my key and passphrase
Is this okay? <c>y</c>

You need a passphrase to unlock the secret key for
user: "John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"
1024-bit DSA key, ID 75447B14, created 2002-12-08

ASCII armored output forced.
Revocation certificate created.

Please move it to a medium which you can hide away; if Mallory gets
access to this certificate he can use it to make your key unusable.
It is smart to print this certificate and store it away, just in case
your media become unreadable.  But have some caution:  The print system of
your machine might store the data and make it available to others!
</pre>
			</p>
			<p>
				Il comando <c>gpg --list-keys</c> mostra la lista di chiavi del tuo portachiavi pubblico. Potresti usarlo per vedere l'ID della tua chiave per poter creare il certificato di revoca. Ora è buona norma copiare tutta la directory .gnupg e il certificato di revoca (revoke.asc) su un supporto sicuro (due floppy o un cd che tieni in un posto sicuro). Ricorda che il file revoke.asc può essere usato per revocare le tue chiavi e renderle inutilizzabili in futuro.
			</p>

			<note>Se hai molte caselle mail che vuoi usare con questa chiave, puoi eseguire <c>gpg --edit-key YOUR_ID</c> e poi lanciare il comando <c>adduid</c>. Ti chiederà il nome, l'email e il commento per il tuo secondo ID che verrà utilizzato.</note>

		</body>
	</section>
	<section>
		<title>Esportare le chiavi</title>

		<body>
			<p>
			Per esportare la tua chiave, digita <c>gpg --armor --output john.asc --export john@nowhere.someplace.flick</c> Puoi anche usare l'ID della tua chiave o qualche cosa che la identifichi (in questo caso abbiamo usato un indirizzo e-mail). Lui ora ha un file john.asc che può mandare ai suoi amici o mettere nella sua homepage in modo che la gente possa comunicare in sicurezza con lui.
			</p>

		</body>
	</section>
	<section>
		<title>Importare la chiavi</title>

		<body>
			<p>Per aggiungere dei files al tuo portachiavi pubblico devi prima importarli,	e poi verificare la loro impronta digitale. Dopo averlo fatto puoi convalidarli.

				<note>
					Dovresti prestare molta attenzione nel verificare le chiavi. Questo è uno degli aspetti cruciali della crittografia a chiave pubblica.
				</note>

				Ora aggiungeremo la chiave pubblica di Luis Pinto (un mio amico) al nostro portachiavi pubblico. Dopo averlo contattato per ricevere la sua impronta digitale, confronterà l'impronta digitale con l'output del comando <c>fpr</c>. Se la chiave è autentica, lo aggiungerò al mio portachiavi pubblico. In questo caso particolare, la chiave di Luis scadrà il 2003-12-01 e quindi mi viene chiesto se desidero che la mia firma scada lo stesso giorno.

				<pre caption = "Aggiunta e firma di chiavi" >
# <c>gpg --import luis.asc</c>
gpg: key 462405BB: public key imported
gpg: Total number processed: 1
gpg:               imported: 1
# <c>gpg --list-keys</c>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;
sub  2048g/96D6CDAD 2002-12-08

pub  1024D/462405BB 2002-12-01 Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;
	uid                            Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
sub  4096g/922175B3 2002-12-01 [expires: 2003-12-01]

# <c>gpg --edit-key lmpinto@dei.uc.pt</c>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.


gpg: checking the trustdb
gpg: checking at depth 0 signed=0 ot(-/q/n/m/f/u)=0/0/0/0/0/1
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
sub  4096g/922175B3  created: 2002-12-01 expires: 2003-12-01
(1)  Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
(2). Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;

Command> <c>fpr</c>
pub  1024D/462405BB 2002-12-01 Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
             Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB

Command> <c>sign</c>
Really sign all user IDs? <c>y</c>

pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
             Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB

	     Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
	     Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;

This key is due to expire on 2003-12-01.
Do you want your signature to expire at the same time? (Y/n) <c>Y</c>
How carefully have you verified the key you are about to sign actually belongs
to the person named above?  If you don't know what to answer, enter "0".

   (0) I will not answer. (default)
   (1) I have not checked at all.
   (2) I have done casual checking.
   (3) I have done very careful checking.

   Your selection? <c>3</c>
Are you really sure that you want to sign this key
with your key: "John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"

I have checked this key very carefully.

Really sign? <c>y</c>

You need a passphrase to unlock the secret key for
user: "John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"
1024-bit DSA key, ID 75447B14, created 2002-12-08

Command> <c>check</c>
uid  Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   John Doe (The Real John Doe) &lt;john@nowhe
uid  Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   John Doe (The Real John Doe) &lt;john@nowhe

</pre>
</p>


		</body>
	</section>

</chapter>
<chapter>
	<title>Scambio di chiavi con i keyservers</title>
	<section>
		<title>Come mandare le chiavi ai keyservers</title>
		<body>
		<p>
			Ora che hai una chiave, è una buona idea mandarla ai kerservers sparsi per il mondo. Ci sono un mucchio di keyservers e la maggior parte di essi si scambia le chiavi reciprocamente. Ora invieremo la chiave di Luis al server gpg.mit.edu. Questo server usa il protocollo HTTP, quindi se hai bisogno di usare un proxy per il tuo traffico HTTP non dimenticarti di settarlo (<c>export http_proxy=http://proxy_host:port/</c>). Il comando per mandare la chiave è: <c>gpg --keyserver pgp.mit.edu --keyserver-options honor-http-proxy --send-key john@nowhere.someplace.flick</c> . Se non hai bisogno di un proxy HTTP puoi rimuovere <e>--keyserver-options honor-http-proxy</e>.
		</p>
		<p>
			Puoi anche mandare le chiavi delle altre persone che hai nel tuoi portachiavi ai keyservers. Potremmo mandare la chiave di Luis Pinto al keyserver. In questo modo qualsiasi persona che verifica la tua chiave può usare la firma che hai lasciato per verificare anche la chiave di Luis.</p>
		</body>
	</section>
	<section>
		<title>Come ricevere chiavi dai keyservers</title>
		<body>
		<p>
			Ora andremo alla ricerca delle chiave di Gustavo Felisberto e l'aggiungeremo al portachiavi di John Doe (nel caso non lo notaste Gustavo Felisberto è la persona che scrive questa guida :) ).
			<pre caption = "Ricerca di chiavi dai keyservers" >
# <c>gpg --keyserver pgp.mit.edu --keyserver-options honor-http-proxy --search-keys humpback@felisberto.net</c>
gpg: searching for "humpback@felisberto.net" from HKP server pgp.mit.edu
Keys 1-5 of 5 for "humpback@felisberto.net"
(1)	Gustavo Felisberto (apt-get install anarchy) &lt;humpback@felisberto.net&gt; 1024
	  created 2002-12-06, key B9F2D52A
(2)	Gustavo Felisberto &lt;humpback@altavista.net&gt; 1024
	  created 1999-08-03, key E97E0B46
(3)	Gustavo A.S.R. Felisberto &lt;humpback@altavista.net&gt; 1024
	  created 1998-12-10, key B59AB043
(4)	Gustavo Adolfo Silva Ribeiro Felisberto &lt;humpback@altavista.net&gt; 1024
	  created 1998-08-26, key 39EB133D
(5)	Gustavo Adolfo Silva Ribeiro Felisberto &lt;humpback@altavista.net&gt; 1024
	  created 1998-06-14, key AE02AF87
	  Enter number(s), N)ext, or Q)uit &gt;<c>1</c>
gpg: requesting key B9F2D52A from HKP keyserver pgp.mit.edu
gpg: key B9F2D52A: public key imported
gpg: Total number processed: 1
gpg:               imported: 1
  </pre>
  Come puoi vedere dalla risposta del server ho mandato alcue chiavi al keyserver, ma attualmente sto usando solo B9F2D52A. Ora John Doe potrebbe ottenerla e firmarla se si fida.
  </p>
  </body>
  </section>
</chapter>
<chapter>
	<title>Lavorare con i documenti</title>
	<section>
		<title>Criptare e firmare</title>
		<body>
			<p>Diciamo che hai un file che vorresti mandare adesso a Luis. Puoi criptarlo, firmarlo, oppure criptarlo e firmarlo. Criptarlo significa che solo Luis sarà in grado di aprirlo. La firma informa Luis che sei stato veramente tu a creare quel file.</p>
			<p>I tre comandi successivi faranno questo, cioè criptare, firmare ed entrambe le cose.</p>
			<pre caption = "Ricerca di chiavi nei files e loro decodifica" >
# <c>gpg --output doc.gpg --encrypt --recipient lmpinto@dei.uc.pt doc_to_encrypt</c>
# <c>gpg --output doc.gpg --sign --recipient lmpinto@dei.uc.pt doc_to_sign</c>
# <c>gpg --output doc.gpg --encrypt --sign --recipient lmpinto@dei.uc.pt doc_to_encrypt_and_sign</c>
</pre>
			<p>Questo creerà un file binario. Se desideri creare files ascii, aggiungi semplicemente <c>--clearsign</c> all'inizio del comando.</p>
		</body>
	</section>
	<section>
		<title>Decriptare e verificare le firme</title>
		<body>
			<p>Supponiamo che tu abbia ricevuto un file criptato per te. Il comando per decriptarlo è <c>gpg --output document --decrypt encrypted_doc.gpg</c>. Questo decripterà il documento e verificherà la firma (se ne esiste una).
			</p>
		</body>
	</section>


</chapter>
<chapter>
	<title>Interfacce grafice per GnuPG</title>

	<section>
		<title>kgpg</title>
		<body>

			<p>kgpg è una buona GUI per GnuPG. Nella schermata principale puoi incollare il testo che desideri firmare o criptare, e puoi anche incollare il file ASCII criptato che vuoi decriptare.
			</p>

			<p>
				<figure link="http://www.ibiblio.org/web-gentoo/images/kgpg1.png" short="kgpg main window"/>
			</p>
			<p>
				In questa immagine puoi vedere la finestra principale di kgpg con all'interno un testo ASCII criptato. Da qui tu puoi decriptarlo (dovrai inserire la tua password), criptare altri files, incollare nuovo testo da firmare...
			</p>
			<p>
				<figure link="http://www.ibiblio.org/web-gentoo/images/kgpg2.png" short="kgpg key manage window"/>
			</p>
			<p>
				Ora puoi vedere la finestra di gestione delle chiavi. Da qui puoi vedere le chiavi valide di John Doe. Le due chiavi fidate di Gustavo e Luis, e le due non fidate di Daniel Robbins ( non l'ho ancora contattato per verificare la sua impronta digitale :) ).
			</p>
			<p>
				<figure link="http://www.ibiblio.org/web-gentoo/images/kmail_security.png" short="kmail security options OpenGPG"/>
			</p>
			<p>
				<figure link="http://www.ibiblio.org/web-gentoo/images/kmail_identity.png" short="kmail identity options OpenGPG key"/>
			</p>

	</body>
</section>
<section>
	<title>Mozilla Enigmail</title>
	<body>
		<p>Le versioni 1.0 o superiori di Mozilla hanno integrato Enigmail, un plugin per il client mail che è abbastanza semplice da configurare. Vai in Preferences -&gt; Privacy &amp; Security -&gt; Enigmail. Li puoi inserire la chiave della tua e-mail. Fatto.
		</p>
		<p>Le mail che arrivano con una firma pgp o gpg non fidata saranno contrassegnate da una penna rotta. Le altre che arrivano con un firma valida saranno contrassegnate da una penna intatta. Enigmail può anche prendere le chiavi dai keyservers, ma se dovesse incontrare qualche problema ti stamperà alcuni messaggi bizzarri (ma ti ricordi ancora come usare la riga di comando, vero?).
		</p>

	</body>
</section>
<section>
	<title>KMail</title>
	<body>
		<p>KMail è anch'esso facile da configurare. Io inserirò solamento alcune immagini su come configurarlo. Devi semplicemente dire a KMail di usare GPG e una chiave per firmare le mail.
		</p>

	</body>
</section>
</chapter>
<chapter>
	<title>Considerazioni finali, Crediti e Copyright</title>
	<section>
		<title>Alcuni problemi</title>
		<body>
			<p>Ho avuto alcuni problemi con le immagini nelle chiavi. Controlla la versione che stai usando. Se stai utilizzando la versione 1.2.1-r1 o una superiore non dovresti avere problemi, le versioni più vecchie invece potrebbero avere dei problemi. Anche a molti keyservers non piacciono le chiavi con le immagini.
			</p>
		</body>
	</section>
	<section>
		<title>Cosa non è presente in questo documento</title>
		<body>
			<p>Gpg è un tool molto complesso, ti lascia fare molto di più di quello che abbiamo visto qui. Questo documento è per gli utenti che si avvicinano per la prima volta a GnuPG. Per altre informazioni, dovresti dare uno sguardo al <uri link="http://www.gnupg.org">GnuPG Website</uri>.
			</p>
			<p>Non parlo di altri tools come pgp4pine, gpgpine, evolution e tools per Windows, probabilmente amplierò questo documento in futuro.</p>
		</body>
	</section>
	<section>
		<title>Crediti</title>
		<body>
			<p>Il <uri link="http://www.gnupg.org">GnuPG Handbook</uri> di John Michael Ashley è semplicemente stupendo. E' veramente un buon libro per i principianti.</p>
			<p>Everyone in the #gentoo-doc team you guys rock.</p>
			<p>Tiago Serra for getting me back to the privacy track.</p>
		</body>
	</section>
	<section>
		<title>Copyright</title>
		<body>
			<p>Copyright by Gustavo Felisberto. Gentoo Technologies Inc. is allowed to publish this document as it sees fit.
			</p>
		</body>
	</section>

</chapter>

</guide>
