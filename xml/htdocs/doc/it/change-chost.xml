<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/change-chost.xml,v 1.3 2007/07/23 22:29:00 scen Exp $ -->

<guide link="/doc/it/change-chost.xml" lang="it">
<title>Cambiare la variabile CHOST</title>

<author title="Autore">
  <mail link="amne@gentoo.org">Wernfried Haas</mail>
</author>
<author title="Revisore">
  <mail link="vapier@gentoo.org">Mike Frysinger</mail>
</author>
<author title="Supporto GuideXML">
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>
<author title="Traduzione">
  <mail link="scen@gentoo.org">Davide Cendron</mail>
</author>

<abstract>
Questo documento spiega come cambiare la variabile CHOST di un sistema
esistente.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>2</version>
<date>2007-07-16</date>

<chapter>
<title>Introduzione</title>
<section>
<body>

<p>
Cambiare il CHOST è una grossa problematica che può seriamente compromettere il
proprio sistema - allora perchè c'è una guida a riguardo?
</p>

<p>
Ci sono certe situazioni nelle quali cambiare CHOST è inevitabile, ad esempio
volendo aggiornare a glibc 2.4, che supporta solamente nptl, e avendo CHOST
impostato a i386, che rende impossibile l'utilizzo di nptl. In questo caso le
scelte possibili non sono molte, ed una di queste è proprio cambiare CHOST.
</p>

<p>
Anche seguendo queste istruzioni, potrebbero comunque insorgere dei problemi,
per cui assicurarsi di leggerle ed eseguirle molto attentamente. In questo
esempio la variabile CHOST verrà cambiata da i386 a i686, se si effettua un
cambiamento diverso modificare di conseguenza i comandi.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Cambiare la variabile CHOST</title>
<section>
<title>Compilare i pacchetti</title>
<body>

<p>
Come prima cosa, modificare il file <path>/etc/make.conf</path> e cambiare il
valore di <b>CHOST</b> in base alla proprie esigenze. Quindi ricompilare i
seguenti pacchetti in questo preciso ordine:
</p>

<pre caption="Ricompilare gli strumenti di sistema essenziali">
# <i>emerge -av1 binutils gcc glibc</i>
</pre>

<impo>
Si deve essere consapevoli del fatto che aggiornamenti maggiori di gcc
contemporanei al cambiamento di CHOST (es. partendo da gcc 3.3, CHOST i386 e
migrando a gcc 4.1, CHOST i686) possono introdurre gravi effetti collaterali.
Sebbene non sia impossibile eseguire questo passaggio, è difficile prevedere e
documentare i potenziali problemi che potrebbero insorgere. Di conseguenza, si
prega di fare un passaggio alla volta, per esempio aggiornando prima gcc
seguendo la <uri link="/doc/it/gcc-upgrading.xml">guida all'aggiornamento di
GCC</uri> e successivamente cambiando il proprio CHOST. Se si ha un sistema con
CHOST=i386, durante l'aggiornamento di gcc bisogna mascherare glibc 2.4 (o
versioni successive), in quanto non utilizzabile su i386, e smascherarlo dopo
l'aggiornamento.
</impo>

</body>
</section>
<section>
<title>Verifiche globali di funzionamento</title>
<body>

<p>
Ora bisogna assicurarsi che le impostazioni di <c>gcc-config</c> e
<c>binutils-config</c> siano corrette e non ci siano degli "scarti" di
configurazione in <path>/etc/env.d</path>.
</p>

<p>
L'output di <c>gcc-config</c> e <c>binutils-config</c> dovrebbe apparire più o
meno così (potrebbero differire in base alla propria versione di gcc e il
proprio chost, qui rispettivamente gcc 4.1.1. e i686):
</p>

<pre caption="Verificare la correttezza della configurazione">
# <i>gcc-config -l</i>
 [1] i686-pc-linux-gnu-4.1.1 *
# <i>gcc-config -c</i>
i686-pc-linux-gnu-4.1.1

# <i>binutils-config -l</i>
 [1] i686-pc-linux-gnu-2.16.1 *
# <i>binutils-config -c</i>
i686-pc-linux-gnu-2.16.1
</pre>

<p>
Verificare poi che non ci sia nessun riferimento al vecchio CHOST in
<path>/etc/env.d/</path>:
</p>

<pre caption="Controllare i riferimenti al vecchio CHOST">
# <i>cd /etc/env.d/</i>
# <i>grep 386 *</i>
05gcc-i386-pc-linux-gnu:PATH="/usr/i386-pc-linux-gnu/gcc-bin/4.1.1"
05gcc-i386-pc-linux-gnu:ROOTPATH="/usr/i386-pc-linux-gnu/gcc-bin/4.1.1"
</pre>

<note>
Ciò non dovrebbe accadere nella propria situazione, ma in questo caso
05gcc-i386-pc-linux-gnu contiene un riferimento al vecchio CHOST. Le cose
potrebbero risultare differenti nel proprio sistema in base a/da quale CHOST si
sta migrando, o perfino essere apposto. Il nome potrebbe anche essere
05gcc-tuo_nuovo_CHOST-pc-linux-gnu.
</note>

<p>
Prima di eliminare il file, verificare gli altri aventi il CHOST aggiornato:
</p>

<pre caption="Verificare i file con il CHOST aggiornato">
# <i>grep 686 *</i>
05binutils:MANPATH=/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/man
05binutils:INFOPATH=/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/info
05binutils:LDPATH=/usr/i686-pc-linux-gnu/lib
05gcc:PATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
05gcc:ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
05gcc:MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/man"
05gcc:INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/info"
05gcc:LDPATH="/usr/lib/gcc/i686-pc-linux-gnu/4.1.1"
</pre>

<p>
Sembra tutto apposto in quanto dovrebbe esserci solamente un file per
<c>gcc</c> in <path>/etc/env.d</path> (05gcc in questo esempio), per cui
eliminare il file con i riferimenti sbagliati:
</p>

<pre caption="Rimuovere i file con i riferimenti errati">
# <i>rm 05gcc-i386-pc-linux-gnu</i>
</pre>

<p>
Lo stesso ragionameno si applica a <c>binutils</c> - se c'è un file di troppo,
identificare quello vecchio e cancellarlo. Successivamente controllare
<path>/etc/env.d/binutils/</path>
</p>

<pre caption="Verificare la correttezza di binutils">
# <i>cd /etc/env.d/binutils/</i>
# <i>ls -la</i>
total 8
-rw-r--r-- 1 root root  15 Sep  3 13:48 config-i686-pc-linux-gnu
-rw-r--r-- 1 root root 126 Sep  3 13:48 i686-pc-linux-gnu-2.16.1

# <i>cat config-i686-pc-linux-gnu</i>
CURRENT=2.16.1
# <i>cat i686-pc-linux-gnu-2.16.1</i>
TARGET="i686-pc-linux-gnu"
VER="2.16.1"
LIBPATH="/usr/lib/binutils/i686-pc-linux-gnu/2.16.1"
FAKE_TARGETS="i686-pc-linux-gnu"
</pre>

<p>
Questa configurazione è corretta, questi due file sono effettivamente al loro
posto. Ora spostarsi nella directory di gcc.
</p>

<pre caption="Verificare la correttezza di gcc">
# <i>cd /etc/env.d/gcc</i>
# <i>ls -la</i>
total 12
-rw-r--r-- 1 root root  32 Sep  3 16:43 config
-rw-r--r-- 1 root root  32 Aug  3 14:25 config-i386-pc-linux-gnu
-rw-r--r-- 1 root root 292 Sep  3 16:43 i686-pc-linux-gnu-4.1.1

# <i>cat config</i>
CURRENT=i686-pc-linux-gnu-4.1.1

# <i>cat config-i386-pc-linux-gnu</i>
CURRENT=i386-pc-linux-gnu-4.1.1

# <i>cat i686-pc-linux-gnu-4.1.1</i>
PATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
LDPATH="/usr/lib/gcc/i686-pc-linux-gnu/4.1.1"
GCCBITS="32"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/info"
STDCXX_INCDIR="g++-v4"
</pre>

<p>
<path>config</path> e <path>i686-pc-linux-gnu-4.1.1</path> sono corretti, ma
<path>config-i386-pc-linux-gnu</path> è un'altro "rimasuglio" di configurazione
da rimuovere.
</p>

<note>
Si ricorda nuovamente che il nome del file contenente i riferimenti ad una
vecchia versione di gcc potrebbe differire, ad esempio potrebbe chiamarsi
config-i686-pc-linux-gnu anche se si sta migrando a i686. È importante
identificare il file dal suo contenuto, non solo dal nome.
</note>

<pre caption="Rimuovere il file di configurazione di gcc errato">
# <i>rm config-i386-pc-linux-gnu</i>
</pre>

<p>
A questo punto eseguire i seguenti comandi per aggiornare il proprio ambiente:
</p>

<pre caption="Aggiornare l'ambiente">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Verificare che tutto sia stato corretto:
</p>

<pre caption="Verificare che i riferimenti al vecchio CHOST siano stati
rimossi">
# <i>grep -r 386 /etc/env.d/</i>
</pre>

<p>
Se viene trovato nuovamente qualcosa , probabimente qualche file dev'essere
sfuggito: è importante rintracciarli e rimuoverli prima di procedere oltre.
</p>

</body>
</section>
<section>
<title>Completare la Modifica</title>
<body>

<p>
È necessario ri-emergere <c>libtool</c> ed eseguire <c>fix_libtool_files.sh</c>.
Assicurarsi di usare la corretta versione di gcc: (quella attuale, qui 4.1.1., e
la vecchia architettura, qui i386).
</p>

<pre caption="Assicurare l'integrità delle librerie">
# <i>emerge -av1 libtool</i>
# <i>fix_libtool_files.sh 4.1.1 --oldarch i386-pc-linux-gnu</i>
</pre>

<p>
Se lo si desidera, ricompilare tutti i pacchetti:
</p>

<pre caption="Ricompilare world">
# <i>emerge -e world</i>
</pre>

<p>
Teoricamente questa operazione non è necessaria, ma non lo si può garantire
al 100%. Anche se world non viene ricompilato interamente, bisogna in ogni caso
ricompilare almeno qualche pacchetto (es. <c>python</c>):
</p>

<pre caption="Reinstallare python">
# <i>emerge -av1 python</i>
</pre>

<p>
Tutti i pacchetti basati su perl vengono installati nella directory CHOST
perciò necessitano di una reinstallazione. Nel caso non si abbia installato
<c>qfile</c>, bisogna prima installare <c>app-portage/portage-utils</c>.
</p>

<pre caption="Reinstallare i pacchetti perl">
# <i>emerge -av portage-utils</i>
# <i>emerge -av1 `qfile /usr/lib/perl* -Cq | sort -u`</i>
</pre>

<p>
Se vengono individuati altri pacchetti che necessitano della ricompilazione, si
prega di comunicarlo all'autore di questo documento.
</p>

</body>
</section>
<section>
<title>Problemi principali</title>
<body>

<p>
Se si aggiorna da gcc 3.3 a 4.1 in concomitanza con il cambio di CHOST (si
prega di non farlo in ogni caso), un paio di utenti hanno riportato la
corruzione di alcuni pacchetti che necessitano di una ricompilazione, come groff
e courier:
</p>

<pre caption="Messaggio d'errore">
error while loading shared libraries: libstdc++.so.5: cannot open shared object file: No such file or directory
</pre>

<p>
Questo avviene perchè durante l'aggiornamento CHOST non combacia esattamente
con CTARGET e il compilatore assume che si sia effettuando una
cross-compilazione. Di conseguenza, LDPATH non viene inserito in
<path>ld.so.conf</path>, generando l'errore precedentemente elencato.
</p>

<p>
Leggere la <uri link="/doc/it/gcc-upgrading.xml">guida all'aggiornamento
di GCC</uri> per informazioni sui pacchetti da ricompilare dopo un aggiornamento
di gcc.
</p>

<p>
In qualche caso raro, potrebbero anche corrompersi le vecchie versioni di
python. Si può correggere il problema aggiungendo
<path>/usr/lib/gcc-lib/i386-pc-linux-gnu/3.3.6</path> (modificare la voce in
base al proprio vecchio chost e alla propria versione di gcc, di conseguenza) a
<path>/etc/ld.so.conf</path>, eseguire <c>ldconfig</c> e poi <c>emerge
libstdc++-v3</c>. Tuttavia, bisognerebbe evitare di incorrere in questo problema
- non effettuare insieme il cambio di CHOST e l'aggiornamento di versione di
gcc.
</p>

</body>
</section>
<section>
<title>Commenti</title>
<body>

<p>
Qualsiasi commento riguardante questa guida e le sue istruzioni (sia che
funzionino, sia che non funzionino o che si incontrino altri problemi) è ben
accetto, si prega di spedire un e-mail a <mail>amne@gentoo.org</mail> o scrivere
su <uri link="http://forums.gentoo.org/viewtopic-t-494147.html">questa
discussione del forum</uri>. Gran parte di questa guida proviene da vapier,
grazie per il suo aiuto!
</p>

</body>
</section>
</chapter>
</guide>