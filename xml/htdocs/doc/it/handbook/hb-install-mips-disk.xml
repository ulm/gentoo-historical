<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-install-mips-disk.xml,v 1.10 2006/11/04 20:33:49 so Exp $ -->

<sections>

<version>1.15</version>
<date>2006-11-02</date>

<section>
<title>Introduzione ai dispositivi a blocchi</title>
<subsection>
<title>Dispositivi a blocchi</title>
<body>

<p>
Si dà ora un'occhiata approfondita agli aspetti relativi ai dischi in Gentoo
Linux e in Linux in generale, tra cui i filesystem Linux, le partizioni e i
dispositivi a blocchi. Quindi, una volta acquisita familiarità con i dischi
e i filesystem, si viene guidati attraverso il processo di configurazione
delle partizioni e dei filesystem per l'installazione di Gentoo Linux.
</p>

<p>
Per cominciare, si introducono i <e>dispositivi a blocchi</e>. Il dispositivo
a blocchi più famoso è molto probabilmente quello che rappresenta il primo
hard disk SCSI in un sistema Linux, <path>/dev/sda</path>.
</p>

<p>
I dispositivi a blocchi rappresentano un'interfaccia astratta ai dischi.
I programmi utente possono usare questi dispositivi a blocchi per interagire
con i dischi, senza doversi chiedere se si tratta di unità IDE, SCSI o di
qualsiasi altro tipo. Il programma può semplicemente indirizzare la
memorizzazione su disco attraverso dei blocchi contigui, accessibili in
modalità random, e di dimensione pari a 512 byte ciascuno.
</p>

</body>
</subsection>
<subsection>
<title>Partizioni</title>
<body>

<p>
Nonostante sia possibile usare un intero disco per il sistema Linux, ciò non
è quasi mai messo in pratica. Invece, i dispositivi a blocchi del disco sono
divisi in parti più piccole e più maneggevoli. Queste parti sono chiamate
<e>partizioni</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Impostare uno schema di partizionamento</title>
<subsection>
<title>Numero e dimensione delle partizioni</title>
<body>

<p>
Il numero delle partizioni è altamente dipendente sull'ambiente. Per esempio,
se si hanno molti utenti su una stessa macchina, molto probabilmente si
desidera tenere separate le directory <path>/home</path>, aumentando così la
sicurezza e rendendo più facile il backup. Se si sta installando Gentoo per
utilizzarlo da mailserver, <path>/var</path> dovrebbe essere separata poichè
tutta la posta viene memorizzata in essa. Una buona scelta del filesystem è
quella che massimizza le prestazioni. I gameserver è bene che abbiano una
partizione separata per <path>/opt</path>, visto che la maggior parte dei
server di gioco sono installati li. La stessa cosa vale per <path>/home</path>:
sicurezza e backup. Si dovrebbe tenere una grande <path>/usr</path>: questa
contiene non solo la maggior parte delle applicazioni, il solo Portage tree
occupa 500 MB di spazio, esclusi i sorgenti che sono in esso.
</p>

<p>
Come si è visto, molto dipende da cosa si desidera realizzare. Partizioni o
volumi separati hanno i seguenti vantaggi:
</p>

<ul>
<li>
  Si può scegliere il filesystem con maggiori prestazioni per ogni partizione
  o volume
</li>
<li>
  L'intero sistema non può esaurire lo spazio libero se un tool malfunzionante
  scrive all'infinito su una partizione od un volume
</li>
<li>
  Nel caso si rendano necessari, i controlli sul filesystem sono ridotti,
  poichè possono essere condotti in parallelo diverse
  analisi (questo vantaggio è più per i dischi multipli che per le
  partizioni multiple)
</li>
<li>
  La sicurezza può essere aumentata montando alcune partizioni o volumi
  in sola lettura, nosuid (i bit setuid vengono ignorati), noexec (i bit
  executable sono ignorati) etc.
</li>
</ul>

<p>
Le partizioni multiple hanno però un grosso svantaggio: se non sono
configurate correttamente, si potrebbe avere un sistema con molto spazio libero
su una partizione e poco su un'altra. C'è anche un limite di 15 partizioni
per SCSI e SATA.
</p>

</body>
</subsection>
</section>
<section>
<title>Usare fdisk su MIPS per partizionare il disco</title>
<subsection>
<title>Macchine SGI: Creare un SGI Disk Label</title>
<body>

<p>
Tutti i dischi in un sistema SGI richiedono un <e>SGI Disk Label</e>, che serve
per una funzione simile a quella di Sun &amp; MS-DOS disklabels -- Memorizza
informazioni sulle partizioni dei dischi. Con la crezione di un nuovo
SGI Disk Label si creeranno due partizioni speciali sul disco:
</p>

<ul>
  <li>
    <e>Intestazione del volume SGI</e> (9na partizione): Questa partizione è
    importante. E' dove c'è il bootloader, e in alcuni casi, anche le
    immagini del kernel.
   </li>
   <li>
    <e>Volume SGI</e> (11ma partizione): Questa partizione è simile
    nello scopo alla terza partizione del Sun Disklabel di "Whole Disk".
    Questa partizione occupa l'intero disco, e non dovrebbe essere toccata.
    Non ha uno scopo speciale, tranne quello di aiutare il PROM in qualche
    modo non documentato (o è usata da IRIX).
   </li>
</ul>

<warn>
L'intestazione del volume SGI <e>deve</e> iniziare al cilindro 0.
Altrimenti non si potrà fare il boot dal disco.
</warn>

<p>
Il seguente, è un esempio preso da <c>fdisk</c>. Dopo averlo letto, adattarlo
in base alle proprie necessità.
</p>

<pre caption="Creare un SGI Disklabel">
# <i>fdisk /dev/sda</i>

Command (m for help): <i>x</i>

Expert command (m for help): <i>m</i>
Command action
   b   move beginning of data in a partition
   c   change number of cylinders
   d   print the raw data in the partition table
   e   list extended partitions
   f   fix partition order
   g   create an IRIX (SGI) partition table
   h   change number of heads
   m   print this menu
   p   print the partition table
   q   quit without saving changes
   r   return to main menu
   s   change number of sectors/track
   v   verify the partition table
   w   write table to disk and exit

Expert command (m for help): <i>g</i>
Building a new SGI disklabel. Changes will remain in memory only,
until you decide to write them. After that, of course, the previous
content will be irrecoverably lost.

Expert command (m for help): <i>r</i>

Command (m for help): <i>p</i>

Disk /dev/sda (SGI disk label): 64 heads, 32 sectors, 17482 cylinders
Units = cylinders of 2048 * 512 bytes

----- partitions -----
Pt#     Device  Info     Start       End   Sectors  Id  System
 9:  /dev/sda1               0         4     10240   0  SGI volhdr
11:  /dev/sda2               0     17481  35803136   6  SGI volume
----- Bootinfo -----
Bootfile: /unix
----- Directory Entries -----

Command (m for help):
</pre>

<note>
Se il disco ha già un SGI Disklabel, allora fdisk non creerà una nuova label.
Ci sono due modi per evitare questo. Il primo è quello di creare un Sun o
MS-DOS disklabel, scrivere i cambiamenti sul disco, e far ripartire fdisk.
Il secondo è quello di sovrascrivere la tabella di partizioni con dati vuoti,
con il seguente comando: <c>dd if=/dev/zero of=/dev/sda bs=512 count=1</c>.
</note>
</body>
</subsection>

<subsection>
<title>Ottenere l'intestazione del volume SGI della giusta dimensione</title>
<body>

<impo>
Questo passo è spesso necessario, a causa di un bug in <c>fdisk</c>.
L'intestazione del volume non è creata in modo corretto,
la fine comincia e finisce al cilindro 0. Questo evita la creazione di
partizioni multiple. Continuare a leggere per sapere come superare questo
problema.
</impo>

<p>
Ora che è creato il SGI Disklabel, le partizioni devono essere definite.
Nell'esempio sopra, ci sono già due partizioni definite. Ci sono le partizioni
speciali che non dovrebbero essere cambiate. Tuttavia, per installare Gentoo,
si ha bisogno di caricare un bootloader, e immagini del kernel multiple
(dipende dal tipo di sistema) direttamente nell'intestazione del volume.
L'intestazione del volume può contenere <e>otto</e> immagini di ogni
grandezza, un'immagine può avere un nome di otto caratteri.
</p>

<note>
Su sistemi SGI, ci sono disbonibili due bootloader: <c>arcboot</c> e
<c>arcload</c>. Solo Indy, Indigo2 (R4k variety), Challenge S e O2 possono
usare <c>arcboot</c> come bootloader, <c>arcload</c> funziona su tutti i
sistemi SGI che supportano Linux. <c>arcload</c> (al contrario di
<c>arcboot</c>) non può leggere le partizioni ext2/ext3 e carica i kernel
dall'intestazione del volume.
</note>

<p>
Il processo di rendere più larga l'intestazione del volume non è esattamente
diretto; c'è un piccolo trucco per farlo. Non si può cancellare e
riaggiungere l'intestazione del volume con fdisk. Nell'esempio sotto, si
creerà un'intestazione del volume di 50MB insieme a una partizione di boot di
50MB. La disposizione del proprio disco può variare, ma l'esempio è solo a
scopo illustrativo.
</p>

<pre caption="Ridurre l'intestazione del volume SGI">
Command (m for help): <i>n</i>
Partition number (1-16): <i>1</i>
First cylinder (5-8682, default 5): <i>51</i>
 Last cylinder (51-8682, default 8682): <i>101</i>

<comment>(Notare come fdisk permetta solo che la Partizione #1 sia ricreata            )
(cominciando come minimo dal cilindro 5? Si tenta di cancellare &amp; ricreare    )
(l'intestazione del volume SGI, è lo stesso problema che si sarebbe           )
(incontrato. Nell'esempio, si desidera che /boot sia di 50MB, così si         )
(comincia al cilindro 51 (si ricordi che l'intestazione del volume deve       )
(iniziare al cilindro 0), e si imposta il cilindro finale a 101, che saranno  )
(approssimativamente 50MB (con uno scarto di 1-5MB)                           )</comment>

Command (m for help): <i>d</i>
Partition number (1-16): <i>9</i>

<comment>(Cancellare la Partizione #9 (intestazione del volume SGI))</comment>

Command (m for help): <i>n</i>
Partition number (1-16): <i>9</i>
First cylinder (0-50, default 0): <i>0</i>
 Last cylinder (0-50, default 50): <i>50</i>
 
<comment>(Ricreare la Partizione #9, finendo prima della Partizione #1)</comment>
</pre>

<p>
Se non si hanno conoscenze buone per usare <c>fdisk</c> si dia una letta
alle istruzioni sul partizionamento su Cobalts. I concetti sono gli stessi --
ricordarsi di lasciare l'intestazione del volume e le partizioni del disco.
</p>

<p>
Si può creare il resto delle partizioni. Dopo che tutte le partizioni sono
state create assicurarsi di impostare l'ID della partizione swap a <c>82</c>,
Linux Swap. Di default è <c>83</c>, Linux Native.
</p>

<p>
Ora che le partizione sono create, si può continuare con
<uri link="#filesystems">Creare i filesystem</uri>.
</p>

</body>
</subsection>

<subsection>
<title>Macchine Cobalt: Partizionare il disco</title>
<body>

<p>
Sulle macchine Cobalt, il BOOTROM si aspetta di vedere un MS-DOS MBR,
in modo che il partizionamento del disco sia diretto --
è lo stesso che si fa per una macchina x86. <e>Comunque</e> ci sono alcune
cose da tenere in mente.
</p>

<ul>
  <li>
    Cobalt firmware si aspetterà che <path>/dev/hda1</path> sia una partizione
    Linux formattata <e>EXT2 Revision 0</e>. <e>EXT2 Revision 1 partizioni non
    funzioneranno!</e> (Il Cobalt BOOTROM comprende solo EXT2r0)
  </li>
  <li>
    La partizione appena menzionata deve contenere una immagine gzippata ELF,
    <path>vmlinux.gz</path> in root di questa partizione, che carica il kernel
  </li>
</ul>

<p>
Per questa ragione, si raccomanda di creare una partizione
<path>/boot</path> di circa 20MB formattata EXT2r0, sulla quale
installare CoLo &amp; i kernel. Questo permette di eseguire un filesystem
moderno (EXT3 o ReiserFS) per la partizione root.
</p>

<p>
Si assume che si è già creata <path>/dev/hda1</path> da montare dopo come
partizione <path>/boot</path>. Se si desidera renderla come <path>/</path>,
si dovranno ricordare le aspettative di PROM.
</p>

<p>
Per creare le partizioni digitare <c>fdisk /dev/hda</c> al prompt.
I principali comandi che si devono sapere sono questi:
</p>

<ul>
  <li>
    <c>o</c>: Elimina la vecchia tabella di partizioni, comincia con una
    vuota MS-DOS
  </li>
  <li>
    <c>n</c>: Nuova Partizione
  </li>
  <li>
    <c>t</c>: Cambia il tipo di partizione
    <ul>
      <li>Usare <c>82</c> per Linux Swap, <c>83</c> per Linux FS</li>
    </ul>
  </li>
  <li>
    <c>d</c>: Elimina una partizione
  </li>
  <li>
    <c>p</c>: Visualizza la tabella di partizioni
  </li>
  <li>
    <c>q</c>: Quit -- lascia così come è la vecchia tabella di partizioni
  </li>
  <li>
    <c>w</c>: Quit -- salva la tabella di partizioni
  </li>
</ul>

<pre caption="Partizionare il disco">
# <i>fdisk /dev/hda</i>

The number of cylinders for this disk is set to 19870.
There is nothing wrong with that, but this is larger than 1024,
and could in certain setups cause problems with:
1) software that runs at boot time (e.g., old versions of LILO)
2) booting and partitioning software from other OSs
   (e.g., DOS FDISK, OS/2 FDISK)

<comment>(Eliminare ogni partizione esistente)</comment>
Command (m for help): <i>o</i>
Building a new DOS disklabel. Changes will remain in memory only,
until you decide to write them. After that, of course, the previous
content won't be recoverable.


The number of cylinders for this disk is set to 19870.
There is nothing wrong with that, but this is larger than 1024,
and could in certain setups cause problems with:
1) software that runs at boot time (e.g., old versions of LILO)
2) booting and partitioning software from other OSs
   (e.g., DOS FDISK, OS/2 FDISK)
Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)

<comment>(Si può ora verificare che la tabella di partizioni è vuota, con il comando 'p')</comment>

Command (m for help): <i>p</i>

Disk /dev/hda: 10.2 GB, 10254827520 bytes
16 heads, 63 sectors/track, 19870 cylinders
Units = cylinders of 1008 * 512 = 516096 bytes

   Device Boot      Start         End      Blocks   Id  System

<comment>(Creare la partizione boot)</comment>

Command (m for help): <i>n</i>
Command action
   e   extended
   p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>

<comment>(Premere invio per accettare il default)</comment>

First cylinder (1-19870, default 1):
Last cylinder or +size or +sizeM or +sizeK (1-19870, default 19870): <i>+20M</i>

<comment>(se si digita 'p', si vede la nuova partizione)</comment>
Command (m for help): <i>p</i>

Disk /dev/hda: 10.2 GB, 10254827520 bytes
16 heads, 63 sectors/track, 19870 cylinders
Units = cylinders of 1008 * 512 = 516096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/hda1               1          40       20128+  83  Linux

<comment>(Si è preferito mettere una partizione estesa)</comment>

Command (m for help): <i>n</i>
Command action
   e   extended
   p   primary partition (1-4)
<i>e</i>
Partition number (1-4): <i>2</i>

<comment>(Di nuovo, va bene il default, premere invio)</comment>

First cylinder (41-19870, default 41):
Using default value 41

<comment>(Si desidera usare qui l'intero disco, premere invio)</comment>
Last cylinder or +size or +sizeM or +sizeK (41-19870, default 19870):
Using default value 19870

<comment>(La partizione / -- Si usano separate partizioni per /usr, /var etc, / può essere piccola. Seguire le proprie preferenze.)</comment>

Command (m for help): <i>n</i>
Command action
   l   logical (5 or over)
   p   primary partition (1-4)
<i>l</i>
First cylinder (41-19870, default 41):<i>&lt;Press ENTER&gt;</i>
Using default value 41
Last cylinder or +size or +sizeM or +sizeK (41-19870, default 19870): <i>+500M</i>

<comment>(...simile per le altri partizioni...)</comment>

<comment>(Lo spazio swap. Si raccomanda 250MB, ancora meglio 1GB)</comment>

Command (m for help): <i>n</i>
Command action
   l   logical (5 or over)
   p   primary partition (1-4)
<i>l</i>
First cylinder (17294-19870, default 17294): <i>&lt;Press ENTER&gt;</i>
Using default value 17294
Last cylinder or +size or +sizeM or +sizeK (1011-19870, default 19870): <i>&lt;Press ENTER&gt;</i>
Using default value 19870

<comment>(Tutta la tabella di partizioni dovrebbe essere corretta, tranne una cosa)</comment>

Command (m for help): <i>p</i>

Disk /dev/hda: 10.2 GB, 10254827520 bytes
16 heads, 63 sectors/track, 19870 cylinders
Units = cylinders of 1008 * 512 = 516096 bytes

Device Boot      Start         End      Blocks      ID  System
/dev/hda1               1          21       10552+  83  Linux
/dev/hda2              22       19870    10003896    5  Extended
/dev/hda5              22        1037      512032+  83  Linux
/dev/hda6            1038        5101     2048224+  83  Linux
/dev/hda7            5102        9165     2048224+  83  Linux
/dev/hda8            9166       13229     2048224+  83  Linux
/dev/hda9           13230       17293     2048224+  83  Linux
/dev/hda10          17294       19870     1298776+  83  Linux

<comment>(La partizione swap, la #10, è ancora di tipo 83)</comment>

Command (m for help): <i>t</i>
Partition number (1-10): <i>10</i>
Hex code (type L to list codes): <i>82</i>
Changed system type of partition 10 to 82 (Linux swap)

<comment>(Si verifichi che tutto sia giusto)</comment>

Command (m for help): <i>p</i>

Disk /dev/hda: 10.2 GB, 10254827520 bytes
16 heads, 63 sectors/track, 19870 cylinders
Units = cylinders of 1008 * 512 = 516096 bytes

Device Boot      Start         End      Blocks      ID  System
/dev/hda1               1          21       10552+  83  Linux
/dev/hda2              22       19870    10003896    5  Extended
/dev/hda5              22        1037      512032+  83  Linux
/dev/hda6            1038        5101     2048224+  83  Linux
/dev/hda7            5102        9165     2048224+  83  Linux
/dev/hda8            9166       13229     2048224+  83  Linux
/dev/hda9           13230       17293     2048224+  83  Linux
/dev/hda10          17294       19870     1298776+  82  Linux Swap

<comment>(Salvare la nuova tabella di partizioni)</comment>

Command (m for help): <i>w</i>
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.

#
</pre>

<p>
Continuare con <uri link="#filesystems">Creare i filesystem</uri>.
</p>

</body>
</subsection>
</section>

<section id="filesystems">
<title>Creare i filesystem</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Ora che le partizioni sono state create, è il momento di inserire
il filesystem. Se non si è interessati alla scelta del filesystem e vanno
bene quelli che si usano di default in questo Manuale, continuare con la
sezione su come <uri link="#filesystems-apply">Applicare un filesystem a
una partizione</uri>. Altrimenti ecco una descrizione dei filesystem
disponibili.
</p>

</body>
</subsection>
<subsection>
<title>Filesystem</title>
<body>

<p>
Sono disponibili molti filesystem. ReiserFS, EXT2 e EXT3 sono stabili
sull'architettura MIPS, gli altri sono sperimentali.
</p>

<p>
<b>ext2</b> è il vero e proprio filesystem di Linux ma non possiede il
supporto per il metadata journaling, il che significa che le routine che
effettuano all'avvio i controlli sul filesystem ext2 possono impiegare diverso
tempo. Al momento esiste una scelta abbastanza ampia di filesystem journaled
di nuova generazione che sono in grado di effettuare controlli sulla
consistenza molto velocemente e sono generalmente preferiti alle controparti
non-journaled. I filesystem journaled prevengono i lunghi tempi di attesa
che solitamente si riscotrano quando viene riavviato il sistema e il
filesystem si trova in uno stato inconsistente.
</p>

<p>
<b>ext3</b> è la versione journaled del filesystem ext2, fornisce il metadata
journaling per un veloce recupero dei dati in aggiunta ad altre
caratteristiche di journaling avanzate come full data e ordered data
journaling. ext3 è un filesystem davvero molto valido e affidabile. Ha una
ulteriore opzione di indice hashed b-tree che abilita alte prestazioni in
quasi tutte le situazioni. ext3 è un filesystem davvero molto valido e
affidabile.
</p>

<p>
<b>ReiserFS</b> è un filesystem basato su B*-tree che offre ottime
performance generali e si dimostra notevolmente superiore a ext2 e ext3 con
file di piccole dimensioni (file minori di 4k), spesso di un fattore 10-15.
ReiserFS scala inoltre molto bene e supporta il metadata journaling. ReiserFS
ha raggiunto la solidità che lo porta a essere caldamente raccomandato sia
per un uso generico che per casi estremi come la creazione di grandi
filesystem, file molto grandi e directory contenenti decine di migliaia di
piccoli file.
</p>

<p>
<b>XFS</b> è un filesystem con metadata journaling che si presenta con un
robusto insieme di caratteristiche ed è ottimizzato per la scalabilità.
Se ne raccomanda l'uso su sistemi Linux dotati di unità di memorizzazione
con canali in fibra o high-en SCSI e alimentazione continua. Data
l'aggressività con la quale XFS si serve della cache in RAM per i dati
in transito, programmi progettati in modo non adeguato (quelli che non prendono
precauzioni quando scrivono file su disco, e ce ne sono diversi) possono
perdere una discreta quantità di dati se il sistema
si arresta in modo inaspettato.
</p>

<p>
<b>JFS</b> è il filesystem con journaling ad alte prestazioni di IBM.
E' stato recentemente giudicato pronto per il mercato, ma ad oggi non è stato
sufficientemente testato per fare commenti positivi o negativi sulla sua
stabilità generale.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Applicare un filesystem a una partizione</title>
<body>

<p>
Per creare un filesystem su una partizione o volume, sono disponibili tool
per ogni filesystem possibile:
</p>

<table>
<tr>
  <th>Filesystem</th>
  <th>Comando per la creazione</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Per esempio, per avere la partizione di boot (<path>/dev/sda1</path>) ext2 e
la partizione root (<path>/dev/sda3</path>) ext3, si usa:
</p>

<pre caption="Applicare un filesystem su una partizione">
# <i>mke2fs /dev/sda1</i>
# <i>mke2fs -j /dev/sda3</i>
</pre>

<p>
Ora si procede alla creazione dei filesystem sulle partizioni
(o volumi logici) create precedentemente.
</p>

<warn>
Se si sta installando su un server Cobalt, ricordare che
<path>/dev/hda1</path> deve essere di tipo <e>EXT2 revision 0</e>;
le altre (EXT2 revision 1, EXT3, ReiserFS, XFS, JFS)
<e>non funzioneranno</e>. Si può
formattare la partizione usando
il comando <c>mke2fs -r 0 /dev/hda1</c>.
</warn>

<warn>
Ancora, arcboot non può leggere filesystem che non siano EXT2,
EXT3 e ISO9660 (versioni recenti). Quindi <path>/boot</path> 
sulle macchine SGI deve essere una partizione EXT2 o EXT3.
</warn>

</body>
</subsection>
<subsection>
<title>Attivare la partizione swap</title>
<body>

<p>
<c>mkswap</c> è il comando usato per creare e inizializzare le partizioni
swap:
</p>

<pre caption="Inizializzare la partizione swap">
# <i>mkswap /dev/sda2</i>
</pre>

<p>
Per attivare la partizione swap, usare <c>swapon</c>:
</p>

<pre caption="Attivare la partizione swap">
# <i>swapon /dev/sda2</i>
</pre>

<p>
Creare e attivare swap con il comando menzionato sopra.
</p>

</body>
</subsection>
</section>
<section>
<title>Montare</title>
<body>

<p>
Ora che le partizioni sono inizializzate e hanno un filesystem, è il momento
di montarle. Usare il comando <c>mount</c>. Non dimenticarsi di creare
le necessarie directory di mount per ogni partizione creata.
Come esempio si monta la partizione root e boot:
</p>

<pre caption="Montare le partizioni">
# <i>mount /dev/sda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/sda1 /mnt/gentoo/boot</i>
</pre>

<note>
Se si vuole che <path>/tmp</path> risieda in una partizione separata,
assicurarsi di cambiare i permessi dopo il mount:
<c>chmod 1777 /mnt/gentoo/tmp</c>. Questo vale anche per <path>/var/tmp</path>.
</note>

<p>
E' necessario inoltre montare il filesystem proc (una interfaccia virtuale con
il kernel) su <path>/proc</path>. Ma prima si devono mettere i file
sulle partizioni.
</p>

<p>
Ora continuare con la <uri link="?part=1&amp;chap=5">
Copia dei file di installazione di Gentoo</uri>.
</p>

</body>
</section>
</sections>
