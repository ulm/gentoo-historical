<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-install-ppc-disk.xml,v 1.5 2006/03/13 22:00:41 so Exp $ -->

<sections>

<version>2.5</version>
<date>2006-02-27</date>

<section>
<title>Introduzione ai dispositivi a blocchi</title>
<subsection>
<title>I dispositivi a blocchi</title>
<body>

<p>
Si dà ora un'occhiata approfondita agli aspetti relativi ai dischi in Gentoo
Linux e in Linux in generale, tra cui i filesystem Linux, le partizioni e i
dispositivi a blocchi. Quindi, una volta acquisita familiarità con i dischi e
i filesystem, si viene guidati attraverso il processo di configurazione delle
partizioni e dei filesystem per l'installazione di Gentoo Linux.
</p>

<p>
Per cominciare, si introducono i <e>dispositivi a blocchi</e>. Il dispositivo
a blocchi più comune è quello che rappresenta la prima unità IDE in un
sistema Linux, <path>/dev/hda</path>. Se il sistema usa dischi SCSI,
FireWire, USB o SATA allora il primo disco fisso dovrebbe essere
<path>/dev/sda</path>.
</p>

<p>
I dispositivi a blocchi rappresentano un'interfaccia astratta ai dischi. I
programmi utente possono usare questi dispositivi a blocchi per interagire con
i dischi, senza doversi chiedere se si tratta di unità IDE, SCSI o di
qualsiasi altro tipo. Il programma può semplicemente indirizzare la
memorizzazione su disco attraverso dei blocchi contigui, accessibili in
modalità random, e di dimensione pari a 512 byte ciascuno.
</p>

</body>
</subsection>
<subsection>
<title>Partizioni</title>
<body>

<p>
Nonostante sia possibile usare un intero disco per il sistema Linux, ciò non
è quasi mai messo in pratica. Solitamente infatti i dischi sono divisi in
parti più piccole e più maneggevoli. Nella maggior parte dei sistemi queste
sono chiamate <e>partizioni</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Impostare uno schema di partizionamento</title>
<subsection>
<title>Schema di partizionamento predefinito</title>
<body>

<p>
Se non si è interessati a elaborare uno schema di partizionamento per il
sistema, si può usare quello di questo Manuale:
</p>

<table>
<tr>
  <th>Partizione NewWorld</th>
  <th>Partizione OldWorld</th>
  <th>Partizione Pegasos</th>
  <th>Partition RS/6000</th>
  <th>Filesystem</th>
  <th>Dimensioni</th>
  <th>Descrizione</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(Non applicabile)</ti>
  <ti>(Non applicabile)</ti>
  <ti>(Partition Map)</ti>
  <ti>32k</ti>
  <ti>Apple_partition_map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(Non applicabile)</ti>
  <ti>(Non applicabile)</ti>
  <ti>(Non applicabile)</ti>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti>(Non applicabile)</ti>
  <ti>(Non applicabile)</ti>
  <ti>(Non applicabile)</ti>
  <ti><path>/dev/sda1</path></ti>
  <ti>(PReP Boot)</ti>
  <ti>800k</ti>
  <ti>Type 0x41</ti>
</tr>
<tr>
  <ti>(Non applicabile)</ti>
  <ti><path>/dev/hda2</path> (se si usa quik)</ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(Non applicabile)</ti>
  <ti>ext2</ti>
  <ti>32MB</ti>
  <ti>Partizione Boot</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda2</path>(<path>/dev/hda3</path> se si usa quik)</ti>
  <ti><path>/dev/hda2</path></ti>
  <ti><path>/dev/sda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>partizione di Swap, Type 0x82</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti><path>/dev/hda3</path>(<path>/dev/hda4</path> se si usa quik)</ti>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/sda3</path></ti>
  <ti>ext3, xfs</ti>
  <ti>Resto del disco</ti>
  <ti>Partizione di Root, Type 0x83</ti>
</tr>
</table>

<note>
Ci possono essere alcune partizioni chiamate: <path>Apple_Driver43,
Apple_Driver_ATA, Apple_FWDriver, Apple_Driver_IOKit,
Apple_Patches</path>. Se non si ha intenzione di utilizzare MacOS 9 si possono
cancellare, in quanto MacOS X e Linux non ne hanno bisogno.
Per cancellarle usare parted o cancellare tutto il disco inizializzando la
mappa di partizioni.
</note>

<warn>
<c>parted</c> può ridimensionare le partizioni anche le HFS+. Non è possibile
ridurre filesystem HFS+ journaled, quindi si tolga il journaling in MAC OS X
prima di ridimensionare. Ricordarsi che ogni operazione di ridimensionamento
è pericolosa, e a proprio rischio. Assicuratevi di fare un backup
dei vostri dati prima di ridimensionare le partizioni.
</warn>

<p>
Se si è interessati ad avere informazioni su quanto dovrebbe essere grande una
partizione, o anche su quante partizioni si ha bisogno, seguono alcuni
suggerimenti. Altrimenti continuare con <uri link="#mac-fdisk">
Default: usare mac-fdisk (Apple) per partizionare il disco</uri>
oppure <uri link="#parted">
Alternativa: usare parted (IBM/Pegasos) per partizionare il disco</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Numero e dimensione delle partizioni</title>
<body>

<p>
Il numero delle partizioni è strettamente dipendente al proprio ambiente.
Per esempio, se si hanno molti utenti su una stessa macchina, molto
probabilmente si desidera
tenere separate le directory <path>/home</path>, aumentando così la sicurezza
e rendendo più facile il backup. Se si sta installando Gentoo per utilizzarlo
da mailserver, la directory <path>/var</path> dovrebbe essere separata poichè
tutta la posta viene memorizzata in essa. Una buona scelta del filesystem è
quella che massimizza le prestazioni. I gameserver è bene che abbiano una
partizione separata per <path>/opt</path>, visto che la maggior parte
dei server di gioco sono installati li. La stessa cosa vale per
<path>/home</path>: sicurezza e backup. Si dovrebbe tenere una grande
<path>/usr</path>: questa contiene non solo la maggior parte delle
applicazioni, il solo Portage tree occupa 500 MB di spazio, esclusi i
sorgenti che sono in esso.
</p>

<p>
Come si è visto, molto dipende da cosa si desidera realizzare. Partizioni o
volumi separati hanno i seguenti vantaggi:
</p>

<ul>
<li>
   Si può scegliere il filesystem con maggiori prestazioni per ogni partizione
   o volume
</li>
<li>
  L'intero sistema non può esaurire lo spazio libero se un tool malfunzionante
  scrive all'infinito su una partizione od un volume
</li>
<li>
  Nel caso si rendano necessari, i controlli sul filesystem sono ridotti,
  poichè possono essere condotti in parallelo diverse analisi (questo
  vantaggio è più per i dischi multipli che per le partizioni multiple)
</li>
<li>
  La sicurezza può essere aumentata montando alcune partizioni o volumi in
  sola lettura, nosuid (i bit setuid vengono ignorati), noexec (i bit
  executable sono ignorati) etc.
</li>
</ul>

<p>
Le partizioni multiple hanno però un grosso svantaggio: se non sono
configurate correttamente, si potrebbe avere un sistema con molto spazio
libero su una partizione e poco su un'altra. Inoltre per i dispositivi SCSI
e SATA c'è il limite di 15 partizioni.
</p>

</body>
</subsection>
</section>
<section id="mac-fdisk">
<title>Default: usare mac-fdisk (Apple) per partizionare il disco</title>
<body>

<p>
A questo punto, creare le partizioni usando <c>mac-fdisk</c>:
</p>

<pre caption="Avviare mac-fdisk">
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
In primo luogo cancellare le partizioni che non servono per far posto alle
partizioni di Linux. Usare <c>d</c> in <c>mac-fdisk</c> per cancellare queste
partizioni. Viene chiesto il numero della partizione da cancellare. La prima
partizione sui sistemi Apple (Apple_partition_map) può non essere cancellata.
</p>

<p>
Quindi creare una partizione <e>Apple_Bootstrap</e> usando <c>b</c>. Viene
chiesto da quale blocco si desidera partire. Inserire il numero della prima
partizione libera, seguito da una <c>p</c>. In questo caso <c>2p</c>.
</p>

<note>
Questa <e>non</e> è una partizione di <path>boot</path>. Non viene utilizzata
per niente da Linux; non si deve creare nessun filesystem in essa e non deve
mai essere montata. Gli utilizzatori di Apple non hanno bisogno di una
partizione extra per <path>/boot</path>.
</note>

<p>
Adesso creare una partizione di swap premendo <c>c</c>. Nuovamente
<c>mac-fdisk</c> chiede da quale blocco si desidera partire per questa
partizione. Poiché prima si è usato <c>2</c> per creare la partizione
Apple_Bootstrap, ora inserire <c>3p</c>. Come dimensione inserire <c>512M</c>
(o la dimensione desiderata -- tuttavia è consigliata 512MB). Come nome
inserire <c>swap</c> (obbligatorio).
</p>

<p>
Per creare la partizione di root, premere <c>c</c>, seguito da <c>4p</c>
per selezionare il blocco di partenza della partizione di root. Come dimensione
inserire nuovamente <c>4p</c>. <c>mac-fdisk</c> interpreta questo come un
"usa tutto lo spazio disponibile". Come nome inserire <c>root</c>
(obbligatorio).
</p>

<p>
Per completare, scrivere la tabella delle partizioni sul disco premendo
<c>w</c> e <c>q</c> per uscire da <c>mac-fdisk</c>.
</p>

<note>
Per essere sicuri che sia tutto a posto si dovrebbe riavviare mac-fdisk e
controllare che tutte le partizioni siano corrette. Se non c'è nessuna delle
partizioni precedentemente create si devono reinizializzare le partizioni
premendo "i" in mac-fdisk. Notare che questo ricrea la tabella delle partizioni
eliminandole tutte.
</note>

<p>
Adesso che le partizioni sono state create, continuare con <uri
link="#filesystems">Creare i filesystem</uri>.
</p>

</body>
</section>
<section id="parted">
<title>Alternativa: usare parted (Pegasos) per partizionare il disco</title>
<body>

<p>
<c>parted</c>, the Partition Editor, gestisce le partizioni HFS+ usate da Mac
OS e Mac OS X. Con questo programma è possibile ridurre le dimensioni delle
partizioni Mac e creare spazio per le partizioni Linux. Comunque l'esempio
seguente descrive soltanto il partizionamento per i sistemi Pegasos.
</p>

<p>
Per iniziare avviare <c>parted</c>:
</p>

<pre caption="Avviare parted">
# <i>parted /dev/hda</i>
</pre>

<p>
Se il disco non è partizionato avviare <c>mklabel amiga</c> per creare una
nuova etichetta per il disco.
</p>

<p>
Per vedere la tabella delle partizioni premere <c>print</c> in qualsiasi
momento all'interno di parted. Se si cambia idea o se si fa un errore è
possibile premere <c>Ctrl-c</c> in qualsiasi momento per interrompere parted.
</p>

<p>
Se si vuole installare pure MorphOS su un sistema Pegasos, creare un filesystem
affs1 con il nome "BI0" (BI zero) all'inizio del disco. 32MB dovrebbero essere
più che sufficienti per contenere il kernel di MorphOS. Se si utilizza un
sistema Pegasos I o se si vuole usare reiserfs o xfs, si deve memorizzare il
kernel di Linux in questa partizione (i sistemi Pegasos II possono avviare solo
da partizioni ext2/etx3 o affs1). Per creare la partizione eseguire
<c>mkpart primary affs1 START END</c> dove <c>START</c> e <c>END</c> devono
essere sostituiti con l'inizio e la fine (in MB) della partizione (per esempio
<c>0 32</c> crea una partizione da 32MB che comincia da 0 MB e finisce al MB
32.
</p>

<p>
Si devono creare 2 partizioni per Linux, una per il filesystem principale
destinato ai programmi, ecc., e l'altra per lo swap. Per creare il filesystem
principale si deve anzitutto decidere quale filesystem utilizzare. Le
possibilità sono ext2, ext3, reiserfs e xfs. Se non si sa cosa scegliere
utilizzare ext3. Eseguire <c>mkpart primary ext3 START END</c> per creare una
partizione ext3. Anche qui si devono sostituire <c>START</c> e <c>END</c> con
il punto d'inizio e di fine (in MB) della partizione.
</p>

<p>
Si consiglia di creare la partizione di swap di dimensioni del doppio della
quantità di RAM installata sul proprio computer. Probabilmente è sufficiente
anche una partizione di swap più piccola se non si intende avviare molte
applicazioni contemporaneamente (tuttavia si consigliano almeno 512MB). Per
creare la partizione di swap eseguire
<c>mkpart primary linux-swap START END</c>.
</p>

<p>
Annotare i numeri delle partizioni, poiché sono necessari durante il processo
d'installazione. Per visualizzare i numeri eseguire <c>print</c>. Le partizioni
sono del tipo <path>/dev/hdaX</path> dove X è il numero della partizione.
</p>

<p>
Per uscire da parted eseguire semplicemente <c>quit</c>.
</p>

</body>
</section>
<section id="filesystems">
<title>Creare i filesystem</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Ora che le partizioni sono state create, è il momento di inserire i
filesystem. Se non si è interessati alla scelta del filesystem e vanno bene
quelli che si usano di default in questo Manuale, continuare con la sezione
<uri link="#filesystems-apply">Applicare un filesystem a una partizione</uri>.
Altrimenti ecco una descrizione dei filesystem disponibili.
</p>

</body>
</subsection>
<subsection>
<title>Filesystem</title>
<body>

<p>
Sono disponibili diversi filesystem. ext2, ext3, ReiserFS e XFS sono
considerati stabili per l'architettura PPC.
</p>

<p>
<b>ext2</b> è il vero e proprio filesystem di Linux ma non possiede il
supporto per il metadata journaling, il che significa che le routine che
effettuano all'avvio i controlli sul filesystem ext2 possono impiegare diverso
tempo. Al momento esiste una scelta abbastanza ampia di filesystem journaled di
nuova generazione che sono in grado di effettuare controlli sulla consistenza
molto velocemente e sono generalmente preferiti alle controparti non-journaled.
I filesystem journaled prevengono i lunghi tempi di attesa che solitamente si
riscotrano quando viene riavviato il sistema e il filesystem si trova in uno
stato inconsistente.
</p>

<p>
<b>ext3</b> è la versione journaled del filesystem ext2, fornisce il metadata
journaling per un veloce recupero dei dati in aggiunta ad altre
caratteristiche di journaling avanzate come full data e ordered data
journaling. ext3 è un filesystem davvero molto valido e affidabile. Ha una
ulteriore opzione di indice hashed b-tree che abilita alte prestazioni in quasi
tutte le situazioni. Si può abilitare questo indice aggiungendo
<c>-O dir_index</c> al comando <c>mke2fs</c>. In poche parole, ext3 è un
filesystem eccellente.
</p>

<p>
<b>ReiserFS</b> è un filesystem basato su B*-tree che offre ottime performance
generali e si dimostra notevolmente superiore a ext2 e ext3 con file di piccole
dimensioni (file minori di 4k), spesso di un fattore 10-15. ReiserFS scala
inoltre molto bene e supporta il metadata journaling. Dal kernel 2.4.18 in poi,
ReiserFS ha raggiunto la solidità che lo porta a essere caldamente
raccomandato sia per un uso generico che per casi estremi come la crezione di
grandi filesystem, l'uso su molti file piccoli, file molto grandi e directory
contenenti decine di migliaia di file.
</p>

<p>
<b>XFS</b> è un filesystem con metadata journaling ricco di caratteristiche
interessanti e ottimizzato per una forte scalabilità. Se ne raccomanda l'uso
su sistemi Linux dotati di unità di memorizzazione con canali in fibra o
high-end SCSI e alimentazione continua. Data l'aggressività con la quale XFS
si serve della cache in RAM per i dati in transito, programmi progettati in
modo non adeguato (quelli che non prendono precauzioni quando scrivono file su
disco, e ce ne sono diversi) possono perdere una discreta quantità di dati se
il sistema si arresta in modo inaspettato.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Applicare un filesystem a una partizione</title>
<body>

<p>
Per creare un filesystem su una partizione o volume, sono disponibili tool per
ogni filesystem possibile:
</p>

<table>
<tr>
  <th>Filesystem</th>
  <th>Comando per la creazione</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mkfs.ext2</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mkfs.ext3</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkfs.reiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
</table>

<p>
Per esempio, per avere la partizione principale (in questo caso
<path>/dev/hda4</path>) in ext3 si usa:
</p>

<pre caption="Applicare un filesystem su una partizione">
# <i>mkfs.ext3 /dev/hda4</i>
</pre>

<p>
Ora si procede alla creazione dei filesystem sulle partizioni (o volumi logici)
create precedentemente.
</p>

<note>
Nei sistemi Pegasos II le partizioni che contengono il Kernel devono essere
ext2 o ext3. I sistemi NewWorld possono avviare dai filesystem ext2, ext3, XFS,
ReiserFS o anche HFS/HFS+. Su sistemi OldWorld avviati con BootX, il kernel
deve essere posto su una partizione HFS, ma sarà
completato quando si configura il bootloader.
</note>

</body>
</subsection>
<subsection>
<title>Attivare la partizione di swap</title>
<body>

<p>
<c>mkswap</c> è il comando usato per inizializzare le partizioni di swap:
</p>

<pre caption="Inizializzare la partizione di swap">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
Per attivare la partizione di swap usare <c>swapon</c>:
</p>

<pre caption="Attivare la partizione di swap">
# <i>swapon /dev/hda3</i>
</pre>

<p>
Creare e attivare la partizione di swap subito.
</p>

</body>
</subsection>
</section>
<section>
<title>Montare</title>
<body>

<p>
Ora che le partizioni sono inizializzate e hanno un filesystem, è il momento
di usare il comando <c>mount</c> per montarle. Non dimenticarsi di creare le
necessarie directory di mount. Nell'esempio ecco come montare la partizioni
principale:
</p>

<pre caption="Montare le partizioni">
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda4 /mnt/gentoo</i>
</pre>

<note>
Se si vuole che <path>/tmp</path> risieda in una partizione separata,
assicurarsi di cambiare i permessi dopo il mount:
<c>chmod 1777 /mnt/gentoo/tmp</c>. Questo vale anche per
<path>/var/tmp</path>.
</note>

<p>
E' necessario inoltre montare il filesystem proc (una interfaccia
virtuale con il kernel) su <path>/proc</path>. Ma prima si devono mettere
i file sulle partizioni.
</p>

<p>
Ora continuare con <uri link="?part=1&amp;chap=5">
Copia dei file di installazione di Gentoo</uri>.
</p>

</body>
</section>
</sections>
