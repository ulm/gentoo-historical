<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-net-functions.xml,v 1.2 2005/12/23 21:09:55 so Exp $ -->

<sections>

<version>1.2</version>
<date>2005-12-22</date>

<section>
<title>Funzioni di intercettazioni standard</title>
<body>

<p>
Quattro funzioni possono essere definite, che sono chiamate in prossimità
delle operazioni di <c>avvio</c>/<c>chiusura</c>. Le funzioni sono chiamate
con il nome dell'interfaccia in modo che una funzione possa controllare
adattatori multipli.
</p>

<p>
I valori di ritorno per le funzioni <c>preup</c> e <c>predown</c> dovrebbero
essere 0 (successo) per indicare che la configurazione o la deconfigurazione
dell'interfaccia può continuare. Se <c>preup</c> ritorna con un valore
non-zero, allora la configurazione dell'interfaccia viene chiusa. Se
<c>predown</c> ritorna con un valore non-zero, allora all'interfaccia non
viene permesso di continuare la deconfigurazione.
</p>

<p>
I valori di ritorno per le funzioni <c>postup</c> e <c>postdown</c> sono
ignorati poichè non c'è niente da fare se indicano un fallimento.
</p>

<p>
<c>${IFACE}</c> è impostata sull'interfaccia che è portata up/down.
<c>${IFVAR}</c> è <c>${IFACE}</c> convertita al nome della variabile che bash
permette.
</p>

<pre caption="Esempi di funzione pre/post up/down">
preup() {
  <comment># Test per link sull'interfaccia prima di avviarla. Questo
  # funziona solo su alcuni adattatori di rete e richiede che il pacchetto
  # mii-diag sia installato.</comment>
  if mii-tool ${IFACE} 2> /dev/null | grep -q 'no link'; then
    ewarn "No link on ${IFACE}, aborting configuration"
    return 1
  fi

  <comment># Test per link sull'interfaccia prima di avviarla. Questo
  # funziona solo su alcuni adattatori di rete e richiede che il pacchetto
  # ethtool sia installato.</comment>
  if ethtool ${IFACE} | grep -q 'Link detected: no'; then
    ewarn "No link on ${IFACE}, aborting configuration"
    return 1
  fi

  <comment># Ricordare di ritornare a 0 quando funziona</comment>
  return 0
}

predown() {
  <comment># Il default nello script è testare NFS root e non permettere
  # che le interfacce si spengono. Notare che se si specifica una funzione
  # predown() si sovrappone questa logica. Eccola qui se la si vuole vedere</comment>
  if is_net_fs /; then
    eerror "root filesystem is network mounted -- can't stop ${IFACE}"
    return 1
  fi

  <comment># Ricordare di ritornare a 0 quando funziona</comment>
  return 0
}

postup() {
  <comment># Questa funzione potrebbe essere usata, per esempio, per
  # registrare un servizio dinamico DNS. Un'altra possibilità potrebbe essere
  # mandare/ricevere mail quando l'interfaccia è avviata.</comment>
       return 0
}

postdown() {
  <comment># Questa funzione è più per completezza. Ancora non
  # c'è niente da fare con essa.</comment>
  return 0
}
</pre>

</body>
</section>
<section>
<title>Funzioni di intercettazioni per Wireless Tool</title>
<body>

<note>
Non funziona con WPA Supplicant - ma le variabili <c>${ESSID}</c> e
<c>${ESSIDVAR}</c> sono disponibili nella funzione <c>postup()</c>
</note>

<p>
Due funzioni possono essere definite, che sono chiamate in prossimità della
funzione associata. Le funzioni sono chiamate con il nome
dell'interfaccia in modo che una funzione possa controllare adattatori
multipli.
</p>

<p>
I valori di ritorno per la funzione <c>preassociate</c> dovrebbero essere 0
(successo) per indicare che la configurazione o la deconfigurazione
dell'interfaccia può continuare. Se la <c>preassociate</c> ritorna a un
valore non-zero, allora la configurazione dell'interfaccia viene chiusa.
</p>

<p>
Il valore di ritorno per la funzione <c>postassociate</c> è ignorato poichè
non c'è niente da fare se indica un fallimento.
</p>

<p>
<c>${ESSID}</c> è impostata all'esatto ESSID dell'AP con cui si è connessi.
<c>${ESSIDVAR}</c> è <c>${ESSID}</c> convertita al nome della variabile che
bash permette.
</p>

<pre caption="Funzioni di associazione pre/post">
preassociate() {
  <comment># Questo sotto aggiunge due variabili di configurazione
  # leap_user_ESSID e leap_pass_ESSID. Quando sono entrambe configurate per
  # essere connesse a ESSID, si esegue lo script CISCO LEAP</comment>

  local user pass
  eval user=\"\$\{leap_user_${ESSIDVAR}\}\"
  eval pass=\"\$\{leap_pass_${ESSIDVAR}\}\"

  if [[ -n ${user} &amp;&amp; -n ${pass} ]]; then
    if [[ ! -x /opt/cisco/bin/leapscript ]]; then
      eend "For LEAP support, please emerge net-misc/cisco-aironet-client-utils"
      return 1
    fi
    einfo "Waiting for LEAP Authentication on \"${ESSID//\\\\//}\""
    if /opt/cisco/bin/leapscript ${user} ${pass} | grep -q 'Login incorrect'; then
      ewarn "Login Failed for ${user}"
      return 1
    fi
  fi

  return 0
}

postassociate() {
  <comment># Questa funzione è più per completezza. Ancora non
  # c'è niente da fare con essa</comment>

  return 0
}
</pre>

<note>
<c>${ESSID}</c> e <c>${ESSIDVAR}</c> non sono disponibili nelle funzioni
<c>predown()</c> e <c>postdown()</c>
</note>

</body>
</section>

</sections>
