<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-working-portage.xml,v 1.1 2004/03/24 10:11:46 mush Exp $ -->

<sections>
<section>
<title>Ottenere informazioni sui pacchetti</title>
<subsection>
<title>Il signore di tutti gli strumenti: emerge</title>
<body>

<p>
Il principale strumento di Portage che molti utenti utilizzano è <c>emerge</c>. E' stato già
usato durante l'installazione di Gentoo e nel precedente capitolo, in
questo capitolo si tratta di <c>emerge</c> e del suo utilizzo per risolvere i problemi relativi al software.
</p>

<p>
<c>emerge</c> è il comando usato per installare, rimuovere, interrogare e mantenere
i pacchetti software. E' un front-end per <c>ebuild</c>; le persone interessate
a diventare professionisti di Gentoo devono imparare in un secondo tempo come usare <c>ebuild</c>. Per
ora, ci si concentra su <c>emerge</c> e su quelle funzionalità che mancano a <c>ebuild</c>
(come risolvere le dipendenze, cercare nel Portage tree, etc.).
</p>

<p>
Poichè <c>emerge</c> è lo strumento più importante per gli utenti Gentoo, ha una lunga
pagina di manuale leggibile con il comando <c>man emerge</c>. E' possibile vedere l'help interno
del comando eseguendo <c>emerge --help</c>.
</p>

<pre caption="Ottenere aiuto su emerge">
# <i>man emerge</i>
# <i>emerge --help</i>
</pre>

</body>
</subsection>
<subsection>
<title>L'insieme dei pacchetti</title>
<body>

<p>
Prima di continuare a descrivere <c>emerge</c>, si considera
il Portage Tree che si trova in <path>/usr/portage</path>. Per elenacare il contenuto di 
una directory si può usare <c>ls --classify</c>  il quale mostra le directory con uno "/" finale.
</p>

<pre caption="Viewing the Portage Tree">
# <i>cd /usr/portage; ls --classify</i>
app-admin/       dev-ml/            gnome-libs/     net-print/
app-arch/        dev-perl/          gnome-office/   net-wireless/
app-benchmarks/  dev-php/           header.txt      net-www/
app-cdr/         dev-python/        incoming/       net-zope/
app-crypt/       dev-ruby/          jython/         packages/
app-dicts/       dev-tcltk/         kde-apps/       profiles/
app-doc/         dev-tex/           kde-base/       releases/
app-editors/     dev-util/          kde-i18n/       scripts/
app-emacs/       distfiles/         kde-libs/       sec-policy/
app-emulation/   eclass/            licenses/       skel.ChangeLog
app-games/       experimental/      media-fonts/    skel.ebuild
app-gnustep/     files/             media-gfx/      skel.metadata.xml
app-i18n/        fresco-base/       media-libs/     snapshots/
app-misc/        games-action/      media-plugins/  sys-apps/
app-office/      games-arcade/      media-radio/    sys-build/
app-pda/         games-board/       media-sound/    sys-cluster/
app-portage/     games-emulation/   media-tv/       sys-devel/
app-sci/         games-engines/     media-video/    sys-fs/
app-shells/      games-fps/         metadata/       sys-kernel/
app-text/        games-kids/        net-analyzer/   sys-kmods/
app-vim/         games-misc/        net-apache/     sys-libs/
app-xemacs/      games-mud/         net-dialup/     unix2tcp/
berlin-base/     games-puzzle/      net-dns/        x11-base/
dev-ada/         games-roguelike/   net-firewall/   x11-libs/
dev-cpp/         games-rpg/         net-fs/         x11-misc/
dev-db/          games-server/      net-ftp/        x11-plugins/
dev-dotnet/      games-simulation/  net-im/         x11-terms/
dev-embedded/    games-sports/      net-irc/        x11-themes/
dev-games/       games-strategy/    net-libs/       x11-wm/
dev-haskell/     games-util/        net-mail/       xfce-base/
dev-java/        glep/              net-misc/       xfce-extra/
dev-lang/        gnome-apps/        net-nds/
dev-libs/        gnome-base/        net-news/
dev-lisp/        gnome-extra/       net-p2p/
</pre>

<p>
Il Portage tree ha alcune sottodirectory, molte di loro sono
le <e>categorie</e> in cui risiedono i pacchetti di Gentoo, chiamati <e>ebuild</e>.
Ad esempio, <path>app-office</path>:
</p>

<pre caption="Guardare una categoria">
# <i>cd app-office; ls --classify</i>
abiword/     gnotime/   kmymoney2/  ooodi/              plan/     timestamp.x
dia/         gnucash/   koffice/    oooqs/              qhacc/
dia2code/    gnumeric/  lxbank/     openoffice/         sc/
facturalux/  ical/      lyx/        openoffice-bin/     scribus/
gaby/        kbudget/   mdbtools/   openoffice-ximian/  siag/
gnofin/      khacc/     mrproject/  phprojekt/          texmacs/
</pre>

<p>
All'interno di una categoria si trovano i pacchetti che risiedono in quella categoria, con una
directory separata per ogni pacchetto.
</p>

<pre caption="Guardare un pacchetto">
# <i>cd openoffice; ls --classify</i>
ChangeLog  files/        openoffice-1.0.3-r1.ebuild  openoffice-1.1.0-r2.ebuild
Manifest   metadata.xml  openoffice-1.1.0-r1.ebuild  openoffice-1.1.0.ebuild
</pre>

<p>
Nella directory dell'esempio sono memorizzati quattro ebuild. I loro nomi sono
pressocchè identici: differiscono solo per il numero di versione.
Il contenuto di ogni pacchetto è un semplice script. 
Non sono così importanti da conoscere se volete solo utilizzare Gentoo.
</p>

<p>
Gli altri file sono <path>ChangeLog</path> (che contiene la lista
dei cambiamenti fatti alle ebuild), <path>Manifest</path> (che contiene il
checksum e la dimensione di tutti i file nella directory) e
<path>metadata.xml</path> (che contiene molte informazioni sul pacchetto,
come il gruppo responsabile -- chiamato <e>herd</e> -- e molte altre descrizioni dettagliate).
</p>

<p>
Nella directory <path>files</path> si trovano dei file aggiuntivi, necessari a
Portage: digest (checksum e permessi dei file necessari a una singola versione del pacchetto),
patch, esempi di file di configurazione, etc.
</p>

<pre caption="Osservare i file aggiuntivi">
# <i>cd files; ls --classify</i>
1.0.3/  digest-openoffice-1.0.3-r1  digest-openoffice-1.1.0-r1
1.1.0/  digest-openoffice-1.1.0     digest-openoffice-1.1.0-r2
# <i>cd 1.1.0; ls --classify</i>
fixed-gcc.patch      ooffice-wrapper-1.3
newstlportfix.patch  openoffice-1.1.0-linux-2.6-fix.patch
no-mozab.patch       openoffice-1.1.0-sparc64-fix.patch
nptl.patch
</pre>

<p>
Nella root del Portage tree (<path>/usr/portage</path>) ci sono anche altre directory, 
che non sono categorie. Vengono trattate più tardi in questo stesso capitolo.
</p>

</body>
</subsection>
<subsection>
<title>Ricercare un pacchetto</title>
<body>

<p>
I nuovi utenti di Linux o Gentoo, potrebbero non sapere che programmi servono per assolvere un dato compito.
Per facilitare la ricerca, <c>emerge</c> fornisce un modo per cercare nei pacchetti disponibili sul
sistema. Ci sono due modi con cui cercare un pacchetto:
dal <e>nome</e>, o dal <e>nome</e> e dalla <e>descrizione</e>.
</p>

<p>
Per ricercare nel Portage tree per nome, si usa <c>emerge search</c>. Per 
esempio, per cercare <c>mozilla</c>:
</p>

<pre caption="Mostrare le informazioni su mozilla">
# <i>emerge search mozilla</i>
Searching...   
[ Results for search key : mozilla ]
[ Applications found : 5 ]
<comment>(Parte dell'output è stato rimosso per migliorare la leggibilità)</comment>
*  net-www/mozilla
      Latest version available: 1.5-r1
      Latest version installed: 1.4-r3
      Size of downloaded files: 29,153 kB
      Homepage:    http://www.mozilla.org
      Description: The Mozilla Web Browser

*  net-www/mozilla-firebird
      Latest version available: 0.7
      Latest version installed: [ Not Installed ]
      Size of downloaded files: 37,850 kB
      Homepage:    http://www.mozilla.org/projects/firebird/
      Description: The Mozilla Firebird Web Browser
<comment>(...)</comment>
</pre>

<p>
Per cercare anche nella descrizione del pacchetto, si usa l'argomento
<c>--searchdesc</c>:
</p>

<pre caption="Cercare anche attraverso la descrizione">
# <i>emerge --searchdesc mozilla</i>
Searching...   
[ Results for search key : mozilla ]
[ Applications found : 10 ]
<comment>(Parte dell'output è stato rimosso per migliorare la leggibilità)</comment>
*  dev-libs/nss-3.8
      Latest version available: 3.8
      Latest version installed: 3.8
      Size of downloaded files:  2,782 kB
      Homepage:    http://www.mozilla.org/projects/security/pki/nss/
      Description: Mozilla's Netscape Security Services Library that implements PKI support
</pre>

<p>
L'output di <c>emerge</c> fornisce informazioni sulla categoria e il nome
del pacchetto, l'ultima vesrione disponibile, la versione corrententemente installata, 
la dimensione del file da scaricare, la homepage e una breve descrizione.
</p>

<p>
Quando Portage deve installare un pacchetto, esso necessita dei sorgenti necessari (o del
pacchetto precompilato). Esso prima controlla il contenuto di
<path>/usr/portage/distfiles</path> (per i sorgenti) o
<path>/usr/portage/packages/All</path> (per i pacchetti precompilati) per vedere se i file
necessari sono disponibili. Se no, scarica i file e li mette in queste directory.
</p>

<!--
<note>
Cercare nel Portage Tree, specialmente usando <c>- -searchdesc</c>, impiega
molto tempo. Ci sono disponibili altri tool più performanti. Verranno descritti
nel capitolo  <uri link="?part=2&amp;chap=7">Gentoolkit e
altri Tool</uri>.
</note>
-->

</body>
</subsection>
<subsection>
<title>Guardare il ChangeLog</title>
<body>

<p>
Nel Portage Tree, ci sono dei file ChangeLog per
ogni pacchetto. E' possibile vedere anche i ChangeLog tra le versioni disponibili e
la versione installata con <c>emerge</c> usando l'opzione
<c>--pretend --changelog</c> (o <c>-pl</c>). Per esempio
il ChangeLog di <c>gnumeric</c>:
</p>

<pre caption="Vedere il ChangeLog di gnumeric">
# <i>emerge --pretend --changelog gnumeric</i>
<comment>(Parte dell'output è stato rimosso per migliorare la leggibilità)</comment>
*gnumeric-1.2.2

  27 Nov 2003; foser &lt;foser@gentoo.org&gt; gnumeric-1.2.2.ebuild :
  New release, requested in #34492
  updated deps

  12 Nov 2003; Jason Wever &lt;weeve@gentoo.org&gt; gnumeric-1.2.0.ebuild:
  Marked stable on sparc, fixes bug #32405.

  14 Oct 2003; Jason Wever &lt;weeve@gentoo.org&gt; gnumeric-1.0.8.ebuild:
  Added ~sparc keyword.  Fixes bug #31150.
</pre>

</body>
</subsection>
</section>
<section>
<title>Aggiornare Portage</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Se il Portage Tree non viene aggiornato regolarmente si potrebbero
perdere i nuovi pacchetti e le versioni disponibili nel sistema.
Ciò significa che il sistema potrebbe diventare obsoleto molto presto e
si perdono le correzioni e i rimedi per possibili problemi di sicurezza.
</p>

<p>
Ci sono vari modi per aggiornare il Portage Tree. Il metodo più popolare
è di usare un <uri link="/main/en/mirrors.xml">mirror rsync</uri>.
Un'altro è quello di usare uno snapshot di Portage (in caso di  firewall o se si è
su una rete che impedisce l'uso di server rsync).
</p>

</body>
</subsection>
<subsection>
<title>Selezionare un Mirror per rsync</title>
<body>

<p>
E' consigliabile prima selezionare un  <uri
link="/main/en/mirrors.xml">mirror</uri> veloce vicino a voi. E' possibile farlo manualmente
(configurando la variabile <c>SYNC</c> in <path>/etc/make.conf</path>) o usare
<c>mirrorselect</c> che lo fa in automatico. La variabile <c>SYNC</c>
viene discussa in seguito.
Innanzitutto bisogna installare <c>mirrorselect</c>:
</p>

<pre caption="Installare mirrorselect">
# <i>emerge --usepkg mirrorselect</i>
</pre>

<p>
Ora eseguire <c>mirrorselect</c> in modo che selezioni automaticamente un mirror
(viene configurato anche il mirror di Portage per i sorgenti):
</p>

<pre caption="Eseguire mirrorselect">
# <i>mirrorselect -a -s3</i>
</pre>

</body>
</subsection>
<subsection>
<title>Aggiornare Portage</title>
<body>

<p>
Per aggiornare Portage usando rsync, bisogna eseguire semplicemente <c>emerge sync</c>:
</p>

<pre caption="Aggiornare Portage usando emerge sync">
# <i>emerge sync</i>
</pre>

<p>
Se fallisce (a causa di problemi di rete o di firewall), si può provare ad usare
<c>emerge-webrsync</c> il quale scarica uno snapshot del Portage Tree usando
<c>wget</c>. Ciò significa che è possibile anche usare un proxy.
Si è visto come configurare il sistema per usare un proxy durante l'installazione di Gentoo.
</p>

<pre caption="Aggiornare  Portage usando emerge-webrsync">
# <i>emerge-webrsync</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Mantenere il Software</title>
<subsection>
<title>Compilare o precompilato?</title>
<body>

<p>
Gentoo fornisce le ebuild, i pacchetti di Gentoo. Per installare
un'ebuild, si può scegliere tra <e>compilare</e> il pacchetto o
usare un pacchetto <e>precompilato</e>. Ma quali sono i vantaggi/svantaggi di entrambi
gli approcci, e possono essere usati indistintamente?
</p>

<p>
Compilare un pacchetto impiega molto tempo (specialmente
con scarse risorse o nella compilazione di grandi pacchetti come<uri
link="http://www.kde.org">KDE</uri>, <uri
link="http://www.openoffice.org">OpenOffice.org</uri>, etc.). Compilando il pacchetto,
 si possono usare le flag <c>USE</c> per configurare il pacchetto sul proprio sistema.
e inoltre, si possono anche definire le ottimizzazioni con cui (con le variabili <c>CFLAGS</c> 
e <c>CXXFLAGS</c>) compilare il pachetto.
</p>

<p>
Usando i pacchetti precompilati si riduce il tempo di installazione (non è necessaria
nessuna compilazione) ma si perdono i vantaggi delle flag <c>USE</c>,
<c>CFLAGS</c> e <c>CXXFLAGS</c>.
</p>

<p>
Come detto precedentemente, i pacchetti precompilati sono memorizzati nella 
directory <path>/usr/portage/packages/All</path>, mentre i sorgenti dei
pacchetti sono in <path>/usr/portage/distfiles</path>. Dopo l'installazione
di un pacchetto si può rimuovere il precompilato o i sorgenti dalle rispettive
directory. Comunque, si potrebbero voler tenere i pacchetti/sorgenti delle ultime versioni, in caso sia necessaria la reinstallazione del pacchetto (in modo che non debba essere scaricato nuovamente).
</p>

</body>
</subsection>
<subsection>
<title>Installare il Software dai sorgenti</title>
<body>

<p>
Per installare un pacchetto, si usa il comando <c>emerge</c>. Per compilarlo si usa
semplicemente <c>emerge &lt;nome-pacchetto&gt;</c> o <c>emerge
&lt;category&gt;/&lt;nome-pacchetto&gt;</c>. Ad esempio ecco l'installazione di <c>gnumeric</c>:
</p>

<pre caption="Compilare gnumeric">
# <i>emerge gnumeric</i>
</pre>

<p>
Questo scarica il codice sorgente,  lo scompatta, compila ed installa 
il pacchetto sul sistema. Viene effettuata la stessa operazione con tutte le dipendenze. 
Per vedere che dipendenze vengono installate tutte insieme, si usa l'opzione
<c>--pretend</c> (<c>-p</c> in breve):
</p>

<pre caption="Dipendenze di gnumeric">
# <i>emerge --pretend gnumeric</i>
</pre>

<p>
Per scaricare il codice sorgente del pacchetto e delle sue dipendenze, 
senza compilarlo, si usa <c>--fetchonly</c>
(<c>-f</c> in breve):
</p>

<pre caption="Scaricare i sorgenti di gnumeric">
# <i>emerge --fetchonly gnumeric</i>
</pre>

<p>
Per vedere da dove <c>emerge</c> scarica i sorgenti, si possono combinare le opzioni
<c>--fetchonly</c> e <c>--pretend</c>:
</p>

<pre caption="Mostrare gli URL dei sorgenti di gnumeric">
# <i>emerge --fetchonly --pretend gnumeric</i>
</pre>

<p>
Si può anche scegliere di installare una specifica versione di un pacchetto.
Per esempio, per installare una versione di gnumeric più vecchia della 1.2 -- per
una qualunque ragione :) si può scrivere:
</p>

<pre caption="Installare una specifica versione di gnumeric">
# <i>emerge "&lt;gnumeric-1.2"</i>
</pre>

<p>
Altre possibilità sono "&gt;" (ultima versione) e "=" (l'esatta versione).
</p>

</body>
</subsection>
<subsection>
<title>Installare pacchetti precompilati</title>
<body>

<p>
Per installare un pacchetto precompilato, si usa l'opzione <c>--usepkg</c>
(<c>-k</c> in breve). Questo comando utilizza il pacchetto binario disponibile in
<path>/usr/portage/packages/All</path> <e>se</e> il pacchetto e la versione dell'applicazione che volete installare coincidono.
</p>

<pre caption="Installare un pacchetto precompilato di gnumeric">
# <i>emerge --usepkg gnumeric</i>
</pre>

<p>
Per usare il pacchetto binario anche se le versioni non coincidono, si usa
<c>--usepkgonly</c> (<c>-K</c> in breve).
</p>

<pre caption="Installare il pacchetto precompilato di gnumeric">
# <i>emerge --usepkgonly gnumeric</i>
</pre>

<p>
Se sul sistema non è presente il pacchetto precompilato, 
<c>emerge</c> lo scarica dal mirror definito nella variabile <c>PORTAGE_BINHOST</c>
dichiarata in <path>/etc/make.conf</path>.
</p>

<p>
Per scaricare un pacchetto binario in caso non esista sul sistema si usa<c>--getbinpkg</c> (<c>-g</c> in breve):
</p>

<pre caption=" Scaricare e Installare il pacchetto precompilato di gnumeric">
# <i>emerge --getbinpkg gnumeric</i>
</pre>

<p>
Questo comando scarica il pachetto e le informazioni relative al pacchetto e lo installa 
nel vostro sistema, insieme alle dipendenze. Per vedere  
quali dipendenze vengono installate con esso, si usa l'opzione <c>--pretend</c>  
(<c>-p</c> in breve):
</p>

<pre caption="Dipendenze per il pacchetto precompilato di gnumeric">
# <i>emerge --getbinpkg --pretend gnumeric</i>
</pre>

<p>
Si può anche scegliere di scaricare il pacchetto precompilato (e le informazioni
relative) <e>senza</e> controllare le informazioni sul vostro sistema e
<e>senza</e> usare il pacchetto precompilato presente nel vostro sistema (se
applicabile), usate l'opzione <c>--getbinpkgonly</c> (<c>-G</c> in breve):
</p>

<pre caption="Installare un pacchetto precompilato senza usare le informazioni locali">
# <i>emerge --getbinpkgonly gnumeric</i>
</pre>

<p>
si può anche scegliere di installare una specifica versione di un pacchetto.
Per esempio, se si desidera installare una versione di gnumeric più vecchia della 1.2 -- per una qualunque ragione
 :) si può scrivere:
</p>

<pre caption="Installare una specifica versione di gnumeric">
# <i>emerge --usepkg "&lt;gnumeric-1.2"</i>
</pre>

<p>
Le altre possibilità sono "&gt;" (ultima versione) e "=" ( l'esatta versione).
</p>


</body>
</subsection>
<subsection>
<title>Lavorare con le dipendenze</title>
<body>

<p>
Portage ha un buon supporto per il trattamento delle dipendenze. Sebbene solitamente
non ci si debba preoccupare di questo (le dipendenze sono risolte automaticamente
da Portage) alcuni utenti potrebbero voler sapere come lavorare con <c>emerge</c>
e le dipendenze.
</p>

<p>
Per esempio, per fare in modo che Portage consideri che nessuna delle dipendenze di un pacchetto sia installata, si può usare <c>--emptytree</c> (<c>-e</c> in breve). Questo è utile
con <c>--pretend</c> per mostrare l'albero delle dipendenze completo per ogni particolare
pacchetto. Senza <c>--pretend</c>, <c>emerge</c> ricompila
tutti i pacchetti elencati. Comunque, le <c>glibc</c> <e>non</e> vengono elencate tra le dipendenze per ragioni di sicurezza. 
</p>

<pre caption="Mostrare tutte le dipendenze di gnumeric">
# <i>emerge --emptytree --pretend gnumeric</i>
</pre>

<p>
Un'altro argomento è <c>--nodeps</c>, che chiede a Portage di provare
a installare il pacchetto senza tener conto delle dipendenze. E' banale dire
che questo può provocare errori.
</p>

<pre caption="Installare gnumeric senza tener conto delle dipendenze">
# <i>emerge --nodeps gnumeric</i>
</pre>

<p>
 Il contrario di <c>--nodeps</c> è <c>--onlydeps</c>, che fa in modo che Portage
installi tutte le dipendenze di un pacchetto, ma non il pacchetto stesso:
</p>

<pre caption="Installare le dipendenze di gnumeric">
# <i>emerge --onlydeps gnumeric</i>
</pre>

</body>
</subsection>
<subsection>
<title>Aggiornare il vostro sistema</title>
<body>

<p>
Portage riconosce due tag speciali per denotare un set di pacchetti software:
<e>system</e> e <e>world</e>. Se ne è già vista la forma se si è installato 
Gentoo senza usare lo <e>stage3</e>. Per rinfrescare le quanto visto:
<e>system</e> è la collezione dei pacchetti <e>core</e>, necessari per avere
un sistema Gentoo funzionante.
</p>

<p>
Il tag <e>world</e> consiste in tutto il software che installato nel sistema più
le informazioni <e>system</e>. In altre parole, ogni volta che si installa un pacchetto con 
emerge usando <c>emerge &lt;nome-pacchetto&gt;</c>, il
<c>&lt;nome-pacchetto&gt;</c> è registrato nel file <e>world</e> 
(<path>/var/cache/edb/world</path>). Le dipendenze <e>non</e> fanno parte del file
<e>world</e> ma si possono aggiungere dopo.
</p>

<p>
Se si desidera aggiornare i pacchetti di sistema, si usa l'opzione <c>--update</c> 
(<c>-u</c> in breve):
</p>

<pre caption="Aggiornare i pacchetti di sistema">
# <i>emerge --update system</i>
</pre>

<p>
Un approccio identico può essere usato per i pacchetti world:
</p>

<pre caption="Aggiornare l'intero sistema">
# <i>emerge --update world</i>
</pre>

<p>
Inoltre, se si vuole vedere cosa vuole <c>emerge</c> stia per aggiornare, si usa
l'opzione <c>--pretend</c> insieme all'opzione <c>--update</c>:
</p>

<pre caption="Controllare l'aggiornamento del sistema">
# <i>emerge --pretend --update world</i>
<comment>(Some output removed to improve readability)</comment>
[ebuild     U ] net-misc/wget-1.9-r1 [1.9] 
[ebuild     UD] media-video/dvdauthor-0.5.0 [0.5.3] 
[ebuild     U ] net-analyzer/ethereal-0.9.16 [0.9.14] 
</pre>

<p>
A destra della parola "ebuild" c'è una lettera (o una combinazione di lettere) che forniscono maggiori informazioni sul pacchetto:
</p>

<ul>
  <li>
    <e>B</e> (blocks) il pacchetto elencato a sinistra blocca l'installazione del pacchetto a destra
  </li>
  <li>
    <e>N</e> (new) Il pacchetto è nuovo per il sistema e viene installato per la prima volta
  </li>
  <li>
    <e>R</e> (reemerge) Il pacchetto non è nuovo, ma sta per essere reinstallato
  </li>
  <li>
    <e>F</e> (fetch) il pacchetto richiede che si scarichi il sorgente manualmente
    (per esempio a causa di problemi di licenza)
  </li>
  <li>
    <e>U</e> (update) Il  pacchetto esiste già nel sistema ma sta per essere aggiornato
  </li>
  <li>
    <e>UD</e> (downgrade) Il pacchetto esiste nel sistema ma sta per essere effettuato un downgrade
  </li>
  <li>
    <e>U-</e> (slot warning) il pacchetto che è installato nel sistema
    non può coesistere con una differente versione, ma l'upgrade può. L'upgrade viene installato
    e la vecchia versione rimossa.
  </li>
</ul>

<p>
In alcuni casi, un update può significare downgrade (i.e. installare una vecchia versione
invece di una nuova versione). Se non si desidera che questo accada, si può utilizzare l'opzione 
<c>--upgradeonly</c> (<c>-U</c> in breve):
</p>

<pre caption="Aggiornare l'intero sistema">
# <i>emerge --update --upgradeonly world</i>
</pre>

<p>
Si possono eseguire le stesse operazioni di <e>system</e> e <e>world</e> per i singoli pacchetti.
</p>

</body>
</subsection>
<subsection>
<title>Rimuovere il Software</title>
<body>

<p>
Per rimuovere un software dal sistema, si può usare l'opzione <c>unmerge</c>
(<c>-C</c> - in breve):
</p>

<pre caption="Disinstallare il software">
# <i>emerge unmerge gnumeric</i>
</pre>

<p>
Per fare un test sulla rimozione (ma non eseguirla), si può usare ancora <c>--pretend</c>:
</p>

<pre caption="Controllare la rimozione di un software">
# <i>emerge --pretend unmerge gnumeric</i>
</pre>

<warn>
Portage non verifica se un pacchetto è una dipendenza di un pacchetto installato.
E inoltre non avvisa se il pacchetto è parte di 
<e>system</e>, cioè una applicazione fondamentale necessaria per il corretto funzionamento del sistema!
</warn>

<p>
Quando la rimozione (unmerge) inizia appare una lunga lista di nomi di file appartenenti
al pacchetto. Alcuni di questi nomi di file hanno una flag a sinistra del nome. Le flag
<c>!mtime</c>, <c>!empty</c>, e <c>cfgpro</c>
specificano la ragione per cui certi file non vengono rimossi quando rimuovete il pacchetto. 
I files elencati senza nessuno di questi flag sono rimossi dal sistema correttamente. 
I tre flag specificano una delle seguenti ragioni:
</p>

<ul>
  <li>
    <c>!mtime</c> : Il file elencato è cambiato da quando è stato installato,
    probabilmente dall'utente o da qualche tool
  </li>
  <li>
    <c>!empty</c> : La directory elencata non è vuota
  </li>
  <li>
    <c>cfgpro</c> : Questo file è posizionato in una directory protetta e non viene modificato per sicurezza
    </li>
</ul>

</body>
</subsection>
</section>
<section>
<title>Software disponibile</title>
<subsection>
<title>ARCH o no?</title>
<body>

<p>
Gentoo mette i suoi pacchetti in due possibili stadi chiamati <e>ARCH</e> e
<e>~ARCH</e>. Lo stadio dipende dall'architettura che è in uso.
in altre parole, per i sistemi x86 si ha <e>x86</e> e
<e>~x86</e>, per i ppc-based invece <e>ppc</e> e <e>~ppc</e> eccetera.
</p>

<p>
Lo stadio <e>~ARCH</e> include i pacchetti che funzionano per gli sviluppatori incaricati della manutenzione ti ogni pacchetto,
ma il pacchetto non è ancora stato "testato" abbastanza dalla comunità per essere messo in
<e>ARCH</e>. I pacchetti <e>~ARCH</e> solitamente passano in
<e>ARCH</e> dopo esser stati testati per un sufficiente periodo di tempo.
</p>

<p>
Il sistema usa i pacchetti <e>ARCH</e> per default. Se l'utente vuole provare le ultime novità, senza preoccuparsi di poter avere pacchetti che danno errori ed è in grado di gestire un sistema poco stabile ed è disposto ad inviare segnalazioni di bug a <uri
link="http://bugs.gentoo.org">bugs.gentoo.org</uri>, è possibile scegliere di usare
i pacchetti <e>~ARCH</e>. Per "trasformare" l'intero sistema in <e>~ARCH</e>
è necessario modificare la variabile <c>ACCEPT_KEYWORDS</c> in <path>/etc/make.conf</path> in modo che compaia <e>~ARCH</e> (ancora: per i sistemi x86: <e>~x86</e>, eccetera).
</p>

<p>
Notare che può essere non essere banale (se non impossible) tornare ad 
<e>ARCH</e> da <e>~ARCH</e>. 
</p>

<p>
Se si desidera aggiornare il sistema subito è probabile che vangano aggiornati <e>molti</e> dei
pacchetti.
</p>

</body>
</subsection>
<subsection>
<title>Pachetti nascosti</title>
<body>

<p>
Nell'installazione di un pacchetto, è possibile incorrere nel seguente messaggio:
</p>

<pre caption="Messaggio sui pachetti nascosti">
Calculating dependencies   
!!! <comment>all ebuilds that could satisfy </comment>&lt;your package&gt;<comment> have been masked.</comment>
</pre>

<p>
un pacchetto può essere nascosto (masked) per due ragioni: 
</p>

<ol>
  <li>il pacchetto è in <e>~ARCH</e> ed invece sul sistema si utilizza <e>ARCH</e></li>
  <li>il pacchetto è nascosto esplicitamente</li>
</ol>

<p>
Se un pacchetto è nascosto a causa della prima ragione e si deisdera <e>veramente</e> installarlo
(sapendo che <e>c'è</e> una ragione se non è disponibile in 
<e>ARCH</e>), si può temporaneamente accettare i pacchetti <e>~ARCH</e>:
</p>

<pre caption="Accettare temporaneamente i pacchetti ~ARCH">
# <i>ACCEPT_KEYWORDS="~x86" emerge gnumeric</i>
</pre>

<p>
Quando un pacchetto è nascosto esplicitamente è elencato in
<path>/usr/portage/profiles/package.mask</path>. Consultando questo file
è possibile leggere anche la ragione per cui il pacchetto è nascosto (è solitamente aggiunta
come commento). Se si desidera installare il pacchetto comunque (nonostante
i possibili avvisi che sono stati dati sul fatto di poter danneggiare il vostro sistema,
danneggiare altri pacchetti, o semplicemente non essere testato a sufficienza), è necessario creare il file <path>/etc/portage/package.unmask</path> e inserirvi il pacchetto (usare lo stesso formato
usato in <path>/usr/portage/profiles/package.mask</path>).
</p>

<p>
<e>Non</e> alterare <path>/usr/portage/profiles/package.mask</path> poichè
tutti i cambiamenti vengono sovrascritti al successivo aggiornamento del Portage tree. Se si desidera
nascondere un pacchetto creare <path>/etc/portage/package.mask</path> e inserirvi 
il pacchetto (usare lo stesso formato menzionato sopra).
</p>

<!--
<p>
Un'altro trucco per circoscrivere il problema dei "masked package" è di installare il pacchetto
usando il path completo. Questo ignorerà sia c>ACCEPT_KEYWORD</c> 
e i pacchetti elencati in <path>package.mask</path>.
</p>

<pre caption="Installare un pacchetto senza controllare lo stadio/ masking">
# <i>emerge /usr/portage/app-office/gnumeric/gnumeric-1.2.0.ebuild</i>
</pre>
-->

</body>
</subsection>
<subsection>
<title>Pacchetti bloccati</title>
<body>

<p>
Ci si potrebbe trovare nella situazione di ricevere il seguente errore sul vostro schermo:
</p>

<pre caption="Blocking package">
[blocks B     ] gnome-base/bonobo-activation (from pkg gnome-base/libbonobo-2.4.0) 
</pre>

<p>
Nell'esempio sopra, il pacchetto <c>bonobo-activation</c> blocca
l'emerge di <c>libbonobo</c>. Per risolvere questo problema, rimuovere il pacchetto
<c>bonobo-activation</c> e continuare:
</p>

<pre caption="Risolvere una stuazione di blocco">
# <i>emerge unmerge bonobo-activation</i>
</pre>

</body>
</subsection>
</section>
</sections>
