<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->


<sections>
<section>
<title>Timezone</title>
<body>

<p>
Innanzitutto è necessario selezionare la propria timezone, in modo che il sistema riconosca in che parte del globo è collocato. Per la propria timezone, consultare <path>/usr/share/zoneinfo</path>. Crare dunque un link simbolico a <path>/etc/localtime</path> usando <c>ln</c>:
</p>

<pre caption="Abilitare le informazioni sulla timezone">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Per esempio GMT:)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installare i sorgenti</title>
<subsection>
<title>Scegliere un Kernel</title>
<body>

<p>
Il cuore, intorno al quale sono sviluppate tutte le distribuzioni, è il Kernel di Linux. E' la parte di software compresa tra i programmi e l'hardware. Gentoo dà la possibilità ai suoi utenti di scegliere tra diversi sorgenti del kernel. Una lista completa delle descrizioni dei kernel disponibili, è consultabile nella <uri link="http://www.gentoo.org/doc/it/gentoo-kernel.xml">Guida ai Kernel Gentoo</uri>.
</p>

<p>
Per i sistemi basati sull'architettura x86 son disponibili, tra gli altri, i seguenti kernel: <c>vanilla-sources</c> (il sorgente del kernel di default, così come viene rilasciato dagli sviluppatori del kernel di linux), <c>gentoo-sources</c> (il sorgente del kernel che contiene patch per aumentarne le performance), <c>gentoo-dev-sources</c> (il sorgente del kernel 2.6 che contiene patch per aumentarne la performance e migliorare la stabilità), <c>xfs-sources</c> (il sorgente del kernel con il più recente supporto a XFS), <c>gs-sources</c> (il sorgente del kernel con patch per i server), <c>gaming-sources</c> (il sorgente del kernel con patch per migliori performance di gioco), <c>development-sources</c> (il sorgente originale del kernel 2.6) e altri.
</p>

<p>
Dopo la scelta del kernel, è necessario installarlo con <c>emerge</c>. Da ora in avanti si utilizza <c>emerge --usepkg</c> che installa un pacchetto precompilato se è disponibile (per coloro che usano GRP), oppure lo scarica dalla rete. In altre parole, se non si sta usando un pacchetto precompilato, si può omettere l'opzione <c>--usepkg</c>. Si può, non si deve. Si può anche abbreviare <c>--usepkg</c> con <c>-k</c>.
</p>

<p>
Se si sta effettuando una installazione senza supporto di rete non è possibile scegliere uno qualsiasi
dei kernel, ne vengono forniti solo alcuni. In questo caso è possibile utilizzare solo
<c>gentoo-sources</c>, <c>vanilla-sources</c>, <c>development-sources</c> o <c>gentoo-dev-sources</c>.
</p>

<p>
Ora è possibile dunque scegliere ed installare i sorgenti del kernel tramite <c>emerge</c>. 
</p>

<pre caption="Installare un sorgente del kernel">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Se si dà un'occhiata a <path>/usr/src</path>, si dovrebbe vedere un link simbolico chiamato <path>linux</path>, che punta al sorgente del kernel:
</p>

<pre caption="Il link simbolico al sorgente del kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx 1 root root 12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.25-gentoo
</pre>

<p>
Se così non fosse (cioè il link simbolico punta a un sorgente del kernel differente), prima di continuare è necessario cambiare il link simbolico:
</p>

<pre caption="Cambiare il link simbolico al sorgente del kernel">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.25-gentoo linux</i>
</pre>

<p>
Ora si procede a configurare e compilare il sorgente del kernel. Allo scopo è possibile utilizzare <c>genkernel</c>, che compila un kernel generico come quello usato dal LiveCD. Si tratta però prima la configurazione "manuale", poichè è il miglior modo di ottimizzare l'ambiente.</p>

<p>
Se si desidera configurare il kernel manualmente, continuare con <uri link="#manual">Default: Configurazione manuale</uri>. Per
chi preferisce usare <c>genkernel</c>, leggere <uri link="#genkernel">Alternativa: Usare genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Default: Configurazione manuale</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
La configurazione manuale del kernel è spesso considerata la parte più difficile che ogni utente Linux incontra. Non è assolutamente vero -- dopo aver configurato un po' di kernel, l'operazione risulta semplice.
</p>

<p>
Una cosa <e>è</e> però vera: si deve conoscere il proprio sistema quando si comincia una configurazione manuale del kernel. La maggior parte delle informazioni può essere raccolta vedendo il contenuto di <path>/proc/pci</path> (o usando <c>lspci</c> se disponibile). Si può anche eseguire <c>lsmod</c> per vedere che moduli del kernel usa il LiveCD (potrebbe fornire un buon suggerimento su cosa abilitare).
</p>

<p>
Andare nella directory del sorgente del kernel, e digitare <c>make menuconfig</c> per visualizzare un menu di configurazione basato su ncurses.
</p>

<pre caption="Aprire menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Vengono visualizzate molte sezioni di configurazione. Ecco ora alcune opzioni che devono essere attivate (altrimenti Gentoo non può funzionare, o non funziona correttamente senza modifiche aggiuntive).
</p>

</body>
</subsection>
<subsection>
<title>Attivare le opzioni indispensabili</title>
<body>

<p>
Prima di tutto, si deve attivare l'uso di codice/driver di sviluppo e sperimentale. Se non lo si fa, non si ha la possibilità di utilizzare qualche codice/driver molto importante:
</p>

<pre caption="Selezionare codice/driver sperimentale">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
E' importante verificare di aver selezionato la famiglia di processori a cui i proprio appartiene:
</p>

<pre caption="Selecting correct processor family">
Processor type and features ---&gt;
  Subarchitecture Type (<i>PC Compatible</i>) ---&gt;
  <comment>(Change according to your system)</comment>
  Processor family (<i>Athlon/Duron/K7</i>) ---&gt;
</pre>

<p>
Andare su <c>File Systems</c> e selezionare il supporto per il filesystem che si usa. <e>Non</e> compilarlo come modulo, altrimenti Gentoo non può montare le partizioni. Selezionare anche <c>Virtual memory</c>, <c>/proc file system</c>, <c>/dev file system</c> e <c>Automatically mount at boot</c>:
</p>

<pre caption="Selezionare il filesystem">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot

<comment>(Deselezionare il punto seguente a meno che non si abbia un kernel 2.6)</comment>
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Selezionare una o più delle seguenti opzioni in base al sistema usato)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
Gli utenti del kernel 2.6 hanno alcune di queste opzioni sotto <c>Pseudo filesystems</c>, che è una sottosezione di <c>File systems</c>.
</note>

<p>
Se si sta usando PPPoE per connettersi a Internet, si ha bisogno delle seguenti opzioni nel kernel:
</p>

<pre caption="Selezionare i driver necessari per PPPoE">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<note>
Gli utenti del kernel 2.6 hanno queste opzioni sotto <c>Networking support</c>, che è una sottosezione di <c>Device Drivers</c>.
</note>

<p>
Le due opzioni di compressione non sono dannose, ma neppure necessarie; lo stesso vale per <c>PPP over Ethernet</c>, che potrebbe essere usata soltanto da <c>rp-pppoe</c> se configurato in modalità kernel.
</p>

<p>
Chi ne ha bisogno, non deve dimenticare di includere il supporto per la scheda ethernet nel kernel.
</p>

<p>
Se si è in possesso di una CPU Intel che supporta HyperThreading (tm), o si possiede
un sistema con più CPU, è possibile attivare il "Symmetric multi-processing support":
</p>

<pre caption="Attivare il supporto multiprocessore">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Una volta terminata la configurazione del kernel continuare con<uri 
link="#compiling">Compilazione e Installazione</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilazione e Installazione</title>
<body>

<p>
Ora che il kernel è configurato, il prossimo passo sarà la sua compilazione e la sua installazione. Uscire dal menu di configurazione ed eseguire: <c>make dep &amp;&amp; make bzImage modules modules_install</c>:
</p>

<pre caption="Compilare il kernel">
<comment>(Per kernel 2.4)</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>(Per kernel 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Quando la compilazione è finita, è necessario copiare l'immagine del kernel in <path>/boot</path>:
</p>

<pre caption="Installare il kernel">
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.4.25-gentoo</i>
# <i>cp System.map /boot/System.map-2.4.25-gentoo</i>
</pre>

<p>
E' inoltre consigliato copiare il file di configurazione del kernel in <path>/boot</path>.
</p>

<pre caption="Back up della configurazione del kernel">
# <i>cp .config /boot/config-2.4.25-gentoo</i>
</pre>

<p>
Adesso continuare con <uri link="#kernel_modules">Installare i moduli del Kernel separati</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativa: Usare genkernel</title>
<body>

<p>
Se si sta leggendo questa sezione, vuol dire che si è scelto di usare lo script <c>genkernel</c>, che configura il kernel.
</p>

<p>
Adesso che sono stati installati i sorgenti del kernel si può utilizzare lo script <c>genkernel</c> per configurarlo e compilarlo automaticamente. <c>genkernel</c> configura il kernel in modo quasi identico a come è configurato quello del LiveCD. Infatti quando si usa <c>genkernel</c> per compilare il kernel, il sistema rileva tutto l'hardware al boot, proprio come il LiveCD. Poichè genkernel non richiede nessuna configurazione manuale del kernel, questa è una soluzione ideale per quegli utenti che hanno qualche difficoltà nel compilarsi il kernel da soli.
</p>

<p>
Ecco come usare genkernel. Per prima cosa si deve emergere l'ebuild di genkernel:
</p>

<pre caption="Emergere genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Compilare ora il proprio kernel eseguendo <c>genkernel all</c>.
Visto che <c>genkernel</c> compila un kernel che supporta quasi tutto
l'hardware disponibile questa compilazione può essere un processo
piuttosto lungo.
</p>

<p>
E' importante sapere anche che se non si usano ext2 o ext3 come filesystem è necessario
configurare manualmente il kernel usando <c>genkernel --menuconfig all</c>
e aggiungere il supporto per il filesystem scelto <e>nel</e> kernel (cioè <e>non</e>
come modulo).
</p>

<pre caption="Esecuzione di genkernel">
# <i>genkernel all</i>
</pre>

<p>
Una volta completato <c>genkernel</c>, viene creato un kernel completo di moduli e <e>root disk iniziale</e> (initrd). Ll kernel e initrd intervengono quando si configura un boot loader. E' consigliabile dunque annotare il nome del kernel e del initrd, poichè servono quando si scrive il file di configurazione del bootloader. Initrd si avvia subito dopo il boot per effettuare un rilevamento automatico dell'hardware (come nel LiveCD), prima che si avvii il sistema "reale".
</p>

<pre caption="Controllo dell'immagine del kernel e dell'initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Ancora un altro passo per ottenere il sistema più simile al LiveCD: emergere <c>hotplug</c>. Mentre initrd rileva automaticamente l'hardware necessario per avviare il sistema, <c>hotplug</c> autorileva tutto il resto. Per emergere e abilitare <c>hotplug</c>, digitare:
</p>

<pre caption="Emergere ed abilitare hotplug">
# <i>emerge --usepkg hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Installare i moduli del kernel separati</title>
<subsection>
<title>Installare i moduli extra</title>
<body>

<p>
Ora si dovrebbero emergere le ebuild per ogni altro componente presente nel sistema. Ecco una lista degli ebuild relativi al kernel che si possono emergere:
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>Ebuild</th>
  <th>Scopo</th>
  <th>Comando</th>
</tr>
<tr>
  <ti>nvidia-kernel</ti>
  <ti>Grafica accelerata NVIDIA per XFree86</ti>
  <ti><c>emerge nvidia-kernel</c></ti>
</tr>
<tr>
  <ti>nforce-net</ti>
  <ti>Controller ethernet On-board delle schede madri NVIDIA NForce(2)</ti>
  <ti><c>emerge nforce-net</c></ti>
</tr>
<tr>
  <ti>nforce-audio</ti>
  <ti>Audio On-board delle schede madri NVIDIA NForce(2)</ti>
  <ti><c>emerge nforce-audio</c></ti>
</tr>
<tr>
  <ti>e100</ti>
  <ti>Schede Ethernet Intel e100 Fast</ti>
  <ti><c>emerge e100</c></ti>
</tr>
<tr>
  <ti>e1000</ti>
  <ti>Schede Ethernet Intel e1000 Gigabit</ti>
  <ti><c>emerge e1000</c></ti>
</tr>
<tr>
  <ti>emu10k1</ti>
  <ti>Supporto per Creative Sound Blaster Live!/Audigy</ti>
  <ti><c>emerge emu10k1</c></ti>
</tr>
<tr>
  <ti>ati-drivers</ti>
  <ti>Grafica accelerata ATI Radeon 8500+/FireGL per XFree86</ti>
  <ti><c>emerge ati-drivers</c></ti>
</tr>
<tr>
  <ti>ati-drivers-extra</ti>
  <ti>Strumenti grafici per ATI</ti>
  <ti><c>emerge ati-drivers-extra</c></ti>
</tr>
</table>

<p>
Si deve fare attenzione dato che alcuni di questi ebuild richiedono grandi dipendenze. Per verificare quali pacchetti vengono installati all'emerge di un ebuild, si deve usare <c>emerge --pretend</c>. Per esempio, per il pacchetto <c>emu10k1</c>:
</p>

<pre caption="Vedere un elenco completo dei software da installare">
# <i>emerge --pretend emu10k1</i>
</pre>

<p>
Se non si è convinti dei pacchetti che vengono elencati, usare <c>emerge --pretend --verbose</c> per vedere le flag USE in uso:
</p>

<pre caption="Vedere le flag USE in uso">
# <i>emerge --pretend --verbose emu10k1</i>
<comment>...</comment>
[ebuild  N    ] media-sound/aumix-2.8  +gpm +nls +gtk +gnome +alsa -gtk2
</pre>

<p>
Nell'esempio precedente, si può vedere che una delle dipendenze di <c>emu10k1</c> (<c>aumix</c>), usa le flag USE <c>gtk</c> e <c>gnome</c>, facendo sì che gtk (che dipende da XFree) sia compilato con essa.
</p>

<p>
Se non si vuole che tutto questo sia compilato, deselezionare tutte le flag USE interessate, per esempio:
</p>

<pre caption="Emergere emu10k1 con tutte le flag USE deselezionate">
# <i>USE="-gpm -nls -gtk -gnome -alsa" emerge --pretend emu10k1</i>
</pre>

<p>
Quando si è ottenuto un risultato soddisfacente, rimuovere <c>--pretend</c> per iniziare l'installazione di <c>emu10k1</c>.
</p>

</body>
</subsection>
<subsection>
<title>Configurare i moduli</title>
<body>

<p>
Se non si sta usando <c>hotplug</c>, si dovrebbero inserire i moduli che si vogliono caricare in <path>/etc/modules.autoload.d/kernel-2.4</path> (o <path>kernel-2.6</path>). Se si vuole, si possono anche aggiungere altre opzioni ai moduli.
</p>

<p>
Per vedere tutti i moduli disponibili, eseguire il comando <c>find</c>. Non dimenticarsi di sostituire "&lt;kernel version&gt;" con la versione del kernel che si è compilata:
</p>

<pre caption="Vedere tutti i moduli disponibili">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Per esempio, per caricare automaticamente il modulo <c>3c59x.o</c>, modificare
il file <path>kernel-2.4</path> o <path>kernel-2.6</path> e inserire il nome:
</p>

<pre caption="Modificare /etc/modules.autoload.d/kernel-2.4">
<comment>(Esempio per i kernel 2.4)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 o kernel-2.6">
3c59x
</pre>


<p>
Eseguire <c>modules-update</c> per rendere effettivi i cambiamenti al file <path>/etc/modules.conf</path>:
</p>

<pre caption="Eseguire modules-update">
# <i>modules-update</i>
</pre>

<p>
Continuare l'installazione con la <uri link="?part=1&amp;chap=8">Configurazione del sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
