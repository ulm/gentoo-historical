<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-install-ppc-bootloader.xml,v 1.9 2006/09/13 18:30:56 so Exp $ -->

<sections>

<version>7.1</version>
<date>2006-09-06</date>

<section>
<title>Scegliere un Bootloader</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Dopo aver configurato e compilato il kernel, è necessario un <e>bootloader</e>
per avviare la installazione
di linux. Il <e>bootloader</e> che si usa dipende dal tipo di macchina
PPC che si ha.
</p>

<p>
Se si sta usando una macchina NewWorld Apple o IBM, si deve usare
<uri link="#yaboot">yaboot</uri>. Macchine OldWorld Apple hanno due opzioni,
<uri link="#bootx">BootX</uri> (raccomandato) e <uri link="#quik">quik</uri>.
Le macchine Pegasos non richiedono un bootloader, ma si deve emergere il
<uri link="#bootcreator">BootCreator</uri> per creare un bootmenu
SmartFirmware.
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>Default: usare yaboot</title>
<subsection>
<title>Introduzione</title>
<body>

<impo>
yaboot può essere utilizzato soltanto su sistemi NewWorld Apple e IBM!
</impo>

    
<p>
Per trovare i device di boot, yaboot ha bisogno di accedere ai device node
creati da udev allo startup e al filesystem sysfs. Questi due file system si
trovano in <path>/dev</path> e <path>sys</path>. Questo può essere fatto
attraverso il bind mount di questi filesystem da root del CD di
installazione ai mount point di <path>/dev</path> e <path>/sys</path> nel
chroot. Se si è già fatto il bind mount di questi filesystem, non c'è bisogno
di farlo di nuovo.
</p>

<pre caption="Bind-mount dei filesystem device e sysfs">
# <i>exit </i> # con questo si esce da chroot
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>mount -o bind /sys /mnt/gentoo/sys</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>
    
<p>
Per configurare yaboot, si può
usare <c>yabootconfig</c> per creare automaticamente un file di
configurazione. Se si sta installando Gentoo su un G5 (sui quali
<c>yabootconfig</c> non sempre funziona), o si vuole avviare da firewire
o USB, si deve configurare manualmente yaboot.
</p>

<note>
Si deve modificare manualmente yaboot.conf quando si usa genkernel, anche se
si è usato yabootconfig. La sezione della immagine del kernel di yaboot.conf
dovrebbe essere modificata come segue:
</note>

<pre caption="Aggiungere gli argomenti di boot di genkernel a yaboot.conf">
<comment>###########################################################
## Questa sezione può essere duplicata se si ha 
## più di un kernel o set di opzioni di boot - sostituire kernel-name
## e initrd-name con il nome esatto del kernel e di initrd che si usano.
###########################################################</comment>
image=/boot/kernel-name
  label=Linux
  root=/dev/ram0
  partition=3
	initrd=/boot/initrd-name
  append="real_root=/dev/hda3 init=/linuxrc"  
  <comment># Si possono aggiungere ulteriori argomenti del kernel come 
  # rootdelay=10 per un USB/Firewire Boot</comment>
  read-only
<comment>##########################################################</comment>
</pre>

<ul>
  <li><uri link="#yabootconfig">Default: usare yabootconfig</uri></li>
  <li>
    <uri link="#manual_yaboot">Alternativa: configurare manualmente yaboot</uri>
  </li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig">
<title>Default: usare yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> rileva automaticamente le partizioni presenti sulla
macchina e configura le opzioni di avvio con Linux, Mac OS e Mac OS X.
</p>

<p>
Per utilizzare <c>yabootconfig</c>, si deve avere una partizione
Apple_Bootstrap sul disco, e <path>/etc/fstab</path> deve essere configurato
per riflettere le proprie partizioni Linux. Entrambe le operazioni dovrebbero
essere già state fatte precedentemente, ma si controlli
<path>/etc/fstab</path> prima di procedere.  Assicurarsi di aver installato
<c>yaboot</c>.
</p>

<pre caption = "Installare yaboot">
# <i>emerge yaboot</i>
</pre>

<p>
Adesso uscire da chroot ed eseguire <c>yabootconfig --chroot /mnt/gentoo</c>.
Il programma conferma la locazione della partizione di bootstrap. Se si segue
lo schema di partizione del disco suggerito, la partizione bootstrap dovrebbe
essere /dev/hda2. Se questa è corretta, premere <c>Y</c>, altrimenti
ricontrollare <path>/etc/fstab</path>.  Successivamente yabootconfig analizza
le impostazioni di sistema, crea il file <path>/etc/yaboot.conf</path> ed
esegue <c>mkofboot</c>. <c>mkofboot</c> serve per formattare la partizione
Apple_Bootstrap e installare in essa il file di configurazione di yaboot.
Dopo aver completato entrare nuovamente in chroot.
</p>

<pre caption="Entrare in chroot">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
E' possibile controllare il contenuto di <path>/etc/yaboot.conf</path>. Se si
effettuano delle modifiche a <path>/etc/yaboot.conf</path> (come ad esempio
l'impostazione del SO di avvio predefinito), assicurarsi di eseguire
<c>ybin -v</c> per applicare le modifiche alla partizione Apple_Bootstrap.
</p>

<p>
Continuare con <uri link="#reboot">Riavvio del sistema</uri>.
</p>

</body>
</subsection>
<subsection id="manual_yaboot">
<title>Alternativa: configurare manualmente yaboot</title>
<body>

<p>
Per cominciare assicurarsi di aver installato
<c>yaboot</c>.
</p>

<pre caption = "Installare yaboot con GRP">
# <i>emerge --usepkg yaboot</i>
</pre>

<p>
Qui è presente un file <path>yaboot.conf</path> completo, che è possibile
modificare a proprio piacimento. Gli utilizzatori di G5 e gli utenti
che avviano da firewire e USB devono sapere che i loro dischi
vengono visti dal kernel Linux come dischi SCSI, per cui
sostituire <path>/dev/hda</path> con <path>/dev/sda</path>.
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## Eseguire: "man yaboot.conf" per i dettagli. Non effettuare cambiamenti 
## prima di averlo fatto!!
## Vedere anche: /usr/share/doc/yaboot/examples per configurazioni di esempio.
##
## Per avere un menu multi-boot, aggiungere una o più righe tra:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## La partizione di bootstrap:</comment>

boot=/dev/hda2

<comment>## ofboot è la modalità openfirmware per specificare la partizione di bootstrap
## Se non è definita, yaboot fallisce sui G5 e su alcuni G4 (a meno che non si
## passino gli argomenti necessari al programma mkofboot/ybin).
## hd:X significa /dev/sdaX (o /dev/hdaX).
##
## Gli utilizzatori di G5 dovrebbero togliere il commento a questa linea!!

#ofboot=hd:2

## Gli utenti che avviano da firewire dovrebbero usare una riga come questa:
# ofboot=fw/node/sbp-2/disk@0:

## Gli utenti che avviano da USB dovrebbero usare una riga come questa:
# ofboot=usb/disk@0:

## hd: è shorthand per il primo disco OpenFirmware</comment>
device=hd:

<comment>## Gli utenti firewire e USB devono specificare l'intero nome del device OF
## Può essere trovato usando ofpath, che è incluso con yaboot.

# device=fw/node@0001d200e00d0207/sbp-2@c000/disk@0:
</comment>

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Questa sezione può essere duplicata se si hanno diversi kernel o diverse
## opzioni di avvio - sostituire kernel-name con la versione del kernel
## appropriata
#################</comment>
image=/boot/kernel-name
  label=Linux
  root=/dev/hda3
  partition=3
<comment># append="rootdelay=10"  # Richiesto per boot USB/Firewire</comment>
  read-only
<comment>##################

## Gli utilizzatori di G5 e di alcuni G4 dovrebbero impostare
##   macos=hd:13
##   macosx=hd:12
## al posto dei valori in esempio.</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Una volta che <path>yaboot.conf</path> è stato configurato, si deve eseguire
<c>mkofboot -v</c> per formattare la partizione Apple_bootstrap e per
installare le impostazioni. Se si cambia yaboot.conf dopo che la partizione
Apple_bootstrap è stata creata, si possono aggiornare le impostazioni
eseguendo <c>ybin -v</c>
</p>

<p>
Per maggiori informazioni su yaboot si visiti <uri
link="http://penguinppc.org/bootloaders/yaboot">il progetto yaboot</uri>.
Adesso continuare l'installazione con <uri link="#reboot">
Riavvio del sistema</uri>.
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>Alternativa: BootX</title>
<body>

<impo>
BootX può essere utilizzato solamente sui sistemi OldWorld Apple con MacOS 9
o successivi!
</impo>

<p>
Poichè BootX avvia Linux in MacOS, il kernel dovrà essere copiato dalla
partizione Linux alla partizione MacOS. Prima si monterà la partizione MacOS
da fuori il chroot. Usare <c>mac-fdisk</c> per trovare il numero della
partizione MacOS, ma qui si userà sd6 come un esempio. Dopo che la
partizione è montata, si copierà il kernel al system folder così
BootX può trovarlo.
</p>

<pre caption="Copiare il kernel su la partizione MacOS">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux "/mnt/mac/System Folder/Linux Kernels"</i>
</pre>

<p>
Se si usa genkernel, il kernel e initrd devono essere copiati nella partizione
MacOS.
</p>

<pre caption="Copiare il kernel di genkernel e initrd su la partizione MacOS">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initramfs-* "/mnt/mac/System Folder"</i>
</pre>

<p>
Ora che il kernel è copiato, si deve riavviare per impostare BootX.
</p>

<pre caption="Smontare le partizioni e riavviare">
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo/sys /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Naturalmente non dimenticarsi di togliere tutti i CD avviabili, c'è bisogno
di avviare MacOS questa volta.
</p>

<p>
Adesso che la macchina è stata avviata con MacOS aprire il pannello di
controllo di BootX. Se non si usa genkernel, selezionare <c>Options</c> e
deselezionare <c>Use specified RAM disk</c>. Se si usa genkernel, assicurarsi
che initrd di genkernel sia selezionato invece di quello del CD di
installazione. Se non si usa
genkernel, c'è una opzione per specificare il disco root Linux della macchina
e la partizione. Inserire i valori appropriati. Secondo la configurazione del
kernel, potrebbero essere applicati ulteriori argomenti di boot.
</p>

<p>
BootX può essere configurato per avviare Linux all'avvio. Con questa opzione
la macchina avvia prima MacOS, quindi BootX, durante l'avvio,
carica ed avvia Linux. Visitare
<uri link="http://penguinppc.org/bootloaders/bootx/">il sito di BootX</uri> per
avere maggiori informazioni.
</p>

<impo>
Assicurarsi di avere il supporto per i filesystem HFS e HFS+ nel kernel,
altrimenti non si può aggiornare o cambiare il kernel sulla partizione MacOS.
</impo>

<p>
Adesso riavviare nuovamente per avviare Linux, e continuare con <uri
link="?part=1&amp;chap=11">Termine dell'installazione Gentoo</uri>.
</p>

</body>
</section>
<section id="quik">
<title>Alternativa: quik</title>
<body>

<p>
quik permette a OldWorld Macs di avviare senza MacOS. Non è ancora ben
supportato e ha un pò di quirks. Se si ha la possibilità, è meglio usare
BootX che è molto più sicuro e più facile da impostare di quik.
</p>

<p>
Installare quik:
</p>

<pre caption="Emerge quik">
# <i>emerge quik</i>
</pre>

<p>
Poi si deve impostarlo. Modificare /etc/quik.conf e impostare la propria
immagine al kernel che si è copiato nella partizione boot.
</p>

<pre caption="Configurare quik.conf">
# Example of quik.conf
init-message = "Gentoo 2006.1\n"
partition = 2		<comment># Questa è la partizione boot</comment>
root = /dev/hda4
timeout = 30
default = gentoo
image = /vmlinux <comment># Questo è il kernel</comment>
	label = gentoo
</pre>

<p>
Il file quik.conf <e>deve</e> essere sullo stesso disco delle immagini boot
di quik, può stare su una partizione differente, ma è raccomandato spostarla
sulla partizione boot.
</p>

<pre caption="Spostare quik.conf in /boot">
# <i>mv /etc/quik.conf /boot/quik.conf</i>
</pre>

<p>
Si impostano le variabili boot così che quik le carichi al boot. Per farlo,
si usa un programma chiamato <c>nvsetenv</c>. Le variabili che si possono
impostare variano da macchina a macchina, è meglio trovare le
<uri link="http://penguinppc.org/bootloaders/quik/quirks.php">quirks</uri>
della propria macchina invece di tentare queste.
</p>

<pre caption="Impostare le variabili boot">
# <i>nvsetenv auto-boot true</i> <comment># Impostarla a false se si vuole avviare in OF, non tutti i modelli possono visualizzare output OF</comment>
# <i>nvsetenv output-device video</i> <comment># Controllare la pagina quirk, ci sono molte variazioni qui</comment>
# <i>nvsetenv input-device kbd</i>
# <i>nvsetenv boot-device scsi/sd@1:0</i> <comment># Per SCSI</comment>
# <i>nvsetenv boot-device ata/ata-disk@0:0</i> <comment># Per ATA</comment>
# <i>nvsetenv boot-file /boot/vmlinux-2.6.17 root=/dev/hda4</i> <comment>Il primo è il percorso al kernel, il secondo la partizione root. Si possono aggiungere opzioni del kernel alla fine di questa riga.</comment>
# <i>nvsetenv boot-command boot</i> <comment># Impostare questa a bye per MacOS e boot per Linux</comment>
</pre>

<note>
E' anche possibile cambiare le variabili boot da MacOS. Secondo il modello, sia
<uri link="http://penguinppc.org/bootloaders/quik/BootVars.sit.hqx">
bootvars</uri> o <uri link="ftp://ftp.apple.com/developer/macosxserver/utilities/SystemDisk2.3.1.smi.bin">
Apple System Disk</uri> dovrebbero essere usate. Vedere la pagina quik
quirks per più informazioni.
</note>

<p>
Si è impostata la macchina per avviare, e si deve essere sicuri che immagini
boot siano installate correttamente. Eseguire
<c>quik -v -C /boot/quik.conf</c>. Dovrebbe dire che è installato il primo
stage block QUIK boot.
</p>

<note>
Se qualcosa è sbagliato, si può sempre resettare la propria PRAM e ritornare
ai valori di default, premendo <c>command + option + p + r</c> prima di
accendere la macchina. Questo cancellerà i valori che si sono impostati con
nvsetenv e dovrebbe permettere di avviare un bootdisk MacOS o un bootdisk
Linux.
</note>

<p>
Continuare la installazione con <uri link="#reboot">Riavvio del sistema</uri>.
</p>

</body>
</section>
<section id="bootcreator">
<title>Alternativa: BootCreator</title>
<body>

<impo>
BootCreator crea un bootmenu per SmartFirmware scritto in Forth per i sistemi
Pegasos.
</impo>

<p>
Prima di tutto assicurarsi di avere <c>bootcreator</c>
installato nel sistema:
</p>

<pre caption = "Installare bootcreator">
# <i>emerge --usepkg bootcreator</i>
</pre>

<p>
Quindi copiare il file <path>/etc/bootmenu.example</path> in
<path>/etc/bootmenu</path> e modificarlo
in base alle proprie esigenze:
</p>

<pre caption = "Modificare il file di configurazione di bootcreator">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
Sotto si trova un file di configurazione completo di
<path>/etc/bootmenu</path>. Sostituire kernel-name e initrd-name con i
propri kernel e initrd.
</p>

<pre caption = "file di configurazione di bootcreator">
<comment>#
# Example description file for bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux (Normal)
ide:0 kernel-name video=radeonfb:1024x768@70 root=/dev/hda3

[SECTION]
Local HD -> Genkernel (Normal)
ide:0 kernel-name root=/dev/ram0 real_root=/dev/hda3 init=/linuxrc initrd=initrd-name
</pre>

<p>
Il <path>bootmenu</path> deve essere trasferito in Forth e copiato sulla
partizione boot, così SmartFirmware può leggerlo. Quindi avviare
<c>bootcreator</c>:
</p>

<pre caption = "Installare il bootmenu">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
Assicurarsi di controllare le impostazioni di SmartFirmware quando si riavvia,
che <path>menu</path> sia il file che sarà caricato di default.
</note>

<p>
Continuare l'installazione con <uri link="#reboot">Riavvio del sistema</uri>.
</p>

</body>
</section>
<section id="reboot">
<title>Riavvio del sistema</title>
<subsection>
<body>

<p>
Uscire dall'ambiente chroot e smontare tutte le partizioni montate, quindi
eseguire il comando: <c>reboot</c>.
</p>

<pre caption="Uscire da chroot, smontare tutte le partizioni e riavviare">
# <i>exit</i>
livecd ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo/sys /mnt/gentoo</i>
livecd ~# <i>reboot</i>
</pre>

<p>
Una volta avviato Gentoo, completare l'installazione con <uri
link="?part=1&amp;chap=11">Termine dell'installazione Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
