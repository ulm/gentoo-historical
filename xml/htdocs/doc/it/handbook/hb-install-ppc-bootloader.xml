<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-install-ppc-bootloader.xml,v 1.3 2005/07/18 21:33:41 so Exp $ -->

<sections>

<version>2.4</version>
<date>2005-05-12</date>

<section>
<title>La scelta</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Dopo aver configurato e compilato il kernel e impostato i necessari file di 
configurazione, è giunto il momento di installare il programma che esegue il 
kernel nel momento in cui si avvia il sistema. Tale programma è chiamato <e>bootloader</e>.
Ma prima di iniziare si analizzino le varie opzioni...
</p>

<p>
Esistono diversi bootloader per Linux/PPC. In particolare <uri link="#yaboot">yaboot</uri>
(per macchine NewWorld Apple e IBM) e <uri link="#bootx">BootX</uri> (per macchine 
OldWorld Apple). Le macchine Pegasos non richiedono un bootloader, ma è stato incluso
<uri link="#bootcreator">BootCreator</uri> per la creazione di un menù di avvio SmartFirmware.
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>Default: usare yaboot</title>
<subsection>
<title>Introduzione</title>
<body>

<impo>
yaboot può essere utilizzato soltanto su sistemi NewWorld Apple e IBM!
</impo>

    
<p>
Prima di tutto si devono creare i file /dev, richiesti durante l'installazione
del bootloader, nel nuovo ambiente. Questo può essere fatto attraverso il
"bind"-mapping del filesystem /dev dal CD di installazione:
</p>

<pre caption="Bind-mount del filesystem /dev">
# <i>exit </i> # con questo si esce da chroot
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>
    
<p>
Ci sono due modi per configurare yaboot sul proprio sistema. Quello più semplice
è utilizzando <c>yabootconfig</c> per impostare automaticamente yaboot. Se per qualche
motivo non si desidera utilizzare <c>yabootconfig</c> per impostare automaticamente 
<path>/etc/yaboot.conf</path> o se si sta installando Gentoo su un G5 (sui quali
<c>yabootconfig</c> non sempre funziona), è possibile modificare direttamente
il file di esempio già installato sul proprio sistema.
</p>

<note>
Si dovrebbe modificare il file yaboot.conf se si sta usando genkernel. Gli argomenti 
forniti dall'ebuild di genkernel devono essere aggiunti come una opzione alla sezione 
immagine del kernel. La rilevante sezione di yaboot.conf è data sotto:
</note>

<pre caption="Aggiungere argomenti boot a yaboot.conf">
<comment>#################
## Questa sezione può essere duplicata se si ha più di un kernel o piu di un 
## opzione di boot - sostituire 2.6.9 con la propria versione del kernel
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/ram0    <comment># Se si sta usando genkernel questo è /dev/ram0</comment>
  partition=3
  sysmap=/boot/System.map-2.6.9
  append="real_root=/dev/hda3 init=/linuxrc"  <comment># Aggiungere argomenti a questa riga</comment>
  read-only
<comment>##################</comment>
</pre>

<ul>
  <li><uri link="#yabootconfig">Default: usare yabootconfig</uri></li>
  <li>
    <uri link="#manual_yaboot">Alternativa: configurare manualmente yaboot</uri>
  </li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig">
<title>Default: usare yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> rileva automaticamente le partizioni presenti sulla macchina
e configura le opzioni di avvio con Linux, Mac OS e Mac OS X.
</p>

<p>
Per utilizzare <c>yabootconfig</c>, si deve avere una partizione Apple_Bootstrap sul
disco, e <path>/etc/fstab</path> deve essere configurato correttamente.
Entrambe le operazioni dovrebbero essere già state fatte precedentemente.
Per cominciare assicurarsi di aver installato l'ultima versione di <c>yaboot</c>.
</p>

<pre caption = "Installare yaboot con i GRP">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Adesso uscire da chroot ed eseguire <c>yabootconfig --chroot /mnt/gentoo</c>.
Il programma, una volta eseguito, conferma la locazione della partizione di
bootstrap. Se questa è corretta, premere <c>Y</c>, altrimenti ricontrollare
<path>/etc/fstab</path>.
Successivamente yabootconfig analizza le impostazioni di sistema, crea il file
<path>/etc/yaboot.conf</path> ed esegue <c>mkofboot</c>. <c>mkofboot</c> serve
per formattare la partizione Apple_Bootstrap e installare in essa il file di
configurazione di yaboot. Dopo aver completato entrare nuovamente in chroot.
</p>
<pre caption="Entrare in chroot">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
E' possibile controllare il contenuto di <path>/etc/yaboot.conf</path>. Se si
effettuano delle modifiche a <path>/etc/yaboot.conf</path> (come ad esempio
l'impostazione del SO di avvio predefinito), assicurarsi di eseguire <c>ybin -v</c>
per applicare le modifiche alla partizione Apple_Bootstrap.
</p>

<p>
Continuare con <uri link="#reboot">Riavvio del sistema</uri>.
</p>

</body>
</subsection>
<subsection id="manual_yaboot">
<title>Alternativa: configurare manualmente yaboot</title>
<body>

<p>
Per cominciare assicurarsi di aver installato l'ultima versione di <c>yaboot</c>.
</p>

<pre caption = "Installare yaboot con i GRP">
# <i>emerge --usepkg --update yaboot</i>
</pre>


<p>
Qui è presente un file <path>yaboot.conf</path> completo, che è possibile modificare
a proprio piacimento. Gli utilizzatori di G5 devono sapere che i loro dischi sono
Serial ATA, i quali vengono visti dal kernel Linux come dischi SCSI (per cui sostituire
<path>/dev/hda</path> con <path>/dev/sda</path>).
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## Eseguire: "man yaboot.conf" per i dettagli. Non effettuare cambiamenti 
## prima di averlo fatto!!
## Vedere anche: /usr/share/doc/yaboot/examples per configurazioni di esempio.
##
## Per avere un menu multi-boot, aggiungere una o più righe tra:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## La partizione di bootstrap:</comment>

boot=/dev/hda2

<comment>## ofboot è la modalità openfirmware per specificare la partizione di bootstrap
## Se non è definita, yaboot fallisce sui G5 e su alcuni G4 (a meno che non si
## passino gli argomenti necessari al programma mkofboot/ybin).
## hd:X significa /dev/sdaX (o /dev/hdaX).
##
## Gli utilizzatori di G5 dovrebbero togliere il commento a questa linea!!

#ofboot=hd:2

## hd: è l'equivalente openfirmware di hda</comment>
device=hd:

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Questa sezione può essere duplicata se si hanno diversi kernel o diverse
## opzioni di avvio - sostituire 2.6.9 con la versione del kernel appropriata
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/hda3
  partition=3
  sysmap=/boot/System.map-2.6.9
  read-only
<comment>##################

## Gli utilizzatori di G5 e di alcuni G4 dovrebbero impostare
##   macos=hd:13
##   macosx=hd:12
## al posto dei valori in esempio.</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Una volta che <path>yaboot.conf</path> è stato configurato, si deve eseguire
<c>mkofboot -v</c> per installare le impostazioni nella partizione di bootstrap.
<e>Questo non si deve dimenticare!</e> Confermare quando <c>mkofboot</c> chiede
di creare un nuovo filesystem.
</p>

<p>
Se tutto va a buon fine, e se si hanno le stesse opzioni dell'esempio precedente,
al riavvio successivo si ha un semplice menù di avvio con 5 possibili scelte.
Se si modifica la configurazione di yaboot successivamente, si deve eseguire
<c>ybin -v</c> per aggiornare la partizione di bootstrap - <c>mkofboot</c> serve
soltanto per la configurazione iniziale.
</p>

<p>
Per maggiori informazioni su yaboot si visiti <uri
link="http://penguinppc.org/bootloaders/yaboot">il progetto yaboot</uri>. Adesso
continuare l'installazione con <uri link="#reboot">Riavvio del sistema</uri>.
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>Alternativa: BootX</title>
<body>

<impo>
BootX può essere utilizzato solamente sui sistemi OldWorld Apple!
</impo>

<p>
Poichè BootX avvia Linux in MacOS, il kernel dovrà essere copiato dalla partizione 
Linux alla partizione MacOS. Prima si monterà la partizione MacOS 
da fuori il chroot. Usare <c>mac-fdisk</c> per trovare il numero della 
partizione MacOS, ma qui si userà sd6 come un esempio. Dopo che la 
partizione è montata, si copierà il kernel al system folder così 
BootX può trovarlo.
</p>

<pre caption="Copiare il kernel su la partizione MacOS">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux "/mnt/mac/System Folder/Linux Kernels"</i>
</pre>

<p>
Se si è usato il gerkernel, il kernel è situato in una posto differente e initrd 
dovrà essere copiato.
</p>

<pre caption="Copiare il kernel di genkernel e initrd su la partizione MacOS">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initrd-* "/mnt/mac/System Folder"</i>
</pre>

<p>
Ora che il kernel è copiato, si può fare unmount di tutti i filesystem montati, quindi
eseguire il comando: <c>reboot</c>.
</p>

<pre caption="Smontare le partizioni e riavviare">
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Naturalmente non dimenticarsi di togliere tutti i mezzi avviabili, c'è bisogno di 
avviare MacOS questa volta.
</p>

<p>
Adesso che la macchina è stata avviata con MacOS aprire il pannello di controllo
di BootX e selezionare <c>Options</c> e deselezionare <c>Used specified RAM disk</c> 
se non si sta usando genkernel. Se si sta usando genkernel, assicurarsi che genkernel 
initrd sia selezionata invece di CD di installazione initrd. Se non si sta usando genkernel, 
c'è una opzione per specificare il disco root Linux della macchina e partizione. 
Inserire in questi campi i valori appropriati. Dipendendo dalla configurazione del kernel, 
alcuni argomenti di boot possono essere applicati.
</p>

<p>
BootX può essere configurato per avviare Linux all'avvio. Con questa opzione
la macchina avvia prima MacOS, quindi BootX, durante l'avvio, si occupa di caricare
ed avviare Linux. Visitare <uri link="http://penguinppc.org/bootloaders/bootx/">il sito di BootX</uri>
per avere maggiori informazioni.
</p>

<p>
Adesso riavviare nuovamente per avviare Linux, e continuare con <uri
link="?part=1&amp;chap=11">Termine dell'installazione Gentoo</uri>.
</p>

</body>
</section>
<section id="bootcreator">
<title>Alternativa: BootCreator</title>
<body>

<impo>
BootCreator crea un bootmenu per SmartFirmware scritto in Forth per i sistemi
Pegasos.
</impo>

<p>
Prima di tutto assicurarsi di avere l'ultima versione di <c>bootcreator</c>
installata nel sistema:
</p>

<pre caption = "Installare bootcreator">
# <i>emerge --usepkg --update bootcreator</i>
</pre>

<p>
Quindi copiare il file <path>/etc/bootmenu.example</path> in <path>/etc/bootmenu</path>
e modificarlo in base alle proprie esigenze:
</p>

<pre caption = "Modificare il file di configurazione di bootcreator">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
Di seguito è presente un file <path>/etc/bootmenu</path> completo che è possibile modificare
a proprio piacimento.
</p>

<pre caption = "file di configurazione di bootcreator">
<comment>#
# Example description file for bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux 2.6.10 (Normal)
ide:0 linux-2.6.10 video=radeonfb:1024x768@70 root=/dev/hda3
</pre>

<p>
Infine il <path>bootmenu</path> può essere convertito in Forth e copiato nella
partizione di boot per farlo leggere da SmartFirmware. Quindi avviare <c>bootcreator</c>:
</p>

<pre caption = "Installare il bootmenu">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
Controllare prima di riavviare nelle impostazioni di SmartFirmare che <path>menu</path>
sia il file da caricare di default.
</note>

<p>
Continuare l'installazione con <uri link="#reboot">Riavvio del sistema</uri>.
</p>

</body>
</section>
<section id="reboot">
<title>Riavvio del sistema</title>
<subsection>
<body>

<p>
Uscire dall'ambiente chroot e smontare tutte le partizioni montate, quindi
eseguire il comando: <c>reboot</c>.
</p>

<pre caption="Uscire da chroot, smontare tutte le partizioni e riavviare">
# <i>exit</i>
livecd ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo</i>
livecd ~# <i>reboot</i>
</pre>

<p>
Una volta avviato Gentoo, completare l'installazione con <uri
link="?part=1&amp;chap=11">Termine dell'installazione Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
