<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-working-use.xml,v 1.14 2006/07/17 15:22:27 so Exp $ -->

<sections>

<version>1.33</version>
<date>2006-07-16</date>

<section>
<title>Cosa sono i flag USE</title>
<subsection>
<title>L'idea dietro i flag USE</title>
<body>

<p>
Durante l'installazione di Gentoo (o di altre distribuzioni o comunque di
altri sistemi operativi), sono possibili diverse scelte a seconda
dell'ambiente di lavoro. Le impostazioni per un server differiscono da quelle
per una workstation, così come una stazione per giocare differisce da una per
il rendering 3D.
</p>

<p>
Questo non è vero soltanto per la scelta dei pacchetti da  installare, ma
anche per le caratteristiche che un certo pacchetto dovrebbe supportare.  Per
esempio, se l'uso delle OpenGL non è richiesto, non dovrebbe essere
necessario né preoccuparsi di installare le OpenGL nè tantomento abilitarne
il supporto nei pacchetti che ne farebbero uso. Per lo stesso motivo, se non
vogliamo usare  il KDE, non vorremmo neanche preoccuparci di compilare i
pacchetti col supporto per il KDE se questi pacchetti funzionano
tranquillamente senza.
</p>

<p>
Per aiutare gli utenti a decidere cosa installare/attivare e cosa no, è
necessario che l'utente specifichi il proprio ambiente nel modo più semplice.
Questo forza l'utente a decidere cosa desidera realmente e facilita Portage,
il sistema per la gestione dei pacchetti, a prendere le decisioni
appropriate.
</p>

</body>
</subsection>
<subsection>
<title>Definizione dei flag USE</title>
<body>

<p>
Concettualmente un flag USE è una parola chiave che racchiude
l'idea di supporto e di informazione sulla dipendenza. Se si definisce un
certo flag USE, si indica al Portage la volontà di avere il supporto
per la parola chiave scelta. Questo, naturalmente, altera anche le
informazioni sulle dipendenze per un dato pacchetto.
</p>

<p>
Prendiamo un esempio specifico: la parola chiave <c>kde</c>. Se questa parola
chiave non è presente nella variabile <c>USE</c>, tutti i pacchetti che hanno
il supporto <e>opzionale</e> per il KDE vengono compilati <e>senza</e> tale
supporto. Di conseguenza tutti i pacchetti cha hanno una dipendenza
<e>opzionale</e> con KDE vengono installati <e>senza</e> le relative librerie
KDE. Se invece la parola chiave <c>kde</c> è stata definita, questi pacchetti
<e>vengono</e> compilati col supporto del KDE e di conseguenza anche le sue
librerie vengono installate come dipendenze.
</p>

<p>
La conseguenza di una corretta definizione delle parole chiave, è
di avere un sistema configurato specificamente per le proprie necessità.
</p>

</body>
</subsection>
<subsection>
<title>Quali sono i flag USE utilizzabili</title>
<body>

<p>
Ci sono due tipi di flag USE: <e>globali</e> e <e>locali</e>.
</p>

<ul>
  <li>
		Un flag USE <e>globale</e> è usato da alcuni pacchetti a livello di
		sistema.  Questo è ciò che molte utenti vedono come flag USE.
  </li>
  <li>
    Un flag USE <e>locale</e> è usato da un singolo pacchetto per prendere
    decisioni specifiche al pacchetto.
  </li>
</ul>

<p>
Una lista di flag USE globali disponibile può essere trovata
<uri link="/dyn/use-index.xml">online</uri> o localmente in
<path>/usr/portage/profiles/use.desc</path>.
</p>

<p>
Un elenco delle flag USE locali disponibili può essere trovato in
<path>/usr/portage/profiles/use.local.desc</path>.
</p>

</body>
</subsection>
</section>
<section>
<title>Usare i flag USE</title>
<subsection>
<title>Dichiarare flag USE permanenti</title>
<body>

<p>
Seguono le informazioni su come dichiarare i flag USE in modo permanente.
</p>

<p>
Come precedentemente menzionato, tutti i flag USE sono dichiarati attraverso
la variabile <c>USE</c>. Per facilitare la ricerca e la scelta dei flag USE,
viene fornita una configurazione USE <e>predefinita</e>. Questa
configurazione è una collezione di flag USE che dovrebbe essere comunemente
usata dagli utenti Gentoo ed è dichiarata nei file <path>make.defaults</path>
parte del proprio profilo.
</p>

<p>
Il profilo del sistema è puntato verso un symlink
<path>/etc/make.profile</path>. Ogni profilo lavora insieme con un altro
profilo superiore, e il risultato è la somma di tutti i profili. Quello
superiore è quello <path>base</path>, (
<path>/usr/portage/profiles/base</path> ).
</p>

<p>
Si da una occhiata alle impostazioni di default per il profilo 2004.3:
</p>

<pre caption="Somma delle variabili USE make.defaults per il profilo 2004.3">
<comment>(Questo esempio è la somma delle impostazioni in base,
default-linux, default-linux/x86 e default-linux/x86/2004.3)</comment>
USE="x86 oss apm arts avi berkdb bitmap-fonts crypt cups encode fortran f77
     foomaticdb gdbm gif gpm gtk imlib jpeg kde gnome libg++ libwww mad
     mikmod motif mpeg ncurses nls oggvorbis opengl pam pdflib png python qt
     quicktime readline sdl spell ssl svga tcpd truetype X xml2 xmms xv zlib"
</pre>

<p>
Come è evidente, questa variabile contiene già una serie di parole chiave.
<b>Non</b> alterare nessun file <path>make.defaults</path> 
per adattare la variabile <c>USE</c> alle proprie necessità dato che
le modifiche a questo file vengono sovrascritte ad ogni aggiornamento del
Portage.
</p>


<p>
Per cambiare la configurazione predefinita, è necessario aggiungere o
rimuovere parole chiave dalla variabile <c>USE</c> e può essere fatto
globalmente definendo la variabile <c>USE</c> nel file
<path>/etc/make.conf</path>.  In questa variabile è possibile aggiungere flag
USE extra, richiesti o rimuoverne di non richiesti nel qual caso occorre
anteporre alla parola chiave il segno meno ("-").
</p>

<p>
Per esempio, per rimuovere il support per KDE e QT ed aggiungere il supporto
per ldap, può essere definita la seguente dichiarazione <c>USE</c>
in <path>/etc/make.conf</path>:
</p>

<pre caption="Un esempio di dichiarazione USE in /etc/make.conf">
USE="-kde -qt ldap"
</pre>

</body>
</subsection>
<subsection>
<title>Dichiarare flag USE per pacchetti individuali</title>
<body>

<p>
Qualche volta si desidera dichiarare una determinata flag USE per una (o per
più) applicazione ma non per tutto il sistema. Per fare questo, si deve
creare la directory <path>/etc/portage</path> (se ancora non esiste) e
modificare <path>/etc/portage/package.use</path>.
</p>

<p>
Per esempio, se non si vuole che <c>berkdb</c> sia supportato globalmente, ma
si desidera per <c>mysql</c>, si dovrebbe aggiungere:
</p>

<pre caption="/etc/portage/package.use example">
dev-db/mysql berkdb
</pre>

<p>
Si possono naturalmente anche <e>disabilitare</e> le flag USE per una certa
applicazione. Per esempio, se non si desidera il supporto <c>java</c> in
PHP:
</p>

<pre caption="/etc/portage/package.use secondo esempio">
dev-php/php -java
</pre>


</body>
</subsection>
<subsection>
<title>Dichiarare flag USE temporanei</title>
<body>

<p>
In certi casi è utile dichiarare flag USE una sola volta. Invece di editare
<path>/etc/make.conf</path> due volte (una per la modifica e l'altra per
riportare il tutto all'origine) è possibile dichiarare la variabile USE come
fosse una variabile ambiente. Si ricordi che, quando si ri-emerge o si
aggiorna questa applicazione (in modo esplicito o parte di un aggiornamento
del sistema), i cambiamenti saranno persi!
</p>

<p>
Segue un esempio di come rimuovere temporaneamente il supporto java
durante l'installazione di mozilla.
</p>

<pre caption="Usare USE come una variabile ambiente">
# <i>USE="-java" emerge mozilla</i>
</pre>

</body>
</subsection>
<subsection>
<title>Precedenza</title>
<body>

<p>
Naturalmente esiste un ordine definito riguardante quali dichiarazioni
abbiano la priorità nelle configurazioni USE. Non è necessario dichiarare
<c>USE="-java"</c> solo per vedere se "java" è ancora usato per una
impostazione con una alta priorità, ecco l'ordine di precedenza per la
configurazione USE (i primi hanno la priorità più bassa):
</p>

<ol>
  <li>
		USE predefinita dichiarata nei file <path>make.defaults</path> parte del
		proprio profilo
  </li>
  <li>
    Configurazione USE definita dall'utente in <path>/etc/make.conf</path>
  </li>
  <li>
		Configurazione USE definita dall'utente in
		<path>/etc/portage/package.use</path>
  </li>
  <li>
    Dichiarazione USE definita dall'utente come variabile ambiente
  </li>
</ol>

<p>
Per vedere la configurazione finale di <c>USE</c> che viene usata dal Portage,
eseguire <c>emerge --info</c> che visualizzerà una lista di tutte le variabili
rilevanti (incluso la variabile <c>USE</c>) col valore usato dal Portage.
</p>

<pre caption="Eseguire emerge --info">
# <i>emerge --info</i>
</pre>

</body>
</subsection>
<subsection>
<title>Adattare il vostro sistema alle nuove flag USE</title>
<body>

<p>
Se si sono cambiate le proprie flag USE e si desidera aggiornare l'intero
sistema, affinchè utilizzi le nuove flag USE, si può usare l'opzione
<c>--newuse</c> di <c>emerge</c>:
</p>

<pre caption="Ricompilare il sistema">
# <i>emerge --update --deep --newuse world</i>
</pre>

<p>
Dopo, eseguire il depclean del Portage per rimuovere le dipendenze
condizionali che erano state emerse nel vecchio sistema, ma che sono
diventate obsolete con l'uso delle nuove flag USE.
</p>

<warn>
Eseguire <c>emerge --depclean</c> è una operazione pericolosa e dovrebbe
essere fatta con cura. Si ricontrolli la lista fornita di pacchetti
"obsoleti" per assicurarsi che non si rimuovano pacchetti di cui si ha
bisogno. Nell'esempio seguente si è aggiunto <c>-p</c> per avere solo la
lista dei pacchetti senza rimuoverli.
</warn>

<pre caption="Rimuovere pacchetti obsoleti">
# <i>emerge -p --depclean</i>
</pre>

<p>
Quando il depclean ha finito, eseguire <c>revdep-rebuild</c> per ricompilare
le applicazioni che sono collegate agli oggetti forniti dai pacchetti
rimossi. <c>revdep-rebuild</c> è parte del pacchetto <c>gentoolkit</c>; non
dimenticarsi di emergerlo prima.
</p>

<pre caption="Eseguire revdep-rebuild">
# <i>revdep-rebuild</i>
</pre>

<p>
Quando tutto è finito, il sistema userà le nuove flag USE.
</p>


</body>
</subsection>
</section>
<section>
<title>flag USE specifici per pacchetto</title>
<subsection>
<title>Visualizzare flag USE disponibili</title>
<body>

<p>
Ecco l'esempio di <c>mozilla</c> per vedere quali flag si aspetta.  Per
questo usare <c>emerge</c> con le opzioni <c>--pretend</c> e
<c>--verbose</c>:
</p>

<pre caption="Vedere i flag USE usati">
# <i>emerge --pretend --verbose mozilla</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild   R   ] www-client/mozilla-1.7.12-r2  USE="crypt gnome java mozsvg ssl
truetype xprint -debug -ipv6 -ldap -mozcalendar -mozdevelop -moznocompose
-moznoirc -moznomail -moznoxft -postgres -xinerama" 0 kB
</pre>

<p>
<c>emerge</c> non è il solo strumento che fa questo, infatti ci sono
strumenti dedicati alla gestione delle informazioni sui pacchetti
come <c>equery</c> che fa parte del pacchetto <c>gentoolkit</c>.
Occorre prima installare <c>gentoolkit</c>:
</p>

<pre caption="Installare gentoolkit">
# <i>emerge gentoolkit</i>
</pre>

<p>
Ora è possibile usare <c>equery</c> con l'argomento <c>uses</c> per avere
la lista dei flag USE usati da un dato pacchetto.
Ad esempio per il pacchetto <c>gnumeric</c>:
</p>

<pre caption="Usare equery per vedere i flag USE usati">
# <i>equery uses gnumeric</i>
[ Colour Code : <i>set</i> <comment>unset</comment> ]
[ Legend      : (U) Col 1 - Current USE flags        ]
[             : (I) Col 2 - Installed With USE flags ]

 U I [ Found these USE variables in : app-office/gnumeric-1.2.0 ]
 - - <comment>libgda</comment>  : Adds GNU Data Access (CORBA wrapper) support for gnumeric
 - - <comment>gnomedb</comment> : unknown
 + + <i>python</i>  : Adds support/bindings for the Python language
 + + <i>bonobo</i>  : Adds support for gnome-base/bonobo (Gnome CORBA interfaces)
</pre>

</body>
</subsection>
</section>
</sections>
