<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/2005.1/hb-install-hppa-kernel.xml,v 1.2 2005/10/06 21:02:44 so Exp $ -->

<sections>

<version>5.3</version>
<date>2005-10-06</date>

<section>
<title>Timezone</title>
<body>

<p>
Innanzitutto è necessario selezionare la propria timezone, in modo che il
sistema riconosca in che parte del globo è collocato. Per la propria timezone,
consultare <path>/usr/share/zoneinfo</path>. Creare dunque un link simbolico a
<path>/etc/localtime</path> usando <c>ln</c>. Evitare le timezone di
<path>/usr/share/zoneinfo/Etc/GMT*</path> poichè i loro nomi non indicano le
rispettive zone. Per esempio <path>GMT-8</path> è GMT+8.
</p>

<pre caption="Abilitare le informazioni sulla timezone">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Per esempio GMT:)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installare i sorgenti</title>
<subsection>
<title>Scegliere un Kernel</title>
<body>

<p>
Il cuore, intorno al quale sono sviluppate tutte le distribuzioni, è il Kernel
di Linux. E' la parte di software compresa tra i programmi e l'hardware. Gentoo
dà la possibilità ai suoi utenti di scegliere tra diversi sorgenti del
kernel. Una lista completa delle descrizioni dei kernel disponibili, è
consultabile nella <uri link="http://www.gentoo.org/doc/it/gentoo-kernel.xml">
Guida ai Kernel Gentoo</uri>.
</p>

<p>
Per HPPA si hanno <c>hppa-sources</c>. Sono basati sui sorgenti del kernel 2.6.
Se si desidera installare un kernel 2.4, si deve installare Gentoo con una
connessione a Internet poichè non sono supportati nel CD di installazione.
Continuare con l'installazione del sorgente del kernel:
</p>

<pre caption="Installare un sorgente del kernel">
# <i>emerge hppa-sources</i>
</pre>

<p>
Se si dà un'occhiata a <path>/usr/src</path>, si dovrebbe vedere un link
simbolico chiamato <path>linux</path>, che punta al sorgente del kernel:
</p>

<pre caption="Il link simbolico al sorgente del kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.12.2-pa2
</pre>

<p>
Se così non fosse (cioè il link simbolico punta a un sorgente del kernel
differente), prima di continuare è necessario cambiare il link simbolico:
</p>

<pre caption="Cambiare il link simbolico al sorgente del kernel">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.12.2-pa2 linux</i>
</pre>

<p>
Ora si procede a configurare e compilare il sorgente del kernel. Tutte le
architetture possono usare <c>genkernel</c>, che compila un kernel generico
come quello usato dal CD di installazione. Si tratta però prima la
configurazione "manuale", poichè è il miglior modo di ottimizzare l'ambiente.
</p>

<p>
Se si desidera configurare il kernel manualmente, continuare con
<uri link="#manual">Default: Configurazione manuale</uri>. Per chi preferisce
usare <c>genkernel</c>, leggere <uri link="#genkernel">
Alternativa: Usare genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Default: Configurazione manuale</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
La configurazione manuale del kernel è spesso considerata la parte più
difficile che ogni utente Linux incontra. Non è assolutamente vero -- dopo
aver configurato un po' di kernel, l'operazione risulta semplice.
</p>

<p>
Una cosa <e>è</e> però vera: si deve conoscere il proprio sistema quando si
comincia una configurazione manuale del kernel. La maggior parte delle
informazioni può essere raccolta con emergere pciutils
(<c>emerge pciutils</c>) che contiene <c>lspci</c>. Si potrà usare
<c>lspci</c> con l'ambiente in cui si è effettuato il chroot. Si può ignorare
i warning <e>pcilib</e> (come pcilib: cannot open /sys/bus/pci/devices). E'
possibile anche eseguire <c>lspci</c> da un ambiente in cui <e>non si è
effettuato il chroot</e>. I risultati sono gli stessi. Si può anche eseguire
<c>lsmod</c> per vedere che moduli del
kernel usa il CD di installazione (potrebbe fornire un buon suggerimento su
cosa abilitare).
</p>

<p>
Andare nella directory del sorgente del kernel, e digitare
<c>make menuconfig</c> per visualizzare un menu di configurazione basato su
ncurses.
</p>

<pre caption="Aprire menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Vengono visualizzate molte sezioni di configurazione. Ecco ora alcune opzioni
che devono essere attivate (altrimenti Gentoo non può funzionare, o non
funziona correttamente senza modifiche aggiuntive).
</p>

</body>
</subsection>
<subsection>
<title>Attivare le opzioni indispensabili</title>
<body>

<p>
Prima di tutto, si deve attivare l'uso di codice/driver di sviluppo e
sperimentale. Se non lo si fa, non si ha la possibilità di utilizzare qualche
codice/driver molto importante:
</p>

<pre caption="Selezionare codice/driver sperimentale, General setup">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
General setup ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Andare su <c>File Systems</c> e selezionare il supporto per il filesystem che
si usa. <e>Non</e> compilarlo come modulo, altrimenti Gentoo non può montare
le partizioni. Selezionare anche <c>Virtual memory</c>,
<c>/proc file system</c>, <c>/dev file system</c> e
<c>Automatically mount at boot</c>:
</p>

<pre caption="Selezionare il filesystem">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)

<comment>(Selezionare una o più delle seguenti opzioni necessarie per il proprio sistema)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Se si sta usando PPPoE per connettersi a Internet o si sta usando un modem
dial-up, si ha bisogno delle seguenti opzioni nel kernel:
</p>

<pre caption="Selezionare i driver necessari per PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Le due opzioni di compressione non sono dannose, ma neppure necessarie; lo
stesso vale per <c>PPP over Ethernet</c>, che potrebbe essere usata soltanto
da <c>rp-pppoe</c> se configurato in modalità kernel.
</p>

<p>
Chi ne ha bisogno, non deve dimenticare
di includere il supporto per la scheda ethernet nel kernel.
</p>

<p>
Se si ha un HIL mouse o tastiera, non dimenticarsi di compilare il supporto
per loro.
</p>

<pre caption="Attivare il supporto HIL">
Input core support ---&gt;
  [*] Keyboard support
  [*] Mouse support
  [*] Event interface support
</pre>

<p>
Se non si ha nessun mouse sulla porta HIL, usare solo il supporto di base:
</p>

<pre caption="Supporto base HIL">
HIL support ---&gt;
  [*] HIL Keyboard (basic) support
</pre>

<p>
Se tuttavia si desidera il <e>completo</e> supporto
HIL, selezionare le seguenti opzioni:
</p>

<pre caption="Completo supporto HIL">
HIL support ---&gt;
  [*] HP System Device Controller i8042 Support
  [*] HIL MLC Support
  [*] HIL Keyboard (full) support
  [*] HIL Mouse &amp; Pointer support
</pre>

<p>
Includere anche il supporto per il driver del display:
</p>

<pre caption="Supporto per il driver del display">
Graphics support ---&gt;
  [*] Support for frame buffer devices
      [*] HP STI frame buffer device support
  Console display driver support ---&gt;
      [*] STI text console
</pre>

<p>
Una volta terminata la configurazione del kernel continuare con
<uri link="#compiling">Compilazione e Installazione</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilazione e Installazione</title>
<body>

<p>
Ora che il kernel è configurato, il prossimo passo sarà la sua compilazione
e la sua installazione. Uscire dal menu di configurazione e avviare il
processo di compilazione:
</p>

<pre caption="Compilare il kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Quando la compilazione è finita, è necessario copiare l'immagine del kernel
in <path>/boot</path>. Nel prossimo esempio si assume che è configurato e
compilato <c>hppa-sources-2.6.12.2-pa2</c>.
</p>

<pre caption="Installare il kernel">
# <i>cp vmlinux /boot/kernel-2.6.12.2-pa2</i>
</pre>

<p>
E' inoltre consigliato copiare il file di configurazione del kernel in
<path>/boot</path>.
</p>

<pre caption="Back up della configurazione del kernel">
# <i>cp .config /boot/config-2.6.12.2-pa2</i>
</pre>

<p>
Adesso continuare con <uri link="#kernel_modules">
Configurare i moduli del kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativa: Usare genkernel</title>
<body>

<p>
Se si sta leggendo questa sezione, vuol dire che si è scelto di usare lo
script <c>genkernel</c>, che configura il kernel.
</p>

<p>
Adesso che sono stati installati i sorgenti del kernel si può utilizzare lo
script <c>genkernel</c> per configurarlo e compilarlo automaticamente.
<c>genkernel</c> configura il kernel in modo quasi identico a come è
configurato quello del CD di installazione. Infatti quando si usa
<c>genkernel</c> per compilare il kernel, il sistema rileva tutto l'hardware
al boot, proprio come il CD di installazione. Poichè genkernel non richiede
nessuna configurazione manuale del kernel, questa è una soluzione ideale per
quegli utenti che hanno qualche difficoltà nel compilarsi il kernel da soli.
</p>

<p>
Ecco come usare genkernel. Per prima cosa si deve emergere l'ebuild di
genkernel:
</p>

<pre caption="Emergere genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Compilare ora il proprio kernel eseguendo <c>genkernel all</c>. Visto che
<c>genkernel</c> compila un kernel che supporta quasi tutto l'hardware
disponibile questa compilazione può essere un processo piuttosto lungo.
</p>

<p>
E' importante sapere anche che se la partizione di boot non usa ext2 o ext3
come filesystem, è necessario configurare manualmente il kernel usando
<c>genkernel --menuconfig all</c> e aggiungere il supporto per il filesystem
scelto <e>nel</e> kernel (cioè <e>non</e> come modulo).
</p>

<pre caption="Esecuzione di genkernel">
# <i>genkernel all</i>
<comment>(Output rimosso per facilitare la leggibilità)</comment>
* Kernel compiled successfully!
* Required Kernel Params:
*   : root=/dev/ram0 init=/linuxrc real_root=/dev/$ROOT
*     where $ROOT is the devicenode for your root partition as
*     you should have specified in /etc/fstab
*              
* You MUST tell your bootloader to use the generated initrd
*              
* Recommended Kernel Params:
*   : vga=0x317 splash=verbose
*              
* Do NOT report kernel bugs (configs included) as genkernel bugs.
* Make sure you have the latest genkernel before reporting bugs
*              
* For more info see /usr/share/genkernel/README
</pre>

<p>
Una volta completato <c>genkernel</c>, viene creato un kernel completo di
moduli e <e>root disk iniziale</e> (initrd). Il kernel e initrd intervengono
quando si configura un boot loader. E' consigliabile dunque annotare il nome
del kernel e del initrd, poichè servono
quando si scrive il file di configurazione del bootloader. Initrd si avvia
subito dopo il boot per effettuare un rilevamento automatico dell'hardware
(come nel CD di installazione), prima che si avvii il sistema "reale".
</p>

<pre caption="Controllo dell'immagine del kernel e dell'initrd">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

<p>
Ancora un altro passo per ottenere il sistema più simile al CD di
installazione: emergere <c>coldplug</c>. Mentre initrd rileva automaticamente
l'hardware necessario per avviare il sistema, <c>coldplug</c> autorileva tutto
il resto. Per emergere e abilitare <c>coldplug</c>, digitare:
</p>

<pre caption="Emergere ed abilitare coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug default</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Configurare i moduli del kernel</title>
<subsection>
<title>Configurare i moduli</title>
<body>

<p>
Si dovrebbero inserire i moduli che si vogliono caricare in
<path>/etc/modules.autoload.d/kernel-2.6</path>. Se si vuole, si possono anche
aggiungere altre opzioni ai moduli.
</p>

<p>
Per vedere tutti i moduli disponibili, eseguire il comando <c>find</c>. Non
dimenticarsi di sostituire "&lt;kernel version&gt;" con
la versione del kernel che si è compilata:
</p>

<pre caption="Vedere tutti i moduli disponibili">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Per esempio, per caricare automaticamente
il modulo <c>3c59x.o</c>, modificare il file <path>kernel-2.6</path> e inserire
il nome.
</p>

<pre caption="Modificare /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Continuare l'installazione con la: <uri link="?part=1&amp;chap=8">
Configurazione del sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
