<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!--
$Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/2005.1/hb-install-x86-bootloader.xml,v 1.4 2006/02/04 00:42:56 mascherpa Exp $ -->

<sections>

<version>5.5</version>
<date>2006-02-02</date>

<section>
<title>La scelta</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Dopo aver configurato e compilato il kernel e inserito i necessari file di
configurazione, è venuto il momento di installare il programma che esegue il
kernel nel momento in cui si avvia il sistema. Tale programma è chiamato
<e>bootloader</e>. Per la piattaforma x86, Gentoo Linux fornisce <uri
link="#grub">GRUB</uri> e <uri link="#lilo">LILO</uri>.
ma prima di installare uno di questi due bootloader si spiega come configurare
il framebuffer (nel caso lo si desideri ovviamente). Con il framebuffer è
possibile
eseguire la linea di comando Linux con alcune caratteristiche grafiche (come
lo sfondo che viene fornito da Gentoo).
</p>

</body>
</subsection>
<subsection>
<title>Opzionale: Framebuffer</title>
<body>

<p>
<e>Se</e> si è configurato il kernel con il supporto framebuffer (o si è usata
la configurazione di default <c>genkernel</c>, è possibile attivarlo aggiungendo
una istruzione <c>vga</c> e/o <c>video</c> al file di configurazione del
bootloader.
</p>

<p>
Innanzitutto è necessario sapere che tipo di dispositivo framebuffer si sta
utilizzando.
Se si utilizza un kernel Gentoo (come <c>gentoo-sources</c>) è possibile
scegliere
<c>vesafb-tng</c> come <e>VESA driver type</e> (impostazione di default per quel
tipo
di kernel). Se è questo il caso, con l'utilizzo di <c>vesafb-tng</c> non è
necessario
l'utilizzo della direttiva <c>vga</c>. In caso contrario si può utilizzare il
driver
<c>vesafb</c> ed è necessario impostare la direttiva <c>vga</c>.
</p>

<p>
La direttiva <c>vga</c> controlla la risoluzione e la definizione del solore
del proprio schermo framebuffer <c>vesafb</c>. Come è possibile leggere in
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> (che viene installato
insieme ai pacchetti del kernel) è necessario passare il numero VESA
corrispondente
alle impsotazioni di risoluzione e definizione desidereate.
</p>

<p>
la seguente tabella elenca le diverse risoluzioni e definizioni di colore ed
evidenzia
il valore da passare con la direttiva <c>vga</c>.
</p>

<table>
<tr>
  <ti></ti>
  <th>640x480</th>
  <th>800x600</th>
  <th>1024x768</th>
  <th>1280x1024</th>
</tr>
<tr>
  <th>256</th>
  <ti>0x301</ti>
  <ti>0x303</ti>
  <ti>0x305</ti>
  <ti>0x307</ti>
</tr>
<tr>
  <th>32k</th>
  <ti>0x310</ti>
  <ti>0x313</ti>
  <ti>0x316</ti>
  <ti>0x319</ti>
</tr>
<tr>
  <th>64k</th>
  <ti>0x311</ti>
  <ti>0x314</ti>
  <ti>0x317</ti>
  <ti>0x31A</ti>
</tr>
<tr>
  <th>16M</th>
  <ti>0x312</ti>
  <ti>0x315</ti>
  <ti>0x318</ti>
  <ti>0x31B</ti>
</tr>
</table>

<p>
La direttiva <c>video</c> controlla le opzioni di visualizzazione framebuffer.
Necessita
del driver framebuffer (<c>vesafb</c> per i kernel 2.6, o <c>vesa</c> per i
kernel
2.4) seguito dalle impostazioni da abilitare. Tutte le variabili  coinvolte sono
elencate
in <path>/usr/src/linux/Documentation/fb/vesafb.txt</path>, ma di seguito
vengono riportate
le più usate:
</p>

<table>
<tr>
  <th>Impostazione</th>
  <th>Descrizione</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
  Assume che la scheda grafica possa utilizzare la memoria come una coda
circolare e
  tornare all'inzio quando è arrivato alla fine
  </ti>
</tr>
<tr>
  <ti>mtrr</ti>
  <ti>
    Imposta i registri MTRR
  </ti>
</tr>
<tr>
  <ti><c>mode</c></ti>
  <ti>
    (solo <c>vesafb-tng</c>)<br/>
    Imposta la risoluzione, la profondità di colore e il periodo di refresh. Ad
esempio
    <c>1024x768-32@85</c> per una risoluzione 1024x768, 32 bit di colore ed un
refresh di 85 Hz.
  </ti>
</tr>
</table>

<p>
Il risultato di queste due impostazioni può risultare in qualcosa del tipo
<c>vga=0x318
video=vesafb:mtrr,ywrap</c> o <c>video=vesafb:mtrr,ywrap,1024x768-32@85</c>. 
E' necessario annotare queste impostazioni per usarle più tardi.
</p>

<p>
Continuare ora con l'installazione di <uri link="#grub">GRUB</uri> <e>o</e> <uri
link="#lilo">LILO</uri>.
</p>

</body>
</subsection>
</section>
<section id="grub">
<title>Default: Usare GRUB</title>
<subsection>
<title>Comprendere la terminologia di GRUB</title>
<body>

<p>
La parte più critica da capire di GRUB, è quella nella quale si deve prendere
confidenza con il modo in cui GRUB si riferisce ai dischi e alle partizioni. La
partizione di Linux <path>/dev/hda1</path> è chiamata da GRUB
<path>(hd0,0)</path>. Prestare attenzione alle parentesi tra <path>hd0,0</path>,
sono necessarie.
</p>

<p>
I dischi vengono contati da zero invece che da "a", e le partizioni partono da
zero invece che da uno. Prestare ancora attenzione al fatto che tra le
periferiche hd vengono inclusi solo gli hard disk e non le periferiche atapi-ide
come i lettori cdrom e i masterizzatori. Lo stesso vale per i dischi SCSI.
(Normalmente questi prendono numeri più alti rispetto a quelli ide, eccetto
quando il bios è configurato per fare il boot dai dischi SCSI.) Quando si
imposta il BIOS per avviare da un hard disk differente, <e>questo</e> hard disk
è visto come <path>hd0</path>.
</p>

<p>
Avendo quindi un hard disk in <path>/dev/hda</path>, un lettore cdrom in
<path>/dev/hdb</path>, un masterizzatore in <path>/dev/hdc</path>, un secondo
hard disk in <path>/dev/hdd</path> e nessun disco SCSI, <path>/dev/hdd7</path>
viene trasformato in <path>(hd1,6)</path>. Potrebbe suonare complicato e lo è in
effetti, ma come si vedrà, GRUB offre un meccanismo di completamento con il
tasto TAB che si dimostra comodo per coloro che hanno un numero elevato di hard
disk e partizioni, e per coloro che sono a disagio con lo schema numerico di
GRUB.
</p>

<p>
Dopo essere entrati nello spirito è il momento di installare GRUB.
</p>

</body>
</subsection>
<subsection>
<title>Installare GRUB</title>
<body>

<p>
Per installare GRUB, si deve prima emergerlo:
</p>

<pre caption="Installare GRUB">
# <i>emerge grub</i>
</pre>

<p>
Nonostante GRUB sia installato, si deve ancora modificare un file di
configurazione perchè GRUB
venga installato nel MBR in modo che possa avviare il nuovo kernel. Creare
<path>/boot/grub/grub.conf</path> con <c>nano</c> (o con un altro editor):
</p>

<pre caption="Creare /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Ora è necessario modificare <path>grub.conf</path>. Seguono due possibili
<path>grub.conf</path> per l'esempio di partizione usato in questa guida. Viene
però analizzato a fondo solo il primo <path>grub.conf</path>. Assicurarsi di
personalizzare le impostazioni indicando la
propria immagine del kernel e il proprio initrd.
</p>

<ul>
  <li>
    Il primo <path>grub.conf</path> è per chi non ha usato <c>genkernel</c> per
compilare il kernel
  </li>
  <li>
    Il secondo <path>grub.conf</path> è per chi ha usato <c>genkernel</c>
  </li>
</ul>

<note>
Se il filesystem root utilizza JFS si <e>deve</e> aggiungere "ro" alla linea del
<c>kernel</c> perchè JFS necessita di replicare il proprio log prima di poter
accedere anche in scrittura.
</note>

<pre caption="grub.conf per utenti che non hanno usato genkernel">
<comment># Quale opzione viene avviata di default. 0 è la prima, 1 la seconda etc.</comment>
default 0
<comment># Quanti secondi attenedere prima di avviare l'opzione di default.</comment>
timeout 30
<comment># Un'immagine gradevole
# Da commentare se non si dispone di scheda grafica</comment>
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux 2.6.12-r10
<comment># La partizione dove si trova l'immagine del kernel (o il sistema operativo)</comment>
root (hd0,0)
kernel /boot/kernel-2.6.12-gentoo-r10 root=/dev/hda3

<comment># Le prossime tre righe vanno messe solo se si ha un dualboot con Windows.</comment>
<comment># In questo caso, Windows è in /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<pre caption="grub.conf per utenti che hanno usato genkernel">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux 2.6.12-r10
root (hd0,0)
kernel /boot/kernel-2.6.12-gentoo-r10 root=/dev/ram0
 init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev
 initrd /boot/initrd-2.6.12-gentoo-r10

<comment># Solo nel caso si desideri il dual-boot</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<p>
Se si usa uno schema di partizioni e/o un'immagine del kernel differenti da
quelli dell'esempio, cambiare le impostazioni di conseguenza. Assicurarsi che
qualsiasi cosa che segue un GRUB-device (come <path>(hd0,0)</path>), sia
relativa al mountpoint, e non a root. In altre parole,
<path>(hd0,0)/boot/grub/splash.xpm.gz</path> è
<path>/boot/grub/splash.xpm.gz</path> poichè <path>(hd0,0)</path> è
<path>/boot</path>.
</p>

<p>
Inoltre, se si sceglie di utilizzare uno schema di partizionamento diverso e
non si è posto <path>/boot</path> in una partizione separata l'aggiunta
di <path>/boot</path> negli esempi precedenti è davvero <e>essenziale</e>. Se 
invece si è seguito lo schema suggerito l'utilizzo del prefisso
<path>/boot</path> non è richiesto ma può essere utilizzato con un link
simbolico a <path>boot</path>. In breve, gli esempi proposti sono
funzionanti sia che si sia definta una partizione separata per 
<path>/boot</path> che no.
</p>

<p>
Se si ha bisogno di inserire opzioni ulteriori al kernel, si deve aggiungerle
alla fine del comando kernel. Si è già inserita una opzione
(<c>root=/dev/hda3</c> o <c>real_root=/dev/hda3</c>), ma se ne possono inserire
altre, ad esempio l'istruzione <c>video</c> e/o <c>vga</c> per il framebuffer,
di cui si è parlato precedentemente.
</p>

<p>
Se si utilizza un kernel successivo al 2.6.7 e il proprio BIOS non riconosce
i drive grandi è necessario aggiungere l'istruzione
<c>hdx=stroke</c>.
</p>

<p>
Coloro che usano <c>genkernel</c> devono sapere che i loro kernel hanno le
stesse opzioni di boot del CD di Installazione. Per esempio, se si disponde di
un disco SCSI, si dovrebbe aggiungere <c>doSCSI</c> come opzione del kernel.
</p>

<p>
Salvare ora il file <path>grub.conf</path> e uscire. Bisogna ancora installare
GRUB nel MBR (Master Boot Record) in modo che GRUB venga eseguito
automaticamente al boot del sistema.
</p>

<p>
Gli sviluppatori di GRUB raccomandano l'utilizzo di <c>grub-install</c>.
In ogni caso, se per qualche ragione <c>grub-install</c> non funzionasse
è ancora possibile installare GRUB manualmente.
</p>

<p>
Continuare la lettura con <uri link="#grub-install-auto">Default: Impostare GRUB
con
grub-install</uri> o <uri link="#grub-install-manual">Alternativa: Impostare
GRUB manualmente</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Default: Impostare GRUB con grub-install</title>
<body>

<p>
Per installare GRUB è necessario lanciare il comando <c>grub-install</c>. In
questo caso però
<c>grub-install</c> non può funzionare come al solito, perchè siamo in un
ambiente in chroot.
Dobbiamo prima aggiornare <path>/etc/mtab</path> (il file contenente le
informazioni sui filesystem montati): fortunatamente c'è un modo semplice di
farlo, copiando <path>/proc/mounts</path> in <path>/etc/mtab</path> ed
escludendo <c>rootfs</c> se non è stata creata una partizione di boot separata.
Il seguente comando è valido in ogni caso:
</p>

<pre caption="Aggiornamento di /etc/mtab">
# <i>grep -v rootfs /proc/mounts &gt; /etc/mtab</i>
</pre>

<p>
Ora è possibile installare GRUB con <c>grub-install</c>:
</p>

<pre caption="Eseguire grub-install">
# <i>grub-install /dev/hda</i>
</pre>

<p>
Per ulteriori informazioni riguardanti GRUB consultare le <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> o il <uri
link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

<p>
Continuare la lettura con il <uri link="#reboot">Reboot del sistema</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Alternativa: Impostare GRUB manualmente</title>
<body>

<p>
Per iniziare la configurazione di GRUB, digitare <c>grub</c>. Viene visualizzato
il prompt della linea di comando di grub, <path>grub&gt;</path>. Ora si può
procedere a digitare i comandi corretti per installare il boot record di GRUB
sull'hard disk.
</p>

<pre caption="Avviare la shell di GRUB">
# <i>grub</i>
</pre>

<note>
Se il sistema non dispone di un lettore floppy, aggiungere l'opzione
<c>--no-floppy</c>
al comando precedente per evitare che grub lo cerchi.
</note>

<p>
Nella configurazione di esempio, si desidera installare GRUB in modo che legga
le proprie informazioni dalla partizione di boot <path>/dev/hda1</path> e
installare il boot record di GRUB nel MBR (master boot record) dell'hard disk,
in modo che la prima cosa che si veda, quando si accende il computer, sia il
prompt di GRUB. Se non si è seguita la configurazione di esempio durante
l'installazione, è necessario cambiare i comandi di conseguenza.
</p>

<p>
Il meccanismo di completamento con il tasto TAB, può essere usato da dentro
GRUB. Per esempio, se si digita "<c>root (</c>" seguito da TAB, viene elencata
una lista degli hard disk disponibili (come <path>hd0</path>). Se si digita
"<c>root (hd0,</c>" seguito da TAB, viene invece elencata una lista delle
partizioni disponibili nel disco (come <path>hd0,0</path>).
</p>

<p>
Con il tasto TAB non dovrebbe essere difficile impostare GRUB. Ecco ora la vera
e propria configurazione di GRUB.
</p>

<pre caption="Installare GRUB nel MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(Specifica dove è la partizione /boot)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Installa GRUB nel MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Esce dalla shell di GRUB)</comment>
</pre>

<note>
Se si desidera installare GRUB in un'altra partizione, invece che nel MBR, è
necessario cambiare il comando <c>setup</c>, in modo che esso punti alla
partizione corretta. Per esempio, se si vuole installare GRUB in
<path>/dev/hda3</path>, allora il comando diventa <c>setup (hd0,2)</c>. Ma
questo non è un caso molto comune.
</note>

<p>
Per ulteriori informazioni riguardanti GRUB consultare le <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> o il <uri
link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

<note>
Quando si reinstalla un kernel, non è più necessario copiare i file.
E' sufficiente eseguire <c>make install</c> dopo la compilazione del kernel e
automaticamente vengono copiati i file e reimpostata la configurazione
di grub.
</note>

<p>
Continuare la lettura con il <uri link="#reboot">Reboot del sistema</uri>.
</p>

</body>
</subsection>
</section>
<section id="lilo">
<title>Alternativa: Usare LILO</title>
<subsection>
<title>Installare LILO</title>
<body>

<p>
LILO, il LInuxLOader, è il più provato e il più usato tra i bootloader di Linux.
Però a LILO mancano alcune caratteristiche che non mancano a GRUB (è per questo
che GRUB sta guadagnando sempre più popolarità). Tuttavia LILO è ancora usato
perchè, su alcuni sistemi, GRUB non funziona, mentre LILO funziona. LILO è usato
anche perchè le persone che lo usano non vogliono abbandonarlo. Gentoo li
supporta entrambi ed ecco come si usa LILO.
</p>

<p>
Installare LILO è veloce, utilizzare <c>emerge</c> così:
</p>

<pre caption="Installare LILO">
# <i>emerge lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Configurare LILO</title>
<body>

<p>
Per configurare LILO si deve creare <path>/etc/lilo.conf</path>. Aprire l'editor
preferito (in questo manuale si usa <c>nano</c>) e creare il file.
</p>

<pre caption="Creare /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
In una sezione precedente, si è chiesto di ricordare il nome dell'immagine del
kernel che si è creata. Nel prossimo esempio di <path>lilo.conf</path> si usa
anche lo schema di partizioni dell'esempio precedente. Ci sono due sezioni
separate:
</p>

<ul>
  <li>
    Una per chi non ha usato <c>genkernel</c> per compilare il kernel
  </li>
  <li>
    Una per chi ha usato <c>genkernel</c> per compilare il kernel
  </li>
</ul>

<p>
E' importante assicurarsi di usare la <e>propria</e> immagine del kernel ed
eventualmente
il <e>proprio</e> initrd.
</p>

<pre caption="Esempio di /etc/lilo.conf">
boot=/dev/hda             <comment># Installa LILO nel MBR</comment>
prompt                    <comment># Dà possibilità di selezionare un'altra sezione</comment>
delay=50                  <comment># Aspetta 5 secondi prima di avviare il default</comment>
default=gentoo            <comment># Passato il timeout, avvia la sezione "gentoo"</comment>

<comment># Per utenti che non hanno usato genkernel</comment>
image=/boot/kernel-2.6.12-gentoo-r10
  label=gentoo            <comment># Il nome dato alla sezione</comment>
  read-only               <comment># Avvio con root di sola lettura. Non modificare!</comment>
  root=/dev/hda3          <comment># Posizione del filesystem root</comment>

<comment># Per utenti che hanno usato genkernel</comment>
image=/boot/kernel-2.6.12-gentoo-r10
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev"
  initrd=/boot/initrd-2.6.12-gentoo-r10

<comment># Le due righe seguenti sono necessarie solo per un dualboot con Windows.</comment>
<comment># In questo caso, Windows è in /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Se si usa uno schema di partizioni differente e/o un'immagine del kernel non
uguale a quella dell'esempio, cambiare le impostazioni di conseguenza.
</note>

<p>
Se si ha bisogno di inserire ulteriori opzioni al kernel, si deve aggiungere
<c>append</c> alla sezione. Come esempio, si usa <c>video</c> per abilitare il
framebuffer:
</p>

<pre caption="Usare append per aggiungere opzioni al kernel">
image=/boot/kernel-2.6.12-gentoo-r10
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="video=vesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
Se il BIOS non riconosce
i drive grandi e si utilizza un kernel 2.6.7 o superiore è necessario aggiungere
l'istruzione
<c>hdx=stroke</c>.
</p>

<p>
Coloro che usano <c>genkernel</c> devono sapere che i loro kernel hanno le
stesse opzioni di boot del CD di Installazione. Per esempio, se si disponde di
un disco SCSI, si deve aggiungere <c>doSCSI</c> come opzione del kernel.
</p>

<p>
Ora salvare il file e uscire. Per finire, si deve eseguire <c>/sbin/lilo</c>,
così LILO può applicare <path>/etc/lilo.conf</path> al sistema (per esempio,
installarsi sul disco). E' importante ricordare di eseguire <c>/sbin/lilo</c>
ogni volta che si
installa un nuovo kernel o si cambiano le impostazioni del menu.
</p>

<pre caption="Finire l'installazione di LILO">
# <i>/sbin/lilo</i>
</pre>

<note>
Quando si reinstalla un kernel, non è più necessario copiare i file.
E' sufficiente eseguire <c>make install</c> dopo la compilazione del kernel e
automaticamente vengono copiati i file e reimpostata la configurazione
di LILO.
</note>

<p>
Continuare ora con il <uri link="#reboot">Reboot del sistema</uri>.
</p>

</body>
</subsection>
</section>
<section id="reboot">
<title>Reboot del sistema</title>
<subsection>
<body>

<p>
Uscire dall'ambiente in chroot e smontare tutte le partizioni. Ed eseguire poi
l'ultimo comando, <c>reboot</c>.
</p>

<pre caption="Umount della partizioni e reboot">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/dev /mnt/gentoo/proc
/mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Non dimenticare di rimuovere il CD bootabile, altrimenti verrà di nuovo
avviato il CD al posto del sistema appena installato.
</p>

<p>
Una volta effettuato il reboot nella nuova installazione Gentoo, concludere con
<uri
link="?part=1&amp;chap=11">Termine dell'installazione di Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
