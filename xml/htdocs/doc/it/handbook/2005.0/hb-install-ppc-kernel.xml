<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/2005.0/hb-install-ppc-kernel.xml,v 1.2 2005/04/17 23:40:26 so Exp $ -->

<sections>

<version>4.5</version>
<date>2005-04-16</date>

<section>
<title>Timezone</title>
<body>

<p>
Innanzitutto è necessario selezionare la propria timezone, in modo che il sistema riconosca in che parte del globo è collocato. Per la propria timezone, consultare <path>/usr/share/zoneinfo</path>. Creare dunque un link simbolico a <path>/etc/localtime</path> usando <c>ln</c>:
</p>

<pre caption="Abilitare le informazioni sulla timezone">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Per esempio GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installare i sorgenti</title>
<subsection>
<title>Scegliere un Kernel</title>
<body>

<p>
Il cuore, attorno al quale sono sviluppate tutte le distribuzioni, è il Kernel di Linux. E' la parte di software compresa tra i programmi e l'hardware. Gentoo dà la possibilità ai suoi utenti di scegliere tra diversi sorgenti del kernel. Una lista completa delle descrizioni dei kernel disponibili è consultabile nella <uri link="http://www.gentoo.org/doc/it/gentoo-kernel.xml">Guida ai Kernel Gentoo</uri>.
</p>

<p>
Per l'architettura PPC si può scegliere tra <c>vanilla-sources</c> e <c>gentoo-sources</c> (entrambi del ramo 2.6). Il secondo è disponibile quando si esegue un'installazione senza connessione di rete. Oltre a questi ci sono dei sorgenti che contengono delle patch speciali per i sistemi Pegasos: <c>pegasos-sources</c>. Ora è possibile dunque installare i sorgenti del kernel tramite <c>emerge</c>.
</p>

<pre caption="Installare i sorgenti del kernel">
# <i>emerge gentoo-sources</i>
</pre>

<note>
I sorgenti PowerPC sono basati su kernel 2.6.10 con patch di sicurezza del 2.6.11. I kernel 2.6.11 hanno dato molti problemi con macchine PowerPC.
</note>

<p>
Se si dà un'occhiata a <path>/usr/src</path>, si dovrebbe vedere un link simbolico chiamato <path>linux</path>, che punta al sorgente del kernel. Si assume che il sorgente del kernel installato è <c>gentoo-sources-2.6.10-r8</c>:
</p>

<pre caption="Il link simbolico al sorgente del kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           22  Mar 18 16:23 /usr/src/linux -&gt; linux-2.6.10-gentoo-r8
</pre>

<p>
Se il link simbolico punta a un sorgente del kernel differente (<c>linux-2.6.10-gentoo-r8</c> è solo un esempio), è necessario cambiare il link simbolico in modo che punti a quello giusto:
</p>

<pre caption="Cambiare il link simbolico al sorgente del kernel">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.10-gentoo-r8 linux</i>
</pre>

<p>
Ora si procede a configurare e compilare i sorgenti del kernel. Allo scopo è possibile utilizzare <c>genkernel</c>, che compila un kernel generico come quello usato dal CD di installazione. Prima però viene trattata la configurazione "manuale", poiché è il miglior modo di ottimizzare l'ambiente.
</p>

<p>
se si desidera configurare manualmente il kernel, continuare con <uri link="#manual">Default: Configurazione manuale</uri>. Se si desidera usare <c>genkernel</c>, continuare con <uri link="#genkernel">Alternativa: Usare genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Default: Configurazione manuale</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
La configurazione manuale del kernel è spesso considerata la parte più difficile che ogni utente Linux incontra. Non è assolutamente vero -- dopo aver configurato un paio di kernel, l'operazione risulta semplice.
</p>

<p>
Tuttavia una cosa <e>è</e> vera: quando si comincia una configurazione manuale del kernel si deve conoscere il proprio sistema. La maggior parte delle informazioni possono essere raccolte vedendo il contenuto di <path>/proc/pci</path> (o usando lspci se disponibile). Si può anche eseguire <c>lsmod</c> per vedere che moduli del kernel usa il CD di installazione (potrebbe fornire un buon suggerimento su cosa abilitare).
</p>

<p>
Andare nella directory dei sorgenti del kernel, e digitare <c>make menuconfig</c> per visualizzare un menu di configurazione basato su ncurses.
</p>

<pre caption="Aprire menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Vengono visualizzate molte sezioni di configurazione. Ecco ora alcune opzioni che devono essere attivate (altrimenti Gentoo non può funzionare, o non funziona correttamente senza modifiche aggiuntive).
</p>

</body>
</subsection>
<subsection>
<title>Attivare le opzioni indispensabili</title>
<body>

<p>
Prima di tutto, si deve attivare l'uso di codice/driver di sviluppo e sperimentale. Se non lo si fa, non si ha la possibilità di utilizzare qualche codice/driver molto importante:
</p>

<pre caption="Selezionare codice/driver sperimentale">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Andare su <c>File Systems</c> e selezionare il supporto per i filesystem che si usano. <e>Non</e> compilarlo come modulo, altrimenti Gentoo non può montare le partizioni. Selezionare anche <c>/proc file system</c> e <c>Virtual memory</c>. <e>Non</e> selezionare <c>/dev file system</c>.
</p>

<pre caption="Selezionare i filesystem">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [ ] /dev file system support (OBSOLETE)
    [*] Virtual memory file system support (former shm fs)

<comment>(Selezionare una o più delle seguenti, secondo necessità)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Se si utilizza PPPoE per connettersi a Internet, si ha bisogno delle seguenti opzioni nel kernel:
</p>

<pre caption="Selezionare i driver necessari per PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Le due opzioni di compressione non sono dannose, ma neppure necessarie; lo stesso vale per <c>PPP over Ethernet</c>, che potrebbe essere usata soltanto da <c>rp-pppoe</c> se configurato in modalità kernel.
</p>

<p>
Chi ne ha bisogno, non deve dimenticare di includere il supporto per la scheda ethernet nel kernel.
</p>

<p>
Disattivare ADB raw keycodes:
</p>

<pre caption="Disattivare ADB raw keycodes">
Macintosh Device Drivers ---&gt;
  [ ] Support for ADB raw keycodes
</pre>

<p>
Scegliere anche il supporto corretto a RTC (<e>disattivare</e> l'opzione <c>Enhanced RTC</c>):
</p>

<pre caption="Attivare l'opzione RTC corretta">
Character devices ---&gt;
  [ ] Enhanced RTC

General setup ---&gt;
  [*] Support for /dev/rtc
</pre>

<p>
Gli utilizzatori di sistemi OldWorld devono attivare il supporto a HFS, in modo da poter copiare i kernel nella partizione di MacOS. E' necessario anche per le macchine NewWorld per la partizione Apple_Bootstrap:
</p>

<pre caption="Attivare il supporto a HFS">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
Una volta terminata la configurazione del kernel continuare con <uri link="#compiling">Compilazione e Installazione</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilazione e Installazione</title>
<body>

<p>
Ora che il kernel è configurato, il passo successivo è la compilazione e l'installazione. Uscire dal menu di configurazione ed eseguire i comandi per compilare il kernel:
</p>

<pre caption="Compilare il kernel">
# <i>make all &amp;&amp; make modules_install</i>
</pre>

<p>
Una volta terminata la compilazione, copiare l'immagine del kernel in <path>/boot</path> (assicurarsi che sia montata correttamente sui Pegasos). 
</p>

<pre caption="Installazione del kernel">
<comment>sostituire 2.6.10 con versione corretta</comment>
(Apple/IBM)  # <i>cp vmlinux /boot/kernel-2.6.10</i>
(Pegasos)    # <i>cp arch/ppc/boot/images/zImage.chrp /boot/kernel-2.6.10</i>
</pre>

<p>
E' anche consigliato (per ogni evenienza) copiare il file di configurazione del kernel in <path>/boot</path>.
</p>

<pre caption="Copiare il file di configurazione del kernel">
# <i>cp .config /boot/config-2.6.10-gentoo-r8</i>
</pre>

<p>
Adesso continuare con <uri link="#kernel_modules">Installare i moduli del Kernel separati</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Installare i moduli del Kernel separati</title>
<subsection>
<title>Configurare i moduli</title>
<body>

<p>
E' possibile elencare tutti i moduli che si desidera caricare automaticamente in <path>/etc/modules.autoload.d/kernel-2.6</path>. E' anche possibile specificare opzioni extra per i moduli, se lo si desidera.
</p>

<p>
Per visualizzare tutti i moduli disponibili eseguire il comando <c>find</c>. Non dimenticarsi di sostituire "&lt;kernel version&gt;" con la versione del kernel che si è compilata:
</p>

<pre caption="Visualizzare tutti i moduli disponibili">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Per esempio, per caricare automaticamente il modulo <c>3c59x.o</c>, modificare il file <path>kernel-2.6</path> e inserire il nome:
</p>

<pre caption="Modificare /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Continuare l'installazione con <uri link="?part=1&amp;chap=8">Configurazione del sistema</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativa: Usare genkernel</title>
<body>

<p>
Se si sta leggendo questa sezione, vuol dire che si è scelto di usare lo script <c>genkernel</c>, che configura il kernel.
</p>

<p>
Adesso che sono stati installati i sorgenti del kernel si può utilizzare lo script <c>genkernel</c> per configurarlo e compilarlo automaticamente. <c>genkernel</c> configura il kernel in modo quasi identico a come è configurato quello del CD di installazione. Infatti quando si usa <c>genkernel</c> per compilare il kernel, il sistema rileva tutto l'hardware al boot, proprio come il CD di installazione. Poichè genkernel non richiede nessuna configurazione manuale del kernel, questa è una soluzione ideale per quegli utenti che hanno qualche difficoltà nel compilarsi il kernel da soli.
</p>

<p>
Ecco come usare genkernel. Per prima cosa si deve emergere l'ebuild di genkernel:
</p>

<pre caption="Emergere genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Copiare la configurazione del kernel usata da CD di installazione nel posto in cui genkernel cerca la configurazione del kernel di default:
</p>

<pre caption="Copiare la configurazione del kernel del CD di installazione">
# <i>zcat /proc/config.gz > /usr/share/genkernel/ppc/kernel-config-2.6</i>
</pre>

<p>
Compilare ora il proprio kernel eseguendo <c>genkernel --udev all</c>. Visto che <c>genkernel</c> compila un kernel che supporta quasi tutto l'hardware disponibile questa compilazione può essere un processo piuttosto lungo.
</p>

<p>
E' importante sapere anche che se la partizione dove il kernel dovrebbe essere posto, non usa ext2 o ext3 come filesystem è necessario configurare manualmente il kernel usando <c>genkernel --menuconfig all</c> e aggiungere il supporto per il filesystem scelto <e>nel</e> kernel (cioè <e>non</e> come modulo). Gli utenti di EVMS2 o LVM2 probabilmente vorranno aggiungere <c>--evms2</c> o <c>--lvm2</c> come argomenti.
</p>

<pre caption="Esecuzione di genkernel">
# <i>genkernel --udev all</i>
</pre>

<p>
Una volta completato <c>genkernel</c>, viene creato un kernel completo di moduli e <e>root disk iniziale</e> (initrd). Il kernel e initrd intervengono quando si configura un boot loader. E' consigliabile dunque annotare il nome del kernel e del initrd, poichè servono quando si scrive il file di configurazione del bootloader. Initrd si avvia subito dopo il boot per effettuare un rilevamento automatico dell'hardware (come nel CD di installazione), prima che si avvii il sistema "reale".
</p>

<pre caption="Controllo dell'immagine del kernel e dell'initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Se si desidera che il sistema sia come l'ambiente del CD di installazione, si dovrebbe emergere <c>coldplug</c> terminata l'installazione di Gentoo. Mentre initrd rileva automaticamente l'hardware necessario per avviare il sistema, <c>coldplug</c> autorileva tutto il resto. <c>coldplug</c> è disponibile come pacchetto binario sul CD di pacchetti.
</p>

<pre caption="Emergere ed abilitare coldplug">
<comment>(Necessario farlo dopo l'installazione, durante le istruzioni di installazione di GRP)</comment>
# <i>emerge -k coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

<p>
Se si desidera usare hotplug, si deve installarlo e impostarlo:
</p>

<pre caption="Emergere ed abilitare hotplug">
<comment>(Necessario farlo dopo l'installazione, durante le istruzioni di installazione di GRP)</comment>
# <i>emerge -k hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

<p>
Continuare l'installazione con <uri link="?part=1&amp;chap=8">Configurazione del sistema</uri>.
</p>

</body>
</section>

</sections>
