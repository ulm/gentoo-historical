<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->


<sections>
<section>
<title>La scelta</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Dopo aver configurato e compilato il kernel e inserito i necessari file di configurazione, è venuto il momento di installare il programma che esegue il kernel nel momento in cui si avvia il sistema. Tale programma è chiamato <e>bootloader</e>. Ma prima di iniziare, ecco quali bootloader c'è la possibilità di scegliere.
</p>

<p>
Per Linux esistono molti bootloader. Ci sono bootloader che funzionano su alcune architetture e non su altre. Quindi si deve scegliere tra i bootloader che supportano la propria architettura.
</p>

<p>
La prossima tabella elenca le architetture e i bootloader che le supportano. Selezionare un bootloader in base alla propria architettura. Per esempio, se si ha un Pentium IV, allora l'architettura è <e>x86</e>. Si deve scegliere tra GRUB (raccomandato) e LILO.
</p>

<table>
<tr>
  <th>Architettura</th>
  <th>Raccomandato</th>
  <th>Alternative</th>
</tr>
<tr>
  <th>x86</th>
  <ti><uri link="#doc_chap2">GRUB</uri></ti>
  <ti><uri link="#doc_chap3">LILO</uri></ti>
</tr>
<tr>
  <th>alpha</th>
  <ti><uri link="#doc_chap4">aBoot</uri></ti>
  <ti><uri link="#doc_chap5">MILO</uri></ti>
</tr>
<tr>
  <th>sparc</th>
  <ti><uri link="#doc_chap6">SILO</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>ppc</th>
  <ti>
    <uri link="#doc_chap8">yaBoot</uri> (NewWorld),
    <uri link="#doc_chap9">BootX</uri> (OldWorld)
  </ti>
  <ti></ti>
</tr>
<tr>
  <th>hppa</th>
  <ti><uri link="#doc_chap7">PALO</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>mips</th>
  <ti><uri link="#doc_chap10">MIPS PROM</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>amd64</th>
  <ti><uri link="#doc_chap2">GRUB</uri></ti>
  <ti></ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Opzionale: Framebuffer</title>
<body>

<note>
Questa sezione è solo per gli utenti di x86, AMD64 e PPC, che hanno configurato il supporto framebuffer nel kernel. Ed è anche per chi ha usato <c>genkernel</c>.
</note>

<p>
<e>Se</e> si è configurato il kernel con il supporto framebuffer, si deve aggiungere un una istruzione <c>vga</c> al file di configurazione del bootloader, se si vuole avere il framebuffer. La prossima tabella elenca i valori disponibili di <c>vga</c> che si possono usare. Nel file di configurazione di esempio, si unsa una risoluzione di <e>800x600 a 16bpp</e>, e quindi si inserisce <e>788</e>.
</p>

<table>
<tr>
  <ti></ti><th>640x480</th><th>800x600</th><th>1024x768</th><th>1280x1024</th>
</tr>
<tr>
  <th>8 bpp</th><ti>769</ti><ti>771</ti><ti>773</ti><ti>775</ti>
</tr>
<tr>
  <th>16 bpp</th><ti>785</ti><ti>788</ti><ti>791</ti><ti>794</ti>
</tr>
<tr>
  <th>32 bpp</th><ti>786</ti><ti>789</ti><ti>792</ti><ti>795</ti>
</tr>
</table>

<p>
E' importante ricordare (o annotare) i propri valori per dopo.
</p>

<p>
Ora selezionare il bootloader preferito dalla tabella sopra.
</p>

</body>
</subsection>
</section>
<section>
<title>Default: Usare GRUB</title>
<subsection>
<title>Comprendere la terminologia di GRUB</title>
<body>

<impo>
GRUB può essere soltanto usato con sistemi x86 e AMD64!
</impo>

<p>
La parte più critica da capire di GRUB, è quella nella quale si deve prendere confidenza con il modo in cui GRUB si riferisce ai dischi e alle partizioni. La partizione di Linux <path>/dev/hda1</path> è chiamata da GRUB <path>(hd0,0)</path>. Prestare attenzione alle parentesi tra <path>hd0,0</path>, sono necessarie.
</p>

<p>
I dischi vengono contati da zero invece che da "a", e le partizioni partono da zero invece che da uno. Prestare ancora attenzione al fatto che tra le periferiche hd vengono inclusi solo gli hard disk e non le periferiche atapi-ide come i lettori cdrom e i masterizzatori. Lo stesso vale per i dischi scsi. (Normalmente questi prendono numeri più alti rispetto a quelli ide, eccetto quando il bios è configurato per fare il boot dai dischi scsi.)
</p>

<p>
Evendo quindi un hard disk in <path>/dev/hda</path>, un lettore cdrom in <path>/dev/hdb</path>, un masterizzatore in <path>/dev/hdc</path>, un secondo hard disk in <path>/dev/hdd</path> e nessun disco SCSI, <path>/dev/hdd7</path> viene trasformato in <path>(hd1,6)</path>. Potrebbe suonare complicato e lo è in effetti, ma come si vedrà, GRUB offre un meccanismo di completamento con il tasto TAB che si dimostra comodo per coloro che hanno un numero elevato di hard disk e partizioni, e per coloro che sono a disagio con lo schema numerico di GRUB.
</p>

<p>
Dopo essere entrati nello spirito è il momento di installare GRUB.
</p>

</body>
</subsection>
<subsection>
<title>Installare GRUB</title>
<body>

<p>
Per installare GRUB, si deve prima emergerlo. Gli utenti dell'architettura x86 devono installare <c>grub</c>, gli utenti di AMD64 dovranno emergere <c>grub-static</c>:
</p>

<pre caption="Installare GRUB">
<comment>(Per architetture x86)</comment>
# <i>emerge --usepkg grub</i>

<comment>(Per architetture AMD64)</comment>
# <i>emerge --usepkg grub-static</i>
# <i>cp -Rpv /usr/share/grub/i386-pc/* /boot/grub</i>
</pre>

<p>
Per iniziare la configurazione di GRUB, digitare <c>grub</c>. Sarà visualizzato il prompt della linea di comando di grub, <path>grub&gt;</path>. Ora si può procedere a digitare i comandi corretti per installare il boot record di GRUB sull'hard disk.
</p>

<pre caption="Avviare la shell di GRUB">
# <i>grub</i>
</pre>

<p>
Nella configurazione di esempio, si desidera installare GRUB in modo che legga le proprie informazioni dalla partizione di boot <path>/dev/hda1</path> e installare il boot record di GRUB nel MBR (master boot record) dell'hard disk, in modo che la prima cosa che si veda, quando si accende il computer, è il prompt di GRUB. Se non si è seguita la configurazione di esempio durante l'installazione, è necessario cambiare i comandi di conseguenza.
</p>

<p>
Il meccanismo di completamento con il tasto TAB, può essere usato da dentro GRUB. Per esempio, se si digita "<c>root (</c>" seguito da TAB, viene elencata una lista degli hard disk disponibili (come <path>hd0</path>). Se si digita "<c>root (hd0,</c>" seguito da TAB, viene invece elencata una lista delle partizioni disponibili nel disco (come <path>hd0,0</path>).
</p>

<p>
Con il tasto TAB non dovrebbe essere difficile impostare GRUB . Ecco ora la vera e propria configurazione di GRUB.
</p>

<pre caption="Installare GRUB nel MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(Specifica dove è la partizione /boot)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Installa GRUB nel MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Esce dalla shell di GRUB)</comment>
</pre>

<note>
Se si desidera installare GRUB in un'altra partizione, invece che nel MBR, è necessario cambiare il comando <c>setup</c>, in modo che esso punti alla partizione corretta. Per esempio, se si vuole installare GRUB in <path>/dev/hda3</path>, allora il comando diventa <c>setup (hd0,2)</c>. Ma questo non è un caso molto comune.
</note>

<p>
Nonostante GRUB sia installato, si deve ancora modificare un file di configurazione perchè GRUB possa avviare il kernel. Creare <path>/boot/grub/grub.conf</path> con <c>nano</c> (o con un altro editor):
</p>

<pre caption="Creare /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Ora è necessario modificare <path>grub.conf</path>. Seguono tre possibili <path>grub.conf</path> per l'esempio di partizione usato in questa guida che utilizza l'immagine del kernel <path>kernel-2.4.25</path>. Viene però analizzato solo il primo <path>grub.conf</path>.
</p>

<ul>
  <li>
    Il primo <path>grub.conf</path> è per chi non ha usato <c>genkernel</c> per compilare il kernel
  </li>
  <li>
    Il secondo <path>grub.conf</path> è per chi ha usato <c>genkernel</c> dal LiveCD per compilare il kernel (per esempio il <c>genkernel</c> installato con i pacchetti GRP)
  </li>
  <li>
    Il terzo <path>grub.conf</path> è per chi ha usato il <c>genkernel</c> scaricato da Internet per compilare il kernel
  </li>
</ul>

<pre caption="grub.conf per utenti che non hanno usato genkernel">
<comment># Quale opzione viene avviata di default. 0 è la prima, 1 la seconda etc.</comment>
default 0
<comment># Quanti secondi attenedere prima di avviare l'opzione di default.</comment>
timeout 30
<comment># Un'immagine gradevole</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.25
<comment># La partizione dove si trova l'immagine del kernel (o il sistema operativo)</comment>
root (hd0,0)
kernel (hd0,0)/kernel-2.4.25 root=/dev/hda3

<comment># Le prossime tre righe vanno messe solo se si ha un dualboot con Windows.</comment>
<comment># In questo caso, Windows è in /dev/hda6.</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>

<pre caption="grub.conf per utenti che hanno usato il genkernel scaricato da GRP">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.25
root (hd0,0)
kernel (hd0,0)/kernel-2.4.25 root=/dev/hda3
initrd (hd0,0)/initrd-2.4.25

<comment># Solo nel caso si desideri il dual-boot</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>

<pre caption="grub.conf per utenti che non hanno usato il genkernel scaricato da GRP">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.22
root (hd0,0)
kernel (hd0,0)/kernel-2.4.22 root=/dev/ram0 init=/linuxrc real_root=/dev/hda3
initrd (hd0,0)/initrd-2.4.22

<comment># Solo nel caso si desideri il dual-boot</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>

<note>
Se si usa uno schema di partizioni e/o un'immagine del kernel differenti da quelli dell'esempio, cambiare le impostazioni di conseguenza. Assicurarsi che qualsiasi cosa che segue un GRUB-device (come <path>(hd0,0)</path>), sia relativa al mountpoint, e non a root. In altre parole, <path>(hd0,0)/grub/splash.xpm.gz</path> è <path>/boot/grub/splash.xpm.gz</path> poichè <path>(hd0,0)</path> è <path>/boot</path>.
</note>

<p>
Se si ha bisogno di inserire opzioni ulteriori al kernel, si deve aggiungerle alla fine dei comandi del kernel. Si è già inserita una opzione (<c>root=/dev/hda3</c> o <c>real_root=/dev/hda3</c>), ma se ne possono inserire altre, ad esempio l'istruzione <c>vga</c> per il framebuffer, di cui si è parlato precedentemente:
</p>

<pre caption="Aggiungere l'istruzione vga come opzione del kernel">
title=Gentoo Linux
  root (hd0,0)
  kernel (hd0,0)/kernel-2.4.25 root=/dev/hda3 vga=788
</pre>

<p>
Coloro che usano <c>genkernel</c> devono sapere che i loro kernel hanno le stesse opzioni di boot del LiveCD. Per esempio, se si disponde di un disco SCSI, si dovrebbe aggiungere <c>doscsi</c> come opzione del kernel.
</p>

<p>
Salvare il file <path>grub.conf</path> e uscire. GRUB è completamente configurato e si può continuare con l'<uri link="?part=1&amp;chap=10">Installazione degli strumenti di sistema</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternativa: Usare LILO</title>
<subsection>
<title>Installare LILO</title>
<body>

<impo>
LILO può essere soltanto usato con sistemi x86!
</impo>

<p>
LILO, il LInuxLOader, è il più provato e il più usato tra i bootloader di Linux. Però a LILO mancano alcune caratteristiche che non mancano a GRUB (è per questo che GRUB sta guadagnando sempre più popolarità). Tuttavia LILO è ancora usato perchè, su alcuni sistemi, GRUB non funziona, mentre LILO funziona. LILO è usato anche perchè le persone che lo usano non vogliono abbandonarlo. Gentoo li supporta entrambi ed ecco come si usa LILO.
</p>

<p>
Installare LILO è veloce; si deve usare <c>emerge</c>.
</p>

<pre caption="Installare LILO">
# <i>emerge --usepkg lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Configurare LILO</title>
<body>

<p>
Per configurare LILO si deve creare <path>/etc/lilo.conf</path>. Aprire l'editor preferito (in questo manuale si usa <c>nano</c>) e creare il file.
</p>

<pre caption="Creare /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
In una sezione precedente, si è chiesto di ricordare il nome dell'immagine del kernel che si è creata. Nel prossimo esempio di <path>lilo.conf</path> si suppone che il nome dell'immagine sia <path>kernel-2.4.25</path>. In questo esempio si usa anche lo schema di partizioni dell'esempio precedente. Ci sono tre sezioni separate:
</p>

<ul>
  <li>
    Una per chi non ha usato <c>genkernel</c> per compilare il kernel
  </li>
  <li>
    Una per chi ha usato il <c>genkernel</c> dai GRP per compilare il kernel
  </li>
  <li>
    Una per chi ha usato il <c>genkernel</c> scaricato precedentemente, per compilare il kernel
  </li>
</ul>

<pre caption="Esempio di /etc/lilo.conf">
boot=/dev/hda             <comment># Installa LILO nel MBR</comment>
prompt                    <comment># Fornisce all'utente la possibilità di selezionare un'altra sezione</comment>
delay=50                  <comment># Aspetta 5 secondi prima di avviare la sezione di default</comment>
default=gentoo            <comment># Quando è passato il timeout, avvia la sezione "gentoo"</comment>
<comment># Solo se si usa framebuffer. Altrimenti rimuovere la seguente riga:</comment>
vga=788                   <comment># Impostazione del framebuffer. Cambiare secondo le proprie necessità</comment>

<comment># Per utenti che non hanno usato genkernel</comment>
image=/boot/kernel-2.4.25
  label=gentoo            <comment># Il nome dato alla sezione</comment>
  read-only               <comment># Parte con una root di sola lettura. Non cambiare questa opzione!</comment>
  root=/dev/hda3          <comment># Posizione del filesystem root</comment>

<comment># Per utenti che hanno usato il genkernel dai GRP</comment>
image=/boot/kernel-2.4.25
  label=gentoo
  read-only
  root=/dev/hda3
  initrd=/boot/initrd-2.4.25

<comment># Per utenti che hanno usato il genkernel scaricato precedentemente</comment>
image=/boot/kernel-2.4.25
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc real_root=/dev/hda3"
  initrd=/boot/initrd-2.4.25

<comment># Le due righe seguenti vanno messe solo se si desidera un dualboot con un sistema Windows.</comment>
<comment># In questo caso, Windows è in /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Se si usa uno schema di partizioni differente e/o un'immagine del kernel non uguale a quella dell'esempio, cambiare le impostazioni di conseguenza.
</note>

<p>
Se si ha bisogno di inserire ulteriori opzioni al kernel, si deve aggiungere <c>append</c> alla sezione. Come esempio, si usa <c>acpi=off</c> per disabilitare il supporto ACPI:
</p>

<pre caption="Usare append per aggiungere opzioni al kernel">
image=/boot/kernel-2.4.25
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="acpi=off"</i>
</pre>

<p>
Coloro che usano <c>genkernel</c> devono sapere che i loro kernel hanno le stesse opzioni di boot del LiveCD. Per esempio, se si disponde di un disco SCSI, si deve aggiungere <c>doscsi</c> come opzione del kernel.
</p>

<p>
Ora salvare il file e uscire. Per finire, si deve eseguire <c>/sbin/lilo</c>, così LILO può applicare <path>/etc/lilo.conf</path> al sistema (per esempio, installarsi sul disco).
</p>

<pre caption="Finire l'installazione di LILO">
# <i>/sbin/lilo</i>
</pre>

<p>
Continuare con l'<uri link="?part=1&amp;chap=10">Installazione degli strumenti di sistema</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternativa: Usare aboot</title>
<body>

<impo>
aboot può essere soltanto usato con sistemi alpha.
</impo>

<p>
Si procede ora ad installare aboot sul sistema, e per farlo si usa <c>emerge</c>:
</p>

<pre caption="Installare aboot">
# <i>emerge --usepkg aboot</i>
</pre>

<p>
Il prossimo passo è quello di rendere avviabile il bootdisk. In questo modo, si fa partire <c>aboot</c> quando si avvia il sistema. Si rende avviabile il bootdisk, scrivendo il bootloader <c>aboot</c> all'inizio del disco.
</p>

<pre caption="Rendere avviabile il bootdisk">
# <i>swriteboot -f3 /dev/sda /boot/bootlx</i> 
# <i>abootconf /dev/sda 2</i>
</pre>

<note>
Se si usa uno schema di partizioni differente rispetto a quello usato in questo capitolo, si devono cambiare i comandi. Si leggano le pagine del manuale (<c>man 8 swriteboot</c> e <c>man 8 abootconf</c>).
</note>

<p>
Si può avviare Gentoo più facilmente impostando il file di configurazione di aboot e la variabile di SRM boot_osflags. Bisogna assicurarsi che bootdef_dev sia settata correttamente (è più facile farlo da console che da Linux).
</p>

<pre caption="Migliorare l'avvio di Gentoo">
# <i>echo '0:2/boot/vmlinux.gz root=/dev/sda2' &gt; /etc/aboot.conf</i>
# <i>echo -n 0 &gt; /proc/srm_environment/named_variables/boot_osflags</i>
# <i>echo -n '' &gt; /proc/srm_environment/named_variables/boot_file</i>
</pre>

<p>
Se si sta installando tramite una console, non dimenticarsi di includere la boot flag della console in <path>aboot.conf</path>. Per ulteriori informazioni vedere <path>/etc/aboot.conf.example</path>. Si deve inoltre permettere il login sulla porta seriale:
</p>

<pre caption="Permettere il login sulla porta seriale">
# <i>echo tts/0 &gt;&gt; /etc/securetty</i>
# <i>echo 's0:12345:respawn:/sbin/agetty 9600 tts/0 vt100' &gt;&gt; /etc/inittab</i>
</pre>

<p>
Ora aboot è configurato e pronto per essere usato. Continuare con l'<uri link="?part=1&amp;chap=10">Installazione degli strumenti di sistema</uri>.
</p>

</body>
</section>
<section>
<title>Alternativa: Usare MILO</title>
<body>

<impo>
MILO può essere soltanto usato con sistemi alpha.
</impo>

<p>
Prima di continuare, si dovrebbe decidere come usare MILO. In questa sezione, si suppone che si voglia fare un floppy di boot di MILO. Se si sta avviando il sistema da una partizione MS-DOS sull'hard disk, si dovrebbero cambiare i comandi di conseguenza.
</p>

<p>
Per installare MILO si usa <c>emerge</c>.
</p>

<pre caption="Installare MILO">
# <i>emerge --usepkg milo</i>
</pre>

<p>
Dopo l'installazione, l'immagine di MILO dovrebbe essere in <path>/opt/milo</path>. I comandi seguenti creano un floppy di boot per MILO. Ricordarsi di usare l'immagine corretta per il proprio sistema Alpha.
</p>

<pre caption="Installare MILO su un floppy">
<comment>(Inserire un floppy)</comment>
# <i>fdformat /dev/fd0</i>
# <i>mformat a:</i>
# <i>mcopy /opt/milo/milo-2.2-18-gentoo-ruffian a:\milo</i>
# <i>mcopy /opt/milo/linload.exe a:\lilnload.exe</i>
<comment>(Solo se si ha un Ruffian:</comment>
# <i>mcopy /opt/milo/ldmilo.exe a:\ldmilo.exe</i>
<comment>)</comment>
# <i>echo -ne '\125\252' | dd of=/dev/fd0 bs=1 seek=510 count=2</i>
</pre>

<p>
Il floppy di boot di MILO è ora pronto per avviare Gentoo Linux. Si potrebbe aver bisogno di impostare le variabili di ambiente nel ARCS Firmware per far partire MILO; tutto questo è spiegato nel <uri link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri>, con alcuni esempi su sistemi comuni e esempi sui comandi da usare in modalità interattiva.
</p>

<p>
Saltare la lettura  del <uri link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri> è una <e>pessima</e> idea.
</p>

<p>
Ora continuare con l'<uri link="?part=1&amp;chap=10">Installazione degli strumenti di sistema</uri>.
</p>

</body>
</section>
<section>
<title>Alternativa: Usare SILO</title>
<body>

<p>
E' il momento di installare e configurare <uri link="http://www.sparc-boot.org">SILO</uri>, Sparc Improved boot LOader.
</p>

<pre caption="Installare SILO">
# <i>emerge --usepkg silo</i>
</pre>

<p>
Aprire adesso l'editor preeferito (nell'esempio è <c>nano</c>), e creare <path>/etc/silo.conf</path>.
</p>

<pre caption="Creare /etc/silo.conf">
# <i>nano -w /etc/silo.conf</i>
</pre>

<p>
Segue un esempio del file <path>silo.conf</path>. Si usa lo schema di partizioni già usato in questo manuale, e il <path>kernel-2.4.25</path>.
</p>

<pre caption="Esempio di /etc/silo.conf">
partition = 1         <comment># Partizione di boot</comment>
root = /dev/hda4      <comment># Partizione di root</comment>
timeout = 15          <comment># Si aspettano 15 secondi prima di avviare la sezione di default</comment>

image = /boot/kernel-2.4.25
  label = linux
</pre>

<p>
Se si usa l'esempio di <path>silo.conf</path> installato da Portage, assicurarsi di commentare <e>tutte</e> le righe delle quali non si ha bisogno.
</p>

<p>
Se si ha una partizione separata di <path>/boot</path>, copiare il file di configurazione in <path>/boot</path> ed eseguire <c>/sbin/silo</c>:</p>

<pre caption="Solo se si ha una partizione separata di /boot">
# <i>cp /etc/silo.conf /boot</i>
# <i>/sbin/silo -C /boot/silo.conf</i>
/boot/silo.conf appears to be valid
</pre>

<p>
Se la directory di <path>/boot</path> risiede sulla partizione di root, eseguire <c>/sbin/silo</c>:
</p>

<pre caption="Eseguire silo">
# <i>/sbin/silo</i>
/etc/silo.conf appears to be valid
</pre>

<p>
Ora continuare con l'<uri link="?part=1&amp;chap=10">Installazione degli strumenti di sistema</uri>.
</p>

</body>
</section>
<section>
<title>Alternativa: Usare PALO</title>
<body>

<impo>
PALO può essere soltanto usato su sistemi HPPA.
</impo>

<p>
Sulla piattaforma PA-RISC, il bootloader è palo. Si può trovare il file di configurazione in <path>/etc/palo.conf</path>. Ecco un esempio di configurazione:
</p>

<pre caption="Esempio di /etc/palo.conf">
--commandline=2/vmlinux root=/dev/sdb2 HOME=/
--recoverykernel=/vmlinux.old
--init-partitioned=/dev/sdb
</pre>

<p>
La prima riga dice a palo dove è il kernel e quali parametri di boot deve usare. <c>2/vmlinux</c> si riferisce al kernel <c>/vmlinux</c> che risiede sulla seconda partizione. Notare che il percorso al kernel è relativo alla partizione, non alla root del filesystem.
</p>

<p>
La seconda riga indica quale kernel di riserva usare. Se è la prima installazione e non si ha un kernel di riserva, commentare questa riga. La terza riga indica su quale disco si installa palo.
</p>

<p>
Quando è finita la configurazione, eseguire <c>palo</c>.
</p>

<pre caption="Applicare la configurazione di PALO">
# <i>palo</i>
</pre>

<p>
Ora continuare con l'<uri link="?part=1&amp;chap=10">Installazione degli strumenti di sistema</uri>.
</p>

</body>
</section>
<section>
<title>Alternativa: Usare yaBoot</title>
<subsection>
<title>Introduzione</title>
<body>

<impo>
yaBoot può essere soltanto usato su sistemi NewWorld PPC.
</impo>

<p>
Ci sono due modi di configurare yaBoot. Si può usare il nuovo e migliore <c>yabootconfig</c>, incluso in <path>yaboot-1.3.8-r1</path> e successivi, per installare automaticamente yaboot. Se per qualche motivo non si desidera eseguire <c>yabootconfig</c> per installare <path>/etc/yaboot.conf</path>, si può modificare il file di esempio già installato sul sistema.
</p>

<ul>
  <li><uri link="#doc_chap8_sect2">Default: Usare yabootconfig</uri></li>
  <li>
    <uri link="#doc_chap8_sect3">Alternativa: Configurazione manuale di yaBoot</uri>
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Default: Usare yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> rileva automaticamente le partizioni sulla macchina, e installa doppie e triple combinazioni di boot con Linux, Mac OS, e Mac OS X.
</p>

<p>
Per usare <c>yabootconfig</c>, il disco deve avere una partizione bootstrap, e <path>/etc/fstab</path> deve essere configurato con le partizioni Linux. Entrambe queste condizioni dovrebbero essere state soddisfatte precedentemente. Prima di iniziare, assicurarsi di avere installata l'ultima versione di yaboot eseguendo <c>emerge --update yaboot</c>. Questo è necessario poichè l'ultima versione è disponibile tramite Portage, ma non nei file dello stage.
</p>

<pre caption="Installare yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Ora eseguire <c>yabootconfig</c>. L'esecuzione del progamma chiede conferma sulla posizione della partizione di bootstrap. Digitare <c>Y</c> se è corretta. Altrimenti, ricontrollare <path>/etc/fstab</path>. Poi yabootconfig controlla il setup del sistema, crea <path>/etc/yaboot.conf</path> ed esegue <c>mkofboot</c>. <c>mkofboot</c> viene usato per formattare la partizione di bootstrap e installare in essa il file di configurazione di yaboot.</p>

<p>
Si potrebbe voler verificare il contenuto di <path>/etc/yaboot.conf</path>. Se si effettuano cambiamenti a <path>/etc/yaboot.conf</path> (come, impostare l'OS di default/boot), assicurarsi di rieseguire <c>ybin -v</c>, per applicare i cambiamenti alla partizione di bootstrap.
</p>

<p>
Ora continuare con l'<uri link="?part=1&amp;chap=10">Installazione degli strumenti di sistema</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Alternativa: Configurazione manuale di yaBoot</title>
<body>

<p>
Assicurarsi di avere installata l'ultima versione di <c>yaboot</c>:
</p>

<pre caption="Installare yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Segue un file completo di <path>yaboot.conf</path> di esempio. Modificarlo in base alle necessità:
</p>

<pre caption="/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## eseguire: "man yaboot.conf" per ulteriori informazioni. Non portare cambiamenti prima di aver letto.
## consultare anche: /usr/share/doc/yaboot/examples per configurazioni d'esempio.
##
## Per un sistema dual-boot aggiungere una o più delle seguenti:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## partizione di bootstrap:</comment>

boot=/dev/hda9

<comment>##hd: il modo di open firmware di riferirsi ad hda</comment>
device=hd:
partition=11

root=/dev/hda11
delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Questa sezione può essere duplicata se si hanno più di un kernel o più di un
## set di opzioni di boot
#################</comment>
image=/boot/vmlinux
  label=Linux
  sysmap=/boot/System.map
  read-only
<comment>##################</comment>

macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Una volta che <path>yaboot.conf</path> è stato configurato secondo le proprie necessità, eseguire <c>mkofboot -v</c> per installare le impostazioni nella partizione di bootstrap. <e>Non dimenticare di farlo!</e> Se tutto va bene e si utilizzano le stesse opzioni dell'esempio precedente, il prossimo reboot dovrebbe dare un semplice menu di boot con cinque voci. Se si desidera in futuro modificare il file di configurazione di yaboot, è sufficiente eseguire <c>ybin -v</c> per aggiornare la partizione di bootstrap; <c>mkofboot</c> è solo per l'installazione iniziale.
</p>

<p>
Per ulteriori informazioni su yaboot, consultare il <uri link="http://penguinppc.org/projects/yaboot">yaboot project</uri>. Ora continuare con l'<uri link="?part=1&amp;chap=10">Installazione degli strumenti di sistema</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternativa: BootX</title>
<body>

<impo>
BootX può essere soltanto usato su sistemi OldWorld PPC.
</impo>

<p>
Se si desidera usare BootX, allora non si deve fare niente in questa sezione. Tuttavia, dopo il reboot, si dovrebbe avere qualche configurazione disponibile nel pannello di controllo di BootX (in MacOS) trattata in seguito.
</p>

<p>
Ora continuare con l'<uri link="?part=1&amp;chap=10">Installazione degli strumenti di sistema</uri>.
</p>

</body>
</section>
<section>
<title>Alternativa: MIPS PROM</title>
<subsection>
<body>

<p>
MIPS non richiede l'installazione di un bootloader. Il MIPS PROM gestisce il boot, ma si ha bisogno di installare il kernel come una possibile opzione.
</p>

<p>
Installare <c>dvhtool</c>, necessario per copiare il kernel sul SGI Volume Header.
</p>

<pre caption="Installare dvhtool">
# <i>emerge dvhtool</i>
</pre>

<p>
Ora copiare il kernel sul Volume Header SGI. Di default, <c>dvhtool</c> suppone che il Volume Header SGI sia su <path>/dev/sda</path>. Se non è così (per esempio quando IRIX è installato su <path>/dev/sda</path> e Gentoo/MIPS su <path>/dev/sdb</path>), è necessario farlo sapere a <c>dvhtool</c>, usando <c>-d &lt;device&gt;</c>.
</p>

<pre caption="Copiare un kernel sul SGI Volume Header">
# <i>dvhtool --unix-to-vh &lt;kernel name in /boot&gt; &lt;name you want to give in volume header&gt;</i>
</pre>

<p>
Se si vogliono vedere tutte le voci disponibili nel volume, usare <c>--print-volume-directory</c>:
</p>

<pre caption="Vedere tutte le voci disponibili nel volume">
# <i>dvhtool --print-volume-directory</i>
</pre>

<p>
Per rendere avviabile il sistema con Gentoo/MIPS, si devono ottimizzare alcune impostazioni nel MIPS PROM, trattate in seguito, una volta terminata l'installazione di Gentoo.
</p>

<p>
Ora continuare con l'<uri link="?part=1&amp;chap=10">Installazione degli strumenti di sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
