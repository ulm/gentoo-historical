<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->


<sections>

<version>4.9</version>
<date>2005-07-04</date>

<section>
<title>Timezone</title>
<body>

<p>
Innanzitutto è necessario selezionare la propria timezone, in modo che il sistema riconosca in che parte del globo è collocato. Per la propria timezone, consultare <path>/usr/share/zoneinfo</path>. Crare dunque un link simbolico a <path>/etc/localtime</path> usando <c>ln</c>:
</p>

<pre caption="Abilitare le informazioni sulla timezone">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Per esempio GMT:)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installare i sorgenti</title>
<subsection>
<title>Scegliere un Kernel</title>
<body>

<p>
Il cuore, intorno al quale sono sviluppate tutte le distribuzioni, è il Kernel di Linux. E' la parte di software compresa tra i programmi e l'hardware. Gentoo dà la possibilità ai suoi utenti di scegliere tra diversi sorgenti del kernel. Una lista completa delle descrizioni dei kernel disponibili, è consultabile nella <uri link="/doc/it/gentoo-kernel.xml">Guida ai Kernel Gentoo</uri>.
</p>

<p>
Per i sistemi basati sull'architettura x86 il kernel supportato è <c>gentoo-sources</c>. E' basato sui sorgenti ufficiali Linux, ma ha sicurezza, stabilità, compatibilità e bug riparati al massimo. Altrimenti sono forniti i sorgenti Linux non patchati, il pacchetto <c>vanilla-sources</c>.
</p>

<p>
Entrambi i kernel sono basati sui sorgenti ufficiali del kernel 2.6. Se si desidera installare un kernel 2.4, si deve installare Gentoo con una connessione a Internet poichè non sono supportati nel CD di Installazione.
</p>

<p>
Ora è possibile dunque scegliere ed installare i sorgenti del kernel tramite <c>emerge</c>. 
</p>

<pre caption="Installare un sorgente del kernel">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Se si dà un'occhiata a <path>/usr/src</path>, si dovrebbe vedere un link simbolico chiamato <path>linux</path>, che punta al sorgente del kernel, ad esempio <c>gentoo-sources-2.6.11-r3</c>:
</p>

<pre caption="Il link simbolico al sorgente del kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.11-gentoo-r3
</pre>

<p>
Se così non fosse (cioè il link simbolico punta a un sorgente del kernel differente), prima di continuare è necessario cambiare il link simbolico:
</p>

<pre caption="Cambiare il link simbolico al sorgente del kernel">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.11-gentoo-r3 linux</i>
</pre>

<p>
Ora si procede a configurare e compilare il sorgente del kernel. Allo scopo è possibile utilizzare <c>genkernel</c>, che compila un kernel generico come quello usato dal CD di Installazione. Si tratta però prima la configurazione "manuale", poichè è il miglior modo di ottimizzare l'ambiente.</p>

<p>
Se si desidera configurare il kernel manualmente, continuare con <uri link="#manual">Default: Configurazione manuale</uri>. Per
chi preferisce usare <c>genkernel</c>, leggere <uri link="#genkernel">Alternativa: Usare genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Default: Configurazione manuale</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
La configurazione manuale del kernel è spesso considerata la parte più difficile che ogni utente Linux incontra. Non è assolutamente vero -- dopo aver configurato un po' di kernel, l'operazione risulta semplice.
</p>

<p>
Una cosa <e>è</e> però vera: si deve conoscere il proprio sistema quando si comincia una configurazione manuale del kernel. La maggior parte delle informazioni può essere raccolta installando pciutils (<c>emerge pciutils</c>) che contiene <c>lspci</c>. A questo punto è possibile eseguire <c>lspci</c> nell'ambiente di installazione. Si possono tranquillamente ignorare gli avvertimenti di <e>pcilib</e> (come pcilib: cannot open /sys/bus/pci/devices). Alternativamente è possibile eseguire <c>lspci</c> anche da un ambiente esterno. Si può anche eseguire <c>lsmod</c> per vedere che moduli del kernel usa il CD di Installazione (potrebbe fornire un buon suggerimento su cosa abilitare).
</p>

<p>
Andare nella directory del sorgente del kernel, e digitare <c>make menuconfig</c> per visualizzare un menu di configurazione basato su ncurses.
</p>

<pre caption="Aprire menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Vengono visualizzate molte sezioni di configurazione. Ecco ora alcune opzioni che devono essere attivate (altrimenti Gentoo non può funzionare, o non funziona correttamente senza modifiche aggiuntive).
</p>

</body>
</subsection>
<subsection>
<title>Attivare le opzioni indispensabili</title>
<body>

<p>
Assicurarsi che ogni driver vitale per il boot del computer (com il controller SCSI) sia compilato+internamente e non come modulo, se no il sistema potrebbe non essere
in grado di avviarsi.
</p>

<p>
Selezionare ora la famiglia di processori a cui appartiene il proprio:
</p>

<pre caption="Impostazioni generali e processore">
General setup  ---&gt;
      [*] Support for hot-pluggable devices
Processor type and features ---&gt;
   Subarchitecture Type (PC-compatible)  ---&gt;
  <comment>(Change according to your system)</comment>
  (<i>Athlon/Duron/K7</i>) Processor family
</pre>

<p>
Andare su <c>File Systems</c> e selezionare il supporto per il filesystem che si usa. <e>Non</e> compilarlo come modulo, altrimenti Gentoo non può montare le partizioni. Selezionare anche <c>/proc file system</c> e <c>Virtual memory</c>. <e>Non</e> selezionare <c>/dev file system</c>.
</p>

<pre caption="Selezionare il filesystem">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    &lt;*&gt; /proc file system support
    &lt; &gt; /dev file system support (OBSOLETE)
    &lt;*&gt; Virtual memory file system support (former shm fs)

<comment>(Selezionare una o più delle seguenti, secondo necessità)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Ricordarsi di attivare il support DMA:
</p>

<pre caption="Attivare DMA">
Device Drivers ---&gt;
  ATA/ATAPI/MFM/RLL support ---&gt;
    [*] Generic PCI bus-master DMA support
    [*]   Use PCI DMA by default when available
</pre>

<p>
Se si sta usando PPPoE per connettersi a Internet, si ha bisogno delle seguenti opzioni nel kernel:
</p>

<pre caption="Selezionare i driver necessari per PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Le due opzioni di compressione non sono dannose, ma neppure necessarie; lo stesso vale per <c>PPP over Ethernet</c>, che potrebbe essere usata soltanto da <c>rp-pppoe</c> se configurato in modalità kernel.
</p>

<p>
Chi ne ha bisogno, non deve dimenticare di includere il supporto per la scheda ethernet nel kernel.
</p>

<p>
Se si è in possesso di una CPU Intel che supporta HyperThreading (tm), o si possiede
un sistema con più CPU, è possibile attivare il "Symmetric multi-processing support":
</p>

<pre caption="Attivare il supporto multiprocessore">
Processor type and features  ---&gt;
  &lt;*&gt; Symmetric multi-processing support
</pre>

<p>
Se si utilizzano periferiche USB (come mouse o tastiere) è necessario abilitarle:
</p>

<pre caption="Attivare il supporto USB">
Device Drivers ---&gt;
USB Support ---&gt;
  &lt;*&gt;   USB Human Interface Device (full HID) support
  [*]   HID input layer support
</pre>

<p>
Per i portatili, se si richiede il supporto PCMCIA, si deve ricordare di compilarlo nel kernel. Come l'opzione sotto assicurarsi di abilitare il supporto per la scheda bridge PCMCIA presente nel sistema (si trova nello stesso menu di configurazione).
</p>

<pre caption="Attivare il supporto PCMCIA">
Bus options (PCI, PCMCIA, EISA, MCA, ISA)  ---&gt;
  PCCARD (PCMCIA/CardBus) support  ---&gt;
    &lt;*&gt; PCCard (PCMCIA/CardBus) support
    <comment>(selezionare 16 bit se si necessita supporto per le vecchie schede PCMCIA. La
    maggior parte degli utenti di solito lo fa)</comment>
    &lt;*&gt;   16-bit PCMCIA support
    [*]   32-bit CardBus support
    <comment>(selezionare la bridge qui sotto)</comment>
    --- PC-card bridges
    &lt;*&gt; CardBus yenta-compatible bridge support (NEW)
    &lt;*&gt; Cirrus PD6729 compatible bridge support (NEW)
    &lt;*&gt; i82092 compatible bridge support (NEW)
    &lt;*&gt; i82365 compatible bridge support (NEW)
    &lt;*&gt; Databook TCIC host bridge support (NEW)
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Compilazione e Installazione</title>
<body>

<p>
Ora che il kernel è configurato, il prossimo passo è la compilazione e l'installazione. Uscire dal menu di configurazione ed avviare la compilazione:
</p>

<pre caption="Compilare il kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Quando la compilazione è finita, è necessario copiare l'immagine del kernel in <path>/boot</path>.
Da qui in poi si suppone che si stia installando la versione 2.6.11-r3 dei sorgenti <c>gentoo-sources</c>.
E' possibile utilizzare qualsiasi nome appropriato, ma è importante ricordarlo perchè verrà utilizzato
in seguito.
</p>

<pre caption="Installare il kernel">
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.6.11-gentoo-r3</i>
</pre>

<p>
E' inoltre consigliato copiare il file di configurazione del kernel in <path>/boot</path>.
</p>

<pre caption="Back up della configurazione del kernel">
# <i>cp .config /boot/config-2.6.11-gentoo-r3</i>
</pre>

<p>
Continuare ora con la <uri link="#kernel_modules">Configurazione dei moduli</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativa: Usare genkernel</title>
<body>

<p>
Se si sta leggendo questa sezione, vuol dire che si è scelto di usare lo script <c>genkernel</c>, che configura il kernel.
</p>

<p>
Adesso che sono stati installati i sorgenti del kernel si può utilizzare lo script <c>genkernel</c> per configurarlo e compilarlo automaticamente. <c>genkernel</c> configura il kernel in modo quasi identico a come è configurato quello del CD di Installazione. Infatti quando si usa <c>genkernel</c> per compilare il kernel, il sistema rileva tutto l'hardware al boot, proprio come il CD di Installazione. Poichè genkernel non richiede nessuna configurazione manuale del kernel, questa è una soluzione ideale per quegli utenti che hanno qualche difficoltà nel compilarsi il kernel da soli.
</p>

<p>
Ecco come usare genkernel. Per prima cosa si deve emergere l'ebuild di genkernel:
</p>

<pre caption="Emergere genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Compilare ora il proprio kernel eseguendo <c>genkernel all</c>.
Visto che <c>genkernel</c> compila un kernel che supporta quasi tutto
l'hardware disponibile questa compilazione può essere un processo
piuttosto lungo.
</p>

<p>
E' importante sapere anche che se non si usano ext2 o ext3 come filesystem potrebbe essere necessario
configurare manualmente il kernel usando <c>genkernel --menuconfig all</c>
e aggiungere il supporto per il filesystem scelto <e>nel</e> kernel (cioè <e>non</e>
come modulo). Gli utenti di EVMS2 o LVM2 desidereranno aggiungere <c>--evms2</c> o <c>--lvm2</c> come argomento.
</p>

<pre caption="Esecuzione di genkernel">
# <i>genkernel all</i>
</pre>

<p>
Una volta completato <c>genkernel</c>, viene creato un kernel completo di moduli e <e>root disk iniziale</e> (initrd). Il kernel e initrd intervengono quando si configura un boot loader. E' consigliabile dunque annotare il nome del kernel e del initrd, poichè servono quando si scrive il file di configurazione del bootloader. Initrd si avvia subito dopo il boot per effettuare un rilevamento automatico dell'hardware (come nel CD di Installazione), prima che si avvii il sistema "reale".
</p>

<pre caption="Controllo dell'immagine del kernel e dell'initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Ancora un altro passo per ottenere il sistema più simile al CD di Installazione: emergere <c>coldplug</c>. Mentre initrd rileva automaticamente l'hardware necessario per avviare il sistema, <c>coldplug</c> autorileva tutto il resto. 
</p>

<pre caption="Emergere ed abilitare coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Configurazione dei moduli</title>
<subsection>
<title>Configurazione dei moduli</title>
<body>

<p>
E' necessario elencare i moduli che si desidera caricare automaticamente all'avvio in
<path>/etc/modules.autoload.d/kernel-2.6</path> (o <path>kernel-2.4</path>). 
E' possibile anche aggiungere opzioni extra se lo si desidera.
</p>

<p>
Per visualizzare tutti i moduli disponibili è possibile eseguire il seguente
comando <c>find</c>; non dimanticare di sostituire "&lt;kernel version&gt;"
con la versione del kernel che si è compilata:
</p>

<pre caption="Visualizzare i moduli disponibili">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Ad esempio per caricare automaticamente il modulo <c>3c59x.o</c>, modificare il file
<path>kernel-2.6</path> (o <path>kernel-2.4</path>) e aggiungere il nome del modulo.
</p>

<pre caption="Modificare /etc/modules.autoload.d/kernel-2.6">
<comment>(Esempio per i kernel 2.6)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>


<p>
Continuare l'installazione con la <uri link="?part=1&amp;chap=8">Configurazione del sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
