<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-portage-diverttree.xml,v 1.7 2006/10/29 22:21:42 so Exp $ -->

<sections>

<abstract>
Questo capitolo offre trucchi e suggerimenti su come utilizzare una
collezione di software personalizzata, sincronizzando solo alcune categorie,
inserendo pacchetti ed altro.
</abstract>

<version>1.4</version>
<date>2005-11-25</date>

<section>
<title>Usare un Portage Tree Subset</title>
<subsection>
<title>Escludere pacchetti e/o categorie</title>
<body>

<p>
Si possono selettivamente aggiornare certe categorie/pacchetti ed ignorarne
altre/i facendo in modo che <c>rsync</c> escluda
categorie/pacchetti durante la fase di <c>emerge --sync</c>.
</p>

<p>
Occorre definire il nome del file che contiene i pacchetti o le categorie da escludere nella
variabile <c>RSYNC_EXCLUDEFROM</c> in <path>/etc/make.conf</path>.
</p>
<pre caption="Definizione del file di esclusione in /etc/make.conf">	
 RSYNC_EXCLUDEFROM=/etc/portage/rsync_excludes	
</pre>	
 	 	
<pre caption="Escludere tutti i giochi in /etc/portage/rsync_excludes">	
games-*/*	
</pre>

<p>
Si noti comunque che questo può portare ad avere problemi di dipendenze nuove,
aggiornando pacchetti che potrebbero dipendere da pacchetti nuovi ma esclusi.
</p>

</body>
</subsection>
</section>
<section>
<title>Aggiungere ebuild non ufficiali</title>
<subsection>
<title>Definizione di una propria directory Portage</title>
<body>

<p>
Il Portage può usare ebuild che non sono disponibili attraverso l'albero ufficiale. Per far questo, si può creare una nuova directory (per esempio
<path>/usr/local/portage</path>) entro la quale memorizzare gli ebuild di terze parti usando la stessa struttura delle directory dell'albero del Portage.
</p>

<p>
Si definisce quindi la variabile PORTDIR_OVERLAY in <path>/etc/make.conf</path> affinché punti alla directory creata precedentemente. Usando Portage dopo
queste modifiche, si potranno usare questi nuovi ebuild senza che vengano
rimossi o sovrascritti da un nuovo <c>emerge --sync</c>.
</p>

</body>
</subsection>
<subsection>	
 	 <title>Lavorare con diversi overlay</title>	
 	 <body>	
 	 	
 	 <p>	
        Per  gli utenti che sviluppano su diversi strati, testano pacchetti
prima di porli nell'albero di Portage o vogliono semplicemente usare ebuild non ufficiali
di varie sorgenti, il pacchetto 
 	 <c>app-portage/gentoolkit-dev</c> fornisce	
 	 <c>gensync</c>, uno strumento che aiuta a mantenere aggiornati gli
overlay repository.
 	 </p>	
 	 	
 	 <p>	
        Con <c>gensync</c> si possono aggiornate tutti i repository in una volta sola o selezionare solo alcuni di essi. Ogni repository dovrebbe avere un 
file
 	 <path>.syncsource</path> nella directory di configurazione <path>/etc/gensync/</path> che contiene l'ubicazione del repository, il nome, l'ID, ecc.
 	 </p>	
 	 	
 	 <p>	
        Si supponga di avere due repository aggiuntivi chiamati <c>java</c>
        ( per lo sviluppo di ebuild java) e <c>entapps</c> (per le applicazioni
sviluppate per la propria azienda), si potranno aggiornare nel seguente modo:
 	 </p>	
 	 	
 	 <pre caption="Usare gensync per aggiornare alcuni repository">	
 	 # <i>gensync java entapps</i>	
 	 </pre>	
 	 	
 	 </body>	
</subsection>
</section>
<section>
<title>Software non mantenuto dal Portage</title>
<subsection>
<title>Usare il Portage con software proprietario</title>
<body>

<p>
In alcuni casi si può voler configurare, installare e manutenere software
proprietario senza dover automatizzare il processo del Portage anche se
Portage può provvedere il titolo software. Casi conosciuti sono sorgenti
del kernel e driver nvidia. Si può configurare Portage in modo tale che 
sappia che certi pacchetti sono stati installati manualmente nel sistema.
Questo processo è chiamato <e>injecting</e> ed è supportato dal Portage
attraverso il file
<path>/etc/portage/profile/package.provided</path>.
</p>

<p>
Per esempio, per informare il Portage che 
<c>vanilla-sources-2.6.11.6</c> è stato installato manualmente, aggiungere
la seguente linea a
<path>/etc/portage/profile/package.provided</path>:
</p>

<pre caption="Esempio di linea per package.provided">
vanilla-sources-2.6.11.6
</pre>

</body>
</subsection>
</section>
</sections>
