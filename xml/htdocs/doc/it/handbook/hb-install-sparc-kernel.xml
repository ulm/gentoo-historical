<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-install-sparc-kernel.xml,v 1.5 2005/06/09 22:41:02 so Exp $ -->

<sections>

<version>2.2</version>
<date>2005-06-02</date>

<section>
<title>Timezone</title>
<body>

<p>
Innanzitutto è necessario selezionare la propria timezone, in modo che il sistema riconosca in che parte del globo è collocato. Per la propria timezone, consultare <path>/usr/share/zoneinfo</path>. Creare dunque un link simbolico a <path>/etc/localtime</path> usando <c>ln</c>:
</p>

<pre caption="Abilitare le informazioni sulla timezone">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Per esempio GMT:)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installare i sorgenti</title>
<subsection>
<title>Scegliere un Kernel</title>
<body>

<p>
Il cuore, intorno al quale sono sviluppate tutte le distribuzioni, è il Kernel di Linux. E' la parte di software compresa tra i programmi e l'hardware. Gentoo dà la possibilità ai suoi utenti di scegliere tra diversi sorgenti del kernel. Una lista completa delle descrizioni dei kernel disponibili, è consultabile nella <uri link="http://www.gentoo.org/doc/it/gentoo-kernel.xml">Guida ai Kernel Gentoo</uri>.
</p>

<p>
Per i sistemi basati su sparc si hanno <c>sparc-sources</c> (sorgente del kernel ottimizzato per gli utenti SPARC) e <c>vanilla-sources</c> (il sorgente del kernel di default, così come viene rilasciato dagli sviluppatori del kernel di linux).
</p>

<p>
Ora è possibile scegliere ed installare i sorgenti del kernel tramite <c>emerge</c>.
</p>

<p>
Nel prossimo esempio si installa <c>sparc-sources</c>. Sostituirlo con il sorgente che si è scelto, questo è solo un esempio:
</p>

<pre caption="Installare un sorgente del kernel">
# <i>emerge sparc-sources</i>
</pre>

<p>
Se si dà un'occhiata a <path>/usr/src</path>, si dovrebbe vedere un link simbolico chiamato <path>linux</path>, che punta al sorgente del kernel:
</p>

<pre caption="Il link simbolico al sorgente del kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.29-sparc
</pre>

<p>
Se così non fosse (cioè il link simbolico punta a un sorgente del kernel differente), prima di continuare è necessario cambiare il link simbolico:
</p>

<pre caption="Cambiare il link simbolico al sorgente del kernel">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.29-sparc linux</i>
</pre>

<p>
Ora si procede a configurare e compilare il sorgente del kernel.
</p>

</body>
</subsection>
</section>
<section>
<title>Configurazione manuale</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
La configurazione manuale del kernel è spesso considerata la parte più difficile che ogni utente Linux incontra. Non è assolutamente vero -- dopo aver configurato un po' di kernel, l'operazione risulta semplice.
</p>

<p>
Una cosa <e>è</e> però vera: si deve conoscere il proprio sistema quando si comincia una configurazione manuale del kernel. La maggior parte delle informazioni può essere raccolta con emergere pciutils (<c>emerge pciutils</c>) che contiene <c>lspci</c>. Si potrà usare <c>lspci</c> con l'ambiente in cui si è effettuato il chroot. Si può ignorare i warning <e>pcilib</e> (come pcilib: cannot open /sys/bus/pci/devices). E' possibile anche eseguire <c>lspci</c> da un ambiente in cui <e>non si è effettuato il chroot</e>. I risultati sono gli stessi. Si può anche eseguire <c>lsmod</c> per vedere che moduli del kernel usa il CD di installazione (potrebbe fornire un buon suggerimento su cosa abilitare).
</p>

<p>
Andare nella directory del sorgente del kernel, e digitare <c>make menuconfig</c> per visualizzare un menu di configurazione basato su ncurses.
</p>

<pre caption="Aprire menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Vengono visualizzate molte sezioni di configurazione. Ecco ora alcune opzioni che devono essere attivate (altrimenti Gentoo non può funzionare, o non funziona correttamente senza modifiche aggiuntive).
</p>

</body>
</subsection>
<subsection>
<title>Attivare le opzioni indispensabili</title>
<body>

<p>
Prima di tutto, si deve attivare l'uso di codice/driver di sviluppo e sperimentale. Se non lo si fa, non si ha la possibilità di utilizzare qualche codice/driver molto importante:
</p>

<pre caption="Selezionare codice/driver sperimentale">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Andare su <c>File Systems</c> e selezionare il supporto per il filesystem che si usa. <e>Non</e> compilarlo come modulo, altrimenti Gentoo non può montare le partizioni. Selezionare anche <c>Virtual memory</c>, <c>/proc file system</c>, <c>/dev file system</c> e <c>Automatically mount at boot</c>:
</p>

<pre caption="Selezionare il filesystem">
<comment>(Con un kernel 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Con un kernel 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)

<comment>(Selezionare una o più delle seguenti opzioni necessarie per il proprio sistema)</comment>
  &lt; &gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt; &gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt; &gt; XFS filesystem support
</pre>

<p>
Se si sta usando PPPoE per connettersi a Internet o si sta usando un modem dial-up, si ha bisogno delle seguenti opzioni nel kernel:
</p>

<pre caption="Selezionare i driver necessari per PPPoE">
<comment>(Con kernel 2.4.x)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(Con kernel 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Le due opzioni di compressione non sono dannose, ma neppure necessarie; lo stesso vale per <c>PPP over Ethernet</c>, che potrebbe essere usata soltanto da <c>rp-pppoe</c> se configurato in modalità kernel.
</p>

<p>
Chi ne ha bisogno, non deve dimenticare di includere il supporto per la scheda ethernet nel kernel.
</p>

<p>
Attivare il corretto supporto bus:
</p>

<pre caption="Attivare SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>(Solo per UPA slot adapter usato in molti Ultras)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Solo per SBUS slot adapter usato in molte SPARCStations)</comment>
</pre>

<p>
Attivare il supporto per OBP:
</p>

<pre caption="Attivare il supporto per OBP">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
Si avrà bisogno anche del supporto specifico per SCSI:
</p>

<pre caption="Attivare il supporto specifico per SCSI">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Solo per SPARC ESP on-board SCSI adapter)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Solo per SBUS SCSI controllers da PTI o QLogic)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Solo per Ultra 60 on-board SCSI adapter)</comment>
</pre>

<p>
Per il supporto per la propria scheda di rete, selezionare una delle seguenti opzioni:
</p>

<pre caption="Attivare il supporto di rete">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>(Solo per SPARCStation, vecchi sistemi Ultra, e come opzione Sbus)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>(Solo per Ultra; supporti "qfe" quad-ethernet su PCI e Sbus)</comment>
    &lt;*&gt; DECchip Tulip (dc21x4x) PCI support <comment>(Per alcuni Netras, come N1)</comment>
  Ethernet (1000Mbit) ---&gt;
    &lt;*&gt; Broadcom Tigon3 support <comment>(Modern Netra, macchine Sun Fire)</comment>
</pre>

<p>
Quando si ha una macchina 4-port Ethernet (10/100 or 10/100/1000) l'ordine delle porte è differente da quello usato da Solaris. Si può usare <c>sys-apps/ethtool</c> o <c>mii-tool</c> per controllare lo status di port link.
</p>

<p>
Una volta terminata la configurazione del kernel continuare con <uri link="#compiling">Compilazione e Installazione</uri>. Dopo la compilazione del kernel, si può controllare la sua dimensione:
</p>

<pre caption="Controllare la dimensione del kernel">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
Se la (non compressa) dimensione è più grande di 2.5 MB (per Sparc32) o 3.5 MB (per Sparc64), riconfigurare il kernel fino a quando non eccede questi limiti. Un modo per ottenerlo, è quello di compilare come moduli la maggior parte dei driver del kernel. Ignorando questo aspetto si potrà avere un kernel non avviabile.
</p>

<note>
Se si usa un kernel 2.6.3 o superiore, i kernel di sparc64 possono essere grandi fino a 7.5 MB.
</note>

<p>
Se il kernel è di poco più grande, si può usare il comando <c>strip</c>:
</p>

<pre caption="Stripping del kernel">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Compilazione e Installazione</title>
<body>

<p>
Ora che il kernel è configurato, il prossimo passo sarà la sua compilazione e la sua installazione. Uscire dal menu di configurazione e avviare il processo di compilazione:
</p>

<pre caption="Compilare il kernel">
<comment>(Per kernel 2.4, sparc32)</comment>
# <i>make dep &amp;&amp; make clean vmlinux modules modules_install</i>

<comment>(Per kernel 2.4, sparc64)</comment>
# <i>make dep &amp;&amp; make clean vmlinux image modules modules_install</i>

<comment>(Per kernel 2.6, sparc32)</comment>
# <i>make &amp;&amp; make modules_install</i>

<comment>(Per kernel 2.6, sparc64)</comment>
# <i>make &amp;&amp; make image modules_install</i>
</pre>

<p>
Quando la compilazione è finita, è necessario copiare l'immagine del kernel in <path>/boot</path>.
</p>

<pre caption="Installare il kernel">
<comment>(Per kernel 2.4, sparc32)</comment>
# <i>cp vmlinux /boot/kernel-2.4.29</i>

<comment>(Per kernel 2.4, sparc64)</comment>
# <i>cp arch/sparc64/boot/image /boot/kernel-2.4.29</i>

<comment>(Per kernel 2.6, sparc32)</comment>
# <i>cp arch/sparc/boot/image /boot/kernel-2.6.11</i>

<comment>(Per kernel 2.6, sparc64)</comment>
# <i>cp arch/sparc64/boot/image /boot/kernel-2.6.11</i>

<comment>(Non dimenticarsi di copiare il file System.map)</comment>
# <i>cp System.map /boot</i>
</pre>

<p>
E' inoltre consigliato copiare il file di configurazione del kernel in <path>/boot</path>.
</p>

<pre caption="Back up della configurazione del kernel">
# <i>cp .config /boot/config-2.4.29</i>
</pre>

<p>
Adesso continuare con <uri link="#kernel_modules">Installare i moduli del Kernel separati</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Installare i moduli del kernel separati</title>
<subsection>
<title>Configurare i moduli</title>
<body>

<p>
Si dovrebbero inserire i moduli che si vogliono caricare in <path>/etc/modules.autoload.d/kernel-2.4</path> (o <path>kernel-2.6</path>). Se si vuole, si possono anche aggiungere altre opzioni ai moduli.
</p>

<p>
Per vedere tutti i moduli disponibili, eseguire il comando <c>find</c>. Non dimenticarsi di sostituire "&lt;kernel version&gt;" con la versione del kernel che si è compilata:
</p>

<pre caption="Vedere tutti i moduli disponibili">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Per esempio, per caricare automaticamente il modulo <c>3c59x.o</c>, modificare il file <path>kernel-2.4</path> o <path>kernel-2.6</path> e inserire il nome.
</p>

<pre caption="Modificare /etc/modules.autoload.d/kernel-2.4">
<comment>(Esempio per i kernel 2.4)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 o kernel-2.6">
3c59x
</pre>

<p>
Continuare l'installazione con la <uri link="?part=1&amp;chap=8">Configurazione del sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
