<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->


<sections>
<section>
<title>DistCC</title>
<subsection>
<title>Cos'è DistCC?</title>
<body>

<p>
<c>distcc</c> è un programma per distribuire la compilazione su diverse macchine, non necessariamente identiche, su una rete. Il client <c>distcc</c> trasmette tutte le informazioni necessarie ai server DistCC che vengono resi disponibili tramite l'esecuzione di <c>distccd</c>, in modo che possano compilare parte del codice sorgente per il client. Il risultato è un tempo di compilazione inferiore.
</p>

<p>
E' possibile trovare informazioni più dettagliate su <c>distcc</c> (e informazioni su come deve funzionare con Gentoo) nella nostra <uri link="/doc/it/distcc.xml">Documentazione Gentoo su distcc</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Installare DistCC</title>
<body>

<p>
Distcc include un tool grafico per tenere sotto controllo i task che il computer sta inviando per la compilazione. Se si usa Gnome si inserisca 'gnome' nelle flag <c>USE</c>. Se non si usa Gnome e si desidera comunque utilizzare il monitor, si inserisca 'gtk' nelle flag <c>USE</c>.
</p>

<p>
Installare distcc è molto facile, come tutto il software disponibile con Portage di Gentoo:
</p>

<note>
D'ora in poi, nel Manuale Gentoo, viene omessa l'opzione <c>--usepkg</c>, poichè si è già spiegato come installare i pacchetti binari.</note>

<pre caption="Installare Distcc">
# <i>emerge distcc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Attivare il supporto di Portage</title>
<body>

<p>
Se l'installazione è facile, anche il resto dovrebbe esserlo. Eccome come attivare il supporto di Portage per <c>distcc</c>.
</p>

<p>
Per prima cosa, si apra <path>/etc/make.conf</path> e si modifichi la variabile <c>FEATURES</c>, in modo che contenga la parola <c>distcc</c>. Poi, si modifichi la variabile <c>MAKEOPTS</c> inserendo <c>-jX</c>, dove <c>X</c> è il numero delle CPU che eseguono <c>distccd</c> (incluso l'host corrente) più uno:
</p>

<pre caption="Possibile impostazione di MAKEOPTS in /etc/make.conf">
<comment># Supponendo di avere 2 host con distccd escluso quello corrente:</comment>
MAKEOPTS="-j4"
</pre>

<p>
Ora, sempre in <path>/etc/make.conf</path>, decommentare la riga <c>PORTAGE_TMPDIR</c> e aggiungere la seguente riga alla fine del file:
</p>

<pre caption="Aggiungere un'ulteriore variabile di distcc in /etc/make.conf">
<comment># Non dimenticarsi di decommentare la variabile PORTAGE_TMPDIR</comment>
DISTCC_DIR=${PORTAGE_TMPDIR}/portage/.distcc
</pre>

<p>
Eseguire <c>distcc-config</c> e impostare l'elenco dei server disponibili DistCC. Per esempio si pone che i server siano <c>192.168.1.102</c> (l'host corrente), <c>192.168.1.103</c> e <c>192.168.1.104</c> (due host remoti):
</p>

<pre caption="Configurare distcc per usare tre server disponibili DistCC">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>

<p>
Naturalmente, non dimenticarsi di eseguire anche il demone <c>distccd</c>:
</p>

<pre caption="Avviare il demone distcc">
# <i>/etc/init.d/distccd start</i>
</pre>

<p>
Congratulazioni, da adesso il sistema utilizza la compilazione distribuita! Per ulteriori informazioni su DistCC e Gentoo, si legga la nostra <uri link="/doc/it/distcc.xml">Documentazione Gentoo su distcc</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>ccache</title>
<subsection>
<title>Cos'è ccache?</title>
<body>

<p>
<c>ccache</c> è un veloce compilatore di cache. Dopo aver compilato un programma, esso immagazzina i risultati intermedi, in modo che se si dovesse ricompilare lo stesso programma, il tempo di compilazione sia notevolmente ridotto. Nelle compilazioni comuni, il tempo di compilazione risulta di 5-10 volte più veloce.
</p>

<p>
Per maggiori informazioni su <c>ccache</c>, è possibile consultare la <uri link="http://ccache.samba.org">homepage di ccache</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Installare ccache</title>
<body>

<p>
Installare <c>ccache</c> con Gentoo è molto semplice, basta emergerlo.
</p>

<pre caption="Installare ccache">
# <i>emerge ccache</i>
</pre>

</body>
</subsection>
<subsection>
<title>Attivare il supporto di Portage</title>
<body>

<p>
Si modifichi <path>/etc/make.conf</path>, inserendo nella variabile <c>FEATURES</c> la parola chiave <c>ccache</c>:
</p>

<pre caption="Modificare FEATURES in /etc/make.conf">
FEATURES="ccache"
</pre>

<p>
Poi, si modifichi (o si crei), sempre in <path>/etc/make.conf</path>, la variabile <c>CCACHE_SIZE</c>, in modo che contenga la quantità di spazio su disco che si desidera rendere disponibile per <c>ccache</c>:
</p>

<pre caption="Editare CCACHE_SIZE in /etc/make.conf">
CCACHE_SIZE="2G"
</pre>

<p>
Da questo momento, Portage utilizza, ove possibile, <c>ccache</c> per velocizzare le compilazioni. Se non si è sicuri che <c>ccache</c> funzioni, è possibile eseguire <c>ccache -s</c> per esaminare le statistiche di <c>ccache</c>:
</p>

<pre caption="Esaminare le statistiche di ccache">
# <i>ccache -s</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Pacchetti binari</title>
<subsection>
<title>Creare pacchetti binari</title>
<body>

<p>
Si è già parlato di come si lavora con i pacchetti precompilati, segue la spiegazione su come si creano i propri pacchetti precompilati.
</p>

<p>
Se il pacchetto è già installato, si può usare il comando <c>quickpkg</c>, che produce un pacchetto con i file installati. Ciò è molto interessante, per esempio, per il backup.
</p>

<pre caption="Usare quickpkg">
# <i>quickpkg gnumeric</i>
</pre>

<p>
Se il pacchetto ancora non è installato, si può installarlo con <c>emerge</c>, e chiedere anche di compilare un pacchetto binario. <c>emerge</c> usa per questo compito l'opzione <c>--buildpkg</c> (<c>-b</c>):
</p>

<pre caption="Installare gnumeric e compilare un pacchetto binario">
# <i>emerge --buildpkg gnumeric</i>
</pre>

<p>
Se si desidera che Portage faccia questo di default, è necessario inserire la parola <c>buildpkg</c> nella variabile <c>FEATURES</c> in <path>/etc/make.conf</path>.
</p>

<pre caption="Creare in automatico pacchetti binari">
FEATURES="buildpkg"
</pre>

<p>
Se non si desidera installare il software, ma solo compilare il pacchetto, si può usare l'opzione <c>--buildpkgonly</c> (<c>-B</c>):
</p>

<pre caption="Compilare un pacchetto binario per gnumeric">
# <i>emerge --buildpkgonly gnumeric</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Caratteristiche di sicurezza</title>
<subsection>
<title>Sandbox</title>
<body>

<p>
Mentre si compilano e si installano pacchetti, Portage usa una <e>sandbox</e> per proteggere il sistema. Questo significa che, finchè non è installato sul sistema, il pacchetto non può toccare nessun altro file fuori dalla sandbox. E' possibile contare sul fatto che Portage conosce quali file sono creati e quali sono modificati da un pacchetto.
</p>

<p>
Quando è finita la compilazione del pacchetto, Portage "preinstalla" il pacchetto nella sandbox, registrando quali file sono inseriti e dove. Dopo, sposta questi file dalla sandbox al sistema.
</p>

</body>
</subsection>
<subsection>
<title>Privilegi di utente</title>
<body>

<p>
Portage supporta anche la compilazione dei pacchetti dall'utente non-root (più precisamente, dall'utente "portage", dal gruppo "portage"). Ciò migliora la sicurezza durante il processo di compilazione. Si può scegliere di usare i privilegi di utente con o senza sandboxing. Il metodo preferito è i privilegi di utente e sandboxing.
</p>

</body>
</subsection>
<subsection>
<title>Attivare sandbox e/o userpriv</title>
<body>

<p>
Portage utilizza <c>sandbox</c> di default. Se si desidera utilizzare <c>userpriv</c>, è necessario aggiungere la relativa parola chiave alla variabile <c>FEATURES</c>. Si noti che se si attiva <c>userpriv</c>, si toglie il supporto <c>sandbox</c>, a meno che non si attivi anche <c>usersandbox</c>:
</p>

<pre caption="Attivare userpriv e usersandbox">
FEATURES="userpriv usersandbox"
</pre>

<warn>
<e>Non</e> rimuovere <c>sandbox</c> dalla variabile <c>FEATURES</c>!
</warn>

</body>
</subsection>
<subsection>
<title>Controllo rigoroso</title>
<body>

<p>
A Portage può essere chiesto di controllare possibili circostanze pericolose (come file Manifest mancanti o errati). Per attivare questo controllo rigoroso, si aggiunga la parola <c>strict</c> alla variabile <c>FEATURES</c>:
</p>

<pre caption="Attivare il controllo rigoroso">
FEATURES="strict"
</pre>

</body>
</subsection>
<subsection>
<title>Permessi smart file system</title>
<body>

<p>
Si può impartire a Portage l'ordine di occuparsi automaticamente dei permessi di file potenzialmente pericolosi, che potrebbero comportare un rischio di sicurezza. E' possibile farlo rimuovendo i bit "group" e "other" leggibili sui file setuid e rimuovendo gli "other" bit leggibili sui file setgid, nella fase di pre installazione. Per attivare i permessi smart file, si aggiunga la parola chiave <c>sfperms</c> alla variabile <c>FEATURES</c>:
</p>

<pre caption="Attivare i permessi smart file system">
FEATURES="sfperms"
</pre>

</body>
</subsection>
</section>
<section>
<title>Altre caratteristiche</title>
<subsection>
<title>Portage Help</title>
<body>

<p>
Ci sono molte altre parole chiave che si possono inserire nella variabile <c>FEATURES</c>. La maggior parte di esse sono dedicate agli sviluppatori e sono poco interessanti per gli utenti comuni. Se si è interessati a sapere di più su queste caratteristiche (o su Portage), è possibile leggere la pagina di manuale di <path>make.conf</path>.
</p>

<pre caption="Ulteriori informazioni su Portage">
# <i>man make.conf</i>
</pre>

</body>
</subsection>
</section>
</sections>
