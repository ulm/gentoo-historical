<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-working-variables.xml,v 1.7 2005/09/28 20:13:30 so Exp $ -->

<sections>

<version>1.13</version>
<date>2005-09-28</date>

<section>
<title>Variabile d'ambiente</title>
<subsection>
<title>Cosa sono</title>
<body>

<p>
Una variabile ambiente è un oggetto nominale che contiene informazioni usate
da una o più applicazioni. Questo viene trovato un po' misterioso o di
difficile gestione da parte di molti utenti, specialmente coloro che si
avvicinano per la prima volta a Linux.L'uso di variabili ambiente, invece, può
facilitare la modifica della configurazione per una o più applicazioni.
</p>

</body>
</subsection>
<subsection>
<title>Esempi importanti</title>
<body>

<p>
Segue una tabella con la lista delle variabili usate su un sistema Linux e
la loro descrizione. I valori di esempio sono presentati di seguito.
</p>

<table>
<tr>
  <th>Variabile</th>
  <th>Descrizione</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
  Variabile che contiene una lista di directory, separate dai due punti (:),
  nelle quali il sistema cerca file eseguibili. Se si digita un comando
  (come <c>ls</c>, <c>rc-update</c> o <c>emerge</c>) che non
  è presente nella lista, il sistema non può essere in grado di eseguirlo,
  a meno che non si digiti il comando preceduto da tutto il
  percorso, come <c>/bin/ls</c>.
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
    Variabile che ha la stessa funzione di <c>PATH</c>, con la sola differenza
    che le directory  specificano il percorso di ricerca per comandi digitati
    dall'utente root.
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
  Variabile che contiene la lista di directory, separate dai due punti (:), per
  la ricerca delle librerie da parte del linker dinamico.
  </ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>
    Variabile che contiene la lista di directory, separate dai due punti (:),
    per la ricerca delle pagine man da parte del comando <c>man</c>.
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
    Variabile che contiene la lista di directory, separate dai due punti (:),
    per la ricerca delle pagine info da parte del comando <c>info</c>.
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
    Variabile che contiene il percorso del programma usato per visualizzare il
    contenuto di file di testo (come <c>less</c> o <c>more</c>).
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
    Variabile che contiene il percorso del programma usato per modificare
    il contenuto di file di testo (come <c>nano</c> o <c>vi</c>).
  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
    Variabile che contiene la lista di directory, separate dai due punti (:),
    nelle quali si trova materiale specifico al KDE.
  </ti>
</tr>
<tr>
  <ti>CLASSPATH</ti>
  <ti>
    Variabile che contiene la lista di directory, separate dai due punti (:),
    conteneti le classi JAVA.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
    Variabile che contiene la lista di directory, separate da <e>spazi</e>,
    che vengono protette durante il processo di aggiornamento del sistema da
    parte del Portage.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
    Variabile che contiene la lista di directory, separate da <e>spazi</e>,
    che non dovranno essere protette durante il processo di aggiornamento del
    sistema da parte del Portage.
  </ti>
</tr>
</table>

<p>
Segue un esempio di definizione di tutte queste variabili:
</p>

<pre caption="Esempio di definizioni">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CLASSPATH="/opt/blackdown-jre-1.4.1/lib/rt.jar:."
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf
</pre>

</body>
</subsection>
</section>
<section>
<title>Definire variabili globali</title>
<subsection>
<title>La directory /etc/env.d</title>
<body>

<p>
Per centralizzare la definizione di queste variabili, è stata introdotta
in Gentoo la directory <path>/etc/env.d</path>. All'interno di questa directory
si trovano un certo numero di file, come <path>00basic</path>,
<path>05gcc</path>, ecc. che contengono le variabili necessarie alle
applicazioni menzionate nel nome del file.
</p>

<p>
Per maggiore chiarezza; quando si installa il <c>gcc</c>, viene anche creato
dall'ebuild un file chiamato <path>05gcc</path>, che contiene la definizione
delle seguenti variabili:
</p>

<pre caption="/etc/env.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
In altre distribuzioni la definizione di variabili ambiente viene fatta
con modifiche o aggiunte al file <path>/etc/profile</path> o ad altre
locazioni. D'altra parte l'uso di Gentoo facilita la manutenzione e la
gestione delle variabili ambiente, dato che non occorre fare attenzione ai
numerosi file che possono contenere variabili ambiente.
</p>

<p>
Per esempio, durante l'aggiornamento del <c>gcc</c> viene anche aggiornato il
file <path>/etc/env.d/05gcc</path> senza nessuna richiesta di interazione da
parte dell'utente.
</p>

<p>
Di questo sono beneficiari il Portage e anche l'utente. Occasionalmente
potrebbe nascere l'esigenza di configurare una variabile ambiente a livello
globale. Prendiamo per esempio la variabile <c>http_proxy</c>. Invece di
modificare l'<path>/etc/profile</path>, basta creare un file
<path>/etc/env.d/99local</path>, e inserire la seguente definizione:
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
L'uso dello stesso file per tutte le variabili utente, aiuta ad avere una
panoramica delle variabili definite in seguito dall'utente stesso.
</p>

</body>
</subsection>
<subsection>
<title>Lo script env-update</title>
<body>

<p>
Alcuni file in <path>/etc/env.d</path> definiscono la variabile <c>PATH</c>.
L'esecuzione di <c>env-update</c> appende le diverse definizioni prima
di aggiornare le varabili ambiente, rendendo semplice l'aggiunta
di variabili ambiente ai pacchetti (o agli utenti) senza interferire con i
valori già presenti.
</p>

<p>
Lo script <c>env-update</c> appende i valori dei file in
<path>/etc/env.d</path> in ordine alfabetico. I nomi dei file devono iniziare
con due cifre decimali.
</p>

<pre caption="Ordine di aggiornamento di env-update">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
La concatenazione di variabili non è sempre possibile, solo con le seguenti
variabili la si può ottenere: <c>KDEDIRS</c>, <c>PATH</c>, <c>CLASSPATH</c>,
<c>LDPATH</c>, <c>MANPATH</c>, <c>INFODIR</c>, <c>INFOPATH</c>,
<c>ROOTPATH</c>, <c>CONFIG_PROTECT</c>, <c>CONFIG_PROTECT_MASK</c>,
<c>PRELINK_PATH</c> e <c>PRELINK_PATH_MASK</c>. Per tutte le altre variabili
è usato l'ultimo valore definito (in ordine alfabetico dei file in
<path>/etc/env.d</path>).
</p>

<p>
Durante l'esecuzione di <c>env-update</c> vengono create tutte le variabili
ambiente e verranno poste in <path>/etc/profile.env</path> (usato a sua volta
da <path>/etc/profile</path>). Vengono inoltre estratte le informazioni dalla
variabile <c>LDPATH</c> per creare il file <path>/etc/ld.so.conf</path>. Dopo
di che, viene eseguito il comando <c>ldconfig</c> per ricreare il file
<path>/etc/ld.so.cache</path> usato dal linker dinamico.
</p>

<p>
Per vedere l'effetto immediato di <c>env-update</c> dopo il suo uso,
eseguire il seguente comando per aggiornare l'ambiente.
Utenti che hanno installato Gentoo, si ricordano probabilmente questo
dalle istruzioni di installazione:
</p>

<pre caption="Aggiornare l'ambiente">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

<note>
Il comando sopra aggiorna solo le variabili nel terminale corrente e nelle
<e>nuove</e> console. Se si sta lavorando in X11 si dovrà digitare
<c>source /etc/profile</c> in ogni altro terminale che si aprirà o se si
restarterà X così che tutti i nuovi terminali abbiano le nuove variabili. Se
si usa un login manager passare a root e digitare
<c>/etc/init.d/xdm restart</c>. Saltando questo ultimo comando si dovrà fare
il logout e di nuovo il login per X per ottenere i
nuovi valori delle variabili.
</note>

</body>
</subsection>
</section>
<section>
<title>Definire variabili locali</title>
<subsection>
<title>Specifiche dell'utente</title>
<body>

<p>
Non sempre è conveniente definire variabili ambiente a livello globale.
Per esempio, l'aggiunta di <path>/home/mioutente/bin</path> e la attuale
directory (quella in cui ci si trova) alla variabile <c>PATH</c> non dovrebbe
riflettersi su tutti gli altri utenti. E' necessario definire una variabile
ambiente locale e per questo occorre usare i file <path>~/.bashrc</path> o
<path>~/.bash_profile</path>:
</p>

<pre caption="Estendere PATH per uso locale in ~/.bashrc">
<comment>(Due punti seguiti da nessuna directory è inteso come la attuale directory)</comment>
PATH="${PATH}:/home/mioutente/bin"
</pre>

<p>
Dopo un nuovo login, la variabile <c>PATH</c> viene aggiornata.
</p>

</body>
</subsection>
<subsection>
<title>Specifiche alla sessione</title>
<body>

<p>
A volte sono necessarie anche definizioni più ristrette.
Potrebbe essere il caso in cui è necessario usare file binari di una directory
temporanea senza usare il percorso dei binari di sistema o senza editare
<path>~/.bashrc</path> per la temporaneità dell'uso.
</p>

<p>
In questo caso si può definire la variabile <c>PATH</c> nella sessione
corrente usando il comando <c>export</c>. Finché non si esegue un'operazione
di logout, la variabile <c>PATH</c> manterrà la configurazione temporanea.
</p>

<pre caption="Definire una variabile ambiente specifica per una sessione">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>
