<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/handbook/hb-install-mips-kernel.xml,v 1.17 2007/07/12 07:34:20 scen Exp $ -->

<sections>

<version>8.1</version>
<date>2007-05-15</date>

<section>
<title>Fuso Orario (Timezone)</title>
<body>

<p>
Innanzitutto è necessario selezionare il proprio fuso orario (timezone), in modo
che il sistema riconosca in che parte del globo è collocato. Individuare il
proprio fuso orario in <path>/usr/share/zoneinfo</path>, dopodichè copiarlo in
<path>/etc/localtime</path>. Si sconsiglia di utilizzare i fusi orari del tipo
<path>/usr/share/zoneinfo/Etc/GMT*</path> poichè i loro nomi non indicano le
zone che ci si aspetterebbe. Per esempio <path>GMT-8</path> indica GMT+8.
</p>

<pre caption="Abilitare le informazioni sul fuso orario (timezone)">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Per esempio GMT:)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>

<section>
<title>Installare i sorgenti</title>
<subsection>
<title>Scegliere un Kernel</title>
<body>

<p>
Il cuore, intorno al quale sono sviluppate tutte le distribuzioni, è il Kernel
di Linux. E' la parte di software compresa tra i programmi e l'hardware. Gentoo
dà la possibilità ai suoi utenti di scegliere tra diversi sorgenti del kernel.
Una lista completa delle descrizioni dei kernel disponibili, è consultabile
nella <uri link="http://www.gentoo.org/doc/it/gentoo-kernel.xml">Guida ai Kernel
Gentoo</uri>.
</p>

<p>
Sistemi basati su MIPS devono scegliere i <c>mips-sources</c>. L'insieme di
patch differisce da quelle disponibili per altre architetture, e ne contiene
molte specifiche per MIPS.
</p>

<pre caption="Emergere i sorgenti del kernel">
# <i>emerge mips-sources</i>
</pre>

<impo>
Su Origin 200/2000, Indigo2 Impact (R10000), Octane/Octane2 e O2, è richiesto un
kernel 64 bit per avviare il sistema. Per questi, è necessario eseguire
<c>emerge kgcc64</c> per creare un cross compiler per compilare i kernel 64 bit.
</impo>

<pre caption="Installare kgcc64">
# <i>emerge kgcc64</i>
</pre>

<p>
Se si dà un'occhiata a <path>/usr/src</path>, si dovrebbe vedere un link
simbolico chiamato <path>linux</path>, che punta al sorgente del kernel. In
questo caso il sorgente del kernel installato punta a <c>mips-sources-<keyval
id="kernel-version"/></c>, ma ricordarsi che la versione potrebbe essere
diversa:
</p>

<pre caption="Il link simbolico al codice sorgente del kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
Ora si procede a configurare e compilare il sorgente del kernel.
</p>

</body>
</subsection>
</section>

<section>
<title>Compilazione e installazione del kernel</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Di solito si è vista la configurazione manuale del sorgente del kernel. Questa è
divenuta impraticabile dato il numero di sistemi che sono supportati. Questa
sezione esamina vari sorgenti per configurazioni di esempio del kernel.
</p>

</body>
</subsection>
<subsection>
<title>Usare esempi di configurazione nei sorgenti del kernel</title>
<body>

<p>
Molti sistemi supportati hanno esempi di .config nascosti nel kernel sorgente.
Non tutti hanno le configurazioni distribuite in questo modo. Quelli che li
hanno, possono essere configurati con i comandi menzionati nella tabella sotto.
</p>

<table>
<tr>
  <th>Sistema</th>
  <th>Comando di configurazione</th>
</tr>
<tr>
  <ti>Cobalt Servers</ti>
  <ti><c>make cobalt_defconfig</c></ti>
</tr>
<tr>
  <ti>Indy, Indigo2 (R4k), Challenge S</ti>
  <ti><c>make ip22_defconfig</c></ti>
</tr>
<tr>
  <ti>Origin 200/2000</ti>
  <ti><c>make ip27_defconfig</c></ti>
</tr>
<tr>
  <ti>Indigo2 Impact (R10k)</ti>
  <ti>
    <c>make ip28_defconfig</c>
  </ti>
</tr>
<tr>
  <ti>O2</ti>
  <ti><c>make ip32_defconfig</c></ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Usare la configurazione del kernel già in esecuzione dal media di
installazione</title>
<body>

<p>
Tutte le immagini di installazione Gentoo forniscono una opzione di
configurazione del kernel come parte dell'immagine stessa, accessibile in
<path>/proc/config.gz</path>. Può essere usata in molti casi. E' meglio però
che il proprio sorgente del kernel corrisponda al kernel che è attualmente in
esecuzione. Per estrarlo, eseguire <c>zcat</c> come mostrato sotto.
</p>

<pre caption="Estrarre .config da /proc/config.gz">
# <i>zcat /proc/config.gz > .config</i>
</pre>

<impo>
La configurazione del kernel è impostata per una immagine netboot. Si aspetta di
trovare una immagine del filesystem root, sia come una directory per initramfs,
sia come in device loopback per initrd. Quando si esegue <c>make menuconfig</c>,
non dimenticarsi di andare in General Setup e disabilitare le opzioni per
initramfs.
</impo>

</body>
</subsection>
<subsection>
<title>Database per le compatibilità hardware</title>
<body>

<p>
Come aiuto agli utenti nel trovare impostazioni funzionanti, è stato avviato un
database per le compatibilità hardware. Questo database elenca il supporto per
vari dispositivi MIPS, e permette agli utenti di contribuire alle configurazioni
del kernel funzionanti. L'indirizzo per questo sito è
<uri>http://stuartl.longlandclan.hopto.org/gentoo/mips</uri>.
</p>

<p>
Se si trova questo servizio utile, si può contribuire con note e file .config
così che altri utenti ne possano beneficiare. Dovrebbe essere chiaro che non c'è
nessuna garanzia affinchè ogni file di configurazione scaricato da questo sito
funzioni.
</p>

</body>
</subsection>
<subsection>
<title>Adattare la configurazione in base alle proprie necessità</title>
<body>

<p>
Una volta trovata una configurazione, si deve scaricarla nella directory del
sorgente del kernel, e rinominarla in <path>.config</path>. Da lì, si può
eseguire <c>make oldconfig</c> per aggiornare e per cambiare la configurazione
prima della compilazione.
</p>

<pre caption="Configurare il kernel">
# <i>cd /usr/src/linux</i>
# <i>cp /path/to/example-config .config</i>
# <i>make oldconfig</i>
<comment>(Premere invio ad ogni prompt per accettare l'impostazione predefinita, i cambiamenti verranno fatti più avanti)</comment>
# <i>make menuconfig</i>
</pre>

<impo>
Nella sezione Kernel Hacking, c'è una opzione chiamata "Are You Using A Cross
Compiler?". Dice ai Makefile del kernel di aggiungere all'inizio
"<c>mips-linux-</c>" (o <c>mipsel-linux</c> ... etc) ai comandi <c>gcc</c> e
<c>as</c> quando si compila il kernel. Questo dovrebbe non essere fatto, anche
se si sta usando un cross compiler. Se si ha bisogno di un cross compiler,
specificare il prefisso usando la variabile <c>CROSS_COMPILE</c> come mostrato
nella prossima sezione.
</impo>

<impo>
C'è un problema conosciuto con JFS e ALSA su sistemi Octane, nei quali ALSA non
funziona. Si raccomanda di non usare JFS.
</impo>

</body>
</subsection>
<subsection id="compiling">
<title>Compilazione e Installazione</title>
<body>

<p>
Ora che il kernel è configurato, il prossimo passo sarà la sua compilazione ed
installazione. Uscire dal menu di configurazione e avviare il processo di
compilazione:
</p>

<note>
Su sistemi 64 bit, si deve specificare
<c>CROSS_COMPILE=mips64-unknown-linux-gnu-</c> (o <c>mips64el-...</c> su un
sistema little-endian) per usare il compiler 64 bit.
</note>

<pre caption="Compilare il kernel">
<comment>(Compilazione nativa)</comment>
# <i>make vmlinux modules modules_install</i>

<comment>(cross compiling)</comment>
<comment>(sostituire mips64-unknown-linux-gnu- di conseguenza)</comment>
# <i>make vmlinux modules modules_install CROSS_COMPILE=mips64-unknown-linux-gnu-</i>

<comment>(Quando si compila su un'altra macchina, come una x86, usare)</comment>
<comment>(i seguenti comandi per compilare il kernel &amp; installare)</comment>
<comment>(i moduli in una directory specifica affinchè vengano trasferiti nella macchina principale.)</comment>
# <i>make vmlinux modules CROSS_COMPILE=mips64-unknown-linux-gnu-</i>
# <i>make modules_install INSTALL_MOD_PATH=/somewhere</i>
</pre>

<impo>
Quando si compila un kernel 64 bit per Indy, Indigo2 (R4k), Challenge S e O2,
usare <c>vmlinux.32</c> invece di <c>vmlinux</c>. Altrimenti la macchina non
potrà avviarsi. Questo aggira il fatto che PROM non capisca il formato ELF64.
</impo>

<pre caption="Usare vmlinux.32">
# <i>make vmlinux.32</i>
<comment>(Questo crea vmlinux.32 -- il kernel finale)</comment>
</pre>

<p>
Quando la compilazione è finita, è necessario copiare l'immagine del kernel in
<path>/boot</path>.
</p>

<note>
I server Cobalt, si aspettano di vedere una immagine del kernel compressa.
Ricordarsi di fare <c>gzip -9</c> al file dopo che si è entrati in
<path>/boot</path>.
</note>

<pre caption="Installare il kernel">
# <i>cp vmlinux /boot/kernel-<keyval id="kernel-version"/></i>

<comment>(Cobalt Servers -- Comprimere la immagine del kernel)</comment>
# <i>gzip -9v /boot/kernel-<keyval id="kernel-version"/></i>
</pre>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Installare i moduli del kernel separati</title>
<subsection>
<title>Configurare i moduli</title>
<body>

<p>
Si dovrebbero inserire i moduli che si vogliono caricare in
<path>/etc/modules.autoload.d/kernel-2.6</path>. Se si vuole, si possono anche
aggiungere altre opzioni ai moduli.
</p>

<p>
Per vedere tutti i moduli disponibili, eseguire il comando <c>find</c>.  Non
dimenticarsi di sostituire "&lt;kernel version&gt;" con la versione del skernel
che si è compilato:
</p>

<pre caption="Vedere tutti i moduli disponibili">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Per esempio, per caricare automaticamente il modulo <c>3c59x.o</c>,
modificare <path>kernel-2.6</path> e inserire il nome.
</p>

<pre caption="Modificare /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Continuare l'installazione con la <uri link="?part=1&amp;chap=8">
Configurazione del sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>