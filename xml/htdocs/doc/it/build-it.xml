<?xml version='1.0'?>

<!DOCTYPE guide SYSTEM "../dtd/guide.dtd">

<guide link="/doc/build.html">
<title>Gentoo Linux 1.2 Guida all'installazione</title>
<author title="Chief Architect"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
<translator title="Translator"><mail link="morelli@gentoo.it">Enrico Morelli</mail></translator>
<author title="Author"><mail link="jerry@gentoo.org">Jerry Alexandratos</mail></author>
<author title="Ghost"><mail link="g2boojum@gentoo.org">Grant Goodyear</mail></author>

<abstract>Queste instruzioni ti guideranno attraverso il processo di
installazione di Gentoo Linux 1.2. L'installazione di Gentoo Linux supporta
vari tipi di approcci a seconda di quanto vuoi che il tuo sistema sia costruito da
zero.</abstract>

<version>1.5</version>
<date>24 Aprile 2002</date>

<chapter>
<title>Introduzione</title>
<section>
<body>

<p> 
	Questo nuovo CD di boot dovrebbe partire da tutti i moderni lettori
	CD-ROM IDE e SCSI. Il Linux incluso nel CD-ROM supporta periferiche IDE 
	(incluse nel kernel) e SCSI (disponibili come modulo).
	Inoltre, sono provveduti i moduli per tutti i tipi di schede di rete 
	supportati da Linux, cos&#236; come tutti i tools per la configurazione e l'accesso
	via ssh alla rete e il download dei files.
</p>


<p>
	I requisiti minimi del sistema sono: processore 486+ con idealmente
	almeno 64MB di RAM  (Gentoo Linux &#232; stato installato con successo con
	64MB di RAM e 64MB di swap, ma in queste condizioni il processo di
	installazione &#232; molto lento). Prima di inziare il processo di installazione,
	devi scaricare una delle nostre immagini ISO.
	Al momento ci sono due CD disponibili. Il primo CD &#232; <uri
	link="http://www.gentoo.it/build/1.2/gentoo-ix86-1.2.iso">gentoo-ix86-1.2.iso</uri> 
	ed &#232; una ISO abbastanza piccola (16MB) che contiene un' immagine bootabile
	(<path>stage1-ix86-1.2.tbz2</path>) attraverso la quale potrai
	costruire un sistema Gentoo Linux da zero. 
	(Quanto necessario, tutti i sorgenti verranno scaricati automaticamente da Internet).
	Il secondo CD &#232; <uri link="http://www.gentoo.it/build/1.2/gentoo-i686-1.2.iso">gentoo-i686-1.2.iso</uri>;
	questa immagine &#232; pi&#249; grande (100+MB) ed oltre a inglobare il primo CD,
	contiene un sistema di base i686 precompilato (<path>stage3-i686-1.1a.tbz2</path>)
	ed uno semi-precompilato (<path>stage2-i686-1.2.tbz2</path>).
	Questi ultimi due tar files richiedono almeno un
	processore Pentium Pro (un K6 non va bene).
	Se hai un sistema i686+, possiamo realmente aiutarti
	ad aumentare la velocit&#224; di
	installazione se non desideri costruire il sistema da zero.
</p>


<p>
	Ora diamo una rapida occhiata al processo di installazione. 
	(N.d.T. L'installazione di Gentoo prevede 3 steps che nel corso
	dell'installazione chiameremo stage.) Creeremo le partizioni, 
	i nostri filesystems ed estrarremo uno degli stageNN tar file. Se stiamo usando lo stage1 o lo stage2 tar file,
	vedremo quali passi compiere per portare il
	nostro sistema allo stage3. Una volta che il sistema
	isara&#232; arrivato allo stage3,
	potremo configurarlo (ottimizzando i files di configurazione, 
	installando il bootloader, etc.), e farlo ripartire avendo un sistema Gentoo
	Linux completamente funzionale.
	A seconda dello stage dal quale stiamo partendo, i seguenti sono i requisiti
	per l'installazione (N.d.T. emerge &#232; il comando per la
	gestione del software in Gentoo Linux, per cui alcuni dei seguenti termini
	non sono traducibili):
</p>

<table>
<tr><th>stage tar file</th><th>requisiti per l'installazione</th></tr>
<tr><ti>1</ti><ti>setup di partizioni e filesystems, emerge rsync, bootstrap, emerge system, emerge linux sources, configurazione finale</ti></tr>
<tr><ti>2</ti><ti>setup di partizioni filesystems, emerge rsync, emerge system, emerge linux sources, configurazione finale</ti></tr>
<tr><ti>3</ti><ti>setup di partizioni e filesystems, emerge rsync (opzionale), configurazione finale</ti></tr>
</table>

</body>
</section>
</chapter>
<chapter>
<title>Booting</title>
<section>
<body>

<p> 
	Una volta che hai scelto il CD che vuoi usare, inseriscilo nel lettore e
	riavvia il computer.
	Dovrai vedere un testo di benvenuto seguito da un <c>boot:</c>
	prompt in alto sullo schermo. Premi ENTER, e Linux comincer&#224;
	ad essere caricato da CD.
</p>


<p> 
	Vedrai quindi una piccola lista di comandi disponibili nel CD di boot,
	che includono <c>nano</c> (un clone dell'editor pico)
	e le istruzioni per inizializzare la rete.
	Ti sar&#224; quindi chiesto di selezionare una tastiera, seguita dall'individuazione
	automatica delle periferiche PCI. Questo processo caricher&#224; automaticamente i 
	moduli appropriati del kernel per le pi&#249; popolari periferiche 
	PCI, SCSI ed ethernet. Dopo un ENTER, potrai entrare nell'ambiente di installazione
	di Gentoo Linux.
	Dovresti ora avere il prompt di root ("<c>#</c>) nella console corrente
	e poter aprire nuove console premendo alt-f2, alt-f3, etc, e ENTER.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Caricamento dei moduli del kernel</title>
<section>
<body>

<p>
	Siamo quasi pronti ad iniziare l'installazione di Gentoo Linux, ma prima
	dobbiamo fare i passi necessari affinch&#233; il kernel riconosca la nostra
	scheda di rete, e qualsiasi altra periferica SCSI che il processo di 
	individuazione automatica delle periferiche PCI non ha trovato.
	Per vedere una lista di tutte le schede di rete disponibili,
	digitiamo <c>ls /lib/modules/*/kernel/drivers/net/*</c>.
	Per caricare un modulo particolare, diamo il comando:
</p>

<pre>
# <i>modprobe pcnet32</i>
	<comment>(sostituendo a pcnet32 il modulo della nostra scheda di rete)</comment>
</pre>


<p>
	Se vogliamo riuscire ad accedere ad ogni periferica
	SCSI che non &#232; stata individuta durante il processo di auto-identificazione,
	dovremo caricare i moduli appropriati da /lib/modules,
	usando ancora <c>modprobe</c>:
</p>

<pre>
# <i>modprobe aic7xxx</i>
# <i>modprobe sr_mod</i>
# <i>modprobe sd_mod</i>
</pre>

<p>
	Con questa serie di comandi modprobe abbiamo caricato il driver per 
	lo SCSI (l' <c>aic7xxx</c>) e siamo sicuri che il supporto per CD-ROM SCSI
	(<c>sr_mod</c>) e dischi SCSI (<c>sd_mod</c>) sia stato abilitato.
</p>

<note><c>hdparm</c> &#232; ora incluso sulle iso -r10 e successive. </note>
</body>
</section>
</chapter>
<chapter>
<title>Caricamento dei moduli PCMCIA</title>
<section>
<body>
<p>Se hai una scheda di rete PCMCIA, &#232; necessario fare qualche passo aggiuntivo.</p>
<pre>
# <i>insmod pcmcia_core</i>
# <i>insmod i82365</i>
# <i>insmod ds</i>
# <i>cardmgr -f</i>
</pre>
<p>
	Quando cardmgr identifica che hardware &#232; presente, lo speaker 
	del PC dovrebbe emettere una serie di rassicuranti beeps 
	e la tua scheda di rete PCMCIA dovrebbe prendere vita. Puoi naturalmente
	inserire la scheda PCMCIA anche dopo il caricamento di cardmgr,
	se preferisci.
	(Tecnicamente, non &#232; necessario eseguire <i>cardmgr</i> se conosci esattamente
	il modulo che la scheda PCMCIA richiede. 
	Se invece non lo conosci, caricare tutti i moduli PCMCIA per guardare qual &#232; quello giusto non serve a niente,
	in quanto tutti i moduli PCMCIA verranno caricati e
	rimarranno in attesa di riconoscere la corrispondente
	scheda.
	<i>cardmgr</i> si occuper&#224; anche di rimuovere
	i moduli corrispondenti alle schede che
	eventualmente in fututo rimuoverete.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Configurazione e installazione della rete</title>
<section>
<body>

<p>
	I nuovi CD -r11+ permettono di configurare una rete funzionante,
	che permette l'uso di <c>ssh</c>, <c>scp</c> o <c>wget</c> 
	prima di iniziare il processo di installazione. Se non hai bisogno di usare
	questi comandi, puoi proseguire con il setup della rete. Una volta che 
	la rete funziona, Portage user&#224; la rete una volta dentro l'ambiente chroot
	(richiesto per l'installazione di Gentoo Linux).
</p>
</body>
</section>

<section>
<title>DHCP</title>
<body>

<p>Configurare una rete DHCP &#232; semplice; se il tuo provider non usa DHCP,
passa al paragrafo "Configurazione statica".
</p>
<pre caption="Configurazione di una rete DHCP">
# <i>dhcpcd eth0</i> 
</pre>

<note>Alcuni provider richiedono un hostname. Per fare questo aggiungi un flag <c>-h nomehost</c> nella riga di
comando del dhcpcd.
</note>
<p>
	Non ti spaventare se ricevi messaggi di avviso da<i>dhcpConfig</i>;
	niente panico; gli errori non sono quasi mai
	degni di nota.
	Puoi continuare col paragrafo "Test della rete".
</p>
</body>
</section>
<section>
<title>Configuratione statica</title>
<body>
<p>
	&#200; necessario configurare la rete per scaricare i sorgenti e costruire 
	la nostra Gentoo Linux.
	Digita i seguenti comandi sostituendo a $IFACE la tua interfaccia di rete 
	(di solito <c>eth0</c>), a $IPNUM il tuo indirizzo IP,
	a $BCAST il tuo indirizzo di broadcast, e a $NMASK la tua network mask.
	Per il comando <c>route</c>, invece, sostituisci a $GTWAY l'indirizzo 
	IP del tuo gateway.
</p>
<pre>
# <i>/sbin/ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</i>
# <i>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1</i>
</pre>

<p>
	&#200; il momento  di creare il file <path>/etc/resolv.conf</path> in modo
	tale che sia possibile la risoluzione dei nomi.
	(In questo modo possiamo raggiungere siti Web/FTP direttamente
	col nome piuttosto che attraverso l'indirizzo IP).
</p>

<note>
	Al momento il solo editor installato per default
	&#232; <c>nano</c> un piccolo editor visuale facile da usare.
	Usa <c>nano</c> con l'opzione <c>-w</c> per disabilitare il line-wrapping automatico.
</note>


<p>Segue un esempio da seguire per la creazione del tuo /etc/resolv.conf:</p>

<pre caption="esempio di /etc/resolv.conf">
domain mydomain.com
nameserver 10.0.0.1
nameserver 10.0.0.2
</pre>
<p>
	Sostituisci a <c>10.0.0.1</c> e a <c>10.0.0.2</c> 
	l'indirizzo IP del tuo server DNS primario e secondario.
</p>
</body>
</section>
<section>
<title>Test della rete</title>
<body>
<p>
	Ora che la tua rete &#232; stata configurata, il comando <c>/sbin/ifconfig -a</c>
	dovrebbe mostrarti se la tua scheda di rete sta lavorando.
	(presta attenzione a <e>UP</e> e <e>RUNNING</e> nell'output).
</p>
<pre caption="/sbin/ifconfig per una scheda di rete che sta lavorando">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
</pre>
<!--
<note>
If you have a static ppp link, you can !!! do this...!!!
</note>
-->
</body>
</section>
<section>
<title>La rete funziona!</title>
<body>

<p>
	La rete dovrebbe essere ora configurata e funzionante.
	Dovresti essere in grado di usare i comandi
	<c>ssh</c>, <c>scp</c> e <c>wget</c> per connetterti ad altre macchine
	nella tua LAN o ad Internet.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Partizioniamo il disco</title>
<section>
<body>

<p> 
	Ora che il kernel pu&#242; vedere la nostra scheda di rete e il 
	controller dei dischi, &#232; il momento di creare
	le partizioni del disco per la nostra Gentoo Linux.
</p>


<p>
	Facciamo ora una breve panoramica sulle partizioni standard Gentoo Linux.
	Creeremo almeno tre partizioni: una partizione di swap, una root partition
	(per contenere il grosso di Gentoo Linux), e una partizione di boot. 
	Quest'ultima &#232; disegnata per contenere le informazioni del GRUB boot loader
	e il(i) kernel(s) di Linux.  La partizione di boot ci permette di avere un posto
	sicuro dove mettere tutto ci&#242; che &#232; collegato al booting di Linux. 
	Durante il normale lavoro quotidiano col nostro Gentoo Linux, la partizione di
	boot dovrebbe rimanere <e>unmounted</e>. Questo previene che il kernel divenga
	inutilizzabile ( a causa di una corruzione del
	filesystem) nell'eventualit&#224; di un crash del sistema, prevenendo il problema del
	cane che si morde la coda, dove il GRUB non pu&#242; leggere il kernel 
	(data l'inconsistenza del filesystem) e dall'altra parte non
	si pu&#242; riportare il filesystem ad uno stato consistente
	(dato che non possiamo fare il boot!).
</p>


<p>
	Veniamo ora ai tipi di filesystem. Per ora abbiamo quattro filesystems disponibili:
	XFS, ext2, ext3 (journaling) e ReiserFS. ext2 &#232; il vero e proprio
	filesystem di Linux ma non supporta la tecnologia journaling. 
	ext3 &#232; la nuova versione di ext2 con sia la tecnologia meta-data journaling
	che l'ordered data wite.
	ReiserFS &#232; un filesystem basato su  B*-tree che promette una buona performance
	su file di piccole dimensioni e velocit&#224; superiori
	a ext2 e ext3 con file di dimensioni minori di 4k,
	spesso di un fattore 10x-15x. 
	Comunque, <e>non</e> raccomandiamo ReiserFS attualmente, a causa del fatto che si sono manifestati
	problemi di corruzione dei filesystems con i kernels
	della serie 2.4.x. ReiserFS ha una tecnologia
	meta-data journaling, ma non data journaling. 
	XFS &#232; un filesystem ad alte prestazioni con
	tecnologia meta-data journaling che &#232;
	completamente supportato in Gentoo Linux.
</p>
<p>
	Se sei interessato al filesystem pi&#249; standard, usa ext2.
	Se ti interessa un filesystem pi&#249; sicuro, usa ext3. Se
	sei invece interessato ad un filesystem ad alte prestazioni con il
	supporto journaling, usa XFS; sia ext3 che
	XFS sono maturi e raffinati. Tutti i filesystems eccetto ReiserFS sono adatti per ambienti produttivi.
	Queste sono le partizioni raccomandate e la loro dimensione:
</p>
  <table>
  <tr>
  	<th>Partizione</th>
	<th>Dimensione</th>
	<th>Tipo</th>
  	<th>esempio di device</th>
  </tr>
  <tr>
  	<ti>partizione di boot, contiene il kernel(s) e informazioni per il boot</ti>
	<ti>100 Megabytes</ti>
	<ti>ext2/3 racommandate; se scegli ReiserFS monta il filesystem con l'opzione <c>-o notail</c></ti>
  	<ti>/dev/hda1</ti>
  </tr>
   <tr>
  	<ti>partizione di swap (non ha il limte di 128 Megabyte)</ti>
	<ti>&gt;=2*Quantit&#224; di RAM &#232; raccomandata
	ma non ne &#232; richiesta di pi&#249; </ti>
	<ti>Linux swap</ti>
  	<ti>/dev/hda2</ti>
  </tr>
  <tr>
  	<ti>partizione root, contiene i principali filesystems (/usr, /home, etc)</ti>
	<ti>&gt;=1.5 Gigabytes</ti>
	<ti>XFS, ext3 raccomandate; ext2 ok</ti>
  	<ti>/dev/hda3</ti>
  </tr>
 </table>

<note>A questo punto, creiamo le partizioni usando fdisk. Nota che le partizioni
dovrebbero essere di tipo 0x82
per quella swap e 0x83 per i filesystems regolari (sia XFS, ReiserFS <e>o</e> ext2).
</note>

<p>
	Una volta create le partizione usando <c>fdisk</c>, dobbiamo inizializzare
	i filesystems che saranno usati
	per immagazzinare i nostri dati. Inizializza la partizione di swap come segue:
</p>
<pre>
# <i>mkswap /dev/hda2</i>
</pre>
<p>
	Possiamo usare il comando <c>mke2fs</c> per creare filesystems di tipo ext2:
</p>
<pre>
# <i>mke2fs /dev/hda1</i>
</pre>
<p>
	Per create filesystem XFS usiamo il comando <c>mkfs.xfs</c>:
</p>
<pre>
# <i>mkfs.xfs /dev/hda3</i>
</pre>
<note>
	Puoi voler aggiungere un paio di flags in pi&#249; al comando <c>mkfs.xfs</c>:
	<c>-d agcount=3 -l size=32m</c>.
	Il flag <c>-d agcount=3</c> abbassa il numero dei gruppi di allocazione.
	XFS insiste usando almeno 1 gruppo di
	allocazione per ogni 4 GB di partizione, cos&#236;, per esempio, se hai una partizione di 20GB
	avrai bisogno di 5 gruppi (agcount) come minimo. 
	Il flag <c>-l size=32m</c> porta a 32 MB la size del journal, 
	incrementando le performance.
</note>
<warn>
	Se stai installando una partizione XFS su una preesistente ReiserFS,
	il successivo tentativo di montarla
	con <c>mount -t xfs</c> pu&#242; fallire. La
	soluzione &#232; azzerare la 
	partizione prima di create il filesystem XFS:
	<c>dd if=/dev/zero of=/dev/hd<comment>x</comment> bs=1k</c>.
</warn>
<p>Se preferisci usare ext3, puoi creare la partizione usando <c>mke2fs -j</c>:</p>
<pre>
# <i>mke2fs -j /dev/hda3</i>
</pre>


<p>
	Per creare filesystem ReiserFS, usa il comando <c>mkreiserfs</c>:
</p>
<pre>
# <i>mkreiserfs /dev/hda3</i>
</pre>

<warn>
	Di nuovo, al momento non raccomandiamo ReiserFS.
	Mentre ReiserFS lavora bene per alcuni, sono stati
	fin troppo comuni i problemi di corruzione del filesystems
	con i kernel della serie 2.4.x.
</warn>


<note>
	Puoi trovare maggiori informazioni per l'uso di ext3 sotto Linux 2.4
	al seguente indirizzo
	<uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>.
</note>

</body>
</section>
</chapter>
<chapter>
<title>Fare il mount delle partizioni</title>
<section>
<body>
<p>
	&#200; il momento di attivare la nostra partizione
	di swap, che ci servir&#224;
	in seguito come memoria virtuale aggiuntiva:
</p>
<pre>
# <i>swapon /dev/hda2</i>
</pre>
<p>
	Poi, creeremo i mountpoints (letteralmente: punti di montaggio)
	<path>/mnt/gentoo</path> e <path>/mnt/gentoo/boot</path>, e quindi
	vi monteremo i nostri filesystems.
</p>
<pre>
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>
<p>
	Se hai deciso di creare <path>/usr</path> o <path>/var</path>
	come partizioni separate, dovrebbero essere
	rispettivamente montate in <path>/mnt/gentoo/usr</path> e <path>/mnt/gentoo/var</path>.
	(N.d.T. la partizione /var dovr&#224; essere molto
	campiente in quanto conterr&#224; la directory
	temporanea del sistema Portage per la compilazione
	dei pacchetti.)
</p>

   
<impo>
	Se la partizione di <e>boot</e> (dove risiede il
	kernel) &#232; ReiserFS,
	devi essere sicuro di montarla con
	l'opzione <c>-o notail</c> in modo tale che GRUB possa essere installato correttamente.
	Devi anche assicurarti 	che <c>notail</c> termini la riga che si riferisce
	alla partizione di boot in <path>/etc/fstab</path>.
	Ritorneremo brevemente su questo punto.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Montare il CD-ROM</title>
<section>
<body>
<p>
	Anche se abbiamo fatto il boot da CD, il CD-ROM stesso non viene montato
	nell'ambiente minimo di installazione di Gentoo Linux.
	Abbiamo bisogno di montarlo in modo da accedere alle immagini compresse contenute
	nel CD. Per montare il CD-ROM digita:
</p>
<pre>
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom -o ro -t iso9660</i>
</pre>
<p>
	Con il CD-ROM montato dovresti essere capace di vedere
	i files <c>stage???.tbz2</c> col comando <c>ls /mnt/cdrom</c>.
</p>

</body>
</section>
</chapter>

<chapter>
    <title>Scomprimere l'immagine che desideri usare</title>
<section>
<body>

<p>
	&#200; ora il momento di estrarre il tar file dello stage che hai scelto
	in <path>/mnt/gentoo</path>.
	Quindi faremo il chroot della nuova installazione di
	Gentoo Linux.
</p>

<impo>
	Ricordati di usare l'opzione <c>p</c> col comando tar.
	Altrimenti alcuni files potrebbero
	ricevere permessi errati
.</impo>

<impo>
	Se stai usando il metodo di installazione "from scratch, build everything"
	("costruisci tutto da zero"), dovrai usare l'immagine <path>stage1-ix86-1.2.tbz2</path>.
	Se stai usando uno dei CD comprendenti tutte e tre
	le immagini compresse, puoi scegliere di usare la stage2 o la stage3.
	Queste immagini ti permettono di
	risparmiare del tempo a spesa della
	configurabilit&#224;
	(queste immagini infatti contengono delle ottimizzazioni
	per il compilatore gi&#224; predefinite e usano i settaggi di default della variabile USE).
	L'immagine stage3 include inoltre i sorgenti di Linux e una immagine del Portage,
	il che ci evita la necessit&#224; di fare un <c>emerge rsync</c> dopo.
</impo>
<pre>
# <i>cd /mnt/gentoo</i>
# <i>tar -xvjpf /mnt/cdrom/stage?-*.tbz2</i>
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

<pre>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
# 
</pre>

<p>
	Dopo aver eseguito questi comandi, sei 'dentro' l'ambiente Gentoo Linux. 
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rsync</title>
<section>
<body>

<p>	Dovrai ora eseguire <c>emerge rsync</c>.  Se stai usando il tarfile 
	Gentoo Linux 1.1+ stage3 <c>emerge rsync</c> &#232; opzionale in quanto 
	il Portage &#232; gi&#224; stato incluso per comodit&#242; nella distribuzione. 
	<c>emerge rsync</c> richiamer&#242; una connessione a cvs.gentoo.org per il
	download dell'ultima versione del Portage:
</p>
	
<pre>
# <i>emerge rsync</i>
</pre>

<p>Verr&#224; scaricato il Portage Tree; la cui dimensione &#232; di circa 10Mb.</p>

<impo>
	L'indirizzo del server rsync &#232; attualmente
	rsync://rsync.gentoo.org/gentoo-portage.
	Se avete problemi ad accedervi, assicuratevi di stare
	usando questo indirizzo settandolo come variabile
	SYNC del vostro file /etc/make.conf.
</impo>
<note>
	Il comando rsync pu&#242; essere configurato per usare un Proxy HTTP nel caso vi trovaste dietro un firewall.
	Per la configurazione usate <i>RSYNC_PROXY="hostname:port"</i> in <i>/etc/make.conf</i> o come variabile utente.
</note>
</body>
</section>
</chapter>
<chapter>
<title>Dallo stage1 allo stage2</title>
<section>
<body>

<impo> 
	Chi sta usando i tar file stage2 o stage3 non ha bisogno di effettuare il
	bootstrap nuovamente a meno che non voglia per forza usare l'ultimissima
	release del Gentoo Linux: in tal caso, dovendo dare <c>emerge rsync</c>,
	&#232; richiesto anche un successivo boostrap. Attenzione al fatto che
	la procedura di boostrap pu&#242; richiedere pi&#249; di un'ora anche su
	macchine particolarmente veloci.
</impo>

<p>	Ora che stiamo lavorando su una copia del Portage, coloro che usano
	lo stage1 devono effettuare il bootstrap del Gentoo Linux procedendo
	secondo le istruzioni che seguono. Primo: editare il file 
	<path>/etc/make.conf</path>. In questo file dovremo definire ad ok 
	i vari flags <c>USE</c> che servono a specificare quali funzionalit&#232;
	supplementari si vogliono includere nella costruzione dei pacchetti.
	In genere i settaggi di default sono accettabili (ovvero un USE  <e>vuoto</e> 
	o non configurato). Si dovrebbero definire in modo appropriato anche i flags 
	<c>HOST</c>, <c>CFLAGS</c> e <c>CXXFLAGS</c> a seconda dal tipo
	di sistema che si vuol creare (potete trovare esempi documentati direttamente
	in questo file). Se necessario, potremmo anche settare le informazioni sul proxy nel caso vi trovaste dietro
	un firewall.
</p> 
	

<pre>
# <i>nano -w /etc/make.conf</i> 
</pre>
<note>
	Coloro che hanno bisogno di una 'regolazione fine' 
	del processo di costruzione potrebbero dare uno sguardo
	al file <path>/etc/make.globals</path>.
	Questo file comprende i parametri di defaults di Gentoo e non
	dovrebbe mai essere modificato. Se i parametri di defaults non 
	sono sufficienti, i nuovi valori dovrebbero
	essere messi in <path>/etc/make.conf</path>, i valori dei parametri 
	di <path>/etc/make.conf</path>
	<comment>sovrascrivono</comment> gli stessi
	in <path>/etc/make.globals</path>. Se sei interessato ad un
	aggiustamento fine dei settings di USE,
	guarda in <path>/etc/make.profile/make.defaults</path>.
	Se vuoi disabilitare alcuni settings di USE, 
	aggiungi in <path>/etc/make.conf</path> <c>USE="-flag"</c> per disabilitare flag.
	(N.d.T.:  p.e. USE="gnome" includera' gnome nella compilazione di
	programmi che potrebbero avere qualche feature in
	pi&#249;
	includendo gnome, ma che sostanzialmente non ne hanno bisogno
	per il corretto funzionamento, mentre USE="-gnome"
	non includer&#224; gnome.)
</note>

<p>
	&#200; giunto il momento di far partire il processo di 'bootstrap'.
	Il processo durer&#224; almento 1-2 ore a
	seconda della velocit&#224; della tua macchina. 
	(Su un AMD Athlon 900MHz il processo dura circa un'ora).
	Durante questo tempo, l'immagine estratta
	verr&#224; preparata per l'installazione
	del resto del sistema.
	Il compilatore GNU GCC verr&#224; compilato cos&#236;
	come le librerie GNU C. La compilazione di questi compinenti
	richiede parecchio tempo e costituisce il cuore
	del processo di bootstrap.
</p>
<pre>
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>
<p>&#200; iniziato il processo di "bootstrap".</p>
<note>
	Portage usa per default <c>/var/tmp</c> durante la
	fase di complilazione dei pacchetti, usando spesso
	centinaia di megabyte come area di memorizzazione
	temporanea. &#200; possibile cambiare la
	directory dove Portage stora temporaneamente i suoi
	files, aggiustando la variabile PORTAGE_TMPDIR
	<e>prima</e> di far partire il processo di bootstrap
	come segue:
</note>
<pre>
# <i>export PORTAGE_TMPDIR="/otherdir/tmp"</i>
</pre>

<p>
	Il comando <c>bootstrap.sh</c> compiler&#224; i
	pacchetti <c>binutils</c>, <c>gcc</c>,
	<c>gettext</c> e <c>glibc</c>, ricompilando
	<c>binutils</c>, <c>gcc</c> e <c>gettext</c> dopo la
	costruzione delle <c>glibc</c>. Inutile dirlo,
	questo processo durer&#224; un p&#242; di tempo.
	Puoi farti un buon pisolino....Buonanotte ;-))
	Una volta che il processo &#232; completato, il tuo
	sistema &#232; in "stage2".
</p>
</body>
</section>
</chapter>
<chapter>
<title>Dallo stage2 allo stage3</title>
<section>
<body>

<p>
	Non appena il processo di bootstrap &#232; concluso
	e sei nello stage2, &#232; il momento di installare
	o compilare il resto del sistema di base come
	segue: (se stai usando il tar file stage3 i
	seguenti steps non sono richiesti)
</p>
<pre>
# <i>export CONFIG_PROTECT=""</i>
# <i>emerge --pretend system</i>
	<comment>[lista i pacchetti che verranno installati]</comment>
# <i>emerge system</i>
</pre>

<note>
	La riga <c>export CONFIG_PROTECT=""</c> assicura che
	ogni nuovo script installato in <path>/etc</path>
	sovrascriver&#224; i precedenti scripts (memorizzati
	in <path>sys-apps/baselayout</path>), bypassando il
	nuovo sistema di amministrazione dei files di
	configurazione del Portage. Digita <c>emerge --help
	config</c> per maggiori dettagli.
</note>


<p>
	&#200; giunto il momento di aspettare che la
	compilazione dell'intero sistema di base termini. La
	tua ricompensa sar&#224; un sistema completamente
	ottimizzato. Lo svantaggio &#232; che dovrai trovare
	qualcosa da fare nel frattempo. L'autore suggerisce
	"Star Wars - Super Bombad Racing" per PS2.
	Completato <c>emerge system</c> il sistema sar&#224;
	in stage3.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Ultimi passi: timezone</title>
<section>
<body>

<p>
	A questo punto dovresti avere un sistema in stage3
	pronto per la configurazione finale. Partiremo col
	settare la timezone. Aggiustare la timezone prima di
	compilare il kernel ci assicura che gli utenti
	ottengano un output ragionevole da <c>uname -a</c>.
	
</p>
<p>
	Cercate la vostra Timezone ( o GMT se state usando
	il Greenwich Mean Time) in <path>/usr/share/zoneinfo</path>.
	Poi, create un link simbolico come segue:
</p>

<pre>
# <i>ln -sf /usr/share/zoneinfo/path/to/timezonefile /etc/localtime</i>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Ultimi passi: kernel e system logger</title>
<section>
<body>

<p>
	Se stai installando Gentoo Linux 1.1+ usando il
	tar-file stage3, abbiamo fatto qualcosa di
	conveniente per te includendo i sorgenti di Linux in
	<path>/usr/src/linux</path>. Altrimenti dovrai
	scaricarli. I seguenti sono quelli correntemente
	disponibili:
</p>
<table>
<tr><th>ebuild</th><th>descrizione</th></tr>
<tr><ti><path>gentoo-sources</path></ti>
<ti>Il nostro avanzato e performante kernel (non include il supporto per XFS)</ti></tr>
<tr><ti><path>xfs-sources</path></ti>
<ti>Il kernel di SGI con supporto XFS</ti></tr>
<tr><ti><path>openmosix-sources</path></ti>
<ti>Un classico kernel patchato per il supporto di <uri link="http://www.openmosix.com">openMosix</uri>
una tecnologia load-balancing/clustering</ti></tr>
<tr><ti><path>usermode-sources</path></ti>
<ti>Un classico kernel patchato per il supporto dello User-Mode Linux.
(tecnologia "Linux inside Linux")</ti></tr>
<tr><ti><path>vanilla-sources</path></ti>
<ti>Il classico kernel, come lo scaricheresti da kernel.org</ti></tr>
</table>

<p>
	Scegline uno e uniscilo (merge) al sistema:
</p>

<pre>
# <i>emerge sys-kernel/gentoo-sources</i>
</pre>

<p>
	una volta che il kernel &#232; disponibile, &#232;
	il momento di personalizzarlo e  compilarlo:
</p>

<pre>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
# <i>make dep &amp;&amp; make clean bzImage modules modules_install</i>
# <i>mv /boot/bzImage /boot/bzImage.orig</i> <comment>[se esiste gi&#224; bzImage]</comment>
# <i>cp /usr/src/linux/arch/i386/boot/bzImage /boot</i>
</pre>
<warn>
	Affinch&#233; il tuo kernel funzioni a dovere, ci
	sono alcune opzioni che dovrai essere sicuro siano
	incluse nel kernel e non compilate come modulo.
	Sar&#224; necessario abilitare l'opzione <i>"Code
	maturity level oprions --> Prompt for development
	and/or incomplete code/drives"</i>.
	Nella sezione "File systems", devi essere sicuro di
	abilitare <i>"Device File System"</i> (nota che non
	hai bisogno di abilitare l'opzione "/dev/pts
	filesystem support"). Dovrai anche abilitare
	l'opzione <i>"Virtual Memory Filesystem"</i>.
	Assicurati di abilitare "ReiserFS" se hai partizioni
	di questo tipo; la stessa cosa vale per "Ext3".
	Se stai usando partizioni XFS, abilita l'opzione "SGI XFS
	filesystem support". &#200; sempre una buona idea
	lasciare il supporto per ext2 abilitato sia che lo
	usi o no. Se usi hard drive IDE vorrai abilitare
	l'opzione "USE DMA by default", altrimenti puoi
	avere prestazioni veramente scadenti.
	Naturalmente, ricordati di abilitare il supporto per
	"IDE disk" altrimenti il tuo kernel non
	riuscir&#224; a vedere i tuoi dischi IDE.
</warn>
<note>
	Per coloro che lo preferiscono, &#232; possibile installare
	una Gentoo Linux con kernel 2.2. Per questo c'&#232;
	da pagare un prezzo: perderai le ottime features che
	sono prerogativa della serie 2.4 del kernel (come
	il support per filesystems di tipo XFS e tmpfs,
	iptables, e altro), anche se Gentoo Linux con kernel
	2.2 &#232; stato aggiornato col support ReiserFS e
	devfs. Gli scripts di  boot di Gentoo Linux richiedono
	che tmpfs o ramdisk siano supportati dal kernel,
	cos&#236; coloro che vogliono usare il kernel 2.2
	devono essere sicuri di avere il support per ramdisk
	incluso nel kernel e non compilato come modulo.
	&#200; <comment>vitale</comment> che  un flag
	<e>gentoo=notmpfs</e> sia aggiunto in
	<path>/boot/grub/menu.lst</path> nella linea del
	kernel per la serie 2.2 in modo tale che gli scripts
	di boot montino ramdisk invece di tmpfs. Se scegli
	di non usare  devfs, devi aggiungere una riga del
	tipo <e>gentoo=notmpfs,nodevfs</e>.
</note>

<p>
	Il tuo nuovo kernel e i suoi moduli sono ora
	installati. C'&#232; ora bisogno di scegliere il
	sistema di logging che dovrebbe essere installato.
	&#200; disponibile il tradizionale sistema di
	logging sysklogd. Ma ci sono anche syslog-ng e
	metalog. Utenti che preferivano
	sysklogd (che non brilla per le prestazioni) si
	stanno rivolgendo verso syslog-ng e metalog. Se sei
	in dubbio, puoi provare metalog che sembra essere
	abbastanza popolare. Per installare il logger
	scelto, digita <e>uno</e> dei seguenti tre comandi:
</p>

<pre>
# <i>emerge sys-apps/sysklogd</i>
# <i>rc-update add sysklogd default</i>
<comment>or</comment>
# <i>emerge app-admin/syslog-ng</i>
# <i>rc-update add syslog-ng default</i>
<comment>or</comment>
# <i>emerge app-admin/metalog</i>
# <i>rc-update add metalog default</i>
</pre>
<warn>
	Nel caso di syslog-ng avrai bisogno di creare
	<path>/etc/syslog-ng/suslog-ng.conf</path>.
	Puoi trovarne un esempio in
	<path>/etc/syslog-ng</path>.
</warn>
<impo>
	Metalog scrive il suo output su disco a blocchi,
	cos&#236; i messaggi non sono immediatamente
	registrati nei logs di sistema. Se stai provando a
	testare un daemon, questa caratteristica (che ne
	migliora le prestazioni) potrebbe non essere la
	soluzione migliore.  Una volta che il sistema e' a
	regime puoi provare a mandare al daemon di metalog
	un segnale di tipo USR1 che temporaneamente dovrebbe
	disabilitare il suddetto comportamento (il buffering
	dei messaggi prima discriverli in blocco). Questo
	significa che <i>tail -f
	<path>/var/log/logfile</path></i> dovrebbe
	funzionare come ci aspettiamo. Per tornare alla
	situazione standard invieremo un nuovo segnale,
	questa volta di	tipo USR2.
</impo>

<p>
	Se vuoi, puoi ora scegliere il pacchetto cron che
	preferisci. Per ora offriamo, dcron, fcron e vcron.
	Se non sai quale scegliere tra questi, puoi usare
	vcron che pu&#242;. I pacchetti possono essere
	installati come segue:
</p>
<pre>
# <i>emerge sys-apps/dcron</i>
# <i>crontab /etc/crontab</i>
<comment>or</comment>
# <i>emerge sys-apps/fcron</i>
# <i>crontab /etc/crontab</i>
<comment>or</comment>
# <i>emerge sys-apps/vcron</i>
</pre>

<p>
	Per avere maggiori informazioni su come cron
	lavorano sotto Gentoo Linux puoi dare una occhiata
	al seguente annuncio
	<uri
	link="http://lists.gentoo.org/pipermail/gentoo-announce/2002-April/000151.html"></uri>.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Ultimi passi: installazione di packages aggiuntivi</title>
<section>
<body>
<p>
	Puoi aver bisogno di installare pacchetti
	addizionali nel Portage tree, se stai usando ad
	esempio XFS o LVM. Per XFS, dovresti installare
	l'ebuild <c>xfsprogs</c>:
</p>

<pre>
# <i>emerge sys-apps/xfsprogs</i>
</pre>

<p>
	Se invece stai usando LVM, dovresti installare l'ebuild
	<c>lvm-user</c>:
</p>
<pre>
# <i>emerge --usepkg sys-apps/lvm-user</i>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Ultimi passi: /etc/fstab</title>
<section>
<body>
<p>
	Il tuo sistema Gentoo Linux &#232; ormai pronto
	all'uso. Tutto ci&#242; di cui abbiamo bisogno
	&#232; di configurare alcuni importanti files di
	sistema e installare il GRUB boot loader.
	Il primo file che abbiamo bisogno di configurare
	&#232; <path>/etc/fstab</path>. Ricordati che se hai
	scelto una partizione di boot di tipo ReiserFS devi
	aggiungere una opzione <c>notail</c>.
	Ricordati inoltre di specificare il tipo di
	filesystem appropriato per ogni partizione
	(<c>ext2</c>, <c>ext3</c> o <c>reiserfs</c>).
</p>

<p>
	Usa qualcosa tipo l' <path>/etc/fstab</path>
	mostrato sotto, ma naturalmente sostituisci "BOOT",
	"ROOT" e "SWAP" con i block devices che hai scelto
	di usare (<c>hda1</c>, <c>hda2</c>, ecc.).
</p>
<pre>
<comment>
# /etc/fstab: static file system information.
#
# noatime turns of atimes for increased performance (atimes normally aren't
# needed; notail increases performance of ReiserFS (at the expense of storage
# efficiency).  It's safe to drop the noatime options if you want and to 
# switch between notail and tail freely.

# &lt;fs&gt;          	&lt;mountpoint&gt;    &lt;type&gt;  	&lt;opts&gt;      		&lt;dump/pass&gt;

# NOTE: If your BOOT partition is ReiserFS, add the notail option to opts.
</comment>
/dev/BOOT		/boot		ext2		noauto,noatime		1 2
/dev/ROOT		/		ext3		noatime			0 1
/dev/SWAP		none            swap		sw			0 0
/dev/cdroms/cdrom0	/mnt/cdrom	iso9660		noauto,ro		0 0
proc			/proc           proc		defaults		0 0
</pre>

</body>
</section>
<section>
<title>Ultimi passi: diamo una password a root</title>
<body>

<p>
	Prima di dimenticarcene, diamo una password a root
	digitando:
</p>
<pre>
# <i>passwd</i>
</pre>
</body>
</section>
<section>
<title>Ultimi passi: /etc/hostname</title>
<body>
<p>
	Crea questo file in modo da contenere il
	fully-qualified domain name della tua macchina su
	una singola riga, p.e.
	<c>nomemacchina.nomedominio.it</c>.
</p>
</body>
</section>

<section>
<title>Ultimi passi: /etc/hosts</title>
<body>

<p>
	Questo file contiene una lista di indirizzi IP
	associati al relativo hostname. &#200; usato dal
	sistema per risolvere indirizzi IP di macchine che
	possono non essere nel tuo DNS server.
	Segue un templato di questo file:
</p>
<pre>
127.0.0.1      localhost
<comment># the next line contains your IP for your local LAN, and your associated machine name</comment>
192.168.1.1    mymachine.mydomain.com	mymachine
</pre>
</body>
</section>

<section>
<title>Configurazione finale della rete</title>
<body>
<p>
	Aggiungi il nome di ogni modulo necessario per il
	corretto funzionamento del tuo sistema in
	<path>/etc/modules.autoload</path> (puoi anche
	aggiungere le opzioni necessarie sulla stessa riga).
	Alla partenza di Gentoo Linux, questi moduli
	verranno automaticamente caricati. Particolarmente
	importanti sono i moduli relativi alla scheda di
	rete (naturalmente se li hai compilati come moduli
	;-)):
</p>
<pre caption="/etc/modules.autoload">
3c59x
</pre>
<p>
	Edita lo script <path>/etc/conf.d/net</path> per
	avere la rete configurata per il tuo primo boot:
</p>
<pre>
# <i>nano -w /etc/conf.d/net</i>
# <i>rc-update add net.eth0 default</i>
</pre>
<p>
	Se hai pi&#249; schede di rete hai bisogno di
	aggiungere altri scripts
	<path>net.eth<comment>x</comment></path> per ognuna
	(<comment>x</comment> = 1, 2, ...):
</p>
<pre caption="Multiple network interfaces">
# <i>cd /etc/init.d</i>
# <i>cp net.eth0 net.eth<comment>x</comment></i>
# <i>rc-update add net.eth<comment>x</comment> default</i>
</pre>
<p>
	Se hai una scheda PCMCIA installata, dai una rapida
	occhiata a /etc/init.d/pcmcia per verificare se
	&#232; conforme alle tue esigenze e aggiungi
	<pre>
	depend() {
		need pcmcia
	}
	</pre>
	all'inizio del tuo
	<path>/etc/init.d/net.eth<comment>x</comment></path>,
	in modo da caricare automaticamente i driver pcmcia
	ogni volta che viene avviata la rete.
</p>
	
</body>
</section>

<section>
<title>Utlimi passi: configurazioni di base (includendo il
setting per la mappatura internazionale della tastiera)</title>
<body>
<pre caption="basic configuration">
# <i>nano -w /etc/rc.conf</i>
</pre>
<p>
	Dando una scorsa al file troverai diverse variabili
	che inizializzano alcune configurazioni di base. 
	Vorrai essere sicuro che <c>CLOCK</c> sia quello
	voluto. Per usare tastiere con layout diverso da
	quello americano puoi settare la variabile
	<c>KEYMAP</c> (puoi trovare le varie
	possibilit&#224; in
	<path>/usr/share/keymaps</path>).
</p>
</body>
</section>

<section>
<title>Ultimi passi: configurazione di GRUB</title>
<body>


<p>
	La parte pi&#249; critica per capire la
	configurazione di GRUB &#232; familiarizzare con la
	notazione che GRUB usa per definire i dischi e le
	partizioni. La partizione Linux
	<path>/dev/hda1</path>  &#232; chiamata
	<path>(hd0,0)</path> sotto GRUB.
	Nota che le parentesi che racchiudono hd0,0 sono
	richieste. I dischi vengono contati a partire da
	zero invece che da "a" e le partizioni partono da
	zero invece che da uno. Cos&#236;
	<path>/dev/hdb3</path> diventa <path>(hd1,2)</path>,
	e <path>/dev/hdd7</path> diventa
	<path>(hd3,6)</path>. Appena hai preso confidenza
	con questa notazione, puoi convertire le partizioni
	di boot e root in un formato comprensibile a GRUB e
	scriverle nel suo file di configurazione.
	Proviamo quindi ad installare GRUB.
</p>
<p>
	La via pi&#249; breve per installare GRUB &#232;
	semplicemente digitare <c>grub</c> al prompt:
</p>
<pre>
# <i>grub</i>
</pre>

<p>
	Ti verr&#224; presentato il  "grub command-line
	prompt": <c>grub&gt;</c>. Ora dovrai digitare i
	giusti comandi per installare il GRUB boot record
	nel tuo disco. Nel mio esempio, io voglio installare
	il GRUB boot record nell'MBR (master boot record)
	del mio disco rigido, in modo tale da vedere il GRUB
	prompt ad ogni riavvio del mio computer. Nel mio
	caso i comandi che devo digitare sono:
</p>
<pre>grub&gt; <i>root (hd0,0)</i>
grub&gt; <i>setup (hd0)</i>
grub&gt; <i>quit</i>
</pre>

<p>
	Come lavorano i comandi. Il primo comando <c>root (
	)</c> dice a GRUB la locazione della partizione di
	boot (nel nostro esempio <path>/dev/hda1</path> o
	<path>(hd0,0)</path> nella terminologia GRUB. Il
	secondo comando <c>setup ( )</c> dice a GRUB dove
	installare il boot record e sar&#224; configurato
	per cercare i suoi files di configurazione nella
	locazione <c>root ( )</c> che hai specificato.
	Nel mio caso, voglio che il boot record sia
	installato nell'MBR del disco rigido, cos&#236;
	specifico semplicemente <path>/dev/hda</path> (anche
	conosciuto come <path>(hd0)</path>). Se sto usando
	un altro boot loader e voglio installare GRUB come
	boot loader secondario, avrei dovuto installare il
	GRUB nel boot record di una particolare partizione.
	In questo caso avrei dovuto specificare una
	particolare partizione invece dell'intero disco. Una
	volta che il GRUB &#232; stato installato con
	successo, puoi uscire dal GRUB digitando
	<c>quit</c>. Gentoo Linux &#232; ora installato, ma
	dobbiamo creare il file
	<path>/boot/grub/menu.lst</path> in modo tale che al
	riavvio del computer appaia il menu del GRUB.
	Vediamo come farlo.
</p>

<p>
	Creiamo il file menu.lst (<c>nano -w /boot/grub/menu.lst</c>),
	e aggiungiamo le seguenti righe:
</p>

<pre>
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux
root (hd0,0) 
kernel /boot/bzImage root=/dev/hda3 

<comment>
	# Seguono le istruzioni per coloro che necessitano
	di un dual-boot
</comment>
title=Windows NT Workstation
root (hd0,5) 
chainloader +1
</pre>
<note>
	L'estensione del file <path>menu.lst</path> deve
	essere "lst" come in "list", la prima lettera &#232;
	una "elle" e non un "uno" (1).
	Inoltre, (hd0,0) deve essere scritto senza spazi tra
	le parentesi.
</note>
<p>
	Dopo aver salvato il file, l'installazione di Gentoo
	Linux &#232; completa. Selezionando la prima opzione
	diciamo al GRUB di fare il boot con Gentoo Linux. La
	seconda parte del file menu.lst &#232; opzionale,
	mostra solo come usare GRUB per fare il boot anche
	con partizioni Windows.
</p>
<note>
	<path>(hd0,0)</path> dovrebbe puntare alla tua
	partizione "boot" (<path>/dev/hda1</path> nel nostro
	esempio) e <path>/dev/hda3</path> dovrebbe puntare
	al filesystem root. La partizione
	<path>(hda0,5)</path> contiene il boot loader di NT.
</note>

<p>
	Ancora, se hai bisogno di passare delle opzioni al
	kernel, aggiungile semplicemente  alla fine del
	comando <c>kernel</c>. Stiamo gi&#224; passandogli
	un'opzione (<c>root=/dev/hda3</c>), ma possiamo
	passargliene delle altre.  In particolare puoi
	disabilitare il support per il devfs (non &#232;
	raccomandato a meno che tu non sappia cosa stai
	facendo) aggiungendo l'opzione <c>gentoo=nodevfs</c>
	al comando <c>kernel</c>.
	<note>
		A differenza delle prime versioni di Gentoo
		Linux, non &#232; pi&#249; necessario
		aggiungere <c>devfs=mount</c> alla fine
		della riga <c>kernel</c> per abilitare il
		devfs. Nelle nuove versioni &#232; abilitato
		per default.
	</note>
</p>
</body>
</section>
</chapter>
<chapter>
<title>L'installazione &#232; completata!</title>
<section>
<body>
<p>
	Gentoo Linux &#232; installato. Rimane solo da
	uscire dalla shell, smontare le partizioni e
	riavviare il sistema:
</p>

<pre>
# <i>exit</i> 
<codenote>questo per uscire dalla shell;puoi anche digitare <c>^D</c></codenote>
# <i>cd / </i>
# <i>umount /mnt/gentoo/boot</i>
# <i>umount /mnt/gentoo/proc</i>
# <i>umount /mnt/gentoo</i>
# <i>reboot</i>
</pre>
<note>
	Dopo il riavvio, &#232; una buona idea eseguire il
	comando <c>update-modules</c> per creare il file
	<path>/etc/modules.conf</path>. Invece di modificare
	questo file direttamente, dovresti generalmente
	applicare le modifiche al file
	<path>/etc/modules.d</path>.
</note>

<p>
	Se hai qualche domanda o ti piacerebbe essere
	coinvolto con gli sviluppatori di Gentoo Linux,
	considera di unirti alle nostre mailing lists
	gentoo-user e gentoo-dev (c'&#232; un link "click to
	subscribe" nel  <uri
	link="http://www.gentoo.org">sito ufficiale</uri>).
	Abbiamo anche una comoda guida 
	<uri link="/doc/desktop-it.html">Desktop configuration
	guide</uri> che ti aiuter&#224; a continuare a
	configurare il tuo nuovo sistema Gentoo Linux per la
	parte grafica, sonora, di posta elettronica, ecc. e
	una utile guida <uri link="/doc/portage-user-it.html">Portage user guide</uri>
	che ti aiuter&#224; a familiarizzare con il sistema
	Portage.
	Benvenuto in Gentoo Linux!
</p>

	
</body>
</section>
</chapter>
</guide>
