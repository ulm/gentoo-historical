<?xml version='1.0' encoding="UTF-8"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/bluetooth-guide.xml,v 1.4 2006/10/04 20:27:59 so Exp $ -->

<guide link="/doc/it/bluetooth-guide.xml" lang="it">
<title>Guida Gentoo Linux al Bluetooth</title>
	
<author title="Autore">
	<mail link="deathwing00@gentoo.org">Ioannis Aslanidis</mail>
</author>
<author title="Contributore">
	<mail link="puggy@gentoo.org">Douglas Russell</mail>
</author>
<author title="Contributore">
	<mail link="marcel@holtmann.org">Marcel Holtmann</mail>
</author>
<author title="Autore">
	<mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Redattore">
	<mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>
<author title="Traduttore">
	<mail link="mescaleros@aliceposta.it">Alessandro D'Angelo</mail>
</author>
<author title="Traduttore">
	<mail link="cristiano.chiucchiolo@gmail.com">Cristiano Chiucchiolo</mail>
</author>
	
<abstract>
In questa guida verrà spiegato come installare un dispositivo Bluetooth, come
configurare correttamente il kernel di sistema e indicherà tutte le
possibilità che una interconnessione di	questo tipo offre rendendo più
piacevole e comodo lo scambio dei dati.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.4</version>
<date>2006-09-19</date>

<chapter id="introduction">
<title>Introduzione</title>
<section>
<title>Cos'è il Bluetooth?</title>
<body>

<p>
Il Bluetooth  è uno standard industriale che permette agli utenti la
connessione e lo scambio di file tra dispositivi diversi come personal
computer, palmari o cellulari. Usando la tecnologia Bluetooth, si possono
effettuare  trasmissioni dati e voce senza l'utilizzo di cavi con un	costo
ridotto. Il Bluetooth inoltre offre la possibilità di creare piccole LAN
wireless e la sincronizzazione dei dati tra dispositivi diversi.
</p>

</body>
</section>
<section>
<title>Contenuto della guida</title>
<body>

<p>
La prima parte di questa guida tratterà il riconoscimento dei dispositivi che
supportano la tecnologia Bluetooth, permettendo agli utenti di acquistare
apparecchiature che sanno già di poter utilizzare perfettamente. Il passo
successivo sarà la configurazione del kernel e l'identificazione dei
dispositivi Bluetooth installati nel sistema. Infine l'installazione degli
strumenti necessari per la loro gestione e il corretto funzionamento.
</p>

<p>
La seconda parte tratterà la rilevazione dei dispositivi remoti, come
stabilire una connessione da e verso il dispositivo impostando o una Radio
Frequency Communication (RFCOMM) o una Personal Area Network (PAN).
</p>

<p>
L'ultima parte della guida elencherà in dettaglio le applicazioni che
traggono vantaggio dalle possibilità che offre la tecnologia Bluetooth.
</p>

</body>
</section>
</chapter>

<chapter id="devices">
<title>Dispositivi supportati</title>
<section>
<title>Dispositivi certificati e non-certificati Bluetooth</title>
<body>

<impo>
Questi prodotti dovrebbero funzionare anche se alcuni di loro non sono
certificati. Gentoo comunque, non garantisce nessun supporto.
</impo>

<p>
Una lista dei dispositivi supportati può essere consultata presso questa
pagina: <uri link="http://www.holtmann.org/linux/bluetooth/features.html">
Bluetooth device features and revision information by Marcel Holtmann</uri>.
</p>

</body>
</section>
</chapter>

<chapter id="kernel">
<title>Configurazione del sistema</title>
<section>
<title>Configurazione del Kernel</title>
<body>

<p>
Visto che l'ultimo ramo stabile del kernel linux è il 2.6, la configurazione
verrà effettuata utilizzando questa versione. La maggior parte dei
dispositivi Bluetooth è connessa tramite porta USB, quindi sarà necessario
attivare anche questo supporto. Se si preferisce un kernel modulare piuttosto
che monolitico, bisognerà anche prevedere l'hotplugging. Per l'USB la guida
di riferimento è <uri link="/doc/it/usb-guide.xml"> USB e Gentoo
Linux</uri>.
</p>

<pre caption="Configurazione del kernel 2.6">
Networking  ---&gt;

&lt;*&gt; Bluetooth subsystem support  ---&gt;

--- Bluetooth subsystem support
&lt;M&gt;   L2CAP protocol support
&lt;M&gt;   SCO links support
&lt;M&gt;   RFCOMM protocol support
[*]     RFCOMM TTY support
&lt;M&gt;   BNEP protocol support
[*]     Multicast filter support
[*]     Protocol filter support
&lt;M&gt;   HIDP protocol support

Bluetooth device drivers  ---&gt;
&lt;M&gt; HCI USB driver
[*]   SCO (voice) support
&lt;M&gt; HCI UART driver
[*]   UART (H4) protocol support
[*]   BCSP protocol support
[*]   Transmit CRC with every BCSP packet
&lt;M&gt; HCI BCM203x USB driver
&lt;M&gt; HCI BPA10x USB driver
&lt;M&gt; HCI BlueFRITZ! USB driver
<comment>(I quattro driver sottostanti sono per dispositivi Bluetooth PCMCIA
e verranno visualizzati solo se selezioni anche il supporto PCMCIA nel
kernel.)</comment>
&lt;M&gt; HCI DTL1 (PC Card) driver
&lt;M&gt; HCI BT3C (PC Card) driver
&lt;M&gt; HCI BlueCard (PC Card) driver
&lt;M&gt; HCI UART (PC Card) device driver
<comment>(Il driver sottostante abilita HCI Emulation software)</comment>
&lt;M&gt; HCI VHCI (Virtual HCI device) driver

<comment>(Torna indietro di tre livelli fino a Device Drivers e controlla se
il supporto all'USB è abilitato. Questo è necessario se utilizzi un'antenna
Bluetooth. Quelle in commercio di solito utilizzano la porta USB)</comment>
USB support  ---&gt;

&lt;*&gt; Support for Host-side USB
--- USB Host Controller Drivers
&lt;M&gt; EHCI HCD (USB 2.0) support
[ ]   Full speed ISO transactions (EXPERIMENTAL)
[ ]   Root Hub Transaction Translators (EXPERIMENTAL)
&lt;*&gt; OHCI HCD support
&lt;*&gt; UHCI HCD (most Intel and VIA) support
&lt; &gt; SL811HS HCD support
</pre>

<p>
Ora riavviamo il sistema con il nostro nuovo kernel. Se non si verificano
errori, abbiamo un Pc pronto per il Bluetooth.
</p>

<impo>
Il vostro dispositivo USB potrebbe avere due modalità, e quella di default
potrebbe essere non HDI, ma HID. In questo caso, usate l'utility
<c>hid2hci</c> per cambiare la modalità da HDI a HCI. Questa modifica non è
permanente e dovrà essere ripetuta al successivo reboot.
</impo>

<pre caption="Verificare la presenza del dispositivo Bluetooth">
<comment>(Come controllare la presenza del dispositivo)</comment>
# <i>cat /proc/bus/usb/devices | grep -e^[TPD] | grep -e Cls=e0 -B1 -A1</i>
<comment>(La stringa Cls=e0(unk. ) identifica l'adattatore Bluetooth.)</comment>
T:  Bus=02 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0a12 ProdID=0001 Rev= 5.25
<comment>(Probabile schermata di lsusb da sys-apps/usbutils)</comment>
# <i>lsusb</i>
Bus 003 Device 002: ID 046d:c00e Logitech, Inc. Optical Mouse
Bus 003 Device 001: ID 0000:0000
Bus 002 Device 002: ID 0db0:1967 Micro Star International Bluetooth Dongle
</pre>

</body>
</section>
</chapter>

<chapter id="bluez">
<title>BlueZ - Lo Stack Bluetooth</title>
<section>
<title>Installare BlueZ</title>
<body>

<p>
Ora che il dispositivo è stato riconosciuto dal kernel, abbiamo bisogno di un
layer che permetta alle applicazioni di comunicare con l'adattatore
Bluetooth. BlueZ fornisce lo stack Bluetooth ufficiale di Linux. Gli ebuilds
di cui abbiamo bisogno sono <c>bluez-libs</c> e <c>bluez-utils</c>. I
dispositivi che necessitano il firmware Broadcom hanno bisogno anche di
<c>bluez-firmware</c>.
</p>

<pre caption="Installazione di bluez-libs e bluez-utils">
# <i>emerge net-wireless/bluez-libs net-wireless/bluez-utils</i>
</pre>

<warn>
Attenzione, l'emerge di <c>bluez-sdp</c>
bloccherà l'installazione di <c>bluez-utils</c>!
</warn>

<p>
Se abbiamo compilato il sottosistema Bluetooth come modulo, abbiamo bisogno
anche di hotplug e coldplug. Il loro funzionamento è spiegato nella <uri
link="http://www.gentoo.org/doc/it/usb-guide.xml#doc_chap4_sect2">USB e
Gentoo Linux</uri>.
</p>

<pre caption="Emerge hotplug e coldplug">
# <i>emerge hotplug coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

</body>
</section>
<section>
<title>Configurazione di BlueZ e allineamento PIN</title>
<body>

<p>
È arrivato il momento di vedere se il dispositivo è stato rilevato
correttamente dal sistema. Prima però facciamo partire il servizio
Bluetooth.
</p>

<pre caption="Eseguire hciconfig">
<comment>(Avvio di Bluetooth)</comment>
# <i>/etc/init.d/bluetooth start</i>
* Starting Bluetooth ...
*     Starting hcid ...                                                  [ ok ]
*     Starting sdpd ...                                                 [ ok ]
*     Starting rfcomm ...                                            [ ok ]

# <i>hciconfig</i>
hci0:   Type: USB
BD Address: 00:01:02:03:04:05 ACL MTU: 192:8  SCO MTU: 64:8
DOWN
RX bytes:131 acl:0 sco:0 events:18 errors:0
TX bytes:565 acl:0 sco:0 commands:17 errors:0
</pre>

<p>
L'output precedente mostra che il dispositivo Bluetooth è stato riconosciuto.
Potete notare come ora sia <e>DOWN</e>. Una volta completata la
configurazione sarà possibile renderlo attivo. Il percorso del file di
configurazione è <path>/etc/bluetooth/hcid.conf</path>. Le modifiche
necessarie al file di configurazione sono indicate qui sotto. Per ulteriori
dettagli, puoi consultare <c>man hcid.conf</c>.
</p>

<pre caption="Editare /etc/bluetooth/hcid.conf">
<comment>(Modifiche raccomandate da effettuare)</comment>

# HCId options
options {
	# Automatically initialize new devices
	autoinit yes;

<comment>(Cambia security in "auto")</comment>
# Security Manager mode
# none - Security manager disabled
# auto - Use local PIN for incoming connections
# user - Always ask user for a PIN
#
security auto;

# Pairing mode
pairing multi;

<comment>(Cambia pin_helper e inserisci /etc/bluetooth/pin-helper)</comment>
# PIN helper
pin_helper /etc/bluetooth/pin-helper;
}

# Default settings for HCI devices
device {
<comment>(Imposta il nome del dispositivo, puoi chiamarlo a tuo piacimento)</comment>
# Local device name
#   %d - device id
#   %h - host name
name "BlueZ at %h (%d)";

# Local device class
class 0x3e0100;

# Inquiry and Page scan
iscan enable; pscan enable;

# Default link mode
lm accept;

# Default link policy
lp rswitch,hold,sniff,park;

<comment>(Non modificare niente, se non sai di cosa si tratta)</comment>
# Authentication and Encryption (Security Mode 3)
# auth enable;
# encrypt enable;
}
</pre>

<p>
Il passo successivo è quello di configurare il numero PIN. Servirà per
l'allineamento di questo dispositivo con gli altri.
</p>

<note>
Puoi scegliere fra differenti pin helpers. Quelli disponibili sono:
<c>/usr/lib/kdebluetooth/kbluepin</c>(net-wireless/kdebluetooth),
<c>/usr/bin/bluepin</c> o <c>/etc/bluetooth/pin-helper</c>.
</note>

<pre caption="Editare /etc/bluetooth/pin">
<comment>(Cambia 123456  con il numero pin che preferisci.)</comment>
123456
</pre>

<impo>
Il numero inserito deve essere lo stesso nei dispositivi che vuoi connettere
alla rete Bluetooth, in modo da garantire il corretto allineamento. Deve
anche essere tenuto segreto, altrimenti sarà possibile, per chiunque ne sia a
conoscenza, stabilire una connessione al tuo PC.
</impo>

</body>
</section>
<section>
<title>Configurazione dei servizi</title>
<body>

<p>
Ora che abbiamo concluso la configurazione di BlueZ, possiamo far ripartire i
servizi necessari.
</p>

<pre caption="Avviare il demone Bluetooth">
# <i>/etc/init.d/bluetooth restart</i>
<comment>(Possiamo anche inserirlo nel runlevel di default)</comment>
# <i>rc-update add bluetooth default</i>
* bluetooth added to runlevel default
* rc-update complete.
</pre>

<p>
Assicurati che il demone Bluetooth venga avviato correttamente. Se
<c>hcid</c> e <c>sdpd</c> sono in esecuzione, allora abbiamo configurato
tutto nella maniera corretta. Dopo questo, possiamo verificare se il
dispositivo è ora attivo con le nuove impostazioni.
</p>

<pre caption="Verificare se il demone Bluetooth è partito correttamente">
<comment>(Controlla se i servizi sono in esecuzione)</comment>
# <i>ps -ae | grep hcid</i>
26050 ?        00:00:00 hcid
# <i>ps -ae | grep sdpd</i>
26054 ?        00:00:00 sdpd

# <i>hciconfig -a</i>
hci0:   Type: USB
BD Address: 00:0A:0B:0C:0D:0E ACL MTU: 192:8 SCO MTU: 64:8
UP RUNNING PSCAN ISCAN
RX bytes:125 acl:0 sco:0 events:17 errors:0
TX bytes:565 acl:0 sco:0 commands:17 errors:0
Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
Link policy: RSWITCH HOLD SNIFF PARK
Link mode: SLAVE ACCEPT
Name: 'BlueZ at bluehat (0)'
Class: 0x3e0100
Service Classes: Networking, Rendering, Capturing, Object Transfer,
Audio
Device Class: Computer, Uncategorized
HCI Ver: 1.1 (0x1) HCI Rev: 0x1e7 LMP Ver: 1.1 (0x1) LMP Subver: 0x1e7
Manufacturer: Cambridge Silicon Radio (10)
</pre>

</body>
</section>
</chapter>

<chapter id="detect">
<title>Rilevare e Connettere i dispositivi remoti</title>
<section>
<title>Rilevare i dispositivi Bluetooth di altri host</title>
<body>

<p>
Arrivati a questo punto siamo in grado di rilevare i dispositivi Bluetooth
installati su altre macchine e sarà possibile farlo indipendentemente dal
sistema operativo che le ospita. Useremo il comando <c>hcitool</c>.
</p>

<pre caption="Controllo dei dispositivi locali">
# <i>hcitool dev</i>
Devices:
hci0    00:01:02:03:04:05
</pre>

<pre caption="Scansione dei dispositivi remoti">
# <i>hcitool scan</i>
Scanning ...
00:0A:0B:0C:0D:0E       Grayhat
</pre>

<pre caption="Interrogazione dei dispositivi remoti">
# <i>hcitool inq</i>
Inquiring ...
00:0A:0B:0C:0D:0E       clock offset: 0x5579    class: 0x72010c
</pre>

<p>
Ora che conosciamo l'indirizzo MAC del dispositivo remoto, possiamo
controllare se è correttamente allineato.
</p>

<pre caption="Eseguire l2ping">
# <i>l2ping 00:0A:0B:0C:0D:0E</i>
Ping: 00:0A:0B:0C:0D:0E from 00:01:02:03:04:05 (data size 20) ...
20 bytes from 00:0A:0B:0C:0D:0E id 200 time 69.85ms
20 bytes from 00:0A:0B:0C:0D:0E id 201 time 9.97ms
20 bytes from 00:0A:0B:0C:0D:0E id 202 time 56.86ms
20 bytes from 00:0A:0B:0C:0D:0E id 203 time 39.92ms
4 sent, 4 received, 0% loss
</pre>

</body>
</section>
<section>
<title>Impostare una Radio Frequency Communication (RFCOMM)</title>
<body>

<note>
L'impostazione della radio frequency communication è opzionale.
</note>

<p>
Possiamo stabilire una radio frequency connection con un altro dispositivo
Bluetooth usando il comando <c>rfcomm</c>. Per rendere le cose più semplici,
specialmente per gli utenti con dispositivi multipli Bluetooth, è
consigliabile editare il file di configurazione rfcomm in
<path>/etc/bluetooth/rfcomm.conf</path>.
</p>

<p>
L'intero segmento che inizia con  <c>rfcomm0 {</c> e finisce con <c>}</c>
riguarda la configurazione del dispositivo che sarà poi indicato nella
cartella dei device come <path>/dev/rfcomm0</path>. In questo caso, faremo
solo un esempio, rfcomm0. Potete aggiungere altri dispositivi seguendo le
istruzioni.
</p>

<pre caption="Editare /etc/bluetooth/rfcomm.conf">
<comment>(Sono visualizzati solo i cambiamenti necessari)</comment>
rfcomm0 {
# Automatically bind the device at startup
<comment>(Creare il device node /dev/rfcomm0 al boot)</comment>
bind yes;

# Bluetooth address of the device
<comment>(Inserire l'indirizzo del dispositivo a cui ti vuoi connettere)</comment>
device 00:0A:0B:0C:0D:0E;

}
</pre>

<p>
Dopo la configurazione di RFCOMM, possiamo connetterci a qualsiasi
dispositivo. Se abbiamo fatto le necessarie modifiche nel file
<path>/etc/bluetooth/rfcomm.conf</path>, allora possiamo digitare il comando
visualizzato qui sotto. In caso contrario, viene mostrato nella zona
sottostante anche un metodo alternativo.
</p>

<pre caption="Stabilire una connessione RFCOMM">
<comment>(Lo 0 si riferisce a rfcomm0 nel file di configurazione)</comment>
# <i>rfcomm connect 0 </i>
Connected /dev/rfcomm0 to 00:0A:0B:0C:0D:0E on channel 1
Press CTRL-C for hangup

<comment>(Se non hai modificato /etc/bluetooth/rfcomm.conf)</comment>
# <i>rfcomm connect 0 00:0A:0B:0C:0D:0E 1</i>
Connected /dev/rfcomm0 to 00:0F:DE:69:50:24 on channel 1
Press CTRL-C for hangup
</pre>

<p>
Il primo parametro dopo il comando connect è il nodo TTY del dispositivo
RFCOMM che verrà usato (di solito è 0). Il secondo parametro indica
l'indirizzo MAC del dispositivo remoto. Il terzo invece è opzionale e
specifica il canale da utilizzare. E' necessario che il nostro apparecchio
rimanga sempre in ascolto delle connessioni in entrata, altrimenti non sarà
possibile la connessione. Possiamo interrompere la comunicazione in ogni
momento, semplicemente premendo CTRL+C.
</p>

<pre caption="Attesa per le connessioni RFCOMM in entrata">
# <i>rfcomm listen 0 1</i>
Waiting for connection on channel 1
</pre>

<p>
Come per il comando connect, listen può ricevere due parametri. Il primo
specifica il nodo del device TTY RFCOMM (di solito 0) che verrà utilizzato
per le connessioni, mentre il secondo indica il canale.
</p>

<p>
Tutte le volte che esegui il comando <c>rfcomm</c>, puoi anche specificare il
dispositivo fisico che vuoi usare. Qui sotto è indicato un piccolo esempio,
utilizzando due semplici comandi.
</p>

<pre caption="Selezione del dispositivo fisico per le connessioni RFCOMM">
# <i>rfcomm -i hci0 listen 0 1</i>
Waiting for connection on channel 1
<comment>(Mettere in ascolto un determinato dispositivo) </comment>
# <i>rfcomm -i hci0 connect 0 00:0A:0B:0C:0D:0E 1</i>
<comment>(Usare uno specifico dispositivo per il collegamento)</comment>
</pre>

</body>
</section>
<section>
<title>Configurare una Personal Area Network (PAN)</title>
<body>

<note>
Nota che impostare una Personal Area Network è opzionale. Questa sezione
descrive come  configurare e connettere un Network Access Point. In maniera
molto simile potete impostare anche una Group Ad-Hoc Network.
</note>

<p>
Per prima cosa, abbiamo bisogno del modulo <c>bnep</c> caricato.
Probabilmente vogliamo che questo avvenga automaticamente tutte le volte che
avviamo il computer.
</p>

<pre caption="Caricare il modulo bnep">
# <i>modprobe bnep</i>
# <i>echo "bnep" &gt;&gt; /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<p>
Avviamo il demone <c>pand</c> sull'host che fornirà il NAP. Bisognerà
specificare che vogliamo fornire un servizio NAP e che il nostro host sarà il
master, mentre tutti gli altri che si connetteranno saranno slaves. Un altro
servizio possibile è GN (Group ad-hoc Network).
</p>

<pre caption="Avviare il demone pand">
# <i>pand --listen --role NAP --master --autozap</i>
</pre>

<p>
Dopo avere fatto questo, abbiamo il nostro host in ascolto, non rimane che
connettere gli altri.
</p>

<pre caption="Connettersi al Network Access Point">
# <i>pand --connect 00:0A:0B:0C:0D:0E --service NAP --autozap</i>
</pre>

<p>
Se tutto va per il meglio, possiamo ora configurare l'indirizzo IP per i
nostri hosts.
</p>

<pre caption="bnep configurazione indirizzo IP">
host0 #<i> ifconfig bnep0 192.168.2.1</i>
host1 #<i> ifconfig bnep0 192.168.2.2</i>

host0 #<i> ifconfig bnep0</i>
bnep0     Link encap:Ethernet  HWaddr 00:0A:0B:0C:0D:0E
inet addr:192.168.2.1  Bcast:192.168.2.255  Mask:255.255.255.0
inet6 addr: fe80::210:60ff:fea3:cb41/64 Scope:Link
UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
RX packets:0 errors:0 dropped:0 overruns:0 frame:0
TX packets:5 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:1000
RX bytes:208 (208.0 b)  TX bytes:188 (188.0 b)

host1 #<i> ifconfig bnep0</i>
bnep0     Link encap:Ethernet  HWaddr 00:01:02:03:04:05
inet addr:192.168.2.2  Bcast:192.168.2.255  Mask:255.255.255.0
inet6 addr: fe80::210:60ff:fea2:dd2a/64 Scope:Link
UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
RX packets:0 errors:0 dropped:0 overruns:0 frame:0
TX packets:5 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:1000
RX bytes:208 (208.0 b)  TX bytes:188 (188.0 b)
</pre>

<p>
Infine, possiamo fare alcuni test per verificare che la rete funzioni
correttamente.
</p>

<pre caption="IP ping tra le interfacce bnep">
host1 #<i> ping 192.168.2.1</i>
PING 192.168.2.1 (192.168.2.1) 56(84) bytes of data.
64 bytes from 192.168.2.1: icmp_seq=1 ttl=64 time=34.0 ms
64 bytes from 192.168.2.1: icmp_seq=2 ttl=64 time=37.3 ms

--- 192.168.2.1 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1000ms
rtt min/avg/max/mdev = 34.045/35.690/37.336/1.656 ms
</pre>

</body>
</section>
</chapter>

<chapter id="apps">
<title>Applicazioni Desktop per Bluetooth</title>
<section>
<title>Introduzione</title>
<body>

<p>
Ci sono diversi programmi per il desktop, quindi questo capitolo è stato
suddiviso in tre parti, applicazioni per GNOME, per KDE e l'ultimo per quelle
che non utilizzano un windows manager particolare.
</p>

</body>
</section>
<section>
<title>Per Gnome</title>
<body>

<p>
Se sei un utente gnome, molto probabilmente la scelta giusta sarà
<c>gnome-bluetooth</c>. Fornisce le funzioni base maggiormente utilizzate,
come puoi vedere qui sotto.
</p>

<ul>
<li>
<c>gnome-bluetooth-manager</c>: Per gestire i dispositivi remoti Bluetooth.
</li>
<li><c>gnome-obex-send</c>: Per mandare file verso altri dispositivi.</li>
<li><c>gnome-obex-server</c>: Per ricevere file.</li>
</ul>

<pre caption="Installare gnome-bluetooth">
# <i>emerge gnome-bluetooth</i>
</pre>

<p>
Verrà aggiunta una voce nel menù Applicazioni &gt; Strumenti di Sistema dove
potrai facilmente scegliere se eseguire l'applicazione per la gestione dei
dispositivi o per lo scambio dei file.
</p>

<p>
Per trasferire files (modo più semplice):
</p>

<ul>
<li>
Dal Telefono al Computer - Manda il file dal Telefono via Bluetooth e questo
verrà prelevato e salvato dal PC nella tua cartella <path>/home</path>.
</li>
<!--FIXME : Doesn't work on Nautilus 2.10.x. Bug #103464 for details -->
<!--
   <li>
    From the Computer to the Phone - Fire up <c>nautilus</c> and select the
    file you want to send and right click on it. Select the Send via Bluetooth
    option and ask your phone to accept the file.
   </li>
    -->
    </ul>

<p>
<c>gnome-phone-manager</c> è un'elegante applicazione che puoi utilizzare per
mandare e ricevere messaggi da e verso il tuo telefono, usando solamente il
tuo pc. Non devi più utilizzare il tuo cellulare per leggere o scrivere
messaggi, visto che puoi fare tutto tramite questo programma. Selezionando
l'opzione nel menù delle preferenze, sarai automaticamente avvertito con un
messaggio sullo schermo dell'arrivo di nuovi messaggi. L'installazione è,
come sempre, molto semplice.
</p>

<pre caption="Installare gnome-phone-manager">
# <i>emerge gnome-phone-manager</i>
</pre>

</body>
</section>
<section>
<title>Per KDE</title>
<body>

<p>
Come puoi verificare qui sotto, con KDE e <c>kdebluetooth</c> sono presenti
molte più funzionalità rispetto all'applicazione per il desktop Gnome.
</p>

<ul>
   <li><c>kbluetoothd</c>: Bluetooth Meta Server.</li>
   <li><c>kbtsearch</c>: Utility per la ricerca dei dispositivi Bluetooth.</li>
   <li><c>khciconfig</c>: KDE Bluetooth Monitor.</li>
   <li><c>kioclient</c>: KIO command line client.</li>
   <li><c>qobexclient</c>: Swiss army knife for obex testing/development.</li>
   <li><c>kbtobexclient</c>: A KDE Bluetooth Framework Application.</li>
   <li><c>kioobex_start</c></li>
   <li><c>kbtserialchat</c></li>
   <li><c>kbemusedsrv</c>: KDE Bemused Server.</li>
   <li><c>kbtobexsrv</c>: KDE OBEX Push Server for Bluetooth.</li>
   <li><c>kbluepin</c>: A KDE KPart Application.</li>
   <li>
		 <c>auth-helper</c>: Un programma di supporto per kbtobexsrv che invia
		 una richiesta di autenticazione verso un determinato ACL link.
   </li>
</ul>

<pre caption="Installare kdebluetooth">
   # <i>emerge kdebluetooth</i>
</pre>

</body>
</section>
<section>
<title>Altre applicazioni interessanti</title>
<body>

<ul>
  <li>
	<c>app-mobilephone/obexftp</c>: Trasferimento file su OBEX per telefoni
	cellulari.
  </li>
  <li>
	<c>app-mobilephone/bemused</c>: Bemused è un sistema che permette di
	controllare la tua collezione musicale dal tuo telefono, utilizzando il
	Bluetooth.
  </li>
  <li>
	<c>app-pda/multisync</c>: Multisync ti permette di sincronizzare i
	contatti, il tuoi appuntamenti sul calendario e le note dal tuo telefono
	cellulare al tuo computer, utilizzando una connessione Bluetooth. Include
	anche funzioni per il backup di queste informazioni e il successivo
	ripristino, oltre che la sincronizzazione con il client email Evolution.
	Avrai bisogno della use flag <c>irmc</c> impostata per essere sicuro che il
	<c>multisync</c> abbia il supporto Bluetooth.
  </li>
  <li>
	<c>media-plugins/xmms-btexmms</c>: Btexmms è un XMMS plugin che permette di
	utilizzare il telefono cellulare Bluetooth Sony Ericsson come un
	telecomando a distanza per XMMS.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Ringraziamenti</title>
<section>
<body>

<p>
Ringraziamenti speciali a <mail link="marcel@holtmann.org">Marcel
Holtmann</mail> per il suo tempo dedicato allo sviluppo di Bluetooth e per la
revisione di questa guida. Un grande ringraziamento anche a  <mail
link="puggy@gentoo.org">Douglas Russell</mail> per i suoi test hardware e per
averla migliorata.
</p>

</body>
</section>
</chapter>
</guide>
