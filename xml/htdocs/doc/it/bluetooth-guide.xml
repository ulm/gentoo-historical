<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/bluetooth-guide.xml,v 1.9 2009/09/29 19:22:19 scen Exp $ -->

<guide link="/doc/it/bluetooth-guide.xml" lang="it">
<title>Guida Gentoo Linux al Bluetooth</title>

<author title="Autore">
  <mail link="deathwing00@gentoo.org">Ioannis Aslanidis</mail>
</author>
<author title="Contributi">
  <mail link="puggy@gentoo.org">Douglas Russell</mail>
</author>
<author title="Contributi">
  <mail link="marcel@holtmann.org">Marcel Holtmann</mail>
</author>
<author title="Autore">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Redazione">
  <mail link="rane@gentoo.org">Lukasz Damentko</mail>
</author>
<author title="Redazione">
  <mail link="nightmorph"/>
</author>
<author title="Traduzione">
  <mail link="mescaleros@aliceposta.it">Alessandro D'Angelo</mail>
</author>
<author title="Traduzione">
  <mail link="cristiano.chiucchiolo@gmail.com">Cristiano Chiucchiolo</mail>
</author>
<author title="Traduzione">
  <mail link="deadhead@wooow.it">Andrea Perotti</mail>
</author>

<abstract>
In questa guida verrà spiegato come installare un dispositivo Bluetooth, come
configurare correttamente il kernel ed illustrerà tutte le possibilità che una
connessione Bluetooth offre.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.11</version>
<date>2009-07-16</date>

<chapter id="introduction">
<title>Introduzione</title>
<section>
<title>Cos'è il Bluetooth?</title>
<body>

<p>
Il Bluetooth è uno standard industriale che permette agli utenti la connessione
e lo scambio di file tra diversi dispositivi come personal computer, palmari o
cellulari. Usando la tecnologia Bluetooth, si possono effettuare trasmissioni
dati e voce senza l'utilizzo di cavi ad un costo ridotto. Il Bluetooth offre
inoltre la possibilità di creare piccole LAN wireless e di sincronizzare
dispositivi diversi.
</p>

</body>
</section>
<section>
<title>Contenuto della guida</title>
<body>

<p>
La prima parte di questa guida tratterà la configurazione del kernel e
l'identificazione dei dispositivi Bluetooth installati nel sistema. Infine
l'installazione degli strumenti necessari per la loro gestione e il corretto
funzionamento.
</p>

<p>
La seconda parte tratterà la rilevazione dei dispositivi remoti, come stabilire
una connessione da e verso il dispositivo impostando o una Radio Frequency
Communication (RFCOMM)<!-- o una Personal Area Network (PAN)-->.
</p>

<p>
L'ultima parte della guida elencherà in dettaglio le applicazioni che traggono
vantaggio dalle possibilità che offre la tecnologia Bluetooth.
</p>

</body>
</section>
</chapter>

<chapter id="kernel">
<title>Configurazione del sistema</title>
<section>
<title>Configurazione del Kernel</title>
<body>

<p>
Dato che l'ultimo ramo stabile del kernel linux è il 2.6, la configurazione
verrà effettuata utilizzando questa versione. La maggior parte dei dispositivi
Bluetooth è connessa tramite porta USB, quindi sarà necessario attivare anche
questo supporto. Fate riferimento alla guida <uri
link="/doc/it/usb-guide.xml">USB e Gentoo Linux</uri>.
</p>

<pre caption="Configurazione del kernel 2.6">
Networking  ---&gt;

&lt;*&gt; Bluetooth subsystem support  ---&gt;

--- Bluetooth subsystem support
&lt;M&gt;   L2CAP protocol support
&lt;M&gt;   SCO links support
&lt;M&gt;   RFCOMM protocol support
[*]     RFCOMM TTY support
&lt;M&gt;   BNEP protocol support
[*]     Multicast filter support
[*]     Protocol filter support
&lt;M&gt;   HIDP protocol support

Bluetooth device drivers  ---&gt;
&lt;M&gt; HCI USB driver
[*]   SCO (voice) support
&lt;M&gt; HCI UART driver
[*]   UART (H4) protocol support
[*]   BCSP protocol support
[*]   Transmit CRC with every BCSP packet
&lt;M&gt; HCI BCM203x USB driver
&lt;M&gt; HCI BPA10x USB driver
&lt;M&gt; HCI BlueFRITZ! USB driver
<comment>(I quattro driver sottostanti sono per dispositivi Bluetooth PCMCIA
e verranno visualizzati solo se si seleziona anche il supporto PCMCIA nel kernel.)</comment>
&lt;M&gt; HCI DTL1 (PC Card) driver
&lt;M&gt; HCI BT3C (PC Card) driver
&lt;M&gt; HCI BlueCard (PC Card) driver
&lt;M&gt; HCI UART (PC Card) device driver
<comment>(Il driver sottostante abilita HCI Emulation software)</comment>
&lt;M&gt; HCI VHCI (Virtual HCI device) driver

<comment>(Tornare indietro di tre livelli fino a Device Drivers e controllare se
il supporto all'USB è abilitato. Questo è necessario se si utilizza un'antenna
Bluetooth. Quelle in commercio di solito utilizzano la porta USB)</comment>
USB support  ---&gt;

&lt;*&gt; Support for Host-side USB
--- USB Host Controller Drivers
&lt;M&gt; EHCI HCD (USB 2.0) support
[ ]   Full speed ISO transactions (EXPERIMENTAL)
[ ]   Root Hub Transaction Translators (EXPERIMENTAL)
&lt;*&gt; OHCI HCD support
&lt;*&gt; UHCI HCD (most Intel and VIA) support
&lt; &gt; SL811HS HCD support
</pre>

<p>
Riavviare il sistema con il nuovo kernel. Se non si verificano errori, il Pc
sarà pronto per il Bluetooth.
</p>

<impo>
Il proprio dispositivo USB potrebbe avere due modalità, e quella predefinita
potrebbe essere HID anzichè HCI. In questo caso, usate l'utilità <c>hid2hci</c>
per cambiare la modalità da HID a HCI. Questa modifica non è permanente e dovrà
essere ripetuta al successivo riavvio.
</impo>

<pre caption="Verificare la presenza del dispositivo Bluetooth">
<comment>(Come controllare la presenza del dispositivo)</comment>
# <i>cat /proc/bus/usb/devices | grep -e^[TPD] | grep -e Cls=e0 -B1 -A1</i>
<comment>(La stringa Cls=e0(unk. ) identifica l'adattatore Bluetooth.)</comment>
T:  Bus=02 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0a12 ProdID=0001 Rev= 5.25
<comment>(Probabile schermata di lsusb da sys-apps/usbutils)</comment>
# <i>lsusb</i>
Bus 003 Device 002: ID 046d:c00e Logitech, Inc. Optical Mouse
Bus 003 Device 001: ID 0000:0000
Bus 002 Device 002: ID 0db0:1967 Micro Star International Bluetooth Dongle
</pre>

</body>
</section>
</chapter>

<chapter id="bluez">
<title>BlueZ - Lo Stack Bluetooth</title>
<section>
<title>Installare BlueZ</title>
<body>

<p>
Ora che il dispositivo è stato riconosciuto dal kernel, c'è bisogno di un layer
che permetta alle applicazioni di comunicare con l'adattatore Bluetooth. BlueZ
fornisce lo stack Bluetooth ufficiale di Linux. Gli ebuild necessari sono
<c>bluez-libs</c> e <c>bluez-utils</c>. I dispositivi che necessitano il
firmware Broadcom hanno bisogno anche di <c>bluez-firmware</c>.
</p>

<pre caption="Installazione di bluez-libs e bluez-utils">
# <i>emerge net-wireless/bluez-libs net-wireless/bluez-utils</i>
</pre>

</body>
</section>
<section>
<title>Configurazione di BlueZ e allineamento PIN</title>
<body>

<p>
È arrivato il momento di vedere se il dispositivo è stato rilevato correttamente
dal sistema. Prima però avviare il servizio Bluetooth.
</p>

<pre caption="Eseguire hciconfig">
<comment>(Avvio di Bluetooth)</comment>
# <i>/etc/init.d/bluetooth start</i>
* Starting Bluetooth ...
*     Starting hcid ...                                              [ ok ]
*     Starting sdpd ...                                              [ ok ]
*     Starting rfcomm ...                                            [ ok ]

# <i>hciconfig</i>
hci0:   Type: USB
        BD Address: 00:01:02:03:04:05 ACL MTU: 192:8  SCO MTU: 64:8
        DOWN
        RX bytes:131 acl:0 sco:0 events:18 errors:0
        TX bytes:565 acl:0 sco:0 commands:17 errors:0
</pre>

<p>
L'output precedente mostra che il dispositivo Bluetooth è stato riconosciuto.
Notare come ora sia <e>DOWN</e>. Una volta completata la configurazione sarà
possibile renderlo attivo. Il percorso del file di configurazione è
<path>/etc/bluetooth/hcid.conf</path>. Le modifiche necessarie al file di
configurazione sono indicate qui sotto. Per ulteriori dettagli, consultare
<c>man hcid.conf</c>.
</p>

<pre caption="Modificare /etc/bluetooth/hcid.conf">
<comment>(Sono indicate le modifiche raccomandate)</comment>

# HCId options
options {
        # Automatically initialize new devices
        autoinit yes;

<comment>(Cambiare security in "auto")</comment>
        # Security Manager mode
        #   none - Security manager disabled
        #   auto - Use local PIN for incoming connections
        #   user - Always ask user for a PIN
        #
        security auto;

        # Pairing mode
        pairing multi;

<comment>(Se si stanno usando: &lt;=bluez-libs-2.x e &lt;=bluez-utils-2.x
         c'è bisogno solamente di un gestore di pin)
        (Per usare /etc/bluetooth/pin-helper cambiare la variabile pin_helper)</comment>
        # PIN helper
        pin_helper /etc/bluetooth/pin-helper;
}

# Default settings for HCI devices
device {
<comment>(Impostare il nome del dispositivo, utilizzare quello che si ritiene più opportuno)</comment>
        # Local device name
        #   %d - device id
        #   %h - host name
        name "BlueZ at %h (%d)";

        # Local device class
        class 0x3e0100;

        # Inquiry and Page scan
        iscan enable; pscan enable;

        # Default link mode
        lm accept;

        # Default link policy
        lp rswitch,hold,sniff,park;

<comment>(Non modificare niente, se non si sa di cosa si tratta)</comment>
        # Authentication and Encryption (Security Mode 3)
        #auth enable;
        #encrypt enable;
}
</pre>

<p>
Il passo successivo è quello di configurare il numero PIN. Servirà per
l'allineamento di questo dispositivo con gli altri.
</p>

<pre caption="Modificare /etc/bluetooth/pin">
<comment>(Sostituire 123456 con il numero pin che si preferisce.)</comment>
123456
</pre>

<impo>
Il numero inserito deve essere lo stesso nei dispositivi che si vuore connettere
alla rete Bluetooth, in modo da garantire il corretto allineamento. Deve anche
essere tenuto segreto, altrimenti sarà possibile, per chiunque ne sia a
conoscenza, stabilire una connessione ai dispositivi della rete.
</impo>

<note>
A partire dalla versione <c>&gt;=bluez-libs-3.x</c> e
<c>&gt;=bluez-utils-3.x</c>, i gestori di pin sono stati sostituiti da agenti di
passkey. Sono disponibili alcuni agenti di passkey con interfaccia grafica che
aiutano a gestire il proprio PIN, per esempio i pacchetti <c>bluez-gnome</c> e
<c>kdebluetooth</c>. Da riga di comando si può anche usare <c>passkey-agent</c>
(appartenente al pacchetto <c>bluez-utils</c>).
</note>

</body>
</section>
<section>
<title>Configurazione dei servizi</title>
<body>

<p>
Una volta conclusa la configurazione di BlueZ, si posson far ripartire i servizi
necessari.
</p>

<pre caption="Avviare il demone Bluetooth">
# <i>/etc/init.d/bluetooth restart</i>
<comment>(si può anche inserire nel runlevel di default)</comment>
# <i>rc-update add bluetooth default</i>
* bluetooth added to runlevel default
* rc-update complete.
</pre>

<p>
Assicurarsi che il demone Bluetooth venga avviato correttamente. Se <c>hcid</c>
e <c>sdpd</c> sono in esecuzione, allora è stato configurato tutto in modo
corretto. Ora non resta che verificare se il dispositivo sia attivo con le nuove
impostazioni.
</p>

<pre caption="Verificare se il demone Bluetooth è partito correttamente">
<comment>(Controllare se i servizi sono in esecuzione)</comment>
# <i>ps -ae | grep hcid</i>
26050 ?        00:00:00 hcid
# <i>ps -ae | grep sdpd</i>
26054 ?        00:00:00 sdpd

# <i>hciconfig -a</i>
hci0:   Type: USB
        BD Address: 00:0A:0B:0C:0D:0E ACL MTU: 192:8 SCO MTU: 64:8
        UP RUNNING PSCAN ISCAN
        RX bytes:125 acl:0 sco:0 events:17 errors:0
        TX bytes:565 acl:0 sco:0 commands:17 errors:0
        Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
        Link policy: RSWITCH HOLD SNIFF PARK
        Link mode: SLAVE ACCEPT
        Name: 'BlueZ at bluehat (0)'
        Class: 0x3e0100
        Service Classes: Networking, Rendering, Capturing, Object Transfer,
        Audio
        Device Class: Computer, Uncategorized
        HCI Ver: 1.1 (0x1) HCI Rev: 0x1e7 LMP Ver: 1.1 (0x1) LMP Subver: 0x1e7
        Manufacturer: Cambridge Silicon Radio (10)
</pre>


</body>
</section>
</chapter>

<chapter id="detect">
<title>Rilevare e Connettere i dispositivi remoti</title>
<section>
<title>Rilevare i dispositivi Bluetooth di altri host</title>
<body>

<p>
A questo punto sarà possibile rilevare i dispositivi Bluetooth installati su
altre macchine, indipendentemente dal sistema operativo che le ospita, tramite
il comando <c>hcitool</c>.
</p>

<pre caption="Controllo dei dispositivi locali">
# <i>hcitool dev</i>
Devices:
        hci0    00:01:02:03:04:05
</pre>

<pre caption="Scansione dei dispositivi remoti">
# <i>hcitool scan</i>
Scanning ...
        00:0A:0B:0C:0D:0E       Grayhat
</pre>

<pre caption="Interrogazione dei dispositivi remoti">
# <i>hcitool inq</i>
Inquiring ...
        00:0A:0B:0C:0D:0E       clock offset: 0x5579    class: 0x72010c
</pre>

<p>
Una volta conosciuto l'indirizzo MAC del dispositivo remoto, è possibile
controllare se è correttamente allineato.
</p>

<pre caption="Eseguire l2ping">
# <i>l2ping 00:0A:0B:0C:0D:0E</i>
Ping: 00:0A:0B:0C:0D:0E from 00:01:02:03:04:05 (data size 20) ...
20 bytes from 00:0A:0B:0C:0D:0E id 200 time 69.85ms
20 bytes from 00:0A:0B:0C:0D:0E id 201 time 9.97ms
20 bytes from 00:0A:0B:0C:0D:0E id 202 time 56.86ms
20 bytes from 00:0A:0B:0C:0D:0E id 203 time 39.92ms
4 sent, 4 received, 0% loss
</pre>

</body>
</section>
<section>
<title>Impostare una Radio Frequency Communication (RFCOMM)</title>
<body>

<note>
L'impostazione della Radio Frequency Communication (Comunicazione in
Radiofrequenza) è opzionale.
</note>

<p>
E' possibile stabilire una comunicazione in radiofrequenza con un altro
dispositivo Bluetooth usando il comando <c>rfcomm</c>. Per semplificare le cose,
specialmente per gli utenti con più dispositivi, è consigliabile modificare le
impostazioni predefinite del file di configurazione rfcomm in
<path>/etc/bluetooth/rfcomm.conf</path>.
</p>

<p>
L'intero segmento che inizia con <c>rfcomm0 {</c> e finisce con <c>}</c>
riguarda la configurazione del dispositivo che, una volta connesso al sistema,
sarà identificato come <path>/dev/rfcomm0</path>. Viene mostrato come esempio la
configurazione per rfcomm0. Aggiungere poi tutti i dispositivi che si desidera
collegare.
</p>

<pre caption="Modificare /etc/bluetooth/rfcomm.conf">
<comment>(Sono visualizzati solo i cambiamenti necessari)</comment>
rfcomm0 {
        # Automatically bind the device at startup
        <comment>(Creare il file di periferica /dev/rfcomm0 al'avvio)</comment>
        bind yes;

        # Bluetooth address of the device
        <comment>(Inserire l'indirizzo del dispositivo a cui ci si vuole connettere)</comment>
        device 00:0A:0B:0C:0D:0E;

}
</pre>

<p>
Dopo la configurazione di RFCOMM, è possibile connettersi a qualsiasi
dispositivo. Se il file <path>/etc/bluetooth/rfcomm.conf</path> è stato
modificato come sopra indicato, sarà sufficiente digitare solamente il comando
visualizzato qui sotto. In caso contrario, viene illustrato anche un metodo di
connessione alternativo.
</p>

<pre caption="Stabilire una connessione RFCOMM">
<comment>(Lo 0 si riferisce a rfcomm0 nel file di configurazione)</comment>
# <i>rfcomm connect 0 </i>
Connected /dev/rfcomm0 to 00:0A:0B:0C:0D:0E on channel 1
Press CTRL-C for hangup

<comment>(Se non è stato modificato il file /etc/bluetooth/rfcomm.conf)</comment>
# <i>rfcomm connect 0 00:0A:0B:0C:0D:0E 1</i>
Connected /dev/rfcomm0 to 00:0F:DE:69:50:24 on channel 1
Press CTRL-C for hangup
</pre>

<p>
Il primo parametro dopo il comando connect è il nodo TTY del dispositivo RFCOMM
che verrà usato (di solito è 0). Il secondo parametro indica l'indirizzo MAC del
dispositivo remoto. Il terzo invece è opzionale e specifica il canale da
utilizzare. Per connettersi ad un dispositivo è necessario che questo sia in
attesa di connessioni in ingresso. Possiamo interrompere la comunicazione in
ogni momento, semplicemente premendo CTRL+C.
</p>

<pre caption="Attesa per le connessioni RFCOMM in entrata">
# <i>rfcomm listen 0 1</i>
Waiting for connection on channel 1
</pre>

<p>
Come per il comando connect, listen può ricevere due parametri. Il primo
specifica il nodo del device TTY RFCOMM (di solito 0) che verrà utilizzato per
le connessioni, mentre il secondo indica il canale.
</p>

<p>
Tutte le volte che si esegue il comando <c>rfcomm</c>, si può anche specificare
il dispositivo fisico da usare. Qui sotto è riportato un piccolo esempio,
utilizzando due semplici comandi.
</p>

<pre caption="Selezione del dispositivo fisico per le connessioni RFCOMM">
# <i>rfcomm -i hci0 listen 0 1</i>
Waiting for connection on channel 1
<comment>(Mettere in ascolto un determinato dispositivo) </comment>
# <i>rfcomm -i hci0 connect 0 00:0A:0B:0C:0D:0E 1</i>
<comment>(Usare uno specifico dispositivo per il collegamento)</comment>
</pre>

</body>
</section>
<!-- Deleting pan chapter, bug 266690, until we know how the hell to do this -->
</chapter>

<chapter id="apps">
<title>Applicazioni Desktop per Bluetooth</title>
<section>
<title>Introduzione</title>
<body>

<p>
Ci sono numerosi programmi per il desktop, per cui questo capitolo è stato
suddiviso in tre parti, applicazioni per GNOME, per KDE e l'ultimo per quelle
che non utilizzano un windows manager particolare.
</p>

</body>
</section>
<section>
<title>Per Gnome</title>
<body>

<p>
Per gli utenti gnome, una scelta azzeccata può essere il pacchetto
<c>gnome-bluetooth</c>, ch fornisce le funzioni base principalmente usate, come
puoi vedere qui sotto.
</p>

<ul>
  <li>
    <c>gnome-bluetooth-manager</c>: Per gestire i dispositivi remoti Bluetooth.
  </li>
  <li><c>gnome-obex-send</c>: Per mandare file verso altri dispositivi.</li>
  <li><c>gnome-obex-server</c>: Per ricevere file.</li>
</ul>

<pre caption="Installare gnome-bluetooth">
# <i>emerge gnome-bluetooth</i>
</pre>

<p>
Verrà aggiunta una voce nel menù Applicazioni &gt; Strumenti di Sistema dove si
potrà scegliere se eseguire l'applicazione per la gestione dei dispositivi o per
lo scambio dei file.
</p>

<p>
Per trasferire file (modo più semplice):
</p>

<ul>
  <li>
    Dal Telefono al Computer - Manda il file dal Telefono via Bluetooth e questo
    verrà prelevato e salvato dal PC nella propria cartella <path>/home</path>.
  </li>
<!--FIXME : Doesn't work on Nautilus 2.10.x. Bug #103464 for details -->
<!--
   <li>
    From the Computer to the Phone - Fire up <c>nautilus</c> and select the
    file you want to send and right click on it. Select the Send via Bluetooth
    option and ask your phone to accept the file.
   </li>
    -->
</ul>

<p>
<c>gnome-phone-manager</c> è un'elegante applicazione che può esser utilizzata
per mandare e ricevere messaggi da e verso il telefono, usando solamente il
proprio pc. Non sarà più necessario l'uso del cellulare per leggere o scrivere
messaggi, dato che si potrà fare tutto tramite questo programma. Comparirà
inoltre a schermo un avviso ogni volta che verrà ricevuto un nuovo messaggio.
L'installazione è, come sempre, molto semplice.
</p>

<pre caption="Installare gnome-phone-manager">
# <i>emerge gnome-phone-manager</i>
</pre>

</body>
</section>
<section>
<title>Per KDE</title>
<body>

<p>
Come si può verificare qui sotto, con KDE e <c>kdebluetooth</c> sono presenti
molte più funzionalità rispetto all'applicazione per il desktop Gnome.
</p>

<ul>
  <li><c>kbluetoothd</c>: Bluetooth Meta Server.</li>
  <li><c>kbtsearch</c>: Utilità per la ricerca dei dispositivi Bluetooth.</li>
  <li><c>khciconfig</c>: Monitor Bluetooth.</li>
  <li><c>kioclient</c>: KIO client da linea di comando.</li>
  <li>
    <c>qobexclient</c>: Coltellino svizzero per testing/sviluppo su OBEX.
  </li>
  <li><c>kbtobexclient</c>: Un Framework Applicativo per Bluetooth.</li>
  <li><c>kioobex_start</c></li>
  <li><c>kbtserialchat</c></li>
  <li><c>kbemusedsrv</c>: Server Bemused per KDE.</li>
  <li><c>kbtobexsrv</c>: OBEX Push Server per Bluetooth.</li>
  <li><c>kbluepin</c>: Applicazione KDE KPart.</li>
  <li>
    <c>auth-helper</c>: Un programma di supporto per kbtobexsrv che invia una
    richiesta di autenticazione verso un determinato link ACL.
  </li>
</ul>

<pre caption="Installare kdebluetooth">
   # <i>emerge kdebluetooth</i>
</pre>

</body>
</section>
<section>
<title>Altre applicazioni interessanti</title>
<body>

<ul>
  <li>
    <c>app-mobilephone/obexftp</c>: Trasferimento file su OBEX per telefoni
    cellulari.
  </li>
  <li>
    <c>app-mobilephone/bemused</c>: Bemused è un sistema che permette di
    controllare la propria collezione musicale dal telefono, utilizzando
    Bluetooth.
  </li>
  <li>
    <c>app-pda/multisync</c>: Multisync permette di sincronizzare contatti,
    appuntamenti e note dal proprio telefono cellulare al computer, utilizzando
    una connessione Bluetooth. Include funzionalità di backup e ripristino,
    oltre che di sincronizzazione con il client email Evolution. È necessario
    impostare la use flag <c>irmc</c> per essere sicuri che <c>multisync</c>
    abbia il supporto al Bluetooth.
  </li>
  <li>
    <c>net-wireless/opd</c> e <c>net-wireless/ussp-push</c> sono strumenti da
    linea di comando (server e client) che possono essere usati per inviare file
    al proprio telefono mobile.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Ringraziamenti</title>
<section>
<body>

<p>
Ringraziamenti speciali a <mail link="marcel@holtmann.org">Marcel
Holtmann</mail> per il suo tempo dedicato allo sviluppo di Bluetooth e per la
revisione di questa guida. Un grande ringraziamento anche a  <mail
link="puggy@gentoo.org">Douglas Russell</mail> per i suoi test hardware e per
averla migliorata.
</p>

</body>
</section>
</chapter>
</guide>