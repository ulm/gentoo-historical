<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/mailfilter-guide.xml,v 1.4 2012/02/26 08:36:40 swift Exp $ -->

<guide lang="it">
<title>Guida al filtraggio della posta elettronica con Gentoo</title>

<author title="Autore">
  <mail link="jaervosz@gentoo.org">Sune Kloppenborg Jeppesen</mail>
</author>
<author title="Contributi">
  <mail link="gentoo@hilli.dk">Jens Hilligsøe</mail>
</author>
<author title="Redazione">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Traduzione">
  <mail link="dark.knight.ita@gmail.com">Marco Leogrande</mail>
</author>

<abstract>
Questa guida descrive passo passo le istruzioni necessarie per installare le
tecnologie di lotta allo spam per Postfix. Tra queste, Amavis-new con supporto
per Spamassassin e ClamAV, greylisting e l'SPF (Sender Policy Framework).
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>5</version>
<date>2011-06-19</date>

<chapter>
<title>Introduzione</title>
<section>
<body>

<p>
Questa guida descrive passo passo come installare un gateway per il filtraggio
della posta dai virus e dallo spam. Questa soluzione è abbastanza semplice da
applicare ad singolo server.
</p>

</body>
</section>
<section>
<title>Una visione dall'alto</title>
<body>

<p>
Questo documento descrive come impostare un gateway per il filtraggio dello spam
che supporti multipli domini di posta. Questo server è progettato per essere
posto a monte dei server di posta che dovrebbero effettivamente memorizzare i
messaggi di posta (ad esempio, Microsoft Exchange o Lotus Notes).
</p>

<p>
Per questa configurazione sono state scelte delle applicazioni note per il buon
livello di sicurezza che offrono e per la facilità con la quale possono essere
modificati i propri file di configurazione. L'MTA (dall'inglese <e>mail
transport agent</e>, in altre parole un programma che si occupi dello
smistamento da un computer a un altro della posta elettronica) scelto è
<c>postfix</c>, che appunto è abbastanza sicuro ed relativamente facile da
configurare. Come impostazione predefinita, <c>postfix</c> si mette in ascolto
sulla porta 25 per la posta in ingresso. Quando arriva un nuovo messaggio di
posta, il server lo inoltra ad <c>amavisd-new</c> sulla porta 10024.
<c>Amavisd-new</c>, successivamente, controlla il messaggio attraverso vari
filtri e lo restituisce a <c>postfix</c> sulla porta 10025; infine, il messaggio
viene consegnato al server di posta successivo.
</p>

<p>
Amavisd-new è un framework per il filtraggio di contenuti che utilizza
applicazioni di supporto per il riconoscimento di virus e spam. In questa
configurazione si utilizzeranno due applicazioni: ClamAV per il filtraggio dei
virus e Spamassassin per quello dello spam. Spamassassin, a sua volta, può
poggiarsi su applicazioni di livello inferiore, come ad esempio Vipul's Razor
e DCC.
</p>

<p>
Rispetto ad altre tecnologie di controllo dello spam (come gli RBL, dall'inglese
<e>Real-time Blackhole List</e>, termine con il quale si indicano impropriamente
le tecnologie DNSBL, o di <e>DNS blacklist</e>, che consistono nella
pubblicazione, da parte di un sito Internet, di una lista di indirizzi IP
che, per varie ragioni, ma principalmente spam, dovrebbero essere bloccati),
Spamassassin non valida un dato messaggio email in base ad un singolo test.
Questo programma, invece, esegue una lista di controlli, sia interni, sia usando
delle applicazioni esterne, per calcolare un punteggio da assegnare ad ogni
messaggio di posta. Questo punteggio è determinato in base a:
</p>

<ul>
  <li>Filtro Bayesiano</li>
  <li>Regole statiche basate su espressioni regolari</li>
  <li>Reti distribuite e collaborative:
  <ul>
    <li>RBL</li>
    <li>Razor2</li>
    <li>Pyzor</li>
    <li>DCC</li>
  </ul>
  </li>
</ul>

<p>
La prima parte della guida (capitoli dall'1 al 4) descriverà l'impostazione base
del gateway che farà da filtro. I capitoli seguenti possono essere implementati
in maniera indipendente, senza alcuna dipendenza reciproca. Questi capitoli
descriveranno come:
</p>

<ul>
  <li>
    impostare delle cartelle IMAP specifiche per l'apprendimento del filtro
    Bayesiano e per la consegna dei falsi positivi
  </li>
<!--
  <li>impostare strumenti di analisi dei log per creare report giornalieri</li>
-->
  <li>impostare il greylisting con Postfix</li>
  <li>
    impostare Amavisd-new per usare MySQL come backend per le preferenze
    dell'utente
  </li>
  <li>
    impostare Spamassassin per usare MySQL come backend per i dati di AWL e del
    filtro Bayesiano
  </li>
</ul>

<note>
Le cartelle IMAP useranno il formato <e>maildir</e>. Avere ogni messaggio email
in un file separato rende la loro gestione molto più semplice. Se è già in uso
mbox, si consiglia di provare il formato maildir. Se non si è installato
maildir, installare i pacchetti necessari usando <c>emerge courier-imap</c>.
</note>

<p>
Una quinta parte della guida, in via di scrittura, conterrà diversi suggerimenti
sulle prestazioni ed altre informazioni utili (come far girare il server in
chroot, le restrizioni di postfix, ecc...).
</p>

<note>
Delegare responsabilità a terze parti non è esente da rischi. È necessario
conoscere ed assegnare fiducia a queste terze parti. In questa configurazione,
la sola decisione di mettere in quarantena i messaggi con virus è presa da una
singola terza parte. Usare il sistema di punteggi di Spamassassin permette di
distribuire su diverse tecnologie la decisione di fermare le email di spam,
tranne che per le regole statiche interne a Spamassassin.
</note>

<warn>
Quando si identificano e rifiutano le email di spam a livello MTA, bisogna
prestare molta attenzione a quale RBL si usa. Ad esempio, SpamCop è un cattivo
RBL da usare a livello MTA, in quanto genera un apprezzabile numero di falsi
positivi, a causa dell'eccessiva aggressività del suo elenco. Ulteriori
informazioni possono essere trovate qui: <uri
link="http://www.geekcomix.com/cgi-bin/classnotes/wiki.pl?UNIX03/Realtime_Blackhole_Lists_Are_Bad">
Perchè gli RBL sono inaffidabili</uri> e <uri
link="http://theory.whirlycott.com/~phil/antispam/rbl-bad/rbl-bad.html">Il
problema dello spam: oltre gli RBL</uri>
</warn>

</body>
</section>
<section>
<title>Preparativi</title>
<body>

<p>
Prima di iniziare, accertarsi di avere una installazione funzionante di Postfix,
verificando la possibilità di inviare e ricevere messaggi di posta dal server di
backend. Se non si ha esperienza con l'impostazione di Postfix, potrebbe essere
troppo complicato impostare tutto assieme. Se si ha bisogno di aiuto, si può
trovare assistenza nell'eccellente <uri
link="http://www.gentoo.org/doc/it/virt-mail-howto.xml">Guida al Sistema di
Mailhosting Virtuale con Postfix</uri> nella documentazione Gentoo.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installare i programmi necessari</title>
<section>
<body>

<p>
Iniziare installando i programmi più importanti: Amavisd-new, Spamassassin e
ClamAV.
</p>

<pre caption="Installare Amavis, Spamassassin e Clamav">
# <i>emerge amavisd-new spamassassin clamav </i>
</pre>

<note>
Come menzionato in precedenza, si dovrebbe già avere una istanza di
<c>postfix</c> attiva sulla macchina. Normalmente questo non si spinge oltre il
lanciare <c>emerge postfix</c> <e>e</e> comprendere le basi del funzionamento di
Postfix.
</note>

</body>
</section>
<section>
<title>Impostare il DNS</title>
<body>

<note>
Se non si sta impostando un server gateway, ma le caselle di posta sono sullo
stesso server, basta anche solo impostare il record MX del DNS.
</note>

<p>
Mentre i programmi sono in via di installazione, avviare una nuova shell e
creare i record DNS necessari.
</p>

<p>
Iniziare creando un record <c>MX</c> per il gateway di posta ed un record
<c>A</c> per la destinazione successiva.
</p>

<pre caption="Impostare il DNS">
<comment>(Creare un record MX per il server gateway)</comment>
                MX      10      mailgateway.mydomain.tld.
<comment>(Creare un record A per il server gateway)</comment>
mailgateway     A       aggiungi.qui.ip.mailgateway
<comment>(Creare un record A per il prossimo server di posta)</comment>
mail            A       aggiungi.qui.ip.mailserver
</pre>

<note>
Alcuni fornitori di ADSL potrebbero bloccare la porta 25 e forzare il relay
della posta attraverso uno dei loro server. In questo caso, basta creare un
record MX secondario del tipo <c>MX      20      backup-mx.some-isp.tld</c>
</note>

</body>
</section>
<section>
<title>Aprire il firewall</title>
<body>

<p>
In aggiunta al normale traffico di posta, si dovrebbero permettere ad alcuni
servizi aggiuntivi di passare attraverso il firewall, in modo da consentire
alcuni controlli di rete per la comunicazione con i server.
</p>

<table>
<tr>
  <th>Applicazione</th>
  <th>Protocollo</th>
  <th>Porta</th>
</tr>
<tr>
  <ti>DCC</ti>
  <ti>UDP</ti>
  <ti>6277</ti>
</tr>
<tr>
  <ti>Razor(ping in uscita)</ti>
  <ti>TCP</ti>
  <ti>7</ti>
</tr>
<tr>
  <ti>Razor</ti>
  <ti>TCP</ti>
  <ti>2703</ti>
</tr>
</table>

<p>
Razor usa il ping per determinare quali server siano più vicini.
</p>

</body>
</section>
<section>
<title>Configurare Postfix</title>
<body>

<p>
Prima di tutto si deve impostare <c>postfix</c> in modo da ascoltare sulla porta
10025, rimuovendo la maggior parte delle restrizioni in quanto esse sono già
state applicate all'istanza di <c>postfix</c> che ascolta sulla porta 25.
Inoltre ci si deve assicurare che l'istanza sulla porta 10025 accetti solo
connessioni locali. Per permettere questo comportamento, si devono aggiungere
le seguenti linee alla fine di <path>/etc/postfix/master.cf</path>
</p>

<pre caption="Modifiche al file master.cf">
smtp-amavis     unix -        -       n     -       2  smtp
  -o smtp_data_done_timeout=1200
  -o smtp_send_xforward_command=yes
<comment>#In maniera equivalente, usando lmtp:
#lmtp-amavis    unix -        -       n     -       2  lmtp
#   -o lmtp_data_done_timeout=1200
#   -o lmtp_send_xforward_command=yes</comment>

127.0.0.1:10025 inet n        -       n     -       -  smtpd
  -o content_filter=
  -o local_recipient_maps=
  -o relay_recipient_maps=
  -o smtpd_restriction_classes=
  -o smtpd_client_restrictions=
  -o smtpd_helo_restrictions=
  -o smtpd_sender_restrictions=
  -o smtpd_recipient_restrictions=permit_mynetworks,reject
  -o mynetworks=127.0.0.0/8
  -o strict_rfc821_envelopes=yes
  -o smtpd_error_sleep_time=0
  -o smtpd_soft_error_limit=1001
  -o smtpd_hard_error_limit=1000

<comment>#Se si vuole usare il filtraggio via proxy
#smtp            inet n         -       n      -       8 smtpd
# -o smtpd_proxy_filter=127.0.0.1:10024
# -o smtpd_client_connection_count_limit=4
#Usare le seguenti righe per non controllare la posta in uscita
#10.0.0.2:smtp   inet n         -       n       -      - smtpd
#-o content_filter=</comment>
</pre>

<note>
La riga relativa ad <c>smtp-amavis</c> specifica che un massimo di due processi
di tale programma possono essere in esecuzione contemporaneamente. Se si ha
bisogno di un maggior grado di concorrenza, modificare quel valore secondo
necessità. Ricordarsi inoltre di impostare lo stesso valore per
<c>$max_servers</c> in <path>amavisd.conf</path>. È bene tenere a mente che
<c>amavisd-new</c> è abbastanza avido di memoria ed aumentare troppo il numero
di processi concorrenti potrebbe portare ad una diminuzione consistente della
memoria disponibile, così come ad un intenso uso dello swap.
</note>

<note>
Se si vuole eliminare lo spam ad un livello precedente, si può utilizzare il
metodo <e>Before-Queue (proxy)</e> in luogo del metodo che usa il filtro.
Rimuovendo i segni di commento dalle tre righe appropriate, è necessario poi
aggiungere la variabile <c>content_filter=</c> in <path>main.cf</path>. Questa
soluzione non è raccomandata per server ad alto traffico, in quanto il numero di
connessioni concorrenti è limitato dal numero massimo di istanze di
<c>amavisd</c>.
</note>

<warn>
Il metodo <e>Before-Queue (proxy)</e> non è stato ancora testato
approfonditamente.
</warn>

<note>
Se, per qualsiasi motivo, si volesse inviare una email dalla stessa macchina,
senza sottoporla a scansione, aggiungere una nuova istanza di postfix togliendo
il simbolo di commento dalle ultime due linee e sostituendo il corretto
indirizzo IP.
</note>

<p>
Il file <path>master.cf</path> indica a postfix in che modo lanciare ogni
singolo processo. Per ulteriori informazioni, vedere <c>man 8 master</c>.
</p>

<p>
Successivamente, si deve avere l'istanza principale di <c>postfix</c> in ascolto
sulla porta 25, che filtri i messaggi di posta attraverso <c>amavisd-new</c>, in
ascolto sulla porta 10024.
</p>

<p>
Si deve anche impostare il nodo successivo di destinazione per la posta.
Impostare Postfix in modo da filtrare tutta la posta attraverso un filtro di
contenuti esterno ed abilitare il routing esplicito in modo che Postfix conosca
esattamente dove inoltrare la posta.
</p>

<pre caption="Modificare /etc/postfix/main.cf">
biff = no
empty_address_recipient = MAILER-DAEMON
queue_minfree = 120000000

content_filter = smtp-amavis:[127.0.0.1]:10024
<comment># In modo equivalente, con lmtp:
#content_filter = lmtp-amavis:[127.0.0.1]:10024

# TRANSPORT MAP
#
# Inserire il testo da sample-transport.cf per il routing esplicito</comment>
transport_maps = hash:/etc/postfix/transport

relay_domains = $transport_maps
</pre>

<p>
Postfix ha numerose opzioni configurabili in <path>main.cf</path>. Per ulteriori
spiegazioni sul contenuto del file vedere <c>man 5 postconf</c>, oppure, online,
i <uri link="http://www.postfix.org/postconf.5.html">Parametri di configurazione
di Postfix</uri>.
</p>

<p>
Il formato del file <path>transport</path> è quello di un file Postfix di hash.
La posta indirizzata ad un dominio elencato sul lato sinistro è inoltrata alla
destinazione indicata sul lato destro del file.
</p>

<pre caption="/etc/postfix/transport">
mydomain.tld                          smtp:mail.mydomain.tld
</pre>

<p>
Dopo aver modificato il file, bisogna lanciare il comando <c>postmap</c>.
Postfix, in realtà, non legge il file <path>/etc/postfix/transport</path>,
perciò è necessario convertirlo con il comando <c>postmap
/etc/postfix/transport</c>. Questo crea il file
<path>/etc/postfix/transport.db</path>. Non è necessario ricaricare Postfix, in
quanto esso rileverà automaticamente le modifiche.
</p>

<note>
Se il mail server successivo non dovesse essere in ascolto sulla porta standard
per l'SMTP, cioè la 25, configurare postfix con una voce simile a
<c>smtp:mail.mydomain.tld:25000</c>.
</note>

<p>
Se il primo tentativo di invio di una e-mail si conclude con i messaggi che
rimbalzano indietro sul server, molto probabilmente è stato commesso un errore
di configurazione. Provare ad abilitare temporaneamente <c>soft_bounce</c>
mentre si corregge la configurazione. Questo espediente impedisce a postfix di
fare il bouncing delle e-mail in caso di errori di spedizione, trattandole come
errori temporanei. Il programma manterrà i messaggi nella coda di spedizione
finchè <c>soft_bounce</c> non viene disabilitato o rimosso.
</p>

<pre caption="Abilitare soft_bounce">
# <i>postconf -e "soft_bounce = yes"</i>
# <i>/etc/init.d/postfix reload</i>
</pre>

<p>
Una volta trovata la configurazione funzionante, disabilitare o rimuovere
<c>soft_bounce</c> e ricaricare postfix.
</p>

</body>
</section>
<section>
<title>Configurare Amavisd-new</title>
<body>

<p>
Amavisd-new è usato per gestire l'intero processo di filtraggio e permette di
unire insieme diverse tecnologie in maniera semplice. Quando riceve un nuovo
messaggio, Amavisd-new lo filtra attraverso diversi filtri personalizzati,
gestisce il blacklisting e whitelisting, invoca diversi antivirus ed infine
lo filtra usando SpamAssassin.
</p>

<p>
Amavisd-new possiede le seguenti caratteristiche:
</p>

<ul>
  <li>
    identifica allegati di posta potenzialmente pericolosi e li gestisce
    autonomamente
  </li>
  <li>ha delle politiche a livello utente, dominio o di intero sistema per:
  <ul>
    <li>le whitelist</li>
    <li>le blacklist</li>
    <li>le soglie di guardia per i punteggi di spam</li>
    <li>virus e spam</li>
  </ul>
  </li>
</ul>

<p>
A parte <c>postfix</c> e <c>freshclam</c>, tutte le applicazioni gireranno con
i privilegi dell'utente <c>amavis</c>.
</p>

<!--
<pre caption="/etc/passwd">
amavis:x:1010:413:added by portage for amavisd-new:/var/amavis:/bin/bash
</pre>
-->

<!--
<p>
Si crei la nuova home directory e si impostino i giusti permessi.
</p>

<pre caption="Creazione della home directory ed impostazione dei permessi">
# <i>mkdir /var/amavis</i>
# <i>chown amavis:amavis /var/amavis</i>
# <i>chmod 750 /var/amavis</i>
</pre>
-->

<p>
Modificare le seguenti linee in <path>/etc/amavisd.conf</path>
</p>

<pre caption="Come modificare /etc/amavisd.conf">
<comment>(Inserire i domini da controllare)</comment>
$mydomain = 'example.com';
<comment>(Per fare il binding sulla sola interfaccia di loopback)</comment>
$inet_socket_bind = '127.0.0.1';
<comment>(Per inoltrare a Postfix sulla porta 10025)</comment>
$forward_method = 'smtp:127.0.0.1:10025';
$notify_method = $forward_method;
<comment>(Definire l'account al quale inviare gli avvertimenti sui virus)</comment>
$virus_admin = "virusalert\@$mydomain";
<comment>(Per aggiungere sempre gli header per lo spam)</comment>
$sa_tag_level_deflt  = -100;
<comment>(Per aggiungere sempre gli header come X-Spam-Status: Yes)</comment>
$sa_tag2_level_deflt = 5;
<comment>(Per attivare le azioni evasive ad un dato livello di spam)</comment>
$sa_kill_level_deflt = $sa_tag2_level_deflt;
<comment>(Per non inviare al mittente le notifiche di stato di consegna. Questo)
(non modifica la consegna dello spam al destinatario, vedere kill_level)</comment>
$sa_dsn_cutoff_level = 10;
<comment>(Per mettere in quarantena tutti i messaggi problematici)</comment>
$final_virus_destiny      = D_DISCARD;  # (default: D_DISCARD)
$final_banned_destiny     = D_DISCARD;  # (default: D_BOUNCE)
$final_spam_destiny       = D_DISCARD;  # (default: D_BOUNCE)
</pre>

<note>
Con la linea <c>$sa_tag2_level_deflt = 5;</c> si imposta a 5 il punteggio di
spam per Spamassassin. Questa impostazione potrebbe essere bassa; il valore p
redefinito per Amavisd-new, infatti, è <c>6.3</c>. Usando <c>5</c> si rischia di
generare dei falsi positivi, ma con <c>6.3</c> qualche messaggio di spam
potrebbe passare attraverso i filtri.
</note>

<p>
Creare una directory di quarantena per i messaggi con virus, in modo che gli
stessi non vengano inviati agli utenti.
</p>

<pre caption="Creare una directory di quarantena per i messaggi con virus">
# <i>mkdir /var/amavis/virusmails</i>
# <i>chown amavis:amavis /var/amavis/virusmails</i>
# <i>chmod 750 /var/amavis/virusmails</i>
</pre>

<note>
Amavisd-new offre un controllo più raffinato attraverso l'utilizzo dei <e>policy
banks</e>.
</note>

</body>
</section>
<section>
<title>Configurare ClamAV</title>
<body>

<p>
Per difendersi dai virus si userà ClamAV, in quanto esso ha un buon tasso di
riconoscimento comparato con le soluzioni commerciali, è molto veloce ed è
software Open Source. I file di log sono estremamente utili, perciò si imposterà
il logging di <c>clamd</c> attraverso <c>syslog</c> al suo livello prolisso.
Inoltre, assicurarsi di non far girare <c>clamd</c> come <c>root</c>. Modificare
<path>/etc/clamd.conf</path>
</p>

<pre caption="Modificare /etc/clamd.conf">
<comment>(Log prolisso con syslog)</comment>
LogSyslog
LogVerbose
LogFacility LOG_MAIL
<comment>(Per modificare il percorso del file pid)</comment>
PidFile /var/run/amavis/clamd.pid
<comment>(Impostazione del socket di clamav)</comment>
LocalSocket /var/amavis/clamd
<comment>(Per chiudere la connessione quando viene raggiunto questo limite)</comment>
StreamMaxLength 10M
<comment>(Per eseguire clamd con privilegi limitati)</comment>
User amavis
<comment>(Le nuove versioni richiedono che le seguenti linee non siano commentate)</comment>
ScanMail
ScanArchive
</pre>

<note>
Infine fare attenzione a rimuovere la direttiva Example per far funzionare
ClamAV.
</note>

<p>
ClamAV viene distribuito assieme al demone <c>freshclam</c>, dedicato ai
controlli periodici per l'aggiornamento delle firme dei virus. Invece di
aggiornare le firme dei virus due volte al giorno, si imposterà <c>freshclam</c>
im modo che le aggiorni autonomamente ogni due ore.
</p>

<pre caption="Modificare /etc/freshclam.conf">
<comment>(Log su syslog)</comment>
LogSyslog
<comment>(Logging prolisso)</comment>
LogVerbose
<comment>(Per rilasciare esplicitamente i privilegi di root)</comment>
DatabaseOwner clamav
<comment>(Per controllare gli aggiornamenti ogni due ore. Questa è la raccomandazione ufficiale)</comment>
Checks 12
<comment>(Per usare il mirror più vicino. Sostituire XY con il codice del proprio paese)</comment>
DatabaseMirror db.XY.clamav.net
</pre>

<p>
Lanciare <c>clamd</c> con <c>freshclam</c> usando gli script di init modificando
<path>/etc/conf.d/clamd</path>.
</p>

<pre caption="Modificare /etc/conf.d/clamd">
START_CLAMD=yes
FRESHCLAM_OPTS="-d"
</pre>

<p>
Infine modificare <path>amavisd.conf</path> con il nuovo percorso del socket.
</p>

<pre caption="Modificare /etc/amavisd.conf">
<comment>(Decommentare lo scanner clamav e modificare il percorso del socket)</comment>
['ClamAV-clamd',
\&amp;ask_daemon, ["CONTSCAN {}\n", "/var/amavis/clamd"],
  qr/\bOK$/, qr/\bFOUND$/,
  qr/^.*?: (?!Infected Archive)(.*) FOUND$/ ],
</pre>

<warn>
<b>Non</b> modificare <c>$unix_socketname</c> tranne se si sa con certezza cosa
si sta facendo.
</warn>

</body>
</section>
<section>
<title>Configurare Vipul's Razor</title>
<body>

<p>
Razor2 è una rete collaborativa e distribuita per l'intercettazione dello spam.
Per installarlo, digitare <c>emerge razor</c> e creare i necessari file di
configurazione. Eseguire la creazione con l'utente <c>amavis</c>, eseguendo
<c>su - amavis</c> seguito da <c>razor-admin -create</c>.
</p>

<pre caption="Creazione dei file di configurazione necessari">
# <i>emerge razor</i>

<comment>(Impostare temporaneamente la shell dell'utente amavis a bash)</comment>
# <i>usermod -s /bin/bash amavis</i>
# <i>su - amavis</i>
$ <i>razor-admin -create</i>
$ <i>exit</i>

<comment>(Reimpostare la shell a /bin/false)</comment>
# <i>usermod -s /bin/false amavis</i>
</pre>

</body>
</section>
<section>
<title>Configurare Distributed Checksum Clearinghouse (dcc)</title>
<body>

<p>
Come Razor2, dcc è una rete collaborativa e distribuita per l'intercettazione
dello spam. La sua filosofia è quella di contare il numero di destinatari di una
data email, identificando ogni mail con un checksum <e>fuzzy</e>.
</p>

<pre caption="Installare DCC">
# <i>emerge dcc</i>
</pre>

</body>
</section>
<section>
<title>Configurare Spamassassin</title>
<body>

<p>
Amavis usa direttamente le librerie in Perl di Spamassassin, quindi non è
necessario avviare direttamente il servizio. Questa situazione crea un po' di
confusione in quanto alcune impostazioni di Spamassassin vanno configurate in
<path>/etc/mail/spamassassin/local.cf</path>, e sono superate da quelle presenti
in <path>/etc/amavisd.conf</path>.
</p>

<pre caption="Creare /etc/mail/spamassassin/local.cf">
<comment># Abilitare il sistema di Bayes</comment>
use_bayes               1

<comment># Abilitare tutti i controlli di rete</comment>
skip_rbl_checks         0

<comment># I messaggi di posta che usano le lingue di questi paesi non saranno
# considerati spam a causa della lingua straniera.
# - danese inglese norvegese svedese</comment>
ok_languages            da en no sv

<comment># I messaggi di posta con dei locale usati in questi paesi non saranno
# considerati spam a causa della lingua straniera.</comment>
ok_locales              en

<comment># Configurazione del percorso del filtro di Bayes</comment>
bayes_path              /var/amavis/.spamassassin/bayes
</pre>

<note>
Con Spamassassin versione 3.1 bisogna abilitare DCC e Razor2 togliendo il
simbolo di commento dalle apposite linee in <path>v310.pre</path>.
</note>

<note>
È possibile provare alcuni esempi per il file <path>local.cf</path> con il <uri
link="http://www.yrex.com/spam/spamconfig.php">Generatore di Configurazione per
SpamAssassin</uri>.
</note>

<note>
È consigliabile modificare le variabili <c>ok_languages</c> e <c>ok_locales</c>.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Ogni regola ha le sue eccezioni</title>
<section>
<body>

<p>
Una volta configurato il sistema potrebbe essere necessario modificare
ulteriormente la configurazione. Alcuni clienti potrebbero voler ricevere alcuni
tipi di email che altri clienti invece non gradiscono. Per questo è possibile
separare la configurazioni tra diversi siti con la seguente linea in
<path>amavisd.conf</path>.
</p>

<pre caption="Modificare amavisd.conf per abilitare il punteggio sito per sito">
read_hash("/var/amavis/sender_scores_sitewide"),
</pre>

<p>
Nel file <path>sender_scores_sitewide</path> si possono impostare indirizzi
email completi (oppure anche solo la parte di dominio) e dare loro un
modificatore positivo o negativo al punteggio di spam.
</p>

<pre caption="Esempio per whitelist_sender">
<comment>(Mette nella whitelist tutte le email per questo indirizzo email)</comment>
postmaster@example.net                -3.0
<comment>(Mette nella whitelist tutte le email da example.net escludendo i sottodomini)</comment>
.example.net                          1.0
</pre>

<note>
Vedere <path>/etc/amavisd.conf</path> per ulteriori esempi.
</note>

<note>
Inserire questi indirizzi all'esterno di <path>amavisd.conf</path> è una
soluzione più pulita e sicura.
</note>

<note>
In alternativa, la configurazione può essere attivata nel file di Spamassassin
<path>/etc/mail/spamassassin/local.cf</path>, ma probabilmente inserirla in
<path>/etc/amavisd.conf</path> è più corretto.
</note>

<note>
In un capitolo successivo verrà illustrato come implementare politiche utente
per utente utilizzando MySQL.
</note>

<p>
In attesa della possibilità di usare metodi migliori, è possibile aggiungere le
seguenti linee in <path>amavisd.conf</path> in modo da superare i controlli per
lo spam per <c>postmaster</c> e <c>abuse</c>.
</p>

<pre caption="Superare i filtri per lo spam per le mail per postmaster e abuse">
map { $bypass_spam_checks{lc($_)}=1 } (qw(
        postmaster@
        abuse@
));
</pre>

<impo>
Non si dovrebbero <e>mai</e> scartare automaticamente le mail per gli account
<c>postmaster</c> e <c>abuse</c>. Vedere <uri
link="http://www.ietf.org/rfc/rfc2142.txt">RFC 2142 MAILBOX NAMES FOR COMMON
SERVICES, ROLES AND FUNCTIONS</uri>. Altrimenti il dominio potrebbe
finire nelle liste di <uri
link="http://www.rfc-ignorant.org/">rfc-ignorant.org</uri>.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Aggiungere ulteriori regole</title>
<section>
<body>

<p>
Volendo utilizzare ulteriori regole fornite dai SARE Ninjas dello <uri
link="http://www.rulesemporium.com/">SpamAssassin Rules
Emporium</uri>, si può facilmente aggiungerle ed aggiornarle usando il
meccanismo <c>sa-update</c> incluso in Spamassassin.
</p>

<p>
Una breve guida su come usare il set di regole SARE con <c>sa-update</c> è
disponibile a <uri
link="http://daryl.dostech.ca/sa-update/sare/sare-sa-update-howto.txt">questo
</uri> indirizzo.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Test e conclusione</title>
<section>
<title>Test della configurazione</title>
<body>

<p>
Prima di lanciare <c>freshclam</c> è possibile verificare manualmente che
funzioni correttamente.
</p>

<pre caption="Testare freshclam">
# <i>freshclam</i>
ClamAV update process started at Sun May  2 09:13:41 2004
Reading CVD header (main.cvd): OK
Downloading main.cvd [*]
main.cvd updated (version: 22, sigs: 20229, f-level: 1, builder: tkojm)
Reading CVD header (daily.cvd): OK
Downloading daily.cvd [*]
daily.cvd updated (version: 298, sigs: 1141, f-level: 2, builder: diego)
Database updated (21370 signatures) from database.clamav.net (193.1.219.100).
</pre>

<p>
Adesso le definizioni dei virus sono aggiornate e contemporaneamente è stata
verificata la correttezza della sintassi del file <path>freshclam.conf</path>.
</p>

<p>
Per testare freshclam e amavisd da linea di comando, lanciare <c>clamd</c> e
<c>amavis</c> con i seguenti comandi:
</p>

<pre caption="Lanciare amavisd e clamd e ricaricare la configurazione di postfix">
# <i>/etc/init.d/clamd start</i>
# <i>/etc/init.d/amavisd start</i>
# <i>/etc/init.d/postfix reload</i>
</pre>

<p>
Se tutto è andato bene, <c>postfix</c> dovrebbe adesso essere in ascolto per
le email in ingresso sulla porta 25 e per quelle reiniettate sulla porta 10024.
Per verificare questo, controllare il proprio file di log.
</p>

<pre caption="Controllare i file di log">
# <i>tail -f /var/log/mail.log</i>
</pre>

<note>
A seconda delle impostazioni, il percorso corretto per il file di log potrebbe
essere <path>/var/log/messages</path>.
</note>

<p>
Se nessuno strano messaggio compare nei file di log, è tempo di eseguire degli
ulteriori test.
</p>

<p>
Usare <c>netcat</c> per connettersi manualmente ad <c>amavisd</c> sulla porta
10024 ed a <c>postfix</c> sulla porta 10025.
</p>

<note>
Netcat può essere utilizzato come un avanzato rimpiazzo di <c>telnet</c>.
Installarlo con <c>emerge netcat</c>.
</note>

<note>
Per qualche motivo ignoto non è possibile eseguire una iniezione manuale in
<c>amavisd</c> usando netcat. Utilizzare <c>telnet</c> invece.
</note>

<pre caption="Controllare manualmente che amavisd e postfix ascoltino sulle
nuove porte">
# <i>nc localhost 10024</i>
<comment>(Amavis funziona)</comment>
220 [127.0.0.1] ESMTP amavisd-new service ready
<i>nc localhost 10025</i>
<comment>(La reiniezione in Postfix funziona)</comment>
220 example.com ESMTP Postfix
</pre>

<note>
Se si vuole vedere l'output completo di amavisd-new, lanciare <c>amavisd
debug-sa</c> dall'utente <c>amavis</c> ed inviare una email. Per eseguire questo
test potrebbe essere necessario modificare la shell predefinita in
<path>/etc/passwd</path>.
</note>

<p>
Aggiungere <c>amavisd</c> e <c>clamd</c> al runlevel <c>default</c>.
</p>

<pre caption="Agguingere amavisd e clamd al runlevel di default">
# <i>rc-update add clamd default</i>
# <i>rc-update add amavisd default</i>
</pre>

<note>
Non è necessario aggiungere <c>spamd</c> al runlevel di default in quanto
<c>amavisd</c> usa le librerie Perl di Spamassassin direttamente.
</note>

<note>
Nei log potrebbero comparire delle linee simili a <c>Net::Server: Couldn't
POSIX::setuid to ... []</c>. Secondo il file di README per <uri
link="http://www.ijs.si/software/amavisd/README.chroot">amavis chroot</uri>, se
l'UID del processo rimane a 0 (<c>root</c>), il programma viene terminato,
altrimenti è possibile considerare il messaggio come informativo. Questo accade
in quanto <c>POSIX::setuid()</c> restituisce una stringa pari a <c>0</c> per
indicare <c>true</c>.
</note>

<impo>
Se è stato abilitato il login per amavis, ricordarsi di reimpostarlo a
<c>/bin/false</c> in <path>/etc/passwd</path>.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Apprendimento automatico e sidelining delle email</title>
<section>
<title>Creare l'utente spamtrap</title>
<body>

<p>
Creare l'utente spamtrap e relative directory.
</p>

<pre caption="Creare l'account spamtrap">
# <i>useradd -m spamtrap</i>
# <i>maildirmake /home/spamtrap/.maildir</i>
# <i>chown -R spamtrap:spamtrap /home/spamtrap/.maildir</i>
<comment>(Impostare una password non banale)</comment>
# <i>passwd spamtrap</i>
</pre>

<p>
Se si vogliono controllare alcune delle email per assicurarsi che non si siano
falsi positivi, è possibile configurare <c>procmail</c> in modo da fare il
sideline dello spam tra diverse cartelle di posta.
</p>

</body>
</section>
<section>
<title>Creare .procmailrc</title>
<body>

<pre caption="Creare /home/spamtrap/.procmailrc">
<comment>#Impostare alcune variabili predefinite</comment>
MAILDIR=$HOME/.maildir

SPAM_FOLDER=$MAILDIR/.spam-found/

LIKELY_SPAM_FOLDER=$MAILDIR/.likely-spam-found/

<comment>#Spostare le mail con un punteggio di spam di 7 punti o più</comment>
<comment>#nella spamfolder</comment>
:0:
* ^X-Spam-Status: Yes
* ^X-Spam-Level: \*\*\*\*\*\*\*
$SPAM_FOLDER

<comment>#Spostare le mail con un punteggio di spam tra 5 e 7 nella cartella</comment>
<comment>#dei messaggi sospetti</comment>
:0:
* ^X-Spam-Status: Yes
$LIKELY_SPAM_FOLDER

<comment>#Spostare tutte le altre mail nella inbox</comment>
:0
*
./
</pre>

<warn>
Se è previsto che il mailserver riceva una grande quantità di posta, non si
dovrebbe usare la configurazione appena vista. Invece, sarebbe meglio impostare
<c>$sa_tag2_level_deflt</c> abbastanza alto da evitare i falsi positivi e
filtrarli direttamente in <c>$SPAM_FOLDER</c>.
</warn>

<note>
Se <c>procmail</c> non è ancora installato, digitare <c>emerge procmail</c>.
</note>

<p>
Assicurarsi che Postfix usi <c>procmail</c> per spedire la posta.
</p>

<pre caption="Modificare /etc/postfix/main.cf">
mailbox_command = /usr/bin/procmail -a "DOMAIN"
</pre>

</body>
</section>
<section>
<title>Creare le cartelle per la posta</title>
<body>

<p>
A breve verranno create le cartelle condivise per la posta, che sarà divisa
tra <e>spam</e> ed <e>ham</e>: quest'ultimo termine è usato per indicare la
posta legittima, in contrapposizione al significato originale del sostantivo
<e>spam</e>.
</p>

<pre caption="Creare le necessarie cartelle per la posta">
# <i>maildirmake /var/amavis/.maildir</i>
# <i>maildirmake -S /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f spam /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f ham /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f redeliver /var/amavis/.maildir/Bayes</i>
</pre>

<p>
Amavisd-new deve poter leggere questi file, così come tutti gli utenti di posta.
Per tale motivo aggiungere tutti gli utenti del caso al gruppo mailuser, assieme
all'utente amavis.
</p>

<pre caption="Impostare i permessi appropriati">
# <i>groupadd mailusers</i>
# <i>usermod -G mailusers spamtrap</i>
# <i>chown -R amavis:mailusers /var/amavis/.maildir/</i>
# <i>chown amavis:mailusers /var/amavis/</i>
# <i>chmod -R 1733 /var/amavis/.maildir/Bayes/</i>
# <i>chmod g+rx /var/amavis/.maildir/</i>
# <i>chmod g+rx /var/amavis/.maildir/Bayes/</i>
</pre>

<warn>
Questi comandi permettono ad i membri del gruppo <c>mailusers</c> di accedere
alla posta di <c>amavis</c>.
</warn>

<p>
Questa impostazione rende le directory per spam e posta legittima scrivibili ma
non leggibili. In questo modo, gli utenti possono sottomettere la propria posta
legittima senza che nessun altro sia in grado di leggerla.
</p>

<p>
Eseguire questo comando come utente <c>spamtrap</c>:
</p>

<pre caption="Aggiungere le cartelle condivise a quelle degli utenti">
$ <i>maildirmake --add Bayes=/var/amavis/.maildir/Bayes $HOME/.maildir</i>
</pre>

<note>
Bisogna dare al gruppo i permessi di lettura sulla cartella <path>Bayes</path>
in modo che il client di posta veda le sottodirectory usate da IMAP.
</note>

</body>
</section>
<section>
<title>Aggiungere operazioni con cron</title>
<body>

<p>
Eseguire <c>crontab -u amavis -e</c> per modificare il crontab per amavis in
modo da abilitare l'apprendimento automatico del filtro di Bayes ogni ora.
</p>

<pre caption="crontab per amavis">
<comment>#Apprendimento automatico</comment>
0 * * * *          /usr/bin/sa-learn --spam /var/amavis/.maildir/Bayes/.spam/{cur,new} \
                    > /dev/null 2>&amp;1
0 * * * *          /usr/bin/sa-learn --ham /var/amavis/.maildir/Bayes/.ham/{cur,new} > \
                   /dev/null 2>&amp;1
</pre>

<note>
<c>amavis</c> deve far parte del gruppo <c>cron</c> per poter eseguire i cron.
</note>

<note>
Sembra che le cartelle di posta condivise facciano esaminare a <c>sa-learn</c>
tutti i messaggi di posta due volte: non dovrebbe essere un problema. L'output
mostrerà inoltre che il numero di messaggi dai quali è stato appreso qualcosa
è circa la metà del reale numero di messaggi esaminati.
</note>

</body>
</section>
<section>
<title>Modificare amavisd.conf</title>
<body>

<p>
Modificare amavis per redirigere tutte le email di spam verso l'account
<c>spamtrap</c> e per conservare gli header dei messaggi che segnalano lo spam.
</p>

<pre caption="Modificare /etc/amavisd.conf">
<comment>(Definire l'account al quale inviare le email di spam e con virus)</comment>
$spam_quarantine_to = "spamtrap\@$myhostname";
</pre>

</body>
</section>
<section>
<title>Fare pulizia</title>
<body>

<p>
Poichè non è desiderabile mantenere i messaggi di posta per sempre, usare
<c>tmpwatch</c> per fare pulizia regolarmente. Installarlo con
<c>emerge tmpwatch</c>. Solo <c>root</c> ha i permessi per eseguire
<c>tmpwatch</c>, perciò è necessario modificare il crontab di <c>root</c>.
</p>

<pre caption="Modificare il crontab di root">
<comment># Fare pulizia</comment>
<comment># Mantenere i messaggi con virus per una settimana (24*7 ore)</comment>
15 0 * * *      /usr/sbin/tmpwatch -c -f -d --quiet 168 /var/amavis/virusmails/
<comment># Cancellare spam e posta legittima appresi dopo una settimana</comment>
15 0 * * *      /usr/sbin/tmpwatch -c -f -d --quiet 168 /var/amavis/.maildir/Bayes/
</pre>

</body>
</section>
</chapter>

<!--
<chapter>
<title>Analizzatori dei log</title>
<section>
<title>Statistiche generali su Postfix</title>
<body>

<p>
Adesso che il gateway di posta è stato configurato, sarebbe buono poterlo
monitorare. Per fare questo verranno installati due piccoli script in Perl che
spediranno via e-mail le statistiche giornaliere sullo spam. Come prima cosa
scaricare ed installare <c>pflogsumm</c>:
</p>

<pre caption="Scaricare ed installare pflogsumm">
# <i>wget http://jimsun.linxnet.com/downloads/pflogsumm-1.1.0.tar.gz</i>
# <i>tar xzf pflogsumm-1.1.0.tar.gz</i>
# <i>cp pflogsumm-1.1.0/pflogsumm.pl /usr/local/bin/</i>
</pre>
</body>
</section>
<section>
<title>Statistiche dello spam di Postfix</title>
<body>

<p>
Adesso verrà scaricato ed installato lo script che genera le statistiche
giornaliere sullo spam catturato:
</p>

<pre caption="Scaricare ed installare spamreport">
# <i>wget http://www.flakshack.com/anti-spam/nosack-spamreport.pl</i>
# <i>mv nosack-spamreport.pl /usr/local/bin/</i>
# <i>chmod +x /usr/local/bin/nosack-spamreport.pl</i>
</pre>
<p>
Poichè si vuole una mail al giorno per ognuno degli script, aggiungere nuovi
elementi al crontab di <c>root</c>:
</p>
<pre caption="Adding report scripts to root crontab">
15 0 * * *      /usr/local/bin/pflogsumm.pl -d yesterday \
                /var/log/mail.log 2&gt;&amp;1 | /bin/mailx \
                -s "`uname -n` daily mail stats" postmaster
10 0 * * *      /usr/local/bin/nosack-spamreport.pl \
                /var/log/mail.log 2&gt;&amp;1 | /bin/mailx \
                -s "`uname -n` daily spam stats" postmaster
</pre>

<note>
Potrebbe essere necessario eseguire un <c>emerge Date-Calc</c> ed un <c>emerge
mailx</c>. In alternativa si può usare <c>mail</c>, installato con
<c>emerge mailutils</c>
</note>

<note>
Se i log vengono ruotati una volta a settimana (come fa l'autore di questa
guida), prestare attenzione ad inviare le mail con le statistiche appena prima
della rotazione dei log.
</note>

<note>
Attualmente l'autore sta studiando quest'altro analizzatore di log per amavis:
<uri link="http://homepages.hs-bremen.de/~renegat/amavislogsumm">amavislogsumm
</uri>
</note>
</body>
</section>
</chapter>
-->

<chapter>
<title>Greylisting</title>
<section>
<title>Introduzione</title>
<body>

<p>
Il greylisting è una delle armi più moderne disponibili nell'arsenale per la
lotta contro lo spam. Come suggerisce il nome, è simile al blacklisting ed al
whitelisting. Ogni volta che un mailserver sconosciuto prova ad inviare un
messaggio di posta, questo è scartato con un messaggio che invita a <e>provare
più tardi</e>. Questo implica che l'invio del messaggio viene ritardato, ma
anche che i bot che non implementano il protocollo secondo l'RFC desisteranno
dall'invio e non proveranno nuovamente. Col tempo, probabilmente, i bot verranno
migliorati, ma questo darà più tempo ad altre tecnologie per identificare lo
spam.
</p>

<note>
Se il proprio ISP blocca tutto il traffico in ingresso sulla porta 25 ed invia
la posta attraverso il proprio mailserver, allora il greylisting non funzionerà.
</note>

<p>
Postfix 2.1 viene fornito con un server di politiche di greylisting, scritto in
Perl, che implementa questo comportamento. Esso, comunque, è soggetto a
risultati imprevedibili quando la partizione che contiene il database di
greylisting esaurisce lo spazio a disposizione. Per questo motivo esiste una
versione migliorata che non soffre di questo problema. Come prima cosa verrà
descritta la procedura di attivazione del greylisting inserito direttamente in
Postfix, mentre successivamente verrà descritto come configurare il rimpiazzo
più robusto.
</p>

<note>
Esistono altri server di greylisting per Postfix (come <uri
link="http://www.gasmi.net/gld.html">Gld</uri>, presente in Portage, e <uri
link="http://sqlgrey.sourceforge.net/">SQLgrey</uri>). Alcuni di essi supportano
anche i database come backend, il whitelisting automatico ed altre funzioni
interessanti.
</note>

</body>
</section>
<section>
<title>Semplice greylisting</title>
<body>

<note>
Se si vuole usare il greylisting migliorato, è possibile saltare questa sezione.
</note>

<p>
È necessario utilizzare il file <path>greylist.pl</path>, ma sfortunatamente
l'ebuild non lo installa in modo predefinito.
</p>

<pre caption="Ottenere greylist.pl">
# <i>cp /usr/portage/distfiles/postfix-versione.tar.gz /root/</i>
# <i>tar xzf postfix-versione.tar.gz</i>
# <i>cp postfix-2.1.0/examples/smtpd-policy/greylist.pl /usr/bin/</i>
</pre>

<p>
Adesso che il file è al suo posto, è necessario creare la directory che conterrà
il database di greylisting:
</p>

<pre caption="Creare la directory per il database di greylisting">
# <i>mkdir /var/mta</i>
# <i>chown nobody /var/mta</i>
</pre>

<warn>
Non creare la directory per il database di greylisting in una partizione che
potrebbe esaurire lo spazio a disposizione. Mentre postfix può evitare problemi
alla coda delle e-mail ed alle mail box quando lo spazio si esaurisce, il
database di greylisting non è capace di farlo. Se il file diviene corrotto, non
sarà più possibile ricevere alcuna e-mail fino a quando il file non viene
cancellato manualmente.
</warn>

</body>
</section>
<section>
<title>Configurare il greylisting</title>
<body>

<p>
Adesso che tutto è pronto, bisogna aggiungere alcune informazioni alla
configurazione di postfix. Prima di tutto è necessario modificare
<path>master.cf</path>:
</p>

<pre caption="Modicare master.cf per usare il greylisting">
policy-greylist  unix  -       n       n       -       -       spawn
   user=nobody argv=/usr/bin/perl /usr/bin/greylist.pl
</pre>

<p>
Il demone di spawn di postfix normalmente uccide i propri processi figli dopo
1000 secondi, ma questo limite è troppo breve per il processo di greylisting.
È pertanto necessario aumentare questo valore in <path>main.cf</path>:
</p>

<pre caption="Modificare main.cf per usare il greylisting">
policy-greylist_time_limit = 3600
<comment>(Sotto smtpd_recipient_restrictions aggiungere:)</comment>
check_sender_access hash:/etc/postfix/sender_access
<comment>(Successivamente aggiungere:)</comment>
restriction_classes = greylist
greylist = check_policy_service unix:private/policy-greylist
</pre>

<warn>
Specificare <c>check_sender_access</c> DOPO <c>reject_unauth_destination</c>
altrimenti il sistema potrebbe diventare un relay di posta aperto a chiunque.
</warn>

<note>
Il database di greylisting si riempie velocemente con indirizzi fasulli.
Proteggere le ricerche di greylist con altre restrizioni (che rifiutano mittenti
o destinatari sconosciuti) aiuta in questa situazione.
</note>

<p>
Non si vuole usare il greylisting per tutti i domini, ma solo per quelli più
comunemente usati dagli spammer. Dopo tutto, il greylisting ritarda la consegna
dei messaggi di posta, pertanto è desiderabile non rallentare l'arrivo di e-mail
da domini che non siano comunemente sfruttati. Una lista dei domini più
comunemente usati dagli spammer come indirizzo del mittente può essere trovata
<uri
link="http://www.monkeys.com/anti-spam/filtering/sender-domain-validate.in">online</uri>.
Aggiungere i domini dai quali si riceve spam a
<path>/etc/postfix/sender_access</path>:
</p>

<pre caption="Formato di sender_access">
aol.com     greylist
hotmail.com greylist
bigfoot.com greylist
</pre>

<p>
Per una lista più estesa:
</p>

<pre caption="Aggiungere tutti i domini a sender_access">
# <i>wget http://www.monkeys.com/anti-spam/filtering/sender-domain-validate.in</i>
<!-- ndt: Useless Use Of Cat ;) -->
# <i>sort sender-domain-validate.in | awk {'print $1 "\t\t greylist"'} > /etc/postfix/sender_access</i>
</pre>

<p>
Adesso è necessario inizializzare il database di <path>sender_access</path>:
</p>

<pre caption="Inizializzare sender_access">
# <i>postmap /etc/postfix/sender_access</i>
</pre>

<p>
La configurazione della versione semplice del greylisting è completa.
</p>

<warn>
Questa procedura è stata testata su una macchina che gestiva migliaia di e-mail
al giorno ed il risultato è stato un disastro completo. Dopo quattro giorni la
macchina era sovraccaricata da centinaia di vecchi processi <c>greylist.pl</c>.
</warn>

</body>
</section>
<section>
<title>Configurare il greylisting migliorato con postgrey</title>
<body>

<p>
Installare il server di greylisting con un semplice <c>emerge</c>:
</p>

<pre caption="Installare postgrey">
# <i>emerge postgrey</i>
</pre>

<p>
Dopo aver installato <c>postgrey</c> bisogna modificare <path>main.cf</path>.
Le modifiche sono molto simili a quelle eseguite in occasione del precedente
metodo di greylisting.
</p>

<pre caption="Modificare main.cf per usare greylisting">
<comment>(Sotto smtpd_recipient_restrictions aggiungere:)</comment>
check_sender_access hash:/etc/postfix/sender_access
<comment>(Successivamente aggiungere:)</comment>
smtpd_restriction_classes = greylist
greylist = check_policy_service inet:127.0.0.1:10030
</pre>

<note>
Il SMTPD_POLICY_README di Postfix utilizza solo <c>restriction_classes</c>, ma
questo non sembra funzionare.
</note>

<note>
Se si vuole fare il greylisting di tutta la posta, aggiungere invece
<c>check_policy_service inet:127.0.0.1:10030</c>.
</note>

<p>
Infine, lanciare il server e aggiungerlo al runlevel adatto.
</p>

<pre caption="Lanciare postgrey">
# <i>/etc/init.d/postgrey start</i>
# <i>rc-update add postgrey default</i>
</pre>

<note>
Alcune persone vogliono che i messaggi di posta siano inviati velocemente ed in
questo caso il greylisting peggiora le prestazioni. In ogni caso, se si utilizza
un mail server di backup è possibile impostare il greylisting su di esso con
relativa sicurezza. La limitata esperienza dell'autore di questa guida
suggerisce che in questo modo è possibile fermare circa un terzo dello spam.
</note>

</body>
</section>
</chapter>

<chapter>
<title>SPF (Sender Policy Framework)</title>
<section>
<title>Introduzione</title>
<body>

<p>
Un SPF (che in inglese significa approssimativamente <e>Framework di Politiche
di Invio</e>) permette ai proprietari di un dominio di dichiarare nei propri
record DNS quali indirizzi IP sono autorizzati a mandare messaggi di posta dal
dominio stesso. Questo impedisce agli spammer di falsificare il
<c>Return-Path</c>.
</p>

<note>
Se il proprio ISP blocca tutto il traffico in ingresso sulla porta 25 e
reindirizza tutti i messaggi attraverso il proprio mail server, l'SPF non
funzionerà.
</note>

<p>
Come prima cosa, i proprietari del dominio devono creare uno speciale record
DNS, chiamato <c>TXT</c>. Un MTA con SPF abilitato può allora leggerlo e se una
e-mail è stata originata da un server che non è descritto nel record, il
messaggio può essere scartato. Ecco un esempio:
</p>

<pre caption="Record SPF di esempio">
example.com.  IN TXT  "v=spf1 a mx ptr -all"
</pre>

<p>
Il parametro <c>-all</c> suggerisce di rifiutare in modo predefinito tutta la
posta, ad eccetto di quella ricevuta dai record DNS <c>A</c>(<c>a</c>),
<c>MX</c>(<c>mx</c>) e <c>PTR</c>(<c>ptr</c>). Per ulteriori informazioni
consultare le risorse elencate in basso.
</p>

<note>
Se è necessario inoltrare le mail in uscita attraverso il proprio ISP,
aggiungere: <c>include:proprioisp.com</c>.
</note>

<p>
Spamassassin 3.0 ha il supporto per SPF, ma non è abilitato in modo predefinito;
il nuovo demone delle politiche di Postfix, invece, supporta SPF, pertanto la
guida seguirà l'installazione di quest'ultimo.
</p>

<note>
Se si vuole usare SPF con Spamassassin eseguire semplicemente
<c>emerge&nbsp;dev-perl/Mail-SPF-Query</c> e riavviare Amavisd-new.
</note>

</body>
</section>
<section>
<title>Preparativi</title>
<body>

<p>
Prima di tutto bisogna installare Postfix 2.1 come descritto in precedenza. Dopo
aver ottenuto i sorgenti, installare <path>spf.pl</path> con:
</p>

<pre caption="Installare spf.pl">
# <i>cp postfix-&lt;version&gt;/examples/smtpd-policy/spf.pl /usr/local/bin/</i>
</pre>

<note>
Il file <path>spf.pl</path> distribuito con Postfix soffre di qualche bug
sporadico, pertanto trovare al suo interno e decommentare la linea:
<c>push @HANDLERS, "sender_permitted_from"; use Mail::SPF::Query;</c>.
Inoltre, intorno alla linea 199 sostituire <c>comemnt</c> con <c>comment</c>. In
alternativa è possibile scaricare una <uri
link="http://spf.pobox.com/postfix-policyd.txt">versione di sviluppo</uri>.
</note>

<p>
Questo script in Perl necessita di alcune librerie che sono in Portage, quindi
semplici da ottenere:
</p>

<pre caption="Installare le librerie Perl richieste">
# <i>emerge Mail-SPF-Query Net-CIDR-Lite Sys-Hostname-Long</i>
</pre>

<p>
Adesso che tutto è al suo posto, è necessario configurare Postfix per utilizzare
questa nuova politica.
</p>

<pre caption="Modificare master.cf per usare SPF">
policy-spf  unix  -       n       n       -       -       spawn
   user=nobody argv=/usr/bin/perl /usr/local/bin/spf.pl
</pre>

<p>
Aggiungere il controllo per SPF in <path>main.cf</path>. Se correttamente
configurato, l'SPF non dovrebbe fare danni, pertanto è preferibile abilitarlo
per tutti i domini:
</p>

<pre caption="Modificare main.cf per utilizzare SPF">
<comment>(Sotto smtpd_recipient_restrictions aggiungere:)</comment>
check_policy_service unix:private/policy-spf
</pre>

<note>
Se si verificano problemi con SPF, ad esempio durante l'uso di <c>fetchmail</c>,
potrebbe essere necessario abilitare l'SPF soltanto per alcuni domini.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Configurare amavisd-new per l'uso di MySQL</title>
<section>
<title>Configurare MySQL</title>
<body>

<note>
Questa procedura non è stata testata per versioni di amavisd-new superiori alla
2.2. Ogni commento è ben accetto :)
</note>

<p>
Per domini di grandi dimensioni i valori predefinit configurabili in
<path>amavisd.conf</path> potrebbero non essere adatti a tutti gli utenti.
Configurando amavisd-new con supporto MySQL si possono configurare impostazioni
individuali per utenti o gruppi di utenti.
</p>

<pre caption="Creare database ed utente MySQL">
# <i>mysql -u root -p mysql</i>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 78 to server version: 4.0.18-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
mysql> <i>create database maildb;</i>
mysql> <i>GRANT INSERT,UPDATE,DELETE,SELECT ON maildb.* TO 'mail'@'localhost' IDENTIFIED BY 'password_segretissima';</i>
mysql> <i>use maildb;</i>
</pre>

<p>
Adesso che il database è stato creato è necessario creare le tabelle. Copiare e
incollare i seguenti comandi nel prompt di mysql:
</p>

<pre caption="Layout delle tabelle di MySQL">
CREATE TABLE users (
    id         int unsigned NOT NULL auto_increment,
    priority   int          NOT NULL DEFAULT '7',  -- 0 è bassa priorità
    policy_id  int unsigned NOT NULL DEFAULT '1',
    email      varchar(255) NOT NULL,
    fullname   varchar(255) DEFAULT NULL,    -- non usato da amavisd-new
    local      char(1),     -- Y/N  (campo opzionale, vedere note)
    PRIMARY KEY (id),
    KEY email (email)
    );
CREATE UNIQUE INDEX users_idx_email ON users(email);

<comment>(-- ogni indirizzo e-mail, esterno o locale, usato come mittente in 'wblist')</comment>
CREATE TABLE mailaddr (
   id         int unsigned NOT NULL auto_increment,
   priority   int          NOT NULL DEFAULT '7',  -- 0 è bassa priorità
   email      varchar(255) NOT NULL,
   PRIMARY KEY (id),
   KEY email (email)
   );
CREATE UNIQUE INDEX mailaddr_idx_email ON mailaddr(email);

<comment>(-- whitelist per destinatario e/o blacklist,</comment>
<comment>-- mette in relazione mittente e destinatario, 'wb')</comment>
(white or blacklisted sender)
CREATE TABLE wblist (
   rid        int unsigned NOT NULL,     -- destinatario: users.id
   sid        int unsigned NOT NULL,     -- mittente:    mailaddr.id
   wb         char(1) NOT NULL, -- W or Y / B or N / space=neutral
   PRIMARY KEY (rid,sid)
   );

CREATE TABLE policy (
   id               int unsigned NOT NULL auto_increment,
   policy_name      varchar(32),     -- non usato da amavisd-new
   virus_lover          char(1),     -- Y/N
   spam_lover           char(1),     -- Y/N  (campo opzionale)
   banned_files_lover   char(1),     -- Y/N  (campo opzionale)
   bad_header_lover     char(1),     -- Y/N  (campo opzionale)
   bypass_virus_checks  char(1),     -- Y/N
   bypass_spam_checks   char(1),     -- Y/N
   bypass_banned_checks char(1),     -- Y/N  (campo opzionale)
   bypass_header_checks char(1),     -- Y/N  (campo opzionale)
   spam_modifies_subj   char(1),     -- Y/N  (campo opzionale)
   spam_quarantine_to   varchar(64) DEFAULT NULL, -- (campo opzionale)
   spam_tag_level  float,  -- un punteggio alto inserisce le intestazioni spam
   spam_tag2_level float DEFAULT NULL,  -- un punteggio alto inserisce le
               -- intestazioni di 'spam dichiarato'
   spam_kill_level float,  -- un punteggio alto attiva le azioni evasive:
               -- rifiuto/scarto, quarantena, ...
               -- (soggetto all'impostazione di final_spam_destiny)
   PRIMARY KEY (id)
  );
</pre>

<note>
Se ci sono dei problemi di copia/incolla, copiare il testo altrove e cancellare
i caratteri non necessari.
</note>

<note>
Le ricerche mirate a trovare un indirizzo e-mail sono eseguite sugli indirizzi
grezzi (rfc2821-unquoted e senza parentesi), ad esempio:
<c>John "Funny" Smith@example.com</c>
</note>

<note>
Le ricerche sono eseguite seguendo quest'ordine: <c>SQL</c>, <c>LDAP</c>,
<c>hash</c>, <c>ACL</c>, <c>regexp</c>, <c>constant</c>. Il primo risultato
utile (non <c>undef/NULL</c>) interrompe la ricerca.
</note>

<p>
Se si vuole usare whitelisting o blacklisting bisogna inserire gli indirizzi di
mittente e destinatario in <c>mailaddr</c>; in seguito bisogna impostare una
relazione tra i due in <c>wblist</c> e specificare se si tratta di whitelisting
(<c>W</c>) o blacklisting (<c>B</c>).
</p>

<p>
Adesso che sono state create le tabelle, inserire un utente ed una politica di
prova:
</p>

<pre caption="Creare utente e politica di prova">
INSERT INTO users
   SET
      id         =1,
      priority   =9,
      policy_id  =1,
      email      ="johndoe@example.com",
      fullname   ="John Doe",
      local      ="Y";

INSERT INTO policy
   SET
      id                     =1,
      policy_name            ="Test policy 1",
      virus_lover            ="N",
      spam_lover             ="N",
      banned_files_lover     ="N",
      bad_header_lover       ="N",
      bypass_virus_checks    ="N",
      bypass_spam_checks     ="N",
      bypass_banned_checks   ="N",
      bypass_header_checks   ="N",
      spam_modifies_subj     ="N",
      spam_quarantine_to     =NULL,
      spam_tag_level         =-50.0,
      spam_tag2_level        =7.0,
      spam_kill_level        =10.0;
</pre>

<note>
Modificare le impostazioni di esempio a seconda del proprio ambiente di
funzionamento.
</note>

<note>
<c>local</c> dovrebbe essere impostato ad <c>Y</c>, altrimenti la mail non verrà
sottoposta a controllo per spam.
</note>

<p>
Queste istruzioni inseriscono un utente ed una politica di prova. Modificare
questi esempi per soddisfare le proprie necessità. Una spiegazione più
approfondita della configurazione può essere reperita in
<path>amavisd.conf</path>.
</p>

</body>
</section>
<section>
<title>Configurare amavisd per usare MySQL</title>
<body>

<p>
Adesso che MySQL è pronto, è necessario dire ad amavis di usarlo:
</p>

<pre caption="Modificare amavisd.conf">
@lookup_sql_dsn =
   ( ['DBI:mysql:maildb:host1', 'mail', 'password_segretissima']  );

<comment>(Per chiarezza deommentare l'impostazione predefinita)</comment>
$sql_select_policy = 'SELECT *,users.id FROM users,policy'.
   ' WHERE (users.policy_id=policy.id) AND (users.email IN (%k))'.
   ' ORDER BY users.priority DESC';

<comment>(Per ottenere white/blacklisting in base al mittente)</comment>
   $sql_select_white_black_list = 'SELECT wb FROM wblist,mailaddr'.
     ' WHERE (wblist.rid=?) AND (wblist.sid=mailaddr.id)'.
     '   AND (mailaddr.email IN (%k))'.
     ' ORDER BY mailaddr.priority DESC';
</pre>
</body>

</section>
</chapter>

<chapter>
<title>Configurare Spamassassin per usare MySQL</title>
<section>
<body>

<p>
A partire da Spamassassin 3.0 è possibile conservare le informazioni per Bayes
e l'AWL in un database MySQL. Verrà utilizzato proprio MySQL come backend in
quanto esso è in genere più performante degli altri database. Inoltre, usare
MySQL per tutti i dati rende la manutenzione del sistema molto più semplice.
</p>

<p>
Come prima cosa, creare il nuovo utente MySQL e le tabelle necessarie.
</p>

<pre caption="Creare utente e database MySQL">
# <i>mysql -u root -p mysql</i>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 78 to server version: 4.0.18-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
mysql> <i>create database dbname;</i>
mysql> <i>GRANT INSERT,UPDATE,DELETE,SELECT ON dbname.* TO 'dbuser'@'localhost' IDENTIFIED BY 'altra_password_segretissima';</i>
mysql> <i>use dbname;</i>
</pre>

<p>
Adesso che il database è stato creato, verranno aggiunte le tabelle necessarie.
Copiare e incollare questo testo nel prompt di mysql:
</p>

<pre caption="Layout delle tabelle MySQL">
      CREATE TABLE bayes_expire (
          id                    int(11)         NOT NULL default '0',
          runtime               int(11)         NOT NULL default '0',
          KEY bayes_expire_idx1 (id)
          ) TYPE=MyISAM;

      CREATE TABLE bayes_global_vars (
          variable              varchar(30)     NOT NULL default '',
          value                 varchar(200)    NOT NULL default '',
          PRIMARY KEY           (variable)
          ) TYPE=MyISAM;

      INSERT INTO bayes_global_vars VALUES ('VERSION','3');

      CREATE TABLE bayes_seen (
          id                    int(11)         NOT NULL default '0',
          msgid                 varchar(200) binary NOT NULL default '',
          flag                  char(1)         NOT NULL default '',
          PRIMARY KEY           (id,msgid)
          ) TYPE=MyISAM;

      CREATE TABLE bayes_token (
          id                    int(11)         NOT NULL default '0',
          token                 char(5)         NOT NULL default '',
          spam_count            int(11)         NOT NULL default '0',
          ham_count             int(11)         NOT NULL default '0',
          atime                 int(11)         NOT NULL default '0',
          PRIMARY KEY           (id, token),
          INDEX                 (id, atime)
          ) TYPE=MyISAM;

      CREATE TABLE bayes_vars (
          id                    int(11)         NOT NULL AUTO_INCREMENT,
          username              varchar(200)    NOT NULL default '',
          spam_count            int(11)         NOT NULL default '0',
          ham_count             int(11)         NOT NULL default '0',
          token_count           int(11)         NOT NULL default '0',
          last_expire           int(11)         NOT NULL default '0',
          last_atime_delta      int(11)         NOT NULL default '0',
          last_expire_reduce    int(11)         NOT NULL default '0',
          oldest_token_age      int(11)         NOT NULL default '2147483647',
          newest_token_age      int(11)         NOT NULL default '0',
          PRIMARY KEY           (id),
          UNIQUE bayes_vars_idx1 (username)
          ) TYPE=MyISAM;

      CREATE TABLE awl (
          username              varchar(100)    NOT NULL default '',
          email                 varchar(200)    NOT NULL default '',
          ip                    varchar(10)     NOT NULL default '',
          count                 int(11)         default '0',
          totscore              float           default '0',
          PRIMARY KEY           (username,email,ip)
          ) TYPE=MyISAM;
</pre>

<impo>
La query con <c>INSERT</c> è necessaria per il corretto funzionamento di
Spamassassin.
</impo>

<note>
Questi script sono disponibili anche nell'archivio dei file sorgente, con i nomi
<path>awl_mysql.sql</path> e <path>bayes_mysql.sql</path>.
</note>

</body>
</section>
<section>
<title>Configurare Spamassassin per l'uso del backend MySQL</title>
<body>

<p>
Se si ha un vecchio database Bayesiano e si vuole conservarlo, seguire queste
istruzioni:
</p>

<pre caption="Convertire i dati Bayes da un database DBM">
<i>su - amavis</i>
<i>sa-learn --sync</i>
<i>sa-learn --backup > backup.txt</i>
<i>sa-learn --restore backup.txt</i>
</pre>

<note>
Attenzione che l'ultimo passo dovrebbe essere eseguito solo DOPO l'aggiornamento
del database MySQL e del file <path>secrets.cf</path>.
</note>

<p>
Dare a Spamassassin le informazioni richieste:
</p>

<pre caption="Modificare /etc/mail/spamassassin/secrets.cf">
<comment>(Dice a Spamassassin di usare MySQL per il filtro bayesiano)</comment>
bayes_store_module              Mail::SpamAssassin::BayesStore::SQL
bayes_sql_dsn                   DBI:mysql:sa_bayes:localhost:3306
bayes_sql_username              dbname
bayes_sql_password              altra_password_segretissima

<comment>(Dice a Spamassassin di usare MySQL per i dati AWL)</comment>
auto_whitelist_factory          Mail::SpamAssassin::SQLBasedAddrList
user_awl_dsn                    DBI:mysql:sa_bayes:localhost:3306
user_awl_sql_username           dbname
user_awl_sql_password           altra_password_segretissima
</pre>

<p>
Cambiare i permessi al file per garantire la sicurezza necessaria:
</p>

<pre caption="Cambiare i permessi">
# <i>chmod 400 /etc/mail/spamassassin/secrets.cf</i>
</pre>

<note>
Per creare una password molto resistente ad attacchi, usare <c>emerge
app-admin/makepasswd</c> e <c>makepasswd -chars=8</c>
</note>

<p>
Adesso basta semplicemente eseguire <c>/etc/init.d/amavisd restart</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Risoluzione dei problemi</title>
<section>
<title>Amavisd-new</title>
<body>

<p>
Per risolvere i problemi relativi a Amavisd-new bisogna innanzitutto fermarlo
con <c>/etc/init.d/amavisd stop</c> e poi eseguirlo manualmente in primo piano
con <c>amavisd debug</c>; analizzare eventuali anomalie nell'output.
</p>

</body>
</section>
<section>
<title>Spamassassin</title>
<body>

<p>
Per risolvere i problemi con Spamassassin, è possibile filtrare una e-mail con
<c>spamassassin -D &lt; mail</c>. Per assicurarsi che le intestazioni siano
intatte, è possibile spostarla su di un'altra macchina usando IMAP.
</p>

<note>
Per eseguire queste operazioni è necessario abilitare il login per l'utente
<c>amavis</c>, cambiando la shell di login corrente in <path>/etc/passwd</path>
al valore <path>/bin/bash</path>.
</note>

<p>
È possibile ottenere le stesse informazioni, in aggiunta ad altri dati, usando
<c>amavisd debug-sa</c>.
</p>

</body>
</section>
<section>
<title>Come ottenere aiuto</title>
<body>

<p>
Un buon punto di partenza per ottenere aiuto è la mailing list amavis-user.
Prima di lasciare un messaggio come una domanda, è raccomandabile cercare <uri
link="http://marc.theaimsgroup.com/?l=amavis-user">nell'archivio della
lista</uri>. Se non si trova la risposta alla propria domanda, è possibile
iscriversi alla mailing list da <uri
link="https://lists.sourceforge.net/lists/listinfo/amavis-user">qui</uri>.
</p>

<p>
Se il problema è specifico per SpamAssassin, DCC, Razor, o Postfix, fare
riferimento alle rispettive pagine elencate in basso.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Risorse (in lingua inglese)</title>
<section>
<title>Per ulteriori informazioni</title>
<body>

<ul>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/INSTALL">File INSTALL di
    Amavisd-new</uri>
  </li>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/README.postfix">File LEGGIMI
    di Amavisd-new e Postfix</uri>
  </li>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/amavisd-new-docs.html#pbanks">
    Documentazione sulle politiche di Amavisd-new</uri>
  </li>
  <li>
    <uri link="http://spamassassin.apache.org/full/3.0.x/dist/sql/README">File
    LEGGIMI per l'uso di SQL con Spamassassin</uri>
  </li>
  <li><uri link="http://www.greylisting.org">Greylisting</uri></li>
  <li>
    <uri link="http://www.postfix.org/FILTER_README.html">Postfix
    SMTPD_POLICY_README</uri >
  </li>
  <li>
    <uri link="http://www.unixwiz.net/techtips/postfix-HELO.html">Bloccare gli
    spammer con Postfix ed i controlli sui comandi HELO</uri>
  </li>
  <li>
    <uri link="http://www.linuxjournal.com/article.php?sid=7327">Introduzione a
    SPF</uri>
  </li>
  <li>
    <uri link="http://jimsun.linxnet.com/misc/postfix-anti-UCE.txt">Cheat Sheet
    contro l'UCE, per Postfix, a cura di Jim Seymour</uri>
  </li>
</ul>

</body>
</section>
<section>
<title>Risorse generiche</title>
<body>

<ul>
  <li><uri link="http://www.spamassassin.org">Spamassassin</uri></li>
  <li><uri link="http://www.ijs.si/software/amavisd/">Amavisd-new</uri></li>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/amavisd-new-docs.html">
    Documentazione per Amavisd-new</uri>
  </li>
  <li><uri link="http://razor.sourceforge.net/">Vipuls's Razor</uri></li>
  <li><uri link="http://pyzor.sourceforge.net/">Pyzor</uri></li>
  <li>
    <uri link="http://www.rhyolite.com/anti-spam/dcc/">DCC (Distributed Checksum
    Clearinghouse)</uri>
  </li>
  <li>
    <uri link="http://www.renaissoft.com/projects/maia/">Maia Mailguard</uri>
  </li>
</ul>

</body>
</section>

<section>
<title>Altre guide</title>
<body>

<ul>
  <li>
    <uri link="http://www.flakshack.com/anti-spam/">Un sicuro gateway di posta
    con anti-SPAM, usando OpenBSD, Postfix, Amavisd-new, SpamAssassin, Razor e
    DCC</uri>
  </li>
</ul>

</body>
</section>
</chapter>

</guide>