<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/xorg-config.xml,v 1.29 2012/01/21 13:43:10 swift Exp $ -->

<guide lang="it">
<title>Guida alla configurazione di X server</title>

<author title="Autore">
  <mail link="swift"/>
</author>
<author title="Autore">
  <mail link="nightmorph"/>
</author>
<author title="Traduzione">
  <mail link="richard77@libero.it">Federico Della Ricca</mail>
</author>

<abstract>
Xorg è il server X Window che permette agli utenti di avere a disposizione un
ambiente grafico. Questa guida spiega cos'è Xorg, come installarlo e il
significato delle varie opzioni di configurazione.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>10</version>
<date>2011-09-02</date>

<chapter>
<title>Cos'è il server X Window?</title>
<section>
<title>Interfaccia grafica vs. riga di comando</title>
<body>

<p>
L'utente medio può essere intimorito al pensiero di dovere digitare i comandi.
Perché non dovrebbe essere in grado di puntare e cliccare a suo piacimento
nell'ambito della libertà tipica di Gentoo (e in generale di Linux)? Ovviamente,
questo è possibile! Linux offre una grande varietà di comode interfacce utente e
ambienti grafici che è possibile aggiungere ad un'installazione esistente.
</p>

<p>
Una delle più grandi sorprese per gli utenti è che l'interfaccia utente non è
nient'altro che un programma che viene eseguito nel sistema. <e>Non è</e> parte
del kernel di Linux né di altre parti fondamentali del sistema. Essa è un
potente mezzo per sfruttare le capacità grafiche della propria workstation.
</p>

<p>
Data l'importanza degli standard, ne esiste uno per disegnare e muovere le
finestre sullo schermo, interagire con l'utente tramite tastiera e mouse e
gestire altri importanti aspetti di base. Questo standard si chiama <e>X Window
System</e>, solitamente abbreviato in <e>X11</e> o anche solo <e>X</e>. Viene
utilizzato in Unix, Linux e in sistemi operativi tipo Unix in tutto il mondo.
</p>

<p>
L'applicazione che fornisce agli utenti Linux la capacità di eseguire interfacce
utenti grafiche e utilizza lo standard X11 è Xorg-X11, un derivato del progetto
XFree86. XFree86 ha deciso di utilizzare una licenza che potrebbe essere non
compatibile con la licenza GPL, per cui si raccomanda l'uso di Xorg. Il Portage
ufficiale non contiene più nessuna versione di XFree86.
</p>

</body>
</section>
<section>
<title>Il progetto Xorg</title>
<body>

<p>
Il progetto <uri link="http://www.x.org">X.org</uri> ha creato e mantiene una
implementazione open-source liberamente ridistribuibile dello standard X11. Esso
è un'infrastruttura desktop open-source basata su X11.
</p>

<p>
Xorg fornisce un'interfaccia fra l'hardware e il software grafico che si vuole
utilizzare. Oltre a ciò, Xorg è completamente trasparente alla rete, nel senso
che è possibile eseguire un programma su un sistema mentre lo si visualizza su
un altro.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installare Xorg</title>
<section>
<body>

<p>
Prima di poter installare Xorg, bisogna preparare il proprio sistema. Pe prima
cosa, si deve configurare il kernel per il supporto ai dispositivi di input e
alle schede video. Quindi va modificato il file <path>/etc/make.conf</path> in
modo che vengano compilati ed installati i driver e i pacchetti di Xorg
corretti.
</p>

</body>
</section>
<section>
<title>Supporto per i driver per i dispositivi di input</title>
<body>


<p>
Come impostazione predefinita, Xorg usa <c>evdev</c>, un driver generico per i
dispositivi di input. Il supporto per <c>evdev</c> va attivato modificando la
configurazione del kernel. (Leggere la <uri
link="/doc/it/kernel-config.xml">Guida alla configurazione del kernel Linux in
Gentoo</uri> per informazione su come configurare il proprio kernel).
</p>

<pre caption="Abilitare evdev nel kernel">
Device Drivers ---&gt;
  Input device support ---&gt;
  &lt;*&gt;  Event interface
</pre>

</body>
</section>
<section>

<title>Kernel modesetting</title>
<body>

<p>
I driver grafici più recenti dipendono dal kernel modesetting (KMS). KMS
permette un migliore boot grafico con meno sfarfallii, un più rapido cambio di
utente, una console con framebuffer incorporata, la possibilitò di passare
rapidamente fra console e Xorg e altre caratteristiche. KMS è incompatibile con
i driver per framebuffer più vecchi, che devono rimanere <b>disabilitati</b>
nella configurazione del proprio kernel.
</p>

<p>
Per prima cosa va preparato il kernel per KMS. Questo fa fatto indipendentemente
dal driver video per Xorg che si usa.
</p>

<pre caption="Configurare i framebuffer">
Device Drivers ---&gt;
  Graphics support ---&gt;
    Support for frame buffer devices ---&gt;
    <comment>(Disabilitare tutti i driver, inclusi VGA, Intel, nVidia, e ATI)</comment>

    <comment>(Più in basso, abilitare il supporto base alla console, che è quello usato da KMS)</comment>
    Console display driver support ---&gt;
      &lt;*&gt;  Framebuffer Console Support
</pre>

<p>
Dopo di ciò, configurare il proprio kernel per usare il driver appropriato per
la propria scheda video. Intel, nVidia, e AMD/ATI sono le schede più comuni, seguire
quindi i comandi descritti qui di seguito per la propria scheda.
</p>

<p>
Per schede Intel:
</p>

<pre caption="Impostazioni per Intel">
Device Drivers ---&gt;
  Graphics support ---&gt;
    /dev/agpgart (AGP Support) ---&gt;
    &lt;*&gt;  Intel 440LX/BX/GX, I8xx and E7x05 chipset support
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) ---&gt;
    &lt;*&gt;  Intel 830M, 845G, 852GM, 855GM, 865G (i915 driver)
         i915 driver
    [*]    Enable modesetting on intel by default
</pre>

<p>
Per schede nVidia:
</p>

<pre caption="Impostazioni per nVidia">
<comment>(Enable DRM)</comment>
Device Drivers ---&gt;
  Graphics support ---&gt;
  &lt;*&gt;  Direct Rendering Manager ---&gt;

<comment>(Nouveau è al momento nella sezione "Staging drivers")</comment>
Device Drivers ---&gt;
  Staging drivers ---&gt;
  [ ]  Exclude Staging drivers from being built
  &lt;*&gt;    Nouveau (nVidia) cards
</pre>

<p>
Per le schede AMD/ATI recenti (<uri link="/doc/it/ati-faq.xml">da RadeonHD 2000
in poi</uri>), bisogna installare <c>radeon-ucode</c> o <c>linux-firmware</c>. 
Una volta installato uno di questi pacchetti, configurare così il proprio kernel:
</p>

<pre caption="Impostazioni per AMD/ATI">
<comment>(Inpostare il kernel per usare il firmware radeon-ucode)</comment>
Device Drivers ---&gt;
  Generic Driver Options ---&gt;
  [*]  Include in-kernel firmware blobs in kernel binary
  <comment># Schede delle serie RadeonHD 2000, 3000, e 4000:</comment>
  (radeon/R600_rlc.bin radeon/R700_rlc.bin) External firmware blobs
  <comment># Schede RadeonHD 5000 (Evergreen) e più recenti:</comment>
  (radeon/CEDAR_me.bin radeon/CEDAR_pfp.bin radeon/CEDAR_rlc.bin
   radeon/CYPRESS_me.bin radeon/CYPRESS_pfp.bin radeon/CYPRESS_rlc.bin
   radeon/JUNIPER_me.bin radeon/JUNIPER_pfp.bin radeon/JUNIPER_rlc.bin
   radeon/REDWOOD_me.bin radeon/REDWOOD_pfp.bin
   radeon/REDWOOD_rlc.bin) External firmware blobs
  <comment># Schede Radeon HD 6000 (Fusion APU):</comment>
  (radeon/PALM_me.bin radeon/PALM_pfp.bin radeon/SUMO2_me.bin
   radeon/SUMO2_pfp.bin radeon/SUMO_me.bin radeon/SUMO_pfp.bin
   radeon/SUMO_rlc.bin) External firmware blobs
  <comment># Schede Radeon HD 6400-6900 (Northern Island):</comment>
  (radeon/BARTS_mc.bin radeon/BARTS_me.bin radeon/BARTS_pfp.bin
   radeon/BTC_rlc.bin radeon/CAICOS_mc.bin radeon/CAICOS_me.bin
   radeon/CAICOS_pfp.bin radeon/CAYMAN_mc.bin radeon/CAYMAN_me.bin
   radeon/CAYMAN_pfp.bin radeon/CAYMAN_rlc.bin radeon/TURKS_mc.bin
   radeon/TURKS_me.bin radeon/TURKS_pfp.bin) External firmware blobs
    (/lib/firmware/) Firmware blobs root directory

<comment>(Abilitare il supporto KMS per schede Radeon)</comment>
Device Drivers ---&gt;
  Graphics support ---&gt;
  &lt;*&gt;  Direct Rendering Manager ---&gt;
  &lt;*&gt;    ATI Radeon
  [*]      Enable modesetting on radeon by default
</pre>

<note>
Schede Radeon più vecchie (serie X1900 e precedenti) non necessitano né del
pacchetto <c>radeon-ucode</c> né di alcuna configurazione per il firmware.
Basta abilitare il Direct Rendering Manager e il modesetting per ATI Radeon.
</note>

<p>
Ora che si è impostato KMS, si può continuare con la prossima sezione e
praparare il file <path>/etc/make.conf</path>.
</p>

</body>
</section>

<section>
<title>configurazione di make.conf</title>
<body>

<p>
Dopo la preparazione del kernel ma prima di installare Xorg vanno configurate
 due importanti variabili nel file <path>/etc/make.conf</path>.
</p>

<p>
La prima variabile è <c>VIDEO_CARDS</c>. Serve a specificare i driver video
che si vogliono usare e di solito dipende dal tipo e marca della
propria scheda video. Le impostazioni più comuni sono <c>nouveau</c> for le
schede nVidia e <c>radeon</c> per quelle ATI. Entrambi hanno driver
open-source ben supportati e attivamente sviluppati.

</p>


<note>
Si potrebbe inoltre provare ad usare i driver proprietari per nVidia e AMD/ATI,
rispettivamente <c>nvidia</c> e <c>fglrx</c>. Comunque, la configurazione dei
driver proprietari trascende gli scopi di questa guida. Fare riferimento alla
<uri link="/doc/it/nvidia-guide.xml">Guida nVidia per Gentoo Linux</uri> e alle
<uri link="/doc/it/ati-faq.xml">Domande frequenti (FAQ) su ATI in Gentoo
Linux</uri>. Se si è incerti su quale drivere scegliere, fare riferimento a
queste guide per maggiori informazioni.
</note>

<p>
Il driver <c>intel</c> può essere usato per desktop o laptop con grafica
integrata Intel.
</p>

<note>
<c>VIDEO_CARDS</c> può contenere più driver, separati da uno spazio.
</note>

<p>
La seconda variabile è <c>INPUT_DEVICES</c> e serve per determinare i driver da
compilare per i dispositivi di input. Nella maggior parte dei casi il valore
<c>evdev</c> dovrebbe funzionare. Se si usano dispositivi di input ulteriori,
come ad esempio un touchpad Synaptics per un portatile, assicurarsi di
aggiungerli a <c>INPUT_DEVICES</c>.
</p>

<p>
A questo punto si devono decidere i driver da usare e modificare di conseguenza
il file <path>/etc/make.conf</path>:
</p>

<pre caption="Righe di esempio per make.conf">
<comment>(Per attivare il supporto a mouse, tastiera e touchpad Synaptic)</comment>
INPUT_DEVICES="evdev synaptics"
<comment>(Per schede Nvidia)</comment>
VIDEO_CARDS="noveau"
<comment>(Per schede AMD/ATI)</comment>
VIDEO_CARDS="radeon"
</pre>

<p>
Se i valori suggeriti non funzionano, si dovrebbe eseguire <c>emerge -pv
xorg-drivers</c>, controllare tutte le opzioni disponibili e scegliere quelle
attinenti al proprio sistema. L'esempio seguente si riferisce ad un sistema con
mouse, tastiera, touchpad Synaptic e scheda video Radeon.
</p>

<pre caption="Visualizzazione dei valori disponibili dei driver">
 <i>emerge -pv xorg-drivers</i>

These are the packages that would be merged, in order:

Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage
-siliconmotion -sis -sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb)
(-sunleo) (-suntcx) -tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox
-vmware (-voodoo) (-xgi)" 0 kB
</pre>

<p>
Dopo aver impostato tutte le variabili necessarie installare il pacchetto Xorg.
</p>

<pre caption="Installare Xorg">
<comment>(Assicurarsi che udev sia tra le proprie USE flags)</comment>
# <i>echo "x11-base/xorg-server udev" >> /etc/portage/package.use</i>
<comment>(Installare Xorg)</comment>
# <i>emerge xorg-server</i>
</pre>

<note>
E' possibile installare il metapacchetto <c>xorg-x11</c> invece del più leggero
<c>xorg-server</c>. Funzionalmente i due pacchetti sono equivalenti. Tuttavia il
pacchetto <c>xorg-x11</c> installa anche molti altri pacchetti probabilemente
non richiesti, come un enorme assortimenti di caratteri (font) per un gran
numero di lingue. Questi pacchetti non sono necessari per avere un desktop
funzionante.
</note>

<p>
Quando l'installazione è terminata, sarà necessario reinizializzare alcune
variabili d'ambiente prima di continuare:
</p>

<pre caption="Reinizializzare le variabili d'ambiente">
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Configurare Xorg</title>
<section>
<body>

<p>
X server è progettato per funzionare già da subito, senza doverne modificare
 manualmente i file di configurazione. Dovrebbe individuare e configurare
 periferiche come monitor, tastiera e mouse.
</p>

<p>
Per prima cosa, provare a <uri link="#using_startx">lanciare X</uri> senza
modificare nessun file di configurazione. Se Xorg non parte, o se c'è
qualche altro problema, allora è necessario configurare manualmente
Xorg come mostrato nella prossima sezione.
</p>

</body>
</section>
<section>
<title>La directory xorg.conf.d</title>
<body>


<note>
Configurare i file in <path>xorg.conf.d</path> va visto come un'opzione da "ultima
spiaggia". Se possibile è consigliato eseguire Xorg senza particolari configurazioni.
Se tuttavia non si riesce ad ottenere una configurazione funzionante, continuare a leggere.
</note>


<p>
I file di configurazione di Xorg sono memorizzati in <path>/etc/X11/xorg.conf.d</path>.
A ciascun file è assegnato un nome univoco e termina con <path>.conf</path>.
Se il nome del file inizia con un numero, allora Xorg leggerà i file seguendo
l'ordine numerico. <path>10-evdev.conf</path> sarà letto prima di 
<path>20-synaptics.conf</path>, e così via. Non è obbligatorio assegnargli un
numero, ma potrebbe aiutare ad organizzarli.
</p>

<note>
Xorg fornisce configurazioni di esempio in 
<path>/usr/share/doc/xorg-server-${version}/xorg.conf.example.bz2</path>.
È possibile utilizzarli per creare i propri file di configurazione in
<path>/etc/X11/xorg.conf.d/</path>. Gli esempi sono ampiamente commentati,
ma se si necessità di ulteriore documentazione riguardo alla sintassi,
leggere <c>man xorg.conf</c>. Altri esempi possono essere trovati nel
capitolo <uri link="#resources">Risorse</uri> alla fine di questa guida.
</note>

</body>
</section>

<section id="using_startx">
<title>Usare startx</title>
<body>

<p>
Eseguire l'X server, facendolo partire con il comando <c>startx</c>.
<c>startx</c> è uno script che fa partire una <c>X Session</c> (sessione di X,
NdT); ovvero esegue l'X Server e inoltre lancia alcune applicazioni grafiche che
si appoggiano all'X Server. <c>startx</c> decide che applicazioni lanciare sulla
base delle seguenti regole:
</p>

<ul>
  <li>
    Se nella home dell'utente esiste un file chiamato <path>.xinitrc</path>,
    vengono eseguiti i comandi in esso contenuti.
  </li>
  <li>
    In alternativa, viene letto il contenuto della variabile d'ambiente XSESSION
    ed eseguita la sessione corrispondente fra quelle definite nella directory
    <path>/etc/X11/Sessions/</path> (è possibile impostare il valore di XSESSION
    in <path>/etc/env.d/90xsession</path> per assegnarle un valore predefinito
    per tutti gli utenti del sistema). Per esempio, come utente root, eseguire
    <c>echo XSESSION="Xfce4" &gt; /etc/env.d/90xsession</c>. In questo modo
    verrà creato il file <path>90xsession</path> ed impostata la sessione X
    predefinita a <uri link="/doc/it/xfce-config.xml">Xfce</uri>. Ricordarsi
    di eseguire <c>env-update</c> dopo aver modificato <path>90xsession</path>.
  </li>
</ul>

<pre caption="Far partire X">
# <i>startx</i>
</pre>

<p>
Se non si ha ancora installato un gestore di finestre, tutto quella che si
vedrà sarà solamente uno schermo nero. Siccome ciò può essere segno di qualche
malfunzionamento, è possibile installare <c>twm</c> e <c>xterm</c> <e>solamente
per testare X</e>.
</p>

<p>
Dopo aver installato questi due programmi, eseguire nuovamente <c>startx</c>.
Dovrebbero apparire alcune finestre di <c>xterm</c>, semplificando la verifica del
corretto funzionamento di X. Una volta soddisfatti dei risultati, eseguire
<c>emerge --unmerge twm xterm</c> come utente root, per rimuovere questi
pacchetti di test, in quanto non sono necessari una volta impostato un ambiente
desktop appropriato.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Modificare xorg.conf</title>
<section>
<title>Configurare la Risoluzione</title>
<body>

<p>
Se non si è soddisfatti della risoluzione, è necessario controllare due sezioni
nella propria configurazione in <path>xorg.conf.d</path>. Per prima cosa vi è la
sezione <e>Screen</e> che elenca le risoluzioni a cui l'X server verrà eseguito.
Questa sezione potrebbe non elencare nessuna risoluzione. In questo caso, Xorg valuta le
risoluzioni sulla base delle informazioni presenti nella seconda sezione,
<e>Monitor</e>.
</p>

<p>
Procedere con il cambio della risoluzione. Nell'esempio che segue da
<path>/etc/X11/xorg.conf.d/40-monitor.conf</path> viene aggiunta una linea 
<c>PreferredMode</c> in modo che l'X server parta in modo predefinito con la 
risoluzione di 1440x900 a 24 bit. 
Il valore di <c>Option</c> nella sezione <c>Device</c> deve corrispondere al 
nome per proprio monitor (<c>DVI-0</c>), che può essere ottenuto eseguendo 
<c>xrandr</c>. Bisogna installarlo (<c>emerge xrandr</c>) per poterlo usare. 
L'argomento dopo il nome del monitor (nella sezione <c>Device</c>) deve corrispondere 
al valore del parametro <c>Identifier</c> nella sezione <c>Monitor</c>.
</p>

<pre caption="Modificare la sezione Monitor">
# <i>nano -w /etc/X11/xorg.conf.d/40-monitor.conf</i>

Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
</pre>

<p>
Eseguendo X (<c>startx</c>) esso utilizza ora la risoluzione desiderata.
</p>

</body>
</section>
<section>
<title>Monitor multipli</title>
<body>

<p>
E' possbile configurare più di un monitor in <path>/etc/X11/xorg.conf.d</path>.
E' sufficiente assegnare un nome a ogni monitor, quindi specificare la sua
posizione fisica, come ad esempio "RighOf" (a destra di) or "Above" (Sopra a)
rispetto a un altro monitor.
L'esempio che segue mostra come configurare un monitor VGA e uno DVI, con il
monitor VGA sulla parte destra dello schermo:
</p>

<pre caption="Configurare monitor multipli">
# <i>nano -w /etc/X11/xorg.conf.d/40-monitor.conf</i>

Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection

Section "Monitor"
  Identifier "DVI screen"
EndSection

Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
</pre>

</body>
</section>
<section>
<title>Configurare la Tastiera</title>
<body>

<p>
Per configurare X per l'utilizzo di una tastiera internazionale (non americana,
NdT), si deve semplicemente creare l'appropriato file di configurazione in
<path>/etc/X11/xorg.conf.d/</path>. Questo esempio mostra la configurazione
di una tastiera italiana:
</p>

<pre caption="Usare una tastiera internazionale">
 # <i>nano -w /etc/X11/xorg.conf.d/30-keyboard.conf</i>
 
 Section "InputClass"
	Identifier "keyboard-all"
	Driver "evdev"
	Option "XkbLayout" "us,it"
	Option "XkbModel" "logitech_g15"
	Option "XkbRules" "xorg"
	Option "XkbOptions" "grp:alt_shift_toggle,grp:switch,grp_led:scroll,compose:rwin,terminate:ctrl_alt_bksp"
	Option "XkbVariant" ",qwerty"
	MatchIsKeyboard "on"
 EndSection
</pre>

<p>
Il comando "terminate" (<c>terminate:ctrl_alt_bksp</c>) permette di chiudere
la sessione di X usando la combinazione di tasti Ctrl-Alt-Backspace.
Questo in ogni caso causerà un'uscita da X brutale -- qualcosa che non
sempre si desidera. Può essere utile quando dei programmi bloccano
completamente la visualizzazione, o quando si sta configurando o
modificando l'ambiente di Xorg. Fare attenzione quando si termina
l'ambiente desktop con questa combinazione di tasti -- la maggior parte
dei programmi non apprezza quando viene chiusa in questa maniera, e si
potrebbe perdere parte (o tutto) del materiale su cui si stava lavorando.
</p>

</body>
</section>
<section>
<title>Messa a punto finale</title>
<body>

<p>
Eseguire <c>startx</c> e gioire del risultato!. Congratulazione, ora (si spera)
il proprio sistema ha un ambiente X funzionante.
Il prossimo passo è di installare un window manager con più funzioni, o un
ambiente desktop come KDE o GNOME, ma questo esula dallo scopo di questa guida.
Informazioni riguardo all'installazione di questi ambienti desktop possono
essere trovate in <uri link="/doc/it/?catid=desktop">Risorse Documentazione 
Desktop Gentoo</uri>
</p>

</body>
</section>
</chapter>

<chapter id="resources">
<title>Risorse</title>
<section>
<title>Creare e modificare i file di configurazione</title>
<body>

<p>
Per prima cosa, <c>man xorg.conf</c> e <c>man evdev</c> forniscono una veloce
ma completa guida sulla sintassi utilizzata da questi file di configurazione.
È opportuno averli aperti su un altro terminale mentre si modificano
i file di configurazione.
</p>

<p>
Ci sono molte risorse online sulla modifica dei file di configurazione in 
<path>/etc/X11/</path>. Qui ne vengono riportate solo alcune, 
utilizzare <uri link="http://www.google.com">Google</uri> per trovarne
altre.
</p>


</body>
</section>

<section>
<title>Altre risorse</title>
<body>

<p>
Informazioni aggiuntive sull'installazione e configurazione dei vari ambienti
grafici e delle applicazioni si trovano nella sezione <uri
link="/doc/it/?catid=desktop">Documentazione Desktop Gentoo</uri> della nostra
documentazione.
</p>
<p>
Se si sta effettuando l'aggiornamento a xorg-server-1.9 da una versione
precedente, assicurarsi di leggere la corrispondente <uri
link="/proj/it/desktop/x/x11/xorg-server-1.9-upgrade-guide.xml">Guida
all'aggiornamento</uri>.
</p>

<p>
X.org fornisce molte <uri link="http://www.x.org/wiki/FAQ">FAQs</uri>
sul loro sito web, in aggiunta alla loro documentazione.
</p>

</body>
</section>
</chapter>
</guide>
