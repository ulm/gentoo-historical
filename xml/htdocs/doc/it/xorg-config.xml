<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/xorg-config.xml,v 1.28 2010/11/10 20:07:41 scen Exp $ -->

<guide lang="it">
<title>Guida alla configurazione di X server</title>

<author title="Autore">
  <mail link="swift"/>
</author>
<author title="Autore">
  <mail link="nightmorph"/>
</author>
<author title="Traduzione">
  <mail link="richard77@libero.it">Federico Della Ricca</mail>
</author>

<abstract>
Xorg è il server X Window che permette agli utenti di avere a disposizione un
ambiente grafico. Questa guida spiega cos'è Xorg, come installarlo e il
significato delle varie opzioni di configurazione.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>4</version>
<date>2010-10-25</date>

<chapter>
<title>Cos'è il server X Window?</title>
<section>
<title>Interfaccia grafica vs. riga di comando</title>
<body>

<p>
L'utente medio può essere intimorito al pensiero di dovere digitare i comandi.
Perché non dovrebbe essere in grado di puntare e cliccare a suo piacimento
nell'ambito della libertà tipica di Gentoo (e in generale di Linux)? Ovviamente,
questo è possibile! Linux offre una grande varietà di comode interfacce utente e
ambienti grafici che è possibile aggiungere ad un'installazione esistente.
</p>

<p>
Una delle più grandi sorprese per gli utenti è che l'interfaccia utente non è
nient'altro che un programma che viene eseguito nel sistema. <e>Non è</e> parte
del kernel di Linux né di altre parti fondamentali del sistema. Essa è un
potente mezzo per sfruttare le capacità grafiche della propria workstation.
</p>

<p>
Data l'importanza degli standard, ne esiste uno per disegnare e muovere le
finestre sullo schermo, interagire con l'utente tramite tastiera e mouse e
gestire altri importanti aspetti di base. Questo standard si chiama <e>X Window
System</e>, solitamente abbreviato in <e>X11</e> o anche solo <e>X</e>. Viene
utilizzato in Unix, Linux e in sistemi operativi tipo Unix in tutto il mondo.
</p>

<p>
L'applicazione che fornisce agli utenti Linux la capacità di eseguire interfacce
utenti grafiche e utilizza lo standard X11 è Xorg-X11, un derivato del progetto
XFree86. XFree86 ha deciso di utilizzare una licenza che potrebbe essere non
compatibile con la licenza GPL, per cui si raccomanda l'uso di Xorg. Il Portage
ufficiale non contiene più nessuna versione di XFree86.
</p>

</body>
</section>
<section>
<title>Il progetto Xorg</title>
<body>

<p>
Il progetto <uri link="http://www.x.org">X.org</uri> ha creato e mantiene una
implementazione open-source liberamente ridistribuibile dello standard X11. Esso
è un'infrastruttura desktop open-source basata su X11.
</p>

<p>
Xorg fornisce un'interfaccia fra l'hardware e il software grafico che si vuole
utilizzare. Oltre a ciò, Xorg è completamente trasparente alla rete, nel senso
che è possibile eseguire un programma su un sistema mentre lo si visualizza su
un altro.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installare Xorg</title>
<section>
<body>

<p>
Prima di poter installare Xorg, bisogna preparare il proprio sistema. Pe prima
cosa, si deve configurare il kernel per il supporto ai dispositivi di input e
alle schede video. Quindi va modificato il file <path>/etc/make.conf</path> in
modo che vengano compilati ed installati i driver e i pacchetti di Xorg
corretti.
</p>

</body>
</section>
<section>
<title>Supporto per i driver per i dispositivi di input</title>
<body>


<p>
Come impostazione predefinita, Xorg usa <c>evdev</c>, un driver generico per i
dispositivi di input. Il supporto per <c>evdev</c> va attivato modificando la
configurazione del kernel. (Leggere la <uri
link="/doc/it/kernel-config.xml">Guida alla configurazione del kernel Linux in
Gentoo</uri> per informazione su come configurare il proprio kernel).
</p>

<pre caption="Abilitare evdev nel kernel">
Device Drivers ---&gt;
  Input device support ---&gt;
  &lt;*&gt;  Event interface
</pre>

</body>
</section>
<section>

<title>Kernel modesetting</title>
<body>

<p>
I driver grafici più recenti dipendono dal kernel modesetting (KMS). KMS
permette un migliore boot grafico con meno sfarfallii, un più rapido cambio di
utente, una console con framebuffer incorporata, la possibilitò di passare
rapidamente fra console e Xorg e altre caratteristiche. KMS è incompatibile con
i driver per framebuffer più vecchi, che devono rimanere <b>disabilitati</b>
nella configurazione del proprio kernel.
</p>

<p>
Per prima cosa va preparato il kernel per KMS. Questo fa fatto indipendentemente
dal driver video per Xorg che si usa.
</p>

<pre caption="Configurare i framebuffer">
Device Drivers ---&gt;
  Graphics support ---&gt;
    Support for frame buffer devices ---&gt;
    <comment>(Disabilitare tutti i driver, inclusi VGA, Intel, nVidia, e ATI)</comment>

    <comment>(Più in basso, abilitare il supporto base alla console, che è quello usato da KMS)</comment>
    Console display driver support ---&gt;
      &lt;*&gt;  Framebuffer Console Support
</pre>

<p>
Dopo di ciò, configurare il proprio kernel per usare il driver appropriato per
la propria scheda video. Intel, nVidia, e ATI sono le schede più comuni, seguire
quindi i comandi descritti qui di seguito per la propria scheda.
</p>

<p>
Per schede Intel:
</p>

<pre caption="Impostazioni per Intel">
Device Drivers ---&gt;
  Graphics support ---&gt;
    /dev/agpgart (AGP Support) ---&gt;
    &lt;*&gt;  Intel 440LX/BX/GX, I8xx and E7x05 chipset support
    Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) ---&gt;
    &lt;*&gt;  Intel 830M, 845G, 852GM, 855GM, 865G (i915 driver)
         i915 driver
    [*]    Enable modesetting on intel by default
</pre>

<p>
Per schede nVidia:
</p>

<pre caption="Impostazioni per nVidia">
<comment>(Enable DRM)</comment>
Device Drivers ---&gt;
  Graphics support ---&gt;
  &lt;*&gt;  Direct Rendering Manager ---&gt;

<comment>(Nouveau è al momento nella sezione "Staging drivers")</comment>
Device Drivers ---&gt;
  Staging drivers ---&gt;
  [ ]  Exclude Staging drivers from being built
  &lt;*&gt;    Nouveau (nVidia) cards
</pre>

<p>
Per le schede ATI recenti (<uri link="/doc/it/ati-faq.xml">da RadeonHD 2000
in poi</uri>), bisogna installare <c>radeon-ucode</c>. Una volta installato
<c>radeon-ucode</c>, configurare così il proprio kernel:
</p>

<pre caption="Impostazioni per ATI">
<comment>(Inpostare il kernel per usare il firmware radeon-ucode)</comment>
Device Drivers ---&gt;
  Generic Driver Options ---&gt;
  [*]  Include in-kernel firmware blobs in kernel binary
  <comment># Schede delle serie RadeonHD 2000, 3000, and 4000:</comment>
  (radeon/R600_rlc.bin radeon/R700_rlc.bin) External firmware blobs
  <comment># Schede RadeonHD 5000 (Evergreen) e più recenti:</comment>
  (radeon/CEDAR_me.bin radeon/CEDAR_pfp.bin radeon/CEDAR_rlc.bin
   radeon/CYPRESS_me.bin radeon/CYPRESS_pfp.bin radeon/CYPRESS_rlc.bin
   radeon/JUNIPER_me.bin radeon/JUNIPER_pfp.bin radeon/JUNIPER_rlc.bin
   radeon/REDWOOD_me.bin radeon/REDWOOD_pfp.bin
   radeon/REDWOOD_rlc.bin) External firmware blobs
   (/lib/firmware/) Firmware blobs root directory

<comment>(Abilitare il supporto KMS per schede Radeon)</comment>
Device Drivers ---&gt;
  Graphics support ---&gt;
  &lt;*&gt;  Direct Rendering Manager ---&gt;
  &lt;*&gt;    ATI Radeon
  [*]      Enable modesetting on radeon by default
</pre>

<note>
Schede Radeon più vecchie (serie X1900 e precedenti) non necessitano né del
pacchetto <c>radeon-ucode</c> né di alcuna configurazione per il firmware.
Basta abilitare il Direct Rendering Manager e il modesetting per ATI Radeon.
</note>

<p>
Ora che si è impostato KMS, si può continuare con la prossima sezione e
praparare il file <path>/etc/make.conf</path>.
</p>

</body>
</section>

<section>
<title>configurazione di make.conf</title>
<body>

<p>
Dopo la preparazione del kernel ma prima di installare Xorg vanno configurate
 due importanti variabili nel file <path>/etc/make.conf</path>.
</p>

<p>
La prima variabile è <c>VIDEO_CARDS</c>. Serve a specificare i driver video
che si vogliono usare e di solito dipende dal tipo e marca della
propria scheda video. Le impostazioni più comuni sono <c>nouveau</c> for le
schede nVidia e <c>radeon</c> per quelle ATI. Entrambi hanno driver
open-source ben supportati e attivamente sviluppati.

</p>


<note>
Si potrebbe inoltre provare ad usare i driver proprietari per nVidia e ATI,
rispettivamente <c>nvidia</c> e <c>fglrx</c>. Comunque, la configurazione dei
driver proprietari trascende gli scopi di questa guida. Fare riferimento alla
<uri link="/doc/it/nvidia-guide.xml">Guida nVidia per Gentoo Linux</uri> e alle
<uri link="/doc/it/ati-faq.xml">Domande frequenti (FAQ) su ATI in Gentoo
Linux</uri>. Se si è incerti su quale drivere scegliere, fare riferimento a
queste guide per maggiori informazioni.
</note>

<p>
Il driver <c>intel</c> può essere usato per desktop o laptop con grafica
integrata Intel.
</p>

<note>
<c>VIDEO_CARDS</c> può contenere più driver, separati da uno spazio.
</note>

<p>
La seconda variabile è <c>INPUT_DEVICES</c> e serve per determinare i driver da
compilare per i dispositivi di input. Nella maggior parte dei casi il valore
<c>evdev</c> dovrebbe funzionare. Se si usano dispositivi di input ulteriori,
come ad esempio un touchpad Synaptics per un portatile, assicurarsi di
aggiungerli a <c>INPUT_DEVICES</c>.
</p>

<p>
A questo punto si devono decidere i driver da usare e modificare di conseguenza
il file <path>/etc/make.conf</path>:
</p>

<pre caption="Righe di esempio per make.conf">
<comment>(Per attivare il supporto a mouse, tastiera e touchpad Synaptic)</comment>
INPUT_DEVICES="evdev synaptics"
<comment>(Per schede Nvidia)</comment>
VIDEO_CARDS="noveau"
<comment>(O, per schede ATI Radeon)</comment>
VIDEO_CARDS="radeon"
</pre>

<p>
Se i valori suggeriti non funzionano, si dovrebbe eseguire <c>emerge -pv
xorg-drivers</c>, controllare tutte le opzioni disponibili e scegliere quelle
attinenti al proprio sistema. L'esempio seguente si riferisce ad un sistema con
mouse, tastiera, touchpad Synaptic e scheda video Radeon.
</p>

<pre caption="Visualizzazione dei valori disponibili dei driver">
 <i>emerge -pv xorg-drivers</i>

These are the packages that would be merged, in order:

Calculating dependencies... done!
[ebuild   R   ]  x11-base/xorg-drivers-1.9  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -elographics% -fpit% -joystick -keyboard -mouse -penmount -tslib
-virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) -intel -mach64 -mga -neomagic (-newport)
-nouveau -nv -nvidia -r128 -rendition -s3 -s3virge -savage
-siliconmotion -sis -sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb)
(-sunleo) (-suntcx) -tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox
-vmware (-voodoo) (-xgi)" 0 kB
</pre>

<p>
Dopo aver impostato tutte le variabili necessarie installare il pacchetto Xorg.
</p>

<pre caption="Installare Xorg">
# <i>emerge xorg-server</i>
</pre>

<note>
E' possibile installare il metapacchetto <c>xorg-x11</c> invece del più leggero
<c>xorg-server</c>. Funzionalmente i due pacchetti sono equivalenti. Tuttavia il
pacchetto <c>xorg-x11</c> installa anche molti altri pacchetti probabilemente
non richiesti, come un enorme assortimenti di caratteri (font) per un gran
numero di lingue. Questi pacchetti non sono necessari per avere un desktop
funzionante.
</note>

<p>
Quando l'installazione è terminata, sarà necessario reinizializzare alcune
variabili d'ambiente prima di continuare. Tutto ciò che è necessario fare è
eseguire il comando <c>env-update</c> seguito da <c>source /etc/profile</c> e
tutto dovrebbe andare a posto.
</p>

<pre caption="Reinizializzare le variabili d'ambiente">
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>

<p>
Ora si deve avviare il demone dell'Hardware Abstraction Layer (HAL) e
configurarlo in modo che si avvii ad ogni accensione. Ciò è necessario per avere
un ambiente X funzionante, altrimenti i dispositivi di input non verranno
rilevati e probabilmente uno schermo vuoto. HAL sarà trattato più in dettaglio
nella <uri link="#usare_hal">prossima sezione</uri>.
</p>

<pre caption="Avviare HAL">
# <i>/etc/init.d/hald start</i>
# <i>rc-update add hald default</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Configurare Xorg</title>
<section id="usare_hal">
<title>Usare HAL</title>
<body>

<p>
X server è progettato per funzionare già da subito, senza doverne modificare
 manualmente i file di configurazione.
</p>

<p>
Per prima cosa, provare a <uri link="#using_startx">lanciare X</uri> senza
creare <path>/etc/X11/xorg.conf</path>.
</p>

<p>
Se Xorg non parte, (se c'è qualcosa che non va con lo schermo o con la tastiera
o il mouse), provare a risolvere il problema tramite il file di configurazione
corrispondente.
</p>

<p>
Come impostazione predefinita, Xorg fa uso di HAL (Hardware Abstraction Layer)
per trovare e configurare i dispositivi come tastiere e mouse.
</p>

<p>
HAl è fornito con molte regole preconfezionate per i disposivi, dette anche
"policy". Questi file contenenti le policy si trovano in
<path>/usr/share/hal/fdi/policy/</path>. Individuare quelli contenenti le regole
che più si avvicinano alle proprie necessità e copiarli in
<path>/etc/hal/fdi/policy/</path>.
</p>

<impo>
Non modificare i file in <path>/usr/share/hal/fdi/</path>! Copiare solo quelli
necessari, e modificarli una volta posizionati dentro alla locazione corretta in
<path>/etc</path>.
</impo>

<p>
Per esempio, per fare funzionare una normale combinazione mouse più tastiera,
si potrebbero copiare i seguenti file in <path>/etc/hal/fdi/policy/</path>:
</p>

<pre caption="Usare i file policy di HAL">
# <i>cp /usr/share/hal/fdi/policy/10osvendor/10-input-policy.fdi /etc/hal/fdi/policy</i>
# <i>cp /usr/share/hal/fdi/policy/10osvendor/10-x11-input.fdi /etc/hal/fdi/policy</i>
</pre>

<p>
Ci sono molte altre policy per HAL in <path>/usr/share/hal/fdi/</path> che
potrebbere essere utili, come configurazioni per portatili, gestione delle
periferiche dati, gestione dell'alimentazione e altro. Basta copiare i file
delle policy in <path>/etc/hal/fdi/policy/</path>.
</p>

<impo>
Ricordarsi <e>ogni</e> volta si che apporta una serie di modifiche ai file
delle policy di HAL di riavviare il demone di HAL eseguendo
<c>/etc/init.d/hald restart</c>.
</impo>

<p>
Si possono modificare a piacere i file in <path>/etc/hal/fdi/policy</path>.
E' possibile fare degli aggiustamenti o abilitare delle funzioni aggiuntive.
Ecco un esempio di come modificare i file di policy.
</p>

<p>
Un trucco molto utile è di chiudere completamente il server X premendo
Ctrl-Alt-Backspace. E' utile quando il server X funziona male, è bloccato, ecc.
E' una misura meno estrema rispetto a riavviare la macchina con Ctrl-Alt-Canc.
</p>

<p>
Le versioni recenti dei server X hanno questa combinazione disabilitata come
impostazione predefinita. E tuttavia possibile riabilitarla copiando
<path>10-x11-input.fdi</path> in <path>/etc/hal/fdi/policy</path> e
modificandola. Basterà aggiungere solo una linea alla sezione corretta, come
mostrato qui sotto:
</p>

<pre caption="Modificare 10-x11-input.fdi">
<comment>(Aprire il file con l'editor che si preferisce)</comment>
# <i>nano -w /etc/hal/fdi/policy/10-x11-input.fdi</i>
<comment>(Trovare la sezione "input.keys")</comment>
&lt;match key="info.capabilities" contains="input.keys"&gt;
<comment>(Aggiungere la stringa "terminate"/merge come mostrato)</comment>
&lt;match key="info.capabilities" contains="input.keys"&gt;
      &lt;merge key="input.x11_driver" type="string"&gt;keyboard&lt;/merge&gt;
      <i>&lt;merge key="input.xkb.options" type="string"&gt;terminate:ctrl_alt_bksp&lt;/merge&gt;</i>
      &lt;match key="/org/freedesktop/Hal/devices/computer:system.kernel.name"
             string="Linux"&gt;
        &lt;merge key="input.x11_driver" type="string"&gt;evdev&lt;merge&gt;
      &lt;/match&gt;
    &lt;/match&gt;
</pre>

<p>
Una volta fatto, eseguire <c>/etc/init.d/hald restart</c> in modo che HAL
applichi le modifiche.
</p>

<p>
Ora si ha a disposizione un modo pratico di chiudere un server X che non
risponde. Ciò è utile quando i programmi sono del tutto bloccati o quando si sta
configurando o affinando il proprio ambiente X. Si presti attenzione a
chiudere X con questa combinazione, molti programmi non reagiscono bene alla
chiusura forzata, e si potrebbe perdere tutto o in parte quello su cui si stava
lavorando.
</p>

<p>
Il lavoro con i file delle policy dovrebbe essere sufficiente ad ottenere un
desktop X funzionante. Se Xorg ancora non parte, o ci sono altri problemi,
allora è necessario configurare manualmente <path>xorg.conf</path> come mostrato
nella sezione seguente.
</p>

</body>
</section>
<section>
<title>Il file xorg.conf</title>
<body>


<note>
Configurare <path>xorg.conf</path> va visto come un'opzione da "ultima
spiaggia". Se possibile, il suo uso va evitato, effettuando tutta la
configurazione tramite i file di policy di HAL. Se tuttavia non si riesce ad
ottenere una configurazione funzionante, continuare a leggere.
</note>


<p>
Il file di configurazione di Xorg è chiamato <path>xorg.conf</path> e risiede in
<path>/etc/X11/</path>. Xorg fornisce un esempio di file di configurazione in
<path>/etc/X11/xorg.conf.example</path> che può essere utilizzato per creare la
propria configurazione. Questo file di esempio è dettagliatamente commentato, ma
se è necessaria maggiore documentazione riguardo alla sintassi, è disponibile la
pagina di manuale:
</p>

<pre caption="Richiamare la pagina di manuale di xorg.conf">
# <i>man 5 xorg.conf</i>
</pre>

</body>
</section>
<section>
<title>Generazione automatica di xorg.conf</title>
<body>

<p>
Xorg stesso è in grado di ricavare la maggior parte dei parametri. Nella maggior
parte dei casi, è necessario solo cambiare alcune linee per impostare la
risoluzione voluta. Nel caso si desideri un regolazione più raffinata, leggere
attentamente i link forniti alla fine del capitolo. Per prima cosa generare un
file di configurazione per Xorg:
</p>

<pre caption="Generare un file xorg.conf">
# <i>X -configure</i>
</pre>

<p>
Leggere con attenzione le ultime linee stampate a schermo dopo che Xorg ha
finito di interrogare l'hardware. Se riporta errori di qualche tipo, sarà
necessario procedere alla scrittura manuale del file <path>xorg.conf</path>. Nel
caso in cui tutto abbia funzionato, viene stampato l'avviso che è stato creato
il file <path>/root/xorg.conf.new</path>, pronto per essere provato.
</p>

<pre caption="Provare il file xorg.conf.new">
# <i>X -retro -config /root/xorg.conf.new</i>
</pre>

<p>
Se tutto è andato a buon fine, si dovrebbe vedere un semplice schema bianco e
nero.Verificare che il mouse funzioni e che la risoluzione sia corretta. Anche
se non si riesce a dedurre la risoluzione esatta, si può lo stesso rendersi
conto se è troppo bassa. In ogni momento si può premere Ctrl-Alt-Backspace per
chiudere l'X server.
</p>

</body>
</section>
<section>
<title>Sovrascrivere xorg.conf</title>
<body>

<p>
Per prima cosa copiare il <path>xorg.conf.new</path> sul file
<path>/etc/X11/xorg.conf</path> in modo da poter utilizzare il comando
<c>startx</c> invece di <c>Xorg -config</c>.
</p>

<pre caption="Sovrascrivere il file xorg.conf">
# <i>cp /root/xorg.conf.new /etc/X11/xorg.conf</i>
</pre>

</body>
</section>

<section id="using_startx">
<title>Usare startx</title>
<body>

<p>
Eseguire l'X server, facendolo partire con il comando <c>startx</c>.
<c>startx</c> è uno script che fa partire una <c>X Session</c> (sessione di X,
NdT), ovvero esegue l'X Server e inoltre lancia alcune applicazioni grafiche che
si appoggiano all'X Server. <c>startx</c> decide che applicazioni lanciare sulla
base delle seguenti regole:
</p>

<ul>
  <li>
    Se nella home dell'utente esiste un file chiamato <path>.xinitrc</path>,
    vengono eseguiti i comandi in esso contenuti.
  </li>
  <li>
    In alternativa, viene letto il contenuto della variabile d'ambiente XSESSION
    ed eseguita la sessione corrispondente fra quelle definite nella directory
    <path>/etc/X11/Sessions/</path> (è possibile impostare il valore di XSESSION
    in <path>/etc/env.d/90xsession</path> per assegnarle un valore predefinito
    per tutti gli utenti del sistema). Per esempio, come utente root, eseguire
    <c>echo XSESSION="Xfce4" &gt; /etc/env.d/90xsession</c>. In questo modo
    verrà creato il file <path>90xsession</path> ed impostata la sessione X
    predefinita a <uri link="/doc/it/xfce-config.xml">Xfce</uri>.
  </li>
</ul>

<pre caption="Far partire X">
# <i>startx</i>
</pre>

<p>
Si può terminare la sessione X con la combinazione Ctrl-Alt-Backspace. Questa
 è una maniera però piuttosto brutale, da non utilizzarsi abitualmente.
</p>

<p>
Se non si ha ancora installato in gestore di finestre, tutto quella che si
vedrà sarà solamente uno schermo nero. Siccome ciò può essere segno di qualche
malfunzionamento, è possibile installare <c>twm</c> e <c>xterm</c> <e>solamente
per testare X</e>.
</p>

<p>
Dopo aver installato questi due programmi, eseguire nuovamente <c>startx</c>.
Dovrebbero apparire alcune finestre di xterm, semplificando la verifica del
corretto funzionamento di X. Una volta soddisfatti dei risultati, eseguire
<c>emerge --unmerge twm xterm</c> come utente root, per rimuovere questi
pacchetti di test, in quanto non sono necessari una volta impostato un ambiente
desktop appropriato.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Modificare xorg.conf</title>
<section>
<title>Configurare la Risoluzione</title>
<body>

<p>
Se non si è soddisfatti della risoluzione, è necessario controllare due sezioni
nella propria configurazione in <path>xorg.conf</path>. Per prima cosa vi è la
sezione <e>Screen</e> in cui può essere presente l'elenco delle risoluzioni
disponibili per l'X server. Come impostazione predefinita questa sezione
potrebbe non elencare nessuna risoluzione. In questo caso, Xorg valuta le
risoluzioni sulla base delle informazioni presenti nella seconda sezione,
<e>Monitor</e>.
</p>

<p>
Xorg controlla i valori di <c>HorizSync</c> e <c>VertRefresh</c> nella sezione
<e>Monitor</e> per calcolare le risoluzioni valide. Per ora, lasciare questi
valori così come sono. Solo nel caso in cui i cambiamenti alla sezione
<e>Screen</e> (descritti più avanti) non funzionino sarà necessario consultare
le specifiche del monitor e introdurre i valori corretti.
</p>

<warn>
<b>Non</b> provare a cambiare i valori di queste due variabili riguardanti il
monitor senza consultarne le specifiche tecniche. Introdurre valori non corretti
può portare nel caso migliore a errori di sincronia, nel peggiore a danneggiare
permanentemente il monitor.
</warn>

<p>
Procedere con il cambio della risoluzione. Nell'esempio che segue da
<path>/etc/X11/xorg.conf</path> vengono aggiunte una linea <c>PreferredMode</c>
in modo che l'X server parta in modo predefinito con la risoluzione di
1440x900 a 24 bit. I valori riportati sono solo di esempio e probabilmente non
sono quelli desiratati nel proprio sistema. Comunque, il valore di <c>Option</c>
nella sezione <c>Device</c> deve corrispondere al nome per proprio monitor
(<c>DVI-0</c>), che può essere ottenuto eseguendo <c>xrandr</c>. Bisogna
installarlo (<c>emerge xrandr</c>) per poterlo usare. L'argomento dopo il nome
del monitor (nella sezione <c>Device</c>) deve corrispondere al valore del
parametro <c>Identifier</c> nella sezione <c>Monitor</c>.
</p>

<pre caption="Modificare la sezione Monitor in /etc/X11/xorg.conf">
Section "Device"
  Identifier  "RadeonHD 4550"
  Option      "Monitor-DVI-0" "DVI screen"
EndSection
Section "Monitor"
  Identifier  "DVI screen"
  Option      "PreferredMode" "1440x900"
EndSection
</pre>

<p>
Eseguendo X (<c>startx</c>) esso utilizza ora la risoluzione desiderata.
</p>

</body>
</section>
<section>
<title>Monitor multipli</title>
<body>

<p>
E' possbile configurare più di un monitor in <path>/etc/X11/xorg.conf</path>.
E' sufficiente assegnare un nome a ogni monitor, quindi specificare la sua
posizione fisica, come ad esempio "RighOf" (a destra di) or "Above" (Sopra a)
rispetto a un altro monitor.
L'esempio che segue mostra come configurare un monitor VGA e uno DVI, con il
monitor VGA sulla parte destra dello schermo:
</p>

<pre caption="Configurare monitor multipli in xorg.conf">

Section "Device"
  Identifier "RadeonHD 4550"
  Option     "Monitor-DVI-0" "DVI screen"
  Option     "Monitor-VGA-0" "VGA screen"
EndSection

Section "Monitor"
  Identifier "DVI screen"
EndSection

Section "Monitor"
  Identifier "VGA screen"
  Option     "RightOf" "DVI screen"
EndSection
</pre>

</body>
</section>
<section>
<title>Configurare la Tastiera</title>
<body>

<p>
Per configurare X per l'utilizzo di una tastiera internazionale (non americana,
NdT), si può copiare il contenuto di
<path>/usr/share/doc/hal-*/*/use-estonian-layout.fdi.bz2</path> in
<path>/etc/hal/fdi/policy/10-xinput-configuration.fdi</path>:
</p>

<pre caption="Uso di un file di configurazione esistente">
# <i>bzcat /usr/share/doc/hal-*/*/use-estonian-layout.fdi.bz2 &gt; /etc/hal/fdi/policy/10-xinput-configuration.fdi</i>
</pre>

<p>
Ora si può modificare il file <path>10-xinput-configuration.fdi</path> e
cambiare il layout della tastiera da estone(<c>ee</c>) al proprio, per esempio
italiano (<b>it</b>) o polacco (<b>pl</b>).
</p>

<p>
Dopo aver finito, eseguire run <c>/etc/init.d/hald restart</c> come root
per assicurarsi che HAL faccia uso dei file di configurazione così modificati.
</p>

</body>
</section>
<section>
<title>Messa a punto finale</title>
<body>

<p>
Eseguire <c>startx</c> e gioire del risultato!. Congratulazione, ora (si spera)
il proprio sistema ha un ambiente X funzionante.
Il prossimo passo è di installare un window manager con più funzioni, o un
ambiente desktop come KDE o GNOME, ma questo esula dallo scopo di questa guida.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Risorse</title>
<section>
<title>Creare e mettere a punto xorg.conf</title>
<body>

<p>
Per prima cosa, <c>man xorg.conf</c> e <c>man evdev</c> forniscono una veloce
ma completa guida sulla sintassi utilizzata da questi file di configurazione.
È opportuno averli aperti su un altro terminale mentre si modificano
i file di configurazione.
</p>

<p>
Possono essere utili le <uri link="http://www.x.org/wiki/FAQ">FAQ</uri> messe
a disposizione sul proprio sito dal progetto X.org, in aggiunta al resto della
loro documentazione (in inglese, NdT).
</p>

<p>
Ci sono molte risorse online sulla modifica del file <path>xorg.conf</path>,
utilizzare <uri link="http://www.google.com">Google</uri> per trovarle.
</p>


</body>
</section>

<section>
<title>Altre risorse</title>
<body>

<p>
Informazioni aggiuntive sull'installazione e configurazione dei vari ambienti
grafici e delle applicazioni si trovano nella sezione <uri
link="/doc/it/?catid=desktop">Documentazione Desktop Gentoo</uri> della nostra
documentazione.
</p>
<p>
Se si sta effettuando l'aggiornamento a xorg-server-1.8 da una versione
precedente, assicurarsi di leggere la corrispondente <uri
link="/proj/it/desktop/x/x11/xorg-server-1.8-upgrade-guide.xml">Guida
all'aggiornamento</uri>.
</p>

</body>
</section>
</chapter>
</guide>
