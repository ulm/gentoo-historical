<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/Attic/env.d-howto.xml,v 1.10 2004/09/27 15:05:58 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/it/env.d-howto.xml" lang="it">
<title>Env.d HOWTO </title>
<author title="Autore"><!-- zhen@gentoo.org -->John P. Davis</author>
<author title="Traduzione"><mail link="emorelli@gentoo.it">Enrico Morelli</mail></author>
<author title="Traduzione"><mail link="siggy@siggy.info">Luca Mercuri</mail></author>

<abstract>
Questa guida spiega il significato e l'uso della directory /etc/env.d e il suo contenuto.
</abstract>

<version>1.8</version>
<date>31 Dicembre 2003</date>

<chapter>

<title>Introduzione a env.d e alle variabili generiche</title>

<section>
<title>Variabili ambiente su Gentoo</title>
<body>
<p>
Una delle domande più comuni che vediamo porre dagli utenti Gentoo è:
"dove sono le variabili ambiente e qual è il loro valore?".
Prima di entrare in merito alla questione, dobbiamo conoscere cos'è  una
variabile ambiente. Una variabile ambiente viene all'esistenza ogni qual volta
viene eseguito il comando <c>export</c>. Se per esempio avete eseguito 
<c>export EDITOR="/usr/bin/vim"</c>, avete generato una variabile ambiente che
dice al sistema che il vostro editor di default è vim. Ci sono differenti
tipi di variabili ambiente che possono essere impostate nel vostro sistema Gentoo,
ecco alcuni esempi:
</p>
<note><c>export</c> assegnerà un valore ad una variabile ambiente
che sarà riconosciuto nell'ambito della shell <e>e</e> da tutti i
processi figli.
Se volete che l'effetto non coinvolga i processi figli, basta assegnare un 
valore alla variabile in questo modo: <c>VAR="valore"</c>.
</note>

<note>Il vostro file <c>00basic</c>  può differire, ma questo non è
un problema dato che queste variabili sono quelle che arrivano di
default insieme a Gentoo.
</note>

<note>Questi esempi si possono trovare in <path>/etc/env.d/00basic</path>. </note>

<table>
<tr><th>Variabile</th><th>Funzione</th></tr>
<tr>
    <ti>PATH</ti>
        <ti>contiene il percorso di ricerca dei programmi. I valori sono delimitati dai due punti (:). 
La variabile PATH dovrebbe apparire più o meno così: <c>PATH=/usr/local/bin:/opt/bin </c>. </ti></tr>

<tr>
    <ti>ROOTPATH</ti>
        <ti>simile alla precedente, imposta il percorso di ricerca dei programmi per l'utente <c>root</c>.
            Un esempio di questa variabile potrebbe essere: <c>ROOTPATH=/usr/local/bin:/opt/bin</c>. </ti></tr>

<tr>
    <ti>LDPATH</ti>
        <ti>specifica il percorso delle librerie per il link.
        Anche questa ha i valori delimitati dai due punti (:).
        Un esempio potrebbe essere: <c>LDPATH=/usr/local/lib </c>. </ti></tr>

<tr>
    <ti>MANPATH</ti>
        <ti>specifica dove sono memorizzate le pagine dei manuali. 
        E' come <c>PATH</c>, ma è specifica per le manpage.
        Un esempio potrebbe essere: <c>MANPATH=/usr/share/man:/usr/local/share/man </c>.
</ti></tr>

<tr>
    <ti>INFODIR</ti>
        <ti>specifica dove sono i file info. Un esempio potrebbe essere:
    <c>INFODIR=/usr/share/info </c>.  </ti></tr>

<tr>
    <ti>PAGER</ti>
        <ti>specifica quale impaginatore usare, p.e. less o more.
    Un esempio potrebbe essere:
    <c>PAGER=/usr/bin/less </c>. </ti></tr>

<tr>
    <ti>EDITOR</ti>
        <ti>specifica l'editor di default del sistema.
        Potrebbe apparire così:
<c>EDITOR=/usr/bin/vim </c>. </ti></tr>
</table>

<p>Questo è un esempio di un file <c>00basic</c> solo per darvi un'idea
di come si presenta.
Se il vostro file <c>00basic</c> si danneggia, potete usare questo. </p>

<pre caption = "00basic">
# /etc/env.d/00basic:	
# $Header: /home/cvsroot/gentoo-src/rc-scripts/etc/env.d/00basic,v 1.11 2003/02/17 02:48:39 azarah Exp &#36;
PATH="/usr/local/bin:/opt/bin"
ROOTPATH="/usr/local/bin:/opt/bin"
LDPATH="/usr/local/lib"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info"
INFOPATH="/usr/share/info"
CVS_RSH="ssh"
PAGER="/usr/bin/less"
LESSOPEN="|lesspipe.sh %s"
</pre>

</body>
</section>

<section>
<title>Formato di env.d</title>
<body>
<p>
I file all'interno di <c>env.d</c> sono posti in un ordine logico in modo
tale che quando eseguite <c>env-update</c>, la variabili siano ordinate in modo
appropriato. Il numero che precede il nome del file specifica in quale ordine
deve essere processato, così <c>00basic</c> sarà il primo, quindi
sarà processato <c>01qualcosa</c> e così via. Anche il contenuto dei
file deve avere un formato specifico:</p>
<pre caption = "Formato del contenuto">
<comment># Questo è un commento come in BASH </comment>
<i>VARIABILE1=/percorso/di/qualcosa</i>
<comment>Alcune variabili possono avere argomenti delimitati dai due punti (:). </comment>
<i>VAR1A=/percorso/di/qualcosa:/percorso/di/qualchealtra/cosa</i>
<i>VARIABLE2=nome_di_qualcosa </i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Variabili speciali e utilità delle variabili ambiente.</title>

<section>
<title>Variabili speciali </title>
<body>

<p>
Ci sono alcune variabili speciali incluse in <c>env.d</c> e che sono:
<c>KDEDIRS,  PATH, CLASSPATH, LDPATH, MANPATH, INFODIR, ROOTPATH, CONFIG_PROTECT, CONFIG_PROTECT_MASK </c>. Sono speciali perché sono processate in modo
speciale e sono poste in file speciali che spiegheremo in seguito.
</p>
<note>Alcune delle variabile menzionate sotto le abbiamo già viste in 
<c>00basic</c>. Questo non è un errore dato che queste variabili possono
essere usate più di una volta in file separati, molti dei quali sono
considerati in seguito.
</note>

<table>
<tr><th>Variabile</th><th>Funzione</th></tr>
<tr><ti>KDEDIRS</ti><ti> Specifica il percorso di tutti i files KDE. </ti></tr>

<tr><ti>PATH</ti><ti>Menzionato precedentemente, valori delimitati dai due punti (:) (vedi sopra).</ti></tr>

<tr><ti>CLASSPATH</ti><ti>Imposta il percorso delle classi Java, valori delimitati dai due punti (:).</ti></tr>

<tr><ti>LDPATH</ti><ti>Menzionato precedentemente (vedi sopra).</ti></tr>

<tr><ti>MANPATH</ti><ti>Menzionato precedentemente (vedi sopra), valori delimitati dai dur punti (:).</ti></tr>

<tr><ti>INFODIR</ti><ti>Menzionato precedentemente (vedi sopra), valori delimitati dai due punti (:).</ti></tr>

<tr><ti>ROOTPATH</ti><ti>Menzionato precedentemente (vedi sopra), valori delimitati dai due punti (:).</ti></tr>

<tr><ti>CONFIG_PROTECT</ti><ti>Specifica quali file di configurazione presenti in <path>/etc </path> sono da 'proteggere' dalle installazioni di nuovi ebuilds, gli argomenti sono delimitati da spazi.
</ti></tr>
<tr><ti>CONFIG_PROTECT_MASK</ti><ti>Basilarmente è l'inverso di CONFIG_PROTECT, 
specifica quali file presenti in <path>/etc</path> possono essere
modificati o sovrascritti automaticamente durante un processo di ebuild.
</ti></tr>
</table>

</body>
</section>

<section>
<title>Utilità delle variabili ambiente</title>
<body>

<p>
Vedremo ora l'utilità di quanto definito su un sistema Gentoo.
La potenza di <c>env.d</c> sta nel fatto che avete la possibilità
di cambiare queste variabili nel modo che ritenete
più opportuno per i vostri scopi seguendo le definizioni date sopra.
</p>

<p>
Vedremo ora come vengono trattate queste variabili.
Ad ogni esecuzione, <c>env-update</c> collega tutte queste variabili nell'ordine in cui le trova. Ricordate che è corretto avere variabili
<c>PATH</c> multiple in tanti file differenti. Questo perché <c>env-update</c>
scorre i file in sequenza e aggiunge i percorsi uno all'altro. In questo modo, se avete
un <c>PATH</c> per KDE, GNOME, il vostro <c>PATH</c> di default ed uno per X,
<c>env-update</c> concatenerà tutti questi percorsi insieme così che
alla fine tutti questi percorsi saranno combinati insieme. 
</p>

<p>Dato che queste variabili sono ora collegate insieme, è importante
notare dove vengono salvate.
</p>
<note>I file che seguono sono creati durante l'esecuzione di <c>env-update</c> </note>

<pre caption = "File creati dalla somma di tutti i file in env.d">
<i>LDPATH ----&gt; /etc/ld.so.conf </i>
<i>CONFIG_PROTECT e CONFIG_PROTECT_MASK ----&gt; /etc/profile.env (come variabili esportate)</i>
<i>Speciali e altre ----&gt; /etc/profile.env </i>
</pre>

<p>
Se date un'occhiata a <path>/etc/ld.so.conf</path>, potete chiaramente vedere che
<c>env.d</c> è stato il sorgente di tutte le informazioni in esso contenute.
</p>
<pre caption = "/etc/ld.so.conf">
# ld.so.conf autogenerated by env-update; make all changes to
# contents of /etc/env.d directory
/usr/local/lib
/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2
/usr/lib/opengl/nvidia/lib
/usr/lib/mozilla
/usr/X11R6/lib
/opt/blackdown-jdk-1.3.1/jre/lib/i386/
/opt/blackdown-jdk-1.3.1/jre/lib/i386/native_threads/
/usr/qt/3/lib
/usr/qt/2/lib
/usr/kde/3/lib
</pre>

<p>
E' importante sapere che <path>/etc/profile.env</path> è il
sorgente della vostra sessione di shell.
Infatti potremo usare tutte le nostre nuove variabile
la prossima volta che apriamo una sessione di login.
</p>

<pre caption = "Sequenza eventi env-update">
<i>/etc/env.d settings ----env-update----&gt; /etc/profile.env ---&gt; /etc/profile 
---&gt; bash ---&gt; tutti i vostri programmi</i>
</pre>

<p>Ora dovreste avere un <c>profile.env</c> che dovrebbe apparire più o meno così:</p>

<pre caption = "/etc/profile.env">
<comment>(Per migliorare la leggibilità, abbiamo spezzato due linee in questo esempio)</comment>
export CONFIG_PROTECT='/usr/kde/3/share/config /usr/share/config'
export KDEDIRS='/usr/kde/3:/usr'
export MANPATH='/usr/share/man:/usr/local/share/man:/usr/X11R6/man:/opt/blackdown-jdk-1
.3.1/man'
export INFODIR='/usr/share/info:/usr/X11R6/info'
export PATH='/usr/local/bin:/opt/bin:/opt/rar/bin:/usr/X11R6/bin:/opt/blackdown-jdk-1.3 \
.1/bin:/opt/blackdown-jdk-1.3.1/jre/bin:/usr/qt/3/bin:/usr/qt/2/bin:/usr/kde/3/bin'
export CONFIG_PROTECT_MASK='/etc/gconf'
export CLASSPATH='/opt/blackdown-jdk-1.3.1/jre/lib/rt.jar:.'
export ROOTPATH='/usr/local/bin:/opt/bin:/opt/rar:/usr/X11R6/bin:/opt/blackdown-jdk-1.3 \
.1/bin:/opt/blackdown-jdk-1.3.1/jre/bin:/usr/qt/3/bin:/usr/qt/2/bin:/usr/kde/3/bin'
export KDEDIR='/usr/kde/3'
export VIMRUNTIME='/usr/share/vim/vim61'
export JDK_HOME='/opt/blackdown-jdk-1.3.1'
export JAVAC='/opt/blackdown-jdk-1.3.1/bin/javac'
export PAGER='/usr/bin/less'
export HOSTNAME='l00ser.muc.edu'
export QMAKESPEC='linux-g++'
export LESSOPEN='|lesspipe.sh %s'
export CVS_RSH='ssh'
export EDITOR='/usr/bin/vim'
export QTDIR='/usr/qt/3'
export JAVA_HOME='/opt/blackdown-jdk-1.3.1'
export XINITRC='/etc/X11/xinit/xinitrc'
export MOZILLA_FIVE_HOME='/usr/lib/mozilla'
</pre>

<p>Ok, questo è tutto, ora potete divertirvi.</p>

</body>
</section>
</chapter>
</guide>

