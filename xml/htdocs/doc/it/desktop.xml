<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">


<guide link="/doc/it/desktop.xml">
<title>Guida alla configurazione del Desktop di Gentoo Linux</title>
<author title="Editore"><mail link="g2boojum@gentoo.org">Grant Goodyear</mail></author>
<abstract>
	Questa guida si propone di mostrare come Gentoo Linux sia facilmente
	configurabile come sistema per desktop. Pi&#249; specificamente parleremo
	dell'installazione e della configurazione di X, KDE, OSS nonch&#233; alsa
	(suono), postfix (posta elettronica), cups (stampa) e samba (interoperabilit&#224;
	unix/windows).
</abstract>

<version>0.26</version>
<date>18 Mar. 2002</date>

<chapter>
<title> Cenni preliminari</title>
<section>
<body>
<p>	Inutile dire che prima di tutto occorre avere installato <e>Gentoo Linux!</e>
	(<uri>http://www.gentoo.org/doc/it/gentoo-x86-install.xml</uri>)
	 e il <e>Portage</e>.
	Prima di procedere sarebbe opportuno aver letto la Guida all'uso del
	Portage (<uri>http://www.gentoo.org/doc/portage-user.html</uri>);  ma se si
	&#232; di corsa basta scrivere:
</p>
<pre caption="Aggiornare il Portage"># <i>emerge rsync</i></pre>
<p>	Una breve nota sui pacchetti che abbiamo scelto di trattare in questa sede.
	Gentoo Linux offre un'ampia scelta di window managers, gestori della
	posta elettronica, ecc... ecc... facilmente installabili. I pacchetti
	specifici che abbaimo scelto non sono n&#233; raccomandati n&#233; suggeriti da
	Gentoo Linux, ma semplicemente sono quelli di cui l'autore conosce
	meglio i parametri di configurazione o che personalmente predilige.
	In altre parole, sono i pacchetti che si trovano sul desktop personale
	dell'autore.</p>
<impo>
    A seconda di quale desktop intendi installare, dovresti disabilitare
    il supporto per quei desktop che non stai usando in <path>/etc/make.conf</path>. Sotto la sezione <i>USE</i>, aggiundi <e>-gnome</e> se stai usando
    il KDE, o <e>-kde</e> se stai usando GNOME.
</impo>
</body>
</section>
</chapter>

<chapter>
<title> X e KDE</title>

<section>
<title> Installazione</title>
<body>
<p>	Dopo aver installato Gentoo Linux ed effettuato l'update del Portage,
	per prima cosa di solito procedo con l'installazione di X e KDE.
	X richiede sempre una compilazione, e KDE anche di pi&#249;: per 
	questi motivi consiglierei di lanciare questi comandi poco prima di
	andare a letto.
</p>
<p>	E' sempre opportuno usare il flag <c>--pretend</c> in ogni comando
	<c>emerge</c> in modo da vedere quali dipendenze saranno installate
	(nel nostro caso saranno davvero molte).
</p>
<pre caption="Listare le dipendenze e installare il kde"> 
# <i>emerge --pretend kde</i>
# <i>emerge kde</i>
</pre>

<note>
    Fai attenzione se usi <i>emerge kde-base</i> perch&#233; in questo
    modo installerai solo i pacchetti base e nessuna delle applicazioni
    del KDE.
</note>

<note>
Se si prevede di usare CUPS per la stampa, potrebbe essere opportuno
inserire il "cups" nella variabile USE in <path>/etc/make.conf</path> prima
di effettuare l'emerging del KDE. Questo pu&#242; essere fatto anche via linea
di comando con <i>USE="cups" emerge kde</i>.
Fai riferimentp alla Gentoo Print Guide per una spiegazione completa
su come installare il CUPS.
</note>

<p>&#200; ora di fare un bel sonnellino!</p>
<note>
Nel caso abbiate a disposizione il CD con i binari di Gentoo Linux,
potete installare i pacchetti direttamente da CD.
</note>

<pre caption="Installazione dei pacchetti binari dal CD">
# <c>export PKGDIR=/mnt/cdrom/gentoo/packages</c>

<comment>Per default il Portage si aspetta di trovare i pacchetti in
/usr/portage/packages
</comment>

# <c>emerge --usepkg /mnt/cdrom/gentoo/packages/All/kdebase-x.y.z.tbz2</c>
<comment>
Il flag <c>--usepkg</c> ci assicura che per le soddisfare le
dipendenze saranno usati i pacchetti binari (se disponibili).
</comment>

</pre>
</body>
</section>

<section>
<title> Configurazione</title>
<body>

<note>Se stai usando un mouse USB, usa la configurazione per mouse USB
che trovi dopo.</note>

<p>
	Personalmente per configurare X ho scelto di usare il programma 
	<c>xf86config</c> che gira in modalit&#224; testo, sebbene il file
	generato (<path>/etc/X11/XF86Config</path>) non sia elegantissimo --consultare
	<uri link="http://www-105.ibm.com/developerworks/education.nsf/linux-onlinecourse-bytitle/3100FF4795B3F31F86256AF70056FDB3?OpenDocument"> questo tutorial</uri> per una configurazione del X-server alternativa
	e pi&#249; completa.
	Prima di partire, si prenda nota delle frequenze di refresh orizzontale
	e verticale del proprio monitor (il mio ViewSonic, per esempio, ha questi
	dati di targa: fH: 30-69 KHz, fV: 55-90 Hz), del modello della scheda video
	montata e della RAM (in Kb) disponibile (nel mio caso una GeForce con 32768 Kb),
	e del tipo di mouse impiegato (io ho un IntelliMouse su porta PS/2
	<path>/dev/psaux</path>)
</p>
<pre caption="Configurare l'X server"># <c>/usr/X11R6/bin/xf86config</c></pre>
<p>	Dato che il mouse in questione ha 3 pulsanti, ho scelto di non abilitare
	l'emulazione del 3&#176; tasto. Non ho aggiunto nemmeno le opzioni XKB
	della tastiera perch&#233; non so a cosa possano servire... Segue poi la
	scelta della risoluzione e del numero di colori a cui vogliamo lavorare.
	Dato che il mio monitor non permette di usare una risoluzione superiore a
	1280x1024x24bpp, ho scelto questa come condizione di default. Se non l'avete
	mai fatto prima, non vi meravigliate troppo se sarete costretti a eseguire
	pi&#249; e pi&#249; volte <c>xf86config</c> prima di trovare la condizione
	ideale.
</p>
<note>
Se non fossero note le frequenze di refresh del proprio monitor, si 
provi a consultare un motore di ricerca come google, 
<uri>http://www.google.com</uri>, specificando marca e modello del monitor.
Di solito questi dati vengono riportati tra le specifiche.
</note>

<p>	I veterani della configurazione del server X si ricorderanno che spesso era 
	necessario creare a mano un link simbolico del mouse al device 
	<path>/dev/mouse</path>. Questi links potevano creare problemi con devfs,
	dato che potevano venire rimossi dopo un reboot. Gentoo Linux ha una gestione
	dei links simbolici pi&#249; robusta impostandoli per default in <path>/dev</path>.
	Basta quindi fare un link a <path>/dev/mouse</path> con il comando <c>ln -s</c>
	per essere certi di <e>non perderlo</e> dopo ogni reboot.
</p>

<pre># <i>startx</i></pre>

<p>	Con una corretta configurazione di X, &#232; sufficiente richiamare
	<c>startx</c> per attivare un orripilante X window manager (twm, per
	essere chiari). Se X si attiva, siamo pronti per proseguire.
	Per chiudere il server grafico premere contemporaneamente
	<c>&lt;ctrl&gt;&lt;alt&gt;&lt;backspace&gt;</c>.
</p>

<p>	Nel caso di mouse dotati del controllo per lo scrolling verticale, 
	occorre editare il file XF86Config a mano:
</p>

<pre caption="Abilitazione controllo scrolling verticale del mouse">
# <i>cp /etc/X11/XF86Config /etc/X11/XF86Config.working</i>
# <i>nano -w /etc/X11/XF86Config</i></pre>
<pre caption="Sezione relativa al mouse in XF86Config">
Section "InputDevice"

# Identifier and driver

    Identifier			"Mouse1"
    Driver			"mouse"
    <i>Option 	"Protocol"	"IMPS/2" </i>
    Option	"Device"	"/dev/psaux"
    <i>Option	"ZAxisMapping"	"4 5"</i>

</pre>

<p>	Per il corretto riconoscimento dell'IntelliMouse ho dovuto cambiare
	il "Protocol" da "PS/2" a "IMPS/2". Per abilitare lo scrolling verticale
	occorre aggiungere anche una linea contenente 'Option "ZAxisMapping" "4 5"',
	dove '4' e '5' corrispondono alle direzioni di spostamento alto/basso.
</p>

<note>
Netscape 4.x &#232; veramente <e>di coccio</e> e non permette lo 
scrolling per default; &#249; necessario creare prima di tutto 
il file ~/.Xdefaults. Si veda <uri link="http://www-sop.inria.fr/koala/colas/mouse-wheel-scroll/</uri>
per le istruzioni. Meglio ancora, usate <c>konqueror</c>, <c>opera</c>,
<c>mozilla</c>, <c>galeon</c> o altri reali browsers!
</note>

<p>	Eseguire <c>startx</c> nuovamente tanto per assicurarsi che il
	server X sia in grado di inizializzarsi dopo le modifiche senza errori.
	Se avete una scheda video NVIDIA, potete procedere con l'installazione
	dei drivers accelerati.
</p>

<pre caption="Solo per i possessori di schede video NVIDIA">
# <c>emerge nvidia-glx</c>
# <c>emerge nvidia-kernel</c>
# <c>nano -w /etc/X11/XF86Config</c>

</pre>
<pre caption="Abilitazione di GLX in /etc/X11/XF86Config">

Section "Module"

# This loads the GLX module
#    Load       "glx" <comment>(Scommentare questa linea)</comment>
</pre>

<pre caption="Diciamo a X di usare i driver nvidia in /etc/X11/XF86Config">
Section "Device"
    Identifier  "NVIDIA GeForce"
    #Driver      "nv"
    Driver      "nvidia"
    #VideoRam    32768
    # Insert Clocks lines here if appropriate
EndSection
</pre>


<p>	Eseguamo ancora una volta <c>startx</c> per assicurarci che tutto
	sia in ordine (questa volta dovrebbe apparire il logo NVIDIA).
	Se tutto funziona, chiudiamo l'X server e prepariamoci per usare
	il window manager dei nostri sogni. Grazie al buon lavoro svolto da
	Achim, Danarmak e Verwilst che hanno preparato i pacchetti KDE
	per Gentoo Linux, la procedura di ebuilding proceder&#224;
	speditamente e senza richiedere il nostro intervento. Il display
	manager KDM dovrebbe partire semplicemente digitando kdm.
</p>	

<pre caption="Esguiamo kdm"># <i>kdm</i></pre>
<p>	Dovreste essere in grado di eseguire il login e veder partire il
	KDE. Naturalmente tutta la parte relativa al suono non potr&#224;
	funzionare (vi perderete anche il gingle di apertura!), ma a questo
	porremo rimedio in un secondo momento. Aprite una console, digitate
	<c>ls /usr/bin</c> (o qualsiasi altro comando che generi un output
	che superi le dimansioni della finestra), e verificate che il
	controllo dello scrolling verticale del vostro mouse funzioni a 
	dovere (deve permettere lo scorrimento delle pagine verso l'alto
	e verso il basso).
</p>
<note>Se il comando <c>kdm</c> ritorna "command not found" devi aggiornare
la variabile $PATH via <c>source <path>/etc/profile</path></c>.</note>


<p>	Quello che rimane da verificare &#232; che X si attivi in modo
	automatico e senza errori alla fine del boot di Gentoo Linux.
	Editare il file  <path>/etc/rc.conf</path> in modo da avere
	<e>DISPLAYMANAGER="kdm"</e>.  
</p>

<pre>
# <i>nano -w /etc/rc.conf</i>
</pre>
<pre caption="Settaggio del DISPLAYMANAGER preferenziale in /etc/rc.conf">
# What display manager do you use ?  [ xdm | gdm | kdm ]

DISPLAYMANAGER=kdm
</pre>

<p>	Prima del reboot dobbiamo assicurarci che lo script di start-up di <e>xdm</e> 
	sia letto durante il boot, con il seguente comando:
</p>

<pre>
# <i>rc-update add xdm default</i>
</pre>

<p>	Fate il reboot, e verificate se X si attiva senza errori!</p>

<impo>Il comando <c>rc-update</c> &#232; la versione aggiornata 
da Gentoo Linux del vecchio comando <c>chkconfig</c> per la gestione
degli scripts di init. Per avere una lista delle opzioni disponibili
digitare il comando <c>rc-update</c> senza argomenti.</impo>

</body>
</section>
</chapter>

<chapter>
<title>X e GNOME</title>
<section>
<title>Installazione</title>
<body>

<p>Prima di tutto dobbiamo installare i pacchetti GNOME.</p>
<pre caption="Installazione dei pacchetti GNOME">
# <c>emerge --pretend gnome</c>
# <c>emerge gnome</c>
</pre>
<p>Durante questa fase puoi andarti a vedere un bel film.</p>

<p>La configurazione di GNOME &#232; basilarmente simile a quella per il KDE
da questo punto in avanti. &#200; necessario editare <i>XF86COnfig</i> e 
configurare i drivers NVIDIA e il desktop manager di default. Riguarda la parte
relativa al KDE per vedere come fare.</p>

</body>
</section>
<section>
<title>Configurazione di un mouse USB</title>
<body>

<p>
    Un mouse USB &#232; un amico su schermi ad alta risoluzione. Il kernel si
    prende cura di scalare cos&#236; che non devi muovere il mouse cinque
    volte lungo il pad per muovere il cursore sullo schermo.
</p>
<p>
    La prima cosa che deve essere fatta &#232; installare gli appropriati moduli    del kernel. I moduli di cui ha bisogno un mouse USF sono <i>usbmouse</i>,
    <i>mousedev</i>, <i>hid</i>, <i>usbcore</i>, <i>usb-uhci</i> e <i>input</i>.
    Dopo che la configurazione del kernel &#232; stata fatta e hai riavviato,
    &#232; possibile caricare con <i>insmod</i> i moduli.
</p>
<note>
    Quando configuri il supporto Input Core per il mouse, devi essere sicuro
    di specificare la risoluzione dello schermo che intendi usare sotto X.
    Questo render&#224; la scalabilit&#224; corretta.
</note>

<p> 
    Ora, sconnetti e riconnetti il mouse e controlla il log del kernel
    per un messaggio del tipo:
</p>
<pre caption="Log del kernel dopo la riconnessione del mouse USB">
hub.c: USB new device connect on bus1/1, assigned device number 2
input0,hiddev0: USB HID v1.00 Mouse [Microsoft Microsoft IntelliMouse Optical] on usb1:2.0
</pre>

<p>
    Ora che il mouse &#232; stato riconosciuto, controlla <path>/dev/input</path>
    e assicurati che il tuo mouse ci sia e funzioni.
</p>

<pre caption="Controllo se il mouse funziona">
# <c>cd /dev/input</c>
# <c>cat mouse0</c>
<comment>Muovendo il mouse quando fai un <i>cat</i> del device, dovresti
vedere una serie di caratteri illeggibili. </comment>
</pre>
<p>
    Una volta che il mouse funziona a dovere, possiamo dire a X di usarlo.
    Tutto quello che &#232; richiesto &#232; una piccola modifica per
    specificare quale mouse deve usare X.
</p>
<pre caption="Configurazione di X per usare il mouse USB">
# <i>cp /etc/X11/XF86Config /etc/X11/XF86Config.working</i>
# <i>nano -w /etc/X11/XF86Config</i>
</pre>
<pre caption="Sezione del mouse di XF86Config">
Section "InputDevice"

# Identifier and driver

    Identifier	"Mouse1"
    Driver	"mouse"
    <i>Option "Protocol"    "IMPS/2" </i>
    Option "Device"      "/dev/input/mouse0"
    <i>Option "ZAxisMapping"	"4 5"</i>

</pre>
<p>
    Ok, fai ripartire X e il mouse dovrebbe funzionare!
</p>
<p> 
    Non dimenticarti di aggiungere i moduli che il tuo mouse usa in
    <i>modules.autoload</i>.
</p>
<pre caption="Aggiorniamo /etc/modules.autoload per il caricamento dei moduli del mouse">
# <c>echo $'/n'usbmouse $'/n'mousedev $'/n'hid #'/n'usbcore $'/n'input >> /etc/modules.autoload</c>
</pre>

</body>
</section>
</chapter>

<chapter>
<title> Suono</title>
<section>
<title> Alsa</title>
<body>

<p>	Gentoo Linux supporta Alsa per gestire il suono attraverso il kernel.
	Alsa pu&#242; essere eseguito con o senza <e>devfs</e>. Una nota: se
	avete installato un nuovo pacchetto <path>sys-kernel/linux-sources</path>,
	assicuratevi che il kernel in uso abbia abilitato il supporto per il suono.
</p> 
<p>
    Per installare ALSA, fai riferimento alla Gentoo Linux ALSA setup guide
    <uri link = "http://www.gentoo.org/doc/en/alsa-guide.html">qui</uri>
</p>

</body>
</section>
<section>
<title> AUDIO e KDE</title>
<body>

<p>	Il KDE ha delle utilities per l'audio davvero interessanti,
	come il KDE mixer <c>kmix</c>.  
</p>

<pre>
# <i>emerge --search kdemultimedia</i>
[ Results for search key : kdemultimedia ]
[ Applications found : 1 ]

*   kde-base/kdemultimedia
      Latest version Available:  2.2.2
      Latest version Installed:  2.2.2
      Description:  ${DESCRIPTION}Multimedia
# <i>kmix</i>
</pre>

<note> Se kmix non &#232; in grado di trovare il mixer, 
molto probabilmente non &#232; disponibile il supporto
per l'audio. Uscite da KDE e rimuovete i files
<path>~/.kde/share/config/kmixrc</path> e
<path>~/.kde/share/config/kmix:*</path> ed effettuate
un nuovo login. Ora il mixer dovrebbe essere disponibile.
</note>

</body>
</section>
</chapter>

<chapter>
<title> Posta Elettronica</title>
<section>
<title> Postfix -- Installazione e Configurazione</title>
<body>

<p>	Personalmente preferisco il gestore di posta elettronica <c>postfix</c> 
	perch&#233; &#232; in grado di emulare <c>sendmail</c> senza l'incubo
	di doverlo configurare in modo simile. Gi&#224; che ci siamo installiamo
	anche un lettore di posta come <c>mutt</c> che ci potr&#224; servire anche
	per testare la configurazione di <c>postfix</c>.  
</p>

<pre caption="Installazione di postfix">
# <i>emerge postfix mutt</i>
</pre>

<p>	Se intendete usare il vostro mail server solo per spedire la posta,
	postfix &#232; gi&#232; pronto all'uso. Altrimenti dovrete editare
	il file <path>/etc/postfix/main.cf</path>. Il file <path>main.cf</path>
	&#232; documentato in modo chiaro ed esauriente, ed i valori di default
	sono ragionevoli per un PC standalone. Se avete un'accesso diretto alla
	rete internet (indirizzo IP statico e nome DNS) allora l'unico 
	cambiamento da apportare &#232; quello di abilitare postfix per ricevere
	la posta.
</p>

<pre caption="Configurazione per la ricezione della mail in /etc/postfix/main.cf">
# RECEIVING MAIL 

# The inet_interfaces parameter specifies the network interface
# addresses that this mail system receives mail on.  By default,
# the software claims all active interfaces on the machine. The
# parameter also controls delivery of mail to user@[ip.address].
#
#inet_interfaces = all
#inet_interfaces = $myhostname
#inet_interfaces = $myhostname, localhost
<i>inet_interfaces = $myhostname, localhost</i>
<i>mydestination = $myhostname, localhost.$mydomain</i>
</pre>


</body>
</section>
<section>
<title> Verifica di Postfix (con Mutt)</title>
<body>
<p>
Vediamo se funziona.
</p>
<pre caption="Verifica se postfix funziona">
# <i>postfix check</i>
<!--
postfix-script: warning: creating missing Postfix pid directory
postfix-script: warning: creating missing Postfix incoming directory
postfix-script: warning: creating missing Postfix active directory
postfix-script: warning: creating missing Postfix bounce directory
postfix-script: warning: creating missing Postfix defer directory
postfix-script: warning: creating missing Postfix deferred directory
postfix-script: warning: creating missing Postfix flush directory
postfix-script: warning: creating missing Postfix saved directory
postfix-script: warning: creating missing Postfix corrupt directory
postfix-script: warning: creating missing Postfix public directory
postfix-script: warning: creating missing Postfix private directory
-->
# <i>newaliases</i>
# <i>postfix start</i>
postfix-script: starting the Postfix mail system
# <i>mutt -x root</i>
/root/.maildir does not exist. Create it? ([y]/n): <comment>[rispondere: y]</comment>
To:  &lt;root&gt;
Subject: test
(End message with a . on a line by itself)
test
.

# <i>mutt</i>
<comment>[Dovreste poter vedere il vostro messaggio]</comment>
</pre>

<p>	Con <c>postfix check</c> possiamo verificare come <path>main.cf</path>
	esegue il parsing e quali directories crea. Il comando <c>newaliases</c>
	aggiorna i riferimenti agli aliases per la posta, mentre 
	<c>postfix start</c> attiva il mailer vero e proprio. Il programma
	<c>mutt</c> (che po&#242; lavorare in modalit&#224; <c>mailx</c> o
	alla vecchia maniera di <c>mail</c>) permette di inviare un messaggio 
	a noi stessi sulla nostra macchina locale, e creare la directory di
	mail spooling <path>~/.maildir</path> relativa all'utente che ha lanciato 
	il comando (root, nel nostro caso).
	Eseguendo <c>mutt</c> in modalit&#224; completamente interattiva possiamo
	vedere tutti i messaggi di sistema che esso genera quando spedisce/riceve
	messaggi. L'ultima prova (qui non riportata) consiste nello spedire un
	messaggio da un server esterno e verificare che arrivi sul nostro PC.
</p>

<warn>Se spedite un messaggio di posta da una macchina su una 
rete privata usando il file <path>main.cf</path> standard, 
&#242; possibile che il messaggio non venga mai recapitato.
Molti mail servers respingono automaticamente ogni messaggio
proveniente da una sorgente non raggiungibile attraverso il
reverse-DNS.
</warn>

<p>	Supponiamo che tutto funzioni a dovere; &#224; giunto il momento di
	configurare postfix perch&#233; sia attivo subito dopo il boot.
</p>
<pre caption="Attivazione di postfix ad ogni riavvio">
# <i>postfix stop</i>
postfix-script: starting the Postfix mail system
# <i>rc-update add postfix default</i>
 * postfix added to runlevel default...
 * Caching service dependencies...          [  ok  ] 
 * rc-update complete.
# <i>/etc/init.d/postfix start</i>
Starting postfix......     [  ok  ]
</pre>

<impo>I veterani del <c>sendmail</c> e del <c>postfix</c> forse sono
abituati a salvare la propria posta in <path>/var/spool/mail</path>
piuttosto che nelle user directories, nonch&#233; ad accedere 
al mega-file <e>mbox</e> piuttosto che alla <e>maildir</e>.
Non &#224; poi cos&#236; difficile riconfigurare <c>postfix</c>
e <c>mutt</c> per far loro usare il sistema standard unix di
mailbox (<e>mbox</e>). Basta editare <path>/etc/postfix/main.cf</path>,
commentare <i>home_mailbox</i> e togliere il commento dalla riga
<i>mail_spool_directory = /var/spool/mail</i>. Se non esiste ancora,
occorre creare la mail spool directory con il comando
<c>mkdir -p /var/spool/mail</c> e riattivare quindi <c>postfix</c>.
Per istrure <c>mutt</c> ad usare le nuove impostazioni occorre
editare il file <path>/etc/mutt/Muttrc</path> ed impostare
<i>set mbox_type = mbox</i> e <i>set spoolfile=/var/spool/mail</i>.
</impo>

<p>	Se invece preferite usare un mail client GUI, dovrete installare
	il mail server web-based Squirrelmail come indicato pi&#249; avanti
	in questa guida. Alternativamente, Daniel Robbins raccomanda di
	usare l'IMAP (che installeremo tra poco come prerequisito a
	Aquirrelmail) in combinazione con il client di KDE <c>kmail</c>.
	Il programma kmail fa parte della distribuzione 
	<path>kde-base/kdenetwork</path>:
</p>

<pre>
 # <i>emerge --search kdenetwork</i>
[ Results for search key : kdenetwork ]
[ Applications found : 1 ]

*  kde-base/kdenetwork
      Latest version Available:  2.2.2
      Latest version Installed:  2.2.2
      Description:  ${DESCRIPTION}Network
</pre>

<p>	Pi&#249; avanti tratteremo l'installazione di Ximinan <e>Evolution</e>
	come nostro PIM (Personal information Manager) preferenziale per la
	gestione del software, completo di supporto per i computer palmari.
	Offre tra l'altro anche un eccellente mail client.
</p>

</body>
</section>
</chapter>

<chapter>
<title> Samba</title>
<section>
<body>

<p>	Samba &#232; un notevole pacchetto che rende possibile la condivisione di
	dati e/o risorse tra PC Linux e periferiche collegate a macchine Windows, o
	viceversa.
	Per maggiori informazioni potete leggere gli articoli di Daniel Robbins
	che trattano in modo approfondito l'argomento, accessibili su
	<uri>http://www.ibm.com/developerworks</uri>.
</p>

<pre caption="Installazione di SAMBA">
# <i>emerge samba</i>
# <i>rc-update add samba default</i>
# <i>cd /etc/samba</i>
# <i>cp smb.conf.example smb.conf</i>
# <i>nano -w smb.conf</i>
</pre>

<pre caption="smb.conf -- gruppi di lavoro">
# workgroup = NT-Domain-Name or Workgroup-Name, eg: REDHAT4
   workgroup = MYGROUP <comment>[cambiare la definizione in modo appropriato]</comment>
</pre>
<pre caption="smb.conf -- stampare con cups">
# It should not be necessary to specify the print system type unless
# it is non-standard. Currently supported print systems include:
# bsd, sysv, plp, lprng, aix, hpux, qnx
;   printing = bsd
    printing = cups
</pre>
<pre caption="smb.conf -- encryption">
# You may wish to use password encryption. Please read
# ENCRYPTION.txt, Win95.txt and WinNT.txt in the Samba documentation.
# Do not enable this option unless you have read those documents
  encrypt passwords = yes
</pre>

<p>	Trattiamo adesso solo alcuni concetti fondamentali per usare Samba.
	Diciamo che vogliamo solo condividere alcuni files tra il nostro 
	Gentoo Linux PC e macchine windows, e configurare il nostro PC come
	print server (usando <c>cups</c>). Dopo l'installazione &#224;
	necessario apportare qualche modifica al file <path>/etc/samba/smb.conf</path>.
	Pi&#249; in dettaglio, la variabile <e>workgroup</e> deve avere un
	valore indentico a quello dato al gruppo di lavoro della rete windows
	(Io ho usato "OLIMPUS", e se non ricordo male "WORKGROUP" era il
	valore di default per le reti windows), <e>printing</e> deve essere
	uguale a <c>cups</c> e non <e>bsd</e>, e deve essere rimosso il commento
	sulla riga <e>encrypt passwords = yes</e>. Le macchine windows usano
	passwords criptate per default, perci&#242; &#232; essenziale modificare
	la linea come sopra indicato per evitare che possa venire fulminato il 
	registro di windows di tutti i sistemi (windows) in rete. Purtroppo
	windows usa un metodo di cripting delle passwords diverso da quello 
	adottato da Linux, e quindi dovremo mantenere un file di passwords
	separato per samba.
</p>
<pre>
# <i>smbpasswd -a grant</i> <comment>[Sostituisci a  "grant" il tuo user name]</comment>
New SMB password:
Retype new SMB password:
Added user grant.
</pre>

<note> Prima di aggiungere un utente alla lista delle password 
di samba, tale utente deve essere gi&#224; stato definito in 
<path>/etc/passwd</path>.
</note>

<p>	Per ogni utente che volete autorizzare ad usare Samba da una macchina
	windows, dovrete eseguire il comando <c>smbpasswd</c>. Samba
	salver&#224; la sua password nel file <path>/etc/samba/private/smbpasswd</path>,
	che sar&#224; creato la prima volta che eseguirete il comando <c>smbpasswd</c>. 
</p>

<pre>
# <i>/etc/init.d/samba start</i>
Starting samba...        [  ok  ]
</pre>

<p>	Avviate Samba e dovreste essere da subito in grado di potervi
	collegare in remoto al vostro Gentoo Linux PC da una qualunque 
	delle macchine windows e vedere le home directories degli
	utenti autorizzati nonch&#233; le stampanti disponibili.
	Se non siete in grado di effettuare la connessione, consultate
	<path>/usr/share/doc/samba-2.2.3a/full_docs/textdocs/DIAGNOSIS.txt.gz</path>
	per cercare un aiuto supplementare.
</p>

</body>
</section>
</chapter>

<chapter>
<title> Apache e Squirrelmail webmail</title>
<section>
<title> Apache con SSL e PHP</title>
<body>

<p>	Poniamo il caso che abbiate un indirizzo IP statico (o che possiate
	usufruire di un servizio tipo dyndns per il vostro IP dinamico);
	sicuramente cerchereste un modo per controllare la vostra posta
	anche quando siete fuori citt&#224;. La soluzione che proponiamo
	&#224; quella di installare un webmail server, Squirrelmail, che
	permetta la gestione in remoto della posta attraverso un qualunque
	browser web. 
</p>

<p>	Il primo passo consiste nell'istallazione del web server. La maggior
	parte degli utenti usa Apache; anche noi faremo altrettanto. Installeremo
	anche il PHP (PHP4, per la precisione) dato che Squirrelmail &#232; 
	basilarmente un programma PHP. Le versioni mostrate nell'esempio
	potrebbero essere differenti da quelle che installerete voi. Attenzione
	quindi a correggere i suggerimenti dati di seguito in modo da installare
	correttamente tutto il software. Evitare di tagliare e copiare i comandi
	elencati a video senza riflettere!
</p>

<pre caption="Installazione di apache e php">
# <i>emerge apache php mod_php mod_ssl</i>
# <i>ebuild /var/db/pkg/dev-php/php-4.2.2-r1/mod_php-4.2.2-r1.ebuild config</i>
# <i>ebuild /var/db/pkg/net-www/mod_ssl-2.8.10/mod_ssl-2.8.10.ebuild config</i>
</pre>

<impo>Per garantire il supporto SSL da parte di Apache, assicurarsi
di installare mod_ssl. Per poter controllare in remoto la propria
posta senza inviare una password in chiaro sulla rete, &#232;
<e>necessario</e> ricorrere a SSL.</impo>

<p>	Dato che Apache &#232; progettato per essere personalizzabile,
	si consulti prima di tutto <path>/etc/apache/conf/apache.conf</path>.
	Per default la document root di Apache (la prima directory in cui
	il server cercher&#224; i files html quando tenterete una connessione
	del tipo http://www.servername.foo oppure http://localhost) &#232;
	<path>/home/httpd/htdocs</path>; ma possiamo ridefinirla a nostro
	piacimento.
</p>

<pre caption="/etc/apache/conf/apache.conf">
# Do NOT add a slash at the end of the directory path.
#
DocumentRoot "/home/httpd/htdocs" <comment>(se necessario modificare questa linea)</comment>

</pre>
<pre>
# <i>rc-update add apache default</i>
 * apache added to runlevel default...
 * Caching service dependencies...               [ ok ]
 * rc-update complete.
# <i>nano -w /etc/conf.d/apache</i>
</pre>

<p>	Per aggiungere Apache al runlevel di default, usare il comando
	<c>rc-update</c> e modificare il file <path>/etc/conf.d/apache</path>
	per aggiungervi le linee sotto riportate: in questo modo istruiremo
	Apache a caricare i moduli SSL e PHP alla partenza.
</p>

<pre caption="/etc/conf.d/apache">
APACHE_OPTS="-D SSL -D PHP4"
</pre>

<pre caption="Facciamo partire apache">
# <i>/etc/init.d/apache start</i>
 * Starting Apache...                            [ OK ]
# <i>lynx localhost</i>
</pre>

<p>	Possiamo verificare le funzionalit&#224; del server Apache usando un
	qualunque browser e connettendoci al localhost. Per verificare invece
	il supporto SSL, usare il browser per collegarsi al localhost con:
	<uri>http<comment>s</comment>://localhost</uri>. Il prefisso <c>https</c>
	forza il browser ad attivare una connessione <e>sicura</e> al server
	specificato usando SSL. I browser grafici hanno di solito un'icona
	che riporta un lucchetto aperto o chiuso a seconda del tipo di
	connessione (libera o sicura) effettuata.
</p>

<note>Quando effetuate una connessione sicura al vostro server,
probabilmente riceverete un messaggio di warning ad indicare che
il certificato di sicurezza del sito non &#232; stato riconosciuto.
L'ebuild'ing del modulo mod_ssl installa un auto-certificato di 
sicurezza da usare solo in fase di testing. Si veda a tal proposito 
il manuale del <c>mod_ssl</c> reperibile su:
<uri>http://localhost/doc/mod_ssl-2.8.8/html</uri>. Per gli usi
personali un auto-certificato &#232; pi&#249; che adatto.
</note>

<p>	Adesso dobbiamo controllare che anche il PHP funzioni correttamente.
	Il primo passo consiste nel creare un file PHP nella directory
	DocumentRoot di Apache.
</p>

<pre caption="Test del php">
# <i>echo "&lt;? phpinfo(); ?&gt;" > /home/httpd/htdocs/test.php</i>
# <i>lynx http://localhost/test.php</i>
</pre>
<pre caption="Apache + PHP in funzione">
                                                           phpinfo() (p1 of 26)
                                  PHP Logo
 
                             PHP Version 4.0.6
 
     System Linux my.server.edu 2.4.10 #1 Tue Oct 9 16:33:50 Local
           time zone must be set--see zic manuali686 i686 unknown
                           Build Date Oct 16 2001
</pre>

<p>	Se riuscite a visualizzare qualcosa di simile a quanto riportato
	nell'esempio 73, il server Apache riesce a processare correttamente
	il codice PHP.
</p>

<warn>Se controlliamo attentamente tutto l'output generato, 
troveremo che lo script <path>test.php</path> genera una
sequenza <e>lunghissima</e> di utili informazioni relative
al nostro sistema. Magari vorrete anche sbarazzarvi di tutte
queste informazioni, una volta accertato che il PHP funziona
bene. Un modo per farlo &#232; rinominare lo script con il comando
<c>mv test.php test.phps</c>; Apache visualizzer&#232; 
<path>test.phps</path> come un codice PHP sorgente invece
di interpretarlo ed eseguirlo.</warn>

</body>
</section>
<section>
<title> Courier IMAP</title>
<body>

<p>	Squirrelmail &#232; un'applicazione PHP, ma si pone in rapporto
	ad un server IMAP come il collante tra il server web e l'e-mail.
	Dato che Gentoo Linux usa Maildir come mail folders di default,
	Courier IMAP rappresenta una buona scelta.
</p>

<pre caption="Installazione di courier-imap">
# <i>emerge courier-imap</i>
# <i>rc-update add courier-imap default</i>
 * courier-imap added to runlevel default...
 * Caching service dependencies...                        [ ok ]
 * rc-update complete.
# <i>nano -w /etc/courier-imap/authdaemonrc</i>
# <i>/etc/init.d/courier-imap start</i>
# <i>telnet localhost 143</i>
Trying 127.0.0.1...
Connected to localhost.localdomain.
Escape character is '^]'.
* OK Courier-IMAP ready. Copyright 1998-2001 Double Precision, Inc.  
See COPYING for distribution information.
1 LOGIN grant passwd <comment>(&lt;-- sostituire "grant" c/ vostro username 
                          e "passwd" c/ vostra password)</comment>
1 OK LOGIN OK
<comment>(Premere &lt;ctrl&gt;-"]" e digitare "quit" per terminare)</comment>
</pre>
<pre caption="Corrette autorizzazioni in /etc/courier-imap/authdaemonrc">
##NAME: authmodulelist:0
#
# The authentication modules that are linked into authdaemond.  The
# default list is installed.  You may selectively disable modules simply
# by removing them from the following list.  The available modules you
# can use are: authcustom authcram authuserdb authpam

#authmodulelist="authcustom authcram authuserdb authpam"
authmodulelist="authpam"
</pre>

<impo>Di solito Courier IMAP collega in direttamente il nome 
dell'utente della inbox directory (del tipo Maildir) usata
nel suo script di inizializzazione, 
<path>/usr/lib/courier-imap/imapd.rc</path>, con 
<path>$HOME/Maildir</path>. Gentoo Linux invece usa la directory
$HOME/.maildir, in modo tale che l'ebuild'ing di courier-imap
vada a modificare lo script <path>imapd.rc</path> e permetta
l'uso di <e>$MAILDIR</e>. Se si sceglie di usare una mailbox
diversa da <path>.maildir</path>, &#232; necessario modificare
lo script di init alla voce <e>MAILDIR=.maildir</e>.</impo>

<p>	Se desiderate il supporto SSL per Courier IMAP, &#232; sufficiente
	preparare il certificato IMAP SSL (e dire a courier-imap dove 
	trovarlo),
</p>

<pre caption="Creazione di un certificato">
# <i>/usr/sbin/mkimapdcert</i> 
</pre>

<p>	e quindi attivare imap-ssl.</p>

<pre>
# <i>rc-update add courier-imap-ssl default</i>
# <i>/etc/init.d/courier-imap-ssl start</i>
</pre>

<p>	Per la verifica basta usare un qualunque mail client con IMAP
	abilitato, tipo netscape, kmail o mutt.
</p>

<pre>
# <i>mutt -f imap://localhost</i>
</pre>
</body>
</section>
<section>

<title> Squirrelmail</title>
<body>

<p>	Per fortuna l'installazione e la configurazione di Squirrelmail &#232;
	proceder&#224; rapidamente, dato che tutti i componenti sono disponibili.
</p>

<pre caption="Installazione di suirrelmail">
# <i>emerge squirrelmail</i>
# <i>cd /home/httpd/htdocs</i>
# <i>cd squirrelmail</i>
# <i>./configure</i>
</pre>

<note>Se la DocumentRoot del vostro Apache non &#232; 
<path>/home/httpd/htdocs</path>, dovrete editare l'ebuild
<path>net-mail/squirrelmail</path> per farlo puntare al
posto giusto.</note>

<p>	Per permettere a squirrelmail di lavorare correttamente, occorre
	accertarsi che tutti i files siano appartenenti allo stesso utente
	cui appartiene Apache (l'ebuild di squirrelmail assume che tale
	utente sia "apache"). Usare <c>./configure</c> e scegliere 
	l'opzione <e>2</e>.
</p>

<pre caption="Configurazione di Squirrelmail -- Settaggi del Server">
SquirrelMail Configuration : Read: config.php
---------------------------------------------------------
Server Settings
1.  Domain               : my.server.edu
2.  IMAP Server          : localhost
3.  IMAP Port            : 143
4.  Use Sendmail/SMTP    : SMTP
6.    SMTP Server        : localhost
7.    SMTP Port          : 25
8.    Authenticated SMTP : false
9.  Server               : courier
10. Invert Time          : false
11. Delimiter            : detect
 
R   Return to Main Menu
C.  Turn color off
S   Save data
Q   Quit
 
Command >>
</pre>

<p>	Assicurarsi che <e>Server</e> sia settato sul valore <e>courier</e>.
	Tornare al men&#249; principale e selezionare l'opzione <e>4</e>,
	General Options.
</p>

<pre caption="Configurazione di Squirrelmail -- Opzioni Generali">
SquirrelMail Configuration : Read: config.php
---------------------------------------------------------
General Options
1.  Default Charset        : iso-8859-1
2.  Data Directory         : ../data/
3.  Attachment Directory   : /tmp/
4.  Default Left Size      : 150
5.  Usernames in Lowercase : false
 
R   Return to Main Menu
C.  Turn color off
S   Save data
Q   Quit
 
Command >>
</pre>

<p>	Come directory dei dati io uso quella di default locata nel pacchetto
	stesso, anche se sarebbe senz'altro pi&#249; opportuno usarne una esterna
	all'Apache. Inoltre per scaricare gli allegati ai messaggi di posta ho
	impostato la directory <path>/tmp</path>.
</p>

<p>	Ora possiamo puntare il browser su <uri>https://localhost/squirrelmail/</uri>,
	e tutto divrebbe funzionare al primo tentativo!
</p>

<pre>
# <i>lynx https://localhost/squirrelmail/</i>
</pre>
<pre caption="Squirrelmail login page">
                                           SquirrelMail - Login
                               [sm_logo.jpg]
 
                      SquirrelMail version 1.2.0 [rc2]
                    By the SquirrelMail Development Team
 
                             SquirrelMail Login
 
       Name: ____________________
   Password: ____________________
 
                                   Login
</pre>
<p>	(Non suggerirei di usare lynx con Squirrelmail, ma in mancanza di meglio...)
</p>

</body>
</section>
</chapter>

<chapter>
<title> PIM: Personal Information Management</title>
<section>
<title> Evolution, con il supporto per i palmari!</title>
<body>

<p>	Evolution &#232; un eccezionale e versatile tool per Personal Information 
	Management, in grado di gestire anche un Palm pilot. Il primo passo &#232;
	sempre quello di installare il pacchetto evolution con il comando emerge.
	Se non intendete usare evolution con un palmare, accertatevi che le
	variabili USE contenute nel file <path>/etc/make.conf</path> siano settate
	sul valore "pda" prima di procedere all'emerg'ing del pacchetto.
</p>
<pre caption="Installazione di evolution">
# <i>emerge --pretend evolution</i>
# <i>emerge evolution</i> 
</pre>

<p>	Purtroppo l'ebuild'ing di evolution richiede un bel po' di tempo
	(notate che <c>mozilla</c> &#232; una dipendenza!); qualche decina
	di litri di buon caff&#232; o t&#232; potrebbero essere di aiuto...
</p>

<p>	Durante il building di <c>evolution,</c> verranno installati anche i
	tools necessari per il Palm pilot. Per permettere a tutti gli utenti
	di gestire un Palm pilot, &#232; necessario apportare qualche modifica
	ai permessi delle porte seriali. Assumiamo che il Palm sia stato collegato
	alla prima porta seriale (/dev/ttyS0, o /dev/tts/0 nella notazione "devfs").
</p>

<pre>
# <i>groupadd serial</i>
# <i>chown root.serial /dev/tts/0</i>
# <i>chmod g+rw /dev/tts/0</i>
# <i>ls -l /dev/tts/0</i>
crw-rw----    1 root     serial     4,  64 Dec 31  1969 /dev/tts/0
# <i>ln -s /dev/tts/0 /dev/pilot</i>
# <i>nano -w /etc/group</i> <comment>(aggiungere al gruppo serial tutti gli utenti autorizzati)</comment>
</pre>

<p>	Abbiamo aggiunto il gruppo "serial" a quelli di sistema, e potremo aggiungere
	tanti utenti quanti desideriamo al nuovo gruppo (uno per ogni utente del Palm).
	I diritti che abbiamo dato al gruppo "serial" sono "rw" per <path>/dev/tts/0</path>,
	e per i prossimi riferimenti conviene creare un link simbolico <path>/dev/pilot</path>
	al device <path>/dev/tts/0</path>. Grazie ai recenti cambiamenti apportati da Gentoo
	relativamente  all'handling dei devfs, i links saranno presenti anche dopo il reboot.
</p>

<note>Gli utenti di Gentoo v. pre-rc6-r13 possono effettuare
l'upgrade sia di <path>sys-apps/baselayout</path> e di
<path>sys-apps/devfsd</path> (facendo il merging di tutti i
files "._cfg*" locati in <path>/etc</path>), sia aggiungere
semplicemente permessi e links simbolici appropriati al file
di configurazione <path>/etc/devfsd.conf</path>.
</note>

<p>	Gli utenti potrebbero voler gestire i tools di configurazione offerti da 
	evolution (<path>tools/Pilot settings</path>) accedendovi dall'interfaccia
	di Gnome. Non dimenticate di quindi di configurare "Pilot Conduits" e
	"Pilot Link" presenti nello Gnome Control Center.
</p>
</body>
</section>
</chapter>
</guide>
