<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/xen-guide.xml,v 1.1 2008/03/18 21:25:56 scen Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/it/xen-guide.xml" lang="it">
<title>Configurare Gentoo per utilizzare Xen</title>

<author title="Autore">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Traduzione">
  <mail link="emorelli@gentoo.it">Enrico Morelli</mail>
</author>

<abstract>
Questa guida descrive come iniziare ad usare Xen su un sistema Gentoo
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.2</version>
<date>2007-12-10</date>

<chapter>
<title>Introduzione</title>
<section>
<body>

<p>
La tecnologia <uri link="http://www.xensource.com/">Xen</uri> permette
l'esecuzione di più sistemi operativi su una stessa macchina, di gestire
l'occupazione delle risorse ed anche di migrare domini (che sono gli ambienti
virtuali nei quali un sistema operativo ospite viene eseguito) da un sistema
Xen ad un altro. Il sistema operativo che ospiterà gli altri deve supportare
Xen (supporto fornito dal kernel Linux) ma i sistemi ospite possono esser
eseguiti senza modifiche <e>se</e> l'hardware in uso supporta l'Intel
Virtualization Technology (VT-x) o l'AMD Virtualization Technology (SVM).
In caso contrario, anche il sistema operativo ospite dovrà avere il supporto a
Xen.
</p>

<p>
Attraverso questa guida si conosceranno tutti i passi necessari per ottenere un
sistema Xen funzionante su Gentoo Linux. Non si discuterà di Xen in sé (il
progetto Xen fornisce <uri
link="http://www.cl.cam.ac.uk/research/srg/netos/xen/readmes/user">
documentazione sufficiente</uri>) né di configurazioni specializzate che
potrebbero essere interessanti ma non sono strettamente legate a Xen
(come esportare Portage via NFS, avviare Linux usando PXE, ecc.).
</p>

</body>
</section>
</chapter>
<chapter>
<title>Preparare il Domain0</title>
<section>
<title>Introduzione</title>
<body>

<p>
In ambiente Xen, <e>Domain0</e> è il dominio primario e definisce il sistema
operativo che ospiterà gli altri domini. In questo capitolo si preparerà una
installazione esistente di Gentoo per farla diventare il sistema ospitante di
questo dominio e si compilerà un kernel Xen in modo tale da permettere a Gentoo
di ospitare altri domini Xen.
</p>

</body>
</section>
<section>
<title>Ricompilare l'intero sistema Gentoo ?</title>
<body>

<p>
Un cambiamento drammatico che potrebbe essere necessario è la ricompilazione
dell'intero sistema Gentoo con differenti <c>CFLAGS</c>, altrimenti i sistemi
operativi ospite sotto Xen potrebbero avere un serio decadimento delle
prestazioni. Comunque, se si sta solo pianificando di provare Xen, non lo si
sta installando in un ambiente produttivo e non si ha l'ardente desiderio di
ricompilare tutti i programmi, si può saltare questo passo. In questo caso si
noteranno solo cali di prestazione, ma si potrà comunque usare Xen.
</p>

<impo>
Si raccomanda, nel caso si vogliano modificare le <c>CFLAGS</c>> per ricompilare
il sistema con una versione di gcc inferiore alla 4, di non aver impostato
<c>-Os</c> in quanto si produrrebbe codice corrotto.
</impo>

<pre caption="Modificare le CFLAGS e ricompilare Gentoo">
~# <i>nano -w /etc/make.conf</i>
<comment>(Aggiungere -mno-tls-direct-seg-refs)</comment>
CFLAGS="-O2 -march=pentium4 -pipe <i>-mno-tls-direct-seg-refs</i>"

~# <i>emerge -e world</i>
</pre>

<p>
Se si avvia il sistema usando un ramdisk iniziale (initrd) sarà necessario
rigenerarlo (operazione che è meglio fare eseguendo tutti i passi come se
si stesse ricompilando il kernel).
</p>

</body>
</section>
<section>
<title>Installare Xen</title>
<body>

<p>
Attualmente Xen è composto da numerosi componenti, sarà quindi necessario
installare un paio di pacchetti. Dato che sono ancora <uri
link="/doc/it/handbook/handbook-x86.xml?part=3&amp;chap=3#doc_chap2">~arch
masked</uri> dovranno esser prima smascherati, aggiungendo le righe necessarie
in <path>/etc/portage/package.keywords</path> e quindi installati.
</p>

<pre caption="Smascherare ed installare Xen">
~# <i>nano -w /etc/portage/package.keywords</i>
app-emulation/xen
app-emulation/xen-tools
sys-kernel/xen-sources

~# <i>emerge xen xen-tools xen-sources</i>
</pre>



</body>
</section>
<section>
<title>Configurare e compilare il kernel</title>
<body>

<p>
Si andrà ora a configurare e compilare il kernel col supporto a Xen. Questo
kernel, i cui sorgenti sono disponibili in
<path>/usr/src/linux-2.6.x.z-xen</path>, diverranno il kernel principale che
verrà utilizzato (p.e. per il domain 0). Nella sezione <c>XEN</c> si trovano i
driver per tutti i tipi di periferiche di input/output, ogni driver possiede una
implementazione per <e>backend</e> e <e>frontend</e>. Per il kernel del domain 0
è necessario selezionare le implementazioni <e>backend</e>, queste verrano
utilizzate dagli altri domini (che usano i driver <e>frontend</e>) per
comunicare direttamente con l'hardware.
</p>

<p>
Naturalmente, non ci si dimentichi di selezionare <c>Xen-compatible</c> come
<c>Processor type and features</c>. Ci si potrebbe meravigliare per quanto
riguarda la gestione della rete: in un dominio ogni interfaccia possiede un
link punto-punto ad un'interfaccia sul domain 0 (chiamata <path>vifX.Y</path>
dove X è il numero del dominio e Y è il numero dell'interfaccia di tale
dominio), in questo modo è possibile configurare la propria rete nel modo che
si vuole (bridging, NAT, ecc.).
</p>

<pre caption="Abilitare il supporto a Xen per un kernel i386">
Processor type and features  ---&gt;
      Subarchitecture Type (Xen-compatible)
</pre>

<pre caption="Abilitare il supporto a Xen per un kernel x86_64">
Processor type and features  ---&gt;
      Subarchitecture Type (PC-compatible)
  [*] Enable Xen compatible kernel
</pre>

<pre caption="Configurare il kernel per il Domain-0">
Bus options (PCI etc.)  ---&gt;
  [*] PCI support
  [ ]   Xen PCI Frontend Debugging

Networking  ---&gt;
  Networking options  ---&gt;
    &lt;*&gt; 802.1d Ethernet Bridging
    <comment>Richiesto solo per una rete bridged.</comment>

XEN  ---&gt;
  [*] Privileged Guest (domain 0)
  &lt;*&gt; Backend driver support
  &lt;*&gt;   Block-device backend driver
  &lt;*&gt;   Network-device backend driver
  &lt;*&gt;   PCI-device backend driver
           PCI Backend Mode (Virtual PCI) ---&gt;
  [*] Scrub memory before freeing it to Xen
  [*] Disable serial port drivers
      Xen version compatibility (3.0.4 and later)
</pre>

<pre caption="Configurare il kernel per un Domain-U">
Bus options (PCI etc.)  ---&gt;
  [ ] PCI support

Device Drivers  ---&gt;
  SCSI device support  ---&gt;
    &lt; &gt; SCSI device support
    <comment>Disabilitando il supporto SCSI si liberano i nomi dei device /dev/sd*
    per utilizzarli come device a blocchi virtuali Xen.
    </comment>

XEN  ---&gt;
  [ ] Privileged Guest (domain 0)
  &lt;*&gt; Block-device frontend driver
  &lt;*&gt; Network-device frontend driver
  [*] Scrub memory before freeing it to Xen
  [*] Disable serial port drivers
      Xen version compatibility (3.0.4 and later)
</pre>

<p>
Un utile suggerimento è quello di far sì che il processo di creazione del
kernel salvi i file oggetto intermedi da qualche altra parte in modo da poter
riutilizzare gli stessi sorgenti del kernel per configurazioni diverse:
</p>

<pre caption="Compilare il kernel">
~# <i>mkdir -p ~/build/dom0 ~/build/domU</i>
~# <i>make O=~/build/dom0 menuconfig</i>
<comment>(Configurare il kernel)</comment>
~# <i>make O=~/build/dom0 &amp;&amp; make O=~/build/dom0 modules_install</i>
</pre>

<p>
Una volta compilato il kernel si troverà la sua immagine, chiamata
<path>vmlinuz</path>, direttamente nella directory di compilazione (non dentro
<path>arch/</path> o in qualche altra directory). Copiarla in <path>/boot</path>
e configurare il bootloader affinché usi l'hypervisor di Xen (uno dei componenti
installati precedentemente) che è stato salvato come <path>/boot/xen.gz</path>.
Nella configurazione del bootloader, indicare a Xen di effettuare il boot
utilizzando il kernel appena generato. In GRUB, ad esempio:
</p>

<pre caption="Configurazione di GRUB per Xen">
title Xen 3.0 / Gentoo Linux 2.6.x.y
root (hd0,0)
kernel /boot/xen.gz
module /boot/kernel-2.6.x.y-xen0 root=/dev/hda3
</pre>

<p>
Una volta riavviato il sistema sarà necessario avviare il demone di Xen:
</p>

<pre caption="Avviare il demone di Xen">
~# <i>/etc/init.d/xend start</i>
</pre>

<p>
Controllare se il sistema funziona normalmente, nel qual caso si potrà
modificare la configurazione del bootloader per rendere predefinito il kernel
di Xen e aggiungere il demone di Xen al runlevel di default così che possa
partire automaticamente ad ogni riavvio del sistema.
</p>

<note>
Se si vuol far partire automaticamente anche i domini ospite ad ogni riavvio,
aggiungere <c>xendomains</c> al runlevel di default e creare un link simbolico
in <path>/etc/xen/auto</path> ai file di configurazione di Xen per i domini
che si vuol far partire.
</note>

</body>
</section>
</chapter>
<chapter>
<title>Creare un dominio non privilegiato (Domain-U)</title>
<section>
<title>Configurare e compilare il kernel</title>
<body>

<p>
Si ritorni ai sorgenti del kernel precedentemente utilizzati per il domain 0
e si aggiorni la configurazione. È consigliabile mantenere la configurazione
del nuovo kernel il più simile possibile al kernel principale eccetto per le
impostazioni di <c>XEN</c> dove i driver selezionati dovrebbero essere quelli
per l'implementazione <e>frontend</e> invece che <e>backend</e>.
Compilare il kernel e spostare il file <path>vmlinuz</path> ottenuto dove si
vuole (in questa guida si assume sia in <path>/mnt/data/xen/kernel</path>):
</p>

<pre caption="Compilare il kernel per il sistema ospite">
~# <i>make O=~/build/domU</i>
~# <i>cp ~/build/vmlinuz /mnt/data/xen/kernel/kernel-2.6.x.y-xen</i>
</pre>

<p>
È possibile anche creare una singola immagine del kernel per entrambi i domini
(quello amministrativo e quello non privilegiato). Maggiori informazioni possono
venire trovate nel manuale utente di Xen.
</p>

</body>
</section>
<section>
<title>Creare i dischi per un dominio</title>
<body>

<p>
Per avere maggiori prestazioni è consigliabile dedicare una partizione (o un
volume logico) ad un dominio piuttosto che un filesystem creato su  file.
Comunque, se si vuole usare Xen solo per scopi di test, usare una filesystem
creato su file ha i suoi vantaggi (specialmente per quello che riguarda la
manutenzione).
</p>

<p>
Si può creare un filesystem su file usando <c>dd</c> e <c>mke2fs</c>
(o qualsiasi altro strumento di creazione di filesystem). Per esempio, per
creare un filesystem ext3 di 2 Gbyte:
</p>

<pre caption="Creare un filesystem su file">
~# <i>dd if=/dev/zero of=/mnt/data/xen/disks/ext3root.img bs=1M count=2048</i>
~# <i>mke2fs -j /mnt/data/xen/disks/ext3root.img</i>
</pre>

</body>
</section>
<section>
<title>Configurare un dominio</title>
<body>

<p>
Si crei ora un file di configurazione per un dominio Xen. Si possono salvare
questi file di configurazione dove si vuole, per esempio in
<path>/mnt/data/xen/configs</path>. Come esempio, si creerà in file di
configurazione per un piccolo ambiente Gentoo che usi l'immagine del disco
creata precedentemente:
</p>

<pre caption="Creare un file di configurazione per un dominio">
~# <i>nano -w /mnt/data/xen/configs/gentoo</i>

kernel = "/mnt/data/xen/kernel/kernel-2.6.x.y-xen"
memory = 512
name   = "gentoo"
<comment>(Mappa l'immagine del disco alla partizione virtuale /dev/sda1)</comment>
disk   = ['file:/mnt/data/xen/disks/ext3root.img,sda1,w']
root   = "/dev/sda1 ro"
</pre>

<p>
Se come disco si sta usando un device a blocchi (come un volume lvm o una
partizione), usare 'phy:' invece di 'file:' e omettere /dev. Per esempio:
</p>

<pre caption="Usare un device a blocchi">
<comment>(Volume LVM)</comment>
disk = [ 'phy:lvm/xen-guest-root,sda1,w' ]

<comment>(Partizione fisica)</comment>
disk = [ 'phy:sdb6,sda1,w' ]
</pre>

<p>
Si possono trovare esempi di file di configurazione in <path>/etc/xen</path>.
</p>

</body>
</section>
<section>
<title>Far partire il nuovo dominio</title>
<body>

<p>
Terminata la fase di configurazione, si può far partire il nuovo dominio.
Se l'immagine del disco contiene un sistema operativo, si potrebbe creare e far
partire il dominio usando il comando <c>xm</c> (Xen manager):
</p>

<pre caption="Creare e far partire un nuovo dominio">
~# <i>xm create /mnt/data/xen/configs/gentoo -c</i>
</pre>

<p>
Il dominio dovrebbe partire all'interno del terminale nel quale è stato
eseguito il comando. Nel caso in esempio, comunque, l'immagine del disco è vuota
per cui il dominio non si avvierà. Per ovviare a questo, si può montare
l'immagine in loop ed installarvi Gentoo come fosse un sistema nuovo.
</p>

<p>
Per scollegarsi dal dominio, premere <path>Ctrl+]</path>. Per ottenere una nuova
connessione alla console del dominio usare <c>xm console gentoo</c>.
Dato che si può avere una sola console per dominio, la si usi solo se non
si può accedere altrimenti (per esempio attraverso SSH).
</p>

</body>
</section>
</chapter>
<chapter>
<title>La rete su un dominio non privilegiato</title>
<section>
<title>Introduzione</title>
<body>

<p>
Xen supporta almeno due metodi per configurare la propria rete (virtuale)
<e>routed</e> e <e>bridged</e>.
</p>

<p>
Scegliendo un approccio di tipo <e>routed</e>, l'interfaccia all'interno
del dominio non privilegiato verrà connessa all'interfaccia virtuale del dominio
amministrativo. Sul dominio amministrativo (domain 0), l'interfaccia virtuale
sarà collegata alla <path>eth0</path>. L'interfaccia interna al dominio non
privilegiato dovrebbe avere un indirizzo IP sulla stessa rete dell'interfaccia
del dominio amministrativo. Qualsiasi comunicazione a tale indirizzo IP potrà
avvenire solo dal dominio amministrativo a meno di non configurare specifiche
regole di instradamento (NdT. routing).
</p>

<p>
Scegliendo un approccio di tipo  <e>bridged</e>, l'interfaccia predefinita
sul dominio amministrativo diventerà un bridge (NdT: ponte) che accetta
connessioni al dominio virtuale attraverso l'IP del dominio amministrativo.
</p>

</body>
</section>
<section>
<title>Interfacce routed</title>
<body>

<p>
Prima di configurare l'interfaccia del dominio non privilegiato, assicurarsi
che siano caricati i driver Xen <path>netloop</path> e <path>netbk</path>.
Un suggerimento veloce: se si ha <path>netloop</path> come modulo, caricarlo
con <c>nloopbacks=0</c> in modo che non crei interfacce che puntano alla
periferica di loopback. Modificare quindi il file di configurazione del dominio
ed aggiungervi un istruzione <c>vif</c> come segue.
</p>

<pre caption="Configurare un'interfaccia virtuale">
~# <i>nano -w /mnt/data/xen/configs/gentoo</i>

<comment>(Aggiungere l'istruzione vif)</comment>
vif    = [ 'ip=192.168.1.101, vifname=veth1' ]
</pre>

<p>
Nel precedente esempio, l'interfaccia verrà creata per il dominio non
privilegiato (nel quale verrà chiamata <path>eth0</path>) e Xen assicurerà che
l'indirizzo 192.168.1.101 sia raggiungibile dal dominio amministrativo
attraverso l'interfaccia <path>veth1</path>.
</p>

<p>
Questo non significa che all'interfaccia virtuale <path>eth0</path> verrà
automaticamente assegnato l'indirizzo IP 192.168.1.101, ma piuttosto che, se
non gli si darà tale IP, non verrà connessa con il dominio amministrativo e
quindi non potrà essere raggiunta.
</p>

<p>
Modificare <path>/etc/xen/xend-config.xsp</path> come segue per configurare
la rete:
</p>

<pre caption="modificare xend-config.xsp">
~# <i>nano -w /etc/xen/xend-config.xsp</i>

<comment>(Commentare le seguenti righe)</comment>
<i>#</i>(network-script network-bridge)
<i>#</i>(vif-script vif-bridge)

<comment>(Abilitare le seguenti righe)</comment>
(network-script network-route)
(vif-script vif-route)
</pre>

</body>
</section>
<section>
<title>Interfacce bridged </title>
<body>

<p>
A differenza delle interfacce routed è ora necessario caricare il driver
<path>netloop</path> con <c>nloopbacks=1</c> (o maggiore) in modo tale che le
periferiche di loopback addizionali verranno usate per creare il bridge.
Per quanto riguarda gli altri moduli, <path>netbk</path> è sempre necessario
così come la funzionalità di bridging (il modulo <path>bridge</path> se
compilato in tal modo).
</p>

<p>
Modificare il file di configurazione del dominio virtuale e aggiungere il
seguente costrutto <c>vif</c>:
</p>

<pre caption="Configurare un'interfaccia virtuale">
~# <i>nano -w /mnt/data/xen/configs/gentoo</i>

<comment>(Aggiungere l'istruzione vif)</comment>
vif    = [ 'ip=192.168.1.101, vifname=veth0' ]
</pre>

<p>
Modificare <path>/etc/xen/xend-config.xsp</path> come segue per configurare la
rete:
</p>

<pre caption="modificare xend-config.xsp">
~# <i>nano -w /etc/xen/xend-config.xsp</i>

<comment>(Abilitare le seguenti righe)</comment>
(network-script network-bridge)
(vif-script vif-bridge)

<comment>(Se non lo sono già, commentare le seguenti righe)</comment>
<i>#</i> (network-script network-route)
<i>#</i> (vif-script vif-route)
</pre>

<p>
Di default, il bridge conterrà qualsiasi interfaccia configurata per essere
l'interfaccia predefinita (la periferica che viene elencata come default
utilizzando il comando <c>ip route list</c>). Se si vuole cambiare questo
comportamento, modificare <path>xend-config.xsp</path> come segue:
</p>

<pre caption="Modificare xend-config.xsp per cambiare la configurazione del bridge">
~# <i>nano -w /etc/xen/xend-config.xsp</i>

<comment>(modificare la riga  network-script)</comment>
(network-script <i>'</i>network-bridge <i>netdev=eth0 bridge=xenbr0 vifnum=0'</i>)
</pre>

<p>
Una volta modificata la configurazione, andrà fatto ripartire <c>xend</c> per
far riflettere le modifiche a Xen:
</p>

<pre caption="Far ripartire il demone xend">
~# <i>/etc/init.d/xend restart</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>Ulteriori risorse</title>
<section>
<title>La documentazione di Xen </title>
<body>

<ul>
  <li>
    <uri link="http://tx.downloads.xensource.com/downloads/docs/user/">Manuale
    Utente Xen</uri>
  </li>
  <li>
    <uri link="http://xen.xensource.com/documentation.html">Documentazione
    della Comunità Xen</uri>
  </li>
  <li>
    <uri link="http://wiki.xensource.com/xenwiki/">Xen Wiki</uri>
  </li>
</ul>

</body>
</section>
<section>
<title>Strumenti per Xen</title>
<body>

<ul>
  <li>
    <uri
    link="http://virt-manager.et.redhat.com/">app-emulation/virt-manager</uri> è
    uno strumento grafico per amministrare macchine virtuali
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
