<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/guide-to-mutt.xml,v 1.12 2013/01/14 18:18:15 ago Exp $ -->

<guide lang="it">
<title>Guida rapida all'uso di Mutt</title>

<author title="Autore">
  <mail link="grobian@gentoo.org">Fabian Groffen</mail>
</author>
<author title="Traduzione">
  <mail link="hujuice@inservibile.org">Sergio Vaccaro</mail>
</author>

<abstract>
Questa guida mostra come iniziare ad usare il potente client di posta a linea di
comando Mutt.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>4</version>
<date>2013-01-13</date>

<chapter>
<title>Il client email Mutt</title>
<section>
<body>

<p>
Se non siete fan dei client email con interfacce grafiche elaborate, o se
volete semplicemente essere in grado di leggere velocemente delle email
attraverso una connessione SSH, la classe di client email basati sulla console
potrebbero fare per voi.
</p>

<p>
Mutt è attualmente uno dei client email basati su console che sono ancora
attivamente sviluppati e che dispone di una vasta folla di sostenitori (e
utenti) attivi. È potente, molto personalizzabile, leggero ed efficiente.
</p>

<p>
Sebbene Mutt sia stato originariamente progettato per leggere le mail dallo
spool della mailbox locale (ad esempio: <path>/var/spool/mail/</path>), oggi
è attrezzato con un sopporto completo per per le cartelle di archiviazione
Maildir, per il prelievo remoto dai server POP3 e l'amministrazione completa
degli account IMAP. Per una completa descrizione di ciò che Mutt può fare, si
legga il manuale di Mutt e il sito di Mutt: <uri>http://www.mutt.org/</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Ottenere Mutt</title>
<section>
<body>

<p>
Avviare la propria avventura con Mutt richiede semplicemente di eseguire emerge.
Tuttavia Mutt ha molte opzioni, che abilitano e disabilitano alcune funzionalità
di Mutt. Discuteremo brevemente le flag USE più importanti che si potrebbe voler
abilitare sulla base di come si intenderà uasre Mutt. Si osservi che
l'abilitazione della maggior parte di esse non appesantirà il proprio Mutt, ma
potrebbero renderlo più potente di quello che un utente esperto di Mutt possa
desiderare.
</p>

<pre caption="Flag USE di Mutt">
% <i>emerge -pv mutt</i>
[ebuild     N ] mail-client/mutt-1.5.21-r1 USE="gdbm gpg imap mbox nls nntp \
                  sidebar smime smtp ssl -berkdb -crypt -debug -doc -gnutls \
                  -idn -pop -qdbm -sasl -tokyocabinet"
</pre>

<p>
Per prima cosa, per i nuovi utenti, la flag USE <c>imap</c> è molto
probabilmente la più importante. La sua abilitazione non appesantisce nulla,
cosicché se non si è certi di quele account dovrà essere gestito con Mutt, è
bene abilitarla. Molti fornitori di servizi email, compresi quelli gratuiti come
GMail, usano oggi IMAP, in quanto è il modo migliore di custodire le email a cui
si accede da diversi client nello stesso tempo e/o da diverse postazioni. Poiché
IMAP conserva tutte le mail nel server, Mutt scarica soltanto i nessaggi che si
vogliono vedere.
</p>

<p>
Spesso accade di saltare da un messaggio all'altro più volte ini un intervallo
di tempo breve, che richiederebbe di scaricare sempre lo stesso messaggio
ripetutamente. Poichè questo è semplicemente uno spreco, Mutt usa la cosiddetta
cache delle intestazioni (hcache, <e>header cache</e> Ndt) per conservare le
porzioni più importanti dei messaggi di cui ha bisogno. Questa hcache è
archiviata attraverso una libreria db, disponibile in quattro possibilità:
<c>gdbm</c>, <c>berkdb</c>, <c>qdbm</c> e <c>tokyocabinet</c>. Se non si hanno
preferenze personali, scegliere gdbm o berkdb. Molto probabilmente saranno
entrambe già installate nel proprio sistema. Abilitando le flag USE per più
di una infrastruttura hcache farà sì che Mutt sceglierò quella che preferisce.
Ne userà sempre almeno una.
</p>

<p>
Mentre IMAP è importante per la lettura delle email, l'invio di email richiede
un email server. Mutt può dialogare con un email server che esiste nel sistema
locale, ma spesso non è quello che serve, o semplicemente non è una buona
soluzione ad esempio per gli utenti di laptop che si spostano spesso. Mutt
dispone di un supporto SMTP che viene abilitato attraverso la flag USE
<c>smtp</c>. Di nuovo, conviene abilitarla se non si è sicuri in quanto non
appesantirà. Il supporto SMTP di Mutt consente di inviare semplicemente una mail
attraverso il proprio server preferito; generalmente quello indicato dal proprio
fornitore di servizi email.
</p>

<p>
Sia IMAP che SMTP utilizzano al giorno d'oggi sistemi di cifratura, quindi se
si è abilitato uno di essi o entrambi è sensato abilitare anche le flag USE
<c>ssl</c> o <c>gnutls</c>. Entrambe aggiungono semplicemente la variante sicura
(imaps e smtps) alla lista dei protocolli supportati da Mutt usando le
implementazioni OpenSSL o GNUTLS. Se non si ha una particolare preferenza per
una delle due, si può usare semplicemente <c>ssl</c>. Comunque molto
probabilmente questa flag è già nelle proprie flag USE. Se si intende
autenticarsi  anche per l'invio di email, ci si accerti di includere anche
<c>sasl</c> tra le flag USE, perché è un prerequisito per questo scopo.
</p>

<p>
Infine, ma non meno importante, c'è la flag USE <c>sidebar</c>. Abilita
un'estensione di Mutt che mostra un pannello di navigazione tra le mailbox
disponibili nella parte sinistra dello schermo. Sebbene non sia una
caratteristica raccomandata per i principianti (non è mai menzionata nelle
in nessuna documentazione ufficiale, semplicemente perché non è ufficiale),
molti utilizzatori esperti possono apprezzare questa caratteristica. Per
semplicità, abilitando semplicemente la flag USE non la rende visibile, cioè non
ci si accorgerà nemmeno che è abilitata.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configurare Mutt</title>
<section>
<body>

<p>
Dopo l'emerge di Mutt con le flag USE preferite, il solo passo successivo
necessario è creare un file <path>.muttrc</path> nella propria home directory.
Esempi di muttrc possono essere trovati in molti posti nel web e nella
documentazione di Mutt. In
<path>/usr/share/doc/mutt-&lt;version&gt;/samples</path> si trovano degli esempi
di muttrc che provengono dalla distribuzione ufficiale. Qui mostreremo un
<path>.muttrc</path> molto semplice per un account basato su IMAP con in fondo
la configurazione per l'invio SMTP.
</p>

<pre caption="Un esempio di file .muttrc">
# character set on messages that we send
set send_charset="utf-8"
# if there is no character set given on incoming messages, it is probably windows
set assumed_charset="iso-8859-1"

# make sure Vim knows mutt is a mail client and that we compose an UTF-8 encoded message
set editor="vim -c 'set syntax=mail ft=mail enc=utf-8'"

# just scroll one line instead of full page
set menu_scroll=yes

# we want to see some MIME types inline, see below this code listing for explanation
auto_view application/msword
auto_view application/pdf

# make default search pattern to search in To, Cc and Subject
set simple_search="~f %s | ~C %s | ~s %s"

# threading preferences, sort by threads
set sort=threads
set strict_threads=yes

# show spam score (from SpamAssassin only) when reading a message
spam "X-Spam-Score: ([0-9\\.]+).*" "SA: %1"
set pager_format = " %C - %[%H:%M] %.20v, %s%* %?H? [%H] ?"

# do not show all headers, just a few
ignore          *
unignore        From To Cc Bcc Date Subject
# and in this order
unhdr_order     *
hdr_order       From: To: Cc: Bcc: Date: Subject:

# brighten up stuff with colours, for more colouring examples see:
# http://aperiodic.net/phil/configs/mutt/colors
color normal      white          black
color hdrdefault  green          default
color quoted      green          default
color quoted1     yellow         default
color quoted2     red            default
color signature   cyan           default
color indicator   brightyellow   red
color error       brightred      default
color status      brightwhite    blue
color tree        brightmagenta  black
color tilde       blue           default
color attachment  brightyellow   default
color markers     brightred      default
color message     white          black
color search      brightwhite    magenta
color bold        brightyellow   default
# if you don't like the black progress bar at the bottom of the screen,
# comment out the following line
color progress    white          black

# personality settings
set realname = "Andrew Dalziel"
set from = "andy@mail.server"
alternates "andrew@mail.server|andrew.dalziel@mail.server"
# this file must exist, and contains your signature, comment it out if
# you don't want a signature to be used
set signature = ~/.signature

# aliases (sort of address book)
source ~/.aliases

# IMAP connection settings
set mail_check=60
set imap_keepalive=300

# IMAP account settings
set folder=imaps://andy@imap.mail.server/
set spoolfile=imaps://andy@imap.mail.server/
set record=imaps://andy@imap.mail.server/Sent
set postponed=imaps://andy@imap.mail.server/Drafts

# use headercache for IMAP (make sure this is a directory for performance!)
set header_cache=/var/tmp/.mutt

# mailboxes we want to monitor for new mail
mailboxes "="
mailboxes "=Lists"

# mailing lists we are on (these are regexps!)
subscribe "gentoo-.*@gentoo\\.org"

# SMTP mailing configuration (for sending mail)
set smtp_url=smtp://mail.server/
</pre>

<note>
È una buona pratica rivedere tutte le impostazioni dall'esempio precedente. Le
impostazioni sono molte di più e alcune scelte possono non incontrare le proprie
preferenze. Si tenga presente questo fatto quando ci si accorge che Mutt non sta
funzionando al primo colpo nel modo che si preferisce.
</note>

<p>
Il <path>.muttrc</path> dell'esempio precedente imposta un accounto IMAP, usa un
server SMTP per inviare le email, conserva la sua cache in
<path>/var/tmp/.mutt</path>, legge gli alias per gli indirizzi email
(intendiamoli come una rubrica) da <path>~/.aliases</path> e quando si compone
una nuova email accoda la firma presa da <path>~/.signature</path>. Per alcuni
server IMAP potrebbe essere necessario cambiare lo spool e le directory record e
postponed, così come <path>Sent</path> e <path>Drafts</path> potrebbero essere
in una cartella chiamata <path>INBOX</path>. Fare delle prove con Mutt è
probablimente il modo migliore per rendersene conto.
</p>

<p>
Una volta che il proprio <path>.muttrc</path> è pronto, si può lanciare Mutt
semplicemente eseguendo <c>mutt</c>. Se si è configurata una url valida per il
server IMAP, Mutt chiederà la password e subito dopo caricherà tutti i messaggi
inidizzati al proprio account. Si osservi che la prima volta che si accede alla
mailbox potrebbe richiedere un po' di tempo se ci sono molti messaggi, visto che
la cache delle intestazioni di Mutt è ancora vuota. Se l'operazione ha successo,
si è pronti ad utilizzare la propria mailbox IMAP.
</p>

<p>
La navigazione è intuitiva, così come la lettura dei messaggi semplicemente
premendo il tasto invio o la barra spaziatrice. Mutt è abbastanza somigliante a
Vim in quanto usa tasti specifici per eseguire la maggior parte delle azioni.
Una buona lettura del manuale di Mutt sul web consente di conoscere
dettagliatamente tutte le funzioni esistenti (oppure premere ? in Mutt) e a cosa
sono associati i singoli tasti, o meglio, a cosa si vuole associarli. Alcuni
tasti essenziali sono <c>m</c> (come messaggio) per iniziare la composizione di
un nuovo mesasggio, <c>q</c> per uscire, <c>r</c> per rispondere, <c>s</c> per
salvare e <c>p</c> per stampare.
</p>

<p>
Una delle caratteristiche di Mutt che ancora non è nella maggior parte dei
migliori client email moderni è l'abilità di mostrare gli allegati direttamente,
attraverso alcuni visualizzatori. La direttiva auto_view del file .muttrc quali
allegati (sulla base del MIME-type) devono essere mostrati internamente. Per
comprendere come fare, Mutt usa i file mailcap per cercare come visualizzare un
certo MIME-type. In genere il mailcap di sistema non è sufficiente, per cui è
meglio preparare un file <path>~/.mailcap</path> per elencare lì gli elementi
per il <c>copiousoutput</c> che Mutt può mostrare internamente.
</p>

<p>
Nel <c>.muttrc</c> dell'esempio precedente <c>auto_view</c> è abilitato per i
file <c>application/msword</c> e <c>application/pdf</c>. Questi due mostrano
l'estrema utilità di questa capacità, perché significa che le note inviate come
file doc sono perfettamente leggibili senza bisogno di salvare l'allegato e
aprirlo in LibreOffice. Al contrario, il testo viene semplicemente mostrato
attraverso il visualizzatore del messaggio, se c'è la direttiva corrispondente
nel proprio file <path>~/.mailcap</path>.
</p>

<pre caption="Esempio di file .mailcap">
application/msword; antiword '%s'; copiousoutput; description=Word Document;
nametemplate=%s.doc
application/pdf; pdftotext '%s' -; copiousoutput; description=PDF Document;
nametemplate=%s.pdf
</pre>

<p>
L'esempio precedente di <path>.mailcap</path> istruisce Mutt su cosa fare per
"vedere" i file <c>msword</c> e <c>pdf</c>. Per il primo si deve eseguire un
programma chiamato <c>antiword</c> (emerge <c>app-text/antiword</c>), per il
secondo il programma <c>pdftotext</c> (emerge <c>app-text/poppler</c>). Ci si
può sbizzarrire in questo campo, ad esempio per visualizzare i file HTML (si può
provare <c>app-text/vilistextum</c>), visualizzare vcards, o mostrare la
rappresenzazione ASCII delle immagini allegate. Tutto quello che occorre è
definire che programma invocare nel proprio <path>.mailcap</path> e dire a Mutt
di tentare la visualizzazione incorporata con la direttiva <c>auto_view</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Conclusioni</title>
<section>
<body>

<p>
Mutt è un client email per console molto versatile. Se il concetto piace, Mutt
può essere modificato per comportarsi più o meno in qualsiasi modo attraverso la
sua configurazione. Si può cercare nel web per sapere come altri "lo hanno
fatto" o trovare una o più delle patch in circolazione che fanno fare a Mutt
ancora di più. Gentoo applica a Mutt due patch molto popolari, quindi ci si può
controllare <c>mutt -v</c> se si vuole qualcosa in più e si vuole essere sicuri
che non sia già disponibile. Sebbene imparare Mutt non è sempre semplice, una
volta che è nelle proprie dita può rendere l'uso delle email un'esperienza molto
più veloce ed efficiente di quella di altri client. La ricerca ad esempio è
piuttosto potente, soprattutto se si sa dove mettere le mani e quali espressioni
regolari restringono la propria ricerca. Buon Mutt!
</p>

</body>
</section>
</chapter>
</guide>
