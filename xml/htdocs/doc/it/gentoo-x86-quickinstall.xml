<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/gentoo-x86-quickinstall.xml,v 1.25 2007/02/27 20:58:32 mascherpa Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/it/gentoo-x86-quickinstall.xml" lang="it">
<title>Guida rapida all'installazione di Gentoo Linux x86</title>

<author title="Autore">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Autore">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Autore">Steven Wagner</author>

<author title="Traduzione">
  <mail link="richard77@libero.it">Federico Della Ricca</mail>
</author>


<abstract>
La guida rapida di installazione copre il processo di installazione in
maniera non prolissa. Il suo scopo è permettere un'installazione veloce a
partire dallo stage3. Per seguire questa guida è consigliabile una precedente
esperienza nell'installazione di Gentoo Linux.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>12</version>
<date>2007-02-26</date>

<chapter>
<title>Introduzione</title>
<section>
<body>

<p>
Questa guida contiene tutti i comandi necessari per completare
un'installazione di Gentoo a partire dallo stage3.  Per scaricare lo stage3 e
gli snapshot del Portage è necessaria una connessione a Internet.
</p>

<p>
E' stato stampato il tempo di esecuzione dopo tutti i comandi che richiedano
più di qualche secondo per essere eseguiti.  I comandi sono stati
cronometrati su un PC con un AMD 2000 (1.66 GHz), 512 MB di RAM e due hard
disk SATA collegati a un controller hardware.
</p>

<pre caption="Specifiche del computer di test">
<comment>(Le specifiche e i tempi che seguono dovrebbero essere di aiuto per
fare una stima di massima del tempo necessario per effettuare
un'installazione)</comment>

# <i>grep bogo /proc/cpuinfo</i>
bogomips       : 3337.81

# <i>hdparm -tT /dev/sda</i>
/dev/sda:
 Timing cached reads:   1100 MB in  2.00 seconds = 549.97 MB/sec
 Timing buffered disk reads:  224 MB in  3.01 seconds =  74.36 MB/sec

# <i>grep MemTotal /proc/meminfo</i>
MemTotal:       509248 kB
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Guida rapida per l'installazione</title>
<section>
<title>Supporti per l'Installazione</title>
<body>

<p>
Effettuare il download del CD da uno dei <uri
link="/main/en/mirrors.xml">mirror</uri>.  Potrete trovare le ISO del
<e>minimal</e> CD in <path>releases/x86/&lt;release&gt; /installcd</path>, o
in alternativa quelle del LiveCD in
<path>releases/x86/&lt;release&gt;/livecd</path>.  Il <e>minimal</e> CD è
utilizzabile solamente per installazioni via Internet. Si può utilizzare il
<e>LiveCD</e> per un'installazione senza la rete, così come spiegato nel <uri
link="/doc/it/handbook/2006.0/handbook-x86.xml">Manuale x86 2006.0</uri>. Si
raccomanda l'uso del <e>minimal</e> CD.
</p>

<p>
<uri link="/doc/it/faq.xml#isoburning">Masterizzare</uri> il CD ed effettuare
il boot.
</p>

</body>
</section>
<section>
<title>Avvio del CD</title>
<body>

<p>
Premere <c>F2</c> alla schermata di avvio per visualizzare le opzioni
disponibili. Si può scegliere fra <c>gentoo</c> or <c>gentoo-nofb</c>,
quest'ultimo disabilita il framebuffer. Se si è avviato dal LiveCD, va
utilizzata l'opzione <c>nox</c> per impedire l'avvio dell'ambiente grafico X.
Vi sono diverse opzioni che permettono di abilitare o disabilitare alcune
funzionalità. Se tutto procede correttamente, il proprio hardware verrà
rilevato e verranno caricati tutti i moduli necessari. Se il kernel non si
avvia correttamente o il computer si blocca durante la procedura di avvio,
potrebbe essere necessario provare con differenti configurazioni. Il modo più
sicuro è probabilmente quello di usare l'opzione <c>nodetect</c> e caricare
esplicitamente i moduli necessari.
</p>

<pre caption="Avvio dal minimal CD">
Gentoo Linux Installation LiveCD                     http://www.gentoo.org
Enter to Boot; F1 for kernels  F2 for options.
boot: <i>gentoo-nofb</i>
  <comment>(oppure in caso di problemi)</comment>
boot: <i>gentoo-nofb nodetect</i>
</pre>

</body>
</section>
<section>
<title>Opzionale: caricamento dei moduli</title>
<body>

<p>
Si si è utilizzato l'opzione <c>nodetect</c>, caricare i moduli necessari una
volta avviato. Bisogna abilitare il supporto di rete e avere accesso ai
dischi. Il comando <c>lspci</c> può aiutare a identificare il proprio
hardware.
</p>

<pre caption="Caricare i moduli necessari">
livecd root # <i>lspci</i>
<comment>(utilizzare l'output di lspci per identificare i moduli necessari)</comment>

<comment>(L'esempio seguente va adattato al proprio hardware)</comment>
livecd root # <i>modprobe 3w-9xxx</i>
livecd root # <i>modprobe r8169</i>
</pre>

</body>
</section>
<section>
<title>Configurazione di rete</title>
<body>

<p>
Se la rete non è ancora funzionante, si può usare il comando <c>net-setup</c>
per configurare la rete. Potrebbe essere necessario usare <c>modprobe</c> per
caricare il supporto per la propria scheda di rete prima di procedere alla
configurazione. Se si utilizza un collegamento ADSL, si potrà utilizzare
<c>pppoe-setup</c> e <c>pppoe-start</c>. Per il supporto PPTP, editare
<path>/etc/ppp/chap-secrets</path> e <path>/etc/ppp/options.pptp</path>
quindi utilizzare <c>pptp &lt;server&nbsp;ip&gt;</c>.
</p>

<p>
Per un collegamento senza fili, utilizzare <c>iwconfig</c> per settare i
parametri del collegamento, quindi, utilizzare ancora <c>net-setup</c> oppure
<c>ifconfig</c>, <c>dhcpcd</c> e/o <c>route</c> manualmente.
</p>

<p>
Se ci si trova dietro ad un proxy, bisogna inizializzare il sistema
utilizzando <c>export http_proxy</c>, <c>ftp_proxy</c> e <c>RSYNC_PROXY</c>.
</p>

<pre caption="Configurazione guidata della rete">
livecd root # <i>net-setup eth0</i>
</pre>

<p>
In alternativa si può avviare la rete manualmente. Gli esempi seguenti
assegnano l'indirizzo IP 192.168.1.10 al PC e definiscono 192.168.1.1 come
router e name server (DNS).
</p>

<pre caption="Configurazione manuale della rete">
livecd root # <i>ifconfig eth0 192.168.1.10/24</i>
livecd root # <i>route add default gw 192.168.1.1</i>
livecd root # <i>echo nameserver 192.168.1.1 &gt; /etc/resolv.conf</i>
</pre>

<p>
Il CD di installazione permette di far partire un server <c>sshd</c>,
aggiungere ulteriori utenti, eseguire <c>irssi</c> (un client per chat a riga
di comando) e di navigare usando <c>lynx</c> o <c>links</c>.
</p>

</body>
</section>
<section>
<title>Opzionale: connettere il nuovo sistema tramite ssh</title>
<body>

<p>
La funzionalità più interessante è sicuramente <c>sshd</c>. E' possibile
farlo partire, connettersi da un'altra postazione e fare copia incolla con i
comandi da questa guida.
</p>

<pre caption="Avvio di sshd">
livecd root # <i>time /etc/init.d/sshd start</i>
 * Generating hostkey ...
<comment>(sshd genera la chiave e mostra informazioni aggiuntive)</comment>
 * starting sshd ...                            [ok]

real   0m13.688s
user   0m9.420s
sys    0m0.090s
</pre>

<p>
Ora si cambi la password di root (amministratore) sulla macchina con in
esecuzione liveCD in modo che sia possibile connettersi da un altro computer.
Si presi attenzione al fatto che consentire a root di connettersi tramite ssh
non è consigliabile in normali circostanze. Se la propria rete locale non è
fidata, si usi una password lunga e complicata, sarà necessario usarla una
volta sola in quanto sparirà al riavvio del sistema.
</p>

<pre caption="Cambiare la password di root">
livecd root # <i>passwd</i>
New UNIX password: <comment>inserire_la_password</comment>
Retype new UNIX password: <comment>inserire_la_password</comment>
passwd: password updated successfully
</pre>

<p>
Ora sarà possibile far partire un terminale su un altro PC e connettersi al
nuovo sistema, si tenga la guida in un altra finestra e si faccia copia e
incolla dei comandi.
</p>

<pre caption="Connettersi al nuovo sistema da un altro PC">
<comment>(Va usato l'indirizzo IP del nuovo sistema)</comment>
$ <i>ssh root@192.168.1.10</i>
The authenticity of host '192.168.1.10 (192.168.1.10)' can't be established.
RSA key fingerprint is 96:e7:2d:12:ac:9c:b0:94:90:9f:40:89:b0:45:26:8f.
Are you sure you want to continue connecting (yes/no)? <i>yes</i>
Warning: Permanently added '192.168.1.10' (RSA) to the list of known hosts.
Password: <comment>inserire_la_password</comment>
</pre>

</body>
</section>
<section>
<title>Preparazione dei dischi</title>
<body>

<p>
Utilizzare <c>fdisk</c> o <c>cfdisk</c> per creare lo schema delle partizioni,
si dovrà avere, come minimo, una partizione di swap (tipo 82) ed una
partizione Linux (tipo 83). L'esempio seguente crea una partizione di
<path>/boot</path>, una di swap e una partizione principale così come sono
usate nel resto del manuale. Il nome del device è solitamente
<path>/dev/sda</path> per un disco SATA o SCSI, <path>/dev/hda</path> per un
disco IDE.
</p>

<pre caption="Creazione delle partizioni">
livecd ~ # <i>fdisk /dev/sda</i>

<comment>(Il resto della guida usa il seguente schema di partizionamento)</comment>
livecd ~ # <i>fdisk -l /dev/sda</i>

Disk /dev/sda: 599.9 GB, 599978409984 bytes
255 heads, 63 sectors/track, 72943 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1          12       96358+  83  Linux
/dev/sda2              13         110      787185   82  Linux swap / Solaris
/dev/sda3             111       72943   585031072+  83  Linux
</pre>

<p>
Utilizzare <c>mke2fs</c>, <c>mke2fs -j</c>, <c>mkreiserfs</c>,
<c>mkfs.xfs</c>, o <c>mkfs.jfs</c> per creare i filesystem sulle partizioni.
Inizializzare la partizione di swap utilizzando <c>mkswap</c> e
<c>swapon</c>.
</p>

<pre caption="Creazione dei filesystem e attivazione dello swap">
<comment>(ext2 è più che sufficiente per la partizione di /boot)</comment>
livecd ~ # <i>mke2fs /dev/sda1</i>

<comment>(Viene usato ext3 sulla partizione principale)</comment>
livecd ~ # <i>mke2fs -j -O dir_index /dev/sda3</i>

<comment>(Creazione e attivazione dello swap)</comment>
livecd ~ # <i>mkswap /dev/sda2 &amp;&amp; swapon /dev/sda2</i>
</pre>

<p>
Montare i filesystem appena creati su <path>/mnt/gentoo</path>. Se necessario
creare le directory per gli altri mount point (Es.
<path>/mnt/gentoo/boot</path>) e montarli.
</p>

<pre caption="Montare i filesystem">
livecd ~ # <i>mount /dev/sda3 /mnt/gentoo</i>
livecd ~ # <i>mkdir /mnt/gentoo/boot</i>
livecd ~ # <i>mount /dev/sda1 /mnt/gentoo/boot</i>
</pre>

</body>
</section>
<section>
<title>Preparare lo Stage</title>
<body>

<p>
Assicurarsi che la data sia settata correttamente utilizzando <c>date
MMGGhhmmAAAA</c>. Utilizzare il tempo UTC (ora di Greenwich, NdT).
</p>

<pre caption="Impostare la data e l'ora (UTC)">
<comment>(controllare l'orologio)</comment>
livecd ~ # <i>date</i>
Mon Mar  6 00:14:13 UTC 2006

<comment>(Impostare data e ora correnti, se necessario)</comment>
livecd ~ # <i>date 030600162006</i> <comment>(Il formato è MMGGhhmmAAAA)</comment>
Mon Mar  6 00:16:00 UTC 2006
</pre>

<p>
Ora scaricare un pacchetto di stage da uno dei <uri
link="/main/en/mirrors.xml">mirror</uri>. Spostarsi su
<path>/mnt/gentoo</path> e scompattare il pacchetto con <c>tar xjpf
&lt;pacchetto tar dello stage3&gt;</c>.
</p>

<pre caption="Scaricare un archivio dello stage3">
livecd ~ # <i>cd /mnt/gentoo</i>
livecd gentoo # <i>links http://www.gentoo.org/main/en/mirrors.xml</i>
<comment>(Scegliere un mirror, spostarsi sulla directory
releases/x86/current/stages, evidenziare lo stage3 voluto, probabilmente
stage3-i686-2006.1.tar.bz2, e premere D per scaricarlo)</comment>

<comment>(<b>Oppure</b> scaricarlo con wget senza scegliere un mirror vicino)</comment>
livecd ~ # <i>cd /mnt/gentoo</i>
livecd gentoo # <i>wget http://gentoo.osuosl.org/releases/x86/current/stages/stage3-i686-2006.1.tar.bz2</i>
</pre>

<pre caption="Scompattare l'archivio dello stage3">
livecd gentoo # <i>time tar xjpf stage3*</i>

real  1m13.157s
user  1m2.920s
sys   0m7.230s
</pre>

<p>
Installare l'ultimo snapshot del Portage. Procedere come per l'archivio
stage3: scegliere un mirror vicino dalla <uri
link="/main/en/mirrors.xml">lista</uri>, scaricare lo snapshot più recente e
scompattarlo.
</p>

<pre caption="Scaricare lo snapshot di Portage più recente">
livecd gentoo # <i>cd /mnt/gentoo/usr</i>
livecd usr # <i>links http://www.gentoo.org/main/en/mirrors.xml</i>
<comment>(Scegliere un mirror, spostarsi nella directory snapshots/,
evidenziare <b>portage-latest.tar.bz2</b> e premere D per
scaricarlo)</comment>

<comment>(<b>Oppure</b> scaricarlo con wget senza scegliere un mirror vicino)</comment>
livecd gentoo # <i>cd /mnt/gentoo/usr</i>
livecd usr # <i>wget http://gentoo.osuosl.org/snapshots/portage-latest.tar.bz2</i>
</pre>

<pre caption="Scompattare lo snapshot di Portage">
livecd usr # <i>time tar xjf portage*</i>

real  0m51.523s
user  0m28.680s
sys   0m12.840s
</pre>

</body>
</section>
<section>
<title>Fare il chroot</title>
<body>

<p>
Montare il filesystem <path>/proc</path>, sovrascrivere il file
<path>/etc/resolv.conf</path>, quindi effettuare il chroot nel nuovo ambiente
Gentoo.
</p>

<pre caption="Preparazione e chroot">
livecd usr # <i>cd /</i>
livecd / # <i>mount -t proc proc /mnt/gentoo/proc</i>
livecd / # <i>cp -L /etc/resolv.conf /mnt/gentoo/etc/</i>
livecd / # <i>chroot /mnt/gentoo /bin/bash</i>
livecd / # <i>env-update &amp;&amp; source /etc/profile</i>
>>> Regenerating /etc/ld.so.cache...
</pre>

</body>
</section>
<section>
<title>Impostazione della timezone (fuso orario, NdT)</title>
<body>

<p>
Impostare la timezone corretta sovrascrivendo il file
<path>/etc/localtime</path> con il file opportuno preso da
<path>/usr/share/zoneinfo/</path>.
</p>

<pre caption="Copiare il file della timezone">
<comment>(Si usa Roma come esempio)</comment>
livecd / # <i>cp /usr/share/zoneinfo/Europe/Rome /etc/localtime</i>
livecd / # <i>date</i>
Wed Mar  8 00:46:05 CET 2006
</pre>

</body>
</section>
<section>
<title>Impostare i nomi dell'host e del dominio</title>
<body>

<p>
Impostare il nome della postazione (host) in
<path>/etc/conf.d/hostname</path> e in <path>/etc/hosts</path>. Nell'esempio
seguente, si usa <c>miamacchina</c> come nome della postazione e <c>da.me</c>
come nome di dominio. Si possono modificare i file di configurazione con
<c>nano</c> o con i seguenti comandi:
</p>

<pre caption="Cambiare i nomi dell'host e il nome di dominio">
livecd / # <i>cd /etc</i>
livecd etc # <i>echo "127.0.0.1 miamacchina.da.me miamacchina localhost"> hosts</i>
livecd etc # <i>sed -i -e 's/HOSTNAME.*/HOSTNAME="miamacchina"/' conf.d/hostname</i>
<comment>(Usare il nome dell'host scelto e controllare)</comment>
livecd etc # <i>hostname miamacchina</i>
livecd etc # <i>hostname -f</i>
miamacchina.da.me
</pre>

</body>
</section>
<section>
<title>Configurazione del kernel</title>
<body>

<p>
Installare i sorgenti del kernel (di solito <c>gentoo-sources</c>), 
configurarli, compilarli e copiare il file <path>arch/i386/boot/bzImage</path> 
in <path>/boot</path>.
</p>

<pre caption="Installare i sorgenti del kernel, compilarli e installare il kernel">
livecd etc # <i>time emerge gentoo-sources</i>

real  2m51.435s
user  0m58.220s
sys   0m29.890s
livecd etc # <i>cd /usr/src/linux</i>
livecd linux # <i>make menuconfig</i>
<comment>(Configurare il kernel)</comment>
livecd linux # <i>time make -j2</i>

<comment>(Il tempo necessario dipende fortemente dalle opzioni scelte)</comment>
real  3m51.962s
user  3m27.060s
sys   0m24.310s

livecd linux # <i>make modules_install</i>
livecd linux # <i>cp arch/i386/boot/bzImage /boot/kernel</i>
</pre>

</body>
</section>
<section>
<title>Configurazione del sistema</title>
<body>

<p>
Modificare il file <path>/etc/fstab</path> e rimpiazzare  <c>BOOT</c>,
<c>ROOT</c> e <c>SWAP</c> con i nomi reali delle partizioni. E' importante
verificare che i filesystem corrispondano alla propria installazione.
</p>

<pre caption="fstab di esempio">
livecd linux # <i>cd /etc</i>
livecd etc # <i>nano -w fstab</i>
/dev/<i>sda1</i>   /boot     ext2    noauto,noatime     1 2
/dev/<i>sda3</i>   /         ext3    noatime            0 1
/dev/<i>sda2</i>   none      swap    sw                 0 0
</pre>

<p>
Configurare la rete in <path>/etc/conf.d/net</path>. Aggiungere lo script
<c>net.eth0</c> al run level default (predefinito). Se si dispone di più
interfacce di rete, si facciano link simbolici a <c>net.eth0</c> e li si
aggiunga al run level default. Si cambi il file <path>/etc/conf.d/net</path>
con <c>nano</c> o tramite i seguenti comandi:
</p>

<pre caption="Configurazione della rete">
livecd etc # <i>cd conf.d</i>
livecd conf.d # <i>echo 'config_eth0=( "192.168.1.10/24" )' >> net</i>
livecd conf.d # <i>echo 'routes_eth0=( "default via 192.168.1.1" )' >> net</i>
livecd conf.d # <i>rc-update add net.eth0 default</i>
<comment>(Se il driver della scheda di rete è stato compilato come modulo,
aggiungerlo a /etc/modules.autoload.d/kernel-2.6)</comment>
livecd conf.d # <i>echo r8169 >> /etc/modules.autoload.d/kernel-2.6</i>
<comment>(Se si vuole riconnettersi tramite ssh dopo aver riavviato il nuovo sistema:)</comment>
livecd conf.d # <i>rc-update add sshd default</i>
</pre>

<note>
Emergere <c>pcmcia-cs</c> e aggiungerlo al run level default in caso di
bisogno.
</note>

<p>
Impostare la password di root con <c>passwd</c>.
</p>

<pre caption="Impostare la password di root">
livecd conf.d # <i>passwd</i>
New UNIX password: <comment>inserire_la_password</comment>
Retype new UNIX password: <comment>re_inserire_la_password</comment>
passwd: password updated successfully
</pre>

<p>
Controllare la configurazione del sistema in <path>/etc/rc.conf</path>,
<path>/etc/conf.d/rc</path>, <path>/etc/conf.d/keymaps</path>,
<path>/etc/conf.d/clock</path> e modificarli in caso di necessità.
</p>

<pre caption="Opzionale: modificare alcuni file di configurazione">
livecd conf.d # <i>nano -w /etc/rc.conf</i>
livecd conf.d # <i>nano -w /etc/conf.d/rc</i>
livecd conf.d # <i>nano -w /etc/conf.d/keymaps</i>
livecd conf.d # <i>nano -w /etc/conf.d/clock</i>
</pre>

</body>
</section>
<section>
<title>Installazione gli strumenti di sistema</title>
<body>

<p>
Installare un logger di sistema (programma che gestisce i messaggi di
sistema, NdT) come <c>syslog-ng</c> e un demone di cron (programma che esegue
istruzioni pianificate in precedenza, NdT) come <c>vixie-cron</c>, e
aggiungerli al run level default.
</p>

<note>
I demoni di cron dipendono da un MTA (mail transport agent, programma usato
dal sistema per inviare mail, NdT). <c>mail-mta/ssmtp</c> viene proposto da
emerge come dipendenza. Se si vuole usare un MTA più evoluto, converrebbe
installarlo adesso. Se si è di fretta, lasciare che venga installato ssmtp e
rimuoverlo in seguito, dopo aver installato l'MTA preferito.
</note>

<pre caption="Installare un logger di sistema e un demone cron">
livecd conf.d # <i>time emerge syslog-ng vixie-cron</i>

real  1m52.699s
user  1m1.630s
sys   0m35.220s
livecd conf.d # <i>rc-update add syslog-ng default</i>
livecd conf.d # <i>rc-update add vixie-cron default</i>
</pre>

<p>
Installare gli strumenti di sistema (<c>xfsprogs</c>, <c>reiserfsprogs</c> o
<c>jfsutils</c>) e quelli di rete (<c>dhcpcd</c> or <c>rp-pppoe</c>) nel caso
se ne abbia bisogno.
</p>

<pre caption="Installare ulteriori strumenti di sistema se richiesto">
livecd conf.d # <i>emerge xfsprogs</i>           <comment>(Se si usa il filesystem XFS)</comment>
livecd conf.d # <i>emerge jfsutils</i>           <comment>(Se si usa il filesystem JFS)</comment>
livecd conf.d # <i>emerge reiserfsprogs</i>      <comment>(Se si usa il filesystem Reiser)</comment>
livecd conf.d # <i>emerge dhcpcd</i>             <comment>(Se si ha bisogno di un client DHCP)</comment>
livecd conf.d # <i>USE="-X" emerge rp-pppoe</i>  <comment>(Se si ha una connessione ADSL PPPoE)</comment>
</pre>

</body>
</section>
<section>
<title>Configurazione del bootloader</title>
<body>

<p>
Emergere <c>grub</c> o <c>lilo</c>. Configurare o
<path>/boot/grub/grub.conf</path> o <path>/etc/lilo.conf</path> e installare
il bootloader appena emerso.
</p>

<p>
<b>1. Usare grub</b>
</p>

<pre caption="Emergere grub e modificarne i file di configurazione">
livecd conf.d # <i>time emerge grub</i>

real  1m8.634s
user  0m39.460s
sys   0m15.280s
livecd conf.d # <i>nano -w /boot/grub/grub.conf</i>
</pre>

<pre caption="Esempio di grub.conf">
default 0
timeout 10

title=Gentoo
root (hd0,0)
kernel /boot/kernel root=/dev/sda3
</pre>

<pre caption="Installare grub">
livecd conf.d # <i>grub</i>
Probing devices to guess BIOS drives. This may take a long time.

grub> <i>root (hd0,0)</i>
 Filesystem type is ext2fs, partition type 0x83

grub> <i>setup (hd0)</i>
 Checking if "/boot/grub/stage1" exists... yes
 Checking if "/boot/grub/stage2" exists... yes
 Checking if "/boot/grub/e2fs_stage1_5" exists... yes
 Running "embed /boot/grub/e2fs_stage1_5 (hd0)"...  16 sectors are embedded.
succeeded
 Running "install /boot/grub/stage1 (hd0) (hd0)1+16 p (hd0,0)/boot/grub/stage2 /boot/
grub/menu.lst"... succeeded
Done.

grub> <i>quit</i>
</pre>

<p>
Ora procedere con <uri link="#reboot">la sezione dedicata al riavvio</uri>.
</p>

<p>
<b>2. Usare lilo</b>
</p>

<pre caption="Emergere lilo e modificarne i file di configurazione">
livecd conf.d # <i>time emerge lilo</i>

real  0m47.016s
user  0m22.770s
sys   0m5.980s
livecd conf.d # <i>nano -w /etc/lilo.conf</i>
</pre>

<pre caption="Esempio di lilo.conf">
boot=/dev/sda
prompt
timeout=50
default=gentoo

image=/boot/kernel
  label=Gentoo
  read-only
  root=/dev/sda3
</pre>

<pre caption="Installare lilo">
livecd conf.d # <i>lilo</i>
Added Gentoo *
</pre>

</body>
</section>
<section id="reboot">
<title>Riavvio del sistema</title>
<body>

<p>
Uscire dall'ambiente di chroot, smontare tutti i filesystem e riavviare:
</p>

<pre caption="Reboot">
livecd conf.d # <i>exit</i>
livecd / # <i>umount /mnt/gentoo/proc /mnt/gentoo/boot /mnt/gentoo</i>
livecd / # <i>reboot</i>
<comment>(Non dimenticarsi di togliere il CD)</comment>
</pre>

</body>
</section>
<section id="after-reboot">
<title>Completare l'installazione</title>
<body>

<note>
Il tempo <b>totale</b> trascorso fra la comparsa del prompt di avvio sul CD
<e>minimal</e> e la comparsa del prompt di login dopo il riavvio è stato di
<b>00:42:31</b> sulla macchina di test. Meno di un'ora! Si noti che questo
tempo include quello necessario a scaricare i pacchetti dello stage3, dello
snapshot Portage e diversi altri pacchetti e il tempo speso per configurare
il kernel.
</note>

<p>
Fare il login come <c>root</c>, quindi aggiungere uno o più utenti per l'uso
quotidiano con <c>useradd</c>.
</p>

<pre caption="Collegarsi al nuovo sistema da un altro PC">
<comment>(Ripulire il file known_hosts in quanto il nuovo sistema ha generato
una nuova e definitiva hostkey)</comment>
$ <i>nano -w ~/.ssh/known_hosts</i>
<comment>(Cercare la linea con l'indirizzo IP del nuovo PC e cancellarla e
quindi salvare il file e uscire da nano)</comment>

<comment>(Usare l'indirizzo IP del nuovo sistema)</comment>
$ <i>ssh root@192.168.1.10</i>
The authenticity of host '192.168.1.10 (192.168.1.10)' can't be established.
RSA key fingerprint is 96:e7:2d:12:ac:9c:b0:94:90:9f:40:89:b0:45:26:8f.
Are you sure you want to continue connecting (yes/no)? <i>yes</i>
Warning: Permanently added '192.168.1.10' (RSA) to the list of known hosts.
Password: <comment>inserire_la_password</comment>
</pre>

<pre caption="Aggiungere un nuovo utente">
miamacchina ~ # <i>adduser -g users -G lp,wheel,audio,cdrom,portage,cron -m giovanni</i>
miamacchina ~ # <i>passwd giovanni</i>
New UNIX password: <comment>inserire_la_password_di_giovanni</comment>
Retype new UNIX password: <comment>reinserire_la_password_di_giovanni</comment>
passwd: password updated successfully
</pre>

</body>
</section>
<section>
<title>Ultimi ritocchi di configurazione</title>
<body>

<p>
Si cominci a scegliere i mirror più vicini o definendo le variabili
<c>RSYNC</c> e <c>GENTOO_MIRRORS</c> in <path>/etc/make.conf</path> o usando
<c>mirrorselect</c>. A questo punto si può impostare il numero di processi di
compilazione contemporanei.
</p>

<pre caption="Usare mirrorselect e usare MAKEOPTS">
miamacchina ~ # <i>emerge mirrorselect</i>
miamacchina ~ # <i>mirrorselect -i -o >> /etc/make.conf</i>
miamacchina ~ # <i>mirrorselect -i -r -o >> /etc/make.conf</i>
<comment>(Solitamente un buon valore è il numero di processori più uno)</comment>
miamacchina ~ # <i>echo 'MAKEOPTS="-j2"' >> /etc/make.conf</i>
</pre>

<p>
Ora è opportuno abilitare e/o disabilitare alcune USE flag. Usare <c>emerge
-vpe world</c> per avere la lista di tutti i pacchetti installati e le loro
USE flag abilitate e/o disabilitate. Modificare <path>/etc/make.conf</path> o
usare il seguente comando per definire la variabile USE:
</p>

<pre caption="Visualizzare le USE flag in uso e abilitarne o disabilitarne alcune">
miamacchina ~ # <i>emerge -vpe world</i>
<comment>(Portage mostra i pacchetti e le loro USE flag, come esempio,
disabilitiamo ipv6 e fortran, e abilitiamo userlocales e unicode)</comment>
miamacchina ~ # <i>echo 'USE="nptl nptlonly -ipv6 -fortran userlocales unicode"' >> /etc/make.conf</i>
</pre>

<p>
Se si abilita la USE flag <c>userlocales</c> per le versioni di glibc che
ancora lo gestiscono, you should edit <path>/etc/locales.build</path> e
definire i locale che si vogliono compilare.
</p>

<p>
Le versioni più recenti di glibc ignorano la USE flag <c>userlocales</c> e
usano invece <path>/etc/locale.gen</path>. Se si sta aggiornando glibc a una
di queste versioni, va creato il file <path>/etc/locale.gen</path> <e>e
cancellato</e> <path>/etc/locales.build</path>. Controllare l'output del
comando <c>emerge -vpe world</c> per sapere se la propria versione di glibc
gestisca la USE flag <c>userlocales</c>.
</p>

<pre caption="Definire i locale">
miamacchina ~ # <i>cd /etc</i>
<comment>(Per versioni di glibc con la USE flag userlocales)</comment>
miamacchina etc # <i>nano -w locales.build</i>

<comment>(Per versioni recenti di glibc, convertire locales.build)</comment>
miamacchina etc # <i>grep '^[^#].*' locales.build | sed 's:/: :' >locale.gen</i>
miamacchina etc # <i>rm locales.build</i>
miamacchina etc # <i>nano -w locale.gen</i>
</pre>

<p>
Per ultimo, ma non meno importante, si può voler modificare la variabile
<c>CFLAGS</c> nel file <path>/etc/make.conf</path> per ottimizzare il codice
alle proprie necessità. Si noti che usare una lunga lista di opzioni è
raramente necessario e può portare a rendere il sistema non funzionante. Si
raccomanda di specificare il tipo di processore con l'opzione <c>march</c> e
attenersi a <c>-O2 -pipe</c>.
</p>

<p>
Si potrebbe voler anche provare a usare <b>~x86</b>. Lo si dovrebbe fare solo
se si è in grado di gestire ebuild o pacchetti malfunzionanti. Se si
preferisce avere un sistema stabile, non utilizzare la variabile
<c>ACCEPT_KEYWORDS</c>.  Usare anche <c>FEATURES="parallel-fetch ccache"</c>
è una buona idea.
</p>

<pre caption="Ultime modifiche a make.conf">
miamacchina etc # <i>nano -w make.conf</i>
<comment>(Impostare -march corrispondente al proprio processore in CFLAGS)</comment>
CFLAGS="-O2 -march=<i>athlon-xp</i> -pipe"
<comment>(Aggiungere la linea seguente)</comment>
FEATURES="parallel-fetch ccache"
<comment>(Aggiungere la linea seguente solo se si sa cosa si sta facendo)</comment>
ACCEPT_KEYWORDS="~x86"
</pre>

<p>
Si potrebbe voler ricompilare l'intero sistema due volte per implementare
completamente gli ultimi cambiamenti alla configurazione. Ciò richiederebbe
molto tempo per essere completato e porterebbe vantaggi in velocità minimi.
Si raccomanda di lasciare che il sistema si ottimizzi gradualmente man mano
che nuove versioni dei pacchetti vengono rilasciati. D'altra parte, la
ricompilazione completa aiuta a mantenere la coerenza interna del sistema. Si
consulti <uri link="/doc/en/gcc-upgrading.xml">Guida all'aggiornamento di GCC
per Gentoo Linux</uri> per informazioni sui benefici ottenibili con la
ricompilazione completa di system e world.
</p>

<p>
Ricompilare solo i pacchetti che sono già stati aggiornati dal rilascio o che
sono influenzati da nuove USE flag richiederà abbastanza tempo. Si può voler
anche rimuovere i pacchetti che bloccano l'aggiornamento. Cercare "[blocks
<brite>B</brite>     ]" nell'output <c>emerge -vpuD --newuse world</c> e
usare <c>emerge -C</c> per rimuoverli.
</p>

<pre caption="Aggiornare i pacchetti">
<comment>(Installare ccache)</comment>
miamacchina etc # <i>emerge ccache</i>

<comment>(Si noti che passare a ~x86 causa l'aggiornamento di molti pacchetti)</comment>
miamacchina etc # <i>emerge -vpuD --newuse world</i>
<comment>(Esaminare con cura la lista dei pacchetti e le loro USE flag,
rimuovere i pacchetti che ne bloccano altri se ce ne sono, e far partire il
lungo processo)</comment>
miamacchina etc # <i>time emerge -vuD --newuse world</i>
<comment>(79 packages have been (re)compiled)</comment>

real  180m13.276s
user  121m22.905s
sys   36m31.472s

<comment>(Remergere libtool per evitare potenziali problemi)</comment>
miamacchina etc # <i>emerge libtool</i>

<comment>(Aggiornare i file di configurazione, assicurandoci di <b>non</b>
permettere a etc-update di modificare file di configurazione che si sono
modificati)</comment>
miamacchina etc # <i>etc-update</i>

<comment>(Se si è aggiornato perl, è meglio eseguire perl-cleaner)</comment>
miamacchina etc # <i>time perl-cleaner all</i>
real  1m6.495s
user  0m42.699s
sys   0m10.641s

<comment>(In caso di aggiornamenti importanti a python, è meglio eseguire
python-updater)</comment>
miamacchina etc # <i>python-updater</i>
</pre>

</body>
</section>
<section>
<title>Cosa fare dopo</title>
<body>

<p>
A seconda di cosa si vuole fare con il nuovo sistema Gentoo, si vuole
installare applicazioni per un server o per un sistema desktop. A titolo di
esempio, i comandi <c>emerge gnome</c> e <c>emerge kde</c> sono stati
cronometrati nel sistema ~x86 installati come descritto. Entrambi sono stati
installati a partire dallo stesso punto.
</p>

<p>
Si consiglia di consultare <uri link="/doc/it/">la lista della
documentazione</uri> per scoprire come installare e configurare le
applicazioni di propria scelta.
</p>

<impo>
Il seguente è solo un esempio. In nessun modo va considerato una
raccomandazione.
</impo>

<pre caption="Emerge di GNOME">
miamacchina etc # <i>emerge -vp gnome</i>
<comment>(Esaminare la lista dei pacchetti e le loro USE flag, quindi
modificare make.conf se richiesto.</comment>
miamacchina etc # <i>nano -w /etc/make.conf</i>
<comment>Sono state definite le USE flag seguenti)</comment>
USE="nptl nptlonly -ipv6 -fortran unicode svg hal dbus \
     -kde -qt3 -qt4 -arts -eds -esd gnome gstreamer gtk firefox"

miamacchina etc # <i>time emerge gnome</i>
<comment>(326 pacchetti sono stati installati)</comment>

real  520m44.532s
user  339m21.144s
sys   146m22.337s
</pre>

<pre caption="Emerge di KDE">
miamacchina etc # <i>emerge -vp kde-meta</i>
<comment>(Esaminare la lista dei pacchetti e le loro USE flag, quindi
modificare make.conf se richiesto.</comment>
miamacchina etc # <i>nano -w /etc/make.conf</i>
<comment>Sono state definite ls USE flag seguenti)</comment>
USE="nptl nptlonly -ipv6 -fortran unicode svg hal dbus \
     kde qt3 qt4 -arts -eds -esd -gnome -gstreamer -gtk -firefox"

miamacchina etc # <i>time emerge kde-meta</i>
<comment>(391 pacchetti sono stati installati)</comment>

real  1171m25.318s
user  851m26.393s
sys   281m45.629s
</pre>

</body>
</section>
</chapter>
</guide>
