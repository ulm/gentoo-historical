<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/kernel-config.xml,v 1.8 2010/03/22 19:15:44 scen Exp $ -->

<guide link="/doc/it/kernel-config.xml" lang="it">
<title>Guida alla configurazione del kernel Linux in Gentoo</title>

<author title="Autore">
  <mail link="dsd@gentoo.org">Daniel Drake</mail>
</author>
<author title="Contributi">
  <mail link="curtis119@gentoo.org">Curtis Napier</mail>
</author>
<author title="Contributi">
  <mail link="jdr@xemoka.net">Justin Robinson</mail>
</author>
<author title="Contributi">
  <mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>
<author title="Redazione">
  <mail link="smithj@gentoo.org">Jonathan Smith</mail>
</author>
<author title="Redazione">
   <mail link="nightmorph"/>
 </author>
<author title="Traduzione">
  <mail link="scen@gentoo.org">Davide Cendron</mail>
</author>

<abstract>
Lo scopo di questo documento è introdurre le nozioni di base per la
configurazione manuale del kernel, e dare i dettagli degli errori di
configurazione più comuni.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.4</version>
<date>2010-03-21</date>

<chapter>
<title>Introduzione</title>
<section>
<body>

<p>
Gentoo fornisce due modi per gestire l'installazione e l'aggiornamento del
kernel: <e>automatica</e> (genkernel), e <e>manuale</e>. Sebbene il metodo
automatico sia un approccio <e>più facile</e> per l'utente, ci sono vari motivi
per i quali una vasta fetta di utenti Gentoo sceglie di configurare manualmente
il proprio kernel: maggiore flessibilità, kernel di dimensioni minori, tempi di
compilazione più brevi, acquisizione di esperienza, tempo da perdere, ecc.
</p>

<p>
Questa guida non copre il metodo automatico (genkernel). Se si preferisce usare
genkernel per compilare ed installare il proprio kernel, si faccia riferimento
alla <uri link="/doc/it/genkernel.xml">documentazione di Genkernel</uri>.
</p>

<p>
Questa guida non ha lo scopo di documentare il processo di configurazione
manuale dall'inizio alla fine: il processo di configurazione fa affidamento ad
una buona dose di buonsenso, e ad un livello relativamente alto di conoscenza
tecnica riguardo al sistema. Questo documento, invece, introdurrà i concetti di
una configurazione manuale, elencando in modo dettagliato le trappole più comuni
nelle quali incappano gli utenti.
</p>

<p>
Questo documento è stato scritto basandosi sui kernel più recenti, per le
architetture di computer più comuni. Qualche dettaglio potrebbe differire per i
kernel più vecchi o architetture più esotiche, comunque gran parte dei
contenuti rimarranno pertinenti.
</p>

<p>
A questo punto si suppone di avere già scompattato i sorgenti del kernel nel
proprio disco fisso (solitamente da qualche parte in <c>/usr/src/linux</c>), e
si presume la conoscenza su come accedere allo strumento di configurazione
<c>menuconfig</c> e su come muoversi nel menù di sistema. Se non si è ancora a
questo livello di esperienza, sono disponibili altre utili guide a riguardo.
</p>

<ul>
  <li>
    La <uri link="doc/it/gentoo-kernel.xml">Guida ai Kernel Gentoo Linux</uri>
    elenca i vari pacchetti sorgenti dei kernel disponibili
  </li>
  <li>
    La guida per l'<uri link="/doc/it/kernel-upgrade.xml">Upgrade del kernel
    Gentoo Linux</uri> spiega come aggiornare il kernel o migrare da un kernel
    ad un altro.
  </li>
  <li>
    il <uri link="/doc/it/handbook/index.xml">Manuale Gentoo</uri>, inoltre,
    copre alcuni aspetti dell'installazione del kernel.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Nozioni di configurazione</title>
<section>
<title>Le basi</title>
<body>

<p>
Il processo in generale è alquanto semplice: verrà mostrata una serie di
opzioni, categorizzate in menù individuali e sottomenù, e si dovrà selezionare
il supporto all'hardware e alle funzionalità del kernel attinenti al proprio
sistema.
</p>

<p>
Il kernel include una <e>configurazione predefinita</e>, che viene proposta la
prima volta che si esegue menuconfig in una particolare serie di sorgenti. Le
opzioni predefinite sono generalmente essenziali e ragionevoli, per cui la
maggioranza degli utenti dovranno apportare solamente poche modifiche alla
configurazione di base. Se si decide di disabilitare un'opzione abilitata in
modo predefinito, ci si assicuri di avere ben chiaro a cosa serve e le
conseguenze della sua disabilitazione.
</p>

<p>
Se si sta configurando il kernel Linux per la prima volta, è consigliabile
avere un approccio prudenziale: non si dev'essere troppo avventati, ed è meglio
cercare di apportare il minor numero possibile di modifiche alla configurazione
predefinita. Nello stesso tempo si tenga presente che sarà necessario adattare
certe parti della configurazione alle caratteristiche  del proprio sistema per
permettere allo stesso di avviarsi!
</p>

</body>
</section>
<section>
<title>Built-in o modulare</title>
<body>

<p>
Molte opzioni di configurazione sono <e>a tre stati</e>: possono non essere
assolutamente compilate, integrate (built-in) nel kernel (Y), o compilate come
modulo (M). I moduli sono memorizzati esternamente nel filesystem, mentre gli
oggetti built-in sono compilati direttamente all'interno dell'immagine stessa
del kernel.
</p>

<p>
C'è un'importante differenza tra la compilazione nel kernel e quella modulare:
tranne qualche eccezione, il kernel non effettua nessun tentativo di caricamento
dei moduli all'occorrenza (l'operazione viene demandata all'utente). Mentre
certe parti del sistema possono avere strumenti di caricamento su richiesta, e
sono disponibili delle utilità per il caricamento dei moduli, è raccomandabile
compilare il supporto hardware e alle funzionalità del kernel direttamente
all'interno dello stesso. Ciò assicura che i supporti all'hardware e alle
funzionalità saranno sempre disponibili quando se ne avrà bisogno.
</p>

<p>
Ovviamente in certe parti della configurazione la scelta dell'integrazione nel
kernel è un requisito assolutamente necessario. Per esempio, se la propria
partizione di root è su un filesystem <c>ext2</c>, il sistema non si avvierà se
il supporto a ext2 è stato compilato come modulo (il sistema cercherà il modulo
ext2 nella partizione di root, ma non ci riuscirà a meno che il supporto a ext2
non sia già stato caricato!).
</p>

</body>
</section>
<section>
<title>Supporto Hardware</title>
<body>

<p>
Oltre a rilevare il <e>tipo di architettura</e> del proprio sistema, lo
strumento di configurazione non effettuerà nessun tentativo per identificare
l'hardware attualmente presente nella macchina. Sebbene ci siano già delle
configurazioni preimpostate per il supporto a diverso hardware, probabilmente
sarà necessario individuare e selezionare le opzioni appropriate per la propria
configurazione hardware.
</p>

<p>
Ovviamente questo comporta una conoscenza dei componenti interni e di quelli
collegati al proprio computer, o comunque l'identificazione degli stessi. Per
molti componenti interni, si dovrà identificare il <e>chipset</e> utilizzato da
ognuno, piuttosto che il nome del produttore.
</p>

<p>
Sono disponibili degli strumenti che possono aiutare in questo processo di
riconoscimento. <c>lspci</c> (contenuto nel pacchetto <c>sys-apps/pciutils</c>)
identificherà l'hardware basato su PCI e AGP, inclusi i componenti integrati
nella scheda madre stessa. <c>lsusb</c> (contenuto nel pacchetto
<c>sys-apps/usbutils</c>) identificherà i dispositivi connessi alle porte USB.
</p>

<p>
La situazione è alquanto confusa poiche il mondo dell'hardware non è
propriamente standardizzato. Se la propria configurazione hardware non si
discosta molto da quelle più comuni, molto probabilmente il proprio hard disk
IDE funzionerà da subito, come il mouse PS/2 o la tastiera o il mouse USB. Si
avrà inoltre un supporto grafico VGA di base. Tuttavia alcuni dispositivi, tipo
le adattatori ethernet, raramente usano componenti hardware standard, per cui
sarà necessario identificare il chipset della propria scheda e abilitare il
relativo supporto, al fine di avere una connessione alla rete disponibile.
</p>

<p>
Inoltre, mentre alcune cose funzioneranno regolarmente con le impostazioni
predefinite, si dovranno selezionare ulteriori opzioni per sfruttare tutte
le potenzialità dal proprio sistema. Per esempio, se non si abilita il supporto
per il giusto chipset IDE, il proprio disco fisso IDE funzionerà <e>molto</e>
lentamente.
</p>

</body>
</section>
<section>
<title>Funzionalità del kernel</title>
<body>

<p>
Come per il supporto hardware, bisogna decidere quali funzionalità offerte dal
kernel sono necessariamente da abilitare. Un esempio importante riguarda il
supporto ai filesystem: si deve selezionare il supporto ai filesystem in uso nel
proprio disco fisso, e probabilmente anche a quelli in uso su supporti
rimovibili (es. VFAT su flash disk USB).
</p>

<p>
Un'altro esempio comune sono le funzionalità avanzate di rete. Se si vuole
utilizzare qualche tipo di routing o firewalling, ci si assicuri che le voci di
configurazione pertinenti siano incluse nella configurazione del kernel.
</p>

</body>
</section>
<section>
<title>Pronti?</title>
<body>

<p>
Ora che sono stati introdotti i concetti, si hanno gli strumenti per cominciare
ad identificare il proprio hardware e navigare nel menù di configurazione,
selezionando le opzioni del kernel necessarie per il proprio sistema.
</p>

<p>
Il resto di questo documento mira a chiarire gli aspetti che generalmente
possono creare confusione, e dare dei suggerimenti onde evitare i problemi più
comuni nei quali gli utenti incorrono spesso. Buona fortuna!
</p>

</body>
</section>
</chapter>

<chapter>
<title>Problemi comuni e aree di confusione</title>

<section>
<title>I dischi SATA sono SCSI</title>
<body>

<p>
Gran parte dei sistemi desktop moderni sono forniti di dispositivi di
memorizzazione di massa (dischi fissi e drive CD/DVD) su bus <uri
link="http://en.wikipedia.org/wiki/SATA">Serial ATA</uri> piuttosto che sul
vecchio bus di tipo <uri
link="http://en.wikipedia.org/wiki/Parallel_ATA">IDE</uri> (cavo piatto).
</p>

<p>
Il supporto SATA in Linux è implementato in uno strato definito <e>libata</e>,
posizionato al di sotto del sottosistema SCSI. Per questa ragione, i driver SATA
si trovano nella sezione della configurazione relativa ai driver SCSI. Siccome
i dispositivi di archiviazione verranno trattati come dispositivi SCSI, è
implicitamente richiesto anche il supporto ai dischi/cdrom SCSI. Il proprio
disco SCSI verrà chiamato (es.) <c>/dev/sda</c> e il proprio drive CD/DVD SATA
verrà chiamato (es.) <c>/dev/sr0</c>.
</p>

<p>
Sebbene la maggioranza di questi driver sia per i controller SATA, libata non è
stato progettato specificatamente per SATA. Tutti i principali driver IDE
verranno portati su libata nel prossimo futuro, e a quel punto le
considerazioni fatte in precedenza saranno valide anche per tutti gli
utilizzatori di dischi IDE.
</p>

<pre caption="Opzioni di configurazione per libata">
Device Drivers  ---&gt;
 SCSI device support  ---&gt;
  &lt;*&gt; SCSI device support
  &lt;*&gt;   SCSI disk support
  &lt;*&gt;   SCSI CDROM support

  SCSI low-level drivers  ---&gt;
   &lt;*&gt; Serial ATA (SATA) support
    <comment>Selezionare il proprio chipset tra le voci elencate sotto a questa opzione</comment>
</pre>

</body>
</section>
<section>
<title>Chipset IDE e DMA</title>
<body>

<p>
Malgrado l'introduzione di SATA, i dispositivi IDE sono ancora molto comuni e
utilizzati da molte persone. IDE è una tecnologia abbastanza generica, per cui
Linux supporta nativamente pressochè tutti i controller IDE, senza dover
selezionare alcuna opzione specifica.
</p>

<p>
Tuttavia IDE è una tecnologia vecchia, e la sua incarnazione originale del
<e>Programmed Input/Output</e> (PIO - "Input/Output Programmato") - non riesce a
fornire le velocità di trasferimento necessarie per un accesso veloce ai moderni
dispositivi di memorizzazione. Il driver IDE generico si limita a queste
modalità di trasferimento PIO, che causano velocità di trasferimento dati
bassissime ed un uso elevato della CPU durante il trasferimento dei dati da/sul
disco.
</p>

<p>
A meno che non si abbia a che fare con sistemi precedenti al 1995, il proprio
controller IDE supporterà anche un metodo di trasferimento alternativo,
denominato <e>Direct Memory Access</e> (DMA - "Accesso Diretto alla Memoria").
DMA è molto più veloce, e l'utilizzo della CPU è scarsamente influenzato mentre
vengono effettuati dei trasferimento di dati. Se si stanno riscontrando delle
prestazioni del sistema veramente scarse e si sta usando un disco IDE, molto
probabilmente la modalità DMA non viene utilizzata.
</p>

<note>
Come menzionato in precedenza, libata è disponibile anche per i dischi IDE. Se
si sta utilizzando libata, tutti i propri dischi, inclusi quelli IDE, useranno
DMA. Non c'è bisogno di nessuna ulteriore verifica o configurazione.
</note>

<p>
Se non si sta usando libata per i propri dischi IDE, allora bisognerà verificare
l'utilizzo del DMA ed eventualmente abilitarlo.
</p>

<pre caption="Verificare se DMA è abilitato per il proprio disco IDE">
# <i>hdparm -d /dev/hda</i>

/dev/hda:
 using_dma    =  0 (off)
</pre>

<p>
Per abilitare il DMA per il proprio dispositivo IDE, si dovrà semplicemente
abilitare l'opzione di configurazione per il proprio controller IDE.
</p>

<pre caption="Opzioni di configurazione per i controller IDE">
Device Drivers  ---&gt;
 ATA/ATAPI/MFM/RLL support  ---&gt;
  &lt;*&gt; ATA/ATAPI/MFM/RLL support
  &lt;*&gt;   Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support
  [*]     PCI IDE chipset support
    <comment>Selezionare il proprio chipset tra le voci elencate sotto a questa opzione</comment>
</pre>

</body>
</section>
<section>
<title>Controller Host USB</title>
<body>

<p>
<uri link="http://it.wikipedia.org/wiki/USB">USB</uri> è un bus ampiamente
utilizzato per connettere periferiche esterne al computer. Uno dei motivi del
successo di USB è il suo protocollo unificato, sebbene i dispositivi  denominati
<e>host controller devices</e> (HCD) che vengono implementati nei computer
possano contenere delle lievi variazioni. Le tipologie principali sono 3:
</p>

<ul>
  <li>
    <c>UHCI</c> "Universal Host Controller Interface". Supporta USB 1.1, e
    solitamente si trova nelle schede madri basate su chipset VIA o Intel.
  </li>
  <li>
    <c>OHCI</c> "Open Host Controller Interface". Supporta USB 1.1 e solitamente
    si trova nelle schede madri basate su chipset Nvidia o SiS.
  </li>
  <li>
    <c>EHCI</c> "Extended Host Controller Interface". È l'unico controller host
    comune che supporta USB 2.0, e tipicamente si trova in ogni computer che
    supporta USB 2.0.
  </li>
</ul>

<p>
Molti sistemi vengono forniti con due delle tipologie di interfacce
sopraelencate: EHCI (USB 2.0) e una tra UHCI e OHCI (USB 1.1). È importante che
vengano selezionate entrambe le tipologie presenti nel proprio sistema. Mentre
tutti i dispositivi USB 2.0 sono retrocompatibili con USB 1.1, una larga fetta
dei dispositivi USB (anche quelli venduti al giorno d'oggi) sono basati su
un'interfaccia USB 1.1 - perchè un mouse USB dovrebbe necessitare di più di
1,5mbit/sec?
</p>

<p>
Se non si selezionano le opzioni pertinenti per i tipi di HCD USB presenti nel
proprio sistema, si potrebbero riscontrare problemi di porte USB 'morte': si
inserisce un dispositivo, ma esso non viene alimentato o non risponde in alcun
modo.
</p>

<p>
Un abile trucchetto con <c>lspci</c> (contenuto nel pacchetto
<c>sys-apps/pciutils</c>) rende relativamente facile identificare quali HCD
sono presenti nel proprio sistema. Ignorando i controller FireWire, inclusi
anch'essi nell'identificazione, è semplice capire che il seguente sistema
richiede il supporto a OHCI e EHCI:
</p>

<pre caption="Usare lspci per individuare i tipi di HCD">
# <i>lspci -v | grep HCI</i>
00:02.0 USB Controller: nVidia Corporation CK804 USB Controller (rev a2) (prog-if 10 <i>[OHCI]</i>)
00:02.1 USB Controller: nVidia Corporation CK804 USB Controller (rev a3) (prog-if 20 <i>[EHCI]</i>)
01:0b.0 FireWire (IEEE 1394): Agere Systems FW323 (rev 61) (prog-if 10 [OHCI])
</pre>

<pre caption="Configurazione per gli HCD USB">
Device Drivers  ---&gt;
 USB support  ---&gt;
  &lt;*&gt; Support for Host-side USB
  ---   USB Host Controller Drivers
  &lt;*&gt;   EHCI HCD (USB 2.0) support
  &lt;*&gt;   OHCI HCD support
  &lt;*&gt;   UHCI HCD (most Intel and VIA) support
  <comment>Selezionare gli HCD presenti nel proprio sistema, o tutti e 3 se non si è sicuri.</comment>
</pre>

</body>
</section>
<section>
<title>Sistemi Multiprocessore, Hyper-Threading e Dual Core</title>
<body>

<p>
Molti computer sono basati su più processori, a volte in modi non immediatamente
evidenti.
</p>

<ul>
  <li>
    Diverse CPU Intel supportano una tecnologia chiamata <uri
    link="http://en.wikipedia.org/wiki/Hyperthreading">hyper-threading</uri>,
    nella quale la CPU viene vista dal sistema come due processori
    <e>logici</e>.
  </li>
  <li>
    Alcune delle più recenti CPU Intel/AMD attualmente sono composte da più
    processori fisici inclusi in un singolo involucro, e vengono definiti
    processori <uri link="http://en.wikipedia.org/wiki/Dual_core">dual
    core</uri>.
  </li>
  <li>
    Qualche computer di alto livello ha diversi processori fisici installati
    in speciali schede madri per fornire un incremento significativo delle
    prestazioni rispetto ad un sistema <e>uniprocessore</e>. Probabilmente si
    saprà se si dispone di un sistema di questo tipo, in quanto ha costi non
    propriamente economici.
  </li>
</ul>

<p>
In ogni caso si deve selezionare l'appropriata opzione del kernel per ottenere
prestazioni ottimali da queste configurazioni.
</p>

<pre caption="Configurazione per sistemi multi-processore">
Processor type and features  ---&gt;
 [*] Symmetric multi-processing support
 <comment>Selezionare questa opzione se si ha un sistema multiprocessore (di qualsiasi tipo)</comment>
 [*]   SMT (Hyperthreading) scheduler support
 <comment>Selezionare questa opzione se si utilizza una CPU Hyper-Threading Intel</comment>
 [*]   Multi-core scheduler support (NEW)
 <comment>Selezionare questa opzione se la propria CPU è dual core</comment>
Power management and ACPI options  ---&gt;
 [*] ACPI (Advanced Configuration and Power Interface) Support
 <comment>Questa opzione abilita non solo le funzionalità riguardanti la
 gestione energetica, ma potrebbe anche essere un requisito necessario per
 rendere disponibili al proprio sistema tutte le CPU.</comment>
</pre>

</body>
</section>
<section>
<title>Supporto High Memory x86</title>
<body>

<p>
A causa delle limitazioni nello spazio d'indirizzamento a 32bit delle
architetture x86, un kernel con una configurazione standard può solamente
supportare fino a 896mb di RAM. Se il proprio sistema ha più memoria, solo i
primi 896mb saranno visibili, a meno di non abilitare il supporto all'high
memory.
</p>

<note>
Questa limitazione è specifica delle architetture x86 (IA32). Altre architetture
supportano nativamente grandi quantità di memoria, senza nessuna modifica alla
configurazione.
</note>

<p>
Il supporto all'high memory non è abilitato in modo predefinito, poiche esso
introduce un leggero aumento di carico sul sistema. Non ci si deve lasciare
fuorviare da ciò, l'aumento di carico è insignificante se comparato
all'incremento di prestazioni dovuto alla quantità maggiore di memoria
disponibile!
</p>

<pre caption="Abilitare il supporto all'high memory su x86">
Processor type and features  ---&gt;
 High Memory Support  ---&gt;
  (X) 4GB
  ( ) 64GB
  <comment>Scegliere l'opzione 4Gb, a meno che il proprio sistema non abbia più di 4GB di RAM.</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Ulteriore documentazione sulla configurazione del kernel</title>
<section>
<body>

<p>
Finora si è discusso riguardo a concetti generici e problemi specifici riguardo
alla configurazione del kernel, senza scendere nei dettagli (si lascia al
lettore il compito di farlo!). Tuttavia, altre parti della raccolta di
documentazione su Gentoo forniscono informazioni più particolareggiate riguardo
alle questioni affrontate in precedenza.
</p>

<p>
Questi documenti potranno risultare utili durante la configurazione di aspetti
specifici, ma se si è nuovi alla configurazione del kernel si raccomanda di non
essere troppo avventurosi. È consigliabile iniziare con la preparazione di un
sistema di base funzionante, si potrà sempre tornare sui propri passi e
aggiungere il supporto all'audio, stampa, ecc.
</p>

<ul>
  <li>
    La <uri link="/doc/it/alsa-guide.xml">Guida su ALSA</uri> fornisce i
    dettagli delle opzioni di configurazione richieste per il supporto alle
    schede audio. È da notare che ALSA è un'eccezione rispetto alla modalità
    suggerita di compilazione built-in degli oggetti; ALSA attualmente è molto
    più facile da configurare se i componenti sono modulari.
  </li>
  <li>
    La  <uri link="/doc/it/bluetooth-guide.xml">Guida Gentoo Linux al
    Bluetooth</uri> fornisce i dettagli sulle opzioni necessarie per usare i
    dispositivi bluetooth nel proprio sistema.
  </li>
  <li>
    La <uri link="/doc/it/ipv6.xml">Guida Router IPV6</uri> spiega come
    configurare il proprio kernel per il routing usando il protocollo di
    indirizzamento di rete di nuova generazione.
  </li>
  <li>
    Se si utilizzano i driver grafici proprietari di nVidia per migliorare le
    prestazioni grafiche 3D, la <uri link='/doc/it/nvidia-guide.xml'>Guida
    nVidia per Gentoo Linux</uri> elenca quali opzioni bisognerebbe e non
    bisognerebbe selezionare su tali sistemi.
  </li>
  <li>
    Tra le altre cose, la <uri
    link="/doc/it/power-management-guide.xml">Guida alla Gestione
    Energetica</uri> spiega come configurare il proprio kernel per lo scaling
    della frequenza della CPU, e per le funzionalità di ibernazione e
    sospensione.
  </li>
  <li>
    Se si sta utilizzando un sistema PowerPC, le <uri
    link='/doc/it/gentoo-ppc-faq.xml'>risposte a domande frequenti su Gentoo
    Linux/PowerPC</uri> contengono qualche sezione riguardante la configurazione
    del kernel.
  </li>
  <li>
    La <uri link="/doc/it/printing-howto.xml">Guida alla stampa in Gentoo</uri>
    elenca le opzioni del kernel necessarie per il supporto alla stampa in
    Linux.
  </li>
  <li>
    La guida <uri link="/doc/it/usb-guide.xml">USB e Gentoo Linux</uri>
    fornisce i dettagli della configurazione richiesta per usare i dispositivi
    USB più comuni, come mouse/tastiere, supporti di archiviazione e stampanti.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Risoluzione dei problemi</title>
<section>
<title>Le modifiche alla configurazione non hanno effetto</title>
<body>

<p>
È molto comune per gli utenti effettuare una modifica alla configurazione, ma
poi fare un piccolo errore nei passaggi successivi. Il sistema viene riavviato
con un'immagine del kernel che non è quella appena riconfigurata, viene
verificato che il problema che si cercava di risolvere persiste, e si conclude
che la modifica alla configurazione non risolve il problema.
</p>

<p>
Il processo di compilazione e installazione del kernel esula dagli scopi di
questo documento, per le linee guida si faccia riferimento alla guida <uri
link="/doc/it/kernel-upgrade.xml">Upgrade del kernel Gentoo Linux</uri>. In
breve, le operazioni sono: configurare, compilare, montare /boot (se non è già
montata), sovrascrivere l'immagine del kernel con quella nuova, riavviare. Se
si omette una qualsiasi di queste operazioni conclusive, le modifiche non
avranno effetto!
</p>

<p>
È possibile verificare se il kernel con il quale si ha avviato il sistema
combacia con quello compilato nel proprio disco fisso esaminando la data e
l'ora di compilazione. Presupponendo che la propria architettura sia x86 e i
sorgenti del kernel siano installati in <path>/usr/src/linux</path>:
</p>

<pre caption="Verificare se si ha avviato il sistema con il kernel modificato">
# <i>uname -v</i>
#4 SMP PREEMPT Sat Jul 15 08:49:26 BST 2006
<comment>questo comando visualizza la data e l'ora in cui il kernel attualmente avviato è stato compilato.</comment>

# <i>ls -l /usr/src/linux/arch/i386/boot/bzImage</i>
-rw-r--r-- 1 dsd users 1504118 Jul 15 08:49 /usr/src/linux/arch/i386/boot/bzImage
<comment>questo comando visualizza la data e l'ora in cui è stata compilata l'immagine del kernel nel proprio hard disk.</comment>
</pre>

<p>
Se i due orari visualizzati dai precedenti comandi differiscono per più di 2
minuti, vuol dire che è stato commesso un errore durante la reinstallazione del
kernel e non si sta eseguendo l'immagine del kernel desiderata!
</p>

</body>
</section>
<section>
<title>I moduli non vengono caricati automaticamente</title>
<body>

<p>
Come menzionato precedentemente in questo documento, selezionare un componente
del kernel come modulo (M) piuttosto che built-in (Y) influenza enormemente il
comportamento del kernel. Vale la pena ripeterlo, poichè molti utenti cadono in
questa trappola.
</p>

<p>
Quando si seleziona un componente come built-in, il codice viene compilato
nell'immagine del kernel (bzImage). Quando il kernel ha bisogno di usare quel
componente, può inizializzarlo e caricarlo automaticamente, senza nessun
intervento da parte dell'utente.
</p>

<p>
Quando si seleziona un componente come modulo, il codice viene compilato in un
file e installato nel filesystem. Generalmente, quando il kernel ha bisogno di
usare quel componente, non ci riesce! Con qualche eccezione, il kernel non fa
nessun tentativo di caricare questi moduli, lasciando il compito all'utente
</p>

<p>
Per cui, se si ha compilato il supporto alla propria scheda di rete come
modulo, e non si riesce ad accedere alla rete, la probabile causa è che il
modulo non è caricato, perciò si dovrà caricarlo manualmente o configurare il
sistema per farlo caricare in automatico durante l'avvio.
</p>

<p>
A meno che non si abbiano precisi motivi per fare diversamente, si risparmia un
bel po' di tempo compilando questi componenti direttamente nell'immagine del
kernel, per permettere al kernel stesso di impostarli automaticamente per
l'utente.
</p>

</body>
</section>
</chapter>
</guide>