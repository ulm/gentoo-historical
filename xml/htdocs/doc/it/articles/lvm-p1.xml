<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/articles/lvm-p1.xml,v 1.2 2007/06/20 20:28:11 scen Exp $ -->

<guide link="/doc/it/articles/lvm-p1.xml" disclaimer="articles" lang="it">
<title>Imparare Linux LVM, Parte 1</title>

<author title="Autore">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Traduttore">
  <mail link="skypjack@gmail.com">Michele Caini</mail>
</author>
<!-- xmlified by: Joshua Saddler (jackdark@gmail.com) -->

<abstract>
In questo articolo, Daniel introduce il lettore ai concetti che stanno dietro a
Linux LVM (Logical Volume Management) e mostra come recuperare le ultime patch
per il kernel e avere gli strumenti installati sul proprio sistema. LVM permette
di creare volumi logici fuori dalle risorse di memoria fisica presenti sulla
macchina. Comunque, differentemente dai volumi fisici, i volumi logici possono
essere espansi e ridotti mentre il sistema è in esecuzione, mettendo a
disposizione degli amministratori di sistema Linux quella flessibilità di
memorizzazione dei dati che fino ad oggi avevano potuto solo sognare.
</abstract>

<!-- The original version of this article was first published on IBM
developerWorks, and is property of Westtech Information Services. This
document is an updated version of the original article, and contains
various improvements made by the Gentoo Linux Documentation team -->

<version>1.2</version>
<date>2006-01-22</date>

<chapter>
<title>Magie nella gestione della memoria con Logical Volume Management</title>
<section>
<title>Introduzione a LVM</title>
<body>

<p>
In questa serie, verrà mostrato come installare e usare il nuovo supporto a
Logical Volume Management integrato nel kernel Linux 2.4. Se il lettore non ha
avuto precedenti esperienze con LVM, troverà un interessante trattato; questa è
una tecnologia fantastica. Prima di recuperare e rendere effettivamente
funzionante LVM, è necessario spiegare esattamente cosa è e come lavora. In
seguito, LVM potrà essere testato e analizzato a fondo.
</p>

<p>
Per molti, come l'autore, l'esperienza con UNIX e Linux è iniziata su una
piattaforma PC, piuttosto che su grandi server e workstation UNIX commerciali.
Sui PC di base, c'era sempre bisogno di darsi da fare col partizionamento del
disco fisso. Gli utenti di PC sono normalmente ben informati riguardo a
strumenti come <c>fdisk</c>, che vengono usati per creare e cancellare
partizioni primarie ed estese sui dischi fissi. Il partizionamento del disco
fisso è una parte sgradevole ma accettata del processo che porta a rendere
funzionante un sistema operativo.
</p>

<p>
Il partizionamento dei dischi fissi può essere seccante perché per fare un buon
lavoro c'è la necessità di stimare con accuratezza di quanto spazio ha bisogno
ogni partizione. In caso di sotto stima, il sistema Linux potrebbe risultare
inutilizzabile, e per risolvere il problema probabilmente sarà necessario
effettuare un backup completo del sistema, effettuare una pulizia del disco
fisso, quindi reinserire tutti i dati all'interno di un nuovo (e presumibilmente
migliore) schema di partizionamento. Un bel lavoro. Questo è esattamente il tipo
di situazioni che gli amministratori di sistema cercano di evitare quanto più
possibile in primo luogo.
</p>

<p>
Mentre le partizioni erano una volta regioni di memoria statica, fortunatamente,
oggi abbiamo un proliferare di strumenti da computer per il ripartizionamento
(il prodotto Partition Magic di PowerQuest è uno degli esempi più popolari).
Questi strumenti permettono di avviare il sistema con un disco speciale e
ridimensionare dinamicamente le partizioni ed i filesystem. Una volta riavviato,
sono a disposizione le partizioni modificate, se tutto va bene sfuggendo via dai
problemi del partizionamento. Questi strumenti per il ridimensionamento delle
partizioni sono ottimi e risolvono il problema della gestione dello spazio di
immagazzinamento per molte persone. Ma sono perfetti? Non esattamente.
</p>

<p>
Mezzi come Partition Magic sono ottimi per workstation, ma non realmente
adeguati per server. Prima di tutto, richiedono di riavviare il sistema. Questo
è qualcosa che molti amministratori di sistema tentano disperatamente di
evitare. Cosa succederebbe se non fosse semplicemente possibile riavviare la
macchina ogni volta che la memoria necessita di modifiche, in caso tale memoria
abbia bisogno di cambiamenti drastici ogni settimana? Cosa succederebbe se fosse
necessario espandere il filesystem così che possa coprire più di un disco fisso,
o nel caso in cui sia necessario allargare o diminuire dinamicamente la capacità
di una volume fisico permettendo contemporaneamente ad Apache di continuare a
fornire pagine Web? In un ambiente dinamico ad alta disponibilità, un
ridimensionatore basilare di partizioni non è sufficiente. Per queste ed altre
situazioni, Logical Volume Manager è una eccellente (se non perfetta) soluzione.
</p>

</body>
</section>
<section>
<title>All'interno di LVM</title>
<body>

<p>
Adesso è necessario dare un'occhiata a come LVM risolve questi problemi. La
creazione di un volume logico LVM è un processo in tre passi. Primo, è
necessario selezionare la risorsa di immagazzinamento fisica che verrà usata per
LVM. Tipicamente, queste sono partizioni normali ma possono anche essere volumi
software RAID di Linux creati precedentemente. Nella terminologia LVM, queste
risorse di immagazzinamento sono chiamate "volumi fisici". Il primo passo nella
creazione di LVM comprende la corretta inizializzazione di queste partizioni
così che possano essere riconosciute dal sistema LVM. Questo comporta
l'impostazione del tipo corretto della partizione se quella che viene aggiunta è
una partizione fisica, quindi l'esecuzione del comando pvcreate.
</p>

<p>
Una volta in possesso di uno o più volumi fisici inizializzati per l'uso da
parte di LVM, è possibile procedere al passo due, ovvero la creazione di un
gruppo di volume. È possibile considerare il gruppo di volume come un
contenitore di memoria che consiste in uno o più volumi fisici. Mentre LVM è in
esecuzione, ulteriori volumi fisici possono essere aggiunti al gruppo di volume
o anche rimossi. Comunque, non è possibile montare o creare filesystem
direttamente su un gruppo di volume. Piuttosto, sarà possibile chiedere a LVM di
creare uno o più "volumi logici" usando il proprio contenitore di memoria del
gruppo di volume:
</p>

<figure link="/images/docs/l-lvm-1.gif" caption="Un gruppo di volumi è creato
fuori dai volumi fisici"/>

<p>
Creare un volume logico LVM è veramente facile, una volta creato poi è possibile
procedere aggiungendo un filesystem su di esso, montarlo, e inizare ad usare il
volume per immagazzinare i propri file. Per creare un volume logico, bisogna
usare il comando <c>lvcreate</c>, specificando il nome del nuovo volume, la
dimensione voluta per esso, e il gruppo di volume di cui si desidera che il
particolare volume logico faccia parte. Il sistema LVM allocherà quindi memoria
dal gruppo di volume specificato e creerà il nuovo volume, che sarà poi pronto
per l'uso. Una volta creato, su di esso potrà essere messo un filesystem ext2 o
ReiserFS, potrà essere montato, potrà essere usato come meglio si preferisce.
</p>

<figure link="/images/docs/l-lvm-2.gif" caption="Creare due volumi logici dal
gruppo di volume esistente"/>

</body>
</section>
<section>
<title>Entità</title>
<body>

<p>
Dietro il sipario, il sistema LVM alloca memoria in "fette" di dimensioni
uguali, chiamate entità (o extent). Esiste la possibilità di specificare la
dimensione da usare per la specifica entità al momento della creazione. La
dimensione predefinita per un'entità è di 4Mb, già perfetta per molti utenti.
Uno dei punti forti di LVM è che la posizione fisica della memoria dell'entità
usata per uno dei volumi logici (in altre parole, su quale disco sono
memorizzate) può essere cambiata dinamicamente mentre il volume logico è montato
e in uso. Il sistema LVM assicura che i volumi logici continueranno ad operare
perfettamente permettendo allo stesso tempo all'amministratore di cambiare
fisicamente il luogo dove ogni cosa viene memorizzata.
</p>

<p>
Certamente, fino a che ogni cosa viene creata fuori dalle entità equamente
dimensionate, sarà veramente facile allocare alcune entità aggiuntive per un
volume logico già esistente, o in altre parole, far "crescere" dinamicamente il
volume:
</p>

<figure link="/images/docs/l-lvm-3.gif" caption="Aggiungere entità addizionali
dal proprio gruppo di volume, espandendo la dimensione del particolare volume
logico"/>

<p>
Una volta che il volume logico è stato espanso, sarà possibile in seguito
allargare il proprio filesystem ext2 o ReiserFS per trarre vantaggio da questo
nuovo spazio. Se l'utente ha intenzione di usare un programma come
<c>resize_reiserfs</c>, questa estensione del filesystem può anche avvenire
mentre il volume è montato e in uso. Davvero sorpredente: con LVM e strumenti di
espansione del filesystem a caldo (anche detti online), non sarà più necessario
riavviare il proprio sistema o ancora passare al runlevel 1 per cambiare la
propria configurazione di memoria.
</p>

<p>
La sola occasione in cui ci sarà bisogno di spengere il proprio sistema è quando
si presenterà la necessità di aggiungere nuovi dischi fisici. Una volta che i
nuovi dischi saranno stati aggiunti, sarà possibile poi aggiungere questi nuovi
volumi fisici al proprio gruppo di volume (o ai propri gruppi volume) per creare
una nuova riserva di entità.
</p>

</body>
</section>
<section>
<title>Configurare LVM</title>
<body>

<p>
A questo punto LVM è installato. LVM si compone di due parti: un componente
kernel e un insieme di strumenti che operano in user-space. Per iniziare, andare
sulla pagina principale di LVM (al riguardo si veda il paragrafo <uri
link="#resources">Risorse</uri> più avanti in questo articolo) e scaricare la
versione più recente dell'archivio di LVM (al momento lvm_0.9.1_beta3.tar.gz)
presente. L'archivio di LVM contiene tutti gli strumenti che operano in
user-space, così come un gruppo di patch per il kernel. Qua è dove le cose
cominciano a farsi interessanti.
</p>

<p>
In caso l'utente possieda già un kernel della serie 2.4 installato, potrebbe
anche già avere disponibile il supporto per LVM nel proprio sistema, ma se così
non fosse, la ricompilazione del proprio kernel per abilitare il supporto LVM
sarà cosa da poco. Comunque, si potrebbe non volere usare il supporto LVM
incluso nel proprio kernel 2.4 preparato (o fornito dalla distribuzione). Nel
caso l'utente voglia usare l'ultima versione di LVM, probabilmente vorrà
applicare le patch presenti nell'archivio LVM al proprio albero sorgente per il
kernel 2.4 attuale. Di seguito viene spiegato come è possibile farlo.
</p>

<p>
Per cominciare, bisogna entrare nella propria cartella dei sorgenti del kernel
(<path>/usr/src/linux</path>) e creare una cartella chiamata
<path>extras</path>. Quindi, entrare in questa cartella ed estrarre il proprio
archivio LVM:
</p>

<pre caption="Estrarre le patch">
# <i>cd /usr/src/linux</i>
# <i>mkdir extras</i>
# <i>cd extras</i>
# <i>tar xzvf /path/to/location/of/lvm_0.9.1_beta3.tar.gz</i>
</pre>

<p>
Una volta fatto quanto detto, sarà possibile notare una nuova cartella in extras
chiamata <path>LVM</path> che contiene un'altra cartella il cui nome equivale
alla versione di LVM appena estratta. Risalire dentro queste due cartelle per
arrivare ai sorgenti di LVM:
</p>

<pre caption="Raggiungere i sorgenti di LVM">
# <i>cd LVM/0.9.1_beta3</i>
# <i>ls</i>
ABSTRACT      COPYING      INSTALL     Makefile     README    autoconf      config.status  kernel         make.tmpl.in
CHANGELOG     COPYING.LIB  KNOWN_BUGS  Makefile.in  TODO      config.cache  configure      lvm_input_msg  scripts
CONTRIBUTORS  FAQ          LVM-HOWTO   PATCHES      WHATSNEW  config.log    configure.in   make.tmpl      tools
</pre>

<p>
Sono presenti diversi file di testo, script, e cartelle di sorgenti. Si possono
trovare le istruzioni per l'installazione all'interno nel file
<path>INSTALL</path>; questo testo guiderà il lettore attraverso questo
processo. Prima di tutto, dovrà essere eseguito lo script configure, come segue:
</p>

<pre caption="Configurare i sorgenti LVM">
# <i>./configure --prefix=/ --mandir=/usr/man</i>
</pre>

</body>
</section>
<section>
<title>Applicare le patch</title>
<body>

<p>
Dopo aver eseguito il comando sopra, saranno creati e configurati i Makefile per
installare tutti gli strumenti LVM in <path>/sbin</path> e le pagine man in
<path>/usr/man</path>. Se le proprie pagine man sono in
<path>/usr/share/man</path> (come per FHS 2.1), c'è bisogno di correggere il
percorso precedente in tal senso. E, se i sorgenti del kernel non sono in
<path>/usr/src/linux</path>, aggiungere un'opzione
<c>--with-kernel_dir=/percorso/per/usr/src/linux</c> su riga di comando. Una
volta che lo script configure termina il suo compito, si può procedere con
l'installazione degli strumenti e generare le patch per il kernel corrente.
Prima bisogna applicare le varie patch al kernel. Entrare nella cartella
<path>PATCHES</path>:
</p>

<pre caption="Cambiare cartella">
# <i>cd PATCHES</i>
</pre>

<p>
Adesso, basterà digitare il comando <c>make</c>. Il Makefile genererà una patch
appositamente per gli specifici sorgenti del kernel serie 2.4:
</p>

<pre caption="Creare la patch">
# <i>make</i>
</pre>

<p>
La patch sarà chiamata <c>lvm-[versione_lvm]-[versione_kernel].patch</c>. Per
esempio, usando la versione 0.9.1_beta3 di LVM e il kernel 2.4.0-ac11, la patch
sarà chiamata <c>lvm-0.9.1_beta3-2.4.0-ac11.patch</c>. La si potrà trovare nella
cartella corrente. Adesso, è il momento di applicare la patch. Per farlo, c'è
bisogno di cambiare cartella passando in quella relativa ai sorgenti del kernel
e usare il comando patch come mostrato di seguito:
</p>

<pre caption="Il comando patch">
# <i>cd /usr/src/linux</i>
# <i>patch -l -p1 &lt; /usr/src/linux/extras/LVM/0.9.1_beta3/PATCHES/lvm-0.9.1_beta3-2.4.0-ac11.patch</i>
</pre>

<p>
Anche se la documentazione riportata nel file INSTALL di LVM non riporta quanto
segue, l'autore di solito aggiunge l'opzione <c>-l</c> al comando patch. Questa
opzione permette al programma patch di compensare ogni cambiamento negli spazi
bianchi (come cambiamenti minori nell'indentazione) che potrebbero comunemente
causare il fallimento di alcune parti della patch. Se il comando precedente
termina senza alcuna linea "FAILED", sarà giunto già il momento di installare
gli strumenti che operano in user-space. Se così non fosse, ci sarà invece
bisogno di perlustrare la propria cartella <path>/usr/src/linux</path> alla
ricerca di file <c>.rej</c> e inserire i componenti esclusi all'interno dei
sorgenti a mano usando un editor di testo. Comunque, in quasi tutte le
situazioni la patch verrà applicata senza problemi e si potrà quindi procedere.
</p>

</body>
</section>
<section>
<title>Configurare, compilare e installare</title>
<body>

<p>
L'utente è adesso in possesso di un kernel a cui sono state applicate le patch e
quindi ha a disposizione il codice di LVM più recente. A questo punto, vorrà
configurare il proprio kernel così da abilitare il supporto per LVM. Si
raccomanda di compilare il supporto LVM direttamente all'interno del kernel
piuttosto che configurarlo per essere compilato come modulo. Bisogna quindi
avviare il metodo di configurazione preferito per il kernel Linux:
</p>

<pre caption="Configurare il kernel">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Le opzioni per LVM si trovano sotto la sezione "Multi-device support (RAID and
LVM)". Una volta abilitata la prima opzione:
</p>

<pre caption="Supporto per RAID e LVM">
[*] Multiple devices driver support (RAID and LVM)
</pre>

<p>
Compariranno le opzioni seguenti, che possono a loro volta essere abilitate:
</p>

<pre caption="Abilitare il supporto per LVM">
&lt;*&gt;   Logical volume manager (LVM) support
</pre>

<p>
In relazione alla versione LVM, potrebbero essere presenti altre opzioni
relative a LVM che l'utente potrebbe voler abilitare. Una volta fatto questo,
basta salvare la propria configurazione del kernel e portare avanti la procedura
predefinita seguita per compilare il kernel, quindi riavviare. Congratulazioni,
adesso il supporto per LVM è abilitato nel kernel. Ora, c'è bisogno di
compilare e installare gli strumenti che operano in user-space. Questo passo è
facile:
</p>

<pre caption="Creare gli strumenti che operano in user-space">
# <i>cd /usr/src/linux/extras/LVM/0.9.1_beta3</i>
# <i>make</i>
# <i>make install</i>
</pre>

<p>
Rimane solo una cosa ancora da fare, ed è opzionale. In caso si vogliano portare
avanti più operazioni su LVM, sarà necessario aggiungere le seguenti linee al
proprio script rc di avvio:
</p>

<pre caption="Modificare lo script di avvio rc">
/sbin/vgscan
/sbin/vgchange -a y
</pre>

<p>
Queste righe cercheranno tutti i gruppi volume disponibili e li attiveranno.
Quindi, aggiungere la seguente linea allo script rc di spegnimento, e
assicurarsi che sia eseguita dopo che tutti i filesystem sono stati smontati:
</p>

<pre caption="Modificare lo script rc di spegnimento">
/sbin/vgchange -a n
</pre>

<p>
In caso si voglia solamente testare LVM, questi passi possono essere saltati.
Basta ricordarsi dopo ogni riavvio di digitare <c>vgscan</c> e <c>vgchange -a
y</c> come utente root prima per rendere disponibili per l'uso i propri volumi
logici.
</p>

<p>
È tutto per questo articolo. Nel prossimo, verrà mostrato come creare i propri
personali volumi logici e come scatenare la potenza di LVM. Non perdetevelo.
</p>

</body>
</section>
<section id="resources">
<title>Risorse</title>
<body>

<ul>
  <li>
    Collegamento all'<uri link="ftp://sources.redhat.com/pub/lvm2">archivio
    LVM</uri> su RedHat.
  </li>
  <li>
    Gli impazienti vorranno dare un'occhiata all'<uri
    link="http://www.linux.org/docs/ldp/howto/LVM-HOWTO.html">LVM HOWTO di Heinz
    Mauelshagen</uri>, che mostra come preparare volumi fisici, gruppi volume, e
    volumi logici. Questo è ciò che sarà descritto nel prossimo articolo.
  </li>
  <li>
    Esiste anche un interessante HOWTO che mostra all'utente <uri
    link="http://www.the-infinite.org/archive/docs/lvm/howto-boot-off-root-lv.txt">
    come impostare il proprio filesystem root su un volume logico</uri>.
  </li>
  <li>
    Andreas Dilger è coinvolto nel progetto LVM di Linux e possiede un ben fatto
    <uri link="http://www-mddsp.enel.ucalgary.ca/People/adilger/online-ext2/">
    ridimensionatore di filesystem ext2</uri> <e>online</e>.
  </li>
  <li>
    <uri link="http://www.namesys.com">ReiserFS</uri> è un eccellente filesystem
    (specialmente in combinazione con LVM). Se si sta usando ReiserFS, si vorrà
    prelevare l'archivio reiserfs-utils, che contiene un programma chiamato
    <c>reiserfs_resize</c> -- permette il ridimensionamento al volo del
    filesystem ReiserFS.
  </li>
  <li>
    Per maggiori informazioni su come impostare volumi per il RAID software in
    Linux, vedere <uri link="/doc/it/articles/software-raid-p1.xml">Parte
    1</uri> e <uri link="/doc/en/articles/software-raid-p2.xml">Parte 2</uri>
    (in inglese, ndt) della serie di Daniel sul RAID software.
  </li>
  <li>
    Per un ripasso, vedere il <uri
    link="/doc/it/articles/linux-kernel-compiling.xml">tutorial su come
    compilare il kernel Linux</uri> di Daniel.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
