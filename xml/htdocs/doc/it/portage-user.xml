<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/it/portage-user.xml">
<title>Portage guida dell'utente</title>
<author title="Chief Architect"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title="Editor"><mail link="thomasfl@gentoo.org">Thomas Flavel</mail></author>
<author title="Editor"><mail link="zhen@gentoo.org">John P. Davis</mail></author>
<author title="Editor"><mail link="carl@gentoo.org">Carl Anderson</mail></author>
<author title="Editor"><mail link="peesh@gentoo.org">Jorge Paulo</mail></author>
<author title="Editor"><mail link="swift@gentoo.org">Sven Vermeulen</mail></author>
<author title="Traduttore"><mail link="stefano.lucidi@gentoo-italia.org">Stefano Lucidi</mail></author>
<author title="Traduttore" >
Team Italiano
</author>

<abstract>Questa guida copre brevemente come mantenere aggiornati i vostri pacchetti, e come mantenere
il vostro sistema.</abstract>

<version>1.3</version>
<date>21 May 2003</date>

<chapter>
<title>Getting Started</title>

<section>
<title>Ottenere il Portage corrente</title>
<body>

<p>Dopo aver installato Gentoo Linux e girovagato un tantino, potreste trovare alcuni bug o un cavillo 
in alcuni pacchetti, o forse volete installare gli ultimi pacchetti software di Gentoo Linux 
o aggiornare i vostri attuali pacchetti.. Per far questo, avete bisogno di scaricare il nostro Portage
tree. Noi forniamo alcuni server rsync anonimi che potete usare per ottenere il nostro ultimo Portage tree.
Ecco come usarlo.</p>

<p>Usate i seguenti comandi per sincronizzare il vostro  Portage
tree:
</p>

<pre caption = "Ottenere il portage aggiornato">
# <c>emerge sync</c>
</pre>

<p>Notate che <c>emerge sync</c> automaticatcamente evoca
l'opzione <i>--clean</i>, che cancella tutte i vostri cambiamenti personali
o aggiunte a <path>/usr/portage</path> Se volete mantenere separati i vostri
ebuilds dal Portage tree principale, usate la funzione <i>PORTDIR_OVERLAY</i>.
</p>

<pre caption = "Usare PORTDIR_OVERLAY">
<comment>Aggiungete questa linea in <path>/etc/make.conf</path></comment>
PORTDIR_OVERLAY="/dir/where/your/ebuilds/are"
</pre>

<p>Se iniziate a modificare molti ebuild, correggere bug, etc, potreste voler considerare di divenire parte
del Gentoo Linux Development Team. Per favore contattate
<mail link = "drobbins@gentoo.org">Daniel Robbins</mail> o
<mail link = "seemant@gentoo.org">Seemant Kulleen</mail> per maggiori informazioni.
</p>

</body>
</section>

<section>
<title>Aggiornare Portage</title>
<body>
<p>Prima che usiate il nostro Portage tree, è importante che aggiorniate Portage facendo le seguenti operazioni:</p>

<pre caption = "Aggiornare Portage">
<comment>Questo vi fà vedere quali pacchetti saranno aggiornati</comment>
# <c>emerge -up system </c>
<comment>Questo aggiorna i pacchetti necessari</comment>
# <c>emerge -u system </c>
</pre>

<p>Ora state usando la più recente versione di portage, e potete iniziare ad usare il nostro sistema di ebuild
per aggiornare il vostro software installato.</p>

</body>
</section>
</chapter>
<chapter>
<title>Introduzione a <c>emerge</c></title>
<section>
<title><c>emerge --pretend</c></title>
<body> 

<p>Prima di installare un pacchetto, è una buona idea vedere quali dipendenze saranno installate,
quali pacchetti hanno bisogno di essere aggiornati, etc. <c>emerge --pretend</c> o
<c>emerge -p</c> possono farlo per voi.
</p>

<pre caption = "Usare emerge -p">
# <c>emerge -p xchat</c>

These are the packages that I would emerge, in order.

Calculating dependencies......... done!
[ebuild   U] sys-libs/zlib-1.1.3-r2 to /
[ebuild   U] dev-libs/glib-1.2.10 to /
[ebuild N  ] media-libs/jpeg-6b-r2 to /
[ebuild N  ] x11-base/xfree-4.0.3-r3 to /
[ebuild N  ] x11-libs/gtk+-1.2.10-r1 to /
[ebuild N  ] media-libs/giflib-4.1.0-r3 to /
[ebuild N  ] media-libs/tiff-3.5.6_beta to /
[ebuild N  ] media-libs/imlib-1.9.10 to /
[ebuild N  ] net-irc/xchat-1.4.3 to /
</pre>

<p>In questo caso particolare,stiamo tentando di fare l'emerge di <i>xchat</i> su una
macchina che non ha X installato.  Così, <c>emerge --pretend</c>
correttamente identifica che alcune dipendenze hanno bisogno di essere soddisfatte prima.
Precisamente, <path>sys-libs/zlib</path> e <path>dev-libs/glib</path> hanno bisogno di essere
aggiornate e poi un fascio di ebuild (incluso <path>x11-base/xfree</path>,
certamente) hanno bisogno di essere installati.</p>

</body>
</section>
<section>
<title>USE e <c>emerge</c></title>
<body>
<p>Sopra, ho eseguito <c>emerge --pretend</c> su un sistema che non aveva
<c>gnome</c> definito nella variabile <c>USE</c> in <path>/etc/make.conf</path>.
Questo significa che il supporto opzionale per GNOME, se presente, non viene abilitato.
Comunque, <path>xchat</path> ha il supporto opzionale per GNOME, quindi date un'occhiata
all'output di <c>emerge --pretend</c> dopo che ho aggiunto <c>gnome</c> alla 
variabile d'ambiente <c>USE</c> in <path>/etc/make.conf</path>:
</p>

<pre caption = "Usare emerge con la variabile USE">
# <c>emerge -p xchat</c>

These are the packages that I would emerge, in order.

Calculating dependencies............................ done!
[ebuild N  ] media-libs/jpeg-6b-r2 to /
[ebuild N  ] gnome-base/libghttp-1.0.9 to /
[ebuild N  ] media-libs/audiofile-0.2.1 to /
[ebuild N  ] media-sound/esound-0.2.22-r2 to /
[ebuild N  ] gnome-base/gnome-env-1.0 to /
[ebuild N  ] gnome-base/libxml-1.8.11 to /
[ebuild N  ] gnome-base/ORBit-0.5.8 to /
[ebuild N  ] gnome-base/oaf-0.6.5 to /
[ebuild   U] dev-libs/glib-1.2.10 to /
[ebuild N  ] net-libs/libwww-5.3.2-r1 to /
[ebuild N  ] media-libs/giflib-4.1.0-r3 to /
[ebuild N  ] dev-util/guile-1.4-r3 to /
[ebuild   U] sys-libs/zlib-1.1.3-r2 to /
[ebuild N  ] x11-base/xfree-4.0.3-r3 to /
[ebuild N  ] x11-libs/gtk+-1.2.10-r1 to /
[ebuild N  ] media-libs/tiff-3.5.6_beta to /
[ebuild N  ] media-libs/imlib-1.9.10 to /
[ebuild N  ] gnome-base/gnome-libs-1.2.13 to /
[ebuild N  ] gnome-base/glibwww-0.2-r1 to /
[ebuild N  ] gnome-base/gdk-pixbuf-0.11.0 to /
[ebuild N  ] gnome-base/gconf-1.0.0 to /
[ebuild N  ] gnome-base/gnome-vfs-1.0.1 to /
[ebuild N  ] gnome-base/control-center-1.4.0.1 to /
[ebuild N  ] gnome-base/scrollkeeper-0.2 to /
[ebuild N  ] dev-util/xml-i18n-tools-0.8.1 to /
[ebuild N  ] gnome-base/libglade-0.16-r1 to /
[ebuild N  ] gnome-base/gnome-core-1.4.0.4 to /
[ebuild N  ] net-irc/xchat-1.4.3 to /
</pre>

<p>Come potete vedere, con <c>gnome</c> aggiunto a <c>USE</c>, emerge riconosce
che xchat può includere il supporto opzionale per GNOME.  Certamente per poter essere compilato 
ed eseguito correttamente il supporto per GNOME, quest'ultimo deve essere prima 
installato.  <c>emerge</c> presenta questo e aggiunge vari pacchetti 
richiesti dalla lista di ebuild di GNOME.  potrebbero esserci delle volte in cui la 
vostra variabile <c>USE</c> non è configurata correttamente, causando che <c>emerge</c> 
insapettatamente includa o escluda il supporto per varie estensioni opzionali.
Quello che raccomandiamo è di eseguire sempre un <c>emerge --pretend</c>
prima di eseguire l'attuale <c>emerge</c>, specialmente per i nuovi, non familiari
ebuild.  In questo modo, sapete cosa aspettarvi. :)  Quando tutto sembra OK,
potete procedere con l'attuale <c>emerge</c> togliendo l'opzione <c>--pretend</c>:</p>

<pre caption = "Emerge xchat">
# <c>emerge xchat</c>
</pre>

<p>Dopo che tutte le dipendenze sono installate (se esistono; non tutti i pacchetti
le hanno), i sorgenti di xchat saranno scaricati (in
<path>/usr/portage/distfiles</path>), verificati, scompattati, compilati and
installati in una directory temporanea chiamata sandbox. Poi, verranno uniti (emerge) nel filesystem locale
e il database del pacchetto sarà creato in
<path>/var/db/pkg/net-irc/xchat-1.4.3/CONTENTS</path>, contenente i file installati e 
e l' md5sums per tutti i file.</p>

<p>
Se volete vedere quali USE-flag potete usare con un determinato pacchetto, e  
quali sono azionati nel vostro sistema, aggiungete l'argomento <c>-v</c> o 
<c>--verbose</c> a <c>emerge -p</c>:
</p>

<pre caption = "Usare emerge con --verbose">
# <i>emerge -pv gentoo-sources</i>

These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild    U ] sys-kernel/gentoo-sources-2.4.20-r5 -build +crypt -evms2 
-aavm -usagi 
</pre>

</body>
</section>
<section>
<title> Controllare cosa è cambiato</title>
<body>

<p>
Se volete sapere cosa è cambiato dalla versione che avete installato 
e quella disponibile su Portage, aggiungete l'argomento 
<c>--changelog</c> o <c>-l</c>:
</p>

<pre caption = "Vedere il ChangeLog">
# <i>emerge -pl mozilla</i>

These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild    U ] net-www/mozilla-1.3-r1 [1.2.1-r5] 

*mozilla-1.3-r1

  22 Mar 2003; Martin Schlemmer &lt;azarah@gentoo.org&gt; mozilla-1.3-r1.ebuild :
  Add Gtk2 patch.  Add default/prefs/xft.js when Xft is enabled.  Some other
  long overdue cleanups.

*mozilla-1.3

  21 Mar 2003; Jay Kwak &lt;jayskwak@gentoo.org&gt; mozilla-1.3.ebuild :
  Add XIM input patch for GTK
             
  18 Mar 2003; Martin Schlemmer &lt;azarah@gentoo.org&gt; mozilla-1.3.ebuild :
  New version.

  13 Mar 2003; Olivier Reisch &lt;doctomoe@gentoo.org&gt; mozilla-1.2.1-r5.ebuild :
  Marked ppc stable

*mozilla-1.3_beta

  23 Feb 2003; Martin Schlemmer &lt;azarah@gentoo.org&gt; mozilla-1.3_beta.ebuild :
  New version.

</pre>

</body>
</section>
</chapter>
<chapter>
<title>Aggiornare i pacchetti</title>
<section>
<body>

<p>Il modo standard per aggiornare i pacchetti in Portage è di usare <c>emerge --update</c>
o <c>emerge -u</c>.
</p>

<pre caption = "Using emerge -u">
# <c>emerge -u xchat</c>
</pre>

<p>
Portage usa quello che viene chiamato "safe" unmerge; esso esegue soltanto
l'unlink dei file originali Se un file è stato sovrascritto o modificato in qualche modo,
viene lasciato sul filesystem (presumibilmente, avete installato una uova versione
del pacchetto). così, se eseguite l'unmerge di una vecchia versione di xchat dopo l'emerge di 
una nuova versione, l'eseguibile di xchat non viene cancellato dal vostro filesystem,
dopo che ha un differente timestamp e un differente md5sum. Safe unmerge è veramente
buono perchè assicura che alcune versioni dell'applicazione sono sempre disponibili. 
Se aveste dovuto fare l'unmerge prima, xchat non sarebbe stato disponibile
per alcuni minuti, in cui la nuova versione veniva scaricata, compilata,
installata e eseguito l'emerge.</p>

<impo>Portage ha una speciale funzione chiamata "config file protection".  
L'intento di questa funzione è di prevenire che i nuovi pacchetti installati modificano
gli esistenti file di configurazione.  Il config file protection è attivo di default
per /etc e le dir di configurazione di KDE; molte potrebbero essere aggiunte in futuro. Scrivete
<c>emerge --help config</c> per maggiori detagli.</impo>
</body>
</section>
</chapter>

<chapter>
<title>Controllare il comportamento di Portage</title>
<section>
<body>

<p>
Se volete cambiare il comportamento di Portage, potete modificare
<path>/etc/make.conf</path>. Esso contiene variaili (o esempi di valori
per variabili) che potete definire per alterare la condotta di Portage.
Per esempio, se volete cambiare il modo di scaricare i codici sorgenti,
potete modificare <c>FETCHCOMMAND</c> secondo le vostre esigenze. 
</p>

<p>
<path>/etc/make.conf</path> contiene molti esempi di settaggi per variabili
dai quali potete derivare come definirli.
Potete anche dare un'occhiata alla pagina man di <path>make.conf</path> 
(<c>man make.conf</c>) e, se volete tuffarvi profondamente nel mondo di 
Portage, leggete il <uri link="/doc/it/portage-manual.xml">Portage 
Manual</uri>.
</p>

<p>
Se avete bisogno di cambiare una variabile per una sola esecuzione, potete assegnare
una variabile d'ambiente invece di modificare <path>/etc/make.conf</path>
due volte. Per esempio <c>AUTOCLEAN="no" emerge kde</c> disabilità 
l'autocleaning solo durante <c>emerge kde</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Cosa sono i masked packages?</title>
<section>
<body>
<p>
Molte persone sono curiose sul perchè i nuovi pacchetti rilasciati non sono inclusi
quando eseguono <c>emerge -u world</c>. Un buon esempio di questo è xfree-4.3.0
(la versione al momento della stesura di questo documento). Se eseguite <c>emerge sync</c>
seguito da <c>emerge -u world</c>, non vedete xfree come canditato per l'upgrade.
Perchè questo?
</p>
<p>
La ragione è che alcuni pacchetti sono segnati come "masked"--così, il pacchetto
non sarà automaticamente aggornato o installato a meno che voi non lo facciate esplicitamente.
Per una spiegazione su come abilitare l'installazione di pacchetti masked
vi incoraggiamo a visistare  <uri link="http://forums.gentoo.org/viewtopic.php?t=33534">Masked Packages
FAQ</uri> nel nostro <uri link="http://forums.gentoo.org/">Gentoo Forums</uri>.
</p>

</body>
</section>
</chapter>
</guide>
