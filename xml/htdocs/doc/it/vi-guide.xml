<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/it/vi-guide.xml" lang="it">


<title>Imparare vi con gli sheets</title>

<author title="Autore">
	<mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Autore">
	<mail link="stocke2@gentoo.org">Eric Stockbridge</mail>
</author>
<author title="Traduzione">
	<mail link="mlucci@gentoo.it">Massimo Lucci</mail>
</author>
<author title="Traduzione">
	<mail link="bulldozer@email.it">Ivo Carrano</mail>
</author>
<author title="Traduzione">
	<mail link="gentoo@virgilio.it">Shev</mail>
</author>

<abstract>Questa guida vi insegnerà ad usare vi con un metodo particolarmente efficace per accelerare il processo di apprendimento, cioè l'uso di alcuni "foglietti" (lo stesso che molti hanno usato a scuola durante i compiti in classe! NdT). Questa è la prima guida per vi ed è pensata per veri principianti.</abstract>

<license/>

<version>1.1.5</version>

<date>26 Agosto 2004</date>

<chapter>
<title> Cenni preliminari</title>

<section>
<title>Introduzione</title>
<body>

<p>
Questa guida mostrerà l'uso di <e>vi</e>, il potente e famoso editor visuale, adottando uno speciale metodo accelerato di apprendimento <e>a foglietti</e> (lo stesso che molti hanno usato a scuola durante i compiti in classe! NdT). Essa è stata pensata per permettere a chiunque di diventare un abile utente di <e>vi</e> senza dover investire troppo tempo. Imparerete come sia possibile muoversi all'interno di un testo, come modificarlo correttamente, come gestire la modalità <e>insert</e>, come tagliare, copiare e incollare porzioni di testo, nonchè usare le notevoli estensioni di <e>vim</e>, quali il <e>visual mode</e> e il <e>multi-window editing</e>.
</p>

<p>
Sia che non lo conosciate affatto, oppure che lo conosciate in modo solo superficiale, <e>vi</e> merita senz'altro la lettura di questa guida e di passare velocemente all'azione con uno dei più diffusi e potenti programmi di editing visuale disponibili in ambienti Linux/UNIX.
</p>

</body>
</section>

<section>
<title>La guida</title>
<body>

<p>
C'è una particolarità che ostacola l'apprendimento di <e>vi</e>: il fatto che ha moltissimi comandi e, per poterlo usare con profitto, è necessario impararne a memoria alcuni, almeno i più importanti. Questo può richiedere, inizialmente, molto tempo e uno degli obiettivi di questa guida è di non assorbirne troppo. Ecco dunque la prima sfida da affrontare: come posso aiutarvi a memorizzare una sfilza di comandi in un breve periodo di tempo?
</p>

<p>
Per affrontare questa sfida inizieremo a scrivere i comandi di <e>vi</e> su un foglio, che sarà il primo della serie dei nostri foglietti, e che conterrà tutti i comandi importanti di <e>vi</e>. Dopo aver completato la guida potrete sempre far riferimento a queste note nel caso ne dimenticaste uno in particolare. Col tempo, man mano che memorizzerete i comandi, scoprirete di dipendere sempre meno dai "foglietti". Usando questa tecnica vi sorprenderete della rapidità con cui avrete appreso l'uso di <e>vi</e>!
</p>

</body>
</section>

<section>
<title>Il processo di apprendimento</title>
<body>

<p>
In questa guida userò tecniche diversificate per facilitare l'apprendimento. Prima di tutto descriverò come funziona un particolare comando, come forse vi aspettereste. Quindi vi chiederò di provare ad usare il comando in <e>vi</e> (per fare pratica) ed infine di trascrivere quel comando sul vostro foglietto (per poterlo consultare in seguito). Se volete imparare <e>vi</e> rapidamente, è importante che seguiate tutte e tre le fasi; provare le funzionalità del comando in <e>vi</e> e trascriverlo sul foglietto vi aiuterà a memorizzarlo.
</p>

</body>
</section>

<section>
<title>Introduzione</title>
<body>

<p>
Esistono molte versioni di <e>vi</e> e, nella guida, farò riferimento a quella nota come <c>vim</c>. <e>vim</e> è molto diffuso ed ha un buon numero di estensioni che rendono molto più piacevole l'uso di <e>vi</e> (ogniqualvolta mi riferirò ad un comando specifico di <e>vim</e> lo farò notare chiaramente). Se dovete installarlo, potete prelevarlo dal seguente indirizzo: <uri link="http://www.vim.org">www.vim.org</uri>; oltre alla versione in pura modalità testo, è distribuito anche nella versione <c>gvim</c>, un buon editor grafico che può essere configurato per l'uso delle eccellenti librerie GTK+. Se volete vedere uno screenshot di <e>gvim</e> installato sul mio sistema date un'occhiata qui:
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vishot.png" short="screenshot" caption="VIM screenshot"/>

<p>
Se siete dei neofiti di <e>vi</e>, provate ad installare <e>gvim</e> sul vostro sistema: usare <e>vi</e> attraverso un'interfaccia grafica potrebbe facilitarvi non poco la vita...
</p>

</body>
</section>
</chapter>

<chapter>
<title> Primi passi</title>
<section>
<title>Aprire un file</title>
<body>

<p>
Prima di usare <e>vi</e> per modificare i file, dovete sapere come usarlo per muovervi all'interno di un testo. <e>vi</e> ha molti comandi che controllano il movimento, di cui ne vedremo alcuni tra poco. Per questa parte del tutorial, trovate un file poco importante sul quale iniziare le vostre sperimentazioni, ed apritelo con il comando:
</p>

<pre caption="Caricare un file con vi">
$ <i>vi miofile.txt</i>
</pre>

<p>
Se avete vim installato, digitate pure <c>vim miofile.txt</c> o, se preferite usare gvim, digitate <c>gvim miofile.txt</c>. <path>miofile.txt</path> sarà il nome del file di testo individuato.
</p>

</body>
</section>

<section>
<title>Addentriamoci in vi</title>
<body>

<p>
Dopo che <e>vi</e> ha caricato il file specificato, dovreste vedere una parte del testo sul vostro schermo. Congratulazioni: siete in <e>vi</e>!  A differenza di molti altri editors, quando <e>vi</e> è stato avviato entra subito in una modalità speciale detta <e>command mode</e> (modalità comando). Ciò significa che se premete <c>l</c> sulla tastiera, invece di inserire una <c>l</c> all'interno del file nella posizione corrente del cursore, il cursore si muoverà di un carattere verso destra. In questa modalità operativa, i caratteri della tastiera sono usati per inviare comandi a <e>vi</e> piuttosto che per inserire caratteri nel testo. I comandi per il controllo del movimento del cursore sono senz'atro particolarmente utili; vediamone insieme alcuni.
</p>

</body>
</section>
</chapter>

<chapter>
<title> Muoversi all'interno di un testo</title>
<section>
<title>Muoversi in vi, prima parte</title>
<body>

<p>
Quando siete in "command mode", potete usare i tasti <c>h</c>, <c>j</c>, <c>k</c> e <c>l</c> per muovere il cursore a sinistra, in basso, in alto e a destra rispettivamente. Se state usando una versione recente di <e>vi</e>, potete anche usare i quattro tasti freccia alla destra della tastiera. I tasti <c>h</c>,<c>j</c>,<c>k</c> e <c>l</c> sono utili perché, una volta che avrete acquistato familiarità con la loro funzione, sarete in grado di muovervi agevolmente all'interno del testo senza dover alzare le vostre dita dalla tastiera. Provate ad usare <c>h</c>,<c>j</c>,<c>k</c> e <c>l</c> (oppure i tasti freccia) per muovervi all'interno del file di testo. Provate ad usare <c>h</c> fino ad arrivare all'inizio della riga; potete notare che <e>vi</e> non gestisce il "wrap around" (NdT, funzionalità che permette di percorrere in modo continuo le righe di un testo) né in avanti né all'indietro.
</p>

</body>
</section>

<section>
<title>Muoversi in vi, seconda parte</title>
<body>

<p>
<e>vi</e> offre scorciatoie speciali per saltare a inizio o a fine riga. Verificate che potete premere <c>0</c> (zero) per saltare al primo carattere di una riga e <c>$</c> all'ultimo. Dato che <e>vi</e> ha così tanti comandi di movimento, possiamo considerarlo un ottimo impaginatore (come i comandi "more" e "less"). Usare <e>vi</e> come impaginatore di testi potrebbe tornarvi utile anche per apprendere molto rapidamente i comandi di movimento.
</p>

<p>
Potete anche usare <c>&lt;CTR&gt;F</c> e <c>&lt;CTR&gt;B</c> per muovervi avanti e indietro di una pagina per volta. Le versioni recenti di <e>vi</e> (come <e>vim</e>) gestiscono anche l'uso degli equivalenti tasti <c>PageUp</c> e <c>PageDown</c>.
</p>

</body>
</section>

<section>
<title>Spostarsi tra le parole, prima parte</title>
<body>

<p>
<e>vi</e> permette anche di muoversi a sinistra o destra per parole. Per posizionarsi sul <e>primo</e> carattere della parola che segue, premete <c>w</c>. Per posizionarsi invece sull'<e>ultimo</e> carattere della parola che segue, premete <c>e</c>. Infine, per posizionarsi sul primo carattere della parola che <e>precede</e>, premete <c>b</c>. Vi invito a verificare.
</p>

</body>
</section>

<section>
<title>Spostarsi tra le parole, seconda parte</title>
<body>

<p>
Dopo ave giocato un po' con i comandi di movimento orientati alle parole, avrete senz'altro notato che <e>vi</e> considera parole tipo <c>senza-tetto</c> come 3 parole separate!  Questo si spiega perché, di default, <e>vi</e> utilizza i caratteri di spaziatura <e>o</e> punteggiatura per delimitare le parole; <c>senza-tetto</c> è quindi considerato come la sequenza delle tre parole <c>senza</c>,<c>-</c> e <c>tetto</c>
</p>

<p>
Qualche volta è proprio quello che volete, altre volte no. Per fortuna <e>vi</e> possiede il concetto di "macroparola". <e>vi</e> delimita le macroparole solo con <e>spazi o newlines</e>. Ciò significa che mentre <c>senza-tetto</c> viene gestito come 3 parole, lo stesso termine è acquisito da <e>vi</e> come un'unica macroparola.
</p>

</body>
</section>

<section>
<title>Spostarsi tra le parole, terza parte</title>
<body>

<p>
Per saltare alle macroparole precedenti o successive, potete usare i comandi di spstamento tra le parole in <e>lettere maiuscole</e>. Quindi, <c>W</c> consente di saltare al primo carattere della macroparola successiva, <c>E</c> all'ultimo carattere della stessa e <c>B</c> al primo carattere della macroparola precedente.  Provate, verificate e confrontate le differenze di movimento tra parole e macroparole finchè non le avrete comprese chiaramente.
</p>

</body>
</section>

<section>
<title>Movimenti più ampi</title>
<body>

<p>
Rimangono pochi altri comandi da esaminare prima di cominciare a trascriverli sul nostro "foglietto".  I caratteri <c>(</c> e <c>)</c> ci posizionano all'inizio della frase precedente o successiva, ed i caratteri <c>{</c> e <c>}</c> ci posizionano all'inizio del paragrafo corrente o successivo.
</p>

</body>
</section>
</chapter>

<chapter>
<title> Uscire da vi</title>
<section>
<body>

<p>
Abbiamo preso in esame i comandi basilari che gestiscono il movimento; ne rimangono ancora alcuni da conoscere e che sono d'uso frequente. Digitate <c>:q</c> ed uscirete dall'editor. Se per qualche ragione il comando non dovesse funzionare, molto probabilmente avrete modificato involontariamente il testo. Il messaggio che appare è il seguente:
</p>

<p>
<c>E37: No write since last change (use ! to override)</c>
</p>

<p>
Per forzare l'uscita, perdendo le modifiche fatte dall'ultimo salvataggio, digitate: <c>:q!</c>.  A questo punto il controllo dovrebbe essere tornato alla shell (vedete il prompt? Bene!).
</p>

<p>
In <e>vi</e>, ogni comando che inizia con il carattere <c>:</c> è detto <e>ex-mode command</e> per il fatto che <e>vi</e> contiene al suo interno un editor non-visuale chiamato appunto <e>ex</e>.  Può essere usato in modo simile a "sed" per operazioni di modifica limitate alla riga su cui si trova il cursore. In più può essere usato per uscire da <e>vi</e>, come abbiamo appena visto.  Se capita di premere il tasto <c>Q</c> mentre l'editor e in "command mode", si passa alla modalià "ex-mode" e ci si trova davanti il prompt ":". Per tornare alla modalità di editing visuale digitate <c>vi</c> seguito da <c>Invio</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title> Il mitico Foglietto</title>
<section>
<title>Il nostro primo "foglietto"</title>
<body>

<p>
Abbiamo trattato un buon numero di comandi, ed è giunto il momento di trascriverli sul nostro foglietto degli appunti (È vero, forse a scuola avete usato fogliettini di formato A10 per non farveli scoprire, ma ora non dobbiamo temere più nessuno. NdT).  Il mio consiglio è quello di prendere un foglio abbastanza grande, meglio se di formato A4: dovremo scriverci sopra un bel po' di dati! Tanto per darvi un'idea, ecco come si presenta il mio dopo che vi ho riportato tutti i comandi che abbiamo esaminato fin'ora (Anche se è in inglese, l'immagine mi pare abbastanza chiara, no? NdT). Provate a seguire, se possibile, il mio stesso schema, così avrete sufficiente spazio per trascrivere quasi tutto in un unico foglietto.
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-first.png" short="Prima parte del foglietto degli appunti" caption="Foglietto"/>

</body>
</section>

<section>
<title>Comandi eterogenei di vi</title>
<body>

<p>
Continuiamo adesso la nostra rapida carrellata sui comandi di <e>vi</e>. In "command-mode", possiamo saltare ad una linea particolare digitando <c>G</c>.  Per andare alla prima linea di un file, digitare <c>1G</c>. Si noti che <c>G</c> è un carattere maiuscolo.
</p>

<p>
Se volete saltare alla successiva occorrenza di una sequenza particolare di caratteri (pattern), digitate <c>/&lt;regexp&gt;</c> e premete <c>Invio</c> dopo aver sostituito &lt;regexp&gt; con l'espressione regolare che volete cercare. Se non avete idea di come usare le espressioni regolari, non disperate: digitando <c>/pippo</c> vi sposterete alla successiva occorrenza di <e>pippo</e>. L'unica cosa cui dovrete prestare particolare attenzione è nella ricerca dei caratteri letterali <c>^</c>, <c>.</c>, <c>$</c> o <c>\</c>.  Dovrete farli precedere dal carattere backslash (<c>\</c>). Facciamo un esempio: <c>/pippo\.gif</c> cercheà la prossima occorrenza di "pippo.gif".
</p>

<p>
Per ripetere la ricerca in avanti, premere <c>n</c>; per ripaterla all'indietro premere invece il tasto <c>N</c>. Come sempre, provate questi comandi direttamente in <e>vi</e>. Potete anche premere <c>//</c> per ripetere l'ultima ricerca.
</p>

</body>
</section>
</chapter>

<chapter>
<title> Salvare e Modificare</title>
<section>
<title>Salva e Salva come...</title>
<body>

<p>
Poc'anzi abbiamo visto come usare il comando <e>ex</e> <c>:q</c> per uscire da <e>vi</e>. Se volete salvare il vostro lavoro (e vi posso garantire che talvolta è utile farlo... NdT) digitate <c>:w</c>. Se volete salvare il file con un altro nome, basta far seguire il nome voluto digitando qualcosa tipo <c>:w nomefile.txt</c>. Se volete salvare ed uscire, digitate <c>:x</c> or <c>:wq</c>.
</p>

<p>
In <e>vim</e> (ed altri editor <e>vi</e> avanzati, tipo <e>elvis</e>) potete modificare più file contemporaneamente. Per aprire un file in una nuova finestra, digitate <c>:sp nomefile</c> e <path>nomefile</path> apparià per essere modificato in una nuova finestra all'interno dell'editor. Per passare da una finestra all'altra, digitate <c>CTRL+w CTRL+w</c> (control+w due volte). Ogni comando <c>:q</c>, <c>:q!</c>, <c>:w</c> e <c>:x</c> che digiterete sarà applicato solamente alla finestra attiva.
</p>

</body>
</section>

<section>
<title>Modifiche semplici</title>
<body>

<p>
Adesso è il momento di iniziare ad esplorare l'uso di alcuni comandi di base per l'editing. I comandi che esamineremo sono considerati <e>semplici</e> perché,  una volta impartiti, vi lasciano in "command-mode". I comandi più potenti, invece, vi trasportano in "insert-mode", la modalità che permette di introdurre dati letterali da tastiera. Lo vedremo meglio tra poco.
</p>

<p>
Per il momento provate a posizionarvi su qualche carattere del testo e premere <c>x</c> ripetutamente: vedrete che sarà cancellato il carattere sotto il cursore.  Ora provate a posizionarvi circa a metà di un paragrafo (una qualunque porzione di testo compresa fra due righe vuote NdT) e premete <c>J</c>: vedrete che il comando istruisce <e>vi</e> a collegare (to <b>J</b>oin NdT) la riga successiva alla fine di quella corrente. Provate adeso a posizionarvi su un carattere qualunque, premere <c>r</c> e battere un nuovo carattere: il comando permette di sostituire (to <b>r</b>eplace NdT) un carattere. Un'ultima prova: muovetevi su una linea e premete <c>dd</c>: vedrete cancellata completamente l'intera riga di testo
</p>

</body>
</section>

<section>
<title>Ripetizioni e Cancellazioni</title>
<body>

<p>
Potete ripetere ogni comando di editing semplicemente premendo il tasto <c>.</c>  Tanto per provare, verificate che premendo <c>dd...</c> si cancellano 4 righe, e che premendo <c>J......</c> si collegano alla fine di quella attuale le 7 linee seguenti. Al solito, il buon <e>vi</e> fornisce comode scorciatoie.
</p>

<p>
Per cancellare del testo, potete anche usare il comando <c>d</c> in combinazione con qualunque comando di movimento. Per esempio, <c>dw</c> cancellerà tutto ciò che si trova tra la posizione corrente del cursore e l'inizio della parola successiva; <c>d)</c> cancellerà tutto fino alla fine della frase corrente; <c>d}</c> cancellerà la parte di paragrafo rimanente. Fate ora delle prove con il comando <c>d</c> e con gli altri comandi di editing fino a quando non avrete acquisito sufficiente destrezza con il loro uso.
</p>

</body>
</section>

<section>
<title>Annullare!</title>
<body>

<p>
Ora che sappiamo come procedere per cancellare, potrebbe essere il momento di apprendere come annullare cancellazioni involontarie o, più in generale, cambiamenti accidentali al testo. Premendo il tasto <c>u</c>, la versione originale di <e>vi</e> permetteva di correggere solo l'ultimo cambiamento apportato. Le versioni più recenti, come <e>vim</e> o <e>elvis</e>, permettono invece di premere <c>u</c> ripetutamente continuando ad annullare, in ordine temporale inverso, i cambiamenti apportati (più facile a farsi che a dirsi NdT).  Provate varie combinazioni dei comandi <c>d</c> e <c>u</c>.
</p>

</body>
</section>

<section>
<title>Aggiorniamo il "foglietto"</title>
<body>

<p>
Questo è il momento giusto per aggiornare il foglietto degli appunti!  Dopo aver aggiunto tutti i nuovi comandi che abbiamo fin qui trattato, il vostro foglietto dovrebbe assomigliare parecchio al mio (NdT, anche se è in inglese):</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-edit.png" short="Foglietto con i comandi di editing" caption="Foglietto"/>

</body>
</section>
</chapter>

<chapter>
<title> Modalità inserimento</title>
<section>
<title>Modalità inserimento</title>
<body>

<p>
Fino a questo punto abbiamo esaminato come muovere il cursore in <e>vi</e>, eseguire I/O nonché alcune basilari operazioni di editing.  Ma non vi ho ancora mostrato come scrivere un testo in tutta libertà!  In effetti l'ho fatto di proposito, giacché la modalità di inserimento di <e>vi</e> è, almeno all'inizio, un po' complicata.  Scoprirete con l'uso che proprio questa sua apparente complessità (e flessibilità) si rivela invece un gran bene.
</p>

<p>
Nella modalità inserimento (<e>insert mode</e>) potrete editare del testo valutandone direttamente a video l'effetto, proprio come fareste con altri editors.  Una volta applicate le modifiche, basta premere il tasto <c>Escape</c> per tornare in modalità comando.  Per passare alla modalità inserimento è sufficiente premere il tasto <c>i</c> oppure <c>a</c>.  Se premeete <c>i</c>, il testo sarà <e>inserito</e> prima del carattere corrente; con il tasto <c>a</c>, invece, il testo verrà <e>aggiunto</e> dopo il carattere corrente. Ricordatevi, dopo aver inserito il testo, di premere il tasto <c>&lt;ESC&gt;</c> per tornare in modalità comando.
</p>

</body>
</section>

<section>
<title>Vantaggi della modalità inserimento</title>
<body>

<p>
Fate pure le vostre prove con i comandi <c>a</c> e <c>i</c>. Premete l'uno o l'altro, inserite un testo e premete <c>Esc</c> per tornare in modalità comando.  Dopo aver premuto <c>a</c> oppure <c>i</c>, provate anche a premere <c>&lt;Invio&gt;</c> e valutate cosa accade.  Usate i tasti freccia ed il tasto <c>&lt;Del&gt;</c> per capire appieno come funziona la modalità inserimento.  Usando i tasti freccia ed il tasto <c>&lt;Del&gt;</c> potrete editare comodamente il testo senza dover entrare ed uscire continuamente dalla modalità inserimento.
</p>

</body>
</section>

<section>
<title>Opzioni</title>
<body>

<p>
Ecco alcune alternative da utilizzare per attivare la modalità inserimento nel modo più opportuno. Premete <c>A</c> (maiuscolo) per iniziare ad appendere alla <e>fine</e> della linea corrente (per corrente intendo la linea in cui attualmente si trova il cursore). Analogalmente premete <c>I</c> (maiuscolo) per iniziare ad inserire all'<e>inizio</e> della linea corrente.  Premete <c>o</c> per creare una linea vuota <e>sotto</e> quella corrente, premete invece <c>O</c> (maiuscolo) per creane una vuota <e>sopra</e>.  Per sostiruire l'intera linea corrente con una nuova, premete <c>cc</c>.  Per sostituire il testo compreso tra la posizione corrente del cursore e la fine della linea, premete <c>c$</c>.  Per sostituire invece il testo compreso tra l'inizio della riga e la posizione attuale del cursore, premete <c>c0</c>.
</p>

<p>
Tutti questi comandi vi porteranno automaticamente in modalità inserimento; dopo aver inserito il testo, al solito occorre premere <c>&lt;Esc&gt;</c> per tornare in modalità comando.
</p>

</body>
</section>

<section>
<title>Cambiare il testo</title>
<body>

<p>
Abbiamo poc'anzi introdotto il comando <c>c</c> (change) per illustrare il funzionamento di <c>cc</c>, <c>c0</c> e <c>c$</c>. <c>cc</c> è una forma speciale del comando change, simile a <c>dd</c>.  I comandi <c>c0</c> e <c>c$</c> sono esempi di come combinare il comando vero e proprio (change) con un comando di movimento.  In questa forma, <c>c</c> funziona in modo simile al comando <c>d</c>, ad eccezione del fatto che vi lascia in modalità inserimento permettendovi di continuare ad inserire il testo che prenderà il posto di quello cancellato.  Provate a combinare alcuni comandi di movimento con <c>c</c> e verificatene il funzionamento sul vostro file di prova (suggerimento:<c>cW</c>, <c>c(</c>, <c>ce</c>).
</p>

</body>
</section>
</chapter>

<chapter>
<title> Comandi Compositi</title>
<section>
<title>Comandi Compositi</title>
<body>

<p>
Tutte le potenzialità di <e>vi</e> emergono chiaramente non appena iniziate a fare uso dei comandi compositi ("combo"), come <c>d{</c> e <c>cw</c>.  Oltretutto potete anche combinarli con i comandi di movimento che abbiamo già visto, in modo da istruire <e>vi</e> per saltare alla terza parola alla destra della posizione corrente del cursore, come richiesto dal comando <c>3w</c>!  Ecco altri esempi di comandi "combo" tipici: <c>12b</c>, <c>4j</c>.
</p>

<p>
Ma cè di più: potete combinare alla sequenza (numero)(comando di movimento) anche altri comandi quali <c>d</c> oppure <c>c</c>; quindi digiterete <c>d3w</c> per cancellare le tre parole che seguono,  <c>d2j</c> per cancellare, oltre alla linea corrente, le due linee successive, ecc. Fate esperienza con <c>c</c> e <c>d</c> combinati con i comandi di spostamento per avere un'idea di quanto sia potente ed immediato l'editing in <e>vi</e>: scoprirete che è possibile editare files ad una velocità pazzesca!
</p>

</body>
</section>

<section>
<title>Aggiorniamo il nostro "fogliettino"</title>
<body>

<p>
Ok, è il momento di buttar giù due righe su quello che abbiamo studiato ed aggiornare il nostro foglietto. Guardate com'è già diventato il mio:
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-compound.png" short="Foglietto dei comandi aggiornato" caption="Foglietto con i comandi composti"/>

</body>
</section>

<section>
<title>Miglioriamo la produttività</title>
<body>

<p>
Fin'ora abbiamo visto come muovere, salvare ed uscire da <e>vi</e>, eseguire semplici editing e selezioni di testo, e come lavorare in modalità inserimento.  Con gli appunti che avete trascritto, dovreste essere in grado di usare <e>vi</e> per fare potenzialmente qualunque cosa. È solo questione di esercizio.
</p>

<p>
Ma non è tutto qui: <e>vi</e> dispone anche di altri potenti comandi. In questa sezione imparerete come <e>tagliare</e>, <e>copiare</e>, <e>incollare</e>, <e>cercare</e> e <e>sostituire</e> del testo, oltre che ad usare la funzione di "<e>autoindentazione</e>" (e scusate se è poco... NdT). Questo set di nuovi comandi vi permetterà di aumentare la vostra produttività.
</p>

</body>
</section>

<section>
<title>Modalità visuale</title>
<body>

<p>
Il metodo migliore per tagliare ed incollare del testo è quello di usare la modalità visuale (<e>visual mode</e>), che è disponibile nelle versioni più recenti di <e>vi</e> quali <e>vim</e> ed <e>elvis</e>.  Potete pensare alla modalità visuale come ad una modalità di testo "evidenziato".  Una volta che il testo è stato in qualche modo evidenziato, esso può essere copiato, cancellato, e poi incollato.  Se siete utenti di <e>gvim</e>, potete effettivamente evidenziare il testo semplicemente mantenendo premuto il pulsante sinistro del mouse mentre passate sopra una determinata porzione di testo:
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vihighlight.png" short="testo evidenziato" caption="VIM con testo evidenziato"/>

<p>
Si può passare direttamente alla modalità visuale premendo <c>v</c> (questa potrebbe essere l'unica possibilità disponibile se state usando <e>vi</e> da un terminale).  Adesso, muovendo il cursore con i noti comandi di movimento (oppure i tasti freccia) evidenzierete una regione di testo (notate il cambiamento di colore della parte evidenziata NdT).  Una volta evidenziata l'area, siete in grado di tagliare e copiare il testo.
</p>

<p>
Per copiare il testo,  premete <c>y</c> (che stà per "yank") mentre, per tagliare il testo, premete <c>d</c>: subito dopo tornerete automaticamente in modalità comando.  Ora spostatevi nella posizione in cui inserire il testo tagliato o cancellato e premete <c>P</c> per inserirlo prima della posizione occupata dal cursore o <c>p</c> per inserire il testo di seguito alla posizione del cursore. Et voilà, il taglia e incolla è servito!  Provate diverse combinazioni del copia/taglia/incolla prima di proseguire.
</p>

</body>
</section>

<section>
<title>Sostituire testo</title>
<body>

<p>
Per sostituire un'occorrenza nel testo usiamo la modalità <e>ex</e>.  Per sostituire la prima occorrenza che appare nella linea corrente, digitate <c>:s/&lt;regexp&gt;/&lt;replacement&gt;/</c> e premete <c>&lt;Invio&gt;</c>, dove <c>&lt;regexp&gt;</c> è il modello da ricercare e <c>&lt;replacement&gt;</c> è la stringa sostitutiva. Per sostituire <e>tutte</e> le occorrenze del modello nella linea corrente, digitate <c>:s/&lt;regexp&gt;/&lt;replacement&gt;/g</c> (NdT, sostituzione <e>globale</e>) e premete <c>&lt;Invio&gt;</c>.  Per sostituire <e>tutte</e> le occorrenze presenti nel file (e spesso questo è quello che si vuol fare), si usa in il carattere <c>%</c> in aggiunta all'opzione <c>g</c>, digitando <c>:%s/&lt;regexp&gt;/&lt;replacement&gt;/g</c>. Per richiedere la conferma prima di ogni sostitizione potrete usare il comando <c>:%s/&lt;regexp&gt;/&lt;replacement&gt;/gc</c>,(la "c" stà per conferma) e premete <c>&lt;Invio&gt;</c>
</p>

</body>
</section>

<section>
<title>Indentazione</title>
<body>

<p>
<e>vi</e> supporta l'autoindentazione per le modifiche al codice sorgente (NdT, caratteristica utile soprattutto ai programmatori). La maggior parte delle versioni di <e>vi</e> in circolazione (come <e>vim</e>) abilitano questa opzione di default quando si apre un file sorgente (come un .c, per esempio). Quando la funzione è abilitata, potete usare <c>&lt;CTR&gt;d</c>  per spostarvi al livello di indentazione inferiore (verso sinistra), oppure <c>&lt;CTR&gt;t</c> per spostarvi al livello di indentazione superiore (verso destra). Se l'autoindentazione non fosse attiva, potete abilitarla manualmente digitando il comando <c>:set autoindent</c> in modalità comando.  Potete anche istruire vi ad usare un livello di tabulazione arbitrario con il comando <c>:set tabstop=n</c>; <c>:set tabstop=4</c> è una scelta frequente.
</p>

</body>
</section>
<section>
<title>Il nostro foglietto definitivo</title>
<body>

<p>
Bene, siamo giunti al fine!  Dopo aver aggiunto tutti i comandi di editing avanzato al mitico foglietto, dovrebbe assomigliare parecchio a questo:
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-final.png" short="Foglietto degli appunti" caption="Aspetto finale del mitico foglietto"/>

<p>
Tenete il mitico foglietto sempre a portata di mano, ed iniziate ad usare <e>vi</e> per editare files o per comporre email.  Fate spesso riferimento al foglietto degli appunti; troverete che in meno di una settimana avrete memorizzato la maggior parte dei comandi e la vostra produttività sarà salita alle stelle!
</p>

<p>
Se volete usare vi come vostro editor di default, modificate come segue il vostro file di configurazione <path>/etc/rc.conf</path>:
</p>
  	 
<pre caption="Impostare vi come editor di default">
<comment>(Set EDITOR to your preferred editor.)</comment>
#EDITOR="/bin/nano"
EDITOR="/usr/bin/vim"
#EDITOR="/usr/bin/emacs"
</pre>

</body>
</section>

<section>
<title>Risorse</title>
<body>

<p>
Infine alcune risorse che potete considerare per approfondire la vostra conoscenza su <e>vi</e>:
</p>

<ul>
<li>
<uri link="http://www.thomer.com/thomer/vi/vi.html">La homepage degli amanti di vi</uri>, una risorsa eccellente per il mondo <e>vi</e> (in inglese).
</li>
<li>
<uri link="http://www.vim.org/">La homepage di vim</uri>, è il luogo dove nasce <e>vim</e>.
</li>
<li>
Se cercate un buon testo in inglese, <uri link="http://www.oreilly.com/catalog/vi6/"> Learning the vi Editor, 6th Edition</uri> potrebbe essere la scelta giusta.
</li>
</ul>

</body>
</section>

<section>
<title>A proposito di questo documento</title>
<body>
  	 
<p>
La versione originale di questo articolo è stata pubblicata per la prima volta su IBM developerWorks ed è proprietà di "Westtech Information Services". Questa è una versione aggiornata dell'articolo originale e contiene diversi miglioramenti apportati dal Team della documentazione Gentoo Linux.
</p>
  	 
</body>
</section>
</chapter>
</guide>
