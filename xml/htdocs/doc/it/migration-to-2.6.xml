<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/migration-to-2.6.xml,v 1.8 2012/11/05 13:53:30 ago Exp $ -->

<guide lang="it">
<title>La guida Gentoo per la migrazione completa a Linux 2.6</title>

<author title="Autore">
  <mail link="dsd@gentoo.org">Daniel Drake</mail>
</author>
<author title="Contributi">
  <mail link="sergey_zlodey@mail.ru">Sergey Galkin</mail>
</author>
<author title="Contributi">
  <mail link="svyatogor@gentoo.org">Sergey Kuleshov</mail>
</author>
<author title="Redazione">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Redazione">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Redazione">
  <mail link="nightmorph"/>
</author>
<author title="Traduzione">
  <mail link="scen@gentoo.org">Davide Cendron</mail>
</author>

<abstract>
Questo documento vi aiuterà nel processo di migrazione da Linux 2.4 a Linux
2.6, da devfs a udev, da OSS ad ALSA, e da LVM a LVM2.
</abstract>

<version>4</version>
<date>2012-07-24</date>

<chapter>
<title>Introduzione</title>

<section>
<title>Quali sono le novità di Linux 2.6?</title>
<body>

<p>
Non è una domanda a cui si può rispondere facilmente. Linux 2.6 è il risultato
di oltre 2 anni di sviluppo e stabilizzazione di nuove funzionalità, ed è
architetturalmente molto diverso dalla sua controparte 2.4. Di seguito sono
elencati alcuni dei cambiamenti più importanti:
</p>

<ul>
  <li>
    Miglioramento Schedulatore/Interattività: Linux dà una maggiore sensazione
    di fluidità nei sistemi desktop e, sotto carico, risponde in modo migliore
    di Linux 2.4
  </li>
  <li>
    Scalabilità: Linux ora scala meglio in entrambe le direzioni - in piccoli
    sistemi embedded e anche su sistemi con molti processori
  </li>
  <li>
    Performance: le prestazioni delle applicazioni ordinarie sono di gran lunga
    migliorate
  </li>
  <li>
    Supporto hardware: Linux ora supporta più architetture e dispositivi
    hardware non integrati di ogni altro sistema operativo.
  </li>
</ul>

<p>
Per chi fosse interessato, si può dare uno sguardo al documento molto
dettagliato scritto da Joseph Pranevich, <uri
link="http://www.kniggit.net/wwol26.html">The Wonderful World Of Linux
2.6</uri>. Se si desiderano dettagli più tecnici, si può fare riferimento al
documento <uri
link="http://www.codemonkey.org.uk/docs/post-halloween-2.6.txt">The post-
halloween document</uri>, tenendo ben presente che ad oggi risulta alquanto
datato.
</p>

</body>
</section>
<section>
<title>Gentoo e il kernel 2.6</title>
<body>

<p>
Dal rilascio 2005.0 di Gentoo Linux, il kernel predefinito è dell'ultima serie
2.6. Il profilo predefinito viene prelevato da <path>/etc/portage/make.profile</path>
che, nella 2005.0 o successivi rilasci non è altro che un collegamento
simbolico a <path>/usr/portage/profiles/default-linux/x86/2005.0</path> nel
quale sono contenuti varie impostazioni molto importanti.
</p>

<p>
Se si sta usando un profilo 2.4, bisogna cambiarlo con uno che supporti il
kernel 2.6 eseguendo la seguente operazione.
</p>

<pre caption="Cambiare il profilo">
# <i>rm -f /etc/portage/make.profile</i>
# <i>ln -snf /usr/portage/profiles/default-linux/x86/2005.1 /etc/portage/make.profile</i>
</pre>

</body>
</section>
<section>
<title>Cos'è udev?</title>
<body>

<p>
In passato, gli utenti di Gentoo sono stati istruiti nell'utilizzo di
<e>devfs</e> per la gestione della directory <path>/dev</path>, contenente una
serie di interfacce ai dispositivi che permettono alle applicazioni di sistema
di comunicare con l'hardware (attraverso il kernel).
</p>

<p>
<e>devfs</e>, sebbene sia stato concepito ottimamente, ha dei problemi
strutturali interni, ed è stato rimosso completamente dal ramo stabile
principale a partire dalla versione 2.6.13 di Linux.
</p>

<p>
<e>udev</e> è la nuova modalità per gestire i nodi dei dispositivi. Risolve
vari problemi, inclusi tutti quelli dei precedenti gestori dei dispositivi.
</p>

<p>
Per l'utente finale questo cambiamento può non voler dire nulla o avere poco
significato, fortunatamente i bravissimi sviluppatori di Gentoo hanno messo
tutto il loro impegno nel rendere la migrazione da devfs il più semplice
possibile. È consigliabile leggere la <uri link="/doc/it/udev-guide.xml">Guida
ad udev su Gentoo</uri> per ulteriori informazioni su questo argomento.
</p>

</body>
</section>
<section>
<title>Cos'è ALSA?</title>
<body>

<p>
Con Linux 2.4, l'unico modo per far funzionare la scheda sonora era di usare i
driver OSS (open sound system). OSS è stato sostituito da una nuovo e migliore
insieme di driver: ALSA.
</p>

<p>
ALSA, ovvero Advanced Linux Sound Architecture (Architettura Avanzata del Suono
in Linux), è un nuova serie di driver per il suono, aventi nuove e migliori API,
presente nel kernel Linux 2.6. È retrocompatibile con le applicazioni OSS, a
condizione di selezionare le giuste opzioni di configurazione del kernel!
</p>

<note>
Se non si dispone di nessun hardware audio/sonoro si possono ignorare
tranquillamente tutte le istruzioni, contenute in questo documento, relative ad
ALSA.
</note>

</body>
</section>
<section>
<title>Cos'è LVM?</title>
<body>

<p>
<e>Logical Volume Management</e> (LVM - Gestione Logica dei Volumi) è un insieme
di strumenti che permettono di gestire lo spazio su disco in maniera assai
flessibile. Tra le altre cose, permette un potente controllo sulle partizioni
(es. ridimensionamento senza bisogno di riavviare), e rende molto semplici
operazioni come il cambio di dispositivi. LVM rappresenta un'alternativa alla
classica gestione del disco basata sulle partizioni.
</p>

<p>
Il supporto a LVM è stato storicamente inserito in Linux 2.4. Linux 2.6 fornisce
una nuova versione di LVM, chiamata <e>LVM2</e>. Il processo di migrazione
richiede l'installazione di nuove versioni degli strumenti a livello utente
(operazione spiegata successivamente in questo documento) ma lascerà i vostri
dati completamente intatti!
</p>

<p>
<e>Se attualmente non si sta usando LVM per la gestione della memorizzazione dei
dati, allora la migrazione a LVM2 è ininfluente.</e> Se si rientra in questo
caso, si può ignorare tranquillamente qualsiasi riferimento a LVM/LVM2 nel
documento. L'aggiornamento a Linux 2.6 <e>non</e> richiede la memorizzazione
dei dati su partizioni LVM - si possono mantenere i dati in partizioni standard,
come si è sempre fatto.
</p>

<p>
Se non si è utenti LVM, ma si pensa che LVM2 possa essere utile, si possono
convertire i dischi a questo formato in un secondo momento, seguendo l'<uri
link="/doc/it/lvm2.xml">Installazione di Gentoo con LVM2</uri>. Per ora ci si
concentrerà nel l'effettuare la migrazione a Linux 2.6 il più fluidamente
possibile.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Preparazione</title>
<section>
<title>Aggiornare il sistema</title>
<body>

<p>
Qualcuna delle modifiche apportate in Linux 2.6 richiede dei cambiamenti nelle
applicazioni basilari di sistema. Prima di continuare, ci si deve assicurare che
il sistema sia aggiornato, e per esserne pienamente sicuri, si devono aggiornare
tutti i pacchetti installati (compresi quelli di sistema) aventi delle nuove
versioni disponibili.
</p>

<p>
In particolare, ci si assicuri di avere l'ultima versione stabile dei seguenti
pacchetti:
</p>

<ul>
  <li><c>sys-apps/baselayout</c></li>
  <li><c>sys-apps/util-linux</c></li>
  <li>
    <c>sys-kernel/genkernel</c> (solo se si vuole usare genkernel, invece della
    configurazione manuale)
  </li>
</ul>

<pre caption="Aggiornare tutti i pacchetti installati">
# <i>emerge --sync</i>
# <i>emerge -ua world</i>
</pre>

</body>
</section>
<section>
<title>modutils vs module-init-tools</title>
<body>

<p>
<c>sys-apps/modutils</c> è il pacchetto che fornisce strumenti come
<c>modprobe</c>, <c>rmmod</c> e <c>insmod</c> per Linux 2.4.
</p>

<p>
Linux 2.6 introduce un nuovo formato dei moduli, ciò comporta l'uso di nuovi
strumenti per poterli gestire. Essi sono integrati nel pacchetto
<c>sys-apps/module-init-tools</c>.
</p>

<p>
A questo punto si può rimuovere modutils e installare module-init-tools:
</p>

<pre caption="Passare da modutils a module-init-tools">
# <i>emerge --unmerge sys-apps/modutils</i>
# <i>emerge module-init-tools</i>
</pre>

<note>
Non ci si deve preoccupare - anche se si ha appena rimosso modutils,
module-init-tools fornisce la retrocompatibilità con Linux 2.4, perciò si potrà
avviare il sistema con Linux 2.4 e gestire correttamente i suoi moduli.
</note>

<note>
Per la ragione appena esposta, module-init-tools dovrebbe già essere installato
e funzionante per i kernel Linux 2.4 esistenti. In questo caso, non ci si deve
preoccupare di questo passaggio - il sistema nel quale si sta lavorando è già
pronto per gestire i moduli di Linux 2.6.
</note>

</body>
</section>
<section>
<title>Installare udev</title>
<body>

<p>
Non c'è nessuna configurazione coinvolta in questo passaggio. Si usi
semplicemente <c>emerge</c> per installare udev:
</p>

<pre caption="Installare udev">
# <i>emerge -a udev</i>
</pre>

<p>
A questo punto si dovrebbe leggere la <uri link="/doc/it/udev-guide.xml">Guida
ad udev su Gentoo</uri> per avere un'idea più completa delle differenze tra
udev e devfs.
</p>

</body>
</section>
<section>
<title>Verificare i file dei dispositivi essenziali</title>
<body>

<p>
Quando il sistema si avvia, ha la necessità di accedere a degli essenziali file
dei dispositivi. Siccome udev non è incluso nel kernel, esso non viene attivato
immediatamente. Per aggirare questo inconveniente, ci si deve assicurare di
avere sul disco i file dei dispositivi necessari all'avvio del sistema.
</p>

<p>
Gli stage di installazione dovrebbero già aver creato i dispositivi richiesti
durante l'installazione iniziale. Tuttavia qualche utente ne ha riscontrato la
mancanza. Questa è l'occasione per verificare che esistano i file dei
dispositivi, e, in caso contrario, di crearli.
</p>

<p>
Siccome l'attuale gestore dei dispositivi sarà montato in <path>/dev/</path>,
non sarà possibile accedervi direttamente. Perciò si effettuerà il bind-mount
della partizione di root in un'altra locazione, e si accederà a
<path>/dev/</path> da lì.
</p>

<pre caption="Efettuare il bind-mount della partizione di root ed elencare i
dispositivi statici">
# <i>mkdir -p /mnt/temp</i>
# <i>mount --rbind / /mnt/temp</i>
# <i>cd /mnt/temp/dev</i>
# <i>ls -l console null</i>
</pre>

<p>
Se il comando <e>ls</e> precedentemente elencato riporta la mancanza di
<c>console</c> o <c>null</c>, allora bisogna crearli manualmente, come mostrato
qui di seguito.
</p>

<pre caption="Creare i nodi console e null mancanti">
# <i>mknod -m 660 console c 5 1</i>
# <i>mknod -m 660 null c 1 3</i>
</pre>

<p>
A questo punto si deve smontare la partizione di cui si era fatto il bind-mount,
anche se non si è dovuto creare manualmente i dispositivi:
</p>

<pre caption="Smontare la partizione di root bind-mounted">
# <i>cd</i>
# <i>umount /mnt/temp</i>
# <i>rmdir /mnt/temp</i>
</pre>

</body>
</section>
<section>
<title>Installare le utilità di ALSA</title>
<body>

<p>
ALSA richiede che siano installati determinati pacchetti, per permettere alle
applicazioni di usare le API ALSA. Questi pacchetti, inoltre, permettono
all'utente di controllare il mixer e i livelli dei volumi. Si installino gli
strumenti richiesti in questo modo:
</p>

<pre caption="Installare le utilità e le librerie ALSA">
# <i>emerge -a alsa-lib alsa-utils alsa-tools alsa-headers alsa-oss</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Installare i sorgenti di Linux 2.6</title>

<section>
<title>Scegliere e installare un kernel</title>
<body>

<p>
La prima cosa da fare è scegliere quali sorgenti di un kernel 2.6 installare. I
due kernel 2.6 supportati da Gentoo sono attualmente <e>gentoo-sources</e> (per
i desktop) e <e>hardened-sources</e> (per i server). Nella <uri
link="/doc/it/gentoo-kernel.xml">Guida ai Kernel Gentoo Linux</uri> sono
elencate le altre possibilità di scelta.
</p>

<p>
In questa guida verrà utilizzati come esempio il pacchetto
<c>gentoo-sources</c>.Installare i sorgenti del kernel desiderato tramite
<c>emerge</c>:
</p>

<pre caption="Installare gentoo-sources">
# <i>emerge -a gentoo-sources</i>
These are the packages that I would merge, in order:
Calculating dependencies ...done!
[ebuild  NS   ] sys-kernel/gentoo-sources-2.6.10-r4

Do you want me to merge these packages? [Yes/No] <i>y</i>
</pre>

<p>
Se eseguendo il comando sopraelencato emerge vuole installare la versione 2.4 di
gentoo-sources (es. <c>gentoo-sources-2.4.26</c>), significa che si sta usando
un profilo non progettato per gli utenti di Linux 2.6. Si segua la <uri
link="/doc/it/gentoo-upgrading.xml">Guida all'aggiornamento di Gentoo</uri> per
passare ad un profilo basato su Linux 2.6, riprovando successivamente a
installare i sorgenti del kernel 2.6.
</p>

</body>
</section>
<section>
<title>Aggiornare il collegamento simbolico /usr/src/linux</title>
<body>

<p>
Diversi componenti delle utilità di Gentoo fanno riferimento a
<path>/usr/src/linux</path> come collegamento simbolico ai sorgenti del kernel
in esecuzione (o che si sta compilando).
</p>

<p>
Si dovrà aggiornare di conseguenza il collegamento <path>/usr/src/linux</path>
facendolo puntare ai sorgenti del kernel appena installati, come mostrato
nell'esempio qui di seguito:
</p>

<pre caption="Aggiornare il collegamento simbolico /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ln -sfn linux-2.6.10-gentoo-r4 linux</i>
</pre>

</body>
</section>
</chapter>

<chapter id="pitfalls">
<title>Errori comuni nella migrazione a Linux 2.6</title>
<section>
<body>

<p>
Prima di addentrarsi nella configurazione del kernel, verranno elencati alcuni
degli errori più comuni in cui incorrono gli utenti che stanno migrando a Linux
2.6., in quanto qualcuno di questi punti influenzerà il modo in cui verrà
configurato il nuovo kernel.
</p>

<note>
Delle problematiche elencate, alcune non sono rilevanti in questo fase, verranno
comunque tutte spiegate nel dettaglio, per avere un comodo riferimento in un
secondo momento.
</note>

</body>
</section>
<section>
<title>Non usare "make oldconfig" con un .config 2.4</title>
<body>

<note>
Se non si capisce cosa significa, non ci si preoccupi, non si farà sicuramente
questo errore se si segue correttamente il resto della guida.
</note>

<p>
Verrebbero poste un sacco di domande, in quanto i cambiamenti avvenuti dalla
serie 2.4 alla 2.6 sono innumerevoli. Molte persone che provano ad eseguire
<c>make oldconfig</c> da una configurazione 2.4 finiscono per creare un kernel
inutilizzabile (es. senza output sullo schermo, senza input dalla tastiera,
ecc.). Si possono evitare queste seccature usando la tradizionale configurazione
tramite <c>menuconfig</c> anche solo per una volta.
</p>

</body>
</section>
<section>
<title>Non usare ide-scsi per la masterizzazione CD/DVD</title>
<body>

<p>
In Linux 2.4 l'unico modo per ottenere buoni risultati nella masterizzazione
CD/DVD era l'abilitazione (alquanto scomoda) dell'emulazione <c>ide-scsi</c>.
Per fortuna il layer IDE in Linux 2.6 è stato esteso per supportare in modo più
efficiente i masterizzatori CD/DVD.
</p>

<p>
Non occorre abilitare nessuna opzione extra per il supporto alla masterizzazione
CD. Basta solamente assicurarsi di <e>non</e> abilitare <c>ide-scsi</c>, come si
faceva abitualmente nei kernel 2.4.
</p>

</body>
</section>
<section>
<title>Ora PC Speaker è un'opzione configurabile</title>
<body>

<p>
Non si otterranno i normali beep della console (o qualsiasi risposta
dall'altoparlante PC) se non si abiliterà la nuova opzione per l'altoparlante PC
(<c>CONFIG_INPUT_PCSPKR</c>):
</p>

<pre caption="Locazione dell'opzione altoparlante PC">
Device Drivers  ---&gt;
 Input device support  ---&gt;
  [*] Misc
   &lt;*&gt;   PC Speaker support
</pre>

<note>
Con "altoparlante PC" ci si riferisce all'altoparlante analogico che emette un
segnale acustico ogni volta che il sistema si accende, non all'hardware sonoro
usato per ascoltare musica, ecc.
</note>

</body>
</section>
<section>
<title>Il nuovo driver per i dispositivi a blocchi USB può dare dei
problemi</title>
<body>

<p>
Recentemente è stato aggiunto al kernel un nuovo driver per i dispositivi di
archiviazione USB. Nel momento in cui si sta scrivendo questa guida, questo
driver ("ub") è ancora agli stadi iniziali di sviluppo, e per certi utenti
risulterà inutilizzabile. Se si riscontrano problemi nell'accedere a dispositivi
con interfaccia USB come dischi fissi, memorie flash, lettori di card,
fotocamere digitali, si provi a ritornare al vecchio driver "stile SCSI":
</p>

<pre caption="Disabilitare ub">
Device Drivers  ---&gt;
 Block devices  ---&gt;
  &lt; &gt; Low Performance USB Block driver
</pre>

<note>
Il vecchio driver "stile SCSI" (USB Mass Storage support) è abilitato in modo
predefinito. Si trova nel menù "Device Drivers --&gt; USB support", ma
generalmente non entra in funzione se è presente anche ub.
</note>

</body>
</section>
<section>
<title>usbdevfs rinominato in usbfs</title>
<body>

<p>
Se si ha modificato <path>/etc/fstab</path> per personalizzare il modo in cui
il filesystem dei dispositivi USB viene montato, si dovrà modificare il tipo di
filesystem da <e>usbdevfs</e> a <e>usbfs</e>.
</p>

<note>
I kernel 2.4 più recenti permettono l'utilizzo sia di "usbfs" che di "usbdevfs",
per cui non si rischia di interrompere nessuna retrocompatibilità, eseguendo
questa operazione.
</note>

</body>
</section>
<section>
<title>Non eseguire X con una priorità maggiore</title>
<body>

<p>
Se si è utenti desktop 2.4, probabilmente si avrà modificato il sistema per
eseguire X con una priorità maggiore per avere prestazioni desktop migliori.
</p>

<p>
I molti cambiamenti apportati alla schedulazione nel kernel 2.6 modificano
questo funzionamento. Se si continua ad eseguire X con una priorità maggiore,
si otterrà esattamente quello che si desiderava (eseguire il <e>server
grafico</e> con una priorità molto alta) ma con la conseguenza di avere i suoni
a scatti e tempi di avvio molto lunghi per le applicazioni, perchè la CPU
spenderà troppo tempo a servire X e solo X.
</p>

<p>
In Linux 2.6 non c'è più la necessità di eseguire le applicazioni con una
priorità maggiore per ottenere una buona interattività, per cui è consigliabile
rimuovere tutte le modifiche riguardanti il "niceness" dei programmi!
</p>

</body>
</section>
<section>
<title>Il file di configurazione di X11 ora usa /dev/input/mice per i mouse PS/2
e USB</title>
<body>

<p>
Uno dei cambiamenti introdotti dalla configurazione predefinita di udev è la
differente organizzazione dei nodi dispositivo relativi ai mouse. In precedenza
si avevano nodi tipo <path>/dev/psaux</path> e <path>/dev/mouse</path>. Ora si
avranno nodi tipo <path>/dev/input/mouse0</path>,
<path>/dev/input/mouse1</path>, e un nodo collettivo
<path>/dev/input/mice</path> che combina i movimenti da tutti i mouse.
</p>

<p>
Fino a che la vecchia configurazione di X farà riferimento a
<path>/dev/mouse</path> o <path>/dev/psaux</path> si otterrà, tentando di
eseguire X11, un errore simile a quello mostrato di seguito:
</p>

<pre caption="Errore comune quando si esegue X in un sistema udev per la prima
volta">
(EE) xf86OpenSerial: Cannot open device /dev/mouse
  No such file or directory.
(EE) Mouse0: cannot open input device
(EE) PreInit failed for input device "Mouse0"
No core pointer
</pre>

<p>
Per correggere ciò, si apra il file di configurazione di X11 in un editor di
testo, aggiornando la sezione <e>InputDevice</e> relativa al mouse, specificando
l'uso del dispositivo <path>/dev/input/mice</path>. Qui di seguito viene
mostrato un esempio:
</p>

<pre caption="Aprire il file di configurazione di X11">
# <i>nano -w /etc/X11/xorg.conf</i>
</pre>

<note>
Se si sta ancora usando XFree86, il file di configurazione sarà
<path>/etc/X11/XF86Config</path>
</note>

<pre caption="Sezione d'esempio InputDevice del mouse">
Section "InputDevice"
  Identifier  "Mouse0"
  Driver      "mouse"
  Option      "Protocol" "auto"
  Option      "Device" "/dev/input/mice"
EndSection
</pre>

<note>
Se si sta usando un mouse seriale, il nuovo percorso del dispositivo sarà
<path>/dev/tts/0</path> invece di <path>/dev/ttyS0</path>.
</note>

</body>
</section>
<section>
<title>I nuovi driver Serial-ATA (SATA) indicano i dispositivi
diversamente</title>
<body>

<p>
Se si usavano i driver originali Serial ATA in Linux 2.4, probabilmente si è
osservato che i dispositivi SATA avevano nomi tipo <path>/dev/hde</path>.
</p>

<p>
Linux 2.6 introduce dei nuovi driver SATA (libata) basati sul sottosistema SCSI.
Siccome questi driver sono basati su SCSI, i dischi SATA appariranno come
dispositivi SCSI. Il primo disco SATA si chiamerà <path>/dev/sda</path>.
Bisognerà aggiornare <path>/etc/fstab</path> per rispecchiare i cambiamenti,
tenendoli in mente successivamente, al momento di scegliere il parametro d'avvio
"root/real_root" del kernel.
</p>

<note>
È stato effettuato il backport di libata  nelle recenti versioni di Linux 2.4,
per cui si avrà familiarità con la nuova denominazione dei dispositivi.
</note>

</body>
</section>
<section>
<title>bootsplash non è più mantenuto</title>
<body>

<p>
Se si usava il kernel <c>gentoo-sources-2.4</c>, probabilmente sarà stata usata
la funzionalità di <e>bootsplash</e>, per ottenere una console colorata tramite
il framebuffer.
</p>

<p>
Lo sviluppatore di bootsplash sembra abbia perso interesse per il suo progetto,
per via di problemi progettuali. Tuttavia lo sviluppatore <e>Michał
Januszewski</e> sta sviluppando un successore, <c>gensplash</c>, incluso nel
kernel gentoo-sources-2.6. Si può seguire il documento
<uri
link="http://dev.gentoo.org/~spock/projects/gensplash/archive/gensplash-in-5-easy-steps.txt">
Gensplash in 5 semplici passi</uri> (in inglese) per familiarizzare con il
funzionamento di gensplash.
</p>

</body>
</section>
<section>
<title>I driver I2C ora sono inclusi nel kernel</title>
<body>

<p>
Se si usa <c>lm-sensors</c> per monitorare le temperature del sistema e i
livelli di alimentazione, precedentemente si aveva bisogno del pacchetto
<c>i2c</c> per fornire il supporto hardware.
</p>

<p>
I driver hardware I2C ora sono inclusi nel kernel Linux 2.6, il pacchetto
esterno i2c non è più richiesto. Si ricordi di compilare il supporto ai
dispositivi I2C specifici per il proprio sistema nella configurazione del
kernel. Si potrà utilizzare <c>lm-sensors</c> come di consueto.
</p>

</body>
</section>
</chapter>

<chapter id="conf">
<title>Configurare, compilare ed installare il kernel</title>
<section>
<body>

<p>
Come con Linux 2.4, si hanno due opzioni per gestire la compilazione di un nuovo
kernel.
</p>

<ol>
  <li>
    Il metodo predefinito è la configurazione manuale del kernel. Ciò può
    scoraggiare ma è la scelta migliore se si conosce bene il proprio sistema.
    Se si vuole configurare manualmente il kernel, si può passare al <uri
    link="#manual">prossimo capitolo</uri>.
  </li>
  <li>
    L'opzione alternativa è usare lo strumento <c>genkernel</c> che permette la
    configurazione, compilazione ed installazione automatica del kernel. Se si
    desidera usare <c>genkernel</c> si può saltare il prossimo capitolo e
    passare all'<uri link="#genkernel">utilizzo di genkernel</uri>.
  </li>
</ol>

</body>
</section>
</chapter>

<chapter id="manual">
<title>Modalità predefinita: Configurazione manuale</title>
<section>
<title>Configurare il kernel</title>
<body>

<p>
Si procederà ora alla configurazione del kernel. Si apra menuconfig nel solito
modo:
</p>

<pre caption="Invocare menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Probabilmente l'utilizzo di menuconfig sarà familiare, avendo già configurato i
kernel 2.4. Fortunatamente, l'interfaccia  è stata cambiata quasi per intero,
tuttavia si noterà una migliore organizzazione delle opzioni del kernel e
<e>molte</e> nuove opzioni che non erano presenti nella versione 2.4.
</p>

<p>
Ci si assicuri di abilitare le importanti opzioni riportate qui di seguito:
</p>

<pre caption="Opzioni necessarie del kernel">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(le seguenti sono necessarie per udev):</comment>
General setup  ---&gt;
 [*] Support for hot-pluggable devices

<comment>(le seguenti sono necessarie per ALSA):</comment>
Device Drivers  ---&gt;
 Sound  ---&gt;
  &lt;*&gt; Sound card support
  Advanced Linux Sound Architecture  ---&gt;
   &lt;M&gt; Advanced Linux Sound Architecture
   &lt;M&gt; Sequencer support
   &lt;M&gt; OSS Mixer API
   [*] OSS Sequencer API
<comment>   (non ci si dimentichi di selezionare la propria scheda sonora dai sottomenù!)</comment>

<comment>(le seguenti sono necessarie si si usa LVM per la gestione dei dischi):</comment>
Device Drivers  ---&gt;
 Multi-device support (RAID and LVM)  ---&gt;
  [*] Multiple devices driver support (RAID and LVM)
   &lt;*&gt;   Device mapper support
</pre>

<warn>
Probabilmente in precedenza si includeva il supporto per il filesystem
<path>/dev</path> (ora marcato come OBSOLETO). Non si deve abilitare il supporto
a devfs, in quanto da questo momento, al suo posto, verrà utilizzato udev.
</warn>

<p>
Inoltre ci si deve ricordare di abilitare il supporto ai filesystem utilizzati e
all'hardware presente nel proprio sistema. Ci si assicuri di abilitare il
supporto al controller IDE della propria scheda madre per velocizzare, tramite
il DMA, l'accesso ai dischi. Per ulteriori informazioni si faccia riferimento
alla sezione <uri
link="/doc/it/handbook/handbook-x86.xml?part=1&amp;chap=7">Configurare il
kernel</uri> del <uri link="/doc/it/handbook/index.xml">Manuale Gentoo</uri>
</p>

</body>
</section>
<section>
<title>Compilare il kernel</title>
<body>

<p>
Dopo aver configurato il kernel, si può procedere al processo di compilazione:
</p>

<pre caption="Compilare i sorgenti del kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<note>
Con i sorgenti di Linux 2.4 era richiesta l'esecuzione di <c>make dep</c>. Ora
questa operazione non è più richiesta.
</note>

<p>
Si aspetti il completamento della compilazione del kernel (e si osservi l'output
di compilazione molto più leggibile).
</p>

</body>
</section>
<section>
<title>Installare il kernel</title>
<body>

<p>
Il prossimo passaggio consiste nel montaggio della partizione <path>/boot</path>
in cui si copierà l'immagine del kernel. Si dovrà poi aggiornare manualmente la
configurazione del bootloader.
</p>

<pre caption="Installare il kernel">
# <i>mount /boot</i>
# <i>cp arch/i386/boot/bzImage /boot/bzImage-2.6.10-gentoo-r4</i>
</pre>

<p>
È da notare che le istruzioni precedentemente elencate sono solo un esempio, si
dovrebbe seguire l'usuale procedura di aggiornamento del kernel tramite le
istruzioni nel  <uri link="/doc/it/handbook/index.xml">Manuale Gentoo</uri>
(si legga il capitolo <uri
link="/doc/it/handbook/handbook-x86.xml?part=1&amp;chap=7">Configurare il
kernel</uri>).
</p>

<p>
Nell'aggiornamento della configurazione del bootloader, è consigliabile non
rimuovere la voce relativa al kernel 2.4. In questo modo si può facilmente
passare da uno all'altro nel caso qualcosa non funzioni correttamente.
</p>

<p>
A questo punto si prosegue con la sezione relativa alla <uri
link="#modules">Configurazione dei Moduli</uri>.
</p>

</body>
</section>
</chapter>

<chapter id="genkernel">
<title>Alternativa: Usare genkernel</title>
<section>
<body>

<p>
Se si preferisce utilizzare genkernel al posto della configurazione manuale
del kernel, potrà far piacere sapere che con genkernel la creazione dei kernel
2.6 è molto simile al processo che si eseguiva per i precedenti kernel 2.4.
</p>

<p>
Si deve invocare genkernel nel seguente modo:
</p>

<pre caption="Invocare genkernel con alcuni dei parametri principali">
# <i>genkernel --udev --menuconfig --bootloader=grub all</i>
</pre>

<p>
Nel precedente esempio, ci si avvantaggia inoltre delle funzionalità di
genkernel che permettono l'apertura di menuconfig per permettere di
personalizzare la configurazione del kernel (se lo si desidera), e di aggiornare
la configurazione del bootloader grub dopo la compilazione.
</p>

<p>
Si dovranno passare a genkernel gli argomento appropriati per le proprie
necessità, ma non ci deve dimenticare di includere l'argomento <c>--udev</c>! Si
faccia riferimento alla <uri link="/doc/it/genkernel.xml">Guida Gentoo Linux
Genkernel</uri> e al capitolo <uri
link="/doc/it/handbook/handbook-x86.xml?part=1&amp;chap=7">Configurare il
kernel</uri> del <uri link="/doc/it/handbook/index.xml">Manuale Gentoo</uri>
per ulteriori informazioni.
</p>

<p>
Se si è scelto di aggiornare manualmente la configurazione del bootloader, ci
si deve ricordare di includere <c>udev</c> tra i parametri passati al kernel.
Qui di seguito viene mostrata un esempio di sezione della configurazione di
grub, si presti attenzione però nell'adattare il parametro <e>real_root</e> al
sistema che si sta usando.
</p>

<pre caption="Configurazione d'esempio di GRUB per genkernel + udev">
title Gentoo Linux (2.6 kernel)
root (hd0,0)
kernel /kernel-2.6.10-gentoo-r4 <i>udev</i> root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/sda3
initrd /initrd-2.6.10-gentoo-r4
</pre>

</body>
</section>
</chapter>

<chapter id="modules">
<title>Configurazione dei Moduli</title>

<section>
<title>Installare moduli esterni</title>
<body>

<p>
Molti utenti fanno affidamento a moduli aggiuntivi del kernel, che vengono
creati esternamente all'albero dei sorgenti. Esempi comuni sono i driver
grafici binari di ATI e Nvidia. Se si necessita di installare questi moduli, i
quali vengono compilati rispetto ai sorgenti 2.6 trovati in
<path>/usr/src/linux</path>, basta eseguire <c>emerge nomepacchetto</c> per
tutti i moduli esterni usati con il kernel 2.4.
</p>

<p>
Si faccia nuovamente riferimento al capitolo <uri
link="/doc/it/handbook/handbook-x86.xml?part=1&amp;chap=7"> Configurare il
kernel</uri> del <uri link="/doc/it/handbook/index.xml">Manuale Gentoo</uri> per
ulteriori informazioni.
</p>

</body>
</section>
<section>
<title>Caricamento automatico dei moduli</title>
<body>

<p>
Si potrebbe aver deciso di compilare dei componenti del kernel come moduli
(piuttosto che compilarli direttamente nel kernel) e volerli caricare
automaticamente durante l'avvio, come nel kernel 2.4. Inoltre, si potrebbe
volere caricare in automatico anche i moduli esterni presenti nell'albero di
portage (come descritto precedentemente).
</p>

<p>
Per ottenere questo modificare <path>/etc/conf.d/modules</path> con l'editor
di testo preferito ed elencare i nomi dei moduli che si desidera caricare in automatico.
</p>

<pre caption="Aprire con nano l'elenco dei moduli da caricare in automatico">
# <i>nano -w /etc/conf.d/modules</i>
</pre>

<pre caption="Esempio di configurazione per il caricamento dei moduli 3c59x e nvidia">
modules="<i>3c59x nvidia</i>"
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Migrazione da LVM a LVM2</title>
<section>
<title>Aggiornamento agli strumenti di LVM2</title>
<body>

<note>
Se non si utilizza LVM per gestire la memorizzazione su disco dei dati, si può
tranquillamente saltare questo capitolo e passare al successivo.
</note>

<p>
Fortunatamente l'aggiornamento degli strumenti utente LVM1 alla versione LVM2 è
molto semplice:
</p>

<pre caption="Aggiornare gli strumenti utente da LVM1 a LVM2">
# <i>emerge --unmerge lvm-user</i>
# <i>emerge lvm2</i>
</pre>

<note>
Bisognerà ri-emergere <c>lvm-user</c> se si pensa di tornare ad utilizzare un
kernel 2.4, in quanto <c>lvm2</c> in sé non è sufficiente per il funzionamento
di LVM su tali versioni del kernel.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Avviare il sistema in Linux 2.6</title>
<section>
<body>

<p>
È ora di avviare il sistema in Linux 2.6. si chiudano tutte le applicazioni e
si riavvii:
</p>

<pre caption="Riavvio">
# <i>umount /boot</i>
# <i>reboot</i>
</pre>

<p>
Dopo il riavvio, se si ha seguito correttamente dall'inizio questa guida, si
avrà l'opzione, tramite il bootloader, di caricare Linux 2.4 o Linux 2.6.
Scegliere Linux 2.6
</p>

<p>
Una volta che il sistema si è avviato, verificare che tutto funzioni. Se si ha
commesso qualche errore nella configurazione del kernel non c'è da
preoccuparsi, basta tornare indietro alla sezione <uri link="#conf">Configurare,
compilare ed installare il kernel</uri>, effettuare i cambiamenti, ricompilare
e installare la nuova immagine del kernel, riavviare e riprovare ancora!
</p>

</body>
</section>
<section>
<title>Configurare e attivare ALSA</title>
<body>

<p>
Per completare la configurazione di ALSA e attivare i canali audio, il
pacchetto di ALSA fornisce un utilissimo strumento per rendere il processo
relativamente semplice:
</p>

<pre caption="Eseguire lo strumento di configurazione automatica di ALSA">
# <i>alsaconf</i>
</pre>

<p>
La procedura è facile: dopo aver aggiornato automaticamente il file
<e>/etc/modules.d/alsa</e> e riavviato ALSA, alsaconf terminerà, tuttavia si
dovrà rieseguirlo più volte se si hanno diverse schede sonore installate nel
sistema.
</p>

<p>
A questo punto si dovrà aggiungere <c>alsasound</c> al runlevel di boot, per
permettere il salvataggio dei volumi allo spegnimento del sistema, e il loro
ripristino durante l'avvio:
</p>

<pre caption="Aggiungere alsasound al runlevel di boot">
# <i>rc-update add alsasound boot</i>
</pre>

<note>
Lo strumento <c>alsaconf</c> sceglie dei livelli iniziali di volume per la
scheda sonora in uso. Se dovessero essere inappropriati, si possono modificare
in qualsiasi momento tramite l'utilità <c>alsamixer</c>.
</note>

</body>
</section>
<section>
<title>Si riscontrano da subito dei problemi?</title>
<body>

<p>
Se si riscontrano da subito dei problemi, è consigliabile tornare indietro alla
sezione <uri link="#pitfalls">Errori comuni nella migrazione a Linux 2.6</uri>
per risolverli.
</p>

</body>
</section>
</chapter>

<chapter>
<title>File Header e NPTL</title>
<section>
<body>

<p>
Arrivati a questo punto Linux 2.6 dovrebbe essere in esecuzione, e tutti i
problemi dovrebbero essere risolti. Ora bisogna aggiornare i file header del
kernel Linux e riemergere le librerie glibc per permettere alle applicazioni
utente di sfruttare le nuove funzionalità di Linux 2.6.
</p>

<pre caption="Aggiornare linux-headers">
# <i>emerge -u linux-headers</i>
</pre>

<p>
A seguito dell'aggiornamento del pacchetto degli header, generalmente si
dovranno riemergere le librerie glibc. C'è una nuova funzionalità molto
interessante, chiamata NPTL. NPTL è un nuovo modello di threading presente in
Linux 2.6, che fornisce un meccanismo più veloce di creazione e distruzione dei
thread. Sul molti sistemi potrà non fare molta differenza, comunque si ha la
possibilità di abilitarlo durante il processo di migrazione. Per abilitare NPTL,
si deve modificare <path>/etc/portage/make.conf</path>, aggiungendo <e>nptl</e> alla
variabile USE.
</p>

<warn>
Se si sceglie di abilitare anche la flag "nptlonly", è da tenere ben presente
che non si riuscirà più ad avviare un kernel 2.4
</warn>

<p>
A questo punto effettuare nuovamente l'emerge di glibc (lo si dovrebbe fare
anche se non si ha scelto di abilitare NPTL).
</p>

<pre caption="Reinstallare glibc con i nuovi header del kernel">
# <i>emerge -a glibc</i>
</pre>

<p>
Se NPTL è stato abilitato, i binari esistenti non lo useranno finché non
verranno ricompilati. Tuttavia, qualsiasi binario compilato da questo punto in
avanti <e>userà</e> NPTL. Volendo si più ricompilare da subito tutti i
pacchetti, come nell'esempio:
</p>

<pre caption="Ricompilare tutti i pacchetti installati nel sistema">
# <i>emerge -e world</i>
</pre>

<p>
In alternativa, si può semplicemente lasciare che il sistema converta
"naturalmente" sé stesso a NPTL, aggiornando i pacchetti alle nuove versioni
quando esse vengono rilasciate.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Note finali</title>
<section>
<title>Problemi?</title>
<body>

<p>
Con l'incredibile mole di lavoro che Linux 2.6 porta con sé, è inevitabile che
talvolta le cose che prima (con Linux 2.4) funzionavano correttamente, con
Linux 2.6 non funzionino più come ci si aspettava.
</p>

<p>
Se si riscontrano problemi con il kernel 2.6, e si può confermare che questi
problemi non si verificavano con Linux 2.4, si prega di aprire un bug in <uri
link="http://bugs.gentoo.org">Bugzilla</uri>. Il problema verrà analizzato e se
verrà riscontrato che il problema risiede nella struttura principale del kernel,
verrà chiesto di inviare un report nel bugzilla principale del kernel.
</p>

</body>
</section>
<section>
<title>Conclusione</title>
<body>

<p>
Si auspica che, a questo punto, la migrazione sia stata effettuata senza
imprevisti, e che si stia giovando dei benefici apportati da Linux 2.6 rispetto
alla versione 2.4.
</p>

<p>
L'autore ringrazia tutti quegli utenti che hanno effettivamente 'testato' questo
documento mentre era nelle sue prime fasi di sviluppo, e quelli che hanno
fornito dei feedback sul processo di migrazione. Inoltre l'autore si scusa se
non è riuscito a rispondere a tutte le e-mail (erano un sacco!), comunque le ha
lette una per una, rifinendo questo documento dove appropriato. È ora di godersi
il proprio sistema potenziato con il kernel 2.6 :)
</p>

</body>
</section>
<section>
<title>Rimuovere Linux 2.4 dal proprio sistema</title>
<body>

<p>
È probabile che Linux 2.4 non sia più indispensabile, dopo aver usato la
versione 2.6 per un certo tempo. Per pulire il sistema si possono seguire le
operazioni dettagliate successivamente. <e>Si segua la procedura in questa
sezione solo se si è sicuri che non si vuole o non si necessita più del kernel
2.4!</e>
</p>

<p>
I sorgenti del kernel 2.4 possono essere rimossi normalmente tramite lo
strumento emerge. Supponendo di avere installato le versioni 2.4 dei
vanilla-sources e gentoo-sources, li si potrà rimuovere, mantenendo intatte le
versioni 2.6, con il seguente comando:
</p>

<pre caption="Esempio: Rimuovere i sorgenti di Linux 2.4">
# <i>emerge --unmerge =vanilla-sources-2.4.* =gentoo-sources-2.4.*</i>
</pre>

<p>
Portage non ripulirà completamente l'installazione dei sorgenti del kernel 2.4,
in quanto la directory dei sorgenti conterrà dei file temporanei creati durante
la compilazione. li si può rimuovere in sicurezza  con il seguente comando:
</p>

<pre caption="Rimuovere i rimanenti file temporanei">
# <i>rm -rf /usr/src/linux-2.4.*</i>
</pre>

<p>
In aggiunta si potranno rimuovere i moduli e i file informativi relativi alle
vecchie installazioni dei kernel 2.4, in quanto non sono più necessari:
</p>

<pre caption="Rimuovere i moduli 2.4 precedentemente installati">
# <i>rm -rf /lib/modules/2.4.*</i>
</pre>

<p>
Anche i binari dei kernel 2.4 usati per l'avvio del sistema possono essere
rimossi senza problemi. Si dovrà montare la partizione <c>/boot</c> e rimuovere
le relative immagini. Inoltre bisogna aggiornare la configurazione del
bootloader rimuovendo i riferimenti alle immagini dei kernel che sono state
eliminate.
</p>

<p>
Qualche utente di Linux 2.4 avrà a suo tempo installato il pacchetto
<c>alsa-driver</c> per beneficiare delle nuove capacità audio incluse in Linux
2.6. Se si è uno di loro, e si è seguito il consiglio, dato precedentemente in
questo documento, di compilare i driver ALSA contenuti nei sorgenti del kernel
2.6. (in alternativa all'uso del pacchetto <c>alsa-driver</c>), si potrà
rimuovere in sicurezza il pacchetto, per prevenire futuri conflitti.
</p>

<p>
Inoltre, gli utenti di <c>lm-sensors</c> in precedenza avranno usato il
pacchetto <c>i2c</c> per disporre dei driver hardware. Com'era già stato detto,
i driver I2C ora sono inclusi nel kernel, per cui questo pacchetto può essere
rimosso allo scopo di prevenire futuri conflitti.
</p>

<p>
Anche il demone di gestione di devfs, <c>devfsd</c>, può essere rimosso senza
indugi, poiché ora si userà <c>udev</c> per la gestione dei dispositivi.
</p>

<pre caption="Rimuovere alsa-driver, i2c, e devfsd">
# <i>emerge --unmerge alsa-driver i2c devfsd</i>
</pre>

<p>
Se si è utenti LVM2, con molte probabilità si vorrà convertire i propri dati
nel formato LVM2 per beneficiare dei vantaggi offerti dalla nuova versione.
Tuttavia, questa operazione inibirà qualunque accesso ai dati LVM da un kernel
2.4. Se si vuole proseguire con la conversione (è assolutamente opzionale!), si
possono esaminare le pagine del manuale di <c>vgconvert</c> per le istruzioni su
come procedere. Viene comunque mostrato un esempio, dove <c>main</c> è il nome
del gruppo dei volumi.
</p>

<pre caption="Convertire un volume LVM1 al formato LVM2">
# <i>vgconvert -M2 main</i>
</pre>

</body>
</section>
</chapter>
</guide>
