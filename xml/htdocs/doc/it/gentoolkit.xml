<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/gentoolkit.xml,v 1.5 2004/11/10 20:32:42 mush Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link = "/doc/it/gentoolkit.xml" lang="it">
<title>Gentoolkit</title>
<author title="Autore">
	<mail link="mbutcher@aleph-null.tv">Matt Butcher</mail>
</author>

<author title="Redazione"><!-- zhen@gentoo.org -->John P. Davis</author>
<author title="Redazione"><mail link="erwin@gentoo.org">Erwin</mail></author>
<author title="Redazione"><mail link="fox2mike@gmail.com">Shyam Mani</mail></author>
<author title="Redazione"><mail link="neysx@gentoo.org">Xavier Neys</mail></author>
<author title="Traduzione"><mail link="marco.romano@mobyt.it">Marco Romano</mail></author>
<author title="Traduzione"><mail link="siggy@gentoo.org">Luca Mercuri</mail></author>
<!-- Licensed under GFDL -->

<abstract>
	Gentoolkit è un insieme di tool che semplificano l'amministrazione di un sistema Gentoo. 
	Questo documento tratta le basi di alcuni dei tool presenti in Gentoolkit. 
</abstract>

<version>1.4</version>
<date>25 Agosto 2004</date>

<chapter>
	<title>Introduzione</title>
	<section>
		<title>Cosa è Gentoolkit?</title>
		<body>
			<p>Gentoo è una distribuzione unica, e presenta alcune difficoltà che 
			non esistono per le altre distribuzioni. Quando gli sviluppatori 
			di Gentoo ed i collaboratori scoprono alcune di queste difficoltà, 
			di conseguenza scrivono dei tool per aiutare gli utenti ed il lavoro 
			degli amministratori. Molti di questi tool hanno contribuito al Gentoo 
			Project, e sono stati inclusi nel package <c>app-portage/gentoolkit</c>. 
			</p>

			<note>
				In questo momento ci sono due versioni di gentoolkit: 
				<c>app-portage/gentoolkit</c> e <c>app-portage/gentoolkit-dev</c>
				Mentre il primo contiene script per l'amministrazione, il secondo 
				contiene script specifici per aiutare gli sviluppatori di Gentoo.
				Questo documento parla unicamente di gentoolkit.
			</note>
			
			<p>Gentoolkit contiene un insieme di tool utili per aiutare la gestione dei tuoi
			pacchetti e per tenere traccia di quello che viene fatto sul tuo sistema.
			Molti utenti --soprattutto quelli che aggiornano il loro sistema spesso--
			troveranno utile avere gentoolkit installato.</p>
		</body>
	</section>
	<section>
		<title>Installazione</title>
		<body>
			<p>Come lo è per ogni package Gentoo, l'installazione è un semplice emerge.</p>

			<pre caption="Prendi gentoolkit">
			# <i>emerge gentoolkit </i>
			</pre>
			<note>Molti di questi tools presenti in gentoolkit rivelano delle 
			informazioni importanti riguardo il sistema o richiedono 
			privilegi di root. Per questo motivo alcuni dei programmi 
                                potranno essere eseguiti (o perchè funzionino correttamente) 
                                solo da utenti con privilegi root.</note> 
      		</body>
	</section>
	<section>
		<title>Trovare la documentazione</title>
		<body>

			<p>
			Tutta la documentazione che ogni 
                                programma potrebbe avere (oltre le man pages) è presente in 
				<path>/usr/doc/gentoolkit-[version]/[program-name]/</path>.
			</p>
		</body>
	</section>
</chapter>
<chapter>
	<title>Richiedere Informazioni su i Package, qpkg</title>
	<section>

		<title>Introduzione</title>
		<body>
			<p><c>qpkg</c> è un tool flessibile per avere informazioni riguardo gli ebuild,
                                     sapere se sono installati oppure no. Puo fornire informazioni riguardo 
                                     quali file appartengono a quale ebuild, se ci sono piu versioni di uno 
                                     stesso package installate, e a cosa un particolare ebuild serve.
                                     Può anche essere utilizzato anche per richiedere alcune informazioni su ebuild
                                     ancora non installati.
			</p>
			<p>Chiamando <c>qpkg</c> senza nessun argomento si stampa la lista di tutti gli ebuilds,
                                           con asterisco (*) al lato vengono indicati i packages attualmente 
                                           installati sul sistema.
			</p>
			<note>Per default, <c>qpkg</c> stampa l'output a colori. Per evitare questo, 
                                        bisogna utilizzare, da riga di comando, le flag
                                        <c>--no-color</c> o <c>-nc</c></note>                               
		</body>
	</section>
	<section>
		<title>Richiesta informazioni sui pacchetti</title>
		<body>
			<p>Uno degli usi piu comuni di <c>qpkg</c> è quello di aiutare a capire 
                                cosa è un determinato package. Guardando in <path>net-misc</path>, vidi un package
                                chiamato <path>neon</path>. Non avevo idea di cosa fosse. Ho eseguito qpkg.  
			</p>

			<pre caption="Informazioni pacchetto"> 
# <i>qpkg -i net-misc/neon</i>
net-misc/neon-0.24.4
        HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.23.8
        HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.24.6
        HTTP and WebDAV client library [ http://www.webdav.org/neon/ ]
net-misc/neon-0.24.5
        HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.24.0
        HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.21.3
        HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.23.9
        HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.24.7
        HTTP and WebDAV client library [ http://www.webdav.org/neon/ ]
net-misc/neon-0.24.2
        HTTP and WebDAV client library [ http://www.webdav.org/neon ]			</pre>
			<p>
				<c>qpkg</c> ha letto attraverso i file dell'ebuild per tutti e cinque i <path>net-misc/neon</path>
				ebuild e stampa in uscita le informazioni memorizzate in DESCRIPTION e HOMEPAGE.
			</p>
		</body>

	</section>
	<section>
		<title>Visualizzare i file che appartengono ad un ebuild</title>
		<body>
			<p>
				<c>qpkg</c> permette la visualizzazione dei files che appartengono ad un ebuild installato. 
                                Io so che gentoolkit installa diversi tool, ma non li conosco tutti. Per saperlo posso utilizzare
                                <c>qpkg -l</c>
			</p>
			<pre caption="Lista dei file utilizzando qpkg">
# <i>qpkg -l app-portage/gentoolkit</i>
app-portage/gentoolkit-0.2.0_pre8 *
CONTENTS:
/usr
/usr/bin
/usr/bin/euse
/usr/bin/qpkg
/usr/bin/etcat
/usr/bin/revdep-rebuild
/usr/bin/glsa-check
/usr/bin/dep-clean
/usr/bin/equery
/usr/bin/ewhich
/usr/bin/pkg-size
/usr/lib
/usr/lib/gentoolkit
/usr/lib/gentoolkit/pym
/usr/lib/gentoolkit/pym/glsa.py
/usr/lib/gentoolkit/pym/gentoolkit.py
/usr/sbin
/usr/sbin/pkg-clean
/usr/sbin/mkebuild
/usr/share
/usr/share/doc
/usr/share/doc/gentoolkit-0.2.0_pre8
/usr/share/doc/gentoolkit-0.2.0_pre8/NEWS
/usr/share/doc/gentoolkit-0.2.0_pre8/TODO
/usr/share/doc/gentoolkit-0.2.0_pre8/euse
/usr/share/doc/gentoolkit-0.2.0_pre8/euse/TODO
/usr/share/doc/gentoolkit-0.2.0_pre8/euse/README
/usr/share/doc/gentoolkit-0.2.0_pre8/euse/AUTHORS
/usr/share/doc/gentoolkit-0.2.0_pre8/euse/ChangeLog
/usr/share/doc/gentoolkit-0.2.0_pre8/qpkg
/usr/share/doc/gentoolkit-0.2.0_pre8/qpkg/README
/usr/share/doc/gentoolkit-0.2.0_pre8/qpkg/AUTHORS
/usr/share/doc/gentoolkit-0.2.0_pre8/qpkg/ChangeLog
/usr/share/doc/gentoolkit-0.2.0_pre8/etcat
/usr/share/doc/gentoolkit-0.2.0_pre8/etcat/README
/usr/share/doc/gentoolkit-0.2.0_pre8/etcat/AUTHORS
/usr/share/doc/gentoolkit-0.2.0_pre8/revdep-rebuild
/usr/share/doc/gentoolkit-0.2.0_pre8/revdep-rebuild/TODO
/usr/share/doc/gentoolkit-0.2.0_pre8/revdep-rebuild/README
/usr/share/doc/gentoolkit-0.2.0_pre8/revdep-rebuild/AUTHORS
/usr/share/doc/gentoolkit-0.2.0_pre8/README
/usr/share/doc/gentoolkit-0.2.0_pre8/equery
/usr/share/doc/gentoolkit-0.2.0_pre8/equery/README
/usr/share/doc/gentoolkit-0.2.0_pre8/equery/AUTHORS
/usr/share/doc/gentoolkit-0.2.0_pre8/AUTHORS
/usr/share/doc/gentoolkit-0.2.0_pre8/gentoolkit
/usr/share/doc/gentoolkit-0.2.0_pre8/gentoolkit/TODO
/usr/share/doc/gentoolkit-0.2.0_pre8/gentoolkit/README
/usr/share/doc/gentoolkit-0.2.0_pre8/gentoolkit/AUTHORS
/usr/share/doc/gentoolkit-0.2.0_pre8/gentoolkit/ChangeLog
/usr/share/doc/gentoolkit-0.2.0_pre8/ChangeLog
/usr/share/doc/gentoolkit-0.2.0_pre8/COPYING
/usr/share/man
/usr/share/man/man1
/usr/share/man/man1/revdep-rebuild.1.gz
/usr/share/man/man1/mkebuild.1.gz
/usr/share/man/man1/qpkg.1.gz
/usr/share/man/man1/pkg-clean.1.gz
/usr/share/man/man1/etcat.1.gz
/usr/share/man/man1/ewhich.1.gz
/usr/share/man/man1/equery.1.gz
/usr/share/man/man1/euse.1.gz
/usr/share/man/man1/dep-clean.1.gz
/usr/share/man/man1/pkg-size.1.gz			</pre>
		<note>
			Nel caso tu abbia gentoolkit-dev installato, <c>qpkg</c> ti mostrerà i file che prende come buoni, 
			per esempio questo mostra i file per tutti i pacchetti installati con il nome gentoolkit.
		</note>
		</body>
	</section>
	<section>
		<title>Trovare il Package dal quale un File proviene</title>
		<body>

			<p>
				Per trovare il package dal quale un file proviene, bisogna utilizzare il flag 
                                <c>-f</c> o <c>--find-file</c>.   
			</p>
			<pre caption="Trovare l'ebuild che ha installato un determinato file">
# <i>qpkg -f /usr/lib/mozilla</i>
net-www/mozilla *
			</pre>

		</body>
	</section>
	<section>
		<title>Visualizzare Packages Duplicati</title>
		<body>
			<p>
                                Alcune volte esistono piu versioni di uno stesso package. <c>qpkg --dups</c>
                                stamperà una lista di packages duplicati. L'esistenza di un package duplicato
                                non vuol dire che la versione piu vecchia puo essere rimossa. Possono riempirsi 
                                diversi slots e per vedere i duplicati presenti nello stesso slot, bisogna utilizzare
                                <c>qpkg --dups --slot</c>. I ho aggiornato KDE dalla versione 3.0 alla 3.0.2, e per
                                questo ho dei duplicati nello stesso slot.
			</p>
			<pre caption="Trovare pacchetti duplicati"> 
# <i>qpkg --dups --slot</i>
app-portage/gentoolkit
kde-base/kdeaddons
kde-base/kdeadmin
kde-base/kdeartwork
kde-base/kdebase
kde-base/kdegames
kde-base/kdelibs
kde-base/kdemultimedia
kde-base/kdenetwork
kde-base/kdetoys
kde-base/kdeutils
media-libs/freetype
x11-libs/qt			</pre>
		</body>
	</section>
	<section>
		<title>Verficare l'integrità di un package</title>

		<body>
			<p>
                                A volte è utile controllare l'integrità di un package per sapere quali files
                                non sono stati modficati da quando il package è stato installato. <c>qpkg</c> può
                                verificare che gli md5 sums dei file siano uguali a quelli memorizzati al tempo
                                dell'installazione in questo modo possiamo sapere quali file sono corrotti, modificati o rimossi.  
			</p>
			<p>Per controllare sia gli md5 sums che l'mtimes (data di ultima modifica), 
                           bisogna utilizzare <c>-c</c> flag.</p>
    			<pre caption="Vedere le differenze?">
# <i>qpkg cdrtools -c -v</i>
app-cdr/cdrtools-2.01_alpha25 *
/etc/default/rscsi.dfl !mtime!
/usr/bin/devdump !md5! !mtime!
/usr/bin/mkisofs !md5! !mtime!
/usr/bin/isovfy !md5! !mtime!
/usr/bin/readcd !md5! !mtime!
/usr/bin/cdda2wav !md5! !mtime!
/usr/bin/cdrecord !md5! !mtime!
/usr/bin/isodump !md5! !mtime!
/usr/bin/isoinfo !md5! !mtime!
/usr/lib/libfile.a !md5! !mtime!
/usr/lib/librscg.a !md5! !mtime!
/usr/lib/libunls.a !md5! !mtime!
/usr/lib/libedc_ecc.a !md5! !mtime!
/usr/lib/libdeflt.a !md5! !mtime!
/usr/lib/libhfs.a !md5! !mtime!
/usr/lib/libscg.a !md5! !mtime!
/usr/lib/libparanoia.a !md5! !mtime!
/usr/lib/libschily.a !md5! !mtime!
/usr/sbin/rscsi !md5! !mtime!
/usr/share/man/man1/cdrecord.1.gz !md5! !mtime!
/usr/share/man/man1/readcd.1.gz !md5! !mtime!
/usr/share/man/man1/cdda2wav.1.gz !md5! !mtime!
/usr/share/man/man8/mkisofs.8.gz !md5! !mtime!
76/150

app-cdr/cdrtools-2.01_alpha37 *
0/122
			</pre>
			<p>
				Come puoi vedere, ho piu di una versione di cdrtools installata. <c>qpkg</c>
                                ha riportato che molti dei file delle vecchie versioni sono stati modificati dalla quando sono 
                                stati installati. Quei pacchetti sono stati modificati probabilmente quando sono passato 
                                da <path>cdrtools-2.01_alpha25</path> a <path>cdrtools-2.01_alpha37</path>. Notare che le ultime due linee indicano
                                che 0 di 101 file del package <path>gnupg-1.0.7</path> sono cambiati da quando è stato installato.
                                Questo è buono. Se ognuno di loro fosse stato modificato, mi preoccuperei.
			</p>

		</body>
	</section>
	<section>
		<title>Ma aspetta... c'è dell'altro</title>
		<body>
			<p>
				<c>qpkg</c> puo essere utilizzato per altri tipi di richieste che non andrò a menzionare qui. 
                                            Esiste una manpage molto completa per <c>qpkg</c>. Consultala per maggiori
                                            informazioni.   
			</p>

		</body>
	</section>
</chapter>
<chapter>
	<title>equery</title>
	<section>
		<title>Introduzione</title>
		<body>
			<p>

				<c>equery</c> è un programma che supporta funzionalità di <c>qpkg</c> e <c>epm</c> rendendole veramente efficaci. 
				<c>equey --help</c> riporta il set di opzioni completo. <c>equery</c> potrà rimpiazzare <c>etcat</c>.
			</p>
			<note>
				Non tutte le funzionalità elencate da <c>equery --help</c> sono stata già implementate. Quelle che non lo sono 
				ancora saranno menzionate chiaramente.
			</note>
		</body>
	</section>
	<section>
		<title>Trovare la grandezza dei pacchetti</title>
		<body>
			<p>
				Hai mai sentito la curiosità di sapere quanto spazio occupa uno specifico pacchetto? 
				Da quando un paccheto può avere dei file sparsi in numerose directory il comodo <c>du -hc</c>
				non riporterebbe la risposta esatta.
				Non ti preoccupare, ci viene in aiuto <c>equery</c>!
			</p>
			
			<pre caption="Grandezza pacchetto">
				# <i>equery size openoffice-bin</i>
				* app-office/openoffice-bin-1.1.2
					Total files: 2908
					Total size: 223353.31 KB
			</pre>
			<p>
				Come puoi vedere <c>equery</c> stampa lo spazio totale utilizzato in kilobyte e il numero totale dei file del pacchetto.
			</p>
		</body>
	</section>
	<section>
		<title>Elenco delle USE flag</title>
		<body>
			<p>
				<c>equery</c> può essere utilizzato per ottenere informazioni sulle USE flag che possono essere utilizzate con uno specifico
				pacchetto. Possiamo sapere quali sono le USE flag attualmente in uso e quali sono quelle disponibili.
			</p>
			
			<pre caption="Set e Unset Use flag">
				# <i>equery uses ethereal</i>
				[ Colour Code : set unset ]
				[ Legend    : (U) Col 1 - Current USE flags        ]
				[           : (I) Col 2 - Installed With USE flags ]

				 U I [ Found these USE variables in : net-analyzer/ethereal-0.10.6 ]
				 - - adns  : Adds support for the adns DNS client library
				 + + gtk   : Adds support for x11-libs/gtk+ (The GIMP Toolkit)
				 - - ipv6  : Adds support for IP version 6
				 - - snmp  : Adds support for the Simple Network Management Protocol if available
				 + + ssl   : Adds support for Secure Socket Layer connections
				 + + gtk2  : Use gtk+-2.0.0 over gtk+-1.2 in cases where a program supports both.
				 - - debug : Tells configure and the makefiles to build for debugging. Effects vary across packages,
				             but generally it will at least add -g to CFLAGS. Remember to set FEATURES=nostrip too
			</pre>
			
			<p>
				Ho installato ethereal con solamente le flag gtk, ssl e gtk2 abilitate, ma le altre flag disponibile per ethereal 
				sono adns, ipv6, snmp e debug. Per maggiori informazioni sulle USE flag fai riferimento al capitolo <uri 
				link="/doc/it/handbook/handbook-x86.xml?part=2&amp;chap=2">USE Flag</uri> del <uri link="/doc/it/handbook/">
				Gentoo Handbook</uri>.
			</p>
		</body>
	</section>
	<section>
		<title>Dove è l'ebuild?</title>
		<body>
			<p>
				Possiamo anche trovare quale ebuild è stato utilizzato per uno specifico pacchetto utilizzando <c>equery</c>.
				Questo può essere fatto utilizando il comando <c>equery which</c> che mostra il percorso completo dell'ebuild.
			</p>
			<pre caption="Mostra il percorso dell'ebuild">
				# <i>equery which cdrtools</i>
				/usr/portage/app-cdr/cdrtools/cdrtools-2.01_alpha37.ebuild
			</pre>
		</body>
	</section>
	<section>
		<title>Grafici di dipendenza</title>
		<body>
			<p>
				<c>equery</c> è in grado di darci il grafico di dipendenze di uno specifico pacchetto.
				Il grafico contiene una lista di tutti i pacchetti che hanno una diretta o indiretta dipendenza con il pacchetto
				in questione.
			</p>
			<pre caption="Grafico di dipendeza per cdrtools">
			# <i>equery depgraph cdrtools</i>
			Displaying dependencies for app-cdr/cdrtools-2.01_alpha37
			`-- app-cdr/cdrtools-2.01_alpha37
			 `-- sys-libs/glibc-2.3.4.20040808 (virtual/libc)
			  `-- sys-kernel/linux-headers-2.4.22 (virtual/os-headers)
			   `-- sys-apps/baselayout-1.10.4
			    `-- sys-apps/sysvinit-2.85-r1
			     `-- sys-apps/gawk-3.1.3-r1
			      `-- sys-apps/util-linux-2.12-r4
			          `-- sys-apps/sed-4.0.9
				      `-- sys-libs/ncurses-5.4-r4
				          `-- sys-apps/pam-login-3.14
				          `-- sys-libs/pam-0.77-r1
			                 `-- sys-libs/cracklib-2.7-r10
			               `-- sys-apps/miscfiles-1.3-r1
			              `-- app-arch/gzip-1.3.5-r1
			              `-- sys-apps/portage-2.0.50-r10
			</pre>
			<p>
				Per esempio, mentre le glibc sono una diretta dipendeza di cdrtools, i linux-headers sono una 
				indiretta dipendenza per cdrtools.
			</p>
		</body>
	</section>
</chapter>
<chapter>
	<title>euse</title>
	<section>
		<title>Introduzione</title>
		<body>
			<p>
				<c>euse</c> è un tool per vedere, abilitare e eliminare USE flag in vari posti.
				Per maggiori informazioni sulle USE flag fai riferimento al <uri
				link="/doc/it/handbook/handbook-x86.xml?part=2&amp;chap=2">USE Flag</uri>.
				<c>euse -i</c> elenca tutte le USE flag.
			</p>

		</body>
	</section>
	<section>
		<title>Leggere, abilitare ed eliminare le USE flag</title>
		<body>
			<p>
				Il comando <c>euse --conf</c> legge le correnti USE flag abilitate da make.conf.
			</p>
			<pre caption="Vedere le correnti USE flag da make.conf">
				#<i>euse --conf</i>
				USE setting in make.conf:
				alsa acpi apache2 cups cdr crypt cscope -doc ethereal fbcon gif gimpprint gnome
				gpm gstreamer gtk2 gtkhtml imlib imlib2 innodb -java javascript jpeg libg++ libwww
				mad md5sum mikmod mmx motif mozilla mpeg mpeg4 mysql ncurses oggvorbis odbc
				offensive opengl pam pdflib perl png python quicktime readline sdl spell sse ssl
				svga tcltk tiff truetype usb vanilla X xml2 xmms xosd xv xvid x86 zlib
			</pre>
			<p>
				Abilitare una USE flag può essere fatto con l'aiuto del comando <c>euse --enable</c> che richiede il
				nome di una flag come argomento. Se la flag non è ancora abilitata, <c>euse</c> aggiunge la USE flag alla fine
				della corrente configurazione di USE flag.
				Nel caso la USE flag non sia valida viene riportato un warning. La rimozione di una USE flag può essere
				fatta con il comando <c>euse --disable</c>. Se la flag è abilitata questa viene eliminata con '-flag' 
				all'interno di make.conf.
			</p>
			<pre caption="Abilitare una USE Flag, 3dfx">
				# <i>euse --enable 3dfx</i>
				USE setting in make.conf after enabling:
				alsa acpi apache2 cups cdr crypt cscope -doc ethereal fbcon gif gimpprint gnome
				gpm gstreamer gtk2 gtkhtml imlib imlib2 innodb -java javascript jpeg libg++ libwww
				mad md5sum mikmod mmx motif mozilla mpeg mpeg4 mysql ncurses oggvorbis odbc
				offensive opengl pam pdflib perl png python quicktime readline sdl spell sse ssl
				svga tcltk tiff truetype usb vanilla X xml2 xmms xosd xv xvid x86 zlib 3dfx
			</pre>

			<pre caption="Elminare una USE Flag, 3dfx">
				# <i>euse --disable 3dfx</i>
				USE setting in make.conf after disabling:
				alsa acpi apache2 cups cdr crypt cscope -doc ethereal fbcon gif gimpprint gnome
				gpm gstreamer gtk2 gtkhtml imlib imlib2 innodb -java javascript jpeg libg++ libwww
				mad md5sum mikmod mmx motif mozilla mpeg mpeg4 mysql ncurses oggvorbis odbc
				offensive opengl pam pdflib perl png python quicktime readline sdl spell sse ssl
				svga tcltk tiff truetype usb vanilla X xml2 xmms xosd xv xvid x86 zlib -3dfx
			</pre>
			<note>
				<c>euse</c> non rimuove fisicamente le flag da make.conf. Questo aggiunge solamente un - (meno) prima della flag
				per disabilitarla. Dovresti ripulire a mano il tuo make.conf per eliminare variabile non volute.
			</note>
		</body>
	</section>
</chapter>
<chapter>
	<title>Altri tool</title>
	<section>
		<title>revdep-rebuild</title>
		<body>
			<p>
				Questo tool è un Gentoo Reverse Dependency rebuilder. Questo ti permette di scansionare i tuoi ebuild installati per 
				trovare pacchetti che sono diventati rotti come risultato di un aggiornamento di un pacchetto da cui dipendono.
				Questo tool può effettuare l'emerge di questi pacchetti per te ma può anche succedere che un pacchetto non funzioni più 
				con le correnti dipendenze installate, in questo caso tu dovresti aggiornare il pacchetto rotto ad una più recente versione.
				revdep-rebuild potrà inviare le flag ad emerge in modo da poter utilizzare <c>--pretend</c> per controllare cosa 
				stai per andare ad installare prima di farlo.
			</p>
			
			<pre caption="Caricare revdep-rebuild in pretend mode">
				# <i>revdep-rebuild -p</i>

				Checking reverse dependencies...
				Packages containing binaries and libraries broken by any package update,
				will be recompiled.

				Collecting system binaries and libraries... done.
				  (/root/.revdep-rebuild.1_files)

				Collecting complete LD_LIBRARY_PATH... done.
				  (/root/.revdep-rebuild.2_ldpath)

				Checking dynamic linking consistency...
				  broken /usr/lib/ao/plugins-2/libarts.so (requires libartsc.so.0)
				  broken /usr/lib/kde3/libkpresenterpart.so (requires libartskde.so.1 libqtmcop.so.1
				         libsoundserver_idl.so.1 libkmedia2_idl.so.1 libartsflow.so.1 libartsflow_idl.so.1 libmcop.so.1)
				  broken /usr/lib/ruby/site_ruby/1.8/i686-linux/fox.so (requires libFOX-1.0.so.0)
 				  broken /usr/lib/xine/plugins/1.0.0/xineplug_ao_out_arts.so (requires libartsc.so.0)
				  broken /usr/lib/perl5/vendor_perl/5.8.0/i686-linux/auto/SDL_perl/SDL_perl.so (requires libSDL_gfx.so.0)
				  broken /usr/lib/libloudmouth-1.so.0.0.0 (requires libgnutls.so.10)
				  broken /usr/bin/k3b (requires libartskde.so.1 libqtmcop.so.1 libsoundserver_idl.so.1 libkmedia2_idl.so.1
				         libartsflow.so.1 libartsflow_idl.so.1 libmcop.so.1)
				  broken /usr/bin/lua (requires libhistory.so.4)
				  broken /usr/bin/lyx (requires libAiksaurus-1.0.so.0)
				  broken /usr/bin/luac (requires libhistory.so.4)
				  broken /usr/bin/avidemux2 (requires libartsc.so.0)
				  broken /usr/bin/pptout (requires libxml++-0.1.so.11)
				  broken /usr/bin/xml2ps (requires libxml++-0.1.so.11)
				 done.
				  (/root/.revdep-rebuild.3_rebuild)
	
				Assigning files to ebuilds... done.
				  (/root/.revdep-rebuild.4_ebuilds)

				Evaluating package order... done.
				  (/root/.revdep-rebuild.5_order)

				All prepared. Starting rebuild...
				emerge --oneshot --nodeps -p =app-cdr/k3b-0.11.14 =app-office/koffice-1.3.2 =app-office/lyx-1.3.4 \
				       =app-office/passepartout-0.2 =dev-lang/lua-5.0.2 =dev-ruby/fxruby-1.0.29 =media-libs/libao-0.8.5 \
				       =media-libs/xine-lib-1_rc5-r3 =media-video/avidemux-2.0.26 =net-libs/loudmouth-0.16 

				These are the packages that I would merge, in order:

				Calculating dependencies ...done!
				[ebuild   R   ] app-cdr/k3b-0.11.14  
				[ebuild   R   ] app-office/koffice-1.3.2  
				[ebuild   R   ] app-office/lyx-1.3.4  
				[ebuild   R   ] app-office/passepartout-0.2  
				[ebuild   R   ] dev-lang/lua-5.0.2  
				[ebuild   R   ] dev-ruby/fxruby-1.0.29  
				[ebuild   R   ] media-libs/libao-0.8.5  
				[ebuild   R   ] media-libs/xine-lib-1_rc5-r3  
				[ebuild   R   ] media-video/avidemux-2.0.26  
				[ebuild   R   ] net-libs/loudmouth-0.16  

				Now you can remove -p (or --pretend) from arguments and re-run revdep-rebuild.
			</pre>
		
			<p>
				Se hai bisogno di ricompilare qualche pacchetto tu dovresti eseguire <c>revdep-rebuild</c> senza la flag <c>p</c>
				e la lista dei pacchetti sarà installata di nuovo.
			</p>

		</body>
	</section>
	<section>
		<title>glsa-check</title>
		<body>
			<p>
				<c>glsa-check</c> è principalmente un tool in test per lasciare traccia delle varie GLSA (Gentoo Linux Security Advisory)
				e la loro eventuale integrazione dentro <c>emerge</c> e <c>equery</c>. Per maggiori informazioni visita la <uri
				link="/proj/en/portage/glsa-integration.xml">Portage GLSA Integration Page</uri>.
			</p>
		</body>

	</section>
</chapter>
</guide>