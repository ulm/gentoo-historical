<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link = "/doc/it/gentoolkit.xml">
<title>Gentoolkit</title>
<author title="Author"><mail link="mbutcher@aleph-null.tv">
Matt Butcher</mail>
</author>

<author title="Editor"><mail link="zhen@gentoo.org">John P. Davis</mail></author>
<author title="Translator"><mail link="marco.romano@mobyt.it">Marco Romano</mail></author>
<!-- Licensed under GFDL -->

<abstract>
	Gentoolkit è un insieme di tool che semplificano l'amministrazione di un sistema Gentoo.
        Questo documento tratta le basi di alcuni dei tool presenti in Gentoolkit. 
</abstract>

<version>1.1</version>
<date>25 September 2002</date>

<chapter>
	<title>Introduzione</title>
	<section>
		<title>Cosa è Gentoolkit?</title>
		<body>
			<p>Gentoo è una distribuzione unica, e presenta alcune difficoltà che 
                              non esistono per le altre distribuzioni. Quando gli sviluppatori 
                              di Gentoo ed i collaboratori scoprono alcune di queste difficoltà, 
                              di conseguenza scrivono dei tools per aiutare gli utenti ed il lavoro 
                              degli amministratori. Molti di questi tools hanno contribuito al Gentoo 
                              Project, e sono stati inclusi nel package <path>app-admin/gentoolkit</path>. 
			</p>

			<p>Gentoolkit contiene un insieme di tool utili per aiutare la gestione di 
                              Portage e l'archiettura di ebuild. Molti utenti -- soprattutto quelli
                              che aggiornano il loro sistema spesso -- troveranno utile avere gentoolkit
                              installato.</p>
		</body>
	</section>
	<section>
		<title>Installazione</title>
		<body>
			<p>Come lo è per ogni package Gentoo, l'installazione è un semplice 
                              emerge.
			</p>

			<pre>
<i>emerge gentoolkit </i>
			</pre>
			<note>Molti di questi tools presenti in gentoolkit rivelano delle 
                                informazioni importanti riguardo il sistema o richiedono 
                                privilegi di root. Per questo motivo alcuni dei programmi 
                                potranno essere eseguiti (o perchè funzionino correttamente) 
                                solo da utenti con privilegi root.</note> 
      		</body>
	</section>
	<section>
		<title>Trovare la documentazione</title>
		<body>

			<p>
				Mentre scrivo non tutti i programmi di gentoolkit sono ben documentati.
                                Alcuni hanno le man pages, ma non tutti. Tutta la documentazione che ogni 
                                programma potrebbe avere (oltre le man pages) è presente in 
				<path>/usr/doc/gentoolkit-[version]/[program-name]/</path>.
			</p>
		</body>
	</section>
</chapter>
<chapter>
	<title>Richiedere Informazioni sui i Package, qpkg</title>
	<section>

		<title>Introduzione</title>
		<body>
			<p><c>qpkg</c> è un tool flessibile per avere informazioni riguardo gli ebuilds,
                                     sapere se sono installati oppure no. Puo fornire informazioni riguardo 
                                     quali files appartengono a quale ebuilds, se ci sono piu versioni di uno 
                                     stesso package installate, e a cosa un particolare ebuild serve.        
			</p>
			<p>Chiamando <c>qpkg</c> senza nessun argomento si stampa la lista di tutti gli ebuilds,
                                           con asterisco (*) al lato vengono indicati i packages attualmente 
                                           installati sul sistema.
			</p>
			<note>Per default, <c>qpkg</c> stampa l'output a colori. Per evitare questo, 
                                        bisogna utilizzare, da riga di comando, le flag
                                        <c>--no-color</c> o <c>-nc</c></note>                               
		</body>
	</section>
	<section>
		<title>Query Package Information</title>
		<body>
			<p>Uno degli usi piu comuni di <c>qpkg</c> è quello di aiutare a capire 
                                cosa è un determinato package. Guardando in <path>net-misc</path>, vidi un package
                                chiamato <path>neon</path>. Non avevo idea di cosa fosse. Ho eseguito qpkg.  
			</p>

			<pre> 
hebron root # <i>qpkg -i net-misc/neon
net-misc/neon-0.15.3-r1
       HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.18.5
       HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.19.2
       HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.19.2-r1
       HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.21.1
       HTTP and WebDAV client library [ http://www.webdav.org/neon ] </i>
			</pre>
			<p>
				<c>qpkg</c> ha letto attraverso i file dell'ebuild per tutti e cinque i <path>net-misc/neon</path>
				ebuilds e stampa in uscita le informazioni memorizzate in DESCRIPTION e HOMEPAGE.
			</p>
		</body>

	</section>
	<section>
		<title>Visualizzare i file che appartengono ad un ebuild</title>
		<body>
			<p>
				<c>qpkg</c> permette la visualizzazione dei files che appartengono ad un ebuild installato. 
                                Io so che gentoolkit installa diversi tool, ma non li conosco tutti. Per saperlo posso utilizzare
                                <c>qpkg -l</c>
			</p>
			<pre> 
hebron portage # <i>qpkg -l app-admin/gentoolkit
app-admin/gentoolkit-0.1.14-r1 *
CONTENTS:
/usr
/usr/share
/usr/share/gentoolkit
/usr/share/gentoolkit/histogram.awk
/usr/share/doc
/usr/share/doc/gentoolkit-0.1.14-r1
/usr/share/doc/gentoolkit-0.1.14-r1/gentool
/usr/share/doc/gentoolkit-0.1.14-r1/gentool/ChangeLog.gz
/usr/share/doc/gentoolkit-0.1.14-r1/lintool
/usr/share/doc/gentoolkit-0.1.14-r1/lintool/checklist-for-ebuilds.gz
/usr/share/doc/gentoolkit-0.1.14-r1/lintool/ChangeLog.gz
/usr/share/doc/gentoolkit-0.1.14-r1/etc-update
/usr/share/doc/gentoolkit-0.1.14-r1/etc-update/ChangeLog.gz
/usr/share/man
/usr/share/man/man1
/usr/share/man/man1/qpkg.1.gz
/usr/share/man/man1/lintool.1.gz
/usr/share/man/man1/etc-update.1.gz
/usr/bin
/usr/bin/gentool-bump-revision
/usr/bin/gentool-total-coverage
/usr/bin/gentool-author-coverage
/usr/bin/gentool-package-count
/usr/bin/qpkg
/usr/bin/pkg-size
/usr/bin/lintool
/usr/sbin
/usr/sbin/pkg-clean
/usr/sbin/mkebuild
/usr/sbin/emerge-webrsync
/usr/sbin/epm
/usr/sbin/etc-update
/etc
/etc/etc-update.conf </i>
			</pre>
		</body>
	</section>
	<section>
		<title>Trovare il Package dal quale un File proviene</title>
		<body>

			<p>
				Per trovare il package dal quale un file proviene, bisogna utilizzare il flag 
                                <c>-f</c> o <c>--find-file</c>.   
			</p>
			<pre>
				hebron portage # <i>qpkg -f	net-www/mozilla * </i>
			</pre>

		</body>
	</section>
	<section>
		<title>Visualizzare Packages Duplicati</title>
		<body>
			<p>
                                Alcune volte esistono piu versioni di uno stesso package. <c>qpkg --dup</c>
                                stamperà una lista di packages duplicati. L'esistenza di un package duplicato
                                non vuol dire che la versione piu vecchia puo essere rimossa. Possono riempirsi 
                                diversi slots e per vedere i duplicati presenti nello stesso slot, bisogna utilizzare
                                <c>qpkg --dups --slot</c>. I ho aggiornato KDE dalla versione 3.0 alla 3.0.2, e per
                                questo ho dei duplicati nello stesso slot.
			</p>
			<pre> 
hebron portage # <i>qpkg --dups --slot 
app-admin/gentoolkit
kde-base/kdeaddons
kde-base/kdeadmin
kde-base/kdeartwork
kde-base/kdebase
kde-base/kdegames
kde-base/kdelibs
kde-base/kdemultimedia
kde-base/kdenetwork
kde-base/kdetoys
kde-base/kdeutils
media-libs/freetype
x11-libs/qt </i>
			</pre>
		</body>
	</section>
	<section>
		<title>Verficare l'integrità di un package</title>

		<body>
			<p>
                                Avvolte è utile controllare l'integrità di un package per sapere quali files
                                non sono stati modficati da quando il package è stato installato. <c>qpkg</c> può
                                verificare che gli md5 sums dei file siano uguali a quelli memorizzati al tempo
                                dell'installazione in questo modo possiamo sapere quali file sono corrotti, modificati o rimossi.  
			</p>
			<p>Per controllare sia gli md5 sums che l'mtimes (data di ultima modifica), 
                           bisogna utilizzare <c>-c</c> flag.</p>
    			<pre>

hebron portage # <i>qpkg gnupg -c -v    
app-crypt/gnupg-1.0.6 *
/usr/lib/gnupg/rndunix !md5! !mtime!
/usr/lib/gnupg/rndegd !md5! !mtime!
/usr/lib/gnupg/tiger !md5! !mtime!
/usr/bin/gpg !md5! !mtime!
/usr/bin/gpgv !md5! !mtime!
/usr/share/gnupg/options.skel !md5! !mtime!
/usr/share/gnupg/FAQ !md5! !mtime!
/usr/share/gnupg/faq.html !md5! !mtime!
/usr/share/locale/da/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/de/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/eo/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/et/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/fr/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/id/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/it/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/ja/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/nl/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/pl/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/pt_BR/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/sv/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/tr/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/info/gpgv.info.gz !md5! !mtime!
/usr/share/man/man1/gpg.1.gz !md5! !mtime!
/usr/share/man/man1/gpgv.1.gz !md5! !mtime!
24/92

app-crypt/gnupg-1.0.7 *
0/101 </i>
			</pre>
			<p>
				Come puoi vedere, ho molte piu di una versione di GnuPG installate. <c>qpkg</c>
                                ha riportato che molti dei file delle vecchie versioni sono stati modificati dalla quando sono 
                                stati installati. Quei pacchetti sono stati modificati probabilmente quando sono passato 
                                da <path>gnupg-1.0.6</path> a <path>gnupg-1.0.7</path>. Notare che le ultime due linee indicano
                                che 0 di 101 file del package <path>gnupg-1.0.7</path> sono cambiati da quando è stato installato.
                                Questo è buono. Se ognuno di loro fosse stato modificato, mi preoccuperei.
			</p>

		</body>
	</section>
	<section>
		<title>Ma aspetta... c'è dell'altro</title>
		<body>
			<p>
				<c>qpkg</c> puo essere utilizzato per altri tipi di richieste che non andrò a menzionare qui. 
                                            Esiste una manpage molto completa per <c>qpkg</c>. Consultala per maggiori
                                            informazioni.   
			</p>

		</body>
	</section>
</chapter>
<chapter>
	<title>lintool</title>
	<section>
		<title>Introduzione</title>
		<body>
			<p>

				<c>lintool</c> è un programma che controlla gli ebuilds script per conformazioni 
                                               agli standard e richieste. E' molto importante per gli sviluppatori ebuild
                                               utilizzare <c>lintool</c> per assicurarsi che stiano facendo le cose correttamente
                                               in modo da evitare al core team di fare altro lavoro oltre quello 
                                               di inserire l'ebuild nel Gentoo repository.
			</p>
		</body>
	</section>
	<section>
		<title>Utilizzo</title>

		<body>
			<p>
				Eseguendo <c>lintool</c> sarà stampata una lista carina, di check e risultati che lui ha prodotto. 
			</p>
			<pre> 
hebron portage # <i>lintool app-crypt/gnupg/gnupg-1.0.7.ebuild 
app-crypt/gnupg/gnupg-1.0.7.ebuild                                     : Not OK

-------------------------------------------------------------------------------
 Summary for all 1 ebuild(s) checked                             # errors/warns
 -------------------------------------------------------------------------------
 Testing for illegal space characters, weird backslash formatting  : 0 / 0
 Testing for malformed headers                                     : 0 / 1
 Testing for occurence of deprecated try                           : 0 / 0
 Testing for superfluous A=${P}.tar.gz                             : 0 / 0
 Testing for empty DEPEND                                          : 0 / 0
 Testing for empty HOMEPAGE                                        : 0 / 0
 Testing for empty DESCRIPTION                                     : 0 / 0
 Testing for presence of env vars                                  : 1 / 1
 Testing for sane USE flag usage                                   : 0 / 0

 Total number of ebuilds with errors                               : 1 (100%)
 Total number of ebuilds with warnings                             : 1 (100%)
		</i>	</pre>
			<p>
                                La prima linea ricapitola se l'ebuild è ok o no. Nel caso di <c>gnupg-1.0.7.ebuild</c>,
                                è ok. Leggendo nella lista dei controlli, possiamo vedere che ha un header malformato
                                ed un errore per la presenza di variabili env.
			</p>

			<p>
                                Guardando l'ebuild, vedo che gli mancano una coppia di variabili env richieste
                                (LICENSE e RDEPEND). Aggiungendo queste viene fixato l'errore. Ma ci sono ancora due
                                warnings -- uno per l'header malformato ed uno per le variabili env. Per aiutarmi 
                                a trovare quelli, posso eseguire <c>lintool</c> ancora con <c>--show-details</c>
			</p>
			<pre> 
hebron gnupg # <i>lintool --show-details ./gnupg-1.0.7.ebuild 
                                
-------------------------------------------------------------------------------
# Some data cut for brevity....

 Status for ./gnupg-1.0.7.ebuild
* Testing for malformed headers                                         : passed
- (W) Has illegal or suspect headers:
 |Suspect copyright year: # Copyright 1999-2000 Gentoo Technologies, Inc.
 * Testing for occurence of deprecated try                               : passed
 * Testing for superfluous A=${P}.tar.gz                                 : passed
 * Testing for empty DEPEND                                              : passed
 * Testing for empty HOMEPAGE                                            : passed
 * Testing for empty DESCRIPTION                                         : passed
 * Testing for presence of env vars                                      : passed
 - (W) Missing SLOT=
 * Testing for sane USE flag usage                                       : passed

 -------------------------------------------------------------------------------
  Summary for all 1 ebuild(s) checked                             # errors/warns
  -------------------------------------------------------------------------------
  Testing for illegal space characters, weird backslash formatting  : 0 / 0
  Testing for malformed headers                                     : 0 / 1
  Testing for occurence of deprecated try                           : 0 / 0
  Testing for superfluous A=${P}.tar.gz                             : 0 / 0
  Testing for empty DEPEND                                          : 0 / 0
  Testing for empty HOMEPAGE                                        : 0 / 0
  Testing for empty DESCRIPTION                                     : 0 / 0
  Testing for presence of env vars                                  : 0 / 1
  Testing for sane USE flag usage                                   : 0 / 0

  Total number of ebuilds with errors                               : 0 (0%)
  Total number of ebuilds with warnings                             : 1 (100%)
		</i>	</pre>
			<p> Ora posso vedere che l'anno nell'ebuild è probabilmente sbagliato, questo è dovuto alla 
                            mancanza della variabile SLOT. Fixando questo elimino tutti i warnings.</p>
		</body>
	</section>
</chapter>
<chapter>

	<title>epm</title>
	<section>
		<title>Introduzione</title>
		<body>
			<p>
				<c>epm</c> è un tool per la gestione dei packages che clona i comandi rpm di Red Hat. 
                                           Com'è ora non offre tutte le caratteristiche di rpm, ma offre alcune delle 
                                           piu efficenti opzioni di query rpm.
			</p>

			<p>
                                Inoltre ha la possibilità di eliminare i packages, ma questo non è trattato qui. 
                                Utilizzare <c>epm --help</c> per saperne di piu riguardo l'eliminazione dei packages con 
                                <c>epm</c>.
			</p>
		</body>
	</section>
	<section>

		<title>Querying Packages con epm</title>
		<body>
			<p>
				Le funzioni di <c>epm</c> sono essenzialmente le stesse funzioni da linea di comando dell'rpm
                                di Red Hat. <c>epm -qa</c> visualizza tutti i packeges installati. <c>epm -ql</c> visualizza tutti
                                i file di uno specifico ebuild.
			</p>

			<pre> 
hebron etc # <i>epm -ql ethereal
/usr/lib/ethereal/plugins/0.8.20/gryphon.so
/usr/lib/ethereal/plugins/0.8.20/gryphon.la
/usr/lib/ethereal/plugins/0.8.20/gryphon.a
/usr/lib/ethereal/plugins/0.8.20/mgcp.so
/usr/lib/ethereal/plugins/0.8.20/mgcp.la
/usr/lib/ethereal/plugins/0.8.20/mgcp.a
/usr/lib/ethereal/plugins/0.8.20/cosnaming.so
/usr/lib/ethereal/plugins/0.8.20/cosnaming.la
/usr/lib/ethereal/plugins/0.8.20/cosnaming.a
/usr/lib/ethereal/plugins/0.8.20/coseventcomm.so
/usr/lib/ethereal/plugins/0.8.20/coseventcomm.la
/usr/lib/ethereal/plugins/0.8.20/coseventcomm.a
/usr/bin/ethereal
/usr/bin/editcap
/usr/bin/mergecap
/usr/bin/tethereal
/usr/bin/text2pcap
/usr/bin/idl2eth
/usr/share/man/man1/idl2eth.1.gz
/usr/share/man/man1/tethereal.1.gz
/usr/share/man/man1/text2pcap.1.gz
/usr/share/man/man1/editcap.1.gz
/usr/share/man/man1/ethereal.1.gz
/usr/share/man/man1/mergecap.1.gz
/usr/share/doc/ethereal-0.8.20/AUTHORS.gz
/usr/share/doc/ethereal-0.8.20/COPYING.gz
/usr/share/doc/ethereal-0.8.20/NEWS.gz
/usr/share/doc/ethereal-0.8.20/ChangeLog.gz
/usr/share/doc/ethereal-0.8.20/README.gz
/usr/share/doc/ethereal-0.8.20/INSTALL.configure.gz
/usr/share/doc/ethereal-0.8.20/TODO.gz
/usr/share/doc/ethereal-0.8.20/README.aix.gz
/usr/share/doc/ethereal-0.8.20/README.bsd.gz
/usr/share/doc/ethereal-0.8.20/README.hpux.gz
/usr/share/doc/ethereal-0.8.20/README.irix.gz
/usr/share/doc/ethereal-0.8.20/README.linux.gz
/usr/share/doc/ethereal-0.8.20/README.tru64.gz
/usr/share/doc/ethereal-0.8.20/README.win32.gz
/usr/share/doc/ethereal-0.8.20/README.vmware.gz
/etc/ethereal/manuf </i>
			</pre>
			<p>
				<c>epm</c> offre alcune opzioni di query avanzate che non sono presenti in <c>qpkg</c>
                                almeno mentre lo scrivo. Per adesso, puo effettuare query per ottenere file di configurazione 
                                o file di documentazione.   
			</p>
			<pre>

hebron etc # <i>epm -qc ethereal
/etc/ethereal/manuf

hebron etc # epm -qd ethereal
/usr/share/man/man1/idl2eth.1.gz
/usr/share/man/man1/tethereal.1.gz
/usr/share/man/man1/text2pcap.1.gz
/usr/share/man/man1/editcap.1.gz
/usr/share/man/man1/ethereal.1.gz
/usr/share/man/man1/mergecap.1.gz
/usr/share/doc/ethereal-0.8.20/AUTHORS.gz
/usr/share/doc/ethereal-0.8.20/COPYING.gz
/usr/share/doc/ethereal-0.8.20/NEWS.gz
/usr/share/doc/ethereal-0.8.20/ChangeLog.gz
/usr/share/doc/ethereal-0.8.20/README.gz
/usr/share/doc/ethereal-0.8.20/INSTALL.configure.gz
/usr/share/doc/ethereal-0.8.20/TODO.gz
/usr/share/doc/ethereal-0.8.20/README.aix.gz
/usr/share/doc/ethereal-0.8.20/README.bsd.gz
/usr/share/doc/ethereal-0.8.20/README.hpux.gz
/usr/share/doc/ethereal-0.8.20/README.irix.gz
/usr/share/doc/ethereal-0.8.20/README.linux.gz
/usr/share/doc/ethereal-0.8.20/README.tru64.gz
/usr/share/doc/ethereal-0.8.20/README.win32.gz
/usr/share/doc/ethereal-0.8.20/README.vmware.gz
		</i>	</pre>
			<note>
				<c>emp --help</c> visualizza tutte le opzioni che epm supporta. Nota, ad ogni modo, le opzioni
                                 che sono precedute da un asterisco non sono state ancora implementate.
			</note>
		</body>
	</section>
</chapter>

<chapter>
	<title>Altro</title>
	<section>
		<title>etc-update</title>
		<body>
			<!-- 
                        - Sentitevi liberi di aggiungere altro a questo. Probabilmente merita un suo unico
                        - capitolo, ma io non lo uso e per questo non posso realmente scrivere molto a riguardo.   
			-->
			<p>
				<c>etc-update</c> offre una conveniente alternativa all'aggiornamento manuale dei file di
                                configurazione. Dopo avere eseguito un emerge che modifica i file di configurazione, puoi 
                                eseguire etc-update che ti porta attraverso il processo di aggoirnamento di tutti i file di
                                configurazione intaccati.
			</p>

			<p>
                                E' formato da un'interfaccia a menu ed include la possibilità di vedere o di unire in config file
                                prima di decidere cosa fare.
			</p>
		</body>
	</section>
	<section>
		<title>gentool</title>
		<body>
			<p>gentool è un nome per descrivere un insieme di piccoli script che analizzano le statistiche degli
                           ebuilds. Per ora, gentool-total-coverage visualizza una lista di indirizzi email ed il numero di
                           ebuilds presenti nel portage tree.
			</p>

		</body>
	</section>
	<section>
		<title>pkg-size</title>
		<body>
			<p><c>pkg-size</c> visualizza la grandezza dei file installati in un determinato package.
			</p>
			<pre>

hebron portage # <i>pkg-size nmap   
net-analyzer/nmap-2.54_beta24-r1 897024 (876KB) </i>
			</pre>
		</body>
	</section>
	<section>
		<title>mkebuild</title>
		<body>
			<p><c>mkebuild</c> semplifica il processo di creazione di un nuovo ebuild automatizzando
                           il piu possibile il processo stesso. Eseguendo <c>mkebuild [filename]</c> sarà creato
                           un ebuild per quel file. Il file dovrà essere un archivio di alcun tipo. In base al suo
                           funzionamento, fornirà le risposte riguardo le modifiche delle quali si puo avere biosgno.
			</p>

		</body>
	</section>
	<section>
		<title>emerge-webrsync</title>
		<body>
			<!-- Non posso torvare nessun tipo di documentazione su questo, da nessuna parte... nessun commento
                             nel codice. -->

			<p>Preleva l'immagine giornaliera via HTTP con wget, e (opzionalmente) lo sincronizza con portage.
			</p>
		</body>

	</section>
</chapter>
</guide>

