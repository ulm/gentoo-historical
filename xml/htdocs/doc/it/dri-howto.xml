<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/dri-howto.xml,v 1.22 2007/07/23 22:46:20 scen Exp $ -->

<guide link="/doc/it/dri-howto.xml" lang="it">
<title>Guida all'accelerazione hardware 3d</title>

<author title="Autore">
  <mail link="dberkholz@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Redazione">
  <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Redazione">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Traduzione">
  <mail link="ilmalcom@supereva.it">Stefano Calzavara</mail>
</author>
<author title="Traduzione">
  Stefano Pacella
</author>
<author title="Traduzione">
  <mail link="cristiano.chiucchiolo@gmail.com">Cristiano Chiucchiolo</mail>
</author>
<author title="Traduzione">
  <mail link="dark.knight.ita@gmail.com">Marco Leogrande</mail>
</author>


<abstract>
Questa è una guida per far funzionare l'accelerazione 3d sfruttando DRM con Xorg
in Gentoo Linux.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.9</version>
<date>2007-07-22</date>

<chapter>
<title>Introduzione</title>
<section>
<title>Cos'è l'accelerazione hardware 3d e perchè abilitarla?</title>
<body>

<p>
Con l'accelerazione 3d hardware il rendering tridimensionale usa il processore
grafico della propria scheda video invece di sfruttare preziose risorse della
cpu per disegnare immagini 3D. Si parla anche di accelerazione hardware
piuttosto che di accelerazione software perchè, senza questa accelerazione 3d,
la propria CPU è obbligata a disegnare tutto da sola facendo uso delle librerie
di rendering Mesa, ciò implica un considerevole consumo di risorse. Mentre Xorg
di norma supporta l'accelerazione 2d hardware, spesso manca di quella 3d.
L'accelerazione hardware 3d è apprezzabile in situazioni che richiedono il
rendering di oggetti 3d come giochi, CAD 3D o la realizzazione di modelli.
</p>

</body>
</section>
<section>
<title>Come attivare l'accelerazione 3d?</title>
<body>

<p>
In molti casi, i driver esistono sia binari che opensource. I driver opensource
sono preferibili, perchè si sta usando Linux e l'opensource è uno dei suoi
principi chiave. A volte i binari sono però l'unica scelta, come per le schede
Nvidia. I driver precompilati includono <c>x11-drivers/nvidia-drivers</c> per
le Nvidia e <c>x11-drivers/ati-drivers</c> per le ATI. Altri driver opensource
includono <c>media-video/ati-gatos</c> per le schede video ATI, che mirano a
sfruttare più a fondo le potenzialità video della scheda.
</p>

</body>
</section>
<section>
<title>Cos'è il DRI?</title>
<body>

<p>
Il <uri link="http://dri.freedesktop.org/wiki/">Direct Rendering
Infrastructure</uri> (ndT: "Infrastruttura per il Rendering Diretto"),
abbreviato in DRI, è il meccanismo per effettuare l'accesso diretto alla scheda
video in maniera sicura ed efficiente. Esso include cambiamenti al server X, a
parecchie librerie e al kernel. Lo scopo primario di DRI è quello di creare
veloci implementazioni di OpenGL.
</p>

</body>
</section>
<section>
<title>Cos'è DRM e cos'ha a che fare con Xorg?</title>
<body>

<p>
DRM (Direct Rendering Manager, "Gestore del Rendering Diretto" ndT) è un
<e>miglioramento</e> di Xorg che aggiunge l'accelerazione 3d per le schede
aggiungendo il necessario modulo del kernel per il "direct rendering" (ndT:
d'ora in poi "rendering diretto").
</p>

</body>
</section>
<section>
<title>Destinatari</title>
<body>

<p>
Questa guida è per coloro che non riescono ad abilitare il rendering diretto
soltanto con Xorg. DRM funziona con i seguenti driver:
</p>

<ul>
  <li>3dfx</li>
  <li>i8x0</li>
  <li>matrox</li>
  <li>rage128</li>
  <li>radeon</li>
  <li>mach64</li>
  <li>sis300</li>
  <li>via</li>
</ul>

<p>
Si rimanda al <uri link="http://dri.freedesktop.org/">sito web di DRI</uri> per
maggiori informazioni e per la documentazione ufficiale.
</p>

</body>
</section>
<section>
<title>Contatti</title>
<body>

<p>
Per suggerimenti, domande, ecc. mandare un e-mail a <mail
link="dberkholz@gentoo.org">Donnie Berkholz</mail>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installare Xorg e configurare il kernel</title>
<section>
<title>Installare Xorg</title>
<body>

<p>
Leggere la <uri link="/doc/it/xorg-config.xml">Guida alla configurazione di
X.Org</uri> per installare ed eseguire Xorg.
</p>

</body>
</section>
<section>
<title>Configurare il kernel</title>
<body>

<p>
Verificare qual è il proprio chipset ed abilitare il supporto solo per quello.
</p>

<pre caption="Controllare il proprio chipset AGP">
# <i>emerge pciutils; lspci | grep AGP</i>
# <i>00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)</i>
<comment>(Ovviamente il proprio output può essere diverso a causa del diverso hardware.)</comment>
</pre>

<p>
Se il proprio chipset non è supportato dal kernel, provare ad aggiungere
<c>agp=try_unsupported</c> come parametro del kernel. Saranno usate le procedure
generiche di Intel per il supporto AGP. Per aggiungere questo parametro,
modificare il file di configurazione del proprio bootloader!
</p>

<p>
La maggior parte dei kernel, se non tutti, dovrebbero avere queste opzioni.
Nell'esempio si fa uso di un kernel <c>gentoo-sources</c> standard.
</p>

<pre caption="Configurare il kernel">
# <i>ls -l /usr/src/linux </i>
<comment>(Assicurarsi che /usr/src/linux punti al proprio kernel attuale.)</comment>
lrwxrwxrwx 1 root root 22 2007-02-14 20:12 /usr/src/linux -> linux-2.6.18-gentoo-r4
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<pre caption="Opzioni di make menuconfig">
Processor type and features ---&gt;
  &lt;*&gt; MTRR (Memory Type Range Register) support
Device drivers ---&gt;
  Character devices ---&gt;
  <comment>(L'opzione agpgart non è presente sui kernel a 64-bit; in tal caso basta scegliere il supporto per il proprio chipset.)</comment>
  &lt;M&gt; /dev/agpgart (AGP Support)
  <comment>(Selezionare il proprio chipset, non quello dell'esempio.)</comment>
  &lt;M&gt; Intel 440LX/BX/GX, I8xx and E7x05 support
  &lt;M&gt; Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)
</pre>

</body>
</section>
<section>
<title>Compilare ed installare il kernel</title>
<body>

<pre caption="Compilare e installare il kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Non dimenticarsi di aggiornare <path>grub.conf</path> o <path>lilo.conf</path> e
di lanciare <c>/sbin/lilo</c> se si usa LILO.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configurare il rendering diretto</title>
<section id="configure_xorg">
<title>Configurare Xorg.conf</title>
<body>

<p>
Aprire <path>/etc/X11/xorg.conf</path> con il proprio editor preferito e
modificarlo per abilitare DRI e GLX.
</p>

<pre caption="xorg.conf">
...
Section "Module"
     Load "dri"
     Load "glx"
     ...
EndSection
...
Section "Device"
     <comment>(Sostituite radeon con il nome del proprio driver.)</comment>
     Driver "radeon"
     ...
EndSection
...
Section "dri"
     Mode 0666
EndSection
</pre>

</body>
</section>
<section>
<title>Modifiche a modules.autoload.d</title>
<body>

<p>
Bisognerà aggiungere il nome del modulo usato dalla propria scheda nel file
<path>/etc/modules.autoload.d/kernel-2.6</path>, per essere sicuri che il modulo
sia caricato automaticamente all'avvio del sistema.
</p>

<pre caption="Modificare /etc/modules.autoload.d/kernel-2.6">
<comment>(Cambiare il nome del modulo come richiesto.)</comment>
intel-agp
</pre>

<note>
Se <c>agpgart</c> è stato compilato come modulo, aggiungere anch'esso a
<path>/etc/modules.autoload.d/kernel-2.6</path>.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Verificare il funzionamento dell'accelerazione 3d</title>
<section>
<title>Riavviare con il nuovo kernel</title>
<body>

<p>
Riavviare il sistema con il nuovo kernel e fare il login come utente normale. È
giunta ora di vedere se il rendering diretto è attivo e se funziona bene.
<c>glxinfo</c> e <c>glxgears</c> fanno parte del pacchetto <c>mesa-progs</c>,
accertarsi quindi che esso sia installato prima di lanciare questi comandi.
</p>

<pre caption="Testare il rendering">
$ <i>startx</i>
<comment>(Nessun bisogno di caricare moduli per il proprio driver o agpgart, anche se sono stati compilati come moduli.)</comment>
<comment>(Saranno caricati in automatico.)</comment>
$ <i>glxinfo | grep rendering</i>
direct rendering: Yes
<comment>(Se c'è scritto "No", l'accelerazione non è abilitata.)</comment>
$ <i>glxgears</i>
<comment>(Verificare i frame per secondo (FPS). Il numero dovrebbe essere significativamente più alto rispetto
a prima della configurazione di DRM. Eseguire quest'operazione con la cpu il più possibile a riposo.)</comment>
</pre>

<note>
Considerare anche che gli FPS potrebbero essere limitati dalla frequenza di
aggiornamento del proprio schermo, se <c>glxgears</c> visualizza un valore di
70-100 FPS. <c>games-fps/ut2004-demo</c> è un migliore strumento di benchmark,
dato che riesce a dare dei risultati più realistici.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Migliorare le prestazioni</title>
<section>
<title>Ottenere il massimo dal rendering diretto</title>
<body>

<p>
Alcune opzioni potrebbero aumentare le prestazioni del 30 percento (o più)
rispetto alla norma configurandole opportunamente in
<path>/etc/X11/xorg.conf</path>. Prestare solo attenzione a controllare che la
propria scheda madre e la propria scheda video supportino queste opzioni.
</p>

<p>
Prima di tutto, verificare se la propria scheda video può supportare
l'opzione "fast writes" (ndT: scritture rapide). Per fare questo, analizzare
l'output di <c>lspci</c>. In particolare, cercare informazioni su "VGA
compatible controller".
</p>

<pre caption="Controllo della scheda video">
# <i>lspci -vv</i>
01:00.0 VGA compatible controller: ATI Technologies Inc Radeon Mobility M6 LY (prog-if 00 [VGA])
. . .
Capabilities: [58] AGP version 2.0
    Status: RQ=48 Iso- ArqSz=0 Cal=0 SBA+ ITACoh- GART64- HTrans- 64bit- FW+ AGP3- Rate=x1,x2,x4
</pre>

<p>
Nonostante <c>lspci</c> visualizzi un gran numero di informazioni, cercare la
sigla <b>FW</b> nella sottosezione "Status" nella sezione AGP "Capabilities". Se
viene trovato <b>FW+</b> nella riga "Status", allora la scheda supporta le
scritture rapide. Adesso controllare la stessa cosa anche per la scheda madre.
</p>

<impo>
Se non viene trovato <b>FW+</b>, ma invece <b>FW-</b>, non si potranno abilitare
le scritture rapide in <path>xorg.conf</path>, in quanto la propria scheda video
non le supporta.
</impo>

<p>
Adesso controllare la scheda madre. Questa volta, cercare nella sezione "Host
bridge" dell'output di <c>lspci</c>.
</p>

<pre caption="Controllo della scheda madre">
# <i>lspci -vv</i>
00:00.0 Host bridge: Intel Corporation 82830 830 Chipset Host Bridge (rev 02)
. . .
Capabilities: [a0] AGP version 2.0
    Status: RQ=32 Iso- ArqSz=0 Cal=0 SBA+ ITACoh- GART64- HTrans- 64bit- FW+ AGP3- Rate=x1,x2,x4
</pre>

<p>
Nuovamente, esaminare la sottosezione "Status" nella sezione AGP "Capabilities".
Cercare la sigla <b>FW</b>: se c'è <b>FW+</b>, la propria scheda madre supporta
le scritture rapide.
</p>

<impo>
Ricordarsi che entrambe le informazioni della scheda video e della scheda
madre devono indicare <b>FW+</b>. Se anche solo uno dei due dispositivi mostra
la sigla <b>FW-</b> nella riga "Status", allora le scritture rapide non potranno
essere abilitate in <path>xorg.conf</path>.
</impo>

<p>
Assumendo che tutto sia andato bene e che sia la propria scheda madre, sia la
propria scheda video supportino le scritture rapide, abilitare l'apposita
opzione in <path>/etc/X11/xorg.conf</path> per ottenere il massimodelle
prestazioni dal proprio hardware.
</p>

<pre caption="xorg.conf">
Section "Device"
  Option     "AGPMode" "4"
  <comment>(Questo ha aumentato i FPS da 609 a 618.)</comment>
  Option     "AGPFastWrite" "True"
  <comment>(Questo non ha avuto effetti misurabili, ma può aumentare l'instabilità del sistema.)</comment>
  <comment>(Può anche essere necessario attivarlo nel BIOS)</comment>
  Option     "EnablePageFlip" "True"
  <comment>(Questo ha aumentato i FPS da 618 a 702. E' anche un pò rischioso, ma poche persone hanno riportato problemi.)</comment>
  ...
EndSection
</pre>

<warn>
Abilitando <c>AGPFastWrite</c> su un chipset VIA chipset molto probabilmente il
proprio computer si bloccherà. I chipset VIA non funzionano molto bene con le
scritture rapide: usare questa impostazione a proprio rischio e pericolo.
</warn>

<note>
Ricordarsi che per far funzionare correttamente le scritture rapide bisognerà
prima abilitare l'apposita opzione nel BIOS.
</note>

<p>
Se si desiderano altre opzioni, dare un'occhiata a <uri
link="http://dri.freedesktop.org/wiki/FeatureMatrix">matrice delle
caratteristiche</uri> sul sito del DRI o all'<uri
link="http://dri.sourceforge.net/doc/dri_driver_features.phtml">elenco delle
cartatteristiche</uri> su Sourceforge.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Risoluzione dei problemi</title>
<section>
<title>Non funziona il rendering diretto e non so perchè.</title>
<body>

<p>
Provare <c>modprobe radeon</c> prima di avviare X (sostituire <c>radeon</c> con
il nome del proprio driver). Inoltre, provare anche a compilare agpgart nel
kernel anzichè come modulo.
</p>

</body>
</section>
<section>
<title>Quando lancio startx, ricevo questo errore: "[drm] failed to load kernel
module agpgart"</title>
<body>

<p>
Succede perchè agpgart è stato compilato staticamente nel kernel anzichè come
modulo, ignorare questo errore a meno che non si riscontrino problemi.
</p>

</body>
</section>
<section>
<title>Ho una Radeon e voglio l'uscita TV</title>
<body>

<p>
Provare i driver <c>gatos</c>. Installarli con il comando <c>emerge -av
ati-gatos</c>.
</p>

</body>
</section>
<section>
<title>Non funziona. La mia scheda è così nuova e potente e incredibilmente non
è supportata...</title>
<body>

<p>
Provare i driver binari. Per gli <c>ati-drivers</c>, una lista si trova su
<uri>http://ati.amd.com/support/drivers/linux/linux-radeon.html</uri> (per x86)
e su <uri>http://ati.amd.com/support/drivers/linux64/linux64-radeon.html</uri>
(per amd64). Se non funzionano neanche quelli, usare <c>fbdev</c>: sono lenti,
ma funzionano.
</p>

</body>
</section>
<section>
<title>Ho una scheda PCI e non funziona! Aiuto!</title>
<body>

<p>
Modificare <path>/etc/X11/xorg.conf</path>. Nella sezione "Device" attivare
ForcePCIMode.
</p>

<pre caption="Attivare ForcePCIMode">
Option "ForcePCIMode" "True"
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Ringraziamenti</title>
<section>
<body>

<ol>
  <li>
    Christopher Webber per il suggerimento di una domanda sul cambiare o
    ricompilare i kernel
  </li>
  <li>
    Steve, per il suggerimento sulla consistenza nell'uso delle maiuscole per
    dri e DRI in XF86Config
  </li>
</ol>

</body>
</section>
</chapter>

<chapter>
<title>Riferimenti</title>
<section>
<body>

<ol>
  <li><uri>http://forums.gentoo.org/viewtopic.php?t=46681</uri></li>
  <li><uri>http://forums.gentoo.org/viewtopic.php?t=29264</uri></li>
  <li><uri>http://dri.freedesktop.org/</uri></li>
  <li><uri>http://www.retinalburn.net/linux/dri_status.html</uri></li>
</ol>

</body>
</section>
</chapter>
</guide>
