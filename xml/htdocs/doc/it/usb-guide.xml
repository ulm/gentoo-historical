<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/usb-guide.xml,v 1.8 2009/11/30 22:29:51 scen Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/it/usb-guide.xml" lang="it">
<title>USB e Gentoo Linux</title>

<author title="Autore">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>

<author title="Traduzione">
  <mail link="posta@massimo.biz">Massimo Canali</mail>
</author>

<author title="Revisione">
  <mail link="cristiano.chiucchiolo@gmail.com">Cristiano Chiucchiolo</mail>
</author>

<abstract>
Questo documento offre una guida per implementare il supporto USB sotto Gentoo
Linux e per la configurazione delle periferiche USB.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.15</version>
<date>2009-11-29</date>

<chapter>
<title>Introduzione</title>
<section>
<title>Cos'è USB?</title>
<body>

<p>
USB è l'acronimo di Universal Serial Bus e in poche parole è un'interfaccia
standard che permette al computer di comunicare con diverse periferiche. Tra le
periferiche USB più usate troviamo le tastiere, i mouse, le penne USB, le
fotocamere digitali, i masterizzatori esterni per CD &amp; DVD, le stampanti
ecc.
</p>

<p>
Allo stato attuale esistono due versioni del protocollo USB, cioè USB 1.1 e
USB 2.0. Da momento che il protocollo USB ha sempre mantenuto la
compatibilità con le versioni precedenti, lo stesso accade tra USB 1.1 e USB
2.0. I dispositivi più recenti supportano la versione 2.0. USB 2.0 supporta
una velocità massima di trasmissione dati di 480 Mbps o 60 MBps e questa
costituisce la differenza più importante dalla versione precedente. Un altro
vantaggio del protocollo USB è che i dispositivi supportano <e>hot-plug</e>,
che significa che non si deve riavviare la macchina per poter usare tali
dispositivi.
</p>

</body>
</section>

<section>
<title>Il Punto di Vista Tecnico</title>
<body>

<p>
Prima di addentrarci nelle opzioni di configurazione del kernel, vale la pena
di entrare un po' più nei dettagli del protocollo USB. Se hai fretta oppure se
vuoi saltare questa sezione, puoi andare direttamente alla
<uri link="#kernel">Configurazione del Kernel</uri>.
</p>

<p>
Un sistema USB è costituito da un 'host controller', da una serie di hub
(concentratori), da un 'hub principale' (<e>root hub</e>) che gestisce fino a
127 dispositivi USB, hub inclusi. Un 'host controller' non è altro che
l'interfaccia hardware tra il dispositivo USB e il sistema operativo. Tali
interfacce vengono chiamate HCI (Host Controller Interface) e le più usate
sono OHCI (Open HCI), prodotta da Compaq, UHCI (Universal HCI) e EHCI
(Enhanced HCI), entrambe prodotte da Intel. OHCI/UHCI sono lo standard per le
interfacce USB 1.1 mentre EHCI è lo standard per USB 2.0.
</p>

<p>
I produttori offrono ai programmatori un'interfaccia che permette al sistema di
interagire con l'hardware; questa interfaccia prende il nome di HCD, Host
Controller Device. È proprio attraverso l'HCD che i dispositivi USB
interagiscono con il software di sistema. Il seguente schema dovrebbe rendere
il concetto più semplice.
</p>

<pre caption="Architettura USB Generica">
<comment>(Il software è costituito da diversi componenti, tra cui i driver, ma per semplicità non vengono indicati)</comment>

  + --------  Hardware  --------   + ----  Software  ---- +
  |                                |                      |
  | [Dispositivo USB] -+-> {EHCI} -+--->  ( EHCD )        |
  |                    |           |                      |  Utente
  |                    `-> {UHCI} -+--->  ( UHCD )        |
  |                                |                      |
  + --------  Hardware  --------   + ----  Software  ---- +

</pre>

<p>
Un dispositivo USB può utilizzare un driver creato appositamente oppure un
driver già presente sul sistema ma per stabilire se questo sia possibile bisogna
introdurre il concetto di <e>classe</e>. Due dispositivi che appartengono alla
stessa <e>classe</e> possono condividere lo stesso driver. Tra le <e>classi</e>
esistenti troviamo la classe USB HID (Human Interface Devices) alla quale
appartengono le tastiere e i mouse, la classe dei dispositivi di memorizzazione
di massa USB (USB Mass Storage devices) che comprende le penne USB, le
fotocamere digitali, i player audio ecc. e la classe USB CDC (Communication
Devices Class) di cui fanno parte i modem USB e simili.
</p>

</body>
</section>

<section>
<title>Com'è configurata la tua macchina?</title>
<body>

<p>
Scoprire se la tua macchina supporta il protocollo USB 2.0 è molto semplice.
Per farlo useremo il comando <c>lspci</c>.
</p>

<note>
<c>lspci</c> fa parte del pacchetto <c>sys-apps/pciutils</c>. Se non dovesse
essere installato, esegui <c>emerge pciutils</c>. L'esecuzione di <c>lspci</c>
richiede i diritti di root.
</note>

<pre caption="Esempi di output di lspci">
<comment>(Su un sistema con supporto per USB 1.1 verrà rilevato soltanto UHCI)</comment>

# <i>lspci -v | grep USB</i>
0000:00:04.2 USB Controller: Intel Corp. 82371AB/EB/MB PIIX4 USB (rev 01)
(prog-if 00 [UHCI])

<comment>(Su un sistema con supporto per USB 2.0, verranno rilevati EHCI e UHCI)</comment>

00:1d.0 USB Controller: Intel Corp. 82801DB USB (Hub #1) (rev 01) (prog-if 00
[UHCI])
00:1d.1 USB Controller: Intel Corp. 82801DB USB (Hub #2) (rev 01) (prog-if 00
[UHCI])
00:1d.2 USB Controller: Intel Corp. 82801DB USB (Hub #3) (rev 01) (prog-if 00
[UHCI])
00:1d.7 USB Controller: Intel Corp. 82801DB USB EHCI Controller (rev 01)
(prog-if 20 [EHCI])
</pre>

<p>
Così, attraverso <c>lspci</c>, possiamo scoprire se il nostro sistema supporta
il protocollo USB 2.0. Questo ci servirà durante la configurazione del kernel
per attivare le opzioni più opportune.
</p>

</body>
</section>
</chapter>

<chapter id="kernel">
<title>Configurazione del Kernel</title>
<section>
<title>Procurarsi il kernel</title>
<body>

<p>
In primo luogo installa i sorgenti del kernel che hai scelto. Per i nostri scopi
useremo i <c>gentoo-sources</c>. Per maggiori informazioni sui diversi kernel
disponibili in Portage, fai riferimento alla <uri
link="/doc/it/gentoo-kernel.xml">Guida ai Kernel Gentoo Linux</uri>.
</p>

<pre caption="Procurarsi i sorgenti del kernel">
# <i> emerge gentoo-sources</i>
</pre>

<p>
Procediamo ora con la configurazione del kernel.
</p>

<pre caption="Spostarsi nella directory dei sorgenti">
# <i> cd /usr/src/linux</i>
# <i> make menuconfig</i>
</pre>

<note>
Nell'esempio si assume che il link simbolico <path>/usr/src/linux</path> punti
ai sorgenti del kernel che vuoi usare. Controlla che sia vero prima di
procedere.
</note>

</body>
</section>

<section id="newkernelconfig">
<title>Opzioni di configurazione per il kernel</title>
<body>

<p>
Ora vedremo alcune delle opzioni che andranno abilitate durante la
configurazione del kernel supportare le nostre periferiche USB.
</p>

<note>
Gli esempi di seguito illustrati mostreranno le opzioni di base e quelle più
comunemente richieste da una periferica USB, come un dispositivo di
memorizzazione di massa USB (la maggior parte delle fotocamere e delle penne
USB). Se hai un dispositivo che richiede una configurazione particolare, dai
un occhio al manuale d'uso o cerca sul Web per vedere se è supportato
direttamente dal kernel o se richiede particolari driver. Per semplicità, i
nostri esempi mostrano casi in cui il supporto è offerto dal kernel. Se
preferisci un kernel modulare, prendi nota dei vari moduli e modifica di
conseguenza la configurazione.
</note>

<pre caption="make menuconfig: opzioni per il kernel">
Device Drivers  ---&gt;
  SCSI device support  ---&gt;

<comment>(Il supporto SCSI verrà abilitato automaticamente selezionando 'USB Mass Storage'
ma sarà comunque necessario abilitare il supporto per i dischi.)</comment>
---   SCSI support type (disk, tape, CD-ROM)
&lt;*&gt;   SCSI disk support

<comment>(Torna indietro di un livello e accedi al supporto per dispositivi USB)</comment>
USB support  ---&gt;

<comment>(Questo è l'hub principale (root hub) ed è necessario per il supporto USB. Se vuoi compilarlo come modulo,</comment>
<comment> verrà chiamato 'usbcore'.)</comment>
&lt;*&gt; Support for Host-side USB

<comment>(Seleziona almeno un HCD. Nel dubbio, puoi selezionarli tranquillamente tutti.)</comment>
--- USB Host Controller Drivers
&lt;*&gt; EHCI HCD (USB 2.0) support
&lt; &gt; OHCI HCD support
&lt;*&gt; UHCI HCD (most Intel and VIA) support

<comment>(Un po' più in basso troviamo i dispositivi CDC e quelli di memorizzazione di massa.)</comment>
&lt; &gt; USB Modem (CDC ACM) support
&lt;*&gt; USB Printer support
&lt;*&gt; USB Mass Storage support

<comment>(Se hai una scheda di rete USB, come la RTL8150, questo è ciò che ti occorre)</comment>
USB Network Adapters  --->
    &lt;*&gt; USB RTL8150 based ethernet device support (EXPERIMENTAL)

<comment>(Se hai un adattatore seriale-USB, come il Prolific 2303, questo è ciò che ti occorre)</comment>
USB Serial Converter support  --->
    &lt;*&gt; USB Serial Converter support
    &lt;*&gt; USB Prolific 2303 Single Port Serial Driver (NEW)
</pre>

<p>
Se si possiede una tastiera USB, mouse, joystick o qualunque altro dispositivo
di input, bisogna abilitare il supporto a HID. Tornare indietro di un livello a
"Device drivers" e abilitare il supporto a HID come mostrato:
</p>

<pre caption="Abilitare il supporto a HID">
Device Drivers ---&gt;
  [*] HID Devices  ---&gt;
    &lt;*&gt;   USB Human Interface Device (full HID) support
</pre>

<p>
Terminata la configurazione, puoi (ri)compilare il kernel e il supporto USB
dovrebbe essere attivo dopo un reboot. Puoi passare alla sezione <uri
link="#postkern">Verificare il funzionamento del supporto USB</uri> per vedere
se tutto è OK (come dovrebbe).
</p>

</body>
</section>
</chapter>

<chapter id="postkern">
<title>Verificare il funzionamento del supporto USB</title>
<section>
<title>dmesg è tuo amico!</title>
<body>

<p>
È finalmente arrivato il momento di mettere in pista le nostre periferiche USB
:) Iniziamo subito. In questa sezione vedremo come il sistema risponde ad alcuni
dispositivi USB. Cominciamo con una penna USB da 512 MB. Puoi usare anche altri
dispositivi di memorizzazione di massa. Per vedere cosa accade e come risponde
il sistema, useremo principalmente <c>dmesg</c>.
</p>

<note>
L'output di <c>dmesg</c> contiene molte più informazioni di quelle che ci
servono dato che legge il buffer del kernel che contiene anche tutti i messaggi
del boot. Negli esempi che seguono abbiamo mantenuto soltanto le porzioni di
interesse, aggiungendo linee vuote per migliorare la leggibilità. Se necessario
usa <c>dmesg | more</c> oppure <c>dmesg | less</c> per analizzare l'output del
tuo sistema.
</note>

<pre caption="Output di dmesg per la penna USB">
<comment>(Inserisci la penna USB in una porta e quindi...)</comment>
# <i>dmesg | less</i>

<comment>(Il dispositivo viene rilevato come USB 1.1 e viene allocato un
indirizzo. Viene anche rilevato che tipo di HCD sta usando.)</comment>
usb 1-1: new full speed USB device using uhci_hcd and address 2

<comment>(L'emulazione SCSI interviene automaticamente)</comment>
scsi0 : SCSI emulation for USB Mass Storage devices
usb-storage: device found at 2

<comment>(Ora vengono mostrate le informazioni sul dispositivo, incluso il numero del modello)</comment>
usb-storage: waiting for device to settle before scanning
  Vendor: JetFlash  Model: TS512MJF2A        Rev: 1.00
  Type:   Direct-Access                      ANSI SCSI revision: 02
SCSI device sda: 1003600 512-byte hdwr sectors (514 MB)

<comment>(Il rilevamento della protezione da scrittura è a livello EXPERIMENTAL nei kernel più recenti)</comment>
sda: Write Protect is off
sda: Mode Sense: 0b 00 00 08
sda: assuming drive cache: write through
SCSI device sda: 1003600 512-byte hdwr sectors (514 MB)
/dev/scsi/host0/bus0/target0/lun0: p1
Attached scsi removable disk sda at scsi0, channel 0, id 0, lun 0
Attached scsi generic sg0 at scsi0, channel 0, id 0, lun 0,  type 0
usb-storage: device scan complete
<comment>(A questo punto la periferica dovrebbe essere accessibile montandola in /dev/sda1)</comment>

<comment>(Quando il dispositivo viene disconnesso, il sistema se ne accorge)</comment>
usb 1-1: USB disconnect, address 2
</pre>

<p>
Una volta che la periferica è connessa e montata, può essere trattata come un
normale disco fisso. Le operazioni di routine come <c>cp</c>, <c>mv</c>,
<c>rm</c>, ecc. funzionano tranquillamente. Sulla penna USB è possibile creare
un filesystem e formattarlo.
</p>

<pre caption="Accedere alla penna USB">
# <i>mount /dev/sda1 /mnt/usb</i>
# <i>df -h</i>
Filesystem            Size  Used Avail Use% Mounted on
/dev/hda8             9.4G  7.5G  1.9G  80% /
/dev/hda9              11G  8.1G  2.4G  78% /usr
none                  189M     0  189M   0% /dev/shm
/dev/sda1             490M   34M  457M   7% /mnt/usb
</pre>

<note>
È possibile accedere alle fotocamere digitali come si fa con le penne USB. È il
metodo che uso con la mia Nikon Coolpix 5200. Le attuali fotocamere digitali
trasferiscono le immagini in due modi; come dispositivi di memorizzazione USB e
attraverso PTP (Picture Transfer Protocol). La fotocamera è configurata come un
dispositivo di memorizzazione di massa; ne discende che la procedura di accesso
è identica a quella di una penna USB. Tenere presente che questo potrebbe NON
funzionare i tutti i casi e con tutte le fotocamere con supporto USB.
</note>

<p>
Come verrebbe rilevato un mouse USB? Come un dispositivo HID.
</p>

<pre caption="Mouse ottico USB">
# <i>dmesg | grep USB</i>
drivers/usb/input/hid-core.c: v2.0:USB HID core driver
usb 1-1: new low speed USB device using address 2
input: USB HID v1.10 Mouse [Logitech USB-PS/2 Optical Mouse] on
usb-0000:00:07.2-1
</pre>

<p>
Un altro comando utile per rilevare lo stato delle porte USB è <c>lsusb</c>.
Fa parte di <c>sys-apps/usbutils</c> e verrà discusso nella prossima
sezione.
</p>

</body>
</section>
</chapter>

<chapter>
<title>USB dal lato utente</title>
<section>
<title>Strumenti utili</title>
<body>

<p>
Fino a questo punto abbiamo visto il supporto per il protocollo USB dal lato
kernel/sistema. Ora daremo un'occhiata al supporto offerto da Gentoo
all'utente.
</p>

<p>
Uno degli strumenti più utili è <c>lsusb</c>. Genera un elenco di tutte le
periferiche USB connesse al sistema. Installarlo è semplice.
</p>

<pre caption="Installare usbutils">
# <i>emerge usbutils</i>
</pre>

<p>
Una volta installato è sufficiente un <c>lsusb</c> per ottenere le
informazioni di base sui dispositivi USB connessi alla macchina.
</p>

<note>
È molto probabile che tu debba essere root per eseguire <c>lsusb</c>.
</note>

<warn>
<c>lsusb</c> rileva le informazioni dei dispositivi USB da
<path>/proc/bus/usb</path>. Se non è stato abilitato nel kernel c'è il caso che
<c>lsusb</c> non funzioni del tutto. Assicurati di aver abilitato il
<path>/proc</path> filesystem nel kernel e che <c>usbfs</c> sia montato in
<path>/proc/bus/usb</path> (che dovrebbe accadere automaticamente).
</warn>

<pre caption="lsusb in funzione">
# <i>lsusb</i>
<comment>(Questa è una penna USB da 512 MB Transcend)</comment>
Bus 001 Device 003: ID 0c76:0005 JMTek, LLC. USBdisk
<comment>(Questo è il mouse ottico)</comment>
Bus 001 Device 002: ID 046d:c00e Logitech, Inc. Optical Mouse
<comment>(Questo è l'hub principale o root hub)</comment>
Bus 001 Device 001: ID 0000:0000
</pre>

<p>
Se vuoi ottenere più informazioni allora devi eseguire <c>lsusb -v</c>.
Provalo e guarda quante informazioni genera. Un'altra opzione comoda di
<c>lsusb</c> è la possibilità di generare l'alberatura della gerarchia USB
corrente per rendere più semplice l'analisi della mappa dei dispositivi. Il
comando è <c>lsusb -t</c>. Per esempio,
</p>

<pre caption="lsusb mostra la gerarchia USB">
# <i>lsusb -t</i>
Bus#  1
`-Dev#   1 Vendor 0x0000 Product 0x0000
  |-Dev#   2 Vendor 0x046d Product 0xc00e
  `-Dev#   3 Vendor 0x0c76 Product 0x0005
</pre>

<p>
Ora puoi confrontare facilmente l'output di <c>lsusb</c> con quello di <c>lsusb
-t</c>, per facilitare eventuali debug o per comprendere meglio il funzionamento
di USB.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Ringraziamenti...</title>
<section>
<title>Riferimenti</title>
<body>

<p>
Durante la stesura di questa guida sono stato aiutato da diversi documenti
trovati online e alcuni di essi, pur essendo molto tecnici, sono veramente
interessanti. Penso che meritino il giusto credito.
</p>
<ul>
  <li>
    <uri link="http://www.usb.org">The Official USB Website</uri>
  </li>
  <li>
    <uri link="http://www.usb.org/about/faq">The USB FAQ</uri>
  </li>
  <li>
    <uri link="http://h18000.www1.hp.com/productinfo/development/openhci.html">
    Compaq's OHCI Standard</uri>
  </li>
  <li>
    <uri link="http://developer.intel.com/technology/usb/uhci11d.htm">
    Intel's UHCI Standard</uri>
  </li>
  <li>
    <uri link="http://www.intel.com/technology/usb/ehcispec.htm">
    Intel's EHC Standard</uri>
  </li>
</ul>

</body>
</section>
<section>
<title>Altri link interessanti</title>
<body>

<ul>
  <li><uri link="/doc/it/liveusb.xml">Gentoo Linux LiveUSB HOWTO</uri></li>
</ul>

</body>
</section>
</chapter>
</guide>
