<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/it/portage-utils.xml,v 1.1 2006/05/14 20:43:32 so Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/it/portage-utils.xml" lang="it">

<title>Portage-utils</title>

<author title="Autore">
  <mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>
<author title="Revisione">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Revisione">
  <mail link="vanquirius@gentoo.org">Marcelo Góes</mail>
</author>
<author title="Traduzione">
	Davide Cendron
</author>

<abstract>
Questa guida spiega le principali modalità di utilizzo di portage-utils, un
insieme di veloci applicazioni di appoggio per Portage scritte in C.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.1</version>
<date>2006-05-01</date>

<chapter>
<title>Introduzione</title>
<section>
<body>

<p>
<c>portage-utils</c> è una collezione di programmi di utilità molto veloci
scritti in C, concepiti per offrire una più veloce ma più limitata alternativa
alle loro controparti in <c>gentoolkit</c>. È importante tenere presente che
<c>portage-utils</c> non sostituisce <c>gentoolkit</c>. Le sue utilità sono
molto più efficienti delle rispettive in <c>gentoolkit</c>, e sono più
indicate per l'uso in script che hanno la necessità di effettuare delle
chiamate a Portage ripetutamente, di contro <c>portage-utils</c> non offre le
stesse funzionalità. Non considera minimamente le eclasses e non fornisce
strumenti come <c>revdep-rebuild</c> e <c>glsa-check</c>.
</p>

<p>
Si possono trovare ulteriori informazioni riguardo <c>gentoolkit</c> nella
relativa <uri link="/doc/it/gentoolkit.xml">guida</uri>.
</p>

<p>
È possibile vedere l'elenco completo delle applicazioni contenute in
<c>portage-utils</c> digitando <c>man q</c> o <c>q --help</c>. È consigliato
leggere attentamente le pagine man per ognuno dei programmi di utilità, in
quanto questa guida vuole essere solamente un rapido riferimento per le funzioni
più utili e non include tutte le informazioni per ogni applicazione.
</p>

<p>
La prima cosa da fare con <c>portage-utils</c> è installare il pacchetto:
</p>

<pre caption="Installare portage-utils">
# <i>emerge portage-utils</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Utilizzo</title>
<section>
<title>Come trovare il pacchetto a cui appartiene un determinato file</title>
<body>

<p>
<c>qfile</c> trova il pacchetto al quale appartiene un determinato file:
</p>

<pre caption="Trovare il pacchetto a cui appartiene un determinato file">
$ <i>qfile /etc/fonts/fonts.conf</i>
media-libs/fontconfig (/etc/fonts/fonts.conf)
$ <i>qfile /usr/share/keymaps/atari/atari-uk-falcon.map.gz</i>
sys-apps/kbd (/usr/share/keymaps/atari/atari-uk-falcon.map.gz)
</pre>

</body>
</section>
<section>
<title>Verificare l'integrità di un pacchetto</title>
<body>

<p>
Se si vogliono verificare le somme MD5 o le date di modifica dei file installati
da qualche pacchetto, si può usare l'applicazione <c>qcheck</c>:
</p>

<pre caption="Verificare l'integrità di un pacchetto">
$ <i>qcheck portage-utils</i>
Checking app-portage/portage-utils-0.1.13 ...
  * 36 out of 36 files are good
</pre>

<p>
Ovviamente verranno elencati tutti i file modificati dopo l'installazione. Se
l'applicazione riporta i file di configurazione che avete modificato manualmente
dopo l'installazione, non c'è nulla di cui preoccuparsi.
</p>

</body>
</section>
<section>
<title>Elencare i pacchetti che dipendono da un determinato pacchetto</title>
<body>

<p>
Naturalmente c'è anche un applicazione che permette di elencare tutti i
pacchetti che dipendono da un determinato pacchetto. Ciò viene eseguito da
<c>qdepends</c>. Usate il parametro <c>-a</c> per visualizzare tutte le
informazioni relative a DEPEND, RDEPEND e PDEPEND per un pacchetto.
</p>

<pre caption="Elencare i pacchetti che dipendono da un determinato pacchetto">
$ <i>qdepends -a pygtk</i>
 * DEPEND
dev-python/pygtk-2.8.2: &gt;=dev-lang/python-2.3 &gt;=x11-libs/gtk+-2.8.0
&gt;=dev-libs/glib-2.8.0 &gt;=x11-libs/pango-1.10.0 &gt;=dev-libs/atk-1.8.0
&gt;=gnome-base/libglade-2.5.0 &gt;=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl &gt;=x11-libs/gtkglarea-1.99
&gt;=dev-util/pkgconfig-0.9 sys-devel/patch
 * RDEPEND
dev-python/pygtk-2.8.2: &gt;=dev-lang/python-2.3 &gt;=x11-libs/gtk+-2.8.0
&gt;=dev-libs/glib-2.8.0 &gt;=x11-libs/pango-1.10.0 &gt;=dev-libs/atk-1.8.0
&gt;=gnome-base/libglade-2.5.0 &gt;=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl &gt;=x11-libs/gtkglarea-1.99
 * PDEPEND
</pre>

</body>
</section>
<section>
<title>Elencare i files appartenenti ad un ebuild</title>
<body>

<p>
<c>qlist</c> restituisce un elenco di tutti i file che appartengono ad uno
specifico ebuild..
</p>

<pre caption="Elencare i files appartenenti ad un ebuild">
$ <i>qlist vim</i>
/usr/bin/gvim
/usr/bin/gvimdiff
/usr/bin/evim
/usr/bin/eview
/usr/bin/gview
/usr/bin/rgvim
[...]
</pre>

</body>
</section>
<section>
<title>Cercare i pacchetti che utilizzato una determinata flag USE</title>
<body>

<p>
Questa operazione viene eseguita da <c>quse</c>, che deve essere eseguito da
root. Alla prima esecuzione ci starà un pò di tempo per creare/aggiornare la
cache per gli ebuild.
</p>

<pre caption="Cercare i pacchetti con la flag USE 'firefox'">
# <i>quse firefox</i>
app-office/openoffice/openoffice-2.0.2_rc1.ebuild binfilter curl eds firefox gnome gtk java kde ldap mozilla xml2 
dev-haskell/gtk2hs/gtk2hs-0.9.10.ebuild doc glade gnome mozilla firefox 
dev-java/swt/swt-3.1-r1.ebuild accessibility cairo firefox gnome mozilla 
[...]
</pre>

</body>
</section>
<section>
<title>Trovare la dimensione dei pacchetti</title>
<body>

<p>
Questa informazione viene facilmente reperita tramite l'applicazione
<c>qsize</c>:
</p>

<pre caption="Trovare la dimensione di un pacchetto">
$ <i>qsize vim</i>
app-editors/gvim-6.4: 10 files, 7 non-files, 2327.516 KB
app-editors/vim-6.4: 6 files, 2 non-files, 2058.14 KB
app-editors/vim-core-6.4: 1024 files, 68 non-files, 10950.984 KB
[...]
</pre>

</body>
</section>
</chapter>
</guide>
