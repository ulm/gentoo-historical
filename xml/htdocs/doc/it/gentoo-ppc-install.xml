<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet href="../../xsl/guide.xsl" type="text/xsl"?>

<!DOCTYPE guide SYSTEM "../../dtd/guide.dtd">

<guide link="/doc/en/gentoo-ppc-install.xml">
<title>Istruzioni d'Installazione Gentoo Linux/PPC 1.2</title>
<author title="Gentoo PPC Developer"><mail link="gerk@gentoo.org">Mark Guertin</mail></author>
<author title="Gentoo PPC Developer"><mail link="daybird@gentoo.org">David Chamberlain</mail></author>
<author title="Supervisione"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>                              
<author title="Autore">Chris Houser</author>                                                                                 
<author title="Autore"><mail link="jerry@gentoo.org">Jerry Alexandratos</mail></author>                                      
<author title="Revisione"><mail link="g2boojum@gentoo.org">Grant Goodyear</mail></author> 
<author title="Contributi, Mantenimento"><mail link="rajiv@gentoo.org">Rajiv Manglani</mail></author>
<author title="Contributi"><mail link="zhen@gentoo.org">John P. Davis</mail></author>
<author title="Traduttore"><mail link="paolo@pao.lo.it">Paolo Gabrielli</mail></author>
<author title="Traduttore" >
Team Italiano
</author>

<abstract>Queste istruzioni ti guidano attraverso il processo d'installazione di Gentoo
Linux/PPC 1.2.  Il processo d'installazione supporta vai approcci d'installazione, a seconda 
di quanta parte del sistema vuoi costruita personallizzata da zero.</abstract>

<version>1.6.1</version>
<date>3 Febbraio 2002</date>

<chapter>
<title>Riguardo l'Installazione</title>
<section>
<body>

<p>Questo nuovo CD di boot è in grado di partire su tutti i Mac New World.  I Mac OldWorld avranno bisogno di una partizione MacOS funzionante, e dovranno usare il file Gentoo Installer.sit contenuto nella ISO.  
In più, forniamo driver compilati nel kernel per la maggior parte delle periferiche Apple, come anche strumenti che ti permettono di configurare la rete,
stabilire connessioni uscenti <c>ssh</c> e scaricare files.  
</p>

<p>Per installare dal CD di build, avrai bisogno di un processore PowerPC 603 o superiore su un sistema basato su PowerPC PCI o più recente, 
(Al momenti le macchine Nubus non sono supportate) e idealmente almento 128 Megabyte di RAM.  Con meno RAM è possibile, ma il processo di compilazione
è estremamente lento in queste condizioni e potrebbe bloccarsi.) Per iniziare il processo di installazione, per primo prendi uno dei
nostri CD d'immagine ISO da <uri>http://www.ibiblio.org/gentoo/releases/build/</uri>.  
Nel caso di Gentoo 1.4 non troverai solamente immagini generiche PPC e i tar di stage, ma anche versioni ottimizzare per G4.
</p>

<p>Ora, ripassiamo brevemente il processo d'installazione. Creeremo le partizioni,
i nostri filesystems, e estrarremo il file tar o stage1 o stage2 o stage3.
Se stiamo usando l'archivio tar stage1 o stage2, seguiremo i passi appropriati
per portare il nostro sistema allo stage3.  Una volta che i nostri sistemi sono allo stage3, possiamo configurarli
(aggiustare i file di configurazione, installare un bootloader, etc) e riavviarli e
avere un sistema Gentoo pienamente funzionante.  A seconda di quale stage del processo di costruzione
stai partendo, qui c'è cosa è richiesto per l'installazione:
</p>

<p>
<table>
<tr><th>stage</th><th>Requisiti per l'installazione</th></tr>
<tr><ti>1</ti><ti>configurazione partizione/filesystem, emerge rsync, bootstrap, emerge system, emerge ppc-sources, configurazione finale</ti></tr>
<tr><ti>2</ti><ti>configurazione partizione/filesystem, emerge rsync, emerge system, emerge linux sources, configurazione finale</ti></tr>
<tr><ti>3</ti><ti>configurazione partizione/filesystem, emerge rsync (opzionale), configurazione finale</ti></tr>
</table>
</p>

</body>
</section>
</chapter>

<chapter>
<title>Avviamento</title>
<section>
<body>

<p>Una volta che hai scelto il CD che vuoi usare, vai avanti e avvialo o tenendo premuto il tasto 'C' durante il bootup 
o facendo partire l'installer OldWorld e poi lanciando BootX. Sarai accolto
da un po' di scritte e dal prompt <c>boot:</c> in fondo allo schermo.
A questo prompt, batti invio, e Linux inizierà a caricarsi dal CD.</p>

<p>Poi, sarai accolto da una piccola lista di comandi disponibili all'avvio del CD,
compreso il <c>nano</c> (un editor clone del pico) e le istruzioni per configurare
la rete.  Poi, ti sarà richiesto di scegliere la mappa di caratteri che preferisci,
seguita dal rilevamento automatico PCI.  Il processo di autorilevamento del PCI caricherà automaticamente
gli appropriati moduli del kernel per molte periferiche PCI SCSI ed ethernet popolari.
Dopo questo, puoi battere enter per entrare nell'ambiente minimo del CD di boot Linux.
Dovresti avere un prompt di root ("<c>#</c>") sulla console corrente, e puoi anche aprire
nuove console premendo ctrl+alt-f2, ctrl+alt-f3 (sui powerbook/ibook possibile fn+ctrl+alt+f2), etc
e poi battere enter.</p>

</body>
</section>
</chapter>

<chapter>
<title>Caricamento moduli del kernel</title>
<section>
<body>

<p>Siamo quasi pronti ad iniziare l'installazione Gentoo Linux, e per lo più il kernel della ISO Gentoo PPC
include ogni driver di cui avrai bisogno sulla maggior parte dei Mac standard, ma nel caso ci fosse bisogno di
qualche extra abbiamo incluso alcuni moduli. Per vedere una lista di tutti i moduli inclusi guarda dentro a 
<c>/lib/modules/*/kernel/drivers/*</c>.  Per caricare un modulo particolare, digita:</p>

<pre>
# <i>modprobe nomemodulo</i>
	<comment>(sostituisci nomemodulo con il modulo che desideri)</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Configurare ed Installare la rete</title>
<section>
<body>

<p>I nuovi CD di boot ti permettono di configurare una rete funzionante, permettendoti di usare <c>ssh</c>, <c>scp</c> o <c>wget</c>
come necessario prima di iniziare il processo d'installazione.  Anche se non hai bisogno di queste cose ora,
devi andare avanti e configurare la rete subito.  Una volta configurata, Portage sarà in grado di usarla
dopo che sei entrato nell'ambiente chroot (richiesto per installare Gentoo Linux).</p>
</body>
</section>

<section>
<title>DHCP</title>
<body>
<p>
La configurazione di rete è semplice con il DHCP; Se il tuo ISP non usa il DHCP,
salta sotto alla sezione della configurazione statica.
</p>
<pre caption="Configurazione di rete con il DHCP">
# <i>dhcpcd eth0</i>
</pre>
<note>
Alcuni ISP ti richiedono di fornire un hostname.  Per fare ciò,
aggiungi l'opzione <c>-h miohostname</c> alla linea di comando dhcpcd sopra.
</note>
<p>Se ricevi degli avvertimenti da <i>dhcpConfig</i>, niente panico; gli errori
non sono quasi mai degno di nota.  Salta sotto alla sezione Test della rete.</p>
</body>
</section>
<section>
<title>Configurazione statica</title>
<body>
<p>
Abbiamo bisogno di configurare la rete in modo tale da poter scaricare
i sorgenti per costruire il nostro sistema, come anche l'interfaccia localhost. Digita i seguenti comandi, sostituendo
$IFACE con la tua interfaccia di rete (solitamente <c>eth0</c>), $IPNUM
con il tuo indirizzo IP, $BCAST con il tuo indirizzo di broadcast, e $NMASK
con la tua maschera di rete.  Per il comando <c>route</c>, sostituisci
$GTWAY con l'indirizzo IP del tuo gateway.
</p>
<pre>
# <i>/sbin/ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</i>
# <i>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1</i>
</pre>
<p>Ora, è il momento di creare il file <path>/etc/resolv.conf</path>
cos&#236; che la risoluzione dei nomi (trovare i siti Web/FTP attraverso il nome, piuttosto che solo tramite l'indirizzo IP) funzionerà.</p>

<note>Al momento l'unico editor installato di default è <c>nano</c>, un editor visuale
piccolo e molto facile da usare.   Usa <c>nano</c> con l'opzione <c>-w</c>
per togliere l'accapo automatico.
</note>

<p>Qui c'è un esempio da seguire per creare il tuo file /etc/resolv.conf:
</p>
<pre caption="esempio /etc/resolv.conf">
domain miodominio.com
nameserver 10.0.0.1
nameserver 10.0.0.2
</pre>
<p>Sostituisci <c>10.0.0.1</c> e <c>10.0.0.2</c> con gli indirizzi IP dei tuoi server (rispettivamente primario e secondario).</p>
</body>
</section>
<section>
<title>Test della rete</title>
<body>
<p>Ora che la tua rete è stata configurata, il comando <c>/sbin/ifconfig -a</c> dovrebbe mostrarti (speriamo!) 
che la tua scheda di rete sta funzionando
(fai attenzione a <e>UP</e> e <e>RUNNING</e> nell'output).
</p>
<pre caption="/sbin/ifconfig di una scheda di rete funzionante">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
</pre>
<!--
<note>
Se hai un collegamento ppp statico, non puoi !!! fare questo...!!!
</note>
-->
</body>
</section>
<section>
<title>La rete funziona!</title>
<body>
<p>La rete ora dovrebbe essere configurata e si può usare. Dovresti essere in grado di usare i comandi
<c>ssh</c>, <c>scp</c> e <c>wget</c> inclusi per connetterti ad altre macchine sulla tua LAN o su Internet.</p>
</body>
</section>
</chapter>

<chapter>
<title>Configurare le partizioni</title>
<section>
<body>

<p>Ora che il kernel riesce a vedere la scheda di rete e i controller dei dischi, è tempo di
configurare le partizioni del disco per la Gentoo Linux.</p>

<p>Qui c'è una piccola panoramica dell'impostazione standard delle partizioni della Gentoo Linux.
Stiamo per creare almento tre partizioni: una partizione di swap, una partizione di root
(dove conservare il grosso della Gentoo Linux), e una speciale partizione di bootstrap.
La partizione di bootstrap è disegnata per mantenere le informazioni del boot loader YABOOT.
Gli utenti OldWorld non hanno bisogno di questa partizione di bootstrap poichè la loro macchina è
inizialmente caricata dal MacOS, e BootX è usato per inizializzare il kernel e gli script di inizializzazione.
</p>

<p>Veniamo ora ai tipi di filesystem.  Per ora, hai quattro filesystem trai quali scegliere:
XFS, ext2, ext3 (journaling) and ReiserFS.  ext2 è il provato e vero filesystem di Linux
ma non supporta la tecnologia journaling.  ext3 è la nuova versione di ext2 con sia la tecnologia meta-data
journaling che l'ordered data write.  Uno di questi è il tipo raccomandato da usare con la GentooPPC.
ReiserFS e XFS sono entrambi due nuovi filesystem ad alte prestazioni, ma sono ancora sperimentali su PPC
e in generale non sono raccomandate.
</p>

<note>A questo punto, crea le tue partizioni tramite mac-fdisk, <c>mac-fdisk /dev/hdx</c>
(dove x è la lettera del tuo disco fisso, a, b, c - /dev/sdx per i dischi scsi).  Avrai bisogno di creare almeno una partizione
di bootstrap (<c>b</c> nel mac-fdisk) (solo utenti New World), una partizione di swap (di solito 2* ram della tua macchina è buono,
comunque raccomanderei almento una partizione di swap di 512MB se hai intenzione di compilare grandi pacchetti),
e una partizione di root.  <c>?</c> al prompt del mac-fdisk ti restituirà una lista di opzioni.

</note>

<p>Una volta che hai creato le tue partizioni usando <c>mac-fdisk</c>, è tempo di inizializzare
il filesystem che sarà usato per mantenere i nostri dati.  Inizializza lo swap come segue:</p>
<pre>
# <i>mkswap /dev/hda3</i>
</pre>
<p>Puoi usare il comando <c>mke2fs</c> per creare il filesystem ext2:</p>
<pre>
# <i>mke2fs /dev/hda4</i>
</pre>
<p>Se preferisci usare ext3, puoi creare il filesystem ext3 usando <c>mke2fs -j</c>:</p>
<pre>
# <i>mke2fs -j /dev/hda4</i>
</pre>

<warn>Di nuovo, non raccomandiamo nè ReiserFS nè XFS in questo momento.  Mentre ReiserFS e XFS hanno funzionato
bene per molte persone, la compromissione del filesystem è stato un problema troppo comune
con ReiserFS, XFS su PPC e kernel della serie 2.4.x.</warn>

<note>Puoi trovare maggiori informazioni per l'uso di ext3 sotto Linux 2.4 al seguente indirizzo: <uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>.</note>
</body>
</section>
</chapter>

<chapter>
<title>Fare il mount delle partizioni</title>
<section>
<body>
<p>
È il momento di attivare la nostra partizione di swap, che ci servirà in seguito come memoria virtuale aggiuntiva:
</p>
<pre>
# <i>swapon /dev/hda3</i>
</pre>
<p>Poi, creeremo il mountpoint <path>/mnt/gentoo</path>, e faremo il mount del nostro filesystem in questo mountpoint.
</p>
<pre>
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda4 /mnt/gentoo</i>
</pre>
<p>Se stai configurando la Gentoo Linux con <path>/usr</path> e/o <path>/var</path> in partizioni separate, andrebbe fatto il mount di queste
   rispettivamente in <path>/mnt/gentoo/usr</path> e <path>/mnt/gentoo/var</path>.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Fare il mount del CD-ROM</title>
<section>
<body>
<p>Anche se abbiamo fatto il boot dal CD-ROM, il CD-ROM stesso non è collegato al filesystem del nostro ambiente.
Dovremmo fare il mount cos&#236; da poter accedere all'immagine di build compressa contenuta nel CD-ROM.
Per fare il mount del CD-ROM, tipicamente si digita:
</p>
<pre>
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom -o ro -t iso9660</i>
</pre>
<p>Con il mount del CR-ROM, devi essere in grado di vedere i(l) file(s) <c>stage???.tbz2</c> digitando
<c>ls /mnt/cdrom/build</c>.</p>

<note>Se non riesci a fare il mount del tuo cdrom, è possibile scaricare lo stage1/2/3 dal sito ibiblio scrivendo
<c>wget http://www.ibiblio.org/pub/Linux/distributions/gentoo/releases/build/1.2/stage1-ppc-1.2.tbz2</c></note>
</body>
</section>
</chapter>

<chapter>
    <title>Scompatta lo stage che vuoi usare</title>
<section>
<body>

<p>Questo è il momento di scomprimere dentro a <path>/mnt/gentoo</path> il file tar compresso dello stage che hai scelto.  Poi, faremo <c>chroot</c> nella nuova installazione Gentoo Linux.
</p>

<impo>Assicurati di usare l'opzione <c>p</c> con il comando <c>tar</c>.  Dimenticarsi questo farà si che certi file riceveranno i permessi sbagliati.</impo>

<impo>Se stai usando il metodo d'installazione "from scratch, build everything" (N.d.T. "costruisci tutto da zero"), dovrai usare l'immagine <path>stage1-ppc-1.2.tbz2</path>, 
comunque potrai anche scegliere le immagini stage2 e stage3. Queste immagini ti permettono di risparmiare tempo
in cambio della configurabilità (abbiamo già scelto le ottimizzazioni di default del compilatore e le variabili USE per te.)  
L'immagine di stage3 ora include anche una copia del Portage tree, togliendo cos&#236; la necessità di fare un <c>emerge rsync</c> in seguito.
</impo>

<pre>
# <i>cd /mnt/gentoo</i>
# <i>tar -xvjpf /mnt/cdrom/build/stage?-*.tbz2</i>
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

<pre>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
&gt;&gt;&gt; Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
#
</pre>

<p>Dopo che hai eseguito questi comandi, sarai "dentro" il tuo nuovo ambiente Gentoo Linux.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rsync</title>
<section>
<body>
<p>Ora, dovrai eseguire <c>emerge rsync</c> che si connetterà a rsync.gentoo.org e
scaricherà l'ultima versione dei nostri port del Portage tree:</p>

<pre>
# <i>emerge rsync</i>
</pre>
<p>Sarà scaricato il Portage tree; è circa 10Mb.</p>
<impo>L'indirizzo corrente del server rsync è rsync://rsync.gentoo.org/gentoo-portage.
  Se hai problemi ad accedere al server rsync Gentoo, assicurati di usare questo indirizzo
settandolo come variabile SYNC nel tuo /etc/make.conf.
</impo>
<note>Il comando rsync può essere configurato per usare un proxy HTTP se sei dietro
un firewall. Per configurare questa opzione metti <i>RSYNC_PROXY="hostname:port"</i> nel <i>/etc/make.conf</i>
o mettila come variabile d'ambiente.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Dallo stage1 allo stage2</title>
<section>
<body>

<impo>Se hai usato un tar stage2 o stage3, allora abbiamo già fatto il bootstrap
per te.  Non hai nessuna ragione di fare il bootstrap di nuovo, a meno che tu decida di fare
un <c>emerge rsync</c> per assicurarti di avere un sistema Gentoo Linux aggiornatissimo.
La maggior parte delle persone che usano i file tar stage2 o stage3
<i>non</i> vorrà fare di nuovo il bootstrap, dato che impiega fino ad un'ora su macchine molto veloci.</impo>

<p>Ora che hai una copia funzionante del Portage tree, coloro che stanno installando con lo stage1
dovranno fare il bootstrap del loro sistema Gentoo Linux come segue. Per primo modifica
il file <path>/etc/make.conf</path>. In questo file, devi settare la tua variabile
<c>USE</c>, che specifica funzionalità opzionali che vorresti fossero usate nella compilazione dei pacchetti;
generalmente, i valori di default (variabile USE <e>vuota</e> o non settata) vanno bene.
Dovresti anche fare gli appropriati settaggi delle variabili <c>CHOST</c>, <c>CFLAGS</c> e <c>CXXFLAGS</c>
 per il tipo di sistema che stai creando (esempi commentati possono essere trovati più avanti in basso nel file).
 Se necessario, puoi anche settare qui le informazioni se sei dietro un firewall.</p>

<pre>
# <i>nano -w /etc/make.conf</i> <comment>(Aggiusta queste impostazioni)</comment>
</pre>
<note>
Coloro che hanno bisogno di una regolazione fine del processo di costruzione dovrebbero dare uno sguardo al
file <path>/etc/make.globals</path>. Questo file comprende i parametri di default e non dovrebbere essere mai toccato.
Sei i parametri di default non sono sufficenti, allora i nuovi valori dovrebbero essere messi
in <path>/etc/make.conf</path>, visto che le voci in <path>make.conf</path>
<comment>hanno priorità</comment> sulle voci in <path>make.globals</path>.  Se ti interessa
regolare finemente i settaggi di USE, guarda in <path>/etc/make.profile/make.defaults</path>.
Se vuoi disabilitare ogni settaggio di USE che trovi, aggiugi una riga appropriata <c>USE="-foo"</c>
nel /etc/make.conf (per disabilitare il settaggio <c>foo</c> di USE).
</note>
<p>Ora, è il momento di iniziare il processo di "bootstrap".  Questo processo durerà 1-4 ore a seconda
della potenza della tua macchina.  Durante questo tempo, l'immagine estratta sarà preparata per
la compilazione del resto del sistema. Sarà compilata la suite del compilatore GNU, cos꟣ome le librerie C GNU.
Queste sono compilazioni che consumano molto tempo e costituiscono la maggior parte del tempo del processo di bootstrap:
</p>
<pre>
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>
<p>Ora inizierà in processo di "bootstrap".</p>
<note>
Portage usa per default la directory <c>/var/tmp</c> durante la compilazione dei pacchetti e spesso
arriva ad usare diverse centinaia di megabyte come area di memorizzazione temporanea. Se vuoi cambiare
la directory dove Portage memorizza questi file temporanei, setta una nuova variabile PORTAGE_TMPDIR <e>prima</e>
di far partire il processo di bootstrap, nel modo seguente:
</note>
<pre>
# <i>export PORTAGE_TMPDIR="/altradirectory/tmp"</i>
</pre>
<p>
Il comando <c>bootstrap.sh</c> compilerà anche <c>binutils</c>, <c>gcc</c>, <c>gettext</c>,
e <c>glibc</c>, ricompilando <c>binutils</c>, <c>gcc</c>, e <c>gettext</c>
dopo che <c>glibc</c> è stato compilato.  Inutile dirlo, questo processo durerà un po'.
Buon pisolino!  Una volta che il processo è completo, il tuo sistema si troverà nello stato di "stage2".
</p>
</body>
</section>
</chapter>

<chapter>
<title>Dallo stage2 allo stage3</title>
<section>
<body>

<note>
Se non l'hai ancora fatto, modifica <path>/etc/make.conf</path> come preferisci.
</note>

<p>Una volta fatto il bootstrap della build image e ti trovi nello stage2 (ripetiamo, se stai usando il tar
stage3 allora questi passi non sono richiesti)
è ora di compilare o installare il resto della base del sistema come segue:</p>

<pre>
# <i>export CONFIG_PROTECT=""</i>
# <i>emerge --pretend system</i>
	<comment>[lista dei pacchetti che devono essere installati]</comment>
# <i>emerge system</i>
</pre>

<note>La linea <c>export CONFIG_PROTECT=""</c> assicura che ogni nuovo script
installato in <path>/etc</path> sovrascriverà i vecchi script (memorizzati in
<path>sys-apps/baselayout</path>), bypassing il nuovo supporto per la gestione dei file
di configurazione del Portage. Digita <c>emerge --help config</c> per ulteriori dettagli.</note>

<p>Ci vorrà un po' di tempo per finire di compilare l'intero sistema.
La tua ricompensa sarà un sistema ben ottimizzato per il tuo hardware.
Per contro dovrai trovare qualcosa per tenerti occupato per un po'. L'autore consiglia "Star
Wars - Super Bombad Racing" per PS2.  Quando <c>emerge system</c> termina,
avrai un sistema Gentoo Linux nello stage3.</p>

</body>
</section>
</chapter>

<chapter>
<title>Passi finali: timezone</title>
<section>
<body>

<note>
Se ancora non l'hai fatto, modifica il file <path>/etc/make.conf</path> come preferisci.
</note>

<p>A questo punto, hai un sistema stage3 pronto per la configurazione finale.  
Inizieremo questo processo configurando la timezone.  Settango la timezone prima di compilare il kernel ci assicuriamo che
gli utenti ottengano un output corretto dal comando <c>uname -a</c>.</p>
<p>Cerca la tua timezone (o GMT se usi il Greenwich Mean Time) 
nella directory <path>/usr/share/zoneinfo</path>.  Poi, crea un link simbolico scrivendo:
</p><pre>
# <i>ln -sf /usr/share/zoneinfo/path/al/file/di/timezone /etc/localtime</i>
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Kernel, system logger e cron</title>
<section>
<body>
<p>
Ora avrai bisogno di fare l'emerge dei sorgenti ppc del kernel, il che può essere fatto con il comando <c>emerge sys-kernel/ppc-sources</c>.
</p>
<p>Una volta che hai il sorgente del kernel Linux, è ora di compilare il tuo kernel personalizzato:
</p>
<pre>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
# <i>make dep &amp;&amp; make clean vmlinux modules modules_install</i>
# <i>cp vmlinux System.map /boot</i>
</pre>
<note>Devi usare <e>solo</e> i sorgenti <c>sys-kernel/ppc-sources</c> del kernel gentoo su macchine con processore PowerPC.</note>

<warn>Affinchè il tuo kernel funzioni a dovere, ci sono alcune opzioni che dovrai essere sicuro siano
incluse nel kernel e non compilate come modulo.	Sarà necessario abilitare l'opzione <i>"Code
maturity level oprions --> Prompt for development and/or incomplete code/drives"</i>.

Nella sezione "File systems", devi essere sicuro di abilitare <i>"Device File System"</i> (nota che non
hai bisogno di abilitare l'opzione "/dev/pts filesystem support").  Dovrai anche abilitare
l'opzione <i>"Virtual Memory Filesystem"</i>.  Assicurati anche di mettere su <e>disable</e> nella sezione <i>Macintosh
Device Drivers</i> l'opzione <i>Support for ADB raw keycodes</i> e quella <i>Enhanced RTC</i> (in "Character devices") visto che non vanno d'accordo con la piattaforma PPC.
Ma metti su <e>on</e> l'opzione <i>Support for /dev/rtc</i> in "General setup". È sempre una buona idea lasciare abilitato il supporto per l'ext2 anche se non lo usi. Gli utenti con macchine OldWorld vorranno abilitare il supporto per HFS in modo da poter copiare i kernel compilati nelle partizioni MacOS.
</warn>
<impo>
Se hai un masterizzatore cd IDE e/o un DVD, allora devi abilitare l'emulazione SCSI nel kernel.
Abilita "ATA/IDE/MFM/RLL support" ---> "IDE, ATA and ATAPI Block
devices" ---> "SCSI emulation support" (Solitamente li compilo come moduli), poi
sotto "SCSI support" abilita "SCSI support", "SCSI CD-ROM support" e
"SCSI generic support" (anche qui, di solito li compilo come moduli).  Se scegli di usare i moduli, 
allora fai <c>echo -e "ide-scsi\nsg\nsr_mod" >> /etc/modules.autoload</c> per far si che 
vengano caricati automaticamente all'avvio del sistema.  Devi anche aggiungere questa riga al tuo file
/etc/yaboot.conf : <c>append="hdc=ide-scsi"</c>.
</impo>
<impo>Se hai una macchina OldWorld devi fare il mount della tua partizione HFS (MacOS) e copiarci il tuo kernel in modo che BootX lo possa caricare all'avvio. BootX troverà automaticamente i kernel nella cartella <path>Linux Kernels</path> dentro al System Folder (Cartella di Sistema).</impo>
<p>
Il tuo nuovo kernel personalizzato (e i moduli) ora sono installati.  Ora devi scegliere un logger
di sistema che vorresti installare.  Offriamo sysklogd, che è il set tradizionali di demoni 
per il logging di sistema.  Abbiamo anche metalog.  Gli utenti smaliziati sembrano allontanarsi
da sysklogd (non molto performante) e avvicinarsi a metalog.  
Se sei in dubbio, puoi provare metalog, visto che sembra essere abbastanza popolare.
Per fare l'emerge del logger che preferisci, digita <e>una sola</e> delle seguenti due linee:
</p>

<pre>
# <i>emerge app-admin/sysklogd</i>
# <i>rc-update add sysklogd default</i>
<comment>o</comment>
# <i>emerge app-admin/metalog</i>
# <i>rc-update add metalog default</i>
</pre>

<warn>Se hai usato la versione 1.2 dello stage3 non hai bisogno di installare un system logger. Il file stage3-ppc-1.2.tbz2
include sysklogd (benchè le versioni più vecchie e quelle più recenti non lo fanno). Se invece preferisci
usare metalog, devi prima rimuovere sysklogd: dopo che l'installazione è completa,
previeni la partenza all'avvio del sysklogd con il comando <c>rc-update del sysklogd default</c>.
Poi <c>emerge unmerge sysklogd</c> per rimuoverlo. Probabilmente dovrai anche cancellare a mano i file di configurazione
in <path>/etc</path> (cerca <c>cfgpro</c> nella lista dei file mentre fai unmerging). Per installare il metalog, eseguie
<c>emerge metalog</c>, poi <c>rc-update add metalog default</c>.
</warn>
<impo>
Metalog scarica l'output nel disco in blocchi, cos&#236; i messaggi non sono immediatamente registrati nei log di sistema.
Se stai cercando di fare il debug di un demone, questo comportamente che serve per migliorare le prestazioni non è
utile affatto. Quando il tuo sistema Gentoo Linux sta funzionando, puoi mandare al metalog un segnale USR1 per disabilitare
temporaneamente questo buffering dei messaggi (significa che il comando <i>tail -f <path>/var/log/qualcosa/corrente</path>
</i> funzionerà in tempo reale, come vorresti), e un segnale USR2 per riattivare il buffering.
</impo>
<p>Ora, puoi opzionalmente scegliere il pacchetto cron che vuoi usare.  Attualmente, offriamo dcron, fcron e vcron.
Se non sai quale scegliere, puoi prendere vcron.  Questi possono essere installati come segue:</p>
<pre>
# <i>emerge sys-apps/dcron</i>
# <i>crontab /etc/crontab</i>
<comment>o</comment>
# <i>emerge sys-apps/fcron</i>
# <i>crontab /etc/crontab</i>
<comment>o</comment>
# <i>emerge sys-apps/vcron</i>
# <i>crontab /etc/crontab</i>
</pre>
<p>Per ulteriori informazioni su come funziona il cron sotto Gentoo Linux, guarda <uri link="http://lists.gentoo.org/pipermail/gentoo-announce/2002-April/000151.html">questo annuncio</uri>.</p>
</body>
</section>
</chapter>

<chapter>
<title>Installare pacchetti aggiuntivi</title>
<section>
<body>
<p>
Se sei un utente di laptop e vorresti usare i tuoi slot pcmcia nel tuo primo vero riavvio,
ti dovrai assicurare di installare il pacchetto pcmcia-cs.
</p>
<pre>
# <i>emerge sys-apps/pcmcia-cs</i>
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Passi finali: configurazione di sistema</title>
<section>
<title>Passi finali: /etc/fstab</title>
<body>
<p>Il tuo sistema Gentoo Linux è quasi pronto per essere usato.  Tutto quello di cui abbiamo bisogno ora è di
configurare qualche file di sistema importate e installare il bootloader yaboot.
Il primo file che dobbiamo configurare è <path>/etc/fstab</path>.  
Ricordati di specificare il tipo di filesystem appropriato <c>ext2</c> o <c>ext3</c>.</p>
<p>Usa una qualcosa come il file <path>/etc/fstab</path> mostrato sotto, ma assicurati ovviamente di sostituire
"ROOT" e "SWAP" con le periferiche a blocchi che stai usando (come per esempio <c>hda2</c>, etc.).  Nota che gli utenti
NewWorld <e>non</e> devono aggiungere a questo file la propria partizione di bootstrap.</p>
<pre caption="/etc/fstab">
<comment>
# /etc/fstab: informazioni statiche sul filesystem.
#
# noatime al posto di atimes per prestazioni migliori (gli atimes normalmente non sono
# necessari; notail aumenta le prestazioni del ReiserFS (in cambio dell'efficenza di immagazzinamento).
# Puoi senza problemi togliere l'opzione noatime se vuoi, per passare liberamentre tra notail e tail.
# &lt;fs&gt;           &lt;mountpoint&gt;   &lt;type&gt;   &lt;opts&gt;          &lt;dump/pass&gt;
</comment>
/dev/ROOT           /           ext3	 noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro       0 0
proc                /proc       proc	 defaults        0 0
</pre>
</body>
</section>


<section>
<title>Passi finali: settare la password di root</title>
<body>
<p>Prima che ti dimentichi, setta la password di root digitando:</p>
<pre>
# <i>passwd</i>
</pre>
</body>
</section>
<section>
<title>Passi finali: /etc/hostname</title>
<body>
<p>Modifica questo file in modo che questo contenga il tuo fully-qualified domain name su una singola riga, es. <c>miamacchina.miodominio.com</c>.
</p>
</body>
</section>

<section>
<title>Passi finali: /etc/hosts</title>
<body>
<p>Questo file contiene una lista di indirizzi ip e i loro hostname associati.  È usato dal sistema per risovere gli indirizzi IP
degli hostname che potrebbero non essere presenti nei tuoi nameservers.  Qui c'è un modello per questo file:
</p><pre caption="/etc/hosts">
127.0.0.1      localhost
<comment># la riga seguente contiene l'IP per la tua rete locale, e il tuo nome della macchina associato</comment>
192.168.1.1    miamacchina.miodominio.com	miamacchina
</pre>
</body>
</section>

<section>
<title>Configurazione finale della rete</title>
<body>
<p>
Aggiungi i nomi dei moduli che sono necessari per il corretto funzionamento del tuo sistema al file
<path>/etc/modules.autoload</path> (puoi aggiungere nella stessa riga le opzioni di cui hai bisogno).
Quando la Gentoo Linux viene avviata, questi moduli saranno automaticamente caricati.
Di particolare importanza è il modulo della tua scheda di rete, se lo hai compilato come modulo:
</p>
<pre caption="/etc/modules.autoload">
sungem
</pre>
<p>Modifica lo script <path>/etc/conf.d/net</path> per configurare la tua rete per il tuo primo avvio:
</p>
<pre>
# <i>nano -w /etc/conf.d/net</i>
# <i>rc-update add net.eth0 default</i>
</pre>
<p>
Se hai diverse schede di rete devi creare ulteriori <path>net.eth<comment>x</comment></path>
script per ognuna di esse (<comment>x</comment> = 1, 2, ...):
</p>
<pre caption="Ulteriori schede di rete">
# <i>cd /etc/init.d</i>
# <i>cp net.eth0 net.eth<comment>x</comment></i>
# <i>rc-update add net.eth<comment>x</comment> default</i>
</pre>
<p>
Se hai installata una scheda PCMCIA, dai uno sguardo dentro a 
/etc/init.d/pcmcia per verificare che tutte le cose siano giuste per la tua configurazione,
poi aggiungi 
<pre>
depend() {
	need pcmcia
}
</pre>
in cima al tuo file <path>/etc/init.d/net.eth<comment>x</comment></path>, 
per far caricare i driver pcmcia quando viene caricata la rete.
</p>
</body>
</section>


<section>
<title>Passi finali: configurare i settaggi di base (incluso il settaggio della mappa dei tasti internazionale)</title>
<body>
<pre caption="configurazione di base">
# <i>nano -w /etc/rc.conf</i>
</pre>
<p>
Segui le indicazioni nel file per configurare i settaggi di base.
Tutti gli utenti dovranno assicurarsi che <c>CLOCK</c> sia quello voluto.
Gli utenti con tastiere internazionali dovranno settare la variabile <c>KEYMAP</c>
(cerca dentro a <path>/usr/share/keymaps</path> per vedere le varie possibilità).
</p>
</body>
</section>
</chapter>

<chapter>
<title>Configurare il Boot Loader</title>
<section>
<body>
<p>Le principali differenze che troverai qui con la piattaforma x86 Linux riguardano il bootloader.
Le macchine NewWorld useranno yaboot. Quelle OldWorld useranno invece BootX.</p>
</body>
</section>

<section>
<title>yaboot per le macchine NewWorld (setup automatico tramite yabootconfig)</title>
<body>
<p>Puoi usare il nuovo e migliorato yabootconfig, incluso con yaboot-1.3.8-r1 e successivi, per configurare automaticamente yaboot.
yabootconfig troverà automaticamente le partizioni sulla tua macchina e configurerà un dual o un triplo boot con Linux, Mac OS e Mac OS X.</p>

<p>Per usare yabootconfig, il tuo drive deve avere una partizione di bootstrap, e il file <path>/etc/fstab</path> deve essere configurato
con le tue partizioni Linux. Entrambe queste cose devono essere già fatte nei passi precedenti. 
Per iniziare, assicurati di avere installata l'ultima versione dello yaboot facendo <c>emerge -u yaboot</c>.
Questo è necessario in quanto l'ultima versione sarà disponibile tramite Portage, ma non ancora aggiunta nei file di stage.</p>

<p>Al prompt dei comandi esegui <c>yabootconfig</c>. Il programma partirà e confermerà la posizione della partizione
di bootstrap. Digita <c>Y</c> se questa è corretta. Se non lo è, ricontrolla <path>/etc/fstab</path>. 
yabootconfig quindi farà una scansione della configurazione del sistema, creerà il file <path>/etc/yaboot.conf</path>
e farà partire <c>mkofboot</c> per te. (mkofboot è usato per formattare la partizione di bootstrap, e installarci
il file di configurazione).</p>

<p>Magari vuoi verificare il contenuto di <path>/etc/yaboot.conf</path>. Se apporti dei cambiamenti a <path>/etc/yaboot.conf</path>
(come per esempio il sistema operativo che partirà di default), assicurati di rieseguire <c>ybin -v</c> 
per applicare i cambiamenti alla partizione di bootstrap.</p>
</body>
</section>

<section>
<title>yaboot per le macchine NewWorld (setup manuale di yaboot.conf)</title>
<body>

<p>Se per qualche ragione non vuoi usare yabootconfig per configurare automaticamente <path>/etc/yaboot.conf</path>,
puoi semplicemente modificare il file di esempio già installato sul tuo sistema. Sotto c'è il file
yaboot.conf completo:</p>

<pre caption="/etc/yaboot.conf">
## /etc/yaboot.conf
##
## esegui: "man yaboot.conf" per i dettagli. Non applicare cambiamenti finchè non lo hai fatto!!
## guarda anche: /usr/share/doc/yaboot/examples per gli esempi di configurazione.
##
## Per un menù dual-boot, aggiungi una o più delle seguenti:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## la nostra partizione di bootstrap:
boot=/dev/hda9

##hd: è il nome che usa open firmware per hda
device=hd:
partition=11

root=/dev/hda11
delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

#################
## Questa sezione può essere duplicata se hai più di un kernel o un insieme di
## opzioni di boot
#################
image=/boot/vmlinux
	label=Linux
	sysmap=/boot/System.map
	read-only
##################

macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>Una volta modificato <path>yaboot.conf</path> come vuoi, esegui
<c>mkofboot -v</c> per installare le impostazioni nella partizione di bootstrap.  Non ti dimenticare!
Se tutto va bene, e hai le stesse opzioni dell'esempio sopra, il tuo prossimo riavvio
ti presenterà un semplice menù di cinque opzioni di boot.  Se in seguito modificherai la configurazione di yaboot,
dovrai solamente eseguire <c>ybin -v</c> per aggiornare la partizione di bootstrap - mkofboot è 
solo per il setup iniziale.
</p>

<note>
Yaboot ha alcune funzionalità per configurare i settaggi durante il boot, dai uno sguardo a
<uri>http://penguinppc.org/projects/yaboot</uri> per ulteriori informazioni.
</note>
</body>
</section>

<section>
<title>BootX per le macchine OldWorld</title>
<body>
<impo>Segui questi passi dopo che riavvii la tua macchina nel prossimo passo.</impo>
<p>Avvia il MacOS e apri il pannello di controllo di BootX. Vai su <c>Options</c> (<c>Opzioni</c>),
e deseleziona <c>Used specified RAM disk</c>. Quando ritorni alla schermata principale del BootX main screen,
ora troverai un'opzione per specificare il disco di root e la partizione. Riempi questi campi con i valori appropriati.</p>
<p>BootX può essere configurato per far partire Linux all'avvio. Se fai ciò, prima vedrai che la tua macchina
avvierà il MacOS poi, durante il caricamento, BootX caricherà e farà partire Linux. 
Guarda la <uri link="http://penguinppc.org/projects/bootx/">home page del BootX</uri> per ulteriori informazioni.</p>
</body>
</section>

</chapter>

<chapter>
<title>Installazione completa!</title>
<section>
<body>
<p>Ora, Gentoo Linux è installata.  L'ultimo passo rimanente è di uscire dall'ambiente di chroot, fare l'unmount delle tue partizioni
e riavviare il sistema:</p>
<pre>
# <i>exit</i>  <codenote>Questo esce da chroot; puoi anche fare <c>^D</c></codenote>
# <i>cd / </i>
# <i>umount /mnt/gentoo/proc</i>
# <i>umount /mnt/gentoo</i>
# <i>reboot</i>
</pre>
<note>
Dopo aver riavviato, è una buona idea eseguire il comando <c>update-modules</c> per creare il file
<path>/etc/modules.conf</path>.  Invece di modificare direttamente questo file, generalmente dovresti
apportare i cambiamenti ai file dentro a <path>/etc/modules.d</path>.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Extras</title>
<section>
<title>Emulazione di più bottoni del mouse</title>
<body>
<p>Per abilitire l'emulazione di più bottoni del mouse ad ogni avvio devi aggiungere queste righe al file <path>/etc/sysctl.conf</path>. I valori dei tasti possono essere ricavati con il programma a riga di comando <c>showkey</c>. Qui c'è un esempio con l'uso di F11 e F12.
<pre>
# Abilita l'emulazione del bottone del mouse
dev.mac_hid.mouse_button_emulation = 1
# Assegna al secondo bottone il valore 87 - F11
dev.mac_hid.mouse_button2_keycode = 87
# Assegna al terzo bottone il valore 88 - F12
dev.mac_hid.mouse_button3_keycode = 88
</pre>
</p>
</body>
</section>

<section>
<title>Gentoo-Stats</title>
<body>
<p>Il programma di statistiche di uso Gentoo Linux iniziò come un tentativo di dare agli sviluppatori un modo per
conoscere la base dei loro utilizzatori. Questo programma raccoglie informazioni sull'utilizzo della Gentoo Linux per aiutarci
ad assegnare le priorità di sviluppo. L'installazione di questo programma è completamente opzionale, e ti saremo
molto grati se deciderai di usarlo. Statistiche compilate possono essere viste presso <uri>http://stats.gentoo.org/</uri>.</p>

<p>Il server gentoo-stats ti assegnerà un ID unico per il tuo sistema. Questo ID è usato per assicurarsi che ogni
sistema è contato una volta soltanto. L'ID non sarà mai usato per identificare individualmente il tuo sistema,
e non sarà associato con un indirizzo IP o altre informazioni personali. È stata presa ogni precauzione
per assicurare la riservatezza nello sviluppo di questo sistema. Le seguenti sono le cose che monitorizziamo attualmente
attraverso il nostro programma "gentoo-stats":</p>
<ul>
<li>pacchetti installati e loro numero di versione</li>
<li>informazioni sulla CPU: velocità (MHz), fabbricante, modello, flag della CPU (come "altivec")</li>
<li>informazioni sulla memoria (RAM fisica totale disponibile, spazio di swap totale disponibile)</li>
<li>schede PCI e chip delle schede di rete</li>
<li>il profile Gentoo Linux che la tua macchina sta usando (che è dove sta puntando il link /etc/make.profile).</li>
</ul>

<p>Siamo coscienti che la divulgazione di informazioni importanti è un danno per gli utenti Gentoo Linux (come lo è per gli sviluppatori).</p>

<ul>
<li>A meno che tu non modifiche il programma gentoo-stats, esso non trasmetterà mai informazioni importanti come
le tue passwords, i dati delle configurazioni, i film preferiti...</li>
<li>La trasmissione del tuo indirizzo e-mail è opzionale a disabilitato di default.</li>
<li>L'indirizzo IP dal quale proviene la tua trasmissione di dati non sarà mai registrato in modo tale da poterti
identificare. Non ci sono corrispondenze "indirizzo IP/ID del sistema".</li>
</ul>

<p>L'installazione è semplice - segui semplicemente i seguenti comandi:</p>

<pre caption="Installare gentoo-stats">
# <c>emerge gentoo-stats</c>   <codenote>Installa gentoo-stats</codenote>
# <c>gentoo-stats --new</c>    <codenote>Ottiene un nuovo ID per il sistema</codenote>
</pre>

<p>Il secondo comando sopra richiederà un nuovo ID per il sistema e lo metterà automaticamente dentro a 
<path>/etc/gentoo-stats/gentoo-stats.conf</path>. Puoi dare uno sguardo a questo file per vedere ulteriori opzioni di configurazione.</p>

<p>Dopo di questo, il programma dovrebbe essere eseguito regolarmente (gentoo-stats non deve essere eseguito dall'utente root). Aggiungi questa riga al tuo <path>crontab</path>:</p>

<pre caption="Aggiorniamo le gentoo-stats con il cron">
<c>0 0 * * 0,4 /usr/sbin/gentoo-stats --update > /dev/null</c>
</pre>

<p>Il programma <c>gentoo-stats</c> è un semplice script perl che può essere visto con il tuo editor preferito:
<path>/usr/sbin/gentoo-stats</path>.</p>

</body>

</section>

<section>
<title>Dove andare da qui</title>
<body>
<p>Per qualunque domanda o se vuoi entrare a far parte dello sviluppo di Gentoo Linux, 
unisciti a noi nelle nostre mailing list gentooppc-user e gentooppc-dev
(c'è un collegamento "click to subscribe" (clicca per sottoscrivere) sulla nostra <uri link="http://www.gentoo.org/">pagina principale</uri>).
Abbiamo anche una <uri link="/doc/en/desktop.xml">Guida di configurazione del Desktop</uri> che ti aiuterà a continuare
a configurare il tuo nuovo sistema Gentoo Linux, e un utile <uri link="/doc/en/portage-user.xml">Portage user guide</uri>
per aiutarti a familiarizzare con le basi del Portage.  Divertiti e benvenuto in Gentoo Linux!</p>

<p>La <uri link="/doc/it/gentoo-ppc-faq.xml">Gentoo Linux/PowerPC FAQ</uri> risponde alla domande frequenti sull'utilizzare
la Gentoo Linux/PPC. Ti potrà anche aiutare ad iniziare la generale <uri link="/doc/it/faq-it.xml">Gentoo Linux FAQ</uri> ,
 anche se è orientata verso le installazioni x86.
 <uri link="http://forums.gentoo.org/viewforum.php?f=24">Gentoo on PPC</uri> (su forums.gentoo.org) è un forum aperto
 per le discussioni su tutte le questioni riguardo PowerPC. 
 C'è anche un canale IRC con discussioni in tempo reale. Unisciti a noi in <i>#gentoo-ppc</i> su <i>irc.freenode.net</i>.</p>

<p>Grazie e divertiti con Gentoo!</p>

</body>
</section>

</chapter>

</guide>
