<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/it/gentoo-ppc-install.xml">
<title>Istruzioni Installazione Gentoo Linux/PPC 1.4</title>

<author title="Responsabile PPC">
   <mail link="pvdabeel@gentoo.org">Pieter Van den Abeele</mail>
</author>
<author title="Contributi">
   <mail link="rajiv@gentoo.org">Rajiv Manglani</mail>
</author>
<author title="Contributi">
   <mail link="pylon@gentoo.org">Lars Weiler</mail>
</author>
<author title="Contributi">
   <!-- zhen@gentoo.org -->John P. Davis
</author>
<author title="Autore">
   <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Revisione">
   <mail link="peitolm@gentoo.org">Colin Morey</mail>
</author>
<author title="Traduzione">
   <mail link="paolo@pao.lo.it">Paolo Gabrielli</mail>
</author>

<abstract>
Queste istruzioni vi guideranno attraverso il processo di installazione della
Gentoo Linux/PPC 1.4. Il processo supporta vari approcci d'installazione, a partire da
uno di 20 minuti fino a quello di compilazione completa.
</abstract>

<license/>

<version>1.6.6</version>
<date>7 Febbraio 2004</date>

<chapter>
<title>Ottenere i CD</title>
<section>
<body>

<p>
I CD Gentoo/PPC 1.4 possono essere trovati nella directory <path>releases</path> su 
uno qualsiasi dei Mirror Gentoo o possono essere comprati presso il <uri 
link="http://store.gentoo.org">Gentoo store</uri>. 
Se preferite scaricarli, per favore guardate alla lista dei mirror Gentoo 
(<uri>http://www.gentoo.org/main/en/mirrors.xml</uri>) e scegliete
il mirror più vicino a dove vivete. Per gli impazienti,
cliccate <uri link="http://gentoo.oregonstate.edu/releases/ppc/">qui</uri>
</p>

<p>
Sono disponibili diversi tipi di CD, dei quali parleremo qui sotto.
</p>

</body>
</section>
<section>
<title>Tipi di CD: set 2 dischi GRP</title>
<body>

<p>
Un set di 2 cd è disponibile per generici sistemi equipaggiati con PPC, G3 e G4. (Un set di 2 
cd per G5 è in arrivo.) Il primo CD del set contiene: 
</p>

<ul>
<li>
tutti i distfile necessari per compilare da zero, fare l'emerge del kernel, di xfree, 
del bootloader...
</li>
<li>
uno snapshot del portage
</li>
<li>
un generico stage1 per PPC
</li>
<li>
uno stage2 e uno stage3 ottimizzati per il processore
</li>
</ul>

<p>
Uno stage è un file compresso tar per unix che contiene un sistema Linux minimale che
necessita di essere scompattato su una partizione vuota del disco fisso sulla quale vorrete
installare Gentoo. Gli stage sono anche di differente grandezza: uno stage1 contiene un
sistema veramente minimale (solamente la struttura delle directory e un compilatore non ancora
autoricompilatosi),
il file tar di uno stage2 è un poco più grande (il compilatore è già stato ricompilato, il che
vi salva del tempo durante l'installazione) e lo stage3 contiene un sistema Linux base
(compilatore già ricompilato e utility di base). In seguito in questo documento dovrete
scegliere uno di questi stage. Gli stage sono disponibili separatamente in tutti i mirror
Gentoo, ma il CD 1 GRP contiene già uno stage1 generico per PPC e stage2 e stage3 ottimizzati
per il processore.
</p>

<p>
Lo snapshot del portage è un file compresso tar che contiene una struttura a directory
con dentro le istruzioni di installazione degli eseguibili (gli ebuild). Gli ebuild dello
snapshot del portage sono usati dal comando emerge per installare e disinstallare
le applicazioni. L'albero del portage può essere tenuto aggiornato usando internet. Uno
snapshot è fornito per permettere un'installazione senza avere il collegamento di rete.
</p>

<p>
La directory <path>distfiles</path> sul cd contiene i file tar compressi usati per compilare
il cuore del sistema e le utility essenziali. Normalmente i sorgenti in formato tar
vengono scaricati usando una connessione di rete. Per permettere un'installazione senza
collegamento di rete, questi distfile sono stati dovuti essere aggiunti sul cd. Notate che
i distfile contengono solamente codice sorgente. I pacchetti precompilati (pacchetti GRP)
sono stati messi sul CD 2. Il CD 2 non è avviabile.
</p> 

<p>
Se volete fare una veloce (20 minuti) installazione senza collegamento di rete, GRP è la vostra
prima scelta.
</p>

</body>
</section>

<section>
<title>Tipi di CD: nostages</title>
<body>

<p>
E' come il GRP CD 1, ma non contiene stage, nè distfile o uno snapshot del portage.
Solo 70M in grandezza. Gli stage possono essere scaricati dai mirror Gentoo
dopo aver avviato dal livecd. Notate che è necessaria una connessione di rete 
se scegliete questo cd.
</p>

</body>
</section>

<section>
<title>Tipi di CD: smallestcd</title>
<body>

<p>
Questo CD è ancora in giro per ragioni storiche. Occupa solamente 15M
(non ha supporto airport o ppc).
</p>

</body>
</section>

<section>
<title>Tipi di CD: kde/gnome livecd</title>
<body>
<p>
Questo cd contiene un ambiente completo Gentoo con gli ambienti desktop KDE
e Gnome, un server apache, diversi browser web, client irc, materiale per
firewall/router, per fare network auditing, tante utility a riga di comando...
Può essere usato per sistemare un filesystem rovinato di OS X. Il kde/gnome
livecd contiene un'intera catena di sviluppo con gcc (distcc, abilitazione ccache);
avviate tutti i mac sulla vostra rete usando questo cd e farete l'esperienza della
potenza della compilazione distribuita.
Anche altri livecd non ppc di Gentoo hanno distcc abilitato e presto sarà
disponibile la compilazione incrociata distribuita (usate i vostri x86, sparc, 
ecc per compilare per ppc o altri). Questo cd può essere usato per installare Gentoo,
ma non contiene GRP, i distfile, e nemmeno uno snapshot del portage o gli stage.
E' necessaria una connessione di rete per fare l'installazione.
</p>

</body>
</section>

<section>
<body>

<p>
Tutti i CD d'avviamento Gentoo Linux/PPC 1.4 si avvieranno su qualsiasi NewWorld Mac.
Ogni CD d'avviamento 1.4 può facilmente essere fatto avviare su un mac OldWorld
scaricando BootX e facendolo partire (da una partizione hfs) con i corretti parametri.
(Scegliete <path>/boot/initrd.img.gz</path> quale initrd, <path>/boot/vmlinux</path> quale 
kernel, impostate initrd-size a 11000, impostate root a <path>/dev/ram</path> e impostate 
init a <path>/linuxrc</path>).
Diverse persone hanno installato Gentoo/PPC su macchine OldWorld (anche qualche
<uri>http://www.apple.com/support</uri> macchina ANS 
ora va con Gentoo/PPC). Siate liberi di condividere le vostre esperienza con gli sviluppatori
PPC visitando la stanza #gentoo-ppc su irc.freenode.net. Entrambi irssi e bitchx sono
disponibili sui cd di installazione.
</p>

<p>
Per installare dai CD di build, avrete bisogno di avere un PowerPC 603 o
superiore su un sistema basato su PowerPC PCI o più recente. Usare meno di
128mb di ram è possibile ma il processo di compilazione potrebbe essere molto
lento in queste condizioni e potrebbe bloccarsi. Mentre scriviamo le macchine Nubus
non sono ufficialmente supportate, ma si deve notare che sviluppatori sono riusciti
ad installare Gentoo su queste macchine (usando la compilazione incrociata e distcc).
</p>

<p>
Ora, diamo uno sguardo veloce al processo di installazione. Creeremo le partizioni,
il nostro filesystem, e scompatteremo o uno stage1 o uno stage2 o uno stage3.
Se stiamo usando uno stage1 o uno stage2, faremo gli appopriati passi per portare i nostri
sistemi allo stage3. Una volta che i nostri sistemi sono allo stage3, possiamo configurarli
(sistemare i file di configurazione, installare un bootloader, ecc) e avviarli e avere
un systema Gentoo Linux completamente funzionante. A seconda da quale stage del
processo di installazione voi state partendo, ecco cosa è necessario per l'installazione:
</p>

<p>
<table>
<tr><th>stage</th><th>richieste per l'installazione</th></tr>
<tr><ti>1</ti><ti>setup partizioni e file system, bootstrap, emerge del sistema, emerge del kernel, configurazione finale</ti></tr>
<tr><ti>2</ti><ti>setup partizioni e file system, emerge del sistema, emerge del kernel, configurazione finale</ti></tr>
<tr><ti>3</ti><ti>setup partizioni e file system, configurazione finale</ti></tr>
</table>
</p>

</body>
</section>
</chapter>

<chapter>
<title>Avvio</title>
<section>
<body>

<p>
Una volta che voi avete scelto il CD che volete usare, andate aventi e avvitelo
o tenendo premuto il tasto 'C' o usando un bootloader per le macchine OldWorld (BootX, quik).
Sarete salutati da un amichevole messaggio e un prompt <c>boot:</c> in fondo
allo schermo. A questo prompt, premete enter, e verrà caricato dal CD un completo
ambiente Gentoo Linux. (Se avete problemi ad avviare, scegliete l'opzione -safe
all'avvio. L'opzione safe passa al kernel i seguenti argomenti extra:
append="video=ofonly nol3 init=/linuxrc").
</p>

<p>
Usate root come nomeutente e lasciate la password in bianco per fare il login
sul live cd (un sistema gentoo/PPC "live"). Non è necessario fare il login
sullo smallestcd.
</p>

<p>
Se state installando su un sistem con una tastiera non US, usate il comando
loadkeys per impostare la vostra tastiera. Le mappe dei tasti possono essere
trovate dentro a <path>/usr/share/keymaps</path>. Lo smallestcd usa un menu (di configurazione
del sistema) per impostare la mappa dei tasti durante l'avvio.
</p>

<p>
Sono disponibili molti moduli del kernel e vengono caricati automaticamente se necessario.
I livecd (non lo smallestcd) contengono anche programmi multimediali (ALSA,
mplayer, ecc.) e possono essere usati per ascoltare la musica durante l'installazione.
(Fate attenzione perchè usare molta banda molto probabilmente rallenterà la connessione.)
</p>
 
<p>
Sono disponibili molti programm sul livecd (come client irc, browser per il web,
ssh, telnet, samba, talk ...) e possono essere usati contemporaneamente
durante l'installazione usando la console Linux. Dovreste avere un prompt di root
sulla console corrente, ma potete sempre aprire nuove console usando i tasti 
ctrl+alt+f2, ctrl+alt+f3 (sui powerbook/ibook possibile ctrl+alt+fn+f2), per
attivare altre console.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Caricare i moduli del kernel</title>
<section>
<body>

<p>
Siamo quasi pronti per iniziare ad installare Gentoo Linux, e per la maggior parte
il kernel Gentoo PPC della ISO include ogni driver di cui voi avrete bisogno per la
maggior parte dei Mac (Airport, ethernet 10/100/1000mbit), ma se voi doveste avere 
bisogno di qualsiasi extra noi abbiamo anche incluso una grande quantità di moduli.
Per vedere una lista di tutti i moduli inclusi guardate dentro a
<path>/lib/modules/*/kernel/drivers/*</path>. Per caricare un modulo in particolare,
digitare:
</p>

<pre caption = "Caricare i moduli">
# <i>modprobe nomemodulo</i>
<comment>(sostituite nomemodulo con il modulo che desiderate)</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Configurare ed Installare la rete</title>
<section>
<body>

<p>
I nuovi CD di boot vi permettono di configurare una rete funzionante, permettendovi
di usare <c>ssh</c>, <c>scp</c> o <c>wget</c> ecc. come necessario prima di iniziare
il processo di installazione. Se volete usare il GRP, non c'è motivo a questo punto
di configurare una rete. Esistono diversi modi di configurare la rete.
Forse il più comune e anche il più semplice è il DHCP:
</p>

</body>
</section>

<section>
<title>DHCP</title>
<body>

<p>
La configurazione della rete con il DHCP è semplice; Se il vostro ISP non usa
il DHCP, saltate qui sotto alla sezione di configurazione statica.
</p>

<pre caption="Configurazione di rete con DHCP">
# <i>dhcpcd eth0</i>
</pre>

<note>
Alcuni ISP vi richiedono di fornire un nome host. Per fare ciò,
aggiungete un'opzione <c>-h mionomehost</c> alla linea di comando dhcpcd qui sopra.
</note>

<p>
Se ricevete warning <i>dhcpConfig</i>, non andate in panico; gli errori
sono per lo più cosmetici. Saltate sotto alla sezione di test della rete.
</p>

<p>
Notate per favore che eth0 si riferisce all'adattatore di rete interno sulla maggior
parte dei livecd ppc. Se volete installare gentoo usando airport lanciate:
</p>

<pre caption="Configurazione di rete (airport) con DHCP">
# <i>dhcpcd eth1</i>
</pre>

<p>
Se la vostra stazione base airport è configurata per criptare le connessioni
tramite WEP, usate il comando iwconfig per settare i parametri corretti.
</p>

</body>
</section>

<section>
<title>Configurazione Statica</title>
<body>

<p>
Dobbiamo configurare la rete a sufficenza così che possiamo scaricare i sorgenti
per l'installazione del sistema, e configurare anche l'interfaccia localhost che è
necessaria.
Se avete avviato usando un CD 1 GRP, tutti i sorgenti necessari so già nel cd
nella directory /mnt/cdrom/distfiles. Digitate i seguenti comandi, 
sostituendo $IFACCIA con la vostra interfaccia di rete (tipicamente <c>eth0</c>), $NUMIP
con il vostro indirizzo IP, $BCAST con il vostro indirizzo di broadcast, e $MASCH con la vostra
maschera di rete.  Per il comando <c>route</c>, sostituite $GTWAY con il vostro
gateway di default.
</p>

<pre caption = "Configurazione di Rete Statica">
# <i>/sbin/ifconfig $IFACCIA $NUMIP broadcast $BCAST netmask $MASCH</i>
# <i>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1</i>
</pre>

<p>
Ora, è tempo di creare il file <path>/etc/resolv.conf</path> (ancora, solamente necessario
se non state facendo un'installazione senza rete) così che la risoluzione dei nomi
(trovare siti Web/FTP attraverso il nome, piuttosto che il loro indirizzo IP) funzioni.
</p>

<note>
Per ragioni storiche, Gentoo usa un piccolo editor di testo chiamato
<c>nano</c> (un clone del <c>pico</c>) durante l'installazione. Tutti i CD Gentoo/PPC
includono anche i più popolari vim ed emacs. Altri editor possono essere aggiunti
mandando una semplice richiesta al mantainer del livecd
(<mail link="pvdabeel@gentoo.org">Pieter Van den abeele</mail>).
</note>

<p>
Qui c'è un esempio da seguire per creare il vostro file <path>/etc/resolv.conf</path>:
</p>

<pre caption="esempio /etc/resolv.conf">
domain miodominio.com
nameserver 10.0.0.1
nameserver 10.0.0.2
</pre>

<p>
Sostituite <c>10.0.0.1</c> e <c>10.0.0.2</c> con gli indirizzi IP rispettivamente del
vostro server DNS primario e secondario.
</p>

</body>
</section>

<section>
<title>Testare la Rete</title>
<body>

<p>
Ora che la vostra rete è stata configurata, il comando <c>/sbin/ifconfig -a</c> 
dovrebbe mostrarvi (speriamo!) che la vostra scheda di rete sta funzionando
(cercate <e>UP</e> e <e>RUNNING</e> nell'output).
</p>

<pre caption="/sbin/ifconfig di una scheda funzionante">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
</pre>


<note>
Usate <c>export http_proxy=http://proxyDELmioISP:porta</c> o <c>export
http_proxy=proxyDELmioISP:porta</c> se il vostro ISP vi richiede di settare un
proxy http.
</note>

<note>
Gentoo/PPC supporta anche altri tipi di connessione (ADSL, ppp,...).
Fate riferimento al documento di installazione Gentoo/x86 se avete bisogno di
configurare tale tipo di connessione su una macchina Gentoo/PPC.
</note>

</body>
</section>

<section>
<title>La Rete funziona!</title>
<body>

<p>
La rete dovrebbe essere ora configurata e usabile (sempre se ce n'era bisogno :-) ).  Dovreste
essere in grado di usare i comandi inclusi <c>ssh</c>, <c>scp</c>, <c>wget</c>, ... 
per connettervi ad altre macchina sulla vostra rete locale o su Internet.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configurazione delle partizioni</title>
<section>
<body>

<p>
Ora che il kernel riesce a vedere la nostra scheda e il controller dei dischi, è tempo
di configurare le partizioni per Gentoo Linux.
</p>

<p>
Qui c'è una vista veloce sull'impostazione standard della Gentoo Linux.
Andremo a creare almeno tre partizioni: una di swap, una di root (dove tenere
il grosso della Gentoo Linux), e una speciale partizione di bootstrap.
La partizione di bootstrap è designata a tenere le informazioni del boot loader YABOOT.
Gli utenti OldWorld non necessitano di questa partizione di bootstrap visto che le loro
macchine sono avviate inizialmente dal MacOS, e BootX è usato per inizializzare il
kernel linux e gli script di init.
</p>

<p>
Ora, sui tipi di file system. Adesso, potete scegliere tra quattro file system:
XFS, ext2, ext3 (con funzioni di journaling) e ReiserFS.  ext2 è il fidato e vero
file system di Linux ma non ha il metadata journaling. ext3 è la nuova versione
dell'ext2 sia con il metadata journaling che le ordered data write, che fornisce
anche il data journaling. Entrambi sono i tipi raccomandati da essere usati per
GentooPPC. ReiserFS e XFS sono entramni i più recenti file system ad alte prestazioni,
ma sono più sperimentali su PPC in generale e non sono raccomandati.
Sentitevi liberi di sperimentare con questi filesystem se la vostra macchina non è per
uso mission-critical. 
</p>

<note>
A questo punto, create le vostre partizioni usando mac-fdisk, <c>mac-fdisk /dev/hdx</c>
(dove x è la lettera del vostro disco, a, b, c - <path>/dev/sdx</path> per i dischi scsi).
Avrete bisogno di creare almeno una partizione di bootstrap (<c>b</c> nel mac-fdisk)
(solo per utenti New World), una partizione di swap (generalmente 1,5* la ram della vostra
macchina è buono, comunque raccomando almeno 512MB per la partizione di swap se avete
intenzione di compilare pacchetti molto grandi), e una partizione di root. Il comando <c>?</c>
dato al prompt del mac-fdisk vi darà una lista di opzioni. 
</note>

<p>
Una volta che avete creato le vostre partizioni usando <c>mac-fdisk</c>, è tempo di
inizializzare i file system che saranno usati per contenere i nostri dati. Inizializzate
la partizione di swap come segue:
</p>

<pre caption = "Creazione dello Swap">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
Potete usare il comando <c>mke2fs</c> per creare i file system ext2:
</p>

<pre caption = "Formattare a ext2">
# <i>mke2fs /dev/hda4</i>
</pre>

<p>
Se volete usare ext3, potete creare i file system ext3 usando 
<c>mke2fs -j</c>:
</p>

<pre caption = "Formattare a ext3">
# <i>mke2fs -j /dev/hda4</i>
</pre>

<note>
Potete trovare ulteriori informazioni riguardo l'uso di ext3 sotto Linux 2.4 presso
<uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Mount delle partizioni</title>
<section>
<body>

<p>
Ora, attiveremo la nostra nuova swap, visto che potremo aver bisogno della memoria
addizionale virtuale che fornisce:
</p>

<pre caption = "Attivare lo swap">
# <i>swapon /dev/hda3</i>
</pre>

<p>
Poi, andremo a creare il mountpoint <path>/mnt/gentoo</path>,
e faremo il mount del nostro file system su questo mountpoint.
</p>

<pre caption = "Fare il mount dell'ambiente">
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda4 /mnt/gentoo</i>
</pre>

<p>
Se state configurando Gentoo Linux con <path>/usr</path> o 
<path>/var</path> separati, queste andrebbero montate su <path>/mnt/gentoo/usr</path> 
e <path>/mnt/gentoo/var</path>, rispettivamente.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Fare il mount del CD-ROM</title>
<section>
<body>

<p>
Sui livecd, il cdrom è trovato automaticamente e montato in /mnt/cdrom. 
</p>

<p>
Se avete avviato usando lo smallestcd (notate per favore che questo CD non è
più attivamente mantenuto ed è ancora in giro solo per ragioni storiche (niente
supporto per il wireless, ppp...)) il cdrom non è montato nell'ambiente minimale
del CD di boot Linux smallestcd Linux. Dovremo fare il mount di esso così che 
possiamo accedere ai file tar compressi contenuti nel CD-ROM.
Per fare il mount del CD-ROM, solitamente si digita:
</p>

<pre caption = "Montare il CD-ROM">
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom -o ro -t iso9660</i>
</pre>

<p>
Con il CD-ROM montato, dovreste essere in grado di vedere i(l) file <c>stage???.tbz2</c> 
digitando <c>ls /mnt/cdrom/build</c>.
</p>

<note>
Se non siete in grado di fare il mount del vostro cdrom, è sempre possibile prelevare 
i vari stage1/2/3 dai mirror gentoo usando
<c>lynx gentoo.oregonstate.edu/releases/ppc/</c>.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Scompattare lo stage che volete usare</title>
<section>
<body>

<p>
Con il cdrom CD GRP 1 montato, dovreste essere in grado di vedere i file tar
compressi stage???.tbz2 nella directory /mnt/cdrom/ppc-stages , in quella
/mnt/cdrom/g3-stages o quella /mnt/cdrom/g4-stages .
</p>

<p>
Se il vostro livecd non contiene gli stage o volete usare il più recente, puntate
il lynx o il wget al vostro mirror Gentoo e scaricate uno degli ultimi ufficiali
stage ppc dalla directory <c>releases/ppc/1.4/stages</c>. Per ragioni storiche,
sono ancora disponibili gli stage 1.2 nella directory releases/build, 
ma questi sono superati e certamente non più mantenuti attivamente.
</p>

<impo>
Assicuratevi di usare l'opzione <c>p</c> con il comando <c>tar</c>. Dimenticarsi
di farlo porterà ad avere certi file con permessi incorretti.
</impo>

<impo>
Se volete compilare realmente tutto da zero, ottimizzato per il vostro processore,
dovreste usare lo stage1, comunque potrete scegliere lo stage2 e lo stage3.
Queste vi permetteranno di risparmiare tempo a scapito della configurabilità
(abbiamo già scelto le ottimizzazioni per il compilatore e le variabili USE di default).
Lo stage3 è raccomandato per un'installazione GRP di 20 minuti.
</impo>

<pre caption = "Preparare l'ambiente">
# <i>cd /mnt/gentoo</i>
# <i>tar -xvjpf /mnt/cdrom/build/stage?-*.tbz2</i>
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

<p>
Se avete avviato dal CD 1 GRP, copiate i distfile e lo snapshot del portage
nello locazioni corrette:
</p>

<pre caption = "Preparare l'ambiente con GRP">
# <i>cd /mnt/gentoo/usr</i>
# <i>tar -jxvf /mnt/cdrom/portage.tbz2</i>
# <i>cp -a /mnt/cdrom/distfiles/ /mnt/gentoo/usr/portage/distfiles/</i>
</pre>

<p>
Il nuovo sistema Gentoo è ora correttamente settato, l'unica cosa che 
dobbiamo fare è di informare il Linux avviato dal livecd di passare al nuovo
Linux in /mnt/gentoo:
</p>

<pre caption = "Fare il Chroot nel nuovo ambiente">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
&gt;&gt;&gt; Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
</pre>

<p>
Dopo che avrete eseguito questi comandi, sarete "dentro" il vostro nuovo ambiente Gentoo Linux.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rsync</title>
<section>
<body>

<p>
Ora, dovrete eseguire <c>emerge sync</c> che si connetterà a
rsync.gentoo.org e scaricherà l'ultima versione del Portage tree dei port. 
Se state seguendo un'installazione rapida senza rete, questo passo non è necessario:
</p>

<pre caption = "Aggiornare il Portage tree">
# <i>emerge sync</i>
</pre>

<p>
Sarà scaricato il Portage tree; è circa 10Mb in grandezza.
</p>

<impo>
L'indirizzo corrente per il server rsync è
rsync://rsync.gentoo.org/gentoo-portage. Se avete problemi ad accedere al rsync Gentoo,
assicuratevi che state usando questo indirizzo settandolo come variabile SYNC nel vostro
<path>/etc/make.conf</path>. Se avete usato lo snapshot del portage snapshot sul 
cd, non c'è bisogno di fare un emerge sync. Notate che emerge sync fa si che
lo snapshot venga aggiornato, probabilmente rendendo superato qualcuno dei precompilati. 
</impo>

<note>
Il comando rsync può essere configurato per usare un proxy HTTP se siete dietro ad
un firewall. Per configurare questa opzione settate
<c>RSYNC_PROXY="nomehost:porta"</c> in <path>/etc/make.conf</path> o settatela come una
variabile d'ambiente.
</note>

<note>
Guardate gli altri settaggi in <path>/etc/make.conf</path> e configurateli
secondo le vostre esigenze. Se state usando GRP, dovrete impostare ACCEPT_KEYWORDS a 
ppc (il profilo stabile). Esistono diverse utility disponibili per scegliere automaticamente il
miglior mirror (<c>emerge mirrorselect &amp;&amp; mirrorselect -a</c>) 
o per settare le variabili USE (<c>emerge ufed &amp;&amp; ufed</c>). Assicuratevi che
le vostre impostazioni CFLAGS corrispondo al processore della macchina sulla quale state
installando sopra Gentoo.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Avanzare dallo stage1 allo stage2</title>
<section>
<body>

<impo>
Se state usando un tar stage2 o stage3, allora abbiamo già fatto il bootstrap
per voi. Non c'è nessun bisogno per voi di fare di nuovo il bootstrap, a meno che
non decidiate di fare un <c>emerge sync</c> e vogliate assicurarvi di avere un
sistema Gentoo Linux aggiornato all'ultimo minuto. La maggior parte delle persone
che usano lo stage2 o lo stage3 <i>non</i> vorranno fare il bootstrap di nuovo,
visto che può impiegare almeno un'ora sulle macchine molto veloci.
</impo>

<p>
Ora che avete una copia funzionante del Portage tree, coloro che stanno usando
lo stage1 avranno bisogno fare il bootstrap del loro sistema Gentoo Linux
come segue. Per primo editate il file <path>/etc/make.conf</path>.
In questo file, voi dovreste settare la vostra variabile
<c>USE</c>, la quale specifica le funzionalità opzionali che vorrete avere compilate
nei pacchetti; generalmente, le impostazioni di default (la variabile USE <e>vuota</e>
o non impostata) vanno bene. Dovreste anche settare gli appropriati <c>CHOST</c>, <c>
CFLAGS</c> e <c>CXXFLAGS</c> per il tipo di sistema che state creando
(degli esempi commentati potranno essere trovati più in basso nel file.)  Se necessario,
potete anche settare qui le informazioni del proxy se siete dietro ad un firewall.
</p>

<pre caption = "Editare il make.conf">
# <i>nano -w /etc/make.conf</i> <comment>(Regolate questi settaggi)</comment>
</pre>

<note>
Coloro che hanno bisogno di aggiustare sostanzialmente il processo di compilazione
dovrebbero guardare il file <path>/etc/make.globals</path>.  In questo file sono
le impostazioni di default di gentoo e non dovrebbe mai essere modificato.  Se i valori
di default non sono sufficenti, allora i nuovi valori andrebbero messi in
<path>/etc/make.conf</path>, visto che le voci del 
<path>make.conf</path> <comment>hanno la precedenza</comment> sulle voci del
<path>make.globals</path>.  Se siete interessati all'aggiustamento delle variabili di USE, 
guardate dentro a <path>/etc/make.profile/make.defaults</path>. Se volete disabilitare
una variabile USE che trovate qui, aggiungete un appropiato <c>USE="-foo"</c> dentro a
<path>/etc/make.conf</path> (per disabilitare il settaggio <c>foo</c> della variabile USE).
</note>

<p>
Ora, è tempo di iniziare il processo di "bootstrap". Questo processo durerà
1-4 ore a seconda di quanto è veloce la vostra macchina. In questo tempo, l'immagine
di build estratta verrà preparata per compilare il resto del sistema. Sarà compilata
la suite del compilatore GNU, così come anche la libreria GNU C.
Queste compilazioni impiegano molto tempo e sono la parte principale del processo di
bootstrap:
</p>

<pre caption = "Iniziare il bootstrap">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>

<p>
Il processo di "bootstrap" ora inizierà.
</p>

<note>
Il Portage come impostazione di default usa la directory <path>/var/tmp</path>
durante la compilazione dei pacchetti, spesso usando centinaia di megabyte di spazio
temporaneo. Se volete cambiare dove il Portage mette questi file temporanei, settate una
nuova variabile PORTAGE_TMPDIR <e>prima</e> di iniziare il processo di bootstrap, come segue:
</note>

<pre caption = "Configurare la directory temporanea">
# <i>export PORTAGE_TMPDIR="/altradirectory/tmp"</i>
</pre>

<p>
Il comando <c>bootstrap.sh</c> compilerà <c>binutils</c>, <c>gcc</c>, <c>gettext</c>,
e <c>glibc</c>, poi ricompilerà <c>binutils</c>, <c>gcc</c>, r <c>gettext</c>
dopo avere compilato le <c>glibc</c>.  Inutile a dirsi, questo processo impiegherà un po'.
Vi auguriamo un buon sonnellino.  Una volta che questo processo si completa,
il vostro sistema si troverà in uno stato di "stage2".
</p>

</body>
</section>
</chapter>

<chapter>
<title>Avanzare dallo stage2 allo stage3</title>
<section>
<body>

<note>
Se non lo avete ancora fatto, per favore editate <path>/etc/make.conf</path> secondo le vostre
esigenze.
</note>

<p>
Una volta che siete nello stato di stage2 dopo aver fatto il bootstrap (ancora, se
state usando un file tar di stage3 allora questi passi non sono richiesti) è tempo
di compilare o installare il resto del sistema base come segue:
</p>

<pre caption = "Fare l'Emerge dei pacchetti di sistema">
# <i>export CONFIG_PROTECT=""</i>
# <i>emerge --pretend system</i>
<comment>[lista i pacchetti che devono essere installati]</comment>
# <i>emerge system</i>
</pre>

<note>
La linea <c>export CONFIG_PROTECT=""</c> assicura che ogni nuovo script
installato in <path>/etc</path> sovrascriverà i vecchi script (contenuti nel
<path>sys-apps/baselayout</path>), passando sopra al sistema di supporto del Portage
per i nuovi file di configurazione.  Digitate <c>emerge --help config</c> per ulteriori dettagli.
</note>

<p>
Ci vorrà del tempo per finire di installare l'intero sistema base. In premio avrete
che sarà pienamente ottimizzato per il vostro sistema. L'inconveniente è che
dovete trovarvi un modo per tenervi occupati per un po'.
Quando <c>emerge system</c> è completo, avrete un sistema Gentoo Linux nello stage3.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Passi finali: timezone</title>
<section>
<body>

<note>
Se non lo avete fatto, per favore editate <path>/etc/make.conf</path> secondo le vostre
esigenze.
</note>

<p>
A questo punto, dovreste avere un sistema nello stage3 pronto per la configurazione finale.
Inizieremo questo processo settando il timezone. Settando il timezone prima di compilare
il kernel ci assicuriamo che gli utenti abbiano l'output giusto dal comando
<c>uname -a</c>.
</p>

<p>
Cercate il vostro timezone (o GMT se state usando il Greenwich Mean Time) dentro a 
<path>/usr/share/zoneinfo</path>.  Quindi, create un link simbolico digitando:
</p>

<pre caption = "Configurare la timezone">
# <i>ln -sf /usr/share/zoneinfo/path/verso/ilfiletimezone /etc/localtime</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Kernel, system logger e cron</title>
<section>
<body>

<p>
Avrete bisogno ora di fare l'emerge dei sorgenti ppc del kernel, questo può essere
fatto con <c>emerge sys-kernel/ppc-sources</c>. 
</p>

<p>
Una volta che avete disponibile il sorgente del kernel, è tempo di compilare il vostro
kernel personalizzato:
</p>

<pre caption = "Compilare il kernel">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
# <i>make dep &amp;&amp; make clean vmlinux modules modules_install</i>
# <i>cp vmlinux System.map /boot</i>
</pre>

<note>
Dovete <e>solamente</e> usare i kernel <c>sys-kernel/ppc-sources</c> sulle macchine basate
su PowerPC.
</note>

<warn>
Affinchè il vostro kernel funzioni appropriatamente, ci sono diverse opzioni di
cui dovrete assicurarvi che siano nel kernel propriamente -- cioè, esse devono
<e>essere abilitate e non compilate come moduli</e>. Dovrete abilitare
l'opzione <c>"Code maturity level options --> Prompt for development and/or
incomplete code/drivers"</c> per vedere diverse di queste selezioni.
Sotto alla sezione "File systems", assicuratevi di abilitare il
<c>Device File System</c> (notate che voi <e>non</e> 
avete bisogno di abilitare l'opzione "/dev/pts file system support"). Dovrete anche
abilitare il <c>Virtual Memory File system</c>.  Inoltre sotto <c>Macintosh Device 
Drivers</c> assicuratevi di disabilitare il <c>Support for ADB raw 
keycodes</c>. Assicuratevi anche di <e>disabilitare</e> l'opzione <c>Enhanced RTC</c>
(in "Character devices") dato che non va d'accordo con PPC ATM. Ma <e>abilitate</e> 
il <c>Support for /dev/rtc</c> in "General setup". E' sempre una buona idea di 
lasciare abilitato il supporto per ext2 anche se non lo usate. Gli utenti con macchine
OldWorld vorranno il supporto HFS così che possano copiare i kernel compilati
nella partizione MacOS. 
</warn>

<impo>
Se avete un masterizzatore CD IDE e/o DVD, allora dovrete abilitare
l'emulazione SCSI.  Abilitate "ATA/IDE/MFM/RLL support" ---> "IDE, ATA and ATAPI 
Block devices" ---> "SCSI emulation support" (Di solito lo faccio come modulo), 
poi sotto "SCSI support" abilitate "SCSI support", "SCSI CD-ROM support" e
"SCSI generic support" (ancora, di solito li compilo come moduli).  Se anche
voi scegliete di usarli come moduli, allora fate <c>echo -e "ide-scsi\nsg\nsr_mod"
>> /etc/modules.autoload</c> per averli caricati automaticamente all'avvio.  
Dovete anche aggiungere questa riga al vostro file <path>/etc/yaboot.conf</path>
<c>append="hdc=ide-scsi"</c>. 
</impo>

<impo>
Se avete una macchina OldWorld dovrete fare il mount della vostra partizione HFS (MacOS),
quindi copiarci il vostro kernel così BootX potrà caricarlo all'avvio.
BootX troverà automaticamente i kernel nel folder <path>Linux Kernels</path> del
System Folder.
</impo>

<p>
Il vostro nuovo kernel personalizzato (e i moduli) sono ora installati.
Ora dovrete scegliere un system logger che vorrete installare. Noi offriamo
sysklogd, che è il set tradizionale di demoni per il system logging. Offriamo
anche metalog e syslog-ng. Se siete in dubbio, vorrete probabilmente provare
syslog-ng.
Per installare il logger di vostra scelta, digitate <e>solamente una</e> delle
due righe seguenti:
</p>

<pre caption = "Emerge di un system logger">
# <i>emerge app-admin/sysklogd</i>
# <i>rc-update add sysklogd default</i>
<comment>o</comment>
# <i>emerge app-admin/metalog</i>
# <i>rc-update add metalog default</i>
<comment>o</comment>
# <i>emerge app-admin/syslog-ng</i>
# <i>rc-update add syslog-ng default</i>

</pre>

<warn>
Se avete usato la versione 1.2 dello stage3 non dovete installare un system
logger. Lo stage3-ppc-1.2.tbz2 include sysklogd (anche se le versioni più
vecchie e quelle più nuove non lo fanno). Se invece volete usare metalog,
dovrete prima rimuovere sysklogs: dopo che l'installazione è completate, fate si
che sysklogd non parta all'avvio tramite il comando <c>rc-update del sysklogd default</c>.
Poi <c>emerge unmerge sysklogd</c> per disinstallarlo. Probabilmente dovrete anche
cancellare manualmente i file di configurazione di sysklogd dentro a <path>/etc</path>
(cercate <c>cfgpro</c> nella lista dei file durante l'unmerge). Per installare metalog,
eseguite <c>emerge metalog</c>, poi <c>rc-update add metalog default</c>.
</warn>

<impo>
Metalog scrive in blocchi l'output sul disco, così i messaggi non sono
immediatamente registrati nei log di sistema. Se state cercando di fare il debug
di un demone, questo comportamento che aumenta le performance è meno che utile.
Quando il vostro sistema Gentoo Linux è pronto e funzionante, potete mandare al
metalog un segnale USR1 per disabilitare temporaneamente questo buffering dei messaggi
(significa che <c>tail -f <path>/var/log/everything/current</path></c> ora funzionerà 
in tempo reale, come ci si aspetta), e un segnare USR2 per riattivare il buffering.
</impo>

<p>
Ora, potete opzionalmente scegliere un pacchetto del cron che vorreste usare.
Adesso, offriamo dcron, fcron e vixie-cron. Se non sapete quale scegliere, potete optare
per il vixie-cron. Questi possono essere installati come segue:
</p>

<pre caption = "Emerge di cron">
# <i>emerge sys-apps/dcron</i>
# <i>crontab /etc/crontab</i>
<comment>o</comment>
# <i>emerge sys-apps/fcron</i>
# <i>crontab /etc/crontab</i>
<comment>o</comment>
# <i>emerge sys-apps/vixie-cron</i>
<comment>(Gli utenti GRP dovrebbero usare "vcron" al posto di "vixie-cron")</comment>
</pre>

<p>
Non dimenticate di aggiungere il cron al runlevel default così che venga avviato durante
il boot.
</p>

<pre caption="aggiungere cron al runlevel default">
# <i>rc-update add &lt;name-of-/etc/init.d/cronscript&gt; default</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Installare pacchetti addizionali</title>
<section>
<body>

<p>
Se siete un utente di laptop e volete usare i vostri slot pcmcia nel vostro
primo riavvio, vorrete assicurarvi di installare il pacchetto pcmcia-cs.
</p>

<pre caption = "Emerge di pcmcia-cs">
# <i>emerge sys-apps/pcmcia-cs</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Passi finali: configurazione di sistema</title>
<section>
<title>Passi finali: /etc/fstab</title>
<body>

<p>
Il vostro sistema Gentoo Linux è quasi pronto all'uso.  Tutto quello che dobbiamo
fare adesso è di configurare pochi file di sistema importanti e il bootloader yaboot.
Il primo file che dobbiamo configurare è <path>/etc/fstab</path>. Ricordate di
specificare il filesystem <c>ext2</c> o <c>ext3</c> appropriato.
</p>

<p>
Usate qualcosa come il file <path>/etc/fstab</path> mostrato qui sotto, ma ovviamente 
assicuratevi di sostituire "ROOT" e "SWAP" con gli attuali device a blocchi che state usando
(come per esempio <c>hda2</c>, ecc.).  Notate che gli utenti NewWorld <e>non</e> aggiungono
la loro partizione di bootstrap a questo file.
</p>

<pre caption="/etc/fstab">
<comment>
# /etc/fstab: static file system information.
#
# noatime turns of atimes for increased performance (atimes normally aren't
# needed; notail increases performance of ReiserFS (at the expense of storage
# efficiency).  It's safe to drop the noatime options if you want and to
# switch between notail and tail freely.
# &lt;fs&gt;           &lt;mountpoint&gt;   &lt;type&gt;   &lt;opts&gt;          &lt;dump/pass&gt;
</comment>
/dev/ROOT           /           ext3	 noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro       0 0
proc                /proc       proc	 defaults        0 0
</pre>

</body>
</section>


<section>
<title>Passi finali: settare la password di root</title>
<body>

<p>
Prima che vi dimentichiate, settate la password di root digitando:
</p>

<pre caption = "Settare una password di root">
# <i>passwd</i>
</pre>

</body>
</section>
<section>
<title>Passi finali: /etc/hostname</title>
<body>

<p>
Editate questo file così che contenga il vostro nome dominio full-qualified
su una singola linea, es. <c>miamacchina.miodominio.com</c>. 
</p>

</body>
</section>

<section>
<title>Passi finali: /etc/hosts</title>
<body>

<p>
Questo file contiene una lista di indirizzi ip e il loro nome host associato.
E' usato dal sistema per risolvere gli indirizzi ip dei nome host che potrebbero
non essere nei vostri nameserver. Qui c'è un esmpio per questo file:
</p>

<pre caption="/etc/hosts">
127.0.0.1      localhost
<comment># la prossima linea contiene il vostro IP per la vostra LAN, e il vostro nome macchina associato</comment>
192.168.1.1    miamacchina.miodominio.com	miamacchina
</pre>

</body>
</section>

<section>
<title>Configurazione finale di rete</title>
<body>

<p>
Aggiungete i nomi dei moduli che sono necessari al buon funzionamento del vostro
sistema nel file <path>/etc/modules.autoload</path> (potete anche aggiungere le opzioni
di cui avete bisogno sulla stessa riga). Quando si avvia la Gentoo Linux, questi moduli
saranno caricati automaticamente. Di particolare importanza è il modulo della vostra
scheda ethernet, se lo avete compilato come modulo:
</p>

<pre caption="/etc/modules.autoload">
sungem
</pre>

<p>
Editate lo script <path>/etc/conf.d/net</path> per avere la vostra rete configurata
per il vostro primo avvio:
</p>

<pre caption = "Configurare la rete">
# <i>nano -w /etc/conf.d/net</i>
# <i>rc-update add net.eth0 default</i>
</pre>

<p>
Se avete diverse schede di rete dovete creare ulteriori script
<path>net.eth<comment>x</comment></path> per ognuna di esse
(<comment>x</comment> = 1, 2, ...):
</p>

<pre caption="Ulteriori interfacce di rete">
# <i>cd /etc/init.d</i>
# <i>cp net.eth0 net.eth<comment>x</comment></i>
# <i>rc-update add net.eth<comment>x</comment> default</i>
</pre>

<p>
Se avete installata una scheda PCMCIA, guardate rapidamente dentro a
<path>/etc/init.d/pcmcia</path> per verificare che sia tutto apposto per 
la vostra configurazione, quindi aggiungete le seguenti righe in cima al vostro file
<path>/etc/init.d/net.eth<comment>x</comment></path> per far si che i driver pcmcia
vengano caricati automaticamente ogni volta che la vostra rete viene caricata:
</p>

<pre caption = "Aggiungere la dipendenza pcmcia">
depend() {
	need pcmcia
}
</pre>

</body>
</section>


<section>
<title>Passi finali: configurare i settaggi di base (incluso il settaggio della mappa
tasti internazionale)</title>
<body>

<pre caption="configurazione di base">
# <i>nano -w /etc/rc.conf</i>
</pre>

<p>
Seguite le istruzioni nel file per configurare i settaggi di base.
Tutti gli utenti vorranno assicurarsi che <c>CLOCK</c> è settato come lo preferiscono.
Gli utenti internazionali vorranno settare la variabile <c>KEYMAP</c>
per la loro tastiera (navigate in <path>/usr/share/keymaps</path> per vedere le varie
possibilità).
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configurare il Boot Loader</title>
<section>
<body>

<p>
La principale differenza che troverete qui rispetto alla piattaforma x86 è il bootloader.
Le macchine NewWorld usano yaboot. Le macchine OldWorld usano BootX.
</p>

</body>
</section>

<section>
<title>yaboot per le macchine NewWorld (configurazione automatica usando yabootconfig)</title>
<body>

<p>
Potete usare il nuovo e migliorato <c>yabootconfig</c>, incluso con
yaboot-1.3.8-r1 e più recenti, per configurare automaticamente yaboot. <c>yabootconfig</c> 
troverà automaticamente le partizioni sulla vostra macchina e configurerà un avvio doppio e triplo
con Linux, Mac OS, e Mac OS X.
</p>

<p>
Per usare <c>yabootconfig</c>, il vostro disco deve avere una partizione di bootstrap, e
il file <path>/etc/fstab</path> deve essere configurato con le vostre partizioni Linux.
Entrambi questi passi dovrebbero essere già stati completati sopra. Per iniziare, assicuratevi
che avete l'ultima versione di yaboot installata eseguendo <c>emerge -u
yaboot</c>. Questo è necessario visto che la versione più recente è disponibile tramite
Portage, ma potrebbe non essere stata inclusa nel file di stage.
</p>

<p>
Al prompt dei comandi eseguite <c>yabootconfig</c>. Il programma partirà e confermerà
la posizione della partizione di bootstrap. Premete <c>Y</c> se è corretto.
Se non lo è, ricontrollate il file <path>/etc/fstab</path>. <c>yabootconfig</c> quindi farà
una scansione della vostra configurazione di sistema, creerà il file
<path>/etc/yaboot.conf</path> ed eseguirà <c>mkofboot</c> per voi. (mkofboot è usato per
formattare la partizione di bootstrap, e installarci sopra il file di configurazione
dello yaboot.)
</p>

<p>
Vorrete magari verificare il contenuto dello <path>/etc/yaboot.conf</path>. Se apportate
dei cambiamenti a <path>/etc/yaboot.conf</path> (come i settaggi del Sistema Operativo
avviato di default), assicuratevi di eseguire di nuovo <c>ybin -v</c> per apportare i
cambiamenti alla partizione di bootstrap.
</p>

</body>
</section>

<section>
<title>yaboot per le macchine NewWorld (settaggio manuale di yaboot.conf)</title>
<body>

<p>
Se per qualche ragione non volete eseguire <c>yabootconfig</c> per fare il setup
automatico di <path>/etc/yaboot.conf</path>, potete anche editere il file di
esempio già installato sul vostro sistema. Qui sotto c'è un file yaboot.conf completo:
</p>

<pre caption="/etc/yaboot.conf">
## /etc/yaboot.conf
##
## run: "man yaboot.conf" for details. Do not make changes until you have!!
## see also: /usr/share/doc/yaboot/examples for example configurations.
##
## For a dual-boot menu, add one or more of:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## our bootstrap partition:
boot=/dev/hda9

##hd: is open firmware speak for hda
device=hd:
partition=11

root=/dev/hda11
delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

#################
## This section can be duplicated if you have more than one kernel or set of
## boot options
#################
image=/boot/vmlinux
	label=Linux
	sysmap=/boot/System.map
	read-only
##################

macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Una volta configurato <path>yaboot.conf</path> come volete, eseguite <c>mkofboot 
-v</c> per installare i settaggi nella partizione di bootstrap.  Non dimenticatevi di farlo!
Se tutto va a buon fine, e avete le stesse opzioni come l'esempio sopra, il vostro
prossimo riavvio vi mostrerà un semplice menù di boot con cinque scelte.
Se in seguito aggiornate la vostra configurazione di yaboot, dovrete solamente eseguire
<c>ybin -v</c> per aggiornare la partizione di bootstrap - mkofboot è solamente
per il setup iniziale.
</p>

<note>
Yaboot ha diverse funzionalità per settare le configurazioni durante il boot: guardate
su <uri>http://penguinppc.org/projects/yaboot</uri> per ulteriori informazioni.
</note>

</body>
</section>

<section>
<title>BootX per macchine OldWorld</title>
<body>

<impo>
Seguite questi passi dopo che avete riavviato la vostra macchine nel passo seguente.
</impo>

<p>
Avviate la vostra macchina nel MacOS e aprite il pannello di controllo del BootX.
Selezionate <c>Options</c>, e disabilitate <c>Used specified RAM disk</c>. Quando tornate
alla schermata principale del BootX, troverete ora un'opzione per specificare il disco
di root e la partizione della vostra macchina. Riempite questi campi con i valori appropriati. Inoltre dovrete passare i seguenti argomenti al kernel.
</p>

<pre caption="Argomenti per il kernel nel boot degli OldWorld">
video=ofonly pane:rw init=/linuxrc initrd=/boot/initrd.img.gz

</pre>

<p>
BootX può essere configurato per far partire Linux all'avvio. Se fate questo, prima
vedrete la vostra macchina avviarsi nel MacOS poi, durante l'avvio, BootX caricherà e
farà partire Linux. Guardate la <uri link="http://penguinppc.org/projects/bootx/">home page
di BootX</uri> per ulteriori informazioni.
</p>

</body>
</section>

</chapter>

<chapter>
<title>Installazione completa!</title>
<section>
<body>

<p>
Ora, la Gentoo Linux è installata.  L'unico passo rimanente è di uscire dalla shell
dentro al chroot, fare l'unmount delle vostre partizioni e riavviare il sistema:
</p>

<pre caption = "Uscire dal chroot">
# <i>exit</i>  <codenote>Questo fa uscire dalla shell del chroot; potete anche digitare <c>^D</c></codenote>
# <i>cd / </i>
# <i>umount /mnt/gentoo/proc</i>
# <i>umount /mnt/gentoo</i>
# <i>reboot</i>
</pre>

<note>
Dopo aver riavviato, è una buona idea eseguire il comando <c>update-modules</c>
per creare il file <path>/etc/modules.conf</path>. Invece di modificare questo
file direttamente, dovreste generalmente apportare i cambiamenti ai file dentro a
<path>/etc/modules.d</path>. Se il sistema è riavviato, inserite pure il 
GRP CD2 e copiatelo con cp -a /mnt/cdrom /usr/portage/packages. Usate emerge --usepkg per 
forzare emerge ad usare i pacchetti dentro a /usr/portage/packages. Questo vi permetterà
di installare KDE/Gnome, e altri grandi pacchetti in pochi minuti.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Extra</title>

<section>
<title>Emulazione di più tasti del mouse</title>
<body>

<p>
Vorrete aggiungere queste righe dentro a <path>/etc/sysctl.conf</path> per abilitare
l'emunalzione di più tasti del mouse ad ogni avvio. I valori chiave possono essere ottenuti
con l'utility a riga di comando <c>showkey</c>. Qui c'è un esempio che usa F11 e F12.
</p>

<pre caption = "Esempio di configurazione per sysctl.conf">
# Abilita l'emulazione del bottone del mouse
dev.mac_hid.mouse_button_emulation = 1
# Setta il secondo bottone a 87 - F11
dev.mac_hid.mouse_button2_keycode = 87
# Setta il tezo bottone a 88 - F12
dev.mac_hid.mouse_button3_keycode = 88
</pre>

</body>
</section>

<section>
<title>Gentoo-Stats</title>
<body>

<p>
Il programma di raccolta sulle statistiche di uso della Gentoo Linux fu iniziato
come un tentativo di dare agli sviluppatori un modo di conoscere la loro base
di utenti. Esso raccoglie informazioni sull'uso della Gentoo Linux per aiutarci
ad impostare le priorità nel nostro sviluppo.
L'installazione è completamente opzionale, e apprezzeremmo molto se voi decidiate
di usarlo. Le statistiche possono essere viste presso 
<uri>http://stats.gentoo.org/</uri>.
</p>

<p>
Il server delle statistiche gentoo assegnerà al vostro sistema un ID unico.
Questo ID è usato per assicurare che ogni sistema è contato una volta soltanto.
L'ID non sarà usato per identificare individualmente il vostro sistema, e neanche
sarà unito ad un indirizzo IP o altre informazioni personali. E' stata presa ogni
precauzione per assicurare la vostra privacy nello sviluppo di questo sistema.
I seguenti sono i dati che stiamo monitorando attraverso il nostro programma
"gentoo-stats":
</p>

<ul>
<li>pacchetti installati e loro versione</li>
<li>informazioni sulla CPU: velocità (MHz), costruttore, nome modello, opzioni della CPU (come "altivec")</li>
<li>informazioni sulla memoria (RAM fisica totale disponibile, spazio di swap totale disponibile)</li>
<li>schede PCI e chipset della scheda di rete</li>
<li>il profilo che sta usando la tua macchina (che è, dove punta il link <path>/etc/make.profile</path>).</li>
</ul>

<p>
Sappiamo che la diffusione di informazioni importanti sta a cuore alla maggior parte
degli utenti Gentoo Linux (tanto quanto ai nostri sviluppatori).
</p>

<ul>
<li>A meno che voi non modifichiate il programma gentoo-stats, esso non trasmetterà
mai informazioni sensibili come le vostre password, le configurazioni, i film preferiti...</li>
<li>La trasmissione del vostro indirizzo email è opzionale e disabilitata di default.</li>
<li>L'indirizzo IP col quale state trasmettendo i vostri dati non sarà mai registrato in modo
tale da potervi identificare. Non c'è nessun collegamento tra Indirizzo IP e system ID.</li>
</ul>

<p>
L'installazione è semplice - eseguite solamente i seguenti comandi:
</p>

<pre caption="Installare gentoo-stats">
# <i>emerge gentoo-stats</i>   <comment>(Installa gentoo-stats)</comment>
# <i>gentoo-stats --new</i>    <comment>(Ottiene un nuovo system ID)</comment>
</pre>

<p>
Il secondo comando richiederà un nuovo ID di sistema e lo metterà automaticamente dentro
a <path>/etc/gentoo-stats/gentoo-stats.conf</path>. Potete visionare questo file
per vedere ulteriori opzioni di configurazione.
</p>

<p>
Dopo di questo, il programma andrebbe eseguito regolarmente (gentoo-stats non
deve essere eseguito come root). Aggiungete questa riga al vostro <path>crontab</path>:
</p>

<pre caption="Aggiornare gentoo-stats tramite cron">
0 0 * * 0,4 /usr/sbin/gentoo-stats --update > /dev/null
</pre>

<p>
Il programma <c>gentoo-stats</c> è un semplice script in perl che può essere visionato
con il vostro editor preferito: <path>/usr/sbin/gentoo-stats</path>.
</p>

</body>

</section>

<section>
<title>Dove andare da qui</title>
<body>

<p>
Alcuni buoni documenti per tutte le piattaforme sono disponibili nella sezione
documenti del sito Gentoo principale. Usare il prelinking nel vostro
sistema è consigliato (non necessario) se volete prestazioni ottimali 
(l'avvio di KDE migliora di almeno il 50%).
Alsa (advanced linux sound architecture) è anche molto buona su qualche macchina
ppc (specialmente i powerbook più recenti). Se volete un sistema audio altamente
configurabile guardate quel documento. Le applicazioni che volete realmente controllare
ed usare su una macchina mac sono pmud (advanced power management) o pbbuttons 
(se siete possessori di un powerbook). Configurare Xfree sulle macchine PPC è molto semplice; 
<c>emerge xeasyconf &amp;&amp; Xeasyconf</c> dovrebbe bastare.
</p>

<p>
Se avete qualche domanda o volete essere coinvolti con lo sviluppo della Gentoo Linux,
valutate il sottoscrivere le nostre mailing list gentooppc-user e gentooppc-dev
(C'è un link "click to subscribe" ("cliccate per sottoscrivere" n.d.T.) sulla nostra <uri 
link="http://www.gentoo.org/">pagina principale</uri>). Abbiamo anche una comoda <uri 
link="/doc/it/desktop.xml">Guida alla configurazione desktop</uri> che vi aiuterà
a continuare a configurare il vostro nuovo sistema Gentoo Linux, e un'utile 
<uri link="/doc/it/portage-user.xml">Guida al Portage</uri> per aiutarvi a familiarizzare
con le basi del Portage. Divertitevi e benvenuti a Gentoo Linux!
</p>

<p>
La <uri link="/doc/it/gentoo-ppc-faq.xml">Gentoo Linux/PowerPC FAQ</uri> 
copre le domande più frequenti sull'uso della Gentoo Linux/PPC. Il più generale
<uri link="/doc/it/faq.xml">Gentoo Linux FAQ</uri> potrebbe anche aiutarvi ad iniziare,
benchè è orientato verso le installazioni per la piattaforma x86. <uri 
link="http://forums.gentoo.org/viewforum.php?f=24">Gentoo su PPC</uri> (su 
forums.gentoo.org) è un forum aperto per dicussioni su tutte le questioni PowerPC.
Anche su IRC solitamente ci sono discussioni dal vivo. Unitevi a noi dentro a
<i>#gentoo-ppc</i> su <i>irc.freenode.net</i>.
</p>

<p>
Grazie e divertitevi con Gentoo!
</p>

</body>
</section>

</chapter>

</guide>
