<?xml version='1.0' encoding="UTF-8" ?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/it/java.xml" lang="it">
	<title>Gentoo Java Guide</title>
	<author title="Author and Editor">
		<mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
	</author>
	<author title="Traduttore">
		<mail link="whitenoise@tiscali.it">Giorgio Vielmini</mail>
	</author>
	<author title="Revisore">
		<mail link="stefano.lucidi@gentoo-italia.org">Stefano Lucidi</mail>
	</author>
	<abstract>
	Java e Gentoo: guida per lo sviluppatore e per l'utente.
	</abstract>
	<version>0.1.4</version>
	<date>21 Novembre 2003</date>
	<chapter>
		<title>Installazione di JDK/JRE</title>
		<section>
			<title>Panoramica</title>
			<body>
				<p>Gentoo mette a disposizione numerose JDKs e JREs. Blackdown JDK/JRE sono la coppia
			 predefinita, poichè sono disponibili gratuitamente sena nessun obbligo di
			 registrazione.
			</p>
				<note>Nel momento in cui kaffe diventerà un sostituto completo di JRE/JDK,
			diventerà la scelta predefinita di Gentoo. 
			</note>
				<p>Sia Sun JDK/JRE che IBM JDK/JRE sono generalmente più veloci, ma la
			loro installazione richiede un po più lavoro, poichè è richiesta la
			lettura e l'accettazione della loro licenza prima del download (IBM
			richiede anche una registrazione).
			</p>
			
			<p>I nostri ebuild per Sun e IBM JDK/JRE segnalano da dove scaricare il
			software necessario.
			</p>
			
			</body>
		</section>
		<section>
			<title>Installazione di Sun/IBM JDK/JRE</title>
			<body>
				<p>Eseguendo emerge <c>sun-jdk-1.3.1</c> o <c>emerge ibm-jdk-1.3.1</c>,
			viene segnalato	che il download dei tarball deve essere eseguito 
			manualmente. Questo a causa delle licenze restrittive di JDK/JRE di Sun
			(lettura on line della licenza) e dell'obbligo di registrazione di JDK/JRE
			di IBM.
			</p>
				<note>Esiste anche la versione sun-jdk-1.4.0, ma non tutti i pacchetti
			funzionano perfettamente con Java 1.4, per cui la scelta di tale versione
			non è attualmente consigliata.  
			</note>
				<p>
			Potete scaricare i file richiesti all'interno di 
			<path>/usr/portage/distfiles</path>. A questo punto potete rieseguire
			emerge, dopodichè JDK/JRE saranno installati all'interno di
			<path>/opt</path>.
			</p>
			</body>
		</section>
	</chapter>
	<chapter>
		<title>Configurazione di JDK/JRE</title>
		<section>
			<title>Panoramica</title>
			<body>
				<p>Gentoo permette di avere più JDK e JRE installati contemporaneamente
			senza conflitti, con qualche piccola eccezione, descritta in seguito.
			</p>
				<p>Utilizzando <c>java-config</c> è possibile configurare la coppia
			JDK/JRE per tutto il sistema (se si ha un accesso root). Ogni utente può
			comunque configurare il proprio ambiente, se deve essere diverso da quello
			predefinito.
			</p>
			</body>
		</section>
		<section>
			<title>Configurare i JDK/JRE predefiniti</title>
			<body>
				<p>Eseguendo il comando <c>java-config --list-available-vms</c>  viene
			visualizzata la lista degli JRE e JDK disponibili sul sistema in uso:</p>
				<pre caption="Lista delle VM disponibili">
<i>java-config --list-available-vms</i>
[blackdown-jdk-1.3.1] Blackdown JDK 1.3.1 (/etc/env.d/java/20blackdown-jdk-1.3.1)
[blackdown-jre-1.3.1] Blackdown JRE 1.3.1 (/etc/env.d/java/20blackdown-jre-1.3.1)
[ibm-jdk-1.3.0] IBM JDK 1.3.0 (/etc/env.d/java/20ibm-jdk-1.3.0)
[ibm-jdk-1.3.1] IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
[ibm-jre-1.3.1] IBM JRE 1.3.1 (/etc/env.d/java/20ibm-jre-1.3.1)
[sun-jdk-1.4.0] Sun JDK 1.4.0 (/etc/env.d/java/20sun-jdk-1.4.0)
			</pre>
				<p>Il nome scritto tra parentesi quadre "[]" è l'identificativo di ogni
			particolare VM e viene passato come parametro a 
			<c>java-config --set-system-vm</c>, in questo modo:
			</p>
				<pre caption="Scelta della VM di sistema">
<i>java-config --set-system-vm=ibm-jdk-1.3.1</i>
Now using IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
			</pre>
				<note>Bisogna avere i diritti di amministratore per eseguire --set-system-vm 
			</note>
				<p>Una volta lanciato <c>java-config --set-system-vm </c> con una particolare VM,
			è necessario rigenerare il proprio /etc/profile.env, in questo modo:
			</p>
				<pre caption="Rigenerazione di /etc/profile.env">
<i>env-update</i>
			</pre>
				<p>A questo punto, potete effettuare un nuovo login o eseguire
			<c>source /etc/profile.</c>
			</p>
				<p>Nel caso di un utente normale, può essere utilizzato <c>java-config --set-user-vm</c>,
			che crea <path>$HOME/.gentoo/java-env </path> con tutte le variabile di ambiente necessarie.
			Normalmente si inserisce una riga all'interno dello script di avvio della shell che effettui
			un source della del file in questione (<path>$HOME/.zshenv </path> nel caso dell'autore).</p>
			</body>
		</section>
		<section>
			<title>Configurare un CLASSPATH predefinito</title>
			<body>
				<p><c>java-config</c> può essere utilizzato per configurare un CLASSPATH di sistema,
			e ovviamente un CLASSPATH specifico per ogni utente.
			</p>
				<p>Per prima cosa si possono visiualizzare tutte le librerie java che
			potrebbe essere utile inserire all'interno del CLASSPATH, in questo modo:
			</p>
				<pre caption="Lista delle librerie disponibili">
<i>java-config --list-available-packages</i>
[ant] No description (/usr/share/ant/classpath.env)
[java-gnome] No description (/usr/share/java-gnome/classpath.env)
[java-gtk] No description (/usr/share/java-gtk/classpath.env)
[log4j] "" (/usr/share/log4j/package.env)
			</pre>
				<note>Nessuno di questi pacchetti ha una propria descrizione, ma verrà 
			implementato in un futuro non troppo lontano. 
			</note>
				<p>Ancora una volta, il nome tra parentesi <path>"[]"</path> è
			l'identificativo da fornire a <c>java-config --set-system-classpath</c>,
			in questo modo: 
			</p>
				<pre caption="Impostare il classpath">
<i>java-config --set-system-classpath=log4j,java-gtk,java-gnome</i>
			</pre>
				<note>La directory corrente (.) non sarà parte del classpath di sistema ma
			può essere aggiunta nel profilo dell'utente root. 
			</note>
				<p>Di nuovo, si può eseguire <c>env-update</c> per aggiornare le variabili di sistema,
			ed effettuare un nuovo login o un source <path>/etc/profile</path>
			</p>
				<p>Per gli utenti normali, <c>java-config --set-user-classpath</c> crea
			 <path> $HOME/.gentoo/java-env-classpath</path>, che viene automaticamente incluso
			 da <path>$HOME/.gentoo/java-env</path>. 
			</p>
			</body>
		</section>
	</chapter>
	<chapter>
		<title>Risorse aggiuntive</title>
		<section>
			<title>Risorse off-line</title>
			<body>
				<ul>
					<li>Pagine man di java-config </li>
					<li>
						<c>java-config --help</c>
					</li>
					<li>Lo script <path>/usr/bin/java-config</path></li>
				</ul>
			</body>
		</section>
		<section>
			<title>Risorse on-line</title>
			<body>
				<ul>
					<li>Gli archivi delle mailing list <uri link="http://lists.gentoo.org/pipermail/gentoo-dev/">
				gentoo-dev </uri>, 
				<uri link="http://lists.gentoo.org/pipermail/gentoo-user/"> gentoo-user
				</uri></li>
					<li>#gentoo and #gentoo-java on irc.freenode.net</li>
				</ul>
			</body>
		</section>
	</chapter>
	<chapter>
		<title>Avvertimenti</title>
		<section>
			<title>Generale</title>
			<body>
				<p>Se viene selezioanta una JRE come VM di default, potrebbe non essere
			sempre disponibile il comando <c>javac</c>, se non dopo aver creato un link
			simbolico al comando in questione
			</p>
				<p>Jikes potrebbe essere utilizzato per compilare i pacchetti più grandi,
			se disponibile. Con il passare del tempo, speriamo di poter compilare
			tutti i pacchetti che dipendono da Java con Jikes, e così facendo alcune
			dipendenze da JDK potranno essere sostituite da dipendenze di JRE.</p>
				<p>Con alcune versioni di Portage, effettuare un 
			<c>emerge --world update</c> comporta l'installazione DI JDK
			indipendemente dal fatto che sia stato installato in precedenza. Questo è
			un baco conosciuto risolto nelle ultime versioni di Portage.
			</p>
			</body>
		</section>
	</chapter>
</guide>
