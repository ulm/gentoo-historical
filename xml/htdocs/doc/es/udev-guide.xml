<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/udev-guide.xml,v 1.1 2004/03/18 20:06:03 bass Exp $ -->
<guide link="/doc/es/udev-guide.xml">
  <title>Guía udev en Gentoo</title>
  <author title="Author">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
  </author>
  <author title="Traductor">
    <mail link="afcapel@supercable.es">Alberto F. Capel</mail>
  </author>
  <author title="Editor">
    <mail link="bass@gentoo.org">José Alberto Suárez López</mail>
  </author>
  <abstract>
Este documente explica que es udev y como puedes usar udev de acuerdo con tus necesidades.
</abstract>
  <license/>
  <version>0.4</version>
  <date>March 15, 2004</date>
  <chapter>
    <title>¿Que es udev?</title>
    <section>
      <title>El directorio /dev </title>
      <body>
        <p>
Cuando los usuarios de Linux hablan acerca del hardware de sus sistemas cerca
de gente que cree que Linux es algún tipo de virus o una marca de café, los términos 
como "barra dev barra algo" provoca, sin duda, que te miren de forma rara. Pero para el usuario afortunado
(y eso te incluye a ti) usar <path>/dev/hda1</path> es solo una forma rápida de explicar que 
estamos refiriendonos a la primera partición del primer disco IDE maestro.¿O no?

</p>
        <p>
Todos nosotros sabemos lo que es un archivo de dispositivo. Algunos incluso saben por qué cuando miramos un
poco más de cerca  la salida de <c>ls -l</c> en  <path>/dev</path> los archivos de dispositivo muestran 
unos números especiales. Pero pero lo que siempre damos por sentado es que el primer disco IDE se llama 
<path>/dev/hda</path>. Puede que no lo parezca, pero esto es un fallo de diseño.
</p>
        <p>
Piensa en los dispositivos que se pueden enchufar en caliente como los USB, IEEE1394,... 
 ¿Cuál es el primer dispositivo? ¿Y por cuánto tiempo? ¿Cómo se llamaran los otros dispositivos
cuando el primero desaparezca? ¿Y cómo afectará esto a la transacciones en curso? ¿No sería gracioso
que un trabajo de impresión se cambiase de repente desde tu flamante impresora nueva a la 
agonizante impresora matricial solo porque tu madre decidió quitar el enchufe de la impresora de
tinta que resultaba ser la primera impresora?
</p>
        <p>
Cambia a <e>udev</e>. 
Los objetivos del proyecto udev son a la vez interesantes y necesarios:
</p>
        <ul>
          <li>Funciona en espacio de usuario</li>
          <li>Crea/borra archivos de dispositivo dinámicamente</li>
          <li>Proporciona unos nombres consistentes</li>
          <li>Proporciona una API en el espacio de usuario</li>
        </ul>
        <p>
Para proporcionar estas características, udev se desarrolla en tres proyectos 
separados: <e>namedev</e>, <e>libsysfs</e> y, por supuesto, <e>udev</e>.
</p>
      </body>
    </section>
    <section>
      <title>namedev</title>
      <body>
        <p>
Namedev permite definir nombres de dispositivo independientemente del programa
udev. Esto permite políticas y esquemas de asignación de nombres flexibles  
desarrollados por entidades diferentes. Este subsistema de asignación de nombres
proporciona una interfaz estándar que udev puede usar.
</p>
        <p>
Actualmente solo se proporciona un esquema de asignación de nombres con udev; el 
que proporciona LANANA, usado por la mayoría de sistemas Linux actualmente y 
por tanto muy apropiado para la mayoría de usuarios de Linux.
</p>
        <p>
Namedev usa un procedimiento en cinco pasos para averiguar el nombre de un 
dispositivo dado. Si el nombre se encuentra en uno de los pasos dados, se usa
ese nombre. Los pasos son:
</p>
        <ul>
          <li>etiqueta o número de serie</li>
          <li>número de bus del dispositivo</li>
          <li>topología de bus</li>
          <li>nombre dado estéticamente</li>
          <li>nombre proporcionado por el núcleo</li>
        </ul>
        <p>
El paso de <e>etiqueta o número de serie</e> comprueba si el dispositvo tiene
un identificador único. Por ejemplo, los dispositivos USB tienen un número de serie
USB único; los dispositivos scsi tienen un único UUID. Si namedev encuentra una correspondencia
entre este número único y un archivo de configuración dado, se usa el nombre proporcionado por
el archivo de configuración.
</p>
        <p>
El paso del <e>número de bus del dispositivo </e> comprueba el número de bus 
del dispositivo. Para dispositivos que no se pueden enchufar en caliente este procedimiento
es suficiente para identificar un dispositivo de hardware. Por ejemplo los númerod de bus PCI
rara vez cambian durante la vida de un sistema. De nuevo, si namedev encuentra una correlación entre
esta posición y un archivo de configuración dado, se usa el nombre proporcionado por el 
archivo de configuración.
</p>
        <p>
Así mismo, <e>la topología de bus</e> es una forma estética de definir 
dispositivos mientras el usuario no los cambie. Cuando la posición de los
dispositivos concuerda con la configuración proporcionada por el usuario, el nombre
que la acompañaa es usado.
 </p>
        <p>
El cuarto paso <e>nombres dados estéticamente</e>, es simplemente una sustitución de 
cadenas. Cuando un nombre del núcleo (el nombre por defecto) concuerda con una cadena dada,
se usa el nombre sustituto. 

</p>
        <p>
El paso final (<e>nombre proporcionado por el núcleo</e> es una solución para cuando
nada de lo anterior funciona: toma el nombre por defecto que proporciona el núcleo.
En la mayoría de los casos esto es suficiente ya que concuerda con los nombres de dispositivo
usados en los sistemas Linux actuales.
</p>
      </body>
    </section>
    <section>
      <title>libsysfs</title>
      <body>
        <p>
udev interacciona con el núcleo a través de pseudo sistema de archivos sysfs. El proyecto
libsysfs proporciona una API común para acceder de forma genérica
 a la información dada por el sistema de archivos sysfs. Esto permite consultar
 todo tipo de hardware sin tener que hacer suposiciones acerca del tipo de hardware. 
</p>
      </body>
    </section>
    <section>
      <title>udev</title>
      <body>
        <p>
Cada vez que el núcleo detecta una actualización en la estructura de dispositivos, llama 
al programa <path>/sbin/hotplug/</path>. Hotplug ejecuta las aplicaciones enlazadas en 
el directorio <path>/etc/hotplug.d/default</path> donde además se encuentra un softlink
(enlace blando) a la aplicación udev. Hotplug dirige la información dada por el kernel 
a la aplicación udev que realiza las acciones necesarias (creando o borrando archivos) en la estructura de
 <path>/dev/</path>.

</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Usando udev en Gentoo</title>
    <section>
      <title>Requisitos</title>
      <body>
        <p>
Para poder usar udev en Gentoo, tienes que instalar
<c>sys-apps/baselayout-1.8.6.13-r1</c> o posterior y <c>sys-fs/udev</c>
Si es necesario edita <path>/etc/portage/package.keywords</path> de modo que
que el sistema use el árbol ~ARCH para <c>sys-fs/udev</c> 
</p>
        <pre caption="/etc/portage/package.keywords">
sys-fs/udev ~x86
</pre>
        <p>
Si no lo has hecho antes, además instala  <c>sys-apps/hotplug</c>.
</p>
        <pre caption="Instalar las herramientas necesarias">
# <i>emerge baselayout udev hotplug</i>
</pre>
        <p>
En cuanto al núcleo, si estas usando la configuración por defecto dada por <c>genkernel</c>
entonces ya lo tienes configurado. En otro caso asegurate de activar las siguientes opciones:
</p>
        <pre caption="Opciones del núcleo requeridas">
Bus options (PCI, PCMCIA, EISA, MCA, ISA) ---&gt;
  [*] Support for hot-pluggable devices

File systems ---&gt;
  Pseudo filesystems ---&gt;
    [*] /proc file system support
    [*] /dev/pts file system for Unix98 PTYs
    [*] Virtual memory file system support (former shm fs)
</pre>
        <p>
Si quieres, puedes dejar <c>/dev file system support (OBSOLETE)</c> activo.
</p>
      </body>
    </section>
    <section>
      <title>Configuración</title>
      <body>
        <p>
Si quieres usar los cambios que Gentoo añade a udev para hacerte la vida
más fácil, entonces no sigas leyendo. Está todo configurado. Los scripts de
inicio ejecutarán el demonio devfsd durante el arranque. 
</p>
        <p>
Pero si eres un valiente que quieres ejecutar un sistema solo con udev, sin cambios,
tal y como se pretende en el desarrollo de udev (incluyendo la dificultades de 
perder nodos de dispositivos que udev no soporta todavía), por supuesto, sigue leyendo :)
</p>
        <warn><e>No</e> te quejes si algo va mal. !Vas a eliminar el duro trabajo de muchos desarrolladores
de Gentoo que cambiaron los scripts de inicio para conseguir que udev funcione bein con Gentoo! 
</warn>
        <p>
Lo primero de todo, desactivamos las reglas que guarden los nodos de archivo.
Desde <c>sys-apps/baselayout-1.8.6.13-r1</c> en adelante, puedes editar la variable
<c>RC_DEVICE_TARBALL</c> en  <path>/etc/conf.d/rc</path> y definirla 
como <c>no</c>
</p>
        <pre caption="/etc/conf.d/rc">
RC_DEVICE_TARBALL="no"
</pre>
        <p>
Además necesitamos crear manualmente algunos nodos de dispositivo para que nuestro sistema
pueda arrancar:
</p>
        <pre caption="Creando los archivos de nodos de dispositivo necesarios">
# <i>mknod -m 660 /dev/console c 5 1</i>
# <i>mknod -m 660 /dev/null c 1 3</i>
</pre>
        <p>
Si tienes incluido soporte para devfs en el núcleo, puedes desactivarlo desde la 
configuración del cargador de arranque: añade <c>devfs=nomount</c> como parámentro
del núcleo. 
</p>
        <p>
Si quieres usar devfs y desactivar udev, añade <c>gentoo=noudev</c> como parámetros del núcleo.

</p>
      </body>
    </section>
    <section>
      <title>Temas de actualidad</title>
      <body>
        <p>
Por favor, informa de <e>correcciones temporales</e> a los temas actualidad al
Proyecto de Documentación de Gentoo usando el sitio web <uri link="http://bugs.gentoo.org">Gentoo 
Bugzilla</uri>   
</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Recursos y reconocimientos</title>
    <section>
      <body>
        <p>
La charla sobre udev en el Linux Symposium (Ottawa, Ontario Canada - 2003) dada por 
Greg Kroah-Hartman (IBM Corporation) proporcionó un sólido entendimiento acerca de la 
applicación udev.
</p>
        <p><uri link="http://webpages.charter.net/decibelshelp/LinuxHelp_UDEVPrimer.html">Decibel's 
UDEV Primer</uri> es un documento que trata en profundidad acerca de udev y Gentoo (en inglés).
</p>
      </body>
    </section>
  </chapter>
</guide>
