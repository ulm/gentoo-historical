<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/nagios-guide.xml,v 1.1 2008/08/13 13:29:06 chiguire Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide disclaimer="draft">
<title>Monitoreo de Sistemas Gentoo con Nagios</title>

<author title="Author">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Traductor">
  <mail link="chiguire"/>
</author>

<abstract>
La herramienta Nagios es una opción popular entre los distintos
usuarios de software libre a la hora de monitorear sistemas y
redes. Esta guía ayuda descubrir e integrar Nagios con una
infraestuctura Gentoo existente.
</abstract>

<license/>

<version>0.1</version>
<date>2008-07-06</date>

<chapter>
<title>Introducción</title>
<section>
<title>Monitoreando un Sistema</title>
<body>

<p>
Los usuarios de sistemas únicos generalmente no necesitan herramientas
para ayudarlos a identificar el estado de su sistema. Sin embargo, al
tener que administrar más sistemas, necesitaremos una vista a vuelo de
pájaro de su estado de salud: ¿tendrán las particiones suficiente
espacio libre?, ¿estará sobrecargado el CPU?, ¿cuántos usuarios
estarán conectados?, ¿están estos sistemas actualizados respecto a
seguridad?, etc.
</p>

<p>
Las herramientas para monitorear sistemas, como el software Nagios que
discutimos en esta guía, ofrecen una forma sencilla de manejar
distintos datos del sistema. En entornos mayores, como los
empresariales, estas herramientas sumarizan datos de varios sistemas
en una única ubicación, permitiendo el manejo del monitoreo de manera
centralizada.
</p>
</body>
</section>

<section>
<title>Acerca de Nagios</title>
<body>

<p>
El software <uri link="http://www.nagios.org">Nagios</uri> es una
herramienta de software popular para monitorear anfitriones, servicios
y redes bajo Unix (aunque puede también puede capturar datos de los
sistemas operativos de la familia Windows de Microsoft). Soporta:
</p>

<ul>
  <li>
    la obtención de datos acerca de recursos de sistemas locales, tales
    como espacio en disco, uso del CPU, consumo de memoria, ...
  </li>
  <li>
    descubrimiento de la disponibilidad de servicios (tales como SSH,
    SMTP y otros protocolos),
  </li>
  <li>
    descubrimiento de redes fuera de línea (cuando un grupo de
    sistemas de reconocida disponibilidad aparecen fuera de alcance),
  </li>
</ul>

<p>
y más.
</p>

<p>
Básicamente, el software Nagios consiste de una herramienta central
(que maneja los datos), un módulo de servidor web (que maneja el
despliegue de datos) y un conjunto de plugins (que recolectan los
datos y los envián al sistema central).
</p>
</body>
</section>

<section>
<title>Acerca de este Documento</title>
<body>

<p>
El propósito principal de este documento es presentar el software
Nagios a los usuarios de Gentoo y explicar cómo integrarlo dentro del
entorno Gentoo. La guía no está supuesta de describir Nagios en gran
detalle - esta función se la dejamos a los escritores de la
documentación de Nagios.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Configurando Nagios</title>
<section>
<title>Instalando Nagios</title>
<body>

<p>
Antes de comenzar a instalar Nagios, debemos decidir cuál será el
sistema maestro (donde instalar Nagios completo y donde almacenar
todos los datos) y qué clase de datos queremos obtener. No
instalaremos Nagios en todos los sistemas a monitorear, más bien
lo haremos solo en el sistema maestro y los **TODO** en los sistemas
desde donde recibiremos los datos.
</p>

<p>
Instalaremos el software Nagios en el servidor maestro:
</p>

<warn>
Nagios 3 todavía está enmascarado por plataforma (~arch masked), así
que el primer paso es desenmascarar.
</warn>

<pre caption="Instalando Nagios">
# <i>emerge nagios</i>
</pre>

<p>
Siga las instrucciones que proporciona el ebuild al final de la
instalación (acerca de agregar <c>nagios</c> al nivel de ejecución
activo, sobre la configuración del servidor web, accesos de lectura y
más).
</p>

<p>
De veras. ¡Léalas!
</p>

<!-- TODO directory structure: plugins and so forth -->

</body>
</section>

<section>
<title>Restringiendo el Acceso a la interfaz web de Nagios</title>
<body>

<p>
El interfaz web de Nagios permite la ejecución de comandos en los
sistemas monitoreados por los plugins. Por esto (y también porque los
datos podrían contener información de naturaleza sensible) es mejor
restringir el acceso a este interfaz.
</p>

<p>
Para eso introduciremos dos restricciones de acceso: uno a nivel de IP
(qué sistemas pueden conectarse al interfaz) y otro con una
autentificación básica (usando un esquema de usuario/contraseña).
</p>

<p>
Primero, modificamos el archivo
<path>/etc/apache2/modules/99_nagios3.conf</path> y cambiamos las
definiciones <c>allow from</c>:
</p>

<pre caption="Definiciones Allow from">
<comment>(Este ejemplo permite acceso solo desde el anfitrión y la red local)</comment>
Order allow,deny
Allow from 127.0.0.1 192.168.1.1/24
</pre>

<p>
Luego, cree una tabla de autorización Apache para definir los usuarios
con acceso al interfaz y su autorización. Este archivo se llama
<path>.htaccess</path> y contiene la ubicación donde de la información
de autentificación.
</p>

<pre caption="Ejemplo de archivo .htaccess">
AuthName "Nagios Access"
AuthType Basic
AuthUserFile /etc/nagios/auth.users
Require valid-user
</pre>

<p>
Coloque este archivo dentro de los directorios
<path>/usr/share/nagios/htdocs</path> y
<path>/usr/lib/nagios/cgi-bin</path>.
</p>

<p>
Cree el archivo <path>/etc/nagios/auth.users</path> con las
credenciales apropiadas por usuario. Por defecto, el ebuild de nagios
define un único usuario llamado <c>nagiosadmin</c>. Crearemos este
usuario primero:
</p>

<pre caption="Creando el usuario nagiosadmin">
# <i>htpasswd2 -c /etc/nagios/auth.users nagiosadmin</i>
</pre>
</body>
</section>

<section>
<title>Obteniendo Acceso a Nagios</title>
<body>

<p>
Una vez instaladas Nagios y sus dependencias, inicie Apache y Nagios:
</p>

<pre caption="Iniciando los servicios">
# <i>/etc/init.d/nagios start</i>
# <i>/etc/init.d/apache2 start</i>
</pre>

<p>
Ahora con el navegador, conéctese a <uri
link="http://localhost/nagios">http://localhost/nagios</uri>. Haga
logon como el usuario <c>nagiosadmin</c> y navegue a la página <e>Host
Detail</e>. Allí debería poder ver los datos del monitoreo del sistema
local.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Instalando los Demonios Clientes</title>
<section>
<title>Introducción</title>
<body>

<p>
Existen varias maneras de monitorear anfitriones remotos.
</p>

<ol>
  <li>
    Usando el demonio <e>NRPE</e> en el anfitrión remoto y que Nagios
    se comunique con él por medio del plugin <path>check_nrpe</path>
  </li>
  <li>
    Usando una conexión SSH sin contraseña para ejecutar comandos remotamente
  </li>
  <li>
    Capturando eventos SNMP y creando alertas con Nagios
  </li>
</ol>

<p>
Nos concentraremos en el método NRPE, que es el más popular y
dejaremos a los demás métodos como ejercicios interesantes.
</p>
</body>
</section>

<section>
<title>Instalando NRPE</title>
<body>

<p>
Con NRPE cada anfitrión remoto corre un instancia de un demonio (el
demonio NRPE), que permite al sistema central Nagios interrogar
respecto a ciertos datos. Se puede ejecutar el demonio NRPE por sí
mismo o por medio de un programa inetd. Dejaremos el método inetd como
un ejercicio para el lector y usaremos como ejemplo la ejecución de
NRPE por sí mismo.
</p>

<p>
Primero, instalar el plugin NRPE:
</p>

<pre caption="Instalando el plugin NRPE">
# <i>emerge nagios-nrpe</i>
</pre>

<p>
Luego modifique el archivo <path>/etc/nagios/nrpe.cfg</path> para
permitirle al sistema central Nagios acceso al demonio NRPE y
personalizar la instalación a gusto. Otro cambio importante al archivo
<path>nrpe.cfg</path> es la lista de comandos soportados por NRPE. Por
ejemplo, para usar la versión 2.12 de <c>nagios-nrpe</c> con Nagios 3,
deberá cambiar la trayectoria <path>/usr/nagios/libexec</path> a
<path>/usr/lib/nagios/plugins</path>. Finalmente, ejecute el demonio
NRPE:
</p>

<pre caption="Ejecutando el demonio NRPE">
# <i>/etc/init.d/nrpe start</i>
</pre>

<p>
De último debemos configurar el sistema central Nagios para conectarse
a esta instancia particular de NRPE y solicitar los datos
requeridos. A modo de presentación de la sintaxis de los objetos
Nagios, nuestra próxima sección cubrirá esto un poco más
detalladamente.
</p>
</body>
</section>

<section>
<title>Configurando un Anfitrión Remoto</title>
<body>

<note>
El siguiente tutorial práctico es solo un ejemplo para presentarle al
usuario el modelo de objetos según Nagios. No tome esto como un
ejemplo de la mejor praxis de configuración de Nagios.
</note>

<p>
Primero, modifique <path>/etc/nagios/nagios.cfg</path> y coloque una
directiva <c>cfg_dir</c>. Esto ordenará a Nagios leer todos los
archivos de configuración de objetos en el directorio especificado -
en nuestro ejemplo el directorio contendrá las definiciones de los
sistemas remotos.
</p>

<pre caption="Modificando el archivo /etc/nagios/nagios.cfg">
cfg_dir=/etc/nagios/objects/remote
</pre>

<p>
Luego cree el directorio y comienze con el primer archivo,
<path>nrpe-command.cfg</path>. En este archivo configuraremos un
comando Nagios llamado <c>check_nrpe</c> que usaremos para conectar a
un plugin (identificado por <c>$ARG1$</c>) en un sistema remoto
(identificado por <c>$HOSTADDRESS$</c>). La variable <c>$USER1$</c> es
un puntero por defecto al directorio de instalación de Nagios (por
ejemplo <path>/usr/nagios/libexec</path>).
</p>

<pre caption="Definiendo el comando check_nrpe">
# <i>nano /etc/nagios/objects/remote/nrpe-command.cfg</i>

define command {
  command_name check_nrpe
  command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
}
</pre>

<p>
Luego, creamos el archivo <path>nrpe-hosts.cfg</path> donde definimos
los anfitrion(es) remotos a monitorear. En este ejemplo definiremos
dos:
</p>

<pre caption="Definiendo dos anfitriones remotos">
# <i>nano /etc/nagios/objects/remote/nrpe-hosts.cfg</i>

define host {
  use linux-server
  host_name webber
  alias Gentoo Linux Web Server
  address 192.168.2.1
}

define host {
  use linux-server
  host_name isync
  alias Gentoo Linux RSync server
  address 192.168.2.2
}
</pre>

<p>
Finalmente definimos los servicios que queremos revisar en estos
anfitriones. En el ejemplo chequearemos la carga del sistema y el uso
de almacenamiento en disco.
</p>

<pre caption="Definiendo los servicios a revisar">
# <i>nano /etc/nagios/objects/remote/nrpe-services.cfg</i>

define service {
  use generic-service
  host_name webber,isync
  service_description Current Load
  check_command check_nrpe!check_load
}

define service {
  use generic-service
  host_name webber,isync
  service_description Root Partition
  check_command check_nrpe!check_disk
}
</pre>

<p>
Bueno, eso es todo. Ahora al revisar los detalles de servicios en el
sitio de monitoreo, veremos que los anfitriones remotos están
conectados y transmitiendo sus datos al servidor Nagios.
</p>
</body>
</section>

<section>
<title>Usando una Conexión SSH sin Contraseña</title>
<body>

<p>
Tal como hicimos creando el comando <c>check_nrpe</c>, podemos crear
un comando que ejecute un comando remotamente por medio de una
conexión SSH sin contraseña. Dejamos esto como un interesante
ejercicio al lector.
</p>

<p>
Algunos datos al respecto:
</p>

<ul>
  <li>
    Asegúrese de establecer la conexión SSH sin contraseña para un
    usuario dedicado (y que definitivamente no sea el usuario root) -
    de todas formas la mayoría de las revisiones no requieren
    privilegios de superusuario.
  </li>
  <li>
    La creación de una conexión SSH sin contraseña puede hacerse con
    <c>ssh-keygen</c> y luego instalándola en el sistema destino
    agregando la clave pública al archivo
    <path>.ssh/authorized_keys</path>
  </li>
</ul>
</body>
</section>
</chapter>

<chapter>
<title>Más Recursos</title>
<section>
<title>Agregando Revisiones Específicas a Gentoo</title>
<body>

<p>
Es bastante sencillo extender la funcionalidad de Nagios para incluir
chequeos específicas a Gentoo, tales como los de seguridad (GLSAs). El
desarrollador Gentoo Wolfram Schlich tiene <uri
link="http://dev.gentoo.org/~wschlich/misc/nagios/nagios-plugins-extra/nagios-plugins-extra-4/plugins/">disponible</uri>
el guión <c>check_glsa.sh</c>, entre otros.
</p>
</body>
</section>

<section>
<title>Recursos Nagios</title>
<body>

<ul>
  <li>
    <uri>http://www.nagios.org</uri> es el sitio, web oficial de Nagios
  </li>
  <li>
    <uri>http://www.nagiosexchange.org</uri> es donde se pueden
    encontrar plugins y guiones para Nagios
  </li>
  <li>
    <uri>http://www.nagiosforge.org</uri>, donde los desarrolladores
    albergan proyectos para agregarle funcionalidad a Nagios
  </li>
  <li>
    <uri>http://www.nagioswiki.org</uri>, para más información y
    tutoriales acerca de Nagios
  </li>
</ul>
</body>
</section>
</chapter>
</guide>
