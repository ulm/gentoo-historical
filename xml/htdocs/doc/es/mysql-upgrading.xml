<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/mysql-upgrading.xml,v 1.13 2011/09/06 17:48:53 nimiux Exp $ -->

<guide lang="es">
<title>Guía de actualización a MySQL 4.* o 5.0.*</title>

<author title="Autor">
  <mail link="citizen428@gentoo.org">Michael Kohl</mail>
</author>
<author title="Autor">
  <mail link="vivo@gentoo.org">Francesco Riosa</mail>
</author>
<author title="Traductor">
  <mail link="enrique@barbeito.org">Enrique Barbeito García</mail>
</author>

<abstract>
El equipo de MySQL se enorgullece en anunciar que MySQL 5.0 estará pronto en
el árbol estable de Gentoo. Este documento describe cómo actualizar a MySQL 4.*
y a 5.0.*.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.17</version>
<date>2007-06-04</date>

<chapter>
<title>Actualización convencional, indicada para migrar desde la 4.1 a la 5.0</title>
<section>
<body>

<p>
En la versión 4.1 el motor de almacenamiento MyISAM era ya suficientemente
maduro para permitir una actualización total a la principal versión de MySQL.
</p>

<note>
Esto no es cierto para tablas MERGE. Probablemente se tope con problemas si
intenta una actualización directa para este (raramente utilizado) tipo de
tabla. Debería volcar y recrear estas tablas y restaurar sus contenidos en el
proceso de actualización. Si no está seguro, debería empezar por la sección
<uri link="#doc_chap2">Actualizar desde versiones antiguas de MySQL</uri>.
</note>

<p>
Para llevar a cabo este paso, se requiere de dos líneas de comando ya que los
bloqueos pertenecen a la sesión de mysql.
</p>

<pre caption="Actualización convencional desde la 4.1 a la 5.0.*">
# <i>quickpkg dev-db/mysql</i>
# <i>alias MYSQL="mysql --user=root --password=</i><comment>'su_contraseña'</comment><i>"</i>
# <i>DATADIR=$(MYSQL --batch --raw --silent --skip-column-names \</i>
     <i>--execute='SHOW variables LIKE "datadir";' \</i>
     <i>| sed -e 's|datadir[ \t]||')</i>

<comment>(El próximo paso debería llevarse a cabo en la segunda línea de comandos)</comment>
# <i>mysql --user=root --password=</i><comment>'su_contraseña'</comment>
mysql&gt; <i>FLUSH TABLES WITH READ LOCK;</i>

<comment>(Regrese a la primera línea de comandos para ejecutar el siguiente comando)</comment>
# <i>tar -cjpvf ~/mysql.$(date +%F"T"%H-%M).tar.bz2 \</i>
     <i>/etc/conf.d/mysql /etc/mysql/my.cnf "${DATADIR}"</i>

<comment>(Los siguientes comandos deberían realizarse en la segunda línea de comandos)</comment>
mysql&gt; <i>UNLOCK TABLES;</i>
mysql&gt; <i>quit</i>

<comment>(Regrese a la primera línea de comandos para el resto de la actualización)</comment>
# <i>tar -tjvf ~/mysql.*.tar.bz2</i>
# <i>emerge -av "&gt;dev-db/mysql-5.0"</i>
# <i>dispatch-conf</i>
# <i>revdep-rebuild</i>
# <i>/etc/init.d/mysql restart</i>
# <i>mysql_upgrade_shell --user=root --password=</i><comment>'su_contraseña'</comment><i> \</i>
     <i>--protocol=tcp --datadir="${DATADIR}"</i>
# <i>/etc/init.d/mysql restart</i>
# <i>unset DATADIR</i>
# <i>unalias MYSQL</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Actualizar desde versiones antiguas de MySQL</title>
<section>
<body>

<p>
Los usuarios que actualicen desde una versión anterior (&lt;4.0.24) de MySQL
tendrán, primero, que instalar MySQL 4.0.25. Si ya está utilizando una versión
más reciente, puede saltarse esta sección y continuar con la
<uri link="#backup">siguiente</uri>.
</p>

<pre caption="Actualización simple">
# <i>emerge -av --buildpkg "&lt;mysql-4.1"</i>
</pre>

</body>
</section>
</chapter>

<chapter id="backup">
<title>Hacer una copia de seguridad de sus datos actuales</title>
<section>
<body>

<impo>
Los valores contenidos en las claves primarias son manejados de distinta forma
en varias versiones de MySQL; eche un vistazo al <uri
link="http://bugs.gentoo.org/108502">bug #108502</uri> para obtener más
información. Es muy recomendable que examine sus tablas en busca de valores "0"
(cero) o menores y actualizarlos con un valor mayor o igual a "1".
</impo>

<p>
Una de las tareas más importantes que todo administrador de bases de datos
tiene que llevar a cabo es la de respaldar los datos. Allá vamos:
</p>

<pre caption="Volcado de todas las bases de datos">
# <i>mysqldump \</i>
  <i>-uroot \</i>
  <i>--password=</i><comment>su_contraseña</comment><i> \</i>
  <i>-hlocalhost \</i>
  <i>--all-databases \</i>
  <i>--opt \</i>
  <i>--allow-keywords \</i>
  <i>--flush-logs \</i>
  <i>--hex-blob \</i>
  <i>--master-data \</i>
  <i>--max_allowed_packet=16M \</i>
  <i>--quote-names \</i>
  <i>--result-file=BACKUP_MYSQL_4.0.SQL</i>
</pre>

<p>
Ahora debería tener un fichero llamado <path>BACKUP_MYSQL_4.0.SQL</path> con el
que, más tarde, poder usar para regenerar sus datos. Los datos estarán
descritos en el dialecto MySQL del lenguaje SQL (Structured Query Language).
</p>

<p>
También es ahora un buen momento para comprobar si la copia de seguridad que ha
creado funciona.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Actualizar desde versiones recientes de MySQL</title>
<section>
<body>

<p>
Si se ha saltado el primer paso, ahora tiene que crear un paquete de respaldo
(del servidor de bases de datos, no de los datos) de la actual versión
instalada.
</p>

<pre caption="Paquete de respaldo binario">
# <i>quickpkg dev-db/mysql</i>
</pre>

<p>
Ahora es el momento de eliminar la actual versión y todos sus datos:
</p>

<pre caption="Desinstalar MySQL">
# <i>/etc/init.d/mysql stop</i>
# <i>emerge -C mysql</i>
# <i>tar cjpvf ~/mysql.$(date +%F"T"%H-%M).tar.bz2 /etc/mysql/my.cnf /var/lib/mysql/</i>
# <i>ls -l ~/mysql.*</i>
# <i>rm -rf /var/lib/mysql/ /var/log/mysql</i>
</pre>

<note>
Deberían haber ahora dos copias de seguridad: un fichero SQL, portable entre
varias versiones de MySQL, y otro que le permitirá restaurar rápidamente su
servidor de base de datos. Esto posteriormente se cubrirá con mayor detalle en
este documento.
</note>

<p>
Una vez se haya librado de su antigua instalación de MySQL, puede instalar la
nueva versión. Tenga en cuenta que se necesita <c>revdep-rebuild</c> para
reconstruir las dependencias de MySQL.
</p>

<pre caption="Actualizar los binarios">
# <i>emerge -av "&gt;mysql-4.1"</i>
<comment>(Actualice sus ficheros de configuración, también puede usar
dispatch-conf)</comment>
# <i>etc-update</i>
# <i>revdep-rebuild</i>
</pre>

<p>
Ahora configure la reciente versión instalada de MySQL y reinicie el demonio:
</p>

<pre caption="Configurar MySQL 4.1">
# <i>emerge --config =mysql-4.1.<comment>&lt;micro_version&gt;</comment></i>
# <i>/etc/init.d/mysql start</i>
</pre>

<p>
Por último, puede importar la copia de seguridad que creó en el paso #2.
</p>

<impo>
El fichero <path>/etc/mysql/my.cnf</path> original activa el log binario
(<c>log-bin</c>) por defecto. Esto registrará cada una de las transacciones que
modifiquen datos. Si se ejecuta en una gran base de datos (1GB o más)
podría generar ficheros extremadamente grandes consumiendo muy rápidamente el
espacio libre del disco. Si tiene poco espacio, puede ser buena idea
deshabilitar el log binario.
</impo>

<impo>
En MySQL 4.1 y posteriores, el conjunto de caracteres predeterminado es
<c>utf8</c>. Si los datos contienen caracteres <e>no</e>-ASCII, puede que
quiera preservar el conjunto de caracteres por defecto de la base de datos,
reemplazando todas las ocurrencias de <c>utf8</c> por <c>latin1</c> en el
fichero de configuración <path>/etc/mysql/my.cnf</path>. Puede encontrar más
información en el capítulo de <uri link="#On_charset_conversion">Cambio del
conjunto de caracteres</uri>.
</impo>

<impo>
La base de datos <c>mysql</c> administrativa que contiene nombres de usuario,
contraseñas, entre otras cosas, está y <b>debe</b> estar codificada en utf8.
</impo>

<p>
Las versiones más antiguas de mysqldump puede que exporten tablas en el orden
equivocado cuando hayan claves foráneas de por medio. Para solucionar este
problema, rodee el SQL con las siguientes declaraciones:
</p>

<pre caption="Corregir la comprobación de claves foráneas">
SET FOREIGN_KEY_CHECKS=0
SET FOREIGN_KEY_CHECKS=1
</pre>

<p>
A continuación, importe la copia de seguridad.
</p>

<pre caption="Importar la copia de seguridad de los datos SQL">
# <i>cat BACKUP_MYSQL_4.0.SQL \</i>
     <i>| mysql \</i>
     <i>-uroot \</i>
     <i>--password=</i><comment>su_contraseña</comment><i> \</i>
     <i>-hlocalhost \</i>
     <i>--max_allowed_packet=16M</i>

# <i>mysql_fix_privilege_tables \</i>
     <i>--defaults-file=/etc/mysql/my.cnf \</i>
     <i>--user=root \</i>
     <i>--password=</i><comment>su_contraseña</comment><i></i>
</pre>

<p>
Si ahora reinicia su demonio de MySQL y todo va como se espera, ya tiene pues
una completa instalación funcional de la versión 4.1.x.
</p>

<pre caption="Reiniciar el demonio de MySQL">
# <i>/etc/init.d/mysql restart</i>
</pre>

<p>
Si se topa con algún problema durante el proceso de instalación, por favor,
informe del mismo en <uri link="https://bugs.gentoo.org">Bugzilla</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Recuperar la antigua instalación de MySQL 4.0</title>
<section>
<body>

<p>
Si no está a gusto con MySQL 4.1, es posible volver a la versión 4.0.
</p>

<pre caption="Volver a la anterior versión">
# <i>/etc/init.d/mysql stop</i>
# <i>emerge -C mysql</i>
# <i>rm -rf /var/lib/mysql/ /var/log/mysql</i>
# <i>emerge --usepkgonly "&lt;mysql-4.1"</i>
<comment>(Cambie &lt;timestamp&gt; por la utilizada cuando creó la copia de
seguridad.)</comment>
# <i>tar -xjpvf mysql.&lt;timestamp&gt;.tar.bz2 -C /</i>
# <i>/etc/init.d/mysql start</i>
</pre>

<impo>
Si los paquetes, a excepción de <c>dev-db/mysql</c>, se han instalado siguiendo
esta guía, necesitará ejecutar <c>revdep-rebuild</c> para asegurarse de que
cada cliente está utilizando el objeto compartido mysqlclient adecuado.
</impo>

</body>
</section>
</chapter>

<chapter id="On_charset_conversion">
<title>Conversión del conjunto de caracteres:</title>
<section>
<title>Introducción</title>
<body>

<p>
Este capítulo no pretende ser una guía exhaustiva de cómo realizar este tipo de
conversiones, es más bien una pequeña lista de algunas que el lector puede
llevar a cabo.
</p>

<p>
Cambiar el juego de caracteres a una base de datos puede ser una tarea
complicada, siendo la dificultad mayor en función de la variedad de los datos.
Cosas como los objetos serializados y binarios (blobs) son un ejemplo en donde
es difícil mantener las piezas unidas.
</p>

</body>
</section>
<section>
<title>Índices</title>
<body>

<p>
Cada carácter UTF-8 supone 3 bytes de tamaño en un índice. Los índices en
MySQL pueden ser de hasta 1000 bytes (767 bytes para tablas InnoDB). Tenga en
cuenta que los límites están medidos en bytes mientras que la longitud de una
columna es interpretada como número de caracteres.
</p>

<p>
MySQL también puede crear índices de partes de una columna, esto puede ser de
cierta ayuda. A continuación tiene algunos ejemplos:
</p>

<pre caption="Indexar utilizando prefijos">
$ <i>mysql -uroot -p'<comment>your_password</comment>' test</i>

mysql> <i>SHOW variables LIKE "version" \G</i>
*************************** 1. row ***************************
Variable_name: version
    Value: <comment>5.0.24-log</comment>
1 row in set (0.00 sec)

mysql> <i>CREATE TABLE t1 (</i>
  ->   <i>c1 varchar(255) NOT NULL default '',</i>
  ->   <i>c2 varchar(255) NOT NULL default ''</i>
  ->   <i>) ENGINE=MyISAM DEFAULT CHARSET=utf8;</i>
Query OK, 0 rows affected (0.01 sec)

mysql> <i>ALTER TABLE t1</i>
  ->   <i>ADD INDEX idx1 ( c1 , c2 );</i>
<comment>ERROR 1071 (42000): Specified key was too long; max key length is 1000 bytes</comment>

mysql> <i>ALTER TABLE t1</i>
  ->   <i>ADD INDEX idx1 ( c1(165) , c2(165) );</i>
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> <i>CREATE TABLE t2 (</i>
  ->   <i>c1 varchar(255) NOT NULL default '',</i>
  ->   <i>c2 varchar(255) NOT NULL default ''</i>
  ->   <i>) ENGINE=MyISAM DEFAULT CHARSET=sjis;</i>
Query OK, 0 rows affected (0.00 sec)

mysql> <i>ALTER TABLE t2</i>
  ->   <i>ADD INDEX idx1 ( c1(250) , c2(250) );</i>
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> <i>CREATE TABLE t3 (</i>
  ->   <i>c1 varchar(255) NOT NULL default '',</i>
  ->   <i>c2 varchar(255) NOT NULL default ''</i>
  ->   <i>) ENGINE=MyISAM DEFAULT CHARSET=latin1;</i>
Query OK, 0 rows affected (0.00 sec)

mysql> <i>ALTER TABLE t3</i>
  ->   <i>ADD INDEX idx1 ( c1 , c2 );</i>
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0
</pre>

</body>
</section>
<section>
<title>Entorno</title>
<body>

<p>
El sistema debe estar configurado para soportar las locales UTF-8. Encontrará
más información en nuestros siguientes documentos: <uri
link="/doc/es/utf-8.xml">Usando UTF-8 con Gentoo</uri> y
<uri link="/doc/es/guide-localization.xml">Configurando localización en Gentoo
Linux</uri>
</p>

<p>
En el siguiente ejemplo, fijaremos algunas variables de entorno en
<path>/etc/env.d/02locale</path> para poder hacer uso de las locales UTF-8
en castellano:
</p>

<pre caption="/etc/env.d/02locale">
LC_ALL=es_ES.UTF-8
LANG=es_ES.UTF-8
</pre>

<p>
Ejecute justo después <c>env-update &amp;&amp; source /etc/profile</c>
</p>

</body>
</section>
<section>
<title>iconv</title>
<body>

<p>
<c>iconv</c>, proporcionado por <c>sys-libs/glibc</c>, se utiliza para
convertir ficheros de texto desde un conjunto de caracteres a otro. También se
puede utilizar el paquete <c>app-text/recode</c>.
</p>

<pre caption="Usando iconv">
<comment>(De latin1 a utf8)</comment>
$ <i>iconv -f ISO-8859-15 -t UTF-8 fichero1.sql &gt; fichero2.sql</i>

<comment>(De japonés a utf8)</comment>
$ <i>iconv -f ISO2022JP -t UTF-8 fichero1.sql &gt; fichero2.sql</i>
</pre>

<p>
<c>iconv</c> se puede utilizar para recodificar un volcado sql incluso si el
entorno no está configurado en UTF-8.
</p>

</body>
</section>
<section>
<title>SQL Mangling</title>
<body>

<p>
Es posible emplear las funciones de MySQL <c>CONVERT()</c> y <c>CAST()</c> para
convertir datos en sus guiones SQL.
</p>

</body>
</section>
<section>
<title>Apache (webserver)</title>
<body>

<p>
Para emplear UTF-8 con Apache, necesita ajustar las siguientes variables en el
<path>httpd.conf</path>: AddDefaultCharset, CharsetDefault, CharsetSourceEnc. Si
sus ficheros HTML no están codificados en UTF-8, <b>deben</b> ser convertidos
con <c>iconv</c> o <c>recode</c>.
</p>

</body>
</section>
</chapter>

</guide>
