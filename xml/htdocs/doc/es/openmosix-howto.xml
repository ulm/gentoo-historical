<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/es/openmosix-howto.xml" lang="es">
<title>OpenMosix y Clusters en Gentoo</title>

<author title="Autor">
  <mail link="tantive@gentoo.org">Michael Imhof</mail>
</author>
<author title="Autor">
  <mail link="ma53@drexel.edu">Michael Andrews</mail>
</author>
<author title="Revisor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Revisor">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Traductor">
  <mail link="fiam@asturlinux.org">Alberto García Hierro</mail>
</author>
<author title="Traductor">
  <mail link="bass@gentoo.org">José Alberto Suárez López</mail>
</author>
<author title="Traductor">
  <mail link="chiguire@gentoo.org">John Christian Stoddart</mail>
</author>

<abstract>
Este COMO le ayudará a crear una agrupación (clúster) openMosix usando Gentoo.
</abstract>

<license/>

<version>1.3</version>
<date>2003-11-20</date>

<chapter>
<title>Introducción</title>
<section>
<title>Acerca de este COMO</title>
<body>

<p>
Este COMO le ayudará a crear un cluster openMosix. Estará basado en la
distribución Gentoo Linux. Hemos intentado hacerlo lo más amistoso
posible para el usuario, de manera que los novatos puedan entenderlo
fácilmente. Mientras que un usuario experimentado puede unir sin
problemas los múltiples documentos COMO sobre openMosix, nodos sin
disco y como unir todo esto a través de la red, esperamos poder
faciliar el procedimiento para los usuarios menos experimentados.
</p>

<note>
Si planea crear el cluster openMosix con nodos sin disco, debería leer
la sección acerca del kernel, más adelante, para aprender a compilar
el kernel con el soporte openMosix y luego
nuestra <uri link="diskless-howto.xml">Nodos sin disco en
Gentoo</uri>, volviendo acá al terminar para proceder con la
instalación propiamente dicha del cluster.
</note>
</body>
</section>

<section>
<title>Acerca de openMosix</title>
<body>

<p>
OpenMosix es un parche al kernel de Linux que permite a varias
máquinas actuar como la imagen de un solo sistema (denominado en
inglés SSI). El resultado de esto son múltiples máquinas pareciendo un
sistema multiprocesador grande. En el momento de escribir esto, estoy
usando la última liberación del parche del kernel openMosix, versión
2.4.22, y las herramientas de usuario de openMosix 0.3.4. Existe una
gran variedad de información acerca de openMosix en
<uri>http://openmosix.sourceforge.net</uri>. No es fácil poner en
clúster diferentes versiones de las fuentes del kernel parcheadas y
nos hemos dado cuenta de que los parches no son compatibles hacia
atrás. OpenMosix migra procesos pesados explícitamente cuando está
ejecutando binarios a.out o ELF, o cuando un proceso pesado se divide.
No migrará procesos livianos como los p-threads, o procesos pesados
que usen memoria compartida.
</p>

<p>
Para más información acerca de openMosix, visite su
<uri link="http://openmosix.sourceforge.net">página web</uri>.
</p>
</body>
</section>

<section>
<title>Acerca del cluster</title>
<body>

<p>
Nuestro cluster estará formado por máquinas individuales (nodos)
compartiendo recursos de computación con el fin de incrementar la
capacidad de procesamiento de todos los nodos. No es necesario que
todos los nodos tengan la misma arquitectura, pero hace que la tarea
de ponerlos en clúster sea más sencilla.
</p>
</body>
</section>

<section>
<title>Antes de comenzar</title>
<body>

<p>
Debería tener Gentoo instalado en las computadoras que desee integrar
al cluster. Además, necesita las fuentes del kernel openMosix
parcheadas convenientemente por Gentoo.
</p>

<p>
Para conseguir estas fuentes simplemente use <c>emerge</c>:
</p>

<pre caption="Consiguiendo las fuentes del kernel parcheadas">
# <i>emerge openmosix-sources</i>
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Configurando el kernel</title>
<section>
<title>Acerca de los kernels</title>
<body>

<p>
El kernel es el software que se sitúa entre el hardware y el resto de
software cargado en su máquina, en esencia el corazón de un sistema
operativo basado en kernel. Al iniciar su máquina, el BIOS ejecuta las
instrucciones que encuentra en el espacio reservado para el inicio de
su disco duro. Estas instrucciones son normalmente un gestor de
arranque que carga su kernel. Una vez que el kernel se ha cargado,
todos los procesos son manejados por él.
</p>

<p>
Para más información acerca de los kernels y de su configuración
es posible que desee echarle un vistazo a este COMO,
<uri>http://www.tldp.org/HOWTO/Kernel-HOWTO.html</uri>.
<!-- Debería a apuntar a nuestro doc: /doc/es/kernel-config.xml
pero como este es un documento taaaan viejo ... -->
</p>
</body>
</section>

<section>
<title>Configurando el kernel</title>
<body>

<p>
El kernel puede ser tan grande y personalizado como desee, pero hay
unas pocas opciones que necesita activar.
</p>

<impo>
Es extremadamente importante enlazar las fuentes openmosix
a <path>/usr/src/linux</path> como se muestra a continuación.
</impo>

<pre caption="Enlazando /usr/src/linux a openmosix">
# <i>cd /usr/src</i>
# <i>rm linux</i>
# <i>ln -s linux-2.4.22-openmosix linux</i>
</pre>

<p>
Luego, modifique la configuración de su kernel:
</p>

<pre caption="Modificando la configuración del kernel">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Debería encontrarse con una interfaz gráfica gris y azul que le ofrece
una alternativa segura para editar el
archivo <path>/usr/src/linux/.config</path> a mano. Si su kernel está
funcionando bien actualmente, tal vez desee salvar el archivo de
configuración actual:
</p>

<pre caption="Respaldando la configuración del kernel">
# <i>cp .config .config_working</i>
</pre>

<p>
En la parte superior de la interfaz debería
aparecer<c>openMosix ---</c>. Si no, necesitará hacer emerge a las
fuentes del kernel con el parche openMosix
(<uri link="#doc_chap1_sect4">code listing 1.1</uri>). Entre en los
siguientes submenús y asegúrese que las siguientes opciones estén
marcadas como integradas al kernel (y <e>NO</e> como módulos):
</p>

<pre caption="Opciones del Menuconfig">
openMosix ---&gt;
    [*] openMosix process migration support
    [ ] Support clusters with a complex network topology
    [*] Stricter security on openMosix ports
    (1) Level of process-identity disclosure (0-3)
    [*] openMosix File-System
    [ ] Poll/Select exceptions on pipes
    [ ] Disable OOM Killer
    [ ] Load Limit

Code maturity level options  ---&gt;
    [*] Prompt for development and/or incomplete code/drivers

Networking options ---&gt;
    &lt;*&gt; Packet socket
    [ ]   Packet socket: mmapped IO
    &lt; &gt; Netlink device emulation
    [ ] Network packet filtering (replaces ipchains)
    [ ] Socket Filtering
    &lt;*&gt; Unix domain sockets
    [*] TCP/IP networking
    [*]   IP: multicasting

File systems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (EXPERIMENTAL)
    [*]   Automatically mount at boot 
</pre>

<note>
Estas opciones de configuración del kernel deben agregarse a la
configuración específica de su sistema, la idea no es reemplazarlas
completamente.
</note>

<p>
Una vez reconfigurado el kernel querrá reconstruirlo:
</p>

<pre caption="Recompilando el kernel y los módulos">
# <i>make dep</i>
# <i>make clean bzImage modules modules_install</i>
<comment>(Make sure /boot is mounted before copying to it)</comment>
# <i>cp arch/i386/boot/bzImage /boot/bzImage-openmosix</i>
</pre>

<p>
Ahora agregue una entrada para el kernel nuevo en <path>lilo.conf</path> o
<path>grub.conf</path> (dependiendo del gestor de arranque que usa) y
haga que el kernel nuevo sea la opción por defecto. Ahora que la
imagen <path>bzImage</path> ha sido copiada al
directorio <path>/boot</path>, todo lo que tendrá que hacer es
re-iniciar el sistema.
</p>
</body>
</section>

<section>
<title>Opciones Faltantes</title>
<body>

<p>
Si le faltan opciones en la configuración del kernel, asegúrese
revisar:
</p>

<ul>
  <li>Code maturity level options ---&gt;
  <ul>
    <li>Prompt for development and/or incomplete code/drivers</li>
  </ul>
  </li>
</ul>
</body>
</section>
</chapter>

<chapter>
<title>Configuración de nodos openMosix</title>
<section>
<title>Instación de herramientas de usuario openMosix</title>
<body>

<p>
De manera que el cluster pueda migrar procesos, necesitamos instalar
algunos binarios en el área de usuarios. Además un servidor openMosix
necesita estar operando, de manera que un nodo pueda unirse a un
cluster y hacer uso pleno de las características de openMosix. Para
obtener estos binarios y archivos, use <c>emerge</c>:
</p>

<pre caption="Instalando las herramientas de usuario openMosix">
# <i>emerge openmosix-user</i>
</pre>
</body>
</section>

<section>
<title>Configuración de los nodos openMosix</title>
<body>

<p>
Ya no se requeriere crear o modificar el
archivo <path>/etc/openmosix.map</path>. Las versiones más nuevas de
las herramientas de usuario disponen de un demonio con facultades de
autodescubrimiento que automaticamente descubre todos los nodos en la
red.
</p>

<p>
Cree el directorio <path>/mfs</path> en cada nodo y móntelo si desea
usar el sistema de archivos openMosix (altamente recomendado) que
permite acceso a todos sus nodos.
</p>

<pre caption="mkdir /mfs">
# <i>mkdir /mfs</i>
</pre>

<pre caption="Entrada ejemplo en /etc/fstab">
none                    /mfs            mfs             noauto,dfsa=1          0 0
</pre>

<note>
No todos los nodos tienen que estar encendidos y corriendo para que
openMosix funcione correctamente.
</note>
</body>
</section>

<section>
<title>Iniciando openMosix</title>
<body>

<p>
Iniciando openMosix es realmente sencillo. El siguiente comando
activará la funcionalidad de openMosix en el kernel e iniciará el
demonio de autodescubrimiento que mantiene conocimiento de los nodos
disponibles.
</p>

<pre caption="Iniciando openMosix">
# <i>/etc/init.d/openmosix start</i>
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Herramientas de usuario de openMosix</title>
<section>
<title>Herramientas de la línea de comando</title>
<body>

<p>
El paquete openMosix-user instala varias herramientas útiles en su
sistema. Para nombrar unas cuantas:
</p>

<ul>
  <li>
    <c>mosmon</c> - monitor openMosix. Permite ver el estado de todos
    los nodos, incluyendo uso del cpu, memoria instalada, memoria
    usada, etc.
  </li>
  <li>
    <c>mtop</c> - Versión mejorada de top, que enseña en qué nodo
    corre actualmente un proceso.
  </li>
  <li><c>mps</c> - Versión mejorada de ps. Enseña el número del nodo
  también.</li>
  <li>
    <c>mosctl whois</c> - Esta es tan útil ya que mosmon y las demás
    herramientas solo dan el número del nodo. Con <c>mosctl whois
    nodenumber</c> podemos averiguar el número ip o nombre del
    anfitrión del nodo.
  </li>
</ul>

<p>
La prueba de stress de openMosix test puede ser usada para determinar
si todo en el cluster está funcionando como debería y cómo se
desempeña bajo carga. Este paquete se llama <c>openmosixtest</c>:
</p>

<pre caption="Emerge openmosixtest">
# <i>emerge openmosixtest</i>
</pre>

<p>
El ebuild informará cómo correr la prueba.
</p>
</body>
</section>

<section>
<title>Herramientas Gráficas</title>
<body>

<p>
Para obtener una perspectiva gráfica del cluster y observar la
migración de procesos, puede usar <c>openmosixview</c>.
</p>

<pre caption="Emerge openmosixview">
# <i>emerge openmosixview</i>
</pre>

<p>
Para ejecutar esta maravillos aplicación, solo escriba <c>openmosixview</c>:
</p>

<pre caption="Ejecutando openmosixview">
# <i>openmosixview</i>
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Recursos</title>
<section>
<title>openMosix</title>
<body>

<ul>
  <li><uri>http://openmosix.sf.net</uri></li>
</ul>
</body>
</section>

<section>
<title>Agregados a openMosix (ebuilds disponibles)</title>
<body>

<ul>
  <li><uri link="http://www.openmosixview.com">openMosixview</uri></li>
  <li>
    <uri link="http://www.openmosixview.com/omtest">prueba de stress openMosix</uri>
  </li>
  <li>
    <uri link="http://www.nongnu.org/gomd/">general openMosix daemon</uri>
  </li>
</ul>
</body>
</section>
</chapter>
</guide>
