<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/mailfilter-guide.xml,v 1.6 2005/09/11 16:09:07 yoswink Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/es/mailfilter-guide.xml" lang="es">
<title>Guía Gentoo para el filtrado de correo</title>

<author title="Autor">
  <mail link="jaervosz@gentoo.org">Sune Kloppenborg Jeppesen</mail>
</author>
<author title="Contributor">
  <mail link="gentoo@hilli.dk">Jens Hilligsø</mail>
</author>
<author title="Editor Es">
  <mail link="bass@gentoo.org">José Alberto Suárez López</mail>
</author>
<author title="Editor Es">
  <mail link="chiguire@gentoo.org">John Christian Stoddart</mail>
 </author>
<author title="Editor Es">
  <mail link="yoswink@gentoo.org">José Luis Rivero</mail>
</author>
<author title="Traductor">
  <mail link="eduardo_lazo@yahoo.com">Rodrigo Lazo Paz</mail>
</author>

<abstract>
Esta es una guía paso a paso para la instalación de tecnologías
anti-spam con Postfix. Entre ellas Amavisd-new con Spamassassin y
ClamAV, listas grises y SPF.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<license/>

<version>0.8.0</version>
<date>2005-08-12</date>

<chapter>
<title>Introducción</title>
<section>
<body>

<p>
Esta guía describe paso a paso cómo instalar una pasarela para el
filtro de correo no deseado y virus. Es un alternativa simple de
adoptar para soluciones de un servidor.
</p>
</body>
</section>

<section>
<title>Un vistazo general</title>
<body>

<p>
Este documento describe como configurar una pasarela para el filtro de
correo no deseado con dominios múltiples. Este servidor está diseñado
para funcionar delante del servidor que realmente contiene las cuentas
de correo, como por ejemplo, Microsoft Exchange o Lotus Notes. 
</p>

<p>
En esta configuración se han elegido aplicaciones con un buen registro
de seguridad y archivos de configuración fáciles de entender. El MTA
(siglas en inglés de Agente de Transferencia de Correo) es postfix que
tiene un buen registro de seguridad y es muy fácil de configurar
correctamente. Postfix normalmente oirá al puerto 25 por correo
entrante. Al momento de recibirlo lo enviará a Amavisd-new en el
puerto 10024. Esta aplicación filtrará el correo mediante distintas
reglas antes de reenviarlo a Postfix en el puerto 10025, que a su vez
enviará el correo al próximo servidor de correo.
</p>

<p>
Amavisd-new es una armazón para el filtrado de contenido utilizada
para ayudar a las aplicaciones a filtrar virus y correo no deseado. En
esta configuración utilizaremos dos aplicaciones auxiliares, ClamAV
para el filtro de correo con virus y Spamassassin para el filtrado de
correo no deseado. El mismo Spamassassin puede funcionar como otra
capa de infraestructura para el filtrado de contenido y utilizar
aplicaciones auxiliares como Vipul's Razor2 y DCC.
</p>

<p>
A diferencia de otras tecnologías contra el correo no deseado como
RBLs, Spamassassin no rechaza ni acepta un correo simplemente en base
a una sola prueba. Utiliza varias pruebas internas y aplicaciones
auxiliares externas para calcular el puntaje spam de cada correo que
revisa. Este puntaje se basa en los siguientes tests:
</p>

<ul>
  <li>Filtrado Bayesiano</li>
  <li>Reglas estáticas basadas en expresiones regulares</li>
  <li>Redes distribuidas y colaborativas:
  <ul>
    <li>RBLs</li>
    <li>Razor2</li>
    <li>Pyzor</li>
    <li>DCC</li>
  </ul>
  </li>
</ul>

<p>
La primera parte (capítulos 1 al 4) de la guía describe la
configuración básica de la pasarela de filtro de correo. Los
siguientes capítulos pueden ser implementados individualmente sin
dependencia entre ellos. Esos capítulos describen cómo:
</p>

<ul>
  <li>
    configurar carpetas especiales IMAP (siglas en inglés de Protocolo
    de Acceso Interactivo de Correo) para el aprendizaje del filtro
    Bayesiano y para el envío de falsos positivos </li> 
<!--
  <li>
    configurar analizadores de bitácoras para crear registros
    diarios</li> 
-->
  <li>
    configurar listas grises con Postfix 2.1</li> 
  <li>
    configurar amavisd-new para que utilice MySQL como motor para las
    preferencias de los usuario</li> 
</ul>

<note>
Las carpetas IMAP utilizarán el formato maildir. Tener cada correo en
una carpeta separada hace su manejo mucho más simple. Si estás
utilizando mbox te propongo que le des una oportunidad a maildir. Si
no estás utilizando maildir actualmente, emerge las herramientas
necesarias con<c>emerge courier-imap</c>.
</note>

<p>
Una quinta parte planeada a futuro contendrá varios consejos sobre
desempeño y otras cosas que quizás te gustaría saber (correr en un
ambiente chroot, restricciónes del postfix,etc.).
</p>

<note>
Delegar responsabilidades a terceros tiene sus riesgos. Tienes que
conocer y confiar en estas terceras partes. En esta configuración la
decisión de poner en cuarentena correos con virus se basa sólo en una
aplicación de terceros. Usando el sistema de calificación de
Spamassassin, la decisión de detener correos no es realizada por una
sola autoridad, excepto quizás por las reglas estáticas del Spamassassin.
</note>

<warn>
Al rechazar correo no deseado en el nivel del MTA debes tener mucho
cuidado en elegir el RBL (siglas en inglés de Lista Negra en Tiempo
Real) que utilizarás, por ejemplo SpamCop es un mal RBL para ser
implementado en el nivel MTA, ya que causará que se den falsos
positivos porque algunas veces sus reglas son muy agresivas. Mayor
información en <uri
link="http://www.geekcomix.com/cgi-bin/classnotes/wiki.pl?UNIX03/Realtime_Blackhole_Lists_Are_Bad">Las
Listas Negras en Tiempo Real son malas (en inglés)</uri> y <uri
link="http://theory.whirlycott.com/~phil/antispam/rbl-bad/rbl-bad.html">El
problema Spam: Moviéndose más allá de los RBLs (en inglés)</uri>.
</warn>
</body>
</section>

<section>
<title>Preparándonos</title>
<body>

<p>
Antes de empezar, asegúrate que tienes una instalación de Postfix
funcionando donde puedas enviar y recibir correos, también necesitas
un servidor de correo. Si no tienes experiencia en configurar Postfix
podría resultar rápidamente muy complicado si se ve todo de golpe. Si
necesitas ayuda puedes encontrarla en la
excelente <uri
link="http://www.gentoo.org/doc/en/virt-mail-howto.xml">Guía de
Alojamiento de Correo Virtual con Postfix</uri> en la página de
Documentación Gentoo.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Instalando los programas necesarios</title>
<section>
<body>

<p>
Empezaremos por instalar los programas más importantes: Amavisd-new,
Spamassassin y ClamAV.
</p>

<pre caption="Instalando Amavis, Spamassassin y Clamav">
# <i>emerge amavisd-new spamassassin clamav </i>
</pre>

<note>
Como se mencionó previamente tu ya debes tener una instalación de
<c>postfix</c> funcionando en la computadora. Básicamente eso no debe
ser más que <c>emerge postfix</c> <e>y</e> tener conocimientos básicos
del funcionamiento de Postfix.
</note>
</body>
</section>

<section>
<title>Configurando el DNS</title>
<body>

<note>
Si no estás configurando un servidor pasarela sino que tienes las
carpetas de correo en el mismo servidor, entonces sólo necesitas crear
los registros MX.
</note>

<p>
Mientras los programas están siendo instalados, inicia otra consola y
crea los registros DNS necesarios.
</p>

<p>
Empieza creando un registro <c>MX</c> para la pasarela de correo y un
registro <c>A</c> para el próximo destino.
</p>

<pre caption="Configurando el DNS">
<comment>(Crea un registr MX para el servidor pasarela)</comment>
                MX      10      mailgateway.mydomain.tld.
<comment>(Crea un registro A para el servidor pasarela)</comment>
mailgateway     A       mgw.ip.add.here
<comment>(Crea un registro A para el siguiente servidor de correo)</comment>
mail            A       ms.ip.add.here
</pre>

<note>
Algunos proveedores ADSL bloquean el puerto 25 y te obligan a pasar el
correo a través de alguno de sus servidores. Normalmente tienes que
crear un registro MX secundario como <c>MX 20
backup-mx.some-isp.tld</c> </note>
</body>
</section>

<section>
<title>Abriendo el cortafuegos</title>
<body>

<p>
Además de permitir el trafico normal de correo, tienes que permitir a
un par de servicios atravezar el cortafuegos para que la red pueda
comprobar la comunicación con los servidores.
</p>

<table>
<tr>
  <th>Aplicación</th><th>Protocolo</th><th>Puerto</th>
</tr>
<tr>
  <ti>DCC</ti><ti>UDP</ti><ti>6277</ti>
</tr>
<tr>
  <ti>Razor(ping de salida)</ti><ti>TCP</ti><ti>7</ti>
</tr>
<tr>
  <ti>Razor</ti><ti>TCP</ti><ti>2703</ti>
</tr>      
</table>

<p>
Razor utiliza pings para descubrir que servidores tiene más cerca.
</p>
</body>
</section>

<section>
<title>Configurando Postfix</title>
<body>

<p>
Primero debemos decirle a <c>postfix</c> que escuche al puerto 10025 y
así salvamos la mayoría de las restricciónes que pueden haber sido
aplicadas a la instancia de <c>postfix</c> que escucha al puerto
25. Además, nos aseguramos que sólo atienda conexiones locales en el
puerto 10025. Para lograr esto añadimos a
<path>/etc/postfix/master.cf</path> lo siguiente:
</p>

<pre caption="Modificando el archivo master.cf">
smtp-amavis     unix -        -       n     -       2  smtp
  -o smtp_data_done_timeout=1200
  -o smtp_send_xforward_command=yes
<comment>#Equivalente usando lmtp:
#lmtp-amavis unix -     -       n       -       2       lmtp
#   -o lmtp_data_done_timeout=1200
#   -o lmtp_send_xforward_command=yes</comment>
     
127.0.0.1:10025 inet n        -       n     -       -  smtpd
  -o content_filter=
  -o local_recipient_maps=
  -o relay_recipient_maps=
  -o smtpd_restriction_classes=
  -o smtpd_client_restrictions=
  -o smtpd_helo_restrictions=
  -o smtpd_sender_restrictions=
  -o smtpd_recipient_restrictions=permit_mynetworks,reject
  -o mynetworks=127.0.0.0/8
  -o strict_rfc821_envelopes=yes
  -o smtpd_error_sleep_time=0
  -o smtpd_soft_error_limit=1001
  -o smtpd_hard_error_limit=1000
<comment>#Si en cambio deseas usar filtro proxy
#smtp            inet n         -       n      -       8 smtpd
# -o smtpd_proxy_filter=127.0.0.1:10024
# -o smtpd_client_connection_count_limit=4
#SI no quieres revisar el correo saliente utiliza esto
#10.0.0.2:smtp   inet n         -       n       -      - smtpd
#-o content_filter=</comment>
</pre>

<note>
La linea <c>smtp-amavis</c> especifica que un máximo de dos procesos
pueden correr en cualquier momento. Si necesitas una concurrencia
mayor ajusta este número a tus necesidades. Recuerda que debe ser
igual al número de <c>$max_servers=</c> en <path>amavisd.conf</path>
</note>

<!-- No he traducido before-queue -->
<note>
Si quieres rechazar el correo no deseado temprano en el proceso,
puedes usar el método Before-Queue (proxy) en vez del método de
filtro. Si descomentas las tres lineas tendrás que configurar
<c>content_filter</c> en <path>main.cf</path>. Este no es un método
recomendado en servidores con gran tráfico, ya que el número de
conexiones concurrentes está limitado por el número de instancias de
amavisd.
</note>

<warn>
El método Before-Queue(proxy) no está todavía apropiadamente probado.
</warn>

<note>
Si, por alguna razón, quieres enviar correo desde esta computadora y
no quieres que sea escaneado, añade otra instancia de postfix
descomentando las dos últimas lineas y substituyendo con el IP
apropiado.
</note>

<p>
El archivo <path>master.cf</path> le indica al programa maestro de
postfix como correr cada uno de los procesos individuales
postfix. Mayor información con <c>man 8 master</c>.
</p>

<p>
Luego de esto, necesitamos que la instancia principal de
<c>postfix</c> escuche al puerto 25 para filtrar el correo a través de
<c>amavisd-new</c> que escucha por el puerto 10024.
</p>

<p>
También necesitamos configurar el siguiente destino del correo. Hay
que indicarle a Postfix que filtre el correo a través de un filtro de
contenido externo y habilitar explícitamente el direccionamiento para
que Postfix sepa a donde enviar el correo.  
</p>

<pre caption="Modificando /etc/postfix/main.cf">
biff = no
empty_address_recipient = MAILER-DAEMON
queue_minfree = 120000000
content_filter = smtp-amavis:[127.0.0.1]:10024
<comment>#Equivale sí usas lmtp:
#content_filter = lmtp-amavis:[127.0.0.1]:10024
# TRANSPORT MAP
#
# Inserta el text de sample-transport.cf si necesitas direccionamiento explícito.</comment>
transport_maps = hash:/etc/postfix/transport
relay_domains = $transport_maps
</pre>

<p>
Postfix tiene muchas opciones configuradas en
<path>main.cf</path>. Para mayor información acerca del archivo
consulta <c>man 5 postconf</c> o en linea <uri
link="http://www.postfix.org/postconf.5.html">Parámetros de
configuración de Postfix</uri>.
</p>

<!-- sin traducir hash -->
<p>
El formato de <path>transport</path> es el de un archivo hash de
Postfix normal. El correo al dominio en la izquierda es enviado al
destinatario en el lado derecho.
</p>

<pre caption="/etc/postfix/transport">
mydomain.tld                          smtp:mail.mydomain.tld
</pre>

<p>
Luego de haber editado este archivo, necesitamos ejecutar el comando
<c>postmap</c>. Postfix no puede leer este archivo así que debemos
convertirlo al formato adecuado con <c>postmap
/etc/postfix/transport</c>. Esto crea el archivo
<path>/etc/postfix/transport.db</path>. No hay necesidad de cargar de
nuevo Postfix, ya que lee los cambios de manera automática.
</p>

<note>
Si el siguiente destino en el servidor de correo no escucha al puerto
SMTP estandar: 25, puedes indicarle a postfix que use un cierto número
de puert, como:
<c>smtp:mail.mydomain.tld:25000</c>.  
</note>
</body>
</section>

<section>
<title>Configurando Amavisd-new</title>
<body>

<p>
Amavisd-new es utilizada para manejar todos los filtrados y te permite
utilizar distintas tecnologías juntas de manera sencilla. Al momento
de recibir la notificación de un correo, va a extraerlo, filtrarlo a
través de distintos filtros personalizables, manejar listas blancas y
negras, filtrar el correo a través de escáneres de virus y finalmente
entregarlo a Spamassassin.
</p>

<p>
EL mismo amavisd-new tiene varias características extras:
</p>

<ul>
  <li>
    identifica archivos adjuntos peligrosos y tiene políticas para manejarlos
  </li>
  <li>políticas por usuario, por dominio y globales para:
  <ul>
    <li>listas blancas</li>
    <li>listas negras</li>
    <li>umbrales para la calificación de spam</li>
    <li>políticas para el correo no deseados y los virus</li>
  </ul>
  </li>
</ul>

<p>
Fuera de <c>postfix</c> y <c>freshclam</c> ejecutaremos todas las
demás aplicaciones como el usuario <c>amavis</c>.
</p>

<!--
<pre caption="/etc/passwd">
amavis:x:1010:413:added by portage for amavisd-new:/var/amavis:/bin/bash
</pre>
-->

<p>
Crea el nuevo directorio raíz y configura los permisos necesarios.
</p>

<pre caption="Creando el nuevo directorio home y configurando los permisos">
# <i>mkdir /var/amavis</i>
# <i>chown amavis:amavis /var/amavis</i>
# <i>chmod 750 /var/amavis</i>
</pre>
    
<p>
Edita las lineas siguientes en <path>/etc/amavisd.conf</path>
</p>

<pre caption="Editando /etc/amavisd.conf">
<comment>(Inserta los dominios a ser escaneados)</comment>
$mydomain = 'example.com';     
<comment>(Bind sólo la interfaz local)</comment>
$inet_socket_bind = '127.0.0.1';
<comment>(Enviarlo a Postfix en el puerto 10025)</comment>
$forward_method = 'smtp:127.0.0.1:10025';
$notify_method = $forward_method;       
<comment>(Define la cuenta a la cual enviar correos de alerta de virus)</comment>
$virus_admin = "virusalert\@$mydomain";
<comment>(Siempre añadir las cabeceras spam)</comment>
$sa_tag_level_deflt  = -100; 
<comment>(Añadir la cabecera de spam detectado o X-Spam-Status: Yes)</comment>
$sa_tag2_level_deflt = 5; 
<comment>(Activar acciones evasivas a este nivel de spam)</comment>
$sa_kill_level_deflt = $sa_tag2_level_deflt;
<comment>(No enviar notificaciones de estado de envío al remitente. 
No afecta el envío de spam al destinatario. Para hacer eso, utiliza 
el kill_level)</comment>
$sa_dsn_cutoff_level = 10;
<comment>Que no rebote el mensaje de derecha a izquierda, que lo ponga en cuarentena en cambio.
instead</comment>
$final_virus_destiny      = D_DISCARD;  # (defaults to D_DISCARD)
$final_banned_destiny     = D_DISCARD;  # (defaults to D_BOUNCE)
$final_spam_destiny       = D_DISCARD;  # (defaults to D_BOUNCE)
</pre>

<note>
Con esta linea configuras la calificación de correo no deseado de
Spamassasin a 5 <c>$sa_tag2_level_deflt = 5;</c>. Esto podría ser algo
bajo. Como te habrás dado cuenta, el valor por defecto de Amavisd-new
es <c>6.3</c>.Si no quieres ver ningún correo no deseado en tus
carpetas de correo elige <c>5</c>, pero si no quieres lidiar con
falsos positivos elige <c>6.3</c>.
</note>

<p>
Crea un directorio para poner los correos con virus en cuarentena, ya
que no queremos que estos lleguen a los usuarios.
</p>

<pre caption="Creando un directorio para cuarentena">
# <i>mkdir /var/amavis/virusmails</i>
# <i>chown amavis:amavis /var/amavis/virusmails</i>
# <i>chmod 750 /var/amavis/virusmails</i>
</pre>

<note>
Amavisd-new ofrece políticas de refinamiento más avanzadas utilizando
un banco de políticas.
</note>
</body>
</section>

<section>
<title>Configurando ClamAV</title>
<body>

<p>
Como escaner de virus utilizamos ClamAV, ya que tiene un ratio de
detección bastante bueno comparable con las opciones comerciales, es
además rápido y Open Source. Nosotros adoramos las bitacoras, así que
haz que <c>clamd</c> haga bitácoras utilizando <c>syslog</c> y
activando el modo detallado. También, no te olvides de no ejecutar
<c>clamd</c> como <c>root</c>. Ahora edita <path>/etc/clamd.conf</path>
</p>

<pre caption="Editando /etc/clamd.conf">
<comment>(Registro detallado con syslog)</comment>
LogSyslog
LogVerbose
LogFacility LOG_MAIL
<comment>(Cambia la ubiación del archivo pid)</comment> 
PidFile /var/run/amavis/clamd.pid
<comment>(Define el socket para clamav)</comment> 
LocalSocket /var/amavis/clamd
<comment>(Cierra la conexión cuando este limite se sobrepasa)</comment>
StreamMaxLength 10M
<comment>(No ejecutes clamd como super usuario)</comment>
User amavis
<comment>(Versiones actuales requieren estas lineas)</comment>
ScanMail
ScanArchive
</pre>

<note>
No te olvides de quitar la directiva de ejemplo para que ClamAV funcione.
</note>

<p>
ClamAV viene con el demonio <c>freshclam</c> dedicado a revisar
periódicamente las actualizaciones en las firmas de virus. En ves de
actualizar las firmas de virus dos veces al día, haremos que
<c>fresclam</c> las actualice cada dos horas.
</p>

<pre caption="Editando /etc/freshclam.conf">
<comment>(Bitácoras con Syslog)</comment>
LogSyslog
<comment>(Bitácoras detalladas)</comment>
LogVerbose
<comment>(Evitar explícitamente los privilegios de super usuario)</comment>
DatabaseOwner clamav
<comment>(Revisar por actualizaciones cada dos horas. Esta es la recomendación oficial)</comment>
Checks 12
<comment>(Utiliza el espejos más cercano. Reemplaza XY por el código de tu país)</comment>
DatabaseMirror db.XY.clamav.net
</pre>

<p>
Arranca <c>clamd</c> con <c>freshclam</c> utilizando el guión de
inicio modificando <path>/etc/conf.d/clamd</path>
</p>

<pre caption="Modificando /etc/conf.d/clamd">
START_CLAMD=yes
FRESHCLAM_OPTS="-d"
</pre>

<p>
Al menos modifica <path>amavisd.conf</path> con la nueva ubicación del socket.
</p>

<pre caption="Modificando /etc/amavisd.conf">
<comment>(Descomenta el escaner clamv y modifica la ubicación del socket)</comment>
['ClamAV-clamd',
\&amp;ask_daemon, ["CONTSCAN {}\n", "/var/amavis/clamd"],
  qr/\bOK$/, qr/\bFOUND$/,
  qr/^.*?: (?!Infected Archive)(.*) FOUND$/ ],
</pre>

<warn>
NO modifiques el <c>$unix_socketname</c> al menos que sepas lo que
estás haciendo.  </warn>
</body>
</section>

<section>
<title>Configurando Vipul's Razor</title>
<body>

<p>
Razor2 es una red colaborativa y distribuida para la suma de
verificación del correo no deseado. Instálalo con <c>emerge razor</c>
y crea los archivos de configuración necesarios. Haz esto al ejecutar
como el usuario <c>amavis</c>: <c>su -amavis</c> y <c>razor-admin
-create</c>
</p>

<pre caption="Creando los archivos de configuración necesarios">
# <i>emerge razor</i>
<comment>(Define temporalmente a bash como el shell de amavis)</comment>
# <i>usermod -s /bin/bash amavis</i>
# <i>su - amavis</i>
$ <i>razor-admin -create</i>
$ <i>exit</i>
<comment>(Redefine el shell a /bin/false)</comment>
# <i>usermod -s /bin/false amavis</i>
</pre>

<!-- no sé si el título está bien traducido del original Distributed Checksum Clearinghouse -->
</body>
</section>
<section>
<title>Configurando la distribución de sumas de control (dcc)</title>
<body>

<p>
Al igual que Razor2, dcc es una red distribuida y colaborativa para la
suma de verificación del correo no deseado. Su filosofía se basa en
contar el número de destinatarios de un mail identificando cada correo
con una suma de verificación.
</p>

<pre caption="Instalando DCC">
# <i>emerge dcc</i>
</pre>
</body>
</section>

<section>
<title>Configurando Spamassassin</title>
<body>

<p>
Amavis utiliza directamente las librerías Perl de Spamassassin así que
no hay necesidad de iniciar el servicio. Pero esto también trae
confusión y a que algunas preferencias modificadas en
<path>/etc/mail/spamassassin/local.cf</path> son sobreescritas por
opciones en <path>/etc/amavisd.conf</path>.
</p>

<pre caption="Creando /etc/mail/spamassassin/local.cf">
<comment># Activa el sistema Bayes</comment>
use_bayes               1
<comment># Activa la verificación en todas las redes</comment>
skip_rbl_checks         0
use_razor2              1
use_dcc                 1
use_pyzor               1
<comment># Correo escrito en los lenguajes utilizados en estos países
#no estarán marcados como posible correo no deseado en un lenguaje
#foráneo. - danés inglés noruego sueco</comment> 
ok_languages da en no sv
<comment># Correo que utilice locales de estos códigos de países no
#será marcado como posible correo no deseado en un lenguaje
#foráneo.</comment> 
ok_locales en
<comment># Utiliza una ruta bayes sensible</comment>
bayes_path              /var/amavis/.spamassassin/bayes
</pre>

<note>
Puedes encontrar inspiración para tu archivo <path>local.cf</path>
probando
el <uri link="http://www.yrex.com/spam/spamconfig.php">Generador de
configuración de SpamAssassin</uri>.
</note>

<note>
Quizás también quieres activar las opciones <c>ok_languages</c> y
<c>ok_locales</c>.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Toda buena regla también tiene buenas excepciones</title>
<section>
<body>

<p>
Una vez que el correo realmente empiece a pasar a través de esta
pasarela de correo quizás te des cuenta que la configuración actual no
es perfecta. Tal vez a algunos de tus clientes les gusta recibir
correos que otros no. Puedes crear listas blancas/listas negras para
los remitentes de los correos de una manera muy sencilla. Descomenta
la siguiente línea en <path>amavisd.conf</path>.
</p>

<pre caption="Modificando amavisd.conf para que realice una calificación global">
read_hash("/var/amavis/sender_scores_sitewide"),
</pre>

<p>
En el archivo <path>sender_scores_sitewide</path> colocas la dirección
de correo completa o sólo las partes del dominio junto con una
calificación positiva/negativa ha añadir a la calificación de correo no
deseado.  
</p>

<pre caption="ejemplo de una lista blanca">
<comment>(Poner en la lista blanca a todos los correos del destinatario especificado)</comment>
postmaster@example.net                -3.0
<comment>(Poner en la lista blanca todos los correos de example.net excluyendo subdominios)</comment> 
.example.net                           1.0
</pre>

<note>
Revisa el archivo <path>/etc/amavisd.conf</path> para más ejemplos.
</note>

<note>
Colocar estas direcciones fuera de <path>amavisd.conf</path> es una
solución más limpia y segura.
</note>

<note>
Alternativamente, puedes hacer estas especificaciones en el archivo de
configuración <path>/etc/mail/spamassassin/local.cf</path> pero pienso
que es más claro si lo haces en <path>/etc/amavisd.conf</path>.
</note>

<note>
En un capítulo más adelante mostraré como implementar políticas por
usuario utilizando MySQL.
</note>

<p>
Hasta implementar un mejor método, puedes añadir lo siguiente a
<path>amavisd.conf</path> para evitar la revisión de correo no deseado
para los buzones de <c>postmaster</c> y <c>abuse</c>
</p>

<pre caption="Saltar los filtros de spam para todos los correos de postmaster y abuse">
map { $bypass_spam_checks{lc($_)}=1 } (qw(
        postmaster@
        abuse@
));
</pre>

<impo>
Mientras estamos en esto <e>nunca</e> debemos descartar
automáticamente correos de las cuentas <c>postmaster</c> o
<c>abuse</c>. Mira en <uri
link="http://www.ietf.org/rfc/rfc2142.txt">RFC 2142 NOMBRES DE BUZONES
PARA SERVICIOS COMUNES, ROLES Y FUNCIONES</uri>. De otra manera tus
dominios pueden quedar enlistados en algunas de las malévolas listas
de <uri link="http://www.rfc-ignorant.org/">rfc-ignorant.org</uri>.
</impo>
</body>
</section>
</chapter>

<chapter>
<title>Añadiendo más reglas</title>
<section>
<body>

<p>
Si quieres utilizar más reglas proveidas por los Ninjas SARE en el
<uri link="http://www.rulesemporium.com/">Emporio de Reglas de
SpamAssassin</uri>, puedes añadirlas y actualizarlas fácilmente
utilizando <c>mail-filter/spamassassin-ruledujour</c>:
</p>

<pre caption="Instalando rulesdujour">
# <i>emerge "mail-filter/spamassassin-ruledujour"</i>
</pre>

<p>
Ahora edita el archivo <path>/etc/rulesdujour/config</path> y reinicia
Amavisd-new:
</p>

<pre caption="Modificando /etc/rulesdujour/config">
(<comment>Reinicar amavisd-new en ves de spamd</comment>)
SA_RESTART="/etc/init.d/amavisd restart"
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Probando y últimos retoques</title>
<section>
<title>Probando la configuración</title>
<body>

<p>
Antes de iniciar <c>freshclam</c> puedes verificar si funciona manualmente.
</p>

<pre caption="Probando freshclam">
# <i>freshclam</i>
ClamAV update process started at Sun May  2 09:13:41 2004
Reading CVD header (main.cvd): OK
Downloading main.cvd [*]
main.cvd updated (version: 22, sigs: 20229, f-level: 1, builder: tkojm)
Reading CVD header (daily.cvd): OK
Downloading daily.cvd [*]
daily.cvd updated (version: 298, sigs: 1141, f-level: 2, builder: diego)
Database updated (21370 signatures) from database.clamav.net (193.1.219.100).
</pre>

<p>
Ahora que has actualizado las definiciones de los virus, puedes estar
seguro que <path>freshclam.conf</path> funciona correctamente.
</p>

<p>
Prueba freshclam y amavisd desde los correos de prueba de cli y
amavisd. Inicia <c>clamd</c> y <c>amavis</c> con los siguientes
comandos:
</p>

<pre caption="Iniciar amavisd y clamd y recargar la configuración de postfix">
# <i>/etc/init.d/clamd start</i>
# <i>/etc/init.d/amavisd start</i>
# <i>/etc/init.d/postfix reload</i>
</pre>

<p>
Si todo a salido como debe <c>postfix</c> ahora estará escuchando por
correos en el puerto 24 y por correos reinyectados en el puerto
10024. Para verificar que es así, revisa la bitácora.
</p>

<pre caption="Resvisando las bitácoras">
# <i>tail -f /var/log/mail.log</i>
</pre>

<note>
Dependiendo de la configuración de tus bitácoras, la ruta correcta
sería <path>/var/log/messages</path>.
</note>

<p>
Si ningún mensaje extraño aparece en la bitácora, es hora para una
nueva prueba.
</p>

<p>
Utiliza <c>netcat</c> para conectarte manualmente a <c>amavisd</c> en
el puerto 10024 y <c>postfix</c> en el puerto 10025.
</p>

<note>
Netcat puede ser utilizado como un reemplazo avanzado de
<c>telnet</c>. Instalalo con
<c>emerge netcat</c>.
</note>

<note>
Por alguna razón desconocida no se puede completar la inyección manual
de correo a <c>amavisd</c> con netcat.  Utiliza <c>telnet</c> en
cambio.
</note>

<pre caption="Comprobación manual de que amavisd y postfix están escuchando a los nuevos puertos"> 
# <i>nc localhost 10024</i>
<comment>(Amavis funcionando)</comment>
220 [127.0.0.1] ESMTP amavisd-new service ready
<i>nc localhost 10025</i>
<comment>(Reinyección a Postfix funcionando)</comment>
220 example.com ESMTP Postfix
</pre>

<note>
Si quieres ver la salida completa de amavisd-new, ejecuta <c>amavisd
debug-sa</c> como el usuario <c>amavis</c> y envía un correo. Para que
este método funcione tendrás que cambiar el shell por defecto
en <path>/etc/passwd</path>
</note>

<p>
Añade <c>amavisd</c> y <c>clamd</c> al nivel de ejecución <c>default</c>.
</p>

<pre caption="Añadiendo amavisd y clamd al nivel de ejecución default">
# <i>rc-update add clamd default</i>
# <i>rc-update add amavisd default</i>
</pre>

<note>
No añadimos <c>spamd</c> al nivel de ejecución por defecto y que
<c>amavisd</c> utiliza las librerías Perl de Spamassassin
directamente.
</note>

<note>
Quizás hallas notado las siguientes lineas en tu bitácora:
<c>Net::Server: Couldn't POSIX::setuid to ...  []</c>. De acuerdo al
<uri link="http://www.ijs.si/software/amavisd/README.chroot">LEEME de
amavis chroot</uri>, si el proceso UID permanece en 0 (<c>root</c>),
el programa terminará, de otra forma considera el mensaje simplemente
informativo. Esto es porque <c>POSIX::setuid()</c> regresa la cadena
<c>0 but true</c>.
</note>

<impo>
Si activaste la posibilidad de iniciar sesión para amavis, no te
olvides de redefinir el intérprete de comandos en
<path>/etc/passwd</path> a <c>/bin/false</c>.  </impo>
</body>
</section>
</chapter>

<!-- sidelining?? -->
<chapter>
<title>Autoaprendizaje y diferimiento de emails</title>
<section>
<title>Creando el usuario spamtrap</title>
<body>

<p>
Crea la cuenta spamtrap y los directorios.</p>
<pre caption="Creando la cuenta spamtrap">
# <i>useradd -m spamtrap</i>
# <i>maildirmake /home/spamtrap/.maildir</i>
# <i>chown -R spamtrap:mailusers
/home/spamtrap/.maildir</i>
<comment>(Dale al usuario spamtrap una contraseña sensible)</comment>
# <i>passwd spamtrap</i>
</pre>

<p>
Si quieres revisar manualmente algunos de los correos para asegurarte
que no tengas falsos positivos puedes la siguiente receta
de <c>procmail</c> para desviar el correo no deseado encontrado hacia
distintas carpetas de correo.
</p>
</body>
</section>

<section>
<title>Creando .procmailrc</title>
<body>

<pre caption="Creando /home/spamtrap/.procmailrc">
<comment>#Define algunas variables por defecto</comment>
MAILDIR=$HOME/.maildir
SPAM_FOLDER=$MAILDIR/.spam-found/
LIKELY_SPAM_FOLDER=$MAILDIR/.likely-spam-found/
<comment>#Envía correos con una calificación spam de 7+ al spamfolder</comment>
:0:
* ^X-Spam-Status: Yes
* ^X-Spam-Level: \*\*\*\*\*\*\*
$SPAM_FOLDER
<comment>#Envía el correo con una calificación spam entre 5-7 al folder "likely spam"</comment>
:0:
* ^X-Spam-Status: Yes
$LIKELY_SPAM_FOLDER
<comment>#Envía los demás correos al buzón de entrada</comment>
:0
*
./
</pre>

<warn>
Si tu servidor de correo va a recibir una gran cantidad de correo NO
se recomienda el uso de la receta likely-spam. En cambio
configura <c>$sa_tag2_level_deflt</c> lo suficientemente alto como
para evitar falsos positivos y que los filtre directamente
a <c>$SPAM_FOLDER</c>.
</warn>

<note>
Si todavía no has instalado <c>procmail</c>, hazlo con <c>emerge
procmail</c>.
</note>

<p>
Ahora, hay que asegurar que Postfix utilice <c>procmail</c> para entregar el correo.
</p>

<pre caption="Modificando /etc/postfix/main.cf">
mailbox_command = /usr/bin/procmail -a "DOMAIN"
</pre>
</body>
</section>

<section>
<title>Creando los buzones</title>
<body>

<p>
Ahora crearemos los directorios compartidos por ham y spam.
</p>

<pre caption="Creando los buzones necesarios">
# <i>maildirmake /var/amavis/.maildir</i>
# <i>maildirmake -S /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f spam /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f ham /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f redeliver /var/amavis/.maildir/Bayes</i>
</pre>

<p>
Amavisd-new necesita ser capaz de leer estos archivos de la misma
manera que todos los usuarios.  Por lo tanto, necesitamos añadir todos
los usuarios relevantes al grupo mailuser junto con amavis.
</p>

<pre caption="Configurando los permisos necesarios">
# <i>groupadd mailusers</i>
# <i>usermod -G mailusers spamtrap</i>
# <i>chown -R amavis:mailusers /var/amavis/.maildir/</i>
# <i>chown amavis:mailusers /var/amavis/</i>
# <i>chmod -R 1733 /var/amavis/.maildir/Bayes/</i>
# <i>chmod g+rx /var/amavis/.maildir/</i>
# <i>chmod g+rx /var/amavis/.maildir/Bayes/</i>
</pre>

<warn>
Esto garantiza que los miembros del grupo <c>mailusers</c> tengan
acceso al correo de <c>amavis</c>
</warn>

<p>
Eso permite que los directorios spam y ham pueden ser leidos pero no
modificados. De esta manera los usuarios pueden enviar sus ham sin que
nadie más pueda leerlos.
</p>

<p>
Luego ejecuta el siguiente comando como el usuario <c>spamtrap</c>:
</p>

<pre caption="Añadiendo los directorios compartidos a los buzones de los usuarios">
$ <i>maildirmake --add Bayes=/var/amavis/.maildir/Bayes $HOME/.maildir</i>
</pre>

<note>
Tenemos que darle al grupo los permisos de lectura en el
directorio <path>Bayes</path> de manera que el cliente de correo pueda
ver los subdirectorios utilizados por IMAP.
</note>
</body>
</section>

<section>
<title>Añadiendo los trabajos calendarizados</title>
<body>

<p>
Ahora ejecuta <c>crontab -u amavis -e</c> para editar el crontab de
manera que se active el aprendizaje automático del filtro Bayesiando
cada hora.
</p>

<pre caption="amavis crontab">
<comment>#Auto aprendizaje</comment>
0 * * * *          /usr/bin/sa-learn --spam /var/amavis/.maildir/Bayes/.spam/{cur,new} \
                    > /dev/null 2>&amp;1 
0 * * * *          /usr/bin/sa-learn --ham /var/amavis/.maildir/Bayes/.ham/{cur,new} > \
                   /dev/null 2>&amp;1 
</pre>

<note>
<c>amavis</c> necesita ser miembro del grupo <c>cron</c> para ejecutar
los trabajos.
</note>

<note>
Parece que los buzones compartidos harán que <c>sa-lern</c> examine
todos los mensajes dos veces. Esto no debería ser un problema. La
salida también mostrará que el máximo de mensajes de los cuales se
aprende es la mitad o menos de los examinados.
</note>
</body>
</section>

<section>
<title>Modificando amavisd.conf</title>
<body>

<p>
Ahora, modifica amavis para que redireccione el correo no deseado a la
cuenta <c>spamtrap</c> y se quede con los encabezados.
</p>

<pre caption="Modificando /etc/amavisd.conf">
<comment>(Define la cuenta a la cual enviar el spam)</comment>
$spam_quarantine_to = "spamtrap\@$myhostname";
</pre>
</body>
</section>

<section>
<title>Redistribuyendo falsos positivos</title>
<body>

<p>
Si configuras la calificación de spam muy baja, como lo hacemos aca,
es probable que te encuentres con algunos falsos positivos. Esto serán
filtrados en el directorio <path>likely-spam</path>. Estos son
revisados manualmente y cualquier falso positivo es movido al
buzón <path>redeliver</path>. Desde ahí es primero redirigido a través
de <c>sa-learn --ham</c> y redistribuido con todas las cabeceras
intactas usando una versión parchada
de <uri
link="http://www.engelschall.com/sw/smtpclient/">smtpclient</uri> de
Ralf S. Engelschall.
</p>

<p>
La versión 1.0.0 original de <c>smtpclient</c> está en portage, sin
embargo para mantener las cabeceras intactas utilizamos una versión
modificada. Aquí está como instalar la versión revisada:
</p>

<pre caption="Installing revised smtpclient">
<comment>(Cambiado el portage OVERLAY)</comment>
# <i>wget http://home.coming.dk/files/smtpclient.tar.gz</i>
# <i>tar xzf smtpclient.tar.gz</i>
# <i>echo "mail-client/smtpclient    ~x86" &gt;&gt; /etc/portage/package.keywords</i>
# <i>echo "mail-client/smtpclient    fullheaders" &gt;&gt; /etc/portage/package.use</i>
# <i>emerge smtpclient</i>
</pre>

<p>
Revisa cada minuto la carpeta <path>redeliver</path> para comprobar
nuevos correos, utilizando cron.
</p>

<pre caption="amavis crontab">
<comment>#Redistribuir falsos positivos</comment>
* * * * *          find /var/amavis/.maildir/Bayes/.redeliver/cur/ -type f -name \
                   "[0-9]*" -exec cp {} /var/amavis/.maildir/Bayes/.ham/cur/ \; \
                   &amp;&amp; find /var/amavis/.maildir/Bayes/.redeliver/cur/ -type f \
                   -name "[0-9]*" -exec /usr/local/bin/redeliver.pl {} \;
</pre>

<p>
Ahora, sólo necesitamos compiar el archivo <c>redeliver.pl</c>
a <path>/usr/local/bon</path>.<uri
link="http://home.coming.dk/files/redeliver.pl">Descárgalo</uri> o
utiliza la siguiente versión.
</p>

<pre caption="redeliver.pl">
<comment>#!/usr/bin/perl -w
# Redelivers mail using a modified version of smtpclient
# By: Jens Hilligsoe &lt;gentoo@hilli.dk&gt;</comment>
use strict;
if(!($#ARGV == 0)) {
        die "Usage:\n$0 maildir_mail\n";
}
my $mail = $ARGV[0];
my $to = "";
my $from = "";
sub prunefile ( $ );
<comment># Retrieve To and From envelope adresses</comment>
open (MAIL, $mail) or die "Could not open $mail: $?\n";
while(&lt;MAIL&gt;) {
    if(($to eq "") || ($from eq "")) {
        chop;
        (my $key, my $value) = split (/:/);
        if($key eq "X-Envelope-To") {
            $to = $value;
            $to =~ s/[\&lt;\&gt;,]//g; # Remove "&lt;", "&gt;" and ","
            $to =~ s/^\s+|\s+$//g; #Remove whitespace before and after
        }
        if($key eq "X-Envelope-From") {
            $from = $value;
            $from =~ s/[\&lt;\&gt;,]//g;
            $from =~ s/^\s+|\s+$//g;
            if($from eq "") {
                $from = "postmaster";
            }
        }
    }
}
if($to eq "") {
    prunefile($ARGV[0]); # Just nuke it if to is empty
} else {
    my $redelivercmd = "cat $ARGV[0] | smtpclient -F -S 127.0.0.1 -P 10025 -f $from $to";
    unless (system($redelivercmd) == 0 ) {
        die "Unable to redeliver: $?";
    }
    prunefile($ARGV[0]); # Clean up
}
sub prunefile ( $ ) {
    my ($file) = @_;
    unless (unlink $file) {
        die "Unable to remove mail: $?";
    }
}
</pre>
</body>
</section>

<section>
<title>Limpiando</title>
<body>

<p>
No queremos guardar el correo para siempre, así que
utilizaremos <c>tmpwatch</c> para limpiarlo regularmente. Instálalo
con <c>emerge tmpwatch</c>. Únicamente el <c>root</c> puede
ejecutar <c>tmpwatch</c> así que necesitamos editar el crontab de él.
</p>

<pre caption="Modificando el crontab del root">
<comment># Limpia
# Guarda los virusmails por una semana (24*7 horas)</comment>
15 0 * * *      /usr/sbin/tmpwatch -c -f -d --quiet 168 /var/amavis/virusmails/
<comment># Borra el spam y ham utilizado para aprender luego de una semana</comment>
15 0 * * *      /usr/sbin/tmpwatch -c -f -d --quiet 168 /var/amavis/.maildir/Bayes/
</pre>
</body>
</section>
</chapter>

<!--
<chapter>
<title>Log analyzers</title>
<section>
<title>General Postfix statistics</title>
<body>

<p>
Now that we have set up our gateway mail server it would be nice to be
able to monitor it. To this end we install two small Perl scripts that
will mail you daily summaries about mail and spam statistics. First
download and install <c>pflogsumm</c>:
</p>

<pre caption="Download and installing pflogsumm">
# <i>wget http://jimsun.linxnet.com/downloads/pflogsumm-1.1.0.tar.gz</i> 
# <i>tar xzf pflogsumm-1.1.0.tar.gz</i>
# <i>cp pflogsumm-1.1.0/pflogsumm.pl /usr/local/bin/</i>
</pre>
</body>
</section>

<section>
<title>Postfix spam statistics</title>
<body>

<p>
Next we download and install the script that generates daily
statistics about spam caught:
</p>

<pre caption="Downloading and installing spamreport">
# <i>wget http://www.flakshack.com/anti-spam/nosack-spamreport.pl</i>
# <i>mv nosack-spamreport.pl /usr/local/bin/</i>
# <i>chmod +x /usr/local/bin/nosack-spamreport.pl</i>
</pre>

<p>
We want a daily mail from each of the scripts so we add two entries to
the <c>root</c> crontab:
</p>

<pre caption="Adding report scripts to root crontab">
15 0 * * *      /usr/local/bin/pflogsumm.pl -d yesterday \
                /var/log/mail.log 2&gt;&amp;1 | /bin/mailx \
                -s "`uname -n` daily mail stats" postmaster
10 0 * * *      /usr/local/bin/nosack-spamreport.pl \
                /var/log/mail.log 2&gt;&amp;1 | /bin/mailx \
                -s "`uname -n` daily spam stats" postmaster
</pre>

<note>
You might need to do an <c>emerge Date-Calc</c> and <c>emerge
mailx</c>. Alternatively you can use <c>mail</c> installed with
<c>emerge mailutils</c>
</note>

<note>
If you rotate your logs on a weekly basis (like I do) you might want
to ensure that the scripts are run just before the logs are rotated.
</note>

<note>
Currently investigating another amavis log analyzer
<uri link="http://homepages.hs-bremen.de/~renegat/amavislogsumm">amavislogsumm</uri>
</note>
</body>
</section>
</chapter>
-->

<chapter>
<title>Listas Grises</title>
<section>
<title>Introducción</title>
<body>

<p>
Las listas grises son una de las nuevas armas en el arsenal de lucha
contra el correo no deseado. Como el nombre lo implica, son muy
parecidas a las listas blancas y a las listas negras. Cada vez que
un servidor de correo desconocido intenta enviar un correo, este es
rechazado con el mensaje <e>try again later</e> (intente de nuevo más
tarde). Esto implica que el correo es demorado, pero también que los
estúpidos spam bots que no implementan el protocolo RFC descartarán
el correo y no volverán a intentarlo jamás. Con el tiempo los spam
bots probablemente se adaptarán, sin embargo esto dará tiempo a
otras tecnologías para que identifiquen el correo no deseado.
</p>

<note>
Si tu proveedor ISP bloquea todo el tráfico entrante por el puerto 25
y te envía todo el correo a través de su propio servidor de correo,
las listas grises no funcionarán.
</note>

<p>
Postfix 2.1 viene con un simple servidor de políticas de listas grises
en Perl que implementa el esquema. Sin embargo, cuando la partición
que alberga la base de datos de la lista gris se queda sin espacio,
los resultados son impredecibles. Hay una versión mejorada que no
sufre de este error. Primero te mostraré como instalar el soporte para
listas grises que viene incluido en Postfix y luego, pasaremos
implementar el reemplazo más robusto.
</p>

<note>
Hay otros servidores de políticas de listas grises para Postfix
(como <uri link="http://www.gasmi.net/gld.html">Gld</uri>, que está en
Portage,
y <uri link="http://sqlgrey.sourceforge.net/">SQLgrey</uri>). Algunos
de ellos soportan motores de base de datos, listas blancas automáticas
y otras interesantes características.
</note>
</body>
</section>

<section>
<title>Listas grises simples</title>
<body>

<note>
Si deseas en cambio utilizar el servidor mejorado de políticas de
listas grises con postgrey, puedes tranquilamente saltarte esta
sección.
</note>

<p>
Necesitamos el archivo <path>greylist.pl</path> pero
desafortunadamente el ebuild no lo instala por defecto.
</p>

<pre caption="Consiguiendo el greylist.pl">
# <i>cp /usr/portage/distfiles/postfix-your-version-here.tar.gz /root/</i>
# <i>tar xzf postfix-your-version-here.tar.gz</i>
# <i>cp postfix-2.1.0/examples/smtpd-policy/greylist.pl /usr/bin/</i>
</pre>

<p>
Ahora que tenemos el archivo en su lugar, necesitamos crear el
directorio que albergará la base de datos de la lista gris.
</p>

<pre caption="Creando el directorio para la base de datos">
# <i>mkdir /var/mta</i>
# <i>chown nobody /var/mta</i>
</pre>

<warn>
No crees el directorio para la base de datos en una partición que
podría quedarse sin espacio. Mientras que postfix puede recuperarse de
situación donde no hay más espacio para la cola de correos y los
buzones, este no es el caso con la base de datos de la lista gris. Si
el archivo se corrompe, no serás capaz de recibir correo en lo
absoluto hasta que borres el archivo manualmente.
</warn>
</body>
</section>

<section>
<title>Configurando la lista gris</title>
<body>

<p>
Ahora que tenemos eso listo, lo que nos falta hacer es modificar la
configuración de postfix. Primero, añadiremos la necesaria información
a <path>master.cf</path>
</p>

<pre caption="Modificando master.cf para utilizar listas grises">
policy-greylist  unix  -       n       n       -       -       spawn
   user=nobody argv=/usr/bin/perl /usr/bin/greylist.pl
</pre>

<p>
El demonio spawn de postfix normalmente termina los procesos luego de
1000 segundos, pero este tiempo es muy corto para permitir el proceso
de las listas grises, así que debemos incrementar el límite de tiempo
en <path>main.cf</path>:
</p>

<pre caption="Modificando el main.cf para utilizar listas gises">
policy-greylist_time_limit = 3600
<comment>(En la sección smtpd_recipient_restrictions añade:)</comment>
check_sender_access hash:/etc/postfix/sender_access
<comment>(Luego añade:)</comment>
restriction_classes = greylist
greylist = check_policy_service unix:private/policy-greylist
</pre>

<warn>
Asegúrate de especificar <c>check_sender_access</c> LUEGO
de <c>reject_unauth_destination</c> o tu sistema tendrá se convertirá
en un conmutador de correo abierto.
</warn>

<note>
La base de datos de la lista gris es rápidamente contaminada con
direcciones erradas. Ayuda que protejas la lista gris con otras
restricciones además de rechazar destinatarios y/o remitentes
desconocidos.
</note>

<p>
No vamos a utilizar las listas grises para todos los dominios, sólo
para aquellos abusados frecuentemente por los correos no
deseados. Después de todo, va a demorar la entrega del correo.Una
lista de dominios CORREO DE frecuentemente olvidados la puedes
encontrar <uri
link="http://www.monkeys.com/anti-spam/filtering/sender-domain-validate.in">en
línea</uri>. Añade los dominios desde los cuales recibes bastante
correo no deseado en <path>/etc/postfix/sender_acces</path>:
</p>

<pre caption="Formato del sender_access">
aol.com     greylist
hotmail.com greylist
bigfoot.com greylist
</pre>

<p>
Si deseas una lista más extensa:
</p>

<pre caption="Adding all domains to sender_access">
# <i>wget http://www.monkeys.com/anti-spam/filtering/sender-domain-validate.in</i>
# <i>cat sender-domain-validate.in | sort | awk {'print $1 "\t\t greylist"'} > /etc/postfix/sender_access</i>
</pre>

<p>
Ahora sólo necesitamos inicializar la base de datos <path>sender_access</path>
database:
</p>

<pre caption="Inicializando sender_access">
# <i>postmap /etc/postfix/sender_access</i>
</pre>

<p>
La configuración de la lista gris simple está completa.
</p>

<warn>
He probado esto en una máquina que manejaba miles de correos
diariamente y los resultados fueron casi un completo desastre. Luego
de cuatro días la máquina estaba saturada con viejos
procesos <c>greylist.pl</c>.
</warn>
</body>
</section>

<section>
<title>Configurando listas grises mejoradas con postgrey</title>
<body>

<p>
Para instalar un servidor de políticas de listas grises mejorado
tienes de descargarte e instalar algunos ebuilds de módulos Perl en tu
árbol Portage.
</p>

<pre caption="Instalando postgrey">
# <i>echo "mail-filter/postgrey    ~x86" &gt;&gt; /etc/portage/package.keywords</i>
# <i>emerge postgrey</i>
</pre>

<note>
 Postgrey está ahora en Portage, aunque aún como inestable.
</note>

<p>
Luego de instalar <c>postgrey</c> tenemos que editar el
archivo <path>main.cf</path>. Los cambios son casi exactamente los
mismos que para la lista gris incluida.
</p>

<pre caption="Modificando el main.cf para usar listas grises">
<comment>(En la sección smtpd_recipient_restrictions añadir:)</comment>
check_sender_access hash:/etc/postfix/sender_access
<comment>(Luego añadir:)</comment>
smtpd_restriction_classes = greylist
greylist = check_policy_service inet:127.0.0.1:10023
</pre>

<note>
El SMTPD_POLICY_README de Postfix utiliza
sólo <c>restriction_clases</c> pero parece no funcionar.
</note>

<note>
Si deseas poner todo bajo la lista gris, añade en
cambio <c>check_policy_service inet:127.0.0.1:10023</c>.
</note>

<note>
Algunas personas prefieren recibir su correo rápido, así que utilizar
listas grises es inapropiado. Sin embargo, si utilizas un servidor de
correo de respaldo, puedes configurar las listas grises ahí. Mi
limitada experiencia me ha enseñado que puede detener hasta un tercio
de todo el correo no deseado recibido.
</note>
</body>
</section>
</chapter>

<chapter>
<title>SPF (Infraestructura de Políticas de envío, Sender Policy Framework)</title>
<section>
<title>Introducción</title>
<body>

<p>
SPF permite a los dueños de los dominios especificar en sus registros
DNS qué direcciones IP podrán enviar correos desde su dominio. Esto
evitará que los spammers que se aprovechen del <c>Return-Path</c>.
</p>

<note>
Si tu proveedor ISP bloquea todo el trafico por el puerto 25 y envía
todo el correo a través de su propio servidor, SPF no funcionará.
</note>

<p>
Primero los dueños de los dominios tienen que crear un registro
DNS <c>TXT</c> especial. Así, un MTA con soporte SPF puede leerlo y si
el correo entrante no proviene de un servidor especificado en el
registro SPF será rechazado. Una entrada de ejemplo es la siguiente:
</p>

<pre caption="Registro SPF de ejemplo">
example.com.  IN TXT  "v=spf1 a mx ptr -all"
</pre>

<p>
El <c>-all</c> indica que se rechace todo el correo por defecto pero
que se permita el ingreso de este si proviene de los registros
<c>A</c>(<c>a</c>), <c>MX</c>(<c>mx</c>)
y <c>PTR</c>(<c>ptr</c>). Para mayor información, consulta los
recursos listados abajo.
</p>

<note>
Si envías tu correo saliente a través de tu ISP, entonces añade:
<c>include:yourisp.com</c>.
</note>

<p>
Spamassassin 3.0 tiene soporte para SPF, sin embargo este no viene
activado por defecto y el nuevo demonio de políticas de Postfix
soporta SPF, así que instalemos el soporte SPF de Postfix.
</p>

<note>
Si en cambio deseas utilizar el SPF de Spamassassin simplemente
ejecuta <c>emerge&nbsp;dev-perl/Mail-SPF-Query</c> y reinicia
Amavisd-new
</note>

</body>
</section>

<section>
<title>Preparando el sistema</title>
<body>

<p>
Primero debes instalar Postfix 2.1 como se describe a
continuación. Luego de haber descargado las fuentes, agarra
el <path>spf.pl</path> con:
</p>

<pre caption="Instalando spf.pl">
# <i>cp postfix-&lt;version&gt;/examples/smtpd-policy/spf.pl /usr/local/bin/</i>
</pre>

<note>
El <path>spf.pl</path> que viene incluido con Postfix tiene algunos
errores, así que busca y descomenta la siguiente linea: <c>push
@HANDLERS, "sender_permitted_from"; use Mail::SPF::Query</c>. Más
adelante, en la línea 199 sustituye <c>comemnt</c>
con <c>comment</c>. Alternativamente puedes descargarte
una <uri link="http://spf.pobox.com/postfix-policyd.txt">versión en
desarrollo</uri>.
</note>

<p>
Este guión en Perl también necesita algunas librerías que no están en
Portage pero que son sencillas de instalar:
</p>

<pre caption="Instalando las librerias faltantes">
# <i>emerge Mail-SPF-Query Net-CIDR-Lite Sys-Hostname-Long</i>
</pre>

<p>
Ahora que tenemos todo en su lugar, sólo necesitamos configurar
Postfix para que utilice esta nueva política.
</p>

<pre caption="Modificando master.cf para que utilice SPF">
policy-spf  unix  -       n       n       -       -       spawn
   user=nobody argv=/usr/bin/perl /usr/local/bin/spf.pl
</pre>

<p>
Ahora añade la verificación SPF en <path>main.cf</path>. Un SPF
correctamente configurado no debería hacer ningún daño de manera que
podamos revisar SPF para todos los dominios
</p>

<pre caption="Modificando main.cf para que utilice SPF">
<comment>(En la sección smtpd_recipient_restrictions añade:)</comment>
check_policy_service unix:private/policy-spf
</pre>

<note>
Si tienes problemas utilizando SPF, por ejemplo al
utilizar <c>fetchmail</c>, quizás prefieras habilitar el SPF sólo para
algunos dominios.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Configurando amavisd-new para que utilice MySQL</title>
<section>
<title>Configurando MySQL</title>
<body>

<note>
Esto no ha sido probado todavía en versiones mayores que la
2.2. Cualquier comentario o sugerencia es bienvenido :).
</note>

<p>
Para dominios grandes, los valores por defecto que has definido
en <path>amavisd.conf</path> quizás no se adecuen a todos los
usuarios. Si configuras amavisd-new con soporte para MySQL puedes
tener configuraciones individuales por usuarios o por grupos.
</p>

<pre caption="Creando la base de datos y usuarios MySQL">
# <i>mysql -u root -p mysql</i>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 78 to server version: 4.0.18-log
Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
mysql> <i>create database maildb;</i>
mysql> <i>GRANT ALL PRIVILEGES ON maildb.* TO 'mail'@'localhost' IDENTIFIED BY 'very_secret_password';</i>
mysql> <i>use maildb;</i>
</pre>

<p>
Ahora que la base de datos está creada, necesitamos crear las
tablas. Puedes copiar y pegar lo siguiente al prompt de mysql:
</p>

<pre caption="Diseño de tablas MySQL">
CREATE TABLE users (
    id         int unsigned NOT NULL auto_increment,
    priority   int          NOT NULL DEFAULT '7',  -- 0 is low priority
    policy_id  int unsigned NOT NULL DEFAULT '1',
    email      varchar(255) NOT NULL,
    fullname   varchar(255) DEFAULT NULL,    -- not used by amavisd-new
    local      char(1),     -- Y/N  (optional field, see note further down)
    PRIMARY KEY (id),
    KEY email (email)
    );
CREATE UNIQUE INDEX users_idx_email ON users(email);
<comment>(cualquier dirección de e-mail, externa o local, utilizada como remitente en wblist)</comment>
CREATE TABLE mailaddr (
   id         int unsigned NOT NULL auto_increment,
   priority   int          NOT NULL DEFAULT '7',  -- 0 is low priority
   email      varchar(255) NOT NULL,
   PRIMARY KEY (id),
   KEY email (email)
   );
CREATE UNIQUE INDEX mailaddr_idx_email ON mailaddr(email);
<comment>(-- lista blanca y gris por destinatario,</comment>
<comment>-- coloca en relación wb a destinatario y remitente)</comment>
(white or blacklisted sender)
CREATE TABLE wblist (
   rid        int unsigned NOT NULL,     -- recipient: users.id
   sid        int unsigned NOT NULL,     -- sender:    mailaddr.id
   wb         char(1) NOT NULL, -- W or Y / B or N / space=neutral
   PRIMARY KEY (rid,sid)
   );
  
CREATE TABLE policy (
   id               int unsigned NOT NULL auto_increment,
   policy_name      varchar(32),     -- not used by amavisd-new
   virus_lover          char(1),     -- Y/N
   spam_lover           char(1),     -- Y/N  (optional field)
   banned_files_lover   char(1),     -- Y/N  (optional field)
   bad_header_lover     char(1),     -- Y/N  (optional field)
   bypass_virus_checks  char(1),     -- Y/N
   bypass_spam_checks   char(1),     -- Y/N
   bypass_banned_checks char(1),     -- Y/N  (optional field)
   bypass_header_checks char(1),     -- Y/N (optional field)
   spam_modifies_subj   char(1),     -- Y/N (optional field)
   spam_quarantine_to   varchar(64) DEFAULT NULL, -- (optional field)
   spam_tag_level  float,  -- higher score inserts spam info headers
   spam_tag2_level float DEFAULT NULL,  -- higher score inserts
               -- 'declared spam' info header fields 
   spam_kill_level float,  -- higher score activates evasive actions, e.g.
               -- reject/drop, quarantine, ...
               -- (subject to final_spam_destiny setting)
   PRIMARY KEY (id)
  );
</pre>

<note>
Si tienes inconvenientes utilizando copiar/pegar, quizás tengas que
copiar esto en otro lugar y quitarle los caracteres innecesarios.
</note>

<note>
Las búsquedas de correo se hacen con las direcciones puras
(rfc2821-sin comillas y sin llaves) como claves, por ejemplo: <e>John
"Funny" Smith@ejemplo.com</e>.
</note>

<note>
Las búsquedas son realizadas en el siguiente orden: <c>SQL</c>, <c>LDAP</c>, 
<c>hash</c>, <c>ACL</c>, <c>regexp</c>, <c>constant</c>. El primero
que devuelva una respuesta definitiva (not <c>undef/NULL</c>) detiene
la búsqueda.
</note>

<p>
Si deseas usar listas blancas y listas negras, entonces debes añadir
el remitente y el destinatario a <c>mailadr</c> luego de lo cual
defines la relación entre ambas direcciones de correo en <c>wblist</c>
e indicas si es lista blanca o lista negra.
</p>

<p>
Ahora que hemos creado las tablas, insertemos un usuario de prueba y
una política de ejemplo:
</p>

<pre caption="Creando un usuario y política de prueba">
INSERT INTO users
   SET
      id         =1,
      priority   =9,
      policy_id  =1,
      email      ="johndoe@example.com",
      fullname   ="John Doe",
      local      ="Y";
INSERT INTO policy
   SET
      id                     =1,
      policy_name            ="Test policy 1",
      virus_lover            ="N",
      spam_lover             ="N",
      banned_files_lover     ="N",
      bad_header_lover       ="N",
      bypass_virus_checks    ="N",
      bypass_spam_checks     ="N",
      bypass_banned_checks   ="N",
      bypass_header_checks   ="N",
      spam_modifies_subj     ="N",
      spam_quarantine_to     =NULL,
      spam_tag_level         =-50.0,
      spam_tag2_level        =7.0,
      spam_kill_level        =10.0;
</pre>

<note>
Copia esto en algún lugar y ajústalo a tus necesidades.
</note>

<note>
<c>local</c> debe estar definido en <c>Y</c>, de otra manera el correo
no será revisado en busca de spam.
</note>

<p>
Esto inserta un usuario y políticas de prueba. Ajusta estos ejemplos
para que se ajusten a tus necesidades. Mayor información sobre los
items de configuración puede ser encontrada
en <path>amavisd.conf</path>.
</p>
</body>
</section>

<section>
<title>Configurando amavisd para funcione con MySQL</title>
<body>

<p>
Ahora que MySQL está listo necesitamos indicarle a amavis que lo
utilice:
</p>

<pre caption="Modificando amavisd.conf">
@lookup_sql_dsn =
   ( ['DBI:mysql:maildb:host1', 'mail', 'very_secret_password']  );
<comment>(Por claridad descomenta el por defecto)</comment>
$sql_select_policy = 'SELECT *,users.id FROM users,policy'.
   ' WHERE (users.policy_id=policy.id) AND (users.email IN (%k))'.
   ' ORDER BY users.priority DESC';
<comment>(Si deseas usar listas blancas/negras)</comment>
   $sql_select_white_black_list = 'SELECT wb FROM wblist,mailaddr'.
     ' WHERE (wblist.rid=?) AND (wblist.sid=mailaddr.id)'.
     '   AND (mailaddr.email IN (%k))'.
     ' ORDER BY mailaddr.priority DESC';
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Configurando Spamassassin para que utilice MySQL</title>
<section>
<body>

<p>
En Spamassassin 3.0 es posible almacenar la información de Bayes y AWL
en una base de datos MySQL. Aquí te mostraré como conseguir esto de
una manera fácil.
</p>

<p>
Primero empieza creando el nuevo usuario y las tablas necesarias de
MySQL.
</p>

<pre caption="Creando la nueva base de datos y usuario MySQL">
# <i>mysql -u root -p mysql</i>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 78 to server version: 4.0.18-log
Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
mysql> <i>create database dbname;</i>
mysql> <i>GRANT ALL PRIVILEGES ON dbname.* TO 'dbuser'@'localhost' IDENTIFIED BY 'anoter_very_secret_password';</i>
mysql> <i>use dbname;</i>
</pre>

<p>
Ahora que la base de datos ha sido creada, seguiremos con las tablas
necesarias. Puedes copiar y pegar lo siguiente al monitor de mysql.
</p>

<pre caption="Distribución de tablas MySQL">
      CREATE TABLE bayes_expire (
          id                    int(11)         NOT NULL default '0',
          runtime               int(11)         NOT NULL default '0',
          KEY bayes_expire_idx1 (id)
          ) TYPE=MyISAM;
      CREATE TABLE bayes_global_vars (
          variable              varchar(30)     NOT NULL default '',
          value                 varchar(200)    NOT NULL default '',
          PRIMARY KEY           (variable)
          ) TYPE=MyISAM;
      INSERT INTO bayes_global_vars VALUES ('VERSION','3');
      CREATE TABLE bayes_seen (
          id                    int(11)         NOT NULL default '0',
          msgid                 varchar(200) binary NOT NULL default '',
          flag                  char(1)         NOT NULL default '',
          PRIMARY KEY           (id,msgid)
          ) TYPE=MyISAM;
      CREATE TABLE bayes_token (
          id                    int(11)         NOT NULL default '0',
          token                 char(5)         NOT NULL default '',
          spam_count            int(11)         NOT NULL default '0',
          ham_count             int(11)         NOT NULL default '0',
          atime                 int(11)         NOT NULL default '0',
          PRIMARY KEY           (id, token)
          ) TYPE=MyISAM;
      CREATE TABLE bayes_vars (
          id                    int(11)         NOT NULL AUTO_INCREMENT,
          username              varchar(200)    NOT NULL default '',
          spam_count            int(11)         NOT NULL default '0',
          ham_count             int(11)         NOT NULL default '0',
          token_count           int(11)         NOT NULL default '0',
          last_expire           int(11)         NOT NULL default '0',
          last_atime_delta      int(11)         NOT NULL default '0',
          last_expire_reduce    int(11)         NOT NULL default '0',
          oldest_token_age      int(11)         NOT NULL default '2147483647',
          newest_token_age      int(11)         NOT NULL default '0',
          PRIMARY KEY           (id),
          UNIQUE bayes_vars_idx1 (username)
          ) TYPE=MyISAM;
                        
      CREATE TABLE awl (
          username              varchar(100)    NOT NULL default '',
          email                 varchar(200)    NOT NULL default '',
          ip                    varchar(10)     NOT NULL default '',
          count                 int(11)         default '0',
          totscore              float           default '0',
          PRIMARY KEY           (username,email,ip)
          ) TYPE=MyISAM;
</pre>

<impo>
La línea <c>INSERT</c> es necesaria para que Spamassassin funcione.
</impo>

<note>
Esto también está disponible en el tarball de código fuente en los
archivos <path>awl_mysql.sql</path> y <path>bayes_mysql.sql</path>.
</note>
</body>
</section>

<section>
<title>Configurando Spamassassin para que utilice el motor MySQL</title>
<body>

<p>
Si tienes una vieja base de datos de Bayes en el formato DBM y quieres
conservarla sigue las siguientes instrucciones:
</p>

<pre caption="Transformando información de Bayes desde una base de datos DBM">
<i>su - amavis</i> 
<i>sa-learn --sync</i> 
<i>sa-learn --backup > backup.txt</i> 
<i>sa-learn --restore backup.txt</i> 
</pre>

<note>
Nótese que el último paso debe ser ejecutado sólo luego de que la base
de datos MySQL y <path>local.cf</path> hayan sido actualizados.
</note>

<p>
Ahora hay que darle a Spamassassin la información necesaria:
</p>

<pre caption="Modificando /etc/mail/spamassassin/local.cf">
<comment>(Indica a Spamassissin que use MySQL para los datos bayesianos</comment>
bayes_store_module              Mail::SpamAssassin::BayesStore::SQL
bayes_sql_dsn                   DBI:mysql:sa_bayes:localhost:3306
bayes_sql_username              db_name
bayes_sql_password              another_very_secret_password
<comment>(Indica a Spamassissin que utilice MySQL para los datos AWL data</comment>
auto_whitelist_factory          Mail::SpamAssassin::SQLBasedAddrList
user_awl_dsn                    DBI:mysql:sa_bayes:localhost:3306
user_awl_sql_username           db_name
user_awl_sql_password           another_very_secret_password
</pre>

<note>
Para crear un password realmente secreto utiliza <c>emerge
app-admin/makepasswd</c> y <c>makepasswd -chars=8</c>.
</note>

<p>
Ahora, todo lo que tienes que hace es <c>/etc/init.d/amavisd restart</c>.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Solucionando problemas</title>
<section>
<title>Amavisd-new</title>
<body>

<p>
Para solucionar cualquier problema con Amavisd-new empieza
deteniendolo con <c>/etc/init.d/amavisd stop</c> e iniciándolo
manualmente como proceso activo con <c>amavisd debug</c> y observa
cualquier anomalía en la salida.
</p>
</body>
</section>

<section>
<title>Spamassassin</title>
<body>

<p>
Para solucionar problemas en Spamassassin puedes filtran un correo
utilizando <c>spamassassin -D &lt; mail</c>. Para asegurarte que las
cabeceras están intactas puedes moverlas desde otra máquina con IMAP.
</p>

<note>
Si necesitas solucionar algún problema tienes que activar el login del
usuario <c>amavis</c> cambiando el shell en <path>/etc/passwd</path>
a <path>/bin/bash</path>.
</note>

<p>
Si deseas, puedes obtener la misma y más información con Amavisd-new
utilizando <c>amavisd debug-sa</c>.
</p>
</body>
</section>

<section>
<title>Consiguiendo ayude</title>
<body>

<p>
Si necesitas ayuda, un buen lugar al cual acudir es la lista de correo
de amavis-user. Antes de colocar alguna pregunta revisa
el <uri link="http://marc.theaimsgroup.com/?l=amavis-user"> archivo de
la lista de correo de usuarios Amavis</uri>. Si no encuentras ninguna
ayuda ahí puedes suscribirte a
la <uri
link="https://lists.sourceforge.net/lists/listinfo/amavis-user">Lista
de correo de usuarios Amavis</uri>.
</p>

<p>
Si tu pregunta es específica de SpamAssassin, DCC, Razo o Postfix,
dirígete a sus respectivas páginas listadas a continuación.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Fuentes</title>
<section>
<title>Para mayor información</title>
<body>

<ul>
<li><uri link="http://www.ijs.si/software/amavisd/INSTALL">Instalación
de Amavisd-new</uri></li>
<li><uri
link="http://www.ijs.si/software/amavisd/README.postfix">Amavisd-new
Postfix LEEME</uri>
</li>
<li><uri
link="http://www.ijs.si/software/amavisd/amavisd-new-docs.html#pbanks">Documentación
del banco de políticas de Amavisd-new</uri></li>
<li><uri
link="http://spamassassin.apache.org/full/3.0.x/dist/sql/README">Spamassassin
SQL LEEME</uri></li>
<li><uri link="http://www.greylisting.org">Listas grises</uri></li>
<li><uri link="http://www.postfix.org/FILTER_README.html">Postfix
SMTPD_POLICY_README</uri></li>
<li><uri
link="http://www.unixwiz.net/techtips/postfix-HELO.html">Bloqueando 
spammers con los controles HELO de Postfix</uri></li>
<li><uri
link="http://www.linuxjournal.com/article.php?sid=7327">SPF Overview</uri></li>
<li><uri
link="http://jimsun.linxnet.com/misc/postfix-anti-UCE.txt">Jim
Seymour's Postfix Anti-UCE Cheat Sheet</uri></li>
</ul>
</body>
</section>

<section>
<title>Fuentes en general</title>
<body>

<ul>
<li><uri link="http://www.spamassassin.org">Spamassassin</uri></li>
<li><uri link="http://www.ijs.si/software/amavisd/">Amavisd-new</uri></li>
<li><uri
link="http://www.ijs.si/software/amavisd/amavisd-new-docs.html">Documentación
de Amavisd-new piezas y bits</uri></li>
<li><uri link="http://razor.sourceforge.net/">Vipuls's Razor</uri></li>
<li><uri link="http://pyzor.sourceforge.net/">Pyzor</uri></li>
<li><uri link="http://www.rhyolite.com/anti-spam/dcc/">Distributed Checksum
Clearinghouse</uri></li> <li><uri
link="http://www.renaissoft.com/projects/maia/">Maia Mailguard</uri></li>
</ul>
</body>
</section>

<section>
<title>Otros como</title>
<body>

<ul>
<li><uri link="http://www.flakshack.com/anti-spam/">Fairly-Secure Anti-SPAM
Gateway Using OpenBSD, Postfix, Amavisd-new, SpamAssassin, Razor
and DCC</uri></li>
</ul>
</body>
</section>
</chapter>
</guide>
