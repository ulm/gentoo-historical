<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/vi-guide.xml,v 1.6 2011/08/21 11:38:07 nimiux Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="es">
<title>Aprendiendo vi - el método de la Hoja de Trucos</title>
<author title="Author">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Author">
  <mail link="stocke2@gentoo.org">Eric Stockbridge</mail>
</author>
<author title="Editor">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Editor-es">
  <mail link="bass@gentoo.org">José Alberto Suárez López</mail>
</author>
<author title="Editor Es">
  <mail link="chiguire@gentoo.org">John Christian Stoddart</mail>
</author>
<author title="Editor Es">
  <mail link="yoswink@gentoo.org">José Luis Rivero</mail>
</author>
<author title="Traductor">
  <mail link="warp3r@gmail.com">Jordi Molina</mail>
</author>

<abstract>
Esta guía le enseñará a usar vi mediante el uso de una hoja de trucos que
servirá para agilizar el proceso de aprendizaje. Esta es la primera guia de
vi orientada a principiantes.
</abstract>

<version>2</version>
<date>2011-08-15</date>

<chapter>
<title>Empezando</title>
<section>
<title>Introducción</title>
<body>

<p>
Ésta guia le enseñará a usar vi, un potente editor visual.  Utilizando un
método especial basado en una <e>hoja de trucos</e>, este tutorial se ha
escrito para convertirle en un usuario hábil de vi sin que tenga que
emplear mucho tiempo. En este tutorial, aprenderá como moverte, editar
texto, usar el modo insertar, copiar y pegar texto así como usar
extensiones importantes de vim como el modo visual y la edición
con múltiples ventanas.
</p>

<p>
Si desconoce o no se siente cómodo usando vi, quizás quiera leer
este tutorial y ganar velocidad en uno de los más populares y poderosos
editores visuales para Linux/UNIX
</p>

</body>
</section>
<section>
<title>Sobre esta guía...</title>
<body>

<p>
Hay una característica de vi que hace difícil aprender su funcionamiento...
vi tiene muchos comandos. Para usar vi de una forma efectiva, va a tener
que memorizar unos cuantos. Ésto puede llevarle tiempo, y uno de los
objetivos de este tutorial es no quitarle demasiado tiempo. Así que,
desde el principio, tenemos un reto -- ¿Qué podemos hacer para que
recuerde un montón de comandos en poco tiempo?
</p>

<p>
Para superar este reto, conforme vayamos avanzando en este tutorial,
vamos a ir construyendo gradualmente una hoja de trucos para vi. Esta
hoja va a contener todos los comandos importantes de vi. Una vez haya
completado este tutorial, podrá acudir a su hoja de trucos si ha
olvidado un comando en particular. Conforme pase el tiempo, irá
memorizando los comandos, y cada vez dependerá menos de la hoja de trucos.
¡Vas a aprender a utilizar vi de la forma más rápida nunca conocida!
</p>

</body>
</section>
<section>
<title>El proceso de aprendizaje</title>
<body>

<p>
En ésta guia voy a usar varias técnicas para ayudarle a aprender.
En primer lugar, voy a describirle como funcionan ciertos comandos en
particular, como era de esperar. Después, voy a pedirle que pruebe esos
comandos directamente en vi (para que practique), entonces le pediré
que apunte esos comandos en su hoja de trucos (para que pueda consultarlo
más adelante). Si quiere aprender vi rápidamente, es muy importante que
siga todos esos pasos. Probar un comando y transcribirlo después a su
hoja de trucos le ayudará a memorizar ese comando.
</p>

</body>
</section>
<section>
<title>Presentación de vim</title>
<body>

<p>
Existen muchas versiones de vi. En esta guía voy a mostrarle cómo utilizar
una versión de vi llamada <c>vim</c>. El editor vim es muy popular y tiene
un montón de extensiones que hacen a vi mucho más ameno (si en algún
momento, enseño un comando específico de vim, lo indicaré). Si necesita
instalar vim, puede obtenerlo en
<uri link="http://www.vim.org/">www.vim.org</uri>. Además de una linea de
comandos vi mejorada, vim también viene con <c>gvim</c>, un excelente
editor en modo gráfico que se puede configurar para usar las excelentes
librerías GTK+ para interfaces gráficas de usuario. A continuación se
muestra una captura de pantalla de gvim tomada de mi sistema:
</p>

<figure link="images/vishot.png"
        short="screenshot"
        caption="Captura de GVIM"/>

<p>
Si es un novato, intente ejecutar gvim en su sistema. Usar vi en una
GUI puede hacer la vida más fácil a los principiantes.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Primeros pasos</title>
<section>
<title>Escoja un archivo</title>
<body>

<p>
Antes de usar vi para editar archivos, necesita saber como usar vi para
moverse por un archivo. Existen muchos comandos de movimiento en vi,
y vamos a ver unos cuantos. Para esta parte del tutorial, busque un archivo
de texto que no tenga importancia y ábralo en vi escribiendo:
</p>

<pre caption="Cargar un archivo en vi">
$ <i>vi mifichero.txt</i>
</pre>

<p>
Si ha instalado vim, escriba <c>vim mifichero.txt</c>. Si prefiere usar
gvim, teclee <c>gvim mifichero.txt</c>. <path>mifichero.txt</path> debe ser el
nombre de un archivo de texto en su sistema.
</p>

</body>
</section>
<section>
<title>Dentro de vi</title>
<body>

<p>
Después de que vi cargue, debería ver una parte del archivo de texto que
cargó en la pantalla. Felicidades -- ¡está en vi!  A diferencia de muchos
otros editores, cuando vi arranca, está en un modo especial llamado
<e>modo comando</e>. Esto significa que si presionas <c>l</c> en el
teclado, en vez de introducir una <c>l</c> en la posición actual del
cursor, el cursor se va a mover un carácter a la derecha. En el modo
comando, los caracteres en tu teclado se usan para enviar comandos a vi,
en lugar de introducir caracteres literales en el texto. Uno de los tipos
de comando más importantes son los comandos de movimiento; vamos a echarle
un vistazo a algunos.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Moviéndose</title>
<section>
<title>Moviéndose en vi, primera parte</title>
<body>

<p>
Cuando está en modo comando, puede usar las teclas
<c>h</c>,<c>j</c>,<c>k</c> y <c>l</c> para mover el cursor a la izquierda,
abajo, arriba y derecha respectivamente. Si esta usando una versión
moderna de vi, también puede usar las teclas de cursor para este
propósito. Las teclas <c>h</c>,<c>j</c>,<c>k</c> y <c>l</c> son prácticas
porque, una vez se haya acostumbrado a ellas, será capaz de moverse
por el archivo sin tener que mover sus dedos de la misma linea del
teclado. Intentw usar <c>h</c>,<c>j</c>,<c>k</c> y <c>l</c> y las teclas
de cursor para moverse por el archivo de texto. Intente ahora apretar
<c>h</c> hasta llegar al principio de una línea. Observe que vi no mueve
el cursor al final de la línea anterior pulsando <c>h</c>. De la misma
forma, no puede situar el cursor al principio de la siguiente linea
llegando al final de la linea actual presionando <c>l</c>.
</p>

</body>
</section>
<section>
<title>Moviéndose en vi, segunda parte</title>
<body>

<p>
El editor vi posee atajos especiales para ir al principio o al final de la
linea actual. Puede usar <c>0</c> (cero) para saltar al primer carácter
de una linea, y <c>$</c> para saltar al último carácter. Pruébelos y
observe como funcionan. La gran cantidad de comandos de movimiento que
posee vi lo convierten en un excelente paginador (un "pager" como los
comandos more o less.) Usar vi como paginador también le ayudará a
aprender todos los comandos de movimiento más rápidamente.
</p>

<p>
También puede usar <c>&lt;CTR&gt;F</c> y <c>&lt;CTR&gt;B</c> para moverse
una página adelante o atrás. Las versiones modernas de vi (como vim)
permiten también usar las teclas <c>Repág</c> y <c>AvPag</c> para este fin.
</p>

</body>
</section>
<section>
<title>Moviéndose entre palabras, primera parte</title>
<body>

<p>
Vi también le permite moverse una palabra a la derecha o a la izquierda.
Para situar el cursor en el <e>primer</e> carácter de la siguiente
palabra, pulse <c>w</c>. Para moverse al <e>último</e> carácter de la
siguiente palabra, pulse <c>e</c>. Para moverse al primer carácter de la
palabra <e>anterior</e>, pulse <c>b</c>. Juegue con esto.
</p>

</body>
</section>
<section>
<title>Moviéndose entre palabras, segunda parte</title>
<body>

<p>
Después de jugar un poco con los comandos de movimiento entre palabras,
se habrá dado cuenta de que vi considera palabras tipo <c>foo-bar-oni</c>,
como ¡cinco palabras separadas! Ésto es así por defecto: vi delimita las
palabras por espacios <e>o</e> signos de puntuación. <c>foo-bar-oni</c> es,
por lo tanto, considerada como cinco palabras: <c>foo</c>, <c>-</c>,
<c>bar</c>, <c>-</c> y <c>oni</c>.
</p>

<p>
A veces, este comportamiento es el que queremos, otras no.
Afortunadamente, vi también entiende el concepto de "palabra grande".
Vi delimita las "palabras grandes" únicamente mediante <e>espacios o saltos
de lineae</e>. Ésto significa que <c>foo-bar-oni</c> es considerada como
cinco palabras vi, y a su vez, se considera una única "palabra grande" vi.
</p>

</body>
</section>
<section>
<title>Moviéndose entre palabras, tercera parte</title>
<body>

<p>
Para saltar hacia la siguiente "palabra grande" o hacia la anterior,
utilice los comandos de movimiento entre palabras en <e>mayúsculas</e>.
Use <c>W</c> para saltar hacia el primer carácter de la siguiente
"palabra grande", <c>E</c> para saltar al último carácter de la siguiente
"palabra grande", y <c>B</c> para saltar al primer carácter de la
"palabra grande" anterior. Pruebe todos estos comandos y compare los
resultados de los comandos de movimiento entre palabras con los de
movimiento entre "palabras grandes" hasta comprender las diferencias.
</p>

</body>
</section>
<section>
<title>Movimientos mayores</title>
<body>

<p>
Nos queda por ver algunos comandos antes de empezar a realizar nuestra
hoja de trucos... Puede usar los caracteres <c>(</c> y <c>)</c> para
moverse hacia el principio de la siguiente frase o la anterior. También
puede usar <c>{</c> o <c>}</c> para saltar al principio del párrafo actual
o al del siguiente. Pruébelo.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Saliendo</title>
<section>
<body>

<p>
Ya hemos descubierto los comandos básicos de movimiento, pero todavía
quedan un montón de comandos que necesita conocer. Escribiendo <c>:q</c>
saldrá de vi. Si no funciona, seguramente se deberá a que, de alguna
forma, ha modificado el archivo accidentalmente. Para decirle a vi que
queremos salir y descartar todos los cambios, escribiremos <c>:q!</c>.
En estos momentos debería estar en la línea de comandos.
</p>

<p>
En vi,cualquier comando que empiece por <c>:</c> se conoce como comando
<e>ex-mode</e>. Ésto es así porque vi tiene un editor no visual integrado
llamado <e>ex</e>. Puede usarse de una forma muy parecida a sed para hacer
operaciones de modificación desde la línea. Además, puede usarse para salir,
como ya hemos visto. Si alguna vez presiona la tecla <c>Q</c> estando en
modo comando, se iniciará el modo ex. Si le ocurre esto alguna vez, se
enfrentará cara a cara con un símbolo de línea de comandos :, al pulsar
la tecla Intro, la pantalla entera se desplazará hacia arriba. Para volver
al modo normal de vi, simplemente teclee vi y pulse Intro.
</p>

</body>
</section>
</chapter>

<chapter>
<title>La Hoja de Trucos</title>
<section>
<title>El principio de la hoja de trucos</title>
<body>

<p>
Hemos visto un montón de comandos, y ha llegado el momento de pasarlos a
nuestra hoja de trucos. Para la hoja de trucos necesitarás una hoja tipo
folio US o A4 (¡piense que vamos a poner una gran cantidad de información
en ella!) A continuación puede ver una foto de mi hoja de trucos después de
haber transcrito todos los comandos que hemos cubierto hasta ahora. Intente
seguir mi diseño, si es posible, de forma que podamos poner todo en una sola
hoja.
</p>

<figure link="/images/vicheat-first.png"
        short="Primera parte de la hoja de trucos"
        caption="Hoja de trucos"/>

</body>
</section>
<section>
<title>vi misceláneo</title>
<body>

<p>
Sigamos con nuestro aprendizaje rápido de comandos. En modo comando, puede
saltar a una linea en concreto tecleando <c>G</c>. Para saltar a la primera
linea de un fichero, teclea <c>1G</c>. Observe que <c>G</c> está en
mayúsculas.
</p>

<p>
Si quiere saltar a la siguiente ocurrencia de una cadena de texto en
particular, teclee <c>/&lt;regexp&gt;</c> y presione <c>enter</c>.
Substituya &lt;regexp&gt; por la expresión regular que está buscando.
Si no sabe como usar expresiones regulares, no se preocupe -- escribir
<c>/foo</c> le llevará a la siguiente ocurrencia de <e>foo</e>. Solo
tendrá que tener cuidado cuando necesite referenciar literalmente los
caracteres <c>^</c>, <c>.</c>, <c>$</c> o <c>\</c>. Para estos
caracteres deberá poner una barra invertida (<c>\</c>) como prefijo, y
listo. Por ejemplo, <c>/foo\.gif</c> buscará la siguiente ocurrencia
de "foo.gif".
</p>

<p>
Para repetir la búsqueda hacia adelante, pulse <c>n</c>. Para repetir la
búsqueda hacia atrás, teclee <c>N</c>. Como siempre, pruebe estos
comandos en su propio editor vi. También puede teclear <c>//</c> para
repetir la última búsqueda.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Guardando y Editando</title>
<section>
<title>Guardar y guardar como...</title>
<body>

<p>
Hemos aprendido como usar el comando <e>ex</e> <c>:q</c> para salir de
vi. Si quiere salvar los cambios, teclee <c>:w</c>. Si lo que quiere
es guardar los cambios en otro archivo, escriba
<c>:w nombrearchivo.txt</c> para guardarlo como <e>nombrearchivo.txt</e>.
Si quiere guardar y salir, teclee <c>:x</c> o <c>:wq</c>.
</p>

<p>
En vim (al igual que en otros editores vi avanzados, como elvis), puede
tener múltiples buffers abiertos a la vez. Para abrir un archivo en un una
ventana nueva, escriba <c>:sp nombrearchivo.txt</c>.
El fichero <path>nombrearchivo.txt</path> aparecerá abierto para edición
en una nueva ventana dividida. Para cambiar de una ventana a la otra,
teclee <c>&lt;CTR&gt;w&lt;CTR&gt;w</c> (control-w dos veces). Cualquier
comando <c>:q</c>, <c>:q!</c>, <c>:w</c> y <c>:x</c> que use solo se
aplicará a la ventana actualmente activa.
</p>

</body>
</section>
<section>
<title>Edición simple</title>
<body>

<p>
Y llegó el momento de comenzar a aprender algunos de los comandos básicos
de edición. Los comandos que vamos a cubrir en esta sección se consideran
<e>simples</e> porque le mantienen en modo comando. Los comandos "complejos"
le ponen automáticamente en modo insertar -- un modo que le permite
introducir datos directamente desde el teclado. Lo veremos en breve.
</p>

<p>
Por el momento, sitúese por encima de algún carácter y presione <c>x</c>
varias veces. Verá que <c>x</c> elimina el carácter situado justo debajo del
cursor. Ahora, mueva el cursor al medio de un párrafo dentro de su archivo
de texto, y pulse <c>J</c> (en mayúsculas). Verá que el comando <c>J</c>
indica a vi que junte la siguiente linea con el final de la linea actual.
Ahora, sitúese encima de un carácter y presione <c>r</c>, luego escriba
un nuevo carácter; verá que el carácter original ha sido reemplazado. Para
acabar, sitúese en una linea cualquiera del archivo y escriba <c>dd</c>.
Observará que <c>dd</c> elimina la linea de texto actual.
</p>

</body>
</section>
<section>
<title>Repitiendo y borrando</title>
<body>

<p>
Puede repetir cualquier comando de edición pulsando la tecla <c>.</c>. Si
experimenta un poco, verá que tecleando <c>dd...</c> elimina cuatro lineas,
y <c>J......</c> junta cuatro lineas. Como siempre, vi nos proporciona
otro atajo útil.
</p>

<p>
Para borrar texto, puede usar el comando <c>d</c> combinado con cualquier
comando de movimiento. Por ejemplo, <c>dw</c> eliminará el texto desde la
posición actual del cursor hasta el comienzo de la siguiente palabra;
<c>d)</c> eliminará hasta el final de la siguiente frase, y <c>d}</c>
eliminará lo que queda de párrafo. Experimente un poco con el comando
<c>d</c> y el resto de comandos de edición hasta que se sienta cómodo
con ellos.
</p>

</body>
</section>
<section>
<title>¡Deshacer!</title>
<body>

<p>
Ahora que ya hemos experimentado con el borrado, seria bueno aprender como
deshacer cualquier cambio. Presionando <c>u</c>, la versión original de vi
permitía deshacer el último cambio. Las versiones más actuales de vi, como
vim, le permiten presionar <c>u</c> repetidamente para ir deshaciendo los
cambios que haya podido hacer. Pruebe a combinar algunos comandos <c>d</c>
y <c>u</c> alternativamente.
</p>

</body>
</section>
<section>
<title>Actualizar la hoja de trucos</title>
<body>

<p>
¡Es el momento de actualizar la hoja de trucos! Después de añadir los
comandos que hemos aprendido hasta ahora, su hoja de trucos debería
parecerse a ésta:
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-edit.png"
        short="Hoja de trucos"
        caption="Hoja de trucos con comandos de edición"/>

</body>
</section>
</chapter>

<chapter>
<title>Modo Insertar</title>
<section>
<body>

<p>
Hasta ahora, ha aprendido cómo moverse dentro de vi, realizar e/s de
archivos y algunas operaciones básicas de edición. De todas formas,
¡todavía no le he enseñado como introducir texto libremente! Lo he
hecho intencionadamente, porque el modo insertar de vi es un poco
complicado al principio. De todas formas, una vez se acostumbre al
modo insertar, su complejidad (y flexibilidad) se convertirán en una
ventaja.
</p>

<p>
Dentro del <e>modo insertar</e> de vi, podrá introducir texto directamente
en la pantalla de la misma forma que lo hace con otros editores visuales.
Una vez haya introducido sus modificaciones, puede pulsar la tecla Escape
volver al <e>modo comando</e>. Para entrar en modo insertar, presione
<c>i</c> o <c>a</c>. Al presionar <c>i</c>, su texto se <e>insertará</e>
delante del carácter actual, y si pulsa <c>a</c>, su texto se
<e>añadirá</e> justo después del carácter actual. Recuerde, debe
presionar <c>&lt;ESC&gt;</c> para volver al modo comando.
</p>

</body>
</section>
<section>
<title>Ventajas del modo Insertar</title>
<body>

<p>
Vaya probando los comandos <c>a</c> e <c>i</c>. Pulse tanto <c>a</c> como
<c>i</c>, escriba algo de texto, y luego pulse Escape para volver al modo
comando. Después de pulsar <c>a</c> o <c>i</c>, pruebe a pulsar
<c>&lt;Intro&gt;</c>, y mire que ocurre. Pruebe también a usar las teclas
de movimiento del cursor (flechas) y la tecla <c>&lt;Supr&gt;</c> para
deducir el uso del modo insertar. Usando las teclas de movimiento del
cursor y <c>&lt;Supr&gt;</c>, puede realizar bastantes tareas de edición
sin tener que cambiar varias veces del modo comando al modo insertar y
viceversa.
</p>

</body>
</section>
<section>
<title>Opciones de Insertar</title>
<body>

<p>
Ahora mostraremos otras formas prácticas de acceder al modo insertar.
Presione <c>A</c> (en mayúsculas) para empezar a añadir texto al
<e>final</e> de la línea actual, independientemente de la posición actual
del cursor en la línea. De la misma forma, pulse <c>I</c> (mayúscula)
para empezar a introducir texto al <e>principio</e> de la línea actual.
Pulse <c>o</c> para crear una nueva linea por debajo de la línea actual,
en la cual podrá introducir texto, y pulse <c>O</c> (mayúscula) para
crear una linea nueva por encima de la actual. Para reemplazar totalmente
la linea actual con una nueva, teclee <c>cc</c>. Para reemplazar todo
desde la posición actual hasta el final de la linea, teclee <c>c$</c>.
Para reemplazar todo desde la posición actual hasta el principio de la
línea, teclee <c>c0</c>.
</p>

<p>
Además de realizar una operación especial, cada uno de estos comandos le
pondrá en modo insertar. Después de introducir su texto, pulse
<c>&lt;Escape&gt;</c> para volver al modo comando.
</p>

</body>
</section>
<section>
<title>Cambiar texto</title>
<body>

<p>
Hemos usado un poco el comando <c>c</c> (cambiar) cuando hemos tecleado
<c>cc</c>, <c>c0</c> y <c>c$</c>. <c>cc</c> es una forma especial de comando
de cambio, similar a <c>dd</c>. Los comandos <c>c0</c> y <c>c$</c> son
ejemplos de como usar el comando cambiar en combinación con los comandos de
movimiento. De la misma forma, <c>c</c> funciona de una forma parecida a
<c>d</c>, excepto que éste le deja en modo insertar para que pueda
entrar texto de reemplazo en la región recién eliminada. Pruebe a usar
varios comandos de movimiento con <c>c</c> y pruébelos con su archivo
(pista: <c>cW</c>, <c>ce</c>, <c>c(</c>).
</p>

</body>
</section>
</chapter>

<chapter>
<title>Comandos Combinados</title>
<section>
<body>

<p>
El editor vi se vuelve <e>realmente</e> potente cuando se comienza a
utilizar comandos combinados (comandos "combo"), como por ejemplo,
<c>d{</c> y <c>cw</c>. Aparte de estos comandos, también puede combinar
un número con cualquier comando de movimiento, así por ejemplo <c>3w</c>
indicará a vi que salte tres palabras a la derecha. Algunos comandos
"combo" más: <c>12b</c>, <c>4j</c>.
</p>

<p>
Vi, además de permitir combinaciones del tipo (número)(comando de
movimiento), también permite combinar <c>d</c> o <c>c</c> con un número o
con un comando de movimiento. Así, <c>d3w</c> eliminará las tres palabras
siguientes, <c>d2j</c> eliminará la siguiente línea y las dos siguientes,
etc. Pruebe a combinar varios combos con <c>c</c> y <c>d</c> para ver lo
potente y ágil que puede ser la edición con vi. Una vez asimile estos
comandos, será capaz de editar archivos a una velocidad increíble.
</p>

</body>
</section>
<section>
<title>Actualizar la hoja de trucos</title>
<body>

<p>
Ahora, actualizaremos de nuevo la hoja de trucos. Más o menos debería
parecerse a esto:
</p>

<figure link="/images/vicheat-compound.png"
        short="Hoja de trucos"
        caption="Hoja de trucos con comandos combinados"/>

</body>
</section>
<section>
<title>Características de productividad</title>
<body>

<p>
Hasta ahora, hemos visto como movernos, guardar y salir, realizar
ediciones y borrados simples y usar el modo insertar. Con todo ésto en
la hoja, debería poder usar vi para realizar casi cualquier tarea.
</p>

<p>
Pese a ésto, vi tiene más comandos útiles. En ésta sección aprenderá a
<e>cortar</e>, <e>copiar</e>, <e>pegar</e>, <e>buscar</e>,
<e>reemplazar</e> y usar <e>autoindentación</e>. Todas éstas
posibilidades ayudarán a que vi sea un poco más divertido y productivo.
</p>

</body>
</section>
<section>
<title>Modo Visual</title>
<body>

<p>
La mejor forma para cortar y pegar es usar el <e>modo visual</e>, un modo
especial que ha sido añadido en versiones modernas de vi, como vim y elvis.
Puede considerar el modo visual como un modo de "resaltado de texto". Una
vez que el texto queda resaltado, se puede copiar o eliminar, para que
luego se pueda pegar. Si esta usando gvim, puede resaltar el texto
simplemente arrastrando el ratón con el botón izquierdo presionado sobre
una región de texto determinada:
</p>

<figure link="/images/vihighlight.png"
        short="Texto resaltado"
        caption="VIM con texto resaltado"/>

<p>
Además, puede, entrar en modo visual pulsando <c>v</c> (que es la única
opción que tendrá si utiliza vi desde la consola). A continuación mueva
el cursor usando los comandos de movimiento (normalmente las teclas de
movimiento), verá que puede resaltar una región de texto. Cuando la
región de texto que quiera esté resaltada, estará lista para ser cortada
o copiada.
</p>

<p>
Si quiere copiar el texto, pulse <c>y</c> (que proviene del término inglés
"yank"). Si está cortando el texto, pulse <c>d</c>. Volverá entonces al
modo comando. Ahora sitúese en la posición donde quiera insertar el texto
copiado o cortado, y pulse <c>P</c> para insertar el texto antes del
cursor, o <c>p</c> para insertarlo después. ¡Voilà, el copiado/cortado
se ha completado!  Pruébelo varias veces antes de avanzar a la siguiente
sección.
</p>

</body>
</section>
<section>
<title>Reemplazar texto</title>
<body>

<p>
Para reemplazar patrones de texto, usamos el modo <e>ex</e>. Si quiere
reemplazar el primer patrón que aparece en la línea actual, escriba
<c>:s/&lt;regexp&gt;/&lt;reemplazo&gt;/</c> y presione
<c>&lt;Intro&gt;</c>, sustituya &lt;regexp&gt; por el texto que
desea reemplazar y &lt;reemplazo&gt; por la cadena de texto con el que lo
va a sustituir. Para reemplazar todas las coincidencias en la línea
actual, teclee <c>:s/&lt;regexp&gt;/&lt;reemplazo&gt;/g</c> y pulse Intro.
Para reemplazar todas las ocurrencias de un patrón en su archivo (que
normalmente es lo que quiere), escriba
<c>:%s/&lt;regexp&gt;/&lt;reemplazo&gt;/g</c>. Si quiere realizar un
reemplazo global, pero haciendo que vi le pida confirmación de cada
reemplazo, teclee <c>:%s/&lt;regexp&gt;/&lt;reemplazo&gt;/gc</c> (la c
viene del inglés, "change", cambiar) y pulse <c>&lt;Intro&gt;</c>.
</p>

</body>
</section>
<section>
<title>Indentación</title>
<body>

<p>
Ël editor vi incluye soporte para autoindentación, ideal para editar código
fuente. La mayoría de las versiones modernas de vi (p.e. vim) tendrán
activado automáticamente el modo autoindentado cuando edite un archivo de
código fuente (por ejemplo un archivo .c). Cuando el autoindentado está
activo, puede usar <c>&lt;CTR&gt;d</c> (control-d) para indentar un nivel
hacia la izquierda y <c>&lt;CTR&gt;t</c> (control-t) para indentar a la
derecha un nivel. Si el autoindentado no se activa automáticamente, puede
hacerlo de forma manual con el comando <e>ex</e> <c>:set autoindent</c>.
Puedes también indicar a vi el tamaño de cada tabulación a su gusto
mediante el comando <c>:set tabstop</c>; <c>:set tabstop=4</c> es bastante
popular.
</p>

</body>
</section>
<section>
<title>La hoja de trucos definitiva</title>
<body>

<p>
Y bien, ¡ya hemos llegado al final de éste tutorial de vi! Una vez añada
todos los comandos de edición avanzada a tu hoja de trucos, debería quedar
como la siguiente:
</p>

<figure link="/images/vicheat-final.png"
        short="Hoja de trucos"
        caption="Hoja final de trucos"/>

<p>
Tenga su hoja de trucos a mano, y empiece a usar vi para editar archivos y
escribir correos electrónicos. Use la hoja de trucos cuando la necesite;
verá que en una semana se sabrá casi todos los comandos de memoria y su
productividad con vi llegará a su máximo.
</p>

<p>
Si quieres usar vi como tu editor por defecto, utilice la orden
<c>eselect</c>:
</p>

<pre caption="Usar vi como editor por defecto">
~# <i>eselect editor list</i>
Available targets for the EDITOR variable:
  [1]   /bin/nano
  [2]   /bin/ed
  [3]   /usr/bin/ex
  [4]   /usr/bin/vi
  [ ]   (free form)

~# <i>eselect editor set 4</i>
Setting EDITOR to /usr/bin/vi ...
>>> Regenerating /etc/ld.so.cache...
Run ". /etc/profile" to update the variable in your shell.
</pre>

<p>
Si quiere definir esto únicamente para su usuario en lugar de definirlo
para todo el sistema, defina la variable <c>EDITOR</c> en su fichero
<path>~/.bashrc</path>:
</p>

<pre caption="Definir vi como el editor por defecto del usuario">
~$ <i>vi ~/.bashrc</i>
<comment>(...)</comment>
export EDITOR="/usr/bin/vi"
</pre>

</body>
</section>
<section>
<title>Recursos</title>
<body>

<p>
A continuación se muestran unos cuantos recursos que pueden resultarle
útiles para aprender más sobre vi:
</p>

<ul>
  <li>
    <uri link="http://www.thomer.com/thomer/vi/vi.html">La página de los
    amantes de vi</uri>, un recurso excelente para todo aquello relacionado
    con vi.
  </li>
  <li>
    <uri link="http://www.vim.org/">La página de vim</uri> el lugar a acudir
    para todo aquello relacionado con vim.
  </li>
  <li>
    Si busca un buen libro, a la antigua, <uri
    link="http://www.oreilly.com/catalog/vi6/">Learning the vi Editor, 6th
    Edition</uri> puede ser una buena decisión. Contiene buen material sobre
    vi y sus clones.
  </li>
</ul>

</body>
</section>
<section>
<title>Acerca de este documento</title>
<body>

<p>
La versión original de este artículo fue publicada por primera vez en IBM
developerWoks, y es propiedad de Westtech Information Services. Este
documento es una versión actualizada del artículo original, y contiene varias
mejoras realizadas por el Equipo de Documentación de Gentoo.
</p>

</body>
</section>
</chapter>
</guide>
