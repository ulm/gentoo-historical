<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/vi-guide.xml,v 1.4 2005/08/05 14:27:50 yoswink Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/es/vi-guide.xml" lang="es">
<title>Aprendiendo vi - el método de la Hoja de Trucos</title>
<author title="Author">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Author">
  <mail link="stocke2@gentoo.org">Eric Stockbridge</mail>
</author>
<author title="Editor">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Editor">
  <mail link="bass@gentoo.org">José Alberto Suárez López</mail>
</author>
<author title="Spanish translation">
  <mail link="warp3r@gmail.com">Jordi Molina</mail>
</author>
<abstract>
Esta guía te enseñará a usar vi mediante el uso de una hoja de trucos que servirá
para agilizar el proceso de aprendizaje. Esta es la primera guia de vi
orientada a principiantes.
</abstract>

<version>1.1.5</version>
<date>26 de Agosto 2004</date>

<chapter>
<title>Empezando</title>
<section>
<title>Introducción</title>
<body>

<p>
Ésta guia te enseñará a usar vi, un potente editor visual.
Utilizando un método especial basado en una <e>hoja de trucos</e>, este tutorial
se ha escrito para hacer de ti un buen usuario de vi sin que
tengas que perder mucho el tiempo. En este tutorial, aprenderás como moverte,
editar texto, usar el modo insertar, copiar y pegar texto así como
usar extensiones útiles de vim como el modo visual y la edición
multi-ventana.
</p>

<p>
Si desconoces o no te sientes cómodo usando vi, quizás quieras leer
este tutorial y alcanzar la velocidad de la luz con uno de los
más populares y poderosos editores visuales para Linux/UNIX
</p>

</body>
</section>
<section>
<title>Sobre esta guía...</title>
<body>

<p>
Hay una característica de vi que hace difícil aprender su funcionamiento...
vi tiene muchos comandos. Para usar vi de una forma efectiva, vas a tener
que memorizar unos cuantos. Ésto puede llevarte tiempo, y uno de los objetivos
de este tutorial es no quitarte demasiado tiempo. Así que, desde el principio,
tengo un reto -- ¿como lo hago para ayudarte a memorizar un montón de
comandos en poco tiempo?
</p>

<p>
Para superar el reto, conforme vayamos avanzando en este tutorial, vamos a ir haciendo gradualmente una hoja de trucos para vi. Esta hoja va a contener todos los comandos vi importantes. Una vez hayas completado este tutorial, podrás acudir a tu hoja de trucos si te has olvidado de un comando en particular. Conforme pase el tiempo, irás memorizando los comandos, y cada vez dependerás menos de la hoja. ¡Vas a aprender a usar vi de la forma más rápida nunca conocida!
</p>

</body>
</section>
<section>
<title>El proceso de aprendizaje</title>
<body>

<p>
En ésta guia voy a usar varias técnicas para ayudarte a aprender. Primero, voy a describirte como funcionan ciertos comandos en particular, como era de esperar. Después, voy a pedirte que pruebes esos comandos directamente en vi (para que practiques), entonces te diré que apuntes esos comandos en tu hoja de trucos (para que puedas consultarlo más tarde). Si quieres aprender vi rápidamente, es muy importante que sigas todos esos pasos. Probar un comando y transcribirlo después a tu hoja de trucos te ayudará a memorizar ese comando.
</p>

</body>
</section>
<section>
<title>Introduciendo a vim</title>
<body>

<p>
Existen muchas versiones de vi, yo os voy a enseñar como usar una versión de vi llamada <c>vim</c>. vim es muy popular y tiene un montón de extensiones que hacen a vi mucho más ameno (si en algún momento, enseño un comando específico de vim, lo indicaré.) Si quieres instalar vim, puedes obtenerlo de <uri link="http://www.vim.org/">www.vim.org</uri>. Además de una linea de comandos vi mejorada, vim también viene con <c>gvim</c>, un editor amigable en modo gráfico que puede ser configurado para usar las excelentes librerías para GUIs GTK+. A continuación puedes ver una captura de pantalla de gvim en mi sistema:
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vishot.png"
short="screenshot" caption="Captura de GVIM"/>

<p>
Si eres un novato, prueba de ejecutar gvim en tu sistema. Usar vi desde un GUI puede hacer la vida más fácil a los principiantes.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Primeros pasos</title>
<section>
<title>Escoje un archivo</title>
<body>

<p>
Antes de usar vi para editar archivos, necesitas saber como usar vi para moverte por un archivo. vi tiene muchos comandos de desplazamiento, y vamos a ver unos cuantos de ellos. Para esta parte del tutorial, busca un archivo de texto no importante y ábrelo en vi escribiendo:
</p>

<pre caption="Cargar un archivo en vi">
$ <i>vi myfile.txt</i>
</pre>

<p>
Si tienes instalado vim, escribe <c>vim myfile.txt</c>. Si prefieres usar gvim, teclea <c>gvim myfile.txt</c>. <path>myfile.txt</path> debe ser el nombre de un archivo de texto en tu sistema.
</p>

</body>
</section>
<section>
<title>Dentro de vi</title>
<body>

<p>
Después de que vi cargue, deberías ver una parte del archivo de texto que cargaste en tu pantalla. Felicidades -- estás en vi!  A diferencia de muchos otros editores, cuando vi arranca, está en un modo especial llamado <e>modo comando</e>. Esto significa que si presionas <c>l</c> en el teclado, en vez de introducir una <c>l</c> en la posición actual del cursor, el cursor se va a mover un carácter a la derecha. En el modo comando, los caracteres en tu teclado se usan para enviar comandos a vi, más que para introducir caracteres literales en el texto. Uno de los tipos de comando más esenciales son los comandos de movimiento; vamos a echarle un vistazo a alguno.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Moviéndote</title>
<section>
<title>Moviéndote en vi, primera parte</title>
<body>

<p>
Cuando estás en modo comando, puedes usar las teclas <c>h</c>,<c>j</c>,<c>k</c> y
<c>l</c> para mover el cursor izquierda, abajo, arriba y derecha
respectivamente.  Si estas usando una versión moderna de vi, también puedes usar las teclas de cursor. 
Las teclas <c>h</c>,<c>j</c>,<c>k</c> y <c>l</c> son prácticas porque, una vez te hayas acostumbrado a ellas,
serás capaz de moverte por el archivo sin tener que mover tus dedos
de la misma linea del teclado. Intenta usar <c>h</c>,<c>j</c>,<c>k</c> y <c>l</c> y las teclas de cursor para moverte por el archivo de texto. Intenta ahora apretar <c>h</c> hasta llegar al principio de una línea. Observa que vi no te sitúa a la cola de la línea anterior presionando <c>h</c>. De la misma forma, no puedes situarte al principio de la siguiente linea llegando al final de la linea actual presionando <c>l</c>.
</p>

</body>
</section>
<section>
<title>Moviéndote en vi, segunda parte</title>
<body>

<p>
vi posee atajos especiales para ir al principio o al final de la linea actual. Puedes usar <c>0</c> (cero) para saltar al primer carácter de una linea, y <c>$</c> para saltar al último carácter. Pruébalos y observa como funcionan. La gran cantidad de comandos de movimiento que posee vi lo convierten en un gran "pager" (como los comandos more o less.) Usar vi como pager también te ayudará a aprender todos los comandos de movimiento más rápidamente.
</p>

<p>
También puedes usar <c>&lt;CTR&gt;F</c> y <c>&lt;CTR&gt;B</c> para moverte una página adelante o atrás. Las versiones modernas de vi (como vim) permiten también usar las teclas <c>PGUP</c> y <c>PGDOWN</c> para este fin. 
</p>

</body>
</section>
<section>
<title>Moviéndote entre palabras, parte 1</title>
<body>

<p>
vi también te permite moverte una palabra a la derecha o a la izquierda. Para situar el cursor en el <e>primer</e> carácter de la siguiente palabra, pulsa <c>w</c>. Para moverte al <e>último</e> carácter de la siguiente palabra, pulsa <c>e</c>. Para moverte al primer carácter de la palabra <e>anterior</e>, pulsa <c>b</c>. Juega con esto.
</p>

</body>
</section>
<section>
<title>Moviéndote entre palabras, parte 2</title>
<body>

<p>
Después de jugar un poco con los comandos de movimiento entre palabras, te habrás dado cuenta de que vi considera palabras tipo <c>foo-bar-oni</c>, como ¡cinco palabras separadas! Ésto es así por defecto: vi delimita las palabras por espacios <e>o</e> signos de puntuación. <c>foo-bar-oni</c> es, por lo tanto, considerada como cinco palabras: <c>foo</c>, <c>-</c>, <c>bar</c>, <c>-</c> y <c>oni</c>.
</p>

<p>
A veces, este comportamiento es el que queremos. Otras no. Afortunadamente, vi también entiende el concepto de "palabra grande". vi delimita las "palabras grandes" mediante <e>espacios o saltos de linea solamente</e>. Ésto significa que <c>foo-bar-oni</c> es considerada como cinco palabras vi, y a su vez, se considera una única "palabra grande" vi.
</p>

</body>
</section>
<section>
<title>Moviéndote entre palabras, parte 3</title>
<body>

<p>
Para saltar hacia la siguiente "palabra grande" o hacia la anterior, usa los comandos de movimiento entre palabras en <e>mayúsculas</e>. Usa <c>W</c> para saltar hacia el primer carácter de la siguiente "palabra grande", <c>E</c> para saltar al último carácter de la siguiente "palabra grande", y <c>B</c> para saltar al primer carácter de la "palabra grande" anterior. Prueba todos éstos comandos y compara los resultados de los comandos de movimiento entre palabras con los de movimiento entre "palabras grandes" hasta que entiendas las diferencias.
</p>

</body>
</section>
<section>
<title>Movimientos mayores</title>
<body>

<p>
Nos quedan pocos comandos por ver antes de empezar a ponerlos juntos en nuestra hoja de trucos... Puedes usar los caracteres <c>(</c> y <c>)</c> para moverte hacia el principio de la siguiente o anterior frase. También puedes usar <c>{</c> o <c>}</c> para saltar al principio del párrafo actual o al del siguiente.
Pruébalo.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Saliendo</title>
<section>
<body>

<p>
Ya hemos descubierto los comandos básicos de movimiento, pero todavía hay otro montón de comandos que necesitas saber. Escribiendo <c>:q</c> saldrás de vi. Si no funciona, seguramente se deberá a que, de alguna forma, has modificado el archivo accidentalmente. Para decirle a vi que queremos salir y descartar todos los cambios, escribiremos <c>:q!</c>. En estos momentos deberías estar en la línea de comandos.
</p>

<p>
En vi, se conoce a cualquier comando que empiece por <c>:</c> como comando <e>ex-mode</e>. Ésto es así porque vi tiene un editor no-visual integrado llamado <e>ex</e>. Puede usarse de una forma muy parecida a sed para hacer operaciones de modificación desde linea. Además, puede usarse para salir, como ya hemos visto. Si alguna vez presionas la tecla <c>Q</c> estando en modo comando, serás llevado al modo ex. Si te ocurre esto alguna vez, te enfrentarás cara a cara con un prompt :, apretar enter desplazará la pantalla entera hacia arriba. Para volver al modo normal de vi, simplemente teclea vi y pulsa enter.
</p>

</body>
</section>
</chapter>

<chapter>
<title>La Hoja de Trucos</title>
<section>
<title>El principio de la hoja de trucos</title>
<body>

<p>
Hemos visto un montón de comandos, y ha llegado el momento de pasarlos a nuestra hoja de trucos. Para la hoja de trucos necesitarás una hoja tipo folio US o A4 (¡piensa que vamos a poner una gran cantidad de información en ella!) A continuación puedes ver una foto de mi hoja de trucos después de haber transcrito todos los comandos que hemos cubierto hasta ahora. Intenta imitar mi diseño si es posible de forma que podamos poner todo en una sola hoja.
</p>

<figure
link="http://www.ibiblio.org/web-gentoo/images/vicheat-first.png"
short="Primera parte de la hoja de trucos" caption="Hoja de trucos"/>

</body>
</section>
<section>
<title>vi misceláneo</title>
<body>

<p>
Sigamos con nuestro aprendizaje rápido de comandos. En modo comando, puedes saltar a una linea en concreto tecleando <c>G</c>. Para saltar a la primera linea de un fichero, teclea <c>1G</c>. Observa que <c>G</c> está en mayúsculas.
</p>

<p>
Si quieres saltar a la siguiente aparición de una cadena de texto en particular, teclea <c>/&lt;regexp&gt;</c> y presiona <c>enter</c>. Substituye &lt;regexp&gt; por la expresión regular que estás buscando. Si no sabes como usar expresiones regulares, no te preocupes -- escribir <c>/foo</c> te llevará a la siguiente ocurrencia de <e>foo</e>. Sólo tendrás que tener cuidado cuando necesites referenciar literalmente los caracteres <c>^</c>, <c>.</c>, <c>$</c> o <c>\</c>. Para estos caracteres deberás poner una contra barra (<c>\</c>) como prefijo, y listo. Por ejemplo, <c>/foo\.gif</c> buscará la siguiente ocurrencia de "foo.gif".
</p>

<p>
Para repetir la búsqueda hacia adelante, presiona <c>n</c>. Para repetir la búsqueda hacia atrás, teclea <c>N</c>. Como siempre, prueba estos comandos en tu propio editor vi. También puedes teclear <c>//</c> para repetir la última búsqueda.
</p>


</body>
</section>
</chapter>

<chapter>
<title>Guardando y Editando</title>
<section>
<title>Guardar y guardar como...</title>
<body>

<p>
Hemos aprendido como usar el comando <e>ex</e> <c>:q</c> para salir de vi. Si quieres salvar los cambios, teclea <c>:w</c>. Si lo que quieres es guardar los cambios en otro archivo, escribe <c>:w nombrearchivo.txt</c> para guardarlo como <e>nombrearchivo.txt</e>. Si quieres guardar y salir, teclea <c>:x</c> o <c>:wq</c>.
</p>

<p>
En vim (al igual que en otros editores vi avanzados, como elvis), puedes tener múltiples buffers abiertos a la vez. Para abrir un archivo en un una ventana nueva, escribe <c>:sp filename.txt</c>. <path>filename.txt</path> aparecerá abierto para edición en una nueva ventana dividida. Para cambiar de una ventana a la otra, teclea <c>&lt;CTR&gt;w&lt;CTR&gt;w</c> (control-w dos veces). Cualquier comando <c>:q</c>, <c>:q!</c>, <c>:w</c> y <c>:x</c> que uses solo se aplicará a la ventana actualmente activa.
</p>

</body>
</section>
<section>
<title>Edición simple</title>
<body>

<p>
Y llegó el momento de comenzar a aprender algunos de los comandos básicos de edición.
Los comandos que vamos a cubrir en esta sección se consideran <e>simples</e> porque te mantienen en modo comando. Los comandos "complejos" te ponen automáticamente en modo insertar -- un modo que te permite entrar datos directamente desde el teclado. Lo veremos en breve.
</p>

<p>
Por el momento, sitúate por encima de algún carácter y presiona <c>x</c> varias veces. Verás que <c>x</c> elimina el carácter situado justo debajo del cursor. Ahora, muévete al medio de un párrafo dentro de tu archivo de texto, y pulsa <c>J</c> (en mayúsculas). Verás que el comando <c>J</c> indica a vi que junte la siguiente linea con el final de la linea actual. Ahora, situate encima de un carácter y presiona <c>r</c>, luego escribe un nuevo carácter; verás que el carácter original ha sido reemplazado. Para acabar, situate en una linea cualquiera del archivo y escribe <c>dd</c>. Observarás que <c>dd</c> elimina la linea de texto actual.
</p>

</body>
</section>
<section>
<title>Repitiendo y borrando</title>
<body>

<p>
Puedes repetir cualquier comando de edición pulsando la tecla <c>.</c>. Si experimentas un poco, verás que tecleando <c>dd...</c> eliminas 4 lineas, y <c>J......</c> junta 4 lineas. Como siempre, vi nos proporciona otro atajo útil :)
</p>

<p>
Para borrar texto, puedes usar el comando <c>d</c> combinado con cualquier comando de movimiento. Por ejemplo, <c>dw</c> eliminará el texto desde la posición actual hasta el comienzo de la siguiente palabra; <c>d)</c> eliminará hasta el final de la siguiente frase, y <c>d}</c> eliminará lo que queda de párrafo. Experimenta un poco con el comando <c>d</c> y el resto de comandos de edición hasta que te sientas cómodo con ellos.
</p>

</body>
</section>
<section>
<title>Deshacer</title>
<body>

<p>
Ahora que ya hemos experimentado con el borrado, seria bueno aprender como deshacer cualquier cambio. Presionando <c>u</c>, la versión original de vi permitía deshacer el último cambio. Las versiones más actuales de vi, como vim, te permiten presionar <c>u</c> repetidamente para ir deshaciendo los cambios que hayas podido hacer. Prueba de combinar algunos comandos <c>d</c> y <c>u</c> alternativamente.
</p>

</body>
</section>
<section>
<title>Actualizando la hoja de trucos</title>
<body>

<p>
Hora de actualizar la hoja de trucos! Después de añadir los comandos que hemos aprendido hasta ahora, tu hoja de trucos debería parecerse a ésta:
</p>

<figure
link="http://www.ibiblio.org/web-gentoo/images/vicheat-edit.png"
short="Hoja de trucos" caption="Hoja de trucos con comandos de edición"/>

</body>
</section>
</chapter>

<chapter>
<title>Modo Insertar</title>
<section>
<body>

<p>
Hasta ahora, has aprendido cómo moverte dentro de vi, realizar e/s de archivos y algunas operaciones básicas de edición. De todas formas, ¡todavía no te he enseñado como introducir texto libremente! Lo he hecho intencionadamente, porque el modo insertar de vi es un poco complicado al principio. De todas formas, una vez te acostumbres al modo insertar, su complejidad (y flexibilidad) se convertirán en una ventaja.
</p>

<p>
Dentro del <e>modo insertar</e> de vi, podrás introducir texto directamente en la pantalla de la misma forma que lo haces con otros editores visuales. Una vez hayas introducido tus modificaciones, puedes presionar escape para volver al <e>modo comando</e>. Para entrar en modo insertar, presiona <c>i</c> o <c>a</c>. Al presionar <c>i</c>, tu texto será <e>insertado</e> delante del carácter actual, y si pulsas <c>a</c>, tu texto sera <e>añadido</e> justo después del carácter actual. Recuerda, debes presionar <c>&lt;ESC&gt;</c> para volver al modo comando.
</p>

</body>
</section>
<section>
<title>Ventajas del modo Insertar</title>
<body>

<p>
Ves probando los comandos <c>a</c> y <c>i</c>. Pulsa tanto <c>a</c> como <c>i</c>, escribe algo de texto, y luego pulsa escape para volver al modo comando. Después de pulsar <c>a</c> o <c>i</c>, prueba de darle a <c>&lt;ENTER&gt;</c>, y mira que ocurre. Prueba también a usar las teclas cursor (flechas) y <c>&lt;DEL&gt;</c> para deducir el uso del modo insertar. Usando las teclas cursor y <c>&lt;DEL&gt;</c>, puedes realizar bastantes tareas de edición sin tener que cambiar varias veces de modo comando a modo insertar y viceversa. 
</p>

</body>
</section>
<section>
<title>Opciones de Insertar</title>
<body>

<p>
Aquí tienes otras formas prácticas de acceder al modo Insertar. Presiona <c>A</c> (en mayúsculas) para empezar a añadir texto al <e>final</e> de la línea actual, independientemente de tu posición actual en ésa línea. De la misma forma, pulsa <c>I</c> (mayúscula) para empezar a introducir texto al <e>principio</e> de la línea actual. Pulsa <c>o</c> para crear una nueva linea por debajo de la línea actual, en la cual podrás introducir texto, y pulsa <c>O</c> (mayúscula) para crear una linea nueva por encima de la actual. Para reemplazar totalmente la linea actual con una nueva, teclea <c>cc</c>. Para reemplazar todo desde la posición actual hasta el final de la linea, teclea <c>c$</c>. Para reemplazar todo desde la posición actual hasta el principio de la línea, teclea <c>c0</c>.
</p>

<p>
Además de realizar una operación especial, cada uno de estos comandos te pondrá en Modo Insertar. Después de introducir tu texto, pulsa <c>&lt;ESC&gt;</c> para volver al modo comando.
</p>

</body>
</section>
<section>
<title>Cambiando texto</title>
<body>

<p>
Hemos usado el comando <c>c</c> (cambiar) por encima cuando hemos tecleado <c>cc</c>, <c>c0</c> y <c>c$</c>. <c>cc</c> es una forma especial de comando de cambio, similar a <c>dd</c>. Los comandos <c>c0</c> y <c>c$</c> son ejemplos de como usar el comando cambiar en combinación con los comandos de desplazamiento. De la misma forma, <c>c</c> funciona de una forma parecida a <c>d</c>, exceptuando que éste te deja en Modo Insertar para que puedas entrar texto de reemplazo en la región recién eliminada. Prueba a usar varios comandos de desplazamiento con <c>c</c> y pruébalos con tu archivo (pista: <c>cW</c>, <c>ce</c>, <c>c(</c> .)
</p>

</body>
</section>
</chapter>

<chapter>
<title>Comandos Combinados</title>
<section>
<body>

<p>
vi se vuelve <e>realmente</e> potente cuando comienzas a usar comandos combinados (comandos "combo"), como por ejemplo, <c>d{</c> y <c>cw</c>. A parte de estos comandos, también puedes combinar un número con cualquier comando de movimiento, así por ejemplo <c>3w</c> indicará a vi que salte tres palabras a la derecha. A continuación te muestro algunos ejemplos más de comandos "combo":
<c>12b</c>, <c>4j</c>.
</p>

<p>
vi, además de permitir combinaciones del tipo (número)(comando de movimiento), también permite combinar <c>d</c> o <c>c</c> con un número o con un comando de movimiento. Así, <c>d3w</c> eliminará las 3 palabras siguientes, <c>d2j</c> eliminará la siguiente línea y las dos siguientes, etc. Prueba a combinar varios combos con <c>c</c> y <c>d</c> para ver lo potente y ágil que puede ser la edición con vi. Una vez asimiles estos comandos, serás capaz de editar archivos a una velocidad increíble.
</p>

</body>
</section>
<section>
<title>Actualizando la hoja de trucos</title>
<body>

<p>
Hora de actualizar de nuevo la hoja de trucos. Más o menos debería parecerse a esto:
</p>

<figure
link="http://www.ibiblio.org/web-gentoo/images/vicheat-compound.png"
short="Hoja de trucos" caption="Hoja de trucos con comandos combinados"/>

</body>
</section>
<section>
<title>Características de productividad</title>
<body>

<p>
Hasta ahora, hemos visto como movernos, salvar y salir, realizar ediciones y borrados simples y usar el modo insertar. Con todo ésto en la hoja, deberías ser capaz de usar vi para realizar casi cualquier tarea.
</p>

<p>
Pese a ésto, vi tiene más comandos útiles. En ésta sección aprenderás como <e>cortar</e>, <e>copiar</e>, <e>pegar</e>, <e>buscar</e>, <e>reemplazar</e> y usar <e>autoindentación</e>. Todas éstas posibilidades ayudarán a hacer a vi un poco más divertido y productivo.
</p>

</body>
</section>
<section>
<title>Modo Visual</title>
<body>

<p>
La mejor forma para cortar y pegar es usar el <e>modo visual</e>, un modo especial que ha sido añadido en versiones modernas de vi, como vim y elvis. Puedes considerar el modo visual como un modo de "resaltado de texto". Una vez que el texto queda resaltado, puede ser copiado o eliminado, para ser pegado después. Si estas usando gvim, puedes resaltar el texto simplemente arrastrando el ratón con el botón izquierdo presionado sobre una región de texto determinada: 
</p>

<figure
link="http://www.ibiblio.org/web-gentoo/images/vihighlight.png"
short="Texto resaltado" caption="VIM con texto resaltado"/>

<p>
Puedes entrar en modo visual pulsando <c>v</c> (que es la única opción que tendrás si usas vi desde la consola.) Entonces mueve el cursor usando los comandos de movimiento (o más típicamente, las teclas de desplazamiento), verás que puedes resaltar una región de texto. Cuando la región de texto que quieras esté resaltada, estará lista para ser cortada o copiada.
</p>

<p>
Si quieres copiar el texto, pulsa <c>y</c> (que proviene del término inglés "yank"). Si estás cortando el texto, pulsa <c>d</c>. Volverás entonces al modo comando. Ahora situate en la posición donde quieres insertar el texto copiado o cortado, y pulsa <c>P</c> para insertar el texto antes del cursor, o <c>p</c> para insertarlo después. Voilà! El copiado/cortado está completo! Pruébalo varias veces antes de avanzar a la siguiente sección.
</p>

</body>
</section>
<section>
<title>Reemplazando texto</title>
<body>

<p>
Para reemplazar patrones de texto, usamos el modo <e>ex</e>. Si quieres reemplazar el primer patrón que aparece en la línea actual, escribe <c>:s/&lt;regexp&gt;/&lt;reemplazo&gt;/</c> y presiona <c>&lt;ENTER&gt;</c>, substituye &lt;regexp&gt; por el texto que quieres substituir y &lt;reemplazo&gt; por la cadena con el que lo quieres substituir. Para reemplazar todas las coincidencias en la línea actual, teclea <c>:s/&lt;regexp&gt;/&lt;reemplazo&gt;/g</c> y pulsa enter. Para reemplazar todas las ocurrencias de un patrón en tu archivo (que normalmente es lo que quieres), escribe <c>:%s/&lt;regexp&gt;/&lt;reemplazo&gt;/g</c>. Si quieres realizar un reemplazo global, pero haciendo que vi te confirme cada vez cada cambio, teclea <c>:%s/&lt;regexp&gt;/&lt;reemplazo&gt;/gc</c> (la c viene del inglés, "change", cambiar) y pulsa <c>&lt;ENTER&gt;</c>.
</p>

</body>
</section>
<section>
<title>Indentación</title>
<body>

<p>
vi incluye soporte para autoindentación, ideal para editar código fuente. La mayoría de las versiones modernas de vi (p.e. vim) activarán automáticamente el modo autoindentado cuando edites un archivo de código fuente (cómo por ejemplo un archivo .c). Cuando el autoindentado está activo, puedes usar <c>&lt;CTR&gt;d</c> (control-d) para indentar un nivel hacia la izquierda y <c>&lt;CTR&gt;t</c> (control-t) para indentar a la derecha un nivel. Si el autoindentado no se activa automáticamente, puedes hacerlo de forma manual con el comando <e>ex</e> <c>:set</c> autoindent. Puedes también indicar a vi el tamaño de cada tabulación a tu gusto mediante el comando <c>:set tabstop</c>; <c>:set tabstop=4</c> es bastante popular.
</p>

</body>
</section>
<section>
<title>La hoja de trucos definitiva</title>
<body>

<p>
Y bien, ¡ya hemos llegado al final de éste tutorial de vi! Una vez añadas todos los comandos de edición avanzada a tu hoja de trucos, debería quedar como la siguiente:
</p>

<figure
link="http://www.ibiblio.org/web-gentoo/images/vicheat-final.png"
short="Hoja de trucos" caption="Hoja final de trucos"/>

<p>
Ten tu hoja de trucos a mano, y empieza a usar vi para editar archivos y escribir correos electrónicos. Usa la hoja de trucos cuando la necesites; verás que en una semana te sabrás casi todos los comandos de memoria y tu productividad con vi llegará a su máximo.
</p>

<p>
Si quieres usar vi como tu editor por defecto haz el siguiente cambio en <path>/etc/rc.conf</path>:
</p>

<pre caption="Usar vi como editor por defecto">
<comment>(Establece EDITOR a tu editor preferido.)</comment>
#EDITOR="/bin/nano"
EDITOR="/usr/bin/vim"
#EDITOR="/usr/bin/emacs"
</pre>

</body>
</section>
<section>
<title>Recursos</title>
<body>

<p>
A continuación tienes unos cuantos recursos que pueden resultarte útiles para aprender más sobre vi:
</p>

<ul>
  <li>
    <uri link="http://www.thomer.com/thomer/vi/vi.html">La página de los amantes de vi</uri>, un recurso excelente para todo aquello relacionado con vi.
  </li>
  <li>
    <uri link="http://www.vim.org/">La página de vim</uri> el lugar a acudir para todo aquello relacionado con vim
  </li>
  <li>
    Si buscas un buen libro, a la antigua, <uri
    link="http://www.oreilly.com/catalog/vi6/">Learning the vi Editor,
    6th Edition</uri> puede ser una buena decisión. Contiene buen material sobre vi y sus clones.
  </li>
</ul>

</body>
</section>
<section>
<title>Acerca de éste documento</title>
<body>

<p>
La versión original de este artículo fue publicada por primera vez en IBM developerWoks, y es propiedad de Westtech Information Services. Este documento es una versión actualizada del artículo original, y contiene varias mejoras realizadas por el Equipo de Documentación de Gentoo.
</p>

</body>
</section>
</chapter>
</guide>
