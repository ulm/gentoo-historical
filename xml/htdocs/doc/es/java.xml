<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/java.xml,v 1.24 2011/05/11 13:03:47 chiguire Exp $ -->

<guide lang="es">

<title>Guía Java Gentoo</title>

<author title="Autor">
 <mail link="nichoj@gentoo.org">Joshua Nichols</mail>
</author>
<author title="Autor">
  <mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>
<author title="Editor">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Traductor">
  <mail link="bass@gentoo.org">José Alberto Suárez López</mail>
</author>
<author title="Traductor">
  <mail link="chiguire"/>
</author>
<author title="Traductor">
  <mail link="pablo.leira@pitagoral.com">Pablo Pita Leira</mail>
</author>
<author title="Traductor">
  <mail link="anpereir@gentoo.org">Andrés Pereira</mail>
</author>
<author title="Traductor">
  <mail link="nimiux"/>
</author>

<abstract>
Esta guía le dará a conocer Java y le explicará cómo usar Java con
Gentoo Linux.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>2</version>
<date>2011-05-09</date>

<chapter>
<title>¿Qué es Java?</title>
<section>
<title>Resumen</title>
<body>

<p>
Java es un lenguaje de programación desarrollado por ingenieros de Sun
Microsystems. Es un lenguaje orientado a objetos y diseñado para la
ejecución en múltiples plataformas sin requerir la recompilación del
código fuente para cada plataforma. Aunque Java puede ser compilado
como un programa nativo, se le puede atribuir una buena parte de su
popularidad a su portabilidad y otras características como la
recolección de basura. Para hacer posible la independencia de
plataforma, el compilador de Java compila el código Java a una
representación intermedia denominada "bytecode Java" el cual se
ejecuta en un JRE (Java Runtime Environment, Entorno de Ejecución
Java) y no directamente en el Sistema Operativo.
</p>

<p>
Para poder ejecutar "bytecode" Java, hace falta tener instalado un
entorno de ejecución Java o JRE (por Java Runtime Environment). El JRE
proporciona unas librerías básicas, una máquina virtual Java para la
plataforma instalada y plugins para navegadores, entre otras
cosas. Un kit de desarrollo Java o JDK (por Java Development Kit)
agrega herramientas para programación, como un compilador para
bytecode y un depurador ("debugger").
</p>
</body>
</section>
</chapter>

<chapter>
<title>Instalando una máquina virtual</title>
<section>
<title>Las opciones</title>
<body>

<p>
Gentoo proporciona numerosos entornos para ejecución (JREs) y entornos
para el desarrollo (JDKs). Entre las opciones actuales tenemos:
</p>

<table>
<tr>
  <th>Origen</th>
  <th>JDK</th>
  <th>JRE</th>
</tr>
<tr>
  <ti>Kit Java Sun</ti>
  <ti>dev-java/sun-jdk</ti>
  <ti>dev-java/sun-jre-bin</ti>
</tr>
<tr>
  <ti>Kit Java IBM</ti>
  <ti>dev-java/ibm-jdk-bin</ti>
  <ti>dev-java/ibm-jre-bin</ti>
</tr>
<tr>
  <ti>Kit de desarrollo J2SE de BEA WebLogic</ti>
  <ti>dev-java/jrockit-jdk-bin</ti>
</tr>
<tr>
  <ti>The IcedTea Open Java Kit</ti>
  <ti>dev-java/icedtea6-bin</ti>
</tr>
</table>

<!--
TODO: list free implmentations?
note about not drop-in replacemenets
kaffe/sablevm/gcj/jamvm
-->

</body>
</section>

<section>
<title>Instalar un JRE/JDK</title>
<body>

<p>
Para instalar el JDK predeterminado de su perfil, puede ejecutar
<c>emerge virtual/jdk</c>. O para instalar el JRE predeterminado de
su perfil ejecute <c>emerge virtual/jre</c>.
</p>

<p>
Algunos JDKs y JREs, incluyendo los paquetes que originan de Sun, requieren la aceptación de un Acuerdo de Licencia para Usuario Final, conocido también por sus siglas en inglés EULA. Si la licencia (por ejemplo, dlj-1.1) no está listada en ACCEPT_LICENSE en <path>/etc/make.conf</path>, entonces no podrá instalar el JDK/JRE. Para más información acerca de como añadir licencias aceptables a <path>make.conf</path>, por favor lea el <uri link="/doc/es/handbook/handbook-x86.xml?part=2&amp;chap=1#doc_chap4">manual Portage</uri>.
</p>

<p>
Para evitar molestias con licencias restrictivas, considere instalar <c>icedtea6-bin</c>, el cual es una implementación abierta de Java del proyecto OpenJDK.
</p>

<note>
Un JDK incluye también un JRE, así que si instala un JDK no debería
tener que instalar un JRE.
</note>
</body>
</section>

<section>
<title>Instalando máquinas virtuales con restricciones de descarga</title>
<body>

<p>
Como mencionamos anteriormente, algunos JDK y JRE requieren que uno
salte varios aros antes de poder instalar. Sencillamente haga emerge a
estos paquetes de la manera acostumbrada. Los ebuilds le indicarán a
dónde ir y qué descargar.
Algunos de los JDKs y JREs requieren algunos rodeos antes de ser
instalados. Simplemente haga emerge de los que paquetes que normalmente
instalaría. Los ebuilds le indicarán qué debe hacer y qué debe descargar.
</p>

<p>
Debe descargar el(los) fichero(s) indicado(s) a
<path>/usr/portage/distfiles</path>. Una vez allí, vuelva a ejecutar
el comando emerge y los JRE/JDK empezarán a ser instalados.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Configurar su máquina virtual</title>
<section>
<title>Introducción</title>
<body>

<p>
Gentoo permite tener instalados múltiples JDKs y JREs sin que esto
cause conflictos.
</p>

<p>
Si tiene acceso como superusuario, puede usar la herramienta
<c>java-config</c> puede establecer la configuración por defecto del
sistema. Los usuarios también pueden usar <c>java-config</c> para
establecer su configuración personal.
</p>

<note>
También puede usar <e>eselect</e> para cambiar la máquina virtual del
sistema y del usuario. Vea <c>eselect java-vm help</c>.
</note>
</body>
</section>

<section>
<title>Establecer una máquina virtual predeterminada</title>
<body>

<p>
El comando <c>java-config --list-available-vms</c> producirá una lista
de los JREs y JDKs instalados en el sistema. A continuación se muestra
un ejemplo de la salida de ese comando:
</p>

<pre caption="Listar las máquinas virtuales disponibles">
# <i>java-config --list-available-vms</i>
The following VMs are available for generation-2:
1)      IcedTea6-bin 1.4.1 [icedtea6-bin]
2)      Sun JDK 1.5.0.20 [sun-jdk-1.5] <comment>(Sólo Build)</comment>
*)      Sun JDK 1.6.0.16 [sun-jdk-1.6]
</pre>

<note>
Las máquinas virtuales marcadas con Sólo Build pueden contener
vulnerabilidades en la seguridad y/o ser EOL (End Of Life).
Gentoo recomienda no configurarlas como máquinas virtuales de sistema o
usuario . Por favor, lea <uri link="java.xml#build-only">Máquinas Virtuales
Sólo Build</uri> para más información.
</note>

<p>
El asterisco <e>*</e> indica que ésta es la máquina virtual activa (la
del sistema o la del usuario cuando está configurada). El nombre entre
corchetes (<e>[]</e>) es el alias, o identificador para esa máquina
virtual (MV). Puede usarse el alias o el número identificador con el
comando <c>java-config --set-system-vm</c>. A continuación, un ejemplo
de cómo establecer la MV del sistema:
</p>

<pre caption="Establecer la MV del sistema">
<comment>(Mediante alias (opción preferida))</comment>
# <i>java-config --set-system-vm sun-jdk-1.6</i>
Now using sun-jdk-1.6 as your generation-2 system JVM
<comment>(Mediante el número identificador)</comment>
# <i>java-config --set-system-vm 3</i>
Now using sun-jdk-1.6 as your generation-2 system JVM
</pre>

<p>
Como usuario normal puede utilizar <c>java-config --set-user-vm</c>.
</p>

<note>
Ya no tiene que regenerar el perfil con <c>source</c> activar las
actualizaciones hechas a la MV del sistema o del usuario.
</note>
</body>
</section>

<section id="build-only">
<title>Máquinas Virtuales Sólo Build</title>
<body>

<p>
Algunas máquinas virtuales están marcadas como Sólo Build ya que no son
mantenidas (EOL: End Of Life) y/o contienen vulnerabilidades de seguridad.
Estas máquinas virtuales no serán usadas automáticamente por Gentoo para
correr aplicaciones que usen los lanzadores de Gentoo pero seguirán
disponibles para ser usadas por el entorno de construcción (Build) ya que
algunos paquetes pueden necesitarlas para ser construidos. El ajuste de estas
máquinas virtuales para su sistema o usuario está muy desaconsejado ya que
estas máquinas virtuales serán usadas cuando se lancen los ejecutables
<path>/usr/bin/{java,javac,..}</path> y también serán usados por cualquier
paquete que no use los scripts de lanzamiento de Gentoo.
</p>

</body>
</section>

<section id="preferred-vm">
<title>MV para construcción preferidas</title>
<body>

<p>
Cuando esté instalando paquetes de Java, la MV usada para la construcción
puede en ocasiones ser diferente de la que está definida como MV del
sistema.
</p>

<p>
Esta MV es necesaria cuando, por ejemplo, la máquina virtual de su
sistema está ajustada a la MV 1.6 y el paquete que está instalando
requiere una MV 1.5. Mientras está haciendo emerge, se seleccionará
y usará la MV 1.5, dejando la máquina virtual elegida para su
sistema intacta.
</p>

<p>
Para definir la MV cuand es necesario cambiarla, hemos creado una
lista de <e>máquinas virtuales por defecto/soportadas</e> para cada
arquitectura. Puede encontrarlas en
<path>/usr/share/java-config-2/config/jdk-defaults.conf</path>.
</p>

<p>
Puede hacer caso omiso del ajuste predeterminado (e incluso de la MV seleccionada a nivel de sistema) en
<path>/etc/java-config-2/build/jdk.conf</path> y tener control total
sobre la MV que será usada para la construcción. Algunos ejemplos:
</p>

<pre caption="Ejemplo de /etc/java-config-2/build/jdk.conf">
<comment>(Siempre quiero usar sun-jdk, es decir, sun-jdk-1.4 para 1.4, sun-jdk-1.5 para 1.5, etc)</comment>
*=sun-jdk
</pre>

<pre caption="Ejemplo de /etc/java-config-2/build/jdk.conf">
<comment>(Use siempre sun-jdk-1.5 donde sea posible, excepto cuando se requiera explícitamente de una MV 1.4 ó 1.3)</comment>
*=sun-jdk-1.5
</pre>

<pre caption="Ejemplo de /etc/java-config-2/build/jdk.conf">
<comment># Para 1.3 prefiero sun-jdk 1.4, pero cuando no esté disponible, use ibm-jdk-bin.
# Para 1.5, use sun-jdk </comment>
1.3=sun-jdk-1.4 ibm-jdk-bin
1.5=sun-jdk
</pre>

<warn>
No es <e>obligatorio</e> editar este fichero. Si cambia estas opciones
para usar una MV no soportada, es posible que rompa algo. Debido a la
amplia variedad de MV disponibles, no disponemos de recursos
para probar y verificar que cada paquete funcione en todas ellas.
Los fallos reportados con una MV no soportada tendrán menor prioridad
que las reportadas presentes en las MV soportadas.
</warn>
</body>
</section>
</chapter>

<chapter>
<title>Compiladores</title>
<section>
<body>

<p>
El compilador estándar Java usado es <c>javac</c>, el cual viene en cada
JDK. Aparte de configurar la MV utilizada en tiempo de compilación,
también es posible configurar qué compilador se usará. Esencialmente,
puede definir una lista de preferencias para especificar qué
compilador será usado en
<path>/etc/java-config-2/build/compilers.conf</path>.
</p>

<pre caption="/etc/java-config-2/build/compilers.conf">
# If the ebuild supports it
# it will check the COMPILERS var front to back and
# use the first compiler that is installed

COMPILERS="ecj-X.Y jikes javac"
</pre>

<p>
Algunos compiladores no ofrecen soporte a todos los posibles argumentos de
-target y -source. Por lo tanto, cada compilador en la lista es chequeado
para ver si soporta el -source/-target deseado. javac funcionará en todos
los casos, así que si no se encuentra un compilador adecuado, éste será
usado en cambio.
</p>

<p>
A continuación se proporcionan más detalles sobre cada compilador:
</p>

<table>
<tr>
  <th>Nombre</th>
  <th>Alias</th>
  <th>Paquete</th>
  <th>Descripción</th>
</tr>
<tr>
  <ti>javac</ti>
  <ti>javac</ti>
  <ti>N/D</ti>
  <ti>
    Este es el compilador por defecto que será usado y viene en cada JDK.
  </ti>
</tr>
<tr>
  <ti>jikes</ti>
  <ti>jikes</ti>
  <ti>dev-java/jikes</ti>
  <ti>
    Jikes fue desarrollado originalmente por IBM. Anécdoticamente es,
    en general, más rápido que javac. Observe, sin embargo, que es más
    pedante y fallará en ciertos casos donde javac no tiene
    problemas. Todavía no soporta la sintaxis de Java 1.5.
  </ti>
</tr>
<tr>
  <ti>Compilador Eclipse para Java</ti>
  <ti>ecj</ti>
  <ti>dev-java/eclipse-ecj</ti>
  <ti>
    ECJ es el compilador usado por el kit de desarrollo de software Eclipse.
    Es pleno de características y además muy rápido. Ofrece soporte a la
    sintáxis de Java 1.5.
  </ti>
</tr>
</table>
</body>
</section>
</chapter>

<chapter>
<title>Establecer el CLASSPATH predeterminado</title>
<section>
<body>

<warn>
Las opciones explicadas en esta sección deben ser consideradas como
obsoletas y probablemente serán eliminadas en el futuro. Recomendamos
encarecidamente no usarlas, porque sus proyectos o aplicaciones Java
deberían manejar sus propios "classpaths". Si elige especificar un
CLASSPATH predeterminado, algunas aplicaciones podrían comportarse de
modo inesperado ya que las clases que no se suponen ahí, lo estarán en
el "classpath".
</warn>

<p>
<c>java-config</c> también puede ser usado para establecer el CLASSPATH
predeterminado del sistema, así como, el CLASSPATH predeterminado para un
usuario específico.
</p>

<p>
Primero, querrá listar las bibliotecas Java disponibles instaladas en
su sistema y que puede querer colocar en su CLASSPATH. A continuación
un ejemplo de la salida del comando:
</p>

<pre caption="Listar las clases">
# <i>java-config --list-available-packages</i>
[xerces-2] The next generation of high performance, fully compliant XML parsers in the Apache Xerces family (/usr/share/xerces-2/package.env)
[junit] Simple framework to write repeatable tests (/usr/share/junit/package.env)
[bsh] BeanShell: A small embeddable Java source interpreter (/usr/share/bsh/package.env)
[bcel] The Byte Code Engineering Library: analyze, create, manipulate Java class files (/usr/share/bcel/package.env)
[log4j] A low-overhead robust logging package for Java (/usr/share/log4j/package.env)
...
</pre>

<p>
Nuevamente, los nombres entre corchetes (<e>[]</e>) son los
identificadores a pasar como argumentos a <c>java-config
--set-system-classpath</c>. A continuación un ejemplo:
</p>

<pre caption="Establecer el classpath">
# <i>java-config --set-system-classpath log4j,xerces-2</i>
</pre>

<note>
El directorio actual (<path>.</path>) no será parte del classpath del
sistema pues debería ser agregado en el perfil de ingreso de su
sistema.
</note>

<p>
Tendrá que actualizar su entorno ya sea reingresando o regenerando el
fichero <path>/etc/profile</path>.
</p>

<p>
Para los usuarios, <c>java-config --set-user-classpath</c> creará
<path>~/.gentoo/java-env-classpath</path>, el cual debería regenerar desde
su perfil del shell.
</p>

<pre caption="Regenerar el classpath específico de un usuario">
<i>if [[ -f "${HOME}/.gentoo/java-env-classpath" ]]; then
       source ${HOME}/.gentoo/java-env-classpath
fi</i>
</pre>

<p>
Si realmente quiere un classpath predeterminado para el sistema o el
usuario, puede agregar algo como lo siguiente a su perfil del
shell, aunque le aconsejamos no hacerlo.
</p>

<pre caption="Establecer el classpath">
# <i>export CLASSPATH="${CLASSPATH}:$(java-config --classpath log4j,xerces-2)"</i>
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Plugins Java para los navegadores</title>
<section>
<title>Instalando un plugin</title>
<body>

<p>
Puede instalar un plugin Java para el navegador haciendo emerge a una
máquina virtual Java con el parámetro USE <c>nsplugin</c> activado.
</p>

<note>
<c>nsplugin</c> no está disponible para todas las
arquitecturas. Revise si el soporte para la arquitectura deseada está
disponible antes de intentar instalar una MV ejecutando <c>emerge -pv
&lt;java-vm&gt;</c>.
</note>

<p>
Portage permitirá la instalación de múltiples versiones de plugins
Java plugins, aunque solo uno será usado por el navegador. Puede
revisar la lista de plugins disponibles con:
</p>

<pre caption="Visualizando los plugins disponibles">
# <i>eselect java-nsplugin list</i>
   [1]   sun-jre-bin-1.6
   [2]   icedtea6-bin
</pre>

<p>
En este ejemplo, el plugin del navegador seleccionado es
<c>sun-jre-bin</c>.
</p>

<pre caption="Seleccionando un plugin">
# <i>eselect java-nsplugin set sun-jre-bin-1.6</i>
</pre>

<p>
Verifique que el plugin correcto ha sido seleccionado:
</p>

<pre caption="Verificando el plugin correcto">
# <i>eselect java-nsplugin list</i>
   [1]   sun-jre-bin-1.6  current
   [2]   icedtea6-bin
</pre>

<p>
El sitio java.com proporciona un enlace para <uri
link="http://java.com/en/download/installed.jsp">verificar el plugin
instalado</uri>. Además, si está usando un navegador basado en
Mozilla, puede verificar el plugin Java escribiendo
<c>about:plugins</c> en la línea para direcciones.
</p>
</body>
</section>

<section>
<title>Plugins en sistemas con múltiples librerías</title>
<body>

<p>
Si está usando un sistema multilib con librerías de 64 y 32 bits (por
ejemplo, en un AMD64), puede tener instalados ambos plugin Java, de
64 y de 32 bits. A menos que tenga una necesidad imperiosa de ejecutar
aplicaciones de 32 bits, le recomendamos usar plugins nativas de 64 bits
en navegadores web de 64 bits.
</p>

<p>
Hay disponibles varias plugins para navegador de 64 bits. La pareja por
defecto, <c>sun-jdk</c> y <c>sun-jre-bin</c>, incluyen ambas plugins para
navegador. Simplemente haga emerge de una de ellas con el ajuste USE
<c>nsplugin</c> activado.
</p>

<pre caption="Installing a 64-bit plugin">
# <i>echo "dev-java/sun-jre-bin nsplugin" >> /etc/portage/package.use</i>
# <i>emerge sun-jre-bin</i>
</pre>

<p>
Para usar un plugin de 32 bits en un navegador de 32 bits, necesitará hacer
emerge de <c>emul-linux-x86-java</c> con el ajuste USE <c>nsplugin</c>
activado.
</p>

<pre caption="Instalando un plugin de 32 bits">
# <i>echo "app-emulation/emul-linux-x86-java nsplugin" >> /etc/portage/package.use</i>
# <i>emerge emul-linux-x86-java</i>
</pre>

<p>
Luego revise cuales plugins estan disponibles:
</p>

<pre caption="Viendo cuales plugins estan disponibles">
# <i>eselect java-nsplugin list</i>
Available 32-bit Java browser plugins
  [1]   emul-linux-x86-java-1.5
  [2]   emul-linux-x86-java-1.6
Available 64-bit Java browser plugins
  [1]   icedtea6-bin
  [2]   sun-jre-bin-1.6
</pre>

<p>
Ahora seleccione el plugin adecuado para su navegador:
</p>

<pre caption="Seleccionando los plugins">
# <i>eselect java-nsplugin set 32bit emul-linux-x86-java-1.5</i>
</pre>

<p>
Verifique que los plugins correctos han sido seleccionados:
</p>

<pre caption="Verificando los plugins correctos">
# <i>eselect java-nsplugin list</i>
Available 32-bit Java browser plugins
  [1]   emul-linux-x86-java-1.5
  [2]   emul-linux-x86-java-1.6  current
Available 64-bit Java browser plugins
  [1]   icedtea6-bin
  [2]   sun-jre-bin-1.6  current
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Parámetros USE para usar con Java</title>
<section>
<title>Configurar los parámetros USE</title>
<body>

<p>
Para más información acerca de los parámetros USE, puede consultarse el
capítulo acerca de <uri
link="/doc/es/handbook/handbook-x86.xml?part=2&amp;chap=2">Parámetros
USE</uri> del Manual Gentoo.
</p>
</body>
</section>

<section>
<title>Los parámetros USE</title>
<body>

<ul>
  <li>
   El parámetro <b>java</b> agrega soporte para Java en una variedad de
   programas.
  </li>
  <li>
    El parámetro <b>nsplugin</b> agrega soporte para los navegadores estilo
    Mozilla (incluyendo Firefox). Necesitará esto para visualizar applets Java
    en su navegador estilo Mozilla.
  </li>
  <li>
    El parámetro <b>source</b> instalará un fichero zip del código fuente del
    paquete. Esto es típicamente usado para proporcionar el código fuente del
    paquete a su IDE.
  </li>
  <li>
  El parámetro <b>jce</b> agrega soporte para el motor criptográfico
  Java (en inglés: Java Cryptography Engine)
  </li>
  <li>
    El parámetro <b>doc</b> típicamente instalará la documentación de la
    API, generada por javadoc.
  </li>
</ul>
</body>
</section>
</chapter>

<chapter>
<title>Recursos Adicionales</title>
<section>
<title>Recursos fuera de línea</title>
<body>

<ul>
  <li>Página del manual de java-config</li>
  <li><c>java-config --help</c></li>
</ul>
</body>
</section>

<section>
<title>Recursos en línea</title>
<body>

<ul>
  <li>
    La <uri link="http://www.gentoo.org/proj/en/java/">página</uri>
    del proyecto Gentoo Java</li>
  <li>
    Los archivos de las listas de correo:
    <uri link="http://news.gmane.org/gmane.linux.gentoo.java">gentoo-java
    </uri>,<uri link="http://news.gmane.org/gmane.linux.gentoo.user">
    gentoo-user</uri> y
    <uri link="http://news.gmane.org/gmane.linux.gentoo.devel">gentoo-dev</uri>
  </li>
  <li>
    <uri link="irc://irc.gentoo.org/gentoo">#gentoo</uri> e <uri
    link="irc://irc.gentoo.org/gentoo-java">#gentoo-java</uri> en IRC
  </li>
<li>
    <uri link="http://en.wikipedia.org/wiki/Java_programming_language">El
    artículo de Wikipedia acerca de Java</uri>
  </li>
  <li>
  Si tiene sugerencias o preguntas con respecto a este documento, por
  favor envíe correo al equipo Java de Gentoo:
  <mail>java@gentoo.org</mail>
  </li>
</ul>
</body>
</section>
</chapter>
</guide>
