<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/nvidia-guide.xml,v 1.17 2006/12/31 12:26:06 chiguire Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/es/nvidia-guide.xml" lang="es">
<title>Guía nVidia Gentoo Linux</title>

<author title="Autor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="curtis119@gentoo.org">M. Curtis Napier</mail>
</author>
<author title="Editor">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Editor">
  <mail link="wolf31o2@gentoo.org">Chris Gianelloni</mail>
</author>
<author title="Traductor">
  <mail link="bass@gentoo.org">José Alberto Suárez López</mail>
</author>
<author title="Traductor">
  <mail link="chiguire@gentoo.org">John Christian Stoddart</mail>
</author>
<author title="Traductor">
  <mail link="anpereir@gentoo.org">Andrés Pereira</mail>
</author>

<abstract>
Muchos usuarios Gentoo tienen un chipset nVidia en su sistema. nVidia
suministra controladores específicos para aumentar el desempeño de su
tarjeta. Esta guía informa cómo instalar y configurar estos controladores.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.28</version>
<date>2006-10-23</date>

<chapter>
<title>Introducción</title>
<section>
<body>

<p>
nVidia libera sus propios controladores de Linux que proporcionan buen
rendimiento y aceleración 3D completa. Hay dos manejadores en
Portage, <c>nvidia-drivers</c> es para las tarjetas gráficas nVidia
más recientes, mientras que <c>nvidia-legacy-drivers</c> soporta las
tarjetas más viejas.
</p>

<note>
Previamente, Gentoo proporcionaba ebuilds por separado para el módulo
nVidia del kernel (<c>nvidia-kernel</c>) y para las librerías GLX para
X11 (<c>nvidia-glx</c>). Estos ebuilds han sido sustituidos en el árbol
Portage por <c>nvidia-drivers</c> y <c>nvidia-legacy-drivers</c>. Si
está usando <c>nvidia-kernel</c> y <c>nvidia-glx</c>, debe migrar a
los nuevos paquetes.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Configurar su tarjeta</title>
<section>
<title>Configuración del núcleo</title>
<body>

<p>
Los controladores nVidia incluyen módulos para integrarlos a su núcleo actual.
Para poder hacer esto, el núcleo debe soportar la carga de módulos. Si ha
usado <c>genkernel</c> para configurar su núcleo entonces está listo, sino
revise su configuración del núcleo para que el soporte esté habilitado:
</p>

<pre caption="Activar la carga de módulos del núcleo">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
Probablemente tendrá que activar <e>Memory Type Range Register</e> en su
núcleo:
</p>

<pre caption="Activar MTRR">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>

<p>Además, si tiene una tarjeta gráfica AGP, puede escoger activar el
soporte <c>agpgart</c> del kernel, bien sea compilado o como
módulo. Si no usa el agpgart del kernel, los manejadores usarán su
propia implementación de <c>agpgart</c>, llamada <c>NvAGP</c>. En
ciertos sistema se puede obtener mejor desempeño que la del kernel y
en otros peor. Hará falta evaluar en el propio sistema para saber cual
es el mejor desempeño. Si no está seguro qué hacer, use el agpgart del
kernel.
</p>

<pre caption="Activar agpgart">
Device Drivers ---&gt;
Character devices ---&gt;
&lt;*&gt; /dev/agpgart (AGP Support)
</pre>
</body>
</section>

<section>
<title>Observaciones específicas a la arquitectura</title>
<body>

<impo>
Para los procesadores x86 y AMD64, el controlador incluido en el núcleo entra
en conflicto con aquel proporcionado por nVidia. Si va a compilar su núcleo
para alguno de esos procesadores, debe eliminar completamente el soporte para
el controlador incluido en el núcleo tal como se muestra a continuación:
</impo>

<pre caption="Eliminar el controlador incluido en el núcleo">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt; &gt;   nVidia Framebuffer Support
&lt; &gt;   nVidia Riva support
</pre>

<p>
Una buena alternativa de framebuffer es el <c>VESA</c>:
</p>

<pre caption="Activar el soporte para VESA">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt;*&gt;   VESA VGA graphics support
</pre>

<p>
Luego, debajo de "VESA driver type" seleccione <c>vesafb</c> o
<c>vesafb-tng</c>. Si está usando un procesador AMD64, debe
seleccionar <c>vesafb</c> en vez de <c>vesafb-tng</c>:
</p>

<pre caption="Seleccionar el tipo de framebuffer">
(X) vesafb
( ) vesafb-tng
</pre>

<p>
Para mayor información, puede leer
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> si está usando
<c>vesafb</c> o busque la documentación para su framebuffer en
<path>/usr/src/linux/Documentation/fb/</path>.
</p>
</body>
</section>

<section>
<title>Continuar con la configuración del núcleo</title>
<body>

<p>
Los ebuilds <c>nvidia-drivers</c> y <c>nvidia-legacy-drivers</c>
automáticamente descubren su versión del núcleo basándose en el enlace
simbólico <path>/usr/src/linux</path>. Por favor, asegúrese que tiene
dicho enlace apuntando a las fuentes correctas y que su núcleo esté
correctamente configurado. Vea la sección Configurando el Núcleo
del <uri link="/doc/es/handbook/">Manual de Instalación</uri> para más
detalles sobre configuración de su núcleo.
</p>

<p>
Si está usando gentoo-sources-2.6.11-r6, su directorio <path>/usr/src</path>
debería parecer algo como esto:
</p>

<pre caption="Chequee su enlace simbólico /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ls -l</i>
<comment>(Verifique que linux apunta al directorio adecuado)</comment>
lrwxrwxrwx   1 root root   22 Apr 23 18:33 linux -&gt; linux-2.6.11-gentoo-r6
drwxr-xr-x   4 root root  120 Apr  8 18:56 linux-2.4.26-gentoo-r4
drwxr-xr-x  18 root root  664 Dec 31 16:09 linux-2.6.10
drwxr-xr-x  18 root root  632 Mar  3 12:27 linux-2.6.11
drwxr-xr-x  19 root root 4096 Mar 16 22:00 linux-2.6.11-gentoo-r6
</pre>

<p>
En la salida mostrada, notará que el enlace simbólico <c>linux</c> está
apuntando al núcleo <c>linux-2.6.11-gentoo-r6</c>.
</p>

<p>
Si el enlace simbólico no está apuntando a las fuentes correctas, debe
actualizar el enlace así:
</p>

<pre caption="Crea/Actualiza el enlace simbólico /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ln -snf linux-2.6.11-gentoo-r6 linux</i>
</pre>
</body>
</section>

<section>
<title>Opcional: Chequee el soporte de tarjetas antiguas (legacy)</title>
<body>

<note>
Desafortunadamente, ciertas tarjetas de video antiguas no son
soportadas por las nuevas versiones de <c>nvidia-drivers</c>. nVidia
proporciona
una <uri link="http://www.nvidia.com/object/IO_18897.html">lista de
tarjetas soportadas</uri>. Por favor, revísela antes de instalar los
controladores.
</note>

<p>
La siguiente es una lista de las tarjetas de video antiguas
<b>no soportadas</b>:
</p>

<pre caption="Tarjetas sin soporte">
TNT2
TNT2 Pro
TNT2 Ultra
TNT2 Model 64 (M64)
TNT2 Model 64 (M64) Pro
Vanta
Vanta LT
GeForce 256
GeForce DDR
GeForce2 GTS
GeForce2 Pro
GeForce2 Ti
GeForce2 Ultra
GeForce2 MX Integrated graphics
Quadro
Quadro2 Pro
Quadro2 EX
</pre>

<p>
Si su tarjeta aparece en esta lista, tendrá que instalar el
paquete <c>nvidia-legacy-drivers</c> paquete para obtener soporte 3D.
</p>
</body>
</section>

<section>
<title>Instalar los controladores apropiados</title>
<body>

<p>
Ahora es tiempo de instalar los controladores.
</p>

<pre caption="Instalar los módulos nVidia">
<comment>(Si su tarjeta no aparece en la lista anterior de tarjetas viejas)</comment>
# <i>emerge nvidia-drivers</i>
<comment>(Si su tarjeta está en la lista)</comment>
# <i>emerge nvidia-legacy-drivers</i>
</pre>

<impo>
Cada vez que <uri link="/doc/es/kernel-upgrade.xml">compile un nuevo
núcleo</uri> o recompile el actual, debe ejecutar <c>emerge
nvidia-drivers</c> o <c>emerge nvidia-legacy-drivers</c> para
reinstalar los módulos nVidia.
</impo>

<p>
Al concluir la instalación, ejecute <c>modprobe nvidia</c> para cargar
el módulo del núcleo a la memoria. Si es una actualización, primero
debe remover el módulo anterior.
</p>

<pre caption="Cargar el módulo del kernel">
# <i>lsmod | grep nvidia &amp;&amp; rmmod nvidia</i>
# <i>modprobe nvidia</i>
</pre>

<p>
Probablemente quiera hacer esto cada vez que arranque, así que modifique
<path>/etc/modules.autoload.d/kernel-2.6</path> (o <path>kernel-2.4</path>) y
agréguele <c>nvidia</c>. ¡No se olvide ejecutar <c>modules-update</c>
después!
</p>

<impo>
Si compiló <c>agpgart</c> como módulo, tendrá que agregarlo al fichero
<path>/etc/modules.autoload.d/kernel-2.6</path> (o <path>kernel-2.4</path>
dependiendo de la versión de su núcleo).
</impo>

<pre caption="Ejecute modules-update">
# <i>modules-update</i>
</pre>
</body>
</section>

<section>
<title>Configurar el servidor X</title>
<body>

<p>
Una vez que los controladores apropiados estén cargados, hará falta
configurar su servidor X para que use el controlador <c>nvidia</c> en
vez del controlador <c>nv</c>.
</p>

<p>
Abra el archivo <path>/etc/X11/xorg.conf</path> con su editor de texto
preferido (como <c>nano</c> o <c>vim</c>) y busque la sección
<c>Device</c>. Allí cambie la línea <c>Driver</c>:
</p>

<pre caption="Cambiar nv por nvidia en la configuración del servidor X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
Luego vaya a la sección <c>Module</c> y verifique que el módulo <c>glx</c>
sea cargado mientras que el módulo <c>dri</c> no lo sea:
</p>

<pre caption="Actualizar la sección Module">
Section "Module"
  <comment>(...)</comment>
  <i># Load  "dri"
  Load  "glx"</i>
  <comment>(...)</comment>
EndSection
</pre>

<p>
A continuación, en la sección <c>Screen</c>, asegúrese que la directiva
<c>DefaultDepth</c> esté ajustada en 16 ó 24, o que solamente tiene
subsecciones <c>Display</c> con la directiva <c>Depth</c> configurada con los
valores 16 ó 24. Sin esto, las extensiones de nvidia-glx no se iniciarán.
</p>

<pre caption="Actualizar la sección Screen">
Section "Screen"
  <comment>(...)</comment>
  <i>DefaultDepth 16</i>
  Subsection "Display"
  <comment>(...)</comment>
EndSection
</pre>

<p>
Ejecute <c>eselect</c> para que el servidor X use las bibliotecas GLX de nVidia:
</p>

<pre caption="Ejecutar eselect">
# <i>eselect opengl set nvidia</i>
</pre>
</body>
</section>

<section>
<title>Agregar usuarios al grupo video</title>
<body>

<p>
Debe agregar el usuario al grupo <c>video</c> para que éste tenga
acceso a los archivos de dispositivo nvidia:
</p>

<pre caption="Agregar el usuario al grupo video">
# <i>gpasswd -a su_usuario video</i>
</pre>

<p>
Esto tal vez no sea totalmente necesario si no está usando <c>udev</c>, pero no
hace daño alguno, ya que es una actualización a futuro.
</p>
</body>
</section>

<section>
<title>Probar su tarjeta</title>
<body>

<p>
Para probar su tarjeta nVidia, inicie X y escriba el comando
<c>glxinfo | grep direct</c>. Debería decir que el renderizado directo
ha sido activado:
</p>

<pre caption="Revisar el estado del renderizado directo">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
Para verificar su FPS (cuadros por segundo), ejecute <c>glxgears</c>.
</p>
</body>
</section>

<section>
<title>Habilitar el soporte para nvidia</title>
<body>

<p>
Algunas herramientas, como pueden ser <c>mplayer</c> y <c>xine-lib</c>,
utilizan una variable USE local llamada "nvidia" que activa el soporte
para XvMCNVIDIA, útil cuando se ven películas de alta resolución. Añada
la variable USE a su <path>/etc/make.conf</path> o agréguela a
<c>media-video/mplayer</c> y/o <c>media-libs/xine-lib</c> en
<path>/etc/portage/package.use</path>.
</p>

<p>
Hecho esto, ejecute <c>emerge -uD --newuse world</c> para recompilar las
aplicaciones que se benefician de este cambio en la variables USE.
</p>
</body>
</section>

<section>
<title>Usar la herramienta de configuración de nVidia</title>
<body>

<p>
Desde que nVidia liberó la versión 1.0.6106 de su controlador también
proporciona una herramienta de configuración que permite cambiar la
configuración gráfica sin necesidad de reiniciar el servidor X. Está
disponible en Portage como <c>media-video/nvidia-settings</c>.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Solución de problemas</title>
<section>
<title>
¿Cómo hacer funcionar la aceleración 2D en equipos con 4Gb o más de memoria?
</title>
<body>

<p>
Si tiene problemas con la aceleración 2D es probable que no haya podido
configurar un intervalo de escritura combinada (write-combining range) con
el MTRR. Para verificar, revise el contenido de <path>/proc/mtrr</path>:
</p>

<pre caption="Revisión de activación de escritura combinada">
# <i>cat /proc/mtrr</i>
</pre>

<p>
Cada línea debe contener "write-back" o "write-combining". Si ve una línea
con la palabra "uncachable", habrá que cambiar la configuración del BIOS para
hacerlo funcionar.
</p>

<p>
Reinicie su equipo e ingrese al BIOS. Encuentre la configuración MTRR
(probablemente bajo "CPU Settings"). Cambie la configuración de "continuous"
a "discrete" y reinicie Linux. Deberá poder comprobar que no hay entradas
"uncachable" y que la aceleración 2D funcione sin problemas.
</p>
</body>
</section>

<section>
<title>
  Cuando intento cargar el módulo del núcleo recibo el mensaje "no such device"
(no hay tal dispositivo)
</title>
<body>

<p>
Esto normalmente ocurre cuando no tiene una tarjeta de video nVidia. Asegúrese
que tiene una tarjeta gráfica potenciada por nVidia (puede doblemente chequear
esto usando el comando <c>lspci</c>).
</p>

<p>
Si está seguro que tiene una tarjeta nVidia, revise su BIOS y vea si la
directiva <e>Assign IRQ to VGA</e> (Asignar IRQ a VGA) está activada.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Configuración para expertos</title>
<section>
<title>Documentación</title>
<body>

<p>
El paquete del controlador nVidia también viene con una exhaustiva
documentación. Esta se encuentra instalada en <c>/usr/share/doc</c> y se puede
ver con el siguiente comando:
</p>

<pre caption="Ver la documentación de NVIDIA">
<comment>(para nvidia-drivers)</comment>
$ <i>less /usr/share/doc/nvidia-drivers-*/README.gz</i>
<comment>(para nvidia-legacy-drivers)</comment>
$ <i>less /usr/share/doc/nvidia-legacy-drivers-*/README.gz</i>
</pre>
</body>
</section>

<section>
<title>Parámetros del módulo del núcleo</title>
<body>

<p>
El módulo <c>nvidia</c> acepta un número de parámetros (opciones) que puede usar
para refinar el comportamiento del controlador. La mayoría de estos están
mencionados en la documentación. Para agregar o cambiar los valores de estos
parámetros, edite el archivo <c>/etc/modules.d/nvidia</c>. Recuerde ejecutar
<c>modules-update</c> después de modificar este archivo y tenga en mente que
necesitará recargar el módulo <c>nvidia</c> antes de que tomen efecto la nueva
configuración.
</p>

<pre caption="Ajustar las opciones del módulo nvidia">
<comment>(Edite /etc/modules.d/nvidia en su editor favorito)</comment>
# <i>nano -w /etc/modules.d/nvidia</i>
<comment>(Actualice la información del módulo)</comment>
# <i>modules-update</i>
<comment>(Descargue el módulo nvidia...)</comment>
# <i>modprobe -r nvidia</i>
<comment>(...y cárguelo nuevamente)</comment>
# <i>modprobe nvidia</i>
</pre>
</body>
</section>

<section>
<title>Configuración avanzada del Servidor X</title>
<body>

<p>
La capa GLX también tiene un conjunto de opciones que pueden ser configuradas.
Estas controlan la configuración de la salida de TV, pantallas duales, detección
de frecuencia del monitor, etcétera. Nuevamente, todas las opciones disponibles
están detalladas en la documentación.
</p>

<p>
Si desea usar cualquiera de esas opciones, tendrá que listarlas en la sección
Device de su archivo de configuración del servidor X (normalmente en
<c>/etc/X11/xorg.conf</c>). Por ejemplo, supongamos que se quiere desactivar el
logo de inicio:
</p>

<pre caption="Configuración avanzada de nvidia en la configuración de X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  <i>Option     "NoLogo" "true"</i>
  VideoRam   65536
EndSection
</pre>
</body>
</section>
</chapter>
</guide>
