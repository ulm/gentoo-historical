<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/nvidia-guide.xml,v 1.26 2009/08/18 16:21:21 chiguire Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/es/nvidia-guide.xml" lang="es">
<title>Guía nVidia Gentoo Linux</title>

<author title="Autor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Editor">
  <mail link="curtis119@gentoo.org">M. Curtis Napier</mail>
</author>
<author title="Editor">
  <mail link="wolf31o2@gentoo.org">Chris Gianelloni</mail>
</author>
<author title="Traductor">
  <mail link="chiguire@gentoo.org">John Christian Stoddart</mail>
</author>
<author title="Traductor">
  <mail link="anpereir@gentoo.org">Andrés Pereira</mail>
</author>
<author title="Traductor">
  <mail link="gentoo@nimiux.org">José María Alonso</mail>
</author>

<abstract>
Muchos usuarios de Gentoo tienen un chipset nVidia en su
sistema. nVidia suministra controladores específicos para aumentar el
desempeño de su tarjeta. Esta guía informa cómo instalar y configurar
estos controladores.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.39</version>
<date>2009-08-05</date>

<chapter>
<title>Introducción</title>
<section>
<body>

<p>
Los controladores nVidia drivers en el árbol Portage los libera nVidia
y son construidos contra el núcleo Linux. Contienen un binario que
realmente hace el trabajo con respecto a la tarjeta. Los controladores
consiste de dos partes: un módulo para el núcleo y un controlador
X11. Ambos conforman un único paquete. Debido a la manera como nVidia
empaqueta sus controladores, hará falta escoger antes de instalar.
</p>

<p>
El paquete <c>nvidia-drivers</c> contiene los controladores más
actuales de nVidia con soporte para <e>todas</e> las tarjetas con
varias versiones disponibles dependiendo de qué tan antigua sea la
tarjeta. Usa un eclass para detectar que tipo de tarjeta está usando
de manera de instalar la versión adecuada.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Compatibilidad de los controladores</title>
<section>
<title>¿Cuál versión?</title>
<body>

<p>
El paquete <c>nvidia-drivers</c> soporta la gama completa de tarjetas
nVidia disponibles. Están disponibles múltiples versiones para
instalación, dependiendo de la(s) tarjeta(s) que tenga.
</p>

<p>
Las tarjetas más modernas, tales como las GeForce 9, 8, 7 y la serie
6 deben usar los últimos controladores.
</p>

<p>
Las tarjetas un poco más antiguas, como las series GeForce FX 5 deben usar
los controladores 173.x, como <c>nvidia-drivers-173.14.15</c>. Para estas
tarjetas, debe enmascarar <c>>=x11-drivers/nvidia-drivers-174.00</c> en
su archivo <path>/etc/portage/package.mask</path>. Esto evitará que las
nuevas versiones del controlador que son incompatibles con su tarjeta sean
instaladas.
</p>

<p>
Las tarjatas anteriores como las series GeForce 3 o GeForce 4 requieren los
controladores 96.x. Para estas tarjetas, debería enmascarar
<c>>=x11-drivers/nvidia-drivers-97.00</c> en su archivo
<path>/etc/portage/package.mask</path>.
</p>

<p>
Las tarjetas más antiguas basadas en NV2x (como las TNT, TNT2, GeForce y
GeForce 2) requieren los controladores 71.x (como <c>nvidia-drivers-71.86</c>).
Para estas tarjetas debe enmascarar <c>>=x11-drivers/nvidia-drivers-87.00</c>
en <path>/etc/portage/package.mask</path>.
</p>

<p>
Puede revisar la compatibilidad de los controladores para su tarjetas
y determinar el soporte disponible leyendo el archivo README según
plataforma, sea x86 o x86-64 en la <uri
link="http://www.nvidia.com/object/unix.html">página apropiada</uri>.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Configurar la tarjeta</title>
<section>
<title>Configuración del núcleo</title>
<body>

<p>
Tal como mencionamos antes, el controlador nVidia en el núcleo se
instala y ejecuta en el núcleo actual. Se construye como módulo, así
que tiene sentido que el núcleo soporte la carga de módulos. Si ha
usado <c>genkernel all</c> para configurar su núcleo entonces está
listo, sino revise su configuración del núcleo para que este soporte
esté activado:
</p>

<pre caption="Activar la carga de módulos del núcleo">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
Probablemente tenga que activar <e>Memory Type Range Register</e> en
el núcleo:
</p>

<pre caption="Activar MTRR">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>

<p>Además, si tiene una tarjeta gráfica AGP, puede escoger activar el
soporte <c>agpgart</c> del kernel, bien sea compilado integralmente o
como un módulo. Si no usa el agpgart del núcleo, los controladores
usarán su propia implementación de <c>agpgart</c>, llamada
<c>NvAGP</c>. En ciertos sistemas se puede obtener mejor desempeño que
la del kernel y en otros peor. Hará falta evaluar en el propio sistema
para saber cual es el mejor desempeño. Si no está seguro qué hacer,
use el agpgart del núcleo.
</p>

<pre caption="Activar agpgart">
Device Drivers --->
Character devices --->
_*_ /dev/agpgart (AGP Support) --->
</pre>

<note>
En amd64, el IOMMU controla la configuración del agpgart.
</note>
</body>
</section>

<section>
<title>Observaciones específicas a la arquitectura</title>
<body>

<impo>
En los procesadores x86 y AMD64, el controlador del núcleo hace
conflicto con el de nVidia. Si compila su núcleo para alguno de estos
procesadores, elimine completamente el soporte para el controlador del
núcleo tal como mostramos:
</impo>

<pre caption="Eliminar el controlador incluido en el núcleo">
Device Drivers --->
Graphics Support --->
&lt;*&gt; Support for frame buffer devices --->
&lt; &gt;   nVidia Framebuffer Support
&lt; &gt;   nVidia Riva support
</pre>

<p>
Una de alternativa framebuffer es <c>uvesafb</c>, un <uri
link="http://dev.gentoo.org/~spock/projects/uvesafb/">framebuffer
avanzado</uri>. Puede escoger su compilación integral al núcleo o como
módulo. El siguiente ejemplo compila uvesafb de manera integral al
núcleo.
</p>

<pre caption="Activar soporte uvesafb">
Device Drivers --->
Graphics Support --->
&lt;*&gt;   Userspace VESA VGA graphics support
</pre>

 <p>
 O puede probar con <c>VESA</c>:
 </p>

 <pre caption="Activar soporte VESA">
 Device Drivers --->
 Graphics Support --->
 &lt;*&gt; Support for frame buffer devices --->
 [*]   VESA VGA graphics support
 </pre>

<p>
Para mayor información, puede leer
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> si está usando
<c>vesafb</c> o busque la documentación para su framebuffer en
<path>/usr/src/linux/Documentation/fb/</path>.
</p>
</body>
</section>

<section>
<title>Continuar con la configuración del núcleo</title>
<body>

<p>
Los ebuilds <c>nvidia-drivers</c> automáticamente descubren la versión
del núcleo con el enlace simbólico <path>/usr/src/linux</path>. Por
favor, asegúrese que este enlace apunta a las fuentes correctas y que
su núcleo esté correctamente configurado. Vea la sección "Configurando
el Núcleo" del <uri link="/doc/es/handbook/">Manual Gentoo</uri> para
más detalles sobre la configuración de su núcleo.
</p>

<p>
Primero, hará falta hacer emerge al paquete <c>eselect</c> (si es que
ya no lo tiene). Si está usando las fuentes
<c>gentoo-sources-2.6.18-r4</c>, el listado del núcleo se vería algo
como:
</p>

<pre caption="Chequee su enlace simbólico /usr/src/linux">
# <i>eselect kernel list</i>
Available kernel symlink targets:
  [1]   linux-2.6.18-gentoo-r4 *
  [2]   linux-2.6.20-gentoo-r7
  [3]   linux-2.6.20-gentoo-r8
<comment>(Verifique que el núcleo adecuado esté señalado con un asterisco</comment>
</pre>

<p>
En la salida anterior, notará que el núcleo
<c>linux-2.6.18-gentoo-r4</c> está marcado con un asterisco (<b>*</b>)
para mostrar que es el núcleo con el enlace simbólico.
</p>

<p>
Si el enlace simbólico no apunta a las fuentes correctas debe
actualizar el enlace seleccionando el número del núcleo deseado, como
en el ejemplo anterior.
</p>

<pre caption="Crear/Actualizar el enlace simbólico /usr/src/linux">
<comment>(Seleccione las fuentes del núcleo correcto)</comment>
# <i>eselect kernel set 1</i>
</pre>
</body>
</section>

<section>
<title>Instalando los controladores apropiados</title>
<body>

<p>
Ahora toca instalar los controladores.
</p>

<pre caption="Instalar los controladores nVidia">
# <i>emerge nvidia-drivers</i>
</pre>

<note>
Los controladores pueden instalarse con el parámetro USE
<c>gtk</c>. Esto instalará también el paquete
<c>media-video/nvidia-settings</c>, una útil herramienta gráfica para
monitorear y configurar distintos aspectos de la tarjeta nVidia.
</note>

<impo>
Cada vez que <uri link="/doc/es/kernel-upgrade.xml">compile un nuevo
núcleo</uri> o recompile el actual, debe volver a ejecutar <c>emerge
nvidia-drivers</c> para reinstalar los módulos nVidia. Una manera más
sencilla de seguirle la pista a los módulos instalados por los ebuilds
(por ejemplo <c>nvidia-drivers</c>) es instalar
<c>sys-kernel/module-rebuild</c>. Una vez instalado, ejecute
<c>module-rebuild populate</c> para llenar su base de datos con una
lista de paquetes que deben reconstruirse. Una vez que haya terminado
de compilar o recompilar un núcleo, ejecute <c>module-rebuild
rebuild</c> para reconstruir los controladores para el núcleo nuevo.
</impo>

<p>
Al concluir la instalación, ejecute <c>modprobe nvidia</c> para cargar
el módulo del núcleo a la memoria. Si es una actualización, primero
debe remover el módulo anterior.
</p>

<pre caption="Cargar el módulo del núcleo">
# <i>lsmod | grep nvidia &amp;&amp; rmmod nvidia</i>
# <i>modprobe nvidia</i>
</pre>

<p>
Para evitar tener que cargar el módulo manualmente y automatizar esto
cada vez que arranque, modifique
<path>/etc/modules.autoload.d/kernel-2.6</path> y agregue
<c>nvidia</c>. ¡No se olvide ejecutar <c>update-modules</c> después!
</p>

<impo>
Si compiló <c>agpgart</c> como módulo, tendrá que agregarlo al fichero
<path>/etc/modules.autoload.d/kernel-2.6</path>..
</impo>

<pre caption="Ejecute update-modules">
# <i>update-modules</i>
</pre>
</body>
</section>

<section>
<title>Configurar el servidor X</title>
<body>

<p>
Una vez que los controladores apropiados estén cargados, hará falta
configurar su servidor X para que use el controlador <c>nvidia</c> en
vez del controlador <c>nv</c>.
</p>

<p>
Abra el archivo <path>/etc/X11/xorg.conf</path> con su editor de texto
preferido (como <c>nano</c> o <c>vim</c>) y busque la sección
<c>Device</c>. Allí cambie la línea <c>Driver</c>:
</p>

<pre caption="Cambiar nv por nvidia en la configuración del servidor X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
Luego vaya a la sección <c>Module</c> y verifique que el módulo
<c>glx</c> sea cargado y que el módulo <c>dri</c> no lo sea:
</p>

<pre caption="Actualizar la sección Module">
Section "Module"
  <comment>(...)</comment>
  <i># Load  "dri"
  Load  "glx"</i>
  <comment>(...)</comment>
EndSection
</pre>

<p>
A continuación, en la sección <c>Screen</c>, asegúrese que la
directiva <c>DefaultDepth</c> esté ajustada en 16 ó 24, o que
solamente tiene subsecciones <c>Display</c> con la directiva
<c>Depth</c> configurada con los valores 16 ó 24. Sin esto, las
extensiones de nvidia-glx no se iniciarán.
</p>

<pre caption="Actualizar la sección Screen">
Section "Screen"
  <comment>(...)</comment>
  <i>DefaultDepth 16</i>
  Subsection "Display"
  <comment>(...)</comment>
EndSection
</pre>

<p>
Ejecute <c>eselect</c> para que el servidor X use las bibliotecas GLX
de nVidia:
</p>

<pre caption="Ejecutar eselect">
# <i>eselect opengl set nvidia</i>
</pre>
</body>
</section>

<section>
<title>Agregar usuarios al grupo video</title>
<body>

<p>
Debe agregar el usuario al grupo <c>video</c> para que éste tenga
acceso a los archivos de dispositivo nVidia:
</p>

<pre caption="Agregar el usuario al grupo video">
# <i>gpasswd -a su_usuario video</i>
</pre>

<p>
Esto tal vez no sea totalmente necesario si no está usando
<c>udev</c>, pero no hace daño alguno, ya que es una actualización a
futuro.
</p>
</body>
</section>

<section>
<title>Probar su tarjeta</title>
<body>

<p>
Para probar su tarjeta nVidia, inicie X y escriba el comando
<c>glxinfo</c>, que forma parte del paquete <c>mesa-progs</c>. Debería
decir que el renderizado directo ha sido activado:
</p>

<pre caption="Revisar el estado del renderizado directo">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
Para verificar su FPS (cuadros por segundo), ejecute <c>glxgears</c>.
</p>
</body>
</section>

<section>
<title>Habilitar el soporte para nvidia</title>
<body>

<p>
Algunas herramientas, como pueden ser <c>mplayer</c> y
<c>xine-lib</c>, utilizan una variable USE local llamada <c>xvmc</c>
que activa el soporte para XvMCNVIDIA, útil cuando se ven películas de
alta resolución. Añada esta variable USE a su
<path>/etc/make.conf</path> o agréguela a <c>media-video/mplayer</c>
y/o <c>media-libs/xine-lib</c> en
<path>/etc/portage/package.use</path>.
</p>

<p>
Existen algunas aplicaciones que hacen uso del parámetro USE
<c>nvidia</c>, de manera que quizás desee agregarlos al archivo
<path>/etc/make.conf</path>.
</p>

<p>
Hecho esto, ejecute <c>emerge -uD --newuse world</c> para recompilar
las aplicaciones que se benefician de este cambio en la variable USE.
</p>
</body>
</section>

<section>
<title>Usar la herramienta de configuración de nVidia</title>
<body>

<p>
nVidia también proporciona una herramienta de configuración. Esta
herramienta permite revisar y cambiar la configuración gráfica sin
reiniciar el servidor X. Está disponible en Portage como
<c>media-video/nvidia-settings</c>. Tal como mencionamos
anteriormente, será incorporada automáticamente al instalar el
controlador con el parámetro USE <c>gtk</c> colocado en el archivo
<path>/etc/make.conf</path> o en
<path>/etc/portage/package.use</path>.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Solución de problemas</title>
<section>
<title>
¿Cómo hacer funcionar la aceleración 2D en equipos con 4Gb o más de
memoria?
</title>
<body>

<p>
Si tiene problemas con la aceleración 2D es probable que no haya
podido configurar un intervalo de escritura combinada (write-combining
range) con el MTRR. Para verificar, revise el contenido de
<path>/proc/mtrr</path>:
</p>

<pre caption="Revisión de activación de escritura combinada">
# <i>cat /proc/mtrr</i>
</pre>

<p>
Cada línea debe contener "write-back" o "write-combining". Si ve una
línea con la palabra "uncachable", habrá que cambiar la configuración
del BIOS para hacerlo funcionar.
</p>

<p>
Reinicie su equipo e ingrese al BIOS. Encuentre la configuración MTRR
(probablemente bajo "CPU Settings"). Cambie la configuración de
"continuous" a "discrete" y reinicie Linux. Deberá poder comprobar que
no hay entradas "uncachable" y que la aceleración 2D funcione sin
problemas.
</p>
</body>
</section>

<section>
<title>
Cuando intento cargar el módulo del núcleo recibo el mensaje "no such
device" (no existe tal dispositivo)
</title>
<body>

<p>
Esto normalmente ocurre cuando no se tiene una tarjeta de video
nVidia. Asegúrese que tiene una tarjeta gráfica potenciada por nVidia
(puede doblemente chequear esto usando el comando <c>lspci</c>).
</p>

<p>
Si está seguro que tiene una tarjeta nVidia, revise su BIOS y vea si
la directiva <e>Assign IRQ to VGA</e> (Asignar IRQ a VGA) está
activada.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Configuración para expertos</title>
<section>
<title>Documentación</title>
<body>

<p>
El paquete del controlador nVidia también viene con una exhaustiva
documentación. Esta se encuentra instalada en <c>/usr/share/doc</c> y
se puede ver con el siguiente comando:
</p>

<pre caption="Ver la documentación de NVIDIA">
$ <i>less /usr/share/doc/nvidia-drivers-*/README.gz</i>
</pre>
</body>
</section>

<section>
<title>Parámetros del módulo del núcleo</title>
<body>

<p>
El módulo <c>nvidia</c> acepta un número de parámetros (opciones) que
puede usar para refinar el comportamiento del controlador. La mayoría
de estos están mencionados en la documentación. Para agregar o cambiar
los valores de estos parámetros, edite el archivo
<c>/etc/modprobe.d/nvidia</c>. Recuerde ejecutar <c>update-modules</c>
después de modificar este archivo y tenga en mente que necesitará
recargar el módulo <c>nvidia</c> antes de que tomen efecto la nueva
configuración.
</p>

<pre caption="Ajustar las opciones del módulo nvidia">
<comment>(Edite /etc/modprobe.d/nvidia en su editor favorito)</comment>
# <i>nano -w /etc/modprobe.d/nvidia</i>
<comment>(Actualice la información del módulo)</comment>
# <i>update-modules</i>
<comment>(Descargue el módulo nvidia ...)</comment>
# <i>modprobe -r nvidia</i>
<comment>(... y cárguelo nuevamente)</comment>
# <i>modprobe nvidia</i>
</pre>
</body>
</section>

<section>
<title>Configuración avanzada del Servidor X</title>
<body>

<p>
La capa GLX también tiene un variedad de opciones que pueden ser
configuradas. Estas controlan la configuración de la salida de TV,
pantallas duales, detección de frecuencia del monitor,
etc. Nuevamente, todas las opciones disponibles están detalladas en la
documentación.
</p>

<p>
Si desea usar cualquiera de esas opciones, tendrá que listarlas en la
sección Device de su archivo de configuración del servidor X
(normalmente en <c>/etc/X11/xorg.conf</c>). Por ejemplo, supongamos
que se quiere desactivar el logo de inicio:
</p>

<pre caption="Configuración avanzada de nvidia en la configuración de X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  <i>Option     "NoLogo" "true"</i>
  VideoRam   65536
EndSection
</pre>
</body>
</section>
</chapter>
</guide>
