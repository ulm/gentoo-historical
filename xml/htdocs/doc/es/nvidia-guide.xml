<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/nvidia-guide.xml,v 1.14 2006/04/06 00:39:23 yoswink Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/es/nvidia-guide.xml" lang="es">
<title>Guía nVidia Gentoo Linux</title>

<author title="Autor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="curtis119@gentoo.org">M. Curtis Napier</mail>
</author>
<author title="Editor">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Traductor">
  <mail link="bass@gentoo.org">José Alberto Suárez López</mail>
</author>
<author title="Traductor">
  <mail link="chiguire@gentoo.org">John Christian Stoddart</mail>
</author>
<author title="Traductor">
  <mail link="anpereir@gentoo.org">Andrés Pereira</mail>
</author>

<abstract>
Muchos usuarios Gentoo tienen un chipset nVidia en su sistema. nVidia
suministra drivers específicos para aumentar el desempeño de su
tarjeta. Esta guía informa cómo instalar y configurar estos drivers.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.23</version>
<date>2006-03-28</date>

<chapter>
<title>Introducción</title>
<section>
<body>

<p>
nVidia libera sus propios drivers de Linux que proveen buen rendimiento y
aceleración 3D completa. Las versiones de los drivers se dividen hasta en dos
partes: <c>nvidia-kernel</c> y <c>nvidia-glx</c>.
</p>

<p>
<c>nvidia-kernel</c> es un driver para el núcleo que maneja la comunicación a
bajo nivel con su hardware de video. Simplemente es un módulo del núcleo,
llamado <c>nvidia</c>, que se instala contra sus fuentes del núcleo y necesita
ser cargado siempre y cuando quiera usar los drivers de nvidia.
</p>

<p>
Así como el driver para el núcleo, necesitará instalar la capa GLX de X11
(<c>nvidia-glx</c>). Esta la usa X para renderear gráficos y que internamente
usa el driver del núcleo <c>nvidia-kernel</c> como interfaz al hardware.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Configurando su Tarjeta</title>
<section>
<title>Configuración del núcleo</title>
<body>

<p>
Los drivers nVidia incluyen módulos para integrarlos a su núcleo actual.
Para poder hacer esto, el núcleo debe soportar la carga de módulos. Si ha
usado <c>genkernel</c> al configurar su núcleo entonces está listo, sino
revise su configuración del núcleo para que el soporte esté habilitado:
</p>

<pre caption="Activando la carga de módulos del núcleo">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
Probablemente tendrá que activar <e>Memory Type Range Register</e> en su
núcleo:
</p>

<pre caption="Activando MTRR">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>

</body>
</section>
<section>
<title>Observaciones específicas a la arquitectura</title>
<body>

<impo>
Para los procesadores x86 y AMD64, el controlador incluido en el núcleo entra
en conflicto con aquel proporcionado por nVidia. Si va a compilar su núcleo
para alguno de esos procesadores, debe eliminar completamente el soporte para
el controlador incluido en el núcleo tal como se muestra a continuación:
</impo>

<pre caption="Eliminar el controlador incluido en el núcleo">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt; &gt;   nVidia Framebuffer Support
&lt; &gt;   nVidia Riva support
</pre>

<p>
Una buena alternativa de framebuffer es el <c>VESA</c>:
</p>

<pre caption="Activar el soporte para VESA">
Device Drivers ---&gt; 
Graphics Support ---&gt;
&lt;*&gt;   VESA VGA graphics support
</pre>

<p>
Luego, debajo de "VESA driver type" seleccione <c>vesafb</c> o
<c>vesafb-tng</c>:
</p>

<pre caption="Seleccionar el tipo de framebuffer">
( ) vesafb
(X) vesafb-tng
</pre>

<p>
Para mayor información, puede leer
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> si está usando
<c>vesafb</c> o busque la documentación para su framebuffer en
<path>/usr/src/linux/Documentation/fb/</path>.
</p>

</body>
</section>
<section>
<title>Continuar con la configuración del núcleo</title>
<body>

<p>
Los módulos y bibliotecas nVidia están combinados en dos paquetes:
<c>nvidia-glx</c> y <c>nvidia-kernel</c>. El primero son las bibliotecas GLX
mientras que el segundo son los módulos del kernel.
</p>

<p>
El ebuild nvidia-kernel descubre automáticamente su versión del núcleo basándose
en el enlace simbólico <path>/usr/src/linux</path>. Por favor, asegúrese que
tiene dicho enlace apuntando a las fuentes correctas y que su núcleo esté
correctamente configurado. Vea la sección Configurando el Núcleo del <uri
link="/doc/es/handbook/">Manual de Instalación</uri> para más detalles sobre
configuración de su núcleo.
</p>

<p>
Si está usando gentoo-sources-2.6.11-r6, su directorio <path>/usr/src</path>
debería parecer algo como esto:
</p>

<pre caption="Chequee su enlace simbólico /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ls -l</i>
<comment>(Verifique que linux apunta al directorio adecuado)</comment>
lrwxrwxrwx   1 root root   22 Apr 23 18:33 linux -&gt; linux-2.6.11-gentoo-r6
drwxr-xr-x   4 root root  120 Apr  8 18:56 linux-2.4.26-gentoo-r4
drwxr-xr-x  18 root root  664 Dec 31 16:09 linux-2.6.10
drwxr-xr-x  18 root root  632 Mar  3 12:27 linux-2.6.11
drwxr-xr-x  19 root root 4096 Mar 16 22:00 linux-2.6.11-gentoo-r6
</pre>

<p>
En la salida mostrada, notará que el enlace simbólico <c>linux</c> está
apuntando al núcleo <c>linux-2.6.11-gentoo-r6</c>.
</p>

<p>
Si el enlace simbólico no está apuntando a las fuentes correctas, debe
actualizar el enlace así:
</p>

<pre caption="Crea/Actualiza el enlace simbólico /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ln -snf linux-2.6.11-gentoo-r6 linux</i>
</pre>
</body>
</section>

<section>
<title>Opcional: Chequee el soporte de tarjetas antiguas (legacy)</title>
<body>

<note>
Desafortunadamente, ciertas tarjetas de vídeo antiguas no son soportadas por
las nuevas versiones de <c>nvidia-glx</c> y <c>nvidia-kernel</c>. nVidia provee
una <uri link="http://www.nvidia.com/object/IO_18897.html">lista de tarjetas
soportadas</uri>. Por favor, chequee la lista antes de instalar los drivers.
</note>

<p>
La siguiente es una lista de las tarjetas de video antiguas
<b>no soportadas</b>:
</p>

<pre caption="Tarjetas sin soporte">
TNT2
TNT2 Pro
TNT2 Ultra
TNT2 Model 64 (M64)
TNT2 Model 64 (M64) Pro
Vanta
Vanta LT
GeForce 256
GeForce DDR
GeForce2 GTS
GeForce2 Pro
GeForce2 Ti
GeForce2 Ultra
GeForce2 MX Integrated graphics
Quadro
Quadro2 Pro
Quadro2 EX
</pre>

<p>
Si posee una de estas tarjetas, tendrá que enmascarar las nuevas versiones de
los drivers de nVidia e instalar una versión más antigua:
</p>

<pre caption="Enmascarando los drivers más nuevos">
# <i>echo "&gt;media-video/nvidia-kernel-1.0.6629-r5" &gt;&gt; /etc/portage/package.mask</i>
# <i>echo "&gt;media-video/nvidia-glx-1.0.6629-r7" &gt;&gt; /etc/portage/package.mask</i>
</pre>

</body>
</section>
<section>
<title>Instalando los drivers apropiados</title>
<body>

<p>
Ahora es tiempo de instalar <c>nvidia-kernel</c> y <c>nvidia-glx</c>. Ya que
<c>nvidia-glx</c> depende de <c>nvidia-kernel</c>, es suficiente instalar
<c>nvidia-glx</c>.
</p>

<pre caption="Instalando los módulos nVidia">
# <i>emerge nvidia-glx</i>
</pre>

<impo>
Cada vez que <uri link="/doc/es/kernel-upgrade.xml">compile un nuevo
núcleo</uri> o recompile el actual, debe ejecutar <c>emerge nvidia-kernel</c>
para reinstalar los módulos nVidia. <c>nvidia-glx</c> no se ve afectado por un
cambio del núcleo e incluso no necesita ser reconstruido cuando
actualiza/recompila X.
</impo>

<p>
Al concluir la instalación, ejecute <c>modprobe nvidia</c> para cargar el
módulo del núcleo a la memoria.
</p>

<pre caption="Cargando el módulo del kernel">
# <i>modprobe nvidia</i>
</pre>

<p>
Probablemente quiera hacer esto cada vez que arranque, así que modifique
<path>/etc/modules.autoload.d/kernel-2.6</path> (o <path>kernel-2.4</path>) y
agréguele <c>nvidia</c>. ¡No se olvide ejecutar <c>modules-update</c>
después!
</p>

<pre caption="Ejecute modules-update">
# <i>modules-update</i>
</pre>
</body>
</section>

<section>
<title>Configurando el servidor X</title>
<body>

<p>
Una vez que los drivers apropiados estén cargados, hará falta configurar
su servidor X (XFree86 o Xorg) para que use el driver <c>nvidia</c> en
vez del driver <c>nv</c>.
</p>

<p>
Abra <path>/etc/X11/xorg.conf</path> (o <path>/etc/X11/XF86Config</path> si
todavía usa la antigua ubicación del archivo de configuración) con su editor
de texto preferido (como <c>nano</c> o <c>vim</c>) y busque la sección
<c>Device</c>. Allí cambie la línea <c>Driver</c>:
</p>

<pre caption="Cambiando nv por nvidia en la configuración del servidor X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
Luego vaya a la sección <c>Module</c> y verifique que el módulo <c>glx</c>
sea cargado mientras que el módulo <c>dri</c> no lo sea:
</p>

<pre caption="Actualizando la sección Module">
Section "Module"
  <comment>(...)</comment>
  <i># Load  "dri"
  Load  "glx"</i>
  <comment>(...)</comment>
EndSection
</pre>

<p>
A continuación, en la sección <c>Screen</c>, asegúrese que la directiva
<c>DefaultDepth</c> esté ajustada en 16 ó 24, o que solamente tiene
subsecciones <c>Display</c> con la directiva <c>Depth</c> configurada con los
valores 16 ó 24. Sin esto, las extensiones de nvidia-glx no se iniciarán.
</p>

<pre caption="Actualizando la sección Screen">
Section "Screen"
  <comment>(...)</comment>
  <i>DefaultDepth 16</i>
  Subsection "Display"
  <comment>(...)</comment>
EndSection
</pre>

<p>
Ejecute <c>opengl-update</c> para que el servidor X use las bibliotecas GLX de
nVidia:
</p>

<pre caption="Ejecute opengl-update">
# <i>opengl-update nvidia</i>
</pre>
</body>
</section>

<section>
<title>Agregando usuarios al grupo video</title>
<body>

<p>
Debe agregar el usuario al grupo <c>video</c> para que éste tenga
acceso a los archivos de dispositivo nvidia:
</p>

<pre caption="Agregando el usuario al grupo video">
# <i>gpasswd -a su_usuario video</i>
</pre>

<p>
Esto tal vez no sea totalmente necesario si no está usando <c>udev</c>, pero no
hace daño alguno, ya que es una actualización a futuro :)
</p>
</body>
</section>

<section>
<title>Probando su tarjeta</title>
<body>

<p>
Para probar su tarjeta nVidia, inicie X y escriba el comando
<c>glxinfo | grep direct</c>. Debería decir que el renderizado directo
ha sido activado:
</p>

<pre caption="Revisando el estado del renderizado directo">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
Para verificar su FPS (cuadros por segundo), ejecute <c>glxgears</c>.
</p>
</body>
</section>

<section>
<title>Habilitando el soporte para nvidia</title>
<body>

<p>
Algunas herramientas, como pueden ser <c>mplayer</c> y <c>xine-lib</c>,
utilizan una variable USE local llamada "nvidia" que activa el soporte
para XvMCNVIDIA, útil cuando se ven películas de alta resolución. Añada
la variable USE a su <path>/etc/make.conf</path> o agréguela a
<c>media-video/mplayer</c> y/o <c>media-libs/xine-lib</c> en
<path>/etc/portage/package.use</path>.
</p>

<p>
Hecho esto, ejecute <c>emerge -uD --newuse world</c> para recompilar las
aplicaciones que se benefician de este cambio en la variables USE.
</p>

</body>
</section>
<section>
<title>Usando la herramienta de configuración de nVidia</title>
<body>

<p>
Desde que nVidia liberó la versión 1.0.6106 de su driver también le provee una
herramienta de configuración. Esta le permite cambiar la configuración gráfica
sin necesidad de reiniciar el servidor X y está disponible en Portage como
<c>media-video/nvidia-settings</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Solución de problemas</title>
<section>
<title>
¿Cómo hacer funcionar la aceleración 2D en equipos con 4Gb o más de memoria?
</title>
<body>

<p>
Si tiene problemas con la aceleración 2D es probable que no haya podido
configurar un intervalo de escritura combinada (write-combining range) con
el MTRR. Para verificar, revise el contenido de <path>/proc/mtrr</path>:
</p>

<pre caption="Revisión de activación de escritura combinada">
# <i>cat /proc/mtrr</i>
</pre>

<p>
Cada línea debe contener "write-back" o "write-combining". Si ve una línea
con la palabra "uncachable", habrá que cambiar la configuración del BIOS para
hacerlo funcionar.
</p>

<p>
Reinicie su equipo e ingrese al BIOS. Encuentre la configuración MTRR
(probablemente bajo "CPU Settings"). Cambie la configuración de "continuous"
a "discrete" y reinicie Linux. Deberá poder comprobar que no hay entradas
"uncachable" y que la aceleración 2D funcione sin problemas.
</p>
</body>
</section>

<section>
<title>Recibo advertencias acerca de pilas de 4K no soportadas</title>
<body>

<p>
Los paquetes <c>nvidia-kernel</c> previos a la versión 1.0.6106 sólo soportan
núcleos que usen pilas de 8K. Los núcleos más recientes (del 2.6.6 en adelante)
soportan pilas de 4K también. No seleccione pilas de 4K en su configuración del
núcleo si está usando un paquete <c>nvidia-kernel</c> de ésta versión. Puede
encontrar esta opción bajo la sección <c>Kernel Hacking</c>.
</p>

</body>
</section>
<section>
<title>
  Cuando intento cargar el módulo del núcleo recibo el mensaje "no such device"
(no hay tal dispositivo)
</title>
<body>

<p>
Esto normalmente ocurre cuando no tiene una tarjeta de video nVidia. Asegúrese
que tiene una tarjeta gráfica potenciada por nVidia (puede doblemente chequear
esto usando el comando <c>lspci</c>).
</p>

<p>
Si está seguro que tiene una tarjeta nVidia, revise su BIOS y vea si la
directiva <e>Assign IRQ to VGA</e> (Asignar IRQ a VGA) está activada.
</p>
</body>
</section>
<section>
<title>
  Obtengo el mensaje "no screens found" y las bitácoras (logs) mencionan
  "Failed to initialize the NVIDIA kernel module!"
</title>
<body>

<p>
Lo más probable es que falten los archivos de dispositivo
<path>/dev/nvidia*</path>. Los puede crear usando <c>NVmakedevices.sh</c>:
</p>

<pre caption="Crear los nodos de dispositivo nvidia">
# <i>/sbin/NVmakedevices.sh</i>
</pre>

<p>
Si sus dispositivos <path>/dev/nvidia</path> siguen estando ausentes
cada vez que reinicia, entonces lo más probable es que udev no esté creando
automáticamente los nodos de dispositivos apropiados. Puede corregir esto
ejecutando nuevamente <c>NVmakedevices.sh</c> y posteriormente edite el
fichero <path>/etc/conf.d/rc</path> como se muestra a continuación:
</p>

<pre caption="Editar /etc/conf.d/rc">
RC_DEVICE_TARBALL="yes"
</pre>

<p>
Esto hará que se conserven sus nodos <path>/dev/nvidia</path> incluso en caso de
que reinicie.
</p>

<note>
De forma alternativa puede intentar reinstalar los últimos <c>nvidia-kernel</c>
y <c>nvidia-glx</c> a partir la serie 8xxx. Al momento de redacción de este
documento, ambos todavía estaban marcados ~arch (i.e. en la rama de pruebas).
Estos controladores ya no dependen de hotplug o udev para crear los nodos de
dispositivo apropiados, así que no necesitará ejecutar <c>NVmakedevices.sh</c>.
En cambio, el controlador X creará por si mismo sus ficheros
<path>/dev/nvidia</path> cuando inicie el servidor X. Sin embargo, esto requiere
que use una versión reciente del núcleo (2.6.14 o superior).
</note>

</body>
</section>
</chapter>

<chapter>
<title>Configuración para expertos</title>
<section>
<title>Documentación</title>
<body>

<p>
El paquete del driver nVidia también viene con una exhaustiva documentación.
Esta se encuentra instalada en <c>/usr/share/doc</c> y se puede ver con el
siguiente comando:
</p>

<pre caption="Viendo la documentación de NVIDIA">
# <i>less /usr/share/doc/nvidia-glx-*/README.txt.gz</i>
</pre>
</body>
</section>

<section>
<title>Parámetros del módulo del núcleo</title>
<body>

<p>
El módulo <c>nvidia</c> acepta un número de parámetros (opciones) que puede usar
para refinar el comportamiento del driver. La mayoría de estos están mencionados
en la documentación. Para agregar o cambiar los valores de estos parámetros,
edite el archivo <c>/etc/modules.d/nvidia</c>. Recuerde ejecutar
<c>modules-update</c> después de modificar este archivo y tenga en mente que
necesitará recargar el módulo <c>nvidia</c> antes de que tomen efecto la nueva
configuración.
</p>

<pre caption="Ajustando las opciones del módulo nvidia">
<comment>(Edite /etc/modules.d/nvidia en su editor favorito)</comment>
# <i>nano -w /etc/modules.d/nvidia</i>
<comment>(Actualice la información del módulo)</comment>
# <i>modules-update</i>
<comment>(Descargue el módulo nvidia...)</comment>
# <i>modprobe -r nvidia</i>
<comment>(...y cárguelo nuevamente)</comment>
# <i>modprobe nvidia</i>
</pre>
</body>
</section>

<section>
<title>Configuración avanzada del Servidor X</title>
<body>

<p>
La capa GLX también tiene un conjunto de opciones que pueden ser configuradas.
Estas controlan la configuración de la salida de TV, pantallas duales, detección
de frecuencia del monitor, etcétera. Nuevamente, todas las opciones disponibles
están detalladas en la documentación.
</p>

<p>
Si desea usar cualquiera de esas opciones, tendrá que listarlas en la sección
Device de su archivo de configuración del servidor X (normalmente en
<c>/etc/X11/xorg.conf</c>). Por ejemplo, supongamos que se quiere desactivar el
logo de inicio:
</p>

<pre caption="Configuración avanzada de nvidia en la configuración de X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  <i>Option     "NoLogo" "true"</i>
  VideoRam   65536
EndSection
</pre>

</body>
</section>
</chapter>
</guide>
