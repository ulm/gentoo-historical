<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/gentoolkit.xml,v 1.3 2004/01/28 20:45:32 chiguire Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link = "/doc/es/gentoolkit.xml">
<title>Gentoolkit</title>
<author title="Author"><mail link="mbutcher@aleph-null.tv">
Matt Butcher</mail>
</author>

<author title="Editor"><mail link="zhen@gentoo.org">John P. Davis</mail></author>
<author title="Editor"><mail
link="erwin@gentoo.org">Erwin</mail></author>
<author title="Editor-Es"><mail link="BaSS@gentoo.org">José Alberto
Suárez López</mail></author>
<author title="Traductor"><mail link="enrique@barbeito.org">Enrique Barbeito García</mail></author>

<!-- Licensed under GFDL -->

<abstract>
Gentoolkit es un conjunto de herramientas para facilitar la
administración del sistema Gentoo. Este documento cubre lo básico de
algunas de las herramientas presentes en gentoolkit.
</abstract>

<version>1.2</version>
<date>1 de diciembre de 2003</date>

<chapter>
<title>Introducción</title>
<section>
<title>¿Qué es Gentoolkit?</title>
<body>
<p>
Gentoo es una distribución única, y presenta algunas complejidades
que, simplemente, no existen para otras distribuciones. Así como los
desarrolladores y contribuidores de Gentoo descubrían algunas de estas
complejidades, escribían herramientas para ayudar a los usuarios y
administradores en su trabajo. Muchas de estas herramientas han sido
donadas al proyecto Gentoo y se incluyen en el paquete
<path>app-portage/gentoolkit</path>.
</p>

<p>
Gentoolkit contiene un grupo de herramientas útiles para ayudar a
administrar Portage y la arquitectura del ebuild. La mayoría de los
usuarios --particularmente aquellos que a menudo actualizan los
sistemas-- se beneficiarán al tener gentoolkit instalado.
</p>
</body>
</section>

<section>
<title>Instalación</title>
<body>
<p>Justo como cualquier paquete de Gentoo, la instalación es sólo un
simple <c>emerge</c>.
</p>

<pre>
<i>emerge gentoolkit </i>
</pre>

<note>Muchas de las herramientas en gentoolkit revelan información
importante sobre tu sistema o requieren permisos del usuario root. Por
esa razón, algunos de los programas solamente pueden ser ejecutados (o
una función mejor dicho) si se ejecutan por un usuario con permisos de
root.</note>
</body>
</section>

<section>
<title>Encontrar Documentación</title>
<body>

<p>
El escribir esto, no todos los programas de gentoolkit están bien
documentados. Algunos tienen páginas man, pero no todos. Cualquier
documentación que un programa pudiera tener (con excepción de las
páginas man) es almacenada en
<path>/usr/doc/gentoolkit-[versión]/[nombre-del-programa]/</path>.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Preguntar datos del paquete con qpkg</title>
<section>

<title>Introducción</title>
<body>
<p>
<c>qpkg</c> es una herramienta flexible para determinar información
sobre los ebuilds, tanto los instalados como los no instalados. Puede
proporcionar información sobre qué archivos pertenecen a qué ebuilds,
así como versiones múltiples del mismo paquete que estén instaladas, y que hace un ebuild en particular.
</p>

<p>
Llamando a <c>qpkg</c> sin argumentos, imprime una lista de todos los
ebuilds, con asteriscos (*) al lado de los paquetes que están instalados en el sistema.
</p>

<note>Por defecto, <c>qpkg</c> imprime la salida en color. Para
inhabilitar esto, utiliza el parámetro <c>--no-color</c> o <c>-nc</c>
en la línea de comando.
</note>
</body>
</section>

<section>
<title>Preguntar Datos del Paquete</title>
<body>
<p>
Uno de los usos más comunes de <c>qpkg</c> es determinar que paquete
es dado. Por ejemplo, mientras le echo un vistazo a
<path>net-misc</path>, vi un paquete llamado <path>neon</path>. Sin
tener idea de qué era, ejecuté qpkg.
</p>

<pre> 
hebron root # <i>qpkg -i net-misc/neon
net-misc/neon-0.15.3-r1
       HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.18.5
       HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.19.2
       HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.19.2-r1
       HTTP and WebDAV client library [ http://www.webdav.org/neon ]
net-misc/neon-0.21.1
       HTTP and WebDAV client library [ http://www.webdav.org/neon ] </i>
</pre>

<p>
<c>qpkg</c> leyó a través de los archivos ebuild para los cinco
ebuilds de <path>net-misc/neon</path> e imprimió la información
asignadas a DESCRIPTION y HOMEPAGE.
</p>
</body>
</section>

<section>
<title>Listar archivos pertenecientes a un Ebuild</title>
<body>
<p>
<c>qpkg</c> puede también listar los archivos que pertenecen a un
ebuild instalado. Sé que gentoolkit instaló varias herramientas, pero
no sé cuáles son todas ellas. Para descubrirlas, puedo hacer un <c>qpkg -l</c>.
</p>

<pre> 
hebron portage # <i>qpkg -l app-portage/gentoolkit
app-portage/gentoolkit-0.1.14-r1 *
CONTENTS:
/usr
/usr/share
/usr/share/gentoolkit
/usr/share/gentoolkit/histogram.awk
/usr/share/doc
/usr/share/doc/gentoolkit-0.1.14-r1
/usr/share/doc/gentoolkit-0.1.14-r1/gentool
/usr/share/doc/gentoolkit-0.1.14-r1/gentool/ChangeLog.gz
/usr/share/doc/gentoolkit-0.1.14-r1/lintool
/usr/share/doc/gentoolkit-0.1.14-r1/lintool/checklist-for-ebuilds.gz
/usr/share/doc/gentoolkit-0.1.14-r1/lintool/ChangeLog.gz
/usr/share/doc/gentoolkit-0.1.14-r1/etc-update
/usr/share/doc/gentoolkit-0.1.14-r1/etc-update/ChangeLog.gz
/usr/share/man
/usr/share/man/man1
/usr/share/man/man1/qpkg.1.gz
/usr/share/man/man1/lintool.1.gz
/usr/share/man/man1/etc-update.1.gz
/usr/bin
/usr/bin/gentool-bump-revision
/usr/bin/gentool-total-coverage
/usr/bin/gentool-author-coverage
/usr/bin/gentool-package-count
/usr/bin/qpkg
/usr/bin/pkg-size
/usr/bin/lintool
/usr/sbin
/usr/sbin/pkg-clean
/usr/sbin/mkebuild
/usr/sbin/emerge-webrsync
/usr/sbin/epm
/usr/sbin/etc-update
/etc
/etc/etc-update.conf </i>
</pre>
</body>
</section>

<section>
<title>Encontrar el paquete de donde vino un archivo</title>
<body>

<p>
Para encontrar el paquete de donde vino un archivo, utiliza el
parámetro <c>-f</c> o <c>--find-file</c>.
</p>

<pre>
hebron portage # <i>qpkg -f	net-www/mozilla * </i>
</pre>
</body>
</section>

<section>
<title>Listar paquetes duplicados</title>
<body>
<p>
A veces, pueden existir múltiples versiones de un mismo
paquete. <c>qpkg --dup</c> imprimirá una lista de paquetes
duplicados. La existencia de un paquete duplicado puede no indicar,
sin embargo, que la versión más vieja pueda ser borrada. Pueden llenar
diferentes SLOTs. Para buscar duplicados en el mismo SLOT, utiliza
<c>qpkg --dups --slot</c>. Acabo de actualizar KDE desde 3.0 a 3.0.2,
así que tengo algunos duplicados en el mismo SLOT.
</p>

<pre> 
hebron portage # <i>qpkg --dups --slot 
app-portage/gentoolkit
kde-base/kdeaddons
kde-base/kdeadmin
kde-base/kdeartwork
kde-base/kdebase
kde-base/kdegames
kde-base/kdelibs
kde-base/kdemultimedia
kde-base/kdenetwork
kde-base/kdetoys
kde-base/kdeutils
media-libs/freetype
x11-libs/qt </i>
</pre>
</body>
</section>

<section>
<title>Verificar la Integridad de un Paquete</title>
<body>
<p>
A veces es útil comprobar la integridad de un paquete para saber que
los archivos no han sido reemplazados desde que fueron
instalados. <c>qpkg</c> puede verificar sumas md5 asi como el tiempo
de instalacion para indicar si alguno de los archivos han sido corrompidos, reemplazados o borrados.
</p>

<p>
Para chequear los mtime y  las sumas md5, utiliza el parámetro
<c>-c</c>.
</p>

<pre>
hebron portage # <i>qpkg gnupg -c -v    
app-crypt/gnupg-1.0.6 *
/usr/lib/gnupg/rndunix !md5! !mtime!
/usr/lib/gnupg/rndegd !md5! !mtime!
/usr/lib/gnupg/tiger !md5! !mtime!
/usr/bin/gpg !md5! !mtime!
/usr/bin/gpgv !md5! !mtime!
/usr/share/gnupg/options.skel !md5! !mtime!
/usr/share/gnupg/FAQ !md5! !mtime!
/usr/share/gnupg/faq.html !md5! !mtime!
/usr/share/locale/da/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/de/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/eo/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/et/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/fr/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/id/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/it/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/ja/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/nl/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/pl/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/pt_BR/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/sv/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/locale/tr/LC_MESSAGES/gnupg.mo !md5! !mtime!
/usr/share/info/gpgv.info.gz !md5! !mtime!
/usr/share/man/man1/gpg.1.gz !md5! !mtime!
/usr/share/man/man1/gpgv.1.gz !md5! !mtime!
24/92

app-crypt/gnupg-1.0.7 *
0/101 </i>
</pre>

<p>
Como puedes ver, tengo más de una versión de GnuPG
instalada. <c>qpkg</c> informa que muchos de los archivos de la
versión más vieja han cambiado desde que la instalé. Esos paquetes
fueron modificados probablemente cuando actualicé de
<path>gnupg-1.0.6</path> a <path>gnupg-1.0.7</path>. Observa que las
dos últimas líneas indican que 0 de 101 archivos de
<path>gnupg-1.0.7</path> han cambiado desde que lo instalé. Eso es
bueno. Si cualesquiera de ellos hubieran sido cambiados, estaría preocupado.
</p>
</body>
</section>

<section>
<title>Pero espera ... hay más</title>
<body>

<p>
<c>qpkg</c> puede ser usado para otras tareas de preguntas que no
explicaré aquí. Hay un manpage muy completo para
<c>qpkg</c>. Consúltalo para más información.
</p>
</body>
</section>
</chapter>

<chapter>
<title>lintool</title>
<section>
<title>Introducción</title>
<body>
<p>
<c>lintool</c> es un programa que comprueba los ebuilds para ajustar
los estándares y requisitos. Es importante para los desarrolladores de
ebuilds usar <c>lintool</c> para asegurarse de que están haciendo las
cosas correctamente y no necesitan al core team para hacer más de lo
que ya han hecho para incluir el ebuild en el repositorio de Gentoo.
</p>
</body>
</section>

<section>
<title>Uso</title>
<body>
<p>
Ejecutando <c>lintool</c> producirá una bonita lista formateada de
chequeos y resultados que realiza.
</p>

<pre> 
hebron portage # <i>lintool app-crypt/gnupg/gnupg-1.0.7.ebuild 
app-crypt/gnupg/gnupg-1.0.7.ebuild                                     : Not OK

-------------------------------------------------------------------------------
 Summary for all 1 ebuild(s) checked                             # errors/warns
 -------------------------------------------------------------------------------
 Testing for illegal space characters, weird backslash formatting  : 0 / 0
 Testing for malformed headers                                     : 0 / 1
 Testing for occurence of deprecated try                           : 0 / 0
 Testing for superfluous A=${P}.tar.gz                             : 0 / 0
 Testing for empty DEPEND                                          : 0 / 0
 Testing for empty HOMEPAGE                                        : 0 / 0
 Testing for empty DESCRIPTION                                     : 0 / 0
 Testing for presence of env vars                                  : 1 / 1
 Testing for sane USE flag usage                                   : 0 / 0

 Total number of ebuilds with errors                               : 1 (100%)
 Total number of ebuilds with warnings                             : 1 (100%)
</i></pre>

<p>
La primera línea resume si el ebuild está bien o no. En el caso de
<c>gnupg-1.0.7.ebuild</c>, no lo está. Leyendo a través de la lista de
chequeos, podemos ver que obtuvo una advertecia por cabeceras
malformadas y un error por presencia de variables de entorno.
</p>

<p>
Mirando el ebuild, veo que le faltan un par de variables de entorno
requeridos (LICENCE y RDEPEND). Agregando eso, el error se
arregla. Pero todavía hay dos advertencias -- una por cabeceras
malformadas y otra por variables de entorno. Para ayudarme a
encontrarlos, puedo ejecutar <c>lintool</c> otra vez con <c>--show-details</c>.
</p>

<pre> 
hebron gnupg # <i>lintool --show-details ./gnupg-1.0.7.ebuild 
                                
-------------------------------------------------------------------------------
# Some data cut for brevity....

 Status for ./gnupg-1.0.7.ebuild
* Testing for malformed headers                                         : passed
- (W) Has illegal or suspect headers:
 |Suspect copyright year: # Copyright 1999-2000 Gentoo Technologies, Inc.
 * Testing for occurence of deprecated try                               : passed
 * Testing for superfluous A=${P}.tar.gz                                 : passed
 * Testing for empty DEPEND                                              : passed
 * Testing for empty HOMEPAGE                                            : passed
 * Testing for empty DESCRIPTION                                         : passed
 * Testing for presence of env vars                                      : passed
 - (W) Missing SLOT=
 * Testing for sane USE flag usage                                       : passed

 -------------------------------------------------------------------------------
  Summary for all 1 ebuild(s) checked                             # errors/warns
  -------------------------------------------------------------------------------
  Testing for illegal space characters, weird backslash formatting  : 0 / 0
  Testing for malformed headers                                     : 0 / 1
  Testing for occurence of deprecated try                           : 0 / 0
  Testing for superfluous A=${P}.tar.gz                             : 0 / 0
  Testing for empty DEPEND                                          : 0 / 0
  Testing for empty HOMEPAGE                                        : 0 / 0
  Testing for empty DESCRIPTION                                     : 0 / 0
  Testing for presence of env vars                                  : 0 / 1
  Testing for sane USE flag usage                                   : 0 / 0

  Total number of ebuilds with errors                               : 0 (0%)
  Total number of ebuilds with warnings                             : 1 (100%)
</i></pre>

<p>
Ahora puedo ver que probablemente el año en el ebuild está mal, y que está
fallando la variable SLOT. Arreglando eso eliminas todas las
advertencias.
</p>
</body>
</section>
</chapter>

<chapter>
<title>epm</title>
<section>
<title>Introducción</title>
<body>

<p>
<c>epm</c> es una herramienta de administración de paquetes que clona
los comandos rpm de Red Hat. Ya que ahora esta parado, no ofrece todas
las características de rpm, pero si ofrece algunas de las opciones de
pregunta más potentes de rpm.
</p>

<p>
También maneja la eliminación de paquetes, que no se cubre aquí. Usa
<c>epm -help</c> para aprender más acerca de la eliminación de paquetes con <c>epm</c>.
</p>
</body>
</section>

<section>
<title>Preguntar Paquetes con epm</title>
<body>

<p>
<c>epm</c> funciona, esencialmente, con las mismas funciones de línea
de comando que el rpm de Red Hat. <c>epm -qa</c> lista todos los
paquetes instalados. <c>epm -ql</c> lista todos los archivos de un
determinado ebuild.
</p>

<pre> 
hebron etc # <i>epm -ql ethereal
/usr/lib/ethereal/plugins/0.8.20/gryphon.so
/usr/lib/ethereal/plugins/0.8.20/gryphon.la
/usr/lib/ethereal/plugins/0.8.20/gryphon.a
/usr/lib/ethereal/plugins/0.8.20/mgcp.so
/usr/lib/ethereal/plugins/0.8.20/mgcp.la
/usr/lib/ethereal/plugins/0.8.20/mgcp.a
/usr/lib/ethereal/plugins/0.8.20/cosnaming.so
/usr/lib/ethereal/plugins/0.8.20/cosnaming.la
/usr/lib/ethereal/plugins/0.8.20/cosnaming.a
/usr/lib/ethereal/plugins/0.8.20/coseventcomm.so
/usr/lib/ethereal/plugins/0.8.20/coseventcomm.la
/usr/lib/ethereal/plugins/0.8.20/coseventcomm.a
/usr/bin/ethereal
/usr/bin/editcap
/usr/bin/mergecap
/usr/bin/tethereal
/usr/bin/text2pcap
/usr/bin/idl2eth
/usr/share/man/man1/idl2eth.1.gz
/usr/share/man/man1/tethereal.1.gz
/usr/share/man/man1/text2pcap.1.gz
/usr/share/man/man1/editcap.1.gz
/usr/share/man/man1/ethereal.1.gz
/usr/share/man/man1/mergecap.1.gz
/usr/share/doc/ethereal-0.8.20/AUTHORS.gz
/usr/share/doc/ethereal-0.8.20/COPYING.gz
/usr/share/doc/ethereal-0.8.20/NEWS.gz
/usr/share/doc/ethereal-0.8.20/ChangeLog.gz
/usr/share/doc/ethereal-0.8.20/README.gz
/usr/share/doc/ethereal-0.8.20/INSTALL.configure.gz
/usr/share/doc/ethereal-0.8.20/TODO.gz
/usr/share/doc/ethereal-0.8.20/README.aix.gz
/usr/share/doc/ethereal-0.8.20/README.bsd.gz
/usr/share/doc/ethereal-0.8.20/README.hpux.gz
/usr/share/doc/ethereal-0.8.20/README.irix.gz
/usr/share/doc/ethereal-0.8.20/README.linux.gz
/usr/share/doc/ethereal-0.8.20/README.tru64.gz
/usr/share/doc/ethereal-0.8.20/README.win32.gz
/usr/share/doc/ethereal-0.8.20/README.vmware.gz
/etc/ethereal/manuf </i>
</pre>

<p>
<c>epm</c> ofrece algunas opciones de pregunta avanzada que no están
presentes en <c>qpkg</c> en el momento de escribir esto. Por ejemplo,
puede preguntar solo por los archivos de configuración o por los
archivos de documentación.
</p>

<pre>
hebron etc # <i>epm -qc ethereal
/etc/ethereal/manuf

hebron etc # epm -qd ethereal
/usr/share/man/man1/idl2eth.1.gz
/usr/share/man/man1/tethereal.1.gz
/usr/share/man/man1/text2pcap.1.gz
/usr/share/man/man1/editcap.1.gz
/usr/share/man/man1/ethereal.1.gz
/usr/share/man/man1/mergecap.1.gz
/usr/share/doc/ethereal-0.8.20/AUTHORS.gz
/usr/share/doc/ethereal-0.8.20/COPYING.gz
/usr/share/doc/ethereal-0.8.20/NEWS.gz
/usr/share/doc/ethereal-0.8.20/ChangeLog.gz
/usr/share/doc/ethereal-0.8.20/README.gz
/usr/share/doc/ethereal-0.8.20/INSTALL.configure.gz
/usr/share/doc/ethereal-0.8.20/TODO.gz
/usr/share/doc/ethereal-0.8.20/README.aix.gz
/usr/share/doc/ethereal-0.8.20/README.bsd.gz
/usr/share/doc/ethereal-0.8.20/README.hpux.gz
/usr/share/doc/ethereal-0.8.20/README.irix.gz
/usr/share/doc/ethereal-0.8.20/README.linux.gz
/usr/share/doc/ethereal-0.8.20/README.tru64.gz
/usr/share/doc/ethereal-0.8.20/README.win32.gz
/usr/share/doc/ethereal-0.8.20/README.vmware.gz
</i></pre>

<note>
<c>epm --help</c> lista las opciones que epm <e>soportará con el
tiempo</e>. Observa, sin embargo, que las opciones prefijadas con
asteriscos (*) todavía no están implementadas.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Otros</title>
<section>
<title>etc-update</title>
<body>
<!-- 
- Siéntete libre de añadir más a esto. Probáblemente merezca su propio
capítulo, pero - no lo uso, así que realmente no puedo escribir
sobre él. 
-->

<p>
<c>etc-update</c> proporciona una alternativa cómoda a actualizar los
archivos de configuración a mano. Después de ejecutar un emerge que
cambia archivos de configuración, puedes ejecutar etc-update para
andar a través del proceso de actualización de todos los archivos de
configuración implicados.
</p>

<p>
Es conducida por un interfaz de menú e incluye la capacidad de ver y
unir en archivos de configuración antes de decidir qué hacer.
</p>
</body>
</section>

<section>
<title>gentool</title>
<body>
<p>gentool es un nombre colectivo para varios scrips pequeños que
analizan las estadísticas de un ebuild. Por ejemplo,
gentool-total-coverage imprime una lista de direcciones email y el
número de ebuilds que cada uno tiene en el árbol portage.
</p>
</body>
</section>

<section>
<title>pkg-size</title>
<body>
<p><c>pkg-size</c> imprime el tamaño de los archivos instalados de un
paquete dado.
</p>

<pre>
hebron portage # <i>pkg-size nmap   
net-analyzer/nmap-2.54_beta24-r1 897024 (876KB) </i>
</pre>
</body>
</section>

<section>
<title>mkebuild</title>
<body>
<p>
<c>mkebuild</c> simplifica el proceso de crear un nuevo ebuild
automatizando tanto del proceso como sea posible. Ejecutando
<c>mkebuild [archivo]</c> creará un ebuild para ese archivo. El
archivo debe ser de una cierta clase. A medida que trabaja,
proporcionará la regeneración de los cambios que tu puedas crear.
</p>
</body>
</section>

<section>
<title>emerge-webrsync</title>
<body>

<!-- No encuentro información de esto en ningún sitio ... ni siquiera un comentario en el
código. -->

<p>Descarga la captura de imagen diaria sobre HTTP con wget, y
(opcionalmente) sincroniza con portage.
</p>
</body>
</section>
</chapter>
</guide>
