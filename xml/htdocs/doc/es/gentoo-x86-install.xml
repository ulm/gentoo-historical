<?xml version='1.0' encoding='iso8859-1'?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/es/gentoo-x86-install.xml">
<title>Instrucciones de Instalación de Gentoo Linux 1.2</title>
<author title="Chief Architect"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title="Author">Chris Houser</author>
<author title="Author"><mail link="jerry@gentoo.org">Jerry Alexandratos</mail></author>
<author title="Ghost"><mail link="g2boojum@gentoo.org">Grant Goodyear</mail></author>
<author title="Traductor"><mail link="bass@gentoo.org">José Alberto Suárez López</mail></author>

<abstract>Estas instrucciones son una guía a través del proceso de
instalación de Gentoo Linux 1.2. El proceso de instalación de Gentoo
Linux soporta varios métodos, dependiendo cuanta parte del del sistema
quiere que sea desde "scratch" (desde cero, manual).</abstract>

<version>1.51</version>
<date>10 June 2002</date>

<chapter>
<title>Acerca de la instalación</title>
<section>
<body>

<p>Este nuevo CD de arranque debería iniciarse desde cualquier unidad
IDE CD-ROM moderna, así como la mayoría de las unidades CD-ROM SCSI.
En el CD-ROM esta incluido soporte IDE para Linux (como parte del
kernel) así como soporte para dispositivos SCSI (disponibles como
módulos). Además, proporcionamos módulos para literalmente cualquier
tipo de tarjeta de red que Linux soporta, así como herramientas para
configurar la red y establecer conexiones <c>ssh</c> y descargar
arhivos.</p>

<p>Para instalar desde el CD, es necesario un procesador 486o mayor y
al menos 64 Megabytes de RAM. (Gentoo linux ha sido instalado con
éxito con 64MB de RAM + 64MB espacio swap, pero el proceso de creación
es horriblemente lento bajo estas condicines). Para comenzar el
proceso de instalación, primero necesita una de nuestras imagenes de
CD ISO de: <uri>http://www.ibiblio.org/gentoo/releases/build/</uri>.
Ahora mismo, tenemos dos CDs disponibles. El primero es <uri link="http://www.ibiblio.org/gentoo/releases/build/1.2/gentoo-ix86-1.2.iso">gentoo-ix86-1.2.iso</uri>;
Ésta imágen ISO es muy pequeña (16Mb) y contiene mínima imágen
"chrootable" (enjaulable, que se puede usar con chroot)
(<path>stage1-ix86-1.2.tbz2</path>) -- todo lo que necesitas para
construir un sistema Gentoo Linux system al estilo scratch (las
fuentes serán auto-descaragadas desde Internet cuando se necesiten).
Nuestro segundo CD es <uri link="http://www.ibiblio.org/gentoo/releases/build/1.2/gentoo-i686-1.2.iso">gentoo-i686-1.2.iso</uri>;
Esta imágen ISO es algo mayor (100+Mb) -- contiene lo mismo que la
imágen ISO de 16Mb, <e>además de</e> un sistema base pre-construido
para i686 (<path>stage3-i686-1.2.tbz2</path>) y un semi-contruido
sistema base para i686 (<path>stage2-i686-1.2.tbz2</path>) en un
"tarball" (archivo comprimido). Estos dos tarballs necesitan un
Pentium Pro o un procesador mayor (K6 no sirve). Si tienes un sistema
i686+, estos archivos pueden ser realmente útiles para acelerar el
proceso de instalación si no quieres construir todo a lo "scratch".</p>

<p>Ahora, vamos a dar un vistazo rápido al proceso de instalación.
Crearemos particiones, crearemos nuestros sistemas de archivos, y
extraeremos indistintamente el "tarball" stage1, stage2 o stage3.
Si usamos el "tarball" stage1 o stage2, daremos los pasos apropiados
para tener nuestro sistema en el stage3. Una vez nuestro sistema esta
en el stage3, podemos configurarlos (editando los archivos de
configuración, instalando un sistema de arranque, etc) entonces lo
iniciaremos y tendremos un sistema Gentoo Linux completamente
funcional. Esto es lo que necesitas para la instalación dependiendo
desde que fase (stage) del proceso de creación empiezes:</p>

<table>
<tr><th>traball stage</th><th>requerimientos para instalación</th></tr>
<tr><ti>1</ti><ti>partición/creación del sistema de archivos, emerge
rsync, bootstrap, emerge system, emerge linux sources, configuración final</ti></tr>
<tr><ti>2</ti><ti>partición/creación del sistema de archivos, emerge
rsync, emerge system, emerge linux sources, configuración final</ti></tr>
<tr><ti>3</ti><ti>partición/creación del sistema de archivos, emerge
rsync (opcional), configuración final</ti></tr>
</table>

</body>
</section>
</chapter>
<chapter>
<title>Arranquando</title>
<section>
<body>

<p>Una vez hayas elegido que CD quieres usar, adelante, inícialo.
Serás recibido con un párrafo de texto y un prompt (línea de comando)
<c>boot:</c> en el fondo de la pantalla. En este "prompt", pulsa
Intro, y Linux comenzará a cargarse desde el CD.</p> 

<p>Despues, serás recibido con una pequeña lista de comandos
disponibles en el CD de inicio, incluso <c>nano</c> (un editor basado
en pico) e instrucciones para configurar la red. Entonces, podrás
seleccionar el mapa de teclado adecuado (keymap), seguido de la
autodetección PCI. Éste proceso cargará automáticamente los módulos
apropiados del kernel para los dispositivos PCI, SCSI y tarjetas de
red más comúnes. Despues de esto, puedes pulsar Intro para entrer en
rl sistema Linux mínimo del CD de arranque. Deberías tener u nprompt
de root ("<c>#</c>") consola actual, incluso puedes abrir nuevas
consolas pulsando "alt-f2", "alt-f3", etc y pulsando Intro para
activarlas.</p>

</body>
</section>
</chapter>

<chapter>
<title>Cargando módulos del kernel</title>
<section>
<body>

<p>Estamos casi listos para comenzar la instalación de Gentoo Linux,
pero primero necesitamos dar los pasos necesarios para que el kernel
reconozca nuestra tarjeta de red, y opcionalmente nuestro hardware
SCSI, esto esta en el sistema por si la autodetección falla. Para ver
una lista de los modulos disponibles para tarjetas de red escribe: <c>ls
/lib/modules/*/kernel/drivers/net/*</c>. Para cargar un módulo en
concreto, escribe:</p>

<pre>
# <i>modprobe pcnet32</i>
	<comment>(sustituye pcnet32 con el modulo de tu tarjeta de red)</comment>
</pre>

<p>Ahora, si quieres tener acceso a algún hardware SCSI que no fue
detectado durante la autodetección PCI, necesitas cargar los modulos
adecuados de /lib/modules, de nuevo usando <c>modprobe</c>:</p>

<pre>
# <i>modprobe aic7xxx</i>
# <i>modprobe sr_mod</i>
# <i>modprobe sd_mod</i>
</pre>

<p>Arriba, hicimos modprobe con el driver SCSI <c>aic7xxx</c> y nos
aseguramos de que el soporte para CD-ROM SCSI (<c>sr_mod</c>) y para
disco (<c>sd_mod</c>) sean cargados.</p> 
<note><c>hdparm</c> es incluido ahora en -r10 o versiones posteriores
de la iso. Si alguno de tus discos necesita ajuste, ahora puede ser un
buen momento para hacerlo.</note>
</body>
</section>
</chapter>
<chapter>
<title>Cargando módulos PCMCIA</title>
<section>
<body>
<p>Si tienes una tarjeta de red PCMCIA, necesitas hacer un par de
cosas más.</p>
<pre>
# <i>insmod pcmcia_core</i>
# <i>insmod i82365</i>
# <i>insmod ds</i>
# <i>cardmgr -f</i>
</pre>
<p>cuando <c>cardmgr</c> detecte el hardware que esta instalado, tu
altavoz debe emitir algunos "beeps", y tu tarjeta de red PCMCIA
despertará a la vida. Por supuesto puedes introducir la tarjeta PCMCIA
despues de cargar <c>cardmgr</c>, si lo prefieres. (Técnicamente, no
necesitas ejecutar <i>cardmgr</i> si sabes exactamente que módulo
necesita tu tarjeta PCMCIA. Pero si no lo sabes, carga todos lso
módulos PCMCIA y observa cuales no funcionan. <i>Cardmgr</i> debe
tambiéndescargar los módulos de cualquier tarjeta que desconectes).
</p>
</body>
</section>
</chapter>
<chapter>
<title>Configurando la Instalación por Red</title>
<section>
<body>

<p>Los nuevos Cds de inicio -r11+ te permiten configurar una red,
permitiendote esto usar <c>ssh</c>, <c>scp</c> o <c>wget</c>
que será necesario despues para el proceso de instalación. Incluso si
no necesitas usar nada de esto ahora, debes configurar la red. Una vez
configurada, Portage podrá usar la red cuando estes dentro del chroot
(requerido para la instalación de Gentoo Linux).</p>
</body>
</section>

<section>
<title>DHCP</title>
<body>
<p>
La configuración de la red es simple con DHCP; Si tu ISP no usa
DHCP, saltate esta parte hasta más abajo, hasta la sección de
configuración estática (ip fija).  
</p>
<pre caption="Configuración de la Red con DHCP">
# <i>dhcpcd eth0</i> 
</pre>
<note>
Algunos ISPs requieren que se les proporcione un nombre. Para hacerlo,
añade el parámetro <c>-h nombre</c> a el comando dhcpcd.
</note>
<p>Si ves algún aviso del <i>dhcpConfig</i>, no te alarmes; los
errores son la mayoría estéticos. Ahora puedes saltar hacia el testeo
de la red.</p>
</body>
</section>
<section>
<title>Configuraciòn Estática (ip fija)</title>
<body>
<p>
Necesitamos configurar solo lo suficiente para poder descargar las
fuentes para construir el sistema. Escribe el siguiente comando,
reemplazando "$IFACE" con tu interfaz de red (normalmente
<c>eth0</c>), "$IPNUM" con tu dirección ip, "$BCAST" con tu dirección
croadcast, y "$NMASK" con tu máscara de red. Para el comando
<c>route</c> reemplaza "$GTWAY" con tu gateway (pasarela).
</p>
<pre>
# <i>/sbin/ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</i>
# <i>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1</i>
</pre>
<p>Ahora, es el momento de crear <path>/etc/resolv.conf</path>
 archivo para configurar la resolución de nombres (DNS)(búscando
 sitios Web/FTP por el nombre, no solo por la dirección IP).</p>

<note>Por el momento el único editor instalado por defecto es
<c>nano</c>, un pequeño y muy sencillo de usar editor visual. Usa
<c>nano</c> con el parámetro <c>-w</c> para desactivar la partición de
líneas largas (line-wraping).
</note>

<p>He aquí una plantilla a seguir para crear tu archivo
<path>/etc/resolv.conf</path> :
</p>
<pre caption="plantilla /etc/resolv.conf">
domain midominio.com
nameserver 10.0.0.1
nameserver 10.0.0.2
</pre>
<p>Reemplaza <c>10.0.0.1</c> y <c>10.0.0.2</c> con las direcciónes IP
de tus DNS primario y secundario respectivamente.</p>
</body>
</section>
<section>
<title>Comprobando la Red</title>
<body>
<p>Ahora que tu red ha sido configurada, el comando <c>/sbin/ifconfig
-a</c> te debería mostrar (¡esperemos!) que tu tarjeta de red esta
funcionando (observa <e>UP</e> y <e>RUNNING</e> en la salida).
</p>
<pre caption="/sbin/ifconfig de una tarjeta de red funcionando">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
</pre>
<!--
<note>
If you have a static ppp link, you can !!! do this...!!!
</note>
-->
</body>
</section>
<section>
<title>¡La Red funciona!</title>
<body>
<p>La red ahora debe de estar configurada y funcionando. Ahora
deberías poder usar lso comandos 
<c>ssh</c>, <c>scp</c> y <c>wget</c> para conectarte a otras máquinas
en tu LAN o en Internet.</p>
</body>
</section>
</chapter>
<chapter>
<title>Configurando Particiones</title>
<section>
<body>

<p>Ahora que el kernel puede ver nuestra tarjeta red y controladores
de disco, es la hora de configurar las particiones para Gentoo Linux.</p>

<p>He aquí una vista rápida de la forma común de las particiones en Gentoo Linux.
Vamos a crear al menos tres particiones: una partición swap, una raíz
(para llevar a cabo la construcción de Gentoo Linux), una partición
especial boot.
La partición boot es diseñada para usar el gestor de arranque "GRUB".
La partición boot nos proporciona un lugar seguro para almacenar todo
lo relacionado con el arranque de Linux. Para el uso diario de Gentoo Linux,
la partición boot debe permanecer <e>desmontada</e>. Esto previene que
el kernel pueda corromperse, o que GRUB se vuelva inusable (a causa de
corrupciones del sistema de archivo) en el suceso de un cuelge del
sistema, previniendo el problema del huevo y la gallina donde GRUB no
puede leer tu kernel (porque tu sistema de archivos no sea estable)
pero no puedes restaurarlo (¡porque no puedes iniciar!)</p>

<p>Ahora, los tipos de sistemas de fichero. Actualmente, tienes cuatro
opciones:
XFS, ext2, ext3 (journaling) y ReiserFS. Ext2 es el más que probado
y autentico sistema de ficheros de Linux pero no tiene "metadata
journaling". Ext3 es la nueva versión de ext2 con "metadata journaling" y
"ordered data writes", efectivamente proporciona "data journaling".
ReiserFS es un sistema de ficheros basado en B*-tree que promete un
gran rendimiento para archivos pequeños, y xiertamente supera a ext2 y
a ext3 manejando archivos pequeños (archivos de menos de 4k), a menudo
incluso en 10x o 15x. Sin embargo, nosotros <e>not</e> recomendamos
ReiserFS en este momento, debido a las repetidas corrupciones del
sistema de archivos con los kernels de la serie 2.4.x. ReiserFS tiene
"metadata journaling", pero no "data journaling". XFS es un sistema de
archivos den rendimiento y empresarial con "metadata journaling" y
está completamente soportado en Gentoo Linux.
</p><p>
Si estás buscando el sistema de archivos más estandard, usa ext2. Si
estas buscando el sistema de archivos con el "journaling" más basto,
usa ext3. Si estas buscando un sistema de archivos de gran rendimiento
con "journaling", usa XFS; tanto ext3 como XFS están maduros y
refinados. Todos los sistemas de archivos exepto ReiserFS están listo
para su uso en producción.
Aquí estan nuestras recomendaciones básicas de los tipos y tamaños de
los sistemas de archivos:</p>

  <table>
  <tr>
  	<th>Partición</th>
	<th>Tamaño</th>
	<th>Tipo</th>
  	<th>dispositivo de ejemplo</th>
  </tr>
  <tr>
  	<ti>partición boot, conteniendo kernel(s) e información de arranque</ti>
	<ti>100 Megabytes</ti>
	<ti>ext2/3 altamente recomendado; si usas ReiserFS montalo con <c>-o notail</c></ti>
  	<ti>/dev/hda1</ti>
  </tr>
   <tr>
  	<ti>partición swap (no mayor de 128 Megabyte)</ti>
	<ti>&gt;=2*cantidad de RAM en el sistema es lo recomendado
	pero no necesario (al menos para kernel 2.4.10)</ti>
	<ti>Linux swap</ti>
  	<ti>/dev/hda2</ti>
  </tr>
  <tr>
  	<ti>partición raíz, contiene el sistema de ficheros principal (/usr, /home, etc)</ti>
	<ti>&gt;=1.5 Gigabytes</ti>
	<ti>XFS, ext3 recomendados; ext2 no está mal</ti>
  	<ti>/dev/hda3</ti>
  </tr>
 </table>

<note>En este punto, crea tu partición usando fdisk. Date cuenta que
tus particiones deben ser del tipo 0x82 si es swap y 0x83 para
sistemas de archivos normales (léase XFS, ReiserFS <e>o</e> ext2).
</note>

<p>Una vez hayas creado tus particiones usando <c>fdisk</c>, es la
hora de inicializar el sistema de archivos que vamos a usar para
guardar nuestros datos. Inicializa la swap así:</p>
<pre>
# <i>mkswap /dev/hda2</i>
</pre>
<p>Puedes usar el comando <c>mke2fs</c> para crear el sistema de
archivos ext2:</p>
<pre>
# <i>mke2fs /dev/hda1</i>
</pre>
<p>Para crear un sistema de archivos XFS, usa el comando <c>mkfs.xfs</c>:</p>
<pre>
# <i>mkfs.xfs /dev/hda3</i>
</pre>
<note>
Puedes quere añadir un par the parametros adicionales a el comando <c>mkfs.xfs</c>: <c>-d agcount=3 -l size=32m</c>. 
El comando <c>-d agcount=3</c> bajará el número de grupos asignados.
XFS insistirá en usar al menos 1 grupo asignado por cada 4 GB de tu
partición partition, entonces, por ejemplo, si tienes un aparticion de
20 GB deberás tener como mínimo 5. el comando <c>-l size=32m</c>
aumenta el tamaño del "journal" hasta 32 Mb, aumentando su rendimiento.
</note>
<warn>
Si estas instalando una partición XFS sobre una partición ReiserFS, al
intentar montarlo más tarde puede fallar si no usas <c>mount -t
xfs</c>. la Solución es llenar de ceros la partición partition antes
de crear el sistema de archivos XFS:
<c>dd if=/dev/zero of=/dev/hd<comment>x</comment> bs=1k</c>. 
</warn>
<p>Si quieres usar ext3, puedes crearlo usando <c>mke2fs -j</c>:</p>
<pre>
# <i>mke2fs -j /dev/hda3</i>
</pre>
<p>Para crear un sistema de archivos ReiserFS, usa el comando <c>mkreiserfs</c>:</p>
<pre>
# <i>mkreiserfs /dev/hda3</i>
</pre>

<warn>De nuevo, no recomandemos ReiserFS en estos momentos. ReiserFS
le ha funcionado bien a muchos, la corrupción del sistema de archivos
es un problema demasiado común en ReiserFS y los kernels de la serie 2.4.x.</warn>

<note>Puedes encontrar mas información acerca del uso de ext3 bajo
Linux 2.4 en <uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>.</note>
</body>
</section>
</chapter>
<chapter>
<title>Montar Particiones</title>
<section>
<body>
<p>
Ahora, vamos a activar nuestra nueva swap, puesto que podemos
necesitar la memoria virtual q proporciona más tarde:
</p>
<pre>
# <i>swapon /dev/hda2</i>
</pre>
<p>Despues, crearemos los puntos de montaje<path>/mnt/gentoo</path> y <path>/mnt/gentoo/boot</path>,
y we'll mount our filesystems to these mountpoints. 
</p>
<pre>
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>
<p>Si estas configurando Gentoo Linux con una partición para
<path>/usr</path> o para <path>/var</path>, deben ser montadas en
<path>/mnt/gentoo/usr</path> y <path>/mnt/gentoo/var</path>,
respectivamente,
</p>
   <impo>Si tu partición <e>boot</e> (la que contiene el kernel) es
   ReiserFS, asegurate de montarla con la opción <c>-o notail</c>.
   Asegurate de que <c>notail</c> se encuentra en la sección de la
   partición boot de el <path>/etc/fstab</path>.
   Lo haremos todo en un momentito.</impo>
</body>
</section>
</chapter>

<chapter>
<title>Montando el CD-ROM</title>
<section>
<body>
<p>Incluso cuando hemos iniciado desde el CD-ROM, el propio CD-ROM no
está montado bajo nuestro mínimo sistema Linux del CD. Necesitamos
montarlo para poder acceder a la imágen comprimida que contiene. Para
montar el CD-ROM, basta con:
</p>
<pre>
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom -o ro -t iso9660</i>
</pre>
<p>Con el CD-ROM montado, deberías poder ver el archivo
<c>stage???.tbz2</c> escribiendo <c>ls /mnt/cdrom</c>.</p>
</body>
</section>
</chapter>

<chapter>
    <title>Descomprime el "stage" que quieres usar</title>
<section>
<body>

<p>Ahora es el momento de extraer el "tarball" que has elegido en
<path>/mnt/gentoo</path>. Entonces, nosotros haremos un <c>chroot</c>
sobre la nueva imagen de instalación de Gentoo Linux. 
</p>

<impo>Asegurate de usar la opción <c>p</c> con <c>tar</c>. Olvidar
hacerlo puede ocasionar que ciertos archivos tengan permisos
incorrectos.</impo>

<impo>Si estas usando el método de instalación "from scratch, build
everything" (crealo todo desde cero), es que quieres usar la imágen <path>stage1-ix86-1.2.tbz2</path>.
Si estás usando uno de nuestros CDs más grandes, tienes que escoger la
imágen del "stage2" y la del "stage3". Estas imágenes te permitirán
ahorrar tiempo a costa de la flexibilidad (hemos escogido
optimizaciones para el gcc y variables USE por defecto por ti). La
imágen del "stage3" incluye unas fuentes linux completas y un árbol de
Portage, eliminando al necesidad de hacer un <c>emerge rsync</c> más
tarde.
</impo>

<pre>
# <i>cd /mnt/gentoo</i>
# <i>tar -xvjpf /mnt/cdrom/stage?-*.tbz2</i>
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

<pre>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
# 
</pre>

<p>Una vez hayas ejecutado estos comandos, estarás "dentro" de tu
nuevo sistema Gentoo Linux.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rsync</title>
<section>
<body>
<p>Ahora, necesitas ejecutar <c>emerge rsync</c>. Si estás usando el
stage 3 de Gentoo Linux 1.1+, <c>emerge rsync</c> es opcional ya que
incluye un árbol de Portage, aún así si quieres tenerlo actualizado,
es muy recomendable. <c>emerge rsync</c> le pedirá a <c>emerge</c> que
se conecte a rsync.gentoo.org y se descarge la última versión del
árbol de ports de Portage ports:</p>

<pre>
# <i>emerge rsync</i>
</pre>
<p>El árbol de Portage se descargará; son aproximadamente unos 10mb.</p>
<impo>La dirección del servidor rsync es actualmente rsync://rsync.gentoo.org/gentoo-portage.
  Si tienes problemas accediendo al rsync de Gentoo, asegurate de que
  estás usando esta dirección comprobándolo en la variable SYNC de tu /etc/make.conf.
</impo>
<note>El comando rsync puede ser configurado para usar un proxy HTTP
proxy por si estas trás un cortafuegos (firewall). Para configurar
esto pon <i>RSYNC_PROXY="hostname:port"</i> en <i>/etc/make.conf</i> o
también puedes hacerlo como una variable del sistema.
</note>

</body>
</section>
</chapter>
<chapter>
<title>Pasando del stage1 al stage2</title>
<section>
<body>

<impo>Si estas usando el stage2 o el stage3, entonces ya tienes el
"bootstrap" hecho por nosotros. No tienes ninguna razón para que lo
hagas de nuevo, al menos que decidas hacer un <c>emerge rsync</c> y
te quieras asegurar de que tienes un sistema Gentoo Linux "actualizado al minuto"
(up-to-the-minute). La mayoría de la gente que usa el stage2 o el
stage3 <i>no</i> querrá hacer el "bootstrap" de nuevo, ya que puede
tardar más de una hora incluso en equipos muy rápidos.</impo>

<p>Ahora que tienes una copia funcional del árbol de Portage, aquellos
que esten usando el stage1 para instalar necesitan hacer el
"bootstrap" del sistema Gentoo Linux tal que así. Primero
edita el archivo <path>/etc/make.conf</path>. En este archivo, debes
configurar tus variables  <c>USE</c>, donde se especifican
funcionalidades opcionales que te gustaría contruir junto con los
paquetes; generalmente, el USE por defecto (USE <e>vacio</e> o sin
configurar) bastará. También tienes que configurar el <c>CHOST</c>
, <c>CFLAGS</c> y el <c>CXXFLAGS</c> apropiados para el sistema que
estás creando (en el propio archivo encontrarás ejemplos comentados).
Si es necesario, también puedes configurar aquí la información del proxy
si estas trás un cortafuegos.</p>

<pre>
# <i>nano -w /etc/make.conf</i> <comment>(Ajusta estás configuraciones)</comment>
</pre>
<note>
Aquellos que necesiten "truquear" substancialmente el proceso de
compilación deben hechar un vistazo a el archivo
<path>/etc/make.globals</path>. Este archivo abarca comportamientos
internos de Gentoo y nunca debe editarse. Si las configuraciones por
defecto no son suficientes, los nuevos valores deben ponerse en
<path>/etc/make.conf</path>, ya que las entradas en <path>make.conf</path>
<comment>sobreescriben</comment> a las entrades en
<path>make.globals</path>. Si estas interesado en trastear con las
variables "USE", mira en <path>/etc/make.profile/make.defaults</path>.
Para desactivar cualquier variable "USE", tan solo usa
<c>USE="-foo"</c> (donde foo es la variable) en /etc/make.conf.
</note>
<p>Ahora, es el momento de comenzar con el proceso de "bootstrap".
Esto llevará de 1 a 2 horas dependiendo de la potencia de tu máquina;
aproximadamente tarda una hora en mi AMD Athlon 900Mhz. Mientras
tanto, la imágen extraida se preparará para compilar el resto del
sistema. El conjunto del compilador GNU será construido, así como la
librería C GNU. Este es el grueso de la instalación y la parte que más
tiempo tomarás:</p>
<pre>
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>
<p>El proceso de "bootstrap" empezará ahora.</p>
<note>
Portage por defecto usa <c>/var/tmp</c> durante la contrucción de los
paquetes, a menudo usa algunos cientos de megabytes de almacenamiento
temporal. Si quieres cambiar donde guarda los archivos temporales
Portage, define PORTAGE_TMPDIR <e>antes</e> de comenzar el proceso de
bootstrap, tal que así:
</note>
<pre>
# <i>export PORTAGE_TMPDIR="/otrodir/tmp"</i>
</pre>
<p>
<c>bootstrap.sh</c> construirá <c>binutils</c>, <c>gcc</c>, <c>gettext</c>,
y <c>glibc</c>, reconstruirá <c>binutils</c>, <c>gcc</c>, y <c>gettext</c>
trás <c>glibc</c>. No necesito decir, que este proceso se lleva un rato.
Hechate una buena siesta. Una vez que el proceso se complete, tu
sistema estará en el "stage2".
</p>
</body>
</section>
</chapter>
<chapter>
<title>Progresando de "stage2" a "stage3"</title>
<section>
<body>

<p>Una vez terminado el "bootstrap" y estás en el "stage2" (denuevo,
si estás usando la imágen del "stage3" estos pasos no son necesarios)
Es lahora de construir o instalar el resto del sistema base como sigue:</p>

<pre>
# <i>export CONFIG_PROTECT=""</i>
# <i>emerge --pretend system</i>
	<comment>[lista de los paquetes que serán instalados]</comment>
# <i>emerge system</i>
</pre>

<note>La línea <c>export CONFIG_PROTECT=""</c> es para asegurar que
ningún archivo nuevo instalado en <path>/etc</path> sobreescriba a los
viejos (guardados en <path>sys-apps/baselayout</path>), saltandose el
soporte de Portage para los nuevos archivos de configuración. Escribe
<c>emerge --help config</c> para más detalles.</note>

<p>Se tomará un rato terminar de crear el sistema base entero. La
recompensa será que estará altamente optimizado para tu sistema. Lo
malo es que tendrás q buscar algo para mantenerte ocupado algún
tiempo. El autor sugiere "Star Wars - Super Bombad Racing" para la
PS2. Cuando <c>emerge system</c> se complete, tendrás un sistema
Gentoo Linux en su "stage3".</p>

</body>
</section>
</chapter>
<chapter>
<title>El último paso: la zona horaria</title>
<section>
<body>

<p>En este punto, debes tener un sistema en "stage3" que está listo
para la configuración final. Comenzaremos este proceso para conla zona
horaria. Configurando la zonahoraria antes de construir el kernel nos
asegura que los usuarios tendrán un <c>uname -a</c> razonable.</p>
<p>Búsca tu zona horaria (o GMT si estás usando el Greenwich Mean
Time) en <path>/usr/share/zoneinfo</path>. Ahora, haz un enlace
simolico escribiendo:
</p><pre>
# <i>ln -sf /usr/share/zoneinfo/path/to/timezonefile /etc/localtime</i>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Pasos finales: logeador del kernel y del sistema</title>
<section>
<body>
<p>
Si estás instalando desde la imágen Gentoo Linux 1.1+ stage3, hemos
hecho lo oportuno y hemos incluido una fuentes Linux recientes en <path>/usr/src/linux</path>.
De otra manera, necesitarás "emerger" el "ebuild" de las fuentes de
Linux. Estos son los que ofrecemos actualmente:</p>
<table>
<tr><th>ebuild</th><th>descripción</th></tr>
<tr><ti><path>gentoo-sources</path></ti><ti>Nuestro propio eficiente y
funcionalmente mejorado basado en el kernel -ac (Alan Cox) (no incluye
soporte XFS)</ti></tr>
<tr><ti><path>xfs-sources</path></ti><ti>Un kernel con el soporte XFS
del CVs de SGI; este es el kernel adecuado si estas usando el sistema
de archivos XFS</ti></tr>
<tr><ti><path>openmosix-sources</path></ti><ti>Un kernel Linux
parcheado con el soporte para la tecnología de blanceo de carga y
clustering GPL de <uri
link="http://www.openmosix.com">openMosix</uri></ti></tr>
<tr><ti><path>usermode-sources</path></ti><ti>Un kernel Linux kernel
parcheado con soporte para el Linux "User-Mode" ("Linux dentro de Linux")</ti></tr>
<tr><ti><path>vanilla-sources</path></ti><ti>El kernel Linux original,
solo como si lo hubieras descargado de kernel.org</ti></tr>
</table>

<p>Elige uno y entonces emerge así:</p>

<pre>
# <i>emerge sys-kernel/gentoo-sources</i>
</pre>

<p>Una vez que tengas un árbol de las fuentes del kernel Linux kernel
disponibles, es el momento de compilar tu propio kernel:
</p>
<pre>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
# <i>make dep &amp;&amp; make clean bzImage modules modules_install</i>
# <i>mv /boot/bzImage /boot/bzImage.orig</i> <comment>[si bzImage ya
# existe]</comment>
# <i>cp /usr/src/linux/arch/i386/boot/bzImage /boot</i>
</pre>
<warn>Para que tu kernel funcione apropiadamente, debes tener algunas
opciones en cuenta que necesitas, asegurate de que el kernel esta
apropiadamente  -- esto es, debe <i>estar incluido y no compilado como
modulos</i>. Necesitarás habilitar la opción <i>"Code maturity
level options --> Prompt for development y/o incomplete code/drivers"</i>
para poder ver algunas de estas opciones.
Bajo la sección "File systems", asegurate de habilitar <i>"Device File
System"</i> (ten en cuenta que <e>no</e> necesitas habilitar la opción
"/dev/pts file system support"). También necesitas habilitar
<i>"Virtual Memory Filesystem"</i>. Asegurate de habilitar "ReiserFS"
si tienes alguna partición ReiserFS; y lo mismo con "Ext3". Si estás
usando XFS, habilita la opción "SGI XFS filesystem support". Incluso
es buena idéa dejer habilitado "ext2" tanto si lo usas como no. La
mayoría de la gente, que use discos duros IDE querrá habilitar la
opción "USE DMA by default"; de otra manera, tus dispositivos IDE
tendrán un rendimiento muy pocre. Por supuesto, recuerda habilitar el
soporte "IDE disk" -- de otra manera tu kernel no será capaz de ver tu
discos IDE.
</warn>
<note>
Para aquellos que lo prefieran, 
es posible instalar Gentoo Linux con un kernel 2.2.
Pero la estabilidad tiene un precio: 
perderás muchas de las buenas características que son nuevas en la
serie 2.4 del kernels (como son lso sistemas de archivos XFS y tmpfs,
iptables, y más), aunque las fuentes 2.2 del kernel pueden ser
parcheadas con soporte Reiserfs y devfs.  
Los scripts de arranque de Gentoo linux requieren soporte tmpfs o
ramdisk en el kernel, pero los usuarios del kernel 2.2 tienen que
asegurarse de que el soporte ramdisk es compilado en el kernel y no
como módulo.
Esto es <comment>vital</comment>, la variable <e>gentoo=notmpfs</e>
debe ser añadida a la línea kernel <path>/boot/grub/menu.lst</path>
para los kernels 2.2 para que un ramdisk sea montado para los scripts
de arranque en lugar de tmpfs. Si eliges no usar devfs, entonces debes
usar <e>gentoo=notmpfs,nodevfs</e> en su lugar.
</note>

<p>
Tu nuevo kernel (y sus módulos) están ahora instalados. Ahora
necesitas elegir el logeador del sistema que quieres instalar.
Ofrecemos "sysklogd", que es el usado comúnmente como demonio para
logear. También tenemos "syslog-ng" y metalog. Los usuarios avanzados
preferirán "gravitar" fuera de sysklogd (no tiene muy buen
rendimiento) y avanzar hacia syslog-ng y metalog. Si tienes dudas,
puedes probar metalog, ya que es bastante popular.
Para emerger el logeador que elijas, escribe <e>una</e> de las tres
siguientes líneas:
</p>

<pre>
# <i>emerge sys-apps/sysklogd</i>
# <i>rc-update add sysklogd default</i>
<comment>o</comment>
# <i>emerge app-admin/syslog-ng</i>
# <i>rc-update add syslog-ng default</i>
<comment>o</comment>
# <i>emerge app-admin/metalog</i>
# <i>rc-update add metalog default</i>
</pre>
<warn>
En el caso de elegir syslog-ng necesitas crear 
<path>/etc/syslog-ng/syslog-ng.conf</path>.
Mira <path>/etc/syslog-ng</path> si quieres un archivo de
configuraciónde ejemplo.
</warn>
<impo>
Metalog suelta la salida al disco en bloques, por lo que los mensajes
no son imediatamente grabados en los logs del sistema. Si estas
tratando de depurar un demonio, esta característica mejorada no es muy
útil. Cuando tu sistema Gentoo Linux este levantado y corriendo,
puedes enviar a metalog una señal USR1 para desactivar temporalmente
el buffer de los mensajes (osea que <i>tail -f
<path>/var/log/everything/current</path></i> funcionará en tiempo real
como, se espera), y una señal USR2 para activarlo de nuevo. 
</impo>
<p>Ahora, opcionalmente puedes elegir el paquete cron que prefieras
usar. Ahora mismo, ofrecemos dcron, fcron y vcron.
Si no tienes muy claro cual elegir, seguramente vcron te irá bien. Se
instalan así:</p>
<pre>
# <i>emerge sys-apps/dcron</i>
# <i>crontab /etc/crontab</i>
<comment>o</comment>
# <i>emerge sys-apps/fcron</i>
# <i>crontab /etc/crontab</i>
<comment>o</comment>
# <i>emerge sys-apps/vcron</i>
</pre>
<p>Si quieres más información de como funciona cron bajo Gentoo Linux,
mira <uri
link="http://lists.gentoo.org/pipermail/gentoo-announce/2002-April/000151.html">este
anuncio</uri>.</p>
</body>
</section>
</chapter>
<chapter>
<title>Pasos finales: instalar paquetes adicionales</title>
<section>
<body>
<p>
Puede que necesites instalar algún paquete adicional del árbol de
Portage si estás usando aracterísticas adicionales como XFS o LVM. Si
estás usando XFS, debes emerger el ebuild <c>xfsprogs</c>:
</p>
<pre>
# <i>emerge sys-apps/xfsprogs</i>
</pre>
<p>
Si estás usando LVM, debes emerger el ebuild <c>lvm-user</c>:
</p>
<pre>
# <i>emerge --usepkg sys-apps/lvm-user</i>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Pasos Finales: /etc/fstab</title>
<section>
<body>
<p>Tu sistema Gentoo Linux está casi listo para usarse. Todo lo que
necesitamos hacer ahora es configurar unos cuantos archivos
importantes del sistema e instalar el cargador de arranque GRUB. 
El primer archivo que necesitas configurar es <path>/etc/fstab</path>.
Recuerda que debes usar la opción <c>notail</c> para tus particiones
en las que has querido usar ReiserFS. Recuerda especificar el tipo de
sistema de archvio apropiado <c>ext2</c>, <c>ext3</c> o <c>reiserfs</c>.</p>
<p>Usa algo como el <path>/etc/fstab</path> listado a continuación,
pero asegurate de reemplazar "BOOT", "ROOT" y "SWAP" con los
dispositivos que estes usando actualmente (así como <c>hda1</c>, etc.)</p>
<pre>
<comment>
# /etc/fstab: static file system information.
#
# noatime turns of atimes for increased performance (atimes normally aren't
# needed; notail increases performance of ReiserFS (at the expense of storage
# efficiency).  It's safe to drop the noatime options if you want y to 
# switch between notail y tail freely.

# &lt;fs&gt;           &lt;mountpoint&gt;   &lt;type&gt;   &lt;opts&gt;          &lt;dump/pass&gt;

# NOTE: If your BOOT partition is ReiserFS, add the notail option to opts.
</comment>
/dev/BOOT           /boot       ext2	 noauto,noatime	 1 2
/dev/ROOT           /           ext3	 noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro       0 0
proc                /proc       proc	 defaults        0 0
</pre>

</body>
</section>
<section>
<title>Pasos finales: pon la contraseña de root</title>
<body>
<p>Antes de que lo olvides, configura al contraseña de root
escribiendo:</p>
<pre>
# <i>passwd</i>
</pre>
</body>
</section>
<section>
<title>Pasos Finales: /etc/hostname</title>
<body>
<p>Edita este archivo ya que contiene tu nombre de dominio
completamente cualificado (fully-qualified) en nua línea simple, por
ej. <c>mymachine.mydomain.com</c>.
</p>
</body>
</section>

<section>
<title>Pasos Finales: /etc/hosts</title>
<body>
<p>Este archivo contiene una lista de sirecciones ip y sus nombres
asociados. Lo usa el sistema para resolver direcciones IP de cualquier
sistema que puede no estar en tus servidores de nombre. Aquí tienes
una plantilla para este archivo:</p>
<pre>
127.0.0.1      localhost
<comment># la siguiente línea contiene tu IP para tu LAN, y el nombre
de máquina asociado</comment>
192.168.1.1    mimaquinae.midominio.com	mimaquina
</pre>
</body>
</section>

<section>
<title>Configuración Final de la Red</title>
<body>
<p>
Añade el nombre de cualquier módulo que sea necesario para el correcto
funcionamiento de tu sistema en el archivo
<path>/etc/modules.autoload</path> (también puedes añadir cualquier
opción que necesite en la misma línea). Cuando Gentoo Linux arranque,
se cargarán automáticamente. El módulo de tu tarjeta de red tiene una
particular importancia, si es que se te ha ocurrido compilarlo como
módulo:
</p>
<pre caption="/etc/modules.autoload">
3c59x
</pre>
<p>Edita el script <path>/etc/conf.d/net</path> para tener la red
configurada en cuanto arranques:
</p>
<pre>
# <i>nano -w /etc/conf.d/net</i>
# <i>rc-update add net.eth0 default</i>
</pre>
<p>
Si estás usando más de una  tarjeta de red puedes crear un script <path>net.eth<comment>x</comment></path>
para cada una de ellas (<comment>x</comment> = 1, 2, ...):
</p>
<pre caption="Multiple network interfaces">
# <i>cd /etc/init.d</i>
# <i>cp net.eth0 net.eth<comment>x</comment></i>
# <i>rc-update add net.eth<comment>x</comment> default</i>
</pre>
<p>
Si tienes una tarjeta PCMCIA instalada, da un vistazo rápido a 
/etc/init.d/pcmcia para verificar que esta todo correcto para tu
configuración, entonces añada
<pre>
depend() {
	need pcmcia
}
</pre>
arriba del archivo <path>/etc/init.d/net.eth<comment>x</comment></path>,
para que el driver pcmcia sea cargado automáticamente cuando la red se
carge.
</p>
</body>
</section>

<section>
<title>Pasos Fianles: configurando cosas básicas (inclusive la
configuración del mapa de teclado)</title>
<body>
<pre caption="basic configuration">
# <i>nano -w /etc/rc.conf</i>
</pre>
<p>
Sigue las instrucciones en el archivo para configurar los parámetros
básicos.  
Todos los usuarios tienen que asegurarse de que <c>CLOCK</c> está bien
definido. Los usuarios de teclados internacionales querrán configurar
la variable <c>KEYMAP</c> (mira las posibilidades en <path>/usr/share/keymaps</path>).
</p>
</body>
</section>

<section>
<title>Paso Final: configura GRUB</title>
<body>
<p>
Lo más "crítica" a la hora de entender el funcionamiento de GRUB es
sentirse cómodo con la forma en la que GRUB se refiere a los discos
duros y particiones.
La partción Linux <path>/dev/hda1</path> es llamada en GRUB
<path>(hd0,0)</path>. Fijate en los parentesis que encierran el hd0,0
- son necesarias.  
Los discos duros se cuentan desde cero en lugar de desde "a", y las
particiones empiezan desde cero en lugar de desde 1. Por lo que,
<path>/dev/hdb3</path> se traduce a <path>(hd1,2)</path>, y
<path>/dev/hdd7</path> a <path>(hd3,6)</path>. Una vez entiendas esto,
convierte tus particiones boot y root al formato de GRUB y escribelas
debajo. Ahora, es el momento de instalar GRUB.
</p>

<p>La forma más sencilla de instalar GRUB es simplemente escribir
<c>grub</c> en tu shell del chroot:
</p><pre>
# <i>grub</i>
</pre><p>Serás recibido cone <c>grub&gt;</c> la línea de comando de
GRUB. Ahora, tienes que escribir los comandos adecuados para instalar
GRUB como el gestor de arranque en tu discoduro. En mi ejemplo de
configuración, yo quiero instalar el gestor de arranque GRUB boot
record on my hard drive's MBR (master boot record), con esto lo
primero que veré al encender el ordenador será GRUB. En mi caso, los
comandos que quiero escribir son:</p>
<pre>grub&gt; <i>root (hd0,0)</i>
grub&gt; <i>setup (hd0)</i>
grub&gt; <i>quit</i>
</pre>

<p>Esto es lo que hacen estos dos comandos. El primer comando <c>root
( )</c> le dice a GRUB donde esta tu partición de arranque (en nuestro
ejemplo, <path>/dev/hda1</path> o <path>(hd0,0)</path> en la
terminología de GRUB. Entonces, el segundo comando <c>setup ( )</c> le
dice a GRUB donde instalar el "boot record" - se configurará para
buscar sus archivos de configuración en la localización <c>root (
)</c> que especifiques. En mi caso, quiero el "boot record" en el MBR
del discoduro, por lo que simplemente especifico <path>/dev/hda</path>
(también conocido como <path>(hd0)</path>). Si estuviera usando otro
cargador de arranque y quisiera configurar GRUB como el cargador de
arranque secundario, podría instalar GRUB al "boot record" de
cualquier otra partición. En este caso, especificaría una partición en
concreto en lugar del disco duro entero. Una vez que GRUB ha sido
instalado con éxito, puedes escribir <c>quit</c> para salir de GRUB.
Gentoo Linux está instalada (enhorabuena:), pero aún necesitamos crear
el archivo <path>/boot/grub/menu.lst</path> para que tengamos un
bonito menú de inicio del GRUB cuando el sistema se reinicie. Aquí
está como hacerlo.</p>

<p>Ahora, crea el archivo menu.lst (<c>nano -w
/boot/grub/menu.lst</c>), y añadale esto:</p>
<pre>
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=My example Gentoo Linux
root (hd0,0) 
kernel /boot/bzImage root=/dev/hda3 

<comment># Lo siguiento solo lo necesitan aquellos con doble arranque
(dos SO's)</comment>
title=Windows NT Workstation
root (hd0,5) 
chainloader +1
</pre>
<note>
La extensión del archivo <path>menu.lst</path> debe ser "lst" o
"list", pero no "1st" ni  "first". También, recuerda que (hd0,0) debe
escribirse sin espacios dentro del parentesis.
</note>
<p>Una vez salvado este archivo, la instalación de Gentoo Linux está
completa (enhorabuena otra vez:). Seleccionar la primera opción
debería decirle a GRUB que inicie Gentoo Linux sin una sola queja. La
seguna parte del archivo <path>menu.lst</path> es opcional, y muestra
como usar GRUB para arranquar una partición Windows.</p>

<note>Recuerda, <path>(hd0,0)</path> debe apuntar a tu partición
"boot" (<path>/dev/hda1</path> en nuestro ejemplo de configuración) y
<path>/dev/hda3</path> debe apuntar a la raíz de tu sistema de
archivos. <path>(hd0,5)</path> contiene el arranque del NT.</note> 
<p>Además, si necesitas pasar alguna opción al kernel, simplemente
añadelas al final del comando <c>kernel</c>. Nosotros estamos pasando
una opción (<c>root=/dev/hda3</c>), pero puedes pasar la que quieras.
En particular, puedes desactivar devfs por defecto (no recomendado al
menos que sepas lo que estas haciendo) añadiendo la opción
<c>gentoo=nodevfs</c> a el comando <c>kernel</c>.

<note>Al contrario que en versiones anteriores de Gentoo Linux, no
tienes que añadir el comando <c>devfs=mount</c> al final de la línea
kernel <c>kernel</c> para habilitar devfs. En rc6
devfs esta habilitado por defecto.
</note>
</p>

</body>
</section>
</chapter>
<chapter>
<title>¡La instalación está completa!</title>
<section>
<body>
<p>Ahora, Gentoo Linux está instalado. El único paso que queda es
salir de la shell del chroot, demonta con seguridad tus particiones y
reiniic ael sistema:</p>
<pre>
# <i>exit</i> 
<codenote>Esto te saca del la shell del chroot; también puedes
escribir <c>^D</c></codenote>
# <i>cd / </i>
# <i>umount /mnt/gentoo/boot</i>
# <i>umount /mnt/gentoo/proc</i>
# <i>umount /mnt/gentoo</i>
# <i>reboot</i>
</pre>
<note>
Trás reiniciar, es una buena idéa ejecutar el comando
<c>update-modules</c> para crear el archivo
<path>/etc/modules.conf</path>. En lugar de modificar este archivo
directamente, debes hacer los cambios en el archivo <path>/etc/modules.d</path>.
</note>
<p>Si tienes cualquier pregunta o te quieres ver involucrado en el
desarrollo de Gentoo Linux, considera subscribirte en nuestras listas
de correo gentoo-user y gentoo-dev (tienes la forma de hacerlo en
nuestra <uri link="http://www.gentoo.org">página prinicpal</uri>).
También tenemos una práctica <uri link="/doc/desktop-es.html">Guía de
configuración para el escritorio</uri> que te ayudará a continuar
configurando tu nuevo sistema Gentoo Linux, y una útil <uri
link="/doc/portage-user-es.html">Guia del usuario de Portage</uri>
para ayudarte a familiarizarte con el Portage. ¡Disfruta y bienvenido
aGentoo Linux!</p>
</body>
</section>
</chapter>
</guide>
