<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/gentoo-sparc-netboot-howto.xml,v 1.1 2005/11/07 11:53:43 chiguire Exp $ -->

<guide link="/doc/es/gentoo-sparc-netboot-howto.xml" lang="es">

<title>¿Cómo arrancar a través de la red con Gentoo Linux</title>

<author title="SPARC Developer">
  <mail link="weeve@gentoo.org">Jason Wever</mail>
</author>
<author title="Traductor">
  <mail link="chiguire@gentoo.org">John Christian Stoddart</mail>
</author>

<abstract>
Esta es una guía para configurar un servidor para arrancar a través de
la red (de ahora en adelante referido, más sucintamente como netboot)
usando las imágenes netboot de instalación Gentoo Sparc.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.2</version>
<date>2005-08-18</date>

<chapter>
<title>Introducción</title>
<section>
<body>

<note>
Esta guía ¿cómo? es centrada en hardware Sparc y asumiendo que va a
establecer el servidor netboot en una máquina Gentoo Linux.
</note>

<p>
Este documento describirá cómo configurar un ambiente netboot para una
computadora basada en Sun Microsystems Sparc o UltraSparc. El
documento asume que tiene una computadora Gentoo Linux disponible para
funcionar como servidor netboot.
</p>

<p>
El servidor netboot y el cliente netboot deberán estar ambos en la
misma subred ya que el protocolo ARP típicamente no se reenvía a otras
subredes.
</p>

<p>
Una apreciación esquemática de lo que pasa durante el proceso netboot
es el siguiente:
</p>

<ol>
  <li>
    Máquina cliente envía una solicitud ARP a la inversa (RARP) para
    una dirección IP</li>
  <li>Un servidor devuelve una respuesta al cliente con la dirección
  IP</li>
  <li>
    El cliente luego intenta descargar una imagen de arranque del
    servidor RARP, usando el protocolo tftp</li>
  <li>Una vez descargada la imagen, el cliente netboot arranca usando
  esta imagen</li>
</ol>

<p>
Basado en este esquema, hará falta instalar software para un demonio
ARP inverso y un demonio tftp.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Instalación y Configuración del Software</title>
<section>
<title>El demonio ARP Inverso</title>
<body>

<p>
Actualmente, existen dos opciones para un demonio ARP inverso. Son 
net-misc/iputils (es instalado como parte del perfil system) y
net-misc/rarpd.
</p>

<note>
La instalación de net-misc/rarpd sobreescribirá las páginas man rarp y
rarpd de net-misc/iputils.
</note>

<p>
<b>Configurando elementos comunes de rarpd</b>: <path>/etc/ethers</path>
</p>

<p>
Sin importar cuál rarpd escogió usar, debemos configurar el archivo 
<path>/etc/ethers</path>. Este archivo indica a cuáles máquinas
responder cuando se detecta una petición y con cuál dirección
responder.
</p>

<p>
El formato de <path>/etc/ethers</path> es la dirección MAC del
interfaz con la cual arranca y su nombre. El espacio en blanco
delimita la dirección MAC del nombre del anfitrión y cada entrada se
hace en su propia línea. El siguiente ejemplo es para un anfitrión
llamado sparc-netboot.gentoo.org:
</p>

<pre caption="Ejemplo de /etc/ethers">
08:00:20:77:1f:3e  sparc-netboot.gentoo.org
</pre>

<note>
Si algun número hexadecimal de la dirección MAC comienza en o es 0,
puede escoger omitir el primer 0 (por ejemplo 08:00:20:77:1f:3e se
convertiría en 8:0:20:77:1f:3e).
</note>

<p>
Si desea agregar anfitriones adicionales a <path>/etc/ethers</path>,
no hace falta reiniciar el servicio rarpd ya que este archivo es
revisado cada vez que se recibe una solicitud.
</p>

<p>
<b>Resolviendo nombres de anfitriones</b>: <path>/etc/hosts</path>
</p>

<p>
Ya que cada entrada de <path>/etc/ethers</path> tiene un nombre de
anfitrión, el servidor netboot debe poder resolver la dirección IP con
respecto al nombre. Esto puede hacerse de dos maneras,
<path>/etc/hosts</path> o por medio del servidor dns que use el
servidor netboot.
</p>

<p>
Una entrada en el archivo <path>/etc/hosts</path> para resolver el
nombre de un anfitrión se verá similar al que existe desde el momento
que se instaló Gentoo en el servidor netboot. Para nuestro anfitrión
ejemplo, sparc-netboot.gentoo.org, asumiremos que tiene la dirección
IP 10.0.1.15. De manera que la entrada correspondiente en el archivo
<path>/etc/hosts</path> sería: 
</p>

<pre caption="/etc/hosts">
10.0.1.15  sparc-netboot.gentoo.org
</pre>


<note>
Dependiendo del ambiente, hará falta consultar al administrador de la
red para obtener una dirección o direcciones IP apropiadas con las
cuales arrancar a los anfitriones.
</note>

<p>
Si usa un servidor dns, entonces hará falta que el administrador del
servidor DNS agregue un registro para el anfitrión, en nuestro ejemplo
el sparc-netboot.gentoo.org que apunte a la dirección IP
apropiada. Por favor consulte con el administrador del servidor DNS
y/o la documentación del software del servidor DNS acerca de cómo
agregar este registro.
</p>

<note>
Si <path>/etc/hosts</path> y el servidor DNS tienen entradas para el
anfitrión a ser arrancado a través de la red, el archivo
<path>/etc/hosts</path> será usado primero (en caso que el órden
especificado en el archivo <path>/etc/nsswitch.conf</path> no haya
sido alterado).
</note>

<p>
<b>Configurando el rarpd de net-misc/iputils</b>
</p>

<p>
Primero tendremos que averiguar cuáles opciones usar para el
rarpd. Como hay más opciones de las cubiertas en esta guía, éstas
servirán para iniciar. Como actualmente no existe un guión init.d
para el rarpd del paquete net-misc/iputils, deberá hacerse una entrada
al archivo <path>/etc/conf.d/local.start</path> si necesita que el
servicio rarpd sea iniciado al arrancar la máquina. A continuación un
ejemplo:
</p>

<pre caption="/etc/conf.d/local.start">
/usr/sbin/rarpd -v -e eth0
</pre>

<p>
Una explicación de las opciones usadas anteriormente con rarpd
(tomadas de la página man):
</p>

<ul>
  <li>-v opción informativa</li>
  <li>
    -e no revise la existencia de una imágen de arranque, responda
    solamente si la dirección MAC resuelve a una dirección IP válida
    usando los datos en /etc/ethers o DNS
  </li>
  <li>eth0 representa el interfaz usado por rarpd</li>
</ul>

<p>
Para más opciones, consulte la sección 8 de la página man de rarpd.
</p>

<p>
<b>Configurando net-misc/rarpd</b>
</p>

<p>
Primero, debemos instalar rarpd con el siguiente comando:
</p>

<pre caption="Instalando rarpd">
# <i>emerge net-misc/rarpd</i>
</pre>

<p>
A continuación debemos configurar las opciones para rarpd en el
archivo <path>/etc/conf.d/rarpd</path>. Para una configuración igual a
la usada arriba para el rarpd de net-misc/iputils, modifique el
archivo <path>/etc/conf.d/rarpd</path> como se muestra a continuación:
</p>

<pre caption="/etc/conf.d/rarpd">
RARPD_OPTS="-v -i eth0"
</pre>

<p>
Una explicación de las opciones utilizadas (tomadas de la página man):
</p>

<ul>
  <li>
    <c>-v</c> opción informativa. Muestre las solicitudas a las cuales
    está respondiendo el demonio
  </li>
  <li>
    <c>-i</c> utiliza el interfaz nombrado. Por defecto, rarpd use el
    interfaz por defecto el interfaz tipo para el sistema local, si
    este está disponible
  </li>
</ul>

<p>
Para más opciones, consulte la página man, sección 8 acerca de rarpd y
rarpd --help.
</p>
</body>
</section>

<section>
<title>El demonio tftpd</title>
<body>

<p>
Existen tres opciones para un demonio tftp, net-misc/atftp,
net-misc/netkit-tftp y net-misc/tftp-hpa. Sólo necesita instalar uno
de ellos para poder operar correctamente.
</p>

<p>
<b>Configurando elementos comunes del tftpd</b>
</p>

<p>
Cada demonio tftp necesita un directorio desde donde servir archivos a
sus clientes tftp. El directorio que usaremos para esta guía será
<path>/tftpboot</path>. Este aparecerá como el directorio raíz
(<path>/</path>) cuando se reciban solicitudes. Adicionalmente,
configuraremos el sistema para ejecutar el demonio tftp como usuario y
grupo nobody.
</p>

<p>
Si el directorio que ha escogido no existe actualmente, habrá que
crearlo con el comando mkdir. El comando para el ejemplo
<path>/tftpboot</path> es:
</p>

<pre caption="Creando el directorio /tftpboot">
# <i>/bin/mkdir /tftpboot</i>
</pre>

<p>
Entonces necesitaremos cambiar el dueño de <path>/tftpboot</path> al
usuario nobody y el grupo nobody:
</p>

<pre caption="Cambiando la propiedad">
# <i>chown nobody:nobody /tftpboot</i>
</pre>
</body>
</section>

<section>
<title>El demonio atftp</title>
<body>

<p>
Primero instalamos el paquete net-misc/atftp así:
</p>

<pre caption="Instalando atftp">
# <i>emerge net-misc/atftp</i>
</pre>

<p>
Luego de haber instalado el paquete net-misc/atftp habrá que
configurarlo. Si se desea proveer servicio tftpd al arrancar, debe
agregarse una entrada al <path>/etc/conf.d/local.start</path> porque
atftp no tiene guión init.d, inetd o xinetd propio. Si quiere hacer
uso de inetd o xinetd para controlar el servicio tftpd, por favor vea
las páginas man respectivas.
</p>

<p>
A continuación un ejemplo de una entrada para atftpd en
<path>/etc/conf.d/local.start</path>:
</p>

<pre caption="/etc/conf.d/local.start">
/usr/sbin/in.tftpd -v --daemon /tftpboot
</pre>

<p>
La explicación de las opciones rarpd (tomadas de la página man) es:
</p>

<ul>
  <li>
    <c>-v</c> Aumentar o establecer el nivel de gestión de
    registro. Usado sin argumentos, aumenta el nivel actual de
    registro. El valor por defecto es LOG_NOTICE, vea syslog(3) para
    una descripción de este nivel. La gama actual va desde 0
    (LOG_EMERG) a 7 (LOG_DEBUG)
  </li>
  <li>
    <c>--daemon</c> Ejecutar como demonio. No use esta opción si
    atftpd es iniciado por inetd.
  </li>
</ul>

<p>
Para más opciones, consulte la sección 8 de la página man de atftpd.
</p>
</body>
</section>

<section>
<title>El demonio netkit-tftp</title>
<body>

<p>
Primero instalaremos el paquete net-misc/netkit-tftp así:
</p>

<pre caption="Instalando netkit-tftp">
# <i>emerge net-misc/netkit-tftp</i>
</pre>

<p>
Luego, instalaremos sys-apps/xinetd si no está actualmente
presente. Después de haber instalado los paquetes net-misc/netkit-tftp
y sys-apps/xinetd packages, debemos configurar
netkit-tftp. netkit-tftp necesita ser ejecutado desde xinetd, aunque
no provee su propio guión como ejemplo. Un ejemplo de guión para
xinetd se enseña a continuación:
</p>

<pre caption="Archivo ejemplo /etc/xinetd.d/tftp">
service tftp
{
    protocol        = udp
    port            = 69
    socket_type     = dgram
    wait            = yes
    user            = nobody
    group           = nobody
    server          = /usr/sbin/in.tftpd
    server_args     = /tftpboot
    only_from       = 10.0.1.0
    disable         = no
}
</pre>

<note>
Este archivo ejemplo de configuración para xinetd usa la línea "disable = no",
que activa el servicio por defecto. Esto es lo opuesto a la manera como los
demás paquetes de Gentoo proveen sus guiones de configuración para
xinetd, que traen el disable igual a yes.
</note>

<p>
Una explicación de las opciones anteriores que pueden ser cambiadas:

user        las peticiones a in.tftpd son manejadas como este usuario
group       las peticiones a in.tftpd son manejadas como este grupo
server_args directorio raíz desde donde el demonio tftp sirve los archivos
only_from   indica a xinetd los anfitriones permitidos para conexiones tftp
</p>

<p>
Información adicional acerca de los archivos de configuración de
xinetd puede ser encontrada en la sección 5 de las páginas man de
xinetd.conf.
</p>

<p>
Si xinetd está corriendo, se le puede enviar una señal HUP para que
relea sus archivos de configuración:
</p>

<pre caption="Enviando una señal HUP a xinetd">
# <i>/bin/killall -HUP xinetd</i>
</pre>

<p>
Si xinetd no está corriendo, inícielo con el comando init.d:
</p>

<pre caption="Iniciando xinetd">
# <i>/etc/init.d/xinetd start</i>
</pre>

<p>
Para más información, consulte la sección 8 de la página man de in.tftpd.
</p>
</body>
</section>

<section>
<title>El demonio tftp-hpa</title>
<body>

<p>
Primero instalte el paquete tftp-hpa usando el siguiente comando:
</p>

<pre caption="Instalando tftp-hpa">
# <i>emerge net-misc/tftp-hpa</i>
</pre>

<p>
tftp-hpa incluye un guión init.d y su consiguiente archivo de
configuración conf.d. Asegúrese que INIITFTPD_PATH e INITFTP_OPTS en
<path>/etc/conf.d/in.tftpd</path> sean iguales a estos valores:
</p>

<pre caption="/etc/conf.d/in.tftpd">
INTFTPD_PATH="/tftpboot"
INTFTPD_OPTS="-s -v -l ${INTFTPD_PATH}"
</pre>

<p>
El demonio tftp puede ser iniciado por medio del guión init.d:
</p>

<pre caption="Iniciando in.tftpd">
# <i>/etc/init.d/in.tftpd start</i>
</pre>

<p>
Para más opciones, consulte la sección 8 de la página man de tftpd.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Preparando una imagen tftpboot para ser usada por un cliente</title>
<section>
<body>

<p>
Asegúrese de tener una imagen que quiera usar para arrancar a través
de la red. Para una imagen netboot sparc o sparc64, por favor revise
el servidor espejo local bajo el directorio
<path>experimental/sparc/tftpboot</path>. Asumiremos que quisiera
arrancar un anfitrión sparc64 usando la imagen
<path>gentoo-sparc64-1.4_rc4-20040102.tftpboot</path>.
</p>

<p>
Una vez que tiene la imagen, cópiela al directorio
<path>/tftpboot</path>:
</p>

<pre caption="Copiando la imagen">
# <i>cp gentoo-sparc64-1.4_rc4-20040102.tftpboot /tftpboot</i>
</pre>

<p>
Ahora, cuando el cliente netboot hace una solicitud tftp, busca un
archivo que corresponde al número hexadecimal de su dirección IP
actual, y en algunas plataformas un sufijo <path>.ARCH</path>. El
número hexadecimal debe ser expresado con <e>mayúsculas</e>.
</p>

<p>
Una guía acerca de cómo convertir decimales a hexadecimales está
disponible (en inglés) en
<uri>http://www.permadi.com/tutorial/numDecToHex/</uri>.
</p>

<p>
Y para los flojos y/o impacientes, se puede encontrar una herramienta
para convertir decimales a hexadecimal en
<uri>http://dan.drydog.com/hextemp.html</uri>.
</p>

<note>
Cada byte de la dirección IP (por ejemplo, el 10 en 10.0.1.15) deberá
convertirse en hexadecimal, en vez de convertir la dirección completa
como un solo número.
</note>

<p>
Así que veamos como se ve el equivalente hexadecimal para nuestra
dirección IP de ejemplo:
</p>

<pre caption="Dirección IP de ejemplo">
decimal       10  0   1   15
hexadecimal   0A  00  01  0F
</pre>

<p>
De manera que para nuestro cliente sparc64 netboot de ejemplo, se
buscaría un archivo de nombre 0A00010F al arrancar por tftp.
</p>

<p>
Sin embargo, en sparc, el archivo sería nombrado 0A00010F.SUN4M,
0A00010F.SUN4C o 0A00010F.SUN4D dependiendo del tipo de sistema
sparc.
</p>

<p>
Además, si en verdad, realmente sufre de flojera (como yo), puede
arrancar a través de la red para averiguar en los registros del
sistema cuál es el nombre del archivo que trata de buscar el cliente.
</p>

<p>
Asegúrese que ambos demonios, el rarpd y el tftpd estén corriendo y
luego haga netboot al anfitrión tal como se describe a continuación en
"Arrancando el cliente a través de la red".
</p>

<p>
El cliente aparentará colgarse luego de emitir el comando de arrancar
a través de la red y luego en el servidor, revise los registros para
una entrada correspondiente a in.tftpd.
</p>

<p>
Una entrada de ejemplo de un servidor netboot corriendo el gestor
sysklogd y tftp-hpa se parece a:
</p>

<pre caption="Entrada en el registro del sistema del servidor netboot">
Jan  3 22:48:59 stargazer in.tftpd[8368]: RRQ from 10.0.1.15 filename 0A00010F
</pre>

<p>
El nombre del archivo aparece después de "filename" en la entrada de
registro, que en este caso es 0A00010F.
</p>

<p>
Una manera de controla cual imagen netboot está usando y para permitir
que multiples máquinas usen la misma imagen, puede usar un enlace
simbólico para crear el archivo con nombre en valores
hexadecimales. Para crearlo usando nuestro anfitrión ejemplo sparc64 y
la imagen <path>gentoo-sparc64-1.4_rc4-20040102.tftpboot</path>, use
el siguiente comando:
</p>

<pre caption="Enlaces simbólicos al archivo de imagen">
# <i>/bin/ln -s /tftpboot/gentoo-sparc64-1.4_rc4-20040102.tftpboot \
/tftpboot/0A00010F</i>
</pre>

<p>
¡Ahora todo está listo para arrancar a través de la red!
</p>
</body>
</section>
</chapter>

<chapter>
<title>Arrancando el cliente a través de la red</title>
<section>
<body>

<p>
En el prompt del PROM OpenBoot (OBP) en el SPARC, escriba el comando:
</p>

<pre caption="Arrancando en el OBP">
ok <i>boot net</i>
</pre>

<p>
Otra forma para ciertas máquinas sería:
</p>

<pre caption="Arrancado en el OBP, manera alternativa">
ok <i>boot net-tpe</i>
</pre>

<note>
Si el sistema no le presenta con un prompt OBP al arrancar, o deberá
pulsar las teclas Stop y A, o enviar una señal break por medio de la
consola serial antes que el sistema inicie un sistema operativo. Si el
sistema no encuentra un sistema operativo, debería intentar arrancar
con a través del interfaz de red (lo cal queremos), o dejarlo en un
prompt OBP.
</note>

<p>
Esto iniciaría el proceso de arranque a través de la red. Deberán
aparecer unos dígitos hexadecimales constantemente cambiantes. Al
terminar de descargar la imagen, el kernel tomará el control e
iniciará el proceso de arranque del sistema operativo. En el caso de
nuestra imagen de instalación sparc64, terminará en un prompt de shell
desde el cual podrá comenzar el proceso de instalación.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Solucionando problemas</title>
<section>
<body>

<p>
<b>Contruyendo los pre-requisitos de software</b>
</p>

<p>
Si el servidor netboot es un sistema Gentoo Linux y experimenta
problemas instalando los paquetes rarpd y tftpd, por favor busque a
través de <uri>http://forums.gentoo.org</uri> y
<uri>http://bugs.gentoo.org</uri> para determinar si el mismo problema
ha sido encontrado por otra persona. Si no, o si las soluciones
encontradas no funcionan, por favor archive un bug nuevo en
<uri>http://bugs.gentoo.org</uri>.
</p>

<p>
<b>He usado el comando boot net pero aparentemente el equipo se colgó.</b>
</p>

<p>
Presumiblemente es porque el archivo que el sistema está tratando de
descargar no está disponible. En un sistema Sparc probablemente verá
lo siguiente:
</p>

<pre caption="El arranque aparenta estar colgado">
Rebooting with command: boot
Boot device: net  File and args:
</pre>

<p>
Revise que el archivo que solicita el cliente de hecho exista en
<path>/tftpboot</path>. Puede confirmar el nombre del archivo
solicitado mirando en los registros del sistema. Además, una vez que
exista este archivo, el cliente tratará de descargarlo. A veces,
cuando el archivo falta originalmente, la descarga se congela una vez
que éste aparece. Para resolver esto, regrese al prompt OBP y vuelva a
escribir <c>boot net</c>. Entonces el anfitrión deberá empezar a
descargar la imagen y arrancar el sistema operativo.
</p>

<p>
<b>Intento hacer netboot, pero lo único que veo son mensajes que dicen
"Timeout waiting for ARP/RARP packet" messages.</b>
</p>

<p>
Esto puede ser debido a varios problemas distintos:
</p>

<ol>
  <li>
    Asegúrese que la entrada en el archivo <path>/etc/ethers</path>
    existe para el cliente en cuestión. Si la dirección MAC no es la
    correcta y/o el servidor netboot no logra resolver el nombre del
    anfitrión cliente, no podrá responder con la información
    necesaria.
  </li>
  <li>
    Verifique que el concentrador o o switch de la red al cual están
    conectados el servidor y el cliente permitan fluir libremente el
    tráfico RARP. Si la petición por parte del cliente no puede llegar
    al servidor o vice versa, el anfitrión no podrá continuar.
  </li>
  <li>
    Nadie responde a la petición RARPD porque no existe un servicio
    pendiente de las mismas. Verifique que el servicio rarpd esté funcionando.
  </li>
  <li>
    El cliente piensa que su internfaz no está conectado al
    concentrador/switch de la red a la cual está enchufado. Revise si
    el interfaz de red tiene una luz indicadora de conexión. Si está
    encendida, revise el contenido de tpe-link-test? en el OBP con el
    comando: <c>printenv tpe-link-test?</c>. Deberá recibir algo así
    como <path>tpe-link-test? false true</path>. La primera columna
    representa el nombre del parámetro, la segunda muestra el valor
    actual y la tercera el valor por defecto. En el ejemplo anterior
    podemos ver que el valor actual es falso, significando que el
    cliente no está constatando si el cliente y el concentrador/switch
    pueden establecer una conexión antes de llevar a cabo su petición
    RARP. A veces esto puede ser la causa de problemas.
  </li>
</ol>

<p>
Para cambiar el valor de tpe-link-test? desde el prompt OBP, ejecute
el siguiente comando:
</p>

<pre caption="Cambiando el valor de tpe-link-test?">
ok <i>setenv tpe-link-test? true</i>
tpe-link-test? =      true
</pre>

<p>
Esto demuestra que el valor de tpe-link-test? ahora es
verdadero. Intente que el cliente haga netboot otra vez.
</p>
</body>
</section>
</chapter>
</guide>
