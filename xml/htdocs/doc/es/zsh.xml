<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/zsh.xml,v 1.1 2006/11/12 00:02:38 chiguire Exp $ -->

<guide link="/doc/es/zsh.xml" lang="es">

<title>Guía de Configuración e Instalación de zsh</title>

<author title="Autor">
  <mail link="hak8@wp.pl">Henryk Konsek</mail>
</author>
<author title="Autor">
  <mail link="morritt.andrew@gmail.com">Andrew Morritt</mail>
</author>
<author title="Editor">
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>
<author title="Editor">
  <mail link="welp@01welp.co.uk">Peter Weller</mail>
</author>
<author title="Traductor">
    <mail link="chiguire@gentoo.org">John Christian Stoddart</mail>
 </author>

<abstract>
Esta guía enseña como instalar y configurar zsh rápidamente. Después
de leer este documento podrá usar muchas de las características de zsh
como el modo avanzado de terminación de comandos con el tabulador,
corrección de comandos y manejo del indicador.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>2</version>
<date>2006-10-18</date>

<chapter>
<title>Instalación</title>
<section>
<title>Instalando zsh</title>
<body>

<p>
Para instalar <c>zsh</c> en Gentoo necesitamos hacer emerge al
paquete <c>app-shells/zsh</c> (el propio zsh)
y <c>app-shells/zsh-completion</c> (los guiones de terminación de
zsh).
</p>

<pre caption="Haciendo emerge zsh">
# <i>emerge zsh zsh-completion</i>
</pre>
</body>
</section>

<section>
<title>Ingresando a zsh</title>
<body>

<p>
Al comenzar <c>zsh</c> por primera vez, verá el siguiente mensaje.
Puede saltar este menu, ya que crearemos un archivo init más adelante
en esta guía.
</p>

<pre caption="Saltando la configuración inicial">
$ <i>zsh</i>
This is the Z Shell configuration function for new users, zsh-newuser-install.
You are seeing this message because you have no zsh startup files
(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory
~).  This function can help you with a few settings that should
make your use of the shell easier.

You can:

(q)  Quit and do nothing.  The function will be run again next time.

(0)  Exit, creating the file ~/.zshrc containing just a comment.
     That will prevent this function being run again.

(1)  Continue to the main menu.

--- Type one of the keys in parentheses --- <i>q</i>
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Configuración</title>
<section>
<title>Introducción</title>
<body>

<p>
Para comenzar zsh para una sesión única, ejecute <c>zsh</c>, para una
solución más permanente, por favor refiérase al capítulo sobre
como <uri link="#savingsettings">Salvar su
configuración</uri>. Después de la instalación, <c>zsh</c> pareciera
ser algo sencillo y limitado en el área de funcionalidad. Para cambiar
esto, hay que llevar a cabo varios cambios en la configuración.
</p>
</body>
</section>

<section>
<title>Terminación avanzada por tabulador</title>
<body>

<p>
Para activar el famoso sistema de terminación con el tabulador
de <c>zsh</c>, hará falta ejecutar los siguientes comandos:
</p>

<pre caption="Activando la terminación">
% <i>autoload -U compinit</i>
% <i>compinit</i>
</pre>

<p>
El estilo de terminación por defecto es bastante sencillo y hasta
feo. Si desea mejorar su apariencia, ejecute los siguientes comandos:
</p>

<pre caption="Mejoramiento de estilo de terminación">
% <i>zstyle ':completion:*:descriptions' format '%U%B%d%b%u'</i>
% <i>zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'</i>
</pre>
</body>
</section>

<section>
<title>Corrección de Comandos</title>
<body>

<p>
También es buena idea activar la auto-corrección de los comandos
escritos:
</p>

<pre caption="Activando la corrección">
% <i>setopt correctall</i>
</pre>
</body>
</section>

<section>
<title>Indicadores</title>
<body>

<p>
El indicador puede parecer bastante aburrido, pero lo podemos arreglar
fácilmente en varios pasos. Primero necesitamos inicializar soporte
avanzado para indicadores:
</p>

<pre caption="Activando indicadores avanzados">
% <i>autoload -U promptinit</i>
% <i>promptinit</i>
</pre>

<p>
Los indicadores muestra disponibles pueden imprimirse mediante el
comando <c>prompt -p</c>. Ahora podremos activar nuestro preferido:
</p>

<pre caption="Escogiendo un indicador">
<comment>(Reemplace gentoo con el indicador de su preferencia)</comment>
% <i>prompt gentoo</i>
</pre>

<note>
Si está probando distintos indicadores y no quiere ver muestras de
cada uno, puede usar el comando <c>prompt -l</c> para listar los
indicadores disponibles.
</note>

<p>
Otra opción es la creación de un indicador propio. Para hacer esto
necesitará configurar la variable de entorno PS1.
</p>

<pre caption="Un indicador personalizado sencillo">
% <i>export PS1="[Indicador de Prueba] > "</i>
[Test Prompt] >
</pre>

<p>
Mientras que es bueno poder crear un indicador personalizado, zsh
también permite diversas secuencias de escape que permiten la
inclusión de información del sistema en el indicador. Algunas de las
secuencias de escape disponibles son:
</p>

<table>
<tr>
  <th>Secuencia</th>
  <th>Apariencia</th>
</tr>
<tr>
  <ti>%T</ti>
  <ti>Hora del sistema (HH:MM)</ti>
</tr>
<tr>
  <ti>%*</ti>
  <ti>Hora del sistema (HH:MM:SS)</ti>
</tr>
<tr>
  <ti>%D</ti>
  <ti>Fecha del sistema (YY-MM-DD)</ti>
</tr>
<tr>
  <ti>%n</ti>
  <ti>Nombre del usuario</ti>
</tr>
<tr>
  <ti>%B - %b</ti>
  <ti>Comenzar y terminar negritas</ti>
</tr>
<tr>
  <ti>%U - %u</ti>
  <ti>Comenzar y terminar subrayado</ti>
</tr>
<tr>
  <ti>%d</ti>
  <ti>Directorio actual de trabajo</ti>
</tr>
<tr>
  <ti>%~</ti>
  <ti>Directorio actual de trabajo, relativo a ~</ti>
</tr>
<tr>
  <ti>%M</ti>
  <ti>Nombre del anfitrión</ti>
</tr>
<tr>
  <ti>%m</ti>
  <ti>Nombre del anfitrión (truncado al primer punto)</ti>
</tr>
<tr>
  <ti>%l</ti>
  <ti>tty actual</ti>
</tr>
</table>

<p>
Estas secuencias de escape pueden ser sencillamente insertadas en la
variable de entorno PS1 y zsh las interpretará automáticamente.
</p>

<pre caption="Un indicador más complejo">
% <i>export PS1="[%* - %D] %d %% "</i>
[08:44:23 - 06-02-18] /home/username %
</pre>
</body>
</section>

<section>
<title>Historial</title>
<body>

<p>
Desafortunadamente la configuración por defecto de zsh en Gentoo no
inclye soporte para el historial de comandos. Como trabajar con un
interfaz sin soporte de historial es muy frustrante, podemos cambiar
esto con los siguientes comandos:
</p>

<pre caption="Configuración básica para el historial">
% <i>export HISTSIZE=2000</i>
% <i>export HISTFILE="$HOME/.history"</i>

<comment>(El historial no será guardado sin el siguiente comando)</comment>
% <i>export SAVEHIST=$HISTSIZE</i>
</pre>

<!-- does not work
<p>
It is very comfortable to search commands in history using the up/down arrow
keys, especially after typing the few first letters of the desired command.
</p>

<p>
To enable this feature, enter the following commands:
</p>

<pre caption="Setting context searching">
% <i>bindkey `tput kcuu1` history-beginning-search-backward >/dev/null 2>&amp;1</i>
% <i>bindkey `tput kcud1` history-beginning-search-forward >/dev/null 2>&amp;1 </i>
</pre>

<p>
To try the above feature, try the following commands:
</p>

TODO: use commands that *are* in the history, i.e. commands from above samples

<pre caption="History searching based on the first letters of the commands">
<comment>(Do not press Enter after typing)</comment>
% <i>vim /etc/</i>
<comment>(Now press up arrow key)</comment>
% <i>vim /etc/fstab</i>
<comment>(Press up arrow key once again)</comment>
% <i>vim /etc/X11/xorg.conf</i>
</pre>
-->

<p>
Para evitar que el historial registre entradas por duplicado (como por
ejemplo <c>ls -l</c> usado varias veces durante una misma sesión),
puede activar la opción <c>hist_ignore_all_dups</c>:
</p>

<pre caption="Activando duplicados en el historial ">
% <i>setopt hist_ignore_all_dups</i>
</pre>

<p>
Un truco útil para evitar que entradas en particular sean registradas
en el historial es precederlas con al menos un espacio en blanco.
</p>

<pre caption="Evitando registro de entradas precedidas por espacio">
% <i>setopt hist_ignore_space</i>

<comment>(Este comando no será registrado. Note el espacio que lo precede.)</comment>
% <i> cat /proc/cpuinfo</i>
</pre>
</body>
</section>

<section>
<title>Configuración miscelánea</title>
<body>

<p>
Puede activar la opción <c>autocd</c> si desea evitar el tener que
escribir tediosamente el comando <c>cd</c> al cambiar de directorio
(por ejemplo <c>/etc</c> en vez de <c>cd /etc</c>).
</p>

<pre caption="Activando la opción autocd">
% <i>setopt autocd</i>
</pre>

<p>
Si el englobamiento al estilo de bash no le satisface, puede activar
la opción <c>extendedglob</c> para permitir englobamiento extendido
(similar a las expresiones regulares).
</p>

<pre caption="Activando el englobamiento extendido">
% <i>setopt extendedglob</i>
</pre>

<p>
Cuando esté activada la opción anterior, podrá hacer uso de consultas
con englobamiento extendido, tales como <c>cp ^*.(tar|bz2|gz)</c>.
</p>
</body>
</section>
</chapter>

<chapter id="savingsettings">
<title>Salvando la configuración</title>
<section>
<title>Salvando la configuración de zsh</title>
<body>

<p>
Una vez que hemos personalizado <c>zsh</c> justo como nos gusta, es
una buena idea conservar estas opciones como las por defecto
de <c>zsh</c>. Una manera de hacer esto es escribir nuestra
configuración en el
archivo <path>/etc/zsh/zshrc</path>. Alternativamente, podremos
convertirlas en las opciones por defecto para nuestra cuenta,
unicamente modificando el archivo <path>~/.zshrc</path>.
</p>

<pre caption="Un zshrc como ejemplo">
#!/bin/zsh

# completion
autoload -U compinit
compinit

# correction
setopt correctall

# prompt
autoload -U promptinit
promptinit
prompt gentoo
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Haciendo que zsh sea el shell por defecto</title>
<section>
<title>Opcones para usuarios con privilegios de superusuario</title>
<body>

<p>
Podemos cambiar el intérprete de comandos (shell) con el
comando <c>usermod</c>.
</p>

<pre caption="Cambiando a zsh permanentemente con usermod">
# <i>usermod -s /bin/zsh userlogin</i>
</pre>
</body>
</section>

<section>
<title>Alternativa para usuarios normales</title>
<body>

<p>
Si su administrador de sistema (a pesar de los pedidos educados de su
parte) se rehusa cambiar su shell a zsh, puede hacer que <c>bash</c>
ejecute <c>zsh</c> al inicio, con una pequeña modificación al
archivo <path>~/.bashrc</path>.
</p>

<pre caption="Archivo ~/.bashrc como ejemplo">
<comment>(Agregue lo siguiente a su ~/.bashrc)</comment>
exec zsh
</pre>

<p>
Otra manera de cambiar de shell es con el comando <c>chsh</c> (una
herramienta usada para cambiar el shell del usuario). Un usuario
normal solo puede cambiar el shell para su propia cuenta. Como
superusuario, puede cambiar el shell de cualquier usuario.
</p>

<pre caption="Cambiando permanentemente a zsh con chsh">
<comment>(Reemplace "username" con su propio nombre de usuario)</comment>
$ <i>chsh -s /bin/zsh username</i>
</pre>
</body>
</section>
</chapter>
</guide>
