<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/articles/prompt-magic.xml,v 1.2 2011/09/09 17:58:52 nimiux Exp $ -->

<guide lang="es" disclaimer="articles">

<title>Magia con el Símbolo de espera de órdenes (prompt)</title>

<author title="Autor">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<!--<author title="Editor">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>-->
<author title="Traductor">
  <mail link="LinuxBlues@gentoo-es.org">LinuxBlues</mail>
</author>

<abstract>
¿Por qué permanecer con el aburrido símbolo de espera de órdenes del intérprete
de comandos que viene por defecto, cuando lo podemos hacer colorido fácilmente
y mucho más informativo? En este truco, Daniel Robbins muestra cómo obtener un
símbolo de espera de órdenes tal y como nos guste, además de cómo actualizar
dinámicamente la barra de títulos de nuestra terminal X.
</abstract>

<!-- The original version of this article was first published on IBM
developerWorks, and is property of Westtech Information Services. This
document is an updated version of the original article, and contains
various improvements made by the Gentoo Linux Documentation team -->

<version>1.2</version>
<date>2005-10-21</date>

<chapter>
<title>Mejorar el símbolo de espera de órdenes del sistema</title>
<section>
<body>

<p>
Como gente Linux/UNIX, pasamos un montón de tiempo trabajando con el intérprete
de comandos y, en muchos casos, esto es lo que nos muestra:
</p>

<pre caption="Símbolo de espera de órdenes normal de un usuario">
bash-2.04$
</pre>

<p>
Si somos el superusuario (root), se nos concede el título de obtener la
"prestigiosa" versión de este bonito símbolo de espera de órdenes:
</p>

<pre caption="Símbolo de espera de órdenes del superusuario">
bash-2.04#
</pre>

<p>
Éstos símbolos de espera de órdenes no es que sean preciosos. No cabe duda de
que varias distribuciones de Linux han mejorado sus símbolos de espera de
órdenes para añadir color e información adicional al iniciar el sistema. De
todas formas, si se dispone de una distribución moderna que venga con un
símbolo de espera de órdenes bonito y colorido, puede no ser perfecto.
Posiblemente se le quieran añadir o cambiar algunos colores, o añadir
(o suprimir) información del mismo. No es tan difícil diseñar nuestro propio
símbolo de espera de órdenes con colores y trucos a nuestro gusto, desde el
principio.
</p>

</body>
</section>
<section>
<title>Lo básico del símbolo de espera de órdenes</title>
<body>

<p>
En bash, puede cambiarse el símbolo de espera de órdenes modificando la
variable de entorno <c>PS1</c>, como se muestra:
</p>

<pre caption="Cambiar la variable de entorno">
$ <i>export PS1="> "</i>
>
</pre>

<p>
Los cambios surten efecto de inmediato, y pueden hacerse permanentes emplazando
la definición <c>export</c> en el archivo <path>~/.bashrc</path>. <c>PS1</c>
puede contener toda la cantidad de texto llano que queramos:
</p>

<pre caption="Un símbolo de espera de órdenes personalizado">
$ <i>export PS1="Este es mi súper símbolo de espera de órdenes > "</i>
Este es mi súper símbolo de espera de órdenes >
</pre>

<p>
Aunque quizá sea interesante, no es exactamente útil tener un símbolo de espera
de órdenes que contenga un montón de texto estático. La mayoría de los símbolos
contienen información tal como el nombre de usuario, el directorio de trabajo o
el nombre del anfitrión. Por ejemplo, el siguiente símbolo mostrará el nombre
del usuario y el nombre del anfitrión:
</p>

<pre caption="Un símbolo de espera de órdenes más útil">
$ <i>export PS1="\u@\H > "</i>
drobbins@freebox >
</pre>

<p>
Este símbolo es especialmente útil para gente que ingresa en varias máquinas
bajo cuentas con distintos nombres, dado que nos recuerda la máquina en la que
estamos y los privilegios de los que disponemos.
</p>

<p>
En el ejemplo anterior, le indicamos a bash que mostrase el nombre de usuario y
el del anfitrión usando una secuencia especial de caracteres que se indica con
el guión invertido y que bash reemplaza con sus valores específicos cuando
aparecen en la variable <c>PS1</c>. Hemos usado las secuencias <c>\u</c> (para
el nombre de usuario) y <c>\H</c> (para la primera parte del nombre del
anfitrión). He aquí una lista completa de todas las secuencias especiales que
bash reconoce (puede encontrarse esta lista en la página man de bash, en la
sección "INDICADORES"):
</p>

<table>
<tr>
  <th>Indicador</th>
  <th>Descripción</th>
</tr>
<tr>
  <ti>\a</ti>
  <ti>Un carácter de alerta ASCII (se puede teclear también <c>\007</c>)</ti>
</tr>
<tr>
  <ti>\d</ti>
  <ti>
    La fecha en el formato "Día-Semana Mes Día" (ejemplo, "Tue May 26") en
    inglés
  </ti>
</tr>
<tr>
  <ti>\e</ti>
  <ti>
    Un carácter de escape (ESC) ASCII (se puede teclear también <c>\033</c>)
  </ti>
</tr>
<tr>
  <ti>\h</ti>
  <ti>
    El nombre del computador anfitrión hasta el primer ‘.’ (como "mybox")
  </ti>
</tr>
<tr>
  <ti>\H</ti>
  <ti>
    El nombre del computador anfitrión completo (como "mybox.mydomain.com")
  </ti>
</tr>
<tr>
  <ti>\j</ti>
  <ti>
    El número de procesos suspendidos en este intérprete de comandos
    presionando <c>^Z</c>
  </ti>
</tr>
<tr>
  <ti>\l</ti>
  <ti>El nombre del dispositivo de la terminal (como "ttyp4")</ti>
</tr>
<tr>
  <ti>\n</ti>
  <ti>Salto de línea</ti>
</tr>
<tr>
  <ti>\r</ti>
  <ti>Retorno de carro</ti>
</tr>
<tr>
  <ti>\s</ti>
  <ti>
    El nombre del shell, el nombre base de $0 (la porción que sigue a la última
    barra inclinada)
  </ti>
</tr>
<tr>
  <ti>\t</ti>
  <ti>
    La hora actual en el formato de 24 horas HH:MM:SS (como "23:01:01")
  </ti>
</tr>
<tr>
  <ti>\T</ti>
  <ti>
    La hora actual en el formato de 12 horas HH:MM:SS (como "11:01:01")
  </ti>
</tr>
<tr>
  <ti>\@</ti>
  <ti>La hora actual en el formato de 12 horas con indicador AM/PM</ti>
</tr>
<tr>
  <ti>\u</ti>
  <ti>El nombre de usuario del usuario en curso</ti>
</tr>
<tr>
  <ti>\v</ti>
  <ti>La versión de bash (como 2.04)</ti>
</tr>
<tr>
  <ti>\V</ti>
  <ti>La distribución de bash, versión + nivel de parcheo</ti>
</tr>
<tr>
  <ti>\w</ti>
  <ti>El directorio de trabajo en curso (como <path>/home/drobbins</path>)</ti>
</tr>
<tr>
  <ti>\W</ti>
  <ti>El nombre base del directorio de trabajo (como "drobbins")</ti>
</tr>
<tr>
  <ti>\!</ti>
  <ti>El número de historia de esta orden</ti>
</tr>
<tr>
  <ti>\#</ti>
  <ti>
    El número de orden de esta orden (se incrementa en cada símbolo de espera
    de órdenes, siempre que se teclee algo)
  </ti>
</tr>
<tr>
  <ti>\\$</ti>
  <ti>
    Si el UID efectivo es 0 (el super-usuario), un <c>#</c>, si no un <c>$</c>.
    Si se delimita la cadena con <c>'</c> en lugar de <c>"</c>, se debe usar
    una sola barra invertida.
  </ti>
</tr>
<tr>
  <ti>\xxx</ti>
  <ti>
    El carácter correspondiente al número octal xxx (reemplazando los dígitos
    sin utilizar por ceros, como en <c>\007</c>)
  </ti>
</tr>
<tr>
  <ti>\\</ti>
  <ti>Una barra inclinada invertida</ti>
</tr>
<tr>
  <ti>\[</ti>
  <ti>
    Empieza una secuencia de caracteres no imprimibles, que pueden emplearse
    para empotrar una secuencia de control del terminal en el indicador. Este
    indicador debe aparecer con anterioridad a una secuencia de caracteres que
    no mueven el cursor (como las secuencias de escape de color). Ésto permite
    a bash calcular correctamente la división de palabras.
  </ti>
</tr>
<tr>
  <ti>\]</ti>
  <ti>
    Termina una secuencia de caracteres no imprimibles.
  </ti>
</tr>
</table>

<p>
Con ello, tenemos una lista de todos los indicadores especiales de bash con
barra invertida. Hay que jugar con ellos para ver cómo funcionan. Después de
hacer algunas pruebas, ha llegado el momento de añadir un poco de color.
</p>

</body>
</section>
<section>
<title>Colorear</title>
<body>

<p>
Añadir colores es bastante sencillo; el primer paso es diseñar un símbolo de
espera de órdenes sin colores. Entonces, todo lo que necesitamos hacer es
añadir indicadores de escape especiales que serán reconocidos por la terminal
(en lugar de bash) que darán a lugar a que se muestren ciertas partes del texto
en color. Las terminales Linux y las terminales X permiten añadir un color de
primer plano (texto) y un color de segundo plano (fondo), así como añadir
caracteres en negrita si se desea. Disponemos de ocho colores para elegir.
</p>

<p>
Los colores se especifican añadiendo secuencias especiales a <c>PS1</c> --
básicamente encerrando valores numéricos entre un <c>\e[</c> (corchete de
escape de apertura) y una <c>m</c>. Si especificamos más de un código numérico,
separamos cada código con punto y coma [semicolon]. He aquí un ejemplo con un
código de color:
</p>

<pre caption="Añadir color">
"\e[0m"
</pre>

<p>
Cuando especificamos un código numérico con valor cero, le indicamos a la
terminal que restaure los valores de color de texto, fondo y negrita a sus
valores por defecto. Es necesario añadir este código al final de nuestro
símbolo de espera de órdenes, para no colorear el texto que introduzcamos.
Ahora consultemos los códigos de color. Veamos la siguiente captura de
pantalla:
</p>

<figure link="/images/docs/prompt-magic-colortable.gif"
        caption="Diagrama de color"/>

<p>
Para usar este diagrama, encontramos el color que nos gustaría usar y
encontramos los correspondientes colores de texto (30-37) y de fondo (40-47).
Por ejemplo, si elegimos verde con un fondo negro normal, los números son 32 y
40. Entonces cogemos la definición de nuestro símbolo de espera de órdenes y le
añadimos los códigos de color apropiados. Este:
</p>

<pre caption="Un símbolo de espera de órdenes básico personalizado">
$ <i>export PS1="\w> "</i>
</pre>

<p>
pasa a ser:
</p>

<pre caption="El símbolo de espera de órdenes coloreado">
$ <i>export PS1="\e[32;40m\w> "</i>
</pre>

<p>
Más o menos, aunque no es perfecto aún. Después de que bash muestre el
directorio de trabajo, necesitamos volver a los colores por defecto con el
indicador <c>\e[0m</c>:
</p>

<pre caption="Un símbolo de espera de órdenes mejor coloreado">
$ <i>export PS1="\e[32;40m\w> \e[0m"</i>
</pre>

<p>
Esta definición nos proporcionará un bonito símbolo de espera de órdenes verde,
pero aún necesitamos añadir algunos retoques finales. No necesitamos añadir
como color de fondo el valor 40, dado que lo ajusta como negro, que es el valor
por defecto. Además, el color verde es algo débil; lo cual puede resolverse
añadiendo un código de color <c>1</c> que habilita un texto en negrita más
brillante. Además de este cambio, necesitamos subordinar todos los caracteres
no imprimibles con los indicadores especiales de escape en bash, <c>\[</c> y
<c>\]</c>. Estos indicadores le dicen a bash que los caracteres contenidos no
ocupan ningún espacio en la línea, lo que permite que la división de palabras
siga funcionando adecuadamente. Sin ellos, acabaríamos con un bonito símbolo de
espera de órdenes que resultaría muy confuso en pantalla si nos aproximamos al
borde derecho de la pantalla al teclear un comando. He aquí nuestro símbolo de
espera de órdenes final:
</p>

<pre caption="Un bonito símbolo de espera de órdenes coloreado">
$ <i>export PS1="\[\e[32;1m\]\w> \[\e[0m\]"</i>
</pre>

<p>
Puede usarse más de un color en el mismo símbolo de espera de órdenes, como en:
</p>

<pre caption="Mucho más colorido">
$ <i>export PS1="\[\e[36;1m\]\u@\[\e[32;1m\]\H> \[\e[0m\]"</i>
</pre>

</body>
</section>
<section>
<title>Diversión con Xterm</title>
<body>

<p>
He mostrado cómo añadir información y color a nuestro símbolo de espera de
órdenes, pero podemos hacer aún más cosas. Es posible añadir códigos especiales
a nuestro símbolo para que se actualice dinámicamente la barra de título de
nuestra terminal X (como rxvt o aterm). Todo lo que se necesita hacer es añadir
el siguiente indicador a nuestro <c>PS1</c>:
</p>

<pre caption="Actualizar la barra de título xterm">
"\e]2;titlebar\a"
</pre>

<p>
Sencillamente hay que reemplazar la expresión <c>titlebar</c> con el texto que
deseemos añadir a la barra de título de nuestra xterm ¡y lo habremos
conseguido! No necesitamos usar texto estático; se pueden insertar también
indicadores de escape bash en la barra de título. Comprobemos este ejemplo, que
muestra el nombre de usuario, el nombre de anfitrión y el directorio de trabajo
actual en la barra de título, así como la definición de un breve símbolo de
espera de órdenes en un verde brillante:
</p>

<pre caption="Una xterm muy útil">
$ <i>export PS1="\[\e]2;\u@\H \w\a\e[32;1m\]>\[\e[0m\] "</i>
</pre>

<p>
Este es el símbolo de espera de órdenes que estoy usando en la captura del
diagrama de color anterior. Me encanta este símbolo, dado que añade toda la
información en la barra de títulos en lugar de estar en la terminal, donde
limitaría todo aquello que puede caber en una línea. A propósito, hay que
asegurarse de incluir todos los indicadores relacionados con la barra de título
entre <c>\[</c> y <c>\]</c>, dado que en cuanto a lo que a la terminal
respecta, esta es una secuencia no imprimible. El único problema de añadir
mucha información en la barra de título sería que no podríamos ver ninguna de
esta información si no estamos usando una terminal gráfica, como la consola del
sistema. Para resolver esto, podemos añadir algo como lo que muestro a
continuación en nuestro <path>~/.bashrc</path>:
</p>

<pre caption="Añadir utilidad a las xterm y a las consolas del sistema">
if [ "$TERM" = "linux" ]
then
    <comment># Estamos en la consola del sistema o haciéndole telnet</comment>
    export PS1="\[\e[32;1m\]\u@\H > \[\e[0m\]"
else
    <comment># No estamos en la consola, asumamos una xterm</comment>
    export PS1="\[\e]2;\u@\H \w\a\e[32;1m\]>\[\e[0m\] "
fi
</pre>

<p>
Este condicional en bash ajustará nuestro símbolo de espera de órdenes
basándose en la configuración de nuestra terminal. Para una mayor consistencia,
deberíamos asegurarnos de que nuestro <path>~/.bash_profile</path> tiene en
consideración nuestro <path>~/.bashrc</path> al iniciar. Ello se logra añadiendo
la siguiente línea a nuestro <path>~/.bash_profile</path>:
</p>

<pre caption="Editar el bash_profile">
source ~/.bashrc
</pre>

<p>
De este modo obtendremos la misma configuración del símbolo de espera de
órdenes tanto si iniciamos un intérprete de comandos de ingreso como si es sin
ingreso.
</p>

<p>
Bien, aquí está. Ha llegado el momento de divertirse y ponerse manos a la obra
para crear algunos símbolos de espera de órdenes bonitos y coloridos.
</p>

</body>
</section>
<section>
<title>Recursos</title>
<body>

<ul>
  <li>
    <uri link="http://www.rxvt.org">rxvt</uri> es una pequeña gran xterm que
    dispone de gran cantidad de información acerca de las secuencias de escape
    adjunta en el directorio <path>doc</path> del tarball de código fuente.
  </li>
  <li>
    <uri link="http://aterm.sourceforge.net">aterm</uri> es otro programa de
    terminal, basado en rxvt. Soporta algunas características visuales muy
    bonitas, como la transparencia y el tintado.
  </li>
  <li>
    <uri
    link="http://bashish.mine.nu/BashishWiki/index.php/Main_Page">bashish</uri>
    es un motor de temas para cualquier terminal. ¡Comprobar algunas <uri
    link="http://bashish.mine.nu/BashishWiki/index.php/Screenshots">excelentes
    capturas</uri> de bashish en acción!
  </li>
</ul>

</body>
</section>
<section>
<title>Acerca del autor</title>
<body>

<p>
Daniel Robbins vive en Albuquerque, Nuevo Méjico. Fue el Presidente/CEO de
Gentoo Technologies Inc., el Arquitecto Jefe del Proyecto Gentoo y contribuye
como autor de varios libros publicados por MacMillan: Caldera OpenLinux
Unleashed, SuSE Linux Unleashed, y Samba Unleashed. Daniel se ha visto
involucrado en el mundo de las computadoras de algún modo desde segundo grado
cuando se expuso al lenguaje de programación Logo y a una potencialmente letal
dosis de Pac Man. Ésto probablemente explica porqué ha sido un artista de
gráficos en SONY Electronic Publishing/Psygnosis. Daniel disfruta pasando el
tiempo con su mujer Mary y con su hija, Hadassah. Se puede contactar con Daniel
en <mail>drobbins@gentoo.org</mail>.
</p>

</body>
</section>
</chapter>
</guide>
