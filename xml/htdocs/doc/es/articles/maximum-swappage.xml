<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/articles/maximum-swappage.xml,v 1.1 2005/10/03 22:53:51 yoswink Exp $ -->

<guide link="/doc/es/articles/maximum-swappage.xml" lang="es">
<title>Maximizar el intercambio</title>

<author title="Autor">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Editor">
  <mail link="jackdark@gmail.com">Joshua Saddler</mail>
</author>
<author title="Editor Es">
  <mail link="chiguire@gentoo.org">John Christian Stoddart</mail>
</author>
<author title="Editor Es">
  <mail link="yoswink@gentoo.org">José Luis Rivero</mail>
</author>
<author title="Traductor">
  <mail link="LinuxBlues@gentoo-es.org">Fernando M. Bueno</mail>
</author>


<abstract>
Aprender a mejorar el rendimiento de el espacio de intercambio (swap) en un
servidor Linux en varios órdenes de magnitud. El autor Daniel Robbins nos
muestra en este consejo cómo conseguir lo mejor de nuestro servidor.
</abstract>

<!-- The original version of this article was first published on IBM
developerWorks, and is property of Westtech Information Services. This
document is an updated version of the original article, and contains
various improvements made by the Gentoo Linux Documentation team -->

<version>1.1</version>
<date>2005-08-18</date>

<chapter>
<title>Conseguir mejorar el intercambio</title>
<section>
<body>

<note>
La versión original de este artículo fue publicada por primera vez en IBM
developerWorks, y es propiedad de Westtech Information Services. Este documento
es una versión actualizada del artículo original, y contiene varias mejoras
realizadas por el Equipo de Documentación de Gentoo.
</note>

<p>
Cuando se configura un nuevo servidor Linux, ¿creamos una sola partición de
128MB de intercambio? De hacerse así, hemos de saber que se está limitando
seriamente el rendimiento del espacio de intercambio (swap). ¿Se quiere
incrementar el rendimiento del intercambio en varios órdenes de magnitud y
crear particiones de intercambio de más de 1 GB? Es posible, no requiere
parches en el kernel ni un equipo especial, únicamente, saber cómo hacerlo.
</p>

<p>
A muchos no debería preocuparles el intercambio. Después de todo, los sistemas
Linux son muy eficientes en el manejo de la memoria, y el intercambio rara vez
se toca mínimamente. Mientras que esto es completamente cierto en estaciones de
trabajo o escritorios, los servidores son otra historia. Los servidores pueden
a llegar a situaciones muy complejas inesperadamente, como procesos fuera de
control, ataques de denegación de servicio e incluso pueden sufrir el efecto
barrapunto, por tanto necesitan tener un adecuado intercambio de alta velocidad
para que no dejen de funcionar o se cuelguen cuando se ocupe toda la memoria.
</p>

<p>
¿Aún no se está convencido de que es un asunto muy importante? Mostraré lo
sencillo que es hacer que se cuelgue un servidor lanzando una cantidad masiva
de nuevos procesos.
</p>

<warn>
Por favor, si se intenta hacer ésto, ¡ha de hacerse en un servidor que no esté
en producción!
</warn>

<p>
Digamos que se tienen dos comandos <c>grep</c> personalizados en <path>/usr/bin
</path>, llamados <c>pedrogrep</c> y <c>juangrep</c>. Ahora, vamos a asumir que
<c>pedrogrep</c> es sencillamente un archivo de comandos (shell script) que
llama al ejecutable ELF <c>juangrep</c>, como sigue:
</p>

<pre caption="El archivo de comandos pedrogrep">
#!/bin/bash
juangrep -r $*
</pre>

<p>
Todo parece correcto hasta aquí, ¿pero qué ocurre si de repente <c>juangrep</c>
es reemplazado con un enlace simbólico a <c>pedrogrep</c>? Bien, en este caso,
ejecutar <c>pedrogrep</c> o <c>juangrep</c> causará un bucle infinito,
originando el lanzamiento de cientos de procesos bash en pocos segundos. Ésto
me ha ocurrido una vez, y deben creerme, ¡dueleee!
</p>

<p>
Si un servidor no tiene un intercambio adecuado, una situación como esta puede
causar que el servidor se bloquee en mucho menos de un minuto. ¿Cómo
solucionamos el problema? Una forma es incrementar el tamaño del espacio de
intercambio más allá de 128 MB. Afortunadamente para nosotros, ya no existe el
límite de 128 MB de swap bajo los núcleos 2.2.x+ o posteriores, como existió en
el pasado. ¡Los límites actuales son de aproximadamente 2 GB en sistemas x86,
PowerPC y MC680x0, 512 MB en sistemas MIPS, 128 GB en Alpha, y de nada menos
que 3 terabytes en plataformas UltraSparc!
</p>

<pre caption="Tamaño límite de la partición swap en núcleos Linux modernos">
x86                 2 Gigabytes
PowerPC             2 Gigabytes
Motorola 680x0      2 Gigabytes
Sparc               1 Gigabyte
MIPS                512 Megabytes
Alpha               128 Gigabytes
UltraSparc          3 Terabytes
</pre>

<p>
Mientras que es bueno poder incrementar el tamaño de la partición de
intercambio más allá de 128 MB, ¿qué hay acerca de incrementar el rendimiento?
Idealmente, sería fenomenal si podemos configurar las particiones swap en
bandas RAID 0 (stripe), para que las escrituras y lecturas se distribuyan entre
todas las particiones. Si estas particiones se encuentran en unidades separadas
y/o controladoras, multiplicará el rendimiento del espacio de intercambio,
permitiendo a los servidores manejar la utilización de memoria temporal usando
"pequeños impulsos" sin reducir demasiado su rendimiento.
</p>

<p>
Afortunadamente, todos los núcleos modernos Linux, por defecto (sin opciones
especiales en el núcleo ni parches) permiten hacer el espacio de intercambio
paralelo, como si fuera una banda RAID 0. Usando la opción <c>pri</c> en
<path>/etc/fstab</path> para configurar varias particiones swap con la misma
prioridad, le decimos a Linux que las use en paralelo:
</p>

<pre caption="Configurar múltiples particiones swap con la misma prioridad">
/dev/sda2       none    swap    sw,pri=3        0       0
/dev/sdb2       none    swap    sw,pri=3        0       0
/dev/sdc2       none    swap    sw,pri=3        0       0
/dev/sdd2       none    swap    sw,pri=1        0       0
</pre>

<p>
En el ejemplo anterior, Linux usará las particiones swap sda2, sdb2 y sdc2 en
paralelo. Dado que dichas particiones se encuentran en diferentes unidades y,
posiblemente, en diferentes controladoras SCSI, la velocidad de lectura y
escritura alcanzará fácilmente el triple. La cuarta partición swap, sdd2, se
usará únicamente cuando las tres primeras se hayan ocupado casi por completo.
</p>

<p>
La opción <c>pri</c> es realmente fácil de usar. La prioridad debe ser un
número entre 0 y 32767, siendo 32767 la mayor prioridad. Las particiones de
intercambio se usarán desde la mayor prioridad a la menor, significando que una
partición con una prioridad x sólo será usada si todas las particiones con una
prioridad mayor que x ya están llenas. Si varias particiones tienen la misma
prioridad, Linux hará paralelo el acceso a ellas automáticamente. Esto nos
permite no sólo paralelizar el intercambio, sino también asignar una mayor
prioridad de acceso a las particiones en las unidades más rápidas (o en las
partes del disco duro más rápidas) para que sean usadas primero. Así, se puede
configurar una partición de intercambio de emergencia en un viejo y más lento
disco duro, que únicamente será usada cuando las otras particiones más rápidas
se hallan llenado por completo.
</p>

<p>
Ahora es el momento de poner algo de este conocimiento sobre el espacio de
intercambio en acción.
</p>

</body>
</section>
<section>
<title>Recursos</title>
<body>

<ul>
  <li>
    En <uri link="/doc/es/articles/partitioning-p1.xml">Particionamiento en
    acción: Mover /home</uri>, se muestra paso a paso cómo mover
    <path>/home</path> a una nueva partición.
  </li>
  <li>
    En <uri link="/doc/es/articles/partitioning-p2.xml">Particionamiento en
    acción</uri>, se muestra paso a paso cómo mover <path>/var</path> y
    <path>/tmp</path> a una nueva partición.
  </li>
  <li>
    En <uri link="/doc/es/articles/partition-planning-tips.xml">Planificación de
    Particiones</uri>, comparto varias formas de organizar efectivamente el
    planteamiento de las particiones.
  </li>
  <li>
    La <uri link="http://www.redhat.com/mirrors/LDP/LDP/sag/index.html">Guía
    del administrador de Sistemas Linux</uri> réplica (en inglés) en la página
    de Red Hat.
  </li>
  <li>
    Para más información acerca de cómo optimizar el rendimiento de los
    sistemas de ficheros en Linux, puede consultarse <uri
    link="http://www.insflug.org/COMOs/Software-RAID-Como/Software-RAID-Como.html">
    RAID-Software CÓMO</uri>. Desde que el código más reciente de software RAID
    se ha incluido en las series 2.3 de los núcleos, es una opción muy viable
    para incrementar más aún el rendimiento de los discos en Linux.
  </li>
</ul>

</body>
</section>
<section>
<title>Acerca del autor</title>
<body>

<p>
Daniel Robbins vive en Albuquerque, New Mexico. Él fué el Presidente/CEO de
Gentoo Technologies Inc., el Arquitecto Jefe del Proyecto Gentoo y contribuye
como autor de varios libros publicados por MacMillan: Caldera OpenLinux
Unleashed, SuSE Linux Unleashed, and Samba Unleashed. Daniel se ha visto
involucrado en el mundo de las computadoras de algún modo desde segundo grado
cuando se expuso al lenguaje de programación Logo y a una potencialmente letal
dosis de Pac Man. Ésto probablemente explica porqué ha sido un artista de
gráficos en SONY Electronic Publishing/Psygnosis. Daniel disfruta pasando el
tiempo con su mujer Mary y con su hija, Hadassah. Se puede contactar con Daniel
en <mail>drobbins@gentoo.org</mail>.
</p>


</body>
</section>
</chapter>
</guide>
