<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/Attic/hb-install-x86-kernel.xml,v 1.7 2005/01/21 12:45:42 chiguire Exp $ -->

<sections>

<version>1.28</version>
<date>2005-01-24</date>

<section>
<title>Zona Horaria</title>
<body>

<p>
Primero necesita seleccionar su zona horaria para que su sistema sepa
dónde está localizado. Busque su zona horaria en
<path>/usr/share/zoneinfo</path>, luego haga un vínculo simbólico a
<path>/etc/localtime</path> usando <c>ln</c>:
</p>

<pre caption="Configurar la Zona Horaria">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Suponga que quiere usar el GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>
</body>
</section>

<section>
<title>Instalar las Fuentes</title>
<subsection>
<title>Elegir un Kernel</title>
<body>

<p>
El punto alrededor del cual se construyen todas las distribuciones es
el Kernel de Linux. Es la capa entre los programas de usuario y el
hardware del sistema. Gentoo proporciona a sus usuarios varias fuentes
de kernel. Una lista completa está disponible en la <uri
link="/doc/en/gentoo-kernel.xml">Guía Gentoo del Kernel</uri>.
</p>

<p>
Para los sistemas basados en x86 tenemos, entre otros kernel, las
<c>vanilla-sources</c> (las fuentes predeterminadas del kernel 2.4,
desarrolladas por los desarrolladores del kernel de linux), las
<c>gentoo-sources</c> (kernel 2.4 con parches de caracterísiticas que
mejoran su desempeño), las <c>gentoo-dv-sources</c> (fuentes del
kernel v2.6 con parches que mejoran el desempeño), las
<c>development-sources</c> (fuentes vanilla del kernel 2.6), ...
</p>

<p>
Elija sus fuentes de kernel e instálelas usando <c>emerge</c>. 
</p>

<pre caption="Instalar unas fuentes del kernel">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Cuando vea en <path>/usr/src</path> verá un enlace simbólico llamado
<path>linux</path> apuntando a las fuentes de su kernel. Se asume que
las fuentes instaladas son las <c>gentoo-sources-2.4.26-r6</c>:
</p>

<pre caption="Ver el enlace a las fuentes del kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.26-gentoo-r6
</pre>

<p>
Si el enlace simbólico no apunta a las fuentes del kernel que ha elegido
(tenga en cuenta que <c>linux-2.4.26-gentoo-r6</c> es un mero 
ejemplo) debería cambiarlo para que lo haga a las del  kernel 
correcto.
</p>

<pre caption="Cambiar el en enlace a las fuentes del kernel">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.26-gentoo-r6 linux</i>
</pre>

<p>
Ahora vamos a configurar y compilar las fuentes del kernel. Puede usar
para esto <c>genkernel</c>, que construirá un kernel genérico como el
usado por el LiveCD. Aquí explicaremos la configuración "manual", ya
que es la mejor manera de optimizar su entorno.
</p>

<p>
Si quiere configurar manualmente su kernel, continue con <uri
link="#manual">Predeterminado: Configuración Manual</uri>. En cambio,
si quiere usar <c>genkernel</c> debe leer <uri
link="#genkernel">Alternativa: Usar genkernel</uri>.
</p>
</body>
</subsection>
</section>

<section id="manual">
<title>Predeterminado: Configuración Manual</title>
<subsection>
<title>Introducción</title>
<body>

<p>
Configurar manualmente un kernel frecuentemente se ve como el
procedimiento más difícil que tiene que realizar un usuario de
Linux. Nada mas lejos de la verdad -- después de configurar un par de
kernels no recordará si fue difícil ;)
</p>

<p>
Sin embargo, una cosa <e>es</e> cierta: debe conocer su sistema cuando
empiece a configurar su kernel manualmente. Mucha información se puede
recolectar viendo el contenido de <path>/proc/pci</path> (o usando
<c>lspci</c> si está disponible). Tambien puede correr <c>lsmod</c>
para ver que módulos del kernel usa el LiveCD (puede proporcionarle
buenos consejos sobre qué habilitar).
</p>

<p>
Ahora vaya al directorio de sus fuentes y ejecute <c>make
menuconfig</c>. Esto lanzará un menú de configuración basado en
ncurses.
</p>

<pre caption="Invocar a menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Le darán la bienvenida varias secciones de configuración. Listaremos
primero algunas opciones que debe activar (de otro modo Gentoo no
funcionará, o no funcionará adecuadamente sin configuración
adicional).
</p>
</body>
</subsection>

<subsection>
<title>Activar Opciones Necesarias</title>
<body>

<p>
Primero que nada, active el uso de código y dispositivos en desarrollo
y experimentales. Esto es necesario, porque algunos dispositivos o
código importante no se verá:
</p>

<pre caption="Seleccionar código/dispositivo expremiental">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Asegúrese de compilar su kernel para la familia correcta de procesadores:
</p>

<pre caption="Seleccionar la familia de procesador correcta">
Processor type and features ---&gt;
  <comment>(Selecciónelo de acuerdo a su sistema)</comment>
  (<i>Athlon/Duron/K7</i>) Processor family
</pre>

<p>
Vaya ahora a <c>File Systems</c> y seleccione los soportes para los
sistemas de achivos que use. <e>No</e> los compile como módulos, de
otro modo su sistema Gentoo no será capaz de montar sus
particiones. También seleccione <c>Virtual memory</c>, <c>/dev file
system</c> + <c>Automatically mount at boot</c>:
</p>

<pre caption="Seleccionar los sistemas de archivos necesarios">
<comment>(Con un kernel 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Con un kernel 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)

<comment>(Seleccione una o mas de las siguientes opciones según las necesite su sistema)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Si su BIOS no puede manejar discos duros grandes y reporta un tamaño limitado, debe habilitar la siguiente
opción para tener acceso al disco duro completo:
</p>

<pre caption="Seleccionar soporte para redimensionamiento automático por geometría">
<comment>(Solo kernel 2.4.x)</comment>
ATA/IDE/MFM/RLL support ---&gt;
  IDE, ATA and ATAPI Block devices ---&gt;
    &lt;*&gt;   Include IDE/ATA-2 DISK support
    [ ]     Use multi-mode by default
    [*]     Auto-Geometry Resizing support
</pre>

<p>
Si está usando PPPoE para conectarse a Internet o está usando un modem
dial-up, necesitará las siguientes opciones en el kernel:
</p>

<pre caption="Seleccionar los controladores PPPoE necesarios">
<comment>(Con un kernel 2.4.x)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(Con un kernel 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Las dos opciones de compresión no lo afectan pero no son necesarias,
ni para la opción<c>PPP over Ethernet</c>, tal vez solo sea usada por
<c>rp-pppoe</c> cuando configure un kernel en modo PPPoE.
</p>

<p>
Si lo requiere, no olvide incluir el soporte en el kernel para su
tarjeta ethernet:
</p>

<p>
Si tiene un CPU Intel que soporte HyperThreading (tm), o tiene un
sistema multi-CPU, debe activar "Symmetric multi-processing support":
</p>

<pre caption="Activar el soporte SMP">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Si usa dispositivos de entrada USB (como un ratón o teclado) no olvide
activarlos también:
</p>

<pre caption="Activar Soporte para Dispositivos de Entrada USB">
USB Support ---&gt;
  &lt;*&gt;   USB Human Interface Device (full HID) support
</pre>

<p>
Los usuarios de laptops que quieran soporte PCMCIA <e>no deben</e> usar
los controladores PCMCIA si eligen usar un kernel 2.4. Controladores
más recientes están disponibles a través del paquete <c>pcmcia-cs</c>
que será instalado después. Los usuarios de kernel 2.6 sin embargo, si
deben usar los controladores PCMCIA desde el kernel.
</p>

<p>
Cuando haya terminado de configurar el kernel, continue con <uri
link="#compiling">Compilar e Instalar</uri>.
</p>
</body>
</subsection>

<subsection id="compiling">
<title>Compilar e Instalar</title>
<body>

<p>
Ahora que ya está configurado su kernel, es hora de compilarlo e
instalarlo. Salga de la configuración y ejecute <c>make dep &amp;&amp;
make bzImage modules modules_install</c>:
</p>

<pre caption="Compilar el kernel">
<comment>(Para un kernel 2.4)</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>(Para un kernel 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Cuando el kernel ha terminado de compilar, copie la imagen a
<path>/boot</path>. De aquí en adelante asumimos que el kernel que
está instalando es la versión 2.4.26 de las <c>gentoo-sources</c>. Use
el nombre que le parezca apropiado y recuerde que lo necesitará
después cuando configure el gestor de arranque.
</p>

<pre caption="Instalar el kernel">
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.4.26-gentoo-r6</i>
# <i>cp System.map /boot/System.map-2.4.26-gentoo-r6</i>
</pre>

<p>
También sería bueno que copiara el archivo de configuración del
kernel a <path>/boot</path>, por si acaso :)
</p>

<pre caption="Respaldar la configuración del kernel">
# <i>cp .config /boot/config-2.4.26-gentoo-r6</i>
</pre>

<p>
Ahora continue con <uri link="#kernel_modules">Instalar Módulos del
Kernel Separadamente</uri>.
</p>

</body>
</subsection>
</section>

<section id="genkernel">
<title>Alternativa: Usar genkernel</title>
<body>

<p>
Si está leyendo esta sección, eligió usar nuestro guión
<c>genkernel</c> para configurar el kernel.
</p>

<p>
Ahora que el árbol de las fuentes del kernel está instalado, es hora
de compilarlo usando nuestro guión <c>genkernel</c> que automáticamente
construirá un kernel. <c>genkernel</c> trabaja
configurando un kernel prácticamente idéntico al kernel de nuestro LiveCD. Esto significa que cuando use
<c>genkernel</c> para construir su kernel, su sistema generalmente
detectará todo su hardware en el arranque, tal como lo hace el
LiveCD. Debido a que genkernel no requiere ningúna configuración manual
del kernel, es una solución ideal para esos usuarios que no se sienten
cómodos compilando sus propios kernels.
</p>

<p>
Ahora, veamos como usar genkernel. Primero, haga emerge al ebuild de
genkernel:
</p>

<pre caption="Instalando genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Ahora, compile las fuentes de su kernel ejecutando <c>genkernel
all</c>. Recuerde que como <c>genkernel</c> compila un kernel que
soporta casi todo el hardware, esta compilación ¡tardará un rato en
terminar!
</p>

<p>
Observe que si su partición de arranque no usa ext2 o ext3 como
sistema de archivos, necesitará configurar manualmente su kernel
usando <c>genkernel --menuconfig all</c> y agregar soporte para su
sistema de archivos <e>en</e> el kernel (<e>no</e> como módulo).
</p>

<pre caption="Ejecutar genkernel">
# <i>genkernel all</i>
</pre>

<p>
Una vez que <c>genkernel</c> haya terminado, un kernel, un conjunto
completo de módulos y un <e>disco raíz de inicio</e> (initrd) serán
creados. Usaremos el kernel e initrd para configurar un gestor de
arranque mas tarde en este documento. Escriba los nombres del kernel y
de initrd ya que los necesitará para el archivo de configuración del
gestor de arranque. El initrd iniciará inmediatamente después del
arranque para realizar la autodetección de hardware (tal como en el LiveCD) antes que inicie su sistema "real".
</p>

<pre caption="Verificar los nombres del kernel e initrd creados">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Ahora vamos a realizar un paso más para que nuestro sistema sea mas
parecido al LiveCD -- vamos a instalar <c>coldplug</c>. Mientras initrd
autodetecta el hardware necesario para arrancar su sistema,
<c>coldplug</c> autodetecta todo lo demás. Para instalar y habilitar
<c>coldplug</c>, escriba lo siguiente:
</p>

<pre caption="Instalar y habilitar coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug default</i>
</pre>
</body>
</section>

<section id="kernel_modules">
<title>Instalar Módulos del Kernel Separadamente</title>
<subsection>
<title>Instalar Módulos Adicionales</title>
<body>

<p>
Sí es apropiado, debe instalar ebuilds para el hardware
adicional en su sistema. A continuación se muestra una
lista de ebuilds relacionados con el kernel que podría instalar:
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>Ebuild</th>
  <th>Propósito</th>
  <th>Comando</th>
</tr>
<tr>
  <ti>nvidia-kernel</ti>
  <ti>Aceleración de gráficos NVIDIA para xorg-x11</ti>
  <ti><c>emerge nvidia-kernel</c></ti>
</tr>
<tr>
  <ti>nforce-audio</ti>
  <ti>Placas madre con audio NVIDIA NForce(2)</ti>
  <ti><c>emerge nforce-audio</c></ti>
</tr>
<tr>
  <ti>e100</ti>
  <ti>Adaptadores Intel e100 Fast Ethernet</ti>
  <ti><c>emerge e100</c></ti>
</tr>
<tr>
  <ti>e1000</ti>
  <ti>Adptadores Intel e1000 Gigabit Ethernet</ti>
  <ti><c>emerge e1000</c></ti>
</tr>
<tr>
  <ti>emu10k1</ti>
  <ti>Soporte para Creative Sound Blaster Live!/Audigy support (solo kernels 2.4)</ti>
  <ti><c>emerge emu10k1</c></ti>
</tr>
<tr>
  <ti>ati-drivers</ti>
  <ti>Aceleración de gráficos ATI Radeon 8500+/FireGL para xorg-x11</ti>
  <ti><c>emerge ati-drivers</c></ti>
</tr>
</table>

<p>
Tenga cuidado, algunos de esos ebuild pueden tener grandes
dependencias. Para verificar que paquetes serán instalador al instalar
un ebuild, use <c>emerge --pretend</c>. Por ejemplo, para el paquete
<c>emu10k1</c>:
</p>

<pre caption="Ver el listado completo de paquetes a instalar">
# <i>emerge --pretend emu10k1</i>
</pre>

<p>
Si no le gustan los paquetes que se instalarán, use <c>emerge
--pretend --verbose</c> para ver que parámetros USE están activados
cuando decide las dependencias:
</p>

<pre caption="Ver el uso de parámetros USE">
# <i>emerge --pretend --verbose emu10k1</i>
<comment>...</comment>
[ebuild  N    ] media-sound/aumix-2.8  +gpm +nls +gtk +gnome +alsa -gtk2
</pre>

<p>
En el ejemplo anterior puede ver que una de las dependencias de
<c>emu10k1</c> (<c>aumix</c>) tiene los parámetros USE <c>gtk</c> y
<c>gnome</c>, lo que hace que gtk (que depende de xorg-x11) también se
compile.
</p>

<p>
Si no quiere que todo esto se compile, desmarque las parámetros USE, por
ejemplo:
</p>

<pre caption="Instalar emu10k1 con todas los parámetros USE desmarcados">
# <i>USE="-gpm -nls -gtk -gnome -alsa" emerge --pretend emu10k1</i>
</pre>

<p>
Cuando esté contento con los resultados, remueva el <c>--pretend</c>
para empezar a instalar <c>emu10k1</c>.
</p>
</body>
</subsection>

<subsection>
<title>Configurar los Módulos</title>
<body>

<p>
Debe listar los módulos que quiera cargar automáticamente en
<path>/etc/modules.autoload.d/kernel-2.4</path> (o en
<path>kernel-2.6</path>). Puede agregar opciones estra a los módulos
si lo desea.
</p>

<p>
Para ver todos los módulos disponibles, ejecute el comando
<c>find</c>. No olvide sustituir "&lt;versión del kernel&gt;" con la
versión del kernel que acaba de compilar:
</p>

<pre caption="Ver todos los módulos disponibles">
# <i>find /lib/modules/&lt;versión del kernel&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Por ejemplo, para cargar automáticamente el módulo <c>3c59x.o</c>,
edite el archivo <path>kernel-2.4</path> o <path>kernel-2.6</path> y
escriba el nombre del módulo ahí.
</p>

<pre caption="Editar /etc/modules.autoload.d/kernel-2.4">
<comment>(Ejemplo para un kernel 2.4)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 ó kernel-2.6">
3c59x
</pre>

<p>
Ahora ejecute <c>modules-update</c> para enviar los cambios al archivo
<path>/etc/modules.conf</path>:
</p>

<pre caption="Ejecutar modules-update">
# <i>modules-update</i>
</pre>

<p>
Continúe la instalación con <uri link="?part=1&amp;chap=8">Configurar
su Sistema</uri>.
</p>
</body>
</subsection>
</section>
</sections>
