<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/hb-net-functions.xml,v 1.10 2011/11/01 13:56:50 nimiux Exp $ -->

<sections>

<abstract>
Si quiere aventurarse, puede agregar sus propias funciones para
trabajar con redes.
</abstract>

<version>9</version>
<date>2011-10-30</date>

<section>
<title>Puntos de enlace standard en las funciones</title>
<body>

<p>
Se pueden definir cuatro funciones en <path>/etc/conf.d/net</path>,
que pueden ser llamadas antes o después de las operaciones
<c>start</c>/<c>stop</c>, de arranque/parada. Sus nombres se componen
empezando con el nombre de interfaz, de manera que una función puede
controlar múltiples interfaces.
</p>

<p>
Los valores de retorno de las funciones <c>preup</c> y <c>predown</c>
deben ser cero (éxito) indicando que la configuración o la
des-configuración de los interfaces pueden continuar. Si <c>preup</c>
devuelve un valor no-cero, se detendrá la configuración del interfaz.
Si <c>predown</c> devuelve un valor no-cero, no se permite que el
interfaz continúe desconfigurándose.
</p>

<p>
Los valores de retorno de las funciones <c>postup()</c> y
<c>postdown()</c> serán ignorados, ya que no hay nada que hacer si
hay indicación de algún fallo.
</p>

<p>
<c>${IFACE}</c> es el interfaz que será encendido/apagado,
<c>${IFVAR}</c> es <c>${IFACE}</c> convertido a un nombre de variable
válido según bash.
</p>

<pre caption="Ejemplo de funciones pre/post up/down">
preup() {
        <comment># Comprobación del enlace de la interfaz antes de activarla.
        # Esto solamente funciona con algunos interfaces de red y necesita
        # que el paquete ethtool este instalado.</comment>
        if ethtool ${IFACE} | grep -q 'Link detected: no'; then
                ewarn "No link on ${IFACE}, aborting configuration"
                return 1
        fi

        <comment># Recordamos devolver cero si todo fue correcto</comment>
        return 0
}

predown() {
        <comment># Por defecto en el guión de inicio se comprueba si
        # el sistema (root) está montado por NFS y en ese caso no permitir
        # que las interfaces se desactiven. Tenga en cuenta que, si
        # especifica una función predown() sobreescribirá está regla.
        # Aquí la tiene en caso de que todavía quiera utilizarla...</comment>
        if is_net_fs /; then
                eerror "root filesystem is network mounted -- can't stop ${IFACE}"
                return 1
        fi

        <comment># Recordamos devolver cero si todo fue correcto</comment>
        return 0
}

postup() {
        <comment># Esta función podría utilizarse, por ejemplo, para
        # registrarse en un servicio dinámico de DNS. Otra posibilidad
        # sería enviar un correo cada vez que la interfaz se conecta.</comment>
       return 0
}

postdown() {
        <comment># Esta función está aquí mayormente para redondear ...
        Aún no hemos pensado en algo interesante que pueda hacer ;-)</comment>
        return 0
}
</pre>

<note>
Para mayor información acerca de escribir sus propias funciones,
agradecemos lea
<path>/usr/share/doc/openrc-*/net.example.bz2</path>.
</note>

</body>
</section>
<section>
<title>Puntos de enlace para las herramientas inalámbricas</title>
<body>

<note>
Esto no funcionará con WPA suplicante - pero las variables
<c>${ESSID}</c> y <c>${ESSIDVAR}</c> están disponibles en la función
<c>postup()</c>.
</note>

<p>
Se pueden definir dos funciones en <path>/etc/conf.d/net</path> que se
ejecutan antes y después de la función asociada referida. Estas
funciones se nombran antecediéndole el nombre del interfaz, de manera
que la misma función puede controlar múltiples interfaces.
</p>

<p>
El valor retornado por la función <c>preassociate()</c> debe ser 0 (éxito)
para indicar que la configuración o desconfiguración del interfaz puede
continuar. Si la función <c>preassociate()</c> retorna un valor no-cero, se
interrumpirá la configuración del interfaz.
</p>

<p>
El valor retornado por la función <c>postassociate()</c> se ignora, ya
que no hay nada que hacer si llegase a indicarse una falla.
</p>

<p>
A <c>${ESSID}</c> se le asigna el ESSID exacto del PA al cual se está
conectando, ya que <c>${ESSIDVAR}</c> es <c>${ESSID}</c>, convertido a
un nombre de variable permitido por bash.
</p>

<pre caption="Funciones pre/post asociación en /etc/conf.d/net">
preassociate() {
        <comment># A continuación se agregan 2 variables
        # de configuración leap_user_ESSID y leap_pass_ESSID. Cuando
        # ambos estén configurados para el ESSID al que se conectan,
        # corremos el guión LEAP de CISCO.</comment>

        local user pass
        eval user=\"\$\{leap_user_${ESSIDVAR}\}\"
        eval pass=\"\$\{leap_pass_${ESSIDVAR}\}\"

        if [[ -n ${user} &amp;&amp; -n ${pass} ]]; then
                if [[ ! -x /opt/cisco/bin/leapscript ]]; then
                        eend "For LEAP support, please emerge net-misc/cisco-aironet-client-utils"
                        return 1
                fi
                einfo "Waiting for LEAP Authentication on \"${ESSID//\\\\//}\""
                if /opt/cisco/bin/leapscript ${user} ${pass} | grep -q 'Login incorrect'; then
                        ewarn "Login Failed for ${user}"
                        return 1
                fi
        fi

        return 0
}

postassociate() {
        <comment># Esta función existe mayormente para completar ...
        # aunque no he pensado en algo interesante para hacer acá
        # todavía ;-)</comment>

        return 0
}
</pre>

<note>
Las variables <c>${ESSID}</c> y <c>${ESSIDVAR}</c> no están
disponibles en las funciones <c>predown()</c> y <c>postdown()</c>.
</note>

<note>
Para mayor información acerca de cómo escribir sus propias
funciones, agradecemos lea
<path>/usr/share/doc/openrc-*/net.example.bz2</path>.
</note>

</body>
</section>
</sections>
