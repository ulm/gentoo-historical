<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/Attic/hb-install-bootloader.xml,v 1.1 2004/03/08 21:58:52 chiguire Exp $ -->

<sections>
<section>
<title>El arte de escoger</title>
<subsection>
<title>Introducción</title>
<body>

<p>
Ahora que su kernel está configurado y compilado y los archivos de
configuración necesarios han sido llenados correctamente, ha llegado
la hora de instalar el programa que iniciará el kernel cuando arranque
el sistema. Este programa es conocido como <e>gestor de arranque</e> o
<e>gestor de inicio</e>. Antes de comenzar, consideremos nuestras
opciones ...
</p>

<p>
Existen varios de estos gestores para Linux. Sin embargo, estores
gestores de inicio solamente funcionan en un conjunto reducido de
arquitecturas, así que debemos escoger entre los gestores que soportan
nuestra arquitectura.
</p>

<p>
La siguiente table lista las arquitecturas y sus gestores de inicio
soportados. Escoja su gestor basado en su arquitectura. Por ejemplo,
si tiene un Pentium IV, su arquitectura es <e>x86</e>. Puede escoger
entre GRUB (recomendado) y LILO.
</p>

<table>
<tr>
  <th>Arquitectura</th>
  <th>Recomendado</th>
  <th>Alternativas</th>
</tr>
<tr>
  <th>x86</th>
  <ti><uri link="#doc_chap2">GRUB</uri></ti>
  <ti><uri link="#doc_chap3">LILO</uri></ti>
</tr>
<tr>
  <th>alpha</th>
  <ti><uri link="#doc_chap4">aBoot</uri></ti>
  <ti><uri link="#doc_chap5">MILO</uri></ti>
</tr>
<tr>
  <th>sparc</th>
  <ti><uri link="#doc_chap6">SILO</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>ppc</th>
  <ti>
    <uri link="#doc_chap8">yaBoot</uri> (NewWorld), 
    <uri link="#doc_chap9">BootX</uri> (OldWorld)
  </ti>
  <ti></ti>
</tr>
<tr>
  <th>hppa</th>
  <ti><uri link="#doc_chap7">PALO</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>mips</th>
  <ti><uri link="#doc_chap10">MIPS PROM</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>amd64</th>
  <ti><uri link="#doc_chap2">GRUB</uri></ti>
  <ti></ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Opcional: Framebuffer (memoria de imagen)</title>
<body>

<note>
Esta sección solamente aplica a los usuarios de x86, AMD64 y PPC que
hayan configurado el soporte respectivo en su kernel. Esto incluye a
usuarios de <c>genkernel</c>.
</note>

<p>
<e>Si</e> ha configurado su kernel con soporte framebuffer, debe
agregar un enunciado <c>vga</c> al archivo de configuración del gestor
de inicio. La siguiente tabla lista los valores <c>vga</c>
disponibles. En el archivo de configuración usado como ejemplo
queremos <e>800x600 @ 16bpp</e>, por ende este valor será <e>788</e>.
</p>

<table>
<tr>
  <ti></ti><th>640x480</th><th>800x600</th><th>1024x768</th><th>1280x1024</th>
</tr>
<tr>
  <th>8 bpp</th><ti>769</ti><ti>771</ti><ti>773</ti><ti>775</ti>
</tr>
<tr>
  <th>16 bpp</th><ti>785</ti><ti>788</ti><ti>791</ti><ti>794</ti>
</tr>
<tr>
  <th>32 bpp</th><ti>786</ti><ti>789</ti><ti>792</ti><ti>795</ti>
</tr>
</table>

<p>
Recuerde (o anote) este valor, ya lo usrá dentro de poco.
</p>

<p>
Ahora seleccione el valor para el gestor de inicio de la anterior tabla.
</p>

</body>
</subsection>
</section>

<section>
<title>Por defecto: Usando GRUB</title>
<subsection>
<title>Comprendiendo la terminología de GRUB</title>
<body>

<impo>
¡GRUB solamente puede ser usado con sistemas basados en x86- oAMD64!
</impo>

<p>
La parte más crítica para la comprensión de GRUB, es el hacerse cómodo
con la manera en que GRUB se refiere a los discos duros y las
particiones. Su partición Linux <path>/dev/hda1</path> es denominada
<path>(hd0,0)</path> por GRUB. Note los paréntesis alrededor de
<path>hd0,0</path>, que son obligatorios.
</p>

<p>
La numeración de los discos duros cuenta a partir de cero en vez de la
cuenta de particiones que comienza en uno. Advertimos también que
entre los dispositivos hd, sólo se cuentan los discos duros y no los
dispositivos atapi-ide como cdroms y quemadores. Además, la
especificación es igual para dispositivos scsi. (Usualmente son
asignados números mayores, excepto cuando el bios está configurado para
arrancar desde los dispositivos scsi).
</p>

<p>
Asumiendo que tiene un disco duro en <path>/dev/hda</path>, un lector
de cdrom en <path>/dev/hdb</path>, un quemador en
<path>/dev/hdc</path>, un segundo disco duro en <path>/dev/hdd</path>
y ningún disco duro scsi, la partición <path>/dev/hdd7</path> que
descrita como <path>(hd1,6)</path>. A lo mejor puede sonar raro y bien
podría serlo, pero como veremos, GRUB ofrece un mecanismo de
terminación por tabulador que es de gran ayuda para los que tienen una
gran cantidad de discos duros y que andan algo perdidos con este
esquema de numeración.
</p>

<p>
Habiendole tomado la medida, es hora de instalar GRUB.
</p>
</body>
</subsection>

<subsection>
<title>Instalando GRUB</title>
<body>

<p>
Para instalar GRUB, primero hagamos el emerge. Los usuarios de la
arquitectura x86 instalarán <c>grub</c> y los de AMD64 harán emerge
<c>grub-static</c>:
</p>

<pre caption = "Instalando GRUB">
<comment>(Para la arquitectura x86:)</comment>
# <i>emerge --usepkg grub</i>

<comment>(Para la arquitectura AMD64:)</comment>
# <i>emerge --usepkg grub-static</i>
# <i>cp -Rpv /usr/share/grub/i386-pc/* /boot/grub</i>
</pre>

<p>
Para comenzar a configurar GRUB, escriba <c>grub</c> y se le
presentará el prompt <path>grub&gt;</path> en la línea de
comando. Ahora, debe escribir los comandos para instalar el registro
de arranque de GRUB en el disco duro.
</p>

<pre caption = "Arrancando el interfaz de comandos GRUB">
# <i>grub</i>
</pre>

<note>
Si su sistema no tiene lectores para disquetes, agregue el parámetro
<c>--no-floppy</c> al comando anterior para evitar que GRUB intente
precisar los lectores inexistentes.
</note>

<p>
En la configuración de ejemplo, deseamos instalar GRUB para que lea su
información de la partición de arranque <path>/dev/hda1</path> y que
instale su registro de arranque en el MBR o registro principal de
arranque de forma que lo primero que veamos al encender el computador
sea el cursor de GRUB. Si no ha seguido la configuración de ejemplo
durante la instalación, adecúe sus comandos respectivamente.
</p>

<p>
El mecanismo de terminación con la tecla tab puede ser usado en
GRUB. Por ejemplo, si escribe <c>root (</c> pulsando seguidamente la
tecla TAB, GRUB le presentará una lista de dispositivos (tales como
<path>hd0</path>). Si escribe <c>root (hd0,</c> pulsando seguidamente
la tecla TAB, recibirá una lista de particiones de las cuales escoger
(tales como <path>hd0,0</path>).
</p>

<p>
Usando la terminación con TAB facilita la configuración de GRUB, así
que, ¿porqué no empezar? :-)
</p>

<pre caption = "Instalando GRUB en el MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(Especifique donde está
su partición /boot)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Instale GRUB en el MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Salga del interfaz de
comando de GRUB)</comment>
</pre>

<note>
Si desea instalar GRUB en una determinada partición en vez del MBR,
debe cambiar el comando <c>setup</c> para apuntar a la partición
escogida. Por ejemplo, si desea instalarlo en <path>/dev/hda3</path>,
la línea de comando sería <c>setup (hd0,2)</c>. Sin embargo, pocos
usuarios querrán hacer esto.
</note>

<p>
Aunque GRUB esté instalado, todavía necesitamos crear un archivo de
configuración para que GRUB arranque su nuevo kernel
automáticamente. Cree el archivo <path>/boot/grub/grub.conf</path> con
<c>nano</c>, o cualquier otro editor:
</p>

<pre caption = "Creando el archivo /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Ahora vamos a escribir el <path>grub.conf</path>. A continuación
encontrará tres posibles archivos <path>grub.conf</path> para el
ejemplo de particiones que manejamos en esta guía, con un kernel
<path>kernel-2.4.22</path>. Solo hemos comentado el primer
<path>grub.conf</path>.
</p>

<ul>
  <li>
    El primer <path>grub.conf</path> es para quienes no hayan usado
    <c>genkernel</c> para construir su kernel
  </li>
  <li>
    El segundo <path>grub.conf</path> es para quienes hayan usado el
    <c>genkernel</c> del LiveCD (por ejemplo, el <c>genkernel</c>
    instalado por medio de paquetes PRG para construir su kernel
  </li>
  <li>
    El tercer <path>grub.conf</path> es para quienes hayan usado un
    <c>genkernel</c> descargado de la red para construir su kernel
  </li>
</ul>

<pre caption = "grub.conf para quienes no hayan usado genkernel">
<comment># Cual título arrancar por defecto. 0 es el primero, 1 el
segundo, etc.</comment>
default 0
<comment># Cuantos segundos esperar antes de arrancar el título
por defecto.</comment>
timeout 30
<comment># Una bella, hermosa imagen para ensalzar las cosas un poco :)</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.22
<comment># Partición donde se encuentra la imagen del kernel (o
sistema operativo)</comment>
root (hd0,0)
kernel (hd0,0)/kernel-2.4.22 root=/dev/hda3

<comment># Las siguientes tres líneas sólo se usan en caso de arranque
dual con un sistema Windows.</comment>
<comment># En este caso, Windows reside en la partición /dev/hda6.</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>

<pre caption = "grub.conf para usuarios del genkernel del PRG">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.22
root (hd0,0)
kernel (hd0,0)/kernel-2.4.22 root=/dev/hda3
initrd (hd0,0)/initrd-2.4.22

<comment># Solo en caso de arranque doble</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>

<pre caption = "grub.conf para usuarios de genkernel que no sea de la PRG">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.22
root (hd0,0)
kernel (hd0,0)/kernel-2.4.22 root=/dev/ram0 init=/linuxrc real_root=/dev/hda3
initrd (hd0,0)/initrd-2.4.22

<comment># Solo en caso de arranque doble</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>


<note>
Si usa un esquema de particiones y/o imagen de kernel distinta, haga
los ajustes respectivos. Sin embargo, asegúrese que cualquier cosa que
siga un dispositivo GRUB (tal como <path>(hd0,0)</path>) sea relativa
al punto de montaje y no de la raíz. En otras palabras,
<path>(hd0,0)/grub/splash.xpm.gz</path> es en realidad
<path>/boot/grub/splash.xpm.gz</path> ya que <path>(hd0,0)</path> es
<path>/boot</path>.
</note>

<p>
Si necesita pasar algún parámetro adicional al kernel, sencillamente
agréguelo al final de la línea de comando del kernel. Ya estamos
pasando una opción (<c>root=/dev/hda3</c> o
<c>real_root=/dev/hda3</c>), pero se pueden pasar otras también. Como
ejemplo usamos el enunciado <c>vga</c> para el framebuffer discutido
previamente:
</p>

<pre caption = "Agregando el enunciado vga como parámetro del kernel">
title=Gentoo Linux
  root (hd0,0)
  kernel (hd0,0)/kernel-2.4.22 root=/dev/hda3 vga=788
</pre>

<p>
Los usuarios de <c>genkernel</c> debeb saber que sus kernels usan las
mismas opciones de arranque que el LiveCD. Por ejemplo, si tiene
dispositivos scsi, puede agregar el parámetro <c>doscsi</c>.
</p>

<p>
Ahora salve el archivo <path>grub.conf</path>, ya que GRUB está
plenamente configurado y continue con <uri
link="?part=1&amp;chap=10">Instalando las Herramientas de Sistema
Necesarias</uri>.
</p>

</body>
</subsection>
</section>

<section>
<title>Alternativa: Usando LILO</title>
<subsection>
<title>Instalando LILO</title>
<body>

<impo>
¡LILO solo puede ser usado en sistemas x86!
</impo>

<p>
LILO, representa LInuxLOader, y es el caballito de batalla probado y comprobado de
los gestores de inicio de Linux. Sin embargo, carece de algunas
características de GRUB (razón por la cual GRUB actualmente está
ganando popularidad). La razón por la cual LILO sigue en uso es que en
algunos sistemas, GRUB no funciona mientras que LILO si. Por supuesto
también se usa porque hay muchos que lo conocen y prefieren seguir con
este gestor. De cualquier manera, Gentoo soporta ambos gestores y
por lo visto, ha elegido usar LILO.
</p>

<p>
Instalar LILO es fácil, sencillamente use <c>emerge</c>.
</p>

<pre caption = "Instalando LILO">
# <i>emerge --usepkg lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Configurando LILO</title>
<body>

<p>
Para configurar LILO, debe crear el archivo
<path>/etc/lilo.conf</path>. Use su editor de textos preferido (en el
handbook usamos <c>nano</c> para ser consistentes) y creemos este archivo.
</p>

<pre caption = "Creando /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Algunas secciones atrás, le preguntamos que se recordara el nombre de
la imagen del kernel creado. En el siguiente ejemplo de
<path>lilo.conf</path> asumiremos que el nombre de esta imagen es
<path>kernel-2.4.22</path>. También haremos uso del esquema ejemplo de
particionamiento. Hay tres partes separadas:
</p>

<ul>
  <li>
    Para los que no hayan usado <c>genkernel</c> para construir su kernel
  </li>
  <li>
    Para los que hayan usado el <c>genkernel</c> de la PRG para
    construir su kernel
  </li>
  <li>
    Para los que hayan usado un <c>genkernel</c> descargado
    recientemente para construir su kernel
  </li>
</ul>

<pre caption = "Ejemplo de /etc/lilo.conf">
boot=/dev/hda             <comment># Instalar LILO en el MBR</comment>
prompt                    <comment># Darle al usuario una oportunidad
de seleccionar otra sección</comment>
delay=50                  <comment># Esperar 5 (cinco) segundos antes
de arrancar la sección por defecto</comment>
default=gentoo            <comment># Al transcurrir el plazo de
descuento, arrancar la sección "gentoo"</comment>
<comment># Solamente si usa un framebuffer. De otra manera elimine la
siguiente línea:</comment>
vga=788                   <comment># Configuración del
framebuffer. Ajuste según requierimiento</comment>

<comment># Para los que no usaron genkernel</comment>
image=/boot/kernel-2.4.22
  label=gentoo            <comment># El nombre de la sección</comment>
  read-only               <comment># Comienze con la raíz solo
lectura. ¡No modifique!</comment>
  root=/dev/hda3          <comment># Ubicación del sistema raíz de archivos</comment>

<comment># Para usuarios genkernel PRG</comment>
image=/boot/kernel-2.4.22
  label=gentoo
  read-only
  root=/dev/hda3
  initrd=/boot/initrd-2.4.22

<comment># Para usuarios de un genkernel reciente</comment>
image=/boot/kernel-2.4.22
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc real_root=/dev/hda3"
  initrd=/boot/initrd-2.4.22

<comment># La siguientes dos línea solo corresponden si hace arranque
doble con un sistema Windows.</comment>
<comment># En este caso, Windows se encuentra en /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Si usa un esquema de particionamiento o imagen de kernel distinta,
haga los ajustes correspondientes.
</note>

<p>
Si hace falta pasar alguna opción adicional al kernel, incluya un
enunciado <c>append</c> a la sección. A modo de ejemplo, agregamos un
enunciado <c>acpi=off</c> para desactivar el soporte ACPI:
</p>

<pre caption = "Usando append para agregar opciones al kernel">
image=/boot/kernel-2.4.22
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="acpi=off"</i>
</pre>

<p>
Usuarios de <c>genkernel</c> deben saber que sus kernel usan las
mismas opciones de arranque que el LiveCD. Por ejemplo, si tiene
dispositivos SCSI, debe agregar <c>doscsi</c> como opción del kernel.
</p>


<p>
Ahora, salve el archivo y salga del editor. Para terminar, debe
ejecutar el comando <c>/sbin/lilo</c> para poder aplicar
<path>/etc/lilo.conf</path> a su sistema (que se instale en el disco).
</p>

<pre caption = "Terminando la instalación de LILO">
# <i>/sbin/lilo</i>
</pre>

<p>
Ahora continue con <uri link="?part=1&amp;chap=10">Instalando las Herramientas de Sistema
Necesarias</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternativa: Usando aboot</title>
<body>

<impo>
¡aboot solo puede ser usado con sistemas alpha!
</impo>

<p>
Primero instalamos aboot en nuestro sistema. Por supuesto, usamos
<c>emerge</c> para esto:
</p>

<pre caption = "Instalando aboot">
# <i>emerge --usepkg aboot</i>
</pre>

<p>
El siguiente paso es hacer que nuestro disco pueda ser usado para
arrancar. Así arrancará <c>aboot</c> al iniciar su sistema. Esto lo haremos
escribiendo el gestor de arranque <c>aboot</c> al inicio del disco.
</p>

<pre caption = "Habilitando su disco para arrancar">
# <i>swriteboot -f3 /dev/sda /boot/bootlx</i> 
# <i>abootconf /dev/sda 2</i>
</pre>

<note>
Si utiliza un esquema de particiones distinto al usado a través de
este capítulo, debe hacer los cambios correspondientes. Por favor lea
las páginas man apropiadas (<c>man 8 swriteboot</c> y
<c>man 8 abootconf</c>).
</note>

<p>
Adicionalmente, puede hacer que Gentoo arranque más fácilmente con el
archivo de configuración aboot y la variable SRM boot_osflags. Hará
falta asegurarse que bootdef_dev esté adecuadamente habilitado (más
fácil hacer esto desde la consola que desde Linux).
</p>

<pre caption = "Mejorar el arranque de Gentoo">
# <i>echo '0:2/boot/vmlinux.gz root=/dev/sda2' &gt; /etc/aboot.conf</i>
# <i>echo -n 0 &gt; /proc/srm_environment/named_variables/boot_osflags</i>
# <i>echo -n '' &gt; /proc/srm_environment/named_variables/boot_file</i>
</pre>

<p>
Si está instalando usando una consola por el puerto serie, no se
olvide incluir el parámetro de arranque para la consola serie en
<path>aboot.conf</path>. Vea <path>/etc/aboot.conf.example</path> para
mayor información. Adicionalmente, hay que permitir el login por el
puerto serie:
</p>

<pre caption = "Activando el login en el puerto serie">
# <i>echo tts/0 &gt;&gt; /etc/securetty</i>
# <i>echo 's0:12345:respawn:/sbin/agetty 9600 tts/0 vt100' &gt;&gt; /etc/inittab</i>
</pre>

<p>
Aboot está configurado y listo para usar. Continue con <uri
link="?part=1&amp;chap=10">Instalando las Herramientas de Sistema
Necesarias</uri>.
</p>
</body>
</section>

<section>
<title>Alternativa: Usando MILO</title>
<body>

<impo>
¡MILO solo puede ser usado en sistemas alpha!
</impo>

<p>
Antes de continuar, debemos decidir cómo usar MILO. En esta sección,
asumiremos que desea hacer un diskette de arranque MILO. Si va a
arrancar a aprtir de una partición MS-DOS en su disco duro, debe
modificar los comandos apropiadamente.
</p>

<p>
Para instalar MILO, usamos <c>emerge</c>.
</p>

<pre caption = "Instalando MILO">
# <i>emerge --usepkg milo</i>
</pre>

<p>
Luego de instalar MILO, las imágenes de MILO deben estar en
<path>/opt/milo</path>. Los comandos para hacer un diskette de
arranque para usar con MILO se encuentran a continuación. Acuérdese de
usar la imagen correcta para su sistema Alpha.
</p>

<pre caption = "Instalando MILO en un floppy">
<comment>(Primero meta un disco en blanco)</comment>
# <i>fdformat /dev/fd0</i>
# <i>mformat a:</i>
# <i>mcopy /opt/milo/milo-2.2-18-gentoo-ruffian a:\milo</i>
# <i>mcopy /opt/milo/linload.exe a:\lilnload.exe</i>
<comment>(Solo si tiene un Ruffian:</comment>     
  # <i>mcopy /opt/milo/ldmilo.exe a:\ldmilo.exe</i>
<comment>)</comment>
# <i>echo -ne '\125\252' | dd of=/dev/fd0 bs=1 seek=510 count=2</i>
</pre>

<p>
Si diskette de arranque MILO está listo para arrancar Gentoo
Linux. Tal vez tenga que configurar unas variables de entorno en su
firmware ARCS para que MILO pueda arrancar; esto está explicado en el <uri
link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri> con ejemplos
pertinentes a sistemas comunes y ejemplos de comandos para utilizar en
modo interactivo.</p>

<p>
No leer el <uri
link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri> es una <e>mala</e> idea.
</p>

<p>
Ahora continue con <uri link="?part=1&amp;chap=10">Instalando las Herramientas de Sistema
Necesarias</uri>.
</p>
</body>
</section>

<section>
<title>Alternativa: Usando SILO</title>
<body>

<p>
Es el momento de instalar y configurar <uri
link="http://www.sparc-boot.org">SILO</uri>, el gestor de arranque
mejorado para arquitectura Sparc (Sparc Improved boot
LOader).
</p>

<pre caption = "Instalando SILO">
# <i>emerge --usepkg silo</i>
</pre>

<p>
Usando su editor de textos favorito (nosotros usamos <c>nano</c> como
ejemplo) y cree el archivo <path>/etc/silo.conf</path>.
</p>

<pre caption = "Creando /etc/silo.conf">
# <i>nano -w /etc/silo.conf</i>
</pre>

<p>
A continuación encontrará un ejemplo de un archivo
<path>silo.conf</path>. Usa el mismo esquema de particiones que hemos
usado a través de esta publicación y <path>kernel-2.4.22</path> como
imagen del kernel.
</p>

<pre caption = "Ejemplo de /etc/silo.conf">
partition = 1         <comment># Partición de arranque</comment>
root = /dev/hda4      <comment># Partición raíz</comment>
timeout = 15          <comment># Espere 15 segundos antes de arrancar
la sección por defecto</comment>

image = /boot/kernel-2.4.22
  label = linux
</pre>

<p>
Si usa el <path>silo.conf</path> de Portage como ejemplo, asegúrese de
comentar <e>todas</e> las líneas que no requiera.
</p>

<p>
Si tiene una partición separada para <path>/boot</path>, copie el
archivo de configuración a <path>/boot</path> y luego ejecute
<c>/sbin/silo</c>:
</p>

<pre caption = "Solamente si tiene una partición separada para /boot">
# <i>cp /etc/silo.conf /boot</i>
# <i>/sbin/silo -C /boot/silo.conf</i>
/boot/silo.conf appears to be valid
</pre>

<p>
Si su directorio <path>/boot</path> reside un su partición raíz, nada
más ejecute <c>/sbin/silo</c>:
</p>

<pre caption = "Ejecutando silo">
# <i>/sbin/silo</i>
/etc/silo.conf appears to be valid
</pre>

<p>
Ahora continue con <uri link="?part=1&amp;chap=10">Instalando las Herramientas de Sistema
Necesarias</uri>.
</p>
</body>
</section>

<section>
<title>Alternativa: Usando PALO</title>
<body>

<impo>
¡PALO puede ser usado solamente en sistemas HPPA!
</impo>

<p>
En la plataforma PA_RISC, el gestor de arranque se llama palo. Puede
encontrar su archivo de configuración en
<path>/etc/palo.conf</path>. Aquí mostramos una configuración de ejemplo:
</p>

<pre caption = "Ejemplo de /etc/palo.conf">
--commandline=2/vmlinux root=/dev/sdb2 HOME=/
--recoverykernel=/vmlinux.old
--init-partitioned=/dev/sdb
</pre>

<p>
La primera línea le dice a palo donde está el kernel y qué parámetros
de inicio debe utilizar. <c>2/vmlinux</c> quiere decir que el kernel
denominado <c>/vmlinux</c> reside en la segunda partición. Advertimos
que la trayectoria al kernel es relativa a la partición, no a la raíz
del sistema de archivos.
</p>

<p>
La segunda línea indica cual kernel usar en caso de recuperación. Si
es su primera instalación y no tienen un kernel de recuperación, por
favor, comente esta línea. La tercera línea indica en cual disco
reside palo.</p>

<p>
Al terminar la configuración, ejecute <c>palo</c>.
</p>

<pre caption = "Aplicando la configuración de PALO">
# <i>palo</i>
</pre>

<p>
Ahora continue con <uri link="?part=1&amp;chap=10">Instalando las Herramientas de Sistema
Necesarias</uri>.
</p>

</body>
</section>
<section>
<title>Alternativa: Usando yaBoot</title>
<subsection>
<title>Introducción</title>
<body>

<impo>
¡yaBoot solo puede ser usado en sistemas PPC de tipo NewWorld!
</impo>

<p>
Hay dos maneras para configurar YaBoot para su sistema. Puede usar el
nuevo, mejorado <c>yabootconfig</c> incluido con 
<path>yaboot-1.3.8-r1</path> y versiones posteriores para configurar
automáticamente yaboot. Si por alguna razón no desea ejecutar
<c>yabootconfig</c> para hacer la configurar automáticamente el
archivo <path>/etc/yaboot.conf</path>, puede modificar el archivo
ejemplo instalado en su sistema.
</p>

<ul>
  <li><uri link="#doc_chap8_sect2">Por defecto: Usando yabootconfig</uri></li>
  <li>
    <uri link="#doc_chap8_sect3">Alternativa: Configuración manual de yaBoot</uri>
  </li>
</ul>
</body>
</subsection>

<subsection>
<title>Por defecto: Using yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> detectará automáticamente las particiones en su
máquina y configurará combinaciones de doble y triple arranque con
Linux, Mac OS y Mac OS X.
</p>

<p>
Para usar <c>yabootconfig</c> su disco debe tener una partición de
arranque y el archivo <path>/etc/fstab</path> debe estar configurado
con sus particiones Linux. Ambos pasos deben haber sido cumplidos en
los pasos anteriores. Para empezar, asegúrese de tener instalada la última
versión de yaboot, ejecutando el comando  <c>emerge --update
yaboot</c>. Esto es necesario ya que la última versión estará
disponible en Portage más no necesariamente incorporado a los archivos stage.</p>

<pre caption = "Instalando yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Ahora corra <c>yabootconfig</c>. Al ejecutar, el programa confirmará
la ubicación de la partición de arranque. Escriba <c>Y</c> si es
correcta. Si no, revise <path>/etc/fstab</path>. yabootconfig
investigará la configuración de su sistema, creará el archivo
<path>/etc/yaboot.conf</path> y correrá
<c>mkofboot</c>. <c>mkofboot</c> se usa para formatear la partición de
arranque e instalarle el archivo de configuración de yaboot.
</p>

<p>
Tal vez desee verificar el contenido de
<path>/etc/yaboot.conf</path>. Si realiza algún cambio a
<path>/etc/yaboot.conf</path> (tal como seleccionar el sistema
operativo de arranque o por defecto), asegúrese de ejecutar <c>ybin
-v</c> para que se apoliquen estos cambios a la partición de arranque.
</p>

<p>
Ahora continue con <uri link="?part=1&amp;chap=10">Instalando las Herramientas de Sistema
Necesarias</uri>.
</p>
</body>
</subsection>

<subsection>
<title>Alternativa: Configuración manual de yaBoot</title>
<body>

<p>
Primero, asegúrese de tener la última versión de <c>yaboot</c>
instalada en su sistema:
</p>

<pre caption = "Instalando yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
A continuación encontrará un archivo <path>yaboot.conf</path>
completo. Modifíquelo según sus necesidades:
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## run: "man yaboot.conf" for details. Do not make changes until you have!!
## see also: /usr/share/doc/yaboot/examples for example configurations.
##
## For a dual-boot menu, add one or more of:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## our bootstrap partition:</comment>

boot=/dev/hda9

<comment>##hd: es la nomenclatura de open firmware para hda</comment>
device=hd:
partition=11

root=/dev/hda11
delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Esta sección puede ser duplicada si tiene más de un kernel
## u opciones de arranque
#################</comment>
image=/boot/vmlinux
  label=Linux
  sysmap=/boot/System.map
  read-only
<comment>##################</comment>

macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Una vez configurado el <path>yaboot.conf</path> de la manera que
desee, ejecute <c>mkofboot -v</c> para instalar esta configuración en
la partición de arranque. <e>¡No se olvide de esto!</e> Si todo va
bien y tiene las mismas opciones que el ejemplo anterior, al
reiniciar, tendrá un menú de arranque sencillo con 5 entradas para
escoger. Si modifica su configuración yaboot en el futuro, solo hará
falta correr <c>ybin -v</c> para actualizar la partición de arranque,
ya que <c>mkofboot</c> es para la configuración inicial solamente.
</p>

<p>
Para más información acerca de yaboot, mire en <uri
link="http://penguinppc.org/projects/yaboot">yaboot
project</uri>. Mientras tanto, continue la instalación con <uri link="?part=1&amp;chap=10">Instalando las Herramientas de Sistema
Necesarias</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternativa: BootX</title>
<body>

<impo>
¡BootX solo puede ser usado en sistemas PPC tipo OldWorld!
</impo>

<p>
Si desea usar BootX, no hace falta hacer nada en esta etapa. Sin
embargo, al reiniciar, hará falta configurar el panel de control de
BootX (dentro de Mac OS). Esto lo discutiremos más adelante en la instalación.</p>

<p>
Mientras tanto, continue con <uri link="?part=1&amp;chap=10">Instalando las Herramientas de Sistema
Necesarias</uri>.
</p>
</body>
</section>

<section>
<title>Alternativa: El PROM de MIPS</title>
<subsection>
<body>

<p>
MIPS no requiere la instalación de un gestor de arranque. El PROM de
MIPS se encarga del inicio, pero debe instalar su kernel como
alternativa viable para el inicio.
</p>

<p>
Primero, instale <c>dvhtool</c>, herramienta necesaria para copiar el
kernel al Volume Header SGI.
</p>

<pre caption="Instalación de dvhtool">
# <i>emerge dvhtool</i>
</pre>

<p>
Ahora copie el kernel al Volume Header SGI. Por defecto,
<c>dvhtool</c> asume que el Volume Header SGI se encuentra en
<path>/dev/sda</path>. Si este no es el caso (por ejemplo, cuando IRIX
está instalado en <path>/dev/sda</path> y Gentoo/MIPS en
<path>/dev/sdb</path>) deberá informárselo a <c>dvhtool</c> con la
opción <c>-d &lt;device&gt;</c>.
</p>

<pre caption="Copiando un kernel al Volume Header SGI">
# <i>dvhtool --unix-to-vh &lt;nombre del kernel en /boot&gt;
  &lt;rótulo para el kernel en el volume header&gt;</i>
</pre>

<p>
Si desea ver todas las entradas disponibles en el volumen, use <c>--print-volume-directory</c>:
</p>

<pre caption="Viendo todas las entradas disponibles en el volumen">
# <i>dvhtool --print-volume-directory</i>
</pre>

<p>
Para que su sistema arranque Gentoo/MIPS, hará falta
alterar la configuración del PROM MIPS. Describiremos esto más
adelante cuando la instalación de Gentoo haya concluido.
</p>

<p>
Ahora continue con <uri link="?part=1&amp;chap=10">Instalando las Herramientas de Sistema
Necesarias</uri>.
</p>

</body>
</subsection>
</section>
</sections>
