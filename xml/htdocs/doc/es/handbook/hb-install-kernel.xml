<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/Attic/hb-install-kernel.xml,v 1.1 2004/01/26 23:56:05 chiguire Exp $ -->

<sections>
<section>
<title>Instalando las fuentes</title>
<subsection>
<title>Escogiendo un Kernel nuevo</title>
<body>

<p>
El núcleo alrededor del cual están construidas todas las
distribuciones es el kernel Linux. La etapa entre los programas del
usuario y su hardware de sistema. Gentoo provee a sus usuarios varias
alternativas en fuentes para el kernel. Un listado completo, con sus
respectivas descripciones están disponibles en la <uri
link="/doc/es/gentoo-kernel.xml">Guía del Kernel</uri>. 
</p>

<p>
Para los sistemas basados en x86, entre otros, tenemos las
<c>vanilla-sources</c> (fuentes por defecto del kernel, tal
cual las dejaron los desarrolladores de linux), las <c>gentoo-sources</c>
(fuentes modificadas para aumentar el desempeño), las
<c>gentoo-dev-sources</c> (fuentes para el kernel 2.6 modificadas para
aumentar el desempeño y mejoras para la estabilidad), las
<c>xfs-sources</c> (fuentes modificadas con el último soporte para
usar XFS), <c>gs-sources</c> (fuentes modificadas para usar en
servidores), las <c>gaming-sources</c> (fuentes modificadas para el
óptimo desempeño para juegos), ...
</p>

<p>
Para sistemas basados en alpha, tenemos las <c>vanilla-sources</c>
(fuentes por defecto del kernel, tal cual las dejaron los
desarrolladores de linux), las <c>alpha-sources</c> (fuentes
optimizadas para usuarios alpha) y las <c>compaq-sources</c> (fuentes
usadas por RedHat para Alpha y mantenidos por Compaq).
</p>

<p>
Para sistemas basados en sparc, tenemos las <c>vanilla-sources</c>
(fuentes por defecto del kernel, tal cual las dejaron los
desarrolladores de linux) y las <c>sparc-sources</c> (fuentes
optimizadas para usuarios de SPARC).
</p>

<p>
Para sistemas basados en MIPS, se puede escoger entre las
<c>mips-sources</c> (fuentes por defecto para la arquitectura MIPS) y
las <c>mips-prepatch-sources</c> (el árbol de fuentes pre-lanzamiento).
</p>

<p>
Para sistemas basados en AMD64 tenemos las <c>gentoo-dev-sources</c>
(fuentes del kernel 2.6, modificadas específicamente para estabilidad,
desempeño y soporte de hardware).
</p>

<p>
Las demás arquitecturas deben usar las fuentes del kernel optimizadas
específicamente para sí: las <c>hppa-sources</c> para HPPA o las
<c>ppc-sources</c> para PowerPC.
</p>

<p>
Escoja sus fuentes e instálelas usando <c>emerge</c>. A partir de
ahora usaremos <c>emerge --usepkg</c>, que instalará paquetes
pre-construidos si estos se encuentran disponibles (para usuarios PRG) o en
su defecto los descargarán. En otras palabras, si no desea usar
paquetes pre-construidos, puede omitir la opción <c>--usepkg</c>,
aunque no es necesario. La opción <c>--usepkg</c> se puede abreviar
usando <c>-k</c>.
</p>

<p>
En el siguiente ejemplo, instalaremos las <c>vanilla-sources</c> (ya
que las <c>gentoo-sources</c> no se encuentran disponibles para todas
las arquitecturas). Por supuesto que puede sustituirlas por las que guste:
</p>

<pre caption="Instalación de fuentes del kernel">
# <i>emerge --usepkg vanilla-sources</i>
</pre>

<p>Al mirar en <path>/usr/src</path>, deberá ver un enlace simbólico
de nombre <path>linux</path> apuntando a sus fuentes:
</p>

<pre caption="Inspeccionando el enlace simbólico del kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.22
</pre>

<p>
Si esto no es así (el enlace simbólico apunta a otras fuentes)
cámbielo antes de continuar:
</p>

<pre caption="Cambiando el enlace simbólico de las fuentes del kernel">
# <i>rm /usr/src/linux &amp;&amp; ln -s /usr/src/linux-2.4.22 /usr/src/linux</i>
</pre>

<p>
Ahora podemos configurar y compilar las fuentes del kernel. Las
arquitecturas x86 pueden usar <c>genkernel</c>, que construirá un
kernel genérico tal cual el usado en el LiveCD. Sin embargo, primero
explicaremos la configuración "manual", ya que es la mejor manera de
optimizar su entorno.
</p>

<p>
Si desea configurar manualmente su kernel, continue con <uri
link="#doc_chap2">Por defecto: Configuración Manual</uri>. Si es usuario
x86 y desea usar <c>genkernel</c>, lea preferiblemente <uri 
link="#doc_chap3">Alternativa: Usando genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section>

<title>Por defecto: Configuración Manual</title>
<subsection>
<title>Introducción</title>
<body>

<p>
La configuración manual del kernel es usualmente vista como el camino
más difícil que un usuario linux pueda transitar. Nada es más lejos de
la verdad -- luego de configurar un par de kernels ni siquiera
recordará que era difícil ;)
</p>

<p>
Sin embargo, una cosa sí es cierta: debe conocer su sistema al
comenzar a configurar un kernel manualmente. La mayoría de la
información puede recabarse examinando el contenido de
<path>/proc/pci</path> (o usando <c>lspci</c> si se encuentra
disponible). Puede usar <c>lsmod</c> para revisar qué módulos del
kernel está usando el LiveCD (así puede darle alguna idea acerca de
qué habilitar).
</p>

<p>
Ahora, vaya al directorio de fuentes del kernel y ejecute <c>make
menuconfig</c>. Esto iniciará un menú de configuración basado en ncurses.
</p>

<pre caption="Invocando menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Será presentado con varias secciones de configuración. Primero
listaremos algunas opciones que debe activar obligatoriamente (si no
Gentoo no funcionará, o funcionará a medias sin configuración adicional).
</p>

</body>
</subsection>
<subsection>
<title>Activando opciones obligatorias</title>
<body>

<p>
Primeramente, active el uso de fuentes/manejadores
experimentales. Hará falta, ya que sin esto no aparecerán algunas
importantísimas opciones de fuentes/manejadores:
</p>

<pre caption="Seleccionando fuentes/manejadores experimentales">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers"
</pre>

<p>
Ahora, diríjase a <c>File Systems</c> y seleccione el soporte para los
sistemas de archivo que use. <e>No</e> las compile como módulos, ya
que su sistema Gentoo no podrá montar sus particiones. También
seleccione soporte para memoria virtual: <c>Virtual memory</c>, el
sistema de archivos <c>/proc</c>, el sistema de archivo <c>/dev</c> y
seleccione la opción que pida montarlo automáticamente al arrancar:
<c>Automatically mount at boot</c>:
</p>

<pre caption="Seleccionando los sistemas de archivo necesarios">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot

<comment>(De-seleccione el siguiente renglón, a no ser que use un
  kernel 2.6)</comment>
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Seleccione uno o más de las siguientes opciones, como sea
  requerido por su sistema)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
Los usuarios del kernel 2.6 encontrarán que algunas de las mencionadas
opciones estarán bajo <c>Pseudo filesystems</c>, el cual es una
sub-sección de <c>File systems</c>.
</note>

<p>
Si usa PPPoE para conectarse a Internet, hará falta las siguiente
opciones en el kernel:
</p>

<pre caption="Selecting PPPoE necessary drivers">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<note>
Los usuarios del kernel 2.6 encontrarán las opciones mencionadas bajo <c>Networking
support</c>, una sub-sección de <c>Device Drivers</c>.
</note>

<p>
Las dos opciones de compresión no harán daño pero no son necesarias,
al igual que la opción <c>PPP over Ethernet</c>, que podría ser usada
únicamente por <c>rp-pppoe</c> en caso de ser configurado para hacer
PPPoE a modo de kernel.
</p>

<!-- TODO reactivate when LVM2 instructions are boarded
<p>
Si usa LVM, hay que activarlo en el kernel:
</p>

<pre caption="Seleccionando soporte para LVM">
Multi-device support (RAID and LVM) - - -&gt;
  [*] Multiple devices driver support (RAID and LVM)
  &lt;*&gt;  Logical volume manager (LVM) support
</pre>
-->

<note>
Los usuarios del kernel 2.6 encontrarán las opciones mencionadas bajo 
<c>Device Drivers</c>.
</note>

<p>
Si lo requiere, no se olvide incluir soporte en el kernel para su
tarjeta ethernet.
</p>

<p>
Ahora, de acuerdo a la arquitectura de su equipo, habrá que
seleccionar más opciones:
</p>

<ul>
<li><uri link="#doc_chap2_sect3">Habilitando opciones recomendadas para x86</uri></li>
<li><uri link="#doc_chap2_sect4">Habilitando opciones recomendadas para Alpha</uri></li>
<li><uri link="#doc_chap2_sect5">Habilitando opciones recomendadas para HPPA</uri></li>
<li><uri link="#doc_chap2_sect6">Habilitando opciones recomendadas para PPC</uri></li>
<li><uri link="#doc_chap2_sect7">Habilitando opciones recomendadas para SPARC</uri></li>
<li><uri link="#doc_chap2_sect8">Habilitando opciones recomendadas para MIPS</uri></li>
<li><uri link="#doc_chap2_sect9">Habilitando opciones recomendadas para AMD64</uri></li>
</ul>

</body>
</subsection>
<subsection>
<title>Habilitando opciones recomendadas para x86</title>
<body>

<p>
Si tiene un CPU Intel que soporte HyperThreading (tm), o un sistema
con múltiples CPUs, habilite "Symmetric multi-processing support":
</p>

<pre caption="Habilitando soporte SMP">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Al concluir la configuración del kernel, continue con <uri 
link="#compiling">Compilación e Instalación</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Habilitando opciones recomendadas para Alpha</title>
<body>

<p>
Se recomiendan las siguientes opciones para usuarios Alpha:
</p>

<pre caption="Opciones específicas para Alpha">
General setup ---&gt;
  &lt;*&gt; SRM environment through procfs
  &lt;*&gt; Configure uac policy via sysctl

Plug and Play configuration ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;M&gt;   ISA Plug and Play support

SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; SYM53C8XX Version 2 SCSI support (NEW)
    &lt;*&gt; Qlogic ISP SCSI support

Network device support ---&gt;
  Ethernet (10 or 100 Mbit) ---&gt;
    &lt;M&gt; DECchip Tulip (dc21x4x) PCI support
    &lt;M&gt; Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA
    &lt;M&gt; EtherExpressPro/100 support (eepro100)
    &lt;M&gt; EtherExpressPro/100 support (e100)
  Ethernet (1000 Mbit) ---&gt;
    &lt;M&gt; Alteon AceNIC
      [*] Omit support for old Tigon I
    &lt;M&gt; Broadcom Tigon3
  [*] FDDI driver support
  &lt;M&gt; Digital DEFEA and DEFPA
  &lt;*&gt; PPP support
    &lt;*&gt; PPP Deflate compression

Character devices ---&gt;
  [*] Support for console on serial port
  [*] Direct Rendering Manager

File systems ---&gt;
  &lt;*&gt; Kernel automounter version 4 support
  Network File Systems ---&gt;
    &lt;*&gt; NFS
      [*] NFSv3 client
      &lt;*&gt; NFS server
      [*] NFSv3 server
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*] Alpha OSF partition support
  Native Language Support
    &lt;*&gt; NLS ISO 8859-1

Sound ---&gt;
  &lt;M&gt; Sound card support
    &lt;M&gt; OSS sound modules
      [*] Verbose initialisation
      [*] Persistent DMA buffers
      &lt;M&gt; 100% Sound Blaster compatibles
</pre>

<p>
Al concluir la configuración del kernel, continue con <uri
link="#compiling">Compilación e Instalación</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Habilitando opciones recomendadas para HPPA</title>
<body>

<p>
Si tiene un ratón o tclado HIL, no se olvide incluir el soporte correspondiente.
</p>

<pre caption="Habilitando soporte para dispositivos HIL">
Input core support ---&gt;
  [*] Keyboard support
  [*] Mouse support
  [*] Event interface support
</pre>

<p>
Si no tiene ratón en su puesto HIL, use solo el soporte básico:
</p>

<pre caption="Soporte básico HIL">
HIL support ---&gt;
  [*] HIL Keyboard (basic) support
</pre>

<p>
Si desea soporte <e>completo</e> para HIL, seleccione las siguientes opciones:
</p>

<pre caption="Soporte completo para HIL">
HIL support ---&gt;
  [*] HP System Device Controller i8042 Support
  [*] HIL MLC Support
  [*] HIL Keyboard (full) support
  [*] HIL Mouse &amp; Pointer support
</pre>

<p>
Al concluir la configuración del kernel, continue con <uri
link="#compiling">Compilación e Instalación</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Habilitando opciones recomendadas para PPC</title>
<body>

<p>
Primero, inhabilite los códigos ADB directos del teclado:
</p>

<pre caption="Inhabilite los códigos ADB directos del teclado">
Macintosh Device Drivers ---&gt;
  [ ] Support for ADB raw keycodes
</pre>

<p>
Escoja el soporte RTC adecuado e <e>inhabilite</e> la opción <c>Enhanced RTC</c>:
</p>

<pre caption="Activando la opción RTC adecuada">
Character devices ---&gt;
  [ ] Enhanced RTC

General setup ---&gt;
  [*] Support for /dev/rtc
</pre>

<p>
Los usuarios de máquinas OldWorld querrán soporte HFS para poder
copiar kernels compilados a la partición MacOs.
</p>

<pre caption="Activando soporte para HFS">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
Cuando concluya la configuración del kernel, continue con <uri
link="#compiling">Compilación e Instalación</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Habilitando opciones recomendadas para SPARC</title>
<body>

<p>
Primero active el soporte correcto para el bus:
</p>

<pre caption="Habilite soporte SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>(Sólo para adaptador
  ranura UPA usado en varios modelos Ultra)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Sólo para adaptador
  ranura SBUS usado en varios modelos SPARCStation)</comment>
</pre>

<p>
Por supuesto, también desea soporte para el OBP:
</p>

<pre caption="Active soporte OBP">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
También le hará falta soporte específico para SCSI:
</p>

<pre caption="Habilite soporte específico para SCSI">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Sólo para
  adaptadores SCSI SPARC ESP en la tarjeta madre)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Sólo para
  adaptadores SCSI SBUS de PTI o QLogic)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Sólo para
  adaptador SCSI en la tarjeta madre del modelo Ultra 60)</comment>
</pre>

<p>
Para compilar soporte para su tarjeta de red, seleccione uno de los siguientes:
</p>

<pre caption="Activando soporte de red">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>(Only for SPARCStation, older Ultra systems, and as Sbus option)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>(Only for Ultra; also supports "qfe" quad-ethernet on PCI and Sbus)</comment>
</pre>

<p>
Al concluir la configuración de su kernel, continue con <uri
link="#compiling">Compilación e Instalación</uri>. Sin embargo, luego
de haber compilado el kernel, debe revisar su tamaño:
</p>

<pre caption="Revise tamaño del kernel">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
Si el tamaño no comprimido resulta mayor que 2.5 Mb (para Sparc 32) o
3.5 Mb (para Sparc 64), reconfigure su kernel hasta que no exceda
estos límites. Una manera de hacer esto es compilar la mayoría de los
manejadores (drivers) del kernel como módulos. El ignorar esta
advertencia puede producir un kernel que no arranque.
</p>

<p>
Además, si su kernel está un poquito pasado de tamaño, puede
despojarlo de símbolos con el comando m<c>strip</c>:
</p>

<pre caption="Despojando el kernel de símbolos">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection>
<title>Habilitando opciones recomendadas para MIPS</title>
<body>

<p>
Si está usando un sistema basado en Indy/Indigo2, hará falta activar
el soporte correspondiente.
</p>

<pre caption="Activando soporte SGI IP22">
Machine selection ---&gt;
  [*] Support for SGI IP22 (Indy/Indigo2)
</pre>

<p>
Si desea ejecutar binarios de Irix, incluya la siguiente opción:
</p>

<pre caption="Incluya soporte para binarios IRIX">
General setup ---&gt;
  [*] Include IRIX binary compatibility
</pre>

<p>
Si tiene tarjetas ISA/EISA en su Indigo2 SGI, active el soporte correspondiente.
</p>

<pre caption="Habilite soporte ISA/EISA para Indigo2 SGI">
General setup ---&gt;
  [*] Indigo-2 (IP22) EISA bus support
  [*]   ISA bus support
</pre>

<p>
Si tiene un puerto paralelo SGI, puede habilitar este soporte. Si
en cambio tiene un puerto paralelo ISA, debe seleccionar el soporte
para hardware estilo PC (PC-style hardware).
</p>

<pre caption="Habilitando soporte para el puerto paralelo SGI">
Parallel port support  ---&gt;
  &lt;*&gt; Parallel port support
  &lt;*&gt;   SGI Indy/Indigo2 hardware (EXPERIMENTAL) (NEW)
  &lt;*&gt;   IEEE 1284 transfer modes (NEW)
</pre>

<p>
Si desea usar las ranuras ISA del Indigo2, habilite soporte para plug
and play.
</p>

<pre caption="Habilitando soporte PnP para ISA">
Plug and Play configuration  ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;*&gt;   ISA Plug and Play support
</pre>

<p>
No se olvide habilitar soporte SCSI y usar el manejador SGI WD93C93:
</p>

<pre caption="Habilitando soporte para el manejador WD93C93">
SCSI low-level drivers  ---&gt;
  &lt;*&gt; SGI WD93C93 SCSI Driver
</pre>

<p>
Para las tarjetas de red probablemente hará falta soporte para el
controlador ethernet Seeq de SGI:
</p>

<pre caption="Habilitando soporte para SGI Seeq">
Network device support  ---&gt;
  Ethernet (10 or 100Mbit)  ---&gt;
    [*] Ethernet (10 or 100Mbit)
    [*]   SGI Seeq ethernet controller support
</pre>

<p>
No se olvide habilitar soporte para la consola serial y el SGI
Zilog85C30:</p>

<pre caption="Active soporte para SGI Zilog85C30">
Character devices ---&gt;
  [*] Non-standard serial port support
  [*]   SGI Zilog85C30 serial support
</pre>

<p>
Tampoco deje de habilitar soporte para el guardián (watchdog) Indy/I2
al igual que para el RTC DS1286:
</p>

<pre caption="Habilitando soporte para el guardián y el RTC">
Character Devices ---&gt;
  [*] SGI DS1286 RTC support
  Watchdog Cards  ---&gt;
    [*] Watchdog Timer Support
    &lt;*&gt;   Indy/I2 Hardware Watchdog
</pre>

<p>Active soporte también para las particiones de disco SGI :)
</p>

<pre caption="Activando soporte para las particiones SGI">
File Systems ---&gt;
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*]   SGI partition support
</pre>

<p>
Si tiene una tarjeta gráfica Newport SGI (XL Gfx) y desea usarla,
active el soporte:
</p>

<pre caption="Active el soporte para tarjeta Newport SGI">
Console drivers  ---&gt;
  &lt;*&gt; SGI Newport Console support (NEW)
</pre>

<p>Si desea sonido para su Indy/Indigo2, active el soporte:
</p>

<pre caption="Habilitando soporte para el HAL2 SGI">
Sound  ---&gt;
  &lt;*&gt; Sound card support
  &lt;*&gt;   SGI HAL2 sound (EXPERIMENTAL)
</pre>

<p>
Al concluir la configuración del kernel, continue con <uri
link="#compiling">Compilación en Instalación</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Habilitando opciones recomendadas para AMD64</title>
<body>

<p>
Si tiene un sistema Opteron con varios CPU, active "Symmetric
multi-processing support":
</p>

<pre caption="Activando el soporte para SMP">
Processor type and features ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Al concluir la configuración del kernel, continue con <uri
link="#compiling">Compilación e Instalación</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilación e Instalación</title>
<body>

<p>
Ahora que su kernel está configurado, llegó la hora de compilar e
instalarlo. Sálgase de la configuración y ejecute: <c>make dep &amp;&amp; make bzImage modules 
modules_install</c>:
</p>

<pre caption="Compilando el kernel">
<comment>(Para sistemas basados en x86, kernel 2.4)</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>(Para otros sistemas, kernel 2.4)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(Para sistemas amd64, kernel 2.6)</comment>
# <i>make bzImage modules modules_install</i>

<comment>(Para otros sistemas, kernel 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Al concluir la compilación, copie la imagen del kernel a
<path>/boot</path>. En el siguiente ejemplo asumimos que ha
configurado y compilado las fuentes <c>vanilla-sources-2.4.22</c>
(¡tal vez no sean las adecuadas para la arquitectura de su procesador!:
</p>

<pre caption="Instalando el kernel">
<comment>(Para sistemas x86)</comment>
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.4.22</i>
# <i>cp System.map /boot/System.map-2.4.22</i>

<comment>(Para sistemas amd64)</comment>
# <i>cp arch/x86_64/boot/bzImage /boot/kernel-2.4.22</i>

<comment>(Para otros sistemas)</comment>
# <i>cp vmlinux /boot/kernel-2.4.22</i>
# <i>cp System.map /boot/System.map-2.4.22</i>
</pre>

<p>
Es buena idea copiar el archivo con la configuración del kernel a 
<path>/boot</path>, por si acaso :)
</p>

<pre caption="Respaldando su configuración del kernel">
# <i>cp .config /boot/config-2.4.22</i>
</pre>

<p>
Si es usuario de MIPS y su sistema no arranca los kernels en formato
ELF, compile el kernel con <c>make vmlinux.ecoff</c> en vez de <c>make
vmlinux</c>. La imagen será grabada en
<path>arch/mips/boot/vmlinux.ecoff</path> en vez de
<path>vmlinux</path>.
</p>

<p>
Ahora continue con <uri link="#doc_chap4">Instalando módulos del
kernel separados</uri>. 
</p>

</body>
</subsection>
</section>
<section>
<title>Alternativa: Usando genkernel</title>
<body>

<p>
Si está leyendo esta sección, ha escogido usar nuestro guión
<c>genkernel</c> para configurar el kernel. Sin embargo, esto también
significa que tiene un sistema x86. Las demás arquitecturas <e>no
están soportadas</e> por <c>genkernel</c>.
<!-- TODO: Add ppc as it should be available with the first
2004 release -->
</p>

<p>
Ahora que está instalado el árbol con las fuentes, ha llegado la hora
de compilar el kernel usando nuestro guión  <c>genkernel</c>, que
automáticamente le construirá un kernel. <c>genkernel</c> funciona
configurando un kernel casi idénticamente al kernel del LiveCD. Esto
significa que al usar <c>genkernel</c>, su sistema detectará todo el
hardware al arrancar, tal como lo hace el LiveCD. Ya que
<c>genkernel</c> no requiere configuración manual, es una solución
ideal para los usuarios que no se sienten cómodos compilando sus
propios kernel.
</p>

<p>
Ahora, veamos como usar genkernel. Primero instale el ebuild genkernel:
</p>

<pre caption="Instalando genkernel con emerge">
# <i>emerge --usepkg genkernel</i>
</pre>

<p>
Ahora, compile sus fuentes del kernel ejecutando <c>genkernel</c>. Le
advertimos que, como <c>genkernel</c> compila un kernel que soporta
casi todo el hardware, ¡esto puede tomar algo de tiempo para concluir!
</p>

<pre caption="Ejecutando genkernel">
# <i>genkernel</i>
Gentoo Linux genkernel, version 1.4
Copyright 2003 Gentoo Technologies, Inc., Bob Johnson, Daniel Robbins
Distributed under the GNU General Public License version 2

Settings:
compile optimization: 1 processor(s)
source tree: /usr/src/linux-2.4.22
config: gentoo (customized)
config loc: /etc/kernels/config-2.4.22
initrd config: (default) /etc/kernels/settings

* Running "make oldconfig"...                                                                     [ ok ]
* Logging to /var/log/genkernel.log...                                                            [ ok ]
* Starting 2.4.22 build...                                                                        [ ok ]
* Running "make dep"...                                                                           [ ok ]
* Running "make bzImage"...                                                                       [ ok ]
* Running "make modules"...                                                                       [ ok ]
* Running "make modules_install"...                                                               [ ok ]
* Moving bzImage to /boot/kernel-2.4.22...                                                        [ ok ]
* Building busybox...                                                                             [ ok ]
* Creating initrd...                                                                              [ ok ]

* Build completed successfully!

* Please specify /boot/kernel-2.4.22 and /boot/initrd-2.4.22
* when customizing your boot loader configuration files.
</pre>

<p>
Una vez que termine <c>genkernel</c>, se habrá creado un kernel, un
juego completo de módulos y una <e>imagen de arranque</e>
(initrd). Usaremos el kernel y la imagen de arranque para configurar
el gestor de arranque más adelante en este documento. Escriba los
nombres del kernel y de la imagen de arranque porque le harán falta al
escribir el archivo de configuración del gestor de arranque. La imagen
de arranque será iniciada al arrancar para realizar tareas de
autodetección de hardware (así como el LiveCD) antes que arranque su
"verdadero" sistema.
</p>

<p>
Ahora tomaremos un paso más para hacer que nuestro sistema se parezca
aún más al LiveCD -- hagamos emerge <c>hotplug</c>. Mientras que la
imagen de arranque autodetecta el hardware requerido para arrancar su
sistema, <c>hotplug</c> autodetecta todo lo demás. Para instalar y
habilitar <c>hotplug</c>, escriba:
</p>

<pre caption="Instalando y activando hotplug">
# <i>emerge --usepkg hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

</body>
</section>
<section>
<title>Instalando módulos del kernel por separado</title>
<subsection>
<title>Instalando módulos adicionales</title>
<body>

<p>
Si fuese apropiado, debe hacer emerge de los ebuild para cualquier
hardware adicional existente en su sistema. Aquí hay una lista de
ebuilds relacionados con el kernel que puede instalar:
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>Ebuild</th>
  <th>Propósito</th>
  <th>Comando</th>
</tr>
<tr>
  <ti>nvidia-kernel</ti>
  <ti>Gráficos acelerados NVIDIA para XFree86</ti>
  <ti><c>emerge --usepkg nvidia-kernel</c></ti>
</tr>
<tr>
  <ti>nforce-net</ti>
  <ti>Controlador ethernet en tarjetas madre NVIDIA NForce(2)</ti>
  <ti><c>emerge nforce-net</c></ti>
</tr>
<tr>
  <ti>nforce-audio</ti>
  <ti>Controlador audio en tarjetas madre NVIDIA NForce(2)</ti>
  <ti><c>emerge nforce-audio</c></ti>
</tr>
<tr>
  <ti>e100</ti>
  <ti>Interfaces de red Intel e100</ti>
  <ti><c>emerge e100</c></ti>
</tr>
<tr>
  <ti>e1000</ti>
  <ti>Interfaces de red Intel e1000 gigabit</ti>
  <ti><c>emerge e1000</c></ti>
</tr>
<tr>
  <ti>emu10k1</ti>
  <ti>Soporte para tarjetas de sonido Creative Sound Blaster Live!/Audigy</ti>
  <ti><c>emerge emu10k1</c></ti>
</tr>
<tr>
  <ti>ati-drivers</ti>
  <ti>Gráficos acelerados ATI Radeon 8500+/FireGL para XFree86</ti>
  <ti><c>emerge ati-drivers</c></ti>
</tr>
<tr>
  <ti>xfree-drm</ti>
  <ti>Gráficos acelerados para tarjetas ATI Radeon hasta el modelo
  9200, Rage128, Matrox, Voodoo y otras para XFree86
  </ti>
  <ti><c>VIDEO_CARDS="sutarjeta" emerge xfree-drm</c></ti>
</tr>
</table>

<p>Le advertimos que algunos de estos ebuild manejan dependencias
grandes. Para verificar qué paquetes serán instalados use <c>emerge 
--pretend</c>. Por ejemplo, para el paquete<c>emu10k1</c>:
</p>

<pre caption="Visualizar listado completo de paquetes a instalar">
# <i>emerge --pretend emu10k1</i>
</pre>

<p>
Si no le gusta algunos paquetes que serán instalados, use <c>emerge --pretend 
--verbose</c> para verificar cuáles variables USE están indicadas al
decidir las dependencias:</p>

<pre caption="Visualizar variables USE">
# <i>emerge --pretend --verbose emu10k1</i>
<comment>...</comment>
[ebuild  N    ] media-sound/aumix-2.8  +gpm +nls +gtk +gnome +alsa -gtk2
</pre>

<p>
En el pasado ejemplo podemos ver que una de las dependencias de
<c>emu10k1</c> (<c>aumix</c>) usa las variable USE <c>gtk</c> y
<c>gnome</c> haciendo que gtk (que a su vez depende de XFree) sea
compilado también.
</p>

<p>
Si no desea que esto sea compilado, inhabilite las variables USE, así:
</p>

<pre caption="Haciendo emerge emu10k1 con las variables USE inhabilitadas">
# <i>USE="-gpm -nls -gtk -gnome -alsa" emerge --pretend emu10k1</i>
</pre>

<p>
Si está contento con los resultados, elimine <c>--pretend</c> para
comenzar la instalación de <c>emu10k1</c>.
</p>

</body>
</subsection>
<subsection>
<title>Configurando los módulos</title>
<body>

<p>
Si no está usando <c>hotplug</c>, debe listar los módulos que desee
cargar automáticamente en
<path>/etc/modules.autoload.d/kernel-2.4</path> (o
<path>kernel-2.6</path>). También puede agregar opciones adicionales a
los módulos, si lo desea.
</p>

<p>
Para ver todos los módulos disponibles, ejecute el siguiente comando
<c>find</c>. No se olvide sustituir "&lt;kernel version&gt;" por la
versión del kernel acabado de compilar:
</p>

<pre caption="Visualizando todos los módulos disponibles">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o'</i>
</pre>

<p>
Por ejemplo, si desea cargar automáticamente el módulo <c>3c59x.o</c>:
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.4 o kernel-2.6">
3c59x
</pre>

<p>
Ahora ejecute el comando <c>modules-update</c> para escribir los
cambios al archivo <path>/etc/modules.conf</path>:
</p>

<pre caption="Ejecutando el comando modules-update">
# <i>modules-update</i>
</pre>

<p>Continue la instalación con <uri
link="?part=1&amp;chap=8">Configurando su sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
