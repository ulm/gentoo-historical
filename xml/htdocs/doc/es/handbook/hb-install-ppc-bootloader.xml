<?xml version = '1.0' encoding = 'UTF-8' ?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/hb-install-ppc-bootloader.xml,v 1.2 2005/05/30 13:07:05 chiguire Exp $ -->

<sections>

<version>2.4</version>
<date>2005-05-12</date>
  
<section>
<title>Realizando su elección</title>
<subsection>
<title>Introducción</title>
<body>

<p>
Ahora que su kernel está configurado y compilado y los archivos de
configuración necesarios han sido editados correctamente, ha llegado
la hora de instalar el programa que iniciará el kernel cuando arranque
el sistema. Este programa es conocido como <e>gestor de arranque</e>
(o  <e>bootloader</e>). Pero antes de empezar, consideremos nuestras
opciones ...
</p>

<p>
Existen algunos gestores de arranque para Linux/PPC. Tenemos <uri
link="#yaboot" >yaboot</uri> (para máquinas NewWorld Apple e IBM) y
<uri link="#bootx" >BootX</uri> (para máquinas OldWorld Apple e
IBM). Las Pegasos no necesita gestor de arranque, pero se incluye <uri
link="#bootcreator" >BootCreator</uri> para crear un menú de inicio
SmartFirmware.
</p>
</body>
</subsection>
</section>

<section id="yaboot" >
<title>Por defecto: yaboot</title>
<subsection>
<title>Introducción</title>
<body>
	
<impo>
¡yaboot sólo puede usarse en sistemas NewWorld Apple o IBM!
</impo>

<p>
Primero tenemos que crear los ficheros de <path>/dev</path> en nuestro
nuevo home, paso necesario para la instalación del gestor de
arranque. Se puede hacer haciendo &quot;bind-mapping&quot; del sistema
de ficheros <path>/dev</path> del CD de instalación:
</p>

<pre caption="Montando y enlazando el sistema de ficheros /dev" >
# <i>exit</i>   # para salir del chroot
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>

<p>
Hay dos formas de configurar yaboot. Se puede utilizar
<c>yabootconfig</c> para hacerlo automáticamente. Y si por cualquier
razón no queremos emplearlo para configurar
<path>/etc/yaboot.conf</path> o se está instalando Gentoo en un G5
(donde <c>yabootconfig</c> no siempre funciona),  se puede simplemente
editar el fichero de ejemplo ya creado en su sistema.
</p>

<note>
Necesitaremos editar el fichero yaboot.conf si usamos genkernel. Los
argumentos propuestos por el ebuild genkernel deberán ser añadidos
como opciones del núcleo en la sección correspondiente. La parte
relevante de yaboot.conf se muestra a continuación:
</note>

<pre caption="Añadiendo opciones de arranque a yaboot.conf" >
<comment>#################
## Esta sección se puede duplicar si tenemos más de un núcleo o conjunto de
## opciones de arranque - reemplazaremos 2.6.9 con la versión del núcleo
#################</comment>
image=/boot/kernel-2.6.9
label=Linux
root=/dev/ram0		<comment># /dev/ram0 si se usa genkernel</comment>
partition=3
sysmap=/boot/System.map-2.6.9
append=&quot;real_root=/dev/hda3 init=/linuxrc&quot;	<comment># Añadir los argumentos en esta línea</comment>
read-only
<comment>##################</comment>
</pre>

<ul>
<li><uri link="#yabootconfig" >Por defecto: yabootconfig</uri>
</li>
<li><uri link="#manual_yaboot" >Alternativa: Configuración manual de yaboot</uri>
</li>
</ul>
</body>
</subsection>

<subsection id="yabootconfig" >
<title>Por defecto: yabootconfig</title>
<body>
	
<p>
<c>yabootconfig</c> autodetectará las particiones en nuestra máquina y
configurará un arranque múltiple con Linux, Mac OS y Mac OS X.
</p>

<p>
Para usar <c>yabootconfig</c>, el disco debe tener una partición
Apple_Bootstrap, y <path>/etc/fstab</path> debe estar configurado con
las particiones Linux. Ambos requisitos deben de haberse satisfecho ya
si se han seguido los capítulos anteriores del manual. Para empezar,
nos aseguraremos tener la versión más reciente de <c>yaboot</c>. 
</p>

<pre caption="Instalación de yaboot con GRP" >
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Ahora saldremos del chroot y ejecutaremos <c>yabootconfig --chroot
/mnt/gentoo</c>. El programa pedirá confirmación de la ubicación de la
partición de arranque. Pulsaremos <c>Y</c> si es correcta. Si no lo
es, volveremos a comprobar <path>/etc/fstab</path>. Seguidamente,
yabootconfig revisará la configuración del sistema, creará
<path>/etc/yaboot.conf</path> y ejecutará por nosotros
<c>mkofboot</c>. <c>mkofboot</c> se utiliza para formatear la
partición Apple_Bootstrap, e instala el fichero de configuración de
yaboot en ella. Después de esto, entraremos en el chroot nuevamente.
</p>

<pre caption="enter chroot" >
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Debemos verificar el contenido de <path>/etc/yaboot.conf</path>. Si lo
modificamos (por ejemplo para indicar el sistema operativo por
defecto) debemos asegurarnos de volver a ejecutar <c>ybin -v</c> para
aplicar los cambios en la partición Apple_Bootstrap.
</p>

<p>
Ahora, continuaremos en <uri link="#reboot" >Reiniciando el sistema</uri>.
</p>
</body>
</subsection>

<subsection id="manual_yaboot" >
<title>Alternativa: Configuración manual de yaboot</title>
<body>

<p>
En primer lugar, nos aseguraremos que se ha instalado versión más
reciente de <c>yaboot</c>.
</p>

<pre caption="Instalación de yaboot" >
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
A continuación se encuentra un fichero <path>yaboot.conf</path>
completo que adaptaríamos si fuese necesario. Los usuarios de un G5
deben tener cuidado si sus discos son Serial ATA ya que son vistos
como discos SCSI por el núcleo Linux (en este caso, se cambiaremos
<path>/dev/hda</path> con <path>/dev/sda</path>).
</p>

<pre caption="/etc/yaboot.conf" >
<comment>## /etc/yaboot.conf
##
## Más detalles en &quot;man yaboot.conf&quot;. ¡No se deben hacer cambios hasta haberlo consultado!
## Hay más ejemplos de configuración en /usr/share/doc/yaboot/examples.
##
## En un menú de arranque múltiple, se añadirían una o más de las siguientes opciones:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## nuestra partición de bootstrap:</comment>

boot=/dev/hda2

<comment>## ofboot es la forma openfirmware para especificar la partición de arranque.
## Si no se especifica nada, yaboot falla en los G5 y algunos G4 (a menos que
## se pasen los parámetros necesarios al programa mkofboot/ybin program).
## hd:X significa /dev/sdaX (o /dev/hdaX).
## 
## Los usuarios de G5 deben descomentar esta línea!!

#ofboot=hd:2

## hd: corresponde a hda para open firmware</comment>
device=hd:

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Esta sección puede duplicarse si tiene más de un núcleo o conjunto de
## opciones de arranque - reemplazaremos 2.6.9 con nuestra versión del núcleo
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/hda3
  partition=3
  sysmap=/boot/System.map-2.6.9
  read-only
<comment>##################

## Los usuarios de G5 y algunos de G4 deben indicar
##   macos=hd:13
##   macosx=hd:12
## en lugar de los valores de ejemplo.</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Una vez que <path>yaboot.conf</path> esté configurado a nuestro gusto,
ejecutaremos <c>mkofboot -v</c> para instalar las configuraciones en
la partición de arranque. <e>¡No lo olvidemos!</e> Hay que confirmar
la creación del nuevo sistema de ficheros que propone
<c>mkofboot</c>.
</p>

<p>
Si todo funciona correctamente, y tenemos las mismas opciones que en
el ejemplo anterior, el próximo reinicio debe mostrar un menú inicial
con cinco entradas. Si se actualiza la configuración de yaboot
posteriormente sólo se deberá ejecutar <c>ybin -v</c> para actualizar
la partición de arranque. <c>mkofboot</c> sólo se utiliza para la
primera instalación. 
</p>

<p>
Para más información a cerca de yaboot, se puede hojear <uri
link="http://penguinppc.org/bootloaders/yaboot" >yaboot
project</uri>. Ahora continuaremos la instalación con <uri
link="#reboot" >Reiniciando el sistema</uri>. 
</p>
</body>
</subsection>
</section>

<section id="bootx" >
<title>Alternativa: BootX</title>
<body>
	
<impo>
¡BootX sólo puede usarse en sistemas Apple e IBM OldWorld!
</impo>

<p>
Puesto que BootX arranca Linux después de MacOS, el núcleo necesitará
ser copiado desde la partición Linux a la partición MacOS. Primero
montaremos la partición MacOS fuera del chroot. Usaremos <c>mac-fdisk
-l</c> para encontrar el número de la partición MacOS, que en el
ejemplo siguiente será sda6. Una vez que la partición esté montada,
copiaremos el núcleo en la carpeta del sistema donde BootX pueda
encontrarlo.
</p>

<pre caption="Copia del kernel en la partición MacOS" >
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux &quot;/mnt/mac/System Folder/Linux Kernels&quot;</i>
</pre>

<p>
Si se usa genkernel, el núcleo se encuentra en un lugar distinto y también deberá copiarse initrd.
</p>

<pre caption="Copia del kernel e initrd compilados con genkernel a la partición MacOS" >
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* &quot;/mnt/mac/System Folder/Linux Kernels&quot;</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initrd-* &quot;/mnt/mac/System Folder&quot;</i>
</pre>

<p>
Ahora que el núcleo ha sido copiado, desmontaremos todos los sistemas
de ficheros montados e introduciremos el comando mágico que hemos
estado esperando con impaciencia: <c>reboot</c>.
</p>

<pre caption="Desmontando todas las particiones y reiniciando" >
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Desde luego, no nos olvidemos de quitar cualquier medio arrancable
puesto que MacOS necesita iniciarse esta vez.
</p>

<p>
Ahora que la máquina ha arrancado en MacOS, abriremos el panel de
control de BootX y seleccionaremos <c>Options</c>, desactivando
<c>Used specified RAM disk</c> si no usamos genkernel. Usando
genkernel, deberemos asegurarnos que el initrd de genkernel está
seleccionado en lugar del initrd del CD de instalación. Si no se usa
genkernel, hay una opción para especificar el disco y la partición
raíz de Linux. La rellenaremos con los valores apropiados. Dependiendo
de la configuración del núcleo probablemente deberemos aplicar algunos
parámetros de inicio del núcleo.
</p>

<p>
BootX puede ser configurado para arrancar Linux en el inicio. Si
elegimos esta opción, el ordenador arrancará MacOS y después cargará
BootX que a su vez iniciará Linux. Hay más información disponible en
<uri link="http://penguinppc.org/bootloaders/bootx/" >Boot X home
page</uri>.
</p>

<p>
Ahora reiniciaremos otra vez cargando Linux, y luego continuaremos con <uri link="?part=1&amp;chap=11" >Finalizando la instalación de Gentoo</uri>.
</p>
</body>
</section>

<section id="bootcreator" >
<title>Alternativa: BootCreator</title>
<body>
	
<impo>
BootCreator creará un bonito menú de arranque SmartFirmware escrito en
Forth para el sistema Pegasos.
</impo>

<p>
Primero nos aseguraremos de tener la última versión de
<c>bootcreator</c> instalada:
</p>

<pre caption="Instalación de bootcreator" >
# <i>emerge --usepkg --update bootcreator</i>
</pre>

<p>
Ahora copiaremos el fichero <path>/etc/bootmenu.example</path> en 
<path>/etc/bootmenu</path> y lo editaremos convenientemente:
</p>

<pre caption="Edición del fichero de configuración de bootcreator" >
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
A continuación se encuentra un fichero de configuración
de<path>/etc/bootmenu</path> completo. Lo modificaremos tal como se
necesite:
</p>

<pre caption="fichero de configuración de bootcreator" >
<comment>#
# Ejemplo de fichero de configuración para bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags=&quot;logkprintf&quot;

[SECTION]
Local HD -> Linux 2.6.10 (Normal)
ide:0 linux-2.6.10 video=radeonfb:1024x768@70 root=/dev/hda3

</pre>

<p>
Finalmente <path>bootmenu</path> debe transferirse a Forth y copiarse
a la partición de inicio para que SmartFirmware pueda leerlo. Para
ello deberemos ejecutar <c>bootcreator</c>:
</p>

<pre caption="Instalación de bootmenu" >
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
Durante el siguiente reinicio nos aseguraremos de revisar en la
configuración de SmartFirmware que <path>menu</path> es el fichero que
se cargará por defecto.
</note>

<p>
Ahora continuaremos con la instalación en <uri link="#reboot"
>Reiniciando el sistema</uri>.
</p>
</body>
</section>

<section id="reboot" >
<title>Reiniciando el sistema</title>
<subsection>
<body>
	
<p>
Salimos del entorno chroot y desmontamos todas las particiones que
continúen montadas. Después podremos ejecutar el mágico comando que
hemos estado esperando: <c>reboot</c>.
</p>

<pre caption="Desmontando todas las particiones y reiniciando" >
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Una vez que se haya reiniciado nuestra instalación de Gentoo,
acabaremos con<uri link="?part=1&amp;chap=11" >Finalizando la
instalación de Gentoo</uri>.
</p>
</body>
</subsection>
</section>
</sections>
