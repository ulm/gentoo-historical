<?xml version = '1.0' encoding = 'UTF-8' ?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/hb-install-ppc-bootloader.xml,v 1.4 2005/09/11 16:19:48 yoswink Exp $ -->

<sections>

<version>2.7</version>
<date>2005-09-05</date>
  
<section>
<title>Elegir un gestor de arranque</title>
<subsection>
<title>Introducción</title>
<body>

<p>
Ahora que su núcleo está configurado y compilado se necesita un <e>gestor de
arranque</e>, o bootloader, para poder iniciar su nueva instalación de Linux.
El <e>gestor de arranque</e> que usaremos dependerá del tipo de máquina PPC de
que se trate.
</p>

<p>
Si está utilizando una máquina IBM o Apple NewWorld, necesita usar <uri
link="#yaboot" >yaboot</uri>. Con las máquinas Apple OldWorld tenemos dos
opciones, <uri link="#bootx" >BootX</uri> (recomendado) y <uri 
link="#quik">quik</uri>. Las Pegasos no necesitan gestor de arranque, pero 
se necesita instalar <uri link="#bootcreator" >BootCreator</uri> para crear 
un menú de inicio SmartFirmware.
</p>

</body>
</subsection>
</section>
<section id="yaboot" >
<title>Por defecto: yaboot</title>
<subsection>
<title>Introducción</title>
<body>
	
<impo>
¡yaboot sólo puede usarse en sistemas NewWorld Apple o IBM!
</impo>

<p>
Para poder encontrar los dispositivos de arranque yaboot necesita acceder
al sistema de ficheros <path>/dev</path>. Para ello, necesitará hacer
"bind-mapping" del sistema de ficheros <path>/dev</path> del CD de 
instalación en el <path>/dev</path> del entorno de chroot.
</p>

<pre caption="Montando y enlazando el sistema de ficheros /dev" >
# <i>exit</i>   # para salir del chroot
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>

<p>
Para configurar yaboot, puede usar <c>yabootconfig</c> para que se cree
automáticamente un fichero de configuración. Si estamos instalando Gentoo en
un G5 (donde <c>yabootconfig</c> no siempre funciona), o pensamos arrancar 
desde firewire o USB, debemos configurarlo manualmente.
</p>

<note>
Necesitaremos editar el fichero yaboot.conf si usamos genkernel, incluso 
habiendo utilizado yabootconfig. La sección de la imagen del núcleo de 
yaboot.conf deberá ser modificada así:
</note>

<pre caption="Añadiendo opciones de arranque de genkernel a yaboot.conf" >
<comment>###########################################################
## Esta sección se puede duplicar si tenemos más de un 
## núcleo o conjunto de opciones de arranque - reemplazaremos 2.6.12
## con el nombre exacto del fichero del núcleo
###########################################################</comment>
image=/boot/kernel-2.6.9
label=Linux
root=/dev/ram0		<comment># es /dev/ram0 si se usa genkernel</comment>
partition=3
append="real_root=/dev/hda3 init=/linuxrc"
<comment># Podemos añadir argumentos adicionales al kernel tal como
# rootdelay=10 for a USB/Firewire Boot</comment>
read-only
<comment>##########################################################</comment>
</pre>

<ul>
<li><uri link="#yabootconfig" >Por defecto: yabootconfig</uri>
</li>
<li><uri link="#manual_yaboot" >Alternativa: Configuración manual de yaboot</uri>
</li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig" >
<title>Por defecto: yabootconfig</title>
<body>
	
<p>
<c>yabootconfig</c> autodetectará las particiones en nuestra máquina y
configurará un arranque múltiple con Linux, Mac OS y Mac OS X.
</p>

<p>
Para usar <c>yabootconfig</c>, el disco debe tener una partición
Apple_Bootstrap, y <path>/etc/fstab</path> debe estar configurado con
las particiones Linux. Ambos requisitos deben de haberse satisfecho ya.
Para empezar,nos aseguraremos tener instalada la versión más reciente 
de <c>yaboot</c>. 
</p>

<pre caption="Instalación de yaboot con GRP" >
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Ahora saldremos del chroot y ejecutaremos <c>yabootconfig --chroot
/mnt/gentoo</c>. Pedirá confirmación de la ubicación de la partición
Apple_Bootstrap. Pulsaremos <c>Y</c> si es correcta. Si no lo
es, comprobaremos <path>/etc/fstab</path> para asegurarnos que las rutas 
de los dispositivos son correctas. Una vez que la partición de bootstrap
ha sido seleccionada, <c>yabootconfig</c> revisará la configuración del
sistema, creará <path>/etc/yaboot.conf</path> y ejecutará <c>mkofboot</c>.
<c>mkofboot</c> se utiliza para formatear la partición Apple_Bootstrap, e
instalar el fichero de configuración de yaboot en ella. Después de esto,
entraremos en el chroot nuevamente.
</p>

<pre caption="Volver a entrar en el chroot" >
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Puede que queramos verificar el contenido de <path>/etc/yaboot.conf</path>. 
Si lo modificamos (por ejemplo para indicar el sistema operativo por
defecto) debemos asegurarnos de volver a ejecutar <c>ybin -v</c> para
aplicar los cambios en la partición Apple_Bootstrap.
</p>

<p>
Ahora, continuaremos en <uri link="#reboot" >Reiniciando el sistema</uri>.
</p>

</body>
</subsection>
<subsection id="manual_yaboot" >
<title>Alternativa: Configuración manual de yaboot</title>
<body>

<p>
En primer lugar, nos aseguraremos que se ha instalado versión más
reciente de <c>yaboot</c>.
</p>

<pre caption="Instalación de yaboot" >
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
A continuación se encuentra un ejemplo del fichero <path>yaboot.conf</path>, 
pero deberemos adaptarlo a nuestras necesidades. Los usuarios de un G5 y los 
que arranquen de firewire o USB deben tener cuidado que sus discos sean 
vistos como discos SCSI por el núcleo Linux, por lo que necesitaremos cambiar 
<path>/dev/hda</path> por <path>/dev/sda</path>).
</p>

<pre caption="/etc/yaboot.conf" >
<comment>## /etc/yaboot.conf
##
## Más detalles en &quot;man yaboot.conf&quot;. ¡No se deben hacer cambios hasta haberlo consultado!
## Hay más ejemplos de configuración en /usr/share/doc/yaboot/examples.
##
## En un menú de arranque múltiple, se añadirían una o más de las siguientes opciones:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## nuestra partición de bootstrap:</comment>

boot=/dev/hda2

<comment>## ofboot es la forma openfirmware para especificar la partición de arranque.
## Si no se especifica nada, yaboot falla en los G5 y algunos G4 (a menos que
## se pasen los parámetros necesarios al programa mkofboot/ybin program).
## hd:X significa /dev/sdaX (o /dev/hdaX).
## 
## ¡¡Los usuarios de G5 deben descomentar esta línea!!
#ofboot=hd:2

## Los usuarios que arranquen desde firewire deben usar una línea similar 
## a esta:
# ofboot=fw/node/sbp-2/disk@0:

## Los que arranquen desde USB deben tener algo como:
# ofboot=usb/disk@0:

## hd: es la abreviatura del primer disco duro que ve OpenFirmware</comment>
device=hd:

<comment>## Los usuarios de Firewire y USB deberán especificar el nombre entero
## del dispositivo OF.
## Se puede encontrar usando ofpath, incluido con yaboot.
	
# device=fw/node@0001d200e00d0207/sbp-2@c000/disk@0:
</comment>


delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Esta sección puede duplicarse si tiene más de un núcleo o conjunto de
## opciones de arranque - reemplazaremos 2.6.9 con nuestra versión del núcleo
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/hda3
  partition=3
  <comment>#  append="rootdelay=10"  # Necesario para arranque con USB/Firewire</comment>
  read-only
<comment>##################

## Los usuarios de G5 y algunos de G4 deben indicar
##   macos=hd:13
##   macosx=hd:12
## en lugar de los valores de ejemplo.</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Una vez que <path>yaboot.conf</path> esté configurado, ejecutaremos <c>mkofboot
-v</c> para formatear la partición Apple_bootstrap e instalar las
configuraciones. Si cambiamos yaboot.conf después de que la partición 
Apple_bootstrap haya sido creada deberemos actualizar la configuración 
ejecutando <c>ybin -v</c>.
</p>

<p>
Para más información a cerca de yaboot, se puede hojear <uri
link="http://penguinppc.org/bootloaders/yaboot" >yaboot
project</uri>. Ahora continuaremos la instalación con <uri
link="#reboot" >Reiniciando el sistema</uri>. 
</p>

</body>
</subsection>
</section>
<section id="bootx" >
<title>Alternativa: BootX</title>
<body>
	
<impo>
¡BootX sólo puede usarse en sistemas Apple e IBM OldWorld!
</impo>

<p>
Puesto que BootX arranca Linux después de MacOS, el núcleo necesitará
ser copiado desde la partición Linux a la partición MacOS. Primero
montaremos la partición MacOS fuera del chroot. Usaremos <c>mac-fdisk
-l</c> para encontrar el número de la partición MacOS, que en el
ejemplo siguiente será sda6. Una vez que la partición esté montada,
copiaremos el núcleo en la carpeta del sistema donde BootX pueda
encontrarlo.
</p>

<pre caption="Copia del kernel en la partición MacOS" >
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux &quot;/mnt/mac/System Folder/Linux Kernels&quot;</i>
</pre>

<p>
Si se usa genkernel, tanto el núcleo como el initrd deberán ser copiados en la
partición MacOS.
</p>

<pre caption="Copia del kernel e initrd compilados con genkernel a la partición MacOS" >
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initramfs-* "/mnt/mac/System Folder"</i>
</pre>

<p>
Ahora que el núcleo ha sido copiado, necesitaremos reiniciar para configurar
BootX.
</p>

<pre caption="Desmontando todas las particiones y reiniciando" >
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Desde luego, no nos olvidemos de extraer cualquier medio arrancable
ya que MacOS necesita iniciarse esta vez.
</p>

<p>
Ahora que la máquina ha arrancado en MacOS, abriremos el panel de control de
BootX. Si no estamos usando genkernel seleccionaremos <c>Options</c>,
desactivando <c>Use specified RAM disk</c>. Usando genkernel, nos aseguraremos
que el initrd de genkernel está seleccionado en lugar del initrd del CD de
instalación. Si no se usa genkernel, hay una opción para especificar el disco
y la partición raíz de Linux. La rellenaremos con los valores apropiados.
Dependiendo de la configuración del núcleo probablemente deberemos aplicar
algunos parámetros adicionales de inicio del núcleo.

</p>

<p>
BootX puede ser configurado para arrancar Linux en el inicio. Si
elegimos esta opción, el ordenador arrancará MacOS y después, durante el
arranque, cargará BootX que a su vez iniciará Linux. Hay más información
disponible en <uri link="http://penguinppc.org/bootloaders/bootx/" >Boot X 
home page</uri>.
</p>

<p>
Ahora reiniciaremos otra vez cargando Linux, y luego continuaremos con <uri link="?part=1&amp;chap=11" >Finalizando la instalación de Gentoo</uri>.
</p>

</body>
</section>
<section id="quik" >
<title>Alternativa: quik</title>
<body>

<p>
quik permite a los Macs OldWorld arrancar sin MacOS. Sin embargo, no está bien
soportado y tiene algunas peculiaridades. Si tiene opción, es recomendable
usar BootX en su lugar, porque es mucho más de fiar y fácil de configurar que
quik.
</p>

<p>
Primero, necesitamos instalar quik:
</p>

<pre caption="Emerge quik" >
# <i>emerge quik</i>
</pre>

<p>
A continuación, necesitaremos configurarlo. Editaremos /etc/quik.conf e
indicaremos la imagen del núcleo que hemos copiado en la partición de
arranque.
</p>

<pre caption="Configuración de quik.conf" >
# Ejemplo de quik.conf
init-message = &quot;Gentoo 2005.1\n&quot;
partition = 2           <comment># Esta es la partición de boot</comment>
root = /dev/hda4
timeout = 30
default = gentoo
image = /vmlinux-2.6.12
    label = gentoo
</pre>

<p>
El fichero quik.conf <e>debe</e> estar en el mismo disco que las imágenes de
arranque quik, sin embargo puede estar en una partición diferente del mismo
disco, a pesar de lo cual es recomendable tenerlo en la partición de arranque.
</p>

<pre caption="Mover quik.conf a /boot" >
# <i>mv /etc/quik.conf /boot/quik.conf</i>
</pre>

<p>
Necesitaremos ahora indicar las variables de arranque que cargará quik al
inicio. Para hacerlo, usaremos un programa llamado <c>nvsetenv</c>. Las
variables que hay que configurar cambian de una máquina a otra, por lo que es
mejor buscar primero nuestra máquina en <uri 
link="http://penguinppc.org/bootloaders/quik/quirks.php" >quirks</uri> antes de
intentar esto.
</p>

<pre caption="indicando las variables de arranque" >
# <i>nvsetenv auto-boot true</i> <comment># Establezca a false si quiere arrancar en OF, no todos los modelos muestran los mensajes de OF</comment>
# <i>nvsetenv output-device video</i> <comment># Mire la página de quirks, hay algunas variantes posibles</comment>
# <i>nvsetenv input-device kbd</i>
# <i>nvsetenv boot-device scsi/sd@1:0</i> <comment># Para SCSI</comment>
# <i>nvsetenv boot-device ata/ata-disk@0:0</i> <comment># Para ATA</comment>
# <i>nvsetenv boot-file /boot/vmlinux-2.6.12 root=/dev/hda4</i> <comment> # El primer ítem es la ruta al núcleo, el segundo es la partición root. Se pueden añadir las opciones del núcleo al final de esta línea.</comment>
# <i>nvsetenv boot-command boot</i> <comment># Establezca esta opción para arrancar desde Linux</comment>
</pre>

<note>
También es posible cambiar las variables de arranque desde macOS. Dependiendo
del modelo, tanto  <uri 
link="http://penguinppc.org/bootloaders/quik/BootVars.sit.hqx" >bootvars</uri> o
<uri link="ftp://ftp.apple.com/developer/macosxserver/utilities/SystemDisk2.3.1.smi.bin" > Apple System Disk</uri> pueden usarse. Por favor, busque más
información en la página de quik en quirks.
</note>

<p>
Ahora que hemos configurado la máquina para el arranque, necesitaremos
asegurarnos que las imágenes de arranque están correctamente instaladas.
Ejecutaremos <c>quik -v -C /boot/quik.conf</c>. Nos deberá decir que ha
instalado el primer "stage QUIK boot block".
</p>

<note>
Si algo no ha ido bien, siempre se puede inicializar la PRAM con los valores
por defecto pulsando <c>command + option + p + r</c> antes de apagar la
máquina. Esto borra los valores establecidos con nvsetenv y debería permitir
arrancar tanto con un disco de inicio MacOS como un disco de inicio Linux.
</note>

<p>
Ahora, seguiremos con <uri link="#reboot" >Reiniciando el sistema</uri>.
</p>

</body>
</section>
<section id="bootcreator" >
<title>Alternativa: BootCreator</title>
<body>
	
<impo>
BootCreator creará un menú de arranque SmartFirmware escrito en Forth para 
el Pegasos.
</impo>

<p>
Primero, nos aseguraremos de tener la última versión de
<c>bootcreator</c> instalada:
</p>

<pre caption="Instalación de bootcreator" >
# <i>emerge bootcreator</i>
</pre>

<p>
Ahora copiaremos el fichero <path>/etc/bootmenu.example</path> en 
<path>/etc/bootmenu</path> y lo editaremos convenientemente:
</p>

<pre caption="Edición del fichero de configuración de bootcreator" >
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
A continuación se encuentra un fichero de configuración de
<path>/etc/bootmenu</path>.
</p>

<pre caption="fichero de configuración de bootcreator" >
<comment>#
# Ejemplo de fichero de configuración para bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags=&quot;logkprintf&quot;

[SECTION]
Local HD -> Linux 2.6.12 (Normal)
ide:0 linux-2.6.12 video=radeonfb:1024x768@70 root=/dev/hda3

[SECTION]
Local HD -> Genkernel (Normal)
ide:0 kernelz-2.6.12 root=/dev/ram0 real_root=/dev/hda3 init=/linuxrc
</pre>

<p>
Finalmente, el <path>bootmenu</path> debe transferirse a Forth y copiarse
a la partición de inicio para que SmartFirmware pueda leerlo. Para
ello deberemos ejecutar <c>bootcreator</c>:
</p>

<pre caption="Instalación de bootmenu" >
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
Durante el siguiente reinicio nos aseguraremos de revisar en la
configuración de SmartFirmware que <path>menu</path> es el fichero que
se cargará por defecto.
</note>

<p>
Ahora continuaremos con la instalación en <uri link="#reboot"
>Reiniciando el sistema</uri>.
</p>

</body>
</section>
<section id="reboot" >
<title>Reiniciando el sistema</title>
<subsection>
<body>
	
<p>
Salimos del entorno chroot y desmontaremos todas las particiones que
continúen montadas, por lo que podremos reiniciar limpiamente con 
<c>reboot</c>.
</p>

<pre caption="Desmontando todas las particiones y reiniciando" >
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Una vez que se haya reiniciado nuestra nueva instalación de 
Gentoo, acabaremos con <uri link="?part=1&amp;chap=11" >Finalizando 
su instalación de Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
