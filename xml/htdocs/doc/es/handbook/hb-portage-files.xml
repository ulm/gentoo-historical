<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/hb-portage-files.xml,v 1.14 2013/12/18 20:29:53 nimiux Exp $ -->

<sections>

<abstract>
Una vez que quiera conocer a Portage en profundidad, hará falta saber
donde almacena sus archivos y datos.
</abstract>

<version>4</version>
<date>2013-12-17</date>

<section>
<title>Ficheros de Portage</title>
<subsection>
<title>Directivas de configuración</title>
<body>

<p>
Portage viene con una configuración predefinida guardada en
<path>/usr/share/portage/config/make.globals</path>. Cuando le
eche un vistazo, comprobará que toda la configuración de Portage
se realiza a través de variables. A qué variables atiende Portage
y que significan se describe un poco después.
</p>

<p>
Como muchas directivas de configuración varían de unas arquitecturas a
otras, Portage también posee algunos archivos de configuración que son
parte de perfil. Su perfil está apuntado por el enlace simbólico
<path>/etc/portage/make.profile</path>; las configuraciones de Portage
se realizan en los archivos <path>make.defaults</path> de su perfil y
de todos los perfiles padres. Explicaremos algo más sobre perfiles y
el directorio <path>/etc/portage/make.profile</path> más adelante.
</p>

<p>
Si está pensando en cambiar una variable de configuración, <e>no</e>
modifique <path>/usr/share/portage/config/make.globals</path> o
<path>make.defaults</path>. En lugar de eso utilice
<path>/etc/portage/make.conf</path> el cual tiene preferencia sobre
los archivos anteriores. También encontrará
<path>usr/share/portage/config/make.conf.example</path>.
Como su propio nombre indica, este archivo es meramente un ejemplo y
Portage no lo utilizará con ningún propósito.
</p>

<p>
También puede definir una variable de configuración para Portage como
una variable de entorno, pero no es recomendable.
</p>
</body>
</subsection>

<subsection>
<title>Información específica del perfil</title>
<body>

<p>
Ya hemos hablado del directorio <path>/etc/portage/make.profile</path>.
Bien, exactamente no es un directorio pero es un enlace simbólico a un
perfil, por defecto uno perteneciente a
<path>/usr/portage/profiles</path> también puede crear un perfil en
cualquier otro lado y apuntarlo. El perfil al cual apunta el enlace
simbólico será el que tenga en cuenta su sistema.
</p>

<p>
Un perfil contiene información específica para Portage sobre cada
arquitectura, tal como una lista de paquetes que pertenecen al sistema
correspondiente con ese perfil, una lista de paquetes que no funcionan
(o están enmascarados) para ese perfil, etc.
</p>
</body>
</subsection>

<subsection>
<title>Configuración específica para usuarios</title>
<body>

<p>
Cuando necesite sobreescribir una característica de Portage relativa a
la instalación de software, necesitará editar los archivos contenidos
en <path>/etc/portage</path>.¡ Se <e>recomienda encarecidamente</e>
que utilice los archivos pertenecientes a <path>/etc/portage</path> y
está <e>desaconsejada</e> la sobreescritura de estas características
con variables de entorno.!
</p>

<p>
Dentro de <path>/etc/portage</path> puede crear los siguientes
archivos:
</p>

<ul>
  <li>
    <path>package.mask</path> el cual especifica los paquetes que
    nunca quiere que Portage instale en su sistema.
  </li>
  <li>
    <path>package.unmask</path> especifica los paquetes que quiere
    instalar a pesar de haber sido desaconsejados por los
    desarrolladores.
  </li>
  <li>
    <path>package.accept_keywords</path> especifica los paquetes que quiere
    instalar a pesar de no haber sido considerados adecuados para su
    sistema o arquitectura (todavía).
  </li>
  <li>
    <path>package.use</path> especifica la lista de variables USE que
    quiere utilizar para unos determinados paquetes sin tener que
    configurar el sistema por completo para que use esas variables
    USE.
  </li>
</ul>

<p>
Estos no tienen que ser archivos; también pueden ser directorios que
contengan un archivo por paquete. Podemos obtener más información
acerca del directorio <path>/etc/portage</path> y una lista de
archivos que pueden crearse allí en la página man de Portage.
</p>

<pre caption="Leyendo la página del manual sobre Portage">
$ <i>man portage</i>
</pre>
</body>
</subsection>

<subsection>
<title>Cambiando el fichero de Portage y el lugar del directorio</title>
<body>

<p>
Los archivos de configuración mencionados anteriormente no pueden ser
guardados en ningún otro sitio, Portage siempre los buscará en esos
lugares exactos. Sin embargo, Portage utiliza otras muchos lugares
para varios propósitos: el directorio de compilación, el lugar donde
guardar el código fuente, la localización del árbol de Portage, ...
</p>

<p>
Todos estos propósitos tienen unas direcciones predeterminadas muy
claras pero puede cambiarlas por las que más le gusten indicándolo
en <path>/etc/portage/make.conf</path>. El resto de este capítulo
explica los lugares destinados a un propósito especial que utiliza
Portage y como puede ser modificado su emplazamiento en el sistema
de ficheros.
</p>

<p>
Este documento no pretende ser utilizado como referencia. Si necesita
una cobertura 100%, por favor consulte las páginas del man relativas a
Portage y <path>make.conf</path>:
</p>

<pre caption="Leyendo las páginas del manual sobre Portage y make.conf">
$ <i>man portage</i>
$ <i>man make.conf</i>
</pre>
</body>
</subsection>
</section>

<section>
<title>Guardando ficheros</title>
<subsection>
<title>El árbol Portage</title>
<body>

<p>
La ubicación predeterminada del árbol de Portage es
<path>/usr/portage</path>. Esta definida por la variable
PORTDIR. Cuando guarde el árbol de Portage en cualquier otro lugar
(modificando esta variable), no olvide cambiar el enlace simbólico
<path>/etc/portage/make.profile</path> de acuerdo con su cambio.
</p>

<p>
Si modifica la variable PORTDIR, seguramente quiera cambiar las
siguientes variables ya que no tienen constancia del cambio de
PORTDIR. Esto es debido a cómo Portage maneja las variables: PKGDIR,
DISTDIR, RPMDIR.
</p>
</body>
</subsection>

<subsection>
<title>Binarios Pre-compilados</title>
<body>

<p>
Aunque Portage no utilice binarios pre-compilados por defecto, tiene
un buen soporte para ellos. Cuando a Portage se le indica que trabaje
con paquetes pre-compilados, los buscará en
<path>/usr/portage/packages</path>. Esta ubicación está definida por
la variable PKGDIR.
</p>
</body>
</subsection>

<subsection>
<title>Código Fuente</title>
<body>

<p>
El código fuente de las aplicaciones se guarda por defecto en
<path>/usr/portage/distfiles</path>. Esta ubicación viene definida por
la variable DISTDIR.
</p>
</body>
</subsection>

<subsection>
<title>Base de datos de Portage</title>
<body>

<p>
Portage guarda el estado del sistema (que paquetes están instalados,
qué archivos pertenecen a cada paquete, ...) en
<path>/var/db/pkg</path>. ¡<e>No</e> se deben modificar estos
archivos manualmente! Podría romper el conocimiento que tiene Portage
sobre el sistema.
</p>

</body>
</subsection>
<subsection>
<title>Caché de Portage</title>
<body>

<p>
La caché de Portage (con modificaciones temporales, paquetes
virtuales, árbol de dependencias, ...) se guarda en
<path>/var/cache/edb</path>. Esta ubicación es una verdadera caché: se
puede limpiar si no se está ejecutando ninguna aplicación que tenga
relación con Portage en este momento.
</p>
</body>
</subsection>
</section>

<section>
<title>Compilando aplicaciones</title>
<subsection>
<title>Ficheros temporales de Portage</title>
<body>

<p>
Los ficheros temporales de portage se guardan por defecto en
<path>/var/tmp</path>. Esta ubicación se define en la variable
PORTAGE_TMPDIR.
</p>

<p>
Si modifica la variable PORTAGE_TMPDIR, necesitará cambiar las
siguientes variables ya que no tendrán constancia del cambio. Esto es
debido a cómo Portage maneja la variable: BUILD_PREFIX.
</p>
</body>
</subsection>

<subsection>
<title>Directorio de compilación</title>
<body>

<p>
Portage crea directorios de compilación específicos para cada paquete
que se emerge dentro de <path>/var/tmp/portage</path>. Esta ubicación
viene definida por la variable BUILD_PREFIX.
</p>
</body>
</subsection>

<subsection>
<title>Ubicación del sistema de ficheros</title>
<body>

<p>
Por defecto, Portage instala todas los archivos en el sistema de
ficheros activo (<path>/</path>), pero puede cambiarse esta
configuración a través de la variable de entorno ROOT. Esto es útil
cuando quiera crear nuevas imágenes compiladas.
</p>
</body>
</subsection>
</section>

<section>
<title>Características de registro de acciones (log)</title>
<subsection>
<title>Registro de acciones de Ebuilds</title>
<body>

<p>
Portage puede crear un registro por ebuild, pero solamente cuando la
variable PORT_LOGDIR esté configurada y apuntando a una dirección con
permisos de escritura para Portage (usuario Portage). De manera
predeterminada está variable está desactivada. Si no configura
PORT_LOGDIR no recibirá los registros con el sistema de registro
actual, aunque tal vez reciba algún registro del nuevo <c>elog</c>. Si
no tiene definido PORT_LOGDIR y usa elog, recibirá los registros de
construcción de paquetes y cualquier otro registro salvado por elog,
como se explica a continuación.
</p>

<p>
Portage ofrece un control de grano fino sobre el registro de sistema
mediante el uso de <c>elog</c>:
</p>

<ul>
  <li>
    PORTAGE_ELOG_CLASSES: Es donde se define cuáles mensajes serán
    registrados. Puede utilizarse cualquier cualquier combinación
    separada por espacios en blanco de <c>info</c>, <c>warn</c>,
    <c>error</c>, <c>log</c> and <c>qa</c>.
    <ul>
      <li>
        <c>info:</c> Registra los mensajes "einfo" generados por un
        ebuild
      </li>
      <li>
        <c>warn:</c> Registra los mensajes "ewarn" generados por un
        ebuild
      </li>
      <li>
        <c>error:</c> Registra los mensajes "eerror" generados por un
        ebuild
      </li>
      <li>
        <c>log:</c> Registra los mensajes "elog" encontrados en
        algunos ebuilds
      </li>
      <li>
        <c>qa:</c>: Registra los mensajes del tipo "QA Notice"
        mostrados por un ebuild.
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_SYSTEM: Selecciona el (los) módulos para procesar los
    mensajes de registro. Si se deja sin definir, se desactiva la
    función de registro. Puede usar cualquier combinación separada por
    espacios en blanco de <c>save</c>, <c>custom</c>, <c>syslog</c> ,
    <c>mail</c>, <c>save_summary</c> y <c>mail_summary</c>. Debe
    seleccionar al menos un módulo para poder usar elog.
    <ul>
      <li>
        <c>save</c>: Almacena un registro por paquete en
        <path>$PORT_LOGDIR/elog</path>, o
        <path>/var/log/portage/elog</path> si $PORT_LOGDIR no está
        definido.
      </li>
      <li>
        <c>custom</c>: Pasa todos los mensajes a una orden definida
        por el usuario en $PORTAGE_ELOG_COMMAND; esto se discutirá más
        adelante.
      </li>
      <li>
        <c>syslog:</c> Envía todos los mensajes al gestor de registro
        de sistema instalado.
      </li>
      <li>
        <c>mail</c>: Pasa todos los mensaje a un servidor de correo
        definido por el usuario en $PORTAGE_ELOG_MAILURI; esto se
        discutirá más adelante. Las características de correo de elog
        requieren &gt;=<c>portage-2.1.1</c>.
      </li>
      <li>
        <c>save_summary</c>: parecido a <c>save</c>, pero fusionando
        todos los mensajes en
        <path>$PORT_LOGDIR/elog/summary.log</path>, o
        <path>/var/log/portage/elog/summary.log</path> si $PORT_LOGDIR
        fue definido.
      </li>
      <li>
        <c>mail_summary</c>: parecido a <c>mail</c>, pero envía todos
        los mensajes en un solo mensaje de correo cuando emerge
        finaliza.
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_COMMAND: Esto solamente se usa al activarse el
    módulo <c>custom</c>. Aquí podemos especificar una orden con
    la cual se procesarán los mensajes de registro. Observe que
    puede hacer uso de dos variables de entorno: ${PACKAGE} es el
    nombre del paquete y la versión, mientras que ${LOGFILE} es la
    ruta absoluta del archivo de registro. A continuación se muestra
    un posible uso:
    <ul>
      <li>
        PORTAGE_ELOG_COMMAND="/trayectoria/al/gestor -p '\${PACKAGE}'
        -f '\${LOGFILE}'"
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_MAILURI: Contiene la configuración del módulo
    <c>mail</c>, tal como dirección, usuario, contraseña, servidor de
    correo y número de puerto. Por defecto está configurado a
    "root@localhost localhost".
  </li>
  <li>
    Aquí presentamos un ejemplo para un servidor smtp que requiere
    autenticación con nombre de usuario y contraseña en un puerto en
    particular (el puerto por defecto es el 25):
    <ul>
      <li>
        PORTAGE_ELOG_MAILURI="user@some.domain
        username:password@smtp.some.domain:995"
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_MAILFROM: Permite configurar la dirección "from" de
    los correos de registro; su valor por defecto es "portage".
  </li>
  <li>
    PORTAGE_ELOG_MAILSUBJECT: Permite la creación de una línea de
    asunto para los correos de registro. Note que puede hacer uso de
    dos variables de entorno: ${PACKAGE} mostrará el nombre y la
    versión del paquete, mientras que ${HOST} es el nombre del dominio
    completo del anfitrión donde está corriendo Portage.
  </li>
  <li>
    Aquí está un posible uso:
    <ul>
      <li>
        PORTAGE_ELOG_MAILSUBJECT="El paquete \${PACKAGE} fue instalado
        en \${HOST} con algunos mensajes"
      </li>
    </ul>
  </li>
</ul>

<impo>
Si ha usado <c>enotice</c> con Portage-2.0.*, elimine enotice, ya que
es incompatible con elog.
</impo>
</body>
</subsection>
</section>
</sections>
