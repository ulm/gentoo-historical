<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/Attic/hb-install-amd64-kernel.xml,v 1.6 2005/09/27 11:11:01 yoswink Exp $ -->

<sections>

<version>2.8</version>
<date>2005-08-21</date>

<section>
<title>Zona Horaria</title>
<body>

<p>
Primero necesita seleccionar su zona horaria para que el sistema sepa
dónde está localizado. Busque su zona horaria en
<path>/usr/share/zoneinfo</path>, luego cree un vínculo simbólico a
<path>/etc/localtime</path> usando <c>ln</c>. Por favor, evite las zonas
horarias presentes <path>/usr/share/zoneinfo/Etc/GMT*</path> pues su nombres no
indican las zonas esperadas. Por ejemplo, <path>GMT-8</path> es de hecho GMT+8.
</p>

<pre caption="Configurar la Zona Horaria">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Suponemos que quiere usar GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalar las Fuentes</title>
<subsection>
<title>Elegir un Kernel</title>
<body>

<p>
El punto de encuentro alrededor del cual se construyen todas las
distribuciones es el kernel Linux. Es la capa entre los programas de
usuario y el hardware del sistema. Gentoo proporciona a sus usuarios
varias fuentes de kernel. Una lista completa está disponible en la <uri
link="/doc/es/gentoo-kernel.xml">Guía Gentoo del Kernel</uri>.
</p>

<p>
Para los sistemas basados en AMD64 tenemos las
<c>gentoo-sources</c> (fuentes para el kernel 2.6 parcheados 
especialmente para estabilidad, desempeño y soporte de hardware en
amd64). 
</p>

<p>
Elija sus fuentes de kernel e instálelas usando <c>emerge</c>. 
</p>

<pre caption="Instalando unas fuentes del kernel">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Cuando mire en <path>/usr/src</path>, verá un enlace simbólico llamado
<path>linux</path> apuntando hacia las fuentes del kernel:
</p>

<pre caption="Ver el enlace a las fuentes del kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.12-gentoo-r6
</pre>

<p>
Si este no es el caso (por ejemplo, el enlace simbólico apunta a otras
fuentes) debe cambiarlo antes de continuar:
</p>

<pre caption="Cambiando el enlace a las fuentes del kernel">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.12-gentoo-r6 linux</i>
</pre>

<p>
Ahora es tiempo de configurar y compilar las fuentes del kernel. Para
esto puede usar <c>genkernel</c>, que construirá un kernel genérico como el
usado por el CD de Instalación. Aquí explicaremos la configuración
"manual", ya que es la mejor manera de optimizar el entorno.
</p>

<p>
Si desea configurar manualmente el kernel, continúe con <uri
link="#manual">Predeterminado: Configuración Manual</uri>. En cambio,
si quiere usar <c>genkernel</c> debe leer <uri
link="#genkernel">Alternativa: Usando genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Por defecto: Configuración Manual</title>
<subsection>
<title>Introducción</title>
<body>

<p>
Configurar manualmente un kernel frecuentemente se ve como el
procedimiento más difícil que tiene que realizar un usuario de
Linux. Nada mas lejos de la verdad -- después de configurar un par de
kernels no recordará si fue difícil ;)
</p>

<p>
Sin embargo, una cosa <e>sí</e> es cierta: debe conocer su sistema cuando
empiece a configurar su kernel manualmente. Mucha información se puede
recolectar haciendo emerge al paquete pciutils (<c>emerge
pciutils</c>), que contiene <c>lspci</c>. Ahora podrá hacer uso de
<c>lspci</c> dentro del entorno enjaulado. Puede ignorar las
advertencias <e>pcilib</e> (como pcilib: cannot open
/sys/bus/pci/devices) emitidas por <c>lspci</c>. Como alternativa,
puede ejecutar <c>lspci</c> en el entorno <e>no enjaulado</e>. Los
resultados serán iguales. También puede ejecutar <c>lsmod</c> para ver
cuáles módulos usa el CD de Instalación (tal vez provea algunas ideas
acerca de qué activar).
</p>

<p>
Ahora vaya al directorio de fuentes del kernel y ejecute <c>make
menuconfig</c>. Esto presentará un menú de configuración basado en
ncurses.
</p>

<pre caption="Invocando a menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Será saludado con varias secciones de configuración. Primero listaremos
algunas opciones que debe activar (de otro modo Gentoo no
funcionará, o no funcionará adecuadamente sin ajustes adicionales).
</p>

</body>
</subsection>
<subsection>
<title>Activar Opciones Necesarias</title>
<body>

<p>
Primero que nada, active el uso de código y dispositivos en desarrollo
y experimentales. Esto es necesario, porque sino algunos dispositivos
o código importante no se verá:
</p>

<pre caption="Seleccionar código/dispositivo experimental">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Continúe con <c>General Setup</c> y como el kernel 2.6 es el
predeterminado y único kernel soportado en AMD64, activaremos
<c>support for hot-pluggable devices</c> para usar con udev.
</p>

<pre caption="General Setup">
General setup ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Luego procederemos a seleccionar el tipo exacto de procesador.
</p>

<pre caption="Seleccionando el tipo de procesador y características">
Processor type and features  --->
  Processor family (AMD-Opteron/Athlon64)  --->
    (X) AMD-Opteron/Athlon64
    ( ) Intel EM64T
    ( ) Generic-x86-64"
</pre>

<p>
Vaya ahora a <c>File Systems</c> y seleccione el soporte para los
sistemas de archivos que usará. <e>No</e> los compile como módulos, 
porque sino su sistema Gentoo no será capaz de montar sus
particiones. También seleccione <c>Virtual memory</c> y <c>/proc file 
system</c>. <e>No</e> seleccione soporte
para el sistema de archivo /dev <c>/dev file system support</c> ya que
Gentoo/AMD64 ahora utiliza <c>udev</c> por defecto:
</p>

<pre caption="Seleccionando los sistemas de archivos necesarios">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [ ] /dev file system support (OBSOLETE)
    [*] Virtual memory file system support (former shm fs)

<comment>(Seleccione una o más de las siguientes opciones según las necesite su sistema)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Si está usando PPPoE para conectarse a Internet o está usando un módem
dial-up, necesitará además las siguientes opciones en el kernel:
</p>

<pre caption="Seleccionar los controladores PPPoE necesarios">
Device Drivers ---&gt;
  Networking Support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Las dos opciones de compresión no harán ningún daño pero en definitiva
no son necesarias, tampoco la opción<c>PPP over Ethernet</c>, que tal
vez solo sea usada por <c>rp-pppoe</c> cuando esté configurado para
realizar PPPoE en modo kernel.
</p>

<p>
Si lo requiere, no se olvide incluir el soporte en el kernel para su
tarjeta ethernet:
</p>

<p>
Si tiene un sistema Opteron de múltiples CPUs, active "Symmetric
multi-processing support":
</p>

<pre caption="Activar el soporte SMP">
Processor type and features ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Si usa dispositivos de entrada USB (como un ratón o un teclado) no olvide
activarlos también:
</p>

<pre caption="Activar Soporte para Dispositivos de Entrada USB">
Device Drivers ---&gt;
  USB Support ---&gt;
    &lt;*&gt;   USB Human Interface Device (full HID) support
  [*] HID input layer support
</pre>

<p>
Cuando haya terminado de configurar el kernel, continúe con <uri
link="#compiling">Compilar e Instalar</uri>.
</p>
</body>
</subsection>

<subsection id="compiling">
<title>Compilar e Instalar</title>
<body>

<p>
Ahora que ya está configurado el kernel, es hora de compilarlo e
instalarlo. Salga de la configuración y ejecute <c>make &amp;&amp;
make modules_install</c>:
</p>

<pre caption="Compilar el kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Cuando el kernel ha terminado de compilar, copie la imagen a
<path>/boot</path>:
</p>

<pre caption="Instalar el kernel">
# <i>cp arch/x86_64/boot/bzImage /boot/kernel-2.6.12-gentoo-r6</i>
</pre>

<p>
Es una costumbre sabia el copiar el archivo de configuración del
kernel a <path>/boot</path>, por si acaso :)
</p>

<pre caption="Respaldar la configuración del kernel">
# <i>cp .config /boot/config-2.6.12-gentoo-r6</i>
</pre>

<p>
Ahora continúe con <uri link="#kernel_modules">Configurar Módulos del
Kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternativa: Usando genkernel</title>
<body>

<p>
Si está leyendo esta sección, es porque ha escogido usar nuestro script
<c>genkernel</c> para configurar el kernel.
</p>

<p>
Ahora que está instalado el árbol de las fuentes del kernel, es hora
de compilarlo usando nuestro script <c>genkernel</c>, que automáticamente
construirá un kernel. <c>genkernel</c> trabaja configurando un kernel
prácticamente idéntico al kernel de nuestro CD de Instalación. Esto
significa que al usar <c>genkernel</c> para construir su kernel, el
sistema generalmente detectará todo su hardware al arrancar, como el
CD de Instalación. Debido a que genkernel no requiere ninguna
configuración manual del kernel, es una solución ideal para los
usuarios que no se sienten cómodos compilando sus propios kernels.
</p>

<p>
Ahora veamos como usar genkernel. Primero, haga emerge al ebuild de
genkernel:
</p>

<pre caption="Instalando genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Ahora, compile las fuentes del kernel ejecutando <c>genkernel
all</c>. Recuerde que, como <c>genkernel</c> compila un kernel que
soporta casi todo el hardware, esta compilación ¡tardará un rato en
terminar!
</p>

<p>
Observe que si su partición de arranque no usa ext2 o ext3 como
sistema de archivos, necesitará configurar manualmente su kernel
usando <c>genkernel --menuconfig all</c> para agregar soporte para su
sistema de archivos <e>en</e> el kernel (<e>no</e> como módulo).
</p>

<pre caption="Ejecutar genkernel">
# <i>genkernel all</i>
</pre>

<p>
Una vez que <c>genkernel</c> haya terminado, un kernel, un conjunto
completo de módulos y un <e>disco raíz de inicio</e> (initrd) serán
creados. Usaremos el kernel el initrd para configurar el gestor de
arranque más adelante. Anote los nombres del kernel y del initrd
porque los necesitará al escribir el archivo de configuración del
gestor de arranque. El initrd iniciará inmediatamente después del
arranque para llevar a cabo la autodetección del hardware (tal como
ocurre en el CD de Instalación) previo al inicio su verdadero
sistema.
</p>

<pre caption="Verificar los nombres del kernel e initrd creados">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

<p>
Ahora realicemos un paso más para que nuestro sistema sea más
parecido al del CD de Instalación -- instalaremos
<c>coldplug</c>. Mientras el initrd autodetecta el hardware necesario
para arrancar el sistema, <c>coldplug</c> autodetecta todo lo
demás. Para instalar y activar <c>coldplug</c>, escriba lo siguiente:
</p>

<pre caption="Instalar y habilitar coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Configuración de Módulos del Kernel</title>
<subsection>
<title>Configurar los Módulos</title>
<body>

<p>
Debe listar los módulos que desee cargar automáticamente en
<path>/etc/modules.autoload.d/kernel-2.6</path>. Puede agregar
opcionales adicionales también, si así lo desea.
</p>

<p>
Para ver todos los módulos disponibles, ejecute el siguiente comando
<c>find</c>. No olvide sustituir "&lt;kernel version&gt;" con la
versión del kernel que acaba de compilar:
</p>

<pre caption="Viendo todos los módulos disponibles">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Por ejemplo, para cargar automáticamente el módulo <c>3c59x.o</c>,
modifique el archivo <path>kernel-2.6</path> agregándole el nombre del
módulo.
</p>

<pre caption="Modificando /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Continúe la instalación con <uri
link="?part=1&amp;chap=8">Configurando el Sistema</uri>.
</p>

</body>
</subsection>
</section>
</sections>
