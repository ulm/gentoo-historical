<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/hb-working-use.xml,v 1.26 2012/07/30 14:53:17 nimiux Exp $ -->

<sections>

<abstract>
Los parámetros USE son un aspecto muy importante de Gentoo. En este
capítulo, aprenderá a trabajar con ellos y entender cómo los
parámetros USE interactúan con su sistema.
</abstract>

<version>3</version>
<date>2012-07-24</date>

<section>
<title>¿Qué son los parámetros USE?</title>
<subsection>
<title>Las ideas que hay detrás de los parámetros USE</title>
<body>

<p>
Mientras esté instalando Gentoo (o cualquier otra distribución, incluso
otro sistema operativo), tomará varias decisiones dependiendo del entorno en el
que esté trabajando. Una instalación para un servidor es distinta a
una para una estación de trabajo. También una estación de trabajo dedicada a
juegos es diferente a una estación de trabajo que se use para renderizados
en 3D.
</p>

<p>
Estas diferencias no solo dependen de los paquetes instalados, si no también
de las características para las que ciertos paquetes tienen soporte. Si no
necesita OpenGL, ¿para qué molestarse en instalar OpenGL y construir la
mayoría de sus aplicaciones con soporte OpenGL? Si no quiere usar KDE, ¿para
qué molestarte en compilar paquetes con soporte para KDE si podrían funcionar
perfectamente sin él?
</p>

<p>
Para ayudar a los usuarios a decidir qué instalar/activar o no,
necesitamos que el usuario especifique su entorno de una manera
sencilla. Esto obliga al usuario a decidir que es lo que realmente
quiere; además de facilitar a Portage, nuestro sistema de gestión de
paquetes, la tarea de tomar decisiones útiles.
</p>
</body>
</subsection>

<subsection>
<title>Definición de un parámetro USE</title>
<body>

<p>
Comencemos por definir qué son los parámetros USE. Un parámetro USE es
una palabra clave que incorpora información de soporte y dependencias
para un concepto en concreto. Si define un determinado parámetro USE,
Portage sabrá que el usuario desea soporte para la palabra clave
escogida. Por supuesto, también altera las dependencias de un paquete.
</p>

<p>
Veamos un ejemplo específico: la palabra clave <c>kde</c>. Si no la
tiene en su variable <c>USE</c>, todos los paquetes que tengan soporte
<e>opcional</e> para KDE se construirán <e>sin</e> él. Los que tengan
una dependencia <e>opcional</e> con KDE se instalarán <e>sin</e>
instalar las librerías de KDE (como dependencia).  Si ha definido la
palabra clave <c>kde</c>, entonces dichos paquetes <e>sí</e> se
construirán con soporte para KDE, y las librería de KDE serán
instaladas
</p>

<p>
Definiendo correctamente las palabras clave, conseguirá un sistema
confeccionado específicamente para sus necesidades.
</p>
</body>
</subsection>

<subsection>
<title>¿Qué parámetros USE existen?</title>
<body>

<p>
Hay dos tipos de parámetros USE: <e>globales</e> y <e>locales</e>.
</p>

<ul>
  <li>
    Un parámetro USE <e>global</e> lo usan varios paquetes, en todo
    el sistema. Es lo que la mayoría de la gente entiende como parámetros USE.
  </li>
  <li>
    Un parámetro USE <e>local</e> lo utiliza un solo paquete para tomar
    decisiones específicas para dicho paquete.
  </li>
</ul>

<p>
Puede encontrar una lista de los parámetros USE globales <uri
link="/dyn/use-index.xml">en línea</uri> o localmente en
<path>/usr/portage/profiles/use.desc</path>.
</p>

<p>
Se puede encontrar una lista de los parámetros USE locales
en <path>/usr/portage/profiles/use.local.desc</path>.
</p>
</body>
</subsection>
</section>

<section>
<title>Usando los parámetros USE</title>
<subsection>
<title>Declarar parámetros USE permanentes</title>
<body>

<p>
Esperamos que se haya convencido de la importancia de los parámetros
USE.  Ahora pasaremos a explicar como se declaran estos parámetros.
</p>

<p>
Como ya se ha dicho anteriormente, todos los parámetros USE se
declaran dentro de la variable <c>USE</c>. Para simplificar al usuario
la tarea de buscar y escoger parámetros USE, ya proporcionamos una
configuración <e>predeterminada</e>. Esta configuración es un
compendio de parámetros que creemos se utilizan frecuentemente por los
usuarios de Gentoo.  Dicha configuración predeterminada se declara en
los ficheros <path>make.defaults</path> que forman parte de su perfil.
</p>

<p>
El perfil al que atiende su sistema lo indica el enlace simbólico
<path>/etc/portage/make.profile</path>. Cada perfil funciona sobre
otro, más extenso, y el resultado final es una suma de todos ellos.
El perfil más alto es el perfil <path>base</path>
(<path>/usr/portage/profiles/base</path>).
</p>

<p>
Echemos un vistazo a la configuración predeterminada para el perfil
10.0:
</p>

<pre caption="Variable USE acumulada de make.defaults para el perfil 10.0">
<comment>(Esto es un ejemplo de la suma de configuraciones en: base,
default/linux, default/linux/x86 y default/linux/x86/10.0/)</comment>
USE="a52 aac acpi alsa branding cairo cdr dbus dts dvd dvdr emboss encode exif
fam firefox flac gif gpm gtk hal jpeg lcms ldap libnotify mad mikmod mng mp3
mp4 mpeg ogg opengl pango pdf png ppds qt3support qt4 sdl spell
startup-notification svg tiff truetype vorbis unicode usb X xcb x264 xml xv
xvid"
</pre>

<p>
Como puede ver, esta variable contiene bastantes palabras
clave. <b>No</b> modifique el fichero <path>make.defaults</path> para
ajustar la variable <c>USE</c> a sus necesidades: ¡los cambios se
perderán al actualizar el árbol del Portage!
</p>

<p>
Para modificar esta configuración predeterminada, necesita añadir o
eliminar palabras clave a la variable <c>USE</c>. Para llevarlo a
cabo, se define la variable <c>USE</c> en
<path>/etc/portage/make.conf</path>. En esta variable añada los
parámetros USE que necesite o elimine los que no quiera. Para
eliminarlos coloque el símbolo menos ("-") delante.
</p>

<p>
Por ejemplo, para eliminar el soporte para KDE y QT además de añadir
soporte para ldap, puede definirse el siguiente parámetro <c>USE</c>
en <path>/etc/portage/make.conf</path>:
</p>

<pre caption="Un ejemplo de confirmación USE en /etc/portage/make.conf">
USE="-kde -qt4 ldap"
</pre>
</body>
</subsection>

<subsection>
<title>Declarar parámetros USE para paquetes específicos</title>
<body>

<p>
A veces le interesará establecer un cierto parámetro USE tan solo para
una o dos aplicaciones, pero no para todo el sistema. Para solventar,
esto, necesitará crear el directorio <path>/etc/portage</path> (si no
existiera) y editar <path>/etc/portage/package.use</path>. Esta ruta
es generalmente un único fichero pero podria ser un directorio; vea
<c>man portaga</c> para más información. Los siguientes ejemplos
asumirán que <path>package.use</path> es un único fichero.
</p>

<p>
Por ejemplo, si no le interesa soporte global para <c>berkdb</c> pero
lo quiere para <c>mysql</c>, necesita añadir:
</p>

<pre caption="Ejemplo de /etc/portage/package.use">
dev-db/mysql berkdb
</pre>

<p>
Por supuesto también puede <e>desactivar</e> el empleo específico de
un parámetro USE para una aplicación en concreto.  Por ejemplo si no
quiere soporte para <c>java</c> en PHP:
</p>

<pre caption="Segundo ejemplo de /etc/portage/package.use">
dev-php/php -java
</pre>
</body>
</subsection>

<subsection>
<title>Declarar parámetros USE temporales</title>
<body>

<p>
A veces necesitará utilizar una cierta configuración de USE tan solo
una vez.  En lugar de editar <path>/etc/portage/make.conf</path> dos
veces (una para hacer y otra para deshacer los cambios) puede declarar
la variable USE como una variable de entorno. Recuerde que, si utiliza
este método, cuando vuelva a emerger o actualice este aplicación
(tanto si es particular como si forma parte de una actualización del
sistema) ¡Perderá los cambios!
</p>

<p>
Como ejemplo, vamos a eliminar temporalmente el parámetro java USE
durante la instalación de seamonkey.
</p>

<pre caption="Utilizando USE como una variable de entorno">
# <i>USE="-java" emerge seamonkey</i>
</pre>
</body>
</subsection>

<subsection>
<title>Precedencia</title>
<body>

<p>
Por supuesto, hay una determinada precedencia respecto a qué
configuración tiene prioridad sobre la configuración del USE. No
querrá declarar <c>USE="-java"</c> y comprobar posteriormente que
<c>java</c> continua utilizándose debido a una configuración que tiene
mayor prioridad. La precedencia para la configuración del USE es (el
primero tiene la mínima prioridad):
</p>

<ol>
  <li>
   Configuración predeterminada de USE declarada en los archivos
   <path>make.defaults</path> de su perfil.
  </li>
  <li>
    Configuración definida por el usuario en
    <path>/etc/portage/make.conf</path>
  </li>
  <li>
    Configuración definida por el usuario en
    <path>/etc/portage/package.use</path>
  </li>
  <li>
    Configuración definida por el usuario como variable de entorno
  </li>
</ol>

<p>
Para observar el valor final del <c>USE</c> tal y como lo verá
Portage, ejecute <c>emerge --info</c>. Se listarán una serie de
variables importantes (incluyendo la variable <c>USE</c>) con sus
valores correspondientes.
</p>

<pre caption="Ejecutando emerge info">
# <i>emerge --info</i>
</pre>
</body>
</subsection>

<subsection>
<title>Adaptando su Sistema Completamente a los Nuevos Parámetros USE</title>
<body>

<p>
Si ha cambiado sus parámetros USE y desea actualizar todo su sistema
para que utilice el nuevo parámetro, utilice la opción de
<c>emerge</c> llamada <c>--newuse</c>:
</p>

<pre caption="Recompilando todo su sistema">
# <i>emerge --update --deep --newuse world</i>
</pre>

<p>
A continuación, ejecute una limpieza completa de Portage para eliminar
las dependencias que habían sido instaladas en su "antiguo" sistema
pero que han quedado obsoletas por los nuevos parámetros de USE.
</p>

<warn>
Ejecutar <c>emerge depclean</c> es una operación peligrosa y debería
tratarse con cuidado. Revise en profundidad la lista de paquetes
"obsoletos" y asegúrese de que no elimina ningún paquete que
necesite. En el siguiente ejemplo hemos añadido <c>-p</c> para mostrar
la lista de paquetes que serían eliminados pero sin eliminarlos
físicamente.
</warn>

<pre caption="Desinstalando los paquetes obsoletos">
# <i>emerge -p depclean</i>
</pre>

<p>
Cuando haya finalizado la limpieza, ejecute <c>revdep-rebuild</c> para
recompilar las aplicaciones que están enlazadas dinámicamente con los
objetos que proporcionaban los paquetes
eliminados. <c>revdep-rebuild</c> forma parte del paquete
<c>gentoolkit</c>; no olvide hacer emerge primero.
</p>

<pre caption="Ejecutando revdep-rebuild">
# <i>revdep-rebuild</i>
</pre>

<p>
Cuando todo esto haya terminado, su sistema estará utilizando la nueva
configuración de los parámetros USE.
</p>
</body>
</subsection>
</section>

<section>
<title>Parámetros USE específicos de un paquete</title>
<subsection>
<title>Viendo los parámetros USE disponibles</title>
<body>

<p>
Veamos el ejemplo de <c>seamonkey</c>: ¿Qué parámetros USE influyen
sobre él? Para averiguarlo, usamos <c>emerge</c> con las opciones
<c>--pretend</c> (simula llevar a cabo la acción) y <c>--verbose</c>
(obtener una salida más detallada):
</p>

<pre caption="Viendo los parámetros USE usados">
# <i>emerge --pretend --verbose seamonkey</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild   R   ] www-client/seamonkey-1.0.7  USE="crypt gnome java -debug -ipv6
-ldap -mozcalendar -mozdevelop -moznocompose -moznoirc -moznomail -moznopango
-moznoroaming -postgres -xinerama -xprint" 0 kB
</pre>

<p>
<c>emerge</c> no es la única herramienta disponible para esta labor.
De hecho, tenemos una herramienta llamada <c>equery</c> dedicada a
obtener información sobre los paquetes; la cual se encuentra en el
paquete <c>gentoolkit</c>. En primer lugar, instale <c>gentoolkit</c>:
</p>

<pre caption="Instalando gentoolkit">
# <i>emerge gentoolkit</i>
</pre>

<p>
Ahora ejecute <c>equery</c> con el argumento <c>uses</c> para ver los
parámetros del USE de un paquete en concreto. Por ejemplo, en el caso
del paquete <c>gnumeric</c>:
</p>

<pre caption="Utilizando equery para ver los parámetros USE usados">
# <i>equery --nocolor uses =gnumeric-1.6.3 -a</i>
[ Searching for packages matching =gnumeric-1.6.3... ]
[ Colour Code : set unset ]
[ Legend : Left column  (U) - USE flags from make.conf              ]
[        : Right column (I) - USE flags packages was installed with ]
[ Found these USE variables for app-office/gnumeric-1.6.3 ]
 U I
 - - debug  : Enable extra debug codepaths, like asserts and extra output.
              If you want to get meaningful backtraces see
              http://www.gentoo.org/proj/en/qa/backtraces.xml .
 + + gnome  : Adds GNOME support
 + + python : Adds support/bindings for the Python language
 - - static : !!do not set this during bootstrap!! Causes binaries to be
              statically linked instead of dynamically
</pre>

</body>
</subsection>
</section>
</sections>
