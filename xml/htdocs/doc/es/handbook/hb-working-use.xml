<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/hb-working-use.xml,v 1.1 2004/02/09 19:12:56 chiguire Exp $ -->

<sections>
<section>
<title>¿Qué son los parámetros USE?</title>
<subsection>
<title>Las ideas que hay detrás de los parámetros USE</title>
<body>

<p>
Mientras esté instalando Gentoo (o cualquier otra distribución, incluso
otro sistema operativo), tomará varias decisiones dependiendo del entorno en el
que esté trabajando. Una instalación para un servidor es distinta a
una para una estación de trabajo. También una estación de trabajo dedicada a juegos
es diferente a una estación de trabajo que se use para renderizados en 3D.
</p>

<p>
Estas diferencias no solo dependen de los paquetes instalados, si no también
de las características para las que ciertos paquetes tienen soporte. Si no
necesita OpenGL, ¿para qué molestarse en instalar OpenGL y construir la
mayoría de sus aplicaciones con soporte OpenGL? Si no quere usar KDE, ¿para
qué molestarte en compilar paquetes con soporte para KDE si podrían funcionar
perfectamente sin él?
</p>

<p>
Para ayudar a los usuarios a decidir qué instalar/activar o no, necesitamos
que el usuario especifique su entorno de una manera sencilla. Esto obliga al
usuario a decidir que es lo que realmente quiere; además de facilitar al Portage,
nuestro sistema de gestión de paquetes, la tarea de tomar decisiones útiles.
</p>

</body>
</subsection>
<subsection>
<title>Definición de un parámetro USE</title>
<body>

<p>
Comencemos por definir qué son los parámetros USE. Un parámetro USE es una
palabra clave que incorpora información de soporte y dependencias para
un concepto en concreto. Si define un determinado parámetro USE, Portage
sabrá que el usuario desea soporte para la palabra clave escogida. Por supuesto,
también altera las dependencias de un paquete.
</p>

<p>
Veámos un ejemplo específico: la palabra clave <c>kde</c>. Si no la tiene
en su variable <c>USE</c>, todos los paquetes que tengan soporte <e>opcional</e>
para KDE se construirán <e>sin</e> él. Los que tengan una dependencia <e>opcional</e>
con KDE se instalarán <e>sin</e> instalar las librerías de KDE (como dependencia).
Si ha definido la palabra clave <c>kde</c>, entonces dichos paquetes <e>sí</e> se
construirán con soporte para KDE, y las librería de KDE serán instaladas
</p>

<p>
Definiendo correctamente las palabras clave, conseguirá un sistema
confeccionado específicamente para sus necesidades.
</p>

</body>
</subsection>
<subsection>
<title>¿Qué parámetros USE existen?</title>
<body>

<p>
Hay dos tipos de parámetros USE: <e>globales</e> y <e>locales</e>.
</p>

<ul>
  <li>
    Un parámetro USE <e>global</e> lo usan varios paquetes, en todo
    el sistema. Es lo que la mayoría de la gente ve como parámetros USE.
  </li>
  <li>
    Un parámetro USE <e>local</e> lo usa un sólo paquete para tomar
    decisiones específicas para dicho paquete.
  </li>
</ul>

<p>
Puede encontrar una lista de los paramétros USE globales <uri
link="/dyn/use-index.xml">en línea</uri> o localmente en
<path>/usr/portage/profiles/use.desc</path>. Un pequeño (<e>realmente</e> pequeño)
extracto:
</p>

<pre caption="Un pequeño extracto de los parámetros USE disposibles">
gtk     - Añade soporte para x11-libs/gtk+ (The GIMP Toolkit)
gtk2    - Usa gtk+-2.0.0 en lugar de gtk+-1.2 en caso de que el programa soporte ambos.
gtkhtml - Añade soporte para gnome-extra/gtkhtml
guile   - Añade soporte para dev-util/guile (intérprete para Scheme)
icc     - Usa el compilador de C++ de Intel en caso de que el paquete lo soporte.
icc-pgo - Activa la generación de datos PGO cuando se use icc.
imap    - Añade soporte para IMAP.
</pre>

</body>
</subsection>
</section>
<section>
<title>Usando los parámetros USE</title>
<subsection>
<title>Declarar parámetros USE permanentes</title>
<body>

<p>
Esperamos que se haya convencido de la importancia de los parámetros USE.
Ahora pasaremos a explicar como se declaran estos parámetros.
</p>

<p>
Como ya se ha dicho anteriormente, todos los parámetros del <c>USE</c>
se declaran dentro de la variable <c>USE</c>. Para simplificar al usuario
la tarea de buscar y escoger parámetros USE, ya proporcionamos
una configuración <c>predeterminada</c>. Esta configuración es un compendio
de parámetros que creemos son usados comunmente por los usuarios de Gentoo.
Dicha configuración predeterminada está declarada en el fichero 
<path>/etc/make.profile/make.defaults</path>. Echémosle un ojo:
</p>

<pre caption="La variable USE de /etc/make.profile/make.defaults">
USE="x86 oss apm arts avi berkdb crypt cups encode foomaticdb gdbm gif gpm gtk 
     imlib jpeg kde gnome libg++ libwww mad mikmod motif mpeg ncurses nls 
     oggvorbis opengl pam pdflib png python qt quicktime readline sdl slang 
     spell ssl svga tcpd truetype X xml2 xmms xv zlib"
</pre>

<p>
Como puede ver, esta variable contiene bastantes palabras clave. <b>No</b>
modifique el fichero <path>/etc/make.profile/make.defaults</path>
para ajustar la variable <c>USE</c> a sus necesidades: ¡los cambios se perderán
al actualizar el árbol del Portage!
</p>

<p>
Para modificar esta configuración predeterminada, necesita añadir o eliminar
palabras clave a la variable <c>USE</c>. Para llevarlo a cabo, se define
la variable <c>USE</c> en <path>/etc/make.conf</path>. En esta variable añada
los parámetros USE que necesite o elimine los que no quiera. Para eliminarlos
coloque el símbolo menos ("-") delante.
</p>

<p>
Por ejemplo, para eliminar el soporte para KDE y QT además de añadir
soporte para ldap, puede definirse el siguiente parámetro <c>USE</c> en <path>/etc/make.conf</path>:
</p>

<pre caption="Un ejemplo de confirmación USE en /etc/make.conf">
USE="-kde -qt ldap"
</pre>

</body>
</subsection>
<subsection>
<title>Declarar parámetros USE temporales</title>
<body>

<p>
A veces le interesará establecer un cierto parámetro USE sólo una vez. En lugar
de editar <path>/etc/make.conf</path> 2 veces (para hacer y deshacer el cambio), es
posible declarar la variable USE como una variable de entorno.
</p>

<p>
Como ejemplo, vamos a eliminar temporalmente el parámetro java USE
durante la instalación de mozilla.
</p>

<note>
El comando <c>emerge</c> será tratado más a fondo en <uri
link="?part=2&amp;chap=2">Portage y Software</uri>.
</note>

<pre caption="Utilizando USE como una variable de entorno">
# <i>USE="-java" emerge mozilla</i>
</pre>

</body>
</subsection>
<subsection>
<title>Heredando parámetros USE</title>
<body>

<p>
Algunos paquetes no sólo tienen en cuenta los parámetros USE, si no que
además las proporcionan. Cuando instale alguno de esos paquetes, los
parámetros USE proporcionados se añadirán a su configuración. Para ver una lista
de los paquetes que propocionan parámetros USE, revise
<path>/etc/make.profile/use.defaults</path>:
</p>

<pre caption="Un extracto de /etc/make.profile/use.defaults">
gnome           gnome-base/gnome
gtk             x11-libs/gtk+
qt              x11-libs/qt
kde             kde-base/kdebase
motif           x11-libs/openmotif
</pre>

</body>
</subsection>
<subsection>
<title>Precendencia</title>
<body>

<p>
Por supuesto, hay una determinada precedencia respecto a qué configuración
tiene prioridad sobre la configuración del USE. No es necesario declarar
<c>USE="-java"</c> sólo para ver si <c>java</c> está declarado. 
La precedencia para la configuración del USE es (el primero tiene la
mínima prioridad):
</p>

<ol>
  <li>
    Configuración predeterminada del USE declarada en <path>/etc/make.profile/make.defaults</path>
  </li>
  <li>
    Configuración del USE heredada si un paquete de
    <path>/etc/make.profile/use.defaults</path> está instalado
  </li>
  <li>
    Configuración definida por el usuario en <path>/etc/make.conf</path>
  </li>
  <li>
    Configuración definida por el usuario como variable de entorno
  </li>
</ol>

<p>
Para observar el valor final del <c>USE</c> tal y como lo verá Portage, ejecute
<c>emerge info</c>. Se listarán una serie de variables importantes (incluyendo
la variable <c>USE</c>) con sus valores correspondientes.
</p>

<pre caption="Ejecutando emerge info">
# <i>emerge info</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Parámetros USE específicos de un paquete</title>
<subsection>
<title>Viendo los parámetros USE disponibles</title>
<body>

<p>
En el siguiente capítulo, <uri link="?part=2&amp;chap=2">Portage y Software</uri>,
explicaremos como administrar las aplicaciones instaladas y como trabajar con
<c>emerge</c>. No obstante, ahora veremos unas nociones básicas sobre <c>emerge</c>,
mostrando como obtener los parámetros USE que un determinado paquete usa.
</p>

<p>
Veamos el ejemplo de <c>mozilla</c>: ¿Qué parámetros USE influyen sobre él?
Para averiguarlo, usamos <c>emerge</c> con las opciones <c>--pretend</c> (simula llevar
a cabo la acción) y <c>--verbose</c> (obtener una salida más detallada):
</p>

<pre caption="Viendo los parámetros USE usados">
# <i>emerge --pretend --verbose mozilla</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild  N    ] net-www/mozilla-1.5-r1 +java +crypt -ipv6 -gtk2 +ssl +ldap 
+gnome -debug +mozcalendar -mozaccess -mozxmlterm -moznoirc -moznomail
-moznocompose -moznoxft 
</pre>

<p>
<c>emerge</c> no es la única herramienta disponible para esta labor.
De hecho, tenemos una herramienta llamada <c>etcat</c> 
dedicada a obtener información sobre
los paquetes; la cual se encuentra en el paquete <c>gentoolkit</c>.
En primer lugar, instale <c>gentoolkit</c>:
</p>

<pre caption="Instalando gentoolkit">
# <i>emerge --usepkg gentoolkit</i>
</pre>

<p>
Ahora ejecute <c>etcat</c> con el argumento <c>uses</c> para ver los parámetros del
USE de un paquete en concreto. Por ejemplo, en el caso del paquete <c>gnumeric</c>:
</p>

<pre caption="Usando etcat para ver los parámetros USE usados">
# <i>etcat uses gnumeric</i>
[ Colour Code : <i>set</i> <comment>unset</comment> ]
[ Legend      : (U) Col 1 - Current USE flags        ]
[             : (I) Col 2 - Installed With USE flags ]

 U I [ Found these USE variables in : app-office/gnumeric-1.2.0 ]
 - - <comment>libgda</comment>  : Adds GNU Data Access (CORBA wrapper) support for gnumeric
 - - <comment>gnomedb</comment> : unknown
 + + <i>python</i>  : Adds support/bindings for the Python language
 + + <i>bonobo</i>  : Adds support for gnome-base/bonobo (Gnome CORBA interfaces)
</pre>

</body>
</subsection>
</section>
</sections>
