<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/hb-install-filesystems.xml,v 1.8 2012/10/30 18:42:09 nimiux Exp $ -->
<!DOCTYPE included SYSTEM "/dtd/guide.dtd">

<included>

<version>10</version>
<date>2012-10-28</date>

<section id="filesystemsdesc">
<title>Sistemas de ficheros</title>
<body>

<p test="contains('x86 Alpha',func:keyval('arch'))">
El núcleo Linux soporta varios sistemas de ficheros. Explicaremos
ext2, ext3, ext4, ReiserFS, XFS y JFS por ser los más utilizados en
sistemas Linux.
</p>

<p test="func:keyval('arch')='IA64'">
El núcleo Linux soporta varios sistemas de ficheros. Explicaremos vfat,
ext2, ext3, ext4, ReiserFS, XFS y JFS por ser los más utilizados en
sistemas Linux.
</p>

<p test="func:keyval('arch')='AMD64'">
Varios sistemas de ficheros están disponibles. Algunos de ellos se
encontraron estables en la arquitectura amd64 mientras que otros no. Los
siguientes se consideran estables: ext2, ext3, ext4 y XFS. JFS y ReiserFS
podrían funcionar pero necesitan más pruebas. Si se es aventurero,
pueden probarse otros sistemas de ficheros.
</p>

<p test="func:keyval('arch')='arm'">
Varios sistemas de ficheros están disponibles. Algunos de ellos se
encontraron estables en la arquitectura arm mientras que otros
no. Los sistemas de ficheros ext2, ext3 y ext4 se consideran estables.
JFS, XFS y ReiserFS podrían funcionar pero necesitan más pruebas. Si se
es aventurero, pueden probarse otros sistemas de ficheros.
</p>

<p test="func:keyval('arch')='HPPA'">
Varios sistemas de ficheros están disponibles. Ext2, ext3, XFS y
reiserfs se consideran estables en la arquitectura HPPA. Otros son muy
experimentales.
</p>

<p test="func:keyval('arch')='MIPS'">
Varios sistemas de ficheros están disponibles. ReiserFS, EXT2, EXT3 y
EXT4 se consideran estables en la arquitectura MIPS. Otros son
experimentales.
</p>

<p test="func:keyval('arch')='PPC'">
Varios sistemas de ficheros están disponibles para utilizarse en la
arquitectura PowerPC incluyendo ext2, ext3, ext4, ReiserFS y XFS, cada
uno con sus puntos fuertes y sus fallos.
</p>

<note test="func:keyval('arch')='PPC64'">
Varios sistemas de ficheros están disponibles. El soporte para ext2,
ext3, ext4 y ReiserFS está compilado en el núcleo incluido en el CD de
instalación, mientras JFS y XFS están disponibles como módulos.
</note>

<p test="func:keyval('arch')='SPARC'">
Varios sistemas de ficheros están disponibles, algunos son estables en
la arquitectura SPARC. Se sabe que ext2, ext3 y ext4, por ejemplo,
funcionan correctamente. Sistemas de ficheros alternativos puede que no
funcionen bien.
</p>

<note test="func:keyval('arch')='Alpha'">
<c>aboot</c> únicamente soporta el arranque desde particiones
<b>ext2</b> y <b>ext3</b>.
</note>

</body>
<body>

<p test="func:keyval('arch')='IA64'">
<b>vfat</b> es el sistema de ficheros de MS-DOS, actualizado para permitir
nombres de fichero largos. Es también el único tipo de sistema de ficheros
que el firmware EFI en sistemas ia64 puede usar. La partición de arranque
en sistemas ia64 debe ser siempre vfat, sin embargo para sus particiones
de datos debe usar alguno de los sistemas de ficheros listados abajo.
</p>

<p>
<b>ext2</b> es un sistema de ficheros Linux probado, pero no dispone
de soporte para transacciones, lo que significa que las comprobaciones
rutinarias al arrancar pueden tardar bastante tiempo. Ahora, hay
muchas opciones alternativas, sistemas de ficheros de nueva generación
con soporte para transacciones cuya integridad puede ser verificada
con mayor rapidez, por lo que gozan de mayor popularidad. Los sistemas
de ficheros transaccionales previenen retrasos durante el reinicio del
equipo, incluso cuando el sistema de ficheros está en un estado
inconsistente. Si desea instalar Gentoo en un disco pequeño (de menos de
4GB), entonces necesitará indicarle a ext2 que reserve suficientes nodos
i cuando cree el sistema de ficheros. La aplicación <c>mke2fs</c> utiliza
el ajuste "bytes-per-inode" para calcular cuantos nodos i tendría un
sistema de ficheros. Al ejecutar <c>mke2fs -T small /dev/&lt;device&gt;</c>
el número de nodos i generalmente será el cuádruple para un sistema de
ficheros dado ya que su "bytes-per-inode" se reduce de uno cada 16kB a uno
cada 4kB. Puede ajustar esto más tarde utilizando
<c>mke2fs -i &lt;ratio&gt; /dev/&lt;device&gt;</c>.
</p>

<p>
<b>ext3</b> es la versión transaccional de ext2, que proporciona
soporte para una rápida recuperación además de otros modos mejorados
de funcionamiento como registro completo y ordenado de datos. Utiliza
un árbol HTree como índice que permite un alto rendimiento en casi todas
las situaciones. En resumen ext3 es un sistema de ficheros muy bueno
y fiable. Ext3 está recomendado en sistemas de ficheros para cualquier
propósito y cualquier plataforma. Si desea instalar Gentoo en un
disco pequeño (de menos de 4GB), entonces necesitará indicarle a ext3 que
reserve suficientes nodos i cuando cree el sistema de ficheros. La
aplicación <c>mke2fs</c> utiliza el ajuste "bytes-per-inode" para calcular
cuantos nodos i tendría un sistema de ficheros. Al ejecutar
<c>mke2fs -T small /dev/&lt;device&gt;</c> el número de nodos i
generalmente será el cuádruple para un sistema de ficheros dado ya que su
"bytes-per-inode" se reduce de uno cada 16kB a uno cada 4kB. Puede ajustar
esto más tarde utilizando
<c>mke2fs -i &lt;ratio&gt; /dev/&lt;device&gt;</c>.
</p>

<p
test="contains('x86 Alpha MIPS AMD64 arm IA64 SPARC HPPA PPC PPC64',func:keyval('arch'))">
El sistema de ficheros <b>ext4</b> se creó como una bifurcación en el
código (fork) del sistema de ficheros ext3, incorporando nuevas
características, mejoras de rendimiento y eliminación de los limites
de tamaño realizando cambios moderados en el formato del disco. Puede
trabajar con volúmenes de hasta 1 EB y con un tamaño máximo de fichero
de 16 TB. En lugar de la asignación de bloques usando mapas de bits
que emplean los sistemas de ficheros clásicos ext2/3, ext4 utiliza
<uri link="http://en.wikipedia.org/wiki/Extent_%28file_systems%29">
extents</uri> (en inglés), lo cual mejora el rendimiento con los ficheros
grandes y reduce la fragmentación. Ext4 también ofrece un algoritmo más
sofisticado de asignación de bloques (asignación demorada y asignación
múltiple de bloques) ofreciendo al controlador del sistema de ficheros
más formas de optimizar la disposición de los datos en el disco. El
sistema de ficheros ext4 es un compromiso entre la estabilidad del
código para producción y el deseo de introducir extensiones a un
sistema de ficheros que ya casi tiene una década.
</p>

</body>
<body test="not(func:keyval('arch')='SPARC')">

<p test="not(func:keyval('arch')='PPC')">
<b>JFS</b> de IBM es un sistema de ficheros de alto rendimiento con
soporte transaccional. JFS es un sistema de ficheros ligero, rápido
y fiable, basado en un árbol B+ con un buen rendimiento bajo varias
condiciones.
</p>

<p>
<b>ReiserFS</b> es un sistema de ficheros B+ (basado en árboles
balanceados) que tiene un gran rendimiento, especialmente cuando
trata con muchos ficheros pequeños a costa de emplear más ciclos
de CPU. ReiserFS parece tener menos mantenimiento que otros
sistemas de ficheros.
</p>

<p>
<b>XFS</b> es un sistema de ficheros transaccional el cual viene con un
juego de características robustas y está optimizado para ser
escalable. XFS parece ser menos robusto ante fallos hardware.
</p>

</body>
</section>
</included>
