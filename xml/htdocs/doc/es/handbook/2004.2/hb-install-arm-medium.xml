<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/2004.2/Attic/hb-install-arm-medium.xml,v 1.1 2004/11/16 11:12:59 chiguire Exp $ -->

<sections>

<version>1.2</version>
<date>October 23, 2004</date>

<section>
<title>Hardware Requirements</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Before we start, we first list what hardware requirements you need to
successfully install Gentoo on your box. 
</p>

</body>
</subsection>
<subsection>
<title>The ARM architecture</title>
<body>

<ul>
<li>
  You need at least 300 megs of free disk space
</li>
<li>
  You should check the <uri link="/doc/en/arm-requirements.xml">ARM Hardware</uri> document
</li>
</ul>

</body>
</subsection>
</section>
<section>
<title>Make your Choice</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Still interested in trying out Gentoo? Well, then it is now time to
choose the installation medium you want to use. Yes, you have the
choice, no, they are not all equal, and yes, the result is always the same: a
Gentoo base system.
</p>

<p>
The installation media we will describe are:
</p>

<ul>
<li>Net Booting</li>
</ul>

<p>
Every single media has its advantages and disadvantages. We will list
the pros and cons of every medium so you have all the information to
make a justified decision. But before we continue, let's explain our
three-stage installation.
</p>

</body>
</subsection>
<subsection>
<title>The Three Stages</title>
<body>

<p>
Gentoo Linux can be installed using one of three <e>stage</e> tarball files.
The one you choose depends on how much of the system you want to compile
yourself. The <e>stage1</e> tarball is used when you want to bootstrap and
build the entire system from scratch. The <e>stage2</e> tarball is used for
building the entire system from a bootstrapped &quot;semi-compiled&quot; state.
The <e>stage3</e> tarball already contains a basic Gentoo Linux system that has
been built for you. As we will explain later, you can also install
Gentoo without compiling anything (except your kernel and some optional 
packages). If you want this, you have to use a <e>stage3</e> tarball.
</p>

<p>
Now what stage do you have to choose?
</p>

<p>
Starting from a <e>stage1</e> allows you to have total control over the
optimization settings and optional build-time functionality that is
initially enabled on your system. This makes <e>stage1</e> installs good for
power users who know what they are doing. It is also a great
installation method for those who would like to know more about the
inner workings of Gentoo Linux.
</p>

<p>
A <e>stage1</e> installation can only be performed when you have a working
Internet connection.
</p>

<table>
<tr>
  <th>Stage1</th>
  <th>Pros and Cons</th>
</tr>
<tr>
  <th>+</th>
  <ti>
    Allows you to have total control over the optimization settings and optional
    build-time functionality that is initially enabled on your system
  </ti>
</tr>
<tr>
  <th>+</th>
  <ti>Suitable for powerusers that know what they are doing</ti>
</tr>
<tr>
  <th>+</th>
  <ti>Allows you to learn more about the inner workings of Gentoo</ti>
</tr>
<tr>
  <th>-</th>
  <ti>Takes a long time to finish the installation</ti>
</tr>
<tr>
  <th>-</th>
  <ti>
    If you don't intend to tweak the settings, it is probably a waste of time
  </ti>
</tr>
<tr>
  <th>-</th>
  <ti>
    Not suitable for networkless installations
  </ti>
</tr>
</table>

<p>
<e>Stage2</e> installs allow you to skip the bootstrap process and doing this
is fine if you are happy with the optimization settings that we chose
for your particular <e>stage2</e> tarball.
</p>

<p>
A <e>stage2</e> installation can only be performed when you have a working
Internet connection.
</p>

<table>
<tr>
  <th>Stage2</th>
  <th>Pros and Cons</th>
</tr>
<tr>
  <th>+</th>
  <ti>You don't need to bootstrap</ti>
</tr>
<tr>
  <th>+</th>
  <ti>Faster than starting with stage1</ti>
</tr>
<tr>
  <th>+</th>
  <ti>You can still tweak your settings</ti>
</tr>
<tr>
  <th>-</th>
  <ti>You cannot tweak as much as with a stage1</ti>
</tr>
<tr>
  <th>-</th>
  <ti>It's not the fastest way to install Gentoo</ti>
</tr>
<tr>
  <th>-</th>
  <ti>You have to accept the optimizations we chose for the bootstrap</ti>
</tr>
<tr>
  <th>-</th>
  <ti>
    Not suitable for networkless installations
  </ti>
</tr>
</table>

<p>
Choosing to go with a <e>stage3</e> allows for the fastest install of Gentoo
Linux, but also means that your base system will have the optimization
settings that we chose for you (which to be honest, are good settings
and were carefully chosen to enhance performance while maintaining
stability). <e>stage3</e> is also required if you want to install Gentoo using
prebuilt packages or without a network connection.
</p>

<table>
<tr>
  <th>Stage3</th>
  <th>Pros and Cons</th>
</tr>
<tr>
  <th>+</th>
  <ti>Fastest way to get a Gentoo base system</ti>
</tr>
<tr>
  <th>+</th>
  <ti>Suitable for networkless installations</ti>
</tr>
<tr>
  <th>-</th>
  <ti>You cannot tweak the base system - it's built already</ti>
</tr>
<tr>
  <th>-</th>
  <ti>You cannot brag about having used stage1 or stage2</ti>
</tr>
</table>

<p>
You might be interested to know that, if you decide to use different 
optimization settings after having installed Gentoo, you will be able to 
recompile your entire system with the new optimization settings.
</p>

<p>
Now take a look at the available installation media.
</p>

</body>
</subsection>
<subsection>
<title>Net Booting</title>
<body>

<p>
Often times your ARM system will support fetching of kernels via TFTP and 
booting from a NFS server.  This means you'll probably need a DHCP server 
and TFTP server already running on your network.  Information on setting
up a <uri link="/doc/en/diskless-howto.xml#doc_chap3">DHCP server</uri> and <uri
link="/doc/en/diskless-howto.xml#doc_chap4">TFTP server</uri> are available in
the <uri link="/doc/en/diskless-howto.xml">Diskless-HOWTO</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Net Booting your ARM System</title>
<body>

<p>
To be able to install Gentoo, you can download a kernel via TFTP and then mount 
a temporary root filesystem over NFS.  This setup should provide the necessary 
tools to create filesystems, create and mount partitions, extract a tarball and 
chroot.  You can download existing net boot images which have all tools in them...
</p>

<note>
In the following examples we assume the TFTP/NFS/DHCP/etc... server has the IP 
of 192.168.0.10 and the machine you are trying to install onto has the IP 
192.168.0.15.  Furthermore, the NFS root will be located at <path>/mnt/netboot</path>.
</note>

<p>
First download one of the available net boot images from our mirrors or from 
<uri>http://dev.gentoo.org/~vapier/arm/</uri>.  Put the vmlinux (uncompressed) 
into a directory readable by the TFTP server.  Next we'll have to set up a NFS 
server and extract the <path>nfsroot.tar.bz2</path> somewhere readable by the 
NFS server.
</p>

<pre caption="Setting up NFS server">
# <i>emerge nfs-utils</i>
# <i>grep nfs /proc/filesystems</i>
<comment>You should nfs in the output of grep.  If you don't, add NFS support to your kernel and try again.</comment>
# <i>mkdir /mnt/netboot</i>
# <i>tar -jxf nfsroot.tar.bz2 -C /mnt/netboot/</i>
# <i>echo "/mnt/netboot 192.168.0.15(async,rw,no_root_squash)" >> /etc/exports</i>
# <i>/etc/init.d/nfs start</i>
</pre>

<p>
Now, set up your firmware to download the kernel via TFTP.  Here is how you can 
set up the Netwinder for doing this.  We will configure the Netwinder to have 
the IP "192.168.0.15" and the TFTP/NFS server to have the IP "192.168.0.10".
</p>

<pre caption="TFTP Kernel for the Netwinder">
<comment>Configure NIC with the firmware</comment>
setenv netconfig_eth1 flash
setenv eth1_ip 192.168.0.15/24

<comment>Fetch kernel via TFTP</comment>
setenv kernconfig tftp
setenv kerntftpserver 192.168.0.10
setenv kerntftpfile /path/to/vmlinux

<comment>Mount root filesystem over NFS</comment>
setenv rootconfig nfs
setenv rootpath 192.168.0.10:/mnt/netboot

<comment>Load the system</comment>
boot
</pre>

<p>
If everything was set up properly, you should see something along the lines of 
"Receiving bootfile vmlinux from bootserver 192.168.0.10".  Once the kernel 
transfers and the NFS root is mounted, you should be dropped into a shell.  For 
your convenience, a small ssh server is autostarted with the default password 
of "i love gentoo".  You can change this by setting the root password in the 
<path>/etc/shadow</path> file in the NFS root.  You can now continue with 
the chapter on <uri link="?part=1&amp;chap=3">Configuring your Network</uri>.
</p>

</body>
</subsection>
</section>
</sections>
