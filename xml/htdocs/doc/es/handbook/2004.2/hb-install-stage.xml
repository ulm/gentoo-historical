<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/2004.2/hb-install-stage.xml,v 1.1 2004/11/16 11:12:59 chiguire Exp $ -->

<sections>
<section>
<title>Escogiendo el Stage correcto</title>
<subsection>
<title>Colocando la Fecha/Hora correcta</title>
<body>

<p>
Antes de continuar debes revisar la fecha y la hora y
actualizarlos. ¡Un reloj mal configurado puede traer
resultados extraños a futuro!
</p>

<p>
Para verificar la fecha/hora actual, ejecute el comando <c>date</c>:
</p>

<pre caption="Verificando la fecha/hora">
# <i>date</i>
Thu Apr  1 16:21:18 CEST 2004
</pre>

<p>
Si la fecha/hora está equivocada, actualícela con el comando <c>date
MMDDhhmmCCYY</c>, con la siguiente sintaxis (<b>M</b>es, <b>D</b>ía,
<b>h</b>ora, <b>m</b>inuto, <b>C</b> sigloentury y <b>Y</b> año). Por
ejemplo, para colocar la fecha y hora a las 16:21 horas del 1o de
abril del 2004:
</p>

<pre caption="Ajustando la fecha/hora">
# <i>date 040116212004</i>
</pre>
</body>
</subsection>

<subsection>
<title>Haciendo su escogencia</title>
<body>

<p>
El próximo paso para llevar a cabo es instalar el tarball del archivo
<e>stage</e> escogido en su sistema. Tiene la opción de descargarlo
del Internet o, si ha arrancado con un LiveCD Universal Gentoo,
cópielo del mismo CD.
</p>

<ul>
<li><uri link="#doc_chap2">Por defecto: Descargar los Stages de Internet</uri></li>
<li><uri link="#doc_chap3">Alternativa: Usar el Stage de un LiveCD</uri></li>
</ul>
</body>
</subsection>
</section>

<section>
<title>Por defecto: Por defecto: Descargar los Stages de Internet</title>
<subsection>
<title>Descargando el Stage comprimido</title>
<body>

<p>
Vete al punto de montaje de Gentoo en el que has montado los sistemas
de archivo (probablemente <path>/mnt/gentoo</path>):
</p>

<pre caption="Ir al punto de montaje de Gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Dependiendo del medio de instalación, tendremos un par de herramientas 
disponibles para descargar el stage. Si usamos <c>lynx</c>,
podremos navegar por <uri link="/main/en/mirrors.xml">la lista de
servidores espejo de Gentoo</uri> y escoger el más cercano a
nosotros. Luego entrar en el directorio <path>releases/</path> seguido
de tu arquitectura (por ejemplo <path>x86/</path> y la versión de
Gentoo (<path>1.4/</path>) para finalizar con el directorio de los
stages <path>stages/</path>. Allí deberías ver todos los archivos de
las stages disponibles para tu arquitectura. Selecciona uno y presiona
<c>D</c> para descargarlo. Cuando se haya descargado, presiona
<c>Q</c> para cerrar el navegador.
</p>

<pre caption="Navegando por la lista de servidores espejo con lynx">
# <i>lynx http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Si no disponemos de <c>lynx</c>, deberíamos tener<c>links2</c> a
nuestra disposición. <c>links2</c> es más potente que <c>lynx</c>,
pero tiene algunas desventajas. Una de ellas es que no escucha las
variables del proxy que hayamos declarado con anterioridad. Si
necesitamos configurar un proxy, usa <c>links2 -http-proxy
proxy.server.com:8080</c>. Tras esto, seguiremos los mismos pasos que
con  <c>lynx</c> ya que su manejo es igual.
</p>

<pre caption="Navegando por la lista de servidores espejo con links2">
<comment>(Sin proxy:)</comment>   # <i>links2 http://www.gentoo.org/main/es/mirrors.xml</i>
<comment>(Con proxy:)</comment>   # <i>links2 -http-proxy proxy.server.com:8080
http://www.gentoo.org/main/es/mirrors.xml</i>
</pre>

</body>
</subsection>

<subsection>
<title>Extraer el Stage comprimido</title>
<body>

<p>
Ahora desempaquetamos el stage descargado en sistema. Usaremos el
<c>tar</c> de GNU para dicha labor y este es el método más fác
</p>

<pre caption="Desempaquetando el Stage">
# <i>tar -xvjpf stage?-*.tar.bz2</i>
</pre>

<p>
Asegúrate de usar las mismas opciones <c>-xvjpf</c>). El <c>x</c> se usa para
<e>Desempaquetar</e>, el <c>v</c> para <e>Verbose</e> (Ok, si, es opcional),
el <c>j</c> para <e>Decomprimir con bzip2</e>, el <c>p</c> para <e>Preservar
los permisos</e> y el <c>f</c> para decir que extraemos un archivo, no
la entrada estándard.
</p>

<p>
¿Hecho?, OK, ahora estás preparado para proceder con la siguiente sección en <uri
link="#doc_chap4">Configurando las opciones de compilación</uri>.
</p>
</body>
</subsection>
</section>

<section>
<title>Alternativa: Usar un Stage de un LiveCD</title>
<subsection>
<title>Extraer el Stage comprimido</title>
<body>

<p>
Los Stages en el CD están situados en el directorio <path>/mnt/cdrom/stages</path>. Para ver una lista de los Stages disponibles, usa <c>ls</c>:
</p>

<pre caption="Listar todos los stages disponibles">
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Si el sistema responde con un error, tal vez necesites montar el CD-ROM primero:
</p>

<pre caption="Montando el CD-ROM">
# <i>ls /mnt/cdrom/stages</i>
ls: /mnt/cdrom/stages: No such file or directory
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom</i>
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Ahora en tu punto de montaje de Gentoo (Normalmente <path>/mnt/gentoo</path>):
</p>

<pre caption="Cambiando el directorio a /mnt/gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Ahora extraeremos el Stage comprimido que hayas elegido. Usaremos el
<c>tar</c> de GNU para dicha labor. ¡Asegúrate de usar las mismas
opciones <c>-xvjpf</c>)! En el siguiente ejemplo, extraeremos el Stage
comprimido <path>stage3-20031011.tar.bz2</path>. Asegúrate de
sustituir el nombre por el de tu Stage.
</p>

<pre caption="Desempaquetando el Stage">
# <i>tar -xvjpf /mnt/cdrom/stages/stage3-20031011.tar.bz2</i>
</pre>
</body>
</subsection>

<subsection>
<title>Instalando la imagen de Portaga y las Fuentes</title>
<body>

<p>
Hay una imagen de Portage disponible en algunos LiveCDs. Desde que
estás leyendo esto, nosotros asumimos seguramente que tu estás usando
un LiveCD. Para instalar esta imagen, echa un vistazo dentro de
<path>/mnt/cdrom/snapshots/</path> para ver que imagen está
disponible:
</p>

<pre caption="Comprobando el contenido de /mnt/cdrom/snapshots">
# <i>ls /mnt/cdrom/snapshots</i>
</pre>

<p>
Ahora extraeremos la imagen siguiendo el siguiente método. De nuevo asegúrate de usar las opciones correctas para <c>tar</c>. También, la <c>-C</c> que es mayúscula <c>C</c>, no <c>c</c>. En el siguiente ejemplo usaremos <path>portage-20031011.tar.bz2</path> como el nombre de la imagen. Asegúrate de sustuirlo por el nombre de tu imagen.
</p>

<pre caption="Extrayendo la imagen de Portage">
# <i>tar -xvjf /mnt/cdrom/snapshots/portage-20031011.tar.bz2 -C
/mnt/gentoo/usr</i></pre>

<p>
También necesitarás copiar todas las fuentes desde el CD.
</p>

<pre caption="Copia de las fuentes">
# <i>cp -R /mnt/cdrom/distfiles /mnt/gentoo/usr/portage/distfiles</i>
</pre>

<p>
Si quieres usar PRG (Plataforma de Referencia Gentoo, paquetes
precompilados), sigue leyendo. De otra forma continúa con el <uri link="#doc_chap4">Configurando las opciones de compilación</uri>.
</p>
</body>
</subsection>

<subsection>
<title>Opcional: Preparando la PRG</title>
<body>

<p>
Si quieres instalar Gentoo usando la PRG (Plataforma de Referencia
Gentoo, paquetes precompilados), necesitarás copiar todos los paquetes
en tu sistema de archivos para que Portage los pueda usar.
</p>

<pre caption="Copia de los paquetes precompilados">
# <i>cp -a /mnt/cdrom/packages /mnt/gentoo/usr/portage/packages</i>
</pre>

<p>
Ahora contiua con <uri link="#doc_chap4">Configurando las opciones de compilación</uri>.
</p>
</body>
</subsection>
</section>

<section>
<title>Configurando las opciones de compilación</title>

<subsection>
<title>Introducción</title>
<body>
<p>
Para optimizar Gentoo, tendrás que ajustar un par de variables que
afectarán el comportamiento de Portage. Todas estas variables se
pueden fijar como variables de entorno (usando <c>export</c>) pero eso
no es permanente. Para mantener tu configuración, Portage dispone de
<path>/etc/make.conf</path>, un fichero de configuración para
Portage. Este es el fichero que editaremos ahora.
</p>

<p>
Usa tu editor favorito (en esta guía nosotros usaremos <c>nano</c>. Así que empezamos con la modificación de las variables.
</p>

<pre caption="Abriendo /etc/make.conf">
# <i>nano -w /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Como probablemente te darás cuenta, el fichero <path>make.conf</path>
está estructurado de una manera genérica: Las líneas comentadas
empiezan con "#", otras líneas definen variables usando la sintaxis
<c>VARIABLE="contenido"</c>. Discutiremos muchas de esas variables más
adelante.
</p>
</body>
</subsection>

<subsection>
<title>CHOST</title>
<body>

<warn>Aunque puede ser interesante para los usuarios que no iniciaron
la instalación con el Stage 1, no deberían cambiar el parámetro
<c>CHOST</c> en el <path>make.conf</path> ya que pueden volver el
sistema inusable. De nuevo: Solo cambies esta variable si usas una
instalación desde el <e>stage1</e>.
</warn>

<p>
La variable <c>CHOST</c> define la arquitectura para la cual
<c>gcc</c> ha de compilar los programas. Las posibilidades son:
</p>

<table>
<tr>
  <th>Arquitectura</th>
  <th>Subarquitectura</th>
  <th>Valor del CHOST</th>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i386</ti>
  <ti>i386-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i486</ti>
  <ti>i486-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i586</ti>
  <ti>i586-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i686 y superior (incl. athlon)</ti>
  <ti>i686-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>alpha</ti>
  <ti></ti>
  <ti>alpha-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>ppc</ti>
  <ti></ti>
  <ti>powerpc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>sparc</ti>
  <ti></ti>
  <ti>sparc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>(genérico)</ti>
  <ti>hppa-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>pa7000</ti>
  <ti>hppa1.1-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>pa8000 y superior</ti>
  <ti>hppa2.0-unknown-linux-gnu</ti>
</tr>
</table>
</body>
</subsection>

<subsection>
<title>CFLAGS y CXXFLAGS</title>
<body>

<p>
Las variables <c>CFLAGS</c> y <c>CXXFLAGS</c>, definen los parámetros
de optimización para el compilador de C y C++ de <c>gcc</c>
respectivamente. Aunque generalmente se definen aquí, tendrás el
máximo rendimiento si optimizas estos parámetros para cada programa
por separado. La razón es que cada programa es diferente.
</p>

<p>
En el fichero <path>make.conf</path> deberás definir los parámetros de
optimización que pienses que vayan a hacer tu sistema el mejor <e>en
todas las situaciones</e>. No coloques parámetros experimentales en
esta variable; un nivel demasiado alto de optimización puede hacer que los programas se comporten mal (cuelgues, o incluso peor, funcionamientos erróneos).
</p>

<p>
No explicaremos todas las opciones posibles para la optimización. Pero
si quieres conocerlas todas, léete <uri
link="http://www.gnu.org/software/gcc/onlinedocs/">El manual en línea
de GNU</uri> o la página info de <c>gcc</c> (<c>info gcc</c> -- Solo
en un sistema Linux funcional). El fichero <path>make.conf</path>
también contiene una gran cantidad de ejemplos e información; no
olvides leerlo también.
</p>

<p>
La primera variable es el parámetro <c>-march=</c>, que especifica el nombre de la arquitectura seleccionada. Las posibles opciones están descritas en el fichero <path>make.conf</path> (como comentarios). Por ejemplo, para la arquitectura x86 Athlon XP:
</p>

<pre caption="El parámetro march de GCC">
-march=athlon-xp
</pre>

<p>
Seguida de esta, está el parámetro <c>-O</c>, que especifica la clase
optimización de <c>gcc</c>. Las clases posibles son <c>s</c> (para
tamaño optimizado), <c>0</c> (para no optimizar), <c>1</c>, <c>2</c>
or <c>3</c> para la optimización de velocidad (cada clase tiene los
mismos parámetros que la primera, más algunos extras). Por ejemplo
para una optimización de clase 2:
</p>

<pre caption="El parámetro O de GCC">
-O2
</pre>

<p>
Otros parámetros de optimización bastante populares son los
<c>-pipe</c> (usando tuberías en lugar de ficheros temporales para la
comunicación entre las diferentes etapas de compilación).
 </p>

 <p>
Cuidado con utilizar <c>-fomit-frame-pointer</c> (el cual no mantiene
el puntero de macro en un registro para las funciones que no lo necesiten) 
pues podría tener graves repercusiones en la depuración de errores en 
aplicaciones.
 </p>

<p>
Cuando definimos las variables <c>CFLAGS</c> y <c>CXXFLAGS</c>,
deberías combinar algunos parámetros de optimización, como en el
ejemplo siguiente:
</p>

<pre caption="Definiendo las variables CFLAGS y CXXFLAGS">
CFLAGS="-march=athlon-xp -pipe -O2"
CXXFLAGS="${CFLAGS}"                  <comment># Usa las mismas opciones para las dos variables</comment></pre>
</body>
</subsection>

<subsection>
<title>USE</title>
<body>

<p>
Los parámetros <c>USE</c> son unas de las más potentes variables que
Gentoo da a sus usuarios. Muchos programas pueden ser compilados con o
sin soporte opcional para ciertas opciones. Por ejemplo, algunos
programas pueden ser compilados con soporte para GTK, o con soporte
para QT. Otros pueden ser compilados con o sin soporte SLL. Algunos
porgramas pueden ser compilados con soprote para framebuffer (svgalib)
en lugar de soporte para X11 (Servidor X).
</p>

<p>
La mayor parte de las distribuiciones compilan sus paquetes con
soporte para lo que pueden, aumentando el tamaño de los programas y el
tiempo de arranque de los mismos, por no decir del enorme aumento de
las dependencias. Con Gentoo puedes definir con que opciones quieres
que se compile un paquete. Aquí es donde entran en juego los
parámetros <c>USE</c>.
</p>

<p>
En los parámetros <c>USE</c> definimos las claves que son mapeadas
como opciones de compilación. Por ejemplo, <e>ssl</e> compilará con
soporte SSL los programas que lo soporten. <e>-X</e> eliminará el
soporte para el servidor X (nota: el signo menos va delante). <e>gnome
gtk -kde -qt</e> compilará tus programas con soporte para Gnome y GTK,
y no con soporte para KDE (y QT), haciendo nuestro que nuestro sistema
está personalizado para Gnome.
</p>

<p>
Los parámetros <c>USE</c> por defecto están colocados en
<path>/etc/make.profile/make.defaults</path>. Y los que pongas en
<path>/etc/make.conf</path> se calculan contra los parámetros por
defecto. Si fijamos alguno a los parámetros <c>USE</c>, es añadido
automáticamente a la lista por defecto. Si quitamos algún parámetro
<c>USE</c> fijado (colocando un signo menos delante de él) es
eliminado de la lista por defecto. <e>Nunca</e> cambies nada dentro
del directorio <path>/etc/make.profile</path>; ¡Este directorio se
sobreescribe cada vez que se actualiza Portage!
</p>

<p>
Una completa descripción de los parámetros <c>USE</c> la podemos encontrar en <uri
link="/doc/en/use-howto.xml">El USE-Como</uri>. Como ejemplo tenemos
una configuración de los parámetros <c>USE</c> para un sistema basado
en KDE con DVD, ALSA y CD:
</p>

<pre caption="Configuración de los parámetros USE">
USE="-gtk -gnome qt kde dvd alsa cdr"
</pre>
</body>
</subsection>

<subsection>
<title>ACCEPT_KEYWORDS</title>
<body>

<p>
Los ebuilds (el formato de paquetes que usa Gentoo) están distribuidos
en tres árboles. El primero se llama <e>ARCH</e>, que significa que el
ebuild y sus dependencias están pensadas para la estabilidad y listas
para el uso general. La mayor parte de la gente querrá esta opción. Si
queremos que nuestro sistema use los paquete de <e>ARCH</e>, la
variable <c>ACCEPT_KEYWORDS</c> deberá contener nuestra arquitectura
(bien sea <c>x86</c>, <c>alpha</c>, <c>ppc</c>, <c>sparc</c> o
<c>hppa</c>):
</p>

<pre caption="Fijando la variable ACCEPT_KEYWORDS para la arquitectura x86 en ARCH">
ACCEPT_KEYWORDS="x86"
</pre>

<p>
Cuando un ebuild entra en Portage, primeramente va a <e>~ARCH</e>, que
quiere decir que el ebuild funciona para el mantenedor del mismo, pero
que el paquete necesita más pruebas antes de ser movido a
<e>ARCH</e>. Si quieres que tu sistema use paquetes de <e>~ARCH</e>,
entonces la variable <c>ACCEPT_KEYWORDS</c> deberá contener tu
arquitectura, precedida por una tilde (<e>~</e>). <e>No</e> pienses
que esto es el equivalente de "en prueba" o "inestable" en otras
distribuiciones. ¡Los paquetes dentro de <e>~ARCH</e> a veces
<e>pueden</e> fallar! sobre todo en algunas arquitecturas, incluso no
realizarán el bootstrap si usamos el <e>~ARCH</e> (sobre todo SPARC).
</p>

<pre caption="Fijando la variable ACCEPT_KEYWORDS para la arquitectura x86 en ~ARCH">
ACCEPT_KEYWORDS="~x86"
</pre>

<p>
Si quieres usar paquetes, que se sabe que dañarán tu sistema, si
realmente quieres bajar a los infiernos y descomenta los paquetes en
<path>/usr/portage/profiles/package.mask</path>. Aunque, esto es un
gran y gordo aviso:
</p>

<warn>
Jugar con el fichero <path>package.mask</path> no es recomendable para
tu sistema, la salud y tu humor. <e>No</e> lo toques a menos de que
conduzcas un tanque, lleves un chaleco antibalas de teflón 24h los 7
días de la semana y te encante sentarte y esperar mirando como Gentoo
es reinstalado de nuevo ... y de nuevo ... y de nuevo ...
</warn>
</body>
</subsection>

<subsection>
<title>MAKEOPTS</title>
<body>

<p>
Con la variable <c>MAKEOPTS</c> definimos cuantas compilaciones
paralelas pueden hacerse al mismo tiempo cuando instalamos un
paquete. El número sugerido es la cantidad de CPUs de tu sistema, más uno
</p>

<pre caption="MAKEOPTS para un sistema normal de 1-CPU">
MAKEOPTS="-j2"
</pre>
</body>
</subsection>

<subsection>
<title>¡Preparados, listos, ya!</title>
<body>

<p>
Actualiza tu <path>/mnt/gentoo/etc/make.conf</path> con tus propios
parámetros y guarda los cambios. Ahora estamos listos para continuar
con <uri link="?part=1&amp;chap=6">Instalando el sistema base de Gentoo</uri>.
</p>
</body>
</subsection>
</section>
</sections>
