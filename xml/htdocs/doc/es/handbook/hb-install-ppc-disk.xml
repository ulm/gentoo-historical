<?xml version = '1.0' encoding = 'UTF-8' ?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/handbook/hb-install-ppc-disk.xml,v 1.10 2007/05/15 11:35:47 chiguire Exp $ -->

<sections>

<version>8.1</version>
<date>2007-05-08</date>

<section>
<title>Introducción a los dispositivos de bloque</title>
<subsection>
<title>Dispositivos de bloque</title>
<body>

<p>
Empezaremos examinando de forma detallada los aspectos de Gentoo Linux así 
como Linux en general que tengan que ver con discos, sistemas de ficheros
de Linux, particiones y dispositivos de bloque. Una vez estemos
familiarizados con las entrañas de los discos y sistemas de ficheros,
veremos el proceso de creación de particiones y sistemas de ficheros
en una instalación Gentoo Linux.
</p>

<p>
Para empezar, explicaremos el término <e>dispositivos de bloque</e>. El
dispositivo de bloque más común es el que representa la primera unidad
IDE llamada <path>/dev/hda</path> en un sistema Linux. Si está instalando
en un dispositivo SCSI, FireWire, USB o SATA, entonces el primer disco
duro debería ser <path>/dev/sda</path>. Los discos adicionales se enumeran
con la siguiente letra del alfabeto. Como ejemplo, el tercer disco IDE se 
puede localizar com <path>/dev/hdc</path>.
</p>

<p>
Los dispositivos de bloque mencionados anteriormente representan una
interfaz abstracta del disco. Las aplicaciones pueden hacer uso de
estas interfaces para interactuar con el disco sin importar el tipo de
unidad que se trate: IDE, SCSI, o cualquier otra. La aplicación puede
simplemente dirigirse al almacenamiento en el disco como a una serie
de bloques de acceso aleatorio de 512-bytes situados de forma
contigua.
</p>

</body>
</subsection>
<subsection>
<title>Particiones</title>
<body>

<p>
Aunque teóricamente es posible utilizar el disco duro completo para
albergar la instalación Linux, esto casi nunca se hace. En su lugar,
los discos se dividen en dispositivos de bloque más pequeños y
manejables. En muchos sistemas se llaman <e>particiones</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Diseño de un esquema de particionamiento</title>
<subsection>
<title>Esquema de particionamiento por defecto</title>
<body>

<p>
Si no queremos diseñar un esquema de particionamiento específico para
el sistema, podemos hacer uso del esquema utilizado en este manual. 
Elegiremos el esquema de sistema de ficheros que mejor se adapte al tipo de
PowerPC donde estamos instalando.
</p>

</body>
</subsection>
<subsection>
<title>Apple New World</title>
<body>

<p>
Las máquinas Apple New World son bastante sencillas de configurar. La
primera partición es siempre una <e>Apple Partition Map</e>. Esta partición
guarda registro de la disposición del disco. Esta partición no se puede
eliminar. La siguiente partición debe ser siempre la partición de bootstrap.
Esta partición contiene un pequeño sistema de ficheros HFS (800k) que
mantiene una copia del gestro de arranque de Yaboot y su fichero de
configuración. Esta partición <e>not</e> es la misma que la partición
<path>/boot</path> que puede encontrarse en otras arquitecturas. Después de
la partición de arranque, se ubican los habituales sistemas de ficheros Linux,
de acuerdo con la disposición siguiente. La partición de intercambio es un
lugar de almacenamiento temporal usado cuando el sistema se queda sin memoria
física. La partición root contiene los sistemas de ficheros donde Gentoo se
instala. Si queremos un arranque dual, la partición OSX puede ubicarse en
cualquier lugar después de la partición de bootstrap para asegurarnos que
yaboot se inicia primero.
</p>

<note>
Puede haber particiones "Disk Driver" en el disco duro tales que
<path>Apple_Driver63</path>, <path>Apple_Driver_ATA</path>,
<path>Apple_FWDriver</path>, <path>Apple_Driver_IOKit</path>, y
<path>Apple_Patches</path> que son utilizadas para arrancar MacOS, por tanto,
si no las necesita para esto puede borrarlas inicializando el disco con la
opción <c>i</c> de mac-fdisk. ¡Esto borra completamente el disco! Si tiene
dudas, simplemente déjelas.
</note>

<note>
Si hemos particionado el disco con la Utilidad de Disco de Apple, puede
haber espacios de 128Mb entre particiones que Apple reserva para "uso futuro".
Se pueden borrar sin peligro.
</note>

<table>
<tr>
  <th>Partición</th>
  <th>Tamaño</th>
  <th>Sistema de ficheros</th>
  <th>Descripción</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32k</ti>
  <ti>None</ti>
  <ti>Apple Partition Map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>800k</ti>
  <ti>HFS</ti>
  <ti>Apple Bootstrap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Intercambio para Linux</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti>Resto del disco</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Raíz de Linux</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Apple Old World</title>
<body>

<p>
Las máquinas Apple Old World son un poco más complicadas de configurar. La
primera partición es simpre una <e>Apple Partition Map</e>. Esta partición
guarda registro de la disposición del disco. Esta partición no se puede
eliminar. Si está usando BootX, la configuración siguiente supone que MacOS
está instalado en un disco a parte. Si este no es el caso, habrá
particiones adicionales para los "Apple Disk Drivers" tales que
<path>Apple_Driver63, Apple_Driver_ATA, Apple_FWDriver,Apple_Driver_IOKit,
Apple_Patches</path> y la instalación de MacOS. Si está usando Quik,
necesitará crear una partición de arranque para contener el núcleo, a
diferencia de otros métodos de arranque de Apple. Después de la partición
de arranque se encuentran los sistemas de ficheros habituales de Linux de
acuerdo al esquema siguiente. La partición de intercambio es un lugar de
almacenamiento temporal usado cuando el sistema se queda sin memoria física.
La partición root contiene los sistemas de ficheros donde Gentoo se instala.
</p>

<note>
Si está utilizando una máquina Apple Old World, necesitará mantener
MacOS disponible. Esta disposición asume que MacOS está instalado en un
disco distinto.
</note>

<table>
<tr>
  <th>Partición</th>
  <th>Tamaño</th>
  <th>Sistema de ficheros</th>
  <th>Descripción</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32k</ti>
  <ti>None</ti>
  <ti>Apple Partition Map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>32Mb</ti>
  <ti>ext2</ti>
  <ti>Partición de arranque de Quik (sólo para quik)</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Intercambio para Linux</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti>Resto del disco</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Raíz de Linux</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Pegasos</title>
<body>

<p>
La distribución de particiones en el Pegasos es bastante simple comparada
con la de los Apple. La primera partición es la partición de arranque,
que contiene los núcleos a arrancar junto con un guión de OpenFirmware
que presentan un menú en el arranque. Después de la partición de boot,
se situan los sistemas de ficheros habituales de Linux, según el siguiente
esquema.  La partición de intercambio es un lugar de almacenamiento temporal
usado cuando el sistema se queda sin memoria física. La partición root
contiene los sistemas de ficheros donde Gentoo se instala.
</p>

<table>
<tr>
  <th>Partición</th>
  <th>Tamaño</th>
  <th>Sistema de ficheros</th>
  <th>Descripción</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32Mb</ti>
  <ti>affs1 or ext2</ti>
  <ti>Partición de arranque</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Intercambio para Linux</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Resto del disco</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Raíz de Linux</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>IBM PReP (RS/6000)</title>
<body>

<p>
La IBM PowerPC Reference Platform (PReP) requiere una pequeña partición
PReP de arranque en la primera partición del disco, seguida de las
particiones de intercambio y raíz.
</p>

<table>
<tr>
  <th>Partición</th>
  <th>Tamaño</th>
  <th>Sistema de ficheros</th>
  <th>Descripción</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>800k</ti>
  <ti>None</ti>
  <ti>Partición de arranque PReP (Type 0x41)</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Intercambio para Linux (Type 0x82)</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Resto del disco</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Raíz de Linux (Type 0x83)</ti>
</tr>
</table>

<warn>
<c>parted</c> es capaz de redimensionar particiones incluyendo HFS+.
Desafortunadamente pueden haber problemas redimensionando sistemas de
ficheros HFS+ con transacciones (journaling), por tanto, para mejores
resultados, podemos desactivar la transaccionalidad en Mac OS X antes de
redimensionar. Recuerde que cualquier operación de redimensionamiento es
peligrosa, ¡hágalo bajo su propia responsabilidad! ¡Hay que asegurarse
siempre de tener una copia de seguridad de los datos antes de redimensionar!
</warn>

<p>
Si queremos conocer el tamaño que debería tener una partición, o
incluso cuantas particiones necesitamos, hay que continuar con la
siguiente sección. En caso contrario, seguiremos con <uri
link="#mac-fdisk" >Por defecto: Uso de mac-fdisk (Apple) para
particionar el disco</uri> o <uri link="#parted" >Alternativa: Uso de
parted (IBM/Pegasos) para particionar el disco</uri>.
</p>

</body>
</subsection>
<subsection>
<title>¿Cuántas y de qué tamaño?</title>
<body>

<p>
El número de particiones que se necesitan depende mucho del entorno
particular. Por ejemplo, si la máquina tiene muchos usuarios, lo más
probable es que se quiera tener <path>/home</path> en una partición
separada para facilitar las tareas de copia de respaldo y aumentar la
seguridad. Si se está instalando Gentoo para funcionar como servidor
de correo, deberemos tener <path>/var</path> sobre una partición
separada ya que es allí dónde se almacena todo el correo recibido.
Una buena elección del sistema de ficheros optimizará el rendimiento
del equipo. Los servidores de juegos deben disponer de una partición
<path>/opt</path> ya que la mayoría de juegos se instalan en ese
directorio. La razón es similar a la mencionada para <path>/home</path>:
seguridad y salvaguarda de datos. Independientemente de la disposición
que elijamos, querremos definitivamente tener un gran <path>/usr</path>:
no sólo contendrá la mayor parte de aplicaciones, también el árbol 
de Portage que por sí mismo ocupa alrededor de 500 MByte sin incluir
las fuentes que igualmente se almacenan en él.
</p>

<p>
Como se puede ver, todo dependerá de lo que queramos conseguir. Tener
particiones o volúmenes separados tiene las siguientes ventajas:
</p>

<ul>
<li>
  Elegimos el mejor sistema de ficheros para cada partición o volumen
</li>
<li>
  El sistema en su totalidad no se quedará sin espacio si una
  herramienta o aplicación está escribiendo datos de forma continua en
  el volumen o partición
 </li>
<li>
  Si es el caso, el tiempo dedicado a las comprobaciones de integridad
  de sistemas de ficheros se reduce, ya que las comprobaciones pueden
  ser llevadas acabo en paralelo (sin embargo esta ventaja es mayor
  con múltiples discos que con múltiples particiones)
</li>
<li>
  La seguridad puede ser mejorada montando algunas de las particiones
  en modo sólo lectura, nosuid (los bits setuid se ignoran), noexec
  (los bits de ejecución se ignoran), etc.
</li>
</ul>

<p>
Sin embargo, tener múltiples particiones tiene una gran desventaja: si la 
configuración no es la adecuada, podemos acabar teniendo mucho espacio
libre en una de las particiones y quedarnos sin espacio en
otras. Además, existe un límite de 15 particiones para SCSI y SATA.
</p>
</body>
</subsection>

</section>
<section id="mac-fdisk" >
<title>Por defecto: Uso de mac-fdisk (Apple/IBM) para particionar el 
disco</title>
<body>

<p>
Ahora es el momento de crear las particiones con <c>mac-fdisk</c>:
</p>

<pre caption="Inicio de mac-fdisk" >
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
Si hemos utilizado la utilidad de disco de Apple para dar espacio a Linux,
primero borraremos las particiones que hemos creado previamente para hacer
sitio a la nueva instalación. Usamos <c>d</c> en <c>mac-fdisk</c> para
borrarla(s). Nos preguntará por el número de partición a borrar.
Normalmente la primera partición en las máquinas NewWorld
(Apple_partition_map) no debe ser borrada. Si queremos empezar con un disco
limpio, basta simplemente iniciarlizarlo pulsando <c>i</c>, lo que borrará
completamente el disco, por ello debe utilizarse con precaución.
</p>

<p>
En segundo lugar, crearemos una partición <e>Apple_Bootstrap</e> usando
<c>b</c>. Nos preguntará cuál es el bloque inicial. Introduciremos el
número de la primera partición libre seguido de una <c>p</c>. Por
ejemplo sería <c>2p</c>.
</p>

<note>
Esta partición <e>no</e> es una partición <path>/boot</path>. Linux no
la utilizará para nada; no deberemos crear ningún sistema de ficheros
en ella y no deberemos montarla nunca. Los usuarios de Apple no
necesitan una partición extra para <path>/boot</path>.
</note>

<p>
Ahora crearemos una partición de intercambio presionando <c>c</c>. De
nuevo, <c>mac-fdisk</c> preguntará cuál es el bloque en el que
queremos que esta partición comience. Como anteriormente hemos usado
<c>2</c> para crear la partición Apple_Bootstrap, ahora tendríamos que
teclear <c>3p</c>. Cuando nos pregunte por el tamaño, indicaremos
<c>512M</c> (o el tamaño que queramos, se recomienda un mínimo de
512MB, pero el tamaño generalmente recomendado es 2 veces la memoria
física). Cuando nos pida el nombre, introduciremos <c>swap</c>.
</p>

<p>
Para crear la partición raíz, teclearemos <c>c</c>, seguido de
<c>4p</c> para indicar el bloque en el que la partición debe
comenzar. Cuando nos pregunte el tamaño volveremos a poner
<c>4p</c>. <c>mac-fdisk</c> interpretará esto como  &quot;usa todo el
espacio disponible&quot;. Y cuando nos pregunte el nombre, indicaremos
<c>root</c>.
</p>

<p>
Para finalizar, escribiremos la estructura de particiones en el disco
tecleando <c>w</c> y saldremos de <c>mac-fdisk</c> con <c>q</c>.
</p>

<note>
Para asegurarnos de que todo está correcto, deberíamos ejecutar
<c>mac-fdisk -l</c> y comprobar que se muestran todas las
particiones. Si no aparece ninguna de las particiones creadas o los
cambios realizados, tendríamos que reinicializarlas pulsando
&quot;i&quot; en mac-fdisk. Esto recreará el mapa de particiones
borrándolas todas.
</note>

<p>
Ahora que las particiones ya están creadas continuaremos con
<uri link="#filesystems" >Creación de los sistemas de ficheros</uri>.
</p>

</body>
</section>
<section id="parted" >
<title>Uso de parted para particionar el disco (Pegasos y RS/6000)</title>
<body>

<p>
<c>parted</c>, por &quot;Partition Editor&quot;, puede actualmente
manejar las particiones HFS+ empleadas por MacOS y MacOS X. Con esta
herramienta se pueden redimensionar éstas y así hacer espacio para las
particiones Linux. Sin embargo, el ejemplo siguiente sólo describe el
particionamiento para sistemas Pegasos.
</p>

<p>
Empecemos iniciando <c>parted</c>:
</p>

<pre caption="Iniciando parted" >
# <i>parted /dev/hda</i>
</pre>

<p>
Si el disco está sin particionar, ejecutaremos <c>mklabel amiga</c>
para crear una nueva etiqueta para el disco.
</p>

<p>
En parted, podemos escribir <c>print</c> en cualquier momento para
mostrar la tabla de particiones en memoria. Si por cualquier razón
cambiamos de criterio o cometemos un error podemos pulsar
<c>Ctrl-c</c> para salir de parted sin guardar ningún cambio.
</p>

<p>
Si en el Pegasos también queremos instalar MorphOS deberemos crear un
sistema de ficheros affs1 al comienzo del disco. 32MB serán más que
suficientes para almacenar el núcleo de MorphOS. Si disponemos de un
Pegasos I o pretendemos usar cualquier sistema de ficheros junto a ext2
o ext3, también tendremos que almacenar el núcleo de Linux en dicha
partición (Pegasos II sólo puede arrancar de una partición ext2/ext3
o affs1). Para crear la partición ejecutaremos
<c>mkpart primary affs1 START END</c> donde <c>START</c> y <c>END</c>
deben reemplazarse por un rango en megabytes (por ejemplo, <c>0 32</c>)
que crea una partición de 32MB empezando en 0MB y acabando en 32MB. Si
en su lugar escogemos crear una partición ext2 o ext3, sustituiremos
affs1 por ext2 o ext3 en el comando mkpart.
</p>

<p>
Necesitamos crear dos particiones para Linux, una como sistema de ficheros
raíz, y otra como partición de intercambio. Ejecutaremos
<c>mkpart primary START END</c> para crear cada partición, reemplazando
<c>START</c> y <c>END</c> con las límites deseados en megabytes).
</p>

<p>
Generalmente se recomienda crear una partición de intercambio con el
doble de la RAM instalada en el ordenador. pero al menos de 512Mb. Para
crear la partición de intercambio ejecutaremos
<c>mkpart primary linux-swap START END</c> con START y END denotando
nuevamente los límites de la partición.
</p>

<p>
Cuando esté todo listo en parted saldremos simplemente con
<c>quit</c>.
</p>

</body>
</section>
<section id="filesystems" >
<title>Creación de los sistemas de ficheros</title>
<subsection>
<title>Introducción</title>
<body>

<p>
Ahora que las particiones ya están creadas, es el momento de crear un
sistema de ficheros en ellas. Si no estamos seguros del tipo de sistema
de ficheros a utilizar y estamos contentos con la configuración por
defecto continuaremos en <uri link="#filesystems-apply" >Creación de
un sistema de ficheros en una partición</uri>. En caso contrario, lea 
para aprender a cerca de los sistemas de ficheros disponibles.
</p>

</body>
</subsection>
<subsection>
<title>¿Sistemas de ficheros?</title>
<body>

<p>
Disponemos de varios sistemas de ficheros disponibles para su uso en la
arquitectura PowerPC incluyendo ext2, ext3, ReiserFS y XFS, cada uno con
sus ventajas y defectos.
</p>

<p>
<b>ext2</b> es un sistema de ficheros Linux probado, pero no dispone
de soporte para transacciones, lo que significa que las comprobaciones
rutinarias al arrancar pueden consumir bastante tiempo. En la actualidad
hay bastantes sistemas de ficheros con soporte para transacciones cuya
integridad puede ser verificada con mayor rapidez y son preferidos 
generalmente a los que no disponen de soporte transaccional.
</p>

<p>
<b>ext3</b> es la versión transaccional de ext2, proporcionando
soporte para una rápida recuperación además de otros modos mejorados
de funcionamiento como registro completo y ordenado de datos. Usa un
índice B*-tree (basado en árboles balanceados) con funciones de
resumen (hash) que permite unas altas prestaciones en casi todas las
situaciones. En resumen, ext3 es un buen y fiable sistema de ficheros
y es altamente recomendado para muchas instalaciones.
</p>

<p>
<b>ReiserFS</b> es un sistema de ficheros B*-tree  que tiene un gran
rendimiento y que sobrepasa con creces a ext2 y ext3 cuando se trata
de trabajar con ficheros pequeños (archivos menores de 4KB), en
ocasiones diez o quince veces mejor. ReiserFS es extremadamente
escalable y soporta transaccionalidad. ReiserFS es sólido y estable
para su uso en escenarios genéricos así como en casos extremos
cuando es necesario trabajar por ejemplo con grandes sistemas de
ficheros, manejar ficheros muy grandes o directorios conteniendo miles
y miles de ficheros.
</p>

<p>
<b>XFS</b> es un sistema de ficheros transaccional que cuenta con un
juego de características robustas y está optimizado para ser
escalable. Sólo recomendamos el uso de este sistema de ficheros para
aquellas plataformas Linux que dispongan de dispositivos de
almacenamiento SCSI de alto rendimiento y/o almacenamientos de canal
de fibra (en inglés, fiber channel) con sistema de alimentación
ininterrumpida. Como XFS realiza un almacenamiento temporal agresivo
de datos en tránsito en RAM, aquellas aplicaciones con defectos de
diseño (aquéllas que no toman las precauciones necesarias durante la
escritura de datos al disco, y hay bastantes) pueden perderlos en caso
de que el sistema se apague de forma inesperada.
</p>

</body>
</subsection>
<subsection>
<title>Creación de la partición de intercambio</title>
<body>

<p>
<c>mkswap</c> es el comando usado para inicializar las particiones de
intercambio:
</p>

<pre caption="Creación de una firma de swap">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
Para activar la partición de intercambio use <c>swapon</c>:
</p>

<pre caption="Activación de la partición de intercambio">
# <i>swapon /dev/hda3</i>
</pre>

<p>
Crearemos y activaremos la partición de intercambio antes de crear otros
sistemas de ficheros.
</p>

</body>
</subsection>
<subsection id="filesystems-apply" >
<title>Creación del sistema de ficheros en una partición</title>
<body>

<p>
Para crear un sistema de ficheros en una partición o volumen existen
herramientas específicas para cada sistema de ficheros:
</p>

<table>
<tr>
  <th>Sistema de Ficheros</th>
  <th>Comando de Creación</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
</table>

<p>
Por ejemplo, para crear un sistema de ficheros ext3 en la partición
raíz (<path>/dev/hda4</path> según el ejemplo) utilizaríamos:
</p>

<pre caption="Creación de un sistema de ficheros en una partición" >
# <i>mke2fs -j /dev/hda4</i>
</pre>

<p>
Ahora podríamos crear todos los sistemas de ficheros en las
particiones o volúmenes lógicos recién creados.
</p>

<note>
En máquinas Pegasos II la partición que contiene el núcleo debe ser 
ext2, ext3 o affs1. Las máquinas NewWorld pueden arrancar desde sistemas de
ficheros ext2, ext3, XFS, ReiserFS e incluso HFS/HFS+. En las máquinas
OldWorld que arranquen mediante BootX, el núcleo debe ser ubicado en una
partición HFS, pero esto se completará al configurar el gestor de arranque.
</note>

</body>
</subsection>
</section>
<section>
<title>Montaje</title>
<body>

<p>
Ahora que las particiones están inicializadas y albergan sistemas de
ficheros, es hora de montarlas. Utilizaremos el comando <c>mount</c>.
Como ejemplo montaremos la partición para root:
</p>

<pre caption="Montaje de particiones" >
# <i>mount /dev/hda4 /mnt/gentoo</i>
</pre>

<note>
Si queremos que <path>/tmp</path> resida en una partición diferente,
hay que asegurarse de cambiar sus permisos después de haberla montado
y desempaquetado con <c>chmod 1777 /mnt/gentoo/tmp</c>. Lo mismo se
aplicaría a <path>/var/tmp</path>.
</note>

<p>
Ahora continuaremos con <uri link="?part=1&amp;chap=5" >Instalación de
los ficheros de instalación de Gentoo</uri>. 
</p>

</body>
</section>
</sections>
