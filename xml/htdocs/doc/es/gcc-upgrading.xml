<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/gcc-upgrading.xml,v 1.1 2005/12/19 16:24:48 neysx Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/es/gcc-upgrading.xml" lang="es">
<title>Guía de actualización de GCC en Gentoo Linux</title>

<author title="Autor">
  <mail link="amne@gentoo.org">Wernfried Haas</mail>
</author>
<author title="Autor">
  <mail link="jkt@gentoo.org">Jan Kundrát</mail>
</author>
<author title="Editor">
  <mail link="halcy0n@gentoo.org">Mark Loeser</mail>
</author>
<author title="Traductor">
  <mail link="anpereir@gentoo.org">Andrés Pereira</mail>
</author>

<abstract>
Este documento guiará al usuario en el proceso de actualización de GCC
en sus máquinas con Gentoo Linux.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>3</version>
<date>2005-12-08</date>

<chapter id="intro">
<title>Introducción</title>
<section>
<title>Actualización de GCC</title>
<body>

<p>
¿Por que debería actualizar? Bueno, GCC es muy similar a cualquier otro paquete
en su sistema, pero un poco más crítico. Debería actualizar GCC en caso de que
una nueva versión corrija algún bug que le moleste, se añada una nueva
funcionalidad que necesita o si quiere mantener su sistema al día. Si ninguno
de los casos mencionados le afecta, puede postergar con seguridad la
actualización mientras que su versión de GCC esté soportada por los
desarrolladores de Gentoo.
</p>

<p>
Si instala una nueva versión de GCC, el sistema no hará uso de ella
automáticamente. Tiene que pedir explícitamente el cambio porque el
proceso de migración puede que tome algunos pasos adicionales. Si
decide no realizar el cambio, Portage continuará usando la versión
antigua de su compilador hasta que cambie de parecer o borre el
compilador antiguo del sistema.
</p>

<p>
Esta guía documenta los pasos necesarios para llevar a cabo una actualización
sin contratiempos del compilador usado por su sistema con Gentoo. Se dedica
una sección específica a la 
<uri link="#upgrade-3.3-to-3.4">actualización de GCC 3.3 a la versión 3.4</uri> 
y problemas con <c>libstdc++</c>.
</p>

</body>
</section>
</chapter>

<chapter id="upgrade-general">
<title>Instrucciones generales de actualización</title>
<section>
<title>Introducción</title>
<body>

<impo>
Si está buscando instrucciones específicas para actualizaciones de
GCC-3.3 a GCC-3.4, por favor consulte la <uri
link="#upgrade-3.3-to-3.4">sección dedicada</uri>.
</impo>

<p>
Generalmente hablando, las actualizaciones a <e>versiones que incluyen
correcciones de bugs</e>, como de la 3.3.5 a la 3.3.6, deberían ser bien
seguras -- tan solo instale la nueva versión, haga que su sistema la use
y recompile el único paquete que se ve afectado, <c>libtool</c>. Sin 
embargo, algunas actualizaciones de GCC hacen que se corrompa la compatibilidad
binaria, en tales casos puede que se necesite una recompilación de los
paquetes involucrados (o incluso todo el toolchain y paquetes centrales
(system)).
</p>

<p>
Cuando hablábamos acerca de la necesidad de cambiar su compilador a una
versión más nueva, dijimos que no sucedería automáticamente. No obstante,
hay una excepción -- las actualizaciones a versiones que corrigen bugs, como
de la 3.3.5 a la 3.3.6, en cuyo caso no utiliza la característica de "multislot"
que les permite coexistir en el mismo sistema. Multislot está desactivado por
defecto ya que la mayoría de los usuarios no se beneficiará de este.
</p>

<pre caption="Actualizando GCC">
# <i>emerge -uav gcc</i>

<comment>(Por favor reemplace "i686-pc-linux-gnu-3.4.4" con la versión de
GCC y configuraciones del CHOST a las que se ha actualizado:)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Recompilando libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Ahora recompilemos el toolchain y luego el sistema completo (world) para
hacer uso del nuevo compilador.
</p>

<pre caption="Recompilando el sistema">
# <i>emerge -eav system</i>
# <i>emerge -eav world</i>
</pre>

<p>
Es seguro borrar la versión antigua de GCC en este momento. Si siente
la necesidad, por favor ejecute el siguiente comando (como siempre,
substituya <c>=sys-devel/gcc-3.3*</c> con la versión de GCC que quiere
desinstalar):
</p>

<pre caption="Borrando versiones viejas de GCC">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="upgrade-3.3-to-3.4">
<title>Actualizando GCC-3.3 al 3.4</title>
<section>
<title>Introducción</title>
<body>

<p>
La actualización de GCC/3.3 al 3.4 no es tan perfecta como uno quisiera
puesto que la ABI (Interfaz de Aplicación Binaria) de C++ cambió entre
ambas versiones por lo que existe un problema con la biblioteca
<c>libstdc++</c> de la que también tendremos que preocuparnos.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-choices">
<title>Las opciones</title>
<body>

<p>
Tiene dos posibilidades sobre cómo actualizar su sistema.
El <uri link="#upgrade-3.3-to-3.4-revdep-rebuild">primer método</uri>
es más rápido y requiere del uso de la herramienta 
<c>revdep-rebuild</c> que es parte del paquete <c>gentoolkit</c> mientras que
el <uri link="#upgrade-3.3-to-3.4-emerge-e">segundo método</uri> recompila
su sistema por completo de forma de hacer uso de las nuevas características
de GCC. Es su decisión escoger cuál de los métodos va a seguir.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-revdep-rebuild">
<title>Usando revdep-rebuild</title>
<body>

<p>
Este método necesita que primero instale <c>gentoolkit</c> si es que ya no lo ha hecho.
Luego actualizaremos GCC y cambiaremos al nuevo compilador. También recompilaremos
el paquete <c>libtool</c> para asegurarnos que el toolchain se encuentre en un
estado saludable.
</p>

<pre caption="Instalando gentoolkit y actualizando GCC">
# <i>emerge -an gentoolkit</i>
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Recompilando libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Esto asume que tiene configurada la variable de entorno <c>CHOST="i686-pc-linux-gnu"</c>. 
Si está usando otro CHOST, por favor ajuste la línea apropiada de gcc-config.
</note>

<p>
Ahora queremos ver qué paquetes revdep-rebuild considerará que deben ser recompilados.
Luego le diremos a revdep-rebuild que recompile dichos paquetes. Esto puede tomar
algo de tiempo, así que tenga paciencia.
</p>

<pre caption="Usando revdep-rebuild">
# <i>revdep-rebuild --library libstdc++.so.5 -- -p -v</i>
# <i>revdep-rebuild --library libstdc++.so.5</i>
</pre>

<note>
Es posible que tenga problemas con versiones de paquetes inexistentes debido a
que estén enmascarados o sean antiguos. Si este es el caso, tendrá que usar la
opción <c>--package-names</c> de revdep-rebuild. Esto hace que los paquetes
sean recompilados basados en su nombre en vez de la versión y nombre exacto.
</note>

<p>
Para tener compatibilidad con aplicaciones binarias antiguas en C++ y
cualquiera de los paquetes que revdep-rebuild puede haberse saltado, el paquete
<c>sys-libs/libstdc++-v3</c> tiene que ser instalado antes de que desinstale GCC 3.3 de
su sistema.
</p>

<pre caption="Instalando libstdc++-v3 y desinstalando GCC 3.3">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
<section id="upgrade-3.3-to-3.4-emerge-e">
<title>Usando emerge -e</title>
<body>

<p>
Este método, aunque es mucho más lento, recompila todo su sistema para asegurar
que todo se haya recompilado con su nuevo compilador, y por tanto, es más
seguro. Primero, actualice GCC y libtool y cámbiese a su nuevo compilador.
</p>

<pre caption="Actualizando GCC">
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Recompilando libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Esto asume que tiene configurada la variable de entorno <c>CHOST="i686-pc-linux-gnu"</c>. 
Si está usando otro CHOST, por favor ajuste la línea apropiada de gcc-config.
</note>

<p>
Para tener compatibilidad con aplicaciones binarias antiguas en C++ el paquete
<c>sys-libs/libstdc++-v3</c> tiene que ser instalado en su sistema.
</p>

<pre caption="Instalando libstdc++-v3">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

<p>
Ahora primero recompilaremos los paquetes centrales (system) y luego el sistema
completo (world). Esto va a tomar mucho tiempo dependiendo del número de
paquetes que tenga instalado, pues recompilará el toolchain entero y los
archivos de apoyo del sistema, seguido de cada paquete existente en su sistema.
Esto es necesario para asegurar que todos los paquetes hayan sido compilados con
el nuevo toolchain, incluyendo el toolchain también.
</p>

<pre caption="Recompilando system y world">
# <i>emerge -e system</i>
# <i>emerge -e world</i>
</pre>

<p>
También es seguro borrar las versiones antiguas de GCC en este momento.
</p>

<pre caption="Limpiando el sistema">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="common-pitfalls">
<title>Errores comunes</title>
<section>
<body>

<p>
Es importante que desactive <c>distcc</c> durante la actualización. Mezclar
versiones de compiladores en sus nodos <e>provocará</e> dificultades. Este no
se necesita para ccache pues los objetos de éste serán invalidados de
cualquier modo.
</p>

<p>
Siempre use la misma versión de GCC para su núcleo y módulos adicionales
de este. Una vez que recompile su sistema completo (world) con el nuevo GCC,
los módulos externos (como <c>app-emulation/qemu-softmmu</c>) no funcionarán
al cargarse. Por favor, recompile su núcleo con el nuevo GCC para corregir
aquello.
</p>

</body>
</section>
<section>
<title>Mensajes de error frecuentes</title>
<body>

<p>
Si su sistema se queja de algo como: <e>libtool: link:
`/usr/lib/gcc-lib/i686-pc-linux-gnu/3.3.6/libstdc++.la' is not a valid libtool
archive</e>, por favor ejecute <c>/sbin/fix_libtool_files.sh 3.3.6</c>
(substituya "3.3.6" con el número de versión que sale en el mensaje de
error).
</p>

<p>
Si observa <e>error: /usr/bin/gcc-config: line 632:
/etc/env.d/gcc/i686-pc-linux-gnu-3.3.5: No such file or directory</e>, entonces
intente borrar <path>/etc/env.d/gcc/config-i686-pc-linux-gnu</path> y ejecute
<c>gcc-config</c> nuevamente, seguido por <c>source /etc/profile</c>. 
Solamente haga esto si no tiene configurado algún compilador cruzado.
</p>

<p>
Si un paquete falla durante <c>emerge -e system/world</c>, puede reanudar la
operación con <c>emerge --resume</c>. Si un paquete falla repetidamente,  
sáltelo con <c>emerge --resume --skipfirst</c>. No ejecute otras instancias de
emerge entre medio o perderá toda la información para reanudar.
</p>

<p>
Si obtiene el mensaje de error <e>spec failure: unrecognized spec option</e> 
mientras actualiza su compilador, intente volver a su compilador por defecto,
deshabilite la variable de entorno <c>GCC_SPECS</c> y actualice
nuevamente GCC:
</p>

<pre caption="Recuperando las specs principales">
# <i>gcc-config 1</i>
# <i>source /etc/profile</i>
# <i>unset GCC_SPECS</i>
# <i>emerge -uav gcc</i>
</pre>

</body>
</section>

</chapter>
</guide>
