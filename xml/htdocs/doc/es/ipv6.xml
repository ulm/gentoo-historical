<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/ipv6.xml,v 1.23 2013/09/02 21:50:34 nimiux Exp $ -->

<guide disclaimer="obsolete" redirect="https://wiki.gentoo.org/wiki/IPv6_router_guide/es" lang="es">
<title>Guía del enrutador IPv6 en Gentoo</title>

<author title="Desarrollador">
  <mail link="latexer@gentoo.org">Peter Johanson</mail>
</author>
<author title="Editor">
  <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Editor, Revisor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="cam@gentoo.org">Camille Huot</mail>
</author>
<author title="Editor">
  <mail link="okun@hack.fi">Pasi Valminen</mail>
</author>
<author title="Editor">
  <mail link="nightmorph"/>
</author>
<author title="Contribuidor">
  <mail link="hwoarang"/>
</author>
<author title="Traductor">
  <mail link="chiguire"/>
</author>
<author title="Traductor">
  <mail link="fiam@asturlinux.org">Alberto García Hierro</mail>
</author>
<author title="Traductor">
  <mail link="enrique@barbeito.org">Enrique Barbeito García</mail>
</author>

<abstract>
Esta guía muestra cómo configurar IPv6 en un sistema Gentoo. Incluye
establecer un túnel con un "tunnel broker" o proveedor de túneles, la
configuración básica del DNS y la configuración de los clientes para
usar el sistema para conectar con una dirección IPv6.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>9</version>
<date>2013-07-22</date>

<chapter>

<title>Configuración del núcleo</title>
<section>
<title>Configuración básica del núcleo</title>
<body>

<p>
Cualquiera de los núcleos 2.6 disponibles en Gentoo soportará
conexiones IPv6 fácilmente. La nueva pila USAGI para IPv6 está
integrada en el núcleo desde la versión 2.6.0.
</p>

<pre caption="Hacier emerge del núcleo">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Ahora estamos listos para entrar en el directorio de las fuentes
del núcleo y comenzar con su configuración.
</p>

<pre caption="Configurar el núcleo de Linux">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<note>
Esta guía asume que el enlace <path>/usr/src/linux</path> apunta a las
fuentes que estará usando.
</note>

<pre caption="Opciones de 'make menuconfig'">
Networking support ---&gt;
  Networking options ---&gt;
    &lt;*&gt; The IPv6 protocol ---&gt;
<comment>(Las opciones IPv6 bajo ésta pueden ser útiles para otras muchas aplicaciones,</comment>
<comment>pero no deberían de ser necesarias para una configuración básica)</comment>

<comment>(Esta opción solo es necesaria si está usando ptrtd para la conversión de IPv6 a IPv4)</comment>
Device Drivers ---&gt;
  Network device support ---&gt;
    &lt;*&gt; Universal TUN/TAP device driver support
</pre>

</body>
</section>
<section>
<title>Probar el soporte IPv6</title>
<body>

<p>
Después de activar las opciones recomendadas, recompile su núcleo y
reinicie usando su nuevo núcleo con IPv6 activado.
</p>

<p>
Si todavía no tiene <b>iproute2</b> instalado, le animamos a hacerlo
ahora.  iproute2 es una suite de configuración de red que contiene
<c>ip</c>, el famoso sustituto para <c>ifconfig</c>, <c>route</c>,
<c>iptunnel</c> y otros ...
</p>

<pre caption="Instalar iproute2">
# <i>emerge sys-apps/iproute2</i>
</pre>

<warn>
El uso de ifconfig puede ocasionar serios dolores de cabeza si tiene
múltiples dispositivos de tunel. Tiene que eliminar los túneles en
orden inverso, quiere decir que el creado en último lugar debe ser
eliminado primero ¡Queda avisado!
</warn>

<p>
Si IPv6 está funcionando, el dispositivo de loopback debería mostrar
una dirección IPv6:
</p>

<pre caption="Comprobar el dispositivo de loopback">
# <i>ip -6 addr show lo</i>
1: lo: &lt;LOOPBACK,UP&gt; mtu 16436
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
    <comment>(Las líneas de arriba demuestran que las cosas funcionan)</comment>
</pre>

<p>
Antes de proseguir, asegúrese de añadir <e>ipv6</e> a su lista de
variables USE en <path>make.conf</path>, de tal modo que en futuras
instalaciones de paquetes se incluirá soporte para IPv6.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configuración del túnel</title>
<section>
<title>Configuración básica</title>
<body>

<p>
La mayoría de los proveedores de Internet todavía no ofrecen
conexiones IPv6 de modo nativo. Para saltarse está limitación,
existen varios proveedores de túneles en todo el mundo que ofrecen
gratuitamente túneles IPv6. Esto le permite hacer un túnel para todas
las conexiones IPv6 a través de una conexión IPv4.
</p>

<table>
<tr><th>Proveedor</th><th>Situación geográfica</th></tr>
<tr>
  <ti><uri link="http://tunnelbroker.net">Hurricane Electric</uri>
  </ti><ti>Norteamérica, Europa, Asia</ti>
</tr>
<tr>
  <ti><uri link="http://gogonet.gogo6.com/">Freenet6</uri></ti>
  <ti>EE.UU.</ti>
</tr>
<tr>
  <ti><uri link="http://www.sixxs.net/">Sixxs</uri></ti>
  <ti>Europa</ti>
</tr>
<tr>
  <ti><uri link="http://tunnel-broker.singnet.com.sg/">Singnet</uri></ti>
  <ti>Singapur</ti>
</tr>
<tr>
  <ti><uri link="http://broker.aarnet.net.au/">Aarnet</uri></ti>
  <ti>Australia/Pacífico Sur</ti>
</tr>
</table>

<p>
A continuación se muestran dos ejemplos de configuración de un túnel IPv6
con dos populares proveedores de Norteamérica: Hurricane Electric (también
se aplica a túneles de sixxs.net sin mecanismo heartbeat) y Freenet6.
</p>

</body>
</section>
<section>
<title>Hurricane Electric</title>
<body>

<p>
Hurricane Electric (HE de forma abreviada) ofrece túneles IPv6
gratuitos y le asigna un bloque /64 de direcciones. También permite
configurar un DNS inverso. Conseguir un túnel de HE es tan sencillo
como ir a <uri>http://www.tunnelbroker.net</uri> y rellenar un
formulario.
</p>

<note>
El registro incluye una lista de datos personales como su dirección y
número de teléfono.
</note>

<p>
Una vez activado el túnel y asignado un bloque /64, puede configurar
su sistema Gentoo. HE proporciona configuraciones de ejemplo basadas
en las utilidades ifconfig e iproute. Los dos siguientes ejemplos
asumen que tiene la siguiente configuración:
</p>

<table>
  <tr>
    <ti>Dirección IPv4 Local</ti><ti>68.36.91.195</ti>
  </tr>
  <tr>
    <ti>Dirección IPv4 de HE</ti><ti>64.71.128.82</ti>
  </tr>
  <tr>
    <ti>Dirección local del túnel IPv6</ti><ti>2001:470:1F00:FFFF::189</ti>
  </tr>
  <tr>
    <ti>Bloque IPv6</ti><ti>2001:470:1F00:296::/64</ti>
  </tr>
</table>

<p>
Para utilizar el paquete iproute2 y la orden <c>ip</c>, haríamos
lo siguiente:
</p>

<pre caption="Configuración de un túnel IPv6">
<comment>(Crear un túnel entre la IPv4 local (eth0) y la dirección IPv4 de HE</comment>
# <i>ip tunnel add sixbone mode sit remote 64.71.128.82 local 68.36.91.195 ttl 64 dev eth0</i>
<comment>(Extraer el túnel indirecto del MTU)</comment>
# <i>ip link set sixbone mtu 1280</i>
<comment>(Levantar el túnel)</comment>
# <i>ip link set sixbone up</i>
<comment>(Asignarle la dirección IPv6)</comment>
# <i>ip addr add 2001:470:1F00:FFFF::189 dev sixbone</i>
<comment>(Enrutar todas las direcciones IPv6 globales de envío a un solo receptor (unicast) a través de nuestro dispositivo túnel 'sixbone')</comment>
# <i>ip route add 2000::/3 dev sixbone</i>
</pre>

</body>
</section>
<section>
<title>Freenet6</title>
<body>

<p>
<uri link="http://gogonet.gogo6.com/">Freenet6</uri> es otro proveedor
de túneles gratuito. El registro optativo solo requiere un nombre de
usuario y una dirección de correo electrónico válida. Ellos han
escogido configurar la gestión del túnel en cliente/servidor creando el
cliente <c>gateway6</c>. El cliente está disponible en Portage. Para
instalarlo haga:
</p>

<pre caption="Instalar el cliente de Freenet6">
# <i>emerge gateway6</i>
</pre>

<p>
Si elige conectar con autenticación, configure <c>gateway6</c> editando
<path>/etc/gateway6/gw6c.conf</path>. Solamente debería tener que
cambiar los campos <e>userid</e> y <e>passwd</e> colocando los
asignados por Freenet6, además de cambiar la puerta de enlace. A continuación
tiene una configuración de ejemplo.
</p>

<pre caption="gw6c.conf de ejemplo">
auth_method=any
<i>userid=anonymous</i>
<i>passwd=foobar</i>
template=linux
server=broker.freenet6.net
</pre>

</body>
</section>
<section>
<title>Probar la conexión</title>
<body>

<p>
Ahora que el túnel está configurado, puede probar su conexión. La
forma más sencilla es usando la herramienta <c>ping6</c> e intentando
hacer ping a un nombre de máquina IPv6.
</p>

<pre caption="Probar la conexión">
# <i>emerge iputils</i>
# <i>ping6 www.kame.net</i>
PING www.kame.net(orange.kame.net) 56 data bytes
64 bytes from orange.kame.net: icmp_seq=1 ttl=52 time=290 ms
64 bytes from orange.kame.net: icmp_seq=2 ttl=52 time=277 ms
64 bytes from orange.kame.net: icmp_seq=3 ttl=52 time=280 ms
64 bytes from orange.kame.net: icmp_seq=4 ttl=52 time=279 ms
64 bytes from orange.kame.net: icmp_seq=5 ttl=52 time=277 ms

--- www.kame.net ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4038ms
rtt min/avg/max/mdev = 277.040/281.041/290.046/4.699 ms
</pre>

<p>
Actualmente se está trabajando para añadir mejor soporte IPv6 a los
guiones de inicio de red. Si desea conocer su estado y/o ofrecer
ayuda, escriba a <mail
link="latexer@gentoo.org">latexer@gentoo.org</mail>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Soporte IPv6 en aplicaciones</title>
<section>
<title>Hacer emerge de los paquetes de nuevo</title>
<body>

<p>
A menos que ya tenga <e>USE="ipv6"</e> en
<path>/etc/portage/make.conf</path>, probablemente necesitará hacer
de nuevo emerge de unos cuantos paquetes con soporte IPv6. Para
obtener una lista de todos los paquetes instalados afectados por
el cambio del parámetro USE, use la opción <c>--newuse</c>
(<c>-N</c>) de Portage:
</p>

<pre caption="Candidatos para ser re-emergidos">
# <i>emerge -uDNav world</i>
</pre>

<p>
Si ha cambiado muchos parámetros USE, la lista puede que sea bastante
grande. Se recomienda mantener el sistema actualizado para que no
sufra en caso de tener que recompilar todos los paquetes afectados.
</p>

<note>
Algunos paquetes detectan soporte IPv6 de forma mágica automáticamente y
por eso no requieren la opción ipv6 en las variables USE. Por eso no todos
los paquetes que deberían soportar IPv6, lo soportarán si lo compiló con
IPv6 habilitado.
</note>

</body>
</section>
<section>
<title>Paquetes específicos de IPv6</title>
<body>

<p>
Hay algunos paquetes que tratan con elementos IPv6. La mayoría se
encuentran en <path>/usr/portage/net-misc</path>.
</p>

<table>
<tr><th>Paquete</th><th>Descripción</th></tr>
<tr>
  <ti>net-misc/ipv6calc</ti>
  <ti>Convierte una dirección IPv6 a un formato comprimido</ti>
</tr>
<tr>
  <ti>net-misc/netcat6</ti>
  <ti>Versión de netcat que soporta tanto IPv6 como IPv4</ti>
</tr>
<tr>
  <ti>dev-perl/Socket6</ti>
  <ti>
    La parte de las definiciones de socket.h de C y los manipuladores de
    estructuras relacionadas con IPv6
  </ti>
</tr>
</table>

</body>
</section>
</chapter>

<chapter>
<title>Configuración de DNS</title>
<section>
<title>IPv6 y DNS</title>
<body>

<p>
Así como los DNS para IPv4 utilizan registros A, los DNS para
IPv6 usan registros AAAA. (Esto se debe a que IPv4 tiene un
espacio de direcciones de 2^32 mientras que en IPv6 es de
2^128). Para el DNS inverso, el estándar INT es obsoleto,
pero es el más soportado. ARPA es el último estándar. El
soporte para el formato ARPA se describe aquí.
</p>

</body>
</section>
<section>
<title>Configuración de BIND</title>
<body>

<p>
Las versiones recientes de BIND incluyen un soporte excelente
de IPv6. Esta sección asume que tiene el conocimiento mínimo
sobre la configuración y uso de BIND. Asumiremos que no
está corriendo bind dentro de una jaula chroot. Si lo está
haciendo, añada el prefijo chroot a la mayoría de las
rutas que se indican en la siguiente sección.
</p>

<p>
Lo primero que necesita es añadir entradas tanto para la
resolución directa como para la resolución inversa en
<path>/etc/bind/named.conf</path>.
</p>

<pre caption="Entradas en named.conf">
<comment>(Permitimos a bind escuchar a direcciones IPv6.</comment>
<comment>Usando 'any' es la única forma de hacerlo en versiones anteriores a bind-9.3)</comment>
options {
    [...]
    listen-on-v6 { any; }
    [...]
};
<comment>(Esto proporcionará DNS directo para el dominio 'ipv6-rules.com':)</comment>
zone "ipv6-rules.com" IN {
    type master;
    file "pri/ipv6-rules.com";
};
<comment>(El formato para DNS inverso se obtiene bit a bit. Se hace tomando el prefijo IPv6,</comment>
<comment>invirtiendo el orden de los números y colocando un punto entre cada uno de ellos)</comment>
zone "6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa" {
        type master;
        file "pri/rev-ipv6-rules.com.arpa";
};
</pre>

<p>
Ahora crearemos los archivos de zona y añadiremos entradas para todos
nuestros nombres de máquina:
</p>

<pre caption="pri/ipv6-rules.com">
$TTL    2h
@       IN      SOA     ipv6-rules.com. webmaster.ipv6-rules.com.  (
                                2003052501 ; Serial
                                28800      ; Refresh
                                14400      ; Retry
                                3600000    ; Expire
                                86400 )    ; Minimum
                NS      ns1.ipv6-rules.com

        IN      AAAA    2001:470:1f00:296::1 ; address for ipv6-rules.com
host1   IN      AAAA    2001:470:1f00:296::2 ; address for host1.ipv6-rules.com
host2   IN      AAAA    2001:470:1f00:296::3:3 ; address for host2.ipv6-rules.com
</pre>

<pre caption="pri/rev-ipv6-rules.com.arpa">
$TTL 3d ; Default TTL (bind 8 needs this, bind 9 ignores it)
@       IN SOA ipv6-rules.com. webmaster.ipv6-rules.com. (
                        2003052501      ; Serial number (YYYYMMdd)
                        24h             ; Refresh time
                        30m             ; Retry time
                        2d              ; Expire time
                        3d )            ; Default TTL
        IN      NS     ns1.ipv6-rules.com.
; IPv6 PTR entries
$ORIGIN 6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa.

1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     ipv6-rules.com.
2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     host1.ipv6-rules.com.
3.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0 IN      PTR     host2.ipv6-rules.com.
</pre>

</body>
</section>
<section>
<title>Configuración de DJBDNS</title>
<body>

<p>
Actualmente hay algunos parches para DJBDNS de terceros disponibles en
<uri>http://www.fefe.de/dns/</uri> que le permiten servir nombres en
IPv6. DJBDNS puede instalarse con estos parches haciendo emerge con
<e>ipv6</e> entre los parámetros USE.
</p>

<warn>
Todavía no están soportados todos los tipos de registro con estos
parches. En particular, los registros MX y NS no están soportados.
</warn>

<pre caption="Instalar djbdns">
# <i>emerge djbdns</i>
</pre>

<p>
Una vez instalado djbdns, puede configurarse con <c>tinydns-setup</c>,
respondiendo unas cuantas preguntas sobre las direcciones IP en las
que debe escuchar, donde instalar tinydns, etc.
</p>

<pre caption="Configurar tinydns">
# <i>tinydns-setup</i>
</pre>

<p>
Asumiendo que hemos instalado <c>tinydns</c> en
<path>/var/tinydns</path>, editaremos
<path>/var/tinydns/root/data</path>. Este archivo contendrá todos los
datos necesarios para conseguir que tinydns maneje los DNS para su
delegación IPv6.
</p>

<pre caption="Archivo data de ejemplo">
<comment>(*.ipv6-rules.com manejado autoritariamente por 192.168.0.1)</comment>
.ipv6-rules.com:192.168.0.1:a:259200
<comment>(DNS inverso autoritario para 2001:470:1f00:296::/64)</comment>
.6.9.2.0.0.0.f.1.0.7.4.0.1.0.0.2.ip6.arpa:192.168.0.1:a
<comment>(Especifica las IPs para host1 y host2)</comment>
6host1.ipv6-rules.com:200104701f0002960000000000000001:86400
6host2.ipv6-rules.com:200104701f0002960000000000000002:86400
<comment>(Apunta www a host1)</comment>
3www.ipv6-rules.com:200104701f0002960000000000000002:86400
</pre>

<p>
Las líneas que comienzan por <c>6</c> tendrán creado tanto un registro
AAAA como un registro PTR. Aquellas que comiencen por <c>3</c>
solamente tendrán un registro AAAA. Además de editar manualmente el
archivo <path>data</path>, puede usar los guiones <c>add-host6</c> y
<c>add-alias6</c> para añadir nuevas entradas. Una vez hecho los
cambios al archivo <path>data</path>, simplemente ejecute <c>make</c>
desde <path>/var/tinydns/root</path>. Así se creará
<path>/var/tinydns/root/data.cfb</path>, el cual usa tinydns como
fuente de información para las peticiones DNS.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Enrutador IPv6</title>
<section>
<title>Configurar el enrutado</title>
<body>

<p>
Si queremos que nuestro sistema funcione como enrutador para otros
clientes que deseen conectarse al mundo exterior con IPv6, se necesita
algo más de configuración. Necesitamos activar el reenvío de paquetes
IPv6. Podemos hacerlo de dos maneras.
</p>

<pre caption="Activar el reenvío">
# <i>echo 1 > /proc/sys/net/ipv6/conf/all/forwarding</i>
o
# <i>sysctl -w net.ipv6.conf.all.forwarding=1</i>
</pre>

<warn>
El guión de inicio <c>radvd</c>, explicado en el próximo capítulo,
activa (y desactiva) el reenvío, haciendo innecesario el siguiente
paso.
</warn>

<p>
Para activar el reenvío en el inicio, necesitará editar
<path>/etc/sysctl.conf</path> y modificar la siguiente línea:
</p>

<pre caption="Fragmento a añadir en sysctl.conf">
net.ipv6.conf.default.forwarding=1
</pre>

<p>
Ahora el tráfico debería ser reenviado desde esta máquina a través del
túnel establecido con nuestro proveedor.
</p>

<p>
Para asignar direcciones IPv6 a los clientes, las especificaciones IPv6
permiten tanto la asignación con estado, como sin estado. La
asignación sin estado usa un proceso llamado anuncio de enrutador (en
inglés: Router Advertisement) y permite a los clientes obtener una
dirección IP y una ruta predeterminada simplemente activando el
dispositivo de red. Se denomina 'sin estado' porque no se guarda
ningún registro del estado de las IPs asignadas y las máquinas a las
cuales se les ha asignado. La asignación 'con estado' se maneja
mediante DHCPv6. Se llama así porque el servidor mantiene un registro
con el estado de los clientes que han solicitado una IP y las que lo
han obtenido.
</p>

</body>
</section>
<section>
<title>Configuración sin estado</title>
<body>

<p>
La configuración sin estado se lleva a cabo sencillamente con el
demonio de anuncio de enrutador, o <c>radvd</c>.
</p>

<pre caption="Configurar radvd">
# <i>emerge radvd</i>
</pre>

<p>
Después de hacer emerge de <c>radvd</c>, necesitamos crear
<path>/etc/radvd/radvd.conf</path> que contiene información acerca del
bloque de IP del que se asignarán las IPs. Aquí tiene un ejemplo del
archivo <path>radvd.conf</path> usando el prefijo asignado por nuestro
proveedor.
</p>

<pre caption="Ejemplo de radvd.conf">
interface eth1
{
        <comment>(Envía el mensaje de anuncio a otras máquinas)</comment>
        AdvSendAdvert on;
        <comment>(La fragmentación es mala(tm))</comment>
        AdvLinkMTU 1280;
        MaxRtrAdvInterval 300;
        <comment>(El prefijo de subred IPv6 que nos ha  asignado nuestro PoP)</comment>
        prefix 2001:470:1F00:296::/64
        {
                AdvOnLink on;
                AdvAutonomous on;
        };
};
</pre>

<warn>
Asegúrese que la interfaz en la primera línea es la correcta para
propagar los anuncios de enrutador hacia su intranet y ¡no hacia su
ISP!
</warn>

<p>
Se dispone de información más detallada en <c>man radvd.conf</c>.
Ahora podemos iniciar <c>radvd</c> y configurarlo para que se cargue al
inicio.
</p>

<pre caption="Iniciar radvd">
# <i>/etc/init.d/radvd start</i>
# <i>rc-update add radvd default</i>
</pre>

</body>
</section>
<section>
<title>Configuración para mantenimiento de estado</title>
<body>

<p>
Si desea una configuración que mantiene el estado, debe instalar y
configurar <c>net-misc/dibbler</c>.
</p>

<pre caption="Instalar dibbler">
# <i>emerge dibbler</i>
</pre>

<p>
Ahora debemos configurar el cliente dibbler modificando el archivo
<path>/etc/dibbler/client.conf</path>.
</p>

<pre caption="Ejemplo de configuración de cliente dibbler">
iface ppp0 {
        rapid-commit yes
        pd
        option dns-server
}
</pre>

<p>
Ahora podemos iniciar el cliente dibbler y configurarlo para que
arranque al iniciar.
</p>

<pre caption="Arrancanr el cliente dibbler">
# <i>/etc/init.d/dibbler-client start</i>
# <i>rc-update add dibbler-client default</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Clientes IPv6</title>
<section>
<title>Usar radvd</title>
<body>

<p>
Ahora los clientes detrás de este enrutador deben ser capaces de
acceder a la red vía IPv6. Si está usando radvd, configurar las
máquinas debería ser tan sencillo como activar el dispositivo de red.
(Probablemente ya lo hayan hecho sus guiones de inicio net.ethX).
</p>

<pre caption="Conectar a través de IPv6">
# <i>ip link set eth0 up</i>
# <i>ip addr show eth0</i>
1: eth0: &lt;BROADCAST,MULTICAST,UP&gt; mtu 1400 qdisc pfifo_fast qlen 1000
    link/ether 00:01:03:2f:27:89 brd ff:ff:ff:ff:ff:ff
    inet6 2001:470:1f00:296:209:6bff:fe06:b7b4/128 scope global
       valid_lft forever preferred_lft forever
    inet6 fe80::209:6bff:fe06:b7b4/64 scope link
       valid_lft forever preferred_lft forever
    inet6 ff02::1/128 scope global
       valid_lft forever preferred_lft forever
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Otros recursos</title>
<section>
<body>

<p>
En la red hay gran cantidad de recursos muy buenos relacionados con IPv6.
</p>

<table>
<tr>
  <th>Sitios web</th>
  <th>Recurso</th></tr>
<tr>
  <ti><uri link="http://www.ipv6.org/">www.ipv6.org</uri></ti>
  <ti>Información general sobre IPv6</ti>
</tr>
<tr>
  <ti><uri link="http://www.linux-ipv6.org/">www.linux-ipv6.org/</uri></ti>
  <ti>Proyecto USAGI</ti>
</tr>
<tr>
  <ti><uri link="http://www.deepspace6.net/">www.deepspace6.net</uri></ti>
  <ti>Sitio sobre Linux/IPv6</ti>
</tr>
<!-- dead, was hacked<tr>
  <ti><uri link="http://www.hs247.com/">www.hs247.com</uri></ti>
  <ti>Todo sobre IPv6</ti>
</tr>-->
<!-- dead, not responding<tr>
  <ti><uri link="http://www.ipv6-net.org/">www.ipv6-net.org</uri></ti>
  <ti>Sitio alemán sobre IPv6</ti>
</tr>-->
<tr>
  <ti><uri link="http://www.kame.net/">www.kame.net</uri></ti>
  <ti>Implementación *BSD</ti>
</tr>
</table>

<p>
En el IRC, puede probar <c>#ipv6</c> en <uri
link="http://www.freenode.net">Freenode</uri>. Puede conectarse a los
servidores de Freenode mediante IPv6 usando
<b>irc.ipv6.freenode.net</b>.
</p>

</body>
</section>
</chapter>
</guide>
