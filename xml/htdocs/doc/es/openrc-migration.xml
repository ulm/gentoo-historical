<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/openrc-migration.xml,v 1.19 2011/11/16 11:16:44 nimiux Exp $ -->

<guide lang="es">
<title>Guía de Migración de Baselayout y OpenRC</title>

<author title="Autor">
  <mail link="cardoe"/>
</author>
<author title="Autor">
  <mail link="nightmorph"/>
</author>
<author title="Autor">
  <mail link="robbat2"/>
</author>
<author title="Contribuyente">
  <mail link="uberlord"/>
</author>
<author title="Traductor">
  <mail link="chiguire"/>
</author>
<author title="Traductor">
  <mail link="mcklaren@gmail.com">Manuel Peral González</mail>
</author>
<author title="Traductor">
  <mail link="nimiux"/>
</author>

<abstract>
Esta guía muestra como migrar de baselayout-1 a baselayout-2 y
OpenRC.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>14</version>
<date>2011-11-15</date>

<chapter>
<title>Conceptos previos</title>

<section>
<title>¿Qué es baselayout?</title>
<body>

<p>
Baselayout proporciona un conjunto básico de archivos necesarios para
que cualquier sistema funcione correctamente, tal como
<path>/etc/hosts</path>. También proporciona la disposición básica del
sistema de archivos usado por Gentoo (por ejemplo, los directorios
<path>/etc</path>, <path>/var</path>, <path>/usr</path>,
<path>/home</path>).
</p>

</body>
</section>
<section>
<title>¿Qué es OpenRC?</title>
<body>

<p>
OpenRC es un sistema de arranque (rc system) con gestión de
dependencias que trabaja con cualquier init proporcionado por el
sistema, normalmente <path>/sbin/init</path>. Sin embargo, <e>no</e>
es un reemplazo para <path>/sbin/init</path>. El init predeterminado
de Gentoo Linux es <c>sys-apps/sysvinit</c>, mientras que
Gentoo/FreeBSD usa el init de FreeBSD provisto por
<c>sys-freebsd/freebsd-sbin</c>.
</p>

</body>
</section>
<section>
<title>Entonces ¿por qué migrar?</title>
<body>

<p>
Originalmente el sistema rc de Gentoo formaba parte de baselayout 1 y
estaba escrito completamente en bash. Esto conlleva varias
limitaciones. Por ejemplo, ciertas llamadas al sistema necesitan ser
accedidas durante el arranque, requiriendo agregar llamadas en
C. Estas llamadas eran enlazadas estáticamente, aumentando
notablemente el tamaño del sistema rc al pasar del tiempo.
</p>

<p>
Además, al expandir Gentoo a otras plataformas como Gentoo/FreeBSD y
Gentoo Encastrado, se hacía imposible seguir requiriendo un
sistema rc basado en bash. Esto propulsó el desarrollo de baselayout
2, escrito en C y que solo requiere un interpretador de comandos que
cumpla la norma POSIX. Durante el desarrollo de baselayout 2, se
determinó que sería mejor si baselayout solo proporcionara los
archivos base y disposición de archivos para Gentoo y que el sistema
rc fuese separado como un paquete independiente. De manera que así
tenemos OpenRC.
</p>

<p>
OpenRC fue desarrollado inicialmente por <uri
link="http://roy.marples.name/openrc">Roy Marples</uri> hasta el año 2010.
Ahora lo mantiene el <uri link="/proj/en/base/openrc/">Proyecto Gentoo
OpenRC</uri>. OpenRC soporta todas las variaciones actuales de Gentoo (por
ejemplo, Gentoo Linux, Gentoo/FreeBSD, Gentoo Embedded y Gentoo Vserver),
y otras plataformas como FreeBSD y NetBSD.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Migrando a OpenRC</title>
<section>
<body>

<p>
La migración a OpenRC es relativamente sencilla, ya que aparecerá como
parte del proceso regular de actualizaciones por medio del gestor de
paquetes. De hecho, el paso más importante viene después de instalar
los nuevos paquetes <c>>=sys-apps/baselayout-2</c> y
<c>sys-apps/openrc</c>. Es <e>crítico</e> ejecutar
<c>dispatch-conf</c> asegurándonos que nuestro directorio
<path>/etc</path> esté actualizado antes de re-iniciar. <brite>El no
actualizar este directorio resultará en un sistema que no
arranque</brite>, requiriendo el uso del LiveCD Gentoo para realizar
los pasos detallados a continuación para reparar el sistema.
</p>

<p>
Una vez actualizados los archivos de configuración debemos verificar
algunas cosas antes de re-iniciar.
</p>

</body>
</section>
<section id="rc_conf">
<title>/etc/conf.d/rc</title>
<body>

<p>
El archivo <path>/etc/conf.d/rc</path> ahora es obsoleto, por lo que
cualquier configuración debe ser trasladada a
<path>/etc/rc.conf</path>. Por favor lea los comentarios en
<path>/etc/rc.conf</path> y <path>/etc/conf.d/rc</path> y migre la
configuración. Una vez terminado, puede borrar
<path>/etc/conf.d/rc</path>.
</p>

</body>
</section>
<section id="modules">
<title>Módulos del núcleo</title>
<body>

<p>
Normalmente, cuando uno desea cargar ciertos módulos del núcleo al
arrancar, se colocan sus nombres y correspondientes parámetros en
<path>/etc/modules.autoload.d/kernel-2.6</path>. En baselayout-2 ya no
se usa este archivo. Ahora, los módulos a cargar automáticamente y sus
parámetros se colocan en un solo archivo,
<path>/etc/conf.d/modules</path>, sin importar la versión del núcleo.
</p>

<p>
Un ejemplo del estilo antiguo de configuración sería:
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
ivtv
cx88_dvb video_br=2
</pre>

<p>
Transformando este ejemplo resultaría en:
</p>

<pre caption="/etc/conf.d/modules">
<comment># Módulos a cargar automáticamente al arrancar</comment>
modules_2_6="ivtv cx88_dvb"
<comment># Parámetros del módulo</comment>
module_cx88_dvb_args_2_6="video_br=2"
</pre>

<p>
En los anteriores ejemplos, los módulos y sus parámetros, se pasarían
únicamente a núcleos de la serie 2.6.x. La nueva configuración permite
un control más fino sobre los módulos y los parámetros basados en la
versión del núcleo.
</p>

<impo>
Las variables <b>module*</b> no son acumulativas. Las variables que
son específicas de versiones tomarán precedencia sobre las variables
generales.
</impo>

<note>
Por favor, observe la diferencia entre <b>module_</b> y <b>modules_</b>.
</note>

<p>
Un ejemplo más completo sería:
</p>

<pre caption="Ejemplo detallado de /etc/conf.d/modules">
<comment># Cargar ivtv solo para el núcleo 2.6.23-gentoo-r5</comment>
modules_2_6_23_gentoo_r5="ivtv"
<comment># Cargar cx88_dvb solo para núcleos 2.6.23 (distintos a -gentoo-r5)</comment>
modules_2_6_23="cx88_dvb"
<comment># Cargar tun y usbserial solo para núcleos de la serie 2.6.x donde x != 23</comment>
modules_2_6="tun usbserial"
<comment># De lo contrario cargar ochi1394 y ieee1394</comment>
modules="ohci1394 ieee1394"

<comment># Para el núcleo 2.6.23-gentoo-r5, pase video_br=2 a cx88_dvb</comment>
module_cx88_dvb_args_2_6_23_gentoo_r5="video_br=2"
<comment># Para núcleos de la serie 2.6.x, siempre pase proveedor y producto</comment>
module_usbserial_args_2_6="vendor=0x1410 product=0x2110"
<comment># Siempre pase debug a ieee1394</comment>
module_ieee1394_args="debug"
</pre>

</body>
</section>
<section id="boot">
<title>Nivel de ejecución boot</title>
<body>

<p>
El nivel de ejecución <c>boot</c> realiza varios pasos importantes en
cada máquina. Por ejemplo, asegurar que el sistema de archivos raíz
esté montado para lectura/escritura, revisar si existen errores en los
sistemas de archivo, que los puntos de montaje estén disponibles y
que el seudo sistema de archivos <path>/proc</path> se inicie al
arrancar.
</p>

<p>
Con OpenRC el manejo de servicios de volúmenes de dispositivos de
almacenamiento en bloque ya no son ejecutados automáticamente al
iniciar. Esto incluye lvm, raid, particiones de intercambio,
device-mapper (dm), dm-crypt y demás. Asegúrese que el guión de
inicio apropiado para cada servicio esté en el nivel de ejecución
<c>boot</c>, si no ¡es posible que el sistema no arranque!
</p>

<p>
Aunque el ebuild de OpenRC intentará hacer esta migración por su
cuenta, debe verificar que todos los servicios de manejo de volúmenes
se hayan migrado correctamente:
</p>

<pre caption="Mostrar todos los servicios en el nivel de ejecución boot">
# <i>ls -l /etc/runlevels/boot/</i>
</pre>

<p>
Si no ve root, procfs, mtab, swap y fsck en el listado anterior,
ejecute los siguientes comandos para agregarlos al nivel de ejecución
<c>boot</c>:
</p>

<pre caption="Agregar los servicios críticos al nivel de ejecución boot">
# <i>rc-update add root boot</i>
# <i>rc-update add procfs boot</i>
# <i>rc-update add mtab boot</i>
# <i>rc-update add fsck boot</i>
# <i>rc-update add swap boot</i>
</pre>

<p>
Si sabe que usa mdraid y lvm y no los ve en la lista anterior, ejecute
los siguientes comandos para agregar los guiones de inicio al nivel de
ejecución <c>boot</c>:
</p>

<pre caption="Agregar mdraid y lvm al nivel de ejcución boot">
# <i>rc-update add mdraid boot</i>
# <i>rc-update add lvm boot</i>
</pre>

</body>
</section>
<section>
<title>Udev</title>
<body>

<p>
OpenRC ya no inicia <c>udev</c> por defecto, aunque sí necesita estar
presente en el nivel de ejecución <c>sysinit</c> para ser iniciado. El
ebuild de OpenRC debe detectar si <c>udev</c> estaba activado
previamente para agregarlo al nivel de ejecución <c>sysinit</c>. Sin
embargo, para estar seguro, revise si <c>udev</c> esta presente:
</p>

<pre caption="Verificando udev">
# <i>ls -l /etc/runlevels/sysinit</i>
lrwxrwxrwx 1 root root 14 2009-01-29 08:00 /etc/runlevels/sysinit/udev -> \
/etc/init.d/udev
</pre>

<p>
Si <c>udev</c> no está listado, agréguelo al nivel de ejecución
correcto:
</p>

<pre caption="Agregando udev al nivel de ejecución sysinit">
# <i>rc-update add udev sysinit</i>
</pre>

</body>
</section>
<section>
<title>La red</title>
<body>

<p>
Debido a que baselayout y OpenRC ahora son paquetes separados, el
guión net.eth0 podría desaparecer durante el proceso de
actualización. Para reemplazar este guión de inicio y añadirlo de
nuevo al nivel de ejecución por defecto, haga lo siguiente:
</p>

<pre caption="Añadiendo de nuevo el guión net.eth0">
# <i>rc-update add net.eth0 default</i>
</pre>

<p>
Si falta algún otro guión de red, siga las instrucciones anteriores
para agregarlas otra vez, reemplazando <c>eth0</c> con el nombre del
dispositivo de red.
</p>

<p>
Además, <path>/etc/conf.d/net</path> (el anterior net) ya no usa
estructuras estilo bash para la configuración. Por favor examine
<path>/usr/share/doc/openrc-&lt;versión&gt;/net.example</path> para
instrucciones de configuración. La conversión debería ser
relativamente sencilla, convirtiendo a lineas nuevas para entradas
distintas, por ejemplo, una asignación estática de IP cambiaría así:
</p>

<pre caption="Estilo anterior de /etc/conf.d/net">
config_eth0=( "192.168.1.37 netmask 255.255.255.0 brd 192.168.1.255" )
routes_eth0=( "default via 192.168.1.100" "10.0.0.0/8 via 192.168.1.2" )
</pre>

<pre caption="Estilo nuevo /etc/conf.d/net">
config_eth0="192.168.1.37 netmask 255.255.255.0 brd 192.168.1.255"
routes_eth0="default via 192.168.1.100 10.0.0.0/8 via 192.168.1.2"
</pre>

</body>
</section>
<section>
<title>Reloj</title>
<body>

<p>
El archivo de configuración del reloj ha sido renombrado de
<path>/etc/conf.d/clock</path> al nombre de la herramienta nativa que
ajusta el reloj de su sistema. Esto significa que en Linux será
<path>/etc/conf.d/hwclock</path> y en FreeBSD será
<path>/etc/conf.d/adjkerntz</path>. Los sistemas que no tengan chip de
reloj (RTC) deberán usar <path>/etc/init.d/swclock</path>, que ajusta
la hora del sistema del mtime de un archivo creado al momento de
apagar el sistema. Los guiones de inicio en <path>/etc/init.d/</path>
también han sido renombrados de manera correspondiente, así que
asegúrese que el guión apropiado para el sistema ha sido agregado al
nivel de ejecución boot.
</p>

<p>
Además, la variable de entorno <c>TIMEZONE</c> ya no se encuentra en
este archivo. Su contenido se encuentra ahora en el archivo
<path>/etc/timezone</path>. Si este no existe, por supuesto deberá
crearlo con su zona horaria. Por favor revise ambos archivos para
estar seguro que estén correctos.
</p>

<p>
El valor apropiado de este archivo es la trayectoria relativa a la
zona horaria desde <path>/usr/share/zoneinfo</path>. Por ejemplo, para
alguien viviendo en la costa este de los Estados Unidos, la siguiente
configuración sería correcta:
</p>

<pre caption="/etc/timezone">
America/New_York
</pre>

</body>
</section>
<section>
<title>XSESSION</title>
<body>

<p>
La variable XSESSION ya no se encuentra en
<path>/etc/rc.conf</path>. Ahora se puede configurar la variable XSESSION
para cada usuario en su <path>~/.bashrc</path> (o equivalente), o para
el sistema entero en <path>/etc/env.d/</path>.
</p>

<p>
Hemos aquí un ejemplo de la configuración de la variable XSESSION para
todo el sistema:
</p>

<pre caption="Configurando XSESSION para todo el sistema">
# <i>echo 'XSESSION="Xfce4"' > /etc/env.d/90xsession</i>
</pre>

<impo>
Recuerde ejecutar <c>env-update</c> después de crear un archivo en
<path>/etc/env.d</path>, luego haga logout y luego login para que tome
efecto. Si configura la variable en <path>~/.bashrc</path>, vuelva a
leer los valores con <c>source ~/.bashrc</c>.
</impo>

</body>
</section>
<section>
<title>EDITOR y PAGER</title>
<body>

<p>
La variable EDITOR ya no se encuentra en
<path>/etc/rc.conf</path>. Ambas variables EDITOR y PAGER, se
configuran por defecto en <path>/etc/profile</path>. Modifique esto
según su conveniencia en su archivo <path>~/.bashrc</path> (o
equivalente) o cree el archivo <path>/etc/env.d/99editor</path> y
configure el valor por defecto del sistema allí.
</p>

<impo>
Debe ejecutar <c>env-update</c> luego de crear un archivo en
<path>/etc/env.d</path> y después hacer logout y login para que haga
efecto. Si configura la variable en <path>~/.bashrc</path>, puede
re-leer el archivo con <c>source ~/.bashrc</c>.
</impo>

</body>
</section>
<section>
<title>Mensajes (Log) de Arranque</title>
<body>

<p>
Anteriormente, se podía registrar el proceso de arranque con
<c>app-admin/showconsole</c>. Sin embargo, como ahora OpenRC procesa
todo los registros del sistema internamente, ya no es necesario
utilizar la utilidad <c>showconsole</c>. Para continuar registrando
los mensajes de arranque, establezca la variable apropiada en
<path>/etc/rc.conf</path>. Los mensajes serán guardados en
<path>/var/log/rc.log</path>.
</p>

<pre caption="Activar mensajes de arranque en /etc/rc.conf">
rc_logger="YES"
</pre>

</body>
</section>
<section id="rc_local">
<title>local.start y local.stop</title>
<body>

<p>
En OpenRC ya no se usan los guiones <path>/etc/conf.d/local.start</path>
y <path>local.stop</path>. En la migración a OpenRC, estos ficheros
se mueven a <path>/etc/local.d</path> y se les añade el sufijo
<path>.start</path> o <path>.stop</path>. Estos guiones serán ejecutados
por OpenRC en orden alfabético.
</p>

</body>
</section>
<section id="rc_sys">
<title>Subtipos de sistema: Casos especiales de virtualización</title>
<body>

<p>
En las versiones iniciales de OpenRC, detectábamos explícitamente
múltiples tipos de virtualización, y usábamos esta detección para
comprobar cuando ciertos guiones de inicio debían ser pasados por
alto, usando la llamada <b>keyword</b> en las funciones <b>depend</b>.
</p>

<p>
Sin embargo, a partir de la versión 0.7.0, se deberá configurar de
manera explícita el subtipo con la variable <b>rc_sys</b> en
<path>/etc/rc.conf</path>. El subtipo debe ajustarse para concordar
con el entorno de virtualización donde esté la raíz.  En general, un
valor no vacío de <b>rc_sys</b> debe estar entre los contenedores
virtuales. El nodo anfitrión tendrá <b>rc_sys=""</b>.
</p>

<impo>
Si no tiene algún subtipo específico, por favor, use el valor
predeterminado, una cadena vacía <b>""</b>. Si la variable no está
definida, recibirá una advertencia y se intentará usar el antiguo
algoritmo de detección.
</impo>

<note>
Si no sabe qué valor estaba usando su sistema con la detección
automática, debe comentar de forma temporal la variable
<b>rc_sys</b> y ejecutar el comando de detección <c>rc -S</c>.
</note>

<pre caption="Ajustando el subtipo de sistema a ninguno en /etc/rc.conf">
rc_sys=""
</pre>

<p>
El algoritmo de detección debió ser reemplazado por la configuración
manual debido a la introducción de nuevos subtipos y cambios al núcleo
que convirtieron a la detección original en poco fiable.
</p>

<table>
<tr>
  <th>Subtipo</th>
  <th>Descripción</th>
  <th>Notas</th>
</tr>
<tr>
  <ti></ti>
  <ti>Valor por defecto, sin subtipo</ti>
  <ti>No es igual que dejarlo indefinido; FreeBSD, Linux y NetBSD</ti>
</tr>
<tr>
  <ti>jail</ti>
  <ti>Jaulas FreeBSD</ti>
  <ti></ti>
</tr>
<tr>
  <ti>lxc</ti>
  <ti>Contenedores Linux</ti>
  <ti>No es autodetectado</ti>
</tr>
<tr>
  <ti>openvz</ti>
  <ti>Linux OpenVZ</ti>
  <ti></ti>
</tr>
<tr>
  <ti>prefix</ti>
  <ti>Prefijo</ti>
  <ti>No es autodetectado; FreeBSD, Linux y NetBSD</ti>
</tr>
<tr>
  <ti>vserver</ti>
  <ti>Linux vserver</ti>
  <ti></ti>
</tr>
<tr>
  <ti>xen0</ti>
  <ti>Dominio Xen0</ti>
  <ti>Linux y NetBSD</ti>
</tr>
<tr>
  <ti>xenU</ti>
  <ti>Dominio XenU</ti>
  <ti>Linux y NetBSD</ti>
</tr>
</table>

</body>
</section>
<section>
<title>Eliminando los ficheros de configuración sobrantes</title>
<body>

<p>
Después de la migración, deberían quedar algunos fichero en su sistema
que Portage no ha eliminado. Se trate de ficheros de configuración que
se han protegido mediante la característica de configuración para la
protección de ficheros de configuración que ofrece Portage.
</p>

<p>
El ejemplo más notable sería <path>/etc/conf.d/net.example</path> que
es sustituido por <path>/usr/share/doc/openrc-*/net.example.bz2</path>.
</p>

</body>
</section>
<section>
<title>Terminando</title>
<body>

<p>
Una vez haya terminado de actualizar los archivos de configuración y
guiones de inicio, solo queda <b>reiniciar</b>. Esto es necesario
porque la información acerca del estado del sistema se preserva
durante la actualización, de manera que debemos proporcionarla
reiniciando el sistema.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Funcionalidad que ha sido modificada</title>
<section>
<title>La acción pausa</title>
<body>

<p>
Previamente era posible detener un servicio temporalmente sin parar
los servicios dependientes usando <c>/etc/init.d/service pause</c>. La
acción <c>pause</c> ha sido eliminada de OpenRC y ha sido sustituida
por <c>/etc/init.d/service --nodeps stop</c> que también funciona en
el baselayout anterior.
</p>

</body>
</section>
<section>
<title>La entrada rootfs en /etc/mtab</title>
<body>

<p>
Anteriormente, la entrada inicial <b>rootfs</b> se eliminó de
<path>/etc/mtab</path>, y únicamente existía la entrada para la raíz
verdadera <path>/</path>. El ítem duplicado rootfs, era añadido
durante el proceso de apagado. En OpenRC ambas entradas debían estar
presentes para el soporta completo de initramfs y tmpfs-on-root. Esto
significa que se requiere menor escritura durante el proceso de
apagado.
</p>

</body>
</section>
</chapter>
</guide>
