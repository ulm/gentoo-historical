<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/openrc-migration.xml,v 1.5 2009/02/16 20:06:26 chiguire Exp $ -->

<guide link="/doc/es/openrc-migration.xml" lang="es">
<title>Guía de Migración de Baselayout y OpenRC</title>

<author title="Autor">
  <mail link="cardoe"/>
</author>
<author title="Autor">
  <mail link="nightmorph"/>
</author>
<author title="Contribuidor">
  <mail link="uberlord"/>
</author>
<author title="Traductor">
  <mail link="chiguire"/>
</author>
<author title="Traductor">
  <mail link="mcklaren@gmail.com">Manuel Peral González</mail>
</author>

<abstract>
Esta guía muestra como migrar de baselayout-1 a baselayout-2 y
OpenRC.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.8</version>
<date>2009-02-11</date>

<chapter>
<title>Trasfondo</title>
<section>
<title>¿Qué es baselayout?</title>
<body>

<p>
Baselayout proporciona un conjunto básico de archivos que necesita
cualquier sistema para funcionar correctamente, tal como
<path>/etc/hosts</path>. También proporciona la disposición básica del
sistema de archivos usado por Gentoo (por ejemplo, los directorios
<path>/etc</path>, <path>/var</path>, <path>/usr</path>,
<path>/home</path>).
</p>
</body>
</section>

<section>
<title>¿Qué es OpenRC?</title>
<body>

<p>
OpenRC es un sistema de arranque (rc system) gestionado por
dependencias que trabaja con cualquier init proporcionado por el
sistema, normalmente <path>/sbin/init</path>. Sin embargo, <e>no</e>
es un reemplazo para <path>/sbin/init</path>. El init por defecto
usado por Gentoo Linux es <c>sys-apps/sysvinit</c>, mientras que
Gentoo/FreeBSD usa el init de FreeBSD provisto por
<c>sys-freebsd/freebsd-sbin</c>.
</p>
</body>
</section>

<section>
<title>Entonces ¿por qué migrar?</title>
<body>

<p>
Originalmente el sistema rc de Gentoo formaba parte de baselayout 1 y
estaba escrito completamente en bash. Esto trae consigo varias
limitaciones. Por ejemplo, ciertas llamadas al sistema necesitan
acceso durante el arranque, por lo que requirió agregar llamadas en
C. Estas llamadas eran enlazadas estáticamente, aumentando
notablemente el sistema rc al pasar el tiempo.
</p>

<p>
Además, al expandir Gentoo a otras plataformas como Gentoo/FreeBSD y
Gentoo Encastrado (embedded), se hacía imposible seguir requiriendo un
sistema rc basado en bash. Esto propulsó el desarrollo de baselayout
2, escrito en C y que solo requiere un interpretador de comandos que
cumpla la norma POSIX. Durante el desarrollo de baselayout 2, se
determinó que sería mejor si baselayout solo proporcionara los
archivos base y disposición de archivos para Gentoo y que el sistema
rc fue separado como un paquete independiente. De manera que así
tenemos OpenRC.
</p>

<p>
OpenRC es desarrollado principalmente por <uri
link="http://roy.marples.name/openrc">Roy Marples</uri> y soporta
todas las variaciones de Gentoo (por ejemplo, Gentoo Linux,
Gentoo/FreeBSD, Gentoo Embedded y Gentoo Vserver) y otras plataformas
como FreeBSD y NetBSD.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Migrando a OpenRC</title>
<section>
<body>

<p>
La migración a OpenRC es relativamente sencilla, ya que aparecerá como
parte del proceso regular de actualizaciones por medio del gestor de
paquetes. De hecho, el paso más importante viene después de instalar
los novísimos paquetes <c>>=sys-apps/baselayout-2</c> y
<c>sys-apps/openrc</c>. Es <e>crítico</e> ejecutar
<c>dispatch-conf</c> asegurándonos que nuestro directorio
<path>/etc</path> esté actualizado antes de re-iniciar. <brite>El no
actualizar este directorio resultará en un sistema que no
arranque</brite>, requiriendo el uso del LiveCD Gentoo para realizar
los pasos detallados a continuación para reparar el sistema.
</p>

<p>
Una vez actualizados los archivos de configuración debemos verificar
algunas cosas antes de re-iniciar.
</p>
</body>
</section>

<section id="rc_conf">
<title>/etc/conf.d/rc</title>
<body>

<p>
El archivo <path>/etc/conf.d/rc</path> ahora es obsoleto, por lo que
cualquier configuración debe ser trasladada a
<path>/etc/rc.conf</path>. Por favor lea los comentarios en
<path>/etc/rc.conf</path> y <path>/etc/conf.d/rc</path> y migre la
configuración. Una vez terminado, puede borrar
<path>/etc/conf.d/rc</path>.
</p>
</body>
</section>

<section id="modules">
<title>Kernel modules</title>
<body>

<p>
Normalmente, cuando uno desea que ciertos módulos del núcleo sean
cargados al arrancar, se colocan sus nombres en
<path>/etc/modules.autoload.d/kernel-2.6</path> junto con los
parámetros que debemos pasar al núcleo. En baselayout-2 ya no se usa
este archivo. Ahora, los módulos a cargar automáticamente y sus
parámetros se colocan en un solo archivo,
<path>/etc/conf.d/modules</path>, sin importar la versión del núcleo.
</p>

<p>
Un ejemplo del estilo antiguo de configuración sería:
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
ivtv
cx88_dvb video_br=2
</pre>

<p>
Transformando este ejemplo resultaría en:
</p>

<pre caption="/etc/conf.d/modules">
<comment># Módulos a cargar automáticamente al arrancar</comment>
modules_2_6="ivtv cx88_dvb"
<comment># Parámetros del módulo</comment>
module_cx88_dvb_args_2_6="video_br=2"
</pre>

<p>
En los anteriores ejemplos, los módulos y sus parámetros solo sería
pasados a núcleos de la serie 2.6.x. La configuración nueva permite un
control más fino sobre los módulos y los parámetros basados en la
versión del núcleo.
</p>

<p>
Un ejemplo más completo sería:
</p>

<pre caption="Ejemplo detallado de /etc/conf.d/modules">
<comment># Siempre cargar ochi1394 y ieee1394, sin importar la versión del núcleo</comment>
modules="ohci1394 ieee1394"
<comment># Cargar solamente tun y usbserial en núcleos de la serie 2.6.x</comment>
modules_2_6="tun usbserial"
<comment># Solo cargar cx88_dvb en núcleos 2.6.23</comment>
modules_2_6_23="cx88_dvb"
<comment># Solo cargar ivtv para el núcleo 2.6.23-gentoo-r5</comment>
modules_2_6_23_gentoo_r5="ivtv"

<comment># Para el núcleo 2.6.23-gentoo-r5, pase video_br=2 a cx88_dvb</comment>
module_cx88_dvb_args_2_6_23_gentoo_r5="video_br=2"
<comment># Para núcleos de la serie 2.6.x, siempre pase proveedor y producto</comment>
module_usbserial_args_2_6="vendor=0x1410 product=0x2110"
<comment># Siempre pase debug a ieee1394</comment>
module_ieee1394_args="debug"
</pre>

<note>
Por favor note la diferencia entre <b>module_</b> y <b>modules_</b>.
</note>
</body>
</section>

<section id="boot">
<title>Nivel de ejecución boot</title>
<body>

<p>
El nivel de ejecución <c>boot</c> realiza varios pasos importantes en
cada máquina. Por ejemplo, asegurar que el sistema de archivos raíz
esté montado para lectura/escritura, que los sistemas de archivo sean
revisados por errores, que los puntos de montaje estén disponibles y
que el seudo sistema de archivos <path>/proc</path> esté iniciado al
arrancar.
</p>

<p>
Con OpenRC el manejo de servicios de volúmenes de dispositivos de
almacenamiento en bloque ya no son ejecutados automáticamente al
iniciar. Esto incluye lvm, raid, partición de intercambio,
device-mapper (dm), dm-crypt, evms y demás. Asegúrese que el guión de
inicio apropiado para cada servicio esté en el nivel de ejecución
<c>boot</c>, si no ¡es posible que el sistema no arranque!
</p>

<p>
Mientras que el ebuild OpenRC intentará hacer esta migración por su
cuenta, debe verificarse que haya migrado todos los servicios de
manejo de volúmenes correctamente:
</p>

<pre caption="Mostrar todos los servicios en el nivel de ejecución boot">
# <i>ls -l /etc/runlevels/boot/</i>
</pre>

<p>
Si no ve root, procfs, mtab, swap y fsck en el listado anterior,
ejecute los siguientes comandos para agregarlos al nivel de ejecución
<c>boot</c>:
</p>

<pre caption="Agregar los servicios críticos al nivel de ejecución boot">
# <i>rc-update add root boot</i>
# <i>rc-update add procfs boot</i>
# <i>rc-update add mtab boot</i>
# <i>rc-update add fsck boot</i>
# <i>rc-update add swap boot</i>
</pre>

<p>
Si sabe que usa mdraid y lvm y no los ve en la lista anterior, ejecute
los siguientes comandos para agregar los guiones de inicio al nivel de
ejecución <c>boot</c>:
</p>

<pre caption="Agregar raid y lvm al nivel de ejcución boot">
# <i>rc-update add raid boot</i>
# <i>rc-update add lvm boot</i>
</pre>
</body>
</section>

<section>
<title>Udev</title>
<body>

<p>
OpenRC ya no inicia <c>udev</c> por defecto, aunque sí necesita estar
presente en el nivel de ejecución <c>sysinit</c> para ser iniciado. El
ebuild de OpenRC debe detectar si <c>udev</c> estaba activado
previamente para agregarlo al nivel de ejecución <c>sysinit</c>. Sin
embargo, para estar seguro, revise si <c>udev</c> esta presente:
</p>

<pre caption="Verificando udev">
# <i>ls -l /etc/runlevels/sysinit</i>
lrwxrwxrwx 1 root root 14 2009-01-29 08:00 /etc/runlevels/sysinit/udev -> \
/etc/init.d/udev
</pre>

<p>
Si <c>udev</c> no está listado, agréguelo al nivel de ejecución
correcto:
</p>

<pre caption="Agregando udev al nivel de ejecución sysinit">
# <i>rc-update add udev sysinit</i>
</pre>
</body>
</section>

<section>
<title>La red</title>
<body>

<p>
Debido a que baselayout y OpenRC ahora son paquetes separados, el
guión net.eth0 podría desaparecer durante el proceso de
actualización. Para reemplazar este guión de inicio, ejecute los
siguientes comandos:
</p>

<pre caption="Restaurar el guión net.eth0 faltante">
# <i>cd /etc/init.d</i>
# <i>ln -s net.lo net.eth0</i>
</pre>

<p>
Si falta algún otro guión de red, siga las instrucciones anteriores
para agregarlas otra vez, reemplazando <c>eth0</c> con el nombre del
dispositivo de red.
</p>

<p>
Además, <path>/etc/conf.d/net</path> ya no usa estructuras estilo bash
para la configuración. Por favor examine
<path>/usr/share/doc/openrc/net.example</path> para instrucciones de
configuración. La conversión debería ser relativamente sencilla, por
ejemplo, una asignación estática de IP cambiaría así:
</p>

<pre caption="Estilo anterior de /etc/conf.d/net">
config_eth0=( "192.168.1.37 netmask 255.255.255.0 brd 192.168.1.255" )
routes_eth0=( "default via 192.168.1.100" )
</pre>

<pre caption="Estilo nuevo /etc/conf.d/net">
config_eth0="192.168.1.37 netmask 255.255.255.0 brd 192.168.1.255"
routes_eth0="default via 192.168.1.100"
</pre>
</body>
</section>

<section>
<title>Reloj</title>
<body>

<p>
El archivo de configuración del reloj ha cambiado de nombre, de
<path>/etc/conf.d/clock</path> al nombre de la herramienta nativa del
sistema para ajustar el reloj. Esto significa que en Linux será
<path>/etc/conf.d/hwclock</path> y en FreeBSD será
<path>/etc/conf.d/adjkerntz</path>. El guión de inicio en
<path>/etc/init.d/</path> también ha sido renombrado apropiadamente,
así que asegúrese que esté en el nivel de ejecución apropiado.
</p>

<p>
Además, la variable de entorno <c>TIMEZONE</c> ya no está en este
archivo. Su contenido se encuentra ahora en
<path>/etc/timezone</path>. Si no existe, deberá crearlo con su zona
horaria. Por favor revise ambos archivos para estar seguro que estén
correctos.
</p>

<p>
El valor correcto de este archivo es la trayectoria relativa a la zona
horaria desde <path>/usr/share/zoneinfo</path>. Por ejemplo, para
alguien viviendo en la costa este de los Estados Unidos, la siguiente
configuración sería correcta:
</p>

<pre caption="/etc/timezone">
America/New_York
</pre>
</body>
</section>

<section>
<title>XSESSION</title>
<body>

<p>
La variable XSESSION ya no se encuentra en
<path>/etc/rc.conf</path>. El paquete <c>x11-apps/xinit</c> ahora
proporciona <path>/etc/env.d/90xsession</path>, que puede ser usado
para configurar la variable XSESSION.
</p>

<p>
Esta variable <b>NO</b> será migrada por defecto, así que debe
modificar <path>/etc/env.d/90xsession</path>.
</p>

<impo>
Recuerde ejecutar <c>env-update</c> después de crear un archivo en
<path>/etc/env.d</path>, luego haga logout y luego login para que haga
efecto.
</impo>
</body>
</section>

<section>
<title>EDITOR / PAGER</title>
<body>

<p>
La variable EDITOR ya no se encuentra en
<path>/etc/rc.conf</path>. Ambas variables EDITOR y PAGER, se
configuran por defecto en <path>/etc/profile</path>. Cambie esto según
su conveniencia en su archivo <path>~/.bashrc</path> (o equivalente) o
cree el archivo <path>/etc/env.d/99editor</path> y configure el valor
por defecto del sistema allí.
</p>

<impo>
Ejecute <c>env-update</c> luego de crear un archivo en
<path>/etc/env.d</path> y después hacer logout y login para que haga
efecto. Si configura la variable en <path>~/.bashrc</path>, puede
re-leer el archivo con <c>source ~/.bashrc</c>.
</impo>
</body>
</section>

<section>
<title>Mensajes (Log) de Arranque</title>
<body>

<p>
Anteriormente, se podía registrar el proceso de arranque con
<c>app-admin/showconsole</c>. Sin embargo, ahora OpenRC procesa todo
los registros de sistema internamente, por lo que no es necesario
utilizar la utilidad <c>showconsole</c>. Para continuar registrando
los mensajes de arranque, establezca la variable apropiada en
<path>/etc/rc.conf</path>. Los mensajes serán guardados en
<path>/var/log/rc.log</path>.
</p>

<pre caption="Activar mensajes de arranque en /etc/rc.conf">
rc_logger="YES"
</pre>
</body>
</section>

<section>
<title>Terminando</title>
<body>

<p>
Una vez terminado de actualizar los archivos de configuración y
guiones de inicio, solo queda <b>re-iniciar</b>. Esto es necesario
porque la información acerca del estado del sistema se preserva
durante la actualización, de manera que debemos proporcionarla con una
re-iniciación.
</p>
</body>
</section>
</chapter>
</guide>
