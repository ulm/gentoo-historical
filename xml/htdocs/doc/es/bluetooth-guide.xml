<?xml version='1.0' encoding="UTF-8"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/bluetooth-guide.xml,v 1.16 2010/05/28 22:03:23 nimiux Exp $ -->

<guide link="/doc/es/bluetooth-guide.xml" lang="es">
<title>Guía Bluetooth de Gentoo Linux</title>

<author title="Author">
  <mail link="deathwing00@gentoo.org">Ioannis Aslanidis</mail>
</author>
<author title="Colaborador">
  <mail link="puggy@gentoo.org">Douglas Russell</mail>
</author>
<author title="Colaborador">
  <mail link="marcel@holtmann.org">Marcel Holtmann</mail>
</author>
<author title="Autor">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Editor">
  <mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>
<author title="Editor">
  <mail link="nightmorph"/>
</author>
<author title="Traductor">
  <mail link="chiguire@gmail.com">John Christian Stoddart</mail>
</author>
<author title="Traductor">
  <mail link="nordri@gmail.com">Federico Díaz</mail>
</author>
<author title="Traductor">
  <mail link="nimiux"/>
</author>

<abstract>
Esta guía explicará como instalar correctamente un dispositivo anfitrión
Bluetooth, configurar apropiadamente el núcleo, explicar todas las
posibilidades que ofrece la interconexión Bluetooth y cómo pasar un buen
rato con Bluetooth.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.11</version>
<date>2009-07-16</date>

<chapter id="introduction">
<title>Introducción</title>
<section>
<title>¿Qué es Bluetooth?</title>
<body>

<p>
Bluetooth es una especificación industrial que proporciona a los
usuarios una forma de conectar e intercambiar información entre
dispositivos tales como ordenadores personales, PDAs o teléfonos
móviles. Usando la tecnología Bluetooth, los usuarios podrán conseguir
voz sin hilos y transmisión de datos entre dispositivos a un bajo
coste. El Bluetooth también ofrece la posibilidad de crear pequeñas
LAN inalámbricas y sincronizar dispositivos.
</p>
</body>
</section>

<section>
<title>Acerca del contenido de esta guía</title>
<body>

<p>
La primera parte de esta guía explica como configurar el núcleo del
sistema, identificar los dispositivos Bluetooth instalados en el sistema
y detectados por el núcleo e instalar las herramientas básicas
necesarias para el Bluetooth.
</p>

<p>
La segunda parte cubre como detectar dispositivos remotos y como
establecer una conexión desde o hacia ellos mediante una comunicación
establecida por radio frecuencia (RFCOMM)
<!-- o por la creación de una red de área personal (PAN)-->.
</p>

<p>
La última parte de la guía lista en detalle aplicaciones que pueden
aprovechar todas las ventajas de las posibilidades que ofrece la
tecnología Bluetooth.
</p>
</body>
</section>
</chapter>

<chapter id="kernel">
<title>Configurando el sistema</title>
<section>
<title>Configuración del núcleo</title>
<body>

<p>
Como el último núcleo estable de Linux es el 2.6, la configuración se
llevará a cabo sobre esta serie. La mayoría de los dispositivos
Bluetooth se conectan a un puerto USB, asi que el USB debe activarse
también. Por favor revise la <uri link="/doc/es/usb-guide.xml">Guía de
USB en Gentoo Linux</uri>.
</p>

<pre caption="Configuración para los núcleos 2.6">
Networking ---&gt;

&lt;*&gt; Bluetooth subsystem support  ---&gt;

--- Bluetooth subsystem support
&lt;M&gt;   L2CAP protocol support
&lt;M&gt;   SCO links support
&lt;M&gt;   RFCOMM protocol support
[*]     RFCOMM TTY support
&lt;M&gt;   BNEP protocol support
[*]     Multicast filter support
[*]     Protocol filter support
&lt;M&gt;   HIDP protocol support

Bluetooth device drivers  ---&gt;
&lt;M&gt; HCI USB driver
[*]   SCO (voice) support
&lt;M&gt; HCI UART driver
[*]   UART (H4) protocol support
[*]   BCSP protocol support
[*]   Transmit CRC with every BCSP packet
&lt;M&gt; HCI BCM203x USB driver
&lt;M&gt; HCI BPA10x USB driver
&lt;M&gt; HCI BlueFRITZ! USB driver
<comment>(Los cuatro controladores siguientes son para dispositivos Bluetooth
PCMCIA y serán marcados únicamente si ha seleccionado el soporte PCMCIA en
su núcleo.)</comment>
&lt;M&gt; HCI DTL1 (PC Card) driver
&lt;M&gt; HCI BT3C (PC Card) driver
&lt;M&gt; HCI BlueCard (PC Card) driver
&lt;M&gt; HCI UART (PC Card) device driver
<comment>(El controlador siguiente esta previsto para el software de
emulación HCI.)</comment>
&lt;M&gt; HCI VHCI (Virtual HCI device) driver

<comment>(Retroceda tres niveles hasta Device Drivers y compruebe si
el USB está habilitado. Esto es necesario si usa un artilugio (dongle)
Bluetooth USB, la mayoría tiene base USB.)</comment>
 USB support ---&gt;

&lt;*&gt; Support for Host-side USB
--- USB Host Controller Drivers
&lt;M&gt; EHCI HCD (USB 2.0) support
[ ]   Full speed ISO transactions (EXPERIMENTAL)
[ ]   Root Hub Transaction Translators (EXPERIMENTAL)
&lt;*&gt; OHCI HCD support
&lt;*&gt; UHCI HCD (most Intel and VIA) support
&lt; &gt; SL811HS HCD support
</pre>

<p>
Ahora reiniciamos con el nuevo núcleo. Si todo fue bien, tendremos un
sistema con Bluetooth listo.
</p>

<impo>
Su dispositivo USB puede tener dos modos, el predeterminado no suele
ser HCI, sino HID. Si este es su caso, utilice <c>hid2hci</c> para
pasar al modo HCI. Su sistema no recordará este cambio cuando vuelva a
reiniciar.
</impo>

<pre caption="Comprobando los dispositivos Bluetooth">
<comment>(Una forma de comprobar los dispositivos)</comment>
# <i>cat /proc/bus/usb/devices | grep -e^[TPD] | grep -e Cls=e0 -B1 -A1</i>
<comment>(Cls=e0(unk. ) identifica el adaptador Bluetooth.)</comment>
T:  Bus=02 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0a12 ProdID=0001 Rev= 5.25
<comment>(Algo debería mostrarse en lsusb utilizando
sys-apps/usbutils)</comment>
# <i>lsusb</i>
Bus 003 Device 002: ID 046d:c00e Logitech, Inc. Optical Mouse
Bus 003 Device 001: ID 0000:0000
Bus 002 Device 002: ID 0db0:1967 Micro Star International Bluetooth Dongle
</pre>
</body>
</section>
</chapter>

<chapter id="bluez">
<title>BlueZ - La Pila Bluetooth</title>
<section>
<title>Instalando BlueZ</title>
<body>

<p>
Ahora que el dispositivo es detectado por el núcleo, necesitamos una
capa que permita a las aplicaciones comunicarse con el dispositivo
Bluetooth. BlueZ proporciona la pila oficial del Bluetooth de
Linux. Los ebuilds que proporcionan lo que necesitamos son
<c>bluez-libs</c> y <c>bluez-utils</c>.  Los dispositivos que
necesitan el firmware de Broadcom o similares pueden necesitar
<c>bluez-firmware</c>.
</p>

<pre caption="Instalando bluez-libs y bluez-utils">
# <i>emerge net-wireless/bluez-libs net-wireless/bluez-utils</i>
</pre>
</body>
</section>

<section>
<title>Configuración de BlueZ y emparejamiento PIN</title>
<body>

<p>
Ahora es el momento de ver si el sistema ha levantado el dispositivo
Bluetooth correctamente. Iniciaremos primero los servicios Bluetooth
requeridos.
</p>

<pre caption="Arrancando hciconfig">
<comment>(Arranque de Bluetooth)</comment>
# <i>/etc/init.d/bluetooth start</i>
* Starting Bluetooth ...
*     Starting hcid ...                                                 [ ok ]
*     Starting sdpd ...                                                 [ ok ]
*     Starting rfcomm ...                                               [ ok ]

# <i>hciconfig</i>
hci0:   Type: USB
        BD Address: 00:01:02:03:04:05 ACL MTU: 192:8  SCO MTU: 64:8
        DOWN
        RX bytes:131 acl:0 sco:0 events:18 errors:0
        TX bytes:565 acl:0 sco:0 commands:17 errors:0
</pre>

<p>
Esto muestra que el dispositivo Bluetooth ha sido reconocido. Como
puede comprobar el dispositivo está <e>DOWN (apagado)</e>. Vamos a
configurarlo para que podamos levantarlo. El fichero de configuración
se encuentra en <path>/etc/bluetooth/hcid.conf</path>. Los cambios
necesarios en el fichero de configuración se muestran a
continuación. Para los detalles adicionales consulte <c>man
hcid.conf</c>.
</p>

<pre caption="Editando /etc/bluetooth/hcid.conf">
<comment>(Se muestran los cambios recomendables para el fichero)</comment>

# HCId options
options {
        # Automatically initialize new devices
        autoinit yes;

<comment>(Cambie la seguridad a "auto")</comment>
        # Security Manager mode
        #   none - Security manager disabled
        #   auto - Use local PIN for incoming connections
        #   user - Always ask user for a PIN
        #
        security auto;

        # Pairing mode
        pairing multi;

<comment>(Sólo necesita un gestor de pin si está usando &lt;=bluez-libs-2.x y &lt;=bluez-utils-2.x)
(Cambie pin_helper para usar /etc/bluetooth/pin-helper)</comment>
        # PIN helper
        pin_helper /etc/bluetooth/pin-helper;
}

# Default settings for HCI devices
device {
<comment>(Establezca aquí el nombre de su dispositivo, puede llamarlo como quiera)</comment>
        # Local device name
        #   %d - device id
        #   %h - host name
        name "BlueZ at %h (%d)";

        # Local device class
        class 0x3e0100;

        # Inquiry and Page scan
        iscan enable; pscan enable;

        # Default link mode
        lm accept;

        # Default link policy
        lp rswitch,hold,sniff,park;

<comment>(Déjelo así, si no sabe exactamente que hace esto)</comment>
        # Authentication and Encryption (Security Mode 3)
        #auth enable;
        #encrypt enable;
}
</pre>

<p>
Después de esto, hemos de configurar el PIN Bluetooth para pares. Esto
nos ayudará a emparejar nuestro dispositivo con otro.
</p>

<pre caption="Editando /etc/bluetooth/pin">
<comment>(Cambie 123456 por el número pin que desee.)</comment>
123456
</pre>

<impo>
Este número (de su elección) debe ser el mismo en todos sus anfitriones con
dispositivos Bluetooth para que puedan ser emparejados. Este número debe
permanecer en secreto para que nadie pueda establecer una conexión con sus
dispositivos.
</impo>

<note>
Comenzando por <c>>=bluez-libs-3.x</c> y <c>>=bluez-utils-3.x</c> los
gestores de pin han sido sustituidos por agentes de claves. Hay
disponibles un puñado de agentes de claves gráficos para ayudarle a
manejar sus claves, tales como <c>bluez-gnome</c> y
<c>kdebluetooth</c>. También puede usar <c>passkey-agent</c>
(contenido en <c>bluez-utils</c>) desde la linea de comandos
</note>
</body>
</section>

<section>
<title>Configuración de servicios</title>
<body>

<p>
Ahora que hemos terminado con la configuración de BlueZ, es momento de
reiniciar los servicios necesarios.
</p>

<pre caption="Arrancando los demonios de Bluetooth">
# <i>/etc/init.d/bluetooth restart</i>
<comment>(Podemos añadirlos al nivel de ejecución por defecto.)</comment>
# <i>rc-update add bluetooth default</i>
 * bluetooth added to runlevel default
 * rc-update complete.
</pre>

<p>
Vamos a estar seguros de que los demonios de Bluetooth han arrancado
correctamente. Si podemos ver que <c>hcid</c> y <c>sdpd</c> están
corriendo, entonces hemos configurado correctamente Bluetooth. Después
de esto, podemos ver si el dispositivo está ahora levantado y
corriendo con las opciones configuradas.
</p>

<pre caption="Comprobando si los demonios de Bluetooth arrancaron correctamente">
<comment>(Observe si los servicios estan corriendo)</comment>
# <i>ps -ae | grep hcid</i>
26050 ?        00:00:00 hcid
# <i>ps -ae | grep sdpd</i>
26054 ?        00:00:00 sdpd

# <i>hciconfig -a</i>
hci0:   Type: USB
        BD Address: 00:0A:0B:0C:0D:0E ACL MTU: 192:8 SCO MTU: 64:8
        UP RUNNING PSCAN ISCAN
        RX bytes:125 acl:0 sco:0 events:17 errors:0
        TX bytes:565 acl:0 sco:0 commands:17 errors:0
        Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
        Link policy: RSWITCH HOLD SNIFF PARK
        Link mode: SLAVE ACCEPT
        Name: 'BlueZ at bluehat (0)'
        Class: 0x3e0100
        Service Classes: Networking, Rendering, Capturing, Object Transfer,
        Audio
        Device Class: Computer, Uncategorized
        HCI Ver: 1.1 (0x1) HCI Rev: 0x1e7 LMP Ver: 1.1 (0x1) LMP Subver: 0x1e7
        Manufacturer: Cambridge Silicon Radio (10)
</pre>
</body>
</section>
</chapter>

<chapter id="detect">
<title>Detectando y Conectando a Dispositivos Remotos</title>
<section>
<title>Detectando dispositivos Bluetooth en otros anfitriones</title>
<body>

<p>
En este punto estamos preparados para detectar dispositivos Bluetooth
en otras máquinas. Esto es independiente del Sistema Operativo que
tenga el anfitrión.  Usaremos el comando <c>hcitool</c> para lo mismo.
</p>

<pre caption="Comprobando dispositivos locales">
# <i>hcitool dev</i>
Devices:
        hci0    00:01:02:03:04:05
</pre>

<pre caption="Escaneando dispositivos remotos">
# <i>hcitool scan</i>
Scanning ...
        00:0A:0B:0C:0D:0E       Grayhat
</pre>

<pre caption="Investigando dispositivos remotos">
# <i>hcitool inq</i>
Inquiring ...
        00:0A:0B:0C:0D:0E       clock offset: 0x5579    class: 0x72010c
</pre>

<p>
Ahora conocemos la dirección MAC del dispositivo Bluetooth remoto,
podemos comprobar si nos hemos emparejado correctamente.
</p>

<pre caption="Corriendo l2ping">
# <i>l2ping 00:0A:0B:0C:0D:0E</i>
Ping: 00:0A:0B:0C:0D:0E from 00:01:02:03:04:05 (data size 20) ...
20 bytes from 00:0A:0B:0C:0D:0E id 200 time 69.85ms
20 bytes from 00:0A:0B:0C:0D:0E id 201 time 9.97ms
20 bytes from 00:0A:0B:0C:0D:0E id 202 time 56.86ms
20 bytes from 00:0A:0B:0C:0D:0E id 203 time 39.92ms
4 sent, 4 received, 0% loss
</pre>
</body>
</section>

<section>
<title>Estableciendo una Comunicación por Radio Frecuencia (RFCOMM)</title>
<body>

<note>
Por favor, observe que establecer una comunicación por radio
frecuencia es opcional.
</note>

<p>
Podemos establecer una comunicación por radio frecuencia hacia otro
dispositivo Bluetooth usando el comando <c>rfcomm</c>. Para hacer las
cosas un poco más sencillas, especialmente para los usuarios con
múltiples dispositivos que soportan Bluetooth, es aconsejable hacer
unos cuantos cambios en la configuración por defecto de rfcomm en
<path>/etc/bluetooth/rfcomm.conf</path>.
</p>

<p>
Toda la parte que empieza en <c>rfcomm0 {</c> y termina en <c>}</c> es
la configuración del dispositivo que establecerá la conexión en
<path>/dev/rfcomm0</path>. En este caso, solo mostraremos un ejemplo,
rfcomm0.  Puede añadir más dispositivos según sus necesidades.
</p>

<pre caption="Editando /etc/bluetooth/rfcomm.conf">
<comment>(Sólo se muestran cambios que pueden ser necesarios)</comment>
rfcomm0 {
        # Automatically bind the device at startup
        <comment>(Crea el nodo para el dispositivos en /dev/rfcomm0 al arrancar)</comment>
        bind yes;

        # Bluetooth address of the device
        <comment>(Introduzca la dirección del dispositivo al que quiere conectar)</comment>
        device 00:0A:0B:0C:0D:0E;

}
</pre>

<p>
Tras configurar RFCOMM, podemos conectar a cualquier
dispositivo. Puesto que hemos hecho los ajustes necesarios en el
fichero <path>/etc/bluetooth/rfcomm.conf</path>, sólo tenemos que
introducir el comando mostrado a continuación. En el caso de que no
haya hecho cambios en el fichero de configuración, se muestra también
un metodo alternativo en el listado de código siguiente.
</p>

<pre caption="Estableciendo una conexión RFCOMM">
<comment>(El 0 hace referencia a rfcomm0 en el archivo de configuración)
</comment>
# <i>rfcomm connect 0 </i>
Connected /dev/rfcomm0 to 00:0A:0B:0C:0D:0E on channel 1
Press CTRL-C for hangup

<comment>(Si no ha editado /etc/bluetooth/rfcomm.conf)</comment>
# <i>rfcomm connect 0 00:0A:0B:0C:0D:0E 1</i>
Connected /dev/rfcomm0 to 00:0F:DE:69:50:24 on channel 1
Press CTRL-C for hangup
</pre>

<p>
El primer parámetro después del comando conectar es el nodo del
dispositivo RFCOMM TTY que se usará para conectar (normalmente 0). El
segundo parámetro el la dirección MAC del dispositivo remoto. El
tercer parámetro es opcional y especifica el canal a usar. Por favor,
observe que para conectar a un dispositivo, este debe estar escuchando
conexiones entrantes. Para ello, debemos decirle explícitamente que
escuche. Podemos cancelar la comunicación en cualquier momento con
sólo pulsar CTRL-C.
</p>

<pre caption="Escuchando conexiones entrantes RFCOMM">
# <i>rfcomm listen 0 1</i>
Waiting for connection on channel 1
</pre>

<p>
De una manera similar al comando conectar, el comando escuchar puede
recibir dos parámetros. El primero expresa el nodo del dispositivo
RFCOMM TTY que se usará para aceptar la conexión (normalmente 0),
mientras que el segundo es el canal que se usará.
</p>

<p>
Cada vez que llame al comando <c>rfcomm</c>, puede especificar el
dispositivo físico que quiere usar. Abajo puede ver un pequeño ejemplo
especificando el dispositivo físico en los dos comandos de arriba.
</p>

<pre caption="Conexiones RFCOMM especificando el dispositivo físico">
# <i>rfcomm -i hci0 listen 0 1</i>
Waiting for connection on channel 1
<comment>(Para escuchar a un dispositivo determinado) </comment>
# <i>rfcomm -i hci0 connect 0 00:0A:0B:0C:0D:0E 1</i>
<comment>(Para usar un dispositivo determinado cuando conectamos a otro)
</comment>
</pre>
</body>
</section>

<!-- Eliminando el capítulo de pan, bug 266690, hasta que sepamos
cómo demonios lo hacemos -->
</chapter>

<chapter id="apps">
<title>Aplicaciones de Escritorio para Bluetooth</title>
<section>
<title>Introducción</title>
<body>

<p>
Tenemos bastantes aplicaciones de Bluetooth que corren en escritorio y
este capítulo está dividido en 3 partes, cada una para Gnome, KDE y
aplicaciones diversas.
</p>
</body>
</section>

<section>
<title>Para Gnome</title>
<body>

<p>
Si es un usuario de Gnome, lo más probable es que quiera probar
<c>gnome-bluetooth</c>. Proporciona las funciones más básicas y
utilizadas, como puede ver a continuación.
</p>

<ul>
  <li><c>gnome-bluetooth-manager</c>: Para manejar dispositivos
  Bluetooth remotos.</li>
  <li><c>gnome-obex-send</c>: Para enviar ficheros a otros dispositivos.</li>
  <li><c>gnome-obex-server</c>: Para recibir ficheros.</li>
</ul>

<pre caption="Instalando gnome-bluetooth">
# <i>emerge gnome-bluetooth</i>
</pre>

<p>
Esto añadirá una entrada de menú bajo Aplicaciones &gt; Herramientas
del sistema desde donde puede cómodamente iniciar el gestor o la
compartición de ficheros para transferir ficheros entre los
dispositivos.
</p>

<p>
Para transferir ficheros (la forma fácil):
</p>

<ul>
  <li>
    Desde el teléfono hacia el ordenador - Envíe el fichero desde el
    teléfono vía Bluetooth y será capturado y salvado en su
    <path>/home</path> siempre.
  </li>
<!--FIXME : Doesn't work on Nautilus 2.10.x. Bug #103464 for details -->
<!--
  <li> From the Computer to the Phone - Fire up <c>nautilus</c> and
  select the file you want to send and right click on it. Select the
  Send via Bluetooth option and ask your phone to accept the file.
  </li>
-->
</ul>

<p>
<c>gnome-phone-manager</c> es una elegante aplicación que podrá usar
para enviar y recibir mensajes hacia y desde su teléfono, utilizando
únicamente su sistema. No tendrá que tocar su móvil para leer o enviar
mensajes porque todo ocurrirá a través de la aplicación. También será
informado de un nuevo mensaje en su monitor si la opción está
habilitada en las Preferencias. La instalación es tan sencilla como
siempre.
</p>

<pre caption="Instalando gnome-phone-manager">
# <i>emerge gnome-phone-manager</i>
</pre>
</body>
</section>

<section>
<title>Para KDE</title>
<body>

<p>
KDE hace uso de <c>kdebluetooth</c> y proporciona más utilidades que
su homólogo en Gnome como se muestra a continuación.
</p>

<ul>
  <li><c>kbluetoothd</c>: Meta Servidor Bluetooth.</li>
  <li><c>kbtsearch</c>: Utilidad de búsqueda de dispositivos/servicios
  Bluetooth.</li>
  <li><c>khciconfig</c>: Monitor de Bluetooth de KDE.</li>
  <li><c>kioclient</c>: Cliente de línea de comando KIO.</li>
  <li><c>qobexclient</c>: Navaja suiza para el testeo/desarrollo de obex.</li>
  <li><c>kbtobexclient</c>: Una aplicación para el Framework Bluetooth
  de KDE.</li>
  <li><c>kioobex_start</c></li>
  <li><c>kbtserialchat</c></li>
  <li><c>kbemusedsrv</c>: Servidor KDE Bemused.</li>
  <li><c>kbtobexsrv</c>: Servidor Push OBEX en KDE para Bluetooth.</li>
  <li><c>kbluepin</c>: Aplicación KPART para KDE.</li>
  <li>
    <c>auth-helper</c>: Un programa ayudante para kbtobexsrv que envía
    una petición de autentificación para un link ACL dado.
  </li>
</ul>

<pre caption="Instalando kdebluetooth">
# <i>emerge kdebluetooth</i>
</pre>
</body>
</section>

<section>
<title>Otras aplicaciones interesantes</title>
<body>

<ul>
    <li>
    <c>app-mobilephone/obexftp</c>: Transferencia de ficheros sobre
    OBEX para teléfonos móviles.
  </li>
  <li>
    <c>app-mobilephone/bemused</c>: Bemused es un sistema que le permite
    controlar la colección musical desde su móvil, usando Bluetooth.
  </li>
  <li>
    <c>app-pda/multisync</c>: Multisync le permite sincronizar los
    contactos, las entradas del calendario y las notas desde su
    teléfono móvil con su ordenador, sobre una conexión Bluetooth
    (entre otras cosas). Incluye otras características tales como
    hacer una copia de seguridad de esta información y recuperarla más
    tarde, y sincronizar con el cliente de correo electrónico
    Evolution. Necesitará la variable USE <c>irmc</c> para asegurarse
    que <c>multisync</c> tiene soporte para Bluetooth.
  </li>
  <li>
    <c>net-wireless/opd</c> y <c>net-wireless/ussp-push</c> son
    herramientas de línea de comandos (cliente y servidor) que pueden
    ser usadas para enviar ficheros a su teléfono móvil.
  </li>
</ul>
</body>
</section>
</chapter>

<chapter>
<title>Agradecimientos</title>
<section>
<body>

<p>
Gracias especialmente a <mail link="marcel@holtmann.org">Marcel
Holtmann</mail> por su tiempo y dedicación en el desarrollo del
Bluetooth y por la revisión de esta guía. Y muchas gracias a <mail
link="puggy@gentoo.org">Douglas Russell</mail> por realizar pruebas de
rendimiento adicionales y mejorar esta guía.
</p>
</body>
</section>
</chapter>
</guide>
