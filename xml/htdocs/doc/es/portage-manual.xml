<?xml version='1.0' encoding="ISO-8859-1"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link = "/doc/es/portage-manual.xml">
<title>Portage Manual</title>
<author title="Autor y Editor">
<mail link="blocke@shivan.org">Bruce A. Locke</mail>
</author>
<author title="Traductor">
<mail link="gentoo@kapcoweb.com">Leonardo Boshell</mail>
</author>

<abstract>
Este manual provee una visión general de Portage, información detallada de
configuración y una guía para el usuario final sobre la instalación y
mantenimiento de paquetes usando el sistema Portage.
</abstract>

<version>0.9.5</version>
<date>Abril 22, 2002</date>

<chapter>
<title>Portage: Una Perspectiva General</title>

<section>
  <title>Generalidades</title>
  <body>
	<p>
  Portage es un sistema avanzado de administración de paquetes bastante
  poderoso. Su flexibilidad y habilidad para servir tanto como un simple
  motor de instalación como para formar el corazón mismo de una distribución
  Linux de punta le hace merecedor del título como Motor de
  Meta-distribución. La distribución Gentoo Linux está construída
  alrededor del sistema Portage.
	</p>
	<p>
  Gentoo Linux mismo es llamado usualmente una Meta-distribución. Consiste
  del sistema Portage y de aproximadamente 1,500 conjuntos de recetas para
  la instalación de paquetes llamadas <i>ebuilds</i>. Estos <i>ebuilds</i>
  le dicen al motor Portage cómo compilar e instalar un paquete de
  software. Por medio del uso de <i>perfiles</i> y la utilidad para
  línea-de-comandos llamada <i>emerge</i>, los usuarios y desarrolladores
  pueden usar Portage para instalar y mantener los paquetes que
  constituyen el subyacente sistema operativo y las aplicaciones del
  sistema.
  </p>
	<p>
  Un sistema Gentoo Linux es "compilado al vuelo". La acción de instalar
  Gentoo Linux implica establecer en el equipo un compilador que funcione
  y un entorno de instalación por medio del cual Portage pueda descargar
  código fuente desde Internet y contruir el resto del "núcleo" del
  sistema y cualquier aplicación que se desee. Aunque Portage soporta
  el uso de paquetes binarios prefabricados, estos son una avenencia y sólo
  se utilizan para instalaciones en equipos lentos, por desarrolladores
  que puedan necesitar recuperar rápidamente un paquete determinado, o
  para cuando los usuarios compilan paquetes en un equipo más rápido para
  luego usarlo en equipos muy antiguos.
	</p>
	<p>
  Debido a esto y al hecho de que Portage es altamente personalizable en
  la forma como maneja la compilación e instalación de paquetes, muy pocas
  instalaciones de Gentoo Linux resultan iguales. Fundamentalmente, cuando
  un usuario instala Gentoo Linux, el sistema Portage compila una
  distribución Linux personalizada de acuerdo a las opciones especificadas
  en la configuración de Portage y en los ebuilds mismos.
	</p>	
	<p>
  A primera vista la idea detrás de Portage puede parecer similar al
  sistema tradicional de ports de BSD. Ambos compilan paquetes desde las
  fuentes y permiten que los usuarios instalen y desinstalen software de
  un sistema de forma segura y los dos administran automáticamente las
  dependencias. Muchas ideas para Portage son tomadas del sistema de ports
  de BSD pero Portage definitivamente no es tan solo otra "imitación de
  ports".
	</p>
	<p>
  El sistema Portage es una mezcla de una base en Python con
  <i>Ebuilds</i> basados en scripts de Bash. En lugar de lidiar con
  Makefiles y el comando <i>make</i>, Portage aprovecha el poder de Python
  y la facilidad de uso del scripting en shell con algunas características
  de orientación a objetos para formar un sistema especialmente poderoso
  que nos lleva a pensar que coloca a Portage en ventaja sobre todos los
  demás sistemas de ports actuales.
	</p>
	<p>
  Algunas de las características avanzadas que ofrece Portage son la
  habilidad de contar con múltiples versiones y revisiones del mismo
  paquete en el árbol, soporte para resolución de dependencias y
  características condicionales, administración de paquetes altamente
  detallada, instalación segura con zona de pruebas, protección de
  archivos de configuración, perfiles, y mucho más. Muchas de estas
  características son discutidas en detalle más adelante en este manual.
	</p>
  </body>
</section>

<section>
<title>Soporte para Resolución de Dependencias y Características
Condicionales</title>
<body>
	<p>
  El sistema Portage es único en la cantidad de flexibilidad que ofrece a
  sus usuarios. Los sistemas tradicionales de ports BSD tienden a ofrecer
  soporte únicamente a una revisión de un paquete en el árbol de ports al
  tiempo. Portage no posee tal limitación. Múltiples versiones del mismo
  paquete pueden encontrarse disponibles para su instalación. Las
  dependencias de los paquetes, aquellos paquetes que se requieren para la
  compilación y uso de otro paquete, pueden definirse ya sea por nombre o
  por nombre junto con un rango de versión asociado. Esto hace seguro
  tener múltiples versiones disponibles en el árbol.
	</p>
	<p>
  El sistema de dependencias ofrece soporte para dependencias
  condicionales también. Portage hace uso de un poderoso concepto llamado el
  sistema de <i>parámetros USE</i>. Cambiando el valor de una variable en
  un archivo de configuración de Portage usted puede desactivar soporte
  adicional (y por lo tanto la necesidad de sus dependencias) para
  características particulares o librerías para todos los paquetes en
  tiempo de compilación. Este es un sistema muy flexible y poderoso el
  cual se explica con más detalle en el siguiente capítulo.
	</p>
	<p>
  Adicionalmente Portage soporta el concepto de <i>SLOTS</i>. En el
  transcurso del desarrollo de Gentoo Linux, sus desarrolladores
  encontramos con frecuencia que necesitamos tener múltiples versiones de
  ciertos paquetes (tales como librerías) instaladas para satisfacer las
  demandas de otros paquetes. La manera tradicional de resolver este
  problema ha sido tratar las diferentes versiones del mismo paquete como
  diferentes paquetes con nombres ligeramente distintos.
  </p>
	<p>
  En lugar de aprender a tratar ciertas versiones como paquetes separados,
  los desarrolladores le enseñaron a Portage cómo manejar y administrar
  varias versiones del mismo paquete por medio del uso de <i>SLOTS</i>. Un
  ejemplo de esto sería considerar la conocida librería conocida como
  freetype. La rama 1.x de freetype es incompatible con la rama 2.x pero
  ambas versiones son requeridas para satisfacer las dependencias de
  varios paquetes. La mayoría de distribuciones y sistemas de ports
  tienden a contar con un paquete "freetype" para freetype 1.x y
  "freetype2" para 2.x. Consideramos que este mecanismo es un indicio de un
  sistema de administración de paquetes fundamentalmente erróneo. Lo que
  hicimos fue sencillamente asignar el número de <i>SLOT</i> 1 al primero
  y el número 2 al segundo. Con esta información Portage puede rastrear
  ambas versiones y actualizarlas si se producen nuevos lanzamientos en
  las respectivas ramas del software.
	</p>
</body>
</section>

<section>
<title>Perfiles</title>
<body>

	<p>
  Portage ofrece soporte para el concepto de <i>perfiles</i>. Un perfil
  contiene una lista de nombres de paquetes y versiones con una directiva
  y un juego de opciones de configuración por defecto para ser utilizadas
  por Portage. Un perfil le dice a Portage cuáles paquetes y qué versiones
  específicas de tales paquetes debe permitir, prohibir, o tratar según
  sea requerido. Los usuarios pueden intercambiar perfiles cambiando un
  solo enlace simbólico (<i>/etc/make.profile</i>). Esto puede parecer
  simple pero permite que Portage se constituya como el núcleo central de
  una distribución y sirva como un sistema de instalaciones de clase
  profesional.
  </p>
	<p>
  Todo el esfuerzo dedicado a la producción de la distribución Gentoo
  Linux ha resultado en una colección de archivos <i>ebuild</i> que
  Portage utiliza, y un perfil. Este perfil define cuáles paquetes son
  considerados paquetes "base" vitales para la operación del sistema. El
  perfil también permite a los desarrolladores bloquear y desbloquear
  paquetes y versiones específicas para desactivar temporalmente paquetes
  con fallos, etc. Los archivos <i>ebuild</i> simplemente le dicen a
  Portage cómo construir e instalar los paquetes que el perfil solicita o
  permite.
	</p>
	
</body>
</section>
</chapter>


<chapter>
<title>Configuración de Portage</title>

<section>
<title>Generalidades</title>
<body>
	<p>
  El siguiente capítulo cubre los diferentes aspectos de configuración de
  Portage, de importancia tanto para usuarios como desarrolladores.
  Portage es un sistema muy flexible y necesitará entender cómo
  configurarlo apropiadamente para estar a cargo de su sistema y
  optimizarlo a sus necesidades.
	</p>
	<p>
  Por favor note que el uso del término "usuarios" en este documento se
  refiere a personas con privilegios administrativos para usar Portage y
  modificar la configuración del sistema. Debe tener acceso como root para
  cambiar la configuración de Portage y para incorporar o remover
  paquetes.
	</p>
</body>
</section>

<section>
<title>Archivos de Configuración de Portage</title>
<body>
	<p>
  Casi todas las opciones de configuración que se discuten a continuación
  pueden encontrarse en /etc/make.conf y /etc/make.global. Es importante
  notar que cualquier parámetro definido en /etc/make.conf casi siempre
  reemplazará cualquier parámetro declarado en /etc/make.global. Todo lo
  que se encuentre en /etc/make.conf y /etc/make.global puede considerarse
  una configuración global para todo el sistema en lo que a Portage le
  concierne.
	</p>
	<p>
  Cuando se realicen revisiones para comprobar cuándo una opción ha sido
  definida, es recomendable chequear en /etc/make.conf primero y luego en
  /etc/make.globals. A menos que se diga lo contrario, las opciones
  definidas en /etc/make.conf reemplazarán el valor de las opciones
  definidas en /etc/make.globals.
  </p>
</body>
</section>

<section>
  <title>Parámetros USE</title>
  <body>
  <p>
  El sistema de parámetros USE es un mecanismo flexible para habilitar o
  deshabilitar varias características en tiempo de compilación de un
  paquete, en un nivel global y para paquetes individuales. Esto le
  permite a un administrador tener control sobre la manera en que los
  paquetes son construídos y de acuerdo a las características opcionales
  que pueden ser compiladas con esos paquetes. Por ejemplo, paquetes con
  soporte opcional para GNOME pueden desactivar este soporte en tiempo de
  compilación desactivando el parámetro USE <i>gnome</i>. Al activar el
  parámetro USE <i>gnome</i> se habilitaría el soporte para GNOME en esos
  mismos paquetes.
  </p>
	<p>
  El efecto de los parámetros USE en los paquetes depende del hecho de que
  el software mismo y el ebuild para el paquete soporten el parámetro USE
  como una característica adicional. Si el software no ofrece soporte para
  una característica opcional entonces su parámetro USE correspondiente
  por supuesto que no tendrá ningún efecto. Asimismo varias dependencias
  de paquetes no son consideradas opcionales por el software y por lo
  tanto los parámetros USE no tendrán efecto sobre esas dependencias
  obligatorias. Una lista de palabras clave USE utilizadas por un paquete
  particular puede encontrarse mirando las líneas <i>DEPEND</i> y
  <i>RDEPEND</i> en cualquier archivo ebuild.
	</p>

	<p>
  Una lista de los parámetros USE usados por Gentoo Linux puede
  encontrarse en <i>/usr/portage/profiles/use.desc</i>. Cada parámetro
  USE se encuentra listado uno por línea junto con una breve descripción
  de qué es lo que habilita el parámetro USE.
	</p>

	<p>
  Portage determina si un parámetro USE es habilitado o deshabilitado
  revisando hasta cuatro diferentes ubicaciones. Estos sitios modifican
  los parámetros USE en un modo que se "apila". Portage pasa por cada
  ubicación y recuerda si una ubicación anterior habilitaba o
  deshabilitaba un parámetro. Los cambios a los parámetros USE son
  acumulativos durante el paso de Portage por cada ubicación.
	</p>
	<p>
  Las ubicaciones revisadas en el cálculo de parámetros USE y el orden en
  el que Portage los revisa es definido por <i>USE_ORDER</i> en
  /etc/make.globals. Para deshabilitar una ubicación usted puede
  simplemente retirarla de <i>USE_ORDER</i>.
	</p>
	<p>
  A continuación se encuentra una descripción de cada ubicación listada en
  el orden definido por <i>USE_ORDER</i> en la configuración de Portage
  por defecto.
	</p>
	
	
	<p><b>Defaults</b></p>
	<p>
  Los perfiles de Portage pueden definir un conjunto de palabras clave USE
  por defecto. Esto es definido en el archivo make.defaults en cualquier
  perfil Portage. Ya que /etc/make.profile sirve como enlace hacia el
  perfil Portage en uso actualmente, /etc/make.profile/make.defaults es el
  conjunto de parámetros por defecto en uso. Es recomendable que usted no
  edite este archivo ya que futuros cambios del perfil pueden sobrescribir
  sus cambios.
  </p>
	
	<p><b>Auto</b></p>
	<p>
  Estos son definidos en el archivo use.defaults en el perfil Portage.
  (/etc/make.profile/use.defaults). Cada entrada consiste de un parámetro
  USE y un paquete correspondiente. Si el paquete listado para una palabra
  clave USE se encuentra instalado, entonces ese parámetro USE se
  considera habilitado. Por esto si, por ejemplo, instaló
  <i>x11-base/xfree</i> y no deshabilitó explícitamente el parámetro USE X
  en una ubicación posterior, entonces la palabra clave X es habilitada
  globalmente mientras ese paquete se encuentre instalado. Se recomienda
  que no edite este archivo ya que futuros cambios del perfil pueden
  sobrescribir sus cambios.
  </p>

	<p><b>Conf</b></p>
	<p>
  Si una opción de configuración <i>USE</i> es definida en /etc/make.conf,
  los parámetros USE definidos son incluídos. Si no hay un parámetro
  <i>USE</i> en make.conf entonces /etc/make.globals es revisado. Esta
  entrada podría lucir algo así:
  </p>

	<pre>
USE="slang readline gpm berkdb gdbm tcpd pam libwww ssl gb tk
     lm_sensors lvm ldap tex bonobo sdl gtk xfs evo pda ldap
     mmx mitshm perl python guile ruby postgres dvd 3dnow tcl
     lcms gif sdl vorbis ogg oss libg++ directfb decss snmp
     gnome X opengl mozilla pdflib gpg -nls gd xface jpilot
     -kde -qt -esd -motif -alsa oggvorbis"
	</pre>

	<p>
  Los parámetros USE son habilitados simplemente incluyendo sus nombres.
  Los parámetros USE son deshabilitados colocando un caracter <i>-</i>
  antes del nombre del parámetro. Por ejemplo, <i>gnome</i> activa la
  palabra clave GNOME mientras <i>-motif</i> desactiva la palabra clave
  motif.
  </p>
	<p>
  La variable <i>USE</i> en /etc/make.conf es el lugar recomendado para
  habilitar y deshabilitar palabras clave explícitamente. Este archivo no
  será sobrescrito automáticamente por Portage. Es recomendable que usted
  se encargue de activar y desactivar específicamente las palabras clave
  USE que no desea tener habilitadas o deshabilitadas en las dos
  ubicaciones previas.
	</p>
	
	<p><b>Env</b></p>
	<p>La configuración de palabras clave USE puede ser reemplazada
  manualmente usando un parámetro de entorno del shell.
	</p>

	<pre>
export USE="-gnome"
emerge net-im/gaim
	</pre>

	<p>
  Esto permite el uso de un cierto conjunto de parámetros USE para la
  incorporación de uno o más paquetes específicos. Cualquier invocación de
  emerge luego de definir USE en el entorno del shell tendrá efecto por
  tanto tiempo como emerge sea ejecutado desde ese shell y la variable USE
  aun se encuentre definida.
	</p>
	
	<note>Aunque Portage actualmente registra el conjunto de parámetros USE
  usados cuando se incorpora un paquete, estos parámetros USE no son
  persistentes. Si el paquete es reinstalado o actualizado en el futuro,
  se usarán las palabras clave USE en efecto en ese momento y no los
  parámetros USE definidos cuando fue incorporado por primera vez.</note>
	
  </body>
</section>

<section>
<title>Opciones del Compilador</title>
<body>
	<p>
  Las opciones de compilador usadas por Portage para compilar paquetes
  pueden definirse en /etc/make.conf editando <i>CHOST</i>, <i>CFLAGS</i>,
  y <i>CXXFLAGS</i>. La variable <i>CHOST</i> declara la plataforma en la
  que desea realizar las compilaciones y las variables <i>CFLAGS</i> y
  <i>CXXFLAGS</i> declaran los parámetros de compilador a ser usados
  cuando se realicen compilaciones en C y C++ respectivamente.
  </p>
	<p>
  Varios conjuntos de parámetros por defecto se ofrecen con comentarios
  sobre la plataforma a la que corresponden para ser usados. Estos valores
  por defecto son considerados estables y probados. Cambiarlos puede
  desatar errores de compilación y fallos tanto en el compilador como en
  el software que esté siendo compilado. Por favor sea cuidadoso si decide
  personalizar un parámetro por defecto ya que podría resultar con un
  sistema inutilizable.
  </p>
	<p>
  Aquellos usuarios con sistemas multiprocesador pueden resultar
  beneficiados modificando la opción <i>MAKEOPTS</i> que se encuentra en
  /etc/make.globals. Esta opción es pasada al comando <i>make</i> durante
  la compilación de paquetes para habilitar múltiples instancias de gcc.
	</p>
	
</body>
</section>

<section>
<title>Ubicaciones de Directorios</title>
<body>
	<p>
  Portage le permite configurar los directorios que usa para construir
  paquetes y para almacenar sus varios archivos. La mayoría de
  usuarios no tendrán necesidad de modificar estas ubicaciones. Las
  siguientes opciones pueden ser establecidas:
  </p>

	<ul>
	<li><i>PORTDIR</i> - Ubicación del árbol Portage</li>
	<li><i>DISTDIR</i> - Caché local de archivos descargados</li>
	<li><i>PKGDIR</i> - Ubicación de paquetes tbz2 generados localmente</li>
	<li><i>RPMDIR</i> - Ubicación de paquetes RPM generados localmente</li>
	<li><i>CURRENTFILE</i> - ???</li>
	<li><i>PORTAGE_TMPDIR</i> - Espacio temporal utilizado para la
  compilación de paquetes</li>
	<li><i>BUILD_PREFIX</i> - Relacionado a PORTAGE_TMPDIR</li>
	<li><i>PKG_TMPDIR</i> - Relacionado a PKG_TMPDIR</li>
	</ul>
</body>
</section>
	

<section>
<title>Protección de Archivos de Configuración</title>
<body>
	<p>
  Portage permite la protección de todos los archivos de configuración en
  directorios especificados. Portage no sobrescribirá archivos en los
  directorios protegidos. Si un paquete intenta instalar un archivo que
  exista previamente, será renombrado a algo como <i>._cfg0000_nombre</i>.
  Esto es hecho con el propósito de que los usuarios puedan posteriormente
  consultar el nuevo archivo y resolver manualmente las diferencias de
  los dos archivos entre sí.
  </p>
	<p>
  Los directorios protegidos pueden definirse mediante
  <i>CONFIG_PROTECT</i> ya sea en /etc/make.conf o en /etc/make.globals.
  Archivos y subdirectorios específicos pueden desprotegerse mediante
  <i>CONFIG_PROTECT_MASK</i>.
  </p>
	<p>
  El siguiente es un ejemplo y no debería ser copiado ciegamente:
	</p>

<pre>
CONFIG_PROTECT="/etc /usr/share/config /usr/kde/2/share/config"
CONFIG_PROTECT_MASK="/etc/gconf /etc/init.d /etc/pam.d"
</pre>

	<p>
  Los usuarios pueden solicitar más información sobre cómo funciona la
  Protección de Archivos de Configuración empleando el siguiente comando
  en un shell:
	</p>

<pre>
emerge --help config
</pre>

</body>
</section>

<section>
<title>CARACTERISTICAS</title>
<body>
	<p>
  Portage ofrece una cantidad de opciones orientadas a los desarrolladores y
  que gobiernan el modo en que Portage se comporta y realiza la limpieza
  durante los varios pasos en la incorporación de un paquete. Estas opciones
  deberían ser de interés únicamente para los desarrolladores y pueden
  causar problemas a los usuarios.
  </p>
	<p>
  Una lista de característica para habilitar puede ser definida por
  <i>FEATURES</i> ya sea en /etc/make.conf o en /etc/make.globals. La
  siguiente es una lista de opciones disponibles:
  </p>
	<p>
	<ul>
	<li><i>digest</i> : Crear automáticamente un <e>digest</e> para ebuilds nuevos.</li>
	<li><i>cvs</i> : Aplicar automáticamente los digests nuevos a cvs.</li>
	<li><i>sandbox</i> : Habilita la "zona de pruebas" para protección de
  prefijos de ruta.</li>
	<li><i>noclean</i> : Portage nunca hace limpieza al finalizar.</li>
	<li><i>noauto</i> : No ejecutar pasos previos de un ebuild
  automáticamente.</li>
	</ul>
	</p>
</body>
</section>

<section>
<title>Parámetros SYNC de Portage</title>
<body>
	<p>
  Portage posee la habilidad de actualizar el árbol Portage a través del
  uso de dos métodos distintos, rsync o CVS anónimo. Puede definir cuál
  método debería usar Portage mediante la variable <i>SYNC</i> en
  /etc/make.conf.
  </p>

	<p><b>RSYNC</b></p>

	<p>
  Se le recomienda a los usuarios que usen el método de rsync a menos de
  que planeen desarrollar sus propios archivos ebuild, ya que representa
  una carga mucho más suave a nuestros servidores a diferencia del uso de
  CVS anónimo. Por esta razón el método rsync es el valor por defecto en
  /etc/make.conf. Este método puede declararse de la siguiente manera:
  </p>

<pre>
SYNC="rsync://cvs.gentoo.org/gentoo-x86-portage"
</pre>

	<note>El método rsync sobrescribirá ciegamente cualquier modificación
  local que usted mantenga del árbol Portage. Si necesita preservar los
  cambios locales tendrá que usar el método de CVS anónimo.</note>

	<p><b>CVS Anónimo</b></p>

	<p>
  Portage puede sincronizar el árbol Portage local contra un servidor CVS
  anónimo especificado. Esto es útil para desarrolladores que no desean
  que sus cambios sean sobrescritos cuando Portage se sincroniza con el
  árbol oficial. Este método puede ser declarado de la siguiente forma:
  </p>

<pre>
SYNC="cvs://:pserver:anonymous@gentoo.org:/home/anoncvs"
</pre>

	<note>
  El CVS anónimo es lento y consumidor intensivo de recursos tanto del
  servidor como del cliente. Le pedimos que por favor use el método rsync
  si no está realizando cambios en su árbol Portage local.</note>

	<p>
  Antes de que pueda comenzar a usar el CVS anónimo para sincronizar su
  copia local del árbol con el árbol Portage oficial, usted debe
  descargar ("check out") una copia del árbol usando la herramienta cvs,
  de la siguiente forma:
  </p>
<pre>
# respaldar el directorio portage antiguo
cd /usr/portage
mv portage portage.old

# "checkout" del árbol
cvs -d :pserver:anonymous@gentoo.org:/home/anoncvs login
# pulse enter cuando se le pida la contraseña
cvs -d :pserver:anonymous@gentoo.org:/home/anoncvs co gentoo-x86

# mover el nuevo árbol al sitio adecuado
mv gentoo-x86 portage
</pre>

	<p><b>CVS de Desarrollador</b></p>

	<p>
  Los desarrolladores con acceso completo al árbol CVS pueden contar
  también con que <i>emerge</i> sincronize el árbol local contra un
  repositorio de CVS que ellos pueden accesar mediante RSH o SSH.
	</p>
	<p>
  Simplemente descargue un árbol CVS usando su cuenta, muévalo a
  /usr/portage, y utilice la siguiente opción <i>SYNC</i>:
	</p>
	
<pre>
SYNC="cvs://youraccount@cvs.gentoo.org:/home/cvsroot"
</pre>

</body>
</section>

<section>
<title>Mirrors</title>
<body>
	<p>
  El Proyecto Gentoo mantiene un mirror local con todos los archivos de los
  paquetes mencionados en los ebuilds del árbol Portage. Con frecuencia
  los archivos con las fuentes originales se mantienen en servidores
  lentos que con frecuencia pueden no estar disponibles. Asimismo los
  desarrolladores originales de los paquetes de software eliminarán
  versiones antiguas de un sitio ftp cuando se realicen nuevos
  lanzamientos. Para facilitar la vida de las personas que usan la
  distribución Gentoo (y reducir el uso de ancho de banda del sitio
  original que provee las fuentes) nosotros ofrecemos un mirror de estos
  archivos. Esto representa descargas más rápidas y confiables de estos
  archivos desde varios otros sitios mirror cercanos a su ubicación
  física.
  </p>
	<p>
  Cada vez que intenta incorporar un paquete, Portage revisará primero
  nuestro sitio mirror en busca de los archivos requeridos. Si el sitio
  mirror no tiene los archivos que se buscan entonces Portage intenta
  descargarlos del servidor HTTP o FTP especificado en el ebuild del
  paquete.
  </p>
	<p>
  El mirror que Portage utiliza puede ser especificado por
  <i>GENTOO_MIRRORS</i> en /etc/make.conf. La siguiente es la definición
  por defecto actual:
	</p>
<pre>
GENTOO_MIRRORS="http://www.ibiblio.org/gentoo"
</pre>
	<p>
  Para encontrar un mirror Gentoo más cercano a su ubicación por favor
  consulte el sitio web de Gentoo o pregunte en su amigable lista de correo
  local.
  </p>
</body>
</section>

<section>
<title>Programa de Descargas</title>
<body>
	<p>
  El programa que Portage utiliza para descargar archivos puede ser
  especificado mediante la declaración de las variables
  <i>FETCHCOMMAND</i> y	<i>RESUMECOMMAND</i>. Varios ejemplos son
  incluidos en /etc/make.conf y /etc/make.globals. Portage usa <i>wget</i>
  por defecto, el cual debe satisfacer las necesidades de la mayoría de
  usuarios.
  </p>

	<note>Portage pasa información sobre proxies HTTP y FTP al programa de
  descargas mediante el uso de las variables de entorno HTTP_PROXY y
  FTP_PROXY.</note>
</body>
</section>

<section>
<title>Proxies</title>
<body>
	<p>
  Portage puede ser instruído para usar proxies tanto HTTP como FTP cuando
  descargue archivos. Los proxies pueden ser especificados estableciendo
  las variables <i>HTTP_PROXY</i> y <i>FTP_PROXY</i> en /etc/make.conf
	o /etc/make.globals.  Si los protocolos HTTP y FTP son servidos desde el
  mismo proxy, puede establecer <i>PROXY</i> en cambio.</p>
	
	<p>El siguiente es un ejemplo:</p>

<pre>
HTTP_PROXY="http://192.168.1.1:8080"
FTP_PROXY="http://192.168.1.1:8080"

o

PROXY="http://192.168.1.1:8080"
</pre>

	<note>Estos parámetros de configuración de proxy sólo se aplican a
  descargas por HTTP y FTP y no son usados por rsync o CVS anónimo. Si
  usted se encuentra tras un firewall que requiere del uso de un proxy
  para conectarse con el mundo exterior, tendrá que actualizar su árbol
  Portage usando una imagen <e>tar</e> instantánea. [Por el momento,
  pregunte en la lista de correo gentoo-users si alguien ofrece alguna
  para su descarga en el momento]</note>

</body>
</section>

<section>
<title>Opciones Varias</title>
<body>
	<p>Las siguientes son opciones menores que pueden ser de utilidad para los
  usuarios:</p>

	<ul>
	<li><i>NOCOLOR</i> : Permite a los usuarios deshabilitar el uso de
  colores en la salida que produce la herramienta emerge.</li>
	<li><i>CLEAN_DELAY</i> : Portage difiere la desintalación de un paquete
  durante un número definido de segundos para darle a los usuarios tiempo
  de cancelar la acción. Esta variable define el número de segundos a
  esperar, y puede ser desactivada declarando su valor a  "0".</li>
	</ul>

</body>
</section>

</chapter>

<chapter>
<title>Administración de Paquetes</title>

<section>
<title>Actualizando el Árbol Portage</title>
<body>
	<p>
  El árbol Portage, ubicado en /usr/portage, contiene la librería de
  instrucciones de construcción para varios paquetes (llamadas
  <i>ebuilds</i>). El árbol también contiene información sobre el perfil
  usado y package.mask, vital para mantener su sistema al día.  Es
  importante preservar este árbol actualizado y sincronizado con el árbol
  Portage oficial con el propósito de tener las versiones más recientes de
  los paquetes y los arreglos a fallos de software disponibles para usted.
  Puede actualizar el árbol Portage ejecutando el siguiente comando:
	</p>
<pre>
emerge rsync
</pre>
	<p>
  El método que emerge utiliza para actualizar el árbol Portage local
  puede ser cambiado. Vea <i>Parámetros SYNC de Portage</i> en el capítulo
  <i>Configuración de Portage</i> para más información.
	</p>
</body>
</section>

<section>
<title>Incorporando Paquetes</title>
<body>
	<p>
  El acto de compilar e instalar un paquete por medio de Portage es
  llamado <i>incorporación</i>. Portage compila los paquetes y los instala
  temporalmente en un directorio "imagen" en donde registra los archivos a
  ser instalados. Estos archivos son luego movidos desde el directorio
  imagen e incorporados con el sistema de archivos / real.
	</p>
	<p>
  El comando <i>emerge</i> sirve como interfaz de usuario del sistema
  Portage. La instalación y eliminación de paquetes es controlada mediante
  el uso de este comando y sus varios argumentos en la línea de comandos.
	</p>
	<p>
  Para instalar la versión más reciente sin enmascarar de un paquete
  determinado, simplemente especifique el nombre del paquete de la forma
  siguiente:
	</p>
<pre>
emerge galeon
</pre>
	<p>
  El comando compilará e instalará cualquier dependencia requerida
  (tomando en cuenta cualquier parámetro USE) y luego compilará e
  instalará la versión más reciente sin enmascarar de galeon. Galeon
  también pudo ser referido utilizando su nombre completo con la
  categoría: <i>net-www/galeon</i> </p>
	<p>
  El comando <i>emerge</i> también acepta referencia a los mismos archivos
  ebuild. Esto permite a los usuarios incorporar versiones antiguas de un
  paquete dado, asi como incorporar paquetes basados en ebuilds de
  terceros. El siguiente es un ejemplo:
	</p>
<pre>
emerge /usr/portage/net-www/galeon/galeon-1.2.0-r3.ebuild
</pre>
	<p>
  Además de especificar el nombre del paquete o archivo ebuild a ser
  incorporado, <i>emerge</i> soporta varios argumentos de utilidad en la
  línea de comandos. De estos argumentos, <i>--pretend</i> es quizás el
  más útil. Cuando este argumento es usado, la acción solicitada no se
  ejecuta. En lugar de eso, Portage despliega una lista de paquetes que
  hubieran sido instalados o actualizados cuando se ejecutara tal acción.
  El siguiente es un ejemplo que lista lo que hubiese sido incorporado
  durante la instalación de la última versión del paquete kdevelop:
	</p>

<pre>
root@kodiak blocke # emerge --pretend kdevelop             

These are the packages that I would merge, in order.

Calculating dependencies ...done!
[ebuild  N   ] kde-base/kdelibs-2.2.2-r4 to /
[ebuild  N   ] dev-util/kdbg-1.2.2 to /
[ebuild   U  ] app-text/psutils-1.17 to /
[ebuild   U  ] app-text/a2ps-4.13b-r3 to /
[ebuild   U  ] app-text/jadetex-2.20 to /
[ebuild  N   ] app-text/sgmltools-lite-3.0.3-r2 to /
[ebuild  N   ] kde-base/kdoc-2.2.2-r1 to /
[ebuild  N   ] net-www/htdig-3.1.5-r2 to /
[ebuild  N   ] app-text/enscript-1.6.3-r1 to /
[ebuild  N   ] kde-base/kdebase-2.2.2-r2 to /
[ebuild  N   ] app-doc/qt-docs-2.3.1 to /
[ebuild  N   ] dev-util/kdevelop-2.0.2 to /
</pre>
	<p>
  En el listado anterior, los paquetes marcados con una <i>N</i> son
  paquetes que no han sido instalados aun y que serían instalados durante
  esta acción. Los paquetes marcados con una <i>U</i> indican que una
  versión antigua del paquete ya se encuentra instalada y la acción
  actualizaría el paquete.
	</p>
	<p>
  Los otros argumentos disponibles son:
	</p>
	<p>
	<i>--fetchonly</i> : Descarga los archivos requeridos para la
  compilación del paquete a ser instalado y cualquier dependencia que
  necesite ser atendida.
	</p>
	<p>
	<i>--emptytree</i> : Esta opción hace que Portage pretenda que ninguna
  de las dependencias de este paquete o de los paquetes en los que depende
  se encuentran instaladas. Esto es útil junto con la opción
  <i>--pretend</i> para desplegar un árbol completo de dependencias para
  cualquier paquete determinado. Todas las dependencias excepto glibc son
  mostradas.
  </p>
	<p><i>--nodeps</i> : Portage intenta incorporar sólo los paquetes
  especificados e ignora cualquier dependencia. Si usted no posee las
  dependencias correspondientes, la compilación puede fallar.
	</p>
	<p><i>--onlydeps</i> : Sólo las dependencias de un determinado paquete
  son incorporadas. El paquete especificado <u>no</u> es incorporado.
  </p>
	<p><i>--noreplace</i> : Se salta la incorporación de los paquetes
  especificados si ya se encuentran instalados.
	</p>
	<p><i>--usepkg</i> : En lugar de compilar los paquetes especificados,
  Portage intentará usar paquetes tbz2 pre-compilados desde una ubicación
  especificada. La ubicación es determinada por la variable de entorno del
  shell <i>PKGDIR</i>.
	</p>
	<p><i>--debug</i> : El entorno del ebuild es instruído para volverse
  mucho más informativo. Esto es útil para los desarrolladores que
  intentan rastrear errores de sintaxis en archivos ebuild basados en
  scripts de bash.
  </p>
	<p><i>--autoclean</i> : Obliga a <i>emerge</i> a limpiar los directorios
  temporales de construcción de paquetes específicos antes de empezar a
  construir un paquete. Portage hace esto por defecto, así que esta opción
  es útil solo para desarrolladores que hayan desactivado este
  comportamiento por defecto.
  </p>
	<p><i>--verbose</i> : Le indica a <i>emerge</i> que se ejecute en modo
  pormenorizado. En la actualidad, esto sólo produce que se desplieguen
  los errores de GNU info. Estos errores pueden ser ignorados con
  tranquilidad por los usuarios.
  </p>
</body>
</section>

<section>
<title>Removiendo Paquetes</title>
<body>
	<p>
  El acto de "remover" consiste en eliminar los archivos asociados con un
  paquete instalado del sistema de archivos. El software en el paquete es
  removido del sistema y no puede seguir siendo usado hasta que sea
  reincorporado.
	</p>
	<p>
  Los paquetes son removidos invocando el comando <i>emerge</i> y
  especificando el argumento <i>unmerge</i> seguido del nombre del paquete
  a ser removido. El siguiente ejemplo removería todas las versiones
  instaladas del paquete <i>ltrace</i>:
	</p>

<pre>
emerge unmerge ltrace

o

emerge unmerge dev-util/ltrace
</pre>
	<p>
  Portage también permite remover versiones específicas de paquetes. Los
  rangos son especificados usando <i>=</i> (versión exacta), <i>&lt;</i>
  (menor que), <i>&gt;</i> (mayor que), <i>&lt;=</i> (menor o igual que),
  y <i>&gt;=</i> (mayor o igual que). Lo siguiente removería todas las
  versiones de ltrace iguales a 0.3.15 y anteriores:
	</p>

<pre>
emerge unmerge \&lt;=dev-utils/ltrace-0.3.15
</pre>

	<p>
  Cuando se especifican rangos de paquetes es importante escapar los
  caracteres <i>&gt;</i> y <i>&lt;</i>, de modo que su shell no los
  interprete. También necesitará especificar la categoría en el nombre del
  paquete como se ha mostrado en el ejemplo. Para otro ejemplo sobre cómo
  funcionan las especificaciones de rango, vea el comando <i>emerge
  --help</i>.
	</p>

	<warn>Remover paquetes puede resultar peligroso. Si remueve cualquier
  paquete base, su sistema puede dejar de funcionar, y la eliminación de
  varias librerías puede causar que el software falle. <b>Portage no le
  advierte si está removiendo paquetes importantes o dependencias de otros
  paquetes.</b></warn>

	<p>
  Si el paquete a ser removido está instalado realmente, el programa
  emerge desplegará exactamente cuáles paquetes serán removidos y esperará
  un número determinado de segundos para darle tiempo al usuario de
  cancelar la acción. Durante este periodo de tiempo el usuario puede
  presionar Control-C para cancelar antes de que la desinstalación
  comienze.
	</p>
	<p>
  Una vez comienza la desinstalación, usted verá una larga lista de
  nombres de archivos que corresponden al paquete mostrado. Algunos de
  estos nombres de archivo tendrán un indicador desplegado a la izquierda
  del nombre. Los indicadores <i>!mtime</i>, <i>!empty</i> y <i>cfg</i>
  especifican algunas razones por las que ciertos archivos no fueron
  removidos cuando este paquete fue desinstalado. Los archivos listados
  sin ninguno de estos tres indicadores fueron removidos del sistema de
  archivos satisfactoriamente.
	</p>
	<p>
  El indicador <i>!mtime</i> significa que el archivo fue modificado
  después de que esta versión específica del paquete fue instalada. Esto
  quiere decir que alguien editó este archivo después de que el paquete
  fue instalado o que algún otro paquete sobrescribió el archivo en un
  momento posterior. Esto permite que los paquetes sean actualizados a
  versiones nuevas sin temor a que a la hora de remover la versión antigua
  instalada se remuevan archivos vitales.
	</p>
	<p>
  El indicador <i>!empty</i> se refiere a un directorio que Portage se
  rehúsa a remover debido a que el directorio no se encuentra vacío (con
  frecuencia múltiples paquetes declaran ser dueños de los mismos
  directorios). La protección de Archivos de Configuración entra en juego
  cuando ve el indicador <i>cfg</i>. Esto significa que un paquete
  instalado más recientemente reclama ser dueño de este archivo de
  configuración en particular y Portage se rehúsa a removerlo.
	</p>
	<warn>Los archivos se consideran ser propiedad del último paquete
  instalado. Esto depende del orden de instalación y es independiente del
  número de versión o revisión de los paquetes instalados. Removiendo el
  paquete más reciente instalado que reclama un archivo determinado
  siempre removerá el archivo incluso si paquetes más antiguos instalaron
  otras versiones del mismo archivo en el pasado (asumiendo que el usuario
  no modificó manualmente el archivo).
	</warn>
	
</body>
</section>

<section>
<title>Actualización del Sistema</title>
<body>
	<p>
  Portage soporta la habilidad de actualizar automáticamente los paquetes
  instalados con un comando sencillo. La opción de actualizar el sistema
  le permite a los usuarios actualizar los paquetes "base" a versiones
  recomendadas por los desarrolladores centrales de Gentoo puesto que son
  importantes para la operación de cualquier sistema Gentoo Linux. Una
  actualización de sistema no actualiza paquetes no-esenciales, sólo
  aquellos paquetes definidos en el perfil de Portage como esenciales para
  la operación y mantenimiento de un sistema.
	</p>
	<p>
  Para realizar una actualización de sistema emplee el siguiente comando:
	</p>
<pre>
emerge --update system
</pre>
	<p>
  Portage entonces compilará e instalará las actualizaciones dependiendo
  de las versiones y paquetes que tenga instalados y lo que es recomendado
  por el perfil de Portage actual. Los usuarios pueden usar el argumento
  <i>--pretend</i> con el ejemplo anterior para obtener una lista de lo
  que sería instalado y actualizado durante el curso de esta acción.
	</p>
	<note>Notará que en las instrucciones de instalación uno de los primeros
  pasos es ejecutar <i>emerge system</i> para instalar los paquetes base
  (o "centrales"). <i>emerge --update system</i> actualiza esos paquetes
  básicos a las últimas versiones recomendadas.
	</note>
</body>
</section>

<section>
<title>Actualización Global</title>
<body>
	<p>
  Portage también soporta la habilidad de actualizar automáticamente
  paquetes no-esenciales seleccionados con un comando sencillo. El sistema
  portage posee un grado de inteligencia incorporado para permitir la
  actualización segura de un sistema en donde múltiples versiones de
  paquetes en conflicto pueden encontrarse disponibles.
  </p>

	<p>
  La opción de actualización global de Portage revisa el perfil del
  sistema, la lista de paquetes bloqueados (<i>package.mask</i>), el
  perfil global y las dependencias (incluyendo rangos de versiones) de los
  paquetes listados en el perfil global cuando se encuentra determinando
  cuáles paquetes necesitan ser actualizados. Un paquete sólo es
  actualizado si una versión nueva existe y el paquete se encuentra
  listado en el perfil global o es una dependencia de un paquete en el
  perfil global. Además, el paquete o versión específica del paquete no
  debe encontrarse bloqueado por el perfil del sistema o en
  <i>package.mask</i>.
  </p>

	<p>
  Cuando considera cuáles paquetes actualizar, Portage intenta actualizar
  todos los paquetes mencionados en el perfil global a la versión no
  bloqueada más reciente. Portage también considera las dependencias de
  cada paquete mencionado en el perfil global e intentará actualizar cada
  dependencia a una versión más reciente si hay alguna disponible,
  coincide con los rangos de versión especificados, y no se encuentra
  bloqueada por el perfil del sistema o <i>package.mask</i>. También toma
  en consideración la variable <i>SLOTS</i> como se mencionó en un
  capítulo anterior.
	</p>

	<p>
  Aquellos usuarios familiarizados con otras distribuciones y métodos de
  empaquetamiento diferentes a Portage pueden sentirse confundidos
  pensando por qué Portage no simplemente hace una actualización ciega de
  los paquetes basado solamente en números de versiones (como solía hacer
  antes de Gentoo 1.0). Muchos de los paquetes incluídos en el Árbol
  Portage de Gentoo tienen varias versiones disponibles. Una versión más
  antigua o reciente de un paquete puede resultar incompatible con el
  software que depende de él. Actualizar ciegamente librerías y
  herramientas sin tomar en cuenta las necesidades de otros paquetes puede
  resultar rápidamente en varios problemas severos. Para evitar esto,
  Portage intenta tener cuidado cuando hace actualizaciones y toma en
  cuenta las necesidades de todos los paquetes basado en las necesidades
  declaradas en los ebuilds individuales de los paquetes.
	</p>
	
	<p>
  El corazón de las actualizaciones globales de Portage es el perfil
  global. A diferencia del perfil del sistema que usualmente es definido
  por desarrolladores y nunca tocado por los usuarios, el perfil de
  actualizaciones globales es generado indirectamente con el tiempo por
  las acciones ejecutadas por el usuario. El perfil global opera bastante
  como una "lista de favoritos". Los paquetes que son instalados
  manualmente por el usuario mediante el uso del comando <i>emerge</i> son
  registrados en el archivo <i>world</i> ubicado en
  <i>/var/cache/edb/world</i>. Portage asume eso ya que usted se tomó el
  trabajo de decirle que instalara el paquete, así que usted debe tener
  cierto interés en mantenerlo actualizado.
	</p>
	<p>
  El archivo <i>world</i> consiste de un nombre de paquete con categoría
  por línea y puede lucir algo así:
	</p>
<pre>
net-im/gaim
net-www/skipstone
net-www/galeon
app-editors/vim
app-text/ispell
net-mail/evolution
dev-util/ltrace
sys-apps/xfsprogs
=net-www/mozilla-0.9.8-r3
sys-apps/attr
sys-apps/dmapi
sys-kernel/linux-sources
sys-apps/acl
app-office/gnucash
app-cdr/xcdroast
</pre>
	<p>
  Casi todas las entradas en este archivo de ejemplo fueron agregadas
  automáticamente por Portage cuando el usuario incorporó manualmente los
  paquetes específicos. Estos paquetes serán actualizados si una versión
  más reciente se encuentra disponible.
	</p>
	
	<note>Para ahorrar tiempo y asegurarse de que sus paquetes favoritos se
  mentangan al día usted puede editar manualmente el archivo <i>world</i>
  y agregar entrada para estos paquetes. Los usuarios que se están
  actualizando desde versiones anteriores de Portage puede que necesiten
  popular este archivo. Las instalaciones recientes de Gentoo y Portage
  deben recibir la creación de un perfil global considerablemente populado
  durante la instalación.</note>
	
	<p>
  Una entrada interesante para notar es la entrada para el paquete mozilla
  (<i>=net-www/mozilla-0.9.8-r3</i>). Esta entrada fue agregada
  manualmente por un usuario para "fijar" una versión específica. Los
  rangos de los paquetes (como se discutieron en la sección <i>Removiendo
  Paquetes</i> de este manual) pueden ser usados para forzar a Portage a
  que considere únicamente ciertos rangos de versiones cuando actualice
  sus paquetes. Esta entrada en efecto "fija" a Portage a considerar
  mozilla-0.9.8-r3 como la única versión disponible y por lo tanto nunca
  intentará actualizar el paquete durante una actualización global por
  ningún motivo.
	</p>
	
	<p>
  Las actualizaciones globales se realizan usando el siguiente comando:
  </p>
<pre>
emerge --update world
</pre>
	<p>
  Portage intentará entonces actualizar todos los paquetes mencionados en
  el archivo <i>world</i> y actualizará cualquier dependencia si es
  necesario. Las dependencias son actualizadas a la versión más reciente
  disponible que satisfaga las necesidades del paquete que está siendo
  actualizado. Los paquetes que no se encuentran listados en <i>world</i>
  y no son dependencias de los paquetes mencionados no son actualizados.
	</p>

	<warn>Portage no sobrescribirá archivos en directorios protegidos por la
  Protección de Archivos de Configuración. Usted deberá resolver
  manualmente las diferencias entre sus archivos de configuración actuales
  y las nuevas versiones que Portage guardó para usted. Si no actualiza
  sus archivos de configuración puede que algún software deje de
  funcionar. Por favor vea <i>Protección de Archivos de Configuración</i>
  en el capítulo <i>Configuración de Portage</i> o use el comando
  <i>emerge --help config</i> para más información.</warn> 

	<p>
  Para ver una lista de lo que sería actualizado o instalado durante una
  actualización global, puede usar el argumento <i>--pretend</i> como se ha
  mencionado en secciones previas de este capítulo.
	</p>

	<note>Una actualización global también realiza una actualización de
  sistema automáticamente. Los paquetes base no pueden ser fijados usando
  el método del archivo <i>world</i> ya que el perfil de Portage actual
  siempre lo reemplazará.</note>

	<p>
  Un interesante efecto secundario del modo en que funcionan las
  actualizaciones globales puede ser aprovechado por los usuarios que
  desean recompilar todo el software instalado en un sistema. Ya que la
  actualización global intentará actualizar todos los paquetes mencionados
  en el archivo <i>world</i> y sus dependencias, el uso del argumento
  <i>--emptytree</i> es una forma de obligar la recompilación de estos
  paquetes y cada dependencia con excepción de glibc. Esto puede ser útil
  para los usuarios que desean modificar sus opciones de compilador o
  parámetros USE, y desean que estos cambios sean usados por todo el
  software que usan sin tener que reincorporar manualmente cada paquete.
  Simplemente hay que popular el archivo <i>world</i> con todas sus
  aplicaciones usadas comúnmente y ejecutar el siguiente comando: 
	</p>
<pre>
emerge --update world --emptytree
</pre>
	<p>
  Puede agregar el argumento <i>--pretend</i> a este comando para obtener
  una lista de los paquetes que serían recompilados como resultado de esta
  acción.
	</p>
	
</body>
</section>

<section>
<title>Limpieza del Sistema</title>
<body>
	<p>
  Portage soporta la habilidad de instalar múltiples versiones de la misma
  versión, una sobre otra. Existen varios paquetes en el Árbol Portage de
  Gentoo que hacen uso de esta funcionalidad (para lograr compatibilidad
  con versiones anteriores, ya que algunas aplicaciones antiguas pueden
  resultar incompatibles con una versión más reciente de otro paquete).
	</p>
	<p>
  Sin embargo, en la mayoría de casos cuando una versión más reciente de
  un paquete es instalada, la mayor parte del paquete antiguo es
  sobrescrito y todo lo que permanece son algunos pocos archivos de
  documentación y otros archivos de poca importancia para la operación de
  un sistema. Con el tiempo, estas "sobras" pueden crecer y desperdiciar
  valioso espacio de disco.
	</p>
	<p>
  Para combatir esto, Portage provee una forma sencilla de remover los
  restos de versiones anteriores de un sistema de usuario. Esta
  funcionalidad es conocida como la opción <i>clean</i> de emerge y puede
  ser puesta en acción mediante el siguiente comando:
	</p>
<pre>
emerge clean
</pre>
	<p>
  <i>emerge</i> desplegará entonces una lista de revisiones y versiones de
  paquetes a ser removidas, las versiones que permenecerán, y le dará al
  usuario tiempo para cancelar la acción presionando Control-C. En un
  sistema típico, ocurrirá un caudal de actividad mientras se despliega una
  lista de los archivos que han sido eliminados o preservados.
	</p>

	<p>
  A menos que se especifique otra cosa, Portage asume que la acción de
  limpieza debe ser realizada para <i>world</i> (todos los paquetes
  instalados). Es posible que reduzca el alcance de la acción de limpieza
  usando opciones como <i>world</i>, <i>system</i>, una lista de nombres
  de paquetes, y rangos de versiones de paquetes como se mencionó en la
  sección de desinstalación de este capítulo.
	</p>

	<p>
  Cuando considera qué versiones de paquetes deben ser removidas, el
  sistema Portage considera los varios perfiles, las necesidades de otros
  paquetes instalados, y los SLOT de los paquetes. Asumiendo que las
  dependencias se encuentran definidas correctamente para todos los
  paquetes, la acción de limpieza removerá de forma segura paquetes
  antiguos del sistema y no debería remover ninguna funcionalidad o
  prevenir que el sistema funcione.
	</p>	
</body>
</section>

<section>
<title>Expurgación de Paquetes</title>
<body>
	<p>
  Portage también suporta la acción <i>prune</i> para paquetes. La acción
  de expurgación es una forma insegura de limpieza. Remueve todas las
  versiones de todos los paquetes con excepción de la última versión
  instalada. No reliza ninguno de los chequeos que <i>clean</i> realiza y
  puede remover dependencias esenciales de su sistema. Los usuarios de
  esta opción pueden dañar sus sistemas fácilmente y su uso no es
  recomendado excepto en circunstancias específicas especializadas.
	</p>

	<p>
  La acción <i>prune</i> acepta la misma lista de opciones que la acción
  <i>clean</i> y puede ser usado de la siguiente forma:
	</p>
<pre>
emerge prune
</pre>
</body>
</section>


<section>
<title>Búsquedas en el Árbol Portage</title>
<body>
	<p>
  Los Árboles Portage, como aquel que forma el corazón mismo de la
  distribución Gentoo Linux, pueden ser bastante grandes. El comando
  <i>emerge</i> provee una característica de búsqueda que acepta una
  cadena de búsqueda en la forma de una expresión regular contenida entre
  comillas. Las expresiones regulares son bestias muy complicadas, así que
  es recomendable que encuentre un buen libro sobre el tema si está
  interesado en usarlas extensivamente.
	</p>
	<p>
  La mayoría de búsquedas simples pueden realizarse sin tener que saber
  cómo contruir expresiones regulares. El siguiente es un ejemplo de una
  búsqueda sencilla para un paquete llamado "gcc" o que tenga "gcc" como
  parte del nombre:
	</p>
<pre>
emerge search gcc
</pre>
	<p>
  Para cada coincidencia, la acción de búsqueda lista el nombre del
  paquete, la versión disponible más reciente, la versión instalada más
  reciente, su página web, y una descripción del software que contiene el
  paquete.
	</p>
</body>
</section>

<section>
<title>Obtención de Ayuda</title>
<body>
	<p>
  Es posible consultar más información sobre las varias opciones y
  acciones que soporta <i>emerge</i>, mediante el uso del siguiente
  comando:
  </p>
<pre>
emerge --help
</pre>
</body>
</section>
	
		

<section>
<title>Utilidades de Interés</title>
<body>
	<p>
  Varias utilidades se han creado por parte de usuarios de Gentoo para
  hacer la vida más fácil. Estas utilidades se encuentran disponibles en
  el paquete <i>app-admin/gentoolkit</i> en el árbol Portage de Gentoo.
	</p>
	<p>
	<ul>
	<li><i>etc-update</i> : script de shell que usa vim para asistir en la
  incorporación de archivos /etc (puede resultar peligroso si se usa
  incorrectamente)</li>
	<li><i>qpkg</i> : herramienta para la consulta de la base de datos de
  paquetes</li>
	<li><i>epm</i> : otra herramienta de consulta de la base de datos de
  paquetes con una sintaxis familiar a RPM</li>
	</ul>
	</p>
</body>
</section>


</chapter>

</guide>

