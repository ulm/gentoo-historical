<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/security/shb-kernel.xml,v 1.4 2013/12/17 11:47:48 nimiux Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>2</version>
<date>2013-12-17</date>

<section>
<title>Eliminar funcionalidad</title>
<body>

<p>
La regla básica cuando se configura el núcleo es eliminar todo lo que
no se necesite. Esto no creará solo un núcleo pequeño sino también
eliminará las vulnerabilidades que puedan encontrarse en controladores
y otras características.
</p>

<p>
Considere también desactivar el soporte para módulos cargables. Aunque
incluso es posible añadir &quot;root kits&quot; sin esta
característica activada, se hace más difícil para los atacantes
normales instalar &quot;root kits&quot; sin poder hacerlo a través de
módulos del núcleo.
</p>
</body>
</section>

<section>
<title>El sistema de ficheros proc</title>
<body>

<p>
Muchos de los parámetros del núcleo pueden cambiarse a través del
sistema de ficheros <path>/proc</path> o usando <c>sysctl</c>.
</p>

<p>
Para cambiar dinámicamente parámetros y variables del núcleo al vuelo
necesita tener definido <c>CONFIG_SYSCTL</c> en el núcleo. Lo que está
activado por defecto en un núcleo 2.4 estándar.
</p>

<pre caption="Desactivar IP forwarding">
# <i>/bin/echo "0" &gt; /proc/sys/net/ipv4/ip_forward</i>
</pre>

<p>
Asegúrese que IP forwarding está desactivado. Solo lo queremos en un
equipo que tenga más de una conexión de red (&quot;multi-homed
host&quot;). Le advertimos que active o desactive este parámetro antes
que cualquier otro, puesto que también activa/desactiva otros
parámetros.
</p>

<pre caption="Descartar los paquetes de ping">
# <i>/bin/echo &quot;1&quot; > /proc/sys/net/ipv4/icmp_echo_ignore_all</i>
</pre>

<p>
Esto hará que el núcleo simplemente ignore todos los mensajes de ping
(también conocidos como mensajes ICMP tipo 0). La razón para hacer
esto está en que el paquete IP que lleva el mensaje ICMP puede
contener información distinta de la que debería. Los administradores
usan ping como una herramienta de diagnóstico y frecuentemente se
quejan si se deshabilita, pero no hay ninguna razón para que alguien
desde fuera pueda mandar un ping. Sin embargo, a veces puede ser
práctico que desde dentro sí se puedan hacer pings, entonces lo que
puede hacer es deshabilitar el ICMP tipo 0 en el cortafuegos
(permitiendo continuar utilizando esta herramienta a los
administradores locales).
</p>

<pre caption="Ignorar pings de broadcast">
# <i>/bin/echo &quot;1&quot; > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts</i>
</pre>

<p>
Esto deshabilita la respuesta a &quot;broadcasts&quot; ICMP y
prevendrá de ataques &quot;Smurf&quot;. El ataque Smurf consiste en
enviar un ICMP tipo 0 (ping) a la dirección de broadcast de una
red. Por regla general el atacante usará una dirección de origen
falseada (&quot;spoofed&quot;). Todos los ordenadores de la red
responderán al mensaje de ping y de ese modo inundarán al host cuya
dirección se ha falsificado.
</p>

<pre caption="Deshabilitar paquetes enrutados desde el origen">
# <i>/bin/echo &quot;0&quot; > /proc/sys/net/ipv4/conf/all/accept_source_route</i>
</pre>

<p>
No acepte paquetes enrutados desde el origen. Los atacantes pueden
usar enrutamiento desde el origen para generar tráfico que pretende
ser originado dentro de su red, pero que es actualmente enrutando
hacia el origen por el camino por el que ha venido, de esta forma los
atacantes pueden comprometer su red. El enrutamiento desde el origen
es raramente utilizado para fines legítimos, por ello es seguro
desactivarlo.
</p>

<pre caption="Deshabilitar la aceptación de redirección">
# <i>/bin/echo &quot;0&quot; > /proc/sys/net/ipv4/conf/all/accept_redirects</i>
</pre>

<p>
No acepte paquetes de redirección ICMP. La redirección ICMP puede ser
usada para alterar sus tablas de enrutamiento, posiblemente con una
una mala finalidad.
</p>

<pre caption="Protección contra mensajes de error falsos">
# <i>/bin/echo &quot;1&quot; > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses</i>
</pre>

<p>
Habilite la protección contra respuestas de mensajes de error falsos.
</p>

<pre caption="Activar el filtrado inverso de paths">
# <i>for i in /proc/sys/net/ipv4/conf/*; do
         /bin/echo &quot;1&quot; > $i/rp_filter
done</i>
</pre>

<p>
Active el filtrado inverso para trayectorias. Esto ayuda a estar
seguros que los paquetes usan una dirección de origen legítima
rechazando automáticamente los paquetes entrantes si la entrada
correspondiente a la dirección origen en la tabla de enrutamiento no
coincide con la interfaz de red por la que llegan. Lo cual tiene
ventajas de seguridad porque previene el falseamiento de IP (&quot;IP
spoofing&quot;). Necesitamos activarlo en cada
<path>net/ipv4/conf/*</path>, puesto que en caso contrario la
validación del origen no es totalmente funcional.
</p>

<warn>
No obstante, activar el filtrado inverso de rutas puede ser un
problema si se utiliza el enrutamiento asimétrico (los paquetes que
se envía a un host toman un camino diferente que los paquetes que
se envían a ese host) o si opera en un host que no enruta y que
tiene varias direcciones IP en distintas interfaces.
</warn>

<pre caption="Registre todos los paquetes falsificados (spoofed), enrutados en el origen y paquetes de redirección">
# <i>/bin/echo &quot;1&quot; > /proc/sys/net/ipv4/conf/all/log_martians</i>
</pre>

<p>
Registre todos los paquetes falsificados (spoofed), enrutados en el
origen y paquetes de redirección.
</p>

<p>
Todos estos ajustes se perderán cuando la máquina se reinicie. Le
sugiero que los añada a <path>/etc/sysctl.conf</path> el cual es
automáticamente inicializado por el guión de inicio
<path>/etc/init.d/bootmisc</path>.
</p>

<p>
La sintaxis para <path>/etc/sysctl.conf</path> es bastante
simple. Elimine el <path>/proc/sys/</path> de los paths anteriormente
mencionados y sustituya <path>/</path> por <path>.</path>:
</p>

<pre caption="Trasladar sysctl.conf">
  <comment>(Uso manual de echo):</comment>
/bin/echo &quot;0&quot; > /proc/sys/net/ipv4/ip_forward

<comment>(Automático en sysctl.conf:)</comment>
net.ipv4.ip_forward = 0
</pre>
</body>
</section>

<section>
<title>Grsecurity</title>
<body>

<p>
El parche de <uri link="http://grsecurity.net">Grsecurity</uri> es un
estándar en las fuentes del núcleo <c>sys-kernel/hardened-sources</c>
pero está deshabilitado por defecto. Configure su núcleo como lo hace
normalmente y luego configure las opciones de Grsecurity. Una explicación
en profundidad de las opciones disponibles en Grsecurity (versión 1.9)
está disponible en la página del proyecto
<uri link="/proj/en/hardened">Gentoo Hardened</uri>.
</p>

<p>
Las recientes <c>hardened-sources</c> proporcionan la versión 2.* de
Grsecurity. Para más información de este parche de Grsecurity
mejorado, por favor consulte la documentación disponible en
<uri link="http://www.grsecurity.net/">Grsecurity home page</uri>.
</p>
</body>
</section>

<section>
<title>Otros parches para el núcleo</title>
<body>

<ul>
<li><uri link="http://www.openwall.com">El proyecto OpenWall</uri></li>
<li>
  <uri link="http://www.lids.org">Sistema de detección de intrusos en Linux</uri>
</li>
<li>
  <uri link="http://www.rsbac.org">Conjunto de reglas de control de acceso</uri>
</li>
<li>
  <uri link="http://www.nsa.gov/selinux">Mejoras de seguridad en el núcleo de la NSA</uri> (agencia de seguridad estadounidense)
</li>
<li><uri link="http://sourceforge.net/projects/wolk/">Wolk</uri></li>
</ul>

<p>
Y probablemente haya bastantes más.
</p>
</body>
</section>
</sections>
