<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/es/security/shb-chroot.xml,v 1.1 2005/06/09 13:43:38 chiguire Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.0</version>
<date>2005-05-31</date>

<section>
<title>Chrooting</title>
<body>

<p>
Hacer chroot (<c>enjaular</c>) a un servicio es la manera de limitar el entorno de un servicio (o usuario) para que acceda sólo a lo que debería y para que no escale acceso (o consiga información) que le permita un acceso de
root. Ejecutando el servicio como un usuario distinto de <c>root</c> (<c>nobody</c>, <c>apache</c>, <c>named</c>) un atacante sólo podrá acceder a los ficheros con permisos para dicho usuario. Lo que significa que un atacante no conseguirá el acceso de root incluso si los servicios tuvieran algún defecto de seguridad.
</p>

<p>
Algunos servicios como <c>pure-ftpd</c> y <c>bind</c> tienen
características para hacer chroot, pero otros no. Si el servicio lo
soporta, úselo, si no usted tiene que saber como crearse el suyo
propio. Veamos como crear un chroot. Para una comprensión elemental de
como trabaja un chroot, vamos a probarlo con <c>bash</c> (la manera
fácil de aprenderlo)
</p>

<p>
Cree el directorio <path>/chroot</path> (<c>mkdir chroot</c>). Y
averigüe con qué librerías dinámicas está compilado <c>bash</c> (este
paso no es necesario si está compilado con <c>-static</c>).
</p>

<p>
El siguiente comando creará una lista con las librerías usadas por
bash.
</p>

<pre caption="Obtener la lista de librerías usadas">
# <i>ldd /bin/bash</i>
  libncurses.so.5 => /lib/libncurses.so.5 (0x4001b000)
  libdl.so.2 => /lib/libdl.so.2 (0x40060000)
  libc.so.6 => /lib/libc.so.6 (0x40063000)
  /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)
</pre>

<p>
Ahora creemos el entorno para bash.
</p>

<pre caption="Crear el entorno chroot para bash">
# <i>mkdir /chroot/bash</i>
# <i>mkdir /chroot/bash/bin</i>
# <i>mkdir /chroot/bash/lib</i>
</pre>

<p>
Luego copie los ficheros usados por <c>bash</c> (<path>/lib</path>) al
directorio <path>lib</path> del chroot y copie también el comando bash
al directorio <path>bin</path> del chroot. Esto creará exactamente el
mismo entorno, pero con menos funcionalidad. Después de copiarlo
pruébelo:<c>chroot /chroot/bash /bin/bash</c>. Si obtiene un prompt
indicado <path>/</path> ¡funciona! En caso contrario le informará
adecuadamente de qué fichero falta. Algunas librerías compartidas
dependen unas de otras.
</p>

<p>
Se dará cuenta que dentro del chroot sólo funciona <c>echo</c>. Esto
ocurre porque no tenemos otros comandos dentro del entorno chroot que
no sean bash y <c>echo</c> que es una funcionalidad incorporada.
</p>

<p>
Esta es básicamente la manera en la que usted podría crear un servicio
ejecutado con chroot. La única diferencia es que los servicios a veces
depende de servicios y ficheros de configuración en
<path>/etc</path>. Simplemente cópielos (los dispositivos pueden
copiarse con <c>cp -a</c>) en el entorno de chroot, edite el guión de
inicio init para que use chroot antes de ejecutarlo. Puede resultar
difícil encontrar qué dispositivos y ficheros de configuración
necesita un servicio. Para esto es práctico el comando
<c>strace</c>. Inicie el servicio en bash con <c>/usr/bin/strace</c> y
busque los open, read, stat y puede que connect. Lo que le dará una
pista de qué ficheros copiar. Pero en muchos casos basta copiar el
fichero de contraseñas (passwd) (edite la copia y borre los usuarios
que no tienen nada que ver con el servicio), <path>/dev/zero</path>,
<path>/dev/log</path> y <path>/dev/random</path>.
</p>

</body>
</section>
<section>
<title>User Mode Linux</title>
<body>

<p>
Otra forma de crear un entorno más seguro es ejecutar una máquina
virtual. Una máquina virtual, como su nombre implica, es un proceso
que se ejecuta en el nivel más alto de su sistema operativo real,
proporcionando un entorno de hardware y sistema operativo que parece
ser el propio de una única máquina. Su beneficio de seguridad está en
que si es comprometido el servidor ejecutado en la máquina virtual,
sólo se ve afectado este servidor virtual no la instalación padre.
</p>

<p>
Para más información acerca de como instalar User Mode Linux consulte <uri link="http://www.gentoo.org/doc/en/uml.xml">User Mode Linux Guide</uri>.
</p>

</body>
</section>

</sections>
