<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/en/gentoo-x86-tipsntricks.xml">
<title>Gentoo/x86 Installation Tips &amp; Tricks</title>
<author title="Author">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>

<abstract>
The Gentoo installation allows for very flexible approaches to the various
installation methods. As it is almost impossible to insert every single tip or
trick in the installation instructions this document tries to deal with all
submitted tips and tricks for reference purposes.
</abstract>

<license/>

<version>1.2</version>
<date>April 11, 2004</date>

<chapter>
<title>Introduction</title>
<section>
<title>Preliminary</title>
<body>

<p>
This document contains various tips and tricks for the Gentoo/x86 installation.
Most of them are discussed in a dense way - they are meant as an addendum to the
installation instructions and not as a replacement.
</p>

</body>
</section>
<section>
<title>Contents</title>
<body>

<p>
<b>Advanced Installations</b>
</p>

<ul>
  <li><uri link="#software-raid">Software RAID</uri></li>
  <li><uri link="#ata-raid-2.4">ATA RAID using 2.4 kernels</uri></li>
</ul>

<p>
<b>Simplifying the Installation</b>
</p>

<ul>
  <li><uri link="#leave_terminal">Leaving the Terminal</uri></li>
</ul>

<p>
<b>Fixing Errors/Issues</b>
</p>

<ul>
  <li><uri link="#checking-disks">Extensive Testing of your Disks</uri></li>
</ul>

</body>
</section>
</chapter>
<chapter>
<title>Advanced Installations</title>
<section id="software-raid">
<title>Software RAID</title>
<body>

<note>
If you are not known to software raid, please read the <uri
link="http://tldp.org/HOWTO/Software-RAID-HOWTO.html">Software-RAID-HOWTO</uri>.
</note>

<p>
Once you are booted from the LiveCD, load the appropriate RAID modules. For
instance, if you plan on using RAID-1:
</p>

<pre caption="Loading the RAID-1 module">
# <i>modprobe raid1</i>
</pre>

<p>
When you partition your disks, make sure that your partitions use <c>fd</c>
(Linux raid autodetect) as Partition Type instead of <c>83</c> (Linux native).
You can alter the partition type using the <c>t</c> command in <c>fdisk</c>.
</p>

<p>
After partitioning, create the <path>/etc/raidtab</path> file (yes, indeed, on
the LiveCD environment) and insert the necessary commands for your RAID setup.
For instance, to have your boot, swap and root partition mirrored (RAID-1)
covering <path>/dev/sda</path> and <path>/dev/sdb</path>, you can use:
</p>

<pre caption="/etc/raidtab for RAID-1 setup">
raiddev /dev/md0
  raid-level 1
  nr-raid-disks 2
  chunk-size 32
  persistent-superblock 1
  device /dev/sda1
    raid-disk 0
  device /dev/sdb1
    raid-disk 1

raiddev /dev/md1
  raid-level 1
  nr-raid-disks 2
  chunk-size 32
  persistent-superblock 1
  device /dev/sda2
    raid-disk 0
  device /dev/sdb2
    raid-disk 1

raiddev /dev/md2
  raid-level 1
  nr-raid-disks 2
  chunk-size 32
  persistent-superblock 1
  device /dev/sda3
    raid-disk 0
  device /dev/sdb3
    raid-disk 1
</pre>

<p>
Now create the necessary RAID devices for each RAID device you listed in
<path>/etc/raidtab</path>:
</p>

<pre caption="Creating RAID devices">
# <i>mkraid /dev/md0</i>
# <i>mkraid /dev/md1</i>
# <i>mkraid /dev/md2</i>
</pre>

<p>
The Linux Software RAID driver will start creating the metadevices. You can see
its progress in <path>/proc/mdstat</path>. Wait until the metadevices are
completely finished before proceeding.
</p>

<p>
From now onwards, use <path>/dev/md0</path> for the boot partition,
<path>/dev/md1</path> for the swap partition and <path>/dev/md2</path> for the
root partition.
</p>

<p>
After mounting <path>/dev/md2</path> on <path>/mnt/gentoo</path>, don't forget
to copy over <path>/etc/raidtab</path> to <path>/mnt/gentoo/etc</path>.
</p>

<p>
When you're configuring your kernel, make sure you have the appropriate RAID
support <e>in</e> your kernel and not as module. 
</p>

<p>
When installing extra tools, emerge <c>raidtools</c> as well. Note that this
isn't available on all LiveCDs so you might not be able to install Gentoo on a
Software RAID when using a networkless installation!
</p>

<p>
When configuring your bootloader, make sure it gets installed in the MBR of
<e>both</e> disks if you use mirroring. 
</p>

</body>
</section>
<section id="ata-raid-2.4">
<title>ATA RAID using 2.4 kernels</title>
<body>

<p>
Make sure you boot your LiveCD using the <c>doataraid</c> option. Once booted,
check the contents of <path>/dev/ataraid</path>. It should contain various
<path>disc*</path> directories for each harddisk available in the ATA RAID. An
entire disk is displayed as <path>disc</path> while partitions are
<path>part*</path>.
</p>

<p>
Write down the various <path>/dev/ataraid/disc*/*</path> device files that you
use to install Gentoo on. You will need to substitute the <path>/dev/hda</path>
examples in the installation with this path.
</p>

<p>
Before chrooting, bind-mount the <path>/dev</path> structure in the new
environment:
</p>

<pre caption="Bind-mounting /dev">
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
</pre>

<p>
When configuring your kernel, make sure you enable support for your ATA RAID
chipset and options. For instance, a popular ATA RAID system is a <e>Promise
FastTrack built-in RAID</e> in which case you definitely need <c>Promise
FastTrack Options</c> built in into your kernel.
</p>

<p>
When configuring GRUB, you first have to create a GRUB bootdisk. This is not as
hard as you think. First install GRUB as you would, but when you come to the
part where GRUB is getting installed in the MBR, follow the following
instructions:
</p>

<pre caption="Creating a GRUB bootdisk">
# <i>cd /boot/grub</i>
# <i>dd if=stage1 of=/dev/fd0 bs=512 count=1</i>
# <i>dd if=stage2 of=/dev/fd0 bs=512 seek=1</i>
</pre>

<p>
You still need to write your <path>grub.conf</path> file. This is no different
from the installation instructions, just make sure that your <c>root=</c> points
to the ATA RAID device. 
</p>

<p>
After finishing the installation, boot with your GRUB bootdisk. You will be
greeted by a GRUB prompt. Now configure GRUB to boot from the ATA RAID device:
</p>

<pre caption="Installing GRUB on the ATA RAID">
grub&gt; root (hd0,x)
grub&gt; setup (hd0)
grub&gt; quit
</pre>

<p>
Now reboot (with the GRUB bootfloppy removed).
</p>

<p>
LILO users can safely use the instructions mentioned in the installation
instructions.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Simplifying the Installation</title>
<section id="leave_terminal">
<title>Leaving your Terminal</title>
<body>

<p>
Many people want to leave their system when it's compiling. In certain cases
this is rather difficult as the installation is done in a public environment
where you cannot trust everyone. If this is the case, you want to be able to
perform the compilation in the background and log out from all terminals.
</p>

<p>
There are several possible solutions for this. The first one is to use
<c>screen</c>. After booting the LiveCD, set your root password and start a
screen session:
</p>

<note>
Not all LiveCDs provide screen. If this is the case, you will have to use one of
the other methods described in this section.
</note>

<pre caption="Starting a screen session">
# <i>screen -S gentoo</i>
</pre>

<p>
Once inside the screen session you can perform the entire installation. When you
want to leave your terminal, press <c>Ctrl-a, d</c> (that is, control and a at
the same time, then followed by a d) to <e>detach</e> your screen session. You
can now safely log out of your system.
</p>

<p>
To regain access to your terminal, log in as root again and <e>attach</e> to 
the running screen session:
</p>

<pre caption="Attaching to a screen session">
# <i>screen -x gentoo</i>
</pre>

<p>
If you can't use screen, there is still a way to leave your terminal. Follow the
installation instructions, but when you come to the point where a long-term
compilation would be started (for instance the <c>./scripts/bootstrap.sh</c>
step), use <c>nohup</c> which allows for a process to continue even when you log
out. Don't forget the trailing "&amp;", otherwise the process won't be placed in
the background! Remember where you are (the <c>pwd</c> command will show you
that) as you will need to know this later on.
</p>

<pre caption="Using nohup">
# <i>pwd</i>
/usr/portage
# <i>nohup ./scripts/bootstrap.sh &amp;</i>
</pre>

<p>
Now exit the chrooted environment (<c>exit</c>) and the LiveCD session. Your
compilation will continue in the background. 
</p>

<p>
When you want to check the compilation, log in as root (on the LiveCD) and
chroot back into your environment and go to the directory where you left off:
</p>

<pre caption="Chrooting back">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update &amp;&amp; source /etc/profile</i>
# <i>cd /usr/portage</i>
</pre>

<p>
Now use the <c>less</c> command on the <path>nohup.out</path> file that is
situated inside that directory. The compilation will append its output to that
file, so if you want to follow the compilation progress, run <c>less
nohup.out</c> and press <c>F</c> to follow the changes. When the compilation is
finished, you can continue with the next step of the installation instructions.
</p>

<p>
If you ever get tired of following the changes, press <c>Ctrl-C</c> followed by
a <c>q</c>. This won't stop the compilation process, only the <c>less</c>
process.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Fixing Errors/Issues</title>
<section id="checking-disks">
<title>Extensive Testing of your Disks</title>
<body>

<p>
If you think your disk needs to be thoroughly checked for consistency (bad
sectors and such), you can use the <c>-c</c> option while placing the ext2 or
ext3 filesystem on it (using <c>mke2fs</c>). This will perform a read-test and 
will mark all bad blocks as such. If you are really paranoid, use <c>-c -c</c> 
to perform an extensive read/write test.
</p>

<pre caption="Checking for disk consistency">
# <i>mke2fs -j -c /dev/hda3</i>
</pre>

</body>
</section>
</chapter>

</guide>
