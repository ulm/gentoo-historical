<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/xorg-config.xml,v 1.39 2010/05/23 21:31:50 nightmorph Exp $ -->

<guide>
<title>The X Server Configuration HOWTO</title>

<author title="Author">
  <mail link="swift"/>
</author>
<author title="Author">
  <mail link="nightmorph"/>
</author>

<abstract>
Xorg is the X Window server which allows users to have a graphical
environment at their fingertips. This HOWTO explains what Xorg is, how to
install it and what the various configuration options are.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.29</version>
<date>2010-05-23</date>

<chapter>
<title>What is the X Window Server?</title>
<section>
<title>Graphical vs Command-Line</title>
<body>

<p>
The average user may be frightened at the thought of having to type in commands.
Why wouldn't he be able to point and click his way through the freedom provided
by Gentoo (and Linux in general)? Well, *big smile*, of course you are able to
do this. :-) Linux offers a wide variety of flashy user interfaces and
environments which you can install on top of your existing installation.
</p>

<p>
This is one of the biggest surprises new users come across: a graphical user
interface is nothing more than an application which runs on your system. It is
<e>not</e> part of the Linux kernel or any other internals of the system. It is
a powerful tool that fully enables the graphical abilities of your workstation.
</p>

<p>
As standards are important, a standard for drawing and moving windows on a
screen, interacting with the user through mouse, keyboard and other basic, yet
important aspects has been created and named the <e>X Window System</e>,
commonly abbreviated as <e>X11</e> or just <e>X</e>. It is used on Unix, Linux
and Unix-like operating systems throughout the world.
</p>

<p>
The application that provides Linux users with the ability to run graphical
user interfaces and that uses the X11 standard is Xorg-X11, a fork of
the XFree86 project. XFree86 has decided to use a license that might not be
compatible with the GPL license; the use of Xorg is therefore recommended.
The official Portage tree does not provide an XFree86 package anymore.
</p>

</body>
</section>
<section>
<title>The X.org Project</title>
<body>

<p>
The <uri link="http://www.x.org">X.org</uri> project created and
maintains a freely redistributable, open-source implementation of the X11
system. It is an open source X11-based desktop infrastructure.
</p>

<p>
Xorg provides an interface between your hardware and the graphical software
you want to run. Besides that, Xorg is also fully network-aware, meaning you
are able to run an application on one system while viewing it on a different
one.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installing Xorg</title>
<section>
<title>Kernel configuration</title>
<body>

<p>
By default, Xorg uses <c>evdev</c>, a generic input driver. You'll need to
activate support for <c>evdev</c> by making a change to your kernel
configuration. (Read the
<uri link="/doc/en/kernel-config.xml">Kernel Configuration Guide</uri> if you
don't know how to setup your kernel.)
</p>

<pre caption="Enabling evdev in the kernel">
Device Drivers ---&gt;
  Input device support ---&gt;
  &lt;*&gt;  Event interface
</pre>

</body>
</section>
<section>
<title>make.conf configuration</title>
<body>

<p>
Before you install Xorg, you have to configure two important variables in the
<path>/etc/make.conf</path> file.
</p>

<p>
The first variable is <c>VIDEO_CARDS</c>. This is used to set the video drivers
that you intend to use and is usually based on the kind and brand of card you
have. The most common settings are <c>nvidia</c> for Nvidia cards or
<c>fglrx</c> for ATI Radeon cards. Those are the proprietary drivers from Nvidia
and ATI respectively. If you would like to use the open source nVidia driver,
use <c>nv</c> rather than <c>nvidia</c> in the variable, but bear in mind that
using this driver means no 3D acceleration at all. The free <c>radeon</c> and
<c>radeonhd</c> drivers are available for ATI cards, and are more or less the
equal of the proprietary <c>fglrx</c> driver. The <c>intel</c> driver may be
used for desktops or laptops with common Intel integrated graphics chipsets.
<c>VIDEO_CARDS</c> may contain more than one driver, in this case list of them
should be separated with spaces.
</p>

<p>
The second variable is <c>INPUT_DEVICES</c> and is used to determine which
drivers are to be built for input devices. In most cases setting it to
<c>evdev</c> should work just fine. If you use alternative input
devices, such as a Synaptics touchpad for a laptop, be sure to add it to
<c>INPUT_DEVICES</c>.
</p>

<p>
Now you should decide which drivers you will use and add necessary settings to
the <path>/etc/make.conf</path> file:
</p>

<pre caption="Sample make.conf entries">
<comment>(For mouse, keyboard, and Synaptics touchpad support)</comment>
INPUT_DEVICES="evdev synaptics"
<comment>(For Nvidia cards)</comment>
VIDEO_CARDS="nvidia"
<comment>(OR, for ATI Radeon cards)</comment>
VIDEO_CARDS="radeon"
</pre>

<note>
More instructions on how to configure nVidia and ATI cards can be found in the
<uri link="/doc/en/nvidia-guide.xml">Gentoo Linux nVidia Guide</uri> and in the
<uri link="/doc/en/ati-faq.xml">Gentoo Linux ATI FAQ</uri>. If you don't know
which drivers you should choose, refer to these guides for more information.
</note>

<p>
If the suggested settings don't work for you, you should run <c>emerge -pv
xorg-server</c>, check all the options available and choose those which apply to
your system. This example is for a system with a keyboard, mouse, Synaptics
touchpad, and a Radeon video card.
</p>

<pre caption="Displaying all the driver options available">
# <i>emerge -pv xorg-server</i>

These are the packages that would be merged, in order:

Calculating dependencies... done!
[ebuild   R   ] x11-base/xorg-server-1.6.3.901-r2  USE="hal nptl xorg -debug
-dmx -ipv6 -kdrive -minimal -sdl -tslib" 0 kB
[ebuild   R   ]  x11-base/xorg-drivers-1.6  INPUT_DEVICES="evdev synaptics
-acecad -aiptek -citron -elographics -fpit -hyperpen -joystick -keyboard -mouse
-mutouch -penmount -tslib -virtualbox -vmmouse -void -wacom"
VIDEO_CARDS="radeon -apm -ark -ast -chips -cirrus -dummy -epson -fbdev -fglrx
(-geode) -glint -i128 (-i740) (-impact) (-imstt) -intel -mach64 -mga -neomagic
(-newport) -nv -nvidia -r128 -radeonhd -rendition -s3 -s3virge -savage
-siliconmotion -sis -sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb)
(-sunleo) (-suntcx) -tdfx -tga -trident -tseng -v4l (-vermilion) -vesa -via
-virtualbox -vmware (-voodoo) (-xgi)" 0 kB
</pre>

<p>
After setting all the necessary variables you can install the Xorg package.
</p>

<pre caption="Installing Xorg">
# <i>emerge xorg-server</i>
</pre>

<note>
You could install the <c>xorg-x11</c> metapackage instead of the more
lightweight <c>xorg-server</c>. Functionally, <c>xorg-x11</c> and
<c>xorg-server</c> are the same. However, <c>xorg-x11</c> brings in many more
packages that you probably don't need, such as a huge assortment of fonts in
many different languages. They're not necessary for a working desktop.
</note>

<p>
When the installation is finished, you will need to re-initialise some
environment variables before you continue. Just run <c>env-update</c> followed
by <c>source /etc/profile</c> and you're all set.
</p>

<pre caption="Re-initialising the environment variables">
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>

<p>
Now it's time to start the Hardware Abstraction Layer (HAL) daemon and set it to
automatically start each time you boot. This is necessary to get a working X
environment, otherwise your input devices won't be detected and you'll probably
just get a blank screen. We'll cover HAL more in the <uri
link="#using_hal">next section</uri>.
</p>

<pre caption="Starting HAL">
# <i>/etc/init.d/hald start</i>
# <i>rc-update add hald default</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Configuring Xorg</title>
<section id="using_hal">
<title>Using HAL</title>
<body>

<p>
Recent X server versions are designed to work out-of-the-box, with no need to
manually edit Xorg's configuration files.
</p>

<p>
You should first try <uri link="#using_startx">starting X</uri> without creating
<path>/etc/X11/xorg.conf</path>.
</p>

<p>
If Xorg won't start (if there's something wrong with the screen, or with your
keyboard/mouse), then you can try fixing problems by using the right
configuration files.
</p>

<p>
By default, Xorg uses HAL (Hardware Abstraction Layer) to detect and configure
devices such as keyboards and mice.
</p>

<p>
HAL comes with many premade device rules, also called policies. These policy
files are available in <path>/usr/share/hal/fdi/policy/</path>. Just find a few
that suit your needs most closely and copy them to
<path>/etc/hal/fdi/policy/</path>.
</p>

<impo>
Do not edit the files in <path>/usr/share/hal/fdi/</path>! Just copy the ones
you need, and edit them once they're placed in the proper <path>/etc</path>
location.
</impo>

<p>
For example, to get a basic working keyboard/mouse combination, you could copy
the following files to <path>/etc/hal/fdi/policy/</path>:
</p>

<pre caption="Using HAL policy files">
# <i>cp /usr/share/hal/fdi/policy/10osvendor/10-input-policy.fdi /etc/hal/fdi/policy</i>
# <i>cp /usr/share/hal/fdi/policy/10osvendor/10-x11-input.fdi /etc/hal/fdi/policy</i>
</pre>

<p>
There are several other HAL policies in <path>/usr/share/hal/fdi/</path> that
may interest you, such as laptop configurations, storage device handling, power
management, and more. Just copy any of the policies to
<path>/etc/hal/fdi/policy/</path>.
</p>

<impo>
Remember, <e>every</e> time you finish making changes to HAL policy files, you
need to restart the HAL daemon by running <c>/etc/init.d/hald restart</c>.
</impo>

<p>
You can edit the policy files in <path>/etc/hal/fdi/policy</path> to your
liking. You may want to make a few tweaks or to expose additional
functionality. Let's go through an example of tweaking a HAL policy.
</p>

<p>
One very convenient trick is to kill the X server entirely by pressing
Ctrl-Alt-Backspace. This is useful when your X server is malfunctioning, frozen,
etc. It's not as extreme as rebooting the whole machine with Ctrl-Alt-Del.
</p>

<p>
Recent X server versions disabled this key combination by default.  However, you
can reenable it by copying <path>10-x11-input.fdi</path> to
<path>/etc/hal/fdi/policy</path> and editing it. You'll need to add just one
line to the appropriate section, as shown below:
</p>

<pre caption="Editing 10-x11-input.fdi">
<comment>(Open the file in your preferred editor)</comment>
# <i>nano -w /etc/hal/fdi/policy/10-x11-input.fdi</i>
<comment>(Find the "input.keys" section)</comment>
&lt;match key="info.capabilities" contains="input.keys"&gt;
<comment>(Add the "terminate" merge string as shown)</comment>
&lt;match key="info.capabilities" contains="input.keys"&gt;
      &lt;merge key="input.x11_driver" type="string"&gt;keyboard&lt;/merge&gt;
      <i>&lt;merge key="input.xkb.options" type="string"&gt;terminate:ctrl_alt_bksp&lt;/merge&gt;</i>
      &lt;match key="/org/freedesktop/Hal/devices/computer:system.kernel.name"
             string="Linux"&gt;
        &lt;merge key="input.x11_driver" type="string"&gt;evdev&lt;merge&gt;
      &lt;/match&gt;
    &lt;/match&gt;
</pre>

<p>
Once you're done, run <c>/etc/init.d/hald restart</c> so that HAL picks up your
changes.
</p>

<p>
There, now you have a handy way of killing an unresponsive X server. This is
useful when programs have frozen your display entirely, or when configuring and
tweaking your Xorg environment. Be careful when killing your desktop with this
key combination -- most programs really don't like it when you end them this
way, and you may lose some (or all) of what you were working on.
</p>

<p>
Hopefully just working with the HAL policy files results in a working X desktop.
If Xorg still won't start, or there's some other problem, then you'll need to
manually configure <path>xorg.conf</path> as shown in the next section.
</p>

</body>
</section>
<section>
<title>The xorg.conf file</title>
<body>

<note>
Configuring <path>xorg.conf</path> should be seen as a "last resort" option. It
really desirable to run without one if possible, and to do all your
configuration via HAL policy files. If you still can't get a working
configuration, then read on.
</note>

<p>
The configuration file of Xorg is called <path>xorg.conf</path> and it resides
in <path>/etc/X11</path>. Xorg provides an example configuration as
<path>/etc/X11/xorg.conf.example</path> which you can use to create your own
configuration. It is heavily commented, but if you are in need of more
documentation regarding the syntax, don't hesitate to read the man page:
</p>

<pre caption="Reading the xorg.conf man page">
$ <i>man 5 xorg.conf</i>
</pre>

</body>
</section>
<section>
<title>Automatic Generation of xorg.conf</title>
<body>

<p>
Xorg itself is able to guess most parameters for you. In most cases, you
will only have to change some lines to get the resolution you want up and
running. If you are interested in more in-depth tweaking, be sure to check the
resources at the end of this chapter. But first, let us generate a (hopefully
working) Xorg configuration file.
</p>

<pre caption="Generating an xorg.conf file">
# <i>Xorg -configure</i>
</pre>

<p>
Be sure to read the last lines printed on your screen when Xorg has finished
probing your hardware. If it tells you it failed at some point, you're forced to
manually write an <path>xorg.conf</path> file. Assuming that it didn't fail, it
will have told you that it has written <path>/root/xorg.conf.new</path> ready
for you to test. So let's test. :)
</p>

<pre caption="Testing the xorg.conf.new file">
# <i>X -retro -config /root/xorg.conf.new</i>
</pre>

<p>
If all goes well, you should see a simple black and white pattern. Verify if
your mouse works correctly and if the resolution is good. You might not be able
to deduce the exact resolution, but you should be able to see if it's too low.
You can exit any time by pressing Ctrl-Alt-Backspace.
</p>

</body>
</section>
<section>
<title>Copying over xorg.conf</title>
<body>

<p>
Let us copy over the <path>xorg.conf.new</path> to
<path>/etc/X11/xorg.conf</path> now, so we won't have to continuously run
<c>X -config</c> -- typing just <c>startx</c> is easier. :)
</p>

<pre caption="Copying over xorg.conf">
# <i>cp /root/xorg.conf.new /etc/X11/xorg.conf</i>
</pre>

</body>
</section>
<section id="using_startx">
<title>Using startx</title>
<body>

<p>
Now try <c>startx</c> to start up your X server. <c>startx</c> is a script
that executes an <e>X session</e>, that is, it starts the X servers and some
graphical applications on top of it. It decides which applications to run
using the following logic:
</p>

<ul>
  <li>
    If a file named <path>.xinitrc</path> exists in the home directory, it will
    execute the commands listed there.
  </li>
  <li>
    Otherwise, it will read the value of the XSESSION variable and will execute
    one of the sessions available in <path>/etc/X11/Sessions/</path>
    accordingly. You can set the value of XSESSION in
    <path>/etc/env.d/90xsession</path> to make it a default for all the users on
    the system. For example, as root, run <c>echo XSESSION="Xfce4" >
    /etc/env.d/90xsession</c>. This will create the <path>90xsession</path> file
    and set the default X session to Xfce4.
  </li>
</ul>

<pre caption="Starting X">
$ <i>startx</i>
</pre>

<p>
You can kill the X session by using the Ctrl-Alt-Backspace combination. This
will, however, make X exit disgracefully -- something that you might not always
want.
</p>

<p>
If you haven't yet installed a window manager, all you'll see is a black screen.
Since this can also be a sign that something's wrong, you may want to emerge
<c>twm</c> and <c>xterm</c> <e>only to test X</e>.
</p>

<p>
Once those two programs are installed, run <c>startx</c> again. A few xterm
windows should appear, making it easier to verify that X is working correctly.
Once you're satisfied with the results, run <c>emerge --unmerge twm xterm</c> as
root to get rid of the testing packages. You won't need them once you've setup a
proper desktop environment.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Tweaking X settings</title>
<section>
<title>Setting your Resolution</title>
<body>

<p>
If you feel that the screen resolution is wrong, you will need to check two
sections in your <path>xorg.conf</path> configuration. First of all, you have
the <e>Screen</e> section which lists the resolutions, if any that your X server
will run at. By default, this section might not list any resolutions at all. If
this is the case, Xorg will estimate the resolutions based on the information in
the second section, <e>Monitor</e>.
</p>

<p>
What happens is that Xorg checks the settings of <c>HorizSync</c> and
<c>VertRefresh</c> in the <e>Monitor</e> section to compute valid resolutions.
For now, leave these settings as-is. Only when the changes to the <e>Screen</e>
section (which we will describe in a minute) don't work, then you will need to
look up the specs for your monitor and fill in the correct values.
</p>

<warn>
Do <b>not</b> "just" change the values of these two monitor related variables
without consulting the technical specifications of your monitor. Setting
incorrect values lead to out-of-sync errors at best and smoked up screens at
worst.
</warn>

<p>
Now let us change the resolutions. In the next example from
<path>/etc/X11/xorg.conf</path> we add the <c>Modes</c> lines and the
<c>DefaultDepth</c> so that our X server starts with 24 bits at 1440x900 by
default. Don't mind the given strings -- they are examples and will most likely
differ from the settings on your system.
</p>

<pre caption="Changing the Screen section in /etc/X11/xorg.conf">
Section "Screen"
  Identifier  "Default Screen"
  Device    "RadeonHD 4550"
  Monitor   "Generic Monitor"
  <i>DefaultDepth  24</i>
  <comment># Skipping some text to improve readability</comment>
  SubSection "Display"
    Depth   24
    <i>Modes   "1440x900"</i>
  EndSubSection
EndSection
</pre>

<p>
Run X (<c>startx</c>) to discover it uses the resolution you want.
</p>

</body>
</section>
<section>
<title>Configuring your keyboard</title>
<body>

<p>
To setup X to use an international keyboard, you can copy the content of
<path>/usr/share/doc/hal-*/*/use-estonian-layout.fdi.bz2</path> to
<path>/etc/hal/fdi/policy/10-xinput-configuration.fdi</path>:
</p>

<pre caption="Using an existing config file">
# <i>bzcat /usr/share/doc/hal-*/*/use-estonian-layout.fdi.bz2 > /etc/hal/fdi/policy/10-xinput-configuration.fdi</i>
</pre>

<p>
Now you can just edit <path>10-xinput-configuration.fdi</path> and change the
Estonian keyboard layout (<c>ee</c>) to your own, such as Great Britain
(<b>gb</b>) or Polish (<b>pl</b>).
</p>

<p>
When you're finished, run <c>/etc/init.d/hald restart</c> as root to make sure
that HAL picks up your configuration file changes.
</p>

</body>
</section>
<section>
<title>Finishing up</title>
<body>

<p>
Run <c>startx</c> and be happy about the result. Congratulations, you now
(hopefully) have a working Xorg on your system. The next step is to install a
useful window manager (or even a desktop environment) such as KDE or GNOME, but
that's not part of this guide.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Resources</title>
<section>
<title>Creating and Tweaking xorg.conf</title>
<body>

<p>
First of all, <c>man xorg.conf</c> and <c>man evdev</c> provide quick yet
complete references about the syntax used by these configuration files. Be sure
to have them open on a terminal near you when you edit your configuration
files!
</p>

<p>
Also, be sure to look at <path>/etc/X11/xorg.conf.example</path>; you may wish
to copy this and use it as a foundation for writing your own
<path>xorg.conf</path>.
</p>

<p>
You may find the X.org <uri link="http://www.x.org/wiki/FAQ">FAQ</uri> provided
on their website, in addition to their other documentation.
</p>

<p>
There are also many online resources on editing <path>xorg.conf</path>. We only
list few of them here, be sure to <uri link="http://www.google.com">Google</uri>
for more.
</p>

</body>
</section>
<section>
<title>Other resources</title>
<body>

<p>
More information about installing and configuring various graphical desktop
environments and applications can be found in the <uri
link="/doc/en/?catid=desktop">Gentoo Desktop Documentation Resources</uri>
section of our documentation.
</p>

<p>
If you're upgrading to xorg-server-1.6 from an earlier version, then be sure to
read the <uri
link="/proj/en/desktop/x/x11/xorg-server-1.6-upgrade-guide.xml">migration
guide</uri>.
</p>

</body>
</section>
</chapter>
</guide>
