<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/macos-guide.xml,v 1.7 2005/06/01 20:46:03 swift Exp $ -->

<guide link="/doc/en/macos-guide.xml">

<title>Gentoo For Mac OS X Installation and Usage Guide</title>

<author title="Author, Editor">
  <mail link="alexander@gentoo.org">Alexander Plank</mail>
</author>
<author title="Author, Editor">
  <mail link="gongloo@gentoo.org">Hasan Khalil</mail>
</author>
<author title="Author">
  <mail link="pat2man@comcast.net">Patrick Tescher</mail>
</author>
<author title="Author">
  <mail link="clement@varaldi.org">Cl√©ment Varaldi</mail>
</author>
<author title="Editor">
    <mail link="robin.perkins@internode.on.net">Robin Perkins</mail>
</author>

<abstract>
This guide walks the average user through the installation and usage of portage
on Mac OS X.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->
<license/>

<version>1.5</version>
<date>2005-06-01</date>

<chapter>
<title>Installation</title>
<section>
<title>System Requirements</title>
<body>

<p>
In order to install Gentoo for Mac OS X, you must have the following software
already installed:
</p>

<ul>
  <li>Mac OS 10.2 or later</li>
  <li>XCode Tools 1.2 or later</li>
</ul>

<note>
The XCode Tools can be downloaded at no cost from the <uri
link="https://connect.apple.com">Apple Developer Connection</uri> member site
(free membership required).
</note>

<impo>
We <e>strongly</e> recommend that XCode be installed with the X11 SDK.
</impo>

</body>
</section>
<section>
<title>The Installer</title>
<body>

<p>
First, you'll need to download the <uri
link="http://www.metadistribution.org/macos">Gentoo for Mac OS X installer disk
image (dmg)</uri>. When you mount the dmg image (by double clicking on it), its
contents should be displayed on the screen in a finder window; the installer
icon should be visible at this point. Run the installer, and follow the
directions on screen.
</p>

</body>
</section>
<section>
<title>Terminal.app</title>
<body>

<p>
After the installer has finished and exited, you will need to open Terminal.app
(or another terminal emulator). If you already have Terminal.app open, you'll
need to open a new shell/window for the software installed by the installer to 
be recognized by the terminal session.
</p>

<warn>
Using any shell besides bash is currenly unsupported and most likely won't
work.  You should change your default shell in Terminal.app by clicking on
Terminal-&gt;Preferences (in the menu bar), chosing the "Execute this command"
option, and entering <c>/bin/bash</c>.
</warn>

</body>
</section>
<section>
<title>Updating Portage</title>
<body>

<p>
It's crucial to keep portage's package information database (commonly called
the 'portage tree') up-to-date; it lives in <path>/usr/portage</path>. The
portage tree holds information about every package that portage knows how to
install, including directions that portage follows to install the package for
you. It is important that we update this information to the latest available
tree before we continue so that we know we have all the latest information on
the latest packages.
</p>

<p>
Once in a console, you will need to keep root privileges in order to continue.
If you are a computer administrator, this is as easy as using sudo.
</p>

<pre caption="Getting root privileges">
$ <i>sudo su</i>
Password:
</pre>

<p>
To make sure that you have the latest fixes and package information available,
you'll now need to synchronize your portage tree with the latest from the gentoo
servers.
</p>

<pre caption="Updating your portage tree">
# <i>emerge --sync</i>
</pre>

</body>
</section>
<section>
<title>Configuration</title>
<body>

<p>
We now need to tell portage a little about your version of OSX.  Portage uses
the files in <path>/etc/make.profile</path> to determine which packages are
already installed by Mac OS X, which packages are masked for your version of
Mac OS X, and default configuration options. You should use one of the provided
profiles, and simply provide the system with an alias from
<path>/etc/make.profile</path> to a pre-written profile. For most people, doing
this is as simple as running the bootstrap configuration script.
</p>

<pre caption="Running the bootstrap configuration script">
# <i>sh /usr/portage/scripts/bootstrap-macos.sh</i>
</pre>

<p>
Should you need to link your profile manually, you can enter the command from
one of the code blocks below, choosing the one appropriate for your system.
</p>

<pre caption="Aliasing your default profile for Jaguar/Panther">
# <i>ln -s /usr/portage/profiles/default-darwin/macos/10.3 /etc/make.profile</i>
</pre>

<pre caption="Aliasing your default profile for Tiger">
# <i>ln -s /usr/portage/profiles/default-darwin/macos/10.4 /etc/make.profile</i>
</pre>

<note>
Advanced users can also venture to further configure portage by specifying
configuration options in <path>/etc/make.conf</path>. This is not recommended
for the average user.
</note>

</body>
</section>
<section>
<title>Installing System Packages</title>
<body>

<p>
Next, you need to 'emerge' the system. This installs other packages that
portage needs to operate correctly.
</p>

<pre caption="Emerging system">
# <i>emerge system</i>
</pre>

<p>
Congratulations! Your new Gentoo for Mac OS X installation should be ready to
go.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installing Software Using Portage</title>

<section>
<title>Install Software</title>
<body>

<p>
To install a package in portage, all that needs to be done is to 'emerge' it.
Portage will take care of all the dependencies of the package. Installing a
package is easy once you know what the name of the package is.
</p>

<pre caption="Emerging Lynx">
# <i>emerge lynx</i>
</pre>

</body>
</section>
<section>
<title>Masked Packages</title>
<body>

<p>
You should be able to emerge any combination of packages that have already been
tested and updated to work with macos. Currently, only a very small number of
packages are not masked. If an ebuild hasn't had the ppc-macos keyword added to it,
you will get a message similar to the following.
</p>

<pre caption="Example of a masked package">
# <i>emerge -p cowsay</i>

 These are the packages that I would merge, in order:
 
 Calculating dependencies
 !! all ebuilds that could satisfy "cowsay" have been masked.
 !! possible candidates are:
 - games-misc/cowsay-3.03 (masked by: missing keyword)
</pre>

</body>
</section>
<section>
<title>Testing Packages</title>
<body>

<p>
You might want to test a package yourself to see if it works, regardless of it's
masked state. While we do not suggest that the average user do this, people that
wish to help the developers in testing packages are free to unmask and test
packages on their system. This is done by adding the 'ppc-macos' keyword to an
package information file, or 'ebuild'. To add the ppc-macos keyword to an ebuild,
you use the 'ekeyword' command, which is part of the the gentoolkit-dev package.
</p>

<pre caption="Installing gentoolkit-dev">
# <i>emerge gentoolkit-dev</i>
</pre>

<pre caption="Keywording a package">
# <i>cd /usr/portage/games-misc/cowsay</i>
# <i>ekeyword ppc-macos cowsay-3.03.ebuild</i>
# <i>ebuild cowsay-3.03.ebuild digest</i>
</pre>

<p>
If the package successfully compiles and runs properly, please submit a bug to
<uri link="http://bugs.gentoo.org">Gentoo Bugzilla</uri> (free membership
required) notifying us that the package works (feel free to assign the bug to
the Gentoo for Mac OS X developer team, osx@gentoo.org). If it doesn't work,
submit a bug that shows us the error(s) you received (usually there are a great
deal of errors; copy and paste from the first message that looks like an error
until the end of the output).
</p>

<p>
For most packages that require X11 to run, you will need to install the X11
development package. If you did not opt to install this during the XCode
install, you can install it easily afterwards from the <path>X11SDK.pkg</path>
file, found in the <path>Packages</path> directory of your Xcode 1.2 CD (simply
double-click to install). You should not yet try to emerge portage from the
ebuilds. There is a <uri link="#portage-dep">workaround</uri> for packages
that depend on portage (such as gentoolkit).
</p>

<warn>
The "macos" keyword is obsolete and should not be used anymore.
</warn>

</body>
</section>
<section>
<title>Already Installed Packages</title>
<body>

<p>
If you find a package that is already installed by Mac OS X, you should file a
bug on <uri link="http://bugs.gentoo.org">Gentoo Bugzilla</uri> (free membership
required). On your own system, you can add a package to 
<path>/etc/portage/profile/package.provided</path> so that portage realizes 
that the package is installed.
</p>

<pre caption="Adding a package to package.provided">
# <i>mkdir -p /etc/portage/profile/</i>
# <i>echo cat-name/package-x.y.z >> /etc/portage/profile/package.provided</i>
</pre>

<note>
To see a list of packages that the developers have deemed as pre-installed by
Apple on your version of Mac OS X, you may consult
<path>/etc/make.profile/package.provided</path>.
</note>

<warn>
Modifying <path>/etc/make.profile/package.provided</path> is not recommended,
as it will be overwritten every time the portage tree is updated (using 'emerge
--sync')
</warn>

</body>
</section>
</chapter>

<chapter>
<title>Using CVS</title>
<section>
<title>Problems with case sensitivity</title>
<body>

<p>
The scripts in CVS have problems with case-insensitive file systems like HFS(+),
so you will need to create a case-sensitive file system image (we recommend at
least 750MB in size) onto which you may check out the CVS portage tree. Either
of the following commands can be used to create such a file system image:
</p>

<pre caption="Creating a case-sensitive UFS image">
<comment>(Replace 'gentoo-cvs.dmg' with the desired filename,</comment>
<comment>and 'Gentoo-CVS' with the desired volume name.)</comment>
$ <i>hdiutil create -size 750m gentoo-cvs.dmg -volname Gentoo-CVS -fs UFS</i>
</pre>

<pre caption="Creating a case-sensitive HFS+ image">
<comment>Replace 'gentoo-cvs.dmg' with the desired filename,</comment>
<comment>and 'Gentoo-CVS' with the desired volume name.</comment>
$ <i>hdiutil create -size 750m gentoo-cvs.dmg -volname Gentoo-CVS -fs HFSX</i>
</pre>

<warn>
Developers: repoman will not work with spaces in the path to the portage tree
root; you should not use spaces in the volume name for your CVS image.
</warn>

</body>
</section>
</chapter>

<chapter>
<title>Uninstallation</title>

<section>
<title>Uninstall Script</title>
<body>

<p>
To uninstall Gentoo for Mac OS X, you can use the
<uri link="http://dev.gentoo.org/~alexander/files/uninstall.pl">uninstall
script</uri>, which allows you to choose whether or not you would like to
unmerge the packages you installed with Gentoo for MacOS.
</p>

<pre caption="Uninstalling Gentoo for Mac OS X">
# <i>sudo perl uninstall.pl</i>
</pre>

<note>
To uninstall, you should run the script with root privileges.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Available Packages</title>

<section>
<title>Overview</title>
<body>

<p>
There are several ways to view a list of packages that have been marked with the
'ppc-macos' keyword, and are therefore marked as stable on Mac OS X. Since there is
so much current development on marking packages as stable on Gentoo for Mac OS
X, users are encouraged to check the list of available packages frequently.
</p>

</body>
</section>
<section>
<title>Gentoo Fresh Mac OS X Ebuilds</title>
<body>

<p>
The <uri link="http://packages.gentoo.org/archs/ppc-macos/stable/">Gentoo Linux
Fresh Mac OS X Ebuilds</uri> site is part of the official <uri
link="http://packages.gentoo.org">Fresh Gentoo Ebuilds</uri> site. It not only
lists current ebuild information, but also allows searching, and offers an even
more popular feature, RSS feeds (even on a per-keyword basis). There is an <uri
link="http://packages.gentoo.org/archs/ppc-macos/stable/gentoo_simple.rss">RSS feed
for the latest ebuilds keyworded 'ppc-macos'</uri> available on the <uri
link="http://packages.gentoo.org/feeds">Fresh Gentoo Ebuilds Feeds List</uri>.
</p>

</body>
</section>
<section>
<title>Gentoo-Portage.com</title>
<body>

<p>
<uri link="http://www.gentoo-portage.com">Gentoo-Portage.com</uri> is an
unoffical source for portage tree information, much like
<uri link="http://packages.gentoo.org">Fresh Gentoo Ebuilds</uri>, but offers
more features on a per-ebuild information basis, such as reverse dependencies
per package, etc.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Advanced Features, &amp; Troubleshooting</title>

<section>
<title>Collision Protection</title>
<body>

<p>
Gentoo for MacOS features automatic collision protection that prevents portage
from overwriting files that it did not previously put there itself. This can be
turned off with <c>FEATURES="-collision-protect"</c>.
</p>

<pre caption="Allowing portage to overwrite Mac OS X files">
# <i>FEATURES="-collision-protect" emerge autoconf</i>
</pre>

<warn>
Disabling collision protection is <e>very</e> dangerous and can yield a
nonworking system.
</warn>

</body>
</section>
<section>
<title>emerge: command not found</title>
<body>

<p>
The Gentoo for Mac OSX installer updates the <path>/etc/profile</path> file by
adding <path>/usr/lib/portage/bin</path> to your <c>PATH</c> environment
variable. In order to simply run <c>emerge ...</c>, you may need to type source
<path>/etc/profile</path> or log out and log back in in order to avoid having to
type the full path <path>/usr/lib/portage/bin/&lt;toolname&gt;</path>) to run
Portage tools.
</p>

</body>
</section>
<section>
<title>Errors with &lt;library&gt;.a</title>
<body>

<p>
When installing <path>&lt;library&gt;.a</path> files, ranlib is run to ensure
that the library references appropriate paths. When <c>make install</c> is
executed in an ebuild, things are actually installed to <path>/var/tmp/portage
&lt;package&gt;/image</path> rather than the actual live filesystem (livefs).
This means that libraries installed by the ebuild reference incorrect paths.
This problem only exists on the darwin kernel with it's
<path>&lt;library&gt;.a</path> files, and is being worked on by the Gentoo for
Mac OS X team.
</p>

<p>
According to Gentoo for Mac OS X policy, ebuilds that install libraries must be
checked to be in working order before they are keyworded as 'ppc-macos'. Most of the
time, the reason that the libraries are nonworking is that the libary simply
references incorrect paths. For the adventurers out there, there's a simple
workaround for this. The <c>ranlib</c> command fixes, amongst other things,
references to incorrect paths in libraries.
</p>

<pre caption="Using ranlib to fix broken libraries">
<comment>(Replace '/usr/lib/libjpeg.a' with the broken library)</comment>
# <i>ranlib /usr/lib/libjpeg.a</i>
</pre>

</body>
</section>
<section id="portage-dep">
<title>The portage dependency</title>
<body>

<p>
Some packages depend on portage being installed. There is currently a problem
with portage not knowing that it is installed. While the Gentoo for OS X team
works on this bug, there is a simple workaround. It is possible to attempt to
emerge any package without emerging its dependencies. This can be used to get
around the portage dependency, but should never be used for any other
dependency.
</p>

<pre caption="Disregarding dependencies during an emerge">
# <i>emerge --nodeps gentoolkit</i>
</pre>

</body>
</section>
</chapter>
</guide>
