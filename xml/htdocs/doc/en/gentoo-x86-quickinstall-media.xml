<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/gentoo-x86-quickinstall-media.xml,v 1.5 2009/10/04 17:25:49 nightmorph Exp $ -->
<!DOCTYPE included SYSTEM "/dtd/guide.dtd">

<included>

<version>5</version>
<date>2009-10-04</date>

<section>
<title>Installation Media</title>
<body>

<p>
Download a CD from one of our <uri link="/main/en/mirrors.xml">mirrors</uri>.
You can find the minimal CD ISO in <path>releases/x86/current-iso/</path>. The
<e>minimal</e> installation CD is only useful for Internet-based installations.
This guide will use the minimal CD.
</p>

<p>
<uri link="/doc/en/faq.xml#isoburning">Burn</uri> the CD and boot it.
</p>

</body>
</section>
<section>
<title>Booting the CD</title>
<body>

<p>
Press <c>F2</c> at the boot screen to find out what boot options exist. You can
either start <c>gentoo</c> or <c>gentoo-nofb</c>, the latter disables the
framebuffer. If you booted the LiveCD, don't forget to add the <c>nox</c> option
to prevent the X graphical environment from starting. Several options allow to
enable or disable some features. If all goes well, your hardware will be
detected and all modules will be loaded. If the kernel fails to boot properly or
if your computer hangs during the boot procedure, you may have to experiment
with different configurations. The safest way is probably to use the
<c>nodetect</c> option and then load required modules explicitly.
</p>

<pre caption="Boot the minimal CD">
Gentoo Linux Installation LiveCD                     http://www.gentoo.org
Enter to Boot; F1 for kernels  F2 for options.
boot: <i>gentoo-nofb</i>
  <comment>(or in case of problems)</comment>
boot: <i>gentoo-nofb nodetect</i>
</pre>

</body>
</section>
<section>
<title>Optional: loading modules</title>
<body>

<p>
If you used the <c>nodetect</c> option, once booted, load the required modules.
You need to enable networking and have access to your disks. The <c>lspci</c>
command can help you identify your hardware.
</p>

<pre caption="Load required modules">
livecd root # <i>lspci</i>
<comment>(Use lspci's output to identify required modules)</comment>

<comment>(The following is an example, adapt it to your hardware)</comment>
livecd root # <i>modprobe 3w-9xxx</i>
livecd root # <i>modprobe r8169</i>
</pre>

</body>
</section>
<section>
<title>Network Configuration</title>
<body>

<p>
If your network does not work already, you can use <c>net-setup</c> to
configure your network. You might need to load support for your network card
using <c>modprobe</c> prior to the configuration. If you have ADSL, use
<c>pppoe-setup</c> and <c>pppoe-start</c>. For PPTP support, first edit
<path>/etc/ppp/chap-secrets</path> and <path>/etc/ppp/options.pptp</path> and
then use <c>pptp &lt;server&nbsp;ip&gt;</c>.
</p>

<p>
For wireless access, use <c>iwconfig</c> to set the wireless parameters and then
use either <c>net-setup</c> again or run <c>ifconfig</c>, <c>dhcpcd</c> and/or
<c>route</c> manually.
</p>

<p>
If you are behind a proxy, do not forget to initialize your system using
<c>export http_proxy</c>, <c>ftp_proxy</c> and <c>RSYNC_PROXY</c>.
</p>

<pre caption="Configure networking the guided way">
livecd root # <i>net-setup eth0</i>
</pre>

<p>
Alternatively, you can start networking manually. The following example assigns
the IP address 192.168.1.10 to your PC and defines 192.168.1.1 as your router
and name server.
</p>

<pre caption="Configure networking the manual way">
livecd root # <i>ifconfig eth0 192.168.1.10/24</i>
livecd root # <i>route add default gw 192.168.1.1</i>
livecd root # <i>echo nameserver 192.168.1.1 > /etc/resolv.conf</i>
</pre>

<p>
The installation CD allows you to start an <c>sshd</c> server, add additional
users, run <c>irssi</c> (a command-line chat client) and surf the web using
<c>links</c>.
</p>

</body>
</section>
<section>
<title>Optional: connect to your new box over ssh</title>
<body>

<p>
The most interesting feature is of course <c>sshd</c>. You can start it and
then connect from another machine and cut and paste commands from this guide.
</p>

<pre caption="Start sshd">
livecd root # <i>time /etc/init.d/sshd start</i>
 * Generating hostkey ...
<comment>(sshd generates the key and displays more output)</comment>
 * starting sshd ...                            [ok]

real   0m13.688s
user   0m9.420s
sys    0m0.090s
</pre>

<p>
Now, set the root password on the liveCD so that you can connect to it from
another PC. Please note that allowing root to connect over ssh is not
recommended under normal circumstances. If you can't trust your local network,
use a long and complex password, you should use it only once as it will
disappear after your first reboot.
</p>

<pre caption="Set the root password">
livecd root # <i>passwd</i>
New UNIX password: <comment>type_a_password</comment>
Retype new UNIX password: <comment>type_a_password</comment>
passwd: password updated successfully
</pre>

<p>
Now, you can start a terminal on another PC and connect to your new box, follow
the rest of this guide in another window, and cut and paste commands.
</p>

<pre caption="Connect to your new box from another PC">
<comment>(Use the IP address of your new box)</comment>
$ <i>ssh root@192.168.1.10</i>
The authenticity of host '192.168.1.10 (192.168.1.10)' can't be established.
RSA key fingerprint is 96:e7:2d:12:ac:9c:b0:94:90:9f:40:89:b0:45:26:8f.
Are you sure you want to continue connecting (yes/no)? <i>yes</i>
Warning: Permanently added '192.168.1.10' (RSA) to the list of known hosts.
Password: <comment>type_the_password</comment>
</pre>

</body>
</section>

</included>
