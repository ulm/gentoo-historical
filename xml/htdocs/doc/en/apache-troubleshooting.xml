<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/apache-troubleshooting.xml,v 1.2 2005/10/24 15:14:43 jkt Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/en/apache-troubleshooting.xml" lang="en">
<title>Troubleshooting Apache</title>

<author title="Author">
  <mail link="vericgar@gentoo.org">Michael Stewart</mail>
</author>
<author title="Contributor">
  <mail link="beu@gentoo.org">Elfyn McBratney</mail>
</author>
<author title="Contributor">
  <mail link="kloeri@gentoo.org">Bryan Ã˜stergaard</mail>
</author>

<abstract>
This document covers a number of ways to figure out how to fix your Apache 
installation when things are not working correctly.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.5</version>
<date>2005-10-24</date>

<chapter>
<title>Checking the Logs</title>
<section>
<body>

<p>
If there is something wrong with your Apache, but you have no idea how to 
figure out what's wrong, your first clues will be in the log files.
</p>

<p>
There are a few log files around. All of them are located inside 
<path>/var/log/apache2/</path>. Not all of the following log files will be 
on your system: this depends on what modules you have enabled.
</p>

</body>
</section>

<section>
<title>access_log</title>
<body>

<pre caption="access_log">
67.185.0.236 - - [18/Jun/2005:12:05:50 -0700] "GET / HTTP/1.0" 200 721
10.0.1.80 - - [18/Jun/2005:12:11:07 -0700] "GET /~jaspenelle/__journal1.jpg HTTP/1.1" 200 19079
66.239.233.163 - - [18/Jun/2005:12:15:06 -0700] "GET /~jaspenelle/avy14.gif HTTP/1.0" 200 1661
67.185.60.155 - - [18/Jun/2005:12:18:48 -0700] "GET / HTTP/1.0" 200 721
67.185.0.236 - - [18/Jun/2005:12:25:39 -0700] "GET / HTTP/1.0" 200 721
10.0.1.80 - - [18/Jun/2005:12:28:04 -0700] "GET /~jaspenelle/avy14.gif HTTP/1.1" 200 1661
10.0.1.80 - - [18/Jun/2005:12:28:46 -0700] "GET /~jaspenelle/avy7.png HTTP/1.1" 200 13066
</pre>

<p>
This file is simply a listing of every file requested from your server. Unless 
you have changed the default configuration, it will be in Common Log Format:
</p>

<pre caption="Common Log Format syntax">
remotehost rfc931 authuser [date] "request" status bytes
</pre>

<table>
<tr>
  <ti>remotehost</ti>
  <ti>Remote host name or IP address</ti>
</tr>
<tr>
  <ti>rfc931</ti>
  <ti>The remote log name of the user.</ti>
</tr>
<tr>
  <ti>authuser</ti>
  <ti>The user name as which the user has authenticated himself.</ti>
</tr>
<tr>
  <ti>[date]</ti>
  <ti>Date and time of the request.</ti>
</tr>
<tr>
  <ti>"request"</ti>
  <ti>The request line exactly as it came from the client.</ti>
</tr>
<tr>
  <ti>status</ti>
  <ti>The HTTP status code returned to the client.</ti>
</tr>
<tr>
  <ti>bytes</ti>
  <ti>The content-length of the document transferred.</ti>
</tr>
</table>

</body>
</section>
<section>
<title>error_log</title>
<body>

<pre caption="error_log">
[Mon Feb 07 23:33:18 2005] [notice] suEXEC mechanism enabled (wrapper: /usr/sbin/suexec2)
[Mon Feb 07 23:33:18 2005] [notice] Digest: generating secret for digest authentication ...
[Mon Feb 07 23:33:18 2005] [notice] Digest: done
[Mon Feb 07 23:33:18 2005] [notice] Apache/2.0.52 (Gentoo/Linux) PHP/4.3.10 configured -- resuming normal operations
[Sat Jun 18 13:01:54 2005] [error] [client 10.0.1.80] File does not exist: /var/www/localhost/htdocs/favicon.ico
[Sat Jun 18 13:02:14 2005] [error] [client 10.0.1.80] File does not exist: /var/www/localhost/htdocs/favicon.ico
[Sat Jun 18 13:02:18 2005] [error] [client 10.0.1.80] File does not exist: /var/www/localhost/htdocs/favicon.ico
[Sat Jun 18 13:02:21 2005] [error] [client 10.0.1.80] File does not exist: /var/www/localhost/htdocs/favicon.ico
[Sat Jun 18 13:02:24 2005] [error] [client 10.0.1.80] File does not exist: /var/www/localhost/htdocs/favicon.ico
</pre>

<p>
As you can see, this file can contain a lot of stuff, depending on the 
<c>ErrorLevel</c> directive in your <path>httpd.conf</path> file. It tells you 
if apache started up correctly, what errors it has run into, ... In general it
will tell you what went wrong. If something isn't working right, this should 
be the first file you check for more information.
</p>

</body>
</section>
<section>
<title>suexec_log</title>
<body>

<pre caption="suexec_log">
[2005-02-11 22:33:19]: uid: (1000/vericgar) gid: (1000/1000) cmd: test.cgi
[2005-03-11 19:20:13]: uid: (1000/vericgar) gid: (1000/1000) cmd: test.cgi
[2005-03-11 19:34:47]: uid: (1000/vericgar) gid: (1000/1000) cmd: test.cgi
</pre>

<p>
This file contains a log entry for every time a script is ran using CGI and 
suexec. If you can't get a script to work with suexec, this log is the one 
to check as it will generally have a line listing why it wouldn't run a script.
</p>

</body>
</section>
</chapter>

<chapter>
<title>I installed a module, but it's not working!!!</title>
<section>
<body>

<p>
Just installing a module is not enough - you have to explicitly turn it on. We 
do this so that it's easy to turn on and off individual modules, which makes 
it easy to find which module is causing problems and let's you test 
modules and disable them easily.
</p>

<p>
When you install a module, it should display a message similar to this:
</p>

<pre caption="Post-installation message from emerge">
 * 
 * To enable mod_layout, you need to edit your /etc/conf.d/apache2 file and
 * add '-D LAYOUT' to APACHE2_OPTS.
 * 
 * 
 * Configuration file installed as
 *     /etc/apache2/modules.d/15_mod_layout.conf
 * You may want to edit it before turning the module on in /etc/conf.d/apache2
 * 
</pre>

<p>
This is pretty straightforward. It tells you exactly what you need to do to 
enable this module.
</p>

<p>
If you missed this message, there is another way to find out what you need to 
add to <c>APACHE2_OPTS</c> in <path>/etc/conf.d/apache2</path>: simply 
check the configuration file the module installed. The module's 
configuration file should be added to <path>/etc/apache2/modules.d/</path>. 
Look for it there and find a line that has <c>IfDefine</c>:
</p>

<pre caption="An excerpt from 15_mod_layout.conf">
&lt;IfDefine LAYOUT&gt;
  &lt;IfModule !mod_layout.c&gt;
    LoadModule layout_module    modules/mod_layout.so
  &lt;/IfModule&gt;
&lt;/IfDefine&gt;
</pre>

<p>
The <c>IfDefine</c> block is ran when you add <c>-D LAYOUT</c> to
<path>/etc/conf.d/apache2</path>. The <c>LAYOUT</c> is just an example.
</p>

<p>
There are several options you can add to <c>APACHE2_OPTS</c> that are 
specified in the default configuration:
</p>

<table>
<tr>
  <th>Option</th>
  <th>Result</th>
</tr>
<tr>
  <ti>USERDIR</ti>
  <ti>
    Enables user public_html folders to be accessible by http://server/~username
  </ti>
</tr>
<tr>
  <ti>INFO</ti>
  <ti>
    Enables the mod_info module, which displays information about the running 
    server's configuration at http://localhost/server-info
  </ti>
</tr>
<tr>
  <ti>PROXY</ti>
  <ti>Enables mod_proxy</ti>
</tr>
<tr>
  <ti>SSL</ti>
  <ti>
    Enables SSL/HTTPS support. (Apache must have been compiled with the ssl 
    USE-flag)
  </ti>
</tr>
<tr>
  <ti>DAV</ti>
  <ti>Enables mod_dav, the built-in WebDav module</ti>
</tr>
<tr>
  <ti>DAV_FS</ti>
  <ti>Enables mod_dav_fs, support for file systems in WebDav</ti>
</tr>
<tr>
  <ti>LDAP</ti>
  <ti>
    Enables mod_ldap, which allows Apache to connect to LDAP resources. 
    (Requires the ldap USE-flag to be enabled)
  </ti>
</tr>
<tr>
  <ti>AUTH_LDAP</ti>
  <ti>Enables authentication to resources via a LDAP resource.</ti>
</tr>
</table>

<p>
Documentation for all of the built-in modules can be found in the <uri 
link="http://httpd.apache.org/docs-2.0/">Apache 2.0 documentation</uri>.
</p>

</body>
</section>
</chapter>
  
<chapter>
<title>Apache is returning zero-length pages or segfaulting</title>
<section>
<body>

<p>
This happens mostly after an upgrade because binary compatibility 
broke in APR (which may happen for a number for reasons). To fix this, you need
to rebuild the Apache tool stack:
</p>

<pre caption="Rebuilding the Apache tool stack">
<comment>(make sure you do these in order, it's very important!)</comment>

<comment>(first, we have to remove the currently installed apache)</comment>
# <i>emerge -aCv '=net-www/apache-2*'</i>

<comment>(then we rebuild the tool stack)</comment>
# <i>emerge -av '=dev-libs/apr-0*' '=dev-libs/apr-util-0*'</i>

<comment>(then we reinstall apache)</comment>
# <i>emerge -av '=net-www/apache-2*'</i>

<comment>(determine any packages that depend on apache)</comment>
$ <i>equery depends net-www/apache</i>
[ Searching for packages depending on net-www/apache... ]
dev-php/phpsysinfo-2.3-r2
dev-php/phpsysinfo-2.1-r2
dev-php/mod_php-4.3.11-r2
net-www/mod_layout-4.0.1a-r1
www-servers/gorg-0.5

<comment>(then rebuild any modules you have installed)</comment>
# <i>emerge -av '=dev-php/mod_php-4.3.11-r2' '=net-www/mod_layout-4.0.1.a-r1'</i>
</pre>

</body>
</section>
<section>
<title>Determining a buggy add-on module</title>
<body>

<p>
If you are still having problems after following the instructions above, the 
culprit is most likely one of your installed add-on modules.
</p>

<p>
Start off by disabling all add-on modules and restarting Apache.
</p>

<pre caption="Disabling add-on modules">
<comment>(edit /etc/conf.d/apache2)</comment>

<comment>(before the change)</comment>
APACHE2_OPTS="-D PHP4 -D USERDIR -D SSL"

<comment>(after the change)</comment>
APACHE2_OPTS=""
</pre>

<pre caption="Restarting Apache">
# <i>/etc/init.d/apache2 stop</i>
<comment>(make sure apache is completely stopped)</comment>
# <i>ps -A</i> 
# <i>/etc/init.d/apache2 start</i>
</pre>

<note>
You may have to make minor changes to some places of your configuration if you 
have added <c>Directive</c>s that these modules provide in places that don't 
test to for the module being loaded. It's recommended that <c>Directive</c>s 
like these be placed in test containers. See any of the .conf files in 
<path>/etc/apache2/modules.d</path> examples.
</note>

<p>
If Apache quits segfaulting and giving blank pages, then you know for sure it
was one of the add-on modules. To figure out which add-on modules, we add them 
back, one at a time, completely restarting apache every time.
</p>

<p>
When Apache stops working after adding a module back, you know that module is 
the one that is causing problems. Sometimes, simply rebuilding the module 
will fix the problem.
</p>

<p>
If after rebuilding the module and restarting apache, you are still having 
problems with Apache segfaulting or returning blank pages, you should <uri 
link="http://bugs.gentoo.org">file a bug</uri> listing the specific version 
and revision of the module and mention that it is segfaulting. Be sure to 
search for already open bugs first!
</p>

</body>
</section>
</chapter>

<chapter>
<title>Webserver doesn't interpret PHP or CGI scripts and returns their code
instead</title>
<section>
<body>

<p>
Apache sometimes appears to return the PHP or CGI code instead of running those
scripts and returning the script output. If this happens even though the module
is enabled in <path>/etc/conf.d/apache2</path> it's very likely to be a cache
issue. Clearing the webbrowser cache fixes this browser side issue.
</p>

<p>
Sometimes this problem can also be seen only when accessing the webserver using
it's DNS name but not when accessing the webserver using its IP address. This is
a strong indication that it's a cache issue.
</p>

<p>
This problem can be fixed by clearing the webbrowser cache and any other
webproxies like squid or wwwoffle.
</p>

</body>
</section>
</chapter>

<chapter>
<title>configure: error: changes in the environment can compromise the build</title>
<section>
<body>

<p>
If you get this error, then you probably have unneeded spaces in your 
<c>CFLAGS</c> in <path>/etc/make.conf</path>. The fix is simple, remove the 
extra spaces:
</p>

<pre caption="Example of changes to /etc/make.conf">
<comment>(before the change)</comment>
CFLAGS="-O2 -mcpu=pentium3 -march=pentium3  -pipe"

<comment>(after the change - notice the removal of the space)</comment>
CFLAGS="-O2 -mcpu=pentium3 -march=pentium3 -pipe"
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Address already in use: make_sock: could not bind to address 0.0.0.0:443</title>
<section>
<body>

<p>
This error occurs during start-up and is caused by having multiple 
<c>Listen</c> directives in your configuration that are incompatible. To solve 
this problem, you should grep your configuration for <c>Listen</c> and fix each
occurrence.
</p>

<pre caption="Finding all Listen directives">
<comment>(Make sure you are in the configuration directory)</comment>
# <i>cd /etc/apache2/</i>

<comment>(List all listen directives)</comment>
# <i>grep Listen httpd.conf vhosts.d/*.conf modules.d/*.conf</i>
</pre>

<p>
What you are looking for conflicts with what Apache is trying to bind to. For 
example, if there is a <c>Listen 80</c> in <path>httpd.conf</path> and there
is a <c>Listen 10.0.0.15:80</c> in another file, then Apache will not be able 
to start. This is because Apache first binds to port 80 on all IP addresses 
for the machine and then tries to bind to port 80 on IP address 10.0.0.15 
and fails because port 80 is already in use.
</p>

<p>
The recommended configuration is that you have a single <c>Listen 80</c> 
(this is in the default <path>httpd.conf</path>) so that you bind to all 
addresses by default for the standard HTTP port and then for every SSL 
<c>VirtualHost</c> you run you create a separate absolute <c>Listen</c> 
directive (such as <c>Listen 10.0.0.15:443</c>).
</p>

</body>
</section>
</chapter>

<chapter>
<title>After upgrade to apache-2.0.54-r13 the default vhosts (SSL and non-SSL) don't work any more</title>
<section>
<body>

<p>
With the upgrade to apache-2.0.54-r13, two new directives were added to it 
to fix <uri link="http://bugs.gentoo.org/show_bug.cgi?id=100624">bug 
100624</uri>.
</p>

<p>
The new directives are <c>-D DEFAULT_VHOST</c> to activate the default 
virtual host and <c>-D SSL_DEFAULT_VHOST</c> to activate the default SSL 
virtual host. Both need to be added to the <c>APACHE2_OPTS</c> variable in 
<path>/etc/conf.d/apache2</path> if you want Apache to behave like before.
</p>

</body>
</section>
</chapter>

<chapter id="getting-help">
<title>Getting Help</title>
<section>
<body>

<p>
If none of the above was of any use to you, or if you have other questions, 
feel free to stop by our IRC channel, <path>#gentoo-apache</path> on 
<path>irc.freenode.net</path>. Or you may also file a bug on <uri 
link="http://bugs.gentoo.org">Gentoo's Bugzilla</uri>.
</p>

</body>
</section>
</chapter>

</guide>
