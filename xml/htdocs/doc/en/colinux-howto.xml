<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/Attic/colinux-howto.xml,v 1.12 2006/07/26 16:00:13 rane Exp $ -->

<guide link="/doc/en/colinux-howto.xml" disclaimer="obsolete">
<title>HOWTO setup coLinux to run Gentoo</title>
<author title="Author">
  IWBCMAN
</author>
<author title="Author">
  janlaur
</author>
<author title="Editor">
  <mail link="joshua@sungentoo.homeunix.com">Joshua Preston</mail>
</author>
<author title="Editor">
  <mail link="avenj@gentoo.org">Jon Portnoy</mail>
</author>
<abstract>
This HOWTO is intended to provide instructions on a simple setup for 
coLinux to allow your Windows machine to run Linux as a 
thread.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->
<license/>

<version>1.5</version>
<date>2006-07-25</date>

<chapter>
<title>Introduction</title>
<section>
<title>What is coLinux?</title>
<body>

<p>
coLinux is a Windows daemon program. The purpose is to run the Linux 
kernel as a native Windows thread, and thereby run Linux natively within Windows.
</p>

<p>
The main flaw is probably performance. Performance of X applications 
is bad, but usable. Ordinary applications run just as fast as real Linux.
</p>

<warn>
coLinux is still pretty alpha.  It works and works well, but there 
are many things which are not yet supported.
</warn>

<p>
This HOWTO is based on a compilation and merge of two excellent HOWTOs 
provided in the <uri link="http://forums.gentoo.org">Gentoo forums</uri> 
by IWBCMAN and janlaur.  The links to these discussions are provided 
below for your reference:
</p>

<ul>
  <li><uri link="http://forums.gentoo.org/viewtopic.php?t=162420">Part by IWBCMAN</uri></li>
  <li><uri link="http://forums.gentoo.org/viewtopic.php?t=163154">Part by janlaur</uri></li>
</ul>

</body>
</section>
</chapter>
<chapter>
<title>Installation</title>
<section>
<title>Getting coLinux</title>
<body>

<warn>
You must run Windows 2000, 2003, or XP (Home/Professional) to use 
coLinux.
</warn>

<p>
You only need to download the latest snapshot from 
<uri link="http://colinux.org/snapshots/">coLinux.org</uri>.
</p>

<note>
coLinux-20040417.exe was used for this HOWTO.
There are also several nice bugfixes in the snapshots so we recommend that 
you use these.
</note>

<p>
The .EXE file is an installer program which is able to download a basic 
distribution image from SourceForge (Gentoo/Debian/Fedora).
</p>

<p>
Start the .EXE, leave the default values as is except, of course, when 
you choose your distribution, in which case you should select Gentoo.
</p>

<p>
The image will be downloaded to the installation directory and is called 
<path>gentoo-i586-ext3-2g-deluxe.bz2</path>.
</p>

<p>
This new virtual partition file contains a stage3 Gentoo installation. 
Actually, it is more than just a stage3 as it includes XFree86, XFCE4, Firefox, 
GAIM and XChat. The virtual partition is formatted in ext3.
</p>

<ul>
  <li>
    Extract this file to any Windows drive that has room for a 2 
    gigabyte file
  </li>
  <li>There should be no spaces in the path to this file</li>
  <li>Optionally, you can delete the .bz2 file after extraction</li>
</ul>

<p>
You'll probably need Winrar for Windows to unpack it.
Check out <uri link="http://wiki.colinux.org/cgi-bin/NiceTools">the coLinux
Nice Tools page</uri> to find the tools for extracting the image files and 
creating virtual swap partitions.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Configuration</title>
<section>
<title>Modifying the configuration file</title>
<body>

<p>
There is only a single configuration file; it's located in the 
installation directory and is named <path>default.colinux.xml</path>. Open it 
with your favorite editor and edit it to look like this:
</p>

<pre caption="default.colinux.xml">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;colinux&gt;
    <comment>&lt;!-- your path may differ slightly. --&gt;</comment>
    &lt;block_device index="0" path="\DosDevices\e:\gentoo-i586-ext3-2g-deluxe" enabled="true"&gt;&lt;/block_device&gt;
    &lt;bootparams&gt;root=/dev/cobd0&lt;/bootparams&gt;
    &lt;image path="vmlinux"&gt;&lt;/image&gt;
    <comment>&lt;!-- adjust the size to your needs --&gt;</comment>
    &lt;memory size="256"&gt;&lt;/memory&gt;
    <comment>&lt;!-- Make sure name= the exact name of the TAP device in your Network Connections!--&gt;</comment>
    &lt;network index="0" type="tap" name="TAP"&gt;&lt;/network&gt;
&lt;/colinux&gt;
</pre>

<p>
Change the path to where you extracted the image and configure how much memory
you want to allocate to coLinux.
</p>

</body>
</section>
<section>
<title>Setting up Networking</title>
<body>

<p>
You should now be able to boot coLinux by double-clicking on 
colinux-daemon.exe, but since most people want networking, we'll
configure that first. You need to install the virtual network adapter to start
with.
</p>

<ul>
  <li>Select "Add Hardware" from the control panel then click "Next"</li>
  <li>
    Click "Yes I have already connected the new hardware" then click 
    "Next"
  </li>
  <li>
    Scroll to the bottom of the list in the next window and select 
    "Add a new hardware device" then click "Next"
  </li> 
  <li>
    Select "Install the hardware that I manually select from a list" 
    then click "Next"
  </li>
  <li>Select "Network Adapters" then click "next"</li>
  <li>
    Click "Have Disk" and navigate to the place where you extracted 
    colinux to. Go into the "netdriver" directory. A file should show up.
  </li>
  <li>Select it and click "Open"</li>
</ul>

<p>
You now have your virtual network adapter configured!  You can configure 
it just like the other adapters already on your system.
</p>

<ul>
  <li>Go to "Control Panel->Network Connections"</li>
  <li>
    Click on your internet connection, and then CTRL+click on your new TAP 
    network connection.
  </li>
  <li>Right click, and choose "Bridge connections".</li>
</ul>

<p>
Windows should create a network bridge. If you still have an active 
Internet connection in Windows, then it probably works.
</p>

</body>
</section>
<section>
<title>Booting</title>
<body>

<p>
Now you're ready to open colinux-daemon.exe and see the magic:
you're now booted in a basic Gentoo install, with programs like XFree86, 
XFCE4, GAIM, kernel-2.4.26 and other basic stuff at your disposal.
</p>

<p>
Once you are in, you'll want to do a few things first:
</p>

<ul>
  <li>Login as root with no password and set the root password</li>
  <li>Check that networking is running</li>
  <li>
    Start sshd, and ssh into it with Putty (Use cygwin as your 
    terminal type)
  </li>
</ul>

<p>
You'll probably want to update your system, so let's do this now:
</p>

<pre caption="Finalizing the setup">
# <i>emerge --sync</i>
# <i>env-update &amp;&amp; source /etc/profile</i>
<comment>(If you prefer to use vnc)</comment>
# <i>emerge tightvnc</i>
</pre>

<p>
Now you need to configure X. You can simply copy over your 
<path>/etc/X11/XF86Config</path> from your Linux installation to your coLinux 
install (if applicable).
</p>

<note>
You can only use drivers provided with X (i.e. no nvidia-glx/kernel)
and it only seems to work with a color depth of 16, so you'll have to 
edit the file a little. Remember you have no direct access to the video 
hardware of Windows, so you have to either copy this file from 
elsewhere or manually create it. Alternatively you can also just boot 
the machine with Knoppix and let Knoppix create a <path>XF86Config</path>
file for you.
</note>

<p>
When that is finished create <path>~/.vnc/xstartup</path>:
</p>

<pre caption="Sample ~/.vnc/xstartup">
startxfce4 &amp;
</pre>

<p>
Now simply run the vncserver with your options.  You will be prompted 
for a password, create one and remember it.
</p>

<pre caption="Starting vncserver">
$ <i>vncserver -geometry "1024x768" -depth 16</i>
</pre>

<p>
All you will need to do now is download VNC for Windows, run 
the vncviewer, and give it the IP address of your virtual 
network adapter (i.e. 192.168.0.X:1) along with your password. If all goes 
well vncviewer should now bring up your XFCE4 desktop - have a lot of 
fun!
</p>

</body>
</section>
</chapter>
<chapter>
<title>Advanced Topics</title>
<section>
<title>Adding a swap partition</title>
<body>

<p>
Download a swapfile from <uri link="http://gniarf.nerim.net/colinux/swap/">here</uri>
(the file name indicates the swapsize). Extract it to wherever you have the
room for it and add the following to your <path>default.colinux.xml</path>:
</p>

<pre caption="Adding a swap drive">
    <comment>&lt;-- index="1" means that it will be mapped to /dev/cobd1 --&gt;</comment>
    &lt;block_device index="1" path="\DosDevices\e:\swap-file" enabled="true"&gt;&lt;/block_device&gt;
</pre>

<p>
Now (re)start coLinux, and run <c>mkswap</c>:
</p>

<pre caption="Setting up your swap partition">
# <i>mkswap /dev/cobd1</i>
</pre>

<p>
You'll also need to modify your <path>/etc/fstab</path> to add the following
line:
</p>

<pre caption="Add to /etc/fstab">
/dev/cobd1    none    swap    sw    0    0
</pre>

<p>
Now enable the swap without rebooting!
</p>

<pre caption="Enabling your swap">
# <i>swapon -a</i>
</pre>

</body>
</section>
<section>
<title>Accessing your existing Linux partitions from coLinux</title>
<body>

<p>
The coLinux website provides a document that covers the <uri 
link="http://wiki.colinux.org/cgi-bin/GettingStarted">basics</uri>.
After reading that you can end up with following config:
</p>

<pre caption="New default.colinux.xml">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;colinux&gt;
    &lt;block_device index="0" path="\DosDevices\e:\gentoo-i586-ext3-2g-deluxe" enabled="true"&gt;&lt;/block_device&gt;
    &lt;block_device index="1" path="\DosDevices\e:\swap-file" enabled="true"&gt;&lt;/block_device&gt;
    <comment>&lt;!-- Your path may differ based on your disk layout, etc --&gt;</comment>
    &lt;block_device index="2" path="\Device\Harddisk0\Partition5" enabled="true"&gt;&lt;/block_device&gt; 
    &lt;bootparams&gt;root=/dev/cobd0&lt;/bootparams&gt;
    &lt;image path="vmlinux"&gt;&lt;/image&gt;
    &lt;memory size="256"&gt;&lt;/memory&gt;
    &lt;network index="0" type="tap" name="TAP"&gt;&lt;/network&gt;
&lt;/colinux&gt;
</pre>


<p>
You will have to (re)start coLinux to let the changes be taken into account. 
You should be able to access "\Device\Harddisk0\Partition5" through the 
/dev/cobd2 device in coLinux.
</p>

<pre caption="Mounting">
# <i>mount /dev/cobd2 /mnt/linux</i>
</pre>

<impo>
Remember that this will only work with partitions that Windows doesn't 
use. If Windows uses it, you need to access it through smbfs.
</impo>

</body>
</section>
</chapter>
<chapter>
<title>Q&amp;A</title>
<section>
<title>What USE flags should I use?</title>
<body>

<p>
The USE are the same as the native system.
</p>

</body>
</section>
<section>
<title>Will I be able to share my dial-up connection?</title>
<body>

<p>
It uses the Internet connection sharing to connect the Linux network to 
the outside network so you should be able to bridge the TAP connection to 
your PPP connection.
</p>

</body>
</section>
<section>
<title>Can the Linux kernel still access hardware?</title>
<body>

<p>
coLinux emulates each type of hardware needed. You have emulated disk 
access, networking, etc. What isn't available yet are USB, direct graphics,
or soundcard access. The good news is that coLinux is currently working on 
getting USB working (excluding USB keyboards and mice).
</p>

</body>
</section>
<section>
<title>Are there any alternatives to coLinux?</title>
<body>

<p>
Yes!
</p>

<ul>
<li><uri link="http://www.vmware.com/">VMWare</uri></li>
<li><uri link="http://bochs.sourceforge.net/">Bochs</uri></li>
</ul>

</body>
</section>
<section>
<title>Will coLinux work with the 2.6 kernel?</title>
<body>

<p>
At the present time, no, it uses a 2.4 based kernel that has been 
patched to allow for the emulated devices as well as shared resources 
with Windows.
</p>

</body>
</section>
<section>
<title>Why doesn't X work?</title>
<body>

<p>
There is no native X support. You must use either vnc or Cygwin-X11.  
Follow the directions in this HOWTO.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Conclusion</title>
<section>
<body>

<p>
There is an amazing array of possibilities with coLinux. You can run 
Apache, Samba, DHCP, mail, distcc, NFS, <e>you name it</e> server under 
colinux. With exception of device support and disk access one cannot 
tell that one is running Linux under Windows which is truly amazing. 
</p>

</body>
</section>
</chapter>
</guide>
