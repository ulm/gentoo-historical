<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/Attic/eclasses-list.xml,v 1.3 2003/11/15 00:35:18 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link = "/doc/en/eclasses-list.xml">
<title>Gentoo Eclasses List</title>
<author title="Author">
<mail link="zhware@gentoo.org">Stoyan Zhekov</mail>
</author>

<abstract>
This guide describe eclasses available in Gentoo portage
</abstract>

<version>1.1</version>
<date>26 October, 2002</date>

<chapter>
<title>aspell-dict.eclass</title>
<section>
<body>
The aspell-dict eclass is designed to streamline the construction of
ebuilds for the new aspell dictionaries (from <uri>http://www.gnu.org/</uri>) which support
</body>
</section>
</chapter>

<chapter>
<title>autotools.eclass</title>
<section>
<body>
The autotools eclass enables building of the apps that needs the latest autconf/automake.
<note>
   This eclass was made to bridge the incompadibility problem of autoconf-2.13,
   autoconf-2.5x and automake-1.4x, automake-1.5x.  Most packages needs
   autoconf-2.13 and automake-1.4x, but cannot work with the latest versions
   of these packages due to incompadibility, thus when we have a package that
   needs the latest versions of automake and autoconf, it begins to get a
   problem.
</note>
Commented Example:
<pre>
   # Copyright 1999-2002 Gentoo Technologies, Inc.
   # Distributed under the terms of the GNU General Public License, v2 or later
   # Maintainer:  John Doe &lt;john@foo.com&gt;
   # $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/Attic/eclasses-list.xml,v 1.3 2003/11/15 00:35:18 neysx Exp $
#
   # If you need to set the versions different from in here, it *must*
   # be done before inherit.eclass is sourced
   #ACONFVER=2.52f
   #AMAKEVER=1.5b
#
   # Source inherit.eclass and inherit AutoTools
   . /usr/portage/eclass/inherit.eclass 
   inherit autotools 
#
   # This is pretty standard.
   S=${WORKDIR}/${P}
   DESCRIPTION="My Application"
#
   # Here you *NEED* to have $SRC_URI as a source url to include the automake
   # and autoconf source tarballs
   SRC_URI="${SRC_URI}
            http://download.foo.com/files/${P}.tar.gz"
#
   HOMEPAGE="http://www.foo.com/"
#
   # Here you *NEED* to have "$DEPEND" as an depend to include the dependancies
   # of automake and autoconf.
   DEPEND="${DEPEND}
           foo-libs/libfoo"
#
   src_compile() {
#
       # This will install automake and autoconf in a tempory directory and
       # setup the environment. Do not forget!!!!!!!
       install_autotools
#
       # Now like normal
       ./configure --host=${CHOST} \
                   --prefix=/usr || die
       emake || die
   }
#
   src_install() {
#
       # Still pretty standard to how you would normally do it
       make DESTDIR=${D} install || die
       dodoc AUTHORS COPYING ChangeLog INSTALL NEWS README TODO
   }
</pre>
</body>
</section>
</chapter>

<chapter>
<title>base.eclass</title>
<section>
<body>
The base eclass defines some default functions and variables. Nearly everything
else inherits from here.
</body>
</section>
</chapter>

<chapter>
<title>commonbox.eclass</title>
<section>
<body>
The commonbox eclass is designed to allow easier installation of the box
window managers such as blackbox and fluxbox and commonbox
The common utilities of those window managers get installed in the
commonbox-utils dependency, and default styles with the commonbox-styles
utility.  They all share the <path>/usr/share/commonbox</path> directory now.
</body>
</section>
</chapter>

<chapter>
<title>cvs.eclass</title>
<section>
<body>
This eclass provides the generic cvs fetching functions.
</body>
</section>
</chapter>

<chapter>
<title>debug.eclass</title>
<section>
<body>
A general DEBUG eclass to ease inclusion of debugging information and to remove "bad" flags from <c>CFLAGS</c>.
</body>
</section>
</chapter>

<chapter>
<title>distutils.eclass</title>
<section>
<body>
The distutils eclass is designed to allow easier installation of
distutils-based python modules, and their incorporation into 
the Gentoo Linux system.
</body>
</section>
</chapter>

<chapter>
<title>ebook.eclass</title>
<section>
<body>
The ebook eclass defines some default functions and variables to 
install ebooks. 
</body>
</section>
</chapter>

<chapter>
<title>elisp.eclass</title>
<section>
<body>
This eclass sets the site-lisp directory for emacs-related packages.
</body>
</section>
</chapter>

<chapter>
<title>eutils.eclass</title>
<section>
<body>
This eclass is for general purpose functions that most ebuilds
have to implement themselfs.
</body>
</section>
</chapter>

<chapter>
<title>flag-o-matic.eclass</title>
<section>
<body>
</body>
</section>
</chapter>

<chapter>
<title>games.eclass</title>
<section>
<body>
This is the games ebuild for standardizing the install of games ...
you better have a *good* reason why you're *not* using games.eclass
in an ebuild in app-games
</body>
</section>
</chapter>

<chapter>
<title>gcc.eclass</title>
<section>
<body>
This eclass contains (or should) functions to get common info about gcc
</body>
</section>
</chapter>

<chapter>
<title>gnome.org.eclass</title>
<section>
<body>
Gnome ECLASS. Mainly <c>SRC_URI</c> settings
</body>
</section>
</chapter>

<chapter>
<title>gnome2.eclass</title>
<section>
<body>
</body>
</section>
</chapter>

<chapter>
<title>gnuconfig.eclass</title>
<section>
<body>
This eclass updates config.guess and config.sub. This is useful if 
configure dies from misguessing your canonical system name (<c>CHOST</c>).
</body>
</section>
</chapter>

<chapter>
<title>gtk-engines.eclass</title>
<section>
<body>
The gtk-engines eclass is inheritd by all gtk-engines-* ebuilds.
</body>
</section>
</chapter>

<chapter>
<title>inherit.eclass</title>
<section>
<body>
<note>
This is required to exitst as without it older installed packages using the older
inherit method cannot be uninstalled. However, it doesn't need to contain any code :-)
</note>
</body>
</section>
</chapter>

<chapter>
<title>java.eclass</title>
<section>
<body>
</body>
</section>
</chapter>

<chapter>
<title>kde-base.eclass</title>
<section>
<body>
This is the kde ebuild for std. kde-dependant apps which follow <c>configure/make/make install</c>
procedures and have std. configure options.
</body>
</section>
</chapter>

<chapter>
<title>kde-dist.eclass</title>
<section>
<body>
This is the kde-dist eclass for >=2.2.1 kde base packages. Don't use for kdelibs though :-)
<warn>
Don't use it for e.g. kdevelop, koffice because of their separate versionnig schemes.
</warn>
</body>
</section>
</chapter>

<chapter>
<title>kde-functions.eclass</title>
<section>
<body>
This contains everything except things that modify ebuild variables and functions (e.g. <c>$P</c>, <c>src_compile()</c> etc.)
</body>
</section>
</chapter>

<chapter>
<title>kde-i18n.eclass</title>
<section>
<body>
</body>
</section>
</chapter>

<chapter>
<title>kde-patch.eclass</title>
<section>
<body>
This applies homemade patches from the tarball to the date specified.
</body>
</section>
</chapter>

<chapter>
<title>kde-pre.eclass</title>
<section>
<body>
This is for kde prereleases (alpha, beta etc.) which have a _ (underscore) in their portage ebuild
names but not in their source archives and source dirs. To be inherited after setting <c>SRC_URI</c> and <c>WORKDIR</c>.
</body>
</section>
</chapter>

<chapter>
<title>kde-source.eclass</title>
<section>
<body>
This is for kde-base cvs ebuilds. Read comments about settings.
It uses <c>$S</c> and sets <c>$SRC_URI</c>, so inherit it as late as possible (certainly after any other eclasses).
See <uri>http://www.gentoo.org/~danarmak/kde-cvs.html</uri> !
All of the real functionality is in <c>cvs.eclass</c>; this just adds some trivial kde-specific items
</body>
</section>
</chapter>

<chapter>
<title>kde.eclass</title>
<section>
<body>
The kde eclass is inherited by all kde-* eclasses. Few ebuilds inherit straight from here.
</body>
</section>
</chapter>

<chapter>
<title>kde.org.eclass</title>
<section>
<body>
Contains the locations of <uri>ftp://ftp.kde.org/</uri> packages and their mirrors
</body>
</section>
</chapter>

<chapter>
<title>kernel.eclass</title>
<section>
<body>
This eclass contains the common functions to be used by all lostlogic
based kernel ebuilds
</body>
</section>
</chapter>

<chapter>
<title>kmod.eclass</title>
<section>
<body>
The base eclass defines some default functions and variables. Nearly everything
else inherits from here.
</body>
</section>
</chapter>

<chapter>
<title>koffice-i18n.eclass</title>
<section>
<body>
</body>
</section>
</chapter>

<chapter>
<title>latex-package.eclass</title>
<section>
<body>
This eClass is designed to be easy to use and implement.  The vast majority of
LaTeX packages will only need to define <c>SRC_URI</c> (and sometimes <c>$S</c>) for a
successful installation.  If fonts need to be installed, then the variable
<c>SUPPLIER</c> must also be defined.

However, those packages that contain subdirectories must process each
subdirectory individually.  For example, a package that contains directories
<path>DIR1</path> and <path>DIR2</path> must call <c>latex-package_src_compile()</c> and
<c>latex-package_src_install()</c> in each directory, as shown here:
<pre>
src_compile() {
   cd ${S}
   cd DIR1
   latex-package_src_compile
   cd ..
   cd DIR2
   latex-package_src_compile
}

src_install() {
   cd ${S}
   cd DIR1
   latex-package_src_install
   cd ..
   cd DIR2
   latex-package_src_install
}
</pre>
The eClass automatically takes care of rehashing TeX's cache (ls-lR) after
installation and after removal, as well as creating final documentation from
TeX files that come with the source.  Note that we break TeX layout standards 
by placing documentation in <path>/usr/share/doc/${PN}</path>

For examples of basic installations, check out <c>app-text/latex-aastex</c> and
<c>app-text/latex-leaflet</c>.
<note>
The CTAN "directory grab" function creates files with different MD5
signatures EVERY TIME.  For this reason, if you are grabbing from the CTAN,
you must either grab each file individually, or find a place to mirror an
archive of them.  (iBiblio)
</note>
</body>
</section>
</chapter>

<chapter>
<title>libtool.eclass</title>
<section>
<body>
This eclass patches <c>ltmain.sh</c> distributed with libtoolized packages with the
relink and portage patch
</body>
</section>
</chapter>

<chapter>
<title>makeedit.eclass</title>
<section>
<body>
makeedit eclass, will remove <c>-Wreturn-type</c> and <c>-Wall</c> from compiling, this will reduce the RAM requirements.
</body>
</section>
</chapter>

<chapter>
<title>mount-boot.eclass</title>
<section>
<body>
</body>
</section>
</chapter>

<chapter>
<title>nsplugins.eclass</title>
<section>
<body>
Just some re-usable functions for the netscape/moz plugins sharing
</body>
</section>
</chapter>

<chapter>
<title>perl-module.eclass</title>
<section>
<body>
The perl-module eclass is designed to allow easier installation of perl
modules, and their incorporation into the Gentoo Linux system.
</body>
</section>
</chapter>

<chapter>
<title>perl-post.eclass</title>
<section>
<body>
The perl-post eclass is designed to allow the <path>${installarchdir}/perllocal.pod</path>
file to be updated cleanly after perl and/or perl-modules are installed
or removed.
</body>
</section>
</chapter>

<chapter>
<title>vim.eclass</title>
<section>
<body>
Ripped from the vim ebuilds. src_compile and install
should be integrated in at some point
</body>
</section>
</chapter>

<chapter>
<title>virtualx.eclass</title>
<section>
<body>
This eclass can be used for packages that needs a working X environment to build
</body>
</section>
</chapter>

</guide>
