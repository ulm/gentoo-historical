<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/handbook/hb-install-finalise.xml,v 1.9 2003/11/23 16:27:02 swift Exp $ -->

<sections>
<section>
<title>User Administration</title>
<subsection>
<title>Setting a root Password</title>
<body>

<p>
Before you forget, set the root password by typing:
</p>

<pre caption="Setting the root password">
# <i>passwd</i>
</pre>

</body>
</subsection>
<subsection>
<title>Adding a User for Daily Use</title>
<body>

<p>
Working as root on a Unix/Linux system is <e>dangerous</e> and should be avoided
as much as possible. Therefor it is <e>strongly</e> recommended to add a user 
for day-to-day use.
</p>

<p>
For instance, to create a user called <c>john</c> who is member of the
<c>wheel</c> group (be able to change to root using <c>su</c>), <c>users</c>
group (default for all users) and <c>audio</c> group (be able to use audio
devices):
</p>

<pre caption="Adding a user for day-to-day use">
# <i>useradd john -m -G users,wheel,audio -s /bin/bash</i>
# <i>passwd john</i>
Password: <comment>(Enter the password for john)</comment>
Re-enter password: <comment>(Re-enter the password to verify)</comment>
</pre>

<p>
If this user ever needs to perform some task as root, he can use <c>su -</c> to
temporarily receive root privileges. Another way is to use the <c>sudo</c> 
package which is, if correctly configured, very secure.
</p>

</body>
</subsection>
</section>
<section>
<title>Reboot and Enjoy</title>
<subsection>
<title>Rebooting</title>
<body>

<p>
Congratulations! Your Gentoo system is now ready. Run <c>etc-update</c> to
update the configuration files (if needed), exit the chrooted environment and
unmount all mounted partitions. Then type in that one magical command you have
been waiting for: <c>reboot</c>.
</p>

<pre caption="Rebooting the system">
# <i>etc-update</i>
# <i>exit</i>
# <i>cd /</i>
# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
# <i>reboot</i>
</pre>

<p>
Of course, don't forget to remove the bootable CD, otherwise the CD will be
booted again instead of your new Gentoo system.
</p>

<p>
OldWorld PPC users will boot in MacOS since their bootloader
isn't installed yet. Those users should read <uri
link="#doc_chap2_sect2">Optional: Configuring BootX</uri>. GRP users can
continue with <uri link="#doc_chap2_sect3">Optional: Install Extra 
Packages</uri>, all the rest can finish up with <uri 
link="?part=1&amp;chap=12">Where to go from here?</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Optional: Configuring BootX</title>
<body>

<impo>
This subsection is <e>only</e> for PPC-users who want to use BootX as
bootloader. All other readers should skip this subsection.
</impo>

<p>
Now your machine is booted in MacOS, open the BootX control panel.
Select <c>Options</c>, and uncheck <c>Used specified RAM disk</c>. When you 
return to the BootX main screen, you will now find an option to specify your
machine's root disk and partition. Fill these in with the appropriate
values.
</p>

<p>
BootX can be configured to start Linux upon boot. If you do this, you will
first see your machine boot into MacOS then, during startup, BootX will
load and start Linux. See the <uri
link="http://penguinppc.org/projects/bootx/">BootX home page</uri> for more 
information.
</p>

<p>
If you are a GRP users you can continue with <uri
link="#doc_chap2_sect3">Optional: Install Extra Packages</uri>, otherwise go to
<uri link="?part=1&amp;chap=12">Where to go from here?</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Optional: Install Extra Packages</title>
<body>

<impo>
This part is for GRP users only. Other users should skip this part and continue
with <uri link="?part=1&amp;chap=12">Where to go from here?</uri>.
</impo>

<p>
Now that your system is booted, log on as the user you created (for instance,
<c>john</c>) and use <c>su -</c> to gain root privileges:
</p>

<pre caption="Gaining root privileges">
$ <i>su -</i>
Password: <comment>(Enter your root password)</comment>
</pre>

<p>
Now we need to copy over the prebuild binaries from the second CD (CD-2) if you
have it. First mount this CD:
</p>

<pre caption="Mount the CD-2">
<comment>(Put CD-2 in the CD tray)</comment>
# <i>mount /mnt/cdrom</i>
</pre>

<p>
Now copy over all prebuild binaries from the CD to
<path>/usr/portage/packages</path>. Make sure you use the same copy-command!
</p>

<pre caption="Copy over prebuild binaries">
# <i>cp -a /mnt/cdrom/packages/* /usr/portage/packages/</i>
</pre>

<p>
Now install the packages you want. CD-2 contains several prebuild binaries, for
instance KDE:
</p>

<pre caption="Installing KDE">
# <i>emerge --usepkg kde</i>
</pre>

<p>
Be sure to install the binaries now. When you do an <c>emerge sync</c> to update
Portage (as you will learn later), the prebuilt binaries might not match against
the ebuilds in your updated Portage. You can try to circumvent this by using
<c>emerge --usepkgonly</c> instead of <c>emerge --usepkg</c>.
</p>

<p>
Congratulations, your system is now fully equiped! Continue with <uri
link="?part=1&amp;chap=12">Where to go from here?</uri> to learn more about
Gentoo.
</p>

</body>
</subsection>
</section>
</sections>
