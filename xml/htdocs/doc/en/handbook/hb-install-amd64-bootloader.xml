<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/handbook/Attic/hb-install-amd64-bootloader.xml,v 1.3 2004/04/05 18:30:20 swift Exp $ -->

<sections>
<section>
<title>Making your Choice</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Now that your kernel is configured and compiled and the necessary system
configuration files are filled in correctly, it is time to install a
program that will fire up your kernel when you start the system. Such a
program is called a <e>bootloader</e>.
</p>

</body>
</subsection>
<subsection>
<title>Optional: Framebuffer</title>
<body>

<p>
<e>If</e> you have configured your kernel with framebuffer support, you
have to add a <c>vga</c>-statement to your bootloader configuration
file if you require framebuffer. The next table lists the available 
<c>vga</c>-values you can use. In the example configuration files we use 
<e>800x600 @ 16bpp</e>, thus <e>788</e>.
</p>

<table>
<tr>
  <ti></ti><th>640x480</th><th>800x600</th><th>1024x768</th><th>1280x1024</th>
</tr>
<tr>
  <th>8 bpp</th><ti>769</ti><ti>771</ti><ti>773</ti><ti>775</ti>
</tr>
<tr>
  <th>16 bpp</th><ti>785</ti><ti>788</ti><ti>791</ti><ti>794</ti>
</tr>
<tr>
  <th>32 bpp</th><ti>786</ti><ti>789</ti><ti>792</ti><ti>795</ti>
</tr>
</table>

<p>
Remember (or write down) your value; you will need it shortly hereafter.
</p>

</body>
</subsection>
</section>
<section>
<title>Using GRUB</title>
<subsection>
<title>Understanding GRUB's terminology</title>
<body>

<p>
The most critical part of understanding GRUB is getting comfortable with
how GRUB refers to hard drives and partitions. Your Linux partition
<path>/dev/hda1</path> is called <path>(hd0,0)</path> under GRUB. Notice the 
parenthesis around the <path>hd0,0</path> - they are required.
</p>

<p>
Hard drives count from zero rather than "a" and partitions start at zero 
rather than one. Be aware too that with the hd devices, only hard drives are 
counted, not atapi-ide devices such as cdrom players and burners.  Also, the 
same construct is used with scsi drives. (Normally they get higher numbers 
than ide drives except when the bios is configured to boot from scsi devices.)
</p>

<p>
Assuming you have a hard drive on <path>/dev/hda</path>, a cdrom player on 
<path>/dev/hdb</path>, a burner on <path>/dev/hdc</path>, a second hard drive 
on <path>/dev/hdd</path> and no SCSI hard drive, <path>/dev/hdd7</path> gets 
translated to <path>(hd1,6)</path>. It might sound tricky and tricky it is 
indeed, but as we will see, GRUB offers a tab completion mechanism
that comes handy for those of you having a lot of hard drives and
partitions and who are a little lost in the GRUB numbering scheme.
</p>

<p>
Having gotten the feel for that, it is time to install GRUB.
</p>

</body>
</subsection>
<subsection>
<title>Installing GRUB</title>
<body>

<p>
To install GRUB, let's first emerge it. 
</p>

<pre caption = "Installing GRUB">
# <i>emerge --usepkg grub-static</i>
# <i>cp -Rpv /usr/share/grub/i386-pc/* /boot/grub</i>
</pre>

<p>
Once installed, we need to put GRUB in the MBR (Master Boot Record) of your disk
so that your system activates it when you boot up. We use the
<c>grub-install</c> tool to safely setup GRUB.
</p>

<pre caption="Setting up GRUB">
# <i>grub-install --root-directory=/boot /dev/hda</i>
</pre>

<note>
If your system does not have any floppy drives, add the <c>--no-floppy</c>
option to the above command to prevent grub from probing the (non-existing) 
floppy drives. Also, if you don't have a separate <path>/boot</path> partition,
omit the <c>--root-directory=/boot</c> option.
</note>

<p>
Although GRUB is now installed, we still need to write up a
configuration file for it, so that GRUB automatically boots your newly
created kernel. Create <path>/boot/grub/grub.conf</path> with
<c>nano</c> (or, if applicable, another editor):
</p>

<pre caption = "Creating /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Now we are going to write up a <path>grub.conf</path>. Beneath you'll
find two possible <path>grub.conf</path> for the partitioning example we use 
in this guide, with kernel image <path>kernel-2.4.24</path>. We've only
extensively commented the first <path>grub.conf</path>. 
</p>

<ul>
  <li>
    The first <path>grub.conf</path> is for people who have not used 
    <c>genkernel</c> to build their kernel
  </li>
  <li>
    The second <path>grub.conf</path> is for people who have used
    <c>genkernel</c> to build their kernel
  </li>
</ul>

<pre caption = "grub.conf for non-genkernel users">
<comment># Which listing to boot as default. 0 is the first, 1 the second etc.</comment>
default 0
<comment># How many seconds to wait before the default listing is booted.</comment>
timeout 30
<comment># Nice, fat splash-image to spice things up :)
# Comment out if you don't have a graphics card installed</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.24
<comment># Partition where the kernel image (or operating system) is located</comment>
root (hd0,0)
kernel /kernel-2.4.24 root=/dev/hda3

<comment># The next three lines are only if you dualboot with a Windows system.</comment>
<comment># In this case, Windows is hosted on /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
chainloader +1
</pre>


<pre caption = "grub.conf for genkernel users">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.24
root (hd0,0)
kernel /kernel-2.4.24 root=/dev/ram0 init=/linuxrc real_root=/dev/hda3
initrd /initrd-2.4.24

<comment># Only in case you want to dual-boot</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>


<note>
If you use a different partitioning scheme and/or kernel image, adjust 
accordingly. However, make sure that anything that follows a GRUB-device 
(such as <path>(hd0,0)</path>) is relative to the mountpoint, not the root. In 
other words, <path>(hd0,0)/grub/splash.xpm.gz</path> is in reality 
<path>/boot/grub/splash.xpm.gz</path> since <path>(hd0,0)</path> is 
<path>/boot</path>.
</note>

<p>
If you need to pass any additional options to the kernel, simply add
them to the end of the kernel command. We're already passing one option
(<c>root=/dev/hda3</c> or <c>real_root=/dev/hda3</c>), but you can pass others 
as well. As an example we use the <c>vga</c> statement for framebuffer we 
discussed previously:
</p>

<pre caption = "Adding the vga-statement as a kernel option">
title=Gentoo Linux
  root (hd0,0)
  kernel /kernel-2.4.24 root=/dev/hda3 vga=788
</pre>

<p>
<c>genkernel</c> users should know that their kernels use the same boot options
as is used for the LiveCD. For instance, if you have SCSI devices, you should
add <c>doscsi</c> as kernel option.
</p>

<p>
Now save the <path>grub.conf</path> file and exit. As of now, GRUB is
fully configured, and you can continue with <uri
link="?part=1&amp;chap=10">Installing Necessary System Tools</uri>.
</p>

<p>
If you have more questions regarding GRUB, please consult the <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> or the <uri
link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

</body>
</subsection>
</section>
</sections>
