<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/handbook/draft/Attic/hb-working-portage.xml,v 1.12 2004/09/24 15:14:09 swift Exp $ -->

<sections>
<section>
<title>Welcome to Portage</title>
<body>

<p>
Portage is probably Gentoo's most notable innovation in software management.
With its high flexibility and enormous amount of features it is frequently seen
as the best software management tool available for Linux.
</p>

<p>
Portage is completely written in <uri link="http://www.python.org">Python</uri>
and <uri link="http://www.gnu.org/software/bash">Bash</uri> and therefore fully
visible to the users as both are scripting languages.
</p>

<p>
Most users will work with Portage through the <c>emerge</c> tool. This chapter
is not meant to duplicate the information available from the emerge man page. 
For a complete rundown of emerge's options, please consult the man page:
</p>

<pre caption="Reading the emerge man page">
$ <i>man emerge</i>
</pre>

</body>
</section>
<section>
<title>The Portage Tree</title>
<subsection>
<title>Ebuilds</title>
<body>

<p>
When we talk about packages, we often mean software titles that are available to
the Gentoo users through the Portage tree. The Portage tree is a collection of
<e>ebuilds</e>, files that contain all information Portage needs to maintain
software (install, search, query, ...). These ebuilds reside in
<path>/usr/portage</path> by default.
</p>

<p>
Whenever you ask Portage to perform some action regarding software titles, it
will use the ebuilds on your system as a base. It is therefore important that
you regularly update the ebuilds on your system so Portage knows about new
software, security updates, etc.
</p>

</body>
</subsection>
<subsection>
<title>Updating the Portage Tree</title>
<body>

<p>
The Portage tree is usually updated with <uri
link="http://rsync.gentoo.org">rsync</uri>, a fast incremental file transfer
utility. Updating is fairly simple as the <c>emerge</c> command provides a
front-end for rsync:
</p>

<pre caption="Updating the Portage tree">
# <i>emerge sync</i>
</pre>

<p>
If you are unable to rsync due to firewall restrictions you can still update
your Portage tree by using our daily generated portage tree snapshots. The
<c>emerge-webrsync</c> tool automatically fetches and installs the latest
snapshot on your system:
</p>

<pre caption="Running emerge-webrsync">
# <i>emerge-webrsync</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Maintaining Software</title>
<subsection>
<title>Searching for Software</title>
<body>

<p>
To search through the Portage tree after software titles, you can use
<c>emerge</c> built-in search capabilities. By default, <c>emerge search</c>
returns package names whos title corresponds with (either fully or partially)
the given search term.
</p>

<p>
For instance, to search for all packages who have "pdf" in their name:
</p>

<pre caption="Searching for pdf-named packages">
$ <i>emerge search pdf</i>
</pre>

<p>
If you want to search through the descriptions as well you can use the
<c>--searchdesc</c> (or <c>-S</c>) switch:
</p>

<pre caption="Searching for pdf-related packages">
$ <i>emerge --searchdesc pdf</i>
</pre>

<p>
When you take a look at the output, you'll notice that it gives you a lot of
information. The fields are clearly labelled so we won't go further into their
meanings:
</p>

<pre caption="Example emerge search output">
*  net-print/cups-pdf
      Latest version available: 1.5.2
      Latest version installed: [ Not Installed ]
      Size of downloaded files: 15 kB
      Homepage:    http://cip.physik.uni-wuerzburg.de/~vrbehr/cups-pdf/
      Description: Provides a virtual printer for CUPS to produce PDF files.
      License:     GPL-2
</pre>

</body>
</subsection>
<subsection>
<title>Installing Software</title>
<body>

<p>
Once you've found a software title to your liking, you can easily install it
with <c>emerge</c>: just add the package name. For instance, to install
<c>gnumeric</c>:
</p>

<pre caption="Installing gnumeric">
# <i>emerge gnumeric</i>
</pre>

<p>
Since many applications depend on each other, any attempt to install a certain
software package might result in the installation of several dependencies as
well. Don't worry, Portage handles dependencies well. If you want to find out
what Portage <e>would</e> install when you ask it to install a certain package,
add the <c>--pretend</c> switch. For instance:
</p>

<pre caption="Pretend to install gnumeric">
# <i>emerge --pretend gnumeric</i>
</pre>

<p>
When you ask Portage to install a package, it will download the necessary source
code from the internet (if necessary) and store it by default in
<path>/usr/portage/distfiles</path>. After this it will unpack, compile and
install the package. If you want Portage to only download the sources without
installing them, add the <c>--fetchonly</c> option to the <c>emerge</c> command:
</p>

<pre caption="Download the sourcecode for gnumeric">
# <i>emerge --fetchonly gnumeric</i>
</pre>

</body>
</subsection>
<subsection>
<title>Removing Software</title>
<body>

<p>
When you want to remove a software package from your system, use <c>emerge
unmerge</c>. This will tell Portage to remove all files installed by that
package from your system <e>except</e> the configuration files of that
application if you have altered those after the installation. Leaving the
configuration files allows you to continue working with the package if you ever
decide to install it again.
</p>

<p>
However, a <brite>big warning</brite> applies: Portage will <e>not</e> check if 
the package you want to remove is required by another package. It will however
warn you when you want to remove an important package that breaks your system 
if you unmerge it.
</p>

<pre caption="Removing gnumeric from the system">
# <i>emerge unmerge gnumeric</i>
</pre>

<p>
When you remove a package from your system, the dependencies of that package
that were installed automatically when you installed the software are left. To
have Portage locate all dependencies that can now be removed, use
<c>emerge</c>'s <c>depclean</c> functionality. We will talk about this later on.
</p>

</body>
</subsection>
<subsection>
<title>Updating your System</title>
<body>

<p>
To keep your system in perfect shape (and not to mention install the latest
security updates) you need to update your system regularly. Since Portage only
checks the ebuilds in your Portage tree you first have to update your Portage
tree. When your Portage tree is updated, you can update your system with
<c>emerge --update world</c>:
</p>

<pre caption="Updating your system">
# <i>emerge --update world</i>
</pre>

<p>
Portage will then search for newer version of the applications you have
installed. However, it will only verify the versions for the applications you
have explicitly installed - not the dependencies. If you want to update every
single package on your system, add the <c>--deep</c> argument:
</p>

<pre caption="Updating your entire system">
# <i>emerge --update --deep world</i>
</pre>

<p>
If you have altered any of your <uri link="?part=2&amp;chap=2">USE flags</uri>
lately you might want to add <c>--newuse</c> as well. Portage will then verify
if the change requires the installation of new packages or recompilation of
existing ones:
</p>

<pre caption="Performing a full update">
# <i>emerge --update --deep --newuse world</i>
</pre>

</body>
</subsection>
<subsection>
<title>Stub Packages</title>
<body>

<p>
Packages like kde and using depclean
</p>

</body>
</subsection>
</section>
<section>
<title>When Portage is Complaining...</title>
<subsection>
<title>About SLOTs, Virtuals, Branches and Architectures</title>
<body>

<p>
Introduction to these aspects (usertalk).
</p>

</body>
</subsection>
<subsection>
<title>Blocked Packages</title>
<body>

<p>
unblocking blocked packages
</p>

</body>
</subsection>
<subsection>
<title>Masked Packages</title>
<body>

<p>
Explain what the Portage "all instances of ... have been masked" means.
<e>No</e> solution!
</p>

</body>
</subsection>
</section>
</sections>
