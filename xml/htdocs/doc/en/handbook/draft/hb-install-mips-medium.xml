<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/handbook/draft/Attic/hb-install-mips-medium.xml,v 1.8 2005/01/01 15:50:49 swift Exp $ -->

<sections>

<version>1.3</version>
<date>2004-05-09</date>

<section>
<title>Hardware Requirements</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Before we start, we first list what hardware requirements you need to
successfully install Gentoo on your box. 
</p>

</body>
</subsection>
<subsection>
<title>Hardware Requirements</title>
<body>

<table>
<tr>
  <th>Memory</th>
  <ti>64 MB</ti>
</tr>
<tr>
  <th>Diskspace</th>
  <ti>1.5 GB (excluding swap space)</ti>
</tr>
<tr>
  <th>Swap space</th>
  <ti>At least 256 MB</ti>
</tr>
</table>

<p>
You should also check the <uri link="/doc/en/mips-requirements.xml">MIPS 
Hardware Requirements</uri> document available from our website.
</p>

</body>
</subsection>
</section>
<!-- Only the stuff about the stages is replicated from the
     hb-install-x86-medium.xml file since MIPS uses netbooting 
     -->
<!-- START -->
<section>
<title>The Gentoo Installation Approaches</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Gentoo Linux can be installed using one of three <e>stage</e> tarball files.
A stage file is a tarball (compressed archive) that contains a minimal
environment.
</p>

<ul>
  <li>
     A stage1 file contains nothing more than a compiler, Portage (Gentoo's
     software management system) and a couple of packages on which the compiler
     or Portage depends.
   </li>
   <li>
     A stage2 file contains a so-called bootstrapped system, a minimal
     environment from which one can start building all other necessary
     applications that make a Gentoo environment complete.
   </li>
   <li>
     A stage3 file contains a prebuilt minimal system which is almost fully
     deployable. It only lacks a few applications where you, the Gentoo user,
     needs to choose which one you want to install.
   </li>
</ul>

<p>
To help you decide what stage file you want to use, we have written down the
major advantages and disadvantages of each stage file.
</p>

</body>
</subsection>
<subsection>
<title>A Stage1 Approach</title>
<body>

<p>
A <e>stage1</e> is used when you want to bootstrap and build the entire system 
from scratch.
</p>

<p>
Starting from a stage1 allows you to have total control over the
optimization settings and optional build-time functionality that is
initially enabled on your system. This makes <e>stage1</e> installs good for
power users who know what they are doing. It is also a great
installation method for those who would like to know more about the
inner workings of Gentoo Linux.
</p>

<table>
<tr>
  <th>Stage1</th>
  <th>Pros and Cons</th>
</tr>
<tr>
  <th>+</th>
  <ti>
    Allows you to have total control over the optimization settings and optional
    build-time functionality that is initially enabled on your system
  </ti>
</tr>
<tr>
  <th>+</th>
  <ti>Suitable for powerusers that know what they are doing</ti>
</tr>
<tr>
  <th>+</th>
  <ti>Allows you to learn more about the inner workings of Gentoo</ti>
</tr>
<tr>
  <th>-</th>
  <ti>Takes a long time to finish the installation</ti>
</tr>
<tr>
  <th>-</th>
  <ti>
    If you don't intend to tweak the settings, it is a waste of time
  </ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>A Stage2 Approach</title>
<body>

<p>
A <e>stage2</e> is used for building the entire system from a bootstrapped
"semi-compiled" state.
</p>

<p>
Stage2 installs allow you to skip the bootstrap process; doing this
is fine if you are happy with the optimization settings that we chose
for your particular stage2 tarball.
</p>

<table>
<tr>
  <th>Stage2</th>
  <th>Pros and Cons</th>
</tr>
<tr>
  <th>+</th>
  <ti>You don't need to bootstrap</ti>
</tr>
<tr>
  <th>+</th>
  <ti>Faster than starting with stage1</ti>
</tr>
<tr>
  <th>+</th>
  <ti>You can still tweak your settings</ti>
</tr>
<tr>
  <th>-</th>
  <ti>You cannot tweak as much as with a stage1</ti>
</tr>
<tr>
  <th>-</th>
  <ti>It's still not the fastest way to install Gentoo</ti>
</tr>
<tr>
  <th>-</th>
  <ti>You have to accept the optimizations we chose for the bootstrap</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>A Stage3 Approach</title>
<body>

<p>
A <e>stage3</e> installation contains a basic Gentoo Linux system that has been
built for you. You will only need to build a few packages of which we can't
decide for you which one to choose.
</p>

<p>
Choosing to go with a stage3 allows for the fastest install of Gentoo
Linux, but also means that your base system will have the optimization
settings that we chose for you (which to be honest, are good settings
and were carefully chosen to enhance performance while maintaining
stability). Stage3 is also required if you want to install Gentoo using
prebuilt packages or without a network connection.
</p>

<table>
<tr>
  <th>Stage3</th>
  <th>Pros and Cons</th>
</tr>
<tr>
  <th>+</th>
  <ti>Fastest way to get a Gentoo base system</ti>
</tr>
<tr>
  <th>-</th>
  <ti>You cannot tweak the base system - it's built already</ti>
</tr>
</table>

<p>
You might be interested to know that, if you decide to use different 
optimization settings after having installed Gentoo, you will be able to 
recompile your entire system with the new optimization settings.
</p>

</body>
</subsection>
</section>
<section>
<title>Net Booting</title>
<subsection>
<title>MIPS Net Boot Images</title>
<body>

<p>
In case your system has a network interface and BIOS/ROM capable of performing 
a netboot (PXE) you can have it download a small system at boot time and 
install from that system onwards.
</p>

<p>
You should already have a working DHCP and TFTP server. Information on setting
up a <uri link="/doc/en/diskless-howto.xml#doc_chap3">DHCP server</uri> and <uri
link="/doc/en/diskless-howto.xml#doc_chap4">TFTP server</uri> are available in
the <uri link="/doc/en/diskless-howto.xml">Diskless-HOWTO</uri>. 
</p>

<p>
Depending on your setup, you might need to create or download a kernel image for
your system.
</p>

</body>
</subsection>
<subsection>
<title>Net Booting your MIPS System</title>
<body>

<p>
To be able to install Gentoo, the image you download from the TFTP server should
provide the necessary tools to create filesystems, create and mount partitions,
extract a tarball and chroot. You can download existing net boot images which
have all tools in them...
</p>

<p>
First download one of the available net boot images from one of <uri
link="/main/en/mirrors.xml">our mirrors</uri>. The net boot images are available
in the <path>experimental/mips/netboot</path> directory.
</p>

<p>
Now configure your DHCP server to send this file to the booting client. SGI
machines however need some minor tweaks to the host system in order for TFTP to
work properly:
</p>

<pre caption="Some fixes to SGI machines to have TFTP work properly">
<comment>(Disable "Path Maximum Transfer Unit", otherwise SGI Prom won't find the kernel)</comment>
# <i>echo 1 &gt; /proc/sys/net/ipv4/ip_no_pmtu_disc</i>
<comment>(Set the port range usable by the SGI Prom)</comment>
# <i>echo "2048 32767" &gt; /proc/sys/net/ipv4/ip_local_port_range</i>
</pre>

<p>
Now power on your machine, get into the PROM monitor and issue the command to
boot the kernel over the network:
</p>

<pre caption="Net booting a MIPS">
        Running power-on diagnostics

System Maintenance Menu

1) Start System
2) Install System Software
3) Run Diagnostics
4) Recover System
5) Enter Command Monitor

Option? <i>5</i>
Command Monitor. Type "exit" to return to the menu.
&gt;&gt; <i>bootp(): root=/dev/ram0</i>
</pre>

<note>
You may have to press the Esc key to get into the menu above, otherwise, the
system will attempt to boot the system directly. 
</note>

<p>
Sometimes netbooting is a tricky endeavour. The following PROM commands below
may help, but this is not guaranteed. If your machine refuses to netboot, double
check things on the host TFTP machine to make sure that:
</p>

<ul>
  <li>dhcpd is giving the SGI Machine an IP Address</li>
  <li>
    Permissions are set properly in your tftp folder (typically 
    <path>/tftpboot</path>)
  </li>
  <li>
    Check system logs to see what the tftp server is reporting (errors
    perhaps)
  </li>
  <li>
    Pray to a Tux plushie (this may or may not work, and is not an officially
    supported troubleshooting technique)
  </li>
</ul>

<pre caption="Net booting tricks">
&gt;&gt; <i>resetenv</i>
&gt;&gt; <i>unsetenv netaddr</i>
&gt;&gt; <i>unsetenv dlserver</i>
&gt;&gt; <i>init</i>
&gt;&gt; <i>bootp(): root=/dev/ram0</i>
</pre>

<p>
If all things go well, you are now dropped off at busybox' <c>ash</c> shell. You
can then continue with <uri link="?part=1&amp;chap=3">Configuring your
Network</uri>.
</p>

</body>
</subsection>
</section>
</sections>
