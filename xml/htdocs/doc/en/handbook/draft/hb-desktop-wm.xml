<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/handbook/draft/Attic/hb-desktop-wm.xml,v 1.4 2004/04/25 16:29:07 swift Exp $ -->

<sections>
<section>
<title>What Window Managers does Gentoo support?</title>
<subsection>
<title>What is a Window Manager Anyway?</title>
<body>

<p>
Our previous chapters spoke about <e>Desktop Environments</e>. The difference
between a Desktop Environment and a <e>Window Manager</e> is that a Desktop
Environment contains a Window Manager together with various applications and
X clients which create a common graphical user interface. A Window Manager is an
X client application which controls how windows are positioned and such.
</p>

<p>
To that respect, Window Managers are slim and quick but don't contain all the
features of a desktop environment. But because they are slim and quick they are
also very popular.
</p>

</body>
</subsection>
<subsection>
<title>What Window Managers does Gentoo Provide?</title>
<body>

<p>
There are several Window Managers out there. Just take a look inside
<path>/usr/portage/x11-wm</path>:
</p>

<pre caption="Checking the available Window Managers">
# <i>ls /usr/portage/x11-wm/</i>
</pre>

<p>
As you can imagine, it's quite difficult to go document every possibility. We
will explain some window managers and their specifics - if your favorite window
manager is missing, you're free to write up a small section. Just create a <uri
link="http://bugs.gentoo.org">bugreport</uri> for it and we'll make sure it gets
added to this document.
</p>

</body>
</subsection>
<subsection>
<title>How Do I Proceed?</title>
<body>

<p>
First of all, choose the Window Manager you want and simply <c>emerge</c> it.
For instance, to install the FluxBox Window Manager:
</p>

<pre caption="Installing FluxBox">
# <i>emerge fluxbox</i>
</pre>

<p>
Once this is finished, you need to make sure that your Window Manager is started
when you run <c>startx</c>. For instance:
</p>

<pre caption="Configuring your Session to run FluxBox">
$ <i>echo "exec fluxbox" &gt; ~/.xinitrc</i>
</pre>

<p>
When you run <c>startx</c>, you'll be greeted by your Window Manager.
</p>

</body>
</subsection>
<subsection>
<title>What about xdm/kdm/gdm?</title>
<body>

<p>
In case you want to log on graphically, you have to add <c>xdm</c> to your
default runlevel. Unlike other distributions, Gentoo has opted to not alter the
initlevel for this task:
</p>

<pre caption="Adding XDM to the default runlevel">
# <i>rc-update add xdm default</i>
</pre>

<p>
Now edit <path>/etc/rc.conf</path> and select the logon manager of your choice.
If you have installed GNOME or KDE, then you can use <c>gdm</c> or <c>kdm</c>
respectively. Otherwise you'll need to stick with <c>xdm</c>:
</p>

<pre caption="Editing /etc/rc.conf to select the logon manager">
DISPLAYMANAGER="xdm"
</pre>

<p>
Then take a look inside <path>/etc/X11/Sessions</path> and see if you find the
session name for your Window Manager. For instance, FluxBox has <c>fluxbox</c>
as its session name. Alter the XSESSION variable inside
<path>/etc/rc.conf</path> to have your logon manager start your Window Manager
by default:
</p>

<pre caption="Editing /etc/rc.conf to select the default window manager">
XSESSION="fluxbox"
</pre>

</body>
</subsection>
</section>
<section>
<title>Fluxbox</title>
<subsection>
<title>Configuration</title>
<body>

<p>
Per default, fluxbox uses the configuration files in
<path>/usr/share/fluxbox</path>. However, you probably want to be able to change
the configuration locally (for your user) without messing with the system-wide
settings. To do so, you must copy over the configuration files into
<path>~/.fluxbox</path>:
</p>

<pre caption="Copying over the fluxbox configuration files">
$ <i>mkdir ~/.fluxbox</i>
$ <i>cd /usr/share/fluxbox</i>
$ <i>cp menu init keys ~/.fluxbox</i>
</pre>

<p>
Now open the configuration file <path>init</path> in <path>~/.fluxbox</path> and
alter the following two configuration directives:
</p>

<pre caption="Changing two configuration directives in ~/.fluxbox/init">
session.keyFile: <i>~/.fluxbox/keys</i>
session.menuFile: <i>~/.fluxbox/menu</i>
</pre>

<p>
These changes allow you to change your menu and key bindings from the files in
<path>~/.fluxbox</path> instead of <path>/usr/share/fluxbox/</path>.
</p>

<p>
More information on the FluxBox configuration possibilities is available on the
<uri link="http://www.fluxbox.org">FluxBox Website</uri>.
</p>

</body>
</subsection>
<subsection>
<title>The Menu</title>
<body>

<p>
To make optimal usage of FluxBox, the first thing you'll probably want to do is
to edit the FluxBox menu. Edit <path>~/.fluxbox/menu</path> to accomplish this.
The used syntax in this file is pretty self explanatory.
</p>

<p>
You start your menu with <c>[begin]</c> and end it with <c>[end]</c>. Within
your menu you can create application links using <c>[exec]</c> or submenus using
<c>[submenu] ... [end]</c>.
</p>

<p>
The <c>[exec]</c> statement takes a name (which will be visible in the menu)
inside <c>(...)</c>. The command itself should be placed within <c>{...}</c>.
</p>

<p>
There are a few special menu tags available as well. <c>[workspaces]</c> will
insert the list of available workspaces for FluxBox in the menu.
<c>[stylesdir]</c> allows you to specify where the FluxBox styles (frequently
seen as themes) reside. You can define multiple <c>[stylesdir]</c> if you want.
Finally, you have <c>[config]</c> (to get the configuration tabs),
<c>[reconfig]</c> (which allows you to reread the FluxBox configuration file
while running FluxBox) and <c>[exit]</c> to gracefully quit the FluxBox session.
</p>

</body>
</subsection>
<subsection>
<title>Autogenerating the Menu</title>
<body>

<p>
Lazy people might want to have their menu generated automatically. FluxBox
provides a script called <c>fluxbox-generate_menu</c>. Run it with the <c>-h</c>
option to see what you can do with this script:
</p>

<pre caption="Getting the online help for fluxbox-generate_menu">
$ <i>fluxbox-generate_menu -h</i>
</pre>

<p>
As an example, we generate a menu entitled "FluxBox Menu" with a backgrounds
menu, aterm as our favorite terminal and mozilla as our favorite browser.
</p>

<pre caption="Example generation of a FluxBox menu">
$ <i>fluxbox-generate_menu -m "FluxBox Menu" -B -t aterm -b mozilla</i>
</pre>

</body>
</subsection>
</section>

<section>
<title>Openbox</title>
<subsection>
<title>Configuration</title>
<body>

<p>
By default, Openbox will use the config files found in 
<path>/usr/share/openbox</path>.  While the defaults are pretty good, you 
might want to build your own custom configuration.  To have something to work 
from, copy the system-wide config files into <path>~/.config/openbox/</path>:
</p>

<pre caption="Copying system-wide files">
$ <i>mkdir ~/.config/openbox</i>
$ <i>cd /usr/share/openbox</i>
$ <i>cp ... ~/.config/openbox/</i>
</pre>

<p>
Most users will want to use the graphical tool ObConf for configuring most of 
your settings, so go ahead and install that:
</p>

<pre caption="Installing obconf">
# <i>emerge -av obconf</i>
</pre>

<p>
Now you can run <path>/usr/bin/obconf</path> to set many of the visual 
settings in openbox.  If you'd like more themes, they are found in the 
package <path>x11-themes/openbox-themes</path>.  Grab them with the 
following command:
</p>

<pre caption="Installing Openbox Themes">
# <i>emerge -av openbox-themes</i>
</pre>

<p>
More information about Openbox configuration options is available on the <uri 
link="http://www.openbox.org">Openbox Website</uri>.
</p>

</body>
</subsection>
<subsection>
<title>The Menu</title>
<body>

<p>
All Openbox configuration files are written in xml.  If you're familiar with 
xml, this will be helpful but is by no means necessary.  We'll be working from 
the system defaults, so code can be copy-pasted and modified without needing 
to worry about too much of the syntax.
</p>

<p>
Menus are specified in the <path>rc.xml</path> file's <c>menu</c> section.  
If no menus are specified, Openbox will look for <path>menu.xml</path>.  Menus 
are referenced in the following format:
</p>

<pre caption="Menu format">
&lt;menu&gt;
  &lt;location&gt;mymenu.xml&lt;/location&gt;
  &lt;location&gt;myothermenu.xml&lt;/location&gt;
  &lt;location&gt;/usr/share/openbox/menu.xml&lt;/location&gt;
&lt;/menu&gt;
</pre>

<p>
In any given menu file, the menu specified will look something like this:
</p>

<pre caption="Openbox Menu">
&lt;openbox_menu&gt;
  &lt;menu id="apps" label="Applications"&gt;

    &lt;menu id="term_emus" label="Terminal Emulators" /&gt;
      &lt;item label="xterm"&gt;
        &lt;action name="Execute"&gt;&lt;execute&gt;xterm -ls&lt;/execute&gt;&lt;/action&gt;
      &lt;/item&gt;

      &lt;item label="eterm"&gt;
        &lt;action name="Execute"&gt;&lt;execute&gt;eterm&lt;/execute&gt;&lt;/action&gt;
      &lt;/item&gt;
    &lt;/menu&gt;

    &lt;item label="Xchat"&gt;
      &lt;action name="Execute"&gt;&lt;execute&gt;xchat&lt;/execute&gt;&lt;/action&gt;
    &lt;/item&gt;

    &lt;separator /&gt;

    &lt;menu id="pipe_menu" label="Dynamic Menu" execute="~/bin/menu.sh" /&gt;

  &lt;/menu&gt;
&lt;/openbox_menu&gt;
</pre>

<p>
ACTIONS? LABELS? More information about menu customization, including using 
script output to build dynamic menus can be found in the Openbox docs <uri 
link="http://icculus.org/openbox/docs.php?page=details.html#menus">menus</uri> 
and <uri link="http://icculus.org/openbox/docs.php?page=details.html#actions">actions</uri> 
sections.
</p>

</body>
</subsection>
<subsection>
<title>Themes</title>
<body>

<p>
A theme can be selected using the ObConf tool under the <c>Themes</c> tab.  
Alternatively, you can specify your theme by editing your <path>rc.xml</path> 
file.
</p>

<p>
Local themes are stored in <path>~/.local/share/themes/</path>.  Information 
about writing custom themes can be found on the Openbox docs <uri 
link="http://icculus.org/openbox/docs.php?page=config.html#themes">theme</uri> page.
</p>

</body>
</subsection>
</section>

</sections>
