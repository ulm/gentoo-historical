<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/handbook/draft/2006.0/Attic/hb-install-mips-kernel.xml,v 1.1 2006/02/12 13:54:32 nightmorph Exp $ -->

<sections>

<version>1.15</version>
<date>2006-01-06</date>

<section>
<title>Timezone</title>
<body>

<p>
You first need to select your timezone so that your system knows where it is
located. Look for your timezone in <path>/usr/share/zoneinfo</path>, then copy
it to <path>/etc/localtime</path>. Please avoid the
<path>/usr/share/zoneinfo/Etc/GMT*</path> timezones as their names do not
indicate the expected zones. For instance, <path>GMT-8</path> is in fact GMT+8.
</p>

<pre caption="Setting the timezone information to GMT">
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installing the Sources</title>
<subsection>
<title>Choosing a Kernel</title>
<body>

<p>
The core around which all distributions are built is the Linux kernel. It is the
layer between the user programs and your system hardware. Gentoo provides its
users several possible kernel sources. A full listing with description is
available at the <uri link="/doc/en/gentoo-kernel.xml">Gentoo Kernel
Guide</uri>. 
</p>

<p>
MIPS-based systems can choose from <c>mips-sources</c> (the default kernel
source for the MIPS architecture) and <c>mips-prepatch-sources</c> (prerelease
kernel tree).
</p>

<p>
Choose your kernel source and install it using <c>emerge</c>.  Of course
substitute with your choice of sources, this is merely an example.  The
<c>USE="-doc"</c> is necessary to avoid installing xorg-x11 or other
dependencies at this point. <c>USE="symlink"</c> is not necessary for a new
install, but ensures proper creation of the <path>/usr/src/linux</path>
symlink.
</p>

<note>
Special patches are needed to make a kernel work on Cobalt servers.  The
<c>cobalt</c> USE flag must be defined in order to grab the necessary patches
and apply them.
</note>

<pre caption="Installing a kernel source">
<comment>(For SGI machines)</comment>
# <i>USE="-doc symlink" emerge mips-sources</i>

<comment>(For Cobalt machines)</comment>
# <i>mkdir -p /etc/portage</i>
# <i>echo "sys-kernel/mips-sources cobalt" &gt;&gt; /etc/portage/package.use</i>
# <i>USE="-doc symlink" emerge mips-sources</i>
</pre>

<p>
When you take a look in <path>/usr/src</path> you should see a symlink called
<path>linux</path> pointing to your kernel source. In this case, the installed
kernel source points to <c>mips-sources-2.4.24</c>. Your version may be
different, so keep this in mind.
</p>

<pre caption="Viewing the kernel source symlink">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.24
</pre>

<p>
Now it is time to configure and compile your kernel source. 
</p>

</body>
</subsection>
</section>
<section>
<title>Kernel Compilation &amp; Installation</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Previously, we went through the manual configuration of how to set up the kernel
sources.  Instead, we have uploaded a number of sample configurations which you
can base your configuration upon.  Simply click on the closest option that
matches your system and kernel version.  You may also find other configuration
samples at the URLs mentioned below.
</p>

<table>
  <tr>
    <th>System</th>
    <th>Kernel Version</th>
  </tr>
  <tr>
    <ti>SGI IP22 (Indy, Indigo 2, Challenge S)</ti>
    <ti>
      <uri link="http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config/2.4.29-mipscvs-20050130.gz">2.4.29</uri>
    </ti>
  </tr>
  <tr>
    <ti>Cobalt Qube/Raq 2800</ti>
    <ti>
      <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-2605.config">2.6.5</uri>
      <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-2606.config">2.6.6</uri>
      <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-config-2609">2.6.9</uri>
    </ti>
  </tr>
</table>

<ul>
  <li>
    IP22 (Indy, Indigo2, Challenge S) Configurations:
    <uri link="http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config">
      http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config
    </uri>
  </li>
  <li>
    Cobalt Server Configurations:
    <uri link="http://dev.gentoo.org/~kumba/mips">
      http://dev.gentoo.org/~kumba/mips
    </uri>
  </li>
</ul>

<note>
More kernel configuration examples can be found on the Gentoo/MIPS Hardware
Support Database, which is located at
<uri>http://stuartl.longlandclan.hopto.org/gentoo/mips</uri>.
</note>

<p>
Once you have found a configuration, download it into your kernel source
directory, and rename it to <path>.config</path>.  From there, you can run
<c>make oldconfig</c> to bring everything up to date, and allow you to customise
the configuration before compiling.
</p>

<pre caption="Configuring the kernel">
# <i>cd /usr/src/linux</i>
# <i>cp /path/to/example-config .config</i>
# <i>make oldconfig</i>
<comment>(Just press ENTER at each prompt to accept the defaults... we'll customise later)</comment>
# <i>make menuconfig</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Compiling and Installing</title>
<body>

<p>
Now that your kernel is configured, it is time to compile and install it. Exit 
the configuration and start the compilation process:
</p>

<pre caption="Compiling the kernel">
<comment>(For 2.4 kernel)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(For 2.6 kernel)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
When the kernel has finished compiling, copy the kernel image to
<path>/boot</path>. 
</p>

<note>
On Cobalt servers, the bootloader will expect to see a compressed kernel image.
Remember to <c>gzip -9</c> the file once it is in <path>/boot</path>. In the
following example, replace <path>&lt;kernel-version&gt;</path> with your kernel
version.
</note>

<pre caption="Installing the kernel">
# <i>cp vmlinux /boot/&lt;kernel-version&lt;</i>
<comment>(Cobalt Servers -- Compressing the kernel image)</comment>
# <i>gzip -9v /boot/&lt;kernel-version&lt;</i>
</pre>

<!--
Moot point, now that we use arcboot on SGI, and CoLo on Cobalts
<p>
If your system doesn't boot ELF kernels, compile the
kernel using <c>make vmlinux.ecoff</c> instead of <c>make vmlinux</c>. The
kernel image will be saved as <path>arch/mips/boot/vmlinux.ecoff</path> instead
of <path>vmlinux</path>.
</p>
-->
</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Installing Separate Kernel Modules</title>
<subsection>
<title>Configuring the Modules</title>
<body>

<p>
You should list the modules you want automatically loaded in one of the relevant
files listed below.  You can add extra options to the modules too if you want.
</p>

<ul>
  <li><path>/etc/modules.autoload.d/kernel-2.4</path> - Kernel 2.4 only</li>
  <li><path>/etc/modules.autoload.d/kernel-2.6</path> - Kernel 2.6 only</li>
  <li><path>/etc/modules.autoload</path> - All Kernels</li>
</ul>

<p>
Therefore, if you have a kernel module that you want to load -- which is common
to both 2.4 and 2.6, then place it in <path>/etc/modules.autoload</path>.
Otherwise it can be placed in the appropriate file.
</p>

<p>
To view all available modules, run the following <c>find</c> command. Don't
forget to substitute "&lt;kernel version&gt;" with the version of the kernel you
just compiled:
</p>

<pre caption="Viewing all available modules">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
For instance, to automatically load the <c>3c59x.o</c> module, edit the
appropriate file and enter the module name in it.
</p>

<pre caption="Editing /etc/modules.autoload.d/kernel-2.4">
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 or kernel-2.6">
3c59x
</pre>

<p>
This can be also done in a one-liner:
</p>

<pre caption="Adding a module -- the one-liner method">
# <i>echo '3c59x' >> /etc/modules.autoload.d/kernel-2.4</i>
<comment>(or kernel-2.6, or /etc/modules.autoload...)</comment>
</pre>

<p>
Continue the installation with <uri link="?part=1&amp;chap=8">Configuring 
your System</uri>.
</p>

</body>
</subsection>
</section>
</sections>
