<section>
<subsection>
<title>Making your Choice</title>
<body>

<p>
Now that your kernel is configured and compiled, it is time to install a
program that will fire up your kernel when you start the system. Such a
program is called a <e>bootloader</e>. But before you start, consider
your options...
</p>

<p>
Several bootloaders exist for Linux. Some work on several architectures,
others only on a single one. Either way, you must choose between the
bootloaders that support your architecture.
</p>

<p>
The next table lists the architectures and the supported bootloaders.
Pick a bootloader based on your architecture. For instance, if you have
a Pentium IV, then your architecture is <e>x86</e>. You have the choice
between GRUB (recommended) and LILO.
</p>

<table>
 <tr><th>Architecture</th><th>Recommended</th><th>Alternatives</th></tr>
 <tr><th>x86</th><ti>GRUB</ti><ti>LILO</ti></tr>
 <tr><th>alpha</th><ti>aBoot</ti><ti>MILO</ti></tr>
 <tr><th>sparc</th><ti>SILO</ti><ti></ti></tr>
 <tr><th>ppc</th><ti>yaBoot (NewWorld), BootX (OldWorld)</ti><ti></ti></tr>
 <tr><th>hppa</th><ti>PALO</ti><ti></ti></tr>
</table>

</body>
</subsection>
<subsection>
<title>Default: Using GRUB</title>
<subsubsection>
<title>Understanding GRUB's terminology</title>
<body>

<warn>
GRUB can only be used with x86-based systems!
</warn>

<p>
The most critical part of understanding GRUB is getting comfortable with
how GRUB refers to hard drives and partitions. Your Linux partition
<path>/dev/hda1</path> is called <path>(hd0,0)</path> under GRUB. Notice the 
parenthesis around the <path>hd0,0</path> - they are required.
</p>

<p>
Hard drives count from zero rather than "a" and partitions start at zero 
rather than one. Be aware too that with the hd devices, only hard drives are 
counted, not atapi-ide devices such as cdrom players and burners.  Also, the 
same construct is used with scsi drives. (Normally they get higher numbers 
than ide drives except when the bios is configured to boot from scsi devices.)
</p>

<p>
Assuming you have a hard drive on <path>/dev/hda</path>, a cdrom player on 
<path>/dev/hdb</path>, a burner on <path>/dev/hdc</path>, a second hard drive 
on <path>/dev/hdd</path> and no SCSI hard drive, <path>/dev/hdd7</path> gets 
translated to <path>(hd1,6)</path>. It might sound tricky and tricky it is 
indeed, but as we will see, GRUB offers a tab completion mechanism
that comes handy for those of you having a lot of hard drives and
partitions and who are a little lost in the GRUB numbering scheme.
</p>

<p>
Having gotten the feel for that, it is time to install GRUB.
</p>

</body>
</subsubsection>
<subsubsection>
<title>Installing GRUB</title>
<body>

<p>
To install GRUB, let's first emerge it:
</p>

<pre caption = "Installing GRUB">
# <i>emerge -k grub</i>
</pre>

<p>
To start configuring GRUB, you type in <c>grub</c>. You'll be presented
with the <path>grub&gt;</path> grub command-line prompt. Now, you need to type 
in the right commands to install the GRUB boot record onto your hard drive.
</p>

<pre caption = "Starting the GRUB shell">
# <i>grub</i>
</pre>

<p>
In the example configuration we want to install GRUB so that it reads its 
information from the boot-partition <path>/dev/hda1</path>, and installs the 
GRUB boot record on the hard drive's MBR (master boot record) so that the first
thing we see when we turn on the computer is the GRUB prompt. Ofcourse, if you
haven't followed the example configuration during the installation,
change the commands accordingly.
</p>

<p>
The tab completion mechanism of GRUB can be used from within GRUB.
For instance, if you type in "<c>root (</c>" followed by a TAB, you will
be presented with a list of devices (such as <path>hd0</path>). If you
type in "<c>root (hd0,</c>" followed by a TAB, you will receive a list
of available partitions to choose from (such as <path>hd0,0</path>).
</p>

<p>
By using the tab completion, setting up GRUB should be not that hard.
Now go on, configure GRUB, shall we? :-)
</p>

<pre caption = "Installing GRUB in the MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(Use information from the boot partition)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Install GRUB in the MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Exit the GRUB shell)</comment>
</pre>

<note>
If you want to install GRUB in a certain partition instead of the MBR,
you have to alter the <c>setup</c> command so it points to the right
partition. For instance, if you want GRUB installed in
<path>/dev/hda3</path>, then the command becomes <c>setup (hd0,2)</c>.
Few users however want to do this.
</note>

<p>
Although GRUB is now installed, we still need to write up a
configuration file for it, so that GRUB automatically boots your newly
created kernel. Create <path>/boot/grub/grub.conf</path> with
<c>nano</c> (or, if applicable, another editor):
</p>

<pre caption = "Creating /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Now we are going to write up a <path>grub.conf</path>. Beneath you'll
find a <path>grub.conf</path> for the partitioning example we use in
this guide, with kernel image <path>kernel-2.4.22-gentoo-r2</path>.
</p>

<pre caption = "grub.conf content">
default 0                               <comment># Which listing to boot default. 0 is the first, 1 the second etc.</comment>
timeout 30                              <comment># How many seconds to wait before the default listing is booted.</comment>        
splashimage=(hd0,0)/grub/splash.xpm.gz  <comment># Nice, fat splash-image to spice things up :)</comment>

title=Gentoo Linux
root (hd0,0)                            <comment># Partition where the kernel image (or operating system) is located</comment>
kernel (hd0,0)/kernel-2.4.22-gentoo-r2 root=/dev/hda3
<comment># Only if you use genkernel. Otherwise ignore the following line:</comment>
initrd (hd0,0)/initrd-2.4.22-gentoo-r2

<comment># The next three lines are only if you dualboot with a Windows system.</comment>
<comment># In this case, Windows is hosted on /dev/hda6.</comment>
title=Windows XP
root (hd0,5)
chainloader (hd0,5) +1
</pre>

<note>
If you use a different partitioning scheme and/or kernel image, adjust 
accordingly. However, make sure that anything that follows a GRUB-device 
(such as <path>(hd0,0)</path>) is relative to the mountpoint, not the root. In 
other words, <path>(hd0,0)/grub/splash.xpm.gz</path> is in reality 
<path>/boot/grub/splash.xpm.gz</path> since <path>(hd0,0)</path> is 
<path>/boot</path>.
</note>

<p>
If you need to pass any additional options to the kernel, simply add
them to the end of the kernel command. We're already passing one option
(<c>root=/dev/hda3</c>), but you can pass others as well.
</p>

<p>
Now save the <path>grub.conf</path> file and exit. As of now, GRUB is
fully configured, and you can continue with configuring the rest of the
system.
</p>

</body>
</subsubsection>
</subsection>
<subsection>
<title>Alternative: Using LILO</title>
<body>

<p>
Warn some architectures only. Explain pro/con of lilo, how it works, how
to install and configure.
</p>

</body>
</subsection>
<subsection>
<title>Alternative: Using aboot</title>
<body>

<p>
Warn about some architectures only. Explain how it works, how to install
and configure.
</p>

</body>
</subsection>
<subsection>
<title>Alternative: Using SILO</title>
<body>

<p>
Warn about some architectures only. Explain how it works, how to install
and configure.
</p>

</body>
</subsection>
<subsection>
<title>Alternative: Using milo</title>
<body>

<p>
Warn about some architectures only. Explain how it works, how to install
and configure.
</p>

</body>
</subsection>
<subsection>
<title>Alternative: Using PALO</title>
<body>

<p>
Warn about some architectures only. Explain how it works, how to install
and configure.
</p>

</body>
</subsection>
<subsection>
<title>Alternative: Using yaBoot</title>
<body>

<p>
Warn about some architectures only. Explain how it works, how to install
and configure.
</p>

</body>
</subsection>
<subsection>
<title>Alternative: BootX</title>
<body>

<p>
Warn about some architectures only. Explain how it works, how to install
and configure.
</p>

</body>
</subsection>
</section>
