<?xml version='1.0' encoding="UTF-8"?>

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/fluxbox-config.xml,v 1.4 2005/04/16 20:07:17 swift Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/en/fluxbox-config.xml">

<title>The Fluxbox Configuration HOWTO</title>

<author title="Author">
  <mail link="smith.jonathan@gmail.com">Jonathan Smith</mail>
</author>

<abstract>
This howto will show you how to set up the Fluxbox windows manager for X11.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->
<license/>

<version>1.0.4</version>
<date>2005-04-16</date>

<chapter>
<title>Introduction</title>
<section>
<title>Introduction to the Fluxbox window manager</title>
<body>

<p>
For those who are unfamiliar with Linux's desktop model, window managers (WMs)
are the applications which are run by X11 to manage other graphical programs.
While these are by no means required, an X11 session without a WM is quite ugly
and does not contain many of the functions commonly associated with a modern
desktop.
</p>

<p>
Fluxbox is a WM which has a much more minimalist philosophy than more popular
ones such as KDE or GNOME. While it serves the same basic purpose, Fluxbox
lacks a graphical file manager, icons, a "start-menu"esque organization, and
extra utilities. However, it is quite possible to obtain these and more if one
so desires. This allows for the ultimate ability to customize, which is after
all what Gentoo is about.
</p>

<p>
This guide is aimed at those who are new to Fluxbox, curious, or who
are just wanting to get more out of the Gentoo/Fluxbox experience. This guide
will also illustrate how to get more (yet quite optional) functionality by
using third party programs which work well with Fluxbox.
</p>

<p>
Also note that since early 2005, XFree86 has been dropped from Gentoo Portage.
This means that this guide is assuming the reader is using Xorg. If not, then
this guide may nonetheless be accurate, but it does not attempt to provide
cross-compatibility with XFree. Gentoo recommends changing to Xorg by <c>emerge
xorg-x11</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installing Fluxbox</title>
<section>
<title>Base installation</title>
<body>

<p>
Gentoo provides an ebuild to quickly and easily install Fluxbox. While Gentoo
provides the USE flags of <c>gnome</c> and <c>kde</c> which are to provide
"compatibility" for those WMs, it has not been the author's experience that
those are needed. If you desire qt, gtk+, or any KDE/GNOME utility then you are
free to emerge and configure those independently. For example, the author uses
Fluxbox with k3b, the KDE CD-R(W) burning utility.
</p>

<p>
It is also necessary to have a program lock the X display to prevent
unauthorized access, so it would be wise to also emerge <c>xlock</c>. The vast
majority of users will also want the ability to set their own background, so we
will emerge <c>eterm</c>, which doubles as a nice X11 terminal.
</p>

<pre caption="Emerging Fluxbox">
# <i>emerge fluxbox xlockmore x11-terms/eterm</i>
</pre>

<p>
Well, thats it; Fluxbox is now installed! However, it is likely that you will
not be able to use it efficiently with just those tools. The following sections
will help install other potentially necessary packages, and configure Fluxbox
and the third party programs to work for you. Keep in mind that all these steps
are optional, so feel free to pick and choose.
</p>


</body>
</section>
</chapter>
<chapter>
<title>Configuring Fluxbox</title>
<section>
<title>Preparing X11</title>
<body>

<p>
Fluxbox is simply another program that X11 runs. If desired, one can
<c>startx</c> and then type <c>fluxbox</c> at an xterm. However, this is
annoying to say the least. If one does not desire to boot to the GUI, but
instead wants to start X11 manually, it is possible to have X automatically
load Fluxbox by executing, as a normal (non-root) user:
</p>

<pre caption="Editing your xinit">
$ <i>echo fluxbox > ~/.xinitrc</i>
</pre>

<p>
This is also not ideal for most users, as they want to have the desktop
environment all the time; it is a pain to <c>startx</c> if it is desired to use
a GUI everytime you boot. It also presents a security risk to the unaware. If
one locks the X11 display using <c>xlock</c>, but run X11 from a console, then
someone with physical access to the computer can switch to that console, kill
X11, and use your account. The only way to prevent this is to either background
X11 or run it in screen, detach the screen, and then logout of the console, a
tedious task at best. If one uses a graphical login manager, this problem does
not exist. However, you will be running X11 as root, which may be a bad thing.
There are, as of this writing, no exploits that the author is aware of for the
current version, but if one is concerned, then either not use X11 or use the
above method with screen. Note that this is not a Fluxbox issue, but affects
X11 itself.
</p>

<!--
thanks to Josh Nichols for helping cleanup this section. see comment #4 on bug
87330
-->

<p>
There are a number of graphical login managers to choose from; we will be using
gdm. You may use another manager at your option, but gdm works well for
Fluxbox, as well as any other WMs you may have installed such as GNOME, KDE, or
xfce.
</p>

<pre caption="Login Manager">
# <i>emerge gdm</i>
# <i>rc-update add xdm default</i>
</pre>

<impo>
Be sure to emerge gdm and add xdm to the bootscript, and not the other way
around! Switching these will cause failure. We will also need to modify one
system-wide config file:
</impo>

<pre caption="Editing /etc/rc.conf">
DISPLAYMANAGER="gdm"
</pre>

</body>
</section>
<section>
<title>Themes and Artwork</title>
<body>

<p>
This section can be skipped if one truly wants a minimal footprint. However, it
is nice to allow users to customize their WM's appearance. Themes specific to
Fluxbox, Gentoo artwork for any WM, and themes that can be used on any *box WM
will be installed.
</p>

<pre caption="Installing styles and artwork">
# <i>emerge commonbox-styles commonbox-styles-extra \
  fluxbox-styles-fluxmod gentoo-artwork</i>
</pre>

</body>
</section>
<section>
<title>Fluxbox Syntax for Vim</title>
<body>

<p>
Next, install the special Fluxbox color scheme for <c>vim</c>. This enables
users to more readily see the contents of their keys and init files for
Fluxbox. This is a quite small extension for vim, so it is highly recommended
(unless of course you are one of those emacs people, in which case I recommend
<c>emerge -C emacs &amp;&amp; emerge vim gvim</c> ;-).
</p>

<pre caption="Emerging Fluxbox Syntax">
# <i>emerge fluxbox-syntax</i>
</pre>


</body>
</section>
<section>
<title>Fluxbox Keys</title>
<body>

<p>
Fluxbox comes with a very weak set of default keysets. It enables a user to
switch windows and desktops, and no more. Before changing it, there are a few
things necessary to know. In the Fluxbox keys file, there are some strange
modifiers. Mod1 is commonly known as the "Alt" key, and Mod4 is the unspeakable
(windows) key. Control and Shift are Control and Shift. However, it is usually
best to use Alt/Windows keys because other X11 programs tend to use Control and
Shift for their own shortcuts.
</p>

<p>
All of these are independent, so feel free to leave out anything not desired,
or modify this to your own needs. This guide uses what the author assumes to be
the most common programs, so also substitute the name of the package used if it
differs from what appears here. For more information, read the man page for
Fluxbox.
</p>

<p>
So, with that out of the way, fire up a text editor (non-root user), point it
to <path>~/.fluxbox/keys</path>, and lets upgrade those shortcuts!
</p>

<pre caption="Modifying Keyboard Shortcuts">
<comment># locks X11 display to the current user</comment>
Mod4 l   :ExecCommand xlock

<comment># opens a number of programs with quickkeys. These are just examples, I am sure
# you get the point...</comment>
Mod1 f   :ExecCommand firefox
Mod1 t   :ExecCommand thunderbird
Mod1 o   :ExecCommand oowriter
Mod1 v   :ExecCommand gvim

<comment># Fluxbox has no sound control, so we need to do a hack to get one
# (assumes alsa usage. if you use oss, then you are on your own)</comment>
Mod1 e   :ExecCommand Eterm -name alsa -e alsamixer

<comment># Program Control. It just makes life simpler...</comment>
Mod1 4   :Close
Mod1 m   :Minimize

<comment># if you have aterm (emerge x11-terms/aterm), then this opens a really nice
# transparent aterm with no borders, fitting nicely with 1024x768
# resolution, while still leaving room for torsmo. Once again, feel free to
# modify.</comment>
Mod1 a   :ExecCommand aterm -name aterm -sl 3000 -tr +sb -sr -sk -bg black -fg \
white -fade 90 -bl -tn xterm -fn \
-misc-fixed-medium-r-normal-*-*-120-*-*-c-*-iso8859-15 -g 116x57

<comment># similar to the above, but opens a transparent rooted terminal. you must, of
# course, know the root password to use this</comment>
Mod1 s   :ExecCommand aterm -name aterm -sl 3000 -tr +sb -sr -sk -bg black -fg \
white -fade 90 -bl -tn xterm -fn \
-misc-fixed-medium-r-normal-*-*-120-*-*-c-*-iso8859-15 -g 116x57 -e su -
</pre>

</body>
</section>
<section>
<title>System Monitor</title>
<body>

<p>
It is a common desire to setup a system monitor for X11 on desktop systems.
Gkrellm is a commonly used monitor, but in the spirit of Fluxbox minimalism, we
are going to use a simpler monitor: Torsmo. If desired, use another monitor;
there are plenty of howto's elsewhere.
</p>

<pre caption="Installing torsmo">
# <i>emerge torsmo</i>
</pre>

<p>
The default config file for Torsmo is rather weak, but more info can be found
by reading the manpage or <uri
link="http://torsmo.sourceforge.net/readme.php">the readme</uri>.
</p>

</body>
</section>
<section>
<title>Icons</title>
<body>

<p>
Fluxbox does not come with a utility or program to draw icons to the desktop;
everything is handled by keyboard shortcuts, or the right-click menu. However,
it is possible to use a program to generate icons. Despite the name, idesk is
not affiliated with Apple or Mac (to the best of the author's knowledge).
</p>

<pre caption="Installing idesk">
# <i>emerge idesk</i>
</pre>

<!--
if someone wants to write a better description of idesk, feel free. it would be
appreciated!
-->

<p>
Once installed, it will be necessary to add icons to the program. Idesk's icons
are handled in their config file, found at <path>~/.ideskrc</path>. This is a
rather lengthy task, and can't well be covered in this guide. For more
information, <c>man idesk</c> and look at the <uri
link="http://idesk.sourceforge.net/usage.html">usage guide</uri>.
</p>

</body>
</section>
<section>
<title>Setting a theme, background, and a startup script</title>
<body>

<p>
Fluxbox has a number of themes that can be accessed by the right click menu,
then "Fluxbox menu," and "System Styles." These themes usually set their own
background, which is either a single color or a gradient of some type. Most
people prefer to set their own background, and keep it no matter what theme
they chose. To do so, we need to edit another of Fluxbox's files, which governs
startup behavior. So fire up that text editor again, and point it to
<path>~/.fluxbox/startup</path>.
</p>

<p>
If this file exists, then clear it. Add the following to the newly created
file, uncommenting as needed, and filling in values for the CAPS.
</p>

<pre caption="Editing Startup scripts for Fluxbox">
<comment># Gentoo's Fluxbox startup script

# Programs which need to run constantly, as opposed to a one time execution,
# need "&amp;" at the end of the command.

# Show the Fluxbox splash-screen
#fbsetbg -C /usr/share/fluxbox/splash.jpg

# This sets a background. You must have a program setup to do this
# (x11-terms/eterm is recommended)
#bsetbg -f PATH_TO_IMAGE

# Custom fonts directory
#xset +fp PATH_TO_FONT_DIRECTORY

# Starts the icons program
#idesk &amp;

# Launches the Torsmo system monitor
#torsmo &amp;

# This MUST be the last command!</comment>
exec /usr/bin/fluxbox -log ~/.fluxbox/log
</pre>

</body>
</section>
<section>
<title>Menu generation</title>
<body>

<p>
The author uses a text editor to create menus, believing that menumakers
introduce too much clutter, often skip important packages, and don't always
work well with the styles Gentoo installs. However, many disagree, so the
instructions below show how to use two of the more common menu generators.
</p>

<p>
Both of these programs provide a good organizational system, and it is possible
to edit <path>~/.fluxbox/menu</path> by hand after using them, to either add
packages or delete those which aren't used. Note that if something is deleted
from this menu, it does not delete the package from the system, just from the
individual user's menu. The program can still be run by command-line.
</p>

<p>
There is a program already on your system called <c>fluxbox-generate_menu</c>,
who's behaviour is similar to that of <c>mmaker</c>. This program does a better
job handling styles, but does not detect as many programs. To use it, simply
run the command. To install and use <c>mmaker</c>, see below.
</p>

<pre caption="Installing menumaker">
# <i>emerge menumaker</i>
</pre>

<p>
Then, simply run <c>mmaker Fluxbox</c>. However, it is important to note that
while more programs are detected than by using <c>fluxbox-generate_menu</c>,
many major programs are still skipped. For example, neither gaim nor xchat are
found.
</p>

</body>
</section>
<section>
<title>Summary</title>
<body>

<p>
Congratulations! Fluxbox is now installed, configured, and ready to go. If any
questions or suggestions come to mind, please email the author and/or file a
bug report at Gentoo's <uri link="http://bugs.gentoo.org">Bugzilla</uri>.
</p>

</body>
</section>
</chapter>
</guide>
