<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/jffnms.xml,v 1.2 2006/04/15 19:56:03 rane Exp $ -->

<guide link="/doc/en/jffnms.xml" lang="en">
<title>Jffnms Installation and Setup Guide</title>

<author title="Author">
  <mail link="angusyoung@gentoo.org">Otavio R. Piske</mail>
</author>

<abstract>
This guide shows you how to proceed with the post installation setup of Jffnms,
a network management and monitoring system, and how to monitor your systems
with it.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.0</version>
<date>2006-03-10</date>

<chapter>
<title>Jffms Basics</title>
<section>
<title>Introduction</title>
<body>

<p>
<uri link="http://www.jffnms.org">Jffnms</uri> is a network management and
monitoring system. It allows you to grab information from many different kinds
of hosts and protocols. With this guide, we aim to show you how to get Jffnms
properly installed and have your systems monitored by this amazing tool.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Initial Setup</title>
<section>
<title>Installation</title>
<body>

<p>
Just like any package in Portage, jffnms can be installed with <c>emerge</c>:
</p>

<pre caption="Installing Jffnms">
# <i>emerge jffnms</i>
</pre>

<p>
Jffnms should be installed in <path>/opt/jffnms/</path>.
</p>

</body>
</section>
<section>
<title>Configuring Apache 2</title>
<body>

<warn>
This very basic configuration procedure for apache does not cover all aspects
of setting up a web server.
</warn>

<p>
Sometimes you will want to run Jffnms on your local computer instead of a
remote server. If this is your case, it is very likely that you don't have an
apache setup running. Don't worry about installing apache though, Portage has
already done that for you. Nevertheless, you still have to configure and test
apache, which (luckily) is pretty straightforward. Start by adding apache to
your default runlevel:
</p>

<pre caption="Adding apache 2 to the default runlevel">
# <i>rc-update add apache2 default</i>
 * apache2 added to runlevel default
 * rc-update complete.
</pre>

<p>
If you haven't done it yet, it's time to start apache2:
</p>

<pre caption="Starting apache2">
# <i>/etc/init.d/apache2 start</i>
</pre>

<p>
Finally, point your browser at <uri>http://localhost/</uri> and you should be
presented with a home page about your newly installed Apache 2.  Now that we
know that Apache is up and running, we can proceed to the mod_php
configuration.  Fire up your favorite text editor, open
<path>/etc/conf.d/apache2</path> and add <c>-D PHP4</c> the APACHE2_OPTS
variable.
</p>

<pre caption="Apache 2 Configuration">
# <i>nano -w /etc/conf.d/apache2</i>
APACHE2_OPTS="-D DEFAULT_VHOST -D PHP4"
</pre>

<p>
After that, you should create a symlink to the Jffnms install directory in your
Apache document root dir. In Gentoo, by default, Apache uses
<path>/var/www/localhost/htdocs</path> as document root. So, you should do the
following:
</p>

<pre caption="Creating Jffnms symlink">
# <i>cd /var/www/localhost/htdocs &amp;&amp; ln -s /opt/jffnms/htdocs</i>
</pre>

</body>
</section>
<section>
<title>Configuring PHP</title>
<body>

<p>
Now that apache is running, it is time to configure PHP. Jffnms requires that
you set some variables in php.ini in order to run. The php.ini file is usually
located in <path>/etc/php/apache2-php4/php.ini</path>. You have to set these
variables to the following values:
</p>

<pre caption="Configuring PHP">
# <i>nano -w /etc/php/apache2-php4/php.ini</i>
register_globals = On
register_argc_argv = On 
error_reporting  =  E_ALL &amp; ~E_NOTICE
allow_url_fopen = On
include_path = ".:/usr/share/php4:/usr/share/php:/usr/share/php/PEAR"
short_open_tag = On
</pre>

</body>
</section>
<section>
<title>Database setup</title>
<body>

<warn>
Please note again that this a very basic configuration procedure for any
database system and does not cover all aspects of setting up such systems.
</warn>

<p>
Jffnms allows you to use either PostgreSQL or MySQL as its database. Here we'll
show you how to create the database and necessary tables where Jffnms will
store its data.  It's important to note that it isn't necessary to have a
database running localy to run Jffnms and except for the fact that you need to
run this commands on the remote host, the procedure is the same.
</p>

</body>
</section>
<section>
<title>Setting Up PostgreSQL</title>
<body>

<note>
If you already have a PostgreSQL database up and running, you can proceed to
the <uri link="#use-pg">next section</uri>.
</note>

<p>
You should add PostgreSQL to your default runlevel so it's started each time
you boot your computer.
</p>
 
<pre caption="Adding PostgreSQL to the default runlevel">
# <i>rc-update add postgresql default</i>
 * postgresql added to runlevel default
 * rc-update complete.
</pre>

<p>
Now, you must prepare PostgreSQL directories. This is done through the
<c>initdb</c> command.  By default, PostgreSQL data directories are generally
stored in <path>/var/lib/postgresql/data</path>.
</p>

<impo>
The following command must be run with your PostgreSQL user. By default this
user is generally called "postgres".
</impo>
 
<pre caption="Preparing PostgreSQL Directories">
# <i>su - postgres</i>
$ <i>initdb -D /var/lib/postgresql/data</i>
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale C.

creating directory /var/lib/postgresql/data ... ok
creating directory /var/lib/postgresql/data/global ... ok
creating directory /var/lib/postgresql/data/pg_xlog ... ok
creating directory /var/lib/postgresql/data/pg_xlog/archive_status ... ok
creating directory /var/lib/postgresql/data/pg_clog ... ok
creating directory /var/lib/postgresql/data/pg_subtrans ... ok
creating directory /var/lib/postgresql/data/base ... ok
creating directory /var/lib/postgresql/data/base/1 ... ok
creating directory /var/lib/postgresql/data/pg_tblspc ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 1000
creating configuration files ... ok
creating template1 database in /var/lib/postgresql/data/base/1 ... ok
initializing pg_shadow ... ok
enabling unlimited row size for system tables ... ok
initializing pg_depend ... ok
creating system views ... ok
loading pg_description ... ok
creating conversions ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok

WARNING: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the -A option the
next time you run initdb.

Success. You can now start the database server using:

    postmaster -D /var/lib/postgresql/data
or
    pg_ctl -D /var/lib/postgresql/data -l logfile start
</pre>

<p>
If initdb was successfully executed, you can go back to your root user and
start PostgreSQL.
</p>

<pre caption="Starting PostgreSQL">
# <i>/etc/init.d/postgresql start</i>
</pre>

</body>
</section>
<section id="use-pg">
<title>Using PostgreSQL as database</title>
<body>

<p>
Once you have your PostgreSQL set up and running, you have to create a Jffnms
user and a database to store host data. We provide files to do both.
</p>

<note>
If you don't use <path>/usr/portage</path> as your portage dir ($PORTDIR) you
have to change the last part of these commands to whatever your portage dir
is.
</note>

<pre caption="Creating Jffnms user">
# <i>psql template1 postgres &lt; /usr/portage/net-analyzer/jffnms/files/postgresql_db</i>
</pre>

<pre caption="Creating Jffnms database">
# <i>psql template1 postgres &lt; /usr/portage/net-analyzer/jffnms/files/postgresql_db_tables</i>
</pre>

<p>
Finally, you need to create all the tables where data will be stored:
</p>

<pre caption="Creating Jffnms database">
# <i>psql jffnms jffnms &lt; /opt/jffnms/docs/jffnms-0.8.2.pgsql</i>
</pre>

<p>
Once you have run those steps, PostgreSQL database configuration for Jffnms
should be ok.
</p>

</body>
</section>
<section>
<title>Using MySQL as database.</title>
<body>

<warn>
Installing and configuring a MySQL database is not covered in this guide.
Please see our <uri link="/doc/en/mysql-howto.xml">MySQL Startup Guide</uri>.
</warn>

<p>
In case you want to run Jffnms with MySQL, the process is a bit simpler. We
provide two files to create database, user and tables for MySQL.
</p>

<note>
If you don't use <path>/usr/portage</path> as your portage dir ($PORTDIR) you
have to change the last part of these commands to whatever your portage dir
is.
</note>

<pre caption="Create a database and a mysql user.">
# <i>mysql -u <comment>username</comment> -p <comment>password</comment> &lt; /usr/portage/net-analyzer/jffnms/files/mysql_db</i>
</pre>

<pre caption="Create a mysql tables.">
# <i>mysql -u jffnms -pjffnms jffnms &lt; /opt/jffnms/docs/docs/jffnms-0.8.2.mysql</i>
</pre>

</body>
</section>
<section>
<title>UDP Port Monitoring and discovery</title>
<body>

<warn>
This section covers setting up and running suid programs, so it may not be
adequate for systems where security is too much an issue.
</warn>

<p>
If you want UDP port monitoring and discovery, you need to set <c>nmap</c> and
<c>fping</c> as a SUID programs. This may give you security hole in case
there's a bug in one of them. To set them as a SUID you can run the following
commands:
</p>

<pre caption="Setting up udp port monitoring and discovery">
# <i>chmod +s /usr/bin/nmap ; chmod a+x /usr/bin/nmap</i>
# <i>chmod +s /usr/sbin/fping ; chmod a+x /usr/sbin/fping</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Configuring Jffnms</title>
<section>
<title>Configuring the poller process</title>
<body>

<p>
The poller process is responsible for gathering data from hosts. In order to
collect this data at regular intervals, it must be added to crontab.
</p>

<pre caption="Setting up udp port monitoring and discovery">
# <i>crontab -u jffnms /opt/jffnms/docs/unix/crontab</i>
# <i>crontab -e -u jffnms</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Support</title>
<section>
<title>Support</title>
<body>

<p>
Though Jffnms is a wonderful software, it is a bit hard to get it up and
running. So if you run into problems with Jffnms, there are some places where
you can look for help:
</p>

<ul>
  <li>
    <uri link="http://www.jffnms.org/docs/installing.html">Jffnms Installation
    Manual</uri>
  </li>
  <li>
    <uri link="http://www.jffnms.org/docs/jffnms.html">Jffnms Manual</uri>
  </li>
  <li><uri link="http://forums.gentoo.org">Gentoo Forums</uri></li>
</ul>

<p>
You may also run into problems when configuring Apache to work with PHP
(specially if you run both PHP4 and PHP5 on the same system). In that case, our
<uri link="/proj/en/php/php4-php5-configuration.xml">Configuring Apache to Work
with PHP4 and PHP5</uri> guide may give you some help.
</p>

</body>
</section>
</chapter>
</guide>
