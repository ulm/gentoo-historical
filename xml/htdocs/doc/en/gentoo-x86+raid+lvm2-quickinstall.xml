<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/gentoo-x86+raid+lvm2-quickinstall.xml,v 1.17 2007/05/20 20:32:22 nightmorph Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/en/gentoo-x86+raid+lvm2-quickinstall.xml" lang="en">
<title>Gentoo Linux x86 with Software Raid and LVM2 Quick Install Guide</title>

<author title="Author">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Author">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Author">Steven Wagner</author>

<abstract>
The Quick install guide covers the Gentoo install process in a non-verbose
manner. Its purpose is to allow users to perform a stage3 install with software
RAID and LVM2 in no time.  Users should already have prior experience with
installing Gentoo Linux if they want to follow this guide.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>10</version>
<date>2007-05-10</date>

<chapter>
<title>Introduction</title>
<section>
<body>

<p>
This guide contains all commands you should use to complete a stage3
installation including LVM2 on top of software RAID. This guide is targeted at
experienced users. You need a connection to the Internet to download the stage3
and Portage snapshots.
</p>

<p>
Timing output follows all commands that take more than a couple of seconds to
finish. Commands were timed on an AMD 2000 1.66 Ghz PC with 512 Mb of RAM and
two SATA disks connected to a hardware controller configured as JBOD (i.e. two
separate hard disks are seen by Gentoo). If you have a "hardware" RAID
controller on your motherboard, it is most likely <b>not</b> a hardware
controller.
</p>

<pre caption="Test box specs">
<comment>(The following specs and the timing information should help you determine
a rough estimate of the time you need to complete your install)</comment>

# <i>grep bogo /proc/cpuinfo</i>
bogomips       : 3337.81

# <i>hdparm -tT /dev/sda /dev/sdb</i>
/dev/sda:
reads:   1048 MB in  2.00 seconds = 524.00 MB/sec
 Timing buffered disk reads:  152 MB in  3.01 seconds =  50.50 MB/sec

/dev/sdb:
 Timing cached reads:   1048 MB in  2.00 seconds = 524.00 MB/sec
 Timing buffered disk reads:  152 MB in  3.01 seconds =  50.50 MB/sec

# <i>grep MemTotal /proc/meminfo</i>
MemTotal:       509248 kB
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Quick Install Guide</title>
<section>
<title>Installation Media</title>
<body>

<p>
Download a CD from one of our <uri link="/main/en/mirrors.xml">mirrors</uri>.
You can find the minimal CD ISO in
<path>releases/x86/&lt;release&gt;/installcd</path> or the LiveCD ISO in
<path>releases/x86/&lt;release&gt;/livecd</path>. The <e>minimal</e>
installation CD is only useful for Internet-based installations.  You can use
the <e>LiveCD</e> to perform a networkless installation as documented in the
<uri link="/doc/en/handbook/2007.0/handbook-x86.xml">2007.0 x86 installation
handbook</uri>. The minimal CD is recommended.
</p>

<p>
<uri link="/doc/en/faq.xml#isoburning">Burn</uri> the CD and boot it.
</p>

</body>
</section>
<section>
<title>Booting the CD</title>
<body>

<p>
Press
<c>F2</c> at the boot screen to find out what boot options exist. You can
either start <c>gentoo</c> or <c>gentoo-nofb</c>, the latter disables the
framebuffer. If you booted the LiveCD, don't forget to add the <c>nox</c>
option to prevent the X graphical environment from starting. Several options
allow to enable or disable some features. If all goes well, your hardware will
be detected and all modules will be loaded. If the kernel fails to boot
properly or if your computer hangs during the boot procedure, you may have to
experiment with different configurations. The safest way is probably to use the
<c>nodetect</c> option and then load required modules explicitly.
</p>

<pre caption="Boot the minimal CD">
Gentoo Linux Installation LiveCD                     http://www.gentoo.org
Enter to Boot; F1 for kernels  F2 for options.
boot: <i>gentoo-nofb</i>
  <comment>(or in case of problems)</comment>
boot: <i>gentoo-nofb nodetect</i>
</pre>

</body>
</section>
<section>
<title>Optional: loading modules</title>
<body>

<p>
If you used the <c>nodetect</c> option, once booted, load the required modules.
You need to enable networking and have access to your disks. The <c>lspci</c>
command can help you identify your hardware.
</p>

<pre caption="Load required modules">
livecd root # <i>lspci</i>
<comment>(Use lspci's output to identify required modules)</comment>

<comment>(The following is an example, adapt it to your hardware)</comment>
livecd root # <i>modprobe 3w-9xxx</i>
livecd root # <i>modprobe r8169</i>
</pre>

</body>
</section>
<section>
<title>Network Configuration</title>
<body>

<p>
If your network does not work already, you can use <c>net-setup</c> to
configure your network. You might need to load support for your network card
using <c>modprobe</c> prior to the configuration. If you have ADSL, use
<c>pppoe-setup</c> and <c>pppoe-start</c>. If you are using an ADSL router, it
establishes the connection for you and you don't need to run those scripts. For
PPTP support, first edit <path>/etc/ppp/chap-secrets</path> and
<path>/etc/ppp/options.pptp</path> and then use <c>pptp
&lt;server&nbsp;ip&gt;</c>.
</p>

<p>
For wireless access, use <c>iwconfig</c> to set the wireless parameters and then
use either <c>net-setup</c> again or run <c>ifconfig</c>, <c>dhcpcd</c> and/or
<c>route</c> manually.
</p>

<p>
If you are behind a proxy, do not forget to initialize your system using
<c>export http_proxy</c>, <c>ftp_proxy</c> and <c>RSYNC_PROXY</c>.
</p>

<pre caption="Configure networking the guided way">
livecd root # <i>net-setup eth0</i>
</pre>

<p>
Alternatively, you can start networking manually. The following example assigns
the IP address 192.168.1.10 to your PC and defines 192.168.1.1 as your router
and name server.
</p>

<pre caption="Configure networking the manual way">
livecd root # <i>ifconfig eth0 192.168.1.10/24</i>
livecd root # <i>route add default gw 192.168.1.1</i>
livecd root # <i>echo nameserver 192.168.1.1 > /etc/resolv.conf</i>
</pre>

<p>
The installation CD allows you to start an <c>sshd</c> server, add additional
users, run <c>irssi</c> (a command-line chat client) and surf the web using
<c>lynx</c> or <c>links</c>.
</p>

</body>
</section>
<section>
<title>Optional: connect to your new box over ssh</title>
<body>

<p>
The most interesting feature is of course <c>sshd</c>. You can start it and
then connect from another machine and cut and paste commands from this guide.
</p>

<pre caption="Start sshd">
livecd root # <i>time /etc/init.d/sshd start</i>
 * Generating hostkey ...
<comment>(sshd generates the key and displays more output)</comment>
 * starting sshd ...                            [ok]

real   0m13.688s
user   0m9.420s
sys    0m0.090s
</pre>

<p>
Now, set the root password on the liveCD so that you can connect to it from
another PC. Please note that allowing root to connect over ssh is not
recommended under normal circumstances. If you can't trust your local network,
use a long and complex password, you should use it only once as it will
disappear after your first reboot.
</p>

<pre caption="Set the root password">
livecd root # <i>passwd</i>
New UNIX password: <comment>type_a_password</comment>
Retype new UNIX password: <comment>type_a_password</comment>
passwd: password updated successfully
</pre>

<p>
Now, you can start a terminal on another PC and connect to your new box, follow
the rest of this guide in another window, and cut and paste commands.
</p>

<pre caption="Connect to your new box from another PC">
<comment>(Use the IP address of your new box)</comment>
$ <i>ssh root@192.168.1.10</i>
The authenticity of host '192.168.1.10 (192.168.1.10)' can't be established.
RSA key fingerprint is 96:e7:2d:12:ac:9c:b0:94:90:9f:40:89:b0:45:26:8f.
Are you sure you want to continue connecting (yes/no)? <i>yes</i>
Warning: Permanently added '192.168.1.10' (RSA) to the list of known hosts.
Password: <comment>type_the_password</comment>
</pre>

</body>
</section>
<section>
<title>Preparing the Disks</title>
<body>

<p>
Load the software RAID and LVM2 modules.
</p>

<pre caption="Load RAID and LVM2 modules">
livecd ~ # <i>modprobe raid0</i>
livecd ~ # <i>modprobe raid1</i>
<comment>(raid5, raid6 and raid10 are also available)</comment>

livecd ~ # <i>modprobe dm-mod</i>
</pre>

<p>
Use <c>fdisk</c> or <c>cfdisk</c> to create your partition layout.  The device
names are likely to be either <path>/dev/sda</path> and <path>/dev/sdb</path>
for a SATA or SCSI disks, or <path>/dev/hda</path> and <path>/dev/hdb</path>
for IDE disks. The following layout will be used in this guide:
</p>

<table>
  <tr>
    <ti/>
    <th><path>/dev/sda</path></th>
    <th><path>/dev/sdb</path></th>
    <th>Type</th>
  </tr>
  <tr>
    <th><path>/dev/md1</path></th>
    <th><path>/boot</path></th>
    <th><path>/boot</path></th>
    <ti>Raid-1 (mirroring)</ti>
  </tr>
  <tr>
    <th/>
    <th>swap</th>
    <th>swap</th>
    <ti>Normal partitions</ti>
  </tr>
  <tr>
    <th><path>/dev/md3</path></th>
    <th><path>/</path></th>
    <th><path>/</path></th>
    <ti>Raid-1 (mirroring)</ti>
  </tr>
  <tr>
    <th><path>/dev/md4</path></th>
    <th colspan="2">LVM2 volumes</th>
    <ti>Raid-0 (striped)</ti>
  </tr>
</table>

<impo>
The partition you boot from must not be striped. It may not be raid-5 or
raid-0.
</impo>

<note>
On the one hand, if you want extra stability, consider using raid-1 (or even
raid-5) for your swap partition(s) so that a drive failure would not corrupt
your swap space and crash applications that are using it. On the other hand, if
you want extra performance, just let the kernel use distinct swap partitions as
it does striping by default.
</note>

<pre caption="Create the partitions">
livecd ~ # <i>fdisk /dev/sda</i>
<comment>(Make sure you use type fd)</comment>

<comment>(The rest of this guide uses the following partitioning scheme)</comment>
livecd ~ # <i>fdisk -l /dev/sda</i>

Disk /dev/sda: 299.9 GB, 299989204992 bytes
255 heads, 63 sectors/track, 36471 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1          11       88326   fd  Linux raid autodetect
/dev/sda2              12          61      401625   82  Linux swap / Solaris
/dev/sda3              62         311     2008125   fd  Linux raid autodetect
/dev/sda4             312       36471   290455200   fd  Linux raid autodetect

<comment>(Partition the second disk exactly as the first)</comment>
livecd ~ # <i>fdisk /dev/sdb</i>
</pre>

<p>
Then create the RAID device nodes and devices:
</p>

<pre caption="Create device nodes and devices">
livecd ~ # <i>mknod /dev/md1 b 9 1</i>
livecd ~ # <i>mknod /dev/md3 b 9 3</i>
livecd ~ # <i>mknod /dev/md4 b 9 4</i>

livecd ~ # <i>mdadm --create /dev/md1 --level=1 --raid-devices=2 /dev/sda1 /dev/sdb1</i>
mdadm: array /dev/md1 started.
livecd ~ # <i>mdadm --create /dev/md3 --level=1 --raid-devices=2 /dev/sda3 /dev/sdb3</i>
mdadm: array /dev/md3 started.
livecd ~ # <i>mdadm --create /dev/md4 --level=0 --raid-devices=2 /dev/sda4 /dev/sdb4</i>
mdadm: array /dev/md4 started.

<comment>(Wait until all units are ready)</comment>
livecd ~ # <i>cat /proc/mdstat</i>
Personalities : [raid0] [raid1]
md4 : active raid0 sdb4[1] sda4[0]
581006592 blocks 64k chunks

md3 : active raid1 sdb3[1] sda3[0]
1959808 blocks [2/2] [UU]

md1 : active raid1 sdb1[1] sda1[0]
88256 blocks [2/2] [UU]
</pre>

<p>
Then create the LVM2 volumes in <path>/dev/md4</path>. The following scheme is
used as an <b>example</b>:
</p>

<table>
<tr>
  <th>Directory</th>
  <th>Size</th>
  <th>File system</th>
</tr>
<tr>
  <ti>/usr</ti>
  <ti>8 GB</ti>
  <ti>ext3</ti>
</tr>
<tr>
  <ti>/usr/portage</ti>
  <ti>2 GB</ti>
  <ti>ext2, small block size, many inodes</ti>
</tr>
<tr>
  <ti>/usr/portage/distfiles</ti>
  <ti>4 GB</ti>
  <ti>ext2, large bock size, less inodes</ti>
</tr>
<tr>
  <ti>/home</ti>
  <ti>10 GB</ti>
  <ti>ext3</ti>
</tr>
<tr>
  <ti>/opt</ti>
  <ti>4 GB</ti>
  <ti>ext3</ti>
</tr>
<tr>
  <ti>/var</ti>
  <ti>4 GB</ti>
  <ti>ext3</ti>
</tr>
<tr>
  <ti>/var/tmp</ti>
  <ti>6 GB</ti>
  <ti>ext2</ti>
</tr>
<tr>
  <ti>/tmp</ti>
  <ti>2 GB</ti>
  <ti>ext2</ti>
</tr>
</table>

<pre caption="Create LVM2 volumes">
livecd ~ # <i>vgscan</i>
  Reading all physical volumes.  This may take a while...
  No volume groups found
livecd ~ # <i>vgchange -a y</i>
  No volume groups found

<comment>(Create physical volumes, we have only one in our example)</comment>
livecd ~ # <i>pvcreate /dev/md4</i>
  Physical volume "/dev/md4" successfully created

<comment>(Create volume groups, again, we have only one in our example)</comment>
livecd ~ # <i>vgcreate vg /dev/md4</i>
  Volume group "vg" successfully created

<comment>(Create logical volumes)</comment>
livecd ~ # <i>lvcreate -L8G -nusr vg</i>
  /dev/cdrom: open failed: Read-only file system
  Logical volume "usr" created <comment>(Further similar messages not displayed)</comment>
livecd ~ # <i>lvcreate -L2G -nportage vg</i>
livecd ~ # <i>lvcreate -L4G -ndistfiles vg</i>
livecd ~ # <i>lvcreate -L10G -nhome vg</i>
livecd ~ # <i>lvcreate -L4G -nopt vg</i>
livecd ~ # <i>lvcreate -L4G -nvar vg</i>
livecd ~ # <i>lvcreate -L6G -nvartmp vg</i>
livecd ~ # <i>lvcreate -L2G -ntmp vg</i>

<comment>(Display volume groups and logical volumes)</comment>
livecd ~ # <i>vgs</i>
  VG   #PV #LV #SN Attr  VSize   VFree
  vg     1   8   0 wz--n 554.09G 514.09G
livecd ~ # <i>lvs</i>
  LV        VG   Attr   LSize  Origin Snap%  Move Copy%
  distfiles vg   -wi-a-  4.00G
  home      vg   -wi-a- 10.00G
  opt       vg   -wi-a-  4.00G
  portage   vg   -wi-a-  2.00G
  tmp       vg   -wi-a-  2.00G
  usr       vg   -wi-a-  8.00G
  var       vg   -wi-a-  4.00G
  vartmp    vg   -wi-a-  6.00G
</pre>

<p>
Use <c>mke2fs</c>, <c>mke2fs -j</c>, <c>mkreiserfs</c>, <c>mkfs.xfs</c> and
<c>mkfs.jfs</c> to create file systems. Initialize swap using <c>mkswap</c> and
<c>swapon</c>.
</p>

<pre caption="Create the file systems and activate swap">
<comment>(ext2 is all you need on the /boot partition)</comment>
livecd ~ # <i>mke2fs /dev/md1</i>

<comment>(Let's use ext3 on the root partition)</comment>
livecd ~ # <i>mke2fs -j /dev/md3</i>

<comment>(Create file systems on logical volumes)</comment>
livecd ~ # <i>mke2fs -b 4096 -T largefile /dev/vg/distfiles</i>
livecd ~ # <i>mke2fs -j /dev/vg/home</i>
livecd ~ # <i>mke2fs -j /dev/vg/opt</i>
livecd ~ # <i>mke2fs -b 1024 -N 200000 /dev/vg/portage</i>
livecd ~ # <i>mke2fs /dev/vg/tmp</i>
livecd ~ # <i>mke2fs -j /dev/vg/usr</i>
livecd ~ # <i>mke2fs -j /dev/vg/var</i>
livecd ~ # <i>mke2fs /dev/vg/vartmp</i>

<comment>(Create and activate swap)</comment>
livecd ~ # <i>mkswap /dev/sda2 &amp;&amp; mkswap /dev/sdb2</i>
livecd ~ # <i>swapon -p 1 /dev/sda2 &amp;&amp; swapon -p 1 /dev/sdb2</i>
<comment>(Check that all swap partitions use the same priority)</comment>
livecd ~ # <i>swapon -v -s</i>
Filename                   Type            Size    Used    Priority
/dev/sda2                  partition       401616  0       1
/dev/sdb2                  partition       401616  0       1
</pre>

<p>
Mount the freshly created file systems on <path>/mnt/gentoo</path>. Create
directories for the other mount points and mount them too.
</p>

<pre caption="Mount the file systems">
livecd ~ # <i>mount /dev/md3 /mnt/gentoo</i>
livecd ~ # <i>cd /mnt/gentoo</i>
livecd gentoo # <i>mkdir boot home usr opt var tmp</i>
livecd gentoo # <i>mount /dev/md1 /mnt/gentoo/boot</i>
livecd gentoo # <i>mount /dev/vg/usr /mnt/gentoo/usr</i>
livecd gentoo # <i>mount /dev/vg/home /mnt/gentoo/home</i>
livecd gentoo # <i>mount /dev/vg/opt /mnt/gentoo/opt</i>
livecd gentoo # <i>mount /dev/vg/tmp /mnt/gentoo/tmp</i>
livecd gentoo # <i>mount /dev/vg/var /mnt/gentoo/var</i>
livecd gentoo # <i>mkdir usr/portage var/tmp</i>
livecd gentoo # <i>mount /dev/vg/vartmp /mnt/gentoo/var/tmp</i>
livecd gentoo # <i>mount /dev/vg/portage /mnt/gentoo/usr/portage</i>
livecd gentoo # <i>mkdir usr/portage/distfiles</i>
livecd gentoo # <i>mount /dev/vg/distfiles /mnt/gentoo/usr/portage/distfiles</i>

<comment>(Set proper perms on tmp directories)</comment>
livecd gentoo # <i>chmod 1777 /mnt/gentoo/tmp /mnt/gentoo/var/tmp</i>
</pre>

</body>
</section>
<section>
<title>Setting Up The Stage</title>
<body>

<p>
First make sure your date and time is set correctly using <c>date
MMDDhhmmYYYY</c>. Use UTC time.
</p>

<pre caption="Set the date and UTC time">
<comment>(Check the clock)</comment>
livecd gentoo # <i>date</i>
Mon Mar  6 00:14:13 UTC 2006

<comment>(Set the current date and time if required)</comment>
livecd gentoo # <i>date 030600162006</i> <comment>(Format is MMDDhhmmYYYY)</comment>
Mon Mar  6 00:16:00 UTC 2006
</pre>

<p>
Next, download a stage from one of our <uri
link="/main/en/mirrors.xml">mirrors</uri>. Go to <path>/mnt/gentoo</path> and
unpack the stage using <c>tar xjpf &lt;stage3 tarball&gt;</c>.
</p>

<pre caption="Download a stage3 archive">
livecd gentoo # <i>links http://www.gentoo.org/main/en/mirrors.xml</i>
<comment>(Pick a mirror, move to the releases/x86/current/stages directory highlight the
stage3 of your choice, probably the i686 stage3 and press D to download it)</comment>

<comment>(<b>Or</b> download it directly with wget without choosing a nearby mirror)</comment>
livecd gentoo # <i>wget ftp://gentoo.osuosl.org/pub/gentoo/releases/x86/current/stages/stage3-i686*tar.bz2</i>
</pre>

<pre caption="Unpack the stage3 archive">
livecd gentoo # <i>time tar xjpf stage3*</i>

real  1m14.157s
user  1m2.920s
sys   0m7.530s
</pre>

<p>
Install the latest Portage snapshot. Proceed as for the stage3 archive: choose
a nearby mirror from our <uri link="/main/en/mirrors.xml">list</uri>, download
the latest snapshot and unpack it.
</p>

<pre caption="Download the latest Portage snapshot">
livecd gentoo # <i>cd /mnt/gentoo/usr</i>
livecd usr # <i>links http://www.gentoo.org/main/en/mirrors.xml</i>
<comment>(Pick a mirror, move to the snapshots/ directory,
highlight <b>portage-latest.tar.bz2</b> and press D to download it)</comment>

<comment>(<b>Or</b> download it directly with wget without choosing a nearby mirror)</comment>
livecd gentoo # <i>cd /mnt/gentoo/usr</i>
livecd usr # <i>wget http://gentoo.osuosl.org/snapshots/portage-latest.tar.bz2</i>
</pre>

<pre caption="Unpack the Portage snapshot">
livecd usr # <i>time tar xjf portage-lat*</i>

real  0m40.523s
user  0m28.280s
sys   0m8.240s
</pre>

</body>
</section>
<section>
<title>Chrooting</title>
<body>

<p>
Mount the <path>/proc</path> file system, copy over the
<path>/etc/resolv.conf</path> file, then chroot into your Gentoo environment.
</p>

<pre caption="Chroot">
livecd usr # <i>cd /</i>
livecd / # <i>mount -t proc proc /mnt/gentoo/proc</i>
livecd / # <i>cp -L /etc/resolv.conf /mnt/gentoo/etc/</i>
livecd / # <i>chroot /mnt/gentoo /bin/bash</i>
livecd / # <i>env-update &amp;&amp; source /etc/profile</i>
>>> Regenerating /etc/ld.so.cache...
</pre>

</body>
</section>
<section>
<title>Set your time zone</title>
<body>

<p>
Set your time zone information by using the correct listing in
<path>/usr/share/zoneinfo</path>.
</p>

<pre caption="Setting your timezone">
livecd / # <i>ls /usr/share/zoneinfo</i>
<comment>(Using Brussels as an example)</comment>
livecd / # <i>cp /usr/share/zoneinfo/Europe/Brussels /etc/localtime</i>

livecd / # <i>date</i>
Wed Mar  8 00:46:05 CET 2006
</pre>

</body>
</section>
<section>
<title>Set your host name and domain name</title>
<body>

<p>
Set your host name in <path>/etc/conf.d/hostname</path> and
<path>/etc/hosts</path>. In the following example, we use
<c>mybox</c> as host name and <c>at.myplace</c> as domain name.  You can either
edit the config files with <c>nano</c> or use the following commands:
</p>

<pre caption="Set host and domain name">
livecd / # <i>cd /etc</i>
livecd etc # <i>echo "127.0.0.1 mybox.at.myplace mybox localhost" > hosts</i>
livecd etc # <i>sed -i -e 's/HOSTNAME.*/HOSTNAME="mybox"/' conf.d/hostname</i>
<comment>(Use defined host name and check)</comment>
livecd etc # <i>hostname mybox</i>
livecd etc # <i>hostname -f</i>
mybox.at.myplace
</pre>

</body>
</section>
<section>
<title>Kernel Configuration</title>
<body>

<p>
Install a kernel source (usually <c>gentoo-sources</c>), configure it, compile
it and copy the <path>arch/i386/boot/bzImage</path> file to <path>/boot</path>.
</p>

<pre caption="Install a kernel source, compile it and install the kernel">
livecd etc # <i>time emerge gentoo-sources</i>

real  3m3.110s
user  1m2.320s
sys   0m34.990s
livecd etc # <i>cd /usr/src/linux</i>
livecd linux # <i>make menuconfig</i>

<comment>(Configure your kernel as usual and make sure the raid and lvm modules you need are
compiled in, i.e. <b>not</b> as modules. The same applies to the disk drivers and filesystems.)</comment>
Multi-device support (RAID and LVM)  --->
[*] Multiple devices driver support (RAID and LVM)
  &lt;*&gt;   RAID support
  &lt; &gt;     Linear (append) mode (NEW)
  &lt;*&gt;     RAID-0 (striping) mode
  &lt;*&gt;     RAID-1 (mirroring) mode
  &lt; &gt;     RAID-10 (mirrored striping) mode (EXPERIMENTAL) (NEW)
  &lt; &gt;     RAID-4/RAID-5 mode (NEW)
  &lt; &gt;     RAID-6 mode (NEW)
  &lt; &gt;     Multipath I/O support (NEW)
  &lt; &gt;     Faulty test module for MD (NEW)
  &lt;*&gt;   Device mapper support
  &lt; &gt;     Crypt target support (NEW)
  &lt; &gt;     Snapshot target (EXPERIMENTAL) (NEW)
  &lt; &gt;     Mirror target (EXPERIMENTAL) (NEW)
  &lt; &gt;     Zero target (EXPERIMENTAL) (NEW)
  &lt; &gt;     Multipath target (EXPERIMENTAL) (NEW)
  &lt; &gt;     Bad Block Relocation Device Target (EXPERIMENTAL) (NEW)

livecd linux # <i>time make -j2</i>

<comment>(Elapsed time depends highly on the options you selected)</comment>
real  5m5.869s
user  4m32.320s
sys   0m32.930s

livecd linux # <i>make modules_install</i>
livecd linux # <i>cp arch/i386/boot/bzImage /boot/kernel</i>
</pre>

</body>
</section>
<section>
<title>Configure the system</title>
<body>

<p>
Edit your <path>/etc/fstab</path> and replace <c>BOOT</c>, <c>ROOT</c> and
<c>SWAP</c> with the actual partition names and add your logical volumes. Don't
forget to check that the file systems match your installation.
</p>

<pre caption="Example fstab">
livecd linux # <i>cd /etc</i>
livecd etc # <i>nano -w fstab</i>
/dev/<i>md1</i>          /boot                   ext2  noauto,noatime  1 2
/dev/<i>md3</i>          /                       ext3  noatime         0 1
/dev/<i>sda2</i>         none                    swap  sw,pri=1        0 0
/dev/<i>sdb2</i>         none                    swap  sw,pri=1        0 0
/dev/vg/usr       /usr                    ext3  noatime         1 2
/dev/vg/portage   /usr/portage            ext2  noatime         1 2
/dev/vg/distfiles /usr/portage/distfiles  ext2  noatime         1 2
/dev/vg/home      /home                   ext3  noatime         1 2
/dev/vg/opt       /opt                    ext3  noatime         1 2
/dev/vg/tmp       /tmp                    ext2  noatime         1 2
/dev/vg/var       /var                    ext3  noatime         1 2
/dev/vg/vartmp    /var/tmp                ext2  noatime         1 2
</pre>

<p>
Configure your network in <path>/etc/conf.d/net</path>. Add the <c>net.eth0</c>
init script to the default run level. If you have multiple NICs, symlink them
to the <c>net.eth0</c> init script and add them to the default run level as
well. Either edit <path>/etc/conf.d/net</path> with <c>nano</c> or use the
following commands:
</p>

<pre caption="Configure networking">
livecd etc # <i>cd conf.d</i>
livecd conf.d # <i>echo 'config_eth0=( "192.168.1.10/24" )' >> net</i>
livecd conf.d # <i>echo 'routes_eth0=( "default via 192.168.1.1" )' >> net</i>
livecd conf.d # <i>rc-update add net.eth0 default</i>
<comment>(If you compiled your network card driver as a module,
add it to /etc/modules.autoload.d/kernel-2.6)</comment>
livecd conf.d # <i>echo r8169 >> /etc/modules.autoload.d/kernel-2.6</i>
<comment>(If you want to reconnect via ssh after you have rebooted your new box)</comment>
livecd conf.d # <i>rc-update add sshd default</i>
</pre>

<note>
Emerge <c>pcmcia-cs</c> and add it to the default run level if you need it.
</note>

<p>
Set the root password using <c>passwd</c>.
</p>

<pre caption="Set the root password">
livecd conf.d # <i>passwd</i>
New UNIX password: <comment>type_the_password</comment>
Retype new UNIX password: <comment>type_the_password_again</comment>
passwd: password updated successfully
</pre>

<p>
Edit <path>/etc/conf.d/clock</path> to define the time zone you used
previously.
</p>

<pre caption="Edit /etc/conf.d/clock">
livecd conf.d # <i>nano -w /etc/conf.d/clock</i>
TIMEZONE="Europe/Brussels"
</pre>

<p>
Check the system configuration in <path>/etc/rc.conf</path>,
<path>/etc/conf.d/rc</path>, <path>/etc/conf.d/keymaps</path> and edit any of
those files if required.
</p>

<pre caption="Optional: edit some config files">
livecd conf.d # <i>nano -w /etc/rc.conf</i>
livecd conf.d # <i>nano -w /etc/conf.d/rc</i>
livecd conf.d # <i>nano -w /etc/conf.d/keymaps</i>
</pre>

</body>
</section>
<section>
<title>Installing System Tools</title>
<body>

<p>
Install RAID and LVM2 utilities.
</p>

<pre caption="Install RAID &amp; LVM2 tools">
livecd conf.d # <i>emerge mdadm lvm2</i>
</pre>

<p>
Install a system logger like <c>syslog-ng</c> and a cron daemon like
<c>vixie-cron</c>, and add them to the default run level.
</p>

<note>
Cron daemons depend on an MTA. <c>mail-mta/ssmtp</c> will be pulled in as a
dependency. If you want to use a more advanced MTA, you might want to install
it now. If you are in a hurry, let ssmtp be installed and remove it later when
you install the MTA of your choice.
</note>

<pre caption="Install a syslogger and a cron daemon">
livecd conf.d # <i>time emerge syslog-ng vixie-cron</i>

real  1m54.099s
user  1m2.630s
sys   0m34.620s
livecd conf.d # <i>rc-update add syslog-ng default</i>
livecd conf.d # <i>rc-update add vixie-cron default</i>
</pre>

<p>
Install the necessary file system tools (<c>xfsprogs</c>, <c>reiserfsprogs</c>
or <c>jfsutils</c>) and networking tools (<c>dhcpcd</c> or <c>ppp</c>) if you
need any.
</p>

<pre caption="Install extra tools if required">
livecd conf.d # <i>emerge xfsprogs</i>       <comment>(If you use the XFS file system)</comment>
livecd conf.d # <i>emerge jfsutils</i>       <comment>(If you use the JFS file system)</comment>
livecd conf.d # <i>emerge reiserfsprogs</i>  <comment>(If you use the Reiser file system)</comment>
livecd conf.d # <i>emerge dhcpcd</i>         <comment>(If you need a DHCP client)</comment>
livecd conf.d # <i>emerge ppp</i>            <comment>(If you need PPPoE ADSL connectivity)</comment>
</pre>

</body>
</section>
<section>
<title>Configuring the Bootloader</title>
<body>

<p>
Emerge <c>grub</c> and configure it.
</p>

<pre caption="Emerge grub and edit its configuration file">
livecd conf.d # <i>time emerge grub</i>

real  1m4.634s
user  0m39.460s
sys   0m15.280s
livecd conf.d # <i>nano -w /boot/grub/grub.conf</i>
</pre>

<pre caption="Example grub.conf">
default 0
timeout 10

title=Gentoo
root (hd0,0)
kernel /boot/kernel root=/dev/md3
</pre>

<pre caption="Install grub on both disks">
livecd conf.d # <i>grub</i>
Probing devices to guess BIOS drives. This may take a long time.

grub> <i>root (hd0,0)</i>
 Filesystem type is ext2fs, partition type 0x83

grub> <i>setup (hd0)</i>
 Checking if "/boot/grub/stage1" exists... yes
 Checking if "/boot/grub/stage2" exists... yes
 Checking if "/boot/grub/e2fs_stage1_5" exists... yes
 Running "embed /boot/grub/e2fs_stage1_5 (hd0)"...  16 sectors are embedded.
succeeded
 Running "install /boot/grub/stage1 (hd0) (hd0)1+16 p (hd0,0)/boot/grub/stage2 /boot/
grub/menu.lst"... succeeded
Done.

grub> <i>root (hd1,0)</i>
 Filesystem type is ext2fs, partition type 0x83

grub> <i>setup (hd1)</i>

grub> <i>quit</i>
</pre>

</body>
</section>
<section>
<title>Reboot</title>
<body>

<p>
Exit the chrooted environment, unmount all file systems and reboot:
</p>

<pre caption="Reboot">
livecd conf.d # <i>exit</i>
livecd / # <i>umount /mnt/gentoo/usr/portage/distfiles /mnt/gentoo/usr/portage /mnt/gentoo/usr</i>
livecd / # <i>umount /mnt/gentoo/var/tmp /mnt/gentoo/tmp /mnt/gentoo/var /mnt/gentoo/opt</i>
livecd / # <i>umount /mnt/gentoo/proc /mnt/gentoo/home /mnt/gentoo/boot /mnt/gentoo</i>
livecd / # <i>reboot</i>
<comment>(Don't forget to remove the CD)</comment>
</pre>

<p>
Please follow the <uri
link="gentoo-x86-quickinstall.xml#after-reboot">Finalizing the
Installation</uri> part of the regular x86 quick setup guide to complete your
installation.
</p>

</body>
</section>
</chapter>
</guide>
