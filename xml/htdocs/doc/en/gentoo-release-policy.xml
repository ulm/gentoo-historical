<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>

<guide link="/doc/en/gentoo-release-policy.xml">

<author title = "Author">
<mail link = "drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title = "Editor">
<mail link = "zhen@gentoo.org">John P. Davis</mail></author>

<version>1.0</version>
<date>25 Feb 2003</date>

<abstract>The Offical Gentoo Linux Release Policy</abstract>

	<chapter>
		<title>Initial Concerns, Questions</title>
		<section>
			<title>What is the Gentoo Linux release process?</title>
			<body>
			<p>The Gentoo Linux release process is the clearly-defined and documented
			procedure that the Gentoo Linux development team uses to create new
			release candidates and new official releases of Gentoo Linux. In
			practice, it is meant to be a team-based, coordinated effort that
			involves every member of the development team.
			</p>
			</body>
		</section>

		<section>
			<title>Who is "in charge" of the Gentoo Linux release process?</title>
			<body>
			<p>While the Release Process is coordinated by the Development Manager
			(Seemant) and Chief Architect (Daniel), the process itself is a team
			effort. There is no one person responsible for doing all or even the
			majority of the work. 

			It is the responsibility of the Development Manager and Chief Architect
			to involve the entire team in the release process, by doing things like
			finding people to build stage tarballs, GRP package sets and performing
			QA testing.
			</p>
			</body>
		</section>

		<section>
			<title>Goals of the Gentoo Linux release process</title>
			<body>
			<ul>
			<li>On-time release of a new release candidate or full version of Gentoo
			Linux. </li>

			<li>Proper QA testing on the new release.</li>

			<li>Opportunity for stable changes to get into the release.</li>

			<li>To make the release process a *team* process</li>

			<li>Ensure that new official versions of Gentoo Linux are ready for the
			public. </li>
			</ul>
			</body>
		</section>
	</chapter>
	
	<chapter>
		<title>How the Gentoo Linux release process works</title>
		<section>
			<title>Initial decision</title>
			<body>
			<p>The release process starts with an official decision to release a new
			version of Gentoo Linux, made by the Development Manager and Chief
			Architect, who then present:
			</p>
		        
			<ul>
			<li>A clear schedule for the release process, including all 
			milestones and deadlines. </li> 

			<li>A specific list of goals for this release (optional). </li>
			</ul>
		
			<p>They then begin recruiting people to build and QA test the upcoming
			release, and inform the developers of the start of the next phase,
			which begins immediately. 
			</p>
			</body>
		</section>

		<section>
			<title>Package upgrades phase</title>
			<body>
			<p>Immediately, and for the next 14 days, the Gentoo Linux development team
			is encouraged to move things from an "unstable" ("~" masked) state to a
			"stable" (unmasked) state, performing any necessary steps to ensure that
			the new "stable" packages are indeed stable and an improvement over the
			packages they replace. If this release is piggy-backing off a previous
			release candidate release, this phase can be shortened to last 8 days.
			</p>

			<p>Developers also begin combing through all outstanding bugs, assigning
			them to the appropriate parties or resolving them personally. An effort
			is made to get as many bug fixes as possible into our stable release
			during this phase.
			</p>

			<p>The goal of this stage is to improve and upgrade our packages so that
			our users can benefit from them in the eventual official release. The
			"Package upgrades" phase of the release process ends at
			the end of this two-week period -- at a clearly defined date, such as
			"Jan 8 2003, 23:59 MST." At this date, the "package upgrade" phase ends
			(all new packages are again "~" masked as a matter of policy, and only
			bug fixes are allowed into stable ebuilds), the Portage tree is CVS
			tagged as GENTOO_x.y_SNAP_YYYYMMDDAB (AB=an integer, starting at 00 to
			allow for multiple snapshots in a day) and the next phase begins.
			</p>
			</body>
		</section>

		<section>
			<title>Build and test</title>
			<body>
			<p>During the middle of the "package upgrade" phase, on the 7th day for
			normal releases, or the 4th day for the optional expedited "piggy back
			on rc" releases schedule, the build and test phase begins. In this
			phase, assigned builders for each architecture build a "generic CPU" set
			of stage tarballs using a current Portage snapshot, and
			report/fix/create bugs to fix any build-related bugs found. In addition,
			our initial QA testers use these stages and report any runtime bugs
			found. 
			</p>

			<p>As new bugs in the stage tarballs are found and fixed, new releases of
			the stage tarballs are rolled up. These stage tarballs are posted on a
			publicly-accessible Web site so that testing can begin by developers and
			users recruited by the Development Manager and Chief Architect, or other
			developer assigned to coordinate QA.
			</p>

			<p>When stage 2 ("package upgrade" phase) ends, this "build an test" phase
			switches from using a *current* CVS tree to using the official
			GENTOO_x.y_SNAP_YYYYMMDDAB snapshot of the CVS tree. An effort is made
			to resolve all outstanding build/runtime issues. As bugs are fixed, new
			GENTOO_x.y_SNAP_YYYYMMDDAB (with new date) tags are made, and these
			new snapshots are used to build new bug-fixed stage tarballs.
			</p>

			<p>Ten days after the beginning of the "build and test" phase, a
			determination is made as to whether this next release will be an
			"official release" or release candidate. The Development Lead
			for each arch, the Development Manager, and the Chief Architect all come
			to a final unanimous decision in this matter. 
			</p>

			<p>If quality is not where it should be, the next release should be a
			release candidate. If quality is good, all goals for the release have
			been met and major issues are resolved or resolvable in a reasonable
			time, then the next release should be an official release. 
			</p>

			<p>There may also be a decision for certain arches to be "official"
			releases, and other arches to be release candidates. This prevents one
			our two new, experimental arches from holding up the entire release
			process when they need additional time to mature. Additionally, release
			goals could be relaxed for certain arches.
			</p>

			<p>The latest GENTOO_x.y_SNAP_YYYYMMDDAB snapshot is used for this release.
			With generic stage tarballs for this snapshot in hand, the next phase
			begins...
			</p>
			</body>
		</section>

		<section>
			<title>Release build and test</title>
			<body>

			<p>Immediately, a large-scale, coordinated distributed build effort begins
			to build the full new Gentoo Linux release or release candidate,
			including GRP package sets. If release candidate, a smaller subset of
			system variants (ie, i686 and maybe one more for x86) may be optionally
			chosen instead of a "full" build. During this build process, any
			last-minute quirks are ironed out. Install documentation is updated for
			the new release. Release announcements are written, but not yet made
			public. And private QA testing of the final release binaries begin as
			soon as they have finished compiling. This is our final QA verification
			before release.
			</p>

			<p>This entire phases, including creation of liveCDs and uploading to
			ibiblio, should complete in no more than 4 days.
			</p>
			</body>
		</section>

		<section>
			<title>Release</title>
			<body>
			
			<p>The new version or release candidate of Gentoo Linux is released.</p>

			<p>Under this plan, we could use the following schedule for the "official"
			1.4 release in time for LWE (early January 2003):
			</p>

			<table>
			<tr>
				<th>Date</th>
				<th>Action Description</th>
			</tr>
			<tr>
				<ti>Jan 1</ti>
				<ti>Stage 1 -- Intention to Release</ti>
			</tr>
			<tr>	
				
				<ti>Jan 1</ti>
				<ti>Stage 2 -- Beginning of "package updates" phase</ti>
			</tr>
			<tr>
				<ti>Jan 4</ti>
				<ti>Stage 3 -- Beginning of "build and test" phase</ti>
			</tr>
			<tr>
				<ti>Jan 8</ti>
				<ti>Stage 2 -- Ending of "package updates" phase</ti>
			</tr>
			<tr>
				<ti>Jan 10</ti>
				<ti>Stage 3 -- Estimated ending of Stage 3 ("build and test")</ti>
			</tr>
			<tr>
				<ti>Jan 10</ti>
				<ti>Stage 4 -- Beginning of Stage 4 ("release build and test")</ti>
			</tr>
			<tr>
				<ti>Jan 14</ti>
				<ti>Stage 4        -- End of Stage 4</ti>
			</tr>
			<tr>
				<ti>Jan 14</ti>
				<ti>Stage 5        -- Release! :) </ti>
			</tr>
			</table>
			</body>
		</section>
	</chapter>
</guide>
			

			
			
			
			
			
			
			
			
			
			
			
			
