<?xml version='1.0' encoding="UTF-8"?>

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/draft/bootstrapping-guide.xml,v 1.2 2005/11/30 05:14:15 swift Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/en/draft/bootstrapping-guide.xml">
<title>Gentoo Bootstrapping Guide</title>

<author title="Author">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>

<abstract>
Bootstrapping means to build a toolchain so that it is ready to build the rest
of your system. Gentoo is a perfect operating system to perform such 
installation while retaining support from the software management system, 
Portage.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.1</version>
<date>2005-07-25</date>

<chapter>
<title>What is Bootstrapping?</title>
<section>
<title>Definition</title>
<body>

<warn>
Not only is this guide still in its early stage, it is also built on theoretical
information found on the Internet and not from experience. It should be taken
with a big grain of salt until the steps in it are verified and accepted by more
experienced people.
</warn>

<p>
If we were to believe the stories, <e>bootstrapping</e> - the term - originates
from a German legend about Baron MÃ¼nchhausen who was able to save himself from
drowning in a swamp by pulling himself up by his hairs.
</p>

<p>
In computer theory, bootstrapping has several meanings. All of them boil down to
building more complex systems from simple ones. This document will discuss
bootstrapping a toolchain: building a full cross-compilation environment able to
build software for the target system.
</p>

</body>
</section>
<section>
<title>Toolchain Bootstrapping</title>
<body>

<p>
The process of bootstrapping a toolchain is two-fold.
</p>

<p>
At first, you use an existing toolchain to create a cross-compilation
environment, a toolchain capable of running on one system but building software
for a different one. The second step is to use the cross-compilation toolchain 
to rebuild itself so that it builds code native to the system it is booted on.
</p>

<p>
There are three important terms we use in this definition:
</p>

<ul>
  <li>the <e>host</e> system is the system on which the programs are ran, </li>
  <li>
    the <e>build</e> system is the system on which a particular package is being
    built, and
  </li>
  <li>
    the <e>target</e> system is the system for which the software generates
    output (like the compiler)
  </li>
</ul>

<p>
After the toolchain is bootstrapped, the third stage is to build the rest of the
system using the native toolchain.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installing Gentoo on an Unsupported Platform</title>
<section>
<title>Creating the Cross-Compilation Environment</title>
<body>

</body>
</section>
<section>
<title>Filling the Environment</title>
<body>

</body>
</section>
<section>
<title>Bootstrapping the Toolchain</title>
<body>

</body>
</section>
<section>
<title>Building the Core System Packages</title>
<body>

</body>
</section>
<section>
<title>Porting Portage</title>
<body>

</body>
</section>
<section>
<title>Creating a Stage1 Tarball</title>
<body>

</body>
</section>
<section>
<title>Creating a Bootable Environment</title>
<body>

</body>
</section>
<section>
<title>Finishing Off</title>
<body>

</body>
</section>
</chapter>

<chapter>
<title>Bootstrapping the System</title>
<section>
<title>Installing Gentoo</title>
<body>

<p>
With the bootable environment at your disposal, you can now boot the target
system into a small Linux environment. Once booted, follow the installation
instructions inside the <uri link="/doc/en/handbook">Gentoo Handbook</uri> to
the point where you chroot into your Gentoo environment. Of course, since you
only have a stage1 tarball at your disposal, you should use that one instead of
the stage3 used in the installation instructions.
</p>

<p>
After chrooting the system, you should update the Portage tree.
</p>

<pre caption="Updating the Portage tree">
# <i>emerge --sync</i>
</pre>

</body>
</section>
<section>
<title>Using the Bootstrap Script</title>
<body>

<p>
Next, we'll rebuild the toolchain provided by the stage1 tarball natively.
Gentoo provides a script that does this for you.
</p>

<pre caption="Rebuilding the toolchain">
# <i>/usr/portage/scripts/bootstrap.sh</i>
</pre>

</body>
</section>
<section>
<title>Building the Core System</title>
<body>

<p>
With the toolchain rebuild and ready for general usage, we'll build the core
system packages for the system:
</p>

<pre caption="Building the core system packages">
# <i>emerge --emptytree system</i>
</pre>

</body>
</section>
<section>
<title>Finishing the Installation</title>
<body>

<p>
Now that the core system packages are built, you can continue using the
installation instructions in the Gentoo Handbook. You will probably get a few
complaints by Portage telling you certain packages are masked. This is because
your architecture isn't supported by Gentoo yet, in which case you need to
unmask the packages in <path>/etc/portage/package.keywords</path> like you did
previously.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Frequently Asked Questions</title>
<section>
<title>
  Should I bootstrap when I want my entire system to use changed CFLAGS,
  CXXFLAGS, USE settings and profile changes?
</title>
<body>

<p>
No. After your changes, you should rebuild the toolchain first, after which you
can rebuild the entire system using the new toolchain. When your system suffers
from circular dependencies, you'll need to rebuild the participants in that
circle. For instance, if <c>openssl</c> depends on <c>python</c> which depends
on <c>perl</c> which depends on <c>openssl</c> again (yes, this is a fictuous
example), rebuild all those packages too.
</p>

<pre caption="Rebuilding the system">
# <i>emerge --oneshot --emptytree glibc binutils glibc</i>
# <i>emerge --emptytree world</i>
</pre>

<p>
You don't need to bootstrap here because your architecture still remains the
same, as is the target system.
</p>

</body>
</section>
<section>
<title>
  Should I bootstrap when I want my entire system to use changed CHOST settings?
</title>
<body>

<p>
Not if the system itself supports the new CHOST setting too (for instance,
i386-pc-linux-gnu and i686-pc-linux-gnu on a Pentium IV system). Otherwise, yes,
but then we are really interested in hearing how you managed to install Gentoo
using the current - wrong - CHOST settings in the first place ;)
</p>

<p>
If your system supports both CHOST settings, you can follow the same
instructions as given in the previous FAQ.
</p>

</body>
</section>
</chapter>

</guide>
