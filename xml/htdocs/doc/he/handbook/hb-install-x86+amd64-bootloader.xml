<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Id: hb-install-x86+amd64-bootloader.xml,v 1.1 2007/03/06 10:34:47 neysx Exp $ -->

<sections>

<version>4.2</version>
<date>2006-11-01</date>

<section>
<title>במה תבחרו?</title>
<subsection>
<title>הקדמה</title>
<body>

<p>
כעת שתצורת הקרנל שלכם נקבעה, סיימתם להדר אותו, ומילאתם את
קבצי התצורה כראוי, הגיע הזמן להתקין את התוכנה שתטען את
הקרנל כאשר אתם מפעילים את המחשב. תוכנה כזו נקראת <e>טוען אתחול</e> (bootloader).
</p>

<p test="func:keyval('arch')='x86'">
עבור x86, ג'נטו לינוקס מספקת את <uri
link="#grub">GRUB</uri> ואת <uri link="#lilo">LILO</uri>.
</p>

<p>
לפני שנתקין את טוען האתחול, אנו נסביר לכם כיצד לקבוע
תצורה של framebuffer (בהנחה ואתם מעוניינים בזה בכלל).
עם framebuffer תוכלו להריץ את שורת הפקודה של לינוקס עם
תכונות גרפיות מוגבלות (כגון שימוש בתמונת bootsplash שג'נטו
מספקת).
</p>

</body>
</subsection>
<subsection>
<title>רשות: Framebuffer</title>
<body>

<p>
<e>אם</e> קבעתם את תצורת הקרנל שלכם כך שתהיה בה תמיכה
ב-framebuffer (או שהשתמשתם בתצורת ברירת המחדל של <c>genkernel</c>), תוכלו להפעיל אותו על ידי הוספת הצהרת
<c>vga</c> ו/או <c>video</c> לקובץ התצורה של טוען האתחול שלכם.
</p>

<p test="func:keyval('arch')='x86'">
קודם כל, עלינו לדעת באיזה סוג של התקן framebuffer אתם משתמשים. אם אתם משתמשים בעץ קרנל עם הטלאים של ג'נטו
(כגון <c>gentoo-sources</c>) הייתה לכם האפשרות לבחור
<c>vesafb-tng</c> בתור <e>VESA driver type</e> (שהיא ברירת
המחדל עבור קודי מקור אלה של הקרנל). אם זה המקרה, אתם
משתמשים ב-<c>vesafb-tng</c> ולכן <e>אינכם צריכים</e> להצהיר הצהרת <c>vga</c>. אחרת, אתם משתמשים בדרייבר <c>vesafb</c> ואתם <e>צריכים</e> להצהיר הצהרת <c>vga</c>.
</p>

<p test="func:keyval('arch')='AMD64'">
מערכות מבוססות 64 ביט, חייבות להשתמש בדרייבר <c>vesafb</c>, וצריכות את ההצהרה  <c>vga</c>.
</p>

<p>
ההצהרה <c>vga</c> שולטת על ההפרדה ועומק הצבע של מסך ה-framebuffer שלכם עבור <c>vesafb</c>. כפי שמצויין ב-<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> 
(אשר מותקן כאשר אתם מתקינים חבילת קוד מקור של קרנל), אתם
צריכים להעביר את מספר ה-VESA המתאים להפרדה ועומק הצבע
המבוקשים.
</p>

<p>
הטבלה הבאה מציגה את צמדי ההפרדה ועומקי הצבע מול הערך
שצריך לתת עבורם להצהרת ה-<c>vga</c>.
</p>

<table>
<tr>
  <ti></ti>
  <th>640x480</th>
  <th>800x600</th>
  <th>1024x768</th>
  <th>1280x1024</th>
</tr>
<tr>
  <th>256</th>
  <ti>0x301</ti>
  <ti>0x303</ti>
  <ti>0x305</ti>
  <ti>0x307</ti>
</tr>
<tr>
  <th>32k</th>
  <ti>0x310</ti>
  <ti>0x313</ti>
  <ti>0x316</ti>
  <ti>0x319</ti>
</tr>
<tr>
  <th>64k</th>
  <ti>0x311</ti>
  <ti>0x314</ti>
  <ti>0x317</ti>
  <ti>0x31A</ti>
</tr>
<tr>
  <th>16M</th>
  <ti>0x312</ti>
  <ti>0x315</ti>
  <ti>0x318</ti>
  <ti>0x31B</ti>
</tr>
</table>

<p>
הצהרת ה-<c>video</c> שולטת על אפשרויות תצוגת ה-framebuffer.
צריך לתת לה את הדרייבר (<c>vesafb</c> עבור קרנלים מסדרת 2.6, או <c>vesa</c> עבור קרנלים מסדרת 2.4), ולאחריו הצהרות
בקרה שאתם מעוניינים להפעיל. רשימה של כל המשתנים ניתן למצוא
ב-<path>/usr/src/linux/Documentation/fb/vesafb.txt</path>. האפשרויות הפופולריות הן:
</p>

<table>
<tr>
  <th>אפשרות בקרה</th>
  <th>תיאור</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    הנח שהכרטיס הגרפי יכול להשתמש בזיכרון שלו באופן סיבובי
    (לדוגמא - להמשיך בהתחלה אחרי שהוא הגיע לסוף)
  </ti>
</tr>
<tr>
  <ti>mtrr:n</ti>
  <ti>
    הגדרת אוגרי ה-MTRR. <c>n</c> יכול להיות אחד מאלה:<br/>
    0 - disabled<br/>
    1 - uncachable<br/>
    2 - write-back<br/>
    3 - write-combining<br/>
    4 - write-through
  </ti>
</tr>
<tr test="func:keyval('arch')='x86'">
  <ti><c>mode</c></ti>
  <ti>
    (<c>vesafb-tng</c> בלבד)<br/>
    מגדיר הפרדה, עומק צבע, וקצב רענון.
    לדוגמא,
    <c>1024x768-32@85</c> עבור הפרדה של 1024 על 768, 32 ביט עומק צבע, וקצב רענון של 85 הרץ.
  </ti>
</tr>
</table>

</body>
<body test="func:keyval('arch')='AMD64'">

<p>
התוצאה של שתי הצהרות אלו תראה משהו דומה ל-<c>vga=0x318
video=vesafb:mtrr:3,ywrap</c>. כתבו הגדרה זו על נייר;
תצטרכו אותה בקרוב.
</p>

<p>
למרות ש-LILO כן עובד על AMD64, ג'נטו תומכת רק בשימוש ב-GRUB. כעת המשיכו ב<uri link="#grub">התקנתו</uri>.
</p>

</body>
<body test="func:keyval('arch')='x86'">

<p>
התוצאה של שתי הצהרות אלו תראה משהו דומה ל-<c>vga=0x318
video=vesafb:mtrr:3,ywrap</c> או
<c>video=vesafb:mtrr:3,ywrap,1024x768-32@85</c>. כתבו הגדרה זו על נייר; תצטרכו אותה בקרוב.
</p>

<p>
כעת המשיכו בהתקנת <uri link="#grub">GRUB</uri> <e>או</e> <uri
link="#lilo">LILO</uri>.
</p>

</body>
</subsection>
</section>
<section id="grub">
<title>ברירת מחדל: שימוש ב-GRUB</title>
<subsection>
<title>הבנת הטרמינולוגיה של GRUB</title>
<body>

<p>
החלק הקריטי ביותר בהבנה של GRUB הוא להבין כיצד GRUB מתייחס
לכוננים ולמחיצות. מחיצת הלינוקס שלכם
<path>/dev/hda1</path> (לכונני IDE) או <path>/dev/sda1</path> (לכונני SATA/SCSI) תיקרא ככל  הנראה
<path>(hd0,0)</path> תחת GRUB.
שימו לב לסוגריים מסביב ל-<path>hd0,0</path> - הם חובה.
</p>

<p>
כוננים קשיחים נספרים מאפס ולא מ-"a" ומחיצות מתחילות להספר
מאפס ולא מאחד. שימו לב שבהתקני hd, רק כוננים קשיחים נספרים,
ולא התקני atapi-ide כגון כונני תקליטורים וצורבים. כמו כן, אותו מבנה נמצא בשימוש גם בכונני SCSI. (הם מקבלים מספרים
גבוהים יותר מכונני IDE אלא אם כן תצורת ה-BIOS מוגדרת
לאתחל מכונני ה-SCSI.)
כאשר תבקשו מה-BIOS שלכם לאתחל מכונן קשיח אחר (לדוגמא ה-primary slave שלכם), הכונן <e>הזה</e> ייראה בתור <path>hd0</path>.
</p>

<p>
בהנחה ויש לכם כונן קשיח תחת <path>/dev/hda</path>, נגן
תקליטורים תחת <path>/dev/hdb</path>, צורב תחת <path>/dev/hdc</path>, כונן קשיח שני תחת <path>/dev/hdd</path> ואין לכם כונן קשיח מסוג SCSI, <path>/dev/hdd7</path> יתורגם ל-<path>(hd1,6)</path>. 
ייתכן והדבר נשמע קצת מבלבל ומבלבל אכן הוא, אבל כפי שעוד
נראה, GRUB מציע מנגנון השלמה באמצעות TAB שהופך לשימושי
לאלו מכם שיש להם הרבה כוננים קשיחים ומחיצות וקצת אבודים
עם סכמת המספור של GRUB.
</p>

<p>
אחרי שנשמנו עמוק, הגיע הזמן להתקין את GRUB.
</p>

</body>
</subsection>
<subsection>
<title>התקנת GRUB</title>
<body>

<p>
כדי להתקין את GRUB, קודם כל נעשה לו emerge:
</p>

<impo test="func:keyval('arch')='AMD64'">
אם אתם משתמשים ב <uri
link="?part=1&amp;chap=6#doc_chap2">פרופיל</uri> שאינו
תומך ב-multilib, אזי <b>אסור</b> לכם לעשות emerge ל-grub,
אלא במקום זאת, עליכם לעשות emerge ל-<c>grub-static</c>.
</impo>

<pre caption="התקנת GRUB">
# <i>emerge grub</i>
</pre>

<p>
למרות ש-GRUB כעת מותקן, אנחנו עדיין צריכים לכתוב עבורו
קובץ תצורה וכמו כן לשים את GRUB ב-MBR שלנו כך שהוא יוכל
להטען על ידי המחשב שלנו ולאחר מכן לטעון את הקרנל החדש שלנו.
צרו את  <path>/boot/grub/grub.conf</path> עם
<c>nano</c> (או, אם רלוונטי, עם עורך אחר):
</p>

<pre caption="יצירת boot/grub/grub.conf/">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
כעת אנחנו הולכים לכתוב את  <path>grub.conf</path>. 
לקמן תמצאו שני <path>grub.conf</path> אפשריים
עבור סכמת המחיצות שבה השתמשנו במדריך זה.
סימנו הערות רבות רק את ה- <path>grub.conf</path> הראשון.
ודאו שאתם משתמשים בשם הקובץ של תמונת הקרנל <e>שלכם</e>,
ואם רלוונטי, שם הקובץ של תמונת ה-initrd <e>שלכם</e>.
</p>

<ul>
  <li>
    ה-<path>grub.conf</path> הראשון הוא עבור אנשים
    שלא השתמשו ב-<c>genkernel</c> כדי לבנות את הקרנל שלהם
  </li>
  <li>
    ה-<path>grub.conf</path> השני הוא עבור אנשים שהשתמשו ב-<c>genkernel</c> כדי לבנות את הקרנל שלהם
  </li>
</ul>

<note>
אם מערכת הקבצים במחיצת השורש שלכם היא JFS, אתם <e>חייבים</e> להוסיף <c>" ro"</c> לשורת ה-<c>kernel</c>
כיוון ש-JFS חייב לבצע replay ללוג שלו לפני שהוא מאפשר
עגינת קריאה/כתיבה.
</note>

<pre caption="grub.conf עבור משתמשים שלא השתמשו ב-genkernel">
<comment># איזו אפשרות לאתחל בברירת מחדל. 0 היא הראשונה, 1 היא השנייה.</comment>
default 0
<comment># כמה שניות להמתין לפני שברירת המחדל תטען אוטומטית.</comment>
timeout 30
<comment># יפה ושמן כדי לטבל קצת את הדברים splash-image :)
# סמנו שורה זו כהערה אם אין לכם כרטיס גרפי</comment>
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux <keyval id="kernel-version"/>
<comment># המחיצה שבה תמונת הקרנל או מערכת ההפעלה נמצאת</comment>
root (hd0,0)
kernel /boot/<keyval id="kernel-name"/> root=/dev/hda3

title=Gentoo Linux <keyval id="kernel-version"/> (rescue)
<comment># המחיצה שבה תמונת הקרנל או מערכת ההפעלה נמצאת</comment>
root (hd0,0)
kernel /boot/<keyval id="kernel-name"/> root=/dev/hda3 init=/bin/bb

<comment># ארבע השורות הבאות נחוצות כדי לעשות אתחול משולב כפול עם חלונות.</comment>
<comment>#  /dev/hda6 - במקרה זה, חלונות נמצאת ב.</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<pre caption="grub.conf עבור משתמשי genkernel">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Gentoo Linux <keyval id="kernel-version"/>
root (hd0,0)
kernel /boot/<keyval id="genkernel-name"/> root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev
initrd /boot/<keyval id="genkernel-initrd"/>

<comment># רק במקרה ואתם רוצים אתחול כפול עם חלונות</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<note>
ה-<c>udev</c> שמצויין בסוף של שורת הקרנל נחוץ כדי לעקוף
באג שיש בחלק מהגירסאות של genkernel <e>אם</e> אתם משתמשים
ב-udev מלכתחילה (וברירת המחדל היא שכן).
</note>

<p>
אם השתמשתם בסכימת מחיצות שונה ו/או תמונת קרנל שונה, שנו בהתאם. יש לשים לב שאתם מוודאים שכל דבר שנמצא אחרי התקן-GRUB (כגון <path>(hd0,0)</path>) הוא יחסי אל נקודת
העגינה, ולא אל השורש. במילים אחרות,  <path>(hd0,0)/grub/splash.xpm.gz</path> הוא למעשה
<path>/boot/grub/splash.xpm.gz</path> כיוון ש-<path>(hd0,0)</path> הוא
<path>/boot</path>.
</p>

<p>
חוץ מזה, אם בחרתם להשתמש בסכמת מחיצות שונה ולא שמתם את 
<path>/boot</path> כמחיצה נפרדת, הקידומת <path>/boot</path> שהשתמשנו בה בדוגמאות הקוד לעיל היא בעצם  <e>חובה</e>. אם עקבתם אחרי תוכנית המחיצות שלנו, הקידומת <path>/boot</path> אינה נחוצה, אך כיוון שיש symlink ל-<path>boot</path> היא תעבוד בכל מקרה.
בקיצור, הדוגמאות שלעיל אמורות לעבוד בין אם הגדרת מחיצת  <path>/boot</path> נפרדת ובין אם לאו.
</p>

<p>
אם אתם צריכים להעביר אפשרויות נוספות אל הקרנל, פשוט הוסיפו
אותם בסוף פקודה ה-kernel. אנחנו כבר מעבירים אפשרות אחת
(<c>root=/dev/hda3</c> או <c>real_root=/dev/hda3</c>),
אבל אתם יכולים להעביר אחרות, כגון  <c>video</c> ו/או הצהרות <c>vga</c> עבור framebuffer כפי שהוסבר קודם לכן.
</p>

<p>
אם אתם משתמשים בקרנל 2.6.7 או חדש יותר וג'ימפרתם את הכונן
הקשיח שלכם בגלל שה-BIOS לא היה מסוגל לטפל בכוננים קשיחים
גדולים, תצטרכו להוסיף 
<c>hdx=stroke</c>.
</p>

<p>
משתמשי <c>genkernel</c> צריכים לדעת שאפשרויות האתחול שלהם
זהות לאלו שבתקליטור ההתקנה. לדוגמא, אם יש לכם התקני SCSI,
אתם צריכים להוסיף <c>doscsi</c> כאפשרות לקרנל.
</p>

<p>
כעת שמרו את הקובץ  <path>grub.conf</path> וצאו.
אתם עדיין צריכים להתקין את GRUB על ה-MBR (הלא הוא ה-Master Boot Record) כך ש-GRUB יורץ אוטומטית כשאתם מפעילים את המחשב שלכם.
</p>

<p>
מפתחי GRUB ממליצים להשתמש ב- <c>grub-install</c>. למרות זאת, אם מסיבה כלשהיא  <c>grub-install</c> 
לא עובד כראוי, עדיין יש לכם את האפשרות להתקין את GRUB
באופן ידני.
</p>

<p>
המשיכו עם <uri link="#grub-install-auto">ברירת מחדל: התקנת GRUB באמצעות grub-install</uri> או עם <uri link="#grub-install-manual">אלטרנטיבה: התקנת GRUB באמצעות הוראות התקנה ידניות</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>ברירת מחדל: התקנת GRUB באמצעות grub-install</title>
<body>

<p>
כדי להתקין את GRUB עליכם להריץ את הפקודה  <c>grub-install</c>.
הבעייה היא, ש-<c>grub-install</c> לא יעבוד "ישר מקופסא"
כיוון שאנחנו בתוך סביבת chroot.
אנחנו נצטרך ליצור  <path>/etc/mtab</path> אשר בו יש רשימה
של כל המחיצות שעוגנו. למזלנו, יש דרך קלה לעשות זאת -
פשוט להעתיק את  <path>/proc/mounts</path> לתוך <path>/etc/mtab</path>, לא כולל השורה <c>rootfs</c> אם לא יצרתם מחיצת אתחול נפרדת.
הפקודה הבאה תעבוד בשני המקרים:
</p>

<pre caption="יצירת etc/mtab/">
# <i>grep -v rootfs /proc/mounts &gt; /etc/mtab</i>
</pre>

<p>
כעת אנחנו יכולים להתקין את GRUB באמצעות  <c>grub-install</c>:
</p>

<pre caption="הרצת grub-install">
# <i>grub-install /dev/hda</i>
</pre>

<p>
אם יש לכם עוד שאלות אודות GRUB, אנא עיינו ב<uri
link="http://www.gnu.org/software/grub/grub-faq.html">שאלות הנפוצות של GRUB</uri> או ב<uri link="http://www.gnu.org/software/grub/manual/">מדריך של GRUB</uri>.
</p>

<p>
המשיכו עם  <uri link="#reboot">הפעלת המחשב מחדש</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
	<title>אלטרנטיבה: התקנת GRUB באמצעות הוראות התקנה ידניות</title>
<body>

<p>
כדי להתחיל לקבוע את התצורה של GRUB, הקלידו את הפקודה <c>grub</c>. יוצג לכם קלט שורת הפקודה של GRUB שנראה כך: <path>grub&gt;</path>.
כעת, עליכם להקליד את הפקודות הנכונות כדי להתקין את רשומת
האתחול של GRUB לכונן הקשיח שלכם.
</p>

<pre caption="הפעלת ה-shell של GRUB">
# <i>grub</i>
</pre>

<note>
אם למערכת שלכם אין כונן תקליטונים, הוסיפו את האפשרות he <c>--no-floppy</c>
לפקודה שלעיל כדי למנוע מ-grub לנסות לזהות את כונן התקליטונים (שאינו קיים).
</note>

<p>
בתצורת הדוגמא אנחנו רוצים להתקין את GRUB כך שהוא יקרא
את המידע שלו ממחיצת האתחול <path><keyval id="/boot"/></path>, ויתקן את רשומת האתחול של GRUB על ה-MBR (שזה Master Boot Record) כך שהדבר הראשון שנראה
כשנדליק את המחשב הוא את המסך של GRUB. כמובן, אם לא עקבתם
אחר דוגמת התצורה במהלך ההתקנה, שנו את הפקודות בהתאם.
</p>

<p>
מנגנון השלמת הטאבים של GRUB ניתן לשימוש מתוך GRUB.
לדוגמא, אם תקלידו "<c>root (</c>" ולאחר מכן תלחצו על TAB,
תוצג לכם רשימה של התקנים (לדוגמא  <path>hd0</path>). 
אם תקלידו "<c>root (hd0,</c>" ותלחצו על TAB, תקבלו רשימה
של מחיצות זמינות לבחור מהן (לדוגמא  <path>hd0,0</path>).
</p>

<p>
על ידי שימוש בהשלמת טאב, הגדרת GRUB לא צריכה להיות כל כך קשה.
כעת, נתקין את GRUB, הלא כן? :-)
</p>

<pre caption="התקנת GRUB על ה-MBR">
grub&gt; <i>root (hd0,0)</i>    <comment>(ציינו היכן נמצאת מחיצת האתחול שלכם)</comment>
grub&gt; <i>setup (hd0)</i>     <comment>(MBR-ב GRUB התקן את)</comment>
grub&gt; <i>quit</i>            <comment>(GRUB-צא מ)</comment>
</pre>

<note>
אם תרצו להתקין את GRUB על מחיצה מסויימת במקום על ה-MBR,
תצטרכו לשנות את הפקודה <c>setup</c> כך שתצביע על המחיצה הנכונה.
לדוגמא, אם אתם רוצים להתקין את GRUB על 
<path>/dev/hda3</path>, הפקודה תהפוך להיות  <c>setup (hd0,2)</c>.
מעט משתמשים ירצו לעשות דבר כזה, אגב.
</note>

<p>
אם יש לכם עוד שאלות בנוגע ל-GRUB, אנא עיינו ב<uri
link="http://www.gnu.org/software/grub/grub-faq.html">שאלות הנפוצות של GRUB</uri> או ב<uri
link="http://www.gnu.org/software/grub/manual/">מדריך של GRUB</uri>.
</p>

<p>
המשיכו עם <uri link="#reboot">הפעלת המחשב מחדש</uri>.
</p>

</body>
</subsection>
</section>
<section id="lilo" test="func:keyval('arch')='x86'">
<title>אלטרנטיבה: שימוש ב-LILO</title>
<subsection>
<title>התקנת LILO</title>
<body>

<p>
LILO, ה-LInuxLOader, הוא סוס עבודה מנוסה בתור טוען אתחול של לינוקס. למרות זאת, חסרות לו מספר תכונות של-GRUB יש (וזוהי גם הסיבה ש-GRUB צובר פופולריות).
הסיבה שעדיין משתמשים ב-LILO היא, שעל חלק מהמחשבים, GRUB לא עובד בעוד ש-LILO כן.
כמובן, משתמשים בו גם כי יש אנשים שמכירים את LILO ומעוניינים להישאר איתו. בכל מקרה, ג'נטו תומכת בשניהם, וכנראה שאתם בחרתם להשתמש ב-LILO...
</p>

<p>
התקנת LILO היא קלה כמשב רוח; פשוט השתמשו ב-<c>emerge</c>.
</p>

<pre caption="התקנת LILO">
# <i>emerge lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>קביעת התצורה של LILO</title>
<body>

<p>
כדי לקבוע את התצורה של LILO, עליכם ליצור את  <path>/etc/lilo.conf</path>. 
הריצו את העורך המועדף עליכם (בספר יד זה אנו נשתמש ב-<c>nano</c> לשם אחידות) וצרו את הקובץ.
</p>

<pre caption="יצירת etc/lilo.conf/">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
לפני כמה חלקים ביקשנו מכם לזכור את שם הקובץ של תמונת הקרנל שיצרתם. בדוגמת <path>lilo.conf</path> הבאה, אנו נשתמש
בסכמת המחיצות שעליה דובר במדריך קודם לכן.
ישנם שני חלקים נפרדים:
</p>

<ul>
  <li>
    לאלו שלא השתמשו ב-<c>genkernel</c> כדי לבנות את הקרנל שלהם
  </li>
  <li>
    ולאלו שהשתמשו ב-<c>genkernel</c> כדי לבנות את הקרנל שלהם
  </li>
</ul>

<p>
וודאו שאתם משתמשים בשם הקובץ של תמונת המראה <e>שאתם</e> יצרתם,
ואם רלוונטי, של תמונת ה-initrd <e>שאתם</e> יצרתם.
</p>

<note>
אם מערכת הקבצים במחיצת השורש שלכם היא JFS, אתם <e>חייבים</e> להוסיף <c>" ro"</c> לשורת ה-<c>kernel</c>
כיוון ש-JFS חייב לבצע replay ללוג שלו לפני שהוא מאפשר
עגינת קריאה/כתיבה.
</note>

<pre caption="דוגמא של etc/lilo.conf/">
boot=/dev/hda             <comment># MBR-ב LILO התקן את</comment>
prompt                    <comment># תן למשתמש סיכוי לבחור בחירה אחרת</comment>
timeout=50                <comment># המתן 5 (חמש) שניות לפני שתטען את קרנל ברירת המחדל</comment>
default=gentoo            <comment># gentoo אחרי שזמן ההמתנה פוקע, הרץ את החלק</comment>

<comment># genkernel עבור מי שלא השתמש ב</comment>
image=/boot/<keyval id="kernel-name"/>
  label=gentoo            <comment># שם שניתן לחלק זה</comment>
  read-only               <comment># !התחל עם שורש לקריאה בלבד. לא לשנות</comment>
  root=/dev/hda3          <comment># מיקומה של מערכת הקבצים של השורש</comment>

image=/boot/<keyval id="kernel-name"/>
  label=gentoo.rescue     <comment># שם שניתן לחלק זה</comment>
  read-only               <comment># !התחל עם שורש לקריאה בלבד. לא לשנות</comment>
  root=/dev/hda3          <comment># מיקומה של מערכת הקבצים של השורש</comment>
  append="init=/bin/bb"   <comment># הצלה shell הרץ את ג'נטו עם</comment>

<comment># genkernel עבור משתמשי</comment>
image=/boot/<keyval id="genkernel-name"/>
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev"
  initrd=/boot/<keyval id="genkernel-initrd"/>

<comment># שתי השורות הבאות נועדו לאתחול כפול עם חלונות.</comment>
<comment># /dev/hda6 במקרה זה, חלונות נמצאת על</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
ה-<c>udev</c> שמצויין בסוף של שורת הקרנל נחוץ כדי לעקוף
באג שיש בחלק מהגירסאות של genkernel <e>אם</e> אתם משתמשים
ב-udev מלכתחילה (וברירת המחדל היא שכן).
</note>

<note>
אם אתם משתמשים בסכמת מחיצות ו/או בתמונת קרנל שונה, שנו בהתאם.
</note>

<p>
אם אתם צריכים להוסיף אפשרויות נוספות לקרנל, הוסיפו הצהרת 
<c>append</c> לחלק. בתור דוגמא, נוסיף הצהרת 
<c>video</c> כדי להפעיל framebuffer:
</p>

<pre caption="שימוש ב-append כדי להוסיף אפשרויות לקרנל">
image=/boot/<keyval id="kernel-name"/>
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="video=vesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
אם אתם משתמשים בקרנל 2.6.7 או חדש יותר וג'ימפרתם את הכונן
הקשיח שלכם בגלל שה-BIOS לא היה מסוגל לטפל בכוננים קשיחים
גדולים, תצטרכו להוסיף 
<c>hdx=stroke</c>.
</p>

<p>
משתמשי <c>genkernel</c> צריכים לדעת שהקרנל שלהם משתמש באותן
אפשרויות אתחול כמו שיש בתקליטור ההתקנה. לדוגמא, אם יש לכם
התקני SCSI, אתם צריכים להוסיף את אפשרות הקרנל <c>doscsi</c>.
</p>

<p>
כעת שמרו וצאו. כדי לסיים, עליכם להריץ את הפקודה <c>/sbin/lilo</c> כך ש-LILO תוכל להחיל את  <path>/etc/lilo.conf</path> למערכת שלכם (כלומר, להתקין את עצמה
על הדיסק). קחו בחשבון שתצטרכו להריץ את 
<c>/sbin/lilo</c> בכל פעם שתתקינו קרנל חדש או שתעשו שינוי כלשהוא לתפריט.
</p>

<pre caption="סיום התקנת LILO">
# <i>/sbin/lilo</i>
</pre>

<p>
אם יש לכם עוד שאלות בנוגע לתוכנה LILO, התייעצו עם  <uri
link="http://en.wikipedia.org/wiki/LILO_(boot_loader)">דף הויקיפדיה</uri> שלה.
</p>

<p>
כעת אתם יכולים להמשיך עם  <uri link="#reboot">הפעלת המערכת שלכם מחדש</uri>.
</p>

</body>
</subsection>
</section>
<section id="reboot">
<title>הפעלת המחשב מחדש</title>
<subsection>
<body>

<p>
צאו מסביבת ה-chroot והורידו את העגינה של כל מערכות הקבצים המעוגנות. לאחר מכן הקלידו את פקודם הקסם שחיכיתם לה: <c>reboot</c>.
</p>

<pre caption="ביטול עגינת המחיצות ואתחול המחשב">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
כמובן, אל תשכחו להוציא את תקליטור ההתקנה, אחרת התקליטור
יאותחל בפעם הבאה במקום מערכת הג'נטו החדשה שלכם.
</p>

<p>
אחרי שאתחלתם את התקנת הג'נטו שלכם, סיימו עם <uri
link="?part=1&amp;chap=11">סיום התקנת הג'נטו שלכם</uri>.
</p>

</body>
</subsection>
</section>
</sections>
