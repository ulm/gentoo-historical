<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fa/handbook/hb-working-use.xml,v 1.1 2013/01/20 17:22:06 swift Exp $ -->

<sections>

<abstract>
یواس‌ائی پرچمک‌ها جنبه مهمی از جنتو هستند. در این فصل، شما کار با یواس‌ائی پرچمک‌ها را یاد می گیرد و فعل و انفعال یواس‌ائی پرچمک‌ها و دستگاهتان را درک می نمایید. 
</abstract>

<version>3</version>
<date>2012-07-24</date>

<section>
<title>پرچمک‌های USE چه چیزی هستند؟</title>
<subsection>
<title>ایده قرارگرفته در پشت پرچمک‌های یواس‌ائی</title>
<body>

<p>
هنگامیکه جنتو نصب می نمایید (یا هر توزیع دیگری یا حتی هر سیستم عامل دیگری در رابطه با این مطلب) انتخاب هائی درباره محیطی که در آن کار می نمایید انجام می دهید. تنظیمات مربوط به یک سرور با تنظیمات مربوط به یک جایگاه کار متفاوت است. یک جایگاه کار بازی با جایگاه کار سه بعدی متفاوت است. 
</p>

<p>
این فقط درباره اینکه چه بسته هائی باید نصب گردند درست نیست بلکه درباره خصوصیاتی که بسته ها باید از آن‌ها پشتیبانی نمایند هم درست است. اگر به OpenGL نیاز ندارید چرا باید OpenGL را نصب نمایید و پشتیبانی از OpenGL را در بیشتر بسته های خودتان فعال نمایید؟ اگر نمی‌خواهید از KDE استفاده نمایید، چرا باید بسته های خودتان را با پشتیبانی از KDE کامپایل نمایید اگر آن‌ها بدون آن هم بخوبی کار می نمایند؟ 
</p>

<p>
برای اینکه به کاربرانمان کمک نماییم تا تصمیم بگیرند چه چیزی نصب/فعال شود و چه چیزی نه، می‌خواهیم کاربرانمان محیط خودشان را از راهی ساده مشخص نمایند. این کاربران را مجبور می نماید تا تصمیم بگیرند که واقعاً چه چیزی می‌خواهند و پردازش را برای پرتیج، دستگاه مدیریت بسته های ما، آسان می نماید تا بتواند تصمیم های مفیدتری بگیرد. 
</p>

</body>
</subsection>
<subsection>
<title>تعریف کردن یک پرچمک یو اس ائی</title>
<body>

<p>
داخل پرچمک های یو اس ائی. در یک مفهوم کلی هر پرچمک کلمه کلیدی است که پشتیبانی و اطلاعات-وابستگی ها را وارد می نماید. اگر یک پرچمک یو اس ائی را تعریف نمایید، پرتیج خواهد فهمید که شما پشتیبانی برای استفاده از آن کلمه کلیدی را نیاز دارید. البته این همچنین اطلاعات وابستگی‌های یک بسته را نیز تغییر می دهد. 
</p>

<p>
اجازه دهید به یک نمونه ویژه اشاره نماییم: کلمه کلیدی <c>kde</c>. اگر در متغییرهای <c>USE</c> خودتان این کلمه کلیدی را ندارید، همه بسته هائی که به شکل <e>انتخابی</e> از KDE پشتیبانی می نمایند، <e>بدون</e> پشتیبانی از آن کامپایل خواهند شد. همه بسته هائی که یک گزینه انتخابی پشتیبانی از KDE دارند، بدون نصب کتابخانه‌های KDE (به عنوان پیش نیاز) نصب خواهند شد. اگر کلمه کلیدی <c>kde</c> را تعریف نموده باشید، آن بسته ها با پشتیبانی از KDE کامپایل <e>خواهند</e> شد، و کتابخانه‌های KDE به عنوان پیش نیاز نصب خواهند گردید. 
</p>

<p>
با تعریف دقیق کلمات کلیدی دستگاهی بدست خواهید آورد که به شکل شایسته ائی برای نیازهای شما خصوصی سازی شده. 
</p>

</body>
</subsection>
<subsection>
<title>ماهیت یک پرچمک یو اس ائی چیست؟</title>
<body>

<p>
دو نوع پرچمک USE وجود دارد: پرچمک های <e>global</e> و پرچمک های <e>local</e>.
</p>

<ul>
  <li>
یک پرچمک USE <e>global</e> بوسیله چندین بسته در سرتاسر دستگاه مورد استفاده قرار می گیرند. این آن چیزی است که بیشتر مردم از پرچمکهای یو اس ائی می بینند.
  </li>
  <li>
یک پرچمک USE <e>local</e> به وسیله یک بسته مشخص برای تبدیل بسته به حالتی خاص استفاده می شود. 
  </li>
</ul>

<p>
یک فهرست از متغییرهای سراسری (global) پرچمک های USE می‌تواند به شکل <uri link="/dyn/use-index.xml">برخط</uri> یا به شکل محلی در <path>/usr/portage/profiles/use.desc</path> پیدا شوند.
</p>

<p>
فهرستی از متغییرهای پرچمک های یو اس ائی را می‌توان به شکل محلی در <path>/usr/portage/profiles/use.local.desc</path> پیدا نمود. 
</p>

</body>
</subsection>
</section>
<section>
<title>استفاده نمودن از پرچمک‌های یواس‌ائی</title>
<subsection>
<title>اعلام پایدار پرچمک‌های یواس‌ائی</title>
<body>

<p>
با توقع اینکه شما درباره اهمیت پرچمک های یو اس ائی متقاعد شده باشید، اکنون به شما آموزش خواهیم داد که چگونه به شکل پایدار پرچمک های یو اس ائی را اعلام نمایید. 
</p>

<p>
همانگونه که پیشتر اعلام شد، همه پرچمک های USE درون متغییرهای <c>USE</c> اعلام می گردند. برای آسانتر نمودن جستجو و قرار دادن پرچمک های یو اس ائی توسط کاربران، به شکل <e>پیش‌فرض</e> یک تنظیماتی برای پرچمک های USE فراهم آورده ایم. این تنظیمات مجموعه ائی از پرچمک ها هستند که ما فکر می‌کنیم به شکل عمومی توسط کاربران جنتو بکار گرفته می شوند. این تنظیمات پیش فرض، در <path>make.defaults</path> که بخشی از پروفایل شماست اعلان گردیده اند. 
</p>

<p>
پروفایلی که دستگاه شما به آن گوش می نماید، در میانبر <path>/etc/portage/make.profile</path> اعلام گردیده. هر پروفایل بروی پروفایل بزرگتر دیگری کار می نماید، و در نتیجه محصول نهائی بخشی از همه پروفایل هاست. بالاترین پروفایل، پروفایل <path>base</path> است ( <path>/usr/portage/profiles/base</path> ). 
</p>

<p>
اجازه دهید نگاهی به این تنظیمات پیش‌فرض در پروفایل 10.0 بیاندازیم: 
</p>

<pre caption="Cumulative make.defaults USE variable for the 10.0 profile">
<comment>(This example is the sum of the settings in base, default/linux,
 default/linux/x86 and default/linux/x86/10.0/)</comment>
USE="a52 aac acpi alsa branding cairo cdr dbus dts dvd dvdr emboss encode exif
fam firefox flac gif gpm gtk hal jpeg lcms ldap libnotify mad mikmod mng mp3
mp4 mpeg ogg opengl pango pdf png ppds qt3support qt4 sdl spell
startup-notification svg tiff truetype vorbis unicode usb X xcb x264 xml xv
xvid"
</pre>

<p>
همانگونه که می بینید، این متغییر در حال حاضر شامل تعداد زیادی کلمه کلیدی است. فایل <path>make.defaults</path> را برای تعیین متغییرهای <c>USE</c> مورد نیازتان، تغییر <b>ندهید</b>: تغییرات در این فایل در هنگامی که پرتیج را بروزرسانی می نمایید، به شکل پیش‌فرض خود برخواهد گشت! 
</p>

<p>
برای تغییر این تنظیمات پیش‌فرض لازم است تا کلمه های کلیدی را به متغییر <c>USE</c> اضافه یا از آن کم نمایید. اینکار با تعریف متغییر <c>USE</c> در <path>/etc/portage/make.conf</path> به شکل سراسری صورت می گیرد. در این متغییر، شما پرچمک های USE را که نیاز دارید اضافه می نمایید، یا پرچمک های USE را که نیاز ندارید را پاک می نمایید. این آخری بوسیله اضافه نمودن یک علامت منها در پیش از کلمه کلیدی انجام می‌گردد (“-”). 
</p>

<p>
برای مثال برای حذف پشتیبانی از KDE و QT و اضافه نمودن پشتیبانی از ldap بجای آن، <c>USE</c> زیر را می‌توان در <path>/etc/portage/make.conf</path> تعریف نمود: 
</p>

<pre caption="An example USE setting in /etc/portage/make.conf">
USE="-kde -qt4 ldap"
</pre>

</body>
</subsection>
<subsection>
<title>اعلام پرچمک‌های USE برای بسته‌های منحصر به فرد</title>
<body>

<p>
گاهی مواقع می‌خواهید پرچمک USE را برای یک (یا چند) برنامه اعلام نمایید اما نمی‌خواهید این پرچمک در همه دستگاه مورد استفاده قرار گیرد. برای انجام اینکار لازم دارید تا دایرکتوری <path>/etc/portage</path> را ایجاد نمایید (اگر هنوز وجود ندارد) و فایل <path>/etc/portage/package.use</path> را ویرایش نمایید. معمولاً این یک فایل تکی است، اما همچنین می‌تواند یک دایرکتوری باشد; برای اطلاعات بیشتر <c>man portage</c> را ببینید. مثال بعدی فرض بر این می‌گیرد که <path>package.use</path> یک فایل تکی است. 
</p>

<p>
برای مثال اگر <c>berkdb</c> را به شکل سراسری نمی‌خواهید اما آنرا برای <c>mysql</c> می خواهید، می‌توانید اینگونه اضافه ائی داشته باشید: 
</p>

<pre caption="/etc/portage/package.use example">
dev-db/mysql berkdb
</pre>

<p>
البته بخوبی هم می‌توانید پشتیبانی یک پرچمک را برای یک برنامه خاص را <e>از کار بیاندازید</e>. برای مثال اگر نمی‌خواهید <c>java</c> در PHP پشتیبانی شود: 
</p>

<pre caption="/etc/portage/package.use 2nd example">
dev-php/php -java
</pre>

</body>
</subsection>
<subsection>
<title>اعلام موقت پرچمک‌های یواس‌ائی</title>
<body>

<p>
گاهی مواقع فقط می‌خواهید یک بار تنظیم USE را اجرا نمایید. بجای دوبار ویرایش <path>/etc/portage/make.conf</path> (برای گذاردن و حذف پرچمک) می‌توانید متغییر USE را به عنوان متغییر محیطی اعلام نمایید. بخاطر داشته باشید که هنگامی که این برنامه را مجدداً نصب می نمایید یا آنرا بروزرسانی می نمایید (همینطور البته به عنوان بخشی از بروزرسانی دستگاه)، تغییرات شما از بین خواهند رفت! 
</p>

<p>
به عنوان یک مثال می‌خواهیم java در تنظیمات USE در هنگام نصب seamonkey پاک گردد. 
</p>

<pre caption="Using USE as environment variable">
# <i>USE="-java" emerge seamonkey</i>
</pre>

</body>
</subsection>
<subsection>
<title>حق تقدم</title>
<body>

<p>
البته پیشی گیری هم در اینکه کدام تنظیمات در بالای دیگر تنظیمات اجرا شوند وجود دارد. شما نمی‌خواهید از متغییر <c>USE="-java"</c> استفاده نمایید و ببینید که هنوز <c>java</c> به خاطر اعلام در تنظیماتی بالاتر در حال پشتیبانی شدن است. پیشی گیری تنظیمات به گونه زیر است (اولین، کمترین حق پیشی گیری را دارد): 
</p>

<ol>
  <li>
تنظیمات USE پیش‌فرض اعلام شده در فایل <path>make.defaults</path> شما به عنوان بخشی از پروفایل شما 
  </li>
  <li>
تنظیمات تعریف شده توسط کاربر در <path>/etc/portage/make.conf</path>
  </li>
  <li>
تنظیمات تعریف شده توسط کاربر در <path>/etc/portage/package.use</path>
  </li>
  <li>
تنظیمات USE تعریف شده توسط کاربر به عنوان متغییر محیطی
  </li>
</ol>

<p>
برای دیدن تنظیمات پایانی <c>USE</c> به شکلی که پرتیج آنرا می بیند، دستور <c>emerge --info</c> را اجرا نمایید. این دستور همه متغییرهای نهائی (شامل متغییر <c>USE</c> ) را به همراه مفادی که توسط پرتیج مورد استفاده قرار می‌گیرد را فهرست می نماید. 
</p>

<pre caption="Running emerge --info">
# <i>emerge --info</i>
</pre>

</body>
</subsection>
<subsection>
<title>سازگار نمودن تمام دستگاه با پرچمک های USE جدید</title>
<body>

<p>
اگر پرچمک‌های USE خودتان را تغییر داده‌اید و می خواهید تمام دستگاه‌تان را با استفاده از پرچمک‌های جدید USE بروزرسانی نمایید، از گزینه <c>--newuse</c> در <c>emerge</c> استفاده نمایید:
</p>

<pre caption="Rebuilding your entire system">
# <i>emerge --update --deep --newuse world</i>
</pre>

<p>
پس از آن depclean پرتیج را اجرا نمایید تا وابستگی‌های شرایطی که پیشتر در دستگاه قدیمی شما مورد استفاده بودند اما اکنون بدون استفاده مانده اند، پاک گردند.  
</p>

<warn>
اجرای دستور <c>emerge --depclean</c> دستور یا اعلانی خطرناک است و باید با دقت استفاده گردد. فهرست بسته هائی را که پاک می‌گردند را مجدداً برسی نمایید تا مطمئن شوید بسته ائی که مورد نیاز شما باشد، پاک نمی گردد. در نمونه بعدی ما یک کلید <c>-p</c> به دستور اضافه می نماییم تا به depclean بگوییم که فقط فهرست بسته ها را به نمایش در آورد بدون اینکه آن‌ها را پاک کند. 
</warn>

<pre caption="Removing obsoleted packages">
# <i>emerge -p --depclean</i>
</pre>

<p>
هنگامیکه depclean به پایان رسید، دستور <c>revdep-rebuild</c> را اجرا نمایید تا برنامه هائی را که به شکل سیال به اشتراک های بسته های پاک شده مربوط گردیده بودند، بازسازی شوند. دستور <c>revdep-rebuild</c> بخشی از بسته <c>gentoolkit</c> است; فراموش نکنید که ابتدا آنرا emerge نمایید. 
</p>

<pre caption="Running revdep-rebuild">
# <i>revdep-rebuild</i>
</pre>

<p>
هنگامیکه همه این‌ها انجام شد، دستگاه شما از تنظیمات پرچمک های جدید استفاده خواهد نمود. 
</p>

</body>
</subsection>
</section>
<section>
<title>بسته ویژه پرچمک‌های یواس‌ائی</title>
<subsection>
<title>دیدن متغییرهای پرچمک یواس‌ائی</title>
<body>

<p>
اجازه دهید نمونه ائی درباره <c>seamonkey</c> بیاوریم: چه پرچمک های USE برای آن فهرست می شوند؟ برای فهمیدن، ما از انتخاب های <c>--pretend</c> و <c>--verbose</c> برای <c>emerge</c> استفاده می نماییم: 
</p>

<pre caption="Viewing the used USE flags">
# <i>emerge --pretend --verbose seamonkey</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild   R   ] www-client/seamonkey-1.0.7  USE="crypt gnome java -debug -ipv6
-ldap -mozcalendar -mozdevelop -moznocompose -moznoirc -moznomail -moznopango
-moznoroaming -postgres -xinerama -xprint" 0 kB
</pre>

<p>
دستور <c>emerge</c> تنها ابزار برای انجام این کار نیست. در حقیقت ما ابزاری مخصوص برای اطلاعات بسته ها به نام <c>equery</c> که در بسته <c>gentoolkit</c> قرار دارد، داریم. ابتدا بسته <c>gentoolkit</c> را نصب نمایید: 
</p>

<pre caption="Installing gentoolkit">
# <i>emerge gentoolkit</i>
</pre>

<p>
اکنون دستور <c>equery</c> را با آرگومنت <c>uses</c> برای دیدن پرچمک های USE بسته مورد نظر، اجرا نمایید. برای مثال برای بسته <c>gnumeric</c> به شکل زیر اجرا نمایید: 
</p>

<pre caption="Using equery to view used USE flags">
# <i>equery --nocolor uses =gnumeric-1.6.3 -a</i>
[ Searching for packages matching =gnumeric-1.6.3... ]
[ Colour Code : set unset ]
[ Legend : Left column  (U) - USE flags from make.conf              ]
[        : Right column (I) - USE flags packages was installed with ]
[ Found these USE variables for app-office/gnumeric-1.6.3 ]
 U I
 - - debug  : Enable extra debug codepaths, like asserts and extra output.
              If you want to get meaningful backtraces see
              http://www.gentoo.org/proj/en/qa/backtraces.xml .
 + + gnome  : Adds GNOME support
 + + python : Adds support/bindings for the Python language
 - - static : !!do not set this during bootstrap!! Causes binaries to be
              statically linked instead of dynamically
</pre>

</body>
</subsection>
</section>
</sections>
