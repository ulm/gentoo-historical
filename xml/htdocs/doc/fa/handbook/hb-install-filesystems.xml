<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fa/handbook/hb-install-filesystems.xml,v 1.1 2013/01/20 17:13:31 swift Exp $ -->
<!DOCTYPE included SYSTEM "/dtd/guide.dtd">

<included>

<version>10</version>
<date>2012-10-28</date>

<section id="filesystemsdesc">
<title>فایل سیستم ها</title>
<body>

<p test="contains('x86 Alpha',func:keyval('arch'))">
The Linux kernel supports various filesystems. We'll explain ext2, ext3, ext4,
ReiserFS, XFS and JFS as these are the most commonly used filesystems on Linux
systems.
کرنل لینوکس از انواع مختلفی از filesystem ها پشتیبانی می نماید. ما ext2 ,ext3, ext4 ReiserFS, XFS و JFS که عموما بیشتر در filesystem های روی لینوکس استفاده می شوند را شرح خواهیم داد.
</p>

<p test="func:keyval('arch')='IA64'">
کرنل لینوکس از انواع مختلفی از filesystem ها پشتیبانی می نماید. ما vfat, ext2, ext3,
ext4, ReiserFS, XFS و JFS که عموما بیشتر در filesystem های روی لینوکس استفاده می شوند را شرح خواهیم داد.
</p>

<p test="func:keyval('arch')='AMD64'">
فایل سیستم های گوناگونی موجود هستند. برخی در amd64 پایدار هستند و برخی دیگر خیر. فایل سیستم های زیر پایدار هستند: ext2, ext3, ext4 and XFS. JFS و ReiserFS ممکن است کار نمایند اما به آزمایشات بیشتری نیاز دارند. اگر واقعا فایل سیستمی برای شما مشکل ساز شد، آنرا تغییر دهید.
</p>

<p test="func:keyval('arch')='arm'">
فایل سیستم های گوناگونی موجود هستند. برخی از آنها بروی معماری arm پایدار هستند و برخی خیر. ext2, ext3 and ext4 پایدار هستند. JFS، XFS و ReiserFS ممکن است کار نمایند اما به آزمایشهای بیشتری نیاز دارند. اگر واقعا فایل سیستمی برای شما مشکل ساز شد، آنرا تغییر دهید.
</p>

<p test="func:keyval('arch')='HPPA'">
فایل سیستم های گوناگونی موجود هستند. Ext2, ext3, ext4, XFS و reiserfs بروی معماری HPPA پایدار هستند. مابقی آزمایشی هستند.
</p>

<p test="func:keyval('arch')='MIPS'">
فایل سیستم های گوناگونی موجود هستند. ReiserFS, EXT2, EXT3 و EXT4 بروی معماری MIPS پایدار هستند. مابقی آزمایشی هستند.
</p>

<p test="func:keyval('arch')='PPC'">
فایل سیستم های گوناگونی برای استفاده بروی معماری PowerPC وجود دارد که شامل ext2, ext3, ext4, ReiserFS و XFS می شود، هرکدام با امتیازها و کاستی های مخصوص به خودشان. 
</p>

<note test="func:keyval('arch')='PPC64'">
فایل سیستم های گوناگونی موجود هستند. پشتیبانی از  ext2, ext3, ext4 و ReiserFS در کرنل لوح فشرده نصب درون ساز هستند. پشتیبانی از JFS و XFS با استفاده از ماژول های کرنل امکان پذیر است.
</note>

<p test="func:keyval('arch')='SPARC'">
فایل سیستم های گوناگونی موجود هستند، که برخی برای معماری SPARC به عنوان پایدار شناخته شده اند. Ext2, ext3 و ext4, برای مثال، بخوبی کار می نمایند. فایل سیستم های جایگزین ممکن است بدقت عمل ننمایند.
</p>

<note test="func:keyval('arch')='Alpha'">
دستگاه <c>aboot</c> فقط از راه اندازی از پارتیشن های <b>ext2</b> و <b>ext3</b> پشتیبانی می نماید.
</note>

</body>
<body>

<p test="func:keyval('arch')='IA64'">
فایل سیستم  فرمت  است، که در فایل سیستم های زیادی بروزرسانی شده. همچنین این تنها نوع فایل سیستمی است که فریم ور EFI بروی دستگاه های ia64 آنرا می فهمد. پارتیشن راه انداز بروی دستگاه های ia64 همیشه باید vfat باشد، اما برای پارتیشن داده های خودتان می توانید از یکی از فایل سیستم های فهرست شده در زیر استفاده نمایید.
</p>

<p>
فایل سیستمی <b>ext2</b> فایل سیستمی امتحان شده و با ثبات لینوکس است اما ژورنال متادیتا ندارد، که به این معنی است که روال بررسی فایل سیستمی ext2 در هنگام آغاز بکار می تواند بسیار وقت گیر باشد. اکنون فهرست کاملی از انتخاب نسخه های جدیدتر وجود دارند که می توانند بسرعت تطبیق پذیری آغازین را بررسی نمایند و عموما در نقطه مقابل نسخه های فاقد-ژورنال قرار می گیرند. ژورنال های فایل سیستم ها از اتلاف وقت در هنگام راه اندازی دستگاه شما جلوگیری می نمایند و شمای فایل سیستم های شما در شرایطی متناقض قرار نمی گیرند. اگر تصمیم به نصب جنتو بروی یک دیسک بسیار کوچک (کوچکتر از ۴ گیگابایت) دارید، نیازخواهید داشت تا هنگام ایجاد filesystem به ext2 بگویید تا inode کافی برای اینکار کنار بگذارد. برنامه <c>mke2fs</c> از "bytes-per-inode" برای تنظیم محاسبه اینکه یک فایل سیستمی چه مقدار inodes باید داشته باشد استفاده می نماید. با راه اندازی نمودن  <c>mke2fs -T small /dev/&lt;device&gt;</c> تعداد inode ها معمولا بصورت چهارگانه مقدار کمتری "bytes-per-inode" از هر ۱۶ کیلوبایت به هر یک ۴ کیلوبایت به فایل سیستمی داده خواهد شد. می توانید با استفاده از <c>mke2fs -i &lt;ratio&gt; /dev/&lt;device&gt;</c> این مقدار را میزان نمایید.
</p>

<p>
فایل سیستمی <b>ext3</b> نسخه ژورنال شده ائی از فایل سیستم ext2 است، که ژورنال متادیتائی برای ترمیم سریع در افزایش بالابردن سبک های دیگر ژورنال کردن مانند داده های پرشده و ژورنال کردن داده های خواسته شده فراهم می آورد. این فایل سیستم از یک فهرست HTree که قابلیت واکنش بالائی را در هر شرایطی برای آن ایجاد می نماید استفاده می کند. بطور خلاصه ext3 یک فایل سیستم خیلی خوب و قابل اطمینان است. فایل سیستم ext3 یک فایل سیستم پیشنهادی برای هر هدفی بروی هر سکوئی است. اگر تصمیم به نصب جنتو بروی یک دیسک بسیار کوچک (کوچکتر از ۴ گیگابایت) دارید، نیازخواهید داشت تا هنگام ایجاد filesystem به ext3 بگویید تا inode کافی برای اینکار کنار بگذارد. برنامه <c>mke2fs</c> از "bytes-per-inode" برای تنظیم محاسبه اینکه یک فایل سیستمی چه مقدار inode ها باید داشته باشد استفاده می نماید. با راه اندازی نمودن  <c>mke2fs -j -T small /dev/&lt;device&gt;</c> تعداد inodes معمولا بصورت چهارگانه مقدار کمتری "bytes-per-inode" از هر ۱۶ کیلوبایت به هر یک ۴ کیلوبایت به فایل سیستمی داده خواهد شد. می توانید با استفاده از <c>mke2fs -j -i &lt;ratio&gt; /dev/&lt;device&gt;</c> این مقدار را میزان نمایید.
</p>

<p test="contains('x86 Alpha MIPS AMD64 arm IA64 SPARC HPPA PPC PPC64',func:keyval('arch'))">
فایل سیستمی <b>ext4</b> فایل سیستمی ایجاد شده از انشعاب ext3 است که موجب خصیصه های جدیدی مانند بهبود کارائی و حذف محدودیت فضا بوسیله تغییر نوع مدیریت در فرمت روی-دیسک شده است. این فایل سیستم می تواند محدوده ۱ EB با حداکثر فایل سیستم ۱۶ ترابایتی را پوشش دهد. بجای تخصیص بلوک های نقشه بیتی سنتی ext2/3 فایل سیستمی ext4 از <uri link="http://en.wikipedia.org/wiki/Extent_%28file_systems%29">extents</uri> استفاده می نماید که کارائی فایل های بزرگ را افزایش داده و فراگمنتیشن را کاهش می دهد. فایل سیستمی ext4 همچنین الگوریتم تخصیص بلوک های رده بالائی (تخصیص تاخیر و تخصیص چندبلوکی) را موجب می شود که به درایور فایل سیستمی راه های بیشتر برای بهینه سازی داده های بروی دیسک می دهد. فایل سیستمی ext4 یک مصالحه بین پایداری کد ارتقاء محصول و نیاز به معرفی الحاقات در تقریبا اکثر فایل سیستم های قدیمی است.
</p>

</body>
<body test="not(func:keyval('arch')='SPARC')">

<p test="not(func:keyval('arch')='PPC')">
فایل سیستمی <b>JFS</b> یک فایل سیستمی باکارائی بالای IBM است. فایل سیستمی JFS یک فایل سیستم سبک،سریع و قابل اطمینان بر مبنای B+tree با کارکرد خوب در شرایط مختلف است.
</p>

<p>
فایل سیستمی <b>ReiserFS</b> یک فایل سیستمی برمبنای B+tree ژورنال شده است که در مجموع کارکرد خوبی دارد، خصوصا در هنگام کار با تعداد زیادی فایل های کوچک در چرخه های سنگین CPU. به نظر می رسد ReiserFS به نسبت دیگر فایل های سیستمی کمتر گسترش می یابد.
</p>

<p>
فایل سیستمی <b>XFS</b> یک فایل سیستم با ژورنال کردن متادیتا است که با تنظیمات-خصیصه پرقدرت می آید و برای scalability بهینه سازی شده. به نظر می رسد فایل سیستمی XFS ساده گذری کمتری در مشکلات گوناگون سخت افزاری دارد.
</p>

</body>
</section>
</included>
