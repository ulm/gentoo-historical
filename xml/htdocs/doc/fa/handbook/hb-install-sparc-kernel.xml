<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fa/handbook/hb-install-sparc-kernel.xml,v 1.1 2013/01/20 17:08:47 swift Exp $ -->

<sections>

<version>14</version>
<date>2012-09-11</date>

<section>
<title>منطقه زمانی</title>
<body>

<p>
ابتدا لازم است تا منطقه زمانی خودتان را انتخاب نمایید تا دستگاه شما دریابد در چه موقعیتی قرار دارد. به منطقه های زمانی در <path>/usr/share/zoneinfo</path> نگاه بیاندازید و سپس آنرا در <path>/etc/localtime</path> رونوشت نمایید. لطفا از منطقه زمانی به شکل <path>/usr/share/zoneinfo/Etc/GMT*</path> دوری نمایید چون به عنوان یک نام، منطقه قابل توقعی را نشان نمی دهد. برای مثال <path>GMT-8</path> درواقع  GMT+8 است.
</p>

<pre caption="Setting the timezone information">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Suppose you want to use Europe/Brussels)</comment>
# <i>cp /usr/share/zoneinfo/Europe/Brussels /etc/localtime</i>
<comment>(Next set the timezone)</comment>
# <i>echo "Europe/Brussels" &gt; /etc/timezone</i>
</pre>

</body>
</section>
<section>
<title>نصب کردن منابع</title>
<subsection>
<title>انتخاب یک کرنل</title>
<body>

<p>
هسته ائی که همه توزیع ها بدور آن ساخته می شوند، کرنل لینوکس است. این لایه ائیست بین برنامه های کاربر و سخت افزار دستگاه شما. جنتو برای کاربرانش چندین کدمنبع کرنل ممکن فراهم آورده است. یک فهرست کامل بهمراه توضیحات آنها در آدرس  <uri link="/doc/en/gentoo-kernel.xml">راهنمای کرنل جنتو</uri> موجود است. 
</p>

<p>
برای دستگاه های مبتنی بر <keyval id="arch"/> ما <c>gentoo-sources</c> را داریم (کدمنبع کرنل برای خصیصه های بیشتر).
</p>

<p>
کرنل خود را انتخاب نمایید و آنرا با استفاده از <c>emerge</c> نصب نمایید.
</p>

<pre caption="Installing a kernel source">
# <i>emerge gentoo-sources</i>
</pre>

<p>
هنگامیکه نگاهی به <path>/usr/src</path> بیاندازید باید میانبری بنام <path>linux</path> به کدمنبع کرنل خودتان ببینید. در این مورد، کدمنبع <c>linux-<keyval id="kernel-version"/></c> است. نسخه شما ممکن است متفاوت باشد، پس این را بخاطر داشته باشید.
</p>

<pre caption="Viewing the kernel source symlink">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root       12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
اکنون زمان پیکربندی و کامپایل کد منبع کرنل‌تان است. 
</p>

</body>
</subsection>
</section>
<section>
<title>پیکربندی دستی</title>
<subsection>
<title>مقدمه</title>
<body>

<p>
پیکربندی دستی یک کرنل اغلب به عنوان سخت ترین کاری که یک کاربر لینوکس در تمام مدت انجام می دهد دیده می شود. این چیزی بیشتر از واقعیت است -- بعد از پیکربندی یک مشت از کرنل ها شما اصلا بخاطر نخواهید آورد که اینکار زمانی مشکل بوده ;)
</p>

<p>
هرچند، یک چیز <e>درست</e> است : شما باید هنگامیکه شروع به پیکربندی دستی یک کرنل می نمایید دستگاهتان را بخوبی بشناسید. غالب اطلاعات می توانند به کمک emergingemerge pciutils ( <c>emerge pciutils</c> ) گردآوری شوند که شامل <c>lspci</c> نیز می شود. شما اکنون قادرید درون محیط chroot شده از <c>lspci</c> استفاده نمایید. ممکن است بطور ایمنی هر اخطار <e>pcilib</e> را نادیده بگیرید (شبیه <c>pcilib: cannot open  /sys/bus/pci/devices</c> ) که lspci به بیرون می دهد. بطور جایگزین می توانید lspci را از یک محیط <e>non-chrooted</e> اجرا نمایید. نتیجه مشابه است. همچنین می توانید <c>lsmod</c> را برای اینکه ببینید لوح فشرده نصب از چه ماژول هائی استفاده نموده اجرا نمایید (اینکار ممکن است شما را به شکل زیبائی آگاه نماید که چه چیز را باید فعال نمایید).
</p>

<p>
اکنون به دایرکتوری کدمنبع کرنل خودتان بروید و <c>make menuconfig</c> را اجرا نمایید. این دستور یک فهرست انتخاب پیکربندی نیمه راهنمائی کننده را روشن خواهد نمود.
</p>

<pre caption="Invoking menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
شما با چندین بخش پیکربندی ملاقات خواهید نمود. ما ابتدا برخی انتخاب ها را که شما باید فعال نمایید (در غیر اینصورت جنتو کارنخواهد نمود و یا بدون اضافات پیچیده بخوبی کار نخواهد نمود) را فهرست خواهیم نمود.
</p>

</body>
</subsection>
<subsection>
<title>فعال نمودن انتخاب های مورد نیاز</title>
<body>

<p>
ابتدا تنظیمات هنگام کامپایل شدن را برپا می نماییم تا مطمئن شویم کرنل لینوکس برای نوع دستگاه دقیق ساخته گردد. برای اینکار، <e>Cross-compiler tool prefix</e> را به <c>sparc64-unknown-linux-gnu-</c> تنظیم می نماییم (با ورود trailing dash ):
</p>

<pre caption="Identifying the proper cross compilation platform">
General setup ---&gt;
  (<i>sparc64-unknown-linux-gnu-</i>) Cross-compiler tool prefix
</pre>

<p>
سپس به <c>File Systems</c> بروید و پشتیبانی برای فایل سیستمی که استفاده می نمایید را انتخاب نمایید. آنرا به عنوان یک ماژول کامپایل <e>نکنید</e> ، در غیر اینصورت دستگاه جنتوی شما نخواهد توانست پارتیشن های شما را مانت نماید. همچنین <c>Virtual memory</c> و <c>/proc file system</c> را هم انتخاب نمایید:
</p>

<pre caption="Selecting necessary file systems">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Select one or more of the following options as needed by your system)</comment>
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Second extended fs support
</pre>

<p>
اگر برای ارتباط به اینترنت از PPPoE استفاده می نمایید یا در حال استفاده از یک مودم دیال آپ هستید، نیاز دارید که انتخاب های زیر را در کرنل پیگیری نمایید:
</p>

<pre caption="Selecting PPPoE necessary drivers">
Device Drivers ---&gt;
  Network device support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
دو انتخاب فشرده شده به هم آسیبی نمی زنند اما ضرورتی هم ندارند، هنگامیگه کرنل را پیکربندی می نمایید تا در حالت PPPoE باشد، انتخاب <c>PPP over Ethernet</c> که ممکن است فقط بوسیله <c>ppp</c> استفاده شوند، هیچ کاری انجام نمی دهند.
</p>

<p>
اکنون پشتیبانی bus دقیق را فعال نمایید:
</p>

<pre caption="Activating SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>(Only for UPA slot adapter used in many Ultras)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Only for SBUS slot adapter used in many SPARCStations)</comment>
</pre>

<p>
البته پشتیبانی برای OBP می خواهید:
</p>

<pre caption="Activating OBP Support">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
به پشتیبانی برای خصوصیات SCSI نیاز خواهید داشت:
</p>

<pre caption="Activating SCSI-specific support">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Only for SPARC ESP on-board SCSI adapter)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Only for SBUS SCSI controllers from PTI or QLogic)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Only for Ultra 60 on-board SCSI adapter)</comment>
</pre>

<p>
برای پشتیبانی از کارت شبکه، یکی از گزینه‌های زیر را انتخاب نمایید:
</p>

<pre caption="Activating networking support">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>(Only for SPARCStation, older Ultra systems, and as Sbus option)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>(Only for Ultra; also supports "qfe" quad-ethernet on PCI and Sbus)</comment>
    &lt;*&gt; DECchip Tulip (dc21x4x) PCI support <comment>(For some Netras, like N1)</comment>
  Ethernet (1000Mbit) ---&gt;
    &lt;*&gt; Broadcom Tigon3 support <comment>(Modern Netra, Sun Fire machines)</comment>
</pre>

<p>
هنگامیکه یک ماشین Ethernet با ۴ درگاه دارید ( ) درخواست درگاه با سولاریس متفاوت خواهد بود. می توانید از <c>sys-apps/ethtool</c> برای بررسی وضعیت پیوند درگاه استفاده نمایید.
</p>

<p>
اگر از یک کنترلگر دیسک <c>qla2xxx</c> استفاده می‌نمایید، لازم دارید از یک کرنل <c>2.6.27</c> یا جدیدتر استفاده نمایید، و همچنین نیاز دارید <c>sys-block/qla-fc-firmware</c> را امرژ نمایید. پس از آن نیاز دارید تا پشتیبانی برای لود شدن فریم‌ور خارجی را بیافزائید.
</p>

<pre caption="Enabling external firmware">
Device Drivers  ---&gt;
   Generic Driver Options  ---&gt;
   ()  External firmware blobs to build into the kernel binary
   ()  Firmware blobs root directory
</pre>

<p>
گزینه <c>"External firmware blobs"</c> را به <path>ql2200_fw.bin</path> تنظیم نمایید و <c>"Firmware blobs root directory"</c> را به <path>/lib/firmware</path>.
</p>

<p>
هنگامیکه پیکربندی کرنل را به پایان رساندید، با <uri  link="#compiling">کامپایل کردن و نصب نمودن</uri> ادامه دهید. هرچند پس از کامپایل شدن کرنل، اندازه آنرا بررسی نمایید:
</p>

<pre caption="Check kernel size">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
اگر اندازه (فشرده نشده) بزرگتر از ۷.۵ مگابایت بود، دوباره آنرا پیکربندی نمایید تا به این حد برسد. یک راه برای رسیدن به این هدف این است که بیشتر درایورهای کرنل را به عنوان ماژول کامپایل نمایید. نادیده گرفتن این می‌تواند به یک کرنل راه-نیافت ختم شود.
</p>

<p>
همچنین اگر کرنل شما کمی بزرگ است، می توانید با استفاده از دستور <c>strip</c> آنرا برهنه نمایید:
</p>

<pre caption="Stripping the kernel">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>کامپایل کردن و نصب نمودن</title>
<body>

<p>
اکنون که کرنل شما پیکربندی شد، زمان کامپایل کردن و نصب کردن آن رسیده. از پیکربندی خارج شوید و روند کامپایل کردن را آغاز نمایید:
</p>

<pre caption="Compiling the kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
هنگامیکه کامپایل شدن کرنل بپایان رسید، تصویر کرنل را به <path>/boot</path> رونوشت نمایید.
</p>

<pre caption="Installing the kernel">
# <i>cp arch/sparc/boot/image /boot/<keyval id="kernel-name"/></i>
</pre>

</body>
</subsection>
<subsection>
<include href="hb-install-initramfs.xml"/>
</subsection>

</section>
<section id="kernel_modules">
<title>ماژول های کرنل</title>

<subsection>
<include href="hb-install-kernelmodules.xml"/>
</subsection>

</section>
</sections>
