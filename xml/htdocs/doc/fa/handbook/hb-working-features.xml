<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fa/handbook/hb-working-features.xml,v 1.1 2013/01/20 17:20:09 swift Exp $ -->

<sections>

<abstract>
پی بردن به خصوصیاتی که پرتیج دارد، مثلا پشتیبانی برای کامپایل شدن توزیع سی کش و بیشتر. 
</abstract>

<version>7</version>
<date>2012-07-24</date>

<section>
<title>خصوصیات پرتیج</title>
<body>

<p>
پرتیج چندین خصوصیت اضافه هم دارد که تجربه کار با جنتو را برای شما بهتر می نمایند. بسیاری از این خصوصیات به ابزارهائی که موجب ارتقاء بهینه سازی، قابل اطمینان تر شدن، امنیت، … هستند، اتکا می نماید. 
</p>

<p>
برای راه اندازی/از کار انداختن خصوصیت‌های پرتیج لازم دارید تا متغییر <c>FEATURES</c> را در فایل <path>/etc/portage/make.conf</path> که شامل کلمات کلیدی گوناگونی است، که با کاما از هم جدا شده اند، را ویرایش نمایید. در چند مورد هم لازم است تا ابزارهای اضافه ائی را که خصوصیت‌ها به آن‌ها متکی هستند را نصب نمایید. 
</p>

<p>
همه خصوصیت هائی که پرتیج از آن‌ها پشتیبانی می نماید در اینجا فهرست نشده اند، برای یک بررسی کامل لطفاً به صفحه راهنمای <path>make.conf</path> مراجعه نمایید: 
</p>

<pre caption="Consulting the make.conf man page">
$ <i>man make.conf</i>
</pre>

<p>
برای اینکه بیابید کدام FEATURES به شکل پیش‌فرض تنظیم گردیده، دستور <c>emerge --info</c> را اجرا نموده و بدنبال متغییر FEATURES در آن جستجو نمایید: 
</p>

<pre caption="Finding out the FEATURES that are already set">
$ <i>emerge --info | grep FEATURES</i>
</pre>

</body>
</section>
<section>
<title>کامپایل کردن توزیع شده</title>
<subsection>
<title>استفاده نمودن از distcc</title>
<body>

<p>
برنامه <c>distcc</c> برنامه ائی است برای توزیع نمودن کامپایل شده ها در چندین ماشین، که لزوماً برابر نباشند، بروی یک شبکه. سمت کاربر <c>distcc</c> همه اطلاعات لازم را به سرور <c>distcc</c> موجود (اجرا کردن distccd) ارسال می نماید، بنابر این سرور می‌تواند قطعات کد را برای سمت کاربر کامپایل نماید. کامپایل شبکه ائی نتیجه زمان سریعتر کامپایل را پیامد خواهد داشت. 
</p>

<p>
می‌توانید اطلاعات بیشتر درباره <c>distcc</c> را (و همینطور چگونگی کارکرد آن با جنتو) را در <uri link="/doc/en/distcc.xml">مستندات discc جنتوی</uri> ما پیدا نمایید. 
</p>

</body>
</subsection>
<subsection>
<title>نصب کردن distcc</title>
<body>

<p>
برنامه Distcc با یک تکلیف مانیتور به مانیتور گرافیکی که رایانه شما برای کامپایل نمودن ارسال می نماید، منتقل می گردد. اگر از میزکار Gnome استفاده می نمایید، پس 'gnome' را در متغییر USE خود قرار دهید. هرچند اگر از گنوم استفاده نمی نمایید و هنوز دوست دارید مانیتور داشته باشید، کلمه کلیدی 'gtk' را در متغییرهای USE خودتان قرار دهید. 
</p>

<pre caption="Installing distcc">
# <i>emerge distcc</i>
</pre>

</body>
</subsection>
<subsection>
<title>فعال نمودن پشتیبانی پرتیج</title>
<body>

<p>
به متغییر FEATURES در <path>/etc/portage/make.conf</path> کلمه کلیدی <c>distcc</c> را اضافه نمایید. در ادامه متغییر MAKEOPTS را مطابق علاقه خودتان ویرایش نمایید. یک راهنمائی می‌تواند اینگونه باشد که در <path>"-jX"</path> بجای x تعداد CPU‌هائی را که <c>distccd</c> را اجرا می نمایند (در رایانه‌ائی که بروی آن هستید) قرار دهید، اما ممکن است با اعداد دیگر نتیجه بهتری را بوجود آورید. 
</p>

<p>
اکنون <c>distcc-config</c> را اجرا نمایید و فهرست متغییرهای سرور را وارد نمایید. برای یک نمونه ساده ما فرض می نماییم که سرور DistCC موجود ۱۹۲.۱۶۸.۱.۱۰۲ است (رایانه پیش رو)، ۱۹۲.۱۶۸.۱.۱۰۳ , ۱۹۲.۱۶۸.۱.۱۰۴ (دو رایانه راه دور): 
</p>

<pre caption="Configuring distcc to use three available distcc servers">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>

<p>
فراموش ننمایید که دایمون <c>distccd</c> را نیز راه اندازی نمایید: 
</p>

<pre caption="Starting the distccd daemons">
# <i>rc-update add distccd default</i>
# <i>/etc/init.d/distccd start</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>کش کردن کامپایل</title>
<subsection>
<title>درباره c کش</title>
<body>

<p>
کش <c>ccache</c> یک کش سریع کامپایلر است. هنگامیکه شما یک برنامه را کامپایل می نمایید، نتیجه کش متوسطی بدست می آورید، هرگاه برنامه مشابهی را کامپایل نمایید، زمان کامپایل نمودن به شکل بسیار زیادی کاهش می یابد. اولین باری که کش را راه اندازی می نمایید، از یک کامپایل نمودن عادی آهسته تر خواهد بود. کامپایل های بعدی سریعتر خواهند شد. سی کش تنها در صورتی که بخواهید برخی برنامه‌ها را بارها کامپایل نمایید، مفید خواهد بود. بنابر این بیشتر فقط برای گسترش دهندگان نرم‌افزار مفید است. 
</p>

<p>
اگر به درون و بیرون کش علاقمندید، لطفاً <uri link="http://ccache.samba.org">صفحه خانگی سی کش</uri> را بازدید نمایید. 
</p>

<warn>
کش <c>ccache</c> دلیل تعداد زیادی از خطاهای زمان کامپایل شناخته می شود. گاهی مواقع ccache کدهای کهنه اشیاء یا فایل های خراب را نگه می دارد، که می تواند منجر به emerge نشدن بسته ها گردد. اگر چنین چیزی رخ داد (اگر پیام خطائی مانند "File not recognized: File truncated" دریافت نمودید)، تلاش کنید تا قبل از گزارش یک ایراد برنامه را با از کار انداختن ccache (<c>FEATURES="-ccache"</c>" در <path>/etc/portage/make.conf</path>) دوباره کامپایل نمایید. در شرایطی غیر از اینکه کار گسترش انجام می دهید، سی کش را فعال ننمایید.
</warn>

</body>
</subsection>
<subsection>
<title>نصب کردن سی کش</title>
<body>

<p>
برای نصب <c>ccache</c> دستور <c>emerge ccache</c> را اجرا نمایید: 
</p>

<pre caption="Installing ccache">
# <i>emerge ccache</i>
</pre>

</body>
</subsection>
<subsection>
<title>فعال نمودن پشتیبانی پرتیج</title>
<body>

<p>
فایل <path>/etc/portage/make.conf</path> را باز نموده و <c>ccache</c> را به متغییر FEATURES اضافه نمایید. پس از آن متغییر جدیدی که به آن CCACHE_SIZE گفته می شود، اضافه نمایید و آنرا بروی <c>"2G"</c> تنظیم نمایید: 
</p>

<pre caption="Editing CCACHE_SIZE in /etc/portage/make.conf">
CCACHE_SIZE="2G"
</pre>

<p>
برای بررسی اینکه تابع های سی کش، از کش بخواهند که شما را به شکل ایستا تدارک ببینند، چراکه پرتیج از دایرکتوری سی کش متفاوتی استفاده می نماید، لازم دارید تا متغییر <c>CCACHE_DIR</c> را بدقت تنظیم نمایید: 
</p>

<pre caption="Viewing ccache statistics">
# <i>CCACHE_DIR="/var/tmp/ccache" ccache -s</i>
</pre>

<p>
موقعیت <path>/var/tmp/ccache</path> دایرکتوری پیش فرض خانه کش پرتیج است. اگر می‌خواهید این تنظیمات را تغییر دهید، می‌توانید متغییر <c>CCACHE_DIR</c> را در <path>/etc/portage/make.conf</path> تنظیم نمایید. 
</p>

<p>
هرچند اگر <c>ccache</c> را اجرا نمایید، از موقعیت پیش‌فرض <path>${HOME}/.ccache</path> استفاده خواهد نمود که دلیل آن است که چرا باید متغییر <c>CCACHE_DIR</c> را هنگامیکه درباره سی کش (پرتیج) ایستا می پرسد، تنظیم نمایید. 
</p>

</body>
</subsection>
<subsection>
<title>استفاده از سی کش برای کامپایل C غیر پرتیجی</title>
<body>

<p>
اگر علاقمندید از سی کش برای کامپایل کردن مواردی که در پرتیج نیستند استفاده نمایید، <path>/usr/lib/ccache/bin</path> را به متغییر PATH خودتان (قبل از <path>/usr/bin</path> ) اضافه نمایید. این کار می تواند با ویرایش <path>.bash_profile</path> در دایرکتوری خانه کاربرتان انجام شود. استفاده از <path>.bash_profile</path> یک راه برای تعریف نمودن PATH متغییرها است. 
</p>

<pre caption="Editing .bash_profile">
PATH="<i>/usr/lib/ccache/bin</i>:/opt/bin:${PATH}"
</pre>

</body>
</subsection>
</section>
<section>
<title>پشتیبانی بسته های باینری</title>
<subsection>
<title>ساختن بسته های از پیش کامپایل شده</title>
<body>

<p>
پرتیج نصب بسته های از پیش ساخته شده را پشتیبانی می نماید. با این حال جنتو خودش بسته های از پیش ساخته شده فراهم نمی آورد (بغییر از تصویرهای فوری GRP که از پیش ساخته اند). پرتیج می‌تواند کاملاً از بسته های از پیش ساخته آگاه باشد. 
</p>

<p>
برای ساختن بسته های از پیش ساخته شده، می‌توانید اگر بسته در حال حاضر بروی دستگاه شما نصب گردیده، از <c>quickpkg</c> استفاده نمایید، یا آنرا با گزینه های <c>--buildpkg</c> و <c>--buildpkgonly</c> ابتدا <c>emerge</c> نمایید. 
</p>

<p>
اگر می‌خواهید پرتیج از هر بسته ائی که نصب نموده‌اید بسته از پیش ساخته شده ائی تهیه نماید، کلمه کلیدی <c>buildpkg</c> را به متغییر FEATURES اضافه نمایید. 
</p>

<p>
پشتیبانی بیشتر برای دسته های بسته های از پیش ساخته شده می‌تواند بوسیله <c>catalyst</c> فراهم آید. برای اطلاعات بیشتر درباره سازمان دهنده ها لطفاً <uri link="/proj/en/releng/catalyst/faq.xml">پرسش های متداول سازمان دهندگان</uri> را مطالعه بفرمایید. 
</p>

</body>
</subsection>
<subsection>
<title>نصب کردن بسته های از پیش ساخته شده</title>
<body>

<p>
هرچند جنتو یکی از آن‌ها را فراهم نمی آورد، می‌توانید یک مخزن مرکزی هنگامیکه بسته های از پیش ساخته شده را نگهداری می نمایید، ایجاد نمایید. اگر می‌خواهید از این مخزن استفاده نمایید، لازم دارید تا پرتیج را از وجود آن با اشاره متغییر PORTAGE_BINHOST به آن، آگاه نمایید. برای مثال اگر بسته های از پیش ساخته شده در آدرس ftp://buildhost/gentoo قرار دارند: 
</p>

<pre caption="Setting PORTAGE_BINHOST in /etc/portage/make.conf">
PORTAGE_BINHOST="ftp://buildhost/gentoo"
</pre>

<p>
هنگامیکه می‌خواهید یک بسته از پیش ساخته شده را نصب نمایید، گزینه <c>--getbinpkg</c> را در حین استفاده از گزینه <c>--usepkg</c> به امرژ اضافه نمایید. قالب گیر به امرژ خواهد گفت بسته های از پیش ساخته شده را از سرور از قبل تعریف گردیده قبل از دریافت کدمنبع و کامپایل آن استفاده نماید. 
</p>

<p>
برای مثال برای نصب <c>gnumeric</c> از بسته های از پیش ساخته شده: 
</p>

<pre caption="Installing the gnumeric prebuilt package">
# <i>emerge --usepkg --getbinpkg gnumeric</i>
</pre>

<p>
اطلاعات بیشتر درباره گزینه های بسته های از پیش ساخته شده امرژ می تواند در صفحه راهنمای امرژ یافت گردد:
</p>

<pre caption="Reading the emerge man page">
$ <i>man emerge</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>دریافت فایل‌ها</title>
<subsection>
<title>دریافت موازی</title>
<body>

<p>
هنگامی که دسته ائی از بسته ها را امرژ می نمایید، پرتیج می‌تواند در هنگامیکه بسته ائی را کامپایل می نماید، بسته بعدی را که لازم است دریافت شود را دریافت نماید، بدینگونه زمان کامپایل کردن را کاهش دهد. برای استفاده از این قابلیت، گزینه <c>"parallel-fetch"</c> را به FEATURES خودتان اضافه نمایید. توجه داشته باشید که این گزینه به شکل پیش‌فرض فعال است، بنابر این لازم به فعال سازی آن ندارید. 
</p>

</body>
</subsection>
<subsection>
<title>دریافت کاربر</title>
<body>

<p>
هنگامیکه پرتیج از کاربر ریشه راه اندازی می شود، گزینه <c>FEATURES="userfetch"</c> امتیاز فایل‌های منبع را به کاربر ریشه خواهد داد. این یک بهسازی امنیتی کوچک است. 
</p>

</body>
</subsection>
</section>
<section id="webrsync-gpg">
<title>قرار دادن تصویرهای فوری شاخه پرتیج تأیید شده</title>
<body>

<p>
به عنوان یک مدیر رایانه، می‌توانید انتخاب نمایید که شاخه پرتیج محلی تان را فقط با تصویرهای فوری شاخه پرتیج تأیید شده گرافیکی رمزگذاری شده که به عنوان زیربنای جنتو نسخه بندی می شوند، بروزرسانی نمایید. این کار اطمینانی بوجود می‌آورد که هیچ میرور rsync نیرنگ بازی کدهای ناخواسته یا بسته های ناخواسته ائی را در شاخه پرتیجی که درحال دانلود آن هستید، وارد نمی نماید. 
</p>

<p>
برای پیکربندی پرتیج، ابتدا یک محل امن که تاییدیه کلیدهای مسئول زیر بنای جنتو برای امضاء نمودن تصویر فوری شاخه پرتیج را در آن پایین گذاری و قبول نمایید، ایجاد کنید. البته اگر می خواهید، می‌توانید این کلید های GPG را به عنوان <uri link="/doc/en/gnupg-user.xml#doc_chap2_sect4">خط راهنمای مناسب</uri> (شبیه بررسی کلیدهای پرینت انگشتی) تأیید نمایید. می‌توانید فهرستی از کلید های GPG را که توسط گروه مهندسی نسخ در <uri link="/proj/en/releng/index.xml">صفحه پروژه شان</uri> استفاده می‌شود را بیابید. 
</p>

<!-- Key 0x239C75C4 is superceded by 0x96D8BF6D, but keep it in the documents
     for a while to ensure continuity -->

<pre caption="Creating a truststore for Portage">
# <i>mkdir -p /etc/portage/gpg</i>
# <i>chmod 0700 /etc/portage/gpg</i>
<comment>(... Substitute the keys with those mentioned on the release engineering site ...)</comment>
# <i>gpg --homedir /etc/portage/gpg --keyserver subkeys.pgp.net --recv-keys 0x239C75C4 0x96D8BF6D</i>
# <i>gpg --homedir /etc/portage/gpg --edit-key 0x239C75C4 trust</i>
# <i>gpg --homedir /etc/portage/gpg --edit-key 0x96D8BF6D trust</i>
</pre>

<p>
پس از آن <path>/etc/portage/make.conf</path> را ویرایش نموده و پشتیبانی برای امضاء تصویرهای فوری شاخه پرتیج را (با استفاده از <c>FEATURES="webrsync-gpg"</c> است ) فعال نمایید و بروزرسانی پرتیج با استفاده از روش <c>emerge --sync</c> معمول را غیر فعال نمایید. 
</p>

<pre caption="Updating Portage for signed tree validation">
FEATURES="webrsync-gpg"
PORTAGE_GPG_DIR="/etc/portage/gpg"
SYNC=""
</pre>

<p>
همه‌اش همین بود. هنگامیکه بار دیگر <c>emerge-webrsync</c> را اجرا نمایید، فقط تصویرهای فوری با امضاء تأیید شده بروی فایل‌های سیستمی شما پهن خواهد شد.
</p>


</body>
</section>

</sections>
