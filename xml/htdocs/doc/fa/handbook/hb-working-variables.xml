<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fa/handbook/hb-working-variables.xml,v 1.1 2013/01/20 17:22:44 swift Exp $ -->

<sections>

<abstract>
با جنتو شما براحتی می توانید متغییرهای محیطی دستگاهتان را مدیریت نمایید. این فصل نحوه انجام آنرا توضیح می دهد، و همینطور متغییرهای مکرر استفاده شده را تشریح می نماید.
</abstract>

<version>2</version>
<date>2012-06-29</date>

<section>
<title>متغییرهای محیطی؟</title>
<subsection>
<title>آن‌ها چه هستند</title>
<body>

<p>
یک متغییر محیطی شیء نام گذاری شده ائی است که حاوی اطلاعاتی است که بوسیله برنامه‌های دیگر مورد استفاده قرار می گیرد. بسیاری از کاربران (و خصوصا آنهائی که در لینوکس تازه کار هستند) آنرا اندکی عجیب و غیر قابل مدیریت می یابند. هر چند این اشتباه است: با استفاده از متغییرهای محیطی می‌توان بسادگی تنظیمات پیکربندی برای یک یا چند برنامه را همزمان تغییر داد. 
</p>

</body>
</subsection>
<subsection>
<title>نمونه‌های مهم</title>
<body>

<p>
جدول زیر تعدادی از متغییرهائی را فهرست می نماید که بوسیله یک دستگاه لینوکس استفاده می‌شوند و استفاده آن‌ها را شرح می دهد. نمونه ائی از کاربرد آن در بعد از جدول آمده: 
</p>

<table>
<tr>
  <th>Variable</th>
  <th>Description</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
متغییری حاوی یک فهرست با دونقطه از هم جدا شده است که دستگاه شما برای اجرای یک فایل به آن‌ها نگاه می نماید. اگر نام یک اجراگر را وارد نمایید (مانند <c>ls</c> ، <c>rc-update</c> یا <c>emerge</c>)، اما این اجرا گر در دایرکتوری های فهرست شده قرار داده نشده باشد، دستگاه شما آنرا اجرا نخواهد نمود (تا زمانیکه مسیر کامل آنرا به شکل یک دستور وارد نمایید. برای نمونه <c>/bin/ls</c> ). 
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
این متغییر تابع هائی مانند <c>PATH</c> دارد، اما این یکی دایرکتوری هائی را فهرست می نماید که هنگامیکه کاربر ریشه دستوری را وارد می نماید باید بررسی شوند. 
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
این متغییر حاوی فهرستی با دونقطه از هم جدا شده از دایرکتوری‌هائی است که linker بطور غیر پایا در آن‌ها به جستجو برای یافتن کتابخانه‌ها اقدام می نماید. 
  </ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>
این متغییر حاوی فهرستی با دونقطه از هم جدا شده از دایرکتوری هائیست که دستور <c>man</c> در آن‌ها به جستجوی صفحه های راهنما می گردد. 
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
این متغییر حاوی فهرستی با دونقطه از هم جدا شده از دایرکتوری هائیست که دستور <c>info</c> در آن‌ها به جستجوی صفحه های info می گردد. 
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
این متغییر حاوی مسیر برنامه هائی است که برای فهرست نمودن محتوی فایل‌ها استفاده می‌شوند (مانند <c>less</c> یا <c>more</c> ). 
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
این متغییر حاوی فهرستی از برنامه هائی است که برای تغییر محتوی فایل‌ها استفاده می‌شوند (مانند <c>nano</c> یا <c>vi</c>).
  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
    این متغییر حاوی فهرستی با دونقطه از هم جدا شده از دایرکتوری هائیست که شامل مواد لازم برای KDE است. 
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
این متغییر حاوی فهرستی با نشانگر <e>space</e>-ایجاد‌کن از هم جدا شده از دایرکتوری هائیست که باید در هنگام بروزرسانی توسط پرتیج محافظت شوند. 
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
این متغییر حاوی فهرستی با نشانگر <e>space</e>-ایجاد‌کن از هم جدا شده از دایرکتوری هائیست که نباید در هنگام بروزرسانی توسط پرتیج محافظت شوند.  
  </ti>
</tr>
</table>

<p>
در زیر نمونه ائی را می‌بینید که همه این متغییرها را تعریف نموده است: 
</p>

<pre caption="Example definitions">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf"
</pre>

</body>
</subsection>
</section>
<section>
<title>تعریف سراسری متغییرها</title>
<subsection>
<title>دایرکتوری /etc/env.d</title>
<body>

<p>
برای مرکزیت بخشیدن به تعریف‌های این متغییرها، جنتو دایرکتوری <path>/etc/env.d</path> را معرفی می نماید. در داخل این دایرکتوری شما تعداد زیادی فایل مانند <path>00basic</path> ،<path>05gcc</path> و غیره پیدا خواهید نمود. که حاوی متغییرهائی هستند که مورد نیاز برنامه هائی هستند که بوسیله نام آن‌ها نامگذاری شده اند. 
</p>

<p>
برای نمونه هنگامیکه شما <c>gcc</c> را نصب می نمایید، فایلی به نام <path>05gcc</path> بوسیله ائی بیلد ایجاد می‌شود که حاوی متغییرهای زیر است: 
</p>

<pre caption="/etc/env.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
توزیع‌های دیگر به شما می‌گویند هر تعریف متغییر محیطی را در <path>/etc/profile</path> یا مکانی دیگر تغییر داده یا اضافه نمایید. در سوئی دیگر جنتو نگهداری و مدیریت متغییرهای محیطی را فارغ بال از تعداد فایل هائی که می‌توانند متغییرهای محیطی را نگهداری نمایند، برای شما (و همینطور برای پرتیج) بسیار آسان می نماید. 
</p>

<p>
برای نمونه هنگامیکه <c>gcc</c> بروزرسانی می شود، فایل <path>/etc/env.d/05gcc</path> هم بدون نیاز به هیچ واکنشی از سوی کاربر بروزرسانی می شود.  
</p>

<p>
این نه فقط به نفع پرتیج است، بلکه برای شما به عنوان یک کاربر هم مفید است. گهگاه خواهید خواست برخی متغییرهای محیطی را برای سراسر دستگاه تنظیم نمایید. برای نمونه ما یک متغییر <c>http_proxy</c>را ارائه می دهیم. بجای اینکه نگران نبود آن در <path>/etc/profile</path> باشید، اکنون می‌توانید بسادگی فقط یک فایل (<path>/etc/env.d/99local</path>) ایجاد نمایید و تعریف (های) خود را در آن وارد نمایید: 
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
با استفاده از یک فایل مشابه برای همه متغییرهای خودتان، دید کلی سریعی بروی متغییرهائی که خودتان تعریف نموده‌اید خواهید داشت.  
</p>

</body>
</subsection>
<subsection>
<title>کد env-update</title>
<body>

<p>
چندین فایل در <path>/etc/env.d</path> متغییر <c>PATH</c> تعریف می نمایند. این یک اشتباه نیست: هنگامیکه شما <c>env-update</c> را اجرا می نمایید، آن قبل از بروزرسانی متغییرهای محیطی، چندین تعریف را اضافه می نماید و به این ترتیب اضافه کردن تنظیمات متغییرهای محیطی شخصی بدون تداخل با مقدارهای موجود را برای بسته ها (یا کاربران) آسان می نماید. 
</p>

<p>
کد <c>env-update</c> مقداری مرتب شده با الف‌باء را در درخواست های فایل‌های <path>/etc/env.d</path> اضافه می نماید. نام فایل باید با دو عدد دسیمال آغاز گردد.
</p>

<pre caption="Update order used by env-update">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
تسلسل متغییرها همیشه اتفاق نمی افتد، فقط با این متغییرها <c>ADA_INCLUDE_PATH</c>, <c>ADA_OBJECTS_PATH</c>, <c>CLASSPATH</c>, 
<c>KDEDIRS</c>, <c>PATH</c>, <c>LDPATH</c>, <c>MANPATH</c>,
<c>INFODIR</c>, <c>INFOPATH</c>, <c>ROOTPATH</c>, <c>CONFIG_PROTECT</c>,
<c>CONFIG_PROTECT_MASK</c>, <c>PRELINK_PATH</c>, <c>PRELINK_PATH_MASK</c>,
<c>PKG_CONFIG_PATH</c> و <c>PYTHONPATH</c> .برای دیگر متغییرها آخرین مقدار تعریف شده (در ترتیب الف بائی درخواست فایل‌ها در <path>/etc/env.d</path> ) استفاده می شود. 
</p>

<p>
می‌توانید متغییرهای بیشتر را با اضافه نمودن نام متغییر به هریک از متغییرهای <c>COLON_SEPARATED</c> یا <c>SPACE_SEPARATED</c> به این فهرست اضافه نمایید (همچنین داخل فایل env.d ). 
</p>

<p>
هنگامیکه <c>env-update</c> را اجرا می نمایید، کد، همه متغییرهای محیطی را ایجاد نموده و آن‌ها را در <path>/etc/profile.env</path> قرار می‌دهد (که بوسیله <path>/etc/profile</path> استفاده می شود). همچنین اطلاعات را از <c>LDPATH</c> استخراج نموده و از آن‌ها برای ایجاد /etc/<path>/etc/ld.so.conf</path> استفاده می نماید. پس از آن <c>ldconfig</c> را اجرا می نماید تا فایل <path>/etc/ld.so.cache</path> را که توسط linker غیر پایا استفاده می‌شود را مجدداً ایجاد نماید. 
</p>

<p>
اگر می‌خواهید فوراً پس از اجرا متوجه تغییرات <c>env-update</c> بشوید، دستور زیر را برای بروزرسانی محیط خودتان اجرا نمایید. کاربرانی که خودشان جنتو را نصب نموده اند مطمئنا آنرا از ساختار مراحل نصب به خاطر می آورند: 
</p>

<pre caption="Updating the environment">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

<note>
دستور بالا تنها محیط را در ترمینال موجود، کنسول <e>جدید</e> و وابسته های کوچکش بروزرسانی می نماید. بنابر این اگر شما در X11 کار می نمایید، لازم دارید تا منبع <c>source /etc/profile</c> را در هر ترمینال جدیدی که باز می نمایید وارد نمایید یا X را راه اندازی مجدد نمایید که در نتیجه همه ترمینال های جدید متغییرهای جدید را خواهند گرفت. اگر از یک مدیریت ورود استفاده می نمایید، به کاربر ریشه تغییر موقعیت بدهید و تایپ نمایید <c>/etc/init.d/xdm restart</c> . اگر نه لازم دارید تا از دستگاه خارج و مجدداً داخل شوید تا X متغییرهای جدید را با وابسته های کوچکش تطبیق دهد. 
</note>

<impo>
نمی‌توانید از متغییرهای شل هنگامیکه متغییرهای دیگری تعریف نموده‌اید استفاده نمایید. این به معنی آن است که چیزهائی مانند <c>FOO="$BAR"</c> (در جائیکه <c>$BAR</c> متغییر دیگری است) ممنوع است.  
</impo>

</body>
</subsection>
</section>
<section>
<title>تعریف کردن محلی متغییرها</title>
<subsection>
<title>مخصوص کاربر</title>
<body>

<p>
شما همیشه نمی‌خواهید تا متغییرها را سراسری تعریف نمایید. برای نمونه ممکن است بخواهید دایرکتوری فعلی در حال کار (دایرکتوری که در آن هستید) و <path>/home/my_user/bin</path> را به <c>PATH</c> متغییر بیافزائید اما همچنین نخواهید همه کاربران موجود بروی دستگاهتان آنرا در <c>PATH</c> خود داشته باشند. اگر بخواهید یک متغییر را بطور محلی تعریف نمایید، باید از <path>~/.bashrc</path> یا <path>~/.bash_profile</path> استفاده نمایید: 
</p>

<pre caption="Extending PATH for local usage in ~/.bashrc">
<comment>(A colon followed by no directory is treated as the current working directory)</comment>
PATH="${PATH}:/home/my_user/bin:"
</pre>

<p>
هنگامیکه مجدداً وارد شوید، متغییر <c>PATH</c> شما بروز خواهد بود. 
</p>

</body>
</subsection>
<subsection>
<title>مخصوص جلسه</title>
<body>

<p>
گاهی اوقات تعریف‌های محدودتری مورد نیاز است. ممکن است بخواهید قادر به استفاده از باینری ها موجود در یک دایرکتوری موقت که ایجاد نموده‌اید بدون آدرس دهی به باینری یا ویرایش <path>~/.bashrc</path> برای مدت کوتاهی که به آن نیاز دارید باشید. 
</p>

<p>
در این مورد می‌توانید فقط متغییر <c>PATH</c> را برای جلسه ائی که در آن هستید با استفاده از دستور <c>export</c> تعریف نمایید. تا هنگامیکه از کاربر خارج نشوید، متغییر <c>PATH</c> از تنظیمات موقت استفاده خواهد نمود. 
</p>

<pre caption="Defining a session-specific environment variable">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>
