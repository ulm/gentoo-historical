<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/security/shb-services.xml,v 1.7 2007/03/10 21:44:19 grahl Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- English CVS Version: 1.6 -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.2</version>
<date>2006-12-01</date>

<section>
<title>Apache</title>
<body>

<p>
Apache (1.3.26) kommt mit einer recht gut eingestellten Konfigurationsdatei,
aber auch hier müssen wir einige Dinge verbessern, wie z.B. Apache an eine
Adresse binden und verhindern, dass es keine Informationen preisgibt.
Folgende Optionen sollten Sie in der Konfigurationsdatei anpassen:
</p>

<p>
Wenn Sie <c>ssl</c> in Ihrer <path>/etc/make.conf</path> vor der Installation
von Apache nicht deaktiviert hatten, dann sollten Sie Zugang zu einem
SSL-fähigen Server haben. Fügen Sie folgende Zeile ein, um dieses Feature zu
aktivieren.
</p>

<pre caption="/etc/conf.d/apache">
HTTPD_OPTS="-D SSL"
</pre>

<pre caption="/etc/apache/conf/apache.conf">
#Lassen Sie ihn auf Ihre IP hören
Listen 127.0.0.1
BindAddress 127.0.0.1
#Es ist keine gute Idee nobody oder nogroup für
#jeden Prozess der nicht als root läuft zu benutzen -
#(fügen Sie einfach den Benutzer apache mit der Gruppe apache hinzu)
User apache
Group apache
#Wir halten Apache davon ab, die Serverversion auszuplaudern
ServerSignature Off
ServerTokens Prod
</pre>

<p>
Apache wird mit <c>--enable-shared=max</c> und <c>--enable-module=all</c>
kompiliert. Dies wird von standardmäßig alle Module aktivieren, sodass Sie alle
Module in der <c>LoadModule</c>-Sektion (also <c>LoadModule</c> und
<c>AddModule</c>) auskommentieren müssen, die Sie nicht benötigen. Starten Sie
den Dienst neu, indem Sie <c>/etc/init.d/apache restart</c> ausführen.
</p>

<p>
Die Dokumentation gibt es auf <uri>http://www.apache.org</uri>.
</p>

</body>
</section>

<section>
<title>Bind</title>
<body>

<p>
Dokumentation zu Bind finden Sie beim <uri
link="http://www.isc.org/products/BIND/bind9.html">Internet Software
Konsortium</uri>. Das "BIND 9 Administrator Reference Manual" ist auch in
<path>doc/arm</path> verfügbar.
</p>

<p>
Die neueren BIND Ebuilds unterstützen chrooten von vorneherein. Folgen Sie nach
dem emergen von <c>bind</c> diesen simplen Anweisungen:
</p>

<pre caption="Chrooten von BIND">
ebuild /var/db/pkg/net-dns/bind-9.2.2-r2/bind-9.2.2-r2.ebuild config\`"

<comment>(Bevor Sie diesen Befehl ausführen, möchten Sie vielleicht das chroot
Verzeichnis in /etc/conf.d/named ändern. Ansonsten wird /chroot/dns verwendet.)</comment>
<comment>(Sie müssen möglicherweise die Versionsnummer durch eine
aktuellere Versionsnummerersetzen.)</comment>
</pre>
</body>
</section>
<section>
<title>Djbdns</title>
<body>

<p>
Djbdns ist eine DNS Implementierung auf deren Sicherheit der Autor bereit ist
<uri link="http://cr.yp.to/djbdns/guarantee.html">Geld</uri> zu wetten. Sie
unterscheidet sich grundlegend von Bind 9, ist aber einen Versuch wert. Weitere
Informationen finden sich auf <uri>http://www.djbdns.org</uri>.
</p>

</body>
</section>

<section>
<title>FTP</title>
<body>

<p>
Das Benutzen von FTP (File Transfer Protocol) ist im Allgemeinen eine schlechte
Idee. Es benutzt unverschlüsselte Daten (Passwörter werden also als Klartext
gesendet), lauscht auf zwei Ports (normalerweise 20 und 21), und anonyme Logins
sind das, wonach Angreifer gerne suchen (um Warez zu verteilen). Da das
FTP-Protokoll einige Sicherheitslücken enthält, benutzen Sie bitte alternativ
<c>sftpd</c> oder HTTP.  Wenn dies nicht möglich sein sollte, dann sichern Sie
Ihre Dienste so gut wie nur möglich ab und bereiten Sie sich vor.
</p>

</body>
</section>
<section>
<title>Mysql</title>
<body>

<p>
Wenn nur lokale Anwendungen auf die <c>mysql</c> Datenbank zugreifen, dann
entkommentieren Sie die folgende Zeile in <path>/etc/mysql/my.cnf</path>.
</p>

<pre caption="Deaktivieren des Netzwerkzugriff">
skip-networking
</pre>

<p>
Dann deaktivieren wir die Verwendung des Befehls LOAD DATA LOCAL INFILE, um ein
nicht autorisiertes Lesen von lokalen Dateien zu verhindern. Dies ist relevant
wenn neue SQL Injection Schwachstellen in PHP Applikationen gefunden werden.
</p>

<pre caption="Deaktivieren von LOAD DATA LOCAL INFILE in der [mysqld] Sektion">
set-variable=local-infile=0
</pre>

<p>
Als nächstes müssen wir die Beispielsdatenbank (test) entfernen und alle
Accounts, außer dem lokalen <c>root</c> Account.
</p>

<pre caption="Entfernen der Beispielsdatenbank und aller unnötigen Benutzer">
mysql> <i>drop database test;</i>
mysql> <i>use mysql;</i>
mysql> <i>delete from db;</i>
mysql> <i>delete from user where not (host="localhost" and user="root");</i>
mysql> <i>flush privileges;</i>
</pre>

<warn>
Seien Sie vorsichtig mit diesem Befehl, wenn Sie schon Benutzerkonten
konfiguriert haben.
</warn>

<note>
Wenn Sie Passwörter vom MySQL Prompt aus geändert haben, sollten Sie immer
<path>~/.mysql_history</path> und <path>/var/log/mysql/mysql.log</path>
bereinigen, da dort die ausgeführten SQL Befehle gespeichert werden, wie auch
die Passwörter als Klartext.
</note>

</body>
</section>
<section>
<title>Proftpd</title>
<body>

<p>
Proftpd hatte mehrere Sicherheitsprobleme, aber es hat den Anschein als seien
die meisten repariert worden. Nichtsdestotrotz empfiehlt sich die Aktivierung
einiger weiterer Verbesserungen:
</p>

<pre caption="/etc/proftpd/proftpd.conf">
ServerName "Mein FTP Daemon"
#Ident des Servers nicht anzeigen
ServerIdent on "Hau ab!"

#Vereinfacht es virtuelle Benutzer anzulegen
RequireValidShell off

#Benutzen Sie eine alternative Passwort- und Gruppendatei (passwd benutzt das Crypt-Format)
AuthUserFile "/etc/proftpd/passwd"
AuthGroupFile "/etc/proftpd/group"

# Berechtigungen
Umask 077

# Timeouts und Beschränkungen
MaxInstances 30
MaxClients 10 "Nur 10 Verbindungen erlaubt"
MaxClientsPerHost 1 "Sie sind schon eingeloggt"
MaxClientsPerUser 1 "Sie sind schon eingeloggt"
TimeoutStalled 10
TimeoutNoTransfer 20
TimeoutLogin 20

#jeden "chrooten"
DefaultRoot ~

#nicht als root laufen lassen
User  nobody
Group nogroup

#Jeden Transfer protokollieren
TransferLog /var/log/transferlog

#Probleme mit Zeichenersetzung
DenyFilter \*.*/
</pre>

<p>
Dokumentation findet man auf <uri>http://www.proftpd.org</uri>.
</p>

</body>
</section>
<section>
<title>Pure-ftpd</title>
<body>

<p>
Pure-ftpd ist ein Zweig des ursprünglichen trollftpd. Es wurde von Frank Dennis
aus Funktionalitäts- und Sicherheitsgründen modifiziert.
</p>

<p>
Benutzen Sie virtuelle Server (niemals System Accounts) indem Sie die
<c>AUTH</c> Option aktivieren. Setzen Sie diese auf
<c>-lpuredb:/etc/pureftpd.pdb</c> und erstellen Sie Ihre Benutzer mit Hilfe von
<c>/usr/bin/pure-pw</c>.
</p>

<pre caption="/etc/conf.d/pure-ftpd">
AUTH="-lpuredb:/etc/pureftpd.pdb"

## Misc. Others ##
MISC_OTHER="-A -E -X -U 177:077 -d -4 -L100:5 -I 15"
</pre>

<p>
Konfigurieren Sie Ihre <c>MISC_OTHER</c> Einstellung um anonymen Zugriff zu
verwehren (<c>-E</c>), chrooten Sie jeden (<c>-A</c>), verhindern Sie, dass
Benutzer Dateien lesen/schreiben können, welche mit einem "." (Punkt) beginnen
(<c>-X</c>), maximale Idle Zeit (<c>-I</c>), beschränken Sie Rekursion
(<c>-L</c>) und verwenden Sie eine sinnvolle <c>umask</c> Einstellung.
</p>

<warn>
Benutzen Sie <e>nicht</e> die <c>-w</c> oder <c>-W</c> Optionen! Wenn Sie eine
Warez-Site wünschen, hören Sie auf dieses Handbuch zu lesen!
</warn>

<p>
Dokumentation kann auf <uri>http://www.pureftpd.org</uri> gefunden werden.
</p>

</body>
</section>
<section>
<title>Vsftpd</title>
<body>

<p>
Vsftpd (kurz für "very secure ftp", also "sehr sicheres FTP") ist ein kleiner
FTP-Dämon der mit einer vernünftigen Standardkonfiguration versehen ist. Er ist
einfach und besitzt nicht so viele Möglichkeiten wie pureftp und proftp.
</p>

<pre caption="/etc/vsftpd">
anonymous_enable=NO
local_enable=YES

#nur-lesen
write_enable=NO

#aktivieren der Protokollierung aller Transfers
xferlog_std_format=YES

idle_session_timeout=20
data_connection_timeout=20
nopriv_user=nobody

chroot_list_enable=YES
chroot_list_file=/etc/vsftpd/chrootlist

ls_recurse_enable=NO
</pre>

<p>
Wie Sie sehen können, gibt es bei diesem Dienst keine Möglichkeit individuelle
Rechte zu verwenden, wenn es aber um anonyme Einstellungen geht ist er recht
gut. Manchmal kann es hilfreich sein einen anonymen FTP Server zu haben (z.B.
zur Verbreitung von Open Source) und dann leistet vsftpd hervorragende Arbeit.
</p>

</body>
</section>
<section>
<title>Netqmail</title>
<body>

<p>
Netqmail wird oft als ein sehr sicherer Mail-Server angesehen. Er wurde mit
Sicherheit (und Paranoia) im Hinterkopf geschrieben. Standardmäßig erlaubt er
kein Relaying und hatte seit 1996 kein Sicherheitsloch. Starten Sie einfach
<c>emerge netqmail</c> und konfigurieren Sie ihn dann!
</p>
</body>
</section>
<section>
<title>Samba</title>
<body>

<p>
Samba ist ein Protokoll um Dateien mit Microsoft/Novell Netzwerken auszutauschen
und sollte <e>nicht</e> über das Internet verwendet werden. Nichtsdestotrotz
muss es gesichert werden.
</p>

<pre caption="/etc/samba/smb.conf">
[global]
  #An ein Interface binden
  interfaces = eth0 10.0.0.1/32

  #Sicherstellen, dass verschlüsselte Passwörter verwendet werden
  encrypt passwords = yes
  directory security mask = 0700

  #Traffic von 10.0.0.* erlauben
  hosts allow = 10.0.0.

  #Aktiviert Benutzerauthentifizierung
  #(verwenden Sie nicht den share Modus)
  security = user

  #Verweigern von privilegierten Accounts
  invalid users = root @wheel

  #Maximalgröße die smb für ein Share anzeigt (ist kein Limit)
  max disk size = 102400

  #Die Passwortrichtlinie aufrecht erhalten
  min password length = 8
  null passwords = no

  #PAM verwenden (Wenn Support hinzugefügt)
  obey pam restrictions = yes
  pam password change = yes
</pre>

<p>
Stellen Sie sicher, dass die Berechtigungenfür jedes Share korrekt gesetzt sind
und denken Sie daran die <uri link="http://www.samba.org">Dokumentation</uri>
zu lesen.
</p>

<p>
Starten Sie den Server nun neu und fügen Sie den Benutzer hinzu, der Zugriff
auf diesen Dienst haben sollte. Dies geschieht durch
<path>/usr/bin/smbpasswd</path> mit dem Parameter <c>-a</c>.
</p>

</body>
</section>
<section>
<title>ssh</title>
<body>

<p>
Die einzige Absicherung, die OpenSSH benötigt, ist die Aktivierung von
stärkerer Authentifizierung, basierend auf der Public-Key Verschlüsselung.
Viel zu viele Seiten (wie <uri>http://www.sourceforge.net</uri>,
<uri>http://www.php.net</uri> und <uri>http://www.apache.org</uri>) haben
unter unautorisiertem Eindringen in Ihre Systeme gelitten, wegen schlechten
oder öffentlich gewordenen Passwörtern.
</p>

<pre caption="/etc/ssh/sshd_config">
#Nur Version 2 aktivieren
Protocol 2

#Anmeldung als root deaktivieren, Benutzer müssen su verwenden um root zu erlangen
PermitRootLogin no

#Public Key Authentifizierung aktivieren
PubkeyAuthentication yes
AuthorizedKeysFile      .ssh/authorized_keys

#Deaktivieren von .rhost und normaler Passwortauthentifizierung
HostbasedAuthentication no
PasswordAuthentication no
PermitEmptyPasswords no

#Nur Benutzern aus der wheel oder admin Gruppe den Zugang erlauben
AllowGroups wheel admin

#In diesen Gruppen nur folgende Benutzer zulassen
#Das @&lt;Domainname&gt; ist optional, aber ersetzt die
#ältere AllowHosts Direktive
AllowUsers kn@gentoo.org bs@gentoo.org

#Protokollierung
SyslogFacility AUTH
LogLevel INFO

ListenAddress 127.0.0.1
</pre>

<p>
Stellen Sie auch sicher, dass Sie nicht <c>UsePAM yes</c> in Ihrer
Konfigurationsdatei gesetzt haben, da so der Mechanismus zur Authentifizierung
durch öffentliche Schlüssel überschreiben wird.
</p>

<p>
Nun ist alles, was Ihre Benutzer noch tun müssen, mit folgendem Befehl (auf der
Maschine von der Sie sich einloggen wollen) einen Schlüssel zu erstellen:
</p>

<pre caption="Erstellen eines DSA Schlüsselpaars">
# <i>/usr/bin/ssh-keygen -t dsa</i>
</pre>

<p>
Eine Passphrase eintippen.
</p>

<pre caption="Ausgabe von ssh-keygen">
Generierung des öffentlichen/privaten dsa Schlüsselpaares.
Geben Sie den Dateinamen ein unter dem der Schlüssel gespeichert wird (/home/kn/.ssh/id_rsa):<i>[Enter drücken]</i>
Verzeichnis erstellt '/home/kn/.ssh'.
Passphrase eingeben (leer für keine Passphrase): <i>[Passphrase eingeben]</i>
Dieselbe Passphrase erneut eingeben: <i>[Erneut Passphrase eingeben]</i>
Ihre Identifikation wurde in /home/kn/.ssh/id_dsa gespeichert.
Ihr öffentlicher Schlüssel wurde in /home/kn/.ssh/id_dsa.pub gespeichert.
Der Fingerabdruck des Schlüssels ist:
07:24:a9:12:7f:83:7e:af:b8:1f:89:a3:48:29:e2:a4 kn@knielsen
</pre>

<p>
Dies fügt zwei Dateien, mit den Namen <path>id_dsa</path> und
<path>id_dsa.pub</path>, zu Ihrem <path>~/.ssh/</path> Verzeichnis hinzu. Die
Datei <path>id_dsa</path> ist Ihr privater Schlüssel und sollte von allen
Personen, außer Ihnen, ferngehalten werden. Die andere Datei
<path>id_dsa.pub</path> soll an jeden Server verteilt werden zu dem Sie
Zugriff haben. Fügen Sie den Schlüssel in das home Verzeichnis des Benutzers in
<path>~/.ssh/authorized_keys</path> ein und der Benutzer sollte die Möglichkeit
haben sich einzuloggen:
</p>

<pre caption="Hinzufügen der id_dsa.pub Datei zur authorized_keys Datei">
$ <i>scp id_dsa.pub anderer-Host:/var/tmp/aktueller-Hostname.pub</i>
$ <i>ssh anderer-Host</i>
password:
$ <i>cat /var/tmp/aktueller-Hostname.pub >> ~/.ssh/authorized_keys</i>
</pre>

<p>
Ihre Benutzer sollten diesen privaten Schlüssel gut verwahren. Packen Sie ihn
auf ein Medium, dass Sie immer mit sich tragen oder lassen Sie ihn auf ihrer
Workstation (fügen Sie dies in die <uri
link="?part=1&amp;chap=1#security_policies">Passwortrichtlinien</uri> ein).
</p>

<p>
Mehr über <uri link="http://www.openssh.org">OpenSSH</uri> finden Sie auf der
Webseite.
</p>

</body>
</section>
<section>
<title>Benutzung von xinetd</title>
<body>

<p>
xinetd ist ein Ersatz für <c>inetd</c> (welchen Gentoo nicht hat), den
Internet-Dienst-Daemon. Er unterstützt Zugriffskontrolle basierend auf den
Adressen der entfernten Hosts und dem Zeitpunkt des Zugriffs. Es beinhaltet
auch ausführliche Protokollfähigkeiten, inklusive Serverstartzeit, Adresse des
entfernten Hosts, entfernter Benutzername, Serverlaufzeit und angeforderte
Abläufe.
</p>

<p>
Wie bei allen anderen Diensten ist es wichtig eine gute Standardkonfiguration
zu haben. Da <c>xinetd</c> aber von root ausgeführt wird und Protokolle
unterstützt, deren Funktionsweise Sie möglicherweise nicht verstehen, raten wir
Ihnen, es nicht zu benutzen. Wenn Sie es aber dennoch benutzen wollen, fügen
Sie so mehr Sicherheit hinzu:
</p>

<pre caption="Installieren von xinetd">
# <i>emerge xinetd tcp-wrappers</i>
</pre>

<p>
Ergänzen Sie die Konfigurationsdatei um:
</p>

<pre caption="/etc/xinetd.conf">
defaults
{
 only_from = localhost
 instances = 10
 log_type = SYSLOG authpriv info
 log_on_success = HOST PID
 log_on_failure = HOST
 cps = 25 30
}

# Dies konfiguriert pserver (cvs) durch xinetd mit den folgenden Einstellungen:
# maximal 10 Instanzen (10 Verbindungen gleichzeitig)
# Begrenzung von pserver auf tcp
# benutzen des Benutzer-cvs um diesen Dienst laufen zu lassen
# Anbinden der Schnittstelle an nur 1 IP
# Zulassen von Zugriff von 10.0.0.*
# Begrenzung der Zeit in der Entwickler auf das cvs
# zugreifen können von 08Uhr bis 17Uhr
# Benutzung von tcpd wrappers (Zugriffskontrolle kontrolliert durch
# <i>/etc/hosts.allow</i> und <i>/etc/hosts.deny</i>)
# max_load ist an der Maschine auf 1.0 gesetzt
# Das disable (sperren) Flag steht auf nein, aber ich bevorzuge es zu
# haben, für den Fall dass es gesperrt sein sollte.
service cvspserver
{
 socket_type = stream
 protocol = tcp
 instances = 10
 protocol = tcp
 wait = no
 user = cvs
 bind = 10.0.0.2
 only_from = 10.0.0.0
 access_times = 8:00-17:00
 server = /usr/sbin/tcpd
 server_args = /usr/bin/cvs --allow-root=/mnt/cvsdisk/cvsroot pserver
 max_load = 1.0
 log_on_failure += RECORD
 disable = no
}
</pre>

<p>
Für weitere Information lesen Sie bitte <c>man 5 xinetd.conf</c>.
</p>

</body>
</section>

<section>
<title>X</title>
<body>

<p>
Standardmäßig ist Xorg konfiguriert als Xserver zu arbeiten. Dies kann
gefährlich sein, denn X verwendet unverschlüsselte TCP Verbindungen und wartet
auf xclients.
</p>

<impo>
Wenn Sie diesen Dienst nicht benötigen, deaktivieren Sie ihn!
</impo>

<p>
Wenn Sie aber Ihre Workstation als Xserver verwenden müssen, dann seien Sie
vorsichtig mit dem <c>/usr/X11R6/bin/xhost</c> Befehl. Dieser Befehl erlaubt es
Clients von anderen Hosts sich zu verbinden und Ihre Display zu benutzen. Dies
kann hilfreich sein, wenn Sie eine X Anwendung von einem anderen Rechner
benötigen und der einzige Weg über das Netzwerk führt, dies kann jedoch auch
durch einen Angreifer ausgenutzt werden. Die Syntax lautet
<c>/usr/X11R6/bin/xhost +hostname</c>
</p>

<warn>
Verwenden Sie das <c>xhost +</c> Feature niemals! Dies erlaubt es jeglichen
Clients eine Verbindung aufzubauen und Kontrolle über Ihr X zu erlangen. Wenn
ein Angreifer Zugang zu Ihrem X erlangt, kann er Ihre Tastenanschläge
protokollieren und die Kontrolle über Ihren Desktop übernehmen. Wenn Sie es
verwenden müssen, denken Sie immer daran, einen Host zu spezifizieren.
</warn>

<p>
Eine sichere Lösung ist dieses Feature komplett zu deaktivieren, indem man X
mit <c>startx -- -nolisten tcp</c> startet oder es permanent in der
Konfiguration deaktiviert.
</p>

<pre caption="/usr/X11R6/bin/startx">
defaultserverargs="-nolisten tcp"
</pre>

<p>
Um sicherzustellen, dass <path>startx</path> nicht überschrieben wird, wenn
eine neue Version von Xorg mit emerge installiert wird, müssen Sie es schützen.
Fügen Sie die folgende Zeile zu <path>/etc/make.conf</path> hinzu:
</p>

<pre caption = "/etc/make.conf">
CONFIG_PROTECT_MASK="/usr/X11R6/bin/startx"
</pre>

<p>
Wenn Sie einen graphischen Loginmanager verwenden, müssen Sie die Sache anders
angehen.
</p>

<p>
Für <c>gdm</c> (Gnome Display Manager)
</p>

<pre caption="/etc/X11/gdm/gdm.conf">
[server-Standard]
command=/usr/X11R6/bin/X -nolisten tcp
</pre>

<p>
Für <c>xdm</c> (X Display Manager) und <c>kdm</c> (Kde Display Manager)
</p>

<pre caption="/etc/X11/xdm/Xservers">
:0 local /usr/bin/X11/X -nolisten tcp
</pre>

</body>
</section>

</sections>
