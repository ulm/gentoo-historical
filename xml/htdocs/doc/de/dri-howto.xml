<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/dri-howto.xml,v 1.13 2005/08/06 07:42:45 grahl Exp $ -->

<!-- English CVS Version: 1.21 -->

<guide link="/doc/de/dri-howto.xml" lang="de">
<title>Anleitung für Hardware 3D-Beschleunigung</title>

<author title="Autor">
  <mail link="spyderous@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Bearbeiter">
  <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Übersetzer">
  <mail link="js@ameds.de">Jens Schittenhelm</mail>
</author>
<author title="Korrektor">
  <mail link="grahl@gentoo.org">Jan Hendrik Grahl</mail>
</author>
<author title="Übersetzer">
  <mail link="marcel.klein@koeln.de">Marcel Klein</mail>
</author>

<abstract>
Dieses Dokument ist ein Leitfaden um 3D Beschleunigung unter Verwendung von 
X11-DRM mit Xorg in Gentoo Linux einzurichten.
</abstract>

<license/>

<version>1.0.11</version>
<date>2005-07-27</date>

<chapter>
<title>Einführung</title>
<section>
<title>Was ist 3D Hardware-Beschleunigung und wofür brauche ich es?</title>
<body>

<p>
Mit 3D Hardware-Beschleunigung wird dreidimensionales Rendern
vom Prozessor der Grafikkarte übernommen, anstatt wertvolle
Rechenleistung der CPU für das Darstellen von 3D Bildern abzuzweigen.
Dies wird auch als "Hardware-Beschleunigung" bezeichnet,
im Gegensatz zur  "Software Beschleunigung", wo die CPU mit Hilfe
der Mesa Software Bibliotheken das Zeichnen übernimmt. Während
Xorg in der Regel 2D Hardware-Beschleunigung unterstützt, gibt es
bei der 3D-Beschleunigung einige Lücken. Spiele, 3D-CAD und
Modellierungen kommen in der Regel nicht ohne 3D
Hardware-Beschleunigung aus.
</p>

</body>
</section>
<section>
<title>Wie erhalte ich 3D Hardware-Beschleunigung?</title>
<body>

<p>
In den meisten Fällen existieren sowohl binäre als auch Open-Source
Treiber. Letztere sind zu bevorzugen, da wir nun einmal Linux verwenden
und Open Source eines unserer Hauptprinzipien ist. In machen Fällen
sind binäre Treiber oft die einzige Möglichkeit, wie zum Beispiel mit den
nVidia Karten. Binäre Treiber in Portage sind media-video/nvidia-kernel und
media-video/nvidia-glx für nVidia, media-video/mgavideo für
Matrox und media-video/ati-drivers für ATI Karten. Open-Source
Projekte sind media-video/kyro-kernel für Kyro II Karten
und media-video/ati-gatos mit speziellen Augenmerk auf die
Video-Möglichkeiten der ATI Grafikkarten.
</p>

</body>
</section>
<section>
<title>Was ist DRI?</title>
<body>

<p>
Die Direct Rendering Infrastructure (<uri link="http://dri.sourceforge.net">
dri.sourceforge.net</uri>), besser bekannt unter dem Kürzel DRI ist eine
effiziente Schnittstelle, die direkten und dennoch sicheren Zugang zur
Grafikhardware ermöglicht. Sie beinhaltet Änderungen am X Server,
verschiedenen Client-Bibliotheken und dem Kernel selbst.
Hauptverwendungszweck für DRI sind schnelle OpenGL
Implementierungen.
</p>

</body>
</section>
<section>
<title>Was ist X11-DRM und was verbindet es mit dem normalen Xorg?</title>
<body>

<p>
X11-DRM ist eine <e>Erweiterung</e> zu Xorg, die 3D
Hardware-Beschleunigung für bestimmte Karten bereitstellt, 
indem es die entsprechenden Kernelmodule für direct rendering
beinhaltet.
</p>

</body>
</section>
<section>
<title>Zweck dieser Dokumentation</title>
<body>

<p>
Diese Dokumentation richtet sich an alle, die Direct Rendering in der Xorg
Standardumgebung nicht zum Laufen bekommen. X11-DRM funktioniert für 3dfx, 
gamma, i8x0, matrox, rage128, radeon, mach64 und sis300 Treiber. Weitere 
Informationen erhält man auf der <uri 
link="http://dri.sourceforge.net">DRI Homepage</uri>.
</p>

</body>
</section>
 
<section>
<title>Feedback</title><body>

<p>
Weitere Vorschläge, Fragen oder Mails können an <mail 
link="spyderous@gentoo.org">Donnie Berkholz</mail> gerichtet werden.
</p>
  	 
 </body> 
</section>
</chapter>

<chapter>
<title>Installation von Xorg und Kernel Konfiguration</title>
<section>
<title>Installation von Xorg</title>
<body>

<p>
Lesen Sie bitte unseren <uri 
link="/doc/en/xorg-config.xml">Leitfaden zur Xorg Konfiguration</uri> um 
Xorg zu installieren und einzurichten.
</p>

</body>
</section>
<section>
<title>Kernel Konfiguration</title>
<body>

<p>
Zunächst sollte der Chipsatz sondiert werden und die Unterstützung
für diesen aktiviert werden.
</p>

<pre caption="Prüfen des AGP Chipsatzes">
# <i>emerge pciutils; lspci | grep AGP</i>
# <i>00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)</i>
<comment>(Je nach entsprechender Hardware kann dies anders aussehen.)</comment>
</pre>

<p>
Wenn Ihr Chipsatz nicht unterstützt wird vom Kernel dann könnten Sie unter 
Umständen Erfolg damit haben <c>agp=try_unsupported</c> als Kernelparameter 
zu übergeben. Dies wird Intels generische Routinen für AGP Unterstützung 
verwenden. Um diesen Parameter hinzuzufügen editieren Sie bitte Ihre 
Bootloader Konfigurationsdatei.


</p>

<p>
Dies sollte mit allen Kerneln funktionieren. In diesem Fall erfolgte
die Konfiguration unter gentoo-sources-2.4.20-r5.
</p>

<pre caption="Konfigurieren des Kernels">
# <i>ls -l /usr/src/linux </i>
lrwxrwxrwx    1 root     root           22 May 29 18:20 /usr/src/linux -> linux-2.4.20-gentoo-r5
<comment>(Stellen Sie sicher, dass /usr/src/linux auf Ihren aktuellen Kernel zeigt.)</comment>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<pre caption="Optionen in make menuconfig">
Processor type and features ---&lt;
  &gt;*&lt; MTRR (Memory Type Range Register) support
Character devices ---&lt;
&lt;M&gt; /dev/agpgart (AGP Support)
[*] Intel 440LX/BX/GX and I815/I820/I830M/I830MP/I840/I845/I850/I860 support
<comment>(Wählen Sie Ihren Chipsatz anstatt des hier genannten.)</comment>
&lt; &gt; Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)
</pre>

<p>
Wenn Sie einen 2.4 Kernel verwenden stellen Sie sicher, dass der Direct 
Rendering Manager (DRM) <e>deaktiviert</e> ist. Das X11-DRM Paket wird seinen 
eigenen liefern. 2.6 Kernelbenutzer sollten den Direct Rendering Manager (DRM) 
<e>aktivieren</e> da das X11-DRM Paket momentan die 2.6 Kernel nicht 
unterstützt.
</p>

</body>
</section>
<section>
<title>Den Kernel kompilieren und installieren</title>
<body>

<pre caption="Kompilieren und installieren des Kernels">
# <i>make dep &amp;&amp; make clean bzImage modules modules_install</i>
# <i>mount /boot</i>
# <i>cp arch/i386/boot/bzImage /boot</i>
</pre>

<p>
Wenn der Kernel einen anderen Namen erhalten soll als bzImage, sollten
Sie stattdessen nach boot/neuer_name kopieren. Nicht vergessen
grub.conf oder lilo.conf entsprechend anzupassen,
und als LILO-Benutzer /sbin/lilo ausführen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installation von X11-DRM und Konfiguration von Direct Rendering</title>
<section>
<title>Installation von X11-DRM </title>
<body>

<warn>
Wenn Sie einen 2.6 Kernel verwenden, dann überspringen Sie bitte diesen 
Abschnitt und gehen über zur <uri
link="#configure_xorg">Konfiguration von Xorg.conf</uri>.
</warn>

<pre caption="Installation von X11-DRM">
# <i>emerge x11-drm</i>
</pre>

</body>
</section>
<section id="configure_xorg">
<title>Konfiguration von Xorg.conf</title>
<body>

<p>
Einige Chipsätze erfordern, dass <c>xorg-x11</c> mit
<c>USE="insecure-drivers"</c> neu gebaut wird. Dies gilt bei xorg-x11-6.8.2 für
mach64, unichrome and savage Chipsätze, und bei xorg-x11-6.8.99.x für mach64 and
unichrome. Savage Benutzer sollten xorg-x11-6.8.99.x nicht verwenden, da in
dieser Version savage nicht richtig unterstützt wird.
</p>

<pre caption="Neubauen von xorg-x11">
# <i>vim /etc/portage/package.use</i>
<comment>(Wenn Sie einen von den oben genannten Chipsätzen verwenden, dann fügen
Sie bitte die folgende Zeile ein)</comment>
x11-base/xorg-x11 insecure-drivers

# <i>emerge xorg-x11</i>
</pre>

<p>
Öffnen Sie<path>/etc/X11/xorg.conf</path> mit Ihrem Lieblingseditor und fügen Sie
die Funktionen für DRI und GLX hinzu.
</p>

<pre caption="xorg.conf">
...
Section "Module"
     Load "dri"
     Load "glx"
     ...
EndSection
...
Section "Device"
     Driver "radeon"
     ...
EndSection
...
Section "dri"
     Mode 0666
EndSection
</pre>

<p>
Sollten Sie einen anderen Treiber verwenden, müssen Sie radeon durch den
entsprechenden Treiber ersetzen
</p>

</body>
</section>
</chapter>

<chapter>
<title>3D Beschleunigung testen</title>
<section>
<title>Neustart mit dem neuen Kernel</title>
<body>

<p>
Nachdem Sie ihren Computer neu gestartet haben, wollen wir schauen,
ob Direct Rendering aktiviert wurde und wie gut es funktioniert.
</p>

<pre caption="Rendering testen">
# <i>startx</i>
<comment>(Es ist nicht notwendig den Treiber oder agpgart zu laden, wenn agpgart sie als Modul kompiliert wurden.)</comment>
<comment>(Diese werden automatisch geladen.)</comment>
# <i>glxinfo | grep rendering</i>
direct rendering: Yes
<comment>(Kommt hier "No", dann haben Sie keine 3D Beschleunigung)</comment>
# <i>glxgears</i>
<comment>(Prüft die Framerate pro Sekunde (FPS) im Standardfenster. Diese sollte sollte)</comment>
<comment>(deutlich höher sein, als vor der Installation von x11-drm. Den Test am besten durchgeführen, wenn die CPU nicht beschäftigt ist.</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Verwenden der CVS Sourcen</title>
<section>
<body>

<warn>
Sollte die obige Anleitung erfolgreich gewesen sein, ist die
Installation der CVS Sourcen nicht notwendig!
</warn>

</body>
</section>
<section>
<title>Wird CVS benötigt?</title>
<body>

<p>
Probieren Sie zuerst das x11-drm Paket aus. Sollte es nicht 
funktionieren, und Sie haben eine sehr neue Grafikkarte, dann sind die 
CVS Sourcen ein  Versuch wert. Möchten Sie nicht die kompletten 
CVS Sourcen selber bauen, können Sie auch die täglichen 
Snapshots herunterladen.
</p>

</body>
</section>
<section>
<title>Wird Ihre Karte von den CVS Sourcen unterstützt?</title>
<body>

<p>
Schauen Sie, ob Ihre Karte auf der
<uri link="http://dri.sourceforge.net/cgi-bin/moin.cgi/Status">
Liste</uri> der unsterstützten Karten steht. Sollte Ihre Karte nicht
dabei sein, aber eine ähnliche Karte darunter sein, ist damit ein
Versuch wert.
</p>

<!-- 
I see a couple of 8x AGP stuff on the Internet about vanilla 2.4 kernels;
is this now available or not? I've commented it out for the time being,
hoping that this doesn't affect us :)

<warn>
"Linux 2.4 doesn't support agp 8x, so I had to go find a backport. The backport 
works .... it doesn't patch quite properly, and it requires 2.4.21 (I've only 
gotten it to work with vanilla, straight from the tarball (not ebuild)). First 
go get the 2.4.20-2.4.21 patch from kernel.org .... (then get the patch,) It 
was on a mailing list somewhere. It doesn't patch cleanly - - one file fails, 
the pci_ids.h file, but if you actually read the file and the reject list, it's
very easy to fix. But it does load, and it gives me 1600x1200 with video 
(although a bit slow b/c of lack of dga) with xfree-drm." (SanityInAnarchy on 
#gentoo)
</warn>

<impo>
The patch is a little tricky to work with but <uri 
link="http://www.ussg.iu.edu/hypermail/linux/kernel/0302.2/att-1618/01-agp3.diff.bz2">here's 
the link</uri>. If you can disable 8X AGP in your BIOS, change it to 4X and you 
may not need the patch.
</impo>
-->

</body>
</section>
<section>
<title>Folgen Sie den CVS Anweisungen</title>
<body>

<p>
Das DRI Projekt hat ein Dokument über die CVS Kompilierung selbst. Lesen Sie 
bitte <uri 
link="http://dri.sourceforge.net/cgi-bin/moin.cgi/Building">das Dokument</uri> 
und folgen Sie den Anweisungen bis zum <e>Installieren für X.org</e> Abschnitt.
</p>

</body>
</section>
<section>
<title>Installation des Treibers</title>
<body>

<p>
Überprüfen Sie, ob die DRI Kernelmodule erfolgreich erstellt wurden:
</p>

<pre caption="Überprüfung">
# <i>cd ~/DRI-CVS/build/xc/programs/Xserver/hw/xfree86/os-support/linux/drm/kernel; ls</i>
</pre>

<p>
Für einen 3dfx Voodoo Treiber sollten Sie tdfx.o sehen. Für Matrox
G200/G400 ist dies mga.o, für ATI Rage128 r128.o, für Intel i810 ein i810.o,
für ATI Radeon ist dies radeon.o. Sollte die Kompilation der DRI Module
fehlgeschlagen sein, sollten Sie die Linux Kernel Version überprüfen. Auch
werden nicht immer die allerneuesten Kernel unterstützt.
</p>

<p>
Installieren Sie über Ihre X.org Installation. Es ist ratsam vorher von xorg-x11
ein Backup zu erstellen.
</p>

<pre caption="Backup von Xorg">
# <i>quickpkg xorg-x11</i>
<comment>(Dies erstellt ein Backup von Ihrem Xorg-X11 Paket.)</comment>
# <i>make install</i>
</pre>

<p>
Dann folgen Sie den Anweisungen in Kapitel 3, Abschnitt "Konfiguration
von Xorg".
</p>

<p>
Um das entsprechende DRM Modul in den laufenden Kernel zu laden,
sollte das Kernel Modul nach /lib/modules/ kopiert werden und mit
uname -r`/kernel/drivers/char/drm/ ausgeführt werden.
Anschließend <c>modules-update</c> und den X Server neu starten.
Sollten Sie den Treiber nicht für den aktuell benutzten Kernel erstellt haben,
muss uname -r an den zu verwendenden Kernel angepasst werden.
</p>

<warn>
Stellen Sie sicher, dass ältere DRI Module vorher entladen werden.
Manche DRM Module erwarten das apgart vorher geladen wird.
</warn>

</body>
</section>
</chapter>

<chapter>
<title>Performance Tuning</title>
<section>
<title>Das Meiste aus Direct Rendering herausholen</title>
<body>

<p>
Einige Optionen können die Performance um mehr als 30% steigern. 
Diese können in <path>/etc/X11/xorg.conf</path> gesetzt werden:
</p>

<pre caption=" xorg.conf">
Section "Device"
     Option     "AGPMode" "4"
<comment>(Dies steigerte die FPS von 609 auf 618.)</comment>
     Option     "AGPFastWrite" "True"
<comment>(Dies hatte keinen messbaren Effekt, kann aber die Instabilität des Computers erhöhen.)</comment>
<comment>(Eventuell muss es im BIOS zusätzlich aktiviert werden.)</comment>
     Option     "EnablePageFlip" "True"
<comment>(Dies steigerte die FPS von 618 auf 702. Angeblich soll es riskant sein, aber wenige Leute haben Probleme gemeldet.)</comment>
     ...
EndSection
</pre>

<p>
Für weitere Tuning Optionen sollte die
<uri link="http://dri.sourceforge.net/doc/dri_driver_features.phtml">
DRI Infoseite</uri> konsultiert werden.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Problembehebung</title>
<section>
<title>Es funktioniert nicht mehr. Ich habe kürzlich meinen Kernel
neu kompiliert oder einen neuen Kernel installiert.</title>
<body>
  	 
<p>
Jedes Mal, wenn Sie Ihren Kernel neu kompilieren, oder einen anderen
Kernel installieren, müssen Sie Ihre Kernel-Module neu kompilieren.
Sie müssen xorg-x11 nicht neu emergen, aber Sie müssen xfree-drm
auf jeden Fall neu emergen.
</p>
  	 
</body>
</section>
  	 
<section>
<title>Es funktioniert einfach nicht. Ich habe kein Rendering und ich weiss
nicht warum.</title>
<body>

<p>
Versuchen Sie ein <c>insmod radeon</c> vor dem Starten des X Servers.
Versuchen Sie ausserdem apgart als Modul zu erstellen, statt direkt in den
Kernel zu kompilieren.
</p>

</body>
</section>
<section>
<title>Beim Ausführen von startx erhalte ich folgenden Fehler:
"[drm] failed to load kernel module agpgart"</title>
<body>

<p>
Dies erscheint immer, wenn apgart direkt in den Kernel einkompiliert wird.
Sie können dies getrost ignorieren.
</p>

</body>
</section>
<section>
<title>Direct Rendering funktioniert nicht und in /var/log/Xorg.0.log
erhalte ich eine Fehlermeldung, das die Treiberversion zu niedrig ist.</title>
<body>

<p>
Sie benutzen nicht den x11-drm Treiber. Sind Sie sicher, dass DRM und der Treiber
in den richtigen Kernel kompiliert wurde?
</p>

</body>
</section>
<section>
<title>Ich besitze eine Radeon und möchte TV-Out nutzen</title>
<body>

<p>
Dafür gibt es die ati-gatos Treiber. <c>emerge -s gatos</c>
</p>

</body>
</section>
<section>
<title>Es funktioniert immer noch nicht. Meine Karte ist so neu und
megaobercool, dass sie nicht unterstützt wird.</title>
<body>

<p>Probieren Sie die binären Treiber aus. Sollte es für Ihre Karte noch keine
Treiber geben, probieren Sie VESA. Es ist langsam, funktioniert aber. Halten
Sie nach neuen Treibern Ausschau.
</p>

</body>
</section>
<section>

<title>Ich habe eine PCI Karte, die nicht arbeiten will. Hilfe!</title>
<body>

<p>
Im Abschnitt "Device" muss ForcePCIMode eingetragen sein.
</p>
<pre caption="Aktivieren von ForcePCIMode">
Option "ForcePCIMode" "True"
</pre>


</body>
</section>
</chapter>

<chapter>
<title>Danksagungen</title>
<section>
<body>
  	 
<ol>
<li>
Christopher Webber für seinen Vorschlag, in den FAQ den Kernel neu zu kompilieren.
 </li>
 <li>
Steve für seinen Vorschlag, die Konsistenz zwischen dri und DRI in der
XF86Config
 </li>
 </ol>
  	 
 </body>
 </section>
 </chapter>

<chapter>
<title>Referenzen</title>
<section>
<body>

<ul>
   <li>http://forums.gentoo.org/viewtopic.php?t=46681</li>
   <li>http://forums.gentoo.org/viewtopic.php?t=29264</li>
   <li>http://dri.sourceforge.net/</li>
   <li>http://www.retinalburn.net/linux/dri_status.html</li>
</ul>

</body>
</section>
</chapter>
</guide>
