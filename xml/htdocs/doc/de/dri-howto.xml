<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/dri-howto.xml,v 1.32 2008/09/23 12:26:12 keytoaster Exp $ -->

<!-- English CVS Version: 1.42 -->

<guide link="/doc/de/dri-howto.xml" lang="de">

<title>Anleitung für Hardware 3D-Beschleunigung</title>

<author title="Autor">
  <mail link="dberkholz@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Bearbeiter">
  <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Bearbeiter">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Übersetzer">
  <mail link="js@ameds.de">Jens Schittenhelm</mail>
</author>
<author title="Korrektor">
  <mail link="grahl@gentoo.org">Jan Hendrik Grahl</mail>
</author>
<author title="Übersetzer">
  <mail link="marcel.klein@koeln.de">Marcel Klein</mail>
</author>
<author title="Übersetzer">
  <mail link="keytoaster@gentoo.org">Tobias Heinlein</mail>
</author>

<abstract>
Dieses Dokument ist ein Leitfaden um 3D Beschleunigung unter Verwendung des DRM
mit Xorg in Gentoo Linux einzurichten.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.11</version>
<date>2008-09-10</date>

<chapter>
<title>Einführung</title>
<section>
<title>Was ist 3D Hardware-Beschleunigung und wofür brauche ich es?</title>
<body>

<p>
Mit 3D Hardware-Beschleunigung wird dreidimensionales Rendern
vom Prozessor der Grafikkarte übernommen, anstatt wertvolle
Rechenleistung der CPU für das Darstellen von 3D Bildern abzuzweigen.
Dies wird auch als "Hardware-Beschleunigung" bezeichnet,
im Gegensatz zur  "Software Beschleunigung", wo die CPU mit Hilfe
der Mesa Software Bibliotheken das Zeichnen übernimmt. Während
Xorg in der Regel 2D Hardware-Beschleunigung unterstützt, gibt es
bei der 3D-Beschleunigung einige Lücken. Spiele, 3D-CAD und
Modellierungen kommen in der Regel nicht ohne 3D
Hardware-Beschleunigung aus.
</p>

</body>
</section>
<section>
<title>Wie erhalte ich 3D Hardware-Beschleunigung?</title>
<body>

<p>
In den meisten Fällen existieren sowohl binäre als auch Open-Source
Treiber. Letztere sind zu bevorzugen, da wir nun einmal Linux verwenden
und Open Source eines unserer Hauptprinzipien ist. In machen Fällen
sind binäre Treiber oft die einzige Möglichkeit, wie zum Beispiel mit den
nVidia Karten. Binäre Treiber in Portage sind <c>x11-drivers/nvidia-drivers</c>
für nVidia-Karten und <c>x11-drivers/ati-drivers</c> für ATI-Karten.
</p>

</body>
</section>
<section>
<title>Was ist DRI?</title>
<body>

<p>
Die <uri link="http://dri.sourceforge.net">Direct Rendering
Infrastruktur</uri>, besser bekannt unter dem Kürzel DRI ist eine effiziente
Schnittstelle, die direkten und dennoch sicheren Zugang zur Grafikhardware
ermöglicht. Sie beinhaltet Änderungen am X Server, verschiedenen
Client-Bibliotheken und dem Kernel selbst. Hauptverwendungszweck für DRI sind
schnelle OpenGL Implementierungen.
</p>

</body>
</section>
<section>
<title>Was ist der DRM und was verbindet es mit dem normalen Xorg?</title>
<body>

<p>
Der DRM (Direct Rendering Manager) ist eine <e>Erweiterung</e> zu Xorg, die 3D
Hardware-Beschleunigung für bestimmte Karten bereitstellt, indem es die
entsprechenden Kernelmodule für Direct Rendering beinhaltet.
</p>

</body>
</section>
<section>
<title>Zweck dieser Dokumentation</title>
<body>

<p>
Diese Dokumentation richtet sich an alle, die Direct Rendering in der Xorg
Standardumgebung nicht zum Laufen bekommen.
Der DRM funktioniert mit den folgenden Treibern:
</p>

<ul>
  <li>3dfx</li>
  <li>i8x0</li>
  <li>matrox</li>
  <li>rage128</li>
  <li>radeon</li>
  <li>mach64</li>
  <li>sis300</li>
  <li>via</li>
</ul>

<p>
Weitere Informationen erhält man auf der <uri
link="http://dri.freedesktop.org">DRI Homepage</uri>.
</p>

</body>
</section>

<section>
<title>Feedback</title><body>

<p>
Weitere Vorschläge, Fragen oder Mails können an <mail
link="dberkholz@gentoo.org">Donnie Berkholz</mail> gerichtet werden.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installation von Xorg und Kernel Konfiguration</title>
<section>
<title>Installation von Xorg</title>
<body>

<p>
Lesen Sie bitte unseren <uri
link="/doc/de/xorg-config.xml">Leitfaden zur Xorg Konfiguration</uri> um Xorg
zu installieren und einzurichten.
</p>

</body>
</section>
<section>
<title>Kernelkonfiguration</title>
<body>

<p>
Zunächst sollte der Chipsatz sondiert werden und die Unterstützung
für diesen aktiviert werden.
</p>

<pre caption="Prüfen des AGP-Chipsatzes">
# <i>emerge pciutils; lspci | grep AGP</i>
# <i>00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)</i>
<comment>(Je nach entsprechender Hardware kann dies anders aussehen.)</comment>
</pre>

<p>
Wenn Ihr Chipsatz vom Kernel nicht unterstützt wird, könnten Sie unter
Umständen Erfolg damit haben <c>agp=try_unsupported</c> als Kernelparameter
zu übergeben. Dies wird Intels generische Routinen für AGP Unterstützung
verwenden. Um diesen Parameter hinzuzufügen editieren Sie bitte Ihre
Bootloader Konfigurationsdatei!
</p>

<p>
Dies sollte mit meisten, wenn nicht allen, Kerneln funktionieren. In diesem Fall
erfolgte die Konfiguration unter einem <c>gentoo-sources</c> Standardkernel.
</p>

<pre caption="Konfigurieren des Kernels">
# <i>ls -l /usr/src/linux </i>
lrwxrwxrwx 1 root root 22 2007-02-14 20:12 /usr/src/linux -> linux-2.6.18-gentoo-r4
<comment>(Stellen Sie sicher, dass /usr/src/linux auf
Ihren aktuellen Kernel zeigt.)</comment>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<pre caption="Optionen in make menuconfig">
Processor type and features --->
&lt;*&gt; MTRR (Memory Type Range Register) support
Device drivers --->
   Graphics support --->
   &lt;M&gt; /dev/agpgart (AGP Support) --->
      <comment>(Die agpgart-Option erscheint unter 64-Bit Kerneln nicht; Wählen Sie einfach die Unterstützung für        Ihren Chipsatz.)</comment>
      &lt;M&gt; Intel 440LX/BX/GX, I8xx and E7x05 support
      <comment>(Wählen Sie Ihren Chipsatz anstatt des hier genannten.)</comment>
   &lt;M&gt; Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) --->
      &lt;M&gt; <comment>(Wählen Sie Ihre Grafikkarte aus der Liste aus)</comment>
</pre>

</body>
</section>
<section>
<title>Den Kernel kompilieren und installieren</title>
<body>

<pre caption="Kompilieren und Installieren des Kernels">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Vergessen Sie nicht die <path>grub.conf</path> oder <path>lilo.conf</path>
anzupassen und <c>/sbin/lilo</c> auszuführen, wenn Sie LILO benutzen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Konfiguration von Direct Rendering</title>
<section id="configure_xorg">
<title>Konfiguration von Xorg.conf</title>
<body>

<p>
Öffnen Sie<path>/etc/X11/xorg.conf</path> mit Ihrem Lieblingseditor und fügen
Sie die Funktionen für DRI und GLX hinzu.
</p>

<pre caption="xorg.conf">
...
Section "Module"
     Load "dri"
     Load "glx"
     ...
EndSection
...
Section "Device"
     Driver "radeon"
     <comment>(Ersetzen Sie radeon mit dem Namen Ihres Treibers.)</comment>
     ...
EndSection
...
Section "dri"
     Mode 0666
EndSection
</pre>

</body>
</section>
<section>
<title>Änderungen in modules.autoload.d</title>
<body>

<p>
Sie werden den Modulnamen, den Ihre Karte verwendet, zu
<path>/etc/modules.autoload.d/kernel-2.6</path> hinzufügen müssen um
sicherzustellen, dass das Modul automatisch beim Systemstart geladen wird.
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.6 editieren">
<comment>(Ändern Sie den Modulnamen wie benötigt.)</comment>
intel-agp
</pre>

<note>
Wenn Sie <c>agpgart</c> als Modul kompiliert haben werden Sie es auch in
<path>/etc/modules.autoload.d/kernel-2.6</path> hinzufügen müssen.
</note>

</body>
</section>
</chapter>

<chapter>
<title>3D Beschleunigung testen</title>
<section>
<title>Neustart mit dem neuen Kernel</title>
<body>

<p>
Nachdem Sie Ihren Computer neu gestartet haben und sich als normaler Benutzer
angemeldet haben, wollen wir schauen, ob Direct Rendering aktiviert wurde und
wie gut es funktioniert. Stellen Sie bitte vor Ausführen dieser Befehle sicher,
dass das Paket <c>mesa-progs</c> installiert ist, da <c>glxinfo</c> und
<c>glxgears</c> in diesem enthalten sind.
</p>

<pre caption="Rendering testen">
$ <i>startx</i>
<comment>(Es ist nicht notwendig Module für Ihren Treiber oder agpgart zu laden, auch wenn Sie diese als Module kompiliert haben.)</comment>
<comment>(Diese werden automatisch geladen.)</comment>
$ <i>glxinfo | grep rendering</i>
direct rendering: Yes
<comment>(Kommt hier "No" haben Sie keine 3D Beschleunigung)</comment>
$ <i>glxgears</i>
<comment>(Prüft die Framerate pro Sekunde (FPS) im Standardfenster. Diese sollte deutlich höher sein, als vor der Konfiguration des DRMs. Führen Sie diesen Test am besten durch, wenn die CPU nicht beschäftigt ist.)</comment>
</pre>

<note>
Die FPS könnten durch die Aktualisierungsrate Ihres Monitors eingeschränkt
sein. Beachten Sie dies, falls <c>glxgears</c> lediglich 70-100 FPS berichtet.
<c>games-fps/ut2004-demo</c> ist ein besseres Werkzeug zum Benchmarken, da es
Leistungsergebnisse zurückgibt, welche im Alltag auftreten könnten.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Performance Tuning</title>
<section>
<title>Das Meiste aus Direct Rendering herausholen</title>
<body>

<p>
Einige Optionen können die Performance um 30 Prozent (oder mehr) steigern,
gegenüber den Standardeinstellungen. Setzen Sie diese in
<path>/etc/X11/xorg.conf</path>. Jedoch werden Sie zuerst überprüfen müssen
ob Ihr Motherboard und Ihre Grafikkarte diese Optionen unterstützen.
</p>

<p>
Lassen Sie uns zuerst nachsehen ob Ihre Grafikkarte Fast-Writes unterstützt.
Wir tun dies durch genaue Betrachtung der Ausgabe von <c>lspci</c>. Genauer
gesagt sehen wir uns die "VGA compatible controller" Informationen an.
</p>

<pre caption="Grafikkarte überprüfen">
# <i>lspci -vv</i>
01:00.0 VGA compatible controller: ATI Technologies Inc Radeon Mobility M6 LY (prog-if 00 [VGA])
. . .
Capabilities: [58] AGP version 2.0
    Status: RQ=48 Iso- ArqSz=0 Cal=0 SBA+ ITACoh- GART64- HTrans- 64bit- FW+ AGP3- Rate=x1,x2,x4
</pre>

<p>
Es wird eine ganze Menge an Informationen produziert; wir suchen nach <b>FW</b>
im "Status" Unterabschnitt des AGP "Capabilities" Abschnitts. Wenn <b>FW+</b>
in der "Status" Zeile vorhanden ist, bedeutet es, dass Ihre Karte Fast-Writes
unterstützt. Wir können nun überprüfen ob das Motherboard Fast-Writes
unterstützt.
</p>

<impo>
Wenn Sie nicht <b>FW+</b> sondern stattdessen <b>FW-</b> sehen, können Sie
Fast-Writes in <path>xorg.conf</path> nicht aktivieren. Ihre Karte unterstützt
Fast-Writes nicht.
</impo>

<p>
Lassen Sie uns nun sicherstellen, dass auch das Motherboard Fast-Writes
unterstützt. Dieses Mal ist der "Host bridge" Abschnitt Ihrer <c>lspci</c>
Ausgabe relevant.
</p>

<pre caption="Überprüfung des Motherboards">
# <i>lspci -vv</i>
00:00.0 Host bridge: Intel Corporation 82830 830 Chipset Host Bridge (rev 02)
. . .
Capabilities: [a0] AGP version 2.0
    Status: RQ=32 Iso- ArqSz=0 Cal=0 SBA+ ITACoh- GART64- HTrans- 64bit- FW+ AGP3- Rate=x1,x2,x4
</pre>

<p>
Untersuchen Sie auch hier den "Status" Unterabschnitt Ihres AGP "Capabilities"
Abschnitts. Suchen Sie nach <b>FW</b>. Wenn Sie <b>FW+</b> sehen unterstützt
Ihr Motherboard Fast-Writes.
</p>

<impo>
Denken Sie daran dass die Information über Ihre Grafikkarte und die Information
über Ihr Motherboard die gleiche <b>FW</b> Fähigkeit anzeigen müssen. Wenn
eines der beiden Geräte <b>FW-</b> in "Status" anzeigt, können Sie Fast-Writes
in <path>xorg.conf</path> nicht aktivieren.
</impo>

<p>
Vorausgesetzt alles ist soweit in Ordnung und Ihr Motherboard und Ihre
Grafikkarte unterstützten Fast-Writes, lassen Sie uns nun die Option in
<path>/etc/X11/xorg.conf</path> aktivieren und die beste Performance aus Ihrer
Hardware herausholen.
</p>

<pre caption=" xorg.conf">
Section "Device"
     Option     "AGPMode" "4"
<comment>(Dies steigerte die FPS von 609 auf 618.)</comment>
     Option     "AGPFastWrite" "True"
<comment>(Dies hatte keinen messbaren Effekt, kann aber die Instabilität des Computers erhöhen.)</comment>
<comment>(Eventuell muss es im BIOS zusätzlich aktiviert werden.)</comment>
     Option     "EnablePageFlip" "True"
<comment>(Dies steigerte die FPS von 618 auf 702. Angeblich soll es riskant sein, aber wenige Leute haben Probleme gemeldet.)</comment>
     ...
EndSection
</pre>

<warn>
Aktivieren von <c>AGPFastWrite</c> bei einem VIA-Chipsatz wird mit großer
Wahrscheinlichkeit dazu führen, dass Ihr Rechner einfriert. VIA-Chipsätze
arbeiten nicht gut mit Fast-Writes zusammen, setzen Sie diese Einstellung also
auf eigenes Risiko.
</warn>

<note>
Denken Sie daran, dass Sie zuerst im BIOS die entsprechenden Optionen aktiveren
müssen, wenn Sie wollen, dass Fast-Writes korrekt funktionieren.
</note>

<p>
Für weitere Tuning Optionen sollte die <uri
link="http://dri.freedesktop.org/wiki/FeatureMatrix">Feature Matrix</uri> oder
die <uri link="http://dri.sourceforge.net/doc/dri_driver_features.phtml">Feature
Liste</uri> auf Sourceforge konsultiert werden.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Problembehebung</title>
<section>
<title>Es funktioniert einfach nicht. Ich habe kein Rendering und ich weiß
nicht warum.</title>
<body>

<p>
Versuchen Sie ein <c>modprobe radeon</c> vor dem Starten des X-Servers
(ersetzen Sie <c>radeon</c> durch den Namen ihres Treibers).
Versuchen Sie außerdem agpgart direkt in den Kernel zu kompilieren, anstatt
ein Modul zu erstellen.
</p>

</body>
</section>
<section>
<title>Beim Ausführen von startx erhalte ich folgenden Fehler:
"[drm] failed to load kernel module agpgart"</title>
<body>

<p>
Dies erscheint immer, wenn agpgart direkt in den Kernel einkompiliert wird.
Sie können dies getrost ignorieren.
</p>

</body>
</section>
<section>
<title>Ich besitze eine Radeon und möchte TV-Out nutzen</title>
<body>

<p>
Die ursprünglich vom <uri link="http://gatos.sf.net">GATOS</uri> Projekt
entwickelten Treiber wurden in Xorgs Codebasis eingebunden. Sie brauchen
nichts besonderes, um TV-Out nutzen zu können;
<c>x11-drivers/xf86-video-ati</c> wird gut funktionieren.
</p>

</body>
</section>
<section>
<title>
Es funktioniert immer noch nicht. Meine Karte ist so neu und
megaobercool, dass sie nicht unterstützt wird.
</title>
<body>

<p>
Probieren Sie die binären Treiber aus. Eine Liste für <c>ati-drivers</c> gibt es
auf <uri>http://ati.amd.com/support/drivers/linux/linux-radeon.html</uri> (für
x86) und auf
<uri>http://ati.amd.com/support/drivers/linux64/linux64-radeon.html</uri> (für
amd64). Sollte es für Ihre Karte noch keine Treiber geben, probieren Sie fbdev.
Es ist langsam, funktioniert aber.
</p>

</body>
</section>
<section>

<title>Ich habe eine PCI-Karte, die nicht arbeiten will. Hilfe!</title>
<body>

<p>
Bearbeiten Sie <path>/etc/X11/xorg.conf</path>. Aktivieren Sie ForcePCIMode
im Abschnitt "Device".
</p>
<pre caption="Aktivieren von ForcePCIMode">
Option "ForcePCIMode" "True"
</pre>


</body>
</section>
</chapter>

<chapter>
<title>Danksagungen</title>
<section>
<body>

<ol>
  <li>
    Christopher Webber für seinen Vorschlag, in den FAQ den Kernel neu zu
    kompilieren.
  </li>
  <li>
    Steve für seinen Vorschlag, die Konsistenz zwischen dri und DRI in der
    XF86Config
  </li>
</ol>

 </body>
 </section>
 </chapter>

<chapter>
<title>Referenzen</title>
<section>
<body>

<ol>
  <li><uri>http://forums.gentoo.org/viewtopic.php?t=46681</uri></li>
  <li><uri>http://forums.gentoo.org/viewtopic.php?t=29264</uri></li>
  <li><uri>http://dri.freedesktop.org/</uri></li>
  <li><uri>http://www.retinalburn.net/linux/dri_status.html</uri></li>
</ol>

</body>
</section>
</chapter>
</guide>
