<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/bluetooth-guide.xml,v 1.2 2007/10/27 16:11:56 keytoaster Exp $ -->

<!-- English CVS Version 1.15 -->

<guide link="/doc/de/bluetooth-guide.xml" lang="de">
<title>Gentoo Linux Bluetooth Leitfaden</title>

<author title="Autor">
  <mail link="deathwing00@gentoo.org">Ioannis Aslanidis</mail>
</author>
<author title="Mitarbeiter">
  <mail link="puggy@gentoo.org">Douglas Russell</mail>
</author>
<author title="Mitarbeiter">
  <mail link="marcel@holtmann.org">Marcel Holtmann</mail>
</author>
<author title="Autor">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Bearbeiter">
  <mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>
<author title="Übersetzer">
  <mail link="tjosten@gmail.com">Timo Josten</mail>
</author>
<author title="Korrektor">
  <mail link="keytoaster@gentoo.org">Tobias Heinlein</mail>
</author>

<abstract>
Dieser Leitfaden wird Ihnen erklären, wie Sie erfolgreich ein Bluetooth-Gerät
installieren, den Kernel gegebenenfalls dafür konfigurieren und alle
Verbindungen, die Bluetooth anbietet, erklären. Außerdem wird Ihnen gezeigt,
wie Sie Spaß mit Bluetooth haben können.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.10</version>
<date>2007-10-21</date>

<chapter id="introduction">
<title>Einführung</title>
<section>
<title>Was ist Bluetooth?</title>
<body>

<p>
Bluetooth ist eine gewerbliche Spezifikation die Benutzern einen Weg bietet,
Informationen zwischen Geräten wie PCs, PDAs oder Mobiltelefonen auszutauschen.
Benutzer können kostengünstig drahtlose Ton- und Datenübertragungen tätigen,
wenn sie die Bluetooth-Technologie benutzen. Bluetooth bietet außerdem die
Möglichkeit, kleine Drahtlosnetzwerke, so genannte WLANs, zu erstellen und
Geräte zu synchronisieren.
</p>

</body>
</section>
<section>
<title>Über den Inhalt dieses Leitfadens</title>
<body>

<p>
Der erste Teil dieses Leitfadens erklärt, wie man qualifizierte und
nicht-qualifizierte Geräte, die Bluetooth unterstützen, identifiziert.
Auf diese Art können Benutzer Bluetooth-Geräte kaufen, bei denen es sicher ist,
dass sie funktionieren. Weiterhin erklärt der erste Teil wie man den
Systemkernel konfiguriert, installierte Bluetooth-Geräte identifiziert und die
erforderlichen Basis-Werkzeuge für Bluetooth installiert.
</p>

<p>
Der zweite Teil behandelt die Anleitung, wie man entfernte Geräte im System
sichtbar macht und wie man eine Verbindung von oder zu ihnen herstellt, indem
man eine Radiofrequenzkommunikation (RFCOMM) oder ein persönliches Netzwerk
(PAN) nutzt.
</p>

<p>
Der letzte Teil des Leitfadens listet im Detail Programme auf, die Vorteile von
den vielen Möglichkeiten der Bluetooth-Technologie ziehen können.
</p>

</body>
</section>
</chapter>

<chapter id="devices">
<title>Unterstützte Geräte</title>
<section>
<title>Qualifizierte und nicht-qualifizierte Geräte, die Bluetooth unterstützen</title>
<body>

<impo>
Diese Produkte können eventuell funktionieren, auch wenn sie keine
qualifizierten Bluetooth-Geräte sind. Gentoo untersützt sie in keiner Art, aber
es ist möglich, dass sie einfach funktionieren.
</impo>

<p>
Eine Liste der aktuell unterstützen Geräte finden Sie unter <uri
link="http://www.holtmann.org/linux/bluetooth/features.html">Bluetooth Features
und Änderungsinformationen von Marcel Holtmann</uri>.
</p>

</body>
</section>
</chapter>

<chapter id="kernel">
<title>Das System konfigurieren</title>
<section>
<title>Kernel-Konfiguration</title>
<body>

<p>
Da die letzte stabile Version des Linux-Kernels 2.6 ist, wird die Konfiguration
für diese Kernelserie durchgeführt. Die meisten Bluetooth-Geräte werden über
einen USB-Port verbunden, deshalb wird USB ebenfalls aktiviert. Dazu greifen
Sie bitte auf den <uri link="/doc/de/usb-guide.xml">Gentoo Linux USB
Leitfaden</uri> zurück.
</p>

<pre caption="Konfiguration für die 2.6er Kernelserie">
Networking ---&gt;

&lt;*&gt; Bluetooth subsystem support  ---&gt;

--- Bluetooth subsystem support
&lt;M&gt;   L2CAP protocol support
&lt;M&gt;   SCO links support
&lt;M&gt;   RFCOMM protocol support
[*]     RFCOMM TTY support
&lt;M&gt;   BNEP protocol support
[*]     Multicast filter support
[*]     Protocol filter support
&lt;M&gt;   HIDP protocol support

Bluetooth device drivers  ---&gt;
&lt;M&gt; HCI USB driver
[*]   SCO (voice) support
&lt;M&gt; HCI UART driver
[*]   UART (H4) protocol support
[*]   BCSP protocol support
[*]   Transmit CRC with every BCSP packet
&lt;M&gt; HCI BCM203x USB driver
&lt;M&gt; HCI BPA10x USB driver
&lt;M&gt; HCI BlueFRITZ! USB driver
<comment>(Die vier nachstehenden Treiber sind für PCMCIA-Bluetooth-Geräte und
werden nur angezeigt, wenn Sie die PCMCIA-Unterstützung im Kernel ebenfalls
aktiviert haben.)</comment>
&lt;M&gt; HCI DTL1 (PC Card) driver
&lt;M&gt; HCI BT3C (PC Card) driver
&lt;M&gt; HCI BlueCard (PC Card) driver
&lt;M&gt; HCI UART (PC Card) device driver
<comment>(Dieser Treiber ist für die HCI Emulation Software gedacht.)</comment>
&lt;M&gt; HCI VHCI (Virtual HCI device) driver

<comment>(Begeben Sie sich drei Ebenen zu Device Drivers zurück und vergewissern
Sie sich, dass USB aktiviert ist. Dies ist notwendig, wenn Sie einen
Bluetooth-Dongle benutzen, da diese in der Regel USB basierend sind.)</comment>
USB support  ---&gt;

&lt;*&gt; Support for Host-side USB
--- USB Host Controller Drivers
&lt;M&gt; EHCI HCD (USB 2.0) support
[ ]   Full speed ISO transactions (EXPERIMENTAL)
[ ]   Root Hub Transaction Translators (EXPERIMENTAL)
&lt;*&gt; OHCI HCD support
&lt;*&gt; UHCI HCD (most Intel and VIA) support
&lt; &gt; SL811HS HCD support
</pre>

<p>
Nun werden wir mit unserem neuen Kernel neustarten. Wenn alles richtig
gemacht wurde, haben wir jetzt ein System, das bereit für Bluetooth ist.
</p>

<impo>
Ihr USB-Gerät hat eventuell zwei Modi, dessen Standard nicht HCI sondern
HID sein kann. Wenn dies der Fall ist, benutzen Sie <c>hid2hci</c>, um zum
HCI-Modus zu wechseln. Ihr System wird sich diese Änderung nach einem Neustart
nicht merken.
</impo>

<pre caption="Die Bluetooth-Geräte erkennen">
<comment>(Eine Möglichkeit um das Gerät zu erkennen)</comment>
# <i>cat /proc/bus/usb/devices | grep -e^[TPD] | grep -e Cls=e0 -B1 -A1</i>
<comment>(Das Cls=e0(unk. ) identifiziert einen Bluetooth-Adapter)</comment>
T:  Bus=02 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0a12 ProdID=0001 Rev= 5.25
<comment>(Einiges wird eventuell von lsusb aus sys-apps/usbutils angezeigt)
</comment>
# <i>lsusb</i>
Bus 003 Device 002: ID 046d:c00e Logitech, Inc. Optical Mouse
Bus 003 Device 001: ID 0000:0000
Bus 002 Device 002: ID 0db0:1967 Micro Star International Bluetooth Dongle
</pre>

</body>
</section>
</chapter>

<chapter id="bluez">
<title>BlueZ - Der Bluetooth-Stack</title>
<section>
<title>BlueZ installieren</title>
<body>

<p>
Nun, da das Gerät vom Kernel erkannt wurde, brauchen wir einen Layer, welcher
Applikationen mit dem Bluetooth-Gerät kommunizieren lässt. BlueZ stellt den
offiziellen Linux Bluetooth-Stack bereit. Die Ebuilds, welche das anbieten, was
wir brauchen, sind <c>bluez-libs</c> und <c>bluez-utils</c>. Geräte, welche
Broadcom-Firmware-Dateien oder Vergleichbares benötigen, brauchen eventuell
<c>bluez-firmware</c>.
</p>

<pre caption="bluez-libs und bluez-utils installieren">
# <i>emerge net-wireless/bluez-libs net-wireless/bluez-utils</i>
</pre>

</body>
</section>
<section>
<title>BlueZ-Konfiguration und PIN-Paarung</title>
<body>

<p>
Nun ist es Zeit um zu prüfen, ob das Bluetooth-Gerät korrekt vom System
aufgenommen wird. Zuerst starten wir den benötigten Bluetooth-Dienst.
</p>

<pre caption="hciconfig starten">
<comment>(Starten von Bluetooth)</comment>
# <i>/etc/init.d/bluetooth start</i>
* Starting Bluetooth ...
*     Starting hcid ...                                                 [ ok ]
*     Starting sdpd ...                                                 [ ok ]
*     Starting rfcomm ...                                               [ ok ]

# <i>hciconfig</i>
hci0:   Type: USB
        BD Address: 00:01:02:03:04:05 ACL MTU: 192:8  SCO MTU: 64:8
        DOWN
        RX bytes:131 acl:0 sco:0 events:18 errors:0
        TX bytes:565 acl:0 sco:0 commands:17 errors:0
</pre>

<p>
Dies zeigt, dass das Bluetooth-Gerät erkannt wurde. Wie Sie vielleicht bemerkt
haben, ist das Gerät mit <e>DOWN</e> gekennzeichnet. Lassen Sie es uns also
"uppen". Die Konfigurationsdatei finden Sie unter
<path>/etc/bluetooth/hcid.conf</path>. Die benötigten Änderungen in dieser
Datei sind unten aufgelistet. Für weitere Informationen greifen Sie bitte auf
<c>man hcid.conf</c> zurück.
</p>

<pre caption="/etc/bluetooth/hcid.conf editieren">
<comment>(Empfohlene Änderungen für die Datei hcid.conf)</comment>

# HCId options
options {
        # Automatically initialize new devices
        autoinit yes;

<comment>(Ändern Sie Security auf "auto")</comment>
        # Security Manager mode
        #   none - Security manager disabled
        #   auto - Use local PIN for incoming connections
        #   user - Always ask user for a PIN
        #
        security auto;

        # Pairing mode
        pairing multi;

<comment>(Sie benötigen einen PIN-Helfer nur, wenn Sie &lt;=bluez-libs-2.x und &lt;=bluez-utils-2.x benutzen)
(Ändern Sie pin_helper, um /etc/bluetooth/pin-helper zu benutzen)</comment>
        # PIN helper
        pin_helper /etc/bluetooth/pin-helper;
}

# Default settings for HCI devices
device {
<comment>(Setzen Sie den Namen ihres Geräts hier; er ist frei wählbar)</comment>
        # Local device name
        #   %d - device id
        #   %h - host name
        name "BlueZ at %h (%d)";

        # Local device class
        class 0x3e0100;

        # Inquiry and Page scan
        iscan enable; pscan enable;

        # Default link mode
        lm accept;

        # Default link policy
        lp rswitch,hold,sniff,park;

<comment>(Lassen Sie es so, wie es ist, wenn Sie nicht genau wissen, was dies bewirkt.)</comment>
        # Authentication and Encryption (Security Mode 3)
        #auth enable;
        #encrypt enable;
}
</pre>

<p>
Danach müssen wir die Bluetooth-Gerät-PIN konfigurieren. Das wird Ihnen helfen,
Ihr Gerät mit anderen zu paaren.
</p>

<pre caption="/etc/bluetooth/pin bearbeiten">
<comment>(Ersetzen Sie 123456 mit Ihrer bevorzugten PIN-Nummer.)</comment>
123456
</pre>

<impo>
Diese Nummer Ihrer Wahl muss dieselbe sein, wie in all ihren Hosts mit
Bluetooth-Geräten, damit ihre Geräte gepaart werden können. Diese Nummer muss
ebenfalls geheimgehalten werden, da jeder, der diese Nummer kennt, Verbindungen
zu ihren Geräten herstellen kann.
</impo>

<note>
Wenn Sie <c>&lt;=bluez-libs-2.x</c> und <c>&lt;=bluez-utils-2.x</c> benutzen,
können Sie zwischen verschiedenen PIN-Helfern auswählen, abhängig davon, was
Sie benutzen wollen. Vorhandene PIN-Helfer sind u.a.
<c>/usr/lib/kdebluetooth/kbluepin</c> (net-wireless/kdebluetooth),
<c>/usr/bin/bluepin</c> oder <c>/etc/bluetooth/pin-helper</c>.
</note>

<note>
Seit <c>>=bluez-libs-3.x</c> und <c>>=bluez-utils-3.x</c> wurden die PIN-Helfer
durch Passkey-Agenten ersetzt. Es gibt einige grafisch unterschiedliche
Passkey-Agenten, welche Ihre PIN verwalten können, z.B. <c>bluez-gnome</c> und
<c>kdebluetooth</c>. Sie können auf der Kommandozeile ebenfalls
<c>passkey-agent</c> (aus <c>bluez-utils</c>) benutzen.
</note>

</body>
</section>
<section>
<title>Konfiguration der Dienste</title>
<body>

<p>
Da wir die Konfiguration von BlueZ abgeschlossen haben, ist es nun an der Zeit
die erforderlichen Dienste neuzustarten.
</p>

<pre caption="Die Bluetooth-Daemons starten">
# <i>/etc/init.d/bluetooth restart</i>
<comment>(Sie können dies auch zu einem anderem Runlevel hinzufügen, wenn Sie
möchten.)</comment>
# <i>rc-update add bluetooth default</i>
 * bluetooth added to runlevel default
 * rc-update complete.
</pre>

<p>
Stellen Sie sicher, dass die Bluetooth-Daemons korrekt gestartet sind. Wenn wir
sehen können, dass <c>hcid</c> und <c>sdpd</c> laufen, dann haben wir Bluetooth
richtig konfiguriert. Danach können wir prüfen, ob die Geräte nun UP sind und
mit den richtigen Einstellungen laufen.
</p>

<pre caption="Kontrollieren, ob die Bluetooth-Deamons korrekt gestartet sind">
<comment>(Sicherstellen, dass die Dienste laufen)</comment>
# <i>ps -ae | grep hcid</i>
26050 ?        00:00:00 hcid
# <i>ps -ae | grep sdpd</i>
26054 ?        00:00:00 sdpd

# <i>hciconfig -a</i>
hci0:   Type: USB
        BD Address: 00:0A:0B:0C:0D:0E ACL MTU: 192:8 SCO MTU: 64:8
        UP RUNNING PSCAN ISCAN
        RX bytes:125 acl:0 sco:0 events:17 errors:0
        TX bytes:565 acl:0 sco:0 commands:17 errors:0
        Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
        Link policy: RSWITCH HOLD SNIFF PARK
        Link mode: SLAVE ACCEPT
        Name: 'BlueZ at bluehat (0)'
        Class: 0x3e0100
        Service Classes: Networking, Rendering, Capturing, Object Transfer,
        Audio
        Device Class: Computer, Uncategorized
        HCI Ver: 1.1 (0x1) HCI Rev: 0x1e7 LMP Ver: 1.1 (0x1) LMP Subver: 0x1e7
        Manufacturer: Cambridge Silicon Radio (10)
</pre>

</body>
</section>
</chapter>

<chapter id="detect">
<title>Entfernte Geräte erkennen und zu ihnen verbinden</title>
<section>
<title>Bluetooth-Geräte in anderen Hosts</title>
<body>

<p>
An diesem Punkt sind wir bereit um Bluetooth-Geräte, die in anderen Maschinen
installiert sind, zu erkennen. Dies ist unabhängig vom Betriebssystem des Hosts.
Wir werden Gebrauch des Befehls <c>hcitool</c> machen.
</p>

<pre caption="Auf lokale Geräte kontrollieren">
# <i>hcitool dev</i>
Devices:
        hci0    00:01:02:03:04:05
</pre>

<pre caption="Entferne Geräte suchen">
# <i>hcitool scan</i>
Scanning ...
        00:0A:0B:0C:0D:0E       Grayhat
</pre>

<pre caption="Anfragen an entfernte Geräte stellen">
# <i>hcitool inq</i>
Inquiring ...
        00:0A:0B:0C:0D:0E       clock offset: 0x5579    class: 0x72010c
</pre>

<p>
Da wir nun die MAC-Adresse des entfernten Bluetooth-Geräts kennen, können
wir kontrollieren, ob wir sie korrekt gepaart haben.
</p>

<pre caption="l2ping starten">
# <i>l2ping 00:0A:0B:0C:0D:0E</i>
Ping: 00:0A:0B:0C:0D:0E from 00:01:02:03:04:05 (data size 20) ...
20 bytes from 00:0A:0B:0C:0D:0E id 200 time 69.85ms
20 bytes from 00:0A:0B:0C:0D:0E id 201 time 9.97ms
20 bytes from 00:0A:0B:0C:0D:0E id 202 time 56.86ms
20 bytes from 00:0A:0B:0C:0D:0E id 203 time 39.92ms
4 sent, 4 received, 0% loss
</pre>

</body>
</section>
<section>
<title>Radiofrequenzkommunikation (RFCOMM) einstellen</title>
<body>

<note>
Bitte beachten Sie, dass Radiofrequenzkommunikation optional ist.
</note>

<p>
Wir können eine Radiofrequenzkommunikation zu einem anderen Bluetooth-Gerät
herstellen, indem wir den <c>rfcomm</c> Befehl benutzen. Um die Sache für
Benutzer mit mehreren Geräten ein wenig zu erleichtern, ist es ratsam ein paar
Änderungen an der standardmäßigen rfcomm Konfigurationsdatei
<path>/etc/bluetooth/rfcomm.conf</path> vorzunehmen.
</p>

<p>
Das gesamte Segment der Konfiguration, welches bei <c>rfcomm0 {</c> startet und
bei <c>}</c> endet, ist die Konfiguration für das Gerät, welches eine Verbindung
an <path>/dev/rfcomm0</path> herstellen wird. In diesem Fall zeigen wir nur ein
Beispiel, nämlich rfcomm0. Sie können einfach weitere Einstellungen vornehmen.
</p>

<pre caption="/etc/bluetooth/rfcomm.conf bearbeiten">
<comment>(Es werden nur Änderungen, die benötigt werden, gezeigt)</comment>
rfcomm0 {
        # Automatically bind the device at startup
        <comment>(Erstellt das Device Node, /dev/rfcomm0, beim Starten des Systems)</comment>
        bind yes;

        # Bluetooth address of the device
        <comment>(Geben Sie die Adresse des Geräts, zu welchem Sie die Verbindung herstellen möchten, an)</comment>
        device 00:0A:0B:0C:0D:0E;

}
</pre>

<p>
Nachdem Sie RFCOMM konfiguriert haben, können Sie zu jedem Gerät verbinden.
Da wir die erforderlichen Einstellungen in
<path>/etc/bluetooth/rfcomm.conf</path> gemacht haben, benötigen wir nur den
Befehl, welcher unten gezeigt ist. Im Fall, dass Sie keine Änderungen an der
Konfiguration vorgenommen haben, ist die alternative Methode ebenfalls
aufgelistet.
</p>
<pre caption="Eine RFCOMM-Verbindung herstellen">
<comment>(Die 0 führt auf rfcomm0 in der Konfiguration zurück)</comment>
# <i>rfcomm connect 0 </i>
Connected /dev/rfcomm0 to 00:0A:0B:0C:0D:0E on channel 1
Press CTRL-C for hangup

<comment>(Wenn Sie /etc/bluetooth/rfcomm.conf nicht editiert haben)</comment>
# <i>rfcomm connect 0 00:0A:0B:0C:0D:0E 1</i>
Connected /dev/rfcomm0 to 00:0F:DE:69:50:24 on channel 1
Press CTRL-C for hangup
</pre>

<p>
Der erste Parameter nach dem Connect-Befehl ist das RFCOMM TTY Gerät, welches
genutzt wird (im Normallfall 0). Der zweite Parameter ist die MAC-Adresse des
entfernten Geräts. Der dritte Parameter ist optional und gibt den Channel, der
genutzt werden soll, an. Bitte beachten Sie, dass das entfernte Gerät auf
eingehende Verbindungen warten muss, damit Sie eine Verbindung zu diesem
herstellen können. Sie können die Kommunikation zu jedem Moment beenden, indem
Sie STRG+C drücken.
</p>

<pre caption="Auf eingehende RFCOMM-Verbindungen hören">
# <i>rfcomm listen 0 1</i>
Waiting for connection on channel 1
</pre>

<p>
Ähnlich wie der Verbindungsbefehl kann der "Listen"-Befehl zwei Parameter
empfangen. Der erste gibt das RFCOMM TTY Gerät an, in der Regel 0, welches zum
Annehmen einer Verbindung genutzt werden soll, während der zweite den Kanal,
der genutzt werden soll, spezifiziert.
</p>

<p>
Jedes Mal wenn Sie den <c>rfcomm</c> Befehl ausführen, können Sie ebenfalls
das physikalische Gerät, das Sie benutzen möchten, auswählen. Folgend ein
kleines Beispiel zu diesen beiden Befehlen.
</p>

<pre caption="RFCOMM-Verbindungen mit einem bestimmten physikalischem Gerät">
# <i>rfcomm -i hci0 listen 0 1</i>
Waiting for connection on channel 1
<comment>(Um auf ein bestimmtes Gerät zu hören) </comment>
# <i>rfcomm -i hci0 connect 0 00:0A:0B:0C:0D:0E 1</i>
<comment>(Um ein bestimmtes Gerät zum Verbinden zu benutzen)</comment>
</pre>

</body>
</section>
<section>
<title>Ein PAN-Netzwerk aufbauen</title>
<body>

<note>
Bitte beachten Sie, dass es optional ist, ein PAN-Netzwerk aufzubauen. Dieser
Teil beschreibt wie Sie einen Netzwerkzugangspunkt erstellen und zu diesem
verbinden, auch wenn das Aufsetzen eines Gruppen-Ad-Hoc-Netzwerks ähnlich
funktioniert.
</note>

<p>
Zu allererst brauchen wir das Modul <c>bnep</c> und müssen es laden.
Wahrscheinlich wollen wir, dass es bei jedem Start des Computers geladen wird.
</p>

<pre caption="Das Modul bnep laden">
# <i>modprobe bnep</i>
# <i>echo "bnep" &gt;&gt; /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<p>
Wir müssen den <c>pand</c> Deamon im Hostsystem starten, welcher das NAP bereit
stellen wird. Wir müssen spezifizieren, dass wir einen NAP-Dienst bereit stellen
und dass dieser Host der Master sein wird, so dass die anderen Hosts, die
Slaves, zu ihm verbinden können. Ein anderer möglicher Dienst ist GN, ein
Gruppen-Ad-Hoc-Netzwerk.
</p>

<pre caption="Den pand Daemon starten">
# <i>pand --listen --role NAP --master --autozap</i>
</pre>

<p>
Nachdem wir das erledigt haben, haben wir einen hörenden Host, so dass die
anderen Hosts nur noch zu diesem verbinden müssen.
</p>

<pre caption="Zum Netzwerkzugangspunkt verbinden">
# <i>pand --connect 00:0A:0B:0C:0D:0E --service NAP --autozap</i>
</pre>

<p>
Wenn alles glatt lief, können wir nun die IP-Adressen unserer Hosts einstellen.
</p>

<pre caption="bnep IP-Adressen-Konfiguration">
host0 #<i> ifconfig bnep0 192.168.2.1</i>
host1 #<i> ifconfig bnep0 192.168.2.2</i>

host0 #<i> ifconfig bnep0</i>
bnep0     Link encap:Ethernet  HWaddr 00:0A:0B:0C:0D:0E
          inet addr:192.168.2.1  Bcast:192.168.2.255  Mask:255.255.255.0
          inet6 addr: fe80::210:60ff:fea3:cb41/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:5 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:208 (208.0 b)  TX bytes:188 (188.0 b)

host1 #<i> ifconfig bnep0</i>
bnep0     Link encap:Ethernet  HWaddr 00:01:02:03:04:05
          inet addr:192.168.2.2  Bcast:192.168.2.255  Mask:255.255.255.0
          inet6 addr: fe80::210:60ff:fea2:dd2a/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:5 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:208 (208.0 b)  TX bytes:188 (188.0 b)
</pre>

<p>
Zum Schluss können wir einen simplen Test durchführen, um zu sehen, dass unser
Netzwerk korrekt läuft.
</p>

<pre caption="IP-Ping zwischen bnep-Schnittstellen">
host1 #<i> ping 192.168.2.1</i>
PING 192.168.2.1 (192.168.2.1) 56(84) bytes of data.
64 bytes from 192.168.2.1: icmp_seq=1 ttl=64 time=34.0 ms
64 bytes from 192.168.2.1: icmp_seq=2 ttl=64 time=37.3 ms

--- 192.168.2.1 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1000ms
rtt min/avg/max/mdev = 34.045/35.690/37.336/1.656 ms
</pre>

</body>
</section>
</chapter>

<chapter id="apps">
<title>Desktopapplikationen für Bluetooth</title>
<section>
<title>Einführung</title>
<body>

<p>
Wir haben einige wenige Bluetooth-Applikationen, die auf dem Desktop laufen.
Dieses Kapitel ist in 3 Teile geteilt, einen Teil für Gnome, einen für KDE und
einen für andere Applikationen.
</p>

</body>
</section>
<section>
<title>Für Gnome</title>
<body>

<p>
Wenn Sie ein Gnome-User sind, werden Sie höchst wahrscheinlich
<c>gnome-bluetooth</c> benutzen. Dies stellt die meisten
Standardfunktionalitäten zur Verfügung, wie Sie folgend erkennen können.
</p>

<ul>
  <li><c>gnome-bluetooth-manager</c>: Entfernte Bluetooth-Geräte verwalten.</li>
  <li><c>gnome-obex-send</c>: Dateien zu anderen Geräten senden.</li>
  <li><c>gnome-obex-server</c>: Dateien empfangen.</li>
</ul>

<pre caption="gnome-bluetooth installieren">
# <i>emerge gnome-bluetooth</i>
</pre>

<p>
Dies fügt Menüeinträge unter Applikationen &gt; Systemwerkzeuge hinzu, von wo
aus Sie einfach den Manager, Dateiübertragungen zwischen den Geräten usw.
starten können.
</p>

<p>
Um Dateien zu übertragen (der einfache Weg):
</p>

<ul>
  <li>
    Vom Telefon zum Computer - Senden Sie die Datei vom Telefon via Bluetooth
    zum Computer und es wird automatisch in ihrem <path>/home</path>
    Verzeichnis gespeichert.
  </li>
<!--FIXME : Doesn't work on Nautilus 2.10.x. Bug #103464 for details -->
<!--
  <li>
    From the Computer to the Phone - Fire up <c>nautilus</c> and select the
    file you want to send and right click on it. Select the Send via Bluetooth
    option and ask your phone to accept the file.
  </li>
-->
</ul>

<p>
<c>gnome-phone-manager</c> ist eine elegante Applikation, welche Sie benutzen
können, um Nachrichten von und zu Ihrem Telefon zu empfangen oder zu versenden.
Sie müssen Ihr Telefon nicht anfassen, da dies automatisch durch die
Applikation gehandhabt wird. Sie werden ebenfalls auf ihrem Bildschirm über
neue Nachrichten informiert, wenn dies in den Einstellungen aktiviert ist.
</p>

<pre caption="gnome-phone-manager installieren">
# <i>emerge gnome-phone-manager</i>
</pre>

</body>
</section>
<section>
<title>Für KDE</title>
<body>

<p>
KDE benutzt <c>kdebluetooth</c> und stellt mehr Dienstprogramme als sein
Gnome-Gegenstück zur Verfügung, wie sie folgend sehen können.
</p>

<ul>
  <li><c>kbluetoothd</c>: Bluetooth Meta Server.</li>
  <li><c>kbtsearch</c>: Bluetooth Gerät/Dienste Suche.</li>
  <li><c>khciconfig</c>: KDE Bluetooth Monitor.</li>
  <li><c>kioclient</c>: KIO Kommandozeilenclient.</li>
  <li><c>qobexclient</c>: Schweizer Taschenmesser für obex Tests/Entwicklung.
  </li>
  <li><c>kbtobexclient</c>: Eine KDE Bluetooth Framework Applikation.</li>
  <li><c>kioobex_start</c></li>
  <li><c>kbtserialchat</c></li>
  <li><c>kbemusedsrv</c>: KDE Bemused Server.</li>
  <li><c>kbtobexsrv</c>: KDE OBEX Push Server für Bluetooth.</li>
  <li><c>kbluepin</c>: Eine KDE KPart Applikation.</li>
  <li>
    <c>auth-helper</c>: Eine Hilfssoftware für kbtobexsrv, welche eine
    Authentifikationsanfrage für einen angegebenen ACL-Link sendet.
  </li>
</ul>

<pre caption="kdebluetooth installieren">
# <i>emerge kdebluetooth</i>
</pre>

</body>
</section>
<section>
<title>Andere interessante Applikationen</title>
<body>

<ul>
  <li>
    <c>app-mobilephone/obexftp</c>: Dateitransfer über OBEX-Mobiltelefone
  </li>
  <li>
    <c>app-mobilephone/bemused</c>: Bemused ist ein System, welches Ihnen
    erlaubt, Ihre Musiksammlung auf Ihrem Mobiltelefon via Bluetooth
    zu kontrollieren.
  </li>
  <li>
    <c>app-pda/multisync</c>:
    Multisync erlaubt Ihnen, Ihre Kontakte, Ihren Kaldnereinträge und Notizen
    von Ihrem Mobiltelefon mit Ihrem Computer über eine Bluetooth-Verbindung
    zu synchroniniseren. Es beinhaltet Features, wie z.B. die Erstellung von
    Backups dieser Informationen und die Wiederherstellung solcher und die
    Synchronisierung mit dem Email-Client Evolution. Sie benötigen das
    USE-Flag <c>irmc</c>, um sicherzustellen, dass <c>multisync</c> Bluetooth
    unterstützt.
</li>
  <li>
    <c>net-wireless/opd</c> und <c>net-wireless/ussp-push</c> sind
    Kommandozeilentools (Server und Client), die zum Versenden von Dateien zu
    Ihrem Mobiltelefon genutzt werden können.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Danksagungen</title>
<section>
<body>

<p>
Besonderen Dank an <mail link="marcel@holtmann.org">Marcel Holtmann</mail>
für seine Zeit und seinen Einsatz für die Bluetooth-Entwicklung und für
die Durchsicht dieses Leitfadens. Außerdem großen Dank an
<mail link="puggy@gentoo.org">Douglas Russell</mail> für die Durchführung
spezieller Hardwaretests und für die Verbesserung dieses Leitfadens.
</p>

</body>
</section>
</chapter>
</guide>
