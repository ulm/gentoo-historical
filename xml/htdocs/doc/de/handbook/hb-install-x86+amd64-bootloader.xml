<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-install-x86+amd64-bootloader.xml,v 1.9 2008/06/30 19:34:06 grahl Exp $ -->

<sections>

<version>6.1</version>
<date>2008-05-02</date>

<section>
<title>Eine Wahl treffen</title>
<subsection>
<title>Einleitung</title>
<body>

<p>
Nun, da Ihr Kernel konfiguriert und kompiliert ist und die notwendigen
Systemkonfigurationsdateien richtig konfiguriert sind, ist es Zeit ein Programm
zu installieren, dass Ihren Kernel lädt wenn Sie Ihr System starten. Solch ein
Programm nennt man einen <e>Bootloader</e>.
</p>

</body>
<body test="contains('AMD64 x86', func:keyval('arch'))">
<p>
Für <keyval id="arch"/> bietet Gentoo Linux <uri
link="#grub">GRUB</uri> und <uri link="#lilo">LILO</uri>.
</p>

<warn test="func:keyval('arch')='AMD64'">
Die Verwendung von LILO auf der AMD64-Architektur wird nicht empfohlen.
</warn>

</body>
<body>
<p>
Bevor Sie jedoch einen der beiden Bootloader installieren, informieren wir Sie
darüber, wie der Framebuffer (natürlich nur wenn Sie diesen einrichten wollen)
eingerichtet wird. Mit Framebuffer können Sie die Linux-Kommandozeile mit
(begrenzten) grafischen Erweiterungen (wie die netten Bootsplash-Bilder, die
Gentoo liefert) nutzen.
</p>

</body>
</subsection>
<subsection>
<title>Optional: Framebuffer</title>
<body>

<p>
<e>Wenn</e> Sie Ihren Kernel mit Framebufferunterstützung konfiguriert haben
(oder die <c>genkernel</c> Standardkonfiguration nutzen),
müssen Sie ein <c>vga</c> und/oder eine <c>video</c> Anweisung zu Ihrer
Bootloaderkonfigurationsdatei hinzufügen, wenn sie Framebuffer benötigen.
</p>

<p>
Zuerst müssen Sie wissen, welchen Typ von Framebuffer-Gerät Sie verwenden. Wenn
Sie einen von Gentoo gepatchten Kernel verwenden (wie die <c>gentoo-sources</c>)
hatten Sie die Möglichkeit <c>uvesafb</c> als <e>VESA driver type</e>. Wenn dies
der Fall ist benutzen Sie <c>uvesafb</c> und benötigen die <c>vga</c> Anweisung
<e>nicht</e>. Andernfalls benutzen Sie den <c>vesafb</c> Treiber und
<e>müssen</e> die <c>vga</c> Anweisung setzen.
</p>

<p>
Die <c>vga</c> Anweisung kontrolliert die Größe und die Farbtiefe des
Framebuffers für <c>vesafb</c>. Wie in
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> (wird mit einem
Kernelquellpaket installiert) erwähnt, müssen Sie dem Kernel die VESA-Nummer
passend zur gewünschten Auflösung und Farbtiefe mitgeben.
</p>

<p>
Die folgende Tabelle listet die verfügbaren Auflösungen und Farbtiefen auf und
zeigt die dazu die Werte, welche an die <c>vga</c> Anweisung übergeben werden
müssen.
</p>

<table>
<tr>
  <ti></ti>
  <th>640x480</th>
  <th>800x600</th>
  <th>1024x768</th>
  <th>1280x1024</th>
</tr>
<tr>
  <th>256</th>
  <ti>0x301</ti>
  <ti>0x303</ti>
  <ti>0x305</ti>
  <ti>0x307</ti>
</tr>
<tr>
  <th>32k</th>
  <ti>0x310</ti>
  <ti>0x313</ti>
  <ti>0x316</ti>
  <ti>0x319</ti>
</tr>
<tr>
  <th>64k</th>
  <ti>0x311</ti>
  <ti>0x314</ti>
  <ti>0x317</ti>
  <ti>0x31A</ti>
</tr>
<tr>
  <th>16M</th>
  <ti>0x312</ti>
  <ti>0x315</ti>
  <ti>0x318</ti>
  <ti>0x31B</ti>
</tr>
</table>

<p>
Die <c>video</c> Anweisung kontrolliert Framebuffer-Display-Optionen. Es
benötigt den Framebuffer-Treiber gefolgt von den Kontrollanweisung die Sie
aktivieren möchten. Alle Variablen sind in
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> gelistet, wir möchten
Sie daher nur über die häufigsten informieren:
</p>

<table>
<tr>
  <th>Option</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    Davon ausgehend, dass die Grafik ihren Speicher umbrechen kann (das heißt
    am Anfang fortfahren, wenn das Ende erreicht wurde)
  </ti>
</tr>
<tr>
  <ti>mtrr:<c>n</c></ti>
  <ti>
    Einrichten der MTRR-Register. <c>n</c> kann folgendes sein:<br/>
    0 - deaktiviert<br/>
    1 - uncachable<br/>
    2 - write-back<br/>
    3 - write-combining<br/>
    4 - write-through
  </ti>
</tr>
<tr>
  <ti><c>mode</c></ti>
  <ti>
    (nur <c>uvesafb</c>)<br/>
    Setzen der Auflösung, Farbtiefe und Wiederholungsrate. Zum Beispiel ist
    <c>1024x768-32@85</c> für eine Auflösung von 1024x768, 32-Bit Farbtiefe und
    eine Wiederholungsrate von 85 Hz.
  </ti>
</tr>
</table>

<p>
Das Ergebnis dieser beiden Anweisungen könnte etwas wie <c>vga=0x318
video=vesafb:mtrr:3,ywrap</c> oder
<c>video=uvesafb:mtrr:3,ywrap,1024x768-32@85</c> sein. Schreiben Sie sich diese
Einstellung auf, Sie werden sie bald benötigen!
</p>

<p test="func:keyval('arch')='IA64'">
Jetzt sollten Sie den <uri link="#elilo">elilo Bootloader</uri> installieren.
</p>

<p test="not(func:keyval('arch')='IA64')">
Fahren Sie nun mit der Installation von <uri link="#grub">GRUB</uri> <e>oder</e>
<uri link="#lilo">Lilo</uri> fort.
</p>

</body>
</subsection>
</section>
<section id="grub" test="contains('AMD64 x86',func:keyval('arch'))">
<title>Standard: Die Benutzung von GRUB
</title>
<subsection>
<title>Das Verstehen von GRUBs Terminologie</title>
<body>

<p>
Der wichtigste Teil beim Verstehen von GRUB ist, sich mit der Art vertraut zu
machen, in der GRUB Festplatten und Partitionen benennt. Ihre Linux-Partition
<path>/dev/sda1</path> wird höchstwahrscheinlich <path>(hd0,0)</path> unter GRUB
genannt. Beachten Sie die Klammern um das <path>hd0,0</path>, denn diese sind
Pflicht.
</p>

<p>
Festplatten zählen von Null anstatt von "a" und Partitionen starten bei Null
anstatt bei Eins. Beachten Sie bitte auch, dass mit den hd-Geräten nur
Festplatten gezählt werden, keine ATAPI-IDE Geräte wie CD-ROM-Laufwerke oder
-Brenner. Dasselbe Schema wird auch bei SCSI-Laufwerken verwendet.
(Normalerweise erhalten sie höhere Nummern als IDE-Laufwerke, außer wenn das
BIOS konfiguriert ist von SCSI zu booten.) Wenn Sie dem BIOS angeben von einer
anderen Festplatte zu booten (zum Beispiel Primary Slave), ist <e>diese</e>
Festplatte für grub <path>hd0</path>.
</p>

<p>
Vorausgesetzt Sie haben eine Festplatte an <path>/dev/sda</path> und zwei
weitere an <path>/dev/sdb</path> und <path>/dev/sdc</path> wird
<path>/dev/sdb7</path> übersetzt in <path>(hd1,6)</path>. Es mag schwierig
klingen und das ist es in der Tat auch, aber wie wir werden sehen, bietet GRUB
einen Tab-Komplettierungsmechanismus an, der hilfreich ist für diejenigen von
Ihnen die viele Festplatten und Partitionen haben und sich ein wenig verloren
fühlen mit dem Nummerierungssystem von GRUB.
</p>

<p>
Nachdem man dafür jetzt ein Gefühl erlangt hat, ist es nun Zeit GRUB zu
installieren.
</p>

</body>
</subsection>
<subsection>
<title>Installieren von GRUB</title>
<body>

<p>
Um GRUB zu installieren, führen Sie ein emerge aus.
</p>

<impo test="func:keyval('arch')='AMD64'">
Wenn Sie ein nicht-Multilib <uri
link="?part=1&amp;chap=6#doc_chap2">Profil</uri> verwenden sollten Sie
emerge grub <b>nicht</b> ausführen, sondern stattdessen <c>grub-static</c> mit
emerge installieren.
</impo>

<pre caption = "Installieren von GRUB">
# <i>emerge grub</i>
</pre>

<p>
Obwohl GRUB nun installiert ist, müssen Sie trotzdem noch eine
Konfigurationsdatei dafür schreiben und GRUB im MBR platzieren, so dass
GRUB automatisch Ihren neu erstellten Kernel bootet. Erstellen Sie
<path>/boot/grub/grub.conf</path> mit <c>nano</c> (oder wenn gewünscht einem
anderen Editor):
</p>

<pre caption = "Erstellen von /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Nun wollen wir eine <path>grub.conf</path> schreiben. Folgend finden Sie zwei
mögliche <path>grub.conf</path> für das Partitionierungsbeispiel, das wir in
diesem Leitfaden verwendet haben. Wir werden nur die erste
<path>grub.conf</path> ausführlich erläutern. Stellen Sie sicher, dass Sie den
Dateinamen <e>Ihres</e> Kernel Image und, wenn
zutreffend, den Dateinamen <e>Ihrer</e> initrd benutzen.
</p>

<ul>
  <li>
    Die erste <path>grub.conf</path> ist für Leute, die nicht <c>genkernel</c>
    benutzt haben
  </li>
  <li>
    Die zweite <path>grub.conf</path> ist für Leute, die <c>genkernel</c>
    benutzt haben
  </li>
</ul>

<note>
Wenn Ihr Root-Dateisystem JFS ist, <e>müssen</e> Sie "ro" zu dem Kernelaufruf
hinzufügen, da JFS sein Protokolldatei liest, bevor es ein read-write mounten
zulässt.
</note>

<pre caption = "grub.conf für Nicht-genkernel Benutzer">
<comment># Welcher Eintrag standardmäßig gebootet werden soll. 0 ist der Erste, 1 ist der Zweite usw.</comment>
default 0
<comment># Wie viele Sekunden gewartet werden soll, bevor der Standardeintrag gebootet wird.</comment>
timeout 30
<comment># Eine nettes, fettes Hintergrundbild um die ganze Sache ein wenig zu würzen :)
# Auskommentieren, wenn Sie keine Grafikkarte installiert haben.</comment>
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title Gentoo Linux <keyval id="kernel-version"/>
<comment># Partition in der das Kernel-Image (oder das Betriebssystem) vorhanden ist</comment>
root (hd0,0)
kernel /boot/<keyval id="kernel-name"/> root=/dev/sda3

title Gentoo Linux <keyval id="kernel-version"/> (Rescue)
<comment># Partition in der das Kernel-Image (oder das Betriebssystem) vorhanden ist</comment>
root (hd0,0)
kernel /boot/<keyval id="kernel-name"/> root=/dev/sda3 init=/bin/bb

<comment># Die nächsten vier Zeilen werden nur benötigt wenn Sie einen Dualboot mit einem Windows System einrichten wollen.</comment>
<comment># Hier in diesem Fall liegt Windows auf /dev/sda6.</comment>
title Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<pre caption = "grub.conf für genkernel Benutzer">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title Gentoo Linux <keyval id="kernel-version"/>
root (hd0,0)
kernel /boot/<keyval id="genkernel-name"/> root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/sda3 udev
initrd /boot/<keyval id="genkernel-initrd"/>

<comment># Nur wenn Sie einen Dual-Boot einrichten möchten</comment>
title Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<note>
Das <c>udev</c> am Ende der Kernel Zeile ist als Workaround zu einem Bug in
einigen genkernel Versionen nötig, <e>wenn</e> Sie udev benutzen (was Standard
ist).
</note>

<p>
Wenn Sie ein anderes Partitionierungschema verwenden und/oder Kernel-Image,
passen Sie Ihre Konfiguration entsprechend an. Stellen Sie jedoch sicher, dass
alles was einem GRUB-Device folgt (wie z.B. <path>(hd0,0)</path>) relativ zum
Mountpoint ist, nicht dem Root. Mit anderen Worten,
<path>(hd0,0)/grub/splash.xpm.gz</path> ist in Wirklichkeit
<path>/boot/grub/splash.xpm.gz</path> denn <path>(hd0,0)</path> ist
<path>/boot</path>.
</p>

<p>
Außerdem wird, wenn Sie ein anderes Partitionsschema verwendet haben und
<path>/boot</path> nicht auf eine separate Partition gelegt haben, das
<path>/boot</path> Präfix wirklich <e>benötigt</e>. Wenn Sie unserem
vorgeschlagenen Partitionierungsplan gefolgt sind, wird das <path>/boot</path>
Präfix nicht benötigt, aber ein <path>boot</path> Symlink sorgt dafür, dass es
funktioniert. Kurz gesagt, das obige Beispiel sollte funktionieren, egal ob Sie
eine separate <path>/boot</path> Partition haben oder nicht.
</p>

<p>
Wenn Sie noch zusätzliche Optionen an den Kernel übergeben müssen, fügen Sie
diese einfach zum Ende des Kernelbefehls hinzu. Eine Option übermitteln wir
schon (<c>root=/dev/sda3</c> oder <c>real_root=/dev/sda3</c>), aber Sie können
auch weitere übermittlen, wie die vorhin erwähnte <c>video</c> und/oder
<c>vga</c> Anweisung für Framebuffer.
</p>

<p>
Wenn Sie einen 2.6.7 Kernel oder aktueller benutzen und Ihre Festplatte
gejumpert haben, da Ihr BIOS nicht mit großen Festplatten umgehen kann, müssen
Sie <c>sda=stroke</c> anhängen.
</p>

<p>
<c>genkernel</c>-Benutzer sollten wissen, dass Ihr Kernel die selben
Bootoptionen benutzt wie der auf der Installations-CD. Zum Beispiel,
wenn Sie SCSI-Geräte haben, sollten Sie <c>doscsi</c> als Kerneloption
hinzufügen.
</p>

<p>
Speichern Sie nun die <path>grub.conf</path> Datei und verlassen Sie den
Editor. Sie müssen GRUB noch in den MBR (Master Boot Record) schreiben, so dass
GRUB automatisch beim Systemstart ausgeführt wird.
</p>

<p>
Die GRUB Entwickler empfehlen die Nutzung von <c>grub-install</c>. Wenn
<c>grub-install</c> fehlschlägt haben Sie immer noch die Option GRUB händisch zu
installieren.
</p>

<p>
Fahren Sie nun mit <uri link="#grub-install-auto">Standard: Installieren von
GRUB mit grub-install</uri> oder <uri link="#grub-install-manual">Alternativ:
GRUB händisch installieren</uri> fort.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Standard: Installieren von GRUB mit grub-install</title>
<body>

<p>
Um GRUB zu installieren führen sie den <c>grub-install</c> Befehl aus.
<c>grub-install</c> wird jedoch nicht direkt funktionieren, da wir uns
innerhalb einer chroot-Umgebung befinden. Wir müssen <path>/etc/mtab</path>
erstellen, welche alle gemounteten Dateisysteme auflistet. Glücklicherweise
gibt es eine einfach Methode dafür: Kopieren Sie einfach
<path>/proc/mounts</path> nach <path>/etc/mtab</path>; ausgenommen der
<c>rootfs</c> Zeile, wenn Sie keine separate Boot-Partition erstellt haben.
Der folgende Befehl funktioniert in beiden Fällen:
</p>

<pre caption="/etc/mtab erstellen">
# <i>grep -v rootfs /proc/mounts &gt; /etc/mtab</i>
</pre>

<p>
Jetzt können wir GRUB durch <c>grub-install</c> installieren:
</p>

<pre caption="grub-install ausführen">
# <i>grub-install --no-floppy /dev/sda</i>
</pre>

<p>
Wenn Sie weitere Fragen GRUB betreffend haben, konsultieren Sie die <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> oder das
<uri link="http://www.gnu.org/software/grub/manual/">GRUB Handbuch</uri>.
</p>

<p>
Fahren Sie nun mit <uri link="#reboot">Neustart des Systems</uri> fort.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Alternativ: GRUB manuell installieren</title>
<body>

<p>
Um mit der Konfiguration von GRUB zu beginnen, tippen Sie <c>grub</c>. Ihnen
wird die <path>grub&gt;</path> GRUB-Kommdandozeile präsentiert. Nun müssen Sie
die richtigen Befehle eintippen um den GRUB Boot Record auf Ihrer Festplatte zu
installieren.
</p>

<pre caption = "Starten der GRUB-Shell">
# <i>grub --no-floppy</i>
</pre>

<note>
Wenn das System kein Diskettenlaufwerk hat, fügen Sie die <c>--no-floppy</c>
Option an das obige Kommando an, damit grub nicht nach nicht-existierenden
Diskettenlaufwerken sucht.
</note>

<p>
In der Beispielskonfiguration wollen wir GRUB so installieren, dass es alle
Informationen von der Boot-Partition <path><keyval id="/boot"/></path> liest
und den GRUB Boot-Record auf dem MBR (Master Boot Record) der Festplatte
installiert, damit das Erste was wir sehen, wenn wir den Computer einschalten
die GRUB Eingabeaufforderung ist. Natürlich müssen Sie die Befehle entsprechend
ändern, wenn Sie von der Beispielkonfiguration während der Installation
abgewichen sind.
</p>

<p>
Der Tab-Komplettierungsmechanismus von GRUB kann innerhalb von GRUB benutzt
werden. Zum Beispiel, wenn Sie "<c>root (</c>" eintippen, gefolgt von einem
TAB, wird Ihnen eine Liste von Geräten gegeben (solche wie <path>hd0</path>).
Wenn Sie "<c>root (hd0,</c>" eintippen, gefolgt von einem TAB, wird Ihnen eine
Liste von verfügbaren Partitionen angezeigt, unter denen Sie auswählen können
(solche wie <path>hd0,0</path>).
</p>

<p>
Durch Benutzung der Tab-Komplettierung sollte das Einrichten von GRUB nicht
allzu schwer sein. Also weiter in der Konfiguration von GRUB!
</p>

<pre caption = "Installieren von GRUB im MBR">
grub&gt; <i>root (hd0,0)</i>    <comment>(Angabe wo sich Ihre /boot Partition befindet)</comment>
grub&gt; <i>setup (hd0)</i>     <comment>(Installiere GRUB im MBR)</comment>
grub&gt; <i>quit</i>            <comment>(Verlasse die GRUB Shell)</comment>
</pre>

<note>
Wenn Sie GRUB lieber in einer bestimmten Partition anstatt des MBR installieren
wollen, müssen Sie das <c>setup</c> so verändern, dass es auf die richtige
Partition verweist. Zum Beispiel, wenn Sie GRUB in <path>/dev/sda3</path>
installieren wollen, dann wird der Befehl zu <c>setup (hd0,2)</c>. Diese Option
wird in der Regel nur von wenigen Benutzern genutzt.
</note>

<p>
Wenn Sie weitere Fragen GRUB betreffend haben, konsultieren Sie die <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> oder das
<uri link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

<p>
Fahren Sie nun mit <uri link="#reboot">Neustart des Systems</uri> fort.
</p>

</body>
</subsection>
</section>
<section id="lilo" test="contains('AMD64 x86', func:keyval('arch'))">
<title>Alternativ: Benutzung von LILO</title>
<subsection>
<title>Installieren von LILO</title>
<body>

<warn test="func:keyval('arch')='AMD64'">
Die Verwendung von LILO auf der AMD64-Architektur wird nicht empfohlen.
</warn>

<p>
LILO, der LInuxLOader, ist das bewährte und wahre Arbeitstier der Linux
Bootloader. Jedoch hat es eine Fähigkeiten nicht die GRUB hat (was auch der
Grund dafür ist, dass GRUB momentan an Popularität gewinnt). Der Grund warum
LILO noch benutzt wird ist, dass GRUB auf einigen System nicht funktioniert und
LILO es tut. Natürlich gibt es auch den Grund, dass einige Leute mit LILO
bereits vertraut sind und es daher behalten wollen. In jedem Fall: Gentoo
unterstützt beide und anscheinend haben Sie sich für LILO entschieden.
</p>

<p>Installieren von LILO ist ein Klacks, benutzen Sie einfach <c>emerge</c>.</p>

<pre caption="Installieren von LILO">
# <i>emerge lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Konfigurieren von LILO</title>
<body>

<p>
Um LILO zu konfigurieren, müssen Sie <path>/etc/lilo.conf</path> erstellen.
Starten Sie Ihren Lieblingseditor (in diesem Handbuch benutzen wir <c>nano</c>)
und erstellen die Datei.
</p>

<pre caption="Erstellen von /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Vor einigen Abschnitten baten wir Sie, sich den Namen des Kernel-Images zu
merken, welches Sie erstellt haben. In der folgenden <path>lilo.conf</path>
Beispielsdatei nehmen wir an, dass der Imagename
<path>kernel-2.6.11-gentoo-r3</path> ist. Wir benutzen zudem das
Beispielpartitionsschema in diesem Beispiel, es gibt zwei verschiedene Teile:
</p>

<ul>
  <li>
    Einen für diejenigen, die <c>genkernel</c> nicht benutzt haben um den Kernel
    zu bauen
  </li>
  <li>
    Einen für diejenigen, die <c>genkernel</c> zum bauen des Kernel benutzt
    haben.
  </li>
</ul>

<p>
Stellen Sie sicher, dass Sie den Dateinamen <e>Ihres</e> Kernel-Images und, wenn
zutreffend, den Dateinamen <e>Ihrer</e> initrd benutzen.
</p>

<note>
Wenn Ihr Root-Dateisystem JFS ist, <e>müssen</e> Sie "ro" zu dem Kernelaufruf
hinzufügen, da JFS sein Logfile liest, bevor es ein read-write Mounten zulässt.
</note>

<pre caption="Beispiel /etc/lilo.conf">
boot=/dev/sda             <comment># Installieren von LILO im MBR</comment>
prompt                    <comment># Gib dem Benutzer die Möglichkeit eine andere Sektion auszuwählen</comment>
timeout=50                <comment># Warte 5 (fünf) Sekunden bevor die Standardsektion gebootet wird</comment>
default=gentoo            <comment># Wenn das Timeout verstrichen ist, dann boote die "gentoo" Sektion</comment>

<comment># Nur für Nicht-genkernel Benutzer</comment>
image=/boot/<keyval id="kernel-name"/>
  label=gentoo            <comment># Der Name den wir der Sektion geben</comment>
  read-only               <comment># Starte mit einem nur-lesen Root. Nicht ändern!</comment>
  root=/dev/sda3          <comment># Ort des Root-Dateisystems</comment>

image=/boot/<keyval id="kernel-name"/>
  label=gentoo.rescue     <comment># Der Name den wir der Sektion geben</comment>
  read-only               <comment># Starte mit einem nur-lesen Root. Nicht ändern!</comment>
  root=/dev/sda3          <comment># Ort des Root-Dateisystems</comment>
  append="init=/bin/bb"   <comment># Starten der statischen Gentoo-Rescue-Shell</comment>

<comment># Für genkernel Benutzer</comment>
image=/boot/<keyval id="genkernel-name"/>
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc ramdisk=8192 real_root=/dev/sda3 udev"
  initrd=/boot/<keyval id="genkernel-initrd"/>
<comment># Die nächsten zwei Zeilen werden nur benötigt, wenn Sie Dualboot mit einem Windowssystem einrichten wollen.</comment>
<comment># In diesem Fall liegt Windows auf /dev/sda6.</comment>
other=/dev/sda6
  label=windows
</pre>

<note>
Das <c>udev</c> am Ende der Kernel Zeile ist als Workaround zu einem Bug in
einigen genkernel Versionen nötig, <e>wenn</e> Sie udev benutzen (was Standard
ist).
</note>

<note>
Wenn Sie ein anderes Partitionierungsschema verwenden, passen Sie die
Konfiguration entsprechend an.
</note>

<p>
Wenn Sie weitere Optionen an den Kernel übermitteln müssen, fügen Sie eine
<c>append</c> Anweisung zu dem Abschnitt hinzu. Als Beispiel fügen wir die
<c>video</c> Anweisung hinzu um Framebuffer-Unterstützung zu aktivieren:
</p>

<pre caption="Benutzung von append um Kerneloptionen hinzuzufügen">
image=/boot/<keyval id="kernel-name"/>
  label=gentoo
  read-only
  root=/dev/sda3
  <i>append="video=vesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
Wenn Sie einen 2.6.7, oder aktuelleren, Kernel benutzen und Ihre Festplatte
gejumpert haben, da Ihr BIOS nicht mit großen Festplatten umgehen kann, müssen
Sie <c>sda=stroke</c> anhängen. Ersetzen Sie sda durch das Gerät welches diese
Option benötigt.
</p>

<p>
<c>Genkernel</c>-Benutzer sollten wissen, dass Ihr Kernel dieselben
Bootoptionen benutzt wie der auf der Installations-CD. Zum Beispiel, wenn Sie
SCSI Geräte haben, sollten Sie <c>doscsi</c> als Kerneloption hinzufügen
</p>

<p>
Speichern Sie nun die Datei und verlassen Sie den Editor. Zum Schluss müssen
Sie <c>/sbin/lilo</c> ausführen, damit LILO die <path>/etc/lilo.conf</path> auf
Ihr System anwenden kann (also sich selbst auf der Platte installiert). Behalten
Sie im Hinterkopf, dass Sie <c>/sbin/lilo</c> nach jeder Installation eines
neuen Kernel oder Änderung des Menü ausführen müssen.
</p>

<pre caption="Fertigstellen der LILO-Installation">
# <i>/sbin/lilo</i>
</pre>

<p>
Wenn Sie weitere Fragen bezüglich Lilo haben, lesen Sie bitte dessen <uri
link="http://en.wikipedia.org/wiki/LILO_(boot_loader)">Wikipedia-Seite</uri>.
</p>

<p>
Fahren Sie nun mit <uri link="#reboot">Neustart des Systems</uri> fort.
</p>

</body>
</subsection>
</section>
<section id="elilo" test="func:keyval('arch')='IA64'">
<title>Standard: Installation von elilo</title>
<body>

<p>
Auf der IA64-Architektur wird der Bootloader elilo genannt. Sie müssen ihn unter
Umständen auf Ihrem Rechner erst emergen.
</p>

<pre caption="Installation von elilo">
# <i>emerge elilo</i>
</pre>

<p>
Sie finden die Konfigurationsdatei in <path>/etc/elilo.conf</path> und eine
Beispieldatei im typischen Dokumentationsverzeichnis
<path>/usr/share/doc/elilo-&lt;ver&gt;/</path>. Hier ist eine weitere
Beispielkonfiguration:
</p>

<pre caption="/etc/elilo.conf Beispiel">
boot=/dev/sda1
delay=30
timeout=50
default=Gentoo
append="console=ttyS0,9600"
prompt

image=/vmlinuz
        label=Gentoo
        root=/dev/sda2
        read-only

image=/vmlinuz.old
        label=Gentoo.old
        root=/dev/sda2
        read-only
</pre>

<p>
Die Zeile <c>boot</c> teilt elilo den Ort der Boot-Partition mir (in diesem Fall
<path>/dev/sda1</path>). Die Zeile <c>delay</c> setzt die Anzahl von
Zehntelsekunden, bevor automatisch, im nicht-interaktiven Modus, der Standard
gebootet wird. Die Zeile <c>timeout</c> ist wie die Delay-Zeile, nur für den
interaktiven Modus. Die Zeile <c>default</c> setzt den Standardkerneleintrag
(welcher weiter unten definiert ist). Die Zeile <c>append</c> fügt zusätzliche
Optionen zur Kernelkommandozeile hinzu. Das <c>prompt</c> setzt das
Standardverhalten von elilo auf interaktiv.
</p>

<p>
Die Abschnitte, welche mit <c>image</c> beginnen, geben verschiedene bootbare
Images an. Jedes Image hat eine informatives <c>label</c>, ein <c>root</c>
Dateisystem und wird das root-Dateisystem nur als <c>read-only</c> mounten
(nur-lesen).
</p>

<p>
Wenn die Konfiguration abgeschlossen ist führen Sie einfach
<c>elilo --efiboot</c> aus. Die <c>--efiboot</c> Option fügt einen Menüeintrag
für Gentoo Linux zum EFI-Bootmanager hinzu.
</p>

<pre caption="Die elilo-Konfiguration anwenden">
# <i>elilo --efiboot</i>
</pre>

<p>
Fahren Sie jetzt mit dem <uri link="#reboot">Neustart des Systems</uri> fort.
</p>

</body>
</section>
<section id="reboot">
<title>Neustart des Systems</title>
<subsection>
<body>

<p>
Verlassen Sie die chroot-Umgebung und unmounten Sie alle gemounteten
Partitionen. Danach tippen Sie den magischen Befehl ein, auf das Sie solange
gewartet haben: <c>reboot</c>.
</p>

<pre caption="Ausbinden aller Partitionen und Neustart" test="func:keyval('arch')='IA64'">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/sys /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<pre caption="Ausbinden aller Partitionen und Neustart" test="not(func:keyval('arch')='IA64')">>
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Vergessen Sie nicht die bootbare CD aus dem Laufwerk zu nehmen, sonst wird diese
anstatt Ihres neuen Gentoo Systems gestartet.
</p>

<p test="func:keyval('arch')='IA64'">
Wenn Sie neustarten, sollten Sie eine neue Gentoo Linux Menüoption im
EFI-Bootmanager sehen, welche Gentoo starten wird.
</p>

<p>
Nachdem Sie in die neue Gentoo Installation gebootet haben schließen Sie die
Installation mit <uri link="?part=1&amp;chap=11">Abschließen der Gentoo
Installation</uri> ab.
</p>

</body>
</subsection>
</section>
</sections>
