<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- English CVS Version: 1.15 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-install-mips-kernel.xml,v 1.7 2005/06/08 17:07:07 dertobi123 Exp $ -->

<sections>

<version>1.11</version>
<date>2005-04-16</date>

<section>
<title>Setzen der Zeitzone des Systems</title>
<body>

<p>
Zuerst müssen Sie dem System sagen, in welcher Zeitzone es sich befindet. Dazu
suchen Sie sich unter <path>/usr/share/zoneinfo</path> die entsprechende
Zeitzone aus und verlinken sie mit <c>ln</c> nach <path>/etc/localtime</path>:
</p>

<pre caption="Setzen der Zeitzone auf GMT">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Beispiel: GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installieren der Quellen</title>
<subsection>
<title>Auswählen eines Kernels</title>
<body>

<p>
Der Kern um den herum alle Distributionen gebaut sind ist der Linux Kernel. Es
ist die Ebene zwischen den Benutzerprogrammen und der Systemhardware. Gentoo
bietet seinen Benutzern verschiedene mögliche Kernelquellen. Eine komplette
Liste mit Beschreibungen finden Sie im <uri link="http://www.gentoo.org/doc/de/gentoo-kernel.xml">
Gentoo Kernel Guide</uri>.
</p>

<p>
Bei MIPS basierten Systemen können Sie zwischen den <c>mips-sources</c>
(Standard Kernel Sourcen für die MIPS Architektur) und den
<c>mips-prepatch-sources</c> (Prerelease Kernel Tree) wählen.
</p>

<p>
Wählen Sie Ihre Kernelquelle aus und installieren Sie diese mit <c>emerge</c>.
</p>

<note>
Es werden spezielle Patches benötigt um einen Kernel auf Cobalt Servern zum 
Laufen zu bringen. Das <c>cobalt</c> USE Flag muss gesetzt sein, damit die 
notwendigen Patches geholt und angewandt werden.
</note>

<pre caption="Installieren einer Kernelquelle">
<comment>(Bei SGI Maschinen)</comment>
# <i>emerge mips-sources</i>

<comment>(Bei Cobalt Maschinen)</comment>
# <i>mkdir -p /etc/portage</i>
# <i>echo "sys-kernel/mips-sources cobalt" &gt;&gt; /etc/portage/package.use</i>
# <i>emerge mips-sources</i>
</pre>

<p>
Wenn Sie einen Blick in <path>/usr/src</path> werfen, sollten Sie einen Symlink
sehen, genannt <path>linux</path>, der auf Ihre Kernelquelle verweist.
</p>

<pre caption="Anzeigen des Kernelquellen Symlinks">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt;linux-2.4.24
</pre>

<p>
Wenn das nicht der Fall ist (also der Symlink auf eine andere Kernelquelle
verweist) ändern Sie den Symlink bevor sie weitermachen:
</p>

<pre caption="Ändern des Kernelquellen Symlinks">
# <i>rm /usr/src/linux &amp;&amp; ln -s /usr/src/linux-2.4.24 /usr/src/linux</i>
</pre>

<p>
Nun ist es Zeit Ihre Kernelquelle zu konfigurieren und zu kompilieren.
</p>

</body>
</subsection>
</section>
<section>
  <title>Kompilierung &amp; Installation des Kernels</title>
<subsection>
<title>Einführung</title>
<body>

<p>
Bisher wurde an diesem Punkt eine manuelle Konfiguration für das Aufsetzen 
eines Kernels behandelt. Nun, jedoch, haben wir eine Zahl von 
Beispielskonfigurationen hochgeladen auf denen Sie Ihre Konfiguration 
aufbauen können. Klicken Sie einfach auf die Option welche am allerehesten 
auf Ihr System und Ihre Kernelversion zutrifft. Sie finden unter Umständen 
auch weitere Konfigurationsbeispiele bei den unten aufgeführten URLs.
</p>

<table>
  <tr>
    <th>System</th>
    <th>Kernelversion</th>
  </tr>
  <tr>
    <ti>SGI IP22 (Indy, Indigo 2, Challenge S)</ti>
    <ti>
      <uri link="http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config/2.4.29-mipscvs-20050130.gz">2.4.29</uri>
    </ti>
  </tr>
  <tr>
    <ti>Cobalt Qube/Raq 2800</ti>
    <ti>
      <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-2605.config">2.6.5</uri>
      <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-2606.config">2.6.6</uri>
      <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-config-2609">2.6.9</uri>
    </ti>
  </tr>
</table>

<ul>
  <li>
    IP22 (Indy, Indigo2, Challenge S) Konfigurationen:
    <uri link="http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config">
    http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config
    </uri>
  </li>
  <li>
    Cobalt Server Konfigurationen:
    <uri link="http://dev.gentoo.org/~kumba/mips">
    http://dev.gentoo.org/~kumba/mips
    </uri>
  </li>
</ul>

<note>
Weitere Kernelkonfigurationsbeispiele finden sich in der Gentoo/MIPS Hardware Support 
Datenbank, welche man unter 
<uri>http://stuartl.longlandclan.hopto.org/gentoo/mips</uri> findet.
</note>

<p>
Sowie Sie eine Konfiguration gefunden haben, müssen Sie diese herunterladen und 
in Ihr Kernerlquellverzeichnis verschieben. Benennen Sie diese um in 
<path>.config</path>. Nun können Sie <c>make oldconfig</c> ausführen um alles 
auf den neuesten Stand zu bringen und weitere Veränderungen an der 
Konfiguration vorzunehmen bevor die Kompilierung beginnt.
</p>

<pre caption="Konfigurieren des Kernels">
# <i>cd /usr/src/linux</i>
# <i>cp /pfad/zur/beispielskonfiguration .config</i>
# <i>make oldconfig</i>
<comment>(Drücken Sie einfach EINGABE bei jeder Anfrage und die Standardeinstellungen zu akzeptieren. Anpassungen kommen später)</comment>
# <i>make menuconfig</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilieren und Installieren</title>
<body>

<p>
Nun da Ihr Kernel konfiguriert ist, ist es Zeit ihn zu kompilieren und zu
installieren. Verlassen Sie die Konfiguration und starten Sie die Kompilierung:
</p>

<pre caption="Kompilieren des Kernels">
<comment>(Für 2.4 Kernel)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(Für 2.6 Kernel)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Wenn der Kernel fertig ist mit der Kompilierung, kopieren Sie das Kernel-Image
nach <path>/boot</path>. 
</p>

<note>
Bei Cobalt Servern erwartet der Bootloader ein komprimiertes Kernel-Image. 
Denken Sie daran <c>gzip -9</c> auf die Datei anzuwenden sobald diese in 
<path>/boot</path> ist.
</note>


<pre caption="Installieren des Kernels">
# <i>cp vmlinux /boot/kernel-2.4.24</i>
# <i>cp System.map /boot/System.map-2.4.24</i>
<comment>(Cobalt Server -- Komprimieren des Kernel-Image)</comment>
# <i>gzip -9v /boot/kernel-2.4.24</i>
</pre>

<p>
Es ist auch Weise Ihre Kernelkonfiguration nach <path>/boot</path> zu kopieren,
nur für alle Fälle :)
</p>

<pre caption="Erstellen eines Backups der Kernelkonfiguration ">
# <i>cp .config /boot/config-2.4.24</i>
</pre>
<!--
    Sinnlos da wird nun arcboot auf SGI und CoLo auf Cobalt verwenden
<p>
Wenn Ihr System keine ELF Kernel bootet,
kompilieren Sie den Kernel mit <c>make vmlinux.ecoff</c> anstelle von <c>make
vmlinux</c>. Das Kernel Image wird in <path>arch/mips/boot/vmlinux.ecoff</path>
anstelle von <path>vmlinux</path> gespeichert.
</p>
-->
</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Installieren separater Kernelmodule</title>
<subsection>
<title>Konfiguration der Module</title>
<body>

<p>
Sie sollten alle Module, die automatisch geladen werden sollen, in einer der 
untenstehenden Dateien eintragen. Wenn Sie möchten können Sie auch 
zusätzliche Optionen anhängen.
</p>

<ul>
  <li><path>/etc/modules.autoload.d/kernel-2.4</path> - Nur Kernel 2.4</li>
  <li><path>/etc/modules.autoload.d/kernel-2.6</path> - Nur Kernel 2.6</li>
  <li><path>/etc/modules.autoload</path> - Alle Kernel</li>
</ul>

<p>
Sofern Sie ein Kernelmodul laden wollen, was häufig 
vorkommt auf 2.4 und 2.6, sollten Sie es dementsprechend  in 
<path>/etc/modules.autoload</path> eintragen. Ansonsten kann es in die 
entsprechende Datei gesetzt werden.
</p>

<p>
Um alle verfügbaren Module anzuzeigen führen Sie das folgende <c>find</c>
Kommando aus. Vergessen Sie nicht  "&lt;kernel version&gt;" mit der Version
Ihres Kernel zu ersetzen, den Sie gerade kompiliert haben:
</p>

<pre caption="Listen aller verfügbarer Module">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Um zum Beispiel das <c>3c59x.o</c> Modul automatisch zu laden editieren Sie die
passende Datei und tragen Sie den Modulnamen dort ein.
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.4">
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 oder kernel-2.6">
3c59x
</pre>

<p>
Dies ist auch mit einem einzigen Befehl möglich:
</p>

<pre caption="Ein Modul hinzufuegen mit nur einer Zeile">
# <i>echo '3c59x' >> /etc/modules.autoload.d/kernel-2.4</i>
<comment>(oder kernel-2.6, oder /etc/modules.autoload...)</comment>
</pre>

<p>
Fahren Sie nun mit der <uri link="?part=1&amp;chap=8">Konfiguration des
System</uri> fort.
</p>

</body>
</subsection>
</section>
</sections>
