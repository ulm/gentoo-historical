<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- English CVS Version: 1.10 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/Attic/hb-working-behaviour.xml,v 1.3 2004/03/01 07:37:30 dertobi123 Exp $ -->

<sections>
<section>
<title>Konfiguration Dateischutz</title>
<subsection>
<title>Schützen?</title>
<body>

<p>
Portage kennt das Prinzip "Dateien zu schützen". Dies bedeutet: Wenn Sie
Software updaten, werden nicht sofort bestimmte Dateien mit neueren Versionen
überschrieben, sondern Sie werden informiert, dass eine neuere Version existiert.
Dies ist natürlich sehr nützlich für Konfigurationsdateien (die Dateien die in
<path>/etc</path> liegen).
</p>

<p>
Anstatt dass solche Dateien überschrieben werden, wird eine neue Datei
mit dem Namen <path>._cfg0000_&lt;name&gt;</path> erstellt, wobei
<path>&lt;name&gt;</path> der Originaldateiname ist. Es liegt nun am Benutzer,
die notwendigen Änderungen in die existierende Datei einzubauen. Sie können den
<c>etc-update</c> Befehl verwenden um diesen Vorgang zu vereinfachen. Wir werden
<c>etc-update</c> später noch behandeln.
</p>

</body>
</subsection>
<subsection>
<title>Deklarieren von CONFIG_PROTECT</title>
<body>

<p>
Portage kann nicht Dateien auf einer Datei zu Datei Basis schützen. Anstatt
dessen schützt es ganze Verzeichnisse. Die <c>CONFIG_PROTECT</c> Variable listet
alle geschützten Verzeichnisse auf. Alle Unterverzeichnisse der aufgelisteten
Verzeichnisse sind auch geschützt. Die <c>CONFIG_PROTECT</c> Variable ist
definiert in <path>/etc/make.globals</path>. aber wenn Sie diese ändern wollen,
sollten Sie diese in <path>/etc/make.conf</path> deklarieren (um Dinge
konsistent zu behandeln wird <path>/etc/make.conf</path> für alle
Portagekonfigurationen verwendet).
</p>

<pre caption="Eine CONFIG_PROTECT Bespielskonfiguration">
CONFIG_PROTECT="/etc /usr/share/config /usr/kde/3.1/share/config"
</pre>

<p>
Wenn Sie ein bestimmtes Verzeichnis schützen lassen wollen, aber nicht alle
seine Unterverzeichnisse, können Sie diese "entschützen" indem Sie diese in der
<c>CONFIG_PROTECT_MASK</c> Variable auflisten, welche auch einen Standardwert
in <path>/etc/make.globals</path> deklariert hat, verändert werden sollte aber
nur die Deklarierung in <path>/etc/make.conf</path>:
</p>

<pre caption="Eine CONFIG_PROTECT_MASK Beispieleinstellung">
CONFIG_PROTECT_MASK="/etc/init.d"
</pre>

<p>
Weitere Informationen über die Dateischutzkonfiguration finden sich in
<c>emerge</c>s Online Hilfe:
</p>

<pre caption="Informationen über die Dateischutzkonfiguration erhalten">
# <i>emerge --help config</i>
</pre>

</body>
</subsection>
<subsection>
<title>etc-update</title>
<body>

<p>
<c>etc-update</c> ist ein Werkzeug, dass bei der Einwebung von
<path>._cfg0000_&lt;name&gt;</path> Dateien hilft. Es enthält ein interaktives
Einbindungs-Setup und kann triviale Veränderungen auch automatisch einweben.
</p>

<p>
<c>etc-update</c> auszuführen ist relativ simpel:
</p>

<pre caption="Ausführen von etc-update">
# <i>etc-update</i>
</pre>

<p>
Nachdem die trivialen Veränderungen eingewebt wurden, wird Ihnen eine Liste
mit geschützten Dateien angezeigt, für die ein Update vorliegt. Untenstehend
finden Sie die möglichen Optionen:
</p>

<pre caption="etc-update Optionen">
Please select a file to edit by entering the corresponding number.
              (-1 to exit) (-3 to auto merge all remaining files)
                           (-5 to auto-merge AND not use 'mv -i'):
</pre>

<p>
Wenn Sie <c>-1</c> eingeben, wird <c>etc-update</c> beenden ohne irgendwelche
Veränderungen vorgenommen zu haben. Wenn Sie <c>-3</c> oder <c>-5</c> eingeben,
werden <e>alle</e> aufgelisteten Konfigurationsdateien mit den neueren Versionen
überschrieben. Es ist deswegen sehr wichtig, zuerst die Dateien auszuwählen, die
nicht automatisch aktualisiert werden sollen. Dies geschieht einfach dadurch,
dass die Nummer der Datei links vor dem Namen der Konfigurationsdatei eingegeben
wird.
</p>

<p>
Als ein Beispiel wählen wir die Konfigurationsdatei <path>/etc/pear.conf</path>:
</p>

<pre caption="Updaten einer spezifischen Konfigurationsdatei">
Beginning of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
<comment>[...]</comment>
End of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
1) Replace original with update
2) Delete update, keeping original as is
3) Interactively merge original with update
4) Show differences again
</pre>

<p>
Sie können nun den Unterschied zwischen den zwei Dateien sehen. Wenn Sie der
Meinung sind, dass das Update der Konfigurationsdatei ohne Probleme verwendet
werden kann, drücken Sie <c>1</c>. Wenn Sie glauben, dass das Update der
Konfigurationsdatei nicht notwendig ist oder keine neuen oder notwendigen
Informationen enthält, drücken Sie <c>2</c>. Wenn Sie Ihre Konfigurationsdatei
interaktiv aktualisieren wollen, drücken Sie <c>3</c>.
</p>

<p>
Es ist nicht wichtig hier das interaktive Einweben weiter zu thematisieren. Zur
Vollständigkeit halber listen wir hier alle möglichen Befehle auf, die Sie
benutzen können, während Sie zwei Dateien interaktiv verweben. Sie werden mit
zwei Zeilen begrüßt (die Originalzeile und die vorgeschlagene Neue) und einer
Kommandozeile wo Sie einen der folgenden Befehle eingeben können:
</p>

<pre caption="Verfügbare Befehle für das interaktive Verweben">
ed:     Editieren und dann Beide verwenden, jede mit einer Kopfzeile dekoriert.
eb:     Editieren und dann beide Versionen verwenden.
el:     Editieren und dann die linke Version benutzen.
er:     Editieren und dann die rechte Version benutzen.
e:      Editieren einer neuen Version
l:      Benutze die linke Version.
r:      Benutze die rechte Version.
s:      Füge still gleich Zeilen ein.
v:      Füge detailliert gleiche Zeilen ein.
q:      Quit.
</pre>

<p>
Wenn Sie mit dem Update der wichtigen Konfigurationsdateien fertig sind, können
Sie nun automatisch ein Update aller anderen Konfigurationsdateien vornehmen.
<c>etc-update</c> wird beendet wenn es keine weiteren aktualisierbaren
Konfigurationsdateien gibt.
</p>

</body>
</subsection>
</section>
<section>
<title>Netzwerkoptionen</title>
<subsection>
<title>Mirrors</title>
<body>

<p>
Nun wo Gentoo an Beliebtheit gewinnt, wird die Verwendung von Mirrors sehr
geschätzt. Portage verwendet drei Variablen für Mirror: Eine für den rsync
Mirror (welcher für Synchronisationen des Portagetree verwendet wird), eine
für die distfiles (welcher benutzt wird um die Quelldateien herunterzuladen) und
eine für vorkompilierte Pakete.
</p>

<p>
Alle verfügbaren distfiles Mirror sind aufgelistet auf unserer <uri 
link="/main/en/mirrors.xml">Gentoo Mirror Seite</uri>. Sie können auch
<c>mirrorselect</c> verwenden, welches die Einrichtung von Mirrors für Ihr
System vereinfacht. Aber lassen Sie uns zuerst die individuellen Variablen
 betrachten...
</p>

<p>
Die <c>SYNC</c> Variable enthält eine Liste von rsync Mirrors die Sie benutzten 
möchten. Zum Beispiel um <uri>rsync://rsync.namerica.gentoo.org/gentoo-portage
</uri> als Erstwahl und <uri>rsync://rsync.samerica.gentoo.org/gentoo-portage
</uri> als Zweitwahl zu verwenden, würden Sie dies in
<path>/etc/make.conf</path> definieren:
</p>

<pre caption="Definieren von SYNC in /etc/make.conf">
SYNC="rsync://rsync.namerica.gentoo.org/gentoo-portage
      rsync://rsync.samerica.gentoo.org/gentoo-portage"
</pre>

<p>
Die <c>GENTOO_MIRRORS</c> Variable enthält eine Liste von disfiles Mirrors, die
Sie benutzen möchten. Zum Beispiel wenn Sie
<uri>ftp://ibiblio.org/pub/Linux/distributions/gentoo</uri> als Erstwahl und
<uri>http://www.gtlib.cc.gatech.edu/pub/gentoo</uri> als Zweitwahl verwenden
wollen, würden Sie dies in<path>/etc/make.conf</path> definieren:
</p>

<pre caption="Definieren von GENTOO_MIRRORS in /etc/make.conf">
GENTOO_MIRRORS="ftp://ibiblio.org/pub/Linux/distributions/gentoo
                http://www.gtlib.cc.gatech.edu/pub/gentoo"
</pre>


<p>
Die <c>PORTAGE_BINHOST</c> Variable enthält eine Liste von Mirrors für
vorkompilierte Pakete, die Sie benutzen möchten. Zum Beispiel um
<uri>ftp://login:pass@grp.mirror.site/pub/grp/i686/athlon-xp</uri> zu verwenden,
würden Sie dies in <path>/etc/make.conf</path> definieren:
</p>

<pre caption="Definieren von PORTAGE_BINHOST in /etc/make.conf">
PORTAGE_BINHOST="ftp://login:pass@grp.mirror.site/pub/grp/i686/athlon-xp"
</pre>

</body>
</subsection>
<subsection>
<title>Mirrorselect</title>
<body>

<p>
Wenn Sie <c>mirrorselect</c> verwenden wollen installieren Sie es zunächst
(falls Sie es noch nicht getan haben).
</p>

<pre caption="Installieren von Mirrorselect">
# <i>emerge mirrorselect</i>
</pre>

<p>
Sie können nun wählen ob <c>mirrorselect</c> automatisch den besten Mirror für
Sie auswählen soll oder Sie den Mirror per Hand von einer Liste auswählen
wollen. Für weitere Informationen zur Bedienung von <c>mirrorselect</c> führen
Sie einfach <c>mirrorselect</c> von der Kommandozeile aus - dies gibt Ihnen
einen kurzen Überblick über <c>mirrorselect</c>.
</p>

<pre caption="Ausführen von Mirrorselect">
# <i>mirrorselect</i>
</pre>

</body>
</subsection>
<subsection>
<title>Fetching</title>
<body>

<p>
Das Programm, welches Portage verwendet um Archivdateien herunterzuladen kann
spezifiziert werden durch das Setzen der <c>FETCHCOMMAND</c> und
<c>RESUMECOMMAND</c> Einstellungen. Mehrere Beispiele finden sich in
<path>/etc/make.conf</path> und <path>/etc/make.globals</path>. Portage
verwendet standardmäßig <c>wget</c>:
</p>

<pre caption="Standard FETCHCOMMAND &amp; RESUMECOMMAND">
FETCHCOMMAND="/usr/bin/wget -t 5 --passive-ftp -P \${DISTDIR} \${URI}"
RESUMECOMMAND="/usr/bin/wget -c -t 5 --passive-ftp -P \${DISTDIR} \${URI}"
</pre>

<p>
Die <c>${DISTDIR}</c> Variable wird ersetzt durch den Ort, an dem die
heruntergeladenen Dateien gespeichert werden
(<path>/usr/portage/distfiles</path>), während die <c>${URI}</c> Variable ersetzt
wird durch die Datei die Portage herunterladen muss.
</p>

<p>
Da Portage standardmäßig <c>wget</c> verwendet, können Sie es dazu konfigurieren
Proxies zu verwenden, indem sie <c>http_proxy</c> und <c>ftp_proxy</c> (beachten
Sie die Kleinbuchstaben) definieren. Auch wenn Sie dies auch in
<path>/etc/make.conf</path> erledigen können, raten wir Ihnen einen
grundlegenderen Ansatz zu benutzen, da die <c>http_proxy</c> und
<c>ftp_proxy</c> Variablen auch von anderen Werkzeugen verwendet werden
(<path>/etc/make.conf</path> wird nur von Portage verwendet). Lesen Sie bitte
das Kapitel über <uri link="?part=2&amp;chap=6">Umgebungsvariablen</uri> für
Informationen wie man Systemweite Umgebungsvariablen definiert.
</p>

</body>
</subsection>
<subsection>
<title>Konfigurieren von rsync</title>
<body>
 
<p>
<c>rsync</c> wird von <c>emerge sync</c> verwendet um Ihren Portage Baum zu
aktualisieren. Drei Variablen werden von Portage verwendet um das Verhalten von
<c>rsync</c> zu verändern; diese sind <c>RSYNC_EXCLUDEFROM</c>,
<c>RSYNC_RETRIES</c> und <c>RSYNC_TIMEOUT</c>.
</p>

<p>
Ein Weg Ebuilds zu "schützen" vor Ersetzen oder Entfernen durch
<c>emerge sync</c> ist die Benutzung der <c>RSYNC_EXCLUDEFROM</c> Variable. Sie
sollte auf eine Datei gesetzt werden,  die von <c>rsync</c> verwendet wird um
bestimmte Dateien auszuschliessen und ist standardmässig
<path>/etc/portage/rsync_excludes</path>. Es ist <e>nicht</e> ratsam diese
Methode zu benutzen, denn Sie kann Abhängigkeiten zusammenbrechen lassen, wenn
Sie nicht vorsichtig sind. Wir werden später noch über <c>PORTDIR_OVERLAY</c>
sprechen, welches die empfohlene Methode ist. Für weitere Informationen lesen
Sie bitte die <c>rsync</c> man Seite.
</p>

<pre caption="Die RSYNC_EXCLUDEFROM Variable">
RSYNC_EXCLUDEFROM="/etc/portage/rsync_excludes"
</pre>

<p>
Wenn <c>rsync</c> fehlschlägt, wird es es einige Male erneut versuchen, bevor es
zum nächsten verfügbaren rsync Server wechselt. Die Zahl der
Wiederholungsversuche ist definiert in <c>RSYNC_RETRIES</c> und ist
standardmäßig <c>3</c>:
</p>

<pre caption="Die RSYNC_RETRIES Variable">
RSYNC_RETRIES="3"
</pre>

<p>
Wenn Sie einen (sehr) langsamen rsync Server verwenden, kann <c>rsync</c> ein
Time-Out erreichen, wenn keine weiteren Daten empfangen werden. Die Anzahl der
Sekunden die gewartet werden sollen, bis der Time-Out eintritt ist definiert in
der <c>RSYNC_TIMEOUT</c> Variable und ist von Werk aus <c>180</c>:
</p>

<pre caption="Die RSYNC_TIMEOUT Variable">
RSYNC_TIMEOUT="180"
</pre>

</body>
</subsection>
</section>
<section>
<title>Verzeichnispfade</title>
<subsection>
<title>Einleitung</title>
<body>

<p>
Alles an Portage ist konfigurierbar, so auch die Verzeichnisse die für die
verschiedensten Aufgaben und Dateien von Portage benötigt werden. Um die
Standardverzeichnisse zu ändern (wie definiert in
<path>/etc/make.globals</path>) müssen Sie die Variable definieren in -
wo sonst :) - <path>/etc/make.conf</path>.
</p>

<warn>
Wenn Sie eine Variable ändern, so dass Sie an einen anderen Platz verweist, dann
beenden Sie <e>nie</e> den Pfad mit einem <path>/</path> !
</warn>

</body>
</subsection>
<subsection>
<title>Der Portage Baum</title>
<body>

<p>
Der Ort des Portage Baums ist definiert in der <c>PORTDIR</c> Variable. Sie ist
von Werk aus auf <path>/usr/portage</path> gesetzt:
</p>

<pre caption="Die PORTDIR Variable">
PORTDIR="/usr/portage"
</pre>

<p>
Wenn Sie einen lokalen Portage Baum neben dem "Offiziellen" haben wollen, müssen
Sie die <c>PORTDIR_OVERLAY</c> Variable definieren. Die dort aufgeführten
Verzeichnisse werden nicht von <c>emerge sync</c>s Handlungen beeinflusst:
Ebuilds an jenen Orten werden nicht erneuert oder entfernt, sind aber Teil Ihres
Portage Baumes.
</p>

<pre caption="Die PORTDIR_OVERLAY Variable">
PORTDIR_OVERLAY="/usr/local/portage"
</pre>

</body>
</subsection>
<subsection>
<title>Distfiles</title>
<body>

<p>
Der Ort des heruntergeladenen Quellcodes (sogenannte Distfiles) ist definiert
in der <c>DISTDIR</c> Variable. Sie ist von Werk aus auf
<path>${PORTDIR}/distfiles</path> gesetzt:
</p>

<pre caption="Die DISTDIR Variable">
DISTDIR="${PORTDIR}/distfiles"
</pre>

</body>
</subsection>
<subsection>
<title>Pakete und RPMs</title>
<body>

<p>
Der Ort der vorgefertigten Pakete ist definiert in der <c>PKGDIR</c> Variable.
Sie ist von Werk aus auf <path>${PORTDIR}/packages</path> gesetzt:
</p>

<pre caption="Die PKGDIR Variable">
PKGDIR="${PORTDIR}/packages"
</pre>

<p>
Der Ort der RPMs (ja, einige Pakete sind erhältlich als RPMs) ist definiert in
der <c>RPMDIR</c> Variable. Sie ist von Werk aus auf
<path>${PORTDIR}/rpm</path> gesetzt:
</p>

<pre caption="Die RPMDIR Variable">
RPMDIR="${PORTDIR}/rpm"
</pre>

</body>
</subsection>
<subsection>
<title>Temporäre Portage Dateien</title>
<body>

<p>
Portage benutzt einen temporären Ort in dem die Ebuilds erstellt werden. Dieser
Ort ist definiert in der <c>PORTAGE_TMPDIR</c> Variable. Sie ist von Werk aus
auf <path>/var/tmp</path> gesetzt:
</p>

<pre caption="Die PORTAGE_TMPDIR Variable">
PORTAGE_TMPDIR="/var/tmp"
</pre>

<p>
Standardmäßig wird Portage ein Verzeichnis <path>portage</path> erstellen
innerhalb von <c>PORTAGE_TMPDIR</c>. Dies ist deklariert in der
<c>BUILD_PREFIX</c> Variable:
</p>

<pre caption="Die BUILD_PREFIX Variable">
BUILD_PREFIX="${PORTAGE_TMPDIR}/portage"
</pre>

<p>
Wenn Sie vorhaben diesen Ort zu ändern, stellen Sie sicher, dass das temporäre
Verzeichnis auf einer Partition liegt mit genügend freiem Speicherplatz: wenn
große Softwarepakete kompiliert werden, kann das Verzeichnis auf 2GB und mehr
anwachsen!
</p>

</body>
</subsection>
<subsection>
<title>Protokollieren</title>
<body>

<p>
<c>PORT_LOGDIR</c> ist eine spezielle Variable und von Werk aus nicht gesetzt.
Wenn Sie diese definieren, wird Portage im angegeben Verzeichnis per-Ebuild
Protokolle erstellen:
</p>

<pre caption="Die PORT_LOGDIR Variable">
PORT_LOGDIR="/var/log/portage"
</pre>

</body>
</subsection>
</section>
<section>
<title>Weitere Portage Optionen</title>
<subsection>
<title>Nice Wert</title>
<body>

<p>
Portage unterstützt das Kompilieren mit einem unterschiedlichen Nice-Wert (eine
Art Prioritätswert). Wenn Sie Portage Pakete mit einem höheren Nice-Wert bauen
lassen wollen (was ein System responsiver macht während der Erstellungszeit,
aber auch die Erstellungszeit verlängert) können Sie dies in der
<c>PORTAGE_NICENESS</c> Variable mit einer positiven Zahl definieren:
</p>

<pre caption="Die PORTAGE_NICENESS Variable">
PORTAGE_NICENESS="3"
</pre>

</body>
</subsection>
<subsection>
<title>GeSLOTete Pakete und automatische Reinigung</title>
<body>

<p>
In vielen Situationen wollen Sie verschiedene unterschiedliche Versionen eines
Paketes (inklusive Bibliotheken) auf Ihrem System verfügbar haben. Portage
unterstützt dies, indem Sie die <c>SLOT</c> Variable in den Ebuilds definieren.
Als Benutzer müssen Sie nicht wissen wie <c>SLOT</c>en funktioniert, aber es
ist wichtig, dass Sie wissen, dass es unterstützt wird. 
</p>

<p>
Wenn Sie eine neuere Version eines Paketes installieren, wird Portage überprüfen 
ob die <c>SLOT</c> Variable für das Paket deklariert ist. Wenn das der Fall ist
und die <c>SLOT</c> Variable unterschiedlich ist für beide Pakete (neu und alt)
wird Portage das ältere Paket nicht anrühren.
</p>

<p>
Jedoch wenn die <c>SLOT</c> Variable dieselbe ist (wie es normalerweise der Fall
ist), dann wird standardmäßig das alte Paket entfernt. Damit der Benutzer dieses
Entfernen unterbrechen kann, wird Portage eine bestimmte Anzahl von Sekunden
herunterzählen. Diese Anzahl ist definiert in der <c>CLEAN_DELAY</c> Variable
und ist von Werk aus auf <c>5</c> Sekunden gesetzt:
</p>

<pre caption="Die CLEAN_DELAY Variable">
CLEAN_DELAY="5"
</pre>

<p>
Wenn Sie nicht wollen, dass Portage automatisch die älteren Versionen entfernt
(genannt "cleaning"), können Sie die <c>AUTOCLEAN</c> Variable auf <c>no</c>
setzen:
</p>

<pre caption="Die AUTOCLEAN Variable">
AUTOCLEAN="no"
</pre>

</body>
</subsection>
<subsection>
<title>Für das Kompilieren relevante Variablen</title>
<body>

<p>
Wir haben schon eine ganze Anzahl von Variablen kennengelernt, aber fertig sind
wir noch nicht. Menschen die Gentoo schon einmal installiert haben werden die
<c>CHOST</c>, <c>CFLAGS</c> und <c>CXXFLAGS</c> Variablen kennen. Sie werden
vom Compiler verwendet um Pakete zu kompilieren und zu optimieren.
</p>

<p>
Weitere Informationen über diese Variablen können in den <c>gcc</c> Info Seiten
oder Online in den <uri link="http://www.gnu.org/software/gcc/onlinedocs/">
GCC Online Manuals</uri> gefunden werden.
</p>

<pre caption="Informationen erhalten über CHOST, CFLAGS und CXXFLAGS">
# <i>info gcc</i>
<comment>(Wählen Sie "Invoking gcc")</comment>
<comment>(Wählen Sie "Optimize options")</comment>
</pre>

<p>
Wenn die <c>DEBUGBUILD</c> Variable definiert ist, wird Portage die binären
Dateien und die Bibliotheken nicht entschlacken, um das debuggen einfacher zu
gestalten. Dies verlangsamt ihr System und vergrößert die Dateigrößen.
</p>

<pre caption="Die DEBUGBUILD Variable">
<comment># Setzen Sie dies nicht auf "false", sondern entfernen Sie die Zeile
stattdessen. Portage überprüft nicht den Wert, </comment>
<comment># Portage überprüft nur ob die Variable definiert ist.</comment>
DEBUGBUILD="true"
</pre>

<p>
Die <c>MAKEOPTS</c> Variable wird von <c>make</c> verwendet, einem Werkzeug zur
Vereinfachung der Kompilierung von Paketen. Sie ist normalerweise definiert
<c>make</c> zu sagen, dass mehrere Kompilierungen gleichzeitig laufen sollen
(besonders wenn Sie ein Multi-CPU System haben oder  <c>distcc</c> verwenden
wie vorhin beschrieben)
</p>

<p>
Soll <c>make</c> drei Kompilierungen gleichzeitg laufen lassen, setzen Sie die
<c>MAKEOPTS</c> Variable auf <c>-j3</c>:
</p>

<pre caption="Die MAKEOPTS Variable">
MAKEOPTS="-j3"
</pre>

<p>
Die <c>ROOT</c> Variable sollte nicht in <path>/etc/make.conf</path> gesetzt
werden, sondern besser als Umgebungsvariable. Portage wird diese Variable
überprüfen um zu sehen wo ein Paket installiert werden muss. Natürlich ist dies
von Werk aus auf <path>/</path> gesetzt.  Als ein Beispiel zeigen wir Ihnen
wie man <c>gnumeric</c> in <path>/mnt/gentoo</path> installiert anstatt in Ihr
laufendes System:
</p>

<pre caption="Die ROOT Variable">
# <i>ROOT="/mnt/gentoo" emerge gnumeric</i>
</pre>

</body>
</subsection>
<subsection>
<title>Formatierung der Ausgabe</title>
<body>

<p>
Von Werk aus coloriert Portage seine Ausgabe um Lesbarkeit zu erhöhen. Wenn Sie
dies nicht wollen, setzen sie die <c>NOCOLOR</c> Variable auf <c>true</c>:
</p>

<pre caption="Die NOCOLOR Variable">
NOCOLOR="true"
</pre>

</body>
</subsection>
</section>
<section>
<title>Resources</title>
<subsection>
<title>Man Seiten</title>
<body>

<p>
Wenn Sie eine schnelle Referenz für alle aufgelisteten Variablen benötigen,
konsultieren Sie bitte die <path>make.conf</path> man Seite:
</p>

<pre caption="Konsultieren der make.conf man Seite">
# <i>man make.conf</i>
</pre>

</body>
</subsection>
<subsection>
<title>Kommentierte Beispiele</title>
<body>

<p>
Die <path>/etc/make.conf</path> Datei enthält viele Kommentare sowie Beispiele
die Sie vielleicht nützlich finden könnten. Jedoch aktualisieren die meisten
Menschen ihre <path>/etc/make.conf</path> nicht interaktiv und verpassen daher
Updates zu den Dateien. Sie finden die aktuellste <path>/etc/make.conf</path>
Datei in unserem <uri
link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/*checkout*/portage/cnf/make.conf?rev=HEAD&amp;cvsroot=gentoo-src&amp;content-type=text/plain">Online
ViewCVS Repository</uri>.
</p>

</body>
</subsection>
</section>
</sections>
