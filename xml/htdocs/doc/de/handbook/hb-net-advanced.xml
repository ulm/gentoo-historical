<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- English CVS Version: 1.3 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-net-advanced.xml,v 1.1 2005/06/11 08:07:34 dertobi123 Exp $ -->

<sections>

<version>1.1</version>
<date>2005-06-09</date>

<section>
<title>Erweiterte Konfiguration</title>
<body>

<p>
Das Herz der Konfiguration der Schnittstellen ist die Variable config_eth0
Es ist eine hochsprachliche Anweisungsliste zur Konfiguration der Schnittstelle
(in diesem Fall eth0). Die Anweisungen in der Liste werden der Reihe nach
abgearbeitet. Wenn mindestens eine Anweisung korrekt ausgeführt wird, wird
von einer erfolgreichen Konfiguration der Schnittstelle ausgegangen.
</p>

<p>
Here ist eine Liste der eingebauten Anweisungen
</p>

<table>
  <tr>
    <th>Anweisung</th>
    <th>Beschreibung</th>
  </tr>
  <tr>
    <ti>null</ti>
    <ti>Nichts machen</ti>
  </tr>
  <tr>
    <ti>noop</ti>
    <ti>
      Wenn die Schnittstelle aktiviert ist und eine Adresse vorhanden ist,
      beende die Konfiguration erfolgreich.
    </ti>
  </tr>
  <tr>
    <ti>an IPv4 or IPv6 address</ti>
    <ti>Die angegebene Adresse zur Schnittstelle hinzufügen</ti>
  </tr>
  <tr>
    <ti>
      dhcp, adsl or apipa<br/>
      (oder ein spezielles Kommando von einem externen Modul)
    </ti>
    <ti>
      Das Modul ausführen, das das Kommando bereitstellt. Beispielsweise ruft
      "dhcp" ein Modul auf, das dhcp bereitstellt - das kann entweder dhcpcd,
      udhcpc, dhclient oder pump sein.
    </ti>
  </tr>
</table>

<p>
Schlägt eine Anweisung fehl, können sie eine andere Anweisung als
Ausweichlösung angeben. Dieses muss der Konfigurationsstruktur genau folgen.
</p>

<p>
Sie können die verschiedenen Anweisungen aneinanderhängen. Es folgen einige
Beispiele aus der Praxis.
</p>

<pre caption="Konfigurationsbeispiel">
<comment># Drei IPv4 Adressen hinzufügen</comment>
config_eth0=(
	"192.168.0.2/24"
	"192.168.0.3/24"
	"192.168.0.4/24"
)

<comment># Eine IPv4 und zwei IPv6 Adressen hinzufügen</comment>
config_eth0=(
	"192.168.0.2/24"
	"4321:0:1:2:3:4:567:89ab"
	"4321:0:1:2:3:4:567:89ac"
)

<comment># Die vom Kernel zugewiesene Adresse so lange behalten wie die Schnittstelle
# aktiviert ist. Danach wird eine neue per DHCP zugewiesen.
# Schlägt DHCP fehl, füge eine statische IP Adresse per APIPA hinzu.</comment>
config_eth0=(
	"noop"
	"dhcp"
)
fallback_eth0=(
	"null"
	"apipa"
)
</pre>

<note>
Wenn Sie das ifconfig Modul benutzen und mehr als eine Adresse hinzufügen,
wird für jede neue Adresse ein Alias erstellt. Mit obigem Beispiel erhalten Sie
zum Beispiel die Schnittstellen eth0, eth0:1 and eth0:2.
Sie können damit nichts weiter anfangen, da der Kernel und andere Programme sie
wie eth0 behandeln.
</note>

<impo>
Die Reihenfolge in den Anweisungen der Ausweichlösung ist wichtig! Würden wir
nicht die "null" Option hinzufügen, würde "apipa" nur ausgeführt, wenn "noop"
fehlschlagen würde.
</impo>

<note>
<uri link="?part=4&amp;chap=3#apipa">APIPA</uri> und
<uri link="?part=4&amp;chap=3#dhcp">DHCP</uri> werden später im Detail
behandelt.
</note>

</body>
</section>

<section>
<title>Netzwerk Abhängigkeiten</title>
<body>

<p>Init Skripte in <path>/etc/init.d</path> können von einer speziellen
Netzwerk Schnittstelle abhängen oder einfach von net. "net" kann in
<path>/etc/conf.d/rc</path> konfiguriert werden und abhängig von der
<c>RC_NET_STRICT_CHECKING</c> Variable verschiedene Bedeutungen haben.
</p>

<table>
  <tr>
    <th>Wert</th>
    <th>Beschreibung</th>
  </tr>
  <tr>
    <ti>none</ti>
    <ti>
      Es wird davon ausgegangen, das der Netzwerk Service immer aktiviert ist.
    </ti>
  </tr>
  <tr>
    <ti>no</ti>
    <ti>
      Bedeutet, das mindestens ein net.* Service außer net.lo aktiv sein muss.
      Das kann von Notebook Benutzern eingesetzt werden, die eine drahtlose
      Verbindung sowie eine statische besitzen und jeweils nur eine von beiden
      aktiv haben möchten.
    </ti>
  </tr>
  <tr>
    <ti>lo</ti>
    <ti>
      Besitzt die gleiche Bedeutung wie die 'no' Option, nur zählt net.lo
      ebenfalls mit. Nützlich für diejenigen, die keine aktive
      Netzwerkschnittstelle beim Booten benötigen.
    </ti>
  </tr>
  <tr>
    <ti>yes</ti>
    <ti>
      ALLE Netzwerk Schnittstellen MÜSSEN aktiv sein, damit der Netzwerk
      Service als aktiviert angesehen wird.
    </ti>
  </tr>
</table>

<p>
Was aber, wenn net.br0 von net.eth0 und net.eth1 abhängt?
net.eth1 könnte eine drahtlose oder Wählverbindung sein, die vor dem
Hinzufügen zur Bridge konfiguriert werden muss.
Das kann nicht in <path>/etc/init.d/net.br0</path> erfolgen, da es sich um
einen symbolischen Link auf net.lo handelt.
</p>

<p>
Die Antwort lautet, das Sie eine eigene depend() Funktion in
<path>/etc/conf.d/net</path> hinzufügen müssen.
</p>

<pre caption="net.br0 Abhängigkeit in /etc/conf.d/net">
<comment># Sie können irgendeine Abhängigkeit des Typs  (use, after, before) benutzen,
# wie sie in laufenden Skripten verwendet werden.</comment>
depend_br0() {
	need net.eth0 net.eth1
}
</pre>

<p>
Weitere Details zu Abhängigkeiten gibt es im Kapitel
<uri link="/doc/en/handbook/handbook-x86.xml?part=2&amp;chap=4#doc_chap4">
Initscripte</uri> des Gentoo Handbuchs.
</p>

</body>
</section>

<section id="variable_name">
<title>Variablennamen und ihre Werte</title>
<body>

<p>
Variablennamen sind dynamisch. Normalerweise gehorchen sie der Struktur
<c>variable_${interface|mac|essid|apmac}</c>. Zum Beispiel verwaltet die
Variable <c>dhcpcd_eth0</c> die Werte für dhcpcd Optionen, falls sich eine
Schnittstelle zur Essid "essid" verbindet.
</p>

<p>
Nichtsdestotrotz gibt es keine harte Regel, die angibt, das Schnittstellen dem
Schema ethx folgen müssen. In der Tat besitzen viele drahtlose Schnittstellen
die Namen wlanx, rax oder auch ethx. Einige benutzerdefinierte Schnittstellen
wie Bridges können frei wählbare Namen gegeben werden, etwa foo. Um das ganze
noch etwas interessanter zu gestalten, können drahtlose Zugangspunkte Namen mit
nicht alphanumerischen Zeichen haben - das ist wichtig, da Netzwerkparameter
per ESSID eingestellt werden können.
</p>

<p>
Der Nachteil dessen ist aber, das dadurch Konflikte auftreten, denn Gentoo
benutzt bash Variablen - die dürfen allerdings nur englische alphanumerische
Zeichen enthalten. Um diese Beschränkung zu umgehen, ersetzen wir alle Zeichen,
die keine englischen alphanumerischen Zeichen sind, durch ein _ Zeichen.
</p>

<p>
Ein weiterer Nachteil der bash ist der Variableninhalt - einige Zeichen müssen
escaped (durch umgekehrten Schrägstrich geschützt) werden. Dazu setzt man ein \
Zeichen vor das Zeichen, das escaped werden muss. Es folgt eine Liste der
Zeichen, die auf diese Weise escaped werden müssen.
</p>

<p>
<c>" ' \</c>
</p>

<p>
In diesem Beispiel benutzen wir eine drahtlose ESSID, da diese den größten
Bereich an Zeichen zulässt. Gehen wir davon aus, wir müssten die unten
angegebene ESSID verwenden.
</p>

<p>
<c>My "\ NET</c>
</p>

<pre caption="Beispiel für Variablennamen">
<comment># Funktioniert, aber die Domain ist ungültig</comment>
dns_domain_My____NET="My \"\\ NET"

<comment># Obige Anweisung setzt die DNS Domain auf My "\ NET wenn eine
# drahtlose Netzwerkkarte sich mit dem Zugangspunkt mit der ESSID My "\ NET verbindet.</comment>
</pre>

</body>
</section>

</sections>
