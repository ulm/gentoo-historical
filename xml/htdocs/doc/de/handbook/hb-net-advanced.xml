<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- English CVS Version: 1.18 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-net-advanced.xml,v 1.9 2011/09/10 22:04:56 keytoaster Exp $ -->

<sections>

<abstract>
Hier lernt man wie die Konfiguration funktioniert. Sie werden dies brauchen,
bevor Sie sich mit der modularen Netzwerkkonfiguration vertraut machen.
</abstract>

<version>11</version>
<date>2011-08-19</date>

<section>
<title>Erweiterte Konfiguration</title>
<body>

<p>
Das Herz der Konfiguration der Schnittstellen ist die Variable
<c>config_eth0</c>. Es ist eine hochsprachliche Anweisungsliste zur
Konfiguration der Schnittstelle (in diesem Fall <c>eth0</c>). Die Anweisungen
in der Liste werden der Reihe nach abgearbeitet. Wenn mindestens eine Anweisung
korrekt ausgeführt wird, wird von einer erfolgreichen Konfiguration der
Schnittstelle ausgegangen.
</p>

<p>
Hier ist eine Liste der eingebauten Anweisungen.
</p>

<table>
  <tr>
    <th>Anweisung</th>
    <th>Beschreibung</th>
  </tr>
  <tr>
    <ti><c>null</c></ti>
    <ti>Nichts machen</ti>
  </tr>
  <tr>
    <ti><c>noop</c></ti>
    <ti>
      Wenn die Schnittstelle aktiviert ist und eine Adresse vorhanden ist,
      beende die Konfiguration erfolgreich.
    </ti>
  </tr>
  <tr>
    <ti>eine IPv4 oder IPv6 Adresse</ti>
    <ti>Die angegebene Adresse zur Schnittstelle hinzufügen</ti>
  </tr>
  <tr>
    <ti>
      <c>dhcp</c>, <c>adsl</c> or <c>apipa</c> (oder ein spezielles Kommando
      von einem externen Modul)
    </ti>
    <ti>
      Das Modul ausführen, das das Kommando bereitstellt. Beispielsweise ruft
      <c>dhcp</c> ein Modul auf, das DHCP bereitstellt - das kann entweder
      <c>dhcpcd</c>, <c>dhclient</c> oder <c>pump</c> sein.
    </ti>
  </tr>
</table>

<p>
Schlägt eine Anweisung fehl, können sie eine andere Anweisung als
Ausweichlösung angeben. Dieses muss der Konfigurationsstruktur genau folgen.
</p>

<p>
Sie können die verschiedenen Anweisungen aneinanderhängen. Es folgen einige
Beispiele aus der Praxis.
</p>

<pre caption="Konfigurationsbeispiel">
<comment># Drei IPv4 Adressen hinzufügen</comment>
config_eth0="192.168.0.2/24
192.168.0.3/24
192.168.0.4/24"

<comment># Eine IPv4 und zwei IPv6 Adressen hinzufügen</comment>
config_eth0="192.168.0.2/24
4321:0:1:2:3:4:567:89ab
4321:0:1:2:3:4:567:89ac"

<comment># Die vom Kernel zugewiesene Adresse so lange behalten wie die Schnittstelle
# aktiviert ist. Danach wird eine neue per DHCP zugewiesen.
# Schlägt DHCP fehl, füge eine statische IP Adresse per APIPA hinzu.</comment>
config_eth0="noop
dhcp"

fallback_eth0="null
apipa"
</pre>

<note>
Wenn Sie das <c>ifconfig</c> Modul benutzen und mehr als eine Adresse
hinzufügen, wird für jede neue Adresse ein Alias erstellt. Mit obigem Beispiel
erhalten Sie zum Beispiel die Schnittstellen <c>eth0</c>, <c>eth0:1</c> und
<c>eth0:2</c>. Sie können damit nichts weiter anfangen, da der Kernel und
andere Programme <c>eth0:1</c> und <c>eth0:2</c> einfach als <c>eth0</c>
behandeln werden.
</note>

<impo>
Die Reihenfolge in den Anweisungen der Ausweichlösung ist wichtig! Würden wir
nicht die <c>null</c> Option hinzufügen, würde <c>apipa</c> nur ausgeführt,
wenn <c>noop</c> fehlschlagen würde.
</impo>

<note>
<uri link="?part=4&amp;chap=3#apipa">APIPA</uri> und <uri
link="?part=4&amp;chap=3#dhcp">DHCP</uri> werden später im Detail behandelt.
</note>

</body>
</section>
<section>
<title>Netzwerk-Abhängigkeiten</title>
<body>

<p>
Initskripte in <path>/etc/init.d</path> können von einer speziellen
Netzwerkschnittstelle abhängen oder einfach von net. Alle
Netzwerkschnittstellen in Gentoos Init-System stellen <e>net</e> bereit.
</p>

<p>
Falls in <path>/etc/rc.conf</path> <c>rc_depend_strict="YES"</c> gesetzt ist,
müssen alle Netzwerkschnittstellen, die net bereitstellen, aktiv sein, bevor
eine Abhängigkeit auf "net" als gegeben angenommen wird. In anderen Worten,
falls Sie ein <path>net.eth0</path> und <path>net.eth1</path> sowie ein
Init-Skript haben, das von "net" abhängt, müssen beide Schnittstellen
aktiviert sein.
</p>

<p>
Andernfalls, wenn Sie <c>rc_depend_strict="NO"</c> gesetzt haben, dann wird die
"net"-Abhängigkeit als gegeben angenommen, sobald mindestens eine
Netzwerkschnittstelle aktiv ist.
</p>

<p>
Was aber, wenn <path>net.br0</path> von <path>net.eth0</path> und
<path>net.eth1</path> abhängt? <path>net.eth1</path> könnte eine drahtlose oder
Wählverbindung sein, die vor dem Hinzufügen zur Bridge konfiguriert werden
muss. Das kann nicht in <path>/etc/init.d/net.br0</path> erfolgen, da es sich
um einen symbolischen Link auf <path>net.lo</path> handelt.
</p>

<p>
Die Antwort darauf lautet, dass Sie eine <c>rc_need_</c> Einstellung in
<path>/etc/conf.d/net</path> definieren.
</p>

<pre caption="net.br0 Abhängigkeit in /etc/conf.d/net">
rc_need_br0="net.eth0 net.eth1"
</pre>

<p>
Das allein reicht aber nicht aus. Gentoos Init-Skripte verwenden eine
virtuelle Abhängigkeit namens <e>net</e>, die dem System mitteilt, wann
Netzwerkfunktionalität vorhanden ist. In obigem Beispiel sollte die
Netzwerkfunktionalität aber offensichtlich erst als vorhanden gesehen werden,
wenn <path>net.br0</path> gestartet wurde, nicht wenn die anderen gestartet
wurden. Wir müssen dies ebenfalls in <path>/etc/conf.d/net</path> angeben:
</p>

<pre caption="Aktualisieren der virtuellen Abhängigkeiten und Voraussetzungen für Netzwerkfunktionalität">
rc_net_lo_provide="!net"
rc_net_eth0_provide="!net"
rc_net_eth1_provide="!net"
</pre>

<p>
Weitere Details zu Abhängigkeiten gibt es im Kapitel <uri
link="?part=2&amp;chap=4#doc_chap4">Schreiben von Initskripten</uri> des Gentoo
Handbuchs. Weitere Informationen zur <path>/etc/rc.conf</path> finden Sie als
Kommentare innerhalb der Datei.
</p>

</body>
</section>

<section id="variable_name">
<title>Variablennamen und ihre Werte</title>
<body>

<p>
Variablennamen sind dynamisch. Normalerweise gehorchen sie der Struktur
<c>variable_${interface|mac|essid|apmac}</c>. Zum Beispiel verwaltet die
Variable <c>dhcpcd_eth0</c> die Werte für dhcpcd Optionen für eth0 und
<c>dhcpcd_essid</c> verwaltet die Werte der dhcpcd Optionen, wann immer sich
eine Schnittstelle zur ESSID "essid" verbindet.
</p>

<p>
Nichtsdestotrotz gibt es keine harte Regel, die angibt, das Schnittstellen dem
Schema ethx folgen müssen. In der Tat besitzen viele drahtlose Schnittstellen
die Namen wlanx, rax oder auch ethx. Einige benutzerdefinierte Schnittstellen
wie Bridges können frei wählbare Namen gegeben werden, etwa foo. Um das ganze
noch etwas interessanter zu gestalten, können drahtlose Zugangspunkte Namen mit
nicht alphanumerischen Zeichen haben - das ist wichtig, da Netzwerkparameter
per ESSID eingestellt werden können.
</p>

<p>
Der Nachteil dessen ist aber, das dadurch Konflikte auftreten, denn Gentoo
benutzt bash Variablen - die dürfen allerdings nur englische alphanumerische
Zeichen enthalten. Um diese Beschränkung zu umgehen, ersetzen wir alle Zeichen,
die keine englischen alphanumerischen Zeichen sind, durch ein <c>_</c> Zeichen.
</p>

<p>
Ein weiterer Nachteil der bash ist der Variableninhalt - einige Zeichen müssen
escaped (durch umgekehrten Schrägstrich geschützt) werden. Dazu setzt man ein
<c>\</c> Zeichen vor das Zeichen, das escaped werden muss. Die folgende Liste
von Zeichen muss auf diese Weise escaped werden: <c>"</c>, <c>'</c> und
<c>\</c>.
</p>

<p>
In diesem Beispiel benutzen wir eine drahtlose ESSID, da diese den größten
Bereich an Zeichen zulässt. Gehen wir davon aus, dass wir die ESSID
<c>My "\ NET</c> verwenden:
</p>

<pre caption="Beispiel für Variablennamen">
<comment>(Dies funktioniert, aber die Domäne ist ungültig)</comment>
dns_domain_My____NET="My \"\\ NET"

<comment>(Obige Anweisung setzt die DNS-Domain auf My "\ NET, wenn eine drahtlose
Netzwerkkarte sich mit dem Zugangspunkt mit der ESSID My "\ NET verbindet.)</comment>
</pre>

</body>
</section>
</sections>
