<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- English CVS Version: 1.8 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/Attic/hb-portage-ebuild.xml,v 1.10 2007/02/12 04:08:44 grahl Exp $ -->

<sections>

<version>1.3</version>
<date>2004-10-24</date>

<section>
<title>Emerge und Ebuild</title>
<body>

<p>
Die <c>ebuild</c> Anwendung ist ein Lower-Level-Interface zum Portage System.
Mit dieser Anwendung können Sie spezifische Aktionen zu einem Ebuild ausführen.
Zum Beispiel können Sie die einzelnen Installationsschritte selbst ausführen.
</p>

<p>
Die Nutzung von <c>ebuild</c> ist in erster Linie für
Entwicklungsangelegenheiten gedacht, weitere Informationen über <c>ebuild</c>
finden Sie daher im <uri
link="http://www.gentoo.org/proj/en/devrel/handbook/handbook.xml">Developers
Handbook</uri>. Dennoch werden wir erklären, welche ebuild Instanzen von
Portage während eines emerge Prozesses eines bestimmte Softwaretitels
aufgerufen werden und wie Sie die Konfiguration Option einiger Ebuilds
aufrufen können.
</p>

</body>
</section>
<section>
<title>Manuelle Installation von Anwendungen</title>
<subsection>
<title>Downloaden der Quellen &amp; Prüfsummen</title>
<body>

<p>
Immer wenn Sie <c>ebuild</c> mit einem Ebuild aufrufen werden die Prüfsummen
aller beinhalteten Dateien mit denen in der zugehörigen <path>Manifest</path>
oder <path>files/digest-&lt;name&gt;-&lt;version&gt;</path> Datei überprüft.
Dies geschieht nachdem die notwendigen Quellen heruntergeladen wurden.
</p>

<p>
Um mit <c>ebuild</c> die Quellen herunterzuladen:
</p>

<pre caption="Herunterladen der Quellen">
# <i>ebuild path/to/ebuild fetch</i>
</pre>

<p>
Wenn die Prüfsumme des Ebuilds mit der im <path>Manifest</path> oder die
Prüfsumme eines Quellenarchives mit der im
<path>files/digest-&lt;package&gt;</path> nicht übereinstimmen erhalten Sie
eine Fehlermeldung wie folgt:
</p>

<pre caption="Fehler bei der Prüfsummenüberprüfung">
!!! File is corrupt or incomplete. (Digests do not match)
>>> our recorded digest: db20421ce35e8e54346e3ef19e60e4ee
>>>  your file's digest: f10392b7c0b2bbc463ad09642606a7d6
</pre>

<p>
Die nachfolgende Zeile erwähnt die fehlerhafte Datei.
</p>

<p>
Wenn Sie sicher sind, dass die Quellen und das Ebuild selbst valide sind,
können Sie die <path>Manifest</path> und <path>digest-&lt;package&gt;</path>
Dateien mit der digest Funktionalität neu generieren:
</p>

<pre caption="Regenerieren von Manifest und digest-&lt;package&gt; Dateien">
# <i>ebuild path/to/ebuild digest</i>
</pre>

</body>
</subsection>
<subsection>
<title>Entpacken der Quellen</title>
<body>

<p>
Um die Quellen in <path>/var/tmp/portage</path> (oder einem anderen Verzeichnis,
welches Sie in <path>/etc/make.conf</path> angegeben haben) zu entpacken, führen
Sie die unpack Funktion von <c>ebuild</c> aus.
</p>

<pre caption="Entpacken der Quellen">
# <i>ebuild path/to/ebuild unpack</i>
</pre>

<p>
Dies führt die src_unpack() Funktion des Ebuilds (standardmäßig bloßes
Entpacken wenn die src_unpack() Funktion undefiniert ist) aus. An diesem Punkt
werden ebenfalls alle notwendigen Patches angewandt.
</p>

</body>
</subsection>
<subsection>
<title>Kompilieren der Quellen</title>
<body>

<p>
Der nächste Schritt innerhalb des Installationsprozesses ist die Kompilierung
der Quellen. Die compile Funktionalität von <c>ebuild</c> übernimmt das
Aufrufen der src_compile() Funktion des Ebuild. Dies beinhaltet ebenfalls die
configure Schritte, sofern zutreffend.
</p>

<pre caption="Kompilieren der Quellen">
# <i>ebuild path/to/ebuild compile</i>
</pre>

<p>
Wenn Sie die Kompilierungsanweisungen anpassen möchten editieren Sie die
src_compile() Funktion des entsprechenden Ebuild. Wenn Sie die Kompilierung von
Hand durchführen möchten, so können Sie Portage mitteilen, dass die Kompilierung
durchgeführt wurde. Führen Sie alle notwendigen Kommandos aus und erstellen
anschließend eine leere Datei namens <path>.compiled</path> im
Arbeitsverzeichnis.
</p>

<pre caption="Portage mitteilen, dass die Kompilierung durchgeführt wurde">
# <i>touch .compiled</i>
</pre>

</body>
</subsection>
<subsection>
<title>Installieren der Dateien in ein temporäres Verzeichnis</title>
<body>

<p>
Im nächsten Schritt installiert Portage alle notwendigen Dateien in ein
temporäres Verzeichnis. Dieses Verzeichnis beinhaltet alle Dateien, die in das
Dateisystem des Live-Systems eingespielt werden sollen. Sie können dies mit der
install Funktionalität von <c>ebuild</c> erreichen, welche die src_install()
Funktion des Ebuild aufruft.
</p>

<pre caption="Installieren der Dateien">
# <i>ebuild path/to/ebuild install</i>
</pre>

</body>
</subsection>
<subsection>
<title>Kopieren der Dateien in das Dateisystem des Live-Systems</title>
<body>

<p>
Der abschließende Schritt ist das Kopieren aller Dateien in das Dateisystem des
Live-System und die Registration aller Dateien im Portage Backend. <c>ebuild</c>
nennt diesen Schritt "qmerge", dieser beinhaltet die folgenden Aktionen:
</p>

<ul>
  <li>Aufführen der pkg_preinst() Funktion sofern diese vorhanden ist</li>
  <li>Kopieren aller Dateien in das Dateisystem des Live-Systems</li>
  <li>Registration aller Dateien im Portage Backend</li>
  <li>Ausführen der pkg_postinst() Funktion sofern diese vorhanden ist</li>
</ul>

<p>
Führen Sie die qmerge Funktionalität von <c>ebuild</c> aus um diese Schritte
durchzuführen:
</p>

<pre caption="Kopieren aller Dateien in das Dateisystem des Live-Systems">
# <i>ebuild path/to/ebuild qmerge</i>
</pre>

</body>
</subsection>
<subsection>
<title>Aufräumen des temporären Verzeichnis</title>
<body>

<p>
Abschließend können Sie mit der clean Funktionalität von <c>ebuild</c> das
temporäre Verzeichnis leeren:
</p>

<pre caption="Leeren des temporären Verzeichnis">
# <i>ebuild path/to/ebuild clean</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Zusätzliche Ebuild Features</title>
<subsection>
<title>Ausführen aller merge-relevanten Kommandos</title>
<body>

<p>
Mit der merge Funktionalität von <c>ebuild</c> können Sie die fetch, unpack,
compile, install und qmerge Kommandos in einem ausführen:
</p>

<pre caption="Software installieren">
# <i>ebuild path/to/ebuild merge</i>
</pre>

</body>
</subsection>
<subsection>
<title>Ausführen von Konfigurationsoptionen</title>
<body>

<p>
Einige Anwendungen enthalten Anweisungen die zur weiteren Konfiguration auf
Ihrem System dienen. Diese Anweisungen können interaktiv und daher nicht
automatisch ausgeführt werden. Um diese Konfigurationsschritte auszuführen,
welche in der (optionalen) config() Funktion aufgeführt sind, benutzen Sie die
config Funktionalität von <c>ebuild</c>:
</p>

<pre caption="Konfiguration einer Anwendung">
# <i>ebuild path/to/ebuild config</i>
</pre>

</body>
</subsection>
<subsection>
<title>Bauen eines (RPM) Paket</title>
<body>

<p>
Sie können Portage benutzen um ein Binärpaket eines Ebuild oder sogar ein RPM
Archiv zu erzeugen. Benutzen Sie die package oder rpm Funktionalität von
<c>ebuild</c> um diese Archive zu erstellen. Es gibt allerdings einige
Unterschiede zwischen disen Funktionalitäten:
</p>

<ul>
  <li>
    Die package Funktionalität ist nahezu mit der merge Funktionalität
    identisch, es werden alle notwendigen Schritte (fetch, unpack, compile,
    install) vor dem Erstellen des Archivs ausgeführt.
  </li>
  <li>
    Die rpm Funktionalität baut, <e>nach</e> dem Ausführen der <c>ebuild</c>
    install Funktion, ein RPM Paket aus den Dateien.
  </li>
</ul>

<pre caption="Erstellen von Paketen">
<comment>(Für ein Portage kompatibles Binärpaket)</comment>
# <i>ebuild path/to/ebuild package</i>

<comment>(Für ein RPM-Paket)</comment>
# <i>ebuild path/to/ebuild rpm</i>
</pre>

<p>
Das RPM Archiv beinhaltet nicht die Abhängigkeitsinformationen des Ebuild.
</p>

</body>
</subsection>
</section>
<section>
<title>Weitere Informationen</title>
<subsection>
<body>

<p>
Werfen Sie einen Blick in folgende Manpages für weitere Informationen über
Portage, die ebuild Anwendung und die Ebuild Dateien:
</p>

<pre caption="Manpages">
$ <i>man portage</i>    <comment>(Portage selbst)</comment>
$ <i>man emerge</i>     <comment>(Das emerge Kommando)</comment>
$ <i>man ebuild</i>     <comment>(Das ebuild Kommando)</comment>
$ <i>man 5 ebuild</i>   <comment>(Die ebuild Datei Datei Syntax)</comment>
</pre>

<p>
Informationen zu Dingen die eher entwicklungsbezogen sind bekommen Sie im
<uri link="/proj/en/devrel/handbook/handbook.xml">Developers Handbook</uri>.
</p>

</body>
</subsection>
</section>
</sections>
