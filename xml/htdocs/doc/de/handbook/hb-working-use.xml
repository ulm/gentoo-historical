<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- English CVS Version: 1.24 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-working-use.xml,v 1.13 2005/04/10 15:27:14 dertobi123 Exp $ -->

<sections>

<version>1.21</version>
<date>2004-10-21</date>

<section>
<title>Was sind USE-Flags?</title>
<subsection>
<title>Die Idee welche hinter USE-Flags steckt</title>
<body>

<p>
Wenn Sie Gentoo installieren (oder irgendeine andere Distribution, oder sogar 
ein anderes Betriebssystem) treffen Sie Entscheidungen abhängig von der Umgebung 
in der Sie arbeiten. Die Einrichtung eines Server unterscheidet sich von der 
Einrichtung einer Workstation. Eine Spiele-Workstation unterscheidet sich von 
einer Workstation für 3D-Rendering.
</p>

<p>
Dies trifft nicht nur bei der Auswahl der Pakete die Sie installieren wollen zu, 
sondern auch welche Funktionen ein Paket unterstützen soll. Wenn Sie OpenGL 
nicht benötigen, warum sollten Sie sich die Mühe machen OpenGL zu installieren 
und OpenGL-Unterstützung in die meisten Ihrer Pakete einzubauen? Wenn Sie KDE 
nicht benutzen wollen, warum sollten Sie sich die Mühe machen Pakete mit 
KDE-Unterstützung zu kompilieren, wenn diese Pakete auch ohne einwandfrei 
funktionieren?
</p>

<p>
Um den Benutzern bei der Enscheidung zu helfen, was installiert/aktiviert werden
soll und was nicht, wollen wir, dass der Benutzer seine Umgebung auf eine 
einfache Weise spezifiziert. Dies zwingt den Benutzer dazu zu entscheiden, was 
er wirklich will und vereinfachtt den Prozess für Portage, unser 
Paketmanagmentsystem, sinnvolle Entscheidungen zu treffen.
</p>

</body>
</subsection>
<subsection>
<title>Definition eines USE-Flag</title>
<body>

<p>
Geben Sie die USE-Flags ein. Solch ein Flag ist ein Schlüsselwort das 
Unterstützungs- und Abhängigkeitsinformationen für ein bestimmtes Konzept 
beinhaltet. Wenn Sie ein bestimmtes USE-Flag definieren wird Portage wissen, 
dass Sie Unterstützung für das gewählte Schlüsselwort wollen. Natürlich 
verändert dies auch die Abhängigkeitsinformationen für ein Paket.
</p>

<p>
Schauen wir uns ein spezifisches Beispiel an: das <c>kde</c> Schlüsselwort. 
Wenn Sie dieses Schlüsselwort nicht in Ihrer <c>USE</c> Variable haben, werden 
alle Pakte die <e>optionale</e> KDE Unterstützung haben <e>ohne</e> KDE 
Unterstützung kompiliert. Alle Pakete die eine <e>optionale</e> KDE Abhängigkeit 
haben werden installiert, <e>ohne</e> dass die KDE Bibliotheken (als 
Abhängigkeit) installiert werden. Wenn Sie das <c>kde</c>  Schlüsselwort 
verwendet haben, dann <e>werden</e> diese Pakete mit KDE Unterstützung 
kompiliert und die KDE Bibliotheken werden als Abhängigkeit installiert.
</p>

<p>
Dadurch, dass Sie das Schlüsselwort korrekt definieren, erhalten Sie ein System 
spezifisch an Ihre Bedürfnisse angepasst.
</p>

</body>
</subsection>
<subsection>
<title>Welche USE-Flags gibt es?</title>
<body>

<p>
Es gibt zwei Arten von USE-Flags: <e>globale</e> und <e>lokale</e> USE-Flags.
</p>

<ul>
  <li>
    Ein <e>globales</e> USE-Flag wird von vielen Paketen systemweit benutzt. 
    Dies ist was die meisten Menschen als ein USE-Flag ansehen.
  </li>
  <li>
    Ein <e>lokales</e> USE-Flag wird von einem einzelnen Paket verwendet um 
    Entscheidungen spezifisch für ein Paket zu treffen.
  </li>
</ul>

<p>
Eine Liste von allen verfügbaren globalen USE-Flags findet man <uri
link="http://www.gentoo.org/dyn/use-index.xml">Online</uri> oder lokal in 
<path>/usr/portage/profiles/use.desc</path>. Hier ein kurzer (<e>sehr</e> 
unvollständiger) Auszug:
</p>

<pre caption="Ein kurzer Auszug der vorhandenen USE-Flags">
gtk     - Adds support for x11-libs/gtk+ (The GIMP Toolkit)
gtk2    - Use gtk+-2.0.0 over gtk+-1.2 in cases where a program supports both.
gtkhtml - Adds support for gnome-extra/gtkhtml
guile   - Adds support for dev-util/guile (interpreter for Scheme)
icc     - Use the Intel C++ Compiler if the package supports it
icc-pgo - Enable PGO data generation or use when use icc.
imap    - Adds support for IMAP
</pre>

<p>
Eine Liste verfügbarer lokaler USE Flags finden Sie lokal in
<path>/usr/portage/profiles/use.local.desc</path>.
</p>

</body>
</subsection>
</section>
<section>
<title>Benutzung von USE-Flags</title>
<subsection>
<title>Deklarieren von ständigen USE-Flags</title>
<body>

<p>
In der Hoffnung, dass Sie überzeugt sind von der Wichtigkeit von USE-Flags, 
werden wir Sie nun informieren wie man USE-Flags deklariert.
</p>

<p>
Wie vorher erwähnt, werden alle USE-Flags innerhalb der <c>USE</c> Variable 
deklariert. Um es für die Benutzer einfach zu machen USE-Flags zu suchen und 
auszuwählen, geben wir schon eine <e>Standardeinstellung</e> für USE vor. Diese 
Einstellung ist eine Sammlung von USE-Flags, von denen wir glauben, dass sie 
häufig von Gentoo Benutzern verwendet werden. Diese Standardeinstellung ist 
deklariert in der <path>/etc/make.profile/make.defaults</path> Datei. Lassen Sie 
uns einen Blick auf diese Standardeinstellung werfen:
</p>

<pre caption="/etc/make.profile/make.defaults USE Variable">
USE="x86 oss apm arts avi berkdb crypt cups encode foomaticdb gdbm gif gpm
  gtk gtk2 imlib jpeg kde gnome libg++ libwww mad mikmod motif mpeg ncurses
  nls oggvorbis opengl pam pdflib png python qt quicktime readline sdl
  slang spell ssl svga tcpd truetype X xml2 xmms xv zlib"
</pre>

<p>
Wie Sie sehen können, enhält diese Variable schon eine ziemlich große Anzahl von 
Schlüsselwörtern. Verändern Sie die <path>/etc/make.profile/make.defaults</path> 
Datei <b>nicht</b> um die <c>USE</c> Variable an Ihre Bedürfnisse anzupassen: 
Veränderungen in dieser Datei werden überschrieben wenn Sie ein Update von 
Portage durchführen! 
</p>

<p>
Sie ändern diese Standardeinstellung durch Hinzufügen oder Entfenen von 
Schlüsselwörtern zur USE-Variable. Dies geschieht global durch die Definierung 
der <c>USE</c> Variable in <path>/etc/make.conf</path>. In dieser Variable fügen 
Sie die zusätzlichen USE-Flags hinzu, die Sie benötigen oder entfernen die 
USE-Flags, die Sie nicht wollen. Das Letztere geschieht durch das Vorsetzen 
eines Minuszeichens ("-") vor das Schlüsselwort. 
</p>

<p>
Zum Beispiel wenn Unterstützung für KDE und QT entfernt werden soll aber 
Unterstützung für ldap hinzugefügt werden soll, kann <c>USE</c> wie folgt in 
<path>/etc/make.conf</path> definiert werden:
</p>

<pre caption="Eine Beispielseinstellung für USE in /etc/make.conf">
USE="-kde -qt ldap"
</pre>

</body>
</subsection>
<subsection>
<title>Deklarieren von USE Flags für einzelne Pakete</title>
<body>

<p>
Machmal möchten Sie ein bestimmtes USE Flag für ein (oder einige) Anwendungen
deklarieren, aber nicht systemweit. Um dies zu ermöglichen müsssen Sie zunächst
das <path>/etc/portage</path> Verzeichnis erstellen (sofern es noch nicht
existiert) und die Datei <path>/etc/portage/package.use</path> editieren.
</p>

<p>
Wenn Sie zum Beispiel <c>berkdb</c> Unterstützung nicht global, aber für
<c>mysql</c> möchten fügen Sie folgendes ein:
</p>

<pre caption="/etc/portage/package.use Beispiel 1">
dev-db/mysql berkdb
</pre>

<p>
Sie können natürlich ein USE Flag für ein Ebuild explizit <e>deaktivieren</e>.
Wenn Sie zum Beispiel keine <c>java</c> Unterstützung in PHP benötigen:
</p>

<pre caption="/etc/portage/package.use Beispiel 2">
dev-php/php -java
</pre>

</body>
</subsection>
<subsection>
<title>Deklarieren von temporären USE-Flags</title>
<body>

<p>
Manchmal wollen Sie eine bestimmte USE-Einstellung nur einmal benutzen. Anstatt 
das <path>/etc/make.conf</path> zweimal editiert wird (um die USE Veränderungen 
anzuwenden und wieder zu entfernen) können Sie einfach die USE-Variable als 
Umgebungsvariable definieren. Behalten Sie im Gedächtnis, dass wenn Sie die
jeweilige Anwendung re-kompilieren oder aktualisieren (entweder explizit oder
als Teil eines Systemupdate) diese Änderung verloren geht.
</p>

<p>
Als ein Beispiel werden wir, während der Installation von Mozilla, temporär 
Java von den USE-Einstellungen entfernen.
</p>

<pre caption="USE als Umgebungsvariable verwenden">
# <i>USE="-java" emerge mozilla</i>
</pre>

</body>
</subsection>
<subsection>
<title>USE-Flags erben</title>
<body>

<p>
Einige Pakete hören nicht nur auf USE-Flags, sondern liefern auch USE-Flags. Wenn 
Sie solch ein Paket installieren, wird das USE-Flag zu Ihren USE Einstellungen 
hinzugefügt. Eine Liste der Pakete, die ein USE-Flag mitliefern, finden Sie in 
<path>/etc/make.profile/use.defaults</path>: 
</p>

<pre caption="ein Auszug aus /etc/make.profile/use.defaults">
gnome           gnome-base/gnome
gtk             x11-libs/gtk+
qt              x11-libs/qt
kde             kde-base/kdebase
motif           x11-libs/openmotif
</pre>

</body>
</subsection>
<subsection>
<title>Reihenfolge</title>
<body>

<p>
Natürlich gibt es eine gewisse Präzedenz darüber welche Einstellung Priorität 
hat über die USE Einstellungen. Sie wollen schliesslich nicht <c>USE="-java"</c> 
deklarieren nur um zu sehen, dass <c>java</c> trotzdem deklariert wurde. Die 
Präferenz für die USE Einstellung ist nach Priorität geordnet (die Erste hat die 
niedrigste Priorität):
</p>

<ol>
  <li>
    Standardeinstellung für USE deklariert in 
    <path>/etc/make.profile/make.defaults</path>
  </li>
  <li>
    Übernommene USE Einstellungen wenn ein Paket von 
    <path>/etc/make.profile/use.defaults</path> installiert wird
  </li>
  <li>
    Benutzerdefinierte USE Einstellungen in <path>/etc/make.conf</path>
  </li>
  <li>
    Benutzerdefinierte USE Einstellungen in <path>/etc/portage/package.use</path>
  </li>
  <li>
    Benutzerdefinierte USE Einstellungen definiert als Umgebungsvariable
  </li>
</ol>

<p>
Um die endgültige <c>USE</c> Einstellungen zu sehen, so wie sie von Portage 
gesehen wird, führen Sie <c>emerge info</c> aus. Dies listet alle relevanten 
Variablen (inklusive der <c>USE</c> Variable) mit dem von Portage verwendeten 
Inhalt auf.
</p>

<pre caption="Ausführen von emerge info">
# <i>emerge info</i>
</pre>

</body>
</subsection>
<subsection>
<title>Das gesamte System an neue USE Flags anpassen</title>
<body>

<p>
Wenn Sie Ihre USE Flags geändert haben und nun Ihr gesamtes System dazu bringen
möchten die neuen USE Flags zu nutzen, benutzen Sie die <c>--newuse</c> Option
von <c>emerge</c>:
</p>

<p>
Zunächst übersetzen Sie Ihr gesamtes System mit neuen USE Flags neu:
</p>

<pre caption="Neu Übersetzen des gesamten System">
# <i>emerge --update --newuse world</i>
</pre>

<p>
Führen Sie nun Portages depclean aus, um Abhängigkeiten aus Ihrem alten System,
die nun durch andere USE Flags ersetzt wurden, zu löschFühren Sie nun Portages
depclean aus, um Abhängigkeiten aus Ihrem alten System, die nun durch andere USE
Flags ersetzt wurden, zu löschen.
</p>

<warn>
Das Ausführen von <c>emerge depclean</c> ist eine gefährliche Operation und
sollte mit dementsprechender Vorsicht vorgenommen werden. Kontrollieren Sie die
angezeigte Liste mit zu löschenden Paketen lieber zweimal um so sicherzustellen,
dass keine notwendigen Pakete gelöscht werden. Im folgenden Beispiel fügen wir
den <c>-p</c> Switch hinzu, um nur eine Liste unbenötigter Pakete angezeigt zu
bekommen, ohne diese jedoch gleichzeitig auch zu entfernen.
</warn>

<pre caption="Entfernen unbenötigter Pakete">
# <i>emerge -p depclean</i>
</pre>

<p>
Wenn depclean beendet ist, führen Sie <c>revdep-rebuild</c> aus, um Anwendungen
die dynamisch gegen Share Objects der deinstallierten Anwendungen gelinkt sind
neu zu kompilieren. <c>revdev-rebuild</c> ist TEil des <c>gentoolkit</c>
Paketes, vergessen Sie nicht dieses zuvor zu installieren.
</p>

<pre caption="Ausführen von revdep-rebuild">
# <i>revdep-rebuild</i>
</pre>

<p>
Nachdem Sie dies alles ausgeführt haben, benutzt Ihr System die neuen USE Flag
Einstellungen.
</p>

</body>
</subsection>
</section>
<section>
<title>Paket spezifische USE-Flags</title>
<subsection>
<title>Betrachten vorhandener USE-Flags</title>
<body>

<p>
Nehmen wir als Beispiel <c>mozilla</c>: Auf welche USE-Flags hört es? Um dies
herauszufinden benutzen wir <c>emerge</c> mit der <c>--pretend</c> und der
<c>--verbose</c> Option:
</p>

<pre caption="Betrachten der benutzten USE-Flags">
# <i>emerge --pretend --verbose mozilla</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild  N    ] net-www/mozilla-1.5-r1 +java +crypt -ipv6 -gtk2 +ssl +ldap 
+gnome -debug +mozcalendar -mozaccess -mozxmlterm -moznoirc -moznomail
-moznocompose -moznoxft 
</pre>

<p>
<c>emerge</c> ist nicht das einzige Hifsmittel für diesen Job. In der Tat haben 
wir ein Werkzeug, ausgelegt auf Paketinformationen, genannt <c>etcat</c>, 
welches im <c>gentoolkit</c> Paket enthalten ist. Installieren Sie zunächst 
<c>gentoolkit</c>:
</p>

<pre caption="Installieren von gentoolkit">
# <i>emerge gentoolkit</i>
</pre>

<p>
Führen Sie nun <c>etcat</c> mit dem <c>uses</c> Argument aus um die USE-Flags 
eines bestimmten Paketes zu betrachten. Zum Beispiel für das <c>gnumeric</c> 
Paket:
</p>

<pre caption="Benutzung von etcat zur Betrachtung verwendeter USE-Flags">
# <i>etcat uses gnumeric</i>
[ Colour Code : <i>set</i> <comment>unset</comment> ]
[ Legend      : (U) Col 1 - Current USE flags        ]
[             : (I) Col 2 - Installed With USE flags ]

 U I [ Found these USE variables in : app-office/gnumeric-1.2.0 ]
 - - <comment>libgda</comment>  : Adds GNU Data Access (CORBA wrapper) support for gnumeric
 - - <comment>gnomedb</comment> : unknown
 + + <i>python</i>  : Adds support/bindings for the Python language
 + + <i>bonobo</i>  : Adds support for gnome-base/bonobo (Gnome CORBA interfaces)
</pre>

</body>
</subsection>
</section>
</sections>
