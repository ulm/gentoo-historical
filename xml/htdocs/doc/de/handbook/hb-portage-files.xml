<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- English CVS Version: 1.15 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-portage-files.xml,v 1.11 2007/03/25 23:04:19 grahl Exp $ -->

<sections>

<abstract>
Wenn Sie Portage ein wenig näher kennenlernen wollen sollten Sie wissen, wo
welche Daten und Dateien abgelegt werden.
</abstract>

<version>1.9</version>
<date>2007-03-25</date>

<section>
<title>Portage Dateien</title>
<subsection>
<title>Konfigurationsrichtlinien</title>
<body>

<p>
Portage kommt mit einer Standardkonfiguration gespeichert in
<path>/etc/make.globals</path> daher. Wenn Sie einen Blick auf die Datei werfen,
werden Sie feststellen, dass sämtliche Portage Konfiguration durch Variablen
durchgeführt wird. Welche Variablen Portage kennt und was diese bedeuten
beschreiben wir später.
</p>

<p>
Da viele Konfigurationsanweisungen sich zwischen verschiedenen Architekturen
unterscheiden hat Portage auch Standardkonfigurationsdateien welche Teile
Ihres Profils sind. Durch den symbolischen Link <path>/etc/make.profile</path>
wird auf Ihr Profil verwiesen. Die Einstellungen von Portage werden durch die
<path>make.defaults</path> Dateien Ihres Profils und aller übergeordneten
Profile gesetzt. Wir erklären später mehr über Profile und das
<path>/etc/make.profile</path> Verzeichnis.
</p>

<p>
Wenn Sie planen Änderungen an Konfigurationsvariablen vorzunehmen verändern Sie
<e>nicht</e> <path>/etc/make.globals</path> oder <path>make.defaults</path>.
Anstelle dessen benutzen Sie <path>/etc/make.conf</path>, welche eine
Vorrangstellung gegenüber den vorher genannten Dateien hat. Sie finden ebenfalls
eine <path>/etc/make.conf.example</path>. Wie der Name impliziert ist dies eine
Beispieldatei, Portage greift nicht auf diese Datei zu.
</p>

<p>
Sie können eine Portage Konfigurationsvariable auch als Umgebungsvariable
deklarieren, wir empfehlen dies jedoch nicht.
</p>

</body>
</subsection>
<subsection>
<title>Profile spezifische Informationen</title>
<body>

<p>
Wir sind bereits einem <path>/etc/make.profile</path> Verzeichnis über den Weg
gelaufen. Gut, dies ist nicht wirklich ein Verzeichnis, aber ein symbolischer
Link zu einem Profile, standardmäßig eines innerhalb von von
<path>/usr/portage/profiles</path>. Sie können Profile selbst erstellen und
diese auch ablegen wo Sie mögen, Sie müssen lediglich den Symlink anpassen.
</p>

<p>
Ein Profile beinhaltet Architektur-spezifische Informationen für Portage, wie
eine Liste aller Pakete die zum System gehören, eine Liste von Paketen die in
diesem Profil nicht funktionieren (oder maskiert sind).
</p>

</body>
</subsection>
<subsection>
<title>Benutzerspezifische Konfiguration</title>
<body>

<p>
Wenn Sie das Verhalten von Portage bezüglich der Installation von Software
beeinflussen wollen, führt kein Weg am Editieren von Dateien in
<path>/etc/portage</path> vorbei. Es wird Ihnen <e>wärmstens</e> empfohlen die
Dateien in <path>/etc/portage</path> zu benutzen und es ist <e>wärmstens</e>
empfohlen das Verhalten von Portage nicht durch Umgebungsvariablen zu
beeinflussen!
</p>

<p>
Innerhalb von <path>/etc/portage</path> können Sie die folgenden Dateien
erstellen:
</p>

<ul>
  <li>
    <path>package.mask</path> listet alle Pakete auf, die Sie niemals
    installieren wollen
  </li>
  <li>
    <path>package.unmask</path> listet alle Pakete, die Sie installieren wollen,
    obwohl Gentoo Entwickler aus guten Gründen davon abraten
  </li>
  <li>
    <path>package.keywords</path> listet alle Pakete, die Sie installieren
    möchten, obwohl dieses Paket (noch) nicht für Ihre Architektur freigegeben
    wurde
  </li>
  <li>
    <path>package.use</path> listet alle USE Flags, die Sie für ein bestimmtes
    Paket und nur für dieses eine Paket verwenden möchten
  </li>
</ul>

<p>
Weitere Informationen über das <path>/etc/portage</path> Verzeichnis und eine
vollständige Liste von möglichen Dateien, die Sie erstellen können finden Sie in
der Portage Manpage:
</p>

<pre caption="Lesen der Portage Manpage">
$ <i>man portage</i>
</pre>

</body>
</subsection>
<subsection>
<title>Ändern von Portage Datei- &amp; Verzeichnisorten</title>
<body>

<p>
Die zuvor erwähnten Konfigurationsdateien können nicht irgendwo anders abgelegt
werden, Portage wird nach diesen Dateien immer an diesen genauen Stellen
suchen. Portage benutzt jedoch zahlreiche weitere Orte für zahlreiche
verschiedene Zwecke: Build-Verzeichnis, Quellcode Ablage, Portage Tree, ...
</p>

<p>
Alle diese Zwecke haben bekannte Standardorte, diese können jedoch nach Ihrem
persönlichen Geschmack in <path>/etc/make.conf</path> verändert werden. Der
Rest dieses Kapitels erklärt Ihnen welche speziellen Orte Portage benutzt und
wie Sie den Ort abändern können.
</p>

<p>
Dieses Dokument ist dennoch nicht als Referenz gedacht. Wenn Sie eine Datei
suchen, die alles umfasst konsultieren Sie die <path>make.conf</path> Manpages:
</p>

<pre caption="Lesen der portage und make.conf Manpages">
$ <i>man portage</i>
$ <i>man make.conf</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Ablegen von Dateien</title>
<subsection>
<title>Der Portage-Tree</title>
<body>

<p>
Der Portage Tree befindet sich standardmäßig in <path>/usr/portage</path>. Dies
wird durch die PORTDIR Variable definiert. Wenn Sie den Portage Tree irgendwo
anders (durch Anpassen der PORTDIR Variable) ablegen, vergessen Sie nicht den
<path>/etc/make.profile</path> Symlink anzupassen.
</p>

<p>
Wenn Sie die PORTDIR Variable anpassen, möchten Sie vermutlich auch die
folgenden Variablen (PKGDIR, DISTDIR, RPMDIR) anpassen, da diese den PORTDIR
Wechsel nicht beachten.
</p>

</body>
</subsection>
<subsection>
<title>Vorkompilierte Pakete</title>
<body>

<p>
Auch wenn Portage vorkompilierte Binärpakete nicht per default nutzt gibt es
eine hervorragende Unterstützung für diese. Wenn Sie Portage anweisen
Binärpakete zu erstellen werden diese in <path>/usr/portage/packages</path>
abgelegt. Dieser Ort wird durch die PKGDIR Variable definiert.
</p>

</body>
</subsection>
<subsection>
<title>Quellcode</title>
<body>

<p>
Quellcode von Anwendungen wird in <path>/usr/portage/distfiles</path> abgelegt.
Dieser Ort wird durch die DISTDIR Variable festgeelgt.
</p>

</body>
</subsection>
<subsection>
<title>RPM-Dateien</title>
<body>

<p>
Auch wenn Portage mit RPM-Archiven nichts anfangen kann, Portage kann diese
durch das <c>ebuild</c> Kommando erstellen (sehen Sie <uri
link="?part=3&amp;chap=6">Die ebuild Anwendung</uri>). Standardmäßig werden
RPM-Archive in <path>/usr/portage/rpm</path> abgelegt. Dieses Verhalten wird
durch die RPMDIR-Variable bestimmt.
</p>

</body>
</subsection>
<subsection>
<title>Portage-Datenbank</title>
<body>

<p>
Portage speichert den Stand Ihres Systems (welche Pakete installiert sind,
welche Dateien zu welchem Paket gehören, ...) in <path>/var/db/pkg</path>.
Editieren Sie diese Dateien <e>nicht</e> per Hand! Es könnte Portages Wissen
über Ihr System verwüsten.
</p>

</body>
</subsection>
<subsection>
<title>Portage-Cache</title>
<body>

<p>
Der Portage-Cache (mit Modifikationszeitpunkt, virtuals, Informationen zum
Abhängigkeitsbaum, ...) wird in <path>/var/cache/edb</path> gespeichert.
Dieser Ort ist wirklich ein Cache: Sie können ihn ausleeren, wenn keine
Portage-basierenden Anwendungen momentan laufen.
</p>

</body>
</subsection>
</section>
<section>
<title>Software übersetzen</title>
<subsection>
<title>Temporäre Portage-Dateien</title>
<body>

<p>
Portage lagert seine temporären Dateien in <path>/var/tmp</path>. Dies wird
durch die PORTAGE_TMPDIR Variable deklariert.
</p>

<p>
Wenn Sie die Variable PORTAGE_TMPDIR ändern, möchten Sie vermutlich auch die
folgenden Variablen ändern, da diese die Änderung an der PORTAGE_TMPDIR
Variable nicht übernehmen: BUILD_PREFIX.
</p>

</body>
</subsection>
<subsection>
<title>Build-Verzeichnis</title>
<body>

<p>
Portage erstellt spezifische Build-Verzeichnisse für jedes Paket, das
installiert wird, in <path>/var/tmp/portage</path>. Dieser Ort wird durch die
Variable BUILD_PREFIX definiert.
</p>

</body>
</subsection>
<subsection>
<title>Live-Dateisystem Ort</title>
<body>

<p>
Standardmäßig installiert Portage alle Dateien in das aktuelle Dateisystem
(<path>/</path>), Sie können dies jedoch durch setzen der
ROOT-Umgebungsvariable ändern. Dies ist nützlich, wenn Sie neue Build-Images
erstellen wollen.
</p>

</body>
</subsection>
</section>
<section>
<title>Protokollierungsfunktionen</title>
<subsection>
<title>Protokollierung von Ebuilds</title>
<body>

<p>
Portage kann für jedes Ebuild ein Protokolldatei anlegen, falls die Variable auf
ein PORT_LOGDIR-Verzeichnis zeigt, in dem der Benutzer portage Schreibrechte
hat. Standardmäßig ist diese Variable nicht gesetzt. Wenn Sie PORT_LOGDIR nicht
setzen, werden Sie keine Erstellungsprotokolle mit dem aktuellen Protokollsystem
erhalten, jedoch könnten Sie einige Nachrichten des neuen <c>elog</c> erhalten.
Wenn Sie PORT_LOGDIR gesetzt haben und elog verwernden, werden Sie
Erstellungsprotokolle und jegliche Protokolle, die von elog gespeichert werden
(wie folgt erklärt), erhalten
</p>

<p>
Portage bietet eine fein abgestimmte Kontrolle über die Protokollierung durch
die Verwendung von <c>elog</c>:
</p>

<ul>
  <li>
    PORTAGE_ELOG_CLASSES: Hier legen Sie fest welche Art von Nachrichten
    protokolliert werden sollen. Sie können jegliche, durch Leerzeichen
    getrennte, Kombination von <c>info</c>, <c>warn</c>, <c>error</c> und
    <c>log</c> verwenden.
    <ul>
      <li>
        info: Protokolliert "einfo" Meldungen, die von einem Ebuild ausgegeben
        werden.
      </li>
      <li>warn: Protokolliert "ewarn" Meldungen, die von einem Ebuild ausgegeben
        werden.
      </li>
      <li>
        error: Protokolliert "eerror" Meldungen, die von einem Ebuild ausgegeben
        werden.
      </li>
      <li>
        log: Protokolliert die "elog" Meldungen, welche sich in einigen Ebuilds
        finden.
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_SYSTEM: Dies wählt das/die Modul(e) um die Protokollmeldungen
    zu bearbeiten. Wenn es leer bleibt wird Protokollierung deaktiviert. Sie
    können jegliche, durch Leerzeichen getrennte, Kombination von <c>save</c>,
    <c>custom</c>, <c>syslog</c> und <c>mail</c> verwenden. Sie müssen
    wenigstens ein Modul auswählen um elog zu verwenden.
    <ul>
      <li>
        save: Dies speichert ein Protokoll pro Paket in
        <path>$PORT_LOGDIR/elog</path>, oder <path>/var/log/portage/elog</path>,
        wenn $PORT_LOGDIR nicht gesetzt ist.
      </li>
      <li>
        custom: Übergibt alle Nachrichten an einen, vom Benutzer in
        $PORTAGE_ELOG_COMMAND spezifizierten, Befehl. Dies wird später
        erläutert.
      </li>
      <li>
        syslog: Sendet alle Nachrichten an den installierten
        System-Protokollierer.
      </li>
      <li>
        mail: Übergibt alle Nachrichten an einen, vom Benutzer in
        $PORTAGE_ELOG_MAILURI spezifizierten, Mailserver. Dies wird später
        erläutert. Die Mail-Funktionen von elog benötigen
        &gt;=<c>portage-2.1.1</c>.
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_COMMAND: Dies wird nur verwendet, wenn das Modul <c>custom</c>
    aktiviert ist. Hier geben Sie einen bestimmten Befehl an, der die
    Protokollmeldungen bearbeitet. Beachten Sie, dass Sie von zwei Variablen
    Gebrauch machen können: ${PACKAGE} ist der Paketname und die Version,
    während ${LOGFILE} der absolute Pfad zur Protokolldatei ist. Hier ist
    eine mögliche Anwendung:
    <ul>
      <li>
        PORTAGE_ELOG_COMMAND="/pfad/zum/protokollierer -p '\${PACKAGE}' -f '\${LOGFILE}'"
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_MAILURI: Dies enthält Einstellungen für das Modul <c>mail</c>,
    wie zum Beispiel Addresse, Benutzer, Passwort, Mailserver und Portnummer.
    Die Standardeinstellung ist "root@localhost localhost".
  </li>
  <li>
    Hier ist ein Beispiel für einen SMTP-Server, der eine Authentifizierung
    basierend auf Benutzername und Passwort an einem bestimmten Port benötigt
    (der Standardport ist 25):
    <ul>
      <li>
        PORTAGE_ELOG_MAILURI="benutzer@eine.domain
        benutzername:passwort@smtp.eine.domain:995"
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_MAILFROM: Erlaubt es Ihnen die "Von" Adresse der Protokollmails
    zu setzen. Der Standard ist Portage, wenn nicht gesetzt.
  </li>
  <li>
    PORTAGE_ELOG_MAILSUBJECT: Erlaubt es Ihnen eine Betreffzeile für die
    Protokollmails zu setzen. Beachten Sie, dass Sie zwei Variablen verwenden
    können: ${PACKAGE} wird den Namen des Pakets und die Version anzeigen,
    während ${HOST}  der Fully Qualified Domain-Name des Hosts ist, auf dem
    Portage ausgeführt wird.
  </li>
  <li>
    Hier ist eine mögliche Anwendung:
    <ul>
      <li>
        PORTAGE_ELOG_MAILSUBJECT="Paket \${PACKAGE} wurde auf \${HOST} mit
        mit emerge installiert und produzierte einige Meldungen
      </li>
    </ul>
  </li>
</ul>

<impo>
Wenn Sie <c>enotice</c> mit Portage-2.0.* verwendet haben, müssen Sie enotice
komplett entfernen, da es nicht mit elog kompatibel ist.
</impo>

</body>
</subsection>
</section>
</sections>
