<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- English CVS Version: 1.11 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/2007.0/hb-install-ppc-bootloader.xml,v 1.1 2007/07/25 17:06:16 grahl Exp $ -->

<sections>

<version>8.0</version>
<date>2007-05-07</date>

<section>
<title>Eine Bootloader auswählen</title>
<subsection>
<title>Einleitung</title>
<body>

<p>
Nun, da Ihr Kernel konfiguriert und kompiliert ist, benötigen Sie einen
<e>Bootloader</e> um Ihre neue Linux Installation zu starten. Der
<e>Bootloader</e>, den Sie verwenden werden, entscheidet sich dadurch, was
für einen PPC Rechner Sie besitzen.
</p>

<p>
Wenn sie einen NewWorld Apple oder IBM Rechner verwenden, müssen Sie <uri
link="#yaboot">yaboot</uri> verwenden. OldWorld Apple Rechner haben zwei
Möglichkeiten: <uri link="#bootx">BootX </uri> (empfohlen) und <uri
link="#quik">quik</uri>. Der Pegasos benötigt keinen Bootloader, aber es wird
der <uri link="#bootcreator">Bootcreator</uri> zur Erstellung eines
SmartFirmware Bootmenüs benötigt.
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>Standard: Die Benutzung von yaboot</title>
<subsection>
<title>Einleitung</title>
<body>

<impo>
yaboot kann nur auf NewWorld Apple und IBM Systemen verwendet werden!
</impo>

<p>
Damit die Bootgeräte gefunden werden können, benötigt yaboot zunächst Zugriff
auf die Device-Nodes welche von udev beim Hochfahren und vom sysfs-Dateisystem
erstellt werden. Diese zwei Dateisysteme finden sich jeweils in
<path>/dev</path> und <path>sys</path>. Um dies zu erreichen müssen Sie diese
Dateisysteme vom Root der Installations-CD auf die Mountpunkte
<path>/dev</path> und <path>/sys</path> innerhalb des chroot mit "bind" mounten.
Wenn sie diese Dateisysteme bereits mit "bind" gemountet haben besteht kein
Grund dies noch einmal zu tun.
</p>

<pre caption="Mounten des device- und sysfs-Dateisystems mit der bind Funktion">
# <i>exit </i> # dies verlässt das chroot
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>mount -o bind /sys /mnt/gentoo/sys</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>

<p>
Um yaboot einzurichten können Sie <c>yabootconfig</c> verwenden um damit
automatisch eine Konfigurationsdatei für sich zu erstellen. Wenn Sie Gentoo
auf einem G5 installieren (wo <c>yabootconfig</c> nicht immer funktioniert)
oder Sie von Firewire oder USB booten wollen, müssen Sie yaboot manuell
konfigurieren.
</p>

<note>
Sie werden die yaboot.conf Datei manuell editieren müssen, wenn Sie genkernel
verwenden, selbst wenn yabootconfig verwendet wird. Der Kernel-Image Abschnitt
sollte wie folgt modifiziert werden (mit vmlinux und initrd als Namen für den
Kernel und das initrd-Images):
</note>

<pre caption="Bootargumente für genkernel zu yaboot.conf hinzufügen">
<comment>###########################################################
## Dieser Abschnitt kann vervielfältigt werden, wenn Sie mehr als
## einen Kernel oder Satz von Bootoptionen haben. Ersetzen Sie
## das Image und initrd mit dem exakten Dateinamen Ihres Kernels
## und Ihres initrd-Images.
###########################################################</comment>
image=/boot/kernel-genkernel-ppc-<keyval id="kernel-gentoo"/>
  label=Linux
  root=/dev/ram0
  partition=3
  initrd=/boot/initramfs-genkernel-ppc-<keyval id="kernel-gentoo"/>
  <comment># Sie können weitere Kernelaugmente wie
  # rootdelay=10 für einen USB/Firewire Boot hinzufügen</comment>
  read-only
  append="real_root=/dev/hda3 init=/linuxrc"
<comment>##########################################################</comment>
</pre>

<ul>
  <li><uri link="#yabootconfig">Standard: Benutzen von yabootconfig</uri></li>
  <li>
    <uri link="#manual_yaboot">Alternativ: yaboot manuell konfigurieren</uri>
  </li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig">
<title>Standard: Die Benutzung von yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> wird die Partitionen auf Ihrem System automatisch erkennen
und wird Dual- und Dreifachbootkombinationen mit Linux, Mac OS und Mac OS X
einrichten.
</p>

<p>
Um  <c>yabootconfig</c> benutzen zu können, muss Ihr Laufwerk eine
Apple_Bootstrap Partition haben und <path>/etc/fstab</path> muss konfiguriert
sein (beachten Sie, dass die Bootstrap-Partition <e>nicht</e> in Ihrer fstab
aufgeführt sein sollte). Diese Schritte sollten bereits erledigt sein,
überprüfen Sie aber <path>/etc/fstab</path> bevor Sie fortfahren. Installieren
Sie jetzt <c>yaboot</c>.
</p>

<pre caption = "Installieren von Yaboot mit GRP">
# <i>emerge --usepkg yaboot</i>
</pre>

<p>
Verlassen Sie nun die chroot Umgebung und führen Sie <c>yabootconfig --chroot
/mnt/gentoo</c> aus. Zuerst wird das Programm den Pfad der Bootstrap-Partition
bestätigen. Wenn Sie das vorgeschlagene Partitionsschema verwenden sollte sich
Ihre Bootstrap-Partition auf /dev/hda2 befinden. Geben Sie <c>Y</c> ein, wenn
die Ausgabe korrekt ist. Falls nicht, überprüfen Sie erneut
<path>/etc/fstab</path>. yabootconfig wird dann Ihre Systemkonfiguration
überprüfen, <path>/etc/yaboot.conf</path> erstellen und <c>mkofboot</c> für Sie
ausführen. <c>mkofboot</c> wird gebraucht, um die Apple_Bootstrap-Partition zu
formatieren und dorthinein die yaboot-Konfigurationsdatei zu installieren.
Betreten Sie hiernach wieder die chroot-Umgebung.
</p>

<pre caption="chroot-Umgebung erneut betreten">
# <i> chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Sie sollten den Inhalt von <path>/etc/yaboot.conf</path> überprüfen. Wenn Sie
Veränderungen an <path>/etc/yaboot.conf</path> vornehmen (wie die
Standard-/Boot OS Einstellung zu setzen) stellen Sie sicher, dass Sie
<c>ybin -v</c> erneut ausführen um die Veränderungen auf die Apple_Bootstrap
Partition anzuwenden. Jedes Mal wenn Sie eine Änderungen an yaboot.conf, wie das
Testen eines neuen Kernels, vornehmen, müssen Sie daran denken <c>ybin -v</c>
erneut auszuführen um die Bootstrap-Partition zu aktualisieren.
</p>

<p>
Fahren Sie nun mit dem <uri link="#reboot">Rebooten des Systems</uri> fort.
</p>

</body>
</subsection>
<subsection id="manual_yaboot">
<title>Alternativ: Die manuelle yaboot Konfiguration</title>
<body>

<p>
Installieren Sie zunächst <c>yaboot</c> auf Ihrem System:
</p>

<pre caption = "Installieren von yaBoot mit GRP">
# <i>emerge --usepkg yaboot</i>
</pre>

<p>
Eine Beispiels <path>yaboot.conf</path> Datei folgt, aber Sie werden diese
Ihren Bedürfnissen anpassen müssen. G5 Benutzer und Benutzer, welche von
Firewire oder USB booten sollten sich im klaren sein, dass Ihre Festplatten
als SCSI Festplatten vom Linux Kernel angesehen werden. Daher werden Sie
<path>/dev/hda</path> durch <path>/dev/sda</path> ersetzen müssen.
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## Führen Sie: "man yaboot.conf" für Details aus. Machen Sie keine
## Änderungen bevor Sie das nicht getan haben!
## Siehe auch: /usr/share/doc/yaboot/examples für Beispielkonfigurationen
##
## Für ein Dualbootmenü fügen Sie eine oder mehrere dieser hinzu:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## Die Bootstrap Partition:</comment>

boot=/dev/hda2

<comment>## ofboot ist die Art wie Open Firmware die Bootstrap-Partition angibt.
## Wenn diese nicht angegeben ist schlägt yaboot auf dem G5 und einigen G4 fehl (es
## sei denn Sie geben dem mkofboot/ybin Programm die notwendigen Argumente mit).
## hd:X bedeutet /dev/sdaX (oder /dev/hdaX).
##
## G5 Benutzer sollten diese Zeile entkommentieren!

#ofboot=hd:2

## Benutzer, welche von Firewire booten, sollten etwas wie diese Zeile verwenden:
# ofboot=fw/node/sbp-2/disk@0:

## Benutzer, welche von USB booten, sollten etwas wie diese Zeile verwenden:
# ofboot=usb/disk@0:

## hd: ist kurz für die erste Festplatte, welche Open Firmware sieht</comment>
device=hd:

<comment>## Firewire und USB Benutzer werden den gesamten OF Gerätenamen angeben müssen
## Dieser findet sich durch verwenden von ofpath, was in yaboot enthalten ist.

# device=fw/node@0001d200e00d0207/sbp-2@c000/disk@0:
</comment>

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Dieser Abschnitt kann doppelt verwendet werden, wenn Sie mehr als einen
## Kernel oder Satz von Bootoptionen haben. Ersetzen Sie die Image-Variable
## durch den exakten Dateinamen Ihres Kernels
###########################################################</comment>
image=/boot/<keyval id="kernel-name"/>
  label=Linux
  root=/dev/hda3
  partition=3
<comment>#  append="rootdelay=10"  # Notwendig für booten von Firewire/USB</comment>
  read-only
<comment>##################

## G5 und einige G4 Benutzer sollten
##   macos=hd:13
##   macosx=hd:12
## anstelle der Beispielwerte setzen.</comment>

macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Sobald <path>yaboot.conf</path> eingerichtet ist, führen Sie
<c>mkofboot -v</c> aus um die Apple_bootstrap Partition zu formatieren und
die Einstellungen dort zu installieren. Wenn Sie yaboot.conf ändern, nachdem
Sie die Apple_bootstrap Partition erstellt haben, können Sie die Einstellungen
aktualisieren indem Sie <c>ybin -v</c> ausführen.
</p>

<pre caption="Einrichten der Bootstrap-Partition">
# <i>mkofboot -v</i>
</pre>

<p>
Für weitere Informationen über yaboot werfen Sie einen Blick auf das<uri
link="http://penguinppc.org/bootloaders/yaboot">yaboot Projekt</uri>. Fahren
Sie nun mit dem <uri link="#reboot">Rebooten des Systems</uri> fort.
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>Alternativ: BootX</title>
<body>

<impo>
BootX kann nur auf OldWorld Apple Systemen mit MacOS 9 oder älter verwendet
werden!
</impo>

<p>
Da BootX Linux aus MacOS heraus bootet, muss der Kernel von der Linux Partition
auf die MacOS Partition kopiert werden. Mounten Sie zuerst die MacOS Partition
von außerhalb des chroot. Verwenden Sie <c>mac-fdisk -l</c> um die richtige
MacOS Partitionsnummer zu finden. Dieses Beispiel verwendet sda6. Sowie die
Partition eingebung ist, kopieren wir den Kernel in den Systemordner, so dass
BootX ihn finden kann.
</p>

<pre caption="Kopieren des Kernels auf die MacOS Partition">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux "/mnt/mac/System Folder/Linux Kernels/<keyval id="kernel-name"/>"</i>
</pre>

<p>
Wenn genkernel verwendet wird, dann müssen sowohl der Kernel als auch das
initrd auf die MacOS Partition kopiert werden.
</p>

<pre caption="Kopieren des genkernel Kernels und initrd auf die MacOS Partition">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-genkernel-ppc-<keyval id="kernel-gentoo"/> "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initramfs-genkernel-ppc-<keyval id="kernel-gentoo"/> "/mnt/mac/System Folder"</i>
</pre>

<p>
Nun da der Kernel hinüber kopiert wurde, muss für die Einrichtung von BootX
neu gestartert werden.
</p>

<pre caption="Unmounten aller Partitionen und Neustart">
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo/sys /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Bitte vergessen Sie nicht die bootbare CD zu entfernen.  Sonst wird wieder die
CD gebootet anstatt MacOS.
</p>

<p>
Sobald Ihre Maschine MacOS gebootet hat, öffnen Sie das BootX Control Panel.
Wenn Sie genkernel nicht verwenden, wählen Sie <c>Options</c> und deaktivieren
Sie <c>Use specified RAM disk</c>. Wenn Sie genkernel verwenden, stellen Sie
sicher, dass Sie das genkernel initrd anstatt des initrd der Installations-CD
selektiert ist. Wenn Sie genkernel nicht verwenden gibt es nun die Option,
die Linux Root Festplatte und Partition des Rechners auszuwählen. Geben Sie
die entsprechenden Werte ein. Abhängig von der Konfiguration müssen unter
Umständen noch weitere Bootargumente angewandt werden.
</p>

<p>
BootX kann konfiguriert werden, um Linux beim Booten zu starten. Wenn Sie dies
tun sehen Sie, wird der Computer in MacOS starten un dann während des Starts
BootX laden, was wiederum Linux startet. Auf der <uri
link="http://penguinppc.org/bootloaders/bootx">BootX Webseite</uri> finden Sie
weitere Informationen.
</p>

<impo>
Stellen Sie sicher, dass Sie Unterstützung für HFS und HFS+ Dateisysteme in
Ihrem Kernel haben, ansonsten werden sie nicht in der Lage sein Ihren Kernel
auf der MacOS-Partition zu ändern oder zu aktualisieren.
</impo>

<p>
Rebooten Sie nun wieder und fahren Sie mit <uri
link="?part=1&amp;chap=11">Abschließen der Gentoo Installation</uri> fort.
</p>

</body>
</section>
<section id="quik">
<title>Alternativ: quik</title>
<body>

<p>
OldWorld Macs können mit der Hilfe von quik ohne MacOS gestartet werden. Jedoch
wird es nicht sehr gut unterstützt und hat einige Makel. Wenn Sie die Wahl
haben, empfehlen wir Ihnen BootX zu verwenden, da es viel verlässlicher und
einfacher einzurichten ist, als quik.
</p>

<p>
Zuerst muss quick installiert werden:
</p>

<pre caption="quik mit emerge und GRP installieren">
# <i>emerge --usepkg quik</i>
</pre>

<p>
Als nächstes muss es eingerichtet werden. Editieren Sie
<path>/etc/quik.conf</path> und setzen Sie Ihr Image auf den Kernel, welcher auf
Ihre Boot-Parition herüber kopiert wurde.
</p>

<pre caption="Konfiguration von quik.conf">
# Example of quik.conf
init-message = "Gentoo 2007.0\n"
<comment># Dies ist die Boot-Partition</comment>
partition = 2
root = /dev/hda4
timeout = 30
default = gentoo
<comment># Dies ist Ihr Kernel</comment>
image = /<keyval id="kernel-name"/>
  label = gentoo
</pre>

<p>
Ihre quik.conf Datei <e>muss</e> sich auf derselben Platte wie die Boot-Images
von quik befinden. Sie kann auf einer anderen Partition sein, muss aber auf
derselben Festplatte sein. Es wird jedoch empfohlen sie auf Ihre
Boot-Partition zu verschieben.
</p>

<pre caption="Verschieben von quik.conf nach /boot">
# <i>mv /etc/quik.conf /boot/quik.conf</i>
</pre>

<p>
Wir werden nun Ihre Bootvariable setzen, so dass quik beim Boot geladen wird.
Um dies zu schaffen wird eine Programm mit dem Namen <c>nvsetenv</c> verwendet.
Die Variablen, die es zu setzen gilt, sind von Rechner zu Rechner verschieden
und es ist am besten die
<uri link="http://penguinppc.org/bootloaders/quik/quirks.php">Macken</uri>
Ihres Rechners aufzuspüren, bevor man diesen Versuch unternimmt.
</p>

<pre caption="Setting the boot variables">
# <i>nvsetenv auto-boot true</i> <comment># Auf false setzen, wenn Sie in OF booten wollen, nicht alle Modelle können
  die OF Ausgabe anzeigen</comment>
# <i>nvsetenv output-device video</i> <comment># Siehe die Macken-Seite, hier gibt es zahlreiche Variationen</comment>
# <i>nvsetenv input-device kbd</i>
# <i>nvsetenv boot-device scsi/sd@1:0</i> <comment># Für SCSI</comment>
# <i>nvsetenv boot-device ata/ata-disk@0:0</i> <comment># Für ATA</comment>
# <i>nvsetenv boot-file /boot/<keyval id="kernel-name"/> root=/dev/hda4</i> <comment>Zuerst kommt der Pfad zum Kernel, dann folgt die Root-Partition.   Sie können weitere Kerneloption ans Ende dieser Zeile anfügen.</comment>
# <i>nvsetenv boot-command boot</i> <comment># Setzen Sie dies um MacOS zu verabschieden und Linux zu booten</comment>
</pre>

<note>
Es ist auch möglich Ihre Bootvariablen von MacOS aus zu verändern. Abhängig
vom Modell sollte entweder <uri
link="http://penguinppc.org/bootloaders/quik/BootVars.sit.hqx">bootvars</uri>
oder <uri
link="ftp://ftp.apple.com/developer/macosxserver/utilities/SystemDisk2.3.1.smi.bin">Apple
System Disk</uri> verwendet werden.Betrachten Sie bitte die oben genannte
Macken-Seite für weitere Informationen.
</note>

<p>
Nun da wir Ihren Rechner für den Boot eingerichtet haben, müssen wir
sicherstellen, dass die Boot-Images korrekt installiert sind. Führen Sie
<c>quik -v -C /boot/quik.conf</c>aus, dies sollte Ihnen mitteilen, dass es
den ersten Abschnitt des QUIK Bootblocks installiert hat.
</p>

<note>
Wenn etwas schief gegangen ist, können Sie immer Ihren PRAM auf die
Standardwerte zurücksetzen indem Sie <c>command + option + p + r</c> gedrückt
halten, bevor Sie Ihren Rechner hochfahren. Dies löscht die Werte, welche Sie
mit nvsetenv gesetzt haben und sollte es Ihnen ermöglichen entweder eine MacOS
Bootdiskette oder eine Linux Bootdiskette zu starten.
</note>

<p>
Fahren Sie nun mit dem <uri link="#reboot">Rebooten Ihres Systems</uri> fort.
</p>

</body>
</section>
<section id="bootcreator">
<title>Alternative: BootCreator</title>
<body>

<impo>
BootCreator wird ein nettes SmartFirmware Bootmenü in Forth für den Pegasos
erstellen.
</impo>

<p>
Stellen Sie zunächst sicher, dass Sie <c>bootcreator</c> auf Ihrem System
installiert haben:
</p>

<pre caption = "Installieren von bootcreator mit GRP">
# <i>emerge --usepkg bootcreator</i>
</pre>

<p>
Kopieren Sie nun die Datei <path>/etc/bootmenu.example</path> in
<path>/etc/bootmenu</path> und editieren Sie diese entsprechend Ihren
Bedürfnissen:
</p>

<pre caption = "Editieren der bootcreator Konfigurationsdatei">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
Folgend finden Sie eine vollständige <path>/etc/bootmenu</path>
Konfigurationsdatei. Vmlinux und initrd sollten durch die Namen Ihres
Kernels und initrd-Images ersetzt werden.
</p>

<pre caption = "bootcreator Konfigurationsdatei">
<comment>#
# Beispiels Erläuterungsdatei für bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux (Normal)
ide:0 <keyval id="kernel-name"/> video=radeonfb:1024x768@70 root=/dev/hda3

[SECTION]
Local HD -> Genkernel (Normal)
ide:0 kernel-genkernel-ppc-<keyval id="kernel-gentoo"/> root=/dev/ram0 real_root=/dev/hda3 init=/linuxrc initrd=initramfs-genkernel-ppc<keyval id="kernel-gentoo"/>
 </pre>

<p>
Zuletzt muss das <path>bootmenu</path> nach Forth übersetzt und auf Ihre Boot
Partition kopiert werden, damit die SmartFirmware es lesen kann. Deswegen
müssen Sie <c>bootcreator</c> aufrufen:
</p>

<pre caption = "Installieren des Bootmenüs">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
Sie sollten auf alle Fälle einen Blick auf die Einstellungen von SmartFirmware
werfen, wenn Sie neu starten. Vergewissern Sie sich, dass <path>menu</path> die
Datei ist, welche standardmäßig geladen wird.
</note>

<p>
Fahren Sie nun fort mit der Installation mit <uri link="#reboot">Neustarten des
Systems</uri>.
</p>


</body>
</section>
<section id="reboot">
<title>Rebooten des Systems</title>
<subsection>
<body>

<p>
Verlassen Sie die chroot Umgebung und unmounten Sie alle gemounteten
Partitionen. Danach tippen Sie den magischen Befehl ein, auf den Sie solange
gewartet haben: <c>reboot</c>.
</p>

<pre caption="Unmounten aller Partitionen und Rebooten">
# <i>exit</i>
livecd ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo/sys /mnt/gentoo</i>
livecd ~# <i>reboot</i>
</pre>

<p>
Nachdem Sie in die neue Gentoo Installation gebootet haben schließen Sie die
Installation mit <uri link="?part=1&amp;chap=11">Abschließen der Gentoo
Installation</uri> ab.
</p>

</body>
</subsection>
</section>
</sections>
