<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- English CVS Version: 1.12 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/2007.0/hb-install-ppc-disk.xml,v 1.1 2007/07/25 17:53:18 grahl Exp $ -->

<sections>

<version>8.3</version>
<date>2007-06-26</date>

<section>
<title>Einführung in Block Devices</title>
<subsection>
<title>Block Devices</title>
<body>

<p>
Wir beginnen mit einem guten Einblick in die Festplatten bezogenen Aspekte von
Gentoo Linux und Linux im allgemeinen, inklusive Linux Dateisystemen,
Partitionen und Block Devices erhalten. Dann, sobald Sie mit den mehr oder
weniger komplizierten Eigenschaften von Festplatten und Dateisystemen vertraut
sind, werden Sie durch den Prozess des Partitionierens und der
Dateisystemerstellung für Ihre Gentoo Linux Installation geführt.
</p>

<p>
Zu Beginn werden wir Ihnen <e>Block Devices</e> vorstellen. Das gängigste
Block Device is wahrscheinlich das, welches das erste IDE Laufwerk in einem
Linux System repräsentiert, namentlich <path>/dev/hda</path>. Wenn Sie auf
SCSI-, FireWire-, USB- oder SATA-Laufwerken installieren, wäre Ihre erste
Festplatte <path>/dev/sda</path>. Zusätzliche Laufwerke sind mit dem im Alphabet
folgenden Buchstaben nummeriert. Beispielsweise wäre die dritte IDE-Festplatte
unter <path>/dev/hdc</path> zu finden.
</p>

<p>
Das obige Block Device repräsentiert ein abstraktes Interface zur Festplatte.
Benutzerprogramme können diese Block Device benutzen, um die Festplatte
anzusprechen, ohne sich darum zu kümmern, ob die Festplatten IDE, SCSI oder
irgendwas anderes sind. Das Programm kann den Speicherplatz auf der Festplatte
einfach als eine Anhäufung von zusammenhängenden, beliebig zugreifbaren
512-Byte Blöcken ansprechen.
</p>

</body>
</subsection>
<subsection>
<title>Partitionen</title>
<body>

<p>
Obwohl es theoretisch möglich ist eine ganze Festplatte zu nutzen, um Ihr Linux
System zu beherbergen, wird dies in der Praxis so gut wie nie gemacht.
Stattdessen werden komplette Festplatten Block Devices in kleinere, besser
verwaltbare Block Devices unterteilt. Auf den meisten Systemen werden sie
<e>Partitionen</e> genant.
</p>

</body>
</subsection>
</section>
<section>
<title>Erstellung eines Partitionsschemas</title>
<subsection>
<title>Standard Partitionsschema</title>
<body>

<p>
Wenn Sie nicht daran interessiert sind ein Partitionsschema für Ihr System zu
erstellen, können Sie das Partitionsschema verwenden, welches wir in diesem
Handbuch benutzen. Wählen Sie das Dateisystem-Layout, das am besten zu dem Typ
Ihres PowerPC-Systems passt, auf dem Sie installieren.
</p>

</body>
</subsection>
<subsection>
<title>Apple NewWorld</title>
<body>

<p>
Apples NewWorld-Rechner sind relativ einfach zu konfigurieren. Die erste
Partition ist immer eine <e>Apple Partition Map</e>. Diese Partition überwacht
das Layout der Festplatte. Sie können diese Partition nicht entfernen. Die
nächste Partition sollte immer eine Bootstrap-Partition sein. Diese Partition
beinhaltet ein kleines (800k) HFS-Dateisystem, welches eine Kopie des
Bootloaders Yaboot und dessen Konfigurationsdateien enthält. Diese Partition
ist <e>nicht</e> dieselbe wie die Partition <path>/boot</path>, welche man auf
anderen Architekturen findet. Nach der Boot-Partition werden die üblichen
Linux-Dateisysteme, wie im unten folgenden Schema, plaziert. Die Swap-Partition
ist ein temporärer Speicher für wenn Ihr System keinen weiteren verfügbaren
Arbeitsspeicher hat. Die Root-Partition wird das Dateisystem enthalten auf dem
Gentoo installiert sein wird. Wenn Sie ein Dual-Boot-System wünschen kann die
OSX-Partition überall hinter der Bootstrap-Partition platziert werden; dies
stellt sicher, dass Yaboot zuerst gestartet wird.
</p>

<note>
Es gibt unter Umständen "Disk Driver" Partitionen wie
<path>Apple_Driver63</path>, <path>Apple_Driver_ATA</path>,
<path>Apple_FWDriver</path>, <path>Apple_Driver_IOKit</path>, und
<path>Apple_Patches</path>. Diese werden zum Starten von MacOS verwendet. Wenn
Sie dies also nicht benötigen, können Sie diese entfernen indem Sie Ihre
Festplatte mit der <c>i</c> Option von mac-fdisk initialisieren. Die wird die
gesamte Festplatte löschen! Wenn Sie Zweifel haben, lassen Sie diese Partitionen
einfach in Ruhe.
</note>

<note>
Wenn Sie diese Festplatte mit Apples Disk Utility partitioniert haben
können 128Mb zwischen Partitionen frei sein, die Apple für "zukünftige Zwecke"
reserviert hat. Sie können diese ohne Probleme entfernen.
</note>


<table>
<tr>
  <th>Partition</th>
  <th>Größe</th>
  <th>Dateisystem</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32k</ti>
  <ti>Keins</ti>
  <ti>Apple Partition Map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>800k</ti>
  <ti>HFS</ti>
  <ti>Apple Bootstrap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Linux-Swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti>Rest der Festplatte</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Linux-Root</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Apple OldWorld</title>
<body>

<p>
Apples OldWorld-Rechner sind ein wenig komplizierter zu konfigurieren. Die erste
Partition ist immer eine <e>Apple Partition Map</e>. Diese Partition überwacht
das Layout der Festplatte. Sie können diese Partition nicht entfernen. Wenn Sie
BootX nimmt die folgende Konfiguration an dass MacOS  auf einer separaten
Festplatte installiert ist. Wenn dies nicht der Fall ist wird es weitere
Partitionen für "Apple Disk Drivers" wie <path>Apple_Driver63, Apple_Driver_ATA,
Apple_FWDriver, Apple_Driver_IOKit, Apple_Patches</path> und die MacOS
Installation geben. Wenn Sie Quik verwenden werden Sie eine Boot-Partition
erstellen müssen, die den Kernel enthält, anders als bei anderen
Apple-Bootmethoden. Nach der Boot-Partition werden die üblichen
Linux-Dateisysteme, wie im unten folgenden Schema, plaziert. Die Swap-Partition
ist ein temporärer Speicher für wenn Ihr System keinen weiteren verfügbaren
Arbeitsspeicher hat. Die Root-Partition wird das Dateisystem enthalten auf dem
Gentoo installiert sein wird.
</p>

<note>
Wenn Sie einen OldWorld-Rechner benutzen verwenden, werden Sie MacOS verfügbar
halten müssen. Das Layout hier nimmt an, dass MacOS auf einem separaten Laufwerk
installiert ist.
</note>

<table>
<tr>
  <th>Partition</th>
  <th>Größe</th>
  <th>Dateisystem</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32k</ti>
  <ti>Keins</ti>
  <ti>Apple Partition Map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>32Mb</ti>
  <ti>ext2</ti>
  <ti>Quik Boot-Partition (nur quik)</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Linux-Swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti>Rest der Festplatte</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Linux-Root</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Pegasos</title>
<body>

<p>
Das Pegasos-Partitionslayout ist relativ simpel, verglichen mit den
Apple-Layouts. Die erste Partition ist die Boot-Partition, welche den zu
startenden Kernel enthält, zusammen mit einem Skript für Open Firmware, das ein
Menü während des Starts liefert. Nach der Boot-Partition folgen die typischen
Linux-Dateisysteme nach untem folgenden Schema. Die Swap-Partition ist ein
temporärer Speicher für wenn Ihr System keinen weiteren verfügbaren
Arbeitsspeicher hat. Die Root-Partition wird das Dateisystem enthalten auf dem
Gentoo installiert sein wird.
</p>

<table>
<tr>
  <th>Partition</th>
  <th>Größe</th>
  <th>Dateisystem</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>32Mb</ti>
  <ti>affs1 oder ext2</ti>
  <ti>Boot-Partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Linux-Swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Rest der Festplatte</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Linux-Root</ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>IBM PReP (RS/6000)</title>
<body>

<p>
Die IBM PowerPC Reference Platform (PReP) benötigt eine kleine
PReP Boot-Partition auf der ersten Partition der Festplatte, gefolgt von den
Swap- und Root-Partitionen.
</p>

<table>
<tr>
  <th>Partition</th>
  <th>Größe</th>
  <th>Dateisystem</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>800k</ti>
  <ti>Keins</ti>
  <ti>PReP Boot-Partition (Type 0x41)</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>512Mb</ti>
  <ti>Swap</ti>
  <ti>Linux-Swap (Type 0x82)</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Rest der Festplatte</ti>
  <ti>ext3, reiserfs, xfs</ti>
  <ti>Linux-Root (Type 0x83)</ti>
</tr>
</table>

<warn>
<c>parted</c> bietet die Möglichkeit die Größe von Partition anzupassen, auch
HSF+. Leider kann es zu Problemen kommen bei der Änderung der Größe von
journalisierten HSF+ Dateisystemen. Daher sollten Sie für die besten Ergebnisse
die Journalisierung in Mac OS X ausschalten, bevor Sie die Größe ändern. Denken
Sie daran, dass jede Anpassung der Größe gefährlich ist, Sie tun dies auf
eigenes Risiko! Stellen Sie sicher, dass Sie immer ein Backup Ihrer Daten haben
bevor Sie die Größe ändern!
</warn>

<p>
Wenn Sie daran interessiert sind zu erfahren, wie groß eine Partition sein
sollte, oder auch wie viele Partitionen Sie benötigen, lesen Sie weiter.
Anderenfalls fahren Sie nun mit dem <uri link="#mac-fdisk">Standard:
Partitionieren Ihrer Festplatte mit mac-fdisk (Apple)</uri> oder <uri
link="#parted">Alternativ: Benutzen von parted (IBM/Pegasos) zur
Partitionierung</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Wie viele und wie groß?</title>
<body>

<p>
Die Anzahl an Partitionen hängt von Ihrer Umgebung ab. Wenn Sie z.B. eine Menge
Benutzer haben, wollen Sie höchst wahrscheinlich Ihr <path>/home</path> separat
halten, da es die Sicherheit erhöht und Backups einfacher macht. Wenn Sie Gentoo
installieren um als Mailserver zu fungieren, sollten Sie <path>/var</path>
separat halten, da alle erhaltenen Mails in <path>/var</path> gespeichert
werden. Eine gute Wahl des Dateisystems maximiert dann zusätzlich die
Performance. Gameserver sollten ein separates <path>/opt</path> haben, da die
meisten Gameserver dort installiert werden. Der Grund ist ähnlich wie bei
<path>/home</path>: Sicherheit und Backups. Welches Layout Sie auch wählen, es
liegt definitiv in Ihrem Interesse <path>/usr</path> groß zu behalten: es wird
nicht nur die Mehrheit der Anwendungen enthalten; der Portage-Baum allein belegt
mehr als 500Mb, ohne die verschiedensten Quellen die darin gespeichert sind
mitzurechnen.
</p>

<p>
Wie Sie sehen können, hängt es sehr stark davon ab, was Sie erreichen wollen.
Separate Partitionen oder Volumes haben folgende Vorteile:
</p>

<ul>
<li>
  Sie können das Filesystem mit der höchsten Performance für jede Partition oder
  jedes Volume auswählen
</li>
<li>
  Ihr System behält noch freien Speicherplatz, selbst wenn ein defektes Tool
  ununterbrochen Dateien auf eine Partition oder ein Volume schreibt
</li>
<li>
  Falls nötig können Dateisystem Checks zeitlich verkürzt werden, in dem
  mehrere Checks parallel durchgeführt werden können (obwohl dieser Vorteil eher
  mit mehreren Festplatten als mit mehreren Partitionen zum Tragen kommt)
</li>
<li>
  Die Sicherheit kann erhöht werden, indem Sie einige Partitionen oder Volumes
  read-only, nosuid (setuid bits werden ignoriert), noexec (executable bits
  werden ignoriert) etc. mounten.
</li>
</ul>

<p>
Jedoch, mehrere Partitionen haben einen großen Nachteil: wenn sie nicht
ordentlich konfiguriert werden, könnte das Resultat ein System sein, welches
viel Speicherplatz auf der einen Partition und keinen auf einer anderen frei
hat. Es gibt weiterhin ein Limit von 15 Partitionen bei SCSI und SATA.
</p>

</body>
</subsection>
</section>
<section id="mac-fdisk">
<title>Standard: Benutzung von mac-fdisk (Apple) zum Partitionieren der
  Festplatte</title>
<body>

<p>
An dieser Stelle erstellen Sie Ihre Partitionen mit <c>mac-fdisk</c>:
</p>

<pre caption="Starten von mac-fdisk">
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
Wenn Sie Apples Disk Utility verwendet haben um Platz zu lassen für Linux,
löschen Sie zunächst die Partitionen, die Sie vorher erstellt haben, um Platz
für Ihre neue Installation zu schaffen. Benutzen Sie <c>d</c> in
<c>mac-fdisk</c> um diese Partitionen zu löschen. Es wird Sie beim Löschvorgang
nach einer Partitionsnummer fragen. Normalerweise konnte die erste Partition auf
NewWorld-Rechnern (Apple_partition_map) nicht gelöscht werden. Wenn Sie mit
einer sauberen Festplatte beginnen möchten, können Sie einfach die Festplatte
mit <c>i</c> initialisieren. Dies wird die Festplatte komplett löschen, benutzen
Sie diese Funktion also mit Vorsicht.
</p>

<p>
Nun erstellen Sie eine <e>Apple_Bootstrap</e> Partition mit <c>b</c>. Sie werden
nach einem Block gefragt, an dem Sie starten wollen. Geben Sie die Nummer Ihrer
ersten freien Partition, gefolgt von einem <c>p</c> ein. Zum Beispiel <c>2p</c>.
</p>

<note>
Diese Partition ist <e>keine</e> <path>/boot</path> Partition. Sie wird nicht
von Linux benutzt; Sie müssen darauf kein Dateisystem anlegen und sollten Sie
niemals mounten. Apple Benutzer benötigen keine separate <path>/boot</path>
Partition.
</note>

<p>
Erstellen Sie nun eine Swap Partition indem Sie <c>c</c> drücken.
<c>mac-fdisk</c> wird Sie wieder nach einem Block fragen, an dem Sie diese
Partition beginnen lassen wollen. Nachdem wir <c>2</c> vorher für die
Apple_Bootstrap Partition gewählt haben, müssen Sie nun <c>3p</c> eingeben. Wenn
Sie nach der Größe gefragt werden geben Sie <c>512M</c> ein (oder die Größe die
Sie möchten, miminal 512MB wird empfohlen aber zwei mal die Größe Ihres
physischen Speichers ist die generell akzeptierte Größe). Wenn Sie nach einem
Namen gefragt werden, geben Sie <c>swap</c> ein.
</p>

<p>
Um die Root Partition zu erstellen, geben Sie <c>c</c> gefolgt von <c>4p</c>
ein, um auszuwählen, an welchem Block die Root Partition beginnen soll. Wenn Sie
nach der Größe gefragt werden, geben Sie wieder <c>4p</c> ein. <c>mac-fdisk</c>
interpretiert dies als "Benutze den ganzen verfügbaren Platz". Wenn Sie nach dem
Namen gefragt werden, geben Sie <c>root</c> ein.
</p>

<p>
Abschließend schreiben Sie die Partitionstabelle mit <c>w</c> und beenden
<c>mac-fdisk</c> mit <c>q</c>.
</p>

<note>
Um sicherzustellen, dass die Partitionierung wie gewünscht übernommen wurde
sollten Sie erneut <c>mac-fdisk -l</c> ausführen und prüfen, ob alle Partitionen
angelegt wurden. Wenn Sie keine der von Ihnen angelegten Partitionen (oder
andere Änderungen) sehen können, sollten Sie die Partitionen mit "i" in
mac-fdisk reinitialisieren. Beachten Sie, dass dies die Partitionstabelle neu
erstellt und so alle Partitionen löscht.
</note>

<p>
Nachdem Ihre Partitionen nun erstellt sind, können Sie mit dem
<uri link="#filesystems">Erstellen der Dateisysteme</uri> fortfahren.
</p>

</body>
</section>
<section id="parted">
<title>
Benutzung von parted zur Partitionierung Ihrer Festplatte (Pegasos and RS/6000)
</title>
<body>

<p>
<c>parted</c>, der Partition Editor kann nun HFS+ Partitionen bearbeiten, die
von MacOS und Mac OS X genutzt werden. Mit diesem Tool können Sie
Mac-Partitionen verkleinern und Platz für Linux Partitionen schaffen. Das
nachfolgende Beispiel beschreibt dennoch nur die Partitionierung für Pegasos
Maschinen.
</p>

<p>
Starten Sie <c>parted</c>:
</p>

<pre caption="parted Starten">
# <i>parted /dev/hda</i>
</pre>

<p>
Wenn die Festplatte unpartitioniert ist führen sie <c>mklabel amiga</c> aus, um
ein neues Disklabel für diese Festplatte zu erstellen.
</p>

<p>
Sie können in parted jederzeit <c>print</c> eingeben, um die aktuelle
Partitionstabelle anzuzeigen. Sie können parted jederzeit mit <c>Strg-c</c>
abbrechen, wenn Sie einen Fehler gemacht haben oder sich Ihre Vorstellungen
ändern.
</p>

<p>
Wenn Sie auf Ihrem Pegasos auch MorphOS installieren möchten, erstellen Sie ein
affs1 Dateisystem am Anfang der Festplatte. 32MB sollten mehr als genug sein, um
den MorphOS Kernel unterzubringen. Wenn Sie einen Pegasos I haben und irgendein
Dateisystem neben ext3 oder ext3 verwenden möchten, müssen Sie Ihren
Linux-Kernel ebenfalls auf dieser Partition ablegen (der Pegasos II kann nur
von ext2/ext3 oder affs1 Partitionen booten). Um diese Partition zu erstellen
führen Sie  <c>mkpart primary affs1 START END</c> aus, wobei <c>START</c> und
<c>END</c> mit dem Megabyte-Bereich ersetzt werden sollten (z.B. <c>0 32</c>)
was eine 32MB große Partition beginnend bei 0MB und endend bei 32MB erstellt.
Wenn Sie sich dafür entscheiden eine ext2- oder ext3-Partiton stattdessen zu
verwenden, ersetzen Sie affs1 durch ext2 oder ext3 im mkpart-Befehl.
</p>

<p>
Sie werden zwei Partitionen für Linux erstellen müssen, ein Root-Dateisystem
und eine Swap-Partition. Führen Sie <c>mkpart primary START END</c> aus um jede
Partition zu erstellen. Ersetzen Sie <c>START</c> und <c>END</c> mit den
gewünschten Megabyte-Grenzen.
</p>

<p>
Es wird generell empfohlen eine Swap-Partition zu erstellen, die zwei mal so
groß ist wie der verfügbare RAM in Ihrem Rechner, jedoch wird mindestens 512Mb
empfohlen. Um die Swap-Partition zu erstellen führen Sie
<c>mkpart primary linux-swap START END</c> aus wobei START und END wieder die
Partitionsgrenzen angeben.
</p>

<p>
Wenn Sie in parted fertig sind, tippen Sie einfach <c>quit</c> ein.
</p>

</body>
</section>
<section id="filesystems">
<title>Erstellen der Dateisysteme</title>
<subsection>
<title>Einleitung</title>
<body>

<p>
Jetzt sind Ihre Partitionen erstellt, so dass es nun an der Zeit ist
Dateisysteme anzulegen. Wenn Sie nicht wissen was Sie wählen sollen und mit
unseren Standardempfehlungen einverstanden sind, fahren Sie mit <uri
link="#filesystems-apply">Dateisystem auf einer Partition anlegen</uri> fort.
Wenn nicht, lesen Sie weiter, um ein wenig mehr über die verfügbaren
Dateisysteme zu lernen.
</p>

</body>
</subsection>
<subsection>
<title>Dateisysteme?</title>
<body>

<p>
Verschiedene Dateisysteme sind verfügbar. ext2, ext3, ReiserFS und XFS sind auf
PPC als stabil bekannt.
</p>

<p>
<b>ext2</b> ist das erprobte und wahre Linux Dateisystem, unterstützt aber kein
Metadata Journaling, was bedeutet, dass routinemäßige Dateisystem Checks beim
Booten sehr zeitaufwändig sein können. Es gibt mittlerweile eine Auswahl an
journalisierenden Dateisystemen neuerer Generation, die die Konsistenzchecks
sehr schnell erledigen und dadurch im Vergleich mit den nicht-journalisierenden
Gegenstücken vorzuziehen sind.
</p>

<p>
<b>ext3</b> ist die journalbasierte Version des ext2-Dateisystem, das
Metadaten-Journalisierung für schnelle Wiederherstellung, sowie andere
verbesserte Journalisierungs-Modi wie "Full Data"- und "Ordered
Data"-Journalisierung, unterstützt. Es verwendet einen HTree-Index der in fast
allen Situation zu einer hohen Performance führt. Kurz, ext3 ist ein sehr gutes
und verlässliches Dateisystem.
</p>

<p>
<b>ReiserFS</b> ist ein auf B+-Bäumen basierendes Dateisystem mit einer guten
Performance und überholt sowohl ext2 und ext3 im Umgang mit kleinen Dateien
(Dateien kleiner als 4k) oftmals mit einem Performancefaktor von 10x-15x.
ReiserFS skaliert extrem gut und bietet Metadaten-Journalisierung. ReiserFS ist
stabil und sowohl als Dateisystem für generelle Anwendungen, als auch für
extreme Fälle wie große Dateisysteme, den Gebrauch von sehr großen Dateien und
Verzeichnissen mit zehntausenden von kleinen Dateien brauchbar.
</p>

<p>
<b>XFS</b> ist ein Dateisytem mit metadata journaling, das mit einem robusten
Feature-Set kommt und auf Skalierbarkeit ausgelegt ist. Wir empfehlen den
Einsatz dieses Dateisystems nur auf Linux Systemen mit High-End SCSI und/oder
Fibre Channel Storage und einer redundaten Stromversorgung. Da XFS agressiv vom
RAM gebraucht macht, können unsachgemäß designte Programme (solche die keine
Vorsichtsmaßnahmen treffen, wenn Sie auf die Festplatte schreiben und davon
gibt es einige) dazu führen, dass eine ganze Menge Daten verloren gehen, wenn
das System unerwartet ausfällt.
</p>

</body>
</subsection>
<subsection>
<title>Aktivierung der Swap-Partition</title>
<body>

<p>
<c>mkswap</c> ist der Befehl, der verwendet wird um Swap-Partitionen zu
initialisieren:
</p>

<pre caption="Erstellung einer Swap-Signatur">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
Um die Swap-Partition zu aktivieren verwenden Sie <c>swapon</c>:
</p>

<pre caption="Aktivierung der Swap-Partition">
# <i>swapon /dev/hda3</i>
</pre>

<p>
Erstellen und aktivieren Sie den Swap jetzt, bevor Sie andere Dateisysteme
erstellen.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Eine Partition mit einem Dateisystem formatieren</title>
<body>

<p>
Um ein Dateisystem auf einer Partition oder einem Volume zu erstellen, gibt es
für jedes Dateisystem Tools:
</p>

<table>
<tr>
  <th>Dateisystem</th>
  <th>Kommando</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
</table>

<p>
Um zum Beispiel ein ext3-Dateisystem auf der Root-Partition
(<path>/dev/hda4</path> in unserem Beispiel) zu erstellen, führen Sie folgenden
Befehl aus:
</p>

<pre caption="Eine Partition mit einem Dateisystem formatieren">
# <i>mke2fs -j /dev/hda4</i>
</pre>

<p>
Erstellen Sie nun die Dateisysteme auf Ihren neu erstellten Partionen (oder
logischen Volumes).
</p>

<impo>
Wenn Sie sich dafür entscheiden ReiserFS für <path>/</path> zu verwenden,
sollten Sie die Standard-Blockgröße nicht verändern, wenn Sie außerdem
<c>yaboot</c> als Ihren Bootloader verwenden, wie beschrieben in der <uri
link="?part=1&amp;chap=10">Konfiguration des Bootloaders</uri>.
</impo>

<note>
Auf dem PegasosII muss die Partition, die den Kernel beherbergt, mit ext2, ext3
oder affs1 formatiert sein. NewWorld-Rechner können von ext2, ext3, XFS,
ReiserFS oder sogar HFS/HFS+ Dateisystemen booten. Auf OldWorld-Rechnern,
die mit BootX starten, muss der Kernel sich auf einer HSF-Partition befinden.
Dies wird aber erledigt wenn Sie Ihren Bootloader konfigurieren.
</note>

</body>
</subsection>
</section>
<section>
<title>Mounten</title>
<body>

<p>
Nachdem Ihre Partitionen nun initialisiert sind und ein Dateisystem beinhalten,
ist es an der Zeit diese Partitionen zu mounten. Benutzen Sie den Befehl
<c>mount</c>. Als Beispiel mounten wir die root-Partition:
</p>

<pre caption="Mounten von Partitionen">
# <i>mount /dev/hda4 /mnt/gentoo</i>
</pre>

<note>
Wenn Sie <path>/tmp</path> auf eine separate Partition legen möchten, stellen
Sie sicher, dass Sie die Berechtigungen nach dem Mounten und Entpacken ändern:
<c>chmod 1777 /mnt/gentoo/tmp</c>. Dies gilt auch für <path>/var/tmp</path>.
</note>

<p>
Fahren Sie mit der <uri link="?part=1&amp;chap=5">Installation der Gentoo
Installations Dateien </uri> fort.
</p>

</body>
</section>
</sections>
