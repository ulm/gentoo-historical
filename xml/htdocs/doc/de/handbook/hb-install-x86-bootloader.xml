<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- English CVS Version: 1.9 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/Attic/hb-install-x86-bootloader.xml,v 1.3 2004/07/13 22:59:54 dertobi123 Exp $ -->

<sections>
<section>
<title>Eine Wahl treffen</title>
<subsection>
<title>Einleitung</title>
<body>

<p>
Nun, da Ihr Kernel konfiguriert und kompiliert ist und die notwendigen
Systemkonfigurationsdateien richtig konfiguriert sind, ist es Zeit ein Programm
zu installieren, dass Ihren Kernel lädt wenn Sie Ihr System starten. Solch ein
Programm nennt man einen <e>Bootloader</e>. Für x86 bietet Gentoo Linux <uri
link="#grub">GRUB</uri> und <uri link="#lilo">LILO</uri>. Bevor Sie jedoch einen
der beiden Bootloader installieren, informieren wir Sie darüber, wie der
Framebuffer (natürlich nur wenn Sie diesen einrichten wollen) eingerichtet wird.
Mit Framebuffer können Sie die Linux Kommandozeile mit (limitierten) grafischen
Erweiterungen (wie dem netten Bootsplash der Gentoo LiveCDs) nutzen.
</p>

</body>
</subsection>
<subsection>
<title>Optional: Framebuffer</title>
<body>

<note>
Dieser Abschnitt ist nur relevant für x86, AMD64 und PPC Benutzer, die Framebuffer
Unterstützung in ihrem Kernel konfiguriert haben.
Dies schließt <c>genkernel</c> Benutzer ein.
</note>

<p>
<e>Wenn</e> Sie Ihren Kernel mit Framebuffer Unterstützung konfiguriert haben,
müssen Sie das <c>vga</c> Statement zu Ihrer Bootloaderkonfigurationsdatei
hinzufügen, wenn sie Framebuffer benötigen. Die nächste Tabelle listet die
verfügbaren <c>vga</c> Werte auf, die Sie benutzen können. In den
Beispielkonfigurationsdateien benutzen wir <e>800x600 @ 16bpp</e>,
daher <e>788</e>.
</p>

<table>
<tr>
  <ti></ti><th>640x480</th><th>800x600</th><th>1024x768</th><th>1280x1024</th>
</tr>
<tr>
  <th>8 bpp</th><ti>769</ti><ti>771</ti><ti>773</ti><ti>775</ti>
</tr>
<tr>
  <th>16 bpp</th><ti>785</ti><ti>788</ti><ti>791</ti><ti>794</ti>
</tr>
<tr>
  <th>32 bpp</th><ti>786</ti><ti>789</ti><ti>792</ti><ti>795</ti>
</tr>
</table>

<p>
Merken Sie sich diesen Wert (oder schreiben Sie ihn auf), Sie werden ihn wenig
später brauchen.
</p>

<p>
Wählen Sie nun einen Bootloader aus der obigen Tabelle aus.
</p>

</body>
</subsection>
</section>
<section id="grub">
<title>Standard: Die Benutzung von GRUB
</title>
<subsection>
<title>Das Verstehen von GRUBs Terminologie</title>
<body>

<impo>
GRUB kann nur auf x86 und AMD64-basierenden Systemen verwendet werden!
</impo>

<p>
Der wichtigste Teil beim Verstehen von GRUB ist, sich mit der Art vertraut zu
machen, in der GRUB Festplatten und Partitionen benennt. Ihre Linux Partition
<path>/dev/hda1</path> wird <path>(hd0,0)</path> unter GRUB genannt. Beachten
Sie die Klammern um das <path>hd0,0</path>, denn diese sind Pflicht.
</p>

<p>
Festplatten zählen von Null anstatt von "a" und Partitionen starten bei Null
anstatt bei 1. Beachten Sie bitte auch, dass mit den hd-Geräten nur Festplatten
gezählt werden, keine ATAPI-IDE Geräte wie CD-ROM Player oder Brenner.
Dasselbe Modell wird auch bei SCSI Laufwerken verwendet. (Normalerweise
erhalten sie höhere Nummern als IDE Laufwerke, außer wenn das BIOS konfiguriert
ist von SCSI zu booten.)
</p>

<p>
Vorausgesetzt Sie haben eine Festplatte an <path>/dev/hda</path>, einen CD-ROM
Player an <path>/dev/hdb</path>, einen Brenner an <path>/dev/hdc</path>, eine
zweite Festplatte an <path>/dev/hdd</path> und keine SCSI Festplatte, dann wird
<path>/dev/hdd7</path> übersetzt in <path>(hd1,6)</path>. Es mag schwierig
klingen und das ist es in der Tat auch, aber wie wir werden sehen, bietet GRUB
einen Tab-Komplettierungsmechanismus an, der hilfreich ist für diejenigen von
Ihnen die viele Festplatten und Partitionen haben und sich ein wenig verloren
fühlen mit dem Nummerierungssystem von GRUB.
</p>

<p>
Nachdem man dafür jetzt ein Gefühl erlangt hat, ist es nun Zeit GRUB zu
installieren.
</p>

</body>
</subsection>
<subsection>
<title>Installieren von GRUB</title>
<body>

<p>
Um GRUB zu installieren, führen Sie ein emerge aus. x86 Benutzer 
müssen  <c>grub</c> verwenden, während AMD64 Benutzer <c>grub-static</c>
emergen müssen:</p>

<pre caption = "Installieren von GRUB">
<comment>(Für x86 Architektur)</comment>
# <i>emerge grub</i>
</pre>

<p>
Um mit der Konfiguration von GRUB zu beginnen, tippen Sie <c>grub</c>. Ihnen
wird die <path>grub&gt;</path> GRUB Kommdandozeile präsentiert. Nun müssen Sie
die richtigen Befehle eintippen um den GRUB Boot Record auf Ihrer Festplatte zu
installieren.
</p>

<pre caption = "Starten der GRUB Shell">
# <i>grub</i>
</pre>

<note>
Wenn das System kein Diskettenlaufwerk hat, fügen Sie die <c>--no-floppy</c>
Option an das obige Kommando an, damit grub nicht nach nicht-existierenden
Diskettenlaufwerken sucht.
</note>

<p>
In der Beispielskonfiguration wollen wir GRUB so installieren, dass es alle
Informationen von der Boot Partition <path>/dev/hda1</path> liest und den GRUB
Boot Record auf dem MBR (Master Boot Record) der Festplatte installiert, damit
das Erste was wir sehen, wenn wir den Computer einschalten die GRUB
Eingabeaufforderung ist. Natürlich müssen Sie die Befehle entsprechend ändern,
wenn Sie von der Beispielkonfiguration während der Installation abgewichen
sind.
</p>

<p>
Der Tab-Komplettierungsmechanismus von GRUB kann innerhalb von GRUB benutzt
werden. Zum Beispiel, wenn Sie "<c>root (</c>" eintippen, gefolgt von einem
TAB, wird Ihnen eine Liste von Geräten gegeben (solche wie <path>hd0</path>).
Wenn Sie "<c>root (hd0,</c>" eintippen, gefolgt von einem TAB, wird Ihnen eine
Liste von verfügbaren Partitionen angezeigt, unter denen Sie auswählen können
(solche wie <path>hd0,0</path>).
</p>

<p>
Durch Benutzung der Tab-Komplettierung sollte das Einrichten von GRUB nicht
allzu schwer sein. Also weiter in der Konfiguration von GRUB!
</p>

<pre caption = "Installieren von GRUB im MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(Angabe wo sich Ihre /boot Partition befindet)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Installiere GRUB im MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Verlasse die GRUB Shell)</comment>
</pre>

<note>
Wenn Sie GRUB lieber in einer bestimmten Partition anstatt des MBR installieren
wollen, müssen Sie das <c>setup</c> so verändern, dass es auf die
richtige Partition verweist. Zum Beispiel, wenn Sie GRUB in 
<path>/dev/hda3</path> installieren wollen, dann wird der Befehl zu
<c>setup (hd0,2)</c>.
Diese Option wird in der Regel nur von wenigen Benutzern genutzt.
</note>

<p>
Obwohl GRUB nun installiert ist, müssen Sie trotzdem noch eine
Konfigurationsdatei dafür schreiben, damit GRUB automatisch Ihren neu
erstellten Kernel bootet. Erstellen Sie <path>/boot/grub/grub.conf</path> mit
<c>nano</c> (oder wenn gewünscht einem anderen Editor):
</p>

<pre caption = "Erstellen von /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Nun wollen wir eine <path>grub.conf</path> schreiben. Folgend finden Sie zwei
mögliche <path>grub.conf</path> für das Partitionierungsbeispiel, das wir in
diesem Leitfaden verwendet haben mit dem Kernel-Image <path>kernel-2.4.25</path>.
Wir werden nur die erste <path>grub.conf</path> ausführlich erläutern. Stellen
Sie sicher, dass Sie den Dateinamen <e>Ihres</e> Kernel Image und, wenn
zutreffend, den Dateinamen <e>Ihrer</e> initrd benutzen.
</p>

<ul>
  <li>
    Die erste <path>grub.conf</path> für Leute, die nicht <c>genkernel</c>
    benutzt haben
  </li>
  <li>
    Die zweite <path>grub.conf</path> ist für Leute, die <c>genkernel</c>
    benutzt haben
  </li>
</ul>

<pre caption = "grub.conf für Nicht-genkernel Benutzer">
<comment># Welcher Eintrag standardmäßig gebootet werden soll. 0 ist der Erste, 1 ist der Zweite usw.</comment>
default 0
<comment># Wieviele Sekunden gewartet werden soll, bevor der Standardeintrag gebootet wird.</comment>
timeout 30
<comment># Eine nettes, fettes Hintergrundbild um die ganze Sache ein wenig zu würzen :)
# Auskommentieren, wenn Sie keine Grafikkarte installiert haben.</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.25
<comment># Partition in der das Kernel-Image (oder das Betriebssystem) vorhanden ist</comment>
root (hd0,0)
kernel (hd0,0)/kernel-2.4.25-gentoo root=/dev/hda3

<comment># Die nächsten drei Zeilen werden nur benötigt wenn Sie einen Dualboot mit einem Windows System einrichten wollen.</comment>
<comment># Hier in diesem Fall liegt Windows auf /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
chainloader +1
</pre>

<pre caption = "grub.conf für genkernel Benutzer">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.25
root (hd0,0)
kernel (hd0,0)/kernel-2.4.25-gentoo root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3
initrd (hd0,0)/initrd-2.4.25-gentoo

<comment># Nur wenn Sie einen Dual-Boot einrichten möchten</comment>
title=Windows XP
rootnoverify (hd0,5)
chainloader +1
</pre>

<note>
Wenn Sie ein anderes Partitionierungschema verwenden und/oder Kernel-Image,
passen Sie Ihre Konfiguration entsprechend an. Stellen Sie jedoch sicher, dass
alles was einem GRUB-Device folgt (wie z.B. <path>(hd0,0)</path>) relativ zum
Mountpoint ist, nicht dem Root. Mit anderen Worten,
<path>(hd0,0)/grub/splash.xpm.gz</path> ist in Wirklichkeit
<path>/boot/grub/splash.xpm.gz</path> denn <path>(hd0,0)</path> ist
<path>/boot</path>.
</note>

<p>
Wenn Sie noch zusätzliche Optionen an den Kernel übergeben müssen, fügen Sie
diese einfach zum Ende des Kernelbefehls hinzu. Eine Option übermitteln wir
schon (<c>root=/dev/hda3</c> oder <c>real_root=/dev/hda3</c>), aber Sie können
auch weitere übermittlen. Als Beispiel benutzen wir das <c>vga</c> Statement
für Framebuffer, das wir schon besprochen haben:
</p>

<pre caption = "Hinzufügen des vga Statements als eine Kerneloption">
title=Gentoo Linux 2.4.25
  root (hd0,0)
  kernel (hd0,0)/kernel-2.4.25-gentoo root=/dev/hda3 vga=788
</pre>

<p>
<c>Genkernel</c> Benutzer sollten wissen, dass Ihr Kernel die selben
Bootoptionen benutzt wie der auf der LiveCD. Zum Beispiel, wenn Sie SCSI Geräte
haben, sollten Sie <c>doscsi</c> als Kerneloption hinzufügen.
</p>

<p>
Speichern Sie nun die <path>grub.conf</path> Datei und verlassen Sie den
Editor. Von jetzt an ist GRUB vollständig konfiguriert und Sie können mit der
<uri link="?part=1&amp;chap=10">Installation von benötigten Systemtools</uri>
fortfahren.
</p>

<p>
Wenn Sie weitere Fragen GRUB betreffend haben, konsultieren Sie die <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> oder das <uri
link="http://www.gnu.org/software/grub/manual/">GRUB Manual</uri>.
</p>

</body>
</subsection>
</section>
<section id="lilo">
<title>Alternativ: Benutzung von LILO</title>
<subsection>
<title>Installieren von LILO</title>
<body>

<p>
LILO, der LInuxLOader, ist das bewährte und wahre Arbeitstier der Linux
Bootloader. Jedoch hat es eine Fähigkeiten nicht die GRUB hat (was auch der
Grund dafür ist, dass GRUB momentan an Popularität gewinnt). Der Grund warum
LILO noch benutzt wird ist, dass GRUB auf einigen System nicht funktioniert und
LILO es tut. Natürlich gibt es auch den Grund, dass einige Leute mit LILO
bereits vertraut sind und es daher behalten wollen. In jedem Fall: Gentoo
unterstützt beide und anscheinend haben Sie sich für LILO entschieden.
</p>

<p>Installieren von LILO ist ein Klacks, benutzen Sie einfach <c>emerge</c>.</p>

<pre caption = "Installieren von LILO">
# <i>emerge lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Konfigurieren von LILO</title>
<body>

<p>
Um LILO zu konfigurieren, müssen Sie <path>/etc/lilo.conf</path> erstellen.
Starten Sie Ihren Lieblingseditor (in diesem Handbuch benutzen wir <c>nano</c>)
und erstellen die Datei.
</p>

<pre caption = "Erstellen von /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Vor einigen Abschnitten baten wir Sie, sich den Namen des Kernel-Images zu
merken, welches Sie erstellt haben. In der folgenden <path>lilo.conf</path>
Beispielsdatei nehmen wir an, dass der Imagename <path>kernel-2.4.25</path>
ist. Wir benutzen zudem das Beispielpartitionsschema in diesem Beispiel, es gibt
zwei verschiedene Teile:
</p>

<ul>
  <li>
    Einen für diejenigen, die <c>genkernel</c> nicht benutzt haben um den Kernel
    zu bauen
  </li>
  <li>
    Einen für diejenigen, die ein <c>genkernel</c> zum bauen des Kernel benutzt haben.
  </li>
</ul>

<p>
Stellen Sie sicher, dass Sie den Dateinamen <e>Ihres</e> Kernel Image und, wenn
zutreffend, den Dateinamen <e>Ihrer</e> initrd benutzen.
</p>

<pre caption = "Beispiel /etc/lilo.conf">
boot=/dev/hda             <comment># Installieren von LILO im MBR</comment>
prompt                    <comment># Gib dem Benutzer die Möglichkeit eine andere Sektion auszuwählen</comment>
timeout=50                <comment># Warte 5 (fünf) Sekunden bevor die Standardsektion gebootet wird</comment>
default=gentoo            <comment># Wenn das Timeout verstrichen ist, dann boote die "gentoo" Sektion</comment>
<comment># Nur wenn Sie Framebuffer verwenden, ansonsten entfernen Sie die folgende Zeile:</comment>
vga=788                   <comment># Die Framebuffereinstellung: Passen Sie diese nach Ihrem Willen an.</comment>

<comment># Nur für Nicht-GRP Benutzer</comment>
image=/boot/kernel-2.4.25-gentoo
  label=gentoo            <comment># Der Name den wir der Sektion geben</comment>
  read-only               <comment># Starte mit einem nur-lesen Root. Nicht ändern!</comment>
  root=/dev/hda3          <comment># Ort des Root Dateisystems</comment>
<comment># Für genkernel Benutzer</comment>
image=/boot/kernel-2.4.25-gentoo
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc ramdisk=8192 real_root=/dev/hda3"
  initrd=/boot/initrd-2.4.25-gentoo
<comment># Die nächsten zwei Zeilen werden nur benötigt, wenn Sie Dualboot mit einem Windowssystem einrichten wollen.</comment>
<comment># In diesem Fall liegt Windows auf /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Wenn Sie ein anderes Partitionierungsschema verwenden, passen Sie die
Konfiguration entsprechend an.
</note>

<p>
Wenn Sie weitere Optionen an den Kernel übermitteln müssen, fügen Sie ein
<c>append</c> Statement zu der Sektion hinzu. Als Beispiel fügen wir das
<c>acpi=off</c> Statement hinzu um ACPI Unterstützung zu deaktivieren:
</p>

<pre caption = "Benutzung von append um Kerneloptionen hinzuzufügen">
image=/boot/kernel-2.4.25-gentoo
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="acpi=off"</i>
</pre>

<p>
<c>Genkernel</c> Benutzer sollten wissen, dass Ihr Kernel dieselben
Bootoptionen benutzt wie der auf der LiveCD. Zum Beispiel, wenn Sie SCSI Geräte
haben, sollten Sie <c>doscsi</c> als Kerneloption hinzufügen
</p>

<p>
Speichern Sie nun die Datei und verlassen Sie den Editor. Zum Schluss müssen
Sie <c>/sbin/lilo</c> ausführen, damit LILO die <path>/etc/lilo.conf</path> auf
Ihr System anwenden kann (also sich selbst auf der Platte installiert). Behalten
Sie im Hinterkopf, dass Sie <c>/sbin/lilo</c> nach jeder Installation eines
neuen Kernel ausführen müssen.
</p>

<pre caption = "Fertigstellen der LILO Installation">
# <i>/sbin/lilo</i>
</pre>

<p>
Fahren Sie nun mit der <uri
link="?part=1&amp;chap=10">Installation von benötigten Systemtools</uri>
fort.
</p>

</body>
</subsection>
</section>
</sections>
