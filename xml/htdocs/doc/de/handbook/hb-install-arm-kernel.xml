<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-install-arm-kernel.xml,v 1.1 2009/03/29 10:51:50 micm Exp $ -->

<sections>

<version>9.0</version>
<date>2008-04-01</date>

<section>
<title>Setzen der Zeitzone des Systems</title>
<body>

<p>
Zuerst müssen Sie Ihrem System mitteilen, in welcher Zeitzone es sich befindet.
Suchen Sie Ihre Zeitzone in <path>/usr/share/zoneinfo</path> und kopieren Sie
sie nach <path>/etc/localtime</path>. Bitte vermeiden Sie die
<path>/usr/share/zoneinfo/Etc/GMT*</path> Zeitzonen, denn deren Namen verweisen
nicht auf die erwarteten Zonen. Zum Beispiel ist <path>GMT-8</path> in
Wirklichkeit GMT+8.
</p>

<pre caption="Setzen der Zeitzone">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Beispiel: GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installieren der Quellen</title>
<subsection>
<title>Auswählen eines Kernels</title>
<body>

<p>
Der Kern um den herum alle Distributionen gebaut sind ist der Linux-Kernel. Er
bildet die Ebene zwischen den Benutzerprogrammen und der Systemhardware. Gentoo
bietet seinen Benutzern verschiedene mögliche Kernelquellen. Eine komplette
Liste mit Beschreibungen finden Sie im <uri
link="/doc/de/gentoo-kernel.xml">Gentoo Kernel Guide</uri>.
</p>

<p>
Für ARM-Systeme nutzen wir die <c>gentoo-sources</c> (die beinhalten Patches für
zusätzliche Features).
</p>

<p>
Installieren Sie diese jetzt mit <c>emerge</c>.
</p>

<pre caption="Installieren von Kernelquellen">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Wenn Sie einen Blick in <path>/usr/src</path> werfen, sollten Sie einen
symbolischen Link mit Namen <path>linux</path> sehen, der auf Ihre
Kernelquellen verweist. In diesem Fall verweisen die installierten
Kernelquellen auf <c>gentoo-sources-<keyval id="kernel-version"/></c>. Beachten
Sie, dass Ihre Version davon abweichen kann.
</p>

<pre caption="Anzeigen des Kernelquellen Symlinks">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root   root    12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

</body>
</subsection>
</section>
<section id="manual">
<title>Standard: Manuelle Konfiguration</title>
<subsection>
<title>Einführung</title>
<body>

<p>
Einen Kernel manuell zu konfigurieren wird oft als der schwierigste Teil
gesehen, den jeder Linux Benutzer insgesamt meistern muss. Nichts ist weiter
von der Wahrheit entfernt -- nach der Konfiguration von einigen Kerneln werden
Sie sich gar nicht daran erinnern, dass es schwer war.
</p>

<p>
Eine Sache jedoch <e>ist</e> wahr: Sie müssen Ihr System kennen, wenn Sie
beginnen einen Kernel manuell zu konfigurieren. Die meisten Informationen über
vorhandene Hardware können gesammelt werden, indem Sie sich pciutils
installieren (<c>emerge pciutils</c>), welches <c>lspci</c> enthält. Sie haben
nun die Möglichkeit <c>lspci</c> innerhalb der chroot-Umgebung zu verwenden.
Sie können ohne Sorge jegliche <e>pcilib</e>-Warnungen (wie pcilib: cannot open
/sys/bus/pci/devices), die <c>lspci</c> ausgibt, ignorieren. Alternativ können
Sie <c>lspci</c> aus einer <e>nicht-chroot</e>-Umgebung ausführen. Das Resultat
ist dasselbe. Sie können auch <c>lsmod</c> ausführen, um zu sehen welche
Kernelmodule die Installations-CD verwendet (es kann Ihnen einen guten Hinweis
darauf geben was zu aktivieren ist).
</p>

<p>
Gehen Sie nun in Ihr Kernelquellverzeichnis und führen Sie <c>make
menuconfig</c> aus. Dies startet ein ncurses-basierendes Konfigurationsmenü.
</p>

<pre caption="Menuconfig starten">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Ihnen werden verschiedene Konfigurationssektionen präsentiert. Wir listen
zunächst einige Optionen auf, die Sie aktivieren müssen (ansonsten wird Gentoo
nicht funktionieren, oder ohne zusätzliche Veränderungen nicht richtig
funktionieren).
</p>

</body>
</subsection>
<subsection>
<title>Aktivieren der benötigten Optionen</title>
<body>

<p>
Durch die sehr spezialisierte Art von Embedded Systems werden wir hier bekannte
Konfigurationen für einige Boards behandeln. Wenn Ihre Maschine hier nicht
aufgeführt ist, sollten Sie die entsprechende Community-Website besuchen, um
herauszufinden, wie Sie Ihren Kernel konfigurieren müssen.
</p>

<p>
Bitte wählen Sie Ihre Maschine aus der Liste aus, um zu dem entsprechenden
Konfigurationsabschnitt zu gelangen.
</p>

<ul>
 <li><uri link="#netwinder">NetWinder</uri></li>
</ul>

</body>
</subsection>
</section>
<section id="netwinder">
<title>NetWinder Konfigurationsoptionen</title>
<body>

<p>
Denken Sie daran, dass EXT2-Unterstützung für die Boot-Partition benötigt wird,
da es das einzige Dateisystem ist, was von dem Bootloader verlässlich gelesen
werden kann. Ansonsten ist EXT3 das einzig getestete, aber Sie können gerne Ihr
Glück mit anderen Dateisystemen versuchen ;).
</p>

<pre caption="NetWinder Konfigurationsoptionen">
<comment>Erstellen Sie zuerst eine Standardkonfiguration</comment>
# <i>make netwinder_defconfig</i>

<comment>Erforderliche Optionen</comment>
System Type ---&gt;
  ARM system type (FootBridge) ---&gt;
    (X) FootBridge
  Footbridge Implementations ---&gt;
    [*] NetWinder

Floating point emulation ---&gt;
  [*] NWFPE math emulation

File systems ---&gt;
  [*] Second extended fs support
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

Device Drivers ---&gt;
  ATA/ATAPI/MFM/RLL support ---&gt;
    [*] ATA/ATAPI/MFM/RLL support
    [*]   Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support
    [*]     Include IDE/ATA-2 DISK support
    ---     IDE chipset support/bugfixes
    [*]     PCI IDE chipset support
    [*]       Winbond SL82c105 support
    [*]       Generic PCI bus-master DMA support

  Network device support ---&gt;
    [*] Network device support
    Ethernet (10 or 100Mbit) ---&gt;
      [*] Ethernet (10 or 100Mbit)
      Tulip family network device support ---&gt;
        [*] "Tulip" family network device support
        [*]   DECchip Tulip (dc2114x) PCI support
        [*]     Use PCI shared mem for NIC registers
        [*]     Use NAPI RX polling
      [*] EISA, VLB, PCI and on board controllers
      [*]   PCI NE2000 and clones support

  Character devices ---&gt;
    Serial drivers ---&gt;
      [*] 8250/16550 and compatible serial support
      [*]   Console on 8250/16550 and compatible serial port
      --- Non-8250 serial port support
      [*] DC21285 serial port support
      [*]   Console on DC21285 serial port
    Watchdog Cards ---&gt;
      [*] Watchdog Timer Support
      [*]   NetWinder WB83C977 watchdog
    [*] NetWinder thermometer support
    [*] NetWinder Button
    [*]   Reboot Using Button

<comment>Empfohlene Optionen</comment>
Kernel Features ---&gt;
  [*] Preemptible Kernel
  [*] Timer and CPU usage LEDs
  [*]   CPU usage LED

File systems ---&gt;
  [*] Ext3 journalling file system support

Device Drivers ---&gt;
  Input device support ---&gt;
    [*] Keyboards ---&gt;
      [*] AT keyboard
    [*] Mouse ---&gt;
      [*] PS/2 mouse

  Graphics support ---&gt;
    [*] Support for frame buffer devices
    [*]   Enable firmware EDID
    [*]   CyberPro 2000/2010/5000 support
    Logo configuration ---&gt;
      [*] Bootup logo
      [*]   Standard 224-color Linux logo

  Sound ---&gt;
    [*] Sound card support
    Open Sound System ---&gt;
      [*] Open Sound System
      [*]   OSS sound modules
      [*]     Yamaha FM synthesizer (YM3812/OPL-3) support
      [*]     Netwinder WaveArtist

<comment>Diese sollten Sie nur zum Upgraden des Flashspeichers verwenden</comment>
Device Drivers ---&gt;
  Character devices ---&gt;
    [*] NetWinder flash support
</pre>

<p>
Wenn Sie die Konfiguration des Kernel beendet haben fahren Sie mit <uri
link="#compiling">Kompilieren und Installieren</uri> fort.
</p>

</body>
</section>
<section id="compiling">
<title>Kompilieren und Installieren</title>
<body>

<p>
Nun da Ihr Kernel konfiguriert ist, ist es Zeit ihn zu kompilieren und zu
installieren. Verlassen Sie die Konfiguration und beginnen Sie mit dem
Kompilierungsvorgang:
</p>

<pre caption="Kompilieren des Kernels">
# <i>make &amp;&amp; make modules_install</i>
</pre>


<p>
Wenn der Kernel fertig kompiliert ist, kopieren Sie das Kernel-Image nach
<path>/boot</path>. Verwenden Sie jeglichen Namen, den Sie für Ihren Kernel
passend finden und merken Sie ihn sich, da Sie ihn später benötigen werden,
wenn Sie Ihren Bootloader konfigurieren. Denken Sie daran
<c><keyval id="kernel-name"/></c> durch den Namen und die Version Ihres Kernels
zu ersetzen.
</p>

<pre caption="Installieren des Kernels">
# <i>cp vmlinux.gz /boot/<keyval id="kernel-name"/></i>
</pre>

<p>
Fahren Sie nun mit <uri link="#kernel_modules">Kernelmodule</uri> fort.
</p>

</body>
</section>
<section id="kernel_modules">
<title>Kernelmodule</title>

<subsection>
<include href="hb-install-kernelmodules.xml"/>
</subsection>

</section>
</sections>
