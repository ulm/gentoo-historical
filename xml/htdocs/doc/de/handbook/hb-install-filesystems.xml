<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-install-filesystems.xml,v 1.3 2008/08/04 12:05:51 grahl Exp $ -->
<!DOCTYPE included SYSTEM "/dtd/guide.dtd">

<included>

<version>3</version>
<date>2008-03-03</date>

<section id="filesystemsdesc">
<title>Dateisysteme</title>
<body>

<p test="contains('x86 Alpha',func:keyval('arch'))">
Der Linux-Kernel unterstützt zahlreiche Dateisysteme. Wir erklären ext2, ext3,
ReiserFS, XFS und JFS, da diese die unter Linux gebräuchlichsten Dateisysteme
sind.
</p>

<p test="func:keyval('arch')='IA64'">
Der Linux-Kernel unterstützt zahlreiche Dateisysteme. Wir erklären vfat, ext2,
ext3, ReiserFS, XFS und JFS, da diese die unter Linux gebräuchlichsten
Dateisysteme sind.
</p>

<p test="func:keyval('arch')='AMD64'">
Verschiedene Dateisysteme sind verfügbar. Einige von ihnen sind als stabil auf
amd64 bekannt, andere nicht. Die folgenden Dateisystem sind als stabil bekannt:
ext2, ext3 und XFS. JFS und ReiserFS können funktionieren, sind aber noch nicht
ausreichend erprobt. Wenn Sie ein Abenteuer suchen können Sie die anderen
Dateisysteme ausprobieren.
</p>

<p test="func:keyval('arch')='arm'">
Verschiedene Dateisysteme sind verfügbar. Einige von ihnen sind als stabil auf
der Arm-Architektur bekannt, andere nicht. ext2 und ext3 sind als stabil
bekannt. JFS, XFS und ReiserFS können funktionieren, sind aber noch nicht
ausreichend erprobt. Wenn Sie ein Abenteuer suchen können Sie die anderen
Dateisysteme ausprobieren.
</p>

<p test="func:keyval('arch')='HPPA'">
Verschiedene Dateisysteme sind verfügbar. Ext2, ext3, XFS und reiserfs sind als
stabil bekannt. Die anderen sind sehr experimentell.
</p>

<p test="func:keyval('arch')='MIPS'">
Verschiedene Dateisysteme sind verfügbar. Für die MIPS-Architektur sind EXT2,
EXT3 und ReiserFS als stabil bekannt, andere sind experimentell.
</p>

<p test="func:keyval('arch')='PPC'">
Verschiedene Dateisysteme sind verfügbar für die PowerPC-Architektur, inklusive
ext2, ext3, ReiserFS und XFS, jedes mit seinen Stärken und Schwächen.
</p>

<note test="func:keyval('arch')='PPC64'">
Verschiedene Dateisysteme sind verfügbar. ext2-, ext3- und
ReiserFS-Unterstützung ist in den Kerneln der Installations-CD eingebaut. JFS-
und XFS-Unterstützung ist durch Kernelmodule verfügbar.
</note>

<p test="func:keyval('arch')='SPARC'">
Verschiedene Dateisysteme sind verfügbar, einige sind als stabil auf der
SPARC-Architektur bekannt. Zum Beispiel sind ext2 und ext3 für gute Funktion
bekannt. Andere Dateisysteme funktionieren eventuell nicht korrekt.
</p>

<note test="func:keyval('arch')='Alpha'">
Von <c>aboot</c> wird nur der Boot von <b>ext2</b> und <b>ext3</b>
Partitionan unterstützt.
</note>

</body>
<body>

<p test="func:keyval('arch')='IA64'">
<b>vfat</b> ist das MS-DOS Dateisystem, aktualisiert um lange Dateinamen zu
erlauben. Es ist außerdem das einzige Dateisystem, welches die EFI-Firmware auf
ia64-Systemen versteht. Die Boot-Partition auf ia64-Systemen sollte immer vfat
sein aber für Ihre Datenpartitionen sollten Sie eines der folgenden Dateisysteme
wählen.
</p>

<p>
<b>ext2</b> ist das erprobte und wahre Linux Dateisystem, unterstützt aber keine
Metadaten-Journalisierung, was bedeutet, dass routinemäßige Überprüfungen des
Dateisystem beim Booten ziemlich zeitaufwändig sein können. Es gibt mittlerweile
eine Auswahl an journalisierenden Dateisystemen neuerer Generation, die die
Konsistenzchecks sehr schnell erledigen und dadurch im Vergleich mit den
nicht-journalisierenden Gegenstücken vorzuziehen sind. Jounalisierende
Dateisysteme verhindern lange Verzögerungen beim Booten, wenn sich das
Dateisystem in einem inkonsistenten Zustand befindet.
</p>

<p>
<b>ext3</b> ist die journalisierte Version des ext2-Dateisystem. Es liefert
Metadaten-Journalisierung für schnelle Wiederherstellung, sowie andere
verbesserte Journalisierungs-Modi wie "Full Data"- und "Ordered
Data"-Journalisierung. Es verwendet einen HTree-Index der in fast allen
Situation zu einer hohen Performance führt. Kurz, ext3 ist ein sehr gutes und
verlässliches Dateisystem. Ext3 ist für alle Architekturen das empfohlene
Allzweck-Dateisystem.
</p>

</body>
<body test="not(func:keyval('arch')='SPARC')">

<p test="not(func:keyval('arch')='PPC')">
<b>JFS</b> ist IBMs journalisiertes Hochgeschwindigkeits-Dateisystem. JFS ist
schlankes, schnelles und verläßliches B+Tree basierendes Dateisystem mit guter
Performance in zahlreichen Situationen.
</p>

<p>
<b>ReiserFS</b> ist ein auf B+-Trees basierendes Dateisystem mit einer insgesamt
guten Performance, besonders wenn mit vielen sehr kleinen Dateien, zur Last von
mehr CPU-Zyklen, gearbeitet wird. ReiserFS hat den Anschein weniger gepflegt zu
werden als andere Dateisysteme.
</p>

<p>
<b>XFS</b> ist ein Dateisystem mit Metadaten-Journalisierung, es liefert einen
robusten Satz von Features und ist auf Skalierbarkeit optimiert. XFS scheint
weniger robust zu sein bei verschiedenen Hardware-Problemen.
</p>

</body>
</section>
</included>
