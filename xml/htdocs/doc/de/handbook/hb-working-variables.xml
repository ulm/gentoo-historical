<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- English CVS Version: 1.12 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-working-variables.xml,v 1.9 2005/05/12 21:50:50 dertobi123 Exp $ -->

<sections>

<version>1.9</version>
<date>2005-05-05</date>

<section>
<title>Umgebungsvariablen</title>
<subsection>
<title>Was sind Umgebungsvariablen?</title>
<body>

<p>
Eine Umgebungsvariable ist ein Objekt mit vorgegebenen Namen, welches
Informationen für eine oder mehrere Anwendungen bereitstellt. Viele
Benutzer (speziell diejenigen, die neu in Linux sind) finden dies etwas
seltsam oder schlecht handhabbar. Diese Annahme ist ein Fehler: Durch
Verwendung von Umgebungsvariablen kann die Konfigurationseinstellung
von einem oder mehreren Programmen sehr einfach geändert werden.
</p>

</body>
</subsection>
<subsection>
<title>Wichtige Beispiele</title>
<body>

<p>
Die folgende Tabelle enthält einige Variablen, die in einem Linux-System
verwendet werden und beschreibt deren Bedeutung. Einige Beispiele werden
im Anschluss an die Tabelle dargestellt.
</p>

<table>
<tr>
  <th>Variable</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
    Diese Variable enthält eine durch Semikolon getrennte Liste von Verzeichnissen
    in denen Ihr System nach ausführbaren Dateien schaut. Wenn Sie den Namen
    einer ausführbaren Datei, wie zum Beispiel <c>ls</c>, <c>rc-update</c> oder 
    <c>emerge</c> eingeben und diese Datei sich aber nicht in der Liste befindet,
    wird sie nicht ausgeführt, es sei denn, Sie geben dann den vollständigen Pfad
    an (z.B. <c>/bin/ls</c>).
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
    Diese Variable hat die gleiche Funktion wie  <c>PATH</c>, aber hier werden
    die Verzeichnisse aufgelistet, die durchsucht werden, wenn man als root
    einen Befehl eingibt.
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
    Diese Variable enthält eine durch Semikolon getrennte Liste von Verzeichnissen
    in denen Ihr dynamischer Linker nach System-Bibliotheken schaut.
  </ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>
    Diese Variable enthält eine durch Semikolon getrennte Liste von Verzeichnissen
    in denen der <c>man</c> Befehl nach der entsprechenden man-page sucht.
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
    Diese Variable enthält eine durch Semikolon getrennte Liste von Verzeichnissen
    in denen der <c>info</c> Befehl nach der entsprechenden info Seite sucht.
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
    Diese Variable enthält den Pfad zu dem Standard-Programm, welches zur Anzeige
    von Dateiinhalten verwendet wird (z.B. <c>less</c> oder <c>more</c>).
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
    Diese Variable enthält den Pfad zu dem Standard-Programm, welches zur Bearbeitung
    von Dateien verwendet wird (z.B. <c>nano</c> oder <c>vi</c>).

  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
    Diese Variable enthält eine durch Semikolon getrennte Liste von Verzeichnissen
    in denen KDE-spezifisches Material enthalten ist.
  </ti>
</tr>
<tr>
  <ti>CLASSPATH</ti>
  <ti>
    Diese Variable enthält eine durch Semikolon getrennte Liste von Verzeichnissen
    in denen die Java Klassen gespeichert sind.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
    Diese Variable enthält eine durch <e>Leerzeichen</e> getrennte Liste von Anwendungen, 
    die bei Aktualisierungen durch Portage nicht angetastet werden.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
    Diese Variable enthält eine durch <e>Leerzeichen</e> getrennte Liste von Anwendungen, 
    die durch Aktualisierungen von Portage nicht geschützt sind.
  </ti>
</tr>
</table>

<p>
Hier finden Sie eine Beispieldefinition der oben vorgestellten Variablen:
</p>

<pre caption="Beispielsdefinition">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CLASSPATH="/opt/blackdown-jre-1.4.1/lib/rt.jar:."
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf
</pre>

</body>
</subsection>
</section>
<section>
<title>Variablen global definieren</title>
<subsection>
<title>Das /etc/env.d Verzeichnis</title>
<body>

<p>
Um die einzelnen Definitionen der Variablen zentralisieren zu können,
wurde in Gentoo das <path>/etc/env.d</path> Verzeichnis angelegt.
Innerhalb dieses Verzeichnisses finden Sie einige Dateien, wie zum
Beispiel <path>00basic</path>, <path>05gcc</path>, etc. welche
die Variablen der einzelnen Applikationen enthalten.
</p>

<p>
In unserem Beispiel, wenn Sie <c>gcc</c> installieren, wird
die Datei <path>05gcc</path> von dem ebuild angelegt und enthält
die Definition folgender Variablen:
</p>

<pre caption="/etc/env.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
In anderen Linux Distributionen werden solche Variablen in <path>/etc/profile</path>
geändert oder hinzugefügt. Gentoo hingegen macht es so für Sie (und für Portage)
deutlich einfacher die Umgebungsvariablen zu verwalten, ohne auf die vielen
verschiedenen Dateien, welche Umgebungsvariablen enthalten können, eingehen
zu müssen.
</p>

<p>
In unserem Fall, wenn ein Update von <c>gcc</c> durchgeführt wird, wird die
Datei <path>/etc/env.d/05gcc</path> automatisch aktualisiert, ohne den Benutzer
unnötig damit konfrontieren zu müssen.
</p>

<p>
Von dieser Methode profitiert nicht nur Portage sondern auch Sie als Benutzer.
Gelegentlich werden Sie gefragt, ob Sie eine bestimmte Umgebungsvariable
systemweit setzen wollen. Zum Beispiel bei der Variable <c>http_proxy</c>.
Anstatt sich mit <path>/etc/profile</path> auseinanderzusetzen müssen, legen
Sie einfach eine entsprechende Datei (<path>/etc/env.d/99local</path>) an 
und tragen darin die gewünschten Definitionen ein:
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
Indem Sie diesselbe Datei für alle Variablen verwenden, haben Sie einen
schnellen Überblick über alle Variablen, die Sie selbst gesetzt haben.
</p>

</body>
</subsection>
<subsection>
<title>Das env-update Script</title>
<body>

<p>
Einige Dateien in <path>/etc/env.d</path> definieren die Variable <c>PATH</c>.
Dies ist kein Fehler: Wenn Sie <c>env-update</c> ausführen, wird es die
ganzen zusätzlichen Definitionen anhängen, bevor es die Umgebungsvariablen 
aktualisert. Somit wird es den Benutzern (oder Entwicklern) sehr einfach
gemacht, eigene Umgebungsvariablen hinzuzufügen, ohne sich mit den bestehenden
Werten herumschlagen zu müssen.
</p>

<p>
Das <c>env-update</c> Skript wird diese Werte in alphabetischer Reihenfolge der
<path>/etc/env.d</path> Dateien hinzufügen. Deshalb beginnen viele der Dateien
im <path>/etc/env.d</path> Verzeichnis mit einer Nummer
</p>

<pre caption="Update-Reihenfolge von env-update">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
Die Verkettung von Variablen geschieht nicht bei allen, sondern nur bei 
folgenden Variablen: <c>KDEDIRS</c>, <c>PATH</c>, <c>CLASSPATH</c>, 
<c>LDPATH</c>, <c>MANPATH</c>, <c>INFODIR</c>, <c>INFOPATH</c>, 
<c>ROOTPATH</c>, <c>CONFIG_PROTECT</c>, <c>CONFIG_PROTECT_MASK</c>, 
<c>PRELINK_PATH</c> und <c>PRELINK_PATH_MASK</c>. Für alle anderen Variablen 
wird der zuletzt definierte Wert (in alphabetischer Reihenfolge der Dateien in 
<path>/etc/env.d</path>) verwendet.
</p>

<p>
Wenn Sie <c>env-update</c> ausführen, wird das Skript alle Umgebungsvariablen
erstellen und sie in <path>/etc/profile.env</path> ablegen (welches von 
<path>/etc/profile</path> verwendet wird). Zusätzlich wird es die Informationen
aus der <c>LDPATH</c> Variable verwenden, um <path>/etc/ld.so.conf</path>
anzulegen. Anschliessend wird es <c>ldconfig</c> ausführen, um für
den dynamischen Linker die Datei <path>/etc/ld.so.cache</path> neu
zu erstellen.
</p>

<p>
Um sofort von den Änderungen in <c>env-update</c> profitieren zu können, ohne
das System neu zu booten, müssen Sie nur folgenden Befehl ausführen. Den
meisten Benutzern wird er noch von der Installationsanleitung her bekannt sein:
</p>

<pre caption="Umgebungsvariablen aktualisieren">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Variablen lokal definieren</title>
<subsection>
<title>Benutzerspezifisch</title>
<body>

<p>
Nicht immer wollen Sie eine Umgebungsvariable global definieren. Wenn Sie zum
Beispiel <path>/home/my_user/bin</path> zu der <c>PATH</c> Variable
hinzufügen wollen, aber nicht alle anderen Benutzer  ebenfalls dies in ihrem
<c>PATH</c>, dann sollten Sie die Variable in <path>~/.bashrc</path> oder
<path>~/.bash_profile</path> lokal definieren: 
</p>

<pre caption="Erweitern des  PATH für lokale Verwendung in ~/.bashrc">
PATH="${PATH}:/home/my_user/bin"
</pre>

<p>
Wenn Sie sich nun erneut anmelden, werden Ihre <c>PATH</c> Variablen aktualisiert.
</p>

</body>
</subsection>
<subsection>
<title>Sitzungsspezifisch</title>
<body>

<p>
Mannchmal müssen die einzelnen Definitionen noch strikter gehandhabt werden.
Wenn Sie zum Beispiel Binärdateien von einem temporär angelegtem Verzeichnis 
verwenden wollen, ohne den Pfad zu den entsprechenden Daten anzulegen, oder
<path>~/.bashrc</path> für diesen Verwendungszweck extra abändern zu müssen.
</p>

<p>
In diesem Fall können Sie <c>PATH</c> für Ihre aktuelle Sitzung mit dem
<c>export</c> Befehl setzen. Diese Einstellungen bleiben Ihnen bis zum 
nächsten Logout erhalten.
</p>

<pre caption="Setzen einer sitzungsspezifischen Variable">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>
