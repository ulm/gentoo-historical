<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- English CVS Version: 1.12 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-install-hppa-kernel.xml,v 1.4 2004/12/05 18:47:10 dertobi123 Exp $ -->

<sections>

<version>1.9</version>
<date>2004-11-26</date>

<section>
<title>Setzen der Zeitzone des Systems</title>
<body>

<p>
Zuerst müssen Sie dem System sagen, in welcher Zeitzone es sich befindet. Dazu
suchen Sie sich unter <path>/usr/share/zoneinfo</path> die entsprechende
Zeitzone aus und verlinken sie mit <c>ln</c> nach <path>/etc/localtime</path>:
</p>

<pre caption="Setzen der Zeitzone">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Beispiel: GMT)</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installieren der Quellen</title>
<subsection>
<title>Auswählen eines Kernels</title>
<body>

<p>
Der Kern um den herum alle Distributionen gebaut sind ist der Linux Kernel. Es
ist die Ebene zwischen den Benutzerprogrammen und der Systemhardware. Gentoo
bietet seinen Benutzern verschiedene mögliche Kernelquellen. Eine komplette
Liste mit Beschreibungen finden Sie im <uri link="http://www.gentoo.org/doc/de/gentoo-kernel.xml">
Gentoo Kernel Guide</uri>.
</p>

<p>
Für HPPA haben wir <c>hppa-sources</c> für einen 2.4er Kernel und
<c>hppa-dev-sources</c> für einen 2.6er Kernel. Fahren Sie mit dem Installieren
der Quellen fort:
</p>

<pre caption="Installieren einer Kernelquelle">
# <i>emerge hppa-sources</i>
</pre>

<p>
Wenn Sie einen Blick in <path>/usr/src</path> werfen, sollten Sie einen Symlink
sehen, genannt <path>linux</path>, der auf Ihre Kernelquelle verweist.
</p>

<pre caption="Anzeigen des Kernelquellen Symlinks">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt;linux-2.4.24
</pre>

<p>
Wenn das nicht der Fall ist (also der Symlink auf eine andere Kernelquelle
verweist) ändern Sie den Symlink bevor sie weitermachen:
</p>

<pre caption="Ändern des Kernelquellen Symlinks">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s /usr/src/linux-2.4.24 /usr/src/linux</i>
</pre>

<p>
Nun ist es Zeit Ihre Kernelquelle zu konfigurieren und zu kompilieren. Alle
Architekturen können <c>genkernel</c> verwenden, welches einen generischen
Kernel erstellt, wie er von der LiveCD verwendet wird. Wir erklären die
"manuelle" Konfiguration jedoch zuerst, denn es ist der beste Weg Ihre Umgebung
zu optimieren.
</p>

<p>
Wenn Sie Ihren Kernel manuell konfigurieren wollen fahren Sie nun mit <uri
link="#doc_chap3">Standard: Manuelle Konfiguration</uri> fort. Wenn
Sie <c>genkernel</c> benutzen wollen, sollten Sie stattdessen
<uri link="#doc_chap4">Alternativ: Benutzung von Genkernel</uri> lesen.
</p>

</body>
</subsection>
</section>
<section>
<title>Standard: Manuelle Konfiguration</title>
<subsection>
<title>Einführung</title>
<body>

<p>
Einen Kernel manuell zu konfigurieren wird oft als der schwierigste Teil
gesehen, den jeder Linux Benutzer insgesamt meistern muss. Nichts ist weiter von
der Wahrheit entfernt -- nach der Konfiguration von einigen Kerneln werden Sie
sich gar nicht daran erinnern, dass es schwer war ;-)
</p>

<p>
Jedoch eine Sache <e>ist</e> wahr: Sie müssen Ihr System kennen, wenn Sie
beginnen einen Kernel manuell zu konfigurieren. Die meissten Informationen
können gesammelt werden, indem Sie sich <path>/proc/pci</path> ansehen (oder
durch <c>lspci</c> benutzen, wenn vorhanden). Sie können auch
<c>lsmod</c> ausführen um zu sehen welche Kernelmodule die LiveCD verwendet
(es kann ihnen einen netten Hinweis darauf geben was zu aktivieren ist).
</p>

<p>
Gehen Sie nun in Ihr Kernelquellverzeichnis und führen Sie <c>make menuconfig</c>
aus. Dies startet ein ncurses-basierendes Konfigurationsmenü.
</p>

<pre caption="Menuconfig starten">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Ihnen werden verschiedene Konfigurationssektionen präsentiert. Wir listen
zunächst einige Optionen auf, die sie aktivieren müssen (ansonsten wird Gentoo
nicht funktionieren, oder ohne zusätzliche Veränderungen nicht richtig
funktionieren).
</p>

</body>
</subsection>
<subsection>
<title>Aktivieren der benötigten Optionen</title>
<body>

<p>
Zunächst aktivieren Sie die Benutzung von Entwicklungs- und Experiementellem/n
Code/Treiber(n). Sie brauchen dies, denn ansonsten werden einige wichtige
Codeabschnitte/Treiber nicht erscheinen.
</p>

<pre caption="Selektieren experimenteller/n Codes/Treiber">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Gehen Sie nun in <c>File Systems</c> und selektieren Sie Unterstützung für die
Dateisysteme die Sie benutzen. Kompilieren Sie diese <e>nicht</e> als Module,
ansonsten wird ihr Gentoo System nicht fähig sein, Ihre Partitionen zu mounten.
Selektieren Sie auch <c>Virtual memory</c>, <c>/proc file system</c>, <c>/dev
file system</c> + <c>Automatically mount at boot</c>:
</p>

<pre caption="Selektieren notwendiger Dateisysteme">
<comment>(Mit einem 2.4.x Kernel)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Mit einem 2.6.x Kernel)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] /dev/pts file system for Unix98 PTYs
    [*] Virtual memory file system support (former shm fs)

<comment>(Selektieren Sie eine oder mehrere der folgenden Optionen, wie benötigt
von Ihrem System)
</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Wenn Sie PPPoE benutzen um sich ins Internet einzuwählen oder Sie benutzen
ein Einwahl Modem, brauchen Sie folgende Optionen im Kernel:
</p>

<pre caption="Auswählen PPPoE notwendiger Treiber">
<comment>Mit einem 2.4.x Kernel)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
<comment>(Mit einem 2.6.x Kernel)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Die zwei Komprimierungsoptionen werden nicht schaden, aber werden auch nicht
definitiv gebraucht, ebenso die <c>PPP over Ethernet</c> Option, die vielleicht
nur von <c>rp-pppoe</c> verwendet wird, wenn der Kernelmodus PPPoE benutzt wird.
</p>

<p>
Wenn Sie es benötigen, vergessen Sie nicht Ünterstützung für Ihre Netzwerkkarte
in Ihren Kernel einzubinden.
</p>

<p>
Wenn Sie eine HIL Maus oder Tastatur haben vergessen Sie nicht Unterstützung für
diese einzukompilieren.
</p>

<pre caption="Aktivieren von HIL Unterstützung">
Input core support ---&gt;
  [*] Keyboard support
  [*] Mouse support
  [*] Event interface support
</pre>

<p>
Wenn Sie keine Maus an ihrem HIL Anschluss haben, sollten Sie nur die
Standardunterstützung verwenden:
</p>

<pre caption="Grundlegende HIL Unterstützung">
HIL support ---&gt;
  [*] HIL Keyboard (basic) support
</pre>

<p>
Wenn Sie jedoch <e>volle</e> HIL Unterstützung wollen, wählen Sie folgende
Optionen aus:
</p>

<pre caption="Volle HIL Unterstützung">
HIL support ---&gt;
  [*] HP System Device Controller i8042 Support
  [*] HIL MLC Support
  [*] HIL Keyboard (full) support
  [*] HIL Mouse &amp; Pointer support
</pre>

<p>
Aktivieren Sie den "Display Driver Support":
</p>

<pre caption="Display Driver support">
Graphics support ---&gt;
  [*] Support for frame buffer devices
      [*] HP STI frame buffer device support
  Console display driver support ---&gt;
      [*] STI text console
</pre>

<p>
Wenn Sie die Konfiguration des Kernel beendet haben fahren Sie mit <uri
link="#compiling">Kompilieren und Installieren</uri> fort.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilieren und Installieren</title>
<body>

<p>
Nun da Ihr Kernel konfiguriert ist, ist es Zeit ihn zu kompilieren und zu
installieren. Verlassen Sie die Konfiguration und führen Sie <c>make dep
&amp;&amp; make bzImage modules modules_install</c> aus:
</p>

<pre caption="Kompilieren des Kernels">
<comment>(Für 2.4 Kernel)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(Für 2.6 Kernel)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Wenn der Kernel fertig ist mit der Kompilierung, kopieren Sie das Kernel-Image
nach <path>/boot</path>. Im nächsten Beispiel nehmen wir an, dass Sie die
<c>vanilla-sources-2.4.24</c> konfiguriert und kompiliert haben (welcher nicht
der richtige Kernel für Ihr System sein muss):
</p>

<pre caption="Installieren des Kernels">
# <i>cp vmlinux /boot/kernel-2.4.24</i>
# <i>cp System.map /boot/System.map-2.4.24</i>
</pre>

<p>
Es ist auch Weise Ihre Kernelkonfiguration nach <path>/boot</path> zu kopieren,
nur für alle Fälle :)
</p>

<pre caption="Erstellen eines Backups der Kernelkonfiguration ">
# <i>cp .config /boot/config-2.4.24</i>
</pre>

<p>Fahren Sie nun mit dem <uri link="#doc_chap5">Installieren separater
Kernelmodule</uri> fort.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternativ: Benutzung von Genkernel</title>
<body>

<p>
Wenn Sie diesen Abschnitt lesen, haben Sie sich entschieden unser
<c>genkernel</c> Script zu benutzen, um sich Ihren Kernel konfigurieren zu
lassen.
</p>

<p>
Nun da Ihr Kernelquellbaum installiert ist, ist es an der Zeit Ihren Kernel
automatisch durch das <c>genkernel</c> Script erstellen zu lassen. <c>genkernel</c>
arbeitet so, dass es einen Kernel konfiguriert, der fast identisch ist zu denen
auf unser LiveCD ist. Dies bedeutet, dass wenn Sie <c>genkernel</c> benutzen um
Ihren Kernel zu erstellen, Ihr System generell alle Hardware beim Booten erkennt,
genau wie es unsere LiveCD tut. Weil <c>genkernel</c> keine manuelle
Kernelkonfiguration erfordert ist es eine ideale Lösung für die Benutzer, denen
Unwohl bei der Kompilierung eines eigenen Kernel ist.
</p>

<p>
Nun lassen Sie uns sehen wie man Genkernel benutzt. Zuerst installieren Sie
<c>genkernel</c>:
</p>

<pre caption="Genkernel emergen">
# <i>emerge genkernel</i>
</pre>

<p>
Kompilieren Sie nun Ihre Kernelquellen durch <c>genkernel all</c>.
Seien Sie sich aber bewusst, dass <c>genkernel</c> einen Kernel kompiliert,
der fast alle Hardware unterstützt, was bedeutet dass das Kompilieren durchaus
eine ganze Weile dauern kann!
</p>

<p>
Beachten Sie das, wenn Ihre Boot Partition weder ext2 noch ext3 als Dateisystem
benutzt Sie Ihren Kernel selber mit <c>genkernel --menuconfig all</c>
konfigurieren und Unterstützung für Ihr Dateisystem <c>im</c> Kernel aktivieren
müssen (<e>nicht</e> als Modul).
</p>

<pre caption="Ausführen von Genkernel">
# <i>genkernel all</i>
GenKernel v3.0.1_beta10
* ARCH: HPPA
* KERNEL VER: 2.4.24
* kernel: configuring source
* kernel: running mrproper
<comment>(Output entfernt, um die Lesbarkeit zu erhöhen)</comment>
* Kernel compiled successfully!
* Required Kernel Params:
*   : root=/dev/ram0 init=/linuxrc real_root=/dev/$ROOT
*     where $ROOT is the devicenode for your root partition as
*     you should have specified in /etc/fstab
*
* You MUST tell your bootloader to use the generated initrd
*
* Recommended Kernel Params:
*   : vga=0x317 splash=verbose
*
* Do NOT report kernel bugs (configs included) as genkernel bugs.
* Make sure you have the latest genkernel before reporting bugs
*
* For more info see /usr/share/genkernel/README
</pre>

<p>
Sobald <c>genkernel</c> beendet ist werden ein Kernel, ein voller Satz Module
und eine <e>initial root disk</e> (initrd) erstellt sein. Wir werden den Kernel
und initrd benutzen wenn wir später in diesem Handbuch einen Bootloader
konfigurieren. Schreiben Sie den Namen des Kernels und den Ihrer initrd auf, da
Sie diese brauchen werden, wenn Sie die den Bootloader konfigurieren.
Die initrd wird direkt nach dem Booten gestartet um die Hardware
Autoerkennung zu starten (genau wie auf der LiveCD) bevor ihr "wahres" System
startet.
</p>

<pre caption="Kontrollieren des Kernel Image Namen und der initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Nun lassen Sie uns einen weiteren Schritt tun, der unser System dazu bringt mehr
wie die LiveCD zu sein -- lassen Sie uns <c>coldplug</c> emergen. Während das
initrd die Hardware automatisch erkennt, die nötig ist um Ihr System zu starten,
wird <c>coldplug</c> automatisch alles andere erkennen. Um <c>coldplug</c> zu
installieren und zu aktivieren tippen sie folgendes:
</p>

<pre caption="Emergen und aktivieren von coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug default</i>
</pre>

</body>
</section>
<section>
<title>Installieren separater Kernelmodule</title>
<subsection>
<title>Konfiguration der Module</title>
<body>

<p>
Sie sollten alle Module, die automatisch geladen werden sollen, in
<path>/etc/modules.autoload.d/kernel-2.4</path> (oder <path>kernel-2.6</path>)
eintragen. Wenn Sie möchten können Sie auch zusätzliche Optionen anhängen.
</p>

<p>
Um alle verfügbaren Module anzuzeigen führen Sie das folgende <c>find</c>
Kommando aus. Vergessen Sie nicht  "&lt;kernel version&gt;" mit der Version
Ihres Kernel zu ersetzen, den Sie gerade kompiliert haben:
</p>

<pre caption="Listen aller verfügbarer Module">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Um zum Beispiel das <c>3c59x.o</c> Modul automatisch zu laden editieren Sie die
entweder <path>kernel2-.4</path> oder das <path>kernel-2.6</path> Datei und
tragen das Modul ein.
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.4">
<comment>(Beispiel für 2.4 kernels)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 oder kernel-2.6">
3c59x
</pre>

<p>
Führen Sie nun <c>modules-update</c> aus um Ihre Änderungen zur
<path>/etc/modules.conf</path> Datei hinzuzufügen:
</p>

<pre caption="Ausführen von modules-update">
# <i>modules-update</i>
</pre>

<p>
Fahren Sie nun mit der <uri link="?part=1&amp;chap=8">Konfiguration des
System</uri> fort.
</p>

</body>
</subsection>
</section>
</sections>
