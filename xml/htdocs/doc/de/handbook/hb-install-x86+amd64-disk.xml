<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- English CVS Version: 1.6 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-install-x86+amd64-disk.xml,v 1.3 2006/11/11 08:48:39 grahl Exp $ -->

<sections>

<abstract>
Um in der Lage zu sein Gentoo installieren zu können müssen Sie die notwendigen
Partitionen erstellen. Dieses Kapitel beschreibt wie man eine Festplatte für
den Gebrauch partitioniert.
</abstract>

<version>4.1</version>
<date>2006-11-02</date>

<section>
<title>Einführung in Block-Devices</title>
<subsection>
<title>Block-Devices</title>
<body>

<p>
In diesem Abschnitt werden Sie einen guten Einblick in die auf Festplatten 
bezogenen Aspekte von Gentoo Linux und Linux im Allgemeinen, inklusive Linux 
Dateisystemen, Partitionen und Block Devices erhalten.
Nachdem Sie mit den Vor- und Nachteilen von Festplatten und Dateisystemen
vertraut sind, werden Sie durch den Prozess des Partitionierens und der
Dateisystemerstellung für Ihre Gentoo Linux Installation geführt.
</p>

<p>
Zu Beginn werden wir Ihnen <e>Block-Devices</e> vorstellen. Das berühmteste
Block-Device is wahrscheinlich das, welches das erste IDE-Laufwerk in einem
Linux-System repräsentiert, namentlich <path>/dev/hda</path>. Wenn Ihr System
SCSI oder SATA Laufwerke verwendet, dann wäre Ihre erste Festplatte
<path>/dev/sda</path>.
</p>

<p>
Das obige Block-Device repräsentiert eine abstrakte Schnittstelle zur
Festplatte. Benutzerprogramme können diese Block-Device benutzen, um Ihre
Festplatte anzusprechen, ohne sich darum zu kümmern, ob Ihre Festplatten via
IDE, SCSI oder irgendwas anders angeschlossen sind. Das Programm kann den
Speicherplatz auf der Festplatte einfach als eine Anhäufung von
zusammenhängenden, beliebig zugreifbaren 512-Byte Blöcken ansprechen.
</p>

</body>
</subsection>
<subsection>
<title>Partitionen</title>
<body>

<p>
Obwohl es theoretisch möglich ist eine ganze Festplatte zu nutzen, um Ihr Linux
System zu beherbergen, wird dies in der Praxis so gut wie nie gemacht.
Stattdessen werden komplette Festplatten-Block-Devices in kleinere, besser
verwaltbare Block-Devices unterteilt. Auf <keyval id="arch"/>-Systemen werden
diese <e>Partitionen</e> genannt.
</p>

<p>
Es wird zwischen drei Partitionstypen unterschieden:
<e>primär</e>, <e>erweitert</e> und <e>logisch</e>.
</p>

<p>
Eine <e>primäre</e> Partition ist eine Partition, deren Informationen im MBR
(Master Boot Record) gespeichert sind. Da ein MBR sehr klein ist (512 Bytes),
können nur vier primäre Partitionen definiert werden (zum Beispiel
<path>/dev/hda1</path> bis <path>/dev/hda4</path>).
</p>

<p>
Eine <e>erweiterte</e> Partition ist eine spezielle primäre Partition (was
bedeutet, dass eine erweiterte Partition eine der vier möglichen primären
Partitionen sein muss), welche mehrere Partitionen beinhaltet. Eine solche
Partition existierte ursprünglich nicht, aber da vier Partitionen zu wenig sind,
wurden sie erfunden, um das Format zu erweitern ohne die Rückwärtskompatibilität
zu verlieren.
</p>

<p>
Eine <e>logische</e> Partition ist eine Partition innerhalb einer erweiterten
Partition. Ihre Definitionen sind nicht im MBR gespeichert, sondern in der
erweiterten Partition.
</p>

</body>
</subsection>

<subsection>
<title>Fortgeschrittene Speicherung</title>
<body>

<p>
Die <keyval id="arch"/>-Installations-CDs bieten Unterstützung für EVMS oder
LVM2. EVMS oder LVM2 erlauben es Ihnen Ihr Partitionssetup flexibler zu
gestalten. Innerhalb dieser Installationsanleitung konzentrieren wir uns auf
"normale" Partitionen, es ist aber gut zu wissen, dass EVMS und LVM2 genauso
unterstützt werden.
</p>

</body>
</subsection>

</section>
<section>
<title>Erstellung eines Partitionsschemas</title>
<subsection>
<title>Standard Partitionsschema</title>
<body>

<p>
Wenn Sie nicht daran interessiert sind ein Partitionsschema für Ihr System zu
erstellen, können Sie das Partitionsschema verwenden, welches wir
in diesem Handbuch benutzen:
</p>

<table>
<tr>
  <th>Partition</th>
  <th>Dateisystem</th>
  <th>Größe</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>ext2</ti>
  <ti>32M</ti>
  <ti>Boot Partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Swap Partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>ext3</ti>
  <ti>Rest der Festplatte</ti>
  <ti>Root Partition</ti>
</tr>
</table>

<p>
Wenn Sie daran interessiert sind zu erfahren, wie groß eine Partition sein
sollte, oder auch wie viele Partitionen (oder Volumes) Sie benötigen, lesen
Sie weiter. Anderenfalls fahren Sie nun mit dem <uri
link="#fdisk">Partitionieren Ihrer Festplatte</uri> fort.
</p>

</body>
</subsection>
<subsection>
<title>Wie viele und wie groß?</title>
<body>

<p>
Die Anzahl an Partitionen hängt von Ihrer Umgebung ab. Wenn Sie z.B. eine Menge
User haben, wollen Sie höchst wahrscheinlich Ihr <path>/home</path> separat
halten, da es die Sicherheit erhöht und Backups einfacher macht. Wenn Sie
Gentoo installieren um als Mailserver zu fungieren, sollten Sie
<path>/var</path> separat halten, da alle Mails in <path>/var</path>
gespeichert werden. Eine gute Wahl des Dateisystems maximiert dann zusätzlich
die Performance. Gameserver sollten ein separates <path>/opt</path> haben, da
die meisten Server für Spiele dort installiert werden. Der Grund ist ähnlich
wie bei <path>/home</path>: Sicherheit und Backups. Es liegt definitiv in Ihrem
Interesse <path>/usr</path> groß zu behalten: es wird nicht nur die Mehrheit
der Programme enthalten; der Portage-Baum allein belegt etwa 500Mbyte, ohne die
verschiedensten Quellen die darin gespeichert sind mitzurechnen.
</p>

<p>
Wie Sie sehen können, hängt es sehr stark davon ab, was Sie erreichen wollen.
Separate Partitionen oder Volumes haben folgende Vorteile:
</p>

<ul>
<li>
  Sie können das Filesystem mit der höchsten Performance für jede Partition oder
  jedes Volume auswählen
</li>
<li>
  Ihr System behält noch freien Speicherplatz, selbst wenn ein defektes Tool
  ununterbrochen Dateien auf eine Partition oder ein Volume schreibt
</li>
<li>
  Falls nötig können Dateisystem Checks zeitlich verkürzt werden, in dem
  mehrere Checks parallel durchgeführt werden können (obwohl dieser Vorteil eher
  mit mehreren Festplatten als mit mehreren Partitionen zum Tragen kommt)
</li>
<li>
  Die Sicherheit kann erhöht werden, indem Sie einige Partitionen oder Volumes
  read-only, nosuid (setuid bits werden ignoriert), noexec (executable bits
  werden ignoriert) etc mounten.
</li>
</ul>

<p>
Wie dem auch sei, mehrere Partitionen haben einen großen Nachteil: wenn sie
nicht ordentlich konfiguriert werden, könnte das Resultat ein System sein,
welches viel Speicherplatz auf der einen Partition und keinen auf einer Anderen
frei hat. Weiterhin gibt es ein Limit von maximal 15 Partitionen bei SCSI und
SATA.
</p>

<p>
Als Beispiel zeigen wir Ihnen die Partitionierung einer 20GB Festplatte, welche
in einem Notebook zu Demonstrationszwecken genutzt wird (inklusive Webserver,
Mailserver, Gnome, ...):
</p>

<pre caption="Dateisystemnutzung, Beispiel">
$ <i>df -h</i>
Filesystem    Type    Size  Used Avail Use% Mounted on
/dev/hda5     ext3    509M  132M  351M  28% /
/dev/hda2     ext3    5.0G  3.0G  1.8G  63% /home
/dev/hda7     ext3    7.9G  6.2G  1.3G  83% /usr
/dev/hda8     ext3   1011M  483M  477M  51% /opt
/dev/hda9     ext3    2.0G  607M  1.3G  32% /var
/dev/hda1     ext2     51M   17M   31M  36% /boot
/dev/hda6     swap    516M   12M  504M   2% &lt;not mounted&gt;
<comment>(Unpartitionierter Speicherplatz für zukünftige Benutzung: 2 GB)</comment>
</pre>

<p>
<path>/usr</path> ist ziemlich voll (83% used), aber sobald die ganze Software
installiert ist, tendiert <path>/usr</path> nicht mehr dazu allzuviel zu
wachsen. Die Zuweisung von einigen Gigabyte Festplattenspeicher für
<path>/var</path> erscheint exzessiv, Sie sollten aber daran denken, dass
Portage diese Partition standardmäßig zur Kompilierung von Paketen verwendet.
Wenn Sie <path>/var</path> eine etwas angemessenere Größe, wie z.B. 1GB,
zuweisen möchten, müssen Sie die <c>PORTAGE_TMPDIR</c> Variable in
<path>/etc/make.conf</path> auf eine Partition mit genügend freiem
Speicherplatz verweisen lassen, damit genug freier Speicher auch für extrem
große Pakete wie OpenOffice vorhanden ist.
</p>

</body>
</subsection>
</section>
<section id="fdisk">
<title>Partitionierung Ihrer Festplatte</title>
<subsection>
<body>

<p>
Die folgenden Teile erklären, wie das bereits beschriebene Beispiel
Partitionslayout erstellt wird:
</p>

<table>
<tr>
  <th>Partition</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>Boot-Partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>Swap-Partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Root-Partition</ti>
</tr>
</table>

<p>
Ändern Sie Ihr Partitionslayout nach Ihren eigenen Vorstellungen.
</p>

</body>
</subsection>
<subsection>
<title>Die derzeitige Partitionstabelle ansehen</title>
<body>

<p>
<c>Fdisk</c> ist ein verbreitetes und mächtiges Tool um Ihre Festplatte in
Partitionen zu teilen. Starten Sie <c>fdisk</c> für Ihre Festplatte (in unserem
Beispiel benutzen wir <path>/dev/hda</path>):
</p>

<pre caption="Starten von fdisk">
# <i>fdisk /dev/hda</i>
</pre>

<p>
Sobald Sie in <c>fdisk</c> sind, werden Sie mit folgendem Prompt begrüßt:
</p>

<pre caption="fdisk Prompt">
Command (m for help): 
</pre>

<p>
Drücken Sie <c>p</c> um Ihr derzeitige Partitionstabelle anzeigen zu lassen:
</p>

<pre caption="Eine Beispiel Partitionstabelle">
Command (m for help): <i>p</i>

Disk /dev/hda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        49    264600   82  Linux swap
/dev/hda3            50        70    158760   83  Linux
/dev/hda4            71      2184  15981840    5  Extended
/dev/hda5            71       209   1050808+  83  Linux
/dev/hda6           210       348   1050808+  83  Linux
/dev/hda7           349       626   2101648+  83  Linux
/dev/hda8           627       904   2101648+  83  Linux
/dev/hda9           905      2184   9676768+  83  Linux

Command (m for help): 
</pre>

<p>
Diese Festplatte beherbergt sieben Linux-Dateisysteme (jedes mit einer
dazugehörigen Partition, gelistet als "Linux") und auch eine Swap-Partition
(gelistet als "Linux swap").
</p>

</body>
</subsection>
<subsection>
<title>Löschen aller Partitionen</title>
<body>

<p>
Zuerst entfernen wir alle existierenden Partitionen von der Festplatte. Drücken
Sie <c>d</c> um eine Partition zu löschen. Zum Beispiel um ein bestehendes
<path>/dev/hda1</path> zu löschen:
</p>

<pre caption="Löschen einer Partition">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Die Partition wurde zum Löschen markiert und wird nicht mehr angezeigt, wenn
Sie <c>p</c> drücken, sie wird aber nicht gelöscht, bis Ihre Änderungen
gespeichert sind. Wenn Sie einen Fehler gemacht haben und ohne zu Speichern
abbrechen wollen, drücken Sie umgehend <c>q</c> und Enter; Ihre Partition wird
dann nicht gelöscht.
</p>

<p>
Angenommen, dass Sie wirklich all Ihre Partitionen auf Ihrer Festplatte löschen
wollen, drücken Sie noch einmal <c>p</c> um die Partitionstabelle anzuzeigen und
dann <c>d</c> und die Nummer der Partition die Sie löschen wollen. Irgendwann
werden Sie eine leere Partitionstabelle haben:
</p>

<pre caption="Eine leere Partitionstabelle">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Jetzt, da die Partitionstabelle im Speicher leer ist, sind wir vorbereitet, um
die Partitionen zu erstellen. Wir werden ein Standard-Partitionsschema benutzen,
wie wir es zuvor angesprochen haben.
Natürlich sollten Sie die Instruktionen nicht buchstäblich ausführen, wenn Sie
ein anderes Partitionsschema verwenden wollen!
</p>

</body>
</subsection>
<subsection>
<title>Erstellung der Boot-Partition</title>
<body>

<p>
Zuerst erstellen wir eine kleine Boot-Partition. Drücken Sie <c>n</c>, um eine
neue Partition zu erstellen, dann <c>p</c>, um eine primäre Partition zu wählen,
gefolgt von <c>1</c> für die erste primäre Partition. Wenn Sie nach dem ersten
Zylinder gefragt werden, drücken Sie Enter. Für den letzten Zylinder geben Sie
<c>+32M</c> ein, um eine 32 MB Partition zu erzeugen.
</p>

<pre caption="Erstellen der Boot-Partition">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-3876, default 1): <comment>(Enter Taste drücken)</comment>
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <i>+32M</i>
</pre>

<p>
Wenn Sie jetzt <c>p</c> drücken, sollten Sie die folgende Partitionstabelle
sehen:
</p>

<pre caption="Erstellte Boot-Partition">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
</pre>


<p>
Sie müssen diese Partition bootbar machen. Drücken Sie <c>a</c>, um das 
bootable-Flag auf dieser Partition zu aktivieren und wählen Sie <c>1</c>. 
Wenn Sie wiederum <c>p</c> drücken, werden Sie feststellen, dass in der "Boot" 
Spalte ein <path>*</path> platziert ist.
</p>

</body>
</subsection>
<subsection>
<title>Erstellen der Swap-Partition</title>
<body>

<p>
Nun erstellen Sie die Swap-Partition. Dazu drücken Sie <c>n</c>, um
eine Partition zu erstellen, dann <c>p</c>, um fdisk mitzuteilen, dass Sie eine
primäre Partition anlegen möchten. Dann drücken Sie <c>2</c>, um die zweite
primäre Partition, <path>dev/hda2</path> in unserem Fall, anzulegen. Wenn Sie
nach dem ersten Zylinder gefragt werden, drücken Sie Enter. Wenn Sie nach dem
letzten Zylinder gefragt werden, tippen Sie <c>+512M</c>, um eine Partition mit
einer Größe von 512 MB zu erstellen. Nachdem Sie dies getan haben, müssen Sie mit
<c>t</c> den Partitionstyp festlegen, <c>2</c>, um die gerade angelegte Partition
auszuwählen und dann <c>82</c>, um den Partitionstyp als "Linux Swap"
festzulegen. Nachdem Sie diese Schritte abgeschlossen haben, drücken Sie
<c>p</c> und Sie erhalten eine Partitionstabelle, die dieser recht ähnlich
schaut:
</p>

<pre caption="Partitionstabelle nach dem Erstellen der Swap-Partition">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
</pre>

</body>
</subsection>
<subsection>
<title>Erstellen der Root-Partition</title>
<body>

<p>
Zum Schluss müssen sie noch die Root-Partition erstellen. Dazu drücken
Sie <c>n</c>, um eine Partition zu erstellen, dann <c>p</c>, um fdisk mitzuteilen,
dass Sie eine primäre Partition anlegen möchten. Dann drücken Sie <c>3</c>, um die
dritte primäre Partition, <path>/dev/hda3</path> in unserem Fall, anzulegen. Wenn Sie
nach dem ersten Zylinder gefragt werden, drücken Sie Enter. Wenn Sie nach dem
letzten Zylinder gefragt werden, tippen Sie Enter, um eine Partition zu erstellen,
die den restlichen freien Platz belegt. Nachdem Sie diese Schritte abgeschlossen
haben, drücken Sie <c>p</c> und Sie erhalten eine Paritionstabelle, die dieser recht
ähnlich sieht:
</p>

<pre caption="Partitionstabelle nach dem Erstellen der Root-Partition">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
/dev/hda3         82      3876  28690200   83  Linux
</pre>


</body>
</subsection>
<subsection>
<title>Speichern der Partitionstabelle</title>
<body>

<p>
Um die Partitionstabelle zu speichern und <c>fdisk</c> zu verlassen, drücken Sie
<c>w</c>.
</p>

<pre caption="Speichern und verlassen von fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Nachdem Ihre Partitionen nun erstellt sind, können Sie mit dem
<uri link="#filesystems">Erstellen der Dateisysteme</uri> fortfahren.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Erstellen der Dateisysteme</title>
<subsection>
<title>Einleitung</title>
<body>

<p>
Nun da Ihre Partitionen erstellt sind ist es Zeit auf diesen ein Dateisystem
einzurichten. Wenn Sie sich keine Gedanken über das einzusetzende Dateisystem
machen (möchten), gehen Sie zum <uri link="#filesystems-apply">Eine Partition
mit einem Dateisystem formatieren</uri> Abschnitt vor, andernfalls lesen Sie
weiter um etwas über verfügbare Dateisysteme zu lernen ...
</p>

</body>
</subsection>
<subsection>
<title>Dateisysteme?</title>
<body>

<p test="func:keyval('arch')='x86'">
Der Linux-Kernel unterstützt zahlreiche Dateisysteme. Wir erklären ext2, ext3,
ReiserFS, XFS und JFS, da diese die unter Linux gebräuchlichsten Dateisysteme
sind.
</p>

<p test="func:keyval('arch')='AMD64'">
Verschiedene Dateisysteme sind verfügbar. Einige von ihnen sind als stabil auf
amd64 bekannt, andere nicht. Die folgenden Dateisystem sind als stabil
auf amd64 bekannt: ext2 und ext3. JFS und ReiserFS können funktionieren,
benötigen aber weitere Prüfung. Wenn Sie ein Abenteuer suchen können Sie eines
der nicht unterstützten Dateisysteme nutzen.
</p>

<p>
<b>ext2</b> ist das erprobte und wahre Linux Dateisystem, unterstützt aber kein
Metadata-Journaling, was bedeutet, dass routinemäßige Dateisystemchecks beim
Booten sehr zeitaufwändig sein können. Es gibt mittlerweile eine Auswahl an
journalbasierten Dateisystemen neuerer Generation, die die Konsistenzchecks sehr
schnell erledigen und dadurch im Vergleich mit den nicht-journalbasierten
Gegenstücken vorzuziehen sind. Jounalbasierte Dateisysteme verhindern lange
Verzögerungen beim Booten, wenn sich das Dateisystem in einem inkonsistenten
Zustand befindet.
</p>

<p>
<b>ext3</b> ist die journalbasierte Version des ext2 Dateisystem, das
Metadata-Journaling für schnelle Wiederherstellung sowie andere verbesserte
Journaling-Modi wie "full data"- und "ordered data"-Journaling unterstützt. Es
verwendet einen gehashten B*-Tree Index der in fast allen Situation zu einer
hohen Performanz führt. Kurz, ext3 ist ein sehr gutes und verlässliches
Dateisystem.
</p>

<p>
<b>ReiserFS</b> ist ein auf B*-Bäumen basierendes Dateisystem mit einer guten
Performance und überholt sowohl ext2 und ext3 im Umgang mit kleinen Dateien
(Dateien kleiner als 4k) oftmals mit einem Performancefaktor von 10x-15x.
ReiserFS skaliert extrem gut und bietet Metadaten-Journalisierung. ReiserFS ist
stabil und sowohl als Dateisystem für generelle Anwendungen, als auch für
extreme Fälle wie große Dateisysteme, den Gebrauch mit sehr großen Dateien und
Verzeichnissen mit zehntausenden von kleinen Dateien brauchbar.
</p>

<p>
<b>XFS</b> ist ein Dateisytem mit Metadata-Journaling, das mit einer Menge
robuster Fähigkeiten glänzt und auf Skalierbarkeit ausgelegt ist. Wir empfehlen
den Einsatz dieses Dateisystems nur auf Linux-Systemen mit High-End-SCSI
und/oder Fibre-Channel-Storage und einer redundaten Stromversorgung. Da XFS
agressiv vom RAM gebraucht macht, können unsachgemäß designte Programme (solche
die keine Vorsichtsmaßnahmen treffen, wenn Sie auf die Festplatte schreiben und
davon gibt es einige) dazu führen, dass eine ganze Menge Daten verloren gehen,
wenn das System unerwartet ausfällt.
</p>

<p>
<b>JFS</b> ist IBMs Hochleistungs-Journaling-Dateisystem. Es ist vor kurzem
einsatzbereit geworden und es gibt noch keine ausreichende Erfahrungen, so dass 
seine allgemeine Stabilität an diesem Punkt weder positiv noch negativ kommentiert
werden kann.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Eine Partition mit einem Dateisystem formatieren</title>
<body>

<p>
Um ein Dateisystem auf einer Partition oder einem Volume zu erstellen, gibt es
für jedes Dateisystem Tools:
</p>

<table>
<tr>
  <th>Dateisystem</th>
  <th>Kommando</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Um die Boot-Partition (<path>/dev/hda1</path> in unserem Beispiel) als ext2 und
die Root-Partition (<path>/dev/hda3</path> in unserem Beispiel) als ext3 (wie in
unserem Beispiel) zu formatieren, führen Sie folgende Kommandos aus:
</p>

<pre caption="Eine Partition mit einem Dateisystem formatieren">
# <i>mke2fs /dev/hda1</i>
# <i>mke2fs -j /dev/hda3</i>
</pre>

<p>
Erstellen Sie nun die Dateisysteme auf Ihren neu erstellten Partitionen (oder
logischen Volumes).
</p>

</body>
</subsection>
<subsection>
<title>Aktivieren der Swap-Partition</title>
<body>

<p>
<c>mkswap</c> ist der Befehl, mit dem Sie die Swap-Partition initialisieren:
</p>

<pre caption="Erstellen der Swap-Signatur">
# <i>mkswap /dev/hda2</i>
</pre>

<p>
Um die Swap-Partition zu aktivieren, benutzen Sie <c>swapon</c>:
</p>

<pre caption="Aktivieren der Swap-Partition">
# <i>swapon /dev/hda2</i>
</pre>

<p>
Erstellen und aktivieren Sie jetzt Ihre Swap-Partition mit den gerade erwähnten
Befehlen.
</p>

</body>
</subsection>
</section>
<section>
<title>Mounten</title>
<body>

<p>
Nachdem Ihre Partitionen nun initialisiert sind und ein Dateisystem beinhalten,
ist es an der Zeit diese Partitionen zu mounten. Benutzen Sie das <c>mount</c>
Kommando. Vergessen Sie nicht die notwendigen Mount-Verzeichnisse für jede
erstellte Partition anzulegen. Als Beispiel mounten wir die root- und boot-
Partition:
</p>

<pre caption="Mounten von Partitionen">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

<note>
Wenn Sie <path>/tmp</path> auf eine separate Partition legen möchten, stellen
Sie sicher, dass Sie die Berechtigungen nach dem mounten ändern:
<c>chmod 1777 /mnt/gentoo/tmp</c>. Dies gilt auch für <path>/var/tmp</path>.
</note>

<p>
Sie müssen auch noch das proc-Dateisystem (eine virtuelle Schnittstelle zum
Kernel) auf <path>/proc</path> mounten. Zunächst müssen wir jedoch alle
Dateien auf der Partition ablegen.
</p>

<p>
Fahren Sie mit der <uri link="?part=1&amp;chap=5">Installation der Gentoo
Installationdateien</uri> fort.
</p>

</body>
</section>
</sections>
