<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-install-mips-medium.xml,v 1.13 2010/03/26 20:01:48 keytoaster Exp $ -->

<sections>

<version>9.0</version>
<date>2008-04-01</date>

<section>
<title>Hardwareanforderungen</title>
<subsection>
<title>Einleitung</title>
<body>

<p>
Bevor wir loslegen, sollten Sie eine Liste aller Hardwareanforderungen
erstellen, um Gentoo erfolgreich auf Ihrem System installieren zu können.
</p>

</body>
</subsection>
<subsection>
<title>Hardwareanforderungen</title>
<body>

<table>
<tr>
  <th>CPU <e>(Big Endian port)</e></th>
  <ti>MIPS3, MIPS4, MIPS5 oder MIPS64-Klasse CPU</ti>
</tr>
<tr>
  <th>CPU <e>(Little Endian port)</e></th>
  <ti>MIPS4, MIPS5 oder MIPS64-Klasse CPU</ti>
</tr>
<tr>
  <th>Arbeitsspeicher</th>
  <ti>128 MB</ti>
</tr>
<tr>
  <th>Festplattenspeicher</th>
  <ti>3.0 GB (ohne Swap-Speicher)</ti>
</tr>
<tr>
  <th>Swap Speicher</th>
  <ti>Mindestens 256 MB</ti>
</tr>
</table>

<p>
Sie sollten auch sich auch das <uri
link="http://www.gentoo.org/doc/en/mips-requirements.xml">MIPS Hardware
Requirements</uri> Dokument, erhältlich auf unserer Webseite, ansehen.
</p>

</body>
</subsection>
</section>
<section>
<title>Anmerkungen zur Installation</title>
<subsection>
<title>Eine Anmerkung zu Prozessorarchitekturen</title>
<body>

<p>
Bei vielen Architekturen sind die Prozessor durch zahlreiche Generationen
gegangen. jede neuere Generation baut auf den Grundlagen der vorherigen auf.
MIPS ist da keine Ausnahme. Es gibt mehrere CPU Generationen die unter
der MIPS Architektur zusammengefasst sind. Damit Sie Ihren Netboot Stage
Tarball auswählen und <c>CFLAGS</c> enstprechend setzen können müssen
Sie sich bewusst sein zu welcher Familie der CPU Ihres Systems gehört. Diese
Familien werden als <b>I</b>nstruction <b>S</b>et <b>A</b>rchitecture
bezeichnet.
</p>

<table>
  <tr>
    <th>MIPS ISA</th>
    <th>32/64-Bit</th>
    <th>Zugehörige CPUs</th>
  </tr>
  <tr>
    <ti>MIPS 1</ti>
    <ti>32-Bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R2000">R2000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R2000">R3000</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 2</ti>
    <ti>32-Bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R6000">R6000</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 3</ti>
    <ti>64-Bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4400</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4600</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4700</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 4</ti>
    <ti>64-Bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R5000">R5000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R5000">RM5000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/RM7000">RM7000</uri>
      <uri link="http://www.linux-mips.org/wiki/index.php/R8000">R8000</uri>,
      R9000,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R10000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R12000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R14000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R16000</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 5</ti>
    <ti>64-Bit</ti>
    <ti>
      Bis jetzt keine
    </ti>
  </tr>
  <tr>
    <ti>MIPS32</ti>
    <ti>32-Bit</ti>
    <ti>
      AMD Alchemy Serie, 4kc, 4km und viele weitere. Es gibt mehrere
      Revisionen im MIPS32 ISA.
    </ti>
  </tr>
  <tr>
    <ti>MIPS64</ti>
    <ti>64-Bit</ti>
    <ti>
      Broadcom SiByte SB1, 5kc, usw. Es gibt mehrere Revisionen im MIPS64 ISA.
    </ti>
  </tr>
</table>

<note>
Das ISA-Level von <c>MIPS5</c> wurde 1994 von Silicon Graphics entwickelt, wurde
aber nie in wirklichen CPUs verwendet. Es existiert weiter als Teil des
<c>MIPS64</c> ISA.
</note>

<note>
Die ISAs <c>MIPS32</c> und <c>MIPS64</c> sind häufig eine Ursache für
Verwirrung. Das ISA-Level <c>MIPS64</c> ist in der Tat die Obermenge des
<c>MIPS5</c> ISA. Es enthält also alle Anweisungen für <c>MIPS5</c> und ältere
ISAs. <c>MIPS32</c> ist die 32-Bit-Untermenge von <c>MIPS64</c>; es existiert,
da die meisten Anwendungen nur 32-Bit-Verarbeitung benötigen.
</note>

<p>
Ein weiteres wichtiges Konzept das verstanden werden muss ist das Konzept der
<b>endianness</b>. Endianness bezieht sich auf die Art wie der CPU Wörter aus
dem Hauptspeicher liest. Ein Wort kann entweder als <e>big</e> Endian
(wichtigstes Byte zuerst) oder als <e>little</e> Endian (am wenigsten
wichtigstes Byte zuerst) gelesen werden. Apple- und Sparc-Rechner sind Big
Endian. Bei MIPS sind Sie entweder das eine oder das andere. Um diese zu
differenzieren wird ein <c>el</c> an den Architekturnamen angehängt wenn little
Endian verwendet wird.
</p>

<table>
  <tr>
    <th>Architektur</th>
    <th>32/64-Bit</th>
    <th>Endianness</th>
    <th>Zugehörige Rechner</th>
  </tr>
  <tr>
    <ti><c>mips</c></ti>
    <ti>32-Bit</ti>
    <ti>Big Endian</ti>
    <ti>Silicon Graphics</ti>
  </tr>
  <tr>
    <ti><c>mipsel</c></ti>
    <ti>32-Bit</ti>
    <ti>Little Endian</ti>
    <ti>Cobalt Servers</ti>
  </tr>
  <tr>
    <ti><c>mips64</c></ti>
    <ti>64-Bit</ti>
    <ti>Big Endian</ti>
    <ti>Silicon Graphics</ti>
  </tr>
  <tr>
    <ti><c>mips64el</c></ti>
    <ti>64-Bit</ti>
    <ti>Little Endian</ti>
    <ti>Cobalt Servers</ti>
  </tr>
</table>

<p>
Diejenigen die willens sind mehr über ISAs zu lernen können die folgenden
Webseiten möglicherweise weiterhelfen.
</p>

<ul>
  <li>
    <uri link="http://www.linux-mips.org/wiki/index.php/Instruction_Set_Architecture">
      Linux/MIPS Webseite: MIPS ISA
    </uri>
  </li>
  <li>
    <uri link="http://www.linux-mips.org/wiki/index.php/Endianess">
      Linux/MIPS Webseite: Endianness
    </uri>
  </li>
  <li>
    <uri link="http://www.linux-mips.org/wiki/index.php/Processors">
      Linux/MIPS Webseite: Processors
    </uri>
  </li>
  <li>
    <uri link="http://en.wikipedia.org/wiki/Instruction_set">
      Wikipedia: Instruction Set
    </uri>
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Der stage3-Tarball</title>
<body>

<p>
Ein stage3-Tarball ist ein Archiv, dass eine minimale Gentoo-Umgebung enthält.
Dieses ist dazu geneigt die Gentoo-Installation, mit den Anweisungen in diesem
Handbuch, fortzuführen. Bisher beschrieb das Gentoo Handbuch die Installation
unter Verwendung eines von drei stage-Tarballs. Obwohl Gentoo weiterhin die
stage1- und stage2-Tarballs bereitstellt, verwendet die offizielle
Installationsmethode einen stage3-Tarball. Wenn Sie daran interessiert sind
eine Gentoo-Installation mit einem stage1- oder stage2-Tarball durchzuführen,
lesen Sie bitte die Gentoo FAQ zu <uri link="/doc/de/faq.xml#stage12">Wie
installiere ich Gentoo mit einem stage1- oder stage2-Tarball?</uri>
</p>

</body>
</subsection>
</section>

<section>
<title>Übersicht: Netbooting</title>
<subsection>
<body>

<p>
In diesem Abschitt wird behandelt was benötig wird für einen erfolgreichen
Netzwerk Boot einer Silicon Graphics workstation oder eines Cobalt Server
Geräts. Dies ist nur ein kurzer Leitfaden, er ist nicht darauf ausgelegt sehr
detailliert zu sein. Weitere Informationen findem Sie im <uri
link="/doc/en/diskless-howto.xml">Diskless HOWTO</uri>
</p>

<p>
Was Sie benötigen: Abhängig von Ihrem Rechner gibt es eine bestimmte Menge
an Hardware die Sie benötigen um erfolgreich mit netboot zu starten und Linux
installieren zu können.
</p>

<ul>
  <li>
    Grundlegend:
    <ul>
      <li>
        DHCP/BOAMD Alchemy Serie, 4kc, 4km, viele weitere... Es gibt mehrere
        Revisionen des MIPS32 ISA. OTP-Server (ISC DHCDp empfohlen)
      </li>
      <li>Geduld -- und viel davon</li>
    </ul>
  </li>
  <li>
    Für Silicon Graphics Workstations:
    <ul>
      <li>TFTP Server (tftp-hpa wird empfohlen)</li>
      <li>
  Wenn Sie die serielle Konsole wollen/benötigen:
        <ul>
          <li>
            MiniDIN8 --&gt; RS-232 serielles Kabel (nur benötigt für IP22- und
            IP28-Systeme)
          </li>
          <li>Nullmodem-Kabel</li>
          <li>
            VT100 oder ANSI kompatibles Terminal mit Unterstützung für 9600 Baud
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    Für Cobalt Server (NICHT der Original Qube):
    <ul>
      <li>NFS Server</li>
      <li>Null-modem Kabel</li>
      <li>
        VT100 oder ANSI kompatibles Terminal mit Unterstützung für 115200 Baud
      </li>
    </ul>
  </li>
</ul>

<note>
SGI-Rechner verwenden einen MiniDIN 8 Anschluss für die seriellen Ports.
Anscheinend funktionieren Apple Modemkabel einwandfrei als serielle Kabel aber
da Apple-Rechner mit USB &amp; internen Modems ausgestattet werden, sind diese
schwerer und schwerer erhältlich. Ein Verkabelungsdiagramm findet sich im <uri
link="http://www.linux-mips.org/wiki/Serial_Cable">Linux/MIPS Wiki</uri> und die
meisten Elektro-Fachgeschäfte sollten die benötigten Stecker im Sortiment haben.
</note>

<note>
Für das Terminal, dies kann ein echtes VT100/ANSI Terminal oder ein PC der
Terminal-Emulationssoftware (wie HyperTerminal, Minicom, seyon, Telex, xc,
screen -- was immer Sie bevorzugen) ausführt sein, ist es egal auf welcher
Plattform der Rechner läuft - solange es einen seriellen RS-232 Port und
passende Software hat, können Sie ihn benutzen.
</note>

<note>
Beachten Sie, dass dieser Leitfaden den Original Qube NICHT behandelt. Der
Original Qube Server Rechern hatte in seiner Standardausführung keinen
seriellen Port und es ist daher nicht möglich Gentoo darauf zu installieren
ohne einen Schraubenziehers und eine Ersatzmaschine, welche die
Installation vollzieht, zu Hilfe zu ziehen. Die folgende Seite bietet einen
Leitfaden zur Installation von Gentoo auf diesen Rechnern. <uri
link="http://www.metzner.org/projects/qube/">
http://www.metzner.org/projects/qube/</uri>
</note>

</body>
</subsection>
<subsection>
<title>Einrichten von TFTP und DHCP -- ein kurzer Leitfaden</title>
<body>

<p>
Nun da Sie alle Teile zusammen haben soll nun alles eingerichtet werden. Wie
vorhin erwähnt ist dies kein kompletter Leitfaden, dies ist die
Minimalkonfiguration. welche die Dinge nur ins Rollen bringt. Sie können dies
entweder verwenden wenn Sie ein Setup ganz von Anfang an beginnen oder die
Empfehlungen verwenden um Ihr existierendes Setup um die Unterstützung von
netboot erweitern.
</p>

<p>
Es lohnt sich zu erwähnen, dass die verwendenten Server nicht Gentoo Linux
verwenden müssen. Sie können genauso gut FreeBSD oder jegliche Unix-ähnliche
Plattform verwenden. Dieser Leitfaden wird jedoch annehmen, dass Sie Gentoo
Linux verwenden. Sie können TFTP/NFS auch auf einer anderen Rechner als dem
DHCP-Server verwenden, wenn Sie dies wünschen.
</p>

<warn>
Das Gentoo/MIPS-Team kann Ihnen nicht beim Einrichten anderer Betriebsysteme
als Netboot-Server helfen. Wenn Sie ein anderes OS wählen wird davon ausgegangen
dass Sie wissen was Sie tun.
</warn>

<p>
Der erste Schritt -- Konfiguration von DHCP. DAit der ISC DHCP-Daemon auf
BOOTP Anfragen antwortet (wie gefordert vom SGI &amp; Cobalt BOOTROM) müssen
Sie zuerst dynamisches BOOTP für den verwendeten Addressbereich aktivieren.
Richten Sie danach einen Eintrag für jeden Client mit Verweisen auf das Boot
Image ein.
</p>

<pre caption="Installieren von ISCs DHCP">
# <i>emerge dhcp</i>
</pre>

<p>
Einmal installiert müssen Sie die <path>/etc/dhcp/dhcpd.conf</path> erstellen.
Hier ist eine Minimalkonfiguration um Ihnen den Anfang zu erleichtern.
</p>

<pre caption="Minimalst dhcpd.conf">
<comment># dhcpd soll dynamische DNS deaktivieren</comment>
<comment># dhcpd wird verweigern ohne dies zu starten</comment>
ddns-update-style none;

<comment># Erstellen eines Subnet:</comment>
subnet <i>192.168.10.0</i> netmask <i>255.255.255.0</i> {
  <comment># Adressenpool für unsere bootenden Clients. Vergessen Sie nicht den 'dynamic-bootp' Teil!</comment>
  pool {
    range dynamic-bootp <i>192.168.10.1 192.168.10.254</i>;
  }

  <comment># DNS Server und Standardgateway -- verändern Sie entsprechend</comment>
  option domain-name-servers <i>203.1.72.96</i>, <i>202.47.56.17</i>;
  option routers <i>192.168.10.1</i>;

  <comment># Der DHCP server soll wissen, dass er Autorität hat für dieses Subnet.</comment>
  authoritative;

  <comment># Erlauben, dass BOOTP in diesem Subnet verwendet wird.</comment>
  allow bootp;
}
</pre>

<p>
Mit diesen Einstellungen können Sie nun eine beliebige Anzahl von Clients in
der Subnetklausel hinzufügen. Wir behandeln, was Sie einfügen müssen, später
in diesem Leitfaden.
</p>

<p>
Nächster Schritt -- Einrichten eines TFTP-Servers. Es wird empfohlen
<c>tftp-hpa</c> zu verwenden, da es der einzige TFTP-Daemon ist, von dem
bekannt ist, dass er korrekt funktioniert. Fahren Sie fort indem Sie ihn wie
folgt installieren.
</p>

<pre caption="Installation von tftp-hpa">
# <i>emerge net-ftp/tftp-hpa</i>
</pre>

<p>
Dies wird <path>/tftproot</path>, als Speicherort für Netboot-Images, für Sie
erstellen.
</p>

</body>
</subsection>
</section>
<section>
<title>Netboot auf SGI-Workstations</title>
<subsection>
<title>Herunterladen eines Netboot-Image</title>
<body>

<p>
Abhängig vom System auf dem Sie installieren gibt es verschiedene mögliche
Images, welche zum Download bereit stehen. Sie sind nach dem Systemtyp und
CPU für den Sie kompiliert wurden benannt. Die Rechnertypen sind wie folgt:
</p>

<table>
  <tr>
    <th>Codename</th>
    <th>Rechner</th>
  </tr>
  <tr>
    <ti>IP22</ti>
    <ti>Indy, *Indigo 2, Challenge S</ti>
  </tr>
  <tr>
    <ti>IP26</ti>
    <ti>*Indigo 2 Power</ti>
  </tr>
  <tr>
    <ti>IP27</ti>
    <ti>Origin 200, Origin 2000</ti>
  </tr>
  <tr>
    <ti>IP28</ti>
    <ti>*Indigo 2 Impact</ti>
  </tr>
  <tr>
    <ti>IP30</ti>
    <ti>Octane</ti>
  </tr>
  <tr>
    <ti>IP32</ti>
    <ti>O2</ti>
  </tr>
</table>

<note>
* Es ist ein häufig vorkommender Fehler den  IRIS Indigo (IP12 mit R3000 CPU
oder IP20 mit R4000 CPU, keiner von beiden läuft mit Linux), den Indigo 2
(IP22, welcher einwandfrei mit Linux läuft), den R8000-basierenden Indigo 2
Power (unter dem Linux überhaupt nicht läuft) und den R10000-basierenden
Indigo 2 Impact (IP28, welcher hoch experimentell ist) zu verwechseln. Bitte
denken Sie daran, dass dies verschiedene Rechner sind.
</note>

<p>
Auch im Dateinamen verweist r4k auf die R4000-Serie Prozessoren, r5k auf
R5000, rm5k auf den RM5200 und r10k auf R10000. Sie werden die Images auf den
Gentoo <uri link="/main/en/mirrors.xml">Mirrors</uri> erhältlich finden.
</p>

</body>
</subsection>

<subsection>
<title>DHCP Konfiguration für einen SGI-Client</title>
<body>

<p>
Sowie Sie die Datei heruntergeladen haben, plazieren Sie die dekomprimierte
Image-Datei in Ihrem <path>/tftproot</path> Verzeichnis (verwenden Sie
<c>bzip2 -d</c> zur Dekomprimierung). Editieren Sie nun Ihre
<path>/etc/dhcp/dhcpd.conf</path> und fügen Sie den Eintrag für Ihren SGI-Client
hinzu.
</p>

<pre caption="dhcpd.conf Auszug für SGI-Workstations">
subnet xxx.xxx.xxx.xxx netmask xxx.xxx.xxx.xxx {
  <comment># ... übliches hier ...</comment>

  <comment># SGI-Workstation... ändern Sie 'sgi' auf den Hostnamen Ihres SGI-Rechners.</comment>
  host <i>sgi</i> {

    <comment># MAC Adresse des SGI-Rechners.  Normalerweise steht diese auf der Rückseite</comment>
    <comment># oder unter dem Rechner.</comment>
    hardware ethernet <i>08:00:69:08:db:77</i>;

    <comment># TFTP Server von dem heruntergeladen wird (standardmäßig derselbe wie der DHCP-Server)</comment>
    next-server <i>192.168.10.1</i>;

    <comment># IP-Adresse die dem SGI-Rechner gegeben wird</comment>
    fixed-address <i>192.168.10.3</i>;

    <comment># Dateiname für das PROM, das heruntergeladen und gebootet wird.</comment>
    filename "<i>/gentoo-r4k.img</i>";
  }
}
</pre>
</body>
</subsection>

<subsection>
<title>Kerneloptionen</title>
<body>
<p>
Wir sind fast fertig, es sind nur noch eine Anzahl kleiner Justierungen nötig.
Starten Sie eine Konsole mit Root-Privilegien und geben Sie die folgenden
Befehle ein.
</p>

<pre caption="Eine Korrekturen damit SGI-Rechner richtig mit TFTP zusammenarbeiten">
<comment>(Deaktivieren von "Path Maximum Transfer Unit", ansosnten findet SGI Prom den Kernel nicht)</comment>
# <i>echo 1 &gt; /proc/sys/net/ipv4/ip_no_pmtu_disc</i>

<comment>(Setzen des verwendenbaren Bereichs von Ports für das SGI PROM)</comment>
# <i>echo "2048 32767" &gt; /proc/sys/net/ipv4/ip_local_port_range</i>
</pre>

<p>
Dies sollte ausreichend sein um es dem Linux Server zu ermöglichen einwandfrei
mit dem SGI PROM zu interagieren.
</p>

</body>
</subsection>
<subsection>
<title>Starten Sie Ihre Daemons...</title>
<body>
<p>
Zu diesem Zeitpunkt sollten Sie bereit sein Ihre Daemons zu starten. Geben Sie
folgendes ein:
</p>

<pre caption="Starten der DHCP und TFTP Daemons">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/in.tftpd start</i>
</pre>

<p>
Wenn nichts schiefgegangen ist beim letzten Schritt, dann sollten Sie jetzt
dazu bereit sein die Workstation anzuschalten und mit dem Leitfaden
fortzufahren. Wenn der DHCP-Server, aus welchem Grund auch immer, nicht
startet, sollten Sie versuchen 'dhcpd' in der Eingabezeile auszuführen um zu
sehen was es Ihnen mitteilt. Wenn alles einwandfrei läuft sollte es in den
Hintegrund wandern, ansonsten werden Sie 'exiting' sehen, direkt nach der
Fehlermeldung.
</p>

<p>
Ein einfacher Weg festzustellen ob der TFTP Daemon läuft ist es den folgenden
Befehl einzutippen. Wenn Sie etwas wie die Ausgabe weiter unten sehen, dann
ist alles in Ordnung.
</p>

<pre caption="Überprüfen ob TFTPd läuft">
# <i>netstat -al | grep ^udp</i>
udp        0      0 *:bootpc                *:*
udp        0      0 *:631                   *:*
udp        0      0 *:xdmcp                 *:*
udp        0      0 *:tftp                  *:* <comment>&lt;-- (suchen Sie nach dieser Zeile)</comment>
</pre>

</body>
</subsection>
<subsection>
<title>Netboot eines SGI-Rechners</title>
<body>

<p>
Alles ist nun bereit, DHCP und TFTP laufen. Es ist nun Zeit den SGI-Rechner
hochzufahren. Schalten Sie den Rechner an, wenn Sie "Running power-on
diagnostics" sehen, dann klicken Sie entweder auf "Stop For Maintenance" oder
drücken Sie ESCAPE. Ihnen wird ein Menü, ähnlich dem folgenden, präsentiert.
Geben Sie die Befehle wie unten gezeigt ein.
</p>

<pre caption="SGI PROM Maintenance Menu">
        Running power-on diagnostics

System Maintenance Menu

1) Start System
2) Install System Software
3) Run Diagnostics
4) Recover System
5) Enter Command Monitor

Option? <i>5</i>
Command Monitor. Type "exit" to return to the menu.
&gt;&gt; <i>bootp(): root=/dev/ram0</i>
</pre>

<p>
Von diesem Punkt an sollte die Rechner anfangen das Image herunterzuladen.
Dann, etwa 20 Sekunden später, sollte Linux anfangen zu booten. Wenn alles
gut geht, sollten Ihnen die Busybox <c>ash</c> Shell, wie unten gezeigt,
präsentiert werden. Dort können Sie dann fortfahren mit der
<uri link="?part=1&amp;chap=3">Konfiguration Ihres Netzwerks</uri>.
</p>

<pre caption="Wenn alles richtig läuft...">
init started:  BusyBox v1.00-pre10 (2004.04.27-02:55+0000) multi-call binary

Gentoo Linux; http://www.gentoo.org/
 Copyright 2001-2004 Gentoo Technologies, Inc.; Distributed under the GPL

 Gentoo/MIPS Netboot for Silicon Graphics Machines
 Build Date: April 26th, 2004

 * To configure networking, do the following:

 * For Static IP:
 * /bin/net-setup &lt;IP-Adresse&gt; &lt;Gateway-Adresse&gt; [telnet]

 * For Dynamic IP:
 * /bin/net-setup dhcp [telnet]

 * If you would like a telnetd daemon loaded as well, pass "telnet"
 * As the final argument to /bin/net-setup.

Please press Enter to activate this console.
</pre>

</body>
</subsection>
<subsection>
<title>Fehlerbehebung.</title>
<body>

<p>
Wenn der Rechner stur bleibt und sich weigert das Image herunterzuladen kann
dies zwei mögliche Ursachen haben. (1) sie haben irgendwie sich versehen oder
(2) es wird ein wenig Überzeugungsarbeit benötigt. (Nein, noch kein Grund den
Vorschlaghammer zu holen!) Hier ist eine Liste von Dingen die Sie überprüfen
können:
</p>

<ul>
  <li>
    <c>dhcpd</c> gibt dem SGI-Rechner eine IP-Adresse. Sie sollten einige
    Meldungen sehen über eine BOOTP-Anfrage in Ihren Systemprotokollen.
    <c>tcpdump</c> kann hier auch hilfreich sein.
  </li>
  <li>
    Berechtigungen sind für Ihren TFTP-Ordner korrekt gesetzt (normalerweise
    <path>/tftproot</path> -- sollte world readable sein)
  </li>
  <li>
    Überprüfen Sie Ihre Systemprotokolle um zu sehen was der TFTP-Server
    meldet (Fehler möglicherweise)
  </li>
</ul>

<p>
Wenn Sie alles auf dem Server überprüft haben, und Sie Timeouts etc auf Ihrem
SGI-Rechner erhalten, dann versuchen Sie folgendes in die Konsole zu tippen.
</p>

<pre caption="Das SGI PROM überreden zu funktionieren">
&gt;&gt; <i>resetenv</i>
&gt;&gt; <i>unsetenv netaddr</i>
&gt;&gt; <i>unsetenv dlserver</i>
&gt;&gt; <i>init</i>
&gt;&gt; <i>bootp(): root=/dev/ram0</i>
</pre>

</body>
</subsection>
</section>

<section>
<title>Alternative Methode: Gentoo/MIPS SGI LiveCD</title>
<subsection>
<title>Übersicht</title>
<body>

<p>
Auf Rechnern von Silicon Graphics ist es möglich von einer CD zu Booten um ein
Betriebssystem zu installieren. (So wird auch zum Beispiel IRIX installiert.)
Seit kurzem sind Images für solche bootbaren CDs zur Installation von Gentoo
möglich geworden. Diese CDs sind so gestaltet, dass sie das gleiche tun.
</p>

<p>
Momentan funktioniert die Gentoo/MIPS Live CD nur auf den SGI Indy, Indigo 2
and O2 Workstations, ausgestattet mit CPUs der R4000- und R5000-Serie. Andere
Plattformen sind möglicherweise in der Zukunft auch möglich.
</p>

<p>
Sie finden die Images der Live CD zum herunterladen auf Ihrem bevorzugten Gentoo
Mirror im Verzeichnis <path>experimental/mips/livecd</path>.
</p>

<warn>
Dies CDs sind zu diesem Zeitpunkt höchst experimentell. Es kann nicht garantiert
werden, dass sie funktionieren. Sie können über Erfolg oder Misserfolg entweder
im <uri link="http://bugs.gentoo.org">Bugzilla</uri>, <uri
link="http://forums.gentoo.org/viewtopic.php?t=242518">diesem Foren-Thread</uri>
oder im <c>#gentoo-mips</c> <uri link="/main/de/irc.xml">IRC-Channel</uri>
berichten. Wir würden uns freuen von Ihnen zu hören.
</warn>

</body>

</subsection>

<subsection>
<title>Brennen einer Live CD</title>
<body>

<p>
Eine wichtige Sache, die man beachten sollte, ist dass das SGI PROM das
ISO9660-Format nicht versteht. Es weiß auch nicht über den El Torito
Bootstandard. Diese CD-Images sind als ein SGI-Disklabel konstruiert, mit dem
Boot-Image im Volume-Header, wie bei einer Festplatte. Daher muss man beim
Brennen der CD sehr präzise vorgehen.
</p>

<p>
Es folgt ein Beispiel in dem eine 24x Brenngeschwindigkeit auf einem
IDE-Brenner angenommen wird. Wenn Sie zum Beispiel einen SCSI-Brenner haben,
müssen Sie unter Umständen den <c>dev</c> Ausdruck anpassen. Auch so bei der
Option <c>speed</c>, wenn Sie auf Probleme treffen, sollten Sie versuchen die
Geschwindigkeit zu reduzieren.
</p>

<pre caption="Mit cdrecord brennen">
# <i>bzip2 -d mips-livecd-prototype-rc2-20041027.img.bz2</i>
# <i>cdrecord -vv -pad speed=24 dev=ATAPI:0,0,0 -tao mips-livecd-prototype-rc2-20041027.img</i>
</pre>

<note>
Es kann möglich sein diese CDs unter Windows zu brennen, vorausgesetzt Ihr
Brennprogramm akzeptiert das Image blind, so wie es ist. Jedoch hat bisher
noch niemand erfolgreich eine funktionierende CD auf diese Weise erstellt.
</note>

<note>
Wenn Sie nicht wissen, was Sie bei Ihrem <c>dev</c> Argument angeben sollen,
führen Sie als root <c>cdrecord -scanbus</c> aus. Dies wird Ihnen mitteilen wo
sich Ihr Brenner befindet.
</note>

</body>
</subsection>
</section>

<section>
<title>Netboot auf Cobalt-Servern</title>
<subsection>
<title>Übersicht der Netboot-Prozedur</title>
<body>

<p>
Anders als bei SGI-Rechnern verwenden Cobalt-Server NFS um Ihren Kernel für den
Boot zu transferieren. Sie booten indem Sie die linke &amp; rechte Pfeiltaste
gedrückt halten, während Sie den Rechner einschalten. Der Rechner wird versuchen
eine IP-Nummer via BOOTP zu erhalten, dann das Verzeichnis <path>/nfsroot</path>
vom Server via NFS einzubinden und dann versuchen die Datei
<path>vmlinux_raq-2800.gz</path> (abhängig vom Modell), es nimmt an, dass es
eine Standard ELF-Binärdatei ist, herunterzuladen und zu booten.
</p>

</body>
</subsection>

<subsection>
<title>Herunterladen eines Netboot-Image</title>
<body>

<p>
In <uri link="http://dev.gentoo.org/~redhatter/mips/cobalt/netboots/">
http://dev.gentoo.org/~redhatter/mips/cobalt/netboots/</uri> werden Sie die
notwendigen Boot-Images finden um Cobalt zum Laufen zu kriegen. Die Dateien die
Sie benötigen werden haben den Namen
<path>nfsroot-KERNEL-COLO-DATUM-cobalt.tar</path>. Wählen Sie das aktuellste aus
und entpacken Sie es in <path>/</path> wie folgt:
</p>

<pre caption="Entpacken des nfsroot-Image">
# <i>tar -C / -xvf nfsroot-2.6.13.4-1.19-20051122-cobalt.tar</i>
</pre>

</body>
</subsection>

<subsection>
<title>Konfiguration des NFS-Servers</title>
<body>

<p>
Da dieser Rechner NFS verwendet um das Image herunterzuladen müssen Sie
<path>/nfsroot</path> auf ihrem Server exportieren. Wenn noch nicht
geschehen, müssen Sie das net-fs/nfs-utls Paket installieren.
</p>
<pre caption="Installieren von nfs-utils">
# <i>emerge net-fs/nfs-utils</i>
</pre>

<p>
Sowie dies erledigt ist sollten Sie folgendes in Ihre <path>/etc/exports</path>
Datei schreiben. Wenn Sie wünschen können Sie auch härtere Beschränkungen
verwenden.
</p>

<pre caption="Exportieren des /nfsroot Verzeichnisses">
/nfsroot      *(ro,sync)
</pre>

<p>
Nun, da dies geschafft ist, können Sie Ihren NFS Server starten:
</p>

<pre caption="Starten des NFS Server">
# <i>/etc/init.d/nfs start</i>
</pre>

<p>
Wenn der NFS Server zu diesem Zeitpunkt schon lief, dann können Sie ih dazu
auffordern einen weiteren Blick in die <c>exports</c> Datei zu werfen mit
<c>exportfs</c>.
</p>

<pre caption="Exportieren eines neuen Dateisystems">
# <i>exportfs -av</i>
</pre>

</body>
</subsection>

<subsection>
<title>DHCP Konfiguration für Cobalt-Rechner</title>
<body>

<p>
Der DHCP Teil der Vorbereitungen is relativ simpel. Fügen Sie folgendes
Ihrer <path>/etc/dhcp/dhcpd.conf</path> Datei hinzu.
</p>

<pre caption="dhcpd.conf Auszug für Cobalt-Server">
subnet xxx.xxx.xxx.xxx netmask xxx.xxx.xxx.xxx {
  <comment># ... das übliche hier ...</comment>

  <comment># Konfiguration für Cobalt-Server</comment>
  <comment># Setzen Sie den Hostnamen hier:</comment>
  host <i>qube</i> {
    <comment># Pfad zum Verzeichnis nfsroot</comment>
    <comment># Dies ist haupsächlich um die TFTP-Bootoption auf CoLo zu verwenden</comment>
    <comment># Sie sollten dies nicht ändern müssen.</comment>
    option root-path "/nfsroot";

    <comment># Ethernet MAC-Adresse des Cobalt Server</comment>
    hardware ethernet <i>00:10:e0:00:86:3d</i>;

    <comment># Server von dem das Image geladen wird</comment>
    next-server <i>192.168.10.1</i>;

    <comment># IP-Adresse des Cobalt Server</comment>
    fixed-address <i>192.168.10.2</i>;

    <comment># Ort der default.colo relativ zum /nfsroot</comment>
    <comment># Sie sollten dies nicht ändern müssen.</comment>
    filename "default.colo";
  }
}
</pre>

</body>
</subsection>

<subsection>
<title>Start Sie Ihre Daemons...</title>
<body>

<p>
Zu diesem Zeitpunkt sollten Sie bereit sein Ihre Daemons zu starten. Geben Sie
folgendes ein:
</p>

<pre caption="Starten des DHCP- und NFS-Daemons">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/nfs start</i>
</pre>

<p>
Wenn nichts schiefgegangen ist beim letzten Schritt, dann sollten Sie jetzt
dazu bereit sein die Workstation anzuschalten und mit dem Leitfaden
fortzufahren. Wenn der DHCP-Server, aus welchem Grund auch immer, nicht
startet, sollten Sie versuchen 'dhcpd' in der Eingabezeile auszuführen um zu
sehen was es Ihnen mitteilt. Wenn alles einwandfrei läuft sollte es in den
Hintegrund wandern, ansonsten werden Sie 'exiting' sehen, direkt nach der
Fehlermeldung.
</p>

</body>
</subsection>

<subsection>
<title>Netboot des Cobalt-Rechners</title>
<body>

<p>
Alles ist nun bereit, DHCP und NFS laufen. Es ist nun Zeit den Cobalt-Rechner
hochzufahren. Schliessen Sie Ihr Null-Modem Kabel an und setzen Sie das
serielle Terminal auf 115200 Baud, 8 Bits, keine Parität, 1 Stopp Bit, VT100
Emulation. Sobald das geschehen ist müssen Sie die linke &amp; rechte
Pfeiltaste gedrückt halten während Sie den Rechner anschalten.
</p>

<p>
Wenn alles in Ordnung ist, dann sollte das rückwärtige Display "Net Booting"
anzeigen und Sie sollten einige Netzwerkaktivität sehen, schnell gefolgt von
CoLo. Sie sollten dann am rückwärtigen Display runterscrollen bis Sie "Network
(NFS)" sehen, drücken Sie dann EINGABE. Auf der seriellen Konsole sollten
Sie dann sehen wie der Rechner startet.
</p>

<pre caption="Booten des Kernels">
elf: 80080000 &lt;-- 00001000 6586368t + 192624t
elf: entry 80328040
net: interface down
CPU revision is: 000028a0
FPU revision is: 000028a0
Primary instruction cache 32kB, physically tagged, 2-way, linesize 32 bytes.
Primary data cache 32kB 2-way, linesize 32 bytes.
Linux version 2.4.26-mipscvs-20040415 (root@khazad-dum) (gcc version 3.3.3...
Determined physical RAM map:
 memory: 08000000 @ 00000000 (usable)
Initial ramdisk at: 0x80392000 (3366912 bytes)
On node 0 totalpages: 32768
zone(0): 32768 pages.
zone(1): 0 pages.
zone(2): 0 pages.
Kernel command line: console=ttyS0,115200 root=/dev/ram0
Calibrating delay loop... 249.85 BogoMIPS
Memory: 122512k/131072k available (2708k kernel code, 8560k reserved, 3424k dat)
</pre>

<p>
Wenn alles gut geht, sollten Ihnen die Busybox <c>ash</c> Shell, wie unten
gezeigt, präsentiert werden. Dort können Sie dann fortfahren mit der <uri
link="?part=1&amp;chap=3">Konfiguration Ihres Netzwerks</uri>.
</p>

<pre caption="Wenn alles richtig läuft...">
VFS: Mounted root (ext2 filesystem) readonly.
Freeing unused kernel memory: 280k freed
init started:  BusyBox v1.00-pre10 (2004.04.27-02:55+0000) multi-call binary

Gentoo Linux; http://www.gentoo.org/
 Copyright 2001-2004 Gentoo Technologies, Inc.; Distributed under the GPL

 Gentoo/MIPS Netboot for Cobalt Microserver Machines
 Build Date: April 26th, 2004

 * To configure networking, do the following:

 * For Static IP:
 * /bin/net-setup &lt;IP-Adresse&gt; &lt;Gateway-Adresse&gt; [telnet]

 * For Dynamic IP:
 * /bin/net-setup dhcp [telnet]

 * If you would like a telnetd daemon loaded as well, pass "telnet"
 * As the final argument to /bin/net-setup.

Please press Enter to activate this console.
</pre>

</body>
</subsection>

<subsection>
<title>Fehlerbehebung</title>
<body>

<p>
Wenn der Rechner stur bleibt und sich weigert das Image herunterzuladen kann
dies zwei mögliche Ursachen haben. (1) sie haben irgendwie sich versehen oder
(2) es wird ein wenig Überzeugungsarbeit benötigt. (Nein, noch kein Grund den
Vorschlaghammer zu holen!) Hier ist eine Liste von Dingen die Sie überprüfen
können:
</p>

<ul>
  <li>
    <c>dhcpd</c> gibt dem Cobalt-Rechner eine IP-Adresse. Sie sollten einige
    Meldungen über eine BOOTP Anfrage in Ihren Systemprotokollen finden.
    <c>tcpdump</c> ist hier auch hilfreich.
  </li>
  <li>
    Berechtigungen sind für den <path>/nfsroot</path> Ordner korrekt gesetzt.
    (sollte world readable sein)
  </li>
  <li>
    Stellen Sie sicher, dass der NFS läuft und das Verzeichnis
    <path>/nfsroot</path> auch exportiert. Überprüfen Sie dies durch
    <c>exportfs -v</c> auf dem Server.
  </li>
</ul>
</body>
</subsection>
</section>
</sections>
