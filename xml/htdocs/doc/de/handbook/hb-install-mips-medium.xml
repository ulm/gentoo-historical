<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- English CVS Version: 1.16 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/hb-install-mips-medium.xml,v 1.9 2005/11/15 21:32:34 grahl Exp $ -->

<sections>

<version>1.11</version>
<date>2005-11-11</date>

<section>
<title>Hardwareanforderungen</title>
<subsection>
<title>Einleitung</title>
<body>

<p>
Bevor wir loslegen, sollten Sie eine Liste aller Hardware Anforderungen erstellen,
um Gentoo erfolgreich auf Ihrem System installieren zu können.
</p>

</body>
</subsection>
<subsection>
<title>Hardwareanforderungen</title>
<body>

<table>
<tr>
  <th>Arbeitsspeicher</th>
  <ti>64 MB</ti>
</tr>
<tr>
  <th>Festplattenspeicher</th>
  <ti>1.5 GB (ohne Swap Speicher)</ti>
</tr>
<tr>
  <th>Swap Speicher</th>
  <ti>Mindestens 256 MB</ti>
</tr>
</table>

<p>
Sie sollten auch sich auch das <uri 
link="http://www.gentoo.org/doc/en/mips-requirements.xml">MIPS Hardware
Requirements</uri> Dokument, erhältlich auf unserer Webseite, ansehen.
</p>

</body>
</subsection>
</section>
<section>
<title>Anmerkungen zur Installation</title>
<subsection>
<title>Eine Anmerkung zu Prozessorarchitekturen</title>
<body>

<p>
Bei vielen Architekturen sind die Prozessor durch zahlreiche Generationen 
gegangen. jede neuere Generation baut auf den Grundlagen der vorherigen auf. 
MIPS ist da keine Ausnahme. Es gibt mehrere CPU Generationen die unter 
der MIPS Architektur zusammengefasst sind. Damit Sie Ihren Netboot Stage 
Tarball auswählen und <c>CFLAGS</c> enstprechend setzen können müssen 
Sie sich bewusst sein zu welcher Familie der CPU Ihres Systems gehört. Diese 
Familien werden als <b>I</b>nstruction <b>S</b>et <b>A</b>rchitecture 
bezeichnet.
</p>

<table>
  <tr>
    <th>MIPS ISA</th>
    <th>32/64-bit</th>
    <th>Zugehörige CPUs</th>
  </tr>
  <tr>
    <ti>MIPS 1</ti>
    <ti>32-bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R2000">R2000</uri>, 
      <uri link="http://www.linux-mips.org/wiki/index.php/R2000">R3000</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 2</ti>
    <ti>32-bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R6000">R6000</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 3</ti>
    <ti>64-bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4400</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4600</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R4000">R4700</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 4</ti>
    <ti>64-bit</ti>
    <ti>
      <uri link="http://www.linux-mips.org/wiki/index.php/R5000">R5000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R5000">RM5000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/RM7000">RM7000</uri>
      <uri link="http://www.linux-mips.org/wiki/index.php/R8000">R8000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R10000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R12000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R14000</uri>,
      <uri link="http://www.linux-mips.org/wiki/index.php/R10000">R16000</uri>
    </ti>
  </tr>
  <tr>
    <ti>MIPS 5</ti>
    <ti>64-bit</ti>
    <ti>
      Bis jetzt keine
    </ti>
  </tr>
</table>

<p>
Ein weiteres wichtiges Konzept das verstanden werden muss ist das Konzept der 
<b>endianness</b>. Endianness bezieht sich auf die Art wie der CPU Wörter aus 
dem Hauptspeicher liest. Ein Wort kann entweder als <e>big</e> Endian 
(wichtigstes Bit zuerst) oder als <e>little</e> Endian (am wenigsten 
wichtigstes Bit zuerst) gelesen werden. Apple und Sparc Maschinen sind Big 
Endian. Bei MIPS sind Sie entweder das eine oder das andere. Um diese 
zu differenzieren wird ein <c>el</c> an den Architekturnamen angehängt wenn 
little Endian verwendet wird.
</p>

<table>
  <tr>
    <th>Architektur</th>
    <th>32/64-bit</th>
    <th>Endianness</th>
    <th>Zugehörige Maschinen</th>
  </tr>
  <tr>
    <ti><c>mips</c></ti>
    <ti>32-bit</ti>
    <ti>Big Endian</ti>
    <ti>Silicon Graphics</ti>
  </tr>
  <tr>
    <ti><c>mipsel</c></ti>
    <ti>32-bit</ti>
    <ti>Little Endian</ti>
    <ti>DECStations, Cobalt Servers, PlayStation 2</ti>
  </tr>
  <tr>
    <ti><c>mips64</c></ti>
    <ti>64-bit</ti>
    <ti>Big Endian</ti>
    <ti>Silicon Graphics</ti>
  </tr>
  <tr>
    <ti><c>mips64el</c></ti>
    <ti>64-bit</ti>
    <ti>Little Endian</ti>
    <ti>Cobalt Servers, PlayStation 2</ti>
  </tr>
</table>

<p>
Diejenigen die willens sind mehr über ISAs zu lernen können die folgenden 
Webseiten möglicherweise weiterhelfen.
</p>

<ul>
  <li>
    <uri link="http://www.linux-mips.org/wiki/index.php/Instruction_Set_Architecture">
      Linux/MIPS Webseite: MIPS ISA
    </uri>
  </li>
  <li>
    <uri link="http://www.linux-mips.org/wiki/index.php/Endianess">
      Linux/MIPS Webseite: Endianness  
    </uri>
  </li>
  <li>
    <uri link="http://www.linux-mips.org/wiki/index.php/Processors">
      Linux/MIPS Webseite: Processors
    </uri>
  </li>
  <li>
    <uri link="http://en.wikipedia.org/wiki/Instruction_set">
      Wikipedia: Instruction Set
    </uri>
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Der stage3-Tarball</title>
<body>

<p>
Ein stage3-Tarball ist ein Archiv, dass eine minimale Gentoo-Umgebung enthält.
Dieses ist dazu geneigt die Gentoo-Installation, mit den Anweisungen in diesem
Handbuch, fortzuführen. Bisher beschrieb das Gentoo Handbuch die Installation
unter Verwendung eines von drei stage-Tarballs. Obwohl Gentoo weiterhin die
stage1- und stage2-Tarballs bereitstellt, verwendet die offizielle
Installationsmethode einen stage3-Tarball. Wenn Sie daran interessiert sind
eine Gentoo-Installation mit einem stage1- oder stage2-Tarball durchzuführen,
lesen Sie bitte die Gentoo FAQ zu <uri link="/doc/de/faq.xml#stage12">Wie
installiere ich Gentoo mit einem stage1- oder stage2-Tarball?</uri>
</p>

</body>
</subsection>
</section>

<section>
<title>Übersicht: Netbooting</title>
<subsection>
<body>

<p>
In diesem Abschitt wird behandelt was benötig wird für einen erfolgreichen 
Netzwerk Boot einer Silicon Graphics workstation oder eines Cobalt Server 
Geräts. Dies ist nur ein kurzer Leitfaden, er ist nicht darauf ausgelegt sehr 
detailliert zu sein. Weitere Informationen findem Sie im <uri 
link="/doc/de/diskless-howto.xml">Diskless HOWTO</uri>
</p>

<p>
Was Sie benötigen: Abhängig von Ihrer Maschine gibt es eine bestimmte Menge 
an Hardware die Sie benötigen um erfolgreich mit netboot zu starten und Linux 
installieren zu können.
</p>

<ul>
  <li>
    Grundlegend:
    <ul>
      <li>DHCP/BOOTP Server (ISC DHCPd wird empfohlen)</li>
      <li>Geduld -- und viel davon</li>
    </ul>
  </li>
  <li>
    Für Silicon Graphics Workstations:
    <ul>
      <li>TFTP Server (tftp-hpa wird empfohlen)</li>
      <li>
  Wenn Sie die serielle Konsole wollen/benötigen:
        <ul>
          <li>MiniDIN8 --&gt; RS-232 serielles Kabel</li>
          <li>Null-modem Kabel</li>
          <li>VT100 oder ANSI kompatibles Terminal mit Unterstützung für 9600 Baud</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    Für Cobalt Server (NICHT der Original Qube):
    <ul>
      <li>NFS Server</li>
      <li>Null-modem Kabel</li>
      <li>VT100 oder ANSI kompatibles Terminal mit Unterstützung für 115200 Baud</li>
    </ul>
  </li>
</ul>

<note>
SGI Maschinen verwenden einen MiniDIN 8 Anschluss für die seriellen Ports.  
Anscheinend funktionieren Apple Modemkabel einwandfrei als serielle Kabel aber 
da Apple Maschinen mit USB &amp; internen Modems ausgestattet werden, sind 
diese schwerer und schwerer erhältlich. Eine Vielzahl von Seiten beschreibt 
wie man ein solches Kabel herstellt (Google hilft). Die folgende Seite 
beschreibt wie man ein solches Kabel erstellt, sie ist sogar in Deutsch und 
enthält ein adequates Verkabelungsdiagramm.
<uri link="http://www.arbeitsplatzvernichtung-durch-outsourcing.de/marty44/sgihard.html">
  http://www.arbeitsplatzvernichtung-durch-outsourcing.de/marty44/sgihard.html
</uri>
</note>

<note>
Für das Terminal, dies kann ein echtes VT100/ANSI Terminal oder ein PC der 
Terminal-Emulationssoftware (wie HyperTerminal, Minicom, seyon, Telex, xc, 
screen -- was immer Sie bevorzugen) ausführt sein, ist es egal auf welcher 
Plattform die Maschine läuft - solange es einen seriellen RS-232 Port und 
passende Software hat, können Sie ihn benutzen.
</note>

<note>
Beachten Sie, dass dieser Leitfaden den Original Qube NICHT behandelt. Der 
Original Qube Server Rechern hatte in seiner Standardausführung keinen 
seriellen Port und es ist daher nicht möglich Gentoo darauf zu installieren 
ohne einen Schraubenziehers und eine Ersatzmaschine, welche die 
Installation vollzieht, zu Hilfe zu ziehen. Die folgende Seite bietet einen 
Leitfaden zur Installation von Gentoo auf diesen Maschinen.
<uri link="http://www.metzner.org/projects/qube/">
http://www.metzner.org/projects/qube/</uri>
</note>

</body>
</subsection>
<subsection>
<title>Einrichten von TFTP und DHCP -- ein kurzer Leitfaden</title>
<body>

<p>
Nun da Sie alle Teile zusammen haben soll nun alles eingerichtet werden. Wie 
vorhin erwähnt ist dies kein kompletter Leitfaden, dies ist die 
Minimalkonfiguration. welche die Dinge nur ins Rollen bringt. Sie können dies 
entweder verwenden wenn Sie ein Setup ganz von Anfang an beginnen oder die 
Empfehlungen verwenden um Ihr existierendes Setup um die Unterstützung von 
netboot erweitern.
</p>

<p>
Es lohnt sich zu erwähnen, dass die verwendenten Server nicht Gentoo Linux 
verwenden müssen. Sie können genauso gut FreeBSD oder jegliche Unix-ähnliche 
Plattform verwenden. Dieser Leitfaden wird jedoch annehmen, dass Sie Gentoo 
Linux verwenden. Sie können TFTP/NFS auch auf einer anderen Maschine als dem 
DHCP Server verwenden, wenn Sie dies wünschen.
</p>

<p>
Der erste Schritt -- Konfiguration von DHCP. DAit der ISC DHCP Daemon auf 
BOOTP Anfragen antwortet (wie gefordert vom SGI &amp; Cobalt BOOTROM) müssen 
Sie zuerst dynamisches BOOTP für den verwendeten Addressbereich aktivieren. 
Richten Sie danach einen Eintrag für jeden Client mit Verweisen auf das Boot 
Image ein.
</p>

<pre caption="Installieren von ISCs DHCP">
# <i>emerge dhcp</i>
</pre>

<p>
Einmal installiert müssen Sie die <path>/etc/dhcp/dhcpd.conf</path> erstellen. 
Hier ist eine Minimalkonfiguration um Ihnen den Anfang zu erleichtern.
</p>

<pre caption="Minimalst dhcpd.conf">
<comment># dhcpd soll dynamische DNS deaktivieren</comment>
<comment># dhcpd wird verweigern ohne dies zu starten</comment>
ddns-update-style none;

<comment># Erstellen eines Subnet:</comment>
subnet <i>192.168.10.0</i> netmask <i>255.255.255.0</i> {
  <comment># Adressenpool für unsere bootenden Clients. Vergessen Sie nicht den 'dynamic-bootp' Teil!</comment>
  pool {
    range dynamic-bootp <i>192.168.10.1 192.168.10.254</i>;
  }

  <comment># DNS Server und Standardgateway -- verändern Sie entsprechend</comment>
  option domain-name-servers <i>203.1.72.96</i>, <i>202.47.56.17</i>;
  option routers <i>192.168.10.1</i>;

  <comment># Der DHCP server soll wissen, dass er Autorität hat für dieses Subnet.</comment>
  authoritative;

  <comment># Erlauben, dass BOOTP in diesem Subnet verwendet wird.</comment>
  allow bootp;
}
</pre>

<p>
Mit diesen Einstellungen können Sie nun eine beliebige Anzahl von Clients in 
der Subnetklausel hinzufügen. Wir behandeln, was Sie einfügen müssen, später 
in diesem Leitfaden.
</p>

<p>
Nächster Schritt -- Einrichten eines TFTP Servers. Dieser Leitfaden behandelt 
nur den tftp-hpa TFTP Daemon. Ich selbst verwende diesen auf SGI Maschinen, 
Cobalt Servern ebenso wie auf PXE Clients ohne weitere Schwierigkeiten. Die 
Installation und Konfiguration ist sehr simpel:
</p>

<pre caption="Installieren von tftp-hpa">
# <i>emerge net-ftp/tftp-hpa</i>
</pre>

<p>
Ich persönlich bevorzuge es das <path>/tftpboot</path> Verzeichnis in 
<path>/home</path> zu verschieben wo ich mehr Speicher habe. Dies ist 
komplett optional und kann durch die <path>/etc/conf.d/in.tftpd</path> Datei 
konfiguriert werden. Dieser Leitfaden nimmt an, dass Sie es das Verzeichnis 
am Standardplatz gelassen haben.
</p>

<p>
Nun da alles konfiguriert ist können wir fortschreiten zum interessanteren 
Teil: anpassen der Konfiguration um zu der Maschine zu passen die wir via 
netboot starten wollen.
</p>

</body>
</subsection>
</section>
<section>
<title>Netboot auf SGI Workstations</title>
<subsection>
<title>Herunterladen eines Netboot Image</title>
<body>

<p>
Abhängig vom System auf dem Sie installieren gibt es verschiedene mögliche 
Images, welche zum Download bereit stehen. Sie sind nach dem Systemtyp und 
CPU für den Sie kompiliert wurden benannt. Die Maschinentypen sind wie folgt:
</p>

<table>
  <tr>
    <th>Codename</th>
    <th>Maschinen</th>
  </tr>
  <tr>
    <ti>IP22</ti>
    <ti>Indy, *Indigo 2, **Challenge S</ti>
  </tr>
  <tr>
    <ti>IP26</ti>
    <ti>*Indigo 2 Power</ti>
  </tr>
  <tr>
    <ti>IP27</ti>
    <ti>Origin 200, Origin 2000</ti>
  </tr>
  <tr>
    <ti>IP28</ti>
    <ti>*Indigo 2 Impact</ti>
  </tr>
  <tr>
    <ti>IP30</ti>
    <ti>Octane</ti>
  </tr>
  <tr>
    <ti>IP32</ti>
    <ti>O2</ti>
  </tr>
</table>

<note>
* Es ist ein häufig vorkommender Fehler den  IRIS Indigo (IP12 mit R3000 CPU 
oder IP20 mit R4000 CPU, keiner von beiden läuft mit Linux), den Indigo 2 
(IP22, welcher einwandfrei mit Linux läuft), den R8000-basierenden Indigo 2 
Power (unter dem Linux überhaupt nicht läuft) und den R10000-basierenden 
Indigo 2 Impact (IP28, welcher hoch experimentell ist) zu verwechseln.Bitte 
denken Sie daran, dass dies verschiedene Maschinen sind.
</note>

<note>
** Beim Challenge S hängt der UTP Netzwerkport an einer WD33C95 SCSI Karte, 
welche momentan von Linux nicht unterstützt wird. Wegen dieser Einschränkung 
werden Sie den  AUI--&gt;UTP Transceiver, angeschlossen am AUI Port verwenden 
müssen.
</note>

<p>
Auch im Dateinamen verweist r4k auf die R4000-Serie Prozessoren, r5k auf 
R5000, rm5k auf den RM5200 und R10 auf R10000. Sie finden die Images 
erhältlich unter <uri link="http://dev.gentoo.org/~kumba/mips/netboot">
http://dev.gentoo.org/~kumba/mips/netboot.</uri>
</p>

</body>
</subsection>

<subsection>
<title>DHCP Konfiguration für einen SGI Client</title>
<body>

<p>
Sowie Sie die Datei heruntergeladen haben, plazieren Sie diese in Ihr 
<path>/tftpboot</path> Verzeichnis. Editieren Sie nun 
<path>/etc/dhcp/dhcpd.conf</path> und fügen Sie den Eintrag für Ihren SGI 
Client hinzu.
</p>

<note>
Sie müssen unter Umständen das <path>/tftpboot</path> Verzeichnis erstellen, 
wenn es noch nicht vorhanden ist.
</note>

<pre caption="dhcpd.conf Auszug für SGI Workstations">
subnet xxx.xxx.xxx.xxx netmask xxx.xxx.xxx.xxx {
  <comment># ... übliches hier ...</comment>

  <comment># SGI Workstation... ändern Sie 'sgi' auf den Hostnamen ihrer SGI Maschine.</comment>
  host <i>sgi</i> {
  
    <comment># MAC Adresse der SGI Maschine.  Normalerweise steht diese auf der Rückseite</comment>
    <comment># oder unter der Maschine.</comment>
    hardware ethernet <i>08:00:69:08:db:77</i>;

    <comment># TFTP Server von dem heruntergeladen wird (standardmäßig derselbe wie der DHCP Server)</comment>
    next-server <i>192.168.10.1</i>;

    <comment># IP Adresse die er SGI Maschine gegeben wird</comment>
    fixed-address <i>192.168.10.3</i>;

    <comment># Dateiname für das PROM, das heruntergeladen und gebootet wird.</comment>
    filename "<i>/gentoo-r4k.img</i>";
  }
}
</pre>
</body>
</subsection>

<subsection>
<title>Kerneloptionen</title>
<body>
<p>
Wir sind fast fertig, es sind nur noch eine Anzahl kleiner Justierungen nötig. 
Starten Sie eine Konsole mit Root-Privilegien und geben Sie die folgenden 
Befehle ein.
</p>

<pre caption="Eine Korrekturen damit SGI Maschinen richtig mit TFTP zusammenarbeiten">
<comment>(Deaktivieren von "Path Maximum Transfer Unit", ansosnten findet SGI Prom den Kernel nicht)</comment>
# <i>echo 1 &gt; /proc/sys/net/ipv4/ip_no_pmtu_disc</i>

<comment>(Setzen des verwendenbaren Bereichs von Ports für das SGI PROM)</comment>
# <i>echo "2048 32767" &gt; /proc/sys/net/ipv4/ip_local_port_range</i>
</pre>

<p>
Dies sollte ausreichend sein um es dem Linux Server zu ermöglichen einwandfrei 
mit dem SGI PROM zu interagieren.
</p>

</body>
</subsection>
<subsection>
<title>Starten Sie Ihre Daemons...</title>
<body>
<p>
Zu diesem Zeitpunkt sollten Sie bereit sein Ihre Daemons zu starten. Geben Sie 
folgendes ein:
</p>

<pre caption="Starten der DHCP und TFTP Daemons">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/in.tftpd start</i>
</pre>

<p>
Wenn nichts schiefgegangen ist beim letzten Schritt, dann sollten Sie jetzt 
dazu bereit sein die Workstation anzuschalten und mit dem Leitfaden 
fortzufahren. Wenn der DHCP Server, aus welchem Grund auch immer, nicht 
startet, sollten Sie versuchen 'dhcpd' in der Eingabezeile auszuführen um zu 
sehen was es Ihnen mitteilt. Wenn alles einwandfrei läuft sollte es in den 
Hintegrund wandern, ansonsten werden Sie 'exiting' sehen, direkt nach der 
Fehlermeldung.
</p>

<p>
Ein einfacher Weg festzustellen ob der TFTP Daemon läuft ist es den folgenden 
Befehl einzutippen. Wenn Sie etwas wie die Ausgabe weiter unten sehen, dann 
ist alles in Ordnung.
</p>

<pre caption="Überprüfen ob TFTPd läuft">
# <i>netstat -al | grep ^udp</i>
udp        0      0 *:bootpc                *:*
udp        0      0 *:631                   *:*
udp        0      0 *:xdmcp                 *:*
udp        0      0 *:tftp                  *:* <comment>&lt;-- (suchen Sie nach dieser Zeile)</comment>
</pre>

</body>
</subsection>
<subsection>
<title>Netboot einer SGI Maschine</title>
<body>

<p>
Alles ist nun bereit, DHCP und TFTP laufen. Es ist nun Zeit die SGI Maschine 
hochzufahren. Schalten Sie den Rechner an, wenn Sie "Running power-on
diagnostics" sehen, dann klicken Sie entweder auf "Stop For Maintenance" oder 
drücken Sie ESCAPE. Ihnen wird ein Menü, ähnlich dem folgenden, präsentiert. 
Geben Sie die Befehle wie unten gezeigt ein.
</p>

<pre caption="SGI PROM Maintenance Menu">
        Running power-on diagnostics

System Maintenance Menu

1) Start System
2) Install System Software
3) Run Diagnostics
4) Recover System
5) Enter Command Monitor

Option? <i>5</i>
Command Monitor. Type "exit" to return to the menu.
&gt;&gt; <i>bootp(): root=/dev/ram0</i>
</pre>

<p>
Von diesem Punkt an sollte die Maschine anfangen das Image herunterzuladen. 
Dann, etwa 20 Sekunden später, sollte Linux anfangen zu booten. Wenn alles 
gut geht, sollten Ihnen die Busybox <c>ash</c> Shell, wie unten gezeigt, 
präsentiert werden. Dort können Sie dann fortfahren mit der 
<uri link="?part=1&amp;chap=3">Konfiguration Ihres Netzwerks</uri>.
</p>

<pre caption="Wenn alles richtig läuft...">
init started:  BusyBox v1.00-pre10 (2004.04.27-02:55+0000) multi-call binary

Gentoo Linux; http://www.gentoo.org/
 Copyright 2001-2004 Gentoo Technologies, Inc.; Distributed under the GPL

 Gentoo/MIPS Netboot for Silicon Graphics Machines
 Build Date: April 26th, 2004

 * To configure networking, do the following:

 * For Static IP:
 * /bin/net-setup &lt;IP Adresse&gt; &lt;Gateway Adresse&gt; [telnet]

 * For Dynamic IP:
 * /bin/net-setup dhcp [telnet]

 * If you would like a telnetd daemon loaded as well, pass "telnet"
 * As the final argument to /bin/net-setup.

Please press Enter to activate this console.
</pre>

</body>
</subsection>
<subsection>
<title>Fehlerbehebung.</title>
<body>

<p>
Wenn die Maschine stur bleibt und sich weigert das Image herunterzuladen kann 
dies zwei mögliche Ursachen haben. (1) sie haben irgendwie sich versehen oder 
(2) es wird ein wenig Überzeugungsarbeit benötigt. (Nein, noch kein Grund den 
Vorschlaghammer zu holen!) Hier ist eine Liste von Dingen die Sie überprüfen 
können:
</p>

<ul>
  <li>
    dhcpd gibt der SGI Maschine eine IP Adresse. Sie sollten einige Meldungen 
    sehen über eine BOOTP Anfrage in Ihren Systemprotokollen. <c>tcpdump</c> 
    kan hier auch hilfreich sein.
  </li>
  <li>
    Berechtigungen sind für Ihren tftp Ordner korrekt gesetzt (normalerweise 
    <path>/tftpboot</path> -- sollte world readable sein)
  </li>
  <li>
    Überprüfen Sie Ihre Systemprotokolle um zu sehen was der tftp Server 
    meldet (Fehler möglicherweise)
    Check system logs to see what the tftp server is reporting (errors
    perhaps)
  </li>
<!--
  I really think this tip can go...
  
  <li>
    Pray to a Tux plushie (this may or may not work, and is not an officially
    supported troubleshooting technique)
  </li>-->
</ul>

<p>
Wenn Sie alles auf dem Server überprüft haben, und Sie Timeouts etc auf Ihrer 
SGI Maschine erhalten, dann versuchen Sie folgendes in die Konsole zu tippen.
</p>

<pre caption="Das SGI PROM überreden zu funktionieren">
&gt;&gt; <i>resetenv</i>
&gt;&gt; <i>unsetenv netaddr</i>
&gt;&gt; <i>unsetenv dlserver</i>
&gt;&gt; <i>init</i>
&gt;&gt; <i>bootp(): root=/dev/ram0</i>
</pre>

</body>
</subsection>
</section>

<section>
<title>Netboot für Cobalt Server</title>
<subsection>
<body>

</body>
</subsection>

<subsection>
<title>Übersicht der netboot Prozedur</title>
<body>

<p>
Anders als SGI Maschinen verwenden Cobalt Server NFS um Ihren Kernel für den 
Boot zu transferieren. Sie booten indem Sie die linke &amp; rechte Pfeiltaste 
gedrückt halten, während Sie die Maschine einschalten. Die Maschine wird 
versuchen eine IP Nummer via BOOTP zu erhalten, dann das <path>/nfsroot</path> 
Verzeichnis vom Server via NFS einzubinden und dann versuchen die Datei 
<path>vmlinux_raq-2800.gz</path> (es nimmt an, dass dies eine Standard 
ELF-Binärdatei ist) herunterzuladen und zu booten.
</p>

<p>
Leider gibt uns das Cobalt BOOTROM keine Mitsprache bei diesem Vorgang und die 
Datei MUSS im <path>/nfsroot</path> Verzeichnis sein und muss weniger als 
675kB groß sein. In diesem Leifaden werden wir 
<uri link="http://www.colonel-panic.org/cobalt-mips/">CoLo</uri> einrichten um 
es möglich zu machen einen größeren Kernel als dieses Limt zu booten. CoLo 
unterstützt auch integrierte Ramdisks und daher erübrigt sich auch die 
Anforderung, dass sich ein komplettes Root Dateisystem in 
<path>/nfsroot</path> befinden muss.
</p>

</body>
</subsection>

<subsection>
<title>Herunterladen eines Netboot Image</title>
<body>

<p>
Unter
<uri link="http://dev.gentoo.org/~kumba/mips/cobalt/netboot/">
http://dev.gentoo.org/~kumba/mips/cobalt/netboot/</uri>
werden Sie die notwendigen Boot Images finden, welche nötig sind um einen 
Cobalt zum Laufen zu kriegen. Die Dateien die Sie benötigen werden den Namen 
<path>cobalt-netboot-YYYYMMDD.img.gz</path> haben. Wählen Sie das aktuellste 
und plazieren Sie es in Ihr <path>/nfsroot</path> Verzeichis. Bennenen Sie 
Datei zur einfacheren Handhabung in <path>gentoo-cobalt.img.gz</path> um, der 
Leitfaden setzt voraus, dass Sie dies getan haben.
</p>

<p>
Wenn dies erledigt ist, besuchen Sie 
<uri link="http://www.colonel-panic.org/cobalt-mips/">
http://www.colonel-panic.org/cobalt-mips/</uri> und
laden die aktuellste Version des CoLo Bootloader herunter. Ent-tar-ren Sie 
an einem Ort Ihres Beliebens. Innerhalb des <path>colo-1.XX/binaries</path> 
Verzeichnisses erstellt sollten Sie eine Datei namens 
<path>colo-chain.elf</path> finden.  Packen Sie die Datei mit Gzip und legen 
Sie diese in <path>/nfsroot</path> unter dem Namen 
<path>vmlinux_raq-2800.gz</path> ab. In einigen Fällen ist es auch nötig einen 
symbolischen Link genannt <path>boot</path> zu erstellen, der auf 
<path>/nfsroot</path> zurück verweist. Sie können dies in einem Rutsch mit 
folgenden Befehlen tun:
</p>

<note>
Beachten Sie, dass der RaQ1 und Qube 2700 nach <path>vmlinux.gz</path> 
anstatt von <path>vmlinux_raq-2800.gz</path>.
</note>

<pre caption="CoLo in nfsroot setzen">
# <i>tar -xzvf colo-1.XX.tar.gz</i>
# <i>cd colo-1.XX/binaries</i>

<comment>(Für Qube 2800, RaQ2, etc)</comment>
# <i>gzip -9vc colo-chain.elf &gt; /nfsroot/vmlinux_raq-2800.gz</i>

<comment>(Für RaQ1, Qube 2700)</comment>
# <i>gzip -9vc colo-chain.elf &gt; /nfsroot/vmlinux.gz</i>
# <i>cd /nfsroot</i>
# <i>ln . boot</i>
</pre>

<note>
Wenn die aktuellste CoLo Version nicht bootet sollten Sie vielleicht eine 
ältere Version ist. E ist bekannt, dass Version 1.16 und älter funktionieren.
</note>

</body>
</subsection>

<subsection>
<title>NFS Server Konfiguration</title>
<body>

<p>
Da diese Maschine NFS verwendet um das Image herunterzuladen müssen Sie 
<path>/nfsroot</path> auf ihrem Server exportieren. Wenn noch nicht 
geschehen, müssen Sie das net-fs/nfs-utls Paket installieren.
</p>
<pre caption="Installieren von nfs-utils">
# <i>emerge net-fs/nfs-utils</i>
</pre>

<p>
Sowie dies erledigt ist sollten Sie folgendes in Ihre <path>/etc/exports</path>
Datei schreiben. Wenn Sie wünschen können Sie auch härtere Beschränkungen 
verwenden.
</p>

<pre caption="Exportieren des /nfsroot Verzeichnisses">
/nfsroot      *(ro,sync)
</pre>

<p>
Nun, da dies geschafft ist, können Sie Ihren NFS Server starten:
</p>

<pre caption="Starten des NFS Server">
# <i>/etc/init.d/nfs start</i>
</pre>

<p>
Wenn der NFS Server zu diesem Zeitpunkt schon lief, dann können Sie ih dazu 
auffordern einen weiteren Blick in die <c>exports</c> Datei zu werfen mit 
<c>exportfs</c>.
</p>

<pre caption="Exportieren eines neuen Dateisystems">
# <i>exportfs -av</i>
</pre>

</body>
</subsection>

<subsection>
<title>DHCP Konfiguration für Cobalt Maschinen</title>
<body>

<p>
Der DHCP Teil der Vorbereitungen is relativ simpel. Fügen Sie folgendes 
Ihrer <path>/etc/dhcp/dhcpd.conf</path> Datei hinzu.
</p>

<pre caption="dhcpd.conf Auszug für Cobalt Server">
subnet xxx.xxx.xxx.xxx netmask xxx.xxx.xxx.xxx {
  <comment># ... das übliche hier ...</comment>

  <comment># Konfiguration für Cobalt Server</comment>
  <comment># Set the hostname here:</comment>
  host <i>qube</i> {
    <comment># Pfad zum nfsroot Verzeichnis</comment>
    <comment># Dies ist haupsächlich um die TFTP Bootoption auf CoLo zu verwenden</comment>
    option root-path "/nfsroot";

    <comment># Ethernet MAC Adresse des Cobalt Server</comment>
    hardware ethernet <i>00:10:e0:00:86:3d</i>;

    <comment># Server von dem das Image geladen wird</comment>
    next-server <i>192.168.10.1</i>;

    <comment># IP Adresse des Cobalt Server</comment>
    fixed-address <i>192.168.10.2</i>;

    <comment># Image das heruntergeladen wird</comment>
    <comment># Auch hier hat wieder mehr mit CoLo zu tun</comment>
    filename "<i>gentoo-cobalt.img.gz</i>";
  }
}
</pre>

</body>
</subsection>

<subsection>
<title>Start Sie Ihre Daemons...</title>
<body>

<p>
Zu diesem Zeitpunkt sollten Sie bereit sein Ihre Daemons zu starten. Geben Sie 
folgendes ein:
</p>

<pre caption="Starten der DHCP und NFS Daemons">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/nfs start</i>
</pre>

<p>
Wenn nichts schiefgegangen ist beim letzten Schritt, dann sollten Sie jetzt 
dazu bereit sein die Workstation anzuschalten und mit dem Leitfaden 
fortzufahren. Wenn der DHCP Server, aus welchem Grund auch immer, nicht 
startet, sollten Sie versuchen 'dhcpd' in der Eingabezeile auszuführen um zu 
sehen was es Ihnen mitteilt. Wenn alles einwandfrei läuft sollte es in den 
Hintegrund wandern, ansonsten werden Sie 'exiting' sehen, direkt nach der 
Fehlermeldung.
</p>

</body>
</subsection>

<subsection>
<title>Netboot der Cobalt Maschine</title>
<body>

<p>
Alles ist nun bereit, DHCP und NFS laufen Es ist nun Zeit die Cobalt Maschine 
hochzufahren. Schliessen Sie Ihr Null-Modem Kabel an und setzen Sie das 
serielle Terminal auf 115200 Baud, 8 Bits, keine Parität, 1 Stopp Bit, VT100 
Emulation. Sobald das geschehen ist müssen Sie die linke &amp; rechte 
Pfeiltaste gedrückt halten während Sie den Rechner anschalten.
</p>

<p>
Wenn alles in Ordnung ist, dann sollte das rückwärtige Display "Net Booting" 
anzeigen und Sie sollten einige Netzwerkaktivität sehen, schnell gefolgt von 
CoLo. Sie sollten dann am rückwärtigen Display runterscrollen bis Sie "Boot 
Shell" sehen, drücken Sie dann EINGABE. Auf der seriellen Konsole sollten 
Sie dann zu einer Prompt, wie unten gezeigt, gelangen.
</p>

<note>
Es wurde berichtet dass das einfache Auswählen der NFS Bootoption alles 
weitere für Sie tut bei modernen Versionen von Colo. Wenn die Auswahl dieses 
Boots nicht funktioniert, dann lesen Sie weiter.
</note>

<pre caption="CoLo bootet in eine Prompt">
[ "CoLo" v1.13 ]
stage2: 87fb0000-88000000
pci: unit type &lt;Qube2&gt;
tulip: {00:10:e0:00:86:3d}
ide: resetting
boot: running boot menu
&gt;
</pre>

<p>
Erster Schritt: Sagen Sie der Maschien, dass sie eine Adresse via DHCP besorgen
soll. Tippen Sie <c>dhcp</c> in die Eingabezeile.
</p>

<pre caption="Besorgen der Adresse via DHCP">
&gt; <i>dhcp</i>
net: interface up
dhcp: DISCOVER
dhcp: OFFER 10.0.0.1 &lt;-- 192.168.10.254
dhcp: REQUEST
arp: sent request for 192.168.10.254
udp: no matching socket 192.168.5.1:67 --&gt; 10.0.0.1:68
arp: resolved 192.168.10.254
udp: no matching socket 192.168.5.1:67 --&gt; 10.0.0.1:68
dhcp: DISCOVER
dhcp: OFFER 10.0.0.1 &lt;-- 192.168.10.254
dhcp: REQUEST
udp: no matching socket 192.168.5.1:67 --&gt; 10.0.0.1:68
dhcp: ACK
net: interface down
net: interface up
  address     10.0.0.1
  netmask     255.255.255.0
  gateway     10.0.0.254
  name server 192.168.5.1
</pre>

<p>
ANMERKUNG: Wenn Sie ein Windows Netzwerk haben, dann sehen unter Umständen 
viele Nachrichten nach dem Muster <c>udp: no matching socket</c>. Dies sind 
Antworten Netzwerk Broadcasts an Ports die CoLo nicht anerkennt. So nervig wie 
diese sind, sie sind absolut harmlos.
</p>

<pre caption="'no matching socket' Fehlermeldungen">
udp: no matching socket 10.0.0.254:138 --&gt; 10.0.0.255:138
udp: no matching socket 10.0.0.254:138 --&gt; 10.0.0.255:138
udp: no matching socket 10.0.0.253:1062 --&gt; 10.0.0.255:137
udp: no matching socket 10.0.0.253:1062 --&gt; 10.0.0.255:137
</pre>

<p>
Der nächste Schritt ist es dem Cobalt Server mitzuteilen, dass er 
seinen Kernel herunterladen soll.
</p>

<pre caption="Herunterladen des Kernels">
&gt; <i>nfs 10.0.0.254 /nfsroot gentoo.img.gz</i>
arp: sent request for 10.0.0.254
arp: resolved 10.0.0.254
udp: no matching socket 10.0.0.253:1062 --&gt; 10.0.0.255:137
nfs: mounted "/nfsroot"
nfs: lookup "gentoo.img.gz"
nfs: mode &lt;0100644&gt;
4651KB loaded (1240KB/sec)
0048ada0 4763040t
</pre>

<p>
Das ist es, es hat jetzt den Kernel heruntergeladen, wir können ihm nun 
sagen, dass es mit dem booten beginnen soll.
</p>

<pre caption="Booten des Kernels">
&gt; <i>execute</i>
elf: 80080000 &lt;-- 00001000 6586368t + 192624t
elf: entry 80328040
net: interface down
CPU revision is: 000028a0
FPU revision is: 000028a0
Primary instruction cache 32kB, physically tagged, 2-way, linesize 32 bytes.
Primary data cache 32kB 2-way, linesize 32 bytes.
Linux version 2.4.26-mipscvs-20040415 (root@khazad-dum) (gcc version 3.3.3...
Determined physical RAM map:
 memory: 08000000 @ 00000000 (usable)
Initial ramdisk at: 0x80392000 (3366912 bytes)
On node 0 totalpages: 32768
zone(0): 32768 pages.
zone(1): 0 pages.
zone(2): 0 pages.
Kernel command line: console=ttyS0,115200 root=/dev/ram0
Calibrating delay loop... 249.85 BogoMIPS
Memory: 122512k/131072k available (2708k kernel code, 8560k reserved, 3424k dat)
</pre>

<p>
Wenn alles gut geht, sollten Ihnen die Busybox <c>ash</c> Shell, wie unten 
gezeigt, präsentiert werden. Dort können Sie dann fortfahren mit der 
<uri link="?part=1&amp;chap=3">Konfiguration Ihres Netzwerks</uri>.
</p>

<pre caption="Wenn alles richtig läuft...">
VFS: Mounted root (ext2 filesystem) readonly.
Freeing unused kernel memory: 280k freed
init started:  BusyBox v1.00-pre10 (2004.04.27-02:55+0000) multi-call binary

Gentoo Linux; http://www.gentoo.org/
 Copyright 2001-2004 Gentoo Technologies, Inc.; Distributed under the GPL

 Gentoo/MIPS Netboot for Cobalt Microserver Machines
 Build Date: April 26th, 2004

 * To configure networking, do the following:

 * For Static IP:
 * /bin/net-setup &lt;IP Adresse&gt; &lt;Gateway Adresse&gt; [telnet]

 * For Dynamic IP:
 * /bin/net-setup dhcp [telnet]

 * If you would like a telnetd daemon loaded as well, pass "telnet"
 * As the final argument to /bin/net-setup.

Please press Enter to activate this console.
</pre>

</body>
</subsection>

<subsection>
<title>Fehlerbehebung</title>
<body>

<p>
Wenn die Maschine stur bleibt und sich weigert das Image herunterzuladen kann 
dies zwei mögliche Ursachen haben. (1) sie haben irgendwie sich versehen oder 
(2) es wird ein wenig Überzeugungsarbeit benötigt. (Nein, noch kein Grund den 
Vorschlaghammer zu holen!) Hier ist eine Liste von Dingen die Sie überprüfen 
können:
</p>

<ul>
  <li>
    dhcpd gibt der Cobalt Maschine eine IP Adresse. Sie sollten einige 
    Meldungen über eine BOOTP Anfrage in Ihren Systemprotokollen finden. 
    <c>tcpdump</c> ist hier auch hilfreich.
  </li>
  <li>
    Berechtigungen sind für den <path>/nfsroot</path> Ordner korrekt gesetzt.  
    (sollte world readable sein)
  </li>
  <li>
    Stellen Sie sicher, dass der NFS läuft und das Verzeichnis 
    <path>/nfsroot</path> auch exportiert. Überprüfen Sie dies durch 
    <c>exportfs -v</c> auf dem Server.
  </li>
</ul>
</body>
</subsection>
</section>
<!--

  Commented Out Until Further Notice

<section>
<title>Gentoo/MIPS LiveCD</title>
<subsection>
<title>Overview</title>
<body>

<p>
On Silicon Graphics machines, it is possible to boot from a CD in order to
install operating systems.  (This is how one installs IRIX for instance)
Recently, images for such bootable CDs to install Gentoo have been made
possible.  These CDs are designed to work in the same way.
</p>

<p>
At the moment the Gentoo/MIPS Live CD will only work on the SGI Indy,
Indigo 2 and O2 workstations equipped with R4000 and R5000-series CPUs, however
other platforms may be possible in future.
</p>

<p>
You can find the Live CD images for download on your favourite Gentoo Mirror
under the <path>experimental/mips/livecd</path> directory.
</p>

<warn>
These CDs are highly experimental at this time.  They may or may not work at
this time.  You can report success or failures either on
<uri link="http://bugs.gentoo.org">Bugzilla</uri>,
<uri link="http://forums.gentoo.org/viewtopic.php?t=242518">this forum
thread</uri> or in the <c>#gentoo-mips</c>
<uri link="http://www.gentoo.org/main/en/irc.xml">IRC channel</uri>.  We would
love to hear from you.
</warn>

</body>

</subsection>

<subsection>
<title>Burning a Live CD</title>
<body>

<p>
An important thing to note, the SGI PROM does not understand the ISO9660 format,
nor does it know anything about the El Torito boot standard.  These CD images
are constructed as a SGI disklabel with the boot image in the volume header like
a hard drive.  Therefore, care must be taken when burning the CD image.
</p>

<p>
Below is an example command that assumes 24x burning speed on an IDE burner.  If
you have a SCSI burner for instance, you may want to adjust the <c>dev</c>
statement as appropriate.  Likewise with the <c>speed</c> option - if you
strike troubles, you might want to try dropping the speed.
</p>

<pre caption="Burning using cdrecord">
# <i>bzip2 -d mips-livecd-prototype-rc2-20041027.img.bz2</i>
# <i>cdrecord -vv -pad speed=24 dev=ATAPI:0,0,0 -tao mips-livecd-prototype-rc2-20041027.img</i>
</pre>

<note>
It may be possible to burn these CDs under Windows, assuming your burning
program just blindly burns the image as is.  However, no one has succeeded in
making a working CD this way to date.
</note>

<note>
If you don't know what to put as your <c>dev</c> argument, run <c>cdrecord
-scanbus</c> as root - this will tell you where your burner is located.
</note>

</body>
</subsection>
</section>
-->
</sections>
