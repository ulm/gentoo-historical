<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- English CVS Version: 1.25 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/2005.0/hb-install-ppc-disk.xml,v 1.1 2005/05/21 22:43:57 dertobi123 Exp $ -->

<sections>

<version>1.21</version>
<date>2004-12-12</date>

<section>
<title>Einführung in Block Devices</title>
<subsection>
<title>Block Devices</title>
<body>

<p>
Wir werden einen guten Einblick in die Festplatten bezogenen Aspekte von Gentoo
Linux und Linux im allgemeinen, inklusive Linux Dateisystemen, Partitionen und
Block Devices erhalten.
Dann, sobald Sie mit den Vor- und Nachteilen von Festplatten und Dateisystemen
vertraut sind, werden Sie durch den Prozess des Partitionierens und der
Dateisystemerstellung für Ihre Gentoo Linux Installation geführt.
</p>

<p>
Zu Beginn werden wir Ihnen <e>Block Devices</e> vorstellen. Das berühmteste
Block Device is warscheinlich das, welches das erste IDE Laufwerk in einem
Linux System repräsentiert, namentlich <path>/dev/hda</path>. Wenn Ihr System
SCSI oder SATA Laufwerke verwendet, dann wäre Ihre erste Festplatte
<path>/dev/sda</path>.
</p>

<p>
Das obige Block Device repräsentiert ein abstraktes Interface zur Festplatte.
Benutzerprogramme können diese Block Device benutzen, um Ihre Festplatte
anzusprechen, ohne sich darum zu kümmern, ob Ihre Festplatten IDE, SCSI oder
irgendwas anderes sind. Das Programm kann den Speicherplatz auf der Festplatte
einfach als eine Anhäufung von zusammenhängenden, beliebig zugreifbaren
512-Byte Blöcken ansprechen.
</p>

</body>
</subsection>
<subsection>
<title>Partitionen und Slices</title>
<body>

<p>
Obwohl es theoretisch möglich ist eine ganze Festplatte zu nutzen, um Ihr Linux
System zu beherbergen, wird dies in der Praxis so gut wie nie gemacht.
Stattdessen werden komplette Festplatten Block Devices in kleinere, besser
verwaltbare Block Devices unterteilt. Auf den meisten Systemen werden sie
<e>Partitionen</e> genant. Andere Architekturen benutzen ähnliche Techniken,
welche <e>Slices</e> genannt werden.
</p>

</body>
</subsection>
</section>
<section>
<title>Erstellung eines Partitionsschemas</title>
<subsection>
<title>Standard Partitionsschema</title>
<body>

<p>
Wenn Sie nicht daran interessiert sind ein Partitionsschema für Ihr System zu
erstellen, können Sie das (nicht LVM) Partitionsschema verwenden, welches wir
in diesem Handbuch benutzen:
</p>

<table>
<tr>
  <th>Partition NewWorld</th>
  <th>Partition OldWorld</th>
  <th>Partition Pegasos</th>
  <th>Dateisystem</th>
  <th>Größe</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>/dev/hda1</ti>
  <ti>(nicht anwendbar)</ti>
  <ti>(Partition Map)</ti>
  <ti>32k</ti>
  <ti>Apple_partition_map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(nicht benötigt)</ti>
  <th>(nicht anwendbar)</th>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda2</path></ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Swap Partition</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda2</path></ti>
  <ti>ext3</ti>
  <ti>Rest der Festplatte</ti>
  <ti>Root Partition</ti>
</tr>
</table>

<note>
Es gibt einige Partionen mit Namen wie <path>Apple_Driver43,
Apple_Driver_ATA, Apple_FWDriver, Apple_Driver_IOKit,
Apple_Patches</path>. Wenn Sie nicht planen MacOS 9 einzuseten können Sie diese
löschen, da MacOS X und Linux diese nicht benötigen. Möglicherweise müssen Sie
diese mit parted löschen, da mac-fdisk diese noch nicht löschen kann.
</note>

<p>
Wenn Sie daran interessiert sind zu erfahren, wie groß eine Partition sein
sollte, oder auch wieviele Partitionen (oder Volumes) Sie benötigen, lesen
Sie weiter. Anderenfalls fahren Sie nun mit dem <uri link="#fdisk">Standard: Partitionieren Ihrer
Festplatte</uri> oder <uri link="#parted">Alternativ: Benutzen von parted
(besonders Pegasos) zur Partitionierung</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Wie viele und wie groß?</title>
<body>

<p>
Die Anzahl an Partitionen hängt von Ihrer Umgebung ab.
Wenn Sie z.B. eine Menge User haben, wollen Sie
höchst wahrscheinlich Ihr <path>/home</path> separat halten, da es die
Sicherheit erhöht und Backups einfacher macht. Wenn Sie Gentoo installieren um
als Mailserver zu fungieren, sollten Sie <path>/var</path> separat halten, da
alle Mails in <path>/var</path> gespeichert werden. Eine gute Wahl des
Dateisystems maximiert dann zusätzlich die Performance. Gameserver sollten ein
separates <path>/opt</path> haben, da die meisten Game Server dort installiert
werden. Der Grund ist ähnlich wie bei <path>/home</path>:
Sicherheit und Backups.
</p>

<p>
Wie Sie sehen können, hängt es sehr stark davon ab, was Sie erreichen wollen.
Separate Partitionen oder Volumes haben folgende Vorteile:
</p>

<ul>
<li>
  Sie können das Filesystem mit der höchsten Performance für jede Partition oder
  jedes Volume auswählen
</li>
<li>
  Ihr System behält noch freien Speicherplatz, selbst wenn ein defektes Tool
  ununterbrochen Dateien auf eine Partition oder ein Volume schreibt
</li>
<li>
  Falls nötig können Dateisystem Checks zeitlich verkürzt werden, in dem
  mehrere Checks parallel durchgeführt werden können (obwohl dieser Vorteil eher
  mit mehreren Festplatten als mit mehreren Partitionen zum Tragen kommt)
</li>
<li>
  Die Sicherheit kann erhöht werden, indem Sie einige Partitionen oder Volumes
  read-only, nosuid (setuid bits werden ignoriert), noexec (executable bits
  werden ignoriert) etc mounten.
</li>
</ul>

<p>
Wie dem auch sei, mehrere Partitionen haben einen großen Nachteil: wenn sie nicht
ordentlich konfiguriert werden, könnte das Resultat ein System sein, welches viel
Speicherplatz auf der einen Partition und keinen auf einer anderen frei hat. Es
gibt weiterhin ein 15 Partitionen Limit bei SCSI und SATA.
</p>

</body>
</subsection>
</section>
<section id="#fdisk">
<title>Standard: Partitionerung der Festplatte</title>
<body>

<p>
An dieser Stelle erstellen Sie Ihre Partitionen mit <c>mac-fdisk</c>:
</p>

<pre caption="Starten von mac-fdisk">
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
Löschen Sie zunächst die Partitionen, die Sie vorher geleert haben, um Platz
für Ihre Linux Partitionen zu schaffen. Benutzen Sie <c>d</c> in
<c>mac-fdisk</c> um diese Partitionen zu löschen. Es wird Sie beim Löschvorgang
nach einer Partitionsnummer fragen. Für gwöhnlich kann die erste Partition auf
NewWorld Maschinen (Apple_partition_map) nicht gelöscht werden.
</p>

<p>
Nun erstellen Sie eine <e>Apple_Bootstrap</e> Partition mit <c>b</c>. Sie werden
nach einem Block gefragt, an dem Sie starten wollen. Geben Sie die Nummer Ihrer
ersten Freien Partition, gefolgt von einem <c>p</c> ein. Zum Beispiel <c>2p</c>.
</p>

<note>
Diese Partition ist <e>keine</e> "Boot" Partition. Sie wird nicht von Linux
benutzt; Sie müssen darauf kein Dateisystem anlegen und sollten Sie niemals
mounten. PPC Benutzer benötigen keine Boot Partition.
</note>

<p>
Erstellen Sie nun eine Swap Partition indem Sie <c>c</c> drücken.
<c>mac-fdisk</c> wird Sie wieder nach einem Block fragen, an dem Sie diese
Partition beginnen lassen wollen. Nachdem wir <c>2</c> vorher für die
Apple_Bootstrap Partition gewählt haben, müssen Sie nun <c>3p</c> eingeben. Wenn
Sie nach der Größe gefragt werden geben Sie <c>512M</c> ein (oder die Größe die Sie
möchten ein, 512 ist empfholen). Wenn Sie nach einem Namen gefragt werden, geben
Sie <c>swap</c> ein. (notwending).
</p>

<p>
Um die Root Partition zu erstellen, geben Sie <c>c</c> gefolgt von <c>4p</c> ein
um auszuwählen, an welchem Block die Root Partition beginnen soll. Wenn Sie nach
der Größe gefragt werden, geben Sie wieder <c>4p</c> ein. <c>mac-fdisk</c>
interpretiert dies als "Benutze den ganzen verfügbaren Platz". Wenn Sie nach dem
Namen gefragt werden, geben Sie <c>root</c> ein. (zwingend).
</p>

<p>
Abschliessend schreiben Sie die Partitionstabelle mit <c>w</c> und beenden
<c>mac-fdisk</c> mit <c>q</c>.
</p>

<note>
Um sicherzustellen, dass die Partitionierung wie gewünscht übernommen wurde
sollten Sie mac-fdisk erneut ausführen und prüfen, ob alle Partitionen angelegt
wurden. Wenn Sie keine der von Ihnen angelegten Partitionen (oder andere
Änderungen) sehen können, sollten Sie die Partitionen mit "i" in mac-fdisk
reinitialisieren. Beachten Sie, dass dies die Partitionstabelle neu erstellt und
so alle Partitionen löscht.
</note>

<p>
Nachdem Ihre Partitionen nun erstellt sind, können Sie mit dem
<uri link="#filesystems">Erstellen der Dateisysteme</uri> fortfahren.
</p>

</body>
</section>
<section id="parted">
<title>Benutzen von parted (besonders Pegasos) zur Partitionierung</title>
<body>

<p>
<c>parted</c>, der Partition Editor kann nun HFS+ Partitionen bearbeiten, die
von Mac OS und Mac OS X genutzt werden. Mit diesem Tool können Sie
Mac-Partitionen verkleinern und Platz für Linux Partitionen schaffen. Das
nachfolgende Beispiel beschreibt dennoch nur die Partitionierung für Pegasos
Maschinen.
</p>

<p>
Starten Sie <c>parted</c>:
</p>

<pre caption="parted Starten">
# <i>parted /dev/hda</i>
</pre>

<p>
Wenn die Festplatte unpartitioniert ist führen sie <c>mklabel amiga</c> aus, um
ein neues Disklabel für diese Festplatte zu erstellen.
</p>

<p>
Sie können in parted jederzeit <c>print</c> eingeben um die aktuelle
Partitionstabelle anzuzeigen. Ihre Änderungen sind ungespeichert, solange bis
Sie die Anwendung beenden. Sie können parted jederzeit mit <c>Strg-c</c>
abbrechen, wenn sich Ihre Partitionierungsvorstellungen geändert haben.
</p>

<p>
Wenn Sie auf Ihrem Pegasos auch MorphOS installieren möchten, erstellen Sie ein
affs1 Dateisystem namens "BIO" (BI zero) um Anfang der Festplatte. 50MB sollten
mehr als genug sein, um den MorphOS Kernel unterzubringen. Wenn Sie einen
Pegasos I haben oder reiserfs oder xfs benutzen möchten, müssen Sie Ihren
Linux Kernel ebenfalls auf dieser Partition ablegen (Der Pegasos II kann von
ext2/ext3 Laufwerken booten). Um diese Partition zu erstellen führen Sie
<c>mkpart primary affs1 START END</c> aus, wobei <c>START</c> und <c>END</c> mit
dem Megabyte Bereich ersetzt werden sollten. (<c>5 55</c> erstellt eine 50 MB Partition
beginnend bei 5MB und endend bei 55MB.
</p>

<p>
Für Linux müssen Sie zwei Partitionen erstellen, ein Root-Dateisystem für alle
Programm Dateien etc. und eine Swap Partition. Um das Root-Dateisystem zu
erstellen, müssen Sie sich zunächst entscheiden, welches Dateisystem Sie
benutzen möchten. Mögliche Optionen sind ext2, ext3, reiserfs und xfs.
Wählen Sie ext3, solange Sie nicht genau wissen, was Sie tun. Führen Sie
<c>mkpart primary ext3 START END</c> aus um eine ext3 Partition zu erstellen.
Auch hier: Ersetzen Sie <c>START</c> und <c>END</c> mit den Megabyte Start und
Stop Marken der Partition.
</p>

<p>
Es ist generell empfohlen eine Swap Partition zu erstellen, die doppelt so gross
ist, wie der verfügbare Arbeitsspeicher. Sie kommen evtl. auch mit einer
kleineren Swap Partition aus, solange Sie nicht planen eine Vielzahl an
Applikationen gleichzeitig auszuführen (dennoch sind mindestens 512MB
empfohlen). Um die Swap Partition zu erstellen führen Sie 
<c>mkpart primary linux-swap START END</c> aus.
</p>

<p>
Notieren Sie sich die Nummern der einzelnen Partitionen, da Sie diese während
des weiteren Installationsvorgangs benötigen. Um die Nummern anzuzeigen führen
sie <c>print</c> aus. Ihre Partitionen werden als <path>/dev/hdaX</path>
angesprochen, wobei X durch die Nummer der Partition zu ersetzen ist.
</p>

<p>
Wenn Sie fertig sind, führen Sie <c>quit</c> aus.
</p>

</body>
</section>
<section id="filesystems">
<title>Erstellen der Dateisysteme</title>
<subsection>
<title>Einleitung</title>
<body>

<p>
Jetzt sind Ihre Partitionen erstellt, so dass es nun an der Zeit ist
Dateisysteme anzulegen. Wenn Sie mit dem zufrieden sind, was wir Ihnen
vorschlagen, dann fahren Sie mit <uri link="#filesystems-apply">Dateisystem
auf einer Partition anlegen</uri> fort. Wenn nicht, lesen Sie weiter, um
ein wenig mehr über Dateisysteme zu lernen ...
</p>

</body>
</subsection>
<subsection>
<title>Dateisysteme?</title>
<body>

<p>
Verschiedene Dateisysteme sind verfügbar. ext2, ext3 und XFS sind auf PPC
als stabil bekannt. JFS ist nicht unterstützt, ReiserFS hat immer noch einige
Probleme im Zusammenhang mit PPC und ist daher ebenfalls nicht unterstützt.
</p>

<p>
<b>ext2</b> ist das erprobte und wahre Linux Dateisystem, unterstützt aber kein
Metadata Journaling, was bedeutet, dass routinemäßige Dateisystem Checks beim
Booten sehr zeitaufwändig sein können. Es gibt mittlerweile eine Auswahl an
journalisierenden Dateisystemen neuerer Generation, die die Konsistenzchecks sehr
schnell erledigen und dadurch im Vergleich mit den nicht-journalisierenden
Gegenstücken vorzuziehen sind. Jounalisierende Dateisysteme verhindern lange
Verzögerungen beim Booten, wenn sich das Dateisystem in einem inkonsistenten
Zustand befindet.
</p>

<p>
<b>ext3</b> ist die journalisierende Version des ext2 Dateisystem, die Metadata
Journaling für schnelle Wiederherstellung sowie andere verbesserte Journaling
Modi wie "full data" und "ordered data" Jornaling unterstützt. ext3 ist ein sehr
gutes und verlässliches Dateisystem. Es hat eine zusätzliche b-tree Indexing
Option die in fast allen Situationen hohe Performance ermöglicht. Kurz gesagt:
ext3 ist ein excellentes Dateisystem.
</p>

<p>
<b>ReiserFS</b> ist ein B*-tree basierendes Dateisystem mit einer guten
Performance und überholt sowohl ext2 und ext3 im Umgang mit kleinen Dateien
(Dateien kleiner als 4k) oftmals mit einem Faktor von 10x-15x. ReiserFS skaliert
extrem gut und hat Metadata Journaling. Seit Kernel 2.4.18+ ist ReiserFS
stabil und sowohl als Dateisystem für generelle Anwendungen, als auch für
extreme Fälle wie große Dateisysteme, den Gebrauch mit vielen kleinen Dateien,
den Gebrauch mit sehr großen Dateien und Verzeichnissen mit tausenden von
Dateien brauchbar. Unglücklicherweise gibt es immer noch einige Probleme mit
ReiserFS auf PPC. Wir können die Nutzung dieses Dateisystems daher nicht
empfehlen.
</p>

<p>
<b>XFS</b> ist ein Dateisytem mit metadata journaling, das mit einem robusten
Feature-Set kommt und auf Skalierbarkeit ausgelegt ist. Wir empfehlen den Einsatz
dieses Dateisystems nur auf Linux Systemen mit High-End SCSI und/oder Fibre Channel
Storage und einer redundaten Stromversorgung. Da XFS agressiv vom RAM gebraucht
macht, können unsachgemäß designte Programme (solche die keine
Vorsichtsmaßnahmen treffen, wenn Sie auf die Festplatte schreiben und davon
gibt es einige) dazu führen, dass eine ganze Menge Daten verloren gehen, wenn
das System unerwartet ausfällt.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Eine Partition mit einem Dateisystem formatieren</title>
<body>

<p>
Um ein Dateisystem auf einer Partition oder einem Volume zu erstellen, gibt es
für jedes Dateisystem Tools:
</p>

<table>
<tr>
  <th>Dateisystem</th>
  <th>Kommando</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
</table>

<p>
Um die Root Partition (<path>/dev/hda4</path> in unserem Beispiel) als ext3 (wie in
unserem Beispiel) zu formatieren, führen Sie folgende Kommandos aus:
</p>

<pre caption="Eine Partition mit einem Dateisystem formatieren">
# <i>mke2fs -j /dev/hda4</i>
</pre>

<p>
Erstellen Sie nun die Dateisysteme auf Ihren neu erstellten Partionen (oder
logischen Volumes).
</p>

<note>
Auf OldWorld Maschinen und dem PegasosII muss die Partition, die den Kernel
beherbergt, mit ext2 oder ext3 formatiert sein. NewWorld Maschinen können von
ext2, ext3, XFS, ReiserFS oder sogar HFS/HFS+ Dateisystemen booten.
</note>

</body>
</subsection>
<subsection>
<title>Aktivieren der Swap Partition</title>
<body>

<p>
<c>mkswap</c> ist das Kommando, mit dem Sie die Swap Partition initialisieren:
</p>

<pre caption="Erstellen der Swap Signatur">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
Um die Swap Partition zu aktivieren, benutzen Sie <c>swapon</c>:
</p>

<pre caption="Aktivieren der Swap Partition">
# <i>swapon /dev/hda3</i>
</pre>

<p>
Erstellen und aktivieren Sie jetzt Ihre Swap Partition.
</p>

</body>
</subsection>
</section>
<section>
<title>Mounten</title>
<body>

<p>
Nachdem Ihre Partitionen nun initialisiert sind und ein Dateisystem beinhalten,
ist es an der Zeit diese Partitionen zu mounten. Benutzen Sie das <c>mount</c>
Kommando. Vergessen Sie nicht die notwendigen Mount Verzeichnisse für jede
erstellte Partition anzulegen. Als Beispiel mounten wir die root und boot
Partition:
</p>

<pre caption="Mounten von Partitionen">
# <i>mount /dev/hda4 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
</pre>

<note>
Wenn Sie <path>/tmp</path> auf eine separate Partition legen möchten, stellen
Sie sicher, dass Sie die Berechtigungen nach dem mounten ändern:
<c>chmod 1777 /mnt/gentoo/tmp</c>. Dies gilt auch für <path>/var/tmp</path>.
</note>

<p>
Sie müssen auch noch das proc Dateisystem (ein virtuelles Interface zum Kernel)
auf <path>/proc</path> mounten. Zunächst müssen wir jedoch alle Dateien auf der
Partition ablegen.
</p>

<p>
Fahren Sie mit der <uri link="?part=1&amp;chap=5">Installation der Gentoo
Installations Dateien </uri> fort.
</p>

</body>
</section>
</sections>
