<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- English CVS Version: 1.2 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/handbook/2005.0/hb-install-ppc-bootloader.xml,v 1.4 2005/08/17 01:25:06 grahl Exp $ -->

<sections>

<version>4.00</version>
<date>2005-03-19</date>

<section>
<title>Eine Wahl treffen</title>
<subsection>
<title>Einleitung</title>
<body>

<p>
Nun, da Ihr Kernel konfiguriert und kompiliert ist und die notwendigen
Systemkonfigurationsdateien richtig konfiguriert sind, ist es Zeit ein Programm
zu installieren, das Ihren Kernel lädt, wenn Sie Ihr System starten. Solch ein
Programm wird <e>Bootloader</e> genannt. Doch bevor Sie anfangen,
betrachten Sie Ihre Wahlmöglichkeiten...
</p>

<p>
Für Linux/PPC existieren verschiedene Bootloader. Es gibt <uri
link="#yaboot">yaboot</uri> (für NewWorld Apple und IBM Maschinen) und <uri
link="#bootx">BootX </uri> (für OldWorld Apple und IBM Maschinen). Der Pegasos
benötigt keinen Bootloader, aber wir haben den <uri 
link="#bootcreator">BootCreator</uri> für die Erstellung eines 
SmartFirmware Bootmenüs mit einbezogen.
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>Standard: Die Benutzung von yaboot</title>
<subsection>
<title>Einleitung</title>
<body>

<impo>
yaboot kann nur auf NewWorld Apple und IBM Systemen verwendet werden!
</impo>

<p>
Zuerst müssen Sie die <path>/dev</path> Nodes in Ihrer neuen Umgebung erstellen,
da diese während der Bootloader-Installation benötigt werden. Dies können Sie
erreichen, indem Sie das <path>/dev</path> Verzeichnis von der Installations-CD 
in die neue Umgebung hinein mappen.
</p>

<pre caption="Mounten des /dev-Dateisystems mit der bind Funktion">
# <i>exit </i> # this will exit the chroot
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>

<p>
Es gibt zwei Möglichkeiten yaboot für Ihr System zu konfigurieren. Sie können das
beiliegende <c>yabootconfig</c> verwenden, um yaboot automatisch zu
konfigurieren. Wenn Sie aus irgendeinem Grund nicht <c>yabootconfig</c> verwenden
wollen, um <path>/etc/yaboot.conf</path> automatisch zu erstellen oder Sie Gentoo
auf einem G5 installieren (auf dem <c>yabootconfig</c> nicht immer funktioniert),
editieren Sie einfach die schon installierte Beispieldatei auf Ihrem System.
</p>

<ul>
  <li><uri link="#yabootconfig">Standard: Benutzen von yabootconfig</uri></li>
  <li>
    <uri link="#manual_yaboot">Alternativ: yaboot manuell konfigurieren</uri>
  </li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig">
<title>Standard: Die Benutzung von yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> wird die Partitionen auf Ihrem System automatisch erkennen
und wird Dual- und Dreifachbootkombinationen mit Linux, Mac OS und Mac OS X
einrichten.
</p>

<p>
Um <c>yabootconfig</c> benutzen zu können, muss Ihr Laufwerk eine
Apple_Bootstrap Partition haben und <path>/etc/fstab</path> muss konfiguriert
mit Ihren Linux Partitionen sein. Beides sollte durch die vorangegangen Schritte
schon geschehen sein.  Stellen Sie sicher, dass Sie die neueste Version von
<c>yaboot</c> installiert haben.
</p>

<pre caption = "Installieren von Yaboot mit GRP">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Verlassen Sie nun die chroot Umgebung und führen <c>yabootconfig --chroot
/mnt/gentoo</c> aus. Das Programm wird ablaufen und den Pfad der Bootstrap
Partition bestätigen. Geben Sie <c>Y</c> ein, wenn dies korrekt ist. Falls
nicht, überprüfen Sie erneut <path>/etc/fstab</path>.  yabootconfig wird dann
Ihre Systemkonfiguration überprüfen, <path>/etc/yaboot.conf</path> erstellen und
<c>mkofboot</c> für Sie ausführen. <c>mkofboot</c> wird gebraucht, um die
Apple_Bootstrap Partition zu formatieren und dorthinein die yaboot
Konfigurationsdatei zu installieren. Betreten Sie hiernach wieder die chroot
Umgebung.
</p>

<pre caption="chroot Umgebung betreten">
# <i> chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Sie sollten den Inhalt von <path>/etc/yaboot.conf</path> überprüfen. Wenn Sie
Veränderungen an <path>/etc/yaboot.conf</path> vornehmen (wie die
Standard-/Boot-OS-Einstellung zu setzen) stellen Sie sicher, dass Sie
<c>ybin -v</c> erneut ausführen, um die Änderungen auf die Apple_Bootstrap
Partition zu schreiben.
</p>

<p>
Fahren Sie nun mit dem <uri link="#reboot">Rebooten des Systems</uri> fort.
</p>

</body>
</subsection>
<subsection id="manual_yaboot">
<title>Alternativ: Die manuelle yaboot Konfiguration</title>
<body>

<p>
Stellen Sie zuerst sicher, dass die neueste Version von <c>yaboot</c> auf Ihrem
System installiert ist:
</p>

<pre caption = "Installieren von yaBoot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Nachfolgend finden Sie eine vollständige <path>yaboot.conf</path> Datei. Ändern Sie
diese nach Belieben. G5 Nutzer sollten beachten, dass sie Serial ATA
Festplatten haben, die vom Linux Kernel als SCSI Laufwerke angesprochen werden
(ersetzen Sie <path>/dev/hda</path> mit <path>/dev/sda</path>).
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## Führen Sie: "man yaboot.conf" für Details aus. Machen Sie keine
## Änderungen bevor Sie das nicht getan haben!
## Siehe auch: /usr/share/doc/yaboot/examples für Beispielkonfigurationen
##
## Für ein Dualbootmenü fügen Sie eine oder mehrere dieser hinzu:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## unsere Bootstrap Partition:</comment>

boot=/dev/hda2

<comment>## ofboot ist der openfirmware Weg die bootstrap Partition anzugeben.
## Wenn diese nicht angegeben ist schlägt yaboot auf dem G5 und einigen G4 fehl (es 
## sei denn Sie geben dem mkofboot/ybin Programm die notwendigen Argumente mit).
## hd:X bedeutet /dev/sdaX (oder /dev/hdaX).
##
## G5 Benutzer sollten diese Zeile unkommentieren.

#ofboot=hd:2

##hd: ist OpenFirmwaresprache für hda</comment>
device=hd:

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Dieser Abschnitt kann doppelt verwendet werden, wenn Sie mehr als einen Kernel
## oder Satz von Bootoptionen haben. - ersetzen Sie 2.6.9 mit Ihrer Kernel
## Version.
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/hda3
  partition=3
  sysmap=/boot/System.map-2.6.9
  read-only
<comment>##################

## G5 und einige G4 Benutzer sollten
##   macos=hd:13
##   macosx=hd:12
## anstelle der Beispielwerte setzen.</comment>

macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Sobald <path>yaboot.conf</path> so eingerichtet ist, wie Sie es wünschen,
führen Sie <c>mkofboot -v</c> aus um die Einstellungen in der Bootstrap
Partition zu installieren. <e>Vergessen Sie dies nicht!</e> Bestätigen Sie,
wenn <c>mkofboot</c> Sie auffordert ein neues Dateisystem zu erstellen.
</p>


<p>
Wenn alles gut geht und Sie dieselben Optionen haben wie wir im obigen 
Beispiel, gibt Ihnen der nächste Neustart ein simples Bootmenü mit fünf 
Einträgen. Wenn Sie später Ihre yaboot Konfiguration erneuern, müssen 
Sie einfach <c>ybin -v</c> ausführen, um Ihre Bootstrap Partition auf den 
neuesten Stand zu bringen - <c>mkofboot</c> wird nur für die erstmalige 
Einrichtung benötigt.
</p>

<p>
Für weitere Informationen über yaboot werfen Sie einen Blick auf das<uri
link="http://penguinppc.org/bootloaders/yaboot">yaboot Projekt</uri>. Fahren
Sie nun mit dem <uri link="#reboot">Rebooten des Systems</uri> fort.
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>Alternativ: BootX</title>
<body>

<impo>
BootX kann nur auf OldWorld Apple Systemen verwendet werden!
</impo>

<p>
BootX setzt voraus, dass der Rechner neu gestartet wird.
</p>

<p>
Zuerst verlassen Sie die chroot-Umgebung und unmounten alle Festplatten.  Dann
geben Sie das magische Kommando ein, auf das Sie gewartet haben: <c>reboot</c>.
</p>

<pre caption="chroot-Umgebung verlassen, alle Partitionen unmounten und neu
  starten">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Bitte vergessen Sie nicht die bootbare CD zu entfernen.  Sonst wird wieder die
CD gebootet anstatt MacOS.
</p>

<p>
Sobald Ihre Maschine MacOS gebootet hat, öffnen Sie das BootX Control Panel.
Wählen Sie <c>Options</c> und deaktivieren Sie <c>Used specified RAM disk</c>.
Sobald Sie wieder im Hauptmenü von BootX sind, finden Sie eine Option, um die
Festplatte und Partition mit root auszuwählen.  Geben Sie die entsprechenden
Werte ein.
</p>

<p>
BootX kann konfiguriert werden, um Linux beim Booten zu starten. Wenn Sie dies
tun sehen Sie, wird der Computer in MacOS starten un dann während des Starts
BootX laden, was wiederum Linux startet. Auf der <uri
link="http://penguinppc.org/bootloaders/bootx">BootX Webseite</uri> finden Sie 
weitere Informationen.
</p>

<p>
Rebooten Sie nun wieder und fahren Sie mit <uri
link="?part=1&amp;chap=11">Abschließen der Gentoo Installation</uri> fort.
</p>

</body>
</section>
<section id="bootcreator">
<title>Alternative: BootCreator</title>
<body>

<impo>
BootCreator wird ein nettes SmartFirmware Bootmenü in Forth für den Pegasos
erstellen.
</impo>

<p>
Stellen Sie zunächst sicher, dass Sie die aktuelleste Version von 
<c>bootcreator</c> auf Ihrem System installiert haben:
</p>

<pre caption = "Installieren von bootcreator">
# <i>emerge --usepkg --update bootcreator</i>
</pre>

<p>
Kopieren Sie nun die Datei <path>/etc/bootmenu.example</path> in 
<path>/etc/bootmenu</path> und editieren Sie diese entsprechend Ihren 
Bedürfnissen:
</p>

<pre caption = "Editieren der bootcreator Konfigurationsdatei">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
Folgend finden Sie eine vervollständigte <path>/etc/bootmenu</path> 
Konfigurationsdatei. Verändern Sie diese nach Wunsch.
</p>

<pre caption = "bootcreator Konfigurationsdatei">
<comment>#
# Beispiels Erläuterungsdatei für bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux 2.6.10 (Normal)
ide:0 linux-2.6.10 video=radeonfb:1024x768@70 root=/dev/hda3

</pre>

<p>
Zuletzt muss das <path>bootmenu</path> nach Forth übersetzt und auf Ihre Boot 
Partition kopiert werden, damit die SmartFirmware es lesen kann. Deswegen 
müssen Sie <c>bootcreator</c> aufrufen:
</p>

<pre caption = "Installieren des Bootmenüs">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
Sie sollten auf alle Fälle einen Blick auf die Einstellungen von SmartFirmware 
werfen, wenn Sie neu starten. Vergewissern Sie sich, dass <path>menu</path> die 
Datei ist, welche standardmäßig geladen wird.
</note>

<p>
Fahren Sie nun fort mit der Installation mit <uri link="#reboot">Neustarten des
Systems</uri>.
</p>


</body>
</section>
<section id="reboot">
<title>Rebooten des Systems</title>
<subsection>
<body>

<p>
Verlassen Sie die chroot Umgebung und unmounten Sie alle gemounteten
Partitionen. Danach tippen Sie den magischen Befehl ein, auf den Sie solange
gewartet haben: <c>reboot</c>.
</p>

<pre caption="Unmounten aller Partitionen und Rebooten">
# <i>exit</i>
livecd ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo</i>
livecd ~# <i>reboot</i>
</pre>

<p>
Nachdem Sie in die neue Gentoo Installation gebootet haben schließen Sie die
Installation mit <uri link="?part=1&amp;chap=11">Abschließen der Gentoo
Installation</uri> ab.
</p>

</body>
</subsection>
</section>
</sections>
