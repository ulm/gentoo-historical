<?xml version="1.0" encoding="UTF-8"?>
<!-- English CVS Version: 1.40 -->
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/nvidia-guide.xml,v 1.22 2007/04/20 10:43:42 keytoaster Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/de/nvidia-guide.xml" lang="de">
<title>Gentoo Linux nVidia Guide</title>

<author title="Autor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Bearbeiter">
  <mail link="curtis119@gentoo.org">M Curtis Napier</mail>
</author>
<author title="Bearbeiter">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Bearbeiter">
  <mail link="wolf31o2@gentoo.org">Chris Gianelloni</mail>
</author>
<author title="Übersetzer">
  <mail link="tevers@onlinehome.de">Torsten Evers</mail>
</author>
<author title="Übersetzer">
  <mail link="gentoodoc@itsnotmy.name">Sebastian Westermayer</mail>
</author>
<author title="Übersetzer">
  <mail link="keytoaster@gentoo.org">Tobias Heinlein</mail>
</author>

<abstract>
Viele Gentoo-Nutzer haben einen nVidia-Chipsatz in ihrem System. NVidia bietet
spezielle Linuxtreiber um die Geschwindigkeit Ihrer Karte zu erhöhen. Dieser
Text informiert Sie, wie die Treiber zu installieren und zu konfigurieren sind.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.31</version>
<date>2007-04-15</date>

<chapter>
<title>Einführung</title>
<section>
<body>

<p>
Die nVidia-Treiber im Portage-Baum werden von nVidia veröffentlicht und werden
gegen den Linux-Kernel gebaut. Sie beinhalten einen binären Klumpen, welcher
den schweren Teil der Arbeit verrichtet - die Karte ansprechen. Die Treiber
bestehen aus zwei Teilen: ein Kernelmodul und ein X11-Treiber. Beide Teile
befinden sich in ein und demselben Paket. Aufgrund der Weise, in der nVidia
die Pakete gepackt hat, müssen Sie erst einige Entscheidungen treffen, bevor Sie
den Treiber installieren. Momentan gibt es zwei Treiberpakete im Portage-Baum.
Der erste, <c>nvidia-drivers</c>, ist der neueste von nVidia und beinhaltet
Unterstützung für die neuesten Karten. Der zweite, <c>nvidia-legacy-drivers</c>,
unterstützt ältere Karten, von der originalen TNT bis zur GeForce 6800.
Allerdings unterstützt dieser Treiber nicht die neuesten Funktionen der neueren
Karten. Sie sollten <c>nvidia-legacy-drivers</c> nur benutzen, falls Ihre Karte
nicht vom <c>nvidia-drivers</c>-Paket unterstützt wird.
</p>

<note>
Vor einiger Zeit hat Gentoo separate Ebuilds für das nVidia-Kernelmodul
(<c>nvidia-kernel</c>) und die X11 GLX Bibliotheken (<c>nvidia-glx</c>)
bereit gestellt. Diese Ebuilds wurden zugunsten von <c>nvidia-drivers</c> und
<c>nvidia-legacy-drivers</c> aus dem Portage-Baum entfernt. Wenn Sie
<c>nvidia-kernel</c> und <c>nvidia-glx</c> benutzen, dann sollten Sie zu den
neueren Paketen migrieren.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Treiber-Kompatibilität</title>
<section>
<title>nvidia-legacy-drivers</title>
<body>

<p>
Der <c>nvidia-legacy-drivers</c>-Zweig unterstützt ältere nVidia-Karten, welche
nicht länger von den neusten Treiber-Veröffentlichungen unterstützt werden.
Dieser Zweig basiert auf einer älteren Codebasis der nVidia-Treiber und
unterstützt die neuesten Kernel- und X.Org-Versionen. Sie Sollten diesen Treiber
benutzen, falls Sie eine Karte aus der TNT, TNT2, GeForce oder GeForce2 Serie
besitzen. Die Treiberkompatibilitätsinformationen können in Appendix A von
<uri>http://download.nvidia.com/XFree86/Linux-x86/1.0-7184/README/readme.txt
</uri> gefunden werden.
</p>

</body>
</section>
<section>
<title>nvidia-drivers</title>
<body>

<p>
Der <c>nvidia-drivers</c>-Zweig unterstützt die Funktionen der neueren
nVidia-Karten. Die neueste Version dieser Treiber hat die Unterstützung für
NV2x-basierte Karten fallen gelassen. Wenn Sie eine Karte aus der GeForce 3 oder
GeForce 4 Serie besitzen, sollten Sie
<c>>=x11-drivers/nvidia-drivers-1.0.9700</c> in Ihrer
<path>/etc/portage/package.mask</path>-Datei maskieren. Dies wird verhindern,
dass neuere Versionen des Treibers, welche inkompatibel mit Ihrer Karte sind,
installiert werden. Sie können die Treiberkompatibilität für Ihre Karte prüfen,
um festzustellen, ob sie von den neueren Treibern unterstützt wird, indem Sie
die Seite <uri>
http://us.download.nvidia.com/XFree86/Linux-x86/1.0-9746/README/appendix-a.html
</uri> besuchen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Konfigurieren Ihrer Karte</title>
<section>
<title>Kernelkonfiguration</title>
<body>

<p>
Wie oben erwähnt, installiert und läuft der nVidia-Kerneltreiber anhängig von
Ihrem aktuellen Kernel. Er wird als Modul erstellt, also macht es Sinn, dass Ihr
Kernel das Laden von Kernelmodulen unterstützt. Wenn Sie <c>genkernel all</c>
verwendet haben, um Ihren Kernel zu konfigurieren, ist dies bereits geschehen.
Wenn nicht, überprüfen Sie die Konfiguration Ihres Kernels noch einmal genau um
sicherzustellen, dass die Unterstützung dafür aktiviert ist:
</p>

<pre caption="Laden von Kernelmodulen erlauben">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
Sie müssen außerdem <e>Memory Type Range Register</e> in Ihrem Kernel
aktivieren:
</p>

<pre caption="MTRR aktivieren">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>

<p>
Wenn Sie eine AGP-Grafikkarte haben, können Sie außerdem noch optional
<c>agpgart</c> Unterstützung zu Ihrem Kernel hinzufügen, entweder einkompiliert
oder als Modul. Wenn Sie agpgart nicht im Kernel verwenden, dann werden die
Treiber ihre eigene <c>agpgart</c> Implementierung, genannt <c>NvAGP</c>
verwenden. Auf einigen Systemen ist die Leistung dieser besser als die des
agpgarts aus dem Kernel, und auf anderen ist die Leistung schlechter.
Sie werden dies selbst auf Ihrem eigenen System beurteilen müssen, um die beste
Leistung zu erzielen. Wenn Sie sich unsicher sind, was Sie tun sollen,
verwenden Sie das kernelinterne agpgart:
</p>

<pre caption="Aktivieren von agpgart">
Device Drivers ---&gt;
Character devices ---&gt;
&lt;*&gt; /dev/agpgart (AGP Support)
</pre>

<note>
Auf amd64 kontrolliert IOMMU die agpgart-Einstellung.
</note>

</body>
</section>
<section>
<title>Architektur-spezifische Bemerkungen</title>
<body>

<impo>
Bei x86 und AMD64 Prozessoren erzeugt der kernelinterne Treiber einen Konflikt
mit dem Binärtreiber von nVidia. Wollen Sie Ihren Kernel für diese CPUs
kompilieren, müssen Sie die kernelinterne Treiberunterstützung wie hier gezeigt
komplett entfernen:
</impo>

<pre caption="Den kernelintern Treiber entfernen">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt; &gt;   nVidia Framebuffer Support
&lt; &gt;   nVidia Riva support
</pre>

<p>
Eine gute Framebufferalternative ist <c>VESA</c>:
</p>

<pre caption="VESA-Unterstützung aktivieren">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt;*&gt;   VESA VGA graphics support
</pre>

<p>
Dann wählen Sie unter "VESA driver type" entweder <c>vesafb</c> oder
<c>vesafb-tng</c> aus. Wenn Sie einen AMD64-Prozessor benutzen, sollten Sie
eher <c>vesafb</c> als <c>vesafb-tng</c> wählen:
</p>

<pre caption="Framebuffertyp auswählen">
(X) vesafb
( ) vesafb-tng
</pre>

<p>
Wenn Sie <c>vesafb</c> benutzen, können Sie für weitere Informationen die
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> lesen oder Sie
schauen nach Ihrer Framebufferdokumentation unter
<path>/usr/src/linux/Documentation/fb/</path>.
</p>

</body>
</section>
<section>
<title>Weiter mit der Kernelkonfiguration</title>
<body>

<p>
Die <c>nvidia-drivers</c> und <c>nvidia-legacy-drivers</c> Ebuilds erkennen
automatisch Ihre Kernel-Version, basierend auf dem
<path>/usr/src/linux</path>-Symlink. Bitte stellen Sie sicher, dass dieser
Symlink auf die richtigen Quellen zeigt und dass Ihr Kernel richtig
konfiguriert ist. Bitte beziehen Sie sich auf den Abschnitt
Konfiguration des Kernels im <uri link="/doc/de/handbook/">Installations
Handbuch</uri> für Details zur Kernelkonfiguration.
</p>

<p>
Wenn Sie gentoo-sources-2.6.11-r6 benutzen, könnte Ihr <path>/usr/src</path>
Verzeichnis etwa so ähnlich aussehen:
</p>

<pre caption="Überprüfen Sie Ihren /usr/src/linux Symlink">
# <i>cd /usr/src</i>
# <i>ls -l</i>
<comment>(Überprüfen Sie ob linux auf das richtige Verzeichnis verweist)</comment>
lrwxrwxrwx   1 root root   22 Apr 23 18:33 linux -&gt; linux-2.6.11-gentoo-r6
drwxr-xr-x   4 root root  120 Apr  8 18:56 linux-2.4.26-gentoo-r4
drwxr-xr-x  18 root root  664 Dec 31 16:09 linux-2.6.10
drwxr-xr-x  18 root root  632 Mar  3 12:27 linux-2.6.11
drwxr-xr-x  19 root root 4096 Mar 16 22:00 linux-2.6.11-gentoo-r6
</pre>

<p>
In der Ausgabe oben sehen Sie, dass der <c>linux</c> Symlink auf den
<c>linux-2.6.11-gentoo-r6</c> Kernel verweist.
</p>

<p>
Wenn der Symlink nicht auf die richtigen Quellen verweist, müssen Sie den Link
wie folgt aktualisieren:
</p>

<pre caption="Erstellen/Aktualisieren des /usr/src/linux Symlink">
# <i>cd /usr/src</i>
# <i>ln -snf linux-2.6.11-gentoo-r6 linux</i>
</pre>

</body>
</section>
<section>
<title>Optional: Unterstützung für alte Karten überprüfen</title>
<body>

<note>
Unglücklicherweise werden bestimmte alte Videokarten nicht von den neueren
Versionen von <c>nvidia-drivers</c> unterstützt. nVidia
stellt eine <uri link="http://www.nvidia.com/object/IO_18897.html">Liste mit
unterstützten Karten</uri> zur Verfügung. Bitte gehen Sie diese Liste durch,
bevor Sie die Treiber installieren.
</note>

<p>
Das Folgende ist eine Liste mit <b>nicht unterstützten</b> alten Videokarten:
</p>

<pre caption="Nicht unterstützte Karten">
TNT
TNT2
TNT2 Pro
TNT2 Ultra
TNT2 Model 64 (M64)
TNT2 Model 64 (M64) Pro
Vanta
Vanta LT
GeForce 256
GeForce DDR
GeForce2 GTS
GeForce2 Pro
GeForce2 Ti
GeForce2 Ultra
GeForce2 MX Integrated graphics
Quadro
Quadro2 Pro
Quadro2 EX
</pre>

<p>
Wenn Ihre Karte in dieser Liste aufgelistet wird, müssen Sie das
<c>nvidia-legacy-drivers</c> Paekt installieren, um 3D-Support zu erhalten.
</p>

</body>
</section>
<section>
<title>Installation der richtigen Treiber</title>
<body>

<p>
Jetzt ist es an der Zeit die Treiber zu installieren.
</p>

<pre caption="Installieren der nVidia-Treiber">
<comment>(Wenn Sie eine Karte besitzen, die nicht in der obigen Liste aufgelistet ist)</comment>
# <i>emerge nvidia-drivers</i>
<comment>(Wenn Ihre Karte in der obigen Liste aufgelistet ist)</comment>
# <i>emerge nvidia-legacy-drivers</i>
</pre>

<impo>
Jedes mal wenn Sie <uri link="/doc/de/kernel-upgrade.xml">einen neuen Kernel
kompilieren</uri> oder den aktuellen neu kompilieren, werden Sie
<c>emerge nvidia-drivers</c> oder <c>emerge nvidia-legacy-drivers</c> ausführen
müssen, um die nVidia-Module neu zu installieren.
</impo>

<p>
Wenn die Installion beendet ist, führen Sie <c>modprobe nvidia</c> aus, um das
Kernelmodul in den Speicher zu laden. Falls dies ein Update ist, sollten Sie
die vorherige Modul erst entfernen.
</p>

<pre caption="Laden des Kernelmoduls">
# <i>lsmod | grep nvidia &amp;&amp; rmmod nvidia</i>
# <i>modprobe nvidia</i>
</pre>

<p>
Um zu verhindern, dass Sie das Modul bei jedem Systemstart manuell laden müssen,
möchten Sie vielleicht, dass dies automatisch beim Booten Ihres Systems
geschieht. Editieren Sie dazu <path>/etc/modules.autoload.d/kernel-2.6</path>
(oder <path>kernel-2.4</path> abhängig davon welche Kernelversion Sie benutzen)
und fügen Sie <c>nvidia</c> hinzu. Vergessen Sie nicht, danach
<c>update-modules</c> auszuführen.
</p>

<impo>
Wenn Sie <c>agpgart</c> als Modul kompiliert haben, werden Sie es zu
<path>/etc/modules.autoload.d/kernel-2.6</path> (oder <path>kernel-2.4</path>
abhängig von Ihrer Kernelversion) hinzufügen müssen.
</impo>

<pre caption="Ausführen von update-modules">
# <i>update-modules</i>
</pre>

</body>
</section>
<section>
<title>Den X-Server konfigurieren</title>
<body>

<p>
Wenn die passenden Treiber einmal installiert sind, müssen Sie Ihren X-Server
konfigurieren, damit er den <c>nvidia</c> Treiber, anstatt des Standard
<c>nv</c> Treibers, verwendet.
</p>

<p>
Öffnen Sie <path>/etc/X11/xorg.conf</path> mit Ihrem Lieblingseditor
(wie <c>nano</c> oder <c>vim</c>) und gehen Sie zum <c>Device</c> Abschnitt.
In diesem Abschnitt ändern Sie die <c>Driver</c> Zeile:
</p>

<pre caption="Ändern von nv zu nvidia in der X-Server Konfiguration">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
Dann gehen Sie zum <c>Module</c> Abschnitt und stellen sicher, dass das
<c>glx</c> Modul geladen wird, während das <c>dri</c> Modul nicht geladen wird:
</p>

<pre caption="Aktualisieren des Modul Abschnitts">
Section "Module"
  <comment>(...)</comment>
  <i># Load  "dri"
  Load  "glx"</i>
  <comment>(...)</comment>
EndSection
</pre>

<p>
Stellen Sie danach sicher, dass im Abschnitt <c>Screen</c> die
<c>DefaultDepth</c> Einstellung auf 16 oder 24 gesetzt ist, oder dass Sie nur
<c>Display</c> Unterabschnitte haben, dessen <c>Depth</c> auf 16 oder 24
gesetzt ist. Ohne dies werden die nVidia GLX Erweiterungen nicht starten.
</p>

<pre caption="Aktualisieren des Screen Abschnitts">
  Section "Screen"
  <comment>(...)</comment>
  <i>DefaultDepth 16</i>
  Subsection "Display"
  <comment>(...)</comment>
  EndSection
</pre>

<p>
Führen Sie <c>eselect</c> aus, damit der X-Server die GLX-Bibliotheken
von nVidia verwendet:
</p>

<pre caption="Ausführen von eselect">
# <i>eselect opengl set nvidia</i>
</pre>

</body>
</section>
<section>
<title>Hinzufügen von Benutzern zur video Gruppe</title>
<body>

<p>
Sie müssen Ihren Benutzer zur <c>video</c> Gruppe hinzufügen, damit er Zugriff
auf die nVidia-Gerätedateien hat:
</p>

<pre caption="Hinzufügen Ihres Benutzers zur video Gruppe">
# <i>gpasswd -a Ihr_User video</i>
</pre>

<p>
Es mag nicht absolut notwendig sein, wenn Sie kein <c>udev</c> verwenden aber
es kann auch nicht schaden und macht Ihr System zukunftssicher.
</p>

</body>
</section>
<section>
<title>Testen Ihrer Karte</title>
<body>

<p>
Um Ihre nvidia Karte zu testen, starten Sie X und führen <c>glxinfo</c>, welches
Teil des <c>mesa-progs</c> Pakets ist, aus. Es sollte ausgeben, dass
Direct Rendering aktiviert ist:
</p>

<pre caption="Testen des Status von direct rendering">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
Um Ihre FPS anzuzeigen, führen Sie <c>glxgears</c> aus.
</p>

</body>
</section>
<section>
<title>NVidia-Unterstützung aktivieren</title>
<body>

<p>
Einige Tools, wie <c>mplayer</c> und <c>xine-lib</c>, verwenden ein lokales
USE-Flag, das "nvidia" heißt. Es aktiviert die Unterstützung für XvMCNVIDIA,
hilfreich beim Abspielen von hochaufgelösten Videos. Fügen Sie "nvidia" zu
Ihrer USE-Variable in <path>/etc/make.conf</path> hinzu oder als USE-Flag zu
<c>media-video/mplayer</c> und/oder <c>media-libs/xine-lib</c> in
<path>/etc/portage/package.use</path> hinzu.
</p>

<p>
Dann führen Sie <c>emerge -uD --newuse world</c> aus, um die Anwendungen neu zu
bauen, die von der Änderung des USE-Flags profitieren würden.
</p>

</body>
</section>
<section>
<title>Das NVidia Settings Tool verwenden</title>
<body>

<p>
Seit nVidia Version 1.0.6106 herausbrachte, wird auch ein Tool für
Einstellungen mitgeliefert. Dieses Tool erlaubt es Ihnen Grafikeinstellungen
zu ändern, ohne den X Server neu zu starten und ist durch
<c>media-video/nvidia-settings</c> in Portage verfügbar.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Fehlerbehebung</title>
<section>
<title>2D auf Maschinen mit 4GB Speicher oder mehr zum Laufen bekommen</title>
<body>

<p>
Wenn Sie Probleme mit der nVidia Beschleunigung von 2D-Anwendungen haben, ist es
wahrscheinlich, dass Sie nicht in der Lage sind, einen Bereich für
write-combining mittels MTRR einzurichten. Um das zu überprüfen, sehen Sie
sich den Inhalt von <path>/proc/mtrr</path> an:
</p>

<pre caption="Überprüfen, ob write-combining aktiviert ist">
# <i>cat /proc/mtrr</i>
</pre>

<p>
Jede Zeile sollte "write-back" oder "write-combining" enthalten. Wenn Sie eine
Zeile  mit "unreachable" darin sehen, müssen Sie eine Einstellung im BIOS
ändern, um das zu beheben.
</p>

<p>
Booten Sie neu und gehen Sie ins BIOS. Suchen Sie dann die MTRR-Einstellungen
(evtl. unter "CPU Settings"). Ändern Sie diese Einstellung von "continuous" zu
"discrete" und booten Sie wieder Linux. Sie werden nun keine "uncachable"
Einträge mehr finden und die 2D Beschleunigung sollte ohne Probleme
funktionieren.
</p>

</body>
</section>
<section>
<title>
Wenn ich versuche das Kernelmodul zu laden, erhalte ich ein "no such device"
</title>
<body>

<p>
Dies tritt normalerweise auf, wenn Sie keine passende Grafikkarte haben.
Stellen Sie sicher, dass Sie eine nVidia-basierte Grafikkarte haben. Sie können
dies mit <c>lspci</c> überprüfen.
</p>

<p>
Wenn Sie sicher sind, dass Sie eine nVidia-Karte besitzen, sollten Sie Ihr
BIOS überprüfen und schauen ob die Anweisung <e>Assign IRQ to VGA</e> gesetzt
ist.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Expertenkonfiguration</title>
<section>
<title>Dokumentation</title>
<body>

<p>
Das nVidia Treiberpaket kommt auch mit einer umfassenden Dokumentation. Diese
ist unter <c>/usr/share/doc</c> installiert und kann mit folgendem Befehl
betrachtet werden:
</p>

<pre caption="Betrachten der nVidia Dokumentation">
<comment>(für nvidia-drivers)</comment>
$ <i>less /usr/share/doc/nvidia-drivers-*/REAMDE.gz</i>
<comment>(für nvidia-legacy-drivers)</comment>
$ <i>less /usr/share/doc/nvidia-legacy-drivers-*/REAMDE.gz</i>
</pre>

</body>
</section>
<section>
<title>Kernelmodul Parameter</title>
<body>

<p>
Das <c>nvidia</c> Kernelmodul akzeptiert eine Reihe von Parametern (Optionen)
die Sie nutzen können um das Verhalten des Treibers zu optimieren. Die meisten
sind in der Dokumentation aufgeführt. Um die Werte dieser Parameter hinzuzufügen
oder zu verändern bearbeiten Sie die Datei <c>/etc/modules.d/nvidia</c>.
Vergessen Sie nicht <c>update-modules</c> nach Veränderungen an dieser Datei
auszuführen und bedenken Sie, dass Sie das <c>nvidia</c> Modul neu laden müssen
bevor die neuen Einstellungen Wirkung zeigen.
</p>

<pre caption="Einstellen der nVidia Optionen">
<comment>(Bearbeiten Sie /etc/modules.d/nvidia in Ihrem Lieblingseditor)</comment>
# <i>nano -w /etc/modules.d/nvidia</i>
<comment>(Aktualisierung der Modul-Informationen)</comment>
# <i>update-modules</i>
<comment>(Entladen des nvidia Moduls...)</comment>
# <i>modprobe -r nvidia</i>
<comment>(...und es wieder laden)</comment>
# <i>modprobe nvidia</i>
</pre>

</body>
</section>
<section>
<title>Erweiterte X Konfiguration</title>
<body>

<p>
Der GLX Layer hat eine Fülle von Optionen die konfiguriert werden können. Diese
kontrollieren die Einstellungen des TV Ausgang, Dual Display, Monitor Frequenz
Erkennung, usw. Wie erwähnt, alle verfügbaren Optionen sind detailiert in der
Dokumentation.
</p>

<p>
Wenn Sie wünschen eine dieser Optionen zu nutzen, müssen Sie sie in dem
entsprechenden Device Abschnitt Ihrer X Konfigurationsdatei eintragen
(normalerweise <c>/etc/X11/xorg.conf</c>). Zum Beispiel, angenommen man möchte
das Splash Logo deaktivieren:
</p>

<pre caption="Erweiterte nVidia Konfiguration in der X Konfiguration">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  <i>Option     "NoLogo" "true"</i>
  VideoRam   65536
EndSection
</pre>

</body>
</section>
</chapter>

</guide>
