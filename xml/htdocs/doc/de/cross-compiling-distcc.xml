<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/cross-compiling-distcc.xml,v 1.1 2008/11/12 15:44:24 keytoaster Exp $ -->

<guide link="/doc/de/cross-compiling-distcc.xml" lang="de">
<title>DistCC Cross-Compiling Leitfaden</title>

<author title="Autor">
  <mail link="agaffney@gentoo.org">Andrew Gaffney</mail>
</author>
<author title="Bearbeiter">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Übersetzer">
  <mail link="micm@micm.eu">Michael Münch</mail>
</author>

<abstract>
Diese Anleitung zeigt Ihnen, wie Sie distcc für Cross-Compiling zwischen
verschiedenen Prozessorarchitekturen einrichten.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.3</version>
<date>2006-02-17</date>

<chapter>
<title>Cross-Compiling mit distcc</title>
<section>
<title>Einleitung</title>
<body>

<p>
<c>Distcc</c> ist ein Werkzeug, mit dem Sie die Last der Software-Kompilierung
über mehrere vernetzte Rechner verteilen können. Solange die vernetzten Rechner
alle die gleiche Toolchain für die gleiche Prozessorarchitektur benutzen,
benötigen Sie keine spezielle Konfiguration des <c>distcc</c>. Aber was machen
Sie, wenn Sie für eine abweichende Architektur auf verschiedenen Computern
kompilieren möchten? Diese Anleitung wird Ihnen zeigen, wie Sie <c>distcc</c>
konfigurieren müssen, um für unterschiedliche Architekturen zu kompilieren.
</p>

</body>
</section>
<section>
<title>Emergen der notwendigen Werkzeuge</title>
<body>

<p>
Als erstes müssen Sie <c>crossdev</c> auf allen Rechnern, die im
Kompilierungsprozess eingebunden werden sollen, emergen. <c>Crossdev</c> ist ein
Werkzeug, das das Erstellen von architekturübergreifenden Toolchains
vereinfacht. Es wurde ursprünglich von <mail link="kumba@gentoo.org">Joshua
Kinard</mail> geschrieben und dann von <mail link="vapier@gentoo.org">Mike
Frysinger</mail> von Grund auf neu entwickelt. Seine Benutzung ist
unkompliziert: <c>crossdev -t sparc</c> erstellt eine vollständig auf die
Sparc-Architektur abzielende Cross-Toolchain. Diese beinhaltet binutils, gcc,
glibc und linux-headers. Wenn Sie weitere Hilfe benötigen, versuchen Sie
<c>crossdev --help</c> auszuführen. Selbstverständlich benötigen Sie die
passende Cross-Toolchain auf allen Hilfsrechnern.
</p>

<p>
Als nächstes müssen Sie <c>distcc</c> auf allen Rechnern, die an dem Prozess
beteiligt sein werden, emergen. Das beinhaltet den Rechner, der emerge ausführt,
sowie die Rechner mit den Cross-Compilern. Bitte lesen Sie die <uri
link="/doc/de/distcc.xml">Gentoo Distcc Dokumentation</uri> für weitere
Informationen bezüglich Einrichtung und Benutzung von <c>distcc</c>.
</p>

</body>
</section>
<section>
<title>Architektur-spezifische Anmerkungen</title>
<body>

<p>
Wenn Sie zwischen verschiedenen Subarchitekturen für Intel x86 (z.B. i586 und
i686) cross-kompilieren, müssen Sie trotzdem eine vollständige Cross-Toolchain
für den gewünschten CHOST erstellen, ansonsten wird die Kompilierung
fehlschlagen. Das liegt daran, dass i586 und i686 genau genommen verschiedene
CHOSTs sind, abgesehen von der Tatsache, dass beide als "x86" wahrgenommen
werden. Behalten Sie das bitte im Hinterkopf, wenn Sie Ihre Cross-Toolchains
erstellen. Zum Beispiel, wenn der Zielrechner ein i586 ist, heißt das, dass Sie
i586 Cross-Toolchains auf Ihren i686 Hilfsrechnern erstellen müssen.
</p>

</body>
</section>
<section>
<title>Konfiguration von distcc um fehlerfrei Cross-Compiling zu nutzen</title>
<body>

<p>
In der Standardeinstellung von distcc wird Cross-Compiling <e>nicht</e>
ordnungsgemäß funktionieren. Das Problem ist, dass viele Builds einfach
<c>gcc</c> aufrufen, anstatt des vollständigen Compilernamens (z.B.
<c>sparc-unknown-linux-gnu-gcc</c>). Wenn dieser Kompilierungsvorgang dann auf
die distcc Hilfsrechner verteilt wird, wird der systemeigene Compiler
aufgerufen, anstelle Ihres brandneuen Cross-Compilers.
</p>

<p>
Glücklicherweise gibt es eine Lösung für dieses kleine Problem. Sie benötigen
nur ein Wrapper-Skript und ein paar Symlinks auf dem Rechner, der <c>emerge</c>
ausführen wird. Ich werde meinen Sparc-Rechner als Beispiel nehmen. Wo auch
immer Sie jetzt <c>sparc-unknown-linux-gnu</c> sehen, müssen Sie Ihren eigenen
CHOST (zum Beispiel <c>x86_64-pc-linux-gnu</c> für einen AMD64-Rechner)
einfügen. Nachdem Sie vorhin distcc emerged haben, sieht das Verzeichnis
<path>/usr/lib/distcc/bin</path> wie folgt aus:
</p>

<note>
Die folgenden Anweisungen dürfen nur auf dem Rechner ausgeführt werden, der den
emerge-Prozess ausführt. Führen Sie diese Schritte nicht auf den Hilfsrechnern
aus.
</note>

<pre caption="Verfügbare Compiler">
# <i>cd /usr/lib/distcc/bin</i>
# <i>ls -l</i>
total 0
lrwxrwxrwx  1 root root 15 Dec 23 20:13 c++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 cc -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 g++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 gcc -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 sparc-unknown-linux-gnu-c++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 sparc-unknown-linux-gnu-g++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 sparc-unknown-linux-gnu-gcc -&gt; /usr/bin/distcc
</pre>

<p>
Dies sollten Sie nun ausführen:
</p>

<pre caption="Modifizierung des distcc">
# <i>rm c++ g++ gcc cc</i>
</pre>

<p>
Als nächstes werden wir das neue Skript auf dem Rechner erstellen. Starten Sie
Ihren Lieblingseditor und erstellen Sie eine Datei mit dem folgenden Text, dann
speichern Sie sie als <path>sparc-unknown-linux-gnu-wrapper</path> ab.
Denken Sie daran, den CHOST (in diesem Fall <c>sparc-unknown-linux-gnu</c>) auf
den korrekten CHOST des Rechners, der emerge ausführen wird, zu ändern.
</p>

<pre caption="Das neue Wrapper-Skript">
#!/bin/bash
exec /usr/lib/distcc/bin/sparc-unknown-linux-gnu-g${0:$[-2]} "$@"
</pre>

<p>
Als nächstes werden wir das Skript ausführbar machen und die korrekten Symlinks
erstellen.
</p>

<pre caption="Erstellen der Symlinks">
# <i>chmod a+x sparc-unknown-linux-gnu-wrapper</i>
# <i>ln -s sparc-unknown-linux-gnu-wrapper cc</i>
# <i>ln -s sparc-unknown-linux-gnu-wrapper gcc</i>
# <i>ln -s sparc-unknown-linux-gnu-wrapper g++</i>
# <i>ln -s sparc-unknown-linux-gnu-wrapper c++</i>
</pre>

<p>
Wenn Sie das erledigt haben, sollte <path>/usr/lib/distcc/bin</path>
folgendermaßen aussehen:
</p>

<pre caption="Ein korrekter Satz von Compilern">
# <i>ls -l</i>
total 4
lrwxrwxrwx  1 root root 25 Jan 18 14:20 c++ -&gt; sparc-unknown-linux-gnu-wrapper
lrwxrwxrwx  1 root root 25 Jan 18 14:20 cc -&gt; sparc-unknown-linux-gnu-wrapper
lrwxrwxrwx  1 root root 25 Jan 18 14:20 g++ -&gt; sparc-unknown-linux-gnu-wrapper
lrwxrwxrwx  1 root root 25 Jan 18 14:20 gcc -&gt; sparc-unknown-linux-gnu-wrapper
lrwxrwxrwx  1 root root 15 Nov 21 10:42 sparc-unknown-linux-gnu-c++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Nov 21 10:42 sparc-unknown-linux-gnu-g++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Jul 27 10:52 sparc-unknown-linux-gnu-gcc -&gt; /usr/bin/distcc
-rwxr-xr-x  1 root root 70 Jan 18 14:20 sparc-unknown-linux-gnu-wrapper
</pre>

<p>
Herzlichen Glückwunsch, Sie haben jetzt eine (hoffentlich) lauffähige
cross-distcc-Umgebung.
</p>

</body>
</section>
<section>
<title>Funktionsweise</title>
<body>

<p>
Wenn <c>distcc</c> aufgerufen wird, prüft es als was es aufgerufen wurde (z.B.
<c>i686-pc-linux-gnu-gcc</c>, <c>sparc-unknown-linux-gnu-g++</c>, usw). Wenn
distcc dann den Kompilierungsvorgang auf einen Hilfsrechner verteilt, liefert
es den Namen, mit dem es aufgerufen wurde, mit. Der distcc-Dämon auf dem
Hilfsrechner sucht dann nach einer Binärdatei mit diesem Namen. Wenn er nur
<c>gcc</c> sieht, sucht es nach <c>gcc</c>, welches wahrscheinlich der native
Compiler auf dem Hilfsrechner ist, wenn nicht die gleiche Architektur, wie auf
dem Rechner der <c>emerge</c> ausführt, verwendet wird. Wenn der
<e>vollständige</e> Name des Compilers mitgeschickt wurde (z.B.
<c>sparc-unknown-linux-gnu-gcc</c>), gibt es keine Verwirrung.
</p>

</body>
</section>
</chapter>
</guide>
