<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/home-router-howto.xml,v 1.21 2012/02/12 21:05:24 keytoaster Exp $ -->

<!-- English CVS Version: 1.65 -->

<guide lang="de">
<title>Home Router Guide</title>

<author title="Autor">
  <mail link="vapier@gentoo.org">Mike Frysinger</mail>
</author>
<author title="Übersetzer">
  <!-- <mail link="rk@oppono.de">Robert Körner</mail> -->
  Robert Körner
</author>
<author title="Übersetzer">
  <mail link="jens.gruentjes@freenet.de">Jens Grüntjes</mail>
</author>

<abstract>
Dieses Dokument erklärt, wie man eine alte Gentoo-Maschine in einen Router
verwandelt, um das eigene Heimnetzwerk mit dem Internet zu verbinden.
</abstract>

<!-- The content of this document is released into the public domain -->
<license/>

<version>2</version>
<date>2011-10-30</date>

<chapter>
<title>Einleitung</title>
<section>
<body>

<p>
Einen eigenen Router aus alten Ersatzteilen zu bauen, hat viele Vorteile
gegenüber dem Kauf einer vorgefertigten Lösung von z.B. Linksys. Der weitaus
größte ist die Kontrolle über die Verbindung. Alle anderen bleiben der
eigenen Vorstellungskraft überlassen; beinahe alles kann in diesem Szenario
getan werden, die Frage ist nur, ob man es braucht.
</p>

<p>
In dieser Anleitung wird erklärt, wie man auf dem Router NAT (Network Address
Translation) installiert (Kernel und iptables), wie gebräuchliche Dienste
hinzugefügt und konfiguriert werden (Domain Name System (DNS) mit dnsmasq, dhcp
mit dhcpcd, ADSL über ppp) und schließt mit ausgefeilteren und teilweise
lustigen Dingen, die gemacht werden können (Portweiterleitung, traffic shaping,
Proxies/Caching, usw.).
</p>

<p>
Bevor es los geht, müssen ein paar Mindestanforderungen erfüllt sein.
Zuerst brauchen Sie einen Computer, in dem mindestens zwei Netzwerkkarten
eingebaut sind. Als nächstes werden die Einwahl- und Konfigurationsdaten
für die jeweilige Internetverbindung benötigt (dazu gehören Dinge wie
IP/DNS/Gateway/Benutzername/Passwort). Abschließend sind ein bisschen Freizeit
und eine Schwäche für Gentoo nötig.
</p>

<p>
Die in dieser Anleitung gebrauchten Abkürzungen/Konventionen sind:
</p>

<ul>
  <li>
    eth0 - NIC (Network Interface Card) verbunden mit dem lokalen
    Netzwerk (LAN)
  </li>
  <li>eth1 - NIC verbunden mit dem Internet (WAN)</li>
  <li>Das LAN benutzt das private 192.168.0.xxx Netzwerk</li>
  <li>Der Router ist fest auf die IP 192.168.0.1 konfiguriert</li>
  <li>
    Der Router läuft unter Linux 2.4 oder 2.6; mit 2.0/2.2 sind Sie auf
    sich gestellt
  </li>
</ul>

<impo>
Zur Sicherheit empfehle ich, alle ungenutzten Dienste auf dem Router zu
stoppen, bevor die Firewall konfiguriert ist und läuft. Um die aktuell
laufenden Dienste anzuzeigen, tippen Sie <c>rc-status</c> in ein
Konsolenfenster.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Kernel-Konfiguration (kenne dich selbst zuerst)</title>
<section>
<body>

<p>
Ihr Kernel muss über Treiber für beide NICs verfügen und diese auch verwenden.
Um festzustellen, ob die Karten bereits fertig konfiguriert sind, starten Sie
<c>ifconfig</c>. Die Ausgabe bei Ihnen mag leicht vom Folgenden abweichen, das
ist in Ordnung. Wichtig ist, dass die Karten überhaupt angezeigt werden.
</p>

<pre caption="Testen der NICs">
# <i>ifconfig -a</i>
eth0      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B8
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:11 Base address:0x9800

eth1      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B9
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:10 Base address:0x9400
</pre>

<p>
Wenn Sie Ihre beiden Karten nicht angezeigt bekommen und Sie nicht sicher sind,
welche Art von Karte Sie haben, versuchen Sie es mit
<c>lspci | grep Ethernet</c>. Dieses Tool bekommen Sie durch
<c>emerge pciutils</c>. Sowie Sie diese Information haben, sollten Sie in Ihren
Kernel gehen und Unterstützung für den passenden Treiber hinzufügen.
</p>

<p>
Als nächstes brauchen Sie Unterstützung für iptables und NAT (und, wenn
gewünscht, Packet-Shaping). Die nachfolgende Liste ist unterteilt in unbedingt
benötigte (*), nur für adsl via PPPoE benötigte (a), für jeden Nutzer
empfohlene (x) und nur zum Shaping (s) benötigte Fähigkeiten. Es macht keinen
Unterschied, ob diese Eigenschaften fest in den Kernel oder als Modul
kompiliert werden, solange zur richtigen Zeit die notwendigen Module geladen
werden (das Laden von Modulen sei jedoch dem Leser als nette Übung überlassen).
</p>

<pre caption="Netzwerkoptionen">
Networking options  ---&gt;
   [*] TCP/IP networking
      [*] IP: advanced router
   [*] Network packet filtering (replaces ipchains)
<comment>Wenn Sie 2.4.x benutzen, müssen Sie folgendes für DHCP aktivieren:</comment>
   [*] Socket Filtering

   IP: Netfilter Configuration  ---&gt;
      [*] Connection tracking (required for masq/NAT)
         [x] FTP protocol support
         [x] IRC protocol support
      [*] IP tables support (required for filtering/masq/NAT)
         [*] IP range match support
         [x] MAC address match support
         [*] Multiple port match support
         [*] Packet filtering
            [*] REJECT target support
            [x] REDIRECT target support
         [*] Full NAT
            [*] MASQUERADE target support
         [s] Packet mangling
            [s] MARK target support
         [x] LOG target support

   QoS and/or fair queueing  ---&gt;
      [s] QoS and/or fair queueing
         [s] HTB packet scheduler
         [s] Ingress Qdisc

   [a] PPP (point-to-point protocol) support
      [a] PPP filtering
      [a] PPP support for async serial ports
      [a] PPP support for sync tty ports
      [a] PPP Deflate compression
      [a] PPP BSD-Compress compression
      [a] PPP over Ethernet
</pre>

<note>
Manches in einem 2.6er Kernel mag sich leicht von einem 2.4er unterscheiden,
allerdings sollte es Ihnen möglich sein, die Unterschiede herauszufinden :).
Sogar innerhalb der 2.6er Kernel haben diese Optionen die Tendenz, ihren
Platz zu verändern. Viel Glück!
</note>

</body>
</section>
</chapter>

<chapter>
<title>Umarmen Sie das WAN (alias Internet)</title>

<section>
<title>Einführung</title>
<body>

<p>
Es gibt viele Wege, sich ins Internet zu verbinden. Daher decke ich hier
lediglich die ab, mit denen ich mich auskenne, und zwar ADSL (PPPoE) und
Kabelmodems (statisch/dynamisch). Wenn es andere Methoden gibt, fühlen Sie sich
ermuntert, eine kleine Anleitung zu schreiben und Sie mir via E-Mail zukommen
zu lassen. Nicht auf Ihre Umgebung zutreffende Abschnitte in diesem Kapitel
können Sie selbstverständlich überspringen. Dieses Kapitel behandelt lediglich
die Verbindung des Routers mit dem Internet über eth1.
</p>

</body>
</section>
<section>
<title>ADSL und PPPoE</title>
<body>

<p>
Die gesamte Software, die bislang von rp-pppoe
(<uri link="http://www.roaringpenguin.com/">Roaring Penguin</uri>)
bereitgestellt wurde, ist jetzt in das <uri link="http://samba.org/ppp/">
Standard-PPP-Paket</uri> integriert worden. Mit einem einfachen
<c>emerge ppp</c> sind Sie auf dem richtigen Weg. Erinnern Sie sich, wie ich
sagte, dass Sie einen Benutzernamen und ein Passwort brauchen? Nun, ich
habe nicht gelogen, daher hoffe ich, dass Sie beides jetzt vorliegen haben!
Öffnen Sie <path>/etc/conf.d/net</path> in Ihrem bevorzugten Editor und
konfigurieren Sie die Datei.
</p>

<note>
Damit die folgenden Netzwerkeinstellungen funktionieren, müssen Sie
baselayout-1.12.9 oder neuer auf Ihrem System installiert haben.
</note>

<pre caption="Konfiguration von eth1">
<comment>(Ersetzen Sie 'vla9h924' mit Ihrem Benutzernamen und 'boogie' mit Ihrem Passwort)</comment>

# <i>nano /etc/conf.d/net</i>
<comment>Sagen Sie baselayout, dass es adsl über eth1 für ppp0 verwenden soll:</comment>
config_ppp0=( "ppp" )
link_ppp0="eth1"
plugins_ppp0=( "pppoe" )
pppd_ppp0=(
        "defaultroute"
        "usepeerdns"
        <comment>Es mag noch andere Einstellungen geben, die Sie setzen möchten, siehe hierzu /usr/share/doc/openrc-*/net.example.bz2</comment>
)
username_ppp0="vla9h924"
password_ppp0="boogie"

# <i>ln -s net.lo /etc/init.d/net.ppp0</i>
# <i>rc-update add net.ppp0 default</i>
# <i>/etc/init.d/net.ppp0 start</i>
</pre>

<warn>
Wenn das DSL-Interface gestartet wird, erstellt es ppp0. Obwohl Ihre NIC eth1
genannt wird, ist die IP tatsächlich an ppp0 gebunden. Wenn Sie von jetzt an
ein Beispiel sehen, das 'eth1' nutzt, ersetzen Sie es gedanklich durch 'ppp0'.
</warn>

<warn>
Stellen Sie sicher, dass die Berechtigungen der Datei /etc/conf.d/net so
gesetzt sind, dass sie nur von root gelesen bzw. geschrieben werden kann,
weil Sie Ihren Benutzernamen und Ihr Passwort dort abgelegt haben.
</warn>

<warn>
Allen, die vom <c>rp-pppoe</c>-Paket wechseln oder kuriose Verbindungsabbrüche
erleben, sei der Abschnitt bezüglich MTU im Kapitel Problembehebung ans Herz
gelegt.
</warn>

</body>
</section>

<section>
<title>Kabel und/oder dynamische/statische IP</title>
<body>

<p>
Wenn Sie eine statische IP nutzen, brauchen Sie ein paar Details mehr als bei
einer dynamischen. Für Nutzer von statischen IPs werden sowohl die eigene IP
als auch die des Gateways und die DNS-Server benötigt.
</p>

<pre caption="Konfiguration von eth1">
<comment>Für Benutzer dynamischer IPs:</comment>
# <i>emerge dhcpcd</i>
# <i>nano /etc/conf.d/net</i>
<comment>Sie brauchen einen Eintrag wie den folgenden:</comment>
config_eth1=( "dhcp" )

<comment>Für Benutzer statischer IPs:</comment>
# <i>nano /etc/conf.d/net</i>
<comment>Sie brauchen Einträge wie die folgenden:</comment>
config_eth1=( "66.92.78.102 broadcast 66.92.78.255 netmask 255.255.255.0" )
routes_eth1=( "default gw 66.92.78.1" )
# <i>nano /etc/resolv.conf</i>
<comment>Einen DNS-Server pro Zeile:</comment>
nameserver 123.123.123.123

<comment>Sowohl für statische als auch dynamische Setups:</comment>
# <i>ln -s net.lo /etc/init.d/net.eth1</i>
# <i>rc-update add net.eth1 default</i>
# <i>/etc/init.d/net.eth1 start</i>
</pre>

<p>
Jetzt sollte alles bereit sein, damit Sie sich ins Internet verbinden können.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Umarmen Sie das LAN (bringen Sie ein paar Freunde mit)</title>
<section>
<body>

<p>
Dieser Schritt ist ein Kinderspiel im Vergleich zum vorherigen.
</p>

<pre caption="Konfiguration von eth0">
# <i>nano /etc/conf.d/net</i>
<comment>Fügen Sie eine Zeile wie die folgende hinzu:</comment>
config_eth0=( "192.168.0.1 broadcast 192.168.0.255 netmask 255.255.255.0" )
# <i>rc-update add net.eth0 default</i>
# <i>/etc/init.d/net.eth0 start</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>LAN Dienste (denn wir sind freundliche Menschen)</title>

<section>
<title>DHCP-Server</title>
<body>

<p>
Ich wette, es wäre schön, wenn alle anderen in Ihrem Haus lediglich ihre
Computer ans Netzwerk anschließen müssten und alles einfach liefe. Nicht nötig,
sich komplizierte Details zu merken oder sie vor verwirrende
Konfigurationsbildschirme zu setzen! Das Leben wäre großartig, hm? Es folgt
eine Einführung in das <e>Dynamic Host Configuration Protocol</e> (DHCP)
und warum Sie es interessieren sollte.
</p>

<p>
DHCP ist genau das, was sein Name vermuten lässt. Es ist ein Protokoll, mit dem
man andere Computer dynamisch und automatisch konfigurieren kann. Sie starten
einen DHCP-Server auf dem Router, geben ihm alle notwendigen Informationen über
Ihr Netzwerk (erlaubte IPs, DNS-Server, Gateways, usw.), und wenn die anderen
Computer hochfahren, starten diese einen DHCP-Client, der sie automatisch
konfiguriert. Kein Brimborium, kein Durcheinander! Um mehr über DHCP zu
erfahren, können Sie bei <uri
link="http://de.wikipedia.org/wiki/DHCP">Wikipedia</uri> vorbeischauen.
</p>

<p>
Wir benutzen ein Paket namens dnsmasq, das uns sowohl mit DHCP- als auch
DNS-Diensten versorgt. Fürs Erste beschäftigen wir uns aber nur mit DHCP.
Beachten Sie, dass Sie im Kapitel Spielereien ein weiteres Beispiel
finden, falls Sie einen anderen DHCP-Server verwenden wollen. Wenn Sie ein
wenig an den Einstellungen des DHCP-Servers basteln möchten, lesen Sie die
Kommentare in <path>/etc/dnsmaq.conf</path>. Eigentlich sollten aber die
Standardeinstellungen prima funktionieren.
</p>

<pre caption="Einrichten eines DHCP Servers">
# <i>emerge dnsmasq</i>
# <i>nano /etc/dnsmasq.conf</i>
<comment>Fügen Sie folgende Zeile hinzu m DHCP zu aktivieren:</comment>
dhcp-range=192.168.0.100,192.168.0.250,72h
<comment>Beschränken Sie dnsmasq darauf nur die LAN-Schnittstelle zu verwenden</comment>
interface=eth0

# <i>rc-update add dnsmasq default</i>
# <i>/etc/init.d/dnsmasq start</i>
</pre>


<p>
Jetzt ist Ihr kleiner Router ein echter DHCP-Server! Schließen Sie die Computer
an Ihr Netzwerk an und sehen Sie zu, wie sie funktionieren! Bei
Windows-Systemen sollten Sie in den Netzwerkeinstellungen für TCP/IP die
Optionen "IP-Adresse automatisch beziehen" und "DNS-Server-Adresse automatisch
beziehen" aktivieren. Manchmal werden die Änderungen nicht sofort übernommen,
dann können Sie eine CMD-Box öffnen und <c>ipconfig /release</c> gefolgt von
<c>ipconfig /renew</c> eingeben. Doch genug von Windows, lassen Sie uns zurück
zu unserem Lieblingspinguin kommen.
</p>

</body>
</section>

<section>
<title>DNS-Server</title>
<body>

<p>
Wenn Leute einen Ort im Internet besuchen wollen, merken sie sich Namen, keine
langen Bandwürmer aus Zahlen. Denn was ist einfacher zu merken, ebay.com
oder 66.135.192.87? Hier kommt das DNS ins Spiel. DNS-Server laufen überall im
Internet und wann immer jemand 'ebay.com' besuchen möchte, übersetzen diese
Server 'ebay.com' (was wir verstehen) in '66.135.192.87' (was unsere Computer
verstehen). Für mehr Informationen über das DNS können Sie jederzeit
<uri link="http://de.wikipedia.org/wiki/DNS">Wikipedia</uri> besuchen.
</p>

<p>
Da wir bereits dnsmasq als DHCP-Server benutzen und dieses Paket auch einen
DNS-Server beinhaltet, müssen Sie hier nichts mehr machen! Ihr kleiner Router
stellt den DHCP-Clients bereits DNS zur Verfügung. Ich wette, Sie wünschten,
dass alles so einfach wäre ;).
</p>

<p>
Selbstverständlich können Sie einen anderen DNS-Server wählen, mit dem Sie
besser vertraut sind; dnsmasq ist jedoch sehr gut, da es genau für das
kreiert wurde, was wir wollen und nicht mehr. Es ist ein kleiner DNS
Zwischenspeicher-/Weiterleitungsserver für lokale Netzwerke. Wir wollen hier
kein DNS für unsere eigene Domäne offerieren, sondern nur ein einfaches DNS für
alle anderen in unserem LAN.
</p>

</body>
</section>

<section>
<title>NAT (alias IP-masquerading)</title>
<body>

<p>
An diesem Punkt angelangt, können Leute in Ihrem Netzwerk miteinander sprechen
und über den DNS-Server auch Hostnamen nachschauen. Dennoch ist noch immer
keine Verbindung ins Internet möglich. Während Sie möglicherweise glauben, dass
das großartig ist (mehr Bandbreite für Sie!), wette ich, dass alle anderen
nicht allzu froh darüber sind.
</p>

<p>
An dieser Stelle kommt NAT ins Spiel. NAT ist eine Möglichkeit, um mehrere
Computer in einem privaten LAN mit dem Internet zu verbinden, wenn nur eine
kleinere Anzahl an IP-Adressen zur Verfügung steht. Normalerweise bekommen Sie
von Ihrem ISP (Internet Service Provider) genau eine IP zugewiesen, dennoch
möchten Sie das ganz Haus mit dem Internet verbinden. NAT ist die Zauberei,
die dies möglich macht. Für mehr Informationen über NAT können Sie bei
<uri link="http://de.wikipedia.org/wiki/NAT">Wikipedia</uri> vorbeischauen.
</p>

<note>
Bevor wir starten, überprüfen Sie bitte, ob Sie iptables auf Ihrem System
installiert haben. Obgleich es normalerweise automatisch auf den meisten
Systemen installiert wird, könnte es bei Ihnen nicht dabei sein. Wenn das der
Fall ist, führen Sie einfach <c>emerge iptables</c> aus.
</note>

<pre caption="Konfiguration von iptables">
<comment>Zuerst löschen wir unsere aktuellen Regeln</comment>
# <i>iptables -F</i>
# <i>iptables -t nat -F</i>

<comment>Richten Sie das Standardverhalten für Pakete ein, auf die keine Regel zutrifft</comment>
# <i>iptables -P INPUT ACCEPT</i>
# <i>iptables -P OUTPUT ACCEPT</i>
# <i>iptables -P FORWARD DROP</i>

<comment>Kopieren Sie diese Beispiele ...</comment>
# <i>export LAN=eth0</i>
# <i>export WAN=eth1</i>

<comment>Dann schränken wir unsere Dienste so ein, dass sie nur im LAN arbeiten</comment>
# <i>iptables -I INPUT 1 -i ${LAN} -j ACCEPT</i>
# <i>iptables -I INPUT 1 -i lo -j ACCEPT</i>
# <i>iptables -A INPUT -p UDP --dport bootps ! -i ${LAN} -j REJECT</i>
# <i>iptables -A INPUT -p UDP --dport domain ! -i ${LAN} -j REJECT</i>

<comment>(Optional) Erlauben Sie den Zugriff auf unseren SSH-Server aus dem WAN</comment>
# <i>iptables -A INPUT -p TCP --dport ssh -i ${WAN} -j ACCEPT</i>

<comment>Werfen Sie TCP/UDP-Pakete für privilegierte Ports weg</comment>
# <i>iptables -A INPUT -p TCP ! -i ${LAN} -d 0/0 --dport 0:1023 -j DROP</i>
# <i>iptables -A INPUT -p UDP ! -i ${LAN} -d 0/0 --dport 0:1023 -j DROP</i>

<comment>Schlussendlich fügen wir NAT-Regeln hinzu</comment>
# <i>iptables -I FORWARD -i ${LAN} -d 192.168.0.0/255.255.0.0 -j DROP</i>
# <i>iptables -A FORWARD -i ${LAN} -s 192.168.0.0/255.255.0.0 -j ACCEPT</i>
# <i>iptables -A FORWARD -i ${WAN} -d 192.168.0.0/255.255.0.0 -j ACCEPT</i>
# <i>iptables -t nat -A POSTROUTING -o ${WAN} -j MASQUERADE</i>
<comment>Sagen Sie dem Kernel, dass IP-Forwarding in Ordnung ist</comment>
# <i>echo 1 > /proc/sys/net/ipv4/ip_forward</i>
# <i>for f in /proc/sys/net/ipv4/conf/*/rp_filter ; do echo 1 > $f ; done</i>

<comment>So müssen wir nach dem Booten die Regeln nicht per Hand starten</comment>
# <i>/etc/init.d/iptables save</i>
# <i>rc-update add iptables default</i>
# <i>nano /etc/sysctl.conf</i>
<comment>Fügen Sie die folgende Zeilen hinzu oder entfernen Sie die Kommentare:</comment>
net.ipv4.ip_forward = 1
net.ipv4.conf.default.rp_filter = 1

<comment>Wenn Sie eine dynamische IP-Adresse haben, möchten Sie das wahrscheinlich aktivieren:</comment>
net.ipv4.ip_dynaddr = 1
</pre>

<p>
Nachdem Sie das alles eingetippt haben, sollte die restlichen Nutzer Ihres
Netzwerks in der Lage sein, das Internet zu benutzen, als wenn sie alle selbst
direkt damit verbunden wären.
</p>

<p>
Die Option ip_dynaddr ist nützlich für Dial-On-Demand Systeme bzw. für den
Fall, dass Ihr Internet Service Provider dynamische Adressen vergibt.
Damit verhindert man Verbindungsversuche, solange die Netzwerkkarte für das
Internet noch nicht vollständig hochgefahren ist. Im Grunde genommen sorgt
man für einen reibungslosen Netzwerkverkehr für die Nutzer hinter Ihrem
Router.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Spielereien (für einen regnerischen Tag)</title>

<section>
<title>Einführung</title>
<body>

<p>
Glauben Sie es oder oder nicht: Sie sind fertig :). Von hier an bespreche ich
ein paar gebräuchliche Dinge, die Sie interessieren könnten. Alles in diesem
Kapitel ist absolut optional.
</p>
</body>
</section>

<section>
<title>Portweiterleitung (Port Forwarding)</title>
<body>

<p>
Manchmal möchten Sie die Möglichkeit haben, Dienste auf einem Computer hinter
Ihrem Router laufen zu haben oder einfach Ihr Leben im Bereich der
Remoteverwaltung erleichtern. Vielleicht möchten Sie einen FTP, HTTP, SSH oder
VNC-Server auf einer oder mehreren Maschinen hinter dem Router starten und
sich zu allen zu verbinden können. Die einzige Schwierigkeit besteht darin,
dass Sie lediglich eine Dienst/Rechner-Kombination pro Port haben. Zum Beispiel
gibt es keine Möglichkeit, drei FTP-Server hinter Ihrem Router zu starten und
zu allen via Port 21 zu verbinden; nur einer kann auf Port 21 laufen, wärend
die anderen auf z.B. Port 123 und Port 567 laufen müssten.
</p>

<p>
Alle Portweiterleitungsregeln sind in der Form <c>iptables -t nat -A PREROUTING
[-p Protokoll] --dport [externer Port auf dem Router] -i ${WAN} -j DNAT --to
[IP/Port, auf den weitergeleitet wird]</c>. iptables akzeptiert keine Hostnamen
bei der Portweiterleitung. Wenn Sie einen externen Port auf den selben internen
Port weiterleiten, können Sie den Zielport weglassen. Lesen Sie sich die
Manpage zu iptables(8) durch für weitere Informationen.
</p>

<pre caption="Ausführen der iptables Befehle">
<comment>Kopieren Sie diese Beispiele ...</comment>
# <i>export LAN=eth0</i>
# <i>export WAN=eth1</i>

<comment>Leiten Sie Port 2 zu einem internen SSH-Host weiter</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 2 -i ${WAN} -j DNAT --to 192.168.0.2:22</i>

<comment>FTP-Weiterleitung zu einem internen Host</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 21 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>HTTP-Weiterleitung zu einem internen Host</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 80 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>VNC-Weiterleitung zu einem internen Host</comment>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 5900 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 5901 -i ${WAN} -j DNAT --to 192.168.0.3:5900</i>
<comment>Wenn Sie auf den VNC-Server auf 192.168.0.3 verbinden möchten, fügen Sie ein simples ':1' an den Hostnamen des Routers an.</comment>

<comment>SAMBA-Weiterleitung zu einem internen Host (übermäßig viele Ports, um es Windows recht zu machen)</comment>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 135 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 139 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 445 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p udp --dport 137:138 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p udp --dport 445 -i ${WAN} -j DNAT --to 192.168.0.2</i>

<comment>Bittorrent-Weiterleitung</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 6881:6889 -i ${WAN} -j DNAT --to 192.168.0.2</i>

<comment>eDonkey/eMule-Weiterleitung</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 4662 -i ${WAN} -j DNAT --to 192.168.0.55</i>

<comment>Game Cube Warp Pipe Unterstützung</comment>
 <i>iptables -t nat -A PREROUTING -p udp --dport 4000 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>Playstation2 Onlineunterstützung</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11</i>

<comment>Xbox Live</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 88 -i ${WAN} -j DNAT --to 192.168.0.69</i>
</pre>

<note>
Wenn Sie andere gebräuchliche / coole Beispiele haben, schreiben Sie mir eine
<mail link="vapier@gentoo.org">E-Mail</mail> (Englisch).
</note>

</body>
</section>

<section>
<title>Identd (für IRC)</title>
<body>

<p>
<e>Internet Relay Chat</e> benutzt den ident-Dienst ziemlich stark. Jetzt, da
die IRC-Clients hinter dem Router sind, brauchen wir einen Weg, um ident sowohl
auf den Clients als auch auf dem Router unterzubringen. Ein solcher Server ist
<c>midentd</c>.
</p>

<pre caption="Konfiguration von ident">
# <i>emerge midentd</i>
# <i>rc-update add midentd default</i>
# <i>/etc/init.d/midentd start</i>
</pre>

<p>
Es gibt noch ein paar weitere ident-Server in Portage. Abhängig von Ihren
Bedürfnissen empfehle ich, <c>oidentd</c> und <c>fakeidentd</c> zu testen.
</p>
</body>
</section>

<!--
<section>
<title>Traffic Shaping</title>
<body>

<p>
Dies ist der Versuch, das <uri
link="http://www.tldp.org/HOWTO/ADSL-Bandwidth-Management-HOWTO/">ADSL Bandwidth
Management HOWTO</uri> zu vereinfachen. Du kannst selbstverständlich wann immer
du möchtest das originale Dokument zu Rate ziehen.
</p>

<p>
Hier konfigurieren wir jetzt, was manche Menschen als "Packet Shaper",
<uri link="http://de.wikipedia.org/wiki/Traffic_shaping">Traffic Shaping"</uri>
oder <uri link="http://de.wikipedia.org/wiki/QoS">"Quality of Service"</uri>
bezeichnen. Simpel gesehen wollen wir Regeln auf unserem Router einrichten,
die bestimmte Aktivitäten verlangsamen (z.B. das Senden von großen E-Mails oder
der Download aus P2P-Netzwerken), wärend andere Aktivitäten (z.B. Surfen im Web
oder Spielen von Online-Games) relativ schnell gehalten werden. Eine
30-Sekunden-Differenz in einem Videospiel ist sehr viel schlimmer als eine beim
Herunterladen großer Dateien :).
</p>

<p>
Zuerst muss man nachschauen, ob der Kernel alle Voraussetzungen erfüllt. Siehe
<uri link="#doc_chap2">Kernel-Konfiguration</uri> für mehr Informationen. Als
nächstes musst du <c>emerge iptables iputils</c> durchführen, damit du Zugriff
auf <c>iptables</c>-, <c>ip</c>- und <c>tc</c>-Befehle hast.
</p>

<p>
Bevor wir mit den Befehlen anfangen, sollten wir ein bisschen Theorie abdecken.
Dieses ganze System arbeitet dadurch, dass gebräuchliche Netzwerkstreams
klassifiziert werden und dann mit einer Priorität versehen werden. Du nutzt
iptables zum Klassifizieren von Netzwerkstreams, iputils um die
unterschiedlichen Prioritäten zu definieren und den Kernel um die
Geschwindigkeiten anzupassen. Erinnere dich, dass du den <e>outbound traffic</e>
relativ streng kontrollieren kannst (vom LAN zum WAN) - diese Möglichkeit
transferiert auf den <e>inbound traffic</e> (vom WAN zum LAN) jedoch relativ
begrenzt ist. Bitte denk' daran, dass die folgenden Beispiele lediglich als
kleine Heranführung an die Bereiche gedacht sind. Solltest du mehr erfahren
wollen, solltest du mehr über die speziellen Themengebiete lesen. In diesem
Beispiel werden wir den <uri
link="http://luxik.cdi.cz/~devik/qos/htb/">Hierarchical Token Buckets
(HTB)</uri> Paketplanungs-Algorithmus verwenden. Noch immer dabei? Klasse, dann
lass uns mit dem <e>shaping</e> beginnen :).
</p>

<pre caption="Konfiguration">
DEV=eth1 <comment>NIC verbunden mit dem WAN</comment>
RATE_OUT=100 <comment>Verfügbare Bandbreite ins WAN (in Kilobit [kb])</comment>
RATE_IN=1400 <comment>Verfügbare Bandbreite aus dem WAN ins LAN (in kb)</comment>

<comment>Hier initialisieren wir das Prioritätssystem. Die 45 wird benutzt, um den Standard-Klassifizierungslevel festzulegen.</comment>
ip link set dev ${DEV} qlen 30
tc qdisc add dev ${DEV} root handle 1: htb default 45
tc class add dev ${DEV} parent 1: classid 1:1 htb rate ${RATE_OUT}kbit
</pre>

<p>
Hier initialisieren wir das Systen, dass benutzt werden wird um den gesammten
Netzwerk-Traffic zu priorisieren. Wir kreierten unseren Ablauf (queue), sagten
ihm, den HTB Algorithmus zu benutzen und setzten den
Standard-Klassifizierungslevel auf '45'. Der Standard ist vollkommen frei
wählbar, genau wie alle anderen Level von hier aus. Das Einzige, was wichtig
ist, ist wie sich diese Level relativ zueinander verhalten; ein Level '10' Paket
bekommt den Vorzug vor einem Level '45' Paket. Lass uns weitermachen mit dem
Erstellen unterschiedlicher Level.
</p>

<pre caption="Erstellen von Levels">
tc class add dev $DEV parent 1:1 classid 1:10 htb rate $rkbit ceil $tkbit prio $p
tc qdisc add dev $DEV parent 1:10 handle 10: sfq
</pre>
</body>
</section>
-->

<section>
<title>Zeitserver</title>
<body>

<p>
Für ein gesundes, funktionierendes System ist es unabdingbar, die Zeit immer
korrekt zu halten. Einer der gebräuchlichsten Wege, dies zu verwirklichen, ist
die Benutzung des <e>Network Time Protocol</e> (NTP) und des ntp-Pakets (das
sowohl Implementierungen für Server und Client enthält).
</p>

<p>
Viele Menschen haben ntp-Clients auf ihren Computern laufen. Offensichtlich
müssen die NTP-Server in der Welt umso mehr Last verarbeiten, je mehr Menschen
solche Clients starten. In Umgebungen wie unserem Heimnetzwerk können wir
jedoch die Last der öffentlichen Server etwas mindern und dennoch allen Geräten
in unserem Netzwerk die richtige Zeit bereit stellen. Als Bonus sind unsere
privaten Zeit-Updates für alle Clients sehr viel schneller! Alles, was wir zu
tun haben, ist, einen NTP-Server auf unserem Router zu starten, der seine Zeit
mit den öffentlichen Servern synchronisiert und diese Zeit gleichzeitig dem
Rest der Rechner im Netzwerk zur Verfügung stellt. Für den Anfang reicht ein
einfaches <c>emerge ntp</c> auf dem Router.
</p>

<pre caption="Konfiguration des NTP-Servers">
# <i>nano /etc/conf.d/ntp-client</i>
<comment>Passen Sie hier an, wenn Sie möchten. Die Standards sollten aber in Ordnung sein.</comment>
# <i>rc-update add ntp-client default</i>

# <i>nano /etc/ntp.conf</i>
<comment>Fügen Sie folgende Zeilen hinzu:</comment>
restrict default ignore
restrict 192.168.0.0 mask 255.255.255.0 notrust nomodify notrap
<comment>Dies erlaubt nur Clients mit einer IP-Adresse aus dem 192.168.0.xxx-Netz die Nutzung Ihres NTP-Servers.</comment>
# <i>nano /etc/conf.d/ntpd</i>
<comment>Editieren Sie hier, wenn Sie möchten. Die Standards sollten aber in Ordnung sein.</comment>
# <i>rc-update add ntpd default</i>

# <i>/etc/init.d/ntp-client start</i>
# <i>/etc/init.d/ntpd start</i>
</pre>

<note>
Sie sollten sicherstellen, dass Sie ein- und ausgehende Kommunikation auf dem
NTP-Port (123/udp) erlauben, wenn Sie Ihren Server einrichten. Der Client
benötigt nur ausgehenden Zugriff auf Port 123 über udp.
</note>

<p>
Jetzt führen Sie auf Ihren Clients ebenfalls ein <c>emerge ntp</c> durch.
Jedoch werden wir hier lediglich den NTP-Client starten, was die Konfiguration
um einiges erleichtert.
</p>

<pre caption="Konfiguration eines NTP-Clients">
# <i>nano /etc/conf.d/ntp-client</i>
<comment>Änderen Sie den 'pool.ntp.org'-Server in der NTPCLIENT_OPTS Variable auf '192.168.0.1'</comment>
# <i>rc-update add ntp-client default</i>
# <i>/etc/init.d/ntp-client start</i>
</pre>

</body>
</section>

<section>
<title>Rsync Server</title>
<body>

<p>
Für alle mit mehreren Gentoo-Rechnern in Ihrem LAN ist es ratsam, nicht auf
jedem Rechner ein <c>emerge sync</c> mit einem entfernten Server auszuführen.
Indem Sie einen lokalen rsync-Server aufsetzen, sparen Sie sowohl Ihre eigene
als auch die Bandbreite der Gentoo-rsync-Server. Das geht relativ einfach.
</p>

<note>
Für eine tiefergehende rsync-Anleitung schauen Sie bitte in die offizielle
<uri link="/doc/de/rsync.xml#local">rsync Anleitung</uri>
</note>

<p>
Da jeder Gentoo-Rechner rsync benötigt, brauchen Sie es nicht mehr zu emergen.
Bearbeiten Sie die standardmäßige Konfigurationsdatei
<path>/etc/rsyncd.conf</path>, entfernen Sie die Kommentare im Abschnitt
<c>[gentoo-portage]</c> und stellen Sie sicher, dass Sie eine
<c>address</c>-Option angeben. Die restlichen Einstellungen sollten okay sein.
</p>

<pre caption="Konfiguration des rsync-Server">
pid file = /var/run/rsyncd.pid
use chroot = yes
read only = yes
address = 192.168.0.1

[gentoo-portage]
  path = /mnt/space/portage
  comment = Gentoo Linux Portage tree
  exclude = /distfiles /packages
</pre>

<p>
Anschließend starten Sie den Dienst (auch hier sind die Standardeinstellungen
okay).
</p>

<pre caption="Starten des rsync-Servers">
# <i>/etc/init.d/rsyncd start</i>
# <i>rc-update add rsyncd default</i>
</pre>

<p>
Jetzt müssen Sie nur noch den Clients mitteilen, dass sie sich mit Ihrem Router
synchronisieren sollen.
</p>

<pre caption="Client SYNC Einstellungen in make.conf">
SYNC="rsync://192.168.0.1/gentoo-portage"
</pre>

</body>
</section>

<section>
<title>Mail Server</title>
<body>

<p>
Manchmal ist es schön, den eigenen Simple Mail Transfer Protocol (SMTP)
Server auf dem Router laufen zu lassen. Sie mögen Ihren eigenen Grund dafür
haben, aber ich benutze ihn, damit die Benutzer den Eindruck haben, als
würden Ihre Mails auf der Stelle versendet werden, und damit das wiederholte
Zustellen und das Routen der Mails dem Mail-Server überlassen ist. Manche ISPs
erlauben die Weiterleitung für Accounts, die nicht Teil ihres Netzwerks sind,
überhaupt nicht (z.B. Verizon). Zudem können Sie den Versand von Mails so
drosseln, dass große Anhänge Ihre Verbindung nicht für eine halben Stunde lahm
legen.
</p>

<pre caption="Konfiguration vom SMTP">
# <i>emerge netqmail</i>
<comment>Stellen Sie sicher, dass die Ausgabe von `hostname` richtig ist</comment>
# <i>emerge --config netqmail</i>
# <i>iptables -I INPUT -p tcp --dport smtp ! -i ${LAN} -j REJECT</i>
# <i>ln -s /var/qmail/supervise/qmail-send /service/qmail-send</i>
# <i>ln -s /var/qmail/supervise/qmail-smtpd /service/qmail-smtpd</i>
# <i>cd /etc/tcprules.d</i>
# <i>nano tcp.qmail-smtp</i>
<!--
# <i>cd /etc</i>
# <i>nano tcp.smtp</i>
-->
<comment>Fügen Sie einen Eintrag ähnlich diesem zum "allow"-Abschnitt hinzu:</comment>
192.168.0.:allow,RELAYCLIENT=""
<!--
# <i>tcprules tcp.qmail-qmtp.cdb rules.tmp &lt; tcp.qmail-smtp</i>
# <i>tcprules tcp.smtp.cdb rules.tmp &lt; tcp.smtp</i>
-->
# <i>make</i>
# <i>rc-update add svscan default</i>
# <i>/etc/init.d/svscan start</i>
</pre>

<p>
Ich bin ein großer Fan von qmail, aber selbstverständlich können Sie auch
einen anderen MTA nutzen :). Wenn Sie E-Mail auf den Hosts in Ihrem Netzwerk
konfigurieren, stellen Sie als SMTP-Server 192.168.0.1 ein, dann sollte alles
gut laufen. Möglicherweise möchten Sie die <uri
link="http://netqmail.org/">netqmail Seite</uri> besuchen, um weitere
Dokumentation zu bekommen.
</p>

</body>
</section>

<!--
<section>
<title>E-Mail Virenscan</title>
<body>

<p>
Wenn du deinen Usern E-Mail Virenscan zur Verfügung stellen willst, jedoch
nicht auf jeder einzelnen Maschine einen Virenscanner installieren willst,
könnte <c>pop3vscan</c> genau das richtige für dich sein; ein transparenter
<e>Post Office Protocol</e> (POP) Scanner.
</p>

<pre caption="Konfiguration von pop3vscan">
TODO
</pre>

</body>
</section>
-->

<section>
<title>Ein vollwertiger DHCP-Server</title>
<body>

<p>
Zu Beginn haben wir dnsmasq benutzt, um den Clients DHCP anzubieten. Für die
meisten Leute mit einem kleinen, einfachen LAN ist diese Lösung perfekt. Aber
vielleicht brauchen Sie etwas mit mehr Ausstattung. Daher wenden wir uns jetzt
einem voll ausgestatteten DHCP Server, wie er von <uri
link="http://www.isc.org/products/DHCP">ISC</uri> angeboten wird, zuwenden.
</p>

<pre caption="Konfiguration des dhcpd">
# <i>emerge dhcp</i>
# <i>nano /etc/dhcp/dhcpd.conf</i>
<comment>Hier eine Beispielkonfigurationsdatei:</comment>
authoritative;
ddns-update-style interim;
subnet 192.168.0.0 netmask 255.255.255.0 {
    range 192.168.0.100 192.168.0.250;
    default-lease-time 259200;
    max-lease-time 518400;
    option subnet-mask 255.255.255.0;
    option broadcast-address 192.168.0.255;
    option routers 192.168.0.1;
    option domain-name-servers 192.168.0.1;
}
# <i>nano /etc/conf.d/dhcpd</i>
<comment>(Setzen Sie IFACE="eth0")</comment>
# <i>rc-update add dhcpd default</i>
# <i>/etc/init.d/dhcpd start</i>
</pre>

<p>
Dies ist ein Minimal-Setup, das benötigt wird, um die Funktionalität vom
bisher benutzten dnsmasq zu ersetzen. Wo wir gerade davon sprechen, Sie haben
bestimmt daran gedacht, die DHCP-Funktion in dnsmasq abzuschalten, oder?
Falls nicht, sollten Sie dies jetzt tun (kommentieren Sie dazu die Einstellung
<c>dhcp-range</c> in <path>/etc/dnsmasq.conf</path> aus und starten den
Dienst neu).
</p>

</body>
</section>

<section>
<title>Ein (oder zwei oder drei oder ...) weitere(s) LAN(s)</title>
<body>

<p>
In manchen Situationen haben Sie unter Umständen das Bedürfnis den Router mit
einem anderen LAN zu verbinden. Vielleicht wollen sie eine Gruppe von Freunden
temporär einbinden oder Sie möchten vielleicht verschiedene Gruppen von
Computern separieren oder Ihnen ist einfach nur langweilig. Was auch immer
der Grund sein mag, den Router auf andere LAN-Netzwerke auszudehnen sollte
ziemlich unkompliziert sein. Im folgenden Beispiel werde Ich annehmen, dass
das Netzwerk über eine dritte Ethernetkarte mit Namen <c>eth2</c> angebunden
ist.
</p>

<p>
Als erstes müssen Sie die Schnittstelle konfigurieren. Nehmen Sie einfach die
Anweisungen aus der <uri link="#doc_chap4_pre1">4.1 Befehlsauflistung</uri>
und ersetzen Sie <c>eth0</c> durch <c>eth2</c> und <c>192.168.0</c> durch
<c>192.168.1</c>.
</p>

<p>
Als nächstes müssen Sie dsnmasq anpassen um die neue Schnittstelle zu bedienen.
Editieren Sie einfach erneut die <path>/etc/conf.d/dnsmasq</path> Datei und
hängen Sie <c>-i eth2</c> and DNSMASQ_OPTS an. Das Verwenden von mehreren -i
funktioniert. Editieren Sie dann <path>/etc/dnsmasq.conf</path> und fügen Sie
eine weitere Zeile wie die dhcp-range Zeile in der <uri
link="#doc_chap5_pre1">5.1 Befehlsauflistung</uri> hinzu in der Sie
<c>192.168.0</c> durch <c>192.168.1</c> ersetzen. Auch hier ist ein kein
Problem mehrere dhcp-range Zeilen zu haben.
</p>

<p>
Letztlich setzen Sie die Regeln aus der <uri link="#doc_chap5_pre2">5.2
Befehlsauflistung</uri> und duplizieren die Regeln, welche ein <c>-i ${LAN}</c>
in sich haben. Es bietet sich an eine weitere Variable, wie z.B. <c>LAN2</c> zu
erstellen um die Sache übersichtlicher zu machen.
</p>

</body>
</section>

</chapter>

<chapter>
<title>Problembehandlung</title>

<section>
<title>Nützliche Helfer</title>
<body>

<p>
Wenn Ihre Rechner nicht miteinander kommunizieren wollen, werfen Sie doch einen
Blick auf die folgenden Tools (Sie finden sie alle in der Portage-Kategorie
<c>net-analyzer</c>):
</p>

<table>
<tr>
  <th>Dienstprogramm</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti>wireshark</ti>
  <ti>
    Grafisches Tool, mit dem jeglicher Netzwerkverkehr gemäß definierter
    Filter angezeigt werden kann
  </ti>
</tr>
<tr>
  <ti>tcpdump</ti>
  <ti>Kommandozeilen-Tool, mit dem jeglicher Netzwerkverkehr gemäß
    definierter Filter ausgegeben werden kann</ti>
</tr>
<tr>
  <ti>iptraf</ti>
  <ti>Auf ncurses basierender IP-LAN-Monitor</ti>
</tr>
<tr>
  <ti>ettercap</ti>
  <ti>Auf ncurses basierende Netzwerküberwachung</ti>
</tr>
</table>

</body>
</section>

<section>
<title>DHCP lässt sich nicht starten</title>
<body>

<p>
Wenn Sie das init.d-Skript von dhcp zum ersten Mal starten, kann es vorkommen,
dass es nicht ordnungsgemäß geladen wird, Sie jedoch nicht richtig darüber
informiert werden.
</p>

<pre caption="Beispiel für Startprobleme bei DHCP">
# <i>/etc/init.d/dhcp start</i>
* Setting ownership on dhcp.leases ...          [ ok ]
* Starting dhcpd ...                            [ !! ]
</pre>

<p>
Der Trick besteht darin, zu wissen, wo dhcpd seine Ausgaben hinschickt.
Bewegen Sie sich dazu nach <path>/var/log</path> und lesen Sie die
Protokolldateien. Da der Name der Protokolldatei von dem von Ihnen verwendeten
syslog-Paket abhängt, sollten Sie versuchen die Kandidaten mittels
<c>grep -Rl dhcpd /var/log</c> einzugrenzen. Vielleicht haben Sie nur einen
Tippfehler in den Konfigurationsdateien gemacht. Darüber hinaus
sollten Sie versuchen, den Dienst über <c>dhcpd -d -f</c> (kurz für debug /
foreground, also ausführliche Ausgabe und der Daemon rutscht nicht in den
Hintergrund) zu starten und dessen Ausgabe auf Fehler untersuchen.
</p>

</body>
</section>

<section>
<title>Falscher MTU Wert</title>
<body>

<p>
Sollten bei Ihnen der Fehler auftreten, dass Sie bestimmte Internetseiten
nicht laden können, wohingegen andere einwandfrei funktionieren, könnte es
daran liegen, dass Sie Probleme mit der Größe der MTU (Maximum Transfer
Unit, maximale Übertragungseinheit, Anm. d. Übersetzers) haben. Dies können
Sie schnell herausfinden, indem Sie folgenden iptables-Befehl ausführen:
</p>

<pre caption="Umgehen der MTU Problematik">
# <i>iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu</i>
</pre>

<p>
Dies hat Einfluss auf alle neuen Verbindungen, daher sollten Sie eine Webseite,
mit der Sie bisher Probleme hatten, einfach erneut laden. Die Standardgröße für
die MTU beträgt bei 100 MBit Ethernet <c>1500</c>; dieser Wert gilt auch für
PPPoA. Für PPPoE-Verbindungen ist es <c>1492</c>. Für weitere Informationen
sollten Sie Kapitel 15 des <uri link="http://lartc.org/howto/">Linux Advanced
Routing &amp; Traffic Control HOWTO</uri> lesen.
</p>

<p>
Falls dieser Befehl bei Ihnen nicht funktioniert, können Sie versuchen, die
Regel in die Tabelle "mangle" hinzuzufügen. Fügen Sie einfach <c>-t mangle</c>
an den Befehl an.
</p>

</body>
</section>

<section>
<title>Keine Möglichkeit, zwei Maschinen direkt zu verbinden</title>
<body>

<p>
Wenn (aus welchem Grund auch immer) Sie versuchen, zwei Maschinen direkt
ohne Hub oder Switch zu verbinden, wird ein normales Ethernet-Kabel nicht
funktionieren, sofern Sie keine Auto MDI/MDI-X Netzwerkkarten (auch bekannt
als "autosensing") besitzen. Sie brauchen dazu ein anderes Kabel, genannt
Crossover-Kabel. Dieser <uri
link="http://de.wikipedia.org/wiki/Crossoverkabel">Wikipedia</uri> Artikel
beschreibt die Details.
</p>

</body>
</section>

</chapter>

<chapter>
<title>Ausklang</title>
<section>
<body>

<p>
Ich habe keine abschließenden Bemerkungen. Wenn Sie jedoch irgendwelche
Probleme mit diesem Guide haben, können Sie mich per <mail
link="vapier@gentoo.org">E-Mail</mail> erreichen (Englisch). Eine andere
Möglichkeit besteht darin, dass Sie einen Bug melden auf <uri
link="http://bugs.gentoo.org/">Gentoos Bugtracking Website</uri>. Wenn Sie ein
paar interessante Dinge haben, von denen Sie annehmen, dass sie diese Anleitung
verbessern, schicken Sie sie mir bitte zur Einbindung (auch hier bitte auf
Englisch).
</p>

</body>
</section>
</chapter>
</guide>
