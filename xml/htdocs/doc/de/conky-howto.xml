<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/conky-howto.xml,v 1.3 2007/02/10 23:36:05 grahl Exp $ -->
<!-- English CVS Version: 1.5 -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/de/conky-howto.xml" lang="de">
<title>Gentoo Linux Conky Howto</title>

<author title="Autor">
  <mail link="admin@sdesign.us">Bill Woodford</mail>
</author>
<author title="Bearbeiter">
  <mail link="brenden@rty.ca">Brenden Matthews</mail>
</author>
<author title="Übersetzer">
  <mail link="stefansusenet@nurfuerspam.de">Stefan Kienzl</mail>
</author>


<abstract>
Dieses Dokument beschreibt, wie man den Systemmonitor, bekannt als Conky,
installiert und konfiguriert.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.2</version>
<date>2006-11-02</date>

<chapter>
<title>Hintergrund</title>
<section>
<title>Einführung in Conky</title>
<body>

<p>
Also Sie haben einen Gentoo-Rechner und haben bereits erlernt, 30 verschiedene
Befehle einzusetzen, um verschiedene Aspekte Ihres gerade laufenden System zu
überwachen. Was tun Sie an dieser Stelle? Gibt es nicht einen einfacheren Weg
um die Leistung des Systems zu überwachen und zu sehen, was es tut, sowie die
Ressourcen die es verwendet, um diese Tätigkeiten durchzuführen? Das ist genau
das, was ein Systemmonitor wie Conky zur Verfügung stellt.
</p>

</body>
</section>
<section>
<title>Was es leistet</title>
<body>

<p>
Anders als andere Systemmonitore wie top, kann Conky in einem Fenster in einer
X-Sitzung ausgeführt werden, oder auf den Hintergrund zeichnen (es gibt auch
die Möglichkeit, dass Conky die Informationen an stdout übergibt, allerdings
wird das hier nicht behandelt). Es zeigt die Informationen die es gesammelt
hat, durch Verwendung von Text, Fortschrittsbalken und Graphen an. Weiters ist
der Weg wie es formatiert ist, im Gegensatz zu top, komplett vom Anwender
konfigurierbar. Zusätzlich zum Überwachen des Systems, kann Ihnen Conky auch
Informationen über verschiedene Musikplayer (wie BMPx, Music Player
Daemon und Audacius Media Player) ausgeben, Ihnen sagen wieviele neue E-Mails
in Ihrem Postfach liegen und einiges mehr. Sollte eine Funktion die Sie
benötigen noch nicht in Conky integriert sein, ist es eine leichte Aufgabe, ein
Skript zu schreiben, um die gewünschten Informationen zu erhalten - einige
Beispiele die bereits gelöst wurden sind RSS-Feeds, POP3 E-Mail
Nachrichtenanzahl, lokales Wetter, Boinc-Status und sogar der Status von
Portage.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Conky installieren</title>
<section>
<title>Basis-Installation</title>
<body>

<p>
Gentoo stellt ein Ebuild bereit, um Conky schnell und einfach zu installieren.
Achten Sie besonders auf die USE-Flags. Sie werden mit ziemlicher Sicherheit
X11-Unterstützung (<c>X</c>) wollen. Stellen Sie außerdem sicher, dass Sie die
USE-Flags für alle Musikplayer (andere als MPD), die Sie möchten, wie zum
Beispiel Audacious (<c>audacious</c>). Falls Sie den TCP-Port-Monitor
verwenden möchten, stellen Sie sicher, dass Sie das <c>ipv6</c> USE-Flag
deaktivieren, da der Port-Monitor nur für IPv4-Systeme ist.
</p>

<p>
Zusätzlich kompiliert das <c>truetype</c> USE-Flag Unterstützung für TrueType
Schriftarten unter der Verwendung von Xft. Die meisten Anwender wünschen das
ebenfalls.
</p>

<pre caption="/etc/portage/package.use">
<comment>(Verwenden Sie das Folgende als Beispiel)</comment>
# <i>echo app-admin/conky truetype audacious -ipv6 >> /etc/portage/package.use</i>
</pre>

<p>
Nachdem Sie Ihre USE-Flags korrekt gesetzt haben, ist es an der Zeit, Conky zu
installieren.
</p>

<pre caption="Conky installieren">
# <i>emerge -av conky</i>
</pre>

<p>
Um zu sehen, wie Conky aussehen wird, führen Sie den Befehl <c>conky</c>
innerhalb eines Terminals aus. Das wir Ihnen eine gute Referenz dazu geben, um
zu sehen, wie es aussehen wird und was Sie verändern, hinzufügen oder entfernen
möchten.
</p>

<pre caption="Conky zum ersten Mal ausführen">
$ <i>conky</i>
</pre>

<note>
Conky benötigt Double Buffer Extension (DBE) Unterstützung vom X-Server, um
Flackern zu verhindern, da es ohne dies Fenster nicht schnell genug
aktualisieren kann, um das zu verhindern. Es kann in
<path>/etc/X11/xorg-conf</path> mit der <c>Load "dbe"</c> Zeile in
<b>Section "Module"</b> aktiviert werden.
</note>

<p>
Sobald Sie eine Idee davon haben wie Conky aussehen soll, können Sie mit der
Konfiguration fortfahren!
</p>

</body>
</section>
<section>
<title>Conky konfigurieren</title>
<body>

<p>
Standardmäßig sucht Conky nach einer Konfigurationsdatei im Heimverzeichnis
des Anwenders unter <path>~/.conkyrc</path>. Diese Datei beinhaltet alle
Konfigurationsoptionen, den statischen Text, Farben und andere Variablen die
kontrollieren, welche Daten dem Anwender gezeigt werden. Conky stellt auch eine
großartige Beispielkonfiguration unter
<path>/usr/share/doc/&lt;conky-version&gt;/conkyrc.sample.gz</path> bereit.
Stellen Sie sicher, dass Sie &lt;conky-version&gt; mit der Version, die Sie
installiert haben, ersetzen.
</p>

<pre caption="Kopieren der Beispielkonfiguration in ihr Heimverzeichnis">
<comment>(Ersetzen Sie <b>1.4.0-r1</b> mit der Versionsnummer von Conky)</comment>
$ <i>zcat /usr/share/doc/conky-1.4.0-r1/conkyrc.sample.gz >> ~/.conkyrc</i>
</pre>

<p>
Öffnen Sie jetzt die Beispielkonfiguration mit dem Editor Ihrer Wahl. Sie
bemerken wahrscheinlich, dass es zwei verschiedene Abschnitte in der
Konfigurationsdatei gibt. Der erste Abschnitt der Datei beinhaltet die
Programmkonfiguration und kontrolliert, wie es sich verhält. Das beinhaltet
Dinge wie das <c>update_interval</c>, oder wie oft Conky die Informationen auf
dem Bildschirm aktualisiert. Der zweite Abschnitt beinhaltet den aktuellen Text,
Graphen und Variablen welche auf dem Bildschirm gezeichnet werden. Das
beinhaltet Dinge wie die Systemlaufzeit (<c>$uptime</c>), CPU-Auslastung
(<c>$cpu</c>) und alles Andere was Sie angezeigt bekommen möchten. Der erste
Abschnitt der Datei beginnt gleich am Anfang, der zweite Abschnitt besteht aus
allem nach der Zeile <c>TEST</c>. Kommentare in der Datei beginnen mit <c>#</c>,
aber beachten Sie, dass auch eine mit # beginnende Zeile im zweiten Abschnitt am
Bildschirm gezeichnet wird.
</p>

<p>
Eine Liste aller verfügbaren Konfigurationsoptionen und Variablen finden Sie
unter <uri>http://conky.sourceforge.net/config_settings.html</uri> und
<uri>http://conky.sourceforge.net/variables.html</uri>. Außerdem gibt es einige
großartige Screenshots mit Beispielkonfigurationsdateien und Skripten unter
<uri>http://conky.sourceforge.net/screenshots.html</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Conky erweitern</title>
<section>
<title>Abseits der eingebauten Variablen</title>
<body>

<p>
Sie haben das soweit und haben die Conky Dokumentation nach dieser Extra
Variable, die Conky anscheinend nicht hat, durchsucht.. Sie haben Glück! Conky
stellt einige Variablen genau für diese Situation bereit! <c>$exec</c> führt,
jedes mal wenn Conky aktualisiert wird, einen Befehl aus, <c>$execi</c> führt
einen Befehl in einem definierten Intervall aus und <c>$texeci</c> führt
einen Befehl in einem eigenen Thread in einem definierten Intervall aus.
</p>

<pre caption="Skript-Beispiele">
<i>${exec grep 'sudo' /var/log/messages | tail -n 4}</i>
<i>${execi 30 ~/scripts/emerge-status.sh</i>
<i>${texeci 600 ~/scripts/gmail.pl}</i>
</pre>

<note>
Während jeder Befehl der in einer Shell funktioniert in jeder dieser Variablen
funktioniert, ist es wichtig nich zu vergessen, dass sich der Befehl beenden
muss. Das beudetet, dass Befehle wie <c>tail -f</c>, die aktiv bleiben,
<e>nicht</e> korrekt funktionieren werden.
</note>

</body>
</section>
</chapter>
</guide>
