<?xml version = '1.0' encoding = 'UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- English CVS Version: 1.34 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/virt-mail-howto.xml,v 1.8 2004/10/17 11:57:05 dertobi123 Exp $ -->

<guide link="/doc/de/virt-mail-howto.xml">
<title>Virtual Mailhosting System Guide</title>
<author title="Autor" >
<mail link="antifa@gentoo.org" >Ken Nowack</mail>
</author>
<author title="Autor" >
<mail link="ezra@revoltltd.org" >Ezra Gorman</mail>
</author>
<author title="Bearbeiter">
<mail link="klasikahl@gentoo.org" >Zack Gilburd</mail>
</author>
<author title="Übersetzer">
  <mail link="mail@sebastianstumpf.de">Sebastian Stumpf</mail>
</author>
<author title="Übersetzer">
  <mail link="SirSeoman@gmx.de">Tobias Matzat</mail>
</author>

<abstract>
Dieses Dokument zeigt wie man ein virtuelles Mailhosting System, basierend auf
postfix, mysql courier-imapd und cyrus-sasl erstellt.
</abstract>
<version>1.0.12</version>
<date>30. September 2004</date>
<!--

Contents

I. Introduction
II. Postfix Basics
III. Courier-imap
IV. Cyrus-sasl
V. SSL Certificates for Postfix and Apache
VI. Adding SSL and SASL support to Postfix
VII. MySQL
VIII. Apache and phpMyAdmin
IX. The vmail user
X. Configuring MySQL Authentication and vhosts
XI. Squirrelmail
XII. Mailman
XIII. Content Filtering and Anti-Virus
XIV. Wrap Up
XV. Troubleshooting

--><chapter>
<title>Einführung</title>
<section>
<body>

<p>
Für die meisten Gentoo User reicht ein einfacher E-Mailclient und fetchmail.
Wenn Sie jedoch eine Domain auf ihrem System hosten, werden Sie einen voll
ausgearbeiteten MTA (Mail Transfer Agent) benötigen. Wenn sie mehrere Domains
hosten, dann werden Sie sicher etwas robusteres brauchen um alle E-Mails Ihrer
User zu verwalten. Dieses Systen wurde geschaffen um eine elegante Lösung für
die folgende Aspekte zu bieten.
</p>

<p>
Ein virtuelles Mailsystem muss fähig sein die E-Mails zahlreicher Domains mit
mehreren Usern über verschiedenste Schnittstellen zu verwalten. Das bringt
einige Probleme mit sich, die gelöst werden müssen. Was ist wenn Sie zum
Beispiel zwei Benutzer haben, die auf verschiedenen Domains die selben
Usernamen verwenden möchten? Wenn Sie IMAP Zugriff und SMPT-Auth anbieten, wie
kombinieren Sie dann die verschiedenen Authentifizierungsdienste zu einem
einzelnen System? Wie schaffen Sie Sicherheit für die zahlreichen Komponenten,
die das System umfasst? Wie werden Sie all das umsetzen?
</p>

<p>
Dieses HowTo zeigt Ihnen wie man ein Mailsystem aufsetzt, das fähig ist soviele
Domains zu verwalten wie Ihre Hardware verkraften kann, virtuelle Benutzer
unterstützt, die keinen Shell Account benötigen, domainspezifische Usernamen
hat, web-, imap, smtp und pop3-clienten über eine einzige Datenbank
identifiziert, SSL für TLS (Transport Layer Security) verwendet, ein
Webinterface beinhaltet, Mailinglisten für beliebige Domains verwalten kann
und von einer schlanken, zentralen und bequemen MySQL-Datenbak gesteuert wird.
</p>

<p>
Es gibt eine Menge von Möglichkeiten um ein virtuelles Mailsystem aufzubauen.
Bei den zahlreichen Alternativen kann ein anderes die beste Wahl für Ihren
speziellen Bedarf sein. Berücksichtigen Sie <uri>http://www.qmail.org/</uri>
und <uri>http://www.exim.org/</uri> um etwas über Ihre Alternativen zu
erfahren.
</p>

<p>
Die folgenden Pakete werden während dieser Einrichtung verwendet: apache,
courier-imap, pam_mysql, postfix, mod_php, phpmyadmin, squirrelmail,
cyrus-sasl, mysql, php und mailman.
</p>

<p>
Verwenden Sie folgende USE-Variablen in <path>/etc/make.conf</path> bevor Sie
mit dem Kompilieren der Pakete beginnen: <c>USE=&quot;mysql pam-mysql imap libwww
maildir sasl ssl&quot;</c>. Andernfalls werden Sie sehr wahrscheinlich die
Pakete neu kompilieren müssen um die Unterstützungen, die von den verwendeten
Protokollen benötigt werden, zu erhalten. Ausserdem sollten Sie alle anderen
Mail- und Netzwerk-Werte wie ipv6 aus den USE Flags entfernen.
</p>

<impo>
Dieses HowTo wurde für postfix-2.0.x geschrieben. Wenn Sie ältere Versionen
von postfix verwenden, werden einige Variablen in diesem Dokument abweichen.
Es ist empfehlenswert dass Sie upgraden. Einige andere Pakete aus diesem
HowTo sind ebenfalls versionsempfindlich. Sie sollten die Dokumentation der
Pakete lesen, falls Sie Probleme auftreten.
</impo>

<impo>
Dieses Dokument verwendet apache-1.3.x. Apache-2 wurde als stable in portage
markiert. Jedoch gibt es einige Probleme mit der PHP-Integration. So lange
der PHP Support in apache-2.0.x noch nicht stabil ist, wird diese Anleitung
Version 1.3.x verwenden.
</impo>

<impo>
Sie brauchen eine Domain oder wenigstens einen MX Record für eine Domain um
einen öffentlichen Mailserver zu betrieben. Im Idealfall haben Sie die
Kontrolle über mindestens zwei Domains um einen Vorteil aus Ihrem neuen
Mailsystem zu ziehen.
</impo>

<impo>
Stellen Sie sicher dass <path>/etc/hostname</path> den richtigen Hostnamen
Ihres Mailservers hat. Überprüfen Sie mit <c>hostname</c> ob der hostname
korrekt gesetzt wurde. Stellen Sie auch sicher dass es keine Konflikte mit
Einträgen aus <path>/etc/hosts</path> gibt.
</impo>

<note>
Es ist empfehlenswert, dass Sie das ganze Dokument lesen und sich mit allen
Schritten vertraut machen bevor Sie mit der Installation beginnen. Wenn Sie
Probleme mit einem Kapitel haben sollten, dann kontrollieren Sie die
Fehlersuche-Anleitung am Ende dieses Dokuments. Nicht alle der verwiesenen
Pakete sind nötig. Die Einrichtung ist sehr flexibel. Wenn Sie zum Beispiel
kein Webinterface benötigen, dann lassen Sie einfach den squirrelmail
Abschnitt aus.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Postfix Grundlagen</title>
<section>
<body>

<pre caption="Postfix installieren" >
# <i>emerge postfix</i>
</pre>

<warn>
Stellen Sie sicher, dass Sie keine anderen MTAs wie ssmtp, exim oder qmail
installiert haben, andernfalls werden Sie sehr sicher <e>GROSSE</e>
Schwierigkeiten bekommen.
</warn>

<p>
Nachdem Postfix installiert ist, ist es an der Zeit es zu konfigurieren.
Ändern Sie folgende Einstellungen in <path>/etc/postfix/main.cf</path>:
</p>

<pre caption="/etc/postfix/main.cf" >
myhostname = $host.domain.name
mydomain = $domain.name
inet_interfaces = all
mydestination = $myhostname, localhost.$mydomain $mydomain
mynetworks = my.ip.net.work/24, 127.0.0.0/8
home_mailbox = .maildir/
local_destination_concurrency_limit = 2
default_destination_concurrency_limit = 10
</pre>

<p>
Als nächstes ändern Sie folgendes in <path>/etc/postfix/master.cf</path>.
Das wird die verbose Ausgabe für Fehlerbeseitigungen aktivieren.
</p>

<pre caption="/etc/postfix/master.cf" >
# service type  private unpriv  chroot  wakeup  maxproc command + args
#               (yes)   (yes)   (yes)   (never) (50)
#
==========================================================================
smtp      inet  n       -       n       -       -       smtpd -v

<codenote>Fügen Sie nur ein -v dem smtpd in der oberen Zeile hinzu</codenote>
</pre>

<p>
Editieren Sie nun <path>/etc/mail/aliases</path> um ihre lokalen aliase
hinzuzufügen. Es sollte mindestens ein alias für root gesetzt werden wie:
<c>root: ihre@email.adresse</c>
</p>

<pre caption="postfix das erste Mal starten" >
# <i>/usr/bin/newaliases</i>
<codenote>Das wird die neuen aliases installieren. Sie müssen das nur tun,</codenote>
<codenote>wenn Sie updaten oder neue aliases installieren wollen.</codenote>

# <i>/etc/init.d/postfix start</i>
</pre>

<p>
Wenn postfix läuft starten Sie ihren favorisierten Konsolenmailclienten und
senden Sie sich selbst eine E-Mail. Der Author empfiehlt <c>mutt</c>. Stellen
Sie sicher, dass postfix die Mails an lokale User ausliefert. Wenn dies
geschieht machen wir im nächsten Kapitel weiter.
</p>

<note>
Es wird empfohlen, dass Sie sicherstellen, dass diese Grundeinstellungen
funktionieren bevor Sie überhaupt weitermachen.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Courier-imap</title>
<section>
<body>

<pre caption="Courier-imap installieren" >
# <i>emerge courier-imap</i>
</pre>

<pre caption="Courier-imap Konfiguration" >
# <i>cd /etc/courier-imap</i>
<codenote>Wenn Sie die SSL Unterstützung von courier-imap oder pop3 nutzen wollen, </codenote>
<codenote>müssen Sie Zertifikate dafür erstellen.</codenote>
<codenote>Dieser Schritt ist empfohlen. Wenn Sie SSL nicht nutzen wollen, lassen Sie ihn aus.</codenote>

# <i>nano -w pop3d.cnf</i>
# <i>nano -w imapd.cnf</i>
<codenote>Ändern Sie die C, ST, L, CN und email Parameter so dass sie zu Ihrem Server passen.</codenote>

# <i>mkpop3dcert</i>
# <i>mkimapdcert</i>
</pre>

<pre caption="Starten Sie den gewünschten Courierservice" >
# <i>/etc/init.d/courier-imapd start</i>
# <i>/etc/init.d/courier-imapd-ssl start</i>
# <i>/etc/init.d/courier-pop3d start</i>
# <i>/etc/init.d/courier-pop3d-ssl start</i>
</pre>

<p>
Öffnen Sie den Mailclienten Ihrer Wahl und stellen Sie sicher, dass alle
Verbindungen, die Sie gestartet haben, Mails empfangen und versenden können.
Die grundlegenden Arbeiten sind gemacht - Jetzt werden wir uns durch Einiges
auf ein Mal arbeiten um den Rest des Systems zum Laufen zu bringen. Nochmals,
kontrollieren Sie bitte, dass alles richtig arbeitet bevor Sie weitermachen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Cyrus-sasl</title>
<section>
<body>

<p>
Als nächstes installieren wir cyrus-sasl. Sasl wird die AUTH-Variablen zu PAM
weiterleiten, welches die Informationen zu MySQLd weiterleitet um die
Authentifikation der SMTP-Benutzer durchzuführen. In diesem HowTo werden wir
nicht feststellen dass SASL richtig arbeitet, bis MySQL nicht aufgesetzt ist
und einen Testbenutzer enthält.
</p>

<note>
Manchmal kann es sein, dass SASL nicht richtig mit PAM zu der Shadow-Datei
arbeitet. Der Author hat sich lange mit dem Problem beschäftigt und würde
sich, wenn jemand eine Lösung für das Problem kennt, über eine
<mail link="ken@kickasskungfu.com">E-Mail</mail> freuen.
</note>

<pre caption="Cyrus-sasl ebuild einstellen und installieren" >
# <i>USE='-ldap -mysql' emerge cyrus-sasl</i>
<codenote>Wir haben kein ldap und wir benötigen keine MySQL-Unterstützung für sasl,</codenote>
<codenote>also müssen wir die Unterstützung für dieses Ebuild abstellen.</codenote>
</pre>

<p>
Editieren Sie <path>/usr/lib/sasl2/smtpd.conf</path>.
</p>

<pre caption="SASL starten" >
# <i>nano -w /usr/lib/sasl2/smtpd.conf</i>
pwcheck_method: auxprop
auxprop_plugin: sql
sql_engine: mysql
sql_hostnames: localhost
sql_user: mailsql
sql_passwd: <comment>&lt;password&gt;</comment>
sql_database: mailsql
sql_select: select clear from users where email = '%u@%r'
mech_list: plain login
pwcheck_method: saslauthd
mech_list: LOGIN PLAIN
<codenote>Es ist wichtig, dass Sie alle Methoden austragen, die wir nicht nutzen.</codenote>
<codenote>Sie verursachen bei einigen Mailclienten Probleme.</codenote>
# <i>/etc/init.d/saslauthd start</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>SSL Zertifikate für Postfix und Apache</title>
<section>
<body>

<p>
Als nächstes erstellen wir Zertifikate für Postfix und Apache.
</p>

<pre>
# <i>cd /etc/ssl/</i>
# <i>nano -w openssl.cnf</i>

<codenote>Ändern Sie die folgenden Standardwerte für Ihre Domain:</codenote>
countryName_default
stateOrProvinceName_default
localityName_default
0.organizationName_default
commonName_default
emailAddress_default.

<codenote>Wenn die Variablen nicht existieren, dann erstellen Sie sie an einem sinnvollen Platz.</codenote>


# <i>cd misc</i>
# <i>nano -w CA.pl</i>
<codenote>Wir müssen -nodes den folgenden Einträgen</codenote>
<codenote>hinzufügen, damit die Zertifikate ohne</codenote>
<codenote>Passwort geladen werden können. Andernfalls</codenote>
<codenote>sind sie nach einem Restart nicht mehr verfügbar.</codenote>

# create a certificate
system (&quot;$REQ -new -nodes -x509 -keyout newreq.pem -out newreq.pem $DAYS&quot;);

# create a certificate request
system (&quot;$REQ -new -nodes -keyout newreq.pem -out newreq.pem $DAYS&quot;);

# <i>./CA.pl -newca</i>
# <i>./CA.pl -newreq</i>
# <i>./CA.pl -sign</i>
# <i>cp newcert.pem /etc/postfix</i>
# <i>cp newreq.pem /etc/postfix</i>
# <i>cp demoCA/cacert.pem /etc/postfix</i>
<codenote>Jetzt machen wir das selbe für den Apache.</codenote>

# <i>openssl req -new > new.cert.csr</i>
# <i>openssl rsa -in privkey.pem -out new.cert.key</i>
# <i>openssl x509 -in new.cert.csr -out new.cert.cert -req -signkey new.cert.key -days 365</i>
<codenote>Lassen Sie die Zertifikate einfach hier liegen.</codenote>
<codenote>Wir installieren sie nachdem der Apache installiert ist.</codenote>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>SSL und SASL Support an Postfix binden</title>
<section>
<body>

<p>
Editieren Sie nun die Postfix-Konfigurationsdateien, damit es mit SASL und SSL
umgehen kann. Fügen Sie die Parameter am Ende der Datei ein, damit man sie
später leicht finden kann.
</p>

<pre caption="/etc/postfix/main.cf" >
# <i>nano -w /etc/postfix/main.cf</i>

smtpd_sasl_auth_enable = yes
smtpd_sasl2_auth_enable = yes
smtpd_sasl_security_options = noanonymous
broken_sasl_auth_clients = yes
smtpd_sasl_local_domain =

<codenote>Die broken_sasl_auth_clients Option und die login auth Methode </codenote>
<codenote>sind für Outlook (Express). Beide sind undokumentiert.</codenote>
<codenote>smtpd_sasl_local_domain hängt ein Domainname an, für Clienten die </codenote>
<codenote>SMTP-AUTH verwenden. Stellen Sie sicher dass kein Wert für die Variable </codenote>
<codenote>gesetzt ist. Andernfalls werden Ihre User sich nicht authentifizieren können.</codenote>

smtpd_recipient_restrictions =
        permit_sasl_authenticated,
        permit_mynetworks,
        reject_unauth_destination


smtpd_use_tls = yes
#smtpd_tls_auth_only = yes
smtpd_tls_key_file = /etc/postfix/newreq.pem
smtpd_tls_cert_file = /etc/postfix/newcert.pem
smtpd_tls_CAfile = /etc/postfix/cacert.pem
smtpd_tls_loglevel = 3
smtpd_tls_received_header = yes
smtpd_tls_session_cache_timeout = 3600s
tls_random_source = dev:/dev/urandom

<codenote>smtpd_tls_auth_only ist auskommentiert um uns das Testen zu erleichtern. </codenote>
<codenote>Sie können es später wieder aktivieren.</codenote>

# <i>postfix reload</i>
</pre>

<p>
Jetzt werden wir überüfen ob Postfix unsere neuen Einstellungen übernommen hat.
</p>

<pre caption="Überprüfen des SASL und TSL Supports" >
# <i>telnet localhost 25</i>

Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
220 mail.domain.com ESMTP Postfix
<i>EHLO domain.com</i>
250-mail.domain.com
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-STARTTLS
250-AUTH LOGIN PLAIN
250-AUTH=LOGIN PLAIN
250-XVERP
250 8BITMIME
<i>^]</i>
telnet> <i>quit</i>
</pre>

<p>
Stellen Sie sicher dass die obigen AUTH und STARTTLS in Ihrer Installation
erscheinen. Wie ich schon sagte, wird AUTH zum jetzigen Zeitpunkt nicht
funktonieren, weil SASL versuchen wird die User über seine Datenbank (die wir
aber noch nicht eingerichtet haben) anstatt über das shadow File zu,
authentifizieren, warum auch immer. Also werden wir nun mysql dafür einrichten,
all unsere auth und virtual domain Informationen aufzunehmen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>MySQL</title>
<section>
<body>

<p>
Als nächstes installieren und konfigurieren wir MySQL. Sie werden für diesen
Schritt die <uri link="http://kickasskungfu.com/~ken/genericmailsql.sql">genericmailsql.sql</uri>
benötigen.
</p>

<pre caption="MySQL installieren und konfigurieren" >
# <i>emerge mysql</i>

# <i>/usr/bin/mysql_install_db</i>
<codenote>Nach diesem Befehl befolgen Sie die Anweisungen </codenote>
<codenote>auf ihrem Bildschirm um ein rootpasswort </codenote>
<codenote>mit mysql, nich mysqladmin, festzulegen.</codenote>
<codenote>Anderenfalls ist Ihre DB weit offen.</codenote>

# <i>/etc/init.d/mysql start</i>
# <i>mysqladmin -u root -p create mailsql</i>
# <i>mysql -u root -p mailsql &lt; genericmailsql.sql</i>

# <i>mysql -u root -p mysql</i>
mysql> <i>GRANT SELECT,INSERT,UPDATE,DELETE</i>
      ->     <i>ON mailsql.*</i>
      ->     <i>TO mailsql@localhost</i>
      ->     <i>IDENTIFIED BY '$password';</i>

      ->     <i>quit</i>
<codenote>Stellen Sie sicher dass der neue User zum MySQL Server connecten kann.</codenote>

# <i>mysql -u mailsql -p mailsql</i>
</pre>

<p>
Unsere neue Datenbank enthält Standardwerte für zwei Domains. Die folgenden Tabellen sind enthalten:
</p>

<ul>
  <li>alias - lokale email aliases und mailman alias Informationen</li>
  <li>relocated - Zurückgesetzte User</li>
  <li>transport - Mail Transport Informationen für alle Domains, die Sie hosten</li>
  <li>users - Alle Userinformationen</li>
  <li>virtual - Virtuelle E-Mail-Domain Aliase.</li>
</ul>



<pre caption="Beispiel Einträge für die Tabelle alias" >
id   alias    destination
1    root     foo@bar.com
2  postmaster foo@bar.com
</pre>

<pre caption="user table sample" >
id email            clear     name     uid     gid     homedir     \
  maildir                                quota  postfix
10 foo@virt-bar.org $password realname virtid  virtid  /home/vmail \
  /home/vmail/virt-bar.org/foo/.maildir/        y
13 foo@bar.com      $password realname localid localid /home/foo   \
  /home/foo/.maildir/                           y
</pre>

<pre caption="Beispiel Einträge für die Tabelle transport" >
id   domain       destination
1    bar.com      local:
2    virt-bar.org virtual:
</pre>

<pre caption="Beispiel Einträge für die Tabelle virtual" >
id   email            destination
3   root@virt-bar.org other@email.address
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Apache und phpMyAdmin</title>
<section>
<body>

<p>
Als nächstes installieren wir Apache und eine Schnittstelle mit der wir die
Datenbank einfacher editieren können.
</p>

<pre caption="Apache und phpMyAdmin installieren" >
# <i>emerge apache mod_php phpmyadmin</i>
</pre>

<p>
Es existieren massig Anleitungen wie man einen Apache mit PHP aufsetzt, wie
diesee <uri>http://www.linuxguruz.org/z.php?id=31</uri>. Es gibt auch Postings
auf <uri>http://forums.gentoo.org</uri> wie man Probleme mit der Installation
löst (suchen Sie nach 'apache php'). Der Author wird auf das hier nicht
eingehen. Setzen Sie den Apache mit PHP auf und fahren Sie mit dem HowTo fort.
Sie müssen auf jedenfall eine .htaccess Datei in ihrem phpmyadmin Verzeichnis
anlegen. Falls Sie diese Anweisung nicht befolgen, kann es vorkommen, daß Ihre
phpmyadmin Seite von Suchmaschinen indiziert und so via z.B. Goggle erreichbar
wird. Jeder könnte auf Ihre Datenbanken zugreifen und sie verändern. Es gibt
sehr viele HowTos dazu
(<uri>http://www.csoft.net/docs/micro/htaccess.html.en</uri>).
</p>

<p>
Jetzt werden wir die Apachezertifikate installieren. Die Apache-SSL-Anweisungen,
die Sie benötigen sind:
</p>

<ul>
  <li>SSLCertificateFile /path/to/certs/new.cert.cert</li>
  <li>SSLCertificateKeyFile /path/to/certs/new.cert.key</li>
</ul>


<pre caption="Apache-SSL-Zertifikate installieren" >
# <i>cp /etc/ssl/misc/new.cert.cert /etc/apache/conf/ssl/</i>
# <i>cp /etc/ssl/misc/new.cert.key /etc/apache/conf/ssl/</i>
# <i>nano -w /etc/apache/conf/vhosts/ssl.default-vhost.conf</i>
<codenote>Ändern Sie die folgenden Parameter:</codenote>

ServerName host.domain.name
ServerAdmin your@email.address
SSLCertificateFile /etc/apache/conf/ssl/new.cert.cert
SSLCertificateKeyFile /etc/apache/conf/ssl/new.cert.key

# <i>/etc/init.d/apache restart</i>
</pre>

<note>
Wenn Sie bereits eine existierende Apache-Installation haben, werden Sie
wahrscheinlich einen kompletten Serverreboot durchführen müssen. Überprüfen
Sie Ihre Logs um sicherzustellen, dass der Apache erfolgreich gestartet wurde.
</note>

<p>
Konfigurieren Sie phpMyAdmin.
</p>

<pre caption="Konfigurieren Sie phpMyAdmin." >
# <i>nano -w /var/www/localhost/htdocs/phpmyadmin/config.inc.php</i>
<codenote>Ändern Sie die folgenden Parameter:</codenote>

$cfg['Servers'][$i]['host'] = 'localhost';          // MySQL hostname
$cfg['Servers'][$i]['controluser'] = 'mailsql';     // MySQL Kontroll-Benutzereinstellung
                                                    // (dieser Benutzer muss Leseberechtigung
$cfg['Servers'][$i]['controlpass'] = '$password';   // für die &quot;mysql/user&quot;
                                                    // und &quot;mysql/db&quot; Tabellen besitzen)
$cfg['Servers'][$i]['user'] = 'mailsql';            // MySQL Benutzer
$cfg['Servers'][$i]['password'] = '$password';      // MySQL Passwort
</pre>

<p>
Betreten Sie nun die phpmyadmin Seite und blättern Sie durch die Tabellen.
Fügen Sie ihre lokalen Aliase ein, editieren Sie die Usertabelle und fügen
Sie einen Testuser hinzu, ändern Sie die Transporttabelle um Informationenen
Ihrer Domains hinzuzfügen. Die vorgegeben Einträge sollten ausreichend sein
um zu erkennen welche Werte wo eingetragen werden müssen. Stellen Sie sicher,
dass die eingetragenen Informationen fehlerfrei sind. Das Homeverzeichnis
lokaler User sollte existieren und die korrekte uid/gid haben. Die
Mailverzeichnise sollten automatisch von Postfix erstellt werden wenn es eine
Email für den User empfängt und ausliefert. Es ist also eine gute Idee jedem
User eine &quot;Willkommens-Email&quot; zu schicken, nachdem Sie den Account
angelegt haben. Das stellt sicher, dass ein .maildir angelegt wird.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Der vmail User</title>
<section>
<body>

<p>
Jetzt werden wir einen Benutzeraccount für die virtuellen Benutzer anlegen.
</p>

<pre caption="Den vmail Account anlegen" >
# <i>adduser -d /home/vmail -s /bin/false vmail</i>
# <i>uid=`cat /etc/passwd | grep vmail | cut -f 3 -d :`</i>
# <i>groupadd -g $uid vmail</i>
# <i>mkdir /home/vmail</i>
# <i>chown vmail: /home/vmail</i>
</pre>

<p>
Wenn Sie virtuelle Benutzer anlegen, verwenden Sie vmail uid, gid und homedir
des vmail users. Wenn Sie lokale Accounts anlegen, verwenden sie uid, gid und
homedir des Users. Der Autor wollte eine Adminseite dafür erstellen, aber
ist noch nicht dazugekommen, da phpmyadmin für diese Zwecke voll und ganz
reicht.
</p>

</body>
</section>
</chapter>

<chapter>
<title>MySQL Authentifikation und Vhosts einstellen</title>
<section>
<body>

<p>
Als nächstes werden wir Courier-imap und Postfix so einstellen, dass es unsere
MySQL Datenbank für die Authentifizierung verwendet. In den folgenden
Beispielen müssen Sie $password durch das MySQL Passwort für den mailsql user
ersetzen.
</p>

<pre>
# <i>emerge pam_mysql</i>
# <i>nano -w /etc/pam.d/imap</i>
<codenote>Kommentieren Sie die existierenden Zeilen aus und fügen Sie folgendes hinzu.</codenote>

#auth       required     pam_nologin.so
#auth       required     pam_stack.so service=system-auth
#account    required     pam_stack.so service=system-auth
#session    required     pam_stack.so service=system-auth

auth     optional       pam_mysql.so host=localhost db=mailsql user=mailsql \
  passwd=$password table=users usercolumn=email passwdcolumn=clear crypt=0
account  required       pam_mysql.so host=localhost db=mailsql user=mailsql \
  passwd=$password table=users usercolumn=email passwdcolumn=clear crypt=0

# <i>nano -w /etc/pam.d/pop3</i>
# <i>nano -w /etc/pam.d/smtp</i>
<codenote>Führen Sie die obigen Änderungen auch an den pop3 und smtp Dateien durch.</codenote>
</pre>

<p>
Nun müssen wir die Authentifizierungseinstellungen des Couriers editieren.
</p>

<pre>
# <i>nano -w /etc/courier-imap/authdaemonrc</i>
authmodulelist=&quot;authmysql authpam&quot;

# <i>nano -w /etc/courier-imap/authdaemond.conf</i>
AUTHDAEMOND=&quot;authdaemond.mysql&quot;

# <i>nano -w /etc/courier-imap/authmysqlrc</i>
MYSQL_SERVER            localhost
MYSQL_USERNAME       mailsql
MYSQL_PASSWORD      $password
MYSQL_DATABASE          mailsql
MYSQL_USER_TABLE        users
#MYSQL_CRYPT_PWFIELD    crypt (Stellen Sie sicher dass der Wert auskommentiert ist. Wir verwenden keine Verschlüsselung.)
MYSQL_CLEAR_PWFIELD     clear
MYSQL_UID_FIELD         uid
MYSQL_GID_FIELD         gid
MYSQL_LOGIN_FIELD       email
MYSQL_HOME_FIELD        homedir
MYSQL_NAME_FIELD        name
MYSQL_MAILDIR_FIELD     maildir

# <i>/etc/init.d/authdaemond restart</i>
# <i>/etc/init.d/saslauthd restart</i>
</pre>

<p>
Wir sind fast fertig. Nun setzten wir die restlichen Einstellungen, die
Postfix für die Zusammenarbeit mit der Datenbank benötigt, auf.
</p>

<pre caption="/etc/postfix/mysql-aliases.cf" >
# <i>nano -w /etc/postfix/mysql-aliases.cf</i>
# mysql-aliases.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = alias
select_field    = destination
where_field     = alias
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-relocated.cf" >
# <i>nano -w /etc/postfix/mysql-relocated.cf</i>
# mysql-relocated.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = relocated
select_field    = destination
where_field     = email
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-transport.cf (optional)" >
# <i>nano -w /etc/postfix/mysql-transport.cf</i>
# mysql-transport.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = transport
select_field    = destination
where_field     = domain
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-gid.cf (optional)" >
# <i>nano -w /etc/postfix/mysql-virtual-gid.cf</i>
#myql-virtual-gid.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = gid
where_field     = email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-maps.cf" >
# <i>nano -w /etc/postfix/mysql-virtual-maps.cf</i>
#myql-virtual-maps.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = maildir
where_field     = email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-uid.cf (optional)" >
# <i>nano -w /etc/postfix/mysql-virtual-uid.cf</i>
# mysql-virtual-uid.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = uid
where_field     = email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual.cf" >
# <i>nano -w /etc/postfix/mysql-virtual.cf</i>
# mysql-virtual.cf

user         = mailsql
password     = $password
dbname       = mailsql
table        = virtual
select_field = destination
where_field  = email
hosts        = unix:/var/run/mysqld/mysqld.sock
</pre>

<p>
Editieren Sie nochmals die <path>/etc/postfix/main.cf</path>.
</p>

<pre caption="/etc/postfix/main.cf" >
# <i>nano -w /etc/postfix/main.cf</i>
alias_maps = mysql:/etc/postfix/mysql-aliases.cf
relocated_maps = mysql:/etc/postfix/mysql-relocated.cf

local_transport = local
local_recipient_maps = $alias_maps $virtual_mailbox_maps unix:passwd.byname

virtual_transport = virtual
virtual_mailbox_domains =
      virt-bar.com,
      $other-virtual-domain.com

virtual_minimum_uid = 1000
virtual_gid_maps = static:$vmail-gid
virtual_mailbox_maps = mysql:/etc/postfix/mysql-virtual-maps.cf
virtual_alias_maps = mysql:/etc/postfix/mysql-virtual.cf
virtual_uid_maps = static:$vmail-uid
virtual_mailbox_base = /
#virtual_mailbox_limit =
</pre>

<p>
Aus Sicherheitsgründen sollten Sie die Berechtigungen der
<path>/etc/mail/mysql-*.cf</path> Dateien ändern:
</p>

<pre caption="Ändern der Berechtigungen">
# <i>chmod 640 /etc/postfix/mysql-*.cf</i>
# <i>chgrp postfix /etc/postfix/mysql-*.cf</i>
</pre>

<p>
Transport, virtual-gid und virtual-id sind unter Postfix 2.0.x nicht mehr
nötig. Die Tabellen sind immernoch enthalten, falls Sie sie benutzen wollen.
</p>

<note>
Der Autor empfiehlt ihnen VIRTUAL_README zu lesen, falls Sie mehr Informationen
dazu benötigen.
</note>

<pre>
# <i>postfix reload</i>
</pre>

<p>
Jetzt sollten Sie einen funktionierenden Mailhost haben. Benutzer sollten sich
mit ihrer Kompletten E-Mail-Adresse und dem Passwort über die SQL Tabelle
durch POP3, IMAP und SMTP authentifizieren können. Sie sollten an dieser
Stelle überprüfen ob alles richtig arbeitet. Wenn Probleme auftreten dann
sollten Sie den Troubleshooting Teil am Ende des HowTos lesen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Squirrelmail</title>
<section>
<body>

<pre>
# <i>emerge squirrelmail</i>
<codenote>Der Author empfiehlt einen Link zu erstellen. Dadurch erhalten Sie eine kürzere URL.</codenote>

# <i>ln -s /var/www/localhost/htdocs/squirrelmail/ /var/www/localhost/htdocs/mail</i>
# <i>cd /var/www/localhost/htdocs/mail/config</i>
# <i>perl ./conf.pl</i>
<codenote>Ändern Sie die Organisation, Server und Ordner Einstellungen für squirrelmail.</codenote>
<codenote>Jetzt sollten Sie sich in squirrelmail mit Ihrer kompletten E-Mail-Adresse einloggen</codenote>
<codenote>und das Setup benutzen  können.</codenote>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Mailman</title>
<section>
<body>

<p>
Der letzte Schritt: mailman. Die neue Version hat einen sehr guten Virtual
Domain Support. Damit dass Paket richtig mit virtuellen Domains
zusammenarbeitet müssen wir einiges editieren. Sie sollten die mailman
Dokumentation und die README.POSTFIX.gz lesen damit sie verstehen was hier
geschieht.
</p>

<p>
Die aktuellen Versionen von mailman werden nach <path>/usr/local/mailman</path>
installiert. Wenn Sie wie ich den Installationspfad ändern möchten können
Sie die INSTALLDIR Variable im ebuild ändern.
</p>

<pre caption="/usr/portage/net-mail/mailman/mailman-$ver.ebuild">
# <i>nano -w /usr/portage/net-mail/mailman/mailman-$ver.ebuild</i>
MAILGID="280"
<codenote>Setzen Sie die MAILGID auf die mailman Gruppe anstatt auf nobody.</codenote>
<codenote>Das wird für die Postfixintegration benötigt.</codenote>
</pre>

<pre>
# <i>emerge mailman</i>
<codenote>Dieses Paket ist momentan maskiert. Sie werden es unmaskieren oder </codenote>
<codenote>emerge den expliziten Pfad zum ebuild geben müssen. Wenn es installiert </codenote>
<codenote>ist folgen Sie den Anweisungen in der README.gentoo.gz mit der Ausnahme </codenote>
<codenote>dass dass sie nicht alle aliases zu /etc/mail/aliases hinzufügen.</codenote>
<codenote>Wir werden stattdessen die komplette Datenbank zu Postfix linken.</codenote>

# <i>zless /usr/share/doc/mailman-$ver/README.gentoo.gz</i>
</pre>

<pre caption="Standardwerte einstellen: Mailman/Defaults.py">
# <i> nano -w /var/mailman/Mailman/Defaults.py</i>
<codenote>Setzen Sie die Werte für Ihre Standarddomain, virtuelle Domains werden als nächstes gesetzt.</codenote>
DEFAULT_EMAIL_HOST = 'domain.com'
DEFAULT_URL_HOST = 'www.domain.com'
</pre>

<pre caption="mailman config: mm_cfg.py">
# <i>nano -w /var/mailman/Mailman/mm_cfg.py</i>
MTA = "Postfix"
POSTFIX_STYLE_VIRTUAL_DOMAINS = ['virt-domain.com', 'virt.domain2.com']	
add_virtualhost('www.virt.domain.com', 'virt.domain.com')
add_virtualhost('www.virt.domain2.com', 'virt.domain2.com')
<codenote>Diese Werte werden für ein funktionierendes mailman benötigt.</codenote>
</pre>

<pre>
<codenote>Wenn Sie damit fertig sind, tragen Sie Ihre erste Liste ein.</codenote>

# <i>su mailman</i>
# <i>cd ~</i>
# <i>bin/newlist test</i>
Enter the email of the person running the list: your@email.address
Initial test password:
Hit enter to continue with test owner notification...
<codenote>Virtual Domain Listen werden im</codenote>
<codenote>list@domain.com Listennamen eingetragen</codenote>
# <i>bin/genaliases</i>
<codenote>Wenn Ihre aliase generiert wurden,</codenote>
<codenote>stellen Sie sicher dass sie erfolgreich eingetragen wurden.</codenote>

# <i>nano -w data/aliases</i>
# STANZA START: test
# CREATED:
test:             "|/var/mailman/mail/mailman post test"
test-admin:       "|/var/mailman/mail/mailman admin test"
test-bounces:     "|/var/mailman/mail/mailman bounces test"
test-confirm:     "|/var/mailman/mail/mailman confirm test"
test-join:        "|/var/mailman/mail/mailman join test"
test-leave:       "|/var/mailman/mail/mailman leave test"
test-owner:       "|/var/mailman/mail/mailman owner test"
test-request:     "|/var/mailman/mail/mailman request test"
test-subscribe:   "|/var/mailman/mail/mailman subscribe test"
test-unsubscribe: "|/var/mailman/mail/mailman unsubscribe test"
# STANZA END: test

# <i>/etc/init.d/mailman start</i>
# <i>rc-update add mailman default</i>
<codenote>Damit startet mailman sofort beim booten.</codenote>
</pre>

<pre caption="mailman alias Support für postfix">
# <i>nano -w /etc/postfix/main.cf</i>
owner_request_special = no
recipient_delimiter = +
<codenote>Lesen Sie README.POSTFIX.gz für Details</codenote>

alias_maps     =
      hash:/var/mailman/data/aliases,
      mysql:/etc/postfix/mysql-aliases.cf

virtual_alias_maps =
      hash:/var/mailman/data/virtual-mailman,
      mysql:/etc/postfix/mysql-virtual.cf
<codenote>Hiermit bekommen Sie mailman alias file support für postfix</codenote>
<codenote>Sie können hier auch selbstverständlich die MySQL Tabellen eintragen, </codenote>
<codenote>aber ich hasse es das von Hand zu tun. Wenn Sie keine virtuellen Domains benutzen</codenote>
<codenote>können Probleme auftreten.</codenote>
</pre>

<p>
Sie sollten jetzt in der Lage sein Listen für jede Ihrer Domains auf dem
Server einzurichten. Sie müssen alle Befehle hierfür als mailmanuser ausführen.
(<c>su mailman</c>). Andernfalls werden die Rechte falsch sein und Sie werden
das reparieren müssen. Lesen Sie die mailman Dokumentation um mehr über das
Erstellen und Verwalten von Listen zur erfahren.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Inhalte filtern unnd Anti-Virus</title>
<section>
<body>

<p>
In Bearbeitung...es wäre schon längst gemacht, aber der Author benötigt
Unterstützung in Sachen Perl und Kontrolltests um das zu verwirklichen.
Wenn Sie ihm helfen wollen, dann schicken Sie ihm bitte eine Mail.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Die Arbeiten abschließen</title>
<section>
<body>

<p>
Wenn Sie mit all dem fertig sind schalten Sie den verbose Modus in
<path>/etc/postfix/master.cf</path> ab. Sie werden sehr wahrscheinlich auch
die Services in die Startup-Routine einbinden wollen, damit sie sofort nach
dem booten wieder verfügbar sind. Fügen Sie die gewünschten Services hinzu:
apache, mysql, saslauthd, postfix, courier-imapd, courier-imapd-ssl,
courier-pop3d und courier-pop3d-ssl können, je nachdem welche Services Sie
zur Verfügung stellen möchten, hinzugefügt werden. Der Author hat hier alle
aktiviert.
</p>

<pre caption="Abschließende Arbeiten">
# <i>postfix reload</i>
# <i>rc-update add $service default</i>
</pre>

<p>
<e>Haben Sie Spaß!</e>
</p>

</body>
</section>
</chapter>

<chapter>
<title>Troubleshooting</title>
<section>
<title>Einführung</title>
<body>

<p>
Troubleshooting: Dies ist eine kurze Fehlersucheanleitung. Sie deckt nicht
alles ab aber hilft Ihnen die Probleme zu lokalisieren. Bei solch einem
komplexen System wie diesem, ist es unumgänglich dass Sie sich auf die nicht
funktionierende Komponente beschränken können. Der Author startet bei der
Basis des Systems und schließt dabei Komponente aus bis er den Fehler gefunden
hat.
</p>

</body>
</section>
<section>
<title>Step 1: Überprüfen Sie Ihre Konfigurationsdateien.</title>
<body>

<p>
Tippfehler sind gefährlich, besonders wenn man mit Authentifizierungssystem
arbeitet. Suchen Sie in den Konfigurationsdateien und in der Datenbank nach
Tippfehlern. Sie können so viele Fehler suchen wie Sie wollen - wenn die
richtigen Informationen im System nicht übertragen werden, wird es nicht
funktionieren. Wenn Sie eine Konfigurationsdatei editiert haben, müssen
Sie den Service neu starten damit die Änderungen übernommen werden.
</p>

<pre>
# <i>/etc/init.d/service restart</i>
</pre>

</body>
</section>
<section>
<title>Step 2: Sind die benötigten Services gestartet?</title>
<body>

<p>
Wenn sie nicht gestartet sind dann starten Sie die Services. Es ist sehr
schwer einen Service zu reparieren, der nicht gestartet ist. Manchmal kann
ein Service gestartet sein, aber trotzdem den Dienst komplett verweigern.
Manchmal wenn schlechte Einstellungen verwendet werden oder schlechte
Übertragungen in den Mailkomponenten gelangen wird der Service sich aufhängen
und seinen Port belegen, damit kein anderer Prozess darauf zugreifen kann. Oft
können Sie das mit netstat feststellen. Wenn Sie eine Zeit lang gewartet haben
können Sie den Server auch einfach rebooten. Das wird alle hängenden Services
bereinigen. In dem &quot;sauberen&quot; können Sie das ganze dann nochmal
versuchen.
</p>

<pre>
# <i>/etc/init.d/$service status</i>
# <i>netstat -a | grep $service (or $port)</i>
</pre>

</body>
</section>
<section>
<title>Step 3: Benutzen alle Services die aktuellen Konfigurationsdateien?</title>
<body>

<p>
Wenn Sie Änderungen an einer Konfigurationsdatei vornehnmen, muss der Service
neu gestartet werden, um sicherzugehen dass er alle Einstellugngen übernimmt.
Einige Services wie Postfix können Ihnen die verwendeten Einstellungen anzeigen.
</p>

<pre>
# <i>apachectl fullstatus</i> (needs lynx installed)
# <i>apachectl configtest</i> (checks config sanity)
# <i>postconf -n</i> (will tell you exactly what param's postfix is using)
# <i>/etc/init.d/$service restart</i>
</pre>

</body>
</section>
<section>
<title>Step 4: Kontrollieren Sie die Logdateien.</title>
<body>

<p>
Logdateien sind Ihr Freund. Der Author überprüft im nächsten Schritt immer die
Logdateien. Oft ist es hilfreich wenn man die fehlgeschlagenen Operationen
nochmal wiederholt. Dadurch hat man die Fehlermeldung am Ende (oder Anfang,
je nach Logger) der Logdatei anstatt irgendwo in der Mitte. Suchen Sie nach
einer Information in der Logdatei, die Ihnen helfen könnte eine Diagnose zu
erstellen oder den fehlerhaften Komponenten zu finden.
</p>

<pre>
# <i>kill -USR1 `ps -C metalog -o pid=`</i>(to turn off metalog buffering)
# <i>nano -w /var/log/mail/current</i>
# <i>cat /var/log/mysql/mysql.log</i>
# <i>tail /var/log/apache/error_log</i>
</pre>

<p>
Den depug_peer Parameter in der main.cf werden Sie wahrscheinlich auch als
nützlich empfinden können. Dadurch wird mehr geloggt als im Verbose Mode.
</p>

<pre caption="debug_peer support aktivieren">
# <i>nano -w /etc/postfix/main.cf</i>
debug_peer_level = 5
debug_peer_list = $host.domain.name
<codenote>Kommentieren Sie auch einen vorgeschlagenen Debuggerbefehl aus.</codenote>
</pre>

</body>
</section>
<section>
<title>Step 5:  Überprüfen Sie den Service.</title>
<body>

<p>
Dass SMTP, IMAP und POP3 zu Telnet Sessions antworten haben wir schon gesehen
als wir die Postfixkonfiguration überprüft hatten. Manchmal ist es hilfreich
wenn man eine Telnet Session zu dem Service öffnet und nachsieht was geschieht.
</p>

<pre>
# <i>telnet localhost $port</i>
<codenote>SMTP ist 25, IMAP ist 143, POP3 ist 110. Sie sollten wenigstens eine "OK"-Zeile sehen.</codenote>
<codenote>Dadurch sehen Sie dass der Service in diesem moment läuft und auf Anfragen antwortet.</codenote>

Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
* OK Courier-IMAP ready. Copyright 1998-2002 Double Precision, Inc.
</pre>

</body>
</section>
<section>
<title>Step 6: Manchmal bekommen Sie nur durch schwere Geschütze die gewünschte Information: strace.</title>
<body>

<p>
Sie sollten strace so oder so installiert haben. Es ist ein unbezahlbares
debugging tool. Mit strace können sie Prozesse von der Kommandozeile aus
starten und alle Systemaufrufe kontrollieren. strace gibt oft eine riesige
Menge von Daten aus. Sie werden es entweder in Echtzeit kontrollieren oder
die Ausgbae in eine Datei weiterleiten wollen.
</p>

<pre>
# <i>emerge strace</i>
# <i>strace $command</i>
# <i>strace -p `ps -C $service -o pid=`</i>
</pre>

</body>
</section>
<section>
<title>Step 7: Nachforschungen</title>
<body>

<p>
Wenn Sie den Fehler gefunden und behoben haben ist das gut. Wenn nicht werden
Sie wohl im Netz nach Informationen, die Ihnen weiterhelfen suchen müssen.
Hier ist eine Liste von Seiten auf denen Sie übprüfen können ob Ihr Problem
vielleicht schon einmal zuvor gelöst wurde. Es gibt dort auch wirklich gute
smtp-auth Installationsanleitungen, die einige nette Ideen für die
Fehlersuchen beinhalten.
</p>

<ul>
  <li>
    <uri>http://forums.gentoo.org/</uri> - Großartiges Forum für Gentoo User
  </li>
  <li>
    <uri>http://bugs.gentoo.org/</uri> - Fehlerdatenbank für Gentoo - Ein guter Ort um nach spezillen Fehlern zu suchen
  </li>
  <li>
    <uri>http://postfix.state-of-mind.de/</uri> - smtp-auth Installation
  </li>
  <li>
    <uri>http://marc.theaimsgroup.com/?l=postfix-users</uri> - Postfix Mailinglisten mit Suchfunktion
  </li>
  <li>
    <uri>http://sourceforge.net/mailarchive/forum.php?forum_id=6705</uri> - Courier-Imap Mailinglisten ohne Suchfunktion
  </li>
  <li>
    <uri>http://www.google.com/</uri> - Wenn alles schief geht dann gibt es immer noch google, welches mich noch niemals im Stich gelassen hat
  </li>
  <li>
    Auch der Author verbringt sehr viel Zeit auf irc.freenode.org #gentoo. Der IRC ist ein guter Ort um nach Hilfe zu fragen.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
