<?xml version = '1.0' encoding = 'UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- English CVS Version: 1.58 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/virt-mail-howto.xml,v 1.22 2007/09/11 21:39:20 keytoaster Exp $ -->

<guide link="/doc/de/virt-mail-howto.xml" lang="de">
<title>Leitfaden zum virtuellen Mailhosting System mit Postfix</title>

<author title="Autor" >
<mail link="antifa@gentoo.org" >Ken Nowack</mail>
</author>
<author title="Autor" >
<mail link="ezra@revoltltd.org" >Ezra Gorman</mail>
</author>
<author title="Bearbeiter">
<mail link="klasikahl@gentoo.org" >Zack Gilburd</mail>
</author>
<author title="Bearbeiter">
  <mail link="seather@scygro.za.net">Scygro</mail>
</author>
<author title="Bearbeiter">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Übersetzer">
  <mail link="mail@sebastianstumpf.de">Sebastian Stumpf</mail>
</author>
<author title="Übersetzer">
  <mail link="SirSeoman@gmx.de">Tobias Matzat</mail>
</author>
<author title="Übersetzer">
  <mail link="splee@uwaterloo.ca">Sophie Lee</mail>
</author>
<author title="Übersetzer">
  <mail link="keytoaster@gentoo.org">Tobias Heinlein</mail>
</author>
<author title="Korrektor">
  <mail link="grahl@gentoo.org">Jan Hendrik Grahl</mail>
</author>

<abstract>
Dieses Dokument zeigt wie man ein virtuelles Mailhosting System, basierend auf
postfix, mysql courier-imapd und cyrus-sasl erstellt.
</abstract>

<version>1.6</version>
<date>2007-08-24</date>

<chapter>
<title>Einführung</title>
<section>
<body>

<p>
Für die meisten Gentoo-Benutzer reicht ein einfacher E-Mail-Client und
fetchmail. Wenn Sie jedoch eine Domain auf Ihrem System hosten, werden Sie
einen voll ausgewachsenen MTA (Mail Transfer Agent) benötigen. Wenn sie mehrere
Domains hosten, dann werden Sie definitv etwas robusteres brauchen um alle
E-Mails Ihrer Benutzer zu verwalten. Dieses System wurde geschaffen um eine
elegante Lösung für die folgende Aspekte zu bieten.
</p>

<p>
Ein virtuelles Mailsystem muss fähig sein die E-Mails zahlreicher Domains mit
mehreren Benutzern über verschiedenste Schnittstellen zu verwalten. Das bringt
einige Probleme mit sich, die gelöst werden müssen. Was ist wenn Sie zum
Beispiel zwei Benutzer haben, die auf verschiedenen Domains die gleichen
Benutzernamen verwenden möchten? Wenn Sie IMAP Zugriff und SMPT-Auth anbieten,
wie kombinieren Sie dann die verschiedenen Authentifizierungsdienste zu einem
einzelnen System? Wie schaffen Sie Sicherheit für die zahlreichen Komponenten,
die das System umfasst? Wie werden Sie all das umsetzen?
</p>

<p>
Dieses HowTo zeigt Ihnen wie man ein Mailsystem aufsetzt, das fähig ist soviele
Domains zu verwalten wie Ihre Hardware verkraften kann, virtuelle Benutzer
unterstützt, die keinen Shell Account benötigen, domainspezifische Benutzernamen
hat, web, imap, smtp und pop3 Clients über eine einzige Datenbank
identifiziert, SSL für TLS (Transport Layer Security) verwendet, ein
Webinterface beinhaltet, Mailinglisten für jegliche Domain auf dem Rechner
verwalten kann und von einer schlanken, zentralen und bequemen MySQL-Datenbank
gesteuert wird.
</p>

<p>
Es gibt eine Menge von Möglichkeiten um ein virtuelles Mailsystem aufzubauen.
Bei den zahlreichen Alternativen kann ein anderes die beste Wahl für Ihren
speziellen Bedarf sein. Berücksichtigen Sie <uri>http://www.qmail.org/</uri>
und <uri>http://www.exim.org/</uri> um etwas über Ihre Alternativen zu
erfahren.
</p>

<p>
Die folgenden Pakete werden während dieser Einrichtung verwendet: apache,
courier-imap, courier-authlib, postfix, mod_php, phpmyadmin, squirrelmail,
cyrus-sasl, mysql, php und mailman.
</p>

<p>
Verwenden Sie folgende USE-Variablen in <path>/etc/make.conf</path> bevor Sie
mit dem Kompilieren der Pakete beginnen: <c>USE="mysql pam-mysql imap libwww
maildir sasl ssl"</c>. Andernfalls werden Sie sehr wahrscheinlich die
Pakete neu kompilieren müssen um die Unterstützungen, die von den verwendeten
Protokollen benötigt werden, zu erhalten. Außerdem sollten Sie alle anderen
Mail- und Netzwerk-Werte wie ipv6 aus den USE Flags entfernen.
</p>

<impo>
Sie brauchen eine Domain, oder wenigstens einen MX Eintrag für eine Domain, um
einen öffentlichen Mailserver zu betrieben. Im Idealfall haben Sie die Kontrolle
über mindestens zwei Domains um einen Vorteil aus Ihrem neuen Mailsystem zu
ziehen.
</impo>

<impo>
Stellen Sie sicher dass <path>/etc/hostname</path> den richtigen Hostname
Ihres Mailservers hat. Sie können jegliche Veränderungen an dieser Datei
aktivieren, indem Sie <c>/etc/init.d/hostname restart</c> ausführen. Überprüfen
Sie durch <c>hostname</c>, dass Ihr Hostname korrekt gesetzt wurde. Überprüfen
Sie auch, dass es keine widersprüchlichen Einträge in <path>/etc/hosts</path>
gibt.
</impo>

<note>
Es ist empfehlenswert, dass Sie das ganze Dokument lesen und sich mit allen
Schritten vertraut machen bevor Sie mit der Installation beginnen. Wenn Sie
Probleme mit einem Schritt haben sollten, konsultieren Sie den
Abschnitt zur Fehlersuche am Ende dieses Dokuments. Nicht alle der verwiesenen
Pakete sind nötig. Die Einrichtung ist sehr flexibel. Wenn Sie zum Beispiel
kein Webinterface benötigen, lassen Sie einfach den Abschnitt zu squirrelmail
aus.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Postfix Grundlagen</title>
<section>
<body>

<pre caption="Postfix installieren" >
# <i>emerge postfix</i>
</pre>

<warn>
Stellen Sie sicher, dass Sie keine anderen MTAs wie ssmtp, exim oder netqmail
installiert haben, andernfalls werden Sie sehr sicher GROßE
Schwierigkeiten bekommen.
</warn>

<p>
Nachdem Postfix installiert ist, ist es an der Zeit es zu konfigurieren.
Ändern Sie folgende Einstellungen in <path>/etc/postfix/main.cf</path>. Denken
Sie daran <c>$variables</c> dunch Ihre eigenen Namen zu ersetzen.
</p>

<pre caption="/etc/postfix/main.cf" >
myhostname = $host.domain.name
mydomain = $domain.name
inet_interfaces = all
mydestination = $myhostname, localhost.$mydomain $mydomain
mynetworks = my.ip.net.work/24, 127.0.0.0/8
home_mailbox = .maildir/
local_destination_concurrency_limit = 2
default_destination_concurrency_limit = 10
</pre>

<p>
Als nächstes ändern Sie folgendes in <path>/etc/postfix/master.cf</path>.
Dies wird die detaillierte Ausgabe für Fehlerbeseitigungen aktivieren.
</p>

<pre caption="/etc/postfix/master.cf" >
# service type  private unpriv  chroot  wakeup  maxproc command + args
#               (yes)   (yes)   (yes)   (never) (50)
#
==========================================================================
<comment>(Fügen Sie nur ein -v dem smtpd in der oberen Zeile hinzu)</comment>
smtp      inet  n       -       n       -       -       smtpd -v

</pre>

<p>
Editieren Sie nun <path>/etc/mail/aliases</path> um ihre lokalen Aliase
hinzuzufügen. Es sollte mindestens ein Alias für root gesetzt werden, wie:
<c>root: ihre@email.adresse</c>
</p>

<pre caption="postfix das erste Mal starten" >
# <i>/usr/bin/newaliases</i>
<comment>Das wird die neuen aliases installieren. Sie müssen das nur tun,
wenn Sie Aliase installieren oder aktualisieren wollen.</comment>

# <i>/etc/init.d/postfix start</i>
</pre>

<p>
Nun da postfix läuft, starten Sie ihren bevorzugten Konsolenmailclient und
senden sich selbst eine E-Mail. Ich empfehle <c>mutt</c> für alle meine
Konsolenmail. Stellen Sie sicher, dass postfix die Mails an lokale Benutzer
ausliefert. Wenn dies erledigt ist, geht es weiter mit dem nächsten Abschnitt.
</p>

<note>
Es wird empfohlen, dass Sie sicherstellen, dass diese grundlegende postfix
Einrichtung funktioniert, bevor Sie mit dem nächsten Schritt dieses
Leitfadens fortfahren.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Courier-imap</title>
<section>
<body>

<pre caption="Courier-imap und Courier-authlib installieren" >
# <i>emerge courier-imap courier-authlib</i>
</pre>

<pre caption="Courier-imap Konfiguration" >
# <i>cd /etc/courier-imap</i>
<comment>(Wenn Sie die SSL Unterstützung von courier-imap oder pop3 nutzen wollen,
müssen Sie Zertifikate dafür erstellen.
Dieser Schritt wird empfohlen. Wenn Sie SSL nicht nutzen wollen, lassen Sie ihn aus.)</comment>

# <i>nano -w pop3d.cnf</i>
# <i>nano -w imapd.cnf</i>
<comment>(Ändern Sie die C, ST, L, CN und email Parameter so, dass sie zu Ihrem Server passen.)</comment>

# <i>mkpop3dcert</i>
# <i>mkimapdcert</i>
</pre>

<pre caption="Starten Sie den gewünschten Courier Dienst" >
# <i>/etc/init.d/courier-imapd start</i>
# <i>/etc/init.d/courier-imapd-ssl start</i>
# <i>/etc/init.d/courier-pop3d start</i>
# <i>/etc/init.d/courier-pop3d-ssl start</i>
</pre>

<p>
Öffnen Sie den Mailclient Ihrer Wahl und stellen Sie sicher, dass alle
Verbindungen, die Sie gestartet haben, Mails empfangen und versenden können.
Natürlich können Sie sich auf keinem der Dienste einloggen, da die
Authentifizierung noch nicht konfiguriert wurde, aber es ist klug zu prüfen, ob
die Verbindungen selbst funktionieren.
</p>

<p>
Nun da die Grundlagen funktionieren, werden wir nun eine ganze Menge auf einmal
einrichten umd den Rest des Systems zum Laufen zu bringen. Nochmals: Stellen
Sie bitte sicher, dass alles was Sie bisher installiert haben richtig
funktioniert, bevor Sie weitermachen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Cyrus-sasl</title>
<section>
<body>

<p>
Als nächstes installieren wir cyrus-sasl. Sasl wird die AUTH-Variablen zu PAM
weiterleiten, welches die Informationen zu MySQL weiterleitet um die
Authentifikation der SMTP-Benutzer durchzuführen. In diesem HowTo werden wir
nicht feststellen dass SASL richtig arbeitet, bis MySQL nicht aufgesetzt ist
und einen Testbenutzer enthält. Dies ist in Ordnung, da wir letztendlich
gegen Mysql so oder so authentifizieren.
</p>

<pre caption="Cyrus-sasl Ebuild einstellen und installieren" >
# <i>emerge cyrus-sasl</i>
</pre>

<p>
Editieren Sie nun <path>/etc/sasl2/smtpd.conf</path>.
</p>

<pre caption="SASL starten" >
# <i>nano -w /etc/sasl2/smtpd.conf</i>
mech_list: PLAIN LOGIN
pwcheck_method: saslauthd
# <i>nano -w /etc/conf.d/saslauthd</i>
SASLAUTHD_OPTS="${SASLAUTH_MECH} -a rimap -r"
SASLAUTHD_OPTS="${SASLAUTHD_OPTS} -O localhost"
# <i>/etc/init.d/saslauthd start</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>SSL Zertifikate für Postfix und Apache</title>
<section>
<body>

<p>
Als nächstes erstellen wir einen Satz von Zertifikaten für Postfix und Apache.
</p>

<pre caption="SSL Zertifikate erstellen">
# <i>cd /etc/ssl/</i>
# <i>nano -w openssl.cnf</i>

<comment>Ändern Sie die folgenden Standardwerte für Ihre Domain:</comment>
countryName_default
stateOrProvinceName_default
localityName_default
0.organizationName_default
commonName_default
emailAddress_default.

<comment>(Wenn die Variablen nicht existieren, dann erstellen Sie sie an einem sinnvollen Platz.)</comment>


# <i>cd misc</i>
# <i>./CA.pl -newreq-nodes</i>
# <i>./CA.pl -newca</i>
# <i>./CA.pl -sign</i>
# <i>cp newcert.pem /etc/postfix</i>
# <i>cp newkey.pem /etc/postfix</i>
# <i>cp demoCA/cacert.pem /etc/postfix</i>
<comment>(Nun dasselbe für Apache.)</comment>

# <i>openssl req -new > new.cert.csr</i>
# <i>openssl rsa -in privkey.pem -out new.cert.key</i>
# <i>openssl x509 -in new.cert.csr -out new.cert.cert -req -signkey new.cert.key -days 365</i>
<comment>(Lassen Sie die Zertifikate einfach hier liegen.
Wir installieren sie nachdem der Apache installiert ist.)</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>SSL und SASL Unterstützung zu Postfix hinzufügen</title>
<section>
<body>

<p>
Editieren Sie nun die Postfix-Konfigurationsdateien, damit es mit SASL und SSL
umgehen kann. Fügen Sie die Parameter am Ende der Datei ein, damit man sie
später leicht finden kann.
</p>

<pre caption="/etc/postfix/main.cf" >
# <i>nano -w /etc/postfix/main.cf</i>

smtpd_sasl_auth_enable = yes
smtpd_sasl2_auth_enable = yes
smtpd_sasl_security_options = noanonymous
broken_sasl_auth_clients = yes
smtpd_sasl_local_domain =

<comment>(Die broken_sasl_auth_clients Option und die login auth Methode
sind nur für Outlook und Outlook Express; beide sind undokumentiert.
smtpd_sasl_local_domain hängt, für Clients die SMTP-AUTH verwenden, einen
Domainnamen an. Stellen Sie sicher dass kein Wert für die Variable gesetzt
ist, sonst werden Ihre Benutzernamen von Postfix verstümmelt und sie werden
nicht in der Lage sein zu authentifizieren.)</comment>

smtpd_recipient_restrictions =
        permit_sasl_authenticated,
        permit_mynetworks,
        reject_unauth_destination

<comment>(Die nächsten zwei Optionen aktivieren ausgehende Verschlüsselung.)</comment>
smtp_use_tls = yes
smtp_tls_note_starttls_offer = yes
smtpd_use_tls = yes
#smtpd_tls_auth_only = yes
smtpd_tls_key_file = /etc/postfix/newkey.pem
smtpd_tls_cert_file = /etc/postfix/newcert.pem
smtpd_tls_CAfile = /etc/postfix/cacert.pem
smtpd_tls_loglevel = 3
smtpd_tls_received_header = yes
smtpd_tls_session_cache_timeout = 3600s
tls_random_source = dev:/dev/urandom

<comment>(smtpd_tls_auth_only ist auskommentiert um uns das Testen zu
erleichtern. Sie können es später wieder aktivieren, wenn Sie wünschen.)</comment>

# <i>postfix reload</i>
</pre>

<p>
Jetzt werden wir überprüfen ob Postfix unsere neuen Einstellungen übernommen
hat. Dafür werden wir <c>telnet</c> (enthalten u.a. in
<c>net-misc/netkit-telnetd</c>), auch wenn Sie <c>nc</c> (aus
<c>net-analyzer/netcat</c>) verwenden können:
</p>

<pre caption="Überprüfen des SASL und TSL Supports" >
# <i>telnet localhost 25</i>

Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
220 mail.domain.com ESMTP Postfix
<i>EHLO domain.com</i>
250-mail.domain.com
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-STARTTLS
250-AUTH LOGIN PLAIN
250-AUTH=LOGIN PLAIN
250-XVERP
250 8BITMIME
<i>^]</i>
telnet> <i>quit</i>
</pre>

<p>
Stellen Sie sicher dass die obigen AUTH und STARTTLS Zeilen nun in Ihrer
Postfix-Installation erscheinen. Wie schon gesagt, wird AUTH zum jetzigen
Zeitpunkt nicht funktonieren, weil sals versuchen wird die Benutzer über seine
sasldb, anstatt über die shadow Datei - aus irgendeinem Grund, zu
authentifizieren, welche wir noch nicht eingerichtet haben. Also werden wir nun
mysql dafür einrichten, all unsere auth und virtual domain Informationen
aufzunehmen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Der Benutzer vmail</title>
<section>
<body>

<p>
Bevor wir unsere virtuelle Mailhosting Umgebung aufsetzen, erstellen wir einen
funktionellen Benutzer, unter dem die virtuellen Mailboxen gehostet werden
werden. Um der Klarheit willen nennen wir diesen <e>vmail</e>:
</p>

<pre caption="Den Benutzer vmail anlegen" >
  # <i>adduser -d /home/vmail -s /bin/false -m vmail</i>
</pre>

<p>
Nun haben Sie also den vmail Benutzer angelegt. Sie können mehrere Konten
erstellen, falls Sie wollen (um eine gewisse Struktur in Ihren virtuellen
Mail-Konten zu behalten). Auf die Benutzer-ID, Gruppen-ID und
Heimatverzeichnisse wird in den MySQL-Tabellen verwiesen.
</p>

<p>
Neben den Benutzerkonten müssen wir auch den Ort anlegen, an dem sich die
Mailboxen befinden werden:
</p>

<pre caption="Mailboxen erstellen">
# <i>mkdir -p /home/vmail/virt-domain.com/foo</i>
# <i>chown -R vmail:vmail /home/vmail/virt-domain.com</i>
# <i>maildirmake /home/vmail/virt-domain.com/foo/.maildir</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>MySQL</title>
<section>
<body>

<p>
Als nächstes installieren und konfigurieren wir MySQL. Sie werden für diesen
Schritt die <uri
link="http://www.gentoo.org/doc/en/files/genericmailsql.sql">genericmailsql.sql</uri>
Dumpdatei benötigen.
</p>

<pre caption="MySQL installieren und konfigurieren" >
# <i>emerge mysql</i>

# <i>/usr/bin/mysql_install_db</i>
<comment>(Nach diesem Befehl befolgen Sie die Anweisungen auf ihrem Bildschirm,
um ein root-Passwort mit mysql, nicht mysqladmin, festzulegen. Andernfalls ist
Ihre DB weit offen.)</comment>

# <i>/etc/init.d/mysql start</i>
# <i>mysqladmin -u root -p create mailsql</i>
# <i>mysql -u root -p mailsql &lt; genericmailsql.sql</i>

# <i>mysql -u root -p mysql</i>
mysql> <i>GRANT SELECT,INSERT,UPDATE,DELETE</i>
      ->     <i>ON mailsql.*</i>
      ->     <i>TO mailsql@localhost</i>
      ->     <i>IDENTIFIED BY '$password';</i>
Query OK, 0 rows affected (0.02 sec)

mysql> <i>FLUSH PRIVILEGES;</i>
Query OK, 0 rows affected (0.00 sec)

mysql> <i>quit</i>
<comment>(Stellen Sie sicher dass der neue mailsql Benutzer sich mit dem MySQL-Server verbinden kann.)</comment>

# <i>mysql -u mailsql -p mailsql</i>
</pre>

<p>
Ihre neue Datenbank enthält Standardwerte und -tabellen für zwei Domains. Die
folgenden Tabellen sind enthalten:
</p>

<ul>
  <li>alias - lokale Email aliases und mailman alias Informationen</li>
  <li>relocated - umgezogene Benutzer Email-Zuweisung</li>
  <li>
    transport - Mail Transport Informationen für alle Domains, die Sie hosten
  </li>
  <li>users - Alle Benutzerinformationen</li>
  <li>virtual - Virtuelle E-Mail-Domain Aliase.</li>
</ul>



<pre caption="Beispieleinträge für die Tabelle alias" >
id   alias    destination
1    root     foo@bar.com
2  postmaster foo@bar.com
</pre>

<pre caption="Benutzer-Beispielstabelle" >
<comment>(Zeilenumbruch für Klarheit.)</comment>
id email            clear     name     uid     gid     homedir     \
  maildir                                quota  postfix
10 foo@virt-domain.com $password realname virtid  virtid  /home/vmail \
  /home/vmail/virt-domain.com/foo/.maildir/        y
13 foo@bar.com      $password realname localid localid /home/foo   \
  /home/foo/.maildir/                           y
</pre>

<p>
Die Werte der <c>virtid</c> uid und gid sollten die des <c>vmail</c>
Benutzers und der Gruppe sein.
</p>


<pre caption="Beispieleinträge für die Tabelle transport" >
id   domain       destination
1    bar.com      local:
2    virt-domain.com virtual:
</pre>

<pre caption="Beispieleinträge für die Tabelle virtual" >
id   email            destination
3   root@virt-domain.com other@email.address
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Apache und phpMyAdmin</title>
<section>
<body>

<p>
Als nächstes installieren wir Apache und eine Schnittstelle mit der wir die
Datenbank einfacher editieren können.
</p>

<pre caption="Apache und phpMyAdmin installieren" >
# <i>emerge apache phpmyadmin</i>
</pre>

<p>
Es existieren viele Anleitungen, wie man einen Apache mit PHP aufsetzt,
miteinbezogen die Leitfäden, die vom <uri link="/proj/en/php/">Gentoo PHP
Projekt</uri> bereit gestellt werden. Es gibt auch zahlreiche Einträge auf
<uri>http://forums.gentoo.org</uri>, wie man Probleme mit der Installation löst
(suchen Sie nach 'apache php'). Der Autor wird daher auf das hier nicht
eingehen. Setzen Sie Apache mit PHP auf und fahren Sie mit dem Howto fort. Sie
müssen auf jeden Fall eine .htaccess Datei in ihrem phpmyadmin Verzeichnis
anlegen. Falls Sie diese Anweisung nicht befolgen, wird es vorkommen, dass Ihre
phpmyadmin Seite von Suchmaschinen indiziert und so via z.B. Google erreichbar
wird. Jeder könnte auf Ihre Datenbanken zugreifen und sie verändern, wie es
ihnen beliebt, dies ist <e>nicht gut!</e> Es gibt sehr viele Howtos dazu, so
auch: <uri>http://www.csoft.net/docs/micro/htaccess.html.en</uri>.
</p>

<p>
Jetzt werden wir die Zertifikate für Apache installieren, die wir zuvor
erstellt haben. Die Apache-SSL-Anweisungen, die Sie benötigen, um die
folgenden Zertifikate zu verwenden, sind:
</p>

<ul>
  <li>SSLCertificateFile /path/to/certs/new.cert.cert</li>
  <li>SSLCertificateKeyFile /path/to/certs/new.cert.key</li>
</ul>


<pre caption="Apache-SSL-Zertifikate installieren">
# <i>cp /etc/ssl/misc/new.cert.cert /etc/apache2/ssl/</i>
# <i>cp /etc/ssl/misc/new.cert.key /etc/apache2/ssl/</i>
# <i>cd /etc/apache2/vhosts.d</i>
<comment>(Prüfen Sie, ob bereits ein ssl-vhost Template vorliegt. Kopieren Sie
dieses anstelle on default_vhost, falls dies der Fall ist)</comment>
# <i>cp 00_default_vhost.conf ssl-vhost.conf/</i>
# <i>nano -w ssl-vhost.conf</i>

<comment>(Ändern Sie die folgenden Parameter)</comment>
NameVirtualHost host.domain.name:443

&lt;VirtualHost host.domain.name:443&gt;
ServerName host.domain.name
ServerAdmin your@email.address

  DocumentRoot "/var/www/localhost/htdocs/phpmyadmin";
  &lt;Directory "/var/www/localhost/htdocs/phpmyadmin"&gt;
    ...
  &lt;/Directory&gt;

  SSLCertificateFile /etc/apache2/ssl/new.cert.cert
  SSLCertificateKeyFile /etc/apache2/ssl/new.cert.key
  SSLEngine on
    ...
&lt;/VirtualHost&gt;

# <i>nano -w /etc/conf.d/apache2</i>
<comment>(Fügen Sie -D SSL -D PHP5 zu APACHE2_OPTS hinzu)</comment>

# <i>/etc/init.d/apache2 restart</i>
</pre>

<p>
Konfigurieren Sie nun phpMyAdmin.
</p>

<pre caption="Konfigurieren von phpMyAdmin" >
# <i>cd /var/www/localhost/htdocs/phpmyadmin</i>
# <i>cp config.sample.inc.php config.inc.php</i>
# <i>nano -w config.inc.php</i>
<comment>(Ändern Sie die folgenden Parameter)</comment>
$cfg['blowfish_secret'] = 'someverysecretpassphraze';

$cfg['Servers'][$i]['host'] = 'localhost';          // MySQL hostname
$cfg['Servers'][$i]['controluser'] = 'mailsql';     // MySQL Kontroll-Benutzereinstellung
                                                    // (dieser Benutzer muss Leseberechtigung
$cfg['Servers'][$i]['controlpass'] = '$password';   // für die  "mysql/user"
                                                    // und "mysql/db" Tabellen besitzen)
$cfg['Servers'][$i]['user'] = 'mailsql';            // MySQL Benutzer
$cfg['Servers'][$i]['password'] = '$password';      // MySQL Passwort
</pre>

<p>
Betreten Sie nun die phpmyadmin Seite und blättern Sie durch die Tabellen.
Fügen Sie ihre lokalen Aliase ein, editieren Sie die Benutzertabelle, fügen
Sie einen Testbenutzer hinzu und ändern Sie die Transporttabelle, um
Informationen Ihrer Domains hinzuzfügen. Die vorgegeben Einträge sollten
ausreichend sein, um zu erkennen welche Werte wo eingetragen werden müssen.
Stellen Sie sicher, dass die eingetragenen Informationen fehlerfrei sind. Das
Heimatverzeichnis lokaler Benutzer sollte existieren und die korrekte uid/gid
haben. Die Mailverzeichnisse sollten automatisch von Postfix erstellt werden,
wenn der Benutzer seine erste Email erhält. Es ist also eine gute Idee jedem
Benutzer eine "Willkommens-Email" zu schicken, nachdem Sie den Account angelegt
haben. Das stellt sicher, dass ein .maildir angelegt wird.
</p>

</body>
</section>
</chapter>

<chapter>
<title>MySQL-Authentifikation und vhosts konfigurieren</title>
<section>
<body>

<p>
Als nächstes werden wir die Authentifizierung so konfigurieren, dass die
mailsql Datenbank in courier-imap und Postfix verwendet wird. In allen folgenden
Beispielen müssen Sie <c>$password</c> durch das Passwort des mailsql
Mysql-Benutzers ersetzen.
</p>

<pre caption="Authentifikation konfigurieren">
# <i>nano -w /etc/courier/authlib/authdaemonrc</i>
authmodulelist="authmysql authpam"

# <i>nano -w /etc/courier/authlib/authmysqlrc</i>
MYSQL_SERVER            localhost
MYSQL_USERNAME       mailsql
MYSQL_PASSWORD      $password
MYSQL_DATABASE          mailsql
MYSQL_USER_TABLE        users
<comment>(Stellen Sie sicher dass der Wert auskommentiert ist. Wir verwenden keine Verschlüsselung.)</comment>
#MYSQL_CRYPT_PWFIELD    crypt
MYSQL_CLEAR_PWFIELD     clear
MYSQL_UID_FIELD         uid
MYSQL_GID_FIELD         gid
MYSQL_LOGIN_FIELD       email
MYSQL_HOME_FIELD        homedir
MYSQL_NAME_FIELD        name
MYSQL_MAILDIR_FIELD     maildir

# <i>/etc/init.d/courier-authlib restart</i>
# <i>/etc/init.d/saslauthd restart</i>
</pre>

<p>
Wir sind fast fertig. Nun setzten wir die restlichen Einstellungen, die Postfix
für die Zusammenarbeit mit der Datenbank benötigt, auf. Denken Sie daran für
jeden Wert Ihren eigenen Benutzer, User-IT, Passwort, Alias, Email-Adresse usw.
einzusetzen.
</p>

<pre caption="/etc/postfix/mysql-aliases.cf" >
# <i>nano -w /etc/postfix/mysql-aliases.cf</i>
# mysql-aliases.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = alias
select_field    = destination
where_field     = alias
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-relocated.cf" >
# <i>nano -w /etc/postfix/mysql-relocated.cf</i>
# mysql-relocated.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = relocated
select_field    = destination
where_field     = email
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-transport.cf (optional)" >
# <i>nano -w /etc/postfix/mysql-transport.cf</i>
# mysql-transport.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = transport
select_field    = destination
where_field     = domain
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-gid.cf (optional)" >
# <i>nano -w /etc/postfix/mysql-virtual-gid.cf</i>
# myql-virtual-gid.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = gid
where_field     = email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-maps.cf" >
# <i>nano -w /etc/postfix/mysql-virtual-maps.cf</i>
# myql-virtual-maps.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = maildir
where_field     = email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-uid.cf (optional)" >
# <i>nano -w /etc/postfix/mysql-virtual-uid.cf</i>
# mysql-virtual-uid.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = uid
where_field     = email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual.cf" >
# <i>nano -w /etc/postfix/mysql-virtual.cf</i>
# mysql-virtual.cf

user         = mailsql
password     = $password
dbname       = mailsql
table        = virtual
select_field = destination
where_field  = email
hosts        = unix:/var/run/mysqld/mysqld.sock
</pre>

<p>
Editieren Sie nochmals die <path>/etc/postfix/main.cf</path>.
</p>

<pre caption="/etc/postfix/main.cf" >
# <i>nano -w /etc/postfix/main.cf</i>
<comment>(Stellen Sie sicher, dass keine weiteren alias_maps Definitionen
vorhanden sind)</comment>
alias_maps = mysql:/etc/postfix/mysql-aliases.cf
relocated_maps = mysql:/etc/postfix/mysql-relocated.cf

local_transport = local
local_recipient_maps = $alias_maps $virtual_mailbox_maps unix:passwd.byname

virtual_transport = virtual
<comment>(Die von mydestination aufgelisteten Domains sollten nicht im Parameter
virtual_mailbox_domains auftauchen)</comment>
virtual_mailbox_domains = virt-domain.com, $other-virtual-domain.com

virtual_minimum_uid = 1000
<comment>(Ersetzen Sie $vmail-gid durch die GID der Gruppe vmail)</comment>
virtual_gid_maps = static:$vmail-gid
virtual_mailbox_maps = mysql:/etc/postfix/mysql-virtual-maps.cf
virtual_alias_maps = mysql:/etc/postfix/mysql-virtual.cf
<comment>(Ersetzen Sie $vmail-uid durch die UID des Benutzers vmail)</comment>
virtual_uid_maps = static:$vmail-uid
virtual_mailbox_base = /
#virtual_mailbox_limit =
</pre>

<p>
Aus Sicherheitsgründen sollten Sie die Berechtigungen der
<path>/etc/mail/mysql-*.cf</path> Dateien ändern:
</p>

<pre caption="Ändern der Berechtigungen">
# <i>chmod 640 /etc/postfix/mysql-*.cf</i>
# <i>chgrp postfix /etc/postfix/mysql-*.cf</i>
</pre>

<p>
Seit Postfix 2.0.x gab es einige nennenswerte Änderungen, verglichen mit der
1.1.x Version. Genauer gesagt sind die Transport, virtual-gid und virtual-id
Tabellen nicht länger notwendig. Die Tabellen sind weiterhin enthalten, falls
Sie sie benutzen wollen.
</p>

<note>
Es empfiehlt sich die VIRTUAL_README, welche zur Postfix Dokumentation gehört,
zu lesen, falls Sie mehr Informationen dazu benötigen.
</note>

<pre caption="Postfix-Tabellen neu laden">
# <i>postfix reload</i>
</pre>

<p>
Jetzt sollten Sie einen funktionierenden Mailhost haben. Benutzer sollten sich
nun mit ihrer kompletten E-Mail-Adresse, über die SQL Tabelle, durch POP3, IMAP
und SMTP authentifizieren können. Sie sollten an dieser Stelle überprüfen ob
alles richtig arbeitet. Wenn Probleme auftreten dann sollten Sie den
Troubleshooting Abschnitt am Ende des Howtos lesen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Squirrelmail</title>
<section>
<body>

<pre caption="Squirrelmail installieren">
# <i>emerge squirrelmail</i>
<comment>(Richten Sie squirrelmail am localhost so ein, dass es mit http://localhost/mail erreicht werden kann)
(Setzen Sie Ihre Versionnummer anstatt 1.4.3a-r2 ein.)</comment>

# <i>webappconfig -- localhost --mail squirrelmail 1.4.3a-r2</i>
# <i>cd /var/www/localhost/htdocs/mail/config</i>
# <i>perl ./conf.pl</i>
<comment>(Ändern Sie die Organisation, Server und Ordner Einstellungen für
squirrelmail. Jetzt sollten Sie sich in squirrelmail mit Ihrer kompletten
E-Mail-Adresse einloggen und das Setup benutzen können.)</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Mailman</title>
<section>
<body>

<p>
Der letzte Schritt: mailman. Die neue Version hat einen sehr guten Virtual
Domain Support. Damit das Paket richtig mit virtuellen Domains
zusammenarbeitet, müssen wir einiges editieren. Sie sollten die mailman
Dokumentation und die README.POSTFIX.gz lesen damit sie verstehen was hier
geschieht.
</p>

<pre caption="Mailman installieren">
# <i>emerge mailman</i>
</pre>

<pre caption="Standardwerte einstellen: Mailman/Defaults.py">
# <i> nano -w /usr/local/mailman/Mailman/Defaults.py</i>
<comment>(Setzen Sie die Werte für Ihre Standarddomain, virtuelle Domains werden als nächstes gesetzt.)</comment>
DEFAULT_EMAIL_HOST = 'domain.com'
DEFAULT_URL_HOST = 'www.domain.com'
</pre>

<pre caption="mailman config: mm_cfg.py">
# <i>nano -w /usr/local/mailman/Mailman/mm_cfg.py</i>
MTA = "Postfix"
POSTFIX_STYLE_VIRTUAL_DOMAINS = ['virt-domain.com', 'virt.domain2.com']
add_virtualhost('www.virt.domain.com', 'virt.domain.com')
add_virtualhost('www.virt.domain2.com', 'virt.domain2.com')
<comment>(Diese Werte sind für Ihre virtuellen Domains notwendig, damit mailman funktionieren kann.)</comment>
</pre>

<pre caption="Letzter Schritt">
<comment>(Wenn Sie damit fertig sind, tragen Sie Ihre erste Liste ein.)</comment>

# <i>su mailman</i>
# <i>cd ~</i>
# <i>./bin/newlist --urlhost='www.virt-domain.com'
--emailhost='virt-domain.com' test</i>
Enter the email of the person running the list: <i>your@email.address</i>
Initial test password:
Hit enter to continue with test owner notification..
<comment>(Listen für virtuelle Domains können auch in der Listenform
list@domain.com eingetragen werden.)</comment>
# <i>./bin/genaliases</i>
<comment>(Nun da Ihre aliase generiert wurden,
stellen Sie sicher dass sie erfolgreich eingetragen wurden.)</comment>

# <i>nano -w data/aliases</i>
# STANZA START: test
# CREATED:
test:             "|/usr/local/mailman/mail/mailman post test"
test-admin:       "|/usr/local/mailman/mail/mailman admin test"
test-bounces:     "|/usr/local/mailman/mail/mailman bounces test"
test-confirm:     "|/usr/local/mailman/mail/mailman confirm test"
test-join:        "|/usr/local/mailman/mail/mailman join test"
test-leave:       "|/usr/local/mailman/mail/mailman leave test"
test-owner:       "|/usr/local/mailman/mail/mailman owner test"
test-request:     "|/usr/local/mailman/mail/mailman request test"
test-subscribe:   "|/usr/local/mailman/mail/mailman subscribe test"
test-unsubscribe: "|/usr/local/mailman/mail/mailman unsubscribe test"
# STANZA END: test

<comment>(Erstellen Sie die benötigte mailman Liste)</comment>
# <i>./bin/newlist mailman</i>
# <i>./bin/genaliases</i>

<comment>(Zum Benutzer root zurückkehren)</comment>
# <i>exit</i>

# <i>/etc/init.d/mailman start</i>
# <i>rc-update add mailman default</i>
<comment>(Um mailmain jetzt gleich und bei jedem Neustart zu starten.)</comment>
</pre>

<pre caption="mailman alias U für postfix">
# <i>nano -w /etc/postfix/main.cf</i>
owner_request_special = no
recipient_delimiter = +
<comment>(Lesen Sie README.POSTFIX.gz für Details.)</comment>

alias_maps     =
  hash:/usr/local/mailman/data/aliases,
  mysql:/etc/postfix/mysql-aliases.cf

virtual_alias_maps =
  hash:/usr/local/layman/data/virtual-mailman,
  mysql:/etc/postfix/mysql-virtual.cf
<comment>(Hiermit bekommen Sie mailman alias Dateiunterstützung für postfix
Sie können hier auch selbstverständlich die MySQL Tabellen eintragen,
aber ich hasse es das von Hand zu tun. Wenn Sie keine virtuellen Domains
benutzen können Probleme auftreten.)</comment>
</pre>

<p>
Sie sollten jetzt in der Lage sein Mailinglisten für jede Ihrer Domains auf dem
Server einzurichten. Sie müssen alle Befehle hierfür als mailman Benutzer
ausführen (<c>su mailman</c>). Andernfalls werden die Rechte falsch sein und
Sie werden sie korrigieren müssen. Lesen Sie die mailman Dokumentation um mehr
über das Erstellen und Verwalten von Listen zur erfahren.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Inhalte filtern und Anti-Virus</title>
<section>
<body>

<p>
Falls Sie Inhalte filtern oder Anti-Virus möchten, bitte lesen sie den
<uri link="/doc/en/mailfilter-guide.xml">Mailfilter Gateway Leitfaden</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Die Arbeiten abschließen</title>
<section>
<body>

<p>
Wenn Sie mit all dem fertig sind schalten Sie den verbose Modus in
<path>/etc/postfix/master.cf</path> ab. Sie werden sehr wahrscheinlich auch
die Dienste in die Startup-Routine einbinden wollen, damit sie sofort nach
einem Neustart wieder verfügbar sind. Fügen Sie die gewünschten Dienste hinzu:
apache, mysql, saslauthd, postfix, courier-imapd, courier-imapd-ssl,
courier-pop3d und courier-pop3d-ssl können, je nachdem welche Dienste Sie
zur Verfügung stellen möchten, hinzugefügt werden. Der Author hat hier alle
aktiviert.
</p>

<pre caption="Abschließende Arbeiten">
# <i>postfix reload</i>
# <i>rc-update add $dienst default</i>
</pre>

<p>
<e>Viel Spaß!</e>
</p>

</body>
</section>
</chapter>

<chapter>
<title>Troubleshooting</title>
<section>
<title>Einführung</title>
<body>

<p>
Troubleshooting: Dies ist eine kurze Fehlersucheanleitung. Sie deckt nicht
alles ab aber hilft Ihnen die Probleme zu lokalisieren. Bei solch einem
komplexen System wie diesem, ist es unumgänglich dass Sie sich auf die nicht
funktionierende Komponente beschränken können. Der Author startet bei der
Basis des Systems und schließt dabei Komponente aus bis er den Fehler gefunden
hat.
</p>

</body>
</section>
<section>
<title>Schritt 1: Überprüfen Sie Ihre Konfigurationsdateien.</title>
<body>

<p>
Tippfehler sind gefährlich, besonders wenn man mit Authentifizierungssystemen
arbeitet. Suchen Sie in den Konfigurationsdateien und in der Datenbank nach
Tippfehlern. Sie können so viel suchen wie Sie wollen - wenn die
richtigen Informationen ins System nicht übertragen werden, wird es nicht
funktionieren. Wenn Sie eine Konfigurationsdatei editiert haben, müssen
Sie den Dienst neu starten, damit die Änderungen übernommen werden.
</p>

<pre caption="Einen Dienst neu starten">
# <i>/etc/init.d/dienst restart</i>
</pre>

</body>
</section>
<section>
<title>Schritt 2: Sind die benötigten Dienste gestartet?</title>
<body>

<p>
Wenn sie nicht gestartet sind dann starten Sie die Dienste. Es ist sehr
schwer einen Dienst zu reparieren, der nicht gestartet ist. Manchmal kann
ein Dienst gestartet sein, aber trotzdem den Dienst komplett verweigern.
Manchmal wenn schlechte Einstellungen verwendet werden oder schlechte
Übertragungen in den Mailkomponenten gelangen wird der Dienst sich aufhängen
und seinen Port belegen, damit kein anderer Prozess darauf zugreifen kann. Oft
können Sie das mit netstat feststellen. Wenn Sie eine Zeit lang gewartet haben
können Sie den Server auch einfach rebooten. Das wird alle hängenden Dienste
bereinigen. So können Sie es frisch von vorne nochmal
versuchen.
</p>

<pre caption="Status eines Dienstes überprüfen">
# <i>/etc/init.d/$dienst status</i>
# <i>netstat -a | grep $dienst (oder $port)</i>
</pre>

</body>
</section>
<section>
<title>Schritt 3: Benutzen alle Dienste die aktuellen Konfigurationsdateien?</title>
<body>

<p>
Wenn Sie vor kurzem Änderungen an einer Konfigurationsdatei vorgenommen haben,
starten sie den Dienst neu, um sicherzugehen dass er alle Einstellungen
übernimmt. Einige Dienste wie Postfix können Ihnen die verwendeten
Einstellungen anzeigen.
</p>

<pre caption="Einige Dienste können ihre momentane Konfiguration ausgeben">
# <i>apache2ctl fullstatus</i> (benötigt installiertes lynx)
# <i>apache2ctl configtest</i> (überprüft Korrektheit der Konfiguration)
# <i>postconf -n</i> (sagt Ihnen exakt, welche Parameter postfix verwendet)
# <i>/etc/init.d/$dienst restart</i>
</pre>

</body>
</section>
<section>
<title>Schritt 4: Kontrollieren Sie die Protokolldateien.</title>
<body>

<p>
Protokolldateien sind Ihnen freundlich gesinnt. Der Author überprüft im
nächsten Schritt immer die Protokolldateien. Oft ist es hilfreich wenn man die
fehlgeschlagenen Operationen nochmal wiederholt. Dadurch hat man die
Fehlermeldung am Ende (oder Anfang, je nach Protokollierer) der Protokolldatei
anstatt irgendwo in der Mitte. Suchen Sie nach einer Information in der
Protokolldatei, die Ihnen helfen könnte eine Diagnose zu erstellen oder den
fehlerhaften Komponenten zu finden.
</p>

<pre caption="Protokolldateien prüfen">
# <i>kill -USR1 `ps -C metalog -o pid=`</i>(metalog Puffer ausschalten)
# <i>nano -w /var/log/mail/current</i>
# <i>cat /var/log/mysql/mysql.log</i>
# <i>tail /var/log/apache2/error_log</i>
</pre>

<p>
Den depug_peer Parameter in der main.cf werden Sie wahrscheinlich auch als
nützlich empfinden können. Dadurch wird mehr geloggt als im Verbose Mode.
</p>

<pre caption="debug_peer Unterstützung aktivieren">
# <i>nano -w /etc/postfix/main.cf</i>
debug_peer_level = 5
debug_peer_list = $host.domain.name
<comment>(Kommentieren Sie auch einen vorgeschlagenen Debuggerbefehl aus.)</comment>
</pre>

</body>
</section>
<section>
<title>Schritt 5:  Überprüfen Sie den Dienst</title>
<body>

<p>
Dass SMTP, IMAP und POP3 zu Telnet Sitzungen antworten haben wir schon gesehen
als wir die Postfixkonfiguration überprüft hatten. Manchmal ist es hilfreich
wenn man eine Telnet Sitzung zu dem Dienst öffnet und nachsieht was geschieht.
</p>

<pre caption="Dienste durch Telnet verbinden">
# <i>telnet localhost $port</i>
<comment>(SMTP ist 25, IMAP ist 143, POP3 ist 110. Sie sollten wenigstens eine "OK"-Zeile sehen.
Dadurch sehen Sie dass der Dienst in diesem Moment läuft und auf Anfragen antwortet.)</comment>

Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
* OK Courier-IMAP ready. Copyright 1998-2002 Double Precision, Inc.
</pre>

</body>
</section>
<section>
<title>Schritt 6: Manchmal bekommen Sie nur durch schwere Geschütze die gewünschte Information: strace</title>
<body>

<p>
Sie sollten strace so oder so installiert haben. Es ist ein unbezahlbares
debugging Tool. Mit strace können Sie Prozesse von der Kommandozeile aus
starten und alle Systemaufrufe kontrollieren. strace gibt oft eine riesige
Menge von Daten aus. Sie werden es entweder in Echtzeit kontrollieren oder
die Ausgabe in eine Datei weiterleiten wollen.
</p>

<pre caption="Strace verwenden">
# <i>emerge strace</i>
# <i>strace $command</i>
# <i>strace -p `ps -C $dienst -o pid=`</i>
</pre>

</body>
</section>
<section>
<title>Schritt 7: Nachforschungen</title>
<body>

<p>
Wenn Sie den Fehler gefunden und behoben haben ist das gut. Wenn nicht werden
Sie wohl im Netz nach Informationen suchen müssen, die Ihnen weiterhelfen.
Hier ist eine Liste von Seiten auf denen Sie überprüfen können ob Ihr Problem
vielleicht schon einmal zuvor gelöst wurde. Es gibt dort auch eine wirklich
gute smtp-auth Installationsanleitung, die einige nette Ideen für die
Fehlersuchen beinhalten.
</p>

<ul>
  <li>
    <uri>http://forums.gentoo.org/</uri> - Großartiges Forum für Gentoo
    Benutzer
  </li>
  <li>
    <uri>http://bugs.gentoo.org/</uri> - Fehlerdatenbank für Gentoo - Ein guter
    Ort um nach spezillen Fehlern zu suchen
  </li>
  <li>
    <uri>http://postfix.state-of-mind.de/</uri> - smtp-auth Installation
  </li>
  <li>
    <uri>http://marc.theaimsgroup.com/?l=postfix-users</uri> - Postfix
    Mailinglisten mit Suchfunktion
  </li>
  <li>
    <uri>http://sourceforge.net/mailarchive/forum.php?forum_id=6705</uri> -
    Courier-Imap Mailinglisten ohne Suchfunktion
  </li>
  <li>
    <uri>http://www.google.com/</uri> - Wenn alles schief geht dann gibt es
    immer noch google, welches mich noch nie im Stich gelassen hat
  </li>
  <li>
    Auch der Author verbringt sehr viel Zeit auf irc.freenode.org #gentoo. Der
    IRC ist ein guter Ort um nach Hilfe zu fragen.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
