<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- English CVS Version: 1.10 -->

<guide link="/doc/en/gentoo-pda.xml">
  <title>Gentoo Linux PDA/PIM Leitfaden</title>
  <author title="Author"><!-- zhen@gentoo.org -->
    John P. Davis
  </author>
  <author title="Contributor">Steven Hay</author>
  <author title="Editor">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
  </author>
  <author title="Translator">
    <mail link="js@ameds.de">Jens Schittenhelm</mail>
  </author>
  <abstract> Dieser Leitfaden soll bei der Konfiguration und
den Gebrauch von PDAs unter Gentoo Linux helfen.
</abstract>

<license/>

<version>2.1</version>
<date>September 15, 2003</date>
<chapter>
<title>PDA-unabhängiges Setup</title>
<section>
      <title>Konfiguration der Verbindung</title>
 <body>
	  
<p>
Bevor überhaupt irgendwelches Informationsmanagement mit dem PDA 
durchgeführt werden kann, muss dieser erst mit Ihrem Rechner 
kommunizieren können.
</p>
	  
</body>
</section>
<section>
	  <title>USB Verbindung</title>
<body>

<p>
Zunächst sollten Sie überprüfen, ob der Kernel die USB-Hardware
sauber unterstützt. Sollte dies nicht der Fall sein, müssen zuerst
die entsprechenden Treiber installiert werden. Dieser Leitfaden
geht davon aus, daß Sie sich mit den Grundlagen der Konfiguration
eines Kernels auskennen.
</p>

<p>
Sollten Sie die Kernel-Quellen noch nicht auf Ihrem Rechner haben, ist 
dies eine gute Gelegenheit dazu. Wir werden hier nicht auf die
unterschiedlichen Kernel eingehen, die von Gentoo angeboten werden.
Informationen hierzu finden Sie im
<uri link="http://www.gentoo.org/doc/de/gentoo-x86-install.xml">Installationshandbuch</uri>.
</p>
        
<pre caption="Notwendige USB Kernel Optionen">
# <c>cd /usr/src/linux</c>
# <c>make menuconfig</c>
</pre>

<p> Hier ist eine Liste aller Optionen, die im Kernel aktiv sein sollten:
<ul><li>USB support (CONFIG_USB)</li>
<li>Preliminary USB Device Filesystem (CONFIG_USB_DEVICEFS)</li>
<li>Der entsprechende Controller - UHCI, oder OHCI (CONFIG_USB_UHCI, oder CONFIG_USB_OHCI)</li>
<li>USB Serial Converter support (CONFIG_USB_SERIAL)</li>
<li>USB Handspring Visor Driver (CONFIG_USB_SERIAL_VISOR) (Sub-Option des Menu Serial Converter)
[Nur notwendig, wenn Sie einen Handspring verwenden]</li></ul>
</p>

<note>Wenn möglich, sollten Sie diese als Module kompilieren und zu
<path> /etc/modules.autoload</path> hinzufügen, sodaß sie nach jedem
Systemstart geladen werden
</note>

      </body>
    </section>
    <section>
      <title>Serielle Verbindung</title>
      <body>

<p>
Wir gehen davon aus, dass der serielle Anschluß des PDA Cradles
in den ersten seriellen Port
(/dev/ttyS0, oder /dev/tts/0 laut &quot;devfs&quot; Namensgebung)
gesteckt wird.
</p>

<pre caption="Hinzufügen eines seriellen Gerätes">
# <c>groupadd serial</c>
# <c>chown root.serial /dev/tts/0</c>
# <c>chmod g+rw /dev/tts/0</c>
# <c>ls -l /dev/tts/0</c>
# crw-rw----    1 root     serial     4,  64 Dec 31  1969 /dev/tts/0
# <c>ln -s /dev/tts/0 /dev/pilot</c>
# <c>nano -w /etc/group</c> <comment>(Fügen sie die entsprechenden User zur Gruppe serial hinzu)</comment>
</pre>

<p>
Wir haben eine Gruppe namens &quot;serial&quot; dem System hinzugefügt, und Sie sollten
alle Benutzer, die Zugriff auf den seriellen Port haben dürfen (d.h. alle Palm Pilot User), dieser
Gruppe hinzufügen. Die Gruppe serial hat &quot;rw&quot; Erlaubnis für den <path>/dev/tts/0</path>
Pfad und für viele Programme haben wir einen Symlink von <path>/dev/pilot</path> nach 
<path>/dev/tts/0</path> angelegt. Dank der Einstellungen von devfs unter Gentoo bleiben
diese Änderungen auch nach einem Reboot erhalten.
</p>

<note>
Users mit pre-rc6-r13 können entweder <path>sys-apps/baselayout</path>
aktualisieren und <path>sys-fs/devfsd</path> emergen (wichtig: alle
&quot;._cfg*&quot; Dateien in <path>/etc</path> müssen aktualisiert werden)
oder tragen dann die entsprechenden Permissions selbst in <path>/etc/devfsd.conf</path>
ein.
</note>

      </body>
    </section>
    <section>
      <title>Neustart von devfsd</title>
      <body>

<p>
 Nun müssen Sie den <e>devfsd</e> Daemon neu starten.
Sollte Ihre Konfigurationsdatei Fehler enthalten, müssen Sie
den Daemon von Hand manuell neu starten, weil er bei
Problemen anhalten wird.
</p>

<pre caption="Neustart von devfsd">
# <i>killall -HUP devfsd</i>
</pre>

</body>
</section>

<section>
<title>Sharp Zaurus (SL5000/SL5500) USB Verbindung</title>
<body>

<p>
Der Zaurus besitzt die praktische Möglichkeit, das Gerät mit Ihrem Computer so zu verbinden, als wäre es
ein weiteres Gerät im Netzwerk, ohne dabei eine weitere Netzwerkkarte (NIC) erfoderlich zu machen. Alles
was Sie brauchen, ist das Zaurus USB-Cradle und das  <i>usbd</i> Kernelmodul.
</p>

<note>
Die meisten Informationen sind von <uri>http://www.zauruszone.com/howtos/lc_generic.shtml</uri>
entnommen worden. An dieser Stelle möchte ich den Entwicklern von Sharp für Ihre Bereitschaft, mit der 
Open Source Community zusammenzuarbeiten danken.
</note>

<p>
Als erstes muss der Kernel gepatcht werden. Der <i>usbd</i> Treiber ist eine Patch-Datei, die gegen den 
aktuellen Kernel-Verzeichnisbaum gepacht wird und dann in der Kernel Konfiguration aktiviert werden kann.
</p>

<pre caption="Herunterladen und Installieren des usbd Kernel Patches">
# <c>cd /usr/src</c>
# <c>wget http://www.zauruszone.com/howtos/downloads/usbdnet-2.4.18-patch.gz</c>
<comment>Patch für kernel 2.4.18</comment>
# <c>wget http://www.zauruszone.com/howtos/downloads/usbdnet-2.4.19-patch.gz</c>
<comment>Patch für kernel 2.4.19</comment>
# <c>wget http://www.zauruszone.com/howtos/downloads/usbdnet-2.4.20-patch.gz</c>
<comment>Patch f+r kernel 2.4.20</comment>

<comment>Nun sollten Sie Ihren Kernel patchen, wobei  der entsprechende 2.4.x mit Ihrer 
Kernel-Versionnummer übereinstimmen muss.</comment>
# <c>zcat usbdnet-2.4.x.patch.gz | patch -p0</c>
</pre>

<p>
Sobald Sie den Kernel gepatcht haben, können Sie Ihren Kernel neu konfigurieren:
</p>

<pre caption="KernelKConfiguration">
<comment>Im <path>/usr/src/linux</path> Verzeichnis:</comment>
# <c>make menuconfig</c>
In "Code maturity level options", wählen Sie "Prompt for development and/or incomplete code/drivers"
In "USB support", Sektion "USB Network adaptors", wählen Sie  (als Modul) "USBD Network (Encapsulated) Host-to-Host Link (EXPERIMENTAL)"
Dann tragen Sie <i>04dd in USBD Network idVendor</i> undnd <i>8004 in USBD Network idProduct</i> ein.
</pre>

<p>
Es spielt keine Rolle, ob Sie das <i>usbd</i> als Modul oder direkt in den
Kernel kompiliert haben. Wenn Sie es als Modul kompilieren, sollten Sie
sicherstellen, dass es nach einem Reboot auch wieder geladen wird.
Des weiteren sollten Sie sicherstellen, dass die notwendigen USB-Informationen
(wie oben beschrieben) im Kernel enthalten sind.
</p>

<p>
Nachdem Ihr Kernel konfiguriert wurde und Sie neu gebootet haben,
sollten Sie nun prüfen, ob der Patch auch funktioniert.
</p>
 
<p>
Schalten Sie den Zaurus ein, setzen Sie ihn in das Cradle und drücken den
Sync-Knopf. Wenn Sie <path>/var/log/messages</path> betrachten, sollte
eine Nachricht ähnlich dieser auftreten:
</p>

<pre caption="Ausgabe von /var/log/messages">
# <c>tail -f /var/log/messages</c>
<comment>Inhalt:</comment>
hub.c: USB new device connect on bus1/1, assigned device number 38
usb.c: USB device 38 (vend/prod 0x4dd/0x8004) is not claimed by any active driver.
v0.4b sl@lineo.com, tbr@lineo.com
usbdnet.c: v0.4b sl@lineo.com, tbr@lineo.com
usbdnet.c: USB Host to Device Network - for Linux USB Devices using MDLM/CDC
usb.c: registered new driver usbdnet
</pre>

<p>Sollte bis hierher alles funktinieren, wird es Zeit den Netzwerktreiber zu laden</p>

<pre caption="Laden des USB Netwerkgerätes">
# <c>ifconfig -a</c>
</pre>

<p>Es sollte ein Adapter mit dem Namen <i>usb0</i> auf der Liste auftauchen.</p>

<p>
Nun richten wir das Netzwerk auf dem Zaurus ein. USB-Netzwerk ähnelt PPP, da beide 
Geräte auf jeder Seite eine IP Adresse erhalten. Die IP-Adresse des Zaurus kann über
das "Network Setup Tool" gesetzt werden. Standardmäßig ist dies 192.168.129.201.
Sollten Sie diese Einstellung geändert haben, müssen Sie natürlich die entsprechende
IP Adresse angeben, wenn Sie den Zaurus wie in unserem Beispiel anpingen.
</p>

<p>
Wenn Sie den Zaurus in das Cradle setzen und eine andere Schnitstelle als usb0
erstellt wird, sollten Sie alle usb0 Bezeichnungen in unserem Howto durch dieses 
entsprechende Interface ersetzen. Konfigurieren Sie das Interface mit folgenden
Befehlen: 
</p>

<pre caption="Konfiguration des Zaurus">
<comment>Dies geben Sie an der Kommandozeile Ihres Desktop-Rechners ein.</comment>
# <c>ifconfig usb0 192.168.129.1 netmask 255.255.255.255 up </c>
# <c>route add -host 192.168.129.201 usb0 </c>
</pre>

<p>
Nun pingen Sie den Zaurus, <c>ping 192.168.129.201</c>, wenn Sie eine Antwort erhalten,
haben Sie die Verbindung erfolgreich hergestellt.
</p>

<note>
Nit den oben beschriebenen Schritten erhalten Sie eine funktionierende Sync-Verbindung zu
Ihrem Zaurus. Wollen Sie vom Zaurus aus via USB-Cradle mit dem Internet verbinden, sollten
Sie die Anleitungen auf der 
<uri link="http://www.zauruszone.com/howtos/lc_generic.shtml">Sharp Zaurus Developer</uri> 
Webseite befolgen.
</note>

</body>
</section>
<section>
<title>Verschiedenes</title>
<body>

<p>
Bevor Sie ein Programm zur Verwendung mit ihrem PDA kompilieren, sollten Sie die 
<e>pda</e> USE Variable zu <path>/etc/make.conf</path> hinzufügen. Damit
stellen Sie sicher, dass alle Programme mit der entsprechenden PDA Unterstützung
(falls vorhanden) kompiliert werden.
</p>

<pre caption="Anpassen von /etc/make.conf">
# <c>vim /etc/make.conf</c>
<comment>Schauen Sie nach dieser Zeile</comment>
USE=&quot;use1 use2 etc <e>pda</e>&quot;
</pre>

<p>
Verwenden Sie einen  Palm/Handspring, sollten Sie gleich die entsprechenden
Symlinks setzen:
</p>

<pre caption="Erstellen der Symlinks">
# <c>ln -s /dev/usb/tts/1 /dev/palm</c>
# <c>ln -s /dev/usb/tts/1 /dev/pilot</c>
</pre>

     </body>
    </section>
  </chapter>
  <chapter>
    <title>Handspring/Palm Syncronisation</title>
    <section>
      <title>Allgemeine Informationen</title>
      <body>

<p>
Um Ihre Daten mit dem PDA abgleichen zu können, benötigen
Sie ein entsprechendes Programm. Bisher haben wir das
Haus hardwaremäßig gut bestellt, sodaß wir uns der
(hoffentlich) einfacheren Software-Installation zuwenden können.
Bislang gibt es zwei Arten von Syncronisationssoftware, die
einen sind sehr spartanisch und führen einfach nur die 
Syncronsiation aus, während andere komplette Lösungen
führ Ihren Palm darstellen.
</p>

      </body>
    </section>
    <section>
      <title>Coldsync</title>
      <body>

<p>
Coldsync ist ein <i>low-level</i> Programm, weil es keinen 
Schnickschnack wie die anderen Programme beinhaltet. Dies
kann genau das sein, was Sie suchen, oder auch nicht.
Sie finden die Webseite von Coldsync unter
<uri>http://www.coldsync.org/</uri>. Es wurde als Ersatz
für pilot-link geschrieben. Installieren Sie es wie folgt:
</p>

<pre caption="Installation von ColdSync">
# <c>emerge coldsync</c>
</pre>

<p>
Nach dem Laden aller notwendigen Module können Sie den
Sync Knopf des Cradles drücken und starten nach einer
kurzen Pause Coldsync mit folgendem Kommando:
</p>

<pre caption="Verwenden von ColdSync">
# <c>mkdir ~/palmbackup/</c>
<comment>drücken Sie jetzt den Sync Knopf</comment>
# <c>coldsync -p /dev/usb/tts/1 -mb ~/palmbackup/</c>
</pre>

      </body>
    </section>
    <section>
      <title>Pilot-link</title>
      <body>

<p>
Pilot-Link finden Sie unter
<uri>http://www.gnu-designs.com/pilot-link</uri>. 
Dieses Tool wird in diesem Tutorial nur kurz abgehandelt,
da der Autor das Programm nicht verwendet. Jedoch kann
laut Anleitung das Programm wie folgt ausgeführt werden:
</p>

<pre caption="Verwenden von Pilot-Link">
# <c>mkdir ~/palmbackup/</c>
<comment>drücken Sie jetzt den Sync Knopf</comment>
# <c>pilot-xfer -p /dev/usb/tts/1 -b ~/palmbackup/</c>
</pre>

      </body>
    </section>
    <section>
      <title>High-Level Syncronisationssoftware</title>
      <body>

<p>
Es existieren einige Palm Desktop Clones. Exemplarisch stellen
wir JPilot vor, welches auf den pilot-link Bibliotheken aufbaut. 
Probieren Sie einfach eins der folgenden aus:
<ul><li><uri>http://www.moshpit.org/pilotmgr/</uri>Pilotmanager</li><li><uri>http://www.jpilot.org/</uri>J-Pilot</li><li><uri>http://www.slac.com/pilone/kpilot_home/</uri>KPilot (KDE)</li><li><uri>http://www.gnome.org/projects/gnome-pilot/</uri>Gnome-Pilot (GNOME)</li></ul>
</p>
      </body>
    </section>
    <section>
<title>J-Pilot</title>
      <body>

<p> J-Pilot ist einfach. Emergen Sie es und spielen mit
den Funktionen herum. Installieren Sie es mit:
</p>

<pre caption="Installation von JPilot">
# <c>emerge jpilot</c>
</pre>

<p>
Als Benutzer syncronisieren Sie zuerst Ihren Palm und starten
Sie dann das Programm:
</p>

<pre caption="Syncronisation des PDA">
# <c>jpilot-sync</c>
# <c>jpilot</c>
</pre>

<note>
Sollten Sie Probleme mit der Syncronistation haben, schauen
Sie nach der Fehlermeldung; es kann sein, dass Sie einen
Symlink setzen müssen, oder die Benutzerrechte in der devfsd
korrekt setzen müssen oder ein weiteres Kommando beim
Start mitgeben müssen. Die genauen Informationen dazu finden
Sie in der Manpage.
</note>

      </body>
    </section>
    <section>
      <title>Smooth und Sexy Automatisierung </title>
      <body>

<p>
Werfen Sie einen erneuten Blick in Ihre devfsd Konfigurationsdatei.
Falls Sie es nicht schon geahnt haben, dies ist der richtige Ort, um
Ihrem Palm automatisch abzugleichen, wenn Sie den Sync Knopf
drücken. Beim Anmelden des gerätes können Sie devfsd veranlassen,
automatisch einen Befehl auszuführen. Hier habe ich ein Beispiel
für den Benutzer YOU aufgeführt:
</p>

<pre caption="Anpassen von /etc/devfsd.conf">
#configure USB  added by YOU!
REGISTER        ^usb            PERMISSIONS     0.0     0777
REGISTER        ^usb/tts        PERMISSIONS     0.0     0777
<comment>Benutzen Sie dies, wenn Sie jpilot verwenden</comment>
REGISTER        ^usb/tts/1      EXECUTE       /bin/su YOU -c	&quot;/usr/bin/jpilot -sync&quot;
<comment>Benutzen Sie dies, wenn Sie coldsync verwenden</comment>
REGISTER       ^usb/tts/1       EXECUTE       /bin/su YOU -c	/usr/local/bin/sync-coldsync &amp;
</pre>

<p>
Bei der Verwendung von coldsync müssen Sie noch ein kleines
Skript <path>/usr/local/bin/sync-coldsync</path> mit folgendem
Inhalt anlegen:
</p>

<pre caption = "/usr/local/bin/sync-coldsync">
#!/bin/sh

/usr/bin/coldsync -p /dev/usb/tts/ -mb $HOME/palmbackup
</pre>

<note>
Da die serielle Schnittstelle für den Kernel immer an ist, kann diese Option
nur für USB-Anschlüsse verwendet werden. Probieren Sie es trotzdem, aber
es wird wahrscheinlich nicht für eine serielle Verbindung funktionieren.
</note>

<note>
Der Daemon wird als root ausgeführt. Beachten Sie, dass er su verwendet,
um die Privilegien des Palm-Benutzers zu erhalten, dafür benötigt er kein
Passwort.
</note>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Abschliessende Bemerkungen</title>
    <section>
      <title>Referenzen</title>
      <body>
        <p>Weitere Informationen:
<ul>
<li><uri>http://www.linuxpda.com/visor/howto/current/t1.html</uri> Handspring-Visor mit Linux mini-HOWTO</li>
<li><uri>http://www.linux-usb.org/USB-guide/book1.html</uri> Linux USB Leitfaden</li>
<li><uri>http://www.zauruszone.com/howtos/lc_generic.shtml</uri> Sharp Zaurus Entwicklerseite</li>
</ul>
</p>
      </body>
    </section>
  </chapter>
</guide>
