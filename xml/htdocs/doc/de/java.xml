<?xml version='1.0' encoding="utf-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/java.xml,v 1.6 2004/01/02 16:51:44 dertobi123 Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- English CVS Version: 1.12 -->

<guide link="/doc/de/java.xml">

<title>Gentoo Java Anleitung</title>

<author title="Gentoo Doc Editor">
  <mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>
<author title="Editor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Übersetzung">
  <mail link="kontakt@hendrik-brandt.de">Hendrik Brandt</mail>
</author>
<author title="Korrektur">
  <mail link="pylon@gentoo.org">Lars Weiler</mail>
</author>

<abstract>
Anleitung für Benutzer und Entwickler von Java unter Gentoo Linux
</abstract>

<license/>

<version>0.1.4</version>
<date>21. November 2003</date>

<chapter>
<title>Installation eines JDK/JRE</title>
<section>
<title>Überblick</title>
<body>

<p>
Gentoo Linux unterstüzt verschiedene JDKs und JREs. Als Standard ist das
Blackdown JDK/JRE installiert, da es frei verfügbar ist und sie keinem
Registrierungszwang unterliegen.
</p>

<note>
Da kaffe als Ersatz für die verschiedenen JRE/JDK geplant wird, wird dies
sehr wahrscheinlich in Zukunft unser Standard werden.
</note>

<p>
Allgemein sind die JDKs/JREs von Sun oder IBM schneller, allerdings bedeutet
es etwas mehr Arbeit an sie heran zukommen, da es notwendig ist, vor dem
Herunterladen die Lizenzbestimmungen zu lesen und zu akzeptieren. IBM verlangt
desweiteren eine Registrierung des Nutzers.
</p>

<p>
Die ebuilds für die Sun und IBM JDKs/JREs werden sie darauf hinweisen, von wo
sie die entsprechenden Pakete herunterladen können.
</p>

</body>
</section>
<section>
<title>Installation des Sun/IBM JDKs/JREs</title>
<body>

<p>
Wenn sie <c>emerge dev-java/sun-jdk-1.3.1</c> oder <c>emerge
dev-java/ibm-jdk-1.3.1</c> ausführen, werden sie darauf hingewiesen, dass sie
die entsprechenden TAR-Archive selbst herunterladen müssen. Dies ist auf Grund
der Lizenzbestimmungen von Sun bzw. des Registrierungszwangs beim IBM JDK/JRE
notwendig.
</p>

<note>
Es gibt auch ein dev-java/sun-jdk-1.4.0 ebuild, allerdings laufen nicht
alle Programme fehlerfrei mit Java 1.4. Somit liegt es an ihnen, ob sie Java 1.4
verwenden wollen.
</note>

<p>
Sie müssen die notwendigen Dateien in das Verzeichnis
<path>/usr/portage/distfiles</path> herunterladen. Sobald dies getan ist, müssen
sie erneut emerge ausführen und somit wird das JDK/JRE nach <path>/opt</path>
installiert.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Konfiguration des JDK/JRE</title>
<section>
<title>Überblick</title>
<body>

<p>
Gentoo Linux bietet die Möglichkeit verschiedene JDKs und JREs parallel
installiert zu haben, ohne das diese in Konflikt miteinander kommen.
</p>

<p>
Mit Hilfe von <c>java-config</c> können sie als root die systemweiten
Java-Vorgaben festlegen. Außerdem hat jeder Nutzer die Möglichkeit durch
<c>java-config</c> seine eigenen Vorgaben einzustellen, wenn diese sich von den
systemweiten unterscheiden.
</p>

</body>
</section>
<section>
<title>Ein Standard-JDK/JRE festlegen</title>
<body>

<p>
Durch das Kommando <c>java-config --list-available-vms</c> wird eine Liste
der auf ihrem System verfügbaren JDKs/JREs ausgegeben:
</p>

<pre>
# <i>java-config --list-available-vms</i>
[blackdown-jdk-1.3.1] Blackdown JDK 1.3.1 (/etc/env.d/java/20blackdown-jdk-1.3.1)
[blackdown-jre-1.3.1] Blackdown JRE 1.3.1 (/etc/env.d/java/20blackdown-jre-1.3.1)
[ibm-jdk-1.3.0] IBM JDK 1.3.0 (/etc/env.d/java/20ibm-jdk-1.3.0)
[ibm-jdk-1.3.1] IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
[ibm-jre-1.3.1] IBM JRE 1.3.1 (/etc/env.d/java/20ibm-jre-1.3.1)
[sun-jdk-1.4.0] Sun JDK 1.4.0 (/etc/env.d/java/20sun-jdk-1.4.0)
</pre>

<p>
Der Text in eckigen Klammern "[]" ist der Name oder die ID für die jeweilige
VM (Virtual Machine). Sie müssen diese ID mit <c>java-config --set-system-vm</c>
wie folgt verwenden:
</p>

<pre>
# <i>java-config --set-system-vm=ibm-jdk-1.3.1</i>
Now using IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
</pre>

<note>
Sie müssen root sein, um --set-system-vm auszuführen.
</note>

<p>
Sobald sie <c>java-config --set-system-vm</c> mit einer entsprechenden VM ID
ausgeführt haben, müssen sie ihre <path>/etc/profile.env</path>
aktualisieren:
</p>

<pre>
# <i>env-update</i>
</pre>

<p>
Anschließend müssen sie sich neu am System anmelden oder ihre
<path>/etc/profile</path> erneut in die Umgebung einbinden (<c>source
/etc/profile</c>).
</p>

<p>
Als normaler Nutzer können sie <c>java-config --set-user-vm</c> anwenden, um
ein eignes JDK/JRE festzulegen. Dabei wird die Datei
<path>$HOME/.gentoo/java-env</path> mit allen notwendigen Umgebungsvariablen
angelegt. Für gewöhnlich wird dies in den Start-Skript der Shell eingebunden
(z.B. <path>$HOME/.zshenv</path>)
</p>

</body>
</section>
<section>
<title>Einen Standard CLASSPATH setzen</title>
<body>

<p>
<c>java-config</c> kann (und sollte) desweiteren dazu verwendet werden,
sowohl einen systemweiten Standard CLASSPATH (Klassenpfad), als auch einen
Nutzerspezifischen CLASSPATH zu setzen.
</p>

<p>
Zunächst sollte man sich eine Liste mit allen verfügbaren Bibliotheken
ausgeben lassen:
</p>

<pre>
# <i>java-config --list-available-packages</i>
[ant] No description (/usr/share/ant/classpath.env)
[java-gnome] No description (/usr/share/java-gnome/classpath.env)
[java-gtk] No description (/usr/share/java-gtk/classpath.env)
[log4j] "" (/usr/share/log4j/package.env)
</pre>

<note>
Derzeit hat keines der Pakete eine passende Beschreibung, dies wird jedoch
in naher Zukunft implementiert.
</note>

<p>
Nochmal sei darauf hingewiesen, dass der Text in eckigen Klammern "[]", die
IDs sind, die an <c>java-config --set-system-classpath</c> übergeben werden
müssen:
</p>

<pre>
# <i>java-config --set-system-classpath=log4j,java-gtk,java-gnome</i>
</pre>

<note>
Das aktuelle Verzeichnis (.) wird kein Teil des Systemweiten Klassenpfades
sein. Es sollte in das Login-Profil von root eingetragen werden.
</note>

<p>
Erneut müssen sie <c>env-update</c> ausführen, um die Systemumgebung zu
aktualisieren. Außerdem müssen sie sich neu anmelden oder
<path>/etc/profile</path> neu einbinden (<c>source /etc/profile</c>).
</p>

<p>
Für normale Nutzer erzeugt <c>java-config --set-user-classpath</c> die Datei
<path>$HOME/.gentoo/java-env-classpath</path>, welche automatisch von
<path>$HOME/.gentoo/java-env</path> eingebunden wird
</p>

</body>
</section>
</chapter>

<chapter>
<title>Weiterführende Quellen</title>
<section>
<title>Offline Quellen</title>
<body>

<ul>
  <li>java-config man page</li>
  <li><c>java-config --help</c></li>
  <li>Das <path>/usr/bin/java-config</path> Skript selbst</li>
</ul>

</body>
</section>
<section>
<title>Online Quellen</title>
<body>

<ul>
  <li>
    Die Archive der <uri
    link="http://news.gmane.org/gmane.linux.gentoo.devel">gentoo-dev</uri> und
    <uri link="http://news.gmane.org/gmane.linux.gentoo.user">gentoo-user</uri>
    Mailing-Listen
  </li>
  <li>#gentoo und #gentoo-java unter irc.freenode.net</li>
  </ul>

</body>
</section>
</chapter>
</guide>
