<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- English CVS Version: 1.26 -->

<guide link="/doc/de/distcc.xml">

<title>Gentoo Distcc Dokumentation</title>

<author title="Autor">
  <mail link="lisa@gentoo.org">Lisa Seelye</mail>
</author>

<author title="Bearbeiter">
  <mail link="vapier@gentoo.org">Mike Frysinger</mail>
</author>

<author title="Bearbeiter">
  <mail link="erwin@gentoo.org">Erwin</mail>
</author>

<author title="Bearbeiter">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>

<author title="Bearbeiter">
  <mail link="pylon@gentoo.org">Lars Weiler</mail>
</author>

<author title="Korrektor">
  <mail link="blubber@gentoo.org">Tiemo Kieft</mail>
</author>

<author title="Übersetzer">
  <mail link="ian@gentoo.org">Christian Hartmann</mail>
</author>

<author title="Korrektor">
  <mail link="js@ameds.de">Jens Schittenhelm</mail>
</author>

<author title="Übersetzer">
  <mail link="fragfred@gmx.de">Dennis Nienhüser</mail>
</author>

<abstract>
Dieses Dokument dient als Leitfaden, um distcc mit Gentoo Linux zu benutzen.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->
<license/>

<version>1.11</version>
<date>2005-03-25</date>

<chapter>
<title>Einleitung</title>
<section>
<title>Was ist distcc?</title>
<body>

<p>
Distcc ist ein Programm, welches sich um die Verteilung von
Kompilierungsprozessen an teilnehmende Rechner kümmert. Es besteht aus
einem Serverteil, <c>distccd</c> und einem Clientprogramm,
<c>distcc</c>. Mit etwas Konfigurationsaufwand funktioniert distcc mit
<uri link="http://ccache.samba.org">ccache</uri> und Portage
zusammen.
</p>

</body>
</section>
<section>
<title>Distcc beim Bootstrap einsetzen</title>
<body>

<p>
Wenn Sie distcc während des Bootstraps einsetzen möchten, lesen Sie bitte
den Abschnitt <uri link="#bootstrapping">Distcc beim Bootstrap</uri> weiter
unten.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Einrichtung</title>
<section>
<title>Abhängigkeiten</title>
<body>

<p>
Um distcc einsetzen zu können, müssen alle Computer im Netzwerk die gleiche GCC
Version benutzen. Sie können verschiedene 3.3.x Versionen (mit
unterschiedlichen x) verwenden, ein gleichzeitiger Gebrauch von 3.3.x und 3.2.y
allerdings <b>wird</b> zu einem fehlerhaften Programm führen.
</p>

</body>
</section>
<section>
<title>Distcc installieren</title>
<body>

<p>
Sie sollten über einige Optionen Bescheid wissen, bevor Sie distcc installieren.
</p>

<p>
Distcc kommt mit einem grafischen Überwachungstool, um einzelne Aufgaben, die
an andere PCs verteilt werden, aufzuzeichnen. Als Gnome Benutzer sollten sie
'gnome' in Ihren USE Flags setzen. Verwenden Sie kein Gnome, wollen jedoch die
Funktionalität des grafischen Tools nicht missen, dann sollten Sie 'gtk' in den
USE Flags gesetzt haben.
</p>

<pre caption="distcc installieren">
# <i>emerge distcc</i>
</pre>

</body>
</section>
<section>
<title>Portage so einrichten, dass es Distcc benutzt</title>
<body>

<p>
Distcc unter Portage einzurichten ist sehr einfach. Führen Sie die
nachfolgenden Schritten auf jedem Computer aus, der am verteilten Kompilieren
teilnehmen soll:
</p>

<pre caption="Distcc in Portage integrieren">
# <i>emerge distcc</i>
# <i>nano -w /etc/make.conf</i>
<comment>(Ersetzen Sie N durch eine Zahl, die ihrem individuellem System gerecht wird.
Häufig wird hier die doppelte Zahl beteiligter CPUs + 1 gewählt)</comment>
MAKEOPTS="-jN"
<comment>(Fügen Sie distcc zur FEATURES Variablen hinzu)</comment>
FEATURES="distcc"
</pre>

</body>
</section>
<section>
<title>Die teilnehmenden Hosts festlegen</title>
<body>

<p>
Benutzen Sie <c>distcc-config</c>, um die Liste aller teilnehmenden Hosts
festzulegen. Hier ein Beispiel für eine solche Liste:
</p>

<pre caption="Beispielhafte Liste der Rechnerdefinition">
192.168.0.1        192.168.0.2                     192.168.0.3
192.168.0.1/2      192.168.0.2                     192.168.0.3/10
192.168.0.1:4000/2 192.168.0.2/1                   192.168.0.3:3632/4
@192.168.0.1       @192.168.0.2:/usr/bin/distccd   192.168.0.3
<comment>Es gibt noch verschiedene andere Methoden um die Hosts zu konfigurieren.
Schauen Sie für mehr Details in die distcc Manpage.</comment>
</pre>

<p>
Das mag nun alles etwas kompliziert aussehen, aber in den meisten
Fällen wird eine Variation aus Zeile 1 oder 2 für Sie funktionieren.
</p>

<ul>
  <li>Zeile 1 ist lediglich eine durch Leerzeichen getrennte Liste von Hosts.</li>
  <li>
    Zeile 2 ist eine Liste von Hosts, denen eine Maximalzahl von Aufträgen
    (durch die <c>/N</c> Angabe) zugewiesen wird, die diesem gleichzeitig
    geschickt werden dürfen.
  </li>
</ul>

<p>
Da wohl die meisten Benutzer Zeile 3 und 4 nicht benutzen werden, verweise ich
an die <uri link="http://distcc.samba.org/man/distcc_1.html">
Distcc-Dokumentation (englisch)</uri>.
</p>

<p>
Folgendes Beispiel zeigt die Einrichtung der Konfiguration, wie sie
in Zeile 1 zu sehen ist:
</p>

<pre caption="Beispielaufruf, um teilnehmende Rechner bekannt zu geben (Beispiel: Zeile 1)">
# <i>/usr/bin/distcc-config --set-hosts "192.168.0.1 192.168.0.2 192.168.0.3"</i>
</pre>

<p>
Passen Sie <path>/etc/conf.d/distccd</path> an Ihre Bedürfnisse an. Vergessen
Sie nicht, durch die <c>--allow</c> Anweisung die Hosts anzugeben, denen Sie
vertrauen. Noch mehr Sicherheit erhalten Sie durch Einsatz der
<c>--listen</c> Anweisung, die dem distcc Dämon mitteilt, auf welche IP
Adressen er lauschen soll. Weitere Informationen hierzu erhalten Sie im  <uri
link="http://distcc.samba.org/security.html">Distcc Sicherheits
Design (englisch)</uri>.
</p>

<p>
Starten Sie jetzt den distcc Dämon auf allen teilnehmenden Computern:
</p>

<pre caption="Den distcc Dämon starten">
<comment>(distccd zum default Runlevel hinzufügen)</comment>
# <i>rc-update add distccd default</i>
<comment>(den distcc Dämon starten)</comment>
# <i>/etc/init.d/distccd start</i>
</pre>

</body>
</section>
<section>
<title>Distcc so einrichten, dass es mit Automake funktioniert</title>
<body>

<p>
Dies ist in manchen Fällen einfacher als die Einrichtung des
Portage-Teiles. Sie müssen zunächst Ihre <c>PATH</c> Umgebungsvariablen
so anpassen, dass <path>/usr/lib/distcc/bin</path> vor dem Pfad von gcc
(<path>/usr/bin</path>) gestellt wird. Wie auch immer, es gibt eine
Vorsichtsmaßnahme zu beachten. Wenn Sie ccache benutzen, so müssen Sie
den Distcc-Teil hinter den ccache-Teil stellen. Dies würde in etwa wie
folgt aussehen:
</p>

<pre caption="PATH setzen">
# <i>export PATH="/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"</i>
</pre>

<p>
Dann, wenn Sie normalerweise <c>make</c> eingeben würden, geben Sie
<c>make -jN</c> (wobei N eine Ganzzahl ist) ein. Der Wert für N hängt von ihrem
Netzwerk und den Computern ab, die Sie für den Kompilierprozess verwenden. Ich
benutze hierfür -j5, um mit einem Dual-P3 und einem K6-2/400 alles für meinen
Desktoprechner (ein 1200Mhz Athlon Thunderbird) zu kompilieren. Am besten
probieren Sie einige Variationen aus, um den für Sie geeignetsten Wert
herauszufinden.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Cross-Kompilierung</title>
<section>
<title>Ein Hinweis zur Cross-Kompilierung</title>
<body>

<p>
Beim Cross-Kompilieren erstellt man auf einer Architektur Programme für eine
andere. So könnte man einen Athlon (i686) benutzen, um Programme für einen
K6-2 (i586) zu kompilieren, oder einen Sparc um Programme für einen ppc zu
erstellen.
</p>

</body>
</section>
<section>
<title>Eine Einführung in die Cross-Kompilierung</title>
<body>

<p>
Wenn Sie Cross-Kompilierung ausprobieren möchten, folgen Sie bitte dem <uri
link="http://dev.gentoo.org/~vapier/CROSS-COMPILE-HOWTO">Cross-Kompilierung
Howto (englisch)</uri>. Das Paket <uri
link="http://packages.gentoo.org/packages/?category=sys-devel;name=crossdev">
sys-devel/crossdev</uri> ist veraltet.
</p>

</body>
</section>
</chapter>

<chapter id="bootstrapping">
<title>Distcc beim Bootstrap</title>
<section>
<title>Schritt 1: Portage konfigurieren</title>
<body>

<p>
Booten Sie ihr neues System mit Hilfe einer Gentoo Linux LiveCD und folgen Sie
den <uri
link="/doc/en/handbook/handbook-x86.xml?part=1">Installationsanweisungen</uri>
bis zum Bootstrap Abschnitt. Konfigurieren Sie Portage dann so, dass es distcc
verwendet:
</p>

<pre caption="Einrichtung">
# <i>nano -w /etc/make.conf</i>
<comment>(Fügen Sie distcc der FEATURES Variablen hinzu)</comment>
FEATURES="distcc"
<comment>(Ändern Sie MAKEOPTS so ab, dass es -jN mit einem passenden Zahl N enthält)</comment>
MAKEOPTS="-jN"
</pre>

<pre caption="Den Pfad setzen">
# <i>export PATH="/usr/lib/ccache/bin:/usr/lib/distcc/bin:${PATH}"</i>
</pre>

</body>
</section>
<section>
<title>Schritt 2: Distcc aufsetzen</title>
<body>

<p>
Vor der Installation von distcc muss ein Benutzer distcc zu
<path>/etc/passwd</path> hinzugefügt werden:
</p>

<pre caption="Den Benutzer distcc erzeugen">
# <i>echo "distcc:x:240:2:distccd:/dev/null:/bin/false" &gt;&gt; /etc/passwd</i>
</pre>

<impo>
Es ist wichtig anzumerken, dass das Hinzufügen von Benutzern auf diese Weise
gefährlich ist. Es wird hier nur deswegen so gemacht, weil zu diesem
Installationszeitpunkt noch kein <c>useradd</c> Hilfsprogramm existiert (das
man normalerweise verwenden würde).
</impo>

<p>
Installieren Sie nun distcc:
</p>

<pre caption="Distcc auf dem neuen System installieren">
# <i>USE='-*' emerge --nodeps sys-devel/distcc</i>
</pre>

</body>
</section>
<section>
<title>Schritt 3: Distcc einrichten</title>
<body>

<p>
Rufen Sie <c>distcc-config --install</c> auf, um distcc einzurichten.
</p>

<pre caption="Letzte Einstellungen zur distcc Einrichtung">
<comment>(Ersetzen Sie host1, host2, ... durch die IP Adressen der teilnehmenden Hosts)</comment>
# <i>/usr/bin/distcc-config --set-hosts "localhost host1 host2 host3 ..."</i>
<comment>(Beispiel: <i>/usr/bin/distcc-config --set-hosts "localhost 192.168.0.4 192.168.0.6")</i></comment>
</pre>

<p>
Distcc ist nun zum Bootstrap bereit! Fahren Sie mit den offiziellen
Installationsanweisungen fort und vergessen Sie nicht distcc nach dem
<c>emerge system</c> erneut zu emergen. Dadurch können Sie sicher sein, das
alle Abhängigkeiten ebenfalls installiert sind.
</p>

<note>
Während des Bootstraps und während <c>emerge system</c> wird distcc teilweise
nicht genutzt: Einige Ebuilds oder Pakete arbeiten nicht gut mit distcc zusammen
und deaktivieren distcc aus diesem Grund.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Problembehebung</title>
<section>
<title>Mozilla und Xfree</title>
<body>

<p>
Wenn Sie verschiendene Pakete emergen werden Sie bemerken, dass nicht
alle verteilt kompiliert (und vor allem noch nicht einmal parallel
gebaut) werden. Der Grund ist, dass die Entwickler der Mozilla und XFree
Ebuilds paralleles Kompilieren abgestellt haben, da bekannt ist, dass
dies Probleme verursachen kann.
</p>

<p>
Manchmal verursacht distcc auch Kompilierungsfehler. Wenn das auf Ihrem System
passiert, <uri link="http://bugs.gentoo.org">teilen Sie es uns bitte mit</uri>.
</p>

</body>
</section>
<section>
<title>Eine Mixtur aus hardened-gcc und nicht-hardened-gcc Rechner kann zu Fehlern führen</title>
<body>

<p>
Mit einer solch langen Überschrift werden weitere Erklärungen fast
überflüssig. Wie auch immer. Wenn Sie planen distcc-Rechner mit Rechnern
in einem Netzwerk zu verwenden wobei einige den <uri
link="/proj/en/hardened/etdyn-ssp.xml">PaX/hardened-gcc</uri>
verwenden und einige nicht, werden Sie zwangsläufig auf Probleme
stoßen.
</p>

<p>
Die Lösung verlangt von Ihnen ein wenig Voraussicht; dazu führen Sie
<c>hardened-gcc -R</c> auf dem Rechner mit PaX/hardened-gcc aus, oder
Sie müssen PaX-Protection in ihren Kernel einbauen und danach erst ein
<c>emerge hardened-gcc</c> ausführen.  Beide Pakete sind eine gute
Sache, denn zum größten Teil steht ihnen der Schutz beider zur Verfügung
und bietet auch dem Benutzer genügend Transparenz.
</p>

</body>
</section>
<section>
<title>Verschiedene GCC Versionen</title>
<body>

<p>
Wenn Sie verschiedene GCC Versionen auf Ihren Rechnern installiert
haben, können sehr seltsame Probleme auftreten. Die Lösung ist
sicherzustellen, dass auf allen Rechnern die gleiche GCC Version
vorhanden ist.
</p>

<p>
Neuere Versionen von Portage benutzen <c>${CHOST}-gcc</c> anstelle von
<c>gcc</c>. Das bedeutet, dass Sie auf Probleme stoßen, wenn Sie i686 Systeme
mit anderen Typen (i386, i586) zusammen einsetzen. Ein Workaround dafür könnte
sein, <c>export CC='gcc' CXX='c++'</c> auszuführen bzw. dieses in
<path>/etc/make.conf</path> einzufügen - das muss jedoch noch ausgiebig getestet
werden. Wenn es bei Ihnen klappt, schreiben Sie bitte eine Email an mich,
<mail link="lisa@gentoo.org">Lisa Seelye</mail>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Distcc Extras</title>
<section>
<title>Distcc Überwachung</title>
<body>

<p>
Distcc wird mit zwei Überwachungstools ausgeliefert. Das textbasierte
wird immer mit gebaut und heisst <c>distccmon-text</c>.  Wenn Sie dieses
zum ersten Mal starten, mag es etwas verwirrend wirken, aber im Prinzip
ist es sehr einfach zu benutzen. Wenn Sie das Programm ohne Parameter
ausführen, startet es sofort. Wenn Sie aber eine Zahl als Parameter
übergeben, wird es sich alle N Sekunden aktualisieren. Hierbei ist N der
Wert, den Sie beim Aufruf übergeben haben.
</p>

<p>
Das andere Überwachungstool wird nur gebaut, wenn Sie <c>gtk</c> in
den <c>USE</c>-Flags stehen haben. Dieses basiert auf GTK+ und läuft
unter X und ist wirklich sehr schön.
</p>

<pre caption="Überwachung starten">
# <i>distccmon-text N</i>
<comment>(oder)</comment>
# <i>distccmon-gnome</i>
<comment>(Um die distcc Nutzung von Portage zu überwachen:)</comment>
# <i>DISTCC_DIR="/var/tmp/portage/.distcc/" distccmon-text N</i>
<comment>(oder)</comment>
# <i>DISTCC_DIR="/var/tmp/portage/.distcc/" distccmon-gnome</i>
</pre>

<impo>
Wenn Ihr distcc Verzeichnis sich an einer anderen Stelle befindet, dann ändern 
Sie die DISTCC_DIR Variable bitte entsprechend.
</impo>

</body>
</section>
</chapter>
</guide>
