<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/apache-upgrading.xml,v 1.8 2008/05/12 21:06:21 keytoaster Exp $ -->

<!-- English CVS Version: 1.12 -->

<guide link="/doc/de/apache-upgrading.xml" lang="de">
<title>Apache upgraden</title>

<author title="Autor">
  <mail link="vericgar@gentoo.org">Michael Stewart</mail>
</author>
<author title="Bearbeiter">
  <mail link="hollow"/>
</author>
<author title="Bearbeiter">
  <mail link="nightmorph"/>
</author>
<author title="Übersetzer">
  <mail link="Thesan@thaor.net">Stefan Becker</mail>
</author>

<abstract>
Dieses Dokument beschreibt die Vorgehensweise die Endanwender für ein Upgrade
ihrer Apache-Installation benutzen sollten.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>2.8</version>
<date>2007-12-11</date>

<chapter id="upgrade-2.2.6-r4">
<title>Upgraden von &lt;2.2.6-r4</title>
<section>
<body>

<p>
Die Apache-Ebuilds haben für eine lange Zeit
<path>/etc/apache2/apache2-builtin-mods</path> benutzt, um die built-in Module
zur Kompilierzeit auszuwählen. Dieses Verhalten hat jedoch einige Nachteile:
</p>

<ul>
  <li>
    Das Auwählen der built-in Module während des ersten Merges ist nicht möglich
  </li>
  <li>
    Portage weiß nicht, welche Module installiert wurden. Dies ist besonders
    nervig für binäre Pakete.
  </li>
  <li>
    Portage wird versuchen, <path>apache2-builtin-mods</path> bei jedem Upgrade
    zu überschreiben.
  </li>
</ul>

<p>
Um diese Lage zu bessern, wird <path>/etc/apache2/apache2-builtin-mods</path>
nicht mehr länger benutzt und wurde zu den neuen Variablen
<c>APACHE2_MODULES</c> und <c>USE_EXPAND</c> migriert. Um Ihre persönliche
Modulauswahl ins neue Format zu konvertieren, benutzen Sie folgenden Befehl:
</p>

<pre caption="Konvertieren der apache2-builtin-mods zu APACHE2_MODULES">
$ <i>echo APACHE2_MODULES=\"$(sed '/^mod_/s/mod_\(.*\)\s\+\(shared\|static\)/\1/;t n;d;:n' /etc/apache2/apache2-builtin-mods)\" >> /etc/make.conf</i>
# <i>rm /etc/apache2/apache2-builtin-mods</i>

<comment>(Sie können nun Apache sicher upgraden:)</comment>
# <i>emerge -uva '>=www-servers/apache-2.2.6-r4'</i>
</pre>

<p>
Zusätzlich zu dem neuen <c>APACHE2_MODULES</c> wurden die lokalen USE-Flags
aufgeräumt:
</p>

<ul>
  <li>
    Alle MPM USE-Flags wurden in die <c>APACHE2_MPMS</c> <c>USE_EXPAND</c>
    Variable verschoben
  </li>
  <li>
    <c>no-suexec</c> ist jetzt <c>suexec</c>
  </li>
  <li>
    <c>static-modules</c> ist jetzt <c>static</c>
  </li>
</ul>

<p>
Eine detaillierte Beschreibung der alten und entsprechenden neuen USE-Flags
finden Sie <uri link="#use-2.2.6-r4">unten</uri>.
</p>

</body>
</section>
</chapter>

<chapter id="upgrade-2.0.52-r3">
<title>Upgraden von &lt;2.0.52-r3</title>
<section>
<title>Einführung</title>
<body>

<p>
Der Zustand des Apache und seiner Module innerhalb von Gentoo wurde langsam
trostlos. Es gab eine Reihe von Problemen die den Support und die Pflege von
allem, wofür das Apache Team verantwortlich ist, schwierig machten:
</p>

<ul>
  <li>
    Die Konfiguration, die mit Gentoo ausgeliefert wurde, unterschied sich
    enorm von einer regulären Konfiguration, die die meisten Benutzer
    erwarteten
  </li>
  <li>
    Viele Module haben einen ähnlichen Code verwendet, aber alle erledigten
    Dinge auf ihre eigene Art und Weise
  </li>
  <li>
    Die meisten Module wurden nicht besonders gut gepflegt, hauptsächlich wegen
    der großen Zahl der verfügbaren Module
  </li>
  <li>Es gab keinen Standard für die Konfiguration der Module</li>
  <li>
    Einige Module wären mit beiden Apache Versionen lauffähig gewesen, aber die
    Ebuilds haben das nicht berücksichtigt
  </li>
  <li>
    Einige Optionen die Apache bietet waren für Gentoo-Benutzer nicht verfügbar
    (zum Beispiel MPMs)
  </li>
  <li>Apache Bugs sammelten sich an</li>
</ul>

<p>
Dieses Dokument beschreibt, wie Sie Ihren Apache upgraden ohne ihr System kaputt
zu machen. Wenn Sie ein Entwickler sind oder gerne wissen möchten, was wir
geändert haben, oder wie Ebuilds angepasst werden müssen, um die Vorteile
unserer Eclass nutzen zu können, sehen Sie sich die <uri
link="/proj/en/apache/apache-developer.xml">Apache Developer Reference</uri> an.
</p>

</body>
</section>
<section>
<title>Upgraden</title>
<body>

<p>
Es gab viele Änderungen daran, wie Apache unter Gentoo funktioniert. Jedes
Paket, das im direkten Zusammenhang mit Apache steht, muss aktualisiert werden
und einige Dinge, die bisher funktioniert haben, funktionieren jetzt nicht mehr.
</p>

<p>
Als erstes müssen Sie herausfinden welche Pakete ein Upgrade benötigen. Sie
können das mit Hilfe des <c>equery</c> Tools, welches Bestandteil des
<c>app-portage/gentoolkit</c> Pakets ist, feststellen.
</p>

<pre caption="Auffinden von zu aktualisierenden Paketen">
$ <i>equery depends www-servers/apache</i>
[ Searching for packages depending on www-servers/apache... ]
dev-db/phpmyadmin-2.5.6
dev-php/mod_php-4.3.10
dev-php/phpsysinfo-2.1-r2
net-www/mod_bandwidth-2.0.5
net-www/mod_layout-4.0.1a
net-www/mod_mp3-0.40
net-www/mod_random-2.0
net-www/mod_throttle-3.1.2-r1
www-apache/mod_ldap_userdir-1.1.4
www-apache/mod_loopback-1.04
www-apache/mod_watch-3.18
www-apps/viewcvs-0.9.2_p20030430
</pre>

<impo>
Die Pakete die Sie installiert haben, können vollständig andere sein. Stellen
Sie sicher, dass Sie den oben stehenden Befehl selbst ausgeführt zu haben.
</impo>

<warn>
Es gibt einige Module und Pakete die Apache benötigen und noch nicht auf den
neuesten Stand gebracht wurden. Bitte <uri
link="http://bugs.gentoo.org">durchsuchen Sie Bugzilla</uri> für jedes
kritische Paket das Sie mit Ihrem Apache einsetzen.
</warn>

<p>
Viele Webapplikationen werden von diesem Upgrade nicht beeinflusst, da die
meisten Webapplikationen die <c>webapp</c> Eclass benutzen, welche sich darum
kümmert, dass diese richtig installiert werden. Sie sollten überprüfen ob es
vielleicht eine neue Revision gibt.
</p>

<p>
Da wir einige neue USE-Flags eingeführt haben, möchten Sie vielleicht einen
Blick darauf werfen und entsprechende Zeilen in ihre
<path>/etc/portage/package.use</path> einfügen. Für weitere Informationen
schauen Sie sich die <uri link="#use-2.2.6-r4">von Apache unterstützten
USE-Flags</uri> an.
</p>

<pre caption="Überprüfen der USE-Flags und erneutes Kompilieren">
<comment>(Prüfen Sie die USE-Flags und die nötigen Updates)</comment>
# <i>emerge --pretend --verbose --update --newuse --deep apache subversion \
mod_php mod_bandwidth mod_layout mod_ldap_userdir mod_loopback mod_mp3 \
mod_random mod_throttle mod_watch</i>

<comment>(Pakete aktualisieren)</comment>
# <i>emerge --verbose --update --newuse --deep apache subversion mod_php \
mod_bandwidth mod_layout mod_ldap_userdir mod_loopback mod_mp3 mod_random \
mod_throttle mod_watch</i>

<comment>(Möglicherweise ist es einfacher ein World-Update zu machen, anstelle
 des obenstehenden)
</comment>
# <i>emerge --ask --verbose --update --newuse --deep world</i>
</pre>

<p>
Nun müssen Sie Apache und seine Module neu konfigurieren. Beginnen Sie damit
<c>etc-update</c> oder <c>dispatch-conf</c> auszuführen um die Dateien in
<path>/etc/init.d</path> und <path>/etc/conf.d</path> zu aktualisieren. Sie
werden feststellen, dass Ihre Apache Konfigurationsdateien nicht mit in der
Liste der zu aktualisierenden Dateien erscheinen, dies liegt daran, dass
sämtliche Apache Konfigurationsdateien nun an einem anderen Ort gespeichert
werden.
</p>

<p>
Wenn Sie Änderungen an den alten <path>apache.conf</path> und
<path>commonapache.conf</path> Standarddateien vorgenommen haben, müssen
Sie diese Änderungen in die Datei <path>/etc/apache{|2}/httpd.conf</path>
migrieren. Des Weiteren haben sich die Speicherorte für die Module und
Virtual-Hosts geändert. Diese befinden sich nun in
<path>/etc/apache2/modules.d</path> bzw. <path>/etc/apache2/vhosts.d</path>.
</p>

<p>
Wenn Sie damit fertig sind Ihre Änderungen in die neuen Dateien zu übertragen,
müssen Sie die alten Konfigurationsdateien löschen (oder Sie an einen sicheren
Ort verschieben). Das neue <path>/etc/init.d/apache{|2}</path> überprüft ob
diese Dateien existieren und lässt Sie den Apache nicht starten bis Sie sie
entfernt haben und so zeigen, dass Sie den Apache mit den neuen Pfaden
rekonfiguriert haben.
</p>

<note>
Viele Module die ehemals standardmäßig aktiviert waren sind dies nun nicht
mehr. Wenn es sich um built-in Module handelt, dann entkommentieren Sie einfach
die entsprechende Zeile in der httpd.conf. Wenn es sich aber um externe Module
handelt suchen Sie in der .conf Datei des Moduls nach einer <c>IfDefine</c>
Anweisung und fügen den Namen der <path>/etc/conf.d/apache{|2}</path> hinzu
um das Modul zu aktivieren.
</note>

<p>
Nun sollten Sie den Apache neustarten.
</p>

<pre caption="Apache neustarten">
# <i>/etc/init.d/apache stop</i>
# <i>/etc/init.d/apache start</i>
</pre>

<p>
Wenn Sie irgendwelche Schwierigkeiten haben sehen Sie im <uri
link="/doc/de/apache-troubleshooting.xml">Apache Troubleshooting Guide</uri>
nach und, sollte sich dort keine Lösung finden, schreiben Sie einen Bugreport
auf dem <uri link="http://bugs.gentoo.org">Gentoo Bugzilla</uri>. Denken Sie
daran anzugeben welche Module Sie benutzen und (falls Sie Apache 2 nutzen)
welches MPM USE-Flag Sie zum Kompilieren verwendet haben (wenn zutreffend).
Sie können auch <path>#gentoo-apache</path> auf dem Server
<path>irc.freenode.net</path> besuchen, um Hilfe zu ihren Problemen zu erfragen.
</p>

</body>
</section>
</chapter>

<chapter id="use-pre-2.2.6-r4">
<title>Unterstütze USE-Flags in &lt;2.2.6-r4</title>
<section>
<body>

<p>
Es gibt einige spezifische USE-Flags für Apache und seine Module. Apache
unterstützt darüber hinaus weitere, allgemeinere USE-Flags wie z.B. <c>ssl</c>,
aber die Auswirkung unterscheidet sich kaum von der die diese USE-Flags an
anderer Stelle haben, deshalb wurden diese USE-Flags nicht mit in die folgende
Liste aufgenommen. Um eine vollständige Liste aller unterstützten USE-Flags zu
erhalten führen Sie <c>emerge --verbose --pretend apache</c> aus.
</p>

<table>
<tr>
  <th>USE-Flag</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti>apache2</ti>
  <ti>
    Dieses USE-Flag sollte immer gesetzt sein, wenn Sie die Apache-2.0 Reihe
    verwenden, allerdings nicht wenn Sie die Apache-1.3 Versionen einsetzen.
    Die Eclass benutzt dieses USE-Flag, um festzustellen welche Apache-Version
    benutzt wird.
  </ti>
</tr>
<tr>
  <ti>debug</ti>
  <ti>
    Aktiviert einen Hook, der es externen Modulen ermöglicht, sich
    einzuschalten und etwas zu tun, nachdem ein Child gecrasht ist. Es gibt
    bereits zwei Module, <c>mod_whatkilledus</c> und <c>mod_backtrace</c>, die
    Gebrauch von diesem Hook machen.
  </ti>
</tr>
<tr>
  <ti>doc</ti>
  <ti>
    Installiere das Apache-Manual und Konfiguration.
  </ti>
</tr>
<tr>
  <ti>ldap</ti>
  <ti>
    Installiert <c>mod_ldap</c> und <c>mod_auth_ldap</c>/<c>mod_authnz_ldap</c>.
  </ti>
</tr>
<tr>
  <ti>ssl</ti>
  <ti>
    Installiert <c>mod_ssl</c>.
  </ti>
</tr>
<tr>
  <ti>mpm-itk</ti>
  <ti>Erstellt das <uri link="http://mpm-itk.sesse.net/">itk</uri> MPM</ti>
</tr>
<tr>
  <ti>mpm-leader</ti>
  <ti>
    Erstellt das <uri
    link="http://httpd.apache.org/docs/2.0/mod/leader.html">leader</uri> MPM
  </ti>
</tr>
<tr>
  <ti>mpm-peruser</ti>
  <ti>
    Erstellt das <uri link="http://www.telana.com/peruser.php">peruser</uri>
    MPM
  </ti>
</tr>
<tr>
  <ti>mpm-prefork</ti>
  <ti>
    Erstellt das <uri
    link="http://httpd.apache.org/docs/2.0/mod/prefork.html">prefork</uri> MPM
  </ti>
</tr>
<tr>
  <ti>mpm-threadpool</ti>
  <ti>
    Erstellt das <uri
    link="http://httpd.apache.org/docs/2.0/mod/threadpool.html">threadpool</uri>
    MPM
  </ti>
</tr>
<tr>
  <ti>mpm-worker</ti>
  <ti>
    Erstellt das <uri
    link="http://httpd.apache.org/docs/2.0/mod/worker.html">worker</uri> MPM
  </ti>
</tr>
<tr>
  <ti>static-modules</ti>
  <ti>
    Die Basismodule werden statisch in das Apache-Binary verlinkt, so dass
    LoadModule nicht benötigt wird, um diese Module zu laden.
  </ti>
</tr>
</table>

<note>
Auch wenn es viele <c>mpm-*</c> USE-Flags gibt, schließen diese sich gegenseitig
aus. Sie sollten nur ein einziges der <c>mpm-*</c> USE-Flags aktivieren. (Falls
Sie keines aktivieren, wird entweder <c>mpm-prefork</c> oder <c>mpm-worker</c>
benutzt, abhängig davon, ob das threads USE-Flag gesetzt ist.)
</note>

</body>
</section>
</chapter>

<chapter id="use-2.2.6-r4">
<title>Unterstütze USE-Flags in 2.2.6-r4 und höher</title>
<section>
<body>

<p>
Mit der Einführung von <c>APACHE2_MODULES</c> war ein generelles Aufräumen der
USE-Flags erforderlich. Die folgende Tabelle listet alle unterstützten USE-Flags
für <c>apache-2.2.6-r4</c> und höher auf, ebenso das entsprechende Flag in
älteren Versionen.
</p>

<table>
<tr>
  <th>USE-Flag</th>
  <th>Altes USE-Flag</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti>debug</ti>
  <ti>debug</ti>
  <ti>
    Aktiviert einen Hook, der es externen Modulen ermöglicht, sich
    einzuschalten und etwas zu tun, nachdem ein Child gecrasht ist. Es gibt
    bereits zwei Module, <c>mod_whatkilledus</c> und <c>mod_backtrace</c>, die
    Gebrauch von diesem Hook machen.
  </ti>
</tr>
<tr>
  <ti>doc</ti>
  <ti>doc</ti>
  <ti>
    Installiere das Apache-Manual und Konfiguration.
  </ti>
</tr>
<tr>
  <ti>ldap</ti>
  <ti>ldap</ti>
  <ti>
    Installiert <c>mod_ldap</c> und <c>mod_auth_ldap</c>/<c>mod_authnz_ldap</c>.
  </ti>
</tr>
<tr>
  <ti>ssl</ti>
  <ti>ssl</ti>
  <ti>
    Installiert <c>mod_ssl</c>.
  </ti>
</tr>
<tr>
  <ti>static</ti>
  <ti>static-modules</ti>
  <ti>
    Die Basismodule werden statisch in das Apache-Binary verlinkt, so dass
    LoadModule nicht benötigt wird, um diese Module zu laden.
  </ti>
</tr>
<tr>
  <ti>suexec</ti>
  <ti>no-suexec</ti>
  <ti>Installiert <c>mod_suexec</c> und die <c>suexec</c> Hilfs-Binary</ti>
</tr>
<tr>
  <ti>threads</ti>
  <ti>threads</ti>
  <ti>
    Wählt die standardmäßige MPM aus, wenn keine in APACHE2_MPMS gesetzt ist
  </ti>
</tr>
</table>

<p>
Die folgende Tabelle listet unterstützte <c>APACHE2_MPMS</c> seit
<c>apache-2.2.6-r4</c> und deren entsprechendes, vorheriges, lokales USE-Flag
auf.
</p>

<table>
<tr>
  <th>Flag</th>
  <th>Altes USE-Flag</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti>event</ti>
  <ti>mpm-event</ti>
  <ti>Eine experimentelle Variante der standardmäßigen worker MPM</ti>
</tr>
<tr>
  <ti>itk</ti>
  <ti>mpm-itk</ti>
  <ti>
    Ermöglicht es, jeden virtuellen Host unter einer separaten uid und gid
    auszuführen
  </ti>
</tr>
<tr>
  <ti>peruser</ti>
  <ti>mpm-peruser</ti>
  <ti>
    Peruser ist eine funktionierende Implementierung der perchild MPM, die es
    erlaubt, jeden Apache-Kindprozess unter seinem eigenen Benutzer und seiner
    eigenen Gruppe auszuführen, wobei jeder seinen eigenen Satz an virtuellen
    Hosts handhabt
  </ti>
</tr>
<tr>
  <ti>prefork</ti>
  <ti>mpm-prefork</ti>
  <ti>Implementiert einen non-threaded, pre-forking Webserver</ti>
</tr>
<tr>
  <ti>worker</ti>
  <ti>mpm-worker</ti>
  <ti>
    Multi-Processing Module, welches einen hybriden, multi-threaded,
    multi-prozess Webserver implementiert
  </ti>
</tr>
</table>

<p>
Die folgende Tabelle listet unterstützte <c>APACHE2_MODULES</c> seit
<c>apache-2.2.6-r4</c> auf.
</p>

<table>
<tr>
  <th>Flag</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti>actions</ti>
  <ti>
    CGI-Skripte basierend auf dem Media-Typ und der Request-Methode ausführen
  </ti>
</tr>
<tr>
  <ti>alias</ti>
  <ti>
    Bereitstellen von "Mapping" verschiedener Teile des Host-Dateisystems im
    Dokumentbaum und für URL-Umleitung
  </ti>
</tr>
<tr>
  <ti>asis</ti>
  <ti>Sendet Dateien, die ihre eigenen HTTP-Header enthalten</ti>
</tr>
<tr>
  <ti>auth_basic</ti>
  <ti>Grundlegende Authentifikation</ti>
</tr>
<tr>
  <ti>auth_digest</ti>
  <ti>Benutzerauthentifikation unter Benutzung von MD5 Digest Authentifikation</ti>
</tr>
<tr>
  <ti>authn_alias</ti>
  <ti>
    Stellt die Fähigkeit bereit, erweiterte Authentifikationsprovider zu
    erstellen, basierend auf eigentlichen Providern
  </ti>
</tr>
<tr>
  <ti>authn_anon</ti>
  <ti>Erlaubt "anonymous" Benutzerzugriff zu authentifizierten Bereichen</ti>
</tr>
<tr>
  <ti>authn_dbd</ti>
  <ti>Benutzerauthentifizierung unter Benutzung einer SQL-Datenbank</ti>
</tr>
<tr>
  <ti>authn_dbm</ti>
  <ti>Benutzerauthentifikation unter Benutzung von DBM-Dateien</ti>
</tr>
<tr>
  <ti>authn_default</ti>
  <ti>Authentifikationsausweichlösungsmodul</ti>
</tr>
<tr>
  <ti>authn_file</ti>
  <ti>Benutzerauthentifikation unter Benutzung von Textdateien</ti>
</tr>
<tr>
  <ti>authz_dbm</ti>
  <ti>Gruppenautorisierung unter Benutzung von DBM-Dateien</ti>
</tr>
<tr>
  <ti>authz_default</ti>
  <ti>Autorisierungsausweichlösungsmodul</ti>
</tr>
<tr>
  <ti>authz_groupfile</ti>
  <ti>Gruppenautorisierung unter Benutzung von Textdateien</ti>
</tr>
<tr>
  <ti>authz_host</ti>
  <ti>Gruppenautorisierungen basierend auf Host (Name oder IP-Adresse)</ti>
</tr>
<tr>
  <ti>authz_owner</ti>
  <ti>Autorisierung basierend Dateieigentümerschaft</ti>
</tr>
<tr>
  <ti>authz_user</ti>
  <ti>Benutzerautorisierung</ti>
</tr>
<tr>
  <ti>autoindex</ti>
  <ti>
    Generiert Verzeichnisindizes automatisch, ähnlich zum Unix-Befehl <c>ls</c>
  </ti>
</tr>
<tr>
  <ti>cache</ti>
  <ti>Inhaltscache "keyed" zu URIs</ti>
</tr>
<tr>
  <ti>cern_meta</ti>
  <ti>CERN httpd metafile semantics</ti>
</tr>
<tr>
  <ti>charset_lite</ti>
  <ti>Spezifiziere Zeichensatzübersetzung oder -kodierung</ti>
</tr>
<tr>
  <ti>dav</ti>
  <ti>Verteilte Authoring und Versioning (WebDAV) Funktionalität</ti>
</tr>
<tr>
  <ti>dav_fs</ti>
  <ti>Dateisystemprovider für mod_dav</ti>
</tr>
<tr>
  <ti>dav_lock</ti>
  <ti>Generisches Sperrmodul für mod_dav</ti>
</tr>
<tr>
  <ti>dbd</ti>
  <ti>Verwaltet SQL-Datenbankverbindungen</ti>
</tr>
<tr>
  <ti>deflate</ti>
  <ti>Komprimiere Inhalt bevor er an Clients geliefert wird</ti>
</tr>
<tr>
  <ti>dir</ti>
  <ti>
    Provides für "trailing slash" Umleitungen und Verzeichnisindexdateien
  </ti>
</tr>
<tr>
  <ti>disk_cache</ti>
  <ti>Inhaltscachespeichermanager "keyed" zu URIs</ti>
</tr>
<tr>
  <ti>dumpio</ti>
  <ti>Gibt kompletten I/O zum Error-Log falls gewünscht</ti>
</tr>
<tr>
  <ti>env</ti>
  <ti>
    Modifiziert die Umgebung, welche an CGI-Skripte und SSI-Seiten übergeben wird
  </ti>
</tr>
<tr>
  <ti>expires</ti>
  <ti>
    Generierung von Expires und Cache-Controll HTTP Headers, nach
    benutzerspezifizierten Kriterien
  </ti>
</tr>
<tr>
  <ti>ext_filter</ti>
  <ti>
    Leite den Antwortkörper durch ein externes Programm vor Auslieferung an
    einen Client
  </ti>
</tr>
<tr>
  <ti>file_cache</ti>
  <ti>Cachet eine statische Liste von Dateien im Speicher</ti>
</tr>
<tr>
  <ti>filter</ti>
  <ti>Kontext-sensitive kluges Filterkonfigurationsmodul</ti>
</tr>
<tr>
  <ti>headers</ti>
  <ti>Anpassung von HTTP Request und Response Headern</ti>
</tr>
<tr>
  <ti>ident</ti>
  <ti>RFC 1413 ident lookups</ti>
</tr>
<tr>
  <ti>imagemap</ti>
  <ti>Server-side imagemap Verarbeitung</ti>
</tr>
<tr>
  <ti>include</ti>
  <ti>Server-parsed HTML-Dokumente (Server Side Includes)</ti>
</tr>
<tr>
  <ti>info</ti>
  <ti>Stellt eine umfassende Übersicht der Serverkonfiguration bereit</ti>
</tr>
<tr>
  <ti>log_config</ti>
  <ti>Loggen der Anfragen an den Server</ti>
</tr>
<tr>
  <ti>log_forensic</ti>
  <ti>Forensisches Loggen der Anfragen an den Server</ti>
</tr>
<tr>
  <ti>logio</ti>
  <ti>Loggen von Eingabe- und Ausgabebytes pro Anfrage</ti>
</tr>
<tr>
  <ti>mem_cache</ti>
  <ti>Inhaltscache "keyed" zu URIs</ti>
</tr>
<tr>
  <ti>mime</ti>
  <ti>
    Verbindet die Endung des angefragten Dateinamens mit dem Verhalten
    (Handler und Filter) und dem Inhalt (MIME-Typ, Sprache, Zeichensatz,
    Kodierung) der Datei
  </ti>
</tr>
<tr>
  <ti>mime_magic</ti>
  <ti>
    Stellt den MIME-Typ einer Datei durch Anschauen der ersten Bytes des Inhalts
    fest
  </ti>
</tr>
<tr>
  <ti>negotiation</ti>
  <ti>Provides für content negotiation</ti>
</tr>
<tr>
  <ti>proxy</ti>
  <ti>HTTP/1.1 Proxy/Gateway-Server</ti>
</tr>
<tr>
  <ti>proxy_ajp</ti>
  <ti>AJP Unterstützungsmodul für mod_proxy</ti>
</tr>
<tr>
  <ti>proxy_balancer</ti>
  <ti>mod_proxy Erweiterung für Ausgleichen der Load</ti>
</tr>
<tr>
  <ti>proxy_connect</ti>
  <ti>mod_proxy Erweiterung für CONNECT Anfragenhandhabung</ti>
</tr>
<tr>
  <ti>proxy_ftp</ti>
  <ti>FTP Unterstützungsmodul für mod_proxy</ti>
</tr>
<tr>
  <ti>proxy_http</ti>
  <ti>HTTP Unterstützungsmodul für mod_proxy</ti>
</tr>
<tr>
  <ti>rewrite</ti>
  <ti>
    Stellt eine regelbasierte Umleitungs-Engine bereit, um angeforderte URLs
    on-the-fly umzuleiten.
  </ti>
</tr>
<tr>
  <ti>setenvif</ti>
  <ti>
    Ermöglicht das Setzen von Umgebungsvariablen basierend auf Eigenschaften
    der Anfrage
  </ti>
</tr>
<tr>
  <ti>speling</ti>
  <ti>
    Versucht irrtümliche URLs, die Benutzer eingegeben haben können, zu
    korrigieren, indem Großschreibung ignoriert wird und bis zu eine
    Fehlbuchstabierung erlaubt wird
  </ti>
</tr>
<tr>
  <ti>status</ti>
  <ti>Stellt Informationen zu Serveraktivitäten und -performanz bereit</ti>
</tr>
<tr>
  <ti>unique_id</ti>
  <ti>
    Stellt eine Umgebungsvariable mit einem eindeutigen Bezeichner für jede
    Anfrage bereit
  </ti>
</tr>
<tr>
  <ti>userdir</ti>
  <ti>Benutzerspezifische Verzeichnisse</ti>
</tr>
<tr>
  <ti>usertrack</ti>
  <ti>Clickstream-Loggen von Benutzeraktivität auf einer Seite</ti>
</tr>
<tr>
  <ti>version</ti>
  <ti>Versionsabhängige Konfiguration</ti>
</tr>
<tr>
  <ti>vhost_alias</ti>
  <ti>Provides für dynamisch konfiguriertes Massen-Virtual-Hosting</ti>
</tr>
</table>

</body>
</section>
</chapter>
</guide>