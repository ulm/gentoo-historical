<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/apache-upgrading.xml,v 1.5 2007/04/09 03:26:25 grahl Exp $ -->

<!-- English CVS Version: 1.6 -->

<guide link="/doc/de/apache-upgrading.xml" lang="de">
<title>Apache upgraden</title>

<author title="Autor">
  <mail link="vericgar@gentoo.org">Michael Stewart</mail>
</author>
<author title="Übersetzer">
  <mail link="Thesan@thaor.net">Stefan Becker</mail>
</author>

<abstract>
Dieses Dokument beschreibt die Vorgehensweise die Endanwender benutzen sollten
für ein Upgrade ihrer Apache-Installation.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>2.3</version>
<date>2005-09-29</date>

<chapter>
<title>Einleitung</title>
<section>
<body>

<p>
Der Zustand des Apache und seiner Module innerhalb von Gentoo wurde langsam
trostlos. Es gab eine Reihe von Problemen die den Support und die Pflege von
allem, wofür das Apache Team verantwortlich ist, schwierig machten:
</p>

<ul>
  <li>
    Die Konfiguration, die mit Gentoo ausgeliefert wurde, unterschied sich
    enorm von einer regulären Konfiguration, die die meisten Benutzer
    erwarteten
  </li>
  <li>
    Viele Module haben einen ähnlichen Code verwendet, aber alle erledigten
    Dinge auf ihre eigene Art und Weise
  </li>
  <li>
    Die meisten Module wurden nicht besonders gut gepflegt, hauptsächlich wegen
    der großen Zahl der verfügbaren Module
  </li>
  <li>Es gab keinen Standard für die Konfiguration der Module</li>
  <li>
    Einige Module wären mit beiden Apache Versionen lauffähig gewesen, aber die
    Ebuilds haben das nicht berücksichtigt
  </li>
  <li>
    Einige Optionen die Apache bietet waren für Gentoo-Benutzer nicht verfügbar
    (zum Beispiel MPMs)
  </li>
  <li>Apache Bugs sammelten sich an</li>
</ul>

<p>
Die Lösung? Das Apache Team wurde vergrößert. Einige neue Entwickler wurden in
das Team aufgenommen, welche dann zusammen daran gearbeitet haben eine Eclass
zu entwickeln, alle Module zu aktualisieren und eine ganze Reihe von Bugs zu
beheben.
</p>

<p>
Dieses Dokument beschreibt wie Sie Ihren Apache upgraden ohne ihr System kaputt
zu machen. Wenn Sie ein Entwickler sind oder gerne wissen möchten was wir
geändert haben, oder wie Ebuilds angepasst werden müssen um die Vorteile unserer
Eclass nutzen zu können, sehen Sie sich die <uri
link="/doc/en/apache-developer.xml">Apache Developer Reference</uri> an.
</p>

</body>
</section>
</chapter>

<chapter id="Upgrade">
<title>Anleitung fürs Upgrade</title>
<section>
<body>

<p>
Wir haben viel an der Art verändert wie Apache mit Gentoo funktioniert. Jedes
Paket das im direkten Zusammenhang mit Apache steht muss aktualisiert werden
und einige Dinge die bisher funktioniert haben, funktionieren jetzt nicht mehr.
</p>

<p>
Als erstes müssen Sie herausfinden welche Pakete ein Upgrade benötigen. Sie
können das mit Hilfe des <c>equery</c> Tools, welches Bestandteil des
<c>app-portage/gentoolkit</c> Pakets ist, feststellen.
</p>

<pre caption="Auffinden von zu aktualisierenden Paketen">
$ <i>equery depends net-www/apache</i>
[ Searching for packages depending on net-www/apache... ]
dev-db/phpmyadmin-2.5.6
dev-php/mod_php-4.3.10
dev-php/phpsysinfo-2.1-r2
net-www/mod_bandwidth-2.0.5
net-www/mod_layout-4.0.1a
net-www/mod_ldap_userdir-1.1.4
net-www/mod_loopback-1.04
net-www/mod_mp3-0.40
net-www/mod_random-2.0
net-www/mod_throttle-3.1.2-r1
net-www/mod_watch-3.18
www-apps/viewcvs-0.9.2_p20030430
</pre>

<impo>
Die Pakete die Sie installiert haben, können vollständig andere sein. Stellen
Sie sicher, dass Sie den oben stehenden Befehl selbst ausgeführt zu haben.
</impo>

<warn>
Es gibt einige Module und Pakete die Apache benötigen und noch nicht auf den
neuesten Stand gebracht wurden. Bitte <uri
link="http://bugs.gentoo.org">durchsuchen Sie Bugzilla</uri> für jedes
kritische Paket das Sie mit Ihrem Apache einsetzen.
</warn>

<p>
Viele Webapplikationen werden von diesem Upgrade nicht beeinflusst, da die
meisten Webapplikationen die <c>webapp</c> Eclass benutzen, welche sich darum
kümmert, dass diese richtig installiert werden. Sie sollten überprüfen ob es
vielleicht eine neue Revision gibt.
</p>

<p>
Da wir einige neue USE-Flags eingeführt haben, möchten Sie vielleicht einen
Blick darauf werfen und entsprechende Zeilen in ihre
<path>/etc/portage/package.use</path> einfügen. Für weitere Informationen
schauen Sie sich die <uri link="#use">von Apache unterstützten USE-Flags</uri>
an.
</p>

<pre caption="Überprüfen der USE-Flags und erneutes kompillieren">
<comment>(Prüfen Sie die USE-Flags und machen Sie die nötigen Updates)</comment>
# <i>emerge --pretend --verbose --update --newuse --deep apache subversion \
mod_php mod_bandwidth mod_layout mod_ldap_userdir mod_loopback mod_mp3 \
mod_random mod_throttle mod_watch</i>

<comment>(Pakete aktualisieren)</comment>
# <i>emerge --verbose --update --newuse --deep apache subversion mod_php \
mod_bandwidth mod_layout mod_ldap_userdir mod_loopback mod_mp3 mod_random \
mod_throttle mod_watch</i>

<comment>(Möglicherweise ist es einfacher ein World-Update zu machen, anstelle
 des obenstehenden)
</comment>
# <i>emerge --ask --verbose --update --newuse --deep world</i>
</pre>

<p>
Nun müssen Sie Apache und seine Module neu konfigurieren. Beginnen Sie damit
<c>etc-update</c> oder <c>dispatch-conf</c> auszuführen um die Dateien in
<path>/etc/init.d</path> und <path>/etc/conf.d</path> zu aktualisieren. Sie
werden feststellen, dass Ihre Apache Konfigurationsdateien nicht mit in der
Liste der zu aktualisierenden Dateien erscheinen, dies liegt daran, dass
sämtliche Apache Konfigurationsdateien nun an einem anderen Ort gespeichert
werden.
</p>

<p>
Wenn Sie Änderungen an den alten <path>apache.conf</path> und
<path>commonapache.conf</path> Standarddateien vorgenommen haben, müssen
Sie diese Änderungen in die Datei <path>/etc/apache{|2}/httpd.conf</path>
migrieren. Des Weiteren haben sich die Speicherorte für die Module und
Virtual-Hosts geändert. Diese befinden sich nun in
<path>/etc/apache2/modules.d</path> bzw. <path>/etc/apache2/vhosts.d</path>.
</p>

<p>
Wenn Sie damit fertig sind Ihre Änderungen in die neuen Dateien zu übertragen,
müssen Sie die alten Konfigurationsdateien löschen (oder Sie an einen sicheren
Ort verschieben). Das neue <path>/etc/init.d/apache{|2}</path> überprüft ob
diese Dateien existieren und lässt Sie den Apache nicht starten bis Sie sie
entfernt haben und so zeigen, dass Sie den Apache mit den neuen Pfaden
rekonfiguriert haben.
</p>

<note>
Viele Module die ehemals standardmäßig aktiviert waren sind dies nun nicht
mehr. Wenn es sich um built-in Module handelt, dann entkommentieren Sie einfach
die entsprechende Zeile in der httpd.conf. Wenn es sich aber um externe Module
handelt suchen Sie in der .conf Datei des Moduls nach einer <c>IfDefine</c>
Anweisung und fügen den Namen der <path>/etc/conf.d/apache{|2}</path> hinzu
um das Modul zu aktivieren.
</note>

<p>
Nun sollten Sie den Apache neustarten.
</p>

<pre caption="Apache neustarten">
# <i>/etc/init.d/apache stop</i>
# <i>/etc/init.d/apache start</i>
</pre>

<p>
Wenn Sie irgendwelche Schwierigkeiten haben sehen Sie im <uri
link="/doc/en/apache-troubleshooting.xml">Apache Troubleshooting Guide</uri>
nach und, sollte sich dort keine Lösung finden, schreiben Sie einen Bugreport
auf dem <uri link="http://bugs.gentoo.org">Gentoo Bugzilla</uri>. Denken Sie
daran anzugeben welche Module Sie benutzen und (falls Sie Apache 2 nutzen)
welches MPM USE-Flag Sie zum Kompilieren verwendet haben (wenn zutreffend).
Sie können auch <path>#gentoo-apache</path> auf dem Server
<path>irc.freenode.net</path> besuchen, um Hilfe zu ihren Problemen zu erfragen.
</p>

</body>
</section>
</chapter>

<chapter id="use">
<title>Von Apache unterstütze USE-Flags</title>
<section>
<body>


<p>
Es gibt einige spezifische USE-Flags für Apache und seine Module. Apache
unterstützt darüber hinaus weitere, allgemeinere USE-Flags wie z.B. <c>ssl</c>,
aber die Auswirkung unterscheidet sich kaum von der die diese USE-Flags an
anderer Stelle haben, deshalb wurden diese USE-Flags nicht mit in die folgende
Liste aufgenommen. Um eine vollständige Liste aller unterstützten USE-Flags zu
erhalten führen Sie <c>emerge --verbose --pretend apache</c> aus.
</p>

<table>
<tr>
  <th>USE-Flag</th>
  <th>Pakete</th>
  <th>Beschreibung</th>
</tr>
<tr>
  <ti>apache2</ti>
  <ti>depend.apache eclass (alle Module)</ti>
  <ti>
    Dieses USE-Flag sollte immer gesetzt sein wenn Sie die Apache-2.0 Reihe
    verwenden, allerdings nicht wenn Sie die Apache-1.3 Versionen einsetzen.
    Die Eclass benutzt dieses USE-Flag um festzustellen welche Apache Version
    benutzt wird.
  </ti>
</tr>
<tr>
  <ti>mpm-leader</ti>
  <ti>apache-2*</ti>
  <ti>
    Erstellt das <uri
    link="http://httpd.apache.org/docs/2.0/mod/leader.html">leader</uri> MPM
  </ti>
</tr>
<tr>
  <ti>mpm-metux</ti>
  <ti>apache-2*</ti>
  <ti>
    Erstellt das <uri link="http://www.metux.de/mpm/">metux</uri> MPM
  </ti>
</tr>
<tr>
  <ti>mpm-peruser</ti>
  <ti>apache-2*</ti>
  <ti>
    Erstellt das <uri link="http://www.telana.com/peruser.php">peruser</uri>
    MPM
  </ti>
</tr>
<tr>
  <ti>mpm-prefork</ti>
  <ti>apache-2*</ti>
  <ti>
    Erstellt das <uri
    link="http://httpd.apache.org/docs/2.0/mod/prefork.html">prefork</uri> MPM
  </ti>
</tr>
<tr>
  <ti>mpm-threadpool</ti>
  <ti>apache-2*</ti>
  <ti>
    Erstellt das <uri
    link="http://httpd.apache.org/docs/2.0/mod/threadpool.html">threadpool</uri>
    MPM
  </ti>
</tr>
<tr>
  <ti>mpm-worker</ti>
  <ti>apache-2*</ti>
  <ti>
    Erstellt das <uri
    link="http://httpd.apache.org/docs/2.0/mod/worker.html">worker</uri> MPM
  </ti>
</tr>
<tr>
  <ti>no-suexec</ti>
  <ti>apache</ti>
  <ti>
    Das suexec-Modul wird nicht erstellt (für alle die kein potenziell
    unsicherers suid-Programm in ihrem System wollen)
  </ti>
</tr>
<tr>
  <ti>static-modules</ti>
  <ti>apache</ti>
  <ti>
    Die Basismodule werden statisch in das Apache-Binary verlinkt, so dass
    LoadModule nicht benötigt wird um diese Module zu laden.
  </ti>
</tr>
<tr>
  <ti>lingerd</ti>
  <ti>apache-1*</ti>
  <ti>
    Liefert Unterstützung für
    <uri link="http://www.iagora.com/about/software/lingerd/">lingerd</uri>
  </ti>
</tr>
<tr>
  <ti>no-htdocs</ti>
  <ti>gentoo-webroot-default</ti>
  <ti>
    Verhindert die Installation des Standard-Webroots nach
    <path>/var/www/localhost</path>, so dass angepasste Dateien dort nicht
    überschrieben werden. Stattdessen wird das Standard-Webroot nach
    <path>/usr/share/doc/gentoo-webroot-default-*/webroot/</path> installiert.
  </ti>
</tr>
</table>

<note>
Obwohl es viele mpm-* USE-Flags gibt schließen sie sich gegenseitig aus. Sie
sollten genau eines der mpm-* USE-Flags setzen. (Wenn Sie keines setzen wird
mpm-prefork oder mpm-worker benutzt, abhängig davon ob das threads USE-Flag
gesetzt ist.)
</note>

</body>
</section>
</chapter>

</guide>
