<?xml version='1.0' encoding="UTF-8"?>

<!-- English CVS Version 1.13 -->

<guide link="doc/de/portage-user.xml">

<title>Portage Benutzer Leitfaden</title>

<author title="Chief Architect"><mail link="drobbins@gentoo.org">
	Daniel Robbins</mail>
</author>
<author title="Editor"><mail link="thomasfl@gentoo.org">
	Thomas Flavel</mail>
</author>
<author title="Editor"><mail link="zhen@gentoo.org">
	John P. Davis</mail>
</author>
<author title="Editor"><mail link="carl@gentoo.org">
	Carl Anderson</mail>
</author>
<author title="Editor"><mail link="peesh@gentoo.org">
	Jorge Paulo</mail>
</author>
<author title="Editor"><mail link="swift@gentoo.org">
	Sven Vermeulen</mail>
</author>
<author title="Übersetzung"><mail link="sebastian@beneke-it.de">
	Sebastian Beneke</mail>
</author>
<author title="Übersetzung"><mail link="dertobi123@gentoo.org">
	Tobias Scherbaum</mail>
</author>
		
<abstract>
	Diese Anleitung soll einen kurzen Überblick geben, wie Sie Ihre Pakete aktuell halten und
	das System pflegen können.
</abstract>

<version>1.4</version>
<date>09. Oktober 2003</date>

<chapter>
	<title>Zu Beginn</title>
	<section>
		<title>Portage auf den aktuellen Stand bringen</title>		
		<body>

			<p>
				Nachdem Sie Gentoo Linux installiert und ein wenig mit ihm gearbeitet haben, 
				ist es möglich, dass Sie Fehler in einigen Paketen entdecken oder Sie wollen 
				einfach nur die neusten Software Pakete installieren oder
				Ihre momentanen Pakete aktualisieren. Um dies durchzuführen, müssen 
				Sie sich unseren neuesten Portage Baum herunterladen, bzw. Ihre lokale Kopie 
				auf den neusten Stand bringen. Wir haben verschiedene Anonyme
				rsync-Server, die Sie benutzen können um dies zu tun. Hier erfahren Sie nun, 
				wie es geht.
			</p>

			<p>
				Benutzen Sie folgendes Kommando um Ihren Portage Baum zu synchronisieren.
			</p>
			
			<pre>
# <c>emerge rsync</c>
			</pre>

			<warn>
				Bitte beachten Sie, dass <c>emerge sync </c> automatisch die <i>--clean</i> Option
				aktiviert, das heisst alle Ihre Änderungen in <path>/usr/portage</path> werden wieder 
				gelöscht. Um Ihre eigenen Ebuilds aus dem Portage Baum auszulagern, benutzen Sie die
				<i>PORTAGE_OVERLAY</i> Funktion.
			</warn>

			<p>
				Wenn Sie anfangen viele Ebuilds zu schreiben, Bugs zu fixen und mehr, möchten Sie vielleicht
				Gentoo Linux Developer werden. Wenden Sie sich für weitere Informationen an
				<mail link="drobbins@gentoo.org">Daniel Robbins</mail> oder 
				<mail link="seemant@gentoo.org">Seemant Kulleen</mail>.
			</p>

		</body>
	</section>
	<section>
		<title>Portage updaten</title>
		<body>
			
			<p>
				Bevor Sie unseren Portage Baum verwenden können, ist es wichtig, dass Sie Ihre 
				Portage auf den aktuellen Stand bringen. Dies tun Sie mit folgendem
				Kommando:
			</p>

			<pre caption = "Portage aktualisieren">
<comment>Dies Zeigt an, welche Pakete aktualisiert werden sollen.</comment>
# <c>emerge -up system </c>
<comment>Dies aktualisiert die entsprechenden Pakete</comment>
# <c>emerge -u system </c>
			</pre>
		
			<p>
				Nun benutzen Sie die neueste Version von Portage. Ab jetzt können Sie unser 
				ebuild System benutzen, um Ihre installierte Software auf den neuesten Stand 
				zu bringen.
			</p>

		</body>	
	</section>
</chapter>

<chapter>
	<title>Einführung von <c>emerge</c></title>
	<section>
		<title><c>emerge --pretend</c></title>
		<body>
			
			<p>
				Bevor Sie ein Paket installieren, ist es grundsätzlich eine gute Idee zu schauen,
				welche Abhängigkeiten benötigt und welche Pakete aktualisiert werden müssen.
				<c>emerge --pretend</c> oder <c>emerge -p</c> kann dies für sie tun.
			</p>

			<pre caption="Emerge benutzen">
# <c>emerge -p xchat</c>

These are the packages that I would merge, in order.

Calculating dependencies......... done!
[ebuild   U] sys-libs/zlib-1.1.3-r2 to /
[ebuild   U] dev-libs/glib-1.2.10 to /
[ebuild N  ] media-libs/jpeg-6b-r2 to /
[ebuild N  ] x11-base/xfree-4.0.3-r3 to /
[ebuild N  ] x11-libs/gtk+-1.2.10-r1 to /
[ebuild N  ] media-libs/giflib-4.1.0-r3 to /
[ebuild N  ] media-libs/tiff-3.5.6_beta to /
[ebuild N  ] media-libs/imlib-1.9.10 to /
[ebuild N  ] net-irc/xchat-1.4.3 to /
			</pre>

			<p>
				In diesem bestimmten Fall werden wir <i>xchat</i> auf einer
				Maschine ohne X installieren.  So hat <c>emerge --pretend</c>
				richtig festgestellt, dass zunächst etliche Abhängigkeiten erfüllt werden müssen. 
				Besonders <path>sys-libs/zlib</path> und <path>dev-libs/glib</path> müssen aktualisiert 
				werden und ausserdem müssen noch einige Ebuilds 
				(natürlich auch <path>x11-base/xfree</path>) eingespielt werden.
			</p>
		
		</body>
	</section>
	<section>
		<title>USE und <c>emerge</c></title>
		<body>
			
			<p>
				Oben habe ich <c>emerge --pretend</c> auf einem System ausgeführt, welches
				<c>gnome</c> nicht in der <c>USE</c> Variable in <path>/etc/make.conf</path> definiert hat.
				Das bedeutet, dass eine optionale GNOME Unterstützung, falls vorhanden, nicht aktiviert wird. 
				Wie auch immer, <path>xchat</path> <e>hat</e> optionale GNOME Unterstützung. Nun lassen 
				Sie uns einen Blick auf die Ausgabe von <c>emerge --pretend</c> werfen, 
				nachdem ich <c>gnome</c> zur <c>USE</c> Umgebungsvariable in 
				<path>/etc/make.conf</path> ergänzt habe:
			</p>

			<pre caption="Emerge in Kombination mit USE Flags">
# <c>emerge -p xchat</c>

These are the packages that I would merge, in order.

Calculating dependencies............................ done!
[ebuild N  ] media-libs/jpeg-6b-r2 to /
[ebuild N  ] gnome-base/libghttp-1.0.9 to /
[ebuild N  ] media-libs/audiofile-0.2.1 to /
[ebuild N  ] media-sound/esound-0.2.22-r2 to /
[ebuild N  ] gnome-base/gnome-env-1.0 to /
[ebuild N  ] gnome-base/libxml-1.8.11 to /
[ebuild N  ] gnome-base/ORBit-0.5.8 to /
[ebuild N  ] gnome-base/oaf-0.6.5 to /
[ebuild   U] dev-libs/glib-1.2.10 to /
[ebuild N  ] net-libs/libwww-5.3.2-r1 to /
[ebuild N  ] media-libs/giflib-4.1.0-r3 to /
[ebuild N  ] dev-util/guile-1.4-r3 to /
[ebuild   U] sys-libs/zlib-1.1.3-r2 to /
[ebuild N  ] x11-base/xfree-4.0.3-r3 to /
[ebuild N  ] x11-libs/gtk+-1.2.10-r1 to /
[ebuild N  ] media-libs/tiff-3.5.6_beta to /
[ebuild N  ] media-libs/imlib-1.9.10 to /
[ebuild N  ] gnome-base/gnome-libs-1.2.13 to /
[ebuild N  ] gnome-base/glibwww-0.2-r1 to /
[ebuild N  ] gnome-base/gdk-pixbuf-0.11.0 to /
[ebuild N  ] gnome-base/gconf-1.0.0 to /
[ebuild N  ] gnome-base/gnome-vfs-1.0.1 to /
[ebuild N  ] gnome-base/control-center-1.4.0.1 to /
[ebuild N  ] gnome-base/scrollkeeper-0.2 to /
[ebuild N  ] dev-util/xml-i18n-tools-0.8.1 to /
[ebuild N  ] gnome-base/libglade-0.16-r1 to /
[ebuild N  ] gnome-base/gnome-core-1.4.0.4 to /
[ebuild N  ] net-irc/xchat-1.4.3 to /
			</pre>

			<p>
				Wie Sie sehen erkennt emerge Dank der gesetzten USE Variable, dass xchat optionale 
				GNOME Unterstützung beinhalten sollte. Damit diese optionale GNOME Unterstützung 
				korrekt kompiliert werden kann, muss zunächst GNOME installiert werden. 
				<c>emerge</c> erkennt dies und ergänzt verschiedene Pakete, die zur GNOME Installation
				benötigt werden zur Liste der zu installierenden Pakete. In einigen Fällen 
				kann es vorkommen, dass Ihre USE Variable nicht richtig gesetzt ist. Dadurch kann es 
				passieren, dass <c>emerge</c> unerwartete optionale Erweiterungen aktiviert oder ausschliesst. 
				Deshalb empfehle ich, dass Sie vor dem eigentlichen <c>emerge</c> immer ein 
				<c>emerge --pretend</c> ausführen. Dies gilt besonders für neue oder ungewöhnliche Ebuilds. 
				Dadurch wissen Sie, was Sie erwartet.
				Sobald alles OK aussieht können Sie mit dem eigentlich <c>emerge</c> durch weglassen der 
				<c>--pretend</c> Option fortfahren:</p>

			<pre caption="xchat emergen">
# <c>emerge xchat</c>
			</pre>

			<p>
				Nachdem alle Abhängigkeiten installiert sind (soweit es welche gibt; 
				nicht alle Pakete haben welche) wird der xchat Source nach <path>/usr/portage/distfiles</path> 
				runtergeladen, verifiziert (md5), entpackt, compiliert und in ein temporäres 
				Verzeichnis Namens "Sandbox" installiert. Danach werden sie ins lokale Filesystem integriert 
				und eine Paketdatenbank in <path>/var/db/pkg/net-irc/xchat-1.4.3/CONTENTS</path> erstellt. 
				Diese Datenbank enthält die installierten Dateien und ihre md5-Checksummen.
			</p>

			<p>
				Um zu sehen, welche USE Flags in Zusammenhang mit einem bestimmten Paket
				benutzt werden können fügen Sie das <c>-v</c> oder <c>--verbose</c> 
				Argument an <c>emerge -p</c> an:
			</p>
  	 	
  	 	<pre caption = "Benutzen von emerge mit --verbose">
# <i>emerge -pv gentoo-sources</i>
  	 
These are the packages that I would merge, in order:
  	 
Calculating dependencies ...done!
[ebuild    U ] sys-kernel/gentoo-sources-2.4.20-r5 -build +crypt -evms2
-aavm -usagi
			</pre>
  	 
		</body>
  </section>
  <section>
  	<title>Herausfinden, was sich geändert hat</title>
  	<body>
  	 
  		<p>
  			Wenn Sie herausfinden möchten, was sich zwischen der bereits installierten
  			und der neueren Version eines Pakets geändert hat fügen Sie 
  			<c>--changelog</c> odr <c>-l</c> als Argument an das <c>emerge</c> Kommando an:
  		</p>
  	 
 			<pre caption = "Anzeigen des ChangeLog">
# <i>emerge -pl mozilla</i>
  	 
These are the packages that I would merge, in order:
  	 
Calculating dependencies ...done!
[ebuild    U ] net-www/mozilla-1.3-r1 [1.2.1-r5]
  	 
*mozilla-1.3-r1
  	 
	22 Mar 2003; Martin Schlemmer &lt;azarah@gentoo.org&gt; mozilla-1.3-r1.ebuild :
  Add Gtk2 patch.  Add default/prefs/xft.js when Xft is enabled.  Some other
  long overdue cleanups.
  	 
  *mozilla-1.3
  	 
  21 Mar 2003; Jay Kwak &lt;jayskwak@gentoo.org&gt; mozilla-1.3.ebuild :
  Add XIM input patch for GTK
  	 
  18 Mar 2003; Martin Schlemmer &lt;azarah@gentoo.org&gt; mozilla-1.3.ebuild :
  New version.
  	 
  13 Mar 2003; Olivier Reisch &lt;doctomoe@gentoo.org&gt; mozilla-1.2.1-r5.ebuild :
  Marked ppc stable
  	 
  *mozilla-1.3_beta
  	 
  23 Feb 2003; Martin Schlemmer &lt;azarah@gentoo.org&gt; mozilla-1.3_beta.ebuild :
  New version.
  	 
			</pre>
  	 
  	 </body>
	</section>
</chapter>

<chapter>
	<title>Pakete upgraden</title>
	<section>
		<body>

			<p>
				Der Standardweg um Pakete unter Gentoo Linux zu aktualisieren ist
				<c>emerge --update</c> oder <c>emerge -u</c>.
			</p>

			<pre caption="Benutzen von emerge -u">
# <c>emerge -u xchat</c>
			</pre>

			<p>
				Portage benutzt ein sogenanntes "sicheres" deinstallieren; es "löscht" nur Original 
				Dateien. Wenn eine Datei überschrieben oder modifiziert wurde, bleibt diese im
				Dateisystem erhalten (vorrausgesetzt, dass Sie eine neuere Version installiert 
				haben). Wenn Sie also eine alte Version von xchat nach der Installation einer neuen 
				Version löschen (unmergen), wird die ausführbare Datei von xchat nicht gelöscht, solange 
				sie einen neueren Zeitstempel bzw. eine andere md5-Checksumme hat. Dieses sichere 
				Löschen ist grossartig, da es sicherstellt, dass jeder Zeit eine Version der 
				Anwendung verfügbar ist. Würden Sie zuerst löschen, würde xchat für einige Minuten 
				nicht verfügbar sein, bis die neue Version heruntergeladen, kompiliert und installiert wäre.
			</p>

			<impo>
				Portage hat nun eine spezielle Funktion, die "config file protection", 
				eine Schutzfunktion für Konfigurationsdateien. Die Aufgabe dieser Funktion ist es 
				zu verhindern, dass neue Pakete bereits existierende Konfiguration verändern. 
				Schutz der Konfigurationsdateien ist automatisch für /etc und die 
				KDE Konfigurationsverzeichnisse aktiviert. Um weiter Informationen dazu zu erhalten geben sie 
				<c>emerge --help config</c> ein.
			</impo>
			
		</body>
	</section>
</chapter>
 	 
<chapter>
	<title>Auflösen von blockenden Paketen</title>
		<section>
  	<body>
  	 
  		<p>
  			Aktuell installierte Pakete können in machen Fällen die Installation anderer
  			Pakete blockieren. Dies kann passieren, wenn die Funktionalität eines Pakets
  			in ein anderes verschoben wurde oder zwei Pakete zueinander inkompatibel sind.
  			Ein blockendes Paket muss zunächst deinstalliert werden, bevor das geblockte 
  			Paket installiert werden kann.
  		</p>
  	 
  	 	<pre caption = "Emergen eines Pakets, dass geblockt ist">
# <i>emerge -pv libbonobo</i>
  	 
These are the packages that I would merge, in order:
  	 
Calculating dependencies ...done!
[blocks B     ] gnome-base/bonobo-activation (from pkg gnome-base/libbonobo-2.4.0)
[ebuild     U ] gnome-base/ORBit2-2.8.1 [2.6.3] -doc +ssl
[ebuild     U ] gnome-base/libbonobo-2.4.0 [2.2.3] -doc
			</pre>
  	 
  	 	<p>
				In dem oben dargestellten Beispiel blockt bonobo-activation die Installation von
  	 		libbonobo-2.4.0.
  	 	</p>
  	 
			<pre caption = "Entfernen eines blockierenden Pakets aus dem System">
# <i>emerge -C bonobo-activation</i>
# <i>emerge libbonobo</i>
			</pre>
  	 
  	 	<p>
  	 		Das Entfernen von bonobo-activation aus dem System erlaubt Ihnen 
				libbonobo-2.4.0 erfolgreich zu installieren.
			</p>
  	 
  	 	<impo>
  	 		Das Ausführen von unmerge (<c>emerge -C</c>) entfernt ein Paket auch dann, 
  	 		wenn es als Abhängigkeit für andere Pakete benötigt wird. Dies kann Ihr
  	 		System in einen Status bringen, in dem einige Programme oder gar das ganze
  	 		System nicht mehr funktionieren.
			</impo>
		
		</body>
	</section>
</chapter>
 	 
<chapter>
	<title>Das Verhalten von Portage kontrollieren</title>
	<section>
  	<body>
  	 
  		<p>
				Wenn Sie Anpassungen am Verhalten von Portage vornehmen möchten, sollten
				Sie <path>/etc/make.conf</path> editieren. Diese Datei enthält Variablen 
				(oder Beispiele für Variablen), mit denen Sie das Verhalten von Portage
				ändern können. Wenn Sie zum Beispiel ändern möchten, wie Portage Sourcecode
				herunterlädt sollten Sie <c>FETCHCOMMAND</c> an Ihre Bedürfnisse anpassen.
			</p>
  	 
			<p>
  	 		<path>/etc/make.conf</path> enthält eine Vielzahl von Beispielen für Variableneinstellungen
  	 		aus denen Sie die für Sie optimalen ableiten können.
  	 		Sie sollten auch einen Blick in die <path>make.conf</path> Manpage (<c>man make.conf</c>)
  	 		werfen und/oder das 
  	 		<uri link="/inhalte/doku/fortgeschritten/portage">Portage Handbuch</uri> lesen.
  	 	</p>
  	 
  	 	<p>
  	 		Wenn Sie eine Variable nur für einen einzigen Lauf benötigen, können Sie sie
  	 		anstelle des Editierens der <path>/etc/make.conf</path> als Umgebungsvariable setzen.
  	 		<c>AUTOCLEAN="no" emerge kde</c> zum Beispiel deaktiviert das autocleaning 
  	 		während <c>emerge kde</c>.
	  	</p>
  	 
		</body>
  </section>
</chapter>
  	
<chapter>
	<title>Was sind maskierte Pakete?</title>
		<section>
		<body>
  		
			<p>
				Viele Leute sind neugierig, warum ein neu veröffentlichtes Paket nicht
				in einem <c>emerge -u world</c> enthalten ist. 
				Ein gutes Beispiel ist xfree-4.3.0 (aktuell als diese Anleitung geschrieben wurde).
				Wenn Sie <c>emerge sync</c> gefolgt von einem <c>emerge -u world</c> ausführen
				werden Sie feststellen, das xfree nicht aktualisiert werden soll.
				Warum das?
  	 	</p>
  	 	<p>
  	 		Der Grund ist, dass bestimmte Pakete als "masked" markiert sind. Das
  	 		heisst, dieses Paket wird nicht automatisch aktualisiert, solange Sie nicht
  	 		bestimmte Aktionen ausführen um dies dennoch zu erreichen.
  	 		Für eine Erklärung, wie die Installation von maskierten Pakete funktioniert,
  	 		schauen Sie sich den
  	 		<uri link="http://forums.gentoo.org/viewtopic.php?t=33534">Maskierte Pakete FAQ</uri> Thread
  	 		in unseren <uri link="http://forums.gentoo.org/viewforum.php?f=28">Gentoo Foren</uri> an.
  	 </p>

		</body>
	</section>
</chapter>
</guide>
