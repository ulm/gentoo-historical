<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/power-management-guide.xml,v 1.2 2004/10/21 19:36:32 dertobi123 Exp $ -->
<!-- Original English CVS Version 1.7 -->
<guide link="power-management-guide.xml">
<title>Power Management Anleitung</title>

<author title="Author">
  <mail link="fragfred@gmx.de">Dennis Nienh&#252;ser</mail>
</author>

<abstract>
Der Schlüssel zur Verlängerung der Batterielaufzeit mobiler Endgeräte
(insbesondere Laptops) heißt Power Management. Diese Anleitung hilft bei der
Einrichtung.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->
<license/>

<version>1.17</version>
<date>10. Oktober 2004</date>

<chapter>
<title>Einführung</title>

<section>
<title>Wozu Power Management?</title>

<body>

<p>
In den vergangenen Jahren hat sich sowohl Kapazität als auch Lebenszeit von
Laptopbatterien deutlich verbessert. Auf der anderen Seite verbrauchen moderne
Prozessoren viel mehr Energie als ihre Vorfahren und jede neue Laptopgeneration
bringt neue, energiehungrige Komponenten mit sich. Aus diesem Grund ist
Power Management wichtiger denn je. Man muss nicht unbedingt eine neue Batterie
kaufen, um die Laufzeit eines Laptops zu verlängern. Bereits durch eine
intelligente Einrichtung des Power Managements kann man viel erreichen.
</p>

</body>
</section>

<section>
<title>Kurzübersicht</title>
<body>

<p>
Es sei darauf hingewiesen, das diese Anleitung die Einrichtung von Power
Management für <e>Laptops</e> beschreibt.
Zwar können manche Teile davon auf Server übertragen werden, nicht jedoch alle
und manche können dort sogar Schaden anrichten. Bitte versuchen Sie nicht,
anhand dieser Anleitung einen Server einzurichten.
</p>

<p>
Da diese Anleitung etwas länger geworden ist, gibt es zunächst eine Kurzübersicht:
</p>

<p>
Das Kapitel <e>Voraussetzungen</e> behandelt einige Voraussetzungen, die
erfüllt sein müssen, bevor Sie sich in den nächsten Kapiteln an die
Konfiguration einzelner Geräte machen. Hier sind BIOS Einstellungen und die
Kernelkonfiguration zu überprüfen sowie einige Vereinfachungen im System
vorzunehmen. Die folgenden drei Kapitel konzentrieren sich auf die drei
Komponenten, die normalerweise am meisten Energie verbrauchen: Prozessor,
Bildschirm und Festplatte. Alle können unabhängig voneinander konfiguriert
werden.
<e>CPU Power Management</e> zeigt, wie man die Prozessorgeschwindigkeit
dynamisch so einstellt, das ein Maximum an Energie eingespart wird, ohne allzu
viel Leistung zu verlieren. Mit verschiedenen Tricks sorgt man in <e>Fesplatten
Power Management</e> dafür, dass die Festplatte möglichst lange Zeit im
Schlafzustand bleibt - und dämpft als angenehmen Nebeneffekt die
Geräuschentwicklung. Mit einigen Hinweisen zu WLAN und USB wird der Abschnitt
über einzelne Geräte in <e>Power Management für andere Geräte</e> abgeschlossen.
Ein weiteres Kapitel ist den (noch recht experimentellen) Schlafzuständen
gewidmet, bevor zuletzt in <e>Probleme und Lösungen</e> typische Fallstricke und
Stolpersteine behandelt werden.
</p>

</body>
</section>

<section>
<title>Stromverbrauch der einzelnen Komponenten</title>
<body>

<figure link="http://www.gentoo.de/img/doc/energy-budget.png" short="Welche Komponenten verbrauchen wieviel Energie?" caption="Stromverbrauch der einzelnen Komponenten"/>

<p>
Fast alle Geräte kennen verschiedene Betriebszustände - schlafend, untätig,
aktiv um ein paar zu nennen. In jedem Zustand wird unterschiedlich viel Energie
verbraucht. Absolut gesehen verbrauchen LCD Bildschirm, Prozessor, Chipsatz und
Festplatte am meisten. Ein paar Einstellungen zum Power Management kann man
meistens bereits im BIOS vornehmen, doch mit einer vernünftigen, sich an
verschiedene Situationen anpassenden Einrichtung des Betriebssystems erreicht
man noch viel mehr.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Voraussetzungen</title>
<section>
<title>Was man zuerst machen sollte</title>
<body>

<p>
Einige Voraussetzungen wollen erfüllt sein, bevor es an die Einrichtung der
einzelnen Komponenten geht. Nach der Kontrolle der BIOS Einstellungen geht es
an die Konfiguration des Kernels, wo ACPI, Schlafzustände und dynamische
Frequenzänderung des Prozessors aktiviert werden. Da Energiesparen meist mit
weniger Leistung oder schlechteren Reaktionszeiten einhergeht, sollte das Power
Management nur im Batteriemodus aktiviert werden. Hier erweist sich ein neues
Runlevel <e>battery</e> nützlich.
</p>

</body>
</section>
<section>
<title>BIOS Einrichtung</title>
<body>

<p>
Als erstes überprüfen Sie die Power Management Einstellungen im BIOS. Das BIOS
erreicht man durch Neustarten des Laptops und anschließendes Drücken der Taste
<e>Entfernen</e>, <e>F1</e> oder anderen Spezialtasten je nach Modell. Am
besten kombiniert man BIOS Einstellungen mit den Regeln, die später im
Betriebssystem erstellt werden. Zunächst ist es aber sinnvoller, im BIOS die
meisten Einstellungen zu deaktivieren. So verhindern Sie, dass Ihnen das BIOS
im Folgenden in die Quere kommt. Vergessen Sie nicht, die BIOS Einstellungen
zum Schluss zu korrigieren.
</p>

</body>
</section>
<section>
<title>Einrichtung des Kernels</title>
<body>

<p>
Die ACPI (Advanced Configuration and Power Interface) Unterstützung im Kernel
ist immer noch in der Entwicklung. Daher sollte man durch die Verwendung eines
aktuellen Kernels sicherstellen, die neuesten Quellen zu haben.
</p>

<p>
In der Kernelkonfiguration wählen Sie mindestens folgende Optionen aus:
</p>

<pre caption="Minimales Setup für Power Management (Kernel 2.6)">
Power Management Options ---&gt;
  [*] Power Management Support
  [ ] Software Suspend
  [ ] Suspend-to-Disk Support

  ACPI( Advanced Configuration and Power Interface ) Support ---&gt;
    [*] ACPI Support
    [ ]   Sleep States
    &lt;M&gt;   AC Adapter
    &lt;M&gt;   Battery
    &lt;M&gt;   Button
    &lt;M&gt;   Fan
    &lt;M&gt;   Processor
    &lt;M&gt;     Thermal Zone
    &lt; &gt;   ASUS/Medion Laptop Extras
    &lt; &gt;   Toshiba Laptop Extras
    [ ]   Debug Statements

  CPU Frequency Scaling ---&gt;
    [*] CPU Frequency scaling
          Default CPUFreq governor (userspace)
    &lt;*&gt;   'performance' governor
    &lt;*&gt;   'powersave' governor
    &lt;*&gt;   CPU frequency table helpers
    &lt;M&gt; ACPI Processor P-States driver
    &lt;*&gt; <i>CPUFreq driver for your processor</i>
</pre>

<p>
Entscheiden Sie selbst, ob Sie die Schlafzustände Software Suspend und
Suspend-to-Disk benutzen wollen (siehe unten). Falls Sie einen ASUS oder
Toshiba Laptop ihr Eigen nennen, aktivieren Sie die entsprechende Option.
</p>

<p>
Kompilieren Sie den Kernel, booten ihn und stellen Sie sicher, dass die
entsprechenden Module beim Start geladen werden. Als nächstes führen Sie
<c>emerge sys-apps/acpid</c> aus, um den acpi Dämon zu installieren.
<c>acpid</c> reagiert auf ACPI Ereignisse wie das Schließen des Laptops oder das
Wechseln der Stromquelle. Das Modul <e>button</e> muss geladen sein, falls Sie
es nicht fest in den Kernel kompiliert haben. Als nächstes starten Sie acpid per
<c>/etc/init.d/acpid start</c>. Mit <c>rc-update add acpid default</c> wird
acpid fortan automatisch gestartet. Zur Benutzung von acpid kommen wir gleich.
</p>

<pre caption="acpid installieren">
# <i>emerge sys-apps/acpid</i>
# <i>modprobe button</i>
# <i>/etc/init.d/acpid start</i>
# <i>rc-update add acpid default</i>
</pre>

</body>
</section>
<section>
<title>Ein Runlevel "battery" erstellen</title>
<body>

<p>
Power Management soll nur aktiviert werden, wenn der Laptop von Batterie läuft.
Um die (De-)Aktivierung der verschiedenen Power Management Regeln komfortabel
durchzuführen, erstellen Sie ein neues Runlevel <e>battery</e>, das alle Skripte
zum Starten und Stoppen des Power Managements enthält. Später konfigurieren Sie
<c>acpid</c> so, dass er je nach Stromquelle in das entsprechende Runlevel
wechselt.
</p>

<note>
Wenn Sie kein neues Runlevel erstellen wollen, können Sie diesen Abschnitt
überspringen. Allerdings wird dadurch die übrige Einrichtung etwas schwieriger.
Im folgenden wird davon ausgegangen, dass es ein Runlevel <e>battery</e> gibt.
</note>

<pre caption="Das Runlevel battery erstellen">
# <i>cd /etc/runlevels</i>
# <i>cp -a default battery</i>
</pre>

<p>
Fertig. Ihr neues Runlevel <e>battery</e> ist im Moment mit dem Runlevel
<e>default</e> identisch. Die nächste Aufgabe wird sein, <e>battery</e>
anzupassen und je nach Stromquelle automatisch die Runlevel zu wechseln.
</p>

</body>
</section>
<section>
<title>Auf ACPI Ereignisse reagieren</title>
<body>

<p>
Typische ACPI Ereignisse sind das Schließen des Laptops, Wechseln der
Stromquelle oder Drücken der Ruhezustand Taste. Jedes ACPI Ereignis, das vom
Kernel erkannt wird, wird an acpid weitergereicht. Dieser wiederum ruft
<path>/etc/acpi/default.sh</path> auf. Hier ist eine Änderung, die das Wechseln
der Runlevel ausführt:
</p>

<pre caption="Ereignisgesteuertes Wechseln des Runlevels mit acpid">
#!/bin/sh

set $*

group=${1/\/*/}
action=${1/*\//}

<comment># Runlevel, wenn Strom angeschlossen ist.</comment>
RLVL_AC="default"
<comment># Runlevel, wenn Batterie angeschlossen ist.</comment>
RLVL_BATTERY="battery"

<comment># Datei, die Status der Stromquelle enthält. Bitte an das eigene System anpassen.</comment>
AC_STATE="/proc/acpi/ac_adapter/AC/state"
<comment># Diese Zeichenkette erscheint, wenn der Laptop am Stromnetz angeschlossen ist</comment>
AC_ON="on-line"
<comment># Läuft er von Batterie, wird folgende Zeichenkette in AC_STATE angezeigt</comment>
AC_OFF="off-line"

function SwitchRunlevel() {
  if [[ "$(grep ${AC_OFF} ${AC_STATE})" != "" &amp;&amp; "$(cat /var/lib/init.d/softlevel)" != "${RLVL_BATTERY}" ]]
  then
    logger "Switching to ${RLVL_BATTERY} runlevel"
    /sbin/rc ${RLVL_BATTERY}
  elif [[ "$(grep ${AC_ON} ${AC_STATE})" != "" &amp;&amp; "$(cat /var/lib/init.d/softlevel)" != "${RLVL_AC}" ]]
  then
    logger "Switching to ${RLVL_AC} runlevel"
    /sbin/rc ${RLVL_AC}
  fi
}


case "$group" in
  battery)
    case "$action" in
      battery)
        SwitchRunlevel
        ;;
      *)
        logger "ACPI group battery / action $action is not defined"
        ;;
    esac
    ;;

  ac_adapter)
    case "$action" in
      ac_adapter)
        SwitchRunlevel
        ;;
      *)
        logger "ACPI group ac_adapter / action $action is not defined"
        ;;
    esac
    ;;
  *)
    logger "ACPI group $group / action $action is not defined"
    ;;
esac
</pre>

<p>
Probieren Sie es aus: Trennen Sie Ihren Laptop vom Stromnetz und beobachten Sie
die Meldung "Switching to battery mode" im syslog.
</p>


<!-- FIXME: english version contains typo "softlevel=boot" instead of "softlevel=battery" -->
<p>
Ein Problem gilt es noch zu lösen: Beim Booten wird unabhängig von der
Stromquelle das Runlevel default gestartet. Das liegt daran, dass beim Booten
kein ACPI Ereignis ausgelöst wird. Eine Möglichkeit wäre, einen neuen Eintrag in
den Bootloader aufzunehmen, der über den Kernelparameter
<e>softlevel=battery</e> das Runlevel battery starten würde. Einfacher ist es
aber, beim Booten ein ACPI Ereignis vorzutäuschen.
<path>/etc/acpi/default.sh</path> entscheidet dann, ob ein Wechsel des Runlevels
nötig ist. Öffnen Sie <path>/etc/conf.d/local.start</path> in Ihrem
Lieblingseditor und ergänzen Sie folgende Zeilen:
</p>

<pre caption="local.start bearbeiten, um richtiges Runlevel beim Booten zu starten">
<comment># Vortäuschung des ACPI Ereignisses battery/battery</comment>
/etc/acpi/default.sh "battery/battery"
</pre>

<p>
Nach diesen Vorbereitungen können die einzelnen Geräte konfiguriert werden.
</p>

</body>
</section>
</chapter>

<chapter>
<title>CPU Power Management</title>
<section>
<title>Manuelles Setzen der Prozessorgeschwindigkeit</title>
<body>

<p>
Eine Verminderung der Prozessorgeschwindigkeit bringt zwei Vorteile: Zum einen
wird weniger Energie verbraucht, zum anderen entwickelt sich weniger Wärme.
Demgegenüber steht natürlich ein Verlust an Performanz. Der Trick ist nun, eine
Prozessorgeschwindigkeit auszuwählen, die hoch genug ist, um flüssiges Arbeiten
zu ermöglichen, gleichzeitig aber so niedrig, dass der Prozessor maximal
ausgelastet ist.
</p>

<note>
Das Ändern der Prozessorgeschwindigkeit (engl. frequency scaling, speedstepping)
wird nicht von jedem Laptop unterstützt. Das Kapitel <e>Probleme und
Lösungen</e> enthält eine Liste der unterstützten Prozessoren.
</note>

<p>
Es ist an der Zeit, das Ändern der Prozessorgeschwindigkeit zu testen. Zum
Einstieg ein paar manuelle Änderungen:
</p>

<pre caption="Ändern der Prozessorgeschwindigkeit von Hand">
<comment>(Derzeitige Geschwindigkeit ermitteln)</comment>
# <i>grep "cpu MHz" /proc/cpuinfo</i>

<comment>(unterstützte Geschwindigkeiten auflisten. Schlägt bei einigen Modellen fehl.)</comment>
# <i>cd /sys/devices/system/cpu/cpu0/cpufreq/</i>
# <i>cat scaling_available_frequencies</i>

<comment>(Geschwindigkeit auf 1 GHz (1000000 KHz) setzten
Bitte ersetzen Sie es durch eine von ihrem Laptop unterstützte Geschwindigkeit.)</comment>
# <i>echo -n userspace > scaling_governor</i>
# <i>echo -n 1000000 > scaling_setspeed</i>

<comment>(Überprüfen, ob die Geschwindigkeit geändert wurde)</comment>
# <i>grep "cpu MHz" /proc/cpuinfo</i>
</pre>

<p>
Falls es Probleme gibt, lesen Sie bitte im Kapitel <e>Probleme und Lösungen</e>
weiter.
</p>

<p>
Man kann auch in <path>scaling_max_freq</path> und <path>scaling_min_freq</path>
die minimal bzw. maximal erlaubte Geschwindigkeit eintragen, die nicht unter-
bzw. überschritten werden dürfen.
</p>

<note>
Ein Bug in einigen Kernelversionen hat zur Folge, dass
<path>/proc/cpuinfo</path> nach einer Änderung der Prozessorgeschwindigkeit
nicht aktualisiert wird. Falls Sie in <path>/proc/cpuinfo</path> die neue
Geschwindigkeit nicht angezeigt bekommen, heißt das nicht notwendigerweise, dass
die Änderung nicht durchgeführt wurde. In diesem Fall kann man sich mit
<c>x86info</c> behelfen. Installieren Sie es mit <c>emerge x86info</c>,
aktualisieren Sie die Kernelkonfiguration wie gefordert und fragen Sie die
Prozessorgeschwindigkeit mit <c>x86info -mhz</c> ab.
</note>

</body>
</section>
<section>
<title>Automatische Anpassung der Prozessorgeschwindigkeit</title>
<body>

<p>
Das manuelle Setzen der Geschwindigkeit ist keine Lösung für den Alltag. Eine
Reihe von Programmen bieten sich an, diese Aufgabe zu übernehmen. Die folgende
Tabelle stellt einige kurz vor:
</p>

<table>
<tr>
  <th>Name</th>
  <th>Vorteil</th>
  <th>Nachteil</th>
</tr>
<tr>
  <ti><uri link="http://mnm.uib.es/~gallir/cpudyn/">cpudyn</uri></ti>
  <ti>Unterstützt ebenfalls Festplatten Power Management</ti>
  <ti></ti>
</tr>
<tr>
  <ti><uri link="http://sourceforge.net/projects/cpufreqd/">cpufreq</uri></ti>
  <ti>Erweiterte Konfigurationsmöglichkeiten</ti>
  <ti>Komplizierte Konfiguration</ti>
</tr>
<tr>
  <ti><uri link="http://www.goop.org/~jeremy/speedfreq/">speedfreq</uri></ti>
  <ti>
    Klein, aber leistungsfähig<br />
    Nützliches Client/Server Interface
  </ti>
  <ti>Nur für Kernel 2.6</ti>
</tr>
<tr>
  <ti><uri link="http://www.deater.net/john/powernowd.html">powernowd</uri></ti>
  <ti>Unterstützt Mehrprozessorsysteme</ti>
  <ti></ti>
</tr>
</table>

<p>
Eine automatische Anpassung der Prozessorgeschwindigkeit erscheint auf den
ersten Blick einfach. In der Tat ist es allerdings etwas komplizierter - ein
schlechter Algorithmus kann dazu führen, dass ständig zwischen zwei
Geschwindigkeiten umgeschaltet wird oder die Geschwindigkeit unnötig hoch ist.
</p>

<p>
Sie haben die Qual der Wahl. Falls Sie sich nicht entscheiden können, probieren
Sie zunächst <c>speedfreq</c> aus.
</p>

<pre caption="Installing speedfreq">
# <i>emerge speedfreq</i>
# <i>rc-update add speedfreq battery</i>
</pre>

<p>
<c>speedfreq</c> wird durch Editieren von
<path>/etc/conf.d/speedfreq</path> konfiguriert. Will man beispielsweise
normalen Benutzern erlauben, die Prozessorgeschwindigkeit zu ändern, ergänzt man
<c>SPEEDFREQ_OPTS="-u"</c>. Danach können Sie den Dämon starten.
</p>

<pre caption="speedfreq Dämon starten">
# <i>/etc/init.d/speedfreq start</i>
</pre>

<p>
Die Konfiguration von <c>cpufreq</c> ist etwas komplexer.
</p>

<warn>
Führen Sie nicht mehrere der oben aufgeführten Programme gleichzeitig aus. Das
kann dazu führen, dass ständig zwischen zwei Geschwindigkeiten hin- und
hergesprungen wird. Falls Sie eben <c>speedfreq</c> installiert haben,
überspringen Sie <c>cpufreq</c> jetzt bitte.
</warn>

<pre caption="Installing cpufreqd">
# <i>emerge cpufreqd</i>
# <i>rc-update add cpufreqd battery</i>
</pre>

<p>
<c>cpufreqd</c> besitzt eine vorgefertigte Konfigurationsdatei in
<path>/etc/cpufreqd.conf</path>. Passen Sie sie nach ihren Bedürfnissen an. Das
folgende Beispiel spart etwas mehr Energie ein - auf Kosten der Leistung,
versteht sich.
</p>

<pre caption="Eine beispielhafte Konfigurationsdatei für cpufreq">
[General]
pidfile=/var/run/cpufreqd.pid
poll_interval=2
pm_type=acpi
<comment># Uncomment the following line to enable ACPI workaround (see cpufreqd.conf(5))
# acpi_workaround=1</comment>
verbosity=4 <comment>#(if you want a minimal logging set to 5)</comment>

<comment># Volle Leistung</comment>
[Profile]
name=ac
minfreq=600000
maxfreq=1400000
policy=performance

<comment># Maximales Energiesparen</comment>
[Profile]
name=battery
minfreq=600000
maxfreq=900000
policy=powersave

<comment># Prozessorgeschwindigkeit konstant setzen</comment>
[Profile]
name=dvd
minfreq=900000
maxfreq=1100000
policy=powersave

<comment># Volle Leistung, wenn ans Stromnetz angeschlossen</comment>
[Rule]
name=ac_on
ac=on
profile=ac

<comment># Bei hohem Akkustand soll Kompilieren schnell ablaufen</comment>
[Rule]
name=compiling
ac=off
battery_interval=30-100
programs=emerge,make,gcc,cpp
cpu_interval=0-100
profile=ac

<comment># DVDs bei konstanter Geschwindigkeit anschauen
# Kann ebenfalls für Spiele etc. verwendet werden</comment>
[Rule]
name=dvd_watching
ac=off
battery_interval=15-100
programs=xine,mplayer,avidemux,kaffeine,kmplayer
cpu_interval=0-100
profile=dvd

<comment># Falls keine der obigen Regeln zutrifft, Energiesparen maximieren</comment>
[Rule]
name=battery_on
ac=off
battery_interval=0-100
cpu_interval=0-100
profile=battery
</pre>

<p>
<c>cpudyn</c> und <c>powernowd</c> werden in der gleichen Weise wie
<c>speedfreq</c> installiert.
</p>

<p>
Zum Schluss sollten Sie überprüfen, dass die neuen Regeln gut funktionieren. Das
kann man auf einfache Weise kontrollieren, indem man die
Prozessorgeschwindigkeit eine Zeitlang überwacht.
</p>

<pre caption="Prozessorgeschwindigkeit überwachen">
# <i>watch -n 1 grep "cpu MHz" /proc/cpuinfo</i>
</pre>

<p>
Falls <path>/proc/cpuinfo</path> bei Ihnen nicht aktualisiert wird (siehe oben),
benutzen Sie bitte folgenden Befehl:
</p>

<pre caption="Alternative Überwachung der Prozessorgeschwindigkeit">
# <i>watch -n 1 x86info -mhz</i>
</pre>

<p>
Abhängig von ihrer Konfiguration sollte die Geschwindigkeit bei starker
Prozessornutzung ansteigen, bei wenig Aktivität sinken oder einfach auf dem
gleichen Niveau bleiben.
</p>

</body>
</section>
</chapter>

<chapter>
<title>LCD Power Management</title>
<section>
<title>Der größte Energieverbraucher</title>
<body>

<p>
Wie man in <uri link="#doc_chap1_fig1">Bild 1.1</uri> sieht, verbraucht der LCD
Bildschirm typischerweise am meisten Energie. Aus diesem Grund ist es nicht nur
wichtig, den Bildschirm bei Nichtgebrauch abzuschalten, sondern auch eine
Reduzierung der Hintergrundbeleuchtung kann viel Energie einsparen. Die meisten
Laptops bieten diese Möglichkeit ebenfalls an.
</p>

<p>
Als ersten sollten Sie die Einstellungen zu Standby/Suspend/Abschalten des
Bildschirms überprüfen. Bitte konsultieren Sie dazu gegebenenfalls das Handbuch
ihres Windowmanagers. Terminals können mit den Befehlen <c>setterm
-blank &lt;number-of-minutesM&gt;</c>, <c>setterm -powersave on</c> und
<c>setterm -powerdown &lt;number-of-minutesM&gt;</c> kontrolliert werden. In
Xorg ändert man <path>/etc/X11/xorg.conf</path>:
</p>

<pre caption="Abschalten des LCD in Xorg und XFree86">
Section "ServerLayout"
  Identifier  [...]
  [...]
  Option  "BlankTime"  "5"  <comment># Blank the screen after 5 minutes (Fake)</comment>
  Option  "StandbyTime"  "10"  <comment># Turn off screen after 10 minutes (DPMS)</comment>
  Option  "SuspendTime"  "20"  <comment># Full suspend after 20 minutes</comment>
  Option  "OffTime"  "30"  <comment># Turn off after half an hour</comment>
  [...]
EndSection

[...]

Section "Monitor"
  Identifier  [...]
  Option  "DPMS"  "true"
  [...]
EndSection
</pre>

<p>
In XFree86 sieht es genauso aus, nur heißt die Datei
<path>/etc/X11/XF86Config</path>.
</p>

<p>
Wohl noch wichtiger ist es, die Hintergrundbeleuchtung zu dimmen. Falls Sie die
Einstellungen mit einem Programm steuern können, schreiben Sie ein einfaches
Skript und platzieren es im <e>battery</e> Runlevel.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Festplatten Power Management</title>
<section>
<title>Ruhezustand bei Untätigkeit</title>
<body>

<p>
Sobald keine Lese- und Schreibvorgänge für die Festplatte anstehen, soll sie in
den Ruhezustand geschickt werden. Zwei Möglichkeiten bieten sich an, dies zu
erreichen. Zunächst unterstützt das bereits oben vorgestellte <c>cpudyn</c>
Festplatten Power Management. Um es zu aktivieren, muss man lediglich in einigen
Zeilen des "Disk Options" Abschnitts in <path>/etc/conf.d/cpudyn</path> die
Kommentarzeichen entfernen. Um die erste Festplatte nach 60 Sekunden ohne
Festplattenaktivität in den Ruhezustand zu schicken, modifiziert man die
Konfigurationsdatei wie folgt:
</p>

<pre caption="Ruhezustand der Festplatte mit cpudyn aktivieren">
<comment>################################################
# DISK OPTIONS
# (disabled by default)
################################################

#
# Timeout to put the disk in standby mode if there was no
# io during that period (in seconds)
#
</comment>
TIMEOUT=60
<comment>
#
# Specified disks to spindown (comma separated devices)
#
</comment>
DISKS=/dev/hda
</pre>

<p>
Die zweite Möglichkeit ist, ein kleines Skript zu schreiben, das <c>hdparm</c>
benutzt. Erstellen Sie <path>/etc/init.d/pm.hda</path>:
</p>

<pre caption="Using hdparm for disk standby">
#!/sbin/runscript
start() {
  ebegin "Activating Power Management for Hard Drives"
  hdparm -q -S12 /dev/hda
  eend $?
}

stop () {
  ebegin "Deactivating Power Management for Hard Drives"
  hdparm -q -S253 /dev/hda
  eend $?
}
</pre>

<p>
<c>man hdparm</c> erklärt die verwendeten Optionen im Detail. Sobald das Skript
fertig ist, fügt man es dem <e>battery</e> Runlevel hinzu.
</p>

<pre caption="Festplatten Power Management mit hdparm">
# <i>/sbin/depscan.sh</i>
# <i>rc-update add pm.hda battery</i>
</pre>

<impo>
Verwenden Sie keine zu kleinen Intervalle zum Abschalten der Festplatte.
Ständiges An- und Ausschalten wirkt sich sehr ungünstig auf die Lebenszeit ihrer
Festplatte aus und verletzt die Garantiebestimmungen.
</impo>

</body>
</section>
<section>
<title>laptop-mode</title>
<body>

<p>
Aktuelle Kernelversionen (ab Version 2.6.6 und aktuelle 2.4er, sowie ältere
Versionen mit Patch) enthalten den sogenannten <e>laptop-mode</e>. Aktiviert man
ihn, werden veränderte Pufferinhalte (dirty buffers) erst bei Leseaufrufen oder
nach spätestens 10 Minuten (anstatt sonst 30 Sekunden) auf die Festplatte
geschrieben. Auf diese Weise verlängern sich die Intervalle, die die Festplatte
im Ruhezustand verbringt.
</p>

<p>
<!-- FIXME: bug #45593 -->
Um den <e>laptop-mode</e> zu aktivieren, erzeugen Sie zunächst ein Skript
<path>/etc/init.d/laptop-mode</path>. In der Kerneldokumentation ist bereits
eines enthalten, kopieren Sie es einfach aus
<path>/usr/src/linux/Documentation/laptop-mode.txt</path>. Danach fügen Sie es
dem <e>battery</e> Runlevel hinzu.
</p>

<pre caption="laptop-mode automatisch aktivieren">
# <i>rc-update add laptop-mode battery</i>
</pre>

<warn>
Noch einmal: Setzen Sie die Dauer bis zum Abschalten nicht auf zu kleine Werte.
Andernfalls verkürzt sich die Lebenszeit der Festplatte und die Garantie
erlischt. Lesen Sie die Dokumentation in <path>laptop-mode.txt</path>. Kümmern
Sie sich darum, dass der <e>laptop-mode</e> deaktiviert wird, bevor die Batterie
leer ist - andernfalls verlieren Sie mindestens bis zu 10 Minuten von ihrer
letzten Arbeit.
</warn>

</body>
</section>
<section>
<title>Weitere Tricks</title>
<body>

<p>
Sie können noch mehr Energie sparen, indem Sie das Übel an der Wurzel packen und
unnötige Zugriffe auf die Festplatte verhindern. Dazu suchen Sie Prozesse, die
regelmäßig auf die Festplatte schreiben - der syslogd ist ein guter Kandidat.
Nun ist es wohl keine gute Idee, ihn völlig abzuschalten, aber durch Änderungen
an der Konfigurationsdatei stellen Sie sicher, dass Überflüssiges gar nicht erst
in die Logdateien aufgenommen wird. Auch <c>cups</c> greift periodisch auf die
Fesplatte zu - wenn Sie eher selten drucken, können Sie cups am besten gleich
abschalten und nur bei Bedarf von Hand starten.
</p>

<pre caption="cups im Batteriemodus abschalten">
# <i>rc-update del cupsd battery</i>
</pre>

<p>
Sie können sogar so weit gehen und den Auslagerungsspeicher im Batteriebetrieb
abschalten. Das kann aber nur dann funktionieren, wenn genügend Arbeitsspeicher
vorhanden ist, so dass der Auslagerungsspeicher kaum genutzt wird. Andernfalls
stehen Sie vor einem großen Problem.
</p>

<p>
Selbst wenn Sie auf den <e>laptop-mode</e> verzichten möchten, können Sie die
Zahl der Festplattenzugriffe verringern. Einige Verzeichnisse kann man als
<e>tmpfs</e> mounten - dieses spezielle Dateisystem speichert Daten nicht auf
der Festplatte, sonderm im Arbeitsspeicher. Beim unmounten gehen die Daten
verloren. Das <path>/tmp</path> Verzeichnis bietet sich beispielsweise dafür an
- Persistenz von Daten über einen Neustart hinaus ist dort sowieso nicht
garantiert. Wichtig ist, dass Sie über ausreichend viel Arbeitsspeicher verfügen
und kein Programm (beispielsweise ein Downloadmanager oder
Komprimierungsprogramm) außergewöhnlich viel Platz in <path>/tmp</path>
benötigt. Um <path>/tmp</path> von der Festplatte in den Arbeitsspeicher zu
verschieben, benötigen Sie tmpfs Unterstützung im Kernel und fügen dann folgende
Zeile in <path>/etc/fstab</path> ein:
</p>

<pre caption="Ändern von /etc/fstab um /tmp in den Arbeitsspeicher zu verschieben">
none  /tmp  tmpfs  size=32m  0 0
</pre>

<warn>
Wählen Sie den size (Größe des Verzeichnisses) Parameter mit besonderer
Vorsicht. Falls Sie unsicher sind, überspringen Sie diesen Tipp, es kann bei
falscher Konfiguration leicht zu Leistungseinbußen kommen. Falls Sie
<path>/var/log</path> auf diese Weise mounten möchten, sorgen Sie dafür, dass
die Logdateien vor dem unmounten auf die Festplatte geschrieben werden.
Logdateien sind wichtig. Versuchen Sie nicht, <path>/var/tmp</path> in den
Arbeitsspeicher zu verlagern. Portage benutzt es, um Programme zu kompilieren...
</warn>

</body>
</section>
</chapter>

<chapter>
<title>Power Management für andere Geräte</title>
<section>
<title>WLAN Power Management</title>
<body>

<p>
Auch WLAN-Karten verbrauchen einiges an Energie. Analog zum pm.hda Skript kann
man deren Power Management Eigenschaften aktivieren.
</p>

<pre caption="WLAN Power Management automatisiert">
#!/sbin/runscript
start() {
  ebegin "Activating Power Management for Wireless LAN"
  iwconfig wlan0 power on power max period 3
  eend $?
}

stop () {
  ebegin "Deactivating Power Management for Wireless LAN"
  iwconfig wlan0 power off
  eend $?
}
</pre>

<p>
Der Aufruf dieses Skripts aktiviert den Power Management Modus der WLAN-Karte
wlan0. Spätestens drei Sekunden nach dem Ausbleiben von Paketen wird die
WLAN-Karte in den Ruhezustand übergehen.
Speichern Sie das Skript als <path>/etc/init.d/pm.wlan0</path> und fügen Sie es
wie gehabt zum <e>battery</e> Runlevel hinzu. Erläuterungen zu den verwendeten
Optionen hält <c>man iwconfig</c> bereit. Falls der Treiber ihrer WLAN-Karte und
ihr Access Point ein Ändern der "beacon time" zulässt, ist das ein guter
Ausgangspunkt, um noch mehr Energie einzusparen.
</p>

</body>
</section>
<section>
<title>USB Power Management</title>
<body>

<p>
Mit USB Geräten gibt es aus Sicht des Energiesparens zwei Probleme. Zum einen
verbrauchen Geräte wie USB Mäuse, Digitalkameras oder USB Sticks Energie, wenn
sie an den Laptop angeschlossen sind. Auch wenn man das nicht vermeiden kann,
sollten Sie sie bei Nichtgebrauch dennoch entfernen. Zum anderen greift der USB
Host Controller periodisch auf den Bus zu und verhindert dadurch, das der
Prozessor in den C3/4 Schlafzustand schalten kann. Die Antwort des
Betriebssystems darauf ist der "selektive USB Schlafzustand" (USB selective
suspend), der aber noch nicht im Kernel implementiert ist. Der selektive USB
Schlafzustand erlaubt nur dann Buszugriffe, wenn das Gerät benutzt wird. Man
kann sich auf rudimentäre Art behelfen, indem man die USB Unterstützung als
Modul in den Kernel kompiliert und bei Nichtgebrauch die Module entlädt. Dies
kann beispielsweise durch ein Skript geschehen, das beim Schließen des Laptops
aufgerufen wird.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Schlafzustände: Sleep, Standby, Suspend to Disk</title>
<section>
<title>Überblick</title>
<body>

<p>
ACPI legt verschiedene Schlafzustände fest. Die wichtigen sind
</p>

<ul>
  <li>S1 oder Standby</li>
  <li>S3 oder Suspend to RAM oder Sleep</li>
  <li>S4 oder Suspend to Disk oder Hibernate</li>
</ul>

<p>
Sie werden dann eingesetzt, wenn das System nicht benutzt wird, aber ein
Herunterfahren wegen der langen Bootzeit unerwünscht ist.
</p>

</body>
</section>
<section>
<title>Sleep, Standby &amp; Hibernate</title>
<body>

<p>
Aus gutem Grund ist die Unterstützung der verschiedenen Schlafzustände als
experimentell markiert. APM Schlafzustände scheinen stabiler zu sein, leider
kann man ACPI und APM aber nicht gleichzeitig einsetzen.
</p>

<warn>
Auch wenn die Unterstützung für die Schlafzustände ständig verbessert wird, ist
sie immer noch recht instabil. Seien Sie deshalb gewarnt: Dies wird
wahrscheinlich nicht funktionieren und möglicherweise ihren Daten oder ihrem
System Schaden zufügen.
</warn>

<p>
Es gibt zur Zeit drei verschiedene Implementationen für S4. Die Originalversion
ist swsusp, weiter gibt es swsusp2 mit einer besonders guten
Benutzerschnittstelle (unter anderem bootsplash Unterstützung). Swsusp2 benötigt
aber extra Kernel Patches. Zu guter Letzt gibt es Suspend to Disk, das von
swsusp abgespalten wurde.
</p>

<p>
Durcheinander? Ein <uri
link="http://softwaresuspend.berlios.de/features.html#compare">Vergleich</uri>
der drei ist online erhältlich. Falls Sie sich nicht für eines entscheiden
können, probieren Sie zuerst swsusp2 aus.
</p>

<p>
Der Kernel wird folgendermaßen konfiguriert:
</p>

<pre caption="Kernelkonfiguration für die verschiedenen Schlafzustände">
Power Management Options ---&gt;

  <comment>(Sleep und Standby)</comment>
  ACPI( Advanced Configuration and Power Interface ) Support --->
    [*] ACPI Support
       [*]   Sleep States

  <comment>(Hibernate per swsusp)</comment>
  [*] Software Suspend (EXPERIMENTAL)

  <comment>(Hibernate per swsusp2)</comment>
  Software Suspend 2
    --- Image Storage (you need at least one writer)
    [*]    Swap Writer
    --- Page Transformers
    [*]    LZF image compression
    (/dev/"your-swap-here")    Default resume device name

  <comment>(Hibernate per Suspend-to-Disk)</comment>
  [*] Suspend-to-Disk Suport
  (/dev/"your-swap-here") Default resume partition
</pre>

<p>
Kompilieren Sie den Kernel mit den entsprechenden Optionen und führen Sie <c>cat
/proc/acpi/sleep</c> bei einem Kernel der 2.4er Serie bzw. <c>cat
/sys/power/state</c> bei 2.6er Modellen aus um herauszufinden, welche
Schlafzustände unterstützt werden. Bei letzterem erhalte ich <c>standby mem
disk</c>. Bei swsusp muss man zusätzlich den Kernelparameter
<c>resume=/dev/"your-swap-here"</c> anhängen (<path>/boot/grub/grub.conf</path>
bzw. <path>/etc/lilo.conf</path>). Falls ein kaputtes Speicherabbild das
Hochfahren verhindert, kann man mit den Kernelparametern <c>noresume</c> für
swsusp, <c>pmdisk=off</c> für Suspend-to-Disk und <c>noresume2</c> für swsusp2
die Wiederherstellung verhindern.
</p>

<p>
Die Schlafzustände werden folgendermaßen aktiviert:
</p>

<pre caption="Aktivieren der unterschiedlichen Schlafzustände">
<comment>(Kernel 2.4)</comment>
# <i>echo 1 &gt; /proc/acpi/sleep</i>          <comment>(Standby)</comment>
# <i>echo 3 &gt; /proc/acpi/sleep</i>          <comment>(Sleep)</comment>

<comment>(Kernel 2.6)</comment>
# <i>echo -n standby &gt; /sys/power/state</i> <comment>Standby</comment>
# <i>echo -n mem &gt; /sys/power/state</i>     <comment>Sleep</comment>

<comment>(Swsusp)</comment>
# <i>echo 4 &gt; /proc/acpi/sleep</i>          <comment>Hibernate</comment>

<comment>(Suspend-to-Disk)</comment>
# <i>echo -n disk &gt; /sys/power/state</i>    <comment>Hibernate</comment>

<comment>(Swsusp2)</comment>
# <i>echo &gt; /proc/swsusp/activate</i>
</pre>

<warn>
Vor der ersten Aktivierung eines Schlafzustands sollten Sie eine Datensicherung
vornehmen. Mit <c>sync</c> können Sie zwischengespeicherte Daten auf die
Festplatte schreiben, bevor Sie ihren Laptop in einen Schlafzustand schicken. Da
es insbesondere Probleme mit X gibt, probieren Sie es zunächst außerhalb von X
aus.
</warn>

<p>
Falls es zu durch uhci oder ähnlichem verursachten Kernelpaniken kommt, können
Sie die USB Unterstützung als Modul kompilieren und vor Aktivierung des
Schlafzustands aus dem Kernel entfernen.
</p>

<p>
Mit obiger Anleitung bekommen Sie swsusp und Suspend-to-Disk ans Laufen, nicht
aber swsusp2. Dieses benötigt zunächst einen <uri
link="http://softwaresuspend.berlios.de/">Kernelpatch</uri>. Auf der gleichen
Seite gibt es das ebenfalls benötigte hibernate Skript.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Probleme und Lösungen</title>
<section>
<title>Der Teufel liegt im Detail...</title>
<body>

<p>
<e>F:</e> Ich versuche die CPU Frequenz zu ändern, aber
<path>/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</path> existiert
nicht.
</p>

<p>
<e>A:</e> Stellen Sie sicher, dass ihr Prozessor das Ändern der Frequenz
unterstützt und das Sie den richtigen Treiber für ihren Prozessor ausgewählt
haben. Hier ist eine Liste der Prozessoren, die von cpufreq unterstützt werden
(Kernel 2.6.7): ARM Integrator, ARM-SA1100, ARM-SA1110, AMD Elan - SC400, SC410,
AMD mobile K6-2+, AMD mobile K6-3+, AMD mobile Duron, AMD mobile Athlon, AMD
Opteron, AMD Athlon 64, Cyrix Media GXm, Intel mobile PIII und Intel mobile
PIII-M bei bestimmten Chipsätzen, Intel Pentium 4, Intel Xeon, Intel Pentium M
(Centrino), National Semiconductors Geode GX, Transmeta Crusoe, VIA Cyrix 3 /
C3, UltraSPARC-III, SuperH SH-3, SH-4, mehrere "PowerBook" und "iBook2" sowie
verschiedene Prozessoren in ACPI 2.0-kompatiblen Systemen (nur wenn "ACPI
Processor Performance States" über die ACPI/BIOS Schnittstelle verfügbar sind).
</p>

<p>
<e>F:</e> Mein Laptop unterstützt Frequenzänderungen des Prozessors, aber
<path>/sys/devices/system/cpu/cpu0/cpufreq/</path> ist leer.
</p>

<p>
<e>A:</e> Schauen Sie nach ACPI Fehlermeldungen per <c>dmesg | grep ACPI</c>.
Eventuell ist das Problem mit einem BIOS Update in den Griff zu bekommen,
insbesondere wenn eine falsche DSDT angezeigt wird. Falls kein BIOS Update zur
Verfügung steht, kann man DSDT Fehler auch selber beheben - das wird an anderer
Stelle beschrieben.
</p>

<p>
<e>F:</e> Mein Laptop unterstützt Frequenzänderungen des Prozessors, aber
<path>/proc/cpuinfo</path> meldet keine Änderungen.
</p>

<p>
<e>A:</e> Hierbei scheint es sich um einen Bug im Kernel zu handeln. Führen Sie
<c>emerge x86info</c> aus, konfigurieren Sie ihren Kernel wie angegeben und
überprüfen Sie die aktuelle Prozessorgeschwindigkeit mit <c>x86info -mhz</c>.
</p>

<p>
<e>F:</e> Ich kann die Prozessorgeschwindigkeit ändern, erreiche in einem
anderen Betriebssystem aber tiefere Werte.
</p>

<p>
<e>A:</e> Sie können das Ändern der Prozessorgeschwindigkeit mit ACPI Drosselung
(throttling) kombinieren, um eine geringere Minimalfrequenz zu erhalten.
Allerdings spart man dadurch kaum mehr Energie. Drosselung ist am ehesten
sinnvoll, um die Temperatur niedrig zu halten. Den aktuellen Status erhält man
mit <c>cat /proc/acpi/processor/CPU/throttling</c>. Änderungen können Sie durch
<c>echo -n "0:x" > /proc/acpi/processor/CPU/limit</c> vornehmen, wobei x einer
der in <path>/proc/acpi/processor/CPU/throttling</path> aufgelisteten Zustände
ist.
</p>

<p>
<e>F:</e> Die Batteriezeit ist geringer als vorher.
</p>

<p>
<e>A:</e> Überprüfen Sie die BIOS Einstellungen. Vielleicht haben Sie vergessen,
einige Einstellungen wieder zu aktivieren.
</p>

<p>
<e>F:</e> Meine Batterie ist voll geladen, KDE geht allerdings von 0% aus und
fährt das System herunter.
</p>

<p>
<e>A:</e> Stellen Sie sicher, dass Unterstützung für die Batterie in den Kernel
kompiliert ist. Falls Sie es als Modul kompiliert haben, laden Sie das Modul,
bevor sie KDE starten.
</p>

<p>
<e>F:</e> Ich habe einen Dell Inspiron 51XX und erhalte keine ACPI Ereignisse.
</p>

<p>
<e>A:</e> Das scheint ein Bug im Kernel zu sein. Weitere Informationen gibt es
<uri link="http://bugme.osdl.org/show_bug.cgi?id=1752">hier</uri>.
</p>

<p>
<e>F:</e> Ich habe eine neue Batterie gekauft - sie hält aber nur ein paar
Minuten! Was mache ich falsch?
</p>

<p>
<e>A:</e> Folgen Sie den Anweisungen des Herstellers und laden Sie die Batterie
vollständig auf.
</p>

<p>
<e>F:</e> Obiges hilft nicht. Was soll ich jetzt tun?
</p>

<p>
<e>A:</e> Einige als "neu" verkaufte Batterie liegen schon mehrere Monate auf
Lager und sind nicht mehr zu gebrauchen. Probieren Sie folgendes:
</p>

<pre caption="Batteriestatus überprüfen">
$ <i>grep capacity /proc/acpi/battery/BAT0/info</i>
design capacity:     47520 mWh
last full capacity:  41830 mWh
</pre>

<p>
Wenn die "last full capacity", also die beim letzten vollständigen Laden
erreichte Kapazität, sich signifikant von der "design capacity" unterscheidet,
ist die Batterie wahrscheinlich kaputt. Machen Sie ihre Garantieansprüche
geltend.
</p>

</body>
</section>
</chapter>
</guide>
