<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/openrc-migration.xml,v 1.1 2008/05/12 07:32:52 keytoaster Exp $ -->

<!-- English CVS Version: 1.10 -->

<guide link="/doc/de/openrc-migration.xml" lang="de">
<title>Baselayout und OpenRC Migrationsleitfaden</title>

<author title="Autor">
  <mail link="cardoe"/>
</author>
<author title="Autor">
  <mail link="nightmorph"/>
</author>
<author title="Mitarbeiter">
  <mail link="uberlord"/>
</author>
<author title="Übersetzer">
  <mail link="keytoaster"/>
</author>

<abstract>
Dieser Leitfaden zeigt Ihnen, wie Sie von baselayout-1 zu baselayout-2 und
OpenRC migrieren.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.6</version>
<date>2008-04-15</date>

<chapter>
<title>Hintergrund</title>
<section>
<title>Was ist baselayout?</title>
<body>

<p>
Baselayout stellt grundlegende Dateien bereit, die für die richtige Funktion
aller Systeme benötigt werden, z.B. <path>/etc/hosts</path>. Außerdem stellt
es das grundlegende Dateisystem-Layout, das von Gentoo genutzt wird, bereit
(d.h. <path>/etc</path>, <path>/var</path>, <path>/usr</path>,
<path>/home</path> Verzeichnisse).
</p>

</body>
</section>
<section>
<title>Was ist OpenRC?</title>
<body>

<p>
OpenRC ist ein abhängigkeitsbasierendes RC-System, welches unabhängig vom
System bereitgestellten init, normalerweise <path>/sbin/init</path>,
funktioniert. Jedoch ist es <e>kein</e> Ersatz für <path>/sbin/init</path>. Das
standardmäßig von Gentoo Linux genutzte init ist <c>sys-apps/sysvinit</c>,
während Gentoo/FreeBSD das FreeBSD-init benutzt, das von
<c>sys-freebsd/freebsd-sbin</c> bereit gestellt wird.
</p>
</body>
</section>
<section>
<title>Warum also migrieren?</title>
<body>

<p>
Ursprünglich war Gentoos RC-System in baselayout 1 eingebaut und komplett in
Bash geschrieben. Dies führte zu einigen Einschränkungen. Zum Beispiel muss
während des Bootens auf bestimmte Systemcalls zugegriffen werden, was das
Hinzufügen von C-basierten Aufrufen erforderte. Diese waren statisch gelinkt,
wodurch das RC-System mit der Zeit mehr und mehr aufblähte.
</p>

<p>
Als Gentoo auf weitere Plattformen wie Gentoo/FreeBSD und Gentoo Embedded
expandierte, wurde es weiterhin unmöglich ein bash-basiertes RC-System
voraus zu setzen. Dies führte zur Entwicklung von baselayout 2, welches in C
geschrieben ist und nur eine POSIX-konforme Shell benötigt. Während der
Entwicklung von baselayout 2 wurde festgelegt, dass es besser wäre, wenn
baselayout lediglich die grundlegenden Dateien und das Dateisystem-Layout für
Gentoo bereitstellte und das RC-System in sein eigenes Paket gepackt würde.
Deshalb haben wir OpenRC.
</p>

<p>
OpenRC wird primär von <uri link="http://roy.marples.name/openrc">Roy
Marples</uri> entwickelt und unterstützt alle aktuellen Gentoo-Variationen (d.h.
Gentoo Linux, Gentoo/FreeBSD, Gentoo Embedded und Gentoo Vserver) und andere
Plattformen wie FreeBSD und NetBSD.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Migration zu OpenRC</title>
<section>
<body>

<p>
Die Migration zu OpenRC ist ziemlich geradlinig; es wird als Teil Ihres
regulären Upgrade-Prozesses durch Ihren Paket-Manager einbezogen. Der wichtigste
Schritt kommt eigentlich erst nachdem Sie die neuen Pakete
<c>>=sys-apps/baselayout-2</c> und <c>sys-apps/openrc</c> installieren. Es ist
<e>entscheidend</e>, dass Sie vor dem Reboot <c>dispatch-conf</c> ausführen und
sicherstellen, dass Ihr <path>/etc</path> aktuell ist. <brite>Falls Sie dies
nicht tun, erhalten Sie ein nicht bootbares System</brite> und müssen die Gentoo
LiveCD benutzen, um die unten stehenden Schritte zur Reparatur Ihres Systems
durchzuführen.
</p>

<p>
Sobald Sie damit fertig sind, Ihre Konfigurationsdateien zu aktualisieren, gibt
es einige Dinge, die Sie vor dem Reboot überprüfen sollten.
</p>

</body>
</section>

<section id="rc_conf">
<title>/etc/conf.d/rc</title>
<body>

<p>
<path>/etc/conf.d/rc</path> wird nicht mehr benutzt und jegliche Einstellungen
darin müssen zu den zugehörigen Einstellungen in <path>/etc/rc.conf</path>
migriert werden. Bitte lesen Sie sich durch <path>/etc/rc.conf</path> und
<path>/etc/conf.d/rc</path> und migrieren Sie die Einstellungen. Sobald Sie
damit fertig sind, löschen Sie <path>/etc/conf.d/rc</path>.
</p>

</body>
</section>
<section id="modules">
<title>Kernelmodule</title>
<body>

<p>
Normalerweise fügen Sie bestimmte Kernelmodule mit den Parametern, die Sie an
sie übergeben wollen, zur <path>/etc/modules.autoload.d/kernel-2.6</path> hinzu,
wenn Sie diese automatisch beim Booten geladen haben wollen. In baselayout-2
wird diese Datei nicht mehr verwendet. Stattdessen werden automatisch geladene
Module und Modulparameter in eine Datei, <path>/etc/conf.d/modules</path>,
gepackt, egal welche Kernelversion.
</p>

<p>
Ein Beispiel für eine alte Konfiguration wäre:
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
ivtv
cx88_dvb video_br=2
</pre>

<p>
Konvertieren des obigen Beispiels würde in Folgendem resultieren:
</p>

<pre caption="/etc/conf.d/modules">
<comment># Automatisch geladene Module beim Booten</comment>
modules_2_6="ivtv cx88_dvb"
<comment># Modulparameter</comment>
module_cx88_dvb_args_2_6="video_br=2"
</pre>

<p>
In den obigen Beispielen würden die Module und ihre Parameter nur an Kernel der
2.6.x Reihe übergeben werden. Die neue Konfiguration erlaubt eine feinere
Kontrolle über die Module und die Parameter, basierend auf der Kernelversion.
</p>

<p>
Ein eingehendes Beispiel wäre:
</p>

<pre caption="Detailliertes Beispiel von /etc/conf.d/modules">
<comment># Lade immer ochi1394 und ieee1394, egal welche Kernelversion</comment>
modules="ohci1394 ieee1394"
<comment># Lade tun und usbserial nur für 2.6.x Kernel</comment>
modules_2_6="tun usbserial"
<comment># Lade cx88_dvb nur für 2.6.23 kernels</comment>
modules_2_6_23="cx88_dvb"
<comment># Lade ivtv nur für 2.6.23-gentoo-r5</comment>
modules_2_6_23_gentoo_r5="ivtv"

<comment># Für 2.6.23-gentoo-r5, übergebe video_br=2 an cx88_dvb</comment>
module_cx88_dvb_args_2_6_23_gentoo_r5="video_br=2"
<comment># Für 2.6.x Kernel, übergebe immer vendor und product</comment>
module_usbserial_args_2_6="vendor=0x1410 product=0x2110"
<comment># Übergebe debug immer an ieee1394</comment>
module_ieee1394_args="debug"
</pre>

<note>
Bitte beachten Sie den Unterschied zwischen <b>module_</b> und <b>modules_</b>.
</note>

</body>
</section>
<section id="boot">
<title>Boot-Runlevel</title>
<body>

<p>
Das Runlevel <c>boot</c> führt einige wichtige Schritte für jeden Rechner aus.
Beispielsweise das Sicherstellen, dass Ihr root-Dateisystem read/write
eingebunden ist, dass Ihre Dateisysteme auf Fehler überprüft werden, dass Ihre
Mountpoints verfügbar sind und dass das Pseudo-Dateisystem <path>/proc</path>
beim Booten gestartet wird.
</p>

<p>
Mit OpenRC werden Volume-Management-Dienste für Ihre Speichergeräte nicht mehr
automatisch beim Booten ausgeführt. Dies schließt lvm, raid, swap, device-mapper
(dm), dm-crypt, evms, und Konsorten ein. Sie müssen sicherstellen, dass das
entsprechende Init-Skript für diese Dienste im Runlevel <c>boot</c> ist,
ansonsten ist es möglich, dass Ihr System nicht booten wird!
</p>

<p>
Auch wenn das OpenRC-Ebuild versuchen wird, diese Migration für Sie
durchzuführen, sollten Sie überprüfen, ob es alle Volume-Management-Dienste
richtig migriert hat:
</p>

<pre caption="Alle Dienste im Runlevel boot anzeigen">
# <i>ls -l /etc/runlevels/boot/</i>
</pre>

<p>
Falls Sie root, procfs, mtab, swap und fsck in obigem Listing nicht sehen,
führen Sie folgende Befehle aus, um Sie zum Runlevel <c>boot</c> hinzuzufügen:
</p>

<pre caption="Hinzufügen wichtiger Dienste zum Runlevel boot">
# <i>rc-update add root boot</i>
# <i>rc-update add procfs boot</i>
# <i>rc-update add mtab boot</i>
# <i>rc-update add fsck boot</i>
# <i>rc-update add swap boot</i>
</pre>

<p>
Wenn Sie wissen, dass Sie mdraid und lvm benutzen, diese aber oben nicht sehen,
führen Sie folgende Schritte aus, um die Init-Skripte zum Runlevel <c>boot</c>
hinzuzufügen:
</p>

<pre caption="Hinzufügen von raid und lvm zum Runlevel boot">
# <i>rc-update add raid boot</i>
# <i>rc-update add lvm boot</i>
</pre>

</body>
</section>
<section>
<title>Netzwerk</title>
<body>

<p>
Da baselayout und OpenRC in zwei unterschiedliche Pakete aufgespalten sind,
kann Ihr net.eth0 Init-Skript während des Upgrade-Prozesses verschwinden. Um
dieses Init-Skript zu ersetzen, führen Sie bitte folgendes aus:
</p>

<pre caption="Hinzufügen des fehlenden Skripts net.eth0">
# <i>cd /etc/init.d</i>
# <i>ln -s net.lo net.eth0</i>
</pre>

<p>
Falls Ihnen weitere Netzwerk-Init-Skripte fehlen, befolgen Sie die obigen
Anweisungen, um Sie wieder hinzuzufügen. Ersetzen Sie einfach <c>eth0</c> durch
den Namen Ihres Netzwerkgerätes.
</p>

<p>
Desweiteren benutzt <path>/etc/conf.d/net</path> nun keine bash-style-Arrays
mehr zur Konfiguration. Bitte schauen Sie sich die
<path>/usr/share/doc/openrc/net.example</path> für Konfigurationsanweisungen an.
Die Konvertierung sollte relativ geradelinig sein, beispielsweise würde sich
eine Zuweisung einer statischen IP wie folgt ändern:
</p>

<pre caption="Alter Style der /etc/conf.d/net">
config_eth0=( "192.168.1.37 netmask 255.255.255.0 brd 192.168.1.255" )
routes_eth0=( "default via 192.168.1.100" )
</pre>

<pre caption="Neuer Style der /etc/conf.d/net">
config_eth0="192.168.1.37 netmask 255.255.255.0 brd 192.168.1.255"
routes_eth0="default via 192.168.1.100"
</pre>

</body>
</section>
<section>
<title>Uhr</title>
<body>

<p>
Die Einstellungen für die Uhr finden sich nun nicht mehr in der
<path>/etc/conf.d/clock</path>, vielmehr wird nun das native Systemtool zur
Anpassung der Uhr benutzt. Dies bedeutet, dass unter Linux nun
<path>/etc/conf.d/hwclock</path> benutzt wird, unter FreeBSD
<path>/etc/conf.d/adjkerntz</path>. Das Init-Skript unter
<path>/etc/init.d/</path> wurde ebenfalls entsprechend umbenannt, stellen Sie
also sicher, dass es im entsprechenden Runlevel ist.
</p>

<p>
Außerdem findet sich die Variable <c>TIMEZONE</c> nicht mehr in dieser Datei.
Sein Inhalt findet sich stattdessen in der Datei <path>/etc/timezone</path>.
Falls sie nicht existiert, müssen Sie sie mit Ihrer Zeitzone anlegen. Bitte
überprüfen Sie beide dieser Dateien, um ihre Richtigkeit sicherzustellen.
</p>

<p>
Der richtige Wert für diese Datei ist der Pfad relativ zu Ihrer Zeitzone aus
<path>/usr/share/zoneinfo</path>. Beispielsweise wäre die richtige Einstellung
für jemanden, der an der Ostküste der Vereinigten Staaten wohnt, folgende:
</p>

<pre caption="/etc/timezone">
America/New_York
</pre>

</body>
</section>
<section>
<title>XSESSION</title>
<body>

<p>
Die Variable XSESSION befindet sich nicht mehr länger in der Datei
<path>/etc/rc.conf</path>. Das Paket <c>x11-apps/xinit</c> stellt nun die Datei
<path>/etc/env.d/90xsession</path> bereit, welche genutzt werden kann, um die
Variable XSESSION zu setzen.
</p>

<p>
Diese Variable wird für Sie standardmäßig <b>NICHT</b> migriert, daher müssen
Sie die <path>/etc/env.d/90xsession</path> editieren.
</p>

<impo>
Sie müssen <c>env-update</c> nach dem Erstellen einer Datei in
<path>/etc/env.d</path> ausführen und sich dann aus- und einloggen, damit es
wirksam wird.
</impo>

</body>
</section>
<section>
<title>EDITOR / PAGER</title>
<body>

<p>
Die Variable EDITOR befindet sich nicht mehr länger in der Datei
<path>/etc/rc.conf</path>. Sowohl EDITOR als auch PAGER werden nun
standardmäßig in /etc/profile gesetzt. Sie sollten dies bei Bedarf in Ihrer
Datei <path>~/.bashrc</path> (oder gleichwertig) ändern oder
<path>/etc/env.d/99editor</path> erstellen und die systemweite
Standardeinstellung dort setzen.
</p>

<impo>
Sie müssen <c>env-update</c> nach dem Erstellen einer Datei in
<path>/etc/env.d</path> ausführen und sich dann aus- und einloggen, damit es
wirksam wird. Falls Sie die Variable in <path>~/.bashrc</path> setzen, können
Sie die Datei mit <c>source ~/.bashrc</c> neu einlesen.
</impo>

</body>
</section>
<section>
<title>Beenden</title>
<body>

<p>
Sobald Sie damit fertig sind, Ihre Konfigurationsdateien und Init-Skripte zu
aktualisieren, müssen Sie zuletzt noch <b>reboot</b> ausführen. Dies ist
erforderlich, da Systemstatusinformationen während eines Upgrades nicht
beibehalten werden, daher müssen Sie das System mit einem frischen Boot
versorgen.
</p>

</body>
</section>
</chapter>
</guide>
