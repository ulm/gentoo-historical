<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/mysql-howto.xml,v 1.2 2012/04/18 18:30:17 swift Exp $ -->

<!-- English CVS Version: 1.7 -->

<guide lang="de">
<title>MySQL Einführung</title>

<author title="Autor">
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>
<author title="Bearbeiter">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Bearbeiter">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Übersetzer">
  <mail link="stefansusenet@nurfuerspam.de">Stefan Kienzl</mail>
</author>
<author title="Korrektor">
  <mail link="grahl2@gentoo.org">Jan Hendrik Grahl</mail>
</author>
<author title="Übersetzer">
  <mail link="keytoaster@gentoo.org">Tobias Heinlein</mail>
</author>

<abstract>
Dieses Dokument hilft Anwendern MySQL einzurichten und zu verwenden.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.5</version>
<date>2006-08-08</date>

<chapter>
<title>Mit MySQL zu arbeiten beginnen</title>
<section>
<title>Hintergrund</title>
<body>

<p>
MySQL ist ein populärer Datenbankserver, der in verschiedensten
Anwendungengebieten verwendet wird. SQL steht für (S)tructured (Q)uery
(L)anguage, welche MySQL verwendet, um mit anderen Programmen zu kommunizieren.
Darüber hinaus hat MySQL eigene erweiterte SQL Funktionen, um dem Benutzer
weitere Funktionalität zu bieten. In diesem Dokument werfen wir einen Blick auf
die initiale MySQL-Installation, das Einrichten der Datenbanken und Tabellen und
erzeugen neuer Benutzer. Lassen Sie uns mit der Installation beginnen.
</p>

</body>
</section>
<section>
<title>Installation von MySQL</title>
<body>

<p>
Als erstes stellen Sie sicher, dass sie MySQL auf Ihrem System installiert
haben. Für den Fall, dass Sie spezielle Funktionen benötigen, stellen Sie
ebenfalls sicher, dass Sie die nötigen USE-Flags aktiviert haben, da diese
Ihnen bei der Feinabstimmung Ihrer Installation helfen.
</p>

<pre caption="MySQL installieren">
<comment>(Anzeigen verfügbarer USE-Flags)</comment>
# <i>emerge --pretend --verbose mysql</i>
<comment>(MySQL installieren)</comment>
# <i>emerge mysql</i>
</pre>

<p>
Nach erfolgter Installation, werden Sie folgenden Hinweis sehen:
</p>

<pre caption="Nachricht von einfo zu MySQL">
You might want to run:
"emerge --config =dev-db/mysql-[version]"
if this is a new install.
</pre>

<p>
Da dies eine neue Installation ist, führen wir den Befehl aus. Sie müssen
<c>ENTER</c> drücken, wenn Sie während der Konfiguration der MySQL-Datenbank
danach gefragt werden. Die Konfiguration richtet die Haupt-MySQL-Datenbank ein,
welche administrative Informationen wie Datenbanken, Tabellen, Benutzer,
Zugriffsrechte und mehr beinhaltet. Die Konfiguration empfiehlt, dass Sie Ihr
root-Passwort so früh wie möglich ändern. Wir werden das definitiv tun,
andernfalls könnte jemand die Gelegenheit nutzen und unsere Standardinstallation
des MySQL-Servers hacken.
</p>

<pre caption="Konfiguration von MySQL">
<comment>(Ersetzen Sie [version] mit der Versionsnummer, die sie installiert haben.)</comment>
# <i>emerge --config =dev-db/mysql-[version]</i>
 * MySQL DATADIR is /var/lib/mysql
 * Press ENTER to create the mysql database and set proper
 * permissions on it, or Control-C to abort now...

   Preparing db table
   Preparing host table
   Preparing user table
   Preparing func table
   Preparing tables_priv table
   Preparing columns_priv table
   Installing all prepared tables

   To start mysqld at boot time you have to copy support-files/mysql.server
   to the right place for your system

   PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !
   To do so, issue the following commands to start the server
   and change the applicable passwords:
<comment>(Beachten Sie die nächsten 3 Zeilen)</comment>
   /etc/init.d/mysql start
   /usr/bin/mysqladmin -u root -h pegasos password 'new-password'
   /usr/bin/mysqladmin -u root password 'new-password'
   Depending on your configuration, a -p option may be needed
   in the last command. See the manual for more details.

<comment>(Einige spezifische MySQL-Informationen, die nicht zum Ebuild gehören,
wurden entfernt um dieses Dokument so konsistent wie möglich zu halten)</comment>

   * For security reasons you should set your MySQL root
   * password as soon as possible.
</pre>

<impo>
Seit mysql-4.0.24-r2 wird das root-Passwort während der Konfigurationsphase
gesetzt, um dieses sicherer zu machen.
</impo>

<p>
Das Konfigurationsskript hat die Befehle, die wir ausführen müssen um das
Passwort zu setzen, bereits ausgegeben, daher führen wir diese jetzt aus.
</p>

<pre caption="Einrichten Ihres root-Passworts für MySQL">
# <i>/etc/init.d/mysql start</i>
 * Re-caching dependency info (mtimes differ)...
 * Starting mysqld (/etc/mysql/my.cnf) ...        [ ok ]
<comment>(Ersetzen Sie new-password durch Ihr gewünschtes Passwort)</comment>
# <i>/usr/bin/mysqladmin -u root -h localhost password 'new-password'</i>
</pre>

<p>
Sie können das erfolgreiche Setzen des root-Passworts durch das Einloggen in
Ihren MySQL-Server testen:
</p>

<pre caption="Einloggen in den MySQ-Server durch Verwenden von mysql">
$ <i>mysql -u root -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 4 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
Der <c>-u</c> Schalter setzt den Benutzer, der sich einloggen wird. Der
<c>-h</c> Schalter setzt den Host. Das ist üblicherweise <c>localhost</c>
solange Sie keinen Remote-Server einrichten. Schließlich sagt <c>-p</c> dem
MySQL-Client, dass Sie ein Passwort eingeben werden, um Zugriff zu Ihren
Datenbanken zu erhalten. Beachten Sie die <c>mysql&gt;</c> Eingabeaufforderung.
Das ist, wo Sie all Ihre Befehle eingeben. Nachdem wir als root in der
MySQL-Eingabeaufforderung sind, können wir beginnen unsere Datenbanken
einzurichten.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Einrichten der Datenbanken</title>
<section>
<title>Erzeugen einer Datenbank</title>
<body>

<p>
Wir sind eingeloggt und eine MySQL-Eingabeaufforderung wird angezeigt. Lassen
Sie uns zuerst einen Blick auf die vorhandenen Datenbanken werfen. Um das zu
tun, verwenden wir den <c>SHOW DATABASES</c> Befehl.
</p>

<pre caption="Anzeigen der MySQL-Datenbanken">
mysql&gt; <i>SHOW DATABASES;</i>
+----------+
| Database |
+----------+
| mysql    |
| test     |
+----------+
2 rows in set (0.09 sec)
</pre>

<impo>
Bitte beachten Sie, dass MySQL Befehle mit einem Semikolon -- <c>;</c> -- enden
müssen.
</impo>

<p>
Ungeachtet der Tatsache, dass eine Testdatenbank schon existiert, werden wir
unsere eigene erzeugen. Datenbanken werden mit dem <c>CREATE DATABASE</c>
Befehl erzeugt. Wir werden eine mit dem Namen "gentoo" erzeugen.
</p>

<pre caption="Erzeugen der gentoo Datenbank">
mysql&gt; <i>CREATE DATABASE gentoo;</i>
Query OK, 1 row affected (0.08 sec)
</pre>

<p>
Diese Ausgabe lässt uns wissen, dass der Befehl ohne Fehler ausgeführt wurde.
In diesem Fall wurde 1 Zeile modifiziert. Das ist eine Referenz zur
Haupt-MySQL-Datenbank, welche eine Liste aller Datenbanken beinhaltet. Sie
müssen sich über die Hintergründe nicht all zu viel Gedanken machen. Die letzte
Zahl zeigt, wie schnell die Abfrage durchgeführt wurde. Wir können sichergehen,
dass die Datenbank erstellt wurde, indem wir <c>SHOW DATABASES</c> erneut
ausführen.
</p>

<pre caption="Sicherstellen, dass die Datenbank erstellt wurde">
mysql&gt; <i>SHOW DATABASES;</i>
+----------+
| Database |
+----------+
| gentoo   |
| mysql    |
| test     |
+----------+
3 rows in set (0.00 sec)
</pre>

<p>
Unsere Datenbank wurde natürlich erstellt. Um Tabellen in unserer neuen gentoo
Datenbank zu erstellen, müssen wir diese als unsere aktuelle Datenbank
auswählen. Um das zu tun, verwenden wir den <c>USE</c> Befehl. Der <c>USE</c>
Befehl nimmt als Argument den Namen der Datenbank, die Sie aktuell verwenden
möchten. Eine andere Möglichkeit ist, sie auf der Kommandozeile durch Setzen
nach dem <c>-D </c> Schalter auszuwählen. Fahren wir fort und wechseln zur
gentoo Datenbank.
</p>

<pre caption="Wechseln unserer Datenbank">
mysql&gt; <i>USE gentoo;</i>
Database changed
</pre>

<p>
Unsere derzeitige Datenbank ist nun die vorher von uns erstellte gentoo
Datenbank. Nachdem wir diese jetzt benutzen, können wir damit beginnen,
Tabellen zu erstellen und diese mit Informationen zu füllen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Arbeiten mit Tabellen in MySQL</title>
<section>
<title>Erzeugen einer Tabelle</title>
<body>

<p>
In der Struktur von MySQL gibt es Datenbanken, Tabellen, Einträge und Felder.
Datenbanken beinhalten Tabellen, Tabellen beinhalten Einträge, Einträge
beinhalten Felder, welche die eigentlichen Informationen beinhalten. Diese
Struktur ermöglicht Anwendern auszuwählen, wie sie auf die Informationen
zugreifen möchten. Bis jetzt haben wir uns mit Datenbanken beschäftigt, lassen
Sie uns nun mit Tabellen arbeiten. Zunächst können Tabellen, ähnlich wie
Datenbanken, durch den <c>SHOW TABLES</c> Befehl angezeigt werden. Derzeit
gibts es keine Tabellen in unserer gentoo Datenbank, wie uns das Ausführen des
Befehls zeigen wird:
</p>

<pre caption="Leere gentoo Datenbank">
mysql&gt; <i>SHOW TABLES;</i>
Empty set (0.00 sec)
</pre>

<p>
Das bedeutet, wir müssen Tabellen erstellen. Um das zu tun, verwenden wir den
<c>CREATE TABLE</c> Befehl. Allerdings unterscheidet sich dieser Befehl relativ
stark von dem einfachen <c>CREATE DATABASE</c> Befehl. Dieser Befehl verwendet
eine Liste von Argumenten. Die Form ist wie folgt:
</p>

<pre caption="CREATE TABLE Syntax">
CREATE TABLE [table_name] ([field_name] [field_data_type]([size]));
</pre>

<p>
<b>table_name</b> ist der Name der Tabelle, die wir erstellen möchten. In
diesem Fall erstellen wir eine Tabelle genannt <c>developers</c>. Diese Tabelle
wird den Namen, E-Mail und Beruf beinhalten. <c>field_name</c> beinhaltet den
Namen des Feldes. In diesem Fall haben wir 3 benötigte Namen: name, email und
job. Der <b>field_data_type</b> gibt an, welche Art von Informationen darin
gespeichert werden. Die verschiedenen verfügbaren Formate sind auf der <uri
link="http://dev.mysql.com/doc/mysql/de/column-types.html">MySQL-Spaltentypen
Seite</uri> zu finden. Für unsere Zwecke verwenden wir den <c>VARCHAR</c>
Datentyp für alle Felder. <c>VARCHAR</c> ist einer der einfachsten Datentypen
beim Arbeiten mit Strings. <b>size</b> ist wieviel Daten ein einzelnes Feld
speichern kann. In diesem Fall verwenden wir 128. Das bedeutet, dass das Feld
128 Bytes <c>VARCHAR</c> Daten beinhalten kann. Sie können das als 128 Zeichen
sehen, eine technischere Erklärung stellt die oben genannte Seite zur Verfügung.
Nachdem wir jetzt wissen, wie man eine Tabelle erstellt, werden wir das auch
tun.
</p>

<pre caption="Erzeugen unserer Tabelle">
mysql&gt; <i>CREATE TABLE developers ( name VARCHAR(128), email VARCHAR(128), job VARCHAR(128));</i>
Query OK, 0 rows affected (0.11 sec)
</pre>

<p>
Sieht so aus, als ob unsere Tabelle erfolgreich erstellt wurde. Lassen Sie uns
das mit dem <c>SHOW TABLES</c> Befehl überprüfen:
</p>

<pre caption="Überprüfen unserer Tabelle">
mysql&gt; <i>SHOW TABLES;</i>
+------------------+
| Tables_in_gentoo |
+------------------+
| developers       |
+------------------+
1 row in set (0.00 sec)
</pre>

<p>
Ja, da ist unsere Tabelle. Allerdings sieht es so aus, als ob diese keine
Informationen über die Art der Felder hat, die wir eingerichtet haben. Dafür
verwenden wir den <c>DESCRIBE</c> Befehl (oder kurz <c>DESC</c>), welches den
Tabellennamen als Argument verwendet. Sehen wir nach, was uns das für die
developer Tabelle ausgibt.
</p>

<pre caption="Beschreibung unserer developer Tabelle">
mysql&gt; <i>DESCRIBE developers;</i>
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| name  | varchar(128) | YES  |     | NULL    |       |
| email | varchar(128) | YES  |     | NULL    |       |
| job   | varchar(128) | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+
3 rows in set (0.00 sec)
</pre>

<p>
Das zeigt die verschiedenen Felder und deren Typ. Es zeigt auch einige weitere
Attribute, welche über das Ziel dieses Howtos hinausgehen. Für mehr
Informationen besuchen Sie das <uri
link="http://dev.mysql.com/doc/mysql/de/">MySQL-Referenzhandbuch</uri>. Wir
haben eine Tabelle mit der wir arbeiten können, lassen Sie uns fortfahren
und diese füllen.
</p>

</body>
</section>
<section>
<title>Befüllen unserer MySQL Datenbank</title>
<body>

<p>
Wir befüllen eine Tabelle (oder fügen Daten hinzu) mit dem <c>INSERT</c>
Befehl. Wie der <c>CREATE TABLE</c> Befehl, hat es ebenfalls ein
spezifisches Format:
</p>

<pre caption="INSERT Syntax">
INSERT INTO table (col1, col2, ...) VALUES('value1', 'value2', ...);
</pre>

<p>
Dieser Befehl wird verwendet, um Einträge in eine Tabelle zu schreiben. table
beinhaltet die MySQL-Tabelle, in die wir die Informationen einfügen möchten.
Dem Tabellennamen folgt eventuell eine Liste der Spalten, in die Daten eingefügt
werden sollten, und <c>VALUES()</c> beinhaltet die in die Felder einzufügenden
Daten. Sie können die Liste der Spalten weglassen, wenn Sie in jedes Feld
etwas einfügen und wenn Sie die Daten in der gleichen Reihenfolge eintragen,
wie Sie in der Tabelle definiert sind. In diesem Fall, wollen wir Daten in die
developers Tabelle einfügen. Lassen Sie uns einige Beispieleinträge einfügen:
</p>

<pre caption="Einfügen von Informationen in unsere developers Tabelle">
mysql&gt; <i>INSERT INTO developers VALUES('Joe Smith', 'joesmith@gentoo.org', 'toolchain');</i>
Query OK, 1 row affected (0.06 sec)
<comment>(Falls Sie die Reihenfolge der Spalten nicht wissen, oder einen unvollständigen Eintrag machen möchten)</comment>
mysql&gt; <i>INSERT INTO developers (job, name) VALUES('outsourced', 'Jane Doe');</i>
Query OK, 1 row affected (0.01 sec)
</pre>

<p>
Entsprechend unsere Ausgabe, sieht es so aus, dass die Einträge korrekt
eingefügt wurden. Was ist, wenn wir mehr Informationen als nur einen Eintrag
einfügen möchten? Das ist der Moment, wo der <c>LOAD DATA</c> Befehl ins
Spiel kommt. Das lädt Daten aus einer Tab getrennten Datei. Probieren wir das
durch Editieren einer Datei in unserem Homeverzeichnis mit Einträgen. Wir
nennen diese Datei <c>records.txt</c>. Hier ist ein Beispiel:
</p>

<pre caption="~/records.txt">
John Doe  johndoe@gentoo.org  portage
Chris White  chriswhite@gentoo.org  documentation
Sam Smith  samsmith@gentoo.org  amd64
</pre>

<impo>
Stellen Sie sicher, dass sie wissen, mit welchen Daten Sie arbeiten. Es ist
sehr unsicher <c>LOAD DATA</c> zu verwenden, wenn Sie sich über den Dateiinhalt
nicht im Klaren sind!
</impo>

<p>
Jetzt hat der <c>LOAD DATA</c> Befehl eine längere Definition, wir verwenden
hier aber die einfachste Form.
</p>

<pre caption="LOAD DATA Syntax">
LOAD DATA LOCAL INFILE '/path/to/filename' INTO TABLE table;
</pre>

<p>
<path>/path/to/filename</path> ist das zu verwendete Verzeichnis und der
Dateiname, table ist der Name unserer Tabelle. In diesem Fall ist
<path>~/records.txt</path> die Datei und die Tabelle ist developers.
</p>

<pre caption="Hereinladen unserer Daten">
mysql&gt; <i>LOAD DATA LOCAL INFILE '~/records.txt' INTO TABLE developers;</i>
Query OK, 3 rows affected (0.00 sec)
Records: 3  Deleted: 0  Skipped: 0  Warnings: 0
</pre>

<impo>
Sollten Sie mit einem seltsamen Verhalten konfrontiert werden, stellen Sie
sicher, dass die Felder durch Tabs getrennt sind. Falls Sie Informationen aus
einer anderen Quelle in Ihre Eingabedatei kopieren, kann es sein, dass die Tabs
in Leerzeichen konvertiert werden.
</impo>

<p>
Das hat gut funktioniert. Wie auch immer, das fügt einfach nur Einträge ein,
aber gibt Ihnen keine Kontrolle über MySQL. Viele Web-Anwendungen verwenden
SQL-Skripte um MySQL schnell und einfach einzurichten. Falls Sie ein scr-Skript
verwenden möchten, müssen Sie MySQL im Batch-Modus starten oder die Datei
sourcen. Hier ist ein Beispiel um MySQL im Batch-Modus laufen zu lassen:
</p>

<pre caption="MySQL im Batch-Modus">
$ <i>mysql -u root -h localhost -p &lt; sqlfile</i>
</pre>

<p>
Wie beim <c>LOAD DATA</c> Befehl sollten Sie sicherstellen, dass Sie wissen
was <path>sqlfile</path> tut. <e>Das nicht zu tun, kann Ihre Datenbank
gefährden!</e> Ein anderer Weg das zu tun, ist den <c>source</c> Befehl zu
verwenden. Dieser Befehl startet MySQL-Befehle aus einer SQL-Datei aus dem
interaktiven Modus. Hier sehen Sie, wie Sie eine SQL-Datei sourcen:
</p>

<pre caption="Sourcen einer sql Date">
mysql&gt; <i>source sqlfile;</i>
</pre>

<p>
Falls Sie eine Web-Anwendung haben, die möchte, dass Sie eine SQL-Datei
ausführen, können die beiden oben genannten Befehle verwendet werden, um das
zu erledigen. Wir haben unsere Tabellen eingerichtet, wie überprüfen wir jetzt
unsere Felder? Wir tun das, indem wir in unseren Tabellen mit Abfragen suchen.
</p>

</body>
</section>
<section>
<title>Durchsuchen von MySQL Tabellen mit Abfragen</title>
<body>

<p>
Abfragen sind eine der Hauptfunktionen von SQL-Datenbanken. Sie helfen uns, die
Daten in unseren Tabellen in etwas Brauchbares zu verwandeln. Die meisten
Abfragen werden mit dem <c>SELECT</c> Befehl ausgeführt. Der <c>SELECT</c>
Befehl ist recht komplex, daher werden wir uns in diesem Dokument nur die
drei Hauptformen ansehen.
</p>

<pre caption="SELECT Formen">
<comment>(Auswählen aller Einträge in einer Tabelle)</comment>
SELECT * FROM table;
<comment>(Auswählen spezieller Einträge in einer Tabelle)</comment>
SELECT * FROM table WHERE field=value;
<comment>(Auswählen spezieller Felder)</comment>
SELECT field1,field2,field3 FROM table [WHERE field=value];
</pre>

<p>
Werfen wir einen kurzen Blick auf die erste Form. Diese ist recht einfach und
gibt ihnen einen Überblick über Ihre Tabelle. Wir machen weiter und führen es
aus, um zu sehen, welche Daten wir bis jetzt haben.
</p>

<pre caption="Inhalt unserer Tabelle">
mysql&gt; <i>SELECT * FROM developers;</i>
+-------------+-----------------------+----------------+
| name        | email                 | job            |
+-------------+-----------------------+----------------+
| Joe Smith   | joesmith@gentoo.org   | toolchain      |
| John Doe    | johndoe@gentoo.org    | portage        |
| Chris White | chriswhite@gentoo.org | documentation  |
| Sam Smith   | samsmith@gentoo.org   | amd64          |
| Jane Doe    | NULL                  | Outsourced job |
+-------------+-----------------------+----------------+
5 rows in set (0.00 sec)
</pre>

<p>
Wir sehen die Daten, die wir mit <c>INSERT</c> und jene, die wir mit <c>LOAD
DATA</c> eingefügt haben. Jetzt sagen wir, wir möchten nur den Eintrag für Chris
White ansehen. Das können wir mit der zweiten Form von select wie unten gezeigt
erreichen.
</p>

<pre caption="Auswählen eines speziellen Eintrags mit SELECT">
mysql&gt; <i>SELECT * FROM developers WHERE name = 'Chris White';</i>
+-------------+-----------------------+---------------+
| name        | email                 | job           |
+-------------+-----------------------+---------------+
| Chris White | chriswhite@gentoo.org | documentation |
+-------------+-----------------------+---------------+
1 row in set (0.08 sec)
</pre>

<p>
Wie vermutet, wurde der spezielle Eintrag nach dem wir suchen ausgewählt. Jetzt
sagen wir, wir möchten nur den Beruf und die E-Mail-Adresse, nicht aber den
Namen der Person wissen. Wir können das mit der dritten Form des <c>SELECT</c>
Befehls erreichen, wie hier gezeigt wird.
</p>

<pre caption="Auswählen eines speziellen Eintrags und Feldes mit SELECT">
mysql> <i>SELECT email,job FROM developers WHERE name = 'Chris White';</i>
+-----------------------+---------------+
| email                 | job           |
+-----------------------+---------------+
| chriswhite@gentoo.org | documentation |
+-----------------------+---------------+
1 row in set (0.04 sec)
</pre>

<p>
Diese Methode der Auswahl ist viel einfacher zu handhaben, speziell mit
größeren Datenmengen, wie wir später noch sehen werden. Als root Benutzer haben
wir mit uneingeschränkten Rechten die Möglichkeit, alles mit der
MySQL-Datenbank zu tun, was wir möchten. In einem Serverumfeld, kann ein
Benutzer mit solchen Rechten sehr problematisch sein. Um zu kontrollieren, wer
was mit der Datenbank tut, richten wir Zugriffsrechte ein.
</p>

</body>
</section>
</chapter>

<chapter>
<title>MySQL-Zugriffsrechte</title>
<section>
<title>Zugriffsrechte gewähren mit GRANT</title>
<body>

<p>
Zugriffsrechte legen fest, welche Art von Zugriff Benutzer auf die Datenbanken,
Tabellen oder einfach alles haben. Im Moment hat nur der root Account durch
seine Berechtigung Zugriff auf die gentoo Datenbank. Lassen Sie uns jetzt zwei
gewöhnliche Benutzer erstellen, guest und admin, die die gentoo Datenbank
betreten und damit arbeiten dürfen. Der guest Account wird ein eingeschränkter
Account sein. Alles was er tun kann, ist Informationen abzufagen und nicht
mehr. admin wird die selbe Kontrolle wie root haben, allerdings nur für die
gentoo Datenbank (nicht für die Haupt-MySQL-Datenbank). Bevor wir damit
weitermachen, lassen Sie uns einen Blick auf eine einfache Form des <c>GRANT</c>
Befehls werfen.
</p>

<pre caption="GRANT Syntax">
GRANT [privileges] ON database.* TO '[user]'@'[host]' IDENTIFIED BY '[password]';
</pre>

<note>
<c>GRANT</c> ist der empfohlende Weg, um Benutzer anzulegen. Spätere Versionen
von MySQL enthalten zwar eine <c>CREATE_USER</c> Funktion, <c>GRANT</c> ist
allerdings nach wie vor bevorzugt.
</note>

<p>
Zuerst haben wir die Rechte, die wir vergeben möchten. Mit dem was wir bis
jetzt gelernt haben, hier sind einige Rechte, die Sie setzen können:
</p>

<ul>
  <li><c>ALL</c> - gibt alle Rechte für die Datenbank</li>
  <li><c>CREATE</c> - erlaubt Benutzern, Tabellen zu erzeugen</li>
  <li><c>SELECT</c> - erlaubt Benutzern, Tabellen zu durchsuchen</li>
  <li><c>INSERT</c> - erlaubt Benutzern, Daten in eine Tabelle einzufügen</li>
  <li><c>SHOW DATABASES</c> - erlaubt Benutzern, eine Liste der Datenbanken
  anzuzeigen</li>
  <li><c>USAGE</c> - Benutzer hat keine Rechte</li>
  <li><c>GRANT OPTION</c> - erlaubt Benutzern, Rechte zu vergeben</li>
</ul>

<note>
Falls Sie MySQL mit einer Web-Anwendung kommunizieren lassen, sind
<c>CREATE</c>, <c>SELECT</c>, <c>INSERT</c> (hier besprochen), <c>DELETE</c>
und <c>UPDATE</c>  (für weitere Informationen sehen Sie sich den
<uri link="http://dev.mysql.com/doc/mysql/en/grant.html"> MySQL
Reference Manual - GRANT and REVOKE Syntax</uri> Abschnitt an) die einzigen
Rechte die Sie brauchen werden. Viele Leute machen den Fehler, alle Rechte zu
vergeben, auch wenn es nicht notwendig ist. Überprüfen Sie mit den
Entwicklern der Anwendung, ob solche Rechte Probleme bei normalen Operationen
verursachen können.
</note>

<p>
Für unseren admin Benutzer, verwenden wir ALL. Für den guest Benutzer reicht
<c>SELECT</c> für den Nur-Lese-Zugriff. database ist die Datenbank, für die wir
die Rechte des Benutzers festlegen möchten. In diesem Beispiel ist gentoo die
Datenbank. Das .* steht für alle Tabellen. Falls Sie wünschen, können Sie auch
tabellenspezifische Rechte vergeben. user ist der Name des Benutzers und host
ist der Hostname, von dem aus der Benutzer auf die Datenbank zugreift. In den
meisten Fällen wird das localhost sein. password ist das Passwort des
Benutzers. Lassen Sie uns fortfahren und anhand dieser Informationen unsere
Benutzer erstellen.
</p>

<pre caption="Erzeugen des admin und guest Benutzers">
<comment>(admin)</comment>
mysql&gt; <i>GRANT ALL ON gentoo.* TO 'admin'@'localhost' IDENTIFIED BY 'password';</i>
<comment>(guest)</comment>
mysql&gt; <i>GRANT SELECT ON gentoo.* TO 'guest'@'localhost' IDENTIFIED BY 'password';</i>
</pre>

<p>
Nachdem wir unsere Benutzer eingerichtet haben, lassen Sie sie uns
ausprobieren. Zuerst beenden wir MySQL durch Eingabe von <c>quit</c> in der
Eingabeaufforderung:
</p>

<pre caption="MySQL beenden">
mysql&gt; <i>quit</i>
</pre>

<p>
Wir sind jetzt zurück in der Konsole. Nachdem wir unsere Benutzer eingerichtet
haben, lassen Sie uns fortfahren und sehen, was diese tun dürfen.
</p>

</body>
</section>
<section>
<title>Benutzerrechte ausprobieren</title>
<body>

<p>
Wir versuchen uns jetzt als guest Benutzer einzuloggen. Der guest Benutzer hat
nur <c>SELECT</c> Rechte. Das bedeutet, nur Suchen und sonst nichts zu
können. Fahren Sie fort und loggen Sie sich mit dem guest Benutzer ein.
</p>

<pre caption="Einloggen mit dem guest Account">
$ <i>mysql -u guest -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 6 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
Jetzt sollten wir die Rechte unseres Benutzers überprüfen. Wechseln wir zur
gentoo Datenbank:
</p>

<pre caption="Wechseln zur gentoo Datenbank">
mysql&gt; <i>USE gentoo;</i>
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
</pre>

<p>
Lassen Sie uns versuchen, etwas zu tun, dass wir nicht dürfen. Wir versuchen,
eine Tabelle zu erzeugen.
</p>

<pre caption="Versuchen eine Datenbank mit dem guest Benutzer zu erstellen">
mysql&gt; <i>CREATE TABLE test (test VARCHAR(20), foobar VARCHAR(2));</i>
ERROR 1044: Access denied for user: 'guest@localhost' to database 'gentoo'
</pre>

<p>
Wie Sie sehen können, funktioniert das nicht, da unser Benutzer nicht die
erforderlichen Rechte hat. Wir haben aber Zugriff auf die <c>SELECT</c>
Anweisung. Fahren wir fort und probieren das aus:
</p>

<pre caption="Ausprobieren der SELECT Anweisung">
mysql&gt; <i>SELECT * FROM developers;</i>
+-------------+-----------------------+----------------+
| name        | email                 | job            |
+-------------+-----------------------+----------------+
| Joe Smith   | joesmith@gentoo.org   | toolchain      |
| John Doe    | johndoe@gentoo.org    | portage        |
| Chris White | chriswhite@gentoo.org | documentation  |
| Sam Smith   | samsmith@gentoo.org   | amd64          |
| Jane Doe    | NULL                  | Outsourced job |
+-------------+-----------------------+----------------+
5 rows in set (0.00 sec)
</pre>

<p>
Der Befehl war erfolgreich und wir haben einen flüchtigen Blick darauf
erhalten, was Benutzerrechte tun können. Wir haben aber auch einen admin Account
erzeugt. Das war um zu zeigen, dass auch Benutzer mit ALL Zugriffsrechten
Einschränkungen haben können. Fahren Sie fort, schließen Sie MySQL und loggen
Sie sich anschließend als admin ein.
</p>

<pre caption="Einloggen als admin">
mysql&gt; <i>quit</i>
Bye
$ <i>mysql -u admin -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 7 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
Zu Beginn versuchen wir, eine neue Datenbank mit unserem admin Benutzer zu
erstellen. Dieser admin hat den gleichen Zugriff wie der root Benutzer und kann
jegliche Änderungen in der gentoo Datenbank durchführen, die er möchte. Das wird
den Zugriff auf die Haupt-MySQL-Datenbank testen. Erinnern Sie sich daran, dass
wir früher nur Zugriff auf eine spezielle Datenbank erlaubt haben.
</p>

<pre caption="Versuch eine neue Datenbank zu erstellen">
mysql&gt; <i>CREATE DATABASE gentoo2;</i>
ERROR 1044: Access denied for user: 'admin@localhost' to database 'gentoo2'
</pre>

<p>
Natürlich kann der admin Benutzer keine Datenbank erzeugen, trotz seiner Rechte
in der gentoo Datenbank. Wie auch immer, wir können nach wie vor den admin
Account dazu benutzen, um die gentoo Datenbank zu modifizieren, wie durch das
folgende beispielhafte Einfügen von Daten gezeigt wird.
</p>

<pre caption="admin Rechte in der gentoo Datenbank">
mysql&gt; <i>USE gentoo;</i>
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; <i>INSERT INTO developers VALUES('Bob Simmons', 'bobsimmons@gentoo.org', 'python');</i>
Query OK, 1 row affected (0.08 sec)
</pre>

<p>
Der admin Benutzer kann auf die Datenbank zugreifen, wie es ihm gefällt.
Manchmal möchten wir auch Benutzerrechte entziehen. Das kann alles, angefangen
von einem problematischen Benutzer bis zu einem pensionierten Angestellen sein.
Werfen wir einen Blick darauf, wie man Benutzerrechte mit dem <c>REVOKE</c>
Befehl deaktiviert.
</p>

</body>
</section>
<section>
<title>Sperren eines Benutzerzugriffs mit dem REVOKE Befehl</title>
<body>

<p>
Der <c>REVOKE</c> Befehl lässt uns den Zugriff eines Benutzers verweigern. Wir
können den gesamten oder nur speziellen Zugriff verweigern. Tatsächlich ist das
Format sehr ähnlich zu dem von <c>GRANT</c>.
</p>

<pre caption="REVOKE Syntax">
REVOKE [privileges] ON database.* FROM '[user]'@'[host]';
</pre>

<p>
Die Optionen sind in dem <c>GRANT</c> Abschnitt erklärt. In diesem Abschnitt
werden wir jeden Zugriff eines Benutzers verweigern. Sagen wir, wir haben
herausgefunden, dass der guest Account in irgendeiner Weise
Sicherheitsprobleme hervorruft. Wir entscheiden uns dazu, alle Rechte zu
widerrufen. Wir melden uns als root an und tun das Nötige.
</p>

<pre caption="Widerrufen von Benutzerrechten">
mysql&gt; <i>REVOKE ALL ON gentoo.* FROM 'guest'@'localhost';</i>
Query OK, 0 rows affected (0.00 sec)
</pre>

<note>
In diesem Fall ist der Benutzerzugriff recht einfach, daher ist das
datenbankspezifische Widerrufen kein Problem. In größeren Fällen werden Sie
wahrscheinlich *.* anstatt gentoo.* verwenden, um alle Rechte von allen
Datenbanken zu löschen.
</note>

<p>
Beenden wir jetzt und versuchen uns als guest Benutzer einzuloggen.
</p>

<pre caption="Versuch sich als guest Benutzer einzuloggen">
$ <i>mysql -u guest -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 9 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
Wir können uns zwar einloggen, allerdings haben wir keinen Zugriff mehr zur
gentoo Datenbank.
</p>

<pre caption="Zugriff des guest Accounts verweigert.">
mysql&gt; <i>USE gentoo;</i>
ERROR 1044: Access denied for user: 'guest@localhost' to database 'gentoo'
</pre>

<p>
Unser problematischer Benutzer kann auf die gentoo Datenbank nicht länger
zugreifen. Bitte beachten Sie, dass sich der Benutzer noch immer einloggen
kann. Dies ist so, da er nach wie vor in der Haupt-MySQL-Datenbank vorhanden
ist. Werfen wir einen Blick darauf, wie man einen Account komplett mit dem
<c>DELETE</c> und der MySQL Benutzertabelle löscht.
</p>

</body>
</section>
<section>
<title>Löschen von Accounts mit DELETE</title>
<body>

<p>
Die MySQL Benutzertabelle ist eine Liste mit allen Benutzer und Informationen
über diese. Stellen Sie sicher, dass Sie als root eingeloggt sind. Danach
fahren Sie fort und verwenden die Haupt-MySQL-Datenbank.
</p>

<pre caption="Verwenden der Haupt-MySQL-Datenbank">
mysql&gt; <i>USE mysql;</i>
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt;
</pre>

<p>
Lassen Sie uns jetzt nachsehen, welche Tabellen die mysql Datenbank hat.
</p>

<pre caption="mysql Datenbank Tabellenauflistung">
mysql&gt; <i>SHOW TABLES;</i>
+-----------------+
| Tables_in_mysql |
+-----------------+
| columns_priv    |
| db              |
| func            |
| host            |
| tables_priv     |
| user            |
+-----------------+
6 rows in set (0.00 sec)
</pre>

<p>
Die user Tabelle ist die Tabelle, die wir suchen. Diese Tabelle beinhaltet 30
verschieden Felder, was das Lesen etwas erschwert. Um die Dinge zum Lesen zu
vereinfachen, werden wir die dritte Version der <c>SELECT</c> Anweisung
verwenden. Die Felder, die wir suchen, sind Host und User.
</p>

<pre caption="Finden unseres guest Benutzers in der user Tabelle">
mysql&gt; <i>SELECT Host,User FROM user WHERE User = 'guest';</i>
+-----------+-------+
| Host      | User  |
+-----------+-------+
| localhost | guest |
+-----------+-------+
1 row in set (0.00 sec)
</pre>

<p>
Nachdem wir unsere Informationen haben, können wir unseren guest Benutzer
loswerden. Das wird durch den <c>DELETE</c> Befehl erledigt, die Syntax wird
unten gezeigt.
</p>

<pre caption="DELETE Syntax">
DELETE FROM table WHERE field='value';
</pre>

<p>
Sie werden feststellen, dass <c>DELETE</c> der <c>SELECT</c> Anweisung recht
ähnlich ist. In diesem Fall ist das Feld User und der Wert guest. Das wird den
Eintrag, wo der Benutzer guest ist, erfolgreich aus der Benutzertabelle
löschen. Fahren wir fort und erledigen das:
</p>

<pre caption="Löschen des guest Aaccounts">
mysql&gt; <i>DELETE FROM user WHERE User='guest';</i>
Query OK, 1 row affected (0.07 sec)
<comment>(FLUSH PRIVILEGES wird benötigt um die Benutzerrechte zu aktualisieren)
</comment>
mysql&gt; <i>FLUSH PRIVILEGES;</i>
Query OK, 0 rows affected (0.00 sec)
</pre>

<p>
Es sieht so aus, als ob es funktioniert hat. Lassen Sie uns das testen, indem
wir uns ausloggen und versuchen uns als guest Benutzer wieder einzuloggen.
</p>

<pre caption="Versuchen als guest Benutzer einzuloggen">
mysql&gt; <i>quit</i>
Bye
$ <i>mysql -u guest -h localhost -p</i>
Enter password:
ERROR 1045: Access denied for user: 'guest@localhost' (Using password: YES)
</pre>

<p>
Unser Benutzer ist jetzt erfolgreich gelöscht!
</p>

</body>
</section>
<section>
<title>Abschluss</title>
<body>

<p>
Während sich diese Anleitung auf das Einrichten von MySQL über die
Kommandozeile spezialisiert, gibt es einige Alternativen in GUI Form:
</p>

<ul>
  <li>
    <uri link="http://www.phpmyadmin.net/home_page/">phpMyAdmin</uri> -
    populäres PHP-basiertes Administrationstool.
  </li>
  <li>
    <uri
    link="http://sourceforge.net/projects/mysqlnavigator/">mysqlnavigator</uri>
    - QT-Frontend für MySQL.
  </li>
  <li>
    <uri link="http://gmyclient.sourceforge.net/">gmyclient</uri> - Ein
    GNOME-basierter MySQL-Client.
  </li>
  <li><uri link="http://www.knoda.org/">knoda</uri> - Ein KDE-MySQL-Client.</li>
</ul>

<p>
Das beendet die einführende MySQL-Anleitung. Ich hoffe, das gibt Ihnen ein
besseres Verständnis der Grundlagen hinter MySQL und dem Einrichten einer
Datenbank. Bitte mailen Sie mir an <mail>chriswhite@gentoo.org</mail> falls Sie
irgendwelche Kommentare dazu haben.
</p>

</body>
</section>
</chapter>
</guide>
