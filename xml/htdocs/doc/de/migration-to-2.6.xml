<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/migration-to-2.6.xml,v 1.3 2012/04/18 18:30:17 swift Exp $ -->

<!-- English CVS Version: 1.27 -->

<guide lang="de">
<title>Der komplette Gentoo Linux 2.6 Migrationsleitfaden</title>

<author title="Autor">
  <mail link="dsd@gentoo.org">Daniel Drake</mail>
</author>
<author title="Mitarbeiter">
  <mail link="sergey_zlodey@mail.ru">Sergey Galkin</mail>
</author>
<author title="Mitarbeiter">
  <mail link="svyatogor@gentoo.org">Sergey Kuleshov</mail>
</author>
<author title="Bearbeiter">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Bearbeiter">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Übersetzer">
  <mail link="gentoodoc@itsnotmy.name">Sebastian Westermayer</mail>
</author>
<author title="Korrektor">
  <mail link="keytoaster@gentoo.org">Tobias Heinlein</mail>
</author>

<abstract>
Dieses Dokument unterstützt Sie bei der Migration von Linux 2.4 auf Linux 2.6,
devfs auf udev, OSS auf ALSA, und LVM auf LVM2.
</abstract>

<version>0.4</version>
<date>2008-03-05</date>

<chapter>
<title>Einführung</title>
<section>
<title>Was gibt es neues mit Linux 2.6?</title>
<body>

<p>
Das ist keine einfach zu beantwortende Frage. Linux 2.6 ist das Ergebnis einer
über zwei Jahre langen, intensiven Entwicklung und Stabilisierung neuer
Funktionen und ist in der Architektur sehr unterschiedlich von seinem 2.4
Gegenstück. Einige der wichtigsten Änderungen sind unten aufgelistet:
</p>

<ul>
  <li>
    Planer-/Interaktivitätsverbesserungen: Linux fühlt sich sehr glatt auf
    Desktopsystemen an und meistert Volllast viel besser als 2.4
  </li>
  <li>
    Skalierbarkeit: Linux skaliert jetzt auf beiden Seiten viel besser - auf
    kleinen eingebetteten Geräten und auch auf Systemen mit vielen Prozessoren.
  </li>
  <li>
    Leistung: Der Durchsatz von verbreiteten Anwendungen wurde stark
    verbessert
  </li>
  <li>
    Hardwareunterstützung: Linux unterstützt jetzt viel mehr Architekturen und
    Hardwaregeräte "von Haus aus" als jedes andere Betriebssystem.
  </li>
</ul>

<p>
Joseph Pranevich hat ein sehr detailliertes Dokument geschrieben, <uri
link="http://www.kniggit.net/wwol26.html">The Wonderful World Of Linux
2.6</uri>, das Sie vielleicht überfliegen möchten. Wenn Sie an technischeren
Details interessiert sind, können Sie sich auf <uri
link="http://www.codemonkey.org.uk/docs/post-halloween-2.6.txt">The
post-halloween document</uri> beziehen - aber bedenken Sie, dass es
mittlerweile etwas überholt ist.
</p>

</body>
</section>
<section>
<title>Gentoo und 2.6</title>
<body>

<p>
Mit der Version 2005.0 von Gentoo Linux ist der neuste der 2.6 Kernelserie der
Standardkernel. Das Standardprofil des Systems wird
<path>/etc/make.profile</path> entnommen. Ab 2005.0 und höher ist dies ein
Symlink nach <path>/usr/portage/profiles/default-linux/x86/2005.0</path>, wo
verschiedenen wichtigen Einstellungen Sorge getragen wird.
</p>

<p>
Wenn Sie ein 2.4 Profil benutzen, ändern Sie dies bitte auf eines, das einen
2.6 Kernel unterstützt, indem Sie folgendes tun.
</p>

<pre caption="Wechseln Ihres Profils">
# <i>rm -f /etc/make.profile</i>
# <i>ln -snf /usr/portage/profiles/default-linux/x86/2005.1 /etc/make.profile</i>
</pre>

</body>
</section>
<section>
<title>Was ist udev?</title>
<body>

<p>
In der Vergangenheit hat Gentoo die Benutzer angewiesen <e>devfs</e> zur
Verwaltung des <path>/dev</path> Verzeichnisses, welches eine Reihe von
Geräteschnittstellen zur Kommunikation mit der Hardware (durch den Kernel)
beinhaltet, zu benutzen.
</p>

<p>
Obwohl <e>devfs</e> ein gutes Konzept ist, hat es einige interne Probleme und
wurde seit 2.6.13 vom stabilen Hauptbaum komplett entfernt.
</p>

<p>
<e>udev</e> ist der neue Weg Geräteknoten zu verwalten. Es geht Probleme des
vorherigen Gerätemanagers an und versucht zudem einige andere Probleme zu
lösen.
</p>

<p>
Das Vorangegangene mag Ihnen nicht viel sagen, aber haben Sie keine Angst, die
hart arbeitenden Gentoo-Entwickler haben versucht die Migration von devfs sehr
einfach zu machen. Bitte lesen Sie den <uri
link="/doc/de/udev-guide.xml">Gentoo udev Leitfaden</uri> für weitere
Informationen zu diesem Thema.
</p>

</body>
</section>
<section>
<title>Was ist ALSA?</title>
<body>

<p>
Mit Linux 2.4 benutzen Sie wahrscheinlich OSS (Open Sound System) Treiber, um
Ihre Soundkarte zu betreiben. OSS wurde durch einen neueren und besseren Satz
von Soundtreibern ersetzt: ALSA.
</p>

<p>
ALSA, die Advanced Linux Sound Architecture, ist ein neuer Satz von
Soundtreibern mit neuer und verbesserter API, der im Linux 2.6 Kernel vorhanden
ist. Es ist abwärtskompatibel mit OSS-Anwendungen, sofern Sie die richtigen
Kernel-Konfigurationsoptionen ausgewählt haben!
</p>

<note>
Wenn Sie keine Sound/Audio-Hardware haben, können Sie beruhigt alle
ALSA-bezogenen Anweisungen in diesem Dokument überspringen.
</note>

</body>
</section>
<section>
<title>Was ist LVM?</title>
<body>

<p>
<e>Logical Volume Management</e> (LVM) existiert als ein Satz von Werkzeugen,
die es Ihnen erlauben Ihren Festplattenspeicher in einer flexiblen Weise zu
verwalten. Neben anderen Dingen erlaubt es mächtige Kontrolle über Partitionen
(z.B. Größe verändern ohne Neustart) und macht Arbeiten wie Geräteänderungen
relativ einfach. LVM kann sich als eine Alternative zu standardmäßigen
partitionsbasierten Festplattenverwaltungen verhalten.
</p>

<p>
LVM-Unterstützung wurde ursprünglich in Linux 2.4 implementiert. Linux 2.6
unterstützt eine neue Version von LVM, genannt <e>LVM2</e>. Der
Migrationsprozess verlangt von Ihnen neue Versionen der Werkzeuge auf
Benutzerebene zu installieren (später in diesem Dokument beschrieben), aber
lässt Ihre Daten intakt!
</p>

<p>
<e>Wenn Sie momentan LVM nicht zum Datenspeichermanagement benutzen, dann
betrifft Sie die LVM2-Migration nicht.</e> Wenn dies der Fall ist, können Sie
beruhigt alle Teile dieses Dokuments, die sich auf LVM/LVM2 beziehen,
ignorieren. Die Aktualisierung auf Linux 2.6 verlangt von Ihnen <e>nicht</e>,
dass Sie Ihre Daten auf einer LVM-Partition speichern - Sie können Ihre Daten
auf dem Standard-Partitionsformat behalten, auf dem sie immer waren.
</p>

<p>
Wenn Sie kein LVM-Anwender sind, aber denken, dass sich LVM2 für Sie nützlich
anhört, können Sie Ihre Festplatten zu einem späteren Zeitpunkt auf dieses
Format konvertieren, indem Sie dem <uri
link="/doc/de/lvm2.xml">Gentoo LVM2 Installationsleitfaden</uri> folgen. Fürs
Erste sollten wir uns darauf konzentrieren eine reibungslose 2.6 Migration auf
den Weg zu bringen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Vorbereitung</title>
<section>
<title>Bringen Sie Ihr System auf den neusten Stand</title>
<body>

<p>
Einige der Änderungen die Linux 2.6 mitbringt, benötigen einige Änderungen an
den Basis-Systemanwendungen. Bevor Sie weitermachen, sollen Sie sicherstellen,
dass Ihr System relativ auf dem neuesten Stand ist und, um absolut sicher zu
sein, sollten Sie alle world und system Pakete aktualisieren, wenn
Aktualisierungen vorhanden sind.
</p>

<p>
Besonders sollten Sie sicherstellen, dass Sie die neuste stabile Version der
folgenden Pakete haben:
</p>

<ul>
  <li><c>sys-apps/baselayout</c></li>
  <li><c>sys-apps/util-linux</c></li>
  <li>
    <c>sys-kernel/genkernel</c> (nur wenn Sie genkernel statt der manuellen
    Konfiguration benutzen wollen)
  </li>
</ul>

<pre caption="Alle world Pakete aktualisieren">
# <i>emerge --sync</i>
# <i>emerge -ua world</i>
</pre>

</body>
</section>
<section>
<title>modutils vs module-init-tools</title>
<body>

<p>
<c>sys-apps/modutils</c> ist das Paket, das alle Werkzeuge wie
<c>modprobe</c>, <c>rmmod</c> und <c>insmod</c> für Linux 2.4 bereitstellt.
</p>

<p>
Linux 2.6 führt ein neues Modulformat ein und benötigt daher neue Werkzeuge um
Module zu handhaben. Diese sind im Paket <c>sys-apps/module-init-tools</c>
zusammengefasst.
</p>

<p>
Sie sollten jetzt modutils entfernen und module-init-tools installieren:
</p>

<pre caption="Von modutils zu module-init-tools wechseln">
# <i>emerge --unmerge sys-apps/modutils</i>
# <i>emerge module-init-tools</i>
</pre>

<note>
Keine Sorge - auch wenn Sie gerade modutils unmerged haben, module-init-tools
stellt Abwärtskompatiblität für Linux 2.4 zur Verfügung, also sind Sie
immernoch in der Lage Linux 2.4 zu booten und Module für diesen Kernel zu
handhaben.
</note>

<note>
Aus den oben genannten Gründen könnte module-init-tools bereits auf Ihrem
System installiert sein und mit Ihrem vorhandenen Linux 2.4 Kernel arbeiten. In
diesem Fall müssen Sie sich keine Gedanken um diese Phase zu machen - Ihr
System ist schon bereit mit Linux 2.6 Modulen umzugehen.
</note>

</body>
</section>
<section>
<title>udev installieren</title>
<body>

<p>
Hier ist keine Konfiguration einbezogen. Benutzen Sie einfach <c>emerge</c> um
udev zu installieren:
</p>

<pre caption="udev installieren">
# <i>emerge -a udev</i>
</pre>

<p>
Sie sollten jetzt den <uri
link="/doc/de/udev-guide.xml">Gentoo udev Leitfaden</uri> lesen, um eine bessere
Vorstellung der Unterschiede zwischen udev und devfs zu bekommen.
</p>

</body>
</section>
<section>
<title>Auf wesentliche Geräteknoten überprüfen</title>
<body>

<p>
Wenn das System hochfährt, benötigt das System einige wesentliche Geräteknoten.
Da udev nicht in den Kernel integriert ist, wird es nicht sofort aktiviert. Um
dieses zu umgehen, müssen Sie sicherstellen, dass sich einige wesentliche
Geräteknoten auf Ihrem System befinden.
</p>

<p>
Unsere Installations-Stagedateien hätten die benötigten Geräte während der
ersten Installation angelegt. Allerdings haben einige Benutzer berichtet, dass
dies nicht der Fall ist. Wir nutzen diese Gelegenheit um zu prüfen ob die
Gerätedateien existieren und sie anlegen, falls sie es nicht tun.
</p>

<p>
Da Ihr vorhandener Gerätemanager nach <path>/dev</path> gemountet wird, können
wir nicht direkt auf ihn zugreifen. Also werden wir Ihre Root-Partition an
eine andere Stelle bind-mounten und von dort auf das <path>/dev</path>
Verzeichnis zugreifen.
</p>

<pre caption="Bind-mounten Ihrer Root-Partition und auflistung der statischen
Geräte">
# <i>mkdir -p /mnt/temp</i>
# <i>mount -o bind / /mnt/temp</i>
# <i>cd /mnt/temp/dev</i>
# <i>ls -l console null</i>
</pre>

<p>
Wenn der vorherige <e>ls</e> Befehl ausgibt, dass entweder <c>console</c> oder
<c>null</c> nicht existieren, dann müssen Sie sie selbst, wie unten gezeigt,
anlegen.
</p>

<pre caption="Anlegen der fehlenden console und null Knoten">
# <i>mknod -m 660 console c 5 1</i>
# <i>mknod -m 660 null c 1 3</i>
</pre>

<p>
Sie sollten jetzt Ihre bind-gemountete Root-Partition unmounten, auch wenn Sie
die Geräte nicht anlegen mussten:
</p>

<pre caption="Unmounten des bind-gemounteten Root">
# <i>cd</i>
# <i>umount /mnt/temp</i>
# <i>rmdir /mnt/temp</i>
</pre>

</body>
</section>
<section>
<title>ALSA-Hilfsmittel installieren</title>
<body>

<p>
ALSA verlangt, dass Sie einige Pakete installiert haben, so dass Anwendungen
die ALSA-API benutzen können. Diese Pakete erlauben es Ihnen ebenso den Mixer
und die Lautstärke zu kontrollieren. Installieren Sie die benötigten
Hilfsmittel wie folgt:
</p>

<pre caption="ALSA-Hilfsmittel und Bibliotheken installieren">
# <i>emerge -a alsa-lib alsa-utils alsa-tools alsa-headers alsa-oss</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Installation der Linux 2.6 Quellen</title>

<section>
<title>Einen Kernel auswählen und installieren</title>
<body>

<p>
Die erste Sache, die Sie tun müssen ist die Installation der Quellen eines 2.6
Kernels Ihrer Wahl. Die zwei 2.6 Kernel mit Gentoo-Unterstützung sind momentan
<e>gentoo-sources</e> (für Desktops) und <e>hardened-sources</e> (für Server).
Es sind andere verfügbar, schauen Sie sich den <uri
link="/doc/de/gentoo-kernel.xml">Gentoo Linux Kernel Leitfaden</uri> für
weitere Auswahlmöglichkeiten an.
</p>

<p>
In diesem Leitfaden werden wir die <c>gentoo-sources</c> als ein Beispiel
benutzen. Installieren Sie Ihren ausgewählten Satz an Kernelquellen mit dem
<c>emerge</c> Befehl:
</p>

<pre caption="gentoo-sources installieren">
# <i>emerge -a gentoo-sources</i>
These are the packages that I would merge, in order:
Calculating dependencies ...done!
[ebuild  NS   ] sys-kernel/gentoo-sources-2.6.10-r4

Do you want me to merge these packages? [Yes/No] <i>y</i>
</pre>

<p>
Wenn Sie den obigen <c>emerge</c> Befehl ausführen und Sie feststellen, dass es
Ihnen eine 2.4 Version der gentoo-sources (z.B. <c>gentoo-sources-2.4.26</c>)
installieren möchte, dann heisst das, dass das von Ihnen benutzte Profil nicht
für Linux 2.6 Benutzer entworfen wurde. Bitte folgen Sie dem <uri
link="/doc/de/gentoo-upgrading.xml">Gentoo Upgrade Leitfaden</uri>, um auf ein
2.6-basiertes Profil zu wechseln und versuchen Sie dann erneut eine 2.6
Kernelquelle zu installieren.
</p>

</body>
</section>
<section>
<title>Aktualisieren des symbolischen Links /usr/src/linux</title>
<body>

<p>
Verschiedene Komponenten der Gentoo-Hilfsmittel sind darauf angewiesen, dass
<path>/usr/src/linux</path> ein symbolischer Link zu den Kernelquellen ist, den
Sie benutzen (oder gegen den Sie kompilieren möchten).
</p>

<p>
Wir werden jetzt unseren <path>/usr/src/linux</path> Link aktualisieren, um ihn
auf die gerade installieren Kernelquellen zeigen zu lassen. Weiter mit unserem
Beispiel:
</p>

<pre caption="Aktualisieren des /usr/src/linux Softlinks">
# <i>cd /usr/src</i>
# <i>ln -sfn linux-2.6.10-gentoo-r4 linux</i>
</pre>

</body>
</section>
</chapter>

<chapter id="pitfalls">
<title>Bekannte Fallen bei der Linux 2.6 Migration</title>
<section>
<body>

<p>
Bevor wir bei der Kernelkonfiguration hängen bleiben, werde ich versuchen
detailliert auf die üblichsten Fehler einzugehen, die Leute bei der Migration
auf Linux 2.6 machen, da einige dieser Punkte die Konfiguration des neuen
Kernels beeinflussen werden.
</p>

<note>
Nicht alle dieser Punkte sind zu diesem Zeitpunkt relevant, aber ich möchte sie
hier alle an einer Stelle aufführen, damit Sie sich später bequem darauf
beziehen können.
</note>

</body>
</section>
<section>
<title>Benutzen Sie nicht "make oldconfig" mit einer 2.4 .config</title>
<body>

<note>
Wenn Sie nicht verstehen was das bedeutet, machen Sie sich keine Sorgen, Sie
werden diesen Fehler nicht machen, wenn Sie dem Rest dieses Leitfadens korrekt
folgen.
</note>

<p>
Ihnen werden viele, viele Fragen gestellt, da es eine große Menge an Änderungen
gab. Viele Leute die ein <c>make oldconfig</c> von einer 2.4 Konfiguration aus
versuchen, enden mit einem nicht funktionierendem Kernel (z.B. keine Ausgabe
auf den Bildschirm, keine Eingabemöglichkeit per Tastatur). Bitte ersparen Sie
sich selbst den Ärger und benutzen die herkömmliche <c>menuconfig</c>
Konfigurationsmethode nur dieses eine mal.
</p>

</body>
</section>
<section>
<title>Benutzen Sie nicht ide-scsi zum Schreiben von CDs/DVDs</title>
<body>

<p>
Mit Linux 2.4 war der einzige Weg gute Ergebnisse beim Schreiben von CDs/DVDs
zu erreichen die (ziemlich hässliche) <c>ide-scsi</c> Emulation zu aktivieren.
Glücklicherweise wurde der IDE-Layer in Linux 2.6 erweitert, um CD/DVD-Brenner
deutlich besser zu unterstützen.
</p>

<p>
Sie müssen keine zusätzlichen Optionen aktivieren, um CD-Brennen zu
unterstützen. Stelle Sie nur sicher <c>ide-scsi</c> <e>nicht</e> auszuwählen,
wie Sie es bisher gewohnt waren.
</p>

</body>
</section>
<section>
<title>PC-Speaker ist jetzt eine konfigurierbare Option</title>
<body>

<p>
Sie werden Ihre gewohnten Konsolen-Piepser nicht erhalten (oder jede andere
Rückmeldung der PC-Speaker überhaupt), sofern Sie nicht explizit die PC-Speaker
Option aktivieren (<c>CONFIG_INPUT_PCSPKR</c>):
</p>

<pre caption="Standort der PC-Speaker-Option">
Device Drivers  ---&gt;
 Input device support  ---&gt;
  [*] Misc
   &lt;*&gt;   PC Speaker support
</pre>

<note>
Mit "PC-Speaker" beziehe ich mich auf die analogen Lautsprecher die einmal
piepen wenn Ihr System hochfährt, ich beziehe mich nicht auf die normale
Sound-Hardware die zum Abspielen von Musik usw. benutzt wird.
</note>

</body>
</section>
<section>
<title>Neue USB-Speichergerätetreiber sind manchmal problematisch</title>
<body>

<p>
Kürzlich wurde ein neuer USB-Speichergerätetreiber zum normalen Kernel
hinzugefügt. Zum Zeitpunkt des Schreibens ist dieser Treiber ("ub") noch in
einer frühen Phase und manche Anwender finden ihn unzuverlässig. Wenn Sie
Probleme haben auf Ihre USB-Festplatte, Ihren USB-Flashspeicher, Ihr
USB-Kartenlesegerät oder Ihre USB-Digitalkamera zuzugreifen, dann sollten Sie
versuchen zum älteren SCSI-Stil-Treiber zurückzukehren:
</p>

<pre caption="ub deaktivieren">
Device Drivers  ---&gt;
 Block devices  ---&gt;
  &lt; &gt; Low Performance USB Block driver
</pre>

<note>
Der ältere SCSI-Stil-Treiber (USB Mass Storage support) wird standardmäßig
aktiviert. Er kann unter "Device Drivers --&gt; USB support" gefunden werden,
kommt aber normalerweise nicht zum Tragen, während ub auch vorhanden ist.
</note>

</body>
</section>
<section>
<title>usbdevfs wird zu usbfs umgenannt</title>
<body>

<p>
Wenn Sie Ihre <path>/etc/fstab</path> Datei editiert haben, um den Weg
anzupassen wie das Dateisystem der USB-Geräte gemountet wird, dann müssen sie
vielleicht den Dateisystemtyp von <e>usbdevfs</e> nach <e>usbfs</e> ändern.
</p>

<note>
Aktuelle 2.4 Kernel erlauben es Ihnen "usbfs" genauso wie auch "usbdevfs" zu
verwenden, so brechen Sie keine Abwärtskompatiblität, wenn Sie dies machen.
</note>

</body>
</section>
<section>
<title>Renicen Sie X nicht</title>
<body>

<p>
Wenn Sie ein 2.4 Desktopbenutzer sind, könnten Sie Ihr System gehackt haben, um
X mit einer höheren Priorität laufen zu lassen, da dies anscheinend in manchen
Fällen eine bessere Desktopleistung geboten hat.
</p>

<p>
In 2.6 gab es viele Veränderungen am Scheduler, die dieses Verhalten verändern.
Wenn Sie weiterhin X mit einer höheren Prioritöt laufen lassen, wird es sich
genauso verhalten, wie es sich verhalten soll (den <e>display server</e> mit
einer sehr hohen Priorität laufen lassen) und Sie werden Konsequenzen wie
Stottern des Sounds oder langsame Ladezeiten bei Anwendungen bemerken, weil
Ihre CPU zu lange braucht, um X zu bedienen und zwar ausschließlich X.
</p>

<p>
Mit Linux 2.6 brauchen Sie nicht länger Ihre Desktop-Anwendungen zu renicen, um
gute Interaktivität zu erreichen. Bitte entfernen Sie Ihre "niceness" Hacks!
</p>

</body>
</section>
<section>
<title>X11-Konfigurationsdatei benutzt jetzt /dev/input/mice für PS/2 und
USB-Mäuse</title>
<body>

<p>
Eine der Änderungen, die eine Standard-udev-Konfiguration einführt, ist eine
andere Konfiguration der Maus-Geräteknoten. Früher hätten Sie Knoten wie
<path>/dev/psaux</path> und <path>/dev/mouse</path> gehabt. Jetzt werden Sie
Knoten wie <path>/dev/input/mouse0</path>, <path>/dev/input/mouse1</path>,
und einen Sammelknoten <path>/dev/input/mice</path>, der die Bewegungen aller
Mäuse kombiniert, haben.
</p>

<p>
Da sich alte X-Konfigurationen typischerweise auf <path>/dev/mouse</path> oder
<path>/dev/psaux</path> beziehen, bekommen Sie Fehler, wie den unten gezeigten,
wenn Sie versuchen X11 zu starten:
</p>

<pre caption="Üblicher Fehler wenn man versucht X zum ersten Mal auf einem udev
System zu starten">
(EE) xf86OpenSerial: Cannot open device /dev/mouse
  No such file or directory.
(EE) Mouse0: cannot open input device
(EE) PreInit failed for input device "Mouse0"
No core pointer
</pre>

<p>
Um dies zu berichtigen, öffnen Sie Ihre X11 Konfiguration in einem Texteditor
und aktualisieren Sie den Maus <e>InputDevice</e> Abschnitt um das Gerät
<path>/dev/input/mice</path> zu benutzen. Ein Beispiel wird unten gezeigt:
</p>

<pre caption="Öffnen Ihrer X11 Konfigurationsdatei">
# <i>nano -w /etc/X11/xorg.conf</i>
</pre>

<note>
Wenn Sie immernoch XFree86 benutzen, ist Ihre Konfigurationsdatei
<path>/etc/X11/XF86Config</path>
</note>

<pre caption="Beispiel Maus InputDevice Abschnitt">
Section "InputDevice"
  Identifier  "Mouse0"
  Driver      "mouse"
  Option      "Protocol" "auto"
  Option      "Device" "/dev/input/mice"
EndSection
</pre>

<note>
Wenn Sie eine serielle Maus benutzen, lautet der neue Gerätepfad
<path>/dev/tts/0</path> statt <path>/dev/ttyS0</path>.
</note>

</body>
</section>
<section>
<title>Neuer Serial-ATA (SATA) Treiber benennt die Geräte unterschiedlich</title>
<body>

<p>
Wenn Sie die originalen Serial ATA Treiber unter Linux 2.4 benutzt haben,
werden Sie wahrscheinlich bemerkt haben, dass Ihre SATA-Geräte Namen wie
<path>/dev/hde</path> haben.
</p>

<p>
Linux 2.6 führt einen neuen SATA Treiber (libata) ein, der auf dem
SCSI-Subsystem basiert. Da diese Treiber auf SCSI basieren, tauchen Ihre SATA
Festplatten jetzt als SCSI-Geräte auf. Ihre erste SATA Festplatte wird
<path>/dev/sda</path> heißen. Sie werden Ihre Datei <path>/etc/fstab</path>
aktualisieren müssen um dies wiederzugeben und Sie müssen es bedenken, wenn Sie
später den root/real_root Kernel-Bootparameter auswählen.
</p>

<note>
libata wurde in aktuelle Linux 2.4 Versionen rückportiert, also mag Ihnen die
neue Namensgebung der Geräte bereits geläufig sein.
</note>

</body>
</section>
<section>
<title>bootsplash wird nicht mehr gewartet</title>
<body>

<p>
Wenn Sie den Kernel <c>gentoo-sources-2.4</c> benutzt haben, haben Sie
vielleicht die <e>bootsplash</e> Funktionalität genutzt um sich mit einer
farbigen Framebuffer-Konsole auszustatten.
</p>

<p>
Der Entwickler von bootsplash hat anscheinend, auf Grund einiger
Designprobleme, das Interesse an seinem Projekt verloren. Allerdings entwickelt
der Gentoo-Entwickler <e>MichaÅ Januszewski</e> einen Nachfolger
<c>gensplash</c>, der in dem gentoo-sources-2.6 Kernel enthalten ist. Sie
können MichaÅs Dokument <uri
link="http://dev.gentoo.org/~spock/projects/gensplash/archive/gensplash-in-5-easy-steps.txt">
Gensplash in 5 easy steps</uri> befolgen, um sich selbst damit vertraut
zu machen, wie gensplash funktioniert.
</p>

</body>
</section>
<section>
<title>I2C-Treiber sind jetzt im Kernel enthalten</title>
<body>

<p>
Wenn Sie <c>lm-sensors</c> benutzen, um die Systemtemperaturen und
Spannungslevel zu überwachen, mussten Sie vorher das Paket <c>i2c</c>
installieren, um Hardwareunterstützung zu erhalten.
</p>

<p>
Die I2C-Hardwaretreiber sind jetzt im Linux 2.6 Kernel enthalten, ein externes
i2c-Paket wird nicht benötigt. Denken Sie daran, die Unterstützung für Ihre
speziellen I2C-Geräte in die Kernelkonfiguration zu kompilieren. Sie sind dann
in der Lage die <c>lm-sensors</c> wie gewohnt zu benutzen.
</p>

</body>
</section>


</chapter>

<chapter id="conf">
<title>Konfigurieren, Bauen und Installieren des Kernels</title>
<section>
<body>

<p>
Mit Linux 2.4 hatten Sie zwei Optionen um den Bau Ihres neuen Kernels zu
verwalten.
</p>

<ol>
  <li>
    Die Standardmethode ist Ihren Kernel manuell zu konfigurieren. Das mag
    abschreckend erscheinen, aber es ist der bevorzugte Weg solange Sie Ihr
    System kennen. Wenn Sie Ihren neuen Kernel manuell konfigurieren wollen,
    fahren Sie bitte mit dem <uri link="#manual">nächsten Kapitel</uri> fort.
  </li>
  <li>
    Die Alternative ist unser Hilfsmittel <c>genkernel</c> zu benutzen, um einen
    Kernel für Sie zu konfigurieren, kompilieren und installieren. Wenn Sie
    <c>genkernel</c> benutzen möchten, überspringen Sie das nächste Kapitel und
    machen mit <uri link="#genkernel">genkerneli benutzen</uri> weiter.
  </li>
</ol>

</body>
</section>
</chapter>

<chapter id="manual">
<title>Standard: manuelle Konfiguration</title>
<section>
<title>Konfiguration des Kernels</title>
<body>

<p>
Wir werden jetzt mit der Kernelkonfiguration weitermachen. Öffnen Sie
menuconfig wie gewohnt:
</p>

<pre caption="menuconfig aufrufen">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Vielleicht sind Sie schon mit der Benutzung von menuconfig von der
Konfiguration des 2.4 Kernels vertraut. Zum Glück hat sich die Oberfläche kaum
verändert, aber Sie werden eine viel bessere Organisation der Kerneloptionen
bemerken, plus <e>vieler</e> neuer Optionen, die in 2.4 noch nicht vorhanden
waren.
</p>

<p>
Stellen Sie sicher, dass Sie folgende wichtige Kerneloptionen aktivieren:
</p>

<pre caption="Benötigte Kerneloptionen">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(das Folgende wird für udev benötigt):</comment>
General setup  ---&gt;
 [*] Support for hot-pluggable devices

<comment>(das Folgende wird für ALSA benötigt):</comment>
Device Drivers  ---&gt;
 Sound  ---&gt;
  &lt;*&gt; Sound card support
  Advanced Linux Sound Architecture  ---&gt;
   &lt;M&gt; Advanced Linux Sound Architecture
   &lt;M&gt; Sequencer support
   &lt;M&gt; OSS Mixer API
   [*] OSS Sequencer API
<comment>   (und vergessen Sie nicht Ihre Soundkarte aus den Untermenüs
auszuwählen!!)</comment>

<comment>(das Folgende wird benötigt, wenn Sie LVM zur Festplattenverwaltung
benutzen):</comment>
Device Drivers  ---&gt;
 Multi-device support (RAID and LVM)  ---&gt;
  [*] Multiple devices driver support (RAID and LVM)
   &lt;*&gt;   Device mapper support
</pre>

<warn>
Vorher hatten Sie vielleicht die Unterstützung für das <path>/dev</path>
Dateisystem (jetzt als OBSOLETE markiert) integriert. Aktivieren Sie nicht die
Unterstützung für devfs. Wir haben udev installiert, wir werden es ab jetzt
anstelle von devfs benutzen.
</warn>

<p>
Denken Sie auch daran Unterstützung für die von Ihnen verwendeten Dateisysteme
zu aktivieren und für die Hardware, die in Ihrem System vorhanden ist. Stellen
Sie sicher, die Unterstützung für den IDE-Kontroller auf Ihrer Hauptplatine zu
aktivieren, wenn Sie von dem schnellen Festplattenzugriff per DMA zu
profitieren. Beziehen Sie sich auf den Abschnitt <uri
link="/doc/de/handbook/handbook-x86.xml?part=1&amp;chap=7">Konfiguraton des
Kernels</uri> des <uri link="/doc/de/handbook/index.xml">Gentoo Handbuchs</uri>
für weiteren Rat.
</p>

</body>
</section>
<section>
<title>Bauen des Kernels</title>
<body>

<p>
Jetzt, da wir den Kernel konfiguriert haben, können wir den
Kompilierungsprozess starten:
</p>

<pre caption="Kompilierung der Kernelquellen">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<note>
Vielleicht erinnern Sie sich daran <c>make dep</c> mit Linux 2.4 Quellen
gestartet zu haben. Das ist nicht mehr länger nötig.
</note>

<p>
Warten Sie bis die Kernelkompilierung fertig ist (und beachten Sie die viel
lesbarere Ausgabe während der Kompilierung).
</p>

</body>
</section>
<section>
<title>Installation des Kernels</title>
<body>

<p>
Der nächste Schritt ist Ihre <path>/boot</path> Partition zu mounten und das
Kernelabbild hinüberzukopieren. Sie müssen die Konfiguration Ihres Bootloaders
manuell vornehmen.
</p>

<pre caption="Installation des Kernels">
# <i>mount /boot</i>
# <i>cp arch/i386/boot/bzImage /boot/bzImage-2.6.10-gentoo-r4</i>
</pre>

<p>
Beachten Sie, dass die Anweisungen oben nur Beispiele sind, Sie sollten Ihrem
üblichen Ablauf eines Kernelupdates folgen, indem Sie den Anweisungen im <uri
link="/doc/de/handbook/index.xml">Gentoo Handbuch</uri> folgen (schauen Sie
sich den Abschnitt <uri
link="/doc/de/handbook/handbook-x86.xml?part=1&amp;chap=7">Konfiguration des
Kernels</uri> an).
</p>

<p>
Wenn Sie Ihre Bootloader-Konfiguration aktualisieren, entfernen Sie nicht den
alten Eintrag, der auf Ihren 2.4 Kernel verweist. So können Sie einfach
zwischen beiden wechseln, falls etwas nicht funktioniert.
</p>

<p>
Machen Sie jetzt mit dem Abschnitt <uri
link="#modules">Modul Konfiguration</uri> weiter.
</p>

</body>
</section>
</chapter>

<chapter id="genkernel">
<title>Alternative: genkernel benutzen</title>
<section>
<body>

<p>
Wenn Sie es vorziehen genkernel statt der manuellen Konfiguration Ihres Kernels
zu benutzen, wird es Sie freuen zu hören, dass die Produktion eines 2.6 Kernels
mit genkernel sehr ähnlich zu dem Ablauf ist, den Sie durchgeführt haben, um
Ihren vorherigen 2.4 Kernel zu produzieren.
</p>

<p>
Sie sollten genkernel wie unten gezeigt aufrufen:
</p>

<pre caption="genkernel mit einigen üblichen Argumenten aufrufen">
# <i>genkernel --udev --menuconfig --bootloader=grub all</i>
</pre>

<p>
In dem obigen Beispiel machen wir von den genkernel Eigenschaften Gebrauch, um
menuconfig zu öffnen, damit es Ihnen möglich ist, die Kernelkonfiguration
anzupassen (wenn Sie es wünschen) und um die grub Bootloaderkonfiguration nach
der Kompilierung zu aktualisieren.
</p>

<p>
Sie sollten die genkernel-Argumente auswählen die Ihnen passen, aber vergessen
Sie nicht das Argument <c>--udev</c> einzubeziehen! Beziehen Sie sich auf den
<uri link="/doc/de/genkernel.xml">Gentoo Linux Genkernel Leitfaden</uri> und
das Kapitel <uri
link="/doc/de/handbook/handbook-x86.xml?part=1&amp;chap=7">Konfiguration des
Kernels</uri> im <uri link="/doc/de/handbook/index.xml">Gentoo Handbuch</uri>
für weitere Informationen.
</p>

<p>
Wenn Sie entscheiden Ihre Bootloaderkonfiguration selbst zu aktualisieren, dann
müssen Sie daran denken den Kernelparameter <c>udev</c> hinzuzufügen. Ein
Abschnitt einer <e>grub</e> Beispielkonfiguration wird unten gezeigt, aber
denken Sie daran den Parameter <e>real_root</e> für Ihr System anzupassen.
</p>

<pre caption="GRUB Beispielkonfiguration für genkernel + udev">
title Gentoo Linux (2.6 kernel)
root (hd0,0)
kernel /kernel-2.6.10-gentoo-r4 <i>udev</i> root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3
initrd /initrd-2.6.10-gentoo-r4
</pre>

</body>
</section>
</chapter>

<chapter id="modules">
<title>Modulkonfiguration</title>

<section>
<title>Installation externer Module</title>
<body>

<p>
Viele Benutzer werden zusätzlich auf Kernelmodule angewiesen sein, die
außerhalb des Kernelbaums gebaut wurden. Übliche Beispiele sind die
binären ATI und Nvidia Grafiktreiber. Sie müssen diese Module jetzt
installieren, sie werden gegen die 2.6 Quellen, zu finden unter
<path>/usr/src/linux</path>, gebaut. Das ist der normale Fall von
<c>emerge packagename</c> für alle externen Module die Sie unter 2.4 benutzen.
</p>

<p>
Beziehen Sie sich wieder auf das Kapitel <uri
link="/doc/de/handbook/handbook-x86.xml?part=1&amp;chap=7">Konfiguration des
Kernels</uri> im <uri link="/doc/de/handbook/index.xml">Gentoo Handbuch</uri>
für weitere Informationen.
</p>

</body>
</section>
<section>
<title>Module automatisch laden</title>
<body>

<p>
Sie könnten sich entschieden haben einige Kernelkomponenten als Module zu
kompilieren (im Gegensatz zum Kompilieren direkt in den Kernel) und möchten
diese beim Starten automatisch geladen haben, wie Sie es auch in 2.4 getan
haben. Außerdem, wenn Sie irgendwelche externen Module aus dem Portagebaum
installiert haben (wie oben beschrieben), dann möchten Sie diese wahrscheinlich
auch automatisch geladen haben.
</p>

<p>
Sie können dies genauso erreichen, wie Sie es auch mit 2.4 getan haben. Öffnen
Sie einfach die Datei <path>/etc/modules.autoload.d/kernel-2.6</path> in einem
Texteditor und listen die Namen der Module, die Sie automatisch geladen haben
wollen, auf.
</p>

<pre caption="Öffnen der Liste automatisch zu ladender Module mit nano">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="Beispielliste um die Module 3c59x und nvidia automatisch laden zu lassen">
# /etc/modules.autoload.d/kernel-2.6:  kernel modules to load when system boots.
#
# Note that this file is for 2.6 kernels.
#
# Add the names of modules that you'd like to load when the system
# starts into this file, one per line. Comments begin with # and
# are ignored. Read man modules.autoload for additional details.

3c59x
nvidia
</pre>

</body>
</section>
</chapter>

<chapter>
<title>LVM zu LVM2 Migration</title>
<section>
<title>Aktualisierung auf LVM2 Werkzeuge</title>
<body>

<note>
Wenn Sie nicht LVM benutzen, um Ihre Festplattenspeicher zu verwalten, dann
können Sie dieses Kapitel beruhigt überspringen und mit dem nächsten
weitermachen.
</note>

<p>
Glücklicherweise ist die Aktualisierung der LVM1-Benutzerwerkzeuge auf die LVM2
Version sehr einfach:
</p>

<pre caption="Aktualisierung der Benutzerwerkzeuge von LVM1 auf LVM2">
# <i>emerge --unmerge lvm-user</i>
# <i>emerge lvm2</i>
</pre>

<note>
Sie müssen <c>lvm-user</c> re-emergen, falls Sie vorhaben, wieder einen 2.4
Kernel zu booten, da <c>lvm2</c> selbst nicht ausreichend für 2.4 Kernel ist.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Linux 2.6 booten</title>
<section>
<body>

<p>
Jetzt ist es Zeit Linux 2.6 zu booten. Schließen Sie alle Anwendungen und
starten Sie neu:
</p>

<pre caption="Neustarten">
# <i>umount /boot</i>
# <i>reboot</i>
</pre>

<p>
Wenn Sie neustarten und Sie diesem Dokument bis jetzt gefolgt sind, dann haben
Sie die Wahl entweder Linux 2.4 oder Linux 2.6 von Ihrem Bootloader laden zu
lassen. Wählen Sie Linux 2.6.
</p>

<p>
Sobald das System gestartet ist, prüfen Sie ob die Dinge funktionieren. Wenn
Sie einen Fehler bei der Kernelkonfiguration gemacht haben, keine Sorge, Sie
können zurück zum Abschnitt <uri
link="#conf">Konfigurieren, Bauen und Installieren des Kernels</uri> springen,
Ihre Änderung machen, neu kompilieren und das neue Kernelabbild installieren,
neustarten und es nochmals versuchen!
</p>

</body>
</section>
<section>
<title>ALSA konfigurieren und Stummschaltung deaktivieren</title>
<body>

<p>
Wir vervollständigen jetzt die ALSA-Konfiguration und deaktivieren die
Stummschaltung der Audiokanäle. Das ALSA-Paket bietet ein nützliches
Hilfsmittel, um diesen Prozess relativ einfach zu machen:
</p>

<pre caption="Aufruf des automatischen ALSA-Konfigurationswerkzeugs">
# <i>alsaconf</i>
</pre>

<p>
Der Prozess ist einfach: Erlauben Sie es die Datei <e>/etc/modules.d/alsa</e>
automatisch aktualisieren zu lassen und dann erlauben Sie es ALSA neu lasen zu
lassen. alsoconf wird sich dann beenden, allerdings müssen Sie es mehrmals
aufrufen, wenn Sie mehrere Soundgeräte in Ihrem System haben.
</p>

<p>
Sie sollten jetzt <c>alsasound</c> zu Ihrem boot Runlevel hinzufügen, damit die
Lautstärken beim Herunterfahren gespeichert und beim Start wiederhergestellt
werden:
</p>

<pre caption="alsasound zum Runlevel boot hinzufügen">
# <i>rc-update add alsasound boot</i>
</pre>

<note>
Das Hilfsmittel <c>alsaconf</c> wählt anfangs Lautstärkelevel für Ihre
Soundgeräte. Wenn diese unpassend sind, können Sie diese jederzeit mit dem
Hilfsmittel <c>alsamixer</c> anpassen.
</note>

</body>
</section>
<section>
<title>Irgendwelche unmittelbaren Probleme?</title>
<body>

<p>
An diesem Punkt sollten Sie sich zurück auf den Abschnitt <uri
link="#pitfalls">Bekannte Fallen bei der Linux 2.6 Migration</uri> beziehen,
der Ihnen bei allen Problemen helfen sollte, auf die Sie unmittelbar treffen.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Headerdateien und NPTL</title>
<section>
<body>

<p>
Jetzt haben Sie Linux 2.6 laufen und haben hoffentlich alle Probleme
ausgebügelt. Sie sollten jetzt Ihre Linuxkernel-Headerdateien und glibc
remergen, damit die Benutzerapplikationen von den neuen Linux 2.6 Merkmalen
Vorteil ziehen können.
</p>

<pre caption="Aktualisierung der Linuxheader">
# <i>emerge -u linux-headers</i>
</pre>

<p>
Nach der Aktualisierung Ihres Headerpakets, sollten Sie generell glibc
remergen. Es gibt ein neues Merkmal, dass Sie vielleicht interessiert - NPTL.
NPTL ist ein neues, unter Linux 2.6 vorhandenes, Threadmodell, dass viel
schnellere Erstellungs- und Zerstörungszeiten von Threads unterstützt. Auf
vielen Systemen macht das nicht viel Unterschied, aber vielleicht möchten Sie es
während des Migrationsprozesses aktivieren! Um NPTL zu aktivieren, bearbeiten
Sie <path>/etc/make.conf</path> und fügen <e>nptl</e> zu Ihrer USE-Variable
hinzu.
</p>

<warn>
Wenn Sie sich entschließen das Flag "nptlonly" ebenfalls zu aktivieren, seien
Sie sich im Klaren, dass Sie nicht mehr in der Lage sein werden einen 2.4
Kernel zu booten.
</warn>

<p>
Remergen Sie jetzt glibc (Sie sollten das auch tun, wenn Sie sich nicht
entschieden haben NPTL zu aktivieren).
</p>

<pre caption="glibc gegen die neuen Kernelheader neu installieren">
# <i>emerge -a glibc</i>
</pre>

<p>
Wenn Sie NPTL aktiviert haben, werden vorhandene Programme es nicht benutzen,
bevor Sie nicht neu kompiliert wurden. Trotzdem werden alle Programme, die von
nun an kompiliert werden, <e>werden</e> NPTL benutzen. Sie sollten jetzt alle
Programme neu kompilieren, z.B.:
</p>

<pre caption="Alle Pakete des Systems neu kompilieren">
# <i>emerge -e world</i>
</pre>

<p>
Alternativ können Sie Ihr System einfach "natürlich" selbst nach NPTL
konvertieren lassen, indem Sie auf neuere Versionen aktualisieren sobald sie
veröffentlicht werden.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Abschließende Bemerkungen</title>
<section>
<title>Probleme?</title>
<body>

<p>
Durch die unglaubliche Menge an Arbeit, die in Linux 2.6 geflossen ist, ist es
manchmal unumgänglich, dass Dinge die gut funktioniert haben, nicht mehr wie
erwartet funktionieren.
</p>

<p>
Wenn Sie irgendwelche Probleme mit Ihrem 2.6 Kernel haben und Sie bestätigen
können, dass das Problem unter 2.4 nicht besteht, dann öffnen Sie bitte einen
Bug in unserem <uri link="http://bugs.gentoo.org">Bugzilla</uri>. Wir werden
das Problem untersuchen und wenn wir rausfinden, dass es ein Problem im
Hauptkernel ist, werden wir Sie dann bitten einen Report im zentralen
Kernel-Bugzilla einzureichen.
</p>

</body>
</section>
<section>
<title>Fazit</title>
<body>

<p>
Hoffentlich haben Sie nun eine sanfte Migration abgeschlossen und genießen die
Vorteile die Linux 2.6 über 2.4 hat.
</p>

<p>
Ich möchte ein Wort des Danks an die viele Benutzer richten, die dieses
Dokument effektiv 'getestet' haben während es in den frühen Stadien war und
Feedback geboten haben wie der Migrationsprozess verlaufen ist. Es tut mir
leid, dass ich nicht allen Emails geantwortet habe (es waren eine Menge!),
aber ich habe jede einzelne gelesen und dieses Dokument verbessert, wo es
angebracht war. Genießen Sie Ihre 2.6-erweiterten Systeme :)
</p>

</body>
</section>
<section>
<title>Linux 2.4 von Ihrem System entfernen</title>
<body>

<p>
Nachdem Sie 2.6 eine Zeit lang laufen haben, könnten Sie sich entscheiden, dass
Sie keinen Grund mehr haben Linux 2.4 zu benutzen. Die Schritte, die Sie gehen
könnten, um Ihr System aufzuräumen, werden unten beleuchtet. <e>Folgen Sie der
Prozedur in diesem Abschnitt nur, wenn Sie sich sicher sind, dass Sie 2.4 nie
wieder 2.4 benutzen können/wollen!</e>
</p>

<p>
Der 2.4 Kernelquellcode kann durch die Benutzung von emerge wie gewohnt
entfernt werden. Zum Beispiel, angenommen Sie haben 2.4 Versionen der
vanilla-sources und gentoo-sources installiert, dann können Sie folgenden
Befehl benutzen, um sie zu entfernen, während die 2.6 Versionen intakt bleiben:
</p>

<pre caption="Beispiel: Linux 2.4 Quellen entfernen">
# <i>emerge --unmerge =vanilla-sources-2.4.* =gentoo-sources-2.4.*</i>
</pre>

<p>
Portage wird die Installationen der 2.4 Kernelquellen nicht komplett entfernen,
da einige temporäre Dateien während der Kompilierung erzeugt wurden. Es ist
sicher diese Überreste mit folgendem Befehl zu entfernen:
</p>

<pre caption="Entfernen der verbleibenden temporären Dateien">
# <i>rm -rf /usr/src/linux-2.4.*</i>
</pre>

<p>
Sie können zusätzlich die Module und Informationsdateien entfernen, die sich
auf Ihre alte 2.4 Kernel Installation beziehen, da diese nicht länger gebraucht
werden.
</p>

<pre caption="Entfernen der vorher installierten 2.4 Module">
# <i>rm -rf /lib/modules/2.4.*</i>
</pre>

<p>
Die 2.4 Kernel-Binaries von denen Sie gebootet haben können auch beruhigt
entfernt werden. Sie sollten Ihre <c>/boot</c> Partition mounten und diese
Abbilder entfernen. Sie sollten auch Ihre Bootloaderkonfiguration
aktualisieren, damit diese sich nicht länger auf die gelöschten Kernelabbilder
bezieht.
</p>

<p>
Manche Linux 2.4 Benutzer werden vorher schon das <c>alsa-driver</c> Paket
installiert haben, um von den neuen Audiomöglichkeiten von Linux 2.6 Vorteil zu
ziehen. Wenn Sie einer dieser Benutzer sind und Sie dem Rat, ALSA mit den 2.6
Kernelquellen zu bauen (im Gegensatz zur Benutzung des <c>alsa-driver</c>
Pakets), gefolgt sind, der weiter oben im Dokument gegeben wurde, dann können
Sie es sicher entfernen, um zukünftige Konflikte zu vermeiden.
</p>

<p>
Zusätzlich haben <c>lm-sensors</c> Benutzer früher das Paket <c>i2c</c> benutzt,
um die Hardwaretreiber zur Verfügung zu stellen. Wie schon erwähnt sind die
I2C-Treiber jetzt im Kernel enthalten, also kann dieses Paket ebenfalls
entfernt werden, um zukünftige Konflikte zu vermeiden.
</p>

<p>
Der devfs Verwaltungs-Daemon, <c>devfsd</c>, kann auch sicher entfernt werden,
da wir jetzt <c>udev</c> zur Geräteverwaltung verwenden.
</p>

<pre caption="alsa-driver, i2c, und devfsd entfernen">
# <i>emerge --unmerge alsa-driver i2c devfsd</i>
</pre>

<p>
Wenn Sie LVM2-Benutzer sind, möchten Sie vielleicht Ihre Daten in das
LVM2-Datenformat konvertieren, um von den Vorteilen zu profitieren, die LVM2
bietet. Allerdings wird diese Operation Sie davon abhalten jemals wieder auf
Ihre LVM-Daten von einem 2.4 Kernel aus zuzugreifen. Wenn Sie mit der
Konvertierung fortfahren möchten (es ist komplett Optional!), dann sollten Sie
sich die Manpage von <c>vgconvert</c> näher ansehen um Anweisungen zu erhalten
wie man verfahren muss. Ein Beispiel wird unten gezeigt, wobei <c>main</c> der
Volume-Gruppenname ist.
</p>

<pre caption="Ein LVM1-Volume in das LVM2-Format konvertieren">
# <i>vgconvert -M2 main</i>
</pre>

</body>
</section>
</chapter>
</guide>
