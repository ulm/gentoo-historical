<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/kernel-config.xml,v 1.5 2012/04/18 18:30:17 swift Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="de">
<title>Gentoo Linux Kernel Konfigurationsleitfaden</title>

<author title="Autor">
  <mail link="dsd@gentoo.org">Daniel Drake</mail>
</author>
<author title="Mitarbeiter">
  <mail link="curtis119@gentoo.org">Curtis Napier</mail>
</author>
<author title="Mitarbeiter">
  <mail link="jdr@xemoka.net">Justin Robinson</mail>
</author>
<author title="Mitarbeiter">
  <mail link="rane@gentoo.org">Lukasz Damentko</mail>
</author>
<author title="Bearbeiter">
  <mail link="smithj@gentoo.org">Jonathan Smith</mail>
</author>
<author title="Bearbeiter">
  <mail link="nightmorph"/>
</author>
<author title="Übersetzer">
  <mail link="keytoaster@gentoo.org">Tobias Heinlein</mail>
</author>

<abstract>
Dieses Dokument versucht die Konzepte der manuellen Kernelkonfiguration
einzuführen und einige der häufigsten Konfigurationsfehler zu detaillieren.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.4</version>
<date>2010-03-21</date>

<chapter>
<title>Einführung</title>
<section>
<body>

<p>
Gentoo stellt Ihnen zwei Wege, um die Kernelinstallation und das Upgraden zu
behandeln, bereit: <e>Automatisch</e> (genkernel) und <e>manuell</e>. Obwohl die
automatische Methode als <e>einfacher</e> für den Benutzer angesehen werden
kann, gibt es eine Anzahl von Gründen, warum ein großer Anteil der
Gentoo-Benutzer seine Kernel manuell konfiguriert: Höhere Flexibilität, kleinere
Kernel, kürzere Kompilierzeit, Lernerfahrungen, gewaltige Langeweile, etc.
</p>

<p>
Dieser Leitfaden befasst sich nicht mit der automatischen Methode (genkernel).
Wenn Sie lieber genkernel zum Kompilieren und Installieren benutzen möchten,
schauen Sie sich die <uri link="/doc/de/genkernel.xml">Genkernel
Dokumentation</uri> an.
</p>

<p>
Dieser Leitfaden versucht nicht den manuellen Konfigurationsprozess vom Anfang
bis zum Ende zu dokumentieren -- Dem Konfigurationsprozess liegt ein hoher Grad
an gesundem Menschenverstand und ein relativ hohes technisches Verständnis Ihres
System zugrunde. Stattdessen stellt dieses Dokument die Konzepte der manuellen
Kompilierung vor und die detailliert die häufigsten Fehlerquellen, die der
Benutzer begegnet.
</p>

<p>
Dieses Dokument ist für neuere Kernel und die verbreitesten
Computerarchitekturen geschrieben. Manche Details können bei älteren Kerneln
oder auf exotischeren Architekturen abweichen, aber der größte Teil des Inhalts
ist weiterhin relevant.
</p>

<p>
Wir nehmen an, dass Sie die Linux-Kernel-Quellen auf Ihrer Festplatte entpackt
haben (normalerweise irgendwo unter <c>/usr/src</c>). Desweiteren wird von Ihnen
erwartet, dass Sie wissen, wie Sie das Konfigurationswerkzeug <c>menuconfig</c>
betreten und wie Sie durch das Menüsystem navigieren. Wenn Sie noch nicht auf
dieser Stufe angelangt sind, stehen Ihnen anderweitige Dokumentationen bereit,
die Ihnen helfen können.
</p>

<ul>
  <li>
    Der <uri link="/doc/de/gentoo-kernel.xml">Kernel-Leitfaden</uri> listet die
    verschiedenen Kernel-Quellpakete auf, die wir zur Verfügung gestellt haben
  </li>
  <li>
    Der <uri link="/doc/de/kernel-upgrade.xml">Kernel-Upgrade-Leitfaden</uri>
    erklärt, wie Sie Ihren Kernel upgraden oder von einem zu einem anderen
    wechseln.
  </li>
  <li>
    Das <uri link="/doc/de/handbook/index.xml">Gentoo-Handbuch</uri> behandelt
    auch einige Aspekte der Kernel-Installation.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Konfigurationskonzepte</title>
<section>
<title>Die Grundlagen</title>
<body>

<p>
Eigentlich ist der generelle Prozess eher simpel: Ihnen wird eine Serie von
Optionen dargelegt, kategorisiert in individuelle Menüs und Untermenüs, und Sie
wählen die Hardwareunterstützung und Kernelfunktionen, die für ihr System
relevant sind.
</p>

<p>
Der Kernel enthält eine <e>Standardeinstellung</e>, welche Ihnen, für die
spezifischen Quellen, angezeigt wird, wenn Sie zum ersten Mal menuconfig
ausführen. Die Standards sind generell breit gefächert und sinnvoll, was
bedeutet, dass die meisten Benutzer nur wenige Dinge an der Grundkonfiguration
ändern müssen. Wenn Sie sich dazu entscheiden, eine Option auszuschalten, die
standardmäßig eingeschaltet war, stellen Sie sicher, dass Sie ein relativ gutes
Verständnis davon haben, was genau diese Option bewirkt und wie die Konsequenzen
des Ausschaltens aussehen.
</p>

<p>
Wenn dies Ihre erste Linux-Kernel-Konfiguration ist, sollten Sie darauf
abzielen, zurückhaltend zu sein: Seien Sie nicht zu abenteuerlustig und
versuchen Sie so wenige Änderungen an den Standardeinstellungen wie möglich
durchzuführen. Sie sollten allerdings auch daran denken, dass Sie gewisse Teile
der Konfiguration zwingend an Ihre Systeminstallation anpassen müssen, damit
Sie Ihr System überhaupt booten können!
</p>

</body>
</section>
<section>
<title>Built-in vs modular</title>
<body>

<p>
Die meisten Konfigurationsoptionen besitzen <e>3 Zustände</e>: Sie können
entweder gar nicht eingebaut, direkt in den Kernel (Y) eingebaut oder als Modul
(M) gebaut werden. Module werden extern auf dem Dateisystem gespeichert,
wohingegen die "built-in"-Optionen direkt in das Kernel-Image selbst eingebaut
werden.
</p>

<p>
Es gibt einen wichtigen Unterschied zwischen "built-in" und "modular": Bis auf
einige Ausnahmen wird der Kernel keinesfalls versuchen, irgendein externes Modul
zu Laden, wenn sie es vielleicht benötigen (Das wird dem Benutzer überlassen).
Während bestimmte andere Teile des System vielleicht eine
"Laden-bei-Bedarf"-Funktion besitzen und es einige Programme gibt, die
automatisch Module laden, wird empfohlen, Hardwareunterstützung und
Kernelfeatures direk direkt in den Kernel einbauen. Der Kernel kann dann
sicherstellen, dass die Funktionalität und die Hardwareunterstützung immer
verfügbar ist, wenn er sie braucht.
</p>

<p>
Natürlich ist für manche Teile der Konfiguration ein "built-in" eine absolute
Notwendigkeit. Beispiel: Wenn Ihre root-Partition ein <c>ext2</c>-Dateisystem
benutzt, würde Ihr System nicht booten, wenn ext2 als Modul gebaut wäre (Das
System müsste die root-Partition durchsuchen, um das ext2-Modul zu finden, aber
es kann die Partition nicht durchsuchen, solange es nicht schon ext2 geladen
hat!).
</p>

</body>
</section>
<section>
<title>Hardware-Unterstützung</title>
<body>

<p>
Die Konfigurationswerkzeuge erkennen den <e>Architekturtyp</e> Ihres Systems.
Darüber hinaus versuchen sie allerdings nicht, die Hardware, die eigentlich im
System vorhanden ist, zu identifizieren. Es gibt zwar Standardeinstellungen für
die Hardware-Unterstüzung, aber Sie werden sicherlich die passenden Optionen für
Ihr Hardwaresystem finden und auswählen müssen.
</p>

<p>
Sie müssen einfach nur die internen und angeschlossenen Komponenten Ihres
Computers kennen oder sie identifizieren. Für die meisten internen Komponenten
müssen sie den <e>Chipsatz</e> herausfinden, der jeweils benutzt wird. Der
Produktname ist eher nutzlos.
</p>

<p>
Es gibt einige Werkzeuge, die Ihnen helfen werden. <c>lspci</c> (Teil des
Pakets <c>sys-apps/pciutils</c>) wird ihre PCI- und AGP-basierte Hardware
identifizieren, was die Komponenten auf dem Motherboard einschließt.
<c>lsusb</c> (aus dem Paket <c>sys-apps/usbutils</c>) wird die Geräte, die an
den USB-Ports angeschlossen sind, erkennen.
</p>

<p>
Die Situation ist durch die unterschiedlichen Gräde der Standardisierung
innerhalb der Hardware-Welt verwirrend. Solange Sie von den
Standardeinstellungen nicht wirklich abweichen, wird Ihre IDE-Festplatte
"einfach funktionieren", sowie Ihre PS/2- oder USB-Tastatur und Maus. Sie werden
grundlegende VGA-Anzeigeunterstützung erhalten. Jedoch sind manche Geräte wie
Ethernet-Chipsätze kaum standardisiert, so dass Sie Ihren Ethernet-Chipsatz
erkennen und die entsprechende Hardware-Unterstützung auswählen müssen, um
überhaupt einen Netzwerkzugriff zu bekommen.
</p>

<p>
Zusätzlich müssen sie vielleicht spezialisierte Optionen auswählen, um das volle
Potential aus ihrem System zu bekommen, während manche Dinge mit den
Standardeinstellungen "gerade so funktionieren". Beispielsweise werden Ihre
IDE-Festplatten <e>sehr</e> langsam laufen, wenn Sie die Option für den
passenden IDE-Chipsatz nicht aktivieren.
</p>

</body>
</section>
<section>
<title>Kernel-Features</title>
<body>

<p>
Wie auch bei der Hardware-Unterstützung, müssen Sie auch an die Softwarefeatures
denken, die Sie in Ihrem Kernel benötigen. Ein wichtiges Beispiel für solch ein
Feature ist die Dateisystemunterstützung: Sie müssen die Unterstützung für das
Dateisystem, welches Ihre Festplatte benutzt, auswählen, sowie für jedes weitere
Dateisystem, das Sie eventuell auf einem externen Speicher benutzen (z.B. VFAT
auf USB-Flash-Sticks).
</p>

<p>
Ein weiteres, häufiges Beispiel ist die verbesserte Netzwerkfunktionalität. Wenn
Sie jegliche Art von Routing oder Firewalling machen wollen, müssen sie sicher
stellen, dass alle relevanten Konfigurationsoptionen in Ihrer
Kernelkonfiguration enthalten sind.
</p>

</body>
</section>
<section>
<title>Bereit?</title>
<body>

<p>
Da wir jetzt die Konzepte vorgestellt haben, sollten Sie damit beginnen können,
Ihre Hardware zu identifizieren, durch das Konfigurationsmenü zu navigieren und
die benötigten Kerneloptionen für Ihr System auszuwählen.
</p>

<p>
Der Rest dieses Dokuments zielt darauf ab, die meisten verwirrenden Gebiete zu
erläutern und Rat zu geben, wie Sie die meisten Probleme, auf die Benutzer oft
treffen, vermeiden. Viel Glück!
</p>

</body>
</section>
</chapter>

<chapter>
<title>Häufige Probleme und verwirrende Gebiete</title>

<section>
<title>SATA-Festplatten sind SCSI</title>
<body>

<p>
Die meisten modernen Desktopsysteme werden mit Speichergeräten (Festplatten und
CD/DVD-Laufwerke) auf einem <uri link="http://en.wikipedia.org/wiki/SATA">Serial
ATA</uri>-Bus versendet, anstelle des älteren <uri
link="http://en.wikipedia.org/wiki/Parallel_ATA">IDE</uri> ("ribbon cable")
Bus-Typs.
</p>

<p>
SATA-Unterstützung in Linux ist in einer Schicht eingefügt, die <e>libata</e>
genannt wird, welche unter dem SCSI-Subsystem sitzt. Aus diesem Grund werden
SATA-Treiber unter dem SCSI-Treiber-Abschnitt der Konfiguration gefunden.
Außerdem werden Ihre Speichergeräte als SCSI-Geräte behandelt, was heißt, dass
SCSI-disk/cdrom-Unterstützung ebenfalls erforderlich ist. Ihre SATA-Festplatte
wird (z.B.) als <c>/dev/sda</c> und Ihr SATA-CD/DVD-Gerät als <c>/dev/sr0</c>
bezeichnet.
</p>

<p>
Obwohl der Großteil dieser Treiber für SATA-Controller ist, wurde libata nicht
SATA-spezifisch entwickelt. Alle häufig benutzten IDE-Treiber werden in naher
Zukunft nach libata portiert und ab diesem Punkt werden die oben genannten
Überlegungen auch für IDE-Benutzer zutreffen.
</p>

<pre caption="Konfigurationsoptionen für libata">
Device Drivers  ---&gt;
SCSI device support  ---&gt;
  &lt;*&gt; SCSI device support
  &lt;*&gt;  SCSI disk support
  &lt;*&gt;  SCSI CDROM support

  SCSI low-level drivers  ---&gt;
  &lt;*&gt; Serial ATA (SATA) support
    <comment>Wählen Sie Ihren Chipsatz aus der Auswahl, die unter der oben genannten
Option aufgelistet wird</comment>
</pre>

</body>
</section>
<section>
<title>IDE-Chipsätze und DMA</title>
<body>

<p>
Trotz der Einführung von SATA sind IDE-Geräte noch sehr häufig und viele sind
von ihnen abhängig. IDE ist eine ziemlich gewöhnliche Technologie und als solche
unterstützt Linux fast alle IDE-Controller einfach so, ohne dass man irgendeine
controllerspezifische Option auswählen muss.
</p>

<p>
Jedoch ist IDE eine alte Technologie und in Ihrer originalen <e>Programmed
Input/Output</e> Inkarnation ist es nicht möglich, die Übertragungsraten, die
heutzutage für schnellen Zugriff auf moderne Speichermedien gebraucht werden,
zur Verfügung zu stellen. Der allgemeine IDE-Treiber ist auf diese
PIO-Übertragungsarten beschränkt, was in langsamen Übertragungsraten und einer
bedeutsam hohen CPU-Nutzung resultiert, während Daten von/zur Festplatte
übertragen werden.
</p>

<p>
Solange Sie sich nicht mit einem vor-1995-System herumschlagen, wird Ihr
IDE-Controller auch einen alternativen Übertragungsmodus unterstützen, bekannt
als <e>Direct Memory Access</e> (DMA). DMA ist viel schneller und die
CPU-Nutzung wird kaum beeinflusst, während die Datenübertragung stattfindet.
Wenn Sie unter einer generell schlechten Systemeffizienz leiden und Sie eine
IDE-Festplatte benutzen, dann sind die Chancen hoch, dass DMA nicht in Benutzung
ist.
</p>

<note>
Wie bereits erwähnt ist libata sogar für IDE-Geräte verfügbar. Falls Sie libata
verwenden, benutzen alle Ihre Geräte, einschließlich der IDE-Laufwerke, DMA. Es
ist nicht erforderlich, weitere Prüfungen oder Konfigurationen durchzuführen.
</note>

<p>
Falls Sie libata für Ihre IDE-Laufwerke nicht verwenden, müssen Sie überprüfen,
ob DMA verwendet wird und es aktivieren.
</p>

<pre caption="Prüfen, ob DMA für Ihre IDE Festplatte aktiviert ist">
# <i>hdparm -d /dev/hda</i>

/dev/hda:
using_dma    =  0 (off)
</pre>

<p>
Um DMA für Ihre IDE-Geräte zu aktivieren, müssen Sie einfach die
Konfigurationsoptionen für den IDE-Controller aktivieren.
</p>

<pre caption="Konfigurationsoptionen für IDE-Controller">
Device Drivers  ---&gt;
ATA/ATAPI/MFM/RLL support  ---&gt;
  &lt;*&gt; ATA/ATAPI/MFM/RLL support
  &lt;*&gt;  Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support
  [*]    PCI IDE chipset support
  <comment>Wählen Sie Ihren Chipsatz aus der Auswahl, die unter der oben genannten
Option aufgelistet wird</comment>
</pre>

</body>
</section>
<section>
<title>USB Host Controllers</title>
<body>

<p>
<uri link="http://de.wikipedia.org/wiki/USB">USB</uri> ist ein weit verbreiteter
Bus zum Verbinden von externen Peripheriegeräten an Ihren Computer. Einer der
Gründe für den Erfolg von USB ist, dass USB ein standardiesiertes Protokoll ist,
jedoch variieren die USB-<e>host controller devices</e> (HCDs), die auf den
Host-Computern implementiert sind, ein bisschen. Es gibt 3 Haupttypen:
</p>

<ul>
  <li>
    <c>UHCI</c> ist das Universal Host Controller Interface. Es unterstützt USB
    1.1 und ist normalerweise auf Motherboards, die auf VIA oder Intel
    Chipsätzen basieren, zu finden.
  </li>
  <li>
    <c>OHCI</c> ist das Open Host Controller Interface. Es unterstützt USB 1.1
    und ist normalerweise auf Motherboards, die auf Nvidia oder SiS Chipsätzen
    basieren, zu finden.
  </li>
  <li>
    <c>EHCI</c> ist das Extended Host Controller Interface. Es ist der einzige
    verbreitete Host-Controller, um USB 2.0 zu unterstützen und kann
    typischerweise auf jedem Computer gefunden werden, der USB 2.0 unterstützt.
  </li>
</ul>

<p>
Die meisten Systeme kommen mit zwei, der oben genannten, Schnittstellentypen:
EHCI (USB 2.0) und entweder UCHI oder OHCI (USB 1.1). Es ist wichtig, dass Sie
beide Typen Ihres Systems auswählen. Während alle USB 2.0 Geräte
rückwärtskompatibel mit USB 1.1 sind, basiert ein großer Anteil der USB-Geräte
(selbst die, die heutzutage produziert werden) auf dem USB 1.1 Interface - warum
sollte eine USB-Maus auch mehr als 1,5mbit/sek benötigen?
</p>

<p>
Wenn Sie die relevanten Optionen, in Bezug auf die USB HCD Typen, die auf Ihrem
System vorhanden sind, nicht auswählen, erhalten Sie möglicherweise "tote"
USB-Ports: Sie schließen ein Gerät an, aber es bekommt keinen Strom oder es
meldet sich in keinster Weise.
</p>

<p>
Ein toller <c>lspci</c> Trick (aus dem Paket <c>sys-apps/pciutils</c>) macht es
relativ einfach, die auf Ihrem System vorhandenen HCDs zu finden. Wenn Sie den
auch gefundenen Firewire-Controller ignorieren, ist es einfach zu sehen, dass
mein System OHCI- und EHCI-Unterstützung benötigt:
</p>

<pre caption="Benutzen von lspci zur Erkennung der HCD-Typen">
# <i>lspci -v | grep HCI</i>
00:02.0 USB Controller: nVidia Corporation CK804 USB Controller (rev a2) (prog-if 10 <i>[OHCI]</i>)
00:02.1 USB Controller: nVidia Corporation CK804 USB Controller (rev a3) (prog-if 20 <i>[EHCI]</i>)
01:0b.0 FireWire (IEEE 1394): Agere Systems FW323 (rev 61) (prog-if 10 [OHCI])
</pre>

<pre caption="Konfiguration für USB HCDs">
Device Drivers  ---&gt;
USB support  ---&gt;
  &lt;*&gt; Support for Host-side USB
  ---  USB Host Controller Drivers
  &lt;*&gt;  EHCI HCD (USB 2.0) support
  &lt;*&gt;  OHCI HCD support
  &lt;*&gt;  UHCI HCD (most Intel and VIA) support
  <comment>Wählen Sie die HCDs, die auf Ihrem System vorhanden sind, aus oder
  alle 3, wenn Sie unsicher sind.</comment>
</pre>

</body>
</section>
<section>
<title>Multiprozessor, Hyper-Threading und Dual Core Systeme</title>
<body>

<p>
Viele Computersysteme basieren auf mehreren Prozessoren, aber es ist nicht immer
sofort offensichtlich.
</p>

<ul>
  <li>
    Viele Intel CPUs unterstützen eine Technologie, welche sie <uri
    link="http://en.wikipedia.org/wiki/Hyperthreading">Hyper-Threading</uri>
    nennen, welche vom System als zwei <e>logische</e> Prozessoren angezeigt
    werden.
  </li>
  <li>
    Manche der neusten Intel/AMD CPUs bestehen aus mehreren physischen
    Prozessoren in einem einzelnen Paket, welche als <uri
    link="http://en.wikipedia.org/wiki/Dual_core">Dual Core</uri> Prozessoren
    bekannt sind.
  </li>
  <li>
    Einige High-End Computersysteme haben mehrere physische Prozessoren auf
    spezialisierten Motherboards installiert, um eine spürbare Steigerung der
    Leistung gegenüber einem <e>uniprozessor</e>-System zu bieten. Sie werden
    sicherlich wissen, ob Sie solch ein System besitzen, da diese nicht gerade
    günstig sind.
  </li>
</ul>

<p>
In all diesen Fällen, müssen Sie die passenden Kerneloptionen auswählen, um die
optimale Leistung dieser Setups zu erzielen.
</p>

<pre caption="Konfiguration für multi-processing">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
 <comment>Wählen Sie die obige Option, wenn Sie ein Multiprozessorsystem (jeglichen Typs) benutzen</comment>
  [*]  SMT (Hyperthreading) scheduler support
 <comment>Wählen Sie die obige Option, wenn Sie eine Intel Hyper-Threading CPU benutzen</comment>
  [*]  Multi-core scheduler support (NEW)
 <comment>Wählen Sie die obige Option, wenn Ihre CPU Dual Core ist</comment>
Power management and ACPI options  ---&gt;
 [*] ACPI (Advanced Configuration and Power Interface) Support
 <comment>Die obige Option aktiviert nicht nur Power-Management-Features, sondern
 kann auch erforderlich sein, um alle CPUs auf Ihrem System verfügbar zu machen</comment>
</pre>

</body>
</section>
<section>
<title>x86 High Memory Unterstützung</title>
<body>

<p>
Aufgrund von Einschränkungen in der 32-Bit-Adressierung der x86-Architektur,
kann ein Kernel mit der Standardkonfiguration nur 896mb RAM unterstützen. Wenn
Ihr System mehr Speicher besitzt, sind nur die ersten 896mb sichtbar, sofern Sie
High Memory Unterstützung nicht aktivieren.
</p>

<note>
Diese Einschränkung ist spezifisch für die x86 (IA32) Architektur. Andere
Architekturen unterstützen von Natur aus große Mengen an Speicher, ohne dass
Konfigurationsänderungen erforderlich sind.
</note>

<p>
High Memory Unterstützung ist standardmäßig nicht aktiviert, da es einen kleinen
System-Overhead mit sich bringt. Lassen Sie sich davon nicht beirren; dieser
Overhead ist unwesentlich groß, wenn man ihn mit der Erhöhung der Leistung
vergleicht, die man durch den zusätzlichen Speicher erhält.
</p>

<pre caption="Aktivieren von High Memory Unterstützung unter x86">
Processor type and features  ---&gt;
High Memory Support  ---&gt;
  (X) 4GB
  ( ) 64GB
  <comment>Wählen Sie die 4GB Option, außer Ihr System verfügt über mehr als 4GB RAM.</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Weitere Kernelkonfigurationsdokumentation</title>
<section>
<body>

<p>
Bisher haben wir nur die generellen Konzepte und spezifische Probleme, die mit
der Kernelkonfiguration zusammenhängen, besprochen, ohne in präzise Details zu
gehen (solche Details müssen Sie entdecken!). Jedoch enthalten andere Teile der
Gentoo-Dokumentationssammlung spezialisierte Details für die benötigten Themen.
</p>

<p>
Eventuell finden Sie diese Dokumente nützlich, wenn Sie bestimmte Bereiche
konfigurieren, aber wenn Sie einen kernel zum ersten Mal kompilieren, sollten
Sie nicht zu abenteuerlustig an die Sache herangehen. Starten Sie damit, ein
Basissystem zum Laufen zu kriegen, Sie können jederzeit zurückkehren, um
Unterstützung für Audio, Drucker, usw. hinzuzufügen.
</p>

<ul>
  <li>
    Der <uri link="/doc/de/alsa-guide.xml">ALSA Leitfaden</uri> benennt die
    Konfigurationsoptionen, die für die Soundkartenunterstützung benötigt
    werden. Beachten Sie, dass ALSA eine Ausnahme zu dem sonst empfohlenen Plan,
    Dinge nicht als Module zu bauen, darstellt: ALSA ist viel einfacher zu
    konfigurieren, wenn die Komponenten modular sind.
  </li>
  <li>
    Der <uri link="/doc/de/bluetooth-guide.xml">Bluetooth Leitfaden</uri>
    erklärt die Optionen, die Sie benötigen, um Bluetooth-Geräte auf Ihrem
    System zu verwenden.
  </li>
  <li>
    Der <uri link="/doc/de/ipv6.xml">IPv6 Router Leitfaden</uri> beschreibt, wie
    Sie ihren Kernel konfigurieren, um den Netzwerkadressierungsplan der
    nächsten Generation für das Routing zu benutzen.
  </li>
  <li>
    Wenn Sie die "closed-source" nVidia-Grafiktreiber für eine verbesserte
    3D-Leistung benutzen, listet der <uri link="/doc/de/nvidia-guide.xml">nVidia
    Leitfaden</uri> die Optionen auf, welche und welche nicht ausgewählt werden
    sollten.
  </li>
  <li>
    Desweiteren erklärt der <uri
    link="/doc/de/power-management-guide.xml">Power Management Leitfaden</uri>,
    wie Sie Ihren Kernel für CPU-Frequenzskalierung, sowie für den Ruhemodus und
    Hibernation konfigurieren.
  </li>
  <li>
    Wenn Sie ein PowerPC-System verwenden, enthält die <uri
    link="/doc/de/gentoo-ppc-faq.xml">PPC FAQ</uri> ein paar Abschnitte über die
    Kernelkonfiguration.
  </li>
  <li>
    Das <uri link="/doc/de/printing-howto.xml">Printing HOWTO</uri> listet die
    Kerneloptionen auf, die benötigt werden, um Drucken unter Linux zu
    unterstützen.
  </li>
  <li>
    Der <uri link="/doc/de/usb-guide.xml">USB-Leitfaden</uri> erklärt die
    Konfiguration, die benötigt wird, um die meisten USB-Geräte wie
    Tastaturen/Mäuse, Speichermedien und Drucker verwenden zu können.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Fehlersuche</title>
<section>
<title>Konfigurationsänderungen erzielen keinen Effekt</title>
<body>

<p>
Es ist häufig, dass Benutzer Konfigurationsänderungen durchführen, aber dann
einen kleinen Fehler in dem Prozess machen, der diesem Punkt folgt. Sie starten
ein Kernelimage, das nicht das ist, welches sie soeben neu konfiguriert haben,
und bemerken, dass ihr Problem, welches sie lösen wollten, immer noch vorhanden
ist, und schließen daraus, dass die Konfigurationsänderung das Problem nicht
löst.
</p>

<p>
Der Prozess des Kompilierens und Installierens eines Kernels würde den Rahmen
dieses Dokuments sprengen; Sie sollten sich an den <uri
link="/doc/de/kernel-upgrade.xml">Kernel Upgrade Leitfaden</uri> halten, um
generelle Hilfe zu erhalten. Kurz gesagt, der Prozess ist: Konfigurieren,
Kompilieren, mount /boot (wenn das nicht schon passiert ist), Herüberkopieren
des neuen Kernelimages, rebooten. Wenn Sie die letzten Punkte nicht
berücksichtigen, werden Ihre Änderungen keinen Effekt erzielen!
</p>

<p>
Es ist möglich, nachzuprüfen, ob der Kernel, den Sie gebootet haben, mit dem
Kernel, den Sie kompiliert auf Ihrer Festplatte haben, übereinstimmt, indem Sie
das Datum und die Uhrzeit der Kompilation überprüfen. Angenommen Ihre
Architektur ist x86 und Ihre Kernelquellen sind unter
<path>/usr/src/linux</path> installiert:
</p>

<pre caption="Prüfen, dass Sie Ihren modifizierten Kernel gebootet haben">
# <i>uname -v</i>
#4 SMP PREEMPT Sat Jul 15 08:49:26 BST 2006
<comment>Der obige Befehl zeigt das Datum und die Uhreit an, zu der der Kernel, der momentan gebootet ist, kompiliert worden ist.</comment>

# <i>ls -l /usr/src/linux/arch/i386/boot/bzImage</i>
-rw-r--r-- 1 dsd users 1504118 Jul 15 08:49 /usr/src/linux/arch/i386/boot/bzImage
<comment>Der obige Befehl zeigt das Datum und die Uhrzeit an, zu der das Kernelimage auf Ihrer Festplatte, kompiliert worden ist.</comment>
</pre>

<p>
Wenn die zwei Zeiten der obigen Befehle mehr als 2 Minuten voneinander
abweichen, zeigt dies an, dass Sie einen Fehler während der Neuinstallation des
Kernels gemacht haben und Sie nicht von dem Kernelimage gebootet haben, von
welchem Sie dachten Sie hätten!
</p>

</body>
</section>
<section>
<title>Module werden nicht automatisch geladen</title>
<body>

<p>
Wie schon vorher in diesem Dokument erwähnt, versteckt das
Kernelkonfigurationssystem eine große Verhaltensänderung, wenn Sie eine
Kernelkomponente als Modul (M), anstelle als built-in (Y), bauen. Es ist es
wert, dies erneut zu wiederholen, da viel zu viele Benutzer in diese Falle
tappen.
</p>

<p>
Wenn Sie eine Komponente als built-in auswählen, ist der Code in das Kernelimage
(bzImage) eingebaut. Wenn Ihr Kernel die Komponente benutzen muss, kann er diese
automatisch initialisieren und laden, ohne dass der Benutzer eingreifen muss.
</p>

<p>
Wenn Sie eine Komponente als Modul auswählen, ist der Code in eine
Kernelmoduldatei gebaut und in Ihrem Dateisystem installiert. Wenn Ihr Kernel
diese Komponente benötigt, kann er sie nicht benutzen! Bis auf einige Ausnahmen
versucht der Kernel nicht, diese Module wirklich zu laden - das muss der
Benutzer tun.
</p>

<p>
Wenn Sie also die Unterstützung für Ihre Netzwerkarte als Modul gebaut haben und
Sie darauf stoßen, dass Sie keinen Netzwerkzugriff haben, ist es wahrscheinlich,
dass das Modul nicht geladen ist - Sie müssen das entweder manuell machen oder
Ihr System so konfigurieren, dass dieses beim booten automatisch geladen wird.
</p>

<p>
Solange Sie keine Gründe haben, es anders zu tun, sparen Sie sich ein bisschen
Zeit, indem Sie diese Komponenenten direkt in das Kernelimage bauen, so dass der
Kernel diese Dinge automatisch für Sie verwalten kann.
</p>

</body>
</section>
</chapter>
</guide>
