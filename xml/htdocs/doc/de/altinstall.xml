<?xml version='1.0' encoding="utf-8"?>
<!DOCTYPE guide SYSTEM "http://www.gentoo.org/dtd/guide.dtd">

<!-- English CVS Version 1.19 -->

<guide link="/inhalte/doku/einreichtung/alternativ/">

<title>Das Gentoo Linux alternative Installations Methoden HOWTO</title>

<author title="Contributor"><mail link="gerrynjr@gentoo.org">
  Gerald Normandin Jr.</mail>
</author>
<author title="Contributor"><mail link="lordviram@rebelpacket.net">
  Travis Tilley</mail>
</author>
<author title="Contributor"><mail link="volontir@yahoo.com">
  Oleg Raisky</mail>
</author>
<author title="Contributor"><mail link="luminousit@hotmail.com">
  Alex Garbutt</mail>
</author>
<author title="Contributor"><mail link="alex@openvs.com">
  Alexandre Georges</mail>
</author>
<author title="Contributor"><mail link="vargen@b0d.org">
  Magnus Backanda</mail>
</author>
<author title="Contributor"><mail link="davoid@gentoo.org">
  Faust A. Tanasescu</mail>
</author>
<author title="Contributor"><mail link="aliz@gentoo.org">
  Daniel Ahlberg</mail>
</author>
<author title="Editor"><mail link="swift@gentoo.org">
  Sven Vermeulen</mail>
</author>
<author title="Reviewer"><mail link="antifa@gentoo.org">
  Ken Nowack</mail>
</author>
<author title="Editor"><mail link="blubber@gentoo.org">
  Tiemo Kieft</mail>
</author>
<author title="Übersetzer"><mail link="egbers@netzraum.com">
  Sebastian Egbers</mail>
</author>
<author title="Übersetzer"><mail link="sebastian@beneke-it.de">
  Sebastian Beneke</mail>
</author>
<author title="Übersetzer"><mail link="dertobi123@gentoo.org">
  Tobias Scherbaum</mail>
</author>

<abstract>
  Dieses HOWTO soll eine Art Fundgrube von alternativen Gentoo Installations-
  Methoden werden, für die, die spezielle Installations Anforderungen haben,
  wie kein CD-ROM oder ein Computer der keine CDs bootet.
</abstract>

<license/>

<version>0.35</version>
<date>31. Oktober 2003</date>

<chapter>
  <title>Über dieses Dokument</title>
    <section>
    <body>

      <p>
        Wenn die Standard Boot-von-CD Installation für Sie nicht funktioniert
        (oder Sie sie einfach nicht mögen), ist nun Hilfe verfügbar.
        Dieses Dokument soll eine Sammlung verschiedener alternativer Installations
        Methoden bieten. Sollten Sie eine alternative Installations Methode kennen,
        von der Sie meinen, dass sie auch für andere hilfreich sein könnte, zögern Sie
        bitte nicht <mail link="antifa@gentoo.org">mir zu schreiben</mail>
        (Englisch), bzw. sich an das <mail link="gentoo-deutsch-dev@lists.berlios.de">
        Team von Gentoo.de</mail> zu wenden.
      </p>

    </body>
  </section>
</chapter>

<chapter>
  <title>Booten der LiveCD mit Smart BootManager</title>
    <section>
    <body>

      <p>
        Downloaden Sie den Smart BootManager
        <uri link="http://btmgr.sourceforge.net/index.php3?body=download.html">
        http://btmgr.sourceforge.net/index.php3?body=download.html</uri>.
        Linux Sourcen oder Binärpakete sowie Windows .exe Versionen finden Sie dort genauso, wie viele
        Sprachpakete. Wie auch immer, in diesem Fall sollten Sie das Binärpaket herunterladen,
        da sich die Sourcen nicht mit neueren Versionen von NASM kompilieren lassen.
      </p>

      <p>
        Entweder kompilieren Sie das Paket aus den Sourcen oder laden Sie nur das Binärpaket herunter.
        Es gibt verschiedene Optionen, die Sie während dem erstellen der Boot Diskette benutzen können,
        wie Sie hier sehen können.
      </p>

      <pre caption="Smart BootManager Optionen">
<i>sbminst [-t theme] [-d drv] [-b backup_file] [-u backup_file]

   -t theme     select the theme to be used, in which the theme could be:
                   us = English theme       de = German theme
                  hu = Hungarian theme     zh = Chinese theme
                  ru = Russian theme       cz = Czech theme
                  es = Spanish theme       fr = French theme
                   pt = Portuguese theme


  -d drv       set the drive that you want to install Smart BootManager on;
                for Linux:
                  /dev/fd0 is the first floppy driver,
                  /dev/hda is the first IDE harddisk driver.
                   /dev/sda is the first SCSI harddisk driver.
                for DOS:
                   0   is the first floppy drive
                   128 is the first hard drive;

   -c             disable CD-ROM booting feature;

   -b backup_file backup the data that will be overwritten for
                  future uninstallation;

   -u backup_file uninstall Smart BootManager, should be used alone;

   -y             do not ask any question or warning.</i>
      </pre>

      <pre caption="Benutzen von sbminst um die Boot Diskette zu erstellen">
# <i>sbminst -t us  -d /dev/fd0</i>
      </pre>
    
       <note>
         Ersetzen Sie fd0 mit dem Namen ihres Diskettenlaufwerks, sollte es anders heissen.
       </note>
    
       <p>
         Schieben sie die Diskette nun in das Diskettenlaufwerk des Computer auf dem Sie die
         LiveCD starten möchten. Vergessen Sie nicht die LiveCD einzulegen und starten Sie die
         Maschine.
       </p>

      <p>
        Sie werden vom Smart BootManager mit einem Dialog begrüßt. Wählen Sie Ihr CD-ROM Lafuwerk
        aus und drücken Sie ENTER zum starten der LiveCD.
        Nachdem Sie gebootet haben, können Sie mit der Standardinstallationsanleitung fortfahren.</p>

      <p>
        Weitere Informationen zum Smart BootManager können Sie hier finden:
        <uri>http://btmgr.sourceforge.net/</uri>.
      </p>
    
      </body>
  </section>
</chapter>

<chapter>
  <title>Knoppix Installation</title>
    <section>
    <body>

      <p>
        Booten von der <uri link="http://www.knoppix.org/">Knoppix</uri> LiveCD ist ein Weg ein
        voll funktionales System während des kompilierens von Gentoo zur Verfügung zu haben.
        Tux Racer wird Ihnen helfen, die Zeit die der bootstrap benötigt totzuschlagen :)
      </p>

      <p>
        Booten Sie die Knoppix CD. Generell funktioniert die Hardware Erkennung prächtig.
        Dennoch können Sie einige Boot Optionen anpassen.
      </p>

       <p>
         Standardmäßig startet Knoppix einen KDE 3.1 Desktop.
         Was Sie sicherlich als erstes öffnen möchten, ist eine Konsole. Geben sie hier <c>sudo passwd root</c> ein.
        Damit setzen als erstes ein Root Passwort.
      </p>

      <p>
        Als nächtes werden Sie mit su zu root und führen <c>usermod -d /root -m root</c> aus.
        Damit setzen Sie das Home-Verzeichnis auf /root (wie bei Gentoo) anstelle von /home/root (wie bei Knoppix).
        Wenn Sie dies nicht tun werden Sie beim emergen Fehler wie zum Beispiel "/home/root: not found" erhalten.
      </p>

      <p>
        Führen Sie <c>exit</c> aus und werden direkt anschliessend wieder mittels <c>su</c> root. Damit können wir sicher
        stellen, dass die Änderungen des usermod Kommandos eingelesen werden. An dieser Stelle können Sie mit Kapitel 6
        der Standard Installationsanleitung fortfahren. Wenn Sie am Mounten des proc-Dateisystems angelangt sind, führen Sie
        anstelle des Kommandos in der Anleitung folgende Befehle aus:
      </p>

      <pre caption = "Mounten benötigter Dateisysteme">
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
      </pre>

    </body>
  </section>
</chapter>

<chapter>
  <title>Installation von Stage 1 ohne Netzwerkzugriff</title>
    <section>
    <body>

      <p>
        Brennen eines LiveCD Images.
      </p>

      <p>
        Holen sie sich den aktuellsten Portage Snapshot von
        <uri>http://distro.ibiblio.org/pub/linux/distributions/gentoo/snapshots/</uri>
        (oder Ihrem beliebtesten <uri link="http://www.gentoo.org/main/en/mirrors.xml">Gentoo Spiegel</uri>).
        Legen Sie den Tarball entweder auf eine existierende Partition auf Ihrem Computer, oder brennen Sie ihn auf eine CD.
      </p>

      <p>
        Sie benötigen ausserdem eine Paket Liste für die Stage Pakete. Speichern Sie das folgende Script auf dem gleichen Medium
        wie den Portage Snapshot, sie werden es später benötigen.
      </p>

      <pre caption="dl-list.sh">
#!/bin/bash

# set your defaults here:
user_defs() {

  # portage directory (without a trailing "/"):
  portage_dir="/usr/portage"

  # default download mirror (without a trailing "/"):
  gentoo_mirror="http://www.ibiblio.org/pub/Linux/distributions/gentoo"

  # default sourceforge mirror (unc, telia, belnet):
  sourceforge_mirror="unc"

  # fix gnu mirror entries
  gnu_url="ftp:\/\/ftp.gnu.org\/pub\/gnu"

}


#------------------------------------------------------------

# function to remove temporary files
cleanup() {

  rm -f $temp_file_1 $temp_file_2
  exit $1

}

# set user defaults
user_defs

# set the complete url for the sourceforge mirror
# (the \'s are needed because this goes in a sed command)
sourceforge_mirror_complete="http:\/\/$sourceforge_mirror.dl.sourceforge.net\/sourceforge"

# initialize counters
num_files=0
num_alt_urls=0
total_size=0

# initialize lists (arrays)
declare -a def_urls_arr
declare -a alt_urls_arr

# create 2 temporary files
temp_file_1=`mktemp -t dl-list.XXXXXX` || cleanup 1
temp_file_2=`mktemp -t dl-list.XXXXXX` || cleanup 1

# run "emerge -p &lt;args&gt;" (too easy to forget the "-p" in the command line...)
emerge -p $@ &gt; $temp_file_1 || cleanup 1

# remove the lines that do not contain the word "ebuild"
sed -n -e '/ebuild/p' $temp_file_1 &gt; $temp_file_2

# count how many lines were left
num_ebuilds=`wc -l $temp_file_2 | sed -e 's/\(.*\) \(.*\)/\1/'`

# extract the useful information from those lines: category, package and version
#sed -e 's:\(.*\) \(.*\)/\(.*\)-\([0-9].*\) \(.*\) \(.*\):\2 \3 \4:' $temp_file_2 &gt; $temp_file_1
sed -e 's:\(.*\) \(.*\)/\(.*\)-\([0-9].*\):\2 \3 \4:' $temp_file_2 &gt; $temp_file_1

# display starting message :)
echo -n "Generating list " &gt;&amp;2

# process each package in turn
while read category package version rest
do

  # form the name of the digest file

digest_file="$portage_dir/$category/$package/files/digest-$package-$version"

  # process the contents of the digest file
  while read md5_flag md5_sum file_name file_size
  do

    # form the default url to download the file
    def_urls_arr[$num_files]="$gentoo_mirror/distfiles/$file_name"

    # increment the file counter
    num_files=$(($num_files + 1))

    # update the size accumulator (in kilobytes)
    total_size=$(($total_size + $file_size / 1024))

  done &lt; $digest_file

  # form the "ebuild depend" command line
  ebuild_depend_cmd="ebuild $portage_dir/$category/$package/$package-${version}.ebuild depend"

  # execute the "ebuild depend" command
  $ebuild_depend_cmd || cleanup 1

  # form the name of the dependency file
  dependency_file="/var/cache/edb/dep/$category/$package-$version"

  # read in the 4th line from the dependency file,
  # which contains the official download urls
  alt_urls=`head -n 4 $dependency_file | tail -n 1`

  # ignore empty url list
  if [ -n "$alt_urls" ]
  then

    # split the urls list into $1..$N
    set $alt_urls

    # process each url in turn
    for i in $@
    do

      # remove the (use)? strings from the url list
      alt_url_tmp=`echo "$i" | sed -e '/\?$/d'`

      # remove the "mirror://gnome" urls
      alt_url_tmp=`echo "$alt_url_tmp" | sed -e '/^mirror:\/\/gnome/d'`

      # remove the "mirror://kde" urls
      alt_url_tmp=`echo "$alt_url_tmp" | sed -e '/^mirror:\/\/kde/d'`

      # remove the "mirror://gentoo" urls (already included)
      alt_url_tmp=`echo "$alt_url_tmp" | sed -e '/^mirror:\/\/gentoo/d'`

      # translate the "mirror://sourceforge" urls into valid urls
      alt_url_tmp=`echo "$alt_url_tmp" | sed -e "s/mirror:\/\/sourceforge/$sourceforge_mirror_complete/"`

      # translate the "mirror://gnu" urls into valid urls
      alt_url_tmp=`echo "$alt_url_tmp" | sed -e "s/mirror:\/\/gnu/$gnu_url/"`
      # ignore empty urls
      if [ -n "$alt_url_tmp" ]
      then

        # add the url to the list
        alt_urls_arr[$num_alt_urls]=$alt_url_tmp

        # increment the alternate url counter
        num_alt_urls=$(($num_alt_urls + 1))

      fi

    done

  fi

  # a progress bar :)
  echo -n "." &gt;&amp;2

done &lt; $temp_file_1

# display ending message :)
echo " done." &gt;&amp;2

# display default urls list
for i in ${def_urls_arr[@]}; do echo $i; done | sort

# display alternate urls list
for i in ${alt_urls_arr[@]}; do echo $i; done | sort

# display totals
echo "Totals:" $num_ebuilds "ebuilds," $num_files "files," $num_files "default urls," \n
$num_alt_urls "alternate urls," "${total_size}Kb." &lt;&amp;2

# remove temporary files and exit
cleanup 0
      </pre>

      <p>
        Folgen Sie den Anweisungen in der Installations Anleitung bis zu Kapitel 8 <c>chroot /mnt/gentoo</c>.
        Wenn Sie nur ein CD-ROM Laufwerk haben, vergessen Sie nicht beim booten die <c>cdcache</c> Option zu nutzen,
        damit Sie die LiveCD später unmounten und Ihren Portage Snapshot mounten können.
      </p>

      <p>
        Öffnen Sie eine neue Konsole (Alt-F2) und folgen Sie der Installations Anleitung bis zum bootstrap.sh Script.
      </p>

      <warn>
        Ältere Versionen der LiveCD erwarten, dass Sie das root Passwort mit <c>passwd</c> ändern, bevor Sie sich
        manuell einloggen können.
      </warn>

      <p>
        Gehen Sie nun auf die erste Konsole zurück (Alt-F1, ohne chroot) und mounten die zweite CD nach
        <path>/mnt/gentoo/mnt/cdrom2</path>. Kopieren Sie den Stage Tarball von der CD und entpacken ihn nach
        <path>/mnt/gentoo/usr/portage</path>. Ausserdem kopieren Sie das dl-list.sh Script nach <path>/usr/sbin</path>
        und machen es ausführbar.
      </p>

      <pre caption="Mounten der Snapshot CD">
# <i>umount /mnt/cdrom</i>
# <i>mkdir /mnt/gentoo/mnt/cdrom2</i>
# <i>mount /dev/cdroms/cdrom0 /mnt/gentoo/mnt/cdrom2</i>
# <i>cp /mnt/gentoo/mnt/cdrom2/portage-$date.tar.bz2 /mnt/gentoo/usr/portage</i>
# <i>cp /mnt/gentoo/mnt/cdrom2/dl-list.sh /mnt/gentoo/usr/sbin</i>
# <i>cd /mnt/gentoo/usr/portage</i>
# <i>tar xvjpf portage-$date.tar.bz2</i>
# <i>chmod +x /mnt/gentoo/usr/sbin/dl-list.sh</i>
      </pre>

      <p>
        Wechseln Sie nun wieder auf die F2 Konsole. Wenn Sie nun versuchen bootstrap.sh auszuführen wird es abbrechen,
        da es keine Sourcen herunterladen kann. Wir werden diese Dateien woanders laden und nach
        <path>/usr/portage/distfiles</path> (auf der F2 Konsole) schieben.
      </p>

      <p>
        Sie benötigen eine Liste der Stage 1 Pakete:
        glibc, baselayout, texinfo, gettext, zlib, binutils, gcc, ncurses und deren Abhängigkeiten.
      </p>

      <note>
        Beachten sie, dass Sie die Version jedes Pakets brauchen, die in Ihrem Portage Snapshot aktuell ist.
      </note>

      <p>
        Benutzen Sie nun das dl-list.sh Script um die Paketliste zu generieren.
        Kopieren Sie die Liste nun auf eine Diskette.
      </p>

      <pre caption="dl-list.sh benutzen">
# <i>dl-list.sh glibc baselayout texinfo gettext zlib binutils gcc ncurses > stage1.list</i>
# <i>mount -t vfat /dev/fd0 /mnt/floppy</i>
# <i>cp /mnt/gentoo/stage1.list /mnt/floppy</i>
# <i>umount /mnt/floppy</i>
      </pre>

      <p>
        Nehmen Sie die Diskette mit zu einem Rechner, der über einen Internetzugang verfügt
        und laden Sie die Liste mit wget herunter:
      </p>

      <pre caption="Laden der Sourcen mit wget">
# <i>wget -N -i stage1.list</i>
      </pre>


      <p>
        Nachdem Sie alle benötigten Sourcen heruntergeladen haben legen Sie sie auf dem Zielsystem unter
        <path>/mnt/gentoo/usr/portage/distfiles</path> ab. Nun können Sie <c>bootstrap.sh</c> erfolgreich ausführen.
        Nutzen Sie das dl-list.sh Script auch, um die während Stage 2 / Stage 3 benötigten Sourcen zu laden.
      </p>
    </body>
  </section>
</chapter>

<chapter>
  <title>Installation ohne Disks mit PXE Boot</title>
    <section>

    <title>Anforderungen</title>
    <body>

      <p>
        Sie benötigen am Client eine Netzwerkkarte die das PXE Protokol zum booten benutzt, wie zum Beispiel viele 3COM Karten.
        Ausserdem benötigen sie ein BIOS, dass das booten von PXE unterstützt.
      </p>

    </body>
  </section>
  <section>
    <title>Basis Setup des Server</title>
    <body>

      <p>
        Erstellen Sie die Verzeichnisse, in dem Sie das Plattenlose System ablegen wollen. Erstellen Sie ein Verzeichnis namens
        <path>/diskless</path>, das ein Verzeichnis pro Client beinhaltet. Für den Rest dieses HowTo arbeiten wir mit dem Client "eta".
      </p>

      <pre caption="Verzeichnisse anlegen">
# <i>mkdir /diskless</i>
# <i>mkdir /diskless/eta</i>
# <i>mkdir /diskless/eta/boot</i>
      </pre>

      <p>
        DHCP und TFTP Setup: Der Client bekommt die Boot Informationen per DHCP und lädt alle benötigten Datein mit TFTP.
        Emergen Sie einfach DHCP und passen Sie es an Ihre Begebenheiten an. Fügen Sie nun folgendes
        in die <path>/etc/dhcp/dhcpd.conf</path> ein.
      </p>

      <note>
        Dies gibt dem Client eine statische IP Adresse und den Pfad eines PXE Bootimage, hier pxegrub.
        Sie müssen die MAC Addresse der Netzwerk Karte des Client und das Verzeichnis, in dem die Client Dateien liegen, anpassen.
      </note>

      <pre caption="dhcp.conf">
option option-150 code 150 = text ;
host eta {
hardware ethernet 00:00:00:00:00:00;
fixed-address <c>ip.add.re.ss</c>;
option option-150 "/eta/boot/grub.lst";
filename "/eta/boot/pxegrub";
}
      </pre>

      <p>
        Für TFTP, emerge <c>app-admin/tftp-hpa</c>. In <path>/etc/conf.d/in.tftpd</path>, tragen Sie folgendes ein:
      </p>

      <pre caption="in.tftpd">
INTFTPD_PATH="/diskless"
INTFTPD_USER="nobody"
INTFTPD_OPTS="-u ${INTFTPD_USER} -l -vvvvvv -p -c -s ${INTFTPD_PATH}"
      </pre>

      <p>
        Setup GRUB: Zum PXE Booten benutze ich GRUB. Sie müssen ihn selber kompilieren, um die Unterstützung für PXE Image zu aktivieren.
        Dies ist aber ziemlich einfach. Zuerst laden Sie die aktuellste Version der GRUB Sourcen herunter. (<c>emerge -f grub</c>
        plaziert den Tarball in <path>/usr/portage/distfiles</path>). Kopieren Sie den Tarball nach <path>/diskless</path>
        und kompilieren Sie sich ein PXE fähiges Binary. Nachdem das Binary gebaut wurde, kopieren Sie es in das Boot Verzeichnis
        des Client. Passen Sie nun die entsprechende <path>grub.lst</path> Konfiguration an.
      </p>

      <pre caption="grub setup">
# <i>tar zxvf grub-0.92.tar.gz</i>
# <i>cd grub-0.92</i>
# <i>./configure --help</i>
<codenote>In den Optionen sehen Sie eine Liste Unterstützter Netzwerk Karten. </codenote>
<codenote>Wählen Sie den zu Ihrer Karte passenden Treiber aus, er ist hier als $nic aufgeführt</codenote>
# <i>./configure --enable-diskless --enable-$nic</i>
# <i>make</i>
# <i>cd stage2</i>
# <i>cp pxegrub /diskless/eta/boot/pxegrub</i>
# <i>nano -w /diskless/eta/boot/grub.lst</i>
      </pre>

      <pre caption="grub.lst">
default 0
timeout 30

title=Diskless Gentoo
root (nd)
kernel /eta/bzImage ip=dhcp root=/dev/nfs nfsroot=<c>ip.add.re.ss</c>:/diskless/eta

<codenote>Für die nfsroot Option geben Sie die IP Adresse des Servers an </codenote>
<codenote>das Verzeichnis wo die Daten des Plattenlosen Client liegen (auf dem Server).</codenote>
      </pre>

      <p>
        Setup NFS: NFS ist ziemlich einfach zu konfigurieren. Sie müssen nur die Konfiguration in
        <path>/etc/exports</path> anpassen:
      </p>

      <pre caption="/etc/exports">
# <i>nano -w /etc/exports</i>
NFS file systems being exported. See exports(5).
/diskless/eta eta(rw,sync,no_root_squash)
      </pre>

      <p>
        Aktualisieren Sie Ihre Host Datei: Ein wichtiger Schritt ist nun, ihre <path>/etc/hosts</path> Datei an Ihre
        Bedürfnisse anzupassen.
      </p>

      <pre caption="/etc/hosts">
127.0.0.1 localhost

192.168.1.10 eta.example.com eta
192.168.1.20 sigma.example.com sigma
      </pre>

    </body>
  </section>
  <section>
    <title>Erstellen des Systems auf dem Server</title>
    <body>

      <p>
        Rebooten Sie den Server mit einer Gentoo LiveCD. Folgen Sie der Standardinstallation ABER mit den folgenden unterschieden:
        Wenn Sie das Dateisystem mounten, führen Sie folgendes aus (wobei hdaX die Partition ist, auf der Sie das /diskless Verzeichnis erstellen).
        Sie brauchen keine weiteren Dateisysteme zu mounten, da alle Dateien in das <path>/diskless/eta</path> Verzeichnis kommen.
      </p>

      <pre caption="Mounten der Dateisysteme">
#<i> mount /dev/hda3 /mnt/gentoo</i>
      </pre>

      <p>
        Stage Tarball und chroot: Dieses Beispiel benutzt einen Stage 3 Tarball.
        Mounten Sie <path>/proc</path> in Ihr <path>diskless</path> Verzeichniss und chrooten Sie in dieses, um mit der Installation fortzufahren.
        Folgen Sie den Anweisungen in der Installations Anleitung bis zur Kernel Konfiguration.
      </p>

      <warn>
        Seien Sie mit dem entpacken des Stage Tarball besonders vorsichtig.
        Sie wollen Ihn nicht über Ihre existierende Installation kopieren.
      </warn>

      <pre caption="Entpacken des Stage Tarball">
# <i>cd /mnt/gentoo/diskless/eta/</i>
# <i>tar -xvjpf  /mnt/cdrom/gentoo/stage3-*.tar.bz2</i>
# <i>mount -t proc /proc /mnt/gentoo/diskless/eta/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/diskless/eta/etc/resolv.conf</i>
# <i>chroot /mnt/gentoo/diskless/eta/ /bin/bash</i>
# <i>env-update</i>
# <i>source /etc/profile</i>
      </pre>

      <p>
        Kernel Konfiguration: Wenn Sie <c>make menuconfig</c> zur Kernel Konfiguration ausführen,
        vergessen Sie nicht die folgenden Optionen zusätzlich zu den anderen empfohlenen zu aktivieren:
      </p>

      <pre caption="menuconfig Optionen">
- Your network card device support

- Under "Networking options" :

[*] TCP/IP networking
[*] IP: kernel level autoconfiguration
[*] IP: DHCP support
[*] IP: BOOTP support


- Under "File systems --> Network File Systems" :

&lt;*&gt; NFS file system support
[*] Provide NFSv3 client support
[*] Root file system on NFS
      </pre>

      <p>
        Als nächstes konfigurieren Sie die <path>/etc/fstab</path> des Client.
      </p>

      <pre caption="/etc/fstab">
# <i>nano -w /etc/fstab</i>
/dev/cdroms/cdrom0 /mnt/cdrom iso9660 noauto,ro 0 0
proc /proc proc defaults 0 0
tmpfs /dev/shm tmpfs defaults 0 0
      </pre>

      <p>
        Bootloader: Installieren Sie keinen weiteren Bootloader, wir haben bereits einen: pxegrub.
        Beenden sie die Installation und starten Sie den Server neu. Starten Sie die Dienste, die Sie zum
        booten des neuen Client benötigen: DHCP, TFTPD, und NFS.
      </p>

      <pre caption="Starten benötigter Dienste">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/tftpd start</i>
# <i>/etc/init.d/nfs start</i>
      </pre>

    </body>
  </section>
  <section>
    <title>Booten des neuen Client</title>
    <body>

      <p>
        Um den neuen Client problemlos zu booten, müssen Sie das BIOS und die Netzwerk Karte so konfigurieren, dass PXE als
        erste Boot Methode genutzt wird und nicht das booten von CD-ROM oder einer Diskette.
        Sollten Sie dazu Hilfe benötigen, schauen Sie in die Bedienungsanleitung oder auf die Webseite des Herstellers.
        Die Netzwerk Karte sollte mittels DHCP eine IP Adresse bekommen und das GRUB PXE Image per TFTP laden.
        Dann sollten Sie einen nettes schwarz/weisses GRUB Menü sehen, wo Sie den zu bootenden Kernel auswählen und ENTER drücken.
        Wenn alles in Ordnung ist sollte der Kernel booten, das root-Dateisystem per NFS gemountet und ein
        LogIn-Prompt bereitstellt werden.
      </p>
    </body>
  </section>
</chapter>

<chapter>
  <title>Gentoo Installation aus einer existierenden Linux Distribution heraus</title>
  <section>
    <title>Anforderungen</title>
    <body>

      <p>
        Um Gentoo aus Ihrer existierenden Linux Distribution zu installieren benötigen
        Sie das chroot Kommando sowie eine Kopie eines beliebigen Stage Tarballs oder ein CD Image,
        dass Sie installieren möchten. Eine Verbindung ins Internet ist empfehlenswert, wenn
        Sie mehr installieren möchten, als in Ihrem Tarball enthalten ist.
        (BTW: Ein Tarball ist eine Datei, die auf .tbz, .tar.gz, .tar.bz2 oder .tbz2 endet).
        Der Autor benutzt RedHat Linux 7.3 als das "Host" System, aber das ist eher nicht wichtig.
        Also fangen wir an!
      </p>

    </body>
  </section>
  <section>
    <title>Überblick</title>
    <body>

      <p>
        Zunächst werden wir ein bisschen Platz für Gentoo schaffen, dann die neu gewonne Partition mounten,
        den Tarball entpacken, in das "Pseudo-System" chrooten und das Bauen von Gentoo starten.
        Nach dem Bootstrap Prozess werden wir einige Konfigurationen machem, um sicher zustellen, dass es bootet.
        Dann sind wir fertig zum Reboot und können Gentoo nutzen.
      </p>

    </body>
  </section>
  <section>
    <title>Wie kann ich Platz für Gentoo schaffen?</title>
    <body>

      <p>
        Die Root Partition ist das Dateisystem, dass als <path>/</path> gemounted wird.
        Ein kurzer Blick auf <c>mount</c> zeigt, wovon ich rede. Wir werden ausserdem df (disk free) benutzen,
        um zu sehen wieviel Platz uns bleibt. Beachten Sie, dass es nicht zwinged notwendig ist, die Größe der
        root-Partition zu ändern. Sie können auch die Größe anderer Partitionen ändern, darüber reden wir später.
      </p>


      <pre caption="Informationen zu bestehenden Dateisystemen">
# <i>mount</i>
/dev/hdb2 on / type ext3 (rw)
none on /proc type proc (rw)
none on /dev/pts type devpts (rw,gid=5,mode=620)
none on /dev/shm type tmpfs (rw)
# <i>df -h </i>
Filesystem           Size Used Avail Use% Mounted on
/dev/hdb2            4.0G 1.9G  2.4G  82% /
none          38M    0    38M   0% /dev/shm
      </pre>

      <p>
       Wie wir sehen hat die Partition <path>/dev/hdb2</path>, die als <path>/</path> gemounted ist, noch 2.4 GB frei.
       In meinem Fall, werde ich die Partition verkleinern, so dass nachher noch 400 MB freier Platz und 2 GB
       für Gentoo verfügbar sind. Nicht schlecht, da kann man schon ein bisschen was installieren. Für die meisten Benutzer
       sollte 1 GB ausreichen.
      </p>
    </body>
  </section>
  <section>
    <title>Installation von parted zum verändern der Partition(en)</title>
    <body>

      <p>
        Parted ist ein Werkzeug, dass von der GNU Stiftung bereitgestellt wird, ein altes und respektables
        großes Projekt dessen Software Sie in diesem Moment nutzen. Es gibt ein Tool, das uns in diesem
        Moment sehr hilfreich sein wird. Es heisst parted, 'Partition Editor'. Sie können es von
        <uri>http://www.gnu.org/software/parted/</uri> herunterladen.
      </p>

      <note>
        Es gibt andere Tools, die genau dasselbe tun können, der Autor ist aber unsicher/uninteressiert
        ob auch PartitionMagic(tm) oder andere Software dieser Art für diesen Zweck geeignet ist.
        Es ist im Zweifelsfall Ihre Aufgabe dies heraus zufinden.
      </note>

      <p>
        Schauen Sie auf der Webseite von parted, ob das Dateisystem, dessen Größe Sie ändern möchten,
        von parted unterstützt wird oder nicht. Wenn nicht haben Sie Pech und müssen Ihre Partitionen platt machen
        und ihr System neu installieren.
        Wenn Ihr Dateisystem von parted unterstützt wird, fahren Sie mit dem Download von parted fort.
        Nun haben wir ein Problem, wir wollen die Größe unserer root-Partition ändern, also müssen wir
        ein Mini-Linux von Diskette oder CD-ROM starten und parted auf eine Diskette kopieren.
      </p>

      <note>
        Stellen Sie sicher, dass das was mit Ihrer Partition anstellen wollen auch von parted unterstützt wird.
      </note>

      <p>
        Laden sie die tomsrtbt boot/root Diskette von <uri>http://freshmeat.net/tomsrtbt</uri> herunter,
        erstellen Sie nach der Anleitung eine Diskette und legen Sie eine neue Diskette für den nächsten Schritt ein.
      </p>

      <note>
        Beachten Sie, dass Linux ein Synomyn für "Es gibt mehrere Wege dies zu tun" ist. Sie könnten parted
        auch auf einer nicht gemounteten Partition ausführen oder eine anderes Mini-Linux auf die Diskette werfen.
        Vielleicht haben Sie ja auch noch Platz auf ihrer Festplatte frei, den Sie für Gentoo verwenden können.
      </note>

      <pre caption="Erstellen der Werkzeug Diskette">
# <i>mkfs.minix /dev/fd0</i>
480 inodes
1440 blocks
Firstdatazone=19 (19)
Zonesize=1024
Maxsize=268966912
      </pre>

      <p>
        Wir werden nun parted bauen. Wenn Sie die Sourcen noch heruntergeladen und entpackt haben ist nun ein guter Zeitpunkt dafür.
        Wechseln Sie in das parted-Sourcen Verzeichnis und führen Sie das folgende Kommando aus, um parted zu kompilieren und auf
        die Diskette zu kopieren.
      </p>

      <pre caption="Bauen der Werkzeug Diskette">
# <i> mkdir /floppy; mount -t minix /dev/fd0 /floppy &amp;&amp;
export CFLAGS="-O3 -pipe -fomit-frame-pointer -static" &amp;&amp; ./configure
&amp;&amp; make &amp;&amp; cp parted/parted /floppy &amp;&amp; umount /floppy </i>
      </pre>

      <p>
        Gratulation, Sie sind nun soweit und können neustarten und die Größe der Partition ändern,
        nachdem Sie einen kurzen Blick auf die parted Dokumentation geworfen haben.
        Das resizen sollte auch auf größeren Festplatten nicht länger als 30 Minuten dauern, seien
        Sie vorsichtig.
        Mounten Sie <path>/dev/fd0</path> nach <path>/floppy</path>.
        Führen Sie nun parted aus, daran anschliessend kommen wir zu den Sachen die wirklich Spaß machen,
        die Installation von Gentoo. Rebooten Sie nun in Ihr altes Linux System zurück.
      </p>

      <pre caption="Kommandos die Sie ausühren müsseo nachdem Sie das Mini-Linux gestartet haben">
# <i>mount /dev/fd0 /floppy </i>
# <i>cd /floppy; ./parted [drive you wish to operate on]</i>
(parted) <i> print </i>
Disk geometry for /dev/hdb: 0.000-9787.148 megabytes
Disk label type: msdos
Minor    Start       End     Type      Filesystem  Flags
1          0.031   2953.125  primary   ntfs
3       2953.125   3133.265  primary   linux-swap
2       3133.266   5633.085  primary   ext3
4       5633.086   9787.148  extended
5       5633.117   6633.210  logical
6       6633.242   9787.148  logical   ext3
(parted) <i> help resize </i>
  resize MINOR START END        resize filesystem on partition MINOR

        MINOR is the partition number used by Linux.  On msdos disk labels, the
        primary partitions number from 1-4, and logical partitions are 5
        onwards.
        START and END are in megabytes
(parted) <i> resize 2 3133.266 4000.000 </i>
      </pre>

      <impo>
        Seien Sie vorsichtig! Ihr Computer arbeitet. Werfen Sie einen Blick auf die Hardware LEDs,
        sie werden sehen dass ihr Computer wirklich arbeitet. Das resizen sollte zwischen
        2 und 30 Minuten dauern.
      </impo>

      <p>
        Nachdem sie Platz für Gentoo geschaffen haben rebooten Sie in Ihr altes Linux System.
        Führen Sie nun die Schritte 6 bis 17 der Installationsanleitung durch.
      </p>

      <p>
        Viel Spaß!
      </p>

    </body>
  </section>
</chapter>
</guide>
