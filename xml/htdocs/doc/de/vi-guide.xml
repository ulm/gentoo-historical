<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- CVS-Version 1.6 im Englischen Original -->

<guide link = "/doc/de/vi-guide.xml">
	<title>vi lernen -- die &quot;Spickzettel&quot;-Methode</title>
	<author title="Author"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
	<author title="Author"><mail link="stocke2@gentoo.org">Eric Stockbridge</mail></author>
	<author title="Übersetzung"><mail link="beejay@berlios.de">Benjamin Judas</mail></author>
	<author title="Korrketur"><mail link="pylon@gentoo.org">Lars Weiler</mail></author>

	<abstract>Dieser Leitfaden soll Ihnen beibringen, wie man einen Spickzettel
	benutzen kann um das Lernen von vi zu beschleunigen. Dieses ist der erste
	Leitfaden für vi, der sich an Anfänger richtet.</abstract>

	<version>1.1.1</version>

	<date>19. Mai 2003</date>

	<chapter>
		<title>Und los geht&apos;s</title>

		<section>
			<title>Einführung</title>

			<body>

				<p>Dieses Tutorial wird Ihnen zeigen, wie man den mächtigen visuellen
				Editor vi benutzt.  Anhand einer speziellen beschleunigten
				&quot;Spickzettel&quot;-Methode, versucht dieses Tutorial Sie zu einem
				fortgeschrittenen vi-Benutzer zu machen, und das ohne viel Zeit in
				Anspruch zu nehmen. In diesem vi-Tutorial werden Sie lernen sich
				innerhalb von Texten zu bewegen, Text zu bearbeiten, den insert-mode zu
				benutzen, Text zu kopieren und wieder einzufügen, und natürlich solch
				wichtige vim-Erweiterungen wie den Visual-Mode und
				Multi-Window-Editing.</p>

				<p>Wenn Sie vi nicht kennen oder Ihnen das Arbeiten damit unbequem
				erscheint, dann können Sie dieses Tutorial dazu benutzen, um Ihr
				Arbeiten mit einem der beliebtesten und mächtigsten Editoren im
				Linux/UNIX-Sektor zu beschleunigen.</p>

			</body>
		</section>

		<section>
			<title>Über den Leitfaden und das vi Lernen beschleunigen</title>

			<body>

				<p>Es gibt eine Sache im Speziellen, die es erschwert, vi zu lernen --
				vi hat unglaublich viele Kommandos.  Um vi also effektiv nutzen zu
				können, müssen Sie sich einige davon merken. Dies kann eine lange Zeit
				in Anspruch nehmen, und eines der Ziele dieses Tutorials ist eben nicht
				besonders viel Zeit zu beanspruchen.  Für uns ist das zu Beginn eine
				grosse Herausforderung: Wie kann ich Ihnen helfen, diese Kommandos
				innerhalb kurzer Zeit im Kopf zu haben?</p>

				<p>Um dieser Herausforderung entgegenzutreten während wir durch dieses
				Tutorial voranschreiten, werden wir uns Stückchen für Stückchen einen
				Spickzettel zusammenstellen. Dieser Zettel wird alle wichtigen vi-
				Kommandos enthalten. Nachdem Sie dieses Tutorial abgeschlossen haben,
				wird es Ihnen möglich sein auf diesen Spickzettel zurückzugreifen, wenn
				Sie ein bestimmtes Kommando vergessen haben. Nach einiger Zeit werden
				sich die Kommandos in Ihrem Kopf festgesetzt haben, und sie werden immer
				unabhängiger von diesem Spickzettel werden.  Mit der Spickzettel-Methode
				ist es möglich, vi schneller zu lernen als jemals zuvor.</p>

			</body>
		</section>

		<section>
			<title>Der Lernprozess</title>

			<body>

				<p>In diesem Leitfaden werde ich einige Methoden benutzen um Ihnen beim
				Lernen zu helfen.  Zuallererst beschreibe ich, wie ein bestimmtes
				Kommando funktioniert. Dann werde ich Sie auffordern, einmal selbst in
				vi dieses Kommando auszuprobieren (zur Übung), und dann werde ich Sie
				auffordern, das Kommando Ihrem Spickzettel hinzuzufügen. Wenn Sie vi
				schnell lernen möchten ist es wichtig, dass Sie jeden dieser Schritte
				auch durchführen. Das Kommando auszuprobieren und dann auf dem
				Spickzettel zu vermerken wird Ihnen helfen, sich das Kommando zu
				behalten.</p>

			</body>
		</section>

		<section>
		<title>Einführung in vim</title>

			<body>

				<p>Es gibt viele Versionen von vi, und ich werde Ihnen zeigen, wie man
				eine Version namens &quot;vim&quot; benutzt. vim ist sehr beliebt und
				besitzt einige Erweiterungen, die vi viel interessanter machen (wann
				immer ich ein vim-spezifisches Kommando benutze, werde ich es
				anzeigen).  Wenn Sie vim installieren möchten, dann können Sie es von
				<uri link="http://www.vim.org/">www.vim.org</uri> herunterladen.
				Zusätzlich zum erweiterten Kommandozeilen-vi, kommt auch gvim mit auf
				den Rechner, ein netter grafischer Editor, der so eingestellt werden
				kann, dass er die ausgezeichnete GTK+ GUI-Bibliothek benutzt. Hier ein
				gvim-Screenshot von meinem System:</p>

				<figure link="http://www.ibiblio.org/web-gentoo/images/vishot.png" short="Screenshot" caption="VIM Screenshot"/>

				<p>Wenn Sie ein vi-Neuling sind, dann versuchen Sie, gvim auf Ihrem
				System zum Laufen zu bekommen. Von einer GUI aus sind die Dinge etwas
				einfacher für Anfänger.</p>

			</body>

		</section>
	</chapter>

	<chapter>
		<title>Erste Schritte</title>

		<section>
			<title>Eine Datei benutzen</title>

			<body>

				<p>Bevor Sie vi benutzen um Dateien zu bearbeiten, müssen Sie erst
				einmal wissen, wie Sie sich mit vi innerhalb des Textes bewegen können.
				vi hat eine Menge von Bewegungs-Kommandos, und wir werden uns viele von
				diesen ansehen. Für diesen teil des Tutorials suchen Sie sich bitte eine
				unwichtige Textdatei und öffnen diese mit vi, indem Sie folgendes am
				Kommandoprompt Ihrer Shell eingeben:</p>

<pre>
$ <c>vi meinedatei.txt</c>
</pre>

				<p>Wenn Sie vim installiert haben, dann geben sie <c>vim
				meinedatei.txt</c> ein. Wenn Sie die Benutzung von gvim bevorzugen, dann
				geben Sie bitte <c>gvim meinedatei.txt</c> ein.
				<path>meinedatei.txt</path> ist durch den Namen einer einfachen
				Textdatei auf Ihrem System zu ersetzen.</p>

			</body>
		</section>

		<section>
			<title>vi intern</title>

			<body>

				<p>Nachdem vi geladen ist, sollten Sie einen Teil der Textdatei auf dem
				Bildschirm sehen.  Herzlichen Glückwunsch! - Sie befinden sich nun in
				vi. Im Gegensatz zu anderen Editoren, befindet sich vi nach dem Start in
				einem speziellen so genannten &quot;Command-Mode&quot;. Das heisst, dass
				wenn Sie nun <c>l</c> auf Ihrer Tastatur drücken, können Sie den Cursor
				einen Zeichen nach rechts bewegen, anstatt den Buchstaben <c>l</c>in den
				Text einzufügen. Im Command-Mode werden die Buchstaben auf Ihrer
				Tastatur dazu benutzt, Kommandos an vi zu senden anstatt Buchstaben in
				den Text einzufügen. Die essentiellsten aller Kommandos sind die zur
				Bewegung des Cursors. Lassen Sie uns einige ansehen.</p>

			</body>
		</section>
	</chapter>

	<chapter>
		<title>Im Text bewegen</title>

		<section>
			<title>Mit vi im Text bewegen, Teil 1</title>

			<body>

				<p>Im Command-Mode können Sie die <c>h</c>,<c>j</c>,<c>k</c> und
				<c>l</c> Tasten benutzen, um den Cursor nach links, unten, oben und
				rechts zu bewegen. Wenn Sie eine moderne Version von vi benutzen, dann
				können Sie außerdem auch die Pfeiltasten zu diesem Zweck benutzen. Die
				Tasten <c>h</c>,<c>j</c>,<c>k</c> und <c>l</c> sind recht nützlich, denn
				wenn Sie sich an diese gewöhnt haben, dann können Sie sich innerhalb der
				Datei bewegen ohne Ihre Finger vom Hauptfeld der Tastatur nehmen zu
				müssen. Veruschen Sie <c>h</c>,<c>j</c>,<c>k</c> und <c>l</c> (und die
				Pfeiltasten) zu benutzen, um sich innerhalb des Textes zu bewegen.
				Versuchen Sie <c>h</c> zu benutzen um an den Beginn einer Zeile zu
				springen. Beachten Sie bitte, dass vi es nicht erlaubt, zum Ende der
				vorherigen Zeile zu springen, wenn Sie sich am Beginn einer Zeile
				befinden und dann <c>h</c> drücken. Das selbe gilt für das Springen auf
				die nächste Zeile, wenn Sie sich am Ende einer Zeile befinden.</p>

			</body>

		</section>

		<section>
			<title>Mit vi im Text bewegen, Teil 2</title>

			<body>

				<p>vi bietet spezielle Abkürzungen um zum Anfang oder Ende einer zeile
				zu springen. Sie können <c>0</c> (Null) drücken, um zum ersten Zeichen
				in einer Zeile zu springen, und sie können <c>$</c> benutzen, um zum
				letzten Zeichen in einer Zeile zu springen. Probieren Sie die Kommandos
				aus und sehen Sie, was passiert. Da vi so viele nützliche
				Bewegungs-Kommandos beherrscht, ist er der ideale &quot;Pager&quot; (wie
				&quot;less&quot; oder &quot;more&quot;). vi als Pager zu benutzen wird
				Ihnen ausserdem helfen, die Bewegungs-Kommandos schneller zu lernen.</p>

				<p>Sie können auch <c>&lt;Strg&gt;F</c> und <c>&lt;Strg&gt;B</c>
				benutzen, um sich seitenweise vorwärts und rückwärts zu bewegen. Moderne
				Versionen von vi (wie vim) erlauben es auch BildAuf und BildAb für
				diesen Zweck zu benutzen.</p>

			</body>

		</section>

		<section>
			<title>Wortsprünge, Teil 1</title>

			<body>

				<p>vi erlaubt es auch, den Cursor wortweise links oder rechts zu
				bewegen. Um zum <e>ersten</e> Zeichen des nächsten Wortes zu gehen,
				drücken Sie <c>w</c>. Um zum <e>letzten</e> Zeichen des nächsten Wortes
				zu gehen, drücken Sie <c>e</c>. Um zum ersten Buchstaben des
				<e>vorherigen</e> Wortes zu gelangen, drücken Sie <c>b</c>. Probieren
				Sie es aus!</p>

			</body>

		</section>

		<section>
			<title>Wortsprünge, Teil 2</title>

			<body>

				<p>Nachdem Sie nun ein bisschen mit den Kommandos zur wortweisen
				Bewegung herumgespielt haben, haben Sie vielleicht festgestellt, dass vi
				Wörter wie &quot;foo-bar-oni&quot; als fünf seperate Wörter ansieht.
				Dies ist so, weil vi von Hause aus Wörter anhand von Leer- <e>oder</e>
				so genannten Delimiterzeichen trennt. Aus diesem Grund wird foo-bar-oni
				als fünf Wörter angesehen:
				&quot;foo&quot;,&quot;-&quot;,&quot;bar&quot;,&quot;-&quot; und
				&quot;oni&quot;.</p>

				<p>Manchmal ist es genau das, was man möchte, und manchmal kann man
				dieses Feature überhaupt nicht gebrauchen.  Glücklicherweise versteht vi
				auch das Konzept von &quot;bigword&quot;. vi trennt bigwords anhand von
				<e>Leerzeichen oder Zeilenumbrüchen</e>. Dies bedeutet, dass foo-bar-oni
				zwar als 5 Wörter angesehen wird aber nur als ein bigword.</p>

			</body>

		</section>

		<section>
			<title>Wortsprünge, Teil 3</title>

			<body>

				<p>Um zum nächsten und vorherigen Bigword zu springen, können Sie ein
				grossgeschriebenes Wortbewegungskommando benutzen. Benutzen Sie
				<c>W</c>, um zum ersten Zeichen des nächsten Bigwords zu springen,
				<c>E</c>, um zum letzten Zeichen des nächsten Bigwords zu springen und
				<c>B</c>, um zum ersten Zeichen des vorhergehenden Bigwords zu springen.
				Probieren Sie es aus und vergleichen Sie die entsprechenden Wort- und
				Bigwordbewegungskommandos bis Sie die Unterschiede verstehen.</p>

			</body>

		</section>

		<section>
			<title>Grössere Sprünge</title>

			<body>

				<p>Wir müssen noch ein paar Kommandos mehr behandeln, bevor wir unseren
				Spickzettel zusammenstellen können.  Sie können die <c>(</c> und
				<c>)</c> benutzen um zum Anfang des vorhergehenden und des nächsten
				Satzes zu springen.  Zusätzlich dazu können Sie <c>{</c> oder <c>}</c>
				benutzen, um zum Anfang des aktuellen bzw. des nächsten Absatzes zu
				springen.  Auch hier ist wieder einmal ausprobieren angesagt.</p>

			</body>

		</section>
	</chapter>


	<chapter>
		<title>Beenden</title>

		<section>
			<title>Beenden</title>

			<body>

				<p>Wir haben die grundsätzlichen Bewegungskommandos behandelt, aber es
				gibt noch weitere Kommandos die Sie kennen müssen. Die Eingabe <c>:q</c>
				beendet vi. Sollte dies nicht funktionieren, dann haben Sie vielleicht
				die Datei geändert. Um vi nun zu beenden und die evtl. gemachten
				Änderungen zu verwerfen, müssen Sie <c>:q!</c> eingeben. Sie sollten nun
				wieder zurück auf Ihrer Shell sein.</p>

				<p>In vi ist jedes mit einem &quot;:&quot; beginnenden Kommandos ein
				sogenanntes <e>ex-mode</e> Kommando. Der Grund hierfür ist, dass vi
				einen nicht visuellen Editor mit dem Namen <e>ex</e> eingebaut hat. Er
				kann ähnlich wie sed dazu benutzt werden um zeilenbasierte
				Bearbeitungsfunktionen durchzuführen. Desweiteren kann er auch dazu
				benutzt werden um vi zu beenden - wie wir eben gerade gesehen haben.
				Sollten Sie jemals die Taste <c>Q</c> drücken, während Sie sich im
				Kommandomodus befinden, dann wird vi sofort in den ex Modus schalten.
				Wenn dies passiert, wird Ihnen ein : Prompt präsentiert, das Drücken von
				Enter wird den ganzen Bildschirm nach oben rollen. Um wieder in den
				guten alten vi-Modus zurückzukommen, geben Sie einfach nur vi ein und
				drücken Enter.</p>

			</body>

		</section>
	</chapter>

	<chapter>
		<title>Der Spickzettel</title>

		<section>
			<title>Die Anfänge des Spickzettels</title>

			<body>

				<p>Wir haben einige Kommandos behandelt und nun ist es Zeit, diese auf
				unseren Spickzettel zu übertragen.  Für den Spickzettel brauchen Sie ein
				Blatt Papier (wir werden einige Informationen auf diesem Blatt
				vermerken!). Hier ist ein Bild meines Spickzettels, nachdem ich alle
				Kommandos aufgeschrieben habe, die wir bis hierhin behandelt haben.
				Versuchen Sie bitte, meinem Layout zu folgen, sodass alles auf ein Blatt
				Papier passt.</p>

				<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-first.png" short="Erster Teil des Spickzettels" caption="Spickzettel"/>

			</body>

		</section>

		<section>
			<title>Vielseitiger vi</title>

			<body>

				<p>Lassen Sie uns mit unserem Kommandoschnelldurchlauf fortfahren. Im
				Kommandomodus können Sie zu einer bestimmten Zeile springen, indem Sie
				<c>G</c> verwenden. Um zur ersten Zeile in einer Datei zu springen,
				geben Sie <c>1G</c> ein. Bitte beachten Sie dass grosse G!</p>

				<p>Wenn Sie zur nächsten Erscheinung eines bestimmten Textmusters
				springen möchten, geben Sie <c>/&lt;regexp&gt;</c> ein und drücken Sie
				anschliessend <c>Enter</c>. Ersetzen Sie &lt;regexp&gt; mit dem
				Regulären Ausdruck nach dem Sie suchen. Wenn Sie nicht wissen, wie man
				reguläre Ausdrücke benutzt, dann haben Sie keine Angst : Die Eingabe von
				<c>/foo</c> wird zum nächsten Auftauchen von <e>foo</e> springen. Das
				einzige wo Sie aufpassen müssen sind die speziellen Zeichen <e>^</e>,
				<e>.</e>, <e>$</e> oder <e>\</e>. Setzen Sie diesen Zeichen einen
				Backslash voran (<e>\</e>) und es sollte funktionieren. Zum Beispiel
				wird <c>/foo\.gif</c> zum nächsten Auftauchen von von
				&quot;<e>foo.gif</e>&quot; springen.</p>

				<p>Um die Suche in Vorwärtsrichtung fortzusetzen, drücken Sie <c>n</c>
				auf der Tastatur. Um rückwärts zu suchen drücken Sie <c>N</c>. Wie immer
				sollten Sie diese Kommandos in Ihrer vi-Umgebung testen. Sie können auch
				<c>//</c> eingeben, um die letzte Suche zu wiederholen.</p>

			</body>

		</section>
	</chapter>

	<chapter>
		<title>Speichern und Bearbeiten</title>

		<section>
			<title>Speichern und Speichern unter...</title>

			<body>

				<p>Wir haben behandelt, wie das <e>ex</e> Kommando <c>:q</c> zu benutzen
				ist, um vi zu beenden. Wenn Sie die gemachten Änderungen Speichern
				wollen, dann geben Sie <c>:w</c> ein. Wenn Sie die Änderungen in einer
				anderen Datei speichern wollen, dann geben Sie <c>:w dateiname.txt</c>
				ein, um in der Datei <path>dateiname.txt</path> zu speichern. Wenn Sie
				Speichern und Beenden wollen, so geben Sie <c>:x</c> oder <c>:wq</c>
				ein.</p>

				<p>In vim (und anderen fortgeschrittenen vi Editoren wie elvis) können
				Sie mehrere Puffer auf einmal geöffnet haben. Um eine Datei in einem
				neuen Fenster zu öffnen, geben Sie <c>:sp dateiname.txt</c> ein.
				<path>dateiname.txt</path> wird in einem neuen geteilten Fenster
				erscheinen. Um zwischen Fenstern hin und her zu springen, geben Sie
				<c>&lt;Strg&gt;w&lt;Strg&gt;w</c> (also zweimal Strg-w) ein. Alle
				<c>:q</c>, <c>:q!</c>, <c>:w</c> und <c>:x</c> -Eingaben, die Sie
				machen, werden jeweils nur auf das momentan aktive Fenster
				angewendet.</p>

			</body>

		</section>

		<section>
			<title>Einfache Änderungen</title>

			<body>

				<p>Nun wird es Zeit einige der einfachen Bearbeitungskommandos
				kennenzulernen. Die Kommandos, die wir hier behandeln, werden
				&quot;einfache&quot; Bearbeitungskommandos genannt, da Sie sie im
				Kommandomodus verwenden. Die komplexeren Bearbeitungskommandos bringen
				Sie in den Einfügemodus (insert mode) - ein Modus, der es Ihnen erlaubt
				Text von der Tastatur ganz normal einzugeben.  Wir werden gleich darauf
				zurück kommen.</p>

				<p>Versuchen Sie einmal, den Cursor über einige Zeichen zu stellen und
				die Eingabe von <c>x</c> zu wiederholen.  Sie werden sehen, dass dies
				jeweils den aktuellen Buchstaben am Cursor löschen wird. Nun bewegen Sie
				sich zur Mitte eines Absatzes irgendwo im Text und geben Sie <c>J</c>
				(Gross!) ein. Sie werden sehen, dass dieses Kommando vi anweist, die
				nächste Zeile an das Ende der aktuellen Zeile anzuhängen. Nun bewegen
				Sie den Cursor über ein Zeichen und geben <c>r</c> ein und dann ein
				neues Zeichen; Sie werden sehen, dass das alte Zeichen gegen das neu
				eingegebene ersetzt wurde. Zuletzt bewegen Sie den Cursor zu irgendeiner
				Zeile im Text und geben Sie <c>dd</c> ein. Sie werden sehen, daß
				<c>dd</c> die aktuelle Textzeile löscht.</p>

			</body>

		</section>

		<section>
			<title>Wiederholen und löschen</title>

			<body>

				<p>Sie können jedes Bearbeitungskommando wiederholen, indem Sie <c>.</c>
				drücken. Wenn Sie damit experimentieren werden Sie merken, dass
				<c>dd...</c> vier Zeilen löschen wird und <c>J......</c> vier Zeilen
				aneinanderhängen wird.  Wie erwartet, bietet vi eine weitere
				Abkürzung.</p>

				<p>Um Text zu löschen können Sie auch das <c>d</c> Kommando kombiniert
				mit Bewegungskommando benutzen. Zum Beispiel wird <c>dw</c> alles von
				der aktuellen Position bis zum Anfang des nächsten Wortes löschen;
				<c>d)</c> wird alles bis zum Beginn des nächsten Satzes löschen und
				<c>d}</c> wird den kompletten Rest des aktuellen Absatzes löschen.
				Experimentieren Sie mit dem <c>d</c> Kommando und den anderen
				Bearbeitungskommandos bis Sie sich mit ihnen vertraut fühlen.</p>

			</body>

		</section>

		<section>
			<title>Rückgängig!</title>

			<body>

				<p>Nun, da wir mit Löschen experimentieren ist es sicherlich genau der
				richtige Zeitpunkt, auch zu lernen, wie man seine Änderungen wieder
				rückgängig macht. Durch das Drücken von <c>u</c> erlaubte die
				Originalversion von vi nur den letzten Bearbeitungsschritt wieder
				rückgängig zu machen. Trotzdem erlauben moderne vi Versionen wie vim
				mehrere Änderungen durch wiederholtes drücken von <c>u</c> auch weitere
				Änderungen an Ihrer Datei wieder rückgängig zu machen. Versuchen Sie
				einige der <c>d</c> und <c>u</c> Kommandos miteinander zu
				kombinieren.</p>

			</body>

		</section>

		<section>
			<title>Aktualisieren des Spickzettels</title>

			<body>

				<p>Es wird Zeit unseren Spickzettel zu akualisieren! Nachdem Sie alle
				Kommandos hinzugefügt haben, die wir bisher behandelten, sollte der
				Spickzettel in etwa so aussehen:</p>

				<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-edit.png" short="Spickzettel" caption="Spickzettel mit Bearbeitungskommandos"/>

			</body>

		</section>
	</chapter>

	<chapter>
		<title>Einfügemodus</title>

		<section>
			<title>Einfügemodus</title>

			<body>

				<p>Bisher haben wir behandelt, wie man sich mittels vi in Texten bewegt,
				Datei Ein- und Ausgabe realisiert und ein paar grundlegende
				Bearbeitungskommandos durchführt. Aber ich habe Ihnen bisher immer nicht
				gezeigt, wie Sie freie Texteingaben machen können. Dies war Absicht,
				denn vi&apos;s Einfügemodus (insert mode) ist zuerst ein bisschen
				kompliziert. Nachdem Sie sich mit dem Einfügemodus vertraut gemacht
				haben, wird Ihnen die Komplexität (und Flexibilität) unverzichtbar
				erscheinen.</p>

				<p>Im vi Einfügemodus haben Sie die Möglichkeit, Text direkt am
				Bildschirm einzugeben - ganz so wie es auch in vielen anderen Editoren
				und Textverarbeitungen der Fall ist. Sobald Sie Ihre Änderungen gemacht
				haben, können Sie Escape drücken, um in den Kommandomodus
				zurückzukehren. Sie kommen in den Einfügemodus, indem Sie <c>i</c> oder
				<c>a</c> eingeben. Wenn Sie <c>i</c> eingeben, dann wird Ihr Text vor
				dem aktuellen Zeichen <e>eingefügt</e> werden. Wenn Sie <c>a</c>
				eingeben, dann wird Ihr Text hinter dem aktuellen
				Zeichen<e>angehängt</e> werden. Beachten Sie bitte: nachdem Sie Ihren
				Text eingegeben haben drücken Sie bitte <c>&lt;ESC&gt;</c> um in den
				Kommandomodus zurückzukehren.</p>

			</body>

		</section>

		<section>
			<title>Vorteile des Einfügemodus</title>

			<body>

				<p>Machen Sie weiter und versuchen Sie, die <c>a</c> und <c>i</c>
				Kommandos zu benutzen. Drücken Sie entweder <c>a</c> oder <c>i</c>,
				geben Sie ein wenig Text ein und dann drücken Sie Escape, um wieder in
				den Kommandomodus zurückzukehren. Nachdem Sie <c>a</c> oder <c>i</c>
				gedrückt haben, versuchen Sie <c>&lt;ENTER&gt;</c> einzugeben und passen
				Sie auf, was passiert. Durch die Benutzung der Pfeiltasten und
				<c>&lt;DEL&gt;</c>-Taste können Sie beachtliche Bearbeitungsschritte
				machen, ohne ständig in den Eingabemodus und wieder heraus zu
				springen.</p>

			</body>

		</section>

		<section>
			<title>Einfügeoptionen</title>

			<body>

				<p>Hier kommen noch ein paar andere praktische Möglichkeiten, um in den
				Einfügemodus zu gelangen. Drücken Sie <c>A</c> (Gross!) um - unabhängig
				von der aktuellen Position in der Zeile - mit dem Anhängen am
				<e>Ende</e> der Zeile zu beginnen. Sie können auch <c>I</c> (Gross!)
				drücken, um den Text am <e>Anfang</e> der Zeile einzufügen. Oder
				<c>o</c> um eine neue Leerzeile unter der aktuellen Zeile einzufügen, in
				die Sie dann Text eingeben können, und <c>O</c> (Gross!) um eine neue
				Zeile über der aktuellen einzufügen.  Um die aktuelle Zeile mit einer
				neuen Zeile zu überschreiben geben Sie bitte <c>cc</c> als Kommando.  Um
				innerhalb der Zeille Alles von der aktuellen Position bis zum Ende hin
				zu löschen können Sie <c>c$</c> eingeben. Um umgekehrt alles von der
				aktuellen Position bis zum Anfang der Zeile zu löschen, geben Sie das
				Kommando <c>c0</c> ein.</p>

				<p>Zusätzlich dazu, dass jedes dieser Kommandos eine spezielle Operation
				durchführt, bringen sie Sie in den Einfügemodus. Nachdem Sie Ihren Text
				eingegeben haben, drücken Sie <c>&lt;ESC&gt;</c> um in den Kommandomodus
				zurückzukehren.</p>

			</body>

		</section>

		<section>
			<title>Textänderungen</title>

			<body>

				<p>Wir haben das <c>c</c> Kommando bisher benutzt, wenn wir <c>cc</c>,
				<c>c0</c> und <c>c$</c> angewendet haben.  <c>cc</c> ist eine spezielle
				Form des Änderungskommandos, ähnlich zu <c>dd</c>. Die <c>c0</c> und
				<c>c$</c> Kommandos sind Beispiele der Anwendung des Änderungskommandos
				in Verbindung mit einem Bewegungskommandos. In dieser Form arbeitet
				<c>c</c> gleichwertig zu <c>d</c>, mit Außnahme darin bestehend, dass es
				Sie im Einfügemodus lässt, sodass Sie ersetzenden Text für die gelöschte
				Region eingeben können. Versuchen Sie einige der Bewegungskommandos mit
				<c>c</c> zu kombinieren und probieren Sie sie mit Ihrer Datei aus (Tipp
				: <c>cW</c>, <c>ce</c>, <c>c(</c> ).</p>

			</body>

		</section>
	</chapter>

	<chapter>
		<title>Verbund-Kommandos</title>

		<section>
			<title>Verbund-Kommandos</title>

			<body>

				<p>vi wird <e>wirklich</e> sehr mächtig, wenn Sie damit beginnen
				Verbund-Kommandos (also Kombinationen) wie z.B.  <c>d{</c> and <c>cw</c>
				zu benutzen. Zusätzlich zu diesen Kommandos können Sie eine Zahl mit
				einem Bewegungskommando kombinieren, wie zum Beispiel <c>3w</c>, welches
				vi anweist drei Wörter nach rechts zu springen. Hier ein paar Beispiele
				zu &quot;Bewegungskombinationen&quot;: <c>12b</c>, <c>4j</c>.</p>

				<p>Zusätzlich zu (Zahl)(Bewegunskommando)-Kombinationen erlaubt vi auch
				<c>d</c> oder <c>c</c> mit einer Zahl oder einem Bewegungskommando zu
				kombinieren. So wird zum Beispiel <c>d3w</c> die nächsten drei Wörter
				löschen und <c>d2j</c> wird die aktuelle und die nächsten beiden Zeilen
				löschen. Probieren Sie einige <c>d</c> und <c>c</c> Kombinationen aus,
				um ein Gefühl dafür zu bekommen, wie mächtig und schnell das Editieren
				mit vi sein kann. Sobald Ihnen diese Kommandos normal erscheinen, werden
				Sie die Fähigkeit besitzen Dateien in unglaublicher Geschwindigkeit zu
				bearbeiten.</p>

			</body>

		</section>

		<section>
			<title>Aktualisieren des Spickzettels</title>

			<body>

				<p>Es ist wieder einmal Zeit, den Spickzettel zu aktualisieren. Hier
				sehen Sie, wie er in etwa nun aussehen sollte:</p>

				<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-compound.png" short="Spickzettel" caption="Spickzettel mit Verbundkommandos"/>

			</body>

		</section>

		<section>
			<title>Produktivitätssteigernde Fähigkeiten</title>

			<body>

				<p>Bisher haben wir behandelt, wie man Bewegungen durchführt, Speichert
				und Beendet, einfache Änderungen und Löschungen realisiert, und wie man
				den Einfügemodus benutzt.  Mit den Sachen die Sie bisher auf Ihrem
				Spickzettel haben, sollten Sie schon jegliche Aufgabe erledigen
				können.</p>

				<p>Trotz Alledem: vi hat viele weitere mächtige Kommandos. In diesem
				Abschnitt werden Sie lernen, wie man <e>Ausschneidet</e>, <e>Kopiert</e>
				und <e>Einfügt</e>, <e>Sucht</e> und <e>Ersetzt</e> und
				<e>Autoindent</e> (automatisches Einrücken) benutzt.  Diese Kommandos
				tragen dazu bei, vi spassiger und produktiver zu machen.</p>

			</body>

		</section>

		<section>
			<title>Visual mode</title>

			<body>

				<p>Die beste Möglichkeit zum Ausschneiden und Einfügen ist der Visual
				Mode, ein spezieller Modus der den modernen Versionen von vi (wie vim
				und elvis) hinzugefügt wurde. Sie können sich den Visual Mode als einen
				Modus mit Texthervorhebung vorstellen. Sobald der Text hervorgehoben
				ist, kann er kopiert oder gelöscht und dann eingefügt werden. Wenn Sie
				gvim benutzen, dann können Sie Text hervorheben, indem Sie einfach mit
				der linken Maustaste gedrückt über einen beliebigen Bereich fahren.</p>

				<figure link="http://www.ibiblio.org/web-gentoo/images/vihighlight.png" short="Hervorgehobener Text" caption="VIM mit hervorgehobenen Text"/>

				<p>Desweiteren können Sie auch in den Visual-Mode gehen indem Sie
				<c>v</c> drücken (dies wird für Sie auch die einzige Möglichkeit
				darstellen, wenn Sie vi aus der Konsole benutzen).  Dann können Sie den
				Cursor bewegen, indem Sie Bewegungskommandos benutzen (normalerweise die
				Pfeiltasten) und damit einen Textbereich markieren. Sobald er einmal
				hervorgehoben ist, können wir den Text ausschneiden oder kopieren.</p>

				<p>Wenn Sie Text kopieren, dann drücken Sie <c>y</c> (das für
				&quot;yank&quot;, also &quot;rausreissen&quot; steht).  Wenn Sie Text
				ausschneiden wollen, dann drücken Sie <c>d</c>. Sie werden dann zurück
				in den Kommandomodus gebracht. Nun bewegen Sie den Cursor zu der
				Position, an der Sie den ausgeschnittenen oder kopierten Text einfügen
				wollen und drücken Sie <c>P</c> um den Text nach dem Cursor einzufügen,
				oder drücken Sie <c>p</c> um den Text vor dem Cursor einzufügen. Fertig
				- der Ausschneide-/Kopiervorgang ist schon erledigt!  Versuchen Sie ein
				paar Kopier-, Ausschneide- und Einfügeoperationen bevor Sie zum
				nächsten Abschnitt fortfahren.</p>

			</body>

		</section>

		<section>
			<title>Replacing text</title>

			<body>

				<p>Um Textmuster zu ersetzen, benutzen wir den <e>ex</e>-Modus. Wenn Sie
				das erste Muster auf der aktuellen Zeile ersetzen möchten, geben Sie
				<c>:s/&lt;regexp&gt;/&lt;replacement&gt;/</c> ein und drücken Sie
				<c>&lt;ENTER&gt;</c>, wobei &lt;regexp&gt; das Muster ist, dass gesucht
				und ersetzt werden soll und &lt;replacement&gt; das Ersetzmuster
				darstellt. Um alle entsprechungen auf der aktuellen Zeile zu ersetzen,
				geben Sie <c>:s/&lt;regexp&gt;/&lt;replacement&gt;/g</c> ein. Um jedes
				Vorkommen innerhalb der Datei zu ersetzen (das will man normalweise),
				geben Sie <c>:%s/&lt;regexp&gt;/&lt;replacement&gt;/g</c> ein. Wenn Sie
				global alles ersetzen möchten, aber vi vor jeder Ersetzung nachfragen
				soll, dann geben Sie <c>:%s/&lt;regexp&gt;/&lt;replacement&gt;/gc</c>
				(steht für &quot;bestätigen&quot;) ein und drücken Sie
				<c>&lt;ENTER&gt;</c>.</p>

			</body>

		</section>

		<section>
			<title>Indentation</title>

			<body>

				<p>vi beherrscht Automatisches Einrücken, welches als Hilfe gedacht ist,
				wenn Sie Quellcode editieren. Die meisten modernen Versionen von vi (wie
				vim) werden diesen Modus automatisch aktivieren, wenn Sie eine
				Quellcodedatei bearbeiten (wie z.B.  eine .c-Datei). Wenn Automatisches
				Einrücken aktiviert ist, dann können Sie mittels <c>&lt;Strg&gt;d</c>
				die Einrückung eine Stufe nach links bewegen, und mit
				<c>&lt;Strg&gt;t</c> eine Stufe nach rechts. Wenn Automatisches
				Einrücken nicht automatisch aktiviert wurde, dann können Sie es manuell
				anschalten indem Sie <c>:set autoindent</c> im <e>ex</e> Modus eingeben.
				Sie können vi auch Ihre bevorzugte Tabulatorweite zu benutzen; dies geht
				mittels des <c>:set tabstop</c> Kommandos. <c>:set tabstop=4</c> ist
				recht beliebt.</p>

			</body>

		</section>

		<section>
			<title>Der letzte Spickzettel</title>

			<body>

				<p>Nun gut - dies ist das Ende des Tutorials! Nachdem Sie nun all die
				fortgeschrittenen Editierkommandos auf dem Spickzettel notiert haben,
				sollte er in etwa so aussehen:</p>

				<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-final.png" short="Spickzettel" caption="Letzter Spickzettel"/>

				<p>Haben Sie Ihren Spickzettel immer bei der Hand und fangen Sie an mit
				vi Dateien zu editieren und E-Mails zu verfassen. Schauen Sie auf den
				Spickzettel wenn nötig: Innerhalb einer Woche werden Sie feststellen,
				dass Sie fast alle Kommandos behalten haben und Ihre Produktivität mit
				vi wird durch die Decke platzen! ;-)</p>

			</body>

		</section>

		<section>
			<title>Ressourcen</title>

			<body>

				<p>Hier sind ein paar Ressourcen, die Ihnen sicherlich weiterhelfen,
				wenn Sie mehr über vi lernen wollen:</p>

				<ul>
					<li><uri link="http://www.thomer.com/thomer/vi/vi.html">Die "vi Lovers Home Page"</uri>, Eine hervorragende Ressource für alles rund um vi.</li>
					<li><uri link="http://www.vim.org/">Die &quot;vim Homepage&quot;</uri> ist der Ort für Infos rund um vim.</li>
					<li>Wenn Sie nach einem guten, altmodischen Buch suchen, dann ist
					<uri link="http://www.oreilly.com/catalog/vi6/">&quot;Learning the vi Editor&quot;, 6. Ausgabe</uri> sicherlich das Richtige für Sie. Viel Inhalt über vi und vi-Klone.</li>
				</ul>

			</body>

		</section>
	</chapter>
</guide>
