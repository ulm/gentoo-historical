<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/de/portage-utils.xml" lang="de">

<title>Portage-utils</title>

<author title="Autor">
  <mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>
<author title="Bearbeiter">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Bearbeiter">
  <mail link="vanquirius@gentoo.org">Marcelo Góes</mail>
</author>
<author title="Übersetzer">
  <mail link="stefansusenet@nurfuerspam.de">Stefan Kienzl</mail>
</author>

<abstract>
Dieser Leitfaden behandelt die gebräuchliche Verwendung der portage-utils, eine
Gruppe von schnellen, in C geschriebenen, Portage Hilfsprogrammen.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<!-- English CVS Version: 1.2 -->

<version>1.1</version>
<date>2006-05-01</date>

<chapter>
<title>Einleitung</title>
<section>
<body>

<p>
<c>portage-utils</c> ist eine Sammlung von sehr schnellen, in C geschriebenen
Hilfsmitteln, die dafür gedacht sind, eine schnellere aber weniger umfangreiche
Alternative zu ihrem Gegenstück, dem <c>gentoolkit</c>, zu bieten. Bitte
beachten Sie, dass <c>portage-utils</c> nicht dafür gedacht ist,
<c>gentoolkit</c> zu ersetzen. Seine Werkzeuge sind viel effizienter als
vergleichbare aus <c>gentoolkit</c> und sind eventuell sogar besser geeignet um
in Skripten, welche Portage wiederkehrend aufrufen, eingesetzt zu werden,
allerdings bietet <c>portage-utils</c> nicht dieselbe Funktionalität. Es
beachtet Eclasses nicht und stellt keine Werkzeuge wie <c>revdep-rebuild</c>
und <c>glsa-check</c> zur Verfügung.
</p>

<p>
Mehr Information über <c>gentoolkit</c> können in der <uri
link="/doc/de/gentoolkit.xml">Gentoolkit</uri> Anleitung gefunden werden.
</p>

<p>
Sie können sich eine komplette Liste der in <c>portage-utils</c> zur Verfügung
stehenden Anwendungen durch <c>man q</c> oder <c>q --help</c> ansehen. Bitte
lesen Sie die man page für jedes beschriebene Hilfsmittel, da diese Anleitung
nur als kurze Referenz für die brauchbarsten Funktionen gedacht ist und nicht
alle Informationen über jede Anwendung beinhaltet.
</p>

<p>
Der erste Schritt um <c>portage-utils</c> zu verwenden, ist das Paket zu
installieren:
</p>

<pre caption="Installation von portage-utils">
# <i>emerge portage-utils</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Verwendung</title>
<section>
<title>Wie man ein Paket findet, zu dem eine Datei gehört</title>
<body>

<p>
<c>qfile</c> findet das Paket, zu dem eine Datei gehört:
</p>

<pre caption="Finden des Pakets, zu dem eine Datei gehört">
$ <i>qfile /etc/fonts/fonts.conf</i>
media-libs/fontconfig (/etc/fonts/fonts.conf)
$ <i>qfile /usr/share/keymaps/atari/atari-uk-falcon.map.gz</i>
sys-apps/kbd (/usr/share/keymaps/atari/atari-uk-falcon.map.gz)
</pre>

</body>
</section>
<section>
<title>Paketintegrität überprüfen</title>
<body>

<p>
Wenn Sie die MD5-Summe oder mtime der Dateien, die von einem Paket installiert
wurden, überprüfen möchten, können Sie das mit der <c>qcheck</c> Anwendung
erledigen:
</p>

<pre caption="Paketintegrität überprüfen">
$ <i>qcheck portage-utils</i>
Checking app-portage/portage-utils-0.1.13 ...
  * 36 out of 36 files are good
</pre>

<p>
Natürlich werden hier alle Dateien, die nach der Installation verändert wurden,
aufgeführt. Wenn die Anwendung Konfigurationsdateien meldet, die Sie nach der
Installation manuell verändert haben, gibts es nichts, über das Sie sich
Gedanken machen müssen.
</p>

</body>
</section>
<section>
<title>Auflisten von Paketen, die von anderen abhängen</title>
<body>

<p>
Natürlich gibt es auch eine Anwendung, die ihnen erlaubt, alle Anwendungen die
von irgendwelchen anderen Paketen abhängen, aufzulisten. Das wird durch
Verwenden von <c>qdepends</c> bewerkstelligt. Verwenden Sie den <c>-a</c>
Schalter, um alle DEPEND, RDEPEND und PDEPEND Informationen für ein Paket
anzuzeigen.
</p>

<pre caption="Auflisten von Paketen, die von anderen Paketen abhängen">
$ <i>qdepends -a pygtk</i>
 * DEPEND
dev-python/pygtk-2.8.2: &gt;=dev-lang/python-2.3 &gt;=x11-libs/gtk+-2.8.0
&gt;=dev-libs/glib-2.8.0 &gt;=x11-libs/pango-1.10.0 &gt;=dev-libs/atk-1.8.0
&gt;=gnome-base/libglade-2.5.0 &gt;=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl &gt;=x11-libs/gtkglarea-1.99
&gt;=dev-util/pkgconfig-0.9 sys-devel/patch
 * RDEPEND
dev-python/pygtk-2.8.2: &gt;=dev-lang/python-2.3 &gt;=x11-libs/gtk+-2.8.0
&gt;=dev-libs/glib-2.8.0 &gt;=x11-libs/pango-1.10.0 &gt;=dev-libs/atk-1.8.0
&gt;=gnome-base/libglade-2.5.0 &gt;=dev-python/pycairo-0.9.0 dev-python/numeric
virtual/opengl dev-python/pyopengl &gt;=x11-libs/gtkglarea-1.99
 * PDEPEND
</pre>

</body>
</section>
<section>
<title>Dateien die zu einem Ebuild gehören auflisten</title>
<body>

<p>
<c>qlist</c> gibt ihnen eine Liste aller Dateien, die zu einem Ebuild gehören.
</p>

<pre caption="Auflisten von Dateien, die zu einer Ebuild-Datei gehören">
$ <i>qlist vim</i>
/usr/bin/gvim
/usr/bin/gvimdiff
/usr/bin/evim
/usr/bin/eview
/usr/bin/gview
/usr/bin/rgvim
[...]
</pre>

</body>
</section>
<section>
<title>Suchen von Paketen, die ein bestimmtes USE-Flag verwenden</title>
<body>

<p>
Das wird mit <c>quse</c> erledigt, welches als root ausgeführt werden muss. Es
kann eine Weile dauern, um zuerst den Ebuild-Cache zu erstellen, beziehungsweise
zu aktualisieren.
</p>

<pre caption="Suchen nach Paketen mit dem 'firefox' USE-Flag">
# <i>quse firefox</i>
app-office/openoffice/openoffice-2.0.2_rc1.ebuild binfilter curl eds firefox gnome gtk java kde ldap mozilla xml2 
dev-haskell/gtk2hs/gtk2hs-0.9.10.ebuild doc glade gnome mozilla firefox 
dev-java/swt/swt-3.1-r1.ebuild accessibility cairo firefox gnome mozilla 
[...]
</pre>

</body>
</section>
<section>
<title>Paketgrößen finden</title>
<body>

<p>
Das wird mit der <c>qsize</c> Anwendung erledigt und ist sehr einfach:
</p>

<pre caption="Paketgrößen finden">
$ <i>qsize vim</i>
app-editors/gvim-6.4: 10 files, 7 non-files, 2327.516 KB
app-editors/vim-6.4: 6 files, 2 non-files, 2058.14 KB
app-editors/vim-core-6.4: 1024 files, 68 non-files, 10950.984 KB
[...]
</pre>

</body>
</section>
</chapter>
</guide>
