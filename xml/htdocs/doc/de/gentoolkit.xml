<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/de/gentoolkit.xml,v 1.11 2007/06/21 18:48:06 keytoaster Exp $ -->

<!-- English CVS Version: 1.28 -->

<guide link = "/doc/de/gentoolkit.xml" lang="de">
<title>Gentoolkit</title>

<author title="Autor">
  <mail link="mbutcher@aleph-null.tv">Matt Butcher</mail>
</author>
<author title="Bearbeiter">
  <!-- zhen@gentoo.org -->John P. Davis
</author>
<author title="Bearbeiter">
  <mail link="erwin@gentoo.org">Erwin</mail>
</author>
<author title="Bearbeiter">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Bearbeiter">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Bearbeiter">
  <mail link="karltk@gentoo.org">Karl Trygve</mail>
</author>
<author title="Bearbeiter">
  <mail link="yoswink@gentoo.org">José Luis Rivero</mail>
</author>
<author title="Bearbeiter">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Übersetzer">
  <mail link="dl@ibwag.com">David Leder</mail>
</author>
<author title="Übersetzer">
  <mail link="keytoaster@googlemail.com">Tobias Heinlein</mail>
</author>
<author title="Korrektor">
  <mail link="grahl@gentoo.org">Jan Hendrik Grahl</mail>
</author>

<abstract>
Gentoolkit ist eine Zusammenfassung von Werkzeugen für das einfache
Administrieren eines Gentoo Systems. Dieses Dokument deckt die Basis einiger
Werkzeuge des aktuellen Gentoolkits ab.
</abstract>

<!-- Licensed under GFDL -->

<version>1.11</version>
<date>2007-02-20</date>

<chapter>
<title>Einleitung</title>
<section>
<title>Was ist Gentoolkit?</title>
<body>

<p>
Gentoo ist eine einzigartige Distribution und hat einige Komplexitäten,
die in anderen Distributionen gar nicht vorhanden sind. Als Gentoo
Entwickler und Mitarbeiter ein paar dieser Komplexitäten entdeckten,
schrieben sie Werkzeuge um den Benutzern und Administratoren zu
helfen. Viele dieser Werkzeuge befinden sich im Gentoo Projekt
und sind im Paket <path>app-portage/gentoolkit</path>.
</p>

<note>
Momentan gibt es zwei verschiedene Versionen von Gentoolkit:
<c>app-portage/gentoolkit</c> und <c>app-portage/gentoolkit-dev</c>.
Das erste Paket enthält Administrationsskripte und das letztere enthält
Skripte spezifisch hilfreich für die Entwicklung von Gentoo.
Wenn Sie ein Entwickler sind, können Sie Ihre Skripte in <c>gentoolkit-dev</c>
aufnehmen lassen, indem Sie den Gentoolkit Maintainer kontaktieren. Dieses
Dokument bespricht nur gentoolkit.
</note>

<p>
Gentoolkit beinhaltet eine ganze Menge von nützlichen Werkzeugen mit denen
Sie Ihre Pakete verwalten können und im Auge behalten können was sich an Ihrem
System ändert. Die meisten Benutzer -- vor allem diejenigen die ihr System oft
updaten -- werden einen Nutzen aus dem installierten Gentoolkit ziehen.
</p>

</body>
</section>
<section>
<title>Installation</title>
<body>

<p>
Einfach wie mit allen Gentoo Paketen, besteht die Installation
nur durch emerge.
</p>

<pre caption="Installieren von Gentoolkit">
# <i>emerge gentoolkit</i>
</pre>

<note>
Viele der der Tools im Gentoolkit enthüllen wichtige Informationen
über das System oder erfordern root Berechtigungen. Darum können
einige Programme, (oder damit sie richtig funktionieren) nur als
Benutzer mit root Berechtigungen ausgeführt werden.
</note>

</body>
</section>
<section>
<title>Dokumentationen finden</title>
<body>

<p>
Jegliche Dokumentation die ein Programm haben könnte (abgesehen von den man
Seiten) ist gespeichert in
<path>/usr/share/doc/gentoolkit-[Version]/[Programmname]/</path>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>equery</title>
<section>
<title>Einleitung</title>
<body>

<p>
<c>equery</c> ist ein Werkzeug, welches u.a. eine große Menge an nützlichen
Informationen über die Pakete auf Ihrem System anzeigen kann.
<c>equery --help</c> liefert alle möglichen Optionen.
</p>

<note>
Nicht alle Funktionen, die von <c>equery --help</c> ausgegeben werden, wurden
auch schon implementiert. Jene, die es noch nicht sind, sind deutlich erwähnt
worden. Sie werden auch bemerken, dass jeder Befehl eine kurze Option hat, z.B.
<c>b</c> anstatt <c>belongs</c>.
</note>

<note>
Beachten Sie, dass equery momentan das Ausgabeformat ändert, wenn es durch eine
Pipe gesendet wird. Das gepipete Format ist dazu gedacht, leichter von den
Werkzeugen analysiert zu werden, aber Sie können es auch ausschalten, indem Sie
die Option <c>--no-pipe</c> hinzufügen. Wenn Sie Skripte schreiben, die equery
einsetzen, sollten Sie hiervon Kenntniss haben.
</note>

</body>
</section>
<section>
<title>Das Finden des Pakets, aus dem eine Datei stammt</title>
<body>

<p>
<c>equery</c> bietet auch eine Funktion an, um das Paket zu finden, aus dem
eine Datei hergekommen ist, indem Sie den <c>belongs</c>-Befehl (oder auch
einfach <c>b</c>) benutzen.
</p>

<pre caption="Das Ebuild finden, welches die gegebene Daetei installiert hat">
# <i>equery belongs /usr/bin/audacious</i>
[ Searching for file(s) /usr/bin/audacious in *... ]
media-sound/audacious-1.1.2 (/usr/bin/audacious)
</pre>

<p>
Durch Benutzung der <c>-f</c> Option haben Sie die Möglichkeit nach Dateien zu
suchen, welche einem regulären Ausdruck entsprechen. Die <c>-e</c> Option ist
nützlich, um Ihre Suche sofort zu beenden, wenn ein Treffer gefunden wurde.
</p>

</body>
</section>
<section>
<title>Prüfen der Integrität eines Pakets</title>
<body>

<p>
Manchmal ist es nützlich die Integrität eines Paketes zu überprüfen.
<c>query</c> kann sowohl MD5-Summen als auch Timestamps verifizieren, um zu
zeigen, wann ein Paket beschädigt, ersetzt oder entfernt worden sein könnte.
</p>

<pre caption="Paket-Integrität OK">
# <i>equery check gentoolkit</i>
[ Checking app-portage/gentoolkit-0.2.0 ]
 * 54 out of 54 files good
</pre>

<p>
Bitte beachten Sie, dass das Ändern von Konfigurationsdateien nach der
Installation als "nicht gut" bemängelt werden könnten.
</p>

</body>
</section>
<section>
<title>Liste aller Pakete, welche von ... abhängen</title>
<body>

<p>
<c>equery</c> ist in der Lage alle direkten Abhängigkeiten eines Pakets
aufzulisten. Die Funktion, die wir benutzen sollten, um dies zu tun lautet
<c>depends</c> und es ist so einfach wie folgt:
</p>

<pre caption="Nach Paketen suchen, welche von pygtk abhängen">
# <i>equery depends pygtk</i>
[ Searching for packages depending on pygtk... ]
app-office/dia-0.93
dev-python/gnome-python-2.0.0-r1
gnome-extra/gdesklets-core-0.26.2
media-gfx/gimp-2.0.4
x11-libs/vte-0.11.11-r1
</pre>

</body>
</section>
<section>
<title>Graph von Abhängigkeiten</title>
<body>

<p>
<c>equery</c> ist dazu fähig uns einen Graph von Abhängigkeiten für ein
spezifisches Paket ausgeben. Der Graph von Abhängigkeiten gibt Ihnen eine
Auflistung von allen Paketen die direkte und indirekte Abhängigkeiten zum
fraglichen Paket haben.
</p>

<pre caption="Graph von Abhängigkeiten für cdrtools">
# <i>equery depgraph cdrtools</i>
Displaying dependencies for app-cdr/cdrtools-2.01_alpha37
`-- app-cdr/cdrtools-2.01_alpha37
 `-- sys-libs/glibc-2.3.4.20040808 (virtual/libc)
  `-- sys-kernel/linux-headers-2.4.22 (virtual/os-headers)
   `-- sys-apps/baselayout-1.10.4
    `-- sys-apps/sysvinit-2.85-r1
     `-- sys-apps/gawk-3.1.3-r1
      `-- sys-apps/util-linux-2.12-r4
          `-- sys-apps/sed-4.0.9
              `-- sys-libs/ncurses-5.4-r4
                  `-- sys-apps/pam-login-3.14
                  `-- sys-libs/pam-0.77-r1
                 `-- sys-libs/cracklib-2.7-r10
               `-- sys-apps/miscfiles-1.3-r1
              `-- app-arch/gzip-1.3.5-r1
              `-- sys-apps/portage-2.0.50-r10
</pre>

<p>
Zum Beispiel ist linux-headers eine indirekte Abhängigkeit von cdrtools, während
glibc eine direkte Abhängigkeit ist. Beachten Sie, dass die Ausgabe auch
Informationen über virtuelle Pakete enthält. In dem obigen Beispiel erwartet
<c>cdrtools</c> eigentlich virtual/libc, nicht sys-libs/glibc, aber auf dem
gegebenen System in dem Beispiel stellt sys-libs/glibc virtual/libc bereit.
</p>

</body>
</section>
<section>
<title>Dateien auflisten, die zu einem Ebuild gehören</title>
<body>

<p>
<c>equery</c> kann die Dateien auflisten, die zu einem installierten Ebuild
gehören. Wenn ich die Dateien, die Gentoolkit auf meinem System installiert hat,
nicht kenne, werde ich <c>equery</c> benutzen, um sie anzeigen zu lassen.
</p>

<pre caption="Dateien auflisten">
# <i>equey files gentoolkit</i>
[ Searching for packages matching gentoolkit... ]
app-portage/gentoolkit-0.2.0
* Contents of app-portage/gentoolkit-0.2.0:
/usr
/usr/bin
/usr/bin/equery
/usr/bin/etcat
/usr/bin/euse
/usr/bin/glsa-check
/usr/bin/qpkg
/usr/bin/revdep-rebuild
/usr/lib
/usr/lib/gentoolkit
/usr/lib/gentoolkit/pym
/usr/lib/gentoolkit/pym/gentoolkit
/usr/lib/gentoolkit/pym/gentoolkit/__init__.py
/usr/lib/gentoolkit/pym/gentoolkit/gentoolkit.py
/usr/lib/gentoolkit/pym/gentoolkit/pprinter.py
/usr/lib/gentoolkit/pym/glsa.py
/usr/sbin
/usr/share
/usr/share/doc
/usr/share/doc/gentoolkit-0.2.0_pre10

[...]
</pre>

<p>
Der Befehl <c>files</c> von <c>equery</c> stellt einige Optionen bereit, um die
Ausgabe zu verändern. Sie können alle davon auf den <c>equery</c> man-Seiten
nachschlagen.
</p>

</body>
</section>
<section>
<title>Pakete suchen, die ein spezifisches USE-Flag benutzen</title>
<body>

<p>
Wenn Sie die Pakete auf ihrem System finden wollen, welche Gebrauch von einem
spezifischen USE-Flag machen, hat <c>equery</c> die Funktion <c>hasuse</c>:
</p>

<pre caption="Pakete suchen, welche das USE-Flag firefox benutzen">
# <i>equery hasuse firefox</i>
[ Searching for USE flag firefox in all categories among: ]
 * installed packages
[I--] [  ] dev-python/gnome-python-extras-2.14.0-r1 (0)
[I--] [  ] media-video/totem-2.16.4 (0)
</pre>

</body>
</section>
<section>
<title>Pakete auflisten</title>
<body>

<p>
<c>equery</c> hat eine starke Funktion alle Pakete aufzulisten, die zu Ihrem
System, zu Portage oder sogar zu einem Overlay gehören. Probieren wir dies aus:
</p>

<pre caption="Pakete mit equery auflisten">
# <i>equery list gentoolkit</i>
# <i>equery list gentoolkit</i>
[ Searching for package 'gentoolkit' in all categories among: ]
* installed packages
[I--] [  ] app-portage/gentoolkit-0.2.0 (0)
</pre>

<p>
Die Standard-Anfrage wird unsere installierten Pakete nach dem gegebenen Namen
durchsuchen. Falls etwas gefunden wird, werden die folgenden Informationen
ausgegeben: Der Ort des Pakets zwischen den ersten eckigen Klammern (I für
Installierte Pakete, P für Portage, O für Overlay), die möglichen Masken
zwischen den zweiten (~ by keyword, - by arch oder M hard masked), dann die
Kategorie und der komplette Name und zuletzt der Slot, in welchem das Paket
gelagert ist.
</p>

<p>
Ein weiteres Beispiel. Dieses Mal werden wir die lokalen Optionen verwenden, um
nach Paketen zu suchen, welche in unserem Portagebaum und Overlay enthalten
sind.
</p>

<pre caption="Lokale Optionen mit equery benutzen">
# <i>equery list -p -o vim</i>
[ Searching for package 'vim' in all categories among: ]
* installed packages
[I--] [  ] app-editors/vim-6.3-r4 (0)
* Portage tree (/usr/portage)
[-P-] [M~] app-editors/vim-7.0_alpha20050126 (0)
[-P-] [M~] app-editors/vim-7.0_alpha20050201 (0)
[-P-] [  ] app-editors/vim-6.3-r2 (0)
[-P-] [M~] app-editors/vim-7.0_alpha20050122 (0)
[-P-] [M~] app-editors/vim-core-7.0_alpha20050126 (0)
[-P-] [  ] app-editors/vim-core-6.3-r3 (0)
[-P-] [M~] app-editors/vim-core-7.0_alpha20050122 (0)
[-P-] [M~] app-editors/vim-core-7.0_alpha20050201 (0)
[-P-] [  ] app-editors/vim-core-6.3-r4 (0)
* overlay tree (/opt/ebuilds)
</pre>

</body>
</section>
<section>
<title>Paketgrößen finden</title>
<body>

<p>
Haben Sie sich schon einmal gefragt wieviel Platz ein bestimmtes Paket wohl
belegt? Da ein Paket seine Dateien über eine Mehrzahl von Verzeichnissen
verteilt haben könnte wird das übliche <c>du -hc</c> möglicherweise nicht die
korrekte Größe ausgeben. Dieses Dilemma wird von <c>equery</c> gelöst!
</p>

<pre caption="Paketgröße">
# <i>equery size openoffice-bin</i>
* app-office/openoffice-bin-1.1.2
Total Files : 2908
Total Size  : 223353.31 KiB
</pre>

<p>
Wie Sie sehen können, gibt <c>equery</c> den total benutzen Speicherplatz in
Kilobyte aus und listet die Anzahl Dateien, die dieses Paket insgesamt besitzt.
</p>

</body>
</section>
<section>
<title>Auflistung von USE-Flags für ein Paket</title>
<body>

<p>
<c>equery</c> kann so eingesetzt werden, dass es Informationen darüber liefert
was für USE-Flags von einen spezifischen Paket verwendet werden. Es teilt uns
mit was unsere momentanen USE-Flags für ein Paket sind und welche USE-Flags
für das Paket verfügbar sind.
</p>

<pre caption="Gesetzte und nicht gesetzte USE-Flags">
# <i>equery uses wireshark</i>
[ Colour Code : set unset ]
[ Legend    : (U) Col 1 - Current USE flags        ]
[           : (I) Col 2 - Installed With USE flags ]

U I [ Found these USE variables in : net-analyzer/wireshark-0.99.4 ]
- - adns      : Adds support for the adns DNS client library
+ + gtk       : Adds support for x11-libs/gtk+ (The GIMP Toolkit)
- - ipv6      : Adds support for IP version 6
- - kerberos  : Adds kerberos support
- - portaudio : Adds support for the crossplatform portaudio audio API
- - selinux   : !!internal use only!! Security Enhanced Linux support, this must be set by the selinux profile or breakage will occur
- - snmp      : Adds support for the Simple Network Management Protocol if available
+ + ssl       : Adds support for Secure Socket Layer connections
- - threads   : Adds threads support for various packages. Usually pthreads
</pre>

<p>
Wireshark ist bei mir so installiert, dass nur die gtk und ssl Flags
gesetzt sind, aber es sind noch einige andere USE-Flags für Wireshark vorhanden.
Für weitere Informationen zu USE-Flags lesen Sie bitte das <uri
link="/doc/de/handbook/handbook-x86.xml?part=2&amp;chap=2">USE-Flags</uri>
Kapitel des <uri link="/doc/de/handbook/">Gentoo Handbuchs</uri>.
</p>

</body>
</section>
<section>
<title>Wo ist das Ebuild?</title>
<body>

<p>
Wir können mit <c>equery</c> auch herausfinden welches Ebuild für ein
spezifisches Paket verwendet wird. Dies geschieht durch Verwendung des
<c>equery which</c> Befehls, welcher den kompletten Pfad zum Ebuild ausgibt.
</p>

<pre caption="Anzeigen des Ebuildpfads">
  # <i>equery which cdrtools</i>
  /usr/portage/app-cdr/cdrtools/cdrtools-2.01_alpha37.ebuild
</pre>

</body>
</section>
</chapter>

<chapter>
<title>euse</title>
<section>
<title>Einleitung</title>
<body>

<p>
<c>euse</c> ist ein Werkzeug mit dem man USE-Flags an zahlreichen Stellen
sehen, aktivieren und deaktivieren kann. Für weitere Informationen zu
USE-Flags lesen Sie bitte das <uri
link="/doc/de/handbook/handbook-x86.xml?part=2&amp;chap=2">USE-Flags</uri>
Kapitel des <uri link="/doc/de/handbook/">Gentoo Handbuchs</uri>.
Benutzen Sie <c>euse -h</c> für eine komplette Hilfe und alle Optionen.
</p>

</body>
</section>
<section>
<title>Lesen, aktivieren und deaktivieren von USE-Flags</title>
<body>

<p>
Der <c>euse -a</c> Befehl liest die momentan gesetzten USE-Flags und zeigt sie
an.
</p>

<note>
Es gibt 5 &quot;Spalten&quot;, die <c>euse</c> jetzt benutzt, um anzuzeigen, ob
ein Flag (nicht) gesetzt ist und wo es gesetzt worden ist. Die Spalten sind wie
folgt -- +/-, in der Umgebung gesetzt, in make.conf gesetzt, in make.defaults
gesetzt, und in make.globals gesetzt. Die Ausgabe sieht aus wie [+ECDG].
</note>

<pre caption="Alle aktiven USE-Flags anschauen">
# <i>euse -a</i>
X                   [+ CD ]
aalib               [+    ]
acpi                [+ C  ]
alsa                [+ C  ]
apache2             [+ C  ]
apm                 [+  D ]
avi                 [+  D ]
berkdb              [+  D ]
bitmap-fonts        [+  D ]
bonobo              [+    ]
cdr                 [+ C  ]
crypt               [+ CD ]
cscope              [+ C  ]
cups                [+ CD ]
curl                [+    ]
emboss              [+  D ]
encode              [+  D ]
esd                 [+    ]
fam                 [+    ]
fbcon               [+ C  ]
firefox             [+ C  ]
font-server         [+  D ]
foomaticdb          [+  D ]
fortran             [+  D ]
gd                  [+ C  ]
gdbm                [+  D ]
gif                 [+ CD ]
gimpprint           [+ C  ]
gnome               [+ CD ]
gphoto2             [+    ]
gpm                 [+ CD ]
gstreamer           [+ C  ]
gtk                 [+  D ]
gtkhtml             [+ C  ]
guile               [+    ]
imagemagick         [+    ]
imlib               [+ CD ]
innodb              [+    ]
ipv6                [+  D ]
javascript          [+ C  ]
jpeg                [+ CD ]
kde                 [+  D ]
ldap                [+    ]
libg++              [+ CD ]
libwww              [+ CD ]
mad                 [+ CD ]
mbox                [+ C  ]
md5sum              [+ C  ]
mikmod              [+ CD ]
mmx                 [+ C  ]
motif               [+ CD ]
mp3                 [+    ]
mpeg                [+ CD ]
mpeg4               [+ C  ]
mysql               [+ C  ]
ncurses             [+ CD ]
nls                 [+  D ]
nvidia              [+ C  ]
odbc                [+    ]
offensive           [+    ]
ogg                 [+ CD ]
opengl              [+ CD ]
oss                 [+  D ]
pam                 [+ CD ]
pdflib              [+ CD ]
perl                [+ CD ]
png                 [+ CD ]
python              [+ CD ]
qt                  [+  D ]
quicktime           [+ CD ]
readline            [+ CD ]
ruby                [+    ]
sdl                 [+ CD ]
slang               [+  D ]
spell               [+ CD ]
sse                 [+ C  ]
ssl                 [+ CD ]
svga                [+ CD ]
tcltk               [+ C  ]
tcpd                [+  D ]
tiff                [+ C  ]
truetype            [+ CD ]
usb                 [+ C  ]
vanilla             [+ C  ]
x86                 [+ C  ]
xml                 [+    ]
xosd                [+ C  ]
xv                  [+ CD ]
xvid                [+ C  ]
zlib                [+ CD ]
</pre>

<p>
So ähnlich können sie den <c>euse -a -g</c> Befehl verwenden, um nur aktive
globale USE-Flags anzeigen zu lassen. Der <c>euese -a -l</c> Befehl tut dasselbe
für aktive lokale USE-Flags. <c>-g</c> &amp; <c>-l</c> sind Unteroptionen von
<c>euse</c> und benötigen eine Option vor ihnen (z.B. <c>-a</c>), um korrekt zu
funktionieren.
</p>

<pre caption="Aktive lokale USE-Flags anschauen">
# <i>euse -a -l</i>
bitmap-fonts        [+  D ]
font-server         [+  D ]
fortran             [+  D ]
gimpprint           [+ C  ]
md5sum              [+ C  ]
mpeg4               [+ C  ]
nvidia              [+ C  ]
offensive           [+    ]
truetype            [+ CD ]
</pre>

<p>
Wir können <c>euse</c> auch benutzen, um USE-Flags zu (de-)aktivieren.
Die Befehle hierfür sind <c>euse -E flagname</c> (ein Flag einschalten) und
<c>euse -D flagname</c> (ein Flag ausschalten).
</p>

<warn>
Benutzen Sie die <c>euse -E</c> und <c>euse -D</c> Befehle nicht alleine (ohne
ein Flag). Es wird ALLE Flags in <c>/etc/make.conf</c> aktivieren/deaktivieren.
Obwohl ein Backup in <path>/etc/make.conf.euse_backup</path> behalten wird,
seien Sie bitte vorsichtig, wenn sie <c>euse -E</c> oder <c>euse -D</c>
benutzen.
</warn>

<pre caption="Setzen und Deaktivieren von USE-Flags">
<comment>(Ein USE-Flag aktivieren)</comment>
# <i> euse -E 3dfx</i>
/etc/make.conf was modified, a backup copy has been placed at /etc/make.conf.euse_backup

<comment>(/etc/make.conf nach dem Befehl)</comment>
USE="alsa acpi apache2 -arts cups cdr crypt cscope -doc fbcon \
firefox gd gif gimpprint gnome gpm gstreamer gtkhtml imlib \
innodb -java javascript jpeg libg++ libwww mad mbox md5sum \
mikmod mmx motif mpeg mpeg4 mysql ncurses nvidia \
ogg odbc offensive opengl pam pdflib perl png python \
quicktime readline sdl spell sse ssl svga tcltk tiff truetype usb \
vanilla X xosd xv xvid x86 zlib 3dfx"

<comment>(das USE-Flag deaktivieren)</comment>
# <i> euse -D 3dfx</i>
/etc/make.conf was modified, a backup copy has been placed at /etc/make.conf.euse_backup

<comment>(/etc/make.conf nach dem Befehl)</comment>
USE="alsa acpi apache2 -arts cups cdr crypt cscope -doc fbcon \
firefox gd gif gimpprint gnome gpm gstreamer gtkhtml imlib \
innodb -java javascript jpeg libg++ libwww mad mbox md5sum \
mikmod mmx motif mpeg mpeg4 mysql ncurses nvidia \
ogg odbc offensive opengl pam pdflib perl png python \
quicktime readline sdl spell sse ssl svga tcltk tiff truetype usb \
vanilla X xosd xv xvid x86 zlib -3dfx"
</pre>

<note>
<c>euse</c> entfernt das Flag nicht direkt aus make.conf, es fügt nur ein -
(Minus) am Anfang des Flags ein. Um unnötige Variablen zu vermeiden müssen
Sie unter Umständen Ihre make.conf manuell bearbeiten.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Other tools</title>
<section>
<title>Weitere Werkzeuge</title>
<body>

<p>
Dieses Werkzeug ist dazu da reverse Abhängigkeiten neu erstellt. Es durchsucht
Ihre installierten Ebuilds um Pakete zu finden die nicht länger funktionieren
wegen einem Upgrade eines Paketes von welchem es abhängig war. Es kann diese
Pakete für Sie mit emerge installieren, aber es kann auch geschehen dass ein
gegebenes Paket nicht mehr mit den momentan installierten Paketen funktioniert.
In diesem Fall sollten Sie das funktionsunfähige Paket auf eine neuere Version
aktualisieren. Revdep-rebuild wird Flags an emerge übergeben, welche es Ihnen
ermöglichen das <c>--pretend</c> Flag zu verwenden, um zu sehen was mit emerge
neu installiert werden würde, bevor Sie weiter fortfahren.
</p>

<pre caption="Ausführen von revdep-rebuild im Pretend-Modus">
# <i>revdep-rebuild -p</i>

Checking reverse dependencies...
Packages containing binaries and libraries broken by any package update,
will be recompiled.

Collecting system binaries and libraries... done.
  (/root/.revdep-rebuild.1_files)

Collecting complete LD_LIBRARY_PATH... done.
  (/root/.revdep-rebuild.2_ldpath)

Checking dynamic linking consistency...
  broken /usr/lib/ao/plugins-2/libarts.so (requires libartsc.so.0)
  broken /usr/lib/kde3/libkpresenterpart.so (requires libartskde.so.1 libqtmcop.so.1
         libsoundserver_idl.so.1 libkmedia2_idl.so.1 libartsflow.so.1 libartsflow_idl.so.1 libmcop.so.1)
  broken /usr/lib/ruby/site_ruby/1.8/i686-linux/fox.so (requires libFOX-1.0.so.0)
  broken /usr/lib/xine/plugins/1.0.0/xineplug_ao_out_arts.so (requires libartsc.so.0)
  broken /usr/lib/perl5/vendor_perl/5.8.0/i686-linux/auto/SDL_perl/SDL_perl.so (requires libSDL_gfx.so.0)
  broken /usr/lib/libloudmouth-1.so.0.0.0 (requires libgnutls.so.10)
  broken /usr/bin/k3b (requires libartskde.so.1 libqtmcop.so.1 libsoundserver_idl.so.1 libkmedia2_idl.so.1
         libartsflow.so.1 libartsflow_idl.so.1 libmcop.so.1)
  broken /usr/bin/lua (requires libhistory.so.4)
  broken /usr/bin/lyx (requires libAiksaurus-1.0.so.0)
  broken /usr/bin/luac (requires libhistory.so.4)
  broken /usr/bin/avidemux2 (requires libartsc.so.0)
  broken /usr/bin/pptout (requires libxml++-0.1.so.11)
  broken /usr/bin/xml2ps (requires libxml++-0.1.so.11)
 done.
  (/root/.revdep-rebuild.3_rebuild)

Assigning files to ebuilds... done.
  (/root/.revdep-rebuild.4_ebuilds)

Evaluating package order... done.
  (/root/.revdep-rebuild.5_order)

All prepared. Starting rebuild...
emerge --oneshot --nodeps -p =app-cdr/k3b-0.11.14 =app-office/koffice-1.3.2 =app-office/lyx-1.3.4 \
       =app-office/passepartout-0.2 =dev-lang/lua-5.0.2 =dev-ruby/fxruby-1.0.29 =media-libs/libao-0.8.5 \
       =media-libs/xine-lib-1_rc5-r3 =media-video/avidemux-2.0.26 =net-libs/loudmouth-0.16

These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild   R   ] app-cdr/k3b-0.11.14
[ebuild   R   ] app-office/koffice-1.3.2
[ebuild   R   ] app-office/lyx-1.3.4
[ebuild   R   ] app-office/passepartout-0.2
[ebuild   R   ] dev-lang/lua-5.0.2
[ebuild   R   ] dev-ruby/fxruby-1.0.29
[ebuild   R   ] media-libs/libao-0.8.5
[ebuild   R   ] media-libs/xine-lib-1_rc5-r3
[ebuild   R   ] media-video/avidemux-2.0.26
[ebuild   R   ] net-libs/loudmouth-0.16

Now you can remove -p (or --pretend) from arguments and re-run revdep-rebuild.
</pre>

<p>
Wenn Sie einige Pakete neu erstellen müssen, dann können Sie
<c>revdep-rebuild</c> ohne das <c>-p</c> Flag ausführen und die aufgelisteten
Pakete werden erneut mit emerge installiert.
</p>

</body>
</section>
<section>
<title>glsa-check</title>
<body>

<p>
<c>glsa-check</c> ist hauptsächlich ein Testprogramm, welches die
verschiedenen GLSA (Gentoo Linux Security Advisory) im Auge behält und wird
letztendlich in <c>emerge</c> und <c>equery</c> integriert werden. Besuchen
Sie bitte die <uri
link="/proj/en/portage/glsa-integration.xml">Portage GLSA
Integrationsseite</uri> für weitere Informationen.
</p>

</body>
</section>
</chapter>

</guide>