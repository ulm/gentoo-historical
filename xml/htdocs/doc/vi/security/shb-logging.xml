<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/vi/security/shb-logging.xml,v 1.1 2005/08/08 15:41:00 neysx Exp $ -->
<!-- $OldHeader: /var/cvsroot/gentoo/xml/htdocs/doc/vi/security/shb-logging.xml,v 1.2 2005/06/08 14:00:26 swift Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.1</version>
<date>2005-06-08</date>

<section>
<title>Log</title>
<body>
<p>
Log tăng cường nên được bổ sung để bắt lấy những cảnh báo hoặc lỗi chỉ
ra một cuộc tấn công đang được thực hiện hoặc những tổn hại của hệ
thống. Kẻ tấn công thường quét hoặc dò tìm trước khi tấn công.
</p>

<p>
Các tập tin log phải dễ đọc và dễ quản lý. Điều này là nhân tố sống
còn. Gentoo cho phép bạn chọn một trong 3 logger khác nhau để cài đặt.
</p>

</body>
</section>
<section>
<title>Log: Syslogd</title>
<body>

<p>
Syslogd là system logger phổ biến nhất cho Linux và Unix nói chung. Nó
có tính năng xoay vòng log đơn giản, nhưng dùng
<path>/usr/sbin/logrotate</path> trong cron job (logrotate được cấu
hình trong <path>/etc/logrotate.conf</path>) sẽ mạnh hơn vì
<c>logrotate</c> có nhiều tính năng. Xoay vòng log được thực
hiện thường xuyên hay không tùy thuộc vào tải của hệ thống.
</p>

<p>
Bên dưới là <path>syslog.conf</path> chuẩn kèm một vài tính năng bổ
sung. Chúng tôi đã uncomment dòng <c>cron</c> và <c>tty</c>, thêm
remote logging server. Để tăng cường an ninh, bạn có thể thêm log vào
hai nơi.
</p>

<pre caption="/etc/syslog.conf">
#  /etc/syslog.conf      Configuration file for syslogd.
#
#                       For more information see syslog.conf(5)
#                       manpage.
#                       This is from Debian, we are using it for now
#                       Daniel Robbins, 5/15/99

#
# First some standard logfiles.  Log by facility.
#

auth,authpriv.*                 /var/log/auth.log
*.*;auth,authpriv.none          -/var/log/syslog
cron.*                         /var/log/cron.log
daemon.*                        -/var/log/daemon.log
kern.*                          -/var/log/kern.log
lpr.*                           -/var/log/lpr.log
mail.*                          /var/log/mail.log
user.*                          -/var/log/user.log
uucp.*                          -/var/log/uucp.log
local6.debug                    /var/log/imapd.log

#
# Logging for the mail system. Split it up so that
# it is easy to write scripts to parse these files.
#
mail.info                       -/var/log/mail.info
mail.warn                       -/var/log/mail.warn
mail.err                        /var/log/mail.err

# Logging for INN news system
#
news.crit                       /var/log/news/news.crit
news.err                        /var/log/news/news.err
news.notice                     -/var/log/news/news.notice

#
# Some `catch-all' logfiles.
#
*.=debug;\
        auth,authpriv.none;\
        news.none;mail.none     -/var/log/debug
*.=info;*.=notice;*.=warn;\
        auth,authpriv.none;\
        cron,daemon.none;\
        mail,news.none          -/var/log/messages

#
# Emergencies and alerts are sent to everybody logged in.
#
*.emerg                         *
*.=alert                        *

#
# I like to have messages displayed on the console, but only on a virtual
# console I usually leave idle.
#
daemon,mail.*;\
       news.=crit;news.=err;news.=notice;\
       *.=debug;*.=info;\
       *.=notice;*.=warn       /dev/tty8

#Setup a remote logging server
*.*                        @logserver

# The named pipe /dev/xconsole is for the `xconsole' utility.  To use it,
# you must invoke `xconsole' with the `-file' option:
# 
#    $ xconsole -file /dev/xconsole [...]
#
# NOTE: adjust the list below, or you'll go crazy if you have a reasonably
#      busy site..
#
#daemon.*,mail.*;\
#       news.crit;news.err;news.notice;\
#       *.=debug;*.=info;\
#       *.=notice;*.=warn       |/dev/xconsole

local2.*                --/var/log/ppp.log
</pre>

<p>
Những kẻ tấn công thường có khuynh hướng xóa những dấu vết của chúng
bằng cách xóa hoặc sửa các tập tin log. Bạn có thể làm cho việc đó khó
khăn hơn bằng cách log vào một hoặc nhiều remote logging server trên
máy khác. Để biết chi tiết về syslogd, hãy chạy <c>man syslog</c>.
</p>

</body>
</section>
<section>
<title>Metalog</title>
<body>

<p>
<uri link="http://metalog.sourceforge.net">Metalog</uri> của Frank
Dennis không thể log vào remote server, nhưng lại có những tính năng
khác như hiệu năng cao và khả năng log linh hoạt. Nó có thể log theo
tên chương trình, theo độ khẩn cấp, theo facility (như syslogd), và hỗ
trợ biểu thức chính quy và bạn có thể chạy script khi khớp mẫu. Nó
dùng để ứng phó tình huống rất tốt.
</p> 

<p>
Cấu hình chuẩn là đủ. Nếu bạn muốn được thông báo bằng email bất cứ
khi nào có lỗi password, hãy dùng một trong những script sau.
</p>

<p>
Với postfix:
</p>

<pre caption="/usr/local/sbin/mail_pwd_failures.sh cho postfix">
#! /bin/sh
echo "$3" | mail -s "Warning (program : $2)" root
</pre>

<p>
Với qmail:
</p>

<pre caption="/usr/local/sbin/mail_pwd_failures.sh cho qmail">
#!/bin/sh
echo "To: root
Subject:Failure (Warning: $2) 
$3
" | /var/qmail/bin/qmail-inject -f root
</pre>

<p>
Nhớ cho phép những script này hoạt động bằng <c>/bin/chmod +x 
/usr/local/sbin/mail_pwd_failures.sh</c>
</p>

<p>
Sau đó hãy uncomment dòng lệnh bên dưới "Password failures" trong 
<path>/etc/metalog/metalog.conf</path> như thế này:
</p>

<pre caption="/etc/metalog/metalog.conf">
command  = "/usr/local/sbin/mail_pwd_failures.sh"
</pre>

</body>
</section>
<section>
<title>Syslog-ng</title>
<body>

<p>
Syslog-ng cung cấp các tính năng giống với syslog và metalog nhưng có
một số khác biệt nhỏ. Nó có thể lọc thông báo dựa trên level và nội
dung (như metalog), cung cấp remote logging như syslog, xử lý log từ
syslogd (thậm chí cả stream từ Solaris), ghi vào TTY, chạy chương
trình, và nó có thể làm logging server. Nói chung nó là sự tổng hợp
những thứ tốt nhất của cả hai logger kèm theo cấu hình nâng cao.
</p>

<p>
Bên dưới là cấu hình điển hình với một chút thay đổi.
</p>

<pre caption="/etc/syslog-ng/syslog-ng.conf">
options { long_hostnames(off); sync(0); };

#source where to read log
source src { unix-stream("/dev/log"); internal(); };
source kernsrc { file("/proc/kmsg"); };

#define destinations
destination authlog { file("/var/log/auth.log"); };
destination syslog { file("/var/log/syslog"); };
destination cron { file("/var/log/cron.log"); };
destination daemon { file("/var/log/daemon.log"); };
destination kern { file("/var/log/kern.log"); };
destination lpr { file("/var/log/lpr.log"); };
destination user { file("/var/log/user.log"); };
destination mail { file("/var/log/mail.log"); };

destination mailinfo { file("/var/log/mail.info"); };
destination mailwarn { file("/var/log/mail.warn"); };
destination mailerr { file("/var/log/mail.err"); };

destination newscrit { file("/var/log/news/news.crit"); };
destination newserr { file("/var/log/news/news.err"); };
destination newsnotice { file("/var/log/news/news.notice"); };

destination debug { file("/var/log/debug"); };
destination messages { file("/var/log/messages"); };
destination console { usertty("root"); };
destination console_all { file("/dev/tty12"); };
destination xconsole { pipe("/dev/xconsole"); };

#create filters
filter f_auth { facility(auth); };
filter f_authpriv { facility(auth, authpriv); };
filter f_syslog { not facility(authpriv, mail); };
filter f_cron { facility(cron); };
filter f_daemon { facility(daemon); };
filter f_kern { facility(kern); };
filter f_lpr { facility(lpr); };
filter f_mail { facility(mail); };
filter f_user { facility(user); };
filter f_debug { not facility(auth, authpriv, news, mail); };
filter f_messages { level(info..warn) 
	and not facility(auth, authpriv, mail, news); };
filter f_emergency { level(emerg); };

filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_crit { level(crit); };
filter f_err { level(err); };
filter f_failed { match("failed"); };
filter f_denied { match("denied"); };

#connect filter and destination
log { source(src); filter(f_authpriv); destination(authlog); };
log { source(src); filter(f_syslog); destination(syslog); };
log { source(src); filter(f_cron); destination(cron); };
log { source(src); filter(f_daemon); destination(daemon); };
log { source(kernsrc); filter(f_kern); destination(kern); };
log { source(src); filter(f_lpr); destination(lpr); };
log { source(src); filter(f_mail); destination(mail); };
log { source(src); filter(f_user); destination(user); };
log { source(src); filter(f_mail); filter(f_info); destination(mailinfo); };
log { source(src); filter(f_mail); filter(f_warn); destination(mailwarn); };
log { source(src); filter(f_mail); filter(f_err); destination(mailerr); };

log { source(src); filter(f_debug); destination(debug); };
log { source(src); filter(f_messages); destination(messages); };
log { source(src); filter(f_emergency); destination(console); };

#default log
log { source(src); destination(console_all); };
</pre>

<p>
Syslog-ng rất dễ cấu hình, nhưng cũng rất dễ bỏ sót vài thứ trong cấu
hình vì nó quá lớn. Tác giả vẫn hứa hẹn thêm vài tính năng như mã hoá,
xác thực, nén và MAC (Mandatory Access Control). Với những tùy chọn
này, nó rất thích hợp cho network logging, vì kẻ tấn công không thể do
thám log.
</p>

<p>
Và syslog-ng còn có một ưu điểm khác: nó không cần chạy bằng root!
</p>

</body>
</section>

<section>
<title>Phân tích log bằng Logcheck</title>
<body>

<p>
Dĩ nhiên, lưu trữ log chỉ là một nửa con đường. Một ứng dụng như
Logcheck có thể giúp việc phân tích log định kỳ dễ dàng hơn. Logcheck
là một script, kèm với một chương trình tên là <c>logtail</c>, chương
trình chạy trong cron daemon và kiểm tra log với một tập các quy tắc
nhằm tìm ra những hoạt động đáng ngờ. Sau đó nó sẽ gửi mail kết quả để
root.
</p>
<p>
Logcheck và logtail nằm trong gói <c>app-admin/logsentry</c>.
</p>
<p>
Logcheck dùng bốn tập tin để lọc các dòng log quan trọng từ những thứ
không quan trọng. Những tập tin này là  <path>logcheck.hacking</path>,
chứa các thông báo tấn công đã biết, <path>logcheck.violations</path>,
chứa các mẫu chỉ ra những xâm phạm an ninh,
<path>logcheck.violations.ignore</path>, chứa những từ khóa thường
thấy trong những tập tin xâm phạm <!-- VITODO violations file -->, cho
phép bỏ qua những dòng bình thường, và <path>logcheck.ignore</path>,
chứa những dòng cần bỏ qua.
</p>

<warn>
Đừng để trống <path>logcheck.violations.ignore</path>. Logcheck dùng
<c>grep</c> để phân tích log mà vài phiên bản grep coi tập tin rỗng là
wildcard. Vì thế mọi xâm phạm đều bị bỏ qua.
</warn>
<!-- FIXME: Might want to add more details on logcheck here...I have to install
it on Gentoo to figure out how it's configured! -->
</body>
</section>

</sections>
