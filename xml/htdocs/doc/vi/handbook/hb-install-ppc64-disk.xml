<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/vi/handbook/hb-install-ppc64-disk.xml,v 1.2 2005/04/28 09:36:58 neysx Exp $ -->

<sections>

<version>1.8</version>
<date>2004-11-21</date>

<section>
<title>Giới thiệu Block Device</title>
<subsection>
<title>Thiết bị khối - Block Device</title>
<body>

<p>
Hãy xem các quan niệm về đĩa của Gentoo Linux và Linux nói chung, bao
gồm các loại hệ tập tin Linux, phân vùng và block device. Khi bạn đã
quen với đĩa và hệ tập tin, bạn sẽ được hướng dẫn cách thiết lập phân
vùng và hệ tập tin cho Gentoo Linux.
</p>

<p>
Để bắt đầu, chúng tôi sẽ giới thiệu <e>block device</e>. Block device
nổi tiếng nhất có lẽ là những cái đại diện cho ổ đĩa IDE thứ nhất
trong hệ thống, tên là <path>/dev/hda</path>. Nếu bạn dùng ổ đĩa SCSI
thì ổ đĩa  đầu tiên là <path>/dev/sda</path>. Các ổ đĩa SATA cũng là
<path>/dev/sda</path> dù nó là ổ đĩa IDE.
</p>

<p>
Các block device kể trên được dùng để giao tiếp với đĩa. Các chương
trình có thể dùng các block device này để thao tác với đĩa mà không
cần biết đĩa bạn là IDE, SCSI hay cái gì khác. Chương trình chỉ cần
xem đĩa như một loạt các khối liên tục,mỗi khối 512 byte, có thể truy
cập ngẫu nhiên.
</p>

</body>
</subsection>
<subsection>
<title>Phân vùng (Partition) và Slice</title>
<body>

<p>
Mặc dù theo lý thuyết chúng ta có thể sử dụng toàn bộ đĩa cứng làm một
vùng để chứa hệ thống Linux, Tuy nhiên trong thực tế thì không bao giờ
sử dụng như vậy, thay vào đó, ổ đĩa cứng sẽ được chia thành các thiết
bị khối nhỏ hơn, dễ quản lý hơn. Trên hệ thống x86, chúng được gọi là
các <e>phân vùng - partition</e>. Các kiến trúc khác dùng kỹ thuật
tương tự, gọi là <e>slice</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Thiết kế bố cục phân vùng</title>
<subsection>
<title>Mô hình phân vùng mặc định</title>
<body>

<p>
Nếu bạn không thích tự xác định mô hình phân vùng cho hệ thống của
mình, bạn có thể dùng mô hình phân vùng chúng tôi dùng trong tài liệu
này:
</p>

<table>
<tr>
  <th>Phân vùng</th>
  <th>Hệ tập tin</th>
  <th>Kích thước</th>
  <th>Mô tả</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Partition map</ti>
  <ti>31.5k</ti>
  <ti>Partition map</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Phân vùng Swap</ti>
</tr>
<tr>
  <ti><path>/dev/sda4</path></ti>
  <ti>ext3</ti>
  <ti>Phần đĩa còn lại</ti>
  <ti>Phân vùng gốc</ti>
</tr>
</table>

<note>
Những phân vùng được đặt tên như sau: <path>Apple_Driver43,
Apple_Driver_ATA, Apple_FWDriver, Apple_Driver_IOKit,
Apple_Patches</path>. Nếu bạn không định dùng MacOS 9, bạn có thể xóa
nó, vì MacOS X và Linux không cần chúng. Bạn có thể phải dùng
<c>parted</c> để xóa chúng, vì mac-fdisk chưa thể xóa chúng.
</note>

<p>
Nếu bạn muốn biết một phân vùng to cỡ nào, hoặc thậm chí cần bao nhiêu
phân vùng, hãy đọc tiếp. Nếu không hãy tiếp tục với <uri
link="#mac-fdisk">Apple G5: Dùng mac-fdisk để phân vùng đĩa</uri>
hoặc <uri link="#fdisk">IBM pSeries: Dùng fdisk để phân vùng đĩa</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Bao nhiêu và to cỡ nào?</title>
<body>

<p>
Số lượng phân vùng phụ thuộc nhiều vào môi trường của bạn. Ví dụ, nếu
bạn có rất nhiều người dùng, bạn sẽ muốn dùng một phân vùng riêng cho
<path>/home</path> để tăng cường an ninh và dễ sao lưu. Nếu bạn cài
đặt Gentoo làm mail server, bạn nên dùng phân vùng riêng cho
<path>/var</path> vì thư từ được lưu trong <path>/var</path>. Một lựa
chọn hệ tập tin đúng sẽ tăng cường hiệu năng của hệ thống. Game server
thường dùng phân vùng riêng cho <path>/opt</path> vì hầu hết các game
server được cài vào đây. Lý do tách riêng phân vùng cũng tương tự như
với <path>/home</path>: an toàn và sao lưu.
</p>

<p>
Như bạn thấy, nó phụ thuộc rất nhiều vào mục đích của bạn. Phân
vùng/volume rời có những ưu điểm sau:
</p>

<ul>
<li>
  Bạn có thể chọn loại hệ tập tin thích hợp nhất cho phân vùng/volume
  của bạn
</li>
<li>
  Toàn hệ thống không thể nào hết vùng lưu trữ nếu như một công cụ hư
  hỏng nào đó cứ liên tục ghi vào phân vùng/volume
</li>
<li>
  Nếu cần thiết, có thể tiết kiệm thời gian khi kiểm tra hệ tập tin,
  vì nhiều hệ tập tin có thể được kiểm tra đồng thời (mặc dù đây là ưu
  điểm khi có nhiều đĩa hơn là khi dùng nhiều phân vùng)
</li>
<li>
  Tăng cường an ninh bằng cách gắn kết các phân vùng dạng chỉ-đọc,
  nosuid (bỏ qua bit setuid), noexec (không thực thi).
</li>
</ul>

<p>
Tuy nhiên, dùng nhiều phân vùng có một bất lợi lớn: nếu cấu hình không
đúng, bạn có thể có một hệ thống quá dư đĩa ở một phân vùng và thiếu
đĩa trên phân vùng khác. Ngoài ra còn có giới hạn 15 phân vùng trên
SCSI và SATA.
</p>

</body>
</subsection>
</section>
<section id="mac-fdisk">
<title>Mặc định: Dùng mac-fdisk (Apple G5) để phân vùng đĩa</title>
<body>

<p>
Ta sẽ tạo phân vùng dùng <c>mac-fdisk</c>:
</p>

<pre caption="Khởi động mac-fdisk">
# <i>mac-fdisk /dev/sda</i>
</pre>

<p>
Trước hết hãy xóa những phân vùng cũ để có chỗ trống cho các phân vùng
Linux. Dùng <c>d</c> trong <c>mac-fdisk</c> để xóa những phân vùng đó.
Nó sẽ hỏi bạn số phân vùng cần xóa.
</p>

<p>
Sau đó hãy tạo phân vùng <e>Apple_Bootstrap</e> bằng lệnh <c>b</c>. Nó
se hỏi bắt đầu ở khối nào. Nhập vào số phân vùng rỗng đầu tiên, theo
sau bởi <c>p</c>. Trong ví dụ là <c>1p</c>.
</p>

<note>
Phân vùng này <e>không</e> phải là phân vùng "khởi động". Nó không hề
được dùng bởi Linux; bạn không cần đặt bất kỳ hệ tập tin nào vào đó và
bạn không bao giờ mount nó. PPC không cần phân vùng bổ sung cho
<path>/boot</path>.
</note>

<p>
Giờ để tạo phân vùng swap, nhấn <c>c</c>. Một lần nữa <c>mac-fdisk</c>
sẽ hỏi bắt đầu phân vùng ở khối nào. Vì chúng ta đã dùng <c>1</c>
trước đó để tạo phân vùng Apple_Bootstrap, chúng ta sẽ phải nhập
<c>2p</c>. Khi bạn được hỏi kích thước, hãy nhập <c>512M</c> (hoặc bất
kỳ kích thước nào bạn muốn -- 512M chỉ là ví dụ). Khi được hỏi tên,
hãy nhập <c>swap</c> (bắt buộc).
</p>

<p>
Để tạo phân vùng gốc, nhập <c>c</c>, sau đó là <c>3p</c> để chọn khối
bắt đầu phân vùng gốc. Khi được hỏi kích thước, nhập lại <c>3p</c>.
<c>mac-fdisk</c> sẽ hiểu nó là "Dùng mọi không gian còn trống". Khi
được hỏi tên, hãy nhập <c>root</c> (bắt buộc).
</p>

<p>
Để hoàn tất, hãy ghi phân vùng vào bằng <c>w</c> và <c>q</c> để thoát
<c>mac-fdisk</c>.
</p>
    
<note>
Để chắc chắn mọi thứ đều ổn, bạn nên chạy mac-fdisk một lần nữa và
kiểm tra xem mọi phân vùng có chưa. Nếu bạn không thấy bất kỳ phân
vùng nào bạn tạo, hoặc những thay đổi bạn đã tạo ra, bạn nên khởi động
lại phân vùng bằng cách nhấn "i" trong mac-fdisk. Chú ý rằng nó sẽ tạo
lại partition map và xóa mọi phân vùng hiện có.
</note>
    
<p>
Bây giờ bạn đã tạo xong phân vùng, hãy tiếp tục với <uri
link="#filesystems">Tạo các hệ tập tin</uri>.
</p>

</body>
</section>
<section id="fdisk">
<title>IBM pSeries: Dùng fdisk để phân vùng đĩa</title>
<subsection>
<body>

<p>
Phần sau giải thích cách tạo mô hình phân vùng ví dụ, mô tả dưới đây:
</p>

<table>
<tr>
  <th>Phân vùng</th>
  <th>Mô tả</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Phân vùng PPC PReP Boot</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>Phân vùng Swap</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>Phân vùng gốc</ti>
</tr>
</table>

<p>
Hãy thay đổi theo ý bạn.
</p>

</body>
</subsection>
<subsection>
<title>Xem mô hình phân vùng hiện thời</title>
<body>

<p>
<c>fdisk</c> là công cụ mạnh và phổ biến, dùng dể chia đĩa thành các
phân vùng. Hãy khởi động <c>fdisk</c> trên đĩa của bạn (trong ví dụ là
<path>/dev/sda</path>):
</p>

<pre caption="Chạy fdisk">
# <i>fdisk /dev/sda</i>
</pre>

<p>
Sau khi đã vào <c>fdisk</c>, bạn sẽ được chào đóng bằng một dấu nhắc
như sau:
</p>

<pre caption="Dấu nhắc fdisk">
Command (m for help):
</pre>

<p>
Hãy gõ <c>p</c> để hiển thị cấu hình phân vùng đĩa hiện thời:
</p>

<pre caption="Ví dụ cấu hình phân vùng đĩa">
Command (m for help): p

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1          12       53266+  83  Linux
/dev/sda2              13         233      981571+  82  Linux swap
/dev/sda3             234         674     1958701+  83  Linux
/dev/sda4             675        6761    27035410+   5  Extended
/dev/sda5             675        2874     9771268+  83  Linux
/dev/sda6            2875        2919      199836   83  Linux
/dev/sda7            2920        3008      395262   83  Linux
/dev/sda8            3009        6761    16668918   83  Linux

Command (m for help):
</pre>

<p>
Đĩa này được cấu hình để chứa sáu hệ tập tin (mỗi cái tương ứng với
một phân vùng được hiển thị là "Linux") và một phân vùng swap (hiển
thị là "Linux swap").
</p>

</body>
</subsection>
<subsection>
<title>Xóa mọi phân vùng</title>
<body>

<p>
Trước hết chúng ta sẽ xóa mọi phân vùng khỏi đĩa. Hãy nhập <c>d</c> để
xóa một phân vùng. Ví dụ, để xóa <path>/dev/sda1</path>:
</p>

<note>
Nếu bạn không muốn xóa mọi phân vùng, chỉ cần xóa những cái bạn muốn
xóa. Bạn nên sao lưu dữ liệu để tránh mất mát.
</note>

<pre caption="Xóa phân vùng">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Phân vùng đã được lên kế hoạch xóa. Nó sẽ không còn hiện lên khi bạn
gõ <c>p</c>, nhưng nó sẽ chưa bị xóa chừng nào bạn chưa lưu lại các
thiết lập của mình. Nếu bạn phạm sai lầm hoặc muốn ngừng không lưu,
hãy gõ <c>q</c> ngay lập tức và nhấn Enter, các phân vùng của bạn sẽ
không bị xóa.
</p>

<p>
Giờ giả định rằng bạn thực sự muốn xóa mọi phân vùng trên đĩa, hãy lặp
đi lặp lại <c>p</c> để xem mô hình và <c>d</c> kèm số của phân vùng
cần xóa. Sau cùng, bạn sẽ kết thúc khi bảng phân vùng chẳng còn gì
trong đó:
</p>

<pre caption="Bảng phân vùng rỗng">
Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Giờ bảng-phân-vùng-trong-bộ-nhớ đã rỗng, chúng ta đã sẵn sàng để tạo
phân vùng mới. Chúng ta sẽ dùng mô hình phân vùng mặc định đã đề cập
trước đây. Dĩ nhiên, đừng tuân theo những chỉ dẫn này từng chữ một nếu
bạn không muốn tạo ra cùng một mô hình phân vùng như vậy!
</p>

</body>
</subsection>
<subsection>
<title>Tạo phân vùng khởi động PPC PReP</title>
<body>

<p>
Đầu tiên chúng ta tạo phân vùng khởi động PReP. Hãy gõ <c>n</c> để tạo
phân vùng primary, nhấn <c>p</c> để chọn phân vùng primary, theo sau
là <c>1</c> để chọn phân vùng primary đầu tiên. Khi được hỏi cylinder
đầu tiên, hãy nhấn enter. Khi được hỏi cylinder cuối cùng, hãy nhập
<c>+7M</c> để tạo phân vùng có kích thước 7 Mbyte. Sau khi hoàn tất,
hãy gõ <c>t</c> để đặt loại phân vùng, <c>1</c> để chọn phân vùng bạn
vừa tạo và nhập <c>41</c> để đặt là "PPC PReP Boot".
</p>

<note>
Phân vùng PReP phải nhỏ hơn 8 MByte!
</note>

<pre caption="Tạo phân vùng boot PReP">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System

Command (m for help): <i>n</i>
Command action
      e   extended
      p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-6761, default 1): 
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-6761, default
6761): <i>+8M</i>

Command (m for help): <i>t</i>
Selected partition 1
Hex code (type L to list codes): <i>41</i>
Changed system type of partition 1 to 41 (PPC PReP Boot)

Command (m for help):
</pre>

<p>
Giờ hãy gõ <c>p</c>, bạn sẽ thấy như sau:
</p>

<pre caption="Phân vùng boot đã tạo">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           3       13293   41  PPC PReP Boot

Command (m for help):
</pre>
</body>
</subsection>
<subsection>
<title>Tạo phân vùng Swap</title>
<body>

<p>
Nào hãy tạo phân vùng swap. Để thực hiện, hãy gõ <c>n</c> để tạo phân
vùng mới, gõ <c>p</c> để cho fdisk biết bạn muốn tạo phân vùng
primary. Sau đó gõ <c>2</c> để tạo phân vùng primary thứ hai,
<path>/dev/sda2</path> trong trường hợp này. Khi được hỏi cylinder đầu
tiên, hãy nhấn enter. Khi được hỏi cylinder cuối cùng, nhấn
<c>+512M</c> để tạo phân vùng 512MB. Sau khi hoàn thành, hãy gõ
<c>t</c> để đặt kiểu phân vùng, <c>2</c> để chọn phân vùng vừa mới tạo
và gõ <c>82</c> để đặt loại phân vùng là "Linux Swap". Sau khi hoàn
tất những bước này, hãy gõ <c>p</c>, bảng phân vùng sẽ tương tự như sau:
</p>

<pre caption="Bảng phân vùng sau khi tạo phân vùng swap">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           3       13293   41  PPC PReP Boot
/dev/sda2               4         117      506331   82  Linux swap

Command (m for help):
</pre>

</body>
</subsection>
<subsection>
<title>Tạo phân vùng gốc</title>
<body>

<p>
Sau cùng, hãy tạo phân vùng gốc. Để thực hiện, hãy gõ <c>n</c> để tạo
phân vùng mới, sau đó <c>p</c> để tạo phân vùng primary. Nhập <c>3</c>
để tạo phân vùng primary thứ ba, <path>/dev/sda3</path>. Nhấn enter
khi được hỏi cylinder đầu tiên. Nhấn enter khi được hỏi cylinder cuối
cùng để sử dụng toàn bộ vùng đĩa còn lại. Sau khi hoàn tất, hãy gõ
<c>p</c> và bạn sẽ thấy bảng phân vùng tương tự như sau:
</p>

<pre caption="Bảng phân vùng sau khi tạo phân vùng gốc">
Command (m for help): p

Disk /dev/sda: 30.7 GB, 30750031872 bytes
141 heads, 63 sectors/track, 6761 cylinders
Units = cylinders of 8883 * 512 = 4548096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           3       13293   41  PPC PReP Boot
/dev/sda2               4         117      506331   82  Linux swap
/dev/sda3             118        6761    29509326   83  Linux

Command (m for help):
</pre>
</body>
</subsection>
<subsection>
<title>Lưu mô hình phân vùng</title>
<body>

<p>
Để lưu mô hình phân vùng và thoát <c>fdisk</c>, hãy gõ <c>w</c>.
</p>

<pre caption="Lưu và thoát fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Bây giờ bạn đã tạo xong phân vùng, hãy tiếp tục với <uri
link="#filesystems">Tạo các hệ tập tin</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Tạo các hệ tập tin</title>
<subsection>
<title>Giới thiệu</title>
<body>

<p>
Sau khi đã tạo phân vùng, bạn cần cài hệ tập tin lên đó. Nếu bạn không
quan tâm loại hệ tập tin cần chọn và sẵn sàng dùng loại hệ tập tin mặc
định như trong sách này thì bạn có thể tiếp tục với <uri 
link="#filesystems-apply">Cài hệ tập tin lên phân vùng</uri>. Nếu
không hãy đọc tiếp để tìm hiểu về những loại phân vùng được hỗ trợ...
</p>

</body>
</subsection>
<subsection>
<title>Loại hệ tập tin?</title>
<body>

<note>
Có nhiều hệ tập tin. Ext2, ext3 hoạt động ổn định trên PPC64. ReiserFS
và XFS đang được thử nghiệm, còn JFS không được hỗ trợ.
</note>

<p>
<b>ext2</b> là hệ điều hành cho Linux, nhưng nó không có metadata
journaling, nghĩa là việc kiểm tra hệ tập tin lúc khởi động có thể tốn
nhiều thời gian. Có nhiều hệ tập tin mới hơn với tính năng journal để
chọn lựa, tốn ít thời gian kiểm tra hơn so với những loại không có
tính năng journal. Các hệ tập tin journal giúp tránh đợi lâu lúc khởi
động khi hệ tập tin bạn không ổn định.
</p>

<p>
<b>ext3</b> là phiên bản ext2 với tính năng journal, giúp phục hồi
nhanh kèm theo những đặc điểm khác của tính năng journal như full
data, ordered data journaling. ext3 là một lựa chọn tốt và an toàn. Nó
còn có tùy chọn hashed b-tree index giúp tăng hiệu năng trong hầu hết
trường hợp. Nói tóm lại, ext3 là một lựa chọn xuất sắc.
</p>

<p>
<b>ReiserFS</b> là hệ tập tin dựa trên B*-tree có hiệu năng tốt và
vượt xa cả ext2 và ext3 khi xử lý các tập tin nhỏ (nhỏ hơn 4k), thường
vượt gấp 10-15 lần. ReiserFS còn hoạt động tốt trong nhiều điều kiện
khác nhau và hỗ trợ metada journal. Với các kernel 2.4.18 trở đi,
ReiserFS là lựa chọn tốt để sử dụng hằng ngày cũng như những trường
hợp cực kỳ như các hệ tập tin lớn, hệ tập tin chứa nhiều tập tin nhỏ,
những tập tin cực lớn và thư mục chứa hàng ngàn tập tin.
</p>

<p>
<b>XFS</b> là hệ tập tin hỗ trợ metadata journal và một tập tin năng
mạnh mẽ, được tối ưu để thích hợp với nhiều điều kiện khác nhau. Chúng
tôi chỉ khuyến khích dùng loại hệ tập tin này trên Linux với hệ thống
SCSI và/hoặc fibre channel kèm bộ nguồn bảo đảm không bị ngắt. Vì XFS
cache in-transit data trong bộ nhớ một cách đáng kể, những chương
trình không được thiết kế phù hợp (những chương trình không để ý các
phòng ngừa khi ghi tập tin vào đĩa - có vài chương trình như vậy) có
thể làm mất một lượng dữ liệu lớn nếu hệ thống bị ngừng đột ngột.
</p>

<p>
<b>JFS</b> hệ tập tin hiệu suất cao hỗ trợ journal của IBM.
<!--It has recently 
become production-ready -->Không có đủ các báo cáo tích cực cũng như tiêu cực về tính ổn định của nó vào thời điểm này.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Cài hệ tập tin lên phân vùng</title>
<body>

<p>
Để tạo hệ tập tin trên phân vùng hoặc volume, cần có các công cụ cho
mỗi loại hệ tập tin:
</p>

<table>
<tr>
  <th>Hệ tập tin</th>
  <th>Lệnh tạo</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Ví dụ, để định dạng phân vùng gốc (<path>/dev/sda4</path> trong ví dụ
này) dùng loại ext3 (như trong ví dụ), bạn dùng:
</p>

<pre caption="Cài hệ tập tin lên phân vùng">
# <i>mke2fs -j /dev/sda4</i>
</pre>

<p>
Bây giờ tạo hệ tập tin cho những phân vùng của bạn (hoặc các logical
volume).
</p>

</body>
</subsection>
<subsection>
<title>Kích hoạt phân vùng Swap</title>
<body>

<p>
<c>mkswap</c> là lệnh để khởi tạo phân vùng swap:
</p>

<pre caption="Khởi tạo phân vùng Swap">
# <i>mkswap /dev/sda3</i>
</pre>

<p>
Để kích hoạt sử dụng phân vùng swap, dùng <c>swapon</c>:
</p>

<pre caption="Kích hoạt phân vùng swap">
# <i>swapon /dev/sda3</i>
</pre>

<p>
Giờ hãy tạo và kích hoạt phân vùng swap của bạn.
</p>

</body>
</subsection>
</section>
<section>
<title>Mount (Gắn kết)</title>
<body>

<p>
Các phân vùng của bạn đã được tạo và định dạng xong. Giờ là lúc để gắn
các phân vùng này vào hệ thống. Hãy dùng lệnh <c>mount</c>. Đừng quên
tạo những thư mục mount cần thiết trước khi mount các phân vùng bạn đã
tạo vào. Như trong ví dụ, chúng tôi sẽ mount phân vùng gốc và phân
vùng boot:
</p>

<pre caption="Mount các phân vùng">
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/sda4 /mnt/gentoo</i> 
</pre>

<note>
Nếu bạn muốn <path>/tmp</path> nằm trên một phân vùng riêng, hãy đảm
bảo quyền truy cập của nó sau khi mount: <c>chmod 1777
/mnt/gentoo/tmp</c>. Điều này cũng cần được thực hiện với
<path>/var/tmp</path>.
</note>

<p>
Cuối cùng chúng ta tạo <path>/dev</path>, cần có để cài đặt
bootloader. Điều này có thể thực hiện bằng cách mount "bind"
<path>/dev</path> từ LiveCD:
</p>

<pre caption="Mount 'bind' /dev">
# <i>mkdir /mnt/gentoo/dev</i>
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
</pre>

<p>
Chúng ta cũng sẽ mount hệ tập tin proc (một hệ tập tin ảo để giao tiếp
với kernel) vào <path>/proc</path>. Nhưng trước hết  hãy cho các tập
tin vào phân vùng.
</p>

<p>
Hãy tiếp tục với <uri link="?part=1&amp;chap=5">Cài đặt các tập tin
cài đặt Gentoo</uri>.
</p>

</body>
</section>
</sections>
