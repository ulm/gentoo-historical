<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/vi/handbook/hb-install-x86-kernel.xml,v 1.1 2005/03/27 15:43:06 neysx Exp $ -->

<sections>

<version>1.27</version>
<date>2004-12-22</date>

<section>
<title>Múi giờ</title>
<body>

<p>
Trước hết bạn cần chọn múi giờ để hệ thống của bạn biết nó nằm ở nơi
nào. Hãy tìm múi giờ của bạn trong <path>/usr/share/zoneinfo</path>,
sau đó tạo một liên kết biểu tượng đến <path>/etc/localtime</path>
bằng <c>ln</c>:
</p>

<pre caption="Đặt thông tin múi giờ">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Giả sử bạn muốn dùng Asia/Saigon)</comment>
# <i>ln -sf /usr/share/zoneinfo/Asia/Saigon /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Cài đặt từ mã nguồn</title>
<subsection>
<title>Chọn kernel</title>
<body>

<p>
Lõi của mọi bản phân phối là Linux kernel. Nó là một lớp nằm giữa
các chương trình và phần cứng hệ thống. Gentoo cung cấp cho người dùng
vài bộ mã nguồn kernel. Danh sách đầy đủ kèm mô tả nằm trong  <uri
link="/doc/en/gentoo-kernel.xml">Gentoo Kernel Guide</uri>.
</p>

<p>
Với những hệ thống x86, chúng ta có <c>vanilla-sources</c>
(kernel 2.4 mặc định được phát triển bởi linux-kernel developer),
<c>gentoo-sources</c> (kernel 2.4 kèm theo một số tính năng cải thiện
hiệu năng), <c>gentoo-dev-sources</c> (kernel 2.6 kèm theo một số tính
năng cải thiện hiệu năng), <c>development-sources</c> (kernel 2.6
nguyên thủy), ...
</p>

<p>
Nếu bạn thực hiện cài đặt không mạng, sự lựa chọn kernel của bạn bị
giới hạn trong những kernel nằm trên CD. Với phiên bản 2004.3, chúng
ta có:
</p>

<ul>
  <li>gentoo-sources</li>
  <li>vanilla-sources</li>
  <li>gentoo-dev-sources</li>
  <li>development-sources</li>
</ul>

<p>
Hãy chọn mã nguồn kernel bạn muốn và cài vào hệ thống bằng <c>emerge</c>. 
</p>

<pre caption="Cài đặt mã nguồn kernel">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Hãy xem trong <path>/usr/src</path>, bạn sẽ thấy một symlink tên là
<path>linux</path> trỏ đến mã nguồn kernel của bạn. Chúng tôi giả định
mã nguồn kernel đã cài là <c>gentoo-sources-2.4.26-r9</c>:
</p>

<pre caption="Xem liên kết mã nguồn kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.26-gentoo-r9
</pre>

<p>
Nếu symlink không trỏ đến đúng mã nguồn kernel của bạn (chú ý rằng 
<c>linux-2.4.26-gentoo-r9</c> chỉ là ví dụ thôi), bạn nên thay đổi
symlink đến kernel đúng:
</p>

<pre caption="Thay đổi liên kết mã nguồn kernel">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.26-gentoo-r9 linux</i>
</pre>

<p>
Giờ là lúc để cấu hình và biên dịch mã nguồn kernel. bạn có thể dùng
<c>genkernel</c> để tạo ra một kernel tổng quát như kernel dùng bởi
LiveCD. Tuy nhiên chúng tôi giải thích cách cấu hình "bằng tay" trước
vì nó là cách tốt nhất để tối ưu hệ thống của bạn.
</p>

<p>
Nếu bạn muốn cấu hình kernel bằng tay, hãy xem <uri
link="#manual">Mặc định: Cấu hình bằng tay</uri>. Nếu bạn muốn dùng
<c>genkernel</c>, bạn nên đọc <uri link="#genkernel">Thay thế: Dùng 
genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Mặc định: Cấu hình bằng tay</title>
<subsection>
<title>Giới thiệu</title>
<body>

<p>
Cấu hình kernel bằng tay thường bị xem là một quá trình khó khăn mà
người dùng Linux phải thực hiện. Điều đó không đúng -- sau khi cấu
hình một vài kernel, bạn thậm chí không nhớ khó là gì ;)
</p>

<p>
Tuy nhiên, có một điều <e>đúng</e>: bạn phải hiểu hệ thống của bạn khi
bạn cấu hình kernel bằng tay. Hầu hết các thông tin có thể được thu
thập bằng cách xem <path>/proc/pci</path> (hoặc dùng <c>lspci</c> nếu
có). Bạn cũng có thể chạy <c>lsmod</c> để xem những kernel module nào
LiveCD dùng (nó có thể cung cấp những gợi ý hay những cái gì cần bật).
</p>

<p>
Giờ hãy chuyển vào thư mục mã nguồn kernel và chạy <c>make
menuconfig</c>. Nó sẽ khởi động menu cấu hình kernel.
</p>

<pre caption="Chạy menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Bạn sẽ được chào mừng bằng vô số các mục cấu hình. Chúng ta sẽ liệt kê
một số tùy chọn bạn phải kích hoạt (nếu không có Gentoo sẽ không hoạt
động, hoặc không hoạt động đúng với vài tinh chỉnh bổ sung).
</p>

</body>
</subsection>
<subsection>
<title>Kích hoạt các tùy chọn bắt buộc</title>
<body>

<p>
Đầu tiên hãy cho phép sử dụng code/driver thử nghiệm. Bạn cần nó, nếu
không vài code/driver quan trọng sẽ không xuất hiện:
</p>

<pre caption="Chọn code/driver thử nghiệm">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Hãy đảm bảo bạn biên dịch kernel với đúng họ CPU bạn dùng:
</p>

<pre caption="Chọn đúng họ CPU">
Processor type and features ---&gt;
  <comment>(Change according to your system)</comment>
  (<i>Athlon/Duron/K7</i>) Processor family
</pre>

<p>
Giờ vào phần <c>File Systems</c> và chọn những loại hệ tập tin bạn
dùng. <e>Đừng</e> biên dịch chúng là module, nếu không hệ thống Gentoo
sẽ không thể mount các phân vùng của bạn. Ngoài ra hãy chọn <c>Virtual
memory</c>, <c>/proc file system</c>, <c>/dev file system</c> +
<c>Automatically mount at boot</c>:
</p>

<pre caption="Chọn các hệ tập tin cần thiết">
<comment>(Với kernel 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Với kernel 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)

<comment>(Select one or more of the following options as needed by your system)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Nếu BIOS của bạn không thể xử lý ổ đĩa lớn và bạn <!--TODO-->jumper ổ
cứng của bạn để báo cáo kích thước giới hạn, bạn phải bật những tùy
chọn sau để có thể truy cập tới toàn ổ cứng của bạn:
</p>

<pre caption="Chọn hỗ trợ autogeometry resizing">
<comment>(Chỉ với kernel 2.4.x)</comment>
ATA/IDE/MFM/RLL support ---&gt;
  IDE, ATA and ATAPI Block devices ---&gt;
    &lt;*&gt;   Include IDE/ATA-2 DISK support
    [ ]     Use multi-mode by default
    [*]     Auto-Geometry Resizing support
</pre>

<p>
Nếu bạn dùng PPPoE để kết nối Internet hoặc dùng modem quay số, bạn sẽ
cần những tùy chọn sau trong kernel:
</p>

<pre caption="Chọn driver PPPoE cần thiết">
<comment>(Với kernel 2.4.x)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(Với kernel 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Hai tùy chọn nén không phương hại nhưng không phải nhất thiết không
cần, cũng như thế với tùy chọn <c>PPP over Ethernet</c>, nó có thể chỉ
cần bởi <c>rp-pppoe</c> khi cấu hình để dùng PPPoE kernel mode.
</p>

<p>
Nếu bạn cần nó, đừng quên thêm hỗ trợ card mạng vào kernel của một.
</p>

<p>
Nếu bạn có CPU Intel hỗ trợ HyperThreading (tm), hoặc bạn có hệ thống
đa CPU, bạn nên bật <c>Symmetric multi-processing support</c>:
</p>

<pre caption="Kích hoạt hỗ trợ SMP">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Nếu bạn dùng USB Input Device (như bàn phím hoặc /chuột USB), đừng
quên bật nó lên:
</p>

<pre caption="Kích hoạt hỗ trợ USB cho Input Device">
USB Support ---&gt;
  &lt;*&gt;   USB Human Interface Device (full HID) support
</pre>

<p>
Người dùng Laptop sẽ muốn hỗ trợ PCMCIA <e>không nên</e> dùng PCMCIA
driver nếu họ dùng kernel 2.4. Hầu hết các driver mới nằm trong gói 
<c>pcmcia-cs</c> sẽ được cài đặt sau. Tuy nhiên người dùng kernel 2.6
nên dùng PCMCIA driver trong kernel.
</p>

<p>
Khi bạn hoàn tất cấu hình kernel, hãy tiếp tục với <uri 
link="#compiling">Biên dịch và cài đặt</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Biên dịch và cài đặt</title>
<body>

<p>
Bạn đã cấu hình kernel xong, đã đến lúc biên dịch và cài đặt kernel.
Hãy thoát trình cấu hình và chạy <c>make dep &amp;&amp; make bzImage modules 
modules_install</c>:
</p>

<pre caption="Biên dịch kernel">
<comment>(Với kernel 2.4)</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>(Với kernel 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Khi đã biên dịch kernel xong, hãy chép nó vào
<path>/boot</path>. Từ giờ trở đi chúng tôi giả định bạn cài đặt
kernel 2.4.26 từ <c>gentoo-sources</c>. Hãy dùng bất cứ tên nào bạn
thích và nhớ nó vì bạn sẽ cần nó sau này khi bạn cấu hình bootloader.
</p>

<pre caption="Cài đặt kernel">
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.4.26-gentoo-r9</i>
# <i>cp System.map /boot/System.map-2.4.26-gentoo-r9</i>
</pre>

<p>
Tốt nhất bạn nên chép tập tin cấu hình kernel vào <path>/boot</path>,
để phòng hờ :)
</p>

<pre caption="Sao lưu cấu hình kernel">
# <i>cp .config /boot/config-2.4.26-gentoo-r9</i>
</pre>

<p>
Giờ hãy tiếp tục với <uri link="#kernel_modules">Cài đặt các module
riêng rẻ</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Thay thế: Dùng genkernel</title>
<body>

<p>
Nếu bạn đọc phần này, bạn đã chọn cách dùng <c>genkernel</c> để cấu
hình kernel cho bạn.
</p>

<p>
Giờ  mã nguồn kernel đã được cài đặt, đã đến lúc biên dịch kernel bằng
<c>genkernel</c> để tự động tạo kernel cho bạn. <c>genkernel</c> hoạt
động bằng cách cấu hình kernel gần như y hệt cách kernel của LiveCD
được cấu hình, hệ thống của bạn sẽ dò tìm mọi phần cứng lúc khởi động,
y như cách LiveCD đã làm. Vì <c>genkernel</c> không cần cấu hình bằng
tay, nó là giải phải lý tưởng cho những người không quen với việc biên
dịch kernel.
</p>

<p>
Hãy xem dùng <c>genkernel</c> như thế nào. Trước hết hãy emerge
<c>genkernel</c>:
</p>

<pre caption="Cài đặt genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Giờ hãy chạy <c>genkernel all</c>. Tuy nhiên hãy cẩn thận, vì
<c>genkernel</c> biên dịch kernel hỗ trợ hầu hết mọi phần cứng, quá
trình biên dịch sẽ mất nhiều thời gian để hoàn tất!
</p>

<p>
Chú ý rằng, nếu phân vùng khởi động của bạn không dùng hệ tập tin ext2
hoặc ext3, bạn có thể cần cấu hình bằng tay với <c>genkernel --menuconfig 
all</c> và thêm hỗ trợ hệ tập tin của bạn vào <e>trong</e> kernel
(<e>không</e> biên dịch dạng module).
</p>

<pre caption="Chạy genkernel">
# <i>genkernel all</i>
</pre>

<p>
Khi <c>genkernel</c> chạy xong, một kernel và một tập các module và
<e>initial root disk</e> (initrd) đã được tạo. Bạn sẽ dùng kernel và
initrd này khi cấu hình bootloader chốc nữa. Hãy viết ra tên kernel và
initrd vì bạn sẽ cần đến nó khi viết tập tin cấu hình bootloader.
initrd sẽ được dùng ngay sau khi khởi động để thực hiện dò tìm phần
cứng (y như LiveCD) trước khi hệ thống "thực" của bạn được khởi động.
</p>

<pre caption="Kiểm tra kernel image và initrd image đã tạo">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Hãy thực hiện một trong những bước sau để làm cho hệ thống giống với
Live CD hơn -- hãy emerge <c>coldplug</c>. Trong khi initrd tự động dò
tìm phần cứng cần để khởi động hệ thống, <c>coldplug</c> tự động dò
tìm mọi thứ còn lại. Để emerge và bật <c>coldplug</c>, hãy gõ như
sau:
</p>

<note>
Nếu bạn đang cài đặt không mạng, vui lòng dùng <c>hotplug</c> thay vì
<c>coldplug</c>. Coldplug được giới thiệu sau khi 2004.3 được phát
hành và <c>hotplug</c> 2004.3 có cùng chức năng.
</note>

<pre caption="Cài và bật coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug default</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Cài đặt các module kernel riêng lẻ</title>
<subsection>
<title>Cài đặt các module bổ sung</title>
<body>

<p>
Nếu cần, bạn nên emerge những phần cứng bổ sung cần cho hệ thống. Đây
là danh sách những ebuild liên quan đến kernel mà bạn có thể cần
emerge:
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>Ebuild</th>
  <th>Mục đích</th>
  <th>Lệnh</th>
</tr>
<tr>
  <ti>nvidia-kernel</ti>
  <ti>Tăng tốc độ họa xorg-x11 cho card NVIDIA</ti>
  <ti><c>emerge nvidia-kernel</c></ti>
</tr>
<tr>
  <ti>nforce-audio</ti>
  <ti>On-board audio trên NVIDIA NForce(2) motherboard</ti>
  <ti><c>emerge nforce-audio</c></ti>
</tr>
<tr>
  <ti>e100</ti>
  <ti>Intel e100 Fast Ethernet Adapter</ti>
  <ti><c>emerge e100</c></ti>
</tr>
<tr>
  <ti>e1000</ti>
  <ti>Intel e1000 Gigabit Ethernet Adapter</ti>
  <ti><c>emerge e1000</c></ti>
</tr>
<tr>
  <ti>emu10k1</ti>
  <ti>Hỗ trợ Creative Sound Blaster Live!/Audigy (chỉ với kernel 2.4)</ti>
  <ti><c>emerge emu10k1</c></ti>
</tr>
<tr>
  <ti>ati-drivers</ti>
  <ti>Hỗ trợ tăng tốc đồ hoạ cho xorg-x11 với card ATI Radeon 8500+/FireGL</ti>
  <ti><c>emerge ati-drivers</c></ti>
</tr>
</table>

<p>
Tuy nhiên nhớ cẩn thận, vài ebuild có thể kéo theo một lượng lớn
ebuild phụ thuộc khác. Để kiểm tra những gói nào sẽ được cài đặt khi
emerge một ebuild, hãy dùng <c>emerge --pretend</c>. Ví dụ, để kiểm
tra gói <c>emu10k1</c>:
</p>

<pre caption="Xem toàn bộ danh sách cài đặt">
# <i>emerge --pretend emu10k1</i>
</pre>

<p>
Nếu bạn không thích những gói sẽ được cài đặt, hãy dùng <c>emerge --pretend 
--verbose</c> và xem xem những USE flag nào bật để quyết định các
ebuild phụ thuộc:
</p>

<pre caption="Xem cách dùng USE flag">
# <i>emerge --pretend --verbose emu10k1</i>
<comment>...</comment>
[ebuild  N    ] media-sound/aumix-2.8  +gpm +nls +gtk +gnome +alsa -gtk2
</pre>

<p>
Trong ví dụ trước bạn có thể thấy một trong những gói phụ thuộc của
<c>emu10k1</c> (<c>aumix</c>) dùng USE-flag <c>gtk</c> và
<c>gnome</c>, làm cho gtk (và cả xorg-x11 vì gtk cần xorg-x11) được
biên dịch luôn.
</p>

<p>
Nếu bạn không muốn, hãy bỏ mọi USE-flag, ví dụ:
</p>

<pre caption="Emerge emu10k1 bỏ mọi USE-flag">
# <i>USE="-gpm -nls -gtk -gnome -alsa" emerge --pretend emu10k1</i>
</pre>

<p>
Khi bạn vui lòng với kết quả, hãy loại bỏ <c>--pretend</c> để cài đặt
<c>emu10k1</c>.
</p>

</body>
</subsection>
<subsection>
<title>Cấu hình module</title>
<body>

<p>
Bạn nên liệt kê danh sách module bạn muốn nạp tự động trong 
<path>/etc/modules.autoload.d/kernel-2.4</path> (hoặc <path>kernel-2.6</path>). 
Bạn có thể thêm các tùy chọn bổ sung cho các module bạn muốn luôn.
</p>

<p>
Để xem mọi module hiện có, hãy chạy lệnh <c>find</c>. Đừng quên thay
thế "&lt;phiên bản kernel&gt;" với phiên bản kernel bạn đã biên dịch:
</p>

<pre caption="Xem mọi module hiện có">
# <i>find /lib/modules/&lt;phiên bản kernel&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Ví dụ, để tự động nạp module <c>3c59x.o</c>, hãy sửa tập tin
<path>kernel-2.4</path> hoặc <path>kernel-2.6</path> và nhập vào tên
module.
</p>

<pre caption="Sửa /etc/modules.autoload.d/kernel-2.4">
<comment>(Ví dụ cho kernel 2.4)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 hoặc kernel-2.6">
3c59x
</pre>

<p>
Giờ hãy chạy <c>modules-update</c> để lưu các thay đổi vào tập tin
<path>/etc/modules.conf</path>:
</p>

<pre caption="Chạy modules-update">
# <i>modules-update</i>
</pre>

<p>
Hãy tiếp tục cài đặt với <uri link="?part=1&amp;chap=8">Cấu hình hệ
thống của bạn</uri>.
</p>

</body>
</subsection>
</section>
</sections>
