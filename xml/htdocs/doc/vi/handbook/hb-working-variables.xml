<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/vi/handbook/hb-working-variables.xml,v 1.1 2005/04/26 10:08:28 neysx Exp $ -->
<!-- $OldHeader: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/handbook/hb-working-variables.xml,v 1.11 2004/11/20 22:23:30 neysx Exp $ -->

<sections>

<version>1.8</version>
<date>2005-04-25</date>

<section>
<title>Biến môi trường</title>
<subsection>
<title>Nó là gì?</title>
<body>

<p>
Biến môi trường là một đối tượng có tên, chứa thông tin được dùng bởi
một hoặc nhiều ứng dụng. Nhiều người dùng (đặc biệt là những người mới
làm quen với Linux) cảm thấy nó kỳ lạ và không thể quản lý được. Tuy
nhiên, đó là một sai làm: bằng cách dùng biến môi trường, bạn có thể
thay đổi thiết lập cấu hình cho một hoặc nhiều ứng dụng.
</p>

</body>
</subsection>
<subsection>
<title>Ví dụ quan trọng</title>
<body>

<p>
Bảng sau liệt kê một số biến được dùng bởi hệ thống Linux và mô tả
công dụng của chúng. Những giá trị ví dụ được trình bày bên dưới bảng.
</p>

<table>
<tr>
  <th>Biến</th>
  <th>Mô tả</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
    Biến này chứa danh sách các thư mục, cách nhau bởi dấu hai chấm.
    Đó là danh sách các thư mục hệ thống sẽ kiểm tra để tìm các tập
    tin thực thi. Nếu bạn nhập tên một tập tin thực thi (ví dụ như
    <c>ls</c>, <c>rc-update</c> hoặc <c>emerge</c>) nhưng tập tin đó
    không nằm trong những thư mục được liệt kê, hệ thống sẽ không thực
    hiện lệnh đó (trừ khi bạn nhập đầy đủ đường dẫn của lệnh, như
    <c>/bin/ls</c>).
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
    Biến này tương tự như <c>PATH</c> nhưng chỉ liệt kê danh sách
    những thư mục cần tìm khi người dùng root gọi lệnh.
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
    Biến này chứa danh sách các thư mục cánh nhau bằng dấu hai chấm, được
    dùng bởi dynamic linker để tìm các thư viện.
  </ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>
    Biến này chứa danh sách các thư mục cách nhau bằng dấu hai chấm,
    được dùng bởi <c>man</c> để tìm man page.
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
    Biến này chứa danh sách các thư mục cách nhau bằng dấu hai chấm,
    được dùng bởi <c>info</c> để tìm info page.
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
    Biến này chứa đường dẫn chương trình được dùng để xem nội dung tập
    tin (như <c>less</c> hoặc <c>more</c>).
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
    Biến này chứa đường dẫn chương trình dùng để thay đổi nội dung tập
    tin (như <c>nano</c> hoặc <c>vi</c>).
  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
    Biến này chứa danh sách các thư mục cách nhau bằng dấu hai chấm,
    chứa các thông tin đặc trưng của KDE.
  </ti>
</tr>
<tr>
  <ti>CLASSPATH</ti>
  <ti>
    Biến này chứa danh sách các thư mục chứa các lớp Java, cách nhau
    bằng dấu hai chấm.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
    Biến này chứa danh sách các thư mục cách nhau bằng <e>khoảng
    trắng</e>, là danh sách các thư mục cần được Portage bảo vệ tránh
    bị ghi đè khi cập nhật.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
    Biến này chứa danh sách các thư mục cách nhau bằng <e>khoảng
    trắng</e>, là danh sách các thư mục không được Portage bảo vệ
    tránh bị ghi đè khi cập nhật.
  </ti>
</tr>
</table>

<p>
Bên dưới là ví dụ định nghĩa các biến trên:
</p>

<pre caption="Các định nghĩa ví dụ">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CLASSPATH="/opt/blackdown-jre-1.4.1/lib/rt.jar:."
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf
</pre>

</body>
</subsection>
</section>
<section>
<title>Định nghĩa biến toàn cục</title>
<subsection>
<title>Thư mục /etc/env.d</title>
<body>

<p>
Để tập trung các định nghĩa biến, Gentoo giới thiệu thư mục 
<path>/etc/env.d</path>. Bên trong thư mục này, bạn sẽ thấy các tập
tin như <path>00basic</path>, <path>05gcc</path>, ... chứa các biến
được dùng bởi ứng dụng được đề cập bên trên.
</p>

<p>
Ví dụ, khi bạn cài đặt <c>gcc</c>, tập tin tên <path>05gcc</path> được
tạo bởi ebuild gcc, chứa định nghĩa các biến sau:
</p>

<pre caption="/etc/env.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
Các bản phân phối khác yêu cầu bạn thay đổi biến trong
<path>/etc/profile</path> hoặc ở nơi khác. Ngược lại, Gentoo làm mọi
việc dễ dàng hơn cho bạn (và cho cả Portage) khi quản lý các biến môi
trường mà không cần quan tâm đến vô số tập tin có thể chứa biến môi
trường.
</p>

<p>
Ví dụ, khi cập nhật <c>gcc</c>, tập tin <path>/etc/env.d/05gcc</path>
được cập nhật mà không cần bất kỳ sự can thiệp nào của người dùng.
</p>

<p>
Đây không chỉ làm lợi cho Portage mà còn cho cả bạn, người sử dụng.
Đôi khi bạn được yêu cầu đặt một số biến toàn cục. Trong ví dụ sau,
chúng tôi đặt biến <c>http_proxy</c>. Thay vì làm rối tung lên tập tin
<path>/etc/profile</path>, bạn có thể chỉ cần tạo tập tin
(<path>/etc/env.d/99local</path>) và nhập các định nghĩa của bạn vào:
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
Bằng cách dùng cùng một tập tin cho mọi định nghĩa biến của bạn, bạn
có thể có cái nhìn tổng quát về những gì bạn tự định nghĩa.
</p>

</body>
</subsection>
<subsection>
<title>Chương trình env-update</title>
<body>

<p>
Một vài tập tin trong <path>/etc/env.d</path> định nghĩa biến
<c>PATH</c>. Đó không phải là lỗi: khi bạn chạy <c>env-update</c>, nó
sẽ nối tất cả các định nghĩa này lại với nhau trước khi cập nhật biến
môi trường của bạn, nhờ đó làm cho việc thêm các biến môi trường
riêng khi đóng gói (hoặc tự bạn thêm) dễ dàng hơn mà lại không tác
động các giá trị đã có.
</p>

<p>
Script <c>env-update</c> sẽ nối các giá trị của các tập tin lại theo
thứ tự bảng chữ cái tên các tập tin <path>/etc/env.d</path>. Đó là lý
do tại sao các tập tin <path>/etc/env.d</path> bắt đầu bằng con số.
</p>

<pre caption="Thứ tự cập nhật bởi env-update">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
Khi bạn chạy <c>env-update</c>, script này sẽ tạo mọi biến môi trường
và đặt vào <path>/etc/profile.env</path> (được dùng bởi
<path>/etc/profile</path>). Nó cũng rút trích các thông tin từ biến
<c>LDPATH</c> và tạo  <path>/etc/ld.so.conf</path>.  Sau đó, nó sẽ gọi
<c>ldconfig</c> để tạo lại tập tin <path>/etc/ld.so.cache</path>, được
dùng bởi dynamic linker.
</p>

<p>
Nếu bạn muốn thấy tác động của <c>env-update</c> tức thì, sau khi chạy
nó, hãy thực hiện lệnh sau để cập nhật lại biến môi trường của bạn.
Nhưng người dùng tự cài đặt Gentoo có lẽ sẽ nhớ ra lệnh này trong các
chỉ dẫn cài đặt:
</p>

<pre caption="Cập nhật biến môi trường">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Định nghĩa biến cục bộ</title>
<subsection>
<title>User Specific</title>
<body>

<p>
Bạn không phải luôn muốn định nghĩa biến môi trường cho toàn hệ thống.
Ví dụ, bạn có thể muốn thêm <path>/home/my_user/bin</path> vào biến
<c>PATH</c>  nhưng không muốn những người khác trên hệ thống cũng có y
như vậy. Nếu bạn muốn định nghĩa biến môi trường nội bộ, bạn nên dùng
<path>~/.bashrc</path> hoặc <path>~/.bash_profile</path>:
</p>

<pre caption="Mở rộng PATH ~/.bashrc để dùng nội bộ">
PATH="${PATH}:/home/my_user/bin"
</pre>

<p>
Khi bạn login lần sau, biến <c>PATH</c> sẽ được cập nhật.
</p>

</body>
</subsection>
<subsection>
<title>Đặc trưng cho phiên làm việc</title>
<body>

<p>
Đôi khi cần có những định nghĩa biến chặt hơn. Bạn có thể muốn dùng
những chương trình từ một thư mục tạm bạn tạo mà không cần gõ đường
dẫn đến chương trình đó cũng như không sửa <path>~/.bashrc</path> vì
bạn chỉ cần nó trong một lúc.
</p>

<p>
Trong trường hợp này, bạn có thể định nghĩa biến <c>PATH</c> trong quá
trình làm việc bằng cách dùng lệnh <c>export</c>. Chừng nào bạn chưa
log out thì biến <c>PATH</c> sẽ vẫn còn nguyên như bạn mong muốn.
</p>

<pre caption="Định nghĩa biến PATH tạm thời">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>
