<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- Rev: 1.11 -->

<sections>

<version>1.4</version>
<date>2006-02-16</date>

<section>
<title>Cấu hình nâng cao</title>
<body>

<p>
Biến <c>config_eth0</c> là tâm điểm cấu hình giao tiếp mạng. Đó là danh sách
các chỉ dẫn cách cấu hình giao tiếp mạng (<c>eth0</c> trong trường hợp này).
Mỗi lệnh trong danh sách chỉ dẫn này được thực hiện tuần tự. Giao tiếp
mạng được xem là hoạt động nếu ít nhất một lệnh hoạt động.
</p>

<p>
Đây là danh sách các lệnh được hỗ trợ.
</p>

<table>
<tr>
  <th>Lệnh</th>
  <th>Mô tả</th>
</tr>
<tr>
  <ti><c>null</c></ti>
  <ti>Không làm gì cả</ti>
</tr>
<tr>
  <ti><c>noop</c></ti>
  <ti>
    Nếu giao tiếp được bật và có địa chỉ thì ngừng cấu hình, coi như
    cấu hình thành công
  </ti>
</tr>
<tr>
  <ti>một địa chỉ IPv4 hoặc IPv6</ti>
  <ti>Thêm địa chỉ vào giao tiếp mạng</ti>
</tr>
<tr>
  <ti>
    <c>dhcp</c>, <c>adsl</c> hoặc <c>apipa</c> (hoặc lệnh tự chọn khác từ các module bên
    ngoài)
  </ti>
  <ti>
    Chạy module cung cấp lệnh đó. Ví dụ, <c>dhcp</c> sẽ chạy module cung
    cấp DHCP, có thể là <c>dhcpcd</c>, <c>udhcpc</c>, <c>dhclient</c>
    hoặc <c>pump</c>.
  </ti>
</tr>
</table>

<p>
Nếu thất bại, bạn có thể xác định lệnh dự phòng. Lệnh dự phòng phải
trùng khớp chính xác với cấu trúc của cấu hình.
</p>

<p>
Bạn có thể gắn các lệnh này lại với nhau. Đây là vài ví dụ thực tế.
</p>

<pre caption="Ví dụ cấu hình">
<comment># Thêm ba địa chỉ IPv4</comment>
config_eth0=(
  "192.168.0.2/24"
  "192.168.0.3/24"
  "192.168.0.4/24"
)

<comment># Thêm địa chỉ IPv4 và hai địa chỉ IPv6</comment>
config_eth0=(
  "192.168.0.2/24"
  "4321:0:1:2:3:4:567:89ab"
  "4321:0:1:2:3:4:567:89ac"
)

<comment># Giữ địa chỉ do kernel gán, trừ khi giao tiếp bị tắt và sau
# đó sẽ dùng DHCP. Nếu DHCP thất bại thì dùng địa chỉ tĩnh xác định
# theo APIPA</comment>
config_eth0=(
  "noop"
  "dhcp"
)
fallback_eth0=(
  "null"
  "apipa"
)
</pre>

<note>
Khi dùng module <c>ifconfig</c> và thêm nhiều địa chỉ, interface alias sẽ
được tạo cho các địa chỉ bổ sung. Vì thế hai ví dụ trên, bạn sẽ có
interface <c>eth0</c>, <c>eth0:1</c> và <c>eth0:2</c>.
Bạn không thể làm gì đặc biệt với các giao tiếp này vì kernel và chương
trình khác đều coi <c>eth0:1</c> và <c>eth0:2</c> như <c>eth0</c>.
</note>

<impo>
Thứ tự của fallback rất quan trọng! Nếu không xác định tùy chọn
<c>null</c> thì lệnh <c>apipa</c> sẽ chỉ chạy nếu lệnh <c>noop</c>
thất bại.
</impo>

<note>
<uri link="?part=4&amp;chap=3#apipa">APIPA</uri> và
<uri link="?part=4&amp;chap=3#dhcp">DHCP</uri> sẽ được đề cập sau.
</note>

</body>
</section>
<section>
<title>Các phụ thuộc mạng</title>
<body>

<p>
Init script trong <path>/etc/init.d</path> có thể phụ thuộc vào một
giao tiếp mạng hoặc đơn giản là cần mạng. "Mạng" (<c>net</c>) có thể
được định nghĩa trong <path>/etc/conf.d/rc</path> bằng biến
<c>RC_NET_STRICT_CHECKING</c>.
</p>

<table>
<tr>
  <th>Giá trị</th>
  <th>Mô tả</th>
</tr>
<tr>
  <ti><c>none</c></ti>
  <ti>Dịch vụ <c>net</c> luôn coi là bật</ti>
</tr>
<tr>
  <ti><c>no</c></ti>
  <ti>
    Tùy chọn này về cơ bản là coi dịch vụ <c>net</c> là bật nếu ít nhất một
    dịch vụ <c>net.*</c> bật, kèm theo <c>net.lo</c> bật. Người dùng
    notebook có wifi và static nic, và chỉ muốn bật một cái ở bất kỳ
    thời điểm nào, có thể dùng tùy chọn này.
  </ti>
</tr>
<tr>
  <ti><c>lo</c></ti>
  <ti>
    Tùy chọn này giống như <c>no</c> nhưng <c>net.lo</c> cũng được
    tính luôn, hữu dụng cho những người không thật sự quan tâm đến
    giao tiếp mạng cụ thể nào được bật lúc khởi động.
  </ti>
</tr>
<tr>
  <ti><c>yes</c></ti>
  <ti>
    Dịch vụ <c>net</c> được coi là bật nếu MỌI giao tiếp mạng được bật.
  </ti>
</tr>
</table>

<p>
Vậy còn nếu <c>net.br0</c> phụ thuộc vào <c>net.eth0</c> và
<c>net.eth1</c>? <c>net.eth1</c> có thể là thiết bị không dây hoặc ppp
và cần được cấu hình trước khi thêm vào bridge. Không thể làm điều này
trong <path>/etc/init.d/net.br0</path> vì đó là symlink đến
<c>net.lo</c>.
</p>

<p>
Câu trả lời là dùng hàm <c>depend()</c> trong
<path>/etc/conf.d/net</path>
</p>

<pre caption="Phụ thuộc của net.br0 trong /etc/conf.d/net">
<comment># Bạn có thể dùng bất kỳ phụ thuộc nào vẫn dùng trong init
script thông thường (use, after, before)</comment>
depend_br0() {
  need net.eth0 net.eth1
}
</pre>

<p>
Thông tin chi tiết về phụ thuộc, vui lòng xem phần
<uri link="?part=2&amp;chap=4#doc_chap4">Viết 
Init Script</uri> trong Cẩm nang Gentoo.
</p>

</body>
</section>

<section id="variable_name">
<title>Tên biến và giá trị của biến</title>
<body>

<p>
Tên biến là động. Chúng thường tuân theo cấu trúc
<c>variable_${interface|mac|essid|apmac}</c>. Ví dụ, biến
<c>dhcpcd_eth0</c> chứa giá trị tùy chọn dhcpcd cho eth0 và
<c>dhcpcd_essid</c> chứa giá trị tùy chọn  dhcpcd cho bất kỳ giao tiếp
nào kết nối đến ESSID "essid".
</p>

<p>
Tuy nhiên, không có có quy tắc nào tuyên bố tên giao tiếp phải là
ethx. Thật vậy, nhiều giao tiếp không dây có tên như wlanx, rax cũng
như ethx. Ngoài ra vài giao tiếp do người dùng định nghĩa như bridge
có thể có bất kỳ tên nào, như foo. Để cuộc đời thú vị hơn, Access
Point không dây có tên là các ký hiệu không phải chữ cũng không phải số
- đây là điều quan trọng bởi bạn có thể cấu hình tham số mạng trên
ESSID.
</p>

<p>
Mặt trái của điều này là Gentoo dùng biến bash để quản lý mạng - bash
không thể dùng bất cứ gì ngoài chữ và số tiếng Anh. Để khắc phục giới
hạn này chúng tôi thay đổi tất cả ký tự không phải tiếng anh thành ký
tự gạch chân <c>_</c>.
</p>

<p>
Một nhược điểm khác của bash là nội dung biến - vài biến cần được
"escape". Có thể làm điều này bằng cách dùng ký tự <c>\</c> trước các ký tự
cần escape. Danh sách các ký tự cần escape theo cách này là: <c>"</c>,
<c>'</c> và <c>\</c>.
</p>

<p>
Trong ví dụ này, chúng ta dùng ESSID không dây vì chúng có thể chứa
những ký hiệu khác nhau. Chúng ta sẽ dùng ESSID <c>My "\ NET</c>:
</p>

<pre caption="Ví dụ tên biến">
<comment># Lệnh này hoạt động, nhưng domain không hợp lệ</comment>
dns_domain_My____NET="My \"\\ NET"

<comment># Lệnh trên đặt dns domain My "\ NET khi card không dây kết
# nối đến AP có ESSID là My "\ NET</comment>
</pre>

</body>
</section>
</sections>
