<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/vi/handbook/2005.1/hb-install-alpha-disk.xml,v 1.1 2005/08/15 09:30:59 neysx Exp $ -->
<!-- $OldHeader: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/handbook/2005.1/hb-install-alpha-disk.xml,v 1.2 2005/08/08 13:24:46 swift Exp $ -->

<sections>

<version>5.0</version>
<date>2005-08-08</date>

<section>
<title>Giới thiệu Block Device</title>
<subsection>
<title>Thiết bị khối - Block Device</title>
<body>

<p>
Hãy tìm hiểu các quan niệm về đĩa của Gentoo Linux và Linux nói chung, bao
gồm các loại hệ tập tin Linux, phân vùng và block device. Khi bạn đã
quen với đĩa và hệ tập tin, bạn sẽ được hướng dẫn cách thiết lập phân
vùng và hệ tập tin cho Gentoo Linux.
</p>

<p>
Để bắt đầu, chúng tôi sẽ giới thiệu <e>block device</e>. Block device
nổi tiếng nhất có lẽ là những cái đại diện cho ổ đĩa SCSI thứ nhất
trong hệ thống, tên là <path>/dev/sda</path>.
</p>

<p>
Các block device kể trên được dùng để giao tiếp với đĩa. Các chương
trình có thể dùng các block device này để thao tác với đĩa mà không
cần biết đĩa bạn là IDE, SCSI hay cái gì khác. Chương trình chỉ cần
xem đĩa như một loạt các khối liên tục,mỗi khối 512 byte, có thể truy
cập ngẫu nhiên.
</p>

</body>
</subsection>
<subsection>
<title>Slice</title>
<body>

<p>
Mặc dù theo lý thuyết chúng ta có thể sử dụng toàn bộ đĩa cứng làm một
vùng để chứa hệ thống Linux, Tuy nhiên trong thực tế thì không bao giờ
sử dụng như vậy, thay vào đó, ổ đĩa cứng sẽ được chia thành các thiết
bị khối nhỏ hơn, dễ quản lý hơn. Trên hệ thống Alpha, chúng được gọi
là các <e>slice</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Thiết kế mô hình phân vùng</title>
<subsection>
<title>Mô hình phân vùng mặc định</title>
<body>

<p>
Trong ví dụ, chúng tôi dùng phân bố slice như sau:
</p>

<table>
<tr>
  <th>Slice</th>
  <th>Mô tả</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Swap slice</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>Root slice</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>Toàn bộ đĩa (bắt buộc)</ti>
</tr>
</table>


<p>
Nếu bạn quan tâm đến kích cỡ nên dùng cho phân vùng, hoặc số lượng
phân vùng (hoặc volume), hãy đọc tiếp. Nếu không, bạn có thể tiếp tục
với <uri link="#fdisk_SRM">Phân hoạch đĩa cứng bằng fdisk (Dành cho SRM)</uri>
hoặc <uri link="#fdisk_ARC">Phân hoạch đĩa cứng bằng fdisk (Dành cho ARC/AlphaBIOS)</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Bao nhiêu và bao lớn?</title>
<body>

<p>
Số lượng phân vùng phụ thuộc nhiều vào môi trường của bạn. Ví dụ, nếu
bạn có rất nhiều người dùng, bạn sẽ muốn dùng một phân vùng riêng cho
<path>/home</path> để tăng cường an ninh và dễ sao lưu. Nếu bạn cài
đặt Gentoo làm mail server, bạn nên dùng phân vùng riêng cho
<path>/var</path> vì thư từ được lưu trong <path>/var</path>. Một lựa
chọn hệ tập tin đúng sẽ tăng cường hiệu năng của hệ thống. Game server
thường dùng phân vùng riêng cho <path>/opt</path> vì hầu hết các game
server được cài vào đây. Lý do tách riêng phân vùng cũng tương tự như
với <path>/home</path>: an toàn và sao lưu. Bạn chắc chắn sẽ cần một
<path>/usr</path> to: nó không chỉ chứa một lượng lớn các ứng dụng,
cây Portage chiếm gần 500 MB, không tính mà nguồn cũng được lưu trong
đó.
</p>

<p>
Như bạn thấy, nó phụ thuộc rất nhiều vào mục đích của bạn. Phân
vùng/volume rời có những ưu điểm sau:
</p>

<ul>
<li>
  Bạn có thể chọn loại hệ tập tin thích hợp nhất cho phân vùng/volume
  của bạn
</li>
<li>
  Toàn hệ thống không thể nào hết vùng lưu trữ nếu như một công cụ hư
  hỏng nào đó cứ liên tục ghi vào phân vùng/volume
</li>
<li>
  Nếu cần thiết, có thể tiết kiệm thời gian khi kiểm tra hệ tập tin,
  vì nhiều hệ tập tin có thể được kiểm tra đồng thời (mặc dù đây là ưu
  điểm khi có nhiều đĩa hơn là khi dùng nhiều phân vùng)
</li>
<li>
  Tăng cường an ninh bằng cách gắn kết các phân vùng dạng chỉ-đọc,
  nosuid (bỏ qua bit setuid), noexec (không thực thi).
</li>
</ul>

<p>
Tuy nhiên, dùng nhiều phân vùng có một bất lợi lớn: nếu cấu hình không
đúng, bạn có thể có một hệ thống quá dư đĩa ở một phân vùng và thiếu
đĩa trên phân vùng khác.
</p>

</body>
</subsection>
</section>
<section id="fdisk_SRM">
<title>Phân hoạch đĩa cứng bằng fdisk (Dành cho SRM)</title>
<subsection>
<body>

<p>
Những phần sau giải thích cách tạo phân bố slice ví dụ được mô tả ở
trên, cụ thể như sau:
</p>

<table>
<tr>
  <th>Slice</th>
  <th>Mô tả</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Swap slice</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>Root slice</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>Toàn bộ đĩa (bắt buộc)</ti>
</tr>
</table>

<p>
Hãy thay đổi phân bố slice theo ý thích của bạn.

</p>


</body>
</subsection>
<subsection>
<title>Xác định những đĩa hiện có</title>
<body>

<p>
Để hình dùng những đĩa bạn đang có, hãy dùng lệnh sau:
</p>

<pre caption="Xác định những đĩa hiện có">
# <i>dmesg | grep 'drive$'</i>        <comment>(Với đĩa IDE)</comment>
# <i>dmesg | grep 'scsi'</i>          <comment>(Với đĩa SCSI)</comment>
</pre>

<p>
Với kết quả có được, bạn có thể biết được những đĩa nào được nhận dạng
và mục <path>/dev</path> tương ứng với nó. Trong những phần sau, chúng
tôi giả định rằng đĩa là SCSI, nằm trên <path>/dev/sda</path>.
</p>

<p>
Giờ hãy khởi động <c>fdisk</c>:
</p>

<pre caption="Khởi động fdisk">
# <i>fdisk /dev/sda</i>
</pre>

</body>
</subsection>
<subsection>
<title>Xóa mọi slice</title>
<body>

<p>
Nếu đĩa cứng của bạn là đĩa trắng, bạn sẽ cần tạo BSD disklabel đầu
tiên.
</p>

<pre caption="Tạo BSD disklabel">
Command (m for help): <i>b</i>
/dev/sda contains no disklabel.
Do you want to create a disklabel? (y/n) <i>y</i>
<comment>Những thông tin đặc trưng của đĩa nằm ở đây</comment>
3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  c:        1      5290*     5289*    unused        0     0
</pre>

<p>
Chúng ta sẽ xóa mọi slice <e>trừ</e> 'c'-slide (bắt buộc cho các BSD
disklabel). Những bước sau sẽ trình bày cách xóa một slice (trong ví
dụ là 'a'). Hãy lặp lại bước này để xóa hết các slice khác (một lần
nữa, trừ 'c'-slice ra).
</p>

<p>
Hãy dùng <c>p</c> để xem mọi slice hiện có. <c>d</c> được dùng để xóa
một slice.
</p>

<pre caption="Xóa slice">
BSD disklabel command (m for help): <i>p</i>

8 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        1       235*      234*    4.2BSD     1024  8192    16
  b:      235*      469*      234*      swap
  c:        1      5290*     5289*    unused        0     0
  d:      469*     2076*     1607*    unused        0     0
  e:     2076*     3683*     1607*    unused        0     0
  f:     3683*     5290*     1607*    unused        0     0
  g:      469*     1749*     1280     4.2BSD     1024  8192    16
  h:     1749*     5290*     3541*    unused        0     0

BSD disklabel command (m for help): <i>d</i>
Partition (a-h): <i>a</i>
</pre>

<p>
Sau khi đã xóa hết mọi slice, danh sách slice sẽ giống như sau:
</p>

<pre caption="Xem schema rỗng">
BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  c:        1      5290*     5289*    unused        0     0
</pre>

</body>
</subsection>
<subsection>
<title>Tạo Swap Slice</title>
<body>

<p>
Trên hệ thống Alpha, bạn không cần phân vùng khởi động riêng. Tuy
nhiên, cylinder đầu tiên không thể được dùng vì đó là chỗ của
<c>aboot</c> image.
</p>

<p>
Chúng ta sẽ tạo một swap slice, bắt đầu tại cylinder thứ ba, với kích
thước 1 GB. Hãy dùng <c>n</c> để tạo slice mới. Sau khi tạo slice,
chúng ta sẽ đổi kiểu slice của nó thành <c>1</c> (một), nghĩa là
<e>swap</e>.
</p>

<pre caption="Tạo swap slice">
BSD disklabel command (m for help): <i>n</i>
Partition (a-p): <i>a</i>
First cylinder (1-5290, default 1): <i>3</i>
Last cylinder or +size or +sizeM or +sizeK (3-5290, default 5290): <i>+1024M</i>

BSD disklabel command (m for help): <i>t</i>
Partition (a-c): <i>a</i>
Hex code (type L to list codes): <i>1</i>
</pre>

<p>
Sau bước này bạn sẽ thấy phân vùng tương tự như sau:
</p>

<pre caption="Mô hình slice sau khi tạp swap slice">
BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        3      1003      1001       swap
  c:        1      5290*     5289*    unused        0     0
</pre>

</body>
</subsection>
<subsection>
<title>Tạo Root Slice</title>
<body>

<p>
Chúng ta sẽ tạo root slice, bắt đầu từ cylinder đầu tiên <e>sau</e>
swap slice. Dùng lệnh <c>p</c> để xem nơi swap slice kết thúc. Trong
ví dụ, đó là 1003, chúng ta sẽ tạo root slice bắt đầu tại vị trí 1004.
</p>

<p>
Một vấn đề khác là có một bug trong <c>fdisk</c> làm cho nó nghĩ số
cylinder sẵn có lớn hơn một so với số thực sự. Nói cách khác, khi bạn
hỏi cylinder cuối cùng, hãy giảm một trên số cylinder (trong ví dụ là
5290).
</p>

<p>
Khi phân vùng đã được tạo, chúng ta sẽ đổi kiểu của nó thành <c>8</c>,
là <e>ext2</e>.
</p>

<pre caption="Tạo root slice">
D disklabel command (m for help): <i>n</i>
Partition (a-p): <i>b</i>
First cylinder (1-5290, default 1): <i>1004</i>
Last cylinder or +size or +sizeM or +sizeK (1004-5290, default 5290): <i>5289</i>

BSD disklabel command (m for help): <i>t</i>
Partition (a-c): <i>b</i>
Hex code (type L to list codes): <i>8</i>
</pre>

<p>
Mô hình slice của bạn sẽ giống như sau:
</p>

<pre caption="Xem mô hình slice">
BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        3      1003      1001       swap
  b:     1004      5289      4286       ext2
  c:        1      5290*     5289*    unused        0     0
</pre>

</body>
</subsection>
<subsection>
<title>Lưu mô hình slice và thoát</title>
<body>

<p>
Hãy lưu lại và thoát bằng lệnh <c>w</c>.
</p>

<pre caption="Lưu và thoát fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Giờ bạn đã tạo slice, bạn có thể tiếp tục với <uri
link="#filesystems">Tạo các hệ tập tin</uri>.
</p>

</body>
</subsection>
</section>
<section id="fdisk_ARC">
<title>Phân hoạch đĩa cứng bằng fdisk (Dành cho ARC/AlphaBIOS)</title>
<subsection>
<body>

<p>
Phần sau mô tả cách phân vùng đĩa với mô hình tương tự như cái đã mô
tả ở trên, cụ thể:
</p>

<table>
<tr>
  <th>Phân vùng</th>
  <th>Mô tả</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Phân vùng khởi động</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>Phân vùng Swap</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>Phân vùng gốc</ti>
</tr>
</table>

<p>
Hãy thay đổi mô hình theo ý thích của bạn.
</p>

</body>
</subsection>
<subsection>
<title>Xác định những đĩa hiện có</title>
<body>

<p>
Để biết được đĩa nào đang dùng, hãy dùng lệnh:
</p>

<pre caption="Xác định những đĩa đang có">
# <i>dmesg | grep 'drive$'</i>        <comment>(Với đĩa IDE)</comment>
# <i>dmesg | grep 'scsi'</i>          <comment>(Với đĩa SCSI)</comment>
</pre>

<p>
Từ kết quả ta có thể biết những đĩa nào được nhận diện và mục
<path>/dev</path> tương ứng của nó. Phần sau giả định bạn có đĩa SCSI
trên <path>/dev/sda</path>.
</p>

<p>
Giờ hãy khởi động <c>fdisk</c>:
</p>

<pre caption="Khởi động fdisk">
# <i>fdisk /dev/sda</i>
</pre>

</body>
</subsection>
<subsection>
<title>Xóa mọi phân vùng</title>
<body>

<p>
Nếu đĩa cứng của bạn là đĩa trắng, bạn sẽ cần tạo một DOS disklabel.
</p>

<pre caption="Tạo DOS disklabel">
Command (m for help): <i>o</i>
Building a new DOS disklabel.
</pre>

<p>
Chúng ta sẽ xóa mọi phân vùng. Phần sau chỉ cách xóa một phân vùng
(trong ví dụ là '1'). Hãy lặp lại bước này đến khi xóa hết các phân
vùng khác.
</p>

<p>
Dùng <c>p</c> để xem các phân vùng còn tồn tại.  <c>d</c> được dùng để
xóa phân vùng.
</p>

<pre caption="Xóa một phân vùng">
command (m for help): <i>p</i>

Disk /dev/sda: 9150 MB, 9150996480 bytes
64 heads, 32 sectors/track, 8727 cylinders
Units = cylinders of 2048 * 512 = 1048576 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1         478      489456   83  Linux
/dev/sda2             479        8727     8446976    5  Extended
/dev/sda5             479        1433      977904   83  Linux Swap
/dev/sda6            1434        8727     7469040   83  Linux

command (m for help): <i>d</i>
Partition number (1-6): <i>1</i>
</pre>


</body>
</subsection>
<subsection>
<title>Tạo phân vùng khởi động</title>
<body>

<p>
Trên hệ thống Alpha khởi động bằng MILO, bạn sẽ phải tạo một phân vùng
vfat nhỏ để khởi động.
</p>

<pre caption="Tạo phân vùng khởi động">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-8727, default 1): <i>1</i>
Last cylinder or +size or +sizeM or +sizeK (1-8727, default 8727): <i>+16M</i>

Command (m for help): <i>t</i>
Selected partition 1
Hex code (type L to list codes): <i>6</i>
Changed system type of partition 1 to 6 (FAT16)
</pre>

</body>
</subsection>
<subsection>
<title>Tạo phân vùng Swap</title>
<body>

<p>
Chúng ta sẽ tạp phân vùng swap bắt đầu từ cylinder thứ ba, có kích
thước 1 GB. Hãy dùng <c>n</c> để tạo phân vùng mới.
</p>

<pre caption="Tạo phân vùng swap">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>2</i>
First cylinder (17-8727, default 17): <i>17</i>
Last cylinder or +size or +sizeM or +sizeK (17-8727, default 8727): <i>+1000M</i>

Command (m for help): <i>t</i>
Partition number (1-4): <i>1</i>
Hex code (type L to list codes): <i>82</i>
Changed system type of partition 2 to 82 (Linux swap)
</pre>

<p>
Sau khi thực hiện những bước này, bạn sẽ có mô hình tương tự như sau:
</p>

<pre caption="Phân hoạch sau khi tạo phân vùng swap">
Command (m for help): <i>p</i>

Disk /dev/sda: 9150 MB, 9150996480 bytes
64 heads, 32 sectors/track, 8727 cylinders
Units = cylinders of 2048 * 512 = 1048576 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1          16       16368    6  FAT16
/dev/sda2              17         971      977920   82  Linux swap
</pre>

<p>
Hãy tạo và kích hoạt phân vùng swap của bạn bằng những lệnh trên.
</p>

</body>
</subsection>
<subsection>
<title>Tạo phân vùng gốc</title>
<body>

<p>
Chúng ta sẽ tạo phân vùng gốc, bằng lệnh <c>n</c>.
</p>

<pre caption="Tạo phân vùng gốc">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>3</i>
First cylinder (972-8727, default 972): <i>972</i>
Last cylinder or +size or +sizeM or +sizeK (972-8727, default 8727): <i>8727</i>
</pre>

<p>
Sau bước này, bạn được mô hình phân vùng tương tự như sau:
</p>

<pre caption="Phân hoạch sau khi tạo phân vùng gốc">
Command (m for help): <i>p</i>

Disk /dev/sda: 9150 MB, 9150996480 bytes
64 heads, 32 sectors/track, 8727 cylinders
Units = cylinders of 2048 * 512 = 1048576 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1          16       16368    6  FAT16
/dev/sda2              17         971      977920   82  Linux swap
/dev/sda3             972        8727     7942144   83  Linux
</pre>

</body>
</subsection>
<subsection>
<title>Lưu phân hoạch và thoát</title>
<body>

<p>
Hãy gõ <c>w</c> để lưu mô hình phân vùng và thoát khỏi <c>fdisk</c>.
</p>

<pre caption="Lưu và thoát fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Giờ bạn đã tạo xong phân vùng, hãy tiếp tục với <uri
link="#filesystems">Tạo các hệ tập tin</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Tạo các hệ tập tin</title>
<subsection>
<title>Giới thiệu</title>
<body>

<p>
Bây giờ bạn đã tạo xong các phần vùng, đã đến lúc tạo các hệ tập tin
trên những phân vùng này. Nếu bạn không quan tập loại hệ tập tin nào
cần chọn và bằng lòng với hệ tập tin mặc định trong tài liệu này, hãy
tiếp tục với <uri link="#filesystems-apply">Cài hệ tập tin lên phân
vùng</uri>.
Nếu không hãy đọc tiếp để biết về các hệ tập tin...
</p>

</body>
</subsection>
<subsection>
<title>Loại hệ tập tin?</title>
<body>

<p>
Có một vài hệ tập tin khác nhau để bạn lựa chọn. Hầu hết trong số này
hoạt động ổn định trên kiến trúc Alpha.
</p>

<p>
<b>ext2</b> là hệ tập tin cho Linux, nhưng nó không có metadata
journaling, nghĩa là việc kiểm tra hệ tập tin lúc khởi động có thể tốn
nhiều thời gian. Có nhiều hệ tập tin mới hơn với tính năng journal để
chọn lựa, tốn ít thời gian kiểm tra hơn so với những loại không có
tính năng journal. Các hệ tập tin journal giúp tránh đợi lâu lúc khởi
động khi hệ tập tin bạn không ổn định.
</p>

<p>
<b>ext3</b> là phiên bản ext2 với tính năng journal, giúp phục hồi
nhanh kèm theo những đặc điểm khác của tính năng journal như full
data, ordered data journaling. ext3 là một lựa chọn tốt và an toàn. Nó
còn có tùy chọn hashed b-tree index giúp tăng hiệu năng trong hầu hết
trường hợp. Bạn có thể bật index bằng tùy chọn <c>-O dir_index</c>
trong lệnh <c>mke2fs</c>. Nói tóm lại, ext3 là một lựa chọn xuất sắc.
</p>

<p>
<b>ReiserFS</b> là hệ tập tin dựa trên B*-tree có hiệu năng tốt và
vượt xa cả ext2 và ext3 khi xử lý các tập tin nhỏ (nhỏ hơn 4k), thường
vượt gấp 10-15 lần. ReiserFS còn hoạt động tốt trong nhiều điều kiện
khác nhau và hỗ trợ metada journal. Với các kernel 2.4.18 trở đi,
ReiserFS là lựa chọn tốt để sử dụng hằng ngày cũng như những trường
hợp cực kỳ như các hệ tập tin lớn, hệ tập tin chứa nhiều tập tin nhỏ,
những tập tin cực lớn và thư mục chứa hàng ngàn tập tin.
</p>

<p>
<b>XFS</b> là hệ tập tin hỗ trợ metadata journal và một tập tin năng
mạnh mẽ, được tối ưu để thích hợp với nhiều điều kiện khác nhau. Chúng
tôi chỉ khuyến khích dùng loại hệ tập tin này trên Linux với hệ thống
SCSI và/hoặc fibre channel kèm bộ nguồn bảo đảm không bị ngắt. Vì XFS
cache in-transit data trong bộ nhớ một cách đáng kể, những chương
trình không được thiết kế phù hợp (những chương trình không để ý các
phòng ngừa khi ghi tập tin vào đĩa - có vài chương trình như vậy) có
thể làm mất một lượng dữ liệu lớn nếu hệ thống bị ngừng đột ngột.
</p>

<p>
<b>JFS</b> hệ tập tin hiệu suất cao hỗ trợ journal của IBM.
<!--It has recently 
become production-ready -->Không có đủ các báo cáo tích cực cũng như tiêu cực về tính ổn định của nó vào thời điểm này.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Cài hệ tập tin lên phân vùng</title>
<body>

<p>
Để tạo hệ tập tin trên phân vùng hoặc volume, cần có các công cụ cho
mỗi loại hệ tập tin:
</p>

<table>
<tr>
  <th>Hệ tập tin</th>
  <th>Lệnh tạo</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Ví dụ, để tạo phân vùng gốc (<path>/dev/sda2</path> trong ví dụ này)
với ext3, bạn dùng:
</p>

<pre caption="Cài hệ tập tin lên phân vùng">
# <i>mke2fs -j /dev/sda2</i>
</pre>

<p>
Bây giờ tạo hệ tập tin cho những phân vùng của bạn (hoặc các logical
volume).
</p>

</body>
</subsection>
<subsection>
<title>Kích hoạt phân vùng Swap</title>
<body>

<p>
<c>mkswap</c> là lệnh để khởi tạo phân vùng swap:
</p>

<pre caption="Khởi tạo phân vùng Swap">
# <i>mkswap /dev/sda1</i>
</pre>

<p>
Để kích hoạt sử dụng phân vùng swap, dùng <c>swapon</c>:
</p>

<pre caption="Kích hoạt phân vùng swap">
# <i>swapon /dev/sda1</i>
</pre>

<p>
Giờ hãy tạo và kích hoạt phân vùng swap của bạn.
</p>

</body>
</subsection>
</section>
<section>
<title>Mount (Gắn kết)</title>
<body>

<p>
Các phân vùng của bạn đã được tạo và định dạng xong. Giờ là lúc để gắn
các phân vùng này vào hệ thống. Hãy dùng lệnh <c>mount</c>. Đừng quên
tạo những thư mục mount cần thiết trước khi mount các phân vùng bạn đã
tạo vào. Như trong ví dụ, chúng tôi sẽ mount phân vùng gốc và phân
vùng boot:
</p>

<warn>
Do lỗi của gói phần mềm e2fsprogs, bạn cần xác định rõ ràng tùy chọn
<c>mount -t ext3</c> nếu bạn dùng hệ tập tin ext3.
</warn>

<pre caption="Mount các phân vùng">
# <i>mount /dev/sda2 /mnt/gentoo</i>
<comment>(Với phân vùng ext3)</comment>
# <i>mount -t ext3 /dev/sda2 /mnt/gentoo</i>
</pre>

<note>
Nếu bạn muốn <path>/tmp</path> nằm trên một phân vùng riêng, hãy đảm
bảo quyền truy cập của nó sau khi mount: <c>chmod 1777
/mnt/gentoo/tmp</c>. Điều này cũng cần được thực hiện với
<path>/var/tmp</path>.
</note>

<p>
Chúng ta cũng sẽ mount hệ tập tin proc (một hệ tập tin ảo để giao tiếp
với kernel) vào <path>/proc</path>. Nhưng trước hết  hãy cho các tập
tin vào phân vùng.
</p>

<p>
Hãy tiếp tục với <uri link="?part=1&amp;chap=5">Cài đặt các tập tin
cài đặt Gentoo</uri>.
</p>

</body>
</section>
</sections>
