<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/vi/handbook/2005.1/hb-install-ppc-bootloader.xml,v 1.1 2005/08/15 09:30:59 neysx Exp $ -->
<!-- $OldHeader: /var/www/www.gentoo.org/raw_cvs/gentoo/xml/htdocs/doc/en/handbook/2005.1/hb-install-ppc-bootloader.xml,v 1.3 2005/08/08 13:24:46 swift Exp $ -->

<sections>

<version>5.1</version>
<date>2005-08-12</date>

<section>
<title>Chọn Bootloader</title>
<subsection>
<title>Giới thiệu</title>
<body>

<p>
Kernel của bạn đã được cấu hình, biên dịch và các tập tin cấu hình cần
thiết đã sẵn sàng. Giờ là lúc để cài đặt chương trình để khởi động
kernel khi bạn khởi động hệ thống. Chương trình đó gọi là
<e>bootloader</e>. Bootloader nào tùy thuộc vào loại máy PPC của
bạn...
</p>

<p>
Nếu bạn có máy NewWorld Apple và IBM, bạn cần dùng <uri
link="#yaboot">yaboot</uri>. Nếu bạn có máy Apple OldWorld, bạn có hai
lựa chọn, <uri link="#bootx">BootX</uri> và <uri
link="#quik">quik</uri>. Pegasos không cần bootloader,
nhưng bạn cần cài đặt <uri link="#bootcreator">BootCreator</uri> để tạo
bootmenu SmartFirmware.
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>Mặc định: Dùng yaboot</title>
<subsection>
<title>Giới thiệu</title>
<body>

<impo>
Bạn chỉ có thể dùng yaboot với các hệ thống NewWorld Apple và IBM
thôi!
</impo>

<p>
Để có thể tìm thấy boot device, yaboo cần truy cập vào hệ tập tin
<path>/dev</path> trong hệ thống. Nó được thực hiện bằng cách "bind"
(gắn) hệ tập tin <path>/dev</path> từ CD Cài đặt vào
<path>/dev/</path> trong môi trường chroot:
</p>

<pre caption="Mount (bind) hệ tập tin /dev">
# <i>exit </i> # this will exit the chroot
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>
    
<p>
Để thiết lập yaboot, bạn có thể dùng <c>yabootconfig</c>.  Nếu vì vài lý
do nào đó bạn không muốn chạy <path>/etc/yaboot.conf</path> hoặc bạn
đang cài đặt Gentoo trên G5 (không phải lúc nào <c>yabootconfig</c>
cũng chạy trên G5), hoặc bạn định khởi động từ firmware hoặc USB, bạn
có thể chỉ cần hiệu chỉnh tập tin mẫu đã cài đặt trên hệ thống bằng
tay.
</p>

<note>
Bạn có thể cần sửa yaboot.conf nếu dùng genkernel, ngay cả khi dùng
yaboot. Các đối số do genkernel đưa ra cần được thêm vào thành một tùy
chọn trong phần kernel image. Phần liên quan trong yaboot.conf như
sau:
</note>

<pre caption="Thêm đối số khởi động genkernel vào yaboot.conf">
<comment>###########################################################
## This section can be duplicated if you have more than one
## kernel or set of boot options - replace kernel-2.6.12
## with the exact filename of your kernel.
###########################################################</comment>
image=/boot/kernel-2.6.12
  label=Linux
  root=/dev/ram0    <comment># Nếu dùng genkernel, nó là /dev/ram0</comment>
  partition=3
  append="real_root=/dev/hda2 init=/linuxrc"  
  <comment># Bạn có thể thêm đối số bổ sung như # rootdelay=10 cho USB/Firewire Boot</comment>
  read-only
<comment>##########################################################</comment>
</pre>

<ul>
  <li><uri link="#yabootconfig">Mặc định: Dùng yabootconfig</uri></li>
  <li>
    <uri link="#manual_yaboot">Thay thế: Cấu hình yaboot bằng tay</uri>
  </li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig">
<title>Mặc định: Dùng yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> sẽ tự động dò tìm các phân vùng trên hệ thống và
sẽ thiết lập chế độ kết hợp khởi động kép và khởi động cả ba Linux,
Mac OS, và Mac OS X.
</p>

<p>
Để dùng <c>yabootconfig</c>, ổ đĩa của bạn phải có một phân vùng
bootstrap, và <path>/etc/fstab</path> phải được cấu hình với những
phân vùng Linux. Cả hai phải được thực hiện hoàn tất trong những bước
trên. Để bắt đầu, phải đảm bảo bạn đã cài đặt <c>yaboot</c> bản mới
nhất.
</p>

<pre caption = "Cài đặt yaboot với GRP">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Bây giờ hãy thoát chroot và chạy <c>yabootconfig --chroot
/mnt/gentoo</c>. Chương trình sẽ chạy và nó sẽ xác nhận vị trí phân
vùng bootstrap. Hãy nhấn <c>Y</c> nếu nó đúng. Nếu không, hãy kiểm tra
cẩn thận <path>/etc/fstab</path>. Sau đó <c>yabootconfig</c> sẽ quét
thiết lập hệ thống, tạo <path>/etc/yaboot.conf</path> và chạy
<c>mkofboot</c> cho bạn. <c>mkofboot</c> được dùng để định dạng phân
vùng bootstrap, và cài đặt cấu hình tập tin cấu hình yaboot vào đó.
Sau bước này, hãy trở về chroot.
</p>
<pre caption="Vào chroot">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Bạn có thể muốn kiểm tra nội dung <path>/etc/yaboot.conf</path>. Nếu
bạn thay đổi <path>/etc/yaboot.conf</path> (như đặt hệ điều hành mặc
định), hãy nhớ chạy lại <c>ybin -v</c> để áp dụng các thay đổi vào
phân vùng Apple_Bootstrap.
</p>

<p>
Hãy tiếp tục với <uri link="#reboot">Khởi động lại hệ thống</uri>.
</p>

</body>
</subsection>
<subsection id="manual_yaboot">
<title>Thay thế: Cấu hình yaboot bằng tay</title>
<body>

<p>
Trước hết hãy đảm bảo bạn đã cài đặt <c>yaboot</c> mới nhất:
</p>

<pre caption = "Cài đặt yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Bên dưới là tập tin <path>yaboot.conf</path>. Bạn có thể cần sửa lại
nó cho phù hợp nhu cầu. Người dùng G5 khởi động từ firewire hoặc USE
nên chú ý rằng đĩa của họ là Serial ATA và được Linux kernel xem như
là đĩa SCSI (vì thế hãy thay thế <path>/dev/hda</path> bằng
<path>/dev/sda</path>).
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## chạy: "man yaboot.conf" để biết chi tiết. Đừng thay đổi nếu không cần!!
## xem thêm: cấu hình mẫu /usr/share/doc/yaboot/examples.
##
## Với menu khởi động kép, thêm một trong những cái sau:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## phân vùng bootstrap:</comment>

boot=/dev/hda2

<comment>## ofboot là cách openfirmware để xác định phân vùng bootstrap.
## Nếu không xác định, yaboot sẽ gặp lỗi trên G5 và vài máy G4 (trừ khi
## bạn truyền các đối số cần thiết cho chương trình mkofboot/ybin).
## hd:X nghĩa là /dev/sdaX (hoặc /dev/hdaX).
## 
## Người dùng G5 nên thêm dòng này (bỏ dấu ghi chú)!!

#ofboot=hd:2

## Users booting from firewire should use something like this line:
# ofboot=fw/node/sbp-2/disk@0:

## Users booting from USB should use something like this line:
# ofboot=usb/disk@0:

## hd: is shorthand for the first hard drive OpenFirmware sees</comment>
device=hd:

<comment>## Người dùng Firewire và USB sẽ cần xác định device name của
## nguyên OF. Có thể tìm thấy trong ofpatch, nằm trong yaboot.

# device=fw/node@0001d200e00d0207/sbp-2@c000/disk@0:
</comment>

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Phần này có thể trùng lắp nếu bạn có nhiều kernel hoặc nhiều tập tùy
## chọn khởi động - hãy thay 2.6.9 bằng phiên bản kernel của bạn
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/hda3
  partition=3
<comment>#  append="rootdelay=10"  # Cần để khởi động USB/Firewire</comment>
  read-only
<comment>##################

## Người dùng G5 và một số người dùng G4 nên đặt 
##   macos=hd:13
##   macosx=hd:12
## thay vì các giá trị trong ví dụ.</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Một khi đã hoàn tất <path>yaboot.conf</path> theo ý bạn, hãy chạy
<c>mkofboot -v</c> để định dạng phân vùng Apple_bootstrap và cài đặt
các thiết lập. Nếu bạn thay đổi yaboot.conf sau khi đã tạo
Apple_bootstrap, bạn có thể cập nhật bằng <c>ybin -v</c>
</p>

<p>
Thông tin chi tiết về yaboot đặt tại <uri
link="http://penguinppc.org/bootloaders/yaboot">yaboot project</uri>.
Bây giờ hãy tiếp tục với <uri link="#reboot">Khởi động lại hệ thống</uri>.
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>Thay thế: BootX</title>
<body>

<impo>
BootX chỉ có thể chạy với máy OldWorld Apple!
</impo>

<p>
Vì BootX khởi động Linux từ trong MacOS, kernel sẽ cần được chép từ
phân vùng Linux sang phân vùng MacOS. Trước hết hãy mount phân vùng
MacOS vào, bên ngoài chroot. Dùng <c>mac-fdisk -l</c> để tìm mã số
phân vùng MacOS, sda6 được dùng trong ví dụ dưới đây. Khi đã mount
xong, hãy chép kernel vào thư mục hệ thống để BootX có thể tìm ra.
</p>

<pre caption="Chép kernel vào phân vùng MacOS">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux "/mnt/mac/System Folder/Linux Kernels"</i>
</pre>

<p>
Nếu dùng genkernel, kernel nằm ở một vị trí khác và cũng cần chép
initrd vào phânm vùng MacOS luôn.
</p>

<pre caption="Chép kernel và initrd của Genkernel qua phân vùng MacOS">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initramfs-* "/mnt/mac/System Folder"</i>
</pre>

<p>
Sau khi đã chép kernel xong, chúng ta cần khởi động lại để thiết lập
BootX.
</p>

<pre caption="Unmount toàn bộ phân vùng và khởi động lại">
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Nhớ lấy đĩa CD ra, nếu không hệ thống sẽ lại khởi động từ CD lần nữa
thay vì MacOS.
</p>

<p>
Giờ hệ thống của bạn đã vào MacOS, hãy mở BootX control panel. Chọn
<c>Options</c> và bỏ chọn <c>Used specified RAM disk</c> nếu không
dùng genkernel. Nếu dùng genkernel, nhớ bảo đảm initrd của genkernel
được chọn thay vì initrd của CD Cài đặt. Nếu không dùng genkernel, có
một tùy chọn để xác định đĩa gốc (root) và phân vùng gốc. Hãy điền
những giá trị này cho phù hợp.
</p>

<p>
BootX có thể được cấu hình để khởi động Linux. Nếu bạn làm thế, trước
hết bạn sẽ thấy khởi động vào MacOS, sau đó, trong quá trình khởi
động, BootX sẽ nạp và khởi động Linux. Xem <uri
link="http://penguinppc.org/bootloaders/bootx/">BootX home page</uri>
để biết chi tiết.
</p>

<p>
Một khi đã khởi động bản cài đặt Gentoo của bạn, hãy hoàn tất việc cài
đặt với <uri link="?part=1&amp;chap=11">Hoàn tất cài đặt Gentoo</uri>.
</p>

</body>
</section>
<section id="quik">
<title>Thay thế: quik</title>
<body>

<p>
quik cho phép máy Mac OldWorld khởi động không cần MacOS. Tuy nhiên nó
không được hỗ trợ tốt và có một số điểm lạ. Nếu được chọn, bạn nên
dùng BootX thay vì quik vì đáng tin cậy hơn và dễ dùng hơn quik.
</p>

<p>
Trước hết chúng ta cần cài đặt quik:
</p>

<pre caption="Emerge quik">
# <i>emerge quik</i>
</pre>

<p>
Sau đó chúng ta cần thiết lập nó. Sửa tập tin
<path>/etc/quik.conf</path> và đặt image của kernel vừa chép vào phân
vùng khởi động.
</p>

<pre caption="Cấu hình quik.conf">
# Example of quik.conf
init-message = "Gentoo 2005.1\n"
partition = 2		<comment># Đây là phân vùng khởi động</comment>
root = /dev/hda4
timeout = 30
default = gentoo
image = /vmlinux-2.6.12
	label = gentoo
</pre>

<p>
Tập tin quik.conf của bạn <e>phải</e> nằm cùng đĩa với quik boot
image, tuy nhiên nó có khể nằm phân vùng khác cùng đĩa, mặc dù bạn vẫn
nên dùng chung phân vùng.
</p>

<pre caption="Chuyển  quik.conf vào /boot">
# <i>mv /etc/quik.conf /boot/quik.conf</i>
</pre>

<p>
Chúng ta sẽ thiết lập biến khởi động để quik nạp lúc khởi động. Để
làm, chúng ta dùng chương trình  <c>nvsetenv</c>. Những biến bạn cần
đặt khác nhau tùy máy, tốt nhất là tham khảo <uri
link="http://penguinppc.org/bootloaders/quik/quirks.php">quirk</uri>
của máy bạn trước khi thực hiện.
</p>

<pre caption="Đặt biến khởi động">
# <i>nvsetenv auto-boot true</i> <comment># Set to false if you want to boot into OF, not all models can display the OF output</comment>
# <i>nvsetenv output-device video</i> <comment># Check the quirks page, there are many variations here</comment>
# <i>nvsetenv input-device kbd</i>
# <i>nvsetenv boot-device scsi/sd@1:0</i> <comment># For SCSI</comment>
# <i>nvsetenv boot-device ata/ata-disk@0:0</i> <comment># For ATA</comment>
# <i>nvsetenv boot-file /boot/vmlinux-2.6.12 root=/dev/hda4</i> <comment>First item is the path to the kernel, the second is the root partition.  You may append any kernel options to the end of this line.</comment>
# <i>nvsetenv boot-command boot</i> <comment># Set this to bye for MacOS and boot for Linux</comment>
</pre>

<note>
Cũng có thể thay đổi biến khởi động từ MacOS. Phụ thuộc vào model,
hoặc
<uri
link="http://penguinppc.org/bootloaders/quik/BootVars.sit.hqx">bootvars</uri>
hoặc
<uri link="ftp://ftp.apple.com/developer/macosxserver/utilities/SystemDisk2.3.1.smi.bin">
Apple System Disk</uri> sẽ được dùng. Vui lòng xem trang quirk ở trên
để biết thêm.
</note>

<p>
Giờ máy bạn đã sẵn sàng khởi động, chúng ta cần đảm bảo boot image
được cài đặt đúng. Hãy chạy <c>quik -v -C /boot/quik.conf</c>. Nó sẽ
cho bạn biết rằng nó đã cài stage QUIK boot block đầu tiên.
</p>

<note>
Nếu không ổn, bạn luôn có thể phục hồi lại PRAM về mặc định bằng cách
nhấn và giữ <c>command + option + p + r</c> trước khi bật máy. Nó sẽ
xoá giá trị cũ mà bạn đặt bằng <c>nvsetenv</c> và cho phép bạn hoặc
khởi động từ MacOS bootdisk hoặc Linux bootdisk.
</note>

<p>
Giờ hãy tiếp tục với <uri link="#reboot">Khởi động lại hệ thống</uri>.
</p>

</body>
</section>
<section id="bootcreator">
<title>Thay thế: BootCreator</title>
<body>

<impo>
BootCreator sẽ tạo một bootmenu SmartFirmware dễ thương, viết bằng
Forth cho Pegasos.
</impo>

<p>
Trước hết bảo đảm là bạn đã cài bản <c>bootcreator</c> mới nhất trên
hệ thống:
</p>

<pre caption = "Cài đặt  bootcreator">
# <i>emerge --usepkg --update bootcreator</i>
</pre>

<p>
Chép tập tin <path>/etc/bootmenu.example</path> vào
<path>/etc/bootmenu</path> và sửa lại theo ý thích:
</p>

<pre caption = "Sửa tập tin cấu hình bootcreator">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
Bên dưới là tập tin <path>/etc/bootmenu</path> hoàn chỉnh. Hãy thay
đổi nó theo ý bạn.
</p>

<pre caption = "Tập tin cấu hình bootcreator">
<comment>#
# Example description file for bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux 2.6.12 (Normal)
ide:0 linux-2.6.12 video=radeonfb:1024x768@70 root=/dev/hda3

[SECTION]
Local HD -> Genkernel (Normal)
ide:0 kernelz-2.6.12 root=/dev/ram0 real_root=/dev/hda3 init=/linuxrc

</pre>

<p>
Cuối cùng <path>bootmenu</path> phải được chuyển cho Forth và chép vào
phân vùng khởi động, để SmartFirmware có thể đọc nó, do vậy bạn gọi
<c>bootcreator</c>:
</p>

<pre caption = "Cài đặt bootmenu">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
Chú ý xem thiết lập SmartFirmware khi khởi động lại, đảm bảo
<path>menu</path> phải được nạp mặc định.
</note>

<p>
Giờ bạn có thể tiếp tục cài đặt với <uri link="#reboot">Khởi động lại
hệ thống</uri>.
</p>


</body>
</section>
<section id="reboot">
<title>Khởi động lại hệ thống</title>
<subsection>
<body>

<p>
Hãy thoát khỏi môi trường chroot và unmount toàn bộ các phân vùng. Sau
đó gõ lệnh bạn đã đợi từ lâu: <c>reboot</c>.
</p>

<pre caption="Thoát khỏi chroot, unmount toàn bộ phân vùng và khởi
động lại">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Một khi đã khởi động bản cài đặt Gentoo của bạn, hãy hoàn tất việc cài
đặt với <uri link="?part=1&amp;chap=11">Hoàn tất cài đặt Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
