<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/vi/handbook/hb-install-x86-bootloader.xml,v 1.2 2005/04/13 14:27:16 neysx Exp $ -->

<sections>

<version>2.3</version>
<date>2005-04-10</date>

<section>
<title>Chọn lựa</title>
<subsection>
<title>Giới thiệu</title>
<body>

<p>
Kernel của bạn đã được cấu hình, biên dịch và các tập tin cấu hình cần
thiết đã sẵn sàng. Giờ là lúc để cài đặt chương trình để khởi động
kernel khi bạn khởi động hệ thống. Chương trình đó gọi là
<e>bootloader</e>. Với x86, Gentoo Linux cung cấp <uri
link="#grub">GRUB</uri> và <uri link="#lilo">LILO</uri>. Nhưng trước
khi bắt đầu cài đặt một trong hai bootloader, chúng tôi sẽ cho bạn
biết cách cấu hình framebuffer (dĩ nhiên giả định rằng bạn muốn có
framebuffer). Với framebuffer, bạn có thể chạy lệnh Linux với một số
tính năng đồ hoạ (giới hạn) (như bootsplash).
</p>

</body>
</subsection>
<subsection>
<title>Tùy chọn: Framebuffer</title>
<body>

<p>
<e>Nếu</e> bạn đã cấu hình kernel hỗ trợ framebuffer (hoặc dùng
cấu hình mặc định của <c>genkernel</c>), bạn có thể kích hoạt nó bằng cách
thêm lệnh <c>vga</c> và/hoặc <c>video</c>
vào tập tin cấu hình bootloader.
</p>

<p>
Trước hết bạn cần biết loại framebuffer đang dùng. Nếu bạn dùng kernel
của Gentoo (vd, <c>gentoo-sources</c>), bạn có thể chọn
<c>vesafb-tng</c> (<e>Driver VESA</e>, mặc định cho những kernel này).
Nếu bạn rơi vào trường hợp này, bạn đang dùng <c>vesafb-tng</c> và
không cần đặt lệnh <c>vga</c>. Nếu không, bạn đang dùng <c>vesafb</c>
và cần đặt <c>vga</c>.
</p>

<p>
Lệnh <c>vga</c> điều khiển độ phân giải và số lượng màu của
framebuffer <c>vesafb</c>. Như đề cập trong
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> (nằm trong gói
kernel source), bạn cần truyền số VESA tương ứng với độ phân giải và
số lượng màu bạn chọn.
</p>

<p>
Bảng sau liệt kê nhưng độ phân giải và số lượng màu kèm theo con số
cần truyền cùng với lệnh <c>vga</c>.
</p>

<table>
<tr>
  <ti></ti>
  <th>640x480</th>
  <th>800x600</th>
  <th>1024x768</th>
  <th>1280x1024</th>
</tr>
<tr>
  <th>256</th>
  <ti>0x301</ti>
  <ti>0x303</ti>
  <ti>0x305</ti>
  <ti>0x307</ti>
</tr>
<tr>
  <th>32k</th>
  <ti>0x310</ti>
  <ti>0x313</ti>
  <ti>0x316</ti>
  <ti>0x319</ti>
</tr>
<tr>
  <th>64k</th>
  <ti>0x311</ti>
  <ti>0x314</ti>
  <ti>0x317</ti>
  <ti>0x31A</ti>
</tr>
<tr>
  <th>16M</th>
  <ti>0x312</ti>
  <ti>0x315</ti>
  <ti>0x318</ti>
  <ti>0x31B</ti>
</tr>
</table>

<p>
Lệnh <c>video</c> điều khiển các tùy chọn framebuffer. Nó cần
framebuffer driver (<c>vesafb</c> cho kernel 2.6, <c>vesa</c> cho
kernel 2.4) theo sau bởi những lệnh bạn muốn bật. Mọi biến được liệt
kê trong <path>/usr/src/linux/Documentation/fb/vesafb.txt</path>,
nhưng chúng tôi sẽ liệt kê ba tùy chọn thường dùng nhất:
</p>

<table>
<tr>
  <th>Lệnh</th>
  <th>Mô tả</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    Giả định card màn hình của bạn "wrap memory" (vd, tiếp tục ở đầu
    khi nó tiến đến cuối)
  </ti>
</tr>
<tr>
  <ti>mtrr</ti>
  <ti>
    Thiết lập thanh ghi MTRR
  </ti>
</tr>
<tr>
  <ti><c>mode</c></ti>
  <ti>
    (chỉ với <c>vesafb-tng</c>)<br/>
    Thiết lập độ phân giải, số lượng màu và refresh rate. Ví dụ,
    <c>1024x768-32@85</c> cho độ phân giải 1024x768, 32 bit màu và
    refresh rate  85 Hz.
  </ti>
</tr>
</table>

<p>
Kết quả của lệnh là những cái giống như <c>vga=0x318
video=vesafb:mtrr,ywrap</c> hoặc
<c>video=vesafb:mtrr,ywrap,1024x768-32@85</c>.
Hãy nhớ (hoặc ghi ra) giá trị của bạn; bạn sẽ cần nó chốc nữa.
</p>

<p>
Giờ hãy tiếp tục cài đặt <uri link="#grub">GRUB</uri> <e>hoặc</e> <uri
link="#lilo">LILO</uri>.
</p>

</body>
</subsection>
</section>
<section id="grub">
<title>Mặc định: Dùng GRUB</title>
<subsection>
<title>Thuật ngữ của GRUB</title>
<body>

<p>
Phần quan trọng nhất để có thể dùng GRUB là làm quen với cách GRUB đặt
tên cho các ổ cứng và các phân vùng ổ đĩa. Phân vùng Linux của bạn
<path>/dev/hda1</path> được gọi là <path>(hd0,0)</path> trong GRUB.
Chú ý dấu ngoặc vòng quanh <path>hd0,0</path> - chúng bắt buộc phải
có.
</p>

<p>
Ổ cứng được đếm từ không thay vì "a" và các phân vùng được đếm từ
không thay vì một. Chú ý rằng với các thiết bị hd, chỉ có ổ cứng là
được đếm, không có các thiết bị atapi-ide như cdrom hay cd-burner.
Ngoài ra, các thiết bị scsi cũng dùng theo cùng cách đặt tên như vậy.
(Bình thường chúng có số lớn hơn số các ổ ide trừ khi cấu hình bios để
khởi động từ thiết bị scsi.)
Khi bạn yêu cầu BIOS khởi động từ một ổ cứng khác (ví dụ, ổ slave), ổ
cứng <e>đó</e> được xem là <path>hd0</path>.
</p>

<p>
Giả sử bạn có ổ cứng <path>/dev/hda</path>, ổ cdrom
<path>/dev/hdb</path>, cd-burner <path>/dev/hdc</path>, một ổ cứng phụ
<path>/dev/hdd</path> và không có ổ cứng SCSI, <path>/dev/hdd7</path>
là <path>(hd1,6)</path>. Nó có vẻ phức tạp, và thực sự là nó phức tạp.
Nhưng bạn sẽ thấy, GRUB cung cấp tính năng tab completion nhờ đó bạn
có thể dễ dàng tìm ra các ổ đĩa và phân vùng ổ đĩa.
</p>

<p>
Sau khi đã làm quen với điều này, đã đến lúc cài đặt GRUB.
</p>

</body>
</subsection>
<subsection>
<title>Cài đặt GRUB</title>
<body>

<p>
Để cài đặt GRUB, trước hết hãy <c>emerge</c> nó:
</p>

<pre caption = "Cài đặt GRUB">
# <i>emerge grub</i>
</pre>

<p>
Mặc dù GRUB đã nằm trên hệ thống, chúng ta vẫn cần tạo tập tin cấu
hình cho nó và đặt GRUB vào MBR để GRUB có thể tự động khởi động với
kernel vừa tạo. Hãy tạo <path>/boot/grub/grub.conf</path> bằng
<c>nano</c> (hoặc bằng trình soạn thảo khác nếu muốn):
</p>

<pre caption = "Tạo /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Giờ chúng ta sẽ viết <path>grub.conf</path>. Dưới đây là hai
<path>grub.conf</path> mẫu dành cho cách phân vùng ví dụ của tài liệu
này, với kernel image là <path>kernel-2.6.11-gentoo-r3</path>. Chỉ có
<path>grub.conf</path> đầu tiên được ghi chú đầy đủ. Hãy kiểm tra để
đảm bảo bạn ghi đúng tên kernel image <e>của bạn</e>, và nếu có thể
initrd image <e>của bạn</e>.
</p>

<ul>
  <li>
    <path>grub.conf</path> đầu tiên dành cho những người không dùng
    <c>genkernel</c> để tạo kernel
  </li>
  <li>
    <path>grub.conf</path> thứ hai dành cho những người dùng
    <c>genkernel</c> để tạo kernel
  </li>
</ul>

<note>
Nếu hệ tập tin gốc của bạn là JFS, bạn <e>phải</e> thêm "ro" vào dòng
<c>kernel</c> vì JFS cần replay log của nó trước khi được phép mount
dạng đọc-ghi.
</note>

<pre caption = "grub.conf cho người dùng không dùng genkernel">
<comment># Dùng cái nào để khởi động mặc định.
# 0 là cái đầu tiên, 1 là cái thứ hai...</comment>
default 0
<comment># Chờ bao nhiêu giây trước khi khởi động bằng cái mặc định.</comment>
timeout 30
<comment># splash-image
# Bỏ dòng này nếu bạn không có card đồ họa</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.6.11-r3
<comment># Phân vùng chứa kernel image (hoặc hệ điều hành)</comment>
root (hd0,0)
kernel /kernel-2.6.11-gentoo-r3 root=/dev/hda3

<comment># Bốn dòng kế chỉ được dùng nếu bạn khởi động kép với Windows.</comment>
<comment># Trong trường hợp này, giả định Windows nằm trên /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>


<pre caption = "grub.conf cho người dùng genkernel">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.6.11-r3
root (hd0,0)
kernel /kernel-2.6.11-gentoo-r3 root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev
initrd /initrd-2.6.11-gentoo-r3

<comment># Chỉ khi bạn khởi động kép với Windows</comment>
title=Windows XP
root (hd0,5)
makeactive
chainloader +1
</pre>

<note>
Cần có <c>udev</c> ở cuối dòng kernel để khắc phục một số lỗi trong
vài phiên bản genkernel <e>nếu</e> bạn dùng udev lần đầu tiên.
</note>

<note>
Nếu bạn dùng cách phân vùng khác và/hoặc kernel image khác, hãy điều
chỉnh lại cho thích hợp. Tuy nhiên hãy nhớ dùng quy ước ghi ổ đĩa/phân
vùng của GRUB (như <path>(hd0,0)</path>) và đường dẫn tính theo
mountpoint, không phải theo thư mục gốc. Nói cách khác,
<path>(hd0,0)/grub/splash.xpm.gz</path> thực sự là
<path>/boot/grub/splash.xpm.gz</path> vì <path>(hd0,0)</path> là 
<path>/boot</path>.
</note>

<p>
Nếu bạn cần truyền thêm các tùy chọn bổ sung cho kernel, chỉ cần thêm
nó vào đuôi lệnh kernel. Chúng ta đã truyền một tùy chọn
(<c>root=/dev/hda3</c> hoặc <c>real_root=/dev/hda3</c>), nhưng bạn có
thể truyền thêm các tùy chọn khác. Trong ví dụ sau chúng tôi dùng lệnh
<c>vga</c> và/hoặc <c>video</c> để hỗ trợ framebuffer (đã thảo luận ở trên).
</p>

<p>
Nếu bạn dùng kernel 2.6.7 hoặc mới hơn và bạn đã cài lại jumper của ổ cứng
ví BIOS không thể xử lý ổ cứng lớn, bạn cần thêm <c>hdx=stroke</c>.
</p>

<p>
Người dùng <c>genkernel</c> nên biết rằng kernel của họ dùng cùng các
tùy chọn khởi động như của CD Cài đặt. Ví dụ, nếu bạn có thiết bị SCSI,
bạn nên thêm <c>doscsi</c> làm tùy chọn kernel.
</p>

<p>
Giờ hãy lưu <path>grub.conf</path> lại và thoát. Bạn vẫn cần cài đặt
GRUB làm MBR (Master Boot Record) để GRUB tự động được thực hiện khi
bạn khởi động hệ thống.
</p>

<p>
GRUB developer khuyên nên dùng <c>grub-install</c>. Tuy nhiên, nếu vì
lý do nào đó <c>grub-install</c> không hoạt động, bạn vẫn có thể cài
đặt GRUB bằng tay.
</p>

<p>
Hãy tiếp tục với <uri link="#grub-install-auto">Mặc định: Cài GRUB
bằng grub-install</uri> hoặc <uri link="#grub-install-manual">Thay
thế: Cài GRUB bằng tay</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Mặc định: Cài GRUB bằng grub-install</title>
<body>

<p>
Để cài đặt GRUB, bạn cần gọi lệnh <c>grub-install</c>. Tuy nhiên,
<c>grub-install</c> sẽ không hoạt động nếu bạn nằm trong môi trường
chroot. Trước hết chúng ta cần cập nhật <path>/etc/mtab</path> (tập
tin chứa thông tin về các hệ tập tin được mount): rất dễ dàng để làm
điều này, chỉ cần chép <path>/proc/mounts</path> sang
<path>/etc/mtab</path>:
</p>

<pre caption="Cập nhật /etc/mtab">
# <i>cp /proc/mounts /etc/mtab</i>
</pre>

<p>
Giờ chúng ta có thể cài đặt GRUB bằng <c>grub-install</c>:
</p>

<pre caption="Chạy grub-install">
# <i>grub-install --root-directory=/boot /dev/hda</i>
</pre>

<p>
Nếu bạn có thắc mắc về GRUB, vui lòng tham khảo <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri>
hoặc <uri link="http://www.gnu.org/software/grub/manual/">GRUB
Manual</uri>.
</p>

<note>
Khi bạn cài đặt lại kernel, bạn không cần chép tập tin lần nữa. Chỉ
cần chạy <c>make install</c> sau khi biên dịch kernel, nó sẽ tự động
chép những tập tin cần thiết và điều chỉnh cấu hình GRUB.
</note>

<p>
Hãy tiếp tục với <uri link="#reboot">Khởi động lại hệ thống</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Thay thế: Cài GRUB bằng tay</title>
<body>

<p>
Để bắt đầu cài đặt GRUB, hãy gõ <c>grub</c>. Bạn sẽ thấy dấu nhắc grub
<path>grub&gt;</path>. Giờ bạn có thể gõ các lệnh để cài đặt GRUB vào
ổ cứng.
</p>

<pre caption ="Khởi động GRUB shell">
# <i>grub</i>
</pre>

<note>
Nếu hệ thống của bạn không có ổ đĩa mềm, hãy thêm tùy chọn
<c>--no-floppy</c> vào lệnh trên để tránh grub dò tìm những ổ đĩa mềm
(không hề có).
</note>

<p>
Trong cấu hình ví dụ, chúng ta muốn cài đặt GRUB để nó đọc thông tin
từ partition khởi động <path>/dev/hda1</path>, và cài đặt GRUB boot
record và MBR (master boot record) của ổ cứng  để chúng ta có thể thấy
dấu nhắc grub mỗi lần khởi động máy. Dĩ nhiên, nếu bạn không dùng
chính xác cấu hình như ví dụ thì bạn phải điều chỉnh lại các lệnh cho
phù hợp.
</p>

<p>
Tính năng tab completion của GRUB có thể được dùng bên trong GRUB. Ví
dụ, nếu bạn gõ "<c>root (</c>" và nhấn TAB, bạn sẽ thấy danh sách các
thiết bị (như <path>hd0</path>). Nếu bạn gõ "<c> root (hd0,</c>" và
nhấn TAB, bạn sẽ thấy danh sách các phân vùng của thiết bị được chọn
(như <path>hd0,0</path>).
</p>

<p>
Bằng cách dùng tab completion, cài đặt GRUB sẽ trở nên không quá khó.
Giờ hãy tiếp tục cài đặt GRUB nhé? :-)
</p>

<pre caption ="Cài GRUB vào MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(Xác định vị trí phân
vùng /boot)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Cài GRUB vào MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Thoát GRUB shell)</comment>
</pre>

<note>
Nếu bạn cài GRUB vào một phân vùng khác thay vì MBR, bạn cần thay thế
lệnh <c>setup</c> để nó trỏ đến phân vùng bạn chọn. Ví dụ, nếu bạn
muốn cài GRUB vào <path>/dev/hda3</path>, vậy hãy dùng <c>setup (hd0,2)</c>.
Vài người dùng sẽ muốn thực hiện điều này.
</note>

<p>
Nếu bạn có thắc mắc về GRUB, hãy tham khảo <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri>
hoặc <uri link="http://www.gnu.org/software/grub/manual/">GRUB
Manual</uri>.
</p>

<note>
Khi bạn cài lại kernel, bạn không cần chép lại các tập tin nữa. Chỉ
cần chạy <c>make install</c> sau khi biên dịch kernel; nó sẽ tự động
chép những tập tin cần thiết và điều chỉnh cấu hình GRUB.
</note>

<p>
Hãy tiếp tục với <uri link="#reboot">Khởi động lại hệ thống</uri>.
</p>

</body>
</subsection>
</section>
<section id="lilo">
<title>Thay thế: Dùng LILO</title>
<subsection>
<title>Cài đặt LILO</title>
<body>

<p>
LILO, LInuxLOader, là một trong những bootloader đầu tiên cho Linux.
Tuy nhiên nó thiếu vài tính năng GRUB có (vì thế nên GRUB trở nên phổ
biến hơn). Lý do LILO vẫn được dùng là, trên vài hệ thống, GRUB không
hoạt động còn LILO thì hoạt động. Dĩ nhiên, nó còn được dùng vì nhiều
người quen LILO và muốn dùng nó. Dù gì đi nữa, Gentoo hỗ trợ cả hai,
và bạn có thể chọn LILO nếu thích.
</p>

<p>
Cài đặt LILO thật dễ dàng, chỉ cần dùng <c>emerge</c>.
</p>

<pre caption = "Cài đặt LILO">
# <i>emerge --usepkg lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Cấu hình LILO</title>
<body>

<p>
Để cấu hình LILO, bạn phải tạo <path>/etc/lilo.conf</path>. Hãy mở
trình soạn thảo của bạn (tài liệu này dùng <c>nano</c> cho thống nhất)
và tạo tập tin này.
</p>

<pre caption = "Tạo /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Trong phần trước, chúng tôi yêu cầu bạn nhớ tên kernel-image bạn tạo.
Trong ví dụ <path>lilo.conf</path> kế, chúng tôi giả định tên image là
<path>kernel-2.6.11-gentoo-r3</path>. Chúng tôi cũng dùng cách phân
vùng cũ đã được giới thiệu trước đây. Có hai phần riêng biệt: 
</p>

<ul>
  <li>
    Một phần cho những người không dùng <c>genkernel</c> để tạo kernel
  </li>
  <li>
    Một phần cho những người dùng <c>genkernel</c> để tạo kernel
  </li>
</ul>

<p>
Hãy đảm bảo dùng đúng tên kernel image <e>của bạn</e> và tên initrd
image <e>của bạn</e> (nếu có).
</p>

<note>
Nếu hệ tập tin gốc của bạn là JFS, bạn <e>phải</e> thêm
<c>append="ro"</c> vào dòng
<c>kernel</c> vì JFS cần replay log của nó trước khi được phép mount
dạng đọc-ghi.
</note>

<pre caption = "Ví dụ /etc/lilo.conf">
boot=/dev/hda             <comment># Cài LILO vào MBR</comment>
prompt                    <comment># Cho người dùng cơ hội lựa chọn</comment>
timeout=50                <comment># Chờ 5 (năm) giây trước khi khởi động mặc định</comment>
default=gentoo            <comment># Khi hết hạn chờ, khởi động phần "gentoo"</comment>

<comment># Người dùng không dùng genkernel</comment>
image=/boot/kernel-2.6.11-gentoo-r3
  label=gentoo            <comment># Tên phần này</comment>
  read-only               <comment># Thư mục gốc dạng read-only. Đừng sửa!</comment>
  root=/dev/hda3          <comment># Vị trí hệ tập tin gốc</comment>

<comment># Người dùng genkernel</comment>
image=/boot/kernel-2.6.11-gentoo-r3
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev"
  initrd=/boot/initrd-2.6.11-gentoo-r3

<comment># Hai dòng kế chỉ dung với người dùng khởi động kép với Windows.</comment>
<comment># Giả sử Windows nằm trên /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Cần có <c>udev</c> ở cuối dòng kernel để khắc phục một số lỗi trong
vài phiên bản genkernel <e>nếu</e> bạn dùng udev lần đầu tiên.
</note>

<note>
Nếu bạn dùng cách phân vùng khác và/hoặc kernel image khác, hãy điều
chỉnh lại cho thích hợp.
</note>

<p>
Nếu bạn cần truyền các tùy chọn bổ sung cho kernel, hãy thêm
lệnh <c>append</c> vào phần được chọn. Ví dụ, chúng tôi thêm lệnh
<c>video</c> để hỗ trợ framebuffer:
</p>

<pre caption = "Dùng append để thêm tùy chọn kernel">
image=/boot/kernel-2.6.11-gentoo-r3
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="video=vesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
Nếu bạn dùng kernel 2.6.7 hoặc mới hơn và bạn đã cài lại jumper của ổ cứng
ví BIOS không thể xử lý ổ cứng lớn, bạn cần thêm <c>hdx=stroke</c>.
</p>

<p>
Người dùng <c>genkernel</c> nên biết rằng kernel của họ dùng cùng các
tùy chọn khởi động như của CD Cài đặt. Ví dụ, nếu bạn có thiết bị SCSI,
bạn nên thêm <c>doscsi</c> làm tùy chọn kernel.
</p>


<p>
Giờ hãy lưu tập tin lại và thoát. Để hoàn tất, bạn phải chạy
<c>/sbin/lilo</c> để càu LILO vào hệ thống theo những thông số trong
<path>/etc/lilo.conf</path>. Nhớ rằng bạn phải chạy lại
<c>/sbin/lilo</c> mỗi khi bạn cài đặt kernel mới hoặc thay đổi
<path>/etc/lilo.conf</path>.
</p>

<pre caption = "Hoàn tất cài đặt LILO">
# <i>/sbin/lilo</i>
</pre>

<note>
Khi bạn cài lại kernel, bạn không cần chép lại các tập tin nữa. Chỉ
cần chạy <c>make install</c> sau khi biên dịch kernel; nó sẽ tự động
chép những tập tin cần thiết và điều chỉnh cấu hình LILO.
</note>

<p>
Bạn có thể tiếp tục với <uri link="#reboot">Khởi động lại hệ thống</uri>.
</p>

</body>
</subsection>
</section>
<section id="reboot">
<title>Khởi động lại hệ thống</title>
<subsection>
<body>

<p>
Hãy thoát khỏi môi trường chroot và unmount toàn bộ các phân vùng. Sau
đó gõ lệnh bạn đã đợi từ lâu: <c>reboot</c>.
</p>

<pre caption="Thoát khỏi chroot, unmount toàn bộ phân vùng và khởi
động lại">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Nhớ lấy đĩa CD ra, nếu không hệ thống sẽ lại khởi động từ CD lần nữa
thay vì phải khởi động hệ thống Gentoo mới của bạn.
</p>

<p>
Một khi đã khởi động bản cài đặt Gentoo của bạn, hãy hoàn tất việc cài
đặt với <uri
link="?part=1&amp;chap=11">Hoàn tất cài đặt Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
