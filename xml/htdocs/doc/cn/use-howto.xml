<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/cn/use-howto.xml">
<title>Gentoo USE 标签指南</title>

<author title="Author">
<mail link="seemant@gentoo.org">Seemant Kulleen</mail>
</author>

<author title="Editor">
<mail link="felix@fbreuer.de">Felix Breuer</mail>
</author>

<author title="Editor">
<mail link="meekrob@gentoo.org">Sherman Boyd</mail>
</author>

<author title="Editor">
<mail link="zhen@gentoo.org">John Davis</mail>
</author>

<author title="Editor">
<mail link="stocke2@gentoo.org">Eric Stockbridge</mail>
</author>

<author title="Translator">
<mail link="liqiang@iscas.cn">Zhang Liqiang</mail>
</author>

<license/>

<abstract>
本指南将向你介绍定制 Gentoo 的终极工具 -- USE 配置。这里不仅给出了当前使用的每个
 USE 标签的描述，而且这个指南对于决定那些 USE 标签是你需要用到的也是很有用出的。
</abstract>

<version>1.2.1</version>
<date>2003年8月18日</date>

<chapter>
<title>简介</title>
<section>
<title>不管怎样，使用 <c>USE</c> 标签是什么？</title>
<body>

<p>
有一件吸引我的事情是，对于用户来说，Gentoo 事实上是一个高度可定制的发布。
实际上，基于源码的发布，允许用户完全控制什么样的特性和支持会被构造到安装的应用程
序中去。而且，更加得意忘形的想法打动了我－－我可不想要那些不是 <e>真正</e> 需要
的东西。
</p>

<p>
但是怎么会，准确的讲， Gentoo 做到这一点了么？通过定义 <c>USE</c> 设置。
本质上说，有些关键字定义了系统范围的选项，依据这一点，在应用程序各自的编译过程
中进行配置。
</p>
</body>
</section>

<section>
<title>缺省 <c>USE</c> 标签</title>
<body>

<p>
当然，Gentoo为你定义了一套安全的缺省标签。你会在你的
<path>/etc/make.profile/make.defaults</path>文件中发现。
</p>


<p>
在 Gentoo-1.4_rc2 发布中， <c>USE</c> 设置是这样的：
</p>

<pre>
USE="xv slang readline gpm berkdb mmx 3dnow gdbm tcpd pam libwww ssl nls
     arts perl python esd gif imlib sdl oggvorbis gnome gtk X qt
     kde motif opengl avi png tiff gif"
</pre>


<warn>
不要改写这个文件，as I can see many of you scrambling to do, 不过要先看看下一节。
</warn>

</body>
</section>
<section>
<title>设置你自己的 USE 标签</title>
<body>

<p>
要设置你自己的use标签，编辑你的 <path>/etc/make.conf</path> 文件。在此文件中你会
看到：
</p>

<pre caption = "注释 USE 标签">
#USE=""
</pre>

<p>
简单的去掉 <c>#</c> 来打掉注释，再加入任何你想要加的标签。"但是如果我想去掉 
<path>make.defaults</path> 文件中的选项呢？" 我听到你问。
只要在你的<path>/etc/make.conf</path>文件USE变量中放上 "-flag" 就好了。
</p> 

<impo>
记住 <c>-flag</c> 取消一个标签而 <c>flag</c> 添加一个标签。如果一个标签 
既不在<path>/etc/make.profile/make.defaults</path> 也不在 
<path>/etc/make.conf</path> 那它的功能是被取消的。
</impo>

<pre caption="/etc/make.conf 中的 USE 变量例子">
USE="-gnome -kde qt -arts -nls python perl oggvorbis opengl sdl
     -postgres jpeg png truetype xml xml2 dvd avi aalib mpeg encode fbcon
     mmx"
</pre>

<p>
如果你只是在 emerge 某个软件包时用到不同的 USE 标签，
你没有必要修改 <path>/etc/make.conf</path> 文件。
你只需要简单的设置 <c>USE</c> 环境变量。
标签将被加入到 <path>make.defaults</path> 和 <path>make.conf</path> 已有的内容中
。然而,这种"可选"的 USE 标签使用对于日后软件包的升级不起作用。
</p>

<pre caption="把 USE 作为环境变量">
# <i>USE="-guile +libgda" emerge -pv gnumeric</i>

These are the packages that I would merge, in order:
 
Calculating dependencies ...done!
[ebuild     U ] app-office/gnumeric-1.0.13-r1 [1.0.8] +libgda -gb -evo +python +bonobo -guile -perl

# <i>emerge -pv gnumeric</i>
 
These are the packages that I would merge, in order:
 
Calculating dependencies ...done!
[ebuild     U ] app-office/gnumeric-1.0.13-r1 [1.0.8] -libgda -gb -evo +python +bonobo +guile -perl
</pre>

<note>
正如你所看到的， <c>emerge -pv pkg</c> 告诉你指定的软件包应用了哪些标签而什么标签被设置了。
</note>

<p>
现在你已经知道了如何提供临时标签，取消现有标签。现在让我们看看这些标签到底做什么。
</p>

</body>
</section>
</chapter>

<chapter>
<title>可使用的 USE 标签</title>

<section>
<title>到哪里找 USE 标签</title>
<body>

<note>
如果你想要增加一个 USE 标签, 把它加到 <path>use.desc</path> 并上载到 CVS。 
<path>use.desc</path> 是已经生成的样式。
</note>

<p>
你可以在这里找到 USE 标签的自动更新数据库： 
<uri link="/dyn/use-index.xml">USE 标签</uri>.
</p>

<p>
使用<c>gentoolkit</c>软件包中的<c>etcat</c>，能够查看某个软件包能够应用那些 
USE 标签，现在设置了哪些标签，软件包上次emerge时使用了哪些 USE 标签。
它也会为每个 USE 标签显示一个简短的描述。
</p>

<pre caption="Using etcat">
# <i>etcat -u gnumeric</i>
[ Colour Code : set unset ]
[ Legend      : (U) Col 1 - Current USE flags        ]
[             : (I) Col 2 - Installed With USE flags ]
 
 U I [ Found these USE variables in : app-office/gnumeric-1.0.13-r1 ]
 - - libgda : Adds GNU Data Access (CORBA wrapper) support for gnumeric
 - - gb     : Adds support for Gnome Basic to gnumeric
 - + evo    : Adds support for evolution in gnumeric
 + + python : Adds support/bindings for the Python language
 + + bonobo : Adds support for gnome-base/bonobo (Gnome CORBA interfaces)
 + + guile  : Adds support for dev-util/guile (interpreter for Scheme)
 - + perl   : Adds support/bindings for the Perl language.
</pre>

</body>
</section>

<section>
<title>反馈</title>
<body>

<p>
关于 USE 标签的反馈，请到<uri>http://bugs.gentoo.org</uri> 填写一份bug报告，
并把它发到 seemant@gentoo.org
</p>

</body>
</section>
</chapter>
</guide>
