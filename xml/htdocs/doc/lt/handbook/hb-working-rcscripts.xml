<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- $Id: hb-working-rcscripts.xml,v 1.6 2008/09/28 11:58:25 rane Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<abstract>
„Gentoo“ naudoja specialius pirminio paleidimo scenarijus, kurie, nepaisant
kitų savybių, leidžia priklausomybių nutarimus ir virtualius pirminio paleidimo
scenarijus. Šiame skyriuje aiškinami visi šie aspektai ir aiškinama, kaip
elgtis su šiais scenarijais.
</abstract>

<version>1.25</version>
<date>2007-10-11</date>

<section>
<title>Paleidžiamieji lygiai (runlevels)</title>
<subsection>
<title>Įkrauname jūsų sistemą</title>
<body>

<p>
Kai įkrausite savo sistemą, pastebėsite, kad daug teksto prabėga pro ekraną.
Jei atkreipsite dėmesį, tas tekstas yra daugmaž vienodas kiekvieną kartą
užsikraunant sistemai. Visų šitų veiksmų eilės tvarka vadinima <e>krovimosi
tvarka</e> ir yra (daugmaž) statiškai nustatyta.
</p>

<p>
Pirmiausia, jūsų sistemos įkrovos tvarkyklė (boot loader) užkraus branduolio
atvaizdą, kurį jūs aprašėte įkrovos tvarkyklės nustatymuose, į atmintį, po
kurio ji praneš pagrindiniam procesoriui paleisti patį branduolį. Kai
branduolys yra paleistas ir veikia, jis inicijuoja visas branduolio specifines
struktūras, užduotis ir paleidžia <c>init</c> procesą.
</p>

<p>
Šitas procesas užtikrina, kad visos rinkmenų sistemos, kurios yra apibrėžtos
rinkmenoje <path>/etc/fstab</path>, bus prijungtos ir paruoštos naudojimui.
Tada jis paleidžia keletą scenarijų, kurie yra <path>/etc/init.d</path>
kataloge. Šie scenarijai paleis tarnybas, kurios yra būtinos sėkmingam sistemos
užsikrovimui.
</p>

<p>
Pagaliau, kai visi scenarijai yra paleisti, <c>init</c> aktyvuoja terminalus
(dažniausiai tik virtualias komandines eilutes, kurios yra paslėptos po
klavišų kombinacijomis <c>Alt-F1</c>, <c>Alt-F2</c>, ir t.t.) prijungiant
specialų procesą, pavadintą <c>agetty</c> prie jo. Šis procesas užtikrins, kad
jūs galėsite prisijungti per šiuos terminalus paleisdami <c>login</c>.
</p>

</body>
</subsection>
<subsection>
<title>Pirminio paleidimo scenarijai</title>
<body>

<p>
Dabar <c>init</c> kataloge <path>/etc/init.d</path> esančių scenarijų
atsitiktinai nepaleidinėja. Tuo labiau jis nepaleidžia visų scenarijų, kurie
yra kataloge <path>/etc/init.d</path>, o tik tuos scenarijus, kurie jam yra
nurodyti, kad būtų paleisti. Jis nusprendžia, kuriuos scenarijus paleisti,
žiūrėdamas į katalogą <path>/etc/runlevels</path>.
</p>

<p>
Pirmiausia, <c>init</c> paleidžia visus scenarijus iš katalogo
<path>/etc/init.d</path>, kurie turi simbolines nuorodas
<path>/etc/runlevels/boot</path> kataloge. Scenarijai dažniausiai paleidinėjami
abėcėlės tvarka, bet kai kurie scenarijai turi informaciją apie priklausomybes,
kuris pasako sistemai, kad kitas scenarijus turi būti paleistas pirmiau, negu
bus pradėtas šis.
</p>

<p>
Kai visi kataloge <path>/etc/runlevels/boot</path> esantys nukreipiamieji
scenarijai yra paleisti, <c>init</c> tęsia paleidinėdamas scenarijus, kurie
turi simbolines nuorodas į save kataloge <path>/etc/runlevels/default</path>.
Jie vėlgi paleidinėjami abėcėlės tvarka, nebent priklausomybių informacija
nusakys kitokią paleidžiamų scenarijų tvarką, kad būtų užtikrintas nuoseklus
sistemos paleidimas.
</p>

</body>
</subsection>
<subsection>
<title>Kaip init veikia</title>
<body>

<p>
Aišku, <c>init</c> nenusprendžia visko pats. Jam reikia nustatymų rinkmenos,
kuri nusakytų, kokie veiksmai turi būti atlikti. Šie nustatymai yra saugomi
rinkmenoje <path>/etc/inittab</path>.
</p>

<p>
Jeigu jūs prisimenate krovimosi tvarką, kurią mes ką tik apibūdinome, tai
tikriausiai prisiminsite, kad <c>init</c> pirmas veiksmas yra prijungti visas
rinkmenų išdėstymo sistemas. Tai yra aprašyta šioje pateiktoje eilutėje iš
<path>/etc/inittab</path> rinkmenos:
</p>

<pre caption="Sistemos inicijavimo eilutė rinkmenoje /etc/inittab">
si::sysinit:/sbin/rc sysinit
</pre>

<p>
Ši eilutė nusako, kad <c>init</c> turi paleisti <c>/sbin/rc sysinit</c>,
norėdamas inicijuoti sistemą. Scenarijus <path>/sbin/rc</path> yra atsakingas
už inicijavimą, todėl jūs galite sakyti, kad <c>init</c> nedaro daug - jis
paprasčiausiai pateikia sistemos inicijavimo užduotį kitam procesui.
</p>

<p>
Antra, <c>init</c> paleidžia visus scenarijus, kurie turi simbolines nuorodas į
save kataloge <path>/etc/runlevels/boot</path>. Tai aprašome žemiau pateiktoje
eilutėje:
</p>

<pre caption="Sistemos inicijavimas, paleidimas">
rc::bootwait:/sbin/rc boot
</pre>

<p>
Vėlgi <c>rc</c> scenarijus atlieka reikalingus veiksmus. Pastebėtina, kad
parametras nurodytas <c>rc</c> (<e>boot</e>) sutampa su naudojamo katalogo
vardu, kuris yra <path>/etc/runlevels</path>.
</p>

<p>
Dabar <c>init</c> patikrina savo nustatymų rinkmeną, kad pažiūrėtų, kurį
<e>paleidžiamąjį lygį</e> turi paleisti. Kad tai nuspręstų, jis nuskaito žemiau
pateiktą eilutę iš rinkmenos <path>/etc/inittab</path>:
</p>

<pre caption="Pagrindinė init eilutė">
id:3:initdefault:
</pre>

<p>
Šiuo atveju, kurį naudos didžioji dalis „Gentoo“ naudotojų, <e>paleidžiamojo
lygio</e> numeris yra yra 3. Naudodamas šią informaciją, <c>init</c> patikrina,
ką turi paleisti pradėdamas pereiti į <e>trečią paleidžiamąjį lygį</e>:
</p>

<pre caption="Paleidžiamųjų lygių apibrėžimai">
l0:0:wait:/sbin/rc shutdown
l1:S1:wait:/sbin/rc single
l2:2:wait:/sbin/rc nonetwork
l3:3:wait:/sbin/rc default
l4:4:wait:/sbin/rc default
l5:5:wait:/sbin/rc default
l6:6:wait:/sbin/rc reboot
</pre>

<p>
Eilutė, apibrėžianti 3 lygį vėlgi tarnybų paleidimui naudoja <c>rc</c>
scenarijų (dabar su parametru <e>default</e>). Atkreipkite dėmesį, kad
<c>rc</c> parametras yra toks pats kaip ir katalogo, esančio
<path>/etc/runlevels</path>, vardas.
</p>

<p>
Kai <c>rc</c> vykdymas pasibaigia, <c>init</c> nusprendžia, kokias virtualias
konsoles jis turi aktyvuoti ir kokias komandas paleisti kiekvienoje iš jų:
</p>

<pre caption="Virtualių konsolių apibrėžimai">
c1:12345:respawn:/sbin/agetty 38400 tty1 linux
c2:12345:respawn:/sbin/agetty 38400 tty2 linux
c3:12345:respawn:/sbin/agetty 38400 tty3 linux
c4:12345:respawn:/sbin/agetty 38400 tty4 linux
c5:12345:respawn:/sbin/agetty 38400 tty5 linux
c6:12345:respawn:/sbin/agetty 38400 tty6 linux
</pre>


</body>
</subsection>
<subsection>
<title>Kas yra paleidžiamieji lygiai?</title>
<body>

<p>
Jūs tikriausiai pastebėjote, kad <c>init</c> naudoja numeravimą, kad žinotų,
kokį <e>paleidžiamąjį lygį</e> turėtų aktyvuoti. <e>Paleidžiamasis lygis</e>
yra toks lygis, kuriame jūsų sistema turi ir vykdo tam tikrus scenarijus
(paleidžiamojo lygio scenarijus, arba <e>pirminio paleidimo scenarijus</e>
(angl. initscripts)), kurie yra paleidžiami, kai jūs patenkate arba išeinate iš
tam tikro paleidžiamojo lygio.
</p>

<p>
„Gentoo“ sistemoje yra septyni paleidžiamieji lygiai: trys vidiniai ir keturi
vartotojo apibrėžti paleidžiamieji lygiai. Vidiniai paleidžiamieji lygiai yra
<e>sysinit</e>, <e>shutdown</e> ir <e>reboot</e>. Jie atlieka būtent
tai, ką jų pavadinimai nusako: inicijuoja sistemą, išjungia sistemą ir
perkrauna sistemą.
</p>

<p>
Vartotojo apibrėžti paleidžiamieji lygiai yra tie, kurie yra
<path>/etc/runlevels</path> kataloge: <path>boot</path>, <path>default</path>,
<path>nonetwork</path> ir <path>single</path>. <path>boot</path> paleidžiamasis
lygis paleidžia visus sistemai būtinas tarnybas, kurias naudoja visi kiti
paleidžiamieji lygiai. Trys paleidžiamieji lygiai skiriasi tuo, kokios
tarnybos yra paleidžiamos: <path>default</path> yra naudojama kiekvienos
dienos operacijoms, <path>nonetwork</path> yra naudojama, jei nereikalinga
tinklo prieiga, ir <path>single</path> yra naudojama, kada jums reikia
pataisyti sistemą.
</p>

</body>
</subsection>
<subsection>
<title>Dirbame su pirminio paleidimo scenarijais</title>
<body>

<p>
Scenarijai, kuriuose paleidžia <c>rc</c> procesas, yra vadinami <e>pirminio
paleidimo scenarijais (initscripts)</e>. Kiekvienas scenarijus kataloge
<path>/etc/init.d</path> gali būti paleistas su parametrais <e>start</e>,
<e>stop</e>, <e>restart</e>, <e>pause</e>, <e>zap</e>, <e>status</e>,
<e>ineed</e>, <e>iuse</e>, <e>needsme</e>, <e>usesme</e> arba <e>broken</e>.
</p>

<p>
Norėdami paleisti, sustabdyti arba perleisti tarnybą (ir visas priklausomas nuo
jos tarnybas), jums reikia paleisti su parametrais <c>start</c>, <c>stop</c> ir
<c>restart</c>:
</p>

<pre caption="Paleidžiame Postfix">
# <i>/etc/init.d/postfix start</i>
</pre>

<note>
Tik tos tarnybos, kurios yra <e>priklausomos</e> nuo pagrindinės tarnybos, yra
sustabdomos arba perleidžiamos. Kitos priklausomos tarnybos, kurios
<e>naudoja</e> pagrindinę tarnybą, bet nėra būtinos, yra neliečiamos.
</note>

<p>
Jeigu jūs norite sustabdyti tarnybą, bet ne tarnybas, kurios priklauso nuo jos,
galite naudoti parametrą <c>pause</c>:
</p>

<pre caption="Sustabdome Postfix, bet paliekame priklausomas tarnybas paleistas">
# <i>/etc/init.d/postfix pause</i>
</pre>

<p>
Jeigu jūs norite pamatyti, kokioje būklėje yra tarnyba (paleista, išjungta,
sustabdyta, ...), galite naudoti parametrą <c>status</c>:
</p>

<pre caption="Informacija apie postfix būklę">
# <i>/etc/init.d/postfix status</i>
</pre>

<p>
Jeigu būklės informacija praneša, kad jūsų tarnyba yra paleista, bet jūs
žinote, kad taip nėra, galite pakeisti būklės informaciją iš naujo į
„išjungta“ parametru <c>zap</c>:
</p>

<pre caption="Pakeičiame būklės informaciją apie postfix iš naujo">
# <i>/etc/init.d/postfix zap</i>
</pre>

<p>
Taip pat norėdami sužinoti, kokias priklausomybes turi tarnyba, jūs galite
naudoti parametrus <c>iuse</c> arba <c>ineed</c>. Parametru <c>ineed</c> galite
matyti būtinas tarnybas, kurios užtikriną korektišką šios tarnybos darbą.
Parametru <c>iuse</c> pamatysite tarnybas, kurios gali būti naudojamos, bet
nėra būtinos korektiškam funkcionavimui.
</p>

<pre caption="Užklausiame sąrašą tarnybų, kurios yra būtinos ir nuo kurių
priklauso Postfix">
# <i>/etc/init.d/postfix ineed</i>
</pre>

<p>
Panašiai jūs galite paklausti, kokios tarnybos reikalauja šios tarnybos,
(<c>needsme</c>) arba kurios naudoja šią tarnybą (<c>usesme</c>):
</p>

<pre caption="Užklausiame sąrašą tarnybų, kurios reikalauja Postfix">
# <i>/etc/init.d/postfix needsme</i>
</pre>

<p>
Pagaliau jūs galite paklausti, kokių priklausomybių trūksta tarnybai:
</p>

<pre caption="Užklausiame sąrašo priklausomybių, kurių trūksta Postfix">
# <i>/etc/init.d/postfix broken</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Dirbame su rc-update</title>
<subsection>
<title>Kas yra rc-update?</title>
<body>

<p>
„Gentoo“ pirminio paleidimo sistema naudoja priklausomybių medį, kad nuspręstų
kokią tarnybą reikia paleisti pirmiausia. Kadangi tai sunkus uždavinys, ir kad
to nereikėtų atlikinėti mūsų naudotojams patiems, mes sukūrėme įrankius, kurie
lengvai leidžia administruoti, valdyti paleidžiamuosius lygius ir pirminio
paleidimo scenarijus.
</p>

<p>
<c>rc-update</c> komanda jūs galite pridėti ir šalinti pirminio paleidimo
scenarijus į paleidžiamąjį lygį. Įrankis <c>rc-update</c> automatiškai pats
paleis scenarijų <c>depscan.sh</c>, kuris perkurs priklausomybių medį.
</p>

</body>
</subsection>
<subsection>
<title>Pridedame ir šaliname tarnybas</title>
<body>

<p>
Jūs jau įkėlėte pirminio paleidimo scenarijų į „default“ (numatytąjį)
paleidžiamąjį lygį „Gentoo“ diegimo metu. Tada jūs galbūt nelabai supratote,
kam reikalingas šis lygis, bet dabar mes išsiaiškinsime. Scenarijus
<c>rc-update</c> reikalauja antro parametro, kuris nurodo veiksmą: <e>add</e>,
<e>del</e> arba <e>show</e>.
</p>

<p>
Norėdami pridėti arba pašalinti pirminio paleidimo scenarijų, tiesiog
paleiskite <c>rc-update</c> su parametrais <c>add</c> arba <c>del</c>, pirminio
paleidimo scenarijaus pavadinimu ir paleidžiamojo lygio pavadinimu. Pavyzdžiui:
</p>

<pre caption="Šaliname Postfix iš numatytojo paleidžiamojo lygio">
# <i>rc-update del postfix default</i>
</pre>

<p>
Komanda <c>rc-update -v show</c> parodys visus galimus pirminio paleidimo
scenarijus ir sąrašą, kuriuose paleidžiamuosiuose lygiuose jie yra įvykdomi:
</p>

<pre caption="Gauname informaciją apie pirminio paleidimo scenarijus">
# <i>rc-update -v show</i>
</pre>

<p>
Galite įvykdyti ir <c>rc-update show</c> (be <c>-v</c>), kad pamatytumėte tik
aktyvintus pirminio paleidimo scenarijus ir jų paleidžiamuosius lygius.
</p>

</body>
</subsection>
</section>
<section>
<title>Konfigūruojame tarnybas</title>
<subsection>
<title>Kodėl reikia papildomų nustatymų?</title>
<body>

<p>
Pirminio paleidimo scenarijai gali būti pakankamai sudėtingi. Aišku, nėra
pageidautina tiesiogiai redaguoti pirminio paleidimo scenarijų, nes galima
padaryti jį neveiksniu. Bet tuo pačiu yra svarbu turėti galimybę tokias
tarnybas konfigūruoti. Pavyzdžiui, jūs norite suteikti daugiau pasirinkčių
pačiai tarnybai.
</p>

<p>
Kita priežastis turėti galimybę konfigūruoti pirminio paleidimo scenarijus
netiesiogiai yra tai, kad būtų galima atnaujinti pačius pirminio paleidimo
scenarijus nesibaiminant, kad jūsų nustatymai pasinaikins.
</p>

</body>
</subsection>
<subsection>
<title>Katalogas /etc/conf.d</title>
<body>

<p>
„Gentoo“ suteikia patogų kelią konfigūruoti tokias tarnybas: kiekvienas
pirminio paleidimo scenarijus, kuris gali būti konfigūruojamas, turi savo
rinkmeną <path>/etc/conf.d</path> kataloge. Pavyzdžiui, apache2 pirminio
paleidimo scenarijus (pavadintas <path>/etc/init.d/apache2</path>) turi
konfigūracinę rinkmeną, pavadintą <path>/etc/conf.d/apache2</path>, kuri saugo
nustatymus, kuriuos norite perduoti Apache 2 serveriui, kai jis bus
paleidžiamas:
</p>

<pre caption="Apibrėžti kintamieji rinkmenoje /etc/conf.d/apache2">
APACHE2_OPTS="-D PHP5"
</pre>

<p>
Tokia konfiguracinė rinkmena laiko kintamuosius (panašius kaip ir rinkmenoje
<path>/etc/make.conf</path>), kas leidžia labai lengvai keisti tarnybų
nustatymus. Taip pat tokios rinkmenos suteikia daugiau informacijos apie pačius
kintamuosius (pvz., komentarai).
</p>

</body>
</subsection>
</section>
<section>
<title>Rašome pirminio paleidimo scenarijus</title>
<subsection>
<title>Ar tikrai tai būtina?</title>
<body>

<p>
Ne, rašyti pirminio paleidimo scenarijų nėra būtina, nes „Gentoo“ jau suteikia
skaityk-naudok tipo pirminio paleidimo scenarijus visoms teikiamoms tarnyboms.
Aišku, jūs galėjote įdiegti kokią nors tarnybą ne iš „Portage“ bazės, todėl
greičiausiai norėsite sukurti savo pirminio paleidimo scenarijų.
</p>

<p>
Nenaudokite pirminio paleidimo scenarijų, pateiktų su tarnybomis, jeigu jie
nėra konkrečiai parašyti „Gentoo“. Taip pat „Gentoo“ pirminio paleidimo
scenarijai nėra pritaikyti naudojimui kituose „Linux“ platinamuosiuose
paketuose!
</p>

</body>
</subsection>
<subsection>
<title>Išdėstymas</title>
<body>

<p>
Pagrindinė pirminio paleidimo scenarijaus sandara pateikta žemiau.
</p>

<pre caption="Pirminio paleidimo scenarijaus sandara">
#!/sbin/runscript

depend() {
  <comment>(Priklausomybių informacija)</comment>
}

start() {
  <comment>(Komandos, būtinos paleisti tarnybą)</comment>
}

stop() {
  <comment>(Komandos, būtinos sustabdyti tarnybą)</comment>
}

restart() {
  <comment>(Komandos, būtinos perkrauti tarnybą)</comment>
}
</pre>

<p>
Bet kuris pirminio paleidimo scenarijus <e>reikalauja</e> apibrėžti
<c>start()</c> funkciją. Visos kitos funkcijos yra pasirinktinos.
</p>

</body>
</subsection>
<subsection>
<title>Priklausomybės</title>
<body>

<p>
Yra dviejų tipų priklausomybės, kurias galite apibrėžti: <c>use</c> ir
<c>need</c>. Kaip anksčiau ir minėjome, <c>need</c> tipo priklausomybė yra
griežtesnė negu <c>use</c> tipo priklausomybė. Priklausomai nuo priklausomybės
tipo, jūs įvedate tarnybą, nuo kurios tiesiogiai priklausote arba priklausote
<e>virtualiai</e>.
</p>

<p>

<e>Virtuali</e> priklausomybė yra tokia priklausomybė, kuri reikalinga
tarnybai, bet nėra priklausoma nuo konkrečių programų. Pavyzdžiui, jūsų
pirminio paleidimo scenarijus priklauso nuo sistemos žurnalizavimo tarnybos,
bet yra daugybė įvairių sistemų žurnalų apdorojimo programų (metalogd,
syslog-ng, sysklogd, ...). Kadangi jūs negalite reikalauti (<c>need</c>)
kiekvieno iš jų atskirai (nėra praktiška sistemoje turėti visas šias programas
paleistas), todėl mes užtikriname, kad visos šios tarnybų teikia
(<c>provide</c>) virtualią priklausomybę.
</p>

<p>
Pažiūrėkime informaciją apie postfix tarnybos priklausomybes.
</p>

<pre caption="Postfix priklausomybių informacija">
depend() {
  need net
  use logger dns
  provide mta
}
</pre>

<p>
Kaip matote, postfix tarnyba:
</p>

<ul>
  <li>
    reikalauja (virtualios) <c>net</c> priklausomybės, kuri pateikiama,
    pavyzdžiui, <path>/etc/init.d/net.eth0</path> scenarijaus.
  </li>
  <li>
    reikalauja (virtualios) <c>logger</c> priklausomybės, kuri pateikiama,
    pavyzdžiui, <path>/etc/init.d/syslog-ng</path> scenarijaus.
  </li>
  <li>
    reikalauja (virtualios) <c>dns</c> priklausomybės, kuri pateikiama,
    pavyzdžiui, <path>/etc/init.d/named</path> scenarijaus.
  </li>
  <li>
    pateikia (virtualią) <c>mta</c> priklausomybę, kuri yra įprasta visiems
    pašto serveriams.
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Kontroliuojame tvarką</title>
<body>

<p>
Kai kuriais atvejai jums, pavyzdžiui, nereikės pačios tarnybos, bet norėsite,
kad jūsų tarnyba būtų paleista prieš (<c>before</c>) arba po (<c>after</c>)
kitos tarnybos, <e>jeigu</e> ji yra sistemoje (atkreipkite dėmesį - tai nebėra
priklausomybė) <e>ir</e> ji paleista tame pačiame paleidžiamajame lygyje
(atkreipkite dėmesį - tai liečia tik tai tarnybas tame pačiame paleidžiamajame
lygyje). Jūs galite nustatyti šią informaciją naudodami „prieš“ (<c>before</c>)
arba „po“ (<c>after</c>) nustatymus.
</p>

<p>
Kaip pavyzdį paimsime Portmap tarnybos nustatymus:
</p>

<pre caption="Portmap tarnybos funkcija depend()">
depend() {
  need net
  before inetd
  before xinetd
}
</pre>

<p>
Jūs taip pat galite naudoti „*“, kad sugautumėte visas tarnybas tame pačiame
paleidžiamajame lygyje, bet tai nėra patartina.
</p>

<pre caption="Leidžiame pirminio paleidimo scenarijų kaip patį pirmąjį šiame paleidžiamajame lygyje">
depend() {
  before *
}
</pre>

<p>
Jeigu jūsų tarnyba privalo rašyti į vietinius diskus, ji turėtų reikalauti
(need) <c>localmount</c>. Jei ji ką nors, pavyzdžiui, proceso identifikatoriaus
rinkmeną (pidfile), talpina <path>/var/run</path>, tuomet ji turėtų pasileisti
po (after) <c>bootmisc</c>:
</p>

<pre caption="depend() funkcijos pavyzdys">
depend() {
  need localmount
  after bootmisc
}
</pre>

</body>
</subsection>
<subsection>
<title>Standartinės funkcijos</title>
<body>

<p>
Toliau, po <c>depend()</c> funkcionalumo nustatymo, jums greičiausiai reikės
nustatyti <c>start()</c> funkciją. Ši funkcija turi visas komandas, reikalingas
tarnybos inicijavimui. Rekomenduojama naudoti <c>ebegin</c> ir <c>eend</c>
funkcijas, kad informuotumėte vartotoją, kas vyksta paleidimo metu:
</p>

<pre caption="start() funkcijos pavyzdys">
start() {
  ebegin "Starting my_service"
  start-stop-daemon --start --exec /path/to/my_service \
    --pidfile /path/to/my_pidfile  eend $?
}
</pre>

<p>
Ir <c>--exec</c>, ir <c>--pidfile</c> turėtų būti naudojami paleidimo (start)
ir sustabdymo (stop) funkcijose. Jei tarnyba nesukuria proceso
identifikatoriaus rinkmenos (pidfile), tuomet, jei įmanoma, naudokite
<c>--make-pidfile</c>, nors jūs turėtumėte tai patikrinti, kad būtumėte tikri.
Kitu atveju nenaudokite proceso identifikatoriaus rinkmenų (pidfiles). Prie
<c>start-stop-daemon</c> parametrų galite pridėti ir <c>--quiet</c>, bet tai
nerekomenduojama, nebent tarnyba yra nepaprastai išsami. <c>--quiet</c>
naudojimas gali trukdyti derinimui, jei tarnybai nepavyksta pasileisti.
</p>

<note>
Įsitikinkite, kad <c>--exec</c> iš tiesų iškviečia tarnybą, o ne tiesiog
aplinkos (shell) scenarijų, kuris paleidžia tarnybas ir baigia darbą -- tai
yra pirminio paleidimo scenarijaus paskirtis.
</note>

<p>
Jei jums reikia daugiau  <c>start()</c> funkcijos pavyzdžių, paskaitykite
pirminius tekstus pirminio paleidimo scenarijų, esančių<path>/etc/init.d</path>
kataloge.
</p>

<p>
Kitos funkcijos, kurias galite apibrėžti, yra: <c>stop()</c> ir
<c>restart()</c>. Jūs nesate verčiamas apibrėžti šių funkcijų! Mūsų pradinio
paleidimo sistema yra pakankamai protinga užpildyti šias funkcijas pati, jeigu
jūs naudojate <c>start-stop-daemon</c>.
</p>

<p>
Nors jūs <e>neprivalote</e> kurti <c>stop()</c> funkcijos, štai yra pavyzdys:
</p>

<pre caption="stop() funkcijos pavyzdys">
stop() {
  ebegin "Stopping my_service"
  start-stop-daemon --stop --exec /path/to/my_service \
    --pidfile /path/to/my_pidfile
  eend $?
}
</pre>

<p>
Jeigu jūsų tarnyba vykdo kokį nors kitą scenarijų (pavyzdžiui, bash, python ar
perl), ir šis scenarijus vėliau keičia pavadinimą (pavyzdžiui, <c>foo.py</c> į
<c>foo</c>), tuomet jūs turite pridėti <c>--name</c> prie
<c>start-stop-daemon</c>. Tada jūs privalote nurodyti pavadinimą, į kurį vėliau
pasikeičia jūsų scenarijus. Šiame pavyzdyje tarnyba paleidžia <c>foo.py</c>,
kuris pakeičia pavadinimą į <c>foo</c>:
</p>

<pre caption="Tarnyba, paleidžianti „foo“ scenarijų">
start() {
  ebegin "Starting my_script"
  start-stop-daemon --start --exec /path/to/my_script \
    --pidfile /path/to/my_pidfile --name foo
  eend $?
}
</pre>

<p>
<c>start-stop-daemon</c> turi puikų žinyną, jei jums reikia daugiau
informacijos:
</p>

<pre caption="start-stop-daemon žinyno peržiūra">
$ <i>man start-stop-daemon</i>
</pre>

<p>
„Gentoo“ sistemos pradinio paleidimo scenarijų sintaksė remiasi Bourne Again
Shell (bash) sintakse, todėl jūs pilnai galite naudoti bash tipo kodą pradinio
paleidimo scenarijuose.
</p>

</body>
</subsection>
<subsection>
<title>Nustatome įvairias pasirinktis</title>
<body>

<p>
Jeigu jūs norite, kad jūsų pradinio paleidimo scenarijai turėtų daugiau
pasirinkčių, negu aptartą dabar, tada turite įkelti nustatymų pavadinimą į
<c>opts</c> kintamąjį ir sukurti funkciją tokiu pačiu pavadinimu kaip ir
nustatymas. Pavyzdžiui, jeigu norite turėti nustatymą pavadinimu
<c>restartdelay</c>:
</p>

<pre caption="Nustatymo restartdelay palaikymas">
opts="${opts} restartdelay"

restartdelay() {
  stop
  sleep 3    <comment># Laukti 3 sekundes prieš pasileidžiant vėl</comment>
  start
}
</pre>

</body>
</subsection>
<subsection>
<title>Tarnybos nustatymų kintamieji</title>
<body>

<p>
Jums nereikia nieko daryti, jeigu norite turėti nustatymų rinkmeną kataloge
<path>/etc/conf.d</path>: jeigu jūsų pradinio paleidimo scenarijus yra
paleistas, šios rinkmenos yra automatiškai prijungiamos (pvz: galima naudoti
kintamuosius):
</p>

<ul>
  <li><path>/etc/conf.d/&lt;jūsų_pirminio_paleidimo_scenarijus&gt;</path></li>
  <li><path>/etc/conf.d/basic</path></li>
  <li><path>/etc/rc.conf</path></li>
</ul>

<p>
Taip pat, jeigu jūsų pradinio paleidimo scenarijus palaiko virtualią
priklausomybę (tokią kaip <c>net</c>), tada rinkmena bus su sieta su šia
priklausomybe (šiuo atveju su rinkmena <path>/etc/conf.d/net</path>).
</p>

</body>
</subsection>
</section>
<section>
<title>Keičiame paleidžiamojo lygio elgesį</title>
<subsection>
<title>Kas gali gauti naudos iš to?</title>
<body>

<p>
Dauguma nešiojamų kompiuterių vartotojų susiduria su tokia situacija, kaip
pavyzdžiui, namie jiems reikia paleisti <c>net.eth0</c>, kai tuo tarpu dirbant
kelyje (nes nėra interneto), jūs visai nenorite, kad būtų paleistas
<c>net.eth0</c>. Su „Gentoo“ sistema jūs lengvai galite pats keisti
paleidžiamojo lygio elgesį pagal savo norus.
</p>

<p>
Jūs galite sukurti dar viena „numatytąjį“ („default“) paleidžiamąjį lygį, kurį
galite užkrauti, ir kuris turės jūsų priskirtus pirminio paleidimo scenarijus.
Taip pat galite nustatyti krovimosi laiką, kada norite naudoti numatytąjį
paleidžiamąjį lygį.
</p>

</body>
</subsection>
<subsection>
<title>Naudojame minkštąjį lygį (softlevel)</title>
<body>

<p>
Pirmiausia, sukurkite paleidžiamojo lygio direktoriją antram jūsų „numatytajam“
(„default“) paleidžiamajam lygiui. Kaip pavyzdį, sukurkime <path>offline</path>
paleidžiamąjį lygį:
</p>

<pre caption="Sukuriame paleidžiamojo lygio katalogą">
# <i>mkdir /etc/runlevels/offline</i>
</pre>

<p>
Pridedame norimus pirminio paleidimo scenarijus į mūsų naujai sukurtą
paleidžiamąjį lygį. Pavyzdžiui, jeigu norite turėti lygiai tokį patį
paleidžiamąjį lygį kaip jūsų sistemos <c>default</c> paleidžiamasis lygis, bet
be <c>net.eth0</c>:
</p>

<pre caption="Pridedame reikalingus pirminio paleidimo scenarijus">
<comment>(Nukopijuojame visas tarnybas iš numatytojo į offline paleidžiamąjį
lygį)</comment>
# <i>cd /etc/runlevels/default</i>
# <i>for service in *; do rc-update add $service offline; done</i>
<comment>(Pašaliname nereikalingas tarnybas iš offline paleidžiamojo
lygio)</comment>
# <i>rc-update del net.eth0 offline</i>
<comment>(Žiūrime offline paleidžiamojo lygio aktyvias tarnybas)</comment>
# <i>rc-update show offline</i>
<comment>(Pavyzdys kaip atrodo įvykdžius šią komandą)</comment>
               acpid | offline
          domainname | offline
               local | offline
            net.eth0 |
</pre>

<p>
Nors <c>net.eth0</c> buvo pašalintas iš offline paleidžiamojo lygio,
<c>udev</c> vis vien bandys paleisti visus įtaisus, kuriuos aptinka, ir
atitinkamas tarnybas. Dėl to jums reikės pridėti kiekvieną tinklo tarnybą,
kurios paleidimo nepageidaujate (kaip ir tarnybas bet kuriems kitiems įtaisams,
kuriuos gali paleisti udev) į rinkmeną <path>/etc/conf.d/rc</path>
kaip parodyta.
</p>

<pre caption="Pasyviname tarnybas, paleidžiamas įtaisų, rinkmenoje /etc/conf.d/rc">
RC_COLDPLUG="yes"
<comment>(Toliau nurodykite tarnybas, kurių automatinio paleidimo nepageidaujate)</comment>
RC_PLUG_SERVICES="!net.eth0"
</pre>

<note>
Išsamesnę informaciją apie itaisų paleidžiamas tarnybas galite rasti rinkmenos
<path>/etc/conf.d/rc</path> komentaruose.
</note>

<p>
Dabar redaguokime jūsų sistemos įkrovos tvarkyklės nustatymus ir pridėkime
naują reikšmę jūsų <c>offline</c> paleidžiamajam lygiui. Pavyzdžiui, rinkmenoje
<path>/boot/grub/grub.conf</path>:
</p>

<pre caption="Pridedame naują reikšmę apie offline paleidžiamąjį lygį">
title Gentoo Linux Offline Usage
  root (hd0,0)
  kernel (hd0,0)/kernel-2.4.25 root=/dev/hda3 <i>softlevel=offline</i>
</pre>

<p>
Voilà, jūs viską jau atlikote. Jeigu užkrausite savo savo sistemą ir
krovimosi metu pasirinksite naujai sukurtą reikšmę, <c>offline</c>
paleidžiamasis lygis bus panaudotas vietoj <c>default</c>.
</p>

</body>
</subsection>
<subsection>
<title>Naudojame krovimosi lygį (bootlevel)</title>
<body>

<p>
Naudojant <c>bootlevel</c> viskas yra taip pat kaip ir su <c>softlevel</c>.
Vienintelis skirtumas yra tas, kad jūs apibrėžėte antrą „boot“ paleidžiamąjį
lygį, vietoj antro „default“ paleidžiamojo lygio.
</p>

</body>
</subsection>
</section>
</sections>
