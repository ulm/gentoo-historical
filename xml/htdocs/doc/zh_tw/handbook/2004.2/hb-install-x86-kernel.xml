<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_tw/handbook/2004.2/hb-install-x86-kernel.xml,v 1.2 2005/01/25 10:19:44 ccpz Exp $ -->

<!-- rev 1.1 by ccpz -->

<sections>

<version>1.24</version>
<date>2004 年 11 月 2 日</date>

<section>
<title>時區</title>
<body>

<p>
為了讓您的系統知道它的位置在那裡，您將需要設定您的系統時區。到
<path>/usr/share/zoneinfo</path> 尋找您的時區，然後使用 <c>ln</c> 建立一個連接到
<path>/etc/localtime</path>。
</p>

<pre caption="設定時區資訊">
# <i>ls /usr/share/zoneinfo</i>
<comment>（假設您要使用 GMT）</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>安裝核心原始碼</title>
<subsection>
<title>選擇一個核心</title>
<body>

<p>
Linux 的核心是所有版本的最中心，也是最重要的。他位於使用者程式和系統硬體之間。
Gentoo 提供使用者很多可用的核心原始碼。您可以到 <uri
link="/doc/tw/gentoo-kernel.xml">Gentoo 核心 指南</uri> 查看我們所提供的核心。
</p>

<p>
使用 x86 系統的使用者，我們提供著 <c>vanilla-sources</c>（常常被其他 2.4 Linux
核心開發者用來開發成其他核心的基礎版本），<c>gentoo-sources</c>（針對效能調整
過的核心），<c>gentoo-dev-sources</c>（核心 2.6 針對效能所調整過的核心），
<c>development-sources</c>（2.6 vanilla 核心原始碼）﹍
</p>

<p>
如果您正在使用無網路的安裝，您只能選擇 CD 上提供的核心，2004.2 中有：
</p>

<ul> 
  <li>gentoo-sources</li> 
  <li>vanilla-sources</li> 
  <li>gentoo-dev-sources</li> 
  <li>development-sources</li> 
</ul> 

<p>
選擇適合您的核心原始檔然後使用 <c>emerge</c> 安裝。
</p>

<p>
在下個指令範例我們將教您如何安裝 <c>vanilla-sources-2.4.24</c>（適合無網路的安裝
環境）和 <c>gentoo-sources</c>。當然依照您的喜好安裝您想要的核心。這些都只是範例
，但是您應該 <e>只</e> 安裝一個核心原始碼。
</p>

<pre caption="安裝核心原始碼">
# <i>emerge gentoo-sources</i>
</pre>

<p>
當您查看 <path>/usr/src</path> 您將會看到一個 <path>linux</path> 的連接連到
您所選的核心，我們會假設要安裝的核心版本是<c>gentoo-sources-2.4.26-r6</c>：
</p>

<pre caption="觀看核心原始碼目錄連接">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.26-gentoo-r6
</pre>

<p>
如果您碰到的不是這樣（例：連接連到其他的核心目錄）您將需要在繼續往下之前更改連接
：
</p>

<pre caption="更改核心連接目錄">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.26-gentoo-r6 linux</i>
</pre>

<p>
現在我們該設定以及編譯您的核心了。您可以使用 <c>genkernel</c> 完
成此項步驟，並且將會以和 LiveCD 一樣的通用的方式進行編譯。我們將先解釋如何手動編
譯因為這是自訂您的環境的最佳方法。
</p>

<p>
如果您想要手動編譯您的核心，請從 <uri link="#manual">預設：手動設定</uri> 
繼續。如果您想要使用 <c>genkernel</c> 請從 <uri 
link="#genkernel">其他選擇：使用 genkernel</uri> 繼續。
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>預設：手動設定</title>
<subsection>
<title>介紹</title>
<body>

<p>
手動設定核心常常被 Linux 使用者認為最難完成的步驟。雖然不假 -- 但是當您手動編譯
幾次核心後，您應該不會覺得它有多難 ;)
</p>

<p>
但是，<e>唯一</e> 的重點就是：您必須要了解您的系統才可以開始手動編譯。系統上多數
的資料可以從 <path>/proc/pci</path> （如果可以的話使用 <c>lspci</c>）查看。您也
可以執行 <c>lsmod</c> 看看 LiveCD 使用那些核心模組（這是一個不錯的暗示，教您該
開啟那個選項）。
</p>

<p>
現在到您的核心原始碼目錄然後執行 <c>make menuconfig</c>。這將會啟動一個
ncurses 的設定選單。
</p>

<pre caption="開始 menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
您將會看到一大串的設定部份。我們將列出一些您一定要啟用的選項（不然 Gentoo 無法
完善的工作）。
</p>

</body>
</subsection>
<subsection>
<title>必須開啟的選項</title>
<body>

<p>
首先，開啟 development and experimental code/drivers。您將需要這個，不然
您將無法看見一些其他重要的程式碼或是驅動程式。
</p>

<pre caption="選擇 experimental code/drivers">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
記得在編譯核心時選擇正確的處理器類別：
</p>

<pre caption="選擇正確的處理器類別">
Processor type and features ---&gt;
 <comment>（依照您的處理器所更換）</comment>
 (<i>Athlon/Duron/K7</i>) Processor family
</pre>

<p>
現在到 <c>File Systems</c> 然後選擇要支援的檔案系統。記得<e>不要</e>將它們編成模
組。還有 <c>Virtual memory</c>，<c>/proc file system</c>，<c>/dev file 
system</c> + <c>Automatically munt at boot</c>：
</p>

<pre caption="選擇相關檔案系統">
<comment>(使用 2.4.x 核心)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(使用 2.6.x 核心)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)

<comment>（按照您系統所需要的檔案系統開啟以下選項）</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
如果你的 BIOS 不能處理大容量的硬碟，而且你調整跳腳讓硬碟回報受限制的容量，你需
要開啟底下設定讓系統可以存取所有容量：
</p> 
    
<pre caption="選擇自動調整大小支援"> 
<comment>(只適用 2.4.x 核心)</comment> 
ATA/IDE/MFM/RLL support ---&gt; 
  IDE, ATA and ATAPI Block devices ---&gt; 
    &lt;*&gt;   Include IDE/ATA-2 DISK support 
    [ ]     Use multi-mode by default 
    [*]     Auto-Geometry Resizing support 
</pre> 
    
<p> 
如果您需要透過 PPPoE 連線到網路或是數據機撥接，您將需要以下的核心選項：
</p>

<pre caption="選擇 PPPoE 相關驅動程式">
<comment>(使用 2.4.x 核心)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(使用 2.6.x 核心)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
雖然 <c>PPP over Ethernet</c> 選項只是有在 <c>rp-pppoe</c> 設定為核心 PPPoE
時需要，但是這兩個壓縮的選項不會造成錯誤。
</p>

<p>
如果您需要，不要忘了為您的網路卡加入核心的支援。
</p>

<p>
如果您有一個支援 HyperThreading(tm) 的 Intel CPU，或是有多個 CPU，您應該啟用
"Symmetric multi-processing support"：
</p>

<pre caption="啟用 SMP 支援">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
如果你使用 USB 輸入裝置(像是鍵盤或滑鼠)不要忘記開啟他：
</p>
  	 
<pre caption="啟動 USB 輸入裝置支援">
USB Support ---&gt;
  &lt;*&gt;   USB Human Interface Device (full HID) support
</pre>
  

<p>
想要有 PCMCIA 支援的筆記型電腦使用者，如果使用 2.4 核心的話，<e>不</e>應該使用
PCMCIA 驅動程式雖然之後可以安裝 <c>pcmcia-cs</c> 套件，但是已經有更新的驅動程式
。2.6 核心的使用者應該使用核心中的 PCMCIA 驅動程式
</p>
				   	 
<p>
當您完成核心設定時，請從 <uri link="#compiling">編譯和安裝</uri> 繼續。
</p>

</body>
</subsection>
<subsection id="compiling">
<title>編譯和安裝</title>
<body>

<p>
現在您的核心已經設定完成了，我們該來編譯然後安裝它。離開核心設定，然後執行
<c>make dep &amp;&amp; make bzImage modules modules_install</c>：
</p>

<pre caption="編譯核心">
<comment>（核心 2.4）</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>（核心 2.6）</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
當核心完成編譯時，將核心映像檔複製到 <path>/boot</path>：
從這邊我們將假設您安裝的是 <c>gentoo-sources</c> 的 2.4.26。
您可以隨意更改容易記住的檔案名稱，方便稍後的開機程式設定。
</p>

<pre caption="安裝核心">
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.4.26-gentoo-r6</i>
# <i>cp System.map /boot/System.map-2.4.26-gentoo-r6</i>
</pre>

<p>
您也可以將您的核心設定檔備份到 <path>/boot</path>，以防萬一 :)
</p>

<pre caption="備份您的核心設定檔">
# <i>cp .config /boot/config-2.4.26-gentoo-r6</i>
</pre>

<p>
現在請從 <uri link="#kernel_modules">安裝分開的核心模組</uri>。
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>其他選擇：使用 genkernel</title>
<body>

<p>
如果您正在讀這個部份，那您應該是選擇使用我們的 <c>genkernel</c> 程序來為您設定
核心。
</p>

<p>
現在您的核心原始碼已經安裝了，我們該使用 <c>genkernel</c> 程序來自動幫您編譯
核心。<c>genkernel</c> 是利用類似 LiveCD 的核心設定來進行工作的。這代表著當您
使用 <c>genkernel</c> 編譯您的核心，您的系統大致上會在開機時偵測所有的硬體，
就和我們的 LiveCD 一樣。因為 genkernel 不需要手動核心設定，所以適合不會編譯
核心的使用者。
</p>

<p>
現在讓我們來看看如何使用 genkernel。首先，安裝 genkernel：
</p>

<pre caption="安裝 genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
現在，編譯您的核心原始碼。如果您是透過 grp 安裝 <c>genkerenl</c>，直接執行
<c>genkernel all</c>。請注意，當 <c>genkernel</c> 正在編譯所有硬體支援時，等待的
時間會有點久！
</p>

<p>
如果您的開機分割區沒有使用 ext2 或是 ext3 為檔案系統，您將需要使用 <c>genkernel
--menuconfig all</c> 手動設定，然後在核心內加入您所使用的檔案系統支援（
<e>不能</e> 編成模組）。
</p>

<pre caption="執行 genkernel">
# <i>genkernel all</i>
</pre>

<p>
當 <c>genkernel</c> 完成的時候，一個核心映像檔，一套模組和一個 <e>initial root
disk</e> （initrd）將會被建立。我們將在稍後設定開機程式時使用核心映像檔和
initrd。寫下核心和 initrd 的檔名方便您稍後設定開機程式。initrd 將會在開起到"真正
的"系統之前馬上偵測硬體支援（就和 LiveCD 一樣）。
</p>

<pre caption="查看已建立的核心映像檔名和 initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
現在，為了要讓我們的系統更像 LiveCD，我們需要安裝 <c>hotplug</c>。當 initrd 自動
偵測硬體時，<c>hotplug</c>將會自動偵測其他的硬體。要安裝然後開啟 <c>hotplug</c>
，請按照以下輸入：
</p>

<pre caption="安裝和開啟 hotplug">
# <i>emerge hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>安裝分開的核心映像檔和模組</title>
<subsection>
<title>安裝多個模組</title>
<body>

<p>
如果適當，您應該要安裝系統上的硬體所需要的安裝程序。以下為一些您有可能用到的核心
相關的安裝程序：
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
<th>安裝程序（Ebuild）</th>
<th>用意</th>
<th>指令</th>
</tr>
<tr>
<ti>nvidia-kernel</ti>
<ti>針對 NVIDIA 加速 xorg-x11</ti>
<ti><c>emerge nvidia-kernel</c></ti>
</tr>
<tr>
<ti>nforce-audio</ti>
<ti>NVIDIA NForce(2) 主機板的內建音效卡</ti>
<ti><c>emerge nforce-audio</c></ti>
</tr>
<tr>
<ti>e100</ti>
<ti>Intel e100 Fast Ethernet 網路卡</ti>
<ti><c>emerge e100</c></ti>
</tr>
<tr>
<ti>e1000</ti>
<ti>Intel e1000 Gigabit Ethernet 網路卡</ti>
<ti><c>emerge e1000</c></ti>
</tr>
<tr>
<ti>emu10k1</ti>
<ti>Creative Sound Blaster Live!/Audigy 支援(只適用 2.4 核心)</ti>
<ti><c>emerge emu10k1</c></ti>
</tr>
<tr>
<ti>ati-drivers</ti>
<ti>適用於 xorg-x11 的 加速Accelerated ATI Radeon 8500+/FireG</ti>
<ti><c>emerge ati-drivers</c></ti>
</tr>
<tr>
<ti>ati-drivers-extra</ti>
<ti>Graphical ATI 工具</ti>
<ti><c>emerge ati-drivers-extra</c></ti>
</tr>
</table>

<p>
請注意，有些安裝程序會碰到很多相依性的問題。要確定您會安裝到那些套件，使用
<c>emerge --pretend</c>。舉例來說，<c>emu10k1</c> 套件：
</p>

<pre caption="查看完整的安裝套件列表">
# <i>emerge --pretend emu10k1</i>
</pre>

<p>
如果您不喜歡它要安裝的套件，使用 <c>emerge --pretend --verbose</c> 查看各
套件需要使用到什麼 USE 參數：
</p>

<pre caption="查看使用的 USE 參數">
# <i>emerge --pretend --verbose emu10k1</i>
<comment>...</comment>
[ebuild  N    ] media-sound/aumix-2.8  +gpm +nls +gtk +gnome +alsa -gtk2
</pre>

<p>
以上的範例將可以看到 <c>emu10k1</c> 的相依性（<c>aumix</c>）必須依賴著 
<c>gtk</c> 和 <c>gnome</c> 的 USE 參數，而 gtk （依賴著 xorg-x11）將會被一起編
譯。
</p>

<p>
如果您不要編譯全部，拿掉所有的 USE 參數，如：
</p>

<pre caption="關閉所有的 USE 參數安裝 emu10k1">
# <i>USE="-gpm -nls -gtk -gnome -alsa" emerge --pretend emu10k1</i>
</pre>

<p>
當您滿意時，移除掉 <c>--pretend</c> 開始安裝 <c>emu10k1</c>。
</p>

</body>
</subsection>
<subsection>
<title>設定模組</title>
<body>

<p>
您將需要將想要開機時自動載入的模組放到
<path>/etc/modules.autoload.d/kernel-2.4</path> （或是
<path>kernel-2.6</path>）。您也可以加上模組的選項。
</p>

<p>
要查看所有可用的模組，執行 <c>find</c> 指令。不要忘了將 "&lt;kernel
version&gt;"更改為您剛剛編譯的版本：
</p>

<pre caption="查看所有可用的版本">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
舉例來說，要自動載入 <c>3c59x.o</c> 模組，編輯 <path>kernel-2.4</path> 或是 
<path>kernel-2.6</path>：
</p>

<pre caption="編輯 /etc/modules.autoload.d/kernel-2.4">
<comment>（2.4核心的範例）</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 或是 kernel-2.6">
3c59x
</pre>

<p>
現在執行 <c>modules-update</c> 來套用您的變更到 <path>/etc/modules.conf</path>：
</p>

<pre caption="執行 modules-update">
# <i>modules-update</i>
</pre>

<p>
現在請從 <uri link="?part=1&amp;chap=8">設定您的系統</uri> 繼續安裝。
</p>

</body>
</subsection>
</section>
</sections>
