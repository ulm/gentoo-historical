<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_tw/handbook/2004.2/hb-install-mips-kernel.xml,v 1.1 2004/11/26 04:08:48 ccpz Exp $ -->

<!-- rev 1.7 by frid -->

<sections>

<version>1.6</version>
<date>2004年9月1日</date>

<section>
<title>時區</title>
<body>

<p>
為了讓您的系統知道它的位置在那裡，您將需要設定您的系統時區。到
<path>/usr/share/zoneinfo</path> 尋找您的時區，然後使用 <c>ln</c> 建立一個連接到
<path>/etc/localtime</path>。
</p>

<pre caption="設定時區資訊">
# <i>ls /usr/share/zoneinfo</i>
<comment>（假設您要使用 GMT）</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>安裝核心原始碼</title>
<subsection>
<title>選擇一個核心</title>
<body>

<p>
Linux 的核心是所有版本的最中心，也是最重要的。他位於使用者程式和系統硬體之間。
Gentoo 提供使用者很多可用的核心原始碼。您可以到 <uri
link="/doc/tw/gentoo-kernel.xml">Gentoo 核心 指南</uri> 查看我們所提供的核心。
</p>

<p>
MIPS 系統的使用者可以選擇 <c>mips-sources</c> （適用於 MIPS 架構的預設核心
）和 <c>mips-prepatch-sources</c> （prerelease kernel tree）。
</p>

<p>
選擇適合您的核心原始檔然後使用 <c>emerge</c> 安裝。當然，請安裝您想要的的核心：
</p>

<pre caption="安裝核心原始碼">
# <i>emerge mips-sources</i>
</pre>

<p>
當您查看 <path>/usr/src</path> 您將會看到一個 <path>linux</path> 的連接連到
您所選的核心：
</p>

<pre caption="觀看核心原始碼目錄連接">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt;linux-2.4.24
</pre>

<p>
如果您碰到的不是這樣（例：連接連到其他的核心目錄）您將需要在繼續往下之前更改連接
：
</p>

<pre caption="更改核心連接目錄">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.24 linux</i>
</pre>

<p>
現在我們該設定然後編譯您的核心原始碼了。
</p>

</body>
</subsection>
</section>
<section>
<title>手動設定</title>
<subsection>
<title>介紹</title>
<body>

<p>
手動設定核心常常被 Linux 使用者認為最難完成的步驟。雖然不假 -- 但是當您手動編譯
幾次核心後，您應該不會覺得它有多難 ;)
</p>

<p>
但是，<e>唯一</e> 的重點就是：您必須要了解您的系統才可以開始手動編譯。系統上多數
的資料可以從 <path>/proc/pci</path> （如果可以的話使用 <c>lspci</c>）查看。您也
可以執行 <c>lsmod</c> 看看 LiveCD 使用那些核心模組（這是一個不錯的暗示，教您該
開啟那個選項）。
</p>

<p>
現在到您的核心原始碼目錄然後執行 <c>make menuconfig</c>。這將會啟動一個
ncurses 的設定選單。
</p>

<pre caption="開始 menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
您將會看到一大串的設定部份。我們將列出一些您一定要啟用的選項（不然 Gentoo 無法
完善的工作）。
</p>

</body>
</subsection>
<subsection>
<title>必須開啟的選項</title>
<body>

<p>
首先，開啟 development and experimental code/drivers。您將需要這個，不然
您將無法看見一些其他重要的程式碼或是驅動程式。
</p>

<pre caption="選擇 experimental code/drivers">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
現在到 <c>File Systems</c> 然後選擇要支援的檔案系統。記得<e>不要</e>將它們編成模
組。還有 <c>Virtual memory</c>，<c>/proc file system</c>，<c>/dev file 
system</c> + <c>Automatically munt at boot</c>：
</p>

<pre caption="選擇相關檔案系統">
<comment>(使用 2.4.x 核心)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(使用 2.6.x 核心)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)

<comment>（按照您系統所需要的檔案系統開啟以下選項）</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
如果您需要透過 PPPoE 連線到網路或是數據機撥接，您將需要以下的核心選項：
</p>

<pre caption="選擇 PPPoE 相關驅動程式">
<comment>(使用 2.4.x 核心)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(使用 2.4.x 核心)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
雖然 <c>PPP over Ethernet</c> 選項只是有在 <c>rp-pppoe</c> 設定為核心 PPPoE
時需要，但是這兩個壓縮的選項不會造成錯誤。
</p>

<note>
2.6 核心的使用者可以在 <c>Device Drivers</c> 下找到上面所談到的選項。
</note>

<p>
如果您需要，不要忘了為您的網路卡加入核心的支援。
</p>

<p>
如果您使用的是 Indy/Indigo2 系統，您需要開啟相關的核心支援。
</p>

<pre caption="啟用 SGI IP22">
Machine selection ---&gt;
  [*] Support for SGI IP22 (Indy/Indigo2)
</pre>

<p>
如果您要執行 Irix 二進位檔案，開啟以下選項：
</p>

<pre caption="開啟 IRIX 二進位支援">
General setup ---&gt;
  [*] Include IRIX binary compatibility
</pre>

<p>
如果您的 SGI Indogo 有 ISA/EISA 卡，開啟支援的選項：
</p>

<pre caption="啟用 SGI Indigo2 的 IPs/EISA 支援">
General setup ---&gt;
  [*] Indigo-2 (IP22) EISA bus support
  [*]   ISA bus support
</pre>

<p>
如果您有 SGI 的 parallel port，您可以開啟核心支援的選項。如果您有 ISA parallel
port 您應該選擇 "PC-style hardware"。
</p>

<pre caption="啟用 SGI Parallel Port 支援">
Parallel port support  ---&gt;
  &lt;*&gt; Parallel port support
  &lt;*&gt;   SGI Indy/Indigo2 hardware (EXPERIMENTAL) (NEW)
  &lt;*&gt;   IEEE 1284 transfer modes (NEW)
</pre>

<p>
如果您要啟用 Indigo2 ISA slot，啟用 plug and play 支援。
</p>

<pre caption="啟用 ISA 的 PnP 支援">
Plug and Play configuration  ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;*&gt;   ISA Plug and Play support
</pre>

<p>
不要忘了啟用 SCSI 支援，然後使用 SGI WD93C93 的驅動程式：
</p>

<pre caption="啟動 WD93C93 的驅動程式支援">
SCSI low-level drivers  ---&gt;
  &lt;*&gt; SGI WD93C93 SCSI Driver
</pre>

<p>
對於網路卡，您或許需要開啟 SGI Seeq ethernet controller 的支援：
</p>

<pre caption="開啟 SGI Seeq Support">
Network device support  ---&gt;
  Ethernet (10 or 100Mbit)  ---&gt;
    [*] Ethernet (10 or 100Mbit)
    [*]   SGI Seeq ethernet controller support
</pre>

<p>
不要忘了開啟 serial console 支援和 SGI Zilog85C30 支援：
</p>

<pre caption="開啟 SGI Zilog85C30 支援">
Character devices ---&gt;
  [*] Non-standard serial port support
  [*]   SGI Zilog85C30 serial support
</pre>

<p>
也不要忘了開啟 Indy/I2 Watchdog 支援和 SGI DS1286 RTC 支援：
</p>

<pre caption="開啟 Watchdog 和 RTC 支援">
Character Devices ---&gt;
  [*] SGI DS1286 RTC support
  Watchdog Cards  ---&gt;
    [*] Watchdog Timer Support
    &lt;*&gt;   Indy/I2 Hardware Watchdog
</pre>

<p>
您應該要開啟 SGI 分割區的支援 :)
</p>

<pre caption="開啟 SGI 分割區的支援">
File Systems ---&gt;
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*]   SGI partition support
</pre>

<p>
如果您有一個 SGI Newport （XL Gfx）卡並且想要使用它，那您就需要開啟相關的支援：
</p>

<pre caption="開啟 SGI Newport 卡的支援">
Console drivers  ---&gt;
  &lt;*&gt; SGI Newport Console support (NEW)
</pre>

<p>
如果您要開啟 Indy/Indigo2 的音效支援：
</p>

<pre caption="開啟 SGI HAL2 支援">
Sound  ---&gt;
  &lt;*&gt; Sound card support
  &lt;*&gt;   SGI HAL2 sound (EXPERIMENTAL)
</pre>

<p>
當您完成核心設定時，請從 <uri link="#compiling">編譯和安裝</uri> 繼續。
</p>

</body>
</subsection>
<subsection>
<title>啟用建議的 MIPS 選項</title>
<body>

<p>
如果您的系統有多個 CPU，您應該啟用 "Symmetric multi-processing support"：
</p>

<pre caption="啟用 SMP 支援">
Processor type and features ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
當您完成核心設定時，請從 <uri link="#compiling">編譯和安裝</uri> 繼續。
</p>

</body>
</subsection>
<subsection id="compiling">
<title>編譯和安裝</title>
<body>

<p>
現在您的核心已經設定完成了，我們該來編譯然後安裝它。離開核心設定，然後執行
<c>make dep &amp;&amp; make vmlinux modules modules_install</c>：
</p>

<pre caption="編譯核心">
<comment>（核心 2.4）</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>（其他核心 2.6）</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
當核心完成編譯時，將核心映像檔複製到 <path>/boot</path>。
</p>

<pre caption="安裝核心">
# <i>cp vmlinux /boot/kernel-2.4.24</i>
# <i>cp System.map /boot/System.map-2.4.24</i>
</pre>

<p>
您也可以將您的核心設定檔備份到 <path>/boot</path>，以防萬一 :)
</p>

<pre caption="備份您的核心設定檔">
# <i>cp .config /boot/config-2.4.24</i>
</pre>

<p>
如果您的系統無法開啟 ELF 核心，將核心編譯成 <c>make 
vmlinux.ecoff</c> 而不是 <c>make vmlinux</c> 編譯核心。核心的映像檔將會被儲存在
<path>arch/mips/boot/vmlinux.ecoff</path> 而不是 <path>vmlinux</path>。
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>安裝分開的核心映像檔和模組</title>
<subsection>
<title>設定模組</title>
<body>

<p>
您將需要將想要開機時自動載入的模組放到
<path>/etc/modules.autoload.d/kernel-2.4</path> （或是
<path>kernel-2.6</path>）。您也可以加上模組的選項。
</p>

<p>
要查看所有可用的模組，執行 <c>find</c> 指令。不要忘了將 "&lt;kernel
version&gt;"更改為您剛剛編譯的版本：
</p>

<pre caption="查看所有可用的版本">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
舉例來說，要自動載入 <c>3c59x.o</c> 模組，編輯 <path>kernel-2.4</path> 或是 
<path>kernel-2.6</path>：
</p>

<pre caption="編輯 /etc/modules.autoload.d/kernel-2.4">
<comment>（2.4核心的範例）</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 或是 kernel-2.6">
3c59x
</pre>

<p>
現在執行 <c>modules-update</c> 來套用您的變更到 <path>/etc/modules.conf</path>：
</p>

<pre caption="執行 modules-update">
# <i>modules-update</i>
</pre>

<p>
現在請從 <uri link="?part=1&amp;chap=8">設定您的系統</uri> 繼續安裝。
</p>

</body>
</subsection>
</section>
</sections>
