<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_tw/handbook/hb-portage-files.xml,v 1.4 2004/12/30 07:55:51 ccpz Exp $ -->
<!-- rev 1.8 by ccpz -->
<sections>

<version>1.5</version>
<date>2004-12-26</date>

<section>
<title>Portage 檔案</title>
<subsection>
<title>設定指令</title>
<body>

<p>
Portage 含有一個預設的設定檔，放在 <path>/etc/make.globals</path>。當你打開來看
，你將注意到所有的 Portage 設定配置是以變數的形式處理。後面將會敘述哪些變數 
Portage 會聽從，還有他們各代表什麼意思。
</p>

<p>
因為許多設定指令在不同的電腦架構之間並不相同，在你的 profile 中，Portage 也有
一個預設的設定檔案：<path>make.defaults</path>。關於 profiles 
和 <path>/etc/make.profile</path> 資料夾，待會我們將解釋更多。
</p>

<p>
如果你打算變更設定變數，<e>不要</e>修改 <path>/etc/make.globals</path> 或 
<path>make.defaults</path>。請使用優先權較上面檔案高的 
<path>/etc/make.conf</path>。你會發現有個 <path>/etc/make.conf.example</path>。
正如他名字，這不過是個樣本 - Portage 並不會讀取這個檔案。
</p>

<p>
你也可以用環境變數來定義 Portage 設定變數，但是我們並不建議這麼做。
</p>

</body>
</subsection>
<subsection>
<title>Profile 特定資訊</title>
<body>

<p>
我們與 <path>/etc/make.profile</path> 資料夾已有過邂逅。但這並不是一個真正的資料夾，
只是一個連到 <path>/usr/portage/profiles</path> 其中之一的符號連結。你也可以在別的
地方建立你自己的 profiles 然後指向他。該符號連結所指向的 profile，將是你的系統所依賴的。
</p>

<p>
一個 profile 包含著給 Portage 的特定電腦架構資訊，像是一個與該 profile 相符合系統的
套件列表，一個不運作（或被 mask 掉）、給該 profile 用的套件列表等等。
</p>

</body>
</subsection>
<subsection>
<title>使用者專用設定</title>
<body>

<p>
當你想要推翻 Portage 中，與軟體安裝有關的特性，你可以開始編輯 <path>/etc/portage</path> 
之中的檔案。<e>強烈建議</e>您使用 <path>/etc/portage</path> 中的檔案，<e>千萬不要</e>
以環境變數覆蓋該特性。
</p>

<p>
你可以建立以下檔案在 <path>/etc/portage</path> 之中:
</p>

<ul>
  <li>
    <path>package.mask</path> 列出你不想讓 Portage 安裝的套件。
  </li>
  <li>
    <path>package.unmask</path> 列出你想讓 Portage 能夠安裝的套件，即使 Gentoo 開發
    者強烈建議你不要 emerge 他們。
  </li>
  <li>
    <path>package.keywords</path> 列出你想讓 Portage 能夠安裝的套件，即使該套件（還）
    沒有被認為適合你的系統或電腦架構。
  </li>
  <li>
    <path>package.use</path> 列出你想給特定套件使用的 USE 旗標，而不必讓整個系統使
    用該 USE 旗標。
  </li>
</ul>

<p>
可以在 Portage man page 找到更多關於 <path>/etc/portage</path> 資料夾的資訊，和可建
立的檔案的完整列表。
</p>

<pre caption="閱讀 Portage man page">
$ <i>man portage</i>
</pre>

</body>
</subsection>
<subsection>
<title>改變 Portage 檔案 &amp; 資料夾路徑</title>
<body>

<p>
之前提到的設定檔並不能存在別的地方 - Portage 總是會到這些地方找這些設定檔。然而
因為各種目的：建立資料夾、存放原始碼、Portage 樹狀目錄路徑等等，Portage 還有許多其
他的路徑設定。
</p>

<p>
這些目的都有個眾所皆知的預設存放路徑，但可以透過編輯<path>/etc/make.conf</path>
來改成你自己的品味。這章剩下的部分將解釋哪些特定目的路定 Portage 會去使用，以及
如何在你的檔案系統中變更他們。
</p>

<p>
然而這份文件並不想被當做參考資料來使用。如果你需要百分之百範圍的解說，請查閱 
Portage 和 <path>make.conf</path> 的 man page:
</p>

<pre caption="閱讀 Portage 和 make.conf 的 man pages">
$ <i>man portage</i>
$ <i>man make.conf</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>檔案儲存</title>
<subsection>
<title>Portage 樹狀目錄</title>
<body>

<p>
Portage 樹狀目錄預設路徑是 <path>/usr/portage</path>。這是由 PORTDIR 變數所定義。
當你把 Portage 樹狀目錄存在別的地方（透過變更此變數），不要忘記跟著改變 
<path>/etc/make.profile</path> 符號連結。
</p>

<p>
如果你修改了 PORTDIR 變數，你可能也想改變下列的變數，因為他們不會注意到 PORTDIR 
改變。這是由於 Portage 處理變數的方式：PKGDIR、DISTDIR、RPMDIR。
</p>

</body>
</subsection>
<subsection>
<title>預先編譯好的二進位檔</title>
<body>

<p>
即使 Portage 預設不使用預先編譯好的二進位檔，但 Portage 對他們有廣泛的支援。
當你要求 Portage 以預先編譯好套件工作時，他將到 <path>/usr/portage/packages</path> 
尋找他們。這個路徑由 PKGDIR 變數定義。
</p>

</body>
</subsection>
<subsection>
<title>原始碼</title>
<body>

<p>
應用程式原始碼預設儲存在 <path>/usr/portage/distfiles</path>。這個路徑由 DISTDIR 變數
定義。
</p>

</body>
</subsection>
<subsection>
<title>RPM 檔案</title>
<body>

<p>
即使 Portage 不能使用 RPM 檔案，但可以使用 <c>ebuild</c> 指令產生他們。
（請看 <uri link="?part=3&amp;chap=6">Ebuild 程式</uri>）。
Portage 預設存放 RPM 檔案的地方在 <path>/usr/portage/rpm</path> ，他是以 RPMDIR 變
數來定義。
</p>

</body>
</subsection>
</section>
<section>
<title>編譯軟體</title>
<subsection>
<title>Portage 暫存檔案</title>
<body>

<p>
Portage 的暫存檔案預設上放在 <path>/var/tmp</path>。這定義於 PORTAGE_TMPDIR 變數。
</p>

<p>
如果你改變了 PORTAGE_TMPDIR 變數，你可能也想改變下列的變數，因為他們不會注意到 
PORTAGE_TMPDIR 改變。這是由於 Portage 處理變數的方式：BUILD_PREFIX。
</p>

</body>
</subsection>
<subsection>
<title>編譯資料夾</title>
<body>

<p>
Portage 在 <path>/var/tmp/portage</path> 裡面建立專用的編譯資料夾，讓各個套件
在裡面 emerge。這個路徑由 BUILD_PREFIX 變數定義。
</p>

</body>
</subsection>
<subsection>
<title>Live 檔案系統路徑</title>
<body>

<p>
預設上，Portage 安裝所有檔案到當前的檔案系統 (<path>/</path>)，但你可以設定 ROOT 
環境變數來改變他。當你想要建立一個新的編譯鏡像，這是很有用的。
</p>

</body>
</subsection>
</section>
<section>
<title>日誌特性</title>
<subsection>
<title>Ebuild 日誌</title>
<body>

<p>
Portage 可以建立各個 ebuild 的日誌，但只有當 PORT_LOGDIR 變數已設置到一個 Portage 
可寫入的路徑（portage 使用者）。預設上，這個變數並無設定。
</p>

</body>
</subsection>
</section>
</sections>
