<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_tw/handbook/hb-portage-tools.xml,v 1.2 2004/11/11 06:29:08 ccpz Exp $ -->
<!-- rev 1.4 by ccpz -->
<sections>

<version>1.3</version>
<date>2004 年 10 月 24</date>
	   	
<section>
<title>etc-update</title>
<body>

<p>
<c>etc-update</c> 是一個幫助合併 <path>._cfg0000_&lt;名稱&gt;</path> 檔案的工具
。他提供互動式的合併設定，也可以自動處理明顯的改變。
<path>._cfg0000_&lt;名稱&gt;</path> 檔案是由 Portage 在他想要把檔案放到被
CONFIG_PROTECT 變數保護的目錄時產生的。
</p>

<p>
執行 <c>etc-update</c> 相當的直觀：
</p>

<pre caption="執行 etc-update">
# <i>etc-update</i>
</pre>

<p>
在合併明顯的改變後，你會看到需要更新的受保護檔案列表。在底下有兩個選項：
</p>

<pre caption="etc-update 選項">
Please select a file to edit by entering the corresponding number.
              (-1 to exit) (-3 to auto merge all remaining files)
                           (-5 to auto-merge AND not use 'mv -i'):
</pre>

<p>
如果你輸入 <c>-1</c>，<c>etc-update</c> 會離開不做任何改變。輸入 <c>-3</c> 或
<c>-5</c> 的話，<e>所有</e>列在上面的設定檔都會用新的覆蓋。因此先選擇不要自動更
新的設定檔相當重要。這是很簡單的一件事情，只要輸入列在設定檔左邊的號碼就好。
</p>

<p>
我們用 <path>/etc/pear.conf</path> 設定檔當作範例：
</p>

<pre caption="更新特定設定檔">
Beginning of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
<comment>[...]</comment>
End of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
1) Replace original with update
2) Delete update, keeping original as is
3) Interactively merge original with update
4) Show differences again
</pre>

<p>
你現在可以看到新舊設定檔間的不同處。如果你相信更新過的設定檔可以正確無誤的使用
，輸入 <c>1</c>。如果你認為更新檔案沒有必要，或沒有提供任何新或有用的資訊，輸入
<c>2</c>。如果你想要互動的更新目前的設定檔，按 <c>3</c>。
</p>

<p>
在這裡更深入的說明互動是並沒有意義。為了完整的理由，我們會列出在你互動合併兩個
檔案時可以用的指令。你會看到兩行(原來的，以及新建議的)和你可以輸入下列指令的提
示符號：
</p>

<pre caption="互動合併時可用的指令">
ed:     在編輯器中編輯兩種版本，各個版本前加上不同標頭。
eb:     在編輯器中編輯兩種版本。
el:     編輯左邊的版本然後使用。
er:     編輯右邊的版本然後使用。
e:      編輯新的版本。
l:      使用左邊的版本。
r:      使用右邊的版本。
s:      簡潔的包含共同部份。
v:      詳細的包含共同部份。
q:      Quit.
</pre>

<p>
當你更新好這重要的設定檔，你以自動更新所有其他的設定檔。如果沒有其他需要更新的
檔案，<c>etc-update</c> 會自動離開。
</p>

</body>
</section>
<section>
<title>dispatch-conf</title>
<body>

<p>
使用 <c>dispatch-conf</c> 你可以合併更新到你的更新當同時監看所有的改變。
<c>dispatch-conf</c> 以 patch 檔案或是使用 RCS 修訂版系統來儲存設定檔間的不同處。
</p>

<p>
就像 <c>etc-update</c>，你可以保持原本的設定檔，使用新的設定檔，編輯目前設定檔
或互動合併改變。然而 <c>dispatch-conf</c> 也有一些很棒的功能。
</p>

<ul>
  <li>
    自動合併只有註解更新的檔案。
  </li>
  <li>
    自動合併只有空白的地方修改的檔案。
  </li>
</ul>

<p>
確定你先編輯過 <path>/etc/dispatch-conf.conf</path> 然後建立 archive-dir 變數設
定的目錄。
</p>

<p>
查看 <c>dispatch-conf</c> 手冊頁取得更多資訊：
</p>

<pre caption="閱讀 dispatch-conf 手冊頁">
$ <i>man dispatch-conf</i>
</pre>

</body>
</section>
<section>
<title>quickpkg</title>
<body>

<p>
使用 <c>quickpkg</c> 你可以建立已經安裝在你系統上軟體的套件檔。這檔案可以當作預
先編好的套件。執行 <c>quickpkg</c> 相當直觀：只要加入你想製作的套件名。
</p>

<p>
例如說，打包 <c>curl</c>，<c>arts</c> 和 <c>procps</c>：
</p>

<pre caption="quickpkg 使用範例">
# <i>quickpkg curl arts procps</i>
</pre>

<p>
預先編譯好的套件會放在 <path>/usr/portage/packages/All</path>。到這些套件的符號
連結在 <path>/usr/portage/packages/&lt;category&gt;</path>。
</p>

</body>
</section>
</sections>
