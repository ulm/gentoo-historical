<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_tw/handbook/hb-install-system.xml,v 1.7 2004/11/27 09:10:18 ccpz Exp $ -->

<!-- rev 1.62 by ccpz -->

<sections>

<version>1.56</version>
<date>2004-11-06</date>

<section>
<title>變換根目錄</title>
<subsection>
<title>自由選擇：選擇鏡像站</title>
<body>

<p>
如果您是從 Gentoo LiveCD 開機的話，您可以使用 <c>mirrorselect</c> 來更新 
<path>/etc/make.conf</path> 讓您可以從最快的鏡像站取得套件和原始碼（當在這需要網
路連線）：
</p>

<pre caption="選擇最快的鏡像站">
# <i>mirrorselect -a -s4 -o | grep 'GENTOO_MIRRORS=' &gt;&gt; /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
如果因為某些理由 <c>mirrorselect</c> 失敗了，不要慌張。這一步是自由選擇的。
這項步驟是非必要性的，您也可以使用預設的設定。
</p>

</body>
</subsection>
<subsection>
<title>複製 DNS 設定</title>
<body>

<p>
還有一件事在我們進入新的系統環境之前要記得做，就是複製 <path>/etc/resolv.conf</path> 
中的 DNS 設定。您需要做這件是確保網路在進入新的環境後仍然可以工作。 
<path>/etc/resolv.conf</path> 包含網路需要的名稱伺服器。
</p>

<pre caption="複製 DNS 設定">
<comment>（我們將需要使用到 "-L" 的參數來確保我們不會複製到連接類型的檔案 ）</comment>
# <i>cp -L /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

</body>
</subsection>
<subsection>
<title>掛載 proc 檔案系統</title>
<body>
  	 
<p>
將 <path>/proc</path> 檔案系統掛載到 <path>/mnt/gentoo/proc</path> 讓安裝過程中
即使是在 chrooted 的環境也可以取得新提供的資訊。
</p>
  	 
<pre caption="掛載 /proc">
# <i>mount -t proc none /mnt/gentoo/proc</i>
</pre>
  	 
</body>
</subsection>
  	 
<subsection>
<title>進入新的系統環境</title>
<body>

<p>
現在所有的分割區都已經初步設定好了而且基本的系統也安裝完畢，現在是用
<e>變換根目錄</e>進入新的系統環境的時候了。這代表我們從目前的安裝環境
(LiveCD 或是其他的安裝媒體)進入您安裝的系統(就是已經安裝的分割區)。
</p>

<p>
變換根目錄動作在三步驟內完成。首先我們會用 <c>chroot</c> 讓根目錄從 
<path>/</path> (目前安裝的媒體)變換到 <path>/mnt/gentoo</path> (或您安裝的分割區)。
然後用 <c>env-update</c> 建立新的環境，這將會建立基本的系統變數。最後，我們用 
<c>source</c> 把這些變數載入到記憶體。
</p>

<pre caption = "進入新的環境">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
 * Caching service dependencies...
# <i>source /etc/profile</i>
</pre>

<p>
恭喜！您現在新的 Gentoo Linux 環境當中了。不過離安裝完畢還有一段時間，這就是為什
麼安裝指南還有下面這些部份 :-)
</p>

</body>
</subsection>
<subsection>
<title>自由選擇：更新 Portage tree</title>
<body>

<p>
如果您沒按照上一章所說的，將 Portage 快照安裝，您一定要從網路上下載一分最新的
Portage tree。<c>emerge --sync</c> 將會為您完成此項動作。其他的使用者應該跳過這個
部份從 <uri link="#configure_USE">設定 USE 變數</uri> 繼續。
</p>

<pre caption="更新 Portage tree">
# <i>emerge --sync</i>
</pre>

<p>
Portage 使用的是 RSYNC 協定來更新 Portage tree。如果以上的指令失敗，請使用
<c>emerge-webrsync</c> 透過 HTTP 協定下載 Portage 快照。
</p>

<pre caption="使用 emerge-webrsync 更新 Portage tree">
# <i>emerge-webrsync</i>
</pre>

<p>
如果您看到新的 Portage 已經可以下載而且您必須要更新的警告時，您應該要略過它，
 Portage 在之後安裝時會被更新。
</p>

</body>
</subsection>
<subsection id="configure_Use">
<title>設定 USE 變數</title>
<body>

<warn> 
如果你使用包括 GRP 的  stage3 安裝，不要對 USE 變數做任何的改變。你可以在安裝完
你想要的套件後修改 USE 變數。如果你忽略這個警告的話，搗蛋鬼會找上你的系統！
</warn> 

<p>
<c>USE</c> 是 Gentoo 提供給使用者最有威力的變數之一。須多程式可以在編譯時包含或
不包含自由選擇的支援。例如，一些程式可以在編譯時包含 gtk 支援，或者是支援 qt。其它
程式可以包含或不包含 SSL 支援，也有一些甚至可以使用 framebuffer (svgalib) 而不是
X11 (X-server)。
</p>

<p>
大部分的安裝套件在編譯時都敬可能的加入最多的支援，增加檔案大小以及程式啟動的時
間，更別提複雜的相依性。在 Gentoo 下您可以定義哪些支援編譯時要加入。這就是 <c>USE</c>
 的作用。
</p>

<p>
在 <c>USE</c> 變數中，您可以加入要在編譯時加入支援的關鍵字。例如，<e>ssl</e> 會
在支援 ssl 的程式編譯時加入 ssl 支援。<e>-X</e> 則會移除 X-server 支援(注意前面
的減號)。<e>gnome gtk -kde -qt</e> 則會支援 gnome(以及 gtk)，而不包含 kde(以及 qt)
的支援，這可以讓您的系統對 GNOME 完整的調節。
</p>

<p>
預設的 <c>USE</c> 設定放在 <path>/etc/make.profile/make.defaults</path>，而您在 
<path>/etc/make.conf</path> 中的設定會和預設的設定一起考慮。如果您在 <c>USE</c> 
設定中新增一些東西，他會加入預設的設定中。如果您從 <c>USE</c> 中移除一些東西(在
前面加上減號)，他會從預設的設定移除。<e>永遠</e>不要改變任何在 
<path>/etc/make.profile</path> 目錄中的東西，他會在您更新 Portage 時被覆蓋！
</p>

<p>
完整的 <c>USE</c> 說明可以在 Gentoo 手冊中 
<uri link="?part=2&amp;chap=2">USE 參數</uri> 找到。完整的 USE 參數列表
可以在系統中的 <path>/usr/portage/profiles/use.desc</path> 找到。
</p>

<pre caption="檢視可用的 USE 參數">
# <i>less /usr/portage/profiles/use.desc</i>
<comment>(你可以使用方向鍵來捲動，按下 'q' 離開)</comment>
</pre>

<p>
下面是一個 <c>USE</c> 的設定，在以 KDE 為基礎的系統中支援 DVD, ALSA 以及燒錄機。
</p>

<pre caption="開啟 /etc/make.conf">
# <i>nano -w /etc/make.conf</i>
</pre>

<pre caption="USE 設定">
USE="-gtk -gnome qt kde dvd alsa cdr"
</pre>

<p>
你可能只會需要在你的系統上使用一種或兩種 locale。在目前編譯完 <c>glibc</c> 後所
有可用的 locale 都會被建立。你可以啟動 <c>userlocales</c> USE 設定並且在
<path>/etc/locales.build</path> 指定你需要的 locale。
</p>
  	 
<pre caption="為 glibc 啟動 userlocales USE 設定">
# <i>mkdir /etc/portage</i>
# <i>echo "sys-libs/glibc userlocales" >> /etc/portage/package.use</i>
</pre>
  	 
<p>
現在指定你想要使用的 locale：
</p>

<pre caption="nano -w /etc/locales.build">
# <i>nano -w /etc/locales.build</i> 
</pre> 
	    
<pre caption="指定你的 locale"> 	   
en_US/ISO-8859-1
en_US.UTF-8/UTF-8
de_DE/ISO-8859-1
de_DE@euro/ISO-8859-15
</pre>

</body>
</subsection>
<subsection>
<title>自由選擇：在不同電腦編譯</title>
<body>

<p>
如果您對使用許多系統來協助您一起編譯程式，您可能會想要看 
<uri link="/doc/tw/distcc.xml">DistCC 指南</uri>。您可以藉著 <c>distcc</c> 來使
用許多台電腦的處理能力來幫助您完成安裝。
</p>

</body>
</subsection>
</section>
<section>
<title> Stage1，Stage2 和 Stage3 的不同</title>
<body>

<p>
現在先坐下來回想一下之前的步驟。我們要求您選擇 <e>stage1</e>，<e>stage2</e> 或 
<e>stage3</e> 並且提醒您您的選擇對之後的安裝步驟很重要。嗯，現在是您決定接下來
的步驟的時候了。
</p>

<ul>
<li>
  如果您選擇 <e>stage1</e>，接下來您要做這一節<b>全部</b>的步驟從 
  <uri link="#doc_chap3">Stage1 到 Stage2 的過程</uri> 開始
</li>
<li>
  如果您選擇 <e>stage2</e> 您只要略過第一步驟，立即從第二部份 
  <uri link="#doc_chap4">Stage2 到 Stage3 的過程</uri> 開始
</li>
<li>
  如果您選擇 <e>stage3</e>(不管使不使用 GRP)那您可以略過這兩部份。
  請繼續下一節：  <uri link="?part=1&amp;chap=7">設定核心</uri>
</li>
</ul>

</body>
</section>
<section>
<title>Stage1 到 Stage2 的過程</title>
<subsection>
<title>介紹 Bootstrapping</title>
<body>

<p>
所以您決定要從頭編譯所有東西？那開始吧 :-)
</p>

<p>
在這個步驟中，我們會 <e>bootstrap</e> 您的 Gentoo 系統。這會花很長一段時間，但是
您會得到一個針對您的機器完全最佳化的系統。
</p>

<p>
<e>Bootstrapping</e> 代表編譯 GNU C 函式庫、GNU C 編譯器以及其他重要的軟體。
</p>

<p>
在開始之前，你可能會想要先下載必須的原始檔。如果您不想要閱讀這些的話，從 
<uri link="#bootstrap">Bootstrapping 您的系統</uri> 繼續。
</p>

</body>
</subsection>

<subsection>
<title>自由選擇：先下載原始碼</title>
<body>

<p>
如果您之前不曾複製全部的原始碼，bootstrap script 會下載所有必要的檔案。這當然在
有連接到網路時才能正常工作 :-) 如果您想要先下載原始碼然後再執行 bootstrap (例如
您並不想在編譯時讓您的網路一直保持連線)，使用bootstrap script 的 <e>-f</e> 選項
，這將會下載(<e>F</e>etch)所有的原始碼。
</p>

<pre caption = "下載必須的原始碼">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh -f</i>
</pre>

</body>
</subsection>
<subsection>
<title>Bootstrapping 您的系統</title>
<body>

<p>
好啦，在您的鍵盤敲下底下的指令來啟動 bootstrap，然後給您自己找些娛樂吧 
然後自己找點喜歡的事情做，因為這一步驟將會花費一些時間完成。
</p>

<pre caption = "Bootstrapping 您的系統">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>

<p>
接下來繼續下一步驟 <uri link="#doc_chap4">Stage2 到 Stage3 的過程</uri>。
</p>

</body>
</subsection>
</section>
<section>
<title>Stage2 到 Stage3 的過程</title>
<subsection>
<title>介紹</title>
<body>

<p>
如果您正在閱讀這一部份，那您已經有一個 bootstrap 好的系統(可能是您之前執行
bootstrap 或是您使用 <e>stage2</e>)。現在是編譯所有系統套件的時候了。
</p>

<p>
<e>所有</e>系統套件？不，不完全是。在這一步驟中，您將會編譯沒有其他選擇的系統套
件。一些套件有多種選擇 (例如 system loggers)，因為 Gentoo 代表選擇，我們不會強迫
您一定要使用哪一種。
</p>

</body>
</subsection>
<subsection>
<title>自由選擇：看會做哪些事</title>
<body>

<p>
如果您想要知道哪些套件會被安裝，執行 <c>emerge --pretend system</c>。這將會列出
所有要編譯的程式。因為這相當的多，您應該使用 <c>less</c> 或 <c>more</c> 來上下瀏
覽。
</p>

<pre caption = "看 'emerge system' 會做什麼">
# <i>emerge --pretend system | less</i>
</pre>

</body>
</subsection>
<subsection>
<title>自由選擇：下載原始碼</title>
<body>

<p>
如果您想要 <c>emerge</c> 在開始之前先下載原始碼(例如您並不想在編譯時讓您的網路一
直保持連線)，您可以使用 <c>emerge</c> 的 <e>--fetchonly</e> 參數來幫您下載所有的
原始碼。
</p>

<pre caption = "下載原始碼">
# <i>emerge --fetchonly system</i>
</pre>

</body>
</subsection>
<subsection>
<title>編譯系統</title>
<body>

<p>
執行 <c>emerge system</c> 來開始編譯系統。然後讓您自己忙於某些事情，因為這到完成
會花很長一段時間。
</p>

<pre caption = "編譯系統">
# <i>emerge system</i>
</pre>

<p>
您現在可以安全的略過任何警告來更新您的設定檔（執行 <c>etc-update</c>）。當您的 
Gentoo 系統已經完全安裝完畢，重開機後，查看我們的 <uri
link="?part=3&amp;chap=2#doc_chap3">設定檔案保護</uri>。
</p>

<p>
當編譯過程完成後，請從 <uri
link="?part=1&amp;chap=7">設定核心</uri> 繼續。
</p>

</body>
</subsection>
</section>

</sections>
