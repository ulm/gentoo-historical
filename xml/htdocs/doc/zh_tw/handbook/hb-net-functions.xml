<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_tw/handbook/hb-net-functions.xml,v 1.2 2006/01/24 14:03:05 ccpz Exp $ -->

<!-- rev 1.7 by ccpz -->
<sections>

<version>1.2</version>
<date>2005-12-22</date>

<section>
<title>標準函數連結</title>
<body>

<p>
有四個定義好的函數在 <c>start</c>/<c>stop</c> 動作時會啟動。這些函數開頭都是網
路介面的名稱，以便控制多個網路介面。
</p>

<p>
<c>preup()</c> 和 <c>predown()</c> 函數應該回傳 0，表示接下來的介面設定或取消設
定可以繼續，如果 <c>preup()</c> 回傳不為 0 的數值，會結束網路介面的設定。如果
<c>predown()</c> 回傳不為 0 的數值，將會不允許繼續這個網路介面的取消設定。
</p>

<p>
<c>postup()</c> 及 <c>postdown()</c> 函數會忽略回傳值，因為如果他們有錯誤的話，
也沒有什麼要做的。
</p>

<p>
<c>${IFACE}</c> 是設成要啟動/關閉的網路介面。<c>${IFVAR}</c> 是把
<c>${IFACE}</c> 轉換成 bash 可以接受的變數名稱。
</p>

<pre caption="pre/post up/down function 範例">
preup() {
  <comment># 在啟動前測試網路線是否已接上。
  # 這只在某些網路卡有作用，並且需要安裝 mii-diag 套件</comment>
  if mii-tool ${IFACE} 2> /dev/null | grep -q 'no link'; then
    ewarn "No link on ${IFACE}, aborting configuration"
    return 1
  fi

  <comment># 在啟動前測試網路線是否已接上。
  # 這只在某些網路卡有作用，並且需要安裝 ethtool 套件</comment>
  if ethtool ${IFACE} | grep -q 'Link detected: no'; then
    ewarn "No link on ${IFACE}, aborting configuration"
    return 1
  fi

  <comment># 記得回傳 0 代表成功</comment>
  return 0
}

predown() {
  <comment># script 中預設的是測試是否使用 NFS 當作根目錄，在這種情況不允許停止網路介面。
  # 注意如果你指定一個 predown() 函數，會蓋掉這個判斷。底下就是這個
  #script，如果你還需要他的話...</comment>
  if is_net_fs /; then
    eerror "root filesystem is network mounted -- can't stop ${IFACE}"
    return 1
  fi

  <comment># 記得回傳 0 代表成功</comment>
  return 0
}

postup() {
  <comment># 這個函數的用處例如說註冊動態 DNS 服務。
  # 另一個例子是在網路卡啟動後傳送/接收郵件。</comment>
       return 0
}

postdown() {
  <comment># 這個函數只是為了完整放在這裡...
  # 我還沒想到什麼巧妙的事情可以做的 ;-)</comment>
  return 0
}
</pre>

</body>
</section>
<section>
<title>無線網路函數連結</title>
<body>

<note>
這對 WPA Supplicant 不能工作 - 但是  <c>${ESSID}</c> 和 <c>${ESSIDVAR}</c> 變數在
<c>postup()</c> 函數內可以用。
</note>

<p>
這裡定義兩個結合函數在相關的函數附近被呼叫。這些函數開頭都是網路介面的名稱，
以便控制多個網路介面。
</p>

<p>
<c>preassociate()</c> 函數應該回傳 0，表示接下來的介面設定或取消設定可以繼續，如果
preup 回傳不為 0 的數值，會結束網路介面的設定。如果 <c>preassociate()</c> 回傳
不為 0 的數值，將會不允許繼續這個網路介面的取消設定。
</p>

<p>
<c>preassociate()</c> 函數會忽略回傳值，因為如果他們有錯誤的話，也沒有什麼要做
的。
</p>

<p>
<c>${ESSID}</c> 是設成你連線 AP 的 ESSID。<c>${ESSIDVAR}</c> 是 <c>${ESSID}</c>
轉換成 bash 可以接受的變數名稱。
</p>

<pre caption="pre/post 結合函數">
preassociate() {
  <comment># 底下加了 leap_user_ESSID 及 leap_pass_ESSID 兩個變數
  # 當這些都對你要連線的 ESSID 設好後，執行 CISCO LEAP script</comment>

  local user pass
  eval user=\"\$\{leap_user_${ESSIDVAR}\}\"
  eval pass=\"\$\{leap_pass_${ESSIDVAR}\}\"

  if [[ -n ${user} &amp;&amp; -n ${pass} ]]; then
    if [[ ! -x /opt/cisco/bin/leapscript ]]; then
      eend "For LEAP support, please emerge net-misc/cisco-aironet-client-utils"
      return 1
    fi
    einfo "Waiting for LEAP Authentication on \"${ESSID//\\\\//}\""
    if /opt/cisco/bin/leapscript ${user} ${pass} | grep -q 'Login incorrect'; then
      ewarn "Login Failed for ${user}"
      return 1
    fi
  fi

  return 0
}

postassociate() {
  <comment># 這個函數只是為了完整放在這裡...
    # 我還沒想到什麼巧妙的事情可以做的 ;-)</comment>
	
  return 0
}
</pre>

<note>
<c>${ESSID}</c> 及 <c>${ESSIDVAR}</c> 在 <c>predown()</c> 還有
<c>postdown()</c> 函數不能使用
</note>

</body>
</section>

</sections>
