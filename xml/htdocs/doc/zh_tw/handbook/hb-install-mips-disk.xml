<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_tw/handbook/hb-install-mips-disk.xml,v 1.2 2004/11/11 06:03:04 ccpz Exp $ -->

<!-- rev 1.7 by frid -->

<sections>

<version>1.6</version>
<date>2004年9月14日</date>

<section>
<title>介紹區塊裝置</title>
<subsection>
<title>區塊裝置（Block Devices）</title>
<body>

<p>
我們將仔細的介紹 Gentoo Linux 和 整體的Linux 的磁碟方式，包括 Linux 檔案系統，
分割區，和區塊裝置。然後，當您了解磁碟和檔案系統，您將會學到如何為您的 Gentoo 
Linux 安裝設定分割區和檔案系統。
</p>

<p>
首先，我們將要介紹 <e>區塊裝置</e>。最有名的區塊裝置大概就是代表 Linux 系統上的
第一個 SCSI 磁碟將會是 <path>/dev/sda</path>。
</p>

<p>
以上的區塊裝置代表著磁碟的介面。使用者可以不用擔心您的磁碟是否為 IDE，SCSI
或是其他，並且使用程式來使用這些區塊裝置。這個程式可以在磁碟上寫入多個隨機的 
512 byte 區塊。
</p>

</body>
</subsection>
<subsection>
<title>分割區</title>
<body>

<p>
雖然您可以使用整個磁碟來放置您的 Linux 系統，但是這並不實際。您應該要將區塊裝置
分成更小，更多管理的區塊裝置。這些則叫做 <e>分割區</e>。
</p>

</body>
</subsection>
</section>
<section>
<title>規劃分割區</title>
<subsection>
<title>多少和多大？</title>
<body>

<p>
分割區的多少將依照您的環境而不同，舉例來說，如果您有很多使用者，您將會想要將
<path>/home</path> 分開來增加安全性和增加備份的簡易度。如果您打算將 Gentoo 安裝
成一個郵件伺服器，您的 <path>/var</path> 應該要分開，因為所有的郵件都儲存在
<path>/var</path> 裡面。檔案系統的選擇也會增強您的系統效能。遊戲伺服器將會想要將
<path>/opt</path> 分開，因為大部份的遊戲伺服器都是裝在那邊。就和 
<path>/home</path> 的安全性和備份想法類似。
</p>

<p>
如您所見，這將和您的需求依賴著。不同的分割區或是容量將有以下的優點：
</p>

<ul>
  <li>
    您可以針對各分割區選擇最適合的檔案系統
  </li>
  <li>
    您全部的系統不會因為其中一個分割區壞掉而導致整個系統失效
  </li>
  <li>
    如果可以，檔案系統的檢查時間可以使用平行的方式進行（雖然這個優點比較針對多個
    磁碟而不是多個分割區）
  </li>
  <li>
    以為讀的的方式掛載增強安全性，nosuid（setuid 將會被略過），noexec（可執行的
    部份將會被略過）等等。
  </li>
</ul>

<p>
但是，多個分割區也有缺點：如果沒有完善的設定，您的系統內將會有一個分割區內的容量
多過於另外一個，或是其中一個分割區已經滿了。SCSI 和 SATA 也有最多 15 個分割區的
限制。
</p>

</body>
</subsection>
</section>
<section>
<title>在 MIPS 上使用 fdisk 分割您的磁碟</title>
<subsection>
<title>建立 SGI Disk Label</title>
<body>

<p>
所有的 SGI 系統都需要一個 <e>SGI Disk Label</e>，這是和 Sun &amp; MS-DOS
disklabels 一樣 -- 它將儲存磁碟分割區的資訊。建立一個新的 SGI Disk Label
將會建立兩個特別的分割區到磁碟上：
</p>

<ul>
  <li>
    <e>SGI Volume Header</e> （第九版）：這個分割區很重要。他將會是用來存放核心
    映像檔的地方。為了要可以儲存核心映像檔，您將需要使用 <c>dvhtool</c> 將核心
    映像檔複製到這邊。您才可以從 SGI PROM Monitor 從這個分割區起始核心。
  </li>
  <li>
    <e>SGI Volume</e>（第十一版）：這個分割區和 Sun Disklabel 的第三個
    "整個磁碟"分割區類似。這個分割區將佔住整個磁碟，和不應該被更動。他沒有特別的
    意思只是為了要幫助並未寫成原因的 PROM （或是用在 IRIX）。
  </li>
</ul>

<warn>
SGI Volume Header <e>一定</e> 要從 cylinder 0 開始。如果沒從 0 開始，您將無法
從磁碟開機。
</warn>

<p>
以下為 <c>fdisk</c> 的範例﹍
</p>

<pre caption="建立一個 SGI Disklabel">
# <i>fdisk /dev/sda</i>

Command (m for help): <i>x</i>

Expert command (m for help): <i>m</i>
Command action
   b   move beginning of data in a partition
   c   change number of cylinders
   d   print the raw data in the partition table
   e   list extended partitions
   f   fix partition order
   g   create an IRIX (SGI) partition table
   h   change number of heads
   m   print this menu
   p   print the partition table
   q   quit without saving changes
   r   return to main menu
   s   change number of sectors/track
   v   verify the partition table
   w   write table to disk and exit

Expert command (m for help): <i>g</i>
Building a new SGI disklabel. Changes will remain in memory only,
until you decide to write them. After that, of course, the previous
content will be unrecoverably lost.

Expert command (m for help): <i>r</i>

Command (m for help): <i>p</i>

Disk /dev/sda (SGI disk label): 64 heads, 32 sectors, 17482 cylinders
Units = cylinders of 2048 * 512 bytes

----- partitions -----
Pt#     Device  Info     Start       End   Sectors  Id  System
 9:  /dev/sda1               0         4     10240   0  SGI volhdr
11:  /dev/sda2               0     17481  35803136   6  SGI volume
----- Bootinfo -----
Bootfile: /unix
----- Directory Entries -----

Command (m for help):
</pre>

<note>
如果您的磁碟已經有了 SGI Disklabel，那麼 fdisk 將不會讓您建立一個新的。總共有兩
個方法可以解決。一個是建立 Sun 或是 MS-DOS disklable，將更動寫入磁碟，然後重新
啟動磁碟。第二個方法則是使用空的資料覆蓋它：<c>dd if=/dev/zero of=/dev/sda
bs=512 count=1</c>。
</note>

</body>
</subsection>
<subsection>
<title>設定 SGI Volume Header 到正確的大小</title>
<body>

<p>
現在 SGI Disklabel 已經建立完成，可以開始定義分割區了。在上面的範例，已經有兩個
已經定義完成的分割區了。這些是之前所討論到的特別分割區。但是，為了要安裝 Gentoo
，我們將需要直接載入多個核心到 volume header，因為沒有支援 SGI Bootloader 可以
放在 Portage 內提供使用。Volume header 可以放置 <e>八</e> 個任何大小的核心映像檔
但是每個映像檔名最常為八個英文字母。
</p>

<p>
建立 volume header 的步驟不是很直接 -- 需要一點技巧。一個因為 fdisk 奇怪的原因無
法刪除和重新加入 volume header。在以下的範例，我們將建立一個 50MB 的 volume
header 和衣個 50MB 的 /boot 分割區。真正的結果不一養，但是這只是為了解釋用途。
</p>

<pre caption="正確的更改 SGI Volume Header 大小">
Command (m for help): <i>n</i>
Partition number (1-16): <i>1</i>
First cylinder (5-8682, default 5): <i>51</i>
 Last cylinder (51-8682, default 8682): <i>101</i>
<comment>（fdisk 只允許第一個分割區在重新建立後在 cylinder 5）</comment>
<comment>（如果您嘗試過這個方法，刪除然後重新建立 SGI Volume Header 這將會是您會碰到的強況。）</comment>
<comment>（在我們的範例裡，我們將 /boot 設定為 50MB，所以我們要從 cylinder 51（還記得 Volume Header 需要在 cylinder 0 嗎？）然後將他的尾端設定在 101，代表著大約是 50MB（+/- 1-5MB））</comment>

Command (m for help): <i>d</i>
Partition number (1-16): <i>9</i>
<comment>（刪除第九個分割區（SGI Volume Header））</comment>

Command (m for help): <i>n</i>
Partition number (1-16): <i>9</i>
First cylinder (0-50, default 0): <i>0</i>
 Last cylinder (0-50, default 50): <i>50</i>
<comment>（重新建立第九個分割區，在第一個分割後面）</comment>
</pre>

</body>
</subsection>
<subsection>
<title>最後的分割區規劃</title>
<body>

<p>
當完成時，您將可以安全的建立您剩下的分割區了。當您所有的分割區已經完成建立時，
確認您的 swap 分割區的類別為 <c>82</c>，Linux Swap。預設它將會是 <c>83</c>，
Linux Native。
</p>

<p>
現在您的分割區已經建立完成，您可以從 <uri link="#filesystems">建立檔案系統</uri>
繼續。
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>建立檔案系統</title>
<subsection>
<title>介紹</title>
<body>

<p>
現在您的分割區已經建立完成了，接下來我們該把檔案系統放上去。如果您不在乎使用哪一
種檔案系統，喜歡我們的決定，請從 <uri link="#filesystems-apply">套用檔案系統到分
割區上</uri> 繼續。不然的話請繼續往下閱讀關於檔案可用的檔案系統﹍
</p>

</body>
</subsection>
<subsection>
<title>檔案系統？</title>
<body>

<p>
MIPS 架構上有許多穩定的檔案系統，分別是 Ext2 和 ext3。
</p>

<p>
<b>ext2</b> 是一個舊的 Linux 檔案系統，沒有日誌功能. 啟用的時間通常需要很久。目前有許多 <e>日誌型態</e> 的檔案系統可以以更快的速度及更好的效率完成系統啟用和檢查。
</p>

<p>
<b>ext3</b> 為 ext2 的日誌版，提供了 metadata 日誌系統 並且可以快速地使用日誌系
統復原。ext3 是個相當不錯並且可靠的檔案系統. 它有額外的 hashed b-tree 索引功能
將會開啟幾乎在任何情況內的狀態為高效能。簡單來說，ext3 是一個很棒的檔案系統。
</p>

<p>
<b>ReiserFS</b> 整體來說是個相當不錯的系統，它處理小型檔案(少於4kb)時效能會比 
ext2 和 ext3 來的好。他使用的是 B*-tree 為基礎的檔案系統. 另外也能很有效率地處理
大型檔案。Linux 核心版本 2.4.18+ 後，ReiserFS 是一個相當有值得推薦的系統, 從很少
，到很多檔案。ReiserFS 都可以處理的非常好。開機分割區並不建議使用此檔案系統。
</p>

<p>
<b>XFS</b> 是一個 metadata 日誌系統，並且擁有完整的功能及針對延展性最佳化。如果
您使用高速 SCSI 或是纖維的儲存裝置，並且有持續不斷的電源供應，我們才推薦您使用
XFS。 如果沒有，請使用其他檔案系統。因為 XFS 大量的將要轉送的資料快取在記憶體中
，設計不好的程式(的確有一些程式在寫入磁碟時不做一般的預防措施)可能當系統意外斷
電時損失大量的資料。
</p>

<p>
JFS 是 IBM 發展的高效能日誌系統。目前雖然已經可以算是個完成品，關於他的穩地度並
沒有太多的優點及缺點。
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>將檔案系統套用到分割區上</title>
<body>

<p>
要把檔案系統建立到一個分割區或是容量上可使用一些為個別檔案系統所設計的工具：
</p>

<table>
<tr>
  <th>檔案系統</th>
  <th>建立指令</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
以我們的範例來說，開機分割區（在我們的例子裡為 <path>/dev/sda1</path>）為 ext2 和
主分割區（在我們的例子為 <path>/dev/sda3</path>）為 ext3，您將要使用：
</p>

<pre caption="將檔案系統套用到分割區上">
# <i>mke2fs /dev/sda1</i>
# <i>mke2fs -j /dev/sda3</i>
</pre>

<p>
現在檔案系統已經建立到我們剛建立完成的分割區上了（或是logical 容量）。
</p>

</body>
</subsection>
<subsection>
<title>啟用 Swap 分割區</title>
<body>

<p>
<c>mkswap</c> 是用來起始 swap 分割區的指令：
</p>

<pre caption="建立 swap 簽名">
# <i>mkswap /dev/sda2</i>
</pre>

<p>
要啟用 swap，使用 <c>swapon</c> 指令：
</p>

<pre caption="啟動 swap">
# <i>swapon /dev/sda2</i>
</pre>

<p>
現在建立然後啟動 swap。
</p>

</body>
</subsection>
</section>
<section>
<title>掛載</title>
<body>

<p>
現在您的分割區已經起始和放置檔案系統了，接下來我們該把這些分割區掛載起來。使用
<c>mount</c> 的指令。不要忘了建立相關的掛載目錄，以我們的分割來說只掛載主分割區
和開機分割區：
</p>

<pre caption="掛載分割區">
# <i>mount /dev/sda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/sda1 /mnt/gentoo/boot</i>
</pre>

<note>
如果您要將 <path>/tmp</path> 放在不同的分割區，記得掛載後將它的權限更改為：
<c>chmod 1777 /mnt/gentoo/tmp</c>。這也適用於 <path>/var/tmp</path>。
</note>

<p>
我們將需要掛載 proc 檔案系統（一個核心的虛擬介面）並且把它放在 <path>/proc</path>
。但首先我們要先把檔案放到分割區上。
</p>

<p>
現在從 <uri link="?part=1&amp;chap=5">使用安裝檔安裝 Gentoo</uri> 繼續。
</p>

</body>
</section>
</sections>
