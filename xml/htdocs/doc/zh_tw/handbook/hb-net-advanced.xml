<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_tw/handbook/hb-net-advanced.xml,v 1.3 2006/01/24 14:03:05 ccpz Exp $ -->
<!-- rev 1.11 by ccpz -->
<sections>

<version>1.4</version>
<date>2005-12-22</date>

<section>
<title>進階設定</title>
<body>

<p>
<c>config_eth0</c> 變數是網路介面設定的核心。他是一個高階的網路介面(例子中是
<c>eth0</c>)設定列表。在列表中的每個指令依序執行。當最後一個指令成功後網路介面
就視為可以用了。
</p>

<p>
這是內建指令的列表。
</p>

<table>
<tr>
  <th>指令</th>
  <th>說明</th>
</tr>
<tr>
  <ti><c>null</c></ti>
  <ti>不做任何事</ti>
</tr>
<tr>
  <ti><c>noop</c></ti>
  <ti>
    如果網路介面啟動而且有一個位址，那就成功離開設定
  </ti>
</tr>
<tr>
  <ti>an IPv4 or IPv6 address</ti>
  <ti>為這個介面加上一個網路位址</ti>
</tr>
<tr>
  <ti>
    <c>dhcp</c>, <c>adsl</c> or <c>apipa</c> (或是第三方模組提供的自訂指令)
  </ti>
  <ti>
    執行這個指令的模組。例如說  "dhcp" 會執行 <c>dhcp</c> 模組，是 <c>dhcpcd</c>，<c>udhcpc</c>，
	<c>dhclient</c> 或 <c>pump</c> 其中一個。
  </ti>
</tr>
</table>

<p>
如果有一個失敗了，你可以指定 fallback 指令。fallback需要完全符合設定的結構。
</p>

<p>
你可以把這些指令連在一起。底下是一些實際的範例。
</p>

<pre caption="設定範例">
<comment># 加上三個 IPv4 位址</comment>
config_eth0=(
  "192.168.0.2/24"
  "192.168.0.3/24"
  "192.168.0.4/24"
)

<comment># 加上一個 IPv4 位址及兩個 IPv6 位址</comment>
config_eth0=(
  "192.168.0.2/24"
  "4321:0:1:2:3:4:567:89ab"
  "4321:0:1:2:3:4:567:89ac"
)

<comment># 使用核心指定的位址，如果網路介面停止的話改用 DHCP。
# DHCP 失敗的話由 APIPA 指定一個位址。</comment>
config_eth0=(
  "noop"
  "dhcp"
)
fallback_eth0=(
  "null"
  "apipa"
)
</pre>

<note>
當使用 <c>ifconfig</c> 模組並且加上超過一個位址，每個位址會建立一個別名。上面的
例子你會有 <c>eth0</c>，<c>eth0:1</c> 和 <c>eth0:2</c> 這幾個介面。你不能對多出
來的介面做任何事。因為核心和其他程式會把 <c>eth0:1</c> 和 <c>eth0:2</c> 當作
<c>eth0</c>。
</note>

<impo>
fallback 中的順序相當重要！如果你沒有在 <c>apipa</c> 之前指定 <c>null</c>，他只
有在 <c>noop</c> 指令失敗時才會做。
</impo>

<note>
<uri link="?part=4&amp;chap=3#apipa">APIPA</uri> 和
<uri link="?part=4&amp;chap=3#dhcp">DHCP</uri> 稍後會討論。
</note>

</body>
</section>
<section>
<title>網路相依性</title>
<body>

<p>
<path>/etc/init.d</path> 中的 可以依賴某個網路介面或是任一個(net)，<c>net</c>
可以在 <path>/etc/conf.d/rc</path> 中的 <c>RC_NET_STRICT_CHECKING</c> 變數定義
代表那些東西。
</p>

<table>
<tr>
  <th>值</th>
  <th>說明</th>
</tr>
<tr>
  <ti><c>none</c></ti>
  <ti><path>net</path> 服務總是被認為啟動了</ti>
</tr>
<tr>
  <ti><c>no</c></ti>
  <ti>
    這基本上代表除了 <path>net.lo</path> 以外，任一個 <path>net.*</path> 服務啟
	動才算。這個可以給同時有無線網路及有線網路的筆記型電腦使用者使用，因為某一
	時間只要其中之一介面啟動了，<path>net</path> 服務就被視為啟動。
  </ti>
</tr>
<tr>
  <ti><c>lo</c></ti>
  <ti>
    這和 <c>no</c> 相同，但是 <path>net.lo</path> 也被考慮在內。這對於不在意哪
	個介面啟動的使用者很有用。
  </ti>
</tr>
<tr>
  <ti><c>yes</c></ti>
  <ti>
    所有的網路介面啟動了 <path>net</path> 服務才算啟動。
  </ti>
</tr>
</table>

<p>
但是，<path>net.br0</path> 要依賴 <path>net.eth0</path> 還是
<path>net.eth1</path>？<path>net.eth1</path> 可能是一個無線網路或 ppp 裝置，需
要在橋接前先做設定。這不能由 <path>/etc/init.d/net.br0</path> 完成，因為他只是
一個到 <path>net.lo</path> 的符號連結。
</p>

<p>
解答是在 <path>/etc/conf.d/net</path> 做一個你自己的 <c>depend()</c> 函數。
</p>

<pre caption="/etc/conf.d/net 中 net.br0 相依關係">
<comment># 你可以使用任何在目前檔案的相依關係 (use, after, before)</comment>
depend_br0() {
  need net.eth0 net.eth1
}
</pre>

<p>
要取得更多關於相依性的討論。參考 <uri link="?part=2&amp;chap=4#doc_chap4">寫
Init Scripts</uri>。
</p>

</body>
</section>

<section id="variable_name">
<title>變數名稱及設定值</title>
<body>

<p>
變數名稱是動態的。他們的結構通常是 <c>variable_${interface|mac|essid|apmac}</c>
。例如說，<c>dhcpcd_eth0</c> 變數代表 eth0 的 dhcpcd 設定。而
<c>dhcpcd_essid</c> 則是任何介面連到這個 ESSID 時的 dhcpcd 設定。
</p>

<p>
然而，並沒有簡單的法則決定介面的名稱。實際上，許多無線網路介面除了 ethx 以外，
也會用像 wlanx，rax 之類的名稱。而且一些使用者定義的介面，像橋接，可以給 foo
之類的自訂名稱。為了讓生活更加有趣，無線網路結點可以在名稱中有非英文，數字的字
元 - 因為你要對每個 ESSID 設定參數，這一點相當重要。
</p>

<p>
Gentoo 在網路設定的缺點是使用 bash 變數 - 不能使用任何數字，英文字母以外的
東西。為了突破這個限制，我們把所有非數字，英文字母的字元轉成 <c>_</c> 字元。
</p>

<p>
另一個不方便的地方是變數的值 - 需要跳脫一些字元。這可以在需要跳脫的字元前加上
<c>\</c> 字元來完成。底下是需要像這樣跳脫的字元列表：<c>"</c>，<c>'</c> 和
<c>\</c>。
</p>

<p>
在範例中為了讓 ESSID 包含最多種的字元，我們使用這個 <c>My "\ NET</c> ESSID：
</p>

<pre caption="變數名稱範例">
<comment># 這可以運作，但是領域名稱是不合法的</comment>
dns_domain_My____NET="My \"\\ NET"

<comment># 上面的例子是當連到 ESSID 是 My "\ NET 的 AP 時，
#把領域名稱設成 My "\ NET </comment>
</pre>

</body>
</section>
</sections>
