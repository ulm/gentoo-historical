<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_tw/handbook/hb-install-mips-kernel.xml,v 1.12 2006/01/27 01:45:55 ccpz Exp $ -->

<!-- rev 1.19 by ccpz -->

<sections>

<version>1.15</version>
<date>2006-01-06</date>

<section>
<title>時區</title>
<body>

<p>
為了讓您的系統知道它的位置在那裡，您將需要設定您的系統時區。到
<path>/usr/share/zoneinfo</path> 尋找您的時區，然後把他複製到
<path>/etc/localtime</path>。請避免使用
<path>/usr/share/zoneinfo/Etc/GMT*</path> 下的檔案，因為他們並不代表你預期的時
區。例如說 <path>GMT-8</path> 實際上是 GMT+8。
</p>

<pre caption="設定時區為 GMT">
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>安裝核心原始碼</title>
<subsection>
<title>選擇一個核心</title>
<body>

<p>
Linux 的核心是所有版本的最中心，也是最重要的。他位於使用者程式和系統硬體之間。
Gentoo 提供使用者很多可用的核心原始碼。您可以到 <uri
link="/doc/tw/gentoo-kernel.xml">Gentoo 核心 指南</uri> 查看我們所提供的核心。
</p>

<p>
MIPS 系統的使用者可以選擇 <c>mips-sources</c> （適用於 MIPS 架構的預設核心
）和 <c>mips-prepatch-sources</c> （prerelease kernel tree）。
</p>

<p>
選擇適合您的核心原始檔然後使用 <c>emerge</c> 安裝。當然，請安裝您想要的的核心，
為了避免安裝 xorg-x11 或其他相依軟體，需要加上 <c>USE="-doc"</c>。第一次安裝時
不一定需要 <c>USE="symlink"</c>，但是確定你有正確建立
<path>/usr/src/linux</path> 符號連結。
</p>

<note>
Cobalt 伺服器需要特殊的 patch 才能讓核心在上面運作。為了取得並套用必要的 patch，
需要設定 <c>cobalt</c> USE 旗標。
</note>

<pre caption="安裝核心原始碼">
<comment>(適用 SGI 機器)</comment>
# <i>USE="-doc symlink" emerge mips-sources</i>
<comment>(適用 Cobalt 機器)</comment>
# <i>mkdir -p /etc/portage</i>
# <i>echo "sys-kernel/mips-sources cobalt" &gt;&gt; /etc/portage/package.use</i>
# <i>USE="-doc symlink" emerge mips-sources</i>
</pre>

<p>
當您查看 <path>/usr/src</path> 您將會看到一個 <path>linux</path> 的連接連到
您所選的核心，在我們的範例中，核心是 <c>mips-sources-2.4.24</c>，你的版本可能不
同，所以記得你用的版本。
</p>

<pre caption="觀看核心原始碼目錄連接">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt;linux-2.4.24
</pre>

<p>
現在我們該設定然後編譯您的核心原始碼了。
</p>

</body>
</subsection>
</section>
<section>
<title>編譯核心 &amp; 安裝</title>
<subsection>
<title>介紹</title>
<body>

<p>
以前我們使用手動設定來設定核心。不過現在我們上傳許多的設定範例，嚷你可以根據這
些來設定。只要按下和你的機器及核心版本最類似的連結。你也可以在底下的網址看到其他
的設定範例。
</p>

<table>
  <tr>
    <th>系統</th>
    <th>核心版本</th>
  </tr>
  <tr>
    <ti>SGI IP22 (Indy, Indigo 2, Challenge S)</ti>
    <ti>
      <uri link="http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config/2.4.29-mipscvs-20050130.gz">2.4.29</uri>
    </ti>
  </tr>
  <tr>
    <ti>Cobalt Qube/Raq 2800</ti>
	<ti>
	  <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-2605.config">2.6.5</uri>
	  <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-2606.config">2.6.6</uri>
	  <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-config-2609">2.6.9</uri>
	</ti>
  </tr>
</table>

<ul>
  <li>
    IP22 (Indy, Indigo2, Challenge S) 設定：
    <uri link="http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config">
    http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config
    </uri>
  </li>
  <li>
    Cobalt 伺服器設定：
	<uri link="http://dev.gentoo.org/~kumba/mips">
	 http://dev.gentoo.org/~kumba/mips
	</uri>
  </li>
</ul>

<note>
在 Gentoo/MIPS 硬體支援資料庫，位於 <uri>http://stuartl.longlandclan.hpto.org/gentoo/mips</uri>，可以找到更多核心設定範例。
</note>

<p>
一旦你找到合適的設定後，把它下載到核心原始碼的目錄，然後更名成
<path>.config</path>。然後，你可以執行 <c>make oldconfig</c> 更新全部東西，並且
讓你可以在編譯前自訂設定。
</p>

<pre caption="設定核心">
# <i>cd /usr/src/linux</i>
# <i>cp /path/to/example-config .config</i>
# <i>make oldconfig</i>
<comment>(只要在每個提示按下 ENTER 接受預設值就好，之後再自訂設定)</comment>
# <i>make menuconfig</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>編譯和安裝</title>
<body>

<p>
現在您的核心已經設定完成了，我們該來編譯然後安裝它。離開核心設定，然後開始編譯程序：
</p>

<pre caption="編譯核心">
<comment>（核心 2.4）</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>（其他核心 2.6）</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
當核心完成編譯時，將核心映像檔複製到 <path>/boot</path>。
</p>

<note>
在 Cobalr 伺服器上，bootloader 會預期有個壓縮過的核心影像，請記得在把檔案複製到
<path>/boot</path> 之後，要 <c>gzip -9</c> 該檔案。記得把
<path>&lt;kernel-version&gt;</path> 取代成你用的核心名稱及版本。
</note>

<pre caption="安裝核心">
# <i>cp vmlinux /boot/&lt;kernel-version&lt;</i>
<comment>(Cobalt 伺服器--壓縮核心影像)</comment>
# <i>gzip -9v /boot/&lt;kernel-version&lt;</i>
</pre>

<!--
Moot point, now that we use arcboot on SGI, and CoLo on Cobalts
<p>
如果您的系統無法開啟 ELF 核心，將核心編譯成 <c>make 
vmlinux.ecoff</c> 而不是 <c>make vmlinux</c> 編譯核心。核心的映像檔將會被儲存在
<path>arch/mips/boot/vmlinux.ecoff</path> 而不是 <path>vmlinux</path>。
</p>
-->


</body>
</subsection>
</section>
<section id="kernel_modules">
<title>安裝分開的核心映像檔和模組</title>
<subsection>
<title>設定模組</title>
<body>

<p>
你需要在底下相對的檔案中加上開機時自動載入的模組。如果需要的話也可以加入模組的
額外選項。
</p>
  	 
<ul>
  <li><path>/etc/modules.autoload.d/kernel-2.4</path> - 只用在 Kernel 2.4</li>
  <li><path>/etc/modules.autoload.d/kernel-2.6</path> - 只用在 Kernel 2.6</li>
  <li><path>/etc/modules.autoload</path> - 所有核心</li>
</ul>
  	 
<p>
因此，如果你想要載入一個模組 -- 2.4 和 2.6 都要用，就把它放到
<path>/etc/modules.autoload</path>。不然就放到相對應的檔案中。
</p>

<p>
要查看所有可用的模組，執行 <c>find</c> 指令。不要忘了將 "&lt;kernel
version&gt;"更改為您剛剛編譯的版本：
</p>

<pre caption="查看所有可用的版本">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
舉例來說，要自動載入 <c>3c59x.o</c> 模組，編輯相對應的檔案，放入模組的名稱：
</p>

<pre caption="編輯 /etc/modules.autoload.d/kernel-2.4">
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 或是 kernel-2.6">
3c59x
</pre>

<p>
這也可以一行就完成：
</p>
  	 
<pre caption="新增模組 -- 一行完成">
# <i>echo '3c59x' >> /etc/modules.autoload.d/kernel-2.4</i>
<comment>(或是 kernel-2.6，或 /etc/modules.autoload...)</comment>
</pre>
  	 
<p>
現在請從 <uri link="?part=1&amp;chap=8">設定您的系統</uri> 繼續安裝。
</p>

</body>
</subsection>
</section>
</sections>
