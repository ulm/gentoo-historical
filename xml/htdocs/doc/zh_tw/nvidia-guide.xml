<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/zh_tw/nvidia-guide.xml,v 1.10 2006/02/23 03:36:48 ccpz Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- rev 1.24 by ccpz -->
<guide link="nvidia-guide.xml" lang="zh_tw">
<title>Gentoo Linux nVidia 指南</title>

<author title="Author">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="curtis119@gentoo.org">M Curtis Napier</mail>
</author>
<author title="Editor">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Translator">
  <mail link="palatis@gentoo.tw">Victor Tseng</mail>
</author>
<author title="Translator">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Translator">
  <mail link="frid@gentoo.tw">Frid Hou</mail>
</author>
<author title="Translator">
  <mail link="ccpz@gentoo.org">YiDa Chiang</mail>
</author>

<abstract>
許多 Gentoo 玩家的電腦裡面都有 nVidia 晶片，nVidia 也有提供加強您顯示卡效能的
Linux 專用驅動程式。這篇指南教您如何安裝以及設定這些驅動程式。
</abstract>
<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.20</version>
<date>2006-02-17</date>

<chapter>
<title>簡介</title>
<section>
<body>
  	 
<p>
nVidia 自己發表了他們的 Linux 驅動程式，提供很好的效能及 3D 加速。驅動程式分成
兩部份：<c>nvidia-kernel</c> 及 <c>nvidia-glx</c>。
</p>
  	 
<p>
<c>nvidia-kernel</c> 是處理與顯示卡間低階通訊的核心驅動程式。他只是一個叫作
<c>nvidia</c> 的核心模組，他安裝時依賴你的核心，並且在你用 nvidia 驅動程式時要
載入他。
</p>
  	 
<p>
核心驅動程式以外，你也需要安裝 X11 GLX 層的程式 (<c>nvidia-glx</c>)。這是讓 X
繪製圖形用的，他內部用 <c>nvidia-kernel</c> 核心驅動程式和硬體溝通。
</p>
  	 
</body>
</section>
</chapter>

<chapter>
<title>設定您的顯示卡</title>
<section>
<title>核心設定</title>
<body>

<p>
如同上面提到的，nVidia 核心驅動程式依賴你的核心進行安裝。他編譯成模組，所以你的
核心要支援模組載入。如果你使用 <c>genkernel</c> 設定核心，那一切都沒問題。如果
沒有的話，再三確認核心有支援這個功能：
</p>

<pre caption="啟動模組載入支援">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
你也需要啟動核心中的 <e>Memory Type Range Register</e>：
</p>
	   	 
<pre caption="啟動 MTRR">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>
							   	 
<p>
nVidia 的模組以及函式庫分別放在兩個套件中：<c>nvidia-glx</c> 及 <c>nvidia-ke
rnel</c>。前者為 X11 GLX 函式庫，而後者為核心模組。您兩個都需要，所以應該
趁現在安裝他們。
</p>
  	 
<p>
nvidia-kernel ebuild 會依據 <path>/usr/src/linux</path> 符號連結決定核心的版本
。請確定這個符號連結有指向你使用的核心，並且已經正確設定好了。請參閱 <uri
link="handbook/">安裝手冊</uri> 取得設定核心的詳細資訊。
</p>
  	 
<p>
如果你使用 gentoo-sources-2.6.11-r6，你的 <path>/usr/src</path> 目錄看起來像這樣：
</p>
  	 
<pre caption="檢查 /usr/src/linux 符號連結">
# <i>cd /usr/src</i>
# <i>ls -l</i>
<comment>(確認 linux 指向正確的目錄)</comment>
lrwxrwxrwx   1 root root   22 Apr 23 18:33 linux -&gt; linux-2.6.11-gentoo-r6
drwxr-xr-x   4 root root  120 Apr  8 18:56 linux-2.4.26-gentoo-r4
drwxr-xr-x  18 root root  664 Dec 31 16:09 linux-2.6.10
drwxr-xr-x  18 root root  632 Mar  3 12:27 linux-2.6.11
drwxr-xr-x  19 root root 4096 Mar 16 22:00 linux-2.6.11-gentoo-r6
</pre>
  	 
<p>
在上面的輸出中，你會看到 <c>linux</c> 符號連結指向 <c>linux-2.6.11-gentoo-r6</c>
核心。
</p>
  	 
<p>
如果符號連結沒有指向正確的核心，你需要像這樣更新連結：
</p>
  	 
<pre caption="建立/更新 /usr/src/linux 符號連結">
# <i>cd /usr/src</i>
# <i>ln -snf linux-2.6.11-gentoo-r6 linux</i>
</pre>

</body>
</section>

<section>
<title>非必要：確認對舊型顯示卡的支援</title>
<body>
  	 
<note>
不幸的是，有一些舊型顯示卡不被新版的 <c>nvidia-glx</c> and <c>nvidia-kernel</c>
支援。nVidia 提供 <uri
link="http://www.nvidia.com/object/IO_18897.html">支援顯示卡列表</uri>。請在安
裝前檢查這張表。
</note>
  	 
<p>
底下是<b>不支援</b>的舊型顯示卡。
</p>
  	 
<pre caption="Unsupported cards">
TNT2
TNT2 Pro
TNT2 Ultra
TNT2 Model 64 (M64)
TNT2 Model 64 (M64) Pro
Vanta
Vanta LT
GeForce 256
GeForce DDR
GeForce2 GTS
GeForce2 Pro
GeForce2 Ti
GeForce2 Ultra
GeForce2 MX Integrated graphics
Quadro
Quadro2 Pro
Quadro2 EX
</pre>
  	 
<p>
如果你是用上面任何一張，你需要封鎖新版的 nVidia 驅動程式，然後安裝舊的版本：
</p>
  	 
<pre caption="鎖新版的 nVidia 驅動程式">
# <i>echo "&gt;media-video/nvidia-kernel-1.0.6629-r4" &gt;&gt; /etc/portage/package.mask</i>
# <i>echo "&gt;media-video/nvidia-glx-1.0.6629-r7" &gt;&gt; /etc/portage/package.mask</i>
</pre>
  	 
</body>
</section>

<section>
<title>安裝合適的驅動程式</title>
<body>
<p>
因為 <c>nvidia-glx</c> 依賴 <c>nvidia-kernel</c>，安裝
<c>nvidia-glx</c> 就足夠了。
</p>

<pre caption="安裝 nVidia 驅動程式">
# <i>emerge nvidia-glx</i>
</pre>

<impo>
當你每次 <uri link="kernel-upgrade.xml">編譯新核心</uri> 或重新編譯目前的，你需
要執行 <c>emerge nvidia-kernel</c> 重新安裝 nVidia 模組。<c>nvidia-glx</c> 並不會受到
核心改變的影響，也不用在重新編譯/升級 X 時重新編譯。
</impo>

<p>
當安裝程式結束以後，請執行 <c>modprobe nvidia</c> 以將核心模組載入記憶體。
</p>

<pre caption="載入核心模組">
# <i>modprobe nvidia</i>
</pre>

<p>
為了避免在每次開機都要載入模組，您大概想在每次開機的時候都自動將此模組載入，所
以請編輯 <path>/etc/modules.autoload.d/kernel-2.6</path> (或
<path>kernel-2.4</path>，依你的核心版本決定)，並在裡面加上 <c>nvidia</c>。別忘
了在儲存退出以後執行 <c>modules-update</c>！
</p>

<pre caption="執行 modules-update">
# <i>modules-update</i>
</pre>

</body>
</section>
<section>
<title>設定 X Server</title>
<body>

<p>
當安裝了適當的驅動程式以後，您必須設定 X Server (XFree86 或 Xorg)，讓它使用
<c>nvidia</c> 驅動程式，而不是預設的 <c>nv</c> 驅動程式。
</p>

<p>
使用您喜愛的文字編輯器 (例如 <c>nano</c> 或 <c>vim</c>) 開啟 <path>/etc/X11/xorg.conf</path>
(或是你仍使用舊的設定檔，用 <path>/etc/X11/XF86Config</path>)，接著來到
<c>Device</c> 小節。在此小節中，更改有關 <c>Driver</c> 那行：
</p>

<pre caption="在 X Server 設定檔中將 nv 改成 nvidia">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
然後到 <c>Module</c> 小節然後確定載入 <c>glx</c> 模組以及 <c>dri</c> 沒有載入：
</p>
  	 
<pre caption="更新 Module 小節">
Section "Module"
<comment>(...)</comment>
<i># Load  "dri"
Load  "glx"</i>
<comment>(...)</comment>
EndSection
</pre>
  	 
<p>
接著，在 <c>Screen</c> 小節中，確定 <c>DefaultDepth</c> 設定成 16 或 24。沒有的
話， nvidia-glx 不會啟動。
</p>
  	 
<pre caption="更新 Screen 小節">
Section "Screen"
<comment>(...)</comment>
<i>DefaultDepth 16</i>
Subsection "Display"
<comment>(...)</comment>
EndSection
</pre>
  	 
<p>
執行 <c>opengl-update</c> 讓 X Server 使用 nVidia GLX 函式庫。
</p>

<pre caption="執行 opengl-update">
# <i>opengl-update nvidia</i>
</pre>

</body>
</section>
<section>
<title>新增您的使用者到Video群組中</title>
<body>

<p>
您必需增加使用者到<c>Vedio</c>群組中，這樣它才有權限存取nvidia裝置檔：
</p>

<pre caption="增加使用者到Vedio群組中">
   # <i>gpasswd -a youruser video</i>
</pre>

<p>
如果您不使用<c>udev</c>這動作也許不是全不都要做，但是這並不會影響和
使您的系統變爛:p
</p>

</body>
</section>
<section>
<title>測試您的顯示卡</title>
<body>

<p>
要測試您的 nVidia 顯示卡，啟動 X 然後執行 <c>glxinfo | grep direct</c> 指令，它應該告訴您直接貼圖已經啟動：
</p>

<pre caption="檢查直接貼圖狀態">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
要測試您的 FPS，請執行 <c>glxgears</c>。
</p>

</body>
</section>
<section>
<title>啟動 nvidia 支援</title>
<body>
  	 
<p>
一些工具，像是 <c>mplayer</c> 及 <c>xine-lib</c>，使用他們自己的 USE 設定，
"nvidia" 啟動 XvMCNVIDIA 的支援，在觀看高解析度電影時很有用。在
<path>/etc/make.conf</path> USE 變數中加入 "nvidia" 或在
<path>/etc/portage/package.use</path> 中的 <c>media-video/mplayer</c> 及
<c>media-libs/xine-lib</c> 加入。
</p>
  	 
<p>
然後，執行 <c>emerge -uD --newuse world</c> 重新編譯會受到這改變影響的程式。
</p>
  	 
</body>
</section>

<section>
<title>使用 NVidia 設定工具</title>
<body>
  	 
<p>
在 NVidia 發表 1.0.6106 板後他也提供一個設定工具。這工具讓你可以改變顯示卡設定
，而不需要重新啟動 X 伺服器。這可以透過 Portage 中的
<c>media-video/nvidia-settings</c> 安裝。
</p>
  	 
</body>
</section>
</chapter>

<chapter>
<title>解決問題</title>
<section>
<title>在有 4Gb 以上記憶體的電腦讓 2D 工作</title>
<body>
  	 
<p>
如果你在 nVidia 2D 加速上遇到困難，可能是你不能啟動 MTRR 的 write-combining
range。要確認的話，檢查 <path>/proc/mtrr</path> 的內容：
</p>
  	 
<pre caption="檢查是否啟動 write-combining">
# <i>cat /proc/mtrr</i>
</pre>
  	 
<p>
每一行都應該包含 "write-back" 或 "write-combining"。如果你看到有一行有
"uncachable" 你需要改變 BIOS 設定來修正。
</p>
  	 
<p>
重開機然後進入 BIOS，找到 MTRR 設定(通常在 "CPU Settings" 中)。把他的設定從
"continuous" 改成 "discrete"，然後開機回到 Linux。你會發現不再有
"uncachable" 而且 2D 加速可以正常工作。
</p>
  	 
</body>
</section>
<section>
<title>我碰到關於不支援 4K 堆疊大小的錯誤</title>
<body>
  	 
<p>
版本1.0.6106 之前的 <c>nvidia-kernel</c> 只支援 8K 堆疊大小。比較新的核心 (2.6.6 
及更新的) 已經支援 4K 堆疊大小。在核心設定中不要選擇 4K 堆疊大小。你可以在
<c>Kernel Hacking</c> 區域中找到這項設定。

</p>
  	 
</body>
</section>
<section>
<title>
當我要載入模組時他顯示 "no such device"
</title>
<body>
  	 
<p>
這通常是因為沒有符合的顯示卡。確定你有 nVidia 的顯示卡 (你可以用
<c>lspci</c> 再三確認)。
</p>
  	 
<p>
如果你確定你有 nVidia 的顯示卡，檢查 BIOS 看 <e>Assign IRQ to VGA</e> 有沒有設
定。
</p>
  	 
</body>
</section>
<section>
<title>
我收到 "no screens found" 而 log 記錄 "Failed to initialize the NVIDIA kernel
module!"
</title>
<body>
  	 
<p>
可能是因為你沒有 <path>/dev/nvidia*</path> 裝置檔。使用 <c>NVmakedevices.sh</c>
建立。
</p>
  	 
<pre caption="建立 nvidia 裝置結點">
# <i>/sbin/NVmakedevices.sh</i>
</pre>
  	 
</body>
</section>
</chapter>

<chapter>
<title>進階設定</title>
<section>
<title>文件</title>
<body>
  	 
<p>
nVidia 驅動程式套件也包含廣泛的文件。這安裝到 <c>/usr/share/doc</c> 目錄中，你
可以用底下的指令瀏覽：
</p>
  	 
<pre caption="瀏覽 NVIDIA 文件">
# <i>less /usr/share/doc/nvidia-glx-*/README.txt.gz</i>
</pre>
  	 
</body>
</section>
<section>
<title>核心模組參數</title>
<body>
  	 
<p>
<c>nvidia</c> 核心模組接受許多的參數(選項)，讓你調整驅動程式的行為。編輯
<c>/etc/modules.d/nvidia</c> 加入或改變這些參數。記得在修改後執行
<c>modules-update</c>。另外要記在心上的是要重新載入 <c>nvidia</c> 新的設定才會
生效。
</p>

<pre caption="調整 nvidia 參數">
<comment>(用你習慣的編輯器編輯 /etc/modules.d/nvidia)</comment>
# <i>nano -w /etc/modules.d/nvidia</i>
<comment>(更新模組資訊)</comment>
# <i>modules-update</i>
<comment>(卸載 nvidia 模組...)</comment>
# <i>modprobe -r nvidia</i>
<comment>(...然後再載入他)</comment>
# <i>modprobe nvidia</i>
</pre>

</body>
</section>
<section>
<title>進階 X 設定</title>
<body>
  	 
<p>
GLX 層也有眾多的選項可以設定。這些設定控制 TV 輸出，多顯示器，顯示器頻率偵測等
等。同樣的，所有的選項在文件中有清楚的說明。
</p>
  	 
<p>
如果你想要設定某些選項，你需要在 X 設定檔(通常是 <c>/etc/X11/xorg.conf</c>)中相
對應的裝置區域加入。例如說，我想要關閉起始商標畫面：
</p>
  	 
<pre caption="X 設定檔中的進階 nvidia 設定">
Section "Device"
 Identifier "nVidia Inc. GeForce2"
 Driver     "nvidia"
 <i>Option     "NoLogo" "true"</i>
 VideoRam   65536
EndSection
</pre>
  	 
</body>
</section>
</chapter>
</guide>
