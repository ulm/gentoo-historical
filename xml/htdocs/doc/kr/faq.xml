<?xml version='1.0' encoding='euc-kr'?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide>
<title>젠투 리눅스 FAQ</title>
<author title="Chief Architect"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title="역자"><mail link="navilera@gentoo.or.kr">이만우</mail></author>
<author tilte="Moderaotor"><mail link="seo@gentoo.or.kr">Jungmin Seo</mail></author>

<abstract>이 FAQ는 IRC와 gentoo-dev 메일링 리스트에서 수집한 자주 거론되는 질문과 답변을 모은것입니다.
만약 여러분께서 몇가지의 질문과 답변을 추가하고 싶으면 저자와 컨택해보세요.</abstract>

<version>1.0.8</version>
<date>18 March 2002</date>

<chapter>
	<title>Getting Started</title>

	<section>
		<title>"Gentoo"를 어떻게 읽고, 무슨뜻인가요?</title>
		<body><p>Gentoo는 작고빠른 팽귄의 한 종류입니다. 그리고 “젠투(jen-two)"라고 발음하면 됩니다</p></body>
	</section>

	<section>
		<title>젠투는 뭐가 다른가요?</title>
		<body>
			<p>젠투리눅스는 깔끔하고 유연한 디자인의 빠르고, 현대적인 배포판입니다.
			 -- 젠투는
			<uri link="http://www.slackware.com/">슬렉웨어</uri>,
			<uri link="http://www.linuxfromscratch.org">LFS(Linux From Scratch)</uri> 나
            		<uri link="http://www.bsd.org">BSD</uri> 사용자들에게 매력적인 시스템입니다. 
			대부분의 리눅스 배포판과는 닮은점이 별로 없는 젠투의 패키지 시스템은 BSD의 포트(ports)시스템의 철학을 따랐습니다. 패키지들은 언제나 항상 최신의 버전으로 유지됩니다.
        </p></body> 	</section> </chapter>

<chapter>
	<title>Installation</title>

	<section>
		<title>.iso파일하고 .tbz2파일하고는 뭐가 다른가요?</title>
		<body><p><e>.tbz2</e>파일은 젠투리눅스의 부트스트랩과 인스톨을 하기 위한 필요한 파일들의 가장 작은 묶음입니다. 
		<e>.iso</e>로 빌드된것은 커널과 커널 모듈이 포함된 완전히 부팅가능한 이미지로 되어 있고,  <c>mkfs</c>와 
		네트웍 지원툴 뿐만 아니라,<e>.tbz2</e>와 같은 작은 시스템 트르볼등의 필수 유틸들도 포함하고 있습니다.
		대부분의 유저들은 젠투리눅스를 .iso파일을 시디로 구워서 인스톨 할것이고, 최소한의 환경구성을 위해 젠투의
		부트시디를 사용할것입니다.
		그러나 이방식은 젠투리눅스를 미리 완성시켜놓은 배포판으로 직접 설치하려는 유저분들에게 적합합니다.	
		어떤 사용자 분들은 오로지 .tbz2파일을 받아서 설치하시기를 원합니다. 젠투리눅스의 설치는 어디까지나 자기 하고싶은대로 입니다.</p>
        </body>
	</section>

	<section>
		<title>왜 .iso파일과 .tbz2파일들은 서로 다른 -r(revision) 번호를 가지고 있나요? </title>
		<body><p>
		.tbz2 최소시스템 타르볼은 오직 젠투리눅스의 핵심부분이 변화 되었을때만 개정됩니다.
		(baselayout이나 새로운 프로필등이 추가되었을때) 그래서 .tbz2파일이 업데이트되는건
		 비교적 드문 일입니다. .iso파일은 누군가가 어떤 하드웨어에서 부팅이 안돼는 현상을 발견하거나
		 새로운 커널모듈이 나오거나 끊임없는 패치가 만들어질때
		 업데이트 됩니다. 이와 같은 일 때문에 아마 .iso파일은 안정적으로 존재하는 시간이 그리 많치않습니다. 	
		</p>
	</body>
	</section>

<!--  Commenting out since this is really out of date now
	<section>
		<title>How do I install with no ISO image?</title>
		<body><p>We are working out a solution for 1.0_rc6+ systems as we speak.  Stay tuned and visit the <uri
link="/doc/build.html">Download/Install page</uri> for updates.</p> 
	</body>
	</section>
-->
	

	<section>
		<title>저는 소니 수퍼슬림 바이오 랩탑컴 퓨터를 가지고 있습니다. 그런데 젠투 리눅스 시디의 PCMCIA ATAPI CD-ROM 검 색기가 문제를 가지고 있는 것 같습니다. </title>
		<body>
		<p> 세턴더리 IDE포트의 CDROM 세팅을 확인하 시면 됩니다. ( 이게 세팅되어 있지 않다면, 부팅할때, CDROM이 인식되지 않습 니다. ) 그리고 다음의 isolinux <c>boot:</c> 프롬프트에서</p>
<pre>
boot: <i>rescue ide2=0x180,0x386</i>
</pre>
<p>만약에 1.0rc5나 그 이전의 시디를 사용한 다면, <c>rescue</c>대신<c>gentoo</c>라고 써넣습니다.</p>
</body>
</section>
	<section>
		<title>저는 "-O9 -ffast-math - fomit-frame-pointer"를 사용해서 최적화 할때 정말로 불안해지는 것을 찾았습니다. 어떻게 해야 하나요?</title>
		<body>
		<p>최적화를 수행할때는 여러분은 정말로 패키지가 망가지는 위험함을 감수해야 합니다. 이같이 매우 공격적인(?) 최적화는 때로 컴파일러의 어셈블리 코드를 간결화 하는 과정에 기인하는데, 이같은 점이 완전히 똑같은 작업(역자주: 애 시당초 개발자가 의도한 코드의 작동목적을 말하는 듯 함)을 더 이상 보장하 지 않기 때문입니다. (IRC의)럭독님(<e>Loc-Dog</e>)은 <c>-O3 -mcpu=1686 -march=i686 -fforce-addr -fomit-frame- pointer -funroll-loops -frerun-cse-after-loop -frerun-loop-opt -malign- functions=4</c> 옵션으로 최적화를 하는데, 이것이 제가 생각하는 가장 적당한 최적화 세팅 이라고 봅니 다. 이 옵션을 넘어설 경우, 이는 울트라-하이(ultra-high)최적화를 사용하게 되는데, 오로지 특정한 패키지에 대해서만 적용됩니다. 여러분이 정말로..진정 으로 여분의 2%의 성능향상이 필요하다면 사용하십시오. 
</p>
		</body>
	</section>

	<section>
		<title>인스톨 이후에 기본 루트 비밀번호 는 뭔가요? </title>
		<body><p> 공백입니다. 엔터 치세요.</p></body>
	</section>

	<section>
		<title>왜 su 명령으로 루트로 변경하지 못하나요?  </title>
		<body><p> 보안상의 이유때문입니다., <c>su</c> 명령으로 루
트 권한을 얻을 수 있는 유저는 오로지 <e>wheel</e>그룹 안의 유저들뿐입니다. su명
령을 사용할 <i>유저이름을</i> <e>wheel</e>그룹안에 추가하십시오, 아래와 같은 커맨드를 사용 하시면 됩니다. </p>
		<pre># <i>usermod -G users,wheel username</i></pre>
</body>
	</section>
	<section>
		<title>어떻게 devfs를 활성화 시키나요?</title>
		<body>
<p>
만약 여러분이 1.0_rc5나 그보다 높은 버전을 사용할 경우 여러분은 따로 특별한 일을 할 필요가 없습니다.
이미 활성화 되어 있습니다. ( 여러분은 devfs가 커널에 포함되었는지 미리 확인 하셔야 합니다. 확인하셨
나요?)
그러나 여러분이 1.0_rc5버전보다<e>아래</e> 버전을 사용하실 경우 여러분은 <c>devfs=mount</c>와 같은 명령
을 <c>GRUB</c> 의 커널부트 옵션에 넣어주셔야 합니다. <c>/boot/boot/bzImage devfs=mount foo=bar</c> 이렇게 말이
죠. 그럼 커널은 <path>/dev</path><e>devfs</e>파일 시스템을 부팅할 때 자동으로 마운트 해줍니다.

</p>
	</body>
	</section>
	<section>
		<title>그럼 어떻게 devfs를 비활성화 시키나요? </title>
		<body>
<p>
		젠투리눅스 1.0_rc6 이나 그 이상일 경우 여러분은 <c>gentoo=nodevfs</c>를 커널에 넘겨줌으로써 비활성화 시킬
		수 있습니다.
		
</p>
		</body>
	</section>
	<section>
		<title>
		어떻게 <path>/dev/mouse</path>를 이용하나요? /dev/mouse가 리부팅하면 더 이상 진행되지 않습니다.(devfs를 사용하
		고 있습니다.) 
		</title>
		<body>
		<p>
		만약 여러분이 1.0_rc6이나 그 이상버전을 이용할 경우 여러분은 ln -s를 이용해서 <path>/dev/mouse</path>의 심볼릭
		링크를 만들고, 이것은 리부팅할 때 보존됩니다. 모든 다른 사용자들은 <path>/etc/devfsd.conf</path> 파일에 다음과 같은
		 두줄을 첨가하시기 바랍니다.
		</p> 		 
		
<pre>
REGISTER        ^misc/psaux$    CFUNCTION GLOBAL symlink misc/psaux mouse
UNREGISTER      ^misc/psaux$    CFUNCTION GLOBAL unlink mouse
</pre>
<p>
만약 여러분이 devfs PS/2 마우스 <path>/dev/misc/psaux</path> 디바이스를 사용하지 않는다면, <c>misc/psaux</c> 문자열을
위처럼 넣어주면 됩니다. 그리고 나서 <c>killall -HUP devfsd</c> 명령으로 devfsd가 <path>/etc/devfsd.conf</path>파일을 다시
 읽도록 하면 됩니다. 
</p>
		</body>
	</section>
	<section>
		<title>Grub이 스테이지x.y를 찾지 못하나요?</title>
		<body><p>
		 grub 부트 파일이 <path>/boot/grub</path>에서 복사되면서 설치되는 동안 (젠투 1.0_rc5 나 이전버전에서는
		 <path>/boot/boot/grub</path> 에 서 복사 됩니다. ) 그럽은 자동으로 부트파티션의 <path>/boot/grub</path> 디렉토리를 주시하고 있
		 습니다. (우리는 <path>/boot</path>에 마운트되어 분리된 자동화되지않은 부트파티션을 유지하라고 강력하게 권고해왔습니다
		 . 왜냐면 이방법을 쓰면 커널이나 부트 정보가 사고에 의해 뻑나는걸 더욱 어렵게 합니다.(역자주: 즉 더
		 안전하단 말이죠.) ) 위와 같은 에러는 일반적으로 (a) 부트파티션을 분리하지 않았거나 (b) <path>/boot</path>를 부트파티
		 션으로 마운트 하는걸 스냅샷을 빌드하거나 <c>emerge --usepkg</c> 시스템을 실행하기 전에 잃어 버리거나 (c) Reis
		 erFS <path>/boot</path>파티션을 마운트 할때 <c>notail</c>옵션을 주지 않았을때 발생한다. 여러분은 그럽에 대한 보다 자세
		 한 정보를 grub프롬프트에서 도움말로 얻을 수 있거나 아니면 <uri link="http://www-105.ibm.com/developerworks/education.nsf/linux-onlinecourse-bytitle/0F1731DC664023B7862569D0005C44AF?OpenDocument">IBM developerWorks Grub tutorial</uri>.
에서 얻
		 어 볼 수 있습니다.
		 
	</p>
                </body>
	</section>
</chapter>

<chapter>
	<title>Package Management</title>
	<section>
		<title>패키지의 저장형식은 어떤형식인가요?</title>
		<body><p>우리의 portage트리의  <e>ebuild</e> 에 자동빌드 스크립트가 있습니다.;
		우리는 근본적으로 ports시스템을 기반으로 하는 배포본에 우리가 제공하는 스크립트(<c>.ebuild</c> 파일들)
		와 특별한 시스템(Portage)을 구현했습니다. 그래서 여러분은 응용프로그램을 소스로 부터 빌드 할 수 있습니다.
		우리는 바이너리를 오로지 릴리즈와 스냅샷을 위해서만 빌드 합니다.
		<uri link="/doc/en/gentoo-howto.html">Development HOWTO</uri>에서 ebuild스크립트의 자세한 내용을 볼 수 있습니다. 
		풀 바이너리 ISO 릴리즈(Full binary ISO release)에 우리는 모든 바이너리 패키지를 빌드해서 <c>.tbz2</c>
		포멧으로 넣어 놨습니다.
		(<c>.tar.bz2</c> 은 적합한 메타 정보가 파일의 끝에 들어가 있습니다.)</p>
	
		</body>
	</section>

	<section>
		<title>왜 BSD의 버전시스탬 대신 새로운 포트시스템(Portage)를 사용하나요? </title>
		<body>

<p>
우선은 포테지는 여러면에서 보다 좋아졌습니다. 첫째는 <c>.ebuild</c> 문법의 디자인 철학은 수동으로 프로그램을
설치할 때 여러분이 어떻게 하는지를 분석해 놓은것입니다. 따라서 포테지를 만드는 것은 매우 쉽게 배울수
 있고 여러분의 필요에 따라 쉽게 고칠수도 있습니다. 우리는 또한 OpenBSD스타일의 “fake" 설치로, 안
 전하게 해체하고, 시스템설정, 패키지만들기, 시스템의존성등등 많은 부분을 해결하였고, 외에도 많은 장점들
 이 있습니다.
 
</p>

		</body>
	</section>

	<section>
		<title>이것은 그럼 데비안의 apt나 BSD의 포트와는 어떻게 다른가요? </title>
		<body><p>
		포테지의 외형은 apt와 port의 좋은점을 따왔습니다. 예를 들면 옵션을 사용하는것, 완전한 의존성 검사 시스
		템, 안전한 설치와 지우기, 그리고 실제 패키지 데이터베이스 같은것들이지요. 포테지는 두 세계에서 가장
		좋은것이라고 생각합니다. 바로 port시스템의 세밀함과 안전한 리눅스 패키지 관리 시스템의 두 세계에서
		말이죠. 
		</p></body>
	</section>

	<section>
	        <title>젠투 리눅스의 인스톨/언인스톨은 어떻게 하나요? </title>
	        <body>
	                <p>
			<uri link="/doc/kr/portage-user.xml">Portage User Guide</uri>에 자세한 설명이 있습니다. 
			</p>
	        </body>
	</section>

	<section>
		<title>컴파일 되는 패키지의 전역 환경 설정을 어떻게 해야 하나요?</title>
		<body><p>
		<path>/etc/make.conf</path>파일의 설정들을 수정하면 기본적인 옵션이 패키지를 컴파일 하거나 합칠때 이용됩니다. 			대부분의 공통적인 옵션은 아래와 같습니다. 
		</p>
		
		<table>
		<tr>
			<th>Flag</th>
			<th>Description</th>
		</tr>
		<tr>
			<ti>CHOST</ti>
			<ti><c>i686-pc-linux-gnu</c>와 같은 이름을 사용합니다.</ti>
		</tr>
		<tr>
			<ti>CFLAGS</ti>
			<ti>C(*.c 파일)로 씌여진 파일들을 <c>gcc</c>로 컴파일할때 주는 옵션입니다. </ti>
		</tr>
		<tr>
			<ti>CXXFLAGS</ti>
			<ti>C++로 씌여진 파일들을  <c>gcc</c>로 컴파일 할때 주는 옵션입니다. </ti>
		</tr>
		<tr>
			<ti>USE</ti>
			<ti>
			이것은 여러분이 컴파일할 때 원하는 옵션을 넣어주는 부분입니다. 예를들면 USE 아래에
			<c>gnome</c>을 넣으면 <c>xchat</c>등을 컴파일 할대, GNOME이 지원됩니다. 
			모든 우리의 의존성은 또한 USE를 의식하고 있습니다. 
			</ti>

		</tr>
		<tr>
			<ti>GENTOO_MIRRORS</ti>
			<ti>
			공백으로 구분되는 현재 사용되고 있는 젠투패키지의 미러 사이트 URL의 나열입니다.
			포테지는 먼저 <c>GENTOO_MIRRORS</c>에서 먼저 패키지 다운로딩을 시도하고 이어서 <c>SRC_URI</c>에서
			시도를 합니다.
			강제로 포테지가 미러사이트 접근하는 것을 막으려 한다면 이 변수의 값을 “”로 하시면 됩니다.
			
			</ti>
		</tr>
		</table>
		</body>
	</section>

	<section>
		<title><path>/etc/make.defaults</path>에서는 어떤일이 벌어지나요?</title>
		<body>

<p>
포테지 1.5 이상 버전에서<path>/etc/make.defaults</path>는 한물간 존재입니다; 
만약 여러분이 portage-1.5-r1이나
그 이상버전을 사용중이라면 여러분은 안전하게 이파일을 지우실수 있습니다.
이 파일은 <path>/etc/make.profile/make.defaults</path>파일로 대체 되었습니다.
(<path>/etc/make.profile</path> 은 <path>/usr/portage/profiles/default</path>의 심볼릭 링크 입니다.),
이 파일은 기본적인 시스템의 설정들이 들어있습니
다. 우선권이 더 높은 다양한 설정 파일들은 아래에 있습니다. (1번부터 먼저 적용됩니다.): 
		
		<ol>
			<li>환경변수</li>
			<li>여러분이 사용하는 <path>/etc/make.conf</path></li>
			<li>기본 설정이 설정된 <path>/etc/make.profile/make.defaults</path></li>
			<li><path>/etc/make.globals</path>, 
			의 전역 기본 설정</li>
		</ol>
		</p>
		</body>
	</section>
	
	<section>
		<title>
		<e>apt-get upgrade</e>나 <e>make World</e>등의 명령처럼 모든 패키지를 업그레이드 하는 방법은 없나요? 
		</title>
		
		<body><p>
		<b>예!</b> 당근 있습니다. <e>emerge update</e>
		( <c>--pretend</c> 옵션을 먼저 사용하세요) 라고 명령을 주시면 됩니다. 그럼
		모든 시스템의 핵심 패키지가 업데이트 되고, <c>emerge --world update</c>(다시 말하지만 <c>--pretend</c>먼저..)
		를 하면 모든 인스톨된 패키지의 업그레이드가 진행됩니다.
		</p></body>
	</section>


	<section>
		<title>
		<c>emerge</c>나 <c>ebuild</c>를 이용해서 패키지 업데이트를 하고 있을때, 
		제가 설정한 설정파일들이 훼손되는걸 원치
		않는데요? 
		</title>
		<body><p>
		포테지는 기본 설정이 된 설정파일을 가지고 있습니다. <c>emerge --help config</c>를 치면 좀더 자세한 설정을
		볼수 있습니다. 간단히 답하자면, 어떤 패키지가 <path>foo</path>를 <path>/etc</path>에 
		인스톨할때, 이미 <path>foo</path>라는 디렉토리가 이미  있으면, 새로
		 깔려고 했던 <path>foo</path>는 <path>._cfgxxxx_foo</path>라는 파일로 이름이 바뀌어서 
		 해당 디렉토리에 저장됩니다. 시험하거나
		  업데이트할 때 많은 설정파일들을 보호하는 유용한 도구로 <c>etc-update</c>라는 것이 있습니다. 
		  <c>emerge app-admin/gentoolkit</c>에 의해 얻을 수 있습니다.
		  
		</p></body>
	</section>

	<section>
		<title>
		저는 <c>./configure</c>를 실행해서 한 스탭씩 진행하고 싶네요. 가능해요? 
		</title>
		<body><p>
		가능합니다. 그러나 이것은 쉽지 않습니다. 먼저 <c>man ebuild</c>를 하고 <c>ebuild foo-x.y.z.ebuild</c>
		를 이어서 합니
		다. 그리고 <c>cd</c> 로 <path>/var/tmp/portage/foo-x.y.z/work</path>
		로 이동합니다. 이제 여러분은 수동으로 <c>./configure</c>를
		실행할 수 있습니다. 그리고 여러분 마음대로 make를 진행할 수 있습니다. ( 여러분은 이둘을 모두 해야
		합니다. 포테지는 <c>configure</c>와 <c>make</c>(빌드) 순서를 분리하지 않습니다.) 
		포테지가 인스톨이 끝나면(그러면
		여러분은 이 패키지를 이후에 쉽게 제거 할 수 있습니다. 여러분이 필요할만한 기능입니다. 그리고 가능한 의
		존성을 등록시켜줍니다. ) 여러분은 먼저 <c>touch /var/tmp/portage/foo-x.y.z/.compiled</c>를(
		포테지는 <c>ebuild foo-x.y.z.ebuild compild</c>이 수행되었다고 생각하여, 속게 됩니다.) 
		수행하고 이어서 <c>ebuild foo-x.y.z.ebuild merge</c>를 수행합니다.
		
		</p></body>
	</section>

	<section>
		<title>
		만약 rsync가 동작하지 않으면 무엇이 문제 입니까? 
		</title>
		<body><p>
		만약 당신의 머신이 rsync의 트래픽을 걸러내는 방화벽 뒤에 있다면 여러분은 다른곳에서 매일
		/usr/portage를 다운 받아야 하는데,
		<uri>http://cvs/gentoo.org/snapshots</uri>

		에서 받습니다. 그냥 타르볼을 ( <c>tar xvjf portage-foo.tbz2</c>) <path>/usr</path> 디렉토
		리에 풀어놓으면 됩니다.
		
		</p></body>
	</section>

	<section>
		<title>
		방화벽 뒤에서 <i>emerge</i>를 어떻게 사용하죠? 
		</title>
		<body><p>
		프락시 세팅을 수정하셔야 하는데 <path>/etc/make.conf</path>에서 설정합니다. 만약 이것이 아무일도 안한다면,
		<path>/etc/wget/wgetrc</path>를 수정해서 http_proxy 와 ftp_proxy를 활성화 시키면 됩니다.
		
		</p></body>
	</section>

	<section>
		<title>
		다른 운영체제와 rsync할 수 있나요? 
		</title>
		<body><p>
		이 프로그램은 UNIX와 Win32에서 조화롭게 사용할 수 있습니다.
		<uri> http://www.cis.upenn.edu/~bcpierce/unison</uri>을 참고 하세요. 
		 
		</p></body>
	</section>

	<section>
		<title>
		저는 오로지 집에서 느린 모뎀으로 밖에 접속하지 않습니다. 다른곳에서 소스를 받아다가 제 시스템에 넣을
		수 있습니까? 
		</title>
		<body><p>
		동근입니다!! 여러분은 <c>emerge --pretend package</c>로 어떤 프로그램이 깔릴지 알 수 있습니다. 소스를 다운
		로드 받던지 아니면 다른 미디어를 이용해 집으로 가져오면, 소스를 <path>/usr/portage/distfiles</path>
		에 넣고, <c>emerge package</c>를 실행해서 여러분의 소스가 인식되는걸 볼 수 있습니다. 
		소스는 단지 가져오기만 하면 됩니다.
		 
		</p></body>
	</section>

	<section>
		<title>
		인스톨된 .tar.gz 소스가 /usr/portage/distfiles를 채워가면서 귀중한 용량을 잡아 먹습니다. 안전하게 이것
		들을 지워버릴 순 없나요? 
		</title>
		<body><p>
		가능합니다. 여러분은 안전하게 이 파일들을 지울 수 있습니다. 그러나 만약에 모뎀과 같은 느린 접속을 하
		고 있다면, 여러분은 아마도 가능하면 아카이브들을 보존하고 싶을겁니다. 만약 여러분이 아카이브들을 지
		우고, 다시 업그레이드를 한다면 해당 패키지들을 다시 인터넷에서 다운로드 받아야 합니다.
		
		</p></body>
	</section>



</chapter>

<chapter>
	<title>Usage</title>

	<section>
    	<title>
	저는 openssh를 저의 박스에 인스톨했습니다. 그러나 루트로밖에 로그인할수 없습니다 저는 일반 유저로도
	로그안하고 싶은데 그게 안되네요. 
	</title>
    <body>
        <p>
	이런 문제는 거의 대부분 아마도 여러분의 유저인증에서 가능한 쉘을 명시하지 않았기 때문에 생깁니다. 여
	러분의 <path>/etc/passwd</path>파일을 확인하고 끝부분에 /bin/bash(아니면 다른 쉘)이 있는 지 봅니다. 일반 유저에
	쉘이 세팅되어 있지 않다면, 다음의 명령으로 쉘을 추가해줍니다.
        </p>
        <pre># <i>usermod -s /bin/bash myuser</i></pre>
    </body>
	</section>
	
	<section>
		<title>
		루트로 밖에 X 가 뜨지 않아요.
		</title>
		<body><p>
		여러분의 <path>/tmp</path>디렉토리가 잘못된 퍼미션을 가지고 있습니다.
		(이 디렉토리는 스틱키비트를 설정해야 합니다.)
		다음의 명령을 사용하세요.
		
		</p>
		<pre># <i>chmod 1777 /tmp</i></pre>
		</body>
	</section>

	<section>
		<title>
		어떻게 다른나라 키보드 레이아웃을 세팅하죠? 
		</title>
		<body><p>
		<c>KEYMAP</c> 환경변수를 세팅해주면 됩니다. <path>/etc/rc.conf</path>에서 
		키맵을 바꿔주고 키맵 스크립트를 다시 시작해줍
		니다. <c>/etc/init.d/keymaps restart </c>
		
		</p>
		</body>
	</section>

	<section>
		<title>
		DNS 응답이 오로지 루트일때만 동작합니다. 
		</title>
		<body><p>
		<path>etc/resolv.conf</path>의 퍼미션을 변경해야 합니다.
		
		</p>
		<pre># <i>chmod 0644 /etc/resolv.conf</i></pre>
		</body>
	</section>

	<section>
		<title>
		왜 KDE는 <path>/etc/profile</path>을 안 읽나요? 
		</title>
		<body><p>
		여러분은 <c>--login</c>을 <path>/opt/kde2.1/bin/startkde</path> 파일의 가장 첫 번째 줄에
		써줘야 합니다. 다음과 같이 말이
		죠.
		</p>
		<pre>#!/bin/sh --login</pre>
		<p>
		이 수정사항은 최신 버전의 KDE에 이미 추가되어 있습니다.
		</p>
		</body>
	</section>
</chapter>

<chapter>
	<title>Maintenance</title>
	<section>
		<title>
		ReiserFS 와 파일시스템 망가짐 문제 -- 어떻게 바꾸는가와 그 외.. 
		</title>
		<body>
		<p>
		ReiserFS는 심각한 문제를 2.4대의 커널이 가지고 있습니다. 우리는 ReiserFS를 피하라고 강하게 권고 해왔
		습니다. 만약 여러분의 ReiserFS 파티션이 이미 망가져 있다면, 젠투리눅스 부트씨디로 부팅하고, 
		<c>reiserfsck --rebuild-tree</c>를 망가지 파일 시스템에서 수행하십시오. 
		비록 여러분이 몇 개의 파일과 디렉토리를 잃더라
		 도 파일시스템을 다시 정리해줍니다.
		 
		</p>
		</body>
	</section>

	<section>
		<title>
		pre-1.0_rc5 젠투 시스템에서 /var/log/syslog.d등의 타임스템프를 어떻게 볼 수 있나요?
		</title>
		<body>

<p>
 다중로그 (젠투리눅스 1.0_rc5나 그 이전) 타임스템프를 보려면 여러분은 파이프를 이용해서 현재의 로그 파
 일을 <c>tai64nlocal</c> 프로그램을 이용해서 봐야 합니다.
</p>>
<pre>
# <i>cat /var/log/syslog.d/current | tai64nlocal | less</i>
</pre>

<p>
 아니면 다른 방법으로 로그파일의 끝부분만 볼 수도 있습니다.
</p>

<pre>
# <i>tail -f /var/log/syslog.d/current | tai64nlocal</i>
</pre>

</body>
	</section>
</chapter>

<chapter>
	<title>Development</title>
	<section>
		<title>
		버그는 어디다가 보고 하나요? 
		</title>
		<body><p>
		일반적으로 특정한 프로그램의 버그는 해당 프로그램의 개발자에게 하시면 됩니다. 그렇지 않으면 버그질라
		버그 트랙커로 보고하시면 됩니다.
		<uri>http://bugs.gentoo.org</uri>

		로 보고 하시면 됩니다. 그리고 여러분은 IRC의 <c>#gentoo</c>로 오시면 
		IRC 네트웍의<uri link="http://www.openprojects.net">OpenProjects</uri> 로 오실수 있습니다.
		</p></body>
	</section>

	<section>
		<title>
		얼마나 자주 새 버전이 릴리즈 되나요? 
		</title>
		<body><p>
		새로운 릴리즈는  <uri link="http://lists.gentoo.org/mailman/listinfo/gentoo-announce">gentoo-announce</uri>
		메일링 리스트에서 발표 됩니다.
		</p></body>
	</section>

	<section>
		<title>
		포테지에 새로운 패키지를 추가하고 싶은데요? 어떻게 해야하죠? 
		</title>
		<body><p>
		 
		 <uri>http://bugs.gentoo.org</uri> 에 가서 새로운 버그형식을 "ebuild"형식으로 등록합니다. 여러분의 
		 ebuild가 버그리포트에 인정됩니다.
		</p></body>
	</section>

	<section>
		<title>
		떻게 이 FAQ에 질문을 추가 하죠? 
		</title>
		<body><p>
		
		새로운 버그를 <uri>http://bugs.gentoo.org</uri> 에 "Documents" 형식으로 등록하면 됩니다.
		</p></body>
	</section>

	<section>
		<title>
		make -f Makefile.cvs를 KDE 응용프로그램에서 하면 "invalid unused variable"에러를 냅니다. 
		</title>
		<body><p>
		<c>make -f Makefile.cvs</c>를 실행하기 전에 <c>WANT_AUTIMAKE_1_4=1</c>을 모든 KDE프로젝트에서 export해줍
		니다. 또한 KDE2 응용프로그램의 경우는 <c>WANT_AUTOCONF_2_1=1</c>을 export하고, KDE3의 경우는
		<c> WANT_AUTOCONF_2_5=1</c>를 export해줍니다. 
		 
		</p></body>
	</section>


	<section>
   		<title>
		의 스피커가 모질라를 컴파일 하는동안 미쳐버립니다.(역자주:미친 듯이 삑삑거리나보죠..) 어떻게 콘솔비
		프음을 해제할 수 있을까요? 
		
    		</title>

    	<body>
        <p>
	 콘솔비프음은 아래와 같이 setterm명령으로 해제합니다.

        <pre># <i>setterm -blength 0</i></pre>
	
	 만약에 여러분이 콘솔 비프음을 부팅할 때 해제하고 싶다면 이 이 명령을 <path>/etc/conf.d/local.start</path>
	 에 추가해 넣
	 으시면됩니다. 그러나 이 명령은 오로지 현재 터미널에서만 비프음을 해제합니다. 다른 터미널에서도 비프
	 음을 해제하고 싶다면 파이프 명령을 사용합니다.

        <pre># <i>setterm -blength 0 >/dev/vc/1</i></pre>

        </p>
    	</body>
	</section>

</chapter>




<chapter>
<title>Resources</title>
	<section>
		<title>
		어디서 더 자세한 젠투 리눅스 1.0_rc5나 그 이전 버전의 기본적인 관리 방법에 대한 자료를 얻을 수 있나
		요
		</title>
		<body><p>
		<!-- TODO: --><uri>http://cr.yp.to/daemontools.html</uri>
		</p></body>
	</section>

	<section>
		<title>
		어디서 젠투리눅스에 대한 보다 자세한 정보를 얻을 수 있나요? 
		</title>
		<body><p>
		젠투리눅스의 공식 홈페이지인
		<uri>http://www.gentoo.org</uri>
		에서 관련문서를 찾으실 수 있습니다. 일반적인 리눅스 관련 문서는
		<uri>http://www.linuxdoc.org</uri>
		에서 찾으 실 수 있습니다.

		</p></body>
	</section>

	<section>
		<title>
		젠투리눅스 시디를 구입할 수도 있나요? 
		</title>
		<body><p>
		예! 신선한 CDR로 구원진 젠투를 미국달러 5달러로 <uri>http://www.cheapbytes.com</uri>에서 구입할 수 있습니다.
		</p></body>
	</section>
	<section>
		<title>
		이 FAQ는 아직 저의 의문을 해소하지 못했습니다. 저는 어떻게 해야 하죠? 
		</title>
		<body>
		<p>
		가장 좋은 첫 번째 방법은
		<uri>www.gentoo.org</uri>
		에서 젠투 리눅스의 메일링 리스트를 검색해보는 겁니다. 그보다 좋은 방법은 구글(
		<uri>www.google.com</uri>)
		에서 젠투 list에 대한 자원을 검색하는 겁니다. “list.gentoo.org foo" 로 검색을 하게 되면, 
		젠투의 메일링 리스트에서 foo를 찾게 됩니다. 모든 방법에서 여러분이 실패를 하시게 된다면, 
		마지막으로 IRC의 <c>#gentoo</c>에 오셔서 직접 물어보시기 바랍니다. 
		IRC서버는 <uri>irc.openprojects.net</uri> 입니다.
		
		</p>
		</body>
	</section>
</chapter>
</guide>
