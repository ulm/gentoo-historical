<?xml version='1.0' encoding='euc-kr'?>
<?xml-stylesheet href="xsl/guide.xsl" type="text/xsl"?>

<guide>
<title>Env.d HOWTO </title>
<author title="Author">
<mail link="zhen@gentoo.org">John P. Davis</mail>
</author>
<author title="Translator">
<mail link="sheen@jongyeob.com">Sheen, JongYeob</mail>
</author>
<author title="Moderator">
<mail link="seo@gentoo.org">Jungmin Seo</mail>
</author>

<abstract>
<path>/etc/env.d</path> 디렉토리와 내용의 의미와 사용법을 설명한다.
</abstract>

<version>1.4</version>
<date>26 September, 2002</date>

<chapter>

<title><c>env.d</c> 소개와 일반 변수</title>

<section>
<title>젠투 기본 환경변수</title>
<body>
<p>젠투 사용자는 "환경변수가 어디에 있고 무엇을 설정해야 합니까?"라고 질문을 많이 한다.
먼저 환경 변수가 무엇인지 알아야 이 질문을 이해할 수 있다.
환경변수는 <c>export</c> 명령으로 설정한다.
예를 들어, <c>export EDITOR="/usr/sbin/vim" </c>를 실행하여 vim을 시스템 기본편집기로 설정한다.
젠투 시스템에서 설정할 수 있는 환경 변수는 여러가지가 있다. 다음은 몇가지 예이다.
</p>

<note><c>export</c>로 셀과 모든 자식 프로세스의 환경 변수를 설정한다.
자식 프로세스에 영향을 주지않고 싶으면 <i>FOO="bar" </i>처럼 사용하라. 
</note>

<note>여러분의 <i>00basic</i> 파일은 다를 수 있다. 젠투에서 패키징한 기본값이기 때문에 신경쓸 필요없다.
</note>

<info>이 예는 <path>/etc/env.d/00basic</path>에서 볼 수 있다.</info>

<table>
<tr><th>변수</th><th>기능</th></tr>
<tr><ti>PATH</ti><ti>프로그램이 찾는 기본 경로를 설정한다. ':'로 구분한다.
예 : <c>PATH=/usr/local/bin:/opt/bin </c></ti></tr>

<tr><ti>ROOTPATH</ti><ti> 이 변수는 PATH와 같지만, <c>root</c>가 사용하는 기본 root 프로그램 경로를 설정한다.
예 : <c>ROOTPATH=/usr/local/bin:/opt/bin</c> </ti></tr>

<tr><ti>LDPATH</ti><ti> 이 변수는 링크할 때 사용하는 라이브러리 경로를 지정한다.
예 : <c>LDPATH=/usr/local/lib </c> </ti></tr>

<tr><ti>MANPATH</ti><ti> 맨페이지 경로를 지정한다. <i>PATH</i>와 비슷하지만 맨페이지 경로에 사용한다.
예 : <c>MANPATH=/usr/share/man:/usr/local/share/man </c> </ti></tr>

<tr><ti>INFODIR</ti><ti> 모든 info 파일이 있는 위치를 지정한다. 
예 : <c>INFODIR=/usr/share/info </c> </ti></tr>

<tr><ti>PAGER</ti><ti>어떤 페이저(pager)를 사용할지를 정한다.
예 : <c>PAGER=/usr/bin/less </c> </ti></tr>

<tr><ti>EDITOR</ti><ti> 시스템 기본 편집기를 정한다.
예 : <c>EDITOR=/usr/bin/vim </c> </ti></tr>
</table>


<p><i>00basic</i> 파일 예이다. 어떤 형식인지 보여줄 뿐이다. <c>00basic</c> 파일에 이상이 있으면 이것을 사용하면 된다! </p>

<pre caption = "00basic">
# Copyright 1999-2002 Gentoo Technologies, Inc.
# Distributed under the terms of the GNU General Public License, v2 or later
# $Header: /home/cvsroot/gentoo-src/rc-scripts/etc/env.d/00basic,v 1.6 2002/06/20 22:07
:37 azarah Exp $

PATH=/usr/local/bin:/opt/bin
ROOTPATH=/usr/local/bin:/opt/bin
LDPATH=/usr/local/lib
MANPATH=/usr/share/man:/usr/local/share/man
INFODIR=/usr/share/info
CVS_RSH=ssh
PAGER=/usr/bin/less
EDITOR=/usr/bin/vim
LESSOPEN="|lesspipe.sh %s"
</pre>

</body>
</section>

<section>
<title>env.d 형식</title>

<body>
<p><c>env.d</c>안에 있는 파일은 논리적 순서로 정렬되어 있어 <c>env-update</c>을 실행하면 환경변수는 적당한 순서로 정렬된다. 파일 앞 숫자는 어떤 순서로 실행될 것인가를 결정한다. 
<i>00basic</i>이 먼저 실행되고 그 다음에 <i>01something</i>이 실행된다. 파일 내용은 정해진 양식을 따른다. </p>

<pre caption = "내용 형식">
<comment># 주석입니다. BASH와 같습니다. </comment>
<i>VARIABLE1=/path/to/something </i>
<comment># 어떤 변수는 : 으로 항목을 구분할 수 있다. </comment>
<i>VAR1A=/path/to/something:/path/to/another/something </i>
<i>VARIABLE2=name_something </i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>특별 변수와 사용법</title>

<section>
<title>특별 변수 </title>
<body>

<p><c>env.d </c>에는 특별한 변수가 몇 개 있다. 특별 변수로 <i>KDEDIRS, PATH, CLASSPATH, LDPATH, MANPATH, INFODIR, ROOTPATH, CONFIG_PROTECT, CONFIG_PROTECT_MASK</i>가 있다. 특별 변수가 특이한 이유는 특별한 방식으로 처리되고 특정 파일에 들어가 있기 때문이다. 이 점에 대해 뒤에 기술한다. </p>

<note>아래에서 설명하는 변수 몇 개는 <i>00basic</i>에서 이미 기술하였다. 다른 파일에서 한번 이상 사용할 수 있는 장점이 있다. 아래에 상세히 설명한다.</note>

<table>
<tr><th>변수</th><th>기능</th></tr>
<tr><ti>KDEDIRS</ti><ti> 모든 KDE 파일의 경로.</ti></tr>

<tr><ti>PATH</ti><ti>앞에서 설명함. ':'로 구분 (위 참조).</ti></tr>

<tr><ti>CLASSPATH</ti><ti>Java 클래스 경로 지정, ':'로 구분.</ti></tr>

<tr><ti>LDPATH</ti><ti>앞에서 설명함. (위 참조).</ti></tr>

<tr><ti>MANPATH</ti><ti>앞에서 설명함. (위 참조). ':'로 구분.</ti></tr>

<tr><ti>INFODIR</ti><ti>앞에서 설명함. (위 참조). ':'로 구분.</ti></tr>

<tr><ti>ROOTPATH</ti><ti>앞에서 설명함. (위 참조). ':'로 구분.</ti></tr>

<tr><ti>CONFIG_PROTECT</ti><ti> ebuild를 새로 할 때 <path>/etc</path>에서 보존하고 싶은 설정 파일을 지정한다. 항목은 공백(space)으로 구분한다.</ti></tr>

<tr><ti>CONFIG_PROTECT_MASK</ti><ti> CONFIG_PROTECT와 반대이다. emerge할 때 <path>/etc</path>에서 자동으로 바꾸고 싶은 파일은 보호하지 않는다.</ti></tr>
</table>

</body>
</section>

<section>
<title>모두 합치기</title>
<body>

<p>자, 모두 정의했다. 여러분과 여러분의 젠투 시스템이 이것과 도대체 어떤 관계가 있는지 궁금할지 모르겠다. 필요할 곳에 변수를 바꿀 수 있다는 점이 바로 <i>env.d</i>의 장점이다. 위에 정의한 대로 이 일을 할 수 있다.
</p>

<p>
어떻게 되는지 다루었다. 이제는 변수에 어떤 일이 일어나는지 설명해 보자.
<c>env-update </c>이 호출되면 모든 파일을 순서대로 연결한다. <i>PATH</i> 변수가 다른 파일에 여러번 사용되어도 좋다고 했다는 점을 기억하길. <c>env-update</c>는 파일을 순서대로 처리하고 경로를 추가하기 때문이다. KDE와 GNOME <i>PATH </i>, 기본 <i>PATH </i> 그리고 X의 <i>PATH </i>를 갖고 있다면 <c>env-update </c>는 이 모든 경로를 연결한다. 그 결과 기본 <i>PATH </i>는 모두 합친 경로가 된다. 죽이죠?
</p>

<p>변수들는 이제 함께 연결되기 때문에 변수들이 어디에 저장되는지 아는 것이 중요하다.</p>

<note>아래 파일은 <c>env-update</c>를 실행하면 생성된다. </note>

<pre caption = "env.d 의 모든 파일을 합쳐서 생성된 파일">
<i>LDPATH ----> /etc/ld.so.conf </i>
<i>CONFIG_PROTECT 와 CONFIG_PROTECT_MASK ----> /etc/profile.env (export된 변수로) </i>
<i>특별 변수와 기타  ----> /etc/profile.env </i>
</pre>

<p><path>/etc/ld.so.conf</path>를 보면, 포함된 정보는 <i>env.d</i>를 토대로 하고 있음을 분명히 알 수 있다.</p>

<pre caption = "/etc/ld.so.conf">
# ld.so.conf autogenerated by env-update; make all changes to
# contents of /etc/env.d directory
/usr/local/lib
/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2
/usr/lib/opengl/nvidia/lib
/usr/lib/mozilla
/usr/X11R6/lib
/opt/blackdown-jdk-1.3.1/jre/lib/i386/
/opt/blackdown-jdk-1.3.1/jre/lib/i386/native_threads/
/usr/qt/3/lib
/usr/qt/2/lib
/usr/kde/3/lib
</pre>

<p><path>/etc/profile.env</path>가 여러분의 shell.env(<i>csh.env</i> 또는 <i>bash.env</i>)와 같다는 점을  알면 좋다. 다음번에 /etc/profile.env를 열 때 사용하는 모든 변수를 지금 사용할 수 있다는 장점이 있다.</p>

<pre capton = "env-update 부터 이벤트의 순서">
<i>/etc/env.d 설정 ----env-update----> /etc/profile.env ---> /etc/profile 
---> bash ---> 모든 프로그램</i>
</pre>

<p>이제 <i>profile.env</i>를 갖게 되었다. 이 파일은 다음과 같다. </p>

<pre caption = "/etc/profile.env">
export CONFIG_PROTECT='/usr/kde/3/share/config /usr/share/config'
export KDEDIRS='/usr/kde/3:/usr'
export MANPATH='/usr/share/man:/usr/local/share/man:/usr/X11R6/man:/opt/blackdown-jdk-1
.3.1/man'
export INFODIR='/usr/share/info:/usr/X11R6/info'
export PATH='/usr/local/bin:/opt/bin:/opt/rar/bin:/usr/X11R6/bin:/opt/blackdown-jdk-1.3
.1/bin:/opt/blackdown-jdk-1.3.1/jre/bin:/usr/qt/3/bin:/usr/qt/2/bin:/usr/kde/3/bin'
export CONFIG_PROTECT_MASK='/etc/gconf'
export CLASSPATH='/opt/blackdown-jdk-1.3.1/jre/lib/rt.jar:.'
export ROOTPATH='/usr/local/bin:/opt/bin:/opt/rar:/usr/X11R6/bin:/opt/blackdown-jdk-1.3
.1/bin:/opt/blackdown-jdk-1.3.1/jre/bin:/usr/qt/3/bin:/usr/qt/2/bin:/usr/kde/3/bin'
export KDEDIR='/usr/kde/3'
export VIMRUNTIME='/usr/share/vim/vim61'
export JDK_HOME='/opt/blackdown-jdk-1.3.1'
export JAVAC='/opt/blackdown-jdk-1.3.1/bin/javac'
export PAGER='/usr/bin/less'
export HOSTNAME='l00ser.muc.edu'
export QMAKESPEC='linux-g++'
export LESSOPEN='|lesspipe.sh %s'
export CVS_RSH='ssh'
export EDITOR='/usr/bin/vim'
export QTDIR='/usr/qt/3'
export JAVA_HOME='/opt/blackdown-jdk-1.3.1'
export XINITRC='/etc/X11/xinit/xinitrc'
export MOZILLA_FIVE_HOME='/usr/lib/mozilla'
</pre>

<p>이제 끝났다. 이제 좀 놀아보자. 심하게는 망가뜨리지는 말고!</p>

</body>
</section>
</chapter>
</guide>
