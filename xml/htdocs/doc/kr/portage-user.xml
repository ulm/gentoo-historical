<?xml version='1.0' encoding="UTF-8" ?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/kr/portage-user.xml">
<title>포테이지 사용자 가이드</title>

<author title="Chief Architect"><mail link="drobbins@gentoo.org">
	Daniel Robbins</mail>
</author>

<author title="Editor"><mail link="thomasfl@gentoo.org">
	Thomas Flavel</mail>
</author>

<author title="번역"><mail link="eminency@irg.ssu.ac.kr">
	박종영(eminency)</mail>
</author>

<author title="Moderator"><mail link="seo@gentoo.org">Jungmin Seo</mail></author>

<abstract>
이 문서는 패키지를 어떻게 업데이트하고 시스템을 유지하는 지에 대해 간략히 다룬다.
</abstract>

<version>1.0</version>
<date>17 Oct 2001</date>

<chapter>
<title>시작하기</title>

<section>
<title>포테이지 트리 다운받기</title>

	<body>
	<p>당신이 젠투 리눅스를 설치하고 약간이라도 사용을 해 보았다면, 일련의 패키지들에 버그가 있거나 이해할 수 없는 현상을
	발견했을 수도 있고 또는 최신의 젠투 패키지들을 깔고 싶거나 현재의 패키지들을 업데이트 하고 싶을 수도 있다.
	이런 일들을 해결하기 위해, 당신은 포테이지 트리를 다운받을 필요가 있다. 그래서 우리는 당신이 최신버전의 포테이지 트리를
	다운받을 수 있도록 익명 rsync 서버를 제공하고 있다. 이 문서는 그 사용법에 대한 것이다.</p>

	<p>먼저 /usr/portage라는 디렉토리를 만들어야 한다(역주 - 아마 제대로 젠투를 설치했다면 존재할 것이다). 그리고 rsync가
	설치되어 있어야 하는데 만약 설치되지 않았다면, <i>emerge rsync-x.y.z.tbz2</i>를 실행하여 ibiblio 미러에서 다운받아 
	설치하기 바란다. 그리고 포테이지 트리를 동기화하기 위해 아래의 명령을 실행한다.</p>

<pre>
# <i>emerge rsync</i>
</pre>

	<p>오래된 ebuild 스크립트들을 제거하기 위한 다음의 rsync명령도 주기적으로 실행해 줄 필요가 있다.</p>

<pre>
# <i>emerge --clean rsync</i>
</pre>

	<warn><i>emerge --clean rsync</i>명령은 당신이 /usr/portage에 직접 수정하거나 추가한 것까지 없애버릴 수 있으므로
	신중히 사용하기 바란다.</warn>

	<p>만약 당신의 /usr/portage 트리에 정규적인 수정을 직접 했다면 공식 포테이지 CVS 트리에 수정사항을 적용시키기 위한
	CVS 접근을 위해 <mail link="drobbins@gentoo.org">Daniel</mail>과 연락을 취할 것을 권한다(역주 - 이 말의 의미는 
	일반적인 수정이 아니라 개발 지원 측면에서 전반적인 경우에 적용될 수 있도록 포테이지 트리를 개선시켰을 경우를 가리킨다).</p>
	</body>

</section>

<section>
<title>포테이지 업데이트</title>

	<body>
	<p>포테이지 트리를 사용하기 전에 포테이지 패키지를 업데이트 하는 것은 중요하다. 다음을 실행하면 된다 :</p>

<pre>
# <i>cd /usr/portage/sys-apps/portage</i>
# <i>emerge portage-x.y.z.ebuild</i>
</pre>

	<p>이제 최신버전의 포테이지를 쓸 수 있을 것이다. 이제 당신은 설치된 소프트웨어들을 업데이트하기 위해 ebuild 시스템을 
	사용할 수 있다.</p>
	</body>

</section>
</chapter>

<chapter>
<title>emerge 소개</title>

<section>
<title>emerge --pretend</title>

	<body>
	<p>패키지를 설치하기 위해, /usr/portage안의 해당 디렉토리에 들어가 보자. 예를 들면 :</p>

<pre>
# <i>cd /usr/portage/net-irc/xchat</i>
</pre>

	<p>그리고 의존성을 만족시키기 위해 어떤 패키지들이 설치될 지 보기 위해 <i>emerge --pretend</i>를 실행한다.</p>

<pre>
# <i>emerge --pretend xchat-1.4.3.ebuild</i>

These are the packages that I would merge, in order.

Calculating dependencies......... done!
[ebuild   U] sys-libs/zlib-1.1.3-r2 to /
[ebuild   U] dev-libs/glib-1.2.10 to /
[ebuild N  ] media-libs/jpeg-6b-r2 to /
[ebuild N  ] x11-base/xfree-4.0.3-r3 to /
[ebuild N  ] x11-libs/gtk+-1.2.10-r1 to /
[ebuild N  ] media-libs/giflib-4.1.0-r3 to /
[ebuild N  ] media-libs/tiff-3.5.6_beta to /
[ebuild N  ] media-libs/imlib-1.9.10 to /
[ebuild N  ] net-irc/xchat-1.4.3 to /
</pre>

	<p>이 경우는 X가 설치되어 있지 않은 컴퓨터에 xchat를 설치한다. 즉, <i>emerge --pretend</i>는 먼저 만족될 필요가
	있는 의존성에 대해서만 정확히 표시를 해준다. 좀 더 정확히 말하면, sys-libs/zlib와 dev-libs/glib는 업데이트 될 것
	이며, 다른 것들은(물론 x11-base/xfree를 포함하여) 설치될 필요가 있다는 의미이다.</p>
	</body>

</section>

<section>
<title>USE와 emerge</title>

	<body>
	<p>위에서는 /etc/make.conf의 <i>USE</i> 변수에 <i>gnome</i>이 설정되지 않은 시스템에서 
	<i>emerge --pretend</i>를 실행했다. 이는 현재 추가적인 GNOME 지원이 설정되지 않았음을 뜻한다.
	그런데 xchat는 GNOME의 지원이 있어야만 하므로 /etc/make.conf의 환경변수 <i>USE</i>에 <i>gnome</i>을 추가한
	후 <i>emerge --pretend</i>를 실행해보자(역주 - make.conf에 없을 경우는 make.globals를 찾아보길).</p>

<pre>
# <i>emerge --pretend xchat-1.4.3.ebuild</i>

These are the packages that I would merge, in order.

Calculating dependencies............................ done!
[ebuild N  ] media-libs/jpeg-6b-r2 to /
[ebuild N  ] gnome-base/libghttp-1.0.9 to /
[ebuild N  ] media-libs/audiofile-0.2.1 to /
[ebuild N  ] media-sound/esound-0.2.22-r2 to /
[ebuild N  ] gnome-base/gnome-env-1.0 to /
[ebuild N  ] gnome-base/libxml-1.8.11 to /
[ebuild N  ] gnome-base/ORBit-0.5.8 to /
[ebuild N  ] gnome-base/oaf-0.6.5 to /
[ebuild   U] dev-libs/glib-1.2.10 to /
[ebuild N  ] net-libs/libwww-5.3.2-r1 to /
[ebuild N  ] media-libs/giflib-4.1.0-r3 to /
[ebuild N  ] dev-util/guile-1.4-r3 to /
[ebuild   U] sys-libs/zlib-1.1.3-r2 to /
[ebuild N  ] x11-base/xfree-4.0.3-r3 to /
[ebuild N  ] x11-libs/gtk+-1.2.10-r1 to /
[ebuild N  ] media-libs/tiff-3.5.6_beta to /
[ebuild N  ] media-libs/imlib-1.9.10 to /
[ebuild N  ] gnome-base/gnome-libs-1.2.13 to /
[ebuild N  ] gnome-base/glibwww-0.2-r1 to /
[ebuild N  ] gnome-base/gdk-pixbuf-0.11.0 to /
[ebuild N  ] gnome-base/gconf-1.0.0 to /
[ebuild N  ] gnome-base/gnome-vfs-1.0.1 to /
[ebuild N  ] gnome-base/control-center-1.4.0.1 to /
[ebuild N  ] gnome-base/scrollkeeper-0.2 to /
[ebuild N  ] dev-util/xml-i18n-tools-0.8.1 to /
[ebuild N  ] gnome-base/libglade-0.16-r1 to /
[ebuild N  ] gnome-base/gnome-core-1.4.0.4 to /
[ebuild N  ] net-irc/xchat-1.4.3 to /
</pre>

	<p>보다시피, <i>USE</i>에 <i>gnome</i>을 추가함으로써 emerge는 xchat에 GNOME 지원이
	설정되었음을 인식한다. 물론, GNOME의 지원사항들이 컴파일 되고 실행되기 위해 GNOME이 먼저 설치될 것이다.
	<i>emerge</i>는 이것들을 모두 판단하고 설치될 패키지 리스트에 GNOME이 필요로 하는 여러가지 패키지들까지
	추가한다. <i>USE</i>변수를 제대로 설정하지 않아서 <i>emerge</i>가 예상치 못하게 포함시키거나 제외시키는
	패키지들이 생길 수 있다. 그래서 처음 깔거나 잘 알지 못하는 패키지일 경우 웬만하면 실제로
	<i>emerge</i>를 실행하기 전에 <i>emerge --pretend</i>를 실행하기를 권한다. 그렇게 하면 당신은 필요로 하는
	것을 알 수 있을 것이다. :) 모든 것이 괜찮아 보인다면, <i>--pretend</i>옵션은 빼고 실제로 <i>emerge</i>를
	실행해 볼 수 있을 것이다.</p>

<pre>
# <i>emerge xchat-1.4.3.ebuild</i>
</pre>

	<p>모든 의존성 패키지가 설치된 후에(의존성이 존재하는 경우. 모든 패키지가 의존성을 가지는 건 아니다) xchat 소스가
	임시 디렉토리에 다운로드 되고(/usr/portage/distfiles에), 확인을 거친 후 압축이 풀리고, 컴파일되고 설치된다.
	그리고 나면 패키지들은 사용자 컴퓨터의 파일시스템에 합쳐지고, 설치된 파일들과 md5sum파일을 포함한 패키지 
	데이타베이스가 /var/db/pkg/net-irc/xchat-1.4.3/CONTENTS에 만들어진다.</p>
	</body>

</section>
</chapter>

<chapter>
<title>패키지 업그레이드</title>

	<body>
	<p>젠투에서 패키지를 업그레이드하는 일반적인 방법은 새로운 패키지를 설치(merge)하고, 이전 버전을 제거(unmerge)하는
	것이다(역주 - 일반적인 설치, 제거와는 조금 의미가 틀리지만 그대로 번역함). 이는 안전하면서도 재미있는 방법이다. 
	먼저 위에 언급한대로 새로운 패키지를 설치한 후 다음과 같이 구버전을 제거한다 :</p>

<pre>
# <i>emerge unmerge =net-irc/xchat-1.0.0-r1</i>
</pre>

	<p>포테이지는 "safe" unmerge를 사용한다. 그 방식은 원본 파일에 대한 링크를 없애는 것이다. 만약 어떤 파일이
	덮어 씌어지거나 수정되었다면 그것은 파일시스템에 계속 남아있게 될 것이다(아마도 대표적인 경우는 당신이 새로운
	패키지를 설치했을 때이다). 그러므로 당신이 새로운 버전의 xchat를 설치한 후 이전 버전의 xchat를 제거(unmerge)한다면
	파일의 날짜와 md5sum이 다르므로 새로 설치된 실행파일은 지워지지 않을 것이다. safe unmerge는 언제든지 어플리케이션의
	사용가능한 버전의 보존을 보장해주므로 매우 우수한 제거 방식이다. 만약 unmerge를 먼저 실행해야만 한다면 xchat는 새로운
	버전이 다운받고 컴파일되고 설치될 때까지는 사용할 수 없을 것이다.</p>

	<impo>포테이지는 "설정파일 보호"라는 특별한 요소가 있다. 이것의 목적은 새로운 패키지가 설치될 때 이전의 설정파일을
	무작정 지워버리는 것을 방지하는 것이다. 기본적으로 설정파일 보호는 /etc와 KDE 설정 디렉토리에 대해 적용되며, 
	필요하면 더 추가할 수 있다. 자세한 설명은 <i>emerge --help config</i>를 보기 바란다.</impo>
	</body>

</chapter>
</guide>
