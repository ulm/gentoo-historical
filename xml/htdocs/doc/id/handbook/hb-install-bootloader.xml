<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- English doc rev. 1.37 -->

<sections>
<section>
<title>Membuat Pilihan Anda</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Sekarang setelah kernel anda terkonfigurasi dan dikompilasi, serta file-file
konfigurasi sistem yang penting telah diisi dengan benar, ini saatnya untuk
menginstal sebuah program yang akan menjalankan kernel anda sewaktu
anda menghidupkan komputer anda. Program tersebut adalah <e>bootloader</e>.
Tetapi sebelum anda mulai, pikirkan dahulu pilihan-pilihan anda...
</p>

<p>
Terdapat beberapa bootloader di Linux. Tetapi, bootloader-bootloader ini
hanya berfungsi di beberapa arsitektur tertentu. Karena itu, anda
harus memilih bootloader yang mendukung arsitektur anda.
</p>

<p>
Tabel berikut ini menjabarkan arsitektur-arsitektur dan bootloader yang
didukung. Pilihlah sebuah bootloader yang cocok untuk arsitektur anda.
Misalnya, jika anda memiliki Pentium IV, maka arsitektur anda adalah
<e>x86</e>. Anda memiliki pilihan antara GRUB (direkomendasikan) dan LILO.
</p>

<table>
<tr>
  <th>Arsitektur</th>
  <th>Rekomendasi</th>
  <th>Alternatif</th>
</tr>
<tr>
  <th>x86</th>
  <ti><uri link="#doc_chap2">GRUB</uri></ti>
  <ti><uri link="#doc_chap3">LILO</uri></ti>
</tr>
<tr>
  <th>alpha</th>
  <ti><uri link="#doc_chap4">aBoot</uri></ti>
  <ti><uri link="#doc_chap5">MILO</uri></ti>
</tr>
<tr>
  <th>sparc</th>
  <ti><uri link="#doc_chap6">SILO</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>ppc</th>
  <ti>
    <uri link="#doc_chap8">yaBoot</uri> (NewWorld), 
    <uri link="#doc_chap9">BootX</uri> (OldWorld)
  </ti>
  <ti></ti>
</tr>
<tr>
  <th>hppa</th>
  <ti><uri link="#doc_chap7">PALO</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>mips</th>
  <ti><uri link="#doc_chap10">MIPS PROM</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>amd64</th>
  <ti><uri link="#doc_chap2">GRUB</uri></ti>
  <ti></ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Opsional: Framebuffer</title>
<body>

<note>
Bagian ini hanya ditujukan untuk pengguna x86 dan AMD64 yang telah
mengaktifkan dukungan framebuffer di kernel mereka. Para pengguna
<c>genkernel</c> juga termasuk ke dalamnya. Pengguna sistem PPC
dapat menambahkan argumen <c>video</c> (sama seperti yang digunakan
pada saat memboot LiveCD).
</note>

<p>
<e>Jika</e> anda mengkonfigurasi kernel anda dengan dukungan framebuffer,
anda harus menambahkan argumen <c>vga</c> ke file konfigurasi bootloader
anda. Tabel berikut ini menjabarkan nilai-nilai <c>vga</c> yang tersedia yang
dapat anda gunakan. Di contoh file konfigurasi ini, kita menggunakan
<e>800x600 @ 16bpp</e>, yaitu <e>788</e>.
</p>

<table>
<tr>
  <ti></ti><th>640x480</th><th>800x600</th><th>1024x768</th><th>1280x1024</th>
</tr>
<tr>
  <th>8 bpp</th><ti>769</ti><ti>771</ti><ti>773</ti><ti>775</ti>
</tr>
<tr>
  <th>16 bpp</th><ti>785</ti><ti>788</ti><ti>791</ti><ti>794</ti>
</tr>
<tr>
  <th>32 bpp</th><ti>786</ti><ti>789</ti><ti>792</ti><ti>795</ti>
</tr>
</table>

<p>
Ingat (atau catat) nilai anda; kita akan memerlukannya nanti.
</p>

<p>
Sekarang, pilihlah bootloader anda dari tabel di atas.
</p>

</body>
</subsection>
</section>
<section>
<title>Default: Menggunakan GRUB</title>
<subsection>
<title>Mengerti Terminologi GRUB</title>
<body>

<impo>
GRUB hanya dapat digunakan pada sistem berbasis x86 dan AMD64!
</impo>

<p>
Bagian paling penting dalam mempelajari GRUB adalah menyesuaikan diri
dengan cara GRUB menamai harddisk dan partisi. Partisi Linux
<path>/dev/hda1</path> anda dinamai <path>(hd0,0)</path> oleh GRUB.
Perhatikan tanda kurung di sekitar <path>hd0,0</path> - tanda kurung
tersebut diperlukan.
</p>

<p>
Hard disk dihitung mulai dari nol daripada "a" dan partisi-partisi dimulai
dari nol daripada satu. Anda juga perlu mengetahui bahwa untuk perangkat
hd, hanya hard disk yang dihitung, bukan perangkat atapi-ide seperti cdrom
dan cd-rw. Dan, penamaan yang sama berlaku untuk perangkat SCSI. (Biasanya
mereka menggunakan nomor-nomor yang lebih tinggi dari pada perangkat IDE,
kecuali jika bios dikonfigurasi untuk boot dari perangkat SCSI).
</p>

<p>
Anggap anda mempunyai sebuah harddisk di <path>/dev/hda</path>, sebuah
cdrom di <path>/dev/hdb</path>, sebuah cd-rw di <path>/dev/hdc</path>,
sebuah harddisk ke dua di <path>/dev/hdd</path>, dan tidak ada perangkat
SCSI; <path>/dev/hdd7</path> akan dinamai <path>(hd1,6)</path>. Mungkin
kedengarannya rumit, tetapi walaupun rumit, GRUB menyediakan mekanisme
tab completion yang sangat berguna bagi mereka yang memiliki banyak
harddisk dan partisi, dan juga bagi mereka yang kurang mengerti tentang
skema penomoran GRUB.
</p>

<p>
Setelah anda terbiasa dengan skema penomoran GRUB, sekarang saatnya
untuk menginstal GRUB.
</p>

</body>
</subsection>
<subsection>
<title>Menginstal GRUB</title>
<body>

<p>
Untuk menginstal GRUB, pertama marilah kita emerge paketnya. Pengguna
arsitektur x86 harus menginstal <c>grub</c>, sedangkan pengguna AMD64
perlu meng-emerge <c>grub-static</c>:
</p>

<pre caption = "Menginstal GRUB">
<comment>(Untuk arsitektur x86:)</comment>
# <i>emerge --usepkg grub</i>

<comment>(Untuk arsitektur AMD64:)</comment>
# <i>emerge --usepkg grub-static</i>
# <i>cp -Rpv /usr/share/grub/i386-pc/* /boot/grub</i>
</pre>

<p>
Untuk mengkonfigurasi GRUB, ketikkan <c>grub</c>. Anda akan menemui
prompt baris perintah GRUB <path>grub&gt;</path>. Sekarang, anda perlu
mengetikkan perintah-perintah yang benar untuk menginstal boot record GRUB
ke harddisk anda.
</p>

<pre caption = "Menjalankan GRUB">
# <i>grub</i>
</pre>

<note>
Jika sistem anda tidak memiliki floppy drive, tambahkan opsi <c>--no-floppy</c>
pada perintah di atas untuk mencegah GRUB mencari floppy drive (yang tidak
terpasang).
</note>

<p>
Di contoh konfigurasi ini, kita akan menginstal GRUB agar GRUB membaca
informasinya dari partisi boot <path>/dev/hda1</path>, dan instal boot record
GRUB di MBR (Master Boot Record) harddisk, jadi hal pertama yang kita lihat
saat menghidupkan komputer adalah prompt GRUB. Tentu saja, jika anda
tidak mengikuti contoh konfigurasi selama proses instalasi, ubahlah
perintahnya sesuai kebutuhan anda.
</p>

<p>
Mekanisme tab completion GRUB dapat digunakan di dalam GRUB. Sebagai
contoh, jika anda menekan "<c>root(</c>" diikuti oleh TAB, GRUB akan
menampilkan sebuah daftar perangkat (mis. <path>hd0</path>). Jika anda
menekan "<c>root(hd0,</c>" diikuti oleh TAB, anda akan mendapatkan
sebuah daftar partisi-partisi yang tersedia untuk dipilih (mis.
<path>hd0,0</path>).
</p>

<p>
Dengan menggunakan mekanisme tab completion ini, GRUB seharusnya
tidak sulit untuk di-setup. Sekarang lanjutkan, konfigurasilah GRUB :-)
</p>

<pre caption = "Menginstal GRUB di MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(tuliskan di manakah partisi /boot anda berada)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Instal GRUB di MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Keluar dari GRUB)</comment>
</pre>

<note>
Jika anda ingin menginstal GRUB di partisi tertentu dari pada MBR, anda harus
mengubah perintah <c>setup</c> tadi agar GRUB menunjukkan partisi yang
benar. Jika anda ingin menginstal GRUB di partisi <path>/dev/hda3</path>,
maka perintahnya akan menjadi <c>setup (hd0,2)</c>. Walaupun begitu,
hanya sedikit pengguna yang ingin melakukan hal ini.
</note>

<p>
Walaupun sekarang GRUB telah terinstal, kita masih perlu menuliskan sebuah
file konfigurasinya, agar GRUB secara otomatis boot kernel yang baru anda
buat. Buatlah file <path>/boot/grub/grub.conf</path> menggunakan <c>nano</c>
(atau, jika ada, editor lain):
</p>

<pre caption = "Membuat file /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Sekarang kita akan menulis isi <path>grub.conf</path>. Di bawah ini, anda
akan menemukan dua contoh <path>grub.conf</path> untuk contoh skema
partisi yang kita gunakan di panduan ini, dengan imej kernel
<path>kernel-2.4.24</path>. Kami hanya memberikan banyak komentar di
contoh <path>grub.conf</path> yang pertama.
</p>

<ul>
  <li>
    <path>grub.conf</path> yang pertama ditujukan bagi orang-orang yang
    tidak menggunakan <c>genkernel</c> untuk membangun kernelnya
  </li>
  <li>
    <path>grub.conf</path> yang ke dua ditujukan bagi orang-orang yang
    menggunakan <c>genkernel</c> untuk membangun kernelnya
  </li>
</ul>

<pre caption = "grub.conf untuk pengguna non-genkernel">
<comment># Daftar ke berapa yang diboot secara default. 0 adalah pertama, 1 adalah ke dua, dll.</comment>
default 0
<comment># Berapa detik GRUB harus menunggu sebelum daftar default diboot.</comment>
timeout 30
<comment># Keren, gambar latar belakang agar tampilan lebih bagus :)
# Beri tanda komentar ('#') jika anda tidak memiliki video grafis</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.24
<comment># Partisi dimana imej kernel (atau sistem operasi) berada</comment>
root (hd0,0)
kernel /kernel-2.4.24 root=/dev/hda3

<comment># Tiga baris berikutnya hanya digunakan jika anda melakukan dualboot dengan sebuah sistem Windows.</comment>
<comment># Di contoh ini, Windows berada di partisi /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
chainloader +1
</pre>

<pre caption = "grub.conf untuk pengguna genkernel">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.4.24
root (hd0,0)
kernel /kernel-2.4.24 root=/dev/ram0 init=/linuxrc real_root=/dev/hda3
initrd /initrd-2.4.24

<comment># Hanya jika anda ingin dual-boot</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>


<note>
Jika anda menggunakan skema partisi dan/atau imej kernel yang berbeda,
sesuaikanlah dengan partisi/kernel anda. Bagaimanapun juga, pastikan bahwa
semua yang berhubungan dengan perangkat GRUB (mis. <path>(hd0,0)</path>)
berada relatif terhadap mountpoin, bukan partisi root. Dengan kata lain,
<path>(hd0,0)/grub/splash.xpm.gz</path> sebenarnya adalah
<path>/boot/grub/splash.xpm.gz</path> karena <path>(hd0,0)</path>
adalah partisi <path>/boot</path>.
</note>

<p>
Jika anda perlu menambahkan opsi-opsi tambahan ke kernel, tambahkan saja
opsi-opsi tersebut di akhir perintah kernel. Kita telah menambahkan sebuah
opsi (<c>root=/dev/hda3</c> atau <c>real_root=/dev/hda3</c>), tetapi
anda dapat menambahkan opsi-opsi lain lagi. Sebagai contoh, kita tambahkan
opsi <c>vga</c> untuk dukungan framebuffer seperti yang telah kita diskusikan
sebelumnya:
</p>

<pre caption = "Menambahkan argumen vga sebagai opsi kernel">
title=Gentoo Linux
  root (hd0,0)
  kernel /kernel-2.4.24 root=/dev/hda3 vga=788
</pre>

<p>
Pengguna <c>genkernel</c> seharusnya tahu bahwa kernel mereka menggunakan
opsi-opsi boot yang sama seperti LiveCD. Misalnya, jika anda memiliki perangkat
SCSI, anda seharusnya menambahkan <c>doscsi</c> sebagai opsi kernel.
</p>

<p>
Sekarang, simpanlah file <path>grub.conf</path> tersebut dan keluar. Saat ini,
GRUB telah selesai dikonfigurasi, dan anda dapat melanjutkan ke <uri
link="?part=1&amp;chap=10">Menginstal Utilitas-utilitas Sistem yang
Diperlukan</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatif: Menggunakan LILO</title>
<subsection>
<title>Menginstal LILO</title>
<body>

<impo>
LILO hanya dapat digunakan di sistem berbasis x86!
</impo>

<p>
LILO, singkatan dari LInuxLOader, adalah boot loader linux asli yang telah
terpercaya. Tetapi, LILO tidak memiliki beberapa fitur yang dimiliki oleh GRUB
(yang juga merupakan alasan mengapa GRUB sangat populer saat ini). Alasan
LILO masih tetap digunakan di beberapa sistem adalah karena GRUB tidak
berfungsi dan LILO berfungsi. Tentu saja, LILO masih digunakan juga karena
beberapa orang sangat mengenal LILO dan ingin tetap menggunakannya.
Untuk alasan manapun, Gentoo mendukung keduanya, dan sepertinya anda
telah memilih untuk menggunakan LILO.
</p>

<p>
Instalasi LILO sangat mudah, gunakan saja <c>emerge</c>.
</p>

<pre caption = "Instalasi LILO">
# <i>emerge --usepkg lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Mengkonfigurasi LILO</title>
<body>

<p>
Untuk mengkonfigurasi LILO, anda harus menciptakan file
<path>/etc/lilo.conf</path>. Jalankan editor favorit anda (di panduan ini, kami
menggunakan <c>nano</c> untuk konsistensi) dan ciptakan file tersebut.
</p>

<pre caption = "Menciptakan /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Beberapa seksi sebelumnya kami meminta anda untuk mengingat nama imej
kernel yang anda buat. Di contoh <path>lilo.conf</path> berikut ini, kami
mengasumsikan nama imej kernel adalah <path>kernel-2.4.24</path>. Kami
juga menggunakan contoh skema partisi sebelumnya dalam contoh ini.
Terdapat dua bagian yang terpisah, yaitu:
</p>

<ul>
  <li>
    Satu untuk para pengguna yang tidak menggunakan <c>genkernel</c> untuk
    menciptakan kernel mereka.
  </li>
  <li>
    Satu untuk para pengguna yang menggunakan <c>genkernel</c> untuk
    menciptakan kernel mereka.
  </li>
</ul>

<pre caption = "Contoh /etc/lilo.conf">
boot=/dev/hda             <comment># Instal LILO di MBR</comment>
prompt                    <comment># Berikan pengguna kesempatan untuk memilih seksi lain</comment>
timeout=50                <comment># Tunggu 5 (lima) detik sebelum boot seksi default</comment>
default=gentoo            <comment># Setelah waktu tunggu selesai, boot seksi "gentoo"</comment>
<comment># Hanya jika anda menggunakan framebuffer. Sebaliknya, hapuslah baris berikut:</comment>
vga=788                   <comment># Setting framebuffer. Sesuaikan dengan kebutuhan anda</comment>

<comment># Untuk pengguna non-genkernel</comment>
image=/boot/kernel-2.4.24
  label=gentoo            <comment># Nama dari seksi ini</comment>
  read-only               <comment># Mulai dengan root yang hanya dapat dibaca (read-only). Jangan diubah!</comment>
  root=/dev/hda3          <comment># Lokasi filesystem root</comment>

<comment># Untuk pengguna genkernel</comment>
image=/boot/kernel-2.4.24
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc real_root=/dev/hda3"
  initrd=/boot/initrd-2.4.24

<comment># Dua baris berikutnya hanya digunakan jika anda dualboot dengan sistem WIndows.</comment>
<comment># Di contoh ini, Windows berada di partisi /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Jika anda menggunakan skema partisi dan/atau imej kernel yang berbeda,
sesuaikanlah dengan partisi/kernel anda.
</note>

<p>
Jika anda perlu menambahkan opsi-opsi kernel tambahan, tambahkan argumen
<c>append</c> ke seksi tersebut. Sebagai contoh, kita tambahkan argumen
<c>acpi=off</c> untuk menonaktifkan dukungan ACPI:
</p>

<pre caption = "Menambahkan opsi kernel">
image=/boot/kernel-2.4.24
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="acpi=off"</i>
</pre>

<p>
Pengguna <c>genkernel</c> seharusnya tahu bahwa kernel mereka menggunakan
opsi-opsi boot yang sama seperti LiveCD. Misalnya, jika anda memiliki perangkat
SCSI, anda seharusnya menambahkan <c>doscsi</c> sebagai opsi kernel.
</p>


<p>
Sekarang simpanlah file tersebut dan keluar. Sebagai langkah terakhir, anda
harus menjalankan perintah <c>/sbin/lilo</c> agar LILO menerapkan
konfigurasi <path>/etc/lilo.conf</path> ke sistem anda (instal LILO ke disk).
Ingat bahwa anda harus menjalankan kembali <c>/sbin/lilo</c> setiap kali
anda menginstal sebuah kernel baru!
</p>

<pre caption = "Menyelesaikan instalasi LILO">
# <i>/sbin/lilo</i>
</pre>

<p>
Sekarang lanjutkan ke <uri link="?part=1&amp;chap=10">Menginstal
Utilitas-utilitas Sistem yang Diperlukan</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatif: Menggunakan aboot</title>
<body>

<impo>
aboot hanya dapat digunakan pada sistem berbasis alpha!
</impo>

<p>
Pertama-tama, kita instal aboot pada sistem kita. Tentu saja kita menggunakan
perintah <c>emerge</c> untuk melakukannya:
</p>

<pre caption = "Instal aboot">
# <i>emerge --usepkg aboot</i>
</pre>

<p>
Langkah selanjutnya adalah membuat bootdisk kita dapat diboot (bootable).
Hal ini akan menjalankan <c>aboot</c> pada saat anda boot sistem anda.
Kita membuat bootdisk kita dapat diboot (bootable) dengan menuliskan
bootloader <c>aboot</c> pada awal disk kita.
</p>

<pre caption = "Membuat bootdisk anda dapat di-boot(bootable)">
# <i>swriteboot -f3 /dev/sda /boot/bootlx</i> 
# <i>abootconf /dev/sda 2</i>
</pre>

<note>
Jika anda menggunakan skema partisi yang berbeda dari yang kami gunakan
di panduan ini, anda harus menyesuaikan perintah-perintahnya. Silahkan membaca
halaman-halaman manual yang bersangkutan (<c>man 8 swriteboot</c> dan
<c>man 8 abootconf</c>).
</note>

<p>
Sebagai tambahan, anda dapat membuat Gentoo boot lebih mudah dengan
men-setup file konfigurasi aboot dan variabel boot_osflags SRM. Anda perlu
juga memastikan bahwa bootdef_dev terset dengan benar (lebih mudah untuk
melakukannya di konsol daripada Linux).
</p>

<pre caption = "Meningkatkan proses boot Gentoo">
# <i>echo '0:2/boot/vmlinux.gz root=/dev/sda2' &gt; /etc/aboot.conf</i>
# <i>echo -n 0 &gt; /proc/srm_environment/named_variables/boot_osflags</i>
# <i>echo -n '' &gt; /proc/srm_environment/named_variables/boot_file</i>
</pre>

<p>
Jika anda menginstal menggunakan konsol serial, jangan lupa untuk
mengikutsertakan flag boot konsol serial di <path>aboot.conf</path>.
Lihatlah <path>/etc/aboot.conf.example</path> untuk informasi lebih lanjut.
</p>

<p>
Aboot sekarang telah terkonfigurasi dan siap digunakan. Lanjutkan ke <uri
link="?part=1&amp;chap=10">Menginstal Utilitas-utilitas Sistem yang
Diperlukan</uri>.
</p>

</body>
</section>
<section>
<title>Alternatif: Menggunakan MILO</title>
<body>

<impo>
MILO hanya dapat digunakan pada sistem berbasis alpha!
</impo>

<p>
Sebelum melanjutkan, anda sebaiknya memilih bagaimana cara menggunakan
MILO. Di bagian ini, kami mengasumsikan kalau anda ingin membuat sebuah
floppy boot MILO. Jika anda ingin boot dari sebuah partisi MS-DOS di harddisk
anda, anda sebaiknya mengubah perintah-perintahnya sesuai kebutuhan anda.
</p>

<p>
Untuk menginstal MILO, kita gunakan perintah <c>emerge</c>.
</p>

<pre caption = "Instal MILO">
# <i>emerge --usepkg milo</i>
</pre>

<p>
Setelah MILO terinstal, imej MILO seharusnya berada di
<path>/opt/milo</path>. Perintah-perintah berikut ini menciptakan
sebuah floppy boot untuk penggunaan dengan MILO. Ingat untuk menggunakan
imej yang benar bagi sistem Alpha anda.
</p>

<pre caption = "Menginstal MILO ke sebuah floppy">
<comment>(Pertama, masukkan sebuah floppy kosong)</comment>
# <i>fdformat /dev/fd0</i>
# <i>mformat a:</i>
# <i>mcopy /opt/milo/milo-2.2-18-gentoo-ruffian a:\milo</i>
# <i>mcopy /opt/milo/linload.exe a:\lilnload.exe</i>
<comment>(Hanya jika anda memiliki Ruffian:</comment>     
  # <i>mcopy /opt/milo/ldmilo.exe a:\ldmilo.exe</i>
<comment>)</comment>
# <i>echo -ne '\125\252' | dd of=/dev/fd0 bs=1 seek=510 count=2</i>
</pre>

<p>
Floppy boot MILO anda sekarang telah siap untuk boot ke Gentoo Linux. Anda
mungkin perlu mengeset variabel lingkungan di Firmware ARCS anda agar
MILO berjalan; Hal ini dijelaskan di <uri
link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri> dengan beberapa
contoh-contoh di sistem-sistem umum, dan contoh perintah-perintah yang
digunakan di modus interaktif.
</p>

<p>
Tidak membaca <uri link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri>
adalah ide yang <e>buruk</e>.
</p>

<p>
Sekarang lanjutkan ke <uri link="?part=1&amp;chap=10">Menginstal
Utilitas-utilitas Sistem yang Diperlukan</uri>.
</p>

</body>
</section>
<section>
<title>Alternatif: Menggunakan SILO</title>
<body>

<p>
Sekarang saatnya untuk menginstal dan mengkonfigurasi <uri
link="http://www.sparc-boot.org">SILO</uri>, yaitu singkatan dari
Sparc Improved boot LOader.
</p>

<pre caption = "Menginstal SILO">
# <i>emerge --usepkg silo</i>
</pre>

<p>
Sekarang jalankan editor favorit anda (kami menggunakan <c>nano</c> sebagai
contoh) dan buatlah file <path>/etc/silo.conf</path>.
</p>

<pre caption = "Membuat file /etc/silo.conf">
# <i>nano -w /etc/silo.conf</i>
</pre>

<p>
Di bawah ini, anda akan menemukan sebuah contoh file <path>silo.conf</path>.
Contoh tersebut menggunakan skema partisi yang kita gunakan di panduan ini
dan <path>kernel-2.4.24</path> sebagai kernelnya.
</p>

<pre caption = "Contoh /etc/silo.conf">
partition = 1         <comment># Partisi boot</comment>
root = /dev/hda4      <comment># Partisi root</comment>
timeout = 15          <comment># Tunggu 15 detik sebelum boot seksi default</comment>

image = /boot/kernel-2.4.24
  label = linux
</pre>

<p>
Jika anda menggunakan contoh <path>silo.conf</path> yang disediakan oleh
Portage, pastikan untuk memberi tanda komentar ke <e>semua</e> baris yang
tidak anda perlukan.
</p>

<p>
Jika anda memiliki partisi <path>/boot</path> yang terpisah, copy file
konfigurasinya ke <path>/boot</path> dan jalankan perintah <c>/sbin/silo</c>:
</p>

<pre caption = "Hanya jika anda memiliki /boot di partisi yang terpisah">
# <i>cp /etc/silo.conf /boot</i>
# <i>/sbin/silo -C /boot/silo.conf</i>
/boot/silo.conf appears to be valid
</pre>

<p>
JIka direktori <path>/boot</path> anda berada di partisi root anda, anda
hanya perlu menjalankan <c>/sbin/silo</c>:
</p>

<pre caption = "Run silo">
# <i>/sbin/silo</i>
/etc/silo.conf appears to be valid
</pre>

<p>
Sekarang lanjutkan ke <uri link="?part=1&amp;chap=10">Menginstal
Utilitas-utilitas Sistem yang Diperlukan</uri>.
</p>

</body>
</section>
<section>
<title>Alternatif: Menggunakan PALO</title>
<body>

<impo>
PALO hanya dapat digunakan pada sistem berbasis HPPA!
</impo>

<p>
Pada platform PA-RISC, bootloader yang digunakan bernama palo. Anda dapat
menemukan file konfigurasinya di <path>/etc/palo.conf</path>. Berikut ini
merupakan contoh konfigurasi file tersebut:
</p>

<pre caption = "Contoh /etc/palo.conf">
--commandline=2/vmlinux root=/dev/sdb2 HOME=/
--recoverykernel=/vmlinux.old
--init-partitioned=/dev/sdb
</pre>

<p>
Baris pertama memberitahu palo lokasi dari kernel dan argumen boot apa
saja yang harus digunakan. <c>2/vmlinux</c> berarti kernel bernama
<c>/vmlinux</c> yang berada di partisi ke dua. Waspada, path kernel relatif
terhadap partisi, bukan filesystem root anda.
</p>

<p>
Baris ke dua mengindikasikan kernel cadangan yang akan digunakan. Jika ini
merupakan instalasi pertama anda dan anda tidak memiliki sebuah kernel
cadangan, silahkan memberi tanda komentar('#') pada awal baris tersebut.
Baris ke tiga menunjukkan disk mana lokasi dari palo.
</p>

<p>
Setelah konfigurasi selesai, jalankan <c>palo</c>.
</p>

<pre caption = "Menggunakan konfigurasi PALO">
# <i>palo</i>
</pre>

<p>
Sekarang lanjutkan ke <uri link="?part=1&amp;chap=10">Menginstal
Utilitas-utilitas Sistem yang Diperlukan</uri>.
</p>

</body>
</section>
<section>
<title>Alternatif: Menggunakan yaBoot</title>
<subsection>
<title>Pendahuluan</title>
<body>

<impo>
yaBoot hanya dapat digunakan pada sistem berbasis PPC NewWorld!
</impo>

<p>
Terdapat dua cara untuk mengkonfigurasi yaBoot pada sistem anda. Anda
dapat menggunakan utilitas <c>yabootconfig</c> baru yang telah ditingkatkan
kinerjanya, yang diikutsertakan di paket <path>yaboot-1.3.8-r1</path> dan
nantinya men-setup yaboot secara otomatis. Jika, untuk suatu alasan, anda
tidak mau menjalankan <c>yabootconfig</c> untuk men-setup
<path>/etc/yaboot.conf</path> secara otomatis atau anda menginstal Gentoo
pada sistem G5 (dimana <c>yabootconfig</c> tidak selalu berfungsi), anda
dapat langsung mengedit contoh file yang telah terinstal di sistem anda.
</p>

<ul>
  <li><uri link="#doc_chap8_sect2">Default: Menggunakan yabootconfig</uri></li>
  <li>
    <uri link="#doc_chap8_sect3">Alternatif: Konfigurasi yaBoot Secara Manual</uri>
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Default: Menggunakan yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> akan melakukan otodeteksi partisi di sistem anda dan
men-setup kombinasi dual atau tripel boot dengan Linux, Mac OS, dan Mac OS X.
</p>

<p>
Untuk menggunakan <c>yabootconfig</c>, drive anda harus memiliki sebuah
partisi bootstrap, dan file <path>/etc/fstab</path> harus telah
terkonfigurasi dengan partisi-partisi Linux anda. Kedua langkah ini seharusnya
telah dilakukan pada langkah-langkah sebelumnya. Untuk memulai, pastikan
anda memiliki versi terbaru dari yaboot terinstal dengan menjalankan
<c>emerge --update yaboot</c>. Hal ini penting karena versi terbaru mungkin
tersedia di Portage, tetapi tidak diikutsertakan di file stage.
</p>

<pre caption = "Menginstal yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Sekarang jalankan <c>yabootconfig</c>. Program ini akan berjalan dan
mengkonfirmasikan lokasi dari partisi bootstrap. Tekan <c>Y</c> jika benar.
Jika tidak, periksa kembali file <path>/etc/fstab</path>. Lalu, yabootconfig
akan memeriksa sistem anda, membuat file <path>/etc/yaboot.conf</path>
dan menjalankan <c>mkofboot</c> bagi anda. <c>mkofboot</c> digunakan
untuk mem-format partisi bootstrap, dan menginstal file konfigurasi yaboot
ke dalamnya.
</p>

<p>
Anda mungkin ingin memastikan lagi isi dari file <path>/etc/yaboot.conf</path>.
Jika anda membuat perubahan pada file <path>/etc/yaboot.conf</path> (mis.
set OS default/boot), pastikan untuk menjalankan lagi <c>ybin -v</c> untuk
menerapkan perubahan anda ke partisi bootstrap.
</p>

<p>
Sekarang lanjutkan ke <uri link="?part=1&amp;chap=10">Menginstal
Utilitas-utilitas Sistem yang Diperlukan</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Alternatif: Konfigurasi yaBoot Secara Manual</title>
<body>

<p>
Pertama-tama, pastikan bahwa anda memiliki versi <c>yaboot</c> terbaru
terinstal pada sistem anda.
</p>

<pre caption = "Menginstal yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Di bawah ini, anda akan menemukan sebuah file <path>yaboot.conf</path>
yang lengkap. Ubahlah sesuai keinginan anda. Pengguna G5 seharusnya tahu
bahwa disk mereka adalah Serial ATA yang dikenali sebagai disk SCSI oleh
kernel Linux (jadi, gantikan <path>/dev/hda</path> dengan
<path>/dev/sda</path>).
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## jalankan: "man yaboot.conf" untuk informasi lebih lanjut. Jangan membuat perubahan kecuali harus!!
## lihat juga: /usr/share/doc/yaboot/examples untuk contoh-contoh konfigurasi.
##
## Untuk menu dual-boot, tambahkan satu atau lebih:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## partisi bootstrap kita:</comment>

boot=/dev/hda9

<comment>## ofboot adalah cara openfirmware meng-spesifikasi partisi bootstrap
## Jika ini tidak terdefenisi, yaboot akan gagal berfungsi di sistem G5 (kecuali anda
## menambahkan argumen-argumen yang diperlukan ke program mkofboot/ybin).
## hd:X berarti /dev/sdaX (atau /dev/hdaX).
## 
## Pengguna G5 sebaiknya menghapus tanda komentar baris ini!!

#ofboot=hd:9</comment>

<comment>## hd: adalah istilah open firmware untuk hda</comment>
device=hd:
partition=11

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Seksi ini dapat diduplikasi jika anda memiliki lebih dari satu kernel atau
## satu set opsi-opsi boot
#################</comment>
image=/boot/vmlinux
  label=Linux
  root=/dev/hda11
  sysmap=/boot/System.map
  read-only
<comment>##################</comment>

<comment>## Pengguna G5 sebaiknya mengeset
##   macos=hd:13
##   macosx=hd:12
## daripada nilai-nilai contoh.</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Setelah <path>yaboot.conf</path> terkonfigurasi sesuai keinginan anda, anda
dapat menjalankan <c>mkofboot -v</c> untuk menginstal setting-setting tersebut
di partisi bootstrap. <e>Jangan lupakan ini!</e> Jika semua berlangsung lancar,
dan anda memiliki opsi-opsi yang sama seperti contoh di atas, proses reboot
berikutnya akan memberikan anda menu sederhana dengan lima pilihan. Jika
anda mengupdate konfigurasi yaboot nantinya, anda hanya perlu menjalankan
<c>ybin -v</c> untuk mengupdate partisi bootstrap - <c>mkofboot</c> hanya
digunakan pada setup pertama saja.
</p>

<p>
Untuk informasi lebih lanjut tentang yaboot, silahkan kunjungi <uri
link="http://penguinppc.org/projects/yaboot">proyek yaboot</uri>. Untuk
saat ini, lanjutkan proses instalasi ke <uri link="?part=1&amp;chap=10">
Menginstal Utilitas-utilitas Sistem yang Diperlukan</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatif: BootX</title>
<body>

<impo>
BootX hanya dapat digunakan pada sistem berbasis PPC OldWorld!
</impo>

<p>
Jika anda ingin menggunakan BootX, maka anda tidak perlu melakukan apa-apa
saat ini. Tetapi, setelah reboot, anda perlu melakukan beberapa konfigurasi
di control panel BootX (di dalam MacOS). Kita akan mendiskusikan hal ini lagi
nantinya.
</p>

<p>
Sekarang, lanjutkan ke <uri link="?part=1&amp;chap=10">Menginstal
Utilitas-utilitas Sistem yang Diperlukan</uri>.
</p>

</body>
</section>
<section>
<title>Alternatif: MIPS PROM</title>
<subsection>
<body>

<p>
MIPS tidak mengharuskan anda menginstal sebuah bootloader. MIPS PROM
menangani proses boot, tetapi anda perlu menginstal kernel anda sebagai
opsi cadangan.
</p>

<p>
Pertama, instal paket <c>dvhtool</c>, yang diperlukan untuk meng-copy
kernel ke SGI Volume Header.
</p>

<pre caption="Menginstal dvhtool">
# <i>emerge dvhtool</i>
</pre>

<p>
Sekarang copy-lah kernel ke SGI Volume Header. Secara default, <c>dvhtool</c>
mengasumsikan kalau SGI Volume Header berada di partisi <path>/dev/sda</path>.
Jika hal ini tidak benar (mis. jika IRIX diinstal di <path>/dev/sda</path> dan
Gentoo/MIPS di <path>/dev/sdb</path>) anda perlu memberitahu <c>dvhtool</c>
dengan menggunakan argumen <c>-d &lt;device&gt;</c>.
</p>

<pre caption="Copy sebuah kernel ke SGI Volume Header">
# <i>dvhtool --unix-to-vh &lt;nama kernel di /boot&gt; &lt;mana yang ingin ada berikan di volume header&gt;</i>
</pre>

<p>
Jika anda ingin melihat semua pilihan-pilihan yang tersedia di volume, gunakan
<c>--print-volume-directory</c>:
</p>

<pre caption="Melihat semua pilihan yang tersedia di volume">
# <i>dvhtool --print-volume-directory</i>
</pre>

<p>
Untuk men-setup sistem anda agar boot ke Gentoo/MIPS, anda perlu melakukan
beberapa konfigurasi di MIPS PROM. Kami akan menjelaskannya nanti setelah
proses instalasi selesai.
</p>

<p>
Sekarang lanjutkan ke <uri link="?part=1&amp;chap=10">Menginstal
Utilitas-utilitas Sistem yang Diperlukan</uri>.
</p>

</body>
</subsection>
</section>
</sections>
