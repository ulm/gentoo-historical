<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>9.0</version>
<date>2008-04-01</date>

<section>
<title>Zona Waktu (Timezone)</title>
<body>

<p>
Pertama, anda perlu memilih zona waktu anda dari
<path>/usr/share/zoneinfo</path>, lalu salin ke <path>/etc/localtime</path> dan
tetapkan di <path>/etc/conf.d/clock</path>. Hindari penggunaan zona waktu
<path>/usr/share/zoneinfo/Etc/GMT*</path> karena namanya tidak mengindikasikan
zona yang diharapkan. Misalnya, <path>GMT-8</path> sesungguhnya adalah GMT+8.
</p>

<pre caption="Mengatur zona waktu">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Misalnya anda ingin menggunakan Jakarta)</comment>
# <i>nano -w /etc/conf.d/clock</i>
TIMEZONE="Asia/Jakarta"
# <i>cp /usr/share/zoneinfo/Asia/Jakarta /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalasi Source Kernel</title>
<subsection>
<title>Memilih Kernel</title>
<body>

<p>
Inti/Jantung dari semua distro adalah kernel Linux. Kernel merupakan sebuah
lapisan antara program-program pengguna dengan perangkat keras sistem.
Gentoo menyediakan beberapa kernel kepada para penggunanya. Sebuah daftar
lengkap beserta penjelasannya bis anda dapatkan di <uri
link="/doc/id/gentoo-kernel.xml">Panduan Kernel Gentoo</uri>.
</p>

<p>
Sistem berbasis MIPS hanya memiliki satu pilihan kernel, yaitu
<c>mips-sources</c>. Kumpulan <e>patch</e> di paket ini berbeda dengan yang
terdapat pada paket kernel untuk arsitektur lain, karena berisi banyak sekali
<e>patch</e> khusus untuk arsitektur MIPS.
</p>

<pre caption="Instalasi source kernel">
<comment>(Ekstrak &amp; instal source kernel)</comment>
# <i>emerge mips-sources</i>
</pre>

<impo>
Pada sistem Origin 200/2000, Indigo2 Impact (R10000), Octane/Octane2
dan O2, diperlukan kernel 64-bit agar sistem dapat boot. Untuk komputer-komputer
ini, anda harus menjalankan <c>emerge kgcc64</c> untuk menciptakan
<e>cross-compiler</e> yang akan digunakan untuk membangun kernel 64-bit.
</impo>

<pre caption="Instalasi kgcc64...">
# <i>emerge kgcc64</i>
</pre>

<p>
Jika anda melihat ke direktori <path>/usr/src</path>, anda akan menemukan
sebuah link simbolik (symlink) bernama <path>linux</path> yang menunjuk
ke source kernel. Pada contoh ini, source kernel yang terinstal adalah
<c>mips-sources-<keyval id="kernel-version"/></c>. Versi kernel anda mungkin
berbeda, jadi ingatlah ini selalu.
</p>

<pre caption="Melihat symlink kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
Sekarang saatnya untuk mengkonfigurasi dan kompilasi kernel anda.
</p>

</body>
</subsection>
</section>
<section>
<title>Kompilasi &amp; Instalasi Kernel</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Dahulu, kami menggunakan konfigurasi manual untuk mengkonfigurasi kernel.
Tetapi sekarang hal ini sudah tidak praktis lagi karena banyaknya sistem
yang kami dukung. Seksi ini menjelaskan beberapa contoh sumber konfigurasi
kernel.
</p>

</body>
</subsection>
<subsection>
<title>Menggunakan contoh konfigurasi yang ada di source kernel</title>
<body>

<p>
Banyak sistem yang telah diberikan contoh file <path>.config</path> yang
tersembunyi di dalam source kernel. Tidak semua sistem diberikan file ini
dengan cara yang sama. Bagi sistem yang diberikan, anda dapat
mengkonfigurasinya dengan menggunakan perintah-perintah pada tabel berikut ini:
</p>

<table>
<tr>
  <th>Sistem</th>
  <th>Perintah konfigurasi</th>
</tr>
<tr>
  <ti>Server Cobalt</ti>
  <ti><c>make cobalt_defconfig</c></ti>
</tr>
<tr>
  <ti>Indy, Indigo2 (R4k), Challenge S</ti>
  <ti><c>make ip22_defconfig</c></ti>
</tr>
<tr>
  <ti>Origin 200/2000</ti>
  <ti><c>make ip27_defconfig</c></ti>
</tr>
<tr>
  <ti>Indigo2 Impact (R10k)</ti>
  <ti>
    <c>make ip28_defconfig</c>
  </ti>
</tr>
<tr>
  <ti>O2</ti>
  <ti><c>make ip32_defconfig</c></ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>
  Menggunakan konfigurasi kernel yang sedang digunakan dari media instalasi
</title>
<body>

<p>
Semua imej instalasi Gentoo menyediakan opsi-opsi konfigurasi kernel sebagai
bagian dari imej itu sendiri, berupa file <path>/proc/config.gz</path>.
File ini dapat digunakan pada banyak kasus. Sangat baik digunakan jika versi
kernel anda dekat dengan kernel CD. Untuk menyalinnya, jalankan perintah
berikut ini:
</p>

<pre caption="Ekstrak .config dari /proc/config.gz">
# <i>zcat /proc/config.gz > .config</i>
</pre>

<impo>
Konfigurasi kernel ini diatur untuk imej netboot. Artinya, filesystem root
akan dicari di suatu tempat yang dekat, berupa direktori atau initramfs, atau
device loopback untuk initrd. Ketika anda menjalankan <c>make menuconfig</c>
nanti, jangan lupa untuk masuk ke menu "General Setup" dan nonaktifkan opsi
untuk initramfs.
</impo>

</body>
</subsection>
<subsection>
<title>Database Kompatibilitas Hardware</title>
<body>

<p>
Agar anda lebih mudah mendapatkan pengaturan yang bagus, kami telah menyusun
database kompatibilitas hardware. Database ini berisi dukungan untuk berbagai
perangkat MIPS, dan mempersilahkan para pengguna untuk mengirimkan konfigurasi
kernel yang diketahui dapat berfungsi dengan baik. Alamat website ini adalah
<uri>http://stuartl.longlandclan.hopto.org/gentoo/mips</uri>.
</p>

<p>
Jika menurut anda layanan ini berguna, kami sangat mengharapkan kontribusi
anda berupa catatan-catatan dan file <path>.config</path> agar pengguna lain
dapat merasakan manfaat dari pengalaman anda. Namun perlu dicatat bahwa kami
tidak menjamin semua file yang terdapat di website ini bagus.
</p>

</body>
</subsection>
<subsection>
<title>Menyesuaikan konfigurasi dengan kebutuhan anda</title>
<body>

<p>
Setelah anda menemukan sebuah konfigurasi, download file tersebut ke direktori
kernel anda lalu ganti namanya menjadi <path>.config</path>. Dari sana, anda
dapat menjalankan <c>make oldconfig</c> untuk memperbarui semua konfigurasi dan
menyesuaikannya sebelum memulai konfigurasi.
</p>

<pre caption="Konfigurasi kernel">
# <i>cd /usr/src/linux</i>
# <i>cp /path/to/example-config .config</i>
# <i>make oldconfig</i>
<comment>(Tekan ENTER pada setiap pertanyaan untuk menerima default... kita akan menyesuaikannya nanti)</comment>
# <i>make menuconfig</i>
</pre>

<impo>
Pada menu "Kernel Hacking" terdapat opsi "Are You Using A Cross Compiler?".
Opsi ini memerintahkan kernel untuk menambahkan "<c>mips-linux-</c>" (atau
<c>mipsel-linux</c> ... dll) ke perintah <c>gcc</c> dan <c>as</c> ketika kernel
dikompilasi. Opsi ini harus dinonaktifkan, walaupun anda melakukan
<e>cross-compiling</e>. Sebaliknya, jika anda perlu memanggil
<e>cross-compiler</e>, tentukan awalan dengan variabel <c>CROSS_COMPILE</c>
seperti ditunjukkan pada seksi berikut.
</impo>

<impo>
Ada masalah yang diketahui dengan JFS dan ALSA pada sistem Octane, di mana ALSA
tidak bisa berfungsi. Karena sifat asli JFS yang masih dalam tahap pengujian di
MIPS kami anjurkan anda untuk menghindari penggunaan JFS.
</impo>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilasi dan Instalasi</title>
<body>

<p>
Sekarang kernel anda telah dikonfigurasi, saatnya untuk mengkompilasi dan
menginstalnya. Keluar dari menu konfigurasi lalu mulalilah proses kompilasi:
</p>

<note>
Pada komputer 64-bit, anda perlu menentukan
<c>CROSS_COMPILE=mips64-unknown-linux-gnu-</c> (atau <c>mips64el-...</c>
pada sistem <e>little-endian</e>) untuk menggunakan compiler 64-bit.
</note>

<pre caption="Kompilasi kernel">
# <i>make vmlinux modules modules_install</i>

<comment>(cross-compiling di komputer target)</comment>
<comment>(Sesuaikan mips64-unknown-linux-gnu- )</comment>
# <i>make vmlinux modules modules_install CROSS_COMPILE=mips64-unknown-linux-gnu-</i>

<comment>(Ketika melakukan kompilasi di komputer lain, seperti x86... gunakan)</comment>
<comment>(perintah-perintah berikut untuk mengkompilasi kernel &amp; dan menginstal)</comment>
<comment>(modul-modul ke suatu direktori yang nanti akan dipindahkan ke komputer target)</comment>
# <i>make vmlinux modules CROSS_COMPILE=mips64-unknown-linux-gnu-</i>
# <i>make modules_install INSTALL_MOD_PATH=/somewhere</i>
</pre>

<impo>
Ketika mengkompilasi kernel 64-bit untuk Indy, Indigo2 (R4k), Challenge S dan
O2, gunakan target <c>vmlinux.32</c>, bukan <c>vmlinux</c>. Jika tidak,
komputer anda tidak akan bisa boot. Hal ini untuk menyiasati PROM yang tidak
memahami format ELF64.
</impo>

<pre caption="Menggunakan target vmlinux.32">
# <i>make vmlinux.32</i>
<comment>(Ini akan menciptakan vmlinux.32 -- kernel akhir anda)</comment>
</pre>

<p>
Ketika kernel telah selesai dikompilasi, salin imej kernel ke
<path>/boot</path>.
</p>

<note>
Pada server Cobalt, bootloader akan mencari imej kernel yang telah dipadatkan.
Jangan upa untuk meng- <c>gzip -9</c> file jika sudah disalin ke
<path>/boot</path>.
</note>

<pre caption="Instalasi kernel">
# <i>cp vmlinux /boot/kernel-<keyval id="kernel-version"/></i>

<comment>(Server Cobalt -- Memadatkan imej kernel)</comment>
# <i>gzip -9v /boot/kernel-<keyval id="kernel-version"/></i>
</pre>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Modul-modul Kernel</title>
<subsection>
<include href="hb-install-kernelmodules.xml"/>
</subsection>

</section>
</sections>
