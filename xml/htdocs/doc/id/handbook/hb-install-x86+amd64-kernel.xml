<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: hb-install-x86+amd64-kernel.xml,v 1.8 2007/08/16 13:23:56 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<abstract>
Kernel Linux adalah jantung dari setiap distro. Bab ini menjelaskan
cara mengkonfigurasi kernel.
</abstract>

<version>5.3</version>
<date>2007-07-29</date>

<section>
<title>Zona Waktu (Timezone)</title>
<body>

<p>
Pertama, anda perlu memilih zona waktu anda dari
<path>/usr/share/zoneinfo</path>, lalu salin ke <path>/etc/localtime</path> dan
tetapkan di <path>/etc/conf.d/clock</path>. Hindari penggunaan zona waktu
<path>/usr/share/zoneinfo/Etc/GMT*</path> karena namanya tidak mengindikasikan
zona yang diharapkan. Misalnya, <path>GMT-8</path> sesungguhnya adalah GMT+8.
</p>

<pre caption="Mengatur zona waktu">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Misalnya anda ingin menggunakan Jakarta)</comment>
# <i>nano -w /etc/conf.d/clock</i>
TIMEZONE="Asia/Jakarta"
# <i>cp /usr/share/zoneinfo/Asia/Jakarta /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalasi Source Kernel</title>
<subsection>
<title>Memilih kernel</title>
<body>

<p>
Inti/jantung dari semua distro adalah kernel Linux. Kernel merupakan sebuah
lapisan antara program-program pengguna dengan hardware sistem. Gentoo
menyediakan beberapa kernel kepada para penggunanya. Sebuah daftar lengkap
beserta penjelasannya bisa anda dapatkan di <uri
link="/doc/id/gentoo-kernel.xml">Panduan Kernel Gentoo</uri>.
</p>

<p test="func:keyval('arch')='x86'">
Untuk sistem berbasis x86 Gentoo menyediakan, di antara kernel-kernel lainnya,
<c>gentoo-sources</c> (kernel yang telah ditambal dengan fitur-fitur peningkat
performa),  ...
</p>

<p test="func:keyval('arch')='AMD64'">
Untuk sistem AMD64 kami menyediakan <c>gentoo-sources</c> (kernel 2.6 yang
telah ditambal dengan sejumlah perbaikan khusus untuk stabilitas sistem,
performa, dan dukungan hardware AMD64).
</p>

<p>
Pilihlah kernel anda lalu instal dengan perintah <c>emerge</c>.
</p>

<pre caption="Instalasi kernel">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Jika anda melihat isi direktori <path>/usr/src</path>, anda akan menemukan
link simbolik (symlink) bernama <path>linux</path> yang menunjuk ke kernel
<c>gentoo-sources-<keyval id="kernel-version"/></c>. Versi anda mungkin
berbeda, jadi ingatlah ini.
</p>

<pre caption="Melihat symlink kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
Sekarang saatnya untuk mengkonfigurasi dan kompilasi kernel. Anda dapat
menggunakan <c>genkernel</c> untuk melakukannya, yang akan menciptakan sebuah
kernel generik seperti yang digunakan oleh CD Instalasi. Kami akan menjelaskan
cara konfigurasi secara "manual" dahulu, karena cara ini adalah cara terbaik
untuk mengoptimasi sistem anda.
</p>

<p>
Jika anda ingin mengkonfigurasi kernel anda secara manual, lanjutkan ke
<uri link="#manual">Default: Konfigurasi Manual</uri>. Jika anda ingin
menggunakan <c>genkernel</c>, sebaiknya anda membaca bagian <uri
link="#genkernel">Alternatif: Menggunakan genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Default: Konfigurasi Manual</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Konfigurasi kernel secara manual sering dianggap sebagai langkah tersulit yang
harus dijalankan oleh setiap pengguna Linux. Memang benar -- setelah
mengkonfigurasi beberapa kernel, anda tidak akan lagi ingat bahwa cara
tersebut sulit ;-)
</p>

<p>
Bagaimanapun juga, satu hal <e>selalu</e> benar: anda harus mengenal sistem
anda sebelum mulai mengkonfigurasi kernel secara manual. Banyak informasi yang
bisa anda dapatkan dengan menginstal pciutils (<c>emerge pciutils</c>) yang
berisi <c>lspci</c>. Anda juga dapat menggunakan <c>lspci</c> dari dalam
lingkungan chroot. Abaikan saja peringatan <e>pcilib</e> (seperti <e>pcilib:
cannot open /sys/bus/pci/devices</e>) yang diberikan oleh <c>lspci</c>. Anda
juga dapat menggunakan <c>lspci</c> dari lingkungan <e>non-chroot</e>. Hasilnya
sama saja. Selain itu, anda juga dapat menjalankan <c>lsmod</c> untuk melihat
modul kernel apa saja yang digunakan oleh CD Instalasi (tampilan tersebut
mungkin memberi gambaran bagi anda tentang opsi apa saja yang harus
diaktifkan).
</p>

<p>
Sekarang, masuklah ke direktori kernel anda dan jalankan <c>make
menuconfig</c>. Perintah ini akan menjalankan menu konfigurasi berbasis
ncurses.
</p>

<pre caption="Menjalankan menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Anda akan menemukan beberapa seksi konfigurasi. Pertama kami akan menjelaskan
beberapa opsi yang harus anda aktifkan (jika tidak, Gentoo tidak dapat berjalan
dengan benar tanpa tweak tambahan).
</p>

</body>
</subsection>
<subsection>
<title>Mengaktifkan opsi-opsi yang diperlukan</title>
<body>

<p>
Pertama, aktifkan penggunaan <c>development and experimental code/drivers</c>.
Anda memerlukannya, jika tidak, beberapa kode/driver yang sangat penting tidak
akan ditampilkan:
</p>

<pre caption="Memilih code/driver eksperimental">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Pastikan agar setiap driver yang diperlukan untuk mem-boot sistem anda
(mis. SCSI Controller, ...) dikompilasi <e>di</e> kernel, dan bukan
sebagai modul, jika tidak, sistem anda tidak akan bisa boot dengan sempurna.
</p>

</body>
<body test="func:keyval('arch')='AMD64'">

<p>
Kemudian kita harus memilih tipe prosesor yang tepat. Para pengurus kernel
x86_64 sangat menganjurkan untuk mengaktifkan fitur-fitur MCE agar mereka bisa
tahu jika ada permasalahan dengan hardware. Di x86_64, error-error ini tidak
akan ditampilkan ke <c>dmesg</c> seperti di arsitektur lain, tapi ke
<path>/dev/mcelog</path>. Untuk itu diperlukan paket <c>app-admin/mcelog</c>.
</p>

<pre caption="Memilih tipe prosesor dan fitur-fitur">
Processor type and features  --->
   [ ] Intel MCE Features
   [ ] AMD MCE Features
Processor family (AMD-Opteron/Athlon64)  --->
   ( ) AMD-Opteron/Athlon64
   ( ) Intel EM64T
   ( ) Generic-x86-64
</pre>

</body>
<body test="func:keyval('arch')='x86'">

<p>
Sekarang pilih tipe prosesor yang tepat:
</p>

<pre caption="Memilih tipe prosesor yang tepat">
Processor type and features ---&gt;
  <comment>(Gantikan sesuai sistem anda)</comment>
  (<i>Athlon/Duron/K7</i>) Processor family
</pre>

</body>
<body>

<p>
Sekarang masuklah ke <c>File Systems</c> dan aktifkan dukungan untuk
filesystem yang anda gunakan. <e>Jangan</e> kompilasi dukungan tersebut
sebagai modul, jika tidak, sistem Gentoo anda tidak akan dapat me-mount
partisi-partisi anda. Aktifkan juga <c>Virtual memory</c> dan <c>/proc file
system</c>.
</p>

</body>
<body test="func:keyval('arch')='x86'">

<pre caption="Memilih filesystem yang diperlukan">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Aktifkan satu atau lebih opsi-opsi berikut sesuai dengan kebutuhan sistem anda)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<pre caption="Memilih filesystem yang diperlukan">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Aktifkan satu atau lebih opsi-opsi berikut sesuai dengan kebutuhan sistem anda)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

</body>
<body>

<p>
Jangan lupa mengaktifkan DMA untuk drive-drive anda:
</p>

<pre caption="Aktivasi DMA">
  Device Drivers ---&gt;
  ATA/ATAPI/MFM/RLL support ---&gt;
  [*] Generic PCI bus-master DMA support
  [*]   Use PCI DMA by default when available
</pre>

<p>
Jika anda menggunakan PPPoE untuk koneksi internet atau modem dial-up,
anda memerlukan opsi-opsi berikut di kernel:
</p>

<pre caption="Memilih driver-driver PPPoE yang diperlukan" test="func:keyval('arch')='AMD64'">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Kedua opsi kompresi tidak berbahaya tetapi tidak benar-benar diperlukan, begitu
juga dengan opsi <c>PPP over Ethernet</c>, opsi-opsi tersebut mungkin hanya
digunakan oleh <c>ppp</c> jika dikonfigurasi untuk melakukan koneksi PPPoE modus
kernel.
</p>

<p>
Jika anda memerlukannya, jangan lupa untuk mengikutsertakan dukungan kernel
untuk kartu jaringan anda.
</p>

<p test="func:keyval('arch')='x86'">
Jika anda memiliki prosesor Intel yang mendukung HyperThreading(tm), atau
anda memiliki sistem multi-CPU, anda sebaiknya mengaktifkan "Symmetric
multi-processing support":
</p>

<p test="func:keyval('arch')='AMD64'">
Jika anda memiliki multi-CPU Opteron atau multi-core (misal AMD64 X2), anda harus
mengaktifkan "Symmetric multi-processing support":
</p>

<pre caption="Aktivasi dukungan SMP">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<note>
Pada sistem multi-core, setiap core dianggap sebagai satu prosesor.
</note>

<p>
Jika anda menggunakan perangkat input USB (seperti Keyboard atau Mouse),
jangan lupa untuk mengaktifkan dukungannya juga:
</p>

<pre caption="Aktivasi dukungan USB untuk Perangkat Input">
Device Drivers ---&gt;
  USB Support ---&gt;
    &lt;*&gt;   USB Human Interface Device (full HID) support
</pre>

</body>
<body test="func:keyval('arch')='x86'">

<p>
Bagi pengguna PCMCIA, jangan lupa juga untuk mengaktifkan dukungan untuk
kartu bridge PCMCIA yang ada di sistem anda:
</p>

<pre caption="Aktivasi dukungan PCMCIA">
Bus options (PCI, PCMCIA, EISA, MCA, ISA)  ---&gt;
  PCCARD (PCMCIA/CardBus) support  ---&gt;
    &lt;*&gt; PCCard (PCMCIA/CardBus) support
<comment>(pilih 16 bit jika anda memerlukan dukungan untuk kartu PCMCIA lama, kebanyakan pengguna menginginkan ini.)</comment>
    &lt;*&gt;   16-bit PCMCIA support
    [*]   32-bit CardBus support
<comment>(pilih bridges yang sesuai di bawah ini)</comment>
    --- PC-card bridges
    &lt;*&gt; CardBus yenta-compatible bridge support (NEW)
    &lt;*&gt; Cirrus PD6729 compatible bridge support (NEW)
    &lt;*&gt; i82092 compatible bridge support (NEW)
    &lt;*&gt; i82365 compatible bridge support (NEW)
    &lt;*&gt; Databook TCIC host bridge support (NEW)
</pre>

<p>
Setelah anda selesai mengkonfigurasi kernel, lanjutkan ke <uri
link="#compiling">Kompilasi dan instalasi kernel</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilasi dan instalasi kernel</title>
<body>

<p>
Setelah kernel anda dikonfigurasi, sekarang saatnya untuk mengkompilasi dan
menginstalnya. Keluarlah dari menu konfigurasi dan mulailah proses kompilasi:
</p>

<pre caption="Kompilasi kernel"> 
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Setelah kernel selesai dikompilasi, salin imej kernel tersebut ke
<path>/boot</path>. Gunakan nama apapun yang anda rasa cocok untuk pilihan anda
dan ingatlah karena anda akan memerlukannya nanti pada saat mengkonfigurasi
bootloader. Jangan lupa untuk mengganti <c><keyval id="nama-kernel"/></c>
dengan nama dan versi kernel anda.
</p>

<pre caption="Instalasi kernel">
# <i>cp arch/<keyval id="arch-sub"/>/boot/bzImage /boot/<keyval id="nama-kernel"/></i>
</pre>

<p>
Sekarang lanjutkan dengan <uri link="#kernel_modules">Modul-Modul Kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternatif: Menggunakan genkernel</title>
<body>

<p>
Jika anda membaca bagian ini, berarti anda memilih menggunakan skrip
<c>genkernel</c> kami untuk mengkonfigurasi kernel bagi anda.
</p>

<p>
Setelah source kernel anda terinstal, sekarang saatnya untuk mengkompilasi
kernel anda dengan skrip <c>genkernel</c> kami untuk membangun kernel secara
otomatis. <c>genkernel</c> bekerja dengan mengkonfigurasi kernel yang hampir
sama dengan cara kernel CD Instalasi kami dikonfigurasi. Hal ini berarti, jika
anda menggunakan <c>genkernel</c> untuk membangun kernel, sistem anda akan
secara umum mendeteksi semua perangkat keras anda pada saat boot, seperti yang
dilakukan oleh CD Instalasi kami. Karena genkernel tidak memerlukan konfigurasi
kernel secara manual, cara ini merupakan cara yang ideal bagi para pengguna
yang belum terbiasa mengkompilasi kernel mereka sendiri.
</p>

<p>
Sekarang, mari kita lihat cara menggunakan genkernel. Pertama, emerge paket
genkernel:
</p>

<pre caption="Emerge genkernel">
# <i>emerge genkernel</i>
</pre>

</body>
<body test="func:keyval('arch')='x86'">

<p>
Kemudian, salinlah konfigurasi kernel yang digunakan oleh CD Instalasi ke
lokasi yang akan diperiksa oleh genkernel sebagai konfigurasi default kernel.
</p>

<pre caption="Menyalin konfigurasi kernel CD Instalasi">
# <i>zcat /proc/config.gz &gt; /usr/share/genkernel/x86/kernel-config-2.6</i>
</pre>

</body>
<body>

<p>
Lalu, kompilasilah kernel anda dengan menjalankan perintah <c>genkernel
all</c>. Perlu diketahui juga, karena <c>genkernel</c> mengkompilasi kernel
yang mendukung hampir semua perangkat keras, kompilasi ini akan berjalan
cukup lama!
</p>

<p>
Catat juga, jika partisi boot anda tidak menggunakan ext2 atau ext3 sebagai
filesystem-nya, anda mungkin perlu mengkonfigurasi kernel anda secara manual
menggunakan perintah <c>genkernel --menuconfig all</c> dan tambahkan dukungan
untuk filesystem anda <e>di</e> kernel (<e>bukan</e> sebagai modul). Pengguna
EVMS2 atau LVM2 mungkin juga ingin menambahkan <c>--evms2</c> atau
<c>--lvm2</c> sebagai argumen.
</p>

<pre caption="Menjalankan genkernel">
# <i>genkernel all</i>
</pre>

<p>
Setelah <c>genkernel</c> selesai, sebuah kernel, kumpulan lengkap modul, dan
<e>initial root disk</e> (initrd) akan diciptakan. Kita akan menggunakan kernel
dan initrd tersebut pada saat mengkonfigurasi bootloader nantinya. Catat nama
kernel dan initrd ini karena anda akan memerlukannya nanti pada saat menulis
file konfigurasi bootloader. initrd akan dijalankan secara otomatis pada saat
boot untuk melakukan otodeteksi perangkat keras (hardware) (seperti CD
Instalasi) sebelum sistem "asli" dijalankan.
</p>

<pre caption="Memeriksa nama kernel dan initrd yang baru diciptakan">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Modul-Modul Kernel</title>
<subsection>
<title>Konfigurasi modul-modul</title>
<body>

<p>
Anda harus menuliskan semua modul yang ingin anda muat secara otomatis di file
<path>/etc/modules.autoload.d/kernel-2.6</path>). Anda juga dapat menambahkan
opsi-opsi tambahan pada modul-modul tersebut jika anda mau.
</p>

<p>
Untuk melihat modul apa saja yang tersedia, jalankan perintah berikut.
</p>

<pre caption="Melihat modul yang tersedia">
# <i>modprobe -i</i>
</pre>

<p>
Misalnya, untuk memuat modul <c>3c59x.ko</c> secara otomatis, edit file
<path>kernel-2.6</path> dan tuliskan nama modul tersebut di dalamnya.
</p>

<pre caption="Edit file /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Lanjutkan proses instalasi dengan bab <uri
link="?part=1&amp;chap=8">Konfigurasi Sistem</uri>.
</p>

</body>
</subsection>
</section>
</sections>
