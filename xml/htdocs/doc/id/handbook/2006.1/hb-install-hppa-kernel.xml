<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: hb-install-hppa-kernel.xml,v 1.2 2007/03/27 11:06:01 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>
  
<version>7.3</version>
<date>2007-03-12</date>

<section>
<title>Zona Waktu (Timezone)</title>
<body>

<p>
Pertama, anda perlu memilih zona waktu anda agar sistem anda tahu dimana
dia berada. Carilah zona waktu anda di <path>/usr/share/zoneinfo</path>,
salinlah ke <path>/etc/localtime</path>. Hindari penggunaan zona waktu
<path>/usr/share/zoneinfo/Etc/GMT*</path> karena namanya tidak mengindikasikan
zona yang diharapkan. Misalnya, <path>GMT-8</path> sesungguhnya adalah GMT+8.
</p>

<pre caption="Set informasi zona waktu">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Misalnya anda ingin menggunakan GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instalasi Source</title>
<subsection>
<title>Memilih Sebuah Kernel</title>
<body>

<p>
Inti/Jantung dari semua distro adalah kernel Linux. Kernel merupakan sebuah
lapisan antara program-program pengguna dengan perangkat keras sistem.
Gentoo menyediakan beberapa kernel kepada para penggunanya. Sebuah daftar
lengkap beserta penjelasannya dapat ditemui di <uri
link="/doc/id/gentoo-kernel.xml">Panduan Kernel Gentoo</uri>.
</p>

<p>
Untuk HPPA, kami menyediakan <c>hppa-sources</c>. Secara default, source ini
berbasis kernel seri 2.6. Jika anda ingin menginstal seri 2.4, anda harus
menginstal Gentoo dengan koneksi internet karena kami tidak menyediakan source
kernel 2.4 di CD Instalasi kami. Lanjutkan dengan instalasi source kernel.
<c>USE="-doc"</c> diperlukan untuk menghindari instalasi xorg-x11 atau
dependensi/ketergantungan lain untuk saati ini. <c>USE="symlink"</c> tidak
diperlukan untuk instalasi baru, tapi pastikan anda menciptakan symlink
<path>/usr/src/linux</path> yang benar.
</p>

<pre caption="Instal sebuah kernel">
# <i>USE="-doc symlink" emerge hppa-sources</i>
</pre>

<p>
Jika anda melihat ke direktori <path>/usr/src</path>, anda akan menemukan
sebuah link simbolik (symlink) bernama <path>linux</path> yang menunjuk
ke kernel anda. Pada kasus ini, source kernel yang terinstall menunjuk ke
<c>hppa-sources-2.6.16.18-pa11</c>. Versi yang anda miliki bisa jadi berbeda,
jadi ingatlah ini selalu.
</p>

<pre caption="Melihat link simbolik kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; hppa-sources-2.6.16.18-pa11
</pre>

<p>
Sekarang saatnya untuk mengkonfigurasi dan kompilasi kernel anda. Semua
arsitektur dapat menggunakan <c>genkernel</c> untuk melakukannya, yang akan
menciptakan sebuah kernel generik seperti yang digunakan oleh CD Instalasi.
Kami akan menjelaskan cara konfigurasi secara "manual" dahulu, karena cara
ini adalah cara terbaik untuk mengoptimasi sistem anda.
</p>

<p>
Jika anda ingin mengkonfigurasi kernel anda secara manual, lanjutkan ke <uri
link="#manual">Default: Konfigurasi Manual</uri>. Jika anda ingin
menggunakan <c>genkernel</c>, anda sebaiknya membaca bagian <uri
link="#genkernel">Alternatif: Menggunakan genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Default: Konfigurasi Manual</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Konfigurasi kernel secara manual tampaknya adalah prosedur tersulit yang
harus dilakukan oleh setiap pengguna Linux. Memang benar -- setelah
mengkonfigurasi beberapa kernel, anda tidak akan lagi ingat bahwa cara
tersebut sulit ;-)
</p>

<p>
Bagaimanapun juga, satu hal <e>selalu</e> benar: anda harus mengenal sistem
anda sebelum mulai mengkonfigurasi kernel secara manual. Kebanyakan informasi
dapat ditemukan dengan menginstall pciutils (<c>emerge pciutils</c>) yang
berisi <c>lspci</c>. Anda sekarang bisa menggunakan <c>lspci</c> dari dalam
lingkungan chroot. Biarkan saja peringatan <e>pcilib</e> (seperti pcilib:
cannot open /sys/bus/pci/devices) yang dikeluarkan oleh <c>lspci</c>. Anda
dapat juga menggunakan <c>lspci</c> dari lingkungan <e>non-chroot</e>. Hasilnya
sama saja. Anda dapat juga menjalankan <c>lsmod</c> untuk melihat modul kernel
apa saja yang digunakan oleh CD Instalasi (tampilan tersebut mungkin memberi
gambaran bagi anda apa saja yang harus diaktifkan).
</p>

<p>
Sekarang, masuklah ke direktori kernel anda dan jalankan <c>make
menuconfig</c>. Perintah ini akan menjalankan menu konfigurasi berbasis
ncurses.
</p>

<pre caption="Menjalankan menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Anda akan menemukan beberapa seksi konfigurasi. Kami pertama-tama akan
menjelaskan beberapa opsi yang harus anda aktifkan (jika tidak, Gentoo tidak
dapat berjalan dengan benar tanpa tweak tambahan).
</p>

</body>
</subsection>
<subsection>
<title>Mengaktifkan Opsi-Opsi yang Diperlukan</title>
<body>

<p>
Pertama, aktifkan penggunaan "development and experimental code/drivers".
Anda memerlukannya, jika tidak, beberapa code/driver yang sangat penting
tidak akan ditampilkan:
</p>

<pre caption="Memilih code/driver eksperimental">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
General setup --->
  [*] Support for hot-pluggable devices
</pre>

<p>
Sekarang masuklah ke <c>File Systems</c> dan aktifkan dukungan terhadap
filesystem yang anda gunakan. <e>Jangan</e> kompilasi dukungan tersebut
sebagai modul, jika tidak, sistem Gentoo anda tidak akan dapat me-mount
partisi-partisi anda. Serta, aktifkan juga <c>Virtual memory</c>, dan
<c>/proc file system</c>:
</p>

<pre caption="Memilih filesystem yang diperlukan">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Aktifkan satu atau lebih opsi-opsi berikut sesuai kebutuhan sistem anda)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Jika anda menggunakan PPPoE untuk koneksi internet atau modem dial-up,
anda memerlukan opsi-opsi berikut di kernel:
</p>

<pre caption="Memilih driver-driver PPPoE yang diperlukan">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Kedua opsi-opsi kompresi tidak berbahaya tetapi tidak benar-benar diperlukan,
begitu juga dengan opsi <c>PPP over Ethernet</c>, opsi-opsi tersebut mungkin
hanya digunakan oleh <c>rp-pppoe</c> jika dikonfigurasi untuk melakukan
modus kernel PPPoE.
</p>

<p>
Jika anda memerlukannya, jangan lupa untuk mengikutsertakan dukungan kernel
terhadap kartu ethernet anda.
</p>

<p>
Jika anda memiliki mouse atau keyboard HIL, jangan lupa untuk mengkompilasi
dukungan kernelnya.
</p>

<pre caption="Aktifkan dukungan HIL">
Input core support ---&gt;
  [*] Keyboard support
  [*] Mouse support
  [*] Event interface support
</pre>

<p>
Jika anda tidak memiliki mouse pada port HIL anda, gunakan saja dukungan dasar:
</p>

<pre caption="Dukungan HIL dasar">
HIL support ---&gt;
  [*] HIL Keyboard (basic) support
</pre>

<p>
Tetapi, jika anda menginginkan dukungan <e>penuh</e> HIL, aktifkan opsi-opsi
berikut ini:
</p>

<pre caption="Dukungan penuh HIL">
HIL support ---&gt;
  [*] HP System Device Controller i8042 Support
  [*] HIL MLC Support
  [*] HIL Keyboard (full) support
  [*] HIL Mouse &amp; Pointer support
</pre>

<p>
Dan juga, aktifkan dukungan driver grafis:
</p>

<pre caption="Dukungan driver grafis">
Graphics support ---&gt;
  [*] Support for frame buffer devices
      [*] HP STI frame buffer device support
  Console display driver support ---&gt;
      [*] STI text console
</pre>

<p>
Setelah anda selesai mengkonfigurasi kernel, lanjutkan ke <uri
link="#compiling">Kompilasi dan Instalasi</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilasi dan Instalasi</title>
<body>

<p>
Setelah kernel anda dikonfigurasi, sekarang saatnya untuk mengkompilasi dan
menginstalnya. Keluarlah dari menu konfigurasi dan mulailah proses kompilasi:
</p>

<pre caption="Kompilasi kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Setelah kernel selesai dikompilasi, copy imej kernel tersebut ke
<path>/boot</path>. Gunakan nama apapun yang anda rasa cocok untuk pilihan anda
dan ingatlah karena anda akan memerlukannya nanti pada saat mengkonfigurasi
bootloader. Jangan lupa untuk mengganti <path>&lt;versi-kernel&gt;</path>
dengan nama dan versi kernel anda.
</p>

<pre caption="Instalasi kernel">
# <i>cp vmlinux /boot/&lt;kernel-version&gt;</i>
</pre>

<p>
Sekarang lanjutkan ke <uri link="#kernel_modules">Konfigurasi Modul-Modul
Kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternatif: Menggunakan genkernel</title>
<body>

<p>
Jika anda membaca bagian ini, berarti anda memilih untuk menggunakan skrip
<c>genkernel</c> kami untuk mengkonfigurasi kernel bagi anda.
</p>

<p>
Setelah source kernel anda terinstal, sekarang saatnya untuk mengkompilasi
kernel anda menggunakan skrip <c>genkernel</c> kami untuk membangun
sebuah kernel secara otomatis bagi anda. <c>genkernel</c> bekerja dengan
mengkonfigurasi sebuah kernel yang hampir sama dengan cara kernel CD Instalasi
kami dikonfigurasi. Hal ini berarti, jika anda menggunakan <c>genkernel</c>
untuk membangun kernel anda, sistem anda akan secara umum mendeteksi semua
perangkat keras anda pada saat boot, seperti yang dilakukan oleh CD Instalasi
kami. Karena genkernel tidak memerlukan konfigurasi kernel secara manual,
cara ini merupakan cara yang ideal bagi para pengguna yang tidak terbiasa
mengkompilasi kernel mereka sendiri.
</p>

<p>
Sekarang, marilah kita lihat cara menggunakan genkernel. Pertama, emerge
paket genkernel:
</p>

<pre caption="Emerge genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Lalu, kompilasilah kernel anda dengan menjalankan perintah <c>genkernel
all</c>. Perlu anda ketahui juga, karena <c>genkernel</c> mengkompilasi
sebuah kernel yang mendukung hampir semua perangkat keras, kompilasi
ini akan berjalan cukup lama!
</p>

<p>
Catat juga, jika partisi boot anda tidak menggunakan ext2 atau ext3 sebagai
filesystemnya, anda perlu mengkonfigurasi kernel anda secara manual menggunakan
perintah <c>genkernel --menuconfig all</c> dan tambahkan dukungan terhadap
filesystem anda <e>di</e> kernel (<e>bukan</e> sebagai modul).
</p>

<pre caption="Menjalankan genkernel">
# <i>genkernel all</i>
<comment>(Output dibuang untuk memudahkan pembacaan)</comment>
* Kernel compiled successfully!
* Required Kernel Params:
*   : root=/dev/ram0 init=/linuxrc real_root=/dev/$ROOT
*     where $ROOT is the devicenode for your root partition as
*     you should have specified in /etc/fstab
*              
* You MUST tell your bootloader to use the generated initrd
*              
* Recommended Kernel Params:
*   : vga=0x317 splash=verbose
*              
* Do NOT report kernel bugs (configs included) as genkernel bugs.
* Make sure you have the latest genkernel before reporting bugs
*              
* For more info see /usr/share/genkernel/README
</pre>

<p>
Setelah <c>genkernel</c> selesai, sebuah kernel, set lengkap modul, dan
<e>initial root disk</e> (initrd) akan diciptakan. Kita akan menggunakan kernel
dan initrd tersebut pada saat mengkonfigurasi bootloader nantinya. Catat nama
kernel dan initrd anda karena anda akan memerlukannya nanti pada saat
menulis file konfigurasi bootloader. initrd akan dijalankan secara otomatis pada
saat boot untuk melakukan otodeteksi perangkat keras (hardware) (seperti
CD Instalasi) sebelum sistem "asli" dijalankan.
</p>

<pre caption="Memeriksa nama kernel dan initrd yang baru diciptakan">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Konfigurasi Modul-Modul Kernel</title>
<subsection>
<title>Konfigurasi Modul-Modul</title>
<body>

<p>
Anda harus menuliskan semua modul-modul yang ingin anda load secara otomatis
di file <path>/etc/modules.autoload.d/kernel-2.6</path>. Anda dapat juga
menambahkan opsi-opsi tambahan pada modul-modul tersebut jika anda mau.
</p>

<p>
Untuk melihat modul-modul yang tersedia, jalankan perintah <c>find</c> berikut.
Jangan lupa untuk menggantikan "&lt;versi kernel&gt;" dengan versi kernel yang
baru saja anda kompilasi:
</p>

<pre caption="Melihat modul-modul yang tersedia">
# <i>find /lib/modules/&lt;versi kernel&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Misalnya, untuk meload modul <c>3c59x.o</c> secara otomatis, edit file
<path>kernel-2.6</path> dan tuliskan nama modul tersebut di dalamnya.
</p>

<pre caption="Edit file /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Lanjutkan proses instalasi dengan bab <uri
link="?part=1&amp;chap=8">Mengkonfigurasi Sistem anda</uri>.
</p>

</body>
</subsection>
</section>
</sections>
