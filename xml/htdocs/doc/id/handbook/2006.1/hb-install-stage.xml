<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: hb-install-stage.xml,v 1.2 2007/04/02 14:40:05 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>7.1</version>
<date>2006-10-31</date>

<section>
<title>Menginstal sebuah Stage</title>
<subsection>
<title>Set Tanggal/Waktu yang Benar</title>
<body>

<p>
Sebelum anda melanjutkan, anda perlu memeriksa tanggal/waktu anda dan
memperbaharuinya. Jam yang tidak terkonfigurasi dengan benar dapat
menyebabkan hasil yang aneh nantinya!
</p>

<p>
Untuk memastikan tanggal/waktu saat ini, jalankan <c>date</c>:
</p>

<pre caption="Memeriksa tanggal/waktu">
# <i>date</i>
Fri Mar 29 16:21:18 UTC 2005
</pre>

<p>
Jika tanggal/waktu yang ditampilkan salah, update-lah menggunakan sintaks
<c>date MMDDhhmmYYYY</c> (<b>M</b>onth, <b>D</b>ay, <b>h</b>our,
<b>m</b>inute, dan <b>Y</b>ear). Untuk saat ini anda harus menggunakan
waktu UTS. Anda dapat menentukan zona waktu anda nanti. Misalnya, untuk men-set
tanggal menjadi 29 Maret, 16:21 di tahun 2005:
</p>

<pre caption="Set tanggal/waktu UTC">
# <i>date 032916212005</i>
</pre>

</body>
</subsection>
<subsection>
<title>Menemukan File Stage3</title>
<body>

<p>
Jika anda telah mengkonfigurasi jaringan anda karena anda perlu mendownload
tarbal stage3 untuk arsitektur anda, lanjutkan dengan <uri
link="#download">Alternatif: Menggunakan Stage3 dari Internet</uri>. Jika
tidak, baca <uri link="#available">Default: Menggunakan Stage3 dari CD
Instalasi</uri>.
</p>

</body>
</subsection>
</section>
<section id="available">
<title>Default: Menggunakan Stage dari CD Instalasi</title>
<subsection>
<title>Ekstrak Tarbal Stage</title>
<body>

<p>
Stage-stage di CD berada di direktori <path>/mnt/cdrom/stages</path>. Untuk
menampilkan daftar stage-stage yang tersedia, gunakan perintah <c>ls</c>:
</p>

<pre caption="Melihat stage-stage yang tersedia">
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Jika sistem anda menampilkan pesan error, anda mungkin perlu me-mount
CD-ROM anda dahulu:
</p>

<pre caption="Mount CD-ROM">
# <i>ls /mnt/cdrom/stages</i>
ls: /mnt/cdrom/stages: No such file or directory
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom</i>
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Sekarang masuklah ke mountpoint Gentoo (biasanya <path>/mnt/gentoo</path>):
</p>

<pre caption="Masuk ke /mnt/gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Sekarang kita akan mengekstrak tarbal stage pilihan anda menggunakan
<c>tar</c>. Pastikan anda menggunakan opsi-opsi yang sama (<c>-xvjpf</c>).
Argumen <c>v</c> merupakan opsional dan tidak didukung di beberapa versi
<c>tar</c>. Pada contoh berikut ini, kita mengekstrak tarbal stage
<path>stage3-&lt;subarch&gt;-2006.1.tar.bz2</path>. Pastikan unuk mengganti
nama tarbal tersebut dengan stage anda.
</p>

<pre caption="Mengekstrak tarbal stage">
# <i>tar xvjpf /mnt/cdrom/stages/stage3-&lt;subarch&gt;-2006.1.tar.bz2</i>
</pre>

<p>
Setelah stage terinstal, lanjutkan ke <uri
link="#installing_portage">Menginstal Portage</uri>.
</p>

</body>
</subsection>
</section>
<section id="download">
<title>Alternatif: Menggunakan Stage dari Internet</title>
<subsection>
<title>Mendownload Tarbal Stage</title>
<body>

<p>
Masuklah ke mountpoint Gentoo tempat anda me-mount filesystem anda
(kemungkinan besar <path>/mnt/gentoo</path>):
</p>

<pre caption="Masuk ke mountpoint Gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Tergantung pada media instalasi anda, tersedia beberapa tool untuk
mendownload sebuah stage. Jika program <c>links</c> tersedia, maka anda dapat
langsung masuk ke <uri link="/main/en/mirrors.xml">daftar mirror Gentoo</uri>
dan memilih sebuah mirror yang dekat dengan anda.
</p>

<p>
Jika <c>links</c> tidak tersedia, anda seharusnya memiliki <c>lynx</c>. Jika
anda harus melewati proxy, export-lah variabel <c>http_proxy</c> dan
<c>ftp_proxy</c>:
</p>

<pre caption="Set informasi proxy untk lynx">
# <i>export http_proxy="http://proxy.server.com:port"</i>
# <i>export ftp_proxy="http://proxy.server.com:port"</i>
</pre>

<p>
Sekarang kami anggap anda telah memiliki <c>links</c>.
</p>

<p>
Masuk ke direktori <path>releases/</path>, diikuti oleh arsitektur anda
(mis. <path>x86/</path>) dan versi Gentoo (<path>2006.1</path>), dan terakhir
masuk ke direktori <path>stages/</path>. Di sana, anda seharusnya akan
melihat semua file stage yang tersedia bagi arsitektur anda (mungkin disimpan
di dalam subdirektori tiap sub arsitektur). Pilih satu dan tekan <c>D</c> untuk
mendownloadnya. Setelah selesai, tekan <c>Q</c> untuk keluar dari browser.
</p>

<pre caption="Browse daftar mirror menggunakan links">
# <i>links http://www.gentoo.org/main/en/mirrors.xml</i>

 <comment>(Jika anda butuh dukungan proxy dengan links:)</comment>
# <i>links -http-proxy proxy.server.com:8080 http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Pastikan anda mendownload sebuah tarbal <b>stage3</b> - instalasi dengan
tarbal stage1 atau stage2 sudah tidak lagi didukung.
</p>

<p>
Jika anda ingin memeriksa keadaan tarbal stage yang anda download, gunakan
program <c>md5sum</c> dan bandingkan tampilannya dengan checksum MD5 yang
disediakan di mirror. Sebagai contoh, untuk memeriksa keadaan tarbal stage x86:
</p>

<pre caption="Contoh pemeriksaan keadaan tarbal stage">
# <i>md5sum -c stage3-x86-2006.1.tar.bz2.DIGESTS</i>
stage3-x86-2006.1.tar.bz2: OK
</pre>

</body>
</subsection>
<subsection>
<title>Mengekstrak Tarbal Stage</title>
<body>

<p>
Sekarang ekstrak stage yang telah anda download ke sistem anda. Kita akan
menggunakan <c>tar</c>, karena metode ini paling mudah:
</p>

<pre caption="Mengekstrak stage">
# <i>tar xvjpf stage3-*.tar.bz2</i>
</pre>

<p>
Pastikan anda menggunakan opsi-opsi yang sama (<c>xvjpf</c>). Opsi <c>x</c>
merupakan singkatan dari <e>Extract</e>, opsi <c>v</c> adalah <e>verbose</e>
untuk melihat apa saja yang sedang terjadi ketika proses ekstrak berlangsung
(opsional), opsi <c>j</c> adalah <e>Decompress with bz2</e>, opsi <c>p</c>
adalah <e>Preserve permissions</e> dan opsi <c>f</c> artinya ekstrak sebuah
file, bukan standard input.
</p>

<p>
Setelah stage terinstal, lanjutkan ke <uri
link="#installing_portage">Menginstal Portage</uri>.
</p>

</body>
</subsection>
</section>
<section id="installing_portage">
<title>Menginstal Portage</title>
<subsection>
<title>Menginstal Snapshot Portage</title>
<body>

<p>
Sekarang anda harus menginstal sebuah snapshot Portage, yaitu sebuah kumpulan
file yang menginformasikan Portage software apa saja yang dapat anda instal,
profile apa saja yang tersedia,dll
</p>

</body>
</subsection>
<subsection id="installing_from_InstallCD">
<title>Ekstrak Snapshot Portage dari CD Instalasi</title>
<body>

<p>
Untuk menginstal snapshot, lihatlah isi direktori
<path>/mnt/cdrom/snapshots/</path> untuk mengetahui snapshot apa saja yang
tersedia:
</p>

<pre caption="Melihat isi /mnt/cdrom/snapshots">
# <i>ls /mnt/cdrom/snapshots</i>
</pre>

<p>
Sekarang ekstrak snapshot dengan perintah berikut ini. Lagi-lagi, pastikan anda
menggunakan opsi yang sama dengan <c>tar</c>. Juga, opsi <c>-C</c> merupakan
hurup <c>C</c> kapital, bukan <c>c</c>. Pada contoh berikut ini kita akan
menggunakan <path>portage-&lt;date&gt;.tar.bz2</path> sebagai nama file
snapshot. Pastikan untuk mengganti nama file dengan snapshot yang ada di CD
Instalasi anda.
</p>

<pre caption="Ekstrak snapshot Portage">
# <i>tar xvjf /mnt/cdrom/snapshots/portage-&lt;date&gt;.tar.bz2 -C /mnt/gentoo/usr</i>
</pre>

</body>
</subsection>
<subsection id="copysources">
<title>Menyalin File-file Source Code</title>
<body>

<p>
Anda juga perlu menyalin semua file source code dari CD Instalasi Universal
</p>

<pre caption="Menyalin file source code">
# <i>mkdir /mnt/gentoo/usr/portage/distfiles</i>
# <i>cp /mnt/cdrom/distfiles/* /mnt/gentoo/usr/portage/distfiles/</i>
</pre>

</body>
</subsection>
</section>

<section id="compile_options">
<title>Mengkonfigurasi Opsi Kompilasi</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Untuk mengoptimasi Gentoo, anda dapat mengeset beberapa variabel yang
mengendalikan tingkah laku Portage. Variabel-variabel tersebut dapat diset
sebagai variabel environment (menggunakan perintah <c>export</c>) tetapi
tidak permanen. Untuk menyimpan pengaturan anda, Portage menyediakan file
<path>/etc/make.conf</path>, yaitu file konfigurasi Portage. File inilah yang
akan kita edit sekarang.
</p>

<note>
Daftar variabel-variabel lengkap yang ter-comment dapat ditemukan di file
<path>/mnt/gentoo/etc/make.conf.example</path>. Agar proses instalasi
Gentoo anda sukses, anda hanya perlu mengeset variabel-variabel yang
dijelaskan di bawah ini.
</note>

<p>
Jalankan editor favorit anda (di dokumentasi ini, kita menggunakan <c>nano</c>)
agar kita dapat mengubah variabel-variabel optimasi yang akan kita jelaskan.
</p>

<pre caption="Membuka /etc/make.conf">
# <i>nano -w /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Seperti yang anda lihat, file <path>make.conf.example</path> diurutkan dengan
cara yang umum: baris-baris yang ter-comment mulai dengan tanda "#",
baris-baris lain mendefenisikan variabel menggunakan sintaks
<c>VARIABLE="content"</c>. File <path>make.conf</path> menggunakan
sintaks yang sama. Beberapa dari variabel tersebut akan kita diskusikan nanti.
</p>

<warn>
Jangan mengubah isi variabel USE jika anda sedang menjalankan instalasi dengan
stage3 dengan GRP. Anda dapat mengubah variabel USE setelah anda selesai
menginstal semua paket GRP yang anda inginkan.
</warn>

</body>
</subsection>
<subsection>
<title>CHOST</title>
<body>

<p>
Variabel <c>CHOST</c> mendefenisikan untuk arsitektur apa <c>gcc</c> harus
mengkompilasi program. Variabel ini seharusnya telah diset dengan nilai yang
benar.<brite>Jangan diedit</brite> karena bisa menrusak sistem anda. Jika
menurut anda variabel <c>CHOST</c> tidak benar, anda mungkin menggunakan
tarbal stage3 yang salah.
</p>

</body>
</subsection>
<subsection>
<title>CFLAGS dan CXXFLAGS</title>
<body>

<p>
Variabel <c>CFLAGS</c> dan <c>CXXFLAGS</c> mendefenisikan flag-flag optimasi
untuk compiler C dan C++ <c>gcc</c> berturut-turut. Walaupun kita
mendefenisikan variabel tersebut secara umum di sini, anda hanya akan
mendapatkan performa maksimal jika anda mengoptimasi flag-flag ini untuk
setiap program secara terpisah. Alasannya adalah karena setiap program
berbeda.
</p>

<p>
Di file <path>make.conf</path>, anda sebaiknya mendefenisikan flag-flag
optimasi yang anda rasa akan membuat sistem anda lebih responsif
<e>secara umum</e>. Jangan menggunakan pengaturan-pengaturan percobaan ke
variabel ini; optimasi yang terlalu tinggi dapat membuat program bertingkah
laku aneh (crash, atau bahkan, tidak dapat berfungsi).
</p>

<p>
Kami tidak dapat menjelaskan semua opsi-opsi optimasi. Jika anda ingin
mengetahui opsi-opsi tersebut, baca <uri
link="http://gcc.gnu.org/onlinedocs/">Manual Online GNU</uri>
atau halaman info <c>gcc</c> (<c>info gcc</c> -- hanya berfungsi di sistem
Linux). Untuk opstimasi umum dan pengaturan khusus arsitektur, silakan membaca
<path>/etc/make.conf.example</path>. File ini berisi banyak contoh dan
informasi; jadi jangan lupa untuk membacanya juga.
</p>

<p>
Sebagai contoh, pada arsitektur x86, anda perlu mengeset flag -march= seperti
yang ditunjukkan di bawah ini (untuk prosesor Athlon XP)
</p>

<pre caption="Pengaturan march GCC">
-march=athlon-xp
</pre>

<p>
Yang kedua adalah flag <c>-O</c> (O adalah huruf besar O, bukan nol), yang
mendefenisikan kelas optimasi <c>gcc</c>. Kelas-kelas yang tersedia adalah
<c>s</c> (optimasi size/ukuran), <c>0</c> (nol - tidak dioptimasi), <c>1</c>,
<c>2</c> atau <c>3</c> untuk optimasi kecepatan (setiap kelas memiliki
flag-flag yang sama dari kelas sebelumnya, ditambah beberapa tambahan).
Sebagai contoh, untuk optimasi kelas 2:
</p>

<pre caption="Pengaturan O GCC">
-O2
</pre>

<p>
Flag-flag optimasi populer lainnya adalah <c>-pipe</c> (gunakan pipe
daripada file-file sementara untuk berkomunikasi antara berbagai stage
sewaktu kompilasi).
</p>

<p>
Kami ingatkan anda bahwa penggunaan <c>-fomit-frame-pointer</c> (tidak
menyimpan pointer frame di register untuk function-function yang tidak
memerlukannya) kemungkinan bisa berakibat serius ketika melakukan debugging
pada beberapa aplikasi!
</p>

<p>
Sewaktu anda mendefenisikan variabel <c>CFLAGS</c> dan <c>CXXFLAGS</c>,
anda sebaiknya mengkombinasikan beberapa flag-flag optimasi, misalnya:
</p>

<pre caption="Defenisi variabel CFLAGS dan CXXFLAGS">
CFLAGS="-march=athlon-xp -pipe -O2"
CXXFLAGS="${CFLAGS}"                  <comment># Gunakan pengaturan yang sama untuk kedua variabel</comment>
</pre>

</body>
</subsection>
<subsection>
<title>MAKEOPTS</title>
<body>

<p>
Di variabel <c>MAKEOPTS</c>, anda dapat mendefenisikan berapa banyak
kompilasi paralel yang berjalan sewaktu anda menginstal sebuah paket. Pilihan
yang bagus adalah banyak CPU di sistem anda tambah satu, tetapi aturan ini
tidaklah selalu sempurna.
</p>

<pre caption="MAKEOPTS untuk sistem 1 CPU umum">
MAKEOPTS="-j2"
</pre>

</body>
</subsection>
<subsection>
<title>Ready, Set, Go!</title>
<body>

<p>
Update file <path>/mnt/gentoo/etc/make.conf</path> sesuai keinginan anda
dan simpan (pengguna <c>nano</c> akan menekan <c>Ctrl-X</c>). Anda sekarang
dapat melanjutkan ke <uri
link="?part=1&amp;chap=6">Chroot ke Sistem Dasar Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
