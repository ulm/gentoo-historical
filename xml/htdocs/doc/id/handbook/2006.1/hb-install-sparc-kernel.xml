<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>7.0</version>
<date>2006-08-30</date>

<section>
<title>Zona Waktu (Timezone)</title>
<body>

<p>
Pertama, anda perlu memilih zona waktu anda agar sistem anda tahu dimana
dia berada. Carilah zona waktu anda di <path>/usr/share/zoneinfo</path>,
salinlah ke <path>/etc/localtime</path>. Hindari penggunaan zona waktu
<path>/usr/share/zoneinfo/Etc/GMT*</path> karena namanya tidak mengindikasikan
zona yang diharapkan. <path>GMT-8</path> sesungguhnya adalah GMT+8.
</p>

<pre caption="Mengatur zona waktu">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Misalnya anda ingin menggunakan GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Instal Source</title>
<subsection>
<title>Memilih Kernel</title>
<body>

<p>
Inti/Jantung dari semua distro adalah kernel Linux. Kernel merupakan sebuah
lapisan antara program-program pengguna dengan perangkat keras sistem.
Gentoo menyediakan beberapa kernel kepada para penggunanya. Sebuah daftar
lengkap beserta penjelasannya dapat ditemui di <uri
link="/doc/id/gentoo-kernel.xml">Panduan Kernel Gentoo</uri>.
</p>

<p>
Untuk sistem berbasis sparc kami menyediakan <c>sparc-sources</c> (kernel 2.4
yang dioptimasi untuk pengguna SPARC), <c>gentoo-sources</c> (kernel 2.6 yang
dianjurkan) dan <c>vanilla-sources</c> (kernel default yang dikembangkan oleh
para pengembang kernel linux).
</p>

<p>
Pada contoh berikut ini kami menggunakan <c>gentoo-sources</c>.  Tentu saja
gantikan dengan kernel pilihan anda. <c>USE="-doc"</c> diperlukan untuk
menghindari instalasi xorg-x11 atau dependensi lain untuk saat ini.
<c>USE="symlink"</c> tidak diperlukan untuk instalasi baru tapi pastikan
anda memciptakan symlink yang benar untuk <path>/usr/src/linux</path>.
</p>

<pre caption="Instal sebuah kernel">
# <i>USE="-doc symlink" emerge gentoo-sources</i>
</pre>

<p>
Jika anda melihat ke direktori <path>/usr/src</path>, anda akan menemukan
sebuah link simbolik (symlink) bernama <path>linux</path> yang menunjuk
ke kernel <c>linux-2.6.17-gentoo-r5</c>. Versi anda mungkin berbeda, jadi
ingatlah ini.
</p>

<pre caption="Melihat link simbolik kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root        12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.17-gentoo-r5
</pre>

<p>
Sekarang saatnya untuk mengkonfigurasi dan kompilasi kernel anda.
</p>

</body>
</subsection>
</section>
<section>
<title>Konfigurasi Manual</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Konfigurasi kernel secara manual tampaknya adalah prosedur tersulit yang
harus dijalankan oleh setiap pengguna Linux. Memang benar -- setelah
mengkonfigurasi beberapa kernel, anda tidak akan lagi ingat bahwa cara
tersebut sulit ;-)
</p>

<p>
Bagaimanapun juga, satu hal <e>selalu</e> benar: anda harus mengenal sistem
anda sebelum mulai mengkonfigurasi kernel secara manual. Kebanyakan informasi
dapat ditemukan dengan menginstall pciutils (<c>emerge pciutils</c>) yang
berisi <c>lspci</c>. Anda juga bisa menggunakan <c>lspci</c> dari dalam
lingkungan chroot. Biarkan saja peringatan <e>pcilib</e> (seperti pcilib:
cannot open /sys/bus/pci/devices) yang dikeluarkan oleh <c>lspci</c>. Anda
dapat juga menggunakan <c>lspci</c> dari lingkungan <e>non-chroot</e>.
Hasilnya sama saja. Anda dapat juga menjalankan <c>lsmod</c> untuk melihat
modul kernel apa saja yang digunakan oleh CD Instalasi (tampilan tersebut
mungkin memberi gambaran bagi anda apa saja yang harus diaktifkan).
</p>

<p>
Sekarang, masuklah ke direktori kernel anda dan jalankan <c>make
menuconfig</c>. Perintah ini akan menjalankan menu konfigurasi berbasis
ncurses.
</p>

<pre caption="Menjalankan menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Anda akan menemukan beberapa seksi konfigurasi. Kami pertama-tama akan
menjelaskan beberapa opsi yang harus anda aktifkan (jika tidak, Gentoo tidak
dapat berjalan dengan benar tanpa tweak tambahan).
</p>

</body>
</subsection>
<subsection>
<title>Mengaktifkan Opsi-Opsi yang Diperlukan</title>
<body>

<p>
Pertama, aktifkan penggunaan "development and experimental code/drivers".
Anda memerlukannya, jika tidak, beberapa code/driver yang sangat penting
tidak akan ditampilkan:
</p>

<pre caption="Memilih code/driver eksperimental">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Sekarang masuklah ke <c>File Systems</c> dan aktifkan dukungan terhadap
filesystem yang anda gunakan. <e>Jangan</e> kompilasi dukungan tersebut
sebagai modul, jika tidak, sistem Gentoo anda tidak akan dapat me-mount
partisi-partisi anda. Pilih juga <c>Virtual memory</c> dan <c>/proc
file system</c>. Jika anda menggunakan kernel 2.4, anda juga perlu memilih
<c>/dev file system</c> + <c>Automatically mount at boot</c>:
</p>

<pre caption="Memilih filesystem yang diperlukan">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Aktifkan satu atau lebih opsi-opsi berikut sesuai kebutuhan sistem anda)</comment>
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Second extended fs support
</pre>

<p>
Jika anda menggunakan PPPoE untuk koneksi internet atau modem dial-up,
anda memerlukan opsi-opsi berikut di kernel:
</p>

<pre caption="Memilih driver-driver PPPoE yang diperlukan">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Kedua opsi-opsi kompresi tidak berbahaya tetapi tidak benar-benar diperlukan,
begitu juga dengan opsi <c>PPP over Ethernet</c>, opsi-opsi tersebut mungkin
hanya digunakan oleh <c>rp-pppoe</c> jika dikonfigurasi untuk melakukan
modus kernel PPPoE.
</p>

<p>
Sekarang aktifkan dukungan bus yang benar:
</p>

<pre caption="Aktivasi SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers
      [*] Creator/Creator3D support     <comment>(Hanya untuk adapter slot UPA pada beberapa mesin Ultra)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Hanya untuk adapter slot SBUS pada beberapa SPARCStations)</comment>
</pre>

<p>
Pastinya anda memerlukan dukungan OBP:
</p>

<pre caption="Aktivasi dukungan OBP">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
Anda juga memerlukan dukungan SCSI tertentu:
</p>

<pre caption="Aktivasi dukungan SCSI">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Hanya untuk SPARC ESP on-board SCSI adapter)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Hanya untuk SBUS SCSI controller dari PTI atau QLogic)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Hanya untuk Ultra 60 on-board SCSI adapter)</comment>
</pre>

<p>
Untuk mendukung kartu jaringan anda, pilih salah satu dari berikut ini:
</p>

<pre caption="Aktivasi dukungan jaringan">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>(Hanya untuk SPARCStation, sistem Ultra lama, dan sebagai opsi Sbus)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>(Hanya untuk Ultra; juga mendukung "qfe" quad-ethernet pada PCI dan Sbus)</comment>
    &lt;*&gt; DECchip Tulip (dc21x4x) PCI support <comment>(Untuk beberapa Netras, seperti N1)</comment>
  Ethernet (1000Mbit) ---&gt;
    &lt;*&gt; Broadcom Tigon3 support <comment>(Modern Netra, Sun Fire machines)</comment>
</pre>

<p>
Jika anda memiliki sistem dengan Ethernet 4-port (10/100 or 10/100/1000),
urutan port berbeda dengan yang digunakan oleh Solaris. Anda dapat menggunakan
<c>sys-apps/ethtool</c> atau <c>mii-tool</c> untuk memeriksa status link port.
</p>

<p>
Setelah anda selesai mengkonfigurasi kernel, lanjutkan ke <uri
link="#compiling">Kompilasi dan Instalasi</uri>. Tetapi, setelah selesai
mengkompilasi kernel, periksa ukurannya:
</p>

<pre caption="Memeriksa ukuran kernel">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
Jika ukuran kernel (yang belum dikompresi) lebih dari 2.5 MB (untuk Sparc32)
atau 3.5 MB (untuk Sparc64), anda harus mengkonfigurasi ulang kernel anda
sampai ukurannya tidak melebihi batas. Salah satu caranya adalah dengan
mengkompilasi driver kernel sebagai modul. Kernel anda tidak akan bisa boot
jika anda tidak mengindahkan hal ini.
</p>

<p>
Juga, jika kernel anda berukuran sedikit lebih besar dari batas maksimal,
anda dapat mencoba untuk mengecilkannya dengan perintah <c>strip</c>:
</p>

<pre caption="Strip kernel">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilasi dan Instalasi</title>
<body>

<p>
Setelah kernel anda dikonfigurasi, sekarang saatnya untuk mengkompilasi dan
menginstalnya. Keluarlah dari menu konfigurasi dan mulailah proses kompilasi:
</p>

<pre caption="Kompilasi kernel">
<comment>(sparc32)</comment>
# <i>make dep &amp;&amp; make clean vmlinux modules modules_install</i>

<comment>(sparc64)</comment>
# <i>make dep &amp;&amp; make clean vmlinux image modules modules_install</i>
</pre>

<p>
Setelah kernel selesai dikompilasi, copy imej kernel tersebut ke
<path>/boot</path>. Jangan lupa untuk mengganti
<path>&lt;versi-kernel&gt;</path> dengan nama dan versi kernel anda.
</p>

<pre caption="Instalasi kernel">
<comment>(sparc32)</comment>
# <i>cp vmlinux /boot/&lt;kernel-version&gt;</i>

<comment>(sparc64)</comment>
# <i>cp arch/sparc64/boot/image /boot/&lt;kernel-version&gt;</i>
</pre>

<p>
Sekarang lanjutkan ke <uri link="#kernel_modules">Instalasi Modul-modul Kernel
Terpisah</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Instalasi Modul-modul Kernel Terpisah</title>
<subsection>
<title>Konfigurasi Modul-Modul</title>
<body>

<p>
Anda harus menuliskan semua modul-modul yang ingin anda load secara otomatis
di file <path>/etc/modules.autoload.d/kernel-2.6</path>. Anda dapat juga
menambahkan opsi-opsi tambahan pada modul-modul tersebut jika anda mau.
</p>

<p>
Untuk melihat modul-modul yang tersedia, jalankan perintah <c>find</c> berikut.
Jangan lupa untuk menggantikan "&lt;versi kernel&gt;" dengan versi kernel yang
baru saja anda kompilasi:
</p>

<pre caption="Melihat modul-modul yang tersedia">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Misalnya, untuk meload modul <c>3c59x.o</c> secara otomatis, edit file
<path>kernel-2.6</path> dan tuliskan nama modul tersebut di dalamnya.
</p>

<pre caption="Edit file /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Lanjutkan proses instalasi dengan bab <uri
link="?part=1&amp;chap=8">Mengkonfigurasi Sistem anda</uri>.
</p>

</body>
</subsection>
</section>
</sections>
