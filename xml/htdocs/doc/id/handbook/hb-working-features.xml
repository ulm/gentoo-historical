<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- English doc rev. 1.18 -->
<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<abstract>
Kenali fitur-fitur Portage seperti kompilasi terdistribusi, ccache, dan masih
banyak lagi.
</abstract>

<version>1.32</version>
<date>2008-03-02</date>

<section>
<title>Fitur-fitur Portage</title>
<body>

<p>
Portage memiliki berbagai fitur tambahan yang dapat menjadikan pengalaman anda
dengan Gentoo lebih asyik. Kebanyakan dari fitur ini bergantung pada beberapa
software yang dapat meningkatkan performa, kehandalan, dan keamanan sistem,...
</p>

<p>
Untuk mengaktifkan atau menonaktifkan fitur-fitur tertentu Portage, anda perlu
mengedit variabel <c>FEATURES</c> di file <path>/etc/make.conf</path> yang
berisi keyword fitur, dipisahkan dengan spasi. Pada beberapa kasus, anda juga
perlu menginstal utilitas tambahan yang diperlukan oleh fitur tersebut.
</p>

<p>
Tidak semua fitur yang didukung Portage kami jelaskan di sini. Untuk gambaran
secara menyeluruh, silahkan baca manual <path>make.conf</path>:
</p>

<pre caption="Membaca manual make.conf">
$ <i>man make.conf</i>
</pre>

<p>
Untuk mengetahui FEATURES apa yang telah digunakan secara default, jalankan
<c>emerge --info</c> lalu cari variabel FEATURES, atau grep:
</p>

<pre caption="Mengetahui FEATURES yang telah digunakan">
$ <i>emerge --info | grep FEATURES</i>
</pre>

</body>
</section>
<section>
<title>Kompilasi Terdistribusi</title>
<subsection>
<title>Menggunakan distcc</title>
<body>

<p>
<c>distcc</c> adalah sebuah program untuk mendistribusikan proses kompilasi
kepada beberapa mesin, tidak harus sama jenisnya, yang terhubung di dalam
sebuah jaringan. Klien <c>distcc</c> mengirimkan semua informasi yang
diperlukan ke server distcc yang tersedia (yang menjalankan <c>distccd</c>),
sehingga mereka dapat mengkompilasi potongan-potongan source code untuk klien.
Hasil akhirnya adalah waktu kompilasi yang lebih singkat.
</p>

<p>
Anda dapat memperoleh informasi lebih lanjut tentang <c>distcc</c> (dan
informasi bagaimana menjalankannya pada Gentoo) di <uri
link="/doc/id/distcc.xml">Dokumentasi Distcc Gentoo</uri> kami.
</p>

</body>
</subsection>
<subsection>
<title>Instalasi distcc</title>
<body>

<p>
Distcc dilengkapi dengan sebuah monitor grafis untuk memonitor tugas-tugas yang
dikirimkan oleh komputer Anda untuk kompilasi. Jika anda menggunakan Gnome
maka tambahkan 'gnome' pada variabel <c>USE</c> anda. Jika anda tidak
menggunakan Gnome dan tetap ingin memiliki monitor ini, maka anda harus
menambahkan 'gtk' pada variabel <c>USE</c> anda.
</p>

<pre caption="Instalasi Distcc">
# <i>emerge distcc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Aktivasi Dukungan Portage</title>
<body>

<p>
Tambahkan <c>distcc</c> pada variabel FEATURES di file
<path>/etc/make.conf</path>. Selanjutnya, edit variabel MAKEOPTS sesuai dengan
keinginan anda. Sebuah garis pedoman yang diketahui adalah mengisi <c>-jX</c>
dengan <c>X</c> adalah jumlah CPU yang menjalankan <c>distccd</c> (termasuk
juga host tersebut) ditambah satu. Tapi anda mungkin saja bisa mendapatkan
hasil yang lebih baik dengan nilai lain.
</p>

<p>
Sekarang jalankan <c>distcc-config</c> dan masukkan daftar dari server-server
distcc yang tersedia. Sebagai contoh sederhana, kami ganggap server distcc yang
tersedia adalah <c>192.168.1.102</c> (host ini), <c>192.168.1.103</c> dan
<c>192.168.1.104</c> (dua host "remote"):
</p>

<pre caption="Konfigurasi distcc untuk menggunakan tiga server distcc yang tersedia">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>

<p>
Tentu saja, jangan lupa jalankan daemon <c>distccd</c>:
</p>

<pre caption="Menjalankan daemon distcc">
# <i>rc-update add distccd default</i>
# <i>/etc/init.d/distccd start</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>ccache</title>
<subsection>
<title>Tentang ccache</title>
<body>

<p>
<c>ccache</c> adalah cache compiler yang cepat. Ketika anda mengkompilasi
sebuah program, hasil tengah kompilasi akan dicache, sehingga jika anda
mengkompilasi ulang program yang sama, waktu kompilasinya akan berkurang drastis.
Untuk kompilasi umum, hasil yang dicapai adalah kompilasi yang lebih singkat
5 sampai 10 kali.
</p>

<p>
Jika anda tertarik untuk lebih mengenal <c>ccache</c>, silahkan kunjungi
<uri link="http://ccache.samba.org">website ccache</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Instalasi ccache</title>
<body>

<p>
Untuk menginstal <c>ccache</c>, jalankan <c>emerge ccache</c>:
</p>

<pre caption="Instalasi ccache">
# <i>emerge ccache</i>
</pre>

</body>
</subsection>
<subsection>
<title>Aktivasi Dukungan Portage</title>
<body>

<p>
Buka file <path>/etc/make.conf</path> lalu tambahkan <c>ccache</c> ke variabel
FEATURES. Kemudian, tambahkan variabel baru bernama CCACHE_SIZE dan set ke
"2G":
</p>

<pre caption="Edit CCACHE_SIZE di /etc/make.conf">
CCACHE_SIZE="2G"
</pre>

<p>
Untuk memeriksa apakah ccache bekerja, mintalah ccache untuk memberikan
statistiknya kepada anda. Karena Portage menggunakan direktori home ccache yang
berbeda, anda juga perlu mengeset variabel <c>CCACHE_DIR</c>:
</p>

<pre caption="Melihat statistik ccache">
# <i>CCACHE_DIR="/var/tmp/portage" ccache -s</i>
</pre>

<p>
<path>/var/tmp/ccache</path> adalah lokasi direktori home ccache default
Portage; jika anda ingin merubahnya, anda dapat melakukannya melalui variabel
<c>CCACHE_DIR</c> di <path>/etc/make.conf</path>.
</p>

<p>
Bagaimanapun juga, ketika anda menjalankan <c>ccache</c>, lokasi default
<path>${HOME}/.ccache</path> akan digunakan, itulah sebabnya anda perlu
mengatur variabel <c>CCACHE_DIR</c> ketika ingin melihat statistik ccache
(Portage).
</p>

</body>
</subsection>
<subsection>
<title>Menggunakan ccache untuk kompilasi C non-portage</title>
<body>

<p>
Jika anda ingin menggunakan ccache untuk kompilasi non-Portage, tambahkan
<path>/usr/lib/ccache/bin</path> di awal variabel <c>PATH</c> anda (sebelum
<path>/usr/bin</path>). Ini dapat dilakukan dengan mengedit
<path>.bash_profile</path> di direktori home anda. Penggunaan
<path>.bash_profile</path> adalah salah satu cara untuk mendefinisikan
variabel <c>PATH</c>.
</p>

<pre caption="Edit .bash_profile">
PATH="<i>/usr/lib/ccache/bin</i>:/opt/bin:${PATH}"
</pre>

</body>
</subsection>
</section>
<section>
<title>Dukungan Paket Binari</title>
<subsection>
<title>Menciptakan paket prebuilt</title>
<body>

<p>
Portage mendukung instalasi paket-paket prebuilt. Walaupun Gentoo tidak
menyediakan paket-paket prebuilt (kecuali snapshot GRP), Portage dapat dengan
mudah diatur untuk menangani paket prebuilt.
</p>

<p>
Untuk menciptakan sebuah paket prebuilt, anda dapat menggunakan <c>quickpkg</c>
jika paket tersebut telah terinstal di sistem anda, atau <c>emerge</c> dengan
opsi <c>--buildpkg</c> atau <c>--buildpkgonly</c>.
</p>

<p>
Jika anda ingin agar Portage selalu menciptakan paket prebuilt untuk setiap
software yang anda instal, tambahkan <c>buildpkg</c> ke variabel FEATURES.
</p>

<p>
Dukungan yang lebih luas untuk pembuatan kumpulan paket prebuilt dapat
dilakukan dengan <c>catalyst</c>. Untuk info lebih lanjut tentang catalyst,
bacalah <uri link="/proj/en/releng/catalyst/faq.xml">FAQ Catalyst</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Instalasi paket prebuilt</title>
<body>

<p>
Walaupun Gentoo tidak menyediakannya, anda dapat menciptakan sebuah repositori
pusat tempat anda menyimpan paket-paket prebuilt. Jika anda ingin menggunakan
repositori ini, anda perlu memberitahukannya kepada Portage dengan menambahkan
variabel PORTAGE_BINHOST yang menunjuk ke repositori tersebut. Sebagai contoh,
jika paket-paket prebuilt tersimpan di ftp://buildhost/gentoo:
</p>

<pre caption="Set PORTAGE_BINHOST di /etc/make.conf">
PORTAGE_BINHOST="ftp://buildhost/gentoo"
</pre>

<p>
Ketika anda ingin menginstal sebuah paket prebuilt, tambahkan opsi
<c>--getbinpkg</c> ke perintah emerge bersama opsi <c>--usepkg</c>. Opsi
pertama akan memerintahkan emerge untuk mendownload paket prebuilt dari server
yang telah ditentukan. Sedangkan opsi kedua akan memerintahkan emerge untuk
mencoba menginstal paket prebuilt dulu sebelum mendowload source dan
mengkompilasinya.
</p>

<p>
Sebagai contoh, untuk menginstal <c>gnumeric</c> dari paket prebuilt:
</p>

<pre caption="Instalasi paket prebuilt gnumeric">
# <i>emerge --usepkg --getbinpkg gnumeric</i>
</pre>

<p>
Informasi lebih lanjut tentang opsi-opsi paket prebuilt emerge dapat anda
temukan di manual emerge:
</p>

<pre caption="Membaca manual emerge">
# <i>man emerge</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Mendownload File</title>
<subsection>
<title>Download paralel</title>
<body>

<p>
Ketika anda meng-emerge sejumlah paket, Portage dapat mendownload file source
untuk paket selanjutnya yang ada di daftar bahkan ketika sedang mengkompilasi
paket lain, jadi dapat mempersingkat waktu kompilasi. Untuk menggunakannya,
tambahkan "parallel-fetch" di variabel FEATURES.
</p>

</body>
</subsection>
<subsection>
<title>Userfetch</title>
<body>

<p>
Ketika Portage dijalankan sebagai root, FEATURES="userfetch" akan mengizinkan
Portage untuk menanggalkan hak root. Ini merupakan sebuah peningkatan kecil
untuk keamanan sistem.

</p>

</body>
</subsection>
</section>
</sections>

