<?xml version='1.0' encoding='UTF-8'?>
<!-- $Id: hb-install-ppc-kernel.xml,v 1.3 2007/05/22 12:42:28 neysx Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>8.1</version>
<date>2007-05-21</date>

<section>
<title>Zona Waktu/Timezone</title>
<body>

<p>
Pertama, anda harus memilih zona waktu agar sistem anda mengetahui posisinya.
Carilah zona waktu anda di <path>/usr/share/zoneinfo</path>, lalu tetapkan di
<path>/etc/conf.d/clock</path>. Hindari penggunaan zona waktu
<path>/usr/share/zoneinfo/Etc/GMT*</path> karena namanya tidak mengindikasikan
zona yang diharapkan. <path>GMT-8</path> sesungguhnya adalah GMT+8.
</p>

<pre caption="Mengatur zona waktu">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Misalnya anda ingin menggunakan GMT)</comment>
# <i>nano -w /etc/conf.d/clock</i>
TIMEZONE="GMT"
</pre>

</body>
</section>
<section>
<title>Instalasi Source Kernel</title>
<subsection>
<title>Memilih Kernel</title>
<body>

<p>
Inti/Jantung dari semua distro adalah kernel Linux. Kernel adalah sebuah
lapisan antara program-program pengguna dengan perangkat keras sistem. Gentoo
menyediakan beberapa kernel untuk para penggunanya. Sebuah daftar lengkap
beserta penjelasannya bisa anda dapatkan di <uri
link="/doc/id/gentoo-kernel.xml">Panduan Kernel Gentoo</uri>.
</p>

<p>
Kami anjurkan anda untuk menggunakan paket <c>gentoo-sources</c>, yang berisi
kernel 2.6 baru.
</p>

<pre caption="Instalasi source kernel">
# <i>emerge --usepkg gentoo-sources</i>
</pre>

<p>
Jika anda melihat isi direktori <path>/usr/src</path>, anda akan menemukan
sebuah link simbolik (symlink) bernama <path>linux</path> yang menunjuk ke
kernel <c>gentoo-sources-<keyval id="kernel-version"/></c>. Versi anda mungkin
berbeda, jadi ingatlah ini.
</p>

<pre caption="Melihat symlink kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           22  Mar 18 16:23 /usr/src/linux -&gt; linux-<keyval id="kernel-gentoo"/>
</pre>

<p>
Sekarang saatnya untuk mengkonfigurasi dan mengkompilasi kernel anda. Anda
dapat menggunakan <c>genkernel</c> untuk melakukannya, yang akan menciptakan
sebuah kernel generik seperti yang digunakan oleh CD Instalasi. Kami akan
menjelaskan metode manual terlebih dahulu, karena metode ini merupakan cara
terbaik untuk mengoptimasi sistem anda.
</p>

<p>
Jika anda ingin mengkonfigurasi kernel secara manual, lanjutkan ke <uri
link="#manual">Default: Konfigurasi Manual</uri>. Jika anda ingin menggunakan
<c>genkernel</c>, anda sebaiknya membaca bagian <uri
link="#genkernel">Alternatif: Menggunakan genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Default: Konfigurasi Manual</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Konfigurasi kernel secara manual sering dianggap sebagai prosedur tersulit yang
harus dijalankan oleh setiap pengguna Linux. Memang benar, setelah
mengkonfigurasi beberapa kernel, anda tidak akan lagi ingat bahwa cara tersebut
sulit ;-)
</p>

<p>
Bagaimanapun juga, satu hal <e>selalu</e> benar: anda harus mengenal sistem
anda sebelum mulai mengkonfigurasi kernel secara manual. Kebanyakan informasi
dapat ditemukan dengan menginstal pciutils (<c>emerge --usepkg pciutils</c>)
yang berisi <c>lspci</c>. Anda juga bisa menggunakan <c>lspci</c> dari dalam
lingkungan chroot. Biarkan saja peringatan <c>pcilib</c> (seperti <e>pcilib:
cannot open /sys/bus/pci/devices</e>) yang dikeluarkan oleh <c>lspci</c>.
Anda juga dapat menggunakan <c>lspci</c> dari lingkungan <e>non-chroot</e>.
Hasilnya sama saja. Anda dapat juga menjalankan <c>lsmod</c> untuk melihat
modul kernel apa saja yang digunakan oleh CD Instalasi (outputnya mungkin dapat
memberi anda gambaran tentang apa saja yang harus diaktifkan). Tempat lain
untuk mencari info tentang komponen yang perlu anda aktifkan adalah log
pesan-pesan kernel setelah boot yang sukses. Jalankan <c>dmesg</c> untuk
menampilkan pesan-pesan kernel.
</p>

<p>
Sekarang masuklah ke direktori source kernel anda, saatnya untuk mengkonfigurasi
kernel. Mulailah dengan mengkonfigurasi kernel yang secara umum dapat boot pada
komputer PowerPC 32-bit dengan menjalankan <c>make pmac32_defconfig</c>. Setelah
konfigurasi default tercipta, jalankan <c>make menuconfig</c> yang akan
menampilkan menu konfigurasi berbasis <e>ncurses</e>.
</p>

<pre caption="Menjalankan menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make pmac32_defconfig</i>
# <i>make menuconfig</i>
</pre>

<p>
Anda akan menemukan beberapa seksi konfigurasi. Pertama-tama kami akan
menjelaskan beberapa opsi yang harus anda aktifkan (jika tidak, Gentoo tidak
dapat berfungsi dengan baik tanpa <e>tweak</e> tambahan).
</p>

</body>
</subsection>
<subsection>
<title>Mengaktifkan opsi-opsi yang diperlukan</title>
<body>

<p>
Pertama, aktifkan penggunaan "development and experimental code/drivers".
Anda memerlukannya, jika tidak, beberapa kode/driver yang sangat penting
tidak akan ditampilkan:
</p>

<pre caption="Memilih kode/driver eksperimental">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Sekarang masuklah ke <c>File Systems</c> dan aktifkan dukungan untuk filesystem
yang anda gunakan. <b>Jangan</b> kompilasi dukungan tersebut sebagai modul,
jika tidak, sistem Gentoo anda tidak akan dapat me-mount partisi-partisi anda.
Selain itu, aktifkan juga <c>/proc file system</c> dan <c>Virtual memory</c>.
Anda juga perlu mengaktifkan dukungan untuk partisi Amiga jika anda menggunakan
Pegasos, atau dukungan partisi Macintosh jika anda menggunakan komputer Apple.
</p>

<pre caption="Memilih filesystem yang diperlukan">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
<comment>(/proc mungkin sudah diaktifkan dengan paksa oleh konfigurasi anda. Jika begitu, anda hanya akan melihat --- )</comment>
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)
  Partition Types ---&gt;
    [*] Advanced partition support
    [*] Amiga partition table support
    [*] Macintosh partition map support

<comment>(Aktifkan satu atau lebih opsi-opsi berikut sesuai kebutuhan sistem anda)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Pengguna komputer NewWorld dan OldWorld harus mengaktifkan dukungan HFS.
Pengguna OldWorld memerlukannya untuk menyalin kernel dari partis MacOS.
Sedangkan pengguna NewWorld memerlukannya untuk mengkonfigurasi partisi
Apple_Bootstrap:
</p>

<pre caption="Mengaktifkan dukungan HFS">
File Systems ---&gt;
  Miscellaneous filesystems ---&gt;
    &lt;M&gt; Apple Macintosh file system support
    &lt;M&gt; Apple Extended HFS file system support
</pre>

<p>
Jika anda menggunakan PPPoE untuk koneksi internet atau modem dial-up,
anda memerlukan opsi-opsi berikut di kernel:
</p>

<pre caption="Memilih driver-driver PPPoE yang diperlukan">
Device Drivers ---&gt;
  Network device support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Kedua opsi kompresi tidak berbahaya tetapi tidak selalu diperlukan. Opsi <c>PPP
over Ethernet</c>, hanya dapat digunakan oleh <c>ppp</c> jika dikonfigurasi
untuk melakukan PPPoE modus kernel.
</p>

<p>
Jangan lupa tambahkan dukungan kernel untuk kartu jaringan anda! Komputer Apple
baru biasanya menggunakan driver SunGEM. iMac lama biasanya menggunakan driver
BMAC.
</p>

<pre caption="Memilih driver kartu jaringan">
Device Drivers ---&gt;
  Network device support ---&gt;
    Ethernet (10 or 100Mbit) ---&gt;
      [*] Ethernet (10 or 100Mbit)
      &lt;*&gt;   Generic Media Independent Interface device support
      &lt;*&gt;   MACE (Power Mac ethernet) support
      &lt;*&gt;   BMAC (G3 ethernet) support
      &lt;*&gt;   Sun GEM support
</pre>

<p>
Untuk saat ini, <e>full kernel preemption</e> masih belum stabil di PPC dan
dapat mengakibatkan kegagalan kompilasi dan <e>segfaults</e>. Anda
<b>sangat</b> dianjurkan untuk tidak menggunakan fitur ini. <e>Voluntary
Preemption</e> dan <e>No Forced Preemption</e> sudah cukup aman untuk
digunakan.
</p>

<pre caption="Memastikan opsi Preemptible Kernel tidak aktif">
Kernel options ---&gt;
<comment>(Pilih Satu)</comment>
  Preemption Model 
    (X) No Forced Preemption (Server)
    (X) Voluntary Kernel Preemption (Desktop)
</pre>

<p>
Jika anda boot dari Firmware, anda harus mengaktifkan opsi-opsi berikut ini.
Jika anda tidak ingin mengaktifkannya di dalam kernel, anda harus
mengikutsertakan modul-modul ini dan dependensinya di dalam sebuah initrd.
</p>

<pre caption="Mengaktifkan dukungan perangkat firewire ketika boot">
Device Drivers ---&gt;
  IEEE 1394 (FireWire) support ---&gt;
    &lt;*&gt; IEEE 1394 (FireWire) support
    &lt;*&gt;   OHCI-1394 support
    &lt;*&gt;   SBP-2 support (Harddisks etc.)
</pre>

<p>
Jika anda boot dari USB, anda harus mengaktifkan opsi-opsi berikut ini. Jika
anda tidak ingin mengaktifkannya di dalam kernel, anda perlu mengikutsertakan
modul-modul ini dan dependensinya di dalam intrd.
</p>

<pre caption="Mengaktifkan dukungan perangkat USB ketika boot">
Device Drivers ---&gt;
  USB support ---&gt;
    &lt;*&gt; Support for Host-side USB
    &lt;*&gt;   OHCI HCD support
    &lt;*&gt;   USB Mass Storage support
</pre>

<p>
Jangan nonaktifkan dukungan framebuffer kernel karena ini diperlukan untuk boot.
Jika anda menggunakan chipset berbasis nVidia, anda harus menggunakan
framebuffer OpenFirmware. Jika anda menggunakan chipset berbasis ATi, anda
harus memilih driver framebuffer yang sesuai dengan chipset anda (Mach64,
Rage128 atau Radeon).
</p>

<pre caption="Memilih Driver Framebuffer">
Device Drivers ---&gt;
  Graphics support ---&gt;
    &lt;*&gt; Support for frame buffer devices
    [*] Open Firmware frame buffer device support
    &lt;*&gt; ATI Radeon display support
    &lt;*&gt; ATI Rage128 display support
    &lt;*&gt; ATI Mach64 display support
    Console display driver support ---&gt;
      &lt;*&gt; Framebuffer Console support
</pre>

<note>
Jika anda memilih lebih dari satu driver frambuffer, kemungkinan framebuffer
defaultnya adalah driver yang kurang optimal. Gunakan saja salah satu atau
tentukan dengan menambahkan driver pilihan anda pada kernel ketika boot, dengan
menambahkan baris video, misalnya <c>video=radeonfb</c>.
</note>

<p>
Setelah anda selesai mengkonfigurasi kernel, lanjutkan ke <uri
link="#compiling">Kompilasi dan Instalasi</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilasi dan Instalasi</title>
<body>

<p>
Setelah kernel anda dikonfigurasi, sekarang saatnya untuk mengkompilasi dan
menginstalnya. Keluarlah dari menu konfigurasi dan mulailah proses kompilasi:
</p>

<pre caption="Kompilasi kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Setelah kernel selesai dikompilasi, salin imej kernel tersebut ke
<path>/boot</path> seperti berikut ini. Jika anda membuat partisi boot
terpisah seperti pada komputer Pegasos, pastikan agar <path>/boot</path> telah
di-mount dengan benar. Jika anda menggunakan BootX, kita akan menyalin kernel
nanti.
</p>

<p>
Yaboot dan BootX menggunakan kernel yang tidak dipadatkan, tidak seperti
kebanyakan bootloader lain. Kernel yang tidak dipadatkan terletak di
<path>/usr/src/linux</path> setelah kernel selesai dikompilasi. Jika anda
menggunakan komputer Pegasos, firmware Pegasos membutuhkan sebuah kernel padat
dengan nama zImage.chrp yang dapat anda temukan di
<path>/usr/src/linux/arch/powerpc/boot/images</path>.
</p>

<pre caption="Instalasi kernel">
# <i>cd /usr/src/linux</i>
<comment>Versi kernel anda mungkin berbeda</comment>
<comment>(Apple/IBM)</comment>
# <i>cp vmlinux /boot<keyval id="kernel-name"/></i>
<comment>(Pegasos)</comment>
# <i>cp arch/powerpc/boot/images/zImage.chrp /boot/<keyval id="kernel-name"/></i>
</pre>

<p>
Sekarang lanjutkan dengan <uri link="#kernel_modules">Instalasi
Modul-modul</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Instalasi Modul-modul</title>
<subsection>
<title>Konfigurasi Modul</title>
<body>

<p>
Anda harus mencantumkan modul-modul yang ingin anda muat secara otomatis di
<path>/etc/modules.autoload.d/kernel-2.6</path>. Anda dapat menambahkan opsi
tambahan pada modul jika diperlukan.
</p>

<p>
Untuk melihat modul-modul yang tersedia, jalankan perintah <c>find</c> berikut.
Jangan lupa untuk menggantikan "&lt;versi kernel&gt;" dengan versi kernel yang
baru saja anda kompilasi:
</p>

<pre caption="Melihat modul yang tersedia">
# <i>find /lib/modules/&lt;versi kernel&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Misalnya, untuk memuat modul <c>3c59x.o</c> secara otomatis, edit file
<path>/etc/modules.autoload.d/kernel-2.6</path> dan menuliskan nama modul
tersebut di dalamnya.
</p>

<pre caption="Edit /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Lanjutkan proses instalasi dengan bab <uri
link="?part=1&amp;chap=8">Konfigurasi Sistem</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternatif: Menggunakan genkernel</title>
<body>

<p>
Setelah source kernel anda terinstal, sekarang saatnya untuk mengkompilasi
kernel anda dengan skrip <c>genkernel</c> kami untuk membangun sebuah kernel
secara otomatis. <c>genkernel</c> bekerja dengan mengkonfigurasi sebuah kernel
yang hampir sama dengan cara kernel CD Instalasi kami dikonfigurasi. Ini
artinya, jika anda menggunakan <c>genkernel</c> untuk membangun kernel anda,
sistem anda akan secara umum mengenali semua perangkat keras anda pada saat
boot, seperti yang dilakukan oleh CD Instalasi kami. Karena genkernel tidak
memerlukan konfigurasi kernel secara manual, cara ini adalah cara yang ideal
bagi para pengguna yang belum terbiasa mengkompilasi kernel mereka sendiri.
</p>

<p>
Sekarang, mari kita lihat cara menggunakan genkernel. Pertama, emerge
genkernel:
</p>

<pre caption="Emerge genkernel">
# <i>emerge --usepkg genkernel</i>
</pre>

<p>
Kemudian, salin konfigurasi kernel yang digunakan oleh CD Instalasi ke lokasi
tempat genkernel mencari konfigurasi default kernel:
</p>

<pre caption="Menyalin Konfigurasi kernel CD Instalasi">
# <i>zcat /proc/config.gz > /usr/share/genkernel/ppc/kernel-config-2.6</i>
</pre>

<p>
Jika anda menggunakan Firewire atau USB untuk boot, anda harus menambahkan
modul-modulnya ke initrd. Edit <path>/usr/share/genkernel/ppc/modules_muat</path>
dan gantikan <c>MODULES_FIREWIRE="ieee1394 ohci1394 sbp2"</c> untuk dukungan
firewire atau <c>MODULES_USB="usbcore ohci-hcd ehci-hcd usb-storage"</c> untuk
dukungan USB.
</p>

<p>
Sebelum mengkompilasi kernel, and perlu sedikit mengadakan perubahan pada
fstab. Sisa dari isi file fstab akan kita lengkapi pada langkah berikutnya
nanti, jadi anda tidak perlu memikirkan tentang detilnya sekarang. Jika anda
tidak menciptakan partisi boot terpisah (BUKAN bootstrap), hapus baris yang
berisi <path>/boot</path> dari <path>/etc/fstab</path>. Hal ini perlu dilakukan
pada hampir semua komputer Apple.
</p>

<pre caption="Menghapus baris /boot dari /etc/fstab pada komputer tanpa partisi boot">
# <i>nano -w /etc/fstab</i>
<comment>Hapus baris ini</comment>
/dev/BOOT   /boot   ext2    noauto,noatime  1 2
</pre>

<p>
Sekarang, kompilasilah kernel anda dengan menjalankan <c>genkernel --genzimage
all</c>. Untuk Pegasos, kita harus menggunakan konfigurasi yang berbeda dan
menciptakan zImage, bukannya vmlinux yang digunakan di komputer Apple. Perlu
anda ketahui juga, karena <c>genkernel</c> mengkompilasi sebuah kernel yang
mendukung hampir semua perangkat keras, kompilasi ini akan berjalan cukup lama!
</p>

<p>
Catat juga, jika partisi boot anda tidak menggunakan ext2 atau ext3 sebagai
filesystem-nya, anda mungkin harus mengkonfigurasi kernel secara manual dengan
perintah <c>genkernel --menuconfig all</c> dan menambahkan dukungan untuk
filesystem anda <b>di dalam</b> kernel (<b>bukan</b> sebagai modul). Pengguna
EVMS2 atau LVM2 mungkin perlu menambahkan argumen <c>--evms2</c> atau
<c>--lvm2</c>.
</p>

<pre caption="Menjalankan genkernel">
# <i>genkernel all</i>
</pre>

<pre caption="Menjalankan genkernel pada Pegasos">
# <i>genkernel --genzimage --kernel-config=/usr/share/genkernel/ppc/Pegasos all</i>
</pre>

<p>
Setelah <c>genkernel</c> selesai, sebuah kernel, kumpulan lengkap modul, dan
<e>initial root disk</e> (initrd) akan diciptakan. Kita akan menggunakan kernel
dan initrd tersebut pada saat mengkonfigurasi bootloader nantinya. Catat nama
kernel dan initrd anda karena anda akan memerlukannya nanti ketika menulis file
konfigurasi bootloader. initrd akan dijalankan secara otomatis pada saat boot
untuk melakukan pengenalan perangkat keras (hardware) (seperti CD Instalasi)
sebelum sistem "asli" dijalankan. Jangan lupa untuk menyalin argumen boot yang
diperlukan karena penting untuk mendapatkan boot yang sukses dengan genkernel.
</p>

<pre caption="Memeriksa nama kernel dan initrd yang baru diciptakan">
<comment>Catatan, versi kernel anda mungkin berbeda</comment>
# <i>ls /boot/kernel-genkernel-ppc-<keyval id="kernel-gentoo"/>
# /boot/initramfs-genkernel-ppc-<keyval id="kernel-gentoo"/></i>
</pre>

<p>
Sekarang lanjutkan dengan <uri link="?part=1&amp;chap=8">Konfigurasi
Sistem</uri>.
</p>

</body>
</section>
</sections>
