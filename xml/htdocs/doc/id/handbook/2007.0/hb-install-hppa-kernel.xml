<?xml version='1.0' encoding='UTF-8'?>
<!-- $Id: hb-install-hppa-kernel.xml,v 1.2 2007/05/15 12:15:42 neysx Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>
  
<version>8.0</version>
<date>2007-05-07</date>

<section>
<title>Zona Waktu (Timezone)</title>
<body>

<p>
Pertama, anda perlu memilih zona waktu agar sistem anda mengetahui posisinya.
Carilah zona waktu anda di <path>/usr/share/zoneinfo</path>, lalu tetapkan di
<path>/etc/conf.d/clock</path>. Hindari penggunaan zona waktu
<path>/usr/share/zoneinfo/Etc/GMT*</path> karena namanya tidak mengindikasikan
zona yang diharapkan. Misalnya, <path>GMT-8</path> sesungguhnya adalah GMT+8.
</p>

<pre caption="Set informasi zona waktu">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Misalnya anda ingin menggunakan GMT)</comment>
# <i>nano -w /etc/conf.d/clock</i>
TIMEZONE="GMT"
</pre>

</body>
</section>
<section>
<title>Instalasi Source</title>
<subsection>
<title>Memilih Sebuah Kernel</title>
<body>

<p>
Inti/Jantung dari semua distro adalah kernel Linux. Kernel adalah sebuah
lapisan antara program-program pengguna dengan perangkat keras sistem. Gentoo
menyediakan beberapa kernel untuk para penggunanya. Sebuah daftar lengkap
beserta penjelasannya bisa anda dapatkan di <uri
link="/doc/id/gentoo-kernel.xml">Panduan Kernel Gentoo</uri>.
</p>

<p>
Untuk HPPA, kami menyediakan <c>hppa-sources</c>. Secara default, paket ini
berbasis kernel seri 2.6.
</p>

<pre caption="Instalasi kernel">
# <i>emerge hppa-sources</i>
</pre>

<p>
Jika anda melihat ke direktori <path>/usr/src</path>, anda akan menemukan
sebuah link simbolik (symlink) bernama <path>linux</path> yang menunjuk
ke kernel anda. Pada kasus ini, source kernel yang terinstal menunjuk ke
<c>hppa-sources-<keyval id="kernel-version"/></c>. Versi yang anda miliki
bisa jadi berbeda, jadi ingatlah ini selalu.
</p>

<pre caption="Melihat link simbolik kernel">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
Sekarang saatnya untuk mengkonfigurasi dan mengkompilasi kernel. Semua
arsitektur dapat menggunakan <c>genkernel</c> untuk melakukannya, yang akan
menciptakan sebuah kernel generik seperti yang digunakan oleh CD Instalasi.
Kami akan menjelaskan cara konfigurasi secara "manual" dahulu, karena cara
ini adalah cara terbaik untuk mengoptimasi sistem anda.
</p>

<p>
Jika anda ingin mengkonfigurasi kernel secara manual, lanjutkan ke <uri
link="#manual">Default: Konfigurasi Manual</uri>. Jika anda ingin
menggunakan <c>genkernel</c>, anda sebaiknya membaca bagian <uri
link="#genkernel">Alternatif: Menggunakan genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Default: Konfigurasi Manual</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Konfigurasi kernel secara manual tampaknya adalah prosedur tersulit yang
harus dilakukan oleh setiap pengguna Linux. Memang benar -- setelah
mengkonfigurasi beberapa kernel, anda tidak akan lagi ingat bahwa cara
tersebut sulit ;-)
</p>

<p>
Bagaimanapun juga, satu hal <e>selalu</e> benar: anda harus mengenal sistem
anda sebelum mulai mengkonfigurasi kernel secara manual. Kebanyakan informasi
dapat ditemukan dengan menginstall pciutils (<c>emerge pciutils</c>) yang
berisi <c>lspci</c>. Anda sekarang bisa menggunakan <c>lspci</c> dari dalam
lingkungan chroot. Biarkan saja peringatan <c>pcilib</c> (seperti <e>pcilib:
cannot open /sys/bus/pci/devices</e>) yang ditampilkan oleh <c>lspci</c>. Anda
juga dapat menggunakan <c>lspci</c> dari lingkungan <e>non-chroot</e>. Hasilnya
sama saja. Selain itu, anda juga dapat menjalankan <c>lsmod</c> untuk melihat
modul kernel apa saja yang digunakan oleh CD Instalasi (outputnya mungkin dapat
memberi anda gambaran tentang apa saja yang harus diaktifkan).
</p>

<p>
Sekarang, masuklah ke direktori kernel anda dan jalankan <c>make
menuconfig</c>. Perintah ini akan menampilkan menu konfigurasi berbasis
<e>ncurses</e>.
</p>

<pre caption="Menjalankan menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Anda akan menemukan beberapa seksi konfigurasi. Kami pertama-tama akan
menjelaskan beberapa opsi yang harus anda aktifkan (jika tidak, Gentoo tidak
dapat berfungsi dengan baik tanpa <e>tweak</e> tambahan).
</p>

</body>
</subsection>
<subsection>
<title>Mengaktifkan opsi-opsi yang diperlukan</title>
<body>

<p>
Pertama, aktifkan penggunaan "development and experimental code/drivers".
Anda memerlukannya, jika tidak, beberapa kode/driver yang sangat penting
tidak akan ditampilkan:
</p>

<pre caption="Memilih kode/driver eksperimental">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
General setup --->
  [*] Support for hot-pluggable devices
</pre>

<p>
Sekarang masuklah ke <c>File Systems</c> dan aktifkan dukungan untuk filesystem
yang anda gunakan. <b>Jangan</b> kompilasi dukungan tersebut sebagai modul,
jika tidak, sistem Gentoo anda tidak akan dapat me-mount partisi-partisi anda.
Selain itu, aktifkan juga <c>Virtual memory</c>, dan <c>/proc file system</c>:
</p>

<pre caption="Memilih filesystem yang diperlukan">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Aktifkan satu atau lebih opsi-opsi berikut sesuai kebutuhan sistem anda)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Jika anda menggunakan PPPoE untuk koneksi internet atau modem dial-up,
anda memerlukan opsi-opsi berikut di kernel:
</p>

<pre caption="Memilih driver-driver PPPoE yang diperlukan">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Kedua opsi kompresi tidak berbahaya tetapi tidak benar-benar diperlukan, begitu
juga dengan opsi <c>PPP over Ethernet</c>, opsi-opsi tersebut mungkin hanya
digunakan oleh <c>ppp</c> jika dikonfigurasi untuk melakukan PPPoE modus
kernel.
</p>

<p>
Jika anda memerlukannya, jangan lupa untuk mengaktifkan dukungan kernel
untuk kartu ethernet anda.
</p>

<p>
Jika anda memiliki mouse atau keyboard HIL, jangan lupa untuk mengkompilasi
dukungan kernelnya.
</p>

<pre caption="Aktifkan dukungan HIL">
Input core support ---&gt;
  [*] Keyboard support
  [*] Mouse support
  [*] Event interface support
</pre>

<p>
Jika anda tidak memiliki mouse pada port HIL anda, gunakan saja dukungan dasar:
</p>

<pre caption="Dukungan HIL dasar">
HIL support ---&gt;
  [*] HIL Keyboard (basic) support
</pre>

<p>
Tetapi, jika anda menginginkan dukungan <e>penuh</e> HIL, aktifkan opsi-opsi
berikut ini:
</p>

<pre caption="Dukungan penuh HIL">
HIL support ---&gt;
  [*] HP System Device Controller i8042 Support
  [*] HIL MLC Support
  [*] HIL Keyboard (full) support
  [*] HIL Mouse &amp; Pointer support
</pre>

<p>
Dan juga, aktifkan dukungan driver video:
</p>

<pre caption="Dukungan driver video">
Graphics support ---&gt;
  [*] Support for frame buffer devices
      [*] HP STI frame buffer device support
  Console display driver support ---&gt;
      [*] STI text console
</pre>

<p>
Setelah anda selesai mengkonfigurasi kernel, lanjutkan ke <uri
link="#compiling">Kompilasi dan Instalasi</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Kompilasi dan Instalasi</title>
<body>

<p>
Setelah kernel anda dikonfigurasi, sekarang saatnya untuk mengkompilasi dan
menginstalnya. Keluarlah dari menu konfigurasi dan mulailah proses kompilasi:
</p>

<pre caption="Kompilasi kernel">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Setelah kernel selesai dikompilasi, salin imej kernel tersebut ke
<path>/boot</path>. Gunakan nama apapun yang anda rasa cocok untuk pilihan anda
dan ingatlah namanya karena anda akan memerlukannya nanti pada saat
mengkonfigurasi bootloader. Jangan lupa untuk mengganti
<path>&lt;versi-kernel&gt;</path> dengan nama dan versi kernel anda.
</p>

<pre caption="Instalasi kernel">
# <i>cp vmlinux /boot/&lt;kernel-version&gt;</i>
</pre>

<p>
Sekarang lanjutkan ke <uri link="#kernel_modules">Konfigurasi Modul-Modul
Kernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternatif: Menggunakan genkernel</title>
<body>

<p>
Jika anda membaca bagian ini, berarti anda memilih untuk menggunakan skrip
<c>genkernel</c> kami untuk mengkonfigurasi kernel bagi anda.
</p>

<p>
Setelah source kernel anda terinstal, sekarang saatnya untuk mengkompilasi
kernel anda dengan skrip <c>genkernel</c> kami untuk membangun sebuah kernel
secara otomatis. <c>genkernel</c> bekerja dengan mengkonfigurasi sebuah kernel
yang hampir sama dengan cara kernel CD Instalasi kami dikonfigurasi. Ini
artinya, jika anda menggunakan <c>genkernel</c> untuk membangun kernel anda,
sistem anda akan secara umum mengenali semua perangkat keras anda pada saat
boot, seperti yang dilakukan oleh CD Instalasi kami. Karena genkernel tidak
memerlukan konfigurasi kernel secara manual, cara ini adalah cara yang ideal
bagi para pengguna yang belum terbiasa mengkompilasi kernel mereka sendiri.
</p>

<p>
Sekarang, mari kita lihat cara menggunakan genkernel. Pertama, emerge
genkernel:
</p>

<pre caption="Instalasi genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Kemudian, kompilasilah kernel anda dengan menjalankan perintah <c>genkernel
all</c>. Perlu anda ketahui juga, karena <c>genkernel</c> mengkompilasi kernel
yang mendukung hampir semua perangkat keras, kompilasi ini akan berjalan cukup
lama!
</p>

<p>
Catat juga, jika partisi boot anda tidak menggunakan ext2 atau ext3 sebagai
filesystem-nya, anda harus mengkonfigurasi kernel secara manual dengan
perintah <c>genkernel --menuconfig all</c> dan menambahkan dukungan untuk
filesystem anda <b>di dalam</b> kernel (<b>bukan</b> sebagai modul).
</p>

<pre caption="Menjalankan genkernel">
# <i>genkernel all</i>
</pre>

<p>
Setelah <c>genkernel</c> selesai, sebuah kernel, kumpulan lengkap modul, dan
<e>initial root disk</e> (initrd) akan diciptakan. Kita akan menggunakan kernel
dan initrd tersebut ketika mengkonfigurasi bootloader nantinya. Catat nama
kernel dan initrd anda karena anda akan memerlukannya nanti pada saat
menulis file konfigurasi bootloader. initrd akan dijalankan secara otomatis pada
saat boot untuk melakukan pengenalan perangkat keras (seperti CD Instalasi)
sebelum sistem "asli" dijalankan.
</p>

<pre caption="Memeriksa nama kernel dan initrd yang baru diciptakan">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Konfigurasi Modul-Modul Kernel</title>
<subsection>
<title>Konfigurasi Modul</title>
<body>

<p>
Anda harus menuliskan semua modul yang ingin anda muat secara otomatis di file
<path>/etc/modules.autoload.d/kernel-2.6</path>. Anda juga dapat menambahkan
opsi-opsi tambahan pada modul-modul tersebut jika anda mau.
</p>

<p>
Untuk melihat modul yang tersedia, jalankan perintah <c>find</c> berikut.
Jangan lupa untuk menggantikan "&lt;versi kernel&gt;" dengan versi kernel yang
baru saja anda kompilasi:
</p>

<pre caption="Melihat modul yang tersedia">
# <i>find /lib/modules/&lt;versi kernel&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Misalnya, untuk memuat modul <c>3c59x.o</c> secara otomatis, edit file
<path>/etc/modules.autoload.d/kernel-2.6</path> dan menuliskan nama modul
tersebut di dalamnya.
</p>

<pre caption="Edit file /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Lanjutkan proses instalasi dengan bab <uri
link="?part=1&amp;chap=8">Konfigurasi Sistem</uri>.
</p>

</body>
</subsection>
</section>
</sections>
