<?xml version='1.0' encoding='UTF-8'?>
<!-- $Id: hb-install-alpha-bootloader.xml,v 1.2 2007/05/15 12:15:42 neysx Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>8.0</version>
<date>2007-05-07</date>

<section>
<title>Menentukan Pilihan</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Sekarang setelah kernel anda terkonfigurasi dan dikompilasi, serta file-file
konfigurasi sistem yang penting telah diisi dengan benar, ini saatnya untuk
menginstal sebuah program yang akan menjalankan kernel anda ketika anda
menghidupkan komputer anda. Program tersebut adalah <e>bootloader</e>.
</p>

<p>
Terdapat beberapa bootloader untuk Linux/Alpha. Anda harus memilih salah satu
dari bootloader yang didukung, bukan semua. Anda memiliki pilihan antara <uri
link="#aboot">aBoot</uri> dan <uri link="#milo">MILO</uri>.
</p>

</body>
</subsection>
</section>
<section id="aboot">
<title>Default: Menggunakan aboot</title>
<body>

<note>
<c>aboot</c> hanya mendukung boot dari partisi <b>ext2</b> dan <b>ext3</b>
</note>

<p>
Pertama-tama, kita instal aboot di sistem kita. Tentu saja kita menggunakan
perintah <c>emerge</c> untuk melakukannya:
</p>

<pre caption="Instalasi aboot">
# <i>emerge aboot</i>
</pre>

<p>
Langkah selanjutnya adalah menjadikan bootdisk kita <e>bootable</e>. Ini akan
menjalankan <c>aboot</c> pada saat anda boot sistem anda. Kita lakukan ini
dengan dengan menuliskan <c>aboot</c> pada awal disk kita.
</p>

<pre caption="Menjadikan bootdisk bootable">
# <i>swriteboot -f3 /dev/sda /boot/bootlx</i>
# <i>abootconf /dev/sda 2</i>
</pre>

<note>
Jika anda menggunakan skema partisi yang berbeda dari yang kami gunakan di
panduan ini, anda harus menyesuaikan perintah-perintahnya. Bacalah
halaman-halaman manual yang bersangkutan (<c>man 8 swriteboot</c> dan <c>man 8
abootconf</c>). Begitu juga jika filesystem root anda menggunakan filesystem
JFS, jangan lupa tambahkan <c>ro</c> sebagai opsi kernel agar JFS dapat
me-<e>replay</e> log-nya sebelum melakukan mount secara <e>read-write</e>.
</note>

<p>
Sebagai tambahan, anda dapat membuat Gentoo boot secara otomatis dengan
mengatur file konfigurasi aboot dan beberapa variabel. Anda juga dapat mencoba
untuk menetapkan variabel-variabel ini dari Linux, tetapi akan lebih mudah
untuk melakukannya langsung dari konsol SRM.
</p>

<pre caption="Otomatis boot Gentoo">
# <i>echo '0:2/boot/vmlinux.gz root=/dev/sda2' &gt; /etc/aboot.conf</i>
# <i>cd /proc/srm_environment/named_variables</i>
# <i>echo -n 0 &gt; boot_osflags</i>
# <i>echo -n '' &gt; boot_file</i>
# <i>echo -n 'BOOT' &gt; auto_action</i>
# <i>echo -n 'dkc100' &gt; bootdef_dev</i>
<comment>(Gantikan dkc100 dengan perangkat boot anda)</comment>
</pre>

<p>
Jika anda harus masuk ke konsol SRM lagi (untuk memperbaiki instalasi Gentoo
anda, bermain dengan beberapa variabel, atau lain-lain), tekan saja CTRL+C
untuk membatalkan proses boot otomatis.
</p>

<p>
Jika anda melakukan instalasi dengan menggunakan konsol serial, jangan lupa
untuk mengikutsertakan flag boot konsol serial di <path>aboot.conf</path>.
Bacalah <path>/etc/aboot.conf.example</path> untuk informasi lebih lanjut.
</p>

<p>
Sekarang aboot telah terkonfigurasi dan siap digunakan. Lanjutkan ke <uri
link="#reboot">Reboot Sistem</uri>.
</p>

</body>
</section>
<section id="milo">
<title>Alternatif: Menggunakan MILO</title>
<body>

<p>
Sebelum melanjutkan, anda sebaiknya memilih bagaimana cara menggunakan MILO. Di
bagian ini, kami menganggap anda ingin membuat floppy boot MILO. Jika anda
ingin boot dari sebuah partisi MS-DOS di harddisk anda, sebaiknya anda
menyesuaikan perintah-perintahnya.
</p>

<p>
Untuk menginstal MILO, kita gunakan perintah <c>emerge</c>.
</p>

<pre caption="Instalasi MILO">
# <i>emerge --usepkg milo</i>
</pre>

<p>
Setelah MILO terinstal, imej MILO seharusnya berada di <path>/opt/milo</path>.
Perintah-perintah berikut ini menciptakan floppy boot untuk digunakan dengan
MILO. Jangan lupa gunakan imej yang benar untuk sistem Alpha anda.
</p>

<pre caption="Instalasi MILO di floppy">
<comment>(Pertama, masukkan sebuah floppy kosong)</comment>
# <i>fdformat /dev/fd0</i>
# <i>mformat a:</i>
# <i>mcopy /opt/milo/milo-2.2-18-gentoo-ruffian a:\milo</i>
# <i>mcopy /opt/milo/linload.exe a:\linload.exe</i>
<comment>(Hanya jika anda menggunakan Ruffian:</comment>
  # <i>mcopy /opt/milo/ldmilo.exe a:\ldmilo.exe</i>
<comment>)</comment>
# <i>echo -ne '\125\252' | dd of=/dev/fd0 bs=1 seek=510 count=2</i>
</pre>

<p>
Floppy boot MILO anda sekarang sudah siap untuk boot ke Gentoo Linux. Anda
mungkin perlu mengatur variabel lingkungan di Firmware ARCS anda agar MILO
berjalan; Hal ini dijelaskan di <uri
link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri> dengan beberapa
contoh-contoh di sistem-sistem umum, dan contoh perintah-perintah yang
digunakan di modus interaktif.
</p>

<p>
Tidak membaca <uri link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri>
adalah ide yang <b>buruk</b>.
</p>

<p>
Sekarang lanjutkan ke <uri link="#reboot">Reboot Sistem</uri>.
</p>

</body>
</section>
<section id="reboot">
<title>Reboot Sistem</title>
<subsection>
<body>

<p>
Keluarlah dari lingkungan chroot dan unmount semua partisi yang ter-mount. Lalu
ketik perintah ajaib yang telah anda tunggu-tunggu: <c>reboot</c>.
</p>

<pre caption="Keluar dari lingkungan chroot, unmount semua partisi and reboot">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Tentu saja, jangan lupa untuk mengeluarkan CD bootable, jika tidak CD tersebut
akan di-boot lagi, bukan sistem Gentoo baru anda.
</p>

<p>
Setelah anda reboot ke sistem Gentoo anda, selesaikan dengan <uri
link="?part=1&amp;chap=11">Menyelesaikan Instalasi Gentoo</uri>.
</p>

</body>
</subsection>
</section>

</sections>
