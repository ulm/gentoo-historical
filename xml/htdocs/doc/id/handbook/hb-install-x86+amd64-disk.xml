<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: hb-install-x86+amd64-disk.xml,v 1.7 2007/07/04 14:26:15 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<abstract>
Untuk menginstal Gentoo, anda harus menyediakan partisi-partisi yang
diperlukan. Bab ini menjelaskan cara mem-partisi sebuah agar dapat digunakan.
</abstract>

<version>5.1</version>
<date>2007-06-26</date>

<section>
<title>Pengenalan Block Device</title>
<subsection>
<title>Block Device</title>
<body>

<p>
Kita akan melihat lebih dalam tentang aspek disk di Gentoo Linux dan Linux pada
umumnya, termasuk filesystem Linux, partisi dan block device. Lalu, setelah
anda mulai mengenal disk dan filesystem luar dan dalam, anda akan dipandu dalam
proses pembuatan partisi dan filesystem untuk instalasi Gentoo Linux anda.
</p>

<p>
Pertama-tama, kami akan memperkenalkan <e>block device</e>. Block device yang
paling dikenal mungkin adalah device yang menunjukkan drive IDE pertama di
sistem Linux, bernama <path>/dev/hda</path>. Jika sistem anda menggunakan drive
SCSI atau SATA, maka drive pertama anda akan bernama <path>/dev/sda</path>.
</p>

<p>
Block device di atas menunjukkan sebuah anatarmuka abstrak ke disk.
Program-program dapat menggunakan block device tersebut untuk berinteraksi
dengan disk anda tanpa perlu khawatir apakah drive anda adalah IDE, SCSI,
atau yang lain. Program-program dapat dengan mudah menuliskan data ke disk
sebagai susunan blok-blok 512 byte yang dapat diakses secara acak.
</p>

</body>
</subsection>
<subsection>
<title>Partisi</title>
<body>

<p>
Walaupun secara teori anda dapat menggunakan seluruh disk anda untuk sistem
Linux, hal ini hampir tidak pernah diterapkan. Tetapi, block device disk
dipisah-pisahkan lagi menjadi block device yang lebih kecil, lebih mudah
ditangani. Pada sistem <keyval id="arch"/>, block device kecil tersebut
dikenal sebagai <e>partisi</e>.
</p>

<p>
Partisi dapat dibagi menjadi tiga jenis:
<e>primary</e>, <e>extended</e>, dan <e>logical</e>.
</p>

<p>
Partisi <e>primary</e> adalah sebuah partisi yang informasinya tersimpan di MBR
(Master Boot Record). Karena MBR sangat kecil (512 byte), hanya empat partisi
primary yang dapat diciptakan (sebagai contoh, <path>/dev/hda1</path> sampai
<path>/dev/hda4</path>).
</p>

<p>
Partisi <e>extended</e> adalah partisi primary khusus (artinya partisi extended
adalah salah satu dari empat partisi primary yang mungkin) yang berisi lebih
banyak partisi di dalamnya. Partisi tersebut pada awalnya tidak ada, tetapi
karena empat partisi dianggap sangat sedikit, maka partisi extended diciptakan
untuk menambahkan skema partisi tanpa kehilangan kompatibilitas terhadap skema
yang lama.
</p>

<p>
Partisi <e>logical</e> adalah partisi di dalam partisi extended. Informasi
partisi tersebut tidak tersimpan di MBR, tetapi didefinisikan di dalam partisi
extended.
</p>

</body>
</subsection>
<subsection>
<title>Advanced Storage</title>
<body>

<p>
CD Instalasi <keyval id="arch"/> menyediakan dukungan untuk EVMS dan LVM2.
EVMS dan LVM2 meningkatkan fleksibilitas ketika anda menciptakan partisi.
Selama proses instalasi, kami akan berfokus pada partisi "biasa", tetapi bagus
juga untuk mengetahui bahwa EVMS dan LVM2 juga didukung.
</p>

</body>
</subsection>
</section>
<section>
<title>Merancang Skema Partisi</title>
<subsection>
<title>Skema partisi default</title>
<body>

<p>
Jika anda tidak tertarik untuk merancang skema partisi anda sendiri, anda dapat
menggunakan skema partisi yang kami gunakan di seluruh buku ini:
</p>

<table>
<tr>
  <th>Partisi</th>
  <th>Filesystem</th>
  <th>Besar</th>
  <th>Penjelasan</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>ext2</ti>
  <ti>32M</ti>
  <ti>Partisi boot</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Partisi swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>ext3</ti>
  <ti>Sisa dari disk</ti>
  <ti>Partisi root</ti>
</tr>
</table>

<p>
Jika anda tertarik untuk mengetahui seberapa besar sebuah partisi harusnya,
atau tentang berapa banyak partisi yang anda perlukan, baca terus bagian
selanjutnya. Jika tidak, lanjutkan dengan proses pembuatan partisi, dengan
membaca <uri link="#fdisk">Menggunakan fdisk untuk mem-partisi disk</uri>:
</p>

</body>
</subsection>
<subsection>
<title>Berapa banyak dan berapa besar?</title>
<body>

<p>
Jumlah partisi sangat tergantung pada lingkungan anda. Sebagai contoh, jika
anda memiliki banyak pengguna, anda mungkin sekali ingin menciptakan partisi
<path>/home</path> yang terpisah untuk meningkatkan keamanan dan
mempermudah proses backup. Jika anda menginstal Gentoo sebagai server mail,
partisi <path>/var</path> anda sebaiknya dipisahkan karena surat-surat anda
disimpan di partisi <path>/var</path>. Pilihan filesystem yang tepat juga dapat
meningkatkan performa. Server-server game sebaiknya memiliki
partisi <path>/opt</path> yang terpisah karena kebanyakan server game diinstal
di partisi tersebut. Alasan utamanya juga sama dengan partisi
<path>/home</path>: keamanan dan backup. Anda pasti ingin menjaga
<path>/usr</path> agar tetap luas: bukan hanya karena partisi ini menampung
hampir semua aplikasi, tetapi pohon Portage saja memerlukan ruang sebesar 500MB,
belum termasuk berbagai macam source code yang disimpan di dalamnya.
</p>

<p>
Seperti yang anda lihat, jumlah partisi sangat tergantung pada tujuan
anda. Partisi-partisi yang terpisah memiliki beberapa keuntungan:
</p>

<ul>
<li>
  Anda dapat memilih filesystem yang paling tepat untuk setiap partisi
</li>
<li>
  Seluruh sistem anda tidak akan kehabisan ruang kosong jika sebuah aplikasi
  secara terus-menerus menulis file-file ke sebuah partisi.
</li>
<li>
  Waktu untuk memeriksa filesystem lebih cepat, karena beberapa pemeriksaan
  dapat dijalankan secara bersamaan (walaupun keuntungan ini lebih dirasakan
  oleh multi-disk daripada multi-partisi)
</li>
<li>
  Keamanan dapat ditingkatkan dengan me-mount beberapa partisi secara
  <e>read-only</e> nosuid (setuid bit diabaikan), noexec (executable bit
  diabaikan), dll.
</li>
</ul>

<p>
Walaupun begitu, multi-partisi memiliki satu kelemahan utama: jika tidak
dikonfigurasi dengan benar, anda akan mendapatkan sistem yang memiliki banyak
ruang kosong di satu partisi dan kekurangan ruang di partisi yang lain. Untuk
sistem SCSI dan SATA, terdapat batas partisi sebanyak 15.
</p>

<p>
Berikut ini adalah contoh tabel partisi disk 20 GB, yang digunakan pada laptop
(berisi webserver, mailserver, gnome, ...):
</p>

<pre caption="Contoh Penggunaan Filesystem">
$ <i>df -h</i>
Filesystem    Type    Size  Used Avail Use% Mounted on
/dev/hda5     ext3    509M  132M  351M  28% /
/dev/hda2     ext3    5.0G  3.0G  1.8G  63% /home
/dev/hda7     ext3    7.9G  6.2G  1.3G  83% /usr
/dev/hda8     ext3   1011M  483M  477M  51% /opt
/dev/hda9     ext3    2.0G  607M  1.3G  32% /var
/dev/hda1     ext2     51M   17M   31M  36% /boot
/dev/hda6     swap    516M   12M  504M   2% &lt;not mounted&gt;
<comment>(Sisa disk yang tidak dipartisi untuk penggunaan masa datang: 2 Gb)</comment>
</pre>

<p>
Partisi <path>/usr</path> hampir penuh (terpakai 83%) pada contoh di atas,
tetapi setelah seluruh software terinstal, partisi <path>/usr</path> tidak
akan berkembang banyak lagi. Untuk partisi <path>/var</path>, Kelihatannya
ruang yang dialokasikan terlalu banyak, ingatlah bahwa Portage secara default
menggunakan partisi ini untuk mengkompliasi semua program. Jika anda ingin
menjaga <path>/var</path> agar tetap memiliki ukuran yang cukup, misalnya
1GB, anda perlu mengganti variabel <c>PORTAGE_TMPDIR</c> di
<path>/etc/make.conf</path> agar menunjuk ke sebuah pertisi yang memiliki ruang
kosong yang cukup untuk mengkompilasi paket-paket besar seperti OpenOffice.
</p>

</body>
</subsection>
</section>
<section id="fdisk">
<title>Menggunakan fdisk untuk mem-partisi disk</title>
<subsection>
<body>

<p>
Bagian berikut ini menjelaskan cara menciptakan tabel partisi seperti yang
dijabarkan sebelumnya, yaitu:
</p>

<table>
<tr>
  <th>Partisi</th>
  <th>Penjelasan</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>Partisi boot</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>Partisi swap</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Partisi root</ti>
</tr>
</table>

<p>
Gantilah tabel partisi anda sesuai kebutuhan anda.
</p>

</body>
</subsection>
<subsection>
<title>Menampilkan tabel partisi saat ini</title>
<body>

<p>
<c>fdisk</c> merupakan utilitas yang populer dan bagus untuk membagi disk
menjadi beberapa partisi. Jalankan <c>fdisk</c> pada disk anda (pada contoh
ini, kita menggunakan <path>/dev/hda</path>):
</p>

<pre caption="Menjalankan fdisk">
# <i>fdisk /dev/hda</i>
</pre>

<p>
Setelah anda berada di dalam <c>fdisk</c>, anda akan mendapatkan prompt seperti
berikut:
</p>

<pre caption="prompt fdisk">
Command (m for help):
</pre>

<p>
Ketik <c>p</c> untuk menampilkan tabel partisi disk anda saat ini:
</p>

<pre caption="Contoh tabel partisi">
Command (m for help): <i>p</i>

Disk /dev/hda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        49    264600   82  Linux swap
/dev/hda3            50        70    158760   83  Linux
/dev/hda4            71      2184  15981840    5  Extended
/dev/hda5            71       209   1050808+  83  Linux
/dev/hda6           210       348   1050808+  83  Linux
/dev/hda7           349       626   2101648+  83  Linux
/dev/hda8           627       904   2101648+  83  Linux
/dev/hda9           905      2184   9676768+  83  Linux

Command (m for help):
</pre>

<p>
Disk tersebut berisi tujuh partisi Linux (setiap partisi dengan System
tertulis sebagai "Linux") dan juga sebuah partisi swap (tertulis sebagai
"Linux swap").
</p>

</body>
</subsection>
<subsection>
<title>Menghapus semua partisi</title>
<body>

<p>
Pertama, kita akan menghapus semua partisi yang sudah ada. Ketik <c>d</c>
untuk menghapus partisi. Sebagai contoh, untuk menghapus partisi
<path>/dev/hda1</path>:
</p>

<pre caption="Menghapus partisi">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
Partisi tersebut telah dijadwalkan untuk dihapus dan tidak akan lagi
ditampilkan ketika anda mengetik <c>p</c>, tetapi tidak juga akan dihapus
sebelum anda menyimpan perubahan anda. Jika anda melakukan kesalahan dan
ingin membatalkan tanpa menyimpan perubahan, segera ketik <c>q</c> dan tekan
Enter, partisi anda tidak akan dihapus.
</p>

<p>
Sekarang, anggap anda benar-benar ingin menghapus seluruh partisi anda,
ketikkan <c>p</c> untuk menampilkan tabel partisi lalu diikuti dengan <c>d</c>
dan nomor partisi untuk menghapusnya. Pada akhirnya, anda akan mendapatkan
tabel partisi kosong:
</p>

<pre caption="Tabel partisi kosong">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Setelah tabel partisi di memori telah kosong, anda sudah siap untuk menciptakan
partisi. Kita akan menggunakan skema partisi default seperti yang dijabarkan
sebelumnya. Tentu saja, jangan ikuti instruksi ini tanpa penyesuaian jika anda
tidak ingin menggunakan skema partisi yang sama!
</p>

</body>
</subsection>
<subsection>
<title>Menciptakan partisi boot</title>
<body>

<p>
Pertama-tama, kita akan menciptakan sebuah boot kecil. Ketik <c>n</c> untuk
menciptakan sebuah partisi, lalu <c>p</c> untuk memilih partisi primary,
diikuti dengan <c>1</c> untuk memilih partisi primary pertama. Jika anda
ditanyakan tentang silinder pertama, tekan Enter. Ketika ditanyakan tentang
silinder terakhir, ketik <c>+32M</c> untuk menciptakan partisi sebesar 32MB:
</p>

<pre caption="Menciptakan partisi boot">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-3876, default 1): <comment>(Tekan Enter)</comment>
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <i>+32M</i>
</pre>

<p>
Sekarang, jika anda menekan <c>p</c>, anda akan melihat tabel partisi seperti
berikut:
</p>

<pre caption="Partisi boot baru">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
</pre>

<p>
Kita perlu menjadikan partisi tersebut <e>bootable</e>. Ketik <c>a</c> untuk
mengaktifkan flag bootable pada partisi ini dan pilih <c>1</c>. Jika anda
menekan <c>p</c> lagi, anda akan melihat tanda <path>*</path> di kolom "Boot".
</p>

</body>
</subsection>
<subsection>
<title>Menciptakan partisi swap</title>
<body>

<p>
Sekarang mari kita ciptakan partisi swap. Untuk melakukannya, ketik <c>n</c>
untuk menciptakan partisi baru, lalu <c>p</c> untuk membuat partisi primary.
Kemudian, ketik <c>2</c> untuk menciptakan partisi primary kedua, yaitu
<path>/dev/hda2</path>. Jika anda ditanyakan tentang silinder pertama, tekan
Enter. Ketika ditanyakan tentang silinder terakhir, ketik <c>+512M</c> untuk
menciptakan partisi sebesar 512MB. Selanjutnya, ketik <c>t</c> untuk mengatur
tipe partisi, <c>2</c> untuk memilih partisi yang baru anda ciptakan, lalu
ketikkan <c>82</c> untuk menggunakan tipe partisi "Linux Swap". Setelah anda
menyelesaikan langkah-langkah di atas, anda akan melihat tabel partisi seperti
ini ketika anda menekan <c>p</c>:
</p>

<pre caption="Tabel partisi setelah partisi swap diciptakan">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
</pre>

</body>
</subsection>
<subsection>
<title>Menciptakan partisi root</title>
<body>

<p>
Terakhir, mari kita ciptakan partisi root. Ketik <c>n</c> untuk menciptakan
sebuah partisi baru, lalu <c>p</c> untuk membuat primary. Kemudian, ketik
<c>3</c> untuk menciptakan partisi primary ketiga, yaitu <path>/dev/hda3</path>.
Jika anda ditanyakan tentang silinder pertama, tekan Enter. Ketika ditanyakan
tentang silinder terakhir, tekan Enter untuk menciptakan partisi sebesar sisa
disk anda. Setelah menyelesaikan langkah-langkah di atas, anda akan melihat
tabel partisi seperti di bawah ini ketika anda menekan <c>p</c>:
</p>

<pre caption="Tabel partisi setelah partisi root diciptakan">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
/dev/hda3         82      3876  28690200   83  Linux
</pre>

</body>
</subsection>
<subsection>
<title>Menyimpan tabel partisi</title>
<body>

<p>
Untuk menyimpan tabel partisi dan keluar dari <c>fdisk</c>, ketik <c>w</c>.
</p>

<pre caption="Menyimpan tabel dan keluar dari fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Sekarang setelah partisi-partisi anda siap, anda dapat melanjutkan ke
<uri link="#filesystems">Menciptakan Filesystem</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Menciptakan Filesystem</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Setelah semua partisi anda diciptakan, sekarang saatnya untuk menempatkan
filesystem pada partisi tersebut. Jika anda tidak tahu harus memilih tipe
filesystem apa yang harus anda gunakan dan puas dengan apa yang kami gunakan
di buku ini, lanjutkan ke <uri link="#filesystems-apply">Menciptakan
filesystem di partisi</uri>. Jika tidak, baca terus untuk mengetahui filesystem
apa saja yang tersedia...
</p>

</body>
</subsection>
<subsection>
<title>Filesystem?</title>
<body>

<p test="func:keyval('arch')='x86'">
Kernel Linux mendukung berbagai filesystem. Kami akan menjelaskan ext2,
ext3, ReiserFS, XFS dan JFS karena filesystem tersebut adalah yang paling
umum digunakan di sistem Linux.
</p>

<p test="func:keyval('arch')='AMD64'">
Terdapat berbagai macam filesystem. Beberapa diantaranya dianggap stabil di
arsitektur amd64, selebihnya tidak. Filesystem-filesystem di bawah ini dianggap
stabil: ext2 dan ext3. jfs dan reiserfs mungkin bagus, tapi masih membutuhkan
pengujian lebih lanjut. Jika anda senang bereksperimen, anda dapat mencoba
filesystem yang tidak didukung.
</p>

<p>
<b>ext2</b> adalah filesystem yang asli dan telah teruji tetapi tidak memiliki
journal metadata, artinya waktu yang diperlukan untuk memeriksa filesystem ext2
terkadang bisa sangat lama. Saat ini telah ada beberapa filesystem ber-journal
yang dapat diperiksa konsistensinya dengan cepat dan karena itu lebih dipilih
daripada partisi non-journal. Journal filesystem menghindari waktu tunda ketika
anda boot dari sistem di mana filesystem anda kebetulan berada pada keadaan yang
tidak konsisten.
</p>

<p>
<b>ext3</b> adalah filesystem ext2 versi journal, memiliki journal metadata
untuk pemulihan sistem yang cepat dan juga beberapa tambahan modus journal
seperti journal data terstruktur dan data penuh. filesistem ini menggunakan
<e>HTree index</e> yang dapat meningkatkan performa pada hampir semua situasi.
Singkatnya, ext3 adalah filesystem yang sangat bagus dan dapat diandalkan.
</p>

<p>
<b>ReiserFS</b> adalah filesystem berbasis B+tree yang memiliki performa
keseluruhan yang bagus dan performanya melebihi ext2 dan ext3 pada saat
menangani file kecil (file yang besarnya kurang dari 4k), sering kali melebihi
dalam faktor 10x-15x. ReiserFS juga berskala sangat bagus dan memiliki journal
metadata. ReiserFS telah mapan dan bagus untuk pemakaian umum atau kasus khusus
seperti pembuatan filesystem yang besar, penggunaan file kecil yang banyak,
file yang besar, dan direktori yang mengandung puluhan ribu file.
</p>

<p>
<b>XFS</b> adalah filesystem dengan journal metadata yang datang dengan
fungsi-fungsi mapan dan teroptimasi untuk skalabilitas. Kami hanya menganjurkan
penggunaan filesystem ini pada system Linux dengan disk SCSI kelas atas
dan/atau disk <e>fibre</e> serta aliran listrik yang tidak pernah terputus.
Karena XFS meng-<e>cache</e> data yang lewat dengan agresif ke dalam RAM,
data-data mungkin hilang pada saat program yang tidak dirancang dengan benar
(program-program yang tidak mengambil langkah yang aman ketika melakukan
penulisan ke disk, dan ada beberapa program seperti itu) sedang berjalan dan
sistem tiba-tiba mati.
</p>

<p>
<b>JFS</b> adalah filesystem journal dengan performa tinggi dari IBM. JFS
baru-baru ini menjadi filesystem yang siap pakai.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Menciptakan filesystem di partisi</title>
<body>

<p>
Untuk menciptakan filesystem di sebuah partisi, anda dapat menggunakan
beberapa utilitas yang tersedia untuk setiap filesystem:
</p>

<table>
<tr>
  <th>Filesystem</th>
  <th>Perintah</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Sebagai contoh, untuk menciptakan filesystem ext2 di partisi boot
(<path>/dev/hda1</path> di contoh kita) dan ext3 di partisi root
(<path>/dev/hda3</path> di contoh kita), anda perlu menjalankan:
</p>

<pre caption="Menciptakan filesystem di partisi">
# <i>mke2fs /dev/hda1</i>
# <i>mke2fs -j /dev/hda3</i>
</pre>

<p>
Sekarang ciptakan filesystem untuk setiap partisi anda.
</p>

</body>
</subsection>
<subsection>
<title>Aktivasi partisi swap</title>
<body>

<p>
<c>mkswap</c> adalah perintah untuk menciptakan partisi swap:
</p>

<pre caption="Menciptakan partisi swap">
# <i>mkswap /dev/hda2</i>
</pre>

<p>
Untuk mengaktifkan partisi swap, gunakan <c>swapon</c>:
</p>

<pre caption="Aktivasi partisi swap">
# <i>swapon /dev/hda2</i>
</pre>

<p>
Ciptakan dan aktifkan swap seperti contoh di atas.
</p>

</body>
</subsection>
</section>
<section>
<title>Mount</title>
<body>

<p>
Setelah semua partisi anda memiliki filesystem-nya masing-masing, sekarang
saatnya untuk me-mount partisi-partisi tersebut. Gunakan perintah <c>mount</c>.
Jangan lupa ciptakan dahulu semua direktori mount yang diperlukan untuk setiap
partisi anda. Sebagai contoh, kita akan me-mount partisi root dan boot:
</p>

<pre caption="Mount partisi">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

<note>
Jika anda ingin agar <path>/tmp</path> anda diletakkan di partisi terpisah,
jangan lupa mengubah perizinannya setelah proses mount: <c>chmod 1777
/mnt/gentoo/tmp</c>. Hal ini juga berlaku untuk <path>/var/tmp</path>.
</note>

<p>
Kita juga perlu me-mount filesystem proc (penghubung kernel virtual) di
<path>/proc</path>. Tetapi, pertama kita perlu menyalin file-file kita di
partisi.
</p>

<p>
Lanjutkan ke <uri link="?part=1&amp;chap=5">Instalasi File-file
Instalasi Gentoo</uri>.
</p>

</body>
</section>
</sections>
