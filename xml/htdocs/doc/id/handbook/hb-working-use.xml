<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: hb-working-use.xml,v 1.9 2007/02/23 11:24:09 neysx Exp $ -->

<!-- English doc rev. 1.19 -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<abstract>
Flag USE sangat penting di Gentoo. Di bab ini, anda akan belajar cara
menggunakan flag USE dan mengerti bagaimana flag USE berinteraksi dengan
sistem anda.
</abstract>

<version>1.36</version>
<date>2007-02-20</date>

<section>
<title>Apakah Flag USE itu?</title>
<subsection>
<title>Ide dibalik flag USE</title>
<body>

<p>
Ketika Anda menginstalasi Gentoo (atau distribusi yang lain, atau pun sistem
operasi yang lain), Anda membuat pilihan berdasarkan lingkungan tempat Anda
bekerja. Setup untuk suatu server berbeda dari setup untuk suatu workstation.
Workstation untuk game juga berbeda dari workstation untuk render 3D.
</p>

<p>
Hal ini tidak hanya berlaku untuk memilih paket apa saja yang akan Anda instalasi,
tetapi juga fitur apa yang harus didukung oleh paket-paket tertentu. Jika Anda
tidak membutuhkan OpenGL, mengapa Anda harus memusingkan diri untuk menginstalasi
OpenGL dan mengaktifkan dukungan OpenGL pada hampir semua paket Anda? Jika Anda
tidak ingin menggunakan KDE, mengapa Anda harus melakukan kompilasi paket dengan
dukungan untuk KDE jika paket tersebut bisa berjalan lancar tanpa dukungan itu?
</p>

<p>
Untuk membantu user menentukan apa yang diinstalasi/diaktifkan dan apa yang
tidak, kita menginginkan user menentukan lingkungannya sendiri dengan cara
yang mudah. Hal ini akan memaksa user untuk menentukan apa yang benar-benar
diinginkan dan memudahkan proses Portage, sistem pengaturan paket kami, untuk
membuat keputusan yang berguna.
</p>

</body>
</subsection>
<subsection>
<title>Definisi dari suatu flag USE</title>
<body>

<p>
Perhatikan flag USE. Flag tersebut adalah suatu kata kunci yang mengaktifkan
dukungan dan informasi dependensi untuk suatu konsep tertentu. Jika Anda
mendefinisikan suatu flag USE, Portage akan mengetahui bahwa Anda membutuhkan
dukungan untuk beberapa kata kunci pilihan. Tentu saja hal ini akan mengubah
informasi dependensi untuk sebuah paket.
</p>

<p>
Marilah kita melihat sebuah contoh khusus : kata kunci <c>kde</c>. Jika Anda tidak
memiliki kata kunci ini pada variabel <c>USE</c> Anda, semua paket yang memiliki
<e>opsi</e> dukungan KDE akan dikompilasi <e>tanpa</e> dukungan KDE. Semua
paket yang memiliki dependensi <e>opsi</e> KDE akan diinstalasi <e>tanpa</e>
instalasi pustaka KDE (sebagai ketergantungannya). Jika Anda telah mendefinisikan
kata kunci <c>kde</c>, maka paket tersebut <e>akan</e> dikompilasi dengan dukungan
KDE, dan pustaka KDE akan diinstal sebagai dependensi-nya.
</p>

<p>
Dengan mendefinisikan secara benar kata-kata kunci, Anda akan memiliki
sistem yang dibuat khusus untuk memenuhi kebutuhan Anda.
</p>

</body>
</subsection>
<subsection>
<title>Apa saja flag USE yang tersedia?</title>
<body>

<p>
Terdapat dua jenis flag USE : flag USE <e>global</e> dan <e>lokal</e>.
</p>

<ul>
  <li>
    Sebuah flag USE <e>global</e> digunakan oleh beberapa paket, untuk
    keseluruhan sistem. Flag ini yang paling sering ditemui orang
    sebagai flag-flag USE.
  </li>
  <li>
    Sebuah flag USE <e>lokal</e> digunakan oleh suatu paket tunggal untuk
    membuat keputusan yang berkaitan dengan paket tertentu.
  </li>
</ul>

<p>
Daftar flag USE global yang tersedia dapat diperoleh
<uri link="/dyn/use-index.xml">online</uri> atau secara lokal di file
<path>/usr/portage/profiles/use.desc</path>.
</p>

<p>
Daftar flag-flag USE lokal yang tersedia dapat ditemukan di
<path>/usr/portage/profiles/use.local.desc</path>.
</p>

</body>
</subsection>
</section>
<section>
<title>Menggunakan flag USE</title>
<subsection>
<title>Deklarasi flag USE secara permanen</title>
<body>

<p>
Dengan harapan Anda dapat diyakinkan akan pentingnya flag USE, kami akan
menginformasikan bagaimana cara mendeklarasikan flag USE.
</p>

<p>
Sebagaimana disebutkan sebelumnya, semua flag USE dideklarasikan di dalam
variabel <c>USE</c>. Untuk memudahkan user mencari dan memilih flag USE,
kami telah memberikan sebuah setting USE <e>default</e>. Setting ini adalah
kumpulan dari flag USE yang kami rasa sering digunakan oleh user Gentoo.
Setting default ini dideklarasikan pada file <path>make.defaults</path>, yang
merupakan bagian dari profil anda.
</p>

<p>
Profil yang digunakan oleh sistem anda ditunjukkan oleh simlink
<path>make.profile</path>. Setiap profil bekerja di atas profil lain yang
lebih luas, hasil akhirnya adalah rangkuman dari seluruh profil. Profil
teratas adalah profil <path>base</path>
(<path>/usr/portage/profiles/base</path>).
</p>

<p>
Mari kita melihat setting default untuk profil 2004.3:
</p>

<pre caption="Variabel USE make.defaults untuk profil 2004.3">
<comment>(Contoh ini merupakan rangkuman dari setting di profil base,
  default-linux, default-linux/x86 dan default-linux/x86/2004.3)</comment>
USE="x86 oss apm arts avi berkdb bitmap-fonts crypt cups encode fortran f77
     foomaticdb gdbm gif gpm gtk imlib jpeg kde gnome libg++ libwww mad
     mikmod motif mpeg ncurses nls oggvorbis opengl pam pdflib png python qt
     quicktime readline sdl spell ssl svga tcpd truetype X xml2 xmms xv zlib"
</pre>

<p>
Seperti yang Anda lihat, variabel ini sudah memiliki cukup banyak kata kunci.
<b>Jangan</b> mengubah file <path>/etc/make.profile/make.defaults</path> untuk
menyesuaikan variabel <c>USE</c> dengan kebutuhan Anda: perubahan ini akan
dibatalkan ketika Anda memperbarui Portage!
</p>

<p>
Untuk mengubah setting default ini, Anda perlu menambahkan atau mengubah
kata kunci pada variabel <c>USE</c>. Hal ini dilakukan secara global dengan
mendefinisikan variabel <c>USE</c> pada <path>/etc/make.conf</path>. Dalam
variabel ini, Anda menambahkan flag USE tambahan yang Anda butuhkan, atau
membuang flag USE yang tidak Anda butuhkan. Yang kedua ini dapat dilakukan
dengan menambahkan kata kunci dengan tanda minus ("-").
</p>

<p>
Sebagai contoh, untuk membuang dukungan untuk KDE dan QT tetapi menambahkan
dukungan untuk ldap, variabel <c>USE</c> berikut dapat didefinisikan pada
<path>/etc/make.conf</path>:
</p>

<pre caption="Sebuah contoh setting USE pada /etc/make.conf">
USE="-kde -qt3 -qt4 ldap"
</pre>

</body>
</subsection>
<subsection>
<title>Deklarasi flag-flag USE untuk paket-paket individual</title>
<body>

<p>
Kadang-kadang anda ingin mendeklarasi sebuah flag USE khusus untuk satu
(atau beberapa) aplikasi tetapi bukan untuk seluruh sistem. Untuk melakukannya,
anda perlu menciptakan direktori <path>/etc/portage</path> (jika belum ada)
dan edit file <path>/etc/portage/package.use</path>.
</p>

<p>
Sebagai contoh, jika anda tidak ingin dukungan <c>berkdb</c> secara global
tetapi anda menginginkannya untuk <c>mysql</c>, anda harus menambahkan:
</p>

<pre caption="Contoh /etc/portage/package.use">
dev-db/mysql berkdb
</pre>

<p>
Tentu saja anda dapat juga secara eksplisit <e>menonaktifkan</e> flag-flag USE
untuk sebuah aplikasi tertentu. Sebagai contoh, jika anda tidak ingin dukungan
<c>java</c> di PHP:
</p>

<pre caption="Contoh ke-2 /etc/portage/package.use">
dev-php/php -java
</pre>

</body>
</subsection>
<subsection>
<title>Deklarasi flag USE sementara</title>
<body>

<p>
Kadang-kadang Anda ingin mendefinisikan setting pada USE tertentu untuk
penggunaan sekali saja. Daripada mengubah file <path>/etc/make.conf</path>
dua kali (melakukan dan membatalkan perubahan USE), Anda dapat
mendeklarasikan variabel USE sebagai variabel lingkungan. Ingat bahwa,
sewaktu anda re-emerge atau update aplikasi ini (secara eksplisit atau sebagai
bagian dari update sistem), perubahan-perubahan anda akan hilang!
</p>

<p>
Sebagai contoh, kita akan menonaktifkan java untuk sementara dari
setting USE selama instalasi seamonkey.
</p>

<pre caption="Menggunakan USE sebagai variabel lingkungan">
# <i>USE="-java" emerge seamonkey</i>
</pre>

</body>
</subsection>
<subsection>
<title>Urutan-urutan</title>
<body>

<p>
Tentu saja terdapat urutan-urutan  setting yang memiliki prioritas atas
setting USE. Anda tentu saja tidak ingin mendeklarasi <c>USE="-java"</c>
hanya untuk melihat bahwa <c>java</c> ternyata dideklarasikan. Urutan untuk
setting USE adalah, diurutkan berdasarkan prioritas (yang pertama mempunyai
prioritas terendah):
</p>

<ol>
  <li>
    Setting USE default yang dideklarasikan di file <path>make.defaults</path>
    sebagai bagian dari profil anda
  </li>
  <li>
    Setting USE yang didefinisikan user pada <path>/etc/make.conf</path>
  </li>
  <li>
    Setting USE yang didefinisikan user pada
    <path>/etc/portage/package.use</path>
  </li>
  <li>
    Setting USE yang didefinisikan user sebagai variabel lingkungan
  </li>
</ol>

<p>
Untuk melihat setting <c>USE</c> akhir yang dilihat oleh Portage, jalankan
<c>emerge info</c>. Perintah ini akan memberikan daftar semua variabel yang
relevan (termasuk variabel <c>USE</c>) yang digunakan oleh Portage.
</p>

<pre caption="Menjalankan emerge --info">
# <i>emerge --info</i>
</pre>

</body>
</subsection>
<subsection>
<title>Mengadaptasikan Seluruh Sistem Anda ke Flag-Flag USE Baru</title>
<body>

<p>
Jika anda telah mengubah flag-flag USE anda dan ingin mengupdate seluruh
sistem anda ke flag-flag USE baru tersebut, gunakan opsi <c>--newuse</c>
<c>emerge</c>:
</p>

<pre caption="Bangun ulang seluruh sistem anda">
# <i>emerge --update --deep --newuse world</i>
</pre>

<p>
Selanjutnya, jalankan depclean Portage untuk menghapus semua dependensi
kondisional yang ter-emerge pada sistem "lama" anda, tetapi tidak lagi digunakan
karena flag-flag USE baru.
</p>

<warn>
Menjalankan <c>emerge --depclean</c> adalah langkah yang berbahaya dan sebaiknya
ditangani secara hati-hati. Periksa kembali daftar paket-paket "usang" yang
ditampilkan untuk memastikan Portage tidak menghapus paket-paket yang anda
perlukan. Di contoh berikut ini, kami menambahkan opsi <c>-p</c> agar depclean
hanya menampilkan daftar paket-paket tanpa menghapusnya.
</warn>

<pre caption="Menghapus paket-paket usang">
# <i>emerge -p --depclean</i>
</pre>

<p>
Setelah depclean selesai, jalankan <c>revdep-rebuild</c> untuk membangun ulang
aplikasi  yang terkait secara dinamis dengan objek-objek yang disediakan oleh
paket-paket yang telah dibuang. <c>revdep-rebuild</c> merupakan bagian dari
paket <c>gentoolkit</c>; jangan lupa untuk menginstalnya:
</p>

<pre caption="Menjalankan revdep-rebuild">
# <i>revdep-rebuild</i>
</pre>

<p>
Setelah semuanya selesai, sistem anda sekarang menggunakan setting flag-flag
USE yang baru.
</p>

</body>
</subsection>
</section>
<section>
<title>Flag USE dari paket tertentu</title>
<subsection>
<title>Melihat flag USE yang tersedia</title>
<body>

<p>
Marilah gunakan contoh dari <c>seamonkey</c>: apakah flag USE yang
digunakannya? Untuk mengetahuinya, kita menggunakan <c>emerge</c> dengan
opsi <c>--pretend</c> dan <c>--verbose</c>:
</p>

<pre caption="Melihat flag USE yang digunakan">
# <i>emerge --pretend --verbose seamonkey</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild   R   ] www-client/seamonkey-1.0.7  USE="crypt gnome java -debug -ipv6
-ldap -mozcalendar -mozdevelop -moznocompose -moznoirc -moznomail -moznopango
-moznoroaming -postgres -xinerama -xprint" 0 kB
</pre>

<p>
<c>emerge</c> bukan hanya satu-satunya alat untuk pekerjaan ini. Sesungguhnya
kami memiliki suatu utilitas yang didedikasikan untuk melihat informasi paket
yang disebut <c>equery</c>, yang berada di dalam paket <c>gentoolkit</c>.
Pertama-tama, instal <c>gentoolkit</c>:
</p>

<pre caption="Instalasi gentoolkit">
# <i>emerge gentoolkit</i>
</pre>

<p>
Sekarang jalankan <c>equery</c> dengan argumen <c>uses</c> untuk melihat
flag USE dari suatu paket. Sebagai contoh, untuk paket <c>gnumeric</c>:
</p>

<pre caption="Menggunakan equery untuk melihat flag USE yang digunakan">
# <i>equery uses =gnumeric-1.6.3 -a</i>
[ Searching for packages matching =gnumeric-1.6.3... ]
[ Colour Code : <comment>set</comment> <i>unset</i> ]
[ Legend        : Left column  (U) - USE flags from make.conf  ]
[               : Right column (I) - USE flags packages was installed with ]
[ Found these USE variables for app-office/gnumeric-1.6.3 ]
 U I
- - <i>debug</i>   : Tells configure and the makefiles to build for debugging.
                     Effects vary across packages, but generally it will at
                     least add -g to CFLAGS.  Remember to set FEATURES=nostrip too
- - <i>gnome</i>   : Adds GNOME support
+ + <comment>python</comment>   : Adds support/bindings for the Python language
- - <i>static</i>   : !!do not set this during bootstrap!! Causes binaries to be
                     statically linked instead of dynamically
</pre>

</body>
</subsection>
</section>
</sections>
