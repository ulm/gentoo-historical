<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- English doc rev. 1.6 -->

<sections>

<version>3.0</version>
<date>2008-04-01</date>

<section>
<title>Pengenalan Block Device</title>
<subsection>
<include href="hb-install-blockdevices.xml"/>
</subsection>

<subsection>
<title>Partisi</title>
<body>

<p>
Walaupun secara teori anda dapat menggunakan seluruh disk untuk sistem Linux,
hal ini hampir tidak pernah diterapkan. Tetapi, block device disk anda
dipisah-pisahkan lagi menjadi block device yang lebih kecil, agar lebih mudah
ditangani. Block device kecil tersebut dikenal sebagai <e>partisi</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Merancang sebuah Skema Partisi</title>
<subsection>
<title>Berapa Banyak dan Berapa Besar?</title>
<body>

<p>
Jumlah partisi sangat tergantung pada lingkungan anda. Sebagai contoh, jika
anda memiliki banyak pengguna (user), anda mungkin sekali ingin menciptakan
partisi <path>/home</path> yang terpisah untuk meningkatkan keamanan dan
mempermudah proses backup. Jika anda menginstal Gentoo sebagai server mail,
partisi <path>/var</path> anda sebaiknya dipisahkan karena surat-surat anda
disimpan di partisi <path>/var</path>. Pilihan filesystem yang tepat juga dapat
meningkatkan performa. Server-server game sebaiknya memiliki partisi
<path>/opt</path> yang terpisah karena kebanyakan server game diinstal di
partisi tersebut. Alasan utamanya juga sama dengan partisi <path>/home</path>:
keamanan dan backup.
</p>

<p>
Seperti yang anda lihat, jumlah partisi sangat tergantung pada tujuan anda.
Partisi-partisi yang terpisah memiliki beberapa keuntungan:
</p>

<ul>
<li>
  Anda dapat memilih filesystem yang paling tepat untuk setiap partisi
</li>
<li>
  Seluruh sistem anda tidak akan kehabisan ruang kosong jika sebuah aplikasi
  secara terus-menerus menulis file-file ke sebuah partisi.
</li>
<li>
  Waktu untuk memeriksa filesystem lebih cepat, karena beberapa pemeriksaan
  dapat dijalankan secara bersamaan (walaupun keuntungan ini lebih dirasakan
  oleh multi-disk daripada multi-partisi)
</li>
<li>
  Keamanan dapat ditingkatkan dengan me-mount beberapa partisi secara
  read-only, nosuid (setuid bit diabaikan), noexec (executable bit
  diabaikan), dll.
</li>
</ul>

<p>
Walaupun begitu, multi-partisi memiliki satu kelemahan utama: jika tidak
dikonfigurasi dengan benar, anda akan mendapatkan sistem yang memiliki
banyak ruang kosong di satu partisi dan kekurangan ruang kosong di partisi
lain. Untuk sistem SCSI dan SATA, terdapat batas partisi sebanyak 15.
</p>

</body>
</subsection>
</section>
<section>
<title>Menggunakan fdisk pada MIPS untuk mem-partisi disk</title>
<subsection>
<title>Menciptakan SGI Disk Label</title>
<body>

<p>
Seluruh disk di sistem SGI memerlukan disklabel SGI, yang berfungsi hampir sama
seperti disklabel Sun &amp; MS-DOS -- yang menyimpan informasi tentang
partisi-partisi disk. Disklabel SGI akan menciptakan dua partisi khusus di disk
anda:
</p>

<ul>
  <li>
    <e>SGI Volume Header</e> (partisi ke-9): Partisi ini sangat penting.
    Partisi ini merupakan tempat imej kernel disimpan. Untuk menyimpan imej
    kernel, anda akan memerlukan utilitas bernama <c>dvhtool</c> untuk menyalin
    imej kernel ke partisi ini. Lalu anda akan dapat mem-boot kernel dari
    partisi ini melalui SGI PROM Monitor.
  </li>
  <li>
    <e>SGI Volume</e> (partisi ke-11): Partisi ini memiliki fungsi yang hampir
    sama dengan partisi ketiga Disklabel Sun (Seluruh Disk). Partisi ini
    mengambil seluruh ruang disk anda, dan sebaiknya tidak disentuh. Fungsinya
    tidak lain adalah membantu PROM menggunakan cara yang tidak terdokumentasi
    (atau digunakan juga oleh sistem IRIX).
  </li>
</ul>

<warn>
SGI Volume Header <e>harus</e> dimulai dari silinder 0. Jika tidak, anda
tidak akan dapat boot dari disk.
</warn>

<p>
Berikut ini adalah contoh tampilan <c>fdisk</c>. Baca dan ubahlah sesuai
kebutuhan anda...
</p>

<pre caption="Menciptakan SGI Disklabel">
# <i>fdisk /dev/sda</i>

Command (m for help): <i>x</i>

Expert command (m for help): <i>m</i>
Command action
   b   move beginning of data in a partition
   c   change number of cylinders
   d   print the raw data in the partition table
   e   list extended partitions
   f   fix partition order
   g   create an IRIX (SGI) partition table
   h   change number of heads
   m   print this menu
   p   print the partition table
   q   quit without saving changes
   r   return to main menu
   s   change number of sectors/track
   v   verify the partition table
   w   write table to disk and exit

Expert command (m for help): <i>g</i>
Building a new SGI disklabel. Changes will remain in memory only,
until you decide to write them. After that, of course, the previous
content will be unrecoverably lost.

Expert command (m for help): <i>r</i>

Command (m for help): <i>p</i>

Disk /dev/sda (SGI disk label): 64 heads, 32 sectors, 17482 cylinders
Units = cylinders of 2048 * 512 bytes

----- partitions -----
Pt#     Device  Info     Start       End   Sectors  Id  System
 9:  /dev/sda1               0         4     10240   0  SGI volhdr
11:  /dev/sda2               0     17481  35803136   6  SGI volume
----- Bootinfo -----
Bootfile: /unix
----- Directory Entries -----

Command (m for help):
</pre>

<note>
Jika disk anda telah memiliki sebuah Disklabel SGI, maka fdisk tidak akan
membiarkan anda menciptakan sebuah label baru. Ada dua cara untuk
melakukannya. Cara pertama adalah dengan menciptakan disklabel Sun atau MS-DOS,
simpan perubahan anda ke disk tersebut, lalu restart fdisk. Cara kedua adalah
dengan menimpa tabel partisi dengan data null menggunakan perintah berikut:
<c>dd if=/dev/zero of=/dev/sda bs=512 count=1</c>.
</note>

</body>
</subsection>
<subsection>
<title>Merubah SGI Volume Header ke ukuran yang tepat</title>
<body>

<p>
Setelah Disklabel SGI diciptakan, sekarang anda dapat membuat partisi. Pada
contoh di atas, dua partisi telah diciptakan untuk anda. Partisi-partisi
tersebut merupakan partisi-partisi khusus yang dijelaskan di atas dan sebaiknya
tidak diubah-ubah. Bagaimanapun juga, untuk menginstal Gentoo, kita perlu
memuat beberapa imej kernel langsung ke volume header, karena saat ini masih
belum ada Bootloader SGI tersedia di Portage. Volume header sendiri dapat
menampung sampai <e>delapan</e> imej dengan berbagai ukuran, dan nama setiap
imej yang diperbolehkan hanya delapan karakter.
</p>

<p>
Proses pembuatan volume header yang lebih besar tidaklah gampang -- ada
beberapa trik untuk melakukannya. Anda tidak dapat langsung menghapus dan
menciptakan lagi volume header karena tingkah laku fdisk yang aneh. Pada contoh
di bawah ini, kita akan menciptakan sebuah Volume Header sebesar 50MB dan juga
sebuah partisi /boot sebesar 50MB. Tabel partisi disk anda yang sebenarnya
mungkin berbeda, tetapi contoh di bawah ini hanya sebagai ilustrasi:
</p>

<pre caption="Mengganti ukuran SGI Volume Header secara tepat">
Command (m for help): <i>n</i>
Partition number (1-16): <i>1</i>
First cylinder (5-8682, default 5): <i>51</i>
 Last cylinder (51-8682, default 8682): <i>101</i>
<comment>(Perhatikan, fdisk hanya memperbolehkan partisi pertama diciptakan dimulai dari silinder 5)</comment>
<comment>(Jika anda mencoba untuk menghapus &amp; menciptakan SGI Volume Header dengan cara ini,
 hal ini adalah masalah yang akan anda temui)</comment>
<comment>(Pada contoh kita, kita ingin partisi /boot memiliki besar 50MB, jadi kita akan memulai partisi tersebut
 di silinder 51 (Volume Header harus dimulai dari silinder 0, ingat?), dan set silinder terakhir 101,
 yang besarnya lebih kurang 50MB (+/- 1-5MB))</comment>

Command (m for help): <i>d</i>
Partition number (1-16): <i>9</i>
<comment>(Hapus partisi ke-9 (SGI Volume Header))</comment>

Command (m for help): <i>n</i>
Partition number (1-16): <i>9</i>
First cylinder (0-50, default 0): <i>0</i>
 Last cylinder (0-50, default 50): <i>50</i>
<comment>(Ciptakan lagi partisi ke-9, berakhir sebelum partisi ke-1)</comment>
</pre>

</body>
</subsection>
<subsection>
<title>Tabel Partisi Terakhir</title>
<body>

<p>
Setelah semua selesai, anda dapat menciptakan sisa dari partisi-partisi yang
anda perlukan dengan aman. Setelah semua partisi diciptakan, pastikan untuk
menetapkan tipe partisi swap anda menjadi <c>82</c>, yaitu "Linux Swap". Secara
default, partisi-partisi anda akan diciptakan sebagai <c>83</c>, yaitu "Linux
Native".
</p>

<p>
Sekarang setelah partisi-partisi anda diciptakan, anda dapat melanjutkan ke
<uri link="#filesystems">Menciptakan Filesystem</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Menciptakan Filesystem</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Setelah semua partisi anda diciptakan, sekarang saatnya untuk menempatkan
filesystem di partisi tersebut. Jika anda tidak yakin dengan filesystem apa
yang harus anda pilih dan puas dengan apa yang kami gunakan di buku pegangan
ini, lanjutkan ke <uri link="#filesystems-apply">Menciptakan Filesystem di
Partisi</uri>. Jika tidak, baca terus untuk mengetahui filesystem-filesystem
yang tersedia...
</p>

</body>
</subsection>
<subsection>
<include href="hb-install-filesystems.xml"/>
</subsection>

<subsection id="filesystems-apply">
<title>Menciptakan Filesystem di Partisi</title>
<body>

<p>
Untuk menciptakan filesystem di sebuah partisi, anda dapat menggunakan
beberapa utilitas yang tersedia untuk setiap filesystem:
</p>

<table>
<tr>
  <th>Filesystem</th>
  <th>Perintah</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Sebagai contoh, untuk menciptakan filesystem ext2 di partisi boot
(<path>/dev/sda1</path> pada contoh kita) dan ext3 di partisi root
(<path>/dev/sda3</path> pada contoh kita), anda perlu menjalankan:
</p>

<pre caption="Menciptakan filesystem di partisi">
# <i>mke2fs /dev/sda1</i>
# <i>mke2fs -j /dev/sda3</i>
</pre>

<p>
Sekarang ciptakan filesystem di seluruh partisi anda.
</p>

</body>
</subsection>
<subsection>
<title>Mengaktifkan Partisi Swap</title>
<body>

<p>
<c>mkswap</c> adalah perintah untuk menciptakan partisi swap:
</p>

<pre caption="Menciptakan partisi swap">
# <i>mkswap /dev/sda2</i>
</pre>

<p>
Untuk mengaktifkan partisi swap, gunakan <c>swapon</c>:
</p>

<pre caption="Mengaktifkan partisi swap">
# <i>swapon /dev/sda2</i>
</pre>

<p>
Ciptakan dan aktifkan swap sekarang.
</p>

</body>
</subsection>
</section>
<section>
<title>Mount</title>
<body>

<p>
Setelah semua partisi anda memiliki filesystemnya masing-masing, sekarang
saatnya untuk me-mount partisi-partisi tersebut. Gunakan perintah <c>mount</c>.
Jangan lupa untuk menciptakan direktori-direktori mount yang diperlukan untuk
setiap partisi anda. Sebagai contoh, kita akan me-mount partisi root dan boot:
</p>

<pre caption="Mount partisi">
# <i>mount /dev/sda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/sda1 /mnt/gentoo/boot</i>
</pre>

<note>
Jika anda ingin <path>/tmp</path> anda diletakkan di partisi yang terpisah,
jangan lupa untuk mengganti perizinannya setelah proses mount: <c>chmod 1777
/mnt/gentoo/tmp</c>. Hal ini juga berlaku untuk <path>/var/tmp</path>.
</note>

<p>
Kita juga perlu me-mount filesystem proc (penghubung kernel virtual) di
<path>/proc</path>. Tetapi, pertama kita perlu menempatkan file-file kita di
partisi.
</p>

<p>
Lanjutkan ke <uri link="?part=1&amp;chap=5">Instalasi File-file Instalasi
Gentoo</uri>.
</p>

</body>
</section>
</sections>
