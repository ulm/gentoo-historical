<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- English doc rev. 1.7 -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<abstract>
Menggunakan Gentoo, anda dengan mudah dapat menangani variabel lingkungan
untuk sistem anda. Bab ini menjelaskan cara melakukannya, dan juga menjabarkan
beberapa variabel yang sering digunakan.
</abstract>

<version>1.16</version>
<date>2007-05-18</date>

<section>
<title>Variabel Lingkungan?</title>
<subsection>
<title>Apakah variabel lingkungan itu?</title>
<body>

<p>
Variabel lingkungan adalah nama obyek yang berisi informasi yang digunakan
oleh satu aplikasi atau lebih. Banyak user (khususnya mereka yang baru mengenal
Linux) merasa hal ini agak aneh atau tidak dapat diatur. Pendapat ini tidak
benar: dengan menggunakan variabel lingkungan, kita dengan mudah dapat
melakukan perubahan konfigurasi untuk satu aplikasi atau lebih.
</p>

</body>
</subsection>
<subsection>
<title>Contoh penting</title>
<body>

<p>
Tabel berikut berisi daftar variabel yang digunakan oleh sistem Linux berikut
penjelasannya. Contoh nilai ditunjukkan setelah tabelnya.
</p>

<table>
<tr>
  <th>Variabel</th>
  <th>Penjelasan</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh titik dua,
    yang digunakan oleh sistem anda untuk mencari file yang dapat dieksekusi.
    Jika anda memasukkan suatu nama file yang dapat dieksekusi (seperti
    <c>ls</c>, <c>rc-update</c> atau <c>emerge</c>) tetapi file ini ternyata
    tidak terdapat pada daftar direktori, maka sistem tidak akan menjalankan
    file ini (kecuali jika anda menuliskan path lengkap dari perintah tersebut,
    seperti <c>/bin/ls</c>).
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
    Variabel ini memiliki fungsi yang sama dengan <c>PATH</c>, tetapi hanya
    berisi daftar direktori yang akan diperiksa ketika user-root menjalankan
    sebuah perintah.
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh titik dua, yang
    digunakan oleh <e>linker</e> dinamis untuk mencari pustaka (library).
  </ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>
    Varibel ini berisi daftar direktori, yang dipisahkan oleh titik dua, yang
    digunakan oleh perintah <c>man</c> untuk mencari halaman manual.
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh titik dua, yang
    digunakan oleh perintah <c>info</c> untuk mencari halaman info.
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
    Variable ini berisi path dari program yang digunakan untuk menunjukkan isi
    dari suatu file (mis. <c>less</c> atau <c>more</c>).
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
    Variabel ini berisi path dari program yang digunakan untuk mengubah isi
    dari suatu file (mis. <c>nano</c> atau <c>vi</c>).
  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh titik dua,
    yang berisi materi-materi khusus KDE.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh <e>spasi</e>,
    yang harus dilindungi oleh Portage selama update.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh <e>spasi</e>,
    yang tidak boleh dilindungi oleh Portage selama update.
  </ti>
</tr>
</table>

<p>
Berikut ini adalah contoh definisi dari semua variabel-variabel tersebut:
</p>

<pre caption="Contoh definisi variabel">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf
</pre>

</body>
</subsection>
</section>
<section>
<title>Mendefinisikan Variabel secara Global</title>
<subsection>
<title>Direktori /etc/env.d</title>
<body>

<p>
Untuk kebutuhan sentralisasi definisi variabel-variabel ini, Gentoo
memperkenalkan direktori <path>/etc/env.d</path>. Di dalam direktori ini,
anda akan menemukan beberapa file, seperti <path>00basic</path>,
<path>05gcc</path>, dll, yang berisi variabel yang dibutuhkan oleh aplikasi
yang bersesuaian namanya.
</p>

<p>
Contohnya, ketika anda menginstal <c>gcc</c>, file <path>05gcc</path> akan
diciptakan oleh ebuild, yang berisi definisi dari variabel-variabel berikut:
</p>

<pre caption="/etc/env.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
Distro lain meminta anda untuk mengubah atau menambahkan definisi variabel
lingkungan di <path>/etc/profile</path> atau lokasi yang lain. Gentoo
memberikan kemudahan bagi Anda (dan bagi Portage) untuk memelihara dan mengatur
variabel lingkungan tanpa perlu memberikan perhatian penuh pada sejumlah file
yang mungkin berisi variabel lingkungan.
</p>

<p>
Contohnya, ketika <c>gcc</c> diperbarui, file <path>/etc/env.d/05gcc</path>
juga akan langsung diperbarui tanpa campur tangan user.
</p>

<p>
Hal ini bukan hanya menguntungkan Portage, tetapi juga anda sebagai pengguna.
Kadang-kadang anda mungkin akan diminta untuk melakukan pengaturan variabel
lingkungan dari keseluruhan sistem. Contohnya, kita gunakan variabel
<c>http_proxy</c>. Daripada berpusing ria dengan <path>/etc/profile</path>,
anda sekarang cukup membuat suatu file (<path>/etc/env.d/99local</path>)
dan memasukkan definisi anda di dalamnya:
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
Dengan menggunakan file yang sama untuk semua variabel, anda akan mendapatkan
ringkasan cepat dari variabel yang telah anda definisikan.
</p>

</body>
</subsection>
<subsection>
<title>Skrip env-update</title>
<body>

<p>
Beberapa file yang berada di dalam <path>/etc/env.d</path> mendefinisikan
variabel <c>PATH</c>. Hal ini tidak salah: ketika anda menjalankan
<c>env-update</c>, beberapa definisi akan ditambahkan sebelum variabel
lingkungan diperbarui, sehingga memudahkan paket (atau pengguna) untuk
menambahkan variabel lingkungannya sendiri tanpa mempengaruhi nilai variabel
yang telah ada.
</p>

<p>
Skrip <c>env-update</c> akan menambahkan nilai-nilai dalam urutan abjad ke
dalam file <path>/etc/env.d</path>. Nama-nama file harus dimulai dengan dua
angka desimal.
</p>

<pre caption="Urutan update yang digunakan oleh env-update">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
Rangkaian variable tidak selalu terjadi, untuk variabel-variabel berikut ini:
<c>KDEDIRS</c>, <c>PATH</c>, <c>LDPATH</c>, <c>MANPATH</c>, <c>INFODIR</c>,
<c>INFOPATH</c>, <c>ROOTPATH</c>, <c>CONFIG_PROTECT</c>,
<c>CONFIG_PROTECT_MASK</c>, <c>PRELINK_PATH</c> dan <c>PRELINK_PATH_MASK</c>.
Untuk semua variabel lain, nilai terakhir yang didefinisikan (dengan urutan
abjad dari nama file di <path>/etc/env.d</path>) digunakan.
</p>

<p>
Ketika Anda menjalankan <c>env-update</c>, skrip ini akan menciptakan semua
variabel lingkungan dan menempatkannya di <path>/etc/profile.env</path> (yang
digunakan oleh <path>/etc/profile</path>). Skrip ini juga akan mengambil
informasi dari variabel <c>LDPATH</c> dan menggunakannya untuk membuat
<path>/etc/ld.so.conf</path>. Setelah itu, skrip ini akan menjalankan
<c>ldconfig</c> untuk membuat kembali file <path>/etc/ld.so.cache</path> yang
digunakan oleh <e>linker</e> dinamis.
</p>

<p>
Jika anda ingin mendapatkan hasil <c>env-update</c> sesegera mungkin setelah
anda menjalankan skripnya, jalankan perintah berikut untuk memperbarui
lingkungan anda. Pengguna yang menginstal sendiri Gentoo-nya mungkin masih
mengingatnya dari instruksi instalasi:
</p>

<pre caption="Memperbarui lingkungan">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

<note>
Perintah di atas hanya akan memperbarui variabel di terminal yang sedang anda
gunakan, konsol-konsol <e>baru</e>, dan turunannya. Jadi jika anda bekerja di
lingkungan X11, anda perlu mengetikkan <c>source /etc/profile</c> di semua
terminal baru yang anda buka, atau restart X agar semua terminal mengetahui
variabel baru. Jika anda menggunakan sebuah login manager, jadilah user root
kemudian jalankan <c>/etc/init.d/xdm restart</c>. Jika tidak, anda perlu logout
dan login kembali agar X menerapkan semua variabel baru.
</note>

<impo>
Anda tidak boleh menggunakan variabel shell ketika menentukan variabel lain.
Artinya, penggunaan <c>FOO="$BAR"</c> (<c>$BAR</c> adalah variabel lain)
dilarang.
</impo>

</body>
</subsection>
</section>
<section>
<title>Mendefinisikan Variabel Lokal</title>
<subsection>
<title>Khusus per user</title>
<body>

<p>
Anda tidak selalu harus atau perlu mendefinisikan variabel lingkungan secara
global. Contohnya, mungkin anda ingin menambahkan
<path>/home/my_user/bin</path> ke dalam variabel <c>PATH</c> tetapi anda tidak
ingin pengguna lain pada sistem tersebut memiliki <c>PATH</c> yang sama dengan
milik anda. Jika anda ingin mendefinisikan variabel lingkungan lokal, anda
perlu menggunakan <path>~/.bashrc</path> atau <path>~/.bash_profile</path>:
</p>

<pre caption="Memperluas PATH untuk penggunaan lokal dalam ~/.bashrc">
<comment>(Titik dua yang tidak diikuti oleh nama direktori dianggap sebagai direktori kerja sekarang)</comment>
PATH="${PATH}:/home/my_user/bin:"
</pre>

<p>
Ketika anda login kembali, variabel <c>PATH</c> anda akan diperbarui.
</p>

</body>
</subsection>
<subsection>
<title>Khusus per sesi</title>
<body>

<p>
Kadang-kadang diperlukan definisi yang lebih ketat. Anda mungkin ingin dapat
menggunakan binari dari direktori sementara yang anda buat tanpa menggunakan
path ke binari tersebut atau mengubah  <path>~/.bashrc</path> untuk kebutuhan
beberapa saat tersebut.
</p>

<p>
Dalam kasus ini, anda dapat mendefinisikan variabel <c>PATH</c> pada sesi anda
sekarang ini dengan menggunakan perintah <c>export</c>. Selama anda tidak
logout, maka variabel <c>PATH</c> tetap akan menggunakan setting sementara
tersebut.
</p>

<pre caption="Mendefinisikan variabel lingkungan khusus per sesi">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>
