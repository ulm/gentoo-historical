<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- English doc rev. 1.7 -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<abstract>
Menggunakan Gentoo, anda dapat dengan mudah menangani variabel lingkungan
bagi sistem anda. Bab ini menjelaskan cara melakukannya, dan juga menjabarkan
beberapa variabel yang sering digunakan.
</abstract>

<version>1.14</version>
<date>2005-09-28</date>

<section>
<title>Variabel Lingkungan?</title>
<subsection>
<title>Apakah variabel lingkungan itu?</title>
<body>

<p>
Variabel lingkungan adalah nama obyek yang berisi informasi yang digunakan
oleh satu aplikasi atau lebih. Banyak user (khususnya mereka yang baru mengenal
Linux) merasakan hal ini agak aneh atau tidak dapat diatur. Pendapat ini tidak
benar: dengan menggunakan variabel lingkungan, seseorang dapat dengan mudah
melakukan perubahan konfigurasi untuk satu aplikasi atau lebih.
</p>

</body>
</subsection>
<subsection>
<title>Contoh Penting</title>
<body>

<p>
Tabel berikut memberikan daftar variabel yang digunakan oleh sistem Linux
berikut penjelasannya. Contoh nilai ditunjukkan setelah tabelnya.
</p>

<table>
<tr>
  <th>Variabel</th>
  <th>Penjelasan</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh titik dua,
    yang digunakan oleh sistem Anda untuk mencari file yang dapat dieksekusi.
    Jika Anda memasukkan suatu nama file yang dapat dieksekusi (seperti
    <c>ls</c>, <c>rc-update</c> atau <c>emerge</c>) tetapi file ini ternyata
    tidak terdapat pada daftar direktori, maka sistem tidak akan menjalankan
    file ini (kecuali jika Anda menuliskan path lengkap dari perintah tersebut,
    seperti <c>/bin/ls</c>).
  </ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>
    Variabel ini mempunyai fungsi yang sama dengan <c>PATH</c>, tetapi hanya
    berisi daftar direktori yang akan diperiksa ketika user-root menjalankan
    sebuah perintah.
  </ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh titik dua, yang
    digunakan oleh linker dinamis untuk mencari sebuah pustaka (library).
  </ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>
    Varibel ini berisi daftar direktori, yang dipisahkan oleh titik dua, yang
    digunakan oleh perintah <c>man</c> untuk mencari halaman manual.
  </ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh titik dua, yang
    digunakan oleh perintah <c>info</c> untuk mencari halaman info.
  </ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>
    Variable ini berisi path dari program yang digunakan untuk menunjukkan isi
    dari suatu file (mis. <c>less</c> atau <c>more</c>).
  </ti>
</tr>
<tr>
  <ti>EDITOR</ti>
  <ti>
    Variabel ini berisi path dari program yang digunakan untuk mengubah isi
    dari suatu file (mis. <c>nano</c> atau <c>vi</c>).
  </ti>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh titik dua,
    yang berisi materi khusus KDE.
  </ti>
</tr>
<tr>
  <ti>CLASSPATH</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh titik dua,
    yang berisi kelas-kelas Java.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh <e>spasi</e>,
    yang harus dilindungi oleh Portage selama update.
  </ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>
    Variabel ini berisi daftar direktori, yang dipisahkan oleh <e>spasi</e>,
    yang tidak boleh dilindungi oleh Portage selama update.
  </ti>
</tr>
</table>

<p>
Anda akan menemui sebuah contoh defenisi dari semua variabel-variabel
tersebut di bawah ini:
</p>

<pre caption="Contoh definesi">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CLASSPATH="/opt/blackdown-jre-1.4.1/lib/rt.jar:."
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf
</pre>

</body>
</subsection>
</section>
<section>
<title>Mendefenisikan Variabel secara Global</title>
<subsection>
<title>Direktori /etc/env.d</title>
<body>

<p>
Untuk kebutuhan sentralisasi defenisi variabel-variabel ini,
Gentoo memperkenal direktori <path>/etc/env.d</path>.
Di dalam direktori ini, Anda akan menemukan beberapa file, seperti
<path>00basic</path>, <path>05gcc</path>, dan lain-lain, yang berisi
variabel yang dibutuhkan oleh aplikasi yang bersesuaian namanya.
</p>

<p>
Contohnya, ketika Anda menginstalasi <c>gcc</c>, suatu file yang disebut
<path>05gcc</path> akan diciptakan oleh ebuild, yang berisi defenisi dari
variabel-variabel berikut:
</p>

<pre caption="/etc/env.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>

<p>
Distribusi lain memberitahukan Anda untuk mengubah atau menambahkan defenisi
variabel lingkungan pada <path>/etc/profile</path> atau lokasi yang lain.
Gentoo memberikan kemudahan bagi Anda (dan bagi Portage) untuk memelihara
dan mengatur variabel lingkungan tanpa perlu memberikan perhatian penuh
pada sejumlah file yang mungkin berisi variabel lingkungan.
</p>

<p>
Contohnya, ketika <c>gcc</c> diupdate, file <path>/etc/env.d/05gcc</path> juga
langsung diupdate tanpa membutuhkan campur tangan user.
</p>

<p>
Hal ini bukan hanya menguntungkan Portage, tetapi juga Anda sebagai user.
Kadang-kadang Anda mungkin akan diminta untuk melakukan setting variabel
lingkungan dari keseluruhan sistem. Contohnya, kita gunakan variabel
<c>http_proxy</c>. Daripada berpusing ria dengan <path>/etc/profile</path>,
Anda sekarang cukup membuat suatu file (<path>/etc/env.d/99local</path>)
dan memasukkan defenisi Anda di dalamnya:
</p>

<pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>

<p>
Dengan menggunakan file yang sama untuk semua variabel Anda, Anda akan
mempunyai ringkasan cepat dari variabel yang telah Anda defenisikan.
</p>

</body>
</subsection>
<subsection>
<title>Skrip env-update</title>
<body>

<p>
Beberapa file yang berada dalam <path>/etc/env.d</path> mendefenisikan variabel
<c>PATH</c>. Hal ini tidak salah: ketika Anda menjalankan <c>env-update</c>,
beberapa definisi akan ditambahkan sebelum update variabel lingkungan
berlangsung, sehingga memudahkan paket (atau user) untuk menambahkan variabel
lingkungannya sendiri tanpa mempengaruhi nilai variabel yang telah ada.
</p>

<p>
Skrip <c>env-update</c> akan menambahkan nilai-nilai dalam urutan abjad ke
dalam file <path>/etc/env.d</path>. Nama-nama file harus dimulai dengan dua
angka desimal.
</p>

<pre caption="Urutan update yang digunakan oleh env-update">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>

<p>
Rangkaian variable tidak selalu terjadi, untuk variabel-variabel berikut ini:
<c>KDEDIRS</c>, <c>PATH</c>, <c>CLASSPATH</c>, <c>LDPATH</c>, <c>MANPATH</c>,
<c>INFODIR</c>, <c>INFOPATH</c>, <c>ROOTPATH</c>, <c>CONFIG_PROTECT</c>,
<c>CONFIG_PROTECT_MASK</c>, <c>PRELINK_PATH</c> dan <c>PRELINK_PATH_MASK</c>.
Untuk semua variabel lain, nilai terakhir yang didefinisikan (dengan urutan
abjad dari nama file di <path>/etc/env.d</path>) digunakan.
</p>

<p>
Ketika Anda menjalankan <c>env-update</c>, skrip ini akan menciptakan semua
variabel lingkungan dan menempatkannya di <path>/etc/profile.env</path> (yang
digunakan oleh <path>/etc/profile</path>). Skrip ini juga akan mengambil
informasi dari variabel <c>LDPATH</c> dan menggunakannya untuk membuat
<path>/etc/ld.so.conf</path>. Setelah itu, skrip ini akan menjalankan
<c>ldconfig</c> untuk membuat kembali file <path>/etc/ld.so.cache</path> yang
digunakan oleh linker dinamis.
</p>

<p>
Jika Anda ingin mendapatkan hasil <c>env-update</c> sesegera mungkin
setelah Anda menjalankan skripnya, jalankan perintah berikut untuk memperbarui
lingkungan Anda. User yang menginstalasi sendiri Gentoo-nya mungkin akan ingat
pada hal ini dari instruksi instalasi:
</p>

<pre caption="Memperbarui lingkungan">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

<note>
Perintah di atas hanya akan mengupdate variabel di terminal yang sedang anda
gunakan, konsol-konsol <e>baru</e>, dan turunannya. Jadi jika anda bekerja di
lingkungan X11, anda perlu mengetikkan <c>source /etc/profile</c> di semua
terminal baru yang anda buka, atau restart X agar semua terminal mengetahui
variabel baru. Jika anda menggunakan sebuah login manager, jadilah user root
kemudian jalankan <c>/etc/init.d/xdm restart</c>. Jika tidak, anda perlu logout
dan login kembali agar X menerapkan semua variabel baru.
</note>

</body>
</subsection>
</section>
<section>
<title>Mendefenisikan Variabel Lokal</title>
<subsection>
<title>Khusus per User</title>
<body>

<p>
Anda tidak selalu akan mendefenisikan variabel lingkungan secara global.
Contohnya, mungkin Anda akan menambahkan <path>/home/my_user/bin</path>
ke dalam variabel <c>PATH</c> tetapi Anda tidak menginginkan user lain
pada sistem tersebut memiliki <c>PATH</c> yang sama dengan milik Anda.
Jika Anda ingin mendefenisikan variabel lingkungan lokal, Anda perlu
menggunakan <path>~/.bashrc</path> atau <path>~/.bash_profile</path>:
</p>

<pre caption="Memperluas PATH untuk penggunaan lokal dalam ~/.bashrc">
<comment>(Titik dua yang tidak diikuti oleh nama direktori dianggap sebagai direktori kerja sekarang)</comment>
PATH="${PATH}:/home/my_user/bin:"
</pre>

<p>
Ketika Anda login ulang, variabel <c>PATH</c> Anda akan diupdate.
</p>

</body>
</subsection>
<subsection>
<title>Khusus per Sesi</title>
<body>

<p>
Kadang-kadang diperlukan defenisi yang lebih ketat. Anda mungkin ingin dapat
menggunakan binari dari direktori sementara yang Anda buat tanpa menggunakan
path ke binari tersebut atau mengubah  <path>~/.bashrc</path> untuk kebutuhan
beberapa saat tersebut.
</p>

<p>
Dalam kasus ini, Anda dapat mendefenisikan variabel <c>PATH</c> pada
sesi Anda sekarang ini dengan menggunakan perintah <c>export</c>.  Selama Anda
tidak logout, maka variabel <c>PATH</c> tetap akan menggunakan setting
sementara tersebut.
</p>

<pre caption="Mendefenisikan variabel lingkungan yang khusus per sesi">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>

</body>
</subsection>
</section>
</sections>
