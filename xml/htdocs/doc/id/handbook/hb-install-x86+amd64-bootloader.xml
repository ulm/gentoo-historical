<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: hb-install-x86+amd64-bootloader.xml,v 1.7 2007/05/22 12:42:28 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>5.0</version>
<date>2007-05-07</date>

<section>
<title>Menentukan Pilihan</title>
<subsection>
<title>Pendahuluan</title>
<body>

<p>
Setelah kernel anda dikonfigurasi dan dikompilasi, serta file-file konfigurasi
sistem yang penting telah diisi dengan benar, saatnya untuk menginstal sebuah
program yang akan menjalankan kernel ketika komputer dinyalakan. Program
tersebut adalah <e>bootloader</e>.
</p>

<p test="func:keyval('arch')='x86'">
Untuk x86, gentoo menyediakan <uri link="#grub">GRUB</uri> dan <uri
link="#lilo">LILO</uri>.
</p>

<p>
Namun sebelum kita menginstal bootloader, kami akan menunjukkan cara
mengkonfigurasi <e>framebuffer</e> (pastinya dengan anggapan anda ingin
menggunakannya). Dengan framebuffer, anda dapat menjalankan baris perintah Linux
dengan beberapa fitur (terbatas), seperti menggunakan gambar <e>bootsplash</e>
yang disediakan Gentoo).
</p>

</body>
</subsection>
<subsection>
<title>Opsional: Framebuffer</title>
<body>

<p>
Jika anda <e>telah</e> mengkonfigurasi kernel dengan dukungan framebuffer (atau
anda menggunakan konfigurasi kernel default <c>genkernel</c>), anda dapat
mengaktifkannya dengan menambahkan argumen <c>vga</c> dan/atau statemen
<c>video</c> di file konfigurasi bootloader anda.
</p>

<p test="func:keyval('arch')='x86'">
Pertama, anda harus mengetahui jenis perangkat framebuffer apa yang sedang anda
gunakan. Jika anda menggunakan kernel Gentoo yang telah ditambal (seperti
<c>gentoo-sources</c>), anda akan memiliki kemungkinan untuk memilih
<c>vesafb-tng</c> sebagai <e>tipe driver VESA</e> (yang merupakan default untuk
kernel-kernel ini. Jika memang ini kasusnya, berarti anda menggunakan
<c>vesafb-tng</c> dan <e>tidak perlu</e> menggunakan statemen <c>vga</c>. Jika
bukan, berarti anda menggunakan driver <c>vesafb</c> dan perlu menggunakan
statemen <c>vga</c>.
</p>

<p test="contains('AMD64 IA64',func:keyval('arch'))">
Sistem 64-bit harus menggunakan driver <c>vesafb</c>, dan harus menambahkan
statemen <c>vga</c>.
</p>

<p>
Statemen <c>vga</c> mengendalikan resolusi dan kedalaman warna layar
framebuffer anda untuk <c>vesafb</c>. Seperti yang dijelaskan di
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> (yang terinstal
ketika anda menginstal paket source kernel), anda harus mencantumkan nomor VESA
yang sesuai dengan resolusi dan kedalaman warna yang dibutuhkan.
</p>

<p>
Tabel di bawah ini menjabarkan resolusi-resolusi dan kedalaman warna dan
menyesuaikannya dengan nilai yang harus anda cantumkan di statemen <c>vga</c>.
</p>

<table>
<tr>
  <ti></ti>
  <th>640x480</th>
  <th>800x600</th>
  <th>1024x768</th>
  <th>1280x1024</th>
</tr>
<tr>
  <th>256</th>
  <ti>0x301</ti>
  <ti>0x303</ti>
  <ti>0x305</ti>
  <ti>0x307</ti>
</tr>
<tr>
  <th>32k</th>
  <ti>0x310</ti>
  <ti>0x313</ti>
  <ti>0x316</ti>
  <ti>0x319</ti>
</tr>
<tr>
  <th>64k</th>
  <ti>0x311</ti>
  <ti>0x314</ti>
  <ti>0x317</ti>
  <ti>0x31A</ti>
</tr>
<tr>
  <th>16M</th>
  <ti>0x312</ti>
  <ti>0x315</ti>
  <ti>0x318</ti>
  <ti>0x31B</ti>
</tr>
</table>

<p>
Statemen <c>video</c> mengatur opsi-opsi display framebuffer. Diperlukan
driver framebuffer (<c>vesafb</c> untuk kernel 2.6, atau <c>vesa</c> untuk
kernel 2.4) diikuti dengan statemen lain yang ingin anda aktifkan. Semua
variabel tercantum di <path>/usr/src/linux/Documentation/fb/vesafb.txt</path>,
Tiga opsi yang paling sering digunakan adalah:
</p>

<table>
<tr>
  <th>Statemen</th>
  <th>Penjelasan</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    Dengan anggapan kartu grafis bisa melilit (wrap) di sekitar memori yang ada
    (yakni melanjutkan lagi dari awal ketika telah mencapai bagian akhir)
  </ti>
</tr>
<tr>
  <ti>mtrr:n</ti>
  <ti>
    Pengaturan register MTRR. <c>n</c> bisa salah satu dari:<br/>
    0 - disabled<br/>
    1 - uncachable<br/>
    2 - write-back<br/>
    3 - write-combining<br/>
    4 - write-through
  </ti>
</tr>
<tr test="func:keyval('arch')='x86'">
  <ti><c>mode</c></ti>
  <ti>
    (hanya <c>vesafb-tng</c>)<br/>
    Menentukan resolusi, kedalaman warna dan <e>refresh rate</e>. Sebagai
    contoh, <c>1024x768-32@85</c> untuk resolusi 1024x768, kedalaman warna
    32 bit, dan refresh rate 85 Hz.
  </ti>
</tr>
</table>

</body>
<body test="contains('AMD64 IA64',func:keyval('arch'))">

<p>
Hasil dari dua statemen di atas bisa berupa <c>vga=0x318
video=vesafb:mtrr:3,ywrap</c> Ingatlah (atau tulis) aturan ini; anda akan
membutuhkannya sebentar lagi.
</p>

<p test="func:keyval('arch')='AMD64'">
Walaupun LILO dapat digunakan di AMD64, Gentoo hanya mendukung penggunaan GRUB.
Sekarang lanjutkan dengan <uri link="#grub">instalasi</uri> GRUB.
</p>

<p test="func:keyval('arch')='IA64'">
Sekarang anda harus menginstal bootloader <uri link="#elilo">elilo</uri>.
</p>

</body>
<body test="func:keyval('arch')='x86'">

<p>
Hasil dari dua statemen di atas bisa berupa <c>vga=0x318
video=vesafb:mtrr:3,ywrap</c> atau
<c>video=vesafb:mtrr:3,ywrap,1024x768-32@85</c>. Ingatlah (atau tulis) aturan
ini; anda akan membutuhkannya sebentar lagi.
</p>

<p>
Sekarang lanjutkan dengan instalasi <uri link="#grub">GRUB</uri>. <e>atau</e>
<uri link="#lilo">LILO</uri>.
</p>

</body>
</subsection>
</section>
<section id="grub" test="contains('AMD64 x86',func:keyval('arch'))" >
<title>Default: Menggunakan GRUB</title>
<subsection>
<title>Mengerti terminologi GRUB</title>
<body>

<p>
Bagian paling penting dalam mempelajari GRUB adalah berkenalan dengan cara
GRUB menamai harddisk dan partisi. Partisi Linux <path>/dev/hda1</path>
(untuk drive IDE) atau <path>/dev/sda1</path> (untuk drive SATA/SCSI anda
kemungkinan besar akan dinamai <path>(hd0,0)</path> oleh GRUB. Perhatikan
tanda kurung di sekitar <path>hd0,0</path> - tanda kurung tersebut diperlukan.
</p>

<p>
Harddisk dihitung mulai dari nol bukan "a" dan partisi-partisi dimulai dari nol
bukan satu. Anda juga perlu mengetahui bahwa untuk perangkat hd, hanya harddisk
yang dihitung, bukan perangkat atapi-ide seperti cdrom dan cd-rw. Selain itu,
penamaan yang sama berlaku juga untuk perangkat SCSI. (Biasanya perangkat SCSI
mendapatkan nomor yang lebih tinggi daripada perangkat IDE, kecuali jika bios
dikonfigurasi untuk boot dari perangkat SCSI). Ketika anda mengatur BIOS untuk
boot ke harddisk lain (misalkan slave pertama), harddisk <e>itulah</e> yang
dianggap sebagai <path>hd0</path>.
</p>

<p>
Anggap anda mempunyai sebuah harddisk di <path>/dev/hda</path>, sebuah
cdrom di <path>/dev/hdb</path>, sebuah cd-rw di <path>/dev/hdc</path>,
sebuah harddisk ke dua di <path>/dev/hdd</path>, dan tidak ada perangkat SCSI;
<path>/dev/hdd7</path> akan dinamai <path>(hd1,6)</path>. Mungkin kedengarannya
rumit, tetapi walaupun rumit, GRUB menyediakan mekanisme <e>tab completion</e>
yang sangat berguna bagi mereka yang memiliki banyak harddisk dan partisi, juga
bagi mereka yang kurang mengerti tentang skema penomoran GRUB.
</p>

<p>
Setelah anda terbiasa dengan skema penomoran GRUB, sekarang saatnya untuk
menginstal GRUB.
</p>

</body>
</subsection>
<subsection>
<title>Instalasi GRUB</title>
<body>

<p>
Untuk menginstal GRUB, pertama mari kita emerge paketnya:
</p>

<impo test="func:keyval('arch')='AMD64'">
Jika anda menggunakan <uri
link="?part=1&amp;chap=6#doc_chap2">profil</uri> non-multilib, anda <b>tidak</b>
boleh menginstal <c>grub</c>, tetapi <c>grub-static</c>.
</impo>

<pre caption="Instalasi GRUB">
# <i>emerge grub</i>
</pre>

<p>
Walaupun sekarang GRUB telah terinstal, kita masih perlu menuliskan file
konfigurasinya dan menginstal GRUB di MBR, agar GRUB secara otomatis dapat
mem-boot kernel yang baru anda buat. Ciptakan file
<path>/boot/grub/grub.conf</path> dengan <c>nano</c> (atau, jika ada, editor
lain):
</p>

<pre caption="Menulis file /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Sekarang kita akan menulis isi <path>grub.conf</path>. Di bawah ini, anda akan
menemukan dua contoh <path>grub.conf</path> untuk contoh skema partisi yang
kita gunakan pada panduan ini. Kami hanya memberikan banyak komentar pada
contoh <path>grub.conf</path> yang pertama. Pastikan anda menggunakan nama file
imej kernel <e>anda</e>, dan jika ada, imej initrd <e>anda</e>.
</p>

<ul>
  <li>
    <path>grub.conf</path> pertama diperuntukkan bagi anda yang tidak
    menggunakan <c>genkernel</c> untuk membangun kernel
  </li>
  <li>
    <path>grub.conf</path> kedua diperuntukkan bagi pengguna <c>genkernel</c>
  </li>
</ul>

<note>
Jika filesystem root anda adalah JFS, anda <e>harus</e> menambahkan " ro" ke
baris <c>kernel</c> karena JFS perlu me-<e>replay</e> log-nya sebelum dapat
melakukan mount secara <e>read-write</e>.
</note>

<pre caption="grub.conf untuk pengguna non-genkernel">
<comment># Kernel yang akan di-boot secara default. 0 adalah pertama, 1 adalah kedua, dll.</comment>
default 0
<comment># Berapa detik GRUB harus menunggu sebelum kernel default di-boot.</comment>
timeout 30
<comment># Keren, gambar latar belakang agar tampilan lebih bagus :)
# Beri tanda komentar ('#') jika anda tidak memiliki kartu video</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux <keyval id="kernel-version"/>
<comment># Partisi tempat imej kernel (atau sistem operasi) berada</comment>
root (hd0,0)
kernel /boot/<keyval id="kernel-name"/> root=/dev/hda3

title=Gentoo Linux <keyval id="kernel-version"/> (rescue)
<comment># Partisi tempat imej kernel (atau sistem operasi) berada</comment>
root (hd0,0)
kernel /boot/<keyval id="kernel-name"/> root=/dev/hda3 init=/bin/bb

<comment># Empat baris berikutnya hanya digunakan jika anda melakukan dualboot dengan sistem Windows.</comment>
<comment># Pada contoh ini, Windows berada di partisi /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>


<pre caption="grub.conf untuk pengguna genkernel">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux <keyval id="kernel-version"/>
root (hd0,0)
kernel /boot/<keyval id="genkernel-name"/> root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev
initrd /boot/<keyval id="genkernel-initrd"/>

<comment># Hanya jika anda ingin dualboot</comment>
title=Windows XP
root (hd0,5)
makeactive
chainloader +1
</pre>

<note>
<c>udev</c> yang diletakkan di akhir baris kernel diperlukan untuk menyiasati
bug pada beberapa versi genkernel <e>jika</e> anda menggunakan udev (yang
merupakan default).
</note>

<p>
Jika anda menggunakan skema partisi dan/atau imej kernel yang berbeda,
sesuaikanlah dengan partisi/kernel anda. Dan, perlu diingat bahwa semua yang
berhubungan dengan perangkat GRUB (mis. <path>(hd0,0)</path>) berada relatif
terhadap titik mount, bukan partisi root. Dengan kata lain,
<path>(hd0,0)/grub/splash.xpm.gz</path> sebenarnya adalah
<path>/boot/grub/splash.xpm.gz</path> karena <path>(hd0,0)</path>
adalah partisi <path>/boot</path>.
</p>

<p>
Selain itu, jika anda menggunakan skema partisi yang berbeda dan tidak
meletakkan <path>/boot</path> pada partisi terpisah, maka prefix (awalan)
<path>/boot</path> yang digunakan pada contoh di atas benar-benar
<e>diperlukan</e>. Jika anda mengikuti skema partisi yang kami sarankan, maka
awalan <path>/boot</path> tidak diperlukan, karena symlink <path>boot</path>
akan mengatasinya. Singkatnya, contoh-contoh di atas seharusnya bisa berfungsi,
apakah anda menggunakan partisi <path>/boot</path> terpisah atau tidak.
</p>

<p>
Jika anda perlu menambahkan opsi-opsi lain ke kernel, tambahkan saja opsi-opsi
tersebut di akhir perintah kernel. Kita telah menambahkan opsi
(<c>root=/dev/hda3</c> atau <c>real_root=/dev/hda3</c>), tetapi anda juga
dapat menambahkan opsi-opsi lain lagi. Sebagai contoh, kita tambahkan opsi
<c>vga</c> untuk dukungan framebuffer seperti yang telah kita bicarakan
sebelumnya.
</p>

<p>
Jika anda menggunakan kernel 2.6.7 atau yang lebih baru dan anda men-jumper
harddisk anda karena BIOS tidak mampu menangani harddisk besar, maka anda perlu
menambahkan <c>hdx=stroke</c>.
</p>

<p>
Pengguna <c>genkernel</c> seharusnya tahu bahwa kernel mereka menggunakan
opsi-opsi boot yang sama seperti CD Instalasi. Misalnya, jika anda memiliki
perangkat SCSI, anda seharusnya menambahkan <c>doscsi</c> sebagai opsi kernel.
</p>

<p>
Sekarang, simpanlah file <path>grub.conf</path> tersebut dan keluar. Anda
masih perlu menginstal GRUB di MBR (Master Boot Record) agar GRUB secara
otomatis dijalankan ketika sistem anda di-boot.
</p>

<p>
Para pengembang GRUB menganjurkan penggunaan <c>grub-install</c>. Tetapi, jika
karena satu dan lain hal <c>grub-install</c> gagal, anda tetap memiliki
pilihan untuk menginstal GRUB secara manual.
</p>

<p>
Lanjutkan dengan <uri link="#grub-install-auto">Default: Instalasi GRUB dengan
grub-install</uri> atau <uri link="#grub-install-manual">Alternatif: Instalasi
GRUB dengan instruksi manual</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Default: Instalasi GRUB dengan grub-install</title>
<body>

<p>
Untuk menginstal GRUB, anda perlu menjalankan perintah <c>grub-install</c>.
Tetapi, <c>grub-install</c> tidak akan berfungsi karena kita berada di dalam
lingkungan chroot. Kita perlu memperbarui <path>/etc/mtab</path> (file yang
berisi informasi tentang semua filesystem yang telah di-mount) terlebih dahulu:
untungnya, ada cara mudah untuk melakukannya - salin saja
<path>/proc/mounts</path> ke <path>/etc/mtab</path>, kecuali baris
<c>rootfs</c> jika anda tidak membuat partisi boot terpisah. Perintah berikut
ini bisa digunakan pada kedua kasus.
</p>

<pre caption="Menciptakan /etc/mtab">
# <i>grep -v rootfs /proc/mounts &gt; /etc/mtab</i>
</pre>

<p>
Sekarang, kita dapat menginstal GRUB dengan <c>grub-install</c>:
</p>

<pre caption="Menjalankan grub-install">
# <i>grub-install --no-floppy /dev/hda</i>
</pre>

<p>
Jika anda memiliki pertanyaan lain tentang GRUB, silahkan baca <uri
link="http://www.gnu.org/software/grub/grub-faq.html">FAQ GRUB</uri> atau <uri
link="http://www.gnu.org/software/grub/manual/">Manual GRUB</uri>.
</p>

<p>
Lanjutkan ke <uri link="reboot">Reboot Sistem</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Alternatif: Instalasi GRUB dengan instruksi manual</title>
<body>

<p>
Untuk mulai mengkonfigurasi GRUB, ketik <c>grub</c>. Anda akan mendapatkan
prompt baris perintah grub <path>grub&gt;</path>. Sekarang, anda harus
mengetikkan perintah-perintah yang benar untuk menginstal GRUB ke harddisk
anda.
</p>

<pre caption="Menjalankan shell GRUB">
# <i>grub --no-floppy</i>
</pre>

<note>
Jika sistem anda tidak memiliki drive floppy, tambahkan opsi <c>--no-floppy</c>
ke perintah di atas agar grub tidak mencari drive floppy (yang tidak ada).
</note>

<p>
Pada contoh konfigurasi, kita ingin menginstal GRUB agar GRUB membaca
informasinya dari partisi boot <path><keyval id="/boot"/></path>, dan
menginstal catatan boot GRUB di MBR (Master Boot Record) harddisk, jadi hal
yang pertama kita lihat sewaktu menyalakan komputer adalah prompt GRUB. Tentu
saja, jika anda tidak mengikuti contoh konfigurasi kami, gantikan
agar perintah-perintahnya sesuai dengan konfigurasi anda.
</p>

<p>
Mekanisme <e>tab completion</e> GRUB dapat digunakan di dalam GRUB. Sebagai
contoh, jika anda mengetikkan "<c>root (</c>" diikuti oleh TAB, GRUB akan
menampilkan sebuah daftar perangkat (mis. <path>hd0</path>). Jika anda
mengetikkan "<c>root (hd0,</c>" diikuti oleh TAB, anda akan mendapatkan daftar
partisi yang tersedia untuk dipilih (mis. <path>hd0,0</path>).
</p>

<p>
Dengan menggunakan mekanisme tab completion ini, GRUB seharusnya tidak sulit
untuk dikonfigurasi. Sekarang lanjutkan, dengan mengkonfigurasi GRUB :-)
</p>

<pre caption="Instalasi GRUB di MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(tuliskan tempat partisi /boot berada)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Instal GRUB di MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Keluar dari GRUB)</comment>
</pre>

<note>
Jika anda ingin menginstal GRUB di partisi tertentu, bukan di MBR, anda harus
mengganti perintah <c>setup</c> tadi agar GRUB menunjukkan partisi yang benar.
Jika anda ingin menginstal GRUB di partisi <path>/dev/hda3</path>, maka
perintahnya akan menjadi <c>setup (hd0,2)</c>. Walaupun begitu, hanya sedikit
pengguna yang ingin melakukan hal ini.
</note>

<p>
Jika anda memiliki pertanyaan lain tentang GRUB, bacalah <uri
link="http://www.gnu.org/software/grub/grub-faq.html">FAQ GRUB</uri> atau <uri
link="http://www.gnu.org/software/grub/manual/">Manual GRUB</uri>.
</p>

<p>
Lanjutkan dengan <uri link="reboot">Reboot Sistem</uri>.
</p>

</body>
</subsection>
</section>
<section id="lilo" test="func:keyval('arch')='x86'">
<title>Alternatif: Menggunakan LILO</title>
<subsection>
<title>Instalasi LILO</title>
<body>

<p>
LILO, singkatan dari LInux LOader, adalah bootloader Linux asli yang telah
terpercaya. Namun begitu, LILO tidak memiliki beberapa fitur yang dimiliki oleh
GRUB (yang juga menjadi alasan mengapa GRUB sangat populer saat ini). Alasan
LILO masih tetap digunakan pada beberapa sistem adalah karena GRUB tidak dapat
berfungsi dan LILO dapat berfungsi. Tentu saja, LILO masih digunakan juga
karena beberapa orang sangat mengenal LILO dan ingin tetap menggunakannya.
Untuk alasan apapun, Gentoo mendukung keduanya, dan sepertinya anda telah
memutuskan untuk menggunakan LILO.
</p>

<p>
Instalasi LILO sangat mudah, gunakan saja <c>emerge</c>.
</p>

<pre caption="Instalasi LILO">
# <i>emerge lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Konfigurasi LILO</title>
<body>

<p>
Untuk mengkonfigurasi LILO, anda harus menciptakan file
<path>/etc/lilo.conf</path>. Jalankan editor favorit anda (di buku pegangan ini,
kami menggunakan <c>nano</c> agar tetap konsisten) dan tulislah file tersebut.
</p>

<pre caption="Menulis /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Pada beberapa bagian sebelumnya kami meminta anda untuk mengingat nama imej
kernel yang anda buat. Pada contoh <path>lilo.conf</path> berikut ini, kami
menggunakan contoh skema partisi sebelumnya yang ada di panduan ini. Terdapat
dua bagian yang terpisah, yaitu:
</p>

<ul>
  <li>
    Satu untuk para pengguna yang tidak menggunakan <c>genkernel</c> untuk
    menciptakan kernel.
  </li>
  <li>
    Satu lagi untuk pengguna <c>genkernel</c>.
  </li>
</ul>

<p>
Jangan lupa untuk mengganti nama imej kernel <e>anda</e> dan, jika diperlukan,
nama imej initrd <e>anda</e>.
</p>

<note>
Jika filesystem root anda adalah JFS, anda <e>harus</e> menambahkan " ro" ke baris
<c>kernel</c> karena JFS perlu me-<e>replay</e> log-nya sebelum bisa melakukan
mount secara <e>read-write</e>.
</note>

<pre caption="Contoh /etc/lilo.conf">
boot=/dev/hda             <comment># Instal LILO di MBR</comment>
prompt                    <comment># Berikan pengguna kesempatan untuk memilih entri lain</comment>
timeout=50                <comment># Tunggu 5 (lima) detik sebelum boot entri default</comment>
default=gentoo            <comment># Setelah waktu tunggu selesai, boot entri "gentoo"</comment>

<comment># Untuk pengguna non-genkernel</comment>
image=/boot/<keyval id="kernel-name"/>
  label=gentoo            <comment># Nama entri ini</comment>
  read-only               <comment># Mulai dengan root read-only. Jangan diubah!</comment>
  root=/dev/hda3          <comment># Lokasi filesystem root</comment>

image=/boot/<keyval id="kernel-name"/>
  label=gentoo.rescue     <comment># Nama untuk seksi ini</comment>
  read-only               <comment># Mulai dengan root read-only. Jangan diubah!</comment>
  root=/dev/hda3          <comment># Lokasi filesystem root</comment>
  append="init=/bin/bb"   <comment># Menjalankan shell rescue statik Gentoo</comment>

<comment># Untuk pengguna genkernel</comment>
image=/boot/<keyval id="genkernel-name"/>
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev"
  initrd=/boot/<keyval id="genkernel-initrd"/>

<comment># Dua baris berikutnya hanya digunakan jika anda dualboot dengan sistem Windows.</comment>
<comment># Pada contoh ini, Windows berada di partisi /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
<c>udev</c> yang diletakkan di akhir baris kernel diperlukan untuk menyiasati
bug pada beberapa versi genkernel <e>jika</e> anda menggunakan udev (yang
merupakan default).
</note>

<note>
Jika anda menggunakan skema partisi dan/atau imej kernel yang berbeda, maka
sesuaikanlah dengan partisi/kernel anda.
</note>

<p>
Jika anda perlu menambahkan opsi-opsi kernel tambahan, tambahkan argumen
<c>append</c> ke seksi tersebut. Sebagai contoh, kita tambahkan argumen
<c>vga=788</c> untuk mengaktifkan dukungan framebuffer:
</p>

<pre caption="Menggunakan append untuk menambahkan opsi kernel">
image=/boot/<keyval id="kernel-name"/>
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="video=vesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
Jika anda menggunakan kernel 2.6.7 atau yang lebih tinggi, dan anda men-jumper
harddisk anda karena BIOS tidak dapat menangani hardisk besar, anda perlu
menambahkan <c>hdx=stroke</c>.
</p>

<p>
Pengguna <c>genkernel</c> seharusnya tahu bahwa kernel mereka menggunakan
opsi-opsi boot yang sama seperti LiveCD. Misalnya, jika anda memiliki perangkat
SCSI, anda seharusnya menambahkan <c>doscsi</c> sebagai opsi kernel.
</p>


<p>
Sekarang simpanlah file tersebut dan keluar. Sebagai langkah terakhir, anda
harus menjalankan perintah <c>/sbin/lilo</c> agar LILO menerapkan
konfigurasi <path>/etc/lilo.conf</path> ke sistem anda (instal LILO ke disk).
Perlu diingat bahwa anda harus menjalankan kembali <c>/sbin/lilo</c> setiap
kali anda menginstal kernel baru atau melakukan perubahan pada menu!
</p>

<pre caption="Menyelesaikan instalasi LILO">
# <i>/sbin/lilo</i>
</pre>

<p>
Jika anda memiliki pertanyaan tentang LILO, silahkan baca <uri
link="http://en.wikipedia.org/wiki/LILO_(boot_loader)">halaman
wikipedia</uri> LILO.
</p>

<p>
Sekarang lanjutkan ke <uri link="#reboot">Reboot Sistem</uri>.
</p>

</body>
</subsection>
</section>
<section id="elilo" test="func:keyval('arch')='IA64'">
<title>Default: Instalasi elilo</title>
<body>

<p>
Pada platform IA64, bootloader yang digunakan adalah <c>elilo</c>. Anda
harus menginstalnya terlebih dahulu di komputer anda.
</p>

<pre caption="Instalasi elilo">
# <i>emerge elilo</i>
</pre>

<p>
Anda dapat menemukan file konfigurasinya di <path>/etc/elilo.conf</path> dan
contoh file konfigurasi di direktori dokumen standar
<path>/usr/share/doc/elilo-&lt;ver&gt;/</path>. Berikut ini adalah contoh
konfigurasi:
</p>

<pre caption="Contoh /etc/elilo.conf">
boot=/dev/sda1
delay=30
timeout=50
default=Gentoo
append="console=ttyS0,9600"
prompt

image=/vmlinuz
        label=Gentoo
        root=/dev/sda2
        read-only

image=/vmlinuz.old
        label=Gentoo.old
        root=/dev/sda2
        read-only
</pre>

<p>
Baris <c>boot</c> memberitahukan elilo lokasi partisi boot (pada contoh ini
adalah <path>/dev/sda1</path>). Baris <c>delay</c> menentukan waktu 10 detik
sebelum kernel default akan di-boot ketika berada di modus noninteraktif.
Baris <c>timeout</c> sama dengan <c>delay</c> tetapi untuk modus interaktif.
Baris <c>default</c> menentukan entri kernel default (yang ditentukan di
bawahnya). Baris <c>append</c> berisi opsi-opsi tambahan untuk baris perintah
kernel. Baris <c>prompt</c> mengatur tingkah laku default elilo untuk
berinteraksi.
</p>

<p>
Bagian-bagian yang dimulai dengan <c>image</c> menentukan imej-imej bootable.
Setiap imej memiliki <c>label</c>, filesystem <c>root</c>, dan hanya akan
me-mount filesystem root secara <c>read-only</c>.
</p>

<p>
Setelah mengkonfigurasi, jalankan <c>elilo --efiboot</c>. Opsi
<c>--efiboot</c> menambahkan entri menu untuk Gentoo Linux ke Boot Manager EFI.
</p>

<pre caption="Menerapkan konfigurasi elilo">
# <i>elilo --efiboot</i>
</pre>

<p>
Sekarang, lanjutkan dengan <uri link="#reboot">Reboot Sistem</uri>.
</p>

</body>
</section>
<section id="reboot">
<title>Reboot Sistem</title>
<subsection>
<body>

<p>
Keluarlah dari lingkungan chroot dan unmount semua partisi yang dimount.
Lalu ketik perintah ajaib yang telah anda tunggu-tunggu: <c>reboot</c>.
</p>

<pre caption="Unmount semua partisi dan reboot" test="func:keyval('arch')='IA64'">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/sys /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<pre caption="Unmount semua partisi dan reboot" test="not(func:keyval('arch')='IA64')">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Tentu saja, jangan lupa keluarkan CD bootable, jika tidak CD tersebut akan
di-boot kembali.
</p>

<p test="func:keyval('arch')='IA64'">
Ketika reboot anda seharusnya akan melihat opsi Gentoo Linux di <e>EFI Boot
Manager</e> untuk masuk ke sistem Gentoo.
</p>

<p>
Setelah anda reboot ke sistem Gentoo anda, selesaikan dengan <uri
link="?part=1&amp;chap=11">Menyelesaikan Instalasi Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
