<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<abstract>
Jika anda ingin bereksperimen, anda dapat menambahkan fungsi-fungsi anda
sendiri ke jaringan.
</abstract>

<version>8.0</version>
<date>2007-05-07</date>

<section>
<title>Hook Fungsi Standar</title>
<body>

<p>
Empat fungsi dapat didefinisikan yang nantinya akan dipanggil di sekeliling
operasi <c>start</c>/<c>stop</c>. Fungsi-fungsi dipanggil dengan nama antarmuka
dulu agar satu fungsi dapat mengendalikan banyak antarmuka.
</p>

<p>
Nilai hasil untuk fungsi <c>preup()</c> dan <c>predown()</c> harus 0 (sukses)
untuk mengindikasikan bahwa konfigurasi atau penghapusan konfigurasi antarmuka
dapat dilanjutkan. Jika <c>preup()</c> memberikan nilai selain nol, maka
konfigurasi antarmuka akan dibatalkan. Jika <c>predown()</c> memberikan hasil
selain nol, maka antarmuka tidak akan diizinkan untuk melanjutkan penghapusan
konfigurasi.
</p>

<p>
Nilai hasil untuk fungsi <c>postup()</c> dan <c>postdown()</c> akan diabaikan
karena tidak ada yang perlu dilakukan jika fungsi-fungsi ini mengindikasikan
kegagalan.
</p>

<p>
<c>${IFACE}</c> diisi dengan antarmuka ketika sedang dinyalakan/dimatikan.
<c>${IFVAR}</c> adalah <c>${IFACE}</c> yang dikonversikan ke nama-nama
variabel yang diizinkan oleh bash.
</p>

<pre caption="Contoh-contoh fungsi pre/post up/down">
preup() {
  <comment># Percobaan untuk link di antarmuka sebelum dinyalakan. Ini hanya
  # akan bekerja pada beberapa kartu jaringan dan membutuhkan paket ethtool.</comment>
  if ethtool ${IFACE} | grep -q 'Link detected: no'; then
    ewarn "No link on ${IFACE}, aborting configuration"
    return 1
  fi

  <comment># Jangan lupa berikan nilai 0 jika sukses</comment>
  return 0
}

predown() {
  <comment># Default pada skrip adalah menguji root NFS dan melarang antarmuka
  # untuk dimatikan pada kasus tersebut. Perlu diketahui bahwa jika anda
  # menentukan sebuah fungsi predown() anda akan menindih logika tersebut. Ini
  # dia, jika anda memang menginginkannya...</comment>
  if is_net_fs /; then
    eerror "root filesystem is network mounted -- can't stop ${IFACE}"
    return 1
  fi

  <comment># Jangan lupa berikan nilai 0 jika sukses</comment>
  return 0
}

postup() {
  <comment># Fungsi ini dapat digunakan, misalnya, untuk melakukan pendaftaran
  # ke sebuah servis DNS dinamis. Kemungkinan lainnya ialah untuk
  # mengirim/menerima email ketika antarmuka telah dinyalakan.</comment>
       return 0
}

postdown() {
  <comment># Fungsi ini dicantumkan hanya untuk kelengkapan.... Penulis belum
  # pernah mendapatkan ide untuk melakukan apapun dengannya ;-)</comment>
  return 0
}
</pre>

</body>
</section>
<section>
<title>Hook Fungsi Tool Wireless</title>
<body>

<note>
Ini tidak akan bekerja dengan Permohonan WPA - tetapi variabel <c>${ESSID}</c>
dan <c>${ESSIDVAR}</c> tersedia di fungsi <c>postup()</c>.
</note>

<p>
Dua fungsi dapat didefinisikan yang akan dipanggil di sekeliling fungsi-fungsi
terkait. Fungsi-fungsi ini dipanggil dengan nama antarmuka dulu agar satu
fungsi dapat mengendalikan banyak antarmuka.
</p>

<p>
Nilai hasil dari fungsi <c>preassociate()</c> harus berupa 0 (sukses) untuk
mengindikasikan bahwa konfigurasi atau penghapusan konfigurasi antarmuka dapat
dilanjutkan. Jika <c>preassociate()</c> memberikan nilai bukan nol, maka
konfigurasi antarmuka akan dibatalkan.
</p>

<p>
Nilai hasil dari fungsi <c>postassociate()</c> akan diabaikan karena tidak
ada yang perlu dilakukan jika fungsi ini mengindikasikan kegagalan.
</p>

<p>
<c>${ESSID}</c> di-set ke ESSID yang tepat dari AP yang anda hubungi.
<c>${ESSIDVAR}</c> merupakan <c>${ESSID}</c> yang dikonversikan ke nama-nama
variabel yang diizinkan oleh bash.
</p>

<pre caption="Fungsi-fungsi asosiasi pre/post">
preassociate() {
  <comment># Fungsi-fungsi di bawah ini menambahkan dua variabel konfigurasi
  # leap_user_ESSID dan leap_pass_ESSID. Ketika keduanya dikonfigurasikan untuk
  # ESSID yang dihubungi maka kita akan menjalankan skrip CISCO LEAP</comment>

  local user pass
  eval user=\"\$\{leap_user_${ESSIDVAR}\}\"
  eval pass=\"\$\{leap_pass_${ESSIDVAR}\}\"

  if [[ -n ${user} &amp;&amp; -n ${pass} ]]; then
    if [[ ! -x /opt/cisco/bin/leapscript ]]; then
      eend "For LEAP support, please emerge net-misc/cisco-aironet-client-utils"
      return 1
    fi
    einfo "Waiting for LEAP Authentication on \"${ESSID//\\\\//}\""
    if /opt/cisco/bin/leapscript ${user} ${pass} | grep -q 'Login incorrect'; then
      ewarn "Login Failed for ${user}"
      return 1
    fi
  fi

  return 0
}

postassociate() {
  <comment># Fungsi ini dicantumkan hanya untuk kelengkapan.... Penulis belum
  # pernah mendapatkan ide untuk melakukan apapun dengannya ;-)</comment>

  return 0
}
</pre>

<note>
<c>${ESSID}</c> dan <c>${ESSIDVAR}</c> tidak tersedia di fungsi <c>predown()</c>
dan <c>postdown()</c>.
</note>

</body>
</section>

</sections>
