<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: shb-intrusion.xml,v 1.1 2007/02/16 11:11:03 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.3</version>
<date>2006-11-01</date>

<section>
<title>AIDE (Advanced Intrusion Detection Environment)</title>
<body>

<p>
AIDE adalah Host-Based Intrusion Detection System (HIDS), sebuah alternatif
bebas dari Tripware (jika anda telah mengetahui Tripwire anda tidak akan
menghadapi kesulitan ketika mempelajari file konfigurasi AIDE). HIDS digunakan
untuk melacak perubahan pada file konfigurasi dan binari sistem yang penting,
biasanya dengan sebuah
<e>cryptographic hash</e> unik untuk diperiksa dan meletakkannya di suatu tempat
yang aman. Pada situasi normal, hash bagus yang telah disimpan dibandingkan 
dengan file yang didapatkan dari salinan setiap file, untuk mengetahui apakah
file tersebut telah berubah. HIDS adalah cara yang bagus untuk melacak 
perubahan yang tidak diperkenankan pada sistem anda, namun diperlukan sedikit
kerja agar dapat diimplementasikan dengan baik.
</p>

<p>
File konfigurasi didasarkan pada <e>regular expressions</e>, <e>macros</e>
dan aturan-aturan untuk file dan direktori. Kita memiliki macro-macro berikut:
</p>

<table>
<tr>
  <th>Macro</th>
  <th>Penjelasan</th>
  <th>Sintaks</th>
</tr>
<tr>
  <ti>ifdef</ti>
  <ti>Jika ditentukan</ti>
  <ti>@@ifdef "nama"</ti>
</tr>
<tr>
  <ti>ifndef</ti>
  <ti>Jika tidak ditentukan</ti>
  <ti>@@ifndef "nama"</ti>
</tr>
<tr>
  <ti>define</ti>
  <ti>Menentukan sebuah variable</ti>
  <ti>@@define "namea "nilai"</ti>
</tr>
<tr>
  <ti>undef</ti>
  <ti>Hapus sebuah variabel yang telah ditentukan</ti>
  <ti>@@undef "nama"</ti>
</tr>
<tr>
  <ti>ifhost</ti>
  <ti>jika "hostname"</ti>
  <ti>@@ifhost "hostname"</ti>
</tr>
<tr>
  <ti>ifnhost</ti>
  <ti>if bukan "hostname"</ti>
  <ti>@@ifnhost "hostname"</ti>
</tr>
<tr>
  <ti>endif</ti>
<ti>
Endif harus digunakan setelah salah satu dari macro-macro di atas kecuali define dan undef
</ti>
<ti>@@endif</ti>
</tr>
</table>

<p>
Macro-macro ini sangat berguna jika anda memiliki lebih dari satu komputer
Gentoo dan ingin menggunakan AIDE pada semua komputer tersebut, tetapi tidak
semua komputer menjalankan servis-servis yang sama atau bahkan memiliki
pengguna yang sama.
</p>

<p>
Kemudian kita atur beberapa flag untuk memeriksa file dan direktori. Kesemuanya
adalah kombinasi dari perizinan, properti file dan tanda kriptografi (mis.
checksum).
</p>

<table>
<tr>
  <th>Flag</th>
  <th>Penjelasan</th>
</tr>
<tr>
  <ti>p</ti>
  <ti>perizinan</ti>
</tr>
<tr>
  <ti>i</ti>
  <ti>inode</ti>
</tr>
<tr>
  <ti>n</ti>
  <ti>jumlah links</ti>
</tr>
<tr>
  <ti>u</ti>
  <ti>user</ti>
</tr>
<tr>
  <ti>g</ti>
  <ti>grop</ti>
</tr>
<tr>
  <ti>s</ti>
  <ti>ukuran</ti>
</tr>
<tr>
  <ti>b</ti>
  <ti>block count</ti>
</tr>
<tr>
  <ti>m</ti>
  <ti>mtime</ti>
</tr>
<tr>
  <ti>a</ti>
  <ti>atime</ti>
</tr>
<tr>
  <ti>c</ti>
  <ti>ctime</ti>
</tr>
<tr>
  <ti>S</ti>
  <ti>memeriksa pertambahan ukuran</ti>
</tr>
<tr>
  <ti>md5</ti>
  <ti>md5 checksum</ti>
</tr>
<tr>
  <ti>sha1</ti>
  <ti>sha1 checksum</ti>
</tr>
<tr>
  <ti>rmd160</ti>
  <ti>rmd160 checksum</ti>
</tr>
<tr>
  <ti>tiger</ti>
  <ti>tiger checksum</ti>
</tr>
<tr>
  <ti>R</ti>
  <ti>p+i+n+u+g+s+m+c+md5</ti>
</tr>
<tr>
  <ti>L</ti>
  <ti>p+i+n+u+g</ti>
</tr>
<tr>
  <ti>E</ti>
  <ti>Grup kosong</ti>
</tr>
<tr>
  <ti>&gt;</ti>
  <ti>Pertambahan file log p+u+g+i+n+S</ti>
</tr>
</table>

<p>
Dan jika AIDE dikompilasi dengan dukungan mhash, ada beberapa fitur lain yang
ditambahkan:
</p>

<table>
<tr>
<th>Flag</th>
<th>Penjelasan</th>
</tr>
<tr>
<ti>haval</ti>
<ti>haval checksum</ti>
</tr>
<tr>
<ti>gost</ti>
<ti>gost checksum</ti>
</tr>
<tr>
<ti>crc32</ti>
<ti>crc32 checksum</ti>
</tr>
</table>

<p>
Sekarang anda dapat menciptakan aturan-aturan anda sendiri berdasarkan flag-flag
dia atas dengan menggabungkannya seperti ini:
</p>

<pre caption="Menciptakan aturan untuk AIDE">
All=R+a+sha1+rmd160
Norm=s+n+b+md5+sha1+rmd160
</pre>

<p>
Terakhir kita perlu menciptakan file konfigurasi kita untuk melihat bagaimana
cara menambahkan sebuah aturan untuk sebuah file atau direktori. Untuk 
menambahkan aturan, gabungkan nama file atau direktori dengan aturan tersebut.
AIDE akan menambahkan semua file secara rekursif kecuali anda menentukan aturan
alternatif.
</p>

<table>
<tr>
<th>Flag</th>
<th>Penjelasan</th>
</tr>
<tr>
<ti>!</ti>
<ti>Jangan tambahkan file atau direktori ini.</ti>
</tr>
<tr>
<ti>=</ti>
<ti>Tambahkan direktori ini, tetapi tidak rekursif.</ti>
</tr>
</table>

<p>
Mari kita lihat sebuah contoh lengkap:
</p>

<pre caption="/etc/aide/aide.conf">
@@ifndef TOPDIR
@@define TOPDIR /
@@endif

@@ifndef AIDEDIR
@@define AIDEDIR /etc/aide
@@endif

@@ifhost smbserv
@@define smbactive
@@endif

#Lokasi database yang akan dibaca
database=file:@@{AIDEDIR}/aide.db

#Lokasi database yang akan ditulis
database_out=file:aide.db.new

verbose=20
report_url=stdout

# Definisi aturan
All=R+a+sha1+rmd160
Norm=s+n+b+md5+sha1+rmd160

@@{TOPDIR} Norm
!@@{TOPDIR}etc/aide
!@@{TOPDIR}dev
!@@{TOPDIR}media
!@@{TOPDIR}mnt
!@@{TOPDIR}proc
!@@{TOPDIR}root
!@@{TOPDIR}sys
!@@{TOPDIR}tmp
!@@{TOPDIR}var/log
!@@{TOPDIR}var/run
!@@{TOPDIR}usr/portage
@@ifdef smbactive
!@@{TOPDIR}etc/smb/private/secrets.tdb
@@endif
=@@{TOPDIR}home Norm
</pre>

<p>
Pada contoh di atas, kita menentukan beberapa macro untuk tempat topdir memulai
dan lokasi AIDE. AIDE membaca file <path>/etc/aide/aide.db</path> ketika sedang
memeriksa integritas sebuah file. Tetapi ketika memperbarui atau membuat file
baru, informasinya disimpan di <path>/etc/aide/aide.db.new</path>. Ini agar
AIDE tidak langsung menimpa file database lama. Opsi <c>report_URL</c> belum
diimplementasikan, tetapi pembuatnya ingin menjadikan AIDE dapat mengirimkan
email atau bahkan mengeksekusi skrip.
</p>

<p>
Ebuild AIDE menyediakan sebuah file konfigurasi default yang dapat digunakan,
sebuah skrip pembantu dan skrip crontab. Skrip pembantu menjalankan beberapa
tugas untuk anda dan menyediakan sebuah antarmuka yang sedikit bersahabat
untuk skrip. Untuk melihat semua opsi yang tersedia, cobalah <c>aide --help</c>.
Untuk memulai, anda hanya perlu menjalankan <c>aide -i</c> dan crontab akan
mencari database dan mengirimkan email setiap hari. Kami anjurkan anda untuk
membaca file <path>/etc/aide/aide.conf</path> dan pastikan agar konfigurasi
sudah sesuai dengan sistem  anda.
</p>

<note>
Tergantung pada CPU, kecepatan akses disk, dan flag-flag yang telah anda set
pada file, hal ini dapat memakan sedikit waktu.
</note>

<note>
Jangan lupa untuk menetapkan sebuah alias agar anda mendapatkan mail root.
Jika tidak, anda tidak akan pernah mendapatkan laporan AIDE.
</note>

<p>
Sekarang ada beberapa resiko dari menempatkan file db secara lokal, karena
penyerang akan (jika mereka tahu bahwa AIDE terinstal) mencoba merubah file
db, memperbaruinya dan merubah isi <path>/usr/bin/aide</path>. jadi anda perlu
membuat sebuah CD atau media lain untuk menempatkan salinan file db dan binari
AIDE.
</p>

<p>
Anda bisa mendapatkan informasi lebih mendalam di website proyek <uri
link="http://www.cs.tut.fi/~rammer/aide.html">AIDE</uri> 
</p>

</body>
</section>
<section>
<title>Snort</title>
<body>

<p>
Snort adalah sebuah Network Intrusion Detection System (NIDS). Untuk menginstal
dan mengkonfigurasinya, gunakan contoh berikut:
</p>

<pre caption="/etc/conf.d/snort">
PIDFILE=/var/run/snort_eth0.pid
MODE="full"
NETWORK="10.0.0.0/24"
LOGDIR="/var/log/snort"
CONF=/etc/snort/snort.conf
SNORT_OPTS="-D -s -u snort -dev -l $LOGDIR -h $NETWORK -c $CONF"
</pre>

<pre caption="/etc/snort/snort.conf">
<comment>(Langkah 1)</comment>
var HOME_NET 10.0.0.0/24
var EXTERNAL_NET any
var SMTP $HOME_NET
var HTTP_SERVERS $HOME_NET
var SQL_SERVERS $HOME_NET
var DNS_SERVERS [10.0.0.2/32,212.242.40.51/32]
var RULE_PATH ./

<comment>(Langkah 2)</comment>
preprocessor frag2
preprocessor stream4: detect_scans detect_state_problems detect_scans disable_evasion_alerts
preprocessor stream4_reassemble: ports all
preprocessor http_decode: 80 8080 unicode iis_alt_unicode double_encode iis_flip_slash full_whitespace
preprocessor rpc_decode: 111 32771
preprocessor bo: -nobrute
preprocessor telnet_decode

<comment>(Langkah 3)</comment>
include classification.config

<comment>(Langkah 4)</comment>
include $RULE_PATH/bad-traffic.rules
include $RULE_PATH/exploit.rules
include $RULE_PATH/scan.rules
include $RULE_PATH/finger.rules
include $RULE_PATH/ftp.rules
include $RULE_PATH/telnet.rules
include $RULE_PATH/smtp.rules
include $RULE_PATH/rpc.rules
include $RULE_PATH/rservices.rules
include $RULE_PATH/dos.rules
include $RULE_PATH/ddos.rules
include $RULE_PATH/dns.rules
include $RULE_PATH/tftp.rules
include $RULE_PATH/web-cgi.rules
include $RULE_PATH/web-coldfusion.rules
include $RULE_PATH/web-iis.rules
include $RULE_PATH/web-frontpage.rules
include $RULE_PATH/web-misc.rules
include $RULE_PATH/web-attacks.rules
include $RULE_PATH/sql.rules
include $RULE_PATH/x11.rules
include $RULE_PATH/icmp.rules
include $RULE_PATH/netbios.rules
include $RULE_PATH/misc.rules
include $RULE_PATH/attack-responses.rules
include $RULE_PATH/backdoor.rules
include $RULE_PATH/shellcode.rules
include $RULE_PATH/policy.rules
include $RULE_PATH/porn.rules
include $RULE_PATH/info.rules
include $RULE_PATH/icmp-info.rules
include $RULE_PATH/virus.rules
# include $RULE_PATH/experimental.rules
include $RULE_PATH/local.rules
</pre>

<pre caption="/etc/snort/classification.config">
config classification: not-suspicious,Not Suspicious Traffic,3
config classification: unknown,Unknown Traffic,3
config classification: bad-unknown,Potentially Bad Traffic, 2
config classification: attempted-recon,Attempted Information Leak,2
config classification: successful-recon-limited,Information Leak,2
config classification: successful-recon-largescale,Large Scale Information Leak,2
config classification: attempted-dos,Attempted Denial of Service,2
config classification: successful-dos,Denial of Service,2
config classification: attempted-user,Attempted User Privilege Gain,1
config classification: unsuccessful-user,Unsuccessful User Privilege Gain,1
config classification: successful-user,Successful User Privilege Gain,1
config classification: attempted-admin,Attempted Administrator Privilege Gain,1
config classification: successful-admin,Successful Administrator Privilege Gain,1

# NEW CLASSIFICATIONS
config classification: rpc-portmap-decode,Decode of an RPC Query,2
config classification: shellcode-detect,Executable code was detected,1
config classification: string-detect,A suspicious string was detected,3
config classification: suspicious-filename-detect,A suspicious filename was detected,2
config classification: suspicious-login,An attempted login using a suspicious username was detected,2
config classification: system-call-detect,A system call was detected,2
config classification: tcp-connection,A TCP connection was detected,4
config classification: trojan-activity,A Network Trojan was detected, 1
config classification: unusual-client-port-connection,A client was using an unusual port,2
config classification: network-scan,Detection of a Network Scan,3
config classification: denial-of-service,Detection of a Denial of Service Attack,2
config classification: non-standard-protocol,Detection of a non-standard protocol or event,2
config classification: protocol-command-decode,Generic Protocol Command Decode,3
config classification: web-application-activity,access to a potentially vulnerable web application,2
config classification: web-application-attack,Web Application Attack,1
config classification: misc-activity,Misc activity,3
config classification: misc-attack,Misc Attack,2
config classification: icmp-event,Generic ICMP event,3
config classification: kickass-porn,SCORE! Get the lotion!,1
</pre>

<p>
Dapatkan informasi lainnya dari website <uri
link="http://www.snort.org">Snort</uri>.
</p>

</body>
</section>
<section>
<title>Melacak malware dengan chkrootkit</title>
<body>

<p>
HIDS seperti AIDE adalah cara yang baik untuk melacak perubahan pada sistem
anda, tetapi tidak salah juga jika anda menambahkan pertahanan lain. 
<c>chkrootkit</c> adalah sebuah utilitas yang dapat melacak rootkit --software
yang dirancang untuk menyembunyikan aksi penyerang dan mengijinkannya untuk
mendapatkan akses-- di file-file sistem, juga melacak jejak-jejak penyusup
serta malware lain. Walaupun <c>chkrootkit</c> (dan alternatif lain seperti
<c>rkhunter</c> adalah utilitas yang berguna untuk memelihara sistem dan
melacak penyusup, keduanya tidak dapat menjamin keamanan sistem anda.
</p>

<p>
Cara terbaik menggunakan <c>chkrootkit</c> untuk melacak penyusup adalah dengan
menjalankannya secara rutin dari <c>cron</c>. Untuk memulai, emerge
<path>app-admin/chkrootkit</path>. <c>chkrootkit</c> dapat dijalankan dari
baris perintah dengan nama yang sama, atau dari <c>cron</c> dengan dengan
sebuah entri seperti ini:
</p>

<pre caption="Menjadwalkan chkrootkit sebagai cronjob">
0 3 * * * /usr/sbin/chkrootkit
</pre>

</body>
</section>
</sections>
