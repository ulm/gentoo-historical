<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: shb-perms.xml,v 1.1 2006/12/21 12:06:02 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.1</version>
<date>2006-09-16</date>

<section>
<title>File-file yang boleh dibaca semua orang</title>
<body>

<p>
User biasa seharusnya tidak boleh memiliki akses ke file-file konfigurasi atau
password. Seorang penyerang bisa mencuri password dari database atau website
anda menggunakannya untuk melakukan deface -- atau lebih buruk lagi, menghapus
-- data. Ini sebabnya penting bagi anda untuk merubah perizinan file anda ke
<c>0600</c> dan menandakan kepemilikan file tersebut dengan <c>chown</c>.
</p>

</body>
</section>
<section>
<title>File-file yang boleh ditulis/edit oleh semua/grup</title>
<body>

<pre caption="Mencari file-file dan direktori yang dapat ditulis oleh semua">
# <i>find / -type f \( -perm -2 -o -perm -20 \) -exec ls -lg {} \; 2>/dev/null >writable.txt</i>
# <i>find / -type d \( -perm -2 -o -perm -20 \) -exec ls -ldg {} \; 2>/dev/null >>writable.txt</i>
</pre>

<p>
Perintah tersebut akan menciptakan sebuah file besar yang berisi file-file yang
dapat ditulis oleh semua user atau grup tertentu. Periksa perizinannya lalu
ganti perizinan file yang dapat ditulis oleh semua dengan mengeksekusi
<c>/bin/chmod o-w</c> pada file-file tersebut.
</p>

</body>
</section>
<section>
<title>File-file SUID/SGID</title>
<body>

<p>
File-file yang memiliki bit SUID atau SGID dapat dieksekusi oleh user/grup
pemiliknya. Biasanya, bit-bit ini digunakan pada file-file yang harus dijalankan
oleh root untuk melakukan tugasnya. File-file ini bisa memberikan akses root
secara lokal (jika memiliki celah keamanan). Ini sangat berbahaya, dan file-file
yang memiliki bit SUID dan SGID harus dihindari se-bisa mungkin. Jika anda tidak
menggunakan file-file seperti ini, gunakan <c>chmod 0</c> pada file-file
tersebut atau unmerge paket yang membawanya (periksa dengan <c>equery</c>; jika
anda belum memilikinya, <c>emerge gentoolkit</c>). Atau, hapus saja bit SUID
dengan <c>chmod -s</c>.
</p>

<pre caption="Mencari file-file setuid">
# <i>find / -type f \( -perm -004000 -o -perm -002000 \) -exec ls -lg {} \; 2>/dev/null >suidfiles.txt</i>
</pre>

<p>
Perintah tersebut akan menciptakan sebuah file yang berisi daftar seluruh
file yang memiliki bit SUID/SGID.
</p>

<pre caption="Daftar binari setuid">
/bin/su
/bin/ping
/bin/mount
/bin/umount
/var/qmail/bin/qmail-queue
/usr/bin/chfn
/usr/bin/chsh
/usr/bin/crontab
/usr/bin/chage
/usr/bin/expiry
/usr/bin/sperl5.6.1
/usr/bin/newgrp
/usr/bin/passwd
/usr/bin/gpasswd
/usr/bin/procmail
/usr/bin/suidperl
/usr/lib/misc/pt_chown
/usr/sbin/unix_chkpwd
/usr/sbin/traceroute
/usr/sbin/pwdb_chkpwd
</pre>

<p>
Secara default, Gentoo Linux tidak memiliki banyak file SUID (tapi hal ini
tergantung pada paket apa saja yang anda instal), tetapi mungkin anda akan
mendapatkan daftar seperti di atas. Kebanyakan dari perintah-perintah di dalam
daftar tersebut seharusnya tidak boleh dijalankan oleh user biasa, hanya root.
Hapus bit SUID dari <c>ping</c>, <c>mount</c>, <c>umount</c>, <c>chfn</c>,
<c>chsh</c>, <c>newgrp</c>, <c>suidperl</c>, <c>pt_chown</c> dan
<c>traceroute</c> dengan mengeksekusi <c>chmod -s</c> pada setiap file. Jangan
hapus bit SUID dari <c>su</c>, <c>qmail-queue</c> atau <c>unix_chkpwd</c> karena
anda nantinya tidak akan dapat melakukan <c>su</c> dan menerima email. Dengan
menghapus bit (jika memang aman dilakukan), anda telah menghapus satu lagi
kemungkinan user biasa (atau seorang penyerang) untuk mendapatkan akses root
lewat file-file ini.
</p>

<p>
File-file SUID yang ada di sistem penulis hanyalah <c>su</c>, <c>passwd</c>,
<c>gpasswd</c>, <c>qmail-queue</c>, <c>unix_chkpwd</c> dan <c>pwdb_chkpwd</c>.
Tetapi jika anda menginstal X, anda mungkin memiliki lebih banyak lagi, karena
X memerlukan akses yang ditinggikan oleh SUID.
</p>

</body>
</section>
<section>
<title>Binari SUID/SGID dan Hard link</title>
<body>

<p>
Sebuah file dianggap terhapus jika tidak ada lagi link yang menunjuk kepadanya.
Konsep ini mungkin terdengar aneh, tetapi nama file seperti
<path>/usr/bin/perl</path> sebenarnya merupakan sebuah link ke inode tempat
datanya disimpan. Sebuah file dapat memiliki link sebanyak-banyaknya, dan
sampai link-link tersebut dihapus, file tersebut masih akan tetap ada.
</p>

<p>
Jika user anda memiliki akses ke sebuah partisi yang tidak di-mount dengan
<c>nosuid</c> atau <c>noexec</c> (misalnya, jika <path>/tmp</path>,
<path>/home</path>, atau <path>/var/tmp</path> tidak terletak di partisi
terpisah), anda perlu memastikan agar user-user anda tidak menciptakan hard
link ke binari-binari SUID atau SGID, karena jika begitu maka setelah portage
selesai melakukan upgrade, mereka masih memiliki akses ke versi lama.
</p>

<warn>
Jika anda mendapatkan peringatan dari portage tentang hard link yang masih
tersisa, dan user-user anda dapat menulis ke partisi yang dapat mengeksekusi
file-file SUID/SGID, anda perlu membaca seksi ini dengan seksama. Salah satu
user anda mungkin mencoba untuk mengelabui update anda dengan menyimpan versi
lama dari sebuah program. Jika user anda tidak dapat menciptakan file-file
SUID-nya sendiri, atau hanya dapat mengeksekusi program dengan loader dinamik
(partisi yang di-mount dengan <c>noexec</c>, maka anda tidak perlu khawatir.
</warn>

<note>
User tidak perlu memiliki akses untuk membaca ke sebuah file untuk menciptakan
link, tetapi hanya memerlukan izin untuk membaca direktori tempat file tersebut.
</note>

<p>
Untuk memeriksa berapa banyak link yang dimiliki oleh sebuah file, anda dapat
menggunakan perintah <c>stat</c>.
</p>

<pre caption="Perintah stat">
$ stat /bin/su
  File: `/bin/su'
  Size: 29350           Blocks: 64         IO Block: 131072 regular file
Device: 900h/2304d      Inode: 2057419     Links: 1
Access: (4711/-rws--x--x)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2005-02-07 01:59:35.000000000 +0000
Modify: 2004-11-04 01:46:17.000000000 +0000
Change: 2004-11-04 01:46:17.000000000 +0000
</pre>

<p>
Untuk mencari file-file SUID/SGID yang memiliki banyak link, anda dapat
menggunakan <c>find</c>.
</p>

<pre caption="Mencari binari suid/sgid yang memiliki banyak link">
$ find / -type f \( -perm -004000 -o -perm -002000 \) -links +1 -ls
</pre>

</body>
</section>
</sections>
