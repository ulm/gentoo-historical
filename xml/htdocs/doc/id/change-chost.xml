<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Id: change-chost.xml,v 1.4 2007/12/22 11:00:07 neysx Exp $ -->

<guide link="/doc/id/change-chost.xml" lang="id">

<title>Mengganti Variabel CHOST</title>

<author title="Author">
  <mail link="amne@gentoo.org">Wernfried Haas</mail>
</author>
<author title="Reviewer">
  <mail link="vapier@gentoo.org">Mike Frysinger</mail>
</author>
<author title='"Editor"'>
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>
<author title="Translator">
  <mail link="kucrut.dz@gmail.com">Dzikri Aziz</mail>
</author>

<abstract>
Dokumen ini menjelaskan cara mengganti variabel CHOST pada sistem yang sudah
berfungsi.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>2</version>
<date>2007-07-16</date>

<chapter>
<title>Pendahuluan</title>
<section>
<body>

<p>
Mengganti variabel CHOST merupakan masalah besar dan dapat merusak sistem
anda - jadi mengapa ada panduannya?
</p>

<p>
Ada beberapa situasi yang memaksa penggantian CHOST, misalnya jika anda ingin
melakukan upgrade ke glibc-2.4 yang hanya mendukung <c>nptl</c> sedangkan
CHOST anda adalah i386 yang tidak dapat menggunakan nptl. Pada situasi ini,
anda tidak memiliki banyak pilihan, dan salah satunya adalah mengganti CHOST.
</p>

<p>
Walaupun telah mengikuti panduan ini, anda mungkin masih akan mendapatkan
masalah, jadi pastikan agar anda membaca panduan ini dan mengikutinya dengan
sangat hati-hati. Pada contoh ini, CHOST akan diganti dari i386 ke i686. Jika
penggantian CHOST anda berbeda, maka sesuaikan perintah-perintahnya.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Mengganti variabel CHOST</title>
<section>
<title>Kompilasi paket</title>
<body>

<p>
Untuk memulai penggantian CHOST, edit file <path>/etc/make.conf</path> dan
ganti nilai <b>CHOST</b> sesuai dengan kebutuhan anda. Kemudian, kompilasi
ulang paket-paket berikut secara berurutan:
</p>

<pre caption="Kompilasi ulang tool penting sistem">
# <i>emerge -av1 binutils gcc glibc</i>
</pre>

<impo>
Perlu diwaspadai bahwa melakukan upgrade major gcc bersamaan dengan penggantian
CHOST (mis. memulai dari gcc 3.3 dan CHOST i386, lalu berpindah ke gcc 4.1 dan
CHOST i686) dapat mengakibatkan beberapa efek samping. Selain anda hampir tidak
bisa melakukannya, susah sekali memperkirakan masalah apa saja yang akan timbul
untuk mendokumentasikannya di panduan ini. Sebagai konsekuensi, harap lakukan
kedua proses tersebut satu per satu, misalnya dengan meng-upgrade gcc dahulu
seperti yang dijelaskan di <uri link="/doc/id/gcc-upgrading.xml">Panduan
Upgrade GCC</uri> baru kemudian mengganti CHOST. Jika anda menggunakan sistem
dengan CHOST=i386, anda perlu me-<e>mask</e> glibc 2.4 (dan yang lebih baru)
selama proses upgrade gcc berlangsung karena glibc 2.4 tidak dapat digunakan
dengan i386, lalu <e>unmask</e> jika anda sudah selesai meng-upgrade gcc.
</impo>

</body>
</section>
<section>
<title>Memeriksa apakah semuanya baik-baik saja</title>
<body>

<p>
Sekarang saatnya untuk memastikan apakah aturan <c>gcc-config</c> dan
<c>binutils-config</c> sudah benar dan anda tidak meninggalkan sampah di
<path>/etc/env.d/</path>.
</p>

<p>
Output <c>gcc-config</c> dan <c>binutils-config</c> terlihat seperti ini
(bisa berbeda tergantung pada versi gcc dan CHOST anda, contoh ini menggunakan
gcc 4.1.1 dan i686):
</p>

<pre caption="Memeriksa apakah aturan sudah benar">
# <i>gcc-config -l</i>
 [1] i686-pc-linux-gnu-4.1.1 *
# <i>gcc-config -c</i>
i686-pc-linux-gnu-4.1.1

# <i>binutils-config -l</i>
 [1] i686-pc-linux-gnu-2.16.1 *
# <i>binutils-config -c</i>
i686-pc-linux-gnu-2.16.1
</pre>

<p>
Kemudian, periksa apakah ada referensi ke CHOST lama yang tertinggal di
<path>/etc/env.d/</path>:
</p>

<pre caption="Memeriksa referensi CHOST lama">
# <i>cd /etc/env.d/</i>
# <i>grep 386 *</i>
05gcc-i386-pc-linux-gnu:PATH="/usr/i386-pc-linux-gnu/gcc-bin/4.1.1"
05gcc-i386-pc-linux-gnu:ROOTPATH="/usr/i386-pc-linux-gnu/gcc-bin/4.1.1"
</pre>

<note>
Hal ini mungkin saja tidak terjadi pada sistem anda, tetapi pada contoh di
atas, <path>05gcc-i386-pc-linux-gnu</path> berisi referensi ke CHOST lama.
Semuanya bisa berbeda dengan sistem anda, tergantung pada CHOST baru/lama
anda, atau mungkin tidak ada masalah di sini. Nama filenya juga bisa
berbeda, yakni <path>05gcc-CHOST_baru_anda-pc-linux-gnu</path>.
</note>

<p>
Sebelum menghapus file tersebut, mari kita periksa file-file yang berisi
CHOST baru:
</p>

<pre caption="Memeriksa file-file yang berisi CHOST baru">
# <i>grep 686 *</i>
05binutils:MANPATH=/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/man
05binutils:INFOPATH=/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/info
05binutils:LDPATH=/usr/i686-pc-linux-gnu/lib
05gcc:PATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
05gcc:ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
05gcc:MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/man"
05gcc:INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/info"
05gcc:LDPATH="/usr/lib/gcc/i686-pc-linux-gnu/4.1.1"
</pre>

<p>
Output di atas kelihatannya sudah bagus karena seharusnya di dalam
<path>/etc/env.d/</path> hanya boleh ada satu file untuk <c>gcc</c> (pada
contoh ini adalah 05gcc). Sekarang mari kita hapus file yang berisi
referensi lama:
</p>

<pre caption="Menghapus file-file yang berisi referensi lama">
# <i>rm 05gcc-i386-pc-linux-gnu</i>
</pre>

<p>
Hal yang sama juga berlaku untuk <c>binutils</c> - jika ada lebih dari satu
file, lihatlah file mana yang sudah usang lalu hapus. Kemudian, periksa
<path>/etc/env.d/binutils/</path>
</p>

<pre caption="Memeriksa binutils">
# <i>cd /etc/env.d/binutils/</i>
# <i>ls -la</i>
total 8
-rw-r--r-- 1 root root  15 Sep  3 13:48 config-i686-pc-linux-gnu
-rw-r--r-- 1 root root 126 Sep  3 13:48 i686-pc-linux-gnu-2.16.1

# <i>cat config-i686-pc-linux-gnu</i>
CURRENT=2.16.1
# <i>cat i686-pc-linux-gnu-2.16.1</i>
TARGET="i686-pc-linux-gnu"
VER="2.16.1"
LIBPATH="/usr/lib/binutils/i686-pc-linux-gnu/2.16.1"
FAKE_TARGETS="i686-pc-linux-gnu"
</pre>

<p>
Output di atas kelihatannya juga sudah bagus, kedua file tersebut memang harus
ada di sana. Saatnya untuk masuk ke direktori gcc.
</p>

<pre caption="Memeriksa gcc">
# <i>cd /etc/env.d/gcc</i>
# <i>ls -la</i>
total 12
-rw-r--r-- 1 root root  32 Sep  3 16:43 config
-rw-r--r-- 1 root root  32 Aug  3 14:25 config-i386-pc-linux-gnu
-rw-r--r-- 1 root root 292 Sep  3 16:43 i686-pc-linux-gnu-4.1.1

# <i>cat config</i>
CURRENT=i686-pc-linux-gnu-4.1.1

# <i>cat config-i386-pc-linux-gnu</i>
CURRENT=i386-pc-linux-gnu-4.1.1

# <i>cat i686-pc-linux-gnu-4.1.1</i>
PATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
LDPATH="/usr/lib/gcc/i686-pc-linux-gnu/4.1.1"
GCCBITS="32"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/info"
STDCXX_INCDIR="g++-v4"
</pre>

<p>
<path>config</path> dan <path>i686-pc-linux-gnu-4.1.1</path> sudah benar,
tetapi <path>config-i386-pc-linux-gnu</path> adalah sampah yang perlu dibuang.
</p>

<note>
Lagi-lagi, nama file yang berisi referensi ke versi gcc lama di sistem anda
mungkin berbeda, mis. <path>config-i686-pc-linux-gnu</path> walaupun anda
sedang mengganti CHOST anda ke i686. Anda harus mengenali file dari isinya,
bukan hanya dari namanya.
</note>

<pre caption="Menghapus file konfigurasi gcc lama">
# <i>rm config-i386-pc-linux-gnu</i>
</pre>

<p>
Sekarang jalankan perintah-perintah berikut untuk memperbarui lingkungan anda:
</p>

<pre caption="Memperbarui lingkungan">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Kemudian periksa apakah semuanya sudah benar:
</p>

<pre caption="Memastikan apakah semua referensi ke CHOST lama sudah dihapus">
# <i>grep -r 386 /etc/env.d/</i>
</pre>

<p>
Jika anda masih menemukan sampah lain, kemungkinan anda melewatkan beberapa
file. Lacak dulu sebelum melanjutkan.
</p>

</body>
</section>
<section>
<title>Menyelesaikan Penggantian</title>
<body>

<p>
Sekarang kita perlu menginstal ulang <c>libtool</c> dan menjalankan
<c>fix_libtool_files.sh</c>. Pastikan anda menggunakan versi gcc yang benar:
(versi gcc saat ini, 4.1.1 pada contoh, dan CHOST lama, i386 pada contoh).
</p>

<pre caption="Memastikan pustaka sudah benar">
# <i>emerge -av1 libtool</i>
# <i>fix_libtool_files.sh 4.1.1 --oldarch i386-pc-linux-gnu</i>
</pre>

<p>
Anda mungkin perlu membangun ulang semua paket-paket anda:
</p>

<pre caption="Membangun ulang world">
# <i>emerge -e world</i>
</pre>

<p>
Sebenaranya secara teori, anda tidak perlu melakukannya, tetapi kami tidak
dapat menjamin bahwa inilah yang benar. Jika anda tidak membangun ulang
<c>world</c>, ada beberapa paket yang perlu anda bangun ulang, jadi anda perlu:
</p>

<pre caption="Membangun ulang python">
# <i>emerge -av1 python</i>
</pre>

<p>
Semua paket yang menggunakan <c>perl</c> diinstal ke direktori CHOST dan untuk
itu perlu anda bangun ulang. Jika anda belum memiliki <c>qfile</c>, anda
perlu menginstal <c>app-portage/portage-utils</c> terlebih dahulu.
</p>

<pre caption="Membangun ulang paket-paket perl">
# <i>emerge -av portage-utils</i>
# <i>emerge -av1 `qfile /usr/lib/perl* -Cq | sort -u`</i>
</pre>

<p>
Jika anda menemukan paket lain yang perlu dibangun ulang, harap hubungi penulis
dokumen ini.
</p>

</body>
</section>
<section>
<title>Masalah-masalah umum</title>
<body>

<p>
Ketika melakukan upgrade dari gcc 3.3 ke 4.1 bersamaan dengan mengganti CHOST
(tolong jangan lakukan), beberapa pengguna telah melaporkan paket-paket yang
rusak dan perlu dikompilasi ulang, seperti <c>groff</c> dan <c>courier</c>:
</p>

<pre caption="Pesan error">
error while loading shared libraries: libstdc++.so.5: cannot open shared object file: No such file or directory
</pre>

<p>
Hal ini terjadi karena selama proses upgrade, CHOST tidak cocok dengan CTARGET
dan <e>compiler</e> mengasumsikan kita sedang melakukan <e>cross-compiling</e>.
Akhirnya, LDPATH tidak dimasukkan ke <path>ld.so.conf</path>, yang menghasilkan
error ini.
</p>

<p>
Bacalah <uri link="/doc/id/gcc-upgrading.xml">Panduan Upgrade GCC</uri> kami
untuk mengetahui apa saja yang perlu dikompilasi ulang setelah melakukan
upgrade gcc.
</p>

<p>
Pada beberapa kasus yang jarang terjadi, masalah ini juga dapat merusak
versi-versi lama <c>python</c>. Anda dapat memperbaikinya dengan menambahkan
<path>/usr/lib/gcc-lib/i386-pc-linux-gnu/3.3.6</path> (sesuaikan dengan CHOST
dan versi gcc lama anda) ke <path>/etc/ld.so.conf</path>, menjalankan
<c>ldconfig</c> kemudian <c>emerge libstdc++-v3</c>. Namun, seperti yang sudah
dapat anda mengerti, seharusnya anda tidak perlu menghadapi masalah ini -
jangan ganti CHOST anda bersamaan dengan meng-upgrade gcc.
</p>

</body>
</section>
<section>
<title>Laporan</title>
<body>

<p>
Kiranya itu saja, kami akan menerima semua laporan (berhasil, gagal, atau
menemukan masalah lain), kirimkan email ke <mail>amne@gentoo.org</mail>
atau ke <uri link="http://forums.gentoo.org/viewtopic-t-494147.html">thread
forum ini</uri>. Kebanyakan dari panduan ini berasal dari <e>vapier</e>,
terima kasih atas bantuannya!
</p>

</body>
</section>
</chapter>
</guide>
