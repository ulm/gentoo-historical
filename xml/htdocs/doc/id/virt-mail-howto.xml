<?xml version='1.0' encoding='UTF-8'?>
<!-- $Id: virt-mail-howto.xml,v 1.4 2012/06/30 18:25:24 swift Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide disclaimer="obsolete" lang="id">
<title>Panduan Virtual Mailhosting System dengan Postfix</title>

<author title="Author">
  <mail link="antifa@gentoo.org">Ken Nowack</mail>
</author>
<author title="Author">
  <mail link="ezra@revoltltd.org">Ezra Gorman</mail>
</author>
<author title="Editor">
  <mail link="klasikahl@gentoo.org">Zack Gilburd</mail>
</author>
<author title="Editor">
  <mail link="seather@scygro.za.net">Scygro</mail>
</author>
<author title="Translator">
  <mail link="kucrut.dz@gmail.com">Dzikri Aziz</mail>
</author>

<abstract>
Dokumen ini menjelaskan cara membuat virtual mailhosting system berbasis
postfix, mysql, courier-imap, dan cyrus-sasl.
</abstract>

<version>1.5</version>
<date>2007-08-24</date>

<chapter>
<title>Pendahuluan</title>
<section>
<body>

<p>
Bagi kebanyakan pengguna gentoo, klien e-mail sederhana dan <c>fetchmail</c>
sudah cukup. Namun, jika anda menggunakan sistem anda sebagai penampung domain,
anda memerlukan MTA (Mail Transfer Agent) lengkap. dan jika anda memiliki
banyak domain, maka anda benar-benar memerlukan sesuatu yang lebih handal untuk
menangani semua e-mail untuk seluruh pengguna anda. Sistem ini dirancang untuk
menjadi solusi elegan untuk masalah tersebut.
</p>

<p>
Sebuah virtual mail system harus bisa menangani e-mail untuk banyak domain yang
memiliki banyak pengguna melalui berbagai antarmuka. Situasi ini akan
mendatangkan masalah yang harus kita selesaikan. Sebagai contoh, bagaimana jika
anda memiliki dua pengguna pada domain yang berbeda dan ingin menggunakan nama
user yang sama? Jika anda menyediakan akses imap dan smtp-auth, bagaimana cara
menggabungkan beberapa daemon otentikasi yang berbeda menjadi sebuah sistem?
Bagaimana cara menyediakan fasilitas keamanan yang dapat menjamin sistem
tersebut? Bagaimana cara mengurusnya?
</p>

<p>
Panduan ini akan menjelaskan kepada anda cara membuat sistem e-mail yang
sanggup menangani e-mail untuk sebanyak-banyaknya domain yang dapat ditangani
oleh hardware anda, dengan mendukung virtual mail user yang tidak memerlukan
akun shell, memiliki nama user khusus domain, dapat mengotentikasi klien web,
imap, smtp, dan pop3 dengan satu database tunggal, memanfaatkan lapisan
transport ssl, memiliki antarmuka web, dapat menangani milis untuk domain apa
saja yang tersedia di komputer, dan dikendalikan dengan database mysql yang
bagus, mudah, dan terpusat.
</p>

<p>
Terdapat beberapa cara untuk membuat virtual mailhosting system. Dengan
banyaknya pilihan yang tersedia, sebaiknya anda mengunjungi
<uri>http://www.qmail.org/</uri> dan <uri>http://www.exim.org/</uri> untuk
mengetahui solusi yang tepat bagi kebutuhan anda.
</p>

<p>
Paket-paket berikut ini akan kita gunakan: apache, courier-imap,
courier-authlib postfix, mod_php, phpmyadmin, squirrelmail, cyrus-sasl, mysql,
php, dan mailman.
</p>

<p>
Jangan lupa untuk mengaktifkan beberapa flag USE di <path>/etc/make.conf</path>
sebelum melakukan kompilasi: <c>USE="mysql imap libwww maildir sasl ssl"</c>.
Jika tidak, kemungkinan besar anda harus melakukan kompilasi ulang utuk
mendapatkan dukungan yang anda perlukan untuk semua protokol. Selain itu, anda
juga sebaiknya menonaktifkan variabel mail dan jaringan lain, seperti ipv6.
</p>

<impo>
Anda memerlukan nama domain untuk menjalankan public mail server, atau paling
tidak sebuah MX record untuk satu domain. Idealnya, anda harus memiliki kendali
atas paling sedikit dua domain untuk mendapatkan keutamaan dari fungsionalitas
virtual domain baru anda.
</impo>

<impo>
Pastikan agar <path>/etc/conf.d/hostname</path> telah berisi nama host yang
benar untuk server mail anda. Anda dapat menerapkan perubahan pada file ini
dengan menjalankan <c>/etc/init.d/hostname restart</c>. Periksa nama host anda
dengan menjalankan <c>hostname</c>. Periksa juga apakah masih anda konflik pada
entri di <path>/etc/hosts</path>.
</impo>

<note>
Anda dianjurkan untuk membaca seluruh dokumen ini dan mengakrabkan diri anda
dengan semua langkah yang dijelaskan di sini sebelum melakukan instalasi. Jika
anda mendapatkan masalah pada langkah apapun, bacalah bagian pemecahan masalah
pada akhir panduan. Selain itu, anda mungkin tidak memerlukan semua paket yang
dicantumkan di sini. Panduan ini cukup fleksibel. Sebagai contoh, jika anda
tidak ingin menggunakan antarmuka web, anda tidak perlu membaca bagian
squirrelmail.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Dasar-dasar Postfix</title>
<section>
<body>

<pre caption="Instalasi postfix">
# <i>emerge postfix</i>
</pre>

<warn>
Periksa kembali apakah anda tidak memiliki MTA lain seperti ssmtp, exim, atau
netqmail. Jika tidak, anda akan mendapatkan masalah BESAR.
</warn>

<p>
Setelah postfix terinstal, saatnya untuk melakukan konfigurasi. Gantilah
beberapa opsi berikut di <path>/etc/postfix/main.cf</path>. Jangan lupa untuk
mengganti <c>$variables</c> dengan nama domain anda.
</p>

<pre caption="/etc/postfix/main.cf">
myhostname = $host.domain.name
mydomain = $domain.name
inet_interfaces = all
mydestination = $myhostname, localhost.$mydomain $mydomain
mynetworks = my.ip.net.work/24, 127.0.0.0/8
home_mailbox = .maildir/
local_destination_concurrency_limit = 2
default_destination_concurrency_limit = 10
</pre>

<p>
Selanjutnya, ganti variabel di <path>/etc/postfix/master.cf</path>. Ini akan
mengaktifkan output verbose/terinci untuk melakukan debug:
</p>

<pre caption="/etc/postfix/master.cf">
# service type  private unpriv  chroot  wakeup  maxproc command + args
#               (yes)   (yes)   (yes)   (never) (50)
#
==========================================================================
<comment>(Tambahkan "-v" setelah smtpd pada baris berikut)</comment>
smtp      inet  n       -       n       -       -       smtpd -v
</pre>

<p>
Sekarang, edit <path>/etc/mail/aliases</path> untuk menambahkan alias lokal.
Paling tidak harus ada satu alias untuk root seperti:
<c>root:   your@email.address</c>.
</p>

<pre caption="Menjalankan postfix untuk pertama kali">
# <i>/usr/bin/newaliases</i>
<comment>(Perintah ini akan menginstal alias baru. Anda hanya perlu
melakukannya ketika anda memperbarui atau menginstal alias.)</comment>
		
# <i>/etc/init.d/postfix start</i>
</pre>

<p>
Setelah postfix dijalankan, luncurkan klien e-mail berbasis konsol kesukaan
anda dan kirimkan e-mail untuk diri anda sendiri. Penulis menggunakan
<c>mutt</c>. Periksa apakah postfix mengantarkan e-mail untuk pengguna lokal.
Jika berhasil, kita akan melanjutkan ke tahap berikutnya.
</p>

<note>
Penulis sangat menganjurkan anda untuk memeriksa kembali apakah semua
pengaturan dasar postfix telah berfungsi dengan sebelum melanjutkan ke
tahap berikutnya.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Courier-imap</title>
<section>
<body>

<pre caption="Instalasi courier-imap dan courier-authlib">
# <i>emerge courier-imap courier-authlib</i>
</pre>

<pre caption="Konfigurasi ourier-imap">
# <i>cd /etc/courier-imap</i>
<comment>(Jika anda ingin menggunakan kemampuan ssl dari courier-imap atau
pop3, berarti anda harus membuat sertifikat. Anda dianjurkan untuk melakukan
langkah ini. Jika anda tidak ingin menggunakan ssl, lewatkan saja.)</comment>

# <i>nano -w pop3d.cnf</i>
# <i>nano -w imapd.cnf</i>
<comment>(Sesuaikan parameter C, ST, L, CN, dan email dengan server anda.)</comment>

# <i>mkpop3dcert</i>
# <i>mkimapdcert</i>
</pre>

<pre caption="Menjalankan servis courier yang diperlukan">
# <i>/etc/init.d/courier-imapd start</i>
# <i>/etc/init.d/courier-imapd-ssl start</i>
# <i>/etc/init.d/courier-pop3d start</i>
# <i>/etc/init.d/courier-pop3d-ssl start</i>
</pre>

<p>
Luncurkan klien e-mail anda dan periksa apakah semua koneksi yang telah anda
jalankan tadi sudah bekerja dengan benar untuk penerimaan dan pengiriman
e-mail. Tentu saja anda belum bisa login ke layanan apapun karena kita belum
mengatur otentikasi, tetapi ada baiknya jika kita memeriksa koneksi terlebih
dahulu.
</p>

<p>
Setelah pengaturan dasar benar, kita akan melakukan banyak langkah sekaligus
agar sistem dapat langsung bekerja. Lagi-lagi, pastikan terlebih dahulu bahwa
semua paket yang kita instal sudah dapat berfungsi dengan baik.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Cyrus-sasl</title>
<section>
<body>

<p>
Sekarang kita akan menginstal cyrus-sasl. Sasl akan berperan sebagai pengantar
variabel otentikasi ke courier-auth, yang akan menyampaikannya ke mysql untuk
otentikasi pengguna smtp. Di sini, kita tidak akan dapat memeriksa apakah sasl
telah berfungsi dengan benar sebelum kita mengatur mysql dan menambahkan user
percobaan. Anda tidak perlu khawatir, karena pada akahirnya kita akan melakukan
otentikasi dengan mysql.
</p>

<pre caption="Instalasi dan konfigurasi cyrus-sasl">
# <i>emerge cyrus-sasl</i>
</pre>

<p>
Selajutnya, edit <path>/etc/sasl2/smtpd.conf</path>.
</p>

<pre caption="Menjalankan sasl">
# <i>nano -w /etc/sasl2/smtpd.conf</i>
mech_list: PLAIN LOGIN
pwcheck_method: saslauthd
# <i>nano -w /etc/conf.d/saslauthd</i>
SASLAUTHD_OPTS="${SASLAUTH_MECH} -a rimap -r"
SASLAUTHD_OPTS="${SASLAUTHD_OPTS} -O localhost"
# <i>/etc/init.d/saslauthd start</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Sertifikat SSL untuk Postfix dan Apache</title>
<section>
<body>

<p>
Sekarang kita akan membuat sejumlah sertifikat untuk postfix dan apache.
</p>

<pre caption="Pembuatan sertifikat ssl">
# <i>cd /etc/ssl/</i>
# <i>nano -w openssl.cnf</i>

<comment>Ganti beberapa nilai default berikut untuk domain anda:</comment>
countryName_default
stateOrProvinceName_default
localityName_default
0.organizationName_default
commonName_default
emailAddress_default.

<comment>(Jika anda tidak menemukan variabel-variabel tersebut, tambahkan saja di tempat yang sesuai.)</comment>

# <i>cd misc</i>
# <i>./CA.pl -newreq-nodes</i>
# <i>./CA.pl -newca</i>
# <i>./CA.pl -sign</i>
# <i>cp newcert.pem /etc/postfix</i>
# <i>cp newkey.pem /etc/postfix</i>
# <i>cp demoCA/cacert.pem /etc/postfix</i>
<comment>(Sekarang kita ulangi langkah tadi untuk apache.)</comment>

# <i>openssl req -new > new.cert.csr</i>
# <i>openssl rsa -in privkey.pem -out new.cert.key</i>
# <i>openssl x509 -in new.cert.csr -out new.cert.cert -req -signkey new.cert.key -days 365</i>
<comment>(Untuk sementara biarkan saja sertifikat ini. Kita akan menginstalnya setelah menginstal Apache.)</comment>
</pre>

</body>
</section>

</chapter>
<chapter>
<title>Menambahkan dukungan SSL dan SASL untuk Postfix</title>
<section>
<body>

<p>
Sekarang edit konfigurasi postfix agar postfix mengetahui kemampuan barunya
akan sasl dan ssl. Tambahkan beberapa parameter berikut di akhir file agar
lebih mudah ditemukan.
</p>

<pre caption="/etc/postfix/main.cf">
# <i>nano -w /etc/postfix/main.cf</i>

smtpd_sasl_auth_enable = yes
smtpd_sasl2_auth_enable = yes
smtpd_sasl_security_options = noanonymous
broken_sasl_auth_clients = yes
smtpd_sasl_local_domain =

<comment>(Opsi "broken_sasl_auth_clients" dan metode otentikasi login hanya
diperuntukkan bagi outlook dan outlook express, dan tidak didokumentasikan.
Tidakkah baik jika kita meng-hack software M$ yang rusak dan bodoh?
"smtpd_sasl_local_domain" menambahkan nama domain ke klien dengan smtp-auth.
Pastikan agar variabel ini kosong, karena jika tidak, nama user anda akan
dirubah oleh postfix dan anda tidak dapat melakukan otentikasi.)</comment>

smtpd_recipient_restrictions =
	permit_sasl_authenticated,
	permit_mynetworks,
	reject_unauth_destination

<comment>(Dua opsi berikut ini digunakan untuk mengaktifkan enkripsi keluar.)</comment>

smtp_use_tls = yes
smtp_tls_note_starttls_offer = yes
smtpd_use_tls = yes
#smtpd_tls_auth_only = yes
smtpd_tls_key_file = /etc/postfix/newkey.pem
smtpd_tls_cert_file = /etc/postfix/newcert.pem
smtpd_tls_CAfile = /etc/postfix/cacert.pem
smtpd_tls_loglevel = 3
smtpd_tls_received_header = yes
smtpd_tls_session_cache_timeout = 3600s
tls_random_source = dev:/dev/urandom

<comment>("smtpd_tls_auth_only" diberi tanda komentar untuk memudahkan proses pengujian.
Anda dapat mengaktifkannya nanti jika anda mau.)</comment>

# <i>postfix reload</i>
</pre>

<p>
Sekarang kita akan memeriksa apakah konfigurasi kita telah diterapkan oleh
postfix. Untuk ini kita akan menggunakan <c>telnet</c> (yang disediakan oleh
<c>net-misc/netkit-telnetd</c>), namun anda juga bisa menggunakan <c>nc</c>
(yang disediakan oleh <c>net-analyzer/netcat</c>):
</p>



<pre caption="Memeriksa dukungan sasl dan tls">
# <i>telnet localhost 25</i>

Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
220 mail.domain.com ESMTP Postfix
<i>EHLO domain.com</i>
250-mail.domain.com
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-STARTTLS
250-AUTH LOGIN PLAIN
250-AUTH=LOGIN PLAIN
250-XVERP
250 8BITMIME
<i>^]</i>
telnet> <i>quit</i>
</pre>

<p>
Perhatikan apakah baris AUTH dan STARTTLS ditampilkan pada instalasi postfix
anda. Seperti yang telah penulis katakan sebelumnya, untuk saat ini AUTH belum
dapat digunakan karena sasl akan mencoba melakukan otentikasi dengan sasldb
yang belum kita atur, bukan dengan file shadow (karena alasan yang tidak
diketahui). Untuk itu, sekarang kita akan mengkonfigurasi mysql yang akan
menyimpan informasi otentikasi dan virtual domain kita.
</p>

</body>
</section>
</chapter>

<chapter>
<title>User vmail</title>
<section>
<body>

<p>
Sebelum menyiapkan lingkungan mailhosting virtual, kita perlu membuat akun user
yang akan kita gunakan untuk menampung mailbox virtual. Untuk kemudahan, kita
akan menggunakan nama <e>vmail</e> untuk user ini.
</p>

<pre caption="Membuat akun user vmail">
# <i>adduser -d /home/vmail -s /bin/false -m vmail</i>
</pre>

<p>
Sekarang akun user vmail sudah tersedia. Anda boleh membuat banyak akun jika
ingin (untuk memelihara struktur pada beberapa kumpulan akun vmail anda). ID
user, grup, dan direktori <e>home</e> direferensikan pada table MySQL.
</p>

<p>
Selanjutnya kita perlu membuat lokasi tempat kita menyimpan mailbox:
</p>

<pre caption="Menciptakan mailbox">
# <i>mkdir -p /home/vmail/virt-domain.com/foo</i>
# <i>chown -R vmail:vmail /home/vmail/virt-domain.com</i>
# <i>maildirmake /home/vmail/virt-domain.com/foo/.maildir</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>MySQL</title>
<section>
<body>

<p>
Sekarang kita akan menginstal dan mengkonfigurasi MySQL. Anda memerlukan
file <uri
link="http://www.gentoo.org/doc/en/files/genericmailsql.sql">genericmailsql.sql</uri>
untuk menyelesaikan tahap ini.
</p>

<pre caption="Instalasi dan konfigurasi MySQL">
# <i>emerge mysql</i>

# <i>/usr/bin/mysql_install_db</i>
<comment>(Setelah perintah di atas dijalankan, ikuti petunjuk di layar untuk
menetapkan password root mysql, ika tidak, database anda akan terbuka untuk umum.)</comment>

# <i>/etc/init.d/mysql start</i>
# <i>mysqladmin -u root -p create mailsql</i>
# <i>mysql -u root -p mailsql &lt; genericmailsql.sql</i>

# <i>mysql -u root -p mysql</i>
mysql> <i>GRANT SELECT,INSERT,UPDATE,DELETE</i>
	->     <i>ON mailsql.*</i>
	->     <i>TO mailsql@localhost</i>
	->     <i>IDENTIFIED BY '$password';</i>
Query OK, 0 rows affected (0.02 sec)

mysql> <i>FLUSH PRIVILEGES;</i>
Query OK, 0 rows affected (0.00 sec)

mysql> <i>quit</i>
<comment>(Periksa apakah user mailsql dapat melakukan koneksi ke server mysql.)</comment>

# <i>mysql -u mailsql -p mailsql</i>
</pre>

<p>
Database baru anda sudah memiliki nilai default dan tabel untuk dua domain.
Berikut ini adalah dua tabel yang dimilikinya:
</p>

<ul>
  <li>alias - alias e-mail lokal dan informasi alias mailman</li>
  <li>relocated - pemetaan alamat e-mail penguna yang telah direlokasikan</li>
  <li>
    transport - informasi transport e-mail default untuk semua domain anda
  </li>
  <li>users - informasi semua akun pengguna</li>
  <li>virtual - pemetaan alias e-mail virtual domain</li>
</ul>

<pre caption="Contoh tabel alias">
id   alias    destination
1    root     foo@bar.com
2  postmaster foo@bar.com
</pre>

<pre caption="Contoh tabel user">
<comment>(Baris dipotong agar lebih mudah dibaca.)</comment>
id email            clear     name     uid     gid     homedir     \
	maildir                                quota  postfix
10 foo@virt-domain.com $password realname virtid  virtid  /home/vmail \
       /home/vmail/virt-domain.com/foo/.maildir/        y
13 foo@bar.com      $password realname localid localid /home/foo   \
	/home/foo/.maildir/                           y
</pre>

<p>
Nilai uid dan gid <c>virtid</c> harus berasal dari user dan grup <c>vmail</c>.
</p>

<pre caption="Contoh tabel transport">
id   domain           destination
1    bar.com          local:
2    virt-domain.com  virtual:
</pre>

<pre caption="Contoh tabel virtual">
id   email                destination
3   root@virt-domain.com  other@email.address
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Apache dan phpMyAdmin</title>
<section>
<body>

<p>
Sekarang kita akan mengatur apache dan menambahkan sebuah antarmuka untuk
mempermudah interaksi dengan database.
</p>

<pre caption="Instalasi apache dan phpmyadmin">
# <i>emerge apache phpmyadmin</i>
</pre>

<p>
Ada banyak panduan yang tersedia tentang cara menambahkan dukungan php untuk
apache, seperti <uri>link="/proj/en/php/">Proyek PHP Gentoo</uri>. Selain itu,
beberapa topik di <uri>http://forums.gentoo.org</uri> membahas cara mengatasi
masalah pada proses instalasi. Untuk itu, kita tidak akan membahasnya di sini.
Konfigurasikan apache dan php, lalu lanjutkan sisa panduan ini. Satu petunjuk:
gunakan <path>.htaccess</path> pada direktori tempat anda menginstal
phpmyadmin. Jika anda tidak meletakkannya di sana, halaman index anda akan
dapat dijamah oleh laba-laba mesin pencarian internet sehingga semua orang
dapat membuka halaman phpmyadmin anda dengan google dan dapat membuat
perubahan pada database anda, yang merupakan situasi <b>BURUK!</b> Ada beberapa
panduan tentang hal ini, salah satunya adalah:
<uri>http://www.csoft.net/docs/micro/htaccess.html.en</uri>.
</p>

<p>
Sekarang kita akan menginstal sertifikat Apache yang telah kita buat
sebelumnya. Direktif Apache-SSL yang harus anda gunakan adalah:
</p>

<ul>
  <li>SSLCertificateFile /path/to/certs/new.cert.cert</li>
  <li>SSLCertificateKeyFile /path/to/certs/new.cert.key</li>
</ul>

<pre caption="Instalasi sertifikat SSL Apache">
# <i>cp /etc/ssl/misc/new.cert.cert /etc/apache2/ssl/</i>
# <i>cp /etc/ssl/misc/new.cert.key /etc/apache2/ssl/</i>
# <i>cd /etc/apache2/vhosts.d</i>
<comment>(Periksa apakah anda sudah memiliki template ssl-vhost. Salin template
yang telah tersedia jika anda menemukannya.)</comment>
# <i>cp 00_default_vhost.conf ssl-vhost.conf</i>
# <i>nano -w ssl-vhost.conf</i>

<comment>(Ganti beberapa parameter berikut)</comment>
NameVirtualHost host.domain.name:443

&lt;VirtualHost host.domain.name:443&gt;
  ServerName host.domain.name
  ServerAdmin your@email.address

  DocumentRoot "/var/www/localhost/htdocs/phpmyadmin";
  &lt;Directory "/var/www/localhost/htdocs/phpmyadmin"&gt;
    ...
  &lt;/Directory&gt;

  SSLCertificateFile /etc/apache2/ssl/new.cert.cert
  SSLCertificateKeyFile /etc/apache2/ssl/new.cert.key
  SSLEngine on
  ...
&lt;/VirtualHost&gt;

# <i>nano -w /etc/conf.d/apache2</i>
<comment>(Tambahkan -D SSL -D PHP5 di APACHE2_OPTS)</comment>

# <i>/etc/init.d/apache2 restart</i>
</pre>

<p>
Selanjutnya, konfigurasikan phpMyAdmin.
</p>

<pre caption="Konfigurasi phpMyAdmin">
# <i>cd /var/www/localhost/htdocs/phpmyadmin</i>
# <i>cp config.sample.inc.php config.inc.php</i>
# <i>nano -w config.inc.php</i>
<comment>(Ganti beberapa parameter berikut.)</comment>
$cfg['blowfish_secret'] = 'someverysecretpassphraze';

$cfg['Servers'][$i]['host'] = 'localhost';          // MySQL hostname
$cfg['Servers'][$i]['controluser'] = 'mailsql';     // MySQL control user settings
                                                    // (this user must have read-only
$cfg['Servers'][$i]['controlpass'] = '$password';   // access to the "mysql/user"
                                                    // and "mysql/db" tables)
$cfg['Servers'][$i]['user'] = 'mailsql';            // MySQL user
$cfg['Servers'][$i]['password'] = '$password';      // MySQL password
</pre>

<p>
Sekarang masuklah ke halaman phpmyadmin dan jelajahi tabel yang tersedia. Anda
perlu menambahkan alias-alias lokal anda, mengedit tabel user dan menambahkan
user percobaan, serta merubah tabel transport untuk menambahkan informasi
tentang domain anda. Bilai-nilai default yang disediakan oleh dumpfile sudah
cukup untuk memberi petunjuk tentang nilai-nilai yang harus anda isikan di
sini. Pastikan juga agar informasi yang anda tambahkan di dalam database sudah
akurat. Sebagai contoh, pastikan agar direktori home user lokal sudah tersedia
dan nilai uid dan gid sudah benar. Maildir seharusnya akan langsung diciptakan
oleh postfix ketika seorang pengguna mendapatkan e-mail pertamanya. Jadi,
secara umum, anda sebaiknya mengirimkan e-mail "Selamat Datang" kepada pengguna
baru setelah anda mengatur akunnya untuk memastikan agar <path>.maildir</path>
diciptakan.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Konfigurasi otentikasi MySQL dan vhost</title>
<section>
<body>

<p>
Sekarang kita akan mengkonfigurasi-ulang otentikasi untuk menggunakan database
mailsql di courier-imap dan postfix. Pada semua contoh berikut, gantikan
<c>$password</c> dengan password yang anda tetapkan untuk user mailsql.
</p>

<pre caption="Pengaturan otentikasi">
# <i>nano -w /etc/courier/authlib/authdaemonrc</i>
authmodulelist="authmysql authpam"

# <i>nano -w /etc/courier/authlib/authmysqlrc</i>
MYSQL_SERVER            localhost
MYSQL_USERNAME       mailsql
MYSQL_PASSWORD      $password
MYSQL_DATABASE          mailsql
MYSQL_USER_TABLE        users

<comment>(Pastikan agar baris berikut diberi tanda komentar, karena kita akan
menggunakan teks biasa.)</comment>

#MYSQL_CRYPT_PWFIELD    crypt
MYSQL_CLEAR_PWFIELD     clear
MYSQL_UID_FIELD         uid
MYSQL_GID_FIELD         gid
MYSQL_LOGIN_FIELD       email
MYSQL_HOME_FIELD        homedir
MYSQL_NAME_FIELD        name
MYSQL_MAILDIR_FIELD     maildir

# <i>/etc/init.d/courier-authlib restart</i>
# <i>/etc/init.d/saslauthd restart</i>
</pre>

<p>
Kita hampir selesai, sumpeh! Sekarang, atur beberapa sisa konfigurasi untuk
postfix agar dapat berinteraksi dengan database untuk semua kebutuhan
transportnya. Jangan lupa untuk menyesuaikan setiap nilai dengan nama user, id,
password, alias alamat email, dll.
</p>

<pre caption="/etc/postfix/mysql-aliases.cf">
# <i>nano -w /etc/postfix/mysql-aliases.cf</i>
# mysql-aliases.cf

user         	= mailsql
password     	= $password
dbname       	= mailsql
table        	= alias
select_field 	= destination
where_field  	= alias
hosts        	= unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-relocated.cf">
# <i>nano -w /etc/postfix/mysql-relocated.cf</i>
# mysql-relocated.cf

user         	= mailsql
password     	= $password
dbname       	= mailsql
table        	= relocated
select_field 	= destination
where_field  	= email
hosts        	= unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-transport.cf (opsional)">
# <i>nano -w /etc/postfix/mysql-transport.cf</i>		
# mysql-transport.cf

user         	= mailsql
password     	= $password
dbname       	= mailsql
table        	= transport
select_field 	= destination
where_field  	= domain
hosts        	= unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-gid.cf (opsional)">
# <i>nano -w /etc/postfix/mysql-virtual-gid.cf</i>
#myql-virtual-gid.cf

user          	= mailsql
password        = $password
dbname        	= mailsql
table           = users
select_field    = gid
where_field     = email
additional_conditions = and postfix = 'y'
hosts         	= unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-maps.cf">
# <i>nano -w /etc/postfix/mysql-virtual-maps.cf</i>
# myql-virtual-maps.cf

user        	= mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = maildir
where_field   	= email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual-uid.cf (opsional)">
# <i>nano -w /etc/postfix/mysql-virtual-uid.cf</i>
# mysql-virtual-uid.cf

user            = mailsql
password        = $password
dbname          = mailsql
table           = users
select_field    = uid
where_field    	= email
additional_conditions = and postfix = 'y'
hosts           = unix:/var/run/mysqld/mysqld.sock
</pre>

<pre caption="/etc/postfix/mysql-virtual.cf">
# <i>nano -w /etc/postfix/mysql-virtual.cf</i>
# mysql-virtual.cf

user         	= mailsql
password     	= $password
dbname       	= mailsql
table        	= virtual
select_field 	= destination
where_field  	= email
hosts        	= unix:/var/run/mysqld/mysqld.sock
</pre>

<p>
Terakhir, edit <path>/etc/postfix/main.cf</path> sekali lagi.
</p>

<pre caption="/etc/postfix/main.cf">
<comment>(Pastikan bahwa anda tidak memiliki alias_maps definitions lain)</comment>
# <i>nano -w /etc/postfix/main.cf</i>
alias_maps = mysql:/etc/postfix/mysql-aliases.cf
relocated_maps = mysql:/etc/postfix/mysql-relocated.cf

local_transport = local
local_recipient_maps = $alias_maps $virtual_mailbox_maps unix:passwd.byname

virtual_transport = virtual
<comment>(Domain yang dicantumkan oleh mydestination tidak boleh tercantum di
parameter virtual_mailbox_domains)</comment>
virtual_mailbox_domains = virt-domain.com, $other-virtual-domain.com

virtual_minimum_uid = 1000
<comment>(Gantikan $vmail-gid dengan GID grup vmail)</comment>
virtual_gid_maps = static:$vmail-gid
virtual_mailbox_maps = mysql:/etc/postfix/mysql-virtual-maps.cf
virtual_alias_maps = mysql:/etc/postfix/mysql-virtual.cf
<comment>(Gantikan $vmail-uid dengan UID user vmail)</comment>
virtual_uid_maps = static:$vmail-uid
virtual_mailbox_base = /
#virtual_mailbox_limit =
</pre>

<p>
Demi keamanan, anda harus merubah perizinan beberapa
<path>/etc/mail/mysql-*.cf</path>:
</p>

<pre caption="Merubah perizinan file">
# <i>chmod 640 /etc/postfix/mysql-*.cf</i>
# <i>chgrp postfix /etc/postfix/mysql-*.cf</i>
</pre>

<p>
Sejak Postfix 2.0.x, ada beberapa perubahan besar dari rilis 1.1.x seperti
tidak diperlukannya lagi tabel transport, virtual-gid, dan virtual-uid.
Tabel-tabel ini masih disediakan jika anda ingin menggunakannya.
</p>

<note>
Anda sebaiknya membaca file VIRTUAL_README yang disediakan pada dokumentasi
postfix untuk mendapatkan informasi tambahan.
</note>

<pre caption="Memuat ulang tabel postfix">
# <i>postfix reload</i>
</pre>

<p>
Jika semuanya berjalan dengan lancar, seharusnya mailhost anda sudah berfungsi.
Pengguna anda seharusnya sudah bisa melakukan otentikasi pada database mysql
dengan menggunakan alamat e-mail-nya, untuk pop3, imap, dan smtp. Penulis
sangat menyarankan anda untuk memeriksa kembali apakah semua sudah berfungsi
dengan benar. Jika anda mendapatkan masalah (pada berbagai langkah), bacalah
bagian pemecahan masalah.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Squirrelmail</title>
<section>
<body>

<pre caption="Instalasi squirrelmail">
# <i>emerge squirrelmail</i>
<comment>(Instal squirrelmail di localhost agar dapat diakses dengan http://localhost/mail)
(Gantikan 1.4.3a-r2 dengan versi yang anda gunakan)</comment>

# <i>webapp-config -I -h localhost -d /mail squirrelmail 1.4.3a-r2</i>
# <i>cd /var/www/localhost/htdocs/mail/config</i>
# <i>perl ./conf.pl</i>
<comment>(Sesuaikan pengaturan Organization, Server, dan Folder untuk squirrelmail.
Sekarang anda sudah bisa login ke squirrelmail dengan alamat lengkap e-mail anda, dan gunakan webmail baru anda.)</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Mailman</title>
<section>
<body>

<p>
Langkah terakhir: mailman. Mailman versi terbaru memiliki dukungan virtual
domain yang bagus. Inilah alasan mengapa penulis menggunakannya, selain karena
paket ini sangat bagus. Untuk menginstal dan mengkonfigurasinya dengan virtual
domain, anda harus melakukan sedikit <e>hacking</e>. Penulis sangat menyarankan
anda untuk membaca seluruh dokumentasi mailman, termasuk
<path>README.POSTFIX.gz</path>, agar anda mengerti apa yang akan kita lakukan
di sini.
</p>

<pre caption="Instalasi mailman">
# <i>emerge mailman</i>
</pre>

<pre caption="Pengaturan default: Mailman/Defaults.py">
# <i> nano -w /usr/mailman/Mailman/Defaults.py</i>
<comment>(Ganti beberapa nilai berikut ini agar sesuai dengan domain primari
anda, domain virtual akan kita atur nanti.)</comment>
DEFAULT_EMAIL_HOST = 'domain.com'
DEFAULT_URL_HOST = 'www.domain.com'
</pre>

<pre caption="Konfigurasi mailman: mm_cfg.py">
# <i>nano -w /var/mailman/Mailman/mm_cfg.py</i>
MTA = "Postfix"
POSTFIX_STYLE_VIRTUAL_DOMAINS = ['virt-domain.com', 'virt.domain2.com']	
add_virtualhost('www.virt.domain.com', 'virt.domain.com')
add_virtualhost('www.virt.domain2.com', 'virt.domain2.com')
<comment>(Ini diperlukan untuk virtual domain anda agar mailman dapat berfungsi.)</comment>
</pre>

<pre caption="Terakhir">
<comment>(Setelah selesai, tambahkan milis pertama anda.)</comment>

# <i>su mailman</i>
# <i>cd ~</i>
# <i>./bin/newlist --urlhost='www.virt-domain.com' --emailhost='virt-domain.com' test</i>
Enter the email of the person running the list: <i>your@email.address</i>
Initial test password:
Hit enter to continue with test owner notification...
<comment>(Daftar virtual domain juga dapat ditentukan dengan nama seperti
list@domain.com)</comment>
# <i>./bin/genaliases</i>
<comment>(Setelah alias diciptakan, periksa apakah alias ini telah ditambahkan.)</comment>

# <i>nano -w data/aliases</i>
# STANZA START: test
# CREATED:
test:             "|/usr/local/mailman/mail/mailman post test"
test-admin:       "|/usr/local/mailman/mail/mailman admin test"
test-bounces:     "|/usr/local/mailman/mail/mailman bounces test"
test-confirm:     "|/usr/local/mailman/mail/mailman confirm test"
test-join:        "|/usr/local/mailman/mail/mailman join test"
test-leave:       "|/usr/local/mailman/mail/mailman leave test"
test-owner:       "|/usr/local/mailman/mail/mailman owner test"
test-request:     "|/usr/local/mailman/mail/mailman request test"
test-subscribe:   "|/usr/local/mailman/mail/mailman subscribe test"
test-unsubscribe: "|/usr/local/mailman/mail/mailman unsubscribe test"
# STANZA END: test

<i>./bin/newlist mailman</i>
# <i>./bin/genaliases</i>

<comment>(Kembali ke user root)</comment>
# <i>exit</i>

# <i>/etc/init.d/mailman start</i>
# <i>rc-update add mailman default</i>
<comment>(Untuk menjalankan mailman sekarang dan setiap boot.)</comment>
</pre>

<pre caption="Menambahkan dukungan alias mailman di postfix">
# <i>nano -w /etc/postfix/main.cf</i>
owner_request_special = no
recipient_delimiter = +
<comment>(Bacalah README.POSTFIX.gz untuk mendapatkan petunjuk dalam masalah ini.)</comment>

alias_maps     =
	hash:/usr/mailman/data/aliases,
	mysql:/etc/postfix/mysql-aliases.cf

virtual_alias_maps =
	hash:/usr/mailman/data/virtual-mailman,
	mysql:/etc/postfix/mysql-virtual.cf
<comment>(Ini akan menambahkan dukungan file alias mailman di postfix. Tentu
saja anda dapat menggunakan tabel mysql untuk tujuan ini, tetapi penulis tidak
suka melakukannya sendiri. Selain itu, jika anda tidak menggunakan virtual
domain, menambahkan pemetaan alias virtual di postfix akan mendatangkan masalah,
berhati-hatilah!)</comment>
</pre>

<p>
Sekarang seharusnya anda sudah bisa membuat milis baru untuk setiap domain
anda. Sebagai catatan akhir, pastikan anda menjalankan semua perintah mailman
sebagai user mailman (<c>su mailman</c>), karena jika tidak, perizinan anda
akan menjadi tidak beraturan dan anda harus memperbaikinya. Bacalah dokumentasi
mailman untuk mendapatkan informasi tentang cara mengatur milis mailman.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Penyaringan isi dan Anti-Virus</title>
<section>
<body>

<p>
Untuk penyaringan isi dan Anti-Virus, bacalah <uri
link="/doc/id/mailfilter-guide.xml">Panduan Gateway Penyaring E-mail</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Penyelesaian Akhir</title>
<section>
<body>

<p>
Ok, anda sudah selesai. Sekarang edit <path>/etc/postfix/master.cf</path> untuk
menonaktifkan modus verbose. Anda mungkin juga ingin menambahkan servis-servis
yang telah kita konfigurasikan tadi ke runlevel default agar dijalankan ketika
boot. Jangan lupa untuk menambahkan semua servis yang anda gunakan - apache,
mysql, saslauthd, postfix, courier-imapd, courier-imapd-ssl, courier-pop3d, dan
courier-pop3d-ssl, semuanya tergantung pada akses yang anda sediakan. Secara
umum, penulis mengaktifkan semua servis di atas.
</p>

<pre caption="Penyelesaian akhir">
# <i>postfix reload</i>
# <i>rc-update add $service default</i>
</pre>

<p>
<b>Selamat!</b>
</p>

</body>
</section>
</chapter>

<chapter>
<title>Pemecahan Masalah</title>
<section>
<title>Pendahuluan</title>
<body>

<p>
Pemecahan Masalah: Berikut ini adalah panduan singkat tentang cara pemecahan
masalah yang mungkin timbul ketika kita melakukan instalasi yang dijelaskan di
sini. Panduan ini tidak terlalu rinci, tetapi dirancang untuk menjadi tempat
pertama ketika anda mencari cara pemecahan dari masalah yang anda hadapi.
Dengan menjalankan instalasi dan konfigurasi yang rumit seperti di atas,
kemungkinan besar anda akan mendapatkan masalah pada beberapa komponen. Secara
umum, penulis melakukannya dengan beberapa tahapan. Memulai dari dasar sistem
sampai ke cabang-cabangnya, dengan memeriksa setiap komponen komponen yang
bermasalah ditemukan.
</p>

</body>
</section>
<section>
<title>Tahap 1: Pemeriksaan file konfigurasi</title>
<body>

<p>
Kesalahan ketik sangatlah buruk, terutama ketika kita sedang mengatur sistem
berotentikasi. Periksalah setiap file konfigurasi dan database mysql anda. Anda
dapat melakukan debug jika ingin, tetapi jika anda tidak memberikan informasi
yang tepat kepada sistem e-mail anda, proses debug tidak akan berhasil. Jika
anda membuat perubahan pada sebuah file konfigurasi dari satu servis, jangan
lupa untuk me-restart servis tersebut agar perubahan anda diterapkan.
</p>

<pre caption="Cara me-restart servis">
# <i>/etc/init.d/service restart</i>
</pre>

</body>
</section>
<section>
<title>Tahap 2: Apakah semua servis sudah benar-benar dijalankan?</title>
<body>

<p>
Jika ternyata belum dijalankan, maka jalankanlah. Proses debug pada sebuah
servis akan sangat sulit dilakukan jika ternyata servis tersebut belum
dijalankan. Terkadang, sebuah servis kelihatannya sedang berjalan tetapi tidak
berfungsi. Pada situasi lainnya, ketika ada file konfigurasi rusak yang
digunakan, atau ada transmisi jelek yang datang ke sebuah komponen e-mail,
servis tersebut akan terkatung-katung dan tidak mengizinkan suatu port untuk
digunakan oleh proses lain. Biasanya anda dapat mendeteksi masalah ini dengan
<c>netstat</c>. Atau, jika anda sudah terlalu lama berkutat dengan panduan ini,
istirahatlah sebentar sambil me-reboot komputer anda. Cara ini akan
menghentikan semua servis yang terkatung-katung tadi. Setelah itu anda boleh
kembali melanjutkan.
</p>

<pre caption="Pemeriksaan status servis">
# <i>/etc/init.d/$service status</i>
# <i>netstat -a | grep $service (or $port)</i>
</pre>

</body>
</section>
<section>
<title>Tahap 3: Apakah semua servis sudah menggunakan konfigurasi baru?</title>
<body>

<p>
Jika anda baru saja membuat perubahan pada sebuah file konfigurasi, anda harus
me-restart servis yang bersangkutan agar perubahan tersebut diterapkan.
Beberapa komponen akan menampilkan konfigurasinya saat ini kepada anda, seperti
postfix.
</p>

<pre caption="Servis-servis yang dapat menampilkan konfigurasinya">
# <i>apache2ctl fullstatus</i> (memerlukan lynx)
# <i>apache2ctl configtest</i> (memeriksa konfigurasi)
# <i>postconf -n</i> (akan memberitahukan anda semua konfigurasi yang digunakan oleh postfix)
# <i>/etc/init.d/$service restart</i>
</pre>

</body>
</section>
<section>
<title>Tahap 4: Memeriksa log</title>
<body>

<p>
Ikuti penulis: <b>"Log adalah sahabatku!"</b> Tahap selanjutnya adalah
pemeriksaan log. Terkadang anda akan sangat terbantu dengan cara mengulangi
proses yang gagal dan kemudian memeriksa log-nya agar semua pesan error
dicantumkan pada akhir log (atau di awalnya, tergantung logger anda). Periksa
apakah ada informasi di log anda yang dapat membantu pencarian masalah, atau
paling tidak, carilah komponen yang bermasalah.
</p>

<pre caption="Pemeriksaan log">
# <i>kill -USR1 `ps -C metalog -o pid=`</i>(to turn off metalog buffering)
# <i>nano -w /var/log/mail/current</i>
# <i>cat /var/log/mysql/mysql.log</i>
# <i>tail /var/log/apache2/error_log</i>
</pre>

<p>
Anda juga mungkin dapat memanfaatkan parameter <c>debug_peer</c> di
<path>main.cf</path>. Dengan menggunakannya, anda bisa mendapatkan ouput log
yang lebih terinci daripada output dari modus verbose.
</p>

<pre caption="Menambahkan dukungan debug_peer">
# <i>nano -w /etc/postfix/main.cf</i>
debug_peer_level = 5
debug_peer_list = $host.domain.name
<comment>(Hapus juga tanda komentar dari salah satu perintah debug.)</comment>
</pre>

</body>
</section>
<section>
<title>Tahap 5: Berbicaralah dengan servis</title>
<body>

<p>
SMTP, IMAP, dan POP3, semuanya merespon sesi telnet, seperti yang telah kita
lihat sebelumnya ketika ketika memeriksa konfigurasi postfix. Membuka sesi
telnet untuk suatu servis terkadang akan sangat membantu kita untuk melihat apa
saja yang sebenarnya sedang terjadi.
</p>

<pre caption="Membuka sesi telnet untuk suatu servis">
# <i>telnet localhost $port</i>
<comment>(Port SMTP adalah 25, IMAP adalah 143, dan POP3 adalah 110. Anda
seharusnya paling tidak mendapatkan kata OK, sehingga anda dapat mengetahui
bahwa servis tersebut sedang berjalan dan siap untuk merespon permintaan.)</comment>

Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
* OK Courier-IMAP ready. Copyright 1998-2002 Double Precision, Inc.
</pre>

</body>
</section>
<section>
<title>
  Tahap 6: Terkadang hanya senjata besar yang bisa memberikan informasi yang
  anda perlukan: strace
</title>
<body>

<p>
Seharusnya anda sudah menginstalnya. Utilitas ini adalah utilitas tak ternilai
untuk men-debug software. Anda dapat menjalankan sebuah perintah dari baris
perintah dengan strace dan memperhatikan semua pemanggilan sistem yang
dijalankan. Terkadang strace memberikan banyak sekali informasi, jadi anda
harus memperhatikannya secara langsung ketika anda mencoba menjalankan kembali
transaksi yang gagal dari sistem e-mail, atau menumpahkan semua informasi
tersebut ke sebuah file untuk dibaca nanti.
</p>

<pre caption="Menggunakan strace">
# <i>emerge strace</i>
# <i>strace $command</i>
# <i>strace -p `ps -C $service -o pid=`</i>
</pre>

</body>
</section>
<section>
<title>Tahap 7: Riset</title>
<body>

<p>
Setelah anda mendapatkan informasi yang anda perlukan, jika anda sudah dapat
mengatasi masalah anda, selamat! Jika belum, anda mungkin harus menggali
informasi yang dapat membantu anda dari internet. Berikut ini adalah beberapa
website yang mungkin perlu anda kunjungi untuk mengetahui apakah masalah anda
sudah diketahui dan pemecahannya sudah tersedia. Terdapat juga beberapa panduan
yang bagus tentang cara mengkonfigurasi smtp-auth yang juga berisi cara-cara
melakukan debug.
</p>

<ul>
  <li>
  <uri>
    http://forums.gentoo.org/</uri> - Forum bagus untuk para pengguna gentoo
  </li>
  <li>
    <uri>http://bugs.gentoo.org/</uri> - Database bug untuk gentoo - tempat
    yang bagus untuk mencari error tertentu
  </li>
  <li><uri>http://postfix.state-of-mind.de/</uri> - Panduan smtp-auth</li>
  <li>
    <uri>http://marc.theaimsgroup.com/?l=postfix-users</uri> - Milis Postfix
    dengan dukungan pencarian
  </li>
  <li>
    <uri>http://sourceforge.net/mailarchive/forum.php?forum_id=6705</uri> -
    Arsip milis courier-imap - tanpa dukungan pencarian
  </li>
  <li>
    <uri>http://www.google.com/</uri> - Jika anda masih belum menemukannya,
    google selalu siap, dan belum pernah gagal membantu penulis
  </li>
  <li>
    Penulis juga sering berbincang-bincang di channel #gentoo di
    irc.freenode.net. IRC adalah tempat yang bagus untuk mencari bantuan.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
