<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide disclaimer="obsolete" lang="id">
<title>Panduan Konfigurasi Kernel Gentoo Linux</title>

<author title="Author">
  <mail link="dsd@gentoo.org">Daniel Drake</mail>
</author>
<author title="Contributor">
  <mail link="curtis119@gentoo.org">Curtis Napier</mail>
</author>
<author title="Contributor">
  <mail link="jdr@xemoka.net">Justin Robinson</mail>
</author>
<author title="Contributor">
  <mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>
<author title="Editor">
  <mail link="smithj@gentoo.org">Jonathan Smith</mail>
</author>
<author title="Translator">
  <mail link="kucrut.dz@gmail.com">Dzikri Aziz</mail>
</author>

<abstract>
Dokumen ini dibuat untuk memperkenalkan konsep konfigurasi kernel secara
manual, dan menjelaskan beberapa perangkap yang sering menjerumuskan di dalam
konfigurasi kernel.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.2</version>
<date>2008-04-13</date>

<chapter>
<title>Pendahuluan</title>
<section>
<body>

<p>
Gentoo menyediakan dua cara untuk anda dalam menangani instalasi dan upgrade
kernel: <e>otomatis</e> (genkernel), dan <e>manual</e>. Walaupun cara otomatis
bisa dikatakan sebagai cara yang lebih <e>mudah</e> untuk para pengguna biasa,
ada beberapa alasan mengapa kebanyakan pengguna Gentoo lebih suka
mengkonfigurasi kernel mereka secara manual: fleksibilitas tinggi, kernel
yang lebih ramping, waktu kompilasi yang lebih pendek, pengalaman belajar,
menghilangkan kebosanan, dll.
</p>

<p>
Panduan ini tidak menjelaskan konfigurasi otomatis (genkernel). Jika anda lebih
suka menggunakan genkernel untuk mengkompilasi dan menginstal kernel anda,
silahkan baca <uri link="/doc/id/genkernel.xml">Dokumentasi genkernel</uri>.
</p>

<p>
Panduan ini tidak berusaha untuk menjelaskan proses konfigurasi manual dari
awal sampai akhir -- proses konfigurasi sangat bergantung kepada beberapa hal
umum dan pengetahuan mendalam tentang sistem anda. Tetapi, dokumen ini akan
memperkenalkan konsep konfigurasi manual dan menjelaskan beberapa perangkap
yang sering dihadapi oleh kebanyakan pengguna.
</p>

<p>
Dokumen ini ditulis dengan kernel terbaru sebagai acuannya, dan diperuntukkan
bagi arsitektur yang umum. Beberapa detil mungkin berbeda untuk kernel-kernel
yang lebih lama atau arsitektur lain, tapi kebanyakan isi dari dokumen ini
akan tetap relevan.
</p>

<p>
Di sini, kami menganggap anda telah memiliki source kernel Linux yang telah
diekstrak di harddisk anda (biasanya di dalam direktori <path>/usr/src</path>)
dan anda diharapkan sudah mengetahui cara menggunakan utilitas konfigurasi
<c>menuconfig</c> dan memasuki menu sistem. Jika anda merasa belum siap, kami
memiliki dokumentasi lain untuk membantu anda.
</p>

<ul>
  <li>
    <uri link="/doc/id/gentoo-kernel.xml">Panduan Kernel</uri> berisi
    daftar berbagai source kernel yang kami sediakan
  </li>
  <li>
    <uri link="/doc/id/kernel-upgrade.xml">Panduan Upgrade Kernel</uri>
    berisi penjelasan tentang cara meng-upgrade kernel anda atau pindah dari
    satu kernel ke kernel yang lain
  </li>
  <li>
    <uri link="/doc/id/handbook/index.xml">Buku Pegangan Gentoo</uri> juga
    berisi beberapa aspek tentang instalasi kernel.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Konsep Konfigurasi</title>
<section>
<title>Dasar-dasar</title>
<body>

<p>
Proses konfigurasi kernel secara umum sangatlah sederhana: anda dihadapkan
dengan sebuah daftar pilihan-pilihan yang dikategorikan dengan menu dan
sub-menu, kemudian anda memilih dukungan untuk perangkat anda dan fitur-fitur
kernel lainnya untuk sistem anda.
</p>

<p>
Kernel telah memiliki sebuah <e>konfigurasi default</e> yang diberikan kepada
anda ketika anda pertama kali menjalankan <c>menuconfig</c> pada salah satu
source kernel. Konfigurasi default ini biasanya sudah cukup bagus, artinya,
kebanyakan pengguna hanya perlu membuat sedikit perubahan pada konfigurasi ini.
Jika anda memutuskan untuk menonaktifkan sebuah opsi yang telah diaktifkan
secara default, pastikan agar anda telah benar-benar mengerti akan kegunaan
opsi ini, juga mengetahui konsekuensinya.
</p>

<p>
Jika anda baru pertama kali mengkonfigurasi kernel Linux, anda mungkin perlu
bersikap sedikit konservatif; jangan terlalu <e>neko-neko</e> dan usahakan
untuk sesedikit mungkin membuat perubahan pada konfigurasi default. Ingat juga
bahwa ada beberapa bagian konfigurasi yang harus anda sesuaikan dengan sistem
anda agar bisa boot!
</p>

</body>
</section>
<section>
<title>Built-in vs modul</title>
<body>

<p>
Kebanyakan opsi konfigurasi memiliki tiga pilihan: tidak dikompilasi sama
sekali, dikompilasi langsung di dalam kernel (Y), atau sebagai modul (M).
Modul-modul yang dikompilasi di luar kernel diletakkan di filesystem, sedangkan
modul yang dikompilasi di dalam kernel ditempatkan di dalam imej kernel itu
sendiri.
</p>

<p>
Terdapat sebuah perbedaan penting antara built-in dan modul: dengan beberapa
pengecualian, kernel tidak akan mencoba untuk me-load modul-modul di luar
imej ketika anda memerlukannya (diserahkan penuh kepada user). Sedangkan
bagian-bagian lain dari sistem dapat memiliki fasilitas <e>load-on-demand</e>,
juga tersedia beberapa utilitas untuk me-load modul secara otomatis. Anda
dianjurkan untuk mengkompilasi dukungan perangkat anda dan fitur-fitur kernel
langsung <e>di dalam</e> kernel, untuk memastikan agar dukungan dan
fungsionalitas perangkat selalu tersedia ketika diperlukan.
</p>

<p>
Tentunya, pada beberapa bagian konfigurasi, built-in adalah sebuah keharusan.
Sebagai contoh, jika partisi root anda menggunakan filesystem <c>ext2</c>, maka
sistem anda tidak akan dapat boot jika <c>ext2</c> dikompilasi sebagai modul
(sistem harus menemukan partisi root dahulu untuk kemudian dapat mencari modul
ext2, tetapi tidak dapat menemukan partisi root kecuali kernel sudah memiliki
dukungan untuk ext2!).
</p>

</body>
</section>
<section>
<title>Dukungan Hardware</title>
<body>

<p>
Selain mendeteksi <e>jenis arsitektur</e> sistem anda, konfigurasi tidak akan
mencoba mengenali hardware yang ada di sistem. Walaupun pengaturan default
telah memasukkan beberapa dukungan hardware, anda tetap harus mencari opsi
konfigurasi yang diperlukan oleh hardware di sistem anda.
</p>

<p>
Hal ini mengharuskan anda untuk mengetahui komponen apa saja yang terpasang
di dalam komputer. Untuk komponen internal, anda harus mengetahui jenis
<e>chipset</e>, yang digunakan, bukan nama produknya.
</p>

<p>
Ada beberapa utilitas yang dapat membantu anda. <c>lspci</c> (bagian dari paket
<c>sys-apps/pciutils</c>) dapat mengenali perangkat berbasis PCI dan AGP, juga
termasuk komponen yang ada di motherboard anda. <c>lsusb</c> (bagian dari paket
<c>sys-apps/usbutils</c>) dapat mengenali perangkat yang terhubung melalui port
USB.
</p>

<p>
Situasi ini terkadang memusingkan karena banyaknya standardisasi dalam dunia
hardware. Kecuali anda tidak menggunakan default, harddisk IDE anda akan
langsung dapat digunakan, begitu juga dengan keyboard dan mouse PS/2 atau USB.
Anda juga akan mendapatkan dukungan dasar VGA. Namun, beberapa perangkat
seperti kartu jaringan jarang sekali mengikuti standar, jadi anda harus
mengenali chipset kartu jaringan anda dan memilih driver yang dibutuhkan agar
anda bisa mendapatkan akses jaringan nantinya.
</p>

<p>
Sebagai tambahan, walaupun beberapa bagian dapat langsung berfungsi dengan
pengaturan default, anda perlu memilih beberapa opsi khusus agar anda bisa
mendapatkan kemampuan terbaik dari sistem anda. Misalnya, jika anda tidak
mengaktifkan dukungan untuk chipset IDE anda, maka harddisk IDE anda akan
bekerja dengan <b>sangat</b> lambat.
</p>

</body>
</section>
<section>
<title>Fitur-fitur Kernel</title>
<body>

<p>
Seperti halnya dukungan untuk hardware, anda juga perlu memikirkan fitur-fitur
software apa saja yang anda butuhkan dari kernel. Salah satu contoh penting
adalah, fitur dukungan filesystem: anda perlu memilih dukungan untuk filesystem
yang digunakan oleh harddisk, begitu juga dengan filesystem yang digunakan oleh
media eksternal lainnya (mis. VFAT untuk <e>flashdisk</e> USB).
</p>

<p>
Contoh lainnya adalah fungsionalitas jaringan <e>advance</e>. Jika anda ingin
melakukan <e>routing</e> atau memiliki firewall, anda harus memilih semua opsi
yang diperlukan pada saat melakukan konfigurasi kernel.
</p>

</body>
</section>
<section>
<title>Siap?</title>
<body>

<p>
Sekarang setelah anda mengenal konsepnya, anda seharusnya sudah bisa mengenal
hardware anda lalu masuk ke menu-menu konfigurasi, dan memilih opsi-opsi kernel
yang dibutuhkan oleh sistem anda.
</p>

<p>
Sisa panduan ini berisi cara mengatasi kebingungan pada beberapa area
konfigurasi, juga menyediakan saran-saran bagaimana menghindari permasalahan
yang sering dihadapai oleh pengguna Gentoo. Semoga berhasil!
</p>

</body>
</section>
</chapter>

<chapter>
<title>Masalah-masalah umum dan area-area yang membingungkan</title>
<section>
<title>Disk SATA adalah SCSI</title>
<body>

<p>
Kebanyakan sistem desktop modern memiliki perangkat penyimpanan data (harddisk
dan CD/DVD) yang tersambung pada  bus <uri
link="http://en.wikipedia.org/wiki/SATA">Serial ATA</uri>, bukan pada bus <uri
link="http://en.wikipedia.org/wiki/Parallel_ATA">IDE</uri> (kabel ribbon).
</p>

<p>
Dukunga SATA di Linux diimplementasikan pada sebuah lapisan bernama
<e>libata</e>, yang berada di bawah subsistem SCSI. Karena alasan ini, driver
SATA berada di dalam seksi driver SCSI. Sebagai tambahan, perangkat penyimpanan
data jenis SATA anda juga akan diperlakukan seperti perangkat SCSI, yang
artinya, dukungan untuk disk/cdrom SCSI juga diperlukan. Harddisk SATA anda
akan dinamakan (misalnya) <c>/dev/sda</c> dan CD/DVD SATA anda akan dinamakan
(misalnya) <c>/dev/sr0</c>.
</p>

<p>
Walaupun kebanyakan dari driver ini diperuntukkan bagi pengedali SATA,
<c>libata</c> tidak dirancang khusus untuk SATA. Semua driver IDE
nantinya akan menggunakan <c>libata</c>, dan untuk saat ini, keterangan
di atas juga harus diterapkan oleh pengguna IDE.
</p>

<pre caption="Opsi konfigurasi untuk libata">
Device Drivers  ---&gt;
 SCSI device support  ---&gt;
  &lt;*&gt; SCSI device support
  &lt;*&gt;   SCSI disk support
  &lt;*&gt;   SCSI CDROM support

  SCSI low-level drivers  ---&gt;
   &lt;*&gt; Serial ATA (SATA) support
    <comment>Pilih chipset anda dari pilihan-pilihan yang ada di bawahnya</comment>
</pre>

</body>
</section>
<section>
<title>Chipset IDE dan DMA</title>
<body>

<p>
Walaupun SATA telah diperkenalkan, perangkat IDE masih banyak sekali digunakan.
IDE adalah teknologi yang sangat banyak sekali dipakai, dan oleh karena itu,
Linux mendukung hampir semua pengendali IDE langsung tanpa perlu memilih
opsi-opsi tertentu.
</p>

<p>
Bagaimanapun juga, IDE adalah teknologi lama yang merupakan reinkarnasi dari
<e>Programmed Input/Output</e> (PIO), yang tidak dapat menyediakan kecepatan
transfer yang dibutuhkan untuk akses cepat ke perangkat penyimpanan data
modern. Driver standar IDE terbatas pada kecepatan transfer PIO ini, yang akan
mengakibatkan lambatnya kecepatan transfer, dan tingginya penggunaan CPU ketika
data sendang dikirim dari/ke disk.
</p>

<p>
Kecuali anda menggunakan komputer buatan sebelum tahun 1995, pengendali IDE
anda juga menyediakan modus transfer alternatif, dikenal dengan <e>Direct
Memory Access</e> (DMA). DMA jauh lebih kencang, dan CPU hampir tidak digunakan
sama sekali ketika mengirimkan data. Jika anda merasa sistem anda lambat dan
anda menggunakan disk IDE, kemungkinan DMA di sistem anda belum diaktifkan
</p>

<pre caption="Memeriksa apakah DMA sudah aktif di disk IDE">
# <i>hdparm -d /dev/hda</i>

/dev/hda:
 using_dma    =  0 (off)
</pre>

<p>
Untuk mengaktifkan DMA pada perangkat IDE anda, anda hanya perlu memilih opsi
konfigurasi untuk pengendali IDE anda.
</p>

<pre caption="Opsi-opsi konfigurasi untuk pengendali IDE">
Device Drivers  ---&gt;
 ATA/ATAPI/MFM/RLL support  ---&gt;
  &lt;*&gt; ATA/ATAPI/MFM/RLL support
  &lt;*&gt;   Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support
  [*]     PCI IDE chipset support
    <comment>Pilih chipset anda dari pilihan yang ada di bawahnya</comment>
</pre>

</body>
</section>
<section>
<title>Pengendali Host USB</title>
<body>

<p>
<uri link="http://en.wikipedia.org/wiki/USB">USB</uri> adalah bus yang banyak
digunakan untuk menghubungkan perangkat eksternal ke komputer anda. Salah satu
alsan di balik kesuksesan USB adalah karena USB merupakan protokol standar,
namun <e>host controller devices</e> (HCD) USB yang diimplementasikan pada
komputer terbagi menjadi tiga jenis:
</p>

<ul>
  <li>
    <c>UHCI</c> adalah <e>Universal Host Controller Interface</e>. Mendukung
    USB 1.1 dan banyak ditemukan di motherboard berbasis chipset ViA atau Intel.
  </li>
  <li>
    <c>OHCI</c> adalah <e>Open Host Controller Interface</e>. Mendukung USB 1.1
    dan biasanya ditemukan di motherboard berbasis chipset nVidia dan SiS.
  </li>
  <li>
    <c>EHCI</c> adalah <e>Extended Host Controller Interface</e>. Satu-satunya
    pengendali host yang mendukung USB 2.0, dan dapat ditemukan di motherboard
    yang memiliki dukungan USB 2.0.
  </li>
</ul>

<p>
Kebanyakan sistem memiliki dua dari tiga tipe di atas: EHCI (USB 2.0), ditambah
UHCI atau OHCI (USB 1.1). Penting bagi anda untuk memilih kedua tipe yang
dimiliki oleh sistem anda. Walaupun perangkat USB 2.0 tidak cocok dengan USB
1.1, banyak perangkat USB (bahkan yang saat ini masih diproduksi) berbasis USB
1.1 - apakah mouse USB harus memiliki kecepatan lebih dari 1.5mbit/detik?
</p>

<p>
Jika anda tidak memiliki opsi-opsi yang diperlukan oleh tipe HCD USB di sistem
anda, anda mungkin akan mendapatkan port USB 'mati': anda menancapkan perangkat
USB, namun perangkat tersebut tidak mendapatkan power atau respon apapun.
</p>

<p>
Trik <c>lspci</c> (dari paket <c>sys-apps/pciutils</c>) mempermudah anda untuk
mengetahui HCD apa yang dimiliki oleh sistem anda. Berikut ini adalah HCD yang
ada di sistem penulis (tanpa menghiraukan FireWire):
</p>

<pre caption="Menggunakan lspci untuk mengetahui tipe HCD">
# <i>lspci -v | grep HCI</i>
00:02.0 USB Controller: nVidia Corporation CK804 USB Controller (rev a2) (prog-if 10 <i>[OHCI]</i>)
00:02.1 USB Controller: nVidia Corporation CK804 USB Controller (rev a3) (prog-if 20 <i>[EHCI]</i>)
01:0b.0 FireWire (IEEE 1394): Agere Systems FW323 (rev 61) (prog-if 10 [OHCI])
</pre>

<pre caption="Konfigurasi untuk HCD USB">
Device Drivers  ---&gt;
 USB support  ---&gt;
  &lt;*&gt; Support for Host-side USB
  ---   USB Host Controller Drivers
  &lt;*&gt;   EHCI HCD (USB 2.0) support
  &lt;*&gt;   OHCI HCD support
  &lt;*&gt;   UHCI HCD (most Intel and VIA) support
  <comment>Pilih HCD yang ada di sistem anda, atau pilih ketiga-tiganya jika
    anda kurang yakin.</comment>
</pre>

</body>
</section>
<section>
<title>Sistem Multiprosesor, Hyper-Threading dan Dual Core</title>
<body>

<p>
Banyak komputer yang berbasis multiprosesor, tetapi tidak dengan cara yang
selalu jelas.
</p>

<ul>
  <li>
    Kebanyakan CPU Intel mendukung sebuah teknologi yang mereka sebut <uri
    link="http://en.wikipedia.org/wiki/Hyperthreading">hyper-threading</uri>,
    yang membuat sistem melihat satu CPU sebagai dua prosesor <e>logikal</e>.
  </li>
  <li>
    Beberapa CPU Intel/AMD baru benar-benar memiliki banyak prosesor fisik di
    dalam satu paket, yang dikenal sebagai prosesor <uri
    link="http://en.wikipedia.org/wiki/Dual_core">dual core</uri>.
  </li>
  <li>
    Beberapa komputer mahal benar-benar memiliki banyak prosesor fisik yang
    terpasang pada motherboard khusus untuk memberikan pengingkatan performa
    yang jauh lebih baik daripada sistem <e>uniprocessor</e>. Anda mungkin
    sudah mengetahuinya jika anda memiliki komputer seperti ini, karena
    komputer-komputer ini benar-benar tidak murah.
  </li>
</ul>

<p>
Untuk semua kasus ini, anda perlu memiliki opsi kernel yang sesuai agar anda
mendapatkan performa terbaik.
</p>

<pre caption="Konfigurasi untuk multiprosesor">
Processor type and features  ---&gt;
 [*] Symmetric multi-processing support
 <comment>Pilih opsi di atas jika anda memiliki sistem multi-prosesor (semua jenis)</comment>
 [*]   SMT (Hyperthreading) scheduler support
 <comment>Pilih opsi di atas jika anda memiliki CPU Hyper-Threading Intel</comment>
 [*]   Multi-core scheduler support (NEW)
 <comment>Pilih opsi di atas jika anda memiliki CPU dual core</comment>
</pre>

</body>
</section>
<section>
<title>Dukungan x86 High Memory</title>
<body>

<p>
Karena keterbatasan yang ada pada ruang alamat 32-bit arsitektur x86, sebuah
kernel dengan konfigurasi default hanya dapat mendukung penggunaan memori
sampai 896MB. Jika sistem anda memiliki memori lebih besar, hanya 896MB pertama
yang akan terlihat, kecuali anda telah memberikan dukungan <e>high memory</e>.
</p>

<note>
Keterbatasan ini hanya berlaku pada arsitektur x86 (IA32). Arsitektur lain
telah mendukung penggunaan memori besar tanpa konfigurasi tambahan.
</note>

<p>
Dukungan untuk memori besar tidak diaktifkan secara default, karena hal ini
dapat menyebabkan <e>system overhead</e> kecil. Jangan khawatir,
<e>overhead</e> yang ditimbulkan jauh lebih kecil daripada peningkatan
performa yang anda dapatkan dengan memiliki memori yang lebih besar!
</p>

<pre caption="Mengaktifkan dukungan high memory di x86">
Processor type and features  ---&gt;
 High Memory Support  ---&gt;
  (X) 4GB
  ( ) 64GB
  <comment>Pilih opsi 4GB, kecuali sistem anda memiliki RAM lebih dari 4GB.</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Dokumentasi Konfigurasi Kernel Lainnya</title>
<section>
<body>

<p>
Sejauh ini, kita hanya mendiskusikan konsep umum dan masalah-masalah tertentu
yang berhubungan dengan konfigurasi kernel, tanpa membicarakan masalah-masalah
yang lebih detil (anda harus menemukannya sendiri!). Tenang saja, beberapa
bagian dari koleksi dokumentasi Gentoo menyediakan penjelasan khusus untuk
masalah-masalah ini.
</p>

<p>
Dokumen-dokumen ini mungkin dapat membantu anda ketika mengkonfigurasi
area-area tertentu, tetapi jika anda baru sekali melakukan konfigurasi kernel,
jangan terlalu <e>neko-neko</e>. Mulailah dengan membuat kernel dasar yang
dapat berfungsi, anda boleh melakukan konfigurasi kembali kapan saja untuk
menambahkan dukungan bagi kartu suara anda, printer, dll.
</p>

<ul>
  <li>
    <uri link="/doc/id/alsa-guide.xml">Panduan ALSA</uri> berisi opsi-opsi
    konfigurasi yang dibutuhkan oleh kartu suara. Perlu dicatat bahwa ALSA
    merupakan salah satu pengecualian dari skema anjuran untuk tidak membuat
    modul: ALSA jauh lebih mudah dikonfigurasi jika dikompilasi sebagai modul.
  </li>
  <li>
    <uri link="/doc/id/bluetooth-guide.xml">Panduan Bluetooth</uri> menjelaskan
    opsi-opsi yang anda perlukan untuk menggunakan perangkat Bluetooth.
  </li>
  <li>
    <uri link="/doc/en/ipv6.xml">Panduan Ruter IPv6</uri> menjelaskan cara
    konfigurasi kernel untuk <e>routing</e> dengan menggunakan skema
    pengalamatan jaringan generasi baru.
  </li>
  <li>
    Jika anda akan menggunakan driver grafis proproetary nVidia untuk
    mendapatkan performa 3D tinggi, <uri link="/doc/id/nvidia-guide.xml">Panduan
    nVidia</uri> berisi opsi-opsi yang anda perlukan.
  </li>
  <li>
    <uri link="/doc/id/power-management-guide.xml">Panduan Power
    Management</uri> menjelaskan cara mengkonfigurasi kernel untuk <e>CPU
    frequency scaling</e>, juga untuk fungsionalitas <e>suspend</e> dan
    <e>hibernate</e>.
  </li>
  <li>
    Jika anda menggunakan sistem PowerPC, <uri
    link="/doc/id/gentoo-ppc-faq.xml">FAQ PPC</uri> memiliki beberapa bagian
    dalam hal konfigurasi kernel.
  </li>
  <li>
    <uri link="/doc/id/printing-howto.xml">Printing HOWTO</uri> berisi
    opsi-opsi kernel yang perlu diaktifkan untuk mencetak di Linux.
  </li>
  <li>
    <uri link="/doc/id/usb-guide.xml">Panduan USB</uri> menjelaskan konfigurasi
    yang dibutuhkan untuk menggunakan perangkat USB biasa seperti
    keyboards/mouse, penyimpanan data, dan printer.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Mengatasi Masalah</title>
<section>
<title>Perubahan konfigurasi tidak berpengaruh</title>
<body>

<p>
Para pengguna sering melakukan kesalahan dengan membuat perubahan pada
konfigurasi, lalu reboot tanpa menggunakan kernel yang baru saja mereka
kompilasi. Mereka mendapatkan kembali semua masalah yang sebelumnya ingin
mereka atasi dengan konfigurasi ulang kernel, lalu menyimpulkan bahwa
perubahan konfigurasi tidak memberikan pengaruh.
</p>

<p>
Proses kompilasi dan instalasi kernel tidak dijelaskan pada panduan ini, anda
perlu membaca <uri link="/doc/id/kernel-upgrade.xml">Panduan Upgrade
Kernel</uri>. Secara singkat, prosesnya adalah: konfigurasi, kompilasi, mount
/boot (jika ada dan belum di-mount), salin kernel baru, dan reboot. Jika anda
tidak melakukan salah satu dari langkah-langkah ini, perubahan anda tidak akan
berpengaruh!
</p>

<p>
Anda dapat mengetahui apakah kernel yang sedang anda gunakan cocok dengan
kernel yang dikompilasi di harddisk anda dengan memeriksa hari dan waktu
kompilasi. Dengan anggapan anda menggunakan arsitektur x86 dan source kernel
anda terinstal di <path>/usr/src/linux</path>:
</p>

<pre caption="Memastikan apakah anda menggunakan kernel yang baru">
# <i>uname -v</i>
#4 SMP PREEMPT Sat Jul 15 08:49:26 BST 2006
<comment>Perintah di atas akan menampilkan hari dan waktu kompilasi kernel yang sedang anda gunakan.</comment>

# <i>ls -l /usr/src/linux/arch/i386/boot/bzImage</i>
-rw-r--r-- 1 dsd users 1504118 Jul 15 08:49 /usr/src/linux/arch/i386/boot/bzImage
<comment>Perintah di atas akan menampilkan hari dan waktu kompilasi kernel terakhir yang dilakukan di sistem anda.</comment>
</pre>

<p>
Jika kedua tanda waktu dari kedua perintah di atas berbeda lebih dari 2 menit,
ini menandakan bahwa anda telah melakukan kesalahan ketika menginstal ulang
kernel dan anda tidak sedang menggunakan kernel yang anda sangka sedang anda
gunakan!
</p>

</body>
</section>
<section>
<title>Modul-modul tidak di-load secara otomatis</title>
<body>

<p>
Seperti yang telah dijelaskan sebelumnya pada dokumen ini, sistem konfigurasi
kernel menyembunyikan perubahan besar ketika anda memilih sebuah komponen
kernel sebagai modul (M). Anda perlu mengulanginya lagi karena banyak pengguna
yang terjerumus pada perangkap ini.
</p>

<p>
Ketika anda memilih sebuah komponen sebagai <e>built-in</e>, komponen ini
dimasukkan ke dalam imej kernel (bzImage). Ketika kernel ingin menggunakan
komponen tersebut, kernel dapat menginisialisasinya dan me-load-nya sendiri
tanpa campur tangan pengguna.
</p>

<p>
Ketika anda memilih sebuah komponen sebagai modul, komponen tersebut
dikompilasi sebagai file modul kernel dan diinstal di sistem anda. Secara umum,
ketika kernel perlu menggunakan modul tersebut, kernel tidak bisa! Dengan
beberapa pengecualian, kernel tidak akan mencoba untuk me-load modul - tugas
ini diserahkan kepada pengguna.
</p>

<p>
Jadi, jika anda mengkompilasi driver kartu jaringan anda sebagai modul,
kemudian anda tidak mendapatkan akses jaringan, hal ini mungkin karena modul
yang diperlukan belum di-load - anda harus melakukannya (load modul) sendiri
atau atur sistem anda agar langsung me-load modul tersebut saat boot.
</p>

<p>
Kecuali anda memiliki alasan sendiri untuk membuat modul, sayangi waktu anda
dengan memasukkan semua komponen yang anda perlukan di dalam kernel, agar
kernel dapat mengatur semuanya untuk anda.
</p>

</body>
</section>
</chapter>
</guide>
