<?xml version='1.0' encoding="UTF-8"?>
<!-- $Id: gcc-upgrading.xml,v 1.5 2012/04/18 18:30:24 swift Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="id">
<title>Panduan Upgrade GCC Gentoo Linux</title>

<author title="Author">
  <mail link="amne@gentoo.org">Wernfried Haas</mail>
</author>
<author title="Author">
  <mail link="jkt@gentoo.org">Jan KundrÃ¡t</mail>
</author>
<author title="Editor">
  <mail link="mark@halcy0n.com">Mark Loeser</mail>
</author>
<author title="Translator">
  <mail link="kucrut.dz@gmail.com">Dzikri Aziz</mail>
</author>

<abstract>
Dokumen ini akan memandu anda dalam proses upgrade GCC pada sistem Gentoo
Linux anda.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>22</version>
<date>2007-04-03</date>

<chapter id="intro">
<title>Pendahuluan</title>
<section>
<title>Upgrade GCC</title>
<body>

<p>
Mengapa anda perlu melakukan upgrade? GCC sangat mirip dengan paket lain pada
sistem anda, hanya saja agak sedikit lebih penting. Anda harus meng-upgrade
GCC jika ada versi baru yang berisi perbaikan atas beberapa bug yang membuat
anda jengkel, fungsionalitas baru yang yang anda butuhkan, atau jika anda
hanya ingin menjaga sistem anda tetap up-to-date. Jika salah satu alasan di
atas cocok dengan anda, maka anda dapat melakukan upgrade GCC dengan aman
selama versi GCC anda didukung oleh para developer Gentoo.
</p>

<p>
Jika anda menginstal GCC versi mayor, seperti dari 3.3.6 ke 3.4.5), sistem
anda tidak akan berpindah untuk menggunakannya secara otomatis. Anda secara
eksplisit perlu melakukan proses perpindahan tersebut karena biasanya
membutuhkan beberapa langkah-langkah tambahan. Jika anda memutuskan untuk
tidak berpindah, Portage akan tetap menggunakan compiler versi lama sampai
anda berubah pikiran, atau membuang compiler lama dari sistem. Tetapi untuk
versi minor (seperti dari 3.4.5 ke 3.4.6), sistem anda akan berpindah secara
otomatis untuk menggunakan compiler baru.
</p>

<p>
Panduan ini berisi langkah-langkah yang diperlukan untuk menjalankan upgrade
compiler yang digunakan oleh sistem Gentoo. Terdapat sebuah seksi khusus untuk
<uri link="#upgrade-3.3-to-3.4">upgrade dari GCC 3.3 ke 3.4</uri> dan beberapa
masalah dengan <c>libstdc++</c>. Seksi khusus kedua diperuntukkan bagi para
pengguna yang baru <uri link="#first-install">pertama kali menginstal</uri>
Gentoo menggunakan tarbal stage3, setelah versi mayor/minor GCC dirilis.
</p>

<warn>
Perlu dicatat bahwa upgrade dari GCC-3.4 (atau 3.3) ke GCC-4.1 atau yang lebih
baru masih mengharuskan anda untuk mengikuti petunjuk upgrade umum, karena
GCC-3.4 dan GCC-4.1 menggunakan ABI yang sedikit berbeda.
</warn>

</body>
</section>
</chapter>

<chapter id="upgrade-general">
<title>Petunjuk Upgrade Umum</title>
<section>
<title>Pendahuluan</title>
<body>

<impo>
Jika anda memerlukan petunjuk khusus untuk upgrade dari GCC-3.3 ke GCC-3.4,
silahkan membaca <uri link="#upgrade-3.3-to-3.4">seksi khusus</uri>.
</impo>

<impo>
Jika anda memerlukan petunjuk khusus untuk upgrade GCC pada instalasi baru,
silahkan membaca <uri link="#first-install">seksi khusus</uri>.
</impo>

<p>
Biasanya, melakukan upgrade ke <e>rilis perbaikan</e>, seperti dari 3.3.5 ke
3.3.6, sangatlah aman dilakukan -- emerge saja versi baru, perintahkan sistem
anda untuk menggunakannya lalu bangun-ulang paket yang terpengaruh, yaitu
<c>libtool</c>. Bagaimanapun juga, ada beberapa upgrade GCC yang merusak
kompatibilitas binari; pada kasus seperti ini, anda perlu membangun-ulang
semua paket yang terpengaruh (atau bahkan seluruh toolchain dan <c>system</c>).
</p>

<p>
Kami telah mengatakan bahwa anda perlu mengganti sendiri compiler anda ke
versi yang lebih baru. Bagaimanapun juga, terdapat satu pengecualian --
upgrade ke rilis perbaikan, seperti dari 3.3.5 ke 3.3.6 jika anda tidak
menggunakan fitur "multislot" yang mengizinkan beberapa versi GCC terinstal
pada sebuah sistem dalam waktu yang bersamaan. Multislot telah dinonaktifkan
secara default karena kebanyakan user tidak memerlukannya.
</p>

<pre caption="Upgrade GCC">
# <i>emerge -uav gcc</i>

<comment>(Gantikan "i686-pc-linux-gnu-3.4.5" dengan versi GCC dan setting
CHOST yang baru saja anda instal)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.5</i>
# <i>env-update &amp;&amp; source /etc/profile</i>

<comment>(Membangun-ulang libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Sekarang mari kita bangun-ulang toolchain lalu <c>world</c> agar kita dapat
memanfaatkan compiler baru.
</p>

<pre caption="Bangun-ulang system">
# <i>emerge -eav system</i>
# <i>emerge -eav world</i>
</pre>

<p>
Pada saat ini anda dapat membuang GCC versi lama dengan aman. Jika anda ingin
melakukannya, jalankan perintah berikut ini (seperti biasa, gantikan
<c>=sys-devel/gcc-3.3*</c> dengan versi yang ingin anda uninstall):
</p>

<pre caption="Membuang GCC versi lama">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

<impo>
harap dicatat bahwa GCC 4.1 dan yang lebih baru hanya dapat mengkompilasi
kernel 2.4.34. Jangan bang GCC versi lama anda jika anda ingin menggunakan
kernel lama.
</impo>

<impo> <!-- FIXME: do we really want to keep it here? -->
Jika anda sedang melakukan upgrade dari GCC 3.3, anda perlu menjalankan
<c>emerge --oneshot sys-libs/libstdc++-v3</c> untuk mendapatkan kompatibilitas
dengan binari aplikasi C++ lama.
</impo>

</body>
</section>
</chapter>

<chapter id="upgrade-3.3-to-3.4">
<title>Upgrade dari GCC-3.3 ke 3.4</title>
<section>
<title>Pendahuluan</title>
<body>

<p>
Upgrade dari GCC-3.3 ke 3.4 agak kurang mulus disebabkan oleh perubahan ABI
C++. Terdapat sebuah masalah dengan pustaka <c>libstdc++</c> yang perlu kita
urus.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-choices">
<title>Pilihan-pilihan</title>
<body>

<impo>
Jika anda melakukan upgrade pada komputer SPARC, anda harus menjalakan
<uri link="#upgrade-3.3-to-3.4-emerge-e">bangun-ulang sistem secara
menyeluruh</uri> disebabkan oleh <uri
link="http://gcc.gnu.org/gcc-3.4/sparc-abi.html">perubahan beberapa ABI
internal</uri> pada penyampaian parameter GCC.
</impo>

<p>
Anda memiliki dua pilihan dalam proses upgrade sistem anda. <uri
link="#upgrade-3.3-to-3.4-revdep-rebuild">Metode pertama</uri> lebih cepat dan
membutuhkan penggunaan utilitas <c>revdep-rebuild</c> dari paket
<c>gentoolkit</c>. Sedangkan <uri link="#upgrade-3.3-to-3.4-emerge-e">metode
ke dua</uri> akan membangun-ulang seluruh sistem anda dari awal agar
menggunakan fitur-fitur baru GCC. Anda bebas memilih metode manapun. Biasanya,
metode pertama sudah cukup baik.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-revdep-rebuild">
<title>Menggunakan revdep-rebuild</title>
<body>

<p>
Metode ini mengharuskan anda menginstal <c>gentoolkit</c> jika anda belum
memilikinya. Kemudian kita akan meng-upgrade GCC lalu berpindah ke compiler
baru. Kita juga akan membangun ulang paket <c>libtool</c> untuk memastikan
agar toolchain dalam keadaan sempurna.
</p>

<pre caption="Instalasi gentoolkit dan upgrade GCC">
# <i>emerge -an gentoolkit</i>
# <i>emerge -uav gcc</i>
<comment>(Gantikan "i686-pc-linux-gnu-3.4.5" dengan versi GCC dan setting
CHOST yang baru saja anda instal)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.5</i>
# <i>source /etc/profile</i>

<comment>(Membangun-ulang libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Sekarang, kita akan melihat paket apa saja yang akan dibangun ulang oleh
revdep-rebuild. Kemudian kita akan memerintahkan revdep-rebuild untuk membangun
ulang paket-paket tersebut. Proses ini akan memakan waktu agak lama, sabarlah :)
</p>

<pre caption="Menggunakan revdep-rebuild">
# <i>revdep-rebuild --library libstdc++.so.5 -- -p -v</i>
# <i>revdep-rebuild --library libstdc++.so.5</i>
</pre>

<note>
Anda mungkin akan mendapatkan masalah dengan versi-versi paket tertentu karena
telah usang atau telah di-mask. Jika memang begini, anda perlu menambahkan opsi
<c>--package-names</c> pada perintah <c>revdep-rebuild</c>. Opsi ini akan
mengkompilasi paket-paket berdasarkan namanya saja, bukan nama dan versi.
</note>

<p>
Untuk menyediakan kompatibilitas dengan aplikasi binari C++ lama dan paket-paket
yang mungkin terlewatkan oleh revdep-rebuild, <c>sys-libs/libstdc++-v3</c> perlu
diinstal sebelum anda membuang GCC 3.3 dari sistem anda.
</p>

<pre caption="Instalasi libstdc++-v3 dan pembersihan">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
<section id="upgrade-3.3-to-3.4-emerge-e">
<title>Menggunakan emerge -e</title>
<body>

<p>
Metode ini, walaupun memakan waktu lebih lama, akan membangun-ulang seluruh
sistem anda untuk memastikan bahwa semuanya telah dibangun dengan compiler
terbaru anda, lebih aman dari metode sebelumnya. Pertama, anda perlu
meng-upgrade GCC dan libtool, lalu berpindah ke compiler baru anda.
</p>

<pre caption="Upgrade GCC">
# <i>emerge -uav gcc</i>
<comment>(Gantikan "i686-pc-linux-gnu-3.4.5" dengan versi GCC dan setting
CHOST yang baru saja anda instal)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.5</i>
# <i>source /etc/profile</i>

<comment>(Membangun-ulang libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Untuk menyediakan kompatibilitas dengan aplikasi binari C++ lama, anda perlu
menginstal <c>sys-libs/libstdc++-v3</c>.
</p>

<pre caption="Instalasi libstdc++-v3">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

<p>
Sekarang kita akan membangun-ulang <c>system</c>, kemudian <c>world</c>. Proses
ini akan memakan waktu cukup lama, tergantung kepada jumlah paket yang telah
terinstal, karena seluruh toolchain dan file-file pendukung sistem anda akan
dibangun-ulang, berikut seluruh paket pada sistem anda, termasuk toolchain tadi.
Proses ini diperlukan untuk memastikan agar seluruh paket telah dikompilasi
dengan toolchain baru, termasuk toolchain itu sendiri.
</p>

<pre caption="Membangun-ulang system dan world">
# <i>emerge -e system</i>
# <i>emerge -e world</i>
</pre>

<p>
Pada saat ini anda dapat dengan aman membuang GCC versi lama:
</p>

<pre caption="Pembersihan">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="first-install">
<title>Upgrade GCC pada Instalasi Pertama</title>
<section>
<title>Pendahuluan</title>
<body>

<p>
Upgrade GCC pada sebuah sistem selepas instalasi dari tarbal stage3 merupakan
proses sederhana. Salah satu kelebihan yang didapatkan oleh para pengguna
dengan instalasi baru ialah, mereka belum memiliki paket-paket yang terkait
kepada GCC versi lama. Contoh berikut ini merupakan upgrade dari GCC-3.3 ke
3.4 atau yang lebih baru. Beberapa bagian mungkin akan berbeda jika anda
melakukan upgrade dari GCC versi lain. Sebagai contoh, nama pustaka yang
digunakan oleh <c>revdep-rebuild</c> di bawah ini hanya dimiliki oleh GCC 3.3,
seperti halnya dengan instalasi <c>libstdc++-v3</c>.
</p>

<p>
Jika seorang user belum pernah melakukan kustomisasi pada sistemnya, maka
hanya ada sedikit langkah yang perlu dijalankan untuk menyelesaikan proses
upgrade GCC ke versi terbaru. Untuk upgrade GCC-3.3 ke 3.4 upgrade, terdapat
beberapa pilihan. Tetapi, tidak seperti upgrade GCC-3.3 ke 3.4, yang satu ini
lebih mudah karena perbedaan di antara metode-metode yang ada lebih sedikit.
<uri link="#first-install-revdep-rebuild">Metode pertama</uri> lebih cepat dan
memerlukan penggunaan utilitas <c>revdep-rebuild</c> dari paket
<c>gentoolkit</c>, mirip dengan prosedur di atas. Dengan menggunakan
<c>revdep-rebuild</c>, hanya paket-paket yang terkait langsung dengan pustaka
GCC saja yang akan dibangun-ulang, sedangkan <uri
link="#first-install-emerge-e">metode ke dua</uri> akan menyebabkan seluruh
instalasi baru anda dikompilasi-ulang dengan versi GCC terbaru dan memerlukan
waktu yang lebih lama. Metode ke dua ini tidak pernah diperlukan dan
didokumentasikan hanya sebagai pelengkap.
</p>

<p>
Langkah-langkah pertama berikut ini sama untuk kedua metode, dan harus
dijalankan.
</p>

<pre caption="Upgrade GCC">
# <i>emerge -uav gcc</i>
<comment>(Gantikan "i686-pc-linux-gnu-3.4.5" dengan versi GCC dan setting
CHOST yang baru saja anda instal)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.5</i>
# <i>source /etc/profile</i>

<comment>(Membangun-ulang libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
Untuk menyediakan kompatibilitas dengan aplikasi binari C++ lama, anda perlu
menginstal <c>sys-libs/libstdc++-v3</c>.
</p>

<pre caption="Instalasi libstdc++-v3">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

</body>
</section>

<section id="first-install-revdep-rebuild">
<title>Menggunakan revdep-rebuild</title>
<body>

<p>
Metode ini mengharuskan anda menginstal <c>gentoolkit</c> jika anda belum
memilikinya. Selanjutnya kita akan menjalankan <c>revdep-rebuild</c> untuk
memeriksa paket-paket yang perlu dibangun-ulang, kemudian membangun-ulangnya.
</p>

<pre caption="Instalasi gentoolkit dan Menjalankan revdep-rebuild">
# <i>emerge -an gentoolkit</i>
# <i>revdep-rebuild --library libstdc++.so.5 -- -p -v</i>
# <i>revdep-rebuild --library libstdc++.so.5</i>
</pre>

<note>
Anda mungkin akan mendapatkan masalah dengan versi-versi paket tertentu karena
telah usang atau telah di-mask. Jika memang begini, anda perlu menambahkan opsi
<c>--package-names</c> pada perintah <c>revdep-rebuild</c>. Opsi ini akan
mengkompilasi paket-paket berdasarkan namanya saja, bukan nama dan versi.
</note>

</body>
</section>
<section id="first-install-emerge-e">
<title>Menggunakan emerge -e</title>
<body>

<p>
Metode ini, walaupun memakan waktu lebih lama, akan membangun-ulang seluruh
sistem anda untuk memastikan bahwa semuanya telah dibangun dengan compiler
terbaru anda. Proses ini tidak diperlukan, tetapi boleh dilakukan jika anda
melakukan perubahan pada variabel CFLAGS atau yang lainnya di make.conf, yang
dapat berpengaruh pada kompilasi sistem.
</p>

<p>
Karena kita menjalankan upgrade pada instalasi awal, kita tidak perlu
mengkompilasi-ulang <c>world</c>. Tetapi, anda juga dapat memilih untuk
meng-update <c>world</c> sebagai ganti <c>system</c> untuk memastikan agar
semua paket ter-update.
</p>

<pre caption="Membangun-ulang system">
# <i>emerge -e system</i>
</pre>

</body>
</section>
<section id="first-install-cleaning-up">
<title>Pembersihan</title>
<body>

<p>
Pada saat ini anda dapat membuang GCC versi lama dengan aman. Gantikan
<c>VERSI_GCC_BARU_ANDA</c> dengan versi yang baru saja anda instal:
</p>

<pre caption="Pembersihan">
# <i>emerge -aC "&lt;sys-devel/gcc-VERSI_GCC_BARU_ANDA"</i>
</pre>

</body>
</section>
</chapter>

<chapter id="common-pitfalls">
<title>Kesalahan Umum</title>
<section>
<body>

<p>
Anda perlu menonaktifkan <c>distcc</c> selama proses upgrade. Mencampur versi
compiler pada nodes anda akan <e>mengakibatkan</e> masalah. Hal ini tidak
berlaku untuk ccache, karena obyek cache akan menjadi tidak valid lagi.
</p>

<p>
Selalu gunakan versi GCC yang sama untuk kernel dan modul-modul kernel anda.
Ketika anda telah membangun-ulang <c>world</c> anda dengan GCC baru, modul-modul
eksternal (mis. <c>app-emulation/qemu-softmmu</c>) tidak akan dapat di-load.
Bangun-ulang kernel anda dengan GCC baru untuk memperbaikinya.
</p>

<p>
Jika anda menjalankan upgrade pada komputer SPARC, pastikan agar anda kembali
menjalankan <c>silo -f</c> setelah selesai membangun-ulang <c>world</c> untuk
menghindari masalah-masalah yang mungkin terjadi.
</p>

</body>
</section>
<section>
<title>Pesan-pesan Error</title>
<body>

<p>
Jika anda mendapatkan error <e>libtool: link:
`/usr/lib/gcc-lib/i686-pc-linux-gnu/3.3.6/libstdc++.la' is not a valid libtool
archive</e>, jalankan <c>/sbin/fix_libtool_files.sh 3.3.6</c> (gantikan
"3.3.6" dengan nomor versi dari pesan error).
</p>

<p>
Jika anda melihat pesan <e>error: /usr/bin/gcc-config: line 632:
/etc/env.d/gcc/i686-pc-linux-gnu-3.3.5: No such file or directory</e>, maka
cobalah untuk menghapus <path>/etc/env.d/gcc/config-i686-pc-linux-gnu</path>
lalu jalankan lagi <c>gcc-config</c>, diikuti dengan <c>source /etc/profile</c>.
Tetapi hanya lakukan ini jika anda tidak memiliki cross-compilers.
</p>

<p>
Jika sebuah paket gagal ketika anda menjalankan <c>emerge -e system</c> atau
<c>emerge -e world</c>, anda dapat melanjutkan dengan <c>emerge --resume</c>.
Jika sebuah paket gagal berulang-kali, lewati paket tersebut dengan <c>emerge
--resume --skipfirst</c>. Jangan jalankan perintah emerge lain secara bersamaan
atau anda akan kehilangan informasi resume.
</p>

<p>
Jika anda mendapatkan pesan error <e>spec failure: unrecognized spec option</e>
ketika meng-upgrade compiler anda, cobalah untuk berpindah kembali ke compiler
default anda, unset variabel <c>GCC_SPECS</c> lalu jalankan lagi upgrade GCC:
</p>

<pre caption="Mengambalikan spec primari">
# <i>gcc-config 1</i>
# <i>source /etc/profile</i>
# <i>unset GCC_SPECS</i>
# <i>emerge -uav gcc</i>
</pre>

</body>
</section>
</chapter>
</guide>
