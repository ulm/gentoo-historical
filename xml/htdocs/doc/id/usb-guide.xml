<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Id: usb-guide.xml,v 1.6 2012/06/30 18:25:24 swift Exp $ -->

<guide disclaimer="obsolete" lang="id">
<title>Panduan USB Gentoo Linux</title>

<author title="Author">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Translator">
  <mail link="kucrut.dz@gmail.com">Dzikri Aziz</mail>
</author>

<abstract>
Dokumen ini akan membantu anda men-setup USB pada sistem gentoo dan
mengkonfigurasi perangkat-perangkat USB.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.13</version>
<date>2007-04-09</date>

<chapter>
<title>Pendahuluan</title>
<section>
<title>Apa itu USB?</title>
<body>

<p>
USB adalah singkatan dari Universal Serial Bus dan pada dasarnya merupakan
standar antarmuka eksternal untuk komunikasi komputer dengan berbagai perangkat
lain. Perangkat USB yang umum digunakan sekarang adalah keyboard, mouse, pen
drive, kamera digital, CD &amp; DVD Writer eksternal, printer, dll.
</p>

<p>
Saat ini ada dua versi USB yang digunakan, yakni USB 1.1 dan USB 2.0. Karena
USB selalu memiliki kompatibilitas ke belakang dengan versi-versi sebelumnya,
USB 2.0 juga kompatibel dengan USB 1.1. Perangkat-perangkat USB baru biasanya
kompatibel dengan USB 2.0. USB 2.0 memiliki kecepatan transmisi data maksimal
sebesar 480 Mbps atau 60 MBps dan inilah yang menjadi perbedaan paling mendasar
antara kedua standar ini. Kelebihan lain dari USB adalah, perangkat-perangkatnya
<e>hot-pluggable</e>, yang berarti anda tidak perlu me-restart sistem anda untuk
menggunakannya.
</p>

</body>
</section>
<section>
<title>Pandangan Teknikal</title>
<body>

<p>
Sebelum kita beranjak ke opsi-opsi konfigurasi di kernel, kita perlu melihat
USB lebih mendalam lagi. Jika anda tergesa-gesa dan ingin melewati bagian ini,
silakan lanjut ke <uri link="#kernel">Konfigurasi Kernel</uri>.
</p>

<p>
Sistem USB memiliki sebuah host controller, hub, <e>root hub</e> di antara yang
lainnya dan dapat mendukung sampai 127 perangkat USB termasuk hub-nya. Host
controller tidak lain adalah antarmuka hardware antara perangkat USB dan sistem
operasi. Saat ini terdapat beberapa HCI (Host Controller Interface) yang
digunakan, yaitu OHCI (Open HCI) buatan Compaq, UHCI (Universal HCI)
dan EHCI (Enhanced HCI), keduanya buatan Intel. OHCI/UHCI adalah dua standar
industri untuk antarmuka USB 1.1, sedangkan EHCI untuk USB 2.0.
</p>

<p>
Pencipta hardware menyediakan sebuah antarmuka bagi programmer untuk interaksi
sistem dengan hardware yang dinamakan HCD atau Host Controller Device. Melalui
HCD ini, perangkat berinteraksi dengan software sistem. Diagram berikut ini
dapat mempermudah anda untuk memahaminya.
</p>

<pre caption="Arsitektur Umum USB">
<comment>(Software juga terdiri dari komponen lain seperti driver, tetapi
untuk kemudahan, tidak ditampilkan di sini)</comment>

    + ----  Hardware  ----   + ----  Software  ---- +
    |                        |                      |
    | [USB Dev] -+-> {EHCI} -+--->  ( EHCD )        |
    |            |           |                      |  User
    |            `-> {UHCI} -+--->  ( UHCD )        |
    |                        |                      |
    + ----  Hardware  ----   + ----  Software  ---- +
</pre>

<p>
Sebuah perangkat USB dapat menggunakan driver khusus atau menggunakan driver
yang sudah tersedia di sistem yang berdasar atas konsep <e>class device</e>.
Artinya, jika sebuah perangkat tergolong pada sebuah <e>class</e> tertentu,
maka perangkat lain yang tergolong pada <e>class</e> yang sama dapat
menggunakan driver yang sama. Beberapa dari <e>class</e> ini merupakan
<e>class</e> USB HID (Human Interface Devices) yang meliputi perangkat input
seperti keyboard dan mouse, class perangkat USB Mass Storage yang meliputi
pen drives, kamera digital, pemutar musik, dll, serta USB CDC (Communication
Devices Class) yang pada dasarnya meliputi modem-modem USB dan perangkat
semisalnya.
</p>

</body>
</section>
<section>
<title>Perangkat apa yang ada di komputer anda?</title>
<body>

<p>
Mengetahui apakah komputer anda memiliki dukungan USB 2.0 sangatlah mudah.
Kami menggunakan perintah <c>lspci</c> untuk ini.
</p>

<note>
Tool <c>lspci</c> merupakan bagian dari paket <c>sys-apps/pciutils</c>. Jika
anda belum menginstalnya, silakan <c>emerge pciutils</c>. Catat bahwa anda
harus menjadi root untuk menjalankan perintah <c>lspci</c>.
</note>

<pre caption="Outputlspci">
<comment>(Pada sistem dengan USB 1.1, hanya ada UHCI)</comment>

# <i>lspci -v | grep USB</i>
0000:00:04.2 USB Controller: Intel Corp. 82371AB/EB/MB PIIX4 USB (rev 01) (prog-if 00 [UHCI])

<comment>(Pada sistem dengan USB 2.0, terdapat EHCI dan UHCI)</comment>

00:1d.0 USB Controller: Intel Corp. 82801DB USB (Hub #1) (rev 01) (prog-if 00 [UHCI])
00:1d.1 USB Controller: Intel Corp. 82801DB USB (Hub #2) (rev 01) (prog-if 00 [UHCI])
00:1d.2 USB Controller: Intel Corp. 82801DB USB (Hub #3) (rev 01) (prog-if 00 [UHCI])
00:1d.7 USB Controller: Intel Corp. 82801DB USB EHCI Controller (rev 01) (prog-if 20 [EHCI])
</pre>

<p>
Jadi dengan menggunakan perintah <c>lspci</c>, kita bisa mengetahui apakah
sistem kita mendukung USB 2.0. Ini berguna karena kita akan mengaktifkan
opsi-opsi yang diperlukan di kernel.
</p>

</body>
</section>
</chapter>

<chapter id="kernel">
<title>Konfigurasi Kernel</title>
<section>
<title>Menginstal kernel</title>
<body>

<note>
Sejak rilis 2005.0, Gentoo Linux menggunakan kernel 2.6 sebagai kernel default.
Kecuali anda secara spesifik menggunakan profil 2.4, <c>gentoo-sources</c> akan
memberikan kernel 2.6 pada <e>kebanyakan</e> arsitektur. Periksa versi kernel
anda kemudian lanjutkan dengan konfigurasinya.
</note>

<p>
Pertama, emerge source kernel pilihan anda. Di sini kita akan menggunakan
<c>gentoo-sources</c>. Untuk info lebih lanjut tentang macam-macam source
kernel yang tersedia di Portage, silakan baca <uri
link="/doc/id/gentoo-kernel.xml">Panduan Kernel Gentoo Linux</uri>.
</p>

<pre caption="Instalasi source kernel">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Sekarang, mari kita lanjutkan dengan konfigurasi kernel.
</p>

<pre caption="Masuk ke source">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<note>
Contoh di atas menganggap bahwa symlink <path>/usr/src/linux</path> menunjuk ke
source kernel yang ingin anda gunakan. Periksa sebelum anda melanjutkan.
</note>

</body>
</section>
<section id="newkernelconfig">
<title>Opsi-opsi konfigurasi untuk 2.6.x</title>
<body>

<p>
Sekarang kita akan melihat beberapa opsi yang perlu kita aktifkan di kernel 2.6
untuk memastikan dukungan USB bagi perangkat-perangkat kita. Jika anda
menggunakan kernel 2.4, lanjutkan dengan <uri link="#oldkernelconfig">Opsi-opsi
konfigurasi untuk kernel 2.4.x</uri>.
</p>

<note>
Contoh-contoh pada dokumen ini menampilkan opsi-opsi konfigurasi untuk dukungan
dasar USB, juga dukungan lain yang biasanya diperlukan, mis. perangkat USB mass
storage (untuk kamera digital dan pen drive USB). Jika anda memiliki perangkat
USB tertentu yang perlu dikonfigurasi, bacalah manual perangkat anda atau cari
manualnya dari internet untuk mengetahui apakah perangkat anda telah didukung
oleh kernel atau perlu menggunakan driver khusus. Perlu dicatat bahwa untuk
kemudahan, semua contoh dikompilasi di dalam kernel. Jika anda ingin menggunakan
kernel modular, pastikan agar anda mencatat modul-modul yang anda perlukan lalu
mengubah file konfigurasi.
</note>

<pre caption="Opsi-opsi make menuconfig untuk kernel 2.6">
Device Drivers  ---&gt;
  SCSI device support  ---&gt;

<comment>(Walaupun SCSI tetap akan diaktifkan secara otomatis ketika USB Mass
Storage diaktifkan, kita perlu mengaktifkan dukungan disk.)</comment>
---   SCSI support type (disk, tape, CD-ROM)
&lt;*&gt;   SCSI disk support

<comment>(Pindah kembali ke level sebelumnya lalu masuk ke dukungan USB)</comment>
USB support  ---&gt;

<comment>(Ini adalah root hub dan diperlukan untuk dukungan USB. Jika anda lebih
suka menjadikannya sebagai modul, maka akan dinamakan usbcore.)</comment>
&lt;*&gt; Support for Host-side USB

<comment>(Aktifkan opsi ini agar anda dapat melihat perangkat USB anda di /proc/bus/usb.
Dianjurkan.)</comment>
 [*]   USB device filesystem

<comment>(Aktifkan paling tidak satu dari tiga HCD. Jika anda kurang yakin, anda
boleh mengaktifkan semuanya.)</comment>
--- USB Host Controller Drivers
&lt;*&gt; EHCI HCD (USB 2.0) support
&lt; &gt; OHCI HCD support
&lt;*&gt; UHCI HCD (most Intel and VIA) support

<comment>(Turun sedikit, kita beralih ke CDC dan mass storage.)</comment>
&lt; &gt; USB Modem (CDC ACM) support
&lt;*&gt; USB Printer support
&lt;*&gt; USB Mass Storage support

<comment>(Kemudian bagian HID. Anda perlu memilih dukungan HID input jika anda
memiliki keyboard USB, joystick atau perangkat input USB lainnya)</comment>
--- USB Input Devices
&lt;*&gt; USB Human Interface Device (full HID) support
 [*]   HID input layer support

<comment>(Jika anda memiliki kartu jaringan USB seperti RTL8150, anda memerlukan ini)</comment>
USB Network Adapters  --->
    &lt;*&gt; USB RTL8150 based ethernet device support (EXPERIMENTAL)

<comment>(Jika anda memiliki converter serial ke USB seperti Prolific 2303, anda memerlukan ini)</comment>
USB Serial Converter support  --->
    &lt;*&gt; USB Serial Converter support
    &lt;*&gt; USB Prolific 2303 Single Port Serial Driver (NEW)
</pre>

<p>
Setelah opsi-opsi anda diaktifkan, anda dapat mengkompilasi(-ulang) kernel anda
dan dukungan USB anda akan berfungsi ketika anda reboot ke kernel baru. Sekarang
anda dapat berlanjut ke <uri link="#postkern">Melihat Kerja USB</uri> dan lihat
apakah semuanya bekerja dengan semestinya.
</p>

</body>
</section>
<section id="oldkernelconfig">
<title>Opsi-opsi konfigurasi untuk kernel 2.4.x</title>
<body>

<p>
Sekarang kita akan melihat opsi-opsi apa saja yang perlu kita aktifkan di
kernel 2.4 untuk memastikan dukungan USB bagi perangkat-perangkat kita. Jika
anda menggunakan kernel 2.6, silakan ikuti <uri link="#newkernelconfig">Opsi-opsi
konfigurasi untuk kernel 2.6.</uri>.
</p>

<note>
Contoh-contoh pada dokumen ini menampilkan opsi-opsi konfigurasi untuk dukungan
dasar USB, juga dukungan lain yang biasanya diperlukan, mis. perangkat USB mass
storage (untuk kamera digital dan pen drive USB). Jika anda memiliki perangkat
USB tertentu yang perlu dikonfigurasi, bacalah manual perangkat anda atau cari
manualnya dari internet untuk mengetahui apakah perangkat anda telah didukung
oleh kernel atau perlu menggunakan driver khusus. Perlu dicatat bahwa untuk
kemudahan, semua contoh dikompilasi di dalam kernel. Jika anda ingin menggunakan
kernel modular, pastikan agar anda mencatat modul-modul yang anda perlukan lalu
mengubah file konfigurasi.
</note>

<pre caption="Opsi-opsi make menuconfig untuk kernel 2.4">
<comment>(Konfigurasi ini hanya untuk anda yang memiliki perangkat input USB.
dukungan input core nantinya akan diperlukan oleh USB HID.)</comment>
Input core support  ---&gt;
   &lt;*&gt; Input core support
   &lt; &gt;   Keyboard support
   &lt; &gt;   Mouse support
   &lt; &gt;   Event interface support

USB support  ---&gt;

<comment>(Ini adalah root hub dan diperlukan untuk dukungan USB.
Jika anda lebih suka menjadikannya sebagai modul, maka akan dinamakan usbcore.o)</comment>
&lt;*&gt; Support for USB

<comment>(Aktifkan opsi ini agar anda dapat melihat perangkat USB anda di /proc/bus/usb.
Dianjurkan.)</comment>
 [*]   Preliminary USB device filesystem

<comment>(Pilih paling tidak satu dari tiga HCD. Jika anda kurang yakin, anda dapat memilih semuanya.)</comment>
--- USB Host Controller Drivers
&lt;*&gt;   UHCI Alternate Driver (JE) support
&lt; &gt;   OHCI (Compaq, iMacs, OPTi, SiS, ALi, ...) support

<comment>(Ini merupakan seksi perangkat. Pilih hanya yang anda butuhkan.)</comment>
--- USB Device Class drivers
&lt; &gt;   USB Audio support
&lt;*&gt;   USB Mass Storage support
&lt; &gt;   USB Modem (CDC ACM) support
&lt;*&gt;   USB Printer support

<comment>(Diikuti dengan seksi HID. Ini diperlukan jika anda memiliki perangkat input USB.)</comment>
--- USB Human Interface Devices (HID)
&lt;*&gt;   USB Human Interface Device (full HID) support
 [*]     HID input layer support

<comment>(Jika anda memiliki converter serial ke USB seperti Prolific 2303, anda memerlukan ini)</comment>
USB Serial Converter support  --->
    &lt;*&gt; USB Serial Converter support
    &lt;*&gt; USB Prolific 2303 Single Port Serial Driver (NEW)
</pre>

<p>
Setelah opsi-opsi anda dipilih, anda dapat mengkompilasi(-ulang) kernel anda
dan dukungan USB akan berfungsi ketika anda reboot ke kernel baru.
</p>

</body>
</section>
</chapter>

<chapter id="postkern">
<title>Melihat kerja USB</title>
<section>
<title>dmesg adalah teman anda!</title>
<body>

<p>
Tiba saatnya untuk kita bermain dengan perangkat USB :) Jadi mari kita mulai.
Pada bagian ini, kita akan melihat bagaimana respon sistem terhadap berbagai
perangkat USB. Kita akan memulai dengan menancapkan Memory Stick/Pen Drive USB
512 MB. Anda boleh menggunakan perangkat mass storage yang mirip. Kita akan
menggunakan <c>dmesg</c> untuk melihat apa yang terjadi dan bagaimana sistem
merespon perangkat.
</p>

<note>
<c>dmesg</c> biasanya akan memberikan banyak output sebelum informasi yang
kita butuhkan, karena <c>dmesg</c> membaca buffer lingkaran kernel yang juga
memiliki pesan-pesan boot. Output pada contoh berikut ini hanya menampilkan
bagian-bagian yang diperlukan dan ditambah dengan spasi agar lebih mudah dibaca.
Jika diperlukan, anda boleh menggunakan perintah <c>dmesg | more</c> atau
<c>dmesg | less</c> untuk lebih mudah membacanya di sistem anda.
</note>

<pre caption="Output dmesg untuk Memory Stick">
<comment>(Tancapkan Memory Stick pada port USB yang tersedia, kemudian...)</comment>
# <i>dmesg | less</i>

<comment>(Perangkat digunakan sebagai USB 1.1 dan diberikan sebuah alamat.
Disebutkan juga HCD yang digunakan.)</comment>
usb 1-1: new full speed USB device using uhci_hcd and address 2

<comment>(Emulasi SCSI dijalankan secara otomatis)</comment>
scsi0 : SCSI emulation for USB Mass Storage devices
usb-storage: device found at 2

<comment>(Sekarang informasi perangkat termasuk nomor model telah didapatkan)</comment>
usb-storage: waiting for device to settle before scanning
  Vendor: JetFlash  Model: TS512MJF2A        Rev: 1.00
  Type:   Direct-Access                      ANSI SCSI revision: 02
SCSI device sda: 1003600 512-byte hdwr sectors (514 MB)

<comment>(Write-protect merupakan code EXPERIMENTAL di kernel-kernel baru)</comment>
sda: Write Protect is off
sda: Mode Sense: 0b 00 00 08
sda: assuming drive cache: write through
SCSI device sda: 1003600 512-byte hdwr sectors (514 MB)
/dev/scsi/host0/bus0/target0/lun0: p1
Attached scsi removable disk sda at scsi0, channel 0, id 0, lun 0
Attached scsi generic sg0 at scsi0, channel 0, id 0, lun 0,  type 0
usb-storage: device scan complete
<comment>(Pada saat ini, perangkat sudah dapat diakses dengan me-mount /dev/sda1)</comment>

<comment>(Ketika perangkat dicabut, sistem akan mengetahuinya)</comment>
usb 1-1: USB disconnect, address 2
</pre>

<p>
Ketika perangkat telah ditancapkan dan di-mount, anda dapat mengaksesnya
seperti harddisk biasa. Operasi-operasi seperti <c>cp</c>, <c>mv</c>,
<c>rm</c>, dll dapat digunakan dengan normal. Anda juga dapat menciptakan
filesystem (memformat)pada stik USB.
</p>

<pre caption="Mengakses Memory Stick">
# <i>mount /dev/sda1 /mnt/usb</i>
# <i>df -h</i>
Filesystem            Size  Used Avail Use% Mounted on
/dev/hda8             9.4G  7.5G  1.9G  80% /
/dev/hda9              11G  8.1G  2.4G  78% /usr
none                  189M     0  189M   0% /dev/shm
/dev/sda1             490M   34M  457M   7% /mnt/usb
</pre>

<note>
Kamera digital dapat diakses dengan cara yang sama seperti memory stick.
Penulis memiliki sebuah kamera Nikon Coolpix 5200 dan mengaksesnya dengan
cari tersebut di atas. Kamera-kamera sekarang biasanya memiliki dua modus
untuk men-transfer gambar; USB mass storage dan PTP (Picture Transfer Protocol).
Kamera penulis telah di-set ke modus USB mass storage, oleh karena itu
prosedurnya sama dengan mengakses memory stick. Perlu dicatat bahwa cara ini
belum tentu dapat digunakan pada semua kondisi dengan semua kamera digital yang
memiliki dukungan USB.
</note>

<p>
Bagaimana sebuah mouse USB akan ditampilkan? Mouse ini akan ditampilkan sebagai
perangkat HID.
</p>

<pre caption="USB Optical Mouse">
# <i>dmesg | grep USB</i>
drivers/usb/input/hid-core.c: v2.0:USB HID core driver
usb 1-1: new low speed USB device using address 2
input: USB HID v1.10 Mouse [Logitech USB-PS/2 Optical Mouse] on usb-0000:00:07.2-1
</pre>

<p>
Perintah lain yang dapat anda gunakan untuk melihat status port USB anda adalah
<c>lsusb</c> yang merupakan bagian dari <c>sys-apps/usbutils</c> dan akan kita
bicarakan pada bagian selanjutnya.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Userspace USB</title>
<section>
<title>Tool-tool Bagus</title>
<body>

<p>
Sejauh ini kita telah melihat banyaknya dukungan untuk USB di kernel/sistem
Linux. Sekarang kita akan kita akan melihat support macam apa yang disediakan
oleh Gentoo untuk USB di userspace.
</p>

<p>
Salah satu tool yang paling berguna adalah <c>lsusb</c>. Tool ini dapat
menampilkan semua perangkat USB yang terhubung ke sistem. Instalasinya sangat
mudah.
</p>

<pre caption="Instalasi usbutils">
# <i>emerge usbutils</i>
</pre>

<p>
Setelah terinstal, anda langsung dapat menjalankan <c>lsusb</c> untuk
mendapatkan info singkat tentang perangkat-perangkat yang tersambung ke
komputer anda.
</p>

<note>
Pada kebanyakan situasi, anda perlu menjadi root untuk menjalankan <c>lsusb</c>.
</note>

<warn>
<c>lsusb</c> membaca informasi untuk perangkat USB dari
<path>/proc/bus/usb</path>. Jika anda tidak mengaktifkan dukungan untuk ini
di kernel, kemungkinan besar <c>lsusb</c> tidak dapat bekerja sama sekali.
Pastikan agar anda memiliki dukungan filesystem <path>/proc</path> di kernel
dan <c>usbfs</c> telah di-mount di <path>/proc/bus/usb</path> (yang seharusnya
dijalankan secara otomatis).
</warn>

<pre caption="Kerja lsusb">
# <i>lsusb</i>
<comment>(Ini adalah 512 MB Memory Stick dari Transcend)</comment>
Bus 001 Device 003: ID 0c76:0005 JMTek, LLC. USBdisk
<comment>(Ini adalah Optical Mouse)</comment>
Bus 001 Device 002: ID 046d:c00e Logitech, Inc. Optical Mouse
<comment>(Ini adalah root hub)</comment>
Bus 001 Device 001: ID 0000:0000
</pre>

<p>
Jika anda adalah tipe orang yang suka melihat banyak informasi, anda boleh
menjalankan <c>lsusb -v</c>. Coba jalankan perintah ini dan lihatlah banyaknya
info yang diberikannya. Pilihan bagus yang lainnya adalah memerintahkan
<c>lsusb</c> untuk memberikan hierarki USB saat ini sebagai pohon agar pemetaan
perangkat-perangkatnya mudah dimengerti. Perintahnya adalah <c>lsusb -t</c>.
Sebagai contoh,
</p>

<pre caption="lsusb menampilkan hirarki USB">
# <i>lsusb -t</i>
Bus#  1
`-Dev#   1 Vendor 0x0000 Product 0x0000
  |-Dev#   2 Vendor 0x046d Product 0xc00e
  `-Dev#   3 Vendor 0x0c76 Product 0x0005
</pre>

<p>
Anda dengan mudah dapat menghubungkan output dari <c>lsusb</c> dan <c>lsusb
-t</c> untuk membantu anda memecahkan permasalahan USB dan mengerti cara
kerjanya.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Terima kasih kepada...</title>
<section>
<title>Sumber-sumber</title>
<body>

<p>
Sejumlah dokumentasi online telah membantu penulis selama pengembangan dokumen
ini, sebagian sangat teknikal tetapi menarik. Menurut penulis, mereka perlu
mendapatkan ucapan terima kasih.
</p>

<ul>
  <li><uri link="http://www.usb.org">The Official USB Website</uri></li>
  <li><uri link="http://www.usb.org/about/faq">The USB FAQ</uri></li>
  <li>
    <uri
    link="http://h18000.www1.hp.com/productinfo/development/openhci.html">Compaq's
    OHCI Standard</uri>
  </li>
  <li>
    <uri link="http://developer.intel.com/technology/usb/uhci11d.htm">Intel's
    UHCI Standard</uri>
  </li>
  <li>
    <uri link="http://www.intel.com/technology/usb/ehcispec.htm">Intel's EHCI
    Standard</uri>
  </li>
</ul>

</body>
</section>
<section>
<title>Link-link Menarik Lainnya</title>
<body>

<ul>
    <li><uri link="/doc/id/liveusb.xml">Panduan LiveUSB Gentoo Linux</uri></li>
</ul>

</body>
</section>
</chapter>
</guide>
