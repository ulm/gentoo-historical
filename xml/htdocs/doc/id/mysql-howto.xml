<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide disclaimer="obsolete" lang="id">
<title>Panduan MySQL</title>

<author title="Author">
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>
<author title="Editor">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Editor">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Translator">
  <mail link="kucrut.dz@gmail.com">Dzikri Aziz</mail>
</author>

<abstract>
Dokumen ini akan membantu anda menyiapkan dan menggunakan MySQL
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.5</version>
<date>2006-08-08</date>

<chapter>
<title>Berkenalan dengan MySQL</title>
<section>
<title>Latar Belakang</title>
<body>

<p>
MySQL adalah server database terkenal yang digunakan oleh berbagai aplikasi.
SQL adalah singkatan dari <e>(S)tructured (Q)uery (L)anguage</e>, yang
digunakan oleh MySQL untuk berkomunikasi dengan program lain. Selain itu, MySQL
memiliki fungsi SQL miliknya sendiri yang telah diperluas untuk menyediakan
fungsionalitas tambahan bagi penggunanya. Pada dokumen ini, kita akan
mempelajari cara melakukan instalasi dasar MySQL, menyiapkan database dan
tabel, serta menciptakan akun pengguna. Mari kita mulai dengan instalasi.
</p>

</body>
</section>
<section>
<title>Instalasi MySQL</title>
<body>

<p>
Pertama kita akan menginstal MySQL. Jika anda memerlukan fungsionalitas
tertentu dari MySQL, jangan lupa aktifkan flag USE yang sesuai.
</p>

<pre caption="Instalasi MySQL">
<comment>(Melihat flag USE)</comment>
# <i>emerge --pretend --verbose mysql</i>
<comment>(Instal MySQL)</comment>
# <i>emerge mysql</i>
</pre>

<p>
Ketika instalasi hampir selesai, anda akan mendapatkan pesan berikut:
</p>

<pre caption="Pesan einfo MySQL">
You might want to run:
"emerge --config =dev-db/mysql-[version]"
if this is a new install.
</pre>

<p>
Karena ini adalah instalasi baru, kita harus menjalankan perintah tersebut.
Tekan <c>ENTER</c> ketika diminta selama konfigurasi database MySQL.
Konfigurasi ini akan mengatur database utama MySQL yang berisi informasi
administratif seperti database, tabel, pengguna, perizinan, dll. Konfigurasi
ini menganjurkan anda untuk mengganti password root. Kita akan melakukannya,
jika tidak, seseorang dapat menjebol pengaturan default MySQL kita.
</p>

<pre caption="Konfigurasi MySQL">
<comment>(Gantikan [versi] dengan nomor versi yang baru saja anda instal)</comment>
# <i>emerge --config =dev-db/mysql-[versi]</i>
 * MySQL DATADIR is /var/lib/mysql
 * Press ENTER to create the mysql database and set proper
 * permissions on it, or Control-C to abort now...

   Preparing db table
   Preparing host table
   Preparing user table
   Preparing func table
   Preparing tables_priv table
   Preparing columns_priv table
   Installing all prepared tables

   To start mysqld at boot time you have to copy support-files/mysql.server
   to the right place for your system

   PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !
   To do so, issue the following commands to start the server
   and change the applicable passwords:
<comment>(Perhatikan baik-baik tiga baris berikut)</comment>
   /etc/init.d/mysql start
   /usr/bin/mysqladmin -u root -h pegasos password 'new-password'
   /usr/bin/mysqladmin -u root password 'new-password'
   Depending on your configuration, a -p option may be needed
   in the last command. See the manual for more details.

<comment>(Beberapa informasi non-ebuild MySQL kami hapus agar dokumen ini lebih konsisten)</comment>

   * For security reasons you should set your MySQL root
   * password as soon as possible.
</pre>

<impo>
Sejak mysql-4.0.24-r2, password harus ditentukan pada tahap konfigurasi agar
password root lebih aman.
</impo>

<p>
Skrip konfigurasi telah menampilkan perintah yang harus kita jalankan untuk
mengatur password, dan kita harus menjalankannya sekarang.
</p>

<pre caption="Mengatur password root MySQL">
# <i>/etc/init.d/mysql start</i>
 * Re-caching dependency info (mtimes differ)...
 * Starting mysqld (/etc/mysql/my.cnf) ...        [ ok ]
<comment>(Ganti password-baru dengan password yang anda inginkan)</comment>
# <i>/usr/bin/mysqladmin -u root -h localhost password 'password-baru'</i>
</pre>

<p>
Sekarang anda dapat menguji password baru anda dengan mencoba login ke server
MySQL:
</p>

<pre caption="Login ke server MySQL dengan mysql">
$ <i>mysql -u root -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 4 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
opsi <c>-u</c> menetapkan pengguna yang kita pakai untuk login. Opsi <c>-h</c>
menetapkan host. Ini biasanya <c>localhost</c>, kecuali anda sedang mengatur
server jauh. Terakhir, opsi <c>-p</c> memberitahukan MySQL bahwa anda akan
memasukkan password untuk mengakses database. Perhatikan prompt
<c>mysql&gt;</c>. Di sinilah tempat anda memasukkan semua perintah. Setelah
kita mendapatkan prompt mysql sebagai root, kita dapat mulai mengatur database.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Mengatur Database</title>
<section>
<title>Menciptakan Database</title>
<body>

<p>
Kita sudah login dan prompt mysql telah ditampilkan. Pertama mari kita lihat
database yang sudah kita miliki saat ini. Untuk melakukannya, gunakan perintah
<c>SHOW DATABASES</c>.
</p>

<pre caption="Menampilkan database MySQL">
mysql&gt; <i>SHOW DATABASES;</i>
+----------+
| Database |
+----------+
| mysql    |
| test     |
+----------+
2 rows in set (0.09 sec)
</pre>

<impo>
Perlu diingat bahwa perintah-perintah MySQL harus diakhiri dengan titik koma
(<c>;</c>)
</impo>

<p>
Walaupun database percobaan telah diciptakan, kita akan menciptakan database
kita sendiri. Perintah untuk menciptakan database adalah <c>CREATE
DATABASE</c>. Kita akan menciptakan database baru bernama "gentoo".
</p>

<pre caption="Menciptakan database gentoo">
mysql&gt; <i>CREATE DATABASE gentoo;</i>
Query OK, 1 row affected (0.08 sec)
</pre>

<p>
Respon akan memberitahukan anda bahwa perintah telah dijalankan tanpa hambatan.
Pada contoh ini, 1 baris telah dirubah. Ini adalah referensi ke database utama
mysql, yang berisi daftar seluruh database. Anda tidak perlu khawatir tentang
rincian detilnya. Angka menunjukkan secepat apa perintah dijalankan. Kita dapat
memeriksa database yang baru kita ciptakan dengan menjalanakan lagi perintah
<c>SHOW DATABASES</c>.
</p>

<pre caption="Memeriksa database">
mysql&gt; <i>SHOW DATABASES;</i>
+----------+
| Database |
+----------+
| gentoo   |
| mysql    |
| test     |
+----------+
3 rows in set (0.00 sec)
</pre>

<p>
Database kita ternyata telah diciptakan. Untuk membuat tabel baru bagi database
gentoo, kita harus menetapkannya sebagai database kita saat ini. Untuk
melakukannya, gunakan perintah <c>USE</c>. Perintah <c>USE</c> menetapkan nama
database yang ingin anda gunakan sebagai database saat ini. Pilihan lainnya
adalah menentukan database yang ingin kita gunakan dengan opsi <c>-D</c>. Mari
kita berpindah ke database gentoo.
</p>

<pre caption="Berpindah ke database baru">
mysql&gt; <i>USE gentoo;</i>
Database changed
</pre>

<p>
Database kita saat ini adalah database gentoo yang baru saja kita ciptakan.
Sekarang, kita dapat mulai membuat tabel dan mencantumkan informasi di
dalamnya.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Bekerja dengan Tabel di MySQL</title>
<section>
<title>Menciptakan Tabel</title>
<body>

<p>
Pada struktur MySQL, terdapat database, tabel, catatan, dan kolom. Database
berisi tabel, tabel berisi catatan, dan catatan berisi kolom, yang berisi
informasi yang sebenarnya. Dengan struktur ini, pengguna dapat memilih cara
yang ia inginkan untuk mengakses informasi. Sejauh ini kita sudah mencoba
membuat database, jadi sekarang mari kita coba membuat tabel. Pertama, tabel
dapat ditampilkan dengan perintah <c>SHOW TABLES</c>. Sekarang kita belum
memiliki tabel di dalam database gentoo, seperti ditunjukkan oleh hasil
perintah di bawah ini:
</p>

<pre caption="Database gentoo">
mysql&gt; <i>SHOW TABLES;</i>
Empty set (0.00 sec)
</pre>

<p>
Ini artinya kita harus membuat tabel. Untuk melakukannya, kita gunakan perintah
<c>CREATE TABLE</c>. Bagaimanapun juga, perintah ini sangat berbeda dengan
perintah <c>CREATE DATABASE</c>. Perintah ini menerima beberapa argumen.
Formatnya adalah sebagai berikut:
</p>

<pre caption="Sintaks CREATE TABLE">
CREATE TABLE [nama_tabel] ([nama_kolom] [tipe_data_kolom]([ukuran]));
</pre>

<p>
<b>nama_tabel</b> adalah nama tabel yang akan kita ciptakan. Pada contoh ini,
mari kita ciptakan tabel dengan nama <c>developers</c>. Tabel ini akan diisi
dengan nama-nama para pengembang, beserta alamat e-mail dan pekerjaannya
masing-masing. <b>nama_kolom</b> akan diisi dengan nama kolom. Kita memerlukan
tiga nama pada contoh ini: nama, e-mail, dan pekerjaan. <b>tipe_data_kolom</b>
adalah tipe informasi yang akan disimpan. Tersedia beberapa format yang bisa
anda ketahui dari <uri
link="http://dev.mysql.com/doc/mysql/en/column-types.html">Halaman Tipe Kolom
MySQL</uri>. Untuk contoh ini, kita akan menggunakan tipe data <c>VARCHAR</c>
untuk semua kolom. <c>VARCHAR</c> adalah salah satu tipe data yang paling
sederhana untuk informasi dalam bentuk kalimat biasa. <b>ukuran</b> adalah
jumlah banyaknya data yang boleh disimpan oleh sebuah kolom. Pada contoh ini,
kita akan menggunakan 128. Artinya, kolom tersebut akan berisi data
<c>VARCHAR</c> yang berukuran 128 byte. Untuk sementara anda boleh menganggap
ukuran ini sama dengan 128 karakter, tetapi ada penjelasan yang lebih teknikal
yang bisa anda ketahui dari website di atas. Sekarang kita ciptakan tabel baru
kita.
</p>

<pre caption="Menciptakan tabel">
mysql&gt; <i>CREATE TABLE developers ( nama VARCHAR(128), email VARCHAR(128), pekerjaan  VARCHAR(128));</i>
Query OK, 0 rows affected (0.11 sec)
</pre>

<p>
Sepertinya tabel kita telah diciptakan tanpa hambatan. Mari kita periksa dengan
perintah <c>SHOW TABLES</c>:
</p>

<pre caption="Memeriksa tabel">
mysql&gt; <i>SHOW TABLES;</i>
+------------------+
| Tables_in_gentoo |
+------------------+
| developers       |
+------------------+
1 row in set (0.00 sec)
</pre>

<p>
Ya, itu dia tabel baru kita. Bagaimanapun juga, tabel tersebut kelihatannya
belum berisi informasi apapun. Untuk melihat isinya, kita gunakan perintah
<c>DESCRIBE</c> (atau bisa disingkat dengan <c>DESC</c>), yang menerima nama
tabel sebagai argumennya. Mari kita coba.
</p>

<pre caption="Describing our developers table">
mysql&gt; <i>DESCRIBE developers;</i>
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| name  | varchar(128) | YES  |     | NULL    |       |
| email | varchar(128) | YES  |     | NULL    |       |
| job   | varchar(128) | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+
3 rows in set (0.00 sec)
</pre>

<p>
Perintah tadi menampilkan semua kolom berikut tipenya masing-masing, juga
beberapa atribut yang tidak dijelaskan pada panduan ini. Bacalah <uri
link="http://dev.mysql.com/doc/mysql/en/">Manual Referensi MySQL</uri> untuk
mengetahuinya. Sekarang mari kita isi tabel kita.
</p>

</body>
</section>
<section>
<title>Mengisi Database MySQL</title>
<body>

<p>
Perintah untuk mengisi tabel (atau menambahkan data) adalah <c>INSERT</c>.
Seperti halnya perintah <c>CREATE TABLE</c>, perintah ini juga memiliki format
khusus:
</p>

<pre caption="Sintaks INSERT">
INSERT INTO tabel (col1, col2, ...) VALUES('value1', 'value2', ...);
</pre>

<p>
Perintah ini digunakan untuk menambahkan catatan di dalam tabel. <b>tabel</b>
adalah nama tabel yang ingin kita isi dengan informasi. Nama tabel boleh
diikuti dengan daftar kolom yang ingin anda isikan informasi dan
<c>VALUES()</c> berisi informasi yang ingin anda tambahkan. Anda boleh saja
tidak mencantumkan daftar kolom jika anda menambahkan informasi untuk setiap
kolom dan jika anda menuliskan informasi tersebut dengan urutan yang sama
seperti anda mendefinisikan kolom. Pada contoh ini, kita akan menambahkan data
ke tabel developers.
</p>

<pre caption="Menambahkan informasi ke dalam tabel developers">
mysql&gt; <i>INSERT INTO developers VALUES('Joe Smith', 'joesmith@gentoo.org', 'toolchain');</i>
Query OK, 1 row affected (0.06 sec)
<comment>(Jika anda tidak mengetahui urutan kolom di dalam tabel atau ingin memasukkan informasi yang tidak lengkap</comment>
mysql&gt; <i>INSERT INTO developers (job, name) VALUES('outsourced', 'Jane Doe');</i>
Query OK, 1 row affected (0.01 sec)
</pre>

<p>
Menurut hasil yang ditampilkan, kelihatannya informasi telah ditambahkan dengan
benar. Bagaimana jika kita ingin menambahkan lebih dari satu informasi? Di
sinilah kita perlu menggunakan perintah <c>LOAD DATA</c>. Perintah ini akan
memuat data dari file yang dipisahkan dengan tab. Mari kita coba dengan
mengedit sebuah file di direktori home. Kita namakan file ini
<path>records.txt</path>. Berikut adalah contohnya:
</p>

<pre caption="~/records.txt">
John Doe	johndoe@gentoo.org	portage
Chris White	chriswhite@gentoo.org	documentation
Sam Smith	samsmith@gentoo.org	amd64
</pre>

<impo>
Pastikan anda memahami data yang ingin anda tambahkan. Akan sangat tidak aman
jika anda menggunakan <c>LOAD DATA</c> jika anda tidak memahami isi file!
</impo>

<p>
Perintah <c>LOAD DATA</c> akan cukup panjang jika harus dijelaskan, lebih baik
kita gunakan bentuk yang paling sederhana di sini.
</p>

<pre caption="Sintaks LOAD DATA">
LOAD DATA LOCAL INFILE '/path/ke/namafile' INTO TABLE tabel;
</pre>

<p>
<path>/path/ke/namafile</path> adalah direktori dan nama file yang akan kita
gunakan. <b>tabel</b> adalah nama tabel yang ingin kita edit. Pada contoh ini,
kita menggunakan file <path>~/records.txt</path> dan tabel developers.
</p>

<pre caption="Mengisi data">
mysql&gt; <i>LOAD DATA LOCAL INFILE '~/records.txt' INTO TABLE developers;</i>
Query OK, 3 rows affected (0.00 sec)
Records: 3  Deleted: 0  Skipped: 0  Warnings: 0
</pre>

<impo>
Jika anda mendapatkan masalah, pastikan kolom-kolom anda dipisahkan dengan tab.
Jika anda menyalin informasi ke file input dari sumber lain, mungkin tab telah
dirubah ke spasi.
</impo>

<p>
Berhasil. Namun, ini baru mengisi data, dan anda belum mendapatkan kendali
terhadap MySQL. Banyak aplikasi web yang menggunakan skrip SQL untuk mengatur
MySQL dengan cepat dan mudah. Jika anda ingin menggunakan skrip SQL, anda harus
menjalankan MySQL dalam modus <e>batch</e>, atau <e>source</e> skrip tersebut.
Berikut ini contoh cara melakukannya:
</p>

<pre caption="MySQL dalam modus batch">
$ <i>mysql -u root -h localhost -p &lt; filesql</i>
</pre>

<p>
Seperti <c>LOAD DATA</c>, pastikan anda mengerti apa yang akan dilakukan oleh
<path>filesql</path>. <b>Jika tidak, database anda akan mudah dijebol!</b> Cara
lainnya adalah dengan menjalankan perintah mysql dari file sql ketika berada di
modus interaktif. Berikut cara melakukannya:
</p>

<pre caption="Men-source file sql">
mysql&gt; <i>source filesql;</i>
</pre>

<p>
Jika anda mendapatkan aplikasi web yang meminta anda untuk menjalankan file
sql, dua perintah di atas dapat anda gunakan untuk melakukannya. Tabel kita
sudah siap, jadi bagaimana cara memeriksa kolom? Kita lakukan ini dengan
melakukan pencarian pada tabel.
</p>

</body>
</section>
<section>
<title>Menjelajahi Tabel MySQL dengan Query</title>
<body>

<p>
<e>Query</e> adalah salah satu fitur utama database SQL. Dengannya anda akan
dibantu untuk menjadikan tabel anda bermanfaat. Kebanyakan query dilakukan
dengan perintah <c>SELECT</c>. Perintah ini cukup rumit, dan kita hanya akan
mempelajari tiga bentuk utamanya.
</p>

<pre caption="Bentuk-bentuk SELECT">
<comment>(Memilih sebuah entri di dalam tabel)</comment>
SELECT * FROM tabel;
<comment>(Memilih entri tertentu)</comment>
SELECT * FROM tabel WHERE field=value;
<comment>(Memilih kolom tertentu)</comment>
SELECT field1,field2,field3 FROM tabel [WHERE field=value];
</pre>

<p>
Mari kita lihat bentuk pertama. Bentuk ini cukup sederhana dan akan menampilkan
tabel anda secara menyeluruh.
</p>

<pre caption="Isi tabel">
mysql&gt; <i>SELECT * FROM developers;</i>
+-------------+-----------------------+----------------+
| name        | email                 | job            |
+-------------+-----------------------+----------------+
| Joe Smith   | joesmith@gentoo.org   | toolchain      |
| John Doe    | johndoe@gentoo.org    | portage        |
| Chris White | chriswhite@gentoo.org | documentation  |
| Sam Smith   | samsmith@gentoo.org   | amd64          |
| Jane Doe    | NULL                  | Outsourced job |
+-------------+-----------------------+----------------+
5 rows in set (0.00 sec)
</pre>

<p>
Kita lihat bahwa kedua data yang kita masukkan dengan <c>INSERT</c> dan
<c>LOAD DATA</c> sudah ada. Sekarang, katakanlah kita hanya ingin melihat
catatan tentang Chris White. Kita dapat melakukannya dengan bentuk kedua dari
<c>SELECT</c> seperti berikut ini.
</p>

<pre caption="Memilih catatan tertentu dengan SELECT">
mysql&gt; <i>SELECT * FROM developers WHERE name = 'Chris White';</i>
+-------------+-----------------------+---------------+
| name        | email                 | job           |
+-------------+-----------------------+---------------+
| Chris White | chriswhite@gentoo.org | documentation |
+-------------+-----------------------+---------------+
1 row in set (0.08 sec)
</pre>

<p>
Seperti yang kita harapkan, entri yang kita cari dipilih. Sekarang, katakanlah
kita hanya ingin mengetahui pekerjaan dan alamat email-nya, bukan namanya. Kita
dapat melakukannya dengan bentuk ketiga dari <c>SELECT</c> seperti berikut.
</p>

<pre caption="Memilih kolom tertentu dengan SELECT">
mysql> <i>SELECT email,job FROM developers WHERE name = 'Chris White';</i>
+-----------------------+---------------+
| email                 | job           |
+-----------------------+---------------+
| chriswhite@gentoo.org | documentation |
+-----------------------+---------------+
1 row in set (0.04 sec)
</pre>

<p>
Metode pemilihan ini jauh lebih mudah diatur, terutama jika informasinya banyak
sekali, seperti yang akan kita lihat nanti. Untuk saat ini, sebagai root mysql,
kita mendapatkan hak penuh untuk melakukan apapun yang kita inginkan dengan
database MySQL. Pada sebuah lingkungan server, seorang pengguna yang
mendapatkan hak seperti ini bisa mendatangkan masalah. Untuk mengendalikan
siapa saja yang boleh melakukan apa saja dengan database, kita harus mengatur
perizinan.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Perizinan MySQL</title>
<section>
<title>Memberikan Izin dengan GRANT</title>
<body>

<p>
Perizinan adalah cara akses yang dimiliki oleh seorang pengguna terhadap
database, tabel, atau apapun juga. Sekarang di database gentoo, hanya akun root
MySQL yang dapat mengaksesnya, disebabkan oleh perizinan yang kita tetapkan
pada database tersebut. Sekarang, mari kita ciptakan dua akun pengguna biasa,
"guest" dan "admin", yang akan diizinkan untuk mengakses database gentoo dan
mengubah informasi di dalamnya. Akun guest akan mendapatkan hak terbatas,
sedangkan admin akan mendapatkan hak yang sama dengan root, tetapi hanya untuk
database gentoo (bukan untuk seluruh database utama MySQL). Sebelum kita
memulai, mari kita lihat dahulu format sederhana dari perintah <c>GRANT</c>.
</p>

<pre caption="Sintaks GRANT">
GRANT [privileges] ON database.* TO '[user]'@'[host]' IDENTIFIED BY '[password]';
</pre>

<note>
<c>GRANT</c> dianggap sebagai cara untuk menciptakan akun pengguna. Namun
versi-versi baru MySQL berisi fungsi <c>CREATE_USER</c>, walaupun <c>GRANT</c>
masih lebih disukai.
</note>

<p>
Yang pertama adalah hak yang akan kita tetapkan. Dengan apa yang telah kita
pelajari sejauh ini, berikut adalah beberapa hak yang dapat anda tetapkan:
</p>

<ul>
  <li><c>ALL</c> - Memberikan kendali penuh terhadap database</li>
  <li><c>CREATE</c> - Mengizinkan pengguna untuk membuat tabel</li>
  <li><c>SELECT</c> - Mengizinkan pengguna untuk melihat tabel</li>
  <li><c>INSERT</c> - Mengizinkan pengguna untuk menambahkan data pada tabel</li>
  <li><c>SHOW DATABASES</c> - Mengizinkan pengguna untuk melihat daftar database</li>
  <li><c>USAGE</c> - Tidak memberikan hak apa-apa</li>
  <li><c>GRANT OPTION</c> - Mengizinkan pengguna untuk memberi izin</li>
</ul>

<note>
Jika anda menggunakan MySQL untuk menghubungkan data dengan aplikasi web, anda
hanya membutuhkan <c>CREATE</c>, <c>SELECT</c>, <c>INSERT</c> (dijelaskan di
sini), <c>DELETE</c> dan <c>UPDATE</c> (untuk penjelasan lebih lengkap, bacalah
seksi <uri link="http://dev.mysql.com/doc/mysql/en/grant.html">MySQL Reference
Manual - GRANT and REVOKE Syntax</uri>). Banyak pengguna yang melakukan
kesalahan dengan memberikan hak penuh ketika tidak benar-benar diperlukan. Anda
sebaiknya berkonsultasi dengan pengembang aplikasi untuk memastikan apakah hak
penuh harus diberikan.
</note>

<p>
Untuk "admin", kita akan memberikan ALL. Untuk "user", <c>SELECT</c> sudah
cukup untuk mendapatkan hak akses <e>read-only</e>. "database" adalah database
yang akan kita izinkan penggunaannya. Pada contoh ini, database yang kita
gunakan adalah gentoo. <c>.*</c> berarti semua database. Jika ingin, anda dapat
menetapkan akses per tabel. "user" adalah nama pengguna dan host adalah nama
host yang akan digunakan oleh pengguna untuk mengakses. Pada kebanyakan kasus,
host dapat diisi dengan localhost. Terakhir, password adalah password pengguna.
Dengan semua informasi tersebut, mari kita ciptakan akun pengguna.
</p>

<pre caption="Menciptakan akun admin dan guest">
<comment>(admin)</comment>
mysql&gt; <i>GRANT ALL ON gentoo.* TO 'admin'@'localhost' IDENTIFIED BY 'password';</i>
<comment>(guest)</comment>
mysql&gt; <i>GRANT SELECT ON gentoo.* TO 'guest'@'localhost' IDENTIFIED BY 'password';</i>
</pre>

<p>
Selanjutnya, mari kita uji. Pertama kita keluar dari mysql dengan mengetikkan
<c>quit</c> di prompt:
</p>

<pre caption="Keluar dari MySQL">
mysql&gt; <i>quit</i>
</pre>

<p>
Sekarang kita sudah berada di konsol. Langkah selanjutnya adalah melihat apa
saja yang dapat dilakukan oleh akun pengguna yang baru kita ciptakan.
</p>

</body>
</section>
<section>
<title>Menguji Perizinan Pengguna</title>
<body>

<p>
Sekarang kita akan mencoba login sebagai "guest". Saat ini ia hanya memiliki
hak <c>SELECT</c>. Pada dasarnya ini berarti, ia hanya dapat melakukan
pencarian saja.
</p>

<pre caption="Login dengan akun guest">
$ <i>mysql -u guest -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 6 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
Sekarang kita coba keterbatasannya. Mari kita berpindah ke database gentoo:
</p>

<pre caption="Berpindah ke database gentoo">
mysql&gt; <i>USE gentoo;</i>
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
</pre>

<p>
Sekarang kita akan mencoba untuk melakukan sesuatu yang seharusnya tidak boleh
kita lakukan. Kita akan mencoba untuk membuat sebuah tabel.
</p>

<pre caption="Mencoba membuat tabel dengan akun guest">
mysql&gt; <i>CREATE TABLE test (test VARCHAR(20), foobar VARCHAR(2));</i>
ERROR 1044: Access denied for user: 'guest@localhost' to database 'gentoo'
</pre>

<p>
Seperti yang dapat anda lihat, percobaan kita gagal, karena akun yang kita
gunakan tidak memiliki hak untuk melakukannya. Walaupun begitu, satu akses yang
kita miliki adalah statemen <c>SELECT</c>. Mari kita coba:
</p>

<pre caption="Mencoba menggunakan SELECT">
mysql&gt; <i>SELECT * FROM developers;</i>
+-------------+-----------------------+----------------+
| name        | email                 | job            |
+-------------+-----------------------+----------------+
| Joe Smith   | joesmith@gentoo.org   | toolchain      |
| John Doe    | johndoe@gentoo.org    | portage        |
| Chris White | chriswhite@gentoo.org | documentation  |
| Sam Smith   | samsmith@gentoo.org   | amd64          |
| Jane Doe    | NULL                  | Outsourced job |
+-------------+-----------------------+----------------+
5 rows in set (0.00 sec)
</pre>

<p>
Percobaan kita sukses, dan kita sudah mengetahui kegunaan dari perizinan. Kita
juga telah membuat akun "admin". Akun kita buat untuk melihat bahwa pengguna
yang telah diberikan semua akses pun masih memiliki keterbatasan. Keluarlah
dari MySQL dan login sebagai "admin".
</p>

<pre caption="Login sebagai admin">
mysql&gt; <i>quit</i>
Bye
$ <i>mysql -u admin -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 7 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
Untuk memulai, kita akan mencoba untuk menciptakan database baru dengan
menggunakan akun admin. Akun ini akan mendapatkan akses yang hampir sama dengan
akses yang dimiliki oleh akun root MySQL, dan dapat melakukan semua bentuk
perubahan terhadap database gentoo. Kita akan mencoba akses admin terhadap
database MySQL. Ingat bahwa kita hanya memberikan hak penuh bagi akun ini untuk
database tertentu.
</p>

<pre caption="Mencoba menciptakan database baru">
mysql&gt; <i>CREATE DATABASE gentoo2;</i>
ERROR 1044: Access denied for user: 'admin@localhost' to database 'gentoo2'
</pre>

<p>
Tentu saja, akun admin tidak dapat menciptakan database baru di dalam database
utama MySQL, walaupun ia memiliki hak penuh atas database gentoo. Walaupun
begitu, kita masih dapat menggunakan akun ini untuk melakukan modifikasi pada
database gentoo, seperti yang ditunjukkan oleh contoh berikut ini.
</p>

<pre caption="Hak admin atas database gentoo">
mysql&gt; <i>USE gentoo;</i>
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; <i>INSERT INTO developers VALUES('Bob Simmons', 'bobsimmons@gentoo.org', 'python');</i>
Query OK, 1 row affected (0.08 sec)
</pre>

<p>
Akun admin memiliki akses tak terbatas pada database gentoo. Tetapi terkadang
kita ingin mencabut kembali hak akses yang telah kita berikan kepada seorang
pengguna. Ini bisa disebabkan oleh pengguna atau karyawan yang nakal. Mari kita
lihat cara melakukannya dengan perintah <c>REVOKE</c>.
</p>

</body>
</section>
<section>
<title>Mencabut hak akses dengan perintah REVOKE</title>
<body>

<p>
Dengan perintah <c>REVOKE</c> kita dapat mencabut hak yang telah kita berikan
kepada seorang pengguna. Kita dapat mencabut seluruh hak akses atau hanya hak
akses tertentu saja. Malahan, format perintah ini sangat mirip dengan format
perintah <c>GRANT</c>.
</p>

<pre caption="Sintaks REVOKE">
REVOKE [privileges] ON database.* FROM '[user]'@'[host]';
</pre>

<p>
Opsi-opsi yang digunakan di sini telah dijelaskan di bagian perintah
<c>GRANT</c>. Namun pada bagian ini, kita akan mencabut seluruh hak akses dari
seorang pengguna. Katakanlah kita menemukan bahwa akun guest telah menyebabkan
masalah keamanan sehingga kita memutuskan untuk mencabut seluruh haknya.
Kita harus login sebagai root untuk melakukannya.
</p>

<pre caption="Mencabut hak pengguna">
mysql&gt; <i>REVOKE ALL ON gentoo.* FROM 'guest'@'localhost';</i>
Query OK, 0 rows affected (0.00 sec)
</pre>

<note>
Pada contoh ini, hak akses yang dimiliki sangat sederhana, sehingga pencabutan
hak per database tidak menjadi masalah. Namun begitu, pada kasus yang lebih
rumit, anda mungkin lebih baik menggunakan <c>*.*</c> daripada <c>gentoo.*</c>
untuk mencabut hak akses pengguna dari semua database.
</note>

<p>
Sekarang kita keluar dari MySQL untuk mencoba login kembali dengan akun guest.
</p>

<pre caption="Mencoba login dengan akun guest">
$ <i>mysql -u guest -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 9 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
Walaupun kita berhasil login, semua akses atas database telah dicabut.
</p>

<pre caption="Hak akses akun guest yang telah dicabut">
mysql&gt; <i>USE gentoo;</i>
ERROR 1044: Access denied for user: 'guest@localhost' to database 'gentoo'
</pre>

<p>
Akhirnya pengguna bermasalah kita sudah tidak lagi dapat mengakses database
gentoo. Perlu dicatat bahwa pengguna ini masih bisa login, karena belum kita
hapus dari database utama MySQL. Sekarang kita lihat cara menghapus akun dan
tabel pengguna dengan perintah <c>DELETE</c>.
</p>

</body>
</section>
<section>
<title>Menghapus akun dengan DELETE</title>
<body>

<p>
Tabel user MySQL adalah daftar yang berisi semua pengguna dan informasinya.
Pastikan anda sudah login root, kemudian gunakan database utama MySQL.
</p>

<pre caption="Menggunakan database utama mysql">
mysql&gt; <i>USE mysql;</i>
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt;
</pre>

<p>
Mari kita lihat tabel yang dimiliki oleh database mysql:
</p>

<pre caption="Daftar tabel database mysql">
mysql&gt; <i>SHOW TABLES;</i>
+-----------------+
| Tables_in_mysql |
+-----------------+
| columns_priv    |
| db              |
| func            |
| host            |
| tables_priv     |
| user            |
+-----------------+
6 rows in set (0.00 sec)
</pre>

<p>
Tabel "user" adalah tabel yang kita tuju. Namun begitu, tabel ini berisi 30
kolom yang menyulitkan kita ketika membacanya. Untuk mempermudah, kita akan
menggunakan versi ketiga dari statemen <c>SELECT</c>. Kolom yang kita tuju
adalah "Host" dan "User".
</p>

<pre caption="Mencari akun guest di tabel user">
mysql&gt; <i>SELECT Host,User FROM user WHERE User = 'guest';</i>
+-----------+-------+
| Host      | User  |
+-----------+-------+
| localhost | guest |
+-----------+-------+
1 row in set (0.00 sec)
</pre>

<p>
Setelah kita mendapatkan informasi yang kita perlukan, kita dapat menghapus
akun tersebut dengan perintah <c>DELETE</c> yang sintaksnya adalah sebagai
berikut:
</p>

<pre caption="Sintaks DELETE">
DELETE FROM table WHERE field='value';
</pre>

<p>
Anda mungkin menyadari bahwa sintaks <c>DELETE</c> mirip dengan sintaks
<c>SELECT</c>. Pada contoh ini, kolomnya adalah "User" dan nilainya adalah
"guest". Kita akan menghapus catatan tentang akun guest dari tabel user.
</p>

<pre caption="Menghapus akun guest">
mysql&gt; <i>DELETE FROM user WHERE User='guest';</i>
Query OK, 1 row affected (0.07 sec)
<comment>(FLUSH PRIVILEGES diperlukan untuk memperbarui perizinan pengguna)</comment>
mysql&gt; <i>FLUSH PRIVILEGES;</i>
Query OK, 0 rows affected (0.00 sec)
</pre>

<p>
Kelihatannya semua berjalan dengan lancar. Mari kita uji dengan login sebagai
guest.
</p>

<pre caption="Mencoba login dengan akun guest">
mysql&gt; <i>quit</i>
Bye
$ <i>mysql -u guest -h localhost -p</i>
Enter password:
ERROR 1045: Access denied for user: 'guest@localhost' (Using password: YES)
</pre>

<p>
Akun telah dihapus dengan sukses!
</p>

</body>
</section>
<section>
<title>Kesimpulan</title>
<body>

<p>
Walaupun pendauan ini hanya menjelaskan cara menyiapkan MySQL dengan baris
perintah, terdapat beberapa alternatif dalam bentuk GUI yang dapat anda
gunakan:
</p>

<ul>
  <li>
    <uri link="http://www.phpmyadmin.net/home_page/">phpMyAdmin</uri> - Alat
    administrasi MySQL terkenal berbasis php
  </li>
  <li>
    <uri
    link="http://sourceforge.net/projects/mysqlnavigator/">mysqlnavigator</uri>
    - Frontend MySQL berbasis Qt
  </li>
  <li>
    <uri link="http://gmyclient.sourceforge.net/">gmyclient</uri> - Klien MySQL
    GNOME
  </li>
  <li>
    <uri link="http://www.knoda.org/">knoda</uri> - Klien MySQL KDE</li>
</ul>

<p>
Sampai di sini panduan pengenalan MySQL. Kami harap anda mendapatkan pemahaman
yang lebih baik tentang dasar-dasar MySQL dan dapat menyiapkan database anda.
Jika anda memiliki komentar, jangan sungkan-sungkan untuk mengirimkan email
kepada penulis di <mail>chriswhite@gentoo.org</mail>.
</p>

</body>
</section>
</chapter>
</guide>
