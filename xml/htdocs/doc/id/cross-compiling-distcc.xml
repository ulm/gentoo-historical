<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: cross-compiling-distcc.xml,v 1.2 2012/04/18 18:30:24 swift Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="id">
<title>Panduan Cross-compiling DistCC</title>

<author title="Author">
  <mail link="agaffney@gentoo.org">Andrew Gaffney</mail>
</author>
<author title="Editor">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Translator">
  <mail link="kucrut.dz@gmail.com">Dzikri Aziz</mail>
</author>

<abstract>
Panduan ini berisi cara men-setup distcc untuk cross-compiling dengan beberapa
arsitektur prosesor yang berbeda.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.3</version>
<date>2006-02-17</date>

<chapter>
<title>Cross-compiling dengan distcc</title>
<section>
<title>Pendahuluan</title>
<body>

<p>
<c>distcc</c> merupakan sebuah utilitas yang dapat membantu anda untuk membagi
kompilasi software pada beberapa komputer di sebuah jaringan. Selama
komputer-komputer pada jaringan ini menggunakan toolchain yang dibangun dengan
arsitektur prosesor yang sama, tidak ada setup khusus <c>distcc</c> yang
diperlukan. Tetapi bagaimana jika anda ingin mengkompilasi sebuah software
untuk arsitektur lain? Dokumen ini akan memandu anda cara mengkonfigurasi
<c>distcc</c> untuk kompilasi bagi arsitektur yang berbeda.
</p>

</body>
</section>
<section>
<title>Emerge utilitas yang diperlukan</title>
<body>

<p>
Pertama, anda perlu menginstal <c>crossdev</c> pada seluruh komputer yang akan
ikut serta dalam proses kompilasi. <c>crossdev</c> merupakan sebuah utilitas
yang mempermudah pembangunan toolchain lintas-arsitektur. Utilitas ini pada
awalnya ditulis oleh <mail link="kumba@gentoo.org">Joshua Kinard</mail> lalu
ditulis ulang dari awal oleh <mail link="vapier@gentoo.org">Mike Frysinger</mail>.
Penggunaannya sangat mudah: <c>crossdev -t sparc</c> akan membangun sebuah
cross-toolchain lengkap yang menargetkan arsitektur Sparc. Ini berisi binutils,
gcc, glibc, dan linux-headers. Jika anda memerlukan bantuan, jalankan
<c>crossdev --help</c>. Pastinya, anda perlu meng-emerge cross-toolchain yang
sesuai pada seluruh komputer yang ikut serta.
</p>

<p>
Kemudian, anda perlu meng-emerge <c>distcc</c> pada seluruh komputer yang akan
ikut serta. Ini termasuk komputer yang akan menjalankan emerge dan komputer
yang memiliki cross-compiler. Silahkan membaca <uri
link="/doc/id/distcc.xml">Dokumentasi Distcc Gentoo</uri> untuk info tentang
setup dan penggunaan <c>distcc</c>.
</p>

</body>
</section>
<section>
<title>Catatan Khusus Arsitektur</title>
<body>

<p>
Jika anda melakukan cross-compiling di antara subarsitektur dari Intel x86,
(mis. i586 and i686), anda tetap perlu membangun sebuah cross-toolchain lengkap
untuk CHOST yang anda inginkan, jika tidak kompilasi akan gagal. Hal ini
karena i586 dan i686 merupakan CHOST yang berbeda, walaupun keduanya dianggap
"x86." Harap selalu mengingat ini ketika anda membangun  cross-toolchain anda.
Sebagai contoh, jika komputer target adalah i586, berarti anda harus membangun
cross-toolchain pada komputer i686 pembantu anda.
</p>

</body>
</section>
<section>
<title>Mengkonfigurasi distcc untuk cross-compile dengan benar</title>
<body>

<p>
Pada setup default distcc, cross-compiling <e>tidak</e> akan bekerja dengan
benar. Persoalannya adalah, banyak proses build yang hanya memanggil <c>gcc</c>
bukannya nama lengkap compiler (mis. <c>sparc-unknown-linux-gnu-gcc</c>).
Ketika kompilasi ini didistribusikan pada komputer pembantu, yang dipanggil
adalah compiler asli, bukannya cross-compiler anda.
</p>

<p>
Untungnya, ada solusi untuk masalah kecil ini. Yang anda butuhkan adalah sebuah
skrip wrapper dan beberapa symlink pada komputer yang akan menjalankan
<c>emerge</c>. Penulis akan menggunakan komputer Sparc sebagai contoh.
Kapanpun anda melihat <c>sparc-unknown-linux-gnu</c> di bawah ini, anda perlu
menggantinya dengan CHOST anda (mis. <c>x86_64-pc-linux-gnu</c> untuk AMD64).
Ketika anda pertama kali menginstal distcc, direktori
<path>/usr/lib/distcc/bin</path> akan terlihat seperti ini:
</p>

<note>
Langkah-langkah berikut ini hanya perlu dilakukan pada komputer yang menjalankan
emerge. Jangan lakukan pada komputer pembantu.
</note>

<pre caption="Compiler yang tersedia">
# <i>cd /usr/lib/distcc/bin</i>
# <i>ls -l</i>
total 0
lrwxrwxrwx  1 root root 15 Dec 23 20:13 c++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 cc -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 g++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 gcc -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 sparc-unknown-linux-gnu-c++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 sparc-unknown-linux-gnu-g++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Dec 23 20:13 sparc-unknown-linux-gnu-gcc -&gt; /usr/bin/distcc
</pre>

<p>
Berikut ini yang perlu anda lakukan:
</p>

<pre caption="Memodifikasi distcc">
# <i>rm c++ g++ gcc cc</i>
</pre>

<p>
Kemudian, kita akan menciptakan skrip baru pada komputer ini. Jalankan editor
favorit anda lalu ciptakan sebuah file yang berisi teks berikut ini, lalu
simpan dengan nama <path>sparc-unknown-linux-gnu-wrapper</path>. Jangan lupa
untuk mengganti CHOST (pada contoh ini, <c>sparc-unknown-linux-gnu</c>) dengan
CHOST dari komputer yang akan menjalankan emerge.
</p>

<pre caption="Skrip wrapper baru">
#!/bin/bash
exec /usr/lib/distcc/bin/sparc-unknown-linux-gnu-g${0:$[-2]} "$@"
</pre>

<p>
Kemudian, kita akan menjadikan skrip ini executable dan menciptakan symlink
yang sesuai:
</p>

<pre caption="Menciptakan symlink">
# <i>chmod a+x sparc-unknown-linux-gnu-wrapper</i>
# <i>ln -s sparc-unknown-linux-gnu-wrapper cc</i>
# <i>ln -s sparc-unknown-linux-gnu-wrapper gcc</i>
# <i>ln -s sparc-unknown-linux-gnu-wrapper g++</i>
# <i>ln -s sparc-unknown-linux-gnu-wrapper c++</i>
</pre>

<p>
Ketika anda selesai, <path>/usr/lib/distcc/bin</path> akan terlihat seperti ini:
</p>

<pre caption="Set compiler yang benar">
# <i>ls -l</i>
total 4
lrwxrwxrwx  1 root root 25 Jan 18 14:20 c++ -&gt; sparc-unknown-linux-gnu-wrapper
lrwxrwxrwx  1 root root 25 Jan 18 14:20 cc -&gt; sparc-unknown-linux-gnu-wrapper
lrwxrwxrwx  1 root root 25 Jan 18 14:20 g++ -&gt; sparc-unknown-linux-gnu-wrapper
lrwxrwxrwx  1 root root 25 Jan 18 14:20 gcc -&gt; sparc-unknown-linux-gnu-wrapper
lrwxrwxrwx  1 root root 15 Nov 21 10:42 sparc-unknown-linux-gnu-c++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Nov 21 10:42 sparc-unknown-linux-gnu-g++ -&gt; /usr/bin/distcc
lrwxrwxrwx  1 root root 15 Jul 27 10:52 sparc-unknown-linux-gnu-gcc -&gt; /usr/bin/distcc
-rwxr-xr-x  1 root root 70 Jan 18 14:20 sparc-unknown-linux-gnu-wrapper
</pre>

<p>
Selamat! Sekarang (mudah-mudahan) anda telah memiliki setup cross-distcc
yang benar.
</p>

</body>
</section>
<section>
<title>Bagaimana semua ini bekerja</title>
<body>

<p>
Ketika <c>distcc</c> dipanggil, ia akan memeriksa namanya yang dipanggil (mis.
<c>i686-pc-linux-gnu-gcc</c>, <c>sparc-unknown-linux-gnu-g++</c>, dll.) Ketika
distcc mendistribusikan kompilasi ke sebuah komputer pembantu, nama yang
dipanggil tadi akan diperiksa. Daemon distcc pada komputer pembantu kemudian
akan mencari binari dengan nama yang sama. Jika yang dilihat adalah <c>gcc</c>,
maka yang dicari adalah <c>gcc</c>, yang biasanya merupakan compiler asli
pada komputer pembantu, jika arsitekturnya tidak sama dengan komputer yang
menjalankan <c>emerge</c>. Ketika yang dilihat adalah nama <e>lengkap</e> dari
compiler, (mis. <c>sparc-unknown-linux-gnu-gcc</c>), maka, tidak akan ada
kebingungan.
</p>

</body>
</section>
</chapter>
</guide>
