<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="id">
<title>Panduan Router Rumah</title>

<author title="Author">
  <mail link="vapier@gentoo.org">Mike Frysinger</mail>
</author>
<author title="Translator">
  <mail link="kucrut.dz@gmail.com">Dzikri Aziz</mail>
</author>

<abstract>
Dokumen ini menjelaskan cara merubah komputer Gentoo lama menjadi router untuk
menghubungkan jaringan di rumah anda ke internet.
</abstract>

<!-- The content of this document is released into the public domain -->
<license/>

<version>1.38</version>
<date>2007-07-27</date>

<chapter>
<title>Pendahuluan</title>
<section>
<body>

<p>
Membuat router sendiri dari perangkat-perangkat lama memiliki beberapa
keutamaan dibandingkan dengan membeli router jadi buatan - misalnya - Linksys.
Keutamaan utamanya adalah kendali penuh atas koneksi. Keutamaan tergantung pada
imajinasi anda; apa saja dapat dilakukan dengan skenario ini, tinggal
menyesuaikan saja dengan kebutuhan.
</p>

<p>
Panduan ini akan menjelaskan cara menyiapkan <e>Network Address Translation</e>
(NAT) di router (kernel dan <c>iptables</c>), menambahkan dan mengkonfigurasi
beberapa servis (<e>Domain Name System</e> (DNS) melalui  dnsmasq, dhcp melalui
dhcpcd, ADSL melalui ppp), lalu ditutup dengan banyak hal menyenangkan yang
dapat dilakukan (<e>port forwarding</e>, <e>traffic shaping</e>,
<e>proxies/caching</e>, dll...).
</p>

<p>
Sebelum memulai, ada beberapa kebutuhan dasar yang harus anda penuhi. Pertama,
anda memerlukan komputer yang paling tidak memiliki 2 <e>Network Interface
Cards</e> (NIC). Kedua, anda memerlukan setting konfigurasi untuk koneksi
internet anda (seperti IP/DNS/Gateway/username/password). Terakhir, anda
memerlukan sedikit waktu luang dan kecintaan pada Gentoo.
</p>

<p>
Konvensi yang digunakan pada panduan ini adalah:
</p>

<ul>
 <li>eth0 - NIC terhubung ke <e>Local Area Network</e> (LAN)</li>
 <li>eth1 - NIC terhubung ke <e>Wide Area Network</e> (WAN)</li>
 <li>LAN berada di jaringan pribadi 192.168.0.xxx</li>
 <li>router ditetapkan di IP standar 192.168.0.1</li>
 <li>
  router menjalankan Linux 2.4 atau 2.6; anda tidak akan dibantu jika
  menjalankan 2.0/2.2
  </li>
</ul>

<impo>
Dengan alasan keamanan, Penulis sangat menganjurkan anda untuk menghentikan
semua servis yang tidak diperlukan di router sampai firewall sudah diaktifkan.
Untuk melihat servis yang sedang berjalan, jalankan <c>rc-status</c>.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Setup kernel (Kenali dulu diri anda sendiri)</title>
<section>
<body>

<p>
Kernel anda harus memilki driver yang menjalankan kedia NIC anda. Untuk melihat
apakah kartu-kartu anda telah diatur, jalankan saja <c>ifconfig</c>. Output
anda mungkin akan sedikit berbeda, tidak apa-apa. Yang penting adalah kartu
anda ditampilkan.
</p>

<pre caption="Memeriksa NIC">
# <i>ifconfig -a</i>
eth0      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B8
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:11 Base address:0x9800

eth1      Link encap:Ethernet  HWaddr 00:60:F5:07:07:B9
          BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
          Interrupt:10 Base address:0x9400
</pre>

<p>
Jika anda tidak melihat kedua kartu anda dan anda tidak yakin jenis kartu yang
anda miliki, coba jalankan <c>lspci | grep Ethernet</c>. Anda bisa
mendapatkannya dari <c>emerge pciutils</c>. Ketika anda sudah memiliki info
ini, masuklah ke source kernel anda lalu tambahkan dukungan untuk driver
yang sesuai.
</p>

<p>
Hal kedua yang anda butuhkan adalah dukungan untuk <c>iptables</c> dan NAT
(juga <e>packet shaping</e> jika anda mau). Daftar berikut ini dipecah menjadi
semua yang semua diperlukan (*), diperlukan hanya untuk adsl melalui PPPoE (a),
dianjurkan untuk semua (x), dan hanya untuk fitur-fitur <e>shape</e> (s).
Tidak jadi masalah apakah anda menjadikan fitur-fitur ini ke dalam kernel atau
menjadikannya modul selama anda tidak lupa untuk me-load-nya ketika diperlukan.
</p>

<pre caption="Opsi-opsi Jaringan">
Networking options  ---&gt;
   [*] TCP/IP networking
      [*] IP: advanced router
   [*] Network packet filtering (replaces ipchains)
<comment>Jika anda menggunakan kernel 2.4.x, anda harus mengaktifkan yang berikut ini untuk DHCP:</comment>
   [*] Socket Filtering

   IP: Netfilter Configuration  ---&gt;
      [*] Connection tracking (required for masq/NAT)
         [x] FTP protocol support
         [x] IRC protocol support
      [*] IP tables support (required for filtering/masq/NAT)
         [*] IP range match support
         [x] MAC address match support
         [*] Multiple port match support
         [*] Packet filtering
            [*] REJECT target support
            [x] REDIRECT target support
         [*] Full NAT
            [*] MASQUERADE target support
         [s] Packet mangling
            [s] MARK target support
         [x] LOG target support

   QoS and/or fair queueing  ---&gt;
      [s] QoS and/or fair queueing
         [s] HTB packet scheduler
         [s] Ingress Qdisc

   [a] PPP (point-to-point protocol) support
      [a] PPP filtering
      [a] PPP support for async serial ports
      [a] PPP support for sync tty ports
      [a] PPP Deflate compression
      [a] PPP BSD-Compress compression
      [a] PPP over Ethernet
</pre>

<note>
Beberapa opsi mungkin agak berbeda di kernel 2.4 dan 2.6, anda harus bisa
mencarinya :). Bahkan pada sesama kernel 2.6, opsi-opsi ini sering
berpindah-pindah. Selamat Mencari!
</note>

</body>
</section>
</chapter>

<chapter>
<title>Peluk WAN (a.k.a. Internet)</title>

<section>
<title>Intro</title>
<body>

<p>
Ada beberapa cara untuk terhubung ke internet, tetapi penulis hanya menjelaskan
cara yang penulis kenal, yaitu dengan menggunakan ADSL (PPPoE) dan modem kabel
(statik/dinamik). Jika ada metode lain, silakan tulis lalu kirimkan ke penulis.
Anda boleh melewatkan bagian-bagian pada bab ini yang tidak anda perlukan. Bab
ini hanya berisi cara menghubungkan router ke internet melalui
<path>eth1</path>.
</p>

</body>
</section>
<section>
<title>ADSL dan PPPoE</title>
<body>

<p>
Semua software PPPoE yand dahulu disediakan oleh rp-pppoe (<uri
link="http://www.roaringpenguin.com/">Roaring Penguin</uri>) telah
diintegrasikan ke dalam <uri link="http://samba.org/ppp/">paket PPP
standar</uri>. Jalankan saja <c>emerge ppp</c>. Masih ingat pesan penulis untuk
menyediakan informasi username/password kan? Na, sekarang saatnya untuk
mengedit <path>/etc/conf.d/net</path>.
</p>

<note>
Agar aturan-aturan jaringan berikut dapat digunakan, anda harus memiliki
baselayout-1.12.9 atau yang lebih baru di sistem anda.
</note>

<pre caption="Pengaturan eth1">
<comment>(Gantikan 'vla9h924' dengan username dan 'boogie' dengan password anda sendiri)</comment>

# <i>nano /etc/conf.d/net</i>


<comment>Perintahkan baselayout untuk menggunakan adsl melalui eth1 untuk ppp0:</comment>
config_ppp0=( "ppp" )
link_ppp0="eth1"
plugins_ppp0=( "pppoe" )
pppd_ppp0=(
       "defaultroute"
       "usepeerdns"
       <comment>Anda mungkin ingin menerapkan pengaturan lain, bacalah /etc/conf.d/net.example</comment>
)
username_ppp0="vla9h924"
password_ppp0="boogie"

# <i>ln -s net.lo /etc/init.d/net.ppp0</i>
# <i>rc-update add net.ppp0 default</i>
# <i>/etc/init.d/net.ppp0 start</i>
</pre>

<warn>
Ketika antarmuka DSL dinyalakan, <path>ppp0</path> akan diciptakan. Walaupun
NIC anda dinamakan <path>eth1</path>, IP-nya sebenarnya diikatkan ke
<path>ppp0</path>. Dari sekarang, jika anda menemukan contoh yang berisi
<path>eth1</path>, gantikan dengan <path>ppp0</path>.
</warn>


<warn>
Jangan lupa ganti perizinan file <path>/etc/conf.d/net</path> agar hanya dapat
dibaca/tulis oleh root karena anda telah menuliskan username/password anda di
dalamnya.
</warn>

<warn>
Bagi anda yang berpindah dapri paket <c>rp-pppoe</c>, atau bagi anda yang
mendapatkan koneksi yang aneh, bacalah bagian MTU pada bagian Pemecahan
Masalah.
</warn>

</body>
</section>

<section>
<title>Kabel dan/atau IP dinamik/statik</title>
<body>

<p>
Jika anda memiliki IP statik, berarti anda memerlukan rincian yang sedikit
lebih banyak daripada IP dinamik. Untuk pengguna IP statik, anda memerlukan
IP anda, gateway, dan server DNS.
</p>

<pre caption="Pengaturan eth1">
<comment>Untuk pengguna IP dinamik:</comment>
# <i>emerge dhcpcd</i>
# <i>nano /etc/conf.d/net</i>
<comment>Anda memerlukan sebuah entri seperti:</comment>
config_eth1=( "dhcp" )

<comment>Untuk pengguna IP statik:</comment>
# <i>nano /etc/conf.d/net</i>
<comment>Anda memerlukan entri seperti:</comment>
config_eth1=( "66.92.78.102 broadcast 66.92.78.255 netmask 255.255.255.0" )
routes_eth1=( "default gw 66.92.78.1" )
# <i>nano /etc/resolv.conf</i>
<comment>Tambahkan satu baris untuk setiap server DNS:</comment>
nameserver 123.123.123.123

<comment>Untuk Setup Dinamik dan Statik:</comment>
# <i>ln -s net.lo /etc/init.d/net.eth1</i>
# <i>rc-update add net.eth1 default</i>
# <i>/etc/init.d/net.eth1 start</i>
</pre>

<p>
Sekarang anda sudah siap.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Peluk LAN (Ajak teman-teman)</title>
<section>
<body>

<p>
Langkah ini lebih mudah daripada langkah-langkah sebelumnya.
</p>

<pre caption="Pengaturan eth0">
# <i>nano /etc/conf.d/net</i>
<comment>Tambahkan sebuah baris seperti berikut:</comment>
config_eth0=( "192.168.0.1 broadcast 192.168.0.255 netmask 255.255.255.0" )
# <i>rc-update add net.eth0 default</i>
# <i>/etc/init.d/net.eth0 start</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Servis-servis LAN (Karena kita orang baik)</title>

<section>
<title>Server DHCP</title>
<body>

<p>
Penulis yakin bahwa akan sangat baik jika semua orang di rumah anda hanya
perlu menyambungkan komputer mereka ke jaringan dan semuanya bisa berfungsi.
Tidak perlu mengingat hal-hal rumit atau membuat mereka melotot ke layar
konfigurasi yang membingungkan! Hidup akan lebih mudah kan? Perkenalkan
<e>Dynamic Host Configuration Protocol</e> (DHCP) dan mengapa anda harus
peduli.
</p>

<p>
DHCP berfungsi benar-benar seperti namanya. Sebuah protokol yang dapat anda
gunakan untuk mengatur komputer lain dengan otomatis secara dinamis. Anda
hanya perlu menjalankan server DHCP di router, berikan semua info tentang
jaringan anda, (IP, server DNS, gateway, dll...), maka ketika ada komputer
lain dinyalakan, komputer tersebut akan menjalankan klien DHCP dan
mengkonfigurasi dirinya sendiri secara otomatis. Untuk info lebih lanjut
tentang DHCP, kunjungilah <uri
link="http://en.wikipedia.org/wiki/DHCP">Wikipedia</uri>.
</p>

<p>
Kita akan menggunakan sebuah paket bernama <c>dnsmasq</c> yang menyediakan
layanan DHCP dan DNS. Untuk saat ini, kita fokus ke aspek DHCP dulu. Perlu
dicatat bahwa jika anda ingin menjalankan server DHCP yang lain, anda bisa
mendapatkan contoh lain di bab "Hal-hal Asyik". Juga, jika anda ingin
mengutak-atik setting server DHCP, bacalah komentar-komentar di file
<path>/etc/dnsmasq.conf</path>. Semua default seharusnya bisa berfungsi.
</p>

<pre caption="Setup server DHCP">
# <i>emerge dnsmasq</i>
# <i>nano /etc/dnsmasq.conf</i>
<comment>Tambahkan baris berikut untuk mengaktifkan dhcp:</comment>
dhcp-range=192.168.0.100,192.168.0.250,72h
<comment>Batasi dnsmasq hanya ke kartu untuk LAN</comment>
interface=eth0

# <i>rc-update add dnsmasq default</i>
# <i>/etc/init.d/dnsmasq start</i>
</pre>

<p>
Sekarang router kecil anda sudah menjadi server DHCP bonafit! Hubungkan
komputer-komputer lain dan perhatikan, semuanya bisa langsung tersambung!
Dengan sistem Windows anda perlu masuk ke setting TCP/IP lalu pilih opsi
"Obtain an IP address automatically" dan "Obtain DNS server address
automatically". Terkadang perubahannya tidak langsung diterapkan, jadi anda
mungkin perlu membuka prompt perintah untuk menjalankan <c>ipconfig
/release</c> dan <c>ipconfig /renew</c>. Cukup tentang Windows, mari kita
kembali ke pinguin tercinta kita.
</p>

</body>
</section>

<section>
<title>Server DNS</title>
<body>

<p>
Ketika seseorang ingin mengunjungi suatu tempat di internet, ia hanya perlu
perlu mengingat namanya, bukan sejumlah nomor acak. Lagi pula, mana yang lebih
mudah diingat. ebay.com atau 66.135.192.87? Di sinilah DNS digunakan. Server
DNS merubah 'ebay.com' (kata yang kita mengerti) menjadi '66.135.192.87' (yang
dimengerti komputer). Untuk lebih mengenal DNS, kungjungilah <uri
link="http://en.wikipedia.org/wiki/DNS">Wikipedia</uri>.
</p>

<p>
Karena kita menggunakan <c>dnsmasq</c> untuk server DHCP, server DNS sudah
diikutsertakan, anda tidak perlu melakukan apa-apa lagi! Router kecil anda
sudah bisa menyediakan DNS untuk klien DHCP-nya. Andai semuanya semudah ini ;).
</p>

<p>
Anda boleh memilih server DNS lain jika anda merasa lebih nyaman dengannya,
tetapi alasan digunakannya <c>dnsmasq</c> adalah karena ia dirancang hanya
untuk melakukan hal yang kita perlukan, tanpa embel-embel lain. <c>dnsmasq</c>
adalah server <e>DNS caching/forwarding</e> untuk jaringan lokal. Kita tidak
bermaksud untuk menyediakan DNS untuk domain kita sendiri di sini, hanya
menyediakan layanan DNS sederhana untuk semua komputer di LAN.
</p>

</body>
</section>

<section>
<title>NAT (alias IP-masquerading)</title>
<body>

<p>
Pada saat ini, semua komputer di jaringan anda sudah dapat saling berhubungan
satu sama lain dan dapat mengetahui nama host melalui DNS, tetapi belum bisa
terhubung ke internet. Walaupun menurut anda itu asyik (lebih banyak bandwidth
untuk anda!), penulis yakin orang lain akan kurang senang.
</p>

<p>
Di sinilah <e>Network Address Translation</e> (NAT) digunakan. NAT merupakan
salah satu cara untuk menghubungkan banyak komputer di dalam sebuah jaringan
lokal pribadi ke internet ketika anda hanya memiliki sedikit alamat IP.
Biasanya hanya anda diberikan satu IP oleh ISP anda, tetapi anda ingin agar
semua komputer di rumah terhubung ke internet. NAT adalah sulap yang
menjadikannya nyata. Bacalah <uri
link="http://en.wikipedia.org/wiki/NAT">Wikipedia</uri> untuk lebih
mengenal NAT.
</p>

<note>
Sebelum kita mulai, kita perlu memastikan bahwa <c>iptables</c> telah tersedia
di sistem. Walaupun biasanya sudah langsung terinstal pada kebanyakan sistem,
anda mungkin belum memilikinya. Jika belum, jalankan saja <c>emerge
iptables</c>.
</note>

<pre caption="Setup iptables">
<comment>Pertama hapus semua aturan</comment>
# <i>iptables -F</i>
# <i>iptables -t nat -F</i>

<comment>Setup aturan-aturan default untuk menangani traffic yang tidak cocok</comment>
# <i>iptables -P INPUT ACCEPT</i>
# <i>iptables -P OUTPUT ACCEPT</i>
# <i>iptables -P FORWARD DROP</i>

<comment>Salin contoh-contoh ini ...</comment>
# <i>export LAN=eth0</i>
# <i>export WAN=eth1</i>

<comment>Kemudian kunci layanan kita agar hanya dapat digunakan di LAN</comment>
# <i>iptables -I INPUT 1 -i ${LAN} -j ACCEPT</i>
# <i>iptables -I INPUT 1 -i lo -j ACCEPT</i>
# <i>iptables -A INPUT -p UDP --dport bootps -i ! ${LAN} -j REJECT</i>
# <i>iptables -A INPUT -p UDP --dport domain -i ! ${LAN} -j REJECT</i>

<comment>(Opsional) Ijinkan akses ke server ssh kita dari WAN</comment>
# <i>iptables -A INPUT -p TCP --dport ssh -i ${WAN} -j ACCEPT</i>

<comment>Tolak paket-paket TCP/UDP ke port-port khusus</comment>
# <i>iptables -A INPUT -p TCP -i ! ${LAN} -d 0/0 --dport 0:1023 -j DROP</i>
# <i>iptables -A INPUT -p UDP -i ! ${LAN} -d 0/0 --dport 0:1023 -j DROP</i>

<comment>Terakhir tambahkan aturan untuk NAT</comment>
# <i>iptables -I FORWARD -i ${LAN} -d 192.168.0.0/255.255.0.0 -j DROP</i>
# <i>iptables -A FORWARD -i ${LAN} -s 192.168.0.0/255.255.0.0 -j ACCEPT</i>
# <i>iptables -A FORWARD -i ${WAN} -d 192.168.0.0/255.255.0.0 -j ACCEPT</i>
# <i>iptables -t nat -A POSTROUTING -o ${WAN} -j MASQUERADE</i>
<comment>Beritahukan kernel bahwa IP forwarding sudah siap</comment>
# <i>echo 1 > /proc/sys/net/ipv4/ip_forward</i>
# <i>for f in /proc/sys/net/ipv4/conf/*/rp_filter ; do echo 1 > $f ; done</i>

<comment>Ini agar ketika kita boot, kita tidak perlu membuat aturan lagi</comment>
# <i>/etc/init.d/iptables save</i>
# <i>rc-update add iptables default</i>
# <i>nano /etc/sysctl.conf</i>
<comment>Tambahkan baris-baris ini atau hapus tanda komentar jika ada:</comment>
net.ipv4.ip_forward = 1
net.ipv4.conf.default.rp_filter = 1

<comment>Jika anda memiliki alamat internet dinamik anda mungkin perlu mengaktifkan ini:</comment>
net.ipv4.ip_dynaddr = 1
</pre>

<p>
Setelah anda menyelesaikannya, semua komputer di jaringan anda sekarang sudah
dapat menggunakan internet seakan-akan terhubung langsung.
</p>

<p>
Opsi <c>ip_dynaddr</c> berguna untuk <e>dial on demand systems</e> atau ketika
ISP ada memberikan alamat dinamik. Ini akan menyiasati masalah ketika ada
komputer yang mencoba melakukan koneksi sebelum antarmuka untuk internet siap.
Sebenarnya hal ini hanya agar pengguna internet di belakang router anda merasa
lebih nyaman.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Hal-hal Asyik (Untuk hari-hari hujan)</title>

<section>
<title>Intro</title>
<body>

<p>
Percaya atau tidak, anda sudah selesai :). Dari sini, penulis akan memberikan
banyak topik umum yang mungkin anda sukai. Semua hal yang ada di bab ini
hanyalah opsional.
</p>

</body>
</section>

<section>
<title>Port Forwarding</title>
<body>

<p>
Terkadang anda ingin menyediakan layanan pada sebuah komputer yang berada di
belakang router, atau hanya ingin mempermudah ketika mengakses sistem anda dari
jauh. Mungkin anda ingin menjalankan server FTP, HTTP, SSH, atau VNC pada salah
satu komputer di belakang router dan ingin terhubung ke semua komputer.
Satu-satunya kelemahan di sini adalah, anda hanya boleh menggunakan satu
layanan/komputer pada satu port. Misalnya, tidak ada cara yang mudah untuk
mengatur tiga server FTP yang sama-sama menggunakan port 21 di belakang satu
router; hanya salah satunya yang boleh menggunakan port 21, sedangkan yang lain
harus menggunakan port lain, misalnya port 123 dan port 567.
</p>

<p>
Semua aturan <e>port forwarding</e> berformat <c>iptables -t nat -A PREROUTING
[-p protocol] --dport [port luar di router] -i ${WAN} -j DNAT --to [ip/port
tujuan]</c>. Sayangnya, <c>iptables</c> tidak menerima nama host ketika
dilakukan <e>port forwarding</e>. Jika anda mem-<e>forward</e> sebuah port luar
ke port yang sama di komputer dalam, anda boleh tidak mengetikkan port tujuan.
Bacalah manual <c>iptables(8)</c> untuk info lebih lanjut.
</p>

<pre caption="Menjalankan perintah-perintah iptables">
<comment>Salin contoh-contoh ini...</comment>
# <i>export LAN=eth0</i>
# <i>export WAN=eth1</i>

<comment>Forward port 2 ke ssh ke komputer dalam</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 2 -i ${WAN} -j DNAT --to 192.168.0.2:22</i>

<comment>Forward FTP ke komputer dalam</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 21 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>Forward HTTP ke komputer dalam</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 80 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>Forward VNC untuk komputer dalam</comment>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 5900 -i ${WAN} -j DNAT --to 192.168.0.2</i>
# <i>iptables -t nat -I PREROUTING -p tcp --dport 5901 -i ${WAN} -j DNAT --to 192.168.0.3:5900</i>
<comment>If you want to VNC in to 192.168.0.3, then just add ':1' to the router's hostname</comment>

<comment>Forward Bittorrent</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 6881:6889 -i ${WAN} -j DNAT --to 192.168.0.2</i>

<comment>Forward eDonkey/eMule</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 4662 -i ${WAN} -j DNAT --to 192.168.0.55</i>

<comment>Dukungan Game Cube Warp Pipe</comment>
# <i>iptables -t nat -A PREROUTING -p udp --dport 4000 -i ${WAN} -j DNAT --to 192.168.0.56</i>

<comment>Dukungan Playstation 2 Online</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 10070:10080 -i ${WAN} -j DNAT --to 192.168.0.11</i>

<comment>Xbox Live</comment>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 3074 -i ${WAN} -j DNAT --to 192.168.0.69</i>
# <i>iptables -t nat -A PREROUTING -p udp --dport 88 -i ${WAN} -j DNAT --to 192.168.0.69</i>
</pre>

<note>
Jika anda memiliki contoh-contoh umum/bagus lainnya, silakan <mail
link="vapier@gentoo.org">e-mail</mail> penulis.
</note>

</body>
</section>

<section>
<title>Identd (untuk IRC)</title>
<body>

<p>
<e>Internet Relay Chat</e> sangat banyak menggunakan layanan <e>ident</e>.
Karena klien IRC berada di belakang router, kita perlu menemukan satu cara
untuk menyediakan <e>ident</e> bagi router dan klien. Ada satu server semacam
ini yang dinamakan <c>midentd</c>.
</p>

<pre caption="Setup ident">
# <i>emerge midentd</i>
# <i>rc-update add midentd default</i>
# <i>/etc/init.d/midentd start</i>
</pre>

<p>
Ada beberapa server <e>ident</e> lain di portage. Tergantung pada kebutuhan
anda, penulis menganjurkan anda untuk mencoba <c>oidentd</c> dan
<c>fakeidentd</c>.
</p>

</body>
</section>

<!--
<section>
<title>Traffic Shaping</title>
<body>
<p>
This is an attempt to simply and Gentooify the <uri 
link="http://www.tldp.org/HOWTO/ADSL-Bandwidth-Management-HOWTO/">ADSL 
Bandwidth Management HOWTO</uri>
found over at the TLDP.  Feel free to refer to the original document
for more details.
</p>

<p>
Here we will be setting up what some people refer to as a "Packet Shaper",
<uri link="http://en.wikipedia.org/wiki/Traffic_shaping">"Traffic Shaping"</uri>,
or <uri link="http://en.wikipedia.org/wiki/QoS">"Quality of Service"</uri>.
Simply put, we want to setup rules on our router that will slow down
certain activities (like sending large e-mails or downloading from P2P
networks) while keeping other activities (like browsing the web or playing
online video games) reasonably fast.  A 30 second difference in a video
game is a lot worse than a 30 second difference in downloading large
files :).
</p>

<p>
The first thing is to make sure your kernel has all the features added to
it.  See the chapter on <uri link="#doc_chap2">Kernel setup</uri> for more
information.  Next, you will need to <c>emerge iptables iputils</c> so that
you will have access to the <c>iptables</c>, <c>ip</c>, and <c>tc</c>
commands.
</p>

<p>
Before we jump into the commands, let's cover a little of the theory.  The
way this whole system works is to classify common network streams and then
to prioritize them.  You use iptables to classify network streams, iputils
to define the different priority levels, and the kernel to adjust speeds.
Just remember that although you can control outbound traffic pretty tightly
(from the LAN to the WAN), your ability to control inbound traffic (from
the WAN to the LAN) is somewhat limited.  Just remember that the following
examples are to get your feet wet; if you want more then I'd suggest
reading up on the subject.  In this example, we will be using the
<uri link="http://luxik.cdi.cz/~devik/qos/htb/">Hierarchical Token Buckets (HTB)</uri>
packet scheduling algorithm.  Still with me?  Great, let's start shaping :).
</p>

<pre caption="Setup">
DEV=eth1 <comment>NIC connected to WAN</comment>
RATE_OUT=100 <comment>Available outbound bandwidth (in kilobits [kb])</comment>
RATE_IN=1400 <comment>Available inbound bandwidth (in kb)</comment>

<comment>Here we initialize the priority system.  The 45 is used to set the default classification level.</comment>
ip link set dev ${DEV} qlen 30
tc qdisc add dev ${DEV} root handle 1: htb default 45
tc class add dev ${DEV} parent 1: classid 1:1 htb rate ${RATE_OUT}kbit
</pre>

<p>
Here we initialized the system which will be used to prioritize all of
our network traffic.  We created our queue, told it to use the HTB
algorithm, and set the default classification level to '45'.  The
default is completely arbitrary, as are the levels we choose from
here on out.  The only thing that matters is how the levels compare
relatively; a level '10' packet will be given preference over a
level '45' packet.  Let's move on to declaring different levels.
</p>

<pre caption="Declaring levels">
tc class add dev $DEV parent 1:1 classid 1:10 htb rate $rkbit ceil $tkbit prio $p
tc qdisc add dev $DEV parent 1:10 handle 10: sfq
</pre>
</body>
</section>
-->

<section>
<title>Server Waktu</title>
<body>

<p>
Menjaga waktu di sistem kita sangatlah penting untuk mendapatkan sistem yang
sehat. Salah satu cara yang paling umum digunakan adalah dengan <e>Network Time
Protocol</e> (NTP) dan paket <c>ntp</c> (yang menyediakan implementasi untuk
server dan klien).
</p>

<p>
Banyak pengguna yang menjalankan klien ntp di komputernya. Tentunya, semakin
banyak klien di dunia ini, semakin besar pula beban yang ditanggung oleh server
ntp. Namun pada lingkungan seperti jaringan di rumah, kita dapat membantu
meringankan beban server publik dengan tetap menyediakan waktu yang tepat untuk
semua komputer di jaringan kita. Sebagai bonus tambahan, update pribadi kita
juga akan lebih cepat untuk semua klien. Yang perlu kita lakukan hanyalah
menjalankan server ntp di router yang mengsinkronkan dirinya dengan server
internet publik dan menyediakan waktu untuk semua komputer di jaringan. Untuk
memulai, jalankan <c>emerge ntp</c> di router.
</p>

<pre caption="Setup server NTP">
# <i>nano /etc/conf.d/ntp-client</i>
<comment>Sesuaikan dengan keinginan anda, tetapi nilai-nilai default juga sudah cukup</comment>
# <i>rc-update add ntp-client default</i>

# <i>nano /etc/ntp.conf</i>
<comment>Tambahkan baris-baris berikut:</comment>
restrict default ignore
restrict 192.168.0.0 mask 255.255.255.0 notrust nomodify notrap
<comment>Ini agar hanya klien ntp pada reng alamat
192.168.0.xxx yang boleh menggunakan server ntp anda</comment>
# <i>nano /etc/conf.d/ntpd</i>
<comment>Sesuaikan dengan keinginan anda, tetapi nilai-nilai default sudah cukup</comment>
# <i>rc-update add ntpd default</i>

# <i>/etc/init.d/ntp-client start</i>
# <i>/etc/init.d/ntpd start</i>
</pre>

<note>
Anda harus memastikan bahwa anda telah mengijinkan komunikasi <e>inbound</e>
dan <e>outbound</e> pada port ntp (123/udp) ketika mengatur server. Klien
hanya memerlukan akses <e>outbound</e> di port 123/udp.
</note>

<p>
Sekarang, di klien, jalankan juga <c>emerge ntp</c>. Tetapi, kita hanya perlu
menjalankan klien ntp, jadi pengaturannya lebih sederhana.
</p>

<pre caption="Setup klien NTP">
# <i>nano /etc/conf.d/ntp-client</i>
<comment>Ganti server 'pool.ntp.org' di variabel NTPCLIENT_OPTS menjadi '192.168.0.1'</comment>
# <i>rc-update add ntp-client default</i>
# <i>/etc/init.d/ntp-client start</i>
</pre>

</body>
</section>

<section>
<title>Server Rsync</title>
<body>

<p>
Bagi anda yang memiliki banyak komputer Gentoo di dalam LAN yang sama, anda
mungkin tidak ingin semua komputer menjalankan <c>emerge sync</c> ke server
yang jauh. Dengan menyiapkan rsync lokal, anda telah menghemat bandwidth anda
dan bandwidth server rsync Gentoo. Sangat mudah melakukannya:
</p>

<note>
Untuk panduan rsync yang lebih mendalam, bacalah <uri
link="/doc/id/rsync.xml#local">panduan resmi rsync</uri>.
</note>

<p>
Karena sistem Gentoo membutuhkan rsync, anda tidak perlu lagi menginstalnya.
Edit file konfigurasi <path>/etc/rsyncd.conf</path> default, hapus tanda
komentar di bagian <c>[gentoo-portage]</c>, lalu tambahkan sebuah opsi
<c>address</c>. Semua nilai default lain sudah cukup.
</p>

<pre caption="Konfigurasi server rsync">
pid file = /var/run/rsyncd.pid
use chroot = yes
read only = yes
address = 192.168.0.1

[gentoo-portage]
  path = /mnt/space/portage
  comment = Gentoo Linux Portage tree
  exclude = /distfiles /packages
</pre>

<p>
Kemudian anda perlu menjalankan servis (lagi-lagi, nilai default sudah cukup).
</p>

<pre caption="Menjalankan server rsync">
# <i>/etc/init.d/rsyncd start</i>
# <i>rc-update add rsyncd default</i>
</pre>

<p>
Satu lagi yang perlu diatur adalah memberitahukan klien anda untuk melakukan
sync ke router.
</p>

<pre caption="Pengaturan SYNC klien di make.conf">
SYNC="rsync://192.168.0.1/gentoo-portage"
</pre>

</body>
</section>

<section>
<title>Server Mail</title>
<body>

<p>
Terkadang senang rasanya memiliki server <e>Simple Mail Transfer Protocol</e>
(SMTP) kita sendiri di router. Anda mungkin punya alasan anda sendiri untuk
melakukannya, tetapi alasan penulis adalah agar pengguna bisa melihat surat
langsung terkirim dan kerja pengiriman ulang/routing diserahkan kepada server
mail. Beberapa ISP tidak mengijinkan <e>mail relaying</e> untuk akun yang bukan
merupakan bagian jaringan mereka (seperti Verizon). Anda juga dapat 'mencekik'
pengiriman surat agar surat-surat besar tidak memperlambat koneksi anda dalam
waktu yang lama.
</p>

<pre caption="Pengaturan SMTP">
# <i>emerge netqmail</i>
<comment>pastikan agar output `hostname` sudah benar</comment>
# <i>emerge --config netqmail</i>
# <i>iptables -I INPUT -p tcp --dport smtp -i ! ${LAN} -j REJECT</i>
# <i>ln -s /var/qmail/supervise/qmail-send /service/qmail-send</i>
# <i>ln -s /var/qmail/supervise/qmail-smtpd /service/qmail-smtpd</i>
# <i>cd /etc/tcprules.d</i>
# <i>nano tcp.qmail-smtp</i>
<!--
# <i>cd /etc</i>
# <i>nano tcp.smtp</i>
-->
<comment>Tambahkan sebuah entri seperti berikut ke bagian allow:</comment>
192.168.0.:allow,RELAYCLIENT=""
<!--
# <i>tcprules tcp.qmail-qmtp.cdb rules.tmp &lt; tcp.qmail-smtp</i>
# <i>tcprules tcp.smtp.cdb rules.tmp &lt; tcp.smtp</i>
-->
# <i>make</i>
# <i>rc-update add svscan default</i>
# <i>/etc/init.d/svscan start</i>
</pre>

<p>
Penulis adalah penggemar berat netqmail, tetapi anda bebas memilih <c>mta</c>
yang lain :). Ketika anda mengatur e-mail pada satu komputer di jaringan
anda, jadikan 192.168.0.1 sebagai server SMTP dan semuanya akan berfungsi.
Anda mungkin perlu mengunjungi <uri link="http://qmail.org/">website
qmail</uri> untuk membaca dokumentasi lain.
</p>

</body>
</section>

<!--
<section>
<title>E-mail Virus Scanning</title>
<body>
<p>
If you'd like to provide e-mail virus scanning for your users, but
don't want to have to install a virus scanner on every single machine,
then <c>pop3vscan</c> may just be the thing for you; a transparent
Post Office Protocol (POP) scanner.
</p>

<pre caption="Setting up pop3vscan">
TODO
</pre>

</body>
</section>
-->

<section>
<title>Server DHCP Lengkap</title>
<body>

<p>
Tadi kita sudah menggunakan <c>dnsmasq</c> untuk menyediakan layanan DHCP
untuk semua klien. Bagi kebanyakan pengguna dengan LAN kecil yang sederhana,
ini sudah sempurna. Tetapi anda mungkin memerlukan sesuatu yang lain dengan
fitur yang lebih banyak lagi. Untuk itu kita akan menyiapkan server DHCP yang
memiliki banyak fitur seperti yang disediakan oleh teman-teman di
<uri link="http://www.isc.org/products/DHCP">ISC</uri>.
</p>

<pre caption="Setup dhcpd">
# <i>emerge dhcp</i>
# <i>nano /etc/dhcp/dhcpd.conf</i>
<comment>(Contoh file konfigurasi:)</comment>
authoritative;
ddns-update-style interim;
subnet 192.168.0.0 netmask 255.255.255.0 {
    range 192.168.0.100 192.168.0.250;
    default-lease-time 259200;
    max-lease-time 518400;
    option subnet-mask 255.255.255.0;
    option broadcast-address 192.168.0.255;
    option routers 192.168.0.1;
    option domain-name-servers 192.168.0.1;
}
# <i>nano /etc/conf.d/dhcpd</i>
<comment>(Set IFACE="eth0")</comment>
# <i>rc-update add dhcpd default</i>
# <i>/etc/init.d/dhcpd start</i>
</pre>

<p>
Ini adalah pengaturan minimal yang diperlukan untuk mengganti fungsionalitas DHCP
<c>dnsmasq</c> yang sebelumnya kita gunakan. Anda masih ingat untuk
menonaktifkan fitur DHCP di <c>dnsmasq</c> 'kan? Jika tidak, anda harus
melakukannya sekarang (beri saja tanda komentar pada setting
<c>dhcp-range</c> di <path>/etc/dnsmasq.conf</path> lalu restart servisnya).
</p>

</body>
</section>

<section>
<title>Melakukan koneksi ke LAN lain</title>
<body>

<p>
Terkadang anda perlu terhubung ke router di LAN lain. Mungkin anda ingin
bertemu sebentar dengan teman-teman, atau anda ingin mengelompokkan
beberapa komputer dalam sejumlah grup, atau anda hanya sedang bosan. Apapun
alsannya, menghubungkan router ke LAN lain sangatlah mudah. Pada contoh-contoh
berikut ini, penulis menganggap jaringan baru ini terhubung melewati kartu
jaringan ketiga, yaitu <path>eth2</path>.
</p>

<p>
Pertama-tama anda perlu mengkonfigurasi kartu tersebut. Ikuti saja petunjuk di
<uri link="#doc_chap4_pre1">daftar perintah 4.1</uri> dan gantikan <c>eth0</c>
dengan <c>eth2</c> serta <c>192.168.0</c> dengan <c>192.168.1</c>.
</p>

<p>
Kemudian anda perlu men-<e>tweak</e> <c>dnsmasq</c> untuk melayani kartu baru.
Edit saja <path>/etc/conf.d/dnsmasq</path> dan tambahkan <c>-i eth2</c> ke
DNSMASQ_OPTS; menggunakan banyak opsi <c>-i</c> boleh-boleh saja. Lalu edit
<path>/etc/dnsmasq.conf</path> dan tambahkan baris lain seperti baris
<c>dhcp-range</c> di <uri link="#doc_chap5_pre1">daftar kode 5.1</uri>, dengan
mengganti <c>192.168.0</c> menjadi <c>192.168.1</c>. Menggunakan banyak
<c>dhcp-range</c> juga boleh boleh saja.
</p>

<p>
Terakhir, lihatlah aturan-aturan di <uri link="#doc_chap5_pre2">daftar kode
5.2</uri> dan salin aturan-aturan yang memiliki <c>-i ${LAN}</c>. Anda mungkin
ingin membuat variabel lain, katakanlah <c>LAN2</c>, agar lebih mudah.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Mengatasi Masalah</title>

<section>
<title>Tool-tool Berguna</title>
<body>

<p>
Jika anda mendapatkan masalah ketika menghubungkan komputer anda, mungkin anda
perlu mencoba beberapa tool berikut (semuanya berada di kategori
<c>net-analyzer</c> di portage):
</p>

<table>
<tr>
  <th>Tool</th>
  <th>Penjelasan</th>
</tr>
<tr>
  <ti>wireshark</ti>
  <ti>Tool GUI untuk melihat semua data mentah jaringan menurut penyaringan</ti>
</tr>
<tr>
  <ti>tcpdump</ti>
  <ti>
    Tool konsol untuk men-<e>dump</e> semua data mentah jaringan menurut
    penyaringan
  </ti>
</tr>
<tr>
  <ti>iptraf</ti>
  <ti>monitor IP LAN berbasis ncurses</ti>
</tr>
<tr>
  <ti>ettercap</ti>
  <ti>Monitor/pengendali jaringan berbasis ncurses</ti>
</tr>
</table>

</body>
</section>

<section>
<title>DHCP Gagal Dijalankan</title>
<body>

<p>
Ketika menjalankan skrip init.d dhcp untuk pertama kali, kemungkinan terjadi
kegagalan tanpa memberikan info yang dapat membantu.
</p>

<pre caption="Contoh kegagalan DHCP">
# <i>/etc/init.d/dhcp start</i>
 * Setting ownership on dhcp.leases ...          [ ok ]
 * Starting dhcpd ...                            [ !! ]
</pre>

<p>
Siasatnya adalah mengetahui di mana dhcpcp mengirimkan outputnya. Masuk saja
ke <path>/var/log</path> dan baca file-file log yang ada. Karena log yang tepat
bergantung pada paket yang anda gunakan sebagai log sistem, coba jalankan
<c>grep -Rl dhcpd /var/log</c> untuk melihat kemungkinan yang ada. Mungkin
anda salah ketik di file konfigurasi. Anda juga bisa mencoba <c>dhcpd -d -f</c>
(singkatan untuk debug / foreground) dan mencari kesalahan berdasarkan output.
</p>

</body>
</section>

<section>
<title>Nilai MTU yang Salah</title>
<body>

<p>
Jika anda mendapatkan masalah aneh (misalnya tidak dapat mengakses beberapa
website sedangkan website lain bisa), anda mungkin mendapatkan masalah <e>Path
MTU Discovery</e>. Cara cepat untuk mengatasinya adalah dengan menjalankan
perintah <c>iptables</c> berikut ini:
</p>

<pre caption="Masalah MTU">
# <i>iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu</i>
</pre>

<p>
Ini akan mempengaruhi semua koneksi baru, jadi cukup <e>refresh</e> website
yang tadi tidak bisa anda buka untuk mencobanya. Jika sudah teratasi, nilai
standar MTU untuk koneksi jaringan 100Mbit adalah <c>1500</c>; nilai ini juga
sama dengan koneksi PPPoA. Untuk koneksi PPPoE, nilainya adalah <c>1492</c>.
Untuk info lebih rinci, bacalah bab 15 dari <uri
link="http://lartc.org/howto/">Linux Advanced Routing &amp; Traffic Control
HOWTO</uri>.
</p>

</body>
</section>

<section>
<title>Tidak dapat menghubungkan dua komputer secara langsung</title>
<body>

<p>
Jika (karena alasan apapun) anda ingin menghubungkan dua komputer secara
langsung tanpa <e>hub</e> atau <e>switch</e>, kabel jaringan biasa tidak bisa
digunakan, kecuali anda memiliki kartu jaringan <e>Auto MDI/MDI-X</e> (dikenal
juga dengan "autosensing"). Anda membutuhkan kabel lain yang disebut kabel
<e>crossover</e>. Halaman <uri
link="http://en.wikipedia.org/wiki/Ethernet_crossover_cable">Wikipedia</uri>
ini menjelaskannya.
</p>

</body>
</section>

</chapter>

<chapter>
<title>Catatan Akhir</title>
<section>
<body>

<p>
Penulis tidak memiliki catatan lain kecuali jika anda mendapatkan masalah
dengan panduan ini, silakan hubungi <mail
link="vapier@gentoo.org">penulis</mail> atau laporkan bug di <uri
link="http://bugs.gentoo.org/">Bugzilla Gentoo</uri>. Jika anda tertarik untuk
memperbagus panduan ini, dengan senang hati, kirimkan ke penulis.
</p>

</body>
</section>
</chapter>
</guide>
