<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/handbook/hb-install-system.xml,v 1.3 2004/10/05 10:49:52 swift Exp $ -->

<!--
  English doc rev 1.31
-->

<sections>
<section>
<title>Chrooting</title>
<subsection>
<title>Optioneel: Mirrors selecteren</title>
<body>

<p>
Het is mogelijk om met <c>mirrorselect</c> <path>/etc/make.conf</path> aan te 
passen zodat snellere mirrors gebruikt worden om sources en de portage tree te 
downloaden.
</p>

<pre caption="Selecting fast mirrors">
# <i>mirrorselect -a -s4 -o &gt;&gt; /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Als dit echter niet lukt, geen nood. Dit is volledig optioneel, de default 
waarden volstaan.
</p>

</body>
</subsection>
<subsection>
<title>DNS Info kopieren</title>
<body>

<p>
Voor we kunnen chrooten moet eerst de DNS informatie in 
<path>/etc/resolv.conf</path>  gekopieerd worden. Dit is nodig omdat de nieuwe 
omgeving de nameservers voor je netwerk moet kennen.
</p>

<pre caption="Copy over DNS information">
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

</body>
</subsection>
<subsection>
<title>Optioneel: /dev mounten</title>
<body>

<p>
Knoppix gebruikers (of personen die Gentoo installeren vanaf een medium 
zonder DevFS) moeten nu de <path>/dev</path> structuur bind-mounten.
Dit is dus niet nodig als je de Gentoo LiveCD gebruikt.
</p>

<pre caption="Bind-mounting /dev">
# <i>mkdir /mnt/gentoo/dev</i>
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
</pre>

</body>
</subsection>
<subsection>
<title>De Nieuwe Omgeving</title>
<body>

<p>
Nu alle partities aangemaakt zijn en de basis omgeving geinstalleerd is 
kunnen we naar de nieuwe omgeving overstappen. Dit gebeurt door the 
<e>chrooten</e>, dit betekent dat we van de installatie omgeving overstappen 
naar de geinstalleerde omgeving.
</p>

<p>
Dit chrooten gebeurt in 3 stappen. Eerst passen we root aan van 
<path>/</path> (op het installatie medium) naar <path>/mnt/gentoo</path> (op je
partities) met <c>chroot</c>. Daarna maken we de nieuwe omgeving aan met 
<c>env-update</c>, dit maakt alle omgevingsvariabelen aan. Als laatste  laden 
we die variabelen in het geheugen met <c>source</c>.
</p>

<pre caption = "De nieuwe omgeving binnen chrooten">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
</pre>

<p>
Proficat! U bent nu in uw eigen Gentoo Linux omgeving.
Uiteraard bent u nog niet klaar, er wachten u nog een aantal secties.
</p>

</body>
</subsection>
<subsection>
<title>Optioneel: Update van Portage</title>
<body>

<p>
Als je <e>geen</e> GRP gebruikt, moet je een recente Portage snapshot 
downloaden. <c>emerge sync</c> doet dit voor je. GRP-gebruikers moeten dit 
overslaan en verdergaan met <uri link="#doc_chap1_sect6">USE 
variabele configureren</uri>.
</p>

<pre caption="Portage updaten">
# <i>emerge sync</i>
</pre>

<p>
Als er een waarschuwing komt dat er een update is voor Portage mag je dit 
negeren. We zullen Portage later tijdens de installatie wel updaten.
</p>

</body>
</subsection>
<subsection>
<title>USE variabele configureren</title>
<body>

<p>
<c>USE</c> is een van de meest krachtige variabelen die Gentoo biedt.
Verschillende programmas kunnen met optionele support voor bepaalde zaken 
gecompileerd worden Bijvoorbeeld, sommigen met gtk-support of qt-support. 
Anderen met of zonder SSL support. Sommige programmas kunnen ook met 
framebuffer support (svgalib) ipv. X11 support (X-server) gecompileerd worden.
</p>

<p>
De meeste distributies compileren hun packages met support voor zoveel als 
mogelijk, dit zorgt voor grotere programmas, langere laadtijden en meer 
afhankelijkheden. Bij Gentoo ben je vrij in welke opties jij zelf wilt. 
Dit is waar <c>USE</c> komt bij kijken.
</p>

<p>
In de <c>USE</c> variabele definieer je sleutelwoorden die aan compile-opties 
gelinked zijn. Bijvoorbeeld, <e>ssl</e> zal ssl-support compileren bij alle 
programmas die dat ondersteunen. <e>-X</e> verwijderd X-server support (let op 
de min). <e>gnome gtk -kde -qt</e> zal je programmas met gnome (en gtk) 
support, maar niet met kde (en qt) support compileren, zo is je systeem 
volledig getweaked voor GNOME.
</p>

<p>
De default <c>USE</c> instellingen staan in 
<path>/etc/make.profile/make.defaults</path>. Wat je zelf in 
<path>/etc/make.conf</path> plaatst wordt berekend tegen de default 
instellingen. Als je iets toevoegt aan <c>USE</c> wordt het als default 
opgenomen. Als je iets verwijdert van <c>USE</c> wordt dit uit de default 
weggehaald (indien het er in zat). Pas <e>nooit</e> iets aan binnen 
<path>/etc/make.profile</path>; dit bestand wordt overschreven bij een een 
update van Portage.
</p>

<p>
Een volledige beschrijving van <c>USE</c> is te vinden in het tweede deel van 
het Gentoo Handboek, <uri link="?part=2&amp;chap=1">Chapter 1: USE 
vlaggen</uri>. Alle beschikbare USE vlaggen zijn te vinden op je systeem onder 
<path>/usr/portage/profiles/use.desc</path>. 
</p>

<pre caption="Alle beschikbare USE vlaggen bekijken">
# <i>less /usr/portage/profiles/use.desc</i>
</pre>

<p>
Als voorbeeld <c>USE</c> instelling: een KDE-gebaseerd systeem met DVD, ALSA
en CD Recording support:
</p>

<pre caption="/etc/make.conf openen">
# <i>nano -w /etc/make.conf</i>
</pre>

<pre caption="USE instelling">
USE="-gtk -gnome qt kde dvd alsa cdr"
</pre>

</body>
</subsection>
<subsection>
<title>Optioneel: Gedistribueerd Compilen</title>
<body>

<p>
Het is mogelijk meerdere systemen te gebuiken om je te helpen bij het 
compileren van je nieuwe systeem. De <uri link="/doc/en/distcc.xml">DistCC 
Guide</uri> legt dit beter uit. 
</p>

</body>
</subsection>
</section>
<section>
<title>Verschillen tussen Stage1, Stage2 en Stage3</title>
<body>

<p>
Neem nu even de tijd om na te denken over de volgende stappen.
Er werd gevraagd te kiezen tussen <e>stage1</e>, <e>stage2</e> of 
<e>stage3</e> en je werd gewaarschuuwd dat deze keuze belangrijk is voor de 
volgende stappen. Dit is de eerste keer dat die keuze de volgende stappen 
bepaald.
</p>

<ul>
<li>
  Als je voor <e>stage1</e> kiest, volg je <e>beide</e> stappen in dit 
  hoofdstuk (eerst <uri link="#doc_chap3">van Stage1 naar Stage2</uri>).
</li>
<li>
  Als je voor <e>stage2</e> kiest, kan je de eerste stap overslaan en direct 
  aan <uri link="#doc_chap4">van Stage2 naar Stage3</uri> beginnen.
</li>
<li>
  Als je voor <e>stage3</e> kiest (met of zonder GRP), dan sla je beide over 
  en ga je door naar <uri link="?part=1&amp;chap=7">de Kernel 
  configureren</uri>.
</li>
</ul>

</body>
</section>
<section>
<title>van Stage1 naar Stage2</title>
<subsection>
<title>Introductie tot Bootstrapping</title>
<body>

<p>
Dus je wil alles vanaf nul compileren? Ok dan :-)
</p>

<p>
In deze stap zullen we het Gentoo systeem bootstrappen. Dit duurt lang, maar 
het resulteert in een volledig geoptimaliseerd systeem voor jouw machine.
</p>

<p>
<e>Bootstrapping</e> betekent de GNU C Library, GNU Compiler Collectie en een 
aantal andere systeem programmas compileren. De GNU Compiler Collectie moet 
2 keer aangemaakt worden, eerst met een "generic" compiler en daarna met de 
compiler die we in de eerste stap gecompileerd hebben.
</p>

<p>
Voor we met de bootstrap starten: aan aantal opties die je eventueel wilt.
Indien je deze niet wilt kan je verder met <uri link="#doc_chap3_sect4">het 
Systeem Bootstrappen</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Optioneel: Compilatie Tijd verminderen</title>
<body>

<p>
Als je het bootstrappen wat sneller wil laten gebeuren kan je java-support 
tijdelijk uitschakelen. Dit betekent dat de GNU Compiler Collection en de GNU 
C Library zonder java-support worden gecompileerd (dit verminderd de duur 
aanzienlijk). Dit betekent wel dat je geen GNU Java Compiler (<c>gcj</c>) 
hebt, wat <e>niet</e> zorgt dat je geen java applets en dergelijke kunt 
gebruiken.
</p>

<p>
Om java-support tijdelijk te deselecteren, gebruik <e>USE="-java"</e> alvorens 
het bootstrap script te starten.
</p>

<pre caption = "Java ondersteuning deselecteren">
# <i>export USE="-java"</i>
</pre>

<p>
En vergeet niet na het bootstrappen dit weer ongedaan te maken:
</p>

<pre caption="USE terug zetten op de standaard">
# <i>unset USE</i>
</pre>

</body>
</subsection>
<subsection>
<title>Optioneel: De sources eerst downloaden</title>
<body>

<p>
Het is mogelijk om eerst alle source code af te halen en daarna pas het 
bootstrappen te startten (als je niet wil dat je internet connectie de hele 
tijd open staat). Indien je dit niet doet gebeurt dit wel automatisch, maar 
dan heb je een permanente netwerk connectie nodig. Gebruik hiervoor de 
<e>-f</e> optie van het bootstrap script, dit <e>f</e>etcht alle code voor u.
</p>

<pre caption = "De benodigde sources downloaden">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh -f</i>
</pre>

</body>
</subsection>
<subsection>
<title>het Systeem Bootstrappen</title>
<body>

<p>
Nu kan je het bootstrap script starten. Daarna kan je maar best wat anders 
gaan doen, want dit duurt redelijk lang. (Bijvoorbeeld de Gentoo developers 
lastig vallen op #gentoo)
</p>

<pre caption = "Bootstrapen">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>

<p>
Als je eerder <c>CHOST</c> hebt aangepast in <path>/etc/make.conf</path> moet 
je een aantal variabelen herinitialiseren zodat <c>gcc</c> snel werkt.
</p>

<pre caption="Omgevings variabelen herinitializeren">
# <i>source /etc/profile</i>
</pre>

<p>
Ga nu door met de volgende stap <uri link="#doc_chap4">van Stage2
naar Stage3</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>van Stage2 naar Stage3</title>
<subsection>
<title>Introductie</title>
<body>

<p>
Als je deze sectie leest heb je een gebootstrapped systeem (ofwel omdat je 
het daarnet zelf gedaan hebt, ofwel gebruik je een <e>stage2</e>). 
Dan is het nu tijd om alle syteem pakketten te compileren.
</p>

<p>
<e>Allemaal</e>? Nee, in deze stap worden enkel deze gemaakt waarvoor er geen 
alternatieven zijn. Sommige pakketten hebben meerdere alternatieven (onder 
andere system loggers) en Gentoo draait rond keuzes, dus we leggen er 
je geen op.
</p>

</body>
</subsection>
<subsection>
<title>Optioneel: Zien wat er gaat gebeuren</title>
<body>

<p>
Als je wil weten welke pakketten er geinstalleerd zullen worden, voer dan
<c>emerge --pretend system</c> uit. Dit geeft een lijst van alle te 
installeren pakketten. Het kan gebeuren dat je hiervoor <c>less</c> of 
<c>more</c> nodig hebt omdat de lijst aardig lang kan worden.
</p>

<pre caption = "Bekijk wat 'emerge system' gaat doen">
# <i>emerge --pretend system | less</i>
</pre>

</body>
</subsection>
<subsection>
<title>Optioneel: de Sources downloaden</title>
<body>

<p>
Als je wil dat <c>emerge</c> eerst de sources download voor je verder gaat
(als je niet wil dat uw connectie open staat terwijl je het syteem compileert)
kan je de <e>--fetchonly</e> optie van <c>emerge</c> gebruiken. 
</p>

<pre caption = "Fetching the sources">
# <i>emerge --fetchonly system</i>
</pre>

</body>
</subsection>
<subsection>
<title>het Systeem compileren</title>
<body>

<p>
Om te starten met het systeem te compileren, voer je <c>emerge system</c> uit. 
Dit duurt ook een tijdje, dus kan je je maar beter ergens anders mee bezig 
houden.
</p>

<pre caption = "Het systeem compileren">
# <i>emerge system</i>
</pre>

<p>
Als dit gedaan is, ga je verder met <uri link="?part=1&amp;chap=7">de Kernel 
configureren</uri>.
</p>

</body>
</subsection>
</section>
</sections>
