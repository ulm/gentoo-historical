<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Id: hb-install-ppc-bootloader.xml,v 1.2 2006/12/20 11:39:12 diox Exp $ -->

<sections>

<version>7.1</version>
<date>2006-11-13</date>

<section>
<title>Kiezen van de Bootloader</title>
<subsection>
<title>Inleiding</title>
<body>

<p>
Nu dat de kernel geconfigureerd en gecompileerd is zal je een bootloader
nodig hebben om jouw nieuwe linux installatie op te starten. De
bootloader die je zal gebruiken hangt af van het type van PPC machine je
hebt.
</p>

<p>
Indien je een NewWorld Apple of IBM machine gebruikt, gebruik je <uri
link="#yaboot">yaboot</uri>. OldWorld Apple machines hebben twee opties, <uri
link="#bootx">BootX</uri> (aanbevolen) en  <uri link="#quik">quik</uri>. The
Pegasos heeft geen bootloader nodig maar je zult wel <uri
link="#bootcreator">BootCreator</uri> moeten emergen om de SmartFirmware
opstartmenu's te maken.
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>Default: Yaboot gebruiken</title>
<subsection>
<title>Inleiding</title>
<body>

<impo>
yaboot kan enkel gebruikt worden op NewWorld Apple en IBM systemen!
</impo>

<p>
Om de opstartapparaten te vinden moet yaboot de device nodes aanspreken
die aangemaakt zijn door udev bij het opstarten en sysfs filesystem.
Deze twee filesystems zijn respectievelijk te vinden in
<path>/dev</path> en <path>sys</path>. Om dit te doen zal je de
filesystems moeten "bind mount'en" vanaf de Installatie CD's root naar
de <path>/dev</path> en de <path>/sys</path> mount points in de
gechroote omgeving. Als je deze alreeds "ge-bind mount" hebt, moet je dit niet
meer opnieuw doen.
</p>

<pre caption="Bind-mounten van  het apparaat en sysfs filesystem">
# <i>exit </i> # hiermee ga je uit je chroot
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>mount -o bind /sys /mnt/gentoo/sys</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>

<p>
Om yaboot te configureren kan je <c>yabootconfig</c> gebruiken om automatisch
een configuratiebestand aan te maken. Indien je Gentoo op een G5 machine
installeert (waarop <c>yabootconfig</c> niet altijd werkt), of je wilt van
firmware of USB opstarten, zal je yaboot manueel moeten configureren.
</p>

<note>
Je zal yaboot.conf manueel moeten aanpassen als je genkernel gebruikt, zelfs
als yabootconfig gebruikt is. De kernel image sectie van yaboot.conf
moet zo aangepast worden:
</note>

<pre caption="Genkernel opstart argumenten bijvoegen aan yaboot.conf">
<comment>###########################################################
## Deze sectie kan gekopieerd worden als je meer dan 1 kernel
## of paar bootopties hebt. - verander kernel-naam
## en initrd-naam met dezelfde naam van je kernel en initrd image.
###########################################################</comment>
image=/boot/kernel-name
  label=Linux
  root=/dev/ram0
  partition=3
  initrd=/boot/initrd-name
  append="real_root=/dev/hda3 init=/linuxrc"
  <comment># Je kan extra kernel argumenten bijvoegen zoals:
  # rootdelay=10 voor op USB/Firewire op te starten</comment>
  read-only
<comment>##########################################################</comment>
</pre>

<ul>
  <li><uri link="#yabootconfig">Standaard: yabootconfig gebruiken</uri></li>
  <li>
    <uri link="#manual_yaboot">Alternatief: Manuale yaboot Configuratie</uri>
  </li>
</ul>

</body>
</subsection>
<subsection id="yabootconfig">
<title>Standaard: yabootconfig gebruiken</title>
<body>

<p>
<c>yabootconfig</c> zal de partities van u systeem automatisch detecteren en
zal een tweevoudige en drievoudige opstartcombinatie met Linux, Mac OS, en
Max OS X maken.
</p>

<p>
Om <c>yabootconfig</c> te gebruiken, moet je schijf een Apple_Bootstrap
partitie hebben, en  <path>/etc/fstab</path> moet geconfigureerd zijn om jouw
Linux partities aan te geven. Deze stappen zouden al vroeger moeten uitgevoerd
zijn, maar controleer toch <path>/etc/fstab</path>even alvorens verder te gaan.
Controleer nu of dat je <c>yaboot</c> reeds geinstalleerd hebt.
</p>

<pre caption = "yaboot installeren met GRP">
# <i>emerge --usepkg yaboot</i>
</pre>

<p>
Verlaat nu de gechroote omgeving en voer  <c>yabootconfig --chroot
/mnt/gentoo</c> uit. Eerst zal het programma de locatie van de bootstrap
partitie bevestigen. Als je het aanbevolen partitieschema hebt gebruikt zou je
bootsrap partitie /dev/hda2 moeten zijn. Druk <c>Y</c> indien de uitvoer
correct is. Indien niet, controleer je <path>/etc/fstab</path>.
<c>yabootconfig</c> zal daarna je systeemconfiguratie
scannen,<path>/etc/yaboot.conf</path> creeeren en <c>mkofboot</c> uitvoeren
voor jou. <c>mkofboot</c> wordt gebruikt om de Apple_Bootstrap partitie te
formateren, en het yaboot configuratiebestand erin te installeren. Ga na dit
terug in je gechroote omgeving.
</p>

<pre caption="De gechroote omgeving terug binnengaan">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Je zou de inhoud van <path>/etc/yaboot.conf</path> kunnen willen verifieren.
Als je aanpassingen maakt in <path>/etc/yaboot.conf</path> (zoals het standaard
opstart OS veranderen), wees dan zeker dat je <c>ybin -v</c> heruitvoert om de
veranderingen toe te passen op de Apple_Bootstrap partitie.
</p>

<p>
Ga nu verder met <uri link="#reboot">Het systeem herstarten</uri>.
</p>

</body>
</subsection>
<subsection id="manual_yaboot">
<title>Alternatief: Manuele yaboot Configuratie</title>
<body>

<p>
Controleer eerst dat je <c>yaboot</c> op je systeem geinstalleerd hebt
hebt:
</p>

<pre caption = "yaboot installeren met GRP">
# <i>emerge --usepkg yaboot</i>
</pre>

<p>
Een voorbeeldbestand van <path>yaboot.conf</path> is hieronder gegeven, maar je
zal het moeten veranderen om aan jouw noden te voldoen. G5 gebruikers en
gebruikers die opstarten vanop firmware en USB moeten weten dat hun
schijven als SCSI schijven aanzien worden door de Linux kernel, zo zal je dus
<path>/dev/hda</path> door <path>/dev/sda</path> moeten verwisselen.
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## voer "man yaboot.conf" uit voor details. Maak geen veranderingen aan tot
je deze stap hebt uitgevoert!!
## bekijk ook: /usr/share/doc/yaboot/examples voor voorbeeldconfiguraties
## Voor een dual-boot menu, voeg een of meer toe:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ
## De bootstrap partitie:</comment>
boot=/dev/hda2

<comment>## ofboot is de openfirmware manier om de bootstrap partitie te
## bepalen. Indien dit niet bepaald is zal yaboot er niet in
## slagen om op G5 en op  sommige G4's je de noodzakelijke argumenten door te
## geven aan het mkofboot/ybin programma. hd:x betekent hier /dev/sdaX
## (of /dev/hdaX).
## G5 gebruikers moeten deze lijn decommentarieren!!

#ofboot=hd:2

## Gebruikers die opstarten vanop firmware moeten zoiets als dit
gebruiken:
# ofboot=fw/node/sbp-2/disk@0:

## Gebruikers die opstarten vanop USB moeten zoiets als dit gebruiken:
# ofboot=usb/disk@0:

## hd: is de korte schrijfwijze voor de eerste harde schijf die OpenFirmware
## herkent</comment>
device=hd:

<comment>## Firmware en USB gebruikers zullen de volledige
## OF device naam moeten specifieren  Deze kan gevonden worden door
## ofpath te gebruiken, dat bij yaboot inbegrepen is.

# device=fw/node@0001d200e00d0207/sbp-2@c000/disk@0:
</comment>

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Deze sectie kan gekopieerd worden als je meer dan 1 kernel
## of paar bootopties hebt. - verander kernel-naam met je kernel-versie
#################</comment>
image=/boot/kernel-name
  label=Linux
  root=/dev/hda3
  partition=3
<comment>#  append="rootdelay=10"  # Nodig om USB/Firewire op te
starten</comment>
  read-only
<comment>##################

## G5 gebruikers en sommige G4 gebruikers zullen dit moeten gebruiken:
##   macos=hd:13
##   macosx=hd:12
## in plaats van de voorbeeld instellingen.</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Eens dat <path>yaboot.conf</path> geconfigureerd is, voer <c>mkofboot -v</c>
uit om de Apple_Bootstrap partitie te formateren en de instellingen te
installeren. Als je yaboot.conf aanpast nadat de Apple_Bootstrap partitie
gecreeerd is, kan je de instellingen updaten door <c>ybin -v</c> uit te voeren.
</p>

<pre caption="De boostrap partitie instellen">
# <i>mkofboot -v</i>
</pre>

<p>
Voor meer informatie over yaboot, bekijk het <uri
link="http://penguinppc.org/bootloaders/yaboot">yaboot project</uri> eens. Maar
nu de installatie voortzetten met <uri link="#reboot">Het systeem
her(op)starten</uri>.
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>Alternatief: BootX</title>
<body>

<impo>
BootX kan alleen gebruikt worden op OldWorld Apple systemen met MacOS 9 of
ouder!
</impo>

<p>
Omdat BootX Linux opstart vanuit MacOS, zal de kernel van de Linux partitie
naar de MacOS partitie moeten gekopieerd worden. Mount eerst de MacOS partitie
vanbuiten de gechroote omgeving. Gebruik <c>mac-fdisk -l</c> om het MacOS
partitie nummer te vinden, sda6 is hier als voorbeeld gebruikt. Als de partitie
gemount is, zullen we de kernel naar de systeemmap kopieren zodat BootX de
kernel kan vinden.
</p>

<pre caption="De kernel naar de MacOS partitie kopieren">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux "/mnt/mac/System Folder/Linux Kernels"</i>
</pre>

<p>
Indien genkernel wordt gebruikt, moet je, en de kernel en de initrd
kopieren naar de MacOS partitie.
</p>

<pre caption="De Genkernel kernel en de initrd naar de  MacOS partitie kopieren">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initramfs-* "/mnt/mac/System Folder"</i>
</pre>

<p>
Nu dat de kernel gekopieerd is moeten we herstarten om BootX op te zetten.
</p>

<pre caption="Alle partities unmounten en herstarten">
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo/sys /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Vergeet natuurlijk niet de opstartbare CD uit te halen, anders zal de CD
opnieuw opstarten in plaats van MacOS.
</p>

<p>
Als de machine is opgestart in MacOS, open je het BootX controle paneel. Indien
je genkernel niet gebruikt, selecteer <c>Options</c> en deselecteer <c>Use
specified RAM disk</c>. Indien je genkernel gebruikt, zorg dat de genkernel
initrd is geselecteerd in plaats van de de installatie CD initrd.
Indien je genkernel niet gebruikt, is er een optie om de Linux root disk en
partitie van de machine te bepalen. Vul deze met de gepaste waarden in.
Afhangend van u kernelconfiguratie, zullen extra opstartargumenten mee gegeven
moeten worden.
</p>

<p>
BootX kan geconfigureerd worden om Linux te starten tijdens het opstarten.
Indien je dit doet, zal je eert je machine zien opstarten in MacOS en dan,
tijdens het opstarten, zal BootX Linux laden en starten. Bekijk de <uri
link="http://penguinppc.org/bootloaders/bootx/">BootX home page</uri> voor meer
informatie.
</p>

<impo>
Wees zeker dat je ondersteuning voor HFS en HFS+ filesystems hebt in je
kernel, anders zal je niet in staat zijn om de kernel te veranderen of up te
daten op je MaxOS partitie.
</impo>

<p>
Herstart nu opnieuw en start op in Linux, ga dan verder met <uri
link="?part=1&amp;chap=11">Je Gentoo Installatie afwerken</uri>.
</p>

</body>
</section>
<section id="quik">
<title>Alternatief: quik</title>
<body>

<p>
quik zorgt dat OldWorld Macs kunnen opstarten zonder MacOS. Nochtans, het is
niet goed ondersteunt en heeft enkele grillen. Indien je de keuze hebt is het
aangeraden om BootX te gebruiken omdat het meer betrouwbaar is en gemakkelijker
op te zetten dan quik.
</p>

<p>
Eerst zullen we quik moeten installeren:
</p>

<pre caption="Emerge quik">
# <i>emerge quik</i>
</pre>

<p>
Vervolgens zullen we het moeten configureren. Pas /etc/quik.conf aan en stel je
image in naar de kernel die we naar de opstartpartitie gekopieerd hebben.
</p>

<pre caption="quik.conf configureren">
# Voorbeeld van quik.conf
init-message = "Gentoo 2006.1\n"
partition = 2           <comment># Dit is de boot partitie</comment>
root = /dev/hda4
timeout = 30
default = gentoo
image = /vmlinux        <comment># Dit is jouw kernel</comment>
label = gentoo
</pre>

<p>
Uw quik.conf bestand moet op dezelfde partitie als de quik opstartimages
staan, nochtans kan het op een andere partitie staan op dezelfde schijf, toch
is het aangeraden het naar je opstart partitie te verplaatsen.
</p>

<pre caption="quik.conf naar /boot verplaatsen">
# <i>mv /etc/quik.conf /boot/quik.conf</i>
</pre>

<p>
We zullen nu u opstartvariabelen veranderen zodat quik geladen wordt bij het
opstarten. Om dit te doen zullen we een programma dat <c>nvsetenv</c> noemt
gebruiken. De variabelen die je zal veranderen hangen af van machine tot
machine, het is best om jouw machine's <uri
link="http://penguinppc.org/bootloaders/quik/quirks.php">grillen</uri> eerst op
te zoeken alvorens een poging te ondernemen.
</p>

<pre caption="De opstart variabelen instellen">
# <i>nvsetenv auto-boot true</i> <comment># Zet op vals indien je wilt opstarten in OF, niet alle modellen kunnen de OF uitvoer weergeven</comment>
# <i>nvsetenv output-device video</i> <comment># Controleer de grillen pagina, er zijn veel mogelijke variaties</comment>
# <i>nvsetenv input-device kbd</i>
# <i>nvsetenv boot-device scsi/sd@1:0</i> <comment># Voor SCSI</comment>
# <i>nvsetenv boot-device ata/ata-disk@0:0</i> <comment># Voor ATA</comment>
# <i>nvsetenv boot-file /boot/vmlinux-2.6.17 root=/dev/hda4</i> <comment>Het eerste item is de map van de kernel, het tweede is de root partitie. Je mag eender welke kerneloptie toevoegen aan het einde van deze lijn.</comment>
# <i>nvsetenv boot-command boot</i> <comment># Zet dit op bye voor MacOS en boot voor Linux</comment>
</pre>

<note>
Het is ook mogelijk om u opstartvariabelen voor MacOS te veranderen. Afhangend
van het model zul je, <uri
link="http://penguinppc.org/bootloaders/quik/BootVars.sit.hqx">bootvars</uri>
of <uri
link="ftp://ftp.apple.com/developer/macosxserver/utilities/SystemDisk2.3.1.smi.bin">
Apple System Disk</uri> moeten gebruiken.  Bezoek snel de grillenpagina
hierboven voor meer informatie.
</note>

<p>
Nu dat we je machine hebben ingesteld om op te starten, zullen we moeten
controleren of de opstartimages correct geinstalleerd zijn. Voer <c>quik -v -C
/boot/quik.conf</c> uit. Het zou je moeten vertellen dat het de eerste stage
QUIK opstart blok heeft geinstalleerd.
</p>

<note>
Indien er iets verkeerd is gegaan, kan je altijd je PRAM resetten naar de
standaardwaarden door <c>command + option + p + r</c> ingedrukt te houden voor
je de machine opstart. Dit zal de waarden die je met nvsetenv ingesteld hebt
verwijderen en zou je moeten toelaten om ofwel een MacOS opstartschijf of op
een Linux opstartschijf op te starten.
</note>

<p>
Ga nu verder met de installatie <uri link="#reboot">Het systeem
herstarten</uri>.
</p>

</body>
</section>
<section id="bootcreator">
<title>Alternatief: BootCreator</title>
<body>

<impo>
BootCreator zal een mooi SmartFirmware opstartmenu schrijven in Forth voor de
Pegasos.
</impo>

<p>
Verzeker u er eerst van dat je <c>BootCreator</c> op je systeem geinstalleerd
hebt:
</p>

<pre caption = "Bootcreator herstarten">
# <i>emerge --usepkg bootcreator</i>
</pre>

<p>
Kopieer nu het bestand <path>/etc/bootmenu.example</path> naar
<path>/etc/bootmenu</path> en pas het aan je noden aan.
</p>

<pre caption = "Het bootcreator configuratie bestand aanpassen">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
Hieronder staat een volledig <path>/etc/bootmenu</path> configuratie bestand.
De kernel-naam en initrd-naam moeten vervangen worden door you kernel en
initrd images naam.
</p>

<pre caption = "bootcreator configuratie bestand">
<comment>#
# Voorbeeld beschrijving bestand voor bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux (Normal)
ide:0 kernel-name video=radeonfb:1024x768@70 root=/dev/hda3

[SECTION]
Local HD -> Genkernel (Normal)
ide:0 kernel-name root=/dev/ram0 real_root=/dev/hda3 init=/linuxrc initrd=initrd-name
</pre>

<p>
Als laatste moet het <path>bootmenu</path> overgebracht worden in Forth en naar
de opstartpartitie gekopieerd worden, zodat de SmartFirmware het kan lezen.
Daarom moet je <c>bootcreator</c> gebruiken:
</p>

<pre caption = "Installeren van het opstartmenu">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
Kijk zeker eens in de SmartFirmware instellingen als je herstart, dat
<path>menu</path> is het bestand dat standaard geladen zal worden.
</note>

<p>
Ga nu verder met de installatie met <uri link="#reboot">Het systeem
herstarten</uri>.
</p>

</body>
</section>
<section id="reboot">
<title>Het systeem herstarten</title>
<subsection>
<body>

<p>
Verlaat de gechroote omgeving en unmount alle gemounte partities. Druk dan het
magische commando in waar je al heel de tijd zat op te wachten: <c>reboot</c>.
</p>

<pre caption="De gechroote omgeving verlaten, alle partities unmounten en herstarten">
# <i>exit</i>
livecd ~# <i>umount /mnt/gentoo/proc /mnt/gentoo/dev /mnt/gentoo/sys /mnt/gentoo</i>
livecd ~# <i>reboot</i>
</pre>

<p>
Eens herstart in je Gentoo installatie, maak je systeem af met <uri
link="?part=1&amp;chap=11">Je Gentoo Installatie afwerken</uri>.
</p>

</body>
</subsection>
</section>
</sections>
