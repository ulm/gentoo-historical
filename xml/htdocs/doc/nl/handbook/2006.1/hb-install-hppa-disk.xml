<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/handbook/2006.1/hb-install-hppa-disk.xml,v 1.1 2006/12/11 16:58:09 diox Exp $ -->

<sections>

<version>7.1</version>
<date>2006-11-02</date>

<section>
<title>Inleiding van Block Devices</title>
<subsection>
<title>Block Devices</title>
<body>

<p>
We gaan eens goed kijken naar disk-georienteerde aspecten van Gentoo Linux en
Linux in het algemeen, inclusief Linux filesystemen, partities en block
devices. Wanneer je bekend bent geraakt met de ins en outs van disks en
filesystemen, Gaan we je door het proces leiden van het opzetten van partities
en filesystemen voor jouw Gentoo Linux installatie.
</p>

<p>
Om te beginnen gaan we introduceren <e>block devices</e> introduceren. Het
meest bekende block device is waarschijnlijk degene van de eerste SCSI HD in
een Linux systeem, namelijk <path>/dev/sda</path>.
</p>

<p>
De block devices hierboven geven een abstracte disk-interface weer. Programma's
kunnen deze block devices gebruiken om te communiceren met de harddisk, zonder
zich zorgen te maken of de harddisk nu IDE, SCSI of iets anders is. Het
programma kan simpelweg de ruimte op de harddisk gebruiken als een stel
opvolgende, willekeurig toegankelijke 512-byte blokken.
</p>

</body>
</subsection>
<subsection>
<title>Partities en Slices</title>
<body>

<p>
Hoewel het theoretisch mogelijk is om een complete harddisk te gebruiken als
Linux systeem, wordt dit in de praktijk bijna niet gedaan. De harddisk wordt
meestal opgesplitst in kleinere, meer te managen block devices. Op de meeste
systemen worden dit <e>partities</e> genoemd. Andere architecturen gebruiken
een vergelijkbare techniek genaamd <e>slices</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Een Partitie Schema Designen</title>
<subsection>
<title>Hoe veel en hoe groot?</title>
<body>

<p>
Het aantal partities is zeer afhankelijk van je omgeving. Bijvoorbeeld, wanneer
je veel gebruikers hebt, zul je je <path>/home</path> apart willen houden. Dit
verhoogd de beveiliging en maakt het back-uppen makkelijker. Als je Gentoo
installeerd om als mailserver te fungeren, dan moet je je <path>/var</path>
apart houden, omdat daar alle mail terecht komt. Een goede keuze van je
filesystem zal dan je performance optimalizeren. Gameservers zullen een aparte
<path>/opt</path> partitie hebben, omdat de meeste game servers daar
geinstalleerd worden. De reden is gelijk aan <path>/home</path>:  beveiliging
en back-up. Je zult altijd <path>/usr</path> groot willen hebben. Het herbergd
namelijk het gros van de applicaties en het bevat de Portage tree, die enkel
alleen al 500 Mbyte in beslag neemt naast alle andere broncode/
</p>

<p>
Zoals je ziet zal wat je wilt opslaan bepalen hoe je partities er uit zien.
Verschillende partities of volumes hebben de volgende voordelen:
</p>

<ul>
<li>
  Je kunt het best presterende filsysteem kiezen voor elke partitie of volume
</li>
<li>
  Je hele systeem kan niet vollopen door een foutief programma dat continu
  bestanden wegschrijft naar je schijf
</li>
<li>
  Wannner nodig kan het aantal filesyteem controles vermindert worden, omdat
  meerdere controles parallel gedaan kunenn worden (hoewel dit voordeel alleen
  opgaat bij meerdere harddisks dan bij meerdere partities)
</li>
<li>
  De beveiliging kan vergroot worden door partities als read-only te mounten,
  of als nosuid (setuid bits worden genegeerd), noexec (uitvoerbare bits worden
  genegeerd) etc.
</li>
</ul>

<p>
Aan de andere kant hebben meerdere partities ook een groot nadeel: als ze niet
goed zijn geconfigureerd, dan kun je kans lopen op een systeem met op de ene
partitie veel vrije ruimte en op de andere partitie ruimte tekort. Je kunt
overigens ook maar 15 partities aanmaken op een SCSI of SATA schijf.
</p>

</body>
</subsection>
</section>
<section>
<title>Fdisk gebruiken op HPPA om je Harddisk te Partitioneren</title>
<body>

<p>
Gebruik <c>fdisk</c> om de partities te maken die je wilt:
</p>

<pre caption="Harde schijf partitioneren">
# <i>fdisk /dev/sda</i>
</pre>

<p>
HPPA machines gebruiken de PC standard DOS partitie tabellen. Om een nieuwe DOS
partitie tabel aan te maken, gebruik je het <c>o</c> commando.
</p>

<pre caption="DOS partitie tabel aanmaken">
# <i>fdisk /dev/sda</i>

Command (m for help): <i>o</i>
Building a new DOS disklabel.
</pre>

<p>
PALO (de HPPA bootloader) heeft een speciale partitie nodig om te werken. Je
moet een partitie creeren van minimaal 16 MByte aan het begin van je harddisk.
Het partitie-type moet van het type <e>f0</e> zijn (Linux/PA-RISC boot).
</p>

<impo>
Als je dit negeert zal je computer je minder lief vinden en niet meer op willen
starten. Daarnaast zul je bij een harddisk groter dan 2 Gbyte, je bootpartitie
in de eerste 2 GB moeten plaatsen. PALO kan namelijk geen kernel inlezen boven
de 2 GByte limiet.
</impo>

<pre caption="Een simpel default partitie schema">
# <i>cat /etc/fstab</i>
/dev/sda2    /boot   ext3    noauto,noatime   1 1
/dev/sda3    none    swap    sw               0 0
/dev/sda4    /       ext3    noatime          0 0

# <i>fdisk /dev/sda</i>

Command (m for help): <i>p</i>

Disk /dev/sda: 4294 MB, 4294816768 bytes
133 heads, 62 sectors/track, 1017 cylinders
Units = cylinders of 8246 * 512 = 4221952 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1               1           8       32953   f0  Linux/PA-RISC boot
/dev/sda2               9          20       49476   83  Linux
/dev/sda3              21          70      206150   82  Linux swap
/dev/sda4              71        1017     3904481   83  Linux
</pre>

<p>
Nu je partities gemaakt zijn, kun je verder met <uri
link="#filesystems"> Filesystemen aanmaken</uri>.
</p>

</body>
</section>
<section id="filesystems">
<title>Filesystemen aanmaken</title>
<subsection>
<title>Introductie</title>
<body>

<p>
Nu de partities aangemaakt zijn, is het tijd om er filesystemen op te plaatsen.
Als het je niet uitmaakt welk filesysteem je gebruikt en genoegen neemt met wat
wij als default hanteren in dit handboek, kun je verder naar (<uri
link="#filesystems-apply">Een Filesysteem op een Partitie zetten</uri>. En
anders kun je doorlezen over de verschillende filesystemen...
</p>

</body>
</subsection>
<subsection>
<title>Filesystemen?</title>
<body>

<p>
Er zijn verschillende filesystemen voorhanden. Ext2, ext3, XFS en reiserfs zijn
stabiel onder de HPPA architectuur. De andere zijn nog experimenteel.
</p>

<p>
<b>ext2</b> is het beproefde Linux filesysteem maar heeft geen metadata
journaling, wat betekend dat routine ext2 filesystem checks bij het opstarten
vrij tijdrovend kunnen zijn. Er zijn tegenwoordig redelijk wat neiuwere
journaliserende filesystemen die veel sneller kunnen controleren op
consistentie en zijn daarom aanbevolen boven de niet journaliserende
concurrenten. Gejournaliseerde filesystemen voorkomen lange vertragingen
wanneer je je systeem boot en je filesysteem blijkt in inconsistente staat.
</p>

<p>
<b>ext3</b> is de gejournaliseerde versie van het ext2 filesysteem en gebruikt
metadata journaling voor sneller herstel in vergelijking met andere enhanced
journaliserings modes zoals volledige data en geordende data journalisering.
Het gebruikt een hashed B*-tree index die hoge prestaties inschakelt in over
het algemeen alle situaties. In het kort: ext3 is een heel goed en betrouwbaar
filesysteem.
</p>

<p>
<b>ReiserFS</b> is een op B*-tree gebasseerd filesysteem dat hele goede overall
performance heeft en het veel beter doet dan zowel ext2 als ext3 wanneer je te
maken hebt met kleine bestanden (bestanden kleiner dan 4k), veelal met een
faktor 10x-15x beter. ReiserFS schaalt ontzettend goed en heeft metadata
journalisering. Vanaf kernel 2.4.18+ is ReiserFS solide en bruikbaar voor
zowel algemeen-gebruik filesystemen alsook voor extreme zaken zoals de creatie
van hele grote filesystemen, het gebruik van vele kleine bestanden, hele grote
bestanden en directories met tien duizenden bestanden.
</p>

<p>
<b>XFS</b> is een filesysteem met metadata journalisering en komt met een
robuuste set aan features. Het is geoptimaliseerd voor schaalbaarheid. We
bevelen dit filesysteem alleen aan op Linux systemen met high-end SCSI en/of
fibre channel storage en een niet te onderbreken stroomtoevoer. XFS cached
namelijk op een agressieve manier in-transit data in het RAM-geheugen. Niet
goed gedesignde programma's, die geen goede voorzorgsmaatregelen nemen wanneer
naar de harddisk schrijven (en dat zijn er nogal wat), kunnen een groot deel
van hun data verliezen wanneer het systeem onverwachts plat gaat.
</p>

<p>
<b>JFS</b> is het IBM's high-performance journaliserings filesysteem. Het is
recentelijk productie-gereed verklaard en er is nog te weinig over te melden om
hier positief of negatief over de stabiliteit te zijn
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Een Filesysteem op een partitie zetten</title>
<body>

<p>
Om een filesysteem op een partitie of volume te kunnen maken zijn er per type
filesysteem tooltjes beschikbaar:
</p>

<table>
<tr>
  <th>Bestandsysteem</th>
  <th>Commando</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Bijvoorbeeld, voor een boot partitie (<path>/dev/sda2</path> in ons voorbeeld)
in ext2 en de root partitie (<path>/dev/sda4</path> in ons voorbeeld)in ext3
(als in ons voorbeeld), gebruik je:
</p>

<pre caption="Aanmaken van een filesysteem op een partitie">
# <i>mke2fs /dev/sda2</i>
# <i>mke2fs -j /dev/sda4</i>
</pre>

<p>
Maak nu de filesystemen aan op je nieuw gecreerde partities (of op je logische
volumes).
</p>

</body>
</subsection>
<subsection>
<title>De Swap Partitie activeren</title>
<body>

<p>
<c>mkswap</c> is het commando dat gebruikt wordt om swap partities aan te maken:
</p>

<pre caption="Een Swap partitie aanmaken">
# <i>mkswap /dev/sda3</i>
</pre>

<p>
Om de Swap partitie te activeren, gebruik je <c>swapon</c>:
</p>

<pre caption="Activatie van de swap partitie">
# <i>swapon /dev/sda3</i>
</pre>

<p>
Creeer en activeer de swap partitie nu.
</p>

</body>
</subsection>
</section>
<section>
<title>Mounten</title>
<body>

<p>
Nu we de partities hebben aangemaakt en ze een filesysteem hebben, is het tijd
om ze te mounten. Hiervoor gebruiken we het <c>mount</c> commando. Vergeet niet
om de noodzakelijke mount directories aan te maken voor elke partitie die je
gemaakt hebt. Als voorbeeld zullen we de root en boot partities mounten:
</p>

<pre caption="Mounten van partities">
# <i>mount /dev/sda4 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/sda2 /mnt/gentoo/boot</i>
</pre>

<note>
Als je wilt dat <path>/tmp</path> op een andere partitie staat, zorg er dan
voor dat je na het mounten de permissies veranderd: <c>chmod 1777
/mnt/gentoo/tmp</c>. Dit geldt ook voor <path>/var/tmp</path>.
</note>

<p>
We zullen ook nog het proc filesysteem (een virtuele interface met de kernel)
moeten mounten op <path>/proc</path>. Maar eerst moeten we onze bestanden op de
partities zetten.
</p>

<p>
Ga verder met <uri link="?part=1&amp;chap=5">Installeren van de Gentoo
Installatie Bestanden</uri>.
</p>

</body>
</section>
</sections>
