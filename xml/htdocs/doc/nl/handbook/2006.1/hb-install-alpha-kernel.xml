<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/handbook/2006.1/hb-install-alpha-kernel.xml,v 1.1 2007/02/16 21:28:50 diox Exp $ -->

<sections>

<version>7.0</version>
<date>2006-08-30</date>

<section>
<title>Tijdzone</title>
<body>

<p>
Eerst moet je een tijdzone selecteren zodat het systeem weet waar het zich
bevind. Zoek je tijdzone in <path>/usr/share/zoneinfo</path>en kopieer het dan
naar <path>/etc/localtime</path>. Ontwijk de
<path>/usr/share/zoneinfo/Etc/GMT*</path> tijdzones aangezien hun namen niet de
verwachtte zone aangeven. Zo is <path>GMT-8</path> eigenlijk GMT+8.
</p>

<pre caption="De tijdzone instellen">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Als je GMT wil gebruiken)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>De bronbestanden ophalen</title>
<subsection>
<title>Een kernel kiezen</title>
<body>

<p>
De kern waar alle distributies rond gebouwd zijn is de Linux kernel. Het is de
laag tussen de programma's en je hardware. Gentoo voorziet verschillende bronnen
voor hun gebruikers. Een volledige lijst met beschrijving is aanwezig op <uri
link="/doc/nl/gentoo-kernel.xml">Gentoo Kernel Gids</uri>.
</p>

<p>
Voor alpha-gebaseerde systemen hebben we de <c>vanilla-sources</c> (De standaard
2.6 kernel bronbestanden).
</p>

<p>
Kies je kernel source en installeer ze met <c>emerge</c>. de <c>USE="-doc"</c>
is noodzakelijk om te zorgen dat xorg-x11 of andere dependencies op dit moment
niet worden geinstalleerd. <c>USER="symlink"</c> is niet noodzakelijk voor een
nieuwe installatie, maar verzekert je de juiste aanmaak van de
<path>/usr/src/linux</path> symlink.
</p>

<p>
In het volgende voorbeeld installeren we de <c>vanilla-sources</c>.
Vervang alles natuurlijk met jouw keuze van sources, dit is slechts een
voorbeeld:
</p>

<pre caption="Een kernel source installeren">
# <i>USE="-doc symlink" emerge vanilla-sources</i>
</pre>

<p>
Als je even kijkt in <path>/usr/src</path> zou je een symlink die
<path>linux</path> heet moeten zien. In dit geval wijst de geinstalleerde kernel
bron naar <c>vanilla-sources-2.6.16.19</c>. Uw versie kan verschillend zijn, hou
daar rekening mee.
</p>

<pre caption="De kernel source symlink bekijken">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.16.19
</pre>

<p>
Nu is het tijd om je kernel te configureren en compileren. Je kunt hiervoor
<c>genkernel</c> gebruiken. In dat geval krijgt u een generische kernel
zoals gebruikt op de Installatie CD. We leggen de "manuele" configuratie echter
eerst uit, aangezien het de beste manier is om je omgeving te optimaliseren.
</p>

<p>
als je je kernel manueel wilt configureren, ga dan verder met <uri
link="#manual">Standaard: Manuele Configuratie</uri>. Als je <c>genkernel</c> wenst te
gebruiken, lees dan <uri link="#genkernel">Alternatief: Genkernel
gebruiken</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Standaard: Manuele Configuratie</title>
<subsection>
<title>Introductie</title>
<body>

<p>
En kernel manueel configureren is meestal gezien als het moeilijkste een Linux
gebruiker ooit moet doen. Niets is minder waar. Na een aantal kernels weet je
niet meer dat je het ooit moeilijk vond ;)
</p>

<p>
Een ding is echter waar; je moet je systeem kennen als je een kernel manueel
configureert. Je kunt <c>lsmod</c> gebruiken om te zien welke modules de
installatie Cd gebruikt. (Wat je een hint kan geven over wat je wel en niet moet
selecteren)
</p>

<p>
Ga nu naar de map met de kernel source en voer <c>make menuconfig</c> uit. Dit
zal een ncurses-gebaseerde configuratie menu starten.
</p>

<pre caption="Menuconfig starten">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Hier zie je een aantal configuratie secties. We zullen eerst een aantal
elementaire opties geven die je zeker moet selecteren. (Gentoo zal anders niet
werken, of toch niet zonder nodige aanpassingen)
</p>

</body>
</subsection>
<subsection>
<title>De benodigde opties activeren</title>
<body>

<p>
Eerst en vooral moet je de ontwikkelings en experimentele code/drivers moeten
activeren, anders zullen een aantal erg belangrijke drivers niet verschijnen:
</p>

<pre caption="Experimentele code/drivers activeren">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Ga nu naar <c>File Systems</c> en selecteer de bestandssystemen die je gebruikt.
Compile ze <e>niet</e> als modules, of Gentoo zal je harde schijven niet kunnen
<e>mounten</e>. Selecteer ook <c>Virtual memory</c>, <c>/proc file system</c>,
(<c>/dev file system</c> + <c>Automatically mount at boot</c> enkel voor 2.4):
</p>

<pre caption="De nodige file systems selecteren">
<comment>(Met een 2.4.x kernel)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Met een 2.6.x kernel)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Selecteer de opties die jouw systeem nodig heeft:)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Als je PPPoE gebruikt om verbinding te maken met het internet of een inbelmodem
gebruikt, zul je de volgende opties ook moeten activeren:
</p>

<pre caption="De benodigde drivers voor PPPoE">
<comment>(Met een 2.4.x kernel)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(Met een 2.6.x kernel)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
De twee compressie opties zullen geen kwaad doen maar zijn absuluut niet
noodzakelijk, net als de <c>PPP over Ethernet</c> optie die misschien enkel door
<c>rp-pppoe</c> gebruikt wordt met een configuratie die "kernel-mode PPPoE"
inschakeld.
</p>

<p>
Als je dit nodig hebt, vergeet dan niet support voor je Ethernet kaart in je
kernel te stoppen
</p>

<p>
De volgende opties zijn ook aan te raden:
</p>

<pre caption="Aangeraden Alpha opties">
General setup ---&gt;
  &lt;*&gt; SRM environment through procfs
  &lt;*&gt; Configure uac policy via sysctl

Plug and Play configuration ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;M&gt;   ISA Plug and Play support

SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; SYM53C8XX Version 2 SCSI support (NEW)
    &lt;*&gt; Qlogic ISP SCSI support

Network device support ---&gt;
  Ethernet (10 or 100 Mbit) ---&gt;
    &lt;M&gt; DECchip Tulip (dc21x4x) PCI support
    &lt;M&gt; Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA
    &lt;M&gt; EtherExpressPro/100 support (eepro100)
    &lt;M&gt; EtherExpressPro/100 support (e100)
  Ethernet (1000 Mbit) ---&gt;
    &lt;M&gt; Alteon AceNIC
      [*] Omit support for old Tigon I
    &lt;M&gt; Broadcom Tigon3
  [*] FDDI driver support
  &lt;M&gt; Digital DEFEA and DEFPA
  &lt;*&gt; PPP support
    &lt;*&gt; PPP Deflate compression

Character devices ---&gt;
  [*] Support for console on serial port
  [*] Direct Rendering Manager

File systems ---&gt;
  &lt;*&gt; Kernel automounter version 4 support
  Network File Systems ---&gt;
    &lt;*&gt; NFS
      [*] NFSv3 client
      &lt;*&gt; NFS server
      [*] NFSv3 server
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*] Alpha OSF partition support
  Native Language Support
    &lt;*&gt; NLS ISO 8859-1

Sound ---&gt;
  &lt;M&gt; Sound card support
    &lt;M&gt; OSS sound modules
      [*] Verbose initialisation
      [*] Persistent DMA buffers
      &lt;M&gt; 100% Sound Blaster compatibles
</pre>

<p>
Als je klaar bent met de configuratie, ga dan verder met <uri
link="#compiling">Compilatie en Installatie</uri>
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compilatie en Installatie</title>
<body>

<p>
Nu je kernel geconfigureerd is, is het tijd om hem te compilen en installeren.
Sluit de configuratie af en start het compilatie proces:
</p>

<pre caption="De kernel compilen">
<comment>(Voor 2.4.x kernels)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(Voor 2.6.x kernels)</comment>
# <i>make &amp;&amp; make modules_install</i>

<comment>(Voor alle kernels)</comment>
# <i>make boot</i>
</pre>

<p>
Eens de kernel klaar is met compilen,  moet je de kernel image naar
<path>/boot</path> kopieeren. Recente kernels moeten eventueel
<path>vmlinux</path> in de plaats van <path>vmlinux.gz</path>. Onthoud dit voor
als je je kernel image kopieerd.
</p>

<pre caption="De kernel installeren">
# <i>cp arch/alpha/boot/vmlinux.gz /boot/</i>
</pre>

<p>
Ga nu verder met <uri link="#kernel_modules">Verschillende Kernel modules
installeren</uri>
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternatief: Genkernel gebruiken</title>
<body>

<p>
Als je deze sectie leest, heb je gekozen voor het <c>genkernel</c> script om je
kernel voor je te configureren.
</p>

<p>
Nudat je kernel source geinstalleerd is, is het tijd om je kernel te compilen
met ons <c>genkernel</c> script om automatisch een kernel voor je te bouwen.
<c>genkernel</c> maakt een kernel die ongeveer identiek is aan de manier waarop
de Installatie CD kernel geconfigureerd wordt. Dit betekend dat waneer je
<c>genkernel</c> gebruikt om je kernel te bouwen, je systeem alle hardware zal
dedecteren tijdens het opstarten, net zoals de Installatie CD. Aangezien
genkernel geen manuele kernel configuratie vergt, is het de ideale oplossing
voor de gebruikers die zich niet veilig voelen met custom kernels.
</p>

<p>
Laten we eens kijken hoe we genkernel moeten gebruiken. Emerge eerst de
genkernel ebuild:
</p>

<pre caption="genkernel emergen">
# <i>emerge genkernel</i>
</pre>

<p>
Compile nu je kernel sources met <c>genkernel all</c>.
Onthoud dat <c>genkernel</c> een kernel compiled die bijna alle hardware
ondersteunt. Dus dit kan een eindje duren.
</p>

<p>
Merk op dat als je als boot partitie geen ext2 of ext3 gebruikt als
bestandsysteem, je een manuele kernel moet configurer met <c>genkernel
--menuconfig all</c> en support voor je bestandsysteem inbouwen <e>in</e> de
kernel. (En dus niet als module)
</p>

<pre caption="genkernel draaien">
* Gentoo Linux Genkernel; Version 3.4.0
* Running with options: all

* Linux Kernel 2.6.16.19 for alpha...
* kernel: >> Running mrproper...
# <i>genkernel all</i>
<comment>(Output verwijderd om de leesbaarheid te verhogen)</comment>
* Kernel compiled successfully!
*
* Required Kernel Parameters:
*     real_root=/dev/$ROOT
*
*     Where $ROOT is the device node for your root partition as the
*     one specified in /etc/fstab
*
* If you require Genkernel's hardware detection features; you MUST
* tell your bootloader to use the provided INITRAMFS file. Otherwise;
* substitute the root argument for the real_root argument if you are
* not planning to use the initrd...

* WARNING... WARNING... WARNING...
* Additional kernel cmdline arguments that *may* be required to boot properly...
* Do NOT report kernel bugs as genkernel bugs unless your bug
* is about the default genkernel configuration...
*
* Make sure you have the latest genkernel before reporting bugs.
</pre>

<p>
Once <c>genkernel</c> completes, a kernel, full set of modules and 
<e>initial root disk</e> (initrd) will be created. We will use the kernel 
and initrd when configuring a boot loader later in this document. Write
down the names of the kernel and initrd as you will need it when writing
the bootloader configuration file. The initrd will be started immediately after 
booting to perform hardware autodetection (just like on the Installation CD) before 
your "real" system starts up.
</p>

<pre caption="De naam van initrd en de kernel image controleren">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

<p>
Nu, nog een stap om ons systeem meer op de Installatie Cd te laten lijken, laten
we <c>coldplug</c> emergen. Terwijl de initrd alle hardware die nodig is om het
systeem op te starten laadt, zal <c>coldplug</c> alle andere dingen
autodedecteren. Typ het volgende om <c>coldplug</c> te emergen en activeren:
</p>

<pre caption="Coldplug emergen en activeren">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Verschillende kernel modules installeren</title>
<subsection>
<title>Extra Modules Installeren</title>
<body>

<p>
Als dat nodig is kun je alle ebuilds voor extra hardware die zich op je systeem
bevindt activeren. Hier is een lijst met kernel-gerelateerde ebuilds die je kunt
emergen.
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>Ebuild</th>
  <th>Doel</th>
  <th>Commando</th>
</tr>
<tr>
  <ti>x11-drm</ti>
  <ti>
    Versnelde graphics voor ATI Radeon tot aan 9200, Rage128, Matrox, Voodoo en
    endere kaarten voor xorg-x11. Controlleer de <c>IUSE_VIDEO_CARDS</c>
    variabele in de <path>/usr/portage/x11-base-x11-drm</path> ebuilds om te
    zien wat je moet invullen als <e>uwkaart</e>
  </ti>
  <ti><c>VIDEO_CARDS="uwkaart" emerge x11-drm</c></ti>
</tr>
</table>

<p>
Let echter op dat sommige van deze ebuilds erg veel dependencies kunnen hebben.
Gebruik <c>emerge --pretend</c> om dat te controleren. Voor het pakket <c>x11-drm</c> bijvoorbeeld:
</p>

<pre caption="De lijst te installeren pakketten bekijken.">
# <i>emerge --pretend x11-drm</i>
</pre>

</body>
</subsection>
<subsection>
<title>De modules configureren</title>
<body>

<p>
Je moet in <path>/etc/modules.autoload.d/kernel/2.4</path> (of
<path>kernel-2.6</path>) een lijst met te laden modules onderhouden. Je kunt ook
extra opties doorgeven aan de modules.
</p>

<p>
Om alle aanwezige modules te zien kun je het volgende <c>find</c> commando
gebruiken. Vergeet "&lt;kernel version&gt;" niet te vervangen met de versie van
de kernel die je net compilede:
</p>

<pre caption="Alle aanwezige modules bekijken">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Om bijvoorbeeld de <c>3c59x.o</c> modules automatisch te laden, pas dan het
<path>kernel-2.4</path> of <path>kernel-2.6</path> bestand aan en voeg de naam
van de module toe.
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.4 aanpassen">
<comment>(Voorbeeld voor 2.4 kernels)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 of kernel-2.6">
3c59x
</pre>

<p>
Ga verder met <uri link="?part=1&amp;chap=8">Je systeem configureren</uri>.
</p>

</body>
</subsection>
</section>
</sections>
