<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Id: hb-install-ppc64-kernel.xml,v 1.1 2006/09/16 21:17:23 neysx Exp $ -->

<sections>

<version>7.0</version>
<date>2006-08-30</date>

<section>
<title>Tijdzone</title>
<body>

<p>
Allereerst moet je de tijdzone selecteren zodat je systeem weet waar het
gelegen is. Zoek voor je tijdzone in <path>/usr/share/zoneinfo</path>, kopiëer
het dan in <path>/etc/localtime</path>. Gelieve
<path>/usr/share/zoneinfo/Etc/GMT*</path> tijdzones te vermijden, want hun naam
geeft geen tijdzone aan. Bijvoorbeeld is <path>GMT-8</path> eigenlijk GMT+8.
</p>

<pre caption="Instellen van de tijdzone informatie">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Stel dat je GMT wenst te gebruiken)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>De bronnen installeren</title>
<subsection>
<title>Een Kernel kiezen</title>
<body>

<p>
De kern waar rond alle distributies zijn gebouwd is de Linux kernel.
Het is de laag tussen de programma's en je systeem hardware. Gentoo voorziet de
gebruiker met verschillende mogelijke kernel bronnen. Een volledige lijst met
beschrijving is beschikbaar op de <uri link="/doc/nl/gentoo-kernel.xml">Gentoo
Kernel Gids</uri>.
</p>

<p>
Voor PPC64 zou je <c>gentoo-sources</c> moeten gebruiken. Dus laat ons
verdergaan met <c>emerge</c>'en van de kernel bronnen. De <c>USE="-doc"</c> is
nodig om te voorkomen dat xorg-x11 zich installeerd of andere afhankelijke
programma's. <c>USE="symlink"</c> is niet nodig voor een nieuwe installatie,
maar verzekerd een goede aanmaak van de <path>/usr/src/linux</path>
snelkoppeling.
</p>

<pre caption="Installeren van een kernel bron">
# <i>USE="-doc symlink" emerge gentoo-sources</i>
</pre>

<p>
Als je een kijkje neemt in <path>/usr/src</path> zul je een snelkoppeling zien
die <path>linux</path> genaamd die wijst naar je kernel bron. In dit geval ,
wijst de geïnstalleerde naar <c>gentoo-sources-2.6.17-r5</c>. Jouw versie kan
verschillend zijn, hou dit in het achterhoofd.
</p>

<pre caption="Bekijken van de kernel bron snelkoppeling">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root    root       12 Aug 10 11:04 /usr/src/linux -&gt; linux-2.6.17-gentoo-r5
</pre>

<p>
Het wordt nu tijd om de kernel te configureren en te compileren. Er is de
mogelijkheid om de "genkernel" te gebruiken, deze creëert een generieke kernel
zoals de kernels die gebruikt worden op de installatie CDs, maar er is geen
volledige functionaliteit voor PPC64 op dit moment.
</p>

<p>
Ga nu verder met <uri link="#manual">Manuele Configuratie</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Manuele Configuratie</title>
<subsection>
<title>Inleiding</title>
<body>

<p>
Manuele configuratie van een kernel is meestal de moeilijkste stap die een
linux gebruiker moet doen. Niets is minder waar -- na het configureren van
enkele kernels, herrinner je zelfs niet meer dat het ooit moeilijk was ;)
</p>

<p>
Hoewel, een ding waar <e>is</e>: je moet je systeem kennen wanneer je start met
de manuele configuratie van een kernel. De meeste informatie kan vergaart
worden door het installeren van pciutils (<c>emerge pciutils</c>) die
<c>lspci</c> bevat. Je zult de mogelijkheid hebben om <c>lspci</c> te gebruiken
binnen je chroot-omgeving. Je kunt veilig alle <e>pcilib</e> waarschuwingen
negeren (zoals pcilib: cannot open /sys/bus/pci/devices) die <c>lspci</c>
weergeeft. Je kunt ook <c>lspci</c> vanaf een <e>non-chrooted</e> omgeving
starten als alternatief. De resultaten zijn dezelfde. Je kunt ook <c>lsmod</c>
uitvoeren om te zien welke kernel modules de Installatie CD gebruikt (het kan
je een goede hint geven naar wat mogelijk is.
</p>

<pre caption="Aanhalen van menuconfig">
# <i>cd /usr/src/linux</i>
<comment>Belangrijk: In het geval je een 32-bit omgeving gebruikt, moet je de
bovenste waarde in de Makefile (die zich in /usr/src/linux bevindt) veranderen.
De CROSS_COMPILE optie moet veranderd worden naar CROSS_COMPILE ?=
powerpc64-unknown-linux-gnu-. Je moet diet veranderen voor je make menuconfig
start of het kan resulteren in kernel compilatie problemen.</comment>
# <i>make menuconfig</i>
</pre>

<p>
Je zult gegroet worden door verschillende secties. we zullen eerst enkele
opties activeren (anders zal Gentoo niet functioneren, of niet functioneren
zoals het hoord zonder de nodige tweaks).
</p>

</body>
</subsection>
<subsection>
<title>Activeren van benodigde opties</title>
<body>

<p>
Activeer allereerst het gebruik van ontwikkeling en experimentele
code/drivers. Je hebt dit nodig, anders zullen enkele belangrijke code/drivers
niet tevoorschijn komen:
</p>

<pre caption="Selecteren van experimentele code/drivers">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Ga nu naar <c>File Systems</c> en selecteer ondersteuning voor de
bestandssystemen die je gebruikt. Compileer ze <e>niet</e> als modules, anders
zla je gentoo systeem niet de mogelijkheid hebben om ze te mounten. Selecteer
ook <c>Virtual memory</c>, <c>/proc file system</c>, and <c>/dev/pts file
system for Unix98 PTYs</c>:
</p>

<pre caption="Selecteren van de nodige bestandssystemen">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev/pts file system for Unix98 PTYs

<comment>(Select one or more of the following options as needed by your system)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
Je zult enkele opties onder <c>Pseudo filesystems</c> vinden die deel zijn van
<c>File systems</c>.
</note>

<p>
Als je PPPoE gebruikt om te connecteren naar het internet of je gebruikt een
dial-up modem, zul je de volgende opties nodig hebben in je kernel (Je zult de
opgesomde opties vinden onder <c>Networking support</c> die onderdeel is van
<c>Device Drivers</c>):
</p>

<pre caption="Selecteren van PPPoE's nodige drivers">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
De twee compressie opties zullen geen kwaad aanrichten maar zijn ook niet echt
nodig, geen van beiden heeft de <c>PPP over Ethernet</c> optie nodig, die wordt
alleen maar gebruikt door <c>rp-pppoe</c> als de kernel zo is geconfigureerd.
</p>

<p>
Als je het nodig hebt, vergeet niet om de ondersteuning voor je ethernet kaart
in je kernel in te bakken.
</p>

<p>
Schakel <e>ADB raw keycodes</e> uit:
</p>

<pre caption="Uitschakelen van ADB raw keycodes">
Macintosh Device Drivers ---&gt;
  [ ] Support for ADB raw keycodes
</pre>

<p>
Als je klaar bent met de kernel te compileren, ga verder met <uri
link="#compiling">Compileren en installeren</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compileren en installeren</title>
<body>

<p>
Nu dat je kernel geconfigureerd is, wordt het tijd dat we die gaan compileren
en installeren. Verlaat je configuratie en start het compilatie proces:
</p>

<pre caption="Compileren van de kernel">
# <i>make vmlinux &amp;&amp; make modules_install</i>
</pre>

<p>
Als je kernel gedaan heeft met compileren, kopieer de kernel image naar
<path>/boot</path>. Denk er aan om <path>&lt;kernel-version&gt;</path> te
vervangen met de echte kernel versie:
</p>

<pre caption="Installeren van de kernel">
# <i>cp vmlinux /boot/&lt;kernel-version&gt;</i>
</pre>

<p>
Ga nu verder met <uri link="#kernel_modules">Configureren van de modules</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Configureren van de modules</title>
<body>

<p>
Je zou de modules die je automatisch geladen wilt zien plaatsen in
<path>/etc/modules.autoload.d/kernel-2.6</path>. Je kunt ook extra opties aan
de modules toevoegen als je wilt.
</p>

<p>
Om alle beschikbare modules te zien, voer het volgende <c>find</c> commando
uit. Vergeet niet om  "&lt;kernel version&gt;" te veranderen met de huidige
versie van jouw net gecompileerde kernel.
</p>

<pre caption="Alle beschikbare modules zoeken">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Bijvoorbeeld, om auomatisch de <c>3c59x.o</c> module te laden, pas het
<path>kernel-2.6</path> bestand aan en voeg de modulenaam er in toe.
</p>

<pre caption="Aanpassen van /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Vervolg de installatie met <uri link="?part=1&amp;chap=8">Configureren van je
systeem</uri>.
</p>

</body>
</section>
</sections>
