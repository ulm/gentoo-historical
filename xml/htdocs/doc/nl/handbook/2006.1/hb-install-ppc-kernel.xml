<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/handbook/2006.1/hb-install-ppc-kernel.xml,v 1.1 2007/02/28 21:17:28 diox Exp $ -->

<sections>

<version>7.3</version>
<date>2006-09-27</date>

<section>
<title>Tijdzone</title>
<body>

<p>
Eerst moet je je tijdzone selecteren zodat het systeem weet waar het zich
bevindt. Zoek de juiste tijdzone in <path>/usr/share/zoneinfo</path> en kopieer
het naar <path>/etc/localtime</path>. Vermijd de
<path>/usr/share/zoneinfo/etc/GMT*</path> Tijdzones omdat hun namen niet
logisch zijn. Zo is <path>GMT-8</path> eigenlijk GMT+8.
</p>

<pre caption="De tijszone instellen">
# <i>ls /usr/share/zoneinfo</i>
<comment>(Voor GMT)</comment>
# <i>cp /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>De bronbestanden installeren</title>
<subsection>
<title>Een kernel kiezen</title>
<body>

<p>
De kern waarrond alle distributies gebouwd zijn is de Linux kernel. Het is de
laag tussen de programma's en je hardware. Gentoo voorziet verschillende
mogelijkheden. Een volledige lijst met beschrijving kun je vinden in de <uri
link="/doc/nl/gentoo-kernel.xml">Gentoo Kernel Guide</uri>.
</p>

<p>
Voor PPC raden we je <c>vanilla-sources</c> of <c>gentoo-sources</c> aan. Dit
zijn beiden 2.6 kernels. Die laatste is aanwezig als je een netwerkloze
installatie doet. Laten we dus verdergaan met het <c>emerge</c>'en van de
<e>sources</e>. De <c>USE="-doc"</c> optie is noodzakelijk om ervoor te zorgen
dat xorg-x11 op dit moment van de installatie nog niet geĂŻnstalleerd wordt.
<c>USE="symlink"</c> is niet nodig bij een nieuwe installatie, maar zorgt ervoor
dat de <path>/usr/src/linux</path> symlink correct wordt aangemaakt.
</p>

<pre caption="Een kernel source installeren">
# <i>USE="-doc symlink" emerge gentoo-sources</i>
</pre>

<p>
Als je even kijkt in <path>/usr/src</path> moet je een symlink vinden die
<path>linux</path> heet die wijst naar de huidige kernel bron. In dit geval
wijst de geïnstalleerde kernel source naar <c>gentoo-sources-2.6.15</c>. Onthoud
dat uw versie kan verschillen.
</p>

<pre caption="De kernel source symlink bekijken">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           22  Mar 18 16:23 /usr/src/linux -&gt; linux-2.6.15
</pre>

<p>
Nu is het tijd om je kernel source te configureren en compileren. Je kunt
hiervoor <c>genkernel</c> gebruiken, wat een generische kernel zal bouwen zoals
diegene die door de Installatie CD gebruikt wordt. We leggen echter de "manuele"
configuratie eerst uit aangezien dit de beste manier is om je omgiving te
optimaliseren.
</p>

<p>
Als je je kernel manueel wilt configureren, ga dan verder <uri
link="#manual">Standaard: Manuele Configuratie</uri>. Als je <c>genkernel</c>
wilt gebruiken, moet je <uri link="#genkernel">Alternatief: Genkernel
gebruiken</uri> lezen.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Standaard: Manuele Configuratie</title>
<subsection>
<title>Introductie</title>
<body>

<p>
De handmatige configuratie van een kernel wordt meestal gezien als de
moeilijkste
stap die een linux gebruiker moet doen. Niets is minder waar -- na het
configureren van
enkele kernels, herinner je zelfs niet meer dat het ooit moeilijk was ;)
</p>

<p>
Hoewel, een ding <e>is</e> waar: je moet je systeem kennen wanneer je start met
de handmatige configuratie van een kernel. De meeste informatie kan vergaart
worden door het installeren van pciutils (<c>emerge pciutils</c>) die
<c>lspci</c> bevat. Je zult nu de mogelijkheid hebben om <c>lspci</c> te
gebruiken
binnen je chroot-omgeving. Je kunt gerust alle <e>pcilib</e> waarschuwingen
negeren (zoals pcilib: cannot open /sys/bus/pci/devices) die <c>lspci</c>
weergeeft. Je kunt <c>lspci</c> ook vanaf een <e>non-chrooted</e> omgeving
starten. De resultaten zijn hetzelfde. Je kunt ook <c>lsmod</c>
draaien om te zien welke kernel modules de Installatie CD gebruikt (het kan
je een goede hint geven over welke opties je moet hebben).
</p>

<pre caption="Menuconfig starten">
# <i>cd /usr/src/linux</i>
# <i>make pmac32_defconfig</i>
# <i>make menuconfig</i>
</pre>

<p>
Je wordt begroet door verschillence configuratie secties. We zullen eerst de
opties opnoemen die je moet activeren (andes zal Gentoo niet werken, of niet
goed werken zonder extra tweaks).
</p>

</body>
</subsection>
<subsection>
<title>Belangrijke Opties Selecteren</title>
<body>

<p>
Activeer allereerst het gebruik van ontwikkeling en experimentele
code/drivers. Je hebt dit nodig, anders zullen enkele belangrijke code/drivers
niet tevoorschijn komen:
</p>


<pre caption="Experimentele code/drivers selecteren">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Ga nu naar <c>File Systems</c> en selecteer ondersteuning voor de
bestandssystemen die je gebruikt. Compileer ze <e>niet</e> als modules, anders
zla je gentoo systeem niet de mogelijkheid hebben om ze te mounten. Selecteer
ook <c>Virtual memory</c>, <c>/proc file system</c>, and <c>/dev/pts file
system for Unix98 PTYs</c>:
</p>


<pre caption="Noodzakelijke bestandsystemen selecteren">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)
  Partition Types ---&gt;
    [*] Amiga partition table support
    [*] Macintosh partition map support

<comment>(Selecteer wat je systeem nodig heeft)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Als je PPPoE gebruikt om te verbinden met het internet of je gebruikt een
dial-up modem, zul je de volgende opties nodig hebben in je kernel (Je zult de
opgesomde opties vinden onder <c>Networking support</c> die onderdeel is van
<c>Device Drivers</c>):
</p>


<pre caption="Benodigde drivers voor PPPoE selecteren">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
De twee compressie opties zullen geen schade aanrichten maar zijn ook niet echt
nodig, ook is de <c>PPP over Ethernet</c> optie niet nodig, die wordt
alleen maar gebruikt door <c>rp-pppoe</c> als het geconfigureerd is voor PPPoE
over de kernel.
</p>

<p>
Als je het nodig hebt, vergeet niet om de ondersteuning voor je ethernet kaart
in je kernel in te activeren.
</p>

<p>
Gebruikers van NewWorld en Oldworld machines zullen HFS ondersteuning willen.
OldWorld gebruikers hebben het nodig om gecompilede kernels te kopieren.
NewWorld gebruikers hebben het nodig op de speciale Apple_Bootstrap partitie te
configureren:
</p>

<pre caption="HFS support activeren">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
Momenteel is kernel preemption nog onstabiel op PPC en kan het voor compilatie
errors en at-random segfaults geven. Het is <e>sterk</e> aan te raden dat je dit
<e>niet</e> gebruikt.
</p>

<pre caption="Preemptible Kernel Optie Moet Afliggen">
Kernel options ---&gt;
  Preemption Model (No Forced Preemption (Server))
</pre>

<p>
Als je opstart van Firewire, zul je deze opties moeten aanleggen. Als je dit
niet wilt, zul je hun modules en hun dependencies in een initrd moeten zetten.
</p>

<pre caption="Support voor firewire toestellen tijdens boot">
Device Drivers ---&gt;
  IEEE 1394 (FireWire) support ---&gt;
    &lt;*&gt; IEEE 1394 (FireWire) support
    &lt;*&gt;   OHCI-1394 support
    &lt;*&gt;   SBP-2 support (Harddisks etc.)
</pre>

<p>
Als je opstart vanop USB zul je deze opties moeten aanleggen. Als je dit niet
wilt, zul je hun modules en hun dependencies in een initrd zetten.
</p>

<pre caption="Support voor USB toestellen tijdens boot">
Device Drivers ---&gt;
  USB support ---&gt;
    &lt;*&gt; Support for Host-side USB
    &lt;*&gt;   OHCI HCD support
    &lt;*&gt;   USB Mass Storage support
</pre>

<p>
Leg kernel framebuffer support niet af aangezien het vereist is om je machine
succesvol te kunnen booten. Als je een ATI-gebaseerde chipset gebruikt, moet je
de framebuffer driver gebaseerd op jouw chipset kiezen (Mach64 Rage128 of
Radeon).
</p>

<pre caption="Een Framebuffer Driver Kiezen">
Device Drivers ---&gt;
  Graphics support ---&gt;
    &lt;*&gt; Support for frame buffer devices
    [*] Open Firmware frame buffer device support
    &lt;*&gt; ATI Radeon display support
    &lt;*&gt; ATI Rage128 display support
    &lt;*&gt; ATI Mach64 display support
    Console display driver support ---&gt;
      &lt;*&gt; Framebuffer Console support
</pre>

<note>
Als je meer dan één framebuffer device selecteerd, kan het een minder dan
optimale driver opleveren. Gebruik ofwel slechts een framebuffer of specifieer
welke gebruikt moet worden door dit als argument aan de kernel te geven.
(<c>video=randeonfb</c> bijvoorbeeld).
</note>

<p>
Als je klaar bent met de kernel te compileren, ga verder met <uri
link="#compiling">Compileren en installeren</uri>.
</p>


</body>
</subsection>
<subsection id="compiling">
<title>Compilatie en Installatie</title>
<body>


<p>
Nu dat je kernel geconfigureerd is, wordt het tijd dat we die gaan compileren
en installeren. Verlaat je configuratie en start het compilatie proces:
</p>


<pre caption="De kernel compilen">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Als je kernel klaar is met compileren, kopieer het kernel beeldbestand naar
<path>/boot</path>. (Zorg ervoor dat hij degelijk gemount is op Pegasos
computers). Als je BootX gebruikt om op te starten, zullen we de kernel later
kopiëren.
</p>

<p>
Yaboot en bootX verwachtern een ongecompresseerde kernel in tegenstelling tot
vele andere bootloaders. De ongecompresseerde kernel heet vmlinux en vind je in
<path>/usr/src/linux</path> als de kernel klaar is met compilen. Pegasos
machines vereisen een gecompresserde kernel die zImage.chrp heet. Deze kan
gevonden worden in <path>/usr/src/linux/arch/ppc/boot/images</path>.
</p>

<pre caption="De kernel installeren">
# <i>cd /usr/src/linux</i>
<comment>Vervang &lt;kernel-version&gt; met jouw kernel versie</comment>
<comment>(Apple/IBM)</comment>
# <i>cp vmlinux /boot/&lt;kernel-version&gt;</i>
<comment>(Pegasos)</comment>
# <i>cp arch/ppc/boot/images/zImage.chrp /boot/&lt;kernel-version&gt;</i>
</pre>

<p>
Ga nu verder met <uri link="#kernel_modules">Configureren van de modules</uri>.
</p>


</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Configureren van de modules</title>
<subsection>
<title>Configureren van de modules</title>
<body>

<p>
Je moet de modules die je bij het opstarten wil laden in
<path>/etc/modules.autoload.d/kernel-2.6</path>
zetten. Je kan ook extra opties voor de modules activeren
als je wilt.
</p>

<p>
Om alle beschikbare modules te zien, draai je het volgende <c>find</c> commando.
Vergeet niet "&lt;kernel version&gt;" te vervangen voor de versie van de kernel
die
je zojuist hebt geïnstalleerd:
</p>

<pre caption="Alle beschikbare modules zoeken">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname
# '*.ko'</i>
</pre>

<p>
Een voorbeeld, om de module <c>3c59x.o</c> automatisch bij het opstarten te
laden, wijzig het <path>kernel-2.6</path> bestand en zet de modulenaam erbij.
</p>

<pre caption="Aanpassen van /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Vervolg de installatie met <uri link="?part=1&amp;chap=8">Configureren van je
systeem</uri>.
</p>


</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternatief: Genkernel</title>
<body>

<p>
Als je deze sectie leest, heb je er dus voor gekozen om het <c>genkernel</c>
script
te gebruiken dat het configureren voor jou doet.
</p>

<p>
Nu dat je kernelbron is geĂŻnstalleerd, is het tijd om je kernel te compileren
met het <c>genkernel</c> script dat dat automatisch doet. <c>Genkernel</c>
configureert je kernel vrijwel identiek als de kernel van de Installatie CD.
Dit betekend dat als je de <c>genkernel</c> gebruikt om je kernel te compileren,
je systeem over het algemeen alle hardware zal detecteren als het opstart,
precies zoals de Installatie CD dat doet.
Omdat de genkernel geen handmatige configuratie nodig heeft, is het een ideale
oplossing voor die gebruikers die niet comfortabel zijn met het bouwen van hun
eigen kernels.
</p>

<p>
Laten we nu eens zien hoe je genkernel gebruikt. Allereerst emerge je genkernel:
</p>

<pre caption="Installeren van genkernel">
# <i>emerge genkernel</i>
</pre>


<p>
Vervolgens kopieer je de kernel configuratie die de Installatie CD gebruikte
naar de plaats waar genkernel kijkt voor de standaard kernel configuratie:
</p>

<pre caption="De Installatie CD kernel configuratie kopieren">
# <i>zcat /proc/config.gz > /usr/share/genkernel/ppc/kernel-config-2.6</i>
</pre>

<p>
Als je firewire of USB gebruikt om op te starten, zul je nog enkele modules
moeten toevoegen aan initrd. Pas
<path>/usr/share/genkernek/ppc/modules_load</path> aan en wijzig
<c>MODULES_FIREWIRE="ieee1394 ohci1394 sbp2"</c> Voor firewire of
<c>MODULES_USB="usbcore ohci-hcd ehci-hcd usb-storage"</c> voor USB.
</p>

<p>
Alvorens je je sources kan compilen, heeft fstab een kleine aanpassing nodig. De
rest van fstab zal later worden aangepast, dus maak je daar nu nog geen zorgen
over. Als je geen aparte boot partitie gemaakt hebt (NIET bootstrap, dat is wat
anders), verwijder dan de lijn die naar /boot verwijst van
<path>/etc/fstab</path>. Dit moet op de meeste Apple computers gebeuren.
</p>

<pre caption="/boot uit /etc/fstab verwijderen op machines zonder een boot
partitie">
# <i>nano -w /etc/fstab</i>
<comment>Verwijder deze lijn:</comment>
/dev/BOOT               /boot           ext2            noauto,noatime  1 2
</pre>

<p>
Compileer nu je kernel met <c>genkernel --genzimage all</c>. Voor pegasos zullen
we ene verschillende configuratie gebruiken en een zImage maken in de plaats van
de vmlinux kernel die op Apple machines gebruikt wordt. Let op dat
<c>genkernel</c> een kernel compileert die zo goed als alle hardware
ondersteund, dit kan een tijdje duren!
</p>

<p>
Merk op dat als de partitie waar je kernel image later op terechtkomt
(<path>/boot</path>) geen ext2 of ext3 als bestandsysteem gebruikt je eventueel
manueel een kernel moet configureren met <c>genkernel --menuconfig all</c> en
ondersteuning voor je bestandsysteem <e>in</e> (en dus <e>niet</e> als module)
moet compilen. Als je EVMS2 of LVM2 gebruikt voeg je best <c>--evms2</c> of
<c>--lvm2</c> toe aan de argumenten.
</p>

<pre caption="Genkernel draaien">
# <i>genkernel all</i>
</pre>

<pre caption="Genkernel draiien op de Pegasos">
# <i>genkernel --genzimage --kernel-config=/usr/share/genkernel/ppc/Pegasos all</i>
</pre>

<p>
Eens <c>genkernel</c> klaar is, heb je een kernel, een volledige set modules en
een <e>initial root disk</e> (initrd). We zullen de kernel en initrd nog nodig
hebben tijdens de configuratie van de bootloader later in dit document. Schrijf
de namen van de kernel en van de initrd ergens neer zodat je ze later makkelijk
terugvind. Het initrd bestand zal meteen na het opstarten geladen worden om
hardware detectie uit te voeren. (Net zoals de installatie cd dat doet). Zorg er
ook voor dat je de vereiste boot argumenten ergens bijhoudt, aangezien je die
ook nog nodig hebt.
</p>

<pre caption="Kijken hoe je kernel en initrd heten">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

<p>
Nu, nog een stap om ons systeem meer op de Installatie Cd te laten lijken, laten
we <c>coldplug</c> emergen. Terwijl de initrd alle hardware die nodig is om het
systeem op te starten laadt, zal <c>coldplug</c> alle andere dingen
autodedecteren. Typ het volgende om <c>coldplug</c> te emergen en activeren:
</p>


<pre caption="Coldplug emergen en installeren">
<comment>(Doe dit na de isntallatie, tijdens de GRP installatie instructies)</comment>
# <i>emerge -k coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

<p>
Als je systeem wilt instellen om te reageren op gebeurtenissen van hotplug, zul
je ook <c>hotplug</c> moeten instaleren en configureren.
</p>

<pre caption="Hotplug emergen en installeren">
# <i>emerge hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

<p>
Ga nu verder met <uri link="?part=1&amp;chap=8">Je Systeem Configureren</uri>
</p>

</body>
</section>

</sections>

