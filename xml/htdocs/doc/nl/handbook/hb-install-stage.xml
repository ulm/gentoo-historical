<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/handbook/hb-install-stage.xml,v 1.7 2005/04/07 16:00:52 swift Exp $ -->

<sections>

<version>2.00</version>
<date>2005-03-29</date>

<section>
<title>Een stage tarball installeren</title>
<subsection>
<title>De datum/tijd goed zetten</title>
<body>

<p>
Voordat je verder gaat moet je je datum/tijd controleren en goed zetten. Een
verkeerd ingestelde klok kan leiden tot vreemde resultaten in de toekomst!
</p>

<p>

Om de datum/tijd te controleren, draai <c>date</c>:
</p>

<pre caption="De datum/tijd controleren">
# <i>date</i>
Fri Mar 29 16:21:18 CEST 2005
</pre>

<p>
Als de weergegeven datum/tijd verkeerd is, update hem door middel van <c>date
MMDDuummJJJJ</c> syntax (<b>M</b>aand, <b>D</b>ag, <b>u</b>ur, <b>m</b>inuten
en <b>J</b>aar). Om bijvoorbeeld de klok op 16:21 op 29 maart 2005 te zetten,
gebruik je:
</p>

<pre caption="De datum/tijd goed zetten">
# <i>date 032916212005</i>
</pre>

</body>
</subsection>
<subsection>
<title>Je keuze maken</title>
<body>

<p>
De volgende stap die je moet zetten is de <e>stage</e> tarball van jouw keuze
op je systeem installeren. Je hebt de keuze om de benodigde tarball van het
internet te downloaden of, als je de Gentoo Universele Installatie CDs gebruikt,
het van de CD te kopiëren. Als je de Universele CD hebt en de stage die je wil
staat op de CD, is downloaden van het internet een verspilling van bandbreedte
omdat de stage bestanden toch hetzelfde zijn. In de meeste gevallen kan het
commando <c>uname -m</c> worden gebruikt bij het bepalen van het te downloaden
stage bestand.
</p>

<ul>
  <li>
    <uri link="#doc_chap2">Standaard: Een Stage van het internet gebruiken</uri>
  </li>
  <li>
    <uri link="#doc_chap3">Alternatief: Een Stage van de Installatie CD
    gebruiken</uri>
  </li>
</ul>

</body>
</subsection>
</section>
<section>
<title>Standaard: Een Stage van het internet gebruiken</title>
<subsection>
<title>Downloaden van de stage tarball</title>
<body>

<p>
Ga naar het Gentoo mountpunt waar je jouw filesystem hebt gemount
(zeer waarschijnlijk <path>/mnt/gentoo</path>):
</p>

<pre caption="Naar het Gentoo mountpunt gaan">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Afhankelijk van jouw installatie medium zijn er een aantal tools beschikbaar om
een stage te downloaden. Als je <c>links2</c> beschikbaar hebt, dan kun je
direct naar <uri link="/main/en/mirrors.xml">de Gentoo mirrorlijst</uri> surfen
en een mirror zoeken die dicht bij jou is.
</p>

<p>
Indien je geen beschikking hebt over <c>links2</c>, heb je wel <c>lynx</c>.
Indien je via een proxy moet, exporteer de <c>http_proxy</c> en <c>ftp_proxy</c>
variabelen:
</p>

<pre caption="Je proxy instellingen instellen voor lynx">
# <i>export http_proxy="http://proxy.server.com:port"</i>
# <i>export ftp_proxy="http://proxy.server.com:port"</i>
</pre>

<p>
We nemen nu aan dat je <c>links2</c> tot je beschikking hebt.
</p>

<p>
Neem de <path>reloases</path> map, gevolgd door jouw architectuur
(<path>x86/</path> bijvoorbeeld) en de Gentoo versie (<path>2005.0/</path>) en
tot slot de <path>stages/</path> map. Daar zou je alle voor jouw architecuur
beschikbare stage bestanden moeten zien (soms zitten zo nog in submappen voor
individuele subarchitecturen). Kies een en druk op <c>D</c> om te downloaden.
Als je klaar bent, druk op <c>Q</c> om de browser af te sluiten.
</p>

<pre caption="Naar de mirror lijst surfen met links2">
# <i>links2 http://www.gentoo.org/main/en/mirrors.xml</i>

<comment>Indien je proxy ondersteuning nodig hebt met links2:)</comment>
# <i>links2 -http-proxy proxy.server.com:8080 http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Als je de integriteit van een gedownloade stage tarball wil controleren kun je
<c>md5sum</c> gebruiken en vergelijken met de MD5 checksum die jouw mirror
levert. Om bijvoorbeeld de correctheid van de x86 stage tarball te controleren:
</p>

<pre caption="Voorbeeld controle van een stage tarball">
# <i>md5sum -c stage1-x86-2005.0.tar.bz2.md5</i>
stage1-x86-2005.0.tar.bz2: OK
</pre>

</body>
</subsection>
<subsection>
<title>De stage tarball controleren</title>
<body>

<p>
Pak nu je gedownloade stage uit op je systeem. Wij gebruiken GNU's <c>tar</c>
om verder te gaan omdat het de simpelste methode is:
</p>

<pre caption="De stage uitpakken">
# <i>tar -xvjpf stage?-*.tar.bz2</i>
</pre>

<p>
Zorg dat je dezelfde opties (<c>-xvjpf</c>) gebruikt. De <c>x</c> staat voor
<e>Extract</e> (uitpakken), de &lt;v&gt; voor <e>Verbose</e> (luidruchtig) om
te zien wat er gebeurt tijdens het uitpakken (oke, deze is optioneel), de
<c>j</c> voor <e>Decompress met bzip2</e>, de <c>p</c> voor <e>Preserve
permissions</e> (behoud rechten) en de <c>f</c> om duidelijk te maken dat we
een bestand willen uitpakken en niet standaard input.
</p>

<note>
De Installatie CDs en boot images van sommige architecturen (MIPS bijvoorbeeld)
steunen op de in de BusyBox ingebouwde <c>tar</c> welke op dit moment de
<c>-v</c> optie niet ondersteunt. Het kan dus mogelijk niet werken.
</note>

<p>
Nu de stage geïnstalleerd is, ga verder met <uri
link="#installing_portage">Portage installeren</uri>
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatief: Een Stage van de Installatie CD gebruiken</title>
<subsection>
<title>De stage tarball uitpakken</title>
<body>

<p>
De stages op de CD bevinden zich in de <path>/mnt/cdrom/stages</path> map. Om
een lijst te zien van alle beschikbare stages gebruik je <c>ls</c>:
</p>

<pre caption="Alle beschikbare stages zien">
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Als het systeem een foutmelding geeft dien je mogelijk eerst de CD te mounten:
</p>

<pre caption="De CD mounten">
# <i>ls /mnt/cdrom/stages</i>
ls: /mnt/cdrom/stages: No such file or directory
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom</i>
# <i>ls /mnt/cdrom/stages</i>
</pre>

<p>
Ga nu naar je Gentoo mountpunt (gebruikelijk <path>/mnt/gentoo</path>):
</p>

<pre caption="Changing directory to /mnt/gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
We zullen nu de stage tarball van jouw keuze uitpakken. We zullen hierbij GNU's
<c>tar</c> gebruiken. Zorg dat je dezelfde opties (<c>-xvjpf</c>) gebruikt!
Opnieuw, het <c>v</c> argument is optioneel en wordt niet ondersteund in sommige
<c>tar</c> versies. In het volgende voorbeeld zullen we de stage tarball
<path>stage3-&lt;subarch&gt;-2005.0.tar.bz2</path> uitpakken.
Zorg dat je de bestandsnaam vervangt met jouw stage.
</p>

<pre caption="De stage tarball uitpakken">
# <i>tar -xvjpf /mnt/cdrom/stages/stage3-&lt;subarch&gt;-2005.0.tar.bz2</i>
</pre>

<p>
Nu de stage geïnstalleerd is, ga verder met <uri
link="#installing_portage">Portage installeren</uri>
</p>

</body>
</subsection>
</section>
<section id="installing_portage">
<title>Portage installeren</title>
<subsection>
<title>Een Portage snapshot uitpakken</title>
<body>

<p>
Nu moet je een Portage snapshot installeren, een verzameling van bestanden die
Portage vertellen welke software titels je kan installeren, welke profielen
beschikbaar zijn, etc.
</p>

</body>
</subsection>
<subsection id="installing_from_Internet">
<title>Download en installeer een Portage snapshot</title>
<body>

<p>
Ga naar het mountpunt waar je je filesystem hebt gemount (zeer waarschijnlijk
<path>/mnt/gentoo</path>):
</p>

<pre caption="Naar het Gentoo mountpunt">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Start <c>links2</c> (of <c>lynx</c>) en ga naar onze <uri
link="/main/en/mirrors.xml">Gentoo mirror lijst</uri>. Kies een mirror dicht bij
jou en open de <path>snapshots/</path> map. Download daar de laatste Portage
snapshot door hem te selecteren en op <c>D</c> te drukken.
</p>

<pre caption="Naar de Gentoo mirrorlijst toe gaan">
# <i>links2 http://www.gentoo.org/main/en/mirrors.xml</i>
</pre>

<p>
Sluit nu je browser af door op <c>Q</c> te drukken. Je hebt nu een Portage
snapshot opgeslagen in <path>/mnt/gentoo</path>. In de volgende stap zullen we
de Portage snapshot uitpakken op je filesystem. Zorg dat je het exacte commando
gebruikt; de laatste optie is een hoofdletter <c>C</c>, geen <c>c</c>.
</p>

<pre caption="Extracting the Portage snapshot">
<comment>Vervang &lt;date&gt; met de datum van de gedownloade snapshot</comment>
# <i>tar -xvjf /mnt/gentoo/portage-&lt;date&gt;.tar.bz2 -C /mnt/gentoo/usr</i>
</pre>
         
</body>
</subsection>
</section>

<section id="compile_options">
<title>De compile opties configuren</title>
<subsection>
<title>Introductie</title>
<body>

<p>
Om Gentoo te optimalizeren kun je een aantal variabelen gebruiken die invloed
hebben op het gedrag van Portage. Al deze variabelen kunnen worden ingesteld als
omgevings variabele (met behulp van <c>export</c>) maar dat is niet permanent.
Om deze instellingen te behouden biedt Portage <path>/etc/make.conf</path>, een
configuratie bestand voor Portage. Het is dit bestand die we nu gaan bewerken.
</p>

<note>
Een lijst met commentaar van alle beschikbare variabelen kan worden gevonden in
<path>/mnt/gentoo/etc/make.conf.example</path>. Voor een succesvolle Gentoo
installatie moet je alleen de variabelen instellen die hieronder worden genoemd.
</note>

<p>
Start je favoriete editor (in deze handleiding gebruiken we <c>nano</c>) zodat
we de optimalisatie variabelen die hierna worden besproken kunnen aanpassen.
</p>

<pre caption="/etc/make.conf openen">
# <i>nano -w /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Zoals je waarschijnlijk hebt gemerkt is <path>make.conf.example</path> in een
algemene manier gestructureerd: commentaar regels beginnen met een "#", andere
regels bepalen variabelen door middel van de <c>VARIABELE="inhoud"</c> syntax.
Het <path>make.conf</path> bestand gebruikt dezelfde syntax. Enkele van die
variabele worden nu besproken.
</p>

</body>
</subsection>
<subsection>
<title>CHOST</title>
<body>

<warn>
Hoewel het aantrekkelijk voor niet-stage1 gebruikers, ze moeten de <c>CHOST</c>
instelling <e>niet</e> veranderen in <path>make.conf</path>. Dit kan leiden tot
een onbruikbaar systeem. Opnieuw: verander alleen deze variabele als je een
<e>stage1</e> installatie uitvoert.
</warn>

<p>
De <c>CHOST</c> variabele bepaalt voor welke architectuur <c>gcc</c> zijn
programmas voor moet compileren. De mogelijkheiden zijn:
</p>

<table>
<tr>
  <th>Architectuur</th>
  <th>Subarchitectuur</th>
  <th>CHOST instelling</th>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i386</ti>
  <ti>i386-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i486</ti>
  <ti>i486-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i586</ti>
  <ti>i586-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>x86</ti>
  <ti>i686 en hoger (incl. athlon)</ti>
  <ti>i686-pc-linux-gnu</ti>
</tr>
<tr>
  <ti>alpha</ti>
  <ti></ti>
  <ti>alpha-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>ppc</ti>
  <ti></ti>
  <ti>powerpc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>ppc64</ti>
  <ti></ti>
  <ti>powerpc64-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>sparc</ti>
  <ti></ti>
  <ti>sparc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>sparc64</ti>
  <ti></ti>
  <ti>sparc-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>(algemeen)</ti>
  <ti>hppa-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>pa7000</ti>
  <ti>hppa1.1-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>hppa</ti>
  <ti>pa8000 en hoger</ti>
  <ti>hppa2.0-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>mips</ti>
  <ti></ti>
  <ti>mips-unknown-linux-gnu</ti>
</tr>
<tr>
  <ti>amd64</ti>
  <ti></ti>
  <ti>x86_64-pc-linux-gnu</ti>
</tr>
</table>

<p>
Zorg ervoor dat je de <e>correcte</e> CHOST instelling kiest. Bijvoorbeeld, de
CHOST instelling voor sparc64 is <c>sparc-unknown-linux-gnu</c> en <e>niet</e>
<c>sparc64-unknown-linux-gnu</c>!
</p>

<p>
Gebruikers die geïnteresseerd zijn in hun hele systeem bootstrappen met NPTL
ondersteuning op een x86 systeem dienen hun CHOST op <c>i586-pc-linux-gnu</c>
of hoger te zetten.
</p>

</body>
</subsection>
<subsection>
<title>CFLAGS and CXXFLAGS</title>
<body>

<p>
De <c>CFLAGS</c> en respectievelijk <c>CXXFLAGS</c> variabelen bepalen de
optimalisatie vlaggen voor de <c>gcc</c> C en respectievelijk C++ compiler.
Hoewel we deze in het algemeen hier bepalen, zul je alleen de maximale
performance krijgen als je deze vlaggen appart voor elk programma bepaalt. De
reden hiervoor is dat elk programma anders is.
</p>

<p>
In <path>make.conf</path> zou je de optimalisatie vlaggen moeten zetten waarvan
jij denkt dat ze jouw systeem over het <e>algemeen</e> het snelste reageert.
Plaats geen experimentele instellingen in deze variabele; te veel optimalisaties
kunnen programmas slecht laten gedragen (crash, of erger, slecht functioneren).
</p>

<p>
We zullen niet alle mogelijke optimalisatie opties bespreken. Als je ze allemaal
wil weten, lees de <uri link="http://gcc.gnu.org/onlinedocs/">GNU Online
Manual(s)</uri> (EN) of de <c>gcc</c> info pagina (<c>info gcc</c> -- werkt
alleen op een werkend Linux systeem). Het <path>make.conf.example</path> bestand
bevat ook een boel voorbeelden en informatie; vergeet dit niet ook te lezen.
</p>

<p>
De eerste instelling is de <c>-march=</c> vlag welke de naam van de doel
architectuur bepaalt. Mogelijke opties worden beschreven in het
<path>make.conf.example</path> bestand (als commentaar). Voor bijvoorbeeld de
x86 Athlon XP architectuur:
</p>

<pre caption="De GCC march instelling">
<comment># AMD64 gebruikers die een native 64 bit syteem willen, dienen -march=k8</comment>
-march=athlon-xp
</pre>

<p>
Een tweede is de <c>-O</c> vlag (dat is een hoofdletter O, geen nul) welke
de <c>gcc</c> optimalisatie klasse vlag bepaalt. Mogelijke klassen zijn <c>s</c>
(voor grootte-optimalisatie (in Engels size)), <c>0</c> (nul - geen
optimalisaties), <c>1</c>, <c>2</c> of <c>3</c> voor snelheids-optimalisatie
vlaggen (iedere klasse heeft dezelfde vlaggen als de voorgaande, plus wat
extras). Bijvoorbeeld een klasse-2 optimalisatie:
</p>

<pre caption="De GCC O instelling">
-O2
</pre>

<p>
Een andere populaire optimalisatie vlag is <c>-pip</c> (gebruikt pipes in plaats
van tijdelijke bestanden voor de communicatie tussen de verschillen stages van
het compileren).
</p>

<p>
Let er op dat het gebruik van <c>-fomit-frame-pointer</c> (welke de frame
pointer niet in een register zet voor functies die dat niet nodig hebben)
serieuze gevolgen kan hebben voor het debuggen van applicaties!
</p>

<p>
Op het moment dat je de <c>CFLAGS</c> en <c>CXXFLAGS</c> bepaalt, zou je enkele
optimalisatie vlaggen kunnen combineren, zoals in het volgende voorbeeld:
</p>

<pre caption="De CFLAGS en CXXFLAGS variabelen instellen">
CFLAGS="-march=athlon-xp -pipe -O2"   <comment># AMD64 gebruikers dienen -march=k8</comment>
CXXFLAGS="${CFLAGS}"                  <comment># Gebruik dezelfde instellingen voor beiden</comment>
</pre>

</body>
</subsection>
<subsection>
<title>MAKEOPTS</title>
<body>

<p>
Met <c>MAKEOPTS</c> kun je instellen hoevel parralelle compilaties tegelijk
plaats moeten vinden als je een pakket installeert. Een goede keuze is het
aantal CPUs in je systeem plus een, maar deze vuistregel is niet altijd perfect.
</p>

<pre caption="MAKEOPTS voor een algemeen, 1-CPU systeem">
MAKEOPTS="-j2"
</pre>

</body>
</subsection>
<subsection>
<title>Klaar, op je plaatsen, af!</title>
<body>

<p>
Update je <path>/mnt/gentoo/etc/make.conf</path> naar je eigen wensen en sla
hem op (<c>nano</c> gebruikers zouden <c>Ctrl-X</c> moeten gebruiken). Je bent
nu klaar om verder te gaan met <uri link="?part=1&amp;chap=6">Installatie van
het Gentoo Basis Systeem</uri>.
</p>

</body>
</subsection>
</section>
</sections>
