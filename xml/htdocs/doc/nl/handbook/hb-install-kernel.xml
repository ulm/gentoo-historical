<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/handbook/Attic/hb-install-kernel.xml,v 1.1 2004/01/16 16:53:30 blubber Exp $ -->

<sections>
<section>
<title>De Sources Installeren</title>
<subsection>
<title>Een Kernel Kiezen</title>
<body>

<p>
<!--
The core around which all distributions are built is the Linux kernel. It is the
layer between the user programs and your system hardware. Gentoo provides its
users several possible kernel sources. A full listing with description is
available at the <uri link="/doc/en/gentoo-kernel.xml">Gentoo Kernel
Guide</uri>. 
-->
De kern waar rond alle distributies gebouwd zijn is de Linux kernel. Het is de 
laag tussen de gebruikers programmas en de hardware. Gentoo laat je kiezen
tussen verschillende kernel sources. Een volledige lijst met beschrijving is 
te vinden op <uri link="/doc/en/gentoo-kernel.xml">Gentoo KernelGuide</uri>.
</p>

<p>
<!--
For x86-based systems we have, amongst other kernels, <c>vanilla-sources</c>
(the default kernel source as developed by the linux-kernel developers),
<c>gentoo-sources</c> (kernel source patched with performance-enhancing
features), <c>gentoo-dev-sources</c> (kernel v2.6 source patched with
performance-enhancing features and stability improvements), <c>xfs-sources</c> 
(kernel source with the latest XFS support), <c>gs-sources</c> (kernel source 
patched for server usage), <c>gaming-sources</c> (kernel source patched for 
optimal gaming performance), ...
-->
Voor x86 systemen hebben we onder andere, <c>vanilla-sources</c> 
(de default kernel zoals die beschikbaar wordt gesteld door de linux-kernel 
developers), <c>gentoo-sources</c> (gepatched voor betere performance), 
<c>gentoo-dev-sources</c>, (de 2.6 kernel met extra performance patches
en betere stabiliteit), <c>xfs-sources</c> (kernel source met de laatste XFS
support), <c>gs-sources</c> (gepatched voor gebuik op servers), 
<c>gaming-sources</c> (voor optimale game performance), ...
</p>

<p>
<!--
For alpha-based systems we have <c>vanilla-sources</c> (the default kernel
source as developed by the linux-kernel developers), <c>alpha-sources</c>
(kernel source optimized for alpha users) and <c>compaq-sources</c> (kernel
source as used by RedHat for Alpha, maintained by Compaq).
-->
Voor Alpha systemen hebben we de <c>vanilla-sources</c> 
(de default kernel zoals die beschikbaar wordt gesteld door de linux-kernel 
developers), <c>alpha-sources</c> (geoptimaliseerd voor alpha gebuikers), 
<c>compaq-sources</c> (gebruikt door redHat voor Alpha, onderhouden door 
compaq).
</p>

<p>
<!--
For sparc-based systems we have <c>vanilla-sources</c> (the default kernel
source as developed by the linux-kernel developers) and <c>sparc-sources</c>
(kernel source optimized for SPARC users).
-->
Voor Sparc systemen hebben we de <c>vanilla-sources</c> 
(de default kernel zoals die beschikbaar wordt gesteld door de linux-kernel 
developers) en de <c>sparc-sources</c> (geoptimaliseerd voor Sparc gebruikers).
</p>

<p>
<!--
MIPS-based systems can choose from <c>mips-sources</c> (the default kernel
source for the MIPS architecture) and <c>mips-prepatch-sources</c> (prerelease
kernel tree).
-->
MIPS eigenaren kunnen kiezen uit  <c>mips-sources</c> (de default kernel 
source voor de MIPS architectuur) en <c>mips-prepatch-sources</c> (de prerelease
 kernel tree).
</p>

<p>
<!--
For AMD64-based systems we have <c>gentoo-dev-sources</c> (kernel v2.6 source
patched with amd64 specific fixes for stability, performance and hardware
support). 
-->
Voor AMD64 systemen hebben we de <c>gentoo-dev-sources</c> (2.6 kernel source
met patches voor amd64 specifieke oplossingen voor stabiliteit, performance 
en hardware). 
</p>

<p>
<!--
Other architectures should use the kernel source specifically optimized for
their architecture: <c>hppa-sources</c> (HPPA) or <c>ppc-sources</c> (PowerPC).
-->
Andere architectuuren moeten de kernel source gebruiken die geoptimaliseerd is 
voor hun architectuur: <c>hppa-sources</c> (HPPA) of <c>ppc-sources</c> 
(PowerPC).
</p>

<p>
<!--
Choose your kernel source and install it using <c>emerge</c>. From now onwards
we will use <c>emerge usepkg</c> which will install a prebuilt package if
available (for GRP users) and download it otherwise. In other words, if you are
not using prebuilt packages, you can omit the <c>usepkg</c> option, but you
don't have to. Furthermore, you can abbreviate the <c>usepkg</c> option by
using <c>-k</c>.
-->
Kies je kernel en installeer hem met <c>emerge</c>. Vanaf nu zullen we 
<c>emerge --usepkg</c> gebruiken wat een vooraf gemaakt pakket zal gebuiken 
indien beschikbaar (voor GRP gebruikers) en downloaden indien niet.
Met ander woorden, als je geen GRP gebruikt kan je <c>--usepkg</c> weg laten, 
maar het is niet noodzakelijk. <c>--usepkg</c> kan ook afgekort worden tot 
<c>-k</c>.
</p>

<p>
<!--
In the next example we install the <c>vanilla-sources</c> (as 
<c>gentoo-sources</c> isn't available on all architectures). Of course 
substitute with your choice of sources:
-->
In het volgende voorbeeld installeren we de <c>vanilla-sources</c> (want
de <c>gentoo-sources</c> zijn niet voor alle architecturen beschikbaar).
Natuurlijk ben je vrij naar eigen inzicht een andere kernel te kiezen.
</p>

<pre caption="een kernel source installeren">
# <i>emerge --usepkg vanilla-sources</i>
</pre>

<p>
<!--
When you take a look in <path>/usr/src</path> you should see a symlink called
<path>linux</path> pointing to your kernel source:
-->
Als je kijkt in <path>/usr/src</path> moet je een symlink zien, namelijk 
<path>linux</path>, die naar de kernel source wijst. 
</p>

<pre caption="de kernel source symlink bekijken">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.22
</pre>

<p>
<!--
If this isn't the case (i.e. the symlink points to a different kernel source) 
change the symlink before you continue:
-->
Als dit niet het geval is (wanneer de symlink naar een andere source wijst)
moet je hem veranderen voor je verder gaat.
</p>

<pre caption="de kernel source symlink veranderen">
# <i>rm /usr/src/linux &amp;&amp; ln -s /usr/src/linux-2.4.22 /usr/src/linux</i>
</pre>

<p>
<!--
Now it is time to configure and compile your kernel source. The x86-based
architectures can use <c>genkernel</c> for this, which will build a generic
kernel as used by the LiveCD. We explain the "manual" configuration first
though, as it is the best way to optimize your environment.
-->
Nu is het tijd om de kernel te configureren en te compileren. De x86 gebuikers
kunnen hiervoor <c>genkernel</c> gebruiken, wat een generieke kernel zal
aanmaken zoals die op de LiveCD gebruikt wordt. Maar eerst leggen we 
de handmatige  configuratie uit, dit is de beste manier om je omgeving 
te optimalizeren.
</p>

<p>
<!--
If you want to manually configure your kernel, continue now with <uri
link="#doc_chap2">Default: Manual Configuration</uri>. If you are an x86-users 
and you want to use <c>genkernel</c> you should read <uri 
link="#doc_chap3">Alternative: Using genkernel</uri> instead.
-->
Als je de kernel handmatig wilt configureren, ga dan door met <uri 
link="#doc_chap2">Standaard: Handmatige Configuratie</uri>. Als je een x86 
gebruiker bent en je wilt <c>genkernel</c> gebruiken, lees dan <uri 
link="#doc_chap3">Alternatief: genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Standaard: Handmatige Configuratie</title>
<subsection>
<title>Introductie</title>
<body>

<p>
<!--
Manually configuring a kernel is often seen as the most difficult course every
Linux users ever has to go through. Nothing is less true  after configuring a
couple of kernels you don't even remember that it was difficult ;)
-->
Handmatig de kernel configureren wordt vaak gezien als de moeilijkste taak die
Linux gebruikers hebben. Niets is minder waar -- na het configureren van een 
aantal kernels herinner je je niet meer dat het moeilijk was. 
</p>

<p>
<!--
However, one thing <e>is</e> true: you must know your system when you start
configuring a kernel manually. Most information can be gathered by viewing the
contents of <path>/proc/pci</path> (or by using <c>lspci</c> if available). You
can also run <c>lsmod</c> to see what kernel modules the LiveCD uses (it might
provide you with a nice hint on what to enable).
-->
Hoewel, een ding is waar: je moet je systeem kennen wanneer je je kernel
handmatig  gaat configureren. De meeste informatie kan gevonden worden door de 
inhoud van <path>/proc/pci</path> te bekijken (of met <c>lspci</c> indien 
beschikbaar). Je kan ook <c>lsmod</c> gebruiken om te zien welke kernel modules
de LiveCD gebruikt (het kan je eventueel hints geven over welke opties je moet 
gebruiken). 
</p>

<p>
<!--
Now go to your kernel source directory and execute <c>make menuconfig</c>. This
will fire up an ncurses-based configuration menu.
-->
Ga nu naar je kernel source directory in en voer <c>make menuconfig</c> uit.
Dit zal een ncurses gebaseerd configuratie menu opstarten.
</p>

<pre caption="Invoking menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
<!--
You will be greeted with several configuration sections. We'll first list some
options you must activate (otherwise Gentoo will not function, or not function
properly without additional tweaks).
-->
Je zal verschillende configuratie secties zien, We zullen eerst enkele opties 
bespreken die je moet activeren (anders zal Gentoo niet werken, of niet goed 
werken zonder de juiste aanpassingen).
</p>

</body>
</subsection>
<subsection>
<title>Vereiste Opties Activeren</title>
<body>

<p>
<!--
First of all, activate the use of development and experimental code/drivers.
You need this, otherwise some very important code/drivers won't show up:
-->
Allereerst, activeer het gebuik van "development and experimental code/drivers".
Je hebt dit nodig, anders zullen een aantal belangrijke code/drivers niet 
getoond worden.
</p>

<pre caption="Experimentele code/drivers selecteren">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers"
</pre>

<p>
<!--
Now go to <c>File Systems</c> and select support for the filesystems you use.
<e>Don't</e> compile them as modules, otherwise your Gentoo system will not be
able to mount your partitions. Also select <c>Virtual memory</c>, <c>/proc
file system</c>, <c>/dev file system</c> + <c>Automatically mount at boot</c>:
-->
Ga nu naar <c>File Systems</c> en selecteer de bestandssystemen die je gebruikt.
Compileer ze <e>niet</e> als modules, anders zal Gentoo jouw partities niet 
kunnen mounten. Selecteer ook <c>Virtual memory</c>, <c>/proc
file system</c>, <c>/dev file system</c> + <c>Automatically mount at boot</c>:
</p>

<pre caption="Noodzakelijke bestandssystemen selecteren">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot

<comment>(deslecteer dit tenzij je een 2.6 kernel hebt)</comment>
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(kies een of meerdere van deze opties)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
<!--
Users of a 2.6 kernel will find some of the mentioned options under <c>Pseudo
filesystems</c> which is a subpart of <c>File systems</c>.
-->
Gebruikers met een 2.6 kernel zullen enkele opties vinden onder <c>Pseudo
filesystems</c>, wat een subdeel is van <c>File systems</c>.
</note>

<p>
<!--
If you are using PPPoE to connect to the Internet, you will need the following
options in the kernel:
-->
Als je PPPoE gebruikt om met internet te verbinden, heb je de volgende opties 
nodig in de kernel.
</p>

<pre caption="PPPoE drivers selecteren">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<note>
<!--
Users of a 2.6 kernel will find the mentioned options under <c>Networking
support</c> which is a subpart of <c>Device Drivers</c>.
-->
Gebruikers met een 2.6 kernel zullen deze opties vinden onder <c>Networking
support</c> wat een subdeel is van <c>Device Drivers</c>.
</note>

<p>
<!--
The two compression options won't harm but are not definitely needed, neither
does the <c>PPP over Ethernet</c> option, that might only be used by 
<c>rp-pppoe</c> when configured to do kernel mode PPPoE.
-->
De twee compressie opties kunnen geen kwaad maar zijn zeker niet noodzakelijk, 
net zoals de <c>PPP over Ethernet</c> optie, wat enkel gebuikt wordt door 
<c>rp-pppoe</c> indien geconfigureerd voor kernel mode PPPoE.
</p>
<!-- TODO reactivate when LVM2 instructions are boarded
<p>
If you are using LVM, you will need to activate it in the kernel:
</p>

<pre caption="Selecting LVM support">
Multi-device support (RAID and LVM) - - -&gt;
  [*] Multiple devices driver support (RAID and LVM)
  &lt;*&gt;  Logical volume manager (LVM) support
</pre>
-->
<note>
<!--
Users of a 2.6 kernel will find the mentioned options under <c>Device
Drivers</c>.
-->
Gebruikers met een 2.6 kernel zullen deze opties vinden onder <c>Device
Drivers</c>.
</note>

<p>
<!--
If you require it, don't forget to include support in the kernel for your
ethernet card.
-->
Als je het nodig hebt, vergeet geen support voor je netwerk kaart in de 
kernel. 
</p>

<p>
<!--
Now, dependent on your architecture, you might need to select more options:
-->
Nu, fahankelijk van je systeem kan je meer opties nodig hebben:
</p>

<ul>
<li><uri link="#doc_chap2_sect3">x86 aangeraden opties</uri></li>
<li><uri link="#doc_chap2_sect4">Alpha aangeraden opties</uri></li>
<li><uri link="#doc_chap2_sect5">HPPA aangeraden opties</uri></li>
<li><uri link="#doc_chap2_sect6">PPC aangeraden opties</uri></li>
<li><uri link="#doc_chap2_sect7">SPARC aangeraden opties</uri></li>
<li><uri link="#doc_chap2_sect8">MIPS aangeraden opties</uri></li>
<li><uri link="#doc_chap2_sect9">AMD64 aangeraden opties</uri></li>
</ul>

</body>
</subsection>
<subsection>
<title>x86 aangeraden opties</title>
<body>

<p>
<!--
If you have an Intel CPU that supports HyperThreading (tm), or you have a
multi-CPU system, you should activate "Symmetric multi-processing support":
-->
Als je een Intel CPU hebt die HyperThreading (tm) ondersteund, of als je een
multi-CPU systeen hebt, dan moet je "Symmetric multi-processing support" 
activeren.
</p>

<pre caption="Activeer SMP support">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
<!--
When you've finished configuring the kernel, continue with <uri 
link="#compiling">Compiling and Installing</uri>.
-->
Als je klaar bent met het configureren van de kernel, ga verder met <uri 
link="#compiling">Compileren en Installeren</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Alpha aanbevolen opties</title>
<body>

<p>
<!--
The following options are recommended for Alpha-users:
-->
De volgende opties zijn aanbevolen voor Alpha gebruikers:
</p>

<pre caption="Alpha-specific options">
General setup ---&gt;
  &lt;*&gt; SRM environment through procfs
  &lt;*&gt; Configure uac policy via sysctl

Plug and Play configuration ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;M&gt;   ISA Plug and Play support

SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; SYM53C8XX Version 2 SCSI support (NEW)
    &lt;*&gt; Qlogic ISP SCSI support

Network device support ---&gt;
  Ethernet (10 or 100 Mbit) ---&gt;
    &lt;M&gt; DECchip Tulip (dc21x4x) PCI support
    &lt;M&gt; Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA
    &lt;M&gt; EtherExpressPro/100 support (eepro100)
    &lt;M&gt; EtherExpressPro/100 support (e100)
  Ethernet (1000 Mbit) ---&gt;
    &lt;M&gt; Alteon AceNIC
      [*] Omit support for old Tigon I
    &lt;M&gt; Broadcom Tigon3
  [*] FDDI driver support
  &lt;M&gt; Digital DEFEA and DEFPA
  &lt;*&gt; PPP support
    &lt;*&gt; PPP Deflate compression

Character devices ---&gt;
  [*] Support for console on serial port
  [*] Direct Rendering Manager

File systems ---&gt;
  &lt;*&gt; Kernel automounter version 4 support
  Network File Systems ---&gt;
    &lt;*&gt; NFS
      [*] NFSv3 client
      &lt;*&gt; NFS server
      [*] NFSv3 server
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*] Alpha OSF partition support
  Native Language Support
    &lt;*&gt; NLS ISO 8859-1

Sound ---&gt;
  &lt;M&gt; Sound card support
    &lt;M&gt; OSS sound modules
      [*] Verbose initialisation
      [*] Persistent DMA buffers
      &lt;M&gt; 100% Sound Blaster compatibles
</pre>

<p>
<!--
When you've finished configuring the kernel, continue with <uri 
link="#compiling">Compiling and Installing</uri>.
-->
Als je klaar bent met het configureren van de kernel, ga verder met <uri 
link="#compiling">Compileren en Installeren</uri>.
</p>

</body>
</subsection>
<subsection>
<title>HPPA aanbevolen opties</title>
<body>

<p>
<!--
If you have a HIL mouse or keyboard, do not forget to compile in support for
them.
-->
Als je een HIL muis of keyboard hebt, vergeet dan niet om hier de volgende
opties voor te selecteren:
</p>

<pre caption="Activateer HIL support">
Input core support ---&gt;
  [*] Keyboard support
  [*] Mouse support
  [*] Event interface support
</pre>

<p>
<!--
If you have no mouse on your HIL port, only use the basic support:
-->
Als je geen muis hebt op je HIL poort, activeer enkel basis support:
</p>

<pre caption="Basic HIL support">
HIL support ---&gt;
  [*] HIL Keyboard (basic) support
</pre>

<p>
<!--
If you however want <e>full</e> HIL support, select the following options:
-->
Als je echter <e>full</e> HIL support wilt, selecteer de volgende opties:
</p>

<pre caption="Full HIL support">
HIL support ---&gt;
  [*] HP System Device Controller i8042 Support
  [*] HIL MLC Support
  [*] HIL Keyboard (full) support
  [*] HIL Mouse &amp; Pointer support
</pre>

<p>
<!--
When you've finished configuring the kernel, continue with <uri 
link="#compiling">Compiling and Installing</uri>.
-->
Als je klaar bent met het configureren van de kernel, ga verder met <uri 
link="#compiling">Compileren en Installeren</uri>.
</p>

</body>
</subsection>
<subsection>
<title>PPC aanbevolen opties</title>
<body>

<p>
<!--
First of all, disable ADB raw keycodes:
-->
Allereerst, zet ondersteuning voor ADB raw keycodes uit:
</p>

<pre caption="ADB raw keycodes uitzetten">
Macintosh Device Drivers ---&gt;
  [ ] Support for ADB raw keycodes
</pre>

<p>
<!--
Also choose the correct RTC support (<e>disable</e> the <c>Enhanced RTC</c> 
option):
-->
Kies ook de juiste RTC support (<e>disable</e> de <c>Enhanced RTC</c> 
optie):
</p>

<pre caption="Activeer de juiste RTC option">
Character devices ---&gt;
  [ ] Enhanced RTC

General setup ---&gt;
  [*] Support for /dev/rtc
</pre>

<p>
<!--
Users of OldWorld machines will want HFS support so they can copy compiled
kernels to the MacOS partition.
-->
Gebruikers van OldWorld machines zullen HFS support willen zodat ze 
gecompileerde kernels kunnen kopieren naar de MacOS partitie. 
</p>

<pre caption="Activateer HFS support">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
<!--
When you've finished configuring the kernel, continue with <uri 
link="#compiling">Compiling and Installing</uri>.
-->
Als je klaar bent met het configureren van de kernel, ga verder met <uri 
link="#compiling">Compileren en Installeren</uri>.
</p>

</body>
</subsection>
<subsection>
<title>SPARC aangeraden opties</title>
<body>

<p>
<!--
First activate the correct bus-support:
-->
Activeer eerst de juiste bus-support:
</p>

<pre caption="Activateer SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>(Enkel voor de UPA slot adapter gebruikt in veel Ultras)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Enkel voor de SBUS slot adapter gebruikt in veel SPARCStations)</comment>
</pre>

<p>
<!--
Of course you want support for the OBP:
-->
En natuurlijk wil je ondersteuning voor OBP
</p>

<pre caption="Activateer OBP Support">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
<!--
You will also need SCSI-specific support:
-->
Je zal ook specifieke SCSI support modig hebben:
</p>

<pre caption="Activeer specifieke SCSI support">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Enkel voor SPARC ESP on-board SCSI adapter)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Enkel voor SBUS SCSI controllers van PTI of QLogic)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Enkel voor Ultra 60 on-board SCSI adapter)</comment>
</pre>

<p>
<!--
To support your network card, select one of the following:
-->
Voor je netwerkkaart, selecteer een van de volgende opties:
</p>

<pre caption="Activeer netwerk support">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>(Enkel voor SPARCStation, oudere Ultra systemen, en als Sbus optie)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>(Enkel voor Ultra; ook voor "qfe" quad-ethernet op PCI en Sbus)</comment>
</pre>

<p>
<!--
When you've finished configuring the kernel, continue with <uri 
link="#compiling">Compiling and Installing</uri>.
-->
Als je klaar bent met het configureren van de kernel, ga verder met <uri 
link="#compiling">Compileren en Installeren</uri>. Maar check eerst de kernel 
grootte.
</p>

<pre caption="Check kernel grootte">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
<!--
If the (uncompressed) size is bigger than 2.5Mb (for Sparc32) or 3.5Mb (for 
Sparc64), reconfigure your kernel untill it doesn't exceed these limits. One way
of accomplishing this is by having most kernel drivers compiled as modules.
Ignoring this can lead to a non-booting kernel.
-->
Waneer de (niet gecomprimeerde) grootte groter is dan 2.5Mb (voor Sparc32) 
of 3.5Mb (voor Sparc64), herconfigureer de kernel tot hij deze limieten niet 
overschrijdt. Een manier om dit te doen is door de meeste kernel drivers als 
modules te compileren. Let op, dit kan leiden tot een niet-bootende kernel.
</p>

<p>
<!--
Also, if your kernel is just a tad too big, you can try stripping it using the
<c>strip</c> command:
-->
Je kan ook de kernel strippen als die net te groot is met <c>strip</c>:
</p>

<pre caption="De kernel strippen">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection>
<title>MIPS aanbevolen opties</title>
<body>

<p>
<!--
If you are using an Indy/Indigo2 based system, you need to activate support for
it.
-->
Als je een Indy/Indigo2 systeem gebruikt, moet je hier support hebben:
</p>

<pre caption="Activateer SGI IP22">
Machine selection ---&gt;
  [*] Support for SGI IP22 (Indy/Indigo2)
</pre>

<p>
<!--
If you want to run Irix binaries, include the following option:
-->
Als je Irix binaries wil gebruiken, zet de volgende optie aan:
</p>

<pre caption="IRIX Binary support">
General setup ---&gt;
  [*] Include IRIX binary compatibility
</pre>

<p>
<!--
If you have ISA/EISA cards in your SGI Indigo2, enable support for it.
-->
Als je ISA/EISA kaarten hebt in je SGI Indigo2:
</p>

<pre caption="ISA/EISA support voor SGI Indigo2">
General setup ---&gt;
  [*] Indigo-2 (IP22) EISA bus support
  [*]   ISA bus support
</pre>

<p>
<!--
If you have a SGI parallel port, you can enable support for it. If you have an
ISA parallel port you should select "PC-style hardware" instead.
-->
Als je een SGI parallelle poort hebt, kan je support hiervoor activeren. Als je 
een ISA parallelle poort hebt moet je "PC-style hardware" selecteren.
</p>

<pre caption="SGI Parallel Port Support">
Parallel port support  ---&gt;
  &lt;*&gt; Parallel port support
  &lt;*&gt;   SGI Indy/Indigo2 hardware (EXPERIMENTAL) (NEW)
  &lt;*&gt;   IEEE 1284 transfer modes (NEW)
</pre>

<p>
<!--
If you want to use the Indigo2 ISA slots, enable the plug and play support.
-->
Als je de Indigo2 ISA slots wilt gebruiken, activeer plug and play support.
</p>

<pre caption="PnP support voor ISA">
Plug and Play configuration  ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;*&gt;   ISA Plug and Play support
</pre>

<p>
<!--
Don't forget to enable SCSI support, and use the SGI WD93C93 Driver:
-->
Vergeet geen SCSI support en gebruik de SGI WD93C93 Driver:
</p>

<pre caption="WD93C93 Driver Support">
SCSI low-level drivers  ---&gt;
  &lt;*&gt; SGI WD93C93 SCSI Driver
</pre>

<p>
<!--
For network cards you probably need support for the SGI Seeq ethernet
controller:
-->
Voor netwerkkaarten heb je waarschijnlijk support voor de SGI Seeq ethernet
controller nodig:
</p>

<pre caption="SGI Seeq Support">
Network device support  ---&gt;
  Ethernet (10 or 100Mbit)  ---&gt;
    [*] Ethernet (10 or 100Mbit)
    [*]   SGI Seeq ethernet controller support
</pre>

<p>
<!--
Don't forget to enable serial console support and enable support for the SGI
Zilog85C30:
-->
Vergeet niet serial console support en SGI Zilog85C30 support te activeren:
</p>

<pre caption="SGI Zilog85C30 Support">
Character devices ---&gt;
  [*] Non-standard serial port support
  [*]   SGI Zilog85C30 serial support
</pre>

<p>
<!--
Also don't forget to enable the Indy/I2 Watchdog support as well as the SGI
DS1286 RTC support:
-->
Vergeet ook niet Indy/I2 Watchdog support en SGI
DS1286 RTC support te activeren:
</p>

<pre caption="Watchdog en RTC Support">
Character Devices ---&gt;
  [*] SGI DS1286 RTC support
  Watchdog Cards  ---&gt;
    [*] Watchdog Timer Support
    &lt;*&gt;   Indy/I2 Hardware Watchdog
</pre>

<p>
<!--
You should also enable support for SGI partitions :)
-->
Je moet ook support voor je SGI partities activeren
</p>

<pre caption="Support voor SGI Partities">
File Systems ---&gt;
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*]   SGI partition support
</pre>

<p>
<!--
If you have an SGI Newport (XL Gfx) Card and want to use it, then you'll want to
enable support for it:
-->
Als je een SGI Newport (XL Gfx) kaart heb en je wil ze gebruiken:
</p>

<pre caption="Support voor de SGI Newport kaart">
Console drivers  ---&gt;
  &lt;*&gt; SGI Newport Console support (NEW)
</pre>

<p>
<!--
If you want sound support on your Indy/Indigo2, enable support for it:
-->
Als je geluidsondersteuning wil voor Indy/Indigo2: 
</p>

<pre caption="Support voor SGI HAL2">
Sound  ---&gt;
  &lt;*&gt; Sound card support
  &lt;*&gt;   SGI HAL2 sound (EXPERIMENTAL)
</pre>

<p>
<!--
When you've finished configuring the kernel, continue with <uri 
link="#compiling">Compiling and Installing</uri>.
-->
Als je klaar bent met het configureren van de kernel, ga verder met <uri i
link="#compiling">Compileren en Installeren</uri>.
</p>

</body>
</subsection>
<subsection>
<title>AMD64 aanbevolen opties</title>
<body>

<p>
<!--
If you have a multi-CPU Opteron system, you should activate "Symmetric
multi-processing support":
-->
Als je een multi-CPU Opteron systeem hebt, moet je "Symmetric
multi-processing support" activeren:
</p>

<pre caption="Activeer SMP support">
Processor type and features ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
<!--
When you've finished configuring the kernel, continue with <uri 
link="#compiling">Compiling and Installing</uri>.
-->
Als je klaar bent met het configureren van de kernel, ga verder met <uri 
link="#compiling">Compileren en Installeren</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compileren and Installeren</title>
<body>

<p>
<!--
Now that your kernel is configured, it is time to compile and install it. Exit 
the configuration and run <c>make dep &amp;&amp; make bzImage modules 
modules_install</c>:
-->
Nu de kernel geconfigureerd is is het tijd om hem te compileren en installeren. 
Verlaat de configratie en voer <c>make dep &amp;&amp; make bzImage modules 
modules_install</c> uit:
</p>

<pre caption="De kernel compileren">
<comment>(x86 systemen met 2.4 kernel)</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>(Alle andere systemen met 2.4 kernel)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(amd64 systemen met 2.6 kernel)</comment>
# <i>make bzImage modules modules_install</i>

<comment>(Alle andere systemen met 2.6 kernel)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
<!--
When the kernel is done compiling, copy over the kernel image to
<path>/boot</path>. In the next example we assume you have configured and
compiled <c>vanilla-sources-2.4.22</c> (which may not be the right kernel for
your architecture!):
-->
Wanneer de kernel gecompileerd is moet je hem naar <path>/boot</path> kopieren. 
In het volgende voorbeeld veronderstellen we dat je een 
<c>vanilla-sources-2.4.22</c> gecompileerd hebt (wat een foute kernel kan zijn 
voor je architectuur).
</p>

<pre caption="De kernel installeren">
<comment>(x86 systemen)</comment>
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.4.22</i>
# <i>cp System.map /boot/System.map-2.4.22</i>

<comment>(amd64 systemen)</comment>
# <i>cp arch/x86_64/boot/bzImage /boot/kernel-2.4.22</i>

<comment>(Alle andere systemen)</comment>
# <i>cp vmlinux /boot/kernel-2.4.22</i>
# <i>cp System.map /boot/System.map-2.4.22</i>
</pre>

<p>
<!--
It is also wise to copy over your kernel configuration file to
<path>/boot</path>, just in case :)
-->
Het is ook verstandig de kernel te configuratie te kopieren naar 
<path>/boot</path>, je weet maar nooit :)
</p>

<pre caption="Back-up van de kernel configuratie ">
# <i>cp .config /boot/config-2.4.22</i>
</pre>

<p>
<!--
If you are a MIPS user and your system doesn't boot ELF kernels, compile the
kernel using <c>make vmlinux.ecoff</c> instead of <c>make vmlinux</c>. The
kernel image will be saved as <path>arch/mips/boot/vmlinux.ecoff</path> instead
of <path>vmlinux</path>.
-->
Als je een MIPS gebruiker bent met een systeem dat geen ELF kernels kan booten, 
compileer de kernel fsn met <c>make vmlinux.ecoff</c> ipv <c>make vmlinux</c>. 
De kernel image zal gesaved worden als <path>arch/mips/boot/vmlinux.ecoff</path>
ipv <path>vmlinux</path>.
</p>

<p>
Ga verder met <uri link="#doc_chap4">Aparte Kernel
Modules Installeren</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatief: genkernel</title>
<body>

<p>
<!--
If you are reading this section, you have chosen to use our <c>genkernel</c>
script to configure your kernel for you. However, this also means that you have
an x86-based system. Other architectures are <e>not supported</e> by
<c>genkernel</c>. 
-->
<!-- TODO: Add ppc as it should be available with the first
2004 release -->
Als je deze sectie leest heb je gekozen om <c>genkernel</c> te gebruiken om 
voor jou de kernel te configureren. Dit betekent ook dat je een x86 systeem 
hebt. Andere architecturen worden<e>niet ondersteund</e> door <c>genkernel</c>.
</p>

<p>
<!--
Now that your kernel source tree is installed, it's now time to compile your 
kernel by using our <c>genkernel</c> script to automatically build a kernel for 
you. <c>genkernel</c> works by configuring a kernel nearly identically to the 
way our LiveCD kernel is configured. This means that when you use 
<c>genkernel</c> to build your kernel, your system will generally detect all 
your hardware at boot-time, just like our Live CD does. Because genkernel 
doesn't require any manual kernel configuration, it is an ideal solution for 
those users who may not be comfortable compiling their own kernels.
-->
Nu de kernel source tree geinstalleerd is is het tijd om de kernel te compileren
met ons <c>genkernel</c> script dat automatisch een kernel maakt voor jou.
<c>genkernel</c> configureert een kernel op bijna dezelfde wijze zoals ze op de 
LiveCD geconfigureerd is. Dit betekent dat als je <c>genkernel</c> gebruikt, 
je systeem alle hardware zal detecteren tijdens het booten. net zoals de LiveCD 
dit doet. Omdat genkernel geen handmaite configuratie vereist is het de ideale 
oplossing voor gebruikers die zich niet zo goed voelen bij het zelf compileren 
van de kernel.  
</p>

<p>
<!--
Now, let's see how to use genkernel. First, emerge the genkernel ebuild:
-->
Hier volgt het gebruik van genkernel. Installeer eerst genkernel:
</p>

<pre caption="Emerging genkernel">
# <i>emerge --usepkg genkernel</i>
</pre>

<p>
<!--
Now, compile your kernel sources by running <c>genkernel</c>. Be aware though,
as <c>genkernel</c> compiles a kernel that supports almost all hardware, this
compilation will take quite a while to finish!
-->
Compileer nu de kernel sources met <c>genkernel</c>. Let op, dit kan lang duren 
want <c>genkernel</c> compileert een kernel die de meeste hardware ondersteund.
</p>

<pre caption="Genkernel">
# <i>genkernel</i>
Gentoo Linux genkernel, version 1.4
Copyright 2003 Gentoo Technologies, Inc., Bob Johnson, Daniel Robbins
Distributed under the GNU General Public License version 2

Settings:
compile optimization: 1 processor(s)
source tree: /usr/src/linux-2.4.22
config: gentoo (customized)
config loc: /etc/kernels/config-2.4.22
initrd config: (default) /etc/kernels/settings

* Running "make oldconfig"...                                                                     [ ok ]
* Logging to /var/log/genkernel.log...                                                            [ ok ]
* Starting 2.4.22 build...                                                                        [ ok ]
* Running "make dep"...                                                                           [ ok ]
* Running "make bzImage"...                                                                       [ ok ]
* Running "make modules"...                                                                       [ ok ]
* Running "make modules_install"...                                                               [ ok ]
* Moving bzImage to /boot/kernel-2.4.22...                                                        [ ok ]
* Building busybox...                                                                             [ ok ]
* Creating initrd...                                                                              [ ok ]

* Build completed successfully!

* Please specify /boot/kernel-2.4.22 and /boot/initrd-2.4.22
* when customizing your boot loader configuration files.
</pre>

<p>
<!--
Once <c>genkernel</c> completes, a kernel, full set of modules and 
<e>initial root disk</e> (initrd) will be created. We will use the kernel 
and initrd when configuring a boot loader later in this document. Write
down the names of the kernel and initrd as you will need it when writing
the bootloader configuration file. The initrd will be started immediately after 
booting to perform hardware autodetection (just like on the Live CD) before 
your "real" system starts up.
-->
Eenmaal <c>genkernel</c> klaar is zal een volledige set modules en een 
<e>initial root disk</e> aangemaakt worden. We zullen de kernel en initrd 
gebruiken wanneer we later de boot loader configureren. Schrijf de namen op 
van de kernel en initrd want je hebt ze nodig om de bootloader configuratie te 
schrijven. Initrd wordt gestart vlak na het booten om de hardware autodetectie 
uit te voeren (zoals op de LiveCD) voor het "echte" systeem opstart.
</p>

<p>
<!--
Now, let's perform one more step to get our system to be more like the Live 
CD  let's emerge <c>hotplug</c>. While the initrd autodetects hardware that 
is needed to boot your system, <c>hotplug</c> autodetects everything else.
To emerge and enable <c>hotplug</c>, type the following:
-->
Laat ons nu nog een stap uitvoeren om ons systeem te laten lijken op de LiveCD: 
emerge <c>hotplug</c>. Zoals initrd nodig is om hardware te detecteren is 
<c>hotplug</c> nodig om al de rest te detecteren. Om <c>hotplug</c> te 
installeren en te activeren, doe het volgende:
</p>

<pre caption="Hotplug installeren en activeren">
# <i>emerge --usepkg hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

</body>
</section>
<section>
<title>Aparte Kernel Modules Installeren</title>
<subsection>
<title>Extra Modules Installeren</title>
<body>

<p>
<!--
If appropriate, you should emerge ebuilds for any additional hardware that is 
on your system. Here is a list of kernel-related ebuilds that you could emerge:
-->
Indien nodig moet je ebuilds emergen voor extra hardware in je systeem. 
Hier volgt een lijst van kernel gerelateerde ebuilds die je kan installeren:
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>Ebuild</th>
  <th>Doel</th>
  <th>Commando</th>
</tr>
<tr>
  <ti>nvidia-kernel</ti>
  <ti>NVIDIA driver voor XFree86</ti>
  <ti><c>emerge --usepkg nvidia-kernel</c></ti>
</tr>
<tr>
  <ti>nforce-net</ti>
  <ti>On-board ethernet controller voor NVIDIA NForce(2) moederborden</ti>
  <ti><c>emerge nforce-net</c></ti>
</tr>
<tr>
  <ti>nforce-audio</ti>
  <ti>On-board audio voor NVIDIA NForce(2) moederborden</ti>
  <ti><c>emerge nforce-audio</c></ti>
</tr>
<tr>
  <ti>e100</ti>
  <ti>Intel e100 Fast Ethernet Adapters</ti>
  <ti><c>emerge e100</c></ti>
</tr>
<tr>
  <ti>e1000</ti>
  <ti>Intel e1000 Gigabit Ethernet Adapters</ti>
  <ti><c>emerge e1000</c></ti>
</tr>
<tr>
  <ti>emu10k1</ti>
  <ti>Creative Sound Blaster Live!/Audigy ondersteuning</ti>
  <ti><c>emerge emu10k1</c></ti>
</tr>
<tr>
  <ti>ati-drivers</ti>
  <ti>ATI Radeon 8500+/FireGL drivers voor XFree86</ti>
  <ti><c>emerge ati-drivers</c></ti>
</tr>
<tr>
  <ti>xfree-drm</ti>
  <ti>
    AFree86 drivers voor ATI Radeon tot 9200, Rage128, Matrox, Voodoo en 
    andere kaarten
   </ti>
  <ti><c>VIDEO_CARDS="yourcard" emerge xfree-drm</c></ti>
</tr>
</table>

<p>
<!--
Beware though, some of these ebuilds might deal with big dependencies. To verify
what packages will be installed by emerging an ebuild, use <c>emerge 
pretend</c>. For instance, for the <c>emu10k1</c> package:
-->
Let op want sommige van deze ebuilds kunnen grote dependencies hebben. Om dit 
te contoleren voer je <c>emerge --pretend</c>. Bij voorbeeld voor het 
<c>emu10k1</c> pakket.
</p>

<pre caption="Toon de volledige installatie listing van dit pakket">
# <i>emerge --pretend emu10k1</i>
</pre>

<p>
<!--
If you don't like the packages it wants to install, use <c>emerge pretend 
verbose</c> to see what USE-flags are checked when deciding the dependencies:
-->
Als de pakketten u niet bevallen kan je <c>emerge --pretend --verbose</c> 
gebruiken om te zien welke USE-flags worden gecontroleerd voor de dependencies. 
</p>

<pre caption="Toon USE-flag gebruik">
# <i>emerge --pretend --verbose emu10k1</i>
<comment>...</comment>
[ebuild  N    ] media-sound/aumix-2.8  +gpm +nls +gtk +gnome +alsa -gtk2
</pre>

<p>
<!--
In the previous example you can see that one of <c>emu10k1</c>'s dependencies
(<c>aumix</c>) uses the <c>gtk</c> and <c>gnome</c> USE-flags, making gtk (which
depends on XFree) be compiled with it.
-->
In het vorig voorbeeld kan je zien dat een van de <c>emu10k1</c> dependencies 
(<c>aumix</c>) de <c>gtk</c> en <c>gnome</c> USE-flags gebruikt zodat gtk 
(dat van Xfree afhangt) mee gecompileerd wordt.
</p>

<p>
<!--
If you don't want all this to be compiled, deselect all USE-flags, for instance:
-->
Als je niet wil dat dit allemaal gecompileerd wordt, deselecteer de USE 
vlaggen, bij voorbeeld:
</p>

<pre caption="Emerge emu10k1 met USE-flags gedeselecteerd">
# <i>USE="-gpm -nls -gtk -gnome -alsa" emerge --pretend emu10k1</i>
</pre>

<p>
<!--
When you're happy with the results, remove the <c>pretend</c> to start
installing <c>emu10k1</c>.
-->
Wanneer het resultaat je bevalt, verwijder de <c>--pretend</c> om 
<c>emu10k1</c> te installeren.
</p>

</body>
</subsection>
<subsection>
<title>De Modules Configureren</title>
<body>

<p>
<!--
If you are not using <c>hotplug</c>, you should list the modules you want
automatically loaded in <path>/etc/modules.autoload.d/kernel-2.4</path> (or
<path>kernel-2.6</path>). You can add extra options to the modules too if you 
want.
-->
Als je geen <c>hotplug</c> gebruikt moet je de modules die je wil laden in 
<path>/etc/modules.autoload.d/kernel-2.4</path> (of <path>kernel-2.6</path>). 
invullen. Je kan ook extra opties aan de modules meegeven als je wil. 
</p>

<p>
<!--
To view all available modules, run the following <c>find</c> command. Don't
forget to substitute "&lt;kernel version&gt;" with the version of the kernel you
just compiled:
-->
Om alle beschikbare modules te zien, voer het volgende <c>find</c> commando uit.
Vergeet niet om de "&lt;kernel versie&gt;" aan te passen in functie van diegene 
die je zonet gecompileerd hebt. 
</p>

<pre caption="Alle beschikbare modules tonen">
# <i>find /lib/modules/&lt;kernel versie&gt;/ -type f -iname '*.o'</i>
</pre>

<p>
<!--
For instance, to automatically load the <c>3c59x.o</c> module:
-->
Bij voorbeeld, om <c>3c59x.o</c> automatisch te laden:
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.4 of kernel-2.6">
3c59x
</pre>

<p>
<!--
Now run <c>modules-update</c> to commit your changes to the
<path>/etc/modules.conf</path> file:
-->
Voer nu <c>modules-update</c> uit om de wijzingen in 
<path>/etc/modules.conf</path> vast te leggen.
</p>

<pre caption="modules-update uitvoeren">
# <i>modules-update</i>
</pre>

<p>
<!--
Continue the installation with <uri link="?part=1&amp;chap=8">Configuring 
your System</uri>.
-->
Ga verder met de installatie: <uri link="?part=1&amp;chap=8">Het Systeem 
Configureren</uri>.
</p>

</body>
</subsection>
</section>
</sections>
