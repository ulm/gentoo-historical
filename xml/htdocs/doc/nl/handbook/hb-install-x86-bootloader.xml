<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/handbook/hb-install-x86-bootloader.xml,v 1.8 2005/04/07 22:12:06 neysx Exp $ -->

<sections>

<version>2.3</version> 
<date>2005-03-28</date>

<section>
<title>Je keuze maken</title>
<subsection>
<title>Introductie</title>
<body>

<p>
Nu je kernel is geconfigureerd en gecompileerd en de nodige systeem
configuratie bestanden goed zijn ingevuld, is het tijd om een programma te
installeren die je kernel zal starten als je systeem opstart. Zo'n programma
heet een <e>bootloader</e>. Voor x86 levert Gentoo Linux
<uri link="#grub">GRUB</uri> en <uri link="#lilo">LILO</uri>. Maar voor we een
van beiden installeren, zullen we je eerst vertellen hoe je framebuffer moet
configureren (aangenomen dat je dat wil natuurlijk). Met framebuffer kun je op
de Linux command line (beperkt) grafische features gebruiken (zoals een mooi
bootsplash plaatje wat Gentoo levert).
</p>

</body>
</subsection>
<subsection>
<title>Optioneel: Framebuffer</title>
<body>

<p>
<e>Als</e> je je kernel hebt geconfigureerd met framebuffer ondersteuning (of
als je <c>genkernel</c>'s standaard kernel configuratie hebt gebruikt), kun je
dit activeren door een <c>vga</c> en/of een <c>video</c> argument toe te voegen
aan je bootloaders configuratie bestand.
</p>

<p>
Om te beginnen moet je weten welke type framebuffer methode je gebruikt. Als je
een gepatchte Gentoo kernel (zoals <c>gentoo-sources</c>), heb je de
mogelijkheid om <c>vesafb-tng</c> als het <c>VESA driver type</c> te gebruiken
(wat standaard is voor deze kernel broncodes). Als dit het geval is, gebruik je
<c>vesafb-tng</c> en heb je geen <c>vga</c> argument nodig. Als dit niet het
geval is, gebruik je de <c>vesafb</c> driver en dien je wel het <c>vga</c>
argument in te stellen.
</p>

<p>
Het <c>vga</c> argument bepaalt de resolutie en kleurendiepte van je framebuffer
scherm voor <c>vesafb</c>. Zoals vermeld in
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> (wat ge√Ønstalleerd wordt
als je een kernelbroncodepakket installeert), dien je het het VESA nummer mee te
geven wat overeenkomt met de gewenste resolutie en kleurendiepte.
</p>

<p>
De volgende tabel geeft een lijst met beschikbare resoluties en kleurendieptes
en geeft de overeenkomende waarde die aan het <c>vga</c> argument meegegeven
dient te worden.
</p>

<table>
<tr>
  <ti></ti>
  <th>640x480</th>
  <th>800x600</th>
  <th>1024x768</th>
  <th>1280x1024</th>
</tr>
<tr>
  <th>256</th>
  <ti>0x301</ti>
  <ti>0x303</ti>
  <ti>0x305</ti>
  <ti>0x307</ti>
</tr>
<tr>
  <th>32k</th>
  <ti>0x310</ti>
  <ti>0x313</ti>
  <ti>0x316</ti>
  <ti>0x319</ti>
</tr>
<tr>
  <th>64k</th>
  <ti>0x311</ti>
  <ti>0x314</ti>
  <ti>0x317</ti>
  <ti>0x31A</ti>
</tr>
<tr>
  <th>16M</th>
  <ti>0x312</ti>
  <ti>0x315</ti>
  <ti>0x318</ti>
  <ti>0x31B</ti>
</tr>
</table>

<p>
Het <c>video</c> argument bepaalt de framebuffer opties. Het is vereist voor de
framebuffer driver (<c>vesafb</c> voor 2.6 kernels of <c>vesa</c> voor 2.4
kernels), gevolgd door de argumenten die je wenst te gebruiken. Alle variabelen
staan in <path>/usr/src/linux/Documentation/fb/vesafb.txt</path>, maar we zullen
je de drie meest gebruikte opties vertellen:
</p>

<table>
<tr>
  <th>Optie</th>
  <th>Beschrijving</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    Aangenomen dat de grafische kaard zijn geheugen kan "wrappen", wat betekent
    dat hij verder gaat bij het begin van het geheugen als het bij het einde
    is aangekomen.
  </ti>
</tr>
<tr>
  <ti>mtrr</ti>
  <ti>
    MTRR registers gebruiken
  </ti>
</tr>
<tr>
  <ti><c>mode</c></ti>
  <ti>
    (alleen <c>vesafb-tng</c>)<br/>
    Stel de resolutie, de kleurendiepte en de ververssnelheid in. Bijvoorbeeld,
    <c>1024x786-32@85</c> voor een 1024x768 resolutie, 32 bit kleurendiepte en
    een ververssnelheid van 85 Hz.
  </ti> 
</tr>   
</table>

<p>
Het resultaat van deze twee argumenten kan iets zijn als <c>vga=0x318
video=vesafb:mtrr,ywrap</c> of <c>video=vesafb:mtrr,ywrap,1024x768-32@85</c>.
Onthoud (of noteer) deze instelling; je hebt het snel nodig.
</p>

<p>
Ga nu verder door <uri link="#grub">GRUB</uri> <e>of</e>
<uri link="#lilo">LILO</uri> te installeren.
</p>

</body>
</subsection>
</section>
<section id="grub">
<title>Standaard: GRUB gebruiken</title>
<subsection>
<title>GRUB's terminologie begrijpen</title>
<body>

<p>
Het belangrijkste deel van GRUB begrijpen, is begrijpen hoe grub harde
schijven en partities noemt. Je Linux partitie <path>/dev/hda1</path> heet zeer
waarschijnlijk <path>(hd0,0)</path> onder GRUB. Vergeet niet de haakjes rond
<path>hd0,0</path> - ze zijn vereist.
</p>

<p>
Harde schijven tellen liever vanaf nul dan vanaf "a" en partities beginnen
bij nul in plaats van een. Merk ook op dat met hd apparaten alleen harde
schijven worden geteld en geen atapi-ide apparaten zoals cdrom spelers en
branders. Ook wordt hetzelfde gebruikt bij SCSI schijven. (Normaal gesproken
krijgen ze hogere nummers dan ide schijven tenzij de bios is ingesteld om vanaf
scsi schijven op te starten.) Als je de BIOS instelt om van een andere harde
schijf op te starten, wordt <e>die</e> harde schijf gezien als <path>hd0</path>.
</p>

<p>
Laten we een voorbeeld nemen. Stel dat je een harde schijf op
<path>/dev/hda</path> hebt, een cdrom speler op <path>/dev/hdb</path>, een
brander op <path>/dev/hdc</path>, een tweede harde schijf op
<path>/dev/hdd</path> en geen SCSI harde schijf, dan wordt
<path>/dev/hdd7</path> vertaald tot <path>(hd1,6)</path>. Het klinkt misschien
moeilijk en dat is het ook, maar zoals we zullen zien heeft GRUB een tab
aanvullings mechanisme dat heel erg van pas komt voor diegene met veel schijven
en partities en een beetje verloren is geraakt in het GRUB schema.
</p>

<p>
Ik denk dat we nu wel toe zijn aan het installeren van GRUB.
</p>

</body>
</subsection>
<subsection>
<title>GRUB installeren</title>
<body>

<p>
Om GRUB te installeren, zullen we het eerst emergen:
</p>

<pre caption="Installing GRUB">
# <i>emerge grub</i>
</pre>

<p>
Hoewel GRUB nu is geinstalleerd, moeten we nog steeds een configuratie ervoor
schrijven en GRUB in onze MBR zetten zodat GRUB ook daadwerkelijk je verse
kernel opstart. Maak <path>/boot/grub/grub.conf</path> met <c>nano</c>
(of je favoriete andere editor):
</p>

<pre caption="/boot/grub/grub.conf aanmaken">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Nu gaan we een <path>grub.conf</path> schrijven. Hieronder vind je twee
mogelijke versies van <path>grub.conf</path> voor de partitionering die we
hebben gebruikt in deze handleiding, met kernel image
<path>kernel-2.6.11-gentoo-r3</path>. We hebben alleen uitgebreid commentaar
gegeven op de eerste <path>grub.conf</path>. Zorg dat je <e>jouw</e> kernel
image bestandsnaam en, indien van toepassing, <e>jouw</e> initrd image
bestandsnaam gebruikt.
</p>

<ul>
  <li>
    De eerste <path>grub.conf</path> is voor mensen die geen <c>genkernel</c>
    hebben gebruikt om hun kernel te bouwen
  </li>
  <li>
    De tweede <path>grub.conf</path> is voor mensen die wel <c>genkernel</c>
    hebben gebruikt
  </li>
</ul>

<note>
Als je root filesystem JFS is, <e>moet</e> "ro" aan de <c>kernel</c> regel
toevoegen. Hier door kan JFS zijn log naspelen voordat hij schrijven toelaat.
</note>

<pre caption="grub.conf for non-genkernel users">
<comment># Wat is de standaard kernel om op te starten? 0 is de eerste, 1 is de tweede.</comment>
default 0
<comment># Hoeveel seconden wachten we tot onze standaard kernel opstart.</comment>
timeout 30
<comment># Mooi, vet splash-image om het mooier te maken :)
# Haal dit weg als je geen grafische kaart hebt geinstalleerd</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.6.11-r3
<comment># Partitie waar je kernel image (of besturingssysteem) op staat</comment>
root (hd0,0)
kernel /kernel-2.6.11-gentoo-r3 root=/dev/hda3

<comment># De volgende vier regels zijn alleen nodig als je een dualboot met een Windows systeem hebt.</comment>
<comment># In dit geval is Windows geinstalleerd op /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<pre caption="grub.conf voor genkernel gebruikers">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux 2.6.11-r3
root (hd0,0)
kernel /kernel-2.6.11-gentoo-r3 root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev
initrd /initrd-2.6.11-gentoo-r3

<comment># Alleen van toepassing als je dual-boot hebt</comment>
title=Windows XP
root (hd0,5)
makeactive
chainloader +1
</pre>

<note>
Het <c>udev</c> aan het einde van de kernel regel is nodig om langs een bug in
enkele genkernel versies te werken. DIt is alleen nodig <e>als</e> je udev
gebruikt (wat standaard is).
</note>

<note>
Als je echter een ander partitioneringsschema en/of kernel image gebruikt, pas
dit dan aan. Zorg echter wel dat alles wat een GRUB-apparaat volg (zoals
<path>(hd0,0)</path>) relatief is aan het mount punt, niet naar de root. In
andere woorden, <path>(hd0,0)/grub/splash.xpm.gz</path> is in werkelijkheid
<path>/boot/grub/splash.xpm.gz</path> omdat <path>(hd0,0)</path> gewoon
<path>/boot</path> is.
</note>

<p>
Als je extra opties aan je kernel wil toevoegen, zet je ze simpelweg aan het
einde van het kernel commando. We hebben nu al een optie toegevoegd
(<c>root=/dev/hda3</c> of <c>real_root=/dev/hda3</c>), maar je kunt ook andere
argumenten meegeven, zoals voor de eerder besproken framebuffer kun je de
<c>video</c> en/of <c>vga</c> argumenten toevoegen.
</p>

<p>
Als je een een 2.6.7 of nieuwere kernel draait en je hebt je harde schrijf
gejumperd omdat je BIOS geen grote harde schijven aankan, dien je
<c>hdX=stroke</c> als optie toevoegen.
</p>

<p>
<c>genkernel</c> gebruikers zouden moeten weten dat hun kernels dezelfde boot
opties gebruiken als de Installatie CD gebruikt. Bijvoorbeeld, als je SCSI
apparaten hebt, moet je <c>doscsi</c> als kernel optie toevoegen.
</p>

<p>
Sla nu je <path>grub.conf</path> bestand op en sluit af. Nu moeten we nog wel
GRUB in de MBR (Master Boot Record) installeren zodat hij daadwerkelijk start.
</p>

<p>
De GRUB ontwikkelaars raden het gebruik van <c>grub-install</c> aan. Als echter
<c>grub-install</c> mislukt, zijn er nog steeds mogelijkheden om het handmatig
te doen.
</p>

<p>
Ga verder met <uri link="#grub-install-auto">Standaard: GRUB installeren met
grub-install</uri> of <uri link="#grub-install-manual">Alternatief: GRUB
handmatig installeren</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Standaard: GRUB installeren met grub-install</title>
<body>

<p>
Om GRUB te installeren, moet je het commando <c>grub-install</c> gebruiken.
<c>grub-install</c> zal echter niet direct werken omdat we in een chroot zitten.
We zullen eerst <path>/etc/mtab</path> (het bestand met de informatie over alle
gemounte filesystems) moeten updaten. Gelukkig is er een makkelijke manier om
dit te doen: copier gewoon <path>/proc/mounts</path> naar
<path>/etc/mtab</path>:
</p>

<pre caption="/etc/mtab updaten">
# <i>cp /proc/mounts /etc/mtab</i>
</pre>

<p>
Nu kunnen we GRUB installeren met behulp van <c>grub-install</c>:
</p>

<pre caption="grub-install draaien">
# <i>grub-install --root-directory=/boot /dev/hda</i>
</pre>

<p>
Als je verder nog vragen hebt over GRUB, lees dan de <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> (EN) of de
<uri link="http://www.gnu.org/software/grub/manual/">GRUB Handleiding</uri>(EN).
</p>

<note>
Als je je kernel opnieuw installeert, hoef je niet alle bestanden opnieuw te
kopi√´ren. Draai gewoon <c>make install</c> nadat je je kernel hebt gecompileerd;
hij zal dan automatisch de benodigde bestanden kopi√´ren en de GRUB confiuratie
aanpassen.
</note>

<p>
Ga verder met <uri link="#reboot">Het systeem herstarten</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Alternatief: GRUB handmatig installeren</title>
<body>

<p>
Om de configuratie van GRUB te starten, type je <c>grub</c> in. Je zult begroet
worden met de <path>grub&gt;</path> grub command-line prompt. Nu moet je de
commandos handmatig intypen om GRUB in je MBR te krijgen.
</p>

<pre caption="De GRUB shell starten">
# <i>grub</i>
</pre>

<note>
Als je systeem geen floppy drive heeft, voeg de <c>--no-floppy</c> optie toe
aan het bovenstaande commando zodat grub niet gaat zoeken naar (niet bestaande)
floppy drives.
</note>

<p>
In de voorbeeld configuratie willen we GRUB zo installeren zodat hij zijn
informatie leest vanaf de boot partitie <path>/dev/hda1</path>, en dat hij de
GRUB boot record op de MBR van de harde schijf zet zodat het eerste wat we zien
als de computer opstart GRUB is. Als je niet de voorbeelden hebt gevolgd, zorg
wel dat je dan de commandos daarop aanpast.
</p>

<p>
Het tab aanvullings mechaniste van GRUB kan worden gebruiken binnen in GRUB.
Bijvoorbeeld, als je "<c>root (</c>" typt, gevold door een TAB, zul je een lijst
met apparaten (zoals <path>hd0</path>) terugkrijgen. Als je 
"<path>root (hd0,</path>" intypt, gevolgd door een TAB zul je een lijst krijgen
met beschikbare partities (zoals <path>hd0,0</path>).
</p>

<p>
Nu met behulp van tab aanvulling, zou GRUB installeren niet zo moeilijk
moeten zijn. Ga nu verder, configureer GRUB, zullen we? :-)
</p>

<pre caption="GRUB in de MBR installeren">
grub&gt; <i>root (hd0,0)</i>          <comment>(Geef op waar je /boot partitie is)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Installeer GRUB in de MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Verlaat de GRUB shell)</comment>
</pre>

<note>
Als je GRUB op een bepaalde partitie wil installeren in plaats van de MBR, dan
zul je het <c>setup</c> commando aan moeten passen zodat hij naar de juiste
partitie verwijst. Bijvoorbeeld, als je GRUB wil installeren in
<path>/dev/hda3</path>, dan zal het commando er zo uit ziet:
<c>setup (hd0,2)</c>. Er zullen maar heel weinig gebruikers dit willen doen.
</note>

<p>
Als je verder nog vragen hebt over GRUB, lees dan de <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri> (EN) of de
<uri link="http://www.gnu.org/software/grub/manual/">GRUB Handleiding</uri>(EN).
</p>

<p>
Ga verder met <uri link="#reboot">Het systeem herstarten</uri>.
</p>

</body>
</subsection>
</section>
<section id="lilo">
<title>Alternatief: LILO gebruiken</title>
<subsection>
<title>LILO installeren</title>
<body>

<p>
LILO, de LInuxLOader, is het geteste en echte werkpaard van de Linux
bootloaders. Helaas mist het enkele mogelijkheden die GRUB wel heeft (en wat de
reden is dat GRUB nu veel aan populariteit wint). De reden dat LILO nog steeds
gebruikt wordt, is dat GRUB soms niet werkt en LILO wel. Natuurlijk zijn er ook
mensen die LILO kennen en daarom niet over willen stappen. Hoe dan ook, Gentoo
ondersteunt beide, en blijkbaar heb jij gekozen om LILO te gebruiken.
</p>

<p>
LILO installeren is een eitje; gebruik gewoon <c>emerge</c>.
</p>

<pre caption="LILO installeren">
# <i>emerge --usepkg lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>LILO configureren</title>
<body>

<p>
Om LILO te configureren moet je <path>/etc/lilo.conf</path> aanmaken. Start je
favoriete editor (in dit handboek gebruiken we <c>nano</c> voor continuiteit)
en maak het bestand.
</p>

<pre caption="/etc/lilo.conf aanmaken">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Enkele secties geleden hebben we je gevraagd de naam van het door jou gemaakte
kernel-image naam te onthouden. In het volgende voorbeeld
<path>lilo.conf</path> nemen we aan dat het
<path>kernel-2.6.11-gentoo-r3</path> is. We gebruiken hier ook het voorbeeld
partitioneringsschema. Er zijn twee verschillende delen:
</p>

<ul>
  <li>
    Een voor diegene die geen <c>genkernel</c> hebben gebruikt voor hun kernel
  </li>
  <li>
    Een voor diegene die wel <c>genkernel</c> hebben gebruikt voor hun kernel
  </li>
</ul>

<p>
Zorg dat je <e>jouw</e> kernel image bestandsnaam en, indien van toepassing,
<e>jouw</e> initrd images bestandsnaam gebruikt.
</p>

<note>
Als je root filesystem JFS is, <e>moet</e> "ro" aan de <c>kernel</c> regel
toevoegen. Hier door kan JFS zijn log naspelen voordat hij schrijven toelaat.
</note>

<pre caption="Voorbeeld /etc/lilo.conf">
boot=/dev/hda             <comment># Installeer LILO in de MBR</comment>
prompt                    <comment># Geef de gebruiker de kans een andere keuze te maken</comment>
timeout=50                <comment># Wacht 5 (vijf) seconden voor het booten van de standaard keuze</comment>
default=gentoo            <comment># Als de timeout voobij is, boot de "gentoo" keuze</comment>

<comment># Voor niet-genkernel gebruikers</comment>
image=/boot/kernel-2.6.11-gentoo-r3
  label=gentoo            <comment># De naam die we deze keuze geven</comment>
  read-only               <comment># Start met een read-only root. Pas niet dit niet aan!</comment>
  root=/dev/hda3          <comment># Plaats van het root filesystem</comment>

<comment># Voor genkernel gebruikers</comment>
image=/boot/kernel-2.6.11-gentoo-r3
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev"
  initrd=/boot/initrd-2.6.11-gentoo-r3

<comment># De volgende twee regels zijn alleen voor dual-boot gebruikers met een Windows systeem.</comment>
<comment># In dit geval, Windows is geinstalleerd op /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Het <c>udev</c> aan het einde van de kernel regel is nodig om langs een bug in
enkele genkernel versies te werken. DIt is alleen nodig <e>als</e> je udev
gebruikt (wat standaard is).
</note>

<note>
Als je echter een ander partitioneringsschema en/of kernel image gebruikt, pas
dit dan gepast aan.
</note>

<p>
Als je nog andere opties moet toevoegen aan de kernel, voeg <c>append</c> toe
aam de sectie. Als voorbeeld zullen we het <c>video</c> argument toevoegen
zodat we framebuffer kunnen gebruiken:
</p>

<pre caption="append gebruiken om kernel opties toe te voegen">
image=/boot/kernel-2.6.11-gentoo-r3
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="video=vesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
Als je een een 2.6.7 of nieuwere kernel draait en je hebt je harde schrijf
gejumperd omdat je BIOS geen grote harde schijven aankan, moet je
<c>hdX=stroke</c> als optie toevoegen.
</p>

<p>
<c>genkernel</c> gebruikers zouden moeten weten dat hun kernels dezelfde boot
opties gebruiken als de Installatie CD gebruikt. Bijvoorbeeld, als je SCSI
apparaten hebt, moet je <c>doscsi</c> als kernel optie toevoegen.
</p>

<p>
Sla nu het bestand op en sluit af. Om het nog af te maken, moet je
<c>/sbin/lilo</c> nog starten zodat LILO <path>/etc/lilo.conf</path> kan
toepassen op je systeem (zoals zichzelf installeren op de schijf). Onthoud dat
je <c>/sbin/lilo</c> opnieuw moet starten als je een nieuwe kernel installeert
of het menu van LILO verandert.
</p>

<pre caption="De LILO installatie afmaken">
# <i>/sbin/lilo</i>
</pre>

<note>
Als je je kernel opnieuw installeert, hoef je niet alle bestanden opnieuw te
kopi√´ren. Draai gewoon <c>make install</c> nadat je je kernel hebt gecompileerd;
hij zal dan automatisch de benodigde bestanden kopi√´ren en de LILO confiuratie
aanpassen.
</note>

<p>
Je kunt nu verder gaan met <uri link="#reboot">Het systeem herstarten</uri>.
</p>

</body>
</subsection>
</section>
<section id="reboot">
<title>Het systeem herstarten</title>
<subsection>
<body>

<p>
Verlaat de chroot en unmount alle gemounte partities. Typ dan het magische
commando waar je op hebt gewacht: <c>reboot</c>.
</p>

<pre caption="Unmount alle partitis en reboot">
# <i>exit</i>
# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
# <i>reboot</i>
</pre>

<p>
Vergeet natuurlijk niet je opstartbare CD er uit te halen, anders start je CD
op in plaats van je verse Gentoo systeem.
</p>

<p>
Eenmaal opnieuw opgestart en in je Gentoo installatie, ga verder met <uri
link="?part=1&amp;chap=11">De Gentoo installatie afmaken</uri>.
</p>

</body>
</subsection>
</section>
</sections>
