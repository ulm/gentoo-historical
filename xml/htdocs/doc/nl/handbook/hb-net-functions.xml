<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Id: hb-net-functions.xml,v 1.2 2006/09/01 17:34:09 neysx Exp $ -->

<sections>

<version>7.0</version>
<date>2006-08-30</date>

<section>
<title>Standaard functies en hun mogelijkheden</title>
<body>

<p>
Er kunnen vier functies rondom <c>start</c> en <c>stop</c> worden
aangeroepen. Deze functies worden aangeroepen met een verwijzing naar een
interface naam, zo kunt u meedere adapters aansturen met één functie.
</p>

<p>
Zowel <c>preup()</c> als <c>predown()</c> geven de waarde 0 als resultaat
wanneer ze hun werk goed hebben gedaan. Het instellen van de interface kan
dan verder gaan. Als <c>preup()</c> een andere waarde dan nul als resultaat
heeft, wordt het instellen van de interface gestopt. Als dit bij
<c>predown</c> gebeurt wordt het uitschakelen van de interface gestopt.
</p>

<p>
De resultaten die <c>postup()</c> en <c>postdown()</c> geven worden genegeerd
omdat met deze informatie niets kan worden gedaan.
</p>

<p>
<c>${IFACE}</c> is wordt ingesteld op de interface die u wilt starten.
<c>${IFVAR}</c> is de waarde van <c>${IFACE}</c>, maar dan in een formaat dat
bash kan gebruiken.
</p>

<pre caption="Voorbeelden van pre/post up/down functies">
preup() {
  <comment># Probeer eerst een verbinding te maken voor deze wordt vastgelegd.
  # Dit werkt niet voor alle adapters en heeft het pakket mii-diag nodig
  # om gebruikt te kunnen worden.</comment>
  if mii-tool ${IFACE} 2> /dev/null | grep -q 'no link'; then
    ewarn "No link on ${IFACE}, aborting configuration"
    return 1
  fi

  <comment># Probeer eerst een verbinding te maken voor deze wordt vastgelegd.
  # Dit werkt niet voor alle adapters en heeft het pakket ethtool nodig om
  # gebruikt te kunnen worden.</comment>
  if ethtool ${IFACE} | grep -q 'Link detected: no'; then
    ewarn "No link on ${IFACE}, aborting configuration"
    return 1
  fi

  <comment># Vergeet niet om een 0 als resultaat door te sturen indien succesvol</comment>
  return 0
}

predown() {
  <comment># Standaard wordt getest of de root op een NFS bestandssysteem staat en
  # mogen de interfaces niet stoppen als dat zo is. Wanneer u de functie
  # predown() instelt is deze standaard overschreven. Hier is de code, voor
  # als u die nog steeds wilt gebruiken...</comment>
  if is_net_fs /; then
    eerror "root filesystem is network mounted -- can't stop ${IFACE}"
    return 1
  fi

  <comment># Vergeet niet om een 0 als resultaat door te sturen indien succesvol</comment>
  return 0
}

postup() {
  <comment># Deze functie kunt u onder ander gebruiken om contact te maken met een
  # dynamic DNS service. Een ander mogelijkheid zou zijn om email te
  # verzenden/ontvangen zodra de interface is gestart.</comment>
       return 0
}

postdown() {
  <comment># Deze functie staat hier om de handleiding compleet te houden, maar
  # we hebben er nog geen mogelijkheden bij bedacht ;-)</comment>
  return 0
}
</pre>

</body>
</section>
<section>
<title>Wireless Tools functies en hun mogelijkheden</title>
<body>

<note>
Het onderstaande werkt niet met WPA Supplicant - maar de variabelen 
<c>${ESSID}</c> en <c>${ESSIDVAR}</c> wel beschikbaar voor <c>postup()</c>.
</note>

<p>
De twee onderstaande functies ondersteuning de functie associate. De functies
roepen een interface aan en u kunt zodoende meerdere interfaces met één
functie aansturen.
</p>

<p>
De functie <c>preassociate()</c> geeft een 0 als resultaat wanneer alles werkt.
Het instellen van de interface kan dan verder gaan. Indien
<c>preassociate()</c> een andere waarde dan 0 als resultaat geeft, kan het
instellen van de interface niet verder gaan.
</p>

<p>
Het resultaat van de functie <c>postassociate()</c> wordt weer genegeerd, omdat
u niets hoeft te doen indien de functie niet werkt.
</p>

<p>
<c>${ESSID}</c> wordt ingesteld op de exacte ESSID van het access poaint waar u
verbinding mee wilt maken. <c>${ESSIDVAR}</c> is de variabele <c>${ESSID}</c>,
maar dan bruikbaar gemaakt voor bash.
</p>

<pre caption="pre/post association functions">
preassociate() {
  <comment># Het onderstaande voorbeeld voegt twee variabelen toe, leap_user_ESSID
  # en leap_pass_ESSID. Als deze zijn ingesteld voor uw ESSID, wordt het script
  # CISCO LEAP gedraaid.</comment>

  local user pass
  eval user=\"\$\{leap_user_${ESSIDVAR}\}\"
  eval pass=\"\$\{leap_pass_${ESSIDVAR}\}\"

  if [[ -n ${user} &amp;&amp; -n ${pass} ]]; then
    if [[ ! -x /opt/cisco/bin/leapscript ]]; then
      eend "For LEAP support, please emerge net-misc/cisco-aironet-client-utils"
      return 1
    fi
    einfo "Waiting for LEAP Authentication on \"${ESSID//\\\\//}\""
    if /opt/cisco/bin/leapscript ${user} ${pass} | grep -q 'Login incorrect'; then
      ewarn "Login Failed for ${user}"
      return 1
    fi
  fi

  return 0
}

postassociate() {
  <comment># Deze functie staat hier om de handleiding compleet te houden, maar
  # we hebben er nog geen mogelijkheden bij bedacht ;-)</comment>
  return 0
}
</pre>

<note>
<c>${ESSID}</c> en <c>${ESSIDVAR}</c> zijn niet te gebruiken in de functies 
<c>predown()</c> en <c>postdown()</c>.
</note>

</body>
</section>

</sections>
