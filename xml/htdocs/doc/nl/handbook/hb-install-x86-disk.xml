<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/handbook/hb-install-x86-disk.xml,v 1.8 2005/04/07 22:12:06 neysx Exp $ -->

<sections>

<version>2.1</version> 
<date>2005-03-28</date>

<section>
<title>Introductie van Block Devices</title>
<subsection>
<title>Block Devices</title>
<body>

<p>
We bekijken de schijf gedeeltes van Gentoo Linux en Linux in het algemeen,
Inclusief Linux filesystems, partities en block devices.
Dan, als je bekend bent met de ins en outs van schijven en filesystems, leiden
we je door het proces van het opzetten van partities en filesystems voor je
Gentoo Linux Installatie
</p>

<p>
Om te beginnen, zullen we <e>block devices</e> introduceren. Het meest bekende
block device is waarschijnlijk die van de eerste IDE schijf in een Linux
systeem, namelijk <path>/dev/hda</path>. Als je systeem SCSI of SATA schijven
gebruikt, dan zal je eerste harde schijf <path>/dev/sda</path> zijn.
</p>

<p>
De hierboven genoemde block devices stellen een abstracte interface naar de
schijf voor. Programmas kunnen deze block devices gebruiken om te communiceren
met de schijf zonder zich zorgen te hoeven maken of het een IDE, SCSI of iets
anders is. Het programma kan simpelweg de ruimte als een boel aangrenzende,
willekeurig te bereiken 512-byte blokken gebruiken.
</p>

</body>
</subsection>
<subsection>
<title>Partities</title>
<body>

<p>
Hoewel het theoretisch mogelijk is om een volledige schijf te gebruiken voor
je Linux systeem, wordt dit in de praktijk zelden gedaan. In plaats daarvan
worden ze opgesplitst in kleinere, makkelijker te beheren block devices. Op
x86 systemen, noemen we deze <e>partities</e>.
</p>

<p>
Partities worden in drie types opgedeeld:
<e>primary</e> (primaire), <e>extended</e> (uitgebreide) en <e>logical</e>
(logisch).
</p>

<p>
Een <e>primaire</e> partitie is een partitie die zijn informatie opslaat in
de MBR (master boot record). Omdat een MBR erg klein is (512 bytes) kunnen
er slechts 4 primaire partities worden gebruikt (bijvoorbeeld, 
<path>/dev/hda1</path> tot <path>/dev/hda4</path>).
</p>

<p>
Een <e>uitgebreide</e> partitie is een speciale primare partitie (deze moet dus
een van de primaire partities zijn) die meerdere parties kan bevatten.
Oorspronkelijk bestonden deze niet, maar omdat vier partities te weinig waren,
breidde men het formatteringsschema uit zonder backward compatibility
te verliezen.
</p>

<p>
Een <e>logische</e> partitie is een partitie binnen de extended partitie. Hun
definities worden niet in de MBR gezet, maar binnen in de extended partitie.
</p>

</body>
</subsection>
<subsection>
<title>Geadvanceerde Opslag</title>
<body>

<p>
De x86 Installatie CDs bieden ondersteuning voor EVMS en LVM2. EVMS en LVM2
vergroten de flexibiliteit van je partitie indeling. Tijdens de installatie
instructies, zullen we ons richten op "normale" partities, maar het is goed
om te weten dat EVMS en LVM ook ondersteund worden.
</p>

</body>
</subsection>
</section>
<section>
<title>Een partitie schema ontwerpen</title>
<subsection>
<title>Standaard Partitie Schema</title>
<body>

<p>
Als je niet geinteresseerd bent in een partitie schema te tekenen voor je
systeem, dan kun je het partitie schema gebruiken wat we in dit boek gebruiken:
</p>

<table>
<tr>
  <th>Partitie</th>
  <th>Filesystem</th>
  <th>Grootte</th>
  <th>Beschrijving</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>ext2</ti>
  <ti>32M</ti>
  <ti>Boot partitie</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Swap partitie</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>ext3</ti>
  <ti>Rest van de schijf</ti>
  <ti>Root partitie</ti>
</tr>
</table>

<p>
Als je wel wilt weten hoe groot een partitie moet zijn, of zelfs hoeveel
partities je nodig hebt, lees dan door. Zo niet, dan kun je doorgaan met
partitioneren van je schijf door het lezen van <uri link="#fdisk">fdisk
gebruiken om je schijf te partitioneren</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Hoeveel en hoe groot?</title>
<body>

<p>
Het aantal partities hangt zeer sterk af van je omgeving. Bijvoorbeeld, als je
een heleboel gebruikers hebt, wil je waarschijnlijk je <path>/home</path>
gescheiden houden omdat het ten goede komt van je snelheid en veiligheid en
backups maken is een stuk makkelijker.
Als je Gentoo installeert als een mailserver, zou je <path>/var</path>
gescheiden moeten zijn omdat al je mails in <path>/var</path> staan.
Een goede keuze van je filesystem zal je snelheid flink verhogen.
Gameservers zullen een aparte <path>/opt</path> hebben omdat de meeste
gameservers daar geinstalleerd worden, vanwege dezelfde redenen als bij
<path>/home></path>: veiligheid en backups.
</p>

<p>
Zoals je kan zien, hangt het sterk af van je doel. Gescheiden partities of
volumes hebben de volgende voordelen:
</p>

<ul>
<li>
  Je kan het best presterende filesystem kiezen voor iedere partite of volume
</li>
<li>
  Je totale systeem kan niet vol zitten als een tool constant files naar
  een partitie of volume probeert te schrijven
</li>
<li>
  Zo nodig, file system controles worden beperkt in tijd, omdat meerdere
  controles paralel kunnen worden uitgevoerd (hoewel dit voordeel vooral geldt
  bij meerdere schijven dan meerdere partities)
</li>
<li>
  Veiligheid kan worden verbeterd door het mounten van enkele partities of
  volumes alleen-lezen, nosuid (setuid bits worden genegeerd), noexec
  (uitvoerbare bits worden genegeerd) etc.
</li>
</ul>

<p>
Hoewel, meerdere partities hebben een groot nadeel: indien niet goed ingesteld,
kun je een systeem krijgen met veel vrije ruimte op de ene en niets op de
andere. Ook is er een 15-partities limiet voor SCSI en SATA.
</p>

<p>
Als een voorbeeld van partitioneren, zullen we je laten zien hoe je een
20Gb schijf die wordt gebruikt als een demonstratie laptop (met webserver,
mailserver, gnome, ...) partitioneert:
</p>

<pre caption="Voorbeeld filesystem gebruik">
$ <i>df -h</i>
Filesystem    Type    Size  Used Avail Use% Mounted on
/dev/hda5     ext3    509M  132M  351M  28% /
/dev/hda2     ext3    5.0G  3.0G  1.8G  63% /home
/dev/hda7     ext3    7.9G  6.2G  1.3G  83% /usr
/dev/hda8     ext3   1011M  483M  477M  51% /opt
/dev/hda9     ext3    2.0G  607M  1.3G  32% /var
/dev/hda1     ext2     51M   17M   31M  36% /boot
/dev/hda6     swap    516M   12M  504M   2% &lt;niet gemount&gt;
<comment>(Ongepartioneerde ruimte voor toekomstig gebruik: 2 Gb)</comment>
</pre>

<p>
<path>/usr</path> is hier redelijk vol (83% gebruikt), maar als
alle software is geinstalleerd, groeit <path>/usr</path> niet meer zo veel.
Mensen denken misschien dat <path>/var</path> te groot is, maar Gentoo
compileert alle programmas in <path>/var/tmp/portage</path>, dus moet je
altijd op <path>/var</path> ten minste 1G vrije ruimte hebben als je niet te
grote programmas compileert en ten minste 3G vrij als je KDE of OpenOffice.org
zelf wil compileren.
</p>

</body>
</subsection>
</section>
<section id="fdisk">
<title>fdisk gebruiken om je schijf te partitioneren</title>
<subsection>
<body>

<p>
Het volgende deel beschrijft hoe je de eerder beschreven voorbeeld
ontwerp moet maken, namelijk:
</p>

<table>
<tr>
  <th>Partitie</th>
  <th>beschrijving</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>Boot partitie</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>Swap partitie</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti>Root partitie</ti>
</tr>
</table>

<p>
Verander je partitie ontwerp zoals je zelf wil.
</p>

</body>
</subsection>
<subsection>
<title>Het huidige partitie ontwerp bekijken</title>
<body>

<p>
<c>fdisk</c> is een populaire en krachtige tool om je schijf op te delen
in partities. Start <c>fdisk</c> op je schijf (in ons voorbeeld is dat
<path>/dev/hda</path>):
</p>

<pre caption="Fdisk starten">
# <i>fdisk /dev/hda</i>
</pre>

<p>
Eenmaal in <c>fdisk</c>, zul je begroet worden door een prompt als deze:
</p>

<pre caption="fdisk prompt">
Command (m for help): 
</pre>

<p>
Type <c>p</c> om je huidige partitie configuratie te zien:
</p>

<pre caption="Een voorbeel partitie configuratie">
Command (m for help): <i>p</i>

Disk /dev/hda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1             1        14    105808+  83  Linux
/dev/hda2            15        49    264600   82  Linux swap
/dev/hda3            50        70    158760   83  Linux
/dev/hda4            71      2184  15981840    5  Extended
/dev/hda5            71       209   1050808+  83  Linux
/dev/hda6           210       348   1050808+  83  Linux
/dev/hda7           349       626   2101648+  83  Linux
/dev/hda8           627       904   2101648+  83  Linux
/dev/hda9           905      2184   9676768+  83  Linux

Command (m for help): 
</pre>

<p>
Deze schijf is geconfigureerd om zeven Linux filesystems (elke met een
partitie opgegeven als "Linux") en een swap partitie (opgegeven als
"Linux swap").
</p>

</body>
</subsection>
<subsection>
<title>Alle Partities verwijderen</title>
<body>

<p>
Om te beginnen zullen we eerst alle bestaande partities van de schijf
verwijderen. Type <c>d</c> om een partitie te verwijderen, bijvoorbeeld een
reeds bestaande <path>/dev/hda1</path>:
</p>

<pre caption="Een partitie verwijderen">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
De partitie is nu gemarkeerd om te verwijderen. Hij zal niet langer te
voorschijn komen als je <c>p</c> typt, maar hij zal niet verwijderd worden tot
je de veranderingen opslaat. Als je een fout hebt gemaakt en wil stoppen
zonder je veranderingen op te slaan, type onmiddelijk <c>q</c> en druk op
enter. Je partitie zal niet worden verwijderd.
</p>

<p>
Nu, er van uit gaande dat je inderdaad je partitie wil verwijderen, type
herhaaldelijk <c>p</c> om de partities te zien en daarna <c>d</c> met het
nummer dat je wil verwijderen. Uiteindelijk zul je eindigen met een lege
partitie tabel:
</p>

<pre caption="Een lege partitie tabel">
Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System

Command (m for help):
</pre>

<p>
Nu de partitie tabel in het geheugen leeg is, zijn we klaar om de partities
te maken. We zullen een standaard partitie schema gebruiken zoals eerder
besproken is. Natuurlijk ben je niet verplicht deze te volgen!
</p>

</body>
</subsection>
<subsection>
<title>De boot partitie maken</title>
<body>

<p>
Eerst zullen we een kleine boot partitie maken. Type <c>n</c> om een nieuwe
partitie te maken, daarna <c>p</c> om een primaire partitie te selecteren,
gevolgd door een <c>1</c> om de eerste primaire partitie te selecteren.
Als je gevraagd wordt om de eerste cylinder, druk op enter. Als ze om de
laatste cylinder vragen, type <c>+32M</c> om een partitie van 32 Mbyte te maken:
</p>

<pre caption="De boot partitie maken">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First cylinder (1-3876, default 1): <comment>(Druk op Enter)</comment>
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-3876, default 3876): <i>+32M</i>
</pre>

<p>
Nu, als je <c>p</c> typt, zou je de volgende partitie printout moeten zien:
</p>

<pre caption="Gecreerde boot partitie">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1          1        14    105808+  83  Linux
</pre>

<p>
Deze partitie moet opstartbaar zijn. Type <c>a</c> om opstartbaar aan of uit
te zetten. Kies hierbij <c>1</c>. Als je nu weer <c>p</c> indrukt, zul je zien
dat een <path>*</path> in de "Boot" colom staat.
</p>

</body>
</subsection>
<subsection>
<title>De swap partitie maken</title>
<body>

<p>
Laten we nu de swap partitie maken. Om dit te doen, type <c>n</c> om een nieuwe
partitie te maken, daarna <c>p</c> om fdisk te vertellen dat je een nieuwe
primaire partitie wil. Daarna type je <c>2</c> om de tweede primaire partitie
te maken, <path>/dev/hda2</path> in ons geval. Als hij vraagt om de eerste
cylinder, druk op enter. Als hij vraagt om de laatste cylinder, type
<c>+512M</c> om een partitie van 512MB te maken. Als je dit gedaan hebt, type
<c>t</c> om het partitie type in te stellen, <c>2</c> om de net gemaakte
partitie te selecteren en type <c>82</c> om het type "Linux swap" te kiezen.
Na deze stappen, zou <c>p</c> de partitie tabel moeten laten zien die er zo
uit ziet:
</p>

<pre caption="Partitie lijst na het maken van een swap partitie">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
</pre>

</body>
</subsection>
<subsection>
<title>De Root Partitie maken</title>
<body>

<p>
Eindelijk, laten we nu de root partitie maken. Om dit te doen, type <c>n</c>
om weer een nieuwe partitie te maken, daarna <c>p</c> om fdisk te vertellen dat
je een primaire partitie wil. Type daarna <c>3</c> om een derde primaire
partitie te maken, <path>/dev/hda3</path> in ons geval. Als gevraagd wordt om
de eerste cylinder, druk op enter. Daarna vraagt hij om de laatste cylinder,
druk wederom op enter om een partitie te maken die de schijf verder vult. Na
deze stappen, zou <c>p</c> in typen een partite tabel moeten geven die er zo
uit ziet:
</p>

<pre caption="Partitie lijst na het maken van de root partitie">
Command (m for help): <i>p</i>

Disk /dev/hda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/hda1 *        1        14    105808+  83  Linux
/dev/hda2         15        81    506520   82  Linux swap
/dev/hda3         82      3876  28690200   83  Linux
</pre>


</body>
</subsection>
<subsection>
<title>Het partitie ontwerp opslaan</title>
<body>

<p>
Om de partitie tabel op te slaan en <c>fdisk</c> af te sluiten, type <c>w</c>.
</p>

<pre caption="Opslaan en fdisk afsluiten">
Command (m for help): <i>w</i>
</pre>

<p>
Nu je partities gemaakt zijn, kun je doorgaan met <uri
link="#filesystems">Filesystems maken</uri>.
</p>

</body>
</subsection>
</section>
<section id="filesystems">
<title>Filesystems maken</title>
<subsection>
<title>Introductie</title>
<body>

<p>
Nu je partities gemaakt zijn, is het tijd om een filesystem er op te zetten.
Als het je niet interesseert wat voor filesystem je moet kiezen en tevreden
bent met wat we als standaard kiezen in dit handboek, ga verder met <uri
link="#filesystems-apply">Filesystems toepassen op een partitie</uri>
Als het je wel interesseert, lees dan verder...
</p>

</body>
</subsection>
<subsection>
<title>Filesystems?</title>
<body>

<p>
De Linux kernel ondersteunt verschillende filesystems. We zullen ext2, ext3,
ReiserFS, XFS en JFS uitleggen omdat deze het meest gebruikt worden op Linux
systemen.
</p>

<p>
<b>ext2</b> is een getest en echt Linux filesystem maar heeft geen metadata
journaling, wat betekent dat routine ext2 filesystem controles redelijk veel
tijd kunnen kosten. Er is nu een redelijke selectie van nieuwere journaled
filesystems die zeer snel gecontroleerd kunnen worden en dus worden verkozen
boven hun niet-journaled tegenstanders. Journaled filesystems voorkomen lange
vertragingen als je opstart en je een inconsistent filesystem hebt.
</p>

<p>
<b>ext3</b> is de journaled versie van het ext2 filesystem. Het heeft metadata
journaling voor een snel herstel naast anere uitgebreide journaling modes zoals
<c>full data</c> en <c>ordered</c> data journaling. ext3 is een zeer goed en
betrouwbaar filesystem. Het heeft extra <c>hashed b-tree index</c> optie die
hoge performance biedt in bijna iedere situatie. In het kort, ext3 is een
geweldig filesystem.
</p>

<p>
<b>ReiserFS</b> is een B*-boom gebaseerd filesystem welke een zeer goede
performance heeft. Verder veslaat hij ext2 en ext3 met factor 10x-15x bij
kleine bestanden (kleinder dan 4k). ReiserFS schaalt extreem goed en heeft
metadata journaling. Sinds kernel 2.4.18+ is ReiserFS bruikbaar voor algemeen
gebruik en voor extreme gevallen zoals grote filesystems, gebruik van veel
kleine bestanden, zeer grote bestanden en directories die duizenden bestanden
bevatten.
</p>

<p>
<b>XFS</b> is een filesystem met metadata journaling die met een robuste
feature-set komt en geoptimaliseerd is voor schaalbaarheid. We raden dit
alleen aan op Linux systemen met high-end SCSI en/of fibre channel opslag
en een UPS (Uninterruptible Power Supply) omdat XFS aggressief in-transit
data cacht in het geheugen. Slecht ontworpen programmas (die geen goede
voorbereidingen nemen bij het schrijven van bestanden naar de schijf en
daar zijn er redelijk veel van) kunnen een redelijk deel aan data verliezen
als het systeem onverwacht down gaat.
</p>

<p>
<b>JFS</b> is IBM's high-performance journaling filesystem. Het is recent
productie-klaar geworden en er is nog niet genoeg ervaring mee om er iets
(positief, noch negatief) over te zeggen.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Een filesystem toepassen op een partitie</title>
<body>

<p>
Om een filesystem op een partitie of volume te maken, zijn er tools beschikbaar
voor elk mogelijk filesystem:
</p>

<table>
<tr>
  <th>Filesystem</th>
  <th>Commando om te maken</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Bijvoorbeeld, om van de boot partitie (<path>/dev/hda1</path> in ons geval)
ext2 te maken en de root partitie (<path>/dev/hda3</path> in ons geval) ext3
te maken, zou je dit gebruiken:
</p>

<pre caption="Een filesystem toepassen op een partitie">
# <i>mke2fs /dev/hda1</i>
# <i>mke2fs -j /dev/hda3</i>
</pre>

<p>
Maak nu de filesystems op je vers gemaakte partities (of logische volumes)
</p>

</body>
</subsection>
<subsection>
<title>De swap partitie activeren</title>
<body>

<p>
<c>mkswap</c> is het commando dat gebruikt wordt om swap partities te
initializeren:
</p>

<pre caption="De swap partitie initializeren">
# <i>mkswap /dev/hda2</i>
</pre>

<p>
Om de swap partitie te gebruiken, gebruik <c>swapon</c>:
</p>

<pre caption="Activeer de swap partitie">
# <i>swapon /dev/hda2</i>
</pre>

<p>
Maak en activeer met behulp van de bovenstaande commandos de swap nu.
</p>

</body>
</subsection>
</section>
<section>
<title>Mounten</title>
<body>

<p>
Nu onze partities gemaakt zijn en een filesystem bevatten, is het tijd ze te
mounten. Gebruik het <c>mount</c> commando. Vergeet niet om de benodigde map
te maken waar je ze wil mounten. Als een voorbeeld mounten we de root en boot
partities:
</p>

<warn>
Door een bug in het e2fsprogs-pakket, dien je expliciet de <c>mount -t ext3</c>
te gebruiken indien je een ext3 filesystem gebruikt.
</warn>

<pre caption="De partities mounten">
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>

<note>
Als je je <path>/tmp</path> op een aparte partitie wil,
zorg dat de rechten goed staan na het mounten: 
<c>chmod 1777 /mnt/gentoo/tmp</c>. Dit geld ook voor <path>/var/tmp</path>.
</note>

<p>
We zullen ook een proc filesystem (een virtuele interface met de kernel)
moeten mounten op <path>/proc</path>. Maar eerst moeten we onze bestanden op
de partities plaatsen.
</p>

<p>
Ga verder met <uri link="?part=1&amp;chap=5">Installeren van de Gentoo
Installatie bestanden</uri>.
</p>

</body>
</section>
</sections>
