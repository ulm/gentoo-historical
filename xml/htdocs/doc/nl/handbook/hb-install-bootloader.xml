<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/handbook/Attic/hb-install-bootloader.xml,v 1.2 2004/09/26 10:40:47 neysx Exp $ -->

<sections>
<section>
<!--<title>Making your Choice</title>-->
<title>Een keuze maken</title>
<subsection>
<!--<title>Introduction</title>-->
<title>Introductie</title>
<body>

<p>
Nu je kernel is geconfigureerd en gecompiled en de benodigde systeem
configuratie bestanden correct zijn ingevuld, is het tijd om het programma te
installeren dat de kernel aanslingerd wanneer je je systeem start. Zo een
programma noemen we een <e>bootloader</e>. Maar voor we beginnen nemen we eerst
de opties door...
</p>

<p>
Er bestaan verschillende bootloaders voor linux. Echter, deze bootloaders werken
op slechts een deel van de architecturen. Daarom moet je kiezen tussen de
bootloaders die jouw architectuur ondersteunen.
</p>

<p>
De volgende tabel geeft een lijst van alle architecturen en ondersteunde
bootloaders. Kies een bootloader op basis van je architectuur. Bijvoorbeeld, als
je een Pentium IV bezit, dan is je architectuur <e>x86</e>. Je hebt de keuze
tussen GRUB (aangeraden) en LILO.
</p>

<table>
<tr>
  <th>Architectuur</th>
  <th>Aangeraden</th>
  <th>Alternatieven</th>
</tr>
<tr>
  <th>x86</th>
  <ti><uri link="#doc_chap2">GRUB</uri></ti>
  <ti><uri link="#doc_chap3">LILO</uri></ti>
</tr>
<tr>
  <th>alpha</th>
  <ti><uri link="#doc_chap4">aBoot</uri></ti>
  <ti><uri link="#doc_chap5">MILO</uri></ti>
</tr>
<tr>
  <th>sparc</th>
  <ti><uri link="#doc_chap6">SILO</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>ppc</th>
  <ti>
    <uri link="#doc_chap8">yaBoot</uri> (NewWorld), 
    <uri link="#doc_chap9">BootX</uri> (OldWorld)
  </ti>
  <ti></ti>
</tr>
<tr>
  <th>hppa</th>
  <ti><uri link="#doc_chap7">PALO</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>mips</th>
  <ti><uri link="#doc_chap10">MIPS PROM</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>amd64</th>
  <ti><uri link="#doc_chap2">GRUB</uri></ti>
  <ti></ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Optioneel: Frambuffer</title>
<body>

<note>
Deze sectie is alleen toepasselijk op x86, AMD64 en PPC gebruikers die
framebuffer ondersteuning in hun kernel hebben gedaan. Hieronder vallen de
<c>genkernel</c> gebruikers.
</note>

<p>
<e>Als</e> je je kernel met framebuffer ondersteuning hebt geconfigureerd, kan
je een <c>vga</c>-statement aan je bootloader configuratie toevoegen, als je een
framebuffer wilt. De volgende tabel geeft een lijst weer van alle beschikbare
<c>vga</c>-waarden die je kunt gebruiken. In de voorbeeld configuratie bestanden
gebruiken met <e>800x600 @ 16bpp</e>, dus <e>788</e>.
</p>

<table>
<tr>
  <ti></ti><th>640x480</th><th>800x600</th><th>1024x768</th><th>1280x1024</th>
</tr>
<tr>
  <th>8 bpp</th><ti>769</ti><ti>771</ti><ti>773</ti><ti>775</ti>
</tr>
<tr>
  <th>16 bpp</th><ti>785</ti><ti>788</ti><ti>791</ti><ti>794</ti>
</tr>
<tr>
  <th>32 bpp</th><ti>786</ti><ti>789</ti><ti>792</ti><ti>795</ti>
</tr>
</table>

<p>
Onthoud het nummer (of schrijf het op); je hebt het zo direct nodig.
</p>

<p>
Selecteer vervolgens een bootloader naar keuze uit de bovenstaande lijst.
</p>

</body>
</subsection>
</section>
<section>
<title>Standaard: GRUB gebruiken</title>
<subsection>
<title>GRUB's terminalogie begrijpen</title>
<body>

<impo>
GRUB kan alleen gebruimt worden op x86- en AMD64-gebaseerde systemen!
</impo>

<p>
Het meest kritieke punt aan het begrijpen van GRUB is het wennen aan de manier
waarop GRUB refereert naar harde schijven en partities. Je Linux partitie
<path>/dev/hda1</path> heet in GRUB <path>(hd0,0)</path>. Let op de haakjes
rondom <path>hd0,0</path> - deze zijn verplicht.
</p>

<p>
Harde schijven worden geteld vanaf nul in plaats van "a" en partities beginnen
bij nul in plaats van een. Wees je ervan bewust dat enkel de harde schijven
worden geteld, dus niet de atapi-ide apparaten zoals cd-rom spelers en
branders. Dezelfde constructie wordt ook gebruikt voor scsi schijven. (Deze
krijgen meestal een hoger nummer dan ide schijven, tenzij de bios is
geconfigureerd om op te starten van scsi apparaten.)
</p>

<p>
Aangemomen dat je een harde schijf hebt op <path>/dev/hda</path>, een cdrom
speler op <path>/dev/hdb</path>, een brander op <path>/dev/hdc</path>, een
tweede harde schijf op <path>/dev/hdd</path> en geen SCSI harde schijf,
<path>/dev/hdd7</path> vertaald dan naar <path>(hd1,6)</path>. Het lijkt
misschien lastig, en dat is het ook, maar zoals we straks zullen zien biedt GRUB
een tab completion mechanisme aan dat heel handig is voor mensen met veel harde
schijven en partities, en voor mensen die de weg kwijt raden in GRUBs numerings
schema.
</p>

<p>
Nu we hieraan gewend zijn geraakt is het tijd om GRUB te installeren.
</p>

</body>
</subsection>
<subsection>
<title>GRUB Installeren</title>
<body>

<p>
Om GRUB te installeren moeten we het eerst emergen. Gebruikres van de x86
architectuur dienen <c>grub</c> te installeren, AMD64 gebruikers diene
<c>grub-static</c> te installeren:
</p>

<pre caption = "GRUB Installeren">
<comment>(Voor de x86 architectuur:)</comment>
# <i>emerge --usepkg grub</i>

<comment>(Voor de AMD64 architectuur:)</comment>
# <i>emerge --usepkg grub-static</i>
# <i>cp -Rpv /usr/share/grub/i386-pc/* /boot/grub</i>
</pre>

<p>
Om te beginnen met de configuratie van GRUB type je <c>grub</c> in. Je krijgt de
<path>grub&gt;</path> grub commando prompt te zien. Je dient nu de juiste
commandos in te typen om GRUB te installeren op je harde schijf.
</p>

<pre caption = "De GRUB shell starten">
# <i>grub</i>
</pre>

<p>
In de voorbeeld configuratie willen we GRUB zo installeren dat het de benodigde
informatie van de boot partitie haalt <path>/dev/hda1</path>, en de GRUB boot
record in de MBR (master boot record) van de harde schijf installeert. Zodat het
eerste dat we zien na het inschakelen van de computer de GRUB prompt is.
Uiteraard, als je de voorbeeld configuratie niet gevolgt hebt, pas dan de
commandos aan je eigen situatie aan.
</p>

<p>
Het tab completion mechanisme van GRUB kan binnen GRUB gebruikt worden.
Bijvoorbeeld, als je "<c>root(</c>" intypt gevolgd door een TAB, dan krijg je
een lijst te zien van alle apparaten (zoals <path>hd0</path>). Als je typt
"<c>root (hd0,</c>" gevolgd door een TAB, dan krijg je een lijst te zien van
alle beschikbare partitions (zoals <path>hd0,0</path>).
</p>

<p>
Door tab completion te gebruiken wordt het installeren van GRUB een stuk
makkelijker. Mu, laten we GRUB eens gaan installeren :)
</p>

<pre caption = "GRUB installeren in de MBR">
grub&gt; <i>root (hd0,0)</i>          <comment>(Gebruik informatie op de boot
partitie)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Installeer GRUB in de MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Verlaat de GRUB shell)</comment>
</pre>

<note>
Als je GRUB wilt installeren op een partitie in plaats van de MBR, dan dien je
het <c>setup</c> commando aan te passen, zodat het verwijst naar de juiste
partitie. Bijvoorbeeld, als je GRUB wilt installeren op <path>/dev/hda3</path>,
dan wordt het commando <c>setup (hd0, 2)</c>. Echter slechts een enkeling wilt
dit.
</note>

<p>
Hoewel GRUB geinstalleerd is, moeten we nog steeds een configuratie bestand
schrijven, zodat GRUB automatisch je nieuw geinstalleerde kernel gebruikt.
Creeer <path>/boot/grub/grub.conf</path> met <c>nano</c> (of een andere editor
naar keus):
</p>

<pre caption = "/boot/grub/grub.conf aanmaken">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Nu gaan we <path>grub.conf</path> schrijven. Hieronder vind je een
<path>grub.conf</path> voor het voorbeeld dat wij gebruiken in deze handleiding,
met een kernel image <path>kernel-2.4.22</path>.
</p>

<pre caption = "grub.conf inhoud">
<comment># Welk optie eerst gestart moet worden, 0 is de eerste 1 de tweede enz..</comment>
default 0
<comment># Hoeveel seconden er gewacht moet worden alvorens de standaard gestart wordt.</comment>
timeout 30
<comment># Moeie, vette splash image om het scherm te sieren :)</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux
<comment># Partitie waar het kernel image (of os) gevonden kan worden</comment>
root (hd0,0)
kernel (hd0,0)/kernel-2.4.22 root=/dev/hda3
<comment># Alleen als je genkernel gebruikt hebt. Verwijder deze regel anders</comment>
initrd (hd0,0)/initrd-2.4.22-gentoo-r2

<comment># De volgende drie regels zijn alleen van toepassing als je dual-boot met een Windows OS.</comment>
<comment># In dit geval staat Windows op /dev/hda6.</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>

<note>
Als je een andere partities gebruikt en/of een andere kernel image, pas de
instellingen dan aan. Echter zorg ervoor dat alles dat na een GRUB-apparaat komt
(zoals <path>(hd0,0)</path>) relatief is aan het mount punt, en niet aan de
root. Met andere woorden <path>(hd0,0)/grub/splash.xmp.gz</path> is in de
realiteit <path>/boot/grub/splash.xpm.gz</path> omdat <path>(hd0,0)</path>
<path>/boot</path> is.
</note>

<p>
Als je meer options aan de kernel mee wilt geven, voeg ze dan toe achter het
kernel commando. We geven al een optie mee (<c>root=/dev/hda3</c>), maar je kan
er ook nog andere opties aan toe voegen. Bijvoorbeeld <c>vga</c> om de
framebuffer aan te zetten, zoals eerder besproken:
</p>

<pre caption = "Het vga-statement toevoegen als kernel argument">
title=Gentoo Linux
  root (hd0,0)
  kernel (hd0,0)/kernel-2.4.22 root=/dev/hda3 vga=788
</pre>

<p>
<c>genkernel</c> gebruikers moeten weten dat hun kernel dezelfde opstart opties
gebruikt als de LiveCD. Bijvoorbeeld, als je een SCSI apparaat hebt, dan dien je
<c>doscsi</c> als kernel optie toe te voegen.
</p>

<p>
Sla nu <path>grub.conf</path> op, en verlaat de editor. Vanaf nu is GRUB
succesvol geconfigureerd, en kan je doorgaan met <uri
link="?part=1&amp;chap=10">Benodigde Systeem tools installeren</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatief: LILO gebruiken</title>
<subsection>
<title>LILO Installeren</title>
<body>

<impo>
LILO kan enkel gebruikt worden met x86 systemen!
</impo>

<p>
LILO, de LInuxLOader, is de bewezen oplossing wat betreft bootloader. Echter,
het mist een aantal mogelijkheden die GRUB wel heeft (wat ook de reden is dat
GRUB momenteel meer gebruikt wordt). Dat LILO nog gebruikt wordt komt doordat
GRUB op sommige system niet werkt, en LILO wel. Uiteraard wordt het ook gebruikt
omdat sommige mensen LILO kennen, en het gewoon willen blijven gebruiken. Hoe je
het ook wentelt of keert, Gentoo ondersteund beide, en klaarblijkelijk hebt je
voor LILO gekozen.
</p>

<p>
LILO installeren is een eitje; gebruik gewoon <c>emerge</c>.
</p>

<pre caption = "LILO Installeren">
# <i>emerge --usepkg lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>LILO Configureren</title>
<body>

<p>
Om LILO te configureren dien je eerst <path>/etc/lilo.conf</path> aan te maken.
Start je favoriete editor (in dit handboek gebruiken we <c>nano</c> voor
consistentie) en maak het bestand aan.
</p>

<pre caption = "/etc/lilo.conf aanmaken">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Enige secties terug vroegen we je om de naam te onthouden van het kernel-image
dat je gemaakt hebt. In het volgende <path>lilo.conf</path> voorbeeld nemen we
aan dat het image <path>kernel-2.4.22</path> heet. We maken ook gebruik van de
voorbeeld partitie indeling.
</p>

<pre caption = "Example /etc/lilo.conf">
boot=/dev/hda             <comment># Installeer LILO in de MBR</comment>
prompt                    <comment># Geef de gebruiker een kans om een OS te kiezen</comment>
timeout=50                <comment># Wacht vijf seconden alvorens het standaard OS te starten</comment>
default=gentoo            <comment># Wanneer de timeout voorbij is starten we Gentoo</comment>
<comment># Alleen van toepassing als je een framebuffer gebruikt</comment>
vga=788                   <comment># Framebuffer instelling. Aanpassen aan je eigen wil</comment>

image=/boot/kernel-2.4.22
  label=gentoo            <comment># Naam van dit OS</comment>
  read-only               <comment># Starten met read-only root partitie. Niet aanpassen!</comment>
  root=/dev/hda3          <comment># Locatie van het root bestandssysteem</comment>
  <comment># Alleen voor genkernel gebruikers, anders deze regel verwijderen:</comment>
  initrd=/boot/initrd-2.4.22-gentoo-r2

<comment># De volgende twee regels zijn alleen van toepassing als je dual-boot met een Windows OS.</comment>
<comment># In dit geval staat Windows op /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
</note>

<p>
Als je meer opties aan de kernel wilt doorgeven, voeg dat een <c>append</c>
regel toe voor het betreffende OS. Bijvoorbeeld, we voegen <c>acpi=off</c> toe
om ACPI ondersteuning uit te schakelen.
</p>

<pre caption = "append gebruiken om kernel opties te geven">
image=/boot/kernel-2.4.22
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="acpi=off"</i>
</pre>

<p>
<c>genkernel</c> gebruikers moeten weten dat hun kernel dezelfde opstart opties
gebruikt als de LiveCD. Bijvoorbeeld, als je een SCSI apparaat hebt, dan dien je
<c>doscsi</c> als kernel optie toe te voegen.
</p>


<p>
Sla het bestand op, en verlaat de editor. Om de installatie af te maken hoef je
enkel nog <c>/sbin/lilo</c> te draaien, zodat de configuratie in
<path>/etc/lilo.conf</path> in het system wordt gezet.
</p>

<pre caption = "De LILO installatie afmaken">
# <i>/sbin/lilo</i>
</pre>

<p>
Nu kun je verder gaan met <uri link="?part=1&amp;chap=10">Benodigde Systeem
tools installeren</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatief: aboot gebruiken</title>
<body>

<impo>
aboot kan alleen gebruikt worden op alpha systemen!
</impo>

<p>
Eerst moeten we aboot installeren. Uiteraard doen we dat met behulp van
<c>emerge</c>:
</p>

<pre caption = "aboot installeren">
# <i>emerge --usepkg aboot</i>
</pre>

<p>
De volgende stap maakt onze bootdisk bootable. Dit zorgt ervoor dat <c>aboot</c>
wordt gestart tijdens het starten het je systeem. We maken on bootdisk bootable
door de <c>aboot</c> bootloader naar het begin van de schijf te schrijven.
</p>

<pre caption = "Je bootdisk bootable maken">
# <i>swriteboot -f3 /dev/sda /boot/bootlx</i> 
# <i>abootconf /dev/sda 2</i>
</pre>

<note>
Als je een andere partitie indeling gebruikt dan wij gebruiken in dit voorbeeld,
dan moet je alle commando's daarop aanpassen. De volgende man pagina's zijn
hierop van toepassing <c>man 8 swriteboot</c> en <c>man 8 abootconf</c>.
</note>

<p>
Om het opstarten van Gentoo makkelijker te maken, maken we een aboot
configuratie bestand, en zetten we de SRM boot_osflags variabele. You moet je
ervan vergewissen dat de bootdef_dev goed staat (makkelijker vanuit de console
dan vanuit Linux).
</p>

<pre caption = "Gentoo opstarten vergemakkelijken">
# <i>echo '0:2/boot/vmlinux.gz root=/dev/sda2' &gt; /etc/aboot.conf</i>
# <i>echo -n 0 &gt; /proc/srm_environment/named_variables/boot_osflags</i>
# <i>echo -n '' &gt; /proc/srm_environment/named_variables/boot_file</i>
</pre>

<p>
Als je installeerd vanaf een seriele console, vergeet dan niet de seriele
console boot vlag toe te voegen aan <path>aboot.conf</path>. Zie
<path>/etc/aboot.conf.example</path> voor meer informatie. Tevens dien je het
inloggen vanaf de seriele poort toe te staan:
</p>

<pre caption = "Login vanaf de seriele poort toestaan">
# <i>echo tts/0 &gt;&gt; /etc/securetty</i>
# <i>echo 's0:12345:respawn:/sbin/agetty 9600 tts/0 vt100' &gt;&gt; /etc/inittab</i>
</pre>

<p>
Aboot is nu geconfigureerd en klaar voor gebruik. Je kan nu verder gaan met 
<uri link="?part=1&amp;chap=10">Benodigde Systeem tools installeren</uri>.
</p>

</body>
</section>
<section>
<title>Alternatief: MILO gebruiken</title>
<body>

<impo>
MILO kan enkel gebruikt worden op alpha systemen!
</impo>

<p>
Voor we verder gaan, moet je beslissen hoe je MILO gaat gebruiken. We gaan er
hier vanuit dat je een MILO boot floppy wilt maken. Als je wilt gaan opstarten
vanaf een MS-DOS partitie op je harde schijf, pas dan de commando's aan.
</p>

<p>
Om MILO te installeren gebruiken we <c>emerge</c>
</p>

<pre caption = "MILO Installeren">
# <i>emerge --usepkg milo</i>
</pre>

<p>
Nadat MILO geinstalleerd is, behoren de MILO images in <path>/opt/milo</path> te
staan. De commando's hieronder maken een bootfloppy voor gebruik met MILO. Zorg
ervoor dat je het correcte image gebruikt voor jouw alpha systeem.
</p>

<pre caption = "MILO op een floppy installeren">
<comment>(Stop een lege floppy in de computer)</comment>
# <i>fdformat /dev/fd0</i>
# <i>mformat a:</i>
# <i>mcopy /opt/milo/milo-2.2-18-gentoo-ruffian a:\milo</i>
# <i>mcopy /opt/milo/linload.exe a:\lilnload.exe</i>
<comment>(Alleen voor mensen met een Ruffian:</comment>     
  # <i>mcopy /opt/milo/ldmilo.exe a:\ldmilo.exe</i>
<comment>)</comment>
# <i>echo -ne '\125\252' | dd of=/dev/fd0 bs=1 seek=510 count=2</i>
</pre>

<p>
Je MILO boot floppy is nu klaar om Gentoo Linux te starten. Het kan zijn dat je
enkele omgevings variabelen in je ARCS Firware moet aanpassen om MILO werkend te
krijgen. Dit staat allemaal uitgelegd in de <uri
link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri> met enkele voorbeelde
voor veel gebruikte systemen, en voorbeelden van commando's in interactieve
modus.
</p>

<p>
De <uri link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri> niet lezen is
een <e>slecht</e> idee.
</p>

<p>
Nu kun je verder gaan met <uri link="?part=1&amp;chap=10">Benodigde Systeem
tools installeren</uri>.
</p>

</body>
</section>
<section>
<title>Alternatief: SILO gebruiken</title>
<body>

<p>
Het is nu tijd om <uri link="http://www.sparc-boot.org">SILO</uri>, de Sparc
Improved boot LOader te installeren en configureren.
</p>

<pre caption = "SILO Installeren">
# <i>emerge --usepkg silo</i>
</pre>

<p>
Open je favoriete editer (wij gebruiken <c>nano</c> als voorbeeld) en maak
<path>/etc/silo.conf</path> aan.
</p>

<pre caption = "/etc/silo.conf aanmaken">
# <i>nano -w /etc/silo.conf</i>
</pre>

<p>
Hieronder vind je een voorbeeld <path>silo.conf</path> bestand. Het maakt
gebruik van de partitie indeling die we door het gehele boek gebruiken, en
<path>kernel-2.4.22</path> als kernel image.
</p>

<pre caption = "Voorbeeld /etc/silo.conf">
partition = 1         <comment># Boot partitie</comment>
root = /dev/hda4      <comment># Root partitie</comment>
timeout = 15          <comment># Wacht 15 seconden voor het default OS gestart wordt</comment>

image = /boot/kernel-2.4.22
  label = linux
</pre>

<p>
Als je de voorbeeld <path>silo.conf</path> gebruikt, die door Portage wordt
geinstalleerd, vergewis je er van van dat je <e>alle</e> regels die je niet
nodig hebt van commentaar voorziet.
</p>

<p>
Als je een aparte <path>/boot</path> partitie hebt, kopieer dan het
configuratie bestand naar <path>/boot</path> en draai <c>/sbin/silo</c>:
</p>

<pre caption = "Enkel als je /boot op een andere partitie hebt">
# <i>cp /etc/silo.conf /boot</i>
# <i>/sbin/silo -C /boot/silo.conf</i>
/boot/silo.conf appears to be valid
</pre>

<p>
Als je <path>/boot</path> directorie zich op de root partitie bevind, draai dan
enkel <c>/sbin/silo</c>:
</p>

<pre caption = "Run silo">
# <i>/sbin/silo</i>
/etc/silo.conf appears to be valid
</pre>

<p>
Nu kun je verder gaan met <uri link="?part=1&amp;chap=10">Benodigde Systeem
tools installeren</uri>.
</p>

</body>
</section>
<section>
<title>Alternatief: PALO gebruiken</title>
<body>

<impo>
PALO kan enkel gebruikt worden op HPPA systemen!
</impo>

<p>
Op het PA-RISC platform heet de bootloader palo. Je kan het configuratie bestand
vinden in <path>/etc/palo.conf</path>. Hier is een voorbeeld configuratie.
</p>

<pre caption = "/etc/palo.conf voorbeeld">
--commandline=2/vmlinux root=/dev/sdb2 HOME=/
--recoverykernel=/vmlinux.old
--init-partitioned=/dev/sdb
</pre>

<p>
De eerste regel verteld palo de locatie van de kernel en de kernel opties.
<c>2/vmlinux</c> betekend de kernel genaamd <c>/vmlinux</c> die op de tweede
partitie staat. Pas op, het pad naar de kernel is relatief aan de partitie, en
niet aan het root bestandssysteem.
</p>

<p>
De tweede regel geeft aan welke nood kernel je wilt gebruiken. Als dit je eerste
installatie is, en je hebt nog geen nood kernel, voorzie deze regel dan van
commentaar. De derde regel geeft aan op welke schijf palo is geinstalleerd.
</p>

<p>
Wanneer de configuratie klaar is kan je gewoon <c>palo</c> draaien.
</p>

<pre caption = "Applying the PALO configuration">
# <i>palo</i>
</pre>

<p>
Nu kun je verder gaan met <uri link="?part=1&amp;chap=10">Benodigde Systeem
tools installeren</uri>.
</p>

</body>
</section>
<section>
<title>Alternatief: yaBoot gebruiken</title>
<subsection>
<title>Introductie</title>
<body>

<impo>
yaBoot kan ankel op NewWorld PPC systemen worden gebruikt!
</impo>

<p>
Er zijn twee verschillende manieren om yaBoot te configureren. Je kan de nieuwe
verbeterde <c>yabootconfig</c> gebruiken, deze zit standaard bij
<path>yaboot-1.3.8-r1</path>, om automatisch yaBoot te installeren. Als je om
welke reden dan ook <c>yabootconfig</c> niet wilt gebruiken om automatisch
<path>/etc/yaboot.conf</path> te maken, dan kan je gewoon het voorbeeld bestand
dat al op je systeem aanwezig is aanpassen.
</p>

<ul>
  <li><uri link="#doc_chap8_sect2">Standaard: yabootconfig gebruiken</uri></li>
  <li>
    <uri link="#doc_chap8_sect3">Alternatief: handmatige yaBoot 
    configurate</uri>
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Standaard: yabootconfig gebruiken</title>
<body>

<p>
<c>yabootconfig</c> detecteerd automatisch de partities op je systeem, en zal
dual en triple boot combinaties met Linux, Mac OS en Mac OS X configureren.
</p>

<p>
Om <c>yabootconfig</c> te gebruiken, moet je schijf een bootstrap partitie
hebben, en <path>/etc/fstab</path> moet juist configureerd zijn voor je Linux
partities. Beide behoren gedaan te zijn in eerdere stappen. Maak je er zeker van
dat je, voor je begint, de laatste versie van yaBoot geinstalleerd hebt door
<c>emerge --update yaboot</c> te draaien. Dit is nodig omdat een nieuwe versie
misschien wel in Portage staat, maar nog niet in de stage bestanden zat.
</p>

<pre caption = "yaBoot installeren">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Draai nu <c>yabootconfig</c>. Het programma zal de locatie van de bootstrap
partitie bevestigen. Type <c>Y</c> als deze locatie correct is. Zoniet,
controleer <path>/etc/fstab</path> nogmaals. yabootconfig zal dan je systeem
setup scannen, een <path>/etc/yaboot.conf</path> aanmaken en <c>mkofboot</c>
draaien. <c>mkofboot</c> wordt gebruikt om de boostrap partitie te formatteren
en het yaBoot configuratie bestanden erin te plaatsen.
</p>

<p>
Je wilt wellicht de inhoud van <path>/etc/yaboot.conf</path> controleren. Als je
veranderingen aanbrengt in <path>/etc/yaboot.conf</path>, zorg er dan voor dat
je <c>ybin -v</c> draait om te veranderingen toe te passen op de bootstrap
partitie.
</p>

<p>
Nu kun je verder gaan met <uri link="?part=1&amp;chap=10">Benodigde Systeem
tools installeren</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Alternatief: Handmatige yaBoot Configuratie</title>
<body>

<p>
Zorg er allereerst voor dat je de laatste <c>yaboot</c> geinstalleerd hebt:
</p>

<pre caption = "yaboot installeren">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Hieronder vind je een compleet <path>yaboot.conf</path> bestand, pas het aan
naar eigen wil.
</p>

<pre caption = "/etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## run: "man yaboot.conf" for details. Do not make changes until you have!!
## see also: /usr/share/doc/yaboot/examples for example configurations.
##
## For a dual-boot menu, add one or more of:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## our bootstrap partition:</comment>

boot=/dev/hda9

<comment>##hd: is open firmware praat voor hda</comment>
device=hd:
partition=11

root=/dev/hda11
delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Deze sectie kan gekopieerd worden als je meer dan een kernel of boot opties
## wilt gebruiken
#################</comment>
image=/boot/vmlinux
  label=Linux
  sysmap=/boot/System.map
  read-only
<comment>##################</comment>

macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Als <path>yaboot.conf</path> eenmaal klaar is, kan je <c>mkofboot -v</c> draaien
om de instellingen in de bootstrap partitie op te slaan. <e>Vergeet dit
niet!</e> Als alles goed gaat, en je hebt dezelfde opties als het voorbeeld
bestand, zal de volgende herstart resulteren in een simpel, vijf-keuzen opstart
menu. Als je je yaboot configuratie later aanpast, dien je <c>ybin -v</c> te
draiien, om de bootstrap partitie opnieuw te configureren - <c>mkofboot</c> is
alleen voor de eerste keer nodig.
</p>

<p>
Voor meer informatie over yaBoot kan je een kijkje nemen bij het <uri
link="http://penguinppc.org/projects/yaboot">yaboot project</uri>. Nu kun je 
verder gaan met <uri link="?part=1&amp;chap=10">Benodigde Systeem tools 
installeren</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternatief: BootX</title>
<body>

<impo>
BootX kan enkel worden gebruikt op OldWorld PPC systemen!
</impo>

<p>
Als je BootX wilt gebruiken, dan hoef je niets te doen op dit moment. Echter, na
het herstarten, dien je enige configuratie te verrichten in het BootX control
panel (inside MacOS). We hebben het hier verderop in de installatie nog over.
</p>

<p>
Nu kun je verder gaan met <uri link="?part=1&amp;chap=10">Benodigde Systeem
tools installeren</uri>.
</p>

</body>
</section>
<section>
<title>Alternatief: MIPS PROM</title>
<subsection>
<body>

<p>
Bij MIPS is het niet noodzakelijk dat je een bootloader installeert. De MIPS
PROM handelt het opstarten af, je hoeft alleen maar je kernel als geldige optie
te installeren.
</p>

<p>
Eerst installeer je <c>dvhtool</c>, nodig om de kernel naar het SGI Volume
Header te kopieren.
</p>

<pre caption="dvhtool installeren">
# <i>emerge dvhtool</i>
</pre>

<p>
Kopieer nu de kernel naar het SGI Volume Header. Standaard neemt <c>dvhtool</c>
aan dat het SGI Volume Header zich op <path>/dev/sda</path> bevindt. ALs dit
niet het geval is (bijvoorbeeld wanneer IRIX is geinstalleerd op
<path>/dev/sda</path> en Gentoo/MIPS op <path>/dev/sdb</path>) dan moet je
<c>dvhtool</c> hierover inlichten met <c>-d &lt;device&gt;</c>
</p>

<pre caption="Een kernel naar het SGI Volume Header kopieeren">
# <i>dvhtool --unix-to-vh &lt;kernel name in /boot&gt; &lt;naam die je wilt geven in de volume header&gt;</i>
</pre>

<p>
Als je alle beschikbare opties in het volume wilt zien gebruik je
<c>--print-volume-directory</c>:
</p>

<pre caption="Alle beschikbare opties in het volume bekijken">
# <i>dvhtool --print-volume-directory</i>
</pre>

<p>
Om je systeem te configureren om Gentoo/MIPS te starten dien je de instellingen
in het MIPS PROM nog een beetje aan te passen. We beschrijven later hoe dit
gedaan wordt, als de Gentoo installatie klaar is.
</p>

<p>
Nu kun je verder gaan met <uri link="?part=1&amp;chap=10">Benodigde Systeem
tools installeren</uri>.
</p>

</body>
</subsection>
</section>
</sections>
