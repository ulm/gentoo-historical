<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Id: hb-install-x86+amd64-bootloader.xml,v 1.1 2006/08/03 15:09:23 neysx Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- Sync: 1.3 -->

<sections>

<version>3.0</version>
<date>2006-07-26</date>

<section>
<title>Uw keuze maken</title>
<subsection>
<title>Introductie</title>
<body>

<p>
Nu uw kernel is geconfigureerd en gecompileerd en de nodige systeem
configuratie bestanden goed zijn ingevuld, is het tijd om een programma te
installeren dat de kernel zal starten als wanneer het systeem opstart. Zo'n
programma heet een <e>bootloader</e>.
</p>

<p test="func:keyval('arch')='x86'">
Voor x86 levert Gentoo Linux <uri link="#grub">GRUB</uri> en
<uri link="#lilo">LILO</uri>. Maar voor we een van beiden installeren,
zullen we u eerst vertellen hoe u de framebuffer moet configureren (aangenomen
dat u dat wilt natuurlijk). Met de framebuffer kunt u op de Linux command line
(beperkt) grafische features gebruiken (zoals een mooi bootsplash plaatje wat
Gentoo levert).
</p>

</body>
</subsection>
<subsection>
<title>Optioneel: De Framebuffer</title>
<body>

<p test="func:keyval('arch')='x86'">
<e>Als</e> u de kernel hebt geconfigureerd met framebuffer ondersteuning (of
als u <c>genkernel</c>'s standaard kernel configuratie heeft gebruikt), kunt u
deze activeren door een <c>vga</c> en/of een <c>video</c> argument toe te voegen
aan het bootloader configuratie bestand.
</p>

<p>
Om te beginnen moet u weten welke type framebuffer methode u gebruikt. Als u
een gepatchte Gentoo kernel (zoals <c>gentoo-sources</c>), hebt u de
mogelijkheid om <c>vesafb-tng</c> als het <c>VESA driver type</c> te gebruiken
(wat standaard is voor deze kernel broncodes). Als dit het geval is, gebruikt u
<c>vesafb-tng</c> en heeft u geen <c>vga</c> argument nodig. Als dit niet het
geval is, gebruikt u de <c>vesafb</c> driver en dient u wel het <c>vga</c>
argument in te stellen.
</p>

<p test="func:keyval('arch')='AMD64'">
64-bit systemen moet de <c>vesafb</c> driver gebruiken, en moeten <c>vga</c>
argument instellen.
</p>

<p>
Het <c>vga</c> argument bepaalt de resolutie en kleurdiepte van uw framebuffer
scherm voor <c>vesafb</c>. Zoals vermeld in
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> (wat geïnstalleerd wordt
als u een kernelbroncodepakket installeert), dient u het het VESA nummer mee te
geven wat overeenkomt met de gewenste resolutie en kleurdiepte.
</p>

<p>
De volgende tabel geeft een lijst met beschikbare resoluties en kleurdieptes
en geeft de overeenkomende waarde die aan het <c>vga</c> argument meegegeven
dient te worden.
</p>

<table>
<tr>
  <ti></ti>
  <th>640x480</th>
  <th>800x600</th>
  <th>1024x768</th>
  <th>1280x1024</th>
</tr>
<tr>
  <th>256</th>
  <ti>0x301</ti>
  <ti>0x303</ti>
  <ti>0x305</ti>
  <ti>0x307</ti>
</tr>
<tr>
  <th>32k</th>
  <ti>0x310</ti>
  <ti>0x313</ti>
  <ti>0x316</ti>
  <ti>0x319</ti>
</tr>
<tr>
  <th>64k</th>
  <ti>0x311</ti>
  <ti>0x314</ti>
  <ti>0x317</ti>
  <ti>0x31A</ti>
</tr>
<tr>
  <th>16M</th>
  <ti>0x312</ti>
  <ti>0x315</ti>
  <ti>0x318</ti>
  <ti>0x31B</ti>
</tr>
</table>

<p>
Het <c>video</c> argument bepaalt de framebuffer opties. Het is vereist voor de
framebuffer driver (<c>vesafb</c> voor 2.6 kernels of <c>vesa</c> voor 2.4
kernels), gevolgd door de argumenten die u wenst te gebruiken. Alle variabelen
staan in <path>/usr/src/linux/Documentation/fb/vesafb.txt</path>, maar we zullen
u de drie meest gebruikte opties uitleggen:
</p>

<table>
<tr>
  <th>Optie</th>
  <th>Beschrijving</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    Aangenomen dat de grafische kaard zijn geheugen kan "wrappen", wat betekent
    dat hij verder gaat bij het begin van het geheugen als het bij het einde
    is aangekomen.
  </ti>
</tr>
<tr>
  <ti>mtrr</ti>
  <ti>
    MTRR registers gebruiken. <c>n</c> kan zijn:
    0 - disabled
    1 - uncachable
    2 - write-back
    3 - write-combining
    4 - write-through
  </ti>
</tr>
<tr test="func:keyval('arch')='x86'">
  <ti><c>mode</c></ti>
  <ti>
    (alleen <c>vesafb-tng</c>)<br/>
    Stel de resolutie, de kleurdiepte en de ververssnelheid in. Bijvoorbeeld,
    <c>1024x786-32@85</c> voor een 1024x768 resolutie, 32 bit kleurdiepte en
    een ververssnelheid van 85 Hz.
  </ti>
</tr>
</table>

</body>
<body test="func:keyval('arch')='AMD64'">

<p>
Het resultaat van deze 2 instellingen zou iets kunnen zijn zoals dit :
<c>vga=0x318 video=vesafb:mtrr:3,ywrap</c>. Schrijf dit op want je zult het
binnenkort nodig hebben.
</p>

<p>
Lilo werkt wel op AMD64, maar gentoo onderesteund alleen maar GRUB. vervolg nu
met de <uri link="#grub">instalatie</uri>.
</p>

</body>
<body test="func:keyval('arch')='x86'">

<p>
Het resultaat van deze twee argumenten kan iets zijn als <c>vga=0x318
video=vesafb:mtrr:3,ywrap</c> of
<c>video=vesafb:mtrr:3,ywrap,1024x768-32@85</c>. Onthoud (of noteer) deze
instelling; U heeft deze snel nodig.
</p>

<p>
Ga nu verder door <uri link="#grub">GRUB</uri> <e>of</e>
<uri link="#lilo">LILO</uri> te installeren.
</p>

</body>
</subsection>
</section>
<section id="grub">
<title>Standaard: GRUB gebruiken</title>
<subsection>
<title>GRUB's terminologie begrijpen</title>
<body>

<p>
Het belangrijkste deel van GRUB begrijpen, is begrijpen hoe GRUB harde
schijven en partities noemt. Uw Linux partitie <path>/dev/hda1</path> (voor IDE
schijven) of <path>/dev/sda1</path> (voor SATA/SCSI schijven) heet zeer
waarschijnlijk <path>(hd0,0)</path> onder GRUB. Vergeet niet de haakjes rond
<path>hd0,0</path> - ze zijn vereist.
</p>

<p>
Harde schijven tellen liever vanaf nul dan vanaf "a" en partities beginnen
bij nul in plaats van één. Merk ook op dat met hd apparaten alleen harde
schijven worden geteld en geen atapi-ide apparaten zoals cdrom spelers en
branders. Ook wordt hetzelfde gebruikt bij SCSI schijven. (Normaal gesproken
krijgen ze hogere nummers dan ide schijven tenzij de bios is ingesteld om vanaf
scsi schijven op te starten.) Als u de BIOS instelt om van een andere harde
schijf op te starten, wordt <e>die</e> harde schijf gezien als <path>hd0</path>.
</p>

<p>
Laten we een voorbeeld nemen. Stel dat u een harde schijf op
<path>/dev/hda</path> hebt, een cdrom speler op <path>/dev/hdb</path>, een
brander op <path>/dev/hdc</path>, een tweede harde schijf op
<path>/dev/hdd</path> en geen SCSI harde schijf, dan wordt
<path>/dev/hdd7</path> vertaald tot <path>(hd1,6)</path>. Het klinkt misschien
moeilijk en dat is het ook, maar zoals we zullen zien heeft GRUB een tab
aanvullingsmechanisme dat heel erg van pas komt voor diegene met veel schijven
en partities en een beetje verloren is geraakt in het GRUB schema.
</p>

<p>
Ik denk dat we nu wel toe zijn aan het installeren van GRUB.
</p>

</body>
</subsection>
<subsection>
<title>GRUB installeren</title>
<body>

<p>
Om GRUB te installeren, zullen we het eerst emergen:
</p>

<pre caption="Installeren van GRUB">
# <i>emerge grub</i>
</pre>

<p>
Hoewel GRUB nu is geïnstalleerd, moeten we nog steeds een configuratie ervoor
schrijven en GRUB in onze MBR zetten zodat GRUB ook daadwerkelijk u nieuwe
kernel opstart. Maak <path>/boot/grub/grub.conf</path> met <c>nano</c>
(of een andere editor):
</p>

<pre caption="/boot/grub/grub.conf aanmaken">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Nu gaan we een <path>grub.conf</path> schrijven. Hieronder vindt u twee
mogelijke versies van <path>grub.conf</path> voor de partitie indeling die we
hebben gebruikt in deze handleiding. We hebben alleen uitgebreid commentaar
toegevoegd in de eerste <path>grub.conf</path>. Zorg dat u <e>uw</e> kernel
image bestandsnaam en, indien van toepassing, <e>uw</e> initrd image
bestandsnaam gebruikt.
</p>

<ul>
  <li>
    De eerste <path>grub.conf</path> is voor mensen die geen <c>genkernel</c>
    hebben gebruikt om hun kernel te bouwen
  </li>
  <li>
    De tweede <path>grub.conf</path> is voor mensen die wel <c>genkernel</c>
    hebben gebruikt
  </li>
</ul>

<note>
Als uw root bestandssysteem JFS is, <e>moet</e> "ro" aan de <c>kernel</c> regel
toevoegen. Hier door kan JFS zijn log nakijken vo
While LILO does work on AMD64, Gentoo only supports using GRUB. Now continue by
its ordat het schrijven toelaat.
</note>

<pre caption="grub.conf for non-genkernel users">
<comment># Wat is de standaard kernel om op te starten? 0 is de eerste, 1 is de tweede.</comment>
default 0
<comment># Hoeveel seconden wachten we tot onze standaard kernel opstart.</comment>
timeout 30
<comment># Splash-image om het mooier te maken :)
# Haal dit weg indien u geen grafische kaart heeft geïnstalleerd</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux <keyval id="kernel-version"/>
<comment># Partitie waar uw kernel image (of besturingssysteem) op staat</comment>
root (hd0,0)
kernel /boot/<keyval id="kernel-version"/> root=/dev/hda3

<comment># De volgende vier regels zijn alleen nodig indien u een dualboot met een Windows systeem hebt.</comment>
<comment># In dit geval is Windows geïnstalleerd op /dev/hda6.</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<pre caption="grub.conf voor genkernel gebruikers">
default 0
timeout 30
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux <keyval id="kernel-version"/>
root (hd0,0)
kernel /boot/kernel-genkernel-<keyval id="kernel-version"/> root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev
initrd /boot/initramfs-genkernel-<keyval id="kernel-version"/>

<comment># Alleen van toepassing als u dual-boot</comment>
title=Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>

<note>
Het <c>udev</c> aan het einde van de kernel regel is nodig om langs een bug in
enkele genkernel versies te werken. Dit is alleen nodig <e>als</e> u udev
gebruikt (wat standaard is).
</note>

<p>
Heeft u echter een andere partitie indeling en/of kernel image gebruikt, pas
dit dan aan. Zorg echter wel dat alles wat een GRUB-apparaat volgt (zoals
<path>(hd0,0)</path>) relatief is aan het mount punt, niet naar de root. In
andere woorden, <path>(hd0,0)/grub/splash.xpm.gz</path> is in werkelijkheid
<path>/boot/grub/splash.xpm.gz</path> omdat <path>(hd0,0)</path> gewoon
<path>/boot</path> is.
</p>

<p>
Verder geldt dat wanneer u een andere partitie indeling gebruikt en de
<path>/boot</path> niet in een aparte partitie heeft geplaatst, de
<path>/boot</path> prefix in de eerdere code voorbeelden echt <e>nodig</e> is.
Wanneer u de standaard partitie indeling heeft gevolgt, is de <path>/boot</path>
prefix niet nodig, maar een werkt alles toch via een <path>boot</path> symlink.
Kort samengevat, de bovenstaande voorbeelden horen te werken, of u nu een
aparte <path>/boot</path> hebt aangemaakt of niet.
</p>

<p>
Indien u extra opties aan de kernel wilt toevoegen, zet u die simpelweg aan het
einde van het kernel commando. We hebben nu al een optie toegevoegd
(<c>root=/dev/hda3</c> of <c>real_root=/dev/hda3</c>), maar u kunt ook andere
argumenten meegeven, zo kunt u voor de eerder besproken framebuffer de
<c>video</c> en/of <c>vga</c> argumenten toevoegen.
</p>

<p>
Als u een een 2.6.7 of nieuwere kernel draait en u heeft de harde schrijf
gejumperd omdat uw BIOS geen grote harde schijven aan kan, dient u
<c>hdX=stroke</c> als optie toevoegen.
</p>

<p>
<c>genkernel</c> gebruikers moeten weten dat hun kernels dezelfde boot
opties gebruiken als de Installatie CD gebruikt. Bijvoorbeeld, als u SCSI
apparaten hebt, moet u <c>doscsi</c> als kernel optie toevoegen.
</p>

<p>
Sla nu het <path>grub.conf</path> bestand op en sluit af. Nu moeten we nog wel
GRUB in de MBR (Master Boot Record) installeren zodat GRUB daadwerkelijk start
wanneer u het systeem start.
</p>

<p>
De GRUB ontwikkelaars raden het gebruik van <c>grub-install</c> aan. Als echter
<c>grub-install</c> mislukt, zijn er nog steeds mogelijkheden om het handmatig
te doen.
</p>

<p>
Ga verder met <uri link="#grub-install-auto">Standaard: GRUB installeren met
grub-install</uri> of <uri link="#grub-install-manual">Alternatief: GRUB
handmatig installeren</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Standaard: GRUB installeren met grub-install</title>
<body>

<p>
Om GRUB te installeren, moet u het commando <c>grub-install</c> gebruiken.
<c>grub-install</c> zal echter niet direct werken omdat we in een chroot zitten.
We zullen eerst <path>/etc/mtab</path> (het bestand met de informatie over alle
gemounte bestandssystemen) moeten aanmaken. Gelukkig is er een makkelijke manier om
dit te doen: kopieer gewoon <path>/proc/mounts</path> naar
<path>/etc/mtab</path>, waarbij u de <c>rootfs</c> regel weglaat indien u geen
aparte boot partitie heeft aangemaakt. Het volgende commando werkt voor beide
gevallen:
</p>

<pre caption="/etc/mtab aanmaken">
# <i>grep -v rootfs /proc/mounts &gt; /etc/mtab</i>
</pre>

<p>
Nu kunnen we GRUB installeren met behulp van <c>grub-install</c>:
</p>

<pre caption="grub-install draaien">
# <i>grub-install /dev/hda</i>
</pre>

<p>
Als u verder nog vragen heeft over GRUB, lees dan de <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri>
(Engelstalig) of de <uri link="http://www.gnu.org/software/grub/manual/">
GRUB Handleiding</uri>(Engelstalig).
</p>

<p>
Ga verder met <uri link="#reboot">Het systeem herstarten</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Alternatief: GRUB handmatig installeren</title>
<body>

<p>
Om de configuratie van GRUB te starten, typt u <c>grub</c> in. Je zult begroet
worden met de <path>grub&gt;</path> grub command-line prompt. Nu kunt u de
commando's intypen om GRUB in uw MBR te krijgen.
</p>

<pre caption="De GRUB shell starten">
# <i>grub</i>
</pre>

<note>
Als uw systeem geen floppy drive heeft, voeg de <c>--no-floppy</c> optie toe
aan het bovenstaande commando zodat grub niet gaat zoeken naar (niet bestaande)
floppy drives.
</note>

<p>
In de voorbeeld configuratie willen we GRUB zo installeren zodat het zijn
informatie leest vanaf de boot partitie <path>/dev/hda1</path>, en dat het de
GRUB boot record op de MBR van de harde schijf zet zodat het eerste wat we zien
als de computer opstart GRUB is. Als u niet de voorbeelden hebt gevolgd, zorg
wel dat u de commando's daarop aanpast.
</p>

<p>
Het tab aanvullingsmechanisme van GRUB kan worden gebruikt binnen GRUB.
Bijvoorbeeld, als u "<c>root (</c>" typt, gevold door een TAB, zult u een lijst
met apparaten (zoals <path>hd0</path>) terugkrijgen. Als u
"<path>root (hd0,</path>" intypt, gevolgd door een TAB zult u een lijst krijgen
met beschikbare partities (zoals <path>hd0,0</path>).
</p>

<p>
Nu met behulp van tab aanvulling, zou GRUB installeren niet zo moeilijk
moeten zijn. Ga nu verder, configureer GRUB, zullen we? :-)
</p>

<pre caption="GRUB in de MBR installeren">
grub&gt; <i>root (hd0,0)</i>          <comment>(Geef op waar uw /boot partitie is)</comment>
grub&gt; <i>setup (hd0)</i>           <comment>(Installeer GRUB in de MBR)</comment>
grub&gt; <i>quit</i>                  <comment>(Verlaat de GRUB shell)</comment>
</pre>

<note>
Als u GRUB op een bepaalde partitie wil installeren in plaats van de MBR, dan
zult u het <c>setup</c> commando aan moeten passen zodat hij naar de juiste
partitie verwijst. Bijvoorbeeld, als u GRUB wil installeren in
<path>/dev/hda3</path>, dan zal het commando er zo uit ziet:
<c>setup (hd0,2)</c>. Sommige gebruikers zullen dit willen doen.
</note>

<p>
Als u verder nog vragen hebt over GRUB, lees dan de <uri
link="http://www.gnu.org/software/grub/grub-faq.html">GRUB FAQ</uri>
(Engelstalig) of de <uri link="http://www.gnu.org/software/grub/manual/">
GRUB Handleiding</uri>(Engelstalig).
</p>

<note>
Wanneer u een nieuwe kernel installeert, hoeft u geen bestanden meer te
kopiëren. Draai gewoon <c>make install</c> na het compileren van de kernel en
de juiste bestanden worden gekopieerd en de GRUB configuratie wordt aangepast.
</note>

<p>
Ga verder met <uri link="#reboot">Het systeem herstarten</uri>.
</p>

</body>
</subsection>
</section>
<section id="lilo">
<title>Alternatief: LILO gebruiken</title>
<subsection>
<title>LILO installeren</title>
<body>

<p>
LILO, de LInuxLOader, is het geteste en echte werkpaard van de Linux
bootloaders. Helaas mist het enkele mogelijkheden die GRUB wel heeft (en wat de
reden is dat GRUB nu veel aan populariteit wint). De reden dat LILO nog steeds
gebruikt wordt, is dat GRUB soms niet werkt en LILO wel. Natuurlijk zijn er ook
mensen die LILO kennen en daarom niet over willen stappen. Hoe dan ook, Gentoo
ondersteunt beide, en blijkbaar heeft u gekozen om LILO te gebruiken.
</p>

<p>
LILO installeren is een eitje; gebruik gewoon <c>emerge</c>.
</p>

<pre caption="LILO installeren">
# <i>emerge lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>LILO configureren</title>
<body>

<p>
Om LILO te configureren moet u <path>/etc/lilo.conf</path> aanmaken. Start uw
favoriete editor (in dit handboek gebruiken we <c>nano</c> voor continuïteit)
en maak het bestand.
</p>

<pre caption="/etc/lilo.conf aanmaken">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Enkele secties geleden hebben we u gevraagd de naam van het door u gemaakte
kernel-image te onthouden. In het volgende voorbeeld <path>lilo.conf</path>
gebruiken we de standaard partitie indeling. Er zijn twee verschillende
delen:
</p>

<ul>
  <li>
    Eén voor diegene die geen <c>genkernel</c> hebben gebruikt voor hun kernel
  </li>
  <li>
    Eén voor diegene die wel <c>genkernel</c> hebben gebruikt voor hun kernel
  </li>
</ul>

<p>
Zorg dat u <e>uw eigen</e> kernel image bestandsnaam en, indien van toepassing,
<e>uw eigen</e> initrd images bestandsnaam gebruikt.
</p>

<note>
Als uw root bestandssysteem JFS is, <e>moet</e> "ro" aan de <c>kernel</c> regel
toevoegen. Hier door kan JFS zijn log naspelen voordat hij schrijven toelaat.
</note>

<pre caption="Voorbeeld /etc/lilo.conf">
boot=/dev/hda             <comment># Installeer LILO in de MBR</comment>
prompt                    <comment># Geef de gebruiker de kans een andere keuze te maken</comment>
timeout=50                <comment># Wacht 5 (vijf) seconden voor het booten van de standaard keuze</comment>
default=gentoo            <comment># Als de timeout voobij is, boot de "gentoo" keuze</comment>

<comment># Voor niet-genkernel gebruikers</comment>
image=/boot/kernel-2.6.12-gentoo-r10
  label=gentoo            <comment># De naam die we deze keuze geven</comment>
  read-only               <comment># Start met een read-only root. Pas niet dit niet aan!</comment>
  root=/dev/hda3          <comment># Plaats van het root bestandssysteem</comment>

<comment># Voor genkernel gebruikers</comment>
image=/boot/kernel-genkernel-x86-<keyval id="kernel-version"/>
  label=gentoo
  read-only
  root=/dev/ram0
  append="init=/linuxrc ramdisk=8192 real_root=/dev/hda3 udev"
  initrd=/boot/initramfs-genkernel-<keyval id="kernel-version"/>

<comment># De volgende twee regels zijn alleen voor dual-boot gebruikers met een Windows systeem.</comment>
<comment># In dit geval, Windows is geïnstalleerd op /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Het <c>udev</c> aan het einde van de kernel regel is nodig om langs een bug in
enkele genkernel versies te werken. Dit is alleen nodig <e>als</e> u udev
gebruikt (wat standaard is).
</note>

<note>
Indien u een andere partitie indeling en/of kernel image gebruikt, pas
dit dan op de juiste plaatsen aan.
</note>

<p>
Indien u nog andere opties wilt toevoegen aan de kernel, voeg <c>append</c> toe
aan de sectie. Als voorbeeld zullen we het <c>video</c> argument toevoegen
zodat we framebuffer kunnen gebruiken:
</p>

<pre caption="append gebruiken om kernel opties toe te voegen">
image=/boot/kernel-<keyval id="kernel-version"/>
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="video=vesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
Indien u een een 2.6.7 of nieuwere kernel draait en u heeft de harde schrijf
gejumperd omdat uw BIOS geen grote harde schijven aan kan, moet u
<c>hdX=stroke</c> als optie toevoegen.
</p>

<p>
<c>genkernel</c> gebruikers moeten weten dat hun kernels dezelfde boot
opties gebruiken als de Installatie CD gebruikt. Bijvoorbeeld, als u SCSI
apparaten heeft, moet u <c>doscsi</c> als kernel optie toevoegen.
</p>

<p>
Sla nu het bestand op en sluit af. Om het nog af te maken, moet u
<c>/sbin/lilo</c> nog starten zodat LILO <path>/etc/lilo.conf</path> kan
toepassen op uw systeem (zoals zichzelf installeren op de schijf). Onthoud dat
u <c>/sbin/lilo</c> opnieuw moet starten als u een nieuwe kernel installeert
of het menu van LILO verandert.
</p>

<pre caption="De LILO installatie afmaken">
# <i>/sbin/lilo</i>
</pre>

<note>
Als u de kernel opnieuw installeert, hoeft u niet alle bestanden opnieuw te
kopiëren. Draai gewoon <c>make install</c> nadat u uw kernel hebt gecompileerd;
hij zal dan automatisch de benodigde bestanden kopiëren en de LILO configuratie
aanpassen.
</note>

<p>
Je kunt nu verder gaan met <uri link="#reboot">Het systeem herstarten</uri>.
</p>

</body>
</subsection>
</section>
<section id="reboot">
<title>Het systeem herstarten</title>
<subsection>
<body>

<p>
Verlaat de chroot en unmount alle gemounte partities. Typ dan het magische
commando waarop u heeft gewacht: <c>reboot</c>.
</p>

<pre caption="Unmount alle partities en reboot">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/dev /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Vergeet natuurlijk niet de Gentoo CD er uit te halen, anders start u de CD
op in plaats van uw nieuwe Gentoo systeem.
</p>

<p>
Eenmaal opnieuw opgestart en in uw Gentoo installatie, ga verder met <uri
link="?part=1&amp;chap=11">De Gentoo installatie afmaken</uri>.
</p>

</body>
</subsection>
</section>
</sections>
