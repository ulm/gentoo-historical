<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Id: nvidia-guide.xml,v 1.3 2006/11/04 22:30:27 diox Exp $ -->

<!-- Sync: 1.30 -->

<guide link="/doc/nl/nvidia-guide.xml" lang="nl">
<title>Gentoo Linux nVidia Guide</title>

<author title="Author">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
  <mail link="curtis119@gentoo.org">M Curtis Napier</mail>
</author>
<author title="Editor">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Translator">
  <mail link="diox@gentoo.org">Dimitry Bradt</mail>
</author>

<abstract>
Veel Gentoo-ers hebben een nVidia chipset op hun systeem. nVidia levert
specefieke Linux drivers om de prestraties van je kaart te verbeteren. Deze
gids informeert je hoe je die kunt installeren en hoe je die drivers kunt
configureren.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.25</version>
<date>2006-05-26</date>

<chapter>
<title>Inleiding</title>
<section>
<body>

<p>
nVidia geven hun eigen Linux drivers vrij die goede prestaties en volledige 3d
acceleratie leveren. De driver versies zijn opgesplitsts in twee delen :
<c>nvidia-kernel</c> en <c>nvidia-glx</c>.
</p>

<p>
<c>nvidia-kernel</c> is een kernel driver die laag-level communicatie doet met
je video hardware. Dit is een simpele kernel module genaamd, <c>nvidia</c>, die
in je kernel bronnen wordt geinstalleerd en geladen moet worden wanneer je die
drivers wilt gebruiken.
</p>

<p>
Ook zoals de kernel driver, moet je ook de X11 GLX laag (<c>nvidia-glx</c>)
installeren. Deze is gebruikt door X om afbeeldingen te renderen, die intern de
<c>nvidia-kernel</c> gebruikt om met de hardware te communiceren.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Je Kaart Configureren</title>
<section>
<title>Kernel Configuratie</title>
<body>

<p>
Zoals hierboven vermeld installeert en start de nVidia kernel driver op je
huidige kernel. Het bouwt een module, dus is het duidelijk dat je kernel enkele
opties moet bevatten voor het laden van kernel modules. Als je de
<c>genkernel</c> gebruikt om je kernel te configureren dan ben je al klaar.
Indien niet, controleer je kernel configuratie voor als de ondersteuning voor
de volgende zaken zijn ingeschakelt:
</p>

<pre caption="Inschakelen van ondersteuning voor het laden van Kernel Modules">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
Je moet ook ondersteuning voor <e>Memory Type Range Register</e> inschakelen in
je kernel:
</p>

<pre caption="Inschakelen van MTRR">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>

<p>
Je zult ook moeten ondersteuning inschakelen voor <c>agpgart</c> in je kernel
(gecompileerd, of als module).
</p>

<pre caption="Inschakelen van agpgart">
Device Drivers ---&gt;
Character devices ---&gt;
&lt;*&gt; /dev/agpgart (AGP Support)
</pre>

</body>
</section>
<section>
<title>Arch-specifieke nota's</title>
<body>

<impo>
Voor x86 en AMD64 proccesoren, de in-kernel driver zal conflicten brengen met
de binary driver gelevert door nVidia. Als je je kernel compileert voor deze
CPUs, moet je ondersteuning voor in-kernel compleet uitschakelen zoals
hieronder omschreven:
</impo>

<pre caption="Verwijderen van de in-kernel driver">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt; &gt;   nVidia Framebuffer Support
&lt; &gt;   nVidia Riva support
</pre>

<p>
Een goed framebuffer alternatief is <c>VESA</c>:
</p>

<pre caption="Schakel VESA ondersteuning in">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt;*&gt;   VESA VGA graphics support
</pre>

<p>
Daarna, onder "VESA driver type", selecteer <c>vesafb</c> of <c>vesafb-tng</c>:
</p>

<pre caption="Selecteer framebuffer type">
( ) vesafb
(X) vesafb-tng
</pre>

<p>
Voor meer informatie, kun je volgende documentatie lezen:
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path>  als je <c>vesafb</c>
gebruikt of zoek voor je framebuffer documentatie onder
<path>/usr/src/linux/Documentation/fb/</path>.
</p>

</body>
</section>
<section>
<title>Verdergaan met Kernel Configuratie</title>
<body>

<p>
nVdidia's modules en bibliotheken zijn gecombineerd in twee pakketen:
<c>nvidia-glx</c> en <c>nvidia-kernel</c>. De eerste zijn de X11 GLX
bibliotheken terwijl de laatste de kernel modules zijn.
</p>

<p>
De nvidia-kernel ebuilds vindt autmatisch je kernel versie gebaseerd op de
<path>/usr/src/linux</path> snelkoppeling. Controleer dat je deze snelkoppeling
verwijst naar de juiste bronnen en dat je kernel correct is geconfigureerd.
Bekijk het "Configureer de kernel" hoofdstuk van de <uri
link="/doc/nl/handbook/">Installatie Handboek</uri> voor details over hoe je,
je kernel kan configureren.
</p>

<p>
Als je gentoo-sources-2.6.11-r6 gebruikt, kan je <path>/usr/src</path> map zo
eruit zien:
</p>

<pre caption="Controleer je /usr/src/linux snelkoppeling">
# <i>cd /usr/src</i>
# <i>ls -l</i>
<comment>(Controleer dat linux wijst naar de juiste map)</comment>
lrwxrwxrwx   1 root root   22 Apr 23 18:33 linux -&gt; linux-2.6.11-gentoo-r6
drwxr-xr-x   4 root root  120 Apr  8 18:56 linux-2.4.26-gentoo-r4
drwxr-xr-x  18 root root  664 Dec 31 16:09 linux-2.6.10
drwxr-xr-x  18 root root  632 Mar  3 12:27 linux-2.6.11
drwxr-xr-x  19 root root 4096 Mar 16 22:00 linux-2.6.11-gentoo-r6
</pre>

<p>
In de teruggave hierboven, zul je merken dat de <c>linux</c> snelkoppeling
wijst naar de <c>linux-2.6.11-gentoo-r6</c> kernel.
</p>

<p>
Als je snelkoppeling niet wijst naar de juiste bron, moet je de link updaten
zoals hieronder omschreven:
</p>

<pre caption="Creeer/update de /usr/src/linux snelkoppeling">
# <i>cd /usr/src</i>
# <i>ln -snf linux-2.6.11-gentoo-r6 linux</i>
</pre>

</body>
</section>
<section>
<title>optioneel: controle op ondersteuning van verouderde kaarten</title>
<body>

<note>
Jammer genoeg zijn zekere kaarten niet meer ondersteund door de nieuwere
versies van <c>nvidia-glx</c> en <c>nvidia-kernel</c>. nVidia levert een
<uri link="http://www.nvidia.com/object/IO_18897.html">lijst met alle
ondersteunde kaarten</uri>. Controleer de lijst vooraleer de drivers te
installeren.
</note>

<p>
De volgende lijst is een <b>niet officiele</b> lijst van niet ondersteunde
video kaarten:
</p>

<pre caption="niet-ondersteunde kaarten">
TNT2
TNT2 Pro
TNT2 Ultra
TNT2 Model 64 (M64)
TNT2 Model 64 (M64) Pro
Vanta
Vanta LT
GeForce 256
GeForce DDR
GeForce2 GTS
GeForce2 Pro
GeForce2 Ti
GeForce2 Ultra
GeForce2 MX Integrated graphics
Quadro
Quadro2 Pro
Quadro2 EX
</pre>

<p>
Als je een van deze kaarten bezit, zul je de nieuwere versie moeten wijgeren en
een oudere versie vand e nVidia drivers installeren:
</p>

<pre caption="Masken van de nieuwere drivers">
# <i>echo "&gt;media-video/nvidia-kernel-1.0.6629-r5" &gt;&gt; /etc/portage/package.mask</i>
# <i>echo "&gt;media-video/nvidia-glx-1.0.6629-r7" &gt;&gt; /etc/portage/package.mask</i>
</pre>

</body>
</section>
<section>
<title>Installeren van de aangewezen drivers</title>
<body>

<p>
Installeer nu <c>nvidia-kernel</c> en <c>nvidia-glx</c>.
</p>

<pre caption="Installeren van de nVidia modules">
# <i>emerge nvidia-glx</i>
</pre>

<impo>
Elke keer je een <uri link="/doc/en/kernel-upgrade.xml">nieuwe kernel
compileert</uri> of je huidige hercompileert moet je de nVidia modules opnieuw
installeren. Dit kun je doen door <c>emerge nvidia-kernel</c> uit te voeren.
<c>nvidia-glx</c> is onaangetast bij het veranderen van de kernel. Je hoeft het
zelfs niet hercompileren na een recompilatie/update van X.
</impo>

<p>
Eenmaam de installatie is afgerond, voer <c>modprobe nvidia</c> uit om de
kernel module in het gegeugen te laden.
</p>

<pre caption="Inladen van de kernel module">
# <i>modprobe nvidia</i>
</pre>

<p>
Om te voorkomen dat je steeds de module manueel moet laden bij het opstarten
van de pc, moet je <path>/etc/modules.autoload.d/kernel-2.6</path> (of
<path>kernel-2.4</path>, hangt af van welke kernel-versie je gebruikt)
aanpassen en <c>nvidia</c> aan dit bestand toevoegen. Vergeet niet om
<c>modules-update</c> achteraf uit te voeren.
</p>

<impo>
Als je <c>agpgart</c> als een module hebt gecompileerd, moet je deze ook
toevoegen aan <path>/etc/modules.autoload.d/kernel-2.6</path> (of
<path>kernel-2.4</path>, hangt af van welke kernel-versie je gebruikt).
</impo>

<pre caption="Uitvoeren van modules-update">
# <i>modules-update</i>
</pre>

</body>
</section>
<section>
<title>De X Server Configureren</title>
<body>

<p>
Eenmaal de bijhorende drivers geinstalleerd zijn, moet je je X Server
configureren (XFree86 of Xorg) om de <c>nvidia</c> driver te gebruiken in
plaats van de standaard <c>nv</c> driver.
</p>

<p>
Open <path>/etc/X11/xorg.conf</path> (of <path>/etc/X11/XF86Config</path> als
je nog steeds het oude configuratiebestands-locatie gebruikt) met je favoriete
editor (zoals <c>nano</c> of <c>vim</c>) en ga naar het <c>device</c>
hoofdstuk. In dat hoofdstuk moet je de lijn met <c>Driver</c> veranderen:
</p>

<pre caption="Veranderen van nv naar nvidia in de X Server configuratie">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
Ga dan naar het <c>Module</c> hoofdstuk en controleer dat de <c>glx</c> module
geladen wordt terwijl de <c>dri</c> module niet geladen wordt:
</p>

<pre caption="Updaten van het Module hoofdstuk">
Section "Module"
  <comment>(...)</comment>
  <i># Load  "dri"
  Load  "glx"</i>
  <comment>(...)</comment>
EndSection
</pre>

<p>
Vervolgens, in het <c>Screen</c> hoofdstuk, controleer dat <c>DefaultDepth</c>
ingesteld staat op 16 of 24; of dat je <c>display</c> subsecties met
<c>depth</c> instellingen alleen maar 16 of 24 zijn. Zonder dat zal de
nvidia-glx extensie niet starten.
</p>

<pre caption="Updaten van het Screen hoofdstuk">
Section "Screen"
  <comment>(...)</comment>
  <i>DefaultDepth 16</i>
  Subsection "Display"
  <comment>(...)</comment>
EndSection
</pre>

<p>
Voer <c>eselect</c> uit zodat de X Server de nVidia GLX bibliotheken gebruikt:
</p>

<pre caption="Uitvoeren van eselect">
# <i>eselect opengl set nvidia</i>
</pre>

</body>
</section>
<section>
<title>Gebruikers toevoegen aan de groep video</title>
<body>

<p>
Je moet ook je lokale gebruiker toevoegen aan de groep <c>video</c> zodat hij
toegang heeft om de nVidia bestanden te kunnen raadplegen:
</p>

<pre caption="Je gebruiker teovoegen aan de video groep">
# <i>gpasswd -a youruser video</i>
</pre>

<p>
Dit is misschien niet helemaal nodig als je <c>udev</c> gebruikt, maar het kan
ook geen kwaad en het maakt je systeem toekomst-veilig :)
</p>

</body>
</section>
<section>
<title>Testen van je kaart</title>
<body>

<p>
Om je nVidia kaart te testen, start X op en voer het <c>glxinfo | grep
direct</c> uit. Het zou moeten zeggen dat direct renderen geactiveerd is.
</p>

<pre caption="Checking the direct rendering status">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
Om je FPS te bekijken, start <c>glxgears</c>.
</p>

</body>
</section>
<section>
<title>Inschakelen van nvidia ondersteuning</title>
<body>

<p>
Sommige programmas, zoals <c>mplayer</c> en <c>xine-lib</c>, gebruiken een
lokale USE variabele genaamd "nvidia" die XvMCNVIDIA ondersteuning aanschakelt. Dit
is handig als je naar hoge-resolutie films kijkt. Voeg "nvidia" toe aan je USE
variabelen in <path>/etc/make.conf</path> of voeg het toe als USE variabele in
<c>media-video/mplayer</c> en/of <c>media-libs/xine-lib</c> in
<path>/etc/portage/package.use</path>.
</p>

<p>
Voer dan <c>emerge -uD --newuse world</c> om je systeem te herbouwen met
de USE-variabelen ondersteuning voor de programma's die die kunnen gebruiken.
</p>

</body>
</section>
<section>
<title>De nVidia Instellingen Hulpprogramma gebruiken</title>
<body>

<p>
Sinds nVidia versie 1.0.6106 op de markt heeft gebracht, bied het je ook een
instellingen hulpprogramma aan. Dit programma laat je toe om grafische
veranderingen aan te brengen zonder daarvoor te moeten de X server te
herstarten. Dit programma is beschikbaar in de Portage als
<c>media-video/nvidia-settings</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Probleemoplossing</title>
<section>
<title>2D werkend krijgen voor machines met meer dan 4 Gb of meer gegeugen</title>
<body>

<p>
Als je problemen hebt met de nVidia 2d acceleratie is het goed mogelijk dat je
niet mogelijk bent om een schrijf-combinatie afstand met MTRR in te stellen. Om
te controleren, bekijk je best de inhoud van <path>/proc/mtrr</path>:
</p>

<pre caption="Controleren of je schrijf-combinatie hebt aangeschakelt">
# <i>cat /proc/mtrr</i>
</pre>

<p>
Iedere lijn zou moeten "write-back" of "write-combining" bevatten. Als je een
lijn met "uncachable" erin ziet, zul je moeten je bios instellingen veranderen.
</p>

<p>
Reboot en ga naar de BIOS, zoek de MTRR instelling (waarschijnlijk onder "CPU
instelingen"). Verander de optie van "continuous" naar "discrete" en start
terug op in Linux. Je zult nu merken dat er geen "uncachable" meer is, en 2D
acceleratie nu gewoon werkt zonder problemen.
</p>

</body>
</section>
<section>
<title>Ik krijg waarschuwingen over niet geondersteunde 4K stack grootte</title>
<body>

<p>
<c>nvidia-kernel</c> pakketten die ouder zijn dan 1.0.6106 ondersteunen alleen
maar kernels die een 8K stack grootte. Meer recentere kernels (2.6.6 en hoger)
hebben ook ondersteuning voor 4k stack groottes. Selecteer niet "4k stack size"
in je kernel configuratie als je zo'n <c>nvidia-kernel</c> pakket gebruikt. Je
kunt deze optie vinden in de sectie <c>Kernel Hacking</c>.
</p>

</body>
</section>
<section>
<title>
  Als ik probeer om de kernel module te laden, krijg ik "no such device"
</title>
<body>

<p>
Dit komt meestal voora ls je geen kaart hebt die overeen komt met je video
kaart. Controleer dat je een nVidia-ondersteunende kaart hebt. (Je kunt dit
hercontroleren met <c>lspci</c>).
</p>

<p>
Als je zeker bent dat je een nVidia kaart hebt, controleer je BIOS en kijk of
de richtlijn <e>Assign IRQ to VGA</e> ingeschakeld is.
</p>

</body>
</section>
<section>
<title>
Ik krijg "no screens found" en vindt in de logs "Failed to initialize the NVIDIA
kernel module!"
</title>
<body>

<p>
Je mist hoogst waarschijnlijk de <path>/dev/nvidia*</path> apparaat bestanden.
Maak ze aan door <c>NVmakedevices.sh</c> te gebruiken:
</p>

<pre caption="Aanmaken van nvidia aparaat bestanden">
# <i>/sbin/NVmakedevices.sh</i>
</pre>

<p>
Als je <path>/dev/nvidia*</path> aparaten steeds verdwijnen na het opnieuw
opstarten; dan heb je hoogst waarschijnlijk een verkeerde instelling in
<path>/etc/conf.d/rc</path> pas dit bestand als volgt aan:
</p>

<pre caption="Editing /etc/conf.d/rc">
RC_DEVICE_TARBALL="yes"
</pre>

<p>
Dit zal de bestanden <path>/dev/nvidia*</path> reserveren zelfs na opnieuw op te
starten.
</p>

<note>
Als alternatief kun je ook proberen de laatste <c>nvidia-kernel</c> en
<c>nvidia-glx</c> van de 8xxx series installeren. Op het moment van dit
schrijven, zijn bijde nog steeds onder "~arch" geplaatst. Deze drivers hangen
niet meer af van hotplug of udev om de nodige apparaatbestanden aan te maken.
Dit zal wel een recente kernel vereisen (2.6.14 en hoger).
</note>

</body>
</section>
</chapter>

<chapter>
<title>Configuratie voor experten</title>
<section>
<title>Documentatie</title>
<body>

<p>
De nVidia driver pakket heeft ook zijn eigen documentatie. Die is geinstalleerd
in <c>/usr/share/doc</c> en kan bekeken worden met het volgende commando:
</p>

<pre caption="Bekijken van de NVIDIA documentatie">
# <i>less /usr/share/doc/nvidia-glx-*/README.txt.gz</i>
</pre>

</body>
</section>
<section>
<title>Kernel module parameters</title>
<body>

<p>
De <c>nvidia</c> kernel module accepteerd een aantal parameters (opties) die je
toelaten het gedrag van de driver te veranderen. Meeste van die parameters
staan vermeld in de documentatie. Pas het <c>/etc/modules.d/nvidia</c> bestand
aan en voer <c>modules-update</c> uit na het aanpassen. Daarna moet je de
nvidia module opnieuw laden vooraleer je iets merkt.
</p>

<pre caption="Aanpassen van nvidia opties">
<comment>(Pas /etc/modules.d/nvidia aan in je favoriete programma)</comment>
# <i>nano -w /etc/modules.d/nvidia</i>
<comment>(Updaten van de module informatie)</comment>
# <i>modules-update</i>
<comment>(Ontladen van de nvidia module...)</comment>
# <i>modprobe -r nvidia</i>
<comment>(... en terug laden)</comment>
# <i>modprobe nvidia</i>
</pre>

</body>
</section>
<section>
<title>Gevorderde X configuratie</title>
<body>

<p>
De GLX laag heeft ook een overvloed aan opties die kunnen ingesteld worden.
Deze controleren de configuratie van de TV-uitgang, meerdere monitors,
frequentie detectie enz. Al deze opties staan uigebreid uitgelegt in de
documetatie.
</p>

<p>
Als je wenst om enige van deze opties te gebruiken, moet je ze gebruiken zoals
hieronder beschreven. Deze natuurlijk in het "device" sectie van je X
configuratie bestand (meestal <c>/etc/X11/xorg.conf</c>). Voor een
voorbeeld-configuratie, neem nu dat je het opstartlogo niet wilt zien:
</p>

<pre caption="Gevorderde nvidia configuratie in de X configuratie">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  <i>Option     "NoLogo" "true"</i>
  VideoRam   65536
EndSection
</pre>

</body>
</section>
</chapter>

</guide>
