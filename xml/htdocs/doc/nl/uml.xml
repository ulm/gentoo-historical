<?xml version='1.0' encoding="UTF-8"?>

<!-- 
	Sync: 1.8
-->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/nl/uml.xml">
<title>Gentoo Linux Developer's gids voor systeemtests met UserMode Linux</title>
<author title="Editor"><mail link="g2boojum@gentoo.org">Grant Goodyear</mail></author>
<author title="Editor"><mail link="zhen@gentoo.org">John Davis</mail></author>
<author title="Translator"><mail link="swift@gentoo.org">Sven Vermeulen</mail></author>
<author title="Translator"><mail link="blubber@gentoo.org">Tiemo Kieft</mail></author>

<license />

<abstract>
Deze gids toont aan Gentoo Linux ontwikkelaars hoe ze eenvoudig een user-mode
linux kunnen aanmaken voor het testen van potentieel systeembrekende
aanpassingen.
</abstract>

<version>0.2</version>
<date>30 September 2003</date>

<chapter>
<title>Verkrijgen van User-Mode Linux</title>
<section>
<body>
<p>
Zoals de user-mode linux website
(<uri>http://user-mode-linux.sourceforge.net</uri>) al vermeldt laat user-mode
linux toe om "Linux in Linux" te draaien. Specifiek levert user-mode linux een
virtuele machine waarin een gebruiker gevaarlijke software kan testen,
experimenteren met nieuwe linux kernels of distributies, en rondneuzen in de
interne zaken van linux, allemaal zonder je eigen Linux installatie naar de
haaien te helpen. Aanpassingen aan Gentoo core packages, zoals
<e>sys-apps/baselayout</e> of <e>sys-libs/glibc</e> hebben het gevaar dat
ze het systeem onbruikbaar maken; met user-mode linux kunnen we deze
aanpassingen testen zonder ons zorgen te maken over het verminken van het
huidige systeem.
</p>
<p>
Het installeren van user-mode linux is essentieel identiek aan die van een
gewone kernel. Allereerst moet je de kernel broncode downloaden (uiteraard met
de nodige patches voor user-mode linux) en daarna moet je deze configureren
zoals je gewend bent voor gewone kernels:
</p>
<pre>
# <i>emerge sys-kernel/usermode-sources</i>
# <i>cd /usr/src/uml/linux</i>
# <i>make menuconfig <comment>ARCH=um</comment></i>
# <i>make linux <comment>ARCH=um</comment></i>
# <i>cp linux /usr/local/bin/linux</i>
</pre>
<warn>
De <e>ARCH=um</e> argument is <e>extreem</e> belangrijk!
</warn>
<impo>
Opdat de user-mode linux kernel correct een Gentoo systeem boot moet de kernel
geconfigureerd zijn om <e>niet</e> automatisch <path>/dev</path> (devfs) te
mounten. Je moet tevens <e>tmpfs</e> activeren (de "Virtual Memory Filesystem")
en in de kernel compileren, aangezien de Gentoo linux bootscripts default in
een kleine tmpfs-partitie hun informatie opslaan. De binaire kernels op de
user-mode website mounten <path>/dev</path> wel automatisch en hebben geen
tmpfs in hen zitten; ze zijn dus uitgesloten voor gebruik.
</impo>
<p>
Ik raad ten zeerste aan om de user-mode linux documentatie te lezen, maar het
basis-idee is om <path>/usr/local/bin/linux</path> uit te voeren, wat de kernel
opstart en dat het systeem in <path>root_fs</path> probeert te booten; dit
laatste bestand moet in de huidige directorie staan.
</p>
<p>
Het zal tevens geen zeer doen als je de user-mode linux tools installeert.
</p>
<pre>
# <i>emerge sys-apps/usermode-utilities</i>
</pre>
<p>
Deze tools vereenvoudigen het netwerk-aspect (samen met andere zaken) tussen de
user-mode linux virtuele systemen en het host Linux systeem.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Aanmaken van <path>root_fs</path></title>

<section>
<title>De Gentoo chroot aanmaken</title>
<body>
<p>
Het <path>root_fs</path> bestand dat nodig is voor user-mode linux is een
bestand dat het volledige Gentoo Linux bestandssysteem bevat. Om dit bestand
aan te maken moet je de Loopback device support in je gewone kernel
gecompileerd hebben.
</p>
<p>
Het creëren van <path>root_fs</path> zelf is onze laatste stap. Eerst zullen we
een Gentoo Linux filesystem aanmaken in een ordinaire chroot. We hebben dus een
stage-tarball nodig, die we ofwel zelf downloaden, of van een liveCD kopieren.
</p>
<pre caption="Een liveCD .iso mounten">
# <i>mkdir /mnt/loop</i>
# <i>mount -o loop /path/to/build-&lt;TAB&gt;.iso /mnt/loop</i>
</pre>
<p>
Het opstellen van de chroot is essentieel identiek aan het installeren van een
Gentoo Linux systeem.
</p>
<pre>
# <i>mkdir /mnt/gentoo</i>
# <i>cd /mnt/gentoo</i>
# <i>tar xvjpf /path/to/build-&lt;TAB&gt;.tar.bz2</i>
</pre>
<p>
Unmount nu de .iso. We hebben die niet meer nodig.
</p>
<pre>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/</i>
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
# <i>mkdir -p /mnt/gentoo/usr/portage/distfiles</i>
# <i>mkdir -p /mnt/gentoo/usr/portage/packages</i>
# <i>mount -o bind /usr/portage/distfiles /mnt/gentoo/usr/portage/distfiles</i>
# <i>mount -o bind /usr/portage/packages /mnt/gentoo/usr/portage/packages</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
<!--per bug 16134, added emerge sync to supress warning, etc-->
# <i>emerge sync</i>
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>
<p>
Door <path>/usr/portage/distfiles</path> te bind-mounten, alsook
<path>/usr/portage/packages</path>, laten we toe om zeer snel ons systeem klaar
te maken indien de packages al beschikbaar waren op het host systeem.
</p>
<p>
Bootstrap en compileer het systeem zoals je gewend bent:
</p>
<pre>
<!--removed the emerge sync below because it is done above-->
# <i>cd /usr/portage</i>
# <i>nano -w /etc/make.conf</i>
# <i>nano -w /etc/make.profile/packages</i> 
# <i>nano -w /usr/portage/profiles/package.mask</i>
# <i>scripts/bootstrap.sh &amp;&amp; emerge --usepkg system</i>
</pre>
<warn>
<!--Changed grub to virtual/bootloader-->
In het <path>/etc/make.profile/packages</path> moet virtual/bootloader
verwijderd worden zodat deze niet meer vereist is voor het systeem (verwijder
gewoon de "*" aan het begin van de "*virtual/bootloader" regel). De
virtual/bootloader ebuild zal nl proberen om de /boot partitie te mounten, wat
in onze chroot zal mislukken.
</warn>
<note>
Zorg ervoor dat <path>/etc/make.profile/packages</path> en
<path>/usr/portage/profiles/package.mask</path> alle packages die je wil testen
niet als gemaskeerd aanduiden. Op dit moment is
<path>scripts/bootstrap.sh</path> gemaakt om de bootstrap packages van broncode
te compileren. Om al bestaande binaire packages te gebruiken, voeg je <c>alias
emege="emerge --usepkg"</c> toe ergens bovenaan het bootstrap script. 
</note>
<p>
Voeg packages toe naar je eigen smaak. Je mag tevens het virtuele Gentoo
systeem een hostname geven als je dat wil. In <path>/etc/fstab</path> moet
<path>/dev/ROOT</path> vervangen worden met <path>/dev/ubd/0</path> met als
fs-type ext2, ext3 of reiserfs. Vervang <path>/dev/SWAP</path> met
<path>/dev/ubd/1</path> en commentarieer <path>/dev/BOOT</path>.
</p>

<p>
Vergeet niet je root-paswoord in te stellen!
</p>

<pre caption="Het root wachtwoord instellen">
# <i>passwd</i>
</pre>

<p>
Ga uit de chroot-omgeving, unmount alle bind-mounts, maak een tar van de Gentoo
installatie en ruim de boel op:
</p>
<pre>
# <i>exit</i>
# <i>umount /mnt/gentoo/usr/portage/distfiles</i>
# <i>umount /mnt/gentoo/usr/portage/packages</i>
# <i>umount /mnt/gentoo/proc</i>
# <i>du -ks /mnt/gentoo</i>
<!-- wtf is this? 261744/mnt/gentoo-->
<!-- added dir change to be more explicit-->
# <i>cd /mnt/gentoo</i>
# <i>tar cvjpf ~/gentoo.tbz2 *</i>
# <i>cd</i>
# <i>rm -rf /mnt/gentoo</i>
</pre>

</body>
</section>

<section>
<title>Aanmaken van <path>root_fs</path></title>
<body>
<p>
Onze Gentoo chroot is bijna 300 MiB groot, dus <path>root_fs</path> moet
minstens even groot zijn. We kiezen 0,5 GiB wat voldoende ruimte laat voor
experimenten.
</p>
<pre>
# <i>dd if=/dev/zero of=root_fs seek=500 count=1 bs=1M</i>
# <i>mke2fs -F root_fs</i>
# <i>mount -o loop root_fs /mnt/loop</i>
# <i>tar xvjpf gentoo.tbz2 -C /mnt/loop</i>
# <i>umount /mnt/loop</i>
</pre>
<p>
Het is tevens leuk om een 0,5 GiB swap-partitie te creëren.
</p>
<pre>
# <i>dd if=/dev/zero of=swap_fs seek=500 count=1 bs=1M</i>
# <i>mkswap -f swap_fs</i>
</pre>
<p>
Kijk nu of dit werkt
</p>
<pre>
# <i>linux ubd0=root_fs ubd1=swap_fs</i>
</pre>
<note>
User-mode linux gebruikt xterms als virtuele consoles die tijdens het booten
aangemaakt worden, dus zorg ervoor dat de terminal van waaruit je user-mode
linux draait een correcte $DISPLAY heeft (samen met de correcte xhost/xauth
permissies).
</note>
<p>
Met wat geluk kan je nu inloggen op je user-mode linux Gentoo systeem. Het
enige verschil tussen dit systeem en je werkelijk systeem wat betreft
functionaliteit is het netwerk-aspect. 
</p>
</body>
</section>
</chapter>

<chapter>
<title>Netwerk</title>

<section>
<body>
<p>
Met dank aan Martin Schlemmer (Azarah) weet ik nu hoe je het netwerk werkende
krijgt vanuit een user-mode linux systeem. Het idee is dat we een privaat
netwerk opstellen bestaande uit de user-mode linux systemen en het host
systeem, waarna het user-mode linux systeem alle pakketten naar het
host-systeem stuurt, die ze op zich naar het internet doorstuurt. Zorg ervoor
dat de host kernel &quot;Networking --> IP: Netfilter Configuration --> IP
tables suppoer --> Full NAT --> MASQUERADE target support en Network Device
Support --> Ethertap network tap&quot; in zich heeft. Voer nu de volgende
commando's uit (de eerste 2 enkel indien je met modules werkt):
</p>
<pre>
# <i>modprobe ethertap</i>
# <i>modprobe iptable_nat</i>
# <i>iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</i>
# <i>echo 1 > /proc/sys/net/ipv4/ip_forward</i>
</pre>
<p>
De iptables regel stelt IP Masquerading in tussen het private netwerk waarop
ons user-mode linux-systeem zal draaien en het internet (via <c>eth0</c> in ons
voorbeeld). De echo-regel activeert dan packet forwarding tussen het private
netwerk en de interface dat als default gateway zal fungeren (eth0 hier).
</p>
<p>
We starten nu het user-mode linux systeem en kijken of het netwerk
functioneert.
</p>
<pre>
# <i>linux ubd0=root_fs ubd1=swap_fs eth0=ethertap,tap0,,192.168.0.254</i>
<comment>(login to user-mode system)</comment>
# <i>ifconfig eth0 192.168.0.1 up</i>
# <i>ping -c 2 192.168.0.254</i>
PING 192.168.0.254 (192.168.0.254): 56 octets data
64 octets from 192.168.0.254: icmp_seq=0 ttl=255 time=0.8 ms
64 octets from 192.168.0.254: icmp_seq=1 ttl=255 time=0.6 ms

--- 192.168.0.254 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.6/0.7/0.8 ms
<i>route add default gw 192.168.0.254</i>
<i>netstat -rn</i>
Kernel IP routing table
Destination  Gateway        Genmask        Flags MSS Window irtt Iface
192.168.0.0  0.0.0.0        255.255.255.0  U      40 0         0 eth0
0.0.0.0      192.168.0.254  0.0.0.0        UG     40 0         0 eth0
<i>scp user@192.168.0.254:/etc/resolv.conf /etc/resolv.conf</i> <comment>(indien nodig)</comment>
<i>ping -c 2 www.gentoo.org</i>
PING www.gentoo.org (207.170.82.202): 56 octets data
64 octets from 207.170.82.202: icmp_seq=0 ttl=240 time=119.6 ms
64 octets from 207.170.82.202: icmp_seq=1 ttl=240 time=92.0 ms

--- www.gentoo.org ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 92.0/105.8/119.6 ms
</pre>
<p>
Op het user-mode systeem geven we de eth0-interface het IP 192.168.0.1 en
starten de interface op. De host heeft als privaat IP 192.168.0.254, en we
pingen deze om te zien of het lokale netwerk werkt - wat hier het geval is. De
route-regel stelt dan de default gateway in (namelijk het host-systeem), en we
gebruiken scp om een werkende <path>/etc/resolv.conf</path> (indien nodig)
binnen te halen. Hierna pingen we www.gentoo.org om te zien of DNS werkt in ons
user-mode linux systeem - wat ook hier het geval is. Het user-mode linux
systeem zal dus nu perfect gebruik kunnen maken van het <c>emerge</c> commando.
</p>
</body>
</section>
</chapter>

<chapter>
<title>De .iso testen</title>

<section>
<body>
<p>
Het summum van het testen van Gentoo Linux is waarschijnlijk het bootan van de
.iso met user-mode linux om zo een volledige Gentoo installatie te doen vanuit
een user-mode linux virtueel systeem.
</p>
<p>
Het booten van de .iso, of meer specifiek de initrd van de .iso, is zeer
eenvoudig:
</p>
<pre>
# <i>mount -o loop /path/to/build-&lt;TAB&gt;.iso /mnt/loop</i>
# <i>cp /mnt/loop/isolinux/rescue.gz .</i>
# <i>linux load_ramdisk=1 prompt_ramdisk=0 ramdisk_size=22000 \</i>
&gt; <i>initrd=rescue.gz root=/dev/ram0 ubd0=root_fs ubd1=swap_fs \</i>
&gt; <i>ubd2=/dev/cdroms/cdrom0 eth0=ethertap,tap0,,192.168.0.254</i>
</pre>
<p>
Je kan nu de Gentoo Installatie Handleiding tot in de puntjes volgen, alhoewel
je wel moet weten dat de root bestandssysteem nu <path>/dev/ubd/0</path> is, de
swappartitie <path>/dev/ubd/1</path> en de CD-ROM <path>/dev/ubd/2</path>.
</p>
</body>
</section>
</chapter>


</guide>
