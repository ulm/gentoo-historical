<?xml version="1.0" encoding="UTF-8"?>

<!--
    English doc rev. 1.16
-->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/nl/altinstall.xml">
<title>De Gentoo Linux alternatieve installatie-methode HOWTO</title>
<author title="Author">
    <mail link="lordviram@rebelpacket.net">Travis Trilley</mail>
</author>
<author title="Contributor">
    <mail link="davoid@gentoo.org">Faust A. Tanasescu</mail>
</author>
<author title="Contributor">
    <mail link="aliz@gentoo.org">Daniel Ahlberg</mail>
</author>
<author title="Contributor">
    <mail link="gerrynjr@gentoo.org">Gerald Normandin Jr.</mail>
</author>
<author title="Contributor">
    <mail link="volontir@yahoO.com">Oleg Raisky</mail>
</author>
<author title="Contributor">
    <mail link="luminousit@hotmail.com">Alex Garbutt</mail>
</author>
<author title="Contributor">
    <mail link="alex@openvs.com">Alexandre Georges</mail>
</author>
<author title="Editor, Translator">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Reviewer">
    <mail link="antifa@gentoo.org">Ken Nowack</mail>
</author>
<author title="Contributor">
    <mail link="vargen@b0d.org">Magnus Backanda</mail>
</author>
<author title="Translator">
    <mail link="rgoessen@home.nl">Roderick Goessen</mail>
</author>
<author title="Translator">
	<mail link="blubber@gentoo.org">Tiemo Kieft</mail>
</author>

<abstract>
Deze HOWTO heeft als doel een aantal alternatieve installatiemanieren voor 
Gentoo aan te kaarten, dit voor mensen die de gewone manier niet kunnen 
voltooien wegens bijvoorbeeld het ontbreken van een (bootable) cdrom-drive.
</abstract>

<version>0.32</version>
<date>7 September 2003</date>

<chapter>
<title>Over dit document</title>
<section>
<body>
<p>
Wanneer de standaard boot-van-cd installatie methode niet werkt (of
als deze methode je gewoon niet bevalt), dan moet je deze HOWTO zeker
lezen. De bedoeling van dit document is om als een soort van vergaarbak
te dienen waarin de verschillende wijzes beschreven worden waarop
Gentoo Linux ge&#239;nstalleerd kan worden. Als je zelf een
installatie-methode kent die je erg handig of grappig vindt, twijfel
dan niet om deze installatie-wijze te beschrijven, maar stuur het naar
<mail link="antifa@gentoo.org">mij.</mail>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Booten met de LiveCD en de Smart BootManager</title>
<section>
<body>
<p>
Download de Smart BootManager van
<uri>http://btmgr.sourceforge.net/index.php3?body=download.html</uri>.
Linux broncode of binair formaat alsook windows .exe bestanden zijn
beschikbaar tesamen met taalpakketten. Op dit moment raden we je aan om
het binair formaat te nemen aangezien de broncode niet zal compileren
met nieuwe versies van nasm.
</p>

<p>
Compileer het pakket van broncode of neem de binaire versie. Er zijn
verschillende opties die je kan gebruiken terwijl je je boot floppy
aanmaakt zoals hierna vermeld.
</p>

<pre caption = "Smart BootManager Options">
sbminst [-t theme] [-d drv] [-b backup_file] [-u backup_file]
-t theme     select the theme to be used, in which the theme could be:
               us = English theme       de = German theme
               hu = Hungarian theme     zh = Chinese theme
               ru = Russian theme       cz = Czech theme
               es = Spanish theme       fr = French theme
               pt = Portuguese theme

-d drv       set the drive that you want to install Smart BootManager on;
               for Linux:
                    /dev/fd0 is the first floppy driver,
                    /dev/hda is the first IDE harddisk driver.
                    /dev/sda is the first SCSI harddisk driver.
               for DOS:
                    0   is the first floppy drive
                    128 is the first hard drive;

-c           disable CD-ROM booting feature;
     
-b backup_file backup the data that will be overwrited for future uninstallation;

-u backup_file uninstall Smart BootManager, should be used alone;
     
-y             do not ask any question or warning.
</pre>

<pre caption = "Gebruik maken van sbminst om de bootfloppy te maken">
# <i>sbminst -t us -d /dev/fd0</i>
</pre>

<note>
Vervang fd0 met je floppy device naam indien de jouwe anders is.
</note>

<p>
Plaats nu simpelweg de floppy in de floppydrive van de computer van
welke je de LiveCD wil booten, tesamen met de LiveCD (in de CD-ROM drive
dan) en boot de computer.
</p>

<p>
Je zal begroet worden met de Smart BootManager dialog. Selecteer je
CD-ROM en druk op Enter om de LiveCD te booten. Eenmaal geboot ga dan
verder met de standaard installatieinstructies.
</p>

<p>
Voor meer informatie over Smart BootManager, ga naar
<uri>http://btmgr.sourceforge.net</uri>.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Knoppix Installatie</title>
<section>
<body>

<p>
Booten van de <uri link="http://www.knoppix.org">Knoppix</uri> LiveCD is
een manier om een volledig werkend Linux systeem te hebben terwijl je
Gentoo aan het installeren bent. TuxRacer zal je helpen de tijd te doden
terwijl je op de bootstrap aan het wachten bent.
</p>

<p>
Boot van de Knoppix CD. Het doet algemeen gezien een goede hardware
detectie. Het kan wel voorkomen dat je wat bootopties zal moeten
meegeven.
</p>

<p>
Per default boot Knoppix een KDE 3.0 desktop. Het eerste wat je doet is
een konsole opstarten en <c>sudo passwd root</c> uitvoeren. Hiermee stel
je Knoppix' root paswoord in.
</p>

<p>
Vervolgens su je naar root en type je <c>usermod -d /root -m root</c>
in. Dit stelt de gebruiker haar root homedirectory in op /root in plaats
van /home/root (welke Knoppix gebruikt). Indien je dat niet doet zal je
foutmeldingen krijgen in de aard van "/home/root: not found" en
gelijkaardig.
</p>

<p>
Hierna type je <c>exit</c> en <c>su</c> je terug naar root. Hiermee
start je de aanpassingen die je met het usermod commando gemaakt hebt.
Vanaf nu kan je verder gaan met de standaard installatie documentatie
stappen vanaf stap 6. Echter als je gevraagt wordt het proc systeem, dan 
geef je de volgende commando's inplaats van de commando's die daar staan:
</p>

<pre caption="Het bind-mounten van twee belangrijke bestadssystemen">
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Installeren vanaf niveau 1 zonder netwerk toegang</title>
<section>
<body>

<p>
Brand een LiveCD iso.
</p>

<p>
Download de laatste portage snapshot van
<uri>http://distro.ibiblio.org/pub/linux/distributions/gentoo/snapshots/</uri>
(of vanuit je favoriete <uri
link="http://www.gentoo.org/main/en/mirrors.xml">mirror</uri>). Plaats
deze tarball ergens op een bestaande partitie of brand deze op CD.
</p>

<p>
Je moet tevens een lijst van pakketten hebben voor de stage pakketten.
Plaats het volgende script op hetzelfde medium als de Portage snapshot,
je zal je nl later nodig hebben.
</p>

<pre caption = "dl-list.sh">
#!/bin/bash

# set your defaults here:
user_defs() {
 
  # portage directory (without a trailing "/"):
  portage_dir="/usr/portage"
 
  # default download mirror (without a trailing "/"):
  gentoo_mirror="http://www.ibiblio.org/pub/Linux/distributions/gentoo"
 
  # default sourceforge mirror (unc, telia, belnet):
  sourceforge_mirror="unc"
 
  # fix gnu mirror entries
  gnu_url="ftp:\/\/ftp.gnu.org\/pub\/gnu"
 
}


#------------------------------------------------------------

# function to remove temporary files
cleanup() {
 
  rm -f $temp_file_1 $temp_file_2
  exit $1
 
}

# set user defaults
user_defs

# set the complete url for the sourceforge mirror
# (the \'s are needed because this goes in a sed command)
sourceforge_mirror_complete="http:\/\/$sourceforge_mirror.dl.sourceforge.net\/sourceforge"

# initialize counters
num_files=0
num_alt_urls=0
total_size=0

# initialize lists (arrays)
declare -a def_urls_arr
declare -a alt_urls_arr

# create 2 temporary files
temp_file_1=`mktemp -t dl-list.XXXXXX` || cleanup 1
temp_file_2=`mktemp -t dl-list.XXXXXX` || cleanup 1

# run "emerge -p &lt;args&gt;" (too easy to forget the "-p" in the command line...)
emerge -p $@ &gt; $temp_file_1 || cleanup 1

# remove the lines that do not contain the word "ebuild"
sed -n -e '/ebuild/p' $temp_file_1 &gt; $temp_file_2

# count how many lines were left
num_ebuilds=`wc -l $temp_file_2 | sed -e 's/\(.*\) \(.*\)/\1/'`

# extract the useful information from those lines: category, package and version
#sed -e 's:\(.*\) \(.*\)/\(.*\)-\([0-9].*\) \(.*\) \(.*\):\2 \3 \4:' $temp_file_2 &gt; $temp_file_1
sed -e 's:\(.*\) \(.*\)/\(.*\)-\([0-9].*\):\2 \3 \4:' $temp_file_2 &gt; $temp_file_1

# display starting message :)
echo -n "Generating list " &gt;&amp;2

# process each package in turn
while read category package version rest
do
 
  # form the name of the digest file

digest_file="$portage_dir/$category/$package/files/digest-$package-$version"
 
  # process the contents of the digest file
  while read md5_flag md5_sum file_name file_size
  do
   
    # form the default url to download the file
    def_urls_arr[$num_files]="$gentoo_mirror/distfiles/$file_name"
   
    # increment the file counter
    num_files=$(($num_files + 1))
   
    # update the size accumulator (in kilobytes)
    total_size=$(($total_size + $file_size / 1024))
   
  done &lt; $digest_file

  # form the "ebuild depend" command line
  ebuild_depend_cmd="ebuild $portage_dir/$category/$package/$package-${version}.ebuild depend"

  # execute the "ebuild depend" command
  $ebuild_depend_cmd || cleanup 1

  # form the name of the dependency file
  dependency_file="/var/cache/edb/dep/$category/$package-$version"

  # read in the 4th line from the dependency file,
  # which contains the official download urls
  alt_urls=`head -n 4 $dependency_file | tail -n 1`
 
  # ignore empty url list
  if [ -n "$alt_urls" ]
  then
   
    # split the urls list into $1..$N
    set $alt_urls
   
    # process each url in turn
    for i in $@
    do
     
      # remove the (use)? strings from the url list
      alt_url_tmp=`echo "$i" | sed -e '/\?$/d'`
     
      # remove the "mirror://gnome" urls
      alt_url_tmp=`echo "$alt_url_tmp" | sed -e '/^mirror:\/\/gnome/d'`
     
      # remove the "mirror://kde" urls
      alt_url_tmp=`echo "$alt_url_tmp" | sed -e '/^mirror:\/\/kde/d'`
     
      # remove the "mirror://gentoo" urls (already included)
      alt_url_tmp=`echo "$alt_url_tmp" | sed -e '/^mirror:\/\/gentoo/d'`
     
      # translate the "mirror://sourceforge" urls into valid urls
      alt_url_tmp=`echo "$alt_url_tmp" | sed -e "s/mirror:\/\/sourceforge/$sourceforge_mirror_complete/"`

      # translate the "mirror://gnu" urls into valid urls
      alt_url_tmp=`echo "$alt_url_tmp" | sed -e "s/mirror:\/\/gnu/$gnu_url/"`
      # ignore empty urls
      if [ -n "$alt_url_tmp" ]
      then
       
        # add the url to the list
        alt_urls_arr[$num_alt_urls]=$alt_url_tmp
       
        # increment the alternate url counter
        num_alt_urls=$(($num_alt_urls + 1))
       
      fi
     
    done
   
  fi

  # a progress bar :)
  echo -n "." &gt;&amp;2

done &lt; $temp_file_1

# display ending message :)
echo " done." &gt;&amp;2

# display default urls list
for i in ${def_urls_arr[@]}; do echo $i; done | sort

# display alternate urls list
for i in ${alt_urls_arr[@]}; do echo $i; done | sort

# display totals
echo "Totals:" $num_ebuilds "ebuilds," $num_files "files," $num_files "default urls," \n
$num_alt_urls "alternate urls," "${total_size}Kb." &lt;&amp;2

# remove temporary files and exit
cleanup 0
</pre>

<p>
Volg alle instructies van de Gentoo Installatie Handleiding tot "chroot
/mnt/gentoo" in stap 8. Indien je maar 1 CD-ROM hebt, vergeet niet om
de bootoptie <c>cdcache</c> te gebruiken als je boot, want anders kan je
de LiveCD niet unmounten om je portage snapshot CD te mounten.
</p>

<p>
Voer "passwd" uit en stel een nieuw paswoord in voor root. Open een
nieuwe virtuele console (Alt-F2) en login als root met je nieuw
paswoord.
</p>

<p>
Op de nieuwe console ga je verder met de installatie tot aan het
uitvoeren van het bootstrap.sh script.
</p>

<p>
Ga terug naar de originele console en mount de tweede CD op
<c>/mnt/gentoo/mnt/cdrom2</c>. Kopieer de portage tarball van deze cd en
pak deze uit in <path>/mnt/gentoo/usr/portage</path>. Kopieer dan het
<path>dl-list.sh</path> script en plaats ze in <path>/usr/sbin</path> en
maak ze uitvoerbaar.
</p>

<pre caption = "De snapshot CD mounten en de stappen uitvoeren">
# <i>umount /mnt/cdrom</i>
# <i>mkdir /mnt/gentoo/mnt/cdrom2</i>
# <i>mount /dev/cdroms/cdrom0 /mnt/gentoo/mnt/cdrom2</i>
# <i>cp /mnt/gentoo/mnt/cdrom2/portage-*.tar.bz2 /mnt/gentoo/usr/portage</i>
# <i>cp /mnt/gentoo/mnt/cdrom2/dl-list.sh /mnt/gentoo/usr/sbin</i>
# <i>cd /mnt/gentoo/usr/portage</i>
# <i>tar xvjpf portage-*.tar.bz2</i>
# <i>chmod +x /mnt/gentoo/usr/sbin/dl-list.sh</i>
</pre>

<p>
Ga nu terug naar de andere console. Indien je nu bootstrap.sh wil
uitvoeren zal dit mislukken aangezien je geen bestanden kan downloaden.
We zullen deze bestanden ergens anders downloaden en deze in
/usr/portage/distfiles plaatsen (via de andere console).
</p>

<p>
Je moet een lijst van stage1-pakketten hebben: glibc, baselayout,
texinfo, gettext, zlib, binutils, gcc, ncurses alsook hun afhankelijke
pakketten.
</p>

<note>
Je moet er tevens voor zorgen dat je de versie van het pakket gebruikt
dat met je Portage structuur overeen komt.
</note>

<p>
Gebruik nu de dl-list.sh script om de lijst van pakketten die je nodig
hebt aan te maken. Kopieer deze lijst dan naar een floppy.
</p>

<pre caption = "Gebruik maken van dl-list.sh">
# <i>dl-list.sh glibc baselayout texinfo gettext zlib binutils gcc ncurses > stage1.list</i>
# <i>mount -t vfat /dev/fd0 /mnt/floppy</i>
# <i>cp /mnt/gentoo/stage1.list /mnt/floppy</i>
# <i>umount /mnt/floppy</i>
</pre>

<p>
Breng deze floppy naar een machine met een snelle internettoegang en
geef deze lijst aan wget:
</p>

<pre caption = "Wget gebruiken om de pakketten te downloaden">
# <i>wget -N -i stage1.list</i>
</pre>

<p>
Eenmaal je alle bestanden gedownload hebt brand je ze op CD en kopieer
je ze naar <path>/mnt/gentoo/usr/portage/distfiles</path> op de PC waar je
Gentoo aan het installeren bent. Je kan dan <c>bootstrap.sh</c>
uitvoeren. Herhaal deze stappen voor de stage2 en stage3 procedures.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Netboot installatie</title>
<section>
<title>Benodigdheden </title>
<body>
<p>
Voor een netboot installatie heb je een host-computer nodig die als een
tftp server kan dienen. Daarnaast heb je een computer nodig die vanaf
een netwerk kan booten aan de hand van het BIOS of een diskette die
gebruik maakt van GRUB, of een andere netwerk bootloader. Een dhcp
server kan ook nodig zijn. Natuurlijk heb je ook de Gentoo ISO
nodig. Deze kan je vinden op <uri
link="http://distro.ibiblio.org/pub/linux/distributions/gentoo/releases/">http://distro.ibiblio.org/pub/linux/distributions/gentoo/releases/</uri>
</p>

<note>
Wegens verschillen in LiveCDs werkt deze methode enkel met de 1.2
LiveCD.
</note>

</body>
</section>

<section>
<title>Samenvatting</title>
<body>
<p>
Om in staat te zijn images van het netwerk te laden, is een IP adres
aanvragen het eerste wat je computer moet doen. Er zijn verschillende
manieren om een IP adres te krijgen, en iedere methode zal geschikt
zijn. Persoonlijk geef ik de voorkeur om GRUB voor alles te gebruiken,
maar als je computer al booting vanaf een netwerk ondersteund zal je
GRUB hiervoor niet nodig hebben. Het kan echter eenvoudiger zijn om
het GRUB <c>ifconfig</c> commando te gebruiken.
</p>

<p>
Zodra je computer een IP adres verkregen heeft, is de volgende logische
stap om uit te zoeken wat je wilt gaan booten, en wat de locatie van
het te booten bestand is. Nogmaals, het makkelijkst zou het zijn om
GRUB voor alles te gebruiken. Je zal ook moeten aangeven hoe je aan de
initrd denk te kunnen komen en je zal de kernel moeten vertellen dit
als zijn root's bestandssysteem te gebruiken.
</p>

<p>
Als je computer de kernel geladen, het een IP adres verkregen heeft en
het bestandssysteem geladen is kun je op de normale manier verdergaan
met de installatie. Het build image kan dan geladen worden vanaf een cd
of via het netwerk gedownloaded worden via tftp.
</p>

</body>
</section>
<section>
<title>Het gebruik van GRUB</title>
<body>
<p>
Om GRUB te gebruiken met de bedoeling om van een netwerk te booten,
moet je eerst GRUB gecompileerd hebben met support voor je netwerkkaart.
Het maakt niet uit of je GRUB installeert op een diskette of op de
harde schijf van de computer waarop je Gentoo wilt installeren. Als je
doel-computer al GRUB met support voor je netwerkkaart heeft, dan lig
je een stap voor. GRUB kan gedownload worden van
<uri link="ftp://alpha.gnu.org/gnu/grub/">ftp://alpha.gnu.org/gnu/grub/</uri>
</p>

<p>
Een configuratie-voorbeeld voor het ondersteunen van Tulip-support, de 
netwerkkaart in mijn computer:
</p>

<pre caption="Handmatige GRUB installatie">
# <i>./configure --enable-Tulip --prefix=/usr</i>
# <i>make &amp;&amp; make install</i>
</pre>

<p>
Als je op dit moment in Gentoo zit en GRUB via de Gentoo tools wilt
installeren, dan moet je dit stap voor stap installeren om support voor
je netwerkkaart te krijgen. Een voorbeeld van het gebruik van een
ebuild om GRUB te installeren met Tulip support:
</p>

<pre caption="Installeren en configureren GRUB op Gentoo Linux">
# <i>ebuild /usr/portage/sys-apps/grub/grub-0.91.ebuild clean fetch unpack</i>
# <i>cd /var/tmp/portage/grub-0.91/work/grub-0.91/</i>
# <i>./configure --prefix=/usr --sbindir=/sbin --mandir=/usr/share/man \ </i>
&gt; <i>--infodir=/usr/share/info --enable-Tulip</i>
# <i>make</i>
# <i>touch /var/tmp/portage/grub-0.91/.compiled</i>
# <i>cd /usr/portage/</i>
# <i>ebuild sys-apps/grub/grub-0.91.ebuild install merge</i>
</pre>

<p>
Nu we de GRUB shell ge&#239;nstalleerd hebben, moeten we het op een
bootsector zetten. Hoewel je GRUB op een bootsector van je harde schijf
zou kunnen zetten, gaan wij ervan uit dat je GRUB op een diskette wilt
zetten. Er zijn twee manieren om dit te doen. Je kan de GRUB shell zelf
hiervoor gebruiken, maar ook een bijgeleverd script dat <c>grub-install</c> 
heet. Het wordt aangeraden <c>grub-install</c> te gebruiken wanneer je dit 
op een diskette wilt installeren.
</p>

<pre caption="GRUB-installatie voorbeeld">
# <i>mkfs.ext2 /dev/fd0</i>
# <i>mount /dev/fd0 /mnt/floppy/</i>
# <i>grub-install --root-directory=/mnt/floppy/ '(fd0)'</i>
# <i>umount /mnt/floppy/</i>
</pre>

<p>
<c>grub-install</c> werkt niet altijd... en is niet altijd de beste
manier om GRUB te installeren. Omdat de GRUB shell precies hetzelfde
werkt als GRUB wanneer deze geboot wordt, is het wenselijk om gewoon de
GRUB shell te gebruiken. Hier is een voorbeeld hoe je de shell gebruikt
om GRUB op een diskette te installeren:
</p>

<pre caption="De GRUB shell gebruiken">
# <i>mkfs.ext2 /dev/fd0</i>
# <i>mount /dev/fd0 /mnt/floppy/</i>
# <i>mkdir -p /mnt/floppy/boot/grub/</i>
# <i>cp -v /usr/share/grub/i386-pc/* /mnt/floppy/boot/grub/</i>
# <i>grub</i>
grub&gt; <i>root (fd0)</i>
grub&gt; <i>setup (fd0)</i>
grub&gt; <i>quit</i>
# <i>umount /mnt/floppy/</i>
</pre>

<p>
Nu we een bootable GRUB-diskette hebben, dienen we de host tftp server
op te zetten om te kernel en initrd te kunnen laden. Netkit's tftp
server wordt hiervoor aanbevolen. Als je inetd gebruikt, dan moet je in
de laatste regel van je <path>/etc/inetd.conf</path> deze regel
toevoegen:
</p>

<pre caption="/etc/inetd.conf">
tftp	dgram	udp	wait	nobody	/usr/sbin/tcpd	in.tftpd
</pre>

<p>
Om de netkit tftp server te installeren onder Gentoo Linux, moet je
<c>emerge net-misc/netkit-tftp</c> invoeren.
</p>


<note>
Er is een ebuild voor xinetd... als je hieraan de voorkeur geeft ben je
vrij om dit te doen. Ikzelf gebruik geen xinetd en weet ook niet hoe je
tftp hierop moet instellen. Als je xinetd gebruikt, stuur me dan a.u.b.
informatie over hoe je dit voor elkaar gekregen hebt. Ik zal deze
informatie in deze HOWTO neerzetten.
</note>

<p>
Nu we klaar zijn met onze tftp server, moeten we er een kernel en root
initrd in zetten. Je kan een aangepaste kernel ervoor compilen, maar
zorg er dan wel voor dat je zeker weet dat je er alle dingen inzet die
nodig zijn om een succesvolle Gentoo Linux installatie ermee uit te
kunnen voeren. Denk hierbij aan devfs, en voor netbooting initrd
support. De root initrd zal de rescue.gz zijn, die in de Gentoo Linux
ISO zit.
</p>


<impo>
Om een ISO te mounten zonder deze op cd te branden heb je loopback
filesystem support nodig.
</impo>


<pre>
# <i>mkdir /tftpboot</i>
# <i>mount -o loop /path/to/gentoo-ix86-1.1a.iso /mnt/cdrom/</i>
# <i>cp /mnt/cdrom/isolinux/kernel /mnt/cdrom/isolinux/rescue.gz /tftpboot</i>
# <i>chmod 644 /tftpboot/*</i>
# <i>umount /mnt/cdrom/</i>
</pre>


<p>
Boot de computer waarop je Gentoo wilt installeren van je ontzettend
handige GRUB diskette. Zodra GRUB geladen is, moet je een manier
opgeven waarop je je computer een IP adres wilt laten toewijzen en
zeggen waar de kernel en initrd zich bevinden.
</p>

<pre>
grub&gt; <i>ifconfig --address=</i><comment>(ip adres)</comment><i> --server=</i><comment>(ip adres)</comment><i>192.168.0.2</i>
grub&gt; <i>root (nd)</i>
grub&gt; <i>kernel /tftpboot/kernel devfs=nomount vga=normal load_ramdisk=1 </i>
      <i>prompt_ramdisk=0 ramdisk_size=24000 root=/dev/ram0 rw</i> <codecomment>(allemaal op 1 regel)</codecomment>
grub&gt; <i>initrd /tftpboot/rescue.gz</i>
grub&gt; <i>boot</i>
</pre>


<note>
Je kan boop en dhcp ook gebruiken om je IP via GRUB te configureren.
Gebruik daarvoor de bootp en dhcp commando's.
</note>

<p>
Nu dat je je computer geboot hebt kun je de installatie op de
gebruikelijke wijze voortzetten. Gebruik voor de normale
installatie-methode de HOWTO die hiervoor geschreven is. 
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installeren van Gentoo vanaf een bestaande Linux distributie</title>
<section>
<title>Benodigdheden</title>
<body>
<p>
Om Gentoo vanaf een bestaande Linux distributie te installeren, dien je
het chroot commando ge&#239;nstalleerd te hebben. Daarnaast moet je een
kopie van de Gentoo Linux installatie tarball of ISO hebben. Ook wordt
er de voorkeur gegeven aan een internetverbinding zodat je meer op je
systeem kunt zetten dan dat in de tarball of ISO zit. Een tarball is
overigens een bestand dat eindigt op .tbz of .tar.gz. De schrijver
gebruikt RedHat Linux 7.3 als besturingssysteem, maar dat is verder
niet erg belangrijk voor deze installatie-methode. Let's get started! 
</p>

</body>
</section>
<section>
<title>Samenvatting</title>
<body>
<p>
We zullen eerst een partitie aan Gentoo toewijzen door onze bestaande
Linux partitie te veranderen in grootte. Dan mounten we deze nieuwe
partitie, pakken de tarball uit die gemount is, chrooten in het
proto-systeem en beginnen met het compilen. Zodra het bootstrap-proces
afgerond is, zullen er nog enkele configuraties toegepast worden zodat
we zeker weten dat het systeem wil booten. Zodra we dat gedaan hebben
zijn we zover dat we de computer opnieuw kunnen opstarten, en Gentoo
Linux kunnen laden. 
</p>
</body>
</section>
<section>
<title>Hoe zouden we plek kunnen maken voor Gentoo Linux?</title>
<body>
<p>
De root partitie is het bestandssysteem gemount onder "/". Het mount
commando laat zien waar ik het over heb. We zullen ook df (disk free)
gebruiken om te zien hoeveel ruimte ik over heb, en hoe ik mijn
partitie zal resizen. Merk op dat het niet verplicht is je root
partitie in grootte te veranderen! Je kan alles resizen waar onze
resizer support aan biedt. Hier komen we zo op terug. 
</p>

<pre caption="Bestandssysteem informatie">
# <i>mount</i>
/dev/hdb2 on / type ext3 (rw) 
none on /proc type proc (rw) 
none on /dev/pts type devpts (rw,gid=5,mode=620) 
none on /dev/shm type tmpfs (rw) 
# <i>df -h </i>
Filesystem           Size Used Avail Use% Mounted on 
/dev/hdb2            4.0G 1.9G  2.4G  82% /
none		      38M    0    38M   0% /dev/shm 
</pre>


<p>
Zoals we kunnen zien heeft de partitie die gemount is als "/" de naam
/dev/hdb2, waarop 2.4 gigabyte ruimte is. In mijn geval denk ik dat ik
deze partitie op een manier ga aanpassen, zodat er nog maar 400
megabyte vrije ruimte op is. Er gaan dus 2 gigabyte naar de Gentoo
Linux partitie. Niet slecht, daar kan flink wat op ge&#239;nstalleerd
worden. Voor de meeste gebruikers zal 1 gigabyte al ruim genoeg zijn.
Laten we dit ding partitioneren!
</p> 

</body>
</section>
<section>
<title>Parted installeren om een partitie te resizen</title>
<body>
<p>
Parted is een programma dat geleverd wordt door de GNU stichting. Dit
is een oud, respectvol en enorm project, wiens software je op dit moment
gebruikt. Er is een zeker programma dat extreem bruikbaar is op dit
moment. De naam is parted, een partitie editor dat verkrijgbaar is op
<uri link="http://www.gnu.org/software/parted/">http://www.gnu.org/software/parted/</uri> 
</p>

<note>
Er zijn andere tools om partities te resizen. De schrijver is echter
onzeker of niet ge&#239;nteresseerd in PartitionMagic(tm) of andere
software die hetzelfde doen. Het is de taak van de lezer om dit uit te
zoeken.
</note>

<p> 
Zoek op die pagina het soort bestandssysteem dat je wilt resizen, en
kijk of parted dat aankan. Zoniet, pech gehad. Je zal een complete
partitie moeten opofferen om ruimte te kunnen maken voor Gentoo Linux.
Download de software en installeer het vervolgens. Nu lopen we tegen
een probleem aan. We willen de root partitie resizen, en daarom moeten
we van een diskette booten dat een minimaal Linux systeem bevat. Ook
parted dient op de diskette te staan. Dit opstarten vanaf diskette is
nodig om "/" te kunnen resizen. Als je de partitie kunt unmounten
terwijl je onder Linux zit, heb je geluk. Je hoeft dan niet te doen wat
hieronder beschreven wordt. Compileer simpelweg parted, en start het
vanaf een unmounted partitie die je graag wilt resizen. Hieronder wordt
beschreven hoe ik het heb gedaan voor mijn systeem.
</p>


<impo>
Wees er zeker van dat de dingen die je wilt gaan doen ondersteund
worden door parted!
</impo>

<p>
Download tomsrtbt boot/root diskette (gratis) van <uri
link="http://freshmeat.net/tomsrtbt">http://freshmeat.net/tomsrtbt</uri> en 
maak een diskette zoals gesuggereerd wordt in de documentatie die meegeleverd 
wordt in het bestand dat je zojuist gedownloaded hebt. Zodra je diskette klaar 
is, kan je je computer herstarten en deze van de diskette laten booten. 
</p>


<note>
Merk op dat Linux is synoniem is aan "Er zijn meerdere manieren om het
te doen". Het uiteindelijke doel is om parted op een unmounted partitie
te hebben, zodat het zijn werk kan doen. Misschien gebruik je een
andere boot/root diskette dan tomsrtbt. Misschien is het zelfs helemaal
niet nodig om deze stap uit te voeren als het bestandssysteem al
geunmount is.
</note>


<pre caption="Utilitydisk formatteren">
# <i>mkfs.minix /dev/fd0</i>
480 inodes
1440 blocks
Firstdatazone=19 (19)
Zonesize=1024
Maxsize=268966912
</pre>


<note>
We gaan nu verder met parted. Als het nog niet gedownloaded en untarred
hebt, doe dat dan nu. Zorg dat je in doe juiste directory zit, en voer
de volgende commando's in. 
</note>

<pre caption="Utilityfloppy configureren">
# <i> mkdir /floppy; mount -t minix /dev/fd0 /floppy &amp;&amp; 
export CFLAGS=&quot;-O3 -pipe -fomit-frame-pointer -static&quot; &amp;&amp; ./configure 
&amp;&amp; make &amp;&amp; cp parted/parted /floppy &amp;&amp; umount /floppy </i>
</pre>


<p>
Gefeliciteerd, je bent nu klaar om je computer opnieuw op te starten en
de partitie te resizen. Kijk nog wel even snel op de GNU website voor
extra informatie. Het resizen zou minder dan 30 minuten in beslag
moeten nemen voor de grootste harde schijven, dus heb geduld. Herstart
je computer met de tomsrtbt bootdiskette. Zodra je ingelogd bent stop
je de utility diskette in het diskettestation en typ je mount /dev/fd0
/floppy waardoor je parted onder /floppy hebt staan. Daar ga je. Zodra
je parted start zul je in staat zijn je partitie te resizen. Zodra dit
proces voltooid is zijn we klaar voor het echte werk, door een begin te
kunnen maken met het installeren van Gentoo Linux. Start je computer
opnieuw op zodat je weer in je oude Linux distributie terechtkomt. Stel
dat we /dev/hda3 willen resizen, dat zich op /dev/hda bevindt. 
</p>


<pre caption="Uit te voeren commando's zodra je ingelogd bent in het tomsrtbt systeem">
# <i>mount /dev/fd0 /floppy </i>
# <i>cd /floppy; ./parted [drive you wish to operate on]</i>
(parted) <i> print </i>
Disk geometry for /dev/hdb: 0.000-9787.148 megabytes
Disk label type: msdos
Minor    Start       End     Type      Filesystem  Flags
1          0.031   2953.125  primary   ntfs        
3       2953.125   3133.265  primary   linux-swap  
2       3133.266   5633.085  primary   ext3        
4       5633.086   9787.148  extended              
5       5633.117   6633.210  logical               
6       6633.242   9787.148  logical   ext3        
(parted) <i> help resize </i>
  resize MINOR START END        resize filesystem on partition MINOR

        MINOR is the partition number used by Linux.  On msdos disk labels, the
        primary partitions number from 1-4, and logical partitions are 5
        onwards.
        START and END are in megabytes
(parted) <i> resize 2 3133.266 4000.000 </i>
</pre>

<impo>
Heb geduld! De computer is bezig! Kijk naar de hardware LED op je
computerkast om te zien of hij nog daadwerkelijk bezig is. Dit proces
kan tussen de 2 en 30 minuten duren.
</impo>

<p>
Als je je partitie eenmaal hebt geresized dien je je computer opnieuw
op te starten. Ga vervolgens naar <uri
link="/doc/nl/gentoo-x86-install.xml">http://www.gentoo.org/doc/nl/gentoo-x86-install.xml</uri> 
en volg de stappen 6 tot en met 17. Vergeet niet om de <path>/mnt/gentoo</path> 
directory aan te maken alvorens je stap 7 uitvoert. In stap 8 moet je de 
gewenste tarball downloaden aangezien we niet vanuit een LiveCD werken.
</p>


</body>
</section>
</chapter>

<chapter>
<title>Diskloze installatie via PXE boot</title>
<section>
<title>Vereisten</title>
<body>
<p>
Je moet een netwerkkaart hebben die PXE ondersteunt, zoals verschillende
3com kaarten. Je moet tevens een BIOS hebben die PXE boots ondersteunt.
</p>

</body>
</section>
<section>
<title>Server setup</title>
<body>

<p>
Allereerst moet je de directories aanmaken waar je je systemen zal
opslaan. Maak een directory genaamd <path>/diskless</path> welke
directories zal bevatten voor alle diskloze clients. Voor de rest van
dit document gaan we werken aan de client 'eta'.
</p>

<pre caption = "Directory installatie">
# <i>mkdir /diskless</i>
# <i>mkdir /diskless/eta</i>
# <i>mkdir /diskless/eta/boot</i>
</pre>

<p>
De client zal de bootinformatie via DHCP verkrijgen en alle vereiste
bestanden via TFTP downloaden. Installeer DHCP en configureer ze voor
een gewoon netwerk. Voeg dan het volgende toe aan je
<path>/etc/dhcp/dhcpd.conf</path>.
</p>

<note>
In dit voorbeeld leveren we een statisch IP adres aan de client en een
pad naar het PXE bootbestand, genaamd pxegrub. Je moet de MAC-adressen
in dit voorbeeld vervangen met de werkelijke MAC adressen, alsook met de
juiste directories.
</note>

<pre caption = "dhcpd.conf">
option option-150 code 150 = text;
host eta {
    hardware ethernet 01:23:45:67:89;
    fixed address <comment>(ip adres)</comment>;
    option option-150 "/etc/boot/grub.lst";
    filename "/etc/boot/pxegrub";
}
</pre>

<p>
Voor TFTP installeer je <c>app-admin/tftp-hpa</c>. In
<path>/etc/conf.d/in.tftpd</path> plaats je het volgende:
</p>

<pre caption = "in.tftpd">
INTFTPD_PATH="/diskless"
INTFTPD_USER="nobody"
INTFTPD_OPTS="-u ${INTFTPD_USER} -I -vvvvvv -p -c -s ${INTFTPD_PATH}"
</pre>

<p>
Om PXE booten te ondersteunen gebruiken we GRUB. Je moet deze manueel
compileren om PXE bestanden te ondersteunen, maar dat is zeer eenvoudig.
Download eerst de laatste versie van de GRUB broncode (<c>emerge -f
grub</c>) welke geplaatst wordt in <path>/usr/portage/distfiles</path>).
Kopieer de tarball in <path>/diskless</path> en compileer ze om een PXE
binair bestand te maken. Eenmaal het bestand aangemaakt is kopieer je
ze naar de distloze client bootdirectory. Daarna passen we de grub.lst
configuratie aan. 
</p>

<pre caption = "GRUB configureren, compileren en klaarstomen">
# <i>tar zxvf grub-0.92.tar.gz</i>
# <i>cd grub-0.92</i>
# <i>./configure --help</i>
<codenote>In de opties zal je verschillende ondersteunde netwerkinterfaces vinden</codenote>
<codenote>Selecteer de driver compatibel met je kaart. Wij gebruiken $nic als voorbeeld.</codenote>
# <i>./configure --enable-diskless --enable-$nic</i>
# <i>make</i>
# <i>cd stage2</i>
# <i>cp pxegrub /diskless/eta/boot/pxegrub</i>
# <i>nano -w /diskless/eta/boot/grub.lst</i>
</pre>

<pre caption = "grub.lst">
default 0
timeout 30

title=Diskloze Gentoo
root (nd)
kernel /eta/bzImage ip=dhcp root=/dev/nfs nfsroot=<comment>(ip adres)</comment>:/diskless/eta

<codenote>Voor de nfsroot optie moet je het ip adres van de NFS server geven </codenote>
<codenote>alsook de directorie waarin de bestanden zitten (op de server)</codenote>
</pre>

<p>
NFS configureren is eenvoudig: het enige wat je moet toevoegen is een
regel aan <path>/etc/exports</path>:
</p>

<pre caption = "/etc/exports">
# <i>nano -w /etc/exports</i>
/diskless/eta eta(rw,sync,no_root_squash)
</pre>

<p>
Update je hosts bestand:
</p>

<pre caption = "/etc/hosts">
127.0.0.1 localhost

192.168.1.10 eta.example.com eta
102.168.1.20 sigma.example.com sigma
</pre>

</body>
</section>

<section>
<title>Het systeem op de server aanmaken</title>
<body>

<p>
Reboot de server met een Gentoo LiveCD. Volg de standaard
installatieprocedure zoals uitgelegd in de Gentoo Installatie
Handleiding, maar met de volgende verschillen: wanneer je het
bestandssysteem mount voer je de volgende commandos uit; je moet geen
andere partities mounten aangezien alle bestanden in
<path>/diskless/eta</path> zullen geplaatst worden.
</p>

<pre caption = "Het bestandssysteem mounten">
# <i>mount /dev/hda3 /mnt/gentoo</i>
</pre>

<p>
In het volgende voorbeeld maken we gebruik van een stage3 tarball. Mount
<path>/proc</path> in je directory en chroot erin om de installatie
te vervolgen. Volg de installatieinstructies tot aan de
kernelconfiguratie.
</p>

<warn>
Zorg ervoor dat je de tarball op de juiste positie uitpakt
</warn>

<pre caption = "De niveau tarball uitpakken">
# <i>cd /mnt/gentoo/diskless/eta</i>
# <i>tar -xvjpf /mnt/cdrom/gentoo/stage3-*.tar.bz2</i>
# <i>mount -t proc /proc /mnt/gentoo/diskless/eta/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/diskless/eta/etc/resolv.conf</i>
# <i>chroot /mnt/gentoo/diskless/eta /bin/bash</i>
# <i>env-update</i>
# <i>source /etc/profile</i>
</pre>

<p>
Wanneer je <c>make menuconfig</c> uitvoert, zorg er dan voor dat de
volgende zaken zeker meegecompileerd worden samen met de andere
aangeraden opties van de normale installatie handleiding.
</p>

<pre caption = "menuconfig opties">
- Je netwerkkaart ondersteuning
- Onder "Networking Options":

[*] TCP/IP networking
[*] IP: kernel level autoconfiguration
[*] IP: DHCP support
[*] IP: BOOTP support

- Onder "File systems --&gt; Network File Systems":

&lt;*&gt;* NFS file system support
[*] Provide NFSv3 client support
[*] Root file system on NFS
</pre>

<p>
Configureer nu de <path>/etc/fstab</path>:
</p>

<pre caption = "/etc/fstab">
# <i>nano -w /etc/fstab</i>
/dev/cdroms/cdrom0 /mnt/cdrom iso9660 noauto,ro 0 0
proc /proc proc defaults 0 0
tmpfs /dev/shm tmpfs defaults 0 0
</pre>

<p>
Installeer geen bootloader! We hebben er al namelijk eentje: pxegrub.
Werk gewoonweg de installatie af en herstart de server. Start de
services die je nodig hebt om de nieuwe client te booten: DHCP, TFTPD en
NFS.
</p>

<pre caption = "Services starten">
# <i>/etc/init.d/dhcp start</i>
# <i>/etc/init.d/tftpd start</i>
# <i>/etc/init.d/nfs start</i>
</pre>

</body>
</section>

<section>
<title>De nieuwe client booten</title>
<body>

<p>
Opdat de nieuwe client correct zou booten moet je de BIOS configureren
alsook de netwerkkaart zodat beide PXE gebruiken als eerste bootmethode
- dus <e>voor</e> de CD-ROM of floppy. Indien je hier hulp voor nodig
hebt consulteer je beter je hardware handleidingen of de website van je
computerhardware. De netwerkkaart zou een IP moeten krijgen via DHCP en
de GRUB PXE downloaden via TFTP. Daarna zal je een mooi zwart/wit GRUB
bootmenu moeten zien waarin je de kernel kan selecteren en op enter
drukken. Indien alles in orde is zal de kernel booten, de root mounten
via NFS en je een login prompt geven.
</p>

<p>
Geniet van je diskloos systeem!
</p>

</body>
</section>
</chapter>

</guide>
