<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!--
	Rev: 1.14
-->

<guide link = "/doc/nl/env.d-howto.xml">
<title>Env.d HOWTO </title>
<author title="Author">
   <mail link="zhen@gentoo.org">John P. Davis</mail>
</author>
<author title="Translator">
   <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>

<license/>

<abstract>
Deze handleiding zal je uitleggen wat <path>/etc/env.d</path> is en waarvoor ze
dient.
</abstract>

<version>1.6</version>
<date>21 Maart 2003</date>

<chapter>

<title>
Introductie tot <path>env.d/</path> en algemene variabelen
</title>

<section>
<title>Default Gentoo omgevingsvariabelen</title>
<body>

<p>
Een van de veelgestelde vragen van Gentoogebruikers is &quot;Waar zijn mijn
omgevingsvariabelen gedefinieerd?&quot; Om deze vraag te verstaan gaan we eerst
eens kijken wat omgevingsvariabelen zijn.
Een omgevingsvariabele is een variabele die gedefinieerd wordt door middel van
het <c>export</c> commando. Bijvoorbeeld, indien we <c>export
EDITOR=&quot;/usr/bin/vim&quot;</c> uitvoeren, definieren we een
omgevingsvariabele die definieert wat de default editor is (hier: vim).
Er zijn verschillende types van omgevingsvariabelen die op je Gentoo systeem
gedefinieerd kunnen worden:
</p>

<note>
<c>export</c> zal de omgevingsvariabele definieren voor de huidige shell alsook
de daarvanuit ontstane processen. Indien je een variabele wilt definieren die
enkel in de shell aanwezig mag zijn, doe je iets in de aard van 
<i>FOO=&quot;bar&quot;</i>.
</note>

<info>
Deze variabelen kunnen gevonden worden in <path>/etc/env.d/00basic</path>. 
</info>

<note>
Jouw <path>00basic</path> bestand kan verschillen van wat hier besproken wordt.
Dit is geen probleem; de definities hier zijn immers de default waarden en 
kunnen naar hartelust aangepast worden.
</note>

<table>
<tr><th>Variabele</th><th>Functie/Eigenschap</th></tr>
<tr><ti>PATH</ti><ti>
Deze stelt het default pad in waar programmas gevonden kunnen worden. De
directories worden gescheiden door ':'. Een path-variabele kan er als volgt
uitzien: <c>PATH=/usr/local/bin:/opt/bin</c>.
</ti></tr>

<tr><ti>ROOTPATH</ti><ti>
Deze variabele is gelijkaardig aan de vorige, maar deze stelt de default PATH
in voor programmas van de root-gebruiker. Een voorbeeld hiervan is
bijvoorbeeld <c>ROOTPATH=/usr/local/bin:/opt/bin</c>.
</ti></tr>

<tr><ti>LDPATH</ti><ti> 
Deze variabele definieert de directories die bekeken moeten worden bij het
linken. Ook in deze variabele worden de directories gescheiden met een ':'. Een
voorbeeld is <c>LDPATH=/usr/local/lib</c>.
</ti></tr>

<tr><ti>MANPATH</ti><ti>
Deze specifieert waar de manpages opgeslagen liggen op je systeem. Het is zoals
<i>PATH</i> maar dan voor de manpages. Een voorbeeld is zijn
<c>MANPATH=/usr/share/man:/usr/local/share/man</c>.
</ti></tr>

<tr><ti>INFODIR</ti><ti>
Deze specifieert waar al je info-bestanden opgeslagen liggen. Een voorbeeld is
<c>INFODIR=/usr/share/info</c>.
</ti></tr>

<tr><ti>PAGER</ti><ti>
Dit specifieert welke pager er gebruikt wordt (zoals less of more). Een
voorbeeld is <c>PAGER=/usr/bin/less</c>.
</ti></tr>

<tr><ti>EDITOR</ti><ti>
Dit specifieert de default editor voor je systeem. Een voorbeeld is
<c>EDITOR=/usr/bin/vim</c>.
</ti></tr>
</table>


<p>
Dit is een voorbeeld van een <path>00basic</path> bestand. Dit geeft je gewoon
een idee van hoe het eruit ziet. Indien jouw <path>00basic</path> naar de wip
is kan je deze gebruiken.
</p>

<pre caption = "00basic">
# Copyright 1999-2002 Gentoo Technologies, Inc.
# Distributed under the terms of the GNU General Public License, v2 or later
# $Header: /home/cvsroot/gentoo-src/rc-scripts/etc/env.d/00basic,v 1.6 2002/06/20 22:07
:37 azarah Exp $

PATH=/usr/local/bin:/opt/bin
ROOTPATH=/usr/local/bin:/opt/bin
LDPATH=/usr/local/lib
MANPATH=/usr/share/man:/usr/local/share/man
INFODIR=/usr/share/info
CVS_RSH=ssh
PAGER=/usr/bin/less
EDITOR=/usr/bin/vim
LESSOPEN=&quot;|lesspipe.sh %s&quot;
</pre>

</body>
</section>

<section>
<title>env.d Formattering</title>

<body>
<p>
De bestanden in <path>env.d</path> zijn gerangschikt in logische volgorde
zodat, wanneer <c>env-update</c> uitgevoerd wordt, de variabelen mooi
gerangschikt zijn. De nummers vooraan de bestanden specifieren de volgorde
waarin de bestanden gelezen worden, dus <path>00basic</path> zal eerst gaan,
daarna <path>01ietsanders</path> en zo voort. De inhoud van deze bestanden
hebben een specifiek formaat:
</p>

<pre caption = "Formaat van inhoud">
<comment># Dit is commentaar </comment>
<i>VARIABELE1=/pad/naar/iets </i>
<comment># Sommige variabelen kunnen door ':'-gescheiden inhouden hebben</comment>
<i>VAR1A=/pad/naar/ergens:/pad/naar/iets/anders </i>
<i>VARIABELE2=eeninhoud </i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Speciale variabelen, en hoe ze allemaal samenwerken</title>

<section>
<title>Speciale variabelen</title>
<body>

<p>
Er worden verschillende speciale variabelen in <path>env.d</path> gedefinieerd. 
Deze zijn <i>KDEDIRS, PATH, CLASSPATH, LDPATH, MANPATH, INFODIR, ROOTPATH,
CONFIG_PROTECT, CONFIG_PROTECT_MASK</i>. Deze zijn speciaal aangezien ze op een
speciale manier gelezen worden en in speciale bestanden staan, wat we later uit
de doeken zullen doen.
</p>

<note>
Sommige van de variabelen worden tevens vermeld in <path>00basic</path>. Dit
geeft geen problemen aangezien deze variabelen in meer dan 1 bestand
gedefinieerd kunnen worden. Meer hierover later.
</note>

<table>
<tr><th>Variabele</th><th>Functie/Eigenschap</th></tr>
<tr><ti>KDEDIRS</ti><ti> Het pad voor alle KDE-bestanden </ti></tr>

<tr><ti>PATH</ti><ti>Zie voordien</ti></tr>

<tr><ti>CLASSPATH</ti><ti>Path voor java-classen, door ':' gescheiden</ti></tr>

<tr><ti>LDPATH</ti><ti>Zie voordien</ti></tr>

<tr><ti>MANPATH</ti><ti>Zie voordien</ti></tr>

<tr><ti>INFODIR</ti><ti>Zie voordien</ti></tr>

<tr><ti>ROOTPATH</ti><ti>Zie voordien</ti></tr>

<tr><ti>CONFIG_PROTECT</ti><ti>Dit specifieert welke bestanden in 
<path>/etc</path> beschermd moeten worden bij nieuwe ebuild-updates; de
argumenten zijn spatie-gescheiden.
</ti></tr>

<tr><ti>CONFIG_PROTECT_MASK</ti><ti>Dit is het omgekeerde van de vorige
variabele: hierin definieer je welke bestanden er wel overschreven mogen
worden. Ook hier zijn de zaken spatie-gescheiden</ti></tr>
</table>

</body>
</section>

<section>
<title>Alles samen brengen</title>
<body>

<p>
Nu dat alles gedefinieerd en verklaard is, is het tijd dat we eens uitleggen
hoe dit allemaal samenwerkt met je Gentoo pc. De kracht van <path>env.d</path>
is dat je deze variabelen kan aanpassen naar wat je ook wenst. Met de definities
van hierboven veronderstel ik dat je weet wat je hiermee allemaal kan doen.
</p>

<p>
Laten we nu eens uitleggen wat er allemaal met deze variabelen gebeurt. Wanneer
<c>env-update</c> uitgevoerd wordt zal het alle bestanden in
<path>/etc/env.d</path> in volgorde aan elkaar hangen. Herinner je dat we 
vermeldden dat je met gemak meerdere <i>PATH</i> variabelen kan definieren 
zolang ze in verschillende bestanden zitten? Wel, dat komt door 
<c>env-update</c>. Deze zal door al de bestanden huppelen en de variabelen aan 
elkaar hangen. Dus indien je een <i>PATH</i> voor KDE, GNOME, je default 
<i>PATH</i> en een voor X hebt, dan zal <c>env-update</c> deze aan elkaar 
plakken zodat alles in 1 variabele komt te staan. Chique eh?
</p>

<p>
Aangezien deze variabelen nu in 1 gestoken zijn is het belangrijk te weten waar
deze opgeslagen worden.
</p>

<note>
Onderstaande bestanden worden aangemaakt door <c>env-update</c> uit te voeren.
</note>

<pre caption = "Bestanden gecreeerd uit de inhoud van de bestanden in env.d">
<i>LDPATH ----> /etc/ld.so.conf </i>
<i>CONFIG_PROTECT en CONFIG_PROTECT_MASK ----> /etc/profile.env (geexporteerde variabelen)</i>
<i>Anderen ----> /etc/profile.env </i>
</pre>

<p>
Als je kijkt naar <path>/etc/ld.so.conf</path> dan kan je duidelijk zien dat
<path>env.d</path> de bron was van informatie.
</p>

<pre caption = "/etc/ld.so.conf">
# ld.so.conf autogenerated by env-update; make all changes to
# contents of /etc/env.d directory
/usr/local/lib
/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2
/usr/lib/opengl/nvidia/lib
/usr/lib/mozilla
/usr/X11R6/lib
/opt/blackdown-jdk-1.3.1/jre/lib/i386/
/opt/blackdown-jdk-1.3.1/jre/lib/i386/native_threads/
/usr/qt/3/lib
/usr/qt/2/lib
/usr/kde/3/lib
</pre>

<p>
Het is een goede zaak om te weten dat <path>/etc/profile.env</path> door je
shell sessie vanzelf ingelezen en uitgevoerd wordt. Dit is een goede zaak,
aangezien nu al je nieuwe variabelen direct na het inloggen beschikbaar
zijn.
</p>

<pre capton = "Sequentie van acties ondernomen door env-update">
<i>/etc/env.d instellingen ----env-update----> /etc/profile.env ---> 
/etc/profile ---> bash ---> al je programmas</i>
</pre>

<p>
Nu dat je een <path>profile.env</path> hebt zou dit er als volgt kunnen
uitzien:
</p>

<pre caption = "/etc/profile.env">
export CONFIG_PROTECT='/usr/kde/3/share/config /usr/share/config'
export KDEDIRS='/usr/kde/3:/usr'
export MANPATH='/usr/share/man:/usr/local/share/man:/usr/X11R6/man:/opt/blackdown-jdk-1
.3.1/man'
export INFODIR='/usr/share/info:/usr/X11R6/info'
export PATH='/usr/local/bin:/opt/bin:/opt/rar/bin:/usr/X11R6/bin:/opt/blackdown-jdk-1.3
.1/bin:/opt/blackdown-jdk-1.3.1/jre/bin:/usr/qt/3/bin:/usr/qt/2/bin:/usr/kde/3/bin'
export CONFIG_PROTECT_MASK='/etc/gconf'
export CLASSPATH='/opt/blackdown-jdk-1.3.1/jre/lib/rt.jar:.'
export ROOTPATH='/usr/local/bin:/opt/bin:/opt/rar:/usr/X11R6/bin:/opt/blackdown-jdk-1.3
.1/bin:/opt/blackdown-jdk-1.3.1/jre/bin:/usr/qt/3/bin:/usr/qt/2/bin:/usr/kde/3/bin'
export KDEDIR='/usr/kde/3'
export VIMRUNTIME='/usr/share/vim/vim61'
export JDK_HOME='/opt/blackdown-jdk-1.3.1'
export JAVAC='/opt/blackdown-jdk-1.3.1/bin/javac'
export PAGER='/usr/bin/less'
export HOSTNAME='l00ser.muc.edu'
export QMAKESPEC='linux-g++'
export LESSOPEN='|lesspipe.sh %s'
export CVS_RSH='ssh'
export EDITOR='/usr/bin/vim'
export QTDIR='/usr/qt/3'
export JAVA_HOME='/opt/blackdown-jdk-1.3.1'
export XINITRC='/etc/X11/xinit/xinitrc'
export MOZILLA_FIVE_HOME='/usr/lib/mozilla'
</pre>

<p>
Dit is het einde; beleef plezier van je systeem, en verknoei het niet te veel :)
</p>

</body>
</section>
</chapter>
</guide>
