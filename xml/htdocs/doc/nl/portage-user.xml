<?xml version='1.0' encoding="UTF-8"?>

<!-- 
    Rev 1.9
-->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/nl/portage-user.xml">

<title>Portage Gebruikersgids</title>
<author title="Chief Architect">
    <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Editor">
    <mail link="thomasfl@gentoo.org">Thomas Flavel</mail>
</author>
<author title="Editor">
    <mail link="zhen@gentoo.org">John P. Davis</mail>
</author>
<author title="Editor">
    <mail link="carl@gentoo.org">Carl Anderson</mail>
</author>
<author title="Editor, Translator">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>

<abstract>
Deze handleiding beschrijft kort hoe je je packages up to date houdt,
en hoe je je systeem onderhoudt met Portage.
</abstract>

<version>1.3</version>
<date>22 Mei 2003</date>

<chapter>
<title>Erin vliegen!</title>

<section>
<title>De recentste Portage binnenhalen</title>
<body>

<p>
Nadat je Gentoo Linux geinstalleerd hebt en ermee hebt zitten spelen, kan het
zijn dat je fouten vindt in enkele packages, of dat je de laatste Gentoo Linux
softwarepackages wil installeren, of dat je je packages wil updaten naar de zo
recent mogelijke versie. Om dit te doen, moet je een nieuwe Portage structuur
binnenhalen. We hebben verschillende anonieme rsync servers die je kan
gebruiken om de laatste Portage structuur binnen te halen. In dit document
leggen we uit hoe je deze gebruikt.
</p>

<p>
Gebruik het volgende commando om je Portage structuur te synchroniseren:
</p>

<pre caption = "Portage up to date krijgen">
# <c>emerge sync</c>
</pre>

<p>
Gelieve te onthouden dat <c>emerge sync</c> automatisch de <i>--clean</i>
optie zal meegeven, die al je persoonlijke aanpassingen of toevoegingen van of
aan de <path>/usr/portage</path> structuur ongedaan maakt. Indien je je eigen
ebuilds apart wil behouden, gelieve dan de <i>PORTDIR_OVERLAY</i> functie te
gebruiken:
</p>

<pre caption = "Gebruik maken van PORTDIR_OVERLAY">
<comment>Voeg de volgende regel toe aan <path>/etc/make.conf</path></comment>
PORTDIR_OVERLAY="/dir/waar/je/ebuilds/staan"
</pre>

<p>
Indien je begint met het aanpassen van ebuilds, oplossen van fouten e.d. dan
wil je misschien een deel worden van de Gentoo Linux ontwikkelteam. Gelieve
ofwel <mail link = "drobbins@gentoo.org">Daniel Robbins</mail> of <mail link =
"seemant@gentoo.org">Seemant Kulleen</mail> te contacteren voor meer
informatie.
</p>

</body>
</section>

<section>
<title>Portage updaten</title>
<body>

<p>
Alvorens je je Portage structuur gebruikt is het belangrijk dat je Portage
zelf uptodate houdt. Om dit te verwezelijken type je het volgende:
</p>

<pre caption = "Updating Portage">
<comment>Dit zal de core-packages tonen die geupdate zullen worden</comment>
# <c>emerge -up system </c>
<comment>Dit zal deze packages updaten</comment>
# <c>emerge -u system </c>
</pre>

<p>
Nu zal je de meest recente versie van portage gebruiken, en kan je dus beginnen
met het gebruik maken van ons ebuild systeem om je geinstalleerde software te
updaten.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Wij presenteren u: <c>emerge</c></title>
<section>
<title><c>emerge --pretend</c></title>
<body> 

<p>
Alvorens je een package installeert is het altijd een goed idee om te zien
welke afhankelijkheiden er geinstalleerd zullen worden, welke packages er 
geupdate dienen te worden etc. <c>emerge --pretend</c> of <c>emerge -p</c> doet 
dit voor jou.
</p>

<pre caption = "Gebruik maken van emerge -p">
# <c>emerge -p xchat</c>

These are the packages that I would merge, in order.

Calculating dependencies......... done!
[ebuild   U] sys-libs/zlib-1.1.3-r2 to /
[ebuild   U] dev-libs/glib-1.2.10 to /
[ebuild N  ] media-libs/jpeg-6b-r2 to /
[ebuild N  ] x11-base/xfree-4.0.3-r3 to /
[ebuild N  ] x11-libs/gtk+-1.2.10-r1 to /
[ebuild N  ] media-libs/giflib-4.1.0-r3 to /
[ebuild N  ] media-libs/tiff-3.5.6_beta to /
[ebuild N  ] media-libs/imlib-1.9.10 to /
[ebuild N  ] net-irc/xchat-1.4.3 to /
</pre>

<p>
In dit voorbeeld proberen we <i>xchat</i> te emerge'n op een machine die
klaarblijkelijk nog geen X geinstalleerd staan heeft. Dus, <c>emerge
--pretend</c> toont duidelijk welke afhankelijkheden er moeten geinstalleerd 
worden (i.e. packages die ook geinstalleerd moeten worden opdat xchat correct 
zal functioneren). Specifiek zullen <path>sys-libs/zlib</path> en 
<path>dev-libs/glib</path> geupdate worden, en een bende andere ebuilds 
(inclusief <path>x11-base/xfree</path> uiteraard) zullen geinstalleerd 
worden (ge-emerged).
</p>

</body>
</section>
<section>
<title>USE en <c>emerge</c></title>
<body>

<p>
Hiervoor voerde ik <c>emerge --pretend</c> uit op een systeem die geen
<c>gnome</c> gedefinieerd heeft in zijn <c>USE</c> variabele in
<path>/etc/make.conf</path>. Dit wil zeggen dat de optionele GNOME
ondersteuning, indien aanwezig, niet gebruikt zal worden. Echter,
<path>xchat</path> geeft optionele GNOME ondersteuning, dus laten we eens
kijken wat de uitvoer is van <c>emerge --pretend</c> nadat ik <c>gnome</c>
toegevoegd heb aan de <c>USE</c> variabele in <path>/etc/make.conf</path>:
</p>

<pre caption = "Emerge gebruiken met USE variabelen">
# <c>emerge -p xchat</c>

These are the packages that I would merge, in order.

Calculating dependencies............................ done!
[ebuild N  ] media-libs/jpeg-6b-r2 to /
[ebuild N  ] gnome-base/libghttp-1.0.9 to /
[ebuild N  ] media-libs/audiofile-0.2.1 to /
[ebuild N  ] media-sound/esound-0.2.22-r2 to /
[ebuild N  ] gnome-base/gnome-env-1.0 to /
[ebuild N  ] gnome-base/libxml-1.8.11 to /
[ebuild N  ] gnome-base/ORBit-0.5.8 to /
[ebuild N  ] gnome-base/oaf-0.6.5 to /
[ebuild   U] dev-libs/glib-1.2.10 to /
[ebuild N  ] net-libs/libwww-5.3.2-r1 to /
[ebuild N  ] media-libs/giflib-4.1.0-r3 to /
[ebuild N  ] dev-util/guile-1.4-r3 to /
[ebuild   U] sys-libs/zlib-1.1.3-r2 to /
[ebuild N  ] x11-base/xfree-4.0.3-r3 to /
[ebuild N  ] x11-libs/gtk+-1.2.10-r1 to /
[ebuild N  ] media-libs/tiff-3.5.6_beta to /
[ebuild N  ] media-libs/imlib-1.9.10 to /
[ebuild N  ] gnome-base/gnome-libs-1.2.13 to /
[ebuild N  ] gnome-base/glibwww-0.2-r1 to /
[ebuild N  ] gnome-base/gdk-pixbuf-0.11.0 to /
[ebuild N  ] gnome-base/gconf-1.0.0 to /
[ebuild N  ] gnome-base/gnome-vfs-1.0.1 to /
[ebuild N  ] gnome-base/control-center-1.4.0.1 to /
[ebuild N  ] gnome-base/scrollkeeper-0.2 to /
[ebuild N  ] dev-util/xml-i18n-tools-0.8.1 to /
[ebuild N  ] gnome-base/libglade-0.16-r1 to /
[ebuild N  ] gnome-base/gnome-core-1.4.0.4 to /
[ebuild N  ] net-irc/xchat-1.4.3 to /
</pre>

<p>
Zoals je kan zien, door <c>gnome</c> toe te voegen aan de <c>USE</c> variabele,
ziet emerge dat xchat de GNOME ondersteuning heeft en wil gebruiken. Bijgevolg,
omdat deze GNOME ondersteuning uiteraard vereist dat GNOME geinstalleerd is,
zal <c>emerge</c> GNOME samen met alle andere benodigde packages ook
installeren. Het kan voorkomen dat je <c>USE</c> variabele niet correct
ingesteld is, waardoor <c>emerge</c> verkeerdelijk bepaalde zaken wel of niet
zal meeinstalleren/compileren. Dat is waarom ik altijd aanraad om <c>emerge
--pretend</c> eerst uit te voeren alvorens je de <c>emerge</c> uitvoert, zeker
voor nieuwe, niet-vertrouwde ebuilds. Op die manier zie je wat je kan
verwachten. Eenmaal alles in orde lijkt kan je doorgaan met de werkelijke
<c>emerge</c> door de <c>--pretend</c> achterwege te laten:
</p>

<pre caption = "Emerging xchat">
# <c>emerge xchat</c>
</pre>

<p>
Nadat alle afhankelijkheden ge-emerged zijn (indien ze bestaan natuurlijk, niet
alle packages hebben afhankelijkheden), wordt de xchat broncode gedownload (in
<path>/usr/portage/distfiles</path>), geverifieerd, uitgepakt, gecompileerd en
geinstalleerd in een tijdelijke directorie die we de &quot;sandbox&quot; heten
(geisoleerde omgeving). Daarna zullen ze op je systeem geinstalleerd worden
waarna een package database gecreeerd wordt, 
<path>/var/db/pkg/net-irc/xchat-1.4.3/CONTENTS</path>, wat een lijst bevat van
de bestanden van de package, samen met de md5sums en de permissies.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Upgraden van packages</title>
<section>
<body>

<p>
De default manier om packages te updaten in Portage is door gebruik te maken
van <c>emerge --update</c> of <c>emerge -u</c>.
</p>

<pre caption = "Gebruik maken van emerge -u">
# <c>emerge -u xchat</c>
</pre>

<p>
Portage maakt gebruik van wat men &quot;veilig&quot; unmergen noemt; het zal
enkel originele bestanden verwijderen. Indien een bestand overschreven is met
een ander, of aangepast om welke reden ook, dan zal deze blijven staan op het
systeem (misschien omdat je manueel een nieuwe versie hebt geinstalleerd). Dus,
indien je een oude versie van xchat verwijdert (unmerged) nadat je een nieuwere
versie hebt geinstalleerd (ge-emerged), dan zal xchat niet van je systeem
verwijderd worden omdat de tijden van de bestanden alsook de md5sums
verschillend zijn van deze die geregistreerd staan. Veilige unmerges zijn
werkelijk goed omdat ze ervoor zorgen dat er altijd een versie van een
programma aanwezig is op je systeem. Indien je eerst zou ge-unmerged hebben,
dan zou er gedurende enkele minuten (de tijd nodig om te downloaden, compileren
en installeren) geen xchat op je systeem staan.
</p>

<impo>
Portage heeft tegenwoordig een speciale feature die we
&quot;configuratiebestand bescherming&quot; heten. De bedoeling van deze
feature is om ervoor te zorgen dat nieuwe installaties van programma's niet de
configuratiebestanden overschrijft, maar dat de nieuwe configuratiebestanden
wel op het systeem staan (zodat je kan zien wat er nieuw is aan de versie). Per
default staat deze beveiliging aan voor alle bestanden die in <path>/etc</path>
en de KDE configuratiedirectories geplaatst worden. Type <c>emerge --help
config</c> voor meer details (Engels).
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Portage zijn gedrag controleren</title>
<section>
<body>

<p>
Indien je Portage zijn gedrag wil aanpassen moet je
<path>/etc/make.conf</path> aanpassen. Deze bevat variabelen (of
voorbeelden van) welke je kan aanpassen om Portage zijn gedrag te
manipuleren. Indien je bijvoorbeeld wil veranderen hoe Portage
broncodebestanden download, moet je <c>FETCHCOMMAND</c> naar jouw smaak
aanpassen.
</p>

<p>
<path>/etc/make.conf</path> bevat verschillende voorbeeldvariabelen
waaruit je gemakkelijk kan leren hoe je ze moet instellen. Je kijkt best
ook eens in de <path>make.conf</path> manpage (<c>man make.conf</c>) en,
indien je verder in de Portage-wereld wil gaan, lees dan de <uri
link="/doc/nl/portage-manual.xml">Portage Handleiding</uri>.
</p>

<p>
Indien je een variabele maar eenmalig een andere waarde wil toewijzen
kan je deze instellen als omgevingsvariabele in plaats van telkens
<path>/etc/make.conf</path> aan te passen. Bijvoorbeeld
<c>AUTOCLEAN="no" emerge kde</c> zal autoclean uitschakelen terwijl je
<c>emerge kde</c> uitvoert, maar anders niet.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Wat zijn gemaskeerde packages?</title>
<section>
<body>

<p>
Veel mensen zijn soms verbaasd om te zien dat sommige packages niet geupgrade
worden met de nieuwere versies wanneer ze <c>emerge -u world</c> uitvoeren. Een
goed voorbeeld is xfree-4.3.0 op het moment van schrijven. Indien je <c>emerge
sync</c> uitvoert, gevolgd door <c>emerge -u world</c>, dan zal xfree niet
geupdate worden. Waarom niet?
</p>

<p>
De reden hiervan is dat bepaalde packages als &quot;masked&quot; ingeschreven
zijn. Dat wil zeggen dat de package niet automatisch geupgrade of geinstalleerd
zal worden tenzij je specifieke acties onderneemt om dit wel te doen. Voor een
uitleg over hoe je gemaskeerde packages installeert raden we je aan om de <uri
link="http://forums.gentoo.org/viewtopic.php?t=33534">Masked Packages FAQ</uri>
(Engels) te lezen in onze <uri link="http://forums.gentoo.org">Gentoo
Forums</uri>.
</p>

</body>

</section>

</chapter>


</guide>
