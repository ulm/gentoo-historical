<?xml version='1.0' encoding="UTF-8"?>

<!-- $Id: java.xml,v 1.7 2012/06/30 18:42:54 swift Exp $ -->

<!-- Rev 1.7 -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide disclaimer="obsolete" link = "/doc/nl/java.xml">
<title>Gentoo Java Handleiding</title>
<author title="Author and Editor">
    <mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>
<author title="Translator">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Translator">
	<mail link="blubber@gentoo.org">Tiemo Kieft</mail>
</author>


<abstract>
Gebruikers- en ontwikkelaarshandleiding tot Java onder Gentoo
</abstract>

<license/>
<version>0.1.2</version>
<date>4 September 2003</date>

<chapter>
<title>Een JDK/JRE installeren</title>
<section>
<title>Overzicht</title>
<body>

<p>
Gentoo levert verschillende JDKs en JREs. De default is de
blackdown JDK/JRE set, en is vrij beschikbaar zonder eender welke
registratiemoeilijkheden.
</p>

<note>
Aangezien kaffe hun JRE/JDK steeds verder en verder ontwikkelt zal
deze waarschijnlijk onze toekomstige set worden.
</note>


<p>
Zowel de Sun JDK/JRE als de IBM JDK/JRE zijn in het algemeen
sneller, maar om hen werkende te krijgen is er iets meer werk
vereist, aangezien je hun licentie moet lezen alvorens je die kan
downloaden (en die van IBM vereist tevens dat je je registreert).
</p>

<p>
Onze ebuilds voor de Sun en IBM JDK/JRE's zullen je uitleggen waar
je deze kan downloaden.
</p>

</body>
</section>

<section>
<title>De Sun/IBM JDK/JREs installeren</title>
<body>

<p>
Indien je <c>emerge sun-jdk-1.3.1</c> of <c>emerge
ibm-jdk-1.3.1</c> uitvoert zal je verteld worden dat je de nodige
bestanden manueel moet downloaden. Dit heeft met licenties te
maken (de Sun JDK/JRE online click-wrap licentie of de IBM JDK/JRE
registratie).
</p>

<note>
Er is tevens een sun-jdk-1.4.0, maar niet alle packages werken goed
met Java 1.4, dus indien je werkelijk 1.4 wenst is er een kans dat je later 
zal sukkelen.
</note>

<p>
Je moet de bestanden downloaden en in <path>/usr/portage/distfiles</path> 
plaatsen. Eenmaal dat gebeurd is kan je het emerge commando opnieuw uitvoeren 
opdat de JDK/JRE goed geinstalleerd zou worden in <path>/opt</path>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>De JDK/JRE configureren</title>

<section>
<title>Overzicht</title>

<body>

<p>
Gentoo heeft de mogelijkheid om meerdere JDKs en JREs geinstalleerd
te staan hebben zonder dat ze in elkaars vaarwater komen. Er zijn
enkele zaken die je moet doen om dit succesvol ten einde te
brengen, zoals later vermeld wordt.
</p>

<p>
Door gebruik te maken van de <c>java-config</c> tool kan je de
systeem-defaults instellen (indien je root-access hebt tenminste).
Gebruikers kunnen ook hiervan gebruik maken, maar dit is dan enkel
voor hun eigen instellingen (uiteraard).
</p>

</body>
</section>

<section>
<title>Een default JDK/JRE instellen</title>
<body>

<p>
Het commando <c>java-config --list-available-vms</c> zal je een
lijst geven met beschikbare JREs en JDKs op je systeem:
</p>

<pre caption = "Beschikbare VMs voorbeeld">
~# java-config --list-available-vms
[blackdown-jdk-1.3.1] Blackdown JDK 1.3.1 (/etc/env.d/java/20blackdown-jdk-1.3.1)
[blackdown-jre-1.3.1] Blackdown JRE 1.3.1 (/etc/env.d/java/20blackdown-jre-1.3.1)
[ibm-jdk-1.3.0] IBM JDK 1.3.0 (/etc/env.d/java/20ibm-jdk-1.3.0)
[ibm-jdk-1.3.1] IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
[ibm-jre-1.3.1] IBM JRE 1.3.1 (/etc/env.d/java/20ibm-jre-1.3.1)
[sun-jdk-1.4.0] Sun JDK 1.4.0 (/etc/env.d/java/20sun-jdk-1.4.0)
</pre>

<p>
De namen tussen de haakjes <path>&quot;[]&quot;</path> zijn de namen
of IDs van die specifieke VMs. Je kan een van deze IDs doorgeven aan
<c>java-config --set-system-vm</c>:
</p>

<pre caption = "Het Java VM systeem instellen">
~# java-config --set-system-vm=ibm-jdk-1.3.1
Now using IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
</pre>

<note>
Je moet root-access hebben om --set-system-vm uit te kunnen voeren.
</note>

<p>
Nadat je een specifieke vm meegegeven hebt aan <c>java-config
--set-system-vm</c> dan moet je je <path>/etc/profile.env</path>
regenereren:
</p>

<pre caption = "/etc/profile.env regenereren" >
~# env-update
</pre>

<p>
Hierna moet je ofwel herinloggen op je systeem, of
<path>/etc/profile</path> sourcen in je huidige shell.
</p>

<p>
Als gewone gebruiker kan je <c>java-config --set-user-vm</c>
uitvoeren, wat een <path>$HOME/.gentoo/java-env</path> zal aanmaken
met daarin alle nodige omgevingsvariabelen. Je zou dit bestand het
best sourcen vanuit je <path>~/.profile</path>.
</p>

</body>
</section>

<section>
<title>Een CLASSPATH instellen</title>
<body>

<p>
<c>java-config</c> kan gebruikt worden om een systeemwijde of 
gebruiker-afhankelijke CLASSPATH in te stellen (afhankelijk of je als root of
als niet-gepriviligeerde gebruiker werkt).
</p>

<p>
Allereerst zal je een lijst willen aanmaken met java bibliotheken
die je in je CLASSPATH wil steken:
</p>

<pre caption = "Classes weergeven">
~$ java-config --list-available-packages
[ant] No description (/usr/share/ant/classpath.env)
[java-gnome] No description (/usr/share/java-gnome/classpath.env)
[java-gtk] No description (/usr/share/java-gtk/classpath.env)
[log4j] &quot;&quot; (/usr/share/log4j/package.env)
</pre>

<note>
Geen enkel van deze packages hebben een duidelijke omschrijving.
Dat is iets wat in de niet-zoverre toekomst geimplementeerd zal
worden.
</note>

<p>
Opnieuw, de namen tussen de haakjes zijn de IDs die je aan
<c>java-config --set-system-classpath</c> kan doorgeven:
</p>

<pre caption = "Classpaths instellen">
~# java-config --set-system-classpath=log4j,java-gtk,java-gnome
</pre>

<note>
De huidige directorie mag <e>niet</e> deel zijn van de classpath,
aangezien dat gebruikersafhankelijk moet zijn!
</note>

<p>
Opnieuw zal je moeten <c>env-update</c> moeten uitvoeren om je
omgevingsvariabelen algemeen in orde te zetten, en zal je opnieuw
moeten inloggen of <path>/etc/profile</path> sourcen.
</p>

<p>
Voor gebruikers zal <c>java-config --set-user-classpath</c>
<path>~/.gentoo/java-env-classpath</path> aanmaken die door
<path>~/.gentoo/java-env</path> vanzelf gesourced wordt.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Extra resources</title>
<section>
<title>Off-line resources</title>

<body>

<ul>
<li>java-config man page</li>
<li><c>java-config --help</c></li>
<li>Het <path>/usr/bin/java-config</path> script zelf</li>
</ul>

</body>
</section>

<section>
<title>Online resources</title>

<body>

<ul>
<li>De <uri link="http://news.gmane.org/gmane.linux.gentoo.devel">gentoo-dev</uri>, 
 <uri link="http://news.gmane.org/gmane.linux.gentoo.user">gentoo-user</uri> 
 mailing list archieven</li>
<li>#gentoo op irc.freenode.net</li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Addertjes</title>
<section>
<title>Algemene</title>

<body>

<p>
Indien je een JRE als default VM aanduidt kan het zijn dat je geen
<c>javac</c> commando beschikbaar meer hebt, tenzij je manueel een
symlink aanmaakt om dit probleem op te lossen.
</p>

<p>
Jikes zal gebruikt worden om de grotere packages te compileren
indien het beschikbaar is. In tijd zullen we proberen om alle
java-afhankelijke packages met Jikes te compileren zodat sommige
afhankelijkheden van de JDK naar afhankelijkheden naar de JRE
kunnen overgezet worden.
</p>

<p>
Met nieuwere versies van Portage zal <c>emerge --update world</c>
de JDK installeren onafhankelijk van het feit of je die voordien
geinstalleerd hebt of niet. Dit is een bekende fout die in latere
versies van Portage zal geelimineerd worden.
</p>

</body>
</section>
</chapter>
</guide>
