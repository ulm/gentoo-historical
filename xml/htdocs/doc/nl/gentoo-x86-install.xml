<?xml version='1.0'?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/nl/gentoo-x86-install.xml">
<title>Gentoo Linux 1.4 Installatie Instructies</title>
<author title="Chief Architect"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title="Author">Chris Houser</author>
<author title="Author"><mail link="jerry@gentoo.org">Jerry Alexandratos</mail></author>
<author title="Ghost"><mail link="g2boojum@gentoo.org">Grant Goodyear</mail></author>
<author title="Editor"><mail link="zhen@gentoo.org">John P. Davis</mail></author>
<author title="Editor"><mail link="stocke2@gentoo.org">Eric Stockbridge</mail></author>
<author title="Translator"><mail link="sven.vermeulen@rug.ac.be">Sven Vermeulen</mail></author>

<abstract>Deze instructies helpen je stap voor stap bij het installeren van
Gentoo Linux 1.4_rc1. Gentoo Linux installeren kan op diverse manieren,
afhankelijk van de hoeveelheid van je systeem dat je zelf wil compileren.
</abstract>

<version>1.71</version>
<date>18 Sep 2002</date>

<chapter>
<title>Over de installatie</title>
<section>
<body>

<p>Deze nieuwe bootable CD boot van bijna elke moderne IDE CD-ROM drive, alsook
van verschillende SCSI CD-ROMs. Op de CD-ROM vind je Linux ondersteuning voor
IDE (en PCI IDE) (in de kernel ingebakken) alsook ondersteuning voor alle
SCSI-hardware (beschikbaar onder de vorm van modules). Daarnaast leveren we
modules voor letterlijk elke netwerkkaart die Linux ondersteund, alsook tools
die je toelaten om je netwerk te configureren, uitgaande <c>ssh</c> connecties
te maken en bestanden te downloaden. </p>

<p>Om van de CD te installeren heb je een 486+ processor nodig en minstens 64
Megabytes RAM. (Gentoo Linux is al succesvol geinstalleerd geweest met 64MB RAM
+ 64MB swap-ruimte, maar het compileerproces is enorm traag onder deze
condities.) Om het installatieproces te beginnen haal je eerst de livecd
ISO-bestanden van <uri>http://www.ibiblio.org/gentoo/releases/1.4_rc1/</uri>. De
3 niveaus maken ons leven gemakkelijk met Gentoo. Niveau 1 (<e>stage1</e>) is
voor het compileren van je ganse systeem. Met niveau 2 (<e>stage2</e>) is voor
het compileren van een deel van je systeem, en niveau 3 (<e>stage3</e>) bespaart
heel wat tijd want het is al geoptimaliseerd voor jouw specifiek systeem. Op dit
moment vind je enkel de niveau-1 tarball op de livecd, maar je hebt de
mogelijkheid om een niveau-2 of niveau-3 tarball, geoptimaliseerd voor jouw
systeem, te downloaden nadat je van de livecd geboot bent. </p>

<p>Nu, laten we snel eens het installatie-proces overlopen. We zullen partities
aanmaken, onze bestandssystemen creeren en ofwel een niveau-1, niveau-2 of
niveau-3 tarball uitpakken. Als we een niveau-1 of niveau-2 tarball gebruiken
zullen we de nodige stappen ondernemen om ons systeem naar een niveau-3 te
krijgen. Eenmaal onze systemen op niveau-3 aanbeland zijn kunnen we ze
configureren (configfiles tweaken, bootloader installeren, etc...) en booten we
ze opnieuw zodat we een volledig werkend Gentoo Linux systeem hebben.
Afhankelijk van welk niveau je start geven we hier wat je nodig hebt voor de
installatie:</p>

<table>
<tr><th>Niveau tarball (<e>stage</e>)</th><th>Installatiestappen</th></tr>
<tr><ti>1</ti><ti>partitionering, formattering, emerge rsync, bootstrap, emerge
system, emerge linux sources, laatste configuratie</ti></tr>
<tr><ti>2</ti><ti>partitionering, formattering, emerge rsync, emerge system,
emerge linux sources, laatste configuratie</ti></tr>
<tr><ti>3</ti><ti>partitionering, formattering, emerge rsync (optioneel),
laatste configuratie</ti></tr>
</table>

</body>
</section>
</chapter>
<chapter>
<title>Opstarten</title>
<section>
<body>

<p>We beginnen door van de CD op te starten. Je zal begroet worden door een
hoeveelheid tekst gevolgd dor de normale Gentoo Linux opstartsequentie. Log in
als "root" (druk gewoon op &lt;enter&gt; voor het paswoord), en gebruik dan het
<c>passwd</c> commando om het root-paswoord aan te passen. (Dit root-paswoord
is enkel voor het installatieproces. De reden van het aanpassen van het
root-paswoord is omdat je met het internet zal connecteren om de installatie te
vervolledigen. Connecteren met het internet met het standaard root-paswoord is
<i>zeker</i> een slecht idee!) Je zal een root-promt ("<c>#</c>") verkrijgen op
de huidige console en je kan nieuwe consoles openen door alt-f2, alt-f3, etc in
te drukken en dan op enter te slaan (maar niet te hard eh :). </p>

<p>Vervolgens zal je verwelkomd worden door een kleine lijst van beschikbare
commandos die beschikbaar zijn op de bootable CD, inclusief <c>nano</c> (een
pico editor kloon) en instructies om het netwerk op te zetten. Daarna zal je
gevraagd worden om je keymap (keyboard instellingen) te selecteren, gevolgd door
de PCI autodetectie. Het PCI autodetectie proces zal automatisch de nodige
kernelmodules laden voor verschillende PCI SCSI en netwerkapparaten. Daarna kan
je op enter slaan (wederom niet te hard :) om de minimalistische Linux-omgeving
op de CD te betreden. Je zou een root-prompt ("<c>#</c>") op de huidige console
moeten krijgen. Je kan tevens andere consoles openen door alt-f2, alt-f3, etc in
te drukken en op enter te slaan.</p>

</body>
</section>
</chapter>

<chapter>
<title>Kernelmodules laden</title>
<section>
<body>

<p>
Hopelijk moet je enkel <c>pci-setup</c> intypen op de root-prompt om jouw
hardware automatisch te laten detecteren en de nodige modules te laten laden.
</p>

<p>Indien de PCI autodetectie bepaalde hardware vergeet moet je de nodige
modules manueel laden. Om een lijst te zien van alle beschikbare
netwerkkaartmodules, typ <c>ls /lib/modules/*/kernel/drivers/net/*</c>. Om een
specifieke module te laden, typ:</p>

<pre>
# <i>modprobe pcnet32</i>
	<comment>(vervang pcnet32 met jouw netwerkkaartmodule)</comment>
</pre>


<p>Nu, als je bepaalde SCSI hardware wil aanspreken die niet automatisch
gedetecteerd is gedurende de PCI autodetectie, zal je de nodige modules van
/lib/modules zelf moeten laden, opnieuw via <c>modprobe</c>:</p>

<pre>
# <i>modprobe aic7xxx</i>
# <i>modprobe sr_mod</i>
# <i>modprobe sd_mod</i>
</pre>

<p>Hierboven modprobe'n we de <c>aic7xxx</c> SCSI driver en zorgen we ervoor dat
SCSI CD-ROM- (<c>sr_mod</c>) en harddisk- (<c>sd_mod</c>) ondersteuning geladen
wordt.</p>

     
<p>Als je hardware RAID gebruikt zal je de ATA-RAID-modules en de module voor
jouw RAID-controller willen laden:</p>
<pre>    
# <i>insmod ataraid</i>    
# <i>insmod pdcraid</i>            
      <comment>(Promise Raid Controller)</comment>    
# <i>insmod hptraid</i>            
      <comment>(Highpoint Raid Controller)</comment>    
</pre>

<note><c>hdparm</c> staat op de Gentoo CD. Indien een van je drives tweaks nodig
heeft, dan is dit een goed moment om dat te doen, alhoewel de livecd automatisch
dma zou moeten geactiveerd hebben voor jou. Op relatief moderne hardware
<c>hdparm -d 1 /dev/hdx</c> zou voldoende veilig moeten zijn. Je kan <c>hdparm
-v /dev/hdx</c> gebruiken om je drive's instellingen te bekijken, en <c>hdparm
-t /dev/hdx</c> op je drive's performatie te testen.</note>


</body>
</section>
</chapter>
<chapter>
<title>PCMCIA kernelmodules laden</title>
<section>
<body>
<p>Als je een PCMCIA netwerkkaart hebt zal je enkele extra truuks moeten
uithalen.</p>
<pre>
# <i>insmod pcmcia_core</i>
# <i>insmod i82365</i>
# <i>insmod ds</i>
# <i>cardmgr -f</i>
</pre>

<p>Omdat cardmgr detecteert welke hardware er aanwezig is zou je pc-speaker
enkele tevredenstellende beeps moeten uitspuwen en zou je PCMCIA netwerkkaart in
leven moeten schieten. Je kan uiteraard ook je PCMCIA-kaart in je laptop steken
nadat cardmgr uitgevoerd is als je dat liever hebt. (Technisch gezien moet je
niet <i>cardmgr</i> opnieuw uitvoeren als je exact weet welke module je PCMCIA
kaart nodig heeft. Als je dat niet weet, probeer dan niet alle PCMCIA-modules te
laden om te zien welke al dan niet functioneren, want de PCMCIA-modules zullen
automatisch laden en rondhangen, wachtende totdat de bijhorende PCMCIA-kaart
geladen wordt. <i>cardmgr</i> zal tevens de module(s) van niet-gebruikte
PCMCIA-kaarten weer uit het geheugen verwijderen.)
</p>
</body>
</section>
</chapter>
<chapter>
<title>Configureer het netwerk voor de installatie</title>
<section>
<body>

<p>De Gentoo installatie laat jou toe het netwerk configureren zodat je
<c>ssh</c>, <c>scp</c> of zelfs <c>wget</c> kan gebruiken, zoals vereist voordat
je begint met de werkelijke installatie. Zelfs als je deze zaken niet hoeft te
doen zou je beter je netwerk nu configureren. Eenmaal geconfigureerd zal Portage
immers je netwerk kunen gebruiken eenmaal je in de chroot-omgeving zit (vereist
voor het installeren van Gentoo Linux). De eenvoudigste manier om je netwerk te
configureren is door gebruik te maken van ons nieuwe <c>net-setup</c>
script:</p>

<pre>
# <i>net-setup eth0</i>
</pre>
<p>
Uiteraard, als je dat wil kan je het netwerk ook op de "oude" manier configureren.
</p>
</body>
</section>

<section>
<title>Manuele DHCP-configuratie</title>
<body>
<p>Netwerkconfiguratie is simpel met DHCP; Als je ISP geen DHCP gebruikt, ga dan
verder naar de statische configuratie-sectie.
</p>
<pre caption="Netwerk configuratie met DHCP">
# <i>dhcpcd eth0</i> 
</pre>
<note>
Sommige ISPs vereisen het opgeven van een hostname. Om dat te bewerkstelligen
voeg je een <c>-h mijnhostnaam</c> argument toe aan het dhcpcd-commando
hierboven.
</note>
<p>Als je <i>dhcpConfig</i> waarschuwingen krijgt, niet paniceren. Deze errors
zijn hoogstwaarschijnlijk enkel schermvulling zonder meer. Ga verder naar
"Netwerk testen".</p>
</body>
</section>
<section>
<title>Manuele, statische configuratie</title>
<body>
<p>
We moeten juist genoeg van het netwerk configureren opdat we de nodige broncodebestanden kunnen downloaden die nodig zijn om het systeem te compileren, alsook uiteraard de vereiste localhost interface. Typ de volgende commando's in en vervang $IFACE met jouw netwerkinterface (meestal <c>eth0</c>), $IPNUM met jouw IP adres, $BCAST met jouw broadcast adres, en $NMASK met jouw network mask. Voor het <c>route</c> commando, vervang $GTWAY met jouw gateway.
</p>
<pre>
# <i>/sbin/ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</i>
# <i>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1</i>
</pre>
<p>Nu is het tijd om <path>/etc/resolv.conf</path> aan te maken zodat name resolution (Web/FTP-sites vinden bij naam in plaats van bij het IP adres) zal werken.</p>

<note>
Op dit moment zijn de enige editors die geinstalleerd staan per default <c>nano</c>, een kleine en gemakkelijk te gebruiken visuele editor. Gebruik <c>nano</c> met het <c>-w</c> argument om automatische regelterugloop uit te schakelen.
</note>

<p>Hier is een voorbeeld om je eigen /etc/resolv.conf aan te maken:
</p>

<pre caption="/etc/resolv.conf voorbeeld">
domain mydomain.com
nameserver 10.0.0.1
nameserver 10.0.0.2
</pre>

<p>Vervang <c>10.0.0.1</c> en <c>10.0.0.2</c> met het IP adres van jouw primaire respectievelijk secundaire DNS-server.</p>

</body>
</section>

<section>
<title>Proxy Configuratie</title>
<body>
<p>Als je achter een proxy zit is het noodzakelijk om je systeem te configureren om de proxy te gebruiken voordat je verder gaat. We zullen enkele variabelen exporteren om deze configuratie door te voeren:
</p>
<pre>
# <i>export http_proxy="machine.bedrijf.com:1234" </i>
# <i>export ftp_proxy="$http_proxy" </i>
# <i>export RSYNC_PROXY="$http_proxy" </i>
</pre>
</body>
</section>

<section>
<title>Netwerk testen</title>
<body>
<p>Nu dat je netwerk geconfigureerd is zou het <c>/sbin/ifconfig -a</c> commando moeten tonen dat je netwerkkaart werkende is. (Zoek naar <e>UP</e> en <e>RUNNING</e> in de output)
</p>
<pre caption="/sbin/ifconfig voor een werkende netwerkkaart">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
</pre>
<!--
<note>
If you have a static ppp link, you can !!! do this...!!!
</note>
-->
</body>
</section>
<section>
<title>Netwerk is klaar. Op de plaatsen, start!</title>
<body>
<p>Het netwerk zou nu klaar voor gebruik moeten zijn. Je zou moeten gebruik kunnen maken van de <c>ssh</c>, <c>scp</c> en <c>wget</c> commando's om naar andere machines te connecteren op jouw LAN of op het internet.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Partitionering</title>
<section>
<body>

<p>Nu dat de netwerkkaarten en disk-controllers geconfigureerd zijn is het tijd om de partities op te stellen voor Gentoo Linux.</p>

<p>Hierna volgt een overzicht van de standaard Gentoo Linux partitie-layout. We gaan op zijn minst 3 partities aanmaken: een swap-partitie, een root-partitie (die de Gentoo Linux systeem omvat) en een speciale boot-partitie. De bootpartitie is nodig om de GRUB bootloader informatie alsook de Linux kernels te bevatten. De bootpartitie geeft ons daarbij een veilige ruimte om alles wat nodig is om Linux te booten op te slaan. Gedurende normale Gentoo Linux-werking zou je bootpartitie <e>niet</e> gemount moeten zijn. Deze maatregel zorgt ervoor dat je kernel niet in onbruik geraakt voor GRUB (door bijvoorbeeld bestandssysteemcorruptie) bij een systeemcrash, waardoor de kip-en-het-ei probleem van GRUB die niet de kernel kan laden omdat je bestandssysteem niet in orde is, maar tevens niet je bestandssysteem in orde kan krijgen omdat je niet kan booten, verijdeld wordt.
</p>

<p>Nu naar de verschillende bestandssystemen. Op dit moment heb je 4 bestandssysteemmogelijkheden: XFS, ext2, ext3 (journaling) en ReiserFS. ext2 is het oude en echte Linux bestandssysteem maar heeft geen metadata journaling. ext3 is de nieuwe versie van ext2 met zowel metadata journaling als georderde data-schrijven, alsook effectieve data journaling. ReiserFS is een B*-boomstructuur gebaseerd bestandssysteem dat zeer goede performatie geeft bij vele, kleine bestanden (kleiner dan 4k), vaak met factor 10x-15x. ReiserFS schaalt tevens zeer goed en heeft metadata journaling. Vanaf de 2.4.18-kernel is ReiserFS eindelijk zeer stabiel en wordt dan ook hoog aangeschreven. XFS is een bestandssysteem met metadata journaling dat volledig ondersteund wordt door Gentoo Linux's <path>xfs-sources</path> kernel.
</p>

<p>Als je op zoek bent naar de meest standaard bestandssysteem, gebruik dan ext2. Zoek je achter de meest robuste journaled bestandssysteem, gebruik ext3. Zoek je naar een hoog-performant bestandssysteem met journaling ondersteuning, gebruik ReiserFS; zowel ext3 als ReiserFS zijn afgewerkt en stabiel bevonden. Wees echter voorzichtig met XFS; dit bestandssysteem heeft de geschiedenis dat ze veel data verliest bij systeemcrashes of stroomonderbrekingen. In het begin leek het een veelbelovend bestandssysteem maar nu blijkt zijn neiging tot dataverlies het grootste nadeel te zijn. Hier zijn enkele basisch aangeraden bestandssystemen en groottes:
</p>

  <table>
  <tr>
  	<th>Partitie</th>
	<th>Grootte</th>
	<th>Type</th>
  	<th>Voorbeeld apparaat</th>
  </tr>
  <tr>
  	<ti>boot partitie, bevat kernel(s) en boot informatie</ti>
	<ti>100 Megabytes</ti>
	<ti>ext2/3 hoog aangeraden (gemakkelijkst); indien ReiserFS, mount met <c>-o notail</c></ti>
  	<ti>/dev/hda1</ti>
  </tr>
   <tr>
  	<ti>swap partitie (er is geen 128 megabyte limiet!)</ti>
	<ti>&gt;=2*Hoeveelheid RAM in je systeem is aangeraden maar, sinds 2.4.10-kernel, niet meer verplicht.</ti>
	<ti>Linux swap</ti>
  	<ti>/dev/hda2</ti>
  </tr>
  <tr>
  	<ti>root-partitie, bevat ganse systeem (/usr, /home, etc)</ti>
	<ti>&gt;=1.5 Gigabytes</ti>
	<ti>ReiserFS, ext3 aangeraden; ext2 is ook ok</ti>
  	<ti>/dev/hda3</ti>
  </tr>
 </table>

<note>
Maak nu je partities d.m.v. <c>fdisk</c>. Vergeet niet dat je partitie-types nummer 82 moet hebben indien het een swap-partitie is en 83 voor de rest (ook al is het ReiserFS <e>of</e> ext2/3).
</note>

<note>
Als je RAID wil gebruiken voor je partities moet je een klein beetje verschillend tewerk gaan. Je zal partities als volgt hebben: <path>/dev/ataraid/discX/partY/</path>. X is de array die je gemaakt hebt, dus als je maar 1 array hebt zal dit disc0 zijn. Y is de partitienummer zoals in <path>/dev/hdaY</path>
</note>

<p>Eenmaal je je partities gemaakt hebt met <c>fdisk</c> is het tijd om deze te formatteren met de bestandssysteem die je wil gebruiken. Initialiseer je swap eerst als volgt:
</p>

<pre>
# <i>mkswap /dev/hda2</i>
</pre>
<p>Je kan gebruik maken van het <c>mke2fs</c> commando om ext2-bestandssystemen te maken:</p>
<pre>
# <i>mke2fs /dev/hda1</i>
</pre>
<p>Om een XFS-bestandssysteem te maken, gebruik het <c>mkfs.xfs</c> commando:</p>
<pre>
# <i>mkfs.xfs /dev/hda3</i>
</pre>

<note>
Je wil misschien wel enkele additionele argumenten meegeven aan het <c>mkfs.xfs</c> commando: <c>-d agcount=3 -l size=32m</c>. Het <c>-d agcount=3</c> argument verlaagt het aantal allocatiegroepen. XFS vereist minstens 1 allocatiegroep per 4 GB van je partitie, dus als je een 20 Gb partitie gebruikt zal je minstens 5 moeten zetten bij <c>agcount</c>. Het <c>-l size=32m</c> comando vergroot het journalbestand (logbestand) naar 32 Mb, wat de performantie ten goede komt.
</note>

<warn>
Als je een XFS-partitie maakt van een ReiserFS-partitie zal het je later niet lukken om die partitie succesvol te mounten tenzij je expliciet <c>mount -t xfs</c> gebruikt. De oplossing hiervoor is de partitie volschrijven met O-en alvorens je het XFS-bestandssysteem aanmaakt: <c>dd if=/dev/zero of=/dev/hd<comment>x</comment> bs=1k</c>.
</warn>

<p>Als je een ext3-formattering wenst, kan je deze aanmaken met <c>mke2fs -j</c>:</p>

<pre>
# <i>mke2fs -j /dev/hda3</i>
</pre>
<p>Om een ReiserFS-bestandssysteem aan te maken maak je gebruik van het <c>mkreiserfs</c> commando:</p>
<pre>
# <i>mkreiserfs /dev/hda3</i>
</pre>

<note>Vanaf 2.4.18 kan ReiserFS als stabiel beschouwd worden.</note>
<note>Je vindt meer informatie over ext3 onder Linux 2.4 op <uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>.</note>
</body>
</section>
</chapter>
<chapter>
<title>Partities mounten</title>
<section>
<body>
<p>We activeren eerst onze swap-partitie omdat we later meer virtueel geheugen nodig zullen hebben:
</p>
<pre>
# <i>swapon /dev/hda2</i>
</pre>
<p>Daarna maken we de <path>/mnt/gentoo</path> en <path>/mnt/gentoo/boot</path> mountpoints aan en mounten we onze bestandssystemen aan deze mountpoints.
</p>
<pre>
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>
<p>Als je een Gentoo Linux met aparte <path>/usr</path> of <path>/var</path> wil maken moet je deze aan <path>/mnt/gentoo/usr</path> respectievelijk <path>/mnt/gentoo/var</path> mounten.
</p>
   <impo>Als je <e>boot</e>-partitie (deze die de kernel bevat) ReiserFS is, vergeet dan niet deze te mounten met de <c>-o notail</c> argumenten zodat GRUB correct geinstalleerd wordt. Zorg er ook voor dat <c>notail</c> in je nieuwe <path>/etc/fstab</path> te staan komt. We komen daar later nog op terug.
   </impo>
</body>
</section>
</chapter>

<chapter>
<title>De gewenste niveau-tarball binnenhalen</title>
<section>
<body>
<p>
Als je wil starten met een niveau-1 (<i>stage1</i>) tarball, dan ben je bijna klaar met dit hoofdstuk; je vindt de niveau-1 tarball in <path>/cdroot/nocompress</path>. Als je echter wil starten van niveau-2 (<i>stage2</i>) of niveau-3 (<i>stage3</i>) tarballs die geoptimaliseerd zijn voor jouw architectuur, dan kan je deze downloaden (in <path>/mnt/gentoo</path> bv) van een van de Gentoo mirror sites:
</p>
<pre>
# <i>cd /mnt/gentoo</i>
# <i>lynx http://www.ibiblio.org/pub/Linux/distributions/gentoo/releases/1.4_rc1/x86/</i>
</pre>
</body>
</section>
</chapter>

<chapter>
    <title>Unpack de niveau-tarball die je wil gebruiken</title>
<section>
<body>

<p>Nu is het tijd om de gecomprimeerde niveau-tarball van je keuze te unpacken in <path>/mnt/gentoo</path>. Daarna <c>chroot</c>'en we naar de nieuwe Gentoo Linux compilatie installatie.
</p>
<impo>Vergewis jezelf ervan dat je de <c>p</c> optie bij <c>tar</c> gebruikt. Als je dat vergeet zal dat leiden tot bestanden met verkeerde permissies.</impo>
<impo>Als je de "van nul beginnen, alles compileren" installatie methode wil gebruiken zal je het <path>stage1-x86-1.4_beta.tbz2</path> bestand gebruiken. Als je een van onze grotere CDs gebruikt zal je tevens de mogelijkheid hebben om een niveau-2 of niveau-3 bestand te nemen. Deze bestanden laten je toe tijd te besparen ten nadele van de optimaliseerbaarheid (we hebben de vrijheid genomen zelf compiler optimalizaties en default USE-variabelen te kiezen). Het niveau-3 bestand bevat nu tevens de ganse linux kernel broncode en een Portage boomstructuur snapshot, waardoor een <c>emerge rsync</c> later niet meer noodzakelijk is.
</impo>

<pre>
# <i>cd /mnt/gentoo</i>
# <i>tar -xvjpf /path/to/stage?-*.tbz2</i>
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

<pre>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
# 
</pre>

<p>Nadat je deze commando's uitgevoerd hebt zal je "in" je nieuwe Gentoo Linux omgeving zitten.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rsync</title>
<section>
<body>
<p>Nu kan je <c>emerge rsync</c> uitvoeren. Dit is optioneel, maar aangeraden. Het is een goed idee dit uit te voeren omdat je Portage boomstructuur dan up to date is.
</p>
<pre>
# <i>emerge sync</i>
</pre>
<p>De Portage boomstructuur zal gedownload worden; het is ongeveer 10Mb groot.</p>
</body>
</section>
</chapter>
<chapter>
<title>Evolueren van niveau-1 naar niveau-2.</title>
<section>
<body>

<impo>Als je een niveau-2 of niveau-3 tarball gebruikt hebben wij voor jouw al gebootstrapped. Er is geen reden om dit opnieuw te doen, tenzij je besloten hebt om een <c>emerge rsync</c> te doen en je er zeker van wil zijn dat je een zeer up-to-date Gentoo systeem hebt. De meeste mensen die gebruik maken van een niveau-2 of niveau-3 tarball zullen <i>niet</i> opnieuw willen bootstrappen, omdat dit meer dan 2 uur kan duren, zelfs op zeer snelle pc's.
</impo>

<p>Nu dat we een werkende Portage boomstructuur hebben, moeten de mensen, die een niveau-1 tarball gebruiken, hun Gentoo Linux systeem als volgt bootstrappen. Eerst pas je het bestand <path>/etc/make.conf</path> aan. In dit bestand zet je je <c>USE</c> argumenten waarmee je de optionele functionaliteit specifieert die je in je packages wenst; algemeen zijn de default waarden (en dus een <e>lege</e> of niet gedefinieerde USE variabele) genoeg. Je zet best tevens de correcte <c>CHOST</c>, <c>CFLAGS</c> en <c>CXXFLAGS</c> voor je eigen systeem (voorbeelden vind je in het bestand zelf, gecommentarieerd).
</p>

<pre>
# <i>nano -w /etc/make.conf</i> <comment>(Adjust these settings)</comment>
</pre>
<note>
Mensen die werkelijk het ganse compileerproces willen tweaken kijken best eens naar het <path>/etc/make.globals</path> bestand. Dit bestand bevat Gentoo's default waarden en zou nooit aangeraakt moeten worden. Als de defaults niet voldoende zijn moet je de nieuwe waarden in <path>/etc/make.conf</path> plaatsen, daar waarden in <path>make.conf</path> de waarden in <path>make.globals</path> <comment>overriden</comment>. Als je de USE variabele wil tweaken, kijk dan in <path>/etc/make.profile/make.defaults</path>. Als je een USE variabele wil uitschakelen die je daarin vindt, voeg dan de nodige <c>USE=" -foo"</c> toe in <path>/etc/make.conf</path> (om de <c>foo</c> waarde uit te schakelen).
</note>
<p>
Het is nu tijd om het "bootstrap" proces te starten. Dit proces duurt ongeveer 1-2 uren afhankelijk van de snelheid van je pc; het duurt ongeveer 2 uren op een 1200Mhz AMD Athlon systeem. Gedurende deze tijd zal het ge-unpackede systeem klaargemaakt worden om de rest van je systeem te compileren. De GNU Compiler collectie zal gecompileerd worden, alsook de GNU C bibliotheek. Dit zijn tijdsconsumerende compileerprocessen en zijn het grote deel van het bootstrap proces:</p>
<pre>
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>
<p>Het "bootstrap" proces zal nu beginnen.</p>
<note>
Portage gebruik per default de <c>/var/tmp</c> map gedurende het compileren van de packages, wat vaak verschillende honderden megabytes van tijdelijke ruimte vereist. Als je een andere directorie wil laten gebruiken maak je een nieuwe PORTAGE_TMPDIR variabele aan <e>voordat</e> je het bootstrapproces begint:
</note>
<pre>
# <i>export PORTAGE_TMPDIR="/otherdir/tmp"</i>
</pre>
<p>
<c>bootstrap.sh</c> zal <c>binutils</c>, <c>gcc</c>, <c>gettext</c> en <c>glibc</c> compileren, waarna ze <c>binutls</c>, <c>gcc</c> en <c>gettext</c> hercompileert met de nieuwe <c>glibc</c>. Uiteraard neemt dit proces een flinke hoeveelheid tijd in beslag. Eenmaal dit proces beeindigd is zal je systeem in een "niveau-2" situatie zitten.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Evolueren van niveau-2 naar niveau-3</title>
<section>
<body>

<p>
Eenmaal je gebootstrapped hebt en je je in niveau-2 bevindt (opnieuw, als je een niveau-3 tarball gebruikt mag je deze stap overslaan) is het tijd om de rest van je systeem te compileren. Dat doe je als volgt:
</p>
<pre>
# <i>export CONFIG_PROTECT=""</i>
# <i>emerge -p system</i>
	<comment>[toont de packages die geinstalleerd zullen worden]</comment>
# <i>emerge system</i>
</pre>

<note>De <c>export CONFIG_PROTECT=""</c> regel zorgt ervoor dat elk nieuw script die in <path>/etc</path> geinstalleerd wordt de oudere scripts overschrijft (opgeslagen in <path>sys-apps/baselayout</path>), waardoor Portage's nieuwe config file management genegeerd wordt. Typ <c>emerge --help config</c> voor meer details.</note>

<p>Het zal een tijdje duren alvorens je het ganse systeem gecompileerd hebt. Je krijgt het echter dubbel en dik terug: je systeem zal geoptimaliseerd zijn voor jouw hardware en cpu. Het nadeel is echter dat je je een tijdje zal moeten bezig houden.  De vertaler van dit document raadt je Zelda aan voor GameBoy. Wanneer <c>emerge system</c> gedaan is, heb je een niveau-3 Gentoo Linux systeem.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Finale stappen: tijdzone</title>
<section>
<body>

<note>
Het is zeer belangrijk dat deze stap uitgevoerd wordt. Je clock zal compleet tilt slaan als je de localtime niet correct zet.
</note>

<p>Op dit moment zou je een niveau-3 systeem moeten hebben die klaar is voor de laatste configuratiestappen. We starten deze met het configureren van de tijdzone. Door de tijdzone correct te zetten alvorens we de kernel compileren zorgen we ervoor dat we een normale, correcte <c>uname -a</c> output krijgen.</p>

<p>Zoek naar je tijdzone (of GMT indien je de Greenwich Mean Time gebruikt) in <path>/usr/share/zoneinfo</path>. Maak dan een symbolische link door het volgende in te typen:</p>
<pre>
# <i>ln -sf /usr/share/zoneinfo/path/to/timezonefile /etc/localtime</i>
</pre>
<p>Je wil waarschijnlijk tevens <path>/etc/rc.conf</path> controleren om zeker te zijn dat je tijdzone instellingen correct zijn.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Finale stappen: kernel en syslog</title>
<section>
<body>
<p>Als je de Gentoo Linux 1.1+ niveau-3 tarball gebruikt hebben we de zaken gemakkelijker gemaakt voor jouw en de kernelbroncode al bijgeleverd in <path>/usr/src/linux</path>. Anders moet je de Linux kernelbroncode merge'n. Hier zijn deze die Gentoo Linux biedt:
</p>
<table>
<tr><th>ebuild</th><th>uitleg</th></tr>
<tr><ti><path>gentoo-sources</path></ti><ti>Gentoo's eigen performantie en functionaliteits-geoptimaliseerde kernel gebaseerd op Alan Cox' -ac kernel (inclusief XFS' releaseversie)</ti></tr>
<tr><ti><path>xfs-sources</path></ti><ti>Een snapshot van de SGI XFS CVS Linux broncode boomstructuur; deze kernel moet je nemen indien je XFS' allerlaatste versie wenst te gebruiken (op dit moment is de XFS releaseversie in de gentoo-sources de aanbevolen versie).</ti></tr>
<tr><ti><path>openmosix-sources</path></ti><ti>De standaard kernel broncode uitgebreid met ondersteuning voor de GPL <uri link="http://www.openmosix.com">openMosix</uri> load-balancing/clustering technologie.</ti></tr>
<tr><ti><path>usermode-sources</path></ti><ti>De standaard kernel broncode uitgebreid met ondersteuning voor User-Mode Linux. ("Linux inside Linux" technologie)</ti></tr>
<tr><ti><path>vanilla-sources</path></ti><ti>De standaard kernel broncode, net zoals je die van kernel.org afhaalt.</ti></tr>
</table>

<warn>
Onthoud dat <i>gentoo-sources</i> hevig gepatched en uitgebreid is en dus mogelijk niet stabiel is. Gebruik <i>vanilla-sources</i> als je problemen ondervindt. Apart daarvan, let op voor <i>grsecurity</i>, vooral met <i>X</i>. Het is beter om <i>grsecurity</i> uit te schakelen tenzij je absoluut zeker bent dat je het nodig zal hebben.
</warn>

<p>Kies een van de ebuilds en merge deze als volgt:</p>
<pre>
# <i>emerge sys-kernel/gentoo-sources</i>
</pre>

<p>Eenmaal je een Linux kernel broncode beschikbaar hebt is het tijd om je eigen kernel te bakken:
</p>
<pre>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
# <i>make dep &amp;&amp; make clean bzImage modules modules_install</i>
# <i>mv /boot/bzImage /boot/bzImage.orig</i> <comment>[als bzImage al bestaat]</comment>
# <i>cp /usr/src/linux/arch/i386/boot/bzImage /boot</i>
</pre>
<warn>
Opdat je kernel goed zou werken zijn er verschillende opties die je zeker moet activeren -- dat wil zeggenm ze moeten <i>in de kernel zitten</i> en <i>niet als modules</i>. Je zal <i>"Code maturity level options --> Prompt for development and/or incomplete code/drivers"</i> moeten selecteren ("/dev/pts file system support" is echter niet nodig) om verschillende van deze opties tegen te komen. Je moet ook <i>"Virtual Memory Filesystem"</i> moeten selecteren. Indien je ReiserFS gebruikt moet "ReiserFS" geselecteerd worden. Hetzelfde geldt voor "Ext3". Als je XFS wil gebruiken, selecteer "SGI XFS filesystem support". Het is altijd een goed idee om ext2 in te bouwen, ook al gebruik je het niet. Ook zullen de meeste mensen die IDE harde schijven hebben "Use DMA by default" willen selecteren; anders kan het zijn dat je IDE schijven slechte performatie zullen vertonen. Uiteraard, vergeet niet "IDE disk support" te selecteren, anders zal je kernel je schijven niet herkennen.
</warn>
<impo>
Indien je een IDE cd brander hebt, dan moet je tevens "SCSI emulation" selecteren in de kernel. Activeer "ATA/IDE/MFM/RLL support" --> "IDE, ATA and ATAPI Block devices" --> "SCSI emulation support", "SCSI CD-ROM support" en "SCSI generic support" (sommige mensen compileren deze als modules, dat mag). Als je deze als modules compileert, voer dan <c>echo -e "ide-scsi\nsg\nsr_mod" >> /etc/modules.autoload</c> uit om deze automatisch te laden als je je systeem opstart.
</impo>
<impo>
Indien je hardware RAID gebruikt zal je nog enkele extra opties moeten selecteren in de kernel: Voor Highpoint RAID controllers selecteer je "hpt366 chipset support", "support for IDE RAID controllers" en "Highpoint 370 software RAID". Voor Promise RAID controllers selecteer je "PROMISE PDC202{46|62|65|67|68|69|70} support", "support for IDE RAID controllers" en "Support Promise software RAID (Fasttrak(tm))</impo>
<note>
Voor deze die het prefereren is het nu mogelijk Gentoo Linux te installeren met een 2.2-kernel. Deze keuze komt echter met een prijs: je zal verschillende nieuwe features van de 2.4-kernels missen (zoals XFS, tmpfs, iptables, ...) alhoewel de 2.2-broncode uitgebreid kan worden met ReiserFS en devfs-ondersteuning. De Gentoo Linux bootscripts gebruiken tmpfs of ramdisk ondersteuning die in de kernel moet zitten, dus 2.2-kernelgebruikers moeten zich ervan verzekeren dat ramdisk-ondersteuning in de kernel zit (en <i>niet</i> als module). Het is dan van <comment>vitaal belang</comment> dat een <e>gentoo=notmpfs</e> argument meegegeven wordt met de kernelregel in <path>/boot/grub/menu.lsg</path> voor de 2.2-kernel zodat een ramdisk gebruikt wordt ipv tmpfs. Als je ervoor kiest geen devfs te gebruiken, verander de regel dan naar <e>gentoo=notmpfs,nodevfs</e>.
</note>

<p>
Je nieuwe kernel (en modules) zijn nu geinstalleerd. Nu moet je een keuze maken tussen de verschillende syslog daemons die Gentoo bijlevert. Dit zijn sysklogd, de traditionele groep systeemlog-daemons, syslog-ng en metalog. Geavanceerde gebruikers hebben de neiging te emigreren van sysklogd (die niet al te goede performantie heeft) naar syslog-ng of metalog. Indien je twijfelt, dan zal je mogelijk metalog het liefst hebben, sinds dat het zeer populair is. Om de systeemlogger van je keuze te merge'n, typ <e>een</e> van de volgende 3 groepen lijnen in:
</p>
<pre>
# <i>emerge sys-apps/sysklogd</i>
# <i>rc-update add sysklogd default</i>
<comment>of</comment>
# <i>emerge app-admin/syslog-ng</i>
# <i>rc-update add syslog-ng default</i>
<comment>of</comment>
# <i>emerge app-admin/metalog</i>
# <i>rc-update add metalog default</i>
</pre>
<warn>
Indien je syslog-ng kiest zal je een <path>/etc/syslog-ng/syslog-ng.conf</path> bestand moeten aanmaken. Zie <path>/etc/syslog-ng</path> voor een voorbeeld configuratiebestand.
</warn>
<impo>
Metalog stuurt informatie naar de harde schijf in blokken, dus berichten worden niet direct in de logs geschreven. Indien je een daemon wil debuggen is deze manier van werken niet handig. Om deze buffering tegen te gaan kan je metalog een USR1-signaal zenden om dit tijdelijk uit te schakelen (zodat <i>tail -f <path>/var/log/everything/currebt</path></i> wel in real time zal werken, zoals gewenst) en een USR2-signaal om dit terug te activeren.
</impo>
<p>Nu kan je ervoor kiezen om een cron-package te installeren. Op dit moment levert Gentoo dcron, fcron en vcron. Als je niet weet welke te nemen, neem je het best vcron. Deze cron-packages kunnen als volgt geinstalleerd worden:
</p>
<pre>
# <i>emerge sys-apps/dcron</i>
# <i>crontab /etc/crontab</i>
<comment>of</comment>
# <i>emerge sys-apps/fcron</i>
# <i>crontab /etc/crontab</i>
<comment>of</comment>
# <i>emerge sys-apps/vcron</i>
<comment>Vergeet niet je *cron toe te voegen aan de default runlevel</comment>
# <i>rc-update add *cron default </i>
</pre>
<p>Voor meer informatie over hoe cron werkt onder Gentoo Linux, zie <uri link="http://lists.gentoo.org/pipermail/gentoo-announce/2002-April/000151.html">deze announcement (Engels)</uri>.</p>
<p>Voor meer informatie over hoe je programma's en daemons opstart via de runlevels, zie <uri link="/doc/rc-scripts.html">rc-script guide</uri>.</p>
</body>
</section>
</chapter>
<chapter>
<title>Finale stappen: andere packages compileren</title>
<section>
<body>
<p>
Het is goed mogelijk dat je nog enkele extra packages zal moeten compileren alvorens je Gentoo Linux gebruikt, vooral indien je features zoals XFS, ReiserFS of LVM gebruikt. Indien je XFS gebruikt zou je beter <c>xfsprogs</c> emerge'n:
</p>
<pre>
# <i>emerge sys-apps/xfsprogs</i>
</pre>
<p>Indien je ReiserFS wil gebruiken emerge je beter de ReiserFS-tools:
</p>
<pre>
# <i> emerge sys-apps/reiserfsprogs</i>
</pre>
<p>
Indien je LVM gebruikt emerge je beter de <c>lvm-user</c> ebuild:
</p>
<pre>
# <i>emerge --usepkg sys-apps/lvm-user</i>
</pre>
<p>
Indien je een laptop-gebruiker bent en je wil PCMCIA-ondersteuning wanneer je voor het eerst werkelijk in je Gentoo Linux systeem boot, installeer dan de <c>pcmcia-cs</c> ebuild:
</p>
<pre>
# <i>emerge sys-apps/pcmcia-cs</i>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Finale stappen: /etc/fstab</title>
<section>
<body>
<p>
Je Gentoo Linux systeem is bijna klaar om te gebruiken. Al wat we nu nog moeten doen is enkele belangrijke systeembestanden aanmaken en de GRUB bootloader installeren. Het eerste bestand dat we gaan configureren is <path>/etc/fstab</path>. Onthou dat je de <c>notail</c> optie moet gebruiken voor je boot-partitie indien je een ReiserFS bestandssysteem ervoor gebruikt. Specifieer tevens <c>ext2</c>, <c>ext3</c> of <c>reiserfs</c> bij de correcte partities.
</p>
<p>
Gebruik zoiets als de <path>/etc/fstab</path> hieronder getoond, maar vervang uiteraard "BOOT", "ROOT" en "SWAP" met de echte partities die je gebruikt (zoals <c>hda1</c>, etc...).</p>
<pre>
<comment>
# /etc/fstab: statische bestandssysteeminformatie.
#
# noatime schakelt het gebruik van atimes uit voor betere performantie
# (atime's zijn normaal gezien niet nodig). notail verbetert de 
# performantie van reiserfs-bestandssystemen (ten nadele van schijfruimte).
# Het is veilig om de noatime opties te laten vallen indien je vrij tussen
# notail en tail wil wisselen.

# &lt;fs&gt;           &lt;mountpoint&gt;   &lt;type&gt;   &lt;opts&gt;          &lt;dump/pass&gt;

# NOTE: Als je boot-partitie ReiserFS is, vergeet notail niet !!!
</comment>
/dev/BOOT           /boot       ext2	 noauto,noatime	 1 2
/dev/ROOT           /           ext3	 noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro       0 0
proc                /proc       proc	 defaults        0 0
</pre>

<warn>
Merk op dat <i>/boot</i> NIET gemount wordt tijdens het opstarten. Dit is om de data in <i>/boot</i> te beschermen tegen data corruptie. Indien je <i>/boot</i> nodig hebt, vergeet het niet te mounten !
</warn>

</body>
</section>
<section>
<title>Finale: rootpaswoord ingeven</title>
<body>
<p>Alvorens je het vergeet, stel je rootpaswoord in:</p>
<pre>
# <i>passwd</i>
</pre>
</body>
</section>
<section>
<title>Finale stappen: /etc/hostname</title>
<body>
<p>Pas dit bestand aan zodat het je volledige hostname bevat, dit op 1 regel. Voorbeeld voor <c>mymachine.mydomain.com</c>:
<pre>
# <i>echo mymachine.mydomain.com > /etc/hostname</i>
</pre>
</p>
</body>
</section>

<section>
<title>Finale stappen: /etc/hosts</title>
<body>
<p>
Dit bestand bevat een lijst van ip-adressen en hun respectieve hostnames. Het wordt gebruikt door je systeem om IP-adressen en pc-namen met elkaar te linken voor zover ze niet in de nameservers zitten. Hier is een voorbeeld:
</p>
<pre>
127.0.0.1      localhost
<comment># de volgende regel bevat jouw IP-nummer alsook de naam van je pc in de LAN</comment>
192.168.1.1    mymachine.mydomain.com	mymachine
</pre>

<note>Als je op een DHCP-netwerk zit kan het handig zijn om je <i>localhost</i> aan te passen naar je machine's echte hostname. Dit zal GNOME en verschillende andere programmas helpen in het omzetten van IP naar hostnames en omgekeerd.
</note>
</body>
</section>

<section>
<title>Finale netwerkconfiguratie</title>
<body>
<p>
Voeg de namen toe van de modules die vereist zijn voor het correct functioneren van je systeem aan <path>/etc/modules.autoload</path> (je kan daarbij tevens extra opties meegeven door deze op dezelfde regel te plaatsen). Wanneer Gentoo Linux boots zullen deze modules automatisch geladen worden. Zeer belangrijk is je netwerkkaartmodule (indien je deze als een module gecompileerd hebt):
</p>
<pre caption="/etc/modules.autoload">
3c59x
</pre>
<p>Pas het bestand <path>/etc/conf.d/net</path> aan opdat je netwerk correct geconfigureerd is wanneer je opstart:
</p>
<pre>
# <i>nano -w /etc/conf.d/net</i>
# <i>rc-update add net.eth0 default</i>
</pre>
<p>Indien je meerdere netwerkkaarten hebt zal je extra <path>net.eth<comment>x</comment></path> bestanden moeten maken voor elke extra netwerkkaart (<comment>x</comment> = 1, 2, ...):
</p>

<pre caption="Meerdere netwerkkaarten">
# <i>cd /etc/init.d</i>
# <i>cp net.eth0 net.eth<comment>x</comment></i>
# <i>rc-update add net.eth<comment>x</comment> default</i>
</pre>
<p>
Indien je een PCMCIA netwerkkaart gebruikt, neem dan een snelle kijk in <path>/etc/init.d/pcmcia</path> om te zien of alles in orde lijkt voor jouw systeem, en voeg dan het volgende toe bovenaan <path>/etc/init.d/net.eth<comment>x</comment></path> opdat de PCMCIA drivers automatisch geladen zouden worden wanneer je netwerk gestart wordt:
<pre>
depend() {
	need pcmcia
}
</pre>
</p>
</body>
</section>

<section>
<title>Finale stappen: configureer de basisch instellingen (inclusief de keyboard instelling)</title>
<body>
<pre caption="basisch configuratie">
# <i>nano -w /etc/rc.conf</i>
</pre>
<p>
Volg de aanwijzingen in dit bestand om de basisch instellingen aan te passen. Alle gebruikers zullen zich ervan moeten verzekeren dat <c>CLOCK</c> correct gedefinieerd is. Internationale keyboard-gebruikers zullen tevens <c>KEYMAP</c> willen aanpassen naar hun smaak (browse <path>/usr/share/keymaps</path> om de verschillende mogelijkheden te zien).
</p>
</body>
</section>

<section>
<title>Finale stappen: harddisk instellingen (hdparm)</title>
<body>
<p>
Voeg je <i>hdparm</i> tweaks toe aan <path>/etc/conf.d/local.start</path> opdat deze automatisch uitgevoerd worden tijdens het opstarten.
</p>
<pre>
# <i>nano -w /etc/conf.d/local.start</i>
</pre>
<pre caption="voeg hdparm tweaks toe aan /etc/conf.d/local.start">
# Dit is een goede plaats om verscheidene 
# programmas te definieren die moeten opgestart
# worden tijdens het booten van je pc ( 1>&amp;2 )

# zet DMA aan op beide harde schijven
hdparm -d 1 /dev/hda
hdparm -d 1 /dev/hdb
</pre>
</body>
</section>

<section>
<title>Finale stappen: configureer GRUB</title>
<body>
<p>
Een van de meest kritische zaken bij het verstaan van GRUB is te weten komen hoe GRUB kijkt naar harde schijven en partities. Je Linux-partitie <path>/dev/hda1</path> heet <path>(hd0,0)</path> onder GRUB. Bemerk de haakjes rond hd0,0 - deze zijn verplicht. Harde schijven starten vanaf 0 ipv "a" en een partitie start vanaf 0 ipv 1. Dus, <path>/dev/hdb3</path> wordt vertaald naar <path>(hd1,2)</path>, en <path>/dev/hdd7</path> wordt vertaald naar <path>(hd3,6)</path>. Wanneer je dit onder de knie hebt, converteer dan je partities naar de GRUB-nomenclatuur en schrijf ze op. Nu is het tijd om GRUB te installeren.
</p>

<p>
De meest eenvoudige manier om grub te installeren is simpelweg <c>grub</c> te typen op je gechrootte shellprompt:
</p><pre>
# <i>grub</i>
</pre>
<impo>
Indien je hardware RAID gebruikt zal dit deel niet werken. Ga direct verder naar de sectie waar <path>menu.lst</path> gemaakt wordt. Daarna zullen we uitleggen hoe je de grub setup afwerkt voor RAID controllers.
</impo>
<p>
Je zal de <c>grub&gt;</c> prompt te zien krijgen. Nu moet je de correcte commando's ingeven om GRUB te installeren op je harde schijf. In deze voorbeeldconfiguratie willen we GRUB installeren op de boot record van de harde schijf (de MBR, master boot record), zodat het eerste wat we te zien krijgen als we de pc opstarten de GRUB prompt is. In dit geval zijn de commando's:
</p>
<pre>grub&gt; <i>root (hd0,0)</i>
grub&gt; <i>setup (hd0)</i>
grub&gt; <i>quit</i>
</pre>

<p>
Hier is hoe de commando's werken. Het eerste commando, <c>root ( )</c>, vertelt GRUB de locatie van de bootpartitie (in dit voorbeeld, <path>/dev/hda1</path> of dus <path>(hd0,0)</path> in GRUB-nomenclatuur. Het tweede commando, <c>setup ( )</c>, vertelt GRUB waar hij de boot record moet installeren - het zal automatisch geconfigureerd worden om de speciale files te zoeken in de door <c>root ( )</c> gedefinieerde locatie. In dit voorbeeld willen we GRUB in de MBR, dus is het antwoord <path>/dev/hda</path> of nog <path>(hd0)</path>. Indien we GRUB gebruiken als secundaire bootloader en een ander programma als primaire kunnen we dus tevens aan GRUB vragen om zich op een bepaalde partitie in te nestelen ipv de MBR. Eenmaal GRUB dit commando uitgevoerd heeft sluiten we grub door <c>quit</c> in te typen. Nu is Gentoo Linux klaar, maar we moeten eerst de <path>/boot/grub/menu.lst</path> aanmaken zodat we een mooie GRUB bootmenu te zien krijgen wanneer het systeem opstart. Dit doen we als volgt...
</p>

<p>
Creeer een menu.lst bestand (<c>nano -w /boot/grub/menu.lst</c>) en voeg de volgende regels toe:
</p>
<pre>
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Mijn Gentoo Linux voorbeeld
root (hd0,0) 
kernel /boot/bzImage root=/dev/hda3 

<comment># Dit is enkel voor hardware RAID</comment>
title=Mijn RAID Gentoo Linux voorbeeld
root (hd0,0)
kernel /boot/bzImage root=/dev/ataraid/discX/partY

<comment># Dit is enkel voor dual-bootgebruikers</comment>
title=Windows NT Workstation
root (hd0,5) 
chainloader +1
</pre>
<note>
Het <path>menu.lst</path> bestand eindigt in "lst" zoals in "lijst", niet "1st" zoals in "eerste". Ook moet (hd0,0) geschreven worden zonder spaties binnen de haakjes.
</note>
<impo>
Indien je scsi emulatie voor een IDE CD-brander gebruikt, dan moet je "hdx=ide-scsi" toevoegen aan de kernel-regel in menu.lst (met "hdx" de drive die bij je CD-brander past).
</impo>
<p>
Nadat je dit bestand opgeslagen hebt is de Gentoo Linux installatie afgewerkt. Door de eerste keuze te selecteren zal GRUB Linux booten. Het tweede deel van menu.lst is optioneel en toont je hoe je GRUB vraagt om een Windows partitie te booten (deze moet bootable zijn uiteraard).
</p>

<note>
Hierboven moet <path>(hd0,0)</path> naar je bootpartitie wijzen (<path>/dev/hda1</path> in dit voorbeeld) en <path>/dev/hda3</path> moet wijzen naar je root bestandssysteem. <path>(hd0,5)</path> bevat de NT bootloader.
</note> 
<p>
Indien je enige opties moet meegeven aan de kernel moet je deze gewoon toevoegen aan het eind van de <c>kernel</c> regel. We geven al 1 optie mee (<c>root=/dev/hda3</c>) maar je kan er nog andere toevoegen. Bijvoorbeeld kan je devfs uitschakelen (niet aangeraden als je niet weet wat je aan het doen bent) door <c>gentoo=nodevfs</c> mee te geven in de <c>kernel</c> regel.
</p>

<note>
Je moet, in tegenstelling tot oudere Gentoo Linux versies, niet meer <c>devfs=mount</c> meegeven op het einde van de <c>kernel</c> regel om devfs te activeren. Vanaf rc6 is devfs per default geactiveerd.
</note>
<p>
Indien je hardware RAID gebruikt moet je een grub bootdisk aamaken. Als je met hardware RAID grub wil installeren vanuit je gechrootte shell zal dat mislukken. Dus maken we een grub bootdisk, en wanneer we dan van die diskette geboot hebben installeren we grub in de mbr. Maak je bootdisk als volgt:
</p>

<pre>
# <i>mke2fs /dev/fd0</i>
# <i>mount /dev/fd0 /mnt/floppy</i>
# <i>mkdir /mnt/floppy/boot</i>
# <i>cp /usr/share/grub/i386-pc/stage1 /mnt/floppy/boot/grub</i>
# <i>cp /usr/share/grub/i386-pc/stage2 /mnt/floppy/boot/grub</i>

# <i>grub</i>

grub&gt; <i>root (fd0)</i>
grub&gt; <i>setup (fd0)</i>
grub&gt; <i>quit</i>
</pre>


</body>
</section>
</chapter>
<chapter>
<title>Installatie afgewerkt!</title>
<section>
<body>
<p>
Nu is Gentoo Linux geinstalleerd. De enige stap die nog overblijft is het beeindigen van je sessie (chroot shell verlaten), de nodige configuratiebestanden aanpassen, je partities unmounten en het systeem heropstarten:
</p>
<pre>
# <i>etc-update</i>
# <i>exit</i> 
<codenote>Dit beeindigd de gechrootte shell. Je kan dit tevens door <c>^D</c> in te typen.</codenote>
# <i>cd / </i>
# <i>umount /mnt/gentoo/boot</i>
# <i>umount /mnt/gentoo/proc</i>
# <i>umount /mnt/gentoo</i>
# <i>reboot</i>
</pre>
<note>
Na rebooten is het een goed idee om <c>update-modules</c> uit te voeren om het <path>/etc/modules.conf</path> bestand aan te maken. In plaats van dit bestand rechtstreeks aan te passen is het beter om aanpassingen in de bestanden in <path>/etc/modules.d</path> te maken.
</note>
<impo>
Vergeet niet dat, indien je hardware RAID gebruikt, je de bootdisk moet gebruiken voor de eerste reboot. Ga dan terug in dit document en installeer grub op de manier die voorgeschreven is. 
Je bent nu klaar. Proficiat.
</impo>
<p>
Indien je vragen hebt of je zou willen meewerken aan de ontwikkeling van Gentoo Linux, overweeg dan om jezelf te subscriben op de gentoo-user en gentoo-devel mailinglists (er is een "klik hier om te subscriben" op <uri link="http://www.gentoo.org">de hoofdpagina</uri>). We hebben tevens een handige <uri link="/doc/desktop.html">Desktop configuratie gids</uri> die je helpt om je nieuwe Gentoo Linux systeem te configureren, en een handige <uri link="/doc/portage-user.html">Portage gebruikgids</uri> om je op stap te zetten met het portage gebruik. Geniet en welkom bij Gentoo Linux !
</p>
</body>
</section>
</chapter>
</guide>
