<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	Last updated from revision 1.34
	Master document: English version
-->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/nl/gentoo-x86-install.xml">
<title>Gentoo Linux 1.4_rc2 Installatie Instructies</title>
<author title="Chief Architect"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title="Author">Chris Houser</author>
<author title="Author"><mail link="jerry@gentoo.org">Jerry Alexandratos</mail></author>
<author title="Ghost"><mail link="g2boojum@gentoo.org">Grant Goodyear</mail></author>
<author title="Editor"><mail link="zhen@gentoo.org">John P. Davis</mail></author>
<author title="Editor"><mail link="stocke2@gentoo.org">Eric Stockbridge</mail></author>
<author title="Editor"><mail link="Pierre-Henri.Jondot@wanadoo.fr">Pierre-Henri Jondot</mail></author>
<author title="Editor"><mail link="rajiv@gentoo.org">Rajiv Manglani</mail></author>
<author title="Translator"><mail link="sven.vermeulen@rug.ac.be">Sven Vermeulen</mail></author>

<abstract>Deze instructies helpen je stap voor stap bij het installeren van
Gentoo Linux 1.4_rc2. Gentoo Linux installeren kan op diverse manieren,
afhankelijk van de hoeveelheid van je systeem dat je zelf wil compileren.
</abstract>

<version>2.3.5</version>
<date>7 Jan 2003</date>

<chapter>
<title>Over de installatie</title>
<section>
<body>

<p>Deze nieuwe bootable CD boot van bijna elke moderne IDE CD-ROM drive, alsook
van verschillende SCSI CD-ROMs, onder voorwaarde natuurlijk dat je
CD-ROM en BIOS dat ondersteunen. Op de CD-ROM vind je Linux 
ondersteuning voor IDE (en PCI IDE) (in de kernel ingebakken) alsook 
ondersteuning voor alle SCSI-hardware (beschikbaar onder de vorm van
modules). Daarnaast leveren we modules voor letterlijk elke netwerkkaart
die Linux ondersteund, alsook tools die je toelaten om je netwerk te
configureren, uitgaande <c>ssh</c> connecties te maken en bestanden te
downloaden. </p>

<p>Om van de CD te installeren heb je een 486+ processor nodig en minstens 64
Megabytes RAM. (Gentoo Linux is al succesvol geinstalleerd geweest met 64MB RAM
+ 64MB swap-ruimte, maar het compileerproces is enorm traag onder deze
condities.) 
</p>

<p>
Gentoo Linux kan geinstalleerd worden door gebruik te maken van een van de 3
niveau-tarball bestanden. Deze die jij kiest hangt af je eigen wenst inzake
hoeveel je van het systeem zelf wil compileren. Niveau 1 (<e>stage1</e>) is
voor het bootstrappen en compileren van je ganse systeem. Met niveau 2 
(<e>stage2</e>) compileer je je ganse systeem, maar voer je de bootstrapping
niet meer uit - deze is dan al voor jouw gedaan. En niveau 3 (<e>stage3</e>) 
bevat een basisch Gentoo Linux systeem dat al geoptimaliseerd is voor jouw 
specifiek systeem. 
</p>
<p>
Dus, hoe start je nu de installatie? Eerst moet je beslissen welke van onze
LiveCD ISO-bestanden je van
<uri>http://www.ibiblio.org/gentoo/releases/1.4_rc2/x86/</uri> wil halen. In 
deze directorie vind je verschillende subdirectories, zoals <c>athlon</c>, voor 
elk van onze processor-specifieke compilaties. Hier is er uitleg over elke
directorie en wat ze bevat:
</p>
<table>
<tr><th>CPU-type</th><th>Uitleg</th></tr>
<tr><ti>x86</ti><ti>Niveau 1 tarballs en &quot;gentoo-basic&quot; LiveCD --
zal overal op werken.</ti></tr>
<tr><ti>i586</ti><ti>Niveau 2 en 3 tarballs, GRP packages en LiveCD voor i586+
CPUs</ti></tr>
<tr><ti>i686</ti><ti>Niveau 2 en 3 tarballs, GRP packages en LiveCD voor i686+
CPUs</ti></tr>
<tr><ti>athlon</ti><ti>Niveau 2 en 3 tarballs, GRP packages en LiveCD voor AMD
Athlon CPUs</ti></tr>
<tr><ti>athlon-xp</ti><ti>Niveau 2 en 3 tarballs, GRP packages en LiveCD voor
AMD Athlon XP CPUs</ti></tr>
<tr><ti>athlon-mp</ti><ti>Niveau 2 en 3 tarballs, GRP packages en LiveCD voor
AMD Athlon MP CPUs</ti></tr>
<tr><ti>pentium3</ti><ti>Niveau 2 en 3 tarballs, GRP packages en LiveCD voor
Intel Pentium III en Pentium IV CPUs</ti></tr>
</table>

<p>
In elke directorie vind je een <path>livecd/</path> directorie die LiveCDs 
bevat. Alhoewel deze LiveCDs zullen booten van eender welke architectuur zijn 
de installatie-gerelateerde tarballs geoptimaliseerd voor een specifiek 
CPU-type en zal dus niet werken op alle systemen, behalve de
&quot;gentoo-basic&quot; LiveCD in de <path>x86/</path> directorie die
gebruikt kan worden om alles te installeren.
</p>
<p>
De LiveCDs zijn volledige CD-bestanden die op een CDR of CD-RW moeten gebrand 
worden met CD-brandsoftware. Op dit moment hebben we 2 types van LiveCDs. 
De eerste draagt het &quot;gentoo-basic&quot; label, en is ongeveer 40Mb groot.
Deze LiveCD is minimaal in grootte zodat je die snel kan downloaden; ze bevat 
een niveau-1 tarball die je kan vinden nin <path>/mnt/cdrom/gentoo/</path>
nadat de CD geboot is.
</p>

<p>
De 2e smaak van LiveCD die we aanbieden draagt het &quot;livecd-grp&quot;
label. Deze CDs (die je kan vinden in hun respectieve <path>arch/livecd/</path>
directories) bevatten niveau-1, niveau-2 en niveau-3 tarballs, alsook enkele
GRP packages die geoptimaliseerd zijn voor een specifieke architectuur. Indien
je deze LiveCDs gebruikt is het mogelijk voor je om een volledig functioneel
Gentoo Linux systeem zeer snel te installeren. Dit komt uiteraard tegen een
prijs: deze ISO-bestanden zijn zeer groot (rond de 600 Mb) zodat je langer moet
wachten tegen dat ze gedownload zijn.
</p>


<info>
Indien om een of andere reden je installatie verkeerd loopt op een bepaald 
punt, dan kan je rebooten en herstarten op het punt net voor dat het verkeerd 
liep. Bijvoorbeeld, indien je gepartitioneerd hebt en een niveau-X tarball 
geinstalleerd hebt, en je bent klaar om te chroot'en, dan kan je dit (chrooten) 
opnieuw doen na een reboot. Gewoon rebooten met de LiveCD, je 
schijven/partities mounten onder <path>/mnt</path> zoals vermeld. Deze 
werkwijze werkt altijd, maar uiteraard enkel nadat je partities al aangemaakt 
zijn.
</info>

<warn>
Indien je problemen ondervindt in eender welk deel van de installatie en je 
wil dat rapporteren als een bug, doe dit dan op 
<uri>http://bugs.gentoo.org</uri>. Indien de bug naar de nodige maintainers 
van packages moet gestuurd worden (bv die van KDE) dan zullen wij daar wel 
voor zorgen.
</warn>

<p>
Nu, laten we snel eens het installatie-proces overlopen. Allereerst zullen we
de LiveCD bestanden downloaden, branden en booten. Als we een root-prompt
krijgen, dan zullen we partities aanmaken, onze bestandssystemen creeren en 
ofwel een niveau-1, niveau-2 of niveau-3 tarball uitpakken. 
Als we een niveau-1 of niveau-2 tarball gebruiken zullen we de nodige stappen 
ondernemen om ons systeem naar een niveau-3 te krijgen. Eenmaal onze systemen 
op niveau-3 aanbeland zijn kunnen we ze configureren (configfiles tweaken, 
bootloader installeren, etc...) en booten we ze zodat we een volledig werkend 
Gentoo Linux systeem hebben. 
Afhankelijk van welk niveau je start geven we hier wat je nodig hebt voor de
installatie:
</p>

<table>
<tr><th>Niveau tarball (<e>stage</e>)</th><th>Installatiestappen</th></tr>
<tr><ti>1</ti><ti>partitionering, formattering, emerge sync, bootstrap,
emerge system, emerge linux sources, laatste configuratie</ti></tr>
<tr><ti>2</ti><ti>partitionering, formattering, emerge sync, emerge
system, emerge linux sources, laatste configuratie</ti></tr>
<tr><ti>3</ti><ti>partitionering, formattering, emerge sync
(optioneel), laatste configuratie</ti></tr>
</table>

</body>
</section>
</chapter>
<chapter>
<title>Opstarten</title>
<section>
<body>

<p>
We beginnen door van de livecd op te starten. Indien deze correct gedetecteerd
is zal je een leuk bootscherm zien met het Gentoo Logo op. Hier kan je ofwel
Enter indrukken om te beginnen met het booten, F2 drukken om help te krijgen,
of kernel bootopties doorgeven door <c>gentoo opt1 opt2</c> etc... in te typen.
Eenmaal je op Enter gedrukt hebt zal je begroet worden door een hoeveelheid 
tekst gevolgd door de normale Gentoo Linux opstartsequentie. Je zal automatisch
ingelogged worden als &quot;root&quot;; het rootpaswoord zal een random string
krijgen om veiligheidsredenen.
Je zal een root-promt ("<c>#</c>") verkrijgen op de huidige console en je kan 
nieuwe consoles openen door Alt-F2, Alt-F3 en/of Alt-F4 in te drukken. Om terug
te keren naar de console waar je vandaan komt druk je Alt-F1.
</p>
<p>
Je zal tevens opmerken dat boven je <c>#</c> prompt een hoop tekst staat die je
uitlegt hoe je zaken moet doen, zoals het configureren van je netwerk apparaten
en waar je de Gentoo Linux niveau-tarballs en GRP packages kan vinden op je CD.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Kernelmodules laden</title>
<section>
<body>

<p>Indien de PCI autodetectie bepaalde hardware vergeet moet je de nodige
modules manueel laden. Om een lijst te zien van alle beschikbare
netwerkkaartmodules, typ <c>ls /lib/modules/*/kernel/drivers/net/*</c>. Om een
specifieke module te laden, typ:</p>

<pre caption = "PCI Modules Configuratie">
# <i>modprobe pcnet32</i>
	<comment>(vervang pcnet32 met jouw netwerkkaartmodule)</comment>
</pre>


<p>Nu, als je bepaalde SCSI hardware wil aanspreken die niet automatisch
gedetecteerd is gedurende de autodetectie die uitgevoerd werd terwijl je aan
het booten was, zal je de nodige modules van /lib/modules zelf moeten laden, 
opnieuw via <c>modprobe</c>:</p>

<pre caption="Laden van SCSI modules">
# <c>modprobe aic7xxx</c>
# <c>modprobe sd_mod</c>
</pre>

<p>De <c>aic7xxx</c> module is ondersteuning voor de SCSI
controller en de <c>sd_mod</c> module is ondersteuning voor de SCSI
harddisks.</p>

<note>
Ondersteuning voor SCSI CD-ROMs en harde schijven zitten default al in de 
kernel.
</note>
     
<p>Als je hardware RAID gebruikt moet je de ATA-RAID-modules en de module voor
jouw RAID-controller laden:</p>

<pre caption="Laden van RAID modules">    
# <c>modprobe ataraid</c>    
# <c>modprobe pdcraid</c>            
      <comment>(Promise Raid Controller)</comment>    
# <c>modprobe hptraid</c>            
      <comment>(Highpoint Raid Controller)</comment>    
</pre>

<p>
De Gentoo LiveCD zou DMA op je schijven moeten geactiveerd hebben, maar
als dat niet het geval is kan je <c>hdparm</c> gebruiken om de DMA op je
schijven te activeren.
</p>

<pre caption = "Instellen van DMA">
<comment>Vervang hdX met jouw drive-letter </comment>
# hdparm -d 1 /dev/hdX <comment>Activeert DMA </comment>
# hdparm -d1 -A1 -m16 -u1 -a64 <comment>Activeert DMA plus enkele veilige
performantieverbeterende aanpassingen</comment>
# hdparm -X66 /dev/hdX <comment>Activeert Ultra-DMA -- gevaarlijk --
kan bij sommige schijven lijden tot dataverlies</comment>
</pre>



</body>
</section>
</chapter>
<chapter>
<title>PCMCIA kernelmodules laden</title>
<section>
<body>
<p>Als je een PCMCIA netwerkkaart hebt zal je enkele extra truuks moeten
uithalen.</p>

<warn>
Om problemen met <c>cardmgr</c> te vermijden <e>moet</e> je deze
uitvoeren <e>alvorens</e> je de chroot omgeving binnentreedt tijdens
deze installatie.
</warn>

<pre caption="Laden van PCMCIA modules">
# <i>modprobe pcmcia_core</i>
# <i>modprobe i82365</i>
# <i>modprobe ds</i>
# <i>cardmgr -f</i>
</pre>

<p>Omdat <c>cardmgr</c> detecteert welke hardware er aanwezig is zou je 
pc-speaker enkele tevredenstellende beeps moeten uitspuwen en zou je PCMCIA 
netwerkkaart in leven moeten schieten. Je kan uiteraard ook je PCMCIA-kaart 
in je laptop steken nadat <c>cardmgr</c> uitgevoerd is als je dat liever 
hebt. (Technisch gezien moet je niet <c>cardmgr</c> opnieuw uitvoeren als je 
exact weet welke module je PCMCIA kaart nodig heeft. Als je dat niet weet, 
probeer dan niet alle PCMCIA-modules te laden om te zien welke al dan niet 
functioneren, want de PCMCIA-modules zullen automatisch laden en rondhangen, 
wachtende totdat de bijhorende PCMCIA-kaart geladen wordt. <c>cardmgr</c> 
zal tevens de module(s) van niet-gebruikte PCMCIA-kaarten weer uit het 
geheugen verwijderen.)
</p>
</body>
</section>
</chapter>
<chapter>
<title>Configureer het netwerk voor de installatie</title>
<section>
<title>PPPoE Configuratie</title>
<body>

<p>In de veronderstelling dat je PPPoE nodig hebt om naar het internet
te connecteren heeft de LiveCD (eender welke versie) de zaken voor jouw
vereenvoudigd door <c>rp-pppoe</c> te bevatten. Gebruik de bijgeleverde
<i>adsl-setup</i> script om je connectie te configureren. Er zal je
gevraagd worden naar het ethernet apparaat dat met je ADSL-modem
verbonden is tesamen met je gebruikersnaam en paswoord, de IPs van je
DNS-servers en of je al dan niet een basisch firewall wenst.
</p>

<pre caption = "Configuratie van PPPoE">
# <c> adsl-setup </c>
# <c> adsl-start </c>
</pre>

<p>
Uiteraard, als je dat wenst kan je nog steeds je netwerk manueel
instellen.
</p>

<p>
Indien er iets verkeerd loopt, controleer dan of je alles correct getypt
hebt (gebruikersnaam, paswoord) door in
<path>/etc/ppp/pap-secrets</path> of <path>/etc/ppp/chap-secrets</path>
te kijken en je ervan te vergewissen dat je het correcte Ethernet
apparaat gebruikt.
</p>

</body>
</section>

<section>
<title> Automatische Netwerk-configuratie </title>
<body>

<p>
Netwerk-configuratie is eenvoudig met DHCP; Indien je ISP geen DHCP
gebruikt, gelieve deze sectie dan over te slaan en de statische
configuratie verderop te lezen.
</p>

<p>
De Gentoo installatie laat jou toe het netwerk configureren zodat je
<c>ssh</c>, <c>scp</c>, <c>lynx</c>, <c>irssi</c> en <c>wget</c> kan 
gebruiken, zoals vereist voordat je begint met de werkelijke installatie. 
Zelfs als je deze zaken niet hoeft te doen zou je beter je netwerk nu 
configureren. Eenmaal geconfigureerd zal Portage immers je netwerk kunnen 
gebruiken eenmaal je in de chroot-omgeving zit (vereist voor het installeren 
van Gentoo Linux). De eenvoudigste manier om je netwerk te configureren is 
door gebruik te maken van ons nieuwe <c>net-setup</c> script:</p>

<pre caption="Configureren van de netwerkkaart">
# <c>net-setup eth0</c>
</pre>
<p>
Uiteraard, als je dat wil kan je het netwerk ook op de "oude" manier configureren.
</p>
</body>
</section>

<section>
<title>Manuele DHCP-configuratie</title>
<body>
<p>Netwerkconfiguratie is simpel met DHCP; Als je ISP geen DHCP gebruikt, ga dan
verder naar de statische configuratie-sectie.
</p>
<pre caption="Netwerk configuratie met DHCP">
# <c>dhcpcd eth0</c> 
</pre>
<note>
Sommige ISPs vereisen het opgeven van een hostname. Om dat te bewerkstelligen
voeg je een <c>-h mijnhostnaam</c> argument toe aan het dhcpcd-commando
hierboven.
</note>
<p>Als je <c>dhcpConfig</c> waarschuwingen krijgt, niet paniceren. Deze
errors zijn hoogstwaarschijnlijk enkel schermvulling zonder meer. Ga
verder naar "Netwerk testen".</p>
</body>
</section>
<section>
<title>Manuele statische configuratie</title>
<body>
<p>
We moeten juist genoeg van het netwerk configureren opdat we de nodige broncodebestanden kunnen downloaden die nodig zijn om het systeem te compileren, alsook uiteraard de vereiste localhost interface. Typ de volgende commando's in en vervang $IFACE met jouw netwerkinterface (meestal <c>eth0</c>), $IPNUM met jouw IP adres, $BCAST met jouw broadcast adres, en $NMASK met jouw network mask. Voor het <c>route</c> commando, vervang $GTWAY met jouw gateway.
</p>
<pre caption="Configuratie van het netwerk">
# <c>/sbin/ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</c>
# <c>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1</c>
</pre>
<p>Nu is het tijd om <path>/etc/resolv.conf</path> aan te maken zodat name resolution (Web/FTP-sites vinden bij naam in plaats van bij het IP adres) zal werken.</p>

<p>
Hier is een voorbeeld om je eigen /etc/resolv.conf aan te maken:
</p>

<pre caption="/etc/resolv.conf voorbeeld">
domain mydomain.com
nameserver 10.0.0.1
nameserver 10.0.0.2
</pre>

<p>Vervang <c>10.0.0.1</c> en <c>10.0.0.2</c> met het IP adres van jouw primaire respectievelijk secundaire DNS-server.</p>

</body>
</section>

<section>
<title>Proxy Configuratie</title>
<body>
<p>Als je achter een proxy zit is het noodzakelijk om je systeem te configureren om de proxy te gebruiken voordat je verder gaat. We zullen enkele variabelen exporteren om deze configuratie door te voeren:
</p>
<pre caption="Invoeren van de proxy-instellingen">
# <c>export http_proxy=&quot;machine.bedrijf.com:1234&quot; </c>
# <c>export HTTP_PROXY=&quot;machine.bedrijf.com:1234&quot; </c>
# <c>export ftp_proxy=&quot;$http_proxy&quot; </c>
# <c>export FTP_PROXY=&quot;$HTTP_PROXY&quot; </c>
# <c>export RSYNC_PROXY=&quot;$http_proxy&quot; </c>
</pre>
<p>
Beide (zowel in hoofdletters als kleine letters) zijn nodig aangezien er tools
zijn die naar de hoofdletterversie luisteren, en tools die naar de kleineletter
versie luisteren. Gelukkig is deze laatste in de minderheid en sterft ze tevens
uit, aangezien hoofdletters eigenlijk algemeen aanvaard zijn.
</p>
</body>
</section>

<section>
<title>Netwerk testen</title>
<body>
<p>Nu dat je netwerk geconfigureerd is zou het <c>/sbin/ifconfig -a</c> commando moeten tonen dat je netwerkkaart werkende is. (Zoek naar <e>UP</e> en <e>RUNNING</e> in de output)
</p>
<pre caption="/sbin/ifconfig voor een werkende netwerkkaart">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
</pre>

<p>
Je kan tevens eens proberen om je ISP's DNS server (te vinden in <path>/etc/resolv.conf</path>) en een website naar keuze te pingen om er zeker van te zijn dat je packetten het internet bereiken, je DNS adresvertaling correct werkt etc.
</p>

<pre caption = "Netwerk testen">
# <c>ping www.google.com </c>
</pre>

</body>
</section>
<section>
<title>Netwerk is klaar. Op de plaatsen, start!</title>
<body>
<p>Het netwerk zou nu klaar voor gebruik moeten zijn. Je zou moeten gebruik
kunnen maken van de <c>ssh</c>, <c>scp</c>, <c>lynx</c>, <c>irssi</c> en 
<c>wget</c> commando's om naar andere machines te connecteren op jouw LAN of 
op het internet.
</p>
</body>
</section>
</chapter>
<chapter>
<title>Partitionering</title>
<section>
<body>

<p>Nu dat de netwerkkaarten en disk-controllers geconfigureerd zijn is het tijd om de partities op te stellen voor Gentoo Linux.</p>

<p>Hierna volgt een overzicht van de standaard Gentoo Linux partitie-layout. We gaan op zijn minst 3 partities aanmaken: een swap-partitie, een root-partitie (die de Gentoo Linux systeem omvat) en een speciale boot-partitie. De bootpartitie is nodig om de GRUB of LILO bootloader informatie alsook de Linux kernels te bevatten. De bootpartitie geeft ons daarbij een veilige ruimte om alles wat nodig is om Linux te booten op te slaan. Gedurende normale Gentoo Linux-werking zou je bootpartitie <e>niet</e> gemount moeten zijn. Deze maatregel zorgt ervoor dat je kernel niet in onbruik geraakt voor GRUB of LILO (door bijvoorbeeld bestandssysteemcorruptie) bij een systeemcrash, waardoor de kip-en-het-ei probleem van GRUB die niet de kernel kan laden omdat je bestandssysteem niet in orde is, maar tevens niet je bestandssysteem in orde kan krijgen omdat je niet kan booten, verijdeld wordt.
</p>

<p>Nu naar de verschillende bestandssystemen. Op dit moment heb je 4 
bestandssysteemmogelijkheden: XFS, ext2, ext3 (journaling) en ReiserFS. 
ext2 is het oude en echte Linux bestandssysteem maar heeft geen metadata 
journaling. ext3 is de nieuwe versie van ext2 met zowel metadata journaling 
als georderde data-schrijven, alsook effectieve data journaling. ReiserFS 
is een B*-boomstructuur gebaseerd bestandssysteem dat zeer goede performatie 
geeft bij vele, kleine bestanden (kleiner dan 4k), vaak met factor 10x-15x. 
ReiserFS schaalt tevens zeer goed en heeft metadata journaling. Vanaf de 
2.4.18-kernel is ReiserFS eindelijk zeer stabiel en wordt dan ook hoog 
aangeschreven. XFS is een bestandssysteem met metadata journaling dat 
volledig ondersteund wordt door Gentoo Linux's <path>xfs-sources</path> kernel,
maar deze wordt algemeen niet aangeraden aangezien deze soms recent-gewijzigde
data verliest indien je systeem vastloopt of onverwachts uitvalt (bijvoorbeeld
door een stroomuitval).
</p>

<p>Als je op zoek bent naar de meest standaard bestandssysteem, gebruik dan 
ext2. Zoek je achter de meest robuste journaled bestandssysteem, gebruik ext3. 
Zoek je naar een hoog-performant bestandssysteem met journaling ondersteuning, 
gebruik ReiserFS; zowel ext3 als ReiserFS zijn afgewerkt en stabiel bevonden. 
Hier zijn enkele basisch aangeraden bestandssystemen en groottes:
</p>

  <table>
  <tr>
  	<th>Partitie</th>
	<th>Grootte</th>
	<th>Type</th>
  	<th>Voorbeeld apparaat</th>
  </tr>
  <tr>
  	<ti>boot partitie, bevat kernel(s) en boot informatie</ti>
	<ti>100 Megabytes</ti>
	<ti>ext2/3 hoog aangeraden (gemakkelijkst); indien ReiserFS, mount met <c>-o notail</c></ti>
  	<ti>/dev/hda1</ti>
  </tr>
   <tr>
  	<ti>swap partitie (er is geen 128 megabyte limiet!)</ti>
	<ti>&gt;=2*Hoeveelheid RAM in je systeem is aangeraden maar, sinds 2.4.10-kernel, niet meer verplicht.</ti>
	<ti>Linux swap</ti>
  	<ti>/dev/hda2</ti>
  </tr>
  <tr>
  	<ti>root-partitie, bevat ganse systeem (/usr, /home, etc)</ti>
	<ti>&gt;=1.5 Gigabytes</ti>
	<ti>ReiserFS, ext3 aangeraden; ext2 is ook ok</ti>
  	<ti>/dev/hda3</ti>
  </tr>
 </table>

<p>
Alvorens je je partities aanmaakt kan je het begin van je harde schijf 
initialiseren met <c>dd</c>. Dit zal ervoor zorgen dat je nieuw bestandssysteem
niet verkeerd geidentificeerd zal worden door Linux' mount-code. Om dit te 
doen ga je als volgt tewerk:
</p>
<pre caption = "Initializeren van de eerste 1024 sectoren van een HD">
# <c>dd if=/dev/zero of=/dev/hdxy bs=1K count=1 </c>
<comment>Vervang /dev/hdxy met de HD die je &quot;schoon&quot; wil maken.
</comment>
</pre>

<p>
Maak nu je partities d.m.v. <c>fdisk</c>. Vergeet niet dat je partitie-types 
nummer 82 moet hebben indien het een swap-partitie is en 83 voor de rest (ook 
al is het ReiserFS <e>of</e> ext2/3).
</p>
<note>
<c>cfdisk</c> staat op de installatie-CD en is heel wat eenvoudiger in gebruik 
dan <c>fdisk</c>. Type gewoon <c>cfdisk</c> om het uit te voeren. Default werkt 
cfdisk met <b>/dev/hda</b>. Indien /dev/hda niet de HD is die je wil 
partitioneren moet je de nodige argumenten meegeven met cfdisk. Bijvoorbeeld: 
<c>cfdisk /dev/hde</c>.
</note>

<note>
Indien <c>fdisk</c> of <c>cfdisk</c> je vragen om het systeem opnieuw op te
starten, doe dat dan opdat je systeem de nieuwe partitiestructuur zal
gebruiken.
</note>

<note>
Als je RAID wil gebruiken voor je partities moet je een klein beetje 
verschillend tewerk gaan. Je zal partities als volgt hebben: 
<path>/dev/ataraid/discX/partY/</path>. X is de array die je gemaakt hebt, 
dus als je maar 1 array hebt zal dit disc0 zijn. 
</note>

<p>Eenmaal je je partities gemaakt hebt is het tijd om deze te formatteren met de bestandssysteem die je wil gebruiken. Initialiseer je swap eerst als volgt:
</p>

<pre caption="Aanmaken van de swap">
# <c>mkswap /dev/hda2</c>
</pre>
<p>Je kan gebruik maken van het <c>mke2fs</c> commando om ext2-bestandssystemen te maken.</p>
<pre caption="Aanmaken van de ext2 filesystem">
# <c>mke2fs /dev/hda1</c>
</pre>
<p>Om een XFS-bestandssysteem te maken, gebruik het <c>mkfs.xfs</c> commando:</p>
<pre caption="Aanmaken van de XFS filesystem">
# <c>mkfs.xfs /dev/hda3</c>
</pre>

<note>
Je wil misschien wel enkele additionele argumenten meegeven aan het <c>mkfs.xfs</c> commando: <c>-d agcount=3 -l size=32m</c>. Het <c>-d agcount=3</c> argument verlaagt het aantal allocatiegroepen. XFS vereist minstens 1 allocatiegroep per 4 GB van je partitie, dus als je een 20 Gb partitie gebruikt zal je minstens 5 moeten zetten bij <c>agcount</c>. Het <c>-l size=32m</c> comando vergroot het journalbestand (logbestand) naar 32 Mb, wat de performantie ten goede komt.
</note>

<warn>
Als je een XFS-partitie maakt van een ReiserFS-partitie zal het je later niet lukken om die partitie succesvol te mounten tenzij je expliciet <c>mount -t xfs</c> gebruikt. De oplossing hiervoor is de partitie volschrijven met O-en alvorens je het XFS-bestandssysteem aanmaakt: <c>dd if=/dev/zero of=/dev/hd<comment>x</comment> bs=1k</c>.
</warn>

<p>Als je een ext3-formattering wenst, kan je deze aanmaken met <c>mke2fs -j</c>.</p>

<pre caption="Aanmaken van de ext3 filesystem">
# <c>mke2fs -j /dev/hda3</c>
</pre>
<p>Om een ReiserFS-bestandssysteem aan te maken maak je gebruik van het <c>mkreiserfs</c> commando:</p>
<pre caption="Aanmaken van het reiserfs filesysteem">
# <c>mkreiserfs /dev/hda3</c>
</pre>

<note>Je vindt meer informatie over ext3 onder Linux 2.4 op <uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>.</note>
</body>
</section>
</chapter>
<chapter>
<title>Partities mounten</title>
<section>
<body>
<p>We activeren eerst onze swap-partitie omdat we later meer virtueel geheugen nodig zullen hebben:
</p>
<pre caption="Activeren van de swappartitie">
# <c>swapon /dev/hda2</c>
</pre>
<p>Daarna maken we de <path>/mnt/gentoo</path> en <path>/mnt/gentoo/boot</path> mountpoints aan en mounten we onze bestandssystemen aan deze mountpoints.
</p>
<pre caption="Aanmaken van mountpoints en mounten van partities">
# <c>mkdir /mnt/gentoo</c>
# <c>mount /dev/hda3 /mnt/gentoo</c>
# <c>mkdir /mnt/gentoo/boot</c>
# <c>mount /dev/hda1 /mnt/gentoo/boot</c>
</pre>
<p>Als je een Gentoo Linux met aparte <path>/usr</path> of <path>/var</path> wil maken moet je deze aan <path>/mnt/gentoo/usr</path> respectievelijk <path>/mnt/gentoo/var</path> mounten.
</p>
<impo>Als je <e>boot</e>-partitie (deze die de kernel bevat) ReiserFS is, vergeet dan niet deze te mounten met de <c>-o notail</c> argumenten zodat GRUB correct geinstalleerd wordt. Zorg er ook voor dat <c>notail</c> in je nieuwe <path>/etc/fstab</path> te staan komt. We komen daar later nog op terug.
</impo>
   
<impo>
Als je problemen hebt met het mounten van je bootpartitie met ext2, probeer dan <c>mount /dev/hdXX /mnt/gentoo/boot -t ext2</c>
</impo>
</body>
</section>
</chapter>

<chapter>
<title>De gewenste niveau-tarball binnenhalen</title>
<section>
<body>
<p>
Als je wil starten met een niveau-1 (<i>stage1</i>) tarball, dan ben je bijna
klaar met dit hoofdstuk; je vindt de niveau-1 tarball in 
<path>/mnt/cdrom/gentoo/</path>. Als je echter wil starten van niveau-2 
(<i>stage2</i>) of niveau-3 (<i>stage3</i>) tarballs die geoptimaliseerd zijn 
voor jouw architectuur, dan kan je deze downloaden (in <path>/mnt/gentoo</path> 
bv) van een van de Gentoo mirror sites:
</p>
<pre caption="Zoeken naar de niveau-tarballs">
# <c>cd /mnt/gentoo</c>
<comment>Gebruik lynx om de URL van je tarball te weten te komen.</comment>
# <c>lynx http://www.ibiblio.org/pub/Linux/distributions/gentoo/releases/1.4_rc2/x86/</c>
# <c>wget <comment>Voeg hier de URL van de tarball in</comment></c>
</pre>
</body>
</section>
</chapter>

<chapter>
    <title>Unpack de niveau-tarball die je wil gebruiken</title>
<section>
<body>

<p>Nu is het tijd om de gecomprimeerde niveau-tarball van je keuze te unpacken
in <path>/mnt/gentoo</path>. Daarna <c>chroot</c>'en we naar de nieuwe Gentoo
Linux compilatie installatie om &quot;in&quot; het nieuwe Gentoo systeem te
werken.
</p>
<impo>Vergewis jezelf ervan dat je de <c>p</c> optie bij <c>tar</c> gebruikt. Als je dat vergeet zal dat leiden tot bestanden met verkeerde permissies.</impo>
<p>Als je de &quot;van nul beginnen, alles compileren&quot; installatie methode wil gebruiken zal je het <path>stage1-x86-1.4_beta.tbz2</path> bestand gebruiken. Als je een van onze grotere CDs gebruikt zal je tevens de mogelijkheid hebben om een niveau-2 of niveau-3 bestand te nemen. Deze bestanden laten je toe tijd te besparen ten nadele van de optimaliseerbaarheid (we hebben de vrijheid genomen zelf compiler optimalizaties en default USE-variabelen te kiezen).
</p>

<pre caption="Unpacken van de niveau-tarball">
# <c>cd /mnt/gentoo</c>
# <c>tar -xvjpf /mnt/cdrom/gentoo/stage?-*.tbz2</c>
# <c>mount -o bind /proc /mnt/gentoo/proc</c>
# <c>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</c>
</pre>
<p>Indien je van de GRP packages gebruik wil maken is het nu het moment om de
volgende commando's in te geven:
</p>
<pre caption = "Klaarstomen voor GRP">
# <c>mkdir /mnt/gentoo/GRP</c>
# <c>mount -o bind /mnt/cdrom/gentoo/packages /mnt/gentoo/GRP</c>
</pre>

<pre caption="Chrooten in het nieuwe systeem">
# <c>chroot /mnt/gentoo /bin/bash</c>
# <c>env-update</c>
Regenerating /etc/ld.so.cache...
# <c>source /etc/profile</c>
# 
</pre>

<p>Nadat je deze commando's uitgevoerd hebt zal je &quot;in&quot; je nieuwe Gentoo Linux omgeving zitten.
</p>

</body>
</section>
</chapter>

<chapter>
<title>De huidige Portage boomstructuur binnenhalen met rsync</title>
<section>
<body>
<p>Nu kan je <c>emerge sync</c> uitvoeren. Dit zorgt ervoor dat je boomstructuur up-to-date is.
</p>
<pre caption="Nieuwe portage-tree binnenhalen">
# <c>emerge sync</c>
</pre>
<p>De Portage boomstructuur zal gedownload worden en in <path>/usr/portage</path> gestockeerd worden; het is ongeveer 90Mb groot zonder de tarballs.</p>
</body>
</section>
</chapter>

<chapter>
<title>Gentoo Optimalisaties instellen (make.conf)</title>
<section>
<body>
<p>Nu dat we een werkende Portage boomstructuur hebben, moet je het bestand <path>/etc/make.conf</path> aanpassen. In dit bestand zet je je <c>USE</c> argumenten waarmee je de optionele functionaliteit specifieert die je in je packages wenst; algemeen zijn de default waarden (en dus een <e>lege</e> of niet gedefinieerde USE variabele) genoeg. Je zet best tevens de correcte <c>CHOST</c>, <c>CFLAGS</c> en <c>CXXFLAGS</c> voor je eigen systeem (voorbeelden vind je in het bestand zelf, gecommentarieerd).
</p>
<pre caption="Aanpassen van make.conf">
# <i>nano -w /etc/make.conf</i> <comment>(Pas je instellingen aan)</comment>
</pre>
<note>
Mensen die werkelijk het ganse compileerproces willen tweaken kijken best eens naar het <path>/etc/make.globals</path> bestand. Dit bestand bevat Gentoo's default waarden en zou nooit aangeraakt moeten worden. Als de defaults niet voldoende zijn moet je de nieuwe waarden in <path>/etc/make.conf</path> plaatsen, daar waarden in <path>make.conf</path> de waarden in <path>make.globals</path> <comment>overriden</comment>. Als je de USE variabele wil tweaken, kijk dan in <path>/etc/make.profile/make.defaults</path>. Als je een USE variabele wil uitschakelen die je daarin vindt, voeg dan de nodige <c>USE=&quot; -foo&quot;</c> toe in <path>/etc/make.conf</path> (om de <c>foo</c> waarde uit te schakelen).
</note>
</body>
</section>
</chapter>

<chapter>
<title>Starten met niveau-1</title>
<section>
<body>
<p>De niveau-1 tarball is voor ultieme optimalisaties. Indien je deze tarball gekozen hebt ben je waarschijnlijk op zoek naar een zeer-geoptimaliseerd systeem. Veel plezier allesinds, want optimalisaties is alles waar Gentoo voor staat.
</p>
<p>
Het is nu tijd om het &quot;bootstrap&quot; proces te starten. Dit proces duurt ongeveer 1-2 uren afhankelijk van de snelheid van je pc; het duurt ongeveer 2 uren op een 1200Mhz AMD Athlon systeem. Gedurende deze tijd zal het ge-unpackede systeem klaargemaakt worden om de rest van je systeem te compileren. De GNU Compiler collectie zal gecompileerd worden, alsook de GNU C bibliotheek. Dit zijn tijdsconsumerende compileerprocessen en zijn het grote deel van het bootstrap proces:</p>
<pre caption="Uitvoeren van het bootstrap proces">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>
<p>Het &quot;bootstrap&quot; proces zal nu beginnen.</p>
<note>
Portage gebruik per default de <c>/var/tmp</c> map gedurende het compileren van de packages, wat vaak verschillende honderden megabytes van tijdelijke ruimte vereist. Als je een andere directorie wil laten gebruiken maak je een nieuwe PORTAGE_TMPDIR variabele aan <e>voordat</e> je het bootstrapproces begint:
</note>
<pre caption="Aanpassen van de tijdelijke portage directorie">
# <i>export PORTAGE_TMPDIR="/otherdir/tmp"</i>
</pre>
<p>
<c>bootstrap.sh</c> zal <c>binutils</c>, <c>gcc</c>, <c>gettext</c> en
<c>glibc</c> compileren, waarna ze <c>binutls</c>, <c>gcc</c> en <c>gettext</c>
hercompileert met de nieuwe <c>glibc</c>. Uiteraard neemt dit proces een flinke
hoeveelheid tijd in beslag. Eenmaal dit proces beeindigd is zal je systeem in
een &quot;niveau-2&quot; situatie zitten. Je kan dus nu <c>Starten van
niveau-2</c>.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Starten van niveau-2</title>
<section>
<body>

<p>
De niveau-2 tarball bevat al een gebootstrapped systeem. Al wat je nu nog hoeft te doen is de rest van je systeem te installeren.
</p>
<pre caption="Compileren van het basissysteem">
# <c>export CONFIG_PROTECT=&quot;-*&quot;</c>
# <c>emerge -p system</c>
	<comment>[toont de packages die geinstalleerd zullen worden]</comment>
# <c>emerge system</c>
</pre>

<note>De <c>export CONFIG_PROTECT=&quot;-*&quot;</c> regel zorgt ervoor dat elk nieuw script die in <path>/etc</path> geinstalleerd wordt de oudere scripts overschrijft (opgeslagen in <path>sys-apps/baselayout</path>), waardoor Portage's nieuwe config file management genegeerd wordt. Typ <c>emerge --help config</c> voor meer details.</note>

<p>Het zal een tijdje duren alvorens je het ganse systeem gecompileerd hebt. Je
krijgt het echter dubbel en dik terug: je systeem zal geoptimaliseerd zijn voor
jouw hardware en cpu. Het nadeel is echter dat je je een tijdje zal moeten
bezig houden.  De vertaler van dit document raadt je &quot;Blauw Bloed&quot;
van Pieter Aspe aan. Wanneer <c>emerge system</c> gedaan is, heb je een
niveau-3 Gentoo Linux systeem. Je kan dus nu doorgaan met <c>Starten van
niveau-3</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Starten van niveau-3</title>
<section>
<body>
<p>De niveau-3 tarball bevat al een voorgedefinieerd systeem. Er is niet veel te doen in dit niveau, maar het is een goed idee om
je systeem te updaten zodat je de laatste packages hebt.</p>
<note>Indien je nog niet <path>/etc/make.conf</path> hebt aangepast naar je eigen noden, dan is het nu een goed moment om dat te doen.
</note>
<pre caption="Up-to-date worden">            
# <c>emerge sync</c>            
# <c>emerge -up world</c> <comment>(Toont [<i>packages</i>] die geinstalleerd zullen worden)</comment>            
# <c>emerge -u world</c>            
</pre>          
<p>
Wanneer je deze stap beeindigt hebt is je Gentoo installatie klaar om aan de
volgende stap te beginnen.
</p>

</body>

</section>
</chapter>

<chapter>
<title>Gebruik maken van GRP</title>
<section>
<body>
<p>
Je kan gebruik maken van voorgecompileerde GRP packages om langdurige
compilatie van bepaalde populaire en grote packages te vermijden. Op dit moment
bieden we volledige voorgecompileerde packages aan voor alles wat nodig is voor
<c>gnome</c>, <c>kde</c> en <c>xfree</c>. 
</p>
<p>
Eerst moet je <c>cd</c>'en naar de locatie van de packages. Voor de LiveCD vind
je deze onder <path>/mnt/cdrom/gentoo/packages</path>. In deze directorie vind
je de <c>grp-install.sh</c> script, een <path>All/</path> directorie die alle
binare packages bevat, en een lijst van beschikbare GRP packages. Om een of
meerdere van deze packages te installeren doe je het volgende:
</p>
<pre caption = "GRP klaarstomen">
# <c>sh grp-install.sh &lt;lijst van packages lijst&gt;</c>
<comment>Hierin is &lt;lijst van packages lijst&gt; een of meerdere van de
*-list.txt bestanden is gevonden in dezelfde directorie.</comment>
</pre>
<p>
<c>grp-install.sh</c> kan meerdere keren uitgevoerd worden zonder dat deze
bestaande installaties aanpast. Je kan een <c>sh grp-install.sh</c> uitvoeren
voor basisch gebruik uitleg indien je het niet direct ziet zitten.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Tijdzone</title>
<section>

<body>

<p>Op dit moment zou je een systeem moeten hebben die klaar is voor de laatste configuratiestappen. We starten deze met het configureren van de tijdzone. Door de tijdzone correct te zetten alvorens we de kernel compileren zorgen we ervoor dat we een normale, correcte <c>uname -a</c> output krijgen.</p>

<p>Zoek naar je tijdzone (of GMT indien je de Greenwich Mean Time gebruikt) in <path>/usr/share/zoneinfo</path>. Maak dan een symbolische link door het volgende in te typen:</p>
<pre caption="Instellen van de tijdzone">
# <i>ln -sf /usr/share/zoneinfo/path/to/timezonefile /etc/localtime</i>
</pre>
<p>Je wil waarschijnlijk tevens <path>/etc/rc.conf</path> controleren om zeker te zijn dat je tijdzone instellingen correct zijn.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Finale stappen: kernel en syslog</title>
<section>
<body>

<note>
Indien je dit nog niet gedaan hebt, gelieve dan <path>/etc/make.conf</path> aan te passen naar jouw smaak.
</note>

<p>
Je moet nu de Linux-kernel source ebuilds emergen. Hier zijn deze die we momenteel te rbeschikking stellen:
</p>
<table>
<tr><th>ebuild</th><th>uitleg</th></tr>
<tr><ti><path>gentoo-sources</path></ti><ti>Gentoo's eigen performantie en
functionaliteits-geoptimaliseerde kernel bevat geen XFS ondersteuning</ti></tr>
<tr><ti><path>xfs-sources</path></ti><ti>Volledig compatibele kernel met XFS
ondersteuning</ti></tr>
<tr><ti><path>openmosix-sources</path></ti><ti>De standaard kernel broncode uitgebreid met ondersteuning voor de GPL <uri link="http://www.openmosix.com">openMosix</uri> load-balancing/clustering technologie.</ti></tr>
<tr><ti><path>usermode-sources</path></ti><ti>De standaard kernel broncode uitgebreid met ondersteuning voor User-Mode Linux. (&quot;Linux inside Linux&quot; technologie)</ti></tr>
<tr><ti><path>vanilla-sources</path></ti><ti>De standaard kernel broncode, net zoals je die van kernel.org afhaalt.</ti></tr>
</table>

<warn>
Indien je je eigen kernel configureert, wees dan voorzichtig met de
<i>grsecurity</i> optie. Indien je te agressief bent met je
veiligheidsinstellingen kan het zijn dat bepaalde programmas (zoals X) weigeren
correct te werken. Indien je twijfelt, selecteer deze dan niet.
</warn>

<p>Kies een van de ebuilds en merge deze als volgt:</p>
<pre caption="Downloaden van de Linux-kernel met optimalisatie-patches">
# <c>emerge sys-kernel/gentoo-sources</c>
</pre>

<p>Eenmaal je een Linux kernel broncode beschikbaar hebt is het tijd om je eigen kernel te bakken:
</p>
<pre caption="Configureren en compileren van de kernel">
# <c>cd /usr/src/linux</c>
# <c>make menuconfig</c>
# <c>make dep &amp;&amp; make clean bzImage modules modules_install</c>
# <c>mv /boot/bzImage /boot/bzImage.orig</c> <comment>[als bzImage al bestaat]</comment>
# <c>cp /usr/src/linux/arch/i386/boot/bzImage /boot</c>
</pre>
<warn>
Opdat je kernel goed zou werken zijn er verschillende opties die je zeker moet activeren -- dat wil zeggenm ze moeten <i>in de kernel zitten</i> en <i>niet als modules</i>. Je zal <i>&quot;Code maturity level options --&gt; Prompt for development and/or incomplete code/drivers&quot;</i> moeten selecteren (&quot;/dev/pts file system support&quot; is echter niet nodig) om verschillende van deze opties tegen te komen. Je moet ook <i>&quot;Virtual Memory Filesystem&quot;</i> moeten selecteren. Indien je ReiserFS gebruikt moet &quot;ReiserFS&quot; geselecteerd worden. Hetzelfde geldt voor &quot;Ext3&quot;. Als je XFS wil gebruiken, selecteer &quot;SGI XFS filesystem support&quot;. Het is altijd een goed idee om ext2 in te bouwen, ook al gebruik je het niet. Ook zullen de meeste mensen die IDE harde schijven hebben &quot;Use DMA by default&quot; willen selecteren; anders kan het zijn dat je IDE schijven slechte performatie zullen vertonen. Uiteraard, vergeet niet &quot;IDE disk support&quot; te selecteren, anders zal je kernel je schijven niet herkennen.
</warn>
<p>
Indien je Hardware RAID gebruikt moet je nog enkele extra opties aanduiden in de Linux-configuratie. Voor Highpoint RAID controllers selecteer de hpt366 chipset ondersteuning, ondersteuning voor de IDE RAID-controllers en Highpoint 370 Software RAID. Voor Promise RAID controllers selecteer je best PROMISE PDC202{46|62|65|67|69|70} ondersteuning, ondersteuning voor IDE RAID-controllers en ondersteuning voor Promise Software RAID (Fasttrak(tm))
</p>
<p>
Indien je PPPoE gebruikt om naar het internet te connecteren moet je de volgende zaken in de Linux-kernel aanduiden (ofwel in de kernel, ofwel - en dit is aangeraden - via modules): &quot;PPP (Point-to-Point Protocol) support&quot;, &quot;PPP support voor async serial ports&quot;, &quot;PPP support for sync tty ports&quot;. De 2 compressie-opties zijn niet schadelijk maar zijn ook niet nodig; ook de &quot;PPP over Ethernet&quot; optie is niet nodig; deze zal enkel gebruikt worden indien je aan <i>rp-pppoe</i> vraagt om kernel-mode PPPoE toe te passen (wat niet default is).
</p>
<p>
Indien je een IDE cd brander hebt, dan moet je tevens &quot;SCSI emulation&quot; selecteren in de kernel. Activeer "ATA/IDE/MFM/RLL support" --> "IDE, ATA and ATAPI Block devices" --> "SCSI emulation support", "SCSI CD-ROM support" en "SCSI generic support" (sommige mensen compileren deze als modules, dat mag). Als je deze als modules compileert, voer dan <c>echo -e "ide-scsi\nsg\nsr_mod" >> /etc/modules.autoload</c> uit om deze automatisch te laden als je je systeem opstart.
</p>
<note>
Voor deze die het prefereren is het nu mogelijk Gentoo Linux te installeren met een 2.2-kernel. Deze keuze komt echter met een prijs: je zal verschillende nieuwe features van de 2.4-kernels missen (zoals XFS, tmpfs, iptables, ...) alhoewel de 2.2-broncode uitgebreid kan worden met ReiserFS en devfs-ondersteuning. De Gentoo Linux bootscripts gebruiken tmpfs of ramdisk ondersteuning die in de kernel moet zitten, dus 2.2-kernelgebruikers moeten zich ervan verzekeren dat ramdisk-ondersteuning in de kernel zit (en <i>niet</i> als module). Het is dan van <comment>vitaal belang</comment> dat een <e>gentoo=notmpfs</e> argument meegegeven wordt met de kernelregel in <path>/boot/grub/grub.conf</path> voor de 2.2-kernel zodat een ramdisk gebruikt wordt ipv tmpfs. Als je ervoor kiest geen devfs te gebruiken, verander de regel dan naar <e>gentoo=notmpfs,nodevfs</e>.
</note>

<p>
Je nieuwe kernel (en modules) zijn nu geinstalleerd. Nu moet je een keuze maken tussen de verschillende syslog daemons die Gentoo bijlevert. Dit zijn sysklogd, de traditionele groep systeemlog-daemons, msyslog, syslog-ng en metalog. Geavanceerde gebruikers hebben de neiging te emigreren van sysklogd (die niet al te goede performantie heeft) naar syslog-ng of metalog. Indien je twijfelt, dan zal je mogelijk metalog het liefst hebben, sinds dat het zeer populair is. Om de systeemlogger van je keuze te merge'n, typ <e>een</e> van de volgende 3 groepen lijnen in:
</p>
<pre caption="Installeren van een syslog-daemon">
# <c>emerge app-admin/sysklogd</c>
# <c>rc-update add sysklogd default</c>
<comment>of</comment>
# <c>emerge app-admin/syslog-ng</c>
# <c>rc-update add syslog-ng default</c>
<comment>of</comment>
# <c>emerge app-admin/metalog</c>
# <c>rc-update add metalog default</c>
<comment>of</comment>
# <c>emerge app-admin/msyslog</c>
# <c>rc-update add msyslog default</c>
</pre>
<warn>
Indien je syslog-ng kiest zal je een <path>/etc/syslog-ng/syslog-ng.conf</path> bestand moeten aanmaken. Zie <path>/etc/syslog-ng</path> voor een voorbeeld configuratiebestand.
</warn>
<impo>
Metalog stuurt informatie naar de harde schijf in blokken, dus berichten worden niet direct in de logs geschreven. Indien je een daemon wil debuggen is deze manier van werken niet handig. Om deze buffering tegen te gaan kan je metalog een USR1-signaal zenden om dit tijdelijk uit te schakelen (zodat <i>tail -f <path>/var/log/everything/currebt</path></i> wel in real time zal werken, zoals gewenst) en een USR2-signaal om dit terug te activeren.
</impo>
<p>Nu kan je ervoor kiezen om een cron-package te installeren. Op dit moment levert Gentoo dcron, fcron en vcron. Als je niet weet welke te nemen, neem je het best vcron. Deze cron-packages kunnen als volgt geinstalleerd worden:
</p>
<pre caption="Installeren van een cron-daemon">
# <c>emerge sys-apps/dcron</c>
# <c>crontab /etc/crontab</c>
<comment>of</comment>
# <c>emerge sys-apps/fcron</c>
# <c>crontab /etc/crontab</c>
<comment>of</comment>
# <c>emerge sys-apps/vcron</c>
<comment>Vergeet niet je *cron toe te voegen aan de default runlevel</comment>
# <c>rc-update add *cron default </c>
</pre>
<!-- <p>Voor meer informatie over hoe cron werkt onder Gentoo Linux, zie <uri
link="http://lists.gentoo.org/pipermail/gentoo-announce/2002-April/000151.html">deze
announcement (Engels)</uri>.</p> -->
<p>Voor meer informatie over hoe je programma's en daemons opstart via de
runlevels, zie <uri link="/doc/en/rc-scripts.xml">rc-script guide</uri>.</p>
</body>
</section>
</chapter>
<chapter>
<title>Finale stappen: andere packages compileren</title>
<section>
<body>
<p>
Indien je rp-pppoe nodig hebt voor een internetconnectie weet dan dat op dit moment die nog niet geinstalleerd is. Het is dus een goed moment om ook dat te doen.
</p>
<pre caption = "Installeren van rp-pppoe">
# <c>emerge rp-pppoe</c>
</pre>
<note>
Op dit moment is rp-pppoe wel geinstalleerd maar nog niet geconfigureerd. Je zal opnieuw <c>adsl-setup</c> moeten uitvoeren eenmaal je in je nieuwe Gentoo-installatie geboot bent.
</note>
<p>
Het is goed mogelijk dat je nog enkele extra packages zal moeten compileren alvorens je Gentoo Linux gebruikt, vooral indien je features zoals XFS, ReiserFS of LVM gebruikt.
</p>
<pre caption="Installeren van de filesystemtools tools">
# <c>emerge sys-apps/xfsprogs</c> <comment>Voor XFS</comment>
# <c>emerge sys-apps/reiserfsprogs</c> <comment>Voor ReiserFS</comment>
# <c>emerge sys-apps/lvm-user</c> <comment>Voor LVM</comment>
</pre>
<p>
Indien je een laptop-gebruiker bent en je wil PCMCIA-ondersteuning wanneer je voor het eerst werkelijk in je Gentoo Linux systeem boot, installeer dan de <i>pcmcia-cs</i> ebuild:
</p>
<pre caption="Installeren van de pcmcia-cs tools">
# <c>emerge sys-apps/pcmcia-cs</c>
</pre>

<warn>
Je zal <i>pcmcia-cs</i> opnieuw moeten emergen na de installatie om de PCMCIA werkende te krijgen.
</warn>

</body>
</section>
</chapter>
<chapter>
<title>Finale stappen: /etc/fstab</title>
<section>
<body>
<p>
Je Gentoo Linux systeem is bijna klaar om te gebruiken. Al wat we nu nog moeten doen is enkele belangrijke systeembestanden aanmaken en de GRUB bootloader installeren. Het eerste bestand dat we gaan configureren is <path>/etc/fstab</path>. Onthou dat je de <c>notail</c> optie moet gebruiken voor je boot-partitie indien je een ReiserFS bestandssysteem ervoor gebruikt. Specifieer tevens <c>ext2</c>, <c>ext3</c> of <c>reiserfs</c> bij de correcte partities.
</p>
<p>
Gebruik zoiets als de <path>/etc/fstab</path> hieronder getoond, maar vervang uiteraard &quot;BOOT&quot;, &quot;ROOT&quot; en &quot;SWAP&quot; met de echte partities die je gebruikt (zoals <c>hda1</c>, etc...).</p>
<pre caption="/etc/fstab">
<comment>
# /etc/fstab: statische bestandssysteeminformatie.
#
# noatime schakelt het gebruik van atimes uit voor betere performantie
# (atime's zijn normaal gezien niet nodig). notail verbetert de 
# performantie van reiserfs-bestandssystemen (ten nadele van schijfruimte).
# Het is veilig om de noatime opties te laten vallen indien je vrij tussen
# notail en tail wil wisselen.

# &lt;fs&gt;           &lt;mountpoint&gt;   &lt;type&gt;   &lt;opts&gt;          &lt;dump/pass&gt;

# NOTE: Als je boot-partitie ReiserFS is, vergeet notail niet !!!
</comment>
/dev/BOOT           /boot       ext2	 noauto,noatime	 1 2
/dev/ROOT           /           ext3	 noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro       0 0
proc                /proc       proc	 defaults        0 0
</pre>

<warn>
Merk op dat <i>/boot</i> NIET gemount wordt tijdens het opstarten. Dit is om de data in <i>/boot</i> te beschermen tegen data corruptie. Indien je <i>/boot</i> nodig hebt, vergeet het niet te mounten !
</warn>

</body>
</section>
</chapter>
<chapter>
<title>Finale: rootpaswoord ingeven</title>
<section>
<body>
<p>Alvorens je het vergeet, stel je rootpaswoord in:</p>
<pre caption="Aanpassen van je rootpaswoord">
# <c>passwd</c>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Finale stappen: /etc/hostname</title>
<section>
<body>
<p>Pas dit bestand aan zodat het je volledige hostname bevat, dit op 1 regel, zoals <c>mymachine.mydomain.com</c>. </p>
<pre caption="Instellen van een hostname">
# <c>echo mymachine.mydomain.com &gt; /etc/hostname</c>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Finale stappen: /etc/hosts</title>
<section>
<body>
<p>
Dit bestand bevat een lijst van ip-adressen en hun respectieve hostnames. Het wordt gebruikt door je systeem om IP-adressen en pc-namen met elkaar te linken voor zover ze niet in de nameservers zitten. Hier is een voorbeeld:
</p>
<pre caption="/etc/host instellingen">
127.0.0.1      localhost
<comment># de volgende regel bevat jouw IP-nummer alsook de naam van je pc in de LAN</comment>
192.168.1.1    mymachine.mydomain.com	mymachine
</pre>

<note>Als je op een DHCP-netwerk zit kan het handig zijn om je <i>localhost</i> aan te passen naar je machine's echte hostname. Dit zal GNOME en verschillende andere programmas helpen in het omzetten van IP naar hostnames en omgekeerd.
</note>
</body>
</section>
</chapter>
<chapter>
<title>Finale netwerkconfiguratie</title>
<section>
<body>
<p>
Voeg de namen toe van de modules die vereist zijn voor het correct functioneren van je systeem aan <path>/etc/modules.autoload</path> (je kan daarbij tevens extra opties meegeven door deze op dezelfde regel te plaatsen). Wanneer Gentoo Linux boots zullen deze modules automatisch geladen worden. Zeer belangrijk is je netwerkkaartmodule (indien je deze als een module gecompileerd hebt):
</p>
<pre caption="/etc/modules.autoload">
3c59x <comment># Dit in de veronderstelling dat je een 3Com netwerkkaart gebruikt.</comment>
<comment>Kijk in <path>/lib/modules/`uname -r`/kernel/drivers/net</path> voor jouw netwerkkaart.</comment>
</pre>
<p>Pas het bestand <path>/etc/conf.d/net</path> aan opdat je netwerk correct geconfigureerd is wanneer je opstart:
</p>
<pre caption="Configureren van het netwerk">
# <c>nano -w /etc/conf.d/net</c>
# <c>rc-update add net.eth0 default</c>
</pre>
<p>Indien je meerdere netwerkkaarten hebt zal je extra <path>net.eth<comment>x</comment></path> bestanden moeten maken voor elke extra netwerkkaart (<comment>x</comment> = 1, 2, ...):
</p>

<pre caption="Meerdere netwerkkaarten">
# <c>cd /etc/init.d</c>
# <c>cp net.eth0 net.eth<comment>x</comment></c>
# <c>rc-update add net.eth<comment>x</comment> default</c>
</pre>
<p>
Indien je een PCMCIA netwerkkaart gebruikt, neem dan een snelle kijk in <path>/etc/init.d/pcmcia</path> om te zien of alles in orde lijkt voor jouw systeem, en voeg dan het volgende toe bovenaan <path>/etc/init.d/net.eth<comment>x</comment></path> opdat de PCMCIA drivers automatisch geladen zouden worden wanneer je netwerk gestart wordt:
<pre caption="Activeren van pcmcia-vereiste">
depend() {
	need pcmcia
}
</pre>
</p>
</body>
</section>
</chapter>
<chapter>
<title>Finale stappen: configureer de basisch instellingen (inclusief de keyboard instelling)</title>
<section>
<body>
<pre caption="basisch configuratie">
# <c>nano -w /etc/rc.conf</c>
</pre>
<p>
Volg de aanwijzingen in dit bestand om de basisch instellingen aan te passen. Alle gebruikers zullen zich ervan moeten verzekeren dat <c>CLOCK</c> correct gedefinieerd is. Internationale keyboard-gebruikers zullen tevens <c>KEYMAP</c> willen aanpassen naar hun smaak (browse <path>/usr/share/keymaps</path> om de verschillende mogelijkheden te zien).
</p>
</body>
</section>
</chapter>

<!-- Dit lijkt ineens verdwenen te zijn. Ik hou deze vertaling eventjes onder commentaar just in case :-)

<section>
<title>Finale stappen: harddisk instellingen (hdparm)</title>
<body>
<p>
Voeg je <i>hdparm</i> tweaks toe aan <path>/etc/conf.d/local.start</path> opdat deze automatisch uitgevoerd worden tijdens het opstarten.
</p>
<pre caption="Programmas at bootup laten starten">
# <i>nano -w /etc/conf.d/local.start</i>
</pre>
<pre caption="voeg hdparm tweaks toe aan /etc/conf.d/local.start">
# Dit is een goede plaats om verscheidene 
# programmas te definieren die moeten opgestart
# worden tijdens het booten van je pc ( 1>&amp;2 )

# zet DMA aan op beide harde schijven
hdparm -d 1 /dev/hda
hdparm -d 1 /dev/hdb
</pre>
</body>
</section>

-->

<chapter>
<title>Finale stappen: configureer GRUB</title>
<section>
<body>
<p>
Een van de meest kritische zaken bij het verstaan van GRUB is te weten komen hoe GRUB kijkt naar harde schijven en partities. Je Linux-partitie <path>/dev/hda1</path> heet <path>(hd0,0)</path> onder GRUB. Bemerk de haakjes rond hd0,0 - deze zijn verplicht. Harde schijven starten vanaf 0 ipv &quot;a&quot; en een partitie start vanaf 0 ipv 1. Tevens worden enkel harde schijven geteld, en dus niet atapi-ide apparaten zoals cd-roms. Een gelijkaardige constructie geldt voor SCSI-apparaten. Normaal gezien krijgen deze laatste hogere nummers, tenzij de BIOS ingesteld is om van de SCSI-apparaten te booten. 
</p>
<p>Dus, in de veronderstelling dat je een HD op <path>/dev/hda</path> staan hebt, een cdrom-speler op <path>/dev/hdb</path>, een cd-rw op <path>/dev/hdc</path> en een andere HD op <path>/dev/hdd</path> en geen SCSI-apparaten, dan wordt <path>/dev/hdd7</path> vertaald naar <path>(hd1,6)</path>.
</p>
<p>
Dit lijkt ingewikkeld, en eigenlijk is het dat ook een beetje, maar zoals we later zullen zien heeft GRUB een tab-auto-aanvulling mechanisme dat je kan helpen indien je veel partities en harde schijven liggen hebt en je een beetje verloren bent in het schema van aanduidingen. Nu we dit ook weten, is het tijd om GRUB te installeren.
</p>

<p>
De meest eenvoudige manier om grub te installeren is simpelweg <c>grub</c> te typen op je gechrootte shellprompt:
</p><pre caption="Opstarten van grub">
# <c>grub</c>
</pre>
<impo>
Indien je hardware RAID gebruikt zal dit deel niet werken. Ga direct verder naar de sectie waar <path>grub.conf</path> gemaakt wordt. Daarna zullen we uitleggen hoe je de grub setup afwerkt voor RAID controllers.
</impo>
<p>
Je zal de <c>grub&gt;</c> prompt te zien krijgen. Nu moet je de correcte commando's ingeven om GRUB te installeren op je harde schijf. In deze voorbeeldconfiguratie willen we GRUB installeren op de boot record van de harde schijf (de MBR, master boot record), zodat het eerste wat we te zien krijgen als we de pc opstarten de GRUB prompt is. In dit geval zijn de commando's:
</p>
<pre caption="Configureren van grub">
grub&gt; <c>root (hd0,0)</c>
grub&gt; <c>setup (hd0)</c>
grub&gt; <c>quit</c>
</pre>

<p>
Hier is hoe de commando's werken. Het eerste commando, <c>root ( )</c>, vertelt GRUB de locatie van de bootpartitie (in dit voorbeeld, <path>/dev/hda1</path> of dus <path>(hd0,0)</path> in GRUB-nomenclatuur. Het tweede commando, <c>setup ( )</c>, vertelt GRUB waar hij de boot record moet installeren - het zal automatisch geconfigureerd worden om de speciale files te zoeken in de door <c>root ( )</c> gedefinieerde locatie. In dit voorbeeld willen we GRUB in de MBR, dus is het antwoord <path>/dev/hda</path> of nog <path>(hd0)</path>. Indien we GRUB gebruiken als secundaire bootloader en een ander programma als primaire kunnen we dus tevens aan GRUB vragen om zich op een bepaalde partitie in te nestelen ipv de MBR. Eenmaal GRUB dit commando uitgevoerd heeft sluiten we grub door <c>quit</c> in te typen. 
</p>
<note>
De tab-auto-aanvulling van GRUB helpt je bij de keuze van bijvoorbeeld partities. Indien je <c>root (</c> ingetypt hebt en je drukt dan op TAB, dan krijg je een lijst met de mogelijke apparaten. Indien je <c>root (hd</c> ingetypt hebt en dan TAB, dan krijg je een lijst met de mogelijke harde schijven. Na <c>root (hd0,</c> TAB indrukken geeft je een lijst met mogelijke partities.
Gebruik maken van de tab-auto-aanvulling is aangeraden: je hebt minder kans om fouten te maken.
</note>
<p>
Nu is Gentoo Linux klaar, maar we moeten eerst de <path>/boot/grub/grub.conf</path> aanmaken zodat we een mooie GRUB bootmenu te zien krijgen wanneer het systeem opstart.
</p>
<impo>Om terugwaarde compatibiliteit te garanderen is het aangeraden een symbolische link aan te maken van <i>grub.conf</i> naar <i>menu.lst</i>. Dit kan je doen door <c>ln -s /boot/grub/grub.conf /boot/grub/menu.lst </c>. 
</impo>
<p>
Creeer een grub.conf bestand (<c>nano -w /boot/grub/grub.conf</c>) en voeg de volgende regels toe:
</p>
<pre caption="Instellen van de (multi)boot opties: /boot/grub/grub.conf">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Mijn Gentoo Linux voorbeeld
root (hd0,0) 
kernel /boot/bzImage root=/dev/hda3 

<comment># Dit is enkel voor hardware RAID</comment>
title=Mijn RAID Gentoo Linux voorbeeld
root (hd0,0)
kernel /boot/bzImage root=/dev/ataraid/discX/partY

<comment># Dit is enkel voor dual-bootgebruikers</comment>
title=Windows NT Workstation
root (hd0,5) 
chainloader +1
</pre>
<impo>
Indien je scsi emulatie voor een IDE CD-brander gebruikt, dan moet je &quot;hdx=ide-scsi&quot; toevoegen aan de kernel-regel in <path>grub.conf</path> (met &quot;hdx&quot; de drive die bij je CD-brander past).
</impo>
<p>
Nadat je dit bestand opgeslagen hebt is de Gentoo Linux installatie afgewerkt. Door de eerste keuze te selecteren zal GRUB Linux booten. Het tweede deel van grub.conf is optioneel en toont je hoe je GRUB vraagt om een Windows partitie te booten (deze moet bootable zijn uiteraard).
</p>

<note>
Hierboven moet <path>(hd0,0)</path> naar je bootpartitie wijzen (<path>/dev/hda1</path> in dit voorbeeld) en <path>/dev/hda3</path> moet wijzen naar je root bestandssysteem. <path>(hd0,5)</path> bevat de NT bootloader.
</note>
<note>
Het pad naar de kernel image is relatief tov de bootpartitie. Indien je, bijvoorbeeld, een aparte bootpartitie hebt onder <path>(hd0,0)</path> en een rootpartitie onder <path>(hd0,1)</path>, dan worden de paden in grub.conf <path>/bzImage</path>.
</note>
<p>
Indien je enige opties moet meegeven aan de kernel moet je deze gewoon toevoegen aan het eind van de <c>kernel</c> regel. We geven al 1 optie mee (<c>root=/dev/hda3</c>) maar je kan er nog andere toevoegen. Bijvoorbeeld kan je devfs uitschakelen (niet aangeraden als je niet weet wat je aan het doen bent) door <c>gentoo=nodevfs</c> mee te geven in de <c>kernel</c> regel.
</p>

<note>
Je moet, in tegenstelling tot oudere Gentoo Linux versies, niet meer <c>devfs=mount</c> meegeven op het einde van de <c>kernel</c> regel om devfs te activeren. Vanaf rc6 is devfs per default geactiveerd.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Finale stappen: Configureren van LILO</title>
<section>
<body>
<p>Alhoewel GRUB de meest gebruikte bootloader is is ze niet altijd de beste
keuze. LILO, de LInux LOader is het veelgeteste en werkelijk stabiele 
werkpaard van de Linux bootloaders. 
Hierna volgt hoe je LILO ipv GRUB installeert:
</p>
<p>De eerste stap is het emergen van LILO:
</p>
<pre caption="Emerging LILO">    
# <c>emerge lilo</c>            
</pre>            
<p>Nu is het tijd om LILO te configureren. Ik zal je een kleine <i>lilo.conf</i> tonen om te gebruiken en
zal je uitleggen wat de verschillende zaken zijn.
</p>
<pre caption="Voorbeeld lilo.conf">    
boot=/dev/hda    
map=/boot/map    
install=/boot/boot.b    
prompt    
timeout=50    
message=/boot/message    
lba32    
default=linux        
image=/boot/vmlinuz-2.4.20            
label=linux            
initrd=/boot/initrd-2.4.20.img           
read-only            
root=/dev/hda5        
#Voor dual-booting van Windows e.a. besturingssystemen
other=/dev/hda1            
label=dos                
</pre>            
<li><i>boot/dev/hda</i> vertelt LILO dat hij zichzelf moet installeren op de eerste HD op de eerste IDE controller.</li>
<li><i>map=/boot/map</i> geeft de locatie van de map-file. In normaal gebruik moet je dit niet aanpassen.</li>   
<li><i>install=/boot/boot.b</i> vertelt LILO om dat bestand als nieuwe bootsector te gebruiken.
Bij normaal gebruik moet dit niet aangepast worden. Indien deze regel vermist is, zal LILO /boot/boot.b als default gebruiken.</li>
<li>Indien <i>prompt</i> in de configfile staat, zal LILO je tonen wat er in de message-regel staat en een tijdje wachten alvorens
verder te gaan met de default instelling. Alhoewel het niet aan te raden is om prompt te verwijderen kan je nog steeds, door SHIFT in
te drukken tijdens het booten, een prompt krijgen.</li>
<li><i>timeout=50</i> stelt het aantal tienden van een seconde in dat LILO wacht op gebruikers-commando's.  Indien de gebruiker
niet binnen deze tijdsperiode een toets indrukt zal LILO verder doen met de default instellingen. Indien je deze regel 
achterwege laat worden er default 50 tienden van een seconde genomen.</li>
<li><i>message=/boot/message</i> verwijst naar de boodschap die LILO toont tijdens het opstarten wanneer je een keuze kan maken tussen
de verschillende besturingssystemen of kernels.</li>
<li><i>lba32</i> vertelt aan LILO hoe de HD geometrie is. Een andere mogelijkheid is <i>linear</i>. Tenzij je weet wat je doet
blijf je beter van deze regel af. Mogelijkerwijs maak je anders je systeem niet-bootable.</li>
<li><i>default=linux</i> verwijst naar de default besturingssysteem dat LILO moet booten van al de mogelijkheden die lager 
in lilo.conf gedefinieerd zijn. De naam &quot;linux&quot; verwijst naar de label-regel van een desbetreffende mogelijkheid.</li>
<li><i>image=/boot/vmlinuz-2.4.20</i> specifieert het linux-kernel-bestand die bij deze mogelijkheid geboot dient te worden.</li>
<li><i>label=linux</i> geeft een naam aan de mogelijkheid voor in het LILO-scherm. In dit voorbeeld is het tevens de naam die
gebruikt wordt bij de default-regel, en dus zal deze mogelijkheid default opstarten.</li>
<li><i>initrd=/boot/initrd-2.4.20.img</i> verwijst naar de ram disk die tijdens het booten gebruikt moet worden
om de hardware te initialiseren die het booten van de kernel mogelijk maakt. Dit is een collectie van hardware-drivers
die nodig zijn om een SCSI-apparaat, een HD of enig andere hardware dat nodig is om de kernel te laden aan te spreken.
Probeer nooit deze ramdisks uit te wisselen met andere systemen: ze zijn zeer systeemafhankelijk.</li>
<li><i>read-only</i> zegt dat de root partitie in het begin read-only moet gemount worden en dus tijdens het booten
niet mag veranderen.</li>
<li><i>root=/dev/hda5</i> vertelt LILO welke partitie gebruikt moet worden als rootpartitie.</li>
<note>Met dan aan <uri link="http://www.redhat.com">RedHat.com</uri> voor deze informatie.       
</note>            
<p>Nadat je je <i>lilo.conf</i> bestand aangepast hebt, moet je LILO uitvoeren om de aanpassingen in de MBR neer te schrijven:
</p>
<pre caption="Uitvoeren van LILO">    
# <c>/sbin/lilo</c>            
</pre>            
<p>LILO is nu geconfigureerd en je machine is nu klaar om in Gentoo Linux te booten.
</p>          
</body>        
</section>      
</chapter>      
<chapter>        
<title>Finale stappen: Bootdisks</title>
<section>          
<title>GRUB Bootdisks</title>          
<body>            
<p>Het is altijd een goed idee om een bootdisk aan te maken indien je
een Linux distributie voor de eerste keer installeert. Dit is een 
veiligheid, en dus geen verkeerde beslissing.</p>

<p>
Indien je hardware RAID gebruikt kan het zijn dat je een grub bootdisk moet 
aanmaken. Als je met hardware RAID grub wil installeren vanuit je gechrootte 
shell zal dat mislukken. Dus maken we een grub bootdisk, en wanneer we dan 
van die diskette geboot hebben installeren we grub in de mbr. Maak je bootdisk 
als volgt:
</p>

<pre caption="Grub installeren bij hardware RAID">
# <c>mke2fs /dev/fd0</c>
# <c>mount /dev/fd0 /mnt/floppy</c>
# <c>mkdir /mnt/floppy/boot</c>
# <c>cp /usr/share/grub/i386-pc/stage1 /mnt/floppy/boot/grub</c>
# <c>cp /usr/share/grub/i386-pc/stage2 /mnt/floppy/boot/grub</c>

# <c>grub</c>

grub&gt; <c>root (fd0)</c>
grub&gt; <c>setup (fd0)</c>
grub&gt; <c>quit</c>
</pre>
<p>
Reboot nu van de floppy. Op de floppy's <c>grub&gt;</c> prompt kan je nu de
nodige <c>root</c> en <c>setup</c> commando's uitvoeren.
</p>

</body>
</section>
<section>
 <title>LILO bootdisks</title>
 <body>
  <p>Indien je LILO gebruikt is het tevens een goed idee om een bootdisk te maken. </p>
  <p>
<pre caption="Making a LILO Bootdisk">    
# <c>dd if=/boot/je_kernel of=/dev/fd0</c>    <comment>(Dit werkt enkel indien je kernel kleiner dan 1.4 MiB is)</comment>
</pre>
  </p>
 </body>
</section>
</chapter>
<chapter>
<title>Installatie afgewerkt!</title>
<section>
<body>
<p>
Nu is Gentoo Linux geinstalleerd. De enige stappen die nog overblijven zijn het beeindigen van je sessie (chroot shell verlaten), de nodige configuratiebestanden aanpassen, je partities unmounten en het systeem heropstarten:
</p>
<pre caption="Updaten van de configfiles">
# <c>etc-update</c>
# <c>exit</c> 
<codenote>Dit beeindigd de gechrootte shell. Je kan dit tevens door <c>^D</c> in te typen.</codenote>
# <c>cd / </c>
# <c>umount /mnt/gentoo/boot</c>
# <c>umount /mnt/gentoo/proc</c>
# <c>umount /mnt/gentoo</c>
# <c>reboot</c>
</pre>
<note>
Na rebooten is het een goed idee om <c>update-modules</c> uit te voeren om het <path>/etc/modules.conf</path> bestand aan te maken. In plaats van dit bestand rechtstreeks aan te passen is het beter om aanpassingen in de bestanden in <path>/etc/modules.d</path> te maken.
</note>
<impo>
Vergeet niet dat, indien je hardware RAID gebruikt, je de bootdisk moet gebruiken voor de eerste reboot. Ga dan terug in dit document en installeer grub op de manier die voorgeschreven is. 
Je bent nu klaar -- Proficiat!
</impo>
<p>
Indien je vragen hebt of je zou willen meewerken aan de ontwikkeling van Gentoo Linux, overweeg dan om jezelf te subscriben op de gentoo-user en gentoo-devel mailinglists (er is een &quot;klik hier om te subscriben&quot; op <uri link="http://www.gentoo.org">de hoofdpagina</uri>). We hebben tevens een handige <uri link="http://www.gentoo.org/doc/en/desktop.xml">Desktop configuratie gids</uri> die je helpt om je nieuwe Gentoo Linux systeem te configureren, en een handige <uri link="http://www.gentoo.org/doc/en/portage-user.xml">Portage gebruikgids</uri> om je op stap te zetten met het portage gebruik. De rest van de Gentoo Documentatie vind je <uri links = "http://www.gentoo.org/main/en/docs.xml">hier</uri>. Indien je nog enkele andere vagen hebt over de installatie of zelfs iets anders over Gentoo, gelieve dan de Gentoo Linux <uri link = "http://www.gentoo.org/doc/en/faq.xml">FAQ</uri>. Geniet en welkom bij Gentoo Linux !
</p>
</body>
</section>
</chapter>

<chapter>
<title>Gentoo-Stats</title>
<section>
<body>
<p>
Het Gentoo Linux gebruikers-statistieken programma was ontwikkeld als een poging om de ontwikkelaars een idee te geven over hun gebruikersbasis. Het collecteert informatie over Gentoo Linux gebruik om ons te helpen in het neerschrijven van prioriteiten voor de ontwikkeling. Het is een volledig optioneel programma en het zou ten zeerste geapprecieerd zijn indien je het zou gebruiken.
Voorgekauwde statistieken kan je vinden op <uri>http://stats.gentoo.org</uri>.
</p>
<p>
De gentoo-stats server zal aan je systeem een ID toekennen die ervoor zorgt dat elk systeem maar 1 maal meegeteld wordt. Deze ID zal niet gebruikt worden om je systeem de identificeren en het zal niet met een IP gelinkt worden of enig ander doel hebben. Tijdens de ontwikkeling van het systeem is elke mogelijke voorzorgsmaatregel genomen om je privacy te garanderen. De volgende zaken worden door &quot;gentoo-stats&quot; bekeken en doorgegeven:
</p>
<ul>
<li>Geinstalleerde packages en hun versie-nummer</li>
<li>CPU informatie: snelheid (MHz), merk, type, CPU flags (zoals &quot;mmx&quot; of &quot;3dnow&quot;)</li>
<li>geheugen-informatie (totaal beschikbare fysieke RAM en swap-ruimte)</li>
<li>PCI- en netwerkkaarten</li>
<li>Het Gentoo Linux-profiel dat je pc gebruikt (dat is de file waarnaartoe <path>/etc/make.profile</path> wijst).</li>
</ul>

<p>
Wij zijn er ons van bewust dat het vrijgeven van gevoelige informatie een gevaar is voor de Gentoo Linux gebruikers (net zoals voor de ontwikkelaars). 
</p>

<p>
De volgende zaken zijn een lijst van gegevens die niet en nooit zullen gearchiveerd worden:
</p>
<ul>
<li>Tenzij je het gentoo-stats programma aanpast zal het nooit gevoelige informatie, zoals paswoorden, configuratie-gegevens, schoenmaat, ... doorsturen.</li>
<li>Versturen van e-mailadressen is optioneel en staat standaard af.</li>
<li>Het IP-adres van waaruit de gegevens komen worden niet gelinkt op eender welke wijze dat we je kunnen identificeren. Er zijn geen &quot;IP-adres/System ID&quot; sleutels.</li>
</ul>

<p>De installatie is eenvoudig - voer gewoon het volgende uit:</p>

<pre caption = "Emerging Gentoo-Stats">
# <c>emerge gentoo-stats</c> <codenote>Installeert gentoo-stats</codenote>
# <c>gentoo-stats --new</c> <codenote>Verkrijgen van een nieuwe System ID</codenote>
</pre>

<p>
Het tweede commando vraagt een nieuwe System ID aan en slaat deze op in <path>/etc/gentoo-stats/gentoo-stats.conf</path>. Je kan dat bestand bekijken om meer opties te vinden.
</p>

<p>
Hierna zou je programma best op regelmatige tijdstippen laten uitvoeren (gentoo-stats moet niet als root gerunned worden). Voeg de volgende regel toe aan je <path>crontab</path>:
</p>

<pre caption = "Gentoo-stats met cron laten uitvoeren">
<c>0 0 * * 0,4 /usr/sbin/gentoo-stats --update &gt; /dev/null</c>
</pre>

<p>
Het <c>gentoo-stats</c> programma is een simpel perl-script dat bekeken kan worden met je favoriete viewer of editor: <path>/usr/sbin/gentoo-stats</path>. 
</p>

</body>
</section>
</chapter>





</guide>
