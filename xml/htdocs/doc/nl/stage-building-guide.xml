<?xml version='1.0' encoding="UTF-8"?>

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/stage-building-guide.xml,v 1.8 2005/06/10 20:11:01 swift Exp $ -->

<!-- 
	Sync: 1.7
-->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/nl/stage-building-guide.xml">

<title>Stage Bestanden Opbouwen</title>

<author title = "Author">
<!-- zhen@gentoo.org -->John P. Davis</author>
<author title = "Author">
<mail link = "avenj@gentoo.org">Jon Portnoy</mail></author>
<author title = "Editor">
<mail link = "peesh@gentoo.org">Jorge Paulo</mail></author>
<author title = "Translator">
<mail link = "swift@gentoo.org">Sven Vermeulen</mail></author>

<abstract>
Deze handleiding legt je uit hoe je stages maakt voor Gentoo Linux.
</abstract>

<license/>

<version>1.4</version>
<date>21 Juli 2003</date>


<chapter>
	<title>Voorbeschouwing</title>
	<section>
		<title>Inleiding</title>
		<body>
		<p>
        Deze handleiding is een uitleg over hoe je nieuwe stages
        maakt voor Gentoo Linux dmv <c>stager</c>, onze stage-creatie
        applicatie.
        </p>
       
	</body>
	</section>
	<section>
		<title>De broncode verkrijgen</title>
		<body>
		<p>
        Alvorens we beginnen met het compileren van zaken is het noodzakelijk
        dat je de nodige broncode, tools e.d. hebt. Allereerst moet je de
        <c>gentoo-src</c> module van de CVS uittrekken, en je ervan verzekeren
        dat het een recente is. De compilatiescripts veranderen frequent, dus
        zorg ervoor dat je uptodate blijft. Indien je geen toegang hebt
        tot de gentoo-src module kan je een snapshot van <c>stager</c> 
        vinden op <uri>http://dev.gentoo.org/~avenj/stager</uri>.
        Verder is de meest recente
        stage1-tarball vereist. Deze kan je normaalgezien vinden op
        <path>experimental/x86/stages</path>. De
        tarball die je zoekt heet <c>stage1-x86-1.4_pre&lt;DATE&gt;</c>.tar.bz2,
        met <c>DATE</c> zijnde de meest recente datum die je kan vinden.
        </p>
		
		</body>
	</section>
</chapter>

<chapter>
	<title>Het compilatieproces</title>
	<section>
		<title>Eerste stappen</title>
		<body>
		<p>
        Allereerst moet je een directorie maken op een mooie grote partitie die
        al de gecompileerde zaken zal bevatten. Kopieer dan de
        <path>stager</path> directorie van <c>gentoo-src</c> in deze
        nieuwe directorie (welke we als <path>/usr/src/build</path>
        zullen beschouwen in dit document). Alternatief kan je de
        tarball van de snapshot in deze directorie uitpakken. Maak
        uiteindelijk een directorie aan in <path>/usr/src/build</path>
        genaamd <path>stages</path> en plaats de experimentele
        stage1-tarball daarin.
        </p>
        
		<pre caption="Klaarstomen">
# <i>mkdir /usr/src/build</i>
<comment>Je kan dit pad uiteraard zelf kiezen</comment>
# <i>cp -R gentoo-src/stager/ /usr/src/build</i>
# <i>cd /usr/src/build/stager; mkdir stages</i>
# <i>mv stage1-x86-1.4_preDATE.tar.bz2 /usr/src/build/stager/stages</i>
        </pre>

		</body>
	</section>

	<section>
		<title>Compileren</title>
		<body>
		<p>
        Eerst moeten we een stage2-tarball maken met generische
        optimalisaties. Deze tarball zal gebruikt worden om nieuwe
        stages (inclusief een nieuwe stage1) aan te maken.
        </p>

		<pre caption="Stage2 bouwen">
# <i>./stager x86 2 orig dest</i>
<comment>orig refereert hierboven naar de datum in de naam </comment>
<comment>van de experimentele tarball</comment>
<comment>dest refereert naar de datum van de nieuwe tarball</comment>
<comment>Vergeet deze niet aan te passen :)</comment>
        </pre>

		<p>
        Eenmaal deze compilatie afgelopen is zou je een verse stage2
        tarball naast je originele stage1 tarball moeten liggen hebben
        in <path>stages</path>. Nu kan je een nieuwe stage1 tarball
        maken van je stage2 via dezelfde methode:
        </p>

        <pre caption = "Nieuwe stage1 aanmaken">
        # <i>./stager x86 1 dest dest</i>
        </pre>

        <p>
        Voila, je hebt een nieuwe stage1 tarball gemaakt welke je vindt
        naast de originele stage1 en stage2 tarballs van voordien. Nu
        kan je niet-generische tarballs aanmaken die geoptimaliseerd
        zijn naar specifieke CPU sub-types. Deze geoptimaliseerde
        tarballs zullen echter niet gebruikt kunnen worden om andere
        stages mee te maken. Om voor sub-types te compileren werk je op
        analoge manier; je vervangt gewoon x86 met de specifieke
        sub-type. Voor een lijst van ondersteunde subtypes, voer
        <c>./stager</c> uit zonder enige argumenten.
        </p>
        
	</body>
	</section>
</chapter>

<chapter>
	<title>Finale Notities</title>
	<section>
		<title>Contacten</title>
		<body>
		
		<table>
		<tr>
			<th>Contact</th>
			<th>Functie</th>
		</tr>
		<tr>
			<ti><mail link="avenj@gentoo.org">Jon Portnoy</mail></ti>
			<ti>Gentoo Linux Release Manager</ti>
		</tr>
		<tr>
			<ti><mail link="jhhudso@gentoo.org">Jared Hudson</mail></ti>
			<ti>Kwaliteitscontrole</ti>
		</tr>
		<tr>
			<ti><!-- zhen@gentoo.org -->>John Davis</ti>
			<ti>Auteur</ti>
		</tr>

        <tr>
            <ti><mail link="avenj@gentoo.org">Jon Portnoy</mail></ti>
            <ti>Auteur</ti>
        </tr>
		</table>
		
		</body>
	</section>
</chapter>
</guide>
			
		

		
