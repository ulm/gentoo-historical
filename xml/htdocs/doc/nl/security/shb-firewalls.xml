<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/security/shb-firewalls.xml,v 1.1 2006/07/19 09:21:54 neysx Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.1</version>
<date>2005-10-16</date>

<section>
<title>Een firewall</title>
<body>

<p>
Mensen denken vaak dat een firewall de beste veiligheid garandeerd, maar ze
zijn fout in de meeste gevallen kan een fout-geconfigureerde firewall minder
veiligheid geven dan geen hebben. Een firewall is ook een software en zou
moeten op de zelfde manier behandeld worden als een ander, omdat het
hoogstwaarschijnlijk fouten bevat.
</p>

<p>
Dus denk, voor je een firewall implementeerd in je systeem! Heb je echt een
nodig? Als denkt dat je een nodig hebt, schrijf een beleid van wat het moet
doen, hoe het moet werken, welke soort firewall je nodig hebt en wie het moet
onderhouden. Maar allereerst lees deze firewall-gids.
</p>

<p>
Firewalls worden gebruikt voor twee doelstellingen.
</p>

<ul>
<li>Om gebruikers wormvrij/aanvalvrij te houden</li>
<li>Om gebruikers toegang te beperken tot het intern netwerk</li>
</ul>

<p>
Er zijn slechts 3 soorten van firewalls:
</p>

<ul>
<li>Pakket filters (Packet filtering)</li>
<li> (Circuit relay)</li>
<li> (Application gateway)</li>
</ul>

<p>
Een firewall zou moeten werken op een machine speciaal gemaakt voor deze
service en geen andere (of <c>sshd</c> als enige) en beveiligd zoals aangeraden
in deze gids.
</p>

</body>
</section>
<section>
<title>Pakket filters (Packet filtering)</title>
<body>

<p>
Alle netwerk trafiek wordt verzonden in de vorm van pakketten. Grote aantallen
van trafiek worden opgedeeld in kleinere pakketen in de vorm van pakketten voor
het makkerlijker te kunnen behandelen. Daarna worden die terug aaneengeschakeld
als ze aangekomen zijn op de bestemming. In het pakket-kop van ieder bestand
zit informatie van waar en hoe het zou moeten afgeleverd zijn. Deze informatie
is exact wat een pakket filter firewall gebruikt. Filteren gebeurd op basis
van :
</p>

<ul>
<li>Toestaan of verwerpen pakketten op basis van bestemming/bron IP adres</li>
<li>Toestaan of verwerpen pakketten op basis van bestemming/bron IP poort</li>
<li>Toestaan of verwerpen pakketten op basis van het gebruikte protocol</li>
<li>Toestaan of verwerpen pakketten op basis van bepaalde opties binnenin een
protocol</li>
</ul>

<p>
Met andere woorden, Het filteren is gebaseerd op de data in de kop van het
pakket en niet op de inhoud.
</p>

<p>
zwakheden:
</p>

<ul>
<li>
  Adres informatie in een pakket kan een vals IP adres bevatten van de zender
  (of een <e>gespoofd</e> adres zoals we dat noemen).
</li>
<li>
  Data of aanvragen binnen een toegestaan pakket kan ongewenste data dat de
  aanvaller kan gebruiken om het gebruiken van gekende virussen in een dienst
  of achter een firewall.
</li>
<li>Meestal alleenstaand falingspunt</li>
</ul>

<p>
voordelen:
</p>

<ul>
<li>Simpel en gemakkelijk in te voegen</li>
<li>
  Kan waarschuwingen geven over een mogelijke aanval voor het gebeurd (bv. door
  het detecteren van poort-scans)
</li>
<li>Goed voor het stoppen van <e>SYN</e> aanvallen</li>
</ul>

<p>
Voorbeelden van gratis pakket filters voor Linux:
</p>

<ul>
<li><uri link="http://www.iptables.org">Iptables</uri></li>
<li>
  <uri link="http://www.linuxdocs.org/HOWTOs/IPCHAINS-HOWTO.html">Ipchains</uri>
</li>
<li><uri link="http://www.smoothwall.org">SmoothWall</uri></li>
</ul>
<!--FIXME: should SmoothWall really be included, since it uses iptables?-->
<note>
Het is aangeraden dat je <e>IPtables</e> gebruikt. Ipchains is verouderd.
</note>

</body>
</section>
<section>
<title>Circuit relay</title>
<body>

<p>
Een circuit level gateway is een firewall die verbindingen valideerd vooralleer het
data uitwisselen toelaat. Dit betekend dat het niet alleen toelaat of wijgert
pakketten gebaseert op de pakket-kop maar controleert als de connectie tussen
zender en ontvanger goed is gebeurt volgend vooropgestelde regels. Daarna opent
de firewall pas een sessie en laat het toe data uit te wisselen. Filteren
gebeurd op basis van :
</p>

<ul>
<li>Bron/bestemming IP adres</li>
<li>Bron/bestemming port</li>
<li>Duur van de overdracht</li>
<li>Protocol</li>
<li>Gebruiker</li>
<li>Wachtwoord</li>
</ul>

<p>
Al het verkeer is gevalideerd en in de gaten gehouden en ongewenst verkeer kan
worden geweigerd.
</p>

<p>
zwakheden:
</p>

<ul>
<li>
  Is actief op het <c>Transport Layer</c> en kan enige wijzigingen van
  programma's, die normaal transporteer functies verstrekken, teweeg brengen.
</li>
</ul>

</body>
</section>
<section>
<title>Application Gateway</title>
<body>

<p>
Het Aplicatie Gateway level is een <c>proxy</c> voor aplicaties, die data
uitwisselt met de externe server opdat de clients beveligigd zouden zijn. Het
is meestal goed weggehouden van het publieke gedeelte, geplaast achter een DMZ
(geDeMilitarizeerde Zone : Het deel van een geheim netwerk dat zichtbaar is
door een firewall) of een firewall die geen connecties toestaat van buitenaf.
Filteren is gebaseerd op:
</p>

<ul>
<li>Toestaan of weigeren op basis van Bron/Bestemming IP adres</li>
<li>Gebaseerd op het pakket's inhoud</li>
<li>Raadpleeg limitaties op een bestand opleggen op basis van extensies</li>
</ul>

<p>
Voordelen:
</p>

<ul>
<li>Kan bestanden <c>cachen</c> zodat de netwerkstabiliteit verhoogd.</li>
<li>Kan gedetailleerde logs aanmaken van alle connecties</li>
<li>Schaalt goed (Sommige proxy servers kunnen de gecachte date "delen")</li>
<li>Geen toegang tot <c>buiten</c> (het netwerk)</li>
<li>Kan de inhoud van een bestand meteen aanpassen</li>
</ul>

<p>
Zwakheden:
</p>

<ul>
<li>Complexe configuratie</li>
</ul>

<p>
<c>Application gateways</c> zijn algemeen de veiligste ondervonden sinds ze
geen root-toegang nodig hebben om op te starten en de computers "achter" die pc
zijn niet bereikbaar.
</p>

<p>
Voorbeeld van een gratis application gateway:
</p>

<ul>
<li><uri link="http://www.squid-cache.org/">Squid</uri></li>
</ul>

</body>
</section>
<section>
<title>Ipfiltering via Iptables</title>
<body>

<p>
Om <c>Iptables</c> te kunnen gebruiken moet het toelaten in de <c>kernel</c>.
Ik heb <c>Iptables</c> als module toegelaten in mijn kernel( de <c>Iptables</c>
commando zal ze laden als hij die nodig heeft), en heb mijn kernel opnieuw
gebouwd (maar je kunt evengoed <c>Iptables</c> in de kernel bakken, als je
liever <c>oadable Kernel Modules</c> afzet in je kernel-configuratie). Voor
meer informatie over hoe je je kernel moet configureren kun je terrecht op de
volgende url : <uri
link="http://iptables-tutorial.frozentux.net/iptables-tutorial.html#PREPARATIONS">Iptables
gids hoofdstuk 5: voorbereidingen</uri>. Na de nieuwe kernel geinstaleerd te
hebben (of tijdens het hercomileren) moet je ook nog het <c>iptables</c>
comando toevoegen aan het systeem; Dit kan simpelweg met <c>emerge
iptables</c>.
</p>

<p>
Test nu iptables door het volgende commando uit te voeren: <c>iptables -L</c>.
Als dit niet lukt dan is er iets mis met je configuratie.
</p>

<p>
Iptables is een stateful packet filter wat wil zeggen dat ze meer controle en
veiligheid biedt dan ipchains (Linux versie 2.2) die niet stateful is. Nu vraag
je je waarschijnlijk af wat stateful wil zeggen? En wat het verschil is?
</p>

<p>
We weten allemaal dat TCP uitgemaakt is als een serie pakketten. Elke pakket
bevat informatie over bronadres, doeladres en een sequentienummer opdat de
pakketten weer samengebracht kunnen worden. We weten tevens dat TCP
connectie-georienteeerd is en UDP connectieloos. Dat zijn de &quot;states&quot;
die gebruikt worden. Nu vraag je je waarschijnlijk af &quot;En dan?&quot; Wel,
daar kom ik nu aan toe...
</p>

<p>
Stel je nu voor dat je een stateless firewall hebt (ipchains) en je wil niet
dat externe pc's een connectie naar je interne services aanmaken; maar hoe kan
je nu weten of een pakket nu behoort tot een connectie naar of een connectie
van? Een stateless firewall kan geen onderscheidt tussen beide maken door te
kijken naar de SYN vlag.
</p>

<p>
Veronderstel dat een hacker een bende zelfgemaakte pakketten verstuurt waarin
hij de SYN vlag of andere vlaggen aangepast heeft. Dit is iets wat hackers 
vaak doen. 
Ze zenden zo pakketten langs de firewall om en passen routingtables aan of
exploiteren services die op de firewall draaien maar zogezegd veilig moeten
zijn. Een stateful firewall zal bijhouden welke connecties er zijn en kan
gemakkelijk verifieren of een pakket tot een bestaande connectie behoort of
niet. Wanneer een connectie, die zegt dat hij een deel is van een bestaande 
connectie, ontmaskert wordt als vals, dan kan deze aangeduid worden als
&quot;ongeldig&quot; en kan men de bijhorende pakket weigeren. Op die manier
is het dus mogelijk om &quot;Stealth Scans&quot; tegen te houden, aangezien
deze gebruik maken van valse connecties.
</p>

<p>
Er zijn nog tientallen andere redenen waarom, maar ik denk wel dat je
bovenstaande uitleg begrijpt. Eenvoudige regels maken een kleinere
firewallconfiguratie mogelijk waardoor ze dus ook gemakkelijker is om te 
beheren.
</p>

<p>
Iptables biedt verschillende andere mogelijkheden, zoals rate limitaties. Deze
feature is zeer handig indien je bepaalde DoS aanvallen zoals SYN aanvallen wil
tegengaan. Maar wat is nu een SYN aanval?
</p>

<p>
Wel, wanneer een TCP connectie opgemaakt wordt wordt er gebruik gemaakt van een
3-wegs handdruk:
</p>

<fig
link="http://www.ibiblio.org/pub/Linux/distributions/gentoo/images/synack.jpg"
short
="Three-way handshake"/>

<p>
Een SYN aanval is wanneer de vijand maar 1 SYN pakket verstuurt maar niet het
andere pakket waardoor de connectie niet wordt opgemaakt. Een SYN pakket
moet geen geldig zender-IP-adres bevatten omdat ze geen antwoord vereist van de
hacker. Dus blijft de half-open connectie hangen totdat deze timeout. Indien de
hacker dus veel SYN pakketyrn verzendt met een valse zender-IP dan zal de
doelpc
blijven wachten op een antwoord die nooit komt. Afhankelijk van de timeout
instellingen van je systeem zal de connectie gedurende 30 tot 60 seconden open
blijven. Wanneer de connectielimiettabel volledig in gebruik is kan je pc geen
andere connecties meer aangaan, en is je server dus onbereikbaar via het
internet.
</p>

<p>
Dit is waar rate limit in het spel komt. Het is mogelijk om het aantal SYN
pakketten van een bepaald bronadres te limiteren dmv <c>-m limit --limit
1/s</c>. Dit zal het aantal SYN pakketten per bronadres restricteren en dus de
SYN floods tegengaan.
</p>

<p>
Nu wat praktische zaken...
</p>

<p>
Wanneer iptables in de kernel geladen is heeft het 5 plaatsen waarin je je
regels kan plaatsen. Ze noemen INPUT, OUTPUT, FORWARD, PREROUTING en
POSTROUTING. Deze lijsten worden ketens (chains) genaamd omdat ze werken als
een ketting: deel per deel wordt ingegeven, elk pakket doorloopt alle regels.
Indien 1 regel nyet zegt, wordt het pakket geweigerd.
</p>

<p>
Je kan je regels direct in 1 van de 5 hoofdketens plaatsen, ofwel zelf ketens
maken en deze toevoegen als regel aan een bestaande keten. Laten we eens kijken
hoe je dat doet:
</p>

<table>
  <tr>
    <th>Optie:</th><th>Uitleg:</th>
  </tr>
  <tr>
    <ti>-A</ti><ti>Append (Toevoegen)</ti>
  </tr>
  <tr>
    <ti>-D</ti><ti>Delete (Verwijderen)</ti>
  </tr>
  <tr>
    <ti>-I</ti><ti>Insert (Invoegen)</ti>
  </tr>
  <tr>
    <ti>-R</ti><ti>Replace (Vervangen)</ti>
  </tr>
  <tr>
    <ti>-L</ti><ti>List (Toon)</ti>
  </tr>
  <tr>
    <ti>-F</ti><ti>Verwijder alle regels in een of alle ketens</ti>
  </tr>
  <tr>
    <ti>-Z</ti><ti>Zet de tellers van een of alle ketens op nul</ti>
  </tr>
  <tr>
    <ti>-C</ti><ti>Test dit pakket op de keten(s)</ti>
  </tr>
  <tr>
    <ti>-N</ti><ti>Maak een eigen keten</ti>
  </tr>
  <tr>
    <ti>-X</ti><ti>Verwijder een zelfgemaakte keten</ti>
  </tr>
  <tr>
    <ti>-P</ti><ti>Verander het beleid van een keten</ti>
  </tr>
  <tr>
    <ti>-E</ti><ti>Verander de naam van de keten</ti>
  </tr>
  <tr>
    <ti>-p</ti><ti>Protocol</ti>
  </tr>
  <tr>
    <ti>-s</ti><ti>Bronadres of -mask</ti>
  </tr>
  <tr>
    <ti>-d</ti><ti>Doeladres of -mask</ti>
  </tr>
  <tr>
    <ti>-i</ti><ti>Invoer naam (netwerkinterface)</ti>
  </tr>
  <tr>
    <ti>-o</ti><ti>Uitvoer naam (netwerkinterface)</ti>
  </tr>
  <tr>
    <ti>-j</ti><ti>Spring (commando voor in een keten)</ti>
  </tr>
  <tr>
    <ti>-m</ti><ti>Uitgebreide herkenning</ti>
  </tr>
  <tr>
    <ti>-n</ti><ti>Numerieke uitvoer van IP-adressen</ti>
  </tr>
  <tr>
    <ti>-t</ti><ti>Tabel om aan te passen</ti>
  </tr>
  <tr>
    <ti>-v</ti><ti>Veel uitleg geven (Verbose)</ti>
  </tr>
  <tr>
    <ti>-x</ti><ti>Nummers uitbreiden (volledige nummers tonen)</ti>
  </tr>
  <tr>
    <ti>-f</ti><ti>Enkel 2e of verdere delen onderzoeken</ti>
  </tr>
  <tr>
    <ti>-V</ti><ti>Pakket versie</ti>
  </tr>
  <tr>
    <ti>--line-numbers</ti><ti>Geef regelnummering</ti>
  </tr>
</table>

<p>
Allereerst proberen we alle ICMP pakketten te blokkeren (dit als voorbeeld van
het gebruik van iptables):
</p>

<pre caption="Weigeren van ping-pakketten">
# <i>iptables -A INPUT -p icmp -j DROP</i>
</pre>

<p>
Eerst definieren we de keten waar dit aan moet toegevoegd worden. Daarna
specifieren we het protocol en dan de regel die moet toegevoegd worden. De
regel kan ACCEPT, DROP, REJECT, LOG, QUEUE, MASQUERADE, een geladen module of
een zelfgedefinieerde keten zijn. In dit geval gebruiken we DROP die alle
pakketten die aan de regel voldoen zullen wegsmijten zonder dit mede te delen
aan de bronpc die het pakket verstuurt heeft.
</p>

<p>
Probeer nu <c>ping localhost</c> uit te voeren. Je zal zien dat je geen
antwoord zal verkrijgen aangezien de firewall alle ICMP-pakketten weigert die
toekomen op de pc. Je zal tevens geen andere pc's kunnen pingen aangezien de
ICMP antwoorden ook geweigerd worden. Laten we nu alle regels verwijderen om
ICMP weer toe te laten:
</p>

<pre caption="Flushen van iptables-rules">
# <i>iptables -F</i>
</pre>

<p>
Laten we nu eens kijken naar het stateful deel in iptables. Indien we een
stateful inspectie van de pakketten wensen die toekomen op eth0 kunnen we dit
als volgt uitvoeren:
</p>

<pre caption="Toelaten van pakketten die al tot een bestaande connectie
behoren">
# <i>iptables -A INPUT -i eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT</i>
</pre>
<p>
Dit zal alle pakketten, die tot een al bestaande connectie behoren, of die
voldoen aan de INPUT keten, doorlaten. Je kan alle pakketten die niet in de
state tabel zitten weigeren door <c>iptables -A INPUT -i eth0 -n state --state
INVALID -j DROP</c> uit te voeren juist voor bovenstaande regel. Dit zal ervoor
zorgen dat de stateful deel in iptables geactiveerd wordt door de extension
state te laden. Indien je een connectie van buitenuit wil toelaten tot je pc
kan je <c>--state NEW</c> gebruiken. Iptables bevat nog enkele andere modules
voor verschillende doeleinden. Onder deze modules zijn:
</p>

<table>
  <tr>
    <th>Module/Regel</th><th>Uitleg</th><th>Uitgebreide opties</th>
  </tr>
  <tr>
    <ti>mac</ti><ti>
        Afhankelijk van het MAC adres van de binnenkomende pakketten regels
        opstellen.</ti><ti>--mac-source</ti>
  </tr>
  <tr>
    <ti>state</ti><ti>Stateful inspectie activeren</ti><ti>--state (states zijn ESTABLISH
ED,RELATED, INVALID, NEW)</ti>
  </tr>
  <tr>
    <ti>limit</ti><ti>Rate matching limiteren</ti><ti>--limit, --limit-burst</ti>
  </tr>
  <tr>
    <ti>owner</ti><ti>Probeert om verschillende eigenschappen van de
        pakketmaker te herkennen</ti><ti>--uid-owner userid --gid-owner groupip
        --pid-owner processid --sid-owner sessoinid</ti>
  </tr>
  <tr>
    <ti>unclean</ti><ti>Verschillende random controles op pakketten.</ti><ti/>
  </tr>
</table>

<p>
Laten we een zelfgedefinieerde keten maken en deze toepassen op een
van de bestaande ketens:
</p>


<pre caption="Aanmaken van een gebruiker-gedefinieerde keten">
<comment>(Maak een nieuwe keten met 1 regel)</comment>
# <i>iptables -X mychain</i>
# <i>iptables -N mychain</i>
# <i>iptables -A mychain -i eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT</i>
<comment>(Het default beleid is dat alle uitgaande traffiek toegelaten wordt.
Inkomende wordt echter geweigerd.)</comment>
# <i>iptables -P OUTPUT ACCEPT</i>
# <i>iptables -P INPUT DROP</i>
<comment>(Voeg ze toe aan de INPUT keten)</comment>
# <i>iptables -A INPUT -j mychain</i>
</pre>

<p>
Door de regel toe te passen op de INPUT keten krijgen we het volgende beleid:
alles wordt toegelaten wat uitgaand is, en enkel inkomende pakketten die tot
een bestaande connectie behoren worden toegelaten. Dit is eigenlijk algemeen
gezien een slecht idee. Een beleid zou eigenlijk alles moeten weigeren en dan
expliciet enkele zaken toelaten, maar dit is gewoon een voorbeeld.
</p>

<p>
Indien je meer informatie wenst, kijk dan naar <uri
link="http://www.iptables.org/documentation/index.html#HOWTO">iptables
documentatie</uri> (Engels).
</p>

<p>
Laten we een volledig voorbeeld bekijken. Dit voorbeeld zijn mijn
firewall/gateway instellingen:
</p>

<ul>
  <li>Connecties naar de firewall zijn enkel toegelaten via SSH (poort 22)</li>
  <li>Het lokale netwerk heeft toegang tot HTTP, HTTPS en SSH (en DNS
natuurlijk ook)</li>
  <li>ICMP traffiek kan teveel informatie bevatten en wordt dus niet
  toegelaten. Natuurlijk moet er wel een beetje ICMP-traffiek mogelijk
  zijn.</li>
  <li>Portscans moeten gedetecteerd en gelogged worden</li>
  <li>SYN aanvallen dienen vermeden te worden</li>
  <li>Alle andere traffiek dient geweigerd en gelogged te worden</li>
</ul>


<pre caption="/etc/init.d/firewall">
#!/sbin/runscript
IPTABLES=/sbin/iptables
IPTABLESSAVE=/sbin/iptables-save
IPTABLESRESTORE=/sbin/iptables-restore
FIREWALL=/etc/firewall.rules
DNS1=212.242.40.3
DNS2=212.242.40.51
#binnenin
IIP=10.0.0.2
IINTERFACE=eth0
LOCAL_NETWORK=10.0.0.0/24
#buiten
OIP=217.157.156.144
OINTERFACE=eth1

opts="${opts} showstatus panic save restore showoptions rules"

depend() {
  need net procparam
}

rules() {
  stop
  ebegin "Setting internal rules"

  einfo "Setting default rule to drop"
  $IPTABLES -P FORWARD DROP
  $IPTABLES -P INPUT   DROP
  $IPTABLES -P OUTPUT  DROP

  #default regel
  einfo "Creating states chain"
  $IPTABLES -N allowed-connection
  $IPTABLES -F allowed-connection
  $IPTABLES -A allowed-connection -m state --state ESTABLISHED,RELATED -j ACCEPT
  $IPTABLES -A allowed-connection -i $IINTERFACE -m limit -j LOG --log-prefix \
      "Bad packet from ${IINTERFACE}:"
  $IPTABLES -A allowed-connection -j DROP

  #ICMP traffiek
  einfo "Creating icmp chain"
  $IPTABLES -N icmp_allowed
  $IPTABLES -F icmp_allowed
  $IPTABLES -A icmp_allowed -m state --state NEW -p icmp --icmp-type \
      time-exceeded -j ACCEPT
  $IPTABLES -A icmp_allowed -m state --state NEW -p icmp --icmp-type \
      destination-unreachable -j ACCEPT
  $IPTABLES -A icmp_allowed -p icmp -j LOG --log-prefix "Bad ICMP traffic:"
  $IPTABLES -A icmp_allowed -p icmp -j DROP

  #Inkomende traffiek
  einfo "Creating incoming ssh traffic chain"
  $IPTABLES -N allow-ssh-traffic-in
  $IPTABLES -F allow-ssh-traffic-in
  #Flood beveiliging
  $IPTABLES -A allow-ssh-traffic-in -m limit --limit 1/second -p tcp --tcp-flags \
      ALL RST --dport ssh -j ACCEPT
  $IPTABLES -A allow-ssh-traffic-in -m limit --limit 1/second -p tcp --tcp-flags \
      ALL FIN --dport ssh -j ACCEPT
  $IPTABLES -A allow-ssh-traffic-in -m limit --limit 1/second -p tcp --tcp-flags \
      ALL SYN --dport ssh -j ACCEPT
  $IPTABLES -A allow-ssh-traffic-in -p tcp --dport ssh -j ACCEPT

  #Uitgaande traffiek
  einfo "Creating outgoing ssh traffic chain"
  $IPTABLES -N allow-ssh-traffic-out
  $IPTABLES -F allow-ssh-traffic-out
  $IPTABLES -A allow-ssh-traffic-out -p tcp --dport ssh -j ACCEPT

  einfo "Creating outgoing dns traffic chain"
  $IPTABLES -N allow-dns-traffic-out
  $IPTABLES -F allow-dns-traffic-out
  $IPTABLES -A allow-dns-traffic-out -p udp -d $DNS1 --dport domain \
      -j ACCEPT
  $IPTABLES -A allow-dns-traffic-out -p udp -d $DNS2 --dport domain \
     -j ACCEPT

  einfo "Creating outgoing http/https traffic chain"
  $IPTABLES -N allow-www-traffic-out
  $IPTABLES -F allow-www-traffic-out
  $IPTABLES -A allow-www-traffic-out -p tcp --dport www -j ACCEPT
  $IPTABLES -A allow-www-traffic-out -p tcp --dport https -j ACCEPT

  #Portscanners tegenhouden
  einfo "Creating portscan detection chain"
  $IPTABLES -N check-flags
  $IPTABLES -F check-flags
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL FIN,URG,PSH -m limit \
      --limit 5/minute -j LOG --log-level alert --log-prefix "NMAP-XMAS:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL ALL -m limit --limit \
      5/minute -j LOG --log-level 1 --log-prefix "XMAS:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL ALL -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG \
      -m limit --limit 5/minute -j LOG --log-level 1 --log-prefix "XMAS-PSH:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL NONE -m limit \
      --limit 5/minute -j LOG --log-level 1 --log-prefix "NULL_SCAN:"
  $IPTABLES -A check-flags -p tcp --tcp-flags ALL NONE -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,RST SYN,RST -m limit \
      --limit 5/minute -j LOG --log-level 5 --log-prefix "SYN/RST:"
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,FIN SYN,FIN -m limit \
      --limit 5/minute -j LOG --log-level 5 --log-prefix "SYN/FIN:"
  $IPTABLES -A check-flags -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP

  # Pas toe en voeg ongeldige states toe aan de ketens
  einfo "Applying chains to INPUT"
  $IPTABLES -A INPUT -m state --state INVALID -j DROP
  $IPTABLES -A INPUT -j icmp_allowed
  $IPTABLES -A INPUT -j check-flags
  $IPTABLES -A INPUT -i lo -j ACCEPT
  $IPTABLES -A INPUT -j allow-ssh-traffic-in
  $IPTABLES -A INPUT -j allowed-connection

  einfo "Applying chains to FORWARD"
  $IPTABLES -A FORWARD -m state --state INVALID -j DROP
  $IPTABLES -A FORWARD -j icmp_allowed
  $IPTABLES -A FORWARD -j check-flags
  $IPTABLES -A FORWARD -o lo -j ACCEPT
  $IPTABLES -A FORWARD -j allow-ssh-traffic-in
  $IPTABLES -A FORWARD -j allow-www-traffic-out
  $IPTABLES -A FORWARD -j allowed-connection

  einfo "Applying chains to OUTPUT"
  $IPTABLES -A OUTPUT -m state --state INVALID -j DROP
  $IPTABLES -A OUTPUT -j icmp_allowed
  $IPTABLES -A OUTPUT -j check-flags
  $IPTABLES -A OUTPUT -o lo -j ACCEPT
  $IPTABLES -A OUTPUT -j allow-ssh-traffic-out
  $IPTABLES -A OUTPUT -j allow-dns-traffic-out
  $IPTABLES -A OUTPUT -j allow-www-traffic-out
  $IPTABLES -A OUTPUT -j allowed-connection

  # Laat clients toe om via NAT te werken
  $IPTABLES -t nat -A POSTROUTING -o $IINTERFACE -j MASQUERADE
  eend $?
}

start() {
  ebegin "Starting firewall"
  if [ -e "${FIREWALL}" ]; then
    restore
  else
    einfo "${FIREWALL} does not exists. Using default rules."
    rules
  fi
  eend $?
}

stop() {
  ebegin "Stopping firewall"
  $IPTABLES -F
  $IPTABLES -t nat -F
  $IPTABLES -X
  $IPTABLES -P FORWARD ACCEPT
  $IPTABLES -P INPUT   ACCEPT
  $IPTABLES -P OUTPUT  ACCEPT
  eend $?
}

showstatus() {
  ebegin "Status"
  $IPTABLES -L -n -v --line-numbers
  einfo "NAT status"
  $IPTABLES -L -n -v --line-numbers -t nat
  eend $?
}

panic() {
  ebegin "Setting panic rules"
  $IPTABLES -F
  $IPTABLES -X
  $IPTABLES -t nat -F
  $IPTABLES -P FORWARD DROP
  $IPTABLES -P INPUT   DROP
  $IPTABLES -P OUTPUT  DROP
  $IPTABLES -A INPUT -i lo -j ACCEPT
  $IPTABLES -A OUTPUT -o lo -j ACCEPT
  eend $?
}

save() {
  ebegin "Saving Firewall rules"
  $IPTABLESSAVE &gt; $FIREWALL
  eend $?
}

restore() {
  ebegin "Restoring Firewall rules"
  $IPTABLESRESTORE &lt; $FIREWALL
  eend $?
}

restart() {
  svc_stop; svc_start
}

showoptions() {
  echo "Usage: $0 {start|save|restore|panic|stop|restart|showstatus}"
  echo "start)      will restore setting if exists else force rules"
  echo "stop)       delete all rules and set all to accept"
  echo "rules)      force settings of new rules"
  echo "save)       will store settings in ${FIREWALL}"
  echo "restore)    will restore settings from ${FIREWALL}"
  echo "showstatus) Shows the status"
}
</pre>

<note>
Ik gebruik \ in sommige regels voor betere leesbaarheid. Het is misschien een
goed idee om de regels samen te voegen in de werkelijke configuratie.
</note>

<p>
Gratis advies voor het aanmaken van firewalls:
</p>

<ol>
  <li>Maak je firewallsbeleid alvorens je die implementeert.</li>
  <li>Hou het simpel</li>
  <li>
    Weet hoe het protocol werkt (lees de <uri
    link="http://www.ietf.org">RFCs</uri>)
  </li>
  <li>
    Hou in gedachten dat een firewall gewoon een stuk software is dat als root
    draait.
  </li>
  <li>Test je firewall</li>
</ol>

<p>
Indien je denkt dat iptables moeilijk te verstaan is, of veel tijd inneemt om
op te stellen, maak dan gebruik van <uri
link="http://www.shorewall.net">Shorewall</uri>. Dit is een front-end van
iptables.
</p>


</body>
</section>
<section>
<title>Squid</title>
<body>

<p>
quid is een zeer sterke proxyserver en kan traffiek filteren en weigeren
gebaseerd op: tijd, reguliere expressies van paden/uri's, bron en doeladressen,
domeinen, browser, geidentificeerde gebruiker, mime-type, poort (protocol).
En waarschijnlijk heb ik nog enkele features vergeten, maar squid is dan ook
enorm uitgebreid.
</p>

<p>
In het volgende voorbeeld heb ik een bannerfilter geplaatst in plaats van een
filter die gebaseerd is op pornosites. De reden hiertoe is dat Gentoo.org
<c>niet</c> als pornosite mag gezien worden. En ik wil tevens mijn tijd niet
verdoen om enkele goede pornosites voor jou op te zoeken :)
</p>

<p>
In bovenstaand geval:
</p>

<ul>
  <li>Surfen (HTTP/HTTPS) wordt toegelaten tijdens werkuren (maandag tot
vrijdag van 08 tot 17, en zaterdag van 08 tot 13 uur). Als ze hier extra lang
blijven moeten ze werken. Niet surfen.</li>
  <li>Downloaden is niet toegestaan (.exe, .com, .arj, .zip, .asf, .avi, .mpg,
.mpeg etc...)</li>
  <li>We haten banners dus filteren we die uit en vervangen we ze met een
  transparante gif (hier kan je nog wel leukere zaken bedenken :)</li>
  <li>Elke andere connectie van en naar het internet wordt niet toegestaan</li>
</ul>

<p>
Dit wordt in 4 gemakkelijke stappen geimplementeerd:
</p>
<pre caption="/etc/squid/squid.conf">
# Binden aan een ip en poort
http_port 10.0.2.1:3128

# Default configuratie
hierarchy_stoplist cgi-bin ?
acl QUERY urlpath_regex cgi-bin \?
no_cache deny QUERY

# ACLs toevoegen
acl all src 0.0.0.0/0.0.0.0
acl manager proto cache_object
acl localhost src 127.0.0.1/255.255.255.255

# Wie deze proxyserver kan gebruiken
acl localnet src 10.0.0.0/255.255.0.0

# Welke poorten er toegelaten zijn
acl SSL_ports port 443
acl Safe_ports port 80
acl Safe_ports port 443
acl purge method PURGE

# ACL gebaseerd op regexps
acl archives urlpath_regex "/etc/squid/files.acl"
acl url_ads url_regex "/etc/squid/banner-ads.acl"

# ACL gebaseerd op tijden/datums
acl restricted_weekdays time MTWHF 8:00-17:00
acl restricted_weekends time A 8:00-13:00

acl CONNECT method CONNECT

#Beheer enkel via localhost
http_access allow manager localhost
http_access deny manager

#Purge aanvragen enkel via localhost
http_access allow purge localhost
http_access deny purge

# Onbekende poorten weigeren
http_access deny !Safe_ports

# Alle poorten behalve SSL moeten niet naartoe geconnecteerd worden
http_access deny CONNECT !SSL_ports

# En nog wat enkele persoonlijke regels...

# Pagina bij banner 
deny_info NOTE_ADS_FILTERED url_ads

# En die bannerurl's dan verwijderen
http_access deny url_ads

# Alle archieven weigeren
http_access deny archives

# Enkel toegang tijdens werkuren
http_access allow localnet restricted_weekdays
http_access allow localnet restricted_weekends

# Al de rest weigeren
http_access deny all
</pre>

<p>
Vul nu de lijst in met bestanden die de gebruikers niet mogen downloaden. 
Ik heb zip, viv, exe, mp3, rar, ace, avi, mov, mpg, mpeg, au, ra, arj, 
tar, gz and z toegevoegt. 
</p>

<pre caption="/etc/squid/files.acl">
\.[Zz][Ii][pP]$
\.[Vv][Ii][Vv].*
\.[Ee][Xx][Ee]$
\.[Mm][Pp]3$
\.[Rr][Aa][Rr]$
\.[Aa][Cc][Ee]$
\.[Aa][Ss][Ff]$
\.[Aa][Vv][Ii]$
\.[Mm][Oo][Vv]$
\.[Mm][Pp][Gg]$
\.[Mm][Pp][Ee][Gg]$
\.[Aa][Uu]$
\.[Rr][Aa]$
\.[Aa][Rr][Jj]$
\.[Tt][Aa][Rr]$
\.[Gg][Zz]$
\.[Zz]$
</pre>

<note>
Merk op dat tussen [] er telkens een hoofdletter en een kleine letter 
voorkomt. Dit is omdat men anders wel .AVI bestanden kan downloaden 
maar geen .avi... 
</note>

<p>
Hierna voegen we enkele reguliere expressies toe om banners te identificeren. 
Je bent zelf waarschijnlijk iets creatiever dan ik hier:
</p>

<pre caption="/etc/squid/banner-ads.acl">
/adv/.*\.gif$
/[Aa]ds/.*\.gif$
/[Aa]d[Pp]ix/
/[Aa]d[Ss]erver
/[Aa][Dd]/.*\.[GgJj][IiPp][FfGg]$
/[Bb]annerads/
/adbanner.*\.[GgJj][IiPp][FfGg]$
/images/ad/
/reklame/
/RealMedia/ads/.*
^http://www\.submit-it.*
^http://www\.eads.*
^http://ads\.
^http://ad\.
^http://ads02\.
^http://adaver.*\.
^http://adforce\.
adbot\.com
/ads/.*\.gif.*
_ad\..*cgi
/Banners/
/SmartBanner/
/Ads/Media/Images/
^http://static\.wired\.com/advertising/
^http://*\.dejanews\.com/ads/
^http://adfu\.blockstackers\.com/
^http://ads2\.zdnet\.com/adverts
^http://www2\.burstnet\.com/gifs/
^http://www.\.valueclick\.com/cgi-bin/cycle
^http://www\.altavista\.com/av/gifs/ie_horiz\.gif
</pre>

<p>
En het laatste deel. We willen dat dit bestand getoond wordt wanneer er een banner verwijderd is. Het is niet meer dan een stukje HTML-code die een transparante 4x4 gif toont.
</p>

<pre caption="/etc/squid/errors/NOTE_ADS_FILTERED">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META HTTP-EQUIV="REFRESH" CONTENT="0; URL=http://localhost/images/4x4.gif"&gt;
&lt;TITLE>ERROR: The requested URL could not be retrieved&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;H1&gt;Add filtered!&lt;/H1&gt;
</pre>

<note>
Sluit de &lt;HTML&gt; en &lt;BODY&gt; tags niet. Dit wordt vanzelf gedaan door
squid.
</note>

<p>
Zoals je kan zien, squid heeft veel mogelijkheden en is heel efficient om te 
filteren en om als proxy ingesteld te worden. Je kunt squid zelfs alternatief
gebruiken om grote netwerken te verkleinen. De configuratie die ik heb hier heb
opgegeven is heel geschikt voor een klein netwerk van 1-20 gebruikers.
</p>

<p>
Maar om een packet filter (iptables) en een apcliation gateway (Squid)
combineren is de beste oplossing, zelfs als Squid ergens veilig is weggestoken
en niemand aan kan van buitenaf. We moeten nog altijd bereid zijn tot aanvallen
van binnenaf.
</p>

<p>
Configureer nu je client browsers om de proxy server te gebruiken. De gateway
zal elk contact met buitenaf weigeren tenzij ze die gebruiken.
</p>

<note>
In Mozilla kun je dit doen in Edit->Preferences->Advanced->Proxies.
</note>

<p>
Het kan ook zodanig ingesteld zijn dat je proxy als transparant wordt ingesteld
: dit wil zeggen dat hij autmatisch het trafiek door de proxy stuurd.
</p>

<pre caption="Portforwarding toestaan in onze proxyserver">
# <i>iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to proxyhost:3128</i>
# <i>iptables -t nat -A PREROUTING -p tcp --dport 443 -j DNAT --to proxyhost:3128</i>
</pre>

<note>
Als de proxy aan het werken is op de packet filter; (dit is niet aangeraden),
Kan dit noodzakelijk zijn dat u genoeg reserve computers hebt (gebruik
<c>REDIRECT</c>  doel in de plaats van <c>DNAT</c>; <c>REDIRECT</c> stuurt de
pakketten naar de localhost).
</note>

</body>
</section>
<section>
<title>Geleerde lessen</title>
<body>

<p>
We hebben geleerd dat;
</p>

<ol>
  <li>
    Een firewall hebben ook riskant kan zijn voor jezelf. Een slecht
    geconfigureerde firewall is slechter dan geen hebben.
  </li>
  <li>
    Hoe je een basis-opstelling maakt voor een gateway en een transparante
    proxy
  </li>
  <li>
    De sleutel tot een goede firewall is een protocols kennen die je wilt
    toestaan.
  </li>
  <li>
    Dat IP verkeer niet altijd legale data bevat; bvb ICMP pakketten, wat een
    That IP traffic does not always contain legitimate data, e.g. ICMP packets,
    die een kwaadwillige inhoud kan bevatten.
  </li>
  <li>Hoe je een SYN aanval kan voorkomen.</li>
  <li>
    Filteren van HTTP trafiek door het verwijderen van afbeeldingen, downlaods
    en/of virussen
  </li>
  <li>
    Packet filters and application gateways combineren verstrekken een betere
    controle.
  </li>
</ol>

<p>
Nu, als je <e>echt</e> nood hebt, creeer een firewall die you noden toekomen.
</p>

</body>
</section>

</sections>
