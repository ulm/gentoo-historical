<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/security/shb-intrusion.xml,v 1.1 2006/07/19 09:21:54 neysx Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.1</version>
<date>2005-11-23</date>

<section>
<title>Aide (Advanced Intrusion Detection Environment)</title>
<body>

<p>
Aide is een hostgebaseerde IDS (vrij alternatief voor Tripwire). Indien je
Tripwire kent dan zou je geen moeilijkheden mogen hebben met de configuratie
van Aide.
</p>

<p>
Het configuratiebestand is gebaseerd op reguliere expressies, macros en regels
voor bestanden en directories. We hebben de volgende macro's:
</p>

<table>
  <tr>
    <th>Macro</th><th>Uitleg</th><th>Syntax</th>
  </tr>
  <tr>
    <ti>ifdef</ti><ti>Indien gedefinieerd</ti><ti>@@ifdef "name"</ti>
  </tr>
  <tr>
    <ti>ifndef</ti><ti>Indien niet gedefinieerd</ti><ti>@@ifndef "name"</ti>
  </tr>
  <tr>
    <ti>define</ti><ti>Definieer een variabele</ti><ti>@@define "name" "value"</ti>
  </tr>
  <tr>
    <ti>undef</ti><ti>Undefinieer een variabele</ti><ti>@@undef "name"</ti>
  </tr>
  <tr>
    <ti>ifhost</ti><ti>Indien &quot;hostname&quot;</ti><ti>@@ifhost "hostname"</ti>
  </tr>
  <tr>
    <ti>ifnhost</ti><ti>Indien niet &quot;hostname&quot;</ti><ti>@@ifnhost "hostname"</ti>
  </tr>
  <tr>
    <ti>endif</ti><ti>Endif moet gebruikt worden na alle macro's behalve define
	en undef</ti><ti>@@endif</ti>
  </tr>
</table>

<p>
Deze macro's zijn zeer handig indien je meer dan 1 Gentoo pc hebt en je wil
Aide op alle pc's gebruiken. Niet alle machines bevatten immers dezelfde
services of dezelfde gebruikers.
</p>

<p>
Vervolgens hebben we een verzameling van eigenschappen van bestanden of
directories waarop we controleren. Dit zijn een combinatie van permissies,
bestandseigenschappen en cryptografische hashes of checksums.
</p>

<table>
  <tr>
    <th>Flag</th><th>Uitleg</th>
  </tr>
  <tr>
    <ti>p</ti><ti>permissies</ti>
  </tr>
  <tr>
    <ti>i</ti><ti>inode</ti>
  </tr>
  <tr>
    <ti>n</ti><ti>aantal links</ti>
  </tr>
  <tr>
    <ti>u</ti><ti>gebruiker</ti>
  </tr>
  <tr>
    <ti>g</ti><ti>groep</ti>
  </tr>
  <tr>
    <ti>s</ti><ti>grootte</ti>
  </tr>
  <tr>
    <ti>b</ti><ti>hoeveelheid blokken</ti>
  </tr>
  <tr>
    <ti>m</ti><ti>mtime</ti>
  </tr>
  <tr>
    <ti>a</ti><ti>atime</ti>
  </tr>
  <tr>
    <ti>c</ti><ti>ctime</ti>
  </tr>
  <tr>
    <ti>S</ti><ti>controleer op groeiende grootte</ti>
  </tr>
  <tr>
    <ti>md5</ti><ti>md5 checksum</ti>
  </tr>
  <tr>
    <ti>sha1</ti><ti>sha1 checksum</ti>
  </tr>
  <tr>
    <ti>rmd160</ti><ti>rmd160 checksum</ti>
  </tr>
  <tr>
    <ti>tiger</ti><ti>tiger checksum</ti>
  </tr>
  <tr>
    <ti>R</ti><ti>p+i+n+u+g+s+m+c+md5</ti>
  </tr>
  <tr>
    <ti>L</ti><ti>p+i+n+u+g</ti>
  </tr>
  <tr>
    <ti>E</ti><ti>Lege groep</ti>
  </tr>
  <tr>
    <ti>&gt;</ti><ti>Groeiende logbestand p+u+g+i+n+S</ti>
  </tr>
</table>

<p>
En indien Aide gecompileerd is met mhash ondersteuning heeft het nog enkele
andere mogelijkheden:
</p>

<table>
  <tr>
    <th>Flag</th><th>Uitleg</th>
  </tr>
  <tr>
    <ti>haval</ti><ti>haval checksum</ti>
  </tr>
  <tr>
    <ti>gost</ti><ti>gost checksum</ti>
  </tr>
  <tr>
    <ti>crc32</ti><ti>crc32 checksum</ti>
  </tr>
</table>

<p>
Nu kan je je eigen regels aanmaken gebaseerd op bovenstaande vlaggen door deze
als volgt te combineren:
</p>

<pre caption="Instellen van AIDE-regel">
All=R+a+sha1+rmd160
Norm=s+n+b+md5+sha1+rmd160
</pre>

<p>
Het laatste wat we nu moeten doen is kijken hoe je regels toevoegt voor een
bestand of directorie. Eenvoudig gezegd geef je gewoon de bestandsnaam of
directorie naam in en dan de regel. Aide zal dan alle bestanden recursief
toevoegen tenzij je iets anders specifieert:
</p>

<table>
  <tr>
    <th>Flag</th><th>Uitleg</th>
  </tr>
  <tr>
    <ti>!</ti><ti>Voeg dit bestand of directorie niet toe</ti>
  </tr>
  <tr>
    <ti>=</ti><ti>Voeg deze directorie toe, maar niet recursief</ti>
  </tr>
</table>

<p>
Laten we eens een volledig voorbeeld beschouwen:
</p>

<pre caption="/etc/aide/aide.conf">
@@ifndef TOP DIR 
@@define TOPDIR /
@@endif

@@ifndef AIDEDIR 
@@define AIDEDIR /etc/aide
@@endif

@@ifhost smbserv
@@define smbactive
@@endif

# De locatie van de database waarvan gelezen moet worden
database=file:@@{AIDEDIR}/aide.db

# De locatie van de database waarnaartoe geschreven moet worden
database_out=file:aide.db.new

verbose=20
report_url=stdout

# Regel definities
All=R+a+sha1+rmd160
Norm=s+n+b+md5+sha1+rmd160

@@{TOPDIR} Norm
!@@{TOPDIR}etc/aide
!@@{TOPDIR}dev
!@@{TOPDIR}proc
!@@{TOPDIR}root
!@@{TOPDIR}tmp
!@@{TOPDIR}var/log
!@@{TOPDIR}var/run
!@@{TOPDIR}usr/portage
@@ifdef smbactive
!@@{TOPDIR}etc/smb/private/secrets.tdb
@@endif
=@@{TOPDIR}home Norm
</pre>

<p>
In bovenstaand voorbeeld specifieren we enkele macro's alsook waar de
hoofddirectorie is en waar de aide-directorie is. Aide controleert
<path>/etc/aide/aide.db</path> voor de bestandsintegriteit. Maar wanneer er
geupdate moet worden of wanneer een nieuw bestand aangemaakt wordt wordt deze
opgeslagen in <path>/etc/aide/aide.db.new</path>. Dit is omdat het eerste
db-bestand niet zou overschreven worden. De optionele report_URL is een
&quot;nog te implementeren&quot; feature dat nu nog geen resultaat geeft, maar
de bedoeling is dat er in de toekomst de URL komt van een e-mailadres of van
een script waarnaartoe gemaild kan worden of welke uitgevoerd kan worden.
</p>

<p>
Na de configuratie moet je je eigen db-bestand aanmaken door <c>aide -i</c> uit
te voeren, en dan het bestand <path>/etc/aide/aide.db.new</path> naar
<path>/etc/aide/aide.db</path> te kopieren. Daarna voeg je de controle toe aan
cron door <c>crontab -e</c> als root uit te voeren.
</p>

<note>
Afhankelijk van je CPU en de vlaggen die gebruikt hebt kan de controle 
een tijdje duren.
</note>

<pre caption="aide -u als een cronjob instellen">
0 3   * * * /usr/bin/aide -u
</pre>

<note>
Herinner je eraan om je mailserver te configureren zodat je de root's
mail krijgt. Anders zal je nooit Aides rapporten ontvangen.
</note>

<p>
In bovenstaand geval wordt aide om 3am uitgevoerd. Dit is omdat ik niet de
gebruikers wil lastig vallen wanneer deze werken. Ik gebruik tevens de
<c>-u</c> (Update) optie in plaats van de <c>-C</c> (Check). De reden daartoe
is dat <c>-u</c> de bestanden controleert en niet de originele database
overschrijft waardoor je tijd wint aangezien het enige wat je moet doen 
wanneer een bestand veranderd is is het aidebestand kopieren. Controleer 
gewoon de aanpassingen om te zien of jij het wel bent die de verandering heeft
doorgevoerd in plaats van een hacker alvorens je aide aanpast aan de nieuwe
situatie.
</p>

<p>
Nu is er een probleem met het opslaan van de database op je bestandssysteem
aangezien de hacker (als hij weet dat aide geinstalleerd is) waarschijnlijk zal
proberen om de db-bestanden aan te passen of te verwijderen. Dus is het
belangrijk dat deze bestanden op een CD of een ander medium staan (origineel of
als kopie) alsook de aide binaire bestanden (want die kan een hacker ook
aanpassen). Dus maak je best een CD of een ander medium en maak je het best een
kopie van de .db bestanden en de aide binaire bestanden.
</p>

<p>
Meer informatie vind je op <uri
link="http://www.cs.tut.fi/~rammer/aide.html">aide's</uri> projectpagina
(Engels).

</p>

</body>
</section>

<section>
<title>Snort</title>
<body>

<pre caption="Aanmaken van de gebruiker snort">
# user add snort -d /var/log/snort -s /dev/null
# chown -R snort /var/log/snort
</pre>

<pre caption="/etc/conf.d/snort">
PID FILE=/var/run/snort_eth0.pid
MODE="full"
NETWORK="10.0.0.0/24"
LOG DIR="/var/log/snort"
CO NF=/etc/snort/snort.Cong
SNORT_OPTS="-D -s -u snort -dev -l $LOGDIR -h $NETWORK -c $CONF"
</pre>

<pre caption="/etc/snort/snort.conf">
<comment>(Stap 1)</comment>
var HOME_NET 10.0.0.0/24
var EXTERNAL_NET any
var SMTP $HOME_NET
var HTTP_SERVERS $HOME_NET
var SQL_SERVERS $HOME_NET
var DNS_SERVERS [10.0.0.2/32,212.242.40.51/32]
var RULE_PATH ./

<comment>(Stap 2)</comment>
preprocessor frag2
preprocessor stream4: detect_scans detect_state_problems detect_scans disable_evasion_alerts
preprocessor stream4_reassemble: ports all
preprocessor http_decode: 80 8080 unicode iis_alt_unicode double_encode iis_flip_slash full_whitespace 
preprocessor rpc_decode: 111 32771
preprocessor bo: -nobrute
preprocessor telnet_decode

<comment>(Stap 3)</comment>
include classification.config

<comment>(Stap 4)</comment>
include $RULE_PATH/bad-traffic.rules
include $RULE_PATH/exploit.rules
include $RULE_PATH/scan.rules
include $RULE_PATH/finger.rules
include $RULE_PATH/ftp.rules
include $RULE_PATH/telnet.rules
include $RULE_PATH/smtp.rules
include $RULE_PATH/rpc.rules
include $RULE_PATH/rservices.rules
include $RULE_PATH/dos.rules
include $RULE_PATH/ddos.rules
include $RULE_PATH/dns.rules
include $RULE_PATH/tftp.rules
include $RULE_PATH/web-cgi.rules
include $RULE_PATH/web-coldfusion.rules
include $RULE_PATH/web-iis.rules
include $RULE_PATH/web-frontpage.rules
include $RULE_PATH/web-misc.rules
include $RULE_PATH/web-attacks.rules
include $RULE_PATH/sql.rules
include $RULE_PATH/x11.rules
include $RULE_PATH/icmp.rules
include $RULE_PATH/netbios.rules
include $RULE_PATH/misc.rules
include $RULE_PATH/attack-responses.rules
include $RULE_PATH/backdoor.rules
include $RULE_PATH/shellcode.rules
include $RULE_PATH/policy.rules
include $RULE_PATH/porn.rules
include $RULE_PATH/info.rules
include $RULE_PATH/icmp-info.rules
include $RULE_PATH/virus.rules
# include $RULE_PATH/experimental.rules
include $RULE_PATH/local.rules
</pre>

<pre caption="/etc/snort/classification.config">
config classification: not-suspicious,Not Suspicious Traffic,3
config classification: unknown,Unknown Traffic,3
config classification: bad-unknown,Potentially Bad Traffic, 2
config classification: attempted-recon,Attempted Information Leak,2
config classification: successful-recon-limited,Information Leak,2
config classification: successful-recon-largescale,Large Scale Information Leak,2
config classification: attempted-dos,Attempted Denial of Service,2
config classification: successful-dos,Denial of Service,2
config classification: attempted-user,Attempted User Privilege Gain,1
config classification: unsuccessful-user,Unsuccessful User Privilege Gain,1
config classification: successful-user,Successful User Privilege Gain,1
config classification: attempted-admin,Attempted Administrator Privilege Gain,1
config classification: successful-admin,Successful Administrator Privilege Gain,1

# Nieuwe classificaties
config classification: rpc-portmap-decode,Decode of an RPC Query,2
config classification: shellcode-detect,Executable code was detected,1
config classification: string-detect,A suspicious string was detected,3
config classification: suspicious-filename-detect,A suspicious filename was detected,2
config classification: suspicious-login,An attempted login using a suspicious username was detected,2
config classification: system-call-detect,A system call was detected,2
config classification: tcp-connection,A TCP connection was detected,4
config classification: trojan-activity,A Network Trojan was detected, 1
config classification: unusual-client-port-connection,A client was using an unusual port,2
config classification: network-scan,Detection of a Network Scan,3
config classification: denial-of-service,Detection of a Denial of Service Attack,2
config classification: non-standard-protocol,Detection of a non-standard protocol or event,2
config classification: protocol-command-decode,Generic Protocol Command Decode,3
config classification: web-application-activity,access to a potentially vulnerable web application,2
config classification: web-application-attack,Web Application Attack,1
config classification: misc-activity,Misc activity,3
config classification: misc-attack,Misc Attack,2
config classification: icmp-event,Generic ICMP event,3
config classification: kickass-porn,SCORE! Get the lotion!,1
</pre>

<p>
Meer informatie kan je vinden op <uri link="http://www.snort.org">Snorts</uri>
website (Engels).

</p>

</body>
</section>
<section>
<title>Het ontdekken van slecht werkende software met chkrootkit</title>
<body>

<p>
HIDS zoals AIDE zijn een goede manier om veranderingen op te merken in jouw
systeem, maar het zal nooit pijn doen om nog een andere beveiliging voor je pc
te gebruiken. <c>chkrootkit</c> is een programma dat gewone system files
controleert op hun aanwezigheid van rootkits (software die gemaakt is om
aanvalacties wegsteekt en hem toelaat andere slecht-werkende software te
instaleren. Waar <c>chkrootkit</c> en alternativen zoals <c>rkhunter</c>) zijn
handige gebruiksinstrumenten, bijde voor systeemonderhoud en opsporen van
invallen na een aanva, ze kunnen niet verzekeren dat je systeem veilig is.
</p>

<p>
De beste manier om <c>chkrootkit</c> te gebruiken aanvallen te ondekken is
gewoon het te starten en best ook regelmatig via cron. Om te starten; emerge
<path>app-admin/chkrootkit</path>. <c>chkrootkit</c> kan ook in de command line
worden opgestart met het gelijknamige command, of via cron met zo'n uitzicht.
</p>

<pre caption="Plan chkrootkit als een cronjob">
0 3 * * * /usr/sbin/chkrootkit
</pre>

</body>
</section>
</sections>
