<?xml version='1.0' encoding='UTF-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/nl/security/shb-services.xml,v 1.2 2007/03/07 02:24:18 nightmorph Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<version>1.1</version>
<date>2006-03-11</date>

<section>
<title>Apache</title>
<body>

<p>
Apache (1.3.26) komt met een leuk en goed configuratiebestand, maar toch zijn
er enkele aanpassingen nodig, zoals het binden aan 1 enkel adres en
informatielekken tegenhouden. Dit zijn de opties die je in het
configuratiebestand zou moeten toepassen:
</p>

<p>
Indien je ssl aan je <path>/etc/make.conf</path> hebt toegevoegd alvorens je
apache geinstalleerd hebt is er toegang tot een ssl webserver. Voeg gewoon de
volgende regel toe om deze te activeren:
</p>

<pre caption="/etc/conf.d/apache">
HTTPD_OPTS="-D SSL"
</pre>

<pre caption="/etc/apache/conf/apache.conf">
#Laat het naar jouw localhost luisteren
Listen 127.0.0.1
BindAddress 127.0.0.1
#Het is geen goed idee om nobody of nogroup te gebruiken voor elke service die
#niet als root draait. Maak gewoon een user/group apache aan voor apache.
User apache
Group apache
#Zeg niet welke versie je hebt
ServerSignature Off
ServerTokens min
</pre>

<p>
Apache is gecompileerd met --enable-shared=max en --enable-module=all. Dit zal
per default alle modules activeren dus moet je de modules in de LoadModule
sectie (LoadModule en AddModule) wegcommentarieren indien je ze niet wil
gebruiken. Herstart de service door <c>/etc/init.d/apache restart</c> uit te
voeren.
</p>

<p>
Meer documentatie kan je vinden op <uri>http://www.apache.org</uri>
</p>

</body>
</section>

<section>
<title>Netqmail</title>
<body>
<p>
Netqmail wordt verondersteld de meest veilige mailserver te zijn die er bestaat.
Ze is geschreven met veiligheid (en paranoia) in gedachten. Ze laat geen
relaying toe per default en heeft geen enkele veiligheidslek gehad sinds
1996. Voer gewoonweg <c>emerge netqmail</c> uit en begin met configureren.
</p>
</body>
</section>

<section>
<title>Bind</title>
<body>

<p>
Bind is gekend voor zijn (on)veiligheidsgeschiedenis en dat moet je niet 
lichtjes opvatten. Zoals met elke andere service mag het <e>nooit</e> als root 
draaien, dus verander aub niet de default configuratie van deze service op dat 
vlak. Per default stelt Gentoo geen configuratie in voor deze service dus zal 
je je eigen dns zones in <path>/etc/bind/named.conf</path> moeten installeren. 
Maar de veiligheid hangt niet enkel af van de dns-server, maar tevens van het 
protocol dat gebruikt wordt moet goed geconfigureerd zijn.
</p>

<p>
Mensen vragen vaak &quot;Waarom niet djbdns&quot; gebruiken (zeer veilige dns
van D.J. Bernstein) en het antwoord is: Bind heeft features die djbdns niet
heeft, zoals ondersteuning voor IPv6 (of toch niet zonder patches).
</p>

<pre caption="/etc/bind/named.conf">
#Stel ACLs in
acl "mynet" { 10.0.0.0/24; };

options {
  directory "/var/bind";
  pid-file "/var/run/named/named.pid";
#Laat toe dat "mynet" queries uitvoert.
  allow-query { "mynet"; };
#Laat geen zonetransfers toe.
  allow-transfer { none; };
  forward only;
  forwarders { 10.0.0.2; };
#Laat enkel recursie toe aan "mynet"
  recursion no;
  allow-recursion { mynet; };
#Bind aan een interface
  listen-on { 10.0.0.1; };
#Toon de versie niet
  version "Heeeeeeeres Jhonny!";
};

key "rndc-key" {
  algorithm hmac-md5;
  secret "o1BYkYC+bXeZgHDsrVBwRQ==";
};

#Laat enkel beheer toe van localhost en met een sleutel
controls {
  inet 127.0.0.1 port 953
  allow { 127.0.0.1; } keys { "rndc-key"; };
};
</pre>

<p>
Dit is een default goede configuratie. Echter heeft Bind versie 9 speciale
chrootfunctionaliteit dat je best gebruikt. Hier leg ik uit hoe je je gechroote
bind aanmaakt:
</p>

<pre caption="Aanmaken van chrootomgeving">
# <i>mkdir -p /chroot</i>
# <i>mkdir /chroot/dns</i>
# <i>mkdir /chroot/dns/dev</i>
# <i>mkdir /chroot/dns/etc</i>
# <i>mkdir /chroot/dns/var</i>
# <i>mkdir /chroot/dns/var/run</i>
# <i>mkdir /chroot/dns/var/run/named</i>
# <i>chown -R named:named /chroot/dns/var/run/named</i>
# <i>cp -R /etc/bind /chroot/dns/etc/.</i>
# <i>cp /etc/localtime /chroot/dns/etc/localtime</i>
# <i>cp -R /var/bind /chroot/dns/var/.</i>
# <i>mknod /chroot/dns/dev/zero c 1 5</i>
# <i>chmod 666 /chroot/dns/dev/zero</i>
# <i>mknod /chroot/dns/dev/random c 1 8</i>
# <i>chmod 666 /chroot/dns/dev/random</i>
# <i>cp -a /dev/log /chroot/dns/dev/log</i>
# <i>cd /chroot/dns</i>
# <i>chattr +i etc etc/localtime var</i>
</pre>

<p>
Dit zal een chrootomgeving aanmaken in <path>/chroot</path>. Al wat we nu nog
moeten doen is de initscript aanpassen om de nieuwe chrootomgeving te
gebruiken. Editeer <path>/etc/init.d/named</path> en voeg <c>-t /chroot/dns</c>
toe aan de startfunctie. Je zou tevens beter de stop-functie ook aanpassen om
naar het correcte PID-bestand te wijzen
(<path>/chroot/var/run/named/named.pid</path>). Herstart je DNS-server.
</p>

<note>
Een hacker kan uit een chrootjail ontsnappen indien hij goed genoeg is (zie hoe
je dat voorkomt in de kernelpatch sectie van dit document).
</note>

<p>
Documentatie kan gevonden worden op het <uri
link="http://www.isc.org/products/BIND/bind9.html">Internet Software
Consortium</uri> (Engels).
</p>

</body>
</section>

<section>
<title>Djbdns</title>
<body>

<p>
Er is niet echt veel te vertellen over djbdns behalve dat de auteur <uri
link="http://cr.yp.to/djbdns/guarantee.html">geld</uri> wil verwedden op het 
feit dat zijn software veilig is. Dus ga en probeer het eens:
<uri>http://www.djbdns.org</uri>. Het is verschillend van Bind v9 wat betreft
configuratie e.d. maar echt moeilijk is het nie.
</p>

</body>
</section>

<section>
<title>Samba</title>
<body>

<p>
Samba is een netwerk file/printer-sharing protocol tussen Microsoft/Novell 
netwerken en zou <e>niet</e> mogen gebruikt worden over het internet. Maar 
ongeacht dat heeft het nog steeds veiligheid nodig.
</p>

<pre caption="/etc/samba/smb.conf">
[global]
  #Aan een interface binden
  interfaces = eth0 10.0.0.1/32

  #Geencrypteerde paswoorden gebruiken
  encrypt passwords = yes
  directory security mask = 0700

  #Enkel toegang verlenen aan het 1.0.0.* netwerk
  hosts allow = 10.0.0.

  #Gebruikersidentificatie gebruiken
  #(dus geen share-mode)
  security = user
  
  #Alle gepriviligeerde accounts weigeren
  invalid users = root @wheel

  #Maximaal gebruik (in kilobytes)
  max disk size = 102400

  #Paswoordbeleid forceren
  min password length = 8
  null passwords = no

  #PAM gebruiken (indien ondersteund)
  obey pam restrictions = yes
  pam password change = yes
</pre>

<p>
Zorg ervoor dat de permissies correct zijn op elke share en herinner je eraan
om de <uri link="http://www.samba.org">documentatie</uri> (Engels) te lezen.
</p>

<p>
Herstart nu je server en voeg de gebruikers toe die toegang moeten hebben tot
deze service. Dit kan je doen door <path>/usr/bin/smbpasswd</path> te gebruiken
met de <c>-a</c> optie.
</p>

</body>
</section>

<section>
<title>ssh</title>
<body>

<p>
De enige beveiliging dat OpenSSH nodig heeft is een sterkere authenticatie 
gebruiken die gebaseerd is op publieke-sleutel encryptie. Veel sites zoals
<uri>http://www.sourceforge.net</uri>, <uri>http://www.php.net</uri> and 
<uri>http://www.apache.org</uri>) hebben geleden onder ongewenste invallen
door een paswoord-lek of slecht wachtwoord.
</p>

<pre caption="/etc/ssh/sshd_config">
#Laat alleen versie 2 toe
Protocol 2

#Schakel root login uit. Gebruikers moeten inloggen moeten met su naar 
#root-gebruiker overschakelen
PermitRootLogin no

#Schakel Public key authenticatie aan
PubkeyAuthentication yes
AuthorizedKeysFile      .ssh/authorized_keys

#Laat .rhost and normaal paswoord authenticatie niet toe
RhostsAuthentication no
PasswordAuthentication no
PermitEmptyPasswords no

#Laat alleen users in the groep wheel of admin toe om in te loggen
AllowGroups wheel admin

#Laat in die groepen alleen de volgene gebruikeres toe
#De @&lt;domeinnaam&gt; is optioneel maar vervangt
#de oudere AllowHosts optie
AllowUsers kn@gentoo.org bs@gentoo.org

#Loggen 
SyslogFacility AUTH
LogLevel INFO

ListenAddress 127.0.0.1
</pre>

<p>
Controleer ook dat je <c>UsePAM yes</c> aan hebt staan in je configuratie-bestand
omdat deze het publieke-sleutel authenticatie uitschakelt.
</p>

<p>
Alles wat je nu nog hoeft te doen is voor elke gebruiker een sleutel
aanmaken op de machine waar ze willen inloggen; met de volgende 
commando:
</p>

<pre caption="Creer een DSA keypair">
# <i>/usr/bin/ssh-keygen -t dsa</i>
</pre>

<p>
En voer een wachtwoord in.
</p>

<pre caption="Uitvoer van ssh-keygen">
Generating public/private dsa key pair.
Enter file in which to save the key (/home/kn/.ssh/id_dsa):<i>[Press enter]</i>
Created directory '/home/kn/.ssh'.
Enter passphrase (empty for no passphrase): <i>[Enter passphrase]</i>
Enter same passphrase again: <i>[Enter passphrase again]</i>
Your identification has been saved in /home/kn/.ssh/id_dsa.
Your public key has been saved in /home/kn/.ssh/id_dsa.pub.
The key fingerprint is:
07:24:a9:12:7f:83:7e:af:b8:1f:89:a3:48:29:e2:a4 kn@knielsen
</pre>

<p>
Dit zal twee bestanden in jouw <path>~/.ssh/</path> map toevoegen 
<path>id_dsa</path> and <path>id_dsa.pub</path> genaamd. Het bestand
<path>id_dsa</path> is jouw private sleutel en moet weggehouden worden
van andere mensen dan jezelf. Het andere bestand <path>id_dsa.pub</path>
kan uitgedeeld worden aan elke server dat je toegang tot hebt. Voeg de
sleutel toe aan de gebruikers in de home map in <path>~/.ssh/authorized_keys</path>
en dan zou de gebruiker moeten kunnen inloggen:
</p>

<pre caption="Toevogen van het id_dsa.pub bestand aan het authorized_keys bestand">
$ <i>scp id_dsa.pub other-host:/var/tmp/currenthostname.pub</i>
$ <i>ssh other-host</i>
password: 
$ <i>cat /var/tmp/currenthostname.pub >> ~/.ssh/authorized_keys</i>
</pre>

<p>
Nu dat je gebruikers deze privé sleutel goed moeten bewaren. Laat het op een 
verwijderbaar medium plaatsen dat ze altijd bijhebben of laat het ze opslaan
op hun wekrstation (plaats dit in het <uri
link="?part=1&amp;chap=1#security_policies">wachtwoord</uri> policy).
</p>

<p>
Voor meer informatie ga naar de <uri
link="http://www.openssh.org">OpenSSH</uri> web site.
</p>

</body>
</section>
<section>
<title>Gebruiken van xinetd</title>
<body>

<p>
Xinetd is een vervanging voor <c>inetd</c> (die Gentoo niet heeft), het internet
service daemon. Het ondersteund toegang op basis van het adres of van de externe
host en van de tijd van toegang. Het heeft ook een uitgebreide log capaciteit,
waaronder server starttijd, externe host adressen, externe gebruiksnaam, server
looptijd en aangevraagde acties.
</p>

<p>
Zoals andere services is het belangrijk om een goede configuratie te hebben. Maar
sinds <c>xinetd</c> moet gestart worden door root en protocols ondersteund die je
waarshijnlijk nieuw in het oor klinken, raden we je aan ze niet te gebruiken. Maar 
als je het wilt gebruiken, hier kun je zien hoe je veiligheid op toevoegt.
</p>

<pre caption="Installeer xinetd">
# <i>emerge xinetd tcp-wrappers</i>
</pre>

<p>
En pas het configuratie bestand aan.
</p>

<pre caption="/etc/xinetd.conf">
defaults
{
 only_from = localhost
 instances = 10
 log_type = SYSLOG authpriv info
 log_on_success = HOST PID
 log_on_failure = HOST
 cps = 25 30
}

# This will setup pserver (cvs) via xinetd with the following settings:
# max 10 instances (10 connections at a time)
# limit the pserver to tcp only
# use the user cvs to run this service
# bind the interfaces to only 1 ip
# allow access from 10.0.0.*
# limit the time developers can use cvs from 8am to 5pm
# use tpcd wrappers (access control controlled in 
# <i>/etc/hosts.allow</i> and <i>/etc/hosts.deny</i>)
# max_load on the machine set to 1.0
# The disable flag is per default set to no but I like having 
# it in case of it should be disabled
service cvspserver
{
 socket_type = stream
 protocol = tcp
 instances = 10
 protocol = tcp
 wait = no
 user = cvs
 bind = 10.0.0.2
 only_from = 10.0.0.0
 access_times = 8:00-17:00
 server = /usr/sbin/tcpd
 server_args = /usr/bin/cvs --allow-root=/mnt/cvsdisk/cvsroot pserver
 max_load = 1.0
 log_on_failure += RECORD
 disable = no
}
</pre>

<p>
Voor meer informatie lees <c>man 5 xinetd.conf</c>.
</p>

</body>
</section>

<section>
<title>X</title>
<body>

<p>
Standaard is Xorg geconfigureerd om als xserver te fungeren. Dit kan gevaarlijk
zijn aangezien X ook luistert naar onge-encrypteerde TCP conneties voor xclients.
</p>

<impo>
Als je dit niet nodig hebt; dan schakel je die best uit!
</impo>

<p>
Maar als je afhangt van een workstation te gebruikena ls een Xserver
gebruik dan de <c>/usr/X11R6/bin/xhost</c> commando. Dit commando laat
clienten toe om van andere pc's te connecteren en de display gebruiken. 
Dit kan handig zijn als je een X aplicatie van een andere machine nodig
hebt and de enige manier is door het netwerk, maar het kan ook uitgebuid
worden door een aanvaller. De syntax van dit comamndo is 
<c>/usr/X11R6/bin/xhost +hostname</c>
</p>

<warn>
Gebruik nooit het <c>xhost +</c> optie! Dit zal alle clienten tolaten om 
te connecteren en controle van je x overnemen. Als een aanvaller toegang 
kan krijgen tot je X kan hij alle ingetypte toetsen loggen en controle van
je desktop over nemen. ALs je het moet gebruiken, gebruik atijd een ingestelde
hostnaam.
</warn>

<p>
Een veiligere oplossing is om deze optie uit te schakelen en volledig dit uit te
schakelen bij het starten van X, dit kan met <c>startx -- -nolisten tcp</c> of 
schakel dit permanent uit in de config. 
</p>

<pre caption="/usr/X11R6/bin/startx">
defaultserverargs="-nolisten tcp"
</pre>

<p>
Controleer dat <path>startx</path> niet overschreven wordt als je een nieuwe
versie van xorg installeerd. Daarom moet je het beschermen. Voeg de volgende
lijn in <path>/etc/make.conf</path>:
</p>

<pre caption = "/etc/make.conf">
CONFIG_PROTECT_MASK="/usr/X11R6/bin/startx"
</pre>

<p>
Als je een grafische login manager gebruikt; heb je een andere aanpak nodig.
</p>

<p>
Voor <c>gdm</c> (Gnome Display Manager)
</p>

<pre caption="/etc/X11/gdm/gdm.conf">
[server-Standard]
command=/usr/X11R6/bin/X -nolisten tcp
</pre>

<p>
Voor <c>xdm</c> (X Display Manager) en <c>kdm</c> (Kde Display Manager)
</p>

<pre caption="/etc/X11/xdm/Xservers">
:0 local /usr/bin/X11/X -nolisten tcp 
</pre>

</body>
</section>

</sections>
