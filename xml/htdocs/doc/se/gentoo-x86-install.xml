<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/se/gentoo-x86-install.xml">
  <title>Gentoo Linux 1.4_rc2 Installation Instructions</title>
  <author title="Chefsarkitekt">
    <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
  </author>
  <author title="Författare">Chris Houser</author>
  <author title="Författare">
    <mail link="jerry@gentoo.org">Jerry Alexandratos</mail>
  </author>
  <author title="Spöke">
    <mail link="g2boojum@gentoo.org">Grant Goodyear</mail>
  </author>
  <author title="Redigerare">
    <mail link="zhen@gentoo.org">John P. Davis</mail>
  </author>
  <author title="Redigerare">
    <mail link="Pierre-Henri.Jondot@wanadoo.fr">Pierre-Henri Jondot</mail>
  </author>
  <author title="Redigerare">
    <mail link="stocke2@gentoo.org">Eric Stockbridge</mail>
  </author>
  <author title="Redigerare">
    <mail link="rajiv@gentoo.org">Rajiv Manglani</mail>
  </author>
  <author title="Redigerare">
    <mail link="seo@gentoo.org">Jungmin Seo</mail>
  </author>
  <author title="Editor">
    <mail link="zhware@gentoo.org">Stoyan Zhekov</mail>
  </author>
  <author title="Översättare"><mail link="guzz@home.se">Johannes Gustafsson</mail></author>
  <abstract>Dessa instruktioner hjälper dig installera Gentoo Linux 1.4_rc2. 
  Installationen av Gentoo Linux kan utföras på några olika sätt, beroende 
  på hur mycket av systemet du vill bygga från scratch.</abstract>
<version>2.3.14</version>
 <date>09 Feb 2003</date>
  <chapter>
    <title>Om installationen</title>
    <section>
      <body>
        <p>Den här nya startbara CDn kan användas på nästan alla moderna IDE CD-ROMar, 
        och även på många SCSI CD-ROMar, förutsatt att både din CD-ROM och din BIOS stöder 
        start från CD. På CD-skivan finns Linuxsupport för IDE (och PCI IDE) (inbyggt i kärnan) 
        och även support för alla SCSI-enheter (tillgängliga som moduler.) Dessutom erbjuder vi 
        moduler för så gott som alla nätverkskort som Linux stöder, och även verktyg som låter dig 
        konfigurera ditt nätverk och etablera utgående (precis som ingående) <c>ssh</c>-anslutningar 
        och nedladdningar av filer.  </p>
        
        <p>För att installera från CDn krävs det en 486+ processor och helst inte mindre än 64MB RAM. 
        (Gentoo Linux kan installeras med bara 64MB RAM + 64MB swap, men processen går väldigt långsamt 
        under sådana omständigheter.)</p>
        
        <p>Gentoo Linux kan installeras med hjälp av en utav tre stycken "fas-tarbollar". Vilken 
        du skall välja beror på hur mycket av programvaran du vill kompilera själv. Fas 1-tarbollen 
        använder du när du vill "bootstrapa" och bygga hela systemet från scratch. Fas 2-tarbollen 
        använder du när du vill bygga hela systemet från scratch förutom 
        "bootstrapen" som då redan är utförd åt dig. Och Fas 3-tarbollen innehåller den 
        färdigkompilerade grunden till ditt Gentoo Linux system, optimerat och klart.</p>
        
        <p> Så, hur kommer man igång nu då? Först måste du ladda ner en LiveCD ISO-image 
        från <url>http://www.ibiblio.org/gentoo/releases/1.4_rc2/x86/</url>. I den katalogen 
        ser du ett flertal underkataloger som t.ex. <c>athlon</c> för alla arkitekturspecifika 
        kompileringar. Nedan följer en genomgång av katalogerna och vad dom innehåller:</p>
        <table>
          <tr>
            <th>Arkitektur</th>
            <th>Beskrivning</th>
          </tr>
          <tr>
            <ti>x86</ti>
            <ti>Fas 1-tarbollar och "gentoo-basic" liveCD -- Fungerar på alla arkitekturer.</ti>
          </tr>
          <tr>
            <ti>i586</ti>
            <ti>Fas 2 och 3-tarbollar, GRP-paket och liveCD för i586+-processorer.</ti>
          </tr>
          <tr>
            <ti>i686</ti>
            <ti>Fas 2 och 3-tarbollar, GRP-paket och liveCD för i686+-processorer.</ti>
          </tr>
          <tr>
            <ti>athlon</ti>
            <ti>Fas 2 och 3-tarbollar, GRP-paket och liveCD för AMD Athlon-processorer.</ti>
          </tr>
          <tr>
            <ti>athlon-xp</ti>
            <ti>Fas 2 och 3-tarbollar, GRP-paket och liveCD för AMD Athlon XP-processorer.</ti>
          </tr>
          <tr>
            <ti>athlon-mp</ti>
            <ti>Fas 2 och 3-tarbollar, GRP-paket och liveCD för AMD Athlon MP-processorer.</ti>
          </tr>
          <tr>
            <ti>pentium3</ti>
            <ti>Fas 2 och 3-tarbollar, GRP-paket och liveCD för Intel Pentium III och Pentium 4-processorer.</ti>
          </tr>
        </table>
        <p>I var och en av dessa kataloger hitter du en katalog vid namn <path>livecd/</path> som innehåller LiveCDs. 
        Dessa LiveCDs kan bootas på alla system, men de bifogade tarbollarna är optimerade för en 
        speciell processortyp och kan därför inte användas på alla system. Detta gäller alla utom 
        "gentoo-basic" CDn i katalogen <path>x86</path>, den kan användas på alla dessa arkitekturer.
</p>
        <p> Alla LiveCDs är kompletta CD-images som bör brännas på en CDR eller 
        CD-RW-skiva med valfritt brännarprogram. För tillfället erbjuder vi två 
        olika sorters LiveCDs. Den första är den som är märkt som "gentoo-basic". 
        Den är ungefär 40MB stor och återfinns i katalogen <path>x86/livecd/</path>. Denna LiveCD är 
        storleksmässigt så liten det bara går så att man skall kunna ladda ner den snabbt och 
        innehåller en fas 1-tarboll som du hittar i <path>/mnt/cdrom/gentoo/</path> efter du att startat 
        datorn med hjälp av cd-skivan.</p>
        <p>Den andra varianten av LiveCDn är märkt "livecd-grp." Dessa CD-skivor (finns i respektive 
<path>arch/livecd/</path>-kataloger) innehåller fas 1, 2 och 3-tarbollar, och även en uppsättning av 
GRP-paket som är optimerade för specifika arkitekturer. GRP är helt enkelt färdigkompilerade 
paket för stora program som XFree86, KDE, GNOME, OpenOffice, etc. Med dessa LiveCDs kan du 
installera ett fullt fungerande Gentoo Linux-system på nolltid. Men istället så är 
dessa ISOs mycket större  runt 600MB  så det kan ta ett tag att ladda ner dem.</p>
        <info>Om din installation av någon anledning blir avbruten vid något tillfälle 
        kan du starta om datorn och sedan fortsätta där du var. Om du till exempel har partitionerat, 
        installerat fas X-tarbollen och precis är till att "chroota" så är det inga 
        problem att komma igång igen utan att behöva göra om allting. Starta bara datorn 
        igen med LiveCDn och montera dina enheter och partitioner i <path>/mnt</path> som vanligt. 
        I princip kan du göra detta under vilket skede av installationen som helst, 
        förutom innan du har partitionerat, av uppenbara skäl.  </info>
        <warn>Om du stöter på problem under något skede av installationen och 
        vill rapportera en bugg så kan du göra det på adressen <url>http:// bugs.gentoo.org.</url> 
        <e>Utvecklarna</e> tar sedan hand om detta och ser till att det blir ordnat. </warn>
        <p>Nu skall vi bara göra en kort genomgång av installationen innan vi sätter igång på allvar.
Det första vi gör är att ladda ner en LiveCD, bränna den och sedan starta datorn med CDn.
När vi fått en "root prompt" så skall vi skapa partitioner, skapa våra filsystem och packa 
upp antingen en fas 1, 2 eller 3-tarboll. Om vi använder en fas 1 eller 2- tarboll så måste 
vi utföra vissa steg för att komma till fas 3. När vi väl är i fas 3 så kan vi konfigurera 
systemet (modifiera konfigurationsfiler, installera en bootloader, etc) och sedan starta upp 
ett fullt fungerande Gentoo Linux-system. Beroende på vilken fas av installationen du 
börjar från är detta vad som måste göras: </p>
        <table>
          <tr>
            <th>fas</th>
            <th>vad måste göras</th>
          </tr>
          <tr>
            <ti>1</ti>
            <ti>partitionera/skapa filsystem, synkronisera portage, bootstrap, emerge:a systemet, emerge:a linuxkärnan, slutgiltig konfiguration.</ti>
          </tr>
          <tr>
            <ti>2</ti>
            <ti>partitionera/skapa filsystem, synkronisera portage, emerge:a systemet, emerge:a linuxkärnan, slutgiltig konfiguration.</ti>
          </tr>
          <tr>
            <ti>3</ti>
            <ti>partitionera/skapa filesystem, synkronisera portage, slutgiltig konfiguration.</ti>
          </tr>
        </table>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Uppstart</title>
    <section>
      <body>
        <p>Börja med att starta datorn med din LiveCD. Om allt fungerar som det skall så skall du se 
        en snygg startskärm med Gentoo Linux logotyp. Här kan du, trycka Enter för att börja 
        start-processen, trycka F2 för att få hjälp, eller skicka med extra anvisningar till 
        kärnan genom att skriva <c>gentoo alternativ1 alternativ2</c>, etc. När du väl tryckt Enter så 
        kommer du välkomnas av en massa text följt av den normala startsekvensen för Gentoo Linux. 
        Du kommer automatiskt att loggas in som användaren "root" och lösenordet kommer av säkerhetsskäl att sättas 
        till en slumpad textsträng. Nu borde du ha en root-prompt ("<c>#</c>") på den 
        aktiva konsollen och du kan komma åt fler konsoller genom att trycka Alt-F2, Alt-F3 och 
        Alt-F4. Du kommer tillbaka till den första genom att trycka Alt-F1.</p>
        
        <p>Du har förmodligen märkt att ovanför din <c>#</c>-prompt finns en massa text som förklarar 
        exempelvis hur du konfigurerar ditt nätverk och vart du hittar de olika 
        fas-tarbollarna och paketen på din CD.</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Ladda moduler</title>
    <section>
      <body>
        <p>Om den automatiska eftersökningen av PCI-enheter missade någon enhet är du tvungen att 
        ladda moduler för denna hårdvara manuellt. För att se en lista över alla tillgängliga 
        moduler för nätverkskort skriver du <c>ls /lib/modules/*/kernel/drivers/net/*</c>. 
        För att ladda en modul skriver du:
			</p>
        <pre caption="PCI-modulskonfiguration">
# <c>modprobe pcnet32</c>
<comment>(ersätt pcnet32 med din NIC-modul)</comment>
			</pre>
        <p>Om du nu vill kunna använda eventuell SCSI-hårdvara som missades av den automatiska 
        eftersökningen måste du ladda moduler från /lib/modules också för detta, även denna gång använder vi <c>modprobe</c>:
			</p>
        <pre caption="Ladda SCSI-moduler">
# <c>modprobe aic7xxx</c>
# <c>modprobe sd_mod</c>
			</pre>
        <p><c>aic7xxx</c> stöder din SCSI-controller och <c>sd_mod</c> stöder SCSI-hårddiskar. </p> 
			<note>
			Stöd för SCSI CD-ROMar och hårddiskar finns inbyggt I kärnan.
			</note>
        <p>Om du använder hårdvaru-RAID måste du ladda ATA-RAID-moduler för din RAID-controller.
			</p>
        <pre caption="Ladda RAID-moduler">    
# <c>modprobe ataraid</c>    
# <c>modprobe pdcraid</c>            
      <comment>(Promise Raid Controller)</comment>    
# <c>modprobe hptraid</c>            
      <comment>(Highpoint Raid Controller)</comment>    
			</pre>
        <p>LiveCDn borde ha aktiverat DMA för dina hårddiskar, men om den inte 
        gjorde det så kan du använda programmet <c>hdparm</c> för att aktivera DMA: </p>
        <pre caption="Setting DMA"><comment>Ersätt hdX med din enhet.</comment>
# hdparm -d 1 /dev/hdX <comment>Aktiverar DMA </comment>
# hdparm -d1 -A1 -m16 -u1 -a64 /dev/hdX <comment>Aktiverar DMA och andra säkra prestandaökande alternativ.</comment>
# hdparm -X66 /dev/hdX <comment>Tvångsaktiverar Ultra-DMA -- farligt  kan orsaka skada på vissa diskar.</comment></pre>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Ladda PCMCI-moduler</title>
    <section>
      <body>
        <p>Om du har ett PCMCIA-nätverkskort så måste du trixa lite extra.
			</p>
        <warn>För att undvika problem med <c>cardmgr</c> så <e>måste</e> du köra det <e>innan</e> chroot-
delen av installationen.</warn>
        <pre caption="Ladda PCMCIA-moduler">
# <i>modprobe pcmcia_core</i>
# <i>modprobe i82365</i>
# <i>modprobe ds</i>
# <i>cardmgr -f</i>
			</pre>
        <p>När <c>cardmgr</c> hittar din hårdvara skall din högtalare ge ifrån sig några pip och ditt PCMCIA-
nätverkskort skall vakna till liv. Du kan självklart sätta in PCMCIA-kortet efter att du laddat 
cardmgr också, om du föredrar det. (Rent tekniskt sett behöver du inte köra <c>cardmgr</c> 
överhuvudtaget om du vet vilken modul du måste ladda till ditt PCMCIA-kort. Men om du 
inte vet det så kan du inte ladda alla moduler och se vilka som inte fungerar eftersom alla 
PCMCIA-moduler ligger kvar och väntar på att ett PCMCIA-kort skall sättas in. <c>cardmgr</c> 
kommer också att ladda ur alla moduler för ett visst kort när du plockar ut det).</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Konfigurera nätverket</title>
    <section>
      <title>Konfigurera PPPoE</title>
      <body>
        <p>Om du måste använda PPPoE för att ansluta till internet så har LiveCDn gjort det lätt för dig 
genom att inkludera <c>rp-pppoe</c>. Använd det bifogade scriptet <c>adsl-setup</c> för att konfigurera din 
anslutning. Du kommer att bli tillfrågad om vilken ethernet-enhet som är kopplad till ditt 
adslmodem, ditt användarnamn och lösenord, ipadressen till dina DNS-servrar, och om du 
behöver en brandvägg eller inte.   </p>
        <pre caption="Konfigurera PPPoE">
# <c> adsl-setup </c>
# <c> adsl-start </c>
			</pre>
        <p>Om någonting går fel, dubbelkolla att du har angivit korrekt användarnamn och lösenord 
genom att titta i <path>/etc/ppp/pap-secrets</path> eller <path>/etc/ppp/chap-secrets</path>, och se till att du använder 
rätt ethernet-enhet. </p>
      </body>
    </section>
    <section>
      <title> Automatisk nätverkskonfiguration </title>
      <body>
        <p>Gentoo Linux-installationen låter dig konfigurera ett fungerande nätverk och ger dig 
möjlighet att använda <c>ssh</c>, <c>scp</c>, <c>lynx</c>, <c>irssi</c> eller <c>wget</c> efter behov innan du ens har påbörjat 
installationsprocessen. Även om du inte behöver något av detta just nu så borde du fortsätta 
och konfigurera ditt nätverk nu. När ditt nätverk väl är fungerande kan Portage använda din 
anslutning när du är inne i den "chroot:ade" miljön (nödvändigt för att installera Gentoo 
Linux). Det enklaste sättet att konfigurera ditt nätverk är att köra det nya scriptet <c>net-setup</c>. </p>
        <pre caption="Scriptet net-setup">
# <c>net-setup eth0</c>
		</pre>
        <p>Om du föredrar det kan du självklart konfigurera ditt nätverk manuellt. </p>
      </body>
    </section>
    <section>
      <title>Manuell DHCP-konfiguration</title>
      <body>
        <p>Nätverkskonfiguration med DHCP är enkelt. Om din ISP inte använder DHCP kan du hoppa 
ner till delen om statisk nätverkskonfiguration.</p>
        <pre caption="Nätverkskonfiguration med DHCP">
# <c>dhcpcd eth0</c> 
		</pre>
        <note>Vissa ISPs kräver att du anger ett "hostname". För att göra det skickar du med 
växeln <c>-h myhostname</c> till kommandot dhcpcd här ovanför.
		</note>
        <p>Om du får <i>dhcpConfig</i> varningar behöver du inte få panik; det är sannolikt
        bara kosmetiska felmeddelanden.  Hoppa ned till testningen av nätverket här nedanför.</p>
      </body>
    </section>
    <section>
      <title>Manuell statisk konfiguration</title>
      <body>
        <p>Vi måste få ett fungerande nätverk så att vi kan ladda ner källkoden till byggandet av systemet 
och dessutom behöver vi det nödvändiga "localhost"-gränssnittet. Skriv in följande 
kommandon och byt ut $IFACE med din ethernet-enhet (vanligtvis <c>eth0</c>), $IPNUM med din 
ip-adress, $BCAST med din broadcast-adress och $NMASK med din nätverksmask 
(netmask). För kommandot <c>route</c> ersätter du $GTWAY med din gateway.
		</p>
        <pre caption="Statisk nätverkskonfiguration">
# <c>ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</c>
# <c>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1</c>
		</pre>
        <p>Nu är det dags att skapa filen <path>/etc/resolv.conf</path> så att namnupplösningen (hitta web/ftp-siter på 
namnet snarare än på ip-adresserna) fungerar.</p>
        <p>Här är ett exempel att följa när du skapar din /etc/resolv.conf: </p>
        <pre caption="Exempel för /etc/resolv.conf">
domain mindomän.com
nameserver 10.0.0.1
nameserver 10.0.0.2
		</pre>
        <p>Ersätt <c>10.0.0.1</c> och <c>10.0.0.2</c> med ip-adresserna till din primära respektive sekundära dns-
server.</p>
      </body>
    </section>
    <section>
      <title>Proxykonfiguration</title>
      <body>
        <p>Om du sitter bakom en proxyserver måste du konfigurera för detta innan du fortsätter. Vi ska 
exportera några variabler för att konfigurera din proxy.
		</p>
        <pre caption="Setting a Proxy">
# <c>export http_proxy="machine.company.com:1234" </c>
# <c>export ftp_proxy="$http_proxy" </c>
# <c>export RSYNC_PROXY="$http_proxy" </c>
		</pre>
      </body>
    </section>
    <section>
      <title>Testa nätverket</title>
      <body>
        <p>Nu när ditt nätverk är konfigurerat så borde kommandot <c>/sbin/ifconfig -a</c> visa att ditt 
nätverkskort fungerar (kolla efter <e>UP</e> och <e>RUNNING</e> i texten). </p>
        <pre caption="/sbin/ifconfig för ett fungerande NIC">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
		</pre>
        <p>Du vill kanske också testa att pinga din ISPs DNS-server (finns i <path>/etc/resolv.conf</path>), och en 
valfri hemsida, för att vara säker på att dina paket når ut på nätet, namnupplösningen fungerar, 
etc.
		</p>
        <pre caption="Mera testande">
# <c>ping www.någon_hemsida.com </c>
		</pre>
      </body>
    </section>
    <section>
      <title>Nätverket fungerar!</title>
      <body>
        <p>Nätverket borde nu vara konfigurerat och användbart. Du borde kunna använda <c>ssh</c>, <c>scp</c>, <c>lynx</c>, 
<c>irssi</c> och <c>wget</c> för att ansluta till andra maskiner på ditt lokala nätverk eller på Internet.</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Konfigurera partitioner</title>
    <section>
      <body>
        <p>Nu när kärnan kan se nätverkskortet och dina disk-controllers är det dags att ordna partitioner åt 
Gentoo Linux.
				</p>
        <p>Här följer en snabb överblick av standardutseendet för partitionerna i Gentoo Linux. Vi ska 
skapa minst tre stycken partitioner: en swap-partition, en root-partition (för att hushålla själva 
systemet), och en speciell boot-partition. Boot-partitionen är till för att lagra information åt 
din bootloader, GRUB eller LILO, samt din kärna(or). Detta ger oss en säker plats där vi kan 
lagra allt som har med uppstarten att göra. Under normal användning borde din boot-partition 
förbli <e>omonterad</e>. Detta hindrar din kärna från att förstöras ( på grund av korruption i 
filsystemet) i en eventuell systemkrash, och förhindrar kycklingen-och-ägget-problemet där 
GRUB inte kan läsa in din kärna (eftersom ditt filsystem är korrupt) och du inte kan reparera 
ditt filsystem (eftersom du inte kan starta datorn!)
				</p>
        <p>Nu fortsätter vi till de olika filsystemen. För tillfället har du fem stycken olika filsystem att 
välja mellan: XFS, ext2, ext3 (journalförande), jfs och ReiserFS. Ext2 är det gamla sanna 
och beprövade filsystemet för Linux men har ingen journalföring. Ext3 är den nya versionen 
av ext2 med både journalföring av metadata och ordnad skrivning av data (ordered data 
writes) vilket effektivt medför journalföring av data också. ReiserFS är ett B-trädsbaserat filsystem som har väldigt bra prestanda när det gäller hantering av små filer, och har 
mycket högre prestanda än både ext2 och ext3 vid hantering av just små filer (mindre än 4k), 
ofta upp till 10-15 gånger snabbare. ReiserFS skalar också väldigt bra och har journalföring av 
metadata. Från och med kärna 2.4.18+ är ReiserFS stabilt och rekommenderas starkt. XFS är 
ett filsystem med journalföring av metadata som stöds fullt ut av Gentoo Linux genom kärnan 
<path>xfs-sources</path> men rekommenderas vanligtvis inte eftersom det har en tendens att förlora 
nyskriven data vid systemkrasher. Till sist har vi IBMs egna högpresterande journalförande 
filsystem, som vi varken kan ge en positiv eller negativ kommentar till. 
</p>
        <p>Om du vill använda det mest standardiserade filsystemet så använd ext2. Om du vill använda 
det kraftigast journalförande filsystemet så är ext3 systemet för dig. Om du vill använda ett 
högpresterande filsystem med journalföring så rekommenderas ReiserFS; både ext3 och 
ReiserFS är mogna och förfinade filsystem. Här följer våra grundläggande rekommendationer 
angående partitionsstorlek och partitionstyp:
				</p>
        <table>
          <tr>
            <th>Partition</th>
            <th>Storlek</th>
            <th>Typ</th>
            <th>Exempelenhet</th>
          </tr>
          <tr>
            <ti>Boot-partition, innehåller din linuxkärna(or) och information om uppstart.</ti>
            <ti>100 Megabyte</ti>
            <ti>Ext2/3 rekommenderas (lättast); Om ReiserFS så montera med <c>-o notail</c></ti>
            <ti>/dev/hda1</ti>
          </tr>
          <tr>
            <ti>Swap-partition, inte längre 128MB-gräns.</ti>
            <ti>Generellt sett, om du inte kör en server, kan swap-utrymmet vara ganska flexibelt. Kolla i tabellen nedanför om du vill ha några
            lösa riktlinjer vad gäller swap-utrymme.</ti>
            <ti>Linux swap</ti>
            <ti>/dev/hda2</ti>
          </tr>
          <tr>
            <ti>Root-partition, innehåller huvudfilsystemet (/usr, /home, etc.)</ti>
            <ti>&gt;=1.5 Gigabytes</ti>
            <ti>ReiserFS, ext3 rekommenderas. Ext2 är ok.</ti>
            <ti>/dev/hda3</ti>
          </tr>
        </table>

	<table>
	<tr>
	<th>Fysiskt minne</th>
	<th>Storlek på swap-utrymme</th>
	</tr>
	<tr>
	<ti>0-48MB RAM</ti>
	<ti>048-064MB RAM</ti>
	<ti>064MB-128MB RAM</ti>
	<ti>128-256MB RAM</ti>
	<ti>256-512MB RAM</ti>
	</tr>
	<tr>
	<ti>720MB</ti>
	<ti>702MB</ti>
	<ti>640MB</ti>
	<ti>256MB</ti>
	</tr>
	</table>
		
        <p>Innan vi skapar filsystemen kan det vara en bra idé att initialisera början på hårddisken med 
hjälp av programmet <c>dd</c>. Genom att göra detta försäkrar vi oss om att vårt nya filsystem inte 
felidentifieras av Linuxs monteringskod. Du gör detta på följande vis:	
			</p>
        <pre caption="Initialisera de första 1024 sektorerna av HDn">
# <c>dd if=/dev/zero of=/dev/hdxy bs=1K count=1</c>
<comment>Ersätt /dev/hdxy med enheten du vill "rensa"</comment>
			</pre>
	<warn>Ovanstående kommando kommer att förstöra all data på <path>/dev/hdxy</path>. Var 
försiktig och se efter en extra gång att det är rätt partition du angivit. Om du gör ett 
misstag så kommer det resultera i förlust av data.
	</warn>
        <p>Nu är det dags att skapa dina partitioner med hjälp av programmet <c>fdisk</c>. Din partition skall 
vara av typen 82 om det är swap och av typen 83 för reguljära filsystem (oavsett om det är ReiserFS, 
ext2/3 eller annat). </p>
        <note><c>cfdisk</c> är inkluderat på install-cdn och det är <i>betydligt</i> lättare att använda än <c>fdisk</c>.
För att köra <c>cfdisk</c> är det bara att skriva <c>cfdisk</c>. Som standard kommer cfdisk att använda 
<b>/dev/hda</b>. Om /dev/hda inte är den hårddisk du vill partitionera så skickar du med en annan 
enhet som extra parameter. Till exempel: <c>cfdisk /dev/hde</c>.</note>
        <note>Om <c>fdisk</c> eller <c>cfdisk</c> instruerar dig att starta om din dator så rekommenderar vi att 
du gör detta för att detektera nya partitioner.</note>
        <note>Om du använder RAID så kommer dina partitioner att se lite annorlunda ut. Du 
kommer att ha dina partitioner så här: <path>/dev/ataraid/discX/partY</path> där X är den array du har 
gjort. Så om du bara gjort en array heter den disc0. Y är numret på partitionen precis som i 
<path>/dev/hdaY</path>.</note>
        <p>När du väl har skapat dina partitioner så är det dags att förbereda filsystemen som skall 
användas till att lagra vår data. Gör i ordning swap-partitionen så här:</p>
        <pre caption="Förbereda swap-partitionen">
# <c>mkswap /dev/hda2</c>
			</pre>
        <p>Du kan använda kommandot <c>mke2fs</c> för att skapa ext2-filsystem.</p>
        <pre caption="Skapa ett ext2-filsystem">
# <i>mke2fs /dev/hda1</i>
			</pre>
        <p>För att skapa XFS-filsystem använder du kommandot <c>mkfs.xfs</c>.</p>
        <pre caption="Skapa ett XFS-filsystem">
# <c>mkfs.xfs /dev/hda3</c>
			</pre>
        <note> Du vill förmodligen skicka med lite extra växlar till kommandot <c>mkfs.xfs</c>: 
<c>-d agcount=3 -l size=32m</c>. Växeln <c>-d agcount=3</c> minskar antalet allokationsgrupper. XFS 
kräver åtminstone 1 allokationsgrupp per 4GB på din partition. Så på en 20GB 
stor partition måste du har minst 5 stycken allokationgrupper. Växeln <c>-l size=32m</c> ökar 
storleken på journalen till 32mb och ökar på så vis prestandan.
			</note>
        <warn>Om du installerar en XFS-partition där det tidigare varit en ReiserFS-
partition kan monteringar av partitionen misslyckas om du inte anger partitionstyp 
vid monteringen, <c>mount -t xfs</c>. Lösningen är att nollställa partitionen innan du 
skapar XFS-filsystemet: <c>dd if=/dev/zero of=/dev/hd<comment>x</comment> bs=1k</c>. 
			</warn>
        <p>Om du vill använda ext3 så skapar du ext3-filsystem med kommandot <c>mke2fs -j</c>.</p>
        <pre caption="Skapa ett ext3-filsystem">
# <c>mke2fs -j /dev/hda3</c>
			</pre>
        <note>Du kan hitta mer information gällande körning av ext3 under Linux 2.4 på 
<uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>
			</note>
        <p>För att skapa ReiserFS-filsystem använder du kommandot <c>mkreiserfs</c>.</p>
        <pre caption="Skapa ett ReiserFS-filsystem">
# <c>mkreiserfs /dev/hda3</c>
			</pre>

	<p>För att skapa JFS-filsystem använder du kommandot <c>mkfs.jfs</c>.</p>
	<pre caption="Skapa ett JFS-filsystem">
# <c>mkfs.jfs /dev/hda3</c>
	</pre>
	
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Montera partitionerna</title>
    <section>
      <body>
        <p>Nu skall vi aktivera vår nya swap-partition eftersom vi senare behöver det extra virtuella 
minne den erbjuder:
			</p>
        <pre caption="Aktivera swap-utrymme">
# <c>swapon /dev/hda2</c>
			</pre>
        <p>Nästa steg är att skapa mapparna <path>/mnt/gentoo</path> och <path>/mnt/gentoo/boot</path> och montera våra 
partitioner i dessa.
</p>
        <pre caption="Skapa mappar och montera partitioner">
# <c>mkdir /mnt/gentoo</c>
# <c>mount /dev/hda3 /mnt/gentoo</c>
# <c>mkdir /mnt/gentoo/boot</c>
# <c>mount /dev/hda1 /mnt/gentoo/boot</c>
			</pre>
        <p>
			Om använder en separat <path>/usr</path> eller <path>/var</path> så skall dessa monteras i 
			<path>/mnt/gentoo/usr</path> respektive <path>/mnt/gentoo/var</path>.
			</p>
                <impo>Om din <e>boot-partition</e> (den som kärnan ligger på) använder ReiserFS måste 
du montera den med växeln <c>-o notail</c> så att GRUB kan installeras ordentligt. Se även 
till att du sedan lägger till <c>notail</c> i <path>/etc/fstab</path> också. Men dit kommer vi senare.
			</impo>
        <impo>Om du har problem med att montera din boot-partition och du använder 
ext2 på den, prova kommandot <c>mount /dev/hXX /mnt/gentoo/boot -t ext2</c> </impo>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Få tag på din önskade 'fas X-tarboll'</title>
    <section>
      <body>
        <p>Om du vill börja med en fas 1-tarboll så det bara att köra; du hittar fas 1-tarbollen i 
<path>/mnt/cdrom/gentoo/</path>. Om du å andra sidan föredrar att starta från en fas 2 eller 3-tarboll som 
redan är optimerad för din arkitektur så kan du ladda ned den (till <path>/mnt/gentoo</path> är enklast) 
från en av Gentoos speglar. </p>

        <pre caption="Ladda ner fas-tarbollen">
# <c>cd /mnt/gentoo</c>
<comment>Använd lynx till att få tag på adressen till tarbollen:</comment>
# <c>lynx http://www.ibiblio.org/pub/Linux/distributions/gentoo/releases/1.4_rc2/x86/</c>
<comment>Använd knapparna <c>uppåt</c> och <c>nedåt</c> (eller <c>TAB</c>) för att gå till rätt katalog.
Markera den fas-tarboll du vill ladda ned.
Tryck <c>d</c> för att börja ladda ner.
Spara filen och stäng ner lynx.

<b>Eller</b> så kan du använda wget från konsollen:</comment>
# <c>wget <comment>address_till_tarbollen_här.</comment></c>
			</pre>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Packa upp fas-tarbollen</title>
    <section>
      <body>
        <p>Nu är det dags att packa upp din nedladdade tarboll till <path>/mnt/gentoo</path>. Sen skall vi "<c>chroot</c>:a"  
till vår Gentoo Linux installation för att "logga in i" vårt nya Gentoo Linux-system. 
			</p>
        <impo>Se till att du använder växeln <c>p</c> med <c>tar</c>. Om du glömmer att göra det kommer vissa filer inte att behålla
              sina korrekta rättigheter.</impo>
        <p>Om du bygger allting från scratch så använder <path>stage1-ix86-1.4_beta.tbz2</path>-tarbollen. Om 
du använder en av de större varianterna av vår CD så har du även tillgång till fas 2 och fas 
3-tarbollar. Fas 2 och fas 3-tarbollarna sparar en massa tid åt dig men du går istället miste 
om konfigurationsmöjligheter (vi har redan valt optimeringar för kompilatorn och USE-
variabler åt dig.)  
			</p>
        <pre caption="Packa upp fas-tarbollen">
# <c>cd /mnt/gentoo</c>
# <c>tar -xvjpf /mnt/cdrom/gentoo/stage?-*.tbz2</c>
# <c>mount -o bind /proc /mnt/gentoo/proc</c>

<!--# <c>mount -o bind /dev /mnt/gentoo/dev</c>
<comment>Växeln /dev bind.mount krävs iblands för att perl skall kompileras felfritt.</comment>
-->
# <c>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</c>
			</pre>
<p>Om du tänker använda GRP så är detta ett bra tillfälle att köra följande kommandon:
</p>

<pre caption="Gör dig redo för GRP">
# <c>mkdir /mnt/gentoo/GRP</c>
# <c>mount -o bind /mnt/cdrom/gentoo/packages /mnt/gentoo/GRP</c>
</pre>
			
        <pre caption="Chroot">
# <c>chroot /mnt/gentoo /bin/bash</c>
# <c>env-update</c>
Regenerating /etc/ld.so.cache...
# <c>source /etc/profile</c>
<comment>Kommandot ovanför pekar ditt skal till nya sökvägar och uppdaterade binärer </comment>
			</pre>
        <p>Efter att du kört ovanstående kommandon så är du inne i din nya Gentoo Linux-miljö.
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Synkronisera Portage</title>
    <section>
      <body>
        <p>Nu måste du köra <c>emerge sync</c>. Det ser till att du har den senaste versionen av 
Portageträdet.</p>
        <pre caption="Synkronisera Portage med rsync">
# <c>emerge sync</c>
			</pre>
        <p>Portageträdet kommer att laddas ned och sparas i <path>/usr/portage</path>; det tar upp ungefär 90MB i 
utrymme utan tarbollar.
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Optimera Gentoo (make.conf)</title>
    <section>
      <body>
        <p>Nu när vi har en fungerande kopia av Portageträdet måste alla fas 1-användare "bootstrapa" 
sitt Gentoo Linux-system på följande vis. Editera för filen <path>/etc/make.conf</path>. I denna filen ställer 
du dina <c>USE</c>-flaggor, som specificerar vilken funktionalitet du vill ha inbyggd i paketen; 
vanligtvis så duger standardinställningarna (en <e>empty</e> eller odefinierad <c>USE</c>-variabel) alldeles 
utmärkt. Mer information om <c>USE</c>-flaggorna hittar du <uri link="http://www.gentoo.org/doc/en/use-howto.xml">här</uri>.
En fullständig lista över <c>USE</c>-flaggorna hittar du <uri link="http://www.gentoo.org/dyn/use-index.xml">här</uri>.
			</p>
        <p>Du borde också ställa in <c>CHOST</c>, <c>CFLAGS</c> och <c>CXXFLAGS</c> så att det passar ditt system 
(kommenterade exempel hittas längre ned i filen.) Din bästa vän är <path>man gcc</path> när det gäller 
information om vilka <c>CFLAGS</c> och <c>CXXFLAGS</c> som finns tillgängliga. Sök efter 'Optimization'.

			</p>
        <p>Om det är nödvändigt kan du här också ställa in proxyn om du sitter bakom en brandvägg.
			</p>
        <pre caption="Konfigurera make.conf">
# <c>nano -w /etc/make.conf</c> <comment>(Modifiera dessa inställningar)</comment>
			</pre>
        <note>
			Personer som vill tweaka sin installation kan ta en titt på filen <path>/etc/make.globals</path>.
Den här filen har hand om gentoos standardinställningar och bör aldrig röras. Om man inte 
är nöjd med standardinställningarna så skall man istället ändra i <path>/etc/make.conf</path>, eftersom 
inställningar i <path>make.conf</path> <comment>har högre prioritet</comment> än motsvarande inställningar i <path>make.globals</path>.
Om du är intresserad av att tweaka USE-inställningarna så kan du ta dig en titt i 
<path>/etc/make.profile/make.defaults</path>. Om du vill inaktivera någon inställning i den filen så lägg till 
<c>USE="-foo"</c> i /etc/make.conf (för att inaktivera <c>foo</c>.)
			</note>
      </body>
    </section>
    <section>
    <title>Välj en Portagespegel</title>
    <body>
    <p>Innan du laddar ner och installerar det mesta av ditt system kan det vara fördelaktigt att välja en 
Gentoospegel. Genom att göra detta får du högre hastighet på överföringarna och du minskar dessutom belastningen 
på vår generösa värd, <uri link="http://www.ibiblio.org">ibiblio.org</uri>.
    </p>

    <pre caption="Emerge mirrorselect">
# <c>emerge mirrorselect</c>
<codenote>Kör helt enkelt <i>mirrorselect</i> efter att du har installerat det eftersom det använder ett fint GUI.</codenote>
# <c>mirrorselect</c>
    </pre>
    </body>
    </section>
        
  </chapter>
  <chapter>
    <title>Starta från fas 1</title>
    <section>
      <body>
        <p>Fas 1-tarbollen erbjuder enorma konfigurationsmöjligheter. Om du har valt den här tarbollen 
så är du troligen ute efter ett überoptimerat system. Se till att ha kul, för optimering är 
precis vad Gentoo Linux handlar om.
		</p>
        <p>Nu är det dags att sätta igång med "bootstrap"-
processen. Det tar ungefär 2 timmar på min 1200Mhz AMD Athlon. Under den tiden kommer 
allt förberedas för kompilering av resten av systemet. GNU-kompilatorn och GNU C-biblioteket 
kommer att byggas. Detta är tidskrävande kompileringar och tar upp det mesta av tiden.
			</p>
        <pre caption="Bootstrap">
# <c>cd /usr/portage</c>
# <c>scripts/bootstrap.sh</c>
			</pre>
        <p>Detta startar "bootstrap"-processen.
			</p>
        <note>
			Portage använder som standard <c>/var/tmp</c> när det bygger paket, ofta används flera 
hundra megabytes temporärt utrymme. Om du vill ändra denna katalogen så sätter du 
PORTAGE_TMPDIR <e>innan</e> du startar "bootstrappningen".
			</note>
        <pre caption="Ändra Portages temp-katalog">
# <c>export PORTAGE_TMPDIR="/annan_katalog/tmp"</c>
			</pre>
        <p><c>bootstrap.sh</c> kommer att bygga <c>binutils</c>, <c>gcc</c>, <c>gettext</c> och<c>glibc</c>, bygger 
om <c>binutils</c>, <c>gcc</c>, ochd <c>gettext</c> efter <c>glibc</c>. Denna process kommer att ta ett bra tag. 
Ha en trevlig tupplur. När det väl är klart kommer ditt system vara i fas 2, 
vilket betyder att du kan fortsätta till instruktionerna för fas 2.
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Starta från fas 2</title>
    <section>
      <body>
        <p>Fas 2-tarbollen har redan gjort "bootstrapen" åt dig. Allt du behöver göra är att installera 
resten av systemet.
			</p>
        <note>
			Om du inte har gjort det så editera <path>/etc/make.conf</path> så att du är nöjd
			</note>
        <pre caption="Installera resten av systemet">
# <c>export CONFIG_PROTECT="-*"</c>
# <c>emerge -p system</c>
	<comment>[listar paketen som skall installeras]</comment>
# <c>emerge system</c>
			</pre>
        <note><c>export CONFIG_PROTECT="-*"</c> gör så att eventuella nya script som installeras i <path>/etc</path> 
skriver over gamla script (lagras i <path>sys-apps/baselayout</path>), genom att hoppa över Portages nya 
"config file management support". Skriv <c>emerge --help config</c> för att få mer information.</note>
        <p>Det kommer att ta ett bra tag att bygga hela bassystemet. Din belöning är att det kommer 
vara genomgående optimerat för just ditt system. Nackdelen är att du måste hitta på något 
att göra under en tid framöver. Författaren rekommenderar "Star Wars - Super Bombad 
Racing" till PS2. 
			</p>
			<p>När processen är klar är ditt system i fas 3. Du har nu några alternativ. Du kan fortsätta med 
instruktionerna för fas 3. Genom att göra det ser du till att ditt system är "up to date" med det 
som finns i Portageträdet. Det är inte nödvändigt men starkt rekommenderat. Om du väljer 
att inte fortsätta med instruktionerna för fas 3 så kan du fortsätta till delen som behandlar 
installation med GRP. Om du inte vill använda GRP så kan du hoppa till <uri link="http://www.gentoo.org/doc/se/gentoo-x86-install.xml#doc_chp16">Kapitel 16: Slutgiltig konfiguration</uri>. 
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Starta från fas 3</title>
    <section>
      <body>
        <p>Fas 3-tarbollen är redan konfigurerad för ditt system. Det är inte mycket att göra i denna fas, 
men det är en bra idé att uppdatera systemet då du får de nyaste paketen. </p>
        <note>Om du inte har editerat <path>/etc/make.conf</path> än så kan det vara en bra idé att göra det nu. </note>
        <pre caption="Uppdatera systemet">
	# <c>emerge sync</c>
	# <c>emerge -up world</c>
	<comment>listar <i>paketen</i> som skall installeras</comment>
	# <c>emerge -u world</c>
	</pre>
	<p>När du väl har avslutat detta steg så har du några alternativ angående hur du skall fortsätta. 
Om du skall använda GRP så kan du hoppa ned till GRP-sektionen. Om du inte tänker 
använda GRP kan du hoppa ned till <uri link="http://www.gentoo.org/doc/se/gentoo-x86-install.xml#doc_chp16">Kapitel 16: Slutgiltig konfiguration</uri>.
	</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Använda GRP</title>
    <section>
      <body>
        <p>Du kan utnyttja vissa färdigbyggda GRP-paket om du vill undvika kompilering av en del 
stora populära program. För tillfället erbjuder vi allt du behöver för <c>openoffice-bin</c>,
<c>GNOME</c>, <c>KDE</c> och <c>xfree</c>. 
</p>
<p>Först skall du <c>cd</c>:a till katalogen som paketen ligger i. Vi har redan monterat den katalogen 
under <path>/GRP</path>. I den katalogen hittar du scriptet <c>grp-install.sh</c>, en katalog med namnet <i>All</i> som 
innehåller alla binärpaketen, och en lista över alla tillgängliga GRP-paket. För att installera 
något/alla av dessa paket så gör du så här: </p>
        <pre caption="Använda GRP">
# <c>cd /GRP</c>
# <c>sh grp-install.sh &lt;list of package lists&gt;</c>
<comment>där &lt;lista av paketlistor&gt; kan vara någon av *-list.txt-filerna som ligger i samma katalog.</comment>
</pre>
        <p><c>grp-install.sh</c> kan köras flera gånger utan att det ersätter befintliga installationer. Du kan köra 
<c>sh grp-install.sh</c> för lite extra hjälp om du behöver det.
</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig konfiguration: Tidszon</title>
    <section>
      <body>
        <p>När du väl har kommit hit så borde du ha ett system som är redo för slutgiltig konfiguration.
Vi börjar med att sätta din tidszon. Genom att sätta tidszonen innan vi bygger kärnan 
försäkrar vi oss om att användarna får vettig output från <c>uname -a</c>.
			</p>
        <p>Kolla efter din tidszon (eller GMT om du använder Greenwich Mean Time) i 
<path>/usr/share/zoneinfo</path>. Gör sedan en symbolisk länk genom att skriva:
			</p>
        <pre caption="Skapa en symbolisk länk för tidszon">
# <c>ln -sf /usr/share/zoneinfo/sökväg/till/tidszonsfil /etc/localtime</c>
			</pre>
        <p>Du vill förmodligen också ta en titt i <path>/etc/rc.conf</path> och göra dig säker på att dina tidzonsinställningar 
är korrekta.
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig konfiguration: Kärna och systemlogg</title>
    <section>
      <body>
        <note>
			Om du inte har gjort det så editera <path>/etc/make.conf</path> så att du är nöjd.
			</note>
        <p>Nu skall du ta ner källkoden för linuxkärnan. Detta är de ebuilds vi erbjuder för tillfället:
			</p>
        <table>
          <tr>
            <th>ebuild</th>
            <th>beskrivning</th>
          </tr>
          <tr>
            <ti>
              <path>gentoo-sources</path>
            </ti>
            <ti>Vår egen prestanda och funktions-utökade kärna. Stöder inte XFS.</ti>
          </tr>
          <tr>
            <ti>
              <path>xfs-sources</path>
            </ti>
            <ti>Kärna som är kompatibel med XFS.</ti>
          </tr>
          <tr>
            <ti>
              <path>openmosix-sources</path>
            </ti>
            <ti>En kärna som är patchad med stöd för GPL <uri link="http://www.openmosix.com">openMosix</uri> belastnings-
balancering/kluster-teknik.</ti>
          </tr>
          <tr>
            <ti>
              <path>usermode-sources</path>
            </ti>
            <ti>En kärna som är patchad med stöd för "user-mode linux". ("Linux i Linux-teknologi)</ti>
          </tr>
          <tr>
            <ti>
              <path>vanilla-sources</path>
            </ti>
            <ti>Den vanliga kärnan som man får från kernel.org.</ti>
          </tr>
        </table>
        <warn>
			Om du konfigurerar din egen kärna så var försiktig med <i>grsecurity</i>-
alternativet. Om du sätter den för aggressivt så är det möjligt att vissa program 
(som X) inte fungerar som de skall. Om du tvekar så är det bättre att låta det vara.
			</warn>
        <p>Välj en kärna och gör så här:</p>
        <pre caption="Linuxkärnan">
# <c>emerge sys-kernel/gentoo-sources</c>
			</pre>
        <p>När du väl har källkoden tillgänglig så är det dags att kompilera din egen kärna.
			</p>
		<p>Lägg märke till att <path>/usr/src/linux</path> är en symlänk till din aktuella källkod, och skapas 
automatiskt av Portage när du emergar den. Om du har flera versioner av källkoden så är det 
viktigt att du pekar <path>/usr/src/linux</path> på den du vill använda innan vi fortsätter.
		</p>
        <pre caption="Kompilera Linuxkärnan">
# <c>cd /usr/src/linux</c>
# <c>source /etc/profile</c>
<comment>Ännu en gång, detta uppdaterar dina sökvägar. Om du får ett felmeddelande som säger att 
den inte hittar gcc så är detta vad du måste göra. </comment>
# <c>make menuconfig</c>
# <c>make dep &amp;&amp; make clean bzImage modules modules_install</c>
# <c>mv /boot/bzImage /boot/bzImage.orig</c>
<comment>[om bzImage redan finns]</comment>
# <c>cp /usr/src/linux/arch/i386/boot/bzImage /boot</c>
			</pre>
        <warn>För att din kärna skall vara funktionsduglig är det vissa alternativ som du 
måste se till att dom finns med i kärnan - det betyder att dom skall vara <i>inkompilerade och 
inte kompilerade som moduler</i>. Du behöver 
<i>"Code maturity level options --&gt; Prompt for development and/or incomplete code/drivers"</i> 
för att kunna se flera av dessa 
alternativ. Under "File systems" ser du till att aktivera <i>"/dev" file system support</i> 
(du behöver <e>inte</e> "/dev/pts file system support"). Du behöver även <i>"Virtual Memory Filesystem"</i>. 
Sedan ser du till att aktivera "ReiserFS" om du kör det, aktivera "Ext3" 
om du kör ext3, "SIG XFS filesystem support" om du kör XFS etc. Det är alltid en bra 
idé att lämna ext2 aktiverat även om du inte kör det för tillfället. 
Förutom det vill nog även de flesta med en IDE-hårddisk aktivera "USE DMA by 
default" annars presterar din hårddisk rätt dåligt. Och glöm heller inte "IDE disk"-
support heller annars kommer inte din kärna kunna använda dina IDE-hårddiskar.
			</warn>
        <p>Om du använder hårdvaru-RAID så måste du aktivera ett par saker till i kärnan:
För Highpoint RAID-controllers väljer du "hpt366 chipset support" för IDE RAID-controllers 
och Highpoint 370 mjukvaru-RAID. För Promise RAID-controllers väljer du "PROMISE 
PDC202{46|62|65|67|68|69|70} support" support för IDE RAID-controllers och support för 
Promise mjukvaru-RAID (Fasttrak(tm)).
			</p>
        <p>Om du använder PPPoE för att ansluta till Internet så behöver du följande i kärnan (inbyggt 
eller som moduler); "PPP (point-to-point protocol) support", "PPP support for async serial 
ports", "PPP support for syn tty ports". De båda kompressionsalternativen kommer inte att 
skada men är inte direkt nödvändiga. Samma sak gäller "PPP over Ethernet" som endast kan 
användas av <i>rp-pppoe</i> när det är konfigurerat att köra "kernel mode PPPoE".
			</p>
        <p>Om du har en IDE-cdbrännare måste du aktivera SCSI-emulering i kärnan. Aktivera 
"ATA/IDE/MFM/RLL support" --> "IDE, ATA and ATAPI Block devices" --> "SCSI emulation 
support" (jag gör det vanligtvis till modul), sen under "SCSI support" aktiverar du "SCSI 
SUPPORT", "SCSI CD-ROM support" och "SCSI generic support" (även dessa kompilerar jag 
vanligvis som moduler). Om du också väljer att kompilera dem som moduler så kör: 
<c>echo -e "ide-scsi\nsg\nsr_mod" &gt;&gt; /etc/modules.autoload</c> så laddas dom automatiskt vid 
uppstart.
			</p>
        <note>
			För er som föredrar det så går det nu att installera Gentoo Linux med en 2.2-kärna.
Tyvärr så innebär det att du förlorar vissa funktioner som finns i 2.4-kärnan. Exempelvis XFS, 
tmpfs, iptables och mycket mer även om 2.2-kärnan kan patchas så den får support för 
ReiserFS och devfs. Gentoo Linux uppstartsscript kräver stöd för antingen tmpfs eller ramdisk
i kärnan, så 2.2 användare måste se till att stöd för ramdisk är inkompilerat i kärnan och inte 
som en modul. Det är <comment>nödvändigt</comment> att lägga till <e>gentoo=notmpfs</e> i <path>/boot/grub/grub.conf</path> om du 
kör 2.2 så att ramdisk används istället för tmpfs. Om du väljer att inte använda devfs så skall 
du lägga till <e>gentoo=notmpfs,nodevfs</e>.
			</note>
        <p>Din nya kärna (och moduler) är nu installerade. Nu måste du välja vilken systemloggare du 
skall köra. Vi erbjuder sysklogd, som är den traditionella uppsättningen av 
systemloggardaemons. Vi har också msyslog och syslog-ng och även metalog. Avancerade 
användare verkar välja någon av de nyare alternativen gentemot sysklogd eftersom dom är 
snabbare. Om du inte kan bestämma dig så kan du prova på metalog eftersom det verkar 
vara ett populärt alternativ. För att installera ditt val kör du <e>ett</e> av följande alternativ:
			</p>
        <pre caption="Systemlog">
# <c>emerge app-admin/sysklogd</c>
# <c>rc-update add sysklogd default</c>
<comment>eller</comment>
# <c>emerge app-admin/syslog-ng</c>
# <c>rc-update add syslog-ng default</c>
<comment>eller</comment>
# <c>emerge app-admin/metalog</c>
# <c>rc-update add metalog default</c>
<comment>eller</comment>
# <c>emerge app-admin/msyslog</c>
# <c>rc-update add msyslog default</c>
			</pre>
        <warn>
			Om du väljer syslog-ng måste du skapa <path>/etc/syslog-ng/syslog-ng.conf</path>. 
Kolla i <path>/etc/syslog-ng</path> efter en exempelfil.
			</warn>
        <impo>
			Metalog skriver loggarna till disken i stora block, så meddelanden skrivs inte på 
direkten i loggfilerna. Om du är i färd med att debugga en daemon så är denna 
prestandaökande metod inte direkt hjälpsam. När du kör ditt Gentoo Linux-system kan du 
skicka en USR1-signal till metalog för att temporärt stänga av detta, det betyder att <i>tail -f <path>/var/log/everything/current</path></i> nu fungerar i realtime som väntat. Och en USR2-signal slår på 
bufferfunktionen igen. Om du vill avaktivera det permanent så kan du ändra 
METALOG_OPTS="-B" till METALOG_OPTS="-B -s" i <path>/etc/conf.d/metalog</path>.
			</impo>
        <p>Nu kan du om du vill välja ett cron-paket att använda. Just nu erbjuder vi dcron, fcron och 
vcron. Om du inte vet vilket du skall välja kan du lika gärna använda vcron.
Du installerar dem så här:
			</p>
        <pre caption="Välja en CRON-daemon">
# <c>emerge sys-apps/dcron</c>
# <c>crontab /etc/crontab</c>
<comment>or</comment>
# <c>emerge sys-apps/fcron</c>
# <c>crontab /etc/crontab</c>
<comment>or</comment>
# <c>emerge sys-apps/vcron</c>
<comment>Du behöver inte köra <c>crontab /etc/crontab</c> om du använder vcron. </comment>
<comment>Glöm inte att lägga till din *cron i rätt "init level". </comment>
# <c>rc-update add *cron default </c>
			</pre>
<!--<p>För mer information om hur cron fungerar under Gentoo Linux finner du  
			<uri link="http://lists.gentoo.org/pipermail/gentoo-announce/2002-April/000151.html">här</uri>.</p>-->
        <p>FFör mer information gällande start av program och daemons under uppstart kolla in <uri link="/doc/en/rc-scripts.xml">rc-script-guiden</uri>
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig konfiguration: Installera extra paket</title>
    <section>
      <body>
        <p>Om du behöver rp-pppoe för att ansluta till internet så lägg märke till att det inte är 
installerat ännu. Vi kanske skall passa på att göra det nu. </p>
        <pre caption="IInstallera rp-pppoe">
# <c>USE="-X" emerge rp-pppoe</c>
			</pre>

		<note><i>USE="-X"</i> gör så att pppoe inte installerar sitt gränssnitt för X, vilket är bra, 
eftersom X och alla dess "dependencies" annars också skulle installeras. Du kan alltid 
kompilera om <i>rp-pppoe</i> med stöd för X senare.
		</note>
        <note> Lägg märke till att rp-pppoe nu är installerad men ännu inte konfigurerat. Detta 
måste du göra med <c>adsl-setup</c> när du senare startar ditt Gentoo Linux-system för första 
gången.
			</note>
        <p>Du behöver några extra paket om du använder några extra funktioner som XFS, ReiserFS 
eller LVM. Om du använder XFS rekommender vi att du installerar paketet <c>xfsprogs</c>:
			</p>
        <pre caption="Installera verktyg för filsystemet">
# <c>emerge sys-apps/xfsprogs</c>
<comment>Om du använder ReiserFS borde du installera verktygen för ReiserFS: </comment>
# <c>emerge sys-apps/reiserfsprogs</c>
<comment>Om du använder JFS borde du installera verktygen till JFS:</comment>
# <c>emerge jfsutils</c>
<comment>Om du använder LVM borde du installera paketet <c>lvm-user</c> package: </comment>
# <c>emerge sys-apps/lvm-user</c>
			</pre>
        <p>Om din dator är en bärbar dator och du vill använda dina PCMCIA-kort när du sedan startar 
upp systemet för första gången så måste du installera paketet <i>pcmcia-cs</i>.
			</p>
        <pre caption="Installera PCMCIA-cs">
# <c>emerge sys-apps/pcmcia-cs</c>
			</pre>
        <warn>Du är tvungen att installera om <i>pcmcia-cs</i> efter installationen för att 
PCMCIA skall fungera.
			</warn>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig konfiguration: /etc/fstab</title>
    <section>
      <body>
        <p>Ditt Gentoo Linux-system är snart klart för användning. Allt vi behöver göra nu är att 
konfigurera några få viktiga systemfiler och installera bootloadern GRUB. Den första filen vi 
skall editera är <path>/etc/fstab</path>. Kom ihåg att lägga till alternativet <c>notail</c> för din boot-partition om 
du kör ReiserFS på den. Kom även ihåg att ange <c>ext2</c>, <c>ext3</c> eller <c>reiserfs</c> som filsystem för 
aktuella partitioner.
			</p>
        <p>Editera din <path>/etc/fstab</path> så att den ser ut ungefär som den här under, men ersätt "BOOT", 
"ROOT" och "SWAP" med dom enheter du använder (som <c>hda1</c>, etc.)</p>
        <pre caption="Editera fstab"><comment>
# /etc/fstab: static file system information.
#
# noatime stänger av atime för ökad prestanda (atimes är normalt inte nödvändigt)
# notail ökar prestandan för ReiserFS (med minskad lagringseffektivitet som följd)
# Du kan skippa noatime om du fritt vill kunna byta mellan notail och tail. 

# &lt;fs&gt;           &lt;monteringspunk&gt;   &lt;typ&gt;   &lt;alternativ&gt;          &lt;dump/pass&gt;

# Notering: Om din BOOT-partition är ReiserFS lägg till notail-alternativet till opts.

</comment>
/dev/BOOT           /boot       ext2	 noauto,noatime	 1 2
/dev/ROOT           /           ext3	 noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro       0 0
proc                /proc       proc	 defaults        0 0
			</pre>
        <warn>Lägg märke till att <i>/boot</i> INTE monteras vid uppstart. Detta för att skydda 
datan på <i>/boot</i> från att korrupteras. Om du måste ha tillgång till <i>/boot</i> så montera 
den efter uppstart.
			</warn>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig konfiguration: Lösenord för root</title>
    <section>
      <body>
        <p>Innan du glömmer, ange lösenord för användaren root genom att köra: </p>
        <pre caption="Lösenord för root">
# <c>passwd</c>
	</pre>

	<p>Du borde även göra en ny användare som du kan använda för dagligt bruk. Mer information finns i vår <uri link="http://www.gentoo.org/doc/en/faq.xml">Gentoo FAQ</uri>.
	</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig konfiguration: /etc/hostname</title>
    <section>
      <body>
        <p>Editera den här filen så att den innehåller ditt domännamn på en enkelrad, ex. 
<c>mindator.mindomän.com</c>. 
			</p>
        <pre caption="Konfigurera /etc/hostname">
# <c>echo mindator.mindomän.com &gt; /etc/hostname</c>
			</pre>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig konfiguration: /etc/hosts</title>
    <section>
      <body>
        <p>Den här filen innehåller en lista av ip-adresser och dom datornamn som associeras till dem.
Den används av systemet för att ta reda på ip-adressen till datornamn som kanske inte finns i 
din dns-server. Här följer en mall för filen:
			</p>
        <pre caption="Exempel för /etc/hosts">
127.0.0.1      localhost
<comment># nästa rad innehåller din ip-adress på ditt lokala nätverk och det associerade datornamnet.</comment>
192.168.1.1    mindator.mindomän.com	mindator
			</pre>
        <note>Om ditt nätverk använder DHCP så kan det vara bra att sätta <i>localhost</i> till din 
dators datornamn. Detta kommer att hjälpa GNOME och andra program med deras 
namnupplösning.
			</note>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig nätverkskonfiguration</title>
    <section>
      <body>
        <p>Lägg till namnet på alla moduler som är nödvändiga för att ditt system skall fungera i filen
<path>/etc/modules.autoload</path> (du kan lägga till eventuella alternativ på samma rad.) När Gentoo
Linux startar så laddas dessa moduler då automatiskt. Om du kompilerade drivrutinen för ditt
nätverkskort som modul så är det viktigt att du lägger till den här:
			</p>
        <pre caption="/etc/modules.autoload"><comment>Detta förutsätter att du använder ett kort från 3com. 
		Kolla i <path>/lib/modules/`uname -r`/kernel/drivers/net</path> efter en modul till ditt kort.</comment>
3c59x
			</pre>
        <p>Editera <path>/etc/conf.d/net</path> så att ditt nätverk sedan fungerar när du startar upp ditt system för 
första gången: </p>
        <pre caption="Nätverkskonfiguration">
# <c>nano -w /etc/conf.d/net</c>
# <c>rc-update add net.eth0 default</c>
			</pre>
        <p>Om du har flera nätverkskort så måste du skapa extra <path>net.eth<comment>x</comment></path>-script 
        för dessa (<comment>x</comment> = 1, 2, ...): </p>
        <pre caption="Flera nätverkskort">
# <c>cd /etc/init.d</c>
# <c>cp net.eth0 net.eth<comment>x</comment></c>
# <c>rc-update add net.eth<comment>x</comment> default</c>
			</pre>
        <p>Om du har ett PCMCIA-kort installerat så ta en snabb titt i <path>/etc/init.d/pcmcia</path> och se till att allt 
ser ut att stämma för ditt system. Lägg sedan till denna raden längst upp i 
<path>/etc/init.d/net.ethx</path>:
			</p>
        <pre caption="PCMCIA i /etc/init.d/net.ethx">
depend() {
	need pcmcia
}
			</pre>
        <p>Detta ser till att drivrutinerna för ditt PCMCIA-kort laddas när ditt nätverk startas.
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig konfiguration: Grundläggande inställningar (internationella tangentbordsinställningar)</title>
    <section>
      <body>
        <pre caption="Grundläggande konfiguration">
# <c>nano -w /etc/rc.conf</c>
			</pre>
        <p>Följ anvisningarna i denna filen för att konfigurera dina inställningar. Alla användare vill 
förmodligen se till att alternativet <c>CLOCK</c> är rätt inställt. Om du inte har ett engelskt 
tangentbord så skall du ställa variabeln <c>KEYMAP</c> (kolla i <path>/usr/share/keymaps</path> för att se vilka 
alternativ som är tillgängliga.)

			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig konfiguration: Installera en bootloader</title>
	<section>
	<title>Notes</title>
	<body>
	<p> I sann Gentoo-anda har nu alla användare mer än en bootloader att välja mellan. Genom att 
använda vårat paketsystem finns nu både GRUB och LILO att välja som bootloader.
	</p>
	<p> Kom ihåg att det inte är en nödvändighet att ha båda dessa installerade. I själva verket kan 
det ibland innebära problem, så välja för säkerhets skull bara en.
	</p>
	</body>
	</section>
    <section>
	<title>Konfigurera GRUB</title>
      <body>
        <p>Det viktigaste i att förstå hur GRUB fungerar är att förstå hur GRUB refererar till hårddiskar 
och partitioner. Den partition som i Linux kallas för <path>/dev/hda1</path> kallas för <path>(hd0,0)</path> av GRUB.
Lägg märke till paranteserna runt hd0,0, dessa är nödvändiga. Hårddiskar räknas från noll 
istället för från "a", och partitioner startar från noll istället för från ett. Lägg märke till att med 
hd, så menas det att bara hårddiskar räknas, inga andra ATAPI-IDE-enheter som ex. CD-
ROM-enheter och brännare, samma system gäller även för SCSI-enheter. (Normalt sett får 
dom högre nummer än IDE-enheter utom när BIOS är inställt att starta från en SCSI-enhet.)
Förutsatt att du har en hårddisk på /dev/hda, en CD-ROM-enhet på /dev/hdb, en brännare på 
/dev/hdc och en andra hårddisk på /dev/hdd, och ingen SCSI-enhet, så blir <path>/dev/hdd7</path> istället 
<path>(hd1,6)</path>.

			Det låter krångligt, och lite krångligt är det kanske också, men som du kommer att 
märka så erbjuder GRUB en funktion som automatiskt skriver klart namn på hårddiskar om 
du trycker på TAB, detta kan vara till stor hjälp om du har många hårddiskar och inte har 
riktigt kolla på GRUBs system. Nu när vi har fått in känslan lite så är det äntligen dags att 
installera GRUB.
			</p>
        <p>Det enklaste sättet att installera GRUB på är att helt enkelt skriva <c>grub</c> i ditt "chrootade" 
skal:</p>
        <pre caption="Installera GRUB">
# <c>emerge grub</c>
# <c>grub</c>
			</pre>
        <impo>Om du använder hårdvaru-RAID så kommer detta inte funka just nu. Hoppa 
ner till delen om hur man konfigurerar <path>grub.conf</path>. Efter det så kommer vi slutföra 
installationen av GRUB för RAID-controllers.
			</impo>
        <p>Nu kommer du att mötas av <c>grub&gt;</c>, grub-prompten. Nu behöver du bara skriva de 
kommandon som installerar GRUBs "boot record" på din hårddisk. I min exempelkonfiguration 
vill jag installera GRUBs "boot record" i min hårddisks "MBR" (master boot record) så att det 
första jag ser när jag slår igång datorn är GRUB. I mitt fall är det följande kommandon jag vill 
skriva:
			</p>
        <pre caption="Kommandon för GRUB">
grub&gt; <c>root (hd0,0)</c>
grub&gt; <c>setup (hd0)</c>
<comment>Alternativt om du vill installera GRUB någon annan stans än MBR.</comment>
grub&gt; <c>setup (hd0) (hd0,4) </c>
<codenote>Den andra parametern pekar på boot-partitionen.</codenote>
grub&gt; <c>quit</c>
			</pre>
        <p>Såhär fungerar dessa kommandon. Det första, <c>root ( )</c>, berättar för GRUB vart din boot-
partition ligger (i vårat exempel <path>/dev/hda1</path>, eller <path>(hd0,0)</path> på GRUBs vis.)  Det andra 
kommandot, <c>setup ( )</c>, säger till GRUB var det skall installera sitt "boot record" - det 
konfigureras så att det letar efter sina filer på det ställe som du angav med kommandot 
<c>root	( )</c>. I detta fall vill jag ha GRUB installerat i min hårddisks MBR, så jag enger helt enkelt 
<path>/dev/hda</path> (eller <path>(hd0,0)</path> på GRUBs vis). Om vi hade använt en annan boot-loader och ville 
använda GRUB som sekundär boot-loader skulle vi ha installerat GRUB i ett "boot-record" för 
en specifik partition. Och isåfall skulle jag ha angivit en partition istället för en hel hårddisk.
När vi väl kört detta och GRUB har installerat sig så skriver vi <c>quit</c> för att avsluta GRUB. 
			</p>

			<note> I ovanstående kommandon kan du använda GRUB inbyggda function för att 
automatiskt skriva klart namn. Om du skriver <c> root (</c> och sedan trycker på TAB så visar GRUB 
dig en lista över tillgängliga enheter (inte bara hårddiskar), om du sedan trycker på TAB efter 
att du skrivit <c> root (hd</c> så visar GRUB en lista över tillgängliga hårddiskar och om du trycker 
på TAB efter att ha skrivit <c> root (hd0,</c> så visar GRUB en lista över tillgängliga partitioner på 
den hårddisken. 

Denna kan vara till stor hjälp om du är osäker på GRUBs syntax när du skall 
göra ditt val.
			</note>
			
			<p>
			Gentoo Linux är nu installerat, men för att kunna starta det bekvämt sedan så måste vi skapa 
filen <path>/boot/grub/grub.conf</path> så vi får en fin GRUB-meny när vi startar datorn. Så här gör vi det.
			</p>
        <impo>För att säkra bakåtkompabilitet med GRUB så se till att göra en länk från 
<i>grub.conf</i> till <i>menu.lst</i>. Du kan göra detta genom att skriva <c>ln -s /boot/grub/grub.conf /boot/grub/menu.lst</c>.
</impo>
        <p>Nu skapar vi filen grub.conf (<c>nano -w /boot/grub/grub.conf</c>), och lägger till följande i den:
			</p>
        <pre caption="Grub.conf för GRUB">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=My example Gentoo Linux
root (hd0,0) 
kernel (hd0,0)/boot/bzImage root=/dev/hda3 

<comment> #Nedanstående är för er som använder hårdvaru-RAID</comment>
title=My Gentoo Linux on RAID
root (hd0,0)
kernel (hd0,0)/boot/bzImage root=/dev/ataraid/discX/partY

<comment># Nedanstående är för er som har mer än ett operativsystem</comment>
title=Windows NT Workstation
root (hd0,5) 
chainloader +1
			</pre>
        <note>
			(hd0,0) skall skrivas utan några mellanrum inne i parentesen.
			</note>
        <impo>
			Om du ställde in att du ville använda "scsi emulation" för din IDE-brännare 
tidigare måste du lägga till ett "hdx=ide-scsi" på kernel-raden i grub.conf (där 
"hdx" är enheten för din brännare).
			</impo>
        <p>Efter att du har sparat den här filen är installationen av Gentoo Linux äntligen klar. Det första 
alternativet säger åt GRUB att starta Gentoo Linux utan att gnata. Och den andra delen är 
valfri och visar hur du använder GRUB för att starta Windows.
			</p>
        <note>I ovanstående skall <path>(hd0,0)</path> peka på din boot-partition (<path>/dev/hda1</path> i vår exempel 
konfiguration) och <path>/dev/hda3</path> skall peka på vår root-partition. <path>(hd0,5)</path> innehåller NTs boot-
loader.
			</note>
        <note>
			Sökvägen till kärnan är relativ till boot-partitionen. Om du till exempel har 
separerat boot-partitionen <path>(hd0,0)</path> och root-partitionen <path>(hd0,1)</path>, så skall alla sökvägar i 
ovanstående grub.conf vara <path>/bzImage</path>.</note>

        <p>Om du behöver skicka med några extra alternativ till kärnan så lägger du helt enkelt till dem 
på slutet av <c>kernel</c>-kommandot. Vi skickar redan med ett alternativ (<c>root=/dev/hda3</c>), men 
du kan skicka med andra också om du vill. Du kan till exempel stänga av devfs (inte 
rekommenderat om du inte vet vad du sysslar med) genom att skicka med alternativet 
<c>gentoo=nodevfs</c>. 
			</p>
        <note>Till skillnad från tidigare versioner av Gentoo Linux så behöver du inte längre skicka 
med alternativet <c>devfs=mount</c> till <c>kernel</c>-kommandot. I rc6 är devfs aktiverat som standard.
			</note>
      </body>
    </section>
	<section>
    <title>Konfigurera LILO</title>
      <body>
        <p>Även om GRUB är det nya alternativet för de flesta är det inte alltid det bästa valet.
LILO, LInuxLOader, är det beprövade alternativet. Så här installerar du LILO om du vill 
använda det istället för GRUB:
	</p>
        <p>Första steget är att emerge:a LILO: 
	</p>
        <pre caption="Emerge LILO">
# <c>emerge lilo</c>
	</pre>
        <p>Nästa steg är att konfigurera LILO. Jag ger dig en enkel <i>lilo.conf</i> som du kan använda, och jag 
kommer att förklara de olika delarna av filen.
	</p>
        <pre caption="lilo.conf">
boot=/dev/hda
map=/boot/map
install=/boot/boot.b
prompt
timeout=50
message=/boot/message
lba32
default=linux

image=/boot/vmlinuz-2.4.20
	label=linux
	initrd=/boot/initrd-2.4.20.img
	read-only
	root=/dev/hda5
	
#For dual booting windows/other OS
other=/dev/hda1
	label=dos

	</pre>
	<ul>
        <li><i>boot=/dev/hda</i> säger åt LILO att installera sig på den första hårddisken på den första IDE-controllern. </li>
        <li><i>map=/boot/map</i> visar vilken map-fil LILO skall använda. I normala fall behövs denna inte ändras.</li>
        <li><i>install=/boot/boot.b</i> säger åt LILO att installera den angivna filen som ny bootsektor. I 
normala fall behöver denna inte ändras. Om den här raden saknas använder LILO 
/boot/boot.b som standard. </li>
        <li><i>prompt</i> säger åt LILO att ge dig en prompt. Det är inte rekommenderat att du tar bort 
denna raden men om du gör det så kan du ändå få tillgång till en prompt genom att 
hålla nere [Shift] när din dator startar upp.  </li>
        <li><i>timeout=50</i> anger den tid LILO kommer att vänta på ett kommando från användaren 
innan standardoperativsystemet laddas. Tiden anges i tiondelar av en sekund med 50 
som standard. </li>
        <li><i>message=/boot/message</i> anger vilket välkomstmeddelande LILO skall visa när datorn startas. </li>
        <li><i>lba32</i> beskriver hårddiskgeometrin för LILO. Ett annat vanligt alternativ här är 
"linear". Du borde inte ändra detta om du inte är riktigt säker på vad du gör, annars 
kan du göra så att din dator inte kan starta. </li>
        <li><i>default=linux</i> visar vilket operativsystem som skall vara standardoperativsystem av 
dom som anges längre ned i filen. LILO använder namnet som anges med "label" som 
referens. </li>
        <li><i>image=/boot/vmlinuz-2.4.20</i> bestämmer vilken kärna som skall laddas för det aktuella 
operativsystemet. </li>
        <li><i>label=linux</i> bestämmer vilken titel detta alternativ skall ha när det visas i LILOs 
välkomstskärm. Det är också det namn som LILO använder som referens för default-
inställningen ett par rader upp. </li>
        <li><i>initrd=/boot/initrd-2.4.20.img</i> anger vilken ramdisk-image som skall användas vid 
uppstart och som gör det möjligt att ladda kärnan sedan. Ramdisken består av en 
massa maskinspecifika drivrutiner för ex. SCSI-kort, hårddiskar och andra enheter 
som krävs för att kunna ladda kärnan. Du skall aldrig försöka använda samma 
ramdisk till flera olika datorer. </li>
        <li><i>read-only</i> anger att root-partitionen (se raden med root nedan) endast kan läsas och 
inte skrivas till under uppstarten. </li>
        <li><i>root=/dev/hda5</i> säger åt LILO vilken partition det skall använda som root-partition. </li>
	</ul>
        <note>Vi tackar <uri link="http://www.redhat.com">Redhat.com</uri> för denna information.
	</note>
        <p>Efter du har editerat din <i>lilo.conf</i> är det dags att köra LILO för att skriva informationen till 
MBR:
	</p>
        <pre caption="Köra LILO">
# <c>/sbin/lilo</c>
	</pre>
        <p>Nu är LILO konfigurerat och klart och din dator är redo att starta upp din installation av 
Gentoo Linux!
	</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Slutgiltig konfiguration: Startdisketter</title>
    <section>
      <title>GRUB-startdiskett</title>
      <body>
        <p>Det är alltid en bra idé att göra en startdiskett första gången du installerar någon 
Linuxdistribution. Det är ett säkerhetsnät och är i de flesta fall aldrig någon dålig idé. Om du 
använder vissa typer av hårdvaru-RAID kan du <e>vara tvungen</e> göra en GRUB-startdiskett. Med dessa 
typer kan du inte installera GRUB från ditt "chroot:ade" skal. Om du är i en sådan situation nu 
så gör du en GRUB-startdiskett och när du startar datorn för första gången så kan du 
installera GRUB i MBR. Såhär gör du din startdiskett:
			</p>
        <pre caption="Skapa en GRUB-startdiskett">
# <c>mke2fs /dev/fd0</c>
# <c>mount /dev/fd0 /mnt/floppy</c>
# <c>mkdir -p /mnt/floppy/boot/grub</c>
# <c>cp /usr/share/grub/i386-pc/stage1 /mnt/floppy/boot/grub/</c>
# <c>cp /usr/share/grub/i386-pc/stage2 /mnt/floppy/boot/grub/</c>

# <c>grub</c>

grub&gt; <c>root (fd0)</c>
grub&gt; <c>setup (fd0)</c>
grub&gt; <c>quit</c>
			</pre>
        <p>Starta nu om datorn och använd disketten. I <c>grub&gt;</c>-prompten kan du nu köra dom 
nödvändiga <c>root</c> och <c>setup</c>-kommandona.</p>
      </body>
    </section>
    <section>
      <title>LILO-startdiskett</title>
      <body>
        <p>Även om du använder LILO är det en bra idé att skapa en startdiskett:
		</p>
        <pre caption="Skapa en LILO-startdiskett">
# <c>dd if=/boot/your_kernel of=/dev/fd0 </c>
<comment>Detta fungerar bara om din kärna är mindre än 1.4MB</comment>
		</pre>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Installationen är klar</title>
    <section>
      <body>
        <p>Nu är Gentoo Linux installerat. Det enda som återstår är att gå ur det "chroot:ade" skalet, 
uppdatera nödvändiga konfigurationsfiler, avmontera dina partitioner och sedan starta om din 
dator:
			</p>
        <pre caption="Starta om datorn">
# <c>etc-update</c>
# <c>exit</c> 
<codenote>Detta tar dig ur ditt "chroot:ade" skal, du kan även skriva <c>^D</c></codenote>
# <c>cd / </c>
# <c>umount /mnt/gentoo/boot</c>
# <c>umount /mnt/gentoo/proc</c>
# <c>umount /mnt/gentoo/dev</c>
# <c>umount /mnt/gentoo</c>
# <c>reboot</c>
			</pre>
        <note>
			Efter att du har startat om datorn är det en bra idé att köra kommandot <c>update-modules</c>
 för att skapa filen <path>/etc/modules.conf</path>. Istället för att editera den här filen direkt skall 
du göra ändringar i filerna i <path>/etc/modules.d</path>.
			</note>
        <impo>Kom ihåg att om du kör hårdvaru-RAID så måste du använda startdisketten 
till din första omstart, sen kan du gå tillbaka och installera GRUB på samma sätt 
som alla andra. Du är klar -- grattis!</impo>
        <p>Om du har några frågor eller skulle vilja hjälpa till med utvecklingen av Gentoo Linux 
rekommenderar vi att du prenumererar på våra gentoo-user och gentoo-dev maillistor (det 
finns en "click to subscribe" länk på vår <uri link="http://www.gentoo.org">hemsida</uri>). Vi har också en 
hjälpsam <uri link="http://www.gentoo.org/doc/en/desktop.xml">guide</uri>, som 
hjälper dig att fortsätta konfigurera ditt Gentoo Linux-system, och en användbar 
<uri link="http://www.gentoo.org/doc/en/portage-user.xml">användarguide för Portage</uri>, som hjälper 
dig att göra dig bekant med grunderna för Portage. Du kan även hitta resten av 
dokumentationen för Gentoo <uri link="http://www.gentoo.org/main/en/docs.xml">här</uri>. Om du har fler 
frågor gällande installationen eller någonting annat så kan du kolla inte vår Gentoo Linux 
<uri link="http://www.gentoo.org/doc/en/faq.xml">FAQ</uri>. Välkommen till Gentoo Linux!
			</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Gentoo-Stats</title>
    <section>
      <body>
        <p>Gentoo Linux program för användarstatistik startades som ett försök att ge utvecklarna lite 
kunskap om deras användarbas. Det samlar information om användandet av Gentoo Linux 
och hjälper oss att sätta prioriteringar inom utvecklingen. Det är fullständigt valfritt att 
installera, och det skulle verkligen uppskattas om du bestämde dig för att använda det. 
Statistiken kan ses på <uri>http://stats.gentoo.org/</uri>. 
		</p>
        <p>Gentoo-stats servern kommer att tilldela ditt system ett unikt ID. Detta ID används för att se 
till att varje system bara räknas en gång. Detta ID kommer inte att användas för att 
individuellt identifiera ditt system och det kommer inte heller att matchas mot IP-adresser 
eller annan personlig information. Alla åtgärder har vidtagits för att säkra din anonymitet i 
utvecklandet av detta system. Följande saker är det vi tittar på genom vårat "gentoo-stats"-
program:
		</p>
        <ul>
          <li>installerade paket och deras versionsnummer.</li>
          <li>CPU-information: hastighet (MHz), tillverkare, modell, CPU-flaggor (som "mmx" eller "3dnow".)</li>
          <li>minnesinformation (totalt tillgängligt fysiskt minne, totalt tillgängligt swap-utrymme.)</li>
          <li>PCI-kort och chipset på nätverkskort.</li>
          <li>Vilken Gentoo Linux-profil din dator använder (vart /etc/make.profile pekar alltså).</li>
        </ul>
        <p>Vi är medvetna om att offentliggörande av känslig information är ett hot för det flesta 
användare av Gentoo Linux (och även för dess utvecklare).
		</p>
        <ul>
          <li>Så länge du inte modifierar programmet gentoo-stats kommer det inte att överföra känslig 
information som ditt lösenord, konfigurations information, skostorlek...</li>
          <li>Överföring av din email-adress är valfri och avstängt som standard.</li>
          <li>Den IP-adress som din överföring härstammar ifrån kommer aldrig att loggas på sådant sätt 
att vi kan identifiera dig. Det finns inga matchningar mellan IP-adress och system-ID.</li>
        </ul>
        <p>Installationen är enkel - kör bara följande kommandon:
		</p>
        <pre caption="Installera gentoo-stats">
# <c>emerge gentoo-stats</c>   <codenote>Installerar gentoo-stats</codenote>
# <c>gentoo-stats --new</c>    <codenote>Begär ett system-ID</codenote>
		</pre>
        <p>Det andra kommandot här ovanför kommer att begära ett nytt system-ID och skriva in det i 
<path>/etc/gentoo-stats/gentoo-stats.conf</path> automatiskt. Du kan kolla i den filen för att se extra 
konfigurationsmöjligheter.
		</p>
        <p>Efter det bör programmet köras efter ett regelbundet schema (gentoo-stats behöver inte 
köras som root). Lägg till följande rad i din <path>crontab</path>:
		</p>
        <pre caption="Uppdatera gentoo-stats med cron">
          <c>0 0 * * 0,4 /usr/sbin/gentoo-stats --update &gt; /dev/null</c>
        </pre>
        <p><c>Gentoo-stats</c> är ett enkelt perl-script som kan ses med din favorit editor: <path>/usr/sbin/gentoo-stats</path>.	</p>
      </body>
    </section>
  </chapter>
</guide>
