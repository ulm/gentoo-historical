<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<sections>
  <section>
    <title>DistCC</title>
    <subsection>
      <title>DistCC Nedir?</title>
      <body>
        <p>
<c>distcc</c> birden fazla birbirine uyumlu olmak zorunda olmayan bilgisayarların, ağ üzerinden derlemeyi dağıtan yazılımdır.  Distcc istemcisi gereken tüm bilgileri ulaşabildiği DistCC-sunucularına yollar (distccd'nin çalıştığı makinalar) ve böylece kaynak kodların istemciler tarafından derlenmesini sağlar. Sonuçta bu yöntemle zaman kazanırız.

</p>
        <p>
<c>DistCC</c> hakkında daha ayrıntılı bilgiye <uri link="/doc/en/distcc.xml">Gentoo
Distcc Documentation</uri> adresinden ulaşabilrisiniz.
</p>
      </body>
    </subsection>
    <subsection>
      <title>DistCC Kurmak</title>
      <body>
        <p>
DistCC'nin beraberinde gelen monitörün vasıtasıyla bilgisayarın derlemek için gönderdiği işlemlerden haberdar olabilirsiniz.  Eğer Gnome kullanıyorsanız <c>USE</c>- değişkenlerinde 'gnome' eklemelisiniz, Gnome kullanmıyorsanız ve DistCC'nin monitörünü kullanmak istiyorsanız '<b>USE</b>- değişkenine '<e>gtk</e>' seçeneğini eklemelisiniz. Tüm yazılımların Gentoo'nun Portage'i tarafından sunulduğundan DistCC'nin kurumuda dolaysıyla çok basit.

</p>
        <p></p>
        <note>
Bu bölümden itibaren artık binary paketlerin nasıl kurulduğunu bildiğinizi var sayarak,<c> --usepkg</c> seçeneğini Gentoo elkitabının geri kalan bölümlerinde anlatmıyacağız.
</note>
        <pre caption="Distcc kurulumu">
# <i>emerge distcc</i>
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Portage Desteğini Aktifleştirmek</title>
      <body>
        <p>
Kurumu basit olduğuna göre geri kalanıda kolay olmalı :-) Hemen <c>distcc</c>'nin Portage desteğini açalım o halde.
</p>
        <p>
İlk önce <path>/etc/make.conf </path>dosyamızı bir editörle açıp <c>FEATURES</c> değişkenine <c>distcc</c> anahtar kelimesini ekliyelim. Sonra <c>MAKEOPTS</c> değişkenine <c>-jX</c> seçeneğini eklemeliyiz, <c>X</c> burda <c>distccd</c>'yi sunuma açık tutan makinaların işlemci sayılarının bir fazlasıdır ( ve ilaveten  yazılımın yükleneceği makinanın işlemcisi):</p>
        <pre caption="Possible MAKEOPTS setting in /etc/make.conf">
<comment># distcc istemcisini iki adet tek işlemcili makinada çalıştığını farz edelim (sunucu makinayı saymadan):</comment>
MAKEOPTS="-j4"
</pre>
        <p>
Tekrardan <path>/etc/make.conf </path>dosyası içinde <c>PORTAGE_TMPDIR</c> satırının başındaki '#' işaretini kaldırarark, dosyamıza aşağıdaki satırı eklemelisiniz .</p>
        <pre caption="Add an extra, distcc-specific variable to /etc/make.conf">
<comment># PORTAGE_TMPDIR - değişkeninin önndeki # işaretini kaldırmayı unutmayınız</comment>
DISTCC_DIR=${PORTAGE_TMPDIR}/portage/.distcc
</pre>
        <p>
Şimdi <c>distcc-config</c> yazıyoruz ve enter yapıp mevcut DistCC sunucularının listesini görebilirsiniz.
 Basit bir örnek olarak ulaşabildiğiniz DistCC sunucuların <c>192.168.1.102</c> (yazılımın kurulacağı makina), <c>192.168.1.103</c> ve <c>192.168.1.104</c> (uzaktaki sunucular) olduğunu var sayalım:
 </p>
        <pre caption="DistCC'nin ulaşabildiği 3 adet DistCC sunucusu">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>
        <p>
Elbetteki DistCC demonunu (distccd ) çalıştırmayı unutmuyoruz:
</p>
        <pre caption="DistCC demonunu çalıştırmak">
# <i>/etc/init.d/distccd start</i>
</pre>
        <p>
Hayırlı olsun, sisteminiz artık derleme işlemini dağıtabilecek. Daha derin bilgi almak için Gentoo DistCC Rehberini okuyun:   <uri link="/doc/en/distcc.xml">Gentoo DistCC Documentation</uri>.
</p>
      </body>
    </subsection>
  </section>
  <section>
    <title>ccache</title>
    <subsection>
      <title>ccache Nedir?</title>
      <body>
        <p>
<c>ccache</c> hızlı bir derleyici arabirimidir. Bir yazılımı derlerken ara sonuçlar cache edilir, bu yazılıma re-derleme yaptığınızda 5 ve 10 katı  arasında bir derleme hızına ulaşabilirsiniz. 
</p>
        <p>
Eğer ccache programının beraberinde getirdiği avantaj ve dezavantajları merak ediyorsanız, ccache anasayfasını ziyaret edin: 
<uri link="http://ccache.samba.org">ccache web sayfası</uri>.
</p>
      </body>
    </subsection>
    <subsection>
      <title>ccache Kurmak</title>
      <body>
        <p>
Gentoo linux'nuza ccache programını kurmak çok basit; sadece bir <c>emerge ccache </c>komutu yeterli.:)
</p>
        <pre caption="ccache kurulumu">
# <i>emerge ccache</i>
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Portage Desteğini Aktifleştirmek</title>
      <body>
        <p>
İlk önce <path>/etc/make.conf </path>dosyasını bir editörle açıp<c> FEATURES</c> değişkenine <c>ccache</c> anahtar kelimesini eklemelisiniz:</p>
        <pre caption="/etc/make.conf dosyasından FEATURES değişkenini düzenlemek">
FEATURES="ccache"
</pre>
        <p>
Sonra <c>CCACHE_SIZE</c> değişkenini cache yapması  için <c>ccache</c> yazılımına vermek istediğiniz sabit disk hacmini eklemelisiniz (Eğer <c>CCACHE_SIZE</c> değişkeni yoksa <path>/etc/make.conf</path> dosyasında bunu eklemek zorundasınız):


</p>
        <pre caption="CCACHE_SIZE değişkeninin   /etc/make.conf dosyasından düzenlenmesi">
CCACHE_SIZE="2G"
</pre>
        <p>
Bu işlemden itibaren Portage derleme işleminde <c>ccache</c> yazılımını kullanacaktır, ve her mümkün olduğunda derleme işlemini hızlandıracaktır. Ccache'in çalıştığına emin olmak için, <c>ccache  -s </c>seçeneğiyle beraber çalıştırın. Böylece <c>ccache</c> yazılımının istatiklerine bakabilirsiniz:</p>
        <pre caption="ccache istatistiklerine bakmak">
# <i>ccache -s</i>
</pre>
      </body>
    </subsection>
  </section>
  <section>
    <title>Binary Paketleri</title>
    <subsection>
      <title>Binary Paketlerini Oluşturmak</title>
      <body>
        <p>
Önceki bölümlerde binary paketlerle nasıl çalışacağınızı anlatmıştık. Peki kendimiz nasıl binary paketleri oluşturabiliriz?

</p>
        <p>
Eğer binary paketini oluşturmak istediğiniz yazılım makinanıza yüklüyse, <c>quickpkg</c> komutuyla yüklü dosyalardan bir Tarball oluşturabilirsiniz. Bu yöntem yedekleme ilemleri için çok faydalı bir yöntemdir (Oluşan dosyalar <path>/usr/portage/packages/ALL </path>  dizini altında kaydolur).

</p>
        <pre caption="quickpkg kullanmak">
# <i>quickpkg gnumeric</i>
</pre>
        <p>

Eğer gnumeric yazılımı makinanızda yüklü değilse bunu hemen <c>emerge</c> edebilirsiniz. Yüklerken aynı zamanda binary paketide oluşturabilirsiniz. <c>emerge --buildpkg</c>  komutu (kısaltılması -b kullanılabilir) çalıştırmak yeterli olacaktır:</p>
        <pre caption="Gnumeric programını yüklemek ve aynı işlem içinde binary paketini oluşturmak">
# <i>emerge --buildpkg gnumeric</i>
</pre>
        <p>
Portage'in bunu devamlı olarak yapmasını dilerseniz, <path>/etc/make.conf</path> dosyasında bulunan <c>FEATURES</c> değişkenine <c>buildpkg</c> anahtarsözcüğünü eklemeniz gerekir.

</p>
        <pre caption="Binary paketlerin otomatik olarak oluşturulması">
FEATURES="buildpkg"
</pre>
        <p>
Yazılımın sadece biner paketini oluşturmak ve sisteme yüklemek için emerge ederken <c>--buildpkgonly </c>seçeneğini kullanmalısınız (kısa yazılımı <c>-B </c>).</p>
        <pre caption="Gnumeric yazılımının sadece biner paketlerini oluşturmak">
# <i>emerge --buildpkgonly gnumeric</i>
</pre>
      </body>
    </subsection>
  </section>
  <section>
    <title>Güvenlik İle İlgili Özellikler</title>
    <subsection>
      <title>Sandbox</title>
      <body>
        <p>
Portage paketleri yüklediğinde ve oluşturduğunda Live sisteminizi korumak için bir <e>sandbox</e> kullanır. Bunun anlamı bir paketin kurulumunun tamamıyle sonuna kadar  sistemdeki hiçbir dosyaya sandbox dışında erişemesi. Böylece Portage'in hangi dosyanın hangi paketten alındığını yada hangi paket tarafından değiştirildiğini bilmesi mümkün olur. 
</p>
        <p>
Bir paketin derlenmesi bittiğinde, portage tarafından ilk önce Sandbox'da ön-kurulum yapılır. Bu işlem esnasında hangi dosyanın nereye taşındığı not alınır. Sonraki aşamada bu dosyalar Sandbox tarafından Live-sisteminize taşınır.
</p>
      </body>
    </subsection>
    <subsection>
      <title>User Ayrıcalıkları</title>
      <body>
        <p>
Portage kullanıcı tarafından paket oluşturulmasını destekliyor (daha doğrusu kullanıcı "portage" ve grub "portage"). Böylece paket oluşumundaki güvenlik artmış oluyor. Kullanıcı ayrıcalıklarını sandbox'lu yada sandbox'suz kullanmakta özgürsünüz. Genelde ama kullanıcı ayrıcalıkları ve Sandbox beraber kullanılır.
</p>
      </body>
    </subsection>
    <subsection>
      <title>Sandbox İle Kullanıcı Ayrıcalıklarını Etkinleşirmek</title>
      <body>
        <p>

Öntanımlı olarak portage tarafından <e>sandbox</e> kullanır. Eğer userpriv kullanmak isterseniz bunu FEATURES değişkenine eklemelisiniz. Dikkat edilmesi gereken bir olay, <c>userpriv</c> özelliğini aktif ettikten sonra <c>sandbox</c>'un deaktif hale geçmesi. Tabi bu olay <c>usersandbox</c>'u aktif ederseniz gerçekleşmez:
</p>
        <pre caption="Userpriv ve usersandbox'u etkinleştirmek">
FEATURES="userpriv usersandbox"
</pre>
        <warn>
<e>sandbox</e>'u katiyen <c>FEATURES</c> değişkeninden çıkarmayınız.
</warn>
      </body>
    </subsection>
    <subsection>
      <title>Sıkı Kontrol</title>
      <body>
        <p>
Portage'e tehlikeli şartlara karşı sıkı önlem alması söylenebilir (örn. Eksik yada hatalı manifest - dosyaları için). Bu sıkı kontrolü açmak için <c>FEATURES</c> değişkenine <c>strict</c> seçeneğini ekleyin:
</p>
        <pre caption="Sıkı kontrolü açmak">
FEATURES="strict"
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Akıllı Dosya Sistemi Hakları</title>
      <body>
        <p>
Portage'e otomatik olarak potansiyel tehlikeli dosya haklarını değiştirmesi söylenebilir. Bu işlem sırasında "grub(group)" ve "diğer(other)"  okunabilir bit'lerin setuid dosyaları ve "diğer(other)" okunabilir bit'lerin setgid dosyaları kurum öncesi aşamada silinir. Akıllı dosya sistemi haklarını kullanmak için <c>FEATURES</c> değişkenine <c>sfperms </c>seçeneğini eklemek gerekir:</p>
        <pre caption="Akıllı dosya sistemi haklarını kullanmak">
FEATURES="sfperms"
</pre>
      </body>
    </subsection>
  </section>
  <section>
    <title>Başka Özellikler</title>
    <subsection>
      <title>Portage Yardım</title>
      <body>
        <p>
<c>FEATURES </c>değişkenine ekliyebileceğiniz daha çok anahtar kelimesi var. Genelde bir çoğu yapılandırıcılar tarafından kullanılmakta. Bu özellikler hakkında (yada Portage hakkında genel) bilgi edinmek isterseniz make.conf klavuz sayfasını okumayı ihmal etmeyin.</p>
        <pre caption="Portage hakkında daha fazla bilgi">
# <i>man make.conf</i>
</pre>
      </body>
    </subsection>
  </section>
</sections>
