<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<sections>
  <section>
    <title>Paket Bilgisini Görmek</title>
    <subsection>
      <title>Tüm Araçların Efendisi: emerge</title>
      <body>
        <p>
Tüm kullanıcıların kullanacağı asıl Portage aracı <c>emerge</c> aracıdır. Gentoo kurulumu sırasında ve bir önceki bölümde <c>emerge</c> zaten kullanmıştık. Şimdi tam olarak nasıl kullanılacağını açıklayacağız. Bu bölüm ayrıntılı olarak <c>emerge</c> kullanmayı ve yazılım tabanlı tüm ihtiyaçlarınızı karşılamayı öğretecek. </p>
        <p>
<c>emerge</c>  yazılım paketlerini yükleme, kaldırma, sorgulama ve korumaya yarayan bir komuttur.
<c>emerge</c> , <c>ebuild</c> için bir ön işlemcidir; Gentoo profesyoneli olmakla ilgilenen kullanıcılar <c>ebuild</c>  kullanımı hakkında detaylı bilgiyi sonra öğrenecekler. Şimdilik <c>emerge </c>  ve  <c>ebuild</c>
 üzerinde duracagız.</p>
        <p><c>emerge</c> gentoo kullanıcıları için en önemli araç olduğu sürece, geniş bir kılavuz sayfasına sahip olacaktır. <c>man emerge</c> veya  <c>emerge --help</c> ile çok detaylı bilgi bulabilirsiniz.
</p>
        <pre caption="emerge için yardım almak">
# <i>man emerge</i>
# <i>emerge --help</i>
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Portage Şeması </title>
      <body>
        <p><c>emerge</c> kullanımına devam etmeden önce, Portage şemasına bir göz atalım.<path>/usr/portage</path>  dizinine gidin ve mevcut dizinleri listeleyin. Biz dizinlere "/" ekleyerek gösteren <c>ls --classify</c>  komutunu kullanıyoruz.</p>
        <pre caption="Portage şemasını görmek">
# <i>cd /usr/portage; ls --classify</i>
app-admin/       dev-ml/            gnome-libs/     net-print/
app-arch/        dev-perl/          gnome-office/   net-wireless/
app-benchmarks/  dev-php/           header.txt      net-www/
app-cdr/         dev-python/        incoming/       net-zope/
app-crypt/       dev-ruby/          jython/         packages/
app-dicts/       dev-tcltk/         kde-apps/       profiles/
app-doc/         dev-tex/           kde-base/       releases/
app-editors/     dev-util/          kde-i18n/       scripts/
app-emacs/       distfiles/         kde-libs/       sec-policy/
app-emulation/   eclass/            licenses/       skel.ChangeLog
app-games/       experimental/      media-fonts/    skel.ebuild
app-gnustep/     files/             media-gfx/      skel.metadata.xml
app-i18n/        fresco-base/       media-libs/     snapshots/
app-misc/        games-action/      media-plugins/  sys-apps/
app-office/      games-arcade/      media-radio/    sys-build/
app-pda/         games-board/       media-sound/    sys-cluster/
app-portage/     games-emulation/   media-tv/       sys-devel/
app-sci/         games-engines/     media-video/    sys-fs/
app-shells/      games-fps/         metadata/       sys-kernel/
app-text/        games-kids/        net-analyzer/   sys-kmods/
app-vim/         games-misc/        net-apache/     sys-libs/
app-xemacs/      games-mud/         net-dialup/     unix2tcp/
berlin-base/     games-puzzle/      net-dns/        x11-base/
dev-ada/         games-roguelike/   net-firewall/   x11-libs/
dev-cpp/         games-rpg/         net-fs/         x11-misc/
dev-db/          games-server/      net-ftp/        x11-plugins/
dev-dotnet/      games-simulation/  net-im/         x11-terms/
dev-embedded/    games-sports/      net-irc/        x11-themes/
dev-games/       games-strategy/    net-libs/       x11-wm/
dev-haskell/     games-util/        net-mail/       xfce-base/
dev-java/        glep/              net-misc/       xfce-extra/
dev-lang/        gnome-apps/        net-nds/
dev-libs/        gnome-base/        net-news/
dev-lisp/        gnome-extra/       net-p2p/
</pre>
        <p>
Gördüğünüz gibi Portage şeması bolca alt dizin içermektedir. Bunların çoğu Gentoo paketlerinin <e>ebuilds</e> olarak adlandırılan <e>kategorilerdir.</e>
Örnek olarak, <path>app-office</path> kategorisine bir göz atalım:
</p>
        <pre caption="Bir kategoriyi görmek">
# <i>cd app-office; ls --classify</i>
abiword/     gnotime/   kmymoney2/  ooodi/              plan/     timestamp.x
dia/         gnucash/   koffice/    oooqs/              qhacc/
dia2code/    gnumeric/  lxbank/     openoffice/         sc/
facturalux/  ical/      lyx/        openoffice-bin/     scribus/
gaby/        kbudget/   mdbtools/   openoffice-ximian/  siag/
gnofin/      khacc/     mrproject/  phprojekt/          texmacs/
</pre>
        <p>
Kategori içinde o kategoriye ait  paketleri, paketi içeren klasörlerle bulacaksınız. <c>openoffice </c>paketine bir göz atalım:
</p>
        <pre caption="Paket gösterimi">
# <i>cd openoffice; ls --classify</i>
ChangeLog  files/        openoffice-1.0.3-r1.ebuild  openoffice-1.1.0-r2.ebuild
Manifest   metadata.xml  openoffice-1.1.0-r1.ebuild  openoffice-1.1.0.ebuild
</pre>
        <p>
Size Gentoo paketlerinin ebulid olarak isimlendirildiğini söylediğimizi hatırladınız mı? Görüldüğü gibi örnek dizinde dört tane ebuild mevcut. İsimleri her zaman fikir verecek şekilde: sadece sürüm numaraları farklı. Paketlerin içeriğini görmekte özgürsünüz: onlar sadece betikler. Gentoo kullanmak için çok önemli bir şey olmadığından bu konunun detaylarına girmeyeceğiz şimdi.
</p>
        <p>
Diğer dosyalar <path>ChangeLog</path> (ebuild'lerde yapılan tüm değişiklikleri içerir), <path>Manifest</path> (dizindeki tüm dosyaların boyutlarını ve checksumlarını içerir) ve <path>metadata.xml</path> (paketler hakkında geliştiricileri, açıklamalar gibi ayrıntılı bilgileri içerir).
</p>
        <p> <path>files</path>  dizininde Portage'in ihtiyaç duyduğu bilgiler (checksum ve paketin ihtiyaç duyduğu diğer dosyaların yetkileri), paketler, örnek ayar dosyaları v.s.</p>
        <pre caption="Özel paketleri görmek">
# <i>cd files; ls --classify</i>
1.0.3/  digest-openoffice-1.0.3-r1  digest-openoffice-1.1.0-r1
1.1.0/  digest-openoffice-1.1.0     digest-openoffice-1.1.0-r2
# <i>cd 1.1.0; ls --classify</i>
fixed-gcc.patch      ooffice-wrapper-1.3
newstlportfix.patch  openoffice-1.1.0-linux-2.6-fix.patch
no-mozab.patch       openoffice-1.1.0-sparc64-fix.patch
nptl.patch
</pre>
        <p>
Eğer Prtage şemasının kök düzününe giderseniz (<path>/usr/portage</path>), orada katerogize edilmemiş dizinler olduğunu farkedeceksiniz. Bunların ayrıntılarını bu bölümde vereceğiz.
</p>
      </body>
    </subsection>
    <subsection>
      <title>Paket Aramak</title>
      <body>
        <p>
Eğer Gentoo Linux'da yeniyseniz, işleriniz için hangi aracı kullanacağınızı bilmiyor olabilirsiniz. Bir arama yapmak için, <c>emerge</c>  sistemdeki mevcut paketleri aramak için bir yol sunuyor. Paket aramanın iki yolu var: <e>isim ile arama</e>, ya da <e>isim ve açıklama ile arama</e>.
</p>
        <p>
Portage şemasında isim ile arama gerçekleştirmek için, <c>emerge search</c> kullanın. Örnek olarak, <c>mozilla</c>hakkında daha çok şey bulmak için:
</p>
        <pre caption="mozilla hakkında bilgi görüntülemek">
# <i>emerge search mozilla</i>
Searching...   
[ Results for search key : mozilla ]
[ Applications found : 5 ]
<comment>(Some output removed to improve readability)</comment>
*  net-www/mozilla
      Latest version available: 1.5-r1
      Latest version installed: 1.4-r3
      Size of downloaded files: 29,153 kB
      Homepage:    http://www.mozilla.org
      Description: The Mozilla Web Browser

*  net-www/mozilla-firebird
      Latest version available: 0.7
      Latest version installed: [ Not Installed ]
      Size of downloaded files: 37,850 kB
      Homepage:    http://www.mozilla.org/projects/firebird/
      Description: The Mozilla Firebird Web Browser
<comment>(...)</comment>
</pre>
        <p>
Eğer açıklamalarında aranmasını istiyorsanız <c>--searchdesc</c>  argümanını kullanın:
</p>
        <pre caption="Açıklamalarıda aramak">
# <i>emerge --searchdesc mozilla</i>
Searching...   
[ Results for search key : mozilla ]
[ Applications found : 10 ]
<comment>(Some output removed to improve readability)</comment>
*  dev-libs/nss-3.8
      Latest version available: 3.8
      Latest version installed: 3.8
      Size of downloaded files:  2,782 kB
      Homepage:    http://www.mozilla.org/projects/security/pki/nss/
      Description: Mozilla's Netscape Security Services Library that implements PKI support
</pre>
        <p>
Gördüşünüz gibi, <c>emerge</c>'in çıktısı size kategori, paket ismi, mevcut sürüm, yüklenmiş olan sürüm, indirilen dosyaların boyutları, internet sayfası ve küçük bir açıklama gibi bilgilerin hepsini size aktarmakta.
</p>
        <p>
Yeni bir şey gördünüz mü? Evet, <e>indirilmiş dosyalar.</e> Portage'e bir paket yüklemesini söyleniz yeterli, tabiki gerekli kaynaklara sahip olmak zorunda (yada hazır paketler). Bu nedenle Portage
<path>/usr/portage/distfiles</path> (kaynak kodlar için)  veya 
<path>/usr/portage/packages/All</path> (hazır paketler için)  içeriğini paketlerin mevcut olup olmadığını görmek için kontrol eder. Eğer mevcut değilse, gerekli dosyaları indirir ve bu dizinler içine yerleştirir.
</p>
        <!--
<note>
Searching the Portage Tree, especially when using <c>- -searchdesc</c>, is very
time consuming. There are other, more performant tools available. We will
describe those in the chapter on <uri link="?part=2&amp;chap=7">Gentoolkit and
Other Tools</uri>.
</note>
-->
      </body>
    </subsection>
    <subsection>
      <title>ChangeLog Dosyasını Görmek</title>
      <body>
        <p>
Portage şemasını gezerken, paketler için bir ChangeLog olduğunu gördünüz. Mevcut sürüm ve yüklenmiş sürüm arasındaki ChangeLog girdilerini<c> emerge</c>  ile görebilirsiniz. 
<c>--pretend --changelog</c> ( kısaca <c>-pl</c> ) seçeneğini kullanın. Bir örnek olarak <c>gnumeric</c> paketinin ChangeLog girdilerini göreceğiz:
</p>
        <pre caption="gnumeric için ChangeLog girdilerini görmek">
# <i>emerge --pretend --changelog gnumeric</i>
<comment>(Some output removed to improve readability)</comment>
*gnumeric-1.2.2

  27 Nov 2003; foser &lt;foser@gentoo.org&gt; gnumeric-1.2.2.ebuild :
  New release, requested in #34492
  updated deps

  12 Nov 2003; Jason Wever &lt;weeve@gentoo.org&gt; gnumeric-1.2.0.ebuild:
  Marked stable on sparc, fixes bug #32405.

  14 Oct 2003; Jason Wever &lt;weeve@gentoo.org&gt; gnumeric-1.0.8.ebuild:
  Added ~sparc keyword.  Fixes bug #31150.
</pre>
      </body>
    </subsection>
  </section>
  <section>
    <title>Portage Güncellemesi Yapmak</title>
    <subsection>
      <title>Giriş</title>
      <body>
        <p>
Portage ile arama yapmak güzel, fakat Portage'i güncellemezseniz sisteminizdeki mevcut paketler içinde sıkışırsınız. Bunun anlamı sisteminiz yakında eskiyecek ve bug yamaları, güvenlik problemleri gibi güncellemeleri kaçıracaksınız.</p>
        <p>
Portage şemasını güncellemenin bir kaç yolu var. En çok kullanılan yol <uri link="/main/en/mirrors.xml">rsync yansılarımızdan </uri> birini kullanmaktır.
Diğer yol ise bir Protage görüntüsü kullanmak (güvenlik duvarı ya da yetersiz network izimleri gibi durumlar için).</p>
      </body>
    </subsection>
    <subsection>
      <title>"rsync" İçin Bir Yansı Seçmek</title>
      <body>
        <p>
Size en yakın <uri link="/main/en/mirrors.xml">yansıyı </uri> seçmek avantajlı olacaktır. Bunu el ile <c>SYNC</c>  değişkeninin değiştirerek yapabilirsiniz (Bu değişken <path> /etc/make.conf</path> dosyasının içindedir) veya
<c>mirrorselect</c>  komutunu kullanarak onun bu işi sizin için yapmasınısağlayabilrisiniz. <c>SYNC</c>
  değişkeni üzerinde daha sonra duracağız. Şuanda sadece <c>mirrorselect</c> üzerinde duracağız. İlkönce <c>mirrorselect</c>  aracını emerge ediyoruz:</p>
        <pre caption="mirrorselect kurulumu">
# <i>emerge --usepkg mirrorselect</i>
</pre>
        <p>
Şimdi bize otomatik olarak yansı seçmesi için <c>mirrorselect</c> komutunu veriyoruz (bu aynı zamanda Portage'i kaynak kodlarını o yansıdan indirmesi içinde ayarlayacak):</p>
        <pre caption="mirrorselect uygulaması">
# <i>mirrorselect -a -s3</i>
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Portage Şemasını Güncellemek</title>
      <body>
        <p>
Portage'i rsync yoluyla güncellemek için, basitce <c>emerge sync</c> işlemini başlatın:
</p>
        <pre caption="Portage'i emerge sync ile güncellemek">
# <i>emerge sync</i>
</pre>
        <p>
Eğer bu çalışmazsa (bir ağ problemine ya da güvenlik duvarına bağlı olarak), <c>emerge-webrsync</c>  komutunu deneyin. Bu işlem <c>wget</c> kullanarak Portage şemasının görüntüsünü indirecektir. Bu isterseniz proxyde kullanabileceğiniz anlamına geliyor. Gentoo kurulumu sırasında nasıl proxi ayarlayacağınızdan bahsetmiştik.</p>
        <pre caption="emerge-webrsync kullanarak Portage güncellemek">
# <i>emerge-webrsync</i>
</pre>
      </body>
    </subsection>
  </section>
  <section>
    <title>Yazılımları Korumak</title>
    <subsection>
      <title>Hazırlamak mı Yoksa Hazır Kullanmak mı?</title>
      <body>
        <p>
Gentoo isterseniz paketleri ebuild olarak sunar. Fakat bir ebuild gibi yüklemek isterseniz, paketi <e>hazırlamak</e> ya da <e>hazırlanmış</e> bir paket kullanmak arasında bir tercih yapabilirsiniz. Fakat bu iki seçim arasındaki avantajlar/dezavantajlar nerlerdir, ve biri diğerine tercih edilebilir mi?</p>
        <p>
Tahmin edeceğiniz gibi paket hazırlamak uzun zaman alacaktır (özellikle  <uri link="http://www.kde.org">KDE</uri>, <uri link="http://www.openoffice.org">OpenOffice.org</uri>, gibi yapılarda). Bir paket hazırlayarak <c>USE</c> değişkeniyle paketin sizin sisteminize özgü olmasını sağlayabilirsiniz. Tabiki, sisteminize uyarlamak için yüksek seçeneklerde kullanabilirsiniz (<c>CFLAGS</c> ve <c>CXXFLAGS</c> değişkenleriyle).</p>
        <p>
Hazır bir paket kullanmak yükleme süresini kısaltacaktır (derlemeye gerek yoktur), fakat <c>USE</c> ayarları ve <c>CFLAGS</c>, <c>CXXFLAGS</c> değişkeni avantajlarını kaybedersiniz.
</p>
        <p>
Hazır paketler <path>/usr/portage/packages/All</path>  dizininde barındırılırlar. Kaynak kodları ise <path>/usr/portage/distfiles</path> altında toplanırlar. Eğer bir yazılım kurmayı bitirdiyseniz, paketi ya da kaynak kodunu bu dizinden silebilirsiniz. Fakat, istiyorsanız tekrar kurmanız gerekebilirse paket ya da kaynak kodunun son versiyonunu saklayabilirsiniz (bu sayede tekrar indirmeniz gerekmez).
</p>
      </body>
    </subsection>
    <subsection>
      <title>Kaynak Kodundan  Yazılım Kurmak</title>
      <body>
        <p>
Tamam, bu kadar konuşma yeter. Bir paket yüklemek için <c>emerge</c> komutunu kullanacaksınız. Eğer hazır bir paket kullanmak istemiyorsanız, sadece <c>emerge &lt;paket_ismi&gt;</c>   veya  <c>emerge
&lt;kategori&gt;/&lt;paket ismi&gt;</c> kullanabilirsiniz. Örnek olarak <c>gnumeric</c> yükleyelim:
</p>
        <pre caption="gnumeric derlenmesi">
# <i>emerge gnumeric</i>
</pre>
        <p>
Bu komut sisteminize dosyayı indirir, açar, derler ve yükler. Aynı zamanda bunu tüm bağımlılıklara yapar. Eğer paketle birlikte hangi bağımlılıkların yüklendiğini görmek isterseniz, <c>--pretend</c>  seçeneğini kullanın ( kısaca  <c>-p </c>  olarak da kullanabilirsiniz):
</p>
        <pre caption="gnumeric bağımlılıklarını görmek">
# <i>emerge --pretend gnumeric</i>
</pre>
        <p>
Eğer bir paketin ve bağımlılıklarının kaynak kodlarını indirmek istiyor fakat kurmak istemiyorsanız,  <c>--fetchonly</c> seçeneğini kullanın  
(kısaca <c>-f</c>  kullanabilirsiniz):
</p>
        <pre caption="gnumeric kaynaklarını indirmek">
# <i>emerge --fetchonly gnumeric</i>
</pre>
        <p>
Eğer <c>emerge</c>  kaynakları nerden indirdiğini görmek istiyorsanız,<c> --fetchonly</c> ve  <c>--pretend</c>  seçeneklerini kullanın:
</p>
        <pre caption="gnumeric kaynağının URL'sini görmek">
# <i>emerge --fetchonly --pretend gnumeric</i>
</pre>
        <p>
Aynı zamanda paketlerin detaylı sürümlerinide yükleyebilirsiniz. Örnek olarak, gnumeric'in 1.2 sürümünden eski bir sürümünü yüklemek istiyorsunuz ( herhangi garip bir sebeple :) ) şunu yazmalısınız:</p>
        <pre caption="Detaylı gnumeric sürümü yüklemek">
# <i>emerge "&lt;gnumeric-1.2"</i>
</pre>
        <p>
Diğer olasılıklar tabiki "&gt;"(sonraki sürüm) ve "="(belirtilen sürüm).
</p>
      </body>
    </subsection>
    <subsection>
      <title>Hazır Paketleri Yüklemek</title>
      <body>
        <p>
Hazır paket yüklemek istediğiniz zaman <c>--usepkg</c> seçeneğini ( kısaca <c>-k</c>  ) kullanabilirsiniz. Bu eğer paket ve sürüm uyuşuyorsa <path>/usr/portage/packages/All </path><e>dizini altındaki mevcut derlenmiş paketi kullanacak.</e></p>
        <pre caption="gnumeric için hazır paket yüklemek">
# <i>emerge --usepkg gnumeric</i>
</pre>
        <p>
Eğer derlenmiş paket yüklemek istiyorsanız, buna karşılık sürüm uyuşmuyorsa, 
<c>--usepkgonly</c> (kısaca <c>-K</c> ) kullanabilrisiniz.
</p>
        <pre caption="gnumeric için hazır paket yüklemek">
# <i>emerge --usepkgonly gnumeric</i>
</pre>
        <p>
Eğer sisteminizde henüz hazır paket bulunmuyorsa <c>emerge</c>  bu işi <c>PORTAGE_BINHOST</c>
değişkennde belirtilmiş bir yansıdan indirerek yapabilir (değişken <path>/etc/make.conf</path> dosyasının içindedir).
</p>
        <p>
 Bu paket sisteminizde yoksa ve hazır paketi indirmek istiyorsanız <c>--getbinpkg</c> (kısaca <c>-g</c>  ) kullanabilirsiniz:
</p>
        <pre caption="Downloading and installing a prebuilt package for gnumeric">
# <i>emerge --getbinpkg gnumeric</i>
</pre>
        <p>
Bu işlem paketi ve paket bilgilerini bağımlılıklarıyla beraber sisteminize indirecek ve kuracak. Eğer paketle birlikte hangi bağımlılıkların yüklendiğini görmek için, <c>--pretend </c>seçeneğini kullanın (kısaca <c>-p</c>):</p>
        <pre caption="gnumeric için yüklenen bağımlılıkları görmek">
# <i>emerge --getbinpkg --pretend gnumeric</i>
</pre>
        <p>
Aynı zamanda sisteminizde bulunan hazır paketi <e>kullanmadan</e> ve yerel sisteminiz hakkında bilgi <e>toplamadan</e> bir hazır paket (ve paket bilgisi) indirmek için, <c>--getbinpkgonly</c> seçeneğini kullanabilirsiniz (kısaca <c>-G</c>):</p>
        <pre caption="Yerel bilgileri kullanmadan hazır paket yüklemek">
# <i>emerge --getbinpkgonly gnumeric</i>
</pre>
        <p>
Özel paket sürümleride yükleyebilirsiniz. Örnek olarak, gnumeric'in 1.2 versiyonundan eski bir versiyonunu kullanmak istiyorsanız şunu yazmalısınız:
</p>
        <pre caption="Özel gnumeric sürümü yüklemek">
# <i>emerge --usepkg "&lt;gnumeric-1.2"</i>
</pre>
        <p>
Diğer olasılıklar tabiki "&gt;"(sonraki sürüm) ve "="(belirtilen sürüm).
</p>
      </body>
    </subsection>
    <subsection>
      <title>Bağımlılıklarla Çalışmak</title>
      <body>
        <p>
Portage bağımlılıklarla başa çıkmak için geniş bir destek sunar. Aslında bunu düşünmenize pek gerek yok (bağımlılıklar otomatik olarak Portage tarafından halledilir) fakat bazı kullanıcılar bağımlılıklar için <c>emerge</c> ile nasıl çalışacaklarını bilmek isteyebilirler.</p>
        <p>
Örnek olarak, Portage'in bir paketle beraber yüklediği bağımlılıkları görmek için <c>--emptytree</c> seçeneğini kullanabilirsiniz (kısaca <c>-e</c>). Bir paketin bağımlılıklarını tam bir şema olarak görmek için <b>--pretend</b> seçeneğiniyle beraber kullanılması yararlıdır. <c>--pretend</c> seçeneği olmazsa <c>emerge</c> listelenen paketleri (yeniden) derler.

 
</p>
        <pre caption="gnumeric paketinin tüm bağımlılıklarını görmek">
# <i>emerge --emptytree --pretend gnumeric</i>
</pre>
        <p>
Bir başka argüman <c>--nodeps</c> seçeneğidir. Bu seçenek bağımlılıkları kurmadan paketi yüklemenizi sağlar.
</p>
        <pre caption="Bağımlılıklar olmaksızın gnumeric yüklemek">
# <i>emerge --nodeps gnumeric</i>
</pre>
        <p>
<c>--nodeps</c> seçeneğinin tersi <c>--onlydeps</c> seçeneğidir. Bu seçenek istediğini paketin tüm bağımlılıklarını yükler fakat paketin kendisini yüklemez:</p>
        <pre caption="gnumeric paketinin bağımlılıklarını yüklemek">
# <i>emerge --onlydeps gnumeric</i>
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Sisteminizi Güncellemek</title>
      <body>
        <p>
Portage sistemi güncellemek için iki anahtar kelimeyi tanıyor:  <e>system</e> ve <e>world</e>. Eğer <e>stage3</e> kullanmadıysanız zaten bunlardan birini gördünüz. Bulunan şeyleri yenilemek için: <e>system</e> çalışan bir Gentoo sistemi için gereken <e>core</e> paketlerinin bir koleksiyonunu yapar.


</p>
        <p> <e>world</e>  anahtar kelimesi ise sizin kurduğunuz <e>system</e> üzerine kurulmuş paketleri edinir.  Diğer bir değişle, <c>emerge &lt;paket-ismi&gt;</c> şeklinde yüklediğiniz her paket, <e>world</e> dosyasına (<path>/var/cache/edb/world</path>) kaydedilir. Bağımlılıklar <e>world</e> dosyasının bir parçası değildir, fakat bunu daha sonra halledeceğiz.<e></e></p>
        <p>
Eğer sistem paketlerini güncellemek istiyorsanız,<c> --update </c>seçeneğini kullanın (kısaca <c>-u</c>):

</p>
        <pre caption="Sistem paketlerini güncellemek">
# <i>emerge --update system</i>
</pre>
        <p>
Aynı işlem world paketleri içinde kullanılabilir.</p>
        <pre caption="Yüklediğiniz sistemi güncellemek">
# <i>emerge --update world</i>
</pre>
        <p>
Tekrar, eğer <c>emerge</c>'in güncelleyeceği dosyaları görmek istiyorsanız, <c>--pretend</c> seçeneğini <c>--update</c> seçeneğiyle beraber kullanabilirsiniz:</p>
        <pre caption="Yüklediğiniz sistemi güncelleme sırasında yüklenecek dosyaları görmek">
# <i>emerge --pretend --update world</i>
<comment>(Some output removed to improve readability)</comment>
[ebuild     U ] net-misc/wget-1.9-r1 [1.9] 
[ebuild     UD] media-video/dvdauthor-0.5.0 [0.5.3] 
[ebuild     U ] net-analyzer/ethereal-0.9.16 [0.9.14] 
</pre>
        <p>
Bu adımla bir harf (ya da harf kombinasyonları) farkedeceksiniz. Bu size paket hakkında daha fazla bilgi verecek:</p>
        <ul>
          <li>
    <e>B</e> (blocks) Solda listelenen paket sağda listelenen paketin yüklenmesini blokluyor(engelliyor).</li>
          <li>
    <e>N</e> (new) Bu paket sizin sisteminizde yeni ve ilk defa kurulacak.</li>
          <li>
    <e>R</e> (reemerge) Bu paket yeni değil fakat yeniden derlenmesi gerekli.</li>
          <li>
    <e>F</e> (fetch) Bu paketin kaynağını elle indirmeniz gerekiyor (örnek olarak, lisans sorunları sebebiyle).</li>
          <li>
    <e>U</e> (update) Bu paket sisteminizde mecvut fakat güncellenecek.  </li>
          <li>
    <e>UD</e> (downgrade) Bu paket sisteminizde mevcut fakat eski bir sürümle değiştirilecek.</li>
          <li>
    <e>U-</e> (slot warning) Yüklediğiniz paket paket olarak listelenmekte ancak başka bir versiyonla birlikte çalışamaz, ama güncel olan yapabilir. Güncel olan yüklenecek ve eski olan kaldırılacak.</li>
        </ul>
        <p>
Bazı sebeplerden dolayı, bir güncelleme eski paket yükleyek anlamına gelebilir. Eğer bunun olmasını istemiyorsanız, <c>--upgradeonly</c> seçeneğini kullanmalısınız (kısaca <c>-u</c>):
</p>
        <pre caption="Yüklediğiniz sistemi güncellemek">
# <i>emerge --update --upgradeonly world</i>
</pre>
        <p>
<e>Tabiki biz system ve world paketleri hakkında konuşuyoruz, fakat aynı işlemi seçtiğiniz bir paket içinde kullanabilirsiniz.</e></p>
      </body>
    </subsection>
    <subsection>
      <title>Yazılım Kaldırmak</title>
      <body>
        <p>
Eğer sisteminizden bir yazılımı kaldırmak istiyorsanız, <c>unmerge </c>seçeneğini kullanabilirsiniz (kısaca <c>-C</c>  ):
</p>
        <pre caption="Yazılım kaldırmak">
# <i>emerge unmerge gnumeric</i>
</pre>
        <p>
Eğer bir kaldırma işlemini test etmek ama uygulamak istemiyorsanız, gene <c>--pretend</c> seçeneğini kullanabilirsiniz:</p>
        <pre caption="Yazılım kaldırma işlemini test etmek">
# <i>emerge --pretend unmerge gnumeric</i>
</pre>
        <warn>
Portage, kaldırmak istediğiniz yazılım başka bir yazılımın bağımlılığıysa bunu farkedemez. Aynı zamanda <e>sistemin</e> bir parçasıysa da sizi uyarmaz, örn: sistemin doğru fonksiyonelliği için gerekli bir core uygulaması!
</warn>
        <p>
unmerge işlemi başladığında pakete ait olan dosya isimlerinin yazıldığı uzun bir liste göreceksiniz. Bazı dosya isimlerinin sol tarafında işaretler göreceksiniz. Bu işaretler <c>!mtime</c>, <c>!empty</c>, ve <c>cfgpro</c>
işaretleridir ve paket kaldırıldığı halde bu dosyaların nie kaldırılmadığının sebebini açıklar. Listede bulup bu işaretlerin bulunmadığı dosya isimleri sistemden başarıyla kaldırılmıştır. Bu iç işaret şu nedenleri açıklar:</p>
        <ul>
          <li>
    <c>!mtime</c> : Bu dosya muthemelen siz ya da bir araç tarafından, yüklendikten sonra değiştirilmiş.</li>
          <li>
    <c>!empty</c> : Listelenen dizin boş değil.</li>
          <li>
    <c>cfgpro</c> : Bu dosya korumalı bir dizin içinde ve güvenlik için dokunulmayacak.</li>
        </ul>
      </body>
    </subsection>
  </section>
  <section>
    <title>Mevcut Yazılımlar</title>
    <subsection>
      <title>ARCH mı, Değil mi?</title>
      <body>
        <p>
Gentoo paketlerini <e>ARCH</e> ve
<e>~ARCH</e> adında iki olası biçime göre çağırır. Bu biçim kullandığınız mimariye bağlıdır. Diğer bir değişle, x86 temelli bir sistemde <e>x86</e> ve
<e>~x86</e>, ppc temelli sistemde<e>ppc</e> ve  <e>~ppc</e>  vb...
</p>
        <p> <e>~ARCH</e> biçimi paketin tam olarak test edilmediğini ve henüz ARCH kategorisine alınamayacağını belirtir. ~ARCH paketleri genellikle buglardan arındığında ve uzun süre bu şekilde devam edebildiğinde  <e>ARCH</e> sınırına alınır. </p>
        <p>
Sisteminiz varsayılan olarak <e>ARCH</e> paketlerini kullanacaktır. Eğer sınırda yaşamayı seviyor, kırık paketleri kullanmayı kafaya takmıyorsanız ve  <uri link="http://bugs.gentoo.org">bugs.gentoo.org</uri>, adresine bug raporu göndermekten hoşlanıyorsanız<e>~ARCH</e>  seçeneğini kullanabilirsiniz. Eğer<e>~ARCH</e>kullanan bir sisteme geçmek istiyorsanız, <c>ACCEPT_KEYWORDS</c>  değişkenini <path>/etc/make.conf</path> dosyasından değiştirin (tekrar: x86 temelli sistem için <e>~x86</e>, vb.).
</p>
        <p>
Şunu not alın; <e>ARCH</e> 'dan <e>~ARCH</e>biçimine dönmek abes olmaktan uzak. 
</p>
        <p>
Eğer sisteminizi şimdi güncellemek istiyorsanız, farkedeceğiniz üzere bir <e>çok paket</e> güncellenecek!</p>
      </body>
    </subsection>
    <subsection>
      <title>Maskelenmiş Paketler</title>
      <body>
        <p>
Bir paket yüklemek istediğiniz zaman aşağıdaki gibi bir mesajla karşılaşabilirsiniz:
</p>
        <pre caption="Maskelenmiş paketler hakkında mesaj">
Calculating dependencies   
!!! <comment>all ebuilds that could satisfy </comment>&lt;your package&gt;<comment> have been masked.</comment>
</pre>
        <p>
Bir paket iki sebepten dolayı maskelenir:</p>
        <ol>
          <li>Siz <e>ARCH</e> kullanıyorken paket <e>~ARCH</e> biçimi olabilir.<e></e></li>
          <li>Paket açıkca sabit-maskeleme biçiminde olabilir.</li>
        </ol>
        <p>
Eğer paket birinci sebepten dolayı maskelenmişse ve siz bunu <e>gerçekten</e> kurmak istiyorsanız (neden <e>ARCH</e> sınıfında olmayışının sebebini bilerek), geçici olarak <e>~ARCH</e> biçimini kullanabilirsiniz:</p>
        <pre caption="Geçici olarak ~ARCH paketlerini kabul etmek">
# <i>ACCEPT_KEYWORDS="~x86" emerge gnumeric</i>
</pre>
        <p>
Bir paket <path>/usr/portage/profiles/package.mask</path> dosyasının içinde listelendiyse sabit maskelenmiştir. Eğer bu dosyayı okursanız breaberinde sabit maskelenmesinin sebebinide okuyabilirsiniz. Tüm bunlara rağmen paketi yüklemek istiyorsanız (sürekli "sisteminizi kırar", "diğer paketleri kırar", "ciddi olarak test edilmesi gerekli" diyerek başınızı ağrıtmamıza rağmen), <path>/etc/portage/package.unmask </path>dosyası oluşturun ve paketin ismini bu dosyaya listeleyin (aynı şekilde <path>/usr/portage/profile/package.mask</path> içindede yapın).
</p>
        <p>
Portage şemasını güncellediğinizde <path>/usr/portage/package.mask</path> dosyasını değiştirmeyin. Eğer bir dosyayı sabit maskelemek isterseniz <path>/etc/portage/package.mask</path> dosyası oluşturun ve paketin ismini içine listeleyin (aynı işlemi tersi içinde yapabilirsiniz).

</p>
        <!--
<p>
Another trick to circumvent the "masked package" problem is to install the
package using the full path. This will ignore both the <c>ACCEPT_KEYWORD</c> 
settings and the <path>package.mask</path> listing.
</p>

<pre caption="Installing a package without checking for stadium / masking">
# <i>emerge /usr/portage/app-office/gnumeric/gnumeric-1.2.0.ebuild</i>
</pre>
-->
      </body>
    </subsection>
    <subsection>
      <title>Bloklanmış Paketler</title>
      <body>
        <p>
Eğer ekranda aşağıdaki hatayı görürdüğünüz bir durumla karşılaştınız:
</p>
        <pre caption="Blocking package">
[blocks B     ] gnome-base/bonobo-activation (from pkg gnome-base/libbonobo-2.4.0) 
</pre>
        <p>
Bu verilen örnekte, <c>bonobo-activation</c> paketi <c>libbonobo</c> paketinin yüklenmesini blokluyor. Bu durumdan kurtulmak için, <c>bonono-activation</c> paketini kaldırıp devam edin:

</p>
        <pre caption="Bloklama durumundan kurtulmak">
# <i>emerge unmerge bonobo-activation</i>
</pre>
      </body>
    </subsection>
  </section>
</sections>
