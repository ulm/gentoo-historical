<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<sections>
  <section>
    <title>Ayar Dosyalarının Korunması</title>
    <subsection>
      <title>Korumak?</title>
      <body>
        <p>
Portage'a "korunan dosyalar" konsepti eklenmiştir. Bunun anlamı , bir yazılımı güncellediğinizde belirli dosyaların yeni sürümlerini hemen eskisinin üstüne yazmak yerine kullanıcıyı yeni bir sürümün olduğuna dair uyarmasıdır. Bu , ayar dosyaları için ( <path>/etc</path> içinde duranlar) tabii ki çok kullanışlıdır. .
</p>
        <p>
Bu dosyaların üstüne yazılmak yerine ,  yerine orjinal dosyanın adı gelecek şekilde <path>._cfg0000_&lt;name&gt;</path> adında dosyalar. Bundan sonra dosyaların arasındaki farkları düzeltmek kullanıcıya kalmış olur. Ayrıca işlemi kolaylaştırmak için <c>etc-update</c> komutu da kullanılabilir. <c>etc-update </c>üstünde daha sonra duracağız. 
</p>
      </body>
    </subsection>
    <subsection>
      <title>CONFIG_PROTECT Tanımlaması</title>
      <body>
        <p>
Portage , dosya tabanlı değil de klasör tabanlı bir koruma sunar. CONFIG_PROTECT , tüm korunan dosyaların listesini verir. Listeki dizinlerdeki tüm alt-dizinlerde aynı zamanda korunur. <c>CONFIG_PROTECT</c> , <path>/etc/make.globals</path> içinde tanımlanmıştır ama değiştirmek isterseniz , <path>/etc/make.conf</path> içinde tanımlama yapmanız gerekir( tutarlı olmak için tüm portage ayarlamalarında <path>/etc/make.conf</path> kullanılır). 
</p>
        <pre caption="CONFIG_PROTECT ayarı örneği">
CONFIG_PROTECT="/etc /usr/share/config /usr/kde/3.1/share/config"
</pre>
        <p>
Sadece belirli bir dizini koruyup alt dizinlerini korumak istemiyorsanız , bu dizinleri <c>CONFIG_PROTECT_MASK</c> değişkeninde belirtebilirsiniz. Bu değişken de aynı şekilde <path>/etc/make.globals </path>içinde tanımlanmış ama değişiklik yapabilmek için <path>/etc/make.conf</path> dosyasında tanımlanması gerekli : </p>
        <pre caption="CONFIG_PROTECT_MASK ayarı örneği">
CONFIG_PROTECT_MASK="/etc/init.d"
</pre>
        <p>
Ayar dosyalarının korunması hakkında daha çok bilgi , <c>emerge</c>'in online yardımında bulunabilir:
</p>
        <pre caption="Dosya Koruması Hakkında Bilgi Alım örneği">
# <i>emerge --help config</i>
</pre>
      </body>
    </subsection>
    <subsection>
      <title>etc-update</title>
      <body>
        <p>
<c>etc-update</c>  aracı ,<path>._cfg0000_&lt;name&gt;</path>  dosyalarının birleştirmesinde yardı eder.Etkileşimli bir birleştirme işlemi sunmasının yanında önemsiz değişiklikleri de otomatik yapar.
</p>
        <p><c>etc-update</c>  'i çalıştırmak oldukça basit bir iş: </p>
        <pre caption="etc-update kullanımı">
# <i>etc-update</i>
</pre>
        <p>
Önemsiz değişiklikler yapıldıktan sonra , güncellenmeyi bekleyen korunan dosyaların bir listesiyle ve en altta da geçerli seçeneklerle karşılaşacaksınız:
</p>
        <pre caption="etc-update options">
Please select a file to edit by entering the corresponding number.
              (-1 to exit) (-3 to auto merge all remaining files)
                           (-5 to auto-merge AND not use 'mv -i'): 
</pre>
        <p>
Eğer  <c>-1</c> girerseniz, <c>etc-update</c> hiçbir değişiklik yapmadan doğrudan çıkar. <c>-3</c> veya <c>-5</c> seçimlerinde ise, listelenmiş <e> bütün</e> ayar dosyalarının üstüne yenileri yazılır. O yüzden otomatik olarak güncellenmemesini istediğiniz ayar dosyalarını seçmek çok önemli. Bu iş te , ilgili ayar dosyasının sol tarafındaki numarasını girmekten ibaret.
</p>
        <p>
Örnek olarak biz <path>/etc/pear.conf</path> dosyasını seçtik:
</p>
        <pre caption="Belirli bir ayar dosyasını güncellemek">
Beginning of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
<comment>[...]</comment>
End of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
1) Replace original with update
2) Delete update, keeping original as is
3) Interactively merge original with update
4) Show differences again
</pre>
        <p>
Artık iki dosyanın arasındaki farkları görebilirsiniz. Eğer güncellenmiş ayar dosyasının sorunsuz olarak çalışacağından eminseniz <c>1</c> seçin. Eğer güncellenmiş dosyanın gereksiz veya herhangi yeni, kullanışlı bilgi sağladığını düşünmüyosanız <c>2</c> seçin. Eğer şu anki ayar dosyasını etkileşimli olarak güncellemek isterseniz  <c>3</c> seçin. 
</p>
        <p>
Etkileşimli birleştirmeyi çok detaylandırmaya gerek yok. Tam olması için , dosyaları etkileşimli olarak birleştirirken gerekli olan tüm komutları listeleyeceğiz. İki satır (orjinal dosya , teklif edilen dosya) ve aşağıdaki komutları girebileceğiniz bir komut satırı ile karşılaşacaksınız:
</p>
        <pre caption="Commands available for the interactive merging">
ed:     Edit then use both versions, each decorated with a header.
eb:     Edit then use both versions.
el:     Edit then use the left version.
er:     Edit then use the right version.
e:      Edit a new version.
l:      Use the left version.
r:      Use the right version.
s:      Silently include common lines.
v:      Verbosely include common lines.
q:      Quit.
</pre>
        <p>
Önemli dosyaların güncellenmesini bitirdikten sonra artık diğer tüm dosyaları otomatik olarak güncelleyebilirsiniz. Eğer  <c>etc-update</c>  güncellenebilecek başka bir dosya bulamazsa , çıkar. </p>
      </body>
    </subsection>
  </section>
  <section>
    <title>Ağ Ayarları</title>
    <subsection>
      <title>Yansılar</title>
      <body>
        <p>
Gentoo hızlanarak popüler hale geldikçe , yansıları kullanmakta önem kazanıyor. Portage , yansılar için üç değişken kullanır : bir tane rsync yansıları için (Portage Ağacınızı senkronize etmek için), bir tane distfiles için (Kaynak kodu için), ve bir tanede önceden hazırlanmış paketler için.
</p>
        <p>
Varolan tüm distfiles yansılar<uri link="/main/en/mirrors.xml">Gentoo mirrors page</uri> adresnde bulunabilir.Sisteminizdeki yansı işlemlerini kolaylaştırmak için <c>mirrorselect</c>  komutunuda kullanabilirsiniz. Ama önce değişkenleri bir görelim...
</p>
        <p>
Kullanmak istediğiniz syncs aslında   <c>SYNC</c> değişkeninin içinde tutulur. Örneğin <uri>rsync://rsync.namerica.gentoo.org/gentoo-portage</uri> adresini kullanmak için bunu <path>/etc/make.conf </path> içinde tanımlamamız gereklidir:
</p>
        <pre caption="/etc/make.conf için SYNC'i tanımlamak">
SYNC="rsync://rsync.namerica.gentoo.org/gentoo-portage
      rsync://rsync.samerica.gentoo.org/gentoo-portage"
</pre>
        <p> <c>GENTOO_MIRRORS</c>  değişkeninde , kullanmak isteyebileceğiniz distfiles yansıları tutulur. Örneğin
<uri>ftp://ibiblio.org/pub/Linux/distributions/gentoo</uri> adresini ilk seçenek ve <uri>http://www.gtlib.cc.gatech.edu/pub/gentoo</uri> adresini ikinci seçenek olarak kullanmak isterseniz bunu <path>/etc/make.conf</path> içinde tanımlamanız gerekir : 
</p>
        <pre caption="/etc/make.conf içinde GENTOO_MIRRORS'ı tanımlamak">
GENTOO_MIRRORS="ftp://ibiblio.org/pub/Linux/distributions/gentoo
                http://www.gtlib.cc.gatech.edu/pub/gentoo"
</pre>
        <p> <c>PORTAGE_BINHOST</c> eğişkeninde , kullanmak isteyebileceğiniz önceden derlenmiş paketler tutulur. Örneğin , 
<uri>ftp://login:pass@grp.mirror.site/pub/grp/i686/athlon-xp</uri>, adresini kullanmak isterseniz bunu<path>/etc/make.conf</path> dosyasında tanımlamanız gereklidir:
</p>
        <pre caption="etc/make.conf içinde PORTAGE_BINHOST'u tanımlamak">
PORTAGE_BINHOST="ftp://login:pass@grp.mirror.site/pub/grp/i686/athlon-xp"
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Mirrorselect</title>
      <body>
        <p><c>mirrorselect</c> kullanmak istiyorsanız önce kurmalısınız (tabii daha önce kurmadıysanız).</p>
        <pre caption="mirrorselect kurulması">
# <i>emerge mirrorselect</i>
</pre>
        <p>
Artık <c>mirrorselect</c> yansıları otomatik olarak seçmesi veya sizin bir listeden elle seçmeniz gibi iki seçeneğiniz mevcut. Mirrorselect'in nasıl kullanılacağı hakkında bilgi için , komut satırından <c>mirrorselect</c>'i çalıştırın - kısa bir bakış sunar. 
</p>
        <pre caption="mirrorselect çalıştırmak">
# <i>mirrorselect</i>
</pre>
      </body>
    </subsection>
    <subsection>
      <title>İndirmek (fetching)</title>
      <body>
        <p>
Portage'ın arşivleri hangi programla indireceğini <c>FETCHCOMMAND</c> ve <c>RESUMECOMMAND</c> ayarlarında belirtebilirsiniz. <path>/etc/make.conf</path> ve  
<path>/etc/make.globals</path> dosyaların birkaç örnek mevcut. Portage'da varsayılan olarak <c>wget</c> kullanılır : 
</p>
        <pre caption="Varsayılan FETCHCOMMAND &amp; RESUMECOMMAND">
FETCHCOMMAND="/usr/bin/wget -t 5 --passive-ftp -P \${DISTDIR} \${URI}"
RESUMECOMMAND="/usr/bin/wget -c -t 5 --passive-ftp -P \${DISTDIR} \${URI}"
</pre>
        <p><c>${DISTDIR}</c> değişkeni , indirilen dosyaların saklanacağı dizin adıyla değiştirilirken (<path>/usr/portage/distfiles</path>), <c>${URI}</c>  değişkeni Portage'ın indirmesi gerekn dosyanın adresi ile değiştirilir.
</p>
        <p>
Portage, varsayılan olarak <c>wget</c> kullandığı için <c> http_proxy</c> ve <c>ftp_proxy</c> (küçkharf ile yazıldığına dikkat edin)tanımlanarak vekil sunucu (proxy) kullanılabilir. Bu işi <path>/etc/make.conf</path> dosyasının içindende yapabilrisiniz fakat <c>http_proxy</c> ve <c>ftp_proxy</c>  değişkenleri başka programlar tarafından da kullanılılabiliyor. Bu yüzden <path>/etc/make.conf</path>  yerine geneş bir yol kullanmanızı tavsiye ederiz. Sistem çapında değişkenleri nasıl tanımlayabileceğinizi öğrenmek için <uri link="?part=2&amp;chap=6">Ortam Değişkenleri</uri> bölümünü okuyun.</p>
      </body>
    </subsection>
    <subsection>
      <title>"rsync" Ayarlamak</title>
      <body>
        <p>
<c>rsync</c> ,  <c>emerge sync</c>  tarafından Portage Ağacını güncellemek için kullanılır. Portage tarafından kullanılan ve Rsync'in çalışmasını değiştiren üç tane değişken var :
<c>RSYNC_EXCLUDEFROM</c>, <c>RSYNC_RETRIES</c> ve <c>RSYNC_TIMEOUT</c>.
</p>
        <p>
Ebuild'lerin portage tarafından otomatik olarak güncelleştirilip kaldırılmasını "engellemenin" bir yolu <c>RSYNC_EXCLUDEFROM</c>  değişkenidir. <c>rsync</c>  belirli dosyaları dışarıda bırakmak için kullandığı dosyalardan birine yazılabilir ve varsayılan olarak <path>/etc/portage/rsync_excludes</path> dosyasındadır.Dikkatli olunmadığında bağımlılıkları bozabilecek bir yol olduğundan kullanılması tavsiye *edilmez*. Tavsiye edilen yol olan <c>PORTDIR_OVERLAY</c> değişkeninden daha sonra bahsedeceğiz. Daha çok bilgi için lütfen rsync man sayfasını okuyun. </p>
        <pre caption="RSYNC_EXCLUDEFORM değişkeni">
RSYNC_EXCLUDEFROM="/etc/portage/rsync_excludes"
</pre>
        <p><c>"rsync"</c>  başarılı olamadığında , varolan diğer sunucuya geçmeden önce birkaç kere deneme yapar. Bu sayı <c>RSYNC_RETRIES</c>  tanımlıdır ve varsayılan olarak<c>3</c>'tür:
</p>
        <pre caption="RSYNC_RETRIES=&quot;3&quot; ">
RSYNC_RETRIES="3"
</pre>
        <p>
Eğer (çok) yavaş bir rsync sunucusu kullanıyorsanız, <c>rsync</c> ver akışı durursa zaman aşımı (time-out) verebilir. Zaman aşımını bekleme süresi <c>RSYNC_TIMEOUT</c> değişkeninde tanımlıdır ve varsayılan olarak  <c>180</c> değeri atanmıştır:
</p>
        <pre caption="RSYNC_TIMEOUT değişkeni">
RSYNC_TIMEOUT="180"
</pre>
      </body>
    </subsection>
  </section>
  <section>
    <title>Dizin Yolları</title>
    <subsection>
      <title>Giriş</title>
      <body>
        <p>
Değişik işlemler için kullanılan dizinler ve Portage'ın ihtiyacı olduğu dosyalarda dahil olmak üzere Portage hakkındaki herşey ayarlanabilir. Varsayılan yolları (<path>/etc/make.globals</path> dosyasında tanımlandığı üzere) değiştirmek için <path>/etc/make.conf</path> dosyasında - başka nerede olabilir ki? :) - doğru değişkenleri tanımlamalısınız. 
</p>
        <warn>
Eğer herhangi bir değişkeni değiştiriyorsanız yazdığınız yolun sonuna <e>*kesinlikle*</e><c> /</c> eklemeyin!<path></path>
</warn>
      </body>
    </subsection>
    <subsection>
      <title>Portage Ağacı</title>
      <body>
        <p>
Portage Ağacının yolu <c>PORTDIR</c>  değişkeninde tanımlıdır. Varsayılan olarak <path>/usr/portage</path> yolu tanımlanmıştır:
</p>
        <pre caption="PORTDIR değişkeni">
PORTDIR="/usr/portage"
</pre>
        <p>
Yerel bir Portage ağacını , "resmi" sürüme yakın tutmak istiyorsanız <c>PORTDIR_OVERLAY</c> değişkenini tanımlamalısınız. Bu değişkende listelenen dizin(ler) ,  <c>emerge sync</c>   olayından etkilenmezler : buralardaki ebuildler güncellenmez veya kaldırılmazlar ama Portage Ağacına dahildir. </p>
        <pre caption="PORTDIR_OVERLAY değişkeni">
PORTDIR_OVERLAY="/usr/local/portage"
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Distfiles</title>
      <body>
        <p>
İndirilen kaynak kodlarının (distfiles denen) yolları  <c>DISTDIR</c> değişkeninde tanımlıdır. Varsayılan olarak <path>${PORTDIR}/distfiles</path> yolunu gösterir : 
</p>
        <pre caption="DISTDIR değişkeni">
DISTDIR="${PORTDIR}/distfiles"
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Paketler ve RPM'ler</title>
      <body>
        <p>
Önceden derlenmiş paketlerin yolları ise <c>PKGDIR</c> değişkeninde tanımlıdır. Varsayılan olarak  <path>${PORTDIR}/packages</path> olarak belirlenmiştir:
</p>
        <pre caption="PKGDIR değişkeni">
PKGDIR="${PORTDIR}/packages"
</pre>
        <p>
RPMlerin (evet , bazı paketler RPM olarak mevcut) yolları ise <c>RPMDIR</c> değişkeni sorumludur. Varsayılan olarak <path>${PORTDIR}/rpm</path> belirtilmiştir:
</p>
        <pre caption="RPMDIR değişkeni">
RPMDIR="${PORTDIR}/rpm"
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Gecici Portage Dosyaları</title>
      <body>
        <p>
Portage , ebuildleri oluşturmak için geçici bir dizin kullanır. Bu dizinin yolu <c>PORTAGE_TMPDIR</c> değişkeninde tanımlıdır ve varsayılan olarak <path>/var/tmp</path> yoludur:
</p>
        <pre caption="PORTAGE_TMPDIRdeğişkeni">
PORTAGE_TMPDIR="/var/tmp"
</pre>
        <p>
Portage varsayılan olarak , 
<c>PORTAGE_TMPDIR</c> içinde bir portage dizini oluşturur. Bu ise <c>BUILD_PREFIX</c>  değişkeninde tanımlıdır:
</p>
        <pre caption="BUILD_PREFIX değişkeni">
BUILD_PREFIX="${PORTAGE_TMPDIR}/portage"
</pre>
        <p>
Bu yolu değiştirmeye karar verirseniz , geçici dizini yeterli disk alanına sahip bir yere koyduğunuzdan emin olun : büyük yazılım paketlerini derlerken dizin , 2GB+ olabiliyor.</p>
      </body>
    </subsection>
    <subsection>
      <title>Kayıt Tutma (Logging)</title>
      <body>
        <p><c>PORT_LOGDIR</c> özel bir değişken olmakla birlikte varsayılan olarak tanımlı değildir. Eğer tanımlarsanız Portage , her ebuild için verilen dizinde bir kayıt dosyası oluşturur : </p>
        <pre caption="PORT_LOGDIR değişkeni">
PORT_LOGDIR="/var/log/portage"
</pre>
      </body>
    </subsection>
  </section>
  <section>
    <title>Diğer Portage Ayarları</title>
    <subsection>
      <title>Caziplik Değeri</title>
      <body>
        <p>
Portage , caziplik değerine (Önceliğe benzer bir değer) derlemeyi destekliyor. Eğer Portage'ın paketleri daha yüksek caziplik-değerinde derlemesini (derleme sırasında sistemin ulaşılbilirliğini arttırır fakat derleme süresini uzatır) istiyorsanız <c>PORTAGE_NICENESS</c> değişkenini pozitif bir sayı olarak tanımlayın : </p>
        <pre caption="PORTAGE_NICENESS değişkeni">
PORTAGE_NICENESS="3"
</pre>
      </body>
    </subsection>
    <subsection>
      <title>SLOT'lanmış Paketler ve Otomatik Temizlik</title>
      <body>
        <p>
Bazı durumlarda bir paketin(kütüphaneler dahil olmak üzere) birden çok sürümünün sistemde varolmasını isteyebilirsiniz. Portage bunu , ebuildlerdeki <c>SLOT</c> değişkeni ile destekler. Bir kullanıcı olarak <c>SLOT</c>'lamanın nasıl çalıştığını bilmek zorunda değilsiniz ama bunun desteklendiğini bilmeniz önemli. </p>
        <p>
Eğer bir paketin daha yeni bir sürümünü kuruyorsanız , Portage bu paket için tanımlı olan 
<c>SLOT</c> değerine bakar. Eğer bu değer her iki pakette (eski ve yeni) farklıysa , eski pakete dokunulmaz.</p>
        <p>
Bununla birlikte  <c>SLOT</c>  değişkeni aynıysa (genellikle olan durum) , varsayılan olarak eski paket kaldırılır. Bu kaldırma işleminin kullanıcı tarafından kesilebilir bir hale getirilmesi için Portage , belli bir sayıdan geriye doğru sayar. Bu değer <c>CLEAN_DELAY</c> değişkeninde tanımlıdır ve varsayılan olarak <c>5</c> saniyedir:
</p>
        <pre caption="CLEAN_DELAY değişkeni">
CLEAN_DELAY="5"
</pre>
        <p>
Eğer Portage'nin otomatik olarak eski sürümleri silmesini İSTEMİYORSANIZ  <c>AUTOCLEAN</c>  değişkenine <c>no</c> değerini atayın:
</p>
        <pre caption="AUTOCLEAN değişkeni">
AUTOCLEAN="no"
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Derlemeyle İlgili Değişkenler</title>
      <body>
        <p>
Buraya kadar birçok değişken gördük ama daha bitmedi. Gentoo kuranlar , derleyicinin paketleri derleyip optimize etmesi için kullanılan  <c>CHOST</c>, <c>CFLAGS</c>
ve <c>CXXFLAGS</c>  değişkenlerini bilir.</p>
        <p>
Bu değişkenler hakkında daha çok bilgi<c> gcc</c>  bilgi sayrafından veya <uri link="http://www.gnu.org/software/gcc/onlinedocs/">GCC Online Manuals</uri> sayfasında online olara bulunabilir.
</p>
        <pre caption="CHOST,CFLAGS ve CXXFLAGS bilgilerini almak">
# <i>info gcc</i>
<comment>(Select "Invoking gcc")</comment>
<comment>(Select "Optimize options")</comment>
</pre>
        <p>
Eğer  <c>DEBUGBUILD</c>  tanımlıysa Portage , debug işini kolaylaştırmak için yapılan tüm binary kütüphanelerin gösterilmesini gerçekleştirmez. Bu sisteminizi yavaşlatıp , dosya boyutunu büyütür. 
</p>
        <pre caption="DEBUGBUILD değişkeni">
<comment># Do not set this to "false"; instead remove the line. Portage does not</comment>
<comment># check the value, it just checks if the variable is defined.</comment>
DEBUGBUILD="true"
</pre>
        <p> <c>MAKEOPTS</c> değişkeni <c>make</c> tarafından bir paketin derlenmesini kolaylaştırmak için kullanılır. Genellikle <c>make</c> birkaç derlemeyi aynı anda yapmasını söylemek için ayarlıdır (özellikle çok işlemcili bir makine veya <c>distcc</c>  kullanıyorsanız).
</p>
        <p><c>"make"</c> üç tane derlemeyi aynı anda yapmasını sağlamak için 
<c>MAKEOPTS</c> değişkenini <c>-j3</c>ayarlayın:
</p>
        <pre caption="MAKEOPTS değişkeni">
MAKEOPTS="-j3"
</pre>
        <p><c>ROOT</c> değişkeni <path>/etc/make.conf</path> yerine ortam değişkeni olarak tanımlanmalıdır. Portage bu değişkeni , bir paketin nereye kurulacağını öğrenmek için kontrol eder. Tabiiki varsayılan olarak <path>/</path>  dir. Örnek olarak , <c>gnumeric</c> yazılımının çalışan sistem yerine nasıl <path>/mnt/gentoo</path> altına kurulacağını gösteriyoruz: 
</p>
        <pre caption="ROOT değişkeni">
# <i>ROOT="/mnt/gentoo" emerge gnumeric</i>
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Çıktı Biçimlendirmesi</title>
      <body>
        <p>
Varsayılan olarak Portage , çıktısını okunabilirliğini arttımak için renklendirir. Bunu istemiyorsanız  <c>NOCOLOR</c> değişkenini <c>true</c> yapın:
</p>
        <pre caption="NOCOLOR değişkeni">
NOCOLOR="true"
</pre>
      </body>
    </subsection>
  </section>
  <section>
    <title>Kaynaklar</title>
    <subsection>
      <title>Man Sayfaları</title>
      <body>
        <p>
Eğer tüm değişkenleri çabucak görebileceğiniz bir yer gerekiyorsa , lütfen  <path>make.conf</path> man page 
 sayfalarına göz atmayı unutmayın</p>
        <pre caption="Make.conf man dosyasına göz atmak">
# <i>man make.conf</i>
</pre>
      </body>
    </subsection>
    <subsection>
      <title>Örnekler</title>
      <body>
        <p><path>/etc/make.conf</path> dosyasında sizinde ilginç
        bulabileceğiniz birçok örnek mevcut. Bununla birlikte birçok
        kişi<path>/etc/make.conf</path> dosyalarını güncellemedikleri için bu
        dosyaya yapılan değişiklikleri göremiyorlar.
        <path>/etc/make.conf</path> dosyasının son halini <uri
        link="http://sources.gentoo.org/viewcvs.py/gentoo-src/portage/cnf/make.conf?content-type=text/plain&amp;rev=HEAD">Online
        ViewCVS Repository</uri> depomuzda bulabilirsiniz.
</p>
      </body>
    </subsection>
  </section>
</sections>
