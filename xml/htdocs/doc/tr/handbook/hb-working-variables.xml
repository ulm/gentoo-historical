<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<sections>
  <section>
    <title>Ortam Değişkenleri</title>
    <subsection>
      <title>Ortam Değişkenleri Nedir?</title>
      <body>
        <p>
Ortam değişkenleri , bir veya daha çok uygulamanın kullandığı bilgiyi saklayan isimlendirilmiş nesnelerdir. Birçok kullanıcı (özellikle Linux'a yeni olanlar) bunu garip ve kullanışsız bulabilir. Fakat bu yanlış : ortam değişkenleri yardımıyla bir veya daha çok uygulamanın ayarı çok kolay değiştirilebilir. 
</p>
      </body>
    </subsection>
    <subsection>
      <title>Bazı Önemli Değişkenler</title>
      <body>
        <p>
Aşağıdaki tabloda Linuxta kullanılan birçok değişkenin ismi ve ne işe yaradıkları yazıyor. Örnek değerler tablodan sonra veriliyor.</p>
        <table>
          <tr>
            <th>Değişken</th>
            <th>Açıklama</th>
          </tr>
          <tr>
            <ti>PATH</ti>
            <ti>
    Sistemin çalıştırılabilir dosyalar için bakacağı yerlerin listesi , iki nokta üstüste ile ayrılmış şekilde burada saklanır. Eğer bir komut verirseniz (mesela <c>ls</c>, <c>rc-update</c> veya <c>emerge</c>) ve bu komut listelenmiş dizinlerin hiçbirinde mevcut değilse , sistem bunu çalıştırmaz. (<c>/bin/ls</c> gibi tam yolu yazmadığınız sürece)
  </ti>
          </tr>
          <tr>
            <ti>ROOTPATH</ti>
            <ti>
    Bu değişken de PATH gibidir fakat sadece root olan kullanıcı bir komut verdiğinde bakılacak dizinleri içerir.
  </ti>
          </tr>
          <tr>
            <ti>LDPATH</ti>
            <ti>
    Bu değişken dinamik linker'in bir kütüphaneyi bulmak için bakacağı dizinlerin listesini iki nokta üstüste ile ayrılmış biçimde saklar.
  </ti>
          </tr>
          <tr>
            <ti>MANPATH</ti>
            <ti>
    Man komutunun <c>man</c> dosyaları için bakacağı yerlerin listesini iki nokta üstüste ile ayrılmış biçimde saklar.</ti>
          </tr>
          <tr>
            <ti>INFODIR</ti>
            <ti>
    	Info komutunun <c>info</c> dosyaları için bakacağı yerlerin listesini iki nokta üstüste ile ayrılmış biçimde saklar.</ti>
          </tr>
          <tr>
            <ti>PAGER</ti>
            <ti>
    Bu değişkende dosya içeriklerinin gösterilmesi için kullanılacak programların (<c>less</c> ve <c>more</c> gibi) yerleri saklanır.
  </ti>
          </tr>
          <tr>
            <ti>EDITOR</ti>
            <ti>
    Dosya içeriklerinin değiştirilmesi için kullanılacak programların (<c>nano</c> ve <c>vi</c> gibi) yerleri bu değişkende saklanır.
  </ti>
          </tr>
          <tr>
            <ti>KDEDIRS</ti>
            <ti>
    KDE'ye ait şeylerin olduğu dizinlerin listesini iki nokta üstüste ile ayrılmış biçimde saklar.</ti>
          </tr>
          <tr>
            <ti>CLASSPATH</ti>
            <ti>
    ava Class(sınıf)larının olduğu dizinlerin listesini iki nokta üstüste ile ayrılmış biçimde içerir.
  </ti>
          </tr>
          <tr>
            <ti>CONFIG_PROTECT</ti>
            <ti>
    Portage ile güncelleme yapılırken korunması gereken dizinlerin adreslerini "<e>boşluk-ters kesme</e>" işaretleriyle ayrılmış biçimde saklar.
  </ti>
          </tr>
          <tr>
            <ti>CONFIG_PROTECT_MASK</ti>
            <ti>
    Portagela güncelleme yapılırken korunması gerekmeyen dizinlerin adreslerini "<e>boşluk-ters kesme</e>" işaretleriyle ayrılmış biçimde saklar.</ti>
          </tr>
        </table>
        <p>
Aşağıda , tüm bu değişkenler için örnek tanımlamaları bulabilirsiniz:
</p>
        <pre caption="Örnek Tanımlamar">
PATH="/bin:/usr/bin:/usr/local/bin:/opt/bin:/usr/games/bin"
ROOTPATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
LDPATH="/lib:/usr/lib:/usr/local/lib:/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info:/usr/local/share/info"
PAGER="/usr/bin/less"
EDITOR="/usr/bin/vim"
KDEDIRS="/usr"
CLASSPATH="/opt/blackdown-jre-1.4.1/lib/rt.jar:."
CONFIG_PROTECT="/usr/X11R6/lib/X11/xkb /opt/tomcat/conf \
                /usr/kde/3.1/share/config /usr/share/texmf/tex/generic/config/ \
                /usr/share/texmf/tex/platex/config/ /usr/share/config"
CONFIG_PROTECT_MASK="/etc/gconf
</pre>
      </body>
    </subsection>
  </section>
  <section>
    <title>Değişkenleri Global olarak tanımlamak</title>
    <subsection>
      <title> /etc/env.d dizini</title>
      <body>
        <p>
Değişkenlerin tanımlarının bir merkezde toplanması için Gentoo , <path>/etc/env.d d</path>izinini yarattı. Bu dizinde <path>00basic</path>, <path>05gcc</path> vb. gibi isimlerinde belirtilen uygulama için gerekli olan değişkenleri taşıyan dosyaları bulabilirsiniz.
Örneğin <c>gcc</c> 'yi kurduğunuzda ; ismi <path>05gcc</path> olan ve aşağıdaki değişkenleri taşıyan bir dosya , ebuild tarafından yaratılır: </p>
        <pre caption="/etc/conf.d/05gcc">
PATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/3.2"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/3.2/info"
CC="gcc"
CXX="g++"
LDPATH="/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2.3"
</pre>
        <p>
Diğer dağıtımlar sizden <path>/etc/profile</path> veya başka yerlerdeki ortam değişkeni tanımlarını değiştirmenizi isterler. Fakat Gentoo , ortam değişkenlerini taşıyan birçok dosya ile uğraşılmasını engelleyerek , hem bu değişkenlerin bakımını hemde yönetimini sizin (ve Portage) için çok kolaylaştırıyor. 
</p>
        <p>
Örneğin <c>gcc</c> güncellendiğinde , hiçbir kullanıcı müdahalesine gerek kalmadan <path>/etc/env.d/05gcc</path> dosyasıda güncelleniyor.
Bu sadece Portage'a değil ama bir kullanıcı olarak size de yarar sağlıyor. Bazen bir değişkeni sistem çapında ayarlamanız istenebilir. Mesela <c>http_proxy</c> değişkenini ele alalım. <path>/etc/profile</path> ile uğraşmaktansa artık sadece bir dosya (<path>/etc/env.d/99local</path>) yaratıp tanımlamaları onun içine girebilirsiniz : </p>
        <pre caption="/etc/env.d/99local">
http_proxy="proxy.server.com:8080"
</pre>
        <p>
Tüm değişkenler için aynı dosyayı kullanarak , kendi tanımladıklarınıza kolayca bakabilirsiniz. </p>
      </body>
    </subsection>
    <subsection>
      <title>env-update Betiği (Script)</title>
      <body>
        <p>
<path>/etc/env.d </path>dizinindeki bazı dosyalar <c>PATH</c> değişkenini belirler. <c>env-update</c> çalıştırıldığında ortam değişkenlerini güncellemeden önce , bazı tanımalamarı eklemek suretiyle varolan değişkenleri ellemeden kendininkileri eklemeyi , paketler (veya kullanıcılar) için daha kolay hale gertiriyor.
<c>env-update</c> scripti , değerleri <path>/etc/env.d </path>deki dosyaların alfabetik sıralamasına göre ekler. İşte bu yüzden , /<path>etc/env.d</path> deki birçok dosyanın adı bir rakamla başlar. </p>
        <p>
</p>
        <pre caption="env-update 'in güncelleme sırası">
         00basic        99kde-env       99local
     +-------------+----------------+-------------+
PATH="/bin:/usr/bin:/usr/kde/3.2/bin:/usr/local/bin"
</pre>
        <p>
<c>env-update</c> çalıştırıldığında , tüm ortam değişkenleri oluşturulup <path>/etc/profile.env</path> (<path>/etc/profile</path> tarafındanda kullanılan) dosyasına konulur.

 Ayrıca <c>LDPATH</c> değişkenindeki bilgiler okunup <path>/etc/ld.so.conf</path>  dosyasının oluşturulmasında kullanılır.<path></path>Bundan sonra , dinamik linker tarafından kullanılan <path>/etc/ld.so.cache</path> dosyasının oluşturulması için <c>ldconfig </c>çalıştırılır. 


</p>
        <p>
Eğer <c>env-update</c> komutunun etkilerini çalıştırdıktan hemen sonra görmek istiyorsanız , ortamı güncellemek için aşağıdaki komutu kullanın. Gentoo'yu kendileri kuran kullanıcılar bu komutu hatırlayacaklardır : </p>
        <pre caption="Ortam değişkenlerini güncellemek">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>
      </body>
    </subsection>
  </section>
  <section>
    <title>Değişkenleri Yerel Olarak Tanımlamak</title>
    <subsection>
      <title> Kullanıcıya Özel Değişkenler</title>
      <body>
        <p>
Bir değişkeni her zaman global olarak tanımlamak istemeyebilirsiniz. Örneğin , <path>/home/kullanici/bin</path> dizinini <c>PATH</c>'e ekleyip sistemdeki diğer kullanıcıların <c>PATH</c> değişkenlerinde bunun olmasını istemiyor olabilirsiniz. Bir değişkeni yerel olarak tanımlamak istiyorsanız <path>~/.bashrc </path>veya <path>~/.bash_profile</path> dosyalarını kullanmalısınız( <e>~</e> işareti  <e>/home/kullanıcı_ismi</e>  dizinine eşittir) : 
</p>
        <pre caption="Yerel kullanım için PATH değişkenini ~/.bashrc de genişletmek">
PATH="${PATH}:/home/kullanıcı_ismi/bin"
</pre>
        <p>
Kullanıcı ile tekrar giriş yaptığınızda <c>PATH</c> değişkeni güncellenmiş olur. 
</p>
      </body>
    </subsection>
    <subsection>
      <title>Oturuma Özel Değişkenler</title>
      <body>
        <p>
Bazen çok daha sıkı tanımlamalar istenebilir. Birkaç dakikalığına ihtiyacınız olan binaryleri <path>~/.bashrc</path>  dosyasını değiştirmeden veya gerçek binaryleri kullanmadan , geçici bir dizinden çalıştırmak isteyebilirsiniz.
</p>
        <p>
Bu durumda <c>export</c> komutuyla , sadece geçerli oturumdaki <c>PATH</c> değişkenini tanımlayabilirsiniz. Çıkış yapmadığınız sürece , geçici <c>PATH</c> değişkeni geçerliliğini sürdürür.</p>
        <pre caption="Oturuma özel bir ortam değişkeni tanımlamak">
# <i>export PATH="${PATH}:/home/my_user/tmp/usr/bin"</i>
</pre>
      </body>
    </subsection>
  </section>
</sections>
