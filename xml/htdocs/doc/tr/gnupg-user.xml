<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide disclaimer="obsolete">
  <title>GnuPG Gentoo Kullanım Rehberi</title>
  <author title="Author">
  <mail link="gustavo@felisberto.net">Gustavo Felisberto</mail>
</author>
  <author title="Editor">
  <mail link="zhen@gentoo.org">John P. Davis</mail>
</author>
  <author title="Editor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
  <abstract>
Bu küçük belge güvenli bir iletişim yapabilmek için GnuPG kullanımını anlatmaktadır.
</abstract>
  <license/>
  <version>1.0.7</version>
  <date>April 15, 2004</date>
  <chapter>
    <title>Giriş</title>
    <section>
      <title>Bu Belgenin Amacı</title>
      <body>
        <p>
Bu yazı genel anahtar kriptografisi,şifreleme ve dijital imzalara aşina olduğunuz varsayılarak hazırlanmıştır.
Eğer değilseniz <uri link="#doc_chap6">Genel Anahtar  Kriptografisi (Public Key Cryptography) </uri>  ile  ilgili yazının sonuna doğru olan  bölümü okuyunuz ya da  
<uri link="http://www.gnupg.org/(en)/documentation/guides.html">GnuPG 
Elkitabı'nı</uri> okuyarak geliniz.
</p>
        <p>
Bu yazı GNUPG'nin nasıl yükleneceği,anahtarların  nasıl oluşturulacağı,anahtarların anahtar halkaya nasıl ekleneceği,genel  anahtarın anahtar sunucusuna nasıl ekleneceği,mesajların nasıl şifreleneceği veya deşifre edileceği ile ilgilidir.Fakat yerel bilgisayardaki dosyaların nasıl şifreleneceği de anlatılacaktır.

</p>
      </body>
    </section>
    <section>
      <title>Gereken Yazılımların Kurulumu</title>
      <body>
        <p>
Her şeyden önce <c>emerge gnupg</c> komutu çalıştırılarak gnupg kurulmalıdır. Birçok uygulamadan gpg desteği vardır, USE değişkenini kullanarak bu uygulamalara gpg desteği verebilirsiniz. PGP(Pretty Good Privacy) destekli bir posta istemcisi olarak seçenekleriniz şunlardır : Pine için,  <c>emerge pinepgp</c>, mutt  için, <c>emerge mutt</c>, 
Mozilla/Netscape Mail, evolution (evolution GNOME için hazırlanmış, Microsoft Outlook türü bir uygulamadır) ve KMail (KMail KDE'deki kdenetwork paketlerinin içindedir.)</p>
        <p>
<c>Kgpg</c> ise KDE için bir gnupg grafik ara yüzüdür. (Eğer KDE kullanıyorsanız).  Bu küçük program ile bütün işlemlerinizi yapabilirsiniz; anahtar çifti oluşturur, ASCII dosyalarından anahtar okur, önemli anahtarları imzalar, dışa aktarır, vb.
</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Anahtarınızı Oluşturmak ve Genel Anahtar Halkaya Eklemek</title>
    <section>
      <title>Anahtar Oluşturmak</title>
      <body>
        <p>
Anahtarı oluşturmak için <c>gpg --gen-key</c> komutu kullanırlır. İlk kez girilince  bazı dizinler oluşturur.bir kez daha çalıştırıldığında ise anahtarı oluşturur.Komutun kullanımı ile ilgili bir konsol alıntısı aşağıdadır.</p>
        <pre caption="Anahtar oluşturma">
# <i>gpg --gen-key</i>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.

Please select what kind of key you want:
   (1) DSA and ElGamal (default)
   (2) DSA (sign only)
   (4) ElGamal (sign and encrypt)
   (5) RSA (sign only)
   Your selection? <i>1</i>
</pre>
        <p>
Görüldüğü gibi birden çok seçenek  vardır ve seçim yapılmalıdır. Birçok kullanıcı varsayılan seçenek olan DSA ve ElGamal'ı seçer. Böylece hem işaretleme hem de şifreleme yapılacaktır.Daha sonra şifreleme boyutu seçilmelidir.Fakat DSA/ElGamal ile 2048'den yüksek bir boyut seçilmesi önerilmez. Öntanımlı  olan 1024 epostalarda kullanışlı bir boyut rakamıdır. Minimum boyut miktarı ise 768'dir.
</p>
        <p>
Daha sonra oluşturulan anahtarın son kullanma tarihi seçilmelidir.Daha yakın olan tarih daha iyidir ama 2-3 yıllık bir süre için seçmek kullanışlı olur.Son yapılan işlemlerle ilgili konsol alıntısı aşağıdadır.Burada son kullanma tarihi olmayan bir anahtar atanmıştır:

</p>
        <pre caption="Anahtar boyutunun seçilmesi">
DSA keypair will have 1024 bits.
About to generate a new ELG-E keypair.
              minimum keysize is  768 bits
              default keysize is 1024 bits
    highest suggested keysize is 2048 bits
    What keysize do you want? (1024) <i>2048</i>
Requested keysize is 2048 bits       
Please specify how long the key should be valid.
         0 = key does not expire
 &lt;n&gt;= key expires in n days
 &lt;n&gt;w = key expires in n weeks
 &lt;n&gt;m = key expires in n months
 &lt;n&gt;y = key expires in n years
 Key is valid for? (0) <i>0</i>
Key does not expire at all
</pre>
        <p>
Artık bir takım kişisel bilgiler girme zamanıdır.Anahtarı epostalarda kullanmak için gerçek e-mail adresi girmek zorunludur.</p>
        <pre caption="Kullanıcı bilgilerini girmek">
Is this correct (y/n)? <i>y</i>
                        
Ayrıca bir User ID(GNUPg kullanıcısı adı) ve yorum girmek gerekir.Aşağıda John Doe kullanıcısı ile yapılan işlemlerle ilgili konsol alıntısı vardır.


Real name: <i>John Doe</i>
Email address: <i>john@nowhere.someplace.flick</i>
Comment: <i>The Real John Doe</i>
You selected this USER-ID:
"John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"

Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? <i>O</i> 
You need a Passphrase to protect your secret key.    

Enter passphrase: 
</pre>
        <p>
Burada iki kez şifre girilmesi gerekmektedir.(passphrase) Elbette güçlü bir şifre kullanmak önerilir. Eğer birisi şifrenizi ele geçirirse sizin adınıza birilerine eposta gönderebilir.
</p>
        <p>
Şifre iki kez girildikten sonra anahtarın oluşturulması işlemi başlar. Bu sırada fareyi ekranda gezdirmek ya da bir mp3 çalmak süreci hızlandıracaktır.
</p>
      </body>
    </section>
    <section>
      <title>İptal Sertifikasının Oluşturulması</title>
      <body>
        <impo>
Bu çok önemli bir işlemdir ve <e>hemen</e> oluşturulmalıdır.

</impo>
        <p>
Birisinin şifrenizi ele geçirdiğinizden şüphelenmeniz ya da benzer nedenlerle daha sonra  anahtarınızı  iptal etmek isteyebilirsiniz. Bunun için bir iptal sertifikası oluşturulmalıdır.
Bunun için bir iptal sertifikası oluşturulmalıdır.
<c>gpg --listkeys</c> komutu anahtar halkanızdaki anahtarları listeler.
Öncelikle bu komutla varolan anahtarları listeleyin.Sonra iptal sertifikası oluşturmak için <c>gpg --output revoke.asc --gen-revoke x</c> komutu çalıştırılmalıdır (X yazan yere anahtarınızı girmeniz gerekir). Daha sonra da istenirse yorum satırı yazılır.Ve sertifika oluşturulur.Revoke.asc 'nin bir diskette saklanması önerilir.Aşağıda John Doe kullanıcısı ile yapılan işlemlerin konsol alıntısı vardır.</p>
        <pre caption="İptal sertifikası oluşturmak">
# <i>gpg --list-keys</i>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;
sub  2048g/96D6CDAD 2002-12-08

# <i>gpg --output revoke.asc --gen-revoke 75447B14</i>

sec  1024D/75447B14 2002-12-08   John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;

Create a revocation certificate for this key? <i>y</i>
Please select the reason for the revocation:   
  0 = No reason specified
  1 = Key has been compromised
  2 = Key is superseded
  3 = Key is no longer used
  Q = Cancel
(Probably you want to select 1 here)
Your decision? <i>1</i>
Enter an optional description; end it with an empty line:
&gt; <i>Someone cracked me and got my key and passphrase</i>
&gt;
Reason for revocation: Key has been compromised
Someone cracked me and got my key and passphrase
Is this okay? <i>y</i>

You need a passphrase to unlock the secret key for
user: "John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"
1024-bit DSA key, ID 75447B14, created 2002-12-08

ASCII armored output forced.
Revocation certificate created.

Please move it to a medium which you can hide away; if Mallory gets
access to this certificate he can use it to make your key unusable.
It is smart to print this certificate and store it away, just in case
your media become unreadable.  But have some caution:  The print system of
your machine might store the data and make it available to others!</pre>
        <p>
</p>
        <note>
Bir anahtarı birden çok eposta adresinde kullanmak için; önce <c>gpg --edit-key YOUR_ID</c> ve daha sonra <c>adduid </c>komutları çalıştırılmalıdır. Tekrar isim, eposta adresi ve yorum girilerek yeni bir eposta adresi anahtara eklenir.

</note>
      </body>
    </section>
    <section>
      <title>Maillerde Kkullanmak Üzere .asc Dosyası Oluşturmak</title>
      <body>
        <p><c>gpg --armor --output john.asc --export
john@nowhere.someplace.flick</c> komutu John Doe kullanıcısının anahtarı ile oluşturulan <path>john.asc</path> dosyası içindir. Kendinize göre düzenleyebilirsiniz.
. </p>
      </body>
    </section>
    <section>
      <title>Genel Anahtar Halkaya Başkalarının Eklenmesi</title>
      <body>
        <p>
Bir başkasına ait bir anahtar ortak bir anahtar halkaya eklenmek üzere aktarıldıktan sonra anahtarın parmak izi doğrulanmalı ve sonra ekleme işlemi tamamlanmalıdır.Parmak izi için <c>fpr</c> komutu kullanılır.</p>
        <p>
Konsolda John Doe kullanıcısının bulunduğu anahtar halkaya Luis Pinto'nunkinin eklenmesi ile ilgili örnek alıntı aşağıdadır:</p>
        <pre caption="Anahtar aktarımı ve imzalama">
# <i>gpg --import luis.asc</i>
gpg: key 462405BB: public key imported
gpg: Total number processed: 1
gpg:               imported: 1
# <i>gpg --list-keys</i>
/home/humpback/.gnupg/pubring.gpg
---------------------------------
pub  1024D/75447B14 2002-12-08 John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;
sub  2048g/96D6CDAD 2002-12-08

pub  1024D/462405BB 2002-12-01 Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;
uid                            Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
sub  4096g/922175B3 2002-12-01 [expires: 2003-12-01]

# <i>gpg --edit-key lmpinto@dei.uc.pt</i>
gpg (GnuPG) 1.0.7; Copyright (C) 2002 Free Software Foundation, Inc.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.


gpg: checking the trustdb
gpg: checking at depth 0 signed=0 ot(-/q/n/m/f/u)=0/0/0/0/0/1
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
sub  4096g/922175B3  created: 2002-12-01 expires: 2003-12-01
(1)  Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
(2). Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;

Command&gt; <i>fpr</i>
pub  1024D/462405BB 2002-12-01 Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
             Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB
     
Command&gt; <i>sign</i>
Really sign all user IDs? <i>y</i>
                           
pub  1024D/462405BB  created: 2002-12-01 expires: 2003-12-01 trust: -/-
             Fingerprint: F056 3697 ADE3 CF98 B80B  8494 0AD3 E57B 4624 05BB

     Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
     Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;

This key is due to expire on 2003-12-01.
Do you want your signature to expire at the same time? (Y/n) <i>Y</i>
How carefully have you verified the key you are about to sign actually belongs
to the person named above?  If you don't know what to answer, enter "0".

   (0) I will not answer. (default)
   (1) I have not checked at all.
   (2) I have done casual checking.
   (3) I have done very careful checking.

   Your selection? <i>3</i>
Are you really sure that you want to sign this key
with your key: "John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"

I have checked this key very carefully.

Really sign? <i>y</i>
              
You need a passphrase to unlock the secret key for
user: "John Doe (The Real John Doe) &lt;john@nowhere.someplace.flick&gt;"
1024-bit DSA key, ID 75447B14, created 2002-12-08

Command&gt; <i>check</i>
uid  Luis Pinto &lt;lmpinto@dei.uc.pt&gt;
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   John Doe (The Real John Doe) &lt;john@nowhe
uid  Luis Pinto &lt;lmpinto@student.dei.uc.pt&gt;
sig!3       462405BB 2002-12-01   [self-signature]
sig!3       75447B14 2002-12-08   John Doe (The Real John Doe) &lt;john@nowhe
</pre>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Anahtarların  Anahtar Sunucusuna Göndermek</title>
    <section>
      <title>Anahtar Sunucularına Gönderme </title>
      <body>
        <p>
 Artık anahtarımızı oluşturduğumuza göre bir anahtar sunucusuna gönderebiliriz.Dünya'da birçok anahtar sunucusu vardır.Örnek olarak anahtarı  <e>pgp.mit.edu</e> 'ye göndereceğiz. Bu sunucu HTTP kullanmaktadır. HTTP tarfiği için proxy kullanma gerekliliği varsa önce o halledilmelidir: <c>export http_proxy=http://proxy_host:port/</c> . Anahtarı göndermek için ise yazılacak örnek komut aşağıdadır:
<c>gpg --keyserver pgp.mit.edu --keyserver-options
honor-http-proxy --send-key john@nowhere.someplace.flick</c> . HTTP proxy kullanmanıza gerek yoksa <e>--keyserver-options honor-http-proxy</e> parametrelerini silebilirsiniz..
</p>
        <p>
Ayrıca anahtarhalkadaki diğerlerinin anahtarları da yollanabilir.Örneğin John,Luis'inkini de gönderebilir.</p>
      </body>
    </section>
    <section>
      <title>Anahtar Sunucusundan Başkasının Anahtarını Almak</title>
      <body>
        <p>
Bunun için --search-keys parametresi kullanılır.Örnek olarak Gustavo Felisberto'nun anahtarının  aranıp bulunması ve anahtar halkaya eklenmesini anlatan işlemlerin konsol çıktısı aşağıdadır.</p>
        <pre caption="Searching keys from keyservers">
# <i>gpg --keyserver pgp.mit.edu --keyserver-options honor-http-proxy --search-keys humpback@felisberto.net</i>
gpg: searching for "humpback@felisberto.net" from HKP server pgp.mit.edu
Keys 1-5 of 5 for "humpback@felisberto.net"
(1)Gustavo Felisberto (apt-get install anarchy) &lt;humpback@felisberto.net&gt; 1024
  created 2002-12-06, key B9F2D52A
(2)Gustavo Felisberto &lt;humpback@altavista.net&gt; 1024
  created 1999-08-03, key E97E0B46
(3)Gustavo A.S.R. Felisberto &lt;humpback@altavista.net&gt; 1024
  created 1998-12-10, key B59AB043
(4)Gustavo Adolfo Silva Ribeiro Felisberto &lt;humpback@altavista.net&gt; 1024
  created 1998-08-26, key 39EB133D
(5)Gustavo Adolfo Silva Ribeiro Felisberto &lt;humpback@altavista.net&gt; 1024
  created 1998-06-14, key AE02AF87
  Enter number(s), N)ext, or Q)uit &gt;<i>1</i>
gpg: requesting key B9F2D52A from HKP keyserver pgp.mit.edu
gpg: key B9F2D52A: public key imported
gpg: Total number processed: 1
gpg:               imported: 1
</pre>
        <p>
Gördüğünüz gibi birçok giriş yaptım ama kullandığım en geçerli anahtar <e>B9F2D52A</e> olanıdır. 
</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Belgeler Üzerinde İşlemler</title>
    <section>
      <title>Şifreleme ve Onaylama</title>
      <body>
        <p>
Diyelim ki siz Joe'sunuz.Luis'e göndermeniz gereken bir dosya var.Dosyayı şifreleyebilir,sizin gönderdiğinizin anlaşılması için imzalayabilir,iki işlemi birden yapabilirsiniz.Şifrelerseniz dosyayı yalnızca Luis açabilir ve imzalarsanız Luis dosyanın sizden geldiğini anlar.</p>
        <p>
İmzalamak  için;</p>
        <pre caption="Şifreleme ve onaylama dosyaları">
# <i>gpg --output doc.gpg --encrypt --recipient lmpinto@dei.uc.pt doc_to_encrypt</i>
# <i>gpg --output doc.gpg --sign --recipient lmpinto@dei.uc.pt doc_to_sign</i>
# <i>gpg --output doc.gpg --encrypt --sign --recipient lmpinto@dei.uc.pt doc_to_encrypt_and_sign</i>
</pre>
        <p>
Böylelikle uygulama dosyaları oluşur.ASCII dosyaları için ilk parametre olarak <c>--clearsign</c> eklenmelidir.</p>
      </body>
    </section>
    <section>
      <title>Şifrelenmiş Dosyayı Açmak</title>
      <body>
        <p><c>gpg --output document --decrypt encrypted_doc.gpg</c> komutu işinizi görür.Hem açar hem de varsa imzayı doğrular.</p>
      </body>
    </section>
    <section>
      <title>Gelişmiş Özellikler</title>
      <body>
        <p>
Gelişmiş özellikleri öğrenmek için <path>~/.gnupg/options</path> dosyasına bakılır.John Doe örnek kullanıcısının yapılan tüm işlemlerden sonra oluşan Options(seçenekler)  dosyası aşağıdadır.</p>
        <pre caption="~/.gnupg/options">
#keyserver x-hkp://pgp.mit.edu
#keyserver-options auto-key-retrieve include-disabled include-revoked
</pre>
        <p>
Yukarıdaki iki satırı inceleyin.Anlamı şudur:GNUPg bir imzayı kontrol etmek ister ve genel anahtarı anahtar halkada bulamazsa <uri link="http://pgp.mit.edu">pgp.mit.edu</uri> sunucusunda arar.</p>
        <p>
Ayrıca  <c>gpg --refresh-keys</c>de yararlı bir komuttur.Opti
ons dosyasındaki sunucuya bağlanır ve anahtar halkadaki anahtarlardan yenilenen,değişen,iptal edilen var mı bakar. Ayrıca bir anahtara eklenen yeni id ve eposta adreslerini de bulur. Ayda iki kez çalıştırmanız önerilir.
</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>GnuPG Arayüzleri</title>
    <section>
      <title>Emaiş İmzalana Hakkında</title>
      <body>
        <p>
Epostalar 95%  oranınd GnuPG kullanır. Gelen veya giden mailler şifrelenir, deşirfe edilir vb. Şimdi bu konu hakkında da biraz değinmek sanırım yararlı olacak
</p>
        <p>
GNUPg'nin konsoldan kullanımı uzun yorucu ve eski bir iştir.GNUPg'ye çeşitli grafik arayüzler geliştirilmiştir:</p>
        <pre caption="">
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Test message

-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 6.5.8 for non-commercial use

iQA/AwUBP8461jMX0745gR7AEQIEOwCg011GbufXO3ED3FkLWXmfzg7xm1cAoJD0
0EU3Kd2EKNCqataEqM5qjpPs
=LchZ
-----END PGP SIGNATURE-----
</pre>
        <p>
Yukarıdaki eposta  eski yöntemle oluşturulmuştur.Düz yazıdır. Epostaya eklenen dosyalar şifrelenemez ve imzalanamaz. Bu yolla kullanmak günümüzde kullanışlı değildir Çünkü hoş grafik arayüzler ve html anlayabilen mail-istemciler vardır.</p>
      </body>
    </section>
    <section>
      <title>Kgpg</title>
      <body>
        <p>
KDE'ye ait hoş bir arayüzdür.Sadece kopyala yapıştır ile şifreli yazı deşifre edilebildiği gibi düz yazı da şifrelenebilir.İmzalar eklenebilir ya da doğrulanabilir.</p>
        <figure link="http://www.ibiblio.org/web-gentoo/images/kgpg1.png" short="kgpg main window"/>
        <p>
Yukarıdaki anahtar simgesi tıklanarak programın tanıdığı anahtarlar görülebilir.
</p>
        <figure link="http://www.ibiblio.org/web-gentoo/images/kgpg2.png" short="kgpg key manage window"/>
        <p>
Anahtarlar güvenilen/güvenilmeyen diye ayarlanabilir.</p>
      </body>
    </section>
    <section>
      <title>Seahorse</title>
      <body>
        <p>
GNOME tabanlı GPG arayüzü fakat Kgpg kadar iyi özelliklere sahip değil.
</p>
      </body>
    </section>
    <section>
      <title>Mozilla Enigmail</title>
      <body>
        <p>
1.0 sürümü ve sonrası ile uyumlu Mozilla internet tarayıcısının e-posta istemcisi için  GPG eklentisidir.Seçenekler(Preferences) içinden Privacy&amp;Security sekmesi altında Enigmail ayarı vardır.Burada anahtarlar girilir.Kullanımı çok kolaydır.
</p>
        <p>
Güvenilmeyen imzalarla gelen mailler daha sonra kırık bir kalem simgesi ile işaretlenir.Hatta anahtar sunucularından anahtar sorgulama ve alma yeteneği vardır ama bazen çok garip mesajlarla cevap verebilir.Komut satırından anahtar sorgulayıp almak daha kullanışlıdır.</p>
      </body>
    </section>
    <section>
      <title>KMail</title>
      <body>
        <p>
KMail'de  GPG ayarı çok kolaydır.Bu yüzden üç örnek resimle anlatmak daha mantıklıdır.
</p>
        <figure caption="kmail identity options OpenGPG key" link="http://www.gentoo.org/images/kmail_identity.png"/>
        <figure caption="kmail security options OpenPGP" link="http://www.gentoo.org/images/kmail_security_openpgp.png"/>
        <figure caption="kmail security options Crypto Plugins" link="http://www.gentoo.org/images/kmail_security_plugins.png"/>
      </body>
    </section>
    <section>
      <title>Sylpheed-Claws</title>
      <body>
        <p>
En iyilerinden biridir. Hızlı bir posta istemcidir. GPG uyumludur. Tek kötü yanı eski PGP imzaları ile olan uyumsuzluğudur. Bu durumda imzalar konsoldan kontrol edilmelidir.
</p>
        <p>
PGP'yi etkin kılmak için seçeneklerde Privacy sekmesinde kullanılacak anahtar girilir.</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title> Genel Anahtar Kriptografisi(Public Key Cryptography)</title>
    <section>
      <title>Temel Genel Anahtar Kriptografisi</title>
      <body>
        <p>
Temel ilkeleri Wittfield Diffie ve Martin Hellman tarafından 1976'da belirlenmiştir.Önce bir takım basit matematik bilgisi vereyim.
</p>
        <p>
</p>
        <pre caption="Mathematical Concepts">
Definitions:

1- Asal sayı kavramı:yalnızca bire ve kendisine bölünen sayı.İlk 10 tanesi 1,2,3,5,7,11,13,17,19,23'tür.


Theorem (No proof here)
1- Asal olmayan her sayı asal çarpanlarına ayrılabilir. 
4=2*2
6=2*3
8=2*4=2*2*2
10=2*5
12=2*6=2*2*3

"Facts":
1- It is mathematically easy to multiply two large integers
2- It is hard to find the prime factors of a given positive integer.
</pre>
        <p>
Örneğin  1588522601 sayısının 49811*31891 diye iki asal sayının çarpımı oluşu gibi.Öyleyse dev iki asal sayının çarpımı mükemmel bir sayı ve çarpanlara  ayrılması işlemci için zor bir işlem olur.Ve ben böyle bir sayı ile çarpanlarını bilirsem bu iyi bir şifre olur.Bu Genel Anahtar Kriptografisinin temelini oluşturur.Pratikte %100 böyle değildir ama yeni başlayanlara böyle tanımlanabilir.Eğer konu ile ilgili bilgi edinmek istiyorsanız öncelikle</p>
        <p> <uri link="http://www.hack.gr/users/dij/crypto/overview/diffie.html">Diffie-Hellman</uri>
adresine bakınız.Hatta aşağıdaki adreste Alfred J. Menezes, Paul C. van Oorschot ve Scott A. Vanstone'un yazdığı konu ile ilgili daha geniş bilgi içeren bir kitap vardır.<uri link="http://www.cacr.math.uwaterloo.ca/hac/">"Handbook of Applied
Cryptography"</uri> 
</p>
      </body>
    </section>
    <section>
      <title>Signatures</title>
      <body>
        <p>
We already saw how someone can send us a cyphered message if they have our
public key. But how do we know that the author of the message is really who he
claims to be? Or in other words: If I receive an email from you how do I really
know it was you and not someone else claiming to be you? 
</p>
        <p>
Remember me saying that PKC was not as simple as I had said? The idea is that
when you cypher a message to me you sign it with your private key so that, when
I receive it, I can first use your public key to check your signature and then
use my private key to decypher the message. As you can see we could not do
that in the setup i described before.
</p>
        <p>
Also very important, to sign messages you don't have to cypher them before. So
like that you can create messages that can be read by anyone, but that come with
your "branding". And if any single character is changed in the message it can
(and will) be detected.
</p>
      </body>
    </section>
    <section>
      <title>Key Servers and Signed Keys</title>
      <body>
        <p>
But lets say that I have no previous contact with you until you send me a
message, how do I get your public key, and how do I really know it is yours?
</p>
        <p>
To solve this problem public Key Servers were created. When you create your key
pair (Public and Private key) you send your public key to the key server. After
this everyone can retrieve your key from there. This solves the problem of
finding the key. But how do I really know that that key is the author's key? For
this another concept must be introduced, and that is key signing:
</p>
        <p>
Key signing means that, if I have the public key of another person, and I know 
<e>for sure</e> that it is really that persons key (it is my personal friend, 
someone I know in real life, etc.) I can sign that public key and send it to 
keyservers, that way I am telling the world: "This key really belongs to the 
person it claims to belong.". That way persons that have my public key and 
trust me can use that trust to trust other keys.
</p>
        <p>
This can sometimes be confusing so lets see a real world situation
</p>
        <p>
Let's imagine a 3 person situation: John, Mary, and Lisa. John is a good
friend of Mary but does not know Lisa; Lisa is a good friend of Mary but
does not know John. One day Lisa sends John a signed email. John will fetch
Lisa's  Public Key from the keyserver and test the message, if all went ok he
will see that whoever wrote that message also created that key. But how do I
know it was really the person it claims to be?
</p>
        <p>
He then see's that it is signed by Mary, which he can check because he already
has Mary's key and he trusts that key. With this ring of trust he continues to
conclude that the email he received was really written by Lisa.
</p>
        <p>
You are now ready to use this guide, you can go back to chapter 1 and learn how
to use gpg.
</p>
      </body>
    </section>
  </chapter>
  <chapter>
    <title>Son Öneriler</title>
    <section>
      <title>Bazı Sorunlar</title>
      <body>
        <p>
GNUPg 1.2.1-r1 den daha düşük versiyonlarda resimlerle ilgili problemler olabiliyor.
</p>
        <p>
GnuPG nın enson sürümü  <c>gpg
--send-keys</c>  komutu ile çalışmayabilir. 
</p>
      </body>
    </section>
    <section>
      <title>Burda Olmayanlar</title>
      <body>
        <p>
<c>gpg</c>  çok karmaşık bir araçtır. Detaylı bilgi almak için  <uri link="http://www.gnupg.org">GnuPG 
Website</uri> adresine bakınız.
</p>
        <p>

 Windows altındaki <c>pgp</c> araçları ve <c>pgp4pine</c>'den yazıda bahsedilmemiştir.
</p>
      </body>
    </section>
    <section>
      <title>Yardımda Bulunanlar</title>
      <body>
        <p>
John Michael Ashley's <uri link="http://www.gnupg.org">GnuPG Handbook</uri>
 yeni başlayanlar için ideal bir kitap.
</p>
        <p>
Belgenin tekrar yazılmasında yardımcı olan Swift (Sven Vermeulen) </p>
        <p>
#gentoo-doc takımındaki herkes.
</p>
        <p>
Özel yaşama katkılarından dolayı Tiago Serra.
</p>
      </body>
    </section>
  </chapter>
</guide>
