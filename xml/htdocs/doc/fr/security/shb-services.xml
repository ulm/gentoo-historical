<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: shb-services.xml,v 1.5 2007/01/27 21:27:33 cam Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<sections>

<version>1.2</version>
<date>2006-12-01</date>

<section>
<title>Apache</title>
<body>

<p>
Apache (1.3.26) est livré avec un fichier de configuration relativement bon,
mais, encore une fois, nous devons optimiser quelques petites choses, comme
lier l'écoute d'Apache à une adresse et l'empêcher de donner trop d'information.
Vous trouverez ci-dessous les options que vous devriez utiliser dans le fichier
de configuration&nbsp;:
</p>

<p>
Si vous n'avez pas désactivé <c>ssl</c> dans <path>/etc/make.conf</path> avant
d'installer apache, vous devriez être en possession d'un serveur avec SSL
activé. Ajoutez simplement ce qui suit pour l'activer&nbsp;:
</p>

<pre caption="/etc/conf.d/apache">
HTTPD_OPTS="-D SSL"
</pre>

<pre caption="/etc/apache/conf/apache.conf">
# Faites-le écouter sur votre adresse IP.
Listen 127.0.0.1
BindAddress 127.0.0.1
# Ce n'est pas une bonne idée d'utiliser nobody ou nogroup
# pour les services qui ne sont pas exécutés en tant que root ;
# préférez l'utilisateur et le groupe apache (ajoutez-les).
User apache
Group apache
# Empêchera Apache de dévoiler sa version.
ServerSignature Off
ServerTokens Prod
</pre>

<p>
Apache est compilé avec les options <c>--enable-shared=max</c> et
<c>--enable-module=all</c>.  Cela autorise tous les modules par défaut. Vous
devez donc commenter les modules dont vous n'avez pas besoin dans la section
<c>LoadModule</c> (<c>LoadModule</c> et <c>AddModule</c>). Redémarrez ensuite
le service en faisant&nbsp;: <c>/etc/init.d/apache restart</c>.
</p>

<p>
Pour plus d'informations, consultez <uri>http://www.apache.org</uri>.
</p>

</body>
</section>

<section>
<title>Bind</title>
<body>

<p>
Consultez la documentation en ligne sur <uri
link="http://www.isc.org/products/BIND/bind9.html"> Internet Software
Consortium</uri>. Le manuel de référence de l'administrateur de BIND 9 se
trouve aussi dans <path>doc/arm</path>.
</p>

<p>
Les ebuilds récents pour le logiciel BIND supportent le chroot sans effort de
votre part. Après avoir exécuté <c>emerge bind</c>, suivez ces
instructions&nbsp;:
</p>

<pre caption="Utiliser un chroot avec BIND">
ebuild /var/db/pkg/net-dns/bind-9.2.2-r2/bind-9.2.2-r2.ebuild config\`"
<comment>(Avant d'exécuter la commande précédente, vous souhaiterez peut-être
changer le répertoire du chroot dans /etc/conf.d/named. Par défaut,
/chroot/dns sera utilisé.)</comment>
<comment>(Vous devrez peut-être substituer la version du paquet dans la
commande ci-dessus par celle du paquet que vous utilisez.)</comment>
</pre>

</body>
</section>
<section>
<title>Djbdns</title>
<body>

<p>
Djbdns est une autres implémentation d'un serveur DNS. Son auteur est prêt à
parier de <uri link="http://cr.yp.to/djbdns/guarantee.html">l'argent</uri> pour
prouver qu'il est sécurisé. Son mode de fonctionnement est très différent de
celui de Bind v.9, mais il vaut la peine d'être testé. Vous trouverez plus
d'informations sur <uri>http://www.djbdns.org/</uri>.
</p>

</body>
</section>

<section>
<title>FTP</title>
<body>

<p>
Utiliser FTP (File Transfer Protocol) est en général une mauvaise idée. Ce
service n'utilise aucun cryptage pour les données (les mots de passe sont
échangés sous forme de texte clair), écoute sur 2 ports (habituellement 20 et
21) et supporte des utilisateurs anonymes, cette dernière caractéristique étant
très attrayante pour les attaquants (qui l'utilisent afin d'échanger des
fichiers illégaux («&nbsp;warez&nbsp;»)). Puisque le protocole FTP comporte de
nombreux problèmes de sécurité, vous devriez plutôt utiliser <c>sftp</c> ou
HTTP. Si vous devez utiliser FTP, sécurisez vos services du mieux que vous le
pouvez, et préparez-vous...
</p>

</body>
</section>

<section>
<title>Mysql</title>
<body>

<p>
Si seules les applications locales ont besoin d'accéder à la base de données
<c>mysql</c>, décommentez la ligne suivante dans
<path>/etc/mysql/my.cnf</path>&nbsp;:
</p>

<pre caption="Désactiver l'accès au réseau">
skip-networking
</pre>

<p>
Nous désactivons ensuite l'utilisation de la commande LOAD DATA LOCAL
INFILE. Cela sert à prévenir une lecture non autorisée à partir des fichiers
locaux. Cela devient pertinent lorsque de nouvelles vulnérabilités d'injection
SQL sont découvertes dans des applications PHP.
</p>

<pre caption="Désactiver LOAD DATA LOCAL INFILE dans la section [mysqld]">
set-variable=local-infile=0
</pre>

<p>
Ensuite, nous devons supprimer la base de donnée fournie comme exemple (test)
ainsi que tous les comptes d'utilisateurs à l'exception du compte <c>root</c>
local.
</p>

<pre caption="Supprimer la base de donnée fournie en exemple et les
utilisateurs non nécessaires">
mysql> <i>drop database test;</i>
mysql> <i>use mysql;</i>
mysql> <i>delete from db;</i>
mysql> <i>delete from user where not (host="localhost" and user="root");</i>
mysql> <i>flush privileges;</i>
</pre>

<warn>
Faites attention avec les commandes ci-dessus si vous avez déjà configuré des
comptes utilisateurs.
</warn>

<note>
Si vous changez des mots de passe à partir de l'invite MySQL, vous devriez
toujours nettoyer <path>~/.mysql_history</path> et
<path>/var/log/mysql/mysql.log</path> puisqu'ils conservent les commandes SQL
exécutées avec les mots de passe en texte clair.
</note>

</body>
</section>

<section>
<title>Proftpd</title>
<body>

<p>
Proftpd est connu pour avoir eu de nombreux problèmes de sécurité, mais la
plupart semblent avoir été réglés. Il est quand même important d'appliquer les
améliorations suivantes&nbsp;:
</p>

<pre caption="/etc/proftpd/proftpd.conf">
ServerName "Mon démon FTP"
# Ne donnez pas l'identité du serveur.
ServerIdent on "Va voir ailleurs si j'y suis"

# Permet de créer des utilisateurs virtuels plus facilement.
RequireValidShell off

# Utilise des fichiers de groupes et de mots de passe alternatifs
# (passwd utilise un format crypté).
AuthUserFile "/etc/proftpd/passwd"
AuthGroupFile "/etc/proftpd/group"

# Permissions
Umask 077

# Délais maximum et limitations
MaxInstances 30
MaxClients 10 "Only 10 connections allowed"
MaxClientsPerHost 1 "You have already logged on once"
MaxClientsPerUser 1 "You have already logged on once"
TimeoutStalled 10
TimeoutNoTransfer 20
TimeoutLogin 20

# Tout le monde en chroot
DefaultRoot ~

# Ne pas démarrer le service en tant que root.
User  nobody
Group nogroup

# Consigner tout transfert.
TransferLog /var/log/transferlog

# Problèmes avec le « globbing »
DenyFilter \*.*/
</pre>

<p>
Vous trouverez plus de documentation sur <uri>http://www.proftpd.org</uri>.
</p>

</body>
</section>

<section>
<title>Pure-ftpd</title>
<body>

<p>
Pure-ftpd est une branche provenant du projet trollftpd, modifié par Frank
Dennis pour des raisons de sécurité et pour améliorer ses fonctionnalité.
</p>

<p>
Utilisez des utilisateurs virtuels (jamais de comptes système) en activant
l'option <c>AUTH</c>. Donnez-lui la valeur <c>-lpuredb:/etc/pureftpd.pdb</c> et
créez vos utilisateurs en utilisant <c>/usr/bin/pure-pw</c>.
</p>

<pre caption="/etc/conf.d/pure-ftpd">
## Interdire les téléchargements si la partition est plus remplie que la valeur
suivante. ##
DISK_FULL="-k 90%"

AUTH="-lpuredb:/etc/pureftpd.pdb"

## Autres options ##
MISC_OTHER="-A -E -X -U 177:077 -d -4 -L100:5 -I 15"
</pre>

<p>
Configurez aussi votre paramètre <c>MISC_OTHER</c> pour ne pas autoriser les
utilisateurs anonymes (<c>-E</c>), pour utiliser le chroot pour tout le monde
(<c>-A</c>), pour que les utilisateurs ne puissent pas lire ou écrire des
fichiers commençant par un . (point) (<c>-X</c>), pour imposer un temps maximum
d'inactivité (<c>-I</c>), pour limiter la récursion (<c>-L</c>) et spécifier un
<c>umask</c> raisonnable.
</p>

<warn>
N'utilisez en <e>aucun</e> cas l'option <c>-w</c> ou <c>-W</c>&nbsp;!  Si vous
voulez héberger du warez, arrêtez de lire ce document&nbsp;!
</warn>

<p>
Pour en savoir plus, consultez <uri>http://www.pureftpd.org</uri>.
</p>

</body>
</section>

<section>
<title>Vsftpd</title>
<body>

<p>
Vsftpd (qui signifie&nbsp;: FTP très sécurisé («&nbsp;very secure FTP&nbsp;»))
est un petit démon FTP qui tourne avec un fichier de configuration par défaut
plutôt correct. Il est très simple et ne possède pas certaines fonctionnalités
que d'autres serveurs tels que pureftp et proftp possèdent.
</p>

<pre caption="/etc/vsftpd">
anonymous_enable=NO
local_enable=YES

# Lecture seulement
write_enable=NO

# Active la journalisation des transferts.
xferlog_std_format=YES

idle_session_timeout=20
data_connection_timeout=20
nopriv_user=nobody

chroot_list_enable=YES
chroot_list_file=/etc/vsftpd/chrootlist

ls_recurse_enable=NO
</pre>

<p>
Comme vous pouvez le constater, ce service ne contient pas de permissions
individuelles et pas d'action chroot de base. Mais en ce qui concerne la
configuration pour les utilisateurs anonymes, il est plutôt bon. Il peut
parfois être utile d'avoir un serveur FTP anonyme (afin de partager des sources
par exemple) et vsftpd est vraiment parfait pour cela.
</p>

</body>
</section>

<section>
<title>Qmail</title>
<body>

<p>
Le serveur de courrier Qmail est fréquemment qualifié de très sécuritaire. Il a
été écrit en misant sur la sécurité (et la paranoïa). Il n'autorise pas le
relais des courriels par défaut et n'a eu aucun trou de sécurité depuis 1996.
Faites tout simplement <c>emerge qmail</c> et configurez-le&nbsp;!
</p>

</body>
</section>

<section>
<title>Samba</title>
<body>

<p>
Samba est un protocole qui permet de partager des fichiers avec des réseaux
Microsoft/Novell et qui <e>ne devrait pas</e> être utilisé sur Internet. Il
faut néanmoins le sécuriser.
</p>

<pre caption="/etc/samba/smb.conf">
[global]
  # Lier à une interface.
  interfaces = eth0 10.0.0.1/32

  # Asurez-vous d'utiliser des mots de passe cryptés.
  encrypt passwords = yes
  directory security mask = 0700

  # Autoriser le trafic de 10.0.0.*.
  hosts allow = 10.0.0.

  # Permet l'authentification d'utilisateur.
  #(N'utilisez pas le mode partagé.)
  security = user

  # Interdit les comptes privilégiés.
  invalid users = root @wheel

  # Définit la taille maximum, en kilo-octets, affichée pour un élément partagé
  # (ce n'est pas une limite).
  max disk size = 102400

  # Définit la politique de mots de passe.
  min password length = 8
  null passwords = no

  # Utilise PAM (si ce dernier est supporté).
  obey pam restrictions = yes
  pam password change = yes
</pre>

<p>
Assurez-vous que les permissions sont placées correctement sur chaque partage
et lisez la <uri link="http://www.samba.org">documentation</uri>.
</p>

<p>
Redémarrez à présent le serveur et ajoutez les utilisateurs qui devraient avoir
accès à ce service. Vous pouvez le faire grâce à la commande
<path>/usr/bin/smbpasswd</path> avec le paramètre&nbsp;-a.
</p>

</body>
</section>

<section>
<title>ssh</title>
<body>

<p>
La seule option de sécurité que vous devez activer sur OpenSSH concerne
l'authentification basée sur le cryptage à clé publique. Beaucoup trop de sites
(comme <uri>http://www.sourceforge.net</uri>, <uri>http://www.php.net</uri> et
<uri>http://www.apache.org</uri>) ont souffert d'intrusions non autorisées sur
leurs systèmes à cause de mauvais mots de passe ou de mots de passe divulgués
par erreur.
</p>

<pre caption="/etc/ssh/sshd_config">
# Autorise uniquement la version 2.
Protocol 2

# Pas d'accès en tant que root. (Les utilisateurs devront utiliser su.)
PermitRootLogin no

# Active l'authentification par clé publique.
PubkeyAuthentication yes
AuthorizedKeysFile      .ssh/authorized_keys

# Désactive les fichiers .rhosts et l'authentification normale.
HostbasedAuthentication no
PasswordAuthentication no
PermitEmptyPasswords no

# Seuls les membres des groupes wheel ou admin ont accès.
AllowGroups wheel admin

# Parmi les membres de ces groupes, seuls kn et bs ont accès.
# @&lt;domainname&gt; est facultatif, mais peut remplacer
# l'ancienne directive AllowHosts
AllowUsers kn@gentoo.org bs@gentoo.org

# Règle le niveau de journalisation.
SyslogFacility AUTH
LogLevel INFO

ListenAddress 127.0.0.1
</pre>

<p>
Veuillez vérifier que l'option <c>UsePAM yes</c> ne se trouve pas dans votre
configuration, car cela empêche l'authentification par clé publique.
</p>

<p>
La seule chose que doivent maintenant faire vos utilisateurs est de créer une
clé (sur la machine depuis laquelle ils veulent se connecter) avec la commande
suivante&nbsp;:
</p>

<pre caption="Créer une paire de clés DSA">
# <i>/usr/bin/ssh-keygen -t dsa</i>
</pre>

<p>
Entrez une phrase de passe.
</p>

<pre caption="Sortie générée par ssh-keygen">
Generating public/private dsa key pair.
Enter file in which to save the key (/home/kn/.ssh/id_dsa):<i>[Tapez Entrée.]</i>
Created directory '/home/kn/.ssh'.
Enter passphrase (empty for no passphrase): <i>[Entrez votre phrase de passe.]</i>
Enter same passphrase again: <i>[Entrez votre phrase à nouveau.]</i>
Your identification has been saved in /home/kn/.ssh/id_dsa.
Your public key has been saved in /home/kn/.ssh/id_dsa.pub.
The key fingerprint is:
07:24:a9:12:7f:83:7e:af:b8:1f:89:a3:48:29:e2:a4 kn@knielsen
</pre>

<p>
Cela va ajouter deux fichiers dans votre répertoire <path>~/.ssh/</path>, nommés
<path>id_dsa</path> et <path>id_dsa.pub</path>. Le premier
fichier, <path>id_dsa</path>, est votre clé privée et devrait être gardée
précieusement pour vous-même et personne d'autre. L'autre fichier,
<path>id_dsa.pub</path>, est à distribuer à tous les serveurs auxquels vous
avez accès. Ajoutez la clé dans le répertoire personnel de l'utilisateur
dans <path>~/.ssh/authorized_keys</path>, puis l'utilisateur devrait être
capable de se connecter&nbsp;:
</p>

<pre caption="Ajouter la clé publique de id_dsa.pub au fichier authorized_keys">
$ <i>scp id_dsa.pub autre_machine:/var/tmp/currenthostname.pub</i>
$ <i>ssh other-host</i>
password:
$ <i>cat /var/tmp/currenthostname.pub >> ~/.ssh/authorized_keys</i>
</pre>

<p>
Vos utilisateurs devraient conserver leur clé privée précieusement. Il est
préconisé de la placer sur un support qu'ils ont toujours sur eux ou alors sur
leur station de travail (inclure cette options dans le règlement sur les <uri
link="?part=1&amp;chap=1#security_policies">mots de passe</uri>).
</p>

<p>
Vous trouverez plus d'informations sur le site officiel <uri
link="http://www.openssh.org">OpenSSH</uri>.
</p>

</body>
</section>

<section>
<title>Utiliser xinetd</title>
<body>

<p>
xinetd remplace <c>inetd</c> (que Gentoo ne propose pas), le démon pour les
services Internet. Il supporte les contrôles d'accès basés sur l'adresse de la
machine distante et sur l'heure de l'accès. Il fournit également des
fonctionnalités avancées de journalisation, incluant l'heure de démarrage du
serveur, l'adresse de la machine distante, le nom de l'utilisateur distant, la
durée de fonctionnement du serveur ainsi que les actions demandées.
</p>

<p>
Tout comme pour les autres services, il est important d'avoir une bonne
configuration par défaut.  Mais étant donné que <c>xinetd</c> fonctionne en
tant que root et supporte des protocoles dont vous pourriez ignorer le
fonctionnement, nous vous recommandons de ne pas l'utiliser.  Mais, si vous
désirez l'utiliser quand même, voici comment le sécuriser quelque peu&nbsp;:
</p>

<pre caption="Installation de xinetd">
# <i>emerge xinetd tcpd</i>
</pre>

<p>
Puis, éditez le fichier de configuration&nbsp;:
</p>

<pre caption="/etc/xinetd.conf">
defaults
{
 only_from      = localhost
 instances      = 10
 log_type       = SYSLOG authpriv info
 log_on_success = HOST PID
 log_on_failure = HOST
 cps            = 25 30
}

# Cela créera un pserver (cvs) via xinetd avec les paramètres suivants :
# Maximum de 10 instances (10 connexions simultanées).
# Limite le pserver en mode tcp uniquement.
# Utilise l'utilisateur cvs pour démarrer le service.
# Lie les interfaces à une seule IP.
# Autorise l'accès uniquement depuis 10.0.0.*.
# Limite l'accès des développeurs au serveur entre 8h et 17h.
# Utilise les « wrappers » tpcd (contrôlés par liste d'accès dans
# <i>/etc/hosts.allow</i> et <i>/etc/hosts.deny</i>).
# Le max_load sur la machine est de 1.0.
# L'option de désactivation est normalement inutilisée mais j'aime l'avoir
# si jamais elle doit être utilisée pour désactiver le service.
service cvspserver
{
 socket_type    = stream
 protocol       = tcp
 instances      = 10
 protocol       = tcp
 wait           = no
 user           = cvs
 bind           = 10.0.0.2
 only_from      = 10.0.0.0
 access_times   = 8:00-17:00
 server         = /usr/sbin/tcpd
 server_args    = /usr/bin/cvs --allow-root=/mnt/cvsdisk/cvsroot pserver
 max_load       = 1.0
 log_on_failure += RECORD
 disable        = no
}
</pre>

<p>
Pour plus d'informations, consultez <c>man 5 xinetd.conf</c>.
</p>

</body>
</section>

<section>
<title>X</title>
<body>

<p>
Xorg est configuré par défaut pour agir comme un serveur X. Cela peut être
dangeureux étant donné que X utilise des connexions tcp qui ne sont pas
cryptées et reste à l'écoute de clients X.
</p>

<impo>
Si vous n'avez pas besoin de ce service, désactivez-le&nbsp;!
</impo>

<p>
Si vous utilisez votre station comme serveur X, utilisez la commande
<path>/usr/X11R6/bin/xhost</path> avec précaution. Cette commande permet aux
clients de se connecter depuis d'autres machines et d'utiliser votre affichage.
Cela peut être utile si vous avez besoin de démarrer une application X depuis
une autre machine et que la seule façon de le faire est depuis le réseau, mais
cela peut aussi être exploité par un attaquant. La syntaxe de cette commande est
<c>/usr/X11R6/bin/xhost +hostname</c>.
</p>

<warn>
N'utilisez jamais la fonctionnalité <c>xhost +</c>&nbsp;! Elle permet à
n'importe quel client de se connecter et de prendre le contrôle de votre
session X. Si un attaquant peut contrôler votre X, il peut alors espionner vos
entrées clavier et contrôler votre bureau.  Si vous devez l'utiliser,
souvenez-vous de toujours spécifier un hôte.
</warn>

<p>
Une solution plus sécurisée est de désactiver cette fonctionnalité complètement
en démarrant votre X avec l'option <c>startx -- -nolisten tcp</c> ou bien en
désactivant complètement cette option dans le fichier de configuration&nbsp;:
</p>

<pre caption="/usr/X11R6/bin/startx">
defaultserverargs="-nolisten tcp"
</pre>

<p>
Pour vous assurer que <path>startx</path> ne soit pas écrasé lorsque vous
installez une nouvelle version de Xorg, vous devez le protéger.  Ajoutez la
ligne suivante au fichier <path>/etc/make.conf</path>&nbsp;:
</p>

<pre caption="/etc/make.conf">
CONFIG_PROTECT_MASK="/usr/X11R6/bin/startx"
</pre>

<p>
Si vous utilisez une invite de connexion graphique, vous devez utiliser une
approche différente.
</p>

<p>Pour <c>gdm</c> (GNOME Display Manager)&nbsp;:</p>

<pre caption="/etc/X11/gdm/gdm.conf">
[server-Standard]
command=/usr/X11R6/bin/X -nolisten tcp
</pre>

<p>
Pour <c>xdm</c> (X Display Manager) et <c>kdm</c> (KDE Display Manager)&nbsp;:
</p>

<pre caption="/etc/X11/xdm/Xservers">
:0 local /usr/bin/X11/X -nolisten tcp
</pre>

</body>
</section>
</sections>
