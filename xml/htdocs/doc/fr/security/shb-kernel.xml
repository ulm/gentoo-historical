<?xml version='1.0' encoding="UTF-8"?>
<!-- $Id: shb-kernel.xml,v 1.3 2006/11/09 10:19:35 neysx Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<sections>

<version>1.1</version>
<date>2005-08-03</date>

<section>
<title>Retirer des fonctionnalités</title>
<body>

<p>
La règle de base lorsque vous configurez le noyau est de retirer tout ce dont
vous n'avez pas besoin. Cela créera non seulement un noyau de petite taille
mais retirera également toute vulnérabilité qui pourrait être contenue dans un
pilote ou dans d'autres modules.
</p>

<p>
Vous pouvez également penser à désactiver le support du chargement des modules.
Même s'il est possible de charger des «&nbsp;root kits&nbsp;» sans cette option,
cela compliquera l'installation d'un «&nbsp;root kit&nbsp;» par le biais des
modules du noyau, du moins pour les attaquants conventionnels.
</p>

</body>
</section>

<section>
<title>Le système de fichiers /proc</title>
<body>

<p>
De nombreux paramètres peuvent être modifiés par le biais de <path>/proc</path>
ou en utilisant <c>sysctl</c>.
</p>

<p>
Vous devez avoir défini <c>CONFIG_SYSCTL</c> dans votre noyau afin de pouvoir
modifier des paramètres et variables du noyau dynamiquement. Le noyau 2.4
contient cette option par défaut.
</p>

<pre caption="Désactiver l'« IP forwarding »">
# <i>/bin/echo "0" &gt; /proc/sys/net/ipv4/ip_forward</i>
</pre>

<p>
Assurez-vous d'avoir désactivé l'«&nbsp;IP forwarding&nbsp;». Cela n'est utile
que pour une machine avec plusieurs cartes réseau.
</p>

<pre caption="Ignorer les paquets ping">
# <i>/bin/echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_all</i>
</pre>

<p>
Cette commande indiquera au noyau d'ignorer les messages de ping (messages icmp
de type 0).  La raison pour cela est qu'un paquet IP transportant un message
ICMP peut contenir beaucoup plus d'informations que vous ne le pensez.  Les
administrateurs utilisent ping comme un outil de diagnostic et se plaindront
souvent s'ils ne peuvent l'utiliser. Il n'y a aucune raison que quelqu'un de
l'extérieur puisse faire un ping, mais quelquefois cela peut être pratique pour
les utilisateurs locaux. Ce problème peut être résolu en désactivant les
messages icmp de type 0 sur le pare-feu.
</p>

<pre caption="Ignorer les pings de diffusion (« broadcast »)">
# <i>/bin/echo "1" &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts</i>
</pre>

<p>
Ceci désactive les réponses aux diffusions ICMP et préviendra des attaques
«&nbsp;smurf&nbsp;». Les attaques «&nbsp;smurf&nbsp;» fonctionnent en envoyant
un message  ICMP de type 0 (ping) à l'adresse de diffusion du réseau.
Typiquement, l'attaquant utilisera une adresse source fausse. Tous les
ordinateurs du réseau répondront alors au message ping et l'hôte qui possède
vraiment l'adresse source utilisée sera surchargé de messages.
</p>

<pre caption="Désactiver le routage de paquets d'origine interne">
# <i>/bin/echo "0" &gt; /proc/sys/net/ipv4/conf/all/accept_source_route</i>
</pre>

<p>
N'acceptez pas les paquets apparemment d'origine interne. Un attaquant peut en
effet générer du trafic vers votre réseau en prétendant faire partie du réseau
interne.  Accepter de tels paquets lui permettrait alors de compromettre votre
réseau. Le routage de paquets d'origine interne est rarement utilisé à des fins
légitimes&nbsp;; désactivez-le donc.
</p>

<pre caption="Désactiver l'autorisation de redirection">
# <i>/bin/echo "0" &gt; /proc/sys/net/ipv4/conf/all/accept_redirects</i>
# <i>/bin/echo "0" &gt; /proc/sys/net/ipv4/conf/all/secure_redirects</i>
</pre>

<p>
Désactivez l'autorisation des redirections ICMP. Elles sont souvent utilisées
pour altérer vos tables de routage, parfois de façon malicieuse.
</p>

<pre caption="Protection contre les mauvais messages d'erreurs">
# <i>/bin/echo "1" &gt; /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses</i>
</pre>

<p>
Activez la protection contre les faux messages d'erreurs.
</p>

<pre caption="Activer le filtrage de chemin inverse">
# <i>for i in /proc/sys/net/ipv4/conf/*; do
        /bin/echo "1" &gt; $i/rp_filter
done</i>
</pre>

<p>
Activez le filtrage de chemin inverse. Cela vous permet de vous assurer que les
paquets utilisent des adresses sources légitimes en rejettant automatiquement
les paquets entrants si l'entrée de leur adresse source dans la table de
routage ne correspond pas à la carte réseau par laquelle ils entrent. Un des
avantages est de pouvoir empêcher l'usurpation d'IP («&nbsp;spoofing&nbsp;»).
Cette option doit être activée sur toutes les interfaces
<path>net/ipv4/conf/*</path> pour être efficace.
</p>

<warn>
Par contre, cela peut poser des problèmes si vous utilisez un routage
asymétrique (les paquets qui vont de votre machine vers une autre prennent un
chemin différent de celui pris par les paquets revenant de cette machine vers
la vôtre) ou bien si vous utilisez un hôte non routant qui a plusieurs adresses
IP sur différentes cartes.
</warn>

<pre caption="Consigner tous les paquets falsifiés, routés par la source et redirigés">
# <i>/bin/echo "1" &gt; /proc/sys/net/ipv4/conf/all/log_martians</i>
</pre>

<p>
Enregistre dans le journal les paquets falsifiés, les paquets routés par la
source et ceux qui sont redirigés.
</p>

<p>
Tous ces paramètres seront effacés lors de votre prochain redémarrage. Je vous
conseille donc de les ajouter au fichier de configuration
<path>/etc/sysctl.conf</path> qui est utilisé par le script d'initialisation
<path>/etc/init.d/bootmisc</path>.
</p>

<p>
La syntaxe à utiliser dans le fichier <path>/etc/sysctl.conf</path> est simple.
Vous devez utiliser la même syntaxe que ci-dessus en enlevant la partie
<path>/proc/sys/</path> des chemins mentionnés ci-dessus et en remplaçant les
<path>/</path> par des <path>.</path>&nbsp;:
</p>

<pre caption="Configurer sysctl.conf">
<comment>(La commande manuelle) :</comment>
/bin/echo "0" &gt; /proc/sys/net/ipv4/ip_forward

<comment>(Initialisation automatique via sysctl.conf) :</comment>
net.ipv4.ip_forward = 0
</pre>

</body>
</section>

<section>
<title>Grsecurity</title>
<body>

<p>
Le correctif disponible sur <uri link="http://grsecurity.net">Grsecurity</uri>
est inclus dans les sources <c>sys-kernel/hardened-sources</c>, mais il est
désactivé par défaut.  Configurez votre noyau comme vous le faites normalement
et configurez ensuite l'option Grsecurity (sélectionnez l'option
«&nbsp;custom&nbsp;»). Des explications détaillées sont disponibles sur la page
du projet <uri link="/proj/en/hardened/">Gentoo Hardened</uri>.
</p>

<p>
Les sources <c>hardened-sources</c> récentes contiennent la version 2.* de
Grsecurity. Pour de plus amples informations, veuillez consulter la
documentation disponible sur la <uri link="http://www.grsecurity.net/">page
d'accueil de Grsecurity</uri>.
</p>
</body>
</section>

<section>
<title>Kerneli</title>
<body>

<p>
<uri link="http://www.Kerneli.org">Kerneli</uri> est un correctif qui ajoute des
fonctions de cryptage à votre noyau. En corrigeant votre noyau, vous obtiendrez
de nouvelles options comme&nbsp;: le chiffrement cryptographique, des algorithmes de
validation et des filtres de boucles cryptographiques.
</p>

<warn>
Le correctif kerneli n'est actuellement pas stable pour les derniers noyaux.
Vous prenez donc des risques en l'utilisant.
</warn>

</body>
</section>

<section>
<title>Autres correctifs du noyau</title>
<body>

<ul>
  <li><uri link="http://www.openwall.com">Le projet OpenWall</uri></li>
  <li>
    <uri link="http://www.lids.org">Système de détection d'intrusion pour
    Linux</uri>
  </li>
  <li><uri link="http://www.rsbac.org">Contrôle d'accès par règles</uri></li>
  <li>
    <uri link="http://www.nsa.gov/selinux">Le noyau sécurisé de la NSA</uri>
  </li>
  <li><uri link="http://sourceforge.net/projects/wolk/">Wolk</uri></li>
</ul>

<p>
Il en existe probablement beaucoup d'autres.
</p>

</body>
</section>
</sections>
