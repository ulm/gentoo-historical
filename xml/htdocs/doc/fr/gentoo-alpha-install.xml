<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/gentoo-alpha-install.xml,v 1.3 2004/02/24 22:15:46 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/gentoo-alpha-install.xml">
<title>Guide d'installation de Gentoo sur Alpha</title>

<author title="Développeur Gentoo Alpha">
  <mail link="taviso@gentoo.org">Tavis Ormandy</mail>
</author>
<author title="Développeur Gentoo Alpha">
  <mail link="agriffis@gentoo.org">Aron Griffis</mail>
</author>
<author title="Traducteur">
  <mail link="frederic.baujard@dev.gaeia.org">Frédéric Baujard</mail>
</author>

<abstract>
Ce guide décrit la procédure d'installation de Gentoo Linux sur du matériel Alpha.
</abstract>

<license/>

<version>1.1</version>
<date>3 février 2004</date>
<chapter>
<title>Introduction</title>
<section>
<title>Introduction à Gentoo Linux sur Alpha</title>
<body>
<p>
Alpha est le nom donné à l'architecture RISC 64-bit de Digital Equipment, une
architecture à hautes performances supportée par Linux depuis 1995.  Gentoo
Linux a été porté sur Alpha par Bjoern Brauel en 2002 et a été amélioré depuis.
</p>
<p>
Gentoo exige du matériel relativement puissant. Bien que Gentoo ait été
installée sur une petite AlphaStation 200, cela n'est pas recommandé sans une
énorme patience. Une liste de modèles Alpha connus pour supporter Linux est
disponible <uri link="http://www.alphalinux.org/faq/FAQ-5.html">ici</uri>.
Toutes ces machines n'ont pas été testées avec Gentoo Linux bien que nous nous
efforçons de le faire.
</p>
<note>
Si vous réussissez à installer Gentoo sur une machine non listée, dites-le nous
s'il vous plaît, soit par mail soit en installant le package
<i>gentoo-stats</i>.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Préparation avant l'installation</title>
<section>
<title>Démarrez votre Alpha</title>
<body>
<p>
<b>Firmware</b>
</p>
<p>
Le firmware est le premier logiciel qui est exécuté quand votre système Alpha
est allumé, c'est un peu un synonyme du BIOS pour les systèmes PC.  Il y a deux
différents types de firmware sur les machines Alpha&nbsp;: SRM et ARCs.
</p>
<impo>
Certains systèmes Alpha sont capables d'utiliser SRM et ARCs, si cela
correspond à votre système, vous devriez suivre ces <uri
link="http://www.alphalinux.org/faq/x31.html">instructions</uri> pour passer en
SRM. Si votre système utilise déjà le SRM, ne changez rien.
</impo>
<table>
<tr>
<th>SRM console</th>
<ti>
  Basé sur les spécifications du sous-système de la console Alpha, ce qui
  fournit un environnement opérationnel pour OpenVMS, Tru64 UNIX et les
  systèmes d'exploitations Linux.
</ti>
</tr>
<tr>
<th>ARCs console</th>
<ti>
  Inclut les consoles <i>ARC</i>, <i>AlphaBIOS</i> et <i>ARCSBIOS</i>. Basé sur
  les spécifications du "Advanced RISC Computing (ARC)" qui fournit un
  environnement opérationnel pour Windows NT.
</ti>
</tr>
</table>
<p>
<note>
Si votre système ne peut utiliser que ARC (Ruffian, nautilus, xl, etc.), vous
pouvez utiliser Gentoo Linux avec le chargeur de démarrage <i>MILO</i>, les
instructions sont décrites plus bas. Vous pouvez aussi utiliser MILO si vous
voulez avoir un dual boot avec Windows NT ou si votre matériel ne peut démarrer
qu'avec MILO.
</note>
</p>
</body>
</section>

<section>
<title>Utiliser une installation Linux Existante</title>
<body>
<p>
Si une distribution Linux est déjà installée sur votre Alpha, vous pouvez
l'utiliser pour préparer et installer Gentoo Linux. La plupart des
distributions populaires fonctionnent bien, debian, SuSE, RedHat, Slackware,
etc. Il est primordial de disposer de la commande `<i>chroot</i>`, utilisez la
commande suivante pour vérifier si elle est disponible sur votre machine.
</p>
<pre caption="Vérification de chroot">
# <i>which chroot</i>
/usr/bin/chroot
</pre>
<p>
Votre connexion réseau doit être disponible depuis l'hôte à partir duquel vous
faites l'installation, vous pouvez la tester avec la commande suivante&nbsp;:
</p>
<pre caption="Vérification d'un réseau fonctionnel">
# <i>ping -c 1 gentoo.org</i>
PING gentoo.org (128.193.0.34): 56 octets data
64 octets from 128.193.0.34: icmp_seq=0 ttl=51 time=174.7 ms

--- gentoo.org ping statistics ---
1 packets transmitted, 1 packets received, 0% packet loss
round-trip min/avg/max = 174.7/174.7/174.7 ms
</pre>
<p>
Si votre Alpha a un réseau installé et fonctionnel, vous pouvez passer la
prochaine section et commencer à préparer les disques.
</p>
</body>
</section>

<section>
<title>Démarrer en utilisant le LiveCD Gentoo</title>
<body>
<p>
Si votre système peut démarrer depuis un CD-ROM, Gentoo fournit une image de CD
démarrable qui utilise aboot automatiquement. L'image du LiveCD est disponible
<uri
link="http://distro.ibiblio.org/pub/linux/distributions/gentoo/releases/1.4_rc1/alpha/">ici</uri>.
La commande suivante fera démarrer la machine en utilisant le CD-ROM&nbsp;:
</p>
<pre caption="Démarrage depuis le CD-ROM en utilisant SRM">
>>> <i>boot dqa0 -flags 0</i>
</pre>
<p>
<note><i>dqa0</i> est votre lecteur CD-ROM en notation SRM.</note>
</p>
<pre caption="Démarrage depuis le CD-ROM en utilisant MILO">
MILO> <i>boot hdb:boot/vmlinuz initrd=initrd.img root=/dev/ram0 init=/linuxrc</i>
</pre>
<note>
Si vous n'avez pas de partition MILO ou une disquette de démarrage, mais que
vous voulez utiliser MILO, vous pouvez utiliser les images MILO Gentoo
précompilées disponibles <uri
link="http://dev.gentoo.org/~taviso/milo/">ici</uri>.
</note>
<note>
<i>hdb</i> devrait être le nom du périphérique de votre lecteur CD-ROM.
</note>
</body>
</section>

<section>
<title>Installation du réseau</title>
<body>
<p>
Maintenant que votre machine est démarrée, vous devez installer votre connexion
réseau. Si vous utilisez le LiveCD Gentoo, cela vous donnera accès aux
utilitaires tels que ssh, scp, irssi et wget pendant l'installation.
</p>
<p>
Tapez les commandes suivantes, en remplaçant $IFACE par votre interface réseau
(eth0, par exemple), $IPNUM par votre adresse IP, $BCAST par votre adresse de
broadcast et $NMASK par votre masque réseau. Pour la commande route, remplacez
$GTWAY par votre passerelle par défaut.
</p>
<pre caption="Configuration de votre réseau">
# <i>/sbin/ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</i>
# <i>/sbin/route add default gw $GTWAY </i>
</pre>
<p>
Vous pouvez tester votre configuration réseau en lançant /sbin/ifconfig -a . Si
tout paraît bon, vous pouvez essayer d'utiliser la commande ping vers des
machines sur Internet.
</p>
</body>
</section>

<section>
<title>Configuration du proxy</title>
<body>
<p>
Si vous accédez à Internet via un proxy, vous aurez besoin de le configurer
avant de continuer. Vous pouvez exporter les variables suivantes pour utiliser
votre proxy, vous devrez contacter votre administrateur si vous n'êtes pas sûr
des détails.
</p>
<pre caption="Configuration d'un Proxy">
# <i>export http_proxy="machine.société.com:1234"</i> 
# <i>export ftp_proxy="machine.société.com"</i>
# <i>export RSYNC_PROXY="machine.société.com"</i>
</pre>
</body>
</section>  

<section>
<title>Preparation des disques</title>
<body>
<p>Voyons quels disques vous avez en lançant&nbsp;:
</p>
<pre caption="Identification des disques disponibles">
# <i>dmesg | grep 'drive$'</i>   <codenote>Interface IDE</codenote>
# <i>dmesg | grep 'scsi'</i>    <codenote>Interface SCSI</codenote>
</pre>
<p>
Le résultat affiché devrait vous montrer quels disques sont détectés et leurs
entrées dans le répertoire /dev du système.
</p>
<note>
Les instructions suivantes sont basées sur le fait que vous utilisez des
disques SCSI et que vous avez choisi d'installer sur le disque 0.
</note>
<p>
<note>
Les utilisateurs de MILO n'ont pas de souci à se faire à propos du disklabel
des disques et n'ont pas à utiliser l'utilitaire <i>fdisk</i> à moins de le
vouloir, l'utilitaire plus sympa <i>cfdisk</i> est disponible.
</note>
</p>
<p>
<pre caption="Lancement de fdisk">
# <i>fdisk /dev/sda</i>
</pre>
</p>
<p>
Fdisk vous permet d'éditer le disklabel BSD du disque. Vous devrez commencer
par effacer <b>toutes</b> les partitions excepté 'c' (la partition de tout le
disque).
</p>
<p>
Vous pouvez maintenant commencer le partitionnement en ajoutant une partition
swap comme partition 'a' commençant au cylindre 3. Généralement, vous allouez
de deux fois la taille de votre RAM disponible, cependant, ce n'est pas
toujours pratique. À vous de faire au mieux. Le type de partition (mis en
utilisant 't') doit être 1 (swap).
</p>

<warn>
Il est très important que la partition mentionnée ci-dessus ne commence pas au
cylindre 1, car vous aurez besoin de place au début du disque pour l'image de
démarrage.
</warn>
<p>
Ajoutez une partition ext2 comme partition 'b' commençant au premier cylindre
après votre partition de swap et se terminant un cylindre *avant* la fin du
disque.
</p>
<impo>
Vous derez toujours mettre le type de la partition à 8 (ext2), peu importe
le(s) système(s) de fichier que vous prévoyez d'utiliser.
</impo>
<note>
fdisk a un bug et vous laisse créer une partition qui va au delà de la fin du
disque d'un cylindre. Vérifiez d'avoir mis la fin de votre partition sur le
cylindre maximum moins 1.
</note>
<p>
Voici un exemple d'installation&nbsp;:
</p>
<pre caption="Exemple de session fdisk">
# <i>fdisk /dev/sda</i>
Detected an OSF/1 disklabel on /dev/sda,
entering disklabel mode.

BSD disklabel command (m for help): <i>p</i>

8 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        1       235*      234*    4.2BSD     1024  8192    16
  b:      235*      469*      234*      swap
  c:        1      5290*     5289*    unused        0     0
  d:      469*     2076*     1607*    unused        0     0
  e:     2076*     3683*     1607*    unused        0     0
  f:     3683*     5290*     1607*    unused        0     0
  g:      469*     1749*     1280     4.2BSD     1024  8192    16
  h:     1749*     5290*     3541*    unused        0     0

BSD disklabel command (m for help): <i>d</i>
Partition (a-h): <i>a</i>

<codenote> à répéter pour b, d, e, f, g, h mais PAS c </codenote>

BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  c:        1      5290*     5289*    unused        0     0

BSD disklabel command (m for help): <i>n</i>
Partition (a-p): <i>a</i>
First cylinder (1-5290, default 1): <i>3</i>
Last cylinder or +size or +sizeM or +sizeK (3-5290, default 5290): <i>+1000M</i>

BSD disklabel command (m for help): <i>t</i>
Partition (a-c): <i>a</i>
Hex code (type L to list codes): <i>1</i>

BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        3      1003      1001       swap
  c:        1      5290*     5289*    unused        0     0
D disklabel command (m for help): <i>n</i>
Partition (a-p): <i>b</i>
First cylinder (1-5290, default 1): <i>1004</i>
Last cylinder or +size or +sizeM or +sizeK (1004-5290, default 5290): <i>5289</i>

BSD disklabel command (m for help): <i>t</i>
Partition (a-c): <i>b</i>
Hex code (type L to list codes): <i>8</i>

BSD disklabel command (m for help): <i>p</i>

3 partitions:
#       start       end      size     fstype   [fsize bsize   cpg]                                    
  a:        3      1003      1001       swap
  b:     1004      5289      4286       ext2
  c:        1      5290*     5289*    unused        0     0

</pre>
<note>
Maintenant, vous pouvez utiliser 'w' pour écrire la table des partitions et 'q'
pour quitter fdisk.
</note>
<p>
Vous pouvez maintenant activer la partition de swap pour l'utiliser pendant le
processus de bootstrap.
</p>
<pre caption="Mise en place et activation de la partition de swap">
    # <i>mkswap /dev/sda1</i>
    # <i>swapon /dev/sda1</i>
</pre>
<p>
Maintenant, créez la partition racine. Cet exemple va créer et monter un
système de fichiers ext3 (ext2 journalisé).
</p>
<pre caption="Création du système de fichiers">
    # <i>mke2fs -j /dev/sda2</i>
    # <i>mkdir /mnt/gentoo</i>
    # <i>mount /dev/sda2 /mnt/gentoo</i>
</pre>
<warn>
En espérant que vous n'avez rien sur le disque dont vous pourriez avoir besoin... ;-)
</warn>
<note>
Les instructions ci-dessus et ci-dessous sont basées sur le fait que vous
utilisez ext3 comme système de fichiers primaire. Cela fonctionne bien car
aboot peut lire les partitions ext2/ext3, cependant, cela a un prix&nbsp;: ext3
est un peu plus lent comparé à xfs ou reiserfs. Si vous voulez utiliser
reiserfs ou xfs pour votre partition primaire (le type de la partition est
toujours 8), alors vous devez créer une partition ext2 supplémentaire de 20Mo à
monter en tant que /boot. Vous pouvez créer cette partition en 'b' et la
partition principale en 'd'. Vous devrez aussi modifier les instructions de
aboot (voir plus bas) en mettant le fichier de configuration de aboot dans
/boot/etc/aboot.conf où il pourra le retrouver.
</note>
<note>
Les utilisateur de MILO peuvent utiliser ext2/3 ou reiserfs pour leur partition
racine. Si vous prévoyez l'utilisation de XFS, vous devrez créer une partition
/boot pour stocker le noyau, et stocker votre milo.conf dans les variables
d'environnement (ou utiliser le mode interactif) plutôt que dans
/etc/milo.conf. La plupart des utilisateurs de MILO utilisent une image sur
disquette pour démarrer MILO, cependant, si vous préférez ne pas faire ça, vous
pouvez créer une petite partition (2-3Mo) MS-DOS. Souvenez-vous que vous devrez
définir les variables d'environnement appropriées puisque le comportement par
défaut est d'utiliser le lecteur de disquette.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Installation de Gentoo</title>
<section>
<title>Désarchivez l'archive Stage 1</title>
<body>
<p>
Maintenant que vos disques sont prêts pour l'installation de Gentoo, nous avons
besoin de récupérer l'archive stage 1 qui va créer la structure des répertoires
et la base du système requis pour l'opération de bootstrap.
</p>

<pre caption="Obtenir l'archive Stage1">
# <i>tftp -g -l /mnt/gentoo/stage1-alpha-1.4.tar.gz -r \
/home/tftp/stage1-alpha-1.4.tar.gz tftp_host</i> <codenote>récupération via tftp</codenote>
# <i>wget http://distro.ibiblio.org/pub/linux/distributions\
/gentoo/releases/1.4_rc1/alpha/stage1-alpha-1.4-r1.tbz2</i> <codenote> ou via wget</codenote>

# <i>cd /mnt/gentoo </i>
# <i>tar -jxvpf stage1-alpha-1.4-r1.tbz2  </i>
</pre>
<note>
Vous pouvez aussi la récupérer en utilisant scp, CD-ROM (ou autres) ou avec lynx.
</note>
<p>
<note>
N'oubliez pas d'utiliser l'option p pour la commande tar sans quoi les
permissions sur les fichiers seront incorrectes.
</note>
</p>
<p>
Vous pouvez maintenant monter le système /proc qui est utilisé durant
l'opération de bootstrap.
</p>

<pre caption="Montez le système /proc">
# <i>mount --bind /proc /mnt/gentoo/proc</i>
</pre>
<p>
Créez un fichier resolv.conf dans le bon répertoire pour que la résolution de
noms fonctionne, vous pouvez vous baser sur l'exemple suivant ou copiez un
fichier existant depuis /etc.
</p>
<pre>
# <i>cat > /mnt/gentoo/etc/resolv.conf</i>   <codenote>créer un nouveau resolv.conf</codenote>
<i>domain exemple.net
nameserver     123.12.12.106
nameserver     13.340.0.12
^D</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i> <codenote>copier le fichier existant</codenote>
</pre>
<p>
Maintenant, vous pouvez mettre un hostname et le faire définir au démarrage.
</p>

<pre caption="Définir le hostname">
# <i>hostname mon_hostname.domaine.com </i>
# <i>echo mon_hostname.domaine.com > /mnt/gentoo/etc/hostname</i>
</pre>
<p>
Entrez dans l'environnement chroot&nbsp;:
</p>
<pre>
# <i>chroot /mnt/gentoo /bin/bash </i>
# <i>env-update</i>
# <i>. /etc/profile</i>
</pre>
<p>
Vous êtes maintenant dans le nouveau système gentoo et vous êtes prêt à
commencer l'opération de bootstrap&nbsp;!
</p>
</body>
</section>

<section>
<title>Bootstrap</title>
<body>
<p>
Avant tout, vous devez récupérer une copie de l'arbre de Portage qui fait
approximativement 100Mo, mais il suffit de le faire une fois.
<pre caption="Récupération de l'arbre de Portage">
# <i>emerge sync</i>
</pre>
Si votre réseau est correctement installé, la commande ci-dessus va remplir
votre répertoire /usr/portage et récupérer le script de bootstrap.
</p>
<p>
Maintenant, c'est le moment d'adapter <path>/etc/make.conf</path>, vous devrez
d'abord utiliser la commande ci-dessous pour examiner les caractéristiques de
votre processeur. Notez votre modèle cpu, vous en aurez besoin plus tard.
</p>
<pre caption="editez /etc/make.conf">
# <i>cat /proc/cpuinfo</i>    <codenote>Liste les détails du processeur</codenote>
# <i>alias nano='nano -w'</i> <codenote>Pratique pour les fichiers de configuration</codenote>
# <i>nano /etc/make.conf</i>
</pre>
<p>
Vous devrez modifier quelques variables avant de continuer. Votre variable USE
détermine commemnt les différents paquets sont installés, vous devriez utiliser
"zlib" à moins d'avoir une bonne raison de ne pas le faire, et aussi mettre
"ev6" si votre processeur est un ev6 ou plus.
</p>
<p>
<pre caption="Paramétrage de make.conf">
USE="zlib ev6 X -qt -kde gtk"
<codenote>utilisez SEULEMENT ev6 si vous avez réellement un ev6+</codenote>

CHOST="alpha-unknown-linux-gnu"
CFLAGS="-mcpu=cpu_type -O3 -pipe"
<codenote>où le cpu_type est déterminé par /proc/cpuinfo</codenote>
ACCEPT_KEYWORDS="~alpha"
<codenote>facultatif, autorise l'installation de paquets potentiellement instables</codenote>
</pre>
</p>
<p>
Maintenant que tout est prêt et paramétré pour commencer le processus de
bootstrap, utilisez la commande ci-dessous pour le lancer.
<pre caption="Lancement du bootstrap">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>
</p>
<p>
Bootstrap est un processus long, cette table vous donnera une idée de la durée
que cela peut prendre.
</p>
<table>
<tr>
<th>Système</th>
<th>Estimation de la durée de Bootstrap</th>
</tr>
<tr>
<ti>Brisbane</ti>
<ti>4 heures</ti>
</tr>
<tr>
<ti>Ruffian</ti>
<ti>5 heures</ti>
</tr>
<tr>
<ti>Avanti</ti>
<ti>36 heures</ti>
</tr>
<tr>
<ti>164LX</ti>
<ti>4 heures</ti>
</tr>
</table>
</body>
</section>

<section>
<title>Emerge du système</title>
<body>
<p>
Maintenant que le bootstrap est terminé, vous pouvez utilisez emerge pour
installer votre base du système gentoo, vous pouvez commencer par voir ce qui
sera installé&nbsp;:
</p>
<pre>
# <i>emerge system --pretend</i>
</pre>
<p>
Ensuite, faites le emerge réel en vérifiant que les fichiers de configuration
ne sont pas protégés (seulement la première fois).
<pre caption="Installation du système">
# <i>CONFIG_PROTECT="" emerge system</i>
</pre>
</p>
<note>
Cela va encore durer un long moment, soyez patient !
</note>
<note>
La ligne export CONFIG_PROTECT="" assure que n'importe quel nouveau script
installé dans /etc écrasera l'ancienne version (paquet sys-apps/baselayout), en
évitant le système de gestion des nouveaux scripts de configuration de Portage.
Tapez emerge --help config pour plus de détails.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Etapes finales</title>
<section>
<title>Installation d'un système de log</title>
<body>
<p>
Vous devez maintenant installer un système de log, un démon cron et le démon
at. Différents choix sont possibles&nbsp;; l'exemple ci-dessous utilise
syslog-ng et vixie-cron.  Vous pouvez aussi choisir metalog ou syslog pour votre
système de log, et dcron ou fcron pour le démon cron.
</p>
<pre caption="Système de log, démons cron et at">
# <i>emerge syslog-ng vixie-cron at</i>
# <i>rc-update add syslog-ng default</i>
# <i>rc-update add vixie-cron default</i>
# <i>rc-update add atd default</i>
</pre>
<p>
Avant de passer à l'installation du noyau, vous devriez éditer votre
<path>/etc/fstab</path>, définir l'heure locale et définir le mot de passe
root.
</p>
<note>
Le paramétrage de l'heure locale garantit que tous les utilisateurs auront un
affichage correct à la commande <c>uname -a</c>.
</note>
<pre caption="Etapes Finales">
# <i>ln -sf /usr/share/zoneinfo/chemin/vers/fuseauhoraire /etc/localtime</i>
# <i>passwd root</i>
# <i>nano /etc/fstab</i>
</pre>
<p>
Dans le fichier <path>fstab</path>, vous devriez commenter le /dev/BOOT si vous
n'utilisez pas de partition de boot séparée. /dev/ROOT et /dev/SWAP doivent
être effacés (utilisez ctrl-k) et remplacez-les par quelque chose comme&nbsp;:
<pre caption="Paramètres de fstab">
/dev/sda1  none  swap  sw      0 0
/dev/sda2  /     ext3  noatime 0 0
</pre>
</p>
<note>
L'option noatime désactive l'enregistrement des heures des accès pour améliorer
les performances.
</note>
</body>
</section>

<section>
<title>Installation du noyau</title>
<body>
<p>
Vous devez maintenant choisir un noyau, 3 choix sont possibles pour les
utilisateurs "alpha"&nbsp;: les sources vanilla, les sources alpha et les
sources compaq. Les sources alpha contiennent une série de patchs spécifiques
aux utilisateurs alpha qui comprennent des fonctionnalités supplémentaires et
des corrections de bugs. Les sources vanilla sont les mêmes sources que celles
qui sont sur kernel.org. Les sources compaq sont le noyau fourni avec RedHat
Linux 7.2 pour Alpha, elles sont maintenues par Compaq en même temps que les
outils Alpha.
</p>
<p>
<pre caption="Obtenir un noyau">
# <i>emerge -p alpha-sources</i>
# <i>emerge alpha-sources</i>
</pre>
</p>
<p>
Dès que votre arbre de sources de noyau est disponible, vous pouvez commencer
la construction de votre propre noyau.  Une liste d'options recommandées se
trouve ci-dessous.
</p>
<pre caption="Construction d'un noyau Linux">
# <i>cd /usr/src/linux</i>
# <i>make mrproper menuconfig </i>
<codenote>&lt; choisissez les paramètres de votre noyau &gt;</codenote>
# <i>make dep vmlinux modules modules_install</i>
</pre>
<pre caption="Options recommandées du noyau">
    General setup
        (Sélectionnez votre système dans la liste) Alpha system type (http://www.alphalinux.org/docs/goldrush/)
        &lt;*&gt; SRM environment through procfs
  &lt;*&gt; Configure uac policy via sysctl
    Plug and Play configuration
        &lt;*&gt; Plug and Play support
            &lt;M&gt; ISA Plug and Play support
    SCSI support
        SCSI low-level drivers
            &lt;*&gt; SYM53C8XX Version 2 SCSI support (NEW)
            &lt;*&gt; Qlogic ISP SCSI support
    Network device support
        Ethernet (10 or 100 Mbit)
            &lt;M&gt; DECchip Tulip (dc21x4x) PCI support
            &lt;M&gt; Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA
            &lt;M&gt; EtherExpressPro/100 support (eepro100)
            &lt;M&gt; EtherExpressPro/100 support (e100)
        Ethernet (1000 Mbit)
            &lt;M&gt; Alteon AceNIC
                [*] Omit support for old Tigon I
            &lt;M&gt; Broadcom Tigon3
        [*] FDDI driver support
            &lt;M&gt; Digital DEFEA and DEFPA
        &lt;*&gt; PPP support
            &lt;*&gt; PPP Deflate compression
    Character devices
        [*] Support for console on serial port
        [*] Direct Rendering Manager
    File systems
        &lt;*&gt; Kernel automounter version 4 support
        &lt;*&gt; Reiserfs support
        &lt;*&gt; Ext3 journalling file system support
        [*] /dev file system support
            [*] Automatically mount at boot
        &lt;*&gt; UFS file system support
        &lt;*&gt; XFS filesystem support
        Network File Systems
            &lt;*&gt; NFS
                [*] NFSv3 client
            &lt;*&gt; NFS server
                [*] NFSv3 server
        Partition Types
            [*] Advanced partition selection
                [*] Alpha OSF partition support
        Native Language Support
            &lt;*&gt; NLS ISO 8859-1
    Sound
        &lt;M&gt; Sound card support
            &lt;M&gt; OSS sound modules
                [*] Verbose initialisation
                [*] Persistent DMA buffers
                &lt;M&gt; 100% Sound Blaster compatibles
</pre>
<p>
Vous pouvez maintenant installer votre noyau dans /boot, la méthode suivante
vous permet d'installer plusieurs noyaux et de passer de l'un à l'autre
facilement.
</p>
<warn>
Dans <i>General Setup</i>, si l'option "<i>use srm as bootloader</i>" est
disponible, vous <b>devez</b> la sélectionner.
</warn>
<pre caption="Installation de votre nouveau noyau">
# <i>gzip -9c vmlinux > /boot/vmlinuz-2.4.xx-alpha</i> <codenote> ou -vanilla/-compaq, cela dépend du noyau</codenote>
# <i>cp System.map /boot/System.map-2.4.xx-alpha</i>
# <i>cp .config /boot/config-2.4.xx-alpha</i>
# <i>cd /boot</i>
# <i>ln -s vmlinuz-2.4.xx-alpha vmlinuz</i>
# <i>ln -s System.map-2.4.xx-alpha System.map</i>
</pre>
</body>
</section>

<section>
<title>Installation du chargeur de démarrage</title>
<body>
<b>Le chargeur de démarrage aboot</b>
<p>
Rendez votre disque démarrable en écrivant le chargeur de démarrage aboot au
début de votre disque. Si vous avez utilisé une configuration à plusieurs
disques, vous aurez besoin de lire les pages man de <i>swriteboot(8)</i> et
<i>abootconf(8)</i>.
<pre caption="Installation de aboot">
# <i>emerge aboot</i>
# <i>swriteboot -f3 /dev/sda /boot/bootlx</i>
# <i>abootconf /dev/sda 2</i>
</pre>
<p>
De plus, vous pouvez faire en sorte que Gentoo démarre plus facilement en
paramétrant le fichier de configuration de aboot et la variable SRM
boot_osflags. Vous devrez vérifier que le bootdef_dev est correctement
paramétré (c'est plus facile à faire à la console que sous Linux).
</p>
<pre>
# <i>echo '0:2/boot/vmlinux.gz root=/dev/sda2' > /etc/aboot.conf</i>
# <i>echo -n 0 > /proc/srm_environment/named_variables/boot_osflags</i>
# <i>echo -n '' > /proc/srm_environment/named_variables/boot_file</i>
</pre>
<p>
Si vous faites l'installation en utilisant une console connectée sur le port
série, n'oubliez pas d'inclure le paramètre de la console série dans
aboot.conf. Voyez <i>/etc/aboot.conf.example</i> pour plus d'informations. De
plus, vous devez autoriser le login sur le port série&nbsp;:
</p>
<pre>
# <i>echo tts/0 >> /etc/securetty</i>
# <i>echo 's0:12345:respawn:/sbin/agetty 9600 tts/0 vt100' >> /etc/inittab</i>
</pre>
</p>
<p>
<b>Le chargeur de démarrage MILO</b>
</p>
<p>
Si vous utilisez MILO, vous pouvez l'installer maintenant. Vous devrez décider
comment vous allez démarrer MILO, cet exemple suppose que vous voulez faire une
disquette de démarrage MILO, si vous voulez démarrer depuis une partition
MS-DOS de votre disque dur, vous devrez exécuter les commandes appropriées.
</p>
<pre caption="Installer le chargeur de démarrage MILO">
# <i>emerge -pv sys-apps/milo</i>
# <i>emerge sys-apps/milo</i>
</pre>
<note>
MILO nécessite la construction du noyau Linux et du code MILO, cela prendra
donc un certain temps.
</note>
<p>
Quand MILO a été installé, les images MILO qui ont été construites devraient
être installées dans <i>/opt/milo</i>. Les commandes ci-dessous vont faire une
disquette de démarrage pour être utilisée avec MILO. Choisissez la bonne image
pour votre Alpha.
</p>
<note>
Insérez une disquette vierge dans votre lecteur de disquette maintenant.
</note>
<pre caption="Faire une disquette MILO">
# <i>fdformat /dev/fd0</i>
# <i>mformat a:</i>
<codenote>Choisissez l'image en fonction de votre l'Alpha</codenote>
# <i>mcopy /opt/milo/milo-2.2-18-gentoo-ruffian a:\milo</i>
# <i>mcopy /opt/milo/linload.exe a:\lilnload.exe</i>
<codenote><b>OU</b> si vous avez une Ruffian, vous devrez utiliser ldmilo.exe:</codenote>
# <i>mcopy /opt/milo/ldmilo.exe a:\ldmilo.exe</i>
# <i>echo -ne '\125\252' | dd of=/dev/fd0 bs=1 seek=510 count=2</i>
</pre>
<p>
Votre disquette de démarrage MILO est maintenant prête pour démarrer Gentoo
Linux, vous devez définir les variables d'environnement dans votre Firmware ARCS
pour que MILO puisse démarrer, tout est expliqué dans le <i>MILO-HOWTO</i> avec
quelques exemples de différents systèmes et des exemples de commandes à
utiliser en mode interactif.
</p>
<warn>
Ne pas lire le MILO-HOWTO est une mauvaise idée !
</warn>
</body>
</section>

<section>
<title>Redémarrer votre système</title>
<body>
<p>
Maintenant que vous avez installé un chargeur de démarrage, vous êtes prêt à
redémarrer votre machine sur votre nouveau système gentoo.
</p>
<pre caption="Redémarrage">
# <i>exit</i>
# <i>umount /mnt/gentoo/proc</i>
# <i>umount /mnt/gentoo</i>
# <i>sync</i>
# <i>halt</i>
<codenote>&lt; Vous devriez maintenant être revenu à une console SRM &gt;</codenote>
>>><i>boot -fl "i"</i>
aboot> <i>b /boot/vmlinuz</i>
<codenote>ou en utilisant MILO, tapez une touche avant le délai de 30 secondes et entrez:</codenote>
GentooMILO> <i>boot sda1:vmlinuz root=/dev/sda2</i>
</pre>
<note>
Si l'horloge interne de votre machine n'est pas à l'heure, vous devriez
l'ajuster maintenant en utilisant la commande date ou rdate, un utilitaire pour
mettre l'horloge à jour via ntp (emerge rdate). Vous pouvez choisir un serveur
ntp depuis <uri
link="http://www.eecis.udel.edu/~mills/ntp/servers.html">ce</uri> répertoire.
</note>
</body>
</section>

<section>
<title>Configuration du réseau</title>
<body>
<p>
Vous devriez maintenant être en train d'utiliser votre nouvelle installation de
Gentoo&nbsp;! Vous devez réaliser la configuration finale du réseau, votre
station de travail Alpha doit sûrement utiliser une des cartes réseau
ci-dessous, utilisez celle qui convient le mieux.
</p>
<pre caption="Modprobe pilote réseau">
# <i>modprobe tulip</i>
# <i>modprobe eepro100</i>

<codenote>Quand vous aurez identifié le pilote qu'il vous faut,</codenote>
<codenote>utilisez la commande ci-dessous pour le charger au démarrage.</codenote>

# <i>echo tulip >> /etc/modules.autoload</i>
</pre>
<p>
Ensuite, il faut configurer le réseau, suivez les instructions dans le fichier
ci-dessous.
</p>
<p>
<pre caption="Paramètres réseau">
# <i>nano -w /etc/conf.d/net</i>
# <i>/etc/init.d/net.eth0 start</i>
# <i>rc-update add net.eth0 default</i> <codenote>Vérifiez que le réseau se lance au démarrage.</codenote>
</pre>
<warn>
Certaines cartes réseau tulip ne fonctionnent pas correctement avec le pilote
tulip, si vous avez une telle carte, vous devriez essayer le pilote de4x5.
</warn>
</p>
</body>
</section>
</chapter>

<chapter>
<title>Après avoir terminé l'installation</title>
<section>
<title>Installation de Xfree</title>
<body>
<p>
Si vous voulez un environnement graphique (comme kde, gnome, etc.) sur votre
station de travail Alpha, c'est le bon moment de lancer l'installation de
XFree. Cela va prendre un moment, soyez patient&nbsp;!
</p>
<pre caption="Installer X">
# <i>emerge -pv xfree</i>
# <i>emerge xfree</i>
</pre>
</body>
</section>
</chapter>
</guide>
