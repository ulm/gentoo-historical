<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/gcc-upgrading.xml,v 1.2 2005/12/21 10:41:38 neysx Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/gcc-upgrading.xml" lang="fr">
<title>Guide de mise a jour de GCC pour Linux Gentoo</title>

<author title="Autheur">
  <mail link="amne@gentoo.org">Wernfried Haas</mail>
</author>
<author title="Autheur">
  <mail link="jkt@gentoo.org">Jan Kundrát</mail>
</author>
<author title="Editeur">
  <mail link="halcy0n@gentoo.org">Mark Loeser</mail>
</author>
<author title="Traducteur">
  <mail link="nicocornu@netcourrier.com">Nicolas Cornu</mail>
</author>

<abstract>
Ce document guidera les utilisateurs de Gentoo Linux à mettre GCC à jour.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>3</version>
<date>2005-12-08</date>

<chapter id="intro">
<title>Introduction</title>
<section>
<title>Mettre à jour GCC</title>
<body>

<p>
Pourquoi devriez-vous mettre GCC à jour&nbsp;? GCC ressemble fort aux autres
paquets de votre système, il est juste plus critique. Vous devriez mettre GCC à
jour au moment où une nouvelle version supprime un bogue qui vous ennuie, une
nouvelle fonctionalité dont vous avez besoin a été ajoutée, ou si vous voulez
simplement garder votre système à jour. Si les cas précédents ne vous
correspondent pas, vous pouvez retarder votre mise a jour sans crainte tant que
votre version de GCC est supportée par les développeurs de Gentoo.
</p>

<p>
Si vous installez une nouvelle version de GCC, le système ne se mettra pas à
jour automatiquement. Vous devrez exécuter des étapes supplémentaires durant la
migration.  Si vous décidez de ne pas exécuter ces étapes, Portage continuera à
utiliser la version antérieure de votre compilateur jusqu'à ce que vous
changiez d'avis, ou supprimiez l'ancien compilateur de votre système.
</p>

<p>
Ce guide documenta les étapes nécessaires à la mise à jour du compilateur
utilisé par votre machine Gentoo. Une section spécifique est dédiée à <uri
link="#upgrade-3.3-to-3.4"> la mise à jour de GCC 3.3 à la version 3.4 </uri>
et les problèmes rencontrés avec <c>libstdc++</c>.
</p>

</body>
</section>
</chapter>

<chapter id="upgrade-general">
<title>Instructions générales à la mise à jour</title>
<section>
<title>Introduction</title>
<body>

<impo>
Si vous recherchez les instructions spécifiques à la mise à jour de GCC 3.3 a
la version 3.4, veuillez consulter la <uri link="#upgrade-3.3-to-3.4">section 
dédiée.</uri>.
</impo>

<p>
En général, les mises à jour servant à <e>corriger les bogues</e>, comme de GCC
3.3.5 à 3.3.6, devraient être sans risque -- il suffit d'installer la nouvelle
version, de modifier votre système afin d'utiliser le nouveau GCC et
d'uniquement recompiler le paquet affecté, <c>libtool</c>. Quoiqu'il en soit,
quelques mises à jour de GCC cassent la compatibilité binaire&nbsp;; dans ces
cas, une recompilation des paquets affectés (ou même de la chaîne de
compilation complète et du système) pourrait être requise.
</p>

<p>
Souvenez-vous, nous avons dit que la mise à jour de GCC ne serait pas
automatique.  Il y a tout de même une exception&nbsp;: les mises à jour servant
à supprimer des bogues, comme de la version 3.3.5 à la 3.3.6 si vous n'utilisez
pas le dispositif "multislot" autorisant les deux versions à coexister sur un
seul système.  Multislot est désactivé, car il n'a pas grand intérêt pour les
utilisateurs. 
</p>

<pre caption="Mettre GCC à jour">
# <i>emerge -uav gcc</i>

<comment>(Veuillez remplacer "i686-pc-linux-gnu-3.4.4" par la version de GCC
et le paramètre CHOST que vous venez de mettre à jour.)</comment>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Recompilez libtool.)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<p>
On peut maintenant recompiler la chaîne de compilation et ensuite world, comme
ça, tout sera recompilé par le nouveau GCC.
</p>

<pre caption="Recompiler le système">
# <i>emerge -eav system</i>
# <i>emerge -eav world</i>
</pre>

<p>
On peut désormais supprimer l'ancienne version de GCC sans le moindre risque.
Si vous en sentez le besoin, vous pouvez lancer la commande suivante (comme
d'habitude, remplacez <c>=sys-devel/gcc-3.3*</c> par la version que vous voulez
désinstaller)&nbsp;:
</p>

<pre caption="Supprimer l'ancienne version de GCC">
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="upgrade-3.3-to-3.4">
<title>La mise à jour de la version 3.3 à la version 3.4</title>
<section>
<title>Introduction</title>
<body>

<p>
La mise à jour de GCC 3.3 à 3.4 n'est pas sans soucis, car l'ABI C++ a changé
entre les deux versions. Il faut donc aussi se charger d'un problème qui va
survenir avec la bibliothèque <c>libstdc++</c>.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-choices">
<title>Les choix disponibles</title>
<body>

<p>
Vous avez le choix entre deux possibilités pour mettre votre système à jour.
<uri link="#upgrade-3.3-to-3.4-revdep-rebuild">La première méthode</uri> est la
plus rapide et requiert l'utilisation de l'outil <c>revdep-rebuild</c> du
paquet <c>gentoolkit</c> alors que <uri link="#upgrade-3.3-to-3.4-emerge-e">la
seconde</uri> recompile le système entier à partir de zéro. Le sytème utilisera
ainsi les nouveaux dispositifs de GCC. Le choix entre ces deux possibilités
vous appartient.
</p>

</body>
</section>
<section id="upgrade-3.3-to-3.4-revdep-rebuild">
<title>Utiliser revdep-rebuild</title>
<body>

<p>
Cette méthode requiert tout d'abord l'installation de <c>gentoolkit</c> si vous
ne l'avez pas déjà fait. Nous pourrons alors mettre GCC à jour et passer de
l'ancien au nouveau compilateur. Nous allons ensuite recompiler le paquet
<c>libtool</c> afin de s'assurer que la chaîne de compilation est en parfaite
état.
</p>

<pre caption="Installer gentoolkit et mettre GCC à jour">
# <i>emerge -an gentoolkit</i>
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Recompiler libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Nous présumons que vous utilisez <c>CHOST="i686-pc-linux-gnu"</c>. Si vous
utilisez un autre CHOST, veuillez le remplacer dans la commande gcc-config par
le CHOST approprié.
</note>

<p>
Nous voulons maintenant voir quels paquets revdep-rebuild veut recompiler.
Nous demanderons ensuite à revdep-rebuild de recompiler les paquets. cela peut
prendre du temps, soyez patient.
</p>

<pre caption="Utiliser revdep-rebuild">
# <i>revdep-rebuild --library libstdc++.so.5 -- -p -v</i>
# <i>revdep-rebuild --library libstdc++.so.5</i>
</pre>

<note>
Il est possible que vous rencontriez des problèmes avec des versions de paquets
non-existentes du fait qu'elles sont trop anciennes ou masquées.  Dans ce cas,
vous aurez besoin d'utiliser l'option <c>--package-names</c> avec
<c>revdep-rebuild</c>. Cela permet de baser la recompilation du paquet sur son
nom plutôt que son nom et sa version.  
</note>

<p>
Afin de garder une compatibilité avec les anciennes applications binaires en
C++ et des paquets que revdep-rebuild pourrait avoir oublié,
<c>sys-libs/libstdc++-v3</c> a besoin d'être installé avant de désinstaller GCC
3.3.
</p>

<pre caption="Installer libstdc++-v3 et désinstaller l'ancienne version de GCC proprement">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
<section id="upgrade-3.3-to-3.4-emerge-e">
<title>Utiliser emerge -e</title>
<body>

<p>
Cette méthode, bien que beaucoup plus longue, recompilera votre système
entièrement afin de s'assurer que tout aura été reconstruit avec votre nouveau
compilateur.  C'est aussi une méthode moins risquée. En premier lieu, vous
devrez mettre GCC et libtool à jour, et ensuite passer de l'ancienne version
du compilateur à la nouvelle. 
</p>

<pre caption="Mettre GCC à jour">
# <i>emerge -uav gcc</i>
# <i>gcc-config i686-pc-linux-gnu-3.4.4</i>
# <i>source /etc/profile</i>

<comment>(Recompiler libtool)</comment>
# <i>emerge --oneshot -av libtool</i>
</pre>

<note>
Nous présumons que vous utilisez <c>CHOST="i686-pc-linux-gnu"</c>.  Si vous
utilisez un autre CHOST, veuillez le remplacer dans la commande gcc-config par
le CHOST approprié.
</note>

<p>
Pour garder une compatibilité avec les anciennes applications binaires C++,
<c>sys-libs/libstdc++-v3</c> a besoin d'être installé sur votre système.
</p>

<pre caption="Installer libstdc++-v3">
# <i>emerge --oneshot sys-libs/libstdc++-v3</i>
</pre>

<p>
Nous allons d'abord recompiler le système, ensuite le «&nbsp;world&nbsp;».
Cela va prendre du temps en fonction du nombre de paquets que vous avez
installés, car votre chaîne de compilation entière et ses fichiers système
seront recompilés, suivis de chaque paquet de votre système, incluant la chaîne
de compilation. Cela est nécessaire pour s'assurer que chaque paquet y compris
ceux de la chaîne de compilation elle-même aura été compilés avec la nouvelle
chaîne de compilation.
</p>

<pre caption="Recompiler le système et world">
# <i>emerge -e system</i>
# <i>emerge -e world</i>
</pre>

<p>
Vous pouvez supprimer votre ancienne version de GCC sans crainte&nbsp;:
</p>

<pre caption='Désinstallation "propre"'>
# <i>emerge -aC =sys-devel/gcc-3.3*</i>
</pre>

</body>
</section>
</chapter>

<chapter id="common-pitfalls">
<title>Pièges connus</title>
<section>
<body>

<p>
Il est important de désactiver <c>distcc</c> durant la mise à jour. Mélanger
les versions de compilateurs sur vos nœuds <e>provoquera</e> des problèmes au
niveau de la compilation.  Vous pouvez laisser ccache étant donné que les
objets en cache seront invalidés automatiquement.
</p>

<p>
Utilisez toujours la même version de GCC pour votre noyau et les modules
additionels du noyau.  Une fois votre "world" recompilé avec votre nouveau GCC,
les modules externes (comme <c>app-emulation/qemu-softmmu</c>) échoueront lors
de leur chargement. Il suffit de recompiler votre noyau pour résoudre ce
problème.
</p>

</body>
</section>
<section>
<title>Messages d'erreur fréquents</title>
<body>

<p>
Si vous recevez un message d'erreur du type <e>libtool: link:
`/usr/lib/gcc-lib/i686-pc-linux-gnu/3.3.6/libstdc++.la' is not a valid libtool
archive</e>, il faut alors exécuter <c>/sbin/fix_libtool_files.sh 3.3.6</c>
(remplacez "3.3.6" avec le numéro de version mentionné dans le message).
</p>

<p>
Si vous avez l'erreur <e>error: /usr/bin/gcc-config: line 632:
/etc/env.d/gcc/i686-pc-linux-gnu-3.3.5: No such file or directory</e>, essayez
alors de supprimer <path>/etc/env.d/gcc/config-i686-pc-linux-gnu</path> et
lancez de nouveau <c>gcc-config</c>, suivi de <c>source /etc/profile</c>.  Ne
faites cela que si vous n'utilisez pas de compilateurs croisés.
</p>

<p>
Si un paquet échoue durant <c>emerge -e system/world</c>, vous pouvez relancer
l'operation avec la commande <c>emerge --resume</c>. Si un paquet continue
d'échouer, passez au paquet suivant avec la commande <c>emerge --resume
--skipfirst</c>. Ne lancez aucun autre emerge entre temps, car cela effacerait
les informations qui permettent la relance.
</p>

<p>
Si vous obtenez un message d'erreur du type <e>spec failure: unrecognized spec
option</e> alors que vous mettez votre compilateur à jour, tentez de repasser à
la version de GCC que vous utilisiez auparavant. Supprimez la variable
<c>GCC_SPECS</c> et relancez la mise à jour de GCC&nbsp;:
</p>

<pre caption="Restaurer les specifications primaires">
# <i>gcc-config 1</i>
# <i>source /etc/profile</i>
# <i>unset GCC_SPECS</i>
# <i>emerge -uav gcc</i>
</pre>

</body>
</section>
</chapter>
</guide>
