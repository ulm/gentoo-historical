<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/utf-8.xml,v 1.29 2006/10/03 16:56:05 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/utf-8.xml" lang="fr">
<title>Utiliser l'UTF-8 avec Gentoo</title>

<author title="Auteur">
  <mail link="slarti@gentoo.org">Thomas Martin</mail>
</author>
<author title="Contributeur">
  <mail link="devil@gentoo.org.ua">Alexander Simonov</mail>
</author>
<author title="Correcteur">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Traducteur">
  <mail link="clement@varaldi.org">Clément Varaldi</mail>
</author>
<author title="Traducteur">
  <mail link="cam@gentoo.org">Camille Huot</mail>
</author>
<author title="Traducteur">
  <mail link="ribosome@gentoo.org">Olivier Fisette</mail>
</author>

<abstract>
L'objectif de ce guide est de vous montrer comment mettre en place et utiliser
le jeu de caractères Unicode UTF-8 sur votre système Gentoo Linux, après vous
avoir présenté les avantages de l'Unicode et, plus particulièrement, UTF-8.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license />

<version>2.22</version>
<date>2006-08-28</date>

<chapter>
<title>Encoder les caractères</title>
<section>
<title>Qu'est-ce que l'encodage de caractère ?</title>
<body>

<p>
Les ordinateurs ne comprennent pas le texte en soi. En fait, chaque caractère
est représenté par un nombre. Traditionnellement, chaque jeu de nombres utilisé
pour représenter un alphabet et des caractères (appelé un système de codage
ou encore un jeu d'encodage ou de caractères) est limité par la taille à cause
de la limitation matérielle de la machine.
</p>

</body>
</section>
<section>
<title>L'histoire de l'encodage des caractères</title>
<body>

<p>
Le jeu de caractères le plus commun, ou du moins le plus universellement
accepté, est l'<b>ASCII</b> (American Standard Code for Information
Interchange). Il est universellement reconnu comme étant le standard le plus
abouti pour les logiciels. La version moderne de l'ASCII a été standardisée en
1986 (ANSI X3.4, RFC20, ISO/IEC 646:1991, ECMA-6) par l'institut national
américain des standards.
</p>

<p>
L'ASCII est du 7-bit strict, ce qui signifie qu'il utilise une table de
correspondance entre les caractères et des nombres binaires à 7 chiffres, ce qui
donne un échantillon de 0 à 127, en décimal. Cela inclut 32 caractères de
contrôle non visibles aux positions de 0 à 31, ainsi que le caractère Suppr à
la position 127. Les caractères de 32 à 126 sont des caractères visibles&nbsp;:
un espace, un signe de ponctuation, des lettres latines ou des nombres.
</p>

<p>
Le huitième bit en ASCII a été utilisé au départ comme un bit de parité pour
permettre des vérifications d'erreur. S'il n'est pas nécessaire, il est laissé
à 0. Cela qui signifie que, en ASCII, chaque caractère est représenté par un
seul octet.
</p>

<p>
Si l'ASCII suffit aux conversations en anglais moderne, dans d'autres
langues européennes qui incluent des caractères accentués, les choses ne
semblent pas aussi évidentes. Les standards ISO 8859 ont été développés pour
répondre à ces besoins. Ils assurent une compatibilité ascendante avec l'ASCII,
mais au lieu de laisser le huitième bit à 0, il est utilisé pour permettre de
coder 127 autres caractères dans chaque encodage. Les limitations de l'ISO 8859
vont vite être mises à jour et il y a actuellement quinze variantes du standard
ISO 8859 (depuis le 8859-1 jusqu'au 8859-15). Il y a souvent des conflits entre
les lettres qui peuvent être représentées par un octet, malgré la compatibilité
avec l'ASCII. Pour compliquer encore l'interopérabilité entre les différents
encodages de caractères, Windows-1252 est utilisé dans certaines versions de
Microsoft Windows pour certaines langues d'Europe occidentale. C'est un jeu
dérivant de l'ISO 8859-1, mais avec de nombreuses différences. Ces jeux gardent
cependant tous une compatibilité avec l'ASCII.
</p>

<p>
La nécessité du développement d'un encodage complètement différent, pour des
alphabets non latins, comme l'EUC (Extended Unix Coding), qui est utilisé pour
le japonais et le coréen (et également un peu pour le chinois), a créé plus de
confusion encore. Différents systèmes d'exploitation utilisaient encore
différents jeux de caractère pour une même langue, par exemple Shift-JIS et
ISO-2022-JP. Les utilisateurs voulant lire des glyphes cyrilliques devaient
choisir entre les jeux KOI8-R pour le russe ou le bulgare ou KOI8-U pour
l'ukrainien. Ou encore d'autres encodages du cyrillique, comme l'ISO 8859-5,
lequel n'a pas eu beaucoup de succès, ou le jeu Windows-1251. Tous ces jeux de
caractères cassent souvent la compatibilité avec l'ASCII (même si l'emplacement
des caractères cyrilliques dans le KOI8 permet, si on s'affranchit du huitième
bit, d'assurer une possible lecture du texte sur un terminal ASCII, moyennant
quelques adaptations).
</p>

<p>
Tout cela mène à une certaine confusion, mais aussi une incapacité totale de
communiquer entre les langues et, tout particulièrement, entre différents
alphabets. C'est alors qu'est arrivé l'Unicode.
</p>

</body>
</section>
<section>
<title>Qu'est-ce que l'Unicode ?</title>
<body>

<p>
L'Unicode laisse de côté la représentation traditionnelle et limitée d'un octet
pour un caractère. Il utilise 17 «&nbsp;plans&nbsp;» de 65536 éléments,
permettant ainsi de décrire un maximum de 1114112 caractères. Le premier plan
nommé BMP (pour Basic Multilingual Plane, ou plan multi-langue de base)
contient presque tous les caractères que vous pourriez utiliser. C'est pour ça
que beaucoup croient à tort que l'Unicode est un jeu de caractères 16-bits.
</p>

<p>
L'Unicode a été représenté de différentes manières, mais les deux plus communes
sont l'<b>UTF</b> (Unicode Transformation Format) et l'<b>UCS</b> (Universal
Character Set). Après le terme UTF, suit un nombre indiquant le nombre de bits
dans une unité. Dans le cas de l'UCS, il représente le nombre d'octets. L'UTF-8
est devenu le moyen d'échange le plus répandu pour les échanges de texte en
Unicode, grâce à ses propriétés (clair, représenté par 8&nbsp;bits) et il est
l'encodage dont fait l'objet notre document.
</p>

</body>
</section>
<section>
<title>UTF-8</title>
<body>

<p>
UTF-8 est un encodage de caractère à longueur variable et peut utiliser entre
1 et 4 octets par symbole. Le premier octet est utilisé pour encoder les
symboles ASCII, ce qui permet une compatibilité complète avec l'ASCII. Les
caractères latins et ASCII sont interchangeables avec l'UTF-8 sans trop
augmenter la taille des données, puisque seul le premier octet est utilisé.
Les utilisateurs d'alphabets exotiques comme le japonais n'ont pas cette chance,
dans la mesure où ils obtiendront en gros 50% de redondance dans leurs données.
</p>

</body>
</section>
<section>
<title>Ce qu'UTF-8 peut faire pour vous</title>
<body>

<p>
UTF-8 vous permet de travailler dans un environnement multilingue conforme aux
standards et universellement reconnu, avec une redondance de donnée relativement
faible. L'UTF-8 est le meilleur moyen de transmettre des caractères non-ASCII
sur Internet, par courrier électronique, IRC ou la plupart des autres moyens
de communication. Malgré cela, de nombreuses personnes considèrent comme
abusive l'utilisation de l'UTF-8 pour les communications. Il est toujours
préférable de se tenir au courant de l'attitude des uns et des autres à propos
de l'UTF-8 sur certains canaux de discussion, listes de diffusion ou groupes
de discussion avant d'utiliser de l'<e>UTF-8 non-ASCII</e>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Mise en place de l'UTF-8 avec Gentoo Linux</title>
<section>
<title>Trouver ou créer les localisations UTF-8</title>
<body>

<p>
Maintenant que vous avez compris les principes de base de l'Unicode, vous allez
pouvoir commencer à utiliser l'UTF-8 sur votre système.
</p>

<p>
Il vous faudra avant toute chose disposer d'une version de glibc qui supporte
les langues nationales. Le moyen recommandé pour l'obtenir est d'utiliser le
fichier <path>/etc/locale.gen</path>. L'objet de ce document n'est pas de vous
expliquer l'utilisation de ce fichier. Vous trouverez de la documentation dans
le <uri link="guide-localization.xml#doc_chap3_sect3">Guide de localisation de
Gentoo Linux</uri>.
</p>

<p>
Ensuite, vous devrez vérifier si oui ou non UTF-8 est déjà disponible pour
votre langue ou si vous devrez créer une localisation.
</p>

<pre caption="Vérifier l'existence d'une localisation pour UTF-8">
<comment>(Remplacer « fr_FR » par la localisation souhaitée.)</comment>
# <i>locale -a | grep 'fr_FR'</i>
fr_FR
fr_FR.UTF-8
</pre>

<p>
Nous constatons ici que nous avons un suffixe en <c>.UTF-8</c>, ce qui est une
bonne chose. Si vous n'avez pas de résultat avec un suffixe similaire à celui-ci
vous devez créer une localisation compatible UTF-8.
</p>

<note>
Il vous suffit de lancer la commande suivante si vous n'avez pas de localisation
UTF-8 pour votre langue.
</note>

<pre caption="Créer une localisation UTF-8">
<comment>(Remplacer « fr_FR » avec la localisation désirée.)</comment>
# <i>localedef -i fr_FR -f UTF-8 fr_FR.UTF-8</i>
</pre>

<p>
Une autre façon d'ajouter une localisation UTF-8 est de l'ajouter au fichier
<path>/etc/locale.gen</path> et de regénérer les localisations nécessaires avec
la commande <c>locale-gen</c>.
</p>

<pre caption="Exemple de /etc/locale.gen">
fr_FR.UTF-8 UTF-8
</pre>

</body>
</section>
<section>
<title>Mise en place de la localisation</title>
<body>

<p>
Vous devez configurer une variable d'environnement pour pouvoir utiliser vos
nouvelles localisations UTF-8&nbsp;: <c>LC_ALL</c> (cette variable écrase la
valeur définie dans <c>LANG</c>). Il existe plusieurs manières différentes de la
configurer. Certains préfèrent n'avoir un environnement UTF-8 que pour un
utilisateur spécifique. Dans ce cas, il faudra la configurer dans le fichier
<path>~/.profile</path> (si vous utilisez <c>/bin/sh</c>),
<path>~/.bash_profile</path> ou <path>~/.bashrc</path> (si vous utilisez
<c>/bin/bash</c>).
</p>

<p>
D'autres préféreront configurer la localisation de manière globale. Un cas pour
lequel vous devrez probablement agir ainsi est si vous utilisez
<path>/etc/init.d/xdm</path>. En effet, ce script d'initialisation démarre un
gestionnaire d'affichage et un bureau avant que les fichiers d'initialisation
des terminaux ne soient exécutés.
</p>

<note>
Pour configurer de manière globale la localisation, il vous faut éditer le
fichier <path>/etc/env.d/02locale</path> qui doit alors contenir les lignes
suivantes&nbsp;:
</note>

<pre caption="/etc/env.d/02locale">
LC_ALL="fr_FR.UTF-8"
</pre>

<p>
Il vous faut maintenant mettre à jour l'environnement pour valider la
modification.
</p>

<pre caption="Mise à jour de l'environnement">
# <i>env-update</i>
>>> Regenerating /etc/ld.so.cache...
 * Caching service dependencies ...
# <i>source /etc/profile</i>
</pre>

<p>
Maintenant, lancez la commande <c>locale</c> sans argument pour voir si les
variables sont correctement initialisées sur votre environnement&nbsp;:
</p>

<pre caption="Vérifier la nouvelle localisation">
# <i>locale</i>
LANG=
LC_CTYPE="fr_FR.UTF-8"
LC_NUMERIC="fr_FR.UTF-8"
LC_TIME="fr_FR.UTF-8"
LC_COLLATE="fr_FR.UTF-8"
LC_MONETARY="fr_FR.UTF-8"
LC_MESSAGES="fr_FR.UTF-8"
LC_PAPER="fr_FR.UTF-8"
LC_NAME="fr_FR.UTF-8"
LC_ADDRESS="fr_FR.UTF-8"
LC_TELEPHONE="fr_FR.UTF-8"
LC_MEASUREMENT="fr_FR.UTF-8"
LC_IDENTIFICATION="fr_FR.UTF-8"
LC_ALL=fr_FR.UTF-8
</pre>

<p>
C'est tout. Vous utilisez maintenant une localisation UTF-8. La prochaine étape
est la configuration des applications que vous utilisez quotidiennement.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Support des applications</title>
<section>
<body>

<p>
Quand l'Unicode a commencé à prendre de l'ampleur dans le monde logiciel, les
jeux de caractères à plusieurs octets n'étaient pas très bien supportés par des
langages comme le C, langages dans lesquels de nombreux programmes utilisés
quotidiennement étaient écrits. Encore maintenant, certains programmes ne sont
toujours pas capables de gérer l'UTF-8 correctement. Heureusement, la plupart
le sont.
</p>

</body>
</section>
<section>
<title>Noms de fichiers, NTFS et FAT</title>
<body>

<p>
Il y a de nombreuses options NLS (Native Language Support, pour support des
langues natif) dans la configuration du noyau Linux et le plus important est de
ne pas se tromper. Dans la plupart des cas, la seule chose à faire est de mettre
le support NLS de l'UTF-8 dans le noyau et de changer le NLS par défaut à utf8.
</p>

<pre caption="Configuration du noyau pour les NLS UTF-8">
File Systems --&gt;
  Native Language Support --&gt;
    (utf8) Default NLS Option
    &lt;*&gt; NLS UTF8
    <comment>(Et &lt;*&gt; pour les autres jeux de caractère qui sont utilisés
    dans le système de fichiers FAT et les CD-ROM Joliet)</comment>
</pre>

<p>
Si vous pensez avoir à monter des partitions NTFS, vous devrez spécifier une
option <c>nls=</c> au montage. Si vous souhaitez monter des partitions FAT,
vous devrez spécifier une option <c>codepage=</c> au montage. Vous avez
également la possibilité de préciser un <c>codepage</c> par défaut pour les
partitions FAT dans la configuration du noyau. Remarquez que l'option
<c>codepage</c> au montage remplace la configuration du noyau.
</p>

<pre caption="Configuration pour FAT dans le noyau">
File Systems --&gt;
  DOS/FAT/NT Filesystems  --&gt;
    (437) Default codepage for fat
</pre>

<p>
Vous devez éviter de définir <c>Default iocharset for fat</c> à UTF-8. Au lieu
de cela, vous pouvez passer l'option utf8=true au montage des partitions FAT.
Pour plus d'informations, lisez <c>man mount</c> et la documentation du noyau
dans <path>/usr/src/linux/Documentation/filesystems/vfat.txt</path>.
</p>

<p>
Pour changer l'encodage des noms de fichiers, vous pouvez utiliser
<c>app-text/convmv</c>.
</p>

<pre caption="Exemple d'utilisation de convmv">
# <i>emerge --ask app-text/convmv</i>
<comment>(Format de la commande :)</comment>
# <i>convmv -f &lt;encodageActuel&gt; -t utf-8 &lt;nomDeFichier&gt;</i>
<comment>(Remplacer iso-8859-1 par l'encodage à partir duquel vous effectuez
la conversion :)</comment>
# <i>convmv -f iso-8859-1 -t utf-8 nomDuFichier</i>
</pre>

<p>
Pour changer le <e>contenu</e> des fichiers, utilisez l'utilitaire <c>iconv</c>
proposé avec <c>glibc</c>&nbsp;:
</p>

<pre caption="Exemple d'utilisation d'iconv">
<comment>(Change iso-8859-1 au jeu de caractère que vous souhaitez :)</comment>
<comment>(Vérifiez que la sortie est correcte.)</comment>
# <i>iconv -f iso-8859-1 -t utf-8 nomDeFichier</i>
<comment>(Pour convertir un fichier, vous devez en créer un nouveau :)</comment>
# <i>iconv -f iso-8859-1 -t utf-8 nomDeFichier > nouveauFichier</i>
</pre>

<p>
Vous pouvez aussi utiliser <c>app-text/recode</c> pour cela.
</p>

</body>
</section>
<section>
<title>La console système</title>
<body>

<impo>
Vous devez avoir >=sys-apps/baselayout-1.11.9 pour pouvoir utiliser l'Unicode
dans une console.
</impo>

<p>
Pour activer l'UTF-8 dans une console, vous devez éditer le fichier
<path>/etc/rc.conf</path> et mettre <c>UNICODE="yes"</c>. Lisez au passage
les commentaires dans ce fichier -- il est important d'avoir une police de
caractère qui convienne si vous souhaitez utiliser correctement l'Unicode.
</p>

<p>
La variable <c>KEYMAP</c>, définie dans le fichier
<path>/etc/conf.d/keymaps</path>, doit spécifier une configuration clavier
Unicode.
</p>

<pre caption="Exemple du fichier /etc/conf.d/keymaps">
<comment>(Changez « fr » pour le clavier local utilisé.)</comment>
KEYMAP="fr"
</pre>

</body>
</section>
<section>
<title>Ncurses et Slang</title>
<body>

<note>
Ignorez simplement toutes les mentions de Slang dans cette section si vous
ne l'avez pas installé ou si vous ne l'utilisez pas.
</note>

<p>
Il vous faut cette fois ajouter <c>unicode</c> à vos paramètres USE globaux dans
<path>/etc/make.conf</path>, puis vous devez installer à nouveau
<c>sys-libs/ncurses</c> et <c>sys-libs/slang</c>, si nécessaire. Portage s'en
occupera automatiquement lorsque vous mettrez à jour votre système&nbsp;:
</p>

<pre caption="Mise à jour du système">
# <i>emerge --update --deep --newuse world</i>
</pre>

<p>
Nous devons également reconstruire les paquets qui leur sont liés, maintenant
que les changements de la variable USE ont été appliqués. L'outil utilisé
(<c>revdep-rebuild</c>) fait partie du paquet <c>gentoolkit</c>.
</p>

<pre caption="Reconstruire les programmes liés à ncurses ou slang">
# <i>revdep-rebuild --soname libncurses.so.5</i>
# <i>revdep-rebuild --soname libslang.so.1</i>
</pre>

</body>
</section>
<section>
<title>KDE, GNOME et Xfce</title>
<body>

<p>
Tous les environnements de bureaux importants supportent complètement l'Unicode
et n'auront pas besoin de configuration supplémentaire à celle présentée dans ce
guide. Cela est dû au fait que les kits d'interface graphique (Qt ou GTK2)
fonctionnent très bien en UTF-8. De ce fait, tous les programmes utilisant ces
kits devraient pouvoir supporter l'UTF-8 de manière naturelle, sans modification
supplémentaire.
</p>

<p>
Les exceptions à cette règle sont liées à Xlib et GTK+1. GTK+1 nécessite une
spécification de police iso10646-1 dans le fichier ~/.gtkrc. Par exemple,
<c>-misc-fixed-*-*-*-*-*-*-*-*-*-*-iso10646-1</c>. De même, les applications
utilisant Xlib ou Xaw devront utiliser une spécification de police similaire
ou elles ne pourront pas fonctionner.
</p>

<note>
Si vous disposez du centre de contrôle de gnome1 dans un coin, utilisez-le.
Récupérez une police iso10646-1 dans le lot proposé.
</note>

<pre caption="Exemple de ~/.gtkrc (pour GTK+1) qui définit une police compatible avec l'Unicode">
style "user-font"
{
    fontset="-misc-fixed-*-*-*-*-*-*-*-*-*-*-iso10646-1"
}
widget_class "*" style "user-font"
</pre>

<p>
Si une application dispose du support de Qt et de GTK2, la version GTK2 aura
en général de meilleurs résultats que la version Qt pour l'Unicode.
</p>

</body>
</section>
<section>
<title>X11 et les polices de caractères</title>
<body>

<impo>
<c>x11-base/xorg-x11</c> dispose d'un support pour l'Unicode largement meilleur
que XFree86 et est <e>grandement</e> recommandé.
</impo>

<p>
Les polices TrueType supportent l'Unicode et la plupart des polices fournies
avec Xorg disposent d'un très bon support des caractères, même si, évidemment,
tous les glyphes disponibles dans l'Unicode n'ont pas été créés. Pour construire
des polices (notamment le jeu BitStream Vera) avec le support pour les lettres
d'Asie de l'Est sous X, assurez-vous d'avoir ajouté le paramètre <c>cjk</c> dans
vos paramètres USE. De nombreuses autres applications utilisent ce paramètre,
donc c'est une bonne idée de l'ajouter dans les paramètres USE permanents.
</p>

<p>
Plusieurs paquets sont également disponibles dans Portage, qui sont compatibles
avec l'Unicode.
</p>

<pre caption="Optionnel : Installer plus de polices compatibles Unicode">
# <i>emerge terminus-font intlfonts freefonts cronyx-fonts corefonts</i>
</pre>

</body>
</section>
<section>
<title>Gestionnaires de fenêtres et émulateurs de terminaux</title>
<body>

<p>
Les gestionnaires de fenêtres qui ne sont pas construits avec GTK ou Qt
disposent généralement d'un très bon support de l'Unicode, dans la mesure où ils
utilisent souvent la bibliothèque Xft pour exploiter les polices. Si votre
gestionnaire de fenêtres n'utilise pas Xft pour les polices, vous pouvez
toujours utiliser la spécification de police mentionnée dans la section
précédente pour utiliser une police Unicode.
</p>

<p>
Les émulateurs de terminaux utilisant Xft et supportant l'Unicode sont plus
difficiles à trouver. À part Konsole et gnome-terminal, les meilleures options
dans Portage sont <c>x11-terms/rxvt-unicode</c>, <c>xfce-extra/terminal</c>,
<c>gnustep-apps/terminal</c>, <c>x11-terms/mlterm</c> ou
<c>x11-terms/xterm</c>, quand il est compilé avec le paramètre USE
<c>unicode</c> et qu'il est lancé avec <c>uxterm</c>. <c>app-misc/screen</c>
supporte l'UTF-8 également, si vous le lancez avec un <c>screen -U</c> ou si
vous mettez la ligne suivante dans votre fichier
<path>~/.screenrc</path>&nbsp;:
</p>

<pre caption="~/.screenrc pour l'UTF-8">
defutf8 on
</pre>

</body>
</section>
<section>
<title>Vim, Emacs, Xemacs et Nano</title>
<body>

<p>
Vim fournit un support complet de l'UTF-8 et contient un mécanisme de
reconnaissance des fichiers UTF-8. Pour plus d'informations, utilisez <c>:help
mbyte.txt</c> dans Vim.
</p>

<p>
Emacs 22.x et ultérieurs contiennent également le support complet de l'UTF-8.
Xemacs 22.x ne gère pas encore les caractères combinés.
</p>

<p>
Les versions inférieures d'Emacs ou Xemacs nécessitent l'installation des
paquets <c>app-emacs/mule-ucs</c> ou <c>app-xemacs/mule-ucs</c> et l'ajout du
code suivant dans votre <path>~/.emacs</path> pour supporter les langues CJK en
UTF-8&nbsp;:
</p>

<pre caption="Support CJK UTF-8 dans Emacs">
(require 'un-define)
(require 'jisx0213)
(set-language-environment "Japanese")
(set-default-coding-systems 'utf-8)
(set-terminal-coding-system 'utf-8)
</pre>

<p>
Nano supporte l'UTF-8 depuis la version 1.3.6.
</p>

</body>
</section>
<section>
<title>Les shells</title>
<body>

<p>
Actuellement, <c>bash</c> propose un support complet de l'Unicode, grâce à la
bibliothèque GNU readline. Les utilisateurs du Z Shell sont dans une position
moins confortable -- aucun élément de ce shell ne supporte l'Unicode, même si
des efforts sont faits actuellement pour essayer d'ajouter le support de jeux
de caractères à plusieurs octets.
</p>

<p>
Le C shell, <c>tcsh</c> et <c>ksh</c> ne fournissent absolument aucun support
de l'UTF-8.
</p>

</body>
</section>
<section>
<title>Irssi</title>
<body>

<p>
Irssi supporte complètement de l'UTF-8, même si cela nécessite que
l'utilisateur active une option.
</p>

<pre caption="Activer l'UTF-8 dans Irssi">
/set term_charset UTF-8
</pre>

<p>
Pour les canaux de discussions où les caractères non-ASCII sont fréquemment
utilisés dans des jeux de caractères non-UTF-8, la commande <c>recode</c> peut
servir à convertir les caractères. Tapez <c>/help recode</c> pour plus
d'informations.
</p>

</body>
</section>
<section>
<title>Mutt</title>
<body>

<p>
Le client mail Mutt supporte très bien l'Unicode. Pour utiliser l'UTF-8 avec
Mutt, il n'est pas nécessaire de le configurer pour. Mutt fonctionne sans
problèmes dans un environnement unicode si vos fichiers de configuration
(signature comprise) sont encodés en UTF-8.
</p>

<note>
Vous verrez probablement encore des «&nbsp;?&nbsp;» quand vous lirez votre
courrier avec Mutt. Cela provient des personnes dont le client de messagerie
n'indique pas le codage utilisé. Vous ne pouvez pas y faire grand chose, à
part leur dire de configurer leur logiciel correctement.
</note>

<p>
Plus d'informations sont disponibles sur le
<uri link="http://wiki.mutt.org/index.cgi?MuttFaq/Charset">Wiki de Mutt</uri>.
</p>

</body>
</section>
<section>
<title>Man</title>
<body>

<p>
Les pages de manuel font partie intégrante d'une machine Linux. Pour vous
assurer que tous les caractères Unicode s'afficheront correctement, éditez le
fichier <path>/etc/man.conf</path>. il vous faudra remplacer une ligne, comme
indiqué ci-dessous&nbsp;:
</p>

<pre caption="Modification de man.conf pour le support de l'Unicode">
<comment>(Ancienne ligne :)</comment>
NROFF           /usr/bin/nroff -Tascii -c -mandoc
<comment>(À remplacer par celle-ci :)</comment>
NROFF           /usr/bin/nroff -mandoc -c
</pre>

</body>
</section>
<section>
<title>Elinks et links</title>
<body>

<p>
Ces navigateurs Web textes sont communément utilisés, voyons comment activer
leur support UTF-8. Dans <c>elinks</c> et <c>links</c>, il y a deux méthodes
pour activer ce support. La première est d'utiliser le menu de configuration du
navigateur, l'autre est de modifier le fichier de configuration. Pour activer
cette option dans le navigateur, allez sur un site avec <c>elinks</c> ou
<c>links</c>, puis faites <c>Alt-S</c> pour entrer dans le menu de
configuration. Sélectionnez «&nbsp;Terminal options&nbsp;», descendez et
sélectionnez la dernière ligne <c>UTF-8 I/O</c> en faisant Entrée. Ensuite,
sauvez et quittez le menu. Dans <c>links</c>, vous devrez refaire <c>Alt-S</c>
et taper <c>S</c> pour sauver. Pour la deuxième solution, voici le fichier de
configuration.
</p>

<pre caption="Activer UTF-8 dans elinks/links">
<comment>(Pour elinks, éditez le fichier /etc/elinks/elinks.conf ou bien
~/.elinks.conf et ajoutez la ligne suivante :)</comment>
set terminal.linux.utf_8_io = 1

<comment>(Pour links, éditez ~/.links/links.cfg et ajoutez la ligne suivante :)</comment>
terminal "xterm" 0 1 0 us-ascii utf-8
</pre>

</body>
</section>
<section>
<title>Samba</title>
<body>

<p>
Samba est une suite logicielle qui implémente le protocole SMB (Server Message
Block) pour les systèmes UNIX, tels que Mac OS X, Linux et FreeBSD. Ce protocole
est souvent également appelé CIFS (Common Internet File System). Samba inclut
aussi le système NetBIOS, utilisé par le partage de fichiers sur des réseaux
Windows.
</p>

<pre caption="Activer UTF-8 pour Samba">
<comment>(Éditer /etc/samba/smb.conf et ajouter ce qui suit dans la section [global].)</comment>
dos charset = 1255
unix charset = UTF-8
display charset = UTF-8
</pre>

</body>
</section>
<section>
<title>Tester l'ensemble</title>
<body>

<p>
Il existe de nombreux sites de test pour l'UTF-8. <c>net-www/w3m</c>,
<c>net-www/links</c>, <c>net-www/elinks</c>, <c>net-www/lynx</c> et tous les
navigateurs dérivés de Mozilla (notamment Firefox) supportent l'UTF-8. Konqueror
et Opera supportent également l'UTF-8.
</p>

<p>
Quand vous utilisez un navigateur en mode texte, assurez-vous que vous utilisez
bien un terminal supportant l'Unicode.
</p>

<p>
Si vous voyez certains caractères affichés comme des carrés avec des lettres ou
des nombres à l'intérieur, cela signifie que votre police ne dispose pas du
caractère pour le symbole ou le glyphe que l'UTF-8 attend d'elle. À la place,
elle affichera une boîte avec le code hexadécimal du symbole UTF-8.
</p>

<ul>
  <li>
    <uri link="http://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html">Une page de
    test UTF-8 du W3C.</uri>
  </li>
  <li>
    <uri
    link="http://titus.uni-frankfurt.de/indexe.htm?/unicode/unitest.htm">Une
    page de test UTF-8 proposée par l'Université de Francfort.</uri>
  </li>
</ul>

</body>
</section>
<section>
<title>Méthodes d'écriture</title>
<body>

<note>
Cette section a été enrichie par les traducteurs pour parler aussi des claviers
français, mais cela concerne surtout les claviers américains qui restent
fortement utilisés partout dans le monde.
</note>

<p>
Les <e>touches mortes</e> de votre clavier peuvent être utilisées pour écrire
des caractères sous X qui ne sont pas disponibles sur votre clavier. On les
obtient en appuyant en même temps sur la touche AltGr et une touche optionnelle
dans la partie non alphabétique de votre clavier (à gauche de la touche Entrée).
Puis, vous les relâchez et appuyez sur une lettre. La touche morte devrait la
modifier. Vous disposez d'autres caractères avec la touche Shift appuyée en même
temps que les touches AltGr et le modificateur.
</p>

<p>
Pour activer les touches mortes sur le serveur X, vous devez disposer d'un
clavier qui les supporte. La plupart des claviers européens disposent déjà des
touches mortes avec la variante par défaut. Cela dit, ce n'est pas le cas pour
les claviers nord-américains. Même s'il existe quelques petites différences entre
les claviers, la meilleure solution est d'utiliser un «&nbsp;en_US&nbsp;» à la
place de «&nbsp;us&nbsp;» par exemple. Cela se fait dans le fichier
<path>/etc/X11/xorg.conf</path>&nbsp;:
</p>

<pre caption="extrait de /etc/X11/xorg.conf">
Section "InputDevice"
    Identifier "Keyboard0"
    Driver     "kbd"
    Option     "XkbLayout" "en_US" <comment># Au lieu de "us" seul.</comment>
    <comment>(Suivent d'autres options Xkb.)</comment>
EndSection
</pre>

<p>
Ce changement prendra effet lorsque vous relancerez le serveur X. Pour appliquer
les changements dès à présent, utilisez l'outil <c>setxkbmap</c> avec, par
exemple, <c>setxkbmap en_US</c> (toujours pour les claviers nord-américains).
</p>

<p>
Il est probablement plus facile de faire comprendre le fonctionnement des
touches mortes par l'exemple. Même si les résultats dépendent de la localisation
les idées devraient rester les mêmes, quelque soit la localisation. Les exemples
contiennent des caractères UTF-8, donc pour les visualiser, vous devrez indiquer
à votre navigateur de visualiser la page en UTF-8, ou avoir la localisation
UTF-8 déjà configurée.
</p>

<p>
<b>Pour les claviers US</b>
</p>

<p>
En reprenant la configuration proposee plus haut, si je tape AltGr-[, que je
relâche les deux touches, puis tape un a, j'aurai écrit un «&nbsp;ä&nbsp;». En
faisant AltGr-[ puis e, j'obtiendrai un «&nbsp;ë&nbsp;». Avec AltGr-; puis a,
j'aurai un «&nbsp;á&nbsp;». Et ainsi de suite.
</p>

<p>
En appuyant simultanément sur AltGr, Maj et [, puis en les libérant et en tapant
un a, on obtiendra le caractère scandinave «&nbsp;å&nbsp;». De la même manière,
avec AltGr, Maj et [, puis en <e>ne</e> relâchant <e>que</e> le [, puis en le
tapant de nouveau, on obtiendra un «&nbsp;˚&nbsp;». Même s'il y ressemble, ce
caractère (U+02DA) n'est pas le même que le symbole utilisé pour les degrés
(U+00B0). Le même principe peut être appliqué avec les autres accents, par
exemple avec AltGr et [, en ne relâchant que le [ puis en le tapant de nouveau,
vous aurez un «&nbsp;¨&nbsp;».
</p>

<p>
On peut aussi n'utiliser AltGr qu'avec des caractères alphabétiques du clavier.
Par exemple, AltGr et m formera la lettre minuscule grecque mu&nbsp;:
«&nbsp;µ&nbsp;». AltGr et s produira la lettre esszet ou scharfes&nbsp;:
«&nbsp;ß&nbsp;». Comme de nombreux utilisateurs européens s'en doutent (parce
que la touche est indiquée sur leur clavier) AltGr et 4 (ou e dépendamment de
la disposition du clavier) produira le symbole de l'Euro&nbsp;:
«&nbsp;€&nbsp;».
</p>

<p>
<b>Pour les claviers francophones</b>
</p>

<p>
Xorg offre plusieurs dispositions pour les claviers francophones. Nous
discuterons ici de trois d'entre elles. Les deux premières («&nbsp;fr&nbsp;»
et «&nbsp;fr-latin9&nbsp;») sont des dispositions françaises AZERTY.
La troisième («&nbsp;ca_enhanced&nbsp;») est une disposition QWERTY.
«&nbsp;fr&nbsp;» est généralement la disposition installée par défaut. Elle
permet d'utiliser la touche AltGr, éventuellement en combinaison avec la
touche Majuscule, sur pratiquement toutes les lettres afin de produire des
nouveaux symboles, comme æ, «, ¶, ©, ß, ð.
</p>

<p>
La seconde, «&nbsp;fr-latin9&nbsp;», est une réorganisation de la disposition
des touches sur les claviers français et a été introduite à l'époque de la
création du jeu de caractères ISO 8859-15. Les touches AltGr et AltGR+Maj
permettent maintenant d'accéder facilement à tous les symboles accentuées, les
caractères « et » sont placés à côté ainsi que ¹, ² et ³, il y a une touche
pour taper œ directement, les guillements anglais sont présents (” et “)...
</p>

<p>
Voici la disposition, issue du fichier
<path>/usr/X11R6/lib/X11/xkb/symbols/pc/fr-latin9</path>.
</p>

<pre caption="La disposition fr-latin9">
 Les accents circonflexes des principales voyelles sont obtenus avec
 la touche Alt_Gr, les trémas sont obtenus par Alt_Gr + Shift.

  ____                                     _________ _____________ _______
 | S A| S = Shift,  A = AltGr + Shift     | Imprime | Arrêt défil | Pause |
 | s a| s = normal, a = AltGr             |  Exec   |             | Halte |
  ¯¯¯¯                                     ¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯
  ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ _______
 | Œ ”| 1 ·| 2 É| 3 ,| 4 ´| 5 "| 6 || 7 È| 8 ¯| 9 Ç| 0 À| ° ÿ| + °| &lt;--   |
 | œ “| &amp; ´| é ~| " #| ' {| ( [| - || è `| _ \| ç ^| à @| ) ]| = }|       |
  ========================================================================
 | |&lt;-  | A ä| Z Å| E ¢| R Ç| T Þ| Y Ý| U ü| I ï| O ö| P '| " `| $ ë|     |
 |  -&gt;| | a â| z å| e €| r ç| t þ| y ý| u û| i î| o ô| p ¶| ^ ~| £ ê| &lt;-' |
  ===================================================================¬    |
 |       | Q Ä| S Ø| D Ë| F ª| G Æ| H Ð| J Ü| K Ï| L Ö| M º| % Ù| µ ¥|    |
 | MAJ   | q Â| s ø| d Ê| f ±| g æ| h ð| j Û| k Î| l Ô| m ¹| ù ²| * ³|    |
  ========================================================================
 | ^   | &gt;  | W &lt;| X &gt;| C  | V `| B '| N  | ? º| .  | /  | § ˙|     ^     |
 | |   | &lt; || w «| x »| c ©| v ®| b ß| n ¬| , ¿| ; ×| : ÷| ! ¡|     |     |
  ========================================================================
 |      |      |      |                       |       |      |     |      |
 | Ctrl | Meta | Alt  | Space    Nobreakspace | AltGr | Multi|Menu | Ctrl |
  ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯ ¯¯¯¯¯¯


              Si les touches mortes fonctionnent, utiliser les accents dits
              « morts », i.e. fonctionnant comme l'accent circonflexe &amp; le
              tréma des machines à écrire ; sont disponibles :

 (^) : accent circonflexe,
 Shift (^) : tréma,
 AltGr (^) : tilde,
 AltGr (1) : accent aigu,
 AltGr (7) : accent grave

 Pour s'en servir, procéder comme avec l'accent circonflexe &amp; le tréma
 sur les vielles machines à écrire :

 AltGr (1) puis e : é
 AltGr (^) puis n : ñ...
</pre>

<p>
La troisième disposition («&nbsp;ca_enhanced&nbsp;»), dite «&nbsp;canadienne
française&nbsp;», est de type QWERTY, comme les claviers américains
standards. Elle permet de taper les caractères diacritiques français avec un
minimum d'effort. Les quatre touches nécessaires sont situées à gauche de la
touche <c>Retour</c>. En plus de la touche <c>É</c>, qui permet de taper un
«&nbsp;e&nbsp;» accent aigu directement, trois touches mortes permettent de
générer les autres diacritiques, soit une pour l'accent grave, une pour
l'accent circonflexe et une pour la cédille et le tréma. Ces touches mortes
peuvent être suivies d'une lettre minuscule ou majuscule. Par exemple,
<c>^</c> (la touche morte pour l'accent circonflexe) suivie de <c>E</c> donne
«&nbsp;Ê&nbsp;». Il n'est donc jamais nécessaire d'utiliser la touche
<c>AltGr</c> pour taper les diacritiques françaises.
</p>

<p>
Sur les claviers à 105 touches (par opposition aux 104 touches classiques), la
touche supplémentaire permet de taper les accents français (« ») et le symbole
degré («&nbsp;°&nbsp;»). La disposition canadienne française proposée par Xorg a
été étendue considérablement par Éric Moreau par rapport à la version originale
disponible sur certains autres systèmes d'exploitation. On peut donc aussi
utiliser le clavier canadien français pour taper une variété de symboles en
utilisant des combinaisons impliquant la touche <c>AltGr</c>, tels que&nbsp;:œ,
æ, µ, Ω, ×, ÷, etc. Le diagramme ci-dessous illustre la disposition canadienne
française sous Linux dans ses détails.
</p>

<pre caption="La disposition ca_enhanced">
  ____                                     _________ _____________ _______
 | S A| S = Shift,  A = AltGr + Shift     | Imprime | Arrêt défil | Pause |
 | s a| s = normal, a = AltGr             |  Exec   |             | Halte |
  ¯¯¯¯                                     ¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯
  ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ _______
 | | ¡| ! ¹| "  | /  | $ ¤| %  | ?  | &amp;  | * ™| ( ±| ) )| _ ¿| + <i>˛</i>| &lt;--   |
 | # \| 1 ±| 2 @| 3 £| 4 ¢| 5 ¤| 6 ¬| 7 ¦| 8 ²| 9 ³| 0 ¼| - ½| = ¾|       |
  ========================================================================
 | |&lt;-  | Q Ø| W Ł| E Œ| R Þ| T Ŧ| Y ¥| U ↑| I ı| O Ω| P ®| <i>^</i> <i>°</i>| <i>¨</i> ─|     |
 |  ->| | q ø| w ł| e œ| r þ| t ŧ| y ←| u ↓| i →| o §| p ¶| <i>^</i> [| <i>¸</i> ]| &lt;-' |
  ===================================================================¬    |
 | Verr. | A Æ| S §| D Đ| F ª| G Ŋ| H Ħ| J  | K &amp;| L Ł| : <i>˝</i>| <i>`</i> <i>ˇ</i>| > <i>˘</i>|    |
 | Maj.  | a æ| s ß| d ð| f đ| g ŋ| h ħ| j  | k ĸ| l ł| ; ~| <i>`</i> {| &lt; }|    |
  ========================================================================
 |     | »  | Z  | X  | C ©| V ‘| B ’| N  | M º| ' ×| . ÷| É  |           |
 | Maj.| « °| z  | x  | c ¢| v “| b ”| n  | m µ| , <i>¯</i>| . ·| é <i>´</i>| Maj.      |
  ========================================================================
 |      |      |      |                       |      |      |      |      |
 | Ctrl | Méta | Alt  | Espace                |AltGr |Multi | Menu | Ctrl |
  ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯¯ ¯¯¯¯¯

 <i>(Les touches mortes sont indiquées dans le diagramme.)</i>

 Touches mortes pour les diacritiques de la langue française :

     `              Accent grave          (`)    +e = è
     ^              Accent circonflexe    (^)    +a = â
     ¸              Cédille               (¸)    +c = ç
     Maj+¸          Tréma                 (¨)    +i = ï
     AltGr+é        Accent aigu*          (´)    +u = ú

 * Cette touche morte n'est pas nécessaire pour écrire en français puisqu'une
   touche permet de taper « é » et « É » directement et que l'accent aigu
   n'est utilisé en français que sur la lettre « e ».

 Touches mortes pour d'autres diacritiques :

     AltGr+,        Macron                (¯)    +u = ū
     AltGr+Maj+&lt;    Brève                 (˘)    +a = ă
     AltGr+Maj+=    Ogonek                (˛)    +a = ą
     AltGr+Maj+^    Rond en chef          (°)    +a = å
     AltGr+Maj+;    Double accent aigu    (˝)    +o = ő
     AltGr+Maj+`    Hatchek               (ˇ)    +s = š
</pre>

<p>
Cette disposition est très pratique pour ceux qui veulent taper des textes
français et qui sont habitués aux dispositions QWERTY. Toutefois, il est
difficile de trouver des claviers dont les étiquettes des touches correspondent
à la disposition canadienne française en dehors du Québec.
</p>

</body>
</section>
<section>
<title>Ressources</title>
<body>

<ul>
  <li>
    <uri link="http://fr.wikipedia.com/wiki/Unicode">L'article Wikipedia pour
    l'Unicode</uri>.
  </li>
  <li>
    <uri link="http://fr.wikipedia.com/wiki/UTF-8">L'article Wikipedia pour
    l'UTF-8</uri>.
  </li>
  <li><uri link="http://www.unicode.org">Unicode.org</uri>.</li>
  <li><uri link="http://www.utf-8.com">UTF-8.com</uri>.</li>
  <li><uri link="http://www.ietf.org/rfc/rfc3629.txt">RFC 3629</uri>.</li>
  <li><uri link="http://www.ietf.org/rfc/rfc2277.txt">RFC 2277</uri>.</li>
  <li>
    <uri
    link="http://www.tbray.org/ongoing/When/200x/2003/04/26/UTF">Characters vs.
    Bytes</uri>
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
