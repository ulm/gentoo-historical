<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/mysql-howto.xml,v 1.5 2008/07/06 23:05:26 cam Exp $ -->

<guide link="/doc/fr/mysql-howto.xml" lang="fr"> 
<title>Guide de démarrage rapide pour MySQL</title>

<author title="Auteur">
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>
<author title="Correcteur">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Correcteur, Traducteur">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>

<abstract>
Ce document vous aide à installer et à faire vos premiers pas avec MySQL.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.5</version>
<date>2006-08-08</date>

<chapter>
<title>Faire ses premiers pas avec MySQL</title>
<section>
<title>Contexte</title>
<body>

<p>
MySQl est un serveur de bases de données populaire et est utilisé dans de
nombreuses applications. Il utilise SQL qui signifie <b>S</b>tructured
<b>Q</b>uery <b>L</b>anguage, langage de requête structuré, et l'étend avec
ses propres fonctions. Ce document vous aide à créer une installation de base
avec des bases de données, des tables et des utilisateurs.
</p>

</body>
</section>
<section>
<title>Installer MySQL</title>
<body>

<p>
Commencez par installer MySQL. Vous devriez vérifier que les options de la
variable USE correspondent à vos besoins.
</p>

<pre caption="Installer MySQL">
<comment>(Voir les options USE)</comment>
# <i>emerge --pretend --verbose mysql</i>
<comment>(Installer MySQL)</comment>
# <i>emerge mysql</i>
</pre>

<p>
À la fin de l'installation, le message suivant sera affiché&nbsp;:
</p>

<pre caption="Message à la fin de l'installation de MySQL">
You might want to run:
"emerge --config =dev-db/mysql-[version]"
if this is a new install.
</pre>

<p>
Vous devez exécuter la commande <c>emerge --config =mysql-<e>[version]</e></c>
pour configurer votre base de données.  Cette configuration comprend la base
principale qui contient les données administratives telles que la listes des
bases, des tables, des utilisateurs, des permissions, etc.  Il est recommandé
de modifier le mot de passe de l'utilisateur <c>root</c> dès que possible.
C'est ce que nous allons faire.
</p>

<pre caption="Configuration de MySQL">
# <i>emerge --config =mysql-[version]</i>
 * MySQL DATADIR is /var/lib/mysql
 * Press ENTER to create the mysql database and set proper
 * permissions on it, or Control-C to abort now...

   Preparing db table
   Preparing host table
   Preparing user table
   Preparing func table
   Preparing tables_priv table
   Preparing columns_priv table
   Installing all prepared tables

   To start mysqld at boot time you have to copy support-files/mysql.server
   to the right place for your system

   PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !
   To do so, issue the following commands to start the server
   and change the applicable passwords:
<comment>(Prenez note des 3 lignes suivantes)</comment>
   /etc/init.d/mysql start
   /usr/bin/mysqladmin -u root -h pegasos password 'new-password'
   /usr/bin/mysqladmin -u root password 'new-password'
   Depending on your configuration, a -p option may be needed
   in the last command. See the manual for more details.

<comment>(D'autres messages apparaissent)</comment>

   * For security reasons you should set your MySQL root
   * password as soon as possible.
</pre>

<impo>
À partir de la version 4.0.24-r2, les mots de passe sont entrés pendant la
phase de configuration pour plus de sécurité.
</impo>

<p>
Les commandes requises ont été affichées par le script de configuration.
</p>

<pre caption="Définir le mot de passe de root">
# <i>/etc/init.d/mysql start</i>
 * Re-caching dependency info (mtimes differ)...
 * Starting mysqld (/etc/mysql/my.cnf) ...        [ ok ]
<comment>(Tapez le mot de passe de votre choix au lieu de new-password)</comment>
# <i>/usr/bin/mysqladmin -u root -h localhost password 'new-password'</i>
</pre>

<p>
Testez votre mot de passe en essayant de vous connecter au serveur&nbsp;:
</p>

<pre caption="Se connecter au serveur MySQL">
$ <i>mysql -u root -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 4 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
L'option <c>-u</c> indique le nom d'utilisateur et <c>-h</c> indique le nom de
la machine.  Ce sera généralement <c>localhost</c> à moins que vous
n'installiez le serveur sur une autre machine. De plus, <c>-p</c> indique au
programme qu'il doit vous demander un mot de passe. Notez l'invite
<c>mysql&gt;</c>. Elle indique que vous êtes connecté, c'est là que vous allez
taper vos commandes SQL. Créons la base de données.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Créer la base de données</title>
<section>
<body>

<p>
Puisque vous êtes connecté et que l'invite est affichée, affichons la liste des
bases qui sont déjà créées avec la commande <c>SHOW DATABASES</c>.
</p>

<pre caption="Afficher la liste des bases">
mysql&gt; <i>SHOW DATABASES;</i>
+----------+
| Database |
+----------+
| mysql    |
| test     |
+----------+
2 rows in set (0.09 sec)
</pre>

<impo>
Notez que les commandes MySQL doivent se terminer par un point-virgule.
</impo>

<p>
Bien qu'une base de test ait déjà été créée, nous allons créer notre propre
base de données que nous nommerons «&nbsp;gentoo&nbsp;». On utilise la commande
<c>CREATE DATABASE</c>.
</p>

<pre caption="Créer la base « gentoo »">
mysql&gt; <i>CREATE DATABASE gentoo;</i>
Query OK, 1 row affected (0.08 sec)
</pre>

<p>
La réponse indique que tout s'est bien passé. Le serveur indique qu'il a
modifié une ligne dans la base, car l'ajout de la base de données a provoqué
l'ajout d'une ligne dans une table interne à MySQL. Ne vous tracassez pas avec
ces détails. Le serveur indique aussi le temps que l'action lui a pris. Vous
pouvez vérifier que la base existe en lançant la commande <c>CREATE
DATABASE</c>.
</p>

<pre caption="Vérifier que la base a été créée">
mysql&gt; <i>SHOW DATABASES;</i>
+----------+
| Database |
+----------+
| gentoo   |
| mysql    |
| test     |
+----------+
3 rows in set (0.00 sec)
</pre>

<p>
La base a bien été créée. Avant de créer des tables, il faut indiquer au
serveur que l'on veut travailler avec celle-ci avec la commande <c>USE</c>.
Cette commande accepte le nom de la base de données que vous allez utiliser. Il
est aussi possible de spécifier le nom de la base de données via l'option
<c>-D</c> sur la ligne de commande.
</p>

<pre caption="Sélectionner la base de données">
mysql&gt; <i>USE gentoo;</i>
Database changed
</pre>

<p>
Maintenant que la base de données <c>gentoo</c> a été sélectionnée, nous
pouvons créer des tables et y enregistrer des données.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Utiliser les tables avec MySQL</title>
<section>
<title>Créer une table</title>
<body>

<p>
La structure de MySQL contient des bases de données, tables, des
enregistrements et des champs. les bases contiennent des tables, les tables
contiennent des enregistrements qui contiennent des champs qui accueillent les
données. C'est le fonctionnement typique d'une base de données relationnelle.
Passons à la création de tables. Comme pour les bases, les tables peuvent être
listées, avec la commande <c>SHOW TABLES</c>. Comme il n'y a pas encore de
tables dans notre base gentoo, la commande affchera&nbsp;:
</p>

<pre caption="Aucune table">
mysql&gt; <i>SHOW TABLES;</i>
Empty set (0.00 sec)
</pre>

<p>
Créons des tables. Pour cela, nous utilisons la commande <c>CREATE TABLE</c>.
Elle est plus complexe que <c>CREATE DATABASE</c> et prend la forme
suivante&nbsp;:
</p>

<pre caption="Syntaxe de CREATE TABLE">
CREATE TABLE [table_name] ([field_name] [field_data_type]([size]));
</pre>

<p>
<b>table_name</b> est le nom de la table à créer. Choisissons
<c>developers</c>.  Cette table devra contenir le nom du développeur, son
adresse email et son rôle.  <b>field_name</b> est le nom d'un champ, nous en
avons trois&nbsp;: name, email et job. <b>field_data_type</b> est le type de
donnée à stocker dans chaque champ. Les différents formats sont disponibles sur
la page <uri
link="http://dev.mysql.com/doc/refman/5.0/fr/column-types.html">Types de
colonnes</uri> de MySQL. Nous utiliserons le type <c>VARCHAR</c> pour tous nos
champs. C'est un type de donnée très simple qui contient des chaînes de
caractères. La taille maximale de chaque champ est définie par <b>size</b>.
Utilisons 128 qui, pour rester simple, correspond à 128 caractères. La page
mentionnée ci-dessus explique pourquoi une taille de 128 ne signifie pas
forcément 128 caractères.
</p>

<pre caption="Crée une table">
mysql&gt; <i>CREATE TABLE developers ( name VARCHAR(128), email VARCHAR(128), job VARCHAR(128));</i>
Query OK, 0 rows affected (0.11 sec)
</pre>

<p>
La table vient d'être définie, vérifions avec <c>SHOW TABLES</c>&nbsp;:
</p>

<pre caption="Vérifier la liste des tables">
mysql&gt; <i>SHOW TABLES;</i>
+------------------+
| Tables_in_gentoo |
+------------------+
| developers       |
+------------------+
1 row in set (0.00 sec)
</pre>

<p>
Elle est bien là. Pour en savoir plus sur la structure de notre table,
utilisons la commande <c>DESCRIBE</c> (ou <c>DESC</c>)&nbsp;:
</p>

<pre caption="Décrire la structure d'une table">
mysql&gt; <i>DESCRIBE developers;</i>
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| name  | varchar(128) | YES  |     | NULL    |       |
| email | varchar(128) | YES  |     | NULL    |       |
| job   | varchar(128) | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+
3 rows in set (0.00 sec)
</pre>

<p>
Cette commande affiche la liste des champs d'une table et leur type ainsi que
quelques attributs que nous ne décrirons pas ici. N'hésitez pas à consulter le
<uri link="http://dev.mysql.com/doc/mysql/fr/">Manuel de référence</uri> de
MySQL pour en savoir plus. Ajoutons des données dans notre table.
</p>

</body>
</section>
<section>
<title>Ajouter des données dans une table</title>
<body>

<p>
Pour ajouter des données dans une table, nous utilisons la commande
<c>INSERT</c>. Son format est le suivant&nbsp;:
</p>

<pre caption="Syntaxe de la commande INSERT">
INSERT INTO table (col1, col2, ...) VALUES('value1', 'value2', ...);
</pre>

<p>
Cette commande ajoute un enregistrement dans une table. <b>table</b> est le nom
de la table. Il peut être suivi du nom des colonnes à remplir et les valeurs à
ajouter suivent le mot-clé <c>VALUES</c>. Vous pouvez omettre la liste des
colonnes si vous ajoutez une valeur dans chaque colonne et que vous spécifiez
les valeurs dans le même ordre que les colonnes. Ajoutons des
développeurs&nbsp;:
</p>

<pre caption="Ajouter de développeurs">
mysql&gt; <i>INSERT INTO developers VALUES('Joe Smith', 'joesmith@gentoo.org', 'toolchain');</i>
Query OK, 1 row affected (0.06 sec)
<comment>(Si vous ne connaissez pas l'ordre des colonnes ou 
si vous voulez laisser des colonnes vides)</comment>
mysql&gt; <i>INSERT INTO developers (job, name) VALUES('outsourced', 'Jane Doe');</i>
Query OK, 1 row affected (0.01 sec)
</pre>

<p>
D'après les messages affichés, les données ont été enregistrées. Mais comment
faire pour insérer plus qu'une ligne à la fois&nbsp;? la commande <c>LOAD
DATA</c> sert exactement à cela. Elle lit des enregistrements dans un fichier
texte où les champs sont séparés par des tabulations et les insère dans une
table. Créons un simple fichier texte que nous appelons
<path>records.txt</path>&nbsp;:
</p>

<pre caption="~/records.txt">
John Doe      johndoe@gentoo.org      portage
Chris White   chriswhite@gentoo.org   documentation
Sam Smith     samsmith@gentoo.org     amd64
</pre>

<impo>
Prenez garde quand vous utilisez la commande <c>LOAD DATA</c> avec des données
dont vous n'êtes pas sûr.
</impo>

<p>
La description de la commande <c>LOAD DATA</c> est assez longue, utilisons une
forme simple&nbsp;:
</p>

<pre caption="Syntaxe de LOAD DATA">
LOAD DATA LOCAL INFILE '/path/to/filename' INTO TABLE table;
</pre>

<p>
<c>/path/to/filename</c> est le fichier qui contient les données à insérer et
<c>table</c> est le nom de la table qui doit accueillir les données.
Essayons&nbsp;:
</p>

<pre caption="Charger des données">
mysql&gt; <i>LOAD DATA LOCAL INFILE '~/records.txt' INTO TABLE developers;</i>
Query OK, 3 rows affected (0.00 sec)
Records: 3  Deleted: 0  Skipped: 0  Warnings: 0
</pre>

<impo>
Si des choses bizarres se passent, vérifiez que vos champs sont bien séparés
par des tabulations. Si vous faites un copier-coller, il est possible que
celles-ci aient été remplacées par des espaces.
</impo>

<p>
Ça a marché. Toutefois, ceci ne fait qu'insérer des données et ne vous donne
que peu de contrôle sur la base. Beaucoup d'applications Web utilisent des
scripts SQL pour configurer MySQL facilement. Pour utiliser un script SQL, vous
pouvez utiliser <c>mysql</c> en mode batch, par exemple&nbsp;:
</p>

<pre caption="MySQL en mode batch">
$ <i>mysql -u root -h localhost -p &lt; sqlfile</i>
</pre>

<p>
Comme avec <c>LOAD DATA</c>, soyez bien sûr de ce que contient
<path>sqlfile</path>.  <e>Ne pas vérifier les actions qui vont être faites peut
compromettre votre base</e>.  Un autre moyen est d'utiliser la commande
<c>source</c> à l'invite <c>mysql&gt;</c>, par exemple&nbsp;:
</p>

<pre caption="Exécuter un fichier SQL">
mysql&gt; <i>source sqlfile;</i>
</pre>

<p>
Si une application Web nécessite d'exécuter un fichier SQL, une des deux
méthodes ci-dessus peut être utilisée. Maintenant que nous avons des données,
comment faire pour les utiliser&nbsp;?
</p>

</body>
</section>
<section>
<title>Accéder aux données grâce à des requêtes</title>
<body>

<p>
Les requêtes sont une des fonctionnalités les plus importantes d'une base de
données.  Elles permettent d'extraire des données et de les utiliser. La
plupart des requêtes utilisent le mot-clé <c>SELECT</c>. Cette commande peut
être complexe.  Voyons trois formes simples.
</p>

<pre caption="Exemples de commandes SELECT">
<comment>(Sélectionner tous les enregistrements d'une table)</comment>
SELECT * FROM table;
<comment>(Sélectionner les enregistrements dont un champ contient une valeur donnée)</comment>
SELECT * FROM table WHERE field=value;
<comment>(Sélectionner quelques champs)</comment>
SELECT field1,field2,field3 FROM table [WHERE field=value];
</pre>

<p>
Essayons le première forme. Elle est très simple et affiche tout le contenu
d'une table&nbsp;:
</p>

<pre caption="Afficher le contenu de notre table">
mysql&gt; <i>SELECT * FROM developers;</i>
+-------------+-----------------------+----------------+
| name        | email                 | job            |
+-------------+-----------------------+----------------+
| Joe Smith   | joesmith@gentoo.org   | toolchain      |
| John Doe    | johndoe@gentoo.org    | portage        |
| Chris White | chriswhite@gentoo.org | documentation  |
| Sam Smith   | samsmith@gentoo.org   | amd64          |
| Jane Doe    | NULL                  | Outsourced job |
+-------------+-----------------------+----------------+
5 rows in set (0.00 sec)
</pre>

<p>
Les données que nous avons ajoutées avec la commande <c>INSERT</c> et avec
<c>LOAD DATA</c> sont présentes. Disons que nous ne voulons afficher que
l'enregistrement de Chris White. Nous pouvons utiliser la deuxième forme&nbsp;:
</p>

<pre caption="Sélectionner un enregistrement spécifique">
mysql&gt; <i>SELECT * FROM developers WHERE name = 'Chris White';</i>
+-------------+-----------------------+---------------+
| name        | email                 | job           |
+-------------+-----------------------+---------------+
| Chris White | chriswhite@gentoo.org | documentation |
+-------------+-----------------------+---------------+
1 row in set (0.08 sec)
</pre>

<p>
Comme prévu, l'enregistrement recherché est affiché. Disons maintenant que nous
ne voulons voir que le rôle et l'adresse email, mais pas le nom. Nous pouvons
utiliser la troisième forme&nbsp;:
</p>

<pre caption="Sélectionner une partie d'un enregistrement spécifique">
mysql> <i>SELECT email,job FROM developers WHERE name = 'Chris White';</i>
+-----------------------+---------------+
| email                 | job           |
+-----------------------+---------------+
| chriswhite@gentoo.org | documentation |
+-----------------------+---------------+
1 row in set (0.04 sec)
</pre>

<p>
Cette méthode est très pratique sur des tables qui contiennent beaucoup de
colonnes et de tables.  Pour l'instant, en tant qu'utilisateur root, nous avons
tous les droits sur notre base. Un tel utilisateur peut être source de
problèmes. C'est pourquoi il est possible de créer des utilisateurs qui ont
moins de droits.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Les droits d'accès dans MySQL</title>
<section>
<title>Octroyer des droits d'accès avec GRANT</title>
<body>

<p>
Les droits d'accès définissent quelles actions chaque utilisateur peut
effectuer sur des bases, des tables, ou un peu tout.  Jusqu'à présent, nous
avons utilisé le compte root qui a accès à tout.  Créons deux utilisateurs,
guest et admin, et octroyons leur des droits d'accès différents.  Le compte
guest sera restreint et ne pourra que consulter les données, mais le compte
admin pourra effectuer les mêmes actions que root, mais uniquement dans la base
gentoo, pas dans la base principale de MySQL. Voyons une version simple de la
commande <c>GRANT</c>&nbsp;:
</p>

<pre caption="Syntaxe de la commande GRANT">
GRANT [privileges] ON database.* TO '[user]'@'[host]' IDENTIFIED BY '[password]';
</pre>

<note>
<c>GRANT</c> est géneralement utilisé pour créer un utilisateur.  Des versions
récentes de MySQL ont une commande spécifique <c>CREATE_USER</c>, mais
<c>GRANT</c> reste utilisée.
</note>

<p>
Quelques exemples de droits d'accès sont&nbsp;:
</p>

<ul>
  <li><c>ALL</c> - Tous les droits pour une base</li>
  <li><c>CREATE</c> - Création de tables</li>
  <li><c>SELECT</c> - Consulter des tables</li>
  <li><c>INSERT</c> - Ajouter des données dans des tables</li>
  <li><c>SHOW DATABASES</c> - Afficher la liste des bases</li>
  <li><c>USAGE</c> - Aucun droit</li>
  <li><c>GRANT OPTION</c> - Attribuer des droits à d'autres utilisateurs</li>
</ul>

<note>
Si vous utilisez MySQL pour servir une application Web, les droits
<c>CREATE</c>, <c>SELECT</c>, <c>INSERT</c>, <c>DELETE</c> et <c>UPDATE</c>
devraient suffire.  Pour plus de détails, veuillez consulter la documentation
sur la <uri link="http://dev.mysql.com/doc/mysql/fr/grant.html">Syntaxe de
GRANT et REVOKE</uri>.  Beaucoup d'utilisateurs (s')octroient tous les droits
inutilement. Demandez aux développeurs de l'application Web quels droits sont
réllemement nécessaires.
</note>

<p>
Le droit <c>ALL</c> suffit à notre utilisateur admin. Notre utilisateur guest
se contentera du droit <c>SELECT</c> qui lui permet juste de consulter les
tables. La syntaxe <c>database.*</c> donne le nom de la base de données suivie
du nom d'une table si vous voulez donner des droits sur une ou plusieurs
tables. «&nbsp;.*&nbsp;» signie toutes les tables de cette base. <c>user</c> et
<c>hostname</c> indiquent respectivement le nom de l'utilisateur et le nom de
la machine qu'il utilise pour se connecter. La commande <c>GRANT</c> spécifie
aussi le mot de passe de l'utilisateur.
</p>

<pre caption="Créer les utilisateurs admin et guest">
<comment>(admin)</comment>
mysql&gt; <i>GRANT ALL ON gentoo.* TO 'admin'@'localhost' IDENTIFIED BY 'password';</i>
<comment>(guest)</comment>
mysql&gt; <i>GRANT SELECT ON gentoo.* TO 'guest'@'localhost' IDENTIFIED BY 'password';</i>
</pre>

<p>
Essayons maintenant de nous connecter avec les noms d'utilisateur que nous
venons de créer&nbsp;:
</p>

<pre caption="Quitter MySQL">
mysql&gt; <i>quit</i>
</pre>

</body>
</section>
<section>
<title>Tester les permissions des utilisateurs</title>
<body>

<p>
Connectons-nous avec le nom d'utilisateur guest. Seul le droit <c>SELECT</c> a
été octroyé. Cet utilisateur devrait pouvoir consulter les données et rien
d'autre.
</p>

<pre caption="Se connecter en tant que guest">
$ <i>mysql -u guest -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 6 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
Vérifions ce que peut faire cet utilisateur. D'abord, il faut se brancher sur
la base gentoo&nbsp;:
</p>

<pre caption="Utiliser la base gentoo">
mysql&gt; <i>USE gentoo;</i>
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
</pre>

<p>
Essayons une action interdite, par exemple créer une table.
</p>

<pre caption="Essayer de créer une table">
mysql&gt; <i>CREATE TABLE test (test VARCHAR(20), foobar VARCHAR(2));</i>
ERROR 1044: Access denied for user: 'guest@localhost' to database 'gentoo'
</pre>

<p>
Comme vous le voyez, cette action a échoué, car l'utilisateur guest n'a pas les
autorisations suffisantes. Essayons maintenant, une action autorisée, le
SELECT&nbsp;:
</p>

<pre caption="Essayer la commande SELECT">
mysql&gt; <i>SELECT * FROM developers;</i>
+-------------+-----------------------+----------------+
| name        | email                 | job            |
+-------------+-----------------------+----------------+
| Joe Smith   | joesmith@gentoo.org   | toolchain      |
| John Doe    | johndoe@gentoo.org    | portage        |
| Chris White | chriswhite@gentoo.org | documentation  |
| Sam Smith   | samsmith@gentoo.org   | amd64          |
| Jane Doe    | NULL                  | Outsourced job |
+-------------+-----------------------+----------------+
5 rows in set (0.00 sec)
</pre>

<p>
La commande a réussi. Vous avez ainsi un aperçu de ce que sont les droits
d'accès. Essayons maintenant notre utilisateur admin.
</p>

<pre caption="Se connecter en tant que admin">
mysql&gt; <i>quit</i>
Bye
$ <i>mysql -u admin -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Your MySQL connection id is 7 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
Commençons par créer une nouvelle base de données. Notre utilisateur admin est
similaire à l'utilisateur root puisqu'il a tous les droits sur la base gentoo,
mais pas ailleurs.
</p>

<pre caption="Essayer de créer une nouvelle base">
mysql&gt; <i>CREATE DATABASE gentoo2;</i>
ERROR 1044: Access denied for user: 'admin@localhost' to database 'gentoo2'
</pre>

<p>
Effectivemement, admin n'a reçu des droits que pour la base gentoo&nbsp;;il ne
peut pas créer d'autres bases de données, mais il peut modifier ce qu'il veut
au sein de la base gentoo.
</p>

<pre caption="Les droits de admin dans la base gentoo">
mysql&gt; <i>USE gentoo;</i>
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; <i>INSERT INTO developers VALUES('Bob Simmons', 'bobsimmons@gentoo.org', 'python');</i>
Query OK, 1 row affected (0.08 sec)
</pre>

<p>
L'utilisateur admin a tous les droits sur notre base. Parfois, il est
souhaitable de supprimer un droit d'accès, par exemple un utilisateur abuse de
ses droits, ou il a quitté la société. La commande <c>REVOKE</c> est utilisée.
</p>

</body>
</section>
<section>
<title>Supprimer des droits d'accès avec REVOKE</title>
<body>

<p>
La commande <c>REVOKE</c> permet de supprimer un droit d'accès, ou tous les
droits. En fait, son format est très semblable à celui de <c>GRANT</c>.
</p>

<pre caption="La syntaxe de REVOKE">
REVOKE [privileges] ON database.* FROM '[user]'@'[host]';
</pre>

<p>
Les options sont les mêmes que pour la commande <c>GRANT</c>. Supprimons par
exemple tous les droits de notre utilisateur guest. Nous devons nous connecter
en tant que root.
</p>

<pre caption="Supprimer tous les droits d'accès">
mysql&gt; <i>REVOKE ALL ON gentoo.* FROM 'guest'@'localhost';</i>
Query OK, 0 rows affected (0.00 sec)
</pre>

<note>
Dans notre cas, les droits sont simples et la suppression des droits dans une
base ne pose pas de problèmes. Dans des installations plus importantes, vous
utiliseriez sans doute *.* au lieu de gentoo.* pour supprimer tous les droits
dans toutes les bases en une seule opération.
</note>

<p>
Quittons et essayons de nous connecter en tant que guest.
</p>

<pre caption="Se connecter en tant que guest">
$ <i>mysql -u guest -h localhost -p</i>
Enter password:
Welcome to the MySQL monitor. Commands end with ; or \g.
Youra MySQL connection id is 9 to server version: 4.0.25

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt;
</pre>

<p>
Bien que nous puissions nous connecter, tous nos droits ont été supprimés.
</p>

<pre caption="Plus de droits pour notre utilisateur guest">
mysql&gt; <i>USE gentoo;</i>
ERROR 1044: Access denied for user: 'guest@localhost' to database 'gentoo'
</pre>

<p>
Notre utilisateur ne peut plus abuser de ses droits, mais il peut encore se
connecter, car il reste défini dans notre base. Il est possible de le supprimer
définitivemement avec la commande <c>DELETE</c>.
</p>

</body>
</section>
<section>
<title>Supprimer des utilisateurs avec DELETE</title>
<body>

<p>
La table des utilisateurs (nommée <c>user</c>) contient la liste des
utilisateurs et leurs informations. Toujours en tant que root, utilisez la base
principale de MySQL.
</p>

<pre caption="Utiliser la base principale de MySQL">
mysql&gt; <i>USE mysql;</i>
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt;
</pre>

<p>
Voyons quelles tables existent dans cette base&nbsp;:
</p>

<pre caption="mysql database table listing">
mysql&gt; <i>SHOW TABLES;</i>
+-----------------+
| Tables_in_mysql |
+-----------------+
| columns_priv    |
| db              |
| func            |
| host            |
| tables_priv     |
| user            |
+-----------------+
6 rows in set (0.00 sec)
</pre>

<p>
La table qui nous intéresse s'appelle user. Elle contient plus de 30 colonnes
et n'est pas facile à lire. Essayons une commande <c>SELECT</c> dont le
résultat est plus facile à lire. Les colonnes qui nous intéressent s'appellent
Host et User.
</p>

<pre caption="Trouver notre utilisateur guest dans la table user">
mysql&gt; <i>SELECT Host,User FROM user WHERE User = 'guest';</i>
+-----------+-------+
| Host      | User  |
+-----------+-------+
| localhost | guest |
+-----------+-------+
1 row in set (0.00 sec)
</pre>

<p>
Nous en savons assez pour supprimer définitivement notre utilisateur guest avec
la commande <c>DELETE</c>.
</p>

<pre caption="Syntaxe de DELETE">
DELETE FROM table WHERE field='value';
</pre>

<p>
La commande <c>DELETE</c> ressemble à <c>SELECT</c>. Dans notre exemple, field
sera le champ User et la valeur sera le nom de notre utilisateur, guest. La
commande qui suit supprimera la ligne de la table et notre utilisateur guest
aura totalement disparu.
</p>

<pre caption="Supprimer l'utilisateur guest">
mysql&gt; <i>DELETE FROM user WHERE User='guest';</i>
Query OK, 1 row affected (0.07 sec)
<comment>(FLUSH PRIVILEGES est requis pour enregistrer la mise à jour des droits)</comment>
mysql&gt; <i>FLUSH PRIVILEGES;</i>
Query OK, 0 rows affected (0.00 sec)
</pre>

<p>
La commande a fonctionné. Vérifions en essayant de nous connecter en tant que
guest
</p>

<pre caption="Se connecter en tant que guest">
mysql&gt; <i>quit</i>
Bye
$ <i>mysql -u guest -h localhost -p</i>
Enter password:
ERROR 1045: Access denied for user: 'guest@localhost' (Using password: YES)
</pre>

<p>
Ça ne marche plus&nbsp;;l'utilisateur guest n'est plus reconnu.
</p>

</body>
</section>
<section>
<title>Conclusion</title>
<body>

<p>
Ce guide s'est contenté d'utiliser la ligne de commande, mais des interfaces
graphiques existent, par exemple&nbsp;:
</p>

<ul>
  <li>
    <uri link="http://www.phpmyadmin.net/home_page/">phpMyAdmin</uri> - Outil
    d'administration de MySQL populaire basé sur php
  </li>
  <li>
    <uri
    link="http://sourceforge.net/projects/mysqlnavigator/">mysqlnavigator</uri>
    - Interface graphique basée sur QT
  </li>
  <li>
    <uri link="http://gmyclient.sourceforge.net/">gmyclient</uri> - Un client
    basé sur GNOME
  </li>
  <li><uri link="http://www.knoda.org/">knoda</uri> - Un client KDE</li>
</ul>

<p>
Ceci termine ce tutoriel MySQL. J'espère que vous en savez assez pour demarrer
avec MySQL et créer votre première base de données. N'hésitez pas à faire
parvenir vos commentaires à <mail link="chriswhite@gentoo.org">l'auteur</mail>
(en anglais).
</p>

</body>
</section>
</chapter>
</guide>
