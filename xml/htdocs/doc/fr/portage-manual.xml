<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/Attic/portage-manual.xml,v 1.15 2004/06/23 00:47:13 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link = "/doc/fr/portage-manual.xml" lang="fr">
<title>Manuel Portage</title>

<author title="Auteur">
  <mail link="blocke@shivan.org">Bruce A.Locke</mail>
</author>
<author title="Correcteur">
  <mail link="carl@gentoo.org">Carl Anderson</mail>
</author>
<author title="Correcteur">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Correcteur">
  <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Correcteur">
  <mail link="erwin@gentoo.org">Erwin</mail>
</author>
<author title="Traducteur">
  <mail link="nohar@altern.org">Arnaud Cornet</mail>
</author>
<author title="Traducteur">
  <mail link="vincent.rubiolo@free.fr">Vincent Rubiolo</mail>
</author>

<abstract>
Ce manuel fournit une vue générale de Portage, des informations détaillées
de configuration et un guide pour l'installation et la maintenance de
paquets en utilisant le système Portage.
</abstract>

<license/>

<version>0.9.15</version>
<date>25 mars 2004</date>

<chapter>
<title>Portage&nbsp;: Une vue d'ensemble</title>

<section>
<title>Vue d'ensemble</title>
<body>

<p>
Portage est un système de gestion de paquets très avancé et puissant. Sa
flexibilité et sa capacité à servir aussi bien de moteur de compilation que de
former le cœur d'une distribution à la pointe de la technologie lui confèrent
le titre de Moteur de Méta-Distribution. La distribution Gentoo Linux est
conçue autour de Portage.
</p>

<p>
Gentoo Linux elle-même est souvent qualifiée de méta-distribution.  Elle
consiste en Portage et plus de 4000 recettes de paquets appelés <b>ebuilds</b>.
Ces <b>ebuilds</b> donnent les informations nécessaires à Portage pour compiler
et installer un paquet logiciel. En utilisant des <b>profils</b> et
l'utilitaire de ligne de commande <b>emerge</b>, les utilisateurs et les
développeurs peuvent utiliser Portage pour installer et maintenir les paquets
qui forment le système d'exploitation et les applications d'une machine.
</p>

<p>
Un système Gentoo Linux est «&nbsp;compilé à la volée&nbsp;». Installer Gentoo
Linux implique la mise en place d'au moins un compilateur et d'un environnement
de compilation à l'aide duquel Portage peut télécharger un code source à partir
d'Internet et compiler le reste du cœur du système ainsi que n'importe quelle
application désirée.  Bien que Portage permette l'utilisation de paquets
précompilés, ils forment un compromis et ne sont utilisés que pour
l'installation sur des machines lentes par des developpeurs qui auraient besoin
de restaurer un paquet rapidement, ou pour permettre à d'autres machines plus
rapides de compiler pour une machine plus lente.
</p>

<p>
A cause de ces caractéristiques et du fait que Portage est très configurable
dans sa façon de compiler et d'installer les paquets, très peu d'installations
Gentoo sont identiques. En bref, quand un utilisateur installe Gentoo Linux, le
système Portage compile une distribution Linux personnalisée selon les options
spécifiées dans la configuration de Portage et dans les ebuilds.
</p>  

<p>
Au premier abord, l'idée de Portage peut sembler similaire au traditionnel
système de ports BSD. Tous deux compilent des paquets à partir des sources et
permettent aux utilisateurs d'installer et de désinstaller de façon sûre les
logiciels d'un système, et tous deux gèrent les dépendances automatiquement.
Beaucoup d'idées de Portage viennent du système de ports de BSD mais Portage
n'est en aucune façon un enième dérivé du système de ports BSD.
</p>

<p>
Le système Portage est le résultat de l'association d'un cœur en Python et
d'<b>ebuilds</b> qui sont des scripts bash. Au lieu de gérer des makefiles à
l'aide de la commande <c>make</c>, Portage associe la puissance de Python et la
simplicité d'utilisation des scripts bash avec quelques caractéristiques
orientées objet afin d'obtenir un système unique et puissant que nous pensons
supérieur à tous les autres systèmes de ports.
</p>

<p>
Quelques caractéristiques avancées de Portage&nbsp;: plusieurs
versions/révisions d'un même paquet dans l'arbre, dépendances conditionnelles,
gestion fine des paquets, installations sûres, protection des fichiers de
configuration et plus encore. Beaucoup de ces particularités sont détaillées
plus loin dans ce manuel.
</p>

</body>
</section>
<section>
<title>Résolution des dépendances conditionnelles et support de caractéristiques spéciales </title>
<body>

<p>
Le système Portage est unique de par la flexibilité offerte aux utilisateurs.
Les systèmes de ports BSD ont tendance à ne supporter qu'une révision d'un
paquet à la fois dans l'arbre. Portage ne souffre pas de cette limitation.
Plusieurs versions du même paquet peuvent être disponibles et prêtes à être
installées. Les dépendances (les paquets nécessaires pour pouvoir compiler ou
utiliser un autre paquet) peuvent être spécifiées à la version près ou grâce à
un intervalle de versions. Cela rend sûr le fait d'avoir plusieurs versions
différentes du même paquet dans l'arbre.
</p>

<p>
Le système de dépendances supporte aussi les dépendances conditionnelles.
Portage utilise le concept puissant de réglage de la variable <b>USE</b>. En
changeant la valeur de cette variable dans un fichier de configuration de
Portage, vous pouvez désactiver des capacités optionnelles (et donc vous
débarrasser des dépendances) de certaines bibliothèques pour tous les paquets
qui seront compilés.  Ce système très puissant est décrit plus en détail dans
le chapitre suivant.
</p>

<p>
De plus, Portage connaît le concept de <b>SLOTS</b>. Au cours du développement
de Gentoo Linux, les développeurs ont souvent éprouvé le besoin d'avoir
plusieurs versions de certains paquets (des bibliothèques par exemple)
installées de façon à satisfaire la demande d'autres paquets. L'approche
traditionnelle pour résoudre ce type de problème est de traiter les différentes
versions du même paquet comme des paquets séparés avec des noms légèrement
différents.
</p>

<p>
Au lieu que les développeurs ne doivent apprendre à traiter certaines versions
comme des paquets séparés, les développeurs ont appris à Portage comment gérer
et maintenir plusieurs versions du même paquet grâce à l'utilisation de
<b>SLOTS</b>. Considérons l'exemple de la bibliothèque freetype dont les
branches 1.x et 2.x ne sont pas compatibles. Les deux sont cependant
nécessaires pour satisfaire les dépendances des logiciels d'un système. La
plupart des distributions et des systèmes de ports appellent
«&nbsp;freetype&nbsp;» le paquet contenant freetype 1.x et
«&nbsp;freetype2&nbsp;» le paquet contenant freetype 2.x. Nous considérons
cette approche comme le signe d'un système de paquets fondamentalement mal
conçu. Nous avons simplement assigné le <b>SLOT</b> numéro 1 à la première
version et le <b>SLOT</b> numéro 2 à la deuxième. Grâce à cette information,
Portage peut gérer les deux branches simultanément et les mettre à jour
indépendamment en fonction des changements apportés à chacune.
</p>

</body>
</section>
<section>
<title>Profils</title>
<body>

<p>
Portage utilise le concept de <b>profils</b>. Un profil contient une liste de
noms de paquets et de versions ainsi qu'un ensemble d'options de configuration
utilisées par Portage. Un profil indique à Portage quels paquets autoriser,
interdire ou considérer comme indispensables.  Les utilisateurs peuvent changer
de profil en changeant un simple lien symbolique
(<path>/etc/make.profile</path>). Cela peut paraître simple mais cela permet à
Portage de répondre aux besoins d'une distribution et de servir de système de
compilation professionnel.
</p>

<p>
L'effort de production de Gentoo Linux a résulté en une collection de fichiers
<b>ebuild</b> que Portage utilise et en un profil qui définit quels paquets
sont considèrés essentiels, vitaux au bon fonctionnement du système. Le profil
permet aussi aux développeurs de bloquer et de débloquer un paquet spécifique
pour désactiver temporairement un paquet bogué, etc. Les fichiers <b>ebuild</b>
disent simplement à Portage comment compiler et installer le paquet que le
profil demande ou autorise.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configurer Portage</title>

<section>
<title>Vue d'ensemble</title>
<body>

<p>
Les chapitres suivants couvrent les différents aspects de la configuration de
Portage utiles à la fois aux utilisateurs et aux développeurs. Portage est un
système très flexible et vous devrez comprendre comment configurer Portage afin
de maîtriser votre système et de l'optimiser selon vos besoins.
</p>

<p>
Notez bien que le terme «&nbsp;utilisateur&nbsp;» se réfère dans ce document à
une personne ayant les droits administrateurs sur la machine.  Vous devez être
super-utilisateur (root) pour accéder à la configuration de Portage et pour la
modifier ainsi que pour installer («&nbsp;to merge&nbsp;») et désinstaller
(«&nbsp;to unmerge&nbsp;») des paquets.
</p>

</body>
</section>
<section>
<title>Les Fichiers de configuration de Portage</title>
<body>

<p>
Pratiquement toutes les options de configuration dont on parle ci-dessous se
trouvent dans les fichiers <path>/etc/make.conf</path>,
<path>/etc/make.profile/make.defaults</path> et <path>/etc/make.globals</path>.
<path>/etc/make.conf</path> contient différentes variables utilisées par
Portage.
</p>

<p> 
Pour tout paramètre du système, Portage vérifiera d'abord les variables
d'environnement définies puis, si le paramètre n'y est pas trouvé, le fichier
<path>/etc/make.conf</path>. Si le paramètre n'y est pas défini, Portage
regarde <path>/etc/make.profile/make.defaults</path>. Enfin, si le paramètre
n'est pas défini dans ce fichier non plus, Portage se rabattra sur
<path>/etc/make.globals</path>.<br/> Veuillez noter que <e>tous</e> les
réglages utilisateurs devraient être faits par des variables d'environnement ou
dans <path>/etc/make.conf</path> qui est destiné à être adapté par
l'utilisateur.  Il est également important de noter que tout réglage fait par
l'intermédiaire de <path>/etc/make.conf</path> prendra quasi systématiquement
le pas sur celui fait dans <path>/etc/make.globals</path>.  Tous les réglages
faits dans <path>/etc/make.conf</path> et <path>/etc/make.globals</path> sont
considérés comme généraux et affectent tout le système, en ce qui concerne
Portage.
</p>

<p>
Quand vous vérifiez si une option est déjà définie, il est recommandé de
vérifier d'abord <path>/etc/make.conf</path> et ensuite
<path>/etc/make.globals</path>. A moins que le contraire soit spécifié, les
options dans <path>/etc/make.conf</path> sont prioritaires par rapport à celles
de <path>/etc/make.globals</path>.
</p>

</body>
</section>
<section>
<title>La variable USE</title>
<body>

<p>
La variable USE fournit un moyen flexible de sélectionner ou déselectionner des
options relatives à la compilation de paquets, et ce aussi bien à un niveau
global que pour des paquets individuels. Cela permet à l'administrateur de
contrôler comment les paquets seront compilés en fonction de ce que le paquet
propose comme options de compilation. Par exemple, les paquets qui proposent
l'option GNOME pourront être compilés sans le support GNOME en désactivant
l'option USE <b>gnome</b>. Sélectionner l'option <b>gnome</b> permettrait de
compiler le support de GNOME pour chacun de ces mêmes paquets.
</p>

<p>
L'effet d'une option USE sur les paquets dépend du logiciel lui-même et du fait
que l'ebuild supporte l'option en tant que fonctionnalité optionnelle. Si le
logiciel n'a pas la capacité d'utiliser le composant logiciel cité dans
l'option USE, alors l'option n'a évidemment pas d'effet. De plus, beaucoup de
dépendances de paquets ne sont pas considérées comme optionnelles par les
logiciels et les options de la variable USE n'auront pas d'effet sur ces
dépendances.  Une liste de mot-clefs USE utilisés par un paquet particulier
peuvent être trouvés en regardant les variables <b>DEPEND</b> et <b>RDEPEND</b>
dans n'importe quel fichier ebuild.
</p>

<p>
Une liste des paramètres USE utilisés par Gentoo Linux est accessible dans
<path>/usr/portage/profiles/use.desc</path>. On y trouve un paramètre par ligne
suivi d'une brève description de ce que le paramètre active.
</p>

<p>
Portage détermine si une option de USE est sélectionnée ou désélectionnée en
vérifiant jusqu'à quatre emplacements différents.  Ces emplacements changent
les options USE en s'«&nbsp;empilant&nbsp;».  Portage regarde chaque
emplacement et se souvient de la valeur qu'avait le paramètre à l'emplacement
précédent. Les sélections ou désélections sont cumulées par Portage.
</p>

<p>
Les emplacements visités par le processus de parcours de la variable USE ainsi
que leur ordre sont déterminés par la variable <b>USE_ORDER</b> dans
<path>/etc/make.globals</path>. Pour retirer un emplacement, il suffit
d'enlever celui-ci de la variable <b>USE_ORDER</b>.
</p>

<p>
Ce qui suit est une description des emplacements dans l'ordre dans lequel ils
sont définis par la variable <b>USE_ORDER</b> de la configuration par défaut de
Portage.
</p>


<p><b>Défauts</b></p>

<p>
Les «&nbsp;profils&nbsp;» Portage peuvent définir un ensemble de mot-clés USE.
Ceci est défini dans le fichier make.defaults de chaque profil Portage.  Comme
<path>/etc/make.profile</path> est un lien vers le profil actuellement utilisé
par Portage, <path>/etc/make.profile/make.defaults</path> contient les valeurs
par défaut utilisées. Il est recommandé de ne pas modifier ce fichier car il
sera écrasé à chaque mise a jour de Portage.
</p>

<p><b>Auto</b></p>

<p>
Auto est défini dans le fichier use.defaults dans le profil de Portage
(<path>/etc/make.profile/use.defaults</path>). Chaque entrée consiste en un
paramètre USE et son paquet correspondant. Si le paquet listé pour un mot-clef
USE est actuellement installé, alors le mot clef USE est considéré comme
sélectionné. Donc, par exemple, si vous avez installé <c>x11-base/xfree</c> et
n'avez pas explicitement désélectionné l'option USE X, alors ce paramètre est
considéré comme sélectionné. Il est recommandé de ne pas modifier ce fichier
car il sera écrasé à chaque mise à jour de Portage.
</p>

<p><b>Conf</b></p>

<p>
Si des options <b>USE</b> sont définies dans <path>/etc/make.conf</path>, elles
sont utilisées&nbsp;; sinon, <path>/etc/make.globals</path> est vérifié. Cette
entrée peut ressembler à ceci&nbsp;:
</p>

<pre caption = "Un exemple de variable USE">
USE="slang readline gpm berkdb gdbm tcpd pam libwww ssl gb tk
     lm_sensors lvm ldap tex bonobo sdl gtk xfs evo pda ldap
     mmx mitshm perl python guile ruby postgres dvd 3dnow tcl
     lcms gif sdl vorbis ogg oss libg++ directfb decss snmp
     gnome X opengl mozilla pdflib gpg -nls gd xface jpilot
     -kde -qt -esd -motif -alsa oggvorbis"
</pre>

<p>
Une option de USE est séléctionnée simplement en faisant apparaître son nom
dans la liste&nbsp;; elle est désélectionnée en plaçant <b>-</b> devant son
nom. Par exemble <b>gnome</b> sélectionne GNOME et <b>-motif</b> désélectionne
motif.
</p>

<p>
La variable <b>USE</b> dans <path>/etc/make.conf</path> est celle qu'il est
recommandé de modifier pour sélectionner ou désélectionner explicitement un
mot-clef. Ce fichier ne sera pas écrasé par une mise à jour de Portage. Il est
recommandé de spécifier ici les options de USE dont on ne veut pas qu'ils
soient modifiés dans les deux emplacements précédents.
</p>

<p><b>Env</b></p>

<p>
USE peut être modifié manuellement en utilisant la variable d'environnement
USE.
</p>

<pre caption = "Comment redéfinir la variable USE">
# <i>export USE="-gnome"</i>
# <i>emerge net-im/gaim</i>
</pre>

<p>
Ceci permet d'utiliser une variable USE particulière lors de l'installation
d'un paquet spécifique. Exécuter emerge après la définition de la variable USE
utilisera la nouvelle variable USE si emerge est exécuté dans le shell où la
variable a été définie et si cette variable n'a pas été manuellement effacée.
</p>
  
<note>
Bien que Portage enregistre les options USE utilisées lors de l'installation
d'un paquet, ce paramètre n'est pas persistant. Si le paquet est réinstallé ou
mis à jour dans le futur, il utilisera la variable USE qui s'applique au moment
de l'exécution de emerge et non pas la variable USE utilisée quand il a été
installé pour la première fois.
</note>

</body>
</section>
<section>
<title>Options du compilateur</title>
<body>

<p>
Les options du compilateur utilisé par Portage pour compiler les paquets
peuvent être configurées dans <path>/etc/make.conf</path> en éditant les
variables <b>CHOST</b>, <b>CFLAGS</b> et <b>CXXFLAGS</b>.  <b>CHOST</b>
spécifie la plate-forme pour laquelle vous compilez, <b>CFLAGS</b> et
<b>CXXFLAGS</b> spécifient les options («&nbsp;flag&nbsp;») à passer aux
compilateurs C et C++.
</p>

<p>
Plusieurs exemples de variables sont fournis avec des commentaires expliquant
pour quelles plates-formes ils sont adaptés. Ces variables par défaut sont
testées et considérées comme stables. Les changer peut conduire à des erreurs
de compilation ou à des bogues lors de la compilation ou de l'exécution du
programme compilé. S'il vous plaît, soyez précautionneux si vous décidez de
configurer un paramètre par défaut car cela peut conduire à un système
inutilisable.
</p>

<p>
Les utilisateurs possédant des systèmes multi-processeurs peuvent utiliser la
variable <b>MAKEOPTS</b> de <path>/etc/make.globals</path>.  Cette option est
passée à <c>make</c> pendant la compilation d'un paquet pour lancer plusieurs
compilations en même temps.
</p>
  
</body>
</section>

<section>
<title>Les emplacements des répertoires</title>
<body>

<p>
Portage vous permet de configurer les répertoires qu'il utilise pour compiler
des paquets et pour enregistrer certains fichiers.  La plupart des utilisateurs
n'auront pas besoin de modifier ces emplacements. Les variables suivantes
peuvent être paramétrées&nbsp;:
</p>

<ul>
  <li><b>PORTDIR</b> - Emplacement de l'arbre de Portage</li>
  <li><b>DISTDIR</b> - Cache local des archives téléchargées</li>
  <li><b>PKGDIR</b> - Emplacement des paquets tbz2 générés localement</li>
  <li><b>RPMDIR</b> - Emplacement des paquets RPM générés localement</li>
  <li><b>PORTAGE_TMPDIR</b> - Espace temporaire utilisé pour la
  compilation de paquets</li>
  <li><b>BUILD_PREFIX</b> - Associé à PORTAGE_TMPDIR</li>
  <li><b>PKG_TMPDIR</b> - Associé à PKGDIR</li>
</ul>
</body>
</section>
<section>
<title>La protection des fichiers de configuration</title>

<body>

<p>
Portage permet la protection de tous les fichiers de répertoires spécifiés.
Portage n'écrasera pas les fichiers d'un répertoire protégé. Si un paquet
essaie d'écraser un fichier protégé, il sera renommé en quelque chose de la
forme <path>._cfg0000_nom</path>, ceci afin de permettre à l'utilisateur de
fusionner son ancienne configuration avec la nouvelle manuellement.
</p>

<p>
Les répertoires protégés sont spécifiés à l'aide de <b>CONFIG_PROTECT</b> dans
<path>/etc/make.conf</path> ou <path>/etc/make.globals</path>. Des fichiers
spécifiques ainsi que des sous-répertoires d'un répertoire protégé sont
déprotégés à l'aide de la variable <b>CONFIG_PROTECT_MASK</b>.
</p>

<p>
Ceci est un exemple et ne doit pas être bêtement recopié&nbsp;:
</p>

<pre caption = "Comment protéger certains répertoires ou fichiers">
CONFIG_PROTECT="/etc /usr/share/config /usr/kde/2/share/config"
CONFIG_PROTECT_MASK="/etc/gconf /etc/init.d /etc/pam.d"
</pre>

<p>
Les utilisateurs peuvent obtenir plus d'informations sur la façon dont
fonctionne la protection des fichiers en exécutant la commande suivante depuis
un shell&nbsp;:
</p>

<pre caption = "Obtenir davantage d'informations sur la protection des fichiers">
# <i>emerge --help config</i>
</pre>

</body>
</section>
<section>
<title>CARACTÉRISTIQUES</title>
<body>

<p>
Portage offre un grand nombre d'options qui facilitent la vie des développeurs
et qui gouvernent le comportement de Portage et la façon dont il nettoie les
répertoires après les nombreuses étapes de l'installation d'un paquet. Ces
options ont un intérêt seulement pour les développeurs et peuvent causer des
problèmes pour les utilisateurs.
</p>

<p>
La liste des caractéristiques est paramétrée à l'aide de la variable
<b>FEATURES</b> dans <path>/etc/make.conf</path> ou
<path>/etc/make.globals</path>. Voici la liste des options disponibles&nbsp;:
</p>

<ul>
  <li>
    <b>digest</b>&nbsp;: Automatiquement créer un digest pour les nouveaux
    ebuilds.
  </li>
  <li>
    <b>cvs</b>&nbsp;: Automatiquement enregistrer les nouveaux digests par cvs.
  </li>
  <li>
    <b>sandbox</b>&nbsp;: Sélectionne le bac à sable (sandbox) pour la
    protection des préfixes de chemin.
  </li>
  <li><b>noclean</b>&nbsp;: Portage ne nettoie pas après la compilation.</li>
  <li>
    <b>noauto</b>&nbsp;: N'exécute pas automatiquement les étapes précédant
    l'installation d'un paquet.
  </li>
  <li>
    <b>distcc</b>&nbsp;: Activer la compilation distribuée offerte par distcc.
  </li>
  <li>
    <b>ccache</b>&nbsp;: Conserver les fichiers objets pour gagner du temps
    lors de la recompilation.
  </li>
  <li>
    <b>buildpkg</b>&nbsp;: Créer un paquet binaire lors de l'installation de
    chaque ebuild.
  </li>
  <li>
    <b>userpriv</b>&nbsp;: Abandonner les privilèges super-utilisateur lors de
    la compilation.
  </li>
  <li>
    <b>usersandbox</b>&nbsp;: Utiliser le bac à sable (sandboxing) lorsque
    <b>userpriv</b> est activé.
  </li>
  <li>
    <b>keeptemp</b>&nbsp;: Ne pas effacer les fichiers temporaires (${T}) après
    une installation.
  </li>
</ul>

<p>
Certaines de ces caractéristiques peuvent être ajustées plus finement à l'aide
des variables suivantes&nbsp;:
</p>

<ul>
  <li>
    <b>CCACHE_SIZE</b>&nbsp;: Définit combien de mémoire <c>ccache</c> peut
    être utilisée. Le réglage par défaut est de 2 Go.
  </li>
  <li>
    <b>DISTCC_HOSTS</b>&nbsp;: Définit quelles sont les machines qui vont
    participer à la compilation distribuée grâce à <c>distcc</c>. Chacune
    d'elle doit exécuter le démon <c>distccd</c>.
  </li>
</ul>

</body>
</section>
<section>
<title>Les réglages SYNC de Portage</title>
<body>

<p>
Portage a la capacité de mettre à jour l'arbre de Portage à travers rsync.  Si
vous trouvez un autre moyen de mettre à jour l'arbre Portage, vous pouvez
définir quelle méthode utiliser dans la variable <b>SYNC</b> de
<path>/etc/make.conf</path>.
</p>

<p><b>RSYNC</b></p>

<p>
rsync est la méthode la plus classique pour tenir un arbre Portage à jour. Elle
est activée dans <path>/etc/make.conf</path>
</p>

<pre caption = "Réglage de la variable SYNC">
SYNC="rsync://cvs.gentoo.org/gentoo-x86-portage"
</pre>

<note>
Cette méthode écrase bêtement les changements que vous avez pu effectuer à
votre arbre Portage local. Si vous avez besoin de les conserver , utilisez
PORTDIR_OVERLAY=/endroit/ou/vous/voulez/sauver-votre-arbre-personnel pour
protéger vos changements.
</note>

<note>
<path>/etc/make.conf</path> contient des informations sur la définition de la
variable <b>SYNC</b> pour se connecter automatiquement au serveur rsync
géographiquement plus proche de chez vous. Cela donne généralement des taux de
transfert plus élevés et permet de répartir la charge sur l'ensemble des
serveurs.
</note>

<p><b>Accès CVS pour développeur</b></p>

<p>
Les développeurs ayant un acces complet à l'arbre CVS peuvent également
utiliser <c>emerge</c> pour qu'il synchronise l'arborescence locale avec un
dépôt CVS auquel ils accèdent par ssh.
</p>

<p>
Rapatriez simplement une copie de l'arbre CVS en utilisant votre compte
(«&nbsp;checkout&nbsp;»), déplacez-le vers <path>/usr/portage</path>, et
utilisez cette option de <b>SYNC</b>&nbsp;:
</p>
  
<pre caption="Utilisation de CVS avec votre arborescence locale">
SYNC="cvs://votrecompte@cvs.gentoo.org:/var/cvsroot"
</pre>

</body>
</section>
<section>
<title>Miroirs</title>
<body>

<p>
Le projet Gentoo maintient un miroir local de toutes les archives référencées
dans les ebuilds de l'arbre Portage. Souvent, les sources sont conservées sur
des serveurs lents qui peuvent être régulièrement indisponibles. Les
développeurs effacent également les anciennes versions de leurs sources quand
ils en mettent une nouvelle à la disposition des utilisateurs.  Pour simplifier
la vie des utilisateurs de la distribution Gentoo (et pour réduire
l'utilisation de la bande passante du site conservant les sources) nous gardons
une copie de ces fichiers.  Cela permet un téléchargement plus rapide et plus
fiable depuis l'un des miroirs géographiquement près de vous.
</p>

<p>
Quand vous tentez d'installer un paquet, Portage essaie d'abord de vérifier si
notre miroir possède cette archive. Si le miroir ne la possède pas, alors
Portage essaie de télécharger les sources depuis le serveur HTTP ou FTP
spécifié dans l'ebuild du paquet.
</p>

<p>
Le miroir que Portage utilise peut être spécifié à l'aide de la variable
<b>GENTOO_MIRRORS</b> dans <path>/etc/make.conf</path>.  Voici la configuration
courante par défaut&nbsp;:
</p>

<pre caption = "Spécifier un miroir">
GENTOO_MIRRORS="http://www.ibiblio.org/gentoo"
</pre>

<p>
Pour trouver un miroir Gentoo plus près de chez vous, visitez le site de Gentoo
ou demandez à la liste de diffusion locale. Vous pouvez également installer
<c>mirrorselect</c> qui déterminera automatiquement le miroir le plus près de
chez vous. Veuillez vous référer au guide d'installation pour plus
d'informations sur l'utilisation de <c>mirrorselect</c>.
</p>

</body>
</section>
<section>
<title>Programme de téléchargement</title>
<body>

<p>
Le programme que Portage utilise pour télécharger les archives peut être
spécifié grâce aux variables <b>FETCHCOMMAND</b> et <b>RESUMECOMMAND</b>.
Plusieurs exemples sont indiqués dans <path>/etc/make.conf</path> et
<path>/etc/make.globals</path>.  Portage utilise <c>wget</c> par défaut, ce qui
devrait satisfaire la plupart des utilisateurs.
</p>

<note>
Portage passe les informations relatives aux proxys HTTP et FTP au programme de
téléchargement à l'aide des variables d'environnement HTTP_PROXY et FTP_PROXY.
</note>

</body>
</section>
<section>
<title>Proxies</title>
<body>

<p>
On peut dire à Portage d'utiliser des proxies HTTP et FTP pour télécharger des
fichiers. Les proxies peuvent être spécifiés par <b>HTTP_PROXY</b> et
<b>FTP_PROXY</b> soit dans <path>/etc/make.conf</path>, soit dans
<path>/etc/make.globals</path>.  Si le même proxy sert de proxy HTTP et FTP,
alors vous pouvez utiliser la variable <b>PROXY</b> à la place.
</p>

<p>Voilà un exemple&nbsp;:</p>

<pre caption ="Réglage des proxies">
HTTP_PROXY="http://192.168.1.1:8080"
FTP_PROXY="http://192.168.1.1:8080"
<comment>
ou
</comment>
PROXY="http://192.168.1.1:8080"
</pre>

<p>
Il est également possible de spécifier un proxy HTTP pour l'utilisation de
RSYNC. Le proxy RSYNC peut être spécifié en utilisant la variable RSYNC_PROXY
dans <path>/etc/make.conf</path> ou comme variable d'environnement.
</p>

<p>
En voici un exemple&nbsp;:
</p>

<pre caption = "Spécification d'un proxy RSYNC">
RSYNC_PROXY="192.168.1.1:8080"
</pre>

<note>
Si vous êtes derrière un pare-feu et que rsync ne semble pas pouvoir utiliser
votre proxy HTTP, vous pouvez quand même mettre à jour votre arbre Portage en
utilisant une archive tar («&nbsp;tarball&nbsp;»). Référez-vous à la <uri
link="/doc/fr/faq.xml#norsync">FAQ</uri> pour plus d'informations.
</note>

</body>
</section>
<section>
<title>Options diverses</title>
<body>

<p>
Voici quelques options qui pourront être utiles à certains utilisateurs&nbsp;:
</p>

<ul>
  <li>
    <b>NOCOLOR</b>&nbsp;: Permet aux utilisateurs d'empêcher l'utilisation de
    couleurs dans la sortie de l'outil emerge.
  </li>
  <li>
    <b>CLEAN_DELAY</b>&nbsp;: Portage ne désinstalle un paquet qu'après un
    certain nombre de secondes pour permettre à l'utilisateur d'annuler
    l'opération. Cette option spécifie le nombre de secondes à attendre. Mettre
    à «&nbsp;0&nbsp;» pour désactiver.
  </li>
  <li>
    <b>PORTAGE_NICENESS</b>&nbsp;: Valeur ajoutée à la valeur de <c>nice</c>
    des tâches lancées par <c>emerge</c>.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Gestion de paquets</title>
<section>
<title>Mise à jour de l'arbre Portage</title>
<body>

<p>
L'arbre Portage, situé dans /usr/portage, contient la bibliothèque
d'instructions pour de nombreux paquets (appelés <b>ebuilds</b>).  L'arbre
contient également les informations relatives aux profils et à package.mask,
informations vitales pour avoir un arbre Portage à jour. Il est important de
garder l'arbre synchronisé avec l'arbre officiel pour avoir les versions des
paquets et les correctifs de bogues les plus récents.  Vous pouvez mettre a
jour l'arbre Portage à l'aide de la commande suivante&nbsp;:
</p>

<pre caption = "Mise à jour de l'arbre Portage">
# <i>emerge sync</i>
</pre>

<p>
La méthode de mise à jour d'emerge peut être changée. Voir <e>l'option SYNC</e>
dans le chapitre <e>Les fichiers de configuration de Portage</e> pour de plus
amples informations.
</p>

</body>
</section>
<section>
<title>Installation de paquets</title>
<body>

<p>
L'action par laquelle un paquet est compilé à l'aide de Portage est appelée, en
anglais, «&nbsp;<b>merge</b>&nbsp;». Portage compile les paquets et les
installe temporairement dans un répertoire «&nbsp;image&nbsp;» où il enregistre
les fichiers qui vont être installés. Ces fichiers sont ensuite déplacés du
répertoire image et installés dans le vrai système de fichier /.
</p>

<p>
La commande <c>emerge</c> est une interface pour le système Portage.
L'installation et la désinstallation de paquets est faite à l'aide de cette
commande et de ses nombreux arguments.
</p>

<p>
Pour installer la version la plus récente d'un paquet qui ne soit pas masquée,
spécifier simplement son nom comme ceci&nbsp;:
</p>

<pre caption = "Installation d'un paquet">
# <i>emerge galeon</i>
</pre>

<p>
La commande va compiler et installer toutes les dépendances nécessaires (en
prenant en compte la variable USE). Elle va ensuite compiler et installer la
version non-masquée la plus récente de galeon. Galeon aurait pu être référencé
à l'aide de son nom et de sa catégorie&nbsp;: <c>net-www/galeon</c>.
</p>

<p>
La commande <c>emerge</c> accepte aussi en argument le chemin du fichier ebuild
lui-même. Ceci permet aux utilisateurs d'installer d'anciennes versions de
paquets mais aussi des paquets n'étant pas inclus dans l'arbre Portage. Notez
que cette méthode ne tient pas compte du masquage éventuel du paquet ni du
paramètre <b>ACCEPT_KEYWORDS</b>. Voici un exemple d'utilisation de cette
fonctionnalité&nbsp;:
</p>

<pre caption = "Installer un ebuild spécifique">
# <i>emerge /usr/portage/net-www/galeon/galeon-1.2.0-r3.ebuild</i>
</pre>

<p>
<c>emerge</c> reconnaît, en plus des noms de paquets (ebuilds) à installer,
plusieurs options de ligne de commande très utiles. De celles-ci,
<c>--pretend</c>, est peut-être la plus intéressante. Quand elle est utilisée,
l'action demandée n'est pas effectuée. Au lieu de cela, Portage affiche une
liste de paquets qui seraient installés ou mis à jour si l'action était
effectuée. L'exemple suivant montre ce qui serait installé pour la dernière
version du paquet kdevelop&nbsp;:
</p>

<pre caption = "Vérifier ce que emerge va faire">
# <i>emerge --pretend kdevelop</i>

These are the packages that I would merge, in order.

Calculating dependencies ...done!
[ebuild  N   ] kde-base/kdelibs-2.2.2-r4 to /
[ebuild  N   ] dev-util/kdbg-1.2.2 to /
[ebuild   U  ] app-text/psutils-1.17 to /
[ebuild   U  ] app-text/a2ps-4.13b-r3 to /
[ebuild   U  ] app-text/jadetex-2.20 to /
[ebuild  N   ] app-text/sgmltools-lite-3.0.3-r2 to /
[ebuild  N   ] kde-base/kdoc-2.2.2-r1 to /
[ebuild  N   ] net-www/htdig-3.1.5-r2 to /
[ebuild  N   ] app-text/enscript-1.6.3-r1 to /
[ebuild  N   ] kde-base/kdebase-2.2.2-r2 to /
[ebuild  N   ] app-doc/qt-docs-2.3.1 to /
[ebuild  N   ] dev-util/kdevelop-2.0.2 to /
</pre>

<p>
Dans l'exemple ci-dessus, les paquets marqués d'un <b>N</b> (new) sont les
paquets qui n'ont pas été installés et qui seraient installés avec cette
commande. Les paquets marqués d'un <b>U</b> (upgrade) sont ceux pour lesquels
une version plus ancienne a déjà été installée, version qui serait mise à jour
par cette commande.
</p>

<p>
Les autres arguments disponibles sont&nbsp;:
</p>

<p>
<b>--fetchonly</b>&nbsp;: Télécharge seulement les archives nécessaires à la
compilation du paquet et de ses dépendances.
</p>

<p>
<b>--emptytree</b>&nbsp;: Cette option dit à Portage de supposer qu'aucune des
dépendances de ce paquet ou des paquets dont il dépend sont déjà installées.
Ceci est utile avec <b>--pretend</b> pour afficher l'arbre complet des
dépendances d'un paquet particulier.
</p>

<p>
<b>--nodeps</b>&nbsp;: Portage tente d'installer uniquement le paquet spécifié
et ignore les dépendances. Si les dépendances ne sont pas déjà installées, la
compilation peut échouer.
</p>

<p>
<b>--onlydeps</b>&nbsp;: Seules les dépendances du paquet sont installées. Le
paquet spécifié n'est <e>pas</e> installé.
</p>

<p>
<b>--noreplace</b>&nbsp;: Passe l'installation d'un paquet s'il est déjà
installé.  
</p>

<p>
<b>--usepkg</b>&nbsp;: Au lieu de compiler le paquet particulier, Portage tente
de trouver un paquet précompilé de format tbz2 à l'emplacement spécifié par la
variable d'environnement <b>PKGDIR</b>.
</p>

<p>
<b>--debug</b>&nbsp;: Dit à l'environnement ebuild d'être plus bavard.  C'est
utile pour les développeurs qui essaient de trouver des erreurs dans les
ebuilds.
</p>

<p>
<b>--autoclean</b>&nbsp;: Force <c>emerge</c> à nettoyer les fichiers
temporaires des répertoires de compilation avant de démarrer la compilation
d'un paquet. Portage le fait par défaut, cette option n'est utile qu'aux
développeurs qui ont désactivé ce comportement.
</p>

<p>
<b>--verbose</b>&nbsp;: Dit à <c>emerge</c> de fonctionner en mode bavard.
Utilisé de concert avec <b>--pretend</b>, il affiche la valeur de la variable
USE pour un paquet spécifié.
</p>

</body>
</section>
<section>
<title>Désinstallation de paquets</title>
<body>

<p>
L'action d'enlever du système de fichier les fichiers associés à un paquet est
appelée, en anglais, «&nbsp;unmerge&nbsp;». Le logiciel est retiré du système
et ne peut donc plus être utilisé jusqu'à ce qu'il soit réinstallé.
</p>

<p>
La désinstallation de paquets est réalisée grâce à la commande <c>emerge</c>
suivie de l'argument <b>unmerge</b> suivi du nom du paquet à enlever. L'exemple
suivant désinstallerait toutes les versions du paquet <c>ltrace</c>&nbsp;:
</p>

<pre caption = "Désinstaller un paquet">
# <i>emerge unmerge ltrace</i>
<comment> ou </comment>
# <i>emerge unmerge dev-util/ltrace</i>
</pre>

<p>
Portage permet aussi de spécifier des versions particulières de paquets à
désinstaller. Les intervalles sont spécifiés à l'aide de <b>=</b> (version
exacte), <b>&lt;</b> (inférieure), <b>&gt;</b> (supérieure), <b>&lt;=</b>
(inférieure ou égale) et <b>&gt;=</b> (supérieure ou égale). L'exemple suivant
désinstallerait toutes les versions du paquet ltrace égales à 0.3.15 ou plus
anciennes&nbsp;:
</p>

<pre caption = "Désinstaller une version spécifique d'un paquet">
# <i>emerge unmerge \&lt;=dev-utils/ltrace-0.3.15</i>
</pre>

<p>
Quand vous spécifiez un intervalle, il est important de mettre un \ devant
<b>&gt;</b> et <b>&lt;</b> dans la ligne de commande du shell pour que le shell
n'interprète pas ces caractères particuliers. Aussi, il vous faudra spécifier
la catégorie du paquet comme dans l'exemple. Pour un autre exemple de la façon
dont fonctionne la spécification d'intervalle référez-vous à la commande
<c>emerge --help</c>
</p>

<warn>
Désinstaller un paquet peut être dangereux. Si vous enlevez un paquet
essentiel, le système pourra arrêter de fonctionner et l'effacement de
nombreuses bibliothèques peuvent causer le mauvais fonctionnement de logiciels.
<b>Portage ne vous préviendra pas si vous effacez un paquet essentiel au
système ou une dépendance d'un autre paquet.</b>
</warn>

<p>
Si le paquet à enlever est installé, le programme emerge va afficher le paquet
exact qui va être retiré et va attendre un nombre de secondes donné pour donner
à l'utilisateur l'opportunité d'appuyer sur Control-C pour annuler l'action.
</p>

<p>
Une fois que l'opération commence, vous verrez une longue liste de noms de
fichiers appartenant au paquet affiché. Certains de ces noms de fichier seront
accompagnés d'un drapeau («&nbsp;flag&nbsp;») à leur gauche. Les drapeaux
<b>!mtime</b>, <b>!empty</b>, et <b>cfgpro</b> spécifient la raison pour
laquelle certains fichiers ne sont pas enlevés lors de l'effacement du paquet
du système. Les fichiers listés sans ces drapeaux sont effacés du système.
</p>

<p>
<b>!mtime</b> signifie que le fichier a été modifié après l'installation de la
version du paquet spécifiée. Cela signifie que quelqu'un a édité ce fichier
après l'installation du paquet, ou qu'un autre paquet a écrasé ce fichier après
lui. Cela permet aux paquets d'être mis à jour en s'assurant que la
désintallation d'une version plus ancienne n'efface pas de fichiers essentiels.
</p>

<p>
<b>!empty</b> indique un répertoire que Portage refuse d'effacer parce qu'il
n'est pas vide (plusieurs paquets prétendent souvent posséder un même
répertoire). La protection de fichier entre en jeu quand vous voyez le drapeau
(«&nbsp;flag&nbsp;») <b>cfgpro</b>. Cela signifie qu'un paquet plus récent
prétend posséder ce fichier de configuration et Portage refuse de l'effacer.
</p>

<warn>
Les fichiers sont considérés comme possédés par le dernier paquet installé.
Cela dépend donc de l'ordre d'installation des paquets et non pas des numéros
de version des paquets. Effacer la version la plus récemment installée qui
prétend posséder un certain fichier effacera toujours le fichier même si un
paquet plus vieux a installé ce fichier auparavant (en supposant que
l'utilisateur n'ait pas modifié le fichier).
</warn>
  
</body>
</section>
<section>
<title>Mises à jour du système</title>
<body>

<p>
Portage est capable de mettre automatiquement à jour les paquets installés à
l'aide d'une seule commande. La fonctionnalité de mise à jour du système permet
aux utilisateurs de mettre à jour les paquets «&nbsp;centraux&nbsp;» afin
d'utiliser les versions recommandées par les développeurs du système Gentoo
Linux. Une mise à jour système ne met pas les paquets non essentiels à jour,
mais seulement les paquets considérés essentiels, par le profil Portage, au bon
fonctionnement et à la maintenance du système.
</p>

<p>
Pour effectuer une mise à jour du système, lancez la commande&nbsp;:
</p>

<pre caption = "Mettre votre système à jour">
# <i>emerge --update system</i>
</pre>

<p>
Portage va alors compiler et installer les mises à jour en fonction des
versions des paquets qui sont installés sur votre système et en fonction de ce
qui est recommandé par le profil Portage actuel. Les utilisateurs peuvent
utiliser <b>--pretend</b> avec l'exemple précédent pour avoir la liste de ce
qui serait installé ou modifié avec cette action.
</p>

<note>
Vous remarquerez dans les intructions d'installation qu'une des étapes est
d'exécuter <c>emerge system</c> pour installer tous les paquets de base (ou
«&nbsp;centraux&nbsp;»). <c>emerge --update system</c> met à jour ces paquets à
la dernière version recommandée.
</note>

</body>
</section>
<section>
<title>Mise à jour «&nbsp;world&nbsp;»</title>
<body>

<p>
Portage permet aussi de mettre à jour automatiquement les paquets
non-essentiels avec une seule commande. Le système Portage a été conçu avec une
certaine forme d'intelligence pour permettre la mise à jour sûre d'un système
où plusieurs versions de paquets conflictuels peuvent être disponibles.
</p>

<p>
La capacité de mise à jour «&nbsp;world&nbsp;» vérifie le profil système, la
liste de paquet bloqués (<path>package.mask</path>), le profil
«&nbsp;world&nbsp;» et les dépendances (avec les intervalles de versions) de
paquets listés dans le profil «&nbsp;world&nbsp;» pour déterminer quels paquets
ont besoin d'être mis à jour. Un paquet n'est mis à jour que si une nouvelle
version existe et que le paquet est listé dans le profil «&nbsp;world&nbsp;»,
ou s'il est une dépendance d'un paquet dans le profil «&nbsp;world&nbsp;». En
plus, le paquet ou la version spécifique du paquet ne doit pas être bloqué par
le profil système ou dans <path>package.mask</path>.
</p>

<p>
Quand il détermine les paquets à mettre à jour, Portage essaie de mettre à jour
tous les paquets mentionnés dans le profil «&nbsp;world&nbsp;» pour utiliser la
version la plus récente qui ne soit pas bloquée. Portage considère également
les dépendances de chaque paquet mentionné dans le profil «&nbsp;world&nbsp;»
et essaiera de mettre à jour les dépendances si des versions plus récentes sont
disponibles, si ces versions correspondent à l'intervalle de version spécifié
et si elles ne sont pas bloquées dans le profil système ou dans
<path>package.mask</path>. Portage prend également en considération les
<b>SLOTS</b>, comme mentionné dans un chapitre précédent.
</p>

<p>
Les utilisateurs qui connaissent d'autres distributions et d'autres méthodes de
paquetage en plus de Portage, peuvent trouver étrange que Portage ne mette pas
bêtement à jour en fonction des numéros de version (ce que faisait Gentoo 1.0).
Plusieurs paquets inclus dans l'arbre de Portage ont plusieurs versions
disponibles. Une version plus ancienne ou plus récente d'un paquet peut être
incompatible avec un logiciel qui dépend de lui. Mettre bêtement à jour les
bibliothèques et les outils sans prendre en compte les besoin d'autres paquets
peut rapidement causer des dommages importants. Pour éviter ceci, Portage
essaie de prendre ces besoins en compte quand il met à jour des paquets et
considère les besoins de chaque paquet mis à jour en fonctions des informations
trouvées dans chaque ebuild.
</p>

<p>
Le cœur de la mise à jour «&nbsp;world&nbsp;» de Portage est le profil
«&nbsp;world&nbsp;». Au contraire du profil système qui est habituellement
défini par les développeurs et jamais modifié par les utilisateurs, le profil
«&nbsp;world&nbsp;» est généré indirectement au cours du temps en fonction des
actions de l'utilisateur.  Le profil «&nbsp;world&nbsp;» est plus ou moins une
liste de «&nbsp;favoris&nbsp;». Les paquets installés manuellement par
l'utilisateur grâce à la commande <c>emerge</c> sont enregistrés dans le
fichier <path>world</path> situé dans <path>/var/cache/edb/world</path>.
Portage suppose que comme vous avez fait l'effort de lui dire d'installer ce
paquet vous avez certainement un intérêt à ce qu'il soit maintenu à jour.
</p>

<p>
Le fichier <path>world</path> consiste en une liste de noms de paquets avec
leur catégorie, un par ligne, et peut ressembler à ceci&nbsp;:
</p>

<pre caption="Un exemple du contenu de /var/cache/edb/world">
net-im/gaim
net-www/skipstone
net-www/galeon
app-editors/vim
app-text/ispell
net-mail/evolution
dev-util/ltrace
sys-apps/xfsprogs
sys-apps/attr
sys-apps/dmapi
sys-kernel/linux-sources
sys-apps/acl
app-office/gnucash
app-cdr/xcdroast
</pre>

<p>
La plupart des entrées de ce fichier d'exemple ont été ajoutées automatiquement
par Portage quand l'utilisateur a installé manuellement les paquets spécifiés.
Ces paquets seront mis à jour si une nouvelle version est disponible.
</p>

<note>
Pour vous économiser du temps et vous assurer que vos paquets préférés sont mis
à jour, vous pouvez éditer manuellement le fichier <path>world</path> et
ajouter les entrées pour ces paquets. Les utilisateurs qui mettent à jour une
vieille version de Portage pouront avoir besoin d'ajouter des choses dans ce
fichier. Les installations plus récentes de Gentoo et Portage s'occupent de le
remplir à l'installation.
</note>

<p>
Une mise à jour de type «&nbsp;world&nbsp;» s'effectue de la façon
suivante&nbsp;:
</p>

<pre caption="Mettre tout à jour">
# <i>emerge --update world</i>
</pre>

<p>
Portage va alors essayer de mettre à jour tous les paquets mentionnés dans le
fichier <b>world</b> et va mettre à jour toutes les dépendances si besoin est.
Les dépendances sont mises à jour à la version la plus récente disponible qui
satisfait les besoins du paquet à mettre à jour. Les paquets qui ne sont pas
listés dans <b>world</b> et qui ne sont pas des dépendances des paquets cités
ci-dessus ne sont pas mis à jour.
</p>

<p>
Si <c>emerge</c> indique qu'il va installer une version antérieure d'un paquet
et que vous voulez l'en empêcher, utilisez <c>--upgradeonly</c>&nbsp;:
</p>

<pre caption="Mettre à jour uniquement par des versions postérieures">
# <i>emerge --upgradeonly world</i>
</pre>

<warn>
Portage n'écrasera pas les fichiers de configuration se trouvant dans des
répertoires protégés. Vous devrez adapter manuellement votre configuration
actuelle à la nouvelle version que Portage sauvegarde pour vous. Si vous ne
mettez pas à jour vos fichier de configuration, vos logiciels installés peuvent
s'arrêter de fonctionner. Référez-vous à <e>Protection des fichiers de
fonfiguration</e> dans le chapitre <e>Configurer Portage</e> ou utilisez la
commande <c>emerge --help config</c> pour plus d'informations.
</warn> 

<p>
Pour connaître la liste de ce qui serait mis à jour ou installé pendant une
mise à jour «&nbsp;world&nbsp;», utilisez l'option <b>--pretend</b> comme
mentionné dans les sections précédentes de ce chapitre.
</p>

<note>
Une mise à jour «&nbsp;world&nbsp;» effectue automatiquement une mise à jour
système.
</note>

<p>
Un effet secondaire intéressant est la façon dont la mise à jour
«&nbsp;world&nbsp;» peut être exploitée par les utilisateurs souhaitant
recompiler tous les logiciels installés sur le système. Comme la mise à jour
world va essayer de mettre à jour tous les paquets mentionnés dans le fichier
<path>world</path> et leur dépendances, l'utilisation de l'argument
<b>--emptytree</b> est une façon de forcer la recompilation de ces paquets
ainsi que de chaque dépendance. Ceci peut être utile pour les utilisateurs
souhaitant changer les options du compilateur ou un mot-clef USE et qui veulent
que ces modifications soient utilisées par tous les logiciels qu'ils utilisent
sans réinstaller manuellement tous les paquets. Il suffit de remplir le fichier
<path>world</path> avec toutes vos applications utilisées régulièrement et de
lancer la commande suivante&nbsp;:
</p>

<pre caption = "Recompiler également toutes les dépendances">
# <i>emerge --update world --emptytree</i>
</pre>

<p>
Vous pouvez ajouter l'argument <b>--pretend</b> à cette commande
pour avoir la liste des paquets qui seraient recompilés par cette
commande.
</p>
  
</body>
</section>
<section>
<title>Nettoyage du système</title>
<body>

<p>
Portage permet l'installation de plusieurs versions du même paquet sans
provoquer de conflit. Il y a quelques paquets dans l'arbre de Portage de Gentoo
qui utilisent cette fonctionnalité (pour la compatibilité descendante puisque
de vieux logiciels peuvent être incompatibles avec une version plus récente
d'un autre paquet).
</p>

<p>
Dans la plupart des cas, quand une version plus récente d'un paquet est
installé, la plupart des fichiers de l'ancien paquet sont écrasés et il ne
reste que quelques fichiers de documentation et autres fichiers sans importance
quant au fonctionnement du système. Au fil du temps ces résidus peuvent
s'accumuler et gâcher un espace disque précieux.
</p>

<p>
Pour éviter ceci, Portage propose une façon simple d'effacer les traces des
anciennes versions d'un système. Cette fonctionnalité est appelée à l'aide de
l'option <b>clean</b> et peut être lancée avec la commande suivante&nbsp;:
</p>

<pre caption = "Retirer les vieilles versions des paquets" >
# <i>emerge clean</i>
</pre>

<p>
<c>emerge</c> va alors afficher une liste de révisions et de versions à effacer
ainsi que les versions qui seront conservées, et permettre à l'utilisateur
d'annuler en appuyant sur Contrôle-C.  Sur un système typique très actif, une
longue liste de fichiers ayant été gardés ou enlevés sera affichée.
</p>

<p>
Sauf mention contraire, Portage suppose que l'option clean est appliquée pour
<path>world</path> (les paquets installés). Vous pouvez limiter le champ
d'action de clean en utilisant des options comme <b>world</b>, <b>system</b>,
une liste de nom de paquets ou des intervalles de paquets comme vu dans les
chapitres précédents.
</p>

<p>
Quand il détermine quelles versions des paquets doivent être désinstallées, le
système Portage exploite les profils, les besoins d'autres paquets installés et
les SLOTs de paquets. En supposant que les dépendances sont définies
correctement pour tous les paquets, l'action clean va enlever de façon sûre les
paquets les plus anciens et ne devrait pas enlever quelque fonctionnalité que
ce soit ou empêcher le système de fonctionner.
</p>  

</body>
</section>
<section>
<title>Élaguer («&nbsp;to prune&nbsp;») un paquet</title>
<body>

<p>
Portage permet l'action <b>prune</b> sur un paquet. L'action
«&nbsp;prune&nbsp;» est la forme non-sûre de <b>clean</b>. Elle efface toutes
les versions de tous les paquets sauf les dernières versions installées. Elle
n'effectue aucune des vérifications que fait l'action <b>clean</b> et peut très
bien effacer un paquet essentiel au fonctionnement de votre système. Les
utilisateurs de cette action peuvent facilement empêcher leur système de
fonctionner&nbsp;; son utilisation n'est pas recommandée à part dans des
circonstances très particulières.
</p>

<p>
L'action <b>prune</b> accepte les mêmes arguments que <b>clean</b> et peut être
utilisée ainsi&nbsp;:
</p>

<pre caption = "Élaguer le système">
# <i>emerge prune</i>
</pre>

</body>
</section>
<section>
<title>Chercher dans l'arbre Portage</title>
<body>

<p>
Un arbre Portage tel que celui qui forme le cœur de la distribution Gentoo peut
devenir très grand. <c>emerge</c> permet d'effectuer des recherches à l'aide
d'une chaîne de caractères sous la forme d'une expression rationnelle entre
guillements. Les expressions rationnelles sont des créatures très compliquées
et il est donc recommandé de trouver un bon livre sur le sujet si vous êtes
intéressés et souhaitez les maîtriser pleinement.
</p>

<p>
La plupart des recherches simples peuvent cependant être effectuées sans savoir
comment écrire une expression rationnelle. Voici un exemple de recherche simple
de paquets dont le nom contient la chaîne «&nbsp;gcc&nbsp;»&nbsp;:
</p>

<pre caption = "Recherche à partir d'une expression rationnelle">
# <i>emerge search gcc</i>
</pre>

<p>
Pour chaque chaîne de caractères qui correspond, emerge affiche le nom du
paquet, la version la plus récente disponible, la version la plus récente
installée, la page Web du paquet et la description du logiciel contenu dans le
paquet.
</p>

</body>
</section>
<section>
<title>Obtenir de l'aide</title>
<body>

<p>
Davantage d'informations sur les nombreuses options d'<c>emerge</c> peuvent
être trouvées à l'aide de la commande&nbsp;:
</p>

<pre caption = "Obtenir de l'aide">
# <i>emerge --help</i>
</pre>

</body>
</section>
<section>
<title>Outils utiles</title>
<body>

<p>
Plusieurs outils qui simplifient la vie sont offerts par des utilisateurs de
Gentoo. Ces outils sont disponibles dans le paquet
<c>app-portage/gentoolkit</c> dans l'arbre Portage de Gentoo.
</p>

<ul>
  <li>
    <c>etc-update</c>&nbsp;: script shell utilisant vim pour permettre de
    fusionner les changements des fichiers de configuration de /etc (peut être
    dangereux si mal utilisé).
  </li>
  <li>
    <c>qpkg</c>&nbsp;: outil pour extraire des informations de la base de
    données de paquets
  </li>
  <li>
    <c>epm</c>&nbsp;: un autre outil similaire a qpkg mais avec une syntaxe
    proche de celle de RPM
  </li>
  <li>
    <c>etcat</c>&nbsp;: affiche et décrit le contenu de la variable USE d'un
    paquet
  </li>
  <li>
    <c>revdep-rebuild</c>&nbsp;: recompile les paquets qui ne fonctionnent plus
    suite à la mise à jour de bibliothèques dont ils dépendent
  </li>
</ul>

</body>
</section>
</chapter>
 
<chapter>
<title>Que sont les paquets masqués&nbsp;?</title>
<section>
<body>

<p>
Certains utilisateurs se demandent pourquoi un paquet nouvellement offert n'est
pas pris en compte lorsqu'ils exécutent la commande <c>emerge -u world</c>.  Un
bon exemple est xfree-4.3.0 (version au moment de l'écriture de ce manuel). Si
vous avez effectué un <c>emerge sync</c> suivi d'un <c>emerge -u world</c>,
vous ne voyez pas xfree comme candidat à la mise à jour. Pourquoi&nbsp;?
</p>

<p>
La raison est que certains paquets sont marqués comme «&nbsp;masqués&nbsp;» --
c'est-à-dire que le paquet ne sera pas automatiquement mis à jour ou
désinstallé sans action spécifique de votre part. Veuillez vous référer à la
<uri link="http://forums.gentoo.org/viewtopic.php?t=33534">FAQ des paquets
masqués</uri> dans les <uri link="http://forums.gentoo.org/">Forums Gentoo
</uri> pour savoir comment autoriser l'installation des paquets masqués.
</p>

</body>
</section>
</chapter>
</guide>

