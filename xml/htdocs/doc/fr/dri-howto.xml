<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/dri-howto.xml,v 1.1 2004/03/08 21:07:58 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/dri-howto.xml" lang="fr">
<title>Guide de l'accélération 3D matérielle</title>
<author title="Auteur">
<mail link="spyderous@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Correcteur">
<mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Traducteur">
<mail link="vincent.rubiolo@free.fr">Vincent Rubiolo</mail>
</author>

<abstract>
Ce guide vous aidera à faire fonctionner l'accélération matérielle avec
XFree-DRM et XFree86 sur Gentoo Linux.
</abstract>

<license/>

<version>1.0.2</version>
<date>20 décembre 2003</date>

<chapter>
<title>Introduction</title>
<section>
<title>Qu'est-ce que l'accélération 3D matérielle et pourquoi en
voudrais-je&nbsp;?</title>
<body>

<p>
Avec l'accélération 3D matérielle, le rendu tri-dimensionnel utilise le
processeur graphique de votre carte vidéo au lieu de consommer de précieuses
ressources processeur pour afficher des images en 3D. On appelle également cela
«&nbsp;accélération matérielle&nbsp;» par opposition à «&nbsp;accélération
logicielle&nbsp;», car sans accélération matérielle, votre processeur est
obligé de tout calculer lui-même en utilisant les bibliothèques de rendu Mesa,
ce qui consomme une quantité non négligeable de puissance. Alors qu'XFree86
supporte de façon standard l'accélération matérielle 2D, il lui manque souvent
son équivalent 3D. L'accélération 3D matérielle est appréciable dans des
situations qui requièrent le rendu d'objets 3D comme les jeux, la CAO 3D ou la
modélisation.
</p>

</body>
</section>
<section>
<title>Comment disposer de l'accélération 3D matérielle&nbsp;?</title>
<body>

<p>
Dans de nombreux cas, il existe à la fois des pilotes binaires et des pilotes
open-source. Les pilotes open-source sont préférables puisque nous utilisons
Linux et que l'open-source est l'un de ses principes sous-jacents. Parfois, les
pilotes binaires sont les seuls disponibles, comme pour les cartes nVidia. Les
pilotes binaires sont media-video/nvidia-kernel et media-video/nvidia-glx pour
les cartes nVidia, media-video/mgavideo pour les cartes Matrox et
media-video/ati-drivers pour les cartes ATI. D'autres pilotes open-source sont
media-video/kyro-kernel pour les cartes KyroII et media-video/ati-gatos qui
essaie de supporter les capacités vidéo des cartes ATI de façon plus complète.
</p>

</body>
</section>
<section>
<title>Qu'est-ce que DRI&nbsp;?</title>
<body>

<p>
L'Infrastructure de Rendu Direct (<uri
link="http://dri.sourceforge.net">dri.sourceforge.net</uri>), aussi connu sous
le nom de DRI (Direct Rendering Infrastructure) est un framework qui permet
d'accéder aux fonctions matérielles des cartes graphiques de manière sûre et
efficace. Il inclut des changements au serveur X, à plusieurs bibliothèques
clientes et au noyau. La première grande utilisation de DRI est la création
d'implémentations rapides d'OpenGL.
</p>

</body>
</section>
<section>
<title>Qu'est-ce que XFree-DRM et quelle est sa relation avec l'XFree86 normal&nbsp;?</title>
<body>

<p>
XFree-DRM est une <e>amélioration</e> d'XFree86 qui ajoute l'accélération 3D
aux cartes en fournissant le module noyau nécessaire au Rendu Direct.
</p>

</body>
</section>
<section>
<title>Objectif</title>
<body>

<p>
Ce guide est destiné aux personnes qui ne peuvent faire fonctionner le
Rendu Direct avec seulement XFree. XFree-DRM fonctionne pour les
pilotes 3dfx, gamma, i8x0, matrox, rage128, radeon, mach64 (pour
xfree-drm-4.3.0-r7) et pour la série des sis300. Puisque le
gestionnaire DRI (DRM - Direct Rendering Manager) des noyaux 2.4 ne
supporte pas XFree 4.3, le paquet xfree-drm est requis. Si vous
utilisez un noyau 2.6, son gestionnaire DRI supporte XFree 4.3 (le
paquet XFree-DRM Gentoo ne fonctionne pas encore sur les noyaux
2.6). Visitez le <uri link="http://dri.sourceforge.net">site DRI</uri>
pour plus d'informations et de documentation.
</p>

</body>
</section>
<section>
<title>Retour d'expériences</title>
<body>

<p>
Envoyez vos suggestions ou questions à <mail
link="spyderous@gentoo.org">Donnie Berkholz</mail>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installez XFree86 et configurez votre noyau</title>
<section>
<title>Installez XFree86</title>
<body>

<pre caption="Installation d'XFree86">
# <i>emerge x11-base/xfree</i>
</pre>

</body>
</section>
<section>
<title>Configurez votre noyau</title>
<body>

<p>
Trouvez le nom/modèle de votre jeu de composants (chipset) et activez seulement celui-ci.
</p>

<pre caption="Trouvez le nom/modèle de votre jeu de composants AGP">
# <i>emerge pciutils; lspci | grep AGP</i>
# 00:01.0 PCI bridge: Intel Corp. 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge (rev 03)
<codenote>L'affichage sera probablement différent pour votre matériel.</codenote>
</pre>

<p>
La plupart des noyaux, sinon tous, devraient avoir ces options. Ceci a été
configuré en utilisant gentoo-sources-2.4.20-r5.
</p>

<pre caption="Configuration du noyau">
# <i>ls -l /usr/src/linux </i>
lrwxrwxrwx    1 root     root           22 May 29 18:20 /usr/src/linux -> linux-2.4.20-gentoo-r5
<codenote>Faites en sorte que <path>/usr/src/linux</path> pointe vers votre noyau.</codenote>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<pre caption="Les options de make menuconfig">
Processor type and features ---&gt;
&lt;*&gt; MTRR (Memory Type Range Register) support
Character devices ---&gt;
&lt;M&gt; /dev/agpgart (AGP Support)
[*] Intel 440LX/BX/GX and I815/I820/I830M/I830MP/I840/I845/I850/I860 support
<codenote>Activez le support de votre jeu de composants au lieu de celui-ci.</codenote>
[ ] Direct Rendering Manager (XFree86 DRI support)
</pre>

<p>
Soyez sûr que le gestionnaire DRI (DRM - Direct Rendering Manager)
est <e>désactivé</e>. Le paquet XFree-DRM fournira le sien. En effet, celui du
noyau 2.4 ne fonctionne qu'avec XFree 4.2.
</p>

</body>
</section>
<section>
<title>Compilez et installez votre noyau</title>
<body>

<pre caption="Compilation et installation noyau">
# <i>make dep &amp;&amp; make clean bzImage modules modules_install</i>
# <i>mount /boot</i>
# <i>cp arch/i386/boot/bzImage /boot</i>
</pre>

<p>
Si vous souhaitez nommer votre noyau autrement, faites en sorte de le
copier vers /boot/VotreNom à la place. N'oubliez pas de configurer
votre fichier grub.conf ou lilo.conf et de lancer /sbin/lilo ensuite
si vous utilisez LILO.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installez XFree-DRM et configurez le Rendu Direct</title>
<section>
<title>Installez XFree-DRM</title>
<body>

<pre caption="Installation d'XFree-DRM">
# <i>ACCEPT_KEYWORDS="~x86" emerge xfree-drm</i>
</pre>

</body>
</section>
<section>
<title>Configurez XF86Config</title>
<body>

<p>
Ouvrez <path>/etc/X11/XF86Config</path> et modifiez-le pour activer DRI et GLX.
</p>

<pre caption="Extrait du fichier XF86Config">
...
Section "Module"
  Load "dri"
  Load "glx"
  ...
EndSection
...
Section "Device"
  Driver "radeon"
  ...
EndSection
...
Section "dri"
  Mode 0666
EndSection
</pre>

<p>
Si vous utilisez un autre pilote, remplacez "radeon" par le vôtre.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Testez l'accélération 3D</title>
<section>
<title>Redémarrez avec votre nouveau noyau</title>
<body>

<p>
Redémarrez avec votre nouveau noyau. Il est temps de voir si vous disposez du
Rendu Direct et quel en est le bénéfice.  
</p>

<pre caption="Test du rendu">
# <i>startx</i>
<codenote>Inutile de charger les modules pour votre pilote ou pour agpgart si vous avez compilé agpgart comme module.</codenote>
<codenote>Ils seront chargés automatiquement.</codenote>
# <i>glxinfo | grep rendering</i>
direct rendering: Yes
<codenote>S'il est indiqué "No", vous ne disposez pas de l'accélération 3D.</codenote>

# <i>glxgears</i>
<codenote>Testez votre nombre de trames par secondes (FPS - Frames Per Second) pour la taille par défaut.</codenote>
<codenote>Le nombre devrait être significativement plus élevé qu'avant l'installation d'xfree-drm.</codenote>
<codenote>Faites ce test lorsque le processeur est en train de faire le moins de traitements possibles.</codenote>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Utiliser les sources CVS</title>
<section>
<body>

<warn>
Ne faites pas cela si le paquet fonctionne bien.
</warn>

<note>
De par leur nature, les sources CVS changent constamment. Votre configuration
peut ne pas être exactement comme celle indiquée ci-dessous.
</note>

</body>
</section>
<section>
<title>Avez-vous besoin des sources CVS&nbsp;?</title>
<body>

<p>
En premier lieu, vous devez vérifier si le paquet xfree-drm fonctionne. Si ce
n'est pas le cas et que vous avez regardé vos journaux (logs) pour vous assurer
qu'il n'y a pas d'erreur de configuration, vous pouvez considérer l'utilisation
des sources CVS. Il existe aussi des images quotidiennes des pilotes si vous ne
souhaitez pas compiler tout le CVS.
</p>

</body>
</section>
<section>
<title>Les sources CVS supportent-elles votre carte&nbsp;?</title>
<body>

<p>
Vérifiez la liste DRI des <uri
link="http://dri.sourceforge.net/dri_status.phtml">cartes supportées</uri> pour
voir si le CVS supporte votre carte. Même si ce n'est pas le cas, mais qu'il
supporte une carte similaire, essayez quand même.
</p>

<warn>
« Linux 2.4 ne supporte pas l'AGP 8x. J'ai donc dû trouver une adaptation
rétroapplicable (backport). Elle marche... elle ne patche pas très correctement
et elle requiert la version 2.4.21 (j'ai seulement réussi à la faire marcher
avec les sources vanilla, directement depuis l'archive tarball (pas depuis
l'ebuild)). D'abord, allez récupérer le patch 2.4.20-2.4.21 sur kernel.org...
Ensuite trouvez le patch : il était sur une liste de diffusion quelque part. Il
ne patche pas proprement &#45;&nbsp;un fichier est refusé, pci_ids.h&nbsp;&#45;
mais si vous regardez le fichier et la liste des rejets, il est très facile de
régler le problème. Le pilote se charge cependant et me donne du 1600x1200 avec
la video (même si c'est un peu lent à cause du manque de dga) et
xfree-drm.&nbsp;»
(SanityInAnarchy sur #gentoo)
</warn>

<impo>
Le patch est un peu compliqué à faire fonctionner, mais <uri
link="http://www.ussg.iu.edu/hypermail/linux/kernel/0302.2/att-1618/01-agp3.diff.bz2">voici
le lien</uri>. Si vous pouvez désactiver l'AGP 8X dans votre BIOS,
réglez-le à 4X et vous n'aurez peut-être pas besoin du patch.
</impo>

</body>
</section>
<section>
<title>Installez les sources CVS</title>
<body>

<p>
Suivez ce guide jusqu'à «&nbsp;Compilez et installez votre noyau&nbsp;». Continuez
ensuite ici, nous suivons l'étape 6 du <uri
link="http://dri.sourceforge.net/doc/DRIcompile.html">guide de
compilation du DRI</uri>. Enfin, allez jusqu'au point 8.3.
</p>

</body>
</section>
<section>
<title>Téléchargement CVS anonyme</title>
<body>

<p>
Créez un répertoire pour stocker les fichiers CVS.
</p>

<pre caption="Créer un répertoire pour CVS">
# <i>cd ~</i>
# <i>mkdir DRI-CVS</i>
</pre>

<p>
Sortez les sources du CVS (checkout).
</p>

<pre caption="Sortir les sources CVS">
# <i>cd ~/DRI-CVS</i>
# <i>cvs -d:pserver:anonymous@cvs.dri.sourceforge.net:/cvsroot/dri login</i>
<codenote>(appuyez sur ENTRÉE lorsqu'un mot de passe vous est demandé)</codenote>
# <i>cvs -z3 -d:pserver:anonymous@cvs.dri.sourceforge.net:/cvsroot/dri co xc</i>
<codenote>L'option -z3 fait en sorte que la compression soit utilisée pour réduire le temps de téléchargement.</codenote>
</pre>

</body>
</section>
<section>
<title>Mettez vos sources CVS à jour</title>
<body>

<p>
Plus tard, vous voudrez sans doute mettre à jour votre copie locale des sources
DRI pour obtenir les dernières modifications Ce peut être fait grâce à&nbsp;:
</p>

<pre caption="Mettre votre copie locale à jour">
# <i>cd ~/DRI-CVS</i>
# <i>cvs -z3 update -dA xc</i>
<codenote>L'option -d fait en sorte que les sous-répertoires soient créés.</codenote>
<codenote>L'option -A fait en sorte que les sources principales soient téléchargées, pas les branches.</codenote>
</pre>

</body>
</section>
<section>
<title>Créez une arborescence de compilation</title>
<body>

<p>
Plutôt que de mettre les fichiers objets et les bibliothèques directement
dans l'arborescence des sources, ils sont en réalité mis dans une
arborescence de <e>compilation</e>. Celle-ci est créée avec la
commande <c>lndir</c>.
</p>

<pre caption="Créer l'arborescence de compilation parallèle">
# <i>cd ~/DRI-CVS</i>
# <i>ln -s xc XFree40</i>
# <i>mkdir build; cd build</i>
# <i>lndir -silent -ignorelinks ../XFree40</i>
</pre>

<p>
L'arborescence de compilation sera remplie avec des liens symboliques
qui pointent vers l'arborescence des sources CVS. Les utilisateurs
avancés peuvent ainsi avoir plusieurs arborescences pour compiler et
tester avec des options différentes.
</p>

</body>
</section>
<section>
<title>Modification du fichier host.def</title>
<body>

<p>
Le fichier <path>~/DRI-CVS/build/xc/config/cf/host.def</path> est
utilisé pour configurer la compilaton de XFree86. Vous pouvez le
changer pour adapter vos options de compilation ou faire des
ajustements spécifiques à votre configuration système. Le fichier
host.def par défaut ressemble à ceci&nbsp;:
</p>

<pre caption="host.def">
#define DefaultCCOptions -Wall
<codenote>Pour i386:</codenote>
#define DefaultGcc2i386Opt -O2
<codenote>Pour Alpha:</codenote>
#define DefaultGcc2AxpOpt -O2 -mcpu=ev6 (ou similaire)
<codenote>Pour toutes les architectures</codenote>
#define LibraryCDebugFlags -O2
#define BuildServersOnly YES
#define XF86CardDrivers vga tdfx mga ati i810
#define LinuxDistribution LinuxRedHat
#define DefaultCCOptions -ansi GccWarningOptions -pipe
#define BuildXF86DRI YES
/* Optionally turn these on for debugging */
/* #define GlxBuiltInTdfx YES */
/* #define GlxBuiltInMga YES */
/* #define GlxBuiltInR128 YES */
/* #define GlxBuiltInRadeon YES */
/* #define DoLoadableServer NO */
#define SharedLibFont NO
</pre>

<pre caption="host.def, la suite">
<codenote>Regardez la ligne XF86CardDrivers pour être sûr que votre carte est listée.</codenote>
<codenote>Si vous souhaitez activer les optimisations 3DNow! dans Mesa et
dans les pilotes DRI, vous devriez ajouter ceci :</codenote>
#define MesaUse3DNow YES
<codenote>Vous ne devez pas forcément utiliser un processeur AMD</codenote>
<codenote>pour pouvoir activer cette option.</codenote>
<codenote>Le DRI regardera si le support du 3DNow! est disponible</codenote>
<codenote>au moment de l'exécution et l'activera si possible.</codenote>
</pre>

<p>
Si vous souhaitez activer les optimisations SSE dans Mesa et dans DRI, vous
devez mettre à jour votre noyau vers la version 2.4.x. Mesa vérifiera si SSE
est supporté par votre processeur et votre système d'exploitation, mais, pour
compiler Mesa à l'intérieur de DRI, vous devez avoir les en-têtes du noyau
Linux 2.4.x dans <path>/usr/src/linux</path>. Si vous activez les optimisations
SSE avec une version plus ancienne du noyau Linux dans
<path>/usr/src/linux</path>, Mesa ne compilera pas. Vous aurez été prévenu. Si
vous avez bien un noyau 2.4.x, vous devriez ajouter ceci&nbsp;:
</p>

<pre caption="Mettre host.def à jour">
#define MesaUseKatmai YES
</pre>

</body>
</section>
<section>
<title>Compilez l'arborescence XFree86-DRI</title>
<body>

<p>
Pour compiler l'arborescence DRI complète, faites&nbsp;:
</p>

<pre caption="Compiler l'arborescence DRI">
# <i>cd ~/DRI-CVS/build/xc/</i>
# <i>make World &gt;&amp; world.log</i>
</pre>

<p>
Il sera peut-être nécessaire de faire ce qui suit en
fonction de ce que vous avez mis dans host.def&nbsp;:
</p>

<pre caption="Etapes de compilation supplémentaires">
# <i>cd ~/DRI-CVS/build/xc/programs/Xserver/hw/xfree86/os-support/linux/drm/kernel</i>
# <i>make -f Makefile.linux radeon.o</i>
<codenote>Remplacez radeon par votre pilote.</codenote>
</pre>

<p>
Avec les options de compilation par défaut, il est normal de voir
beaucoup d'avertissements pendant la compilation. La compilation
prendra du temps&nbsp;; vous voudrez peut-être regarder vos mails ou visiter
slashdot (Ndt : ou bien linuxfr :-).
</p>

<warn>
N'utilisez pas l'option -j avec make (c-à-d. n'utilisez pas distcc). Il
a été rapporté qu'il ne fonctionne pas avec XFree86/DRI.
</warn>

<p>
Avec votre éditeur de texte, cherchez des erreurs dans le fichier
world.log indiquées par la chaîne «&nbsp;***&nbsp;».
</p>

</body>
</section>
<section>
<title>Installez les modules CVS</title>
<body>

<p>
Vérifiez que le(s) module(s) DRI du noyau ont été compilés&nbsp;:
</p>

<pre caption="Vérification">
# <i>cd ~/DRI-CVS/build/xc/programs/Xserver/hw/xfree86/os-support/linux/drm/kernel; ls</i>
</pre>

<p>
Pour la Voodoo 3dfx, vous devriez trouver <path>tdfx.o</path>. Pour
les Matrox G200/G400, il s'agit de <path>mga.o</path>. Pour les ATI
Rage128, le pilote est <path>r128.o</path>. Pour les ATI Radeon, c'est
<path>radeon.o</path>. Pour l'Intel i810, vous devriez trouver
<path>i810.o</path>. Si la compilation du(es) module(s) DRI du noyau a
échoué, vous devriez vérifier que vous utilisez la bonne arborescence
du noyau Linux. Les noyaux les plus récents ne sont pas toujours supportés.
</p>

<p>
Installez par-dessus votre installation XFree86 existante. Vous
voudrez sans doute faire une sauvegarde de XFree.
</p>

<pre caption="Sauvegarder XFree">
# <i>quickpkg xfree</i>
<codenote>Ceci sauvegarde votre paquet XFree86.</codenote>
# <i>make install</i>
</pre>

<p>
Suivez la section "Configurez XF86Config" précédemment décrite.
</p>

<p>
Pour charger le module DRM approprié dans votre noyau, copiez le
module dans <path>/lib/modules/`uname -r`/kernel/drivers/char/drm/</path>, 
lancez <c>modules-update</c>, puis redémarrez votre serveur X. Si vous
ne voulez pas charger le module dans le noyau en cours d'exécution,
utilisez le nom du noyau plutôt que <c>uname -r</c>.
</p>

<warn>
Faites attention de bien retirer les anciens modules noyau DRI qui
pourraient être déjà chargés. Notez que certains modules DRM
requièrent que le module agpgart soit chargé en premier.
</warn>

</body>
</section>
</chapter>

<chapter>
<title>Ajustez vos réglages</title>
<section>
<title>Obtenez le maximum du Rendu Direct</title>
<body>

<p>
Quelques options peuvent améliorer les performances jusqu'à 30%
(voire plus) par rapport aux réglages par défaut. Réglez-les dans
<path>/etc/X11/XF86Config</path>.
</p>

<pre caption="Extrait du fichier XF86Config">
Section "Device"
  Option     "AGPMode" "4"
  <codenote>Ceci a augmenté les trames par seconde (FPS) de 609 à 618.</codenote>
  Option     "AGPFastWrite" "True"
  <codenote>Ceci n'a pas eu d'effet mesurable, mais peut accroître l'instabilité de votre ordinateur.</codenote>
  <codenote>Vous pourriez avoir également besoin de le régler dans votre BIOS.</codenote>
  Option     "EnablePageFlip" "True"
  <codenote>Ceci a augmenté les trames par seconde (FPS) de 618 à 702.</codenote>
  <codenote>C'est également "risqué" mais peu de personnes ont eu des problèmes.</codenote>
  ...
EndSection
</pre>

<p>
Si vous souhaitez régler encore plus de détails, regardez la <uri
link="http://dri.sourceforge.net/doc/dri_driver_features.phtml">liste
des possibilités</uri> sur le site du DRI.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Dépannage</title>
<section>
<title>Cela ne fonctionne pas. J'ai juste recompilé mon noyau ou en ai pris un nouveau.</title>
<body>

<p>
A chaque fois que vous recompilez votre noyau ou en prenez un nouveau,
vous devez recompiler le module noyau. Notez que vous n'avez
pas besoin d'installer à nouveau xfree mais vous devez par contre
réinstaller xfree-drm.
</p>

</body>
</section>

<section>
<title>Cela ne fonctionne pas. Je n'ai pas de DRI et ne peux expliquer pourquoi.</title>
<body>

<p>
Essayez <c>insmod radeon</c> avant de démarrer le serveur X. Essayez
aussi de compiler agpgart directement dans le noyau au lieu d'un
module.
</p>

</body>
</section>
<section>
<title>Quand je lance <c>startx</c>, j'ai cette erreur&nbsp;: «&nbsp;[drm] failed to load kernel module agpgart&nbsp;»</title>
<body>

<p>
C'est parce que vous avez compilé agpgart dans le noyau au lieu de le
mettre en module. Ignorez ce message sauf si vous avez des problèmes.
</p>

</body>
</section>
<section>
<title>Le Rendu Direct ne marche pas et j'ai une erreur dans
<path>/var/log/XFree86.0.log</path> à propos d'une version de pilote
trop ancienne.</title>
<body>

<p>
Vous n'êtes pas en train d'utiliser le pilote xfree-drm. Vérifiez si
vous avez compilé DRM et le pilote dans le noyau&nbsp;; vous ne devriez pas.
</p>

</body>
</section>
<section>
<title>J'ai une Radeon et je veux la sortie TV.</title>
<body>

<p>
Jetez un œil aux pilotes ati-gatos (<c>emerge -s gatos</c>) .
</p>

</body>
</section>
<section>
<title>Cela ne fonctionne pas. Ma carte est tellement nouvelle qu'elle n'est pas supportée du tout&nbsp;!</title>
<body>

<p>
Essayez les pilotes binaires. Pour les pilotes ati-drivers, une liste
est disponible sur
<uri>http://www.schneider-digital.de/html/download_ati.html</uri>. S'ils
ne supportent pas votre carte, utilisez fbdev. C'est lent, mais ça marche.
</p>

</body>
</section>
<section>
<title>J'ai une carte PCI et cela ne fonctionne pas. A l'aide&nbsp;!</title>
<body>

<p>
Dans la section «&nbsp;Device&nbsp;», activez ForcePCIMode.
</p>

<pre caption="Activer de l'option ForcePCIMode">
Option "ForcePCIMode" "True"
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Remerciements</title>
<section>
<body>

<ol>
  <li>
    Christopher Webber qui a suggéré une question de dépannage 
    à propos du changement et de la recompilation des noyaux.
  </li>
  <li>
    Steve qui a suggéré la consistance entre dri et DRI dans 
    XF86Config.
  </li>
</ol>

</body>
</section>
</chapter>

<chapter>
<title>Références</title>
<section>
<body>

<ol>
  <li>http://forums.gentoo.org/viewtopic.php?t=46681</li>
  <li>http://forums.gentoo.org/viewtopic.php?t=29264</li>
  <li>http://dri.sourceforge.net/</li>
  <li>http://www.retinalburn.net/linux/dri_status.html</li>
</ol>

</body>
</section>
</chapter>
</guide>
