<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/selinux-uml-guide.xml,v 1.3 2004/10/07 15:56:17 neysx Exp $ -->

<guide link="/doc/fr/selinux-uml-guide.xml" lang="fr">
<title>Guide pour SELinux dans un environnement User-Mode avec Gentoo</title>

<author title="Auteur">
 <mail link="dimiduk.1@osu.edu">Nick Dimiduk</mail>
</author>
<author title="Auteur">
 <mail link="mark.robinson@stdc.com">Mark Robinson</mail>
</author>
<author title="Correcteur">
 <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Traducteur">
 <mail link="cam@gentoo.org">Camille Huot</mail>
</author>

<abstract>
Ce guide explique comment mettre en place une installation de SELinux en mode
utilisateur (en utilisant User-Mode Linux).
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->
<license/>

<version>0.3</version>
<date>7 mars 2004</date>

<chapter>
<title>Avant de commencer</title>
<section>
<title>Que contient ce document&nbsp;?</title>
<body>

<p>
Le but de ce guide est de fournir une marche à suivre pour la mise en place
d'une installation d'un système Linux en mode utilisateur sous SELinux. Il
contient des instructions, conseils, astuces et mises en garde contre les
pièges possibles. Une fois arrivé à la fin de ce guide, vous aurez un système
SELinux complètement fonctionnel qui tourne enfermé dans un Linux en mode
utilisateur (N.D.T.&nbsp;: en anglais on emploie parfois le terme
«&nbsp;jail&nbsp;» ou prison).
</p>

</body>
</section>

<section>
<title>Ce que ce document ne contient pas</title>
<body>

<p>
Ce guide n'est pas censé remplacer la documentation fournie par les projets
<uri link="http://user-mode-linux.sf.net">UML</uri> et <uri
link="http://www.nsa.gov/selinux/">SELinux</uri>. Nous vous recommandons
fortement de lire les documentations appropriées pour comprendre pleinement ce
que font réellement les commandes citées et pour comprendre les décisions que
vous aurez à prendre pendant la mise en place de l'environnement virtuel.
</p>

<p>
Ce guide n'est <e>pas</e> un tutoriel qui explique comment utiliser ou
administrer un système basé sur SELinux.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Mise en condition</title>
<!-- <title>Preparing for User-Mode SELinux</title> -->
<section>
<title>À propos de UML et SELinux</title>
<body>

<p>
Comme l'indique <uri link="http://user-mode-linux.sf.net">le site web de
User-Mode Linux</uri> (N.D.T.&nbsp;: Linux en mode utilisateur, vous l'aviez
compris, que nous abrégeons «&nbsp;UML&nbsp;» dans le reste de ce document),
UML permet de «&nbsp;faire tourner Linux dans lui-même&nbsp;». Plus en détail,
UML fournit une machine virtuelle dans laquelle un utilisateur peut
«&nbsp;faire tourner des logiciels bogués, expérimenter les tous derniers
noyaux ou distributions Linux et bidouiller dans les entrailles de Linux, le
tout sans risquer d'endommager votre installation Linux principale&nbsp;». Un
tel outil est parfait pour jouer, tester et se familiariser avec SELinux.
</p>

<p>
Le <uri
link="http://www.gentoo.org/proj/en/hardened/selinux/index.xml">sous-projet
Gentoo Hardened SELinux</uri> décrit SELinux comme un système de contrôle
obligatoire des accès qui utilise un contrôle d'accès basé sur la notion de
rôle.
</p>

</body>
</section>

<section>
<title>Construction du noyau</title>
<body>

<p>
Commencez par télécharger les sources d'UML et par configurer le noyau
correctement&nbsp;:
</p>

<pre caption="Installation, configuration et compilation du noyau">
# <i>emerge sys-kernel/usermode-sources</i>
# <i>cd /usr/src/linux-</i><comment>&lt;version&gt;</comment><i>-uml</i>
# <i>make menuconfig ARCH=um</i>
# <i>make linux ARCH=um</i>
# <i>cp linux /usr/local/bin/linux</i>
</pre>

<warn>
Le morceau <e>ARCH=um</e> est <e>extrêmement</e> important. Vous êtes averti.
</warn>

<p>
Pendant la configuration du noyau, assurez-vous d'avoir activé les
fonctionnalités suivantes&nbsp;:
</p>

<pre caption="Liste des fonctionnalités">
<comment>(Dans « Code maturity level options »)</comment>
[*] Prompt for development and/or incomplete code/drivers

<comment>(Dans « File Systems »)</comment>
[*] Second extended fs support
[*]   Ext2 extended attributes
[ ]     Ext2 POSIX Access Control Lists
[*]     Ext2 Security Labels
<comment>(Si vous voulez ext3)</comment>
[*] Ext3 journalling file system support
[*]   Ext3 extended attributes
[ ]     Ext3 POSIX Access Control Lists
[*]     Ext3 Security Labels


<comment>(Dans « File Systems --&gt; Pseudo filesystems »)</comment>
[ ] /dev file system support (OBSOLETE)
[ ]   Automatically mount at boot
[*] /dev/pts file system for Unix98 PTYs
[*]   /dev/pts Extended Attributes
[*]     /dev/pts Security Labels
[*] Virtual memory file system support (former shm fs)

<comment>(Dans « Security Options »)</comment>
[*] Enable different security models
&lt;*&gt; Capabilities Support
[*] NSA SELinux Support
[*]   NSA SELinux Development Support
</pre>

<warn>
ReiserFS et JFS ne sont pas supportés par SELinux.
</warn>

<p>
Rien d'autre ne devrait être ajouté.
</p>

</body>
</section>

<section>
<title>Outils utilisateurs</title>
<body>

<p>
Continuons en installant les outils UML.
</p>

<pre caption="Installation des outils UML">
# <i>emerge sys-apps/usermode-utilities</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Création du root_fs</title>
<section>
<title>Le chroot Gentoo</title>
<body>

<p>
Le fichier <path>root_fs</path> requis par UML est un simple fichier qui
contient un système de fichiers Linux Gentoo complet. Pour générer ce fichier,
le support du périphérique «&nbsp;loopback&nbsp;» doit être activé dans le
noyau de votre système d'accueil (pas celui avec UML).
</p>

<p>
La génération du fichier <path>root_fs</path> sera la dernière étape. Nous
allons tout d'abord générer un système de fichiers Gentoo dans un chroot
ordinaire. Téléchargez et décompactez une archive stage et démarrez
l'installation de Gentoo comme vous le feriez avec un vrai système.
</p>

<p>
Voici quelques remarques importantes concernant cette étape&nbsp;:
</p>

<ul>
  <li>
    Vous pouvez tranquillement ignorer les messages d'alertes à propos des
    modules SELinux qui ne seraient pas chargés&nbsp;; ces alertes devraient
    disparaître une fois que nous utiliserons le noyau SELinux.
  </li>
  <li>
    Éditez le fichier <path>/etc/make.profile/packages</path> et enlevez
    l'étoile («&nbsp;*&nbsp;») devant la ligne contenant
    <c>virtual/bootloader</c>, si cette ligne existe.
  </li>
  <li>
    De tous les systèmes de journaux disponibles, seuls <c>syslog-ng</c> et
    <c>metalogd</c> ont été suffisamment testés avec SELinux.
  </li>
  <li>
    Le seul planificateur de tâches qui semble marcher avec SELinux est
    <c>vixie-cron</c>.
  </li>
</ul>

<p>
Lorsque vous éditerez le <path>/etc/fstab</path>, quelques changements seront à
faire&nbsp;:
</p>

<ul>
  <li>
    <path>/dev/ROOT</path> doit être remplacé par <path>/dev/ubd/0</path>.
  </li>
  <li><path>/dev/ubd/0</path> doit avoir l'option <c>acl,user_xattr</c>.</li>
  <li>
    Le type de système de fichiers de <path>/dev/ubd/0</path> doit être ext2 ou
    ext3.
  </li>
  <li>
    <path>/dev/SWAP</path> doit être remplacé par <path>/dev/ubd/1</path>.
  </li>
  <li>Commentez (ou enlevez)<path>/dev/BOOT</path>.</li>
</ul>

<p>
Ajoutez également les deux lignes suivantes&nbsp;:
</p>

<pre caption="Ajouts au /etc/fstab">
none    /dev/pts    devpts       gid=5,mode=620    0    0
none    /selinux    selinuxfs    defaults          0    0
</pre>

<p>
Créons à présent les fichiers de périphériques que nous avons référencés dans le
<path>fstab</path>&nbsp;:
</p>

<pre caption="Création des périphériques de blocs UML">
# <i>for i in `seq 0 7`; do mknod /dev/ubd$i b 98 $(($i*16)); done</i>
</pre>

<p>
Maintenant contruisons les règles SELinux&nbsp;:
</p>

<pre caption="Création des règles SELinux">
# <i>cd /etc/security/selinux/src/policy/</i>
# <i>make install</i>
</pre>

<p>
Maintenant, finissez l'installation et poursuivez avec la création du fichier
<path>root_fs</path>.
</p>

</body>
</section>

<section>
<title>Création du root_fs</title>
<body>

<p>
En regardant la place que prend l'environnement chroot, nous voyons qu'il
occupe entre 600&nbsp;Mo et 1,2&nbsp;Go (selon le «&nbsp;stage&nbsp;» que vous
avez utilisé). À cause de cette taille imposante, nous allons devoir créer une
image suffisamment grande. Commençons avec 1,5&nbsp;Go.
</p>

<pre caption="Création du fichier root_fs">
# <i>cd /mnt/gentoo</i>
# <i>tar cvjpf ~/root_fs.tbz2 *</i>
# <i>cd</i>
# <i>dd if=/dev/zero of=root_fs seek=1500 count=1 bs=1M</i>
# <i>mke2fs -F root_fs</i>
# <i>mount -o loop root_fs /mnt/loop/</i>
# <i>tar xvjpf root_fs.tbz2 -C /mnt/loop</i>
# <i>umount /mnt/loop</i>
</pre>

<p>
Créons également un fichier de mémoire virtuelle de 500&nbsp;Mo.
</p>

<pre caption="Création d'un fichier de mémoire virtuelle">
# <i>dd if=/dev/zero of=swap_fs seek=500 count=1 bs=1M</i>
# <i>mkswap -f swap_fs</i>
</pre>

<p>
Voyons maintenant si cela marche&nbsp;:
</p>

<pre caption="Démarrage de l'environnement Gentoo">
# linux gentoo=nodevfs con0=fd:0,fd:1 con1=xterm con2=xterm con=null ubd0=root_fs ubd1=swap_fs
</pre>

<note>
UML utilise des xterms pour les consoles virtuelles qui sont lancées au
démarrage. Assurez-vous que le terminal d'où vous lancez UML a la variable
d'environnement $DISPLAY définie correctement (ainsi que les permissions
xhost/xauth appropriées).
</note>

<p>
Les seules erreurs que vous voyez au démarrage devraient être <e>Couldn't get a
file descriptor referring to the console</e> venant de <c>setfont</c> et
<c>keymaps</c>. Ces erreurs ne sont pas graves, mais si vous voulez les
corriger, faites simplement ceci&nbsp;:
</p>

<pre caption="On enlève les erreurs inutiles">
# <i>rc-update del keymaps</i>
# <i>rc-update del consolefont</i>
</pre>

<p>
Une fois dedans, la dernière chose à faire est d'étiqueter le système de
fichiers.
</p>

<pre caption="Étiquetage du système de fichiers">
<comment>(À faire à l'intérieur de l'environnement Gentoo SELinux)</comment>
# <i>cd /etc/security/selinux/src/policy</i>
# <i>make relabel</i>
# <i>reboot</i>
</pre>

<p>
Félicitations, c'est prêt&nbsp;:)
</p>

</body>
</section>
</chapter>

<chapter>
<title>Ressources</title>
<section>
<title>User Mode Linux</title>
<body>

<ul>
  <li>
    <uri link="http://edeca.net/articles/bridging/index.html">Établir un pont
    avec UML (N.D.T.&nbsp;: un pont réseau)</uri>
  </li>
  <li>
    <uri link="http://user-mode-linux.sourceforge.net/">Page officielle
    d'UML</uri>
  </li>
  <li>
    <uri link="http://www.theshore.net/~caker/uml/">Les notes de Caker sur
    UML</uri>
  </li>
  <li>
    <uri
    link="http://sourceforge.net/mailarchive/forum.php?forum_id=3647">Archives
    de la liste de diffusion UML</uri>
  </li>
</ul>

</body>
</section>
<section>
<title>Security Enhanced Linux</title>
<body>

<ul>
  <li>
    <uri link="http://www.nsa.gov/selinux/">Page officielle de SELinux</uri>
  </li>
  <li>
    <uri
    link="http://www.gentoo.org/proj/en/hardened/selinux/selinux-quickstart.xml">Guide
    de démarrage rapide de Gentoo Hardened SELinux</uri>
  </li>
  <li>
    <uri link="http://web.verbum.org/selinux/uml/">SELinux et UML</uri>
  </li>
  <li>
    <uri link="http://marc.theaimsgroup.com/?l=selinux">Archives de la liste de
    diffusion de SELinux</uri>
  </li>
</ul>

</body>
</section>
</chapter>

</guide>
