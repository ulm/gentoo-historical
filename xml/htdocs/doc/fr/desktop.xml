<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/desktop.xml">
	<title>Gentoo Linux Desktop Configuration Guide</title>
		<author title="Author"><mail link="zhen@gentoo.org">John P. Davis</mail></author>
		<author title="Author"><mail link="g2boojum@gentoo.org">Grant Goodyear</mail></author>
		<author title="Traducteur"><mail link="frlinux@frlinux.net">FRLinux</mail></author>

	<abstract>
		Ce guide vous montre comment configurer votre bureau sous Gentoo Linux.
		Nous étudierons plus particulièrement la configuration de X, KDE, GNOME, OSS (sound),
		postfix (courrier électronique) et samba (interopérabilité unix/windows).
	</abstract>

	<version>1.4.2</version>
	<date>27 Mai 2003</date>

	<chapter>
		<title>Préliminaires</title>
			<section>

				<body>

				<p>Vous devez bien sûr avoir préalablement installé Gentoo
				(<uri>http://www.gentoo.org/doc/fr/build.xml</uri>).  Après l'avoir installée, il vous
				faut également télécharger la dernière version de <e>Portage</e>
				. Nous vous conseillons d'ailleurs la lecture du guide d'utilisateur portage
				(<uri>http://www.gentoo.org/doc/fr/portage-user.xml</uri>), mais pour les impatients, il suffit de
				taper : :
				</p>

				<pre caption = "Dernière mise à jour">
# <c>emerge sync</c>
				</pre>

				<p>
				Il me semble important d'expliquer mon choix concernant les paquets qui sont
				abordés dans ce guide. Gentoo Linux contient en effet une liste très impressionante
				de gestionnaires de fenêtres, serveurs de courriers électroniques, etc ... qui peuvent
				être installés. Les paquets choisis ici ne reflètent pas la préférence des utilisateurs
				Gentoo mais plus mon propre choix en tant qu'utilisateur car étant capable de les
				paramétrer correctement. En d'autres mots, ce sont les paquets qui sont utilisés sur
				mon bureau.
				</p>

				<impo>
				Il est conseillé de désélectionner les gestionnaires que vous ne voulez pas utiliser  en
				éditant  <path>/etc/make.conf</path>. Dans la section <i>USE</i>, ajoutez <e>-gnome -gtk</e>
				si vous utilisez KDE, ou bien <e>-kde -qt</e> si vous comptez utiliser GNOME.
				</impo>

				<warn>Si vous rencontrez un bogue avec un de ces paquets, reportez le en utilisant
				<uri>http://bugs.gentoo.org/</uri>. Ne les reportez <e>pas</e> aux mainteneurs de ces paquets (ex: KDE), les
				développeurs Gentoo s'en chargeront le cas échéant.
				</warn>

			</body>
		</section>
	</chapter>

	<chapter>
	<title>Installer XFree86</title>
		<section>
			<title>Installation</title>

			<body>

			<p>Le processus d'emerge/installation de X prendra un certain temps et ce même sur un système rapide. Ce système est
			relativement gros, vous devriez donc considérer la lecture d'un livre pendant ce temps voire une petite sieste.
			</p>

			<p>Pour emerger X, il vous suffit de taper :
			</p>

			<pre caption = "Emerging XFree86">
# <c>emerge xfree</c>
			</pre>

			<warn>Les possesseurs de cartes ATI radéon taperont également  : <c>emerge xfree-drm</c> après avoir émergé xfree.</warn>

			<p>Après cette procédure plutôt longue, la configuration peut commencer.
						</p>

			</body>
		</section>

		<section>
			<title>Configurer X</title>

			<body>

			<p>J'aime bien utiliser l'outil de configuration en mode texte <c>xf86config</c> pour configurer X,
			bien que le fichier  <path>/etc/X11/XF86Config</path> en résultant ne soit pas très élégant à voir --
			consultez <uri link="http://www-106.ibm.com/developerworks/edu/os-dw-linuxxwin-i.html">ce tutoriel</uri> (en Anglais)
			pour vous aiguiller sur une configuration plus avancée de XFree...
			Avant de commencer, il vous faudra consulter le manuel de votre moniteur et noter les fréquences
			de rafraichissement horizontales et verticales (mon viewsonic G773 possède les caractéristiques suivantes :
			horizontales : 30-69 KHz, verticales : 55-90 KHz), le type et la quantité de mémoire (en KB) de votre carte vidéo
			(une carte Geforce avec 32768 KB dans mon cas), ainsi que le type de souris (le mienne étant une Intellimouse
			connectée sur le port PS/2 et reconnue sur  <path>/dev/psaux</path>).
			</p>

			<pre caption = "Executer  xf86config">
# <c>/usr/X11R6/bin/xf86config</c>
			</pre>

			<p>Je choisis de ne pas émuler les 3 boutons étant donné que je possède une souris à 3 boutons.
			N'oubliez pas d'ajouter le support XKB si vous possédez un clavier international ou avec besoin d'un support
			pour plusieurs claviers. Il vous faudra ensuite décider d'une résolution et du nombre de couleurs. J'aime utiliser
			1280x1024 en 24bpp car mon viewsonic ne supporte pas au dessus. Si vous n'avez encore jamais fait ceci, ne
			soyez pas étonné d'avoir à exécuter le même programme plusieurs fois.
			</p>

			<note>Si vous ne connaissez pas les fréquences de rafraichissement de votre moniteur, essayez de faire une
			recherche sur Google par exemple  <uri>http://www.google.fr</uri>, en précisant le modèle et le fabriquant de votre
			moniteur. Ces données sont généralement documentées dans les spécifications.
			</note>

            <note>
			Si vous utilisez un clavier international qui a besoin des touches mortes (telles que
			&#232;, &#233;, &#234;, &#235;, &#242;, &#243; etc), il vous faudra alord déclarer
			vos locales avant de démarrer X. Pour se faire, créer un fichier
            <path>/etc/env.d/02locale</path> et ajoutez <c>LC_CTYPE="xx_YY"</c> comme modèle
            , <c>xx</c> définissant votre langue (ex "<c>fr</c>") et
            <c>YY</c> votre pays (ex "<c>FR</c>"). Si vous voulez aussi le support pour l'EURO
            vous devrez ajouter ceci "<c>@euro</c>" à votre variable (ex <c>LC_CTYPE="fr_FR@euro"</c>). N'oubliez pas de faire
			ensuite  <c>env-update &amp;&amp; source /etc/profile</c> pour prendre en compte ces changements.
            </note>

			<p>Les utilisateurs expérimentés de la configuration X sont sans doute habitués à faire un lien symbolique
			pour lier leur souris à <path>/dev/mouse</path>. Ces liens symboliques étaient problématiques avec devfs
			étant donné qu'il les effaçait généralement après redémarrage. Gentoo Linux gère les liens correctement à présent
			dans le répertoire <path>/dev</path>. Vous pouvez donc créer le lien symbolique <path>/dev/mouse</path> en utilisant
			<c>ln -s</c> et il <e>sera</e> préservé après redémarrage.
			</p>

			<p>Si vous utilisez  XFS (le serveur de polices de X), suivez les instructions se trouvant ci-dessous. L'utilisation de XFS est
			vraiment recommandée car elle rends la configuration des polices <e>bien plus</e> facile. Consultez cet article du site de
   			 <uri link = "http://www.redhat.com/docs/manuals/linux/RHL-7.3-Manual/ref-guide/s1-x-fonts.html">RedHat</uri>
			pour en savoir plus sur XFS.
			</p>

			<pre caption = "Tester votre configuration">
# <c>rc-update add xfs default</c>
# <c>/etc/init.d/xfs start</c>
# <c>startx</c>
			</pre>

			<p>Si vous avez correctement configuré X, la commande <c>startx</c> devrait démarrer un gestionnaire de fenêtres X
			absolument immonde (twm, si vous tenez à savoir). Si X démarre, vous pouvez continuer. Appuyez sur
			 <c>&lt;ctrl&gt;&lt;alt&gt;&lt;backspace&gt;</c> pour arrêter le serveur.
			</p>

			<p><c>xf86config</c> crée uniquement un squelette de fichier de configuration. Ceux utilisant des cartes  NVIDIA,
			souris USB ou d'autres particularités devront les spécifier manuellement. Je vais tenter de répondre à la plupart de
			ces questions un peu plus bas mais je vous recommande la consultation du fichier  <i>XF86Config</i> afin de voir ce que
			vous pouvez modifier vous même. Il n'est pas si difficile à comprendre. Si vous recherchez des informations pour optimiser ce
			fichier, consultez <uri link = "http://www.tldp.org/HOWTO/mini/FDU/">cette page</uri>.
			</p>

			</body>
		</section>

			<section>
				<title>Configurer une souris PS/2</title>

				<body>

				<p>Si vous avez une souris PS/2, éditez manuellement le fichier <c>XF86Config</c> comme ceci :
				</p>

				<pre caption = "Editer XF86Config">
# <i>cp /etc/X11/XF86Config /etc/X11/XF86Config.working</i>
# <i>vim /etc/X11/XF86Config</i>
				</pre>

				<pre caption="Section du périphérique de pointage dans XF86Config">
Section "InputDevice"

#Identifier and driver

Identifier	"Mouse1"
Driver	"mouse"
<i>Option "Protocol"    "IMPS/2" </i>
Option "Device"      "/dev/psaux"
<i>Option "ZAxisMapping"	"4 5"</i>

				</pre>

				<p>Les possesseurs de souris de type Intellimouse remplaceront comme moi le "Protocol" de
				"PS/2" en "IMPS/2".  Pour activer la molette, il vous suffit de rajouter la ligne 'Option "ZAxisMapping" "4 5"'
				où  '4' et '5' correspondent aux mouvements vers le haut et vers le bas.
				</p>

				<note>Netscape 4.x ne prendra pas ces paramètres en compte, il vous faudra pour cela créer un fichier
				 .Xdefaults en premier. Consultez <uri link="http://www-sop.inria.fr/koala/colas/mouse-wheel-scroll/">cette page </uri>
				pour plus d'informations.  Sinon, vous pouvez utiliser  <c>konqueror</c>, <c>opera</c>,
				<c>mozilla</c>, <c>galeon</c>, ou n'importe quel autre vrai navigateur.</note>

				<p>Lancez <c>startx</c> pour vérifier que X démarre toujours correctement.
				</p>

			</body>
		</section>

		<section>
			<title>Configurer une souris USB</title>

			<body>

			<p>Une souris USB sera de grande utilité sur un écran haute résolution. Le noyau s'occupe d'optimiser pour vous
			ses mouvements afin de ne pas avoir à bouger la souris 5 fois sur le tapis pour lui faire traverser l'écran.
			</p>

			<p>Pour l'utiliser correctement, vous devez posséder les bons modules de noyau. Ces modules nécessaires sont
			<i>usbmouse</i>, <i>mousedev</i>, <i>hid</i>, <i>usbcore</i>, <i>usb-uhci</i>, et <i>input</i>. Lorsque vous aurez
			recompilé ces modules si ce n'est déjà fait, il ne vous restera plus qu'a faire un <i>insmod</i> de ceux-ci.
			</p>
			<note>Utilisez soit <i>usbmouse</i> <b>OU</b> <i>hid</i>. Si vous installez les deux, votre souris ne marche plus.</note>
			<note>Lorsque vous configurez le support de base de votre souris, assurez vous de bien préciser la résolution d'écran qui
			sera utilisée lors du lancement de X. Cela devrait rendre son utilisation facile et agréable. </note>

			<p>Déconnectez à présent votre souris, patientez quelques secondes, puis reconnectez la de nouveau. Votre noyau devrait
			alors indiquer quelque chose comme ceci dans les logs ou dmesg :  </p>

			<pre caption = "Message du noyau">
hub.c: USB new device connect on bus1/1, assigned device number 2
input0,hiddev0: USB HID v1.00 Mouse [Microsoft Microsoft IntelliMouse Optical] on usb1:2.0
			</pre>

			<p>Maintenant que nous savons que la souris est détectée, vérifiez  que <path>/dev/input</path> contient un périphérique :
			</p>

			<pre caption = "Vérifier l'existence de votre souris USB">
# <c>cd /dev/input</c>
# <c>cat mice</c>
<comment>Déplacez votre souris lorsque vous taperez la commande  <i>cat</i>, vous devriez voir plein de caractères apparaître à l'écran.
 </comment>
			</pre>

			<p>Maintenant que la souris est correctement installée, il faut indiquer à X de l'utiliser. Il vous
			suffit pour cela de changer une section de votre fichier de configuration.
			</p>

			<pre caption = "Editer XF86Config">
# <c>cp /etc/X11/XF86Config /etc/X11/XF86Config.working</c>
# <c>vim /etc/X11/XF86Config</c>
			</pre>

			<pre caption="Section de pointeur dans le fichier XF86Config">
Section "InputDevice"

# Identifier and driver

Identifier	"Mouse1"
Driver	"mouse"
<i>Option "Protocol"    "IMPS/2" </i>
Option "Device"      "/dev/input/mice"
<i>Option "ZAxisMapping"	"4 5"</i>

			</pre>

			<p>Redémarrez X et vous devriez avoir une souris fonctionnelle ! </p>
			<p>N'oubliez pas d'ajouter vos modules USB dans votre fichier  <i>/etc/modules.autoload</i>. </p>

			<pre caption = "Ajouter des lignes au fichier /etc/modules.autoload">
# <c>echo $'\n'mousedev $'\n'hid $'\n'usbcore $'\n'input >> /etc/modules.autoload</c>
			</pre>

			</body>
		</section>

		<section>
			<title>Configurer votre carte NVIDIA</title>

			<body>
			<p>Si vous possédez une carte  NVIDIA, c'est le bon moment pour installer les pilotes
			propriétaires accélérés.</p>

			<note>Si vous recompilez votre noyau, vous devez faire de même pour le paquet <i>nvidia-kernel</i>.  C'est en effet
			nécessaire car le nouveau noyau en installant ses modules effacera le module nividia.
			</note>

			<pre caption="Pour possesseurs de cartes NVIDIA uniquement">
# <c>emerge nvidia-glx</c>
# <c>emerge nvidia-kernel</c>
# <c>nano -w /etc/X11/XF86Config</c>
# <c>echo "nvidia" >> /etc/modules.autoload</c>
# <c>modprobe nvidia</c>
			</pre>

			<pre caption="Activer le support GLX dans le fichier  /etc/X11/XF86Config">
Section "Module"

# Charge le module GLX
#    Load       "glx" <comment>(Décommentez cette ligne)</comment>
			</pre>

			<pre caption="Configurer le fichier  /etc/X11/XF86Config pour utiliser le pilote NVIDIA">
Section "Device"
	Identifier  "NVIDIA GeForce"
	#Driver      "nv"
	Driver      "nvidia"
	#VideoRam    32768
	# Insert Clocks lines here if appropriate
EndSection
			</pre>

			<p>Faîtes ensuite un  <c>startx</c> pour vous assurer du bon démarrage de X
			(l'écran de démarrage avec le logo NVIDIA devrait apparaître si vous l'avez correctement
			configuré).
			</p>

			</body>
		</section>
	</chapter>

	<chapter>
		<title>Gestionnaires de fenêtres</title>

		<section>
			<title>Introduction</title>
			<body>

			<p>L'étape qui suit généralement la configuration de X est d'y installer un beau gestionnaire de fenêtres. Rien
			ne vous empêche d'utiliser twm si vous voulez quelque chose de vraiment moche, enfin fonctionnel.
			</p>

			<p>Il y en a énormément de disponibles sur ce terrain. Certains fonctionnent avec KDE,
			GNOME, Fluxbox, Blackbox, mais ce ne sont pas les seuls :  Windowmaker, Sawfish, etc.
			Comme vous pouvez le voir, le choix est relativement important dans Gentoo Linux.
			</p>

			</body>
		</section>

		<section>
			<title>KDE</title>
			<body>

			<p>Je vais présumer que vous avez décidé d'installer KDE si vous consultez cette section...
			KDE est désormais complètement supporté dans Gentoo Linux, mais je vous conseille de consulter ce qui suit
			avant de faire un emerge de KDE :
			</p>

			<li>Assurez-vous d'avoir "qt" et "kde" dans vos variables de USE dans le fichier <i>make.conf</i>. </li>
			<li>Assurez-vous également d'avoir mis (optionel) "-gnome" et "-gtk" toujours dans le même fichier. </li>

			<p>Ces deux étapes peuvent être faîtes en éditant le fichier <path>/etc/make.conf</path> comme ceci :
			</p>

			<pre caption = "Editer make.conf">
# <c>vim /etc/make.conf </c>
<comment>dans le contenu du fichier <i>make.conf</i></comment>

USE="qt kde -gnome -gtk"

			</pre>

			<p>Vous pouvez consulter le guide dédié aux variables USE en lisant ce document :
			<uri link="http://www.gentoo.org/doc/fr/use-howto.xml">le HOWTO sur USE</uri>.
			</p>

			<p>Je vous conseille également l'utilisation de l'option <c>--pretend</c> avant de faire un
			<c>emerge</c> afin de voir quelles dépendances vont être installées et dans le cas de KDE,
			il y en a beaucoup.
			</p>

			<pre caption = "Vérifier les dépendances requises par KDE">
# <c>emerge --pretend kde</c>
# <c>emerge kde</c>
			</pre>

			<note>
			Faîtes attention lors de l'utilisation de <i>emerge kde-base</i>. Cette commande n'installera que
			les paquets KDE de base sans aucune application d'aide.
			</note>

			<note>
			Si vous pensez utiliser CUPS pour imprimer, vous devriez rajouter "cups" dans vos variables USE au sein
			du fichier  <path>/etc/make.conf</path> avant d'emerger KDE. Vous pouvez aussi le faire dynamiquement
			en tapant :<i>USE="cups" emerge kde </i>. Consultez le guide de référence sur l'impression sous Gentoo
			pour avoir des instructions détaillées sur CUPS.
			</note>

			<p>Bonne sieste !</p>

			<note>Si vous avez un CD Gentoo avec des binaires, vous pouvez alors installer les paquets directement comme ceci : .
			</note>

			<pre caption="Installer les paquets binaires depuis le CD">
# <c>export PKGDIR=/mnt/cdrom/gentoo/packages</c>
<comment>Portage s'attends à trouver les paquets normalement dans  /usr/portage/packages
</comment>
# <c>emerge --usepkg /mnt/cdrom/gentoo/packages/All/kdebase-x.y.z.tbz2</c>
<comment>L'option <c>--usepkg</c> confirme l'utilisation de paquets binaires pour les dépendances (si ceux-ci sont disponibles)
</comment>
			</pre>

			</body>
		</section>

		<section>
			<title>Configurer KDM</title>
			<body>

			<p>Après avoir installé KDE, vous pouvez utiliser le gestionnaire de connexion de celui-ci, j'ai nommé KDM.
			Pour le démarrer, il vous suffit de faire :
			</p>

			<pre caption = "Démarrer KDM">
# <c>kdm</c>
			</pre>

			<p>Vous devriez pouvoir démarrer KDE et vous assurer que tout fonctionne, il vous manque bien sûr le son pour
			l'instant mais nous allons y venir sous peu. Faîtes alors <c>ls /usr/bin</c> dans konsole (ou n'importe quelle autre
			commande remplissant la fenêtre), et assurez-vous de pouvoir faire défiler le contenu. Cela devrait marcher.
			work!
			</p>

			<note>Si la commande <c>kdm</c> vous retourne "commande inexistante", il vous suffit de mettre à jour votre
			chemin ($PATH) dans un terminal par la commande <c>source
			<path>/etc/profile</path></c>.</note>

			<p>Il ne vous reste plus qu'à paramétrer Gentoo pour démarrer X à chaque démarrage. Editez
			<path>/etc/rc.conf</path> et modifiez cette ligne : <e>DISPLAYMANAGER="kdm"</e>.
			</p>

			<pre caption = "Editer /etc/rc.conf">
# <c>vim /etc/rc.conf</c>
			</pre>

			<pre caption="/etc/rc.conf -- spécifier le DISPLAYMANAGER (gestionnaire d'affichage)">
# What display manager do you use ?  [ xdm | gdm | kdm ]
DISPLAYMANAGER=kdm
			</pre>

			<p>	Il ne reste qu'à ajouter <e>kdm</e> au script de démarrage.
			</p>

			<pre caption = "Ajout de KDM au script de démarrage par défaut">
# <c>rc-update add xdm default</c>
			</pre>

			<p>Redémarrez et admirez le lancement de  X/KDE !
			</p>

			<impo>La commande <c>rc-update</c> est une commande améliorée sous Gentoo Linux du vénérable
			<c>chkconfig</c> qui gère les scripts init.  Tapez <c>rc-update</c> pour voir les options disponibles.
			</impo>

			</body>
		</section>
	</chapter>

	<chapter>
		<title>GNOME</title>

		<section>
			<title>Installation</title>
			<body>

			<p>Avant que vous ne commenciez à installer les paquets GNOME, vous devriez éditer les variables USE.
			Cela vous permettra d'activer le support GNOME dans toutes les applications que vous compilez.
			</p>

			<li>Assurez vous d'avoir mis "gtk" et "gnome" dans votre fichier <i>make.conf</i>. </li>
			<li>Et d'avoir retiré(optionnel) "-kde" et "-qt" toujours dans votre fichier <i>make.conf</i>. </li>

			<p>Ces deux étapes sont faites en éditant le fichier <path>/etc/make.conf</path> comme suit :
			</p>

			<pre caption = "Editer make.conf">
# <c>vim /etc/make.conf </c>
<comment>Dans le fichier  <i>make.conf</i></comment>

USE="gnome gtk -kde -qt"

			</pre>

			<p>Consultez le guide suivant pour en savoir plus sur les variables USE :
			<uri link="http://www.gentoo.org/doc/fr/use-howto.xml">HOWTO USE</uri>.
			</p>

			<p>Vous pouvez à présent débuter l'installation des paquets GNOME.
			</p>

			<pre caption = "Installer les paquets GNOME">
# <c>emerge --pretend gnome</c>
# <c>emerge gnome</c>
			</pre>

			<p>Cette étape va prendre un bon moment, vous devriez vous détendre en regardant un bon film.
			L'auteur recommande Pulp Fiction.
			</p>

			<p>La configuration GNOME est à peu près la même que celle pour KDE à partir de maintenant.
			Il n'y a pas de fichiers spécifiques à GNOME à paramétrer si ce n'est GDM, le gestionnaire de login.
			</p>

			</body>
		</section>

		<section>
			<title>Configurer GDM</title>
			<body>

			<p>Après avoir installé GNOME, vous voudrez sans doute utiliser un beau gestionnaire de démarrage,
			et donc celui livré avec GNOME, appellé GDM. GDM est inclus dans le paquet GDE,
			il est donc très facile à démarrer :
			</p>

			<pre caption = "Démarrer GDM">
# <c>gdm</c>
			</pre>

			<p>Vous devriez pouvoir vous connecter et voir GDM complètement opérationnel.
			Etant donné que le son n'est pas encore fonctionnel, vous ne pourrez pas entendre la musique d'accueil de GNOME,
			mais nous allons bientôt remédier à cela. Ouvrez une console et tapez :  <c>ls /usr/bin</c> (ou n'importe quelle autre
			commande remplissant cette fenêtre), et assurez vous du défilement de la souris en utilisant la molette. Cela devrait
			marcher du premier coup !
			</p>

			<note>Si lorsque vous tapez <c>gdm</c> vous obtenez "fichier inexistant", vous devez mettre à jour votre
			$PATH (chemin) dans un terminal en tapant  <c>source <path>/etc/profile</path></c>.</note>

			<p>Il nous faut à présent paramétrer Gentoo pour démarrer X à chaque fois.
			Editez <path>/etc/rc.conf</path> pour y entrer <e>DISPLAYMANAGER="gdm"</e>.
			</p>

			<pre caption = "Editer /etc/rc.conf">
# <c>vim /etc/rc.conf</c>
			</pre>

			<pre caption="/etc/rc.conf -- renseigner DISPLAYMANAGER">
# What display manager do you use ?  [ xdm | gdm | kdm ]
DISPLAYMANAGER=gdm
			</pre>

			<p>	Il ne reste alors qu'à ajouter <e>gdm</e> aux scripts de démarrage.
			</p>

			<pre caption = "Ajout de GDM aux scripts de démarrage">
# <c>rc-update add xdm default</c>
			</pre>

			<p>Redémarrez et admirez X/GNOME se lancer !
			</p>

			<impo>La commande <c>rc-update</c> est une commande améliorée sous Gentoo Linux du vénérable
			<c>chkconfig</c> qui gère les scripts init.  Tapez <c>rc-update</c> pour voir les options disponibles.
			</impo>

			</body>
		</section>
	</chapter>

	<chapter>
		<title>Configuration du son</title>
			<section>
				<title>Alsa</title>
				<body>

				<p>Pour installer ALSA, veuillez consulter le guide dédié
				<uri link = "http://www.gentoo.org/doc/fr/alsa-guide.html">ici</uri>.
				</p>

				</body>
			</section>

			<section>
				<title>KDE et le son</title>
				<body>

				<p>
				KDE a quelques utilitaires sonores sympathiques, dont le mixer de son de KDE
				<c>kmix</c>.
				</p>

				<note>Si kmix ne peux pas trouver le mixer, il va considérer que vous n'avez pas de support
				pour le son. Sortez de votre session X et enlevez  <path>~/.kde/share/config/kmixrc</path>
				ainsi que <path>~/.kde/share/config/kmix:*</path> et relogguez vous. Il devrait à présent trouver
				le mixer de son tout seul.
				</note>

				</body>
			</section>

			<section>
				<title>GNOME et le son</title>
				<body>

				<p>Sera abordé dans la prochaine révision de ce document.
				</p>

				</body>
			</section>
	</chapter>

	<chapter>
		<title>Mail</title>
			<section>
				<title>Postfix -- Installation et configuration</title>
				<body>

				<p>
				J'aime <c>postfix</c> car il émule <c>sendmail</c> sans avoir besoin
				de configurer cette abomination de <c>sendmail</c>. Vous pouvez aussi en profiter pour
				installer <c>mutt</c>, un client de courrier électronique, afin de pouvoir tester notre configuration
				<c>postfix</c>.
				</p>

				<pre caption = "Emerger postfix et mutt">
# <c>emerge postfix mutt</c>
				</pre>

				<p>Si vous comptez utiliser Postfix uniquement pour envoyer des courriers électroniques, il est
				déjà configuré pour vous. Dans le cas contraire, il vous faudra éditer  <path>/etc/postfix/main.cf</path>.
				Le fichier <path>main.cf</path> est relativement bien documenté et les valeurs par défaut sont raisonnables pour
				une machine individuelle. Si votre station de travail est directement connectée à l'internet (ex: vous avez une adresse IP
				publique et un nom DNS), vous voudrez sans doute modifier ce fichier pour recevoir des emails.
				</p>

				<pre caption="Activer la réception de courriers dans le fichier main.cf">
# RECEIVING MAIL

# The inet_interfaces parameter specifies the network interface
# addresses that this mail system receives mail on.  By default,
# the software claims all active interfaces on the machine. The
# parameter also controls delivery of mail to user@[ip.address].
#
#inet_interfaces = all
#inet_interfaces = $myhostname
#inet_interfaces = $myhostname, localhost
<i>inet_interfaces = $myhostname, localhost</i>
<i>mydestination = $myhostname, localhost.$mydomain</i>
				</pre>


				</body>
			</section>

			<section>
				<title>Test de Postfix (avec Mutt)</title>
				<body>

				<p>Voyons si cela marche.
				</p>

				<pre caption = "Tester Postfix">
# <c>postfix check</c>
# <c>newaliases</c>
# <c>postfix start</c>
postfix-script: starting the Postfix mail system
# <c>mutt -x root</c>
/root/.maildir does not exist. Create it? ([y]/n): <comment>[appuyez sur y]</comment>
To:  &lt;root&gt;
Subject: test
(End message with a . on a line by itself)
test
.

# <c>mutt</c>
<comment>[vous devriez voir votre message apparaître]</comment>
				</pre>

				<p>En utilisant <c>postfix check</c> nous nous assurons que le fichier <path>main.cf</path>
				est correctement lu et qu'un nombre important de répertoires est créé.
				La commande <c>newaliases</c> configurer les alias système, et la commande
				<c>postfix start</c> démarre le serveur de courrier.  J'ai ensuite utilisé <c>mutt</c> (façon <c>mailx</c>, ou encore en mode <c>mail</c>)
				pour m'envoyer un email localement. <c>mutt</c> crée alors en même temps le répertoire mail spool (pour root dans notre exemple) situé ici
				:, <path>~/.maildir</path>.  Le fait de lancer <c>mutt</c> en mode interactif doit alors vous montrer votre message, donc nous savons à ce point
				que l'envoi et la réception locale de messages fonctionne. J'ai donc ensuite envoyé un courrier à une adresse non locale afin de vérifier que
				les courriers électroniques transitent correctement (exemple non documenté ici).
				</p>

				<warn>Si vous envoyez un email en utilisant la configuration par défaut du fichier
				<path>main.cf</path> depuis une machine sur un réseau privé, il y a de grandes chances que
				vous ne le verrez jamais. Beaucoup de serveurs de mails refusent les courriers électroniques
				qui ne peuvent justifier une résolution complète de DNS.
				</warn>

				<p>En considérant que vous avez tout qui marche a present, il est temps d'ajouter postfix au
				démarrage du système.
				</p>

				<pre caption = "Configurer Postfix pour démarrer à chaque lancement de machine">
# <c>postfix stop</c>
postfix-script: starting the Postfix mail system
# <c>rc-update add postfix default</c>
 * postfix added to runlevel default...
 * Caching service dependencies...          [ ok ]
 * rc-update complete.
# <c>/etc/init.d/postfix start</c>
Starting postfix......     [  ok  ]
				</pre>

				<impo>Les vétérans de <c>sendmail</c> ou les afficionados de <c>postfix</c> peuvent être habitués
				à stocker les emails dans <path>/var/spool/mail</path> au lieu des répertoires utilisateurs et les emails sont
				donc stockés en format <e>mbox</e> plutôt que <e>maildir</e>. Ce n'est en aucun cas difficile à reconfigurer afin que
				<c>postfix</c> et <c>mutt</c> utilisent le format standard de boite (<e>mbox</e>).  Editez donc <path>/etc/postfix/main.cf</path>
				afin de commenter  <i>home_mailbox</i> et décommenter <i>mail_spool_directory = /var/spool/mail</i>.
				Créez le répertoire contenant les emails en faisant <c>mkdir -p /var/spool/mail</c> et redémarrez <c>postfix</c>.
				Ensuite pour la partie client, et particulièrement <c>mutt</c> il vous suffit d'éditer <path>/etc/mutt/Muttrc</path> pour utiliser <e>mbox</e>
				en ajoutant  <i>set mbox_type = mbox</i> ainsi qui le répertoire  <path>/var/spool/mail</path> avec cette ligne <i>set spoolfile=/var/spool/mail</i>.
				</impo>

				<p>Si vous préférez un client graphique, nous installerons l'interface web Squirrelmail, un peu plus tard.  Alternativement, Daniel Robbins recommande
				vivement la combinaison d'IMAP (que nous installerons d'ailleurs car nécessaire pour Squirrelmail) et le client mail de kde <c>kmail</c>. Ce
				programme fait partie du paquet  <path>kde-base/kdenetwork</path>.
				</p>

				<p>Nous verrons aussi comment installer  <e>Evolution</e> comme logiciel de gestion d'informations avec le support pour Palm pilot. Il
				constitue également un excellent client de courrier électronique.
				</p>

			</body>
		</section>
	</chapter>

	<chapter>
		<title>Samba</title>

			<section>
				<title>Installer et configurer Samba</title>
				<body>

				<p>Samba est un remarquable paquet permettant aux machines Linux de partager des fichiers et des imprimantes
				avec des machines MS Windows. Pour plus d'informations, consultez l'article écrit par Daniel Robbins sur
				<uri>http://www.ibm.com/developerworks?ca=dgr-Gentoo-dWhp</uri>.
				</p>

				<pre caption = "Installer Samba">
# <c>emerge samba</c>
# <c>rc-update add samba default</c>
# <c>cd /etc/samba</c>
# <c>cp smb.conf.example smb.conf</c>
					# <c>nano -w smb.conf</c>
				</pre>

				<pre caption="smb.conf -- groupe de travail">
# workgroup = NT-Domain-Name or Workgroup-Name, eg: REDHAT4
workgroup = MYGROUP <comment>[remplacer par votre groupe de travail ou domaine]</comment>
				</pre>

				<pre caption="smb.conf -- imprimer avec cups">
# It should not be necessary to specify the print system type unless
# it is non-standard. Currently supported print systems include:
# bsd, sysv, plp, lprng, aix, hpux, qnx
;   printing = bsd
printing = cups
				</pre>

				<pre caption="smb.conf -- cryptage">
# You may wish to use password encryption. Please read
# ENCRYPTION.txt, Win95.txt and WinNT.txt in the Samba documentation.
# Do not enable this option unless you have read those documents
encrypt passwords = yes
				</pre>

				<p>Mes attentes vis à vis de Samba sont minimes. J'ai juste besoin de partager mes fichiers entres machines
				Linux et Windows, et utiliser ma machine Linux comme serveur d'impression (en utilisant <c>cups</c>).  Après installation,
				il ne vous reste qu'à faire quelques modifications mineures dans votre fichier <path>/etc/samba/smb.conf</path>.
				Assurez vous notamment que la variable <e>workgroup</e> renseigne bien votre groupe de travail (ou domaine) Windows
				(j'utilise généralement "OLYMPUS", mais il me semble que  "WORKGROUP" est celui renseigné par défaut),
				 <e>printing</e> doit être modifié par <e>cups</e> au lieu de <e>bsd</e>, et la ligne <e>encrypt passwords = yes</e>
				 doit être décommentée. Les machines Windows utilisent des mots de passe cryptés par défaut, donc ce dernier changement
				 est important à moins que vous ne vouliez modifier directement la base de registres des machines Windows
				 <comment>[vraiment pas recommandé]</comment>. Le seul problème est que Windows utilise une méthode de cryptage différente
				 de Linux, il vous faudra donc maintenir un fichier de mots de passes différents pour samba.
				</p>

				<pre caption = "Ajout d'utilisateurs dans samba">
# <i>smbpasswd -a grant</i> <comment>[Remplacez "grant" par votre utilisateur]</comment>
New SMB password:
Retype new SMB password:
Added user grant.
				</pre>

				<note>
				Avant d'ajouter des utilisateurs au fichier de mots de passes samba, vous devez vous assurer que cet utilisateur est dans la liste du
				fichier <path>/etc/passwd</path>.
				</note>

				<p>Il vous faut ensuite, pour chaque utilisateur que vous voulez autoriser à utiliser les partages, lancer la commande
				<c>smbpasswd</c>.  Samba enregistre alors les mots de passe dans le fichier <path>/etc/samba/private/smbpasswd</path>,
				qui sera créé la première fois que vous lancez la commande <c>smbpasswd</c>.
				</p>

				<pre caption = "Démarrer Samba">
# <c>/etc/init.d/samba start</c>
Starting samba...        [  ok  ]
				</pre>

				<p>Démarrez samba, et vous devriez pouvoir vous connecter sur votre Gentoo Linux
				depuis n'importe quelle machine Windows et accéder à votre $HOME ainsi qu'accéder
				aux imprimantes partagées. Si vous ne pouvez pas vous connecter, consultez
				<path>/usr/share/doc/samba-2.2.5-r1/full_docs/textdocs/DIAGNOSIS.txt.gz</path>.
				</p>

				</body>
			</section>
		</chapter>

		<chapter>
			<title>Apache et l'interface web Squirrelmail</title>
			<section>
				<title>Apache avec support SSL et PHP</title>

				<body>

				<p>Si vous avez une adresse IP fixe (ou que vous utilisez les services de dyndns par
				exemple qui vous permet de lier votre adresse actuelle avec un nom), vous voudrez sans
				doute avoir la possibilité de vérifier vos emails à distance. Ma solution est d'utiliser Squirrelmail
				qui peut être accessible depuis n'importe quel navigateur.
				</p>

				<p>Il est donc pour cela nécessaire d'installer un serveur web. Vu que la plupart du monde
				utilise Apache, nous allons également l'utiliser. Nous allons également installer PHP (PHP4 pour
				être précis) en même temps, car Squirrelmail est un programme en PHP. Les versions présentées
				ici seront  sans doute différentes lorsque vous le ferez sur votre machine. Il vous suffira de les ajuster
				aux commandes ici, donc ne faîtes pas un bête copier/coller.
				</p>

				<pre caption = "Installer et configurer Apache">
# <c>emerge apache php mod_php mod_ssl</c>
# <c>ebuild /var/db/pkg/dev-php/mod_php-4.2.2-r1/mod_php-4.2.2-r1.ebuild config</c>
# <c>ebuild /var/db/pkg/net-www/mod_ssl-2.8.10/mod_ssl-2.8.10.ebuild config</c>
				</pre>

				<impo>Vous devez installer mod_ssl pour bénéficier du support SSL pour
				Apache. Cele évitera d'envoyer un mot de passe en clair par internet. Vous avez donc
				<e>besoin</e>de SSL!.</impo>

				<p>Vous devriez également consulter le fichier <path>/etc/apache/conf/apache.conf</path>,
				vu q'Apache est hautement configurable.  La racine des documents du serveur Apache se trouve par
				défaut dans  <path>/home/httpd/htdocs</path> (c'est ce que vous verrez apparaître lorsque vous tenterez
				http://localhost); vous pouvez bien sûr le changer à loisir.
				</p>

				<pre caption="/etc/apache/conf/apache.conf">
# Do NOT add a slash at the end of the directory path.
#
DocumentRoot "/home/httpd/htdocs" <comment>(Changez-le si besoin est)</comment>
				</pre>

				<pre caption = "Inclure Apache au démarrage de la machine">
# <c>rc-update add apache default</c>
 * apache added to runlevel default...
 * Caching service dependencies...               [ ok ]
 * rc-update complete.
# <c>nano -w /etc/conf.d/apache</c>
				</pre>

			<p>Utilisez <c>rc-update</c> pour ajouter Apache au runlevel par défaut,  et éditez ensuite
			<path>/etc/conf.d/apache</path> pour ajouter les options suivantes (afin qu'Apache charge
			automatiquement les modules SSL et PHP au démarrage).
			</p>

			<pre caption="/etc/conf.d/apache">
APACHE_OPTS="-D SSL -D PHP4"
			</pre>

			<pre caption = "Redémarrer Apache">
# <c>/etc/init.d/apache start</c>
 * Starting Apache...                            [ OK ]
# <c>lynx localhost</c>
			</pre>

			<p>Pour vérifier si votre serveur web marche, vous pouvez vous connecter à l'aide de
			n'importe  quel navigateur internet sur l'adresse : localhost. Pour vous assurer que le support SSL
			est activé, il vous suffit d'ajouter <uri>http<comment>s</comment>://localhost</uri>.
			Le préfix <c>https</c> indique à n'importe quel navigateur qu'il doit utiliser une connexion <e>sécurisée</e>
			par le biais de SSL.  Les navigateurs graphiques indiquent généralement un cadenas quelque part pour
			indiquer qu'une connexion sécurisée est en cours.
			</p>

			<note>Lorsque vous faites une connexion sécurisée vers le serveur, vous recevrez sans doute un
			avertissement indiquant que le certificat du site n'est pas reconnu. L'ebuild mod_ssl installe en effet
			lui-même un certificat auto-signé, qui devrait servir de test uniquement. Consultez le manuel de
			<c>mod_ssl</c> ici : <path>/usr/share/doc/mod_ssl-2.8.10</path>.  Un certificat auto-signé est
			parfaitement suffisant pour une utilisation personnelle.
			</note>

			<p>Il nous faut maintenant vérifier que PHP marche bien. Le plus simple est de créer un fichier
			à la racine des documents de votre serveur Apache.
			</p>

			<pre caption = "Tester PHP">
# <c>echo "&lt;? phpinfo(); ?&gt;" > /home/httpd/htdocs/test.php</c>
# <c>lynx http://localhost/test.php</c>
			</pre>

			<pre caption="Une configuration Apache + PHP en état de marche">
             	                                              phpinfo() (p1 of 26)
               	                  PHP Logo

   	                         PHP Version 4.0.6

     System Linux my.server.edu 2.4.10 #1 Tue Oct 9 16:33:50 Local
 	        time zone must be set--see zic manuali686 i686 unknown
   	                       Build Date Oct 16 2001
			</pre>

			<p>Si vous voyez une ligne équivalente à ce qui se trouve ci-dessus, cela veut dire
			qu'Apache a correctement interprété le code PHP.
			</p>

			<warn>Si vous consultez la page entière du script <path>test.php</path>, vous remarquerez qu'il
			donne <e>énormément</e> d'informations sur votre système. Vous devriez vous en débarasser
			une fois que vous avez vérifié que PHP marche correctement (Ou bien le renommer <c>mv test.php test.phps</c>.
			De cette façon, Apache affichera <path>test.phps</path> comme un source PHP au lieu d'éxécuter le script.)
			</warn>

			</body>
		</section>

		<section>
			<title>Courier IMAP</title>
			<body>

			<p>Squirrelmail est une application PHP qui nécessite un serveur IMAP pour servir de jointure entre
			le serveur web et votre email. Etant donné que Gentoo Linux utilise Maildir par défaut, Courier IMAP
			représente un excellent choix.
			</p>

			<pre caption = "Emerger et tester Courier-imap">
# <c>emerge courier-imap</c>
# <c>rc-update add courier-imapd default</c>
 * courier-imapd added to runlevel default...
 * Caching service dependencies...                        [ ok ]
 * rc-update complete.
# <c>nano -w /etc/courier-imap/authdaemonrc</c>
# <c>/etc/init.d/courier-imapd start</c>
# <c>telnet localhost 143</c>
Trying 127.0.0.1...
Connected to localhost.localdomain.
Escape character is '^]'.
* OK Courier-IMAP ready. Copyright 1998-2001 Double Precision, Inc.
See COPYING for distribution information.
1 LOGIN grant passwd <comment>(&lt;-- replace "grant" w/ your username
and "passwd" w/ your password)</comment>
1 OK LOGIN OK
<comment>(Hit &lt;ctrl&gt;-"]" and type "quit" to exit)</comment>
			</pre>

			<pre caption="Autorisation valide dans le fichier  /etc/courier-imap/authdaemonrc">
##NAME: authmodulelist:0
#
# The authentication modules that are linked into authdaemond.  The
# default list is installed.  You may selectively disable modules simply
# by removing them from the following list.  The available modules you
# can use are: authcustom authcram authuserdb authpam

#authmodulelist="authcustom authcram authuserdb authpam"
authmodulelist="authpam"
			</pre>

			<impo>Courier-IMAP met généralement en dur le nom du Maildir utilisé dans son script de démarrage,
			<path>/usr/lib/courier-imap/imapd.rc</path> comme suit <path>$HOME/Maildir</path>.
			Gentoo linux, utilise plutôt $HOME/.maildir, ce qui fait que l'ebuild modifie le script  <path>imapd.rc</path>
			afin d'utiliser <e>$MAILDIR</e>, qui est obtenu à partir du script de démarrage de Gentoo
			<path>/etc/init.d/courier-imap</path>.  Si vous choisissez d'utiliser une boîte mail utilisateur différente de
			<path>.maildir</path>,  il vous faudra alors modifier cette ligne<e>MAILDIR=.maildir</e> dans le script de démarrage de courier.</impo>

			<p>Si vous voulez utiliser Courier IMAP en conjonction avec SSL, il vous suffit de créer un certificat IMAP SSL
			(et indiquer à courier-imap où le trouver),
			</p>

			<pre caption = "Créer un certificat SSL pour IMAP">
# <i>/usr/sbin/mkimapdcert</i>
			</pre>

			<p>et de démarrer IMAP SSL, .
			</p>

			<pre caption = "Ajout de Courier IMAP aux scripts de démarrage">
# <c>rc-update add courier-imapd-ssl default</c>
# <c>/etc/init.d/courier-imapd-ssl start</c>
			</pre>

			<p>Vous pouvez à présent vérifier la bonne marche de votre serveur
			avec un client pouvant utiliser IMAP et SSL tel que netscape, kmail ou mutt.
			</p>

			<pre caption = "Vérifier votre connexion IMAP">
# <c>mutt -f imap://localhost</c>
			</pre>

			<pre caption = "Vérifier votre connexion SSL IMAP">
# <c>mutt -f imaps://localhost</c>
			</pre>
		</body>
	</section>

	<section>
		<title>Squirrelmail</title>
		<body>

		<p>L'installation de Squirrelmail est un jeu d'enfant sitôt que vous
		avez installé tous les programmes pré-requis.
		</p>

		<pre caption = "Emerger Squirrelmail">
# <c>emerge squirrelmail</c>
# <c>cd /home/httpd/htdocs</c>
# <c>cd squirrelmail</c>
# <c>./configure</c>
		</pre>

		<note>Si votre variable Apache : DocumentRoot n'est pas <path>/home/httpd/htdocs</path>,
		vous devrez éditer l'ebuild <path>net-mail/squirrelmail</path> pour le pointer vers le bon endroit.</note>

		<p>Squirrelmail requiert également que tous les fichiers appartiennent à l'utilisateur qui fait tourner le démon Apache
		(l'ebuild de squirrelmail considère d'ailleurs qu'ils appartiennent à l'utilisateur "apache"). Utilisez <c>./configure</c>
		pour sélectionner l'option  <e>2</e>.</p>

		<pre caption="Configuration de Squirrelmail -- Paramètres du serveur">
SquirrelMail Configuration : Read: config.php
---------------------------------------------------------
Server Settings
1.  Domain               : my.server.edu
2.  IMAP Server          : localhost
3.  IMAP Port            : 143
4.  Use Sendmail/SMTP    : SMTP
6.    SMTP Server        : localhost
7.    SMTP Port          : 25
8.    Authenticated SMTP : false
9.  Server               : courier
10. Invert Time          : false
11. Delimiter            : detect

R   Return to Main Menu
C.  Turn color off
S   Save data
Q   Quit

Command >>
		</pre>

		<p>Assurez-vous que la directive <e>Server</e> utilise <e>courier</e>.
		Retournez alors au menu principal et sélectionnez <e>4</e>, qui sont les
		options générales.
		</p>

		<pre caption="Configuration Squirrelmail -- Options Générales">
SquirrelMail Configuration : Read: config.php
---------------------------------------------------------
General Options
1.  Default Charset        : iso-8859-1
2.  Data Directory         : ../data/
3.  Attachment Directory   : /tmp/
4.  Default Left Size      : 150
5.  Usernames in Lowercase : false

R   Return to Main Menu
C.  Turn color off
S   Save data
Q   Quit

Command >>
		</pre>

		<p>J'utilise le répertoire de données à la racine d'Apache bien qu'il serait
		plus sûr d'utiliser un répertoire en dehors d'apache. J'utilise également
		<path>/tmp</path> comme répertoire pour attacher des attachements.
		</p>

		<p>Il ne reste plus qu'à redémarrer Apache et nous serons prêts ! </p>

		<pre caption = "Redémarrer Apache">
# <c>/etc/init.d/apache restart</c>
		</pre>

		<p>Pointez votre navigateur vers  <uri>https://localhost/squirrelmail/src/login.php</uri>, pour voir la page d'accueil : </p>

		<pre caption = "Tester Squirrelmail">
# <c>lynx https://localhost/squirrelmail/</c>
		</pre>

		<pre caption="Page d'accueil de Squirrelmail">
                                           SquirrelMail - Login
   	                           [sm_logo.jpg]

       	              SquirrelMail version 1.2.0 [rc2]
           	        By the SquirrelMail Development Team

               	             SquirrelMail Login

       Name: ____________________
 Password: ____________________

   	                               Login
		</pre>

		<p>(Je ne vous conseille pas d'utiliser Lynx pour vous connecter a Squirrelmail mais rien de vous en empêche !)</p>

		</body>
	</section>
</chapter>

	<chapter>
		<title>Gestion d'informations personnelles</title>

		<section>
			<title>Evolution avec support pour Palm</title>
			<body>

			<p>Evolution est un outil gérant la gestion des informations personnelles de façon très pratique
			et permettant donc de le synchroniser avec votre Palm pilot. Vous devez donc tout d'abord émerger
			évolution. Si vous comptez utiliser un assistant personnel, ajoutez "pda" dans vos variables USE
			dans le fichier <path>/etc/make.conf</path>, ce bien sûr avant de l'emerger.
			</p>

			<pre caption = "Emerger Evolution">
# <c>emerge --pretend evolution</c>
# <c>emerge evolution</c>
			</pre>

			<p>Evolution prends malheureusement assez longtemps à compiler
			(notez qu'il a besoin de <c>mozilla</c> en tant que dépendance !); vous pouvez alors
			abuser de café/thé pendant que vous attendez.
			</p>

			<p>Lors de la compilation d'<c>evolution</c>, les outils nécessaires pour votre assistant
			devraient être compilés. Afin de vous assurer qu'un utilisateur lambda peut synchroniser
			son pilote, vous allez devoir modifier quelques permissions sur le port série. Je considère ici
			que votre Palm se connecte sur le premier port série (/dev/ttyS0, ou /dev/tts/0 dans la notation "devfs").
			</p>

			<pre caption = "Ajout d'un périphérique série">
# <c>groupadd serial</c>
# <c>chown root.serial /dev/tts/0</c>
# <c>chmod g+rw /dev/tts/0</c>
# <c>ls -l /dev/tts/0</c>
crw-rw----    1 root     serial     4,  64 Dec 31  1969 /dev/tts/0
# <c>ln -s /dev/tts/0 /dev/pilot</c>
# <c>nano -w /etc/group</c> <comment>(ajoutez les utilisateurs nécessaires pour le group serial)</comment>
			</pre>

			<p>Nous venons d'ajouter un groupe "serial" au système, et vous pouvez y ajouter tous les utilisateurs
			que vous désirez qui ont besoin du port série. Nous avons également donné les permissions  "rw" (lecture/
			écriture) pour le groupe serial sur le périphérique  <path>/dev/tts/0</path>, et créé un lien symbolique <path>/dev/pilot</path>
			pointant vers <path>/dev/tts/0</path>.  Comme mentionné précédemment, les derniers changement de devfs permettent
			de conserver ce lien symbolique après redémarrage.
			</p>

			<note>
			Les utilisateurs de la version pre-rc6-r13 peuvent mettre à jour <path>sys-apps/baselayout</path>
			et <path>sys-apps/devfsd</path> (et ensuite synchroniser les fichiers "._cfg*" dans le répertoire
			<path>/etc</path>), ou bien changer les permissions et le lien symbolique directement dans le fichier
			<path>/etc/devfsd.conf</path>.
			</note>

			<p>Les utilisateurs peuvent alors utiliser <path>tools/Pilot settings</path> dans le menu option d'évolution
			afin de paramétrer leur Palm. Vous devez aussi paramétrer "Pilot Conduits" ainsi que "Pilot Link" dans le
			panneau de configuration de Gnome.
			</p>

			</body>
		</section>
	</chapter>
</guide>
