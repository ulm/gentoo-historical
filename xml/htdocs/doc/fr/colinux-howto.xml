<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/colinux-howto.xml,v 1.8 2006/08/01 00:45:38 cam Exp $ -->

<guide link="/doc/fr/colinux-howto.xml" lang="fr" disclaimer="obsolete">
<title>Configurer coLinux pour utiliser Gentoo</title>
<author title="Auteur">
  IWBCMAN
</author>
<author title="Auteur">
  janlaur
</author>
<author title="Correcteur">
  <mail link="joshua@sungentoo.homeunix.com">Joshua Preston</mail>
</author>
<author title="Correcteur">
  <mail link="avenj@gentoo.org">Jon Portnoy</mail>
</author>
<author title="Traducteur">
  <mail link="ribosome@gentoo.org">Olivier Fisette</mail>
</author>
<abstract>
Ce HOWTO présente une configuration simple permettant d'utiliser coLinux sur
votre ordinateur Windows pour exécuter Linux dans un fil d'éxécution.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->
<license/>

<version>1.5</version>
<date>2006-07-25</date>

<chapter>
<title>Introduction</title>
<section>
<title>Qu'est-ce que coLinux&nbsp;?</title>
<body>

<p>
coLinux est un programme de type démon pour Windows. Son utilité est d'exécuter
le noyau Linux dans un fil d'exécution Windows natif, permettant ainsi
d'utiliser Linux dans Windows.
</p>

<p>
Votre principale inquiétude est probablement les performances. Celles
des applications X sont mauvaises bien que ces applications restent
utilisables. Les applications ordinaires sont tout aussi rapides que sous le
vrai Linux. genlop indique même que certaines de mes compilations avec
emerge ont été plus rapides dans coLinux, mais c'est peut-être dû à une erreur
de ma part.
</p>

<warn>
coLinux est au stade alpha. Il fonctionne (et plutôt bien), mais plusieurs
fonctionnalités ne sont pas encore implémentées.
</warn>

<p>
Ce HOWTO est basé sur une compilation et une fusion de deux excellents HOWTO
postés dans les <uri link="http://forums.gentoo.org">Forums Gentoo</uri> par
IWBCMAN et janlaur. Voici, à titre de référence, des liens vers ces
discussions&nbsp;:
</p>

<ul>
  <li><uri link="http://forums.gentoo.org/viewtopic.php?t=162420">
  Article de IWBCMAN
  </uri></li>
  <li><uri link="http://forums.gentoo.org/viewtopic.php?t=163154">
  Article de janlaur
  </uri></li>
</ul>

</body>
</section>
</chapter>
<chapter>
<title>Installation</title>
<section>
<title>Obtenir coLinux</title>
<body>

<warn>
Vous devez utiliser Windows 2000, 2003 ou XP (édition
familiale ou professionnelle) pour utiliser coLinux.
</warn>

<p>
Vous devez simplement télécharger le dernier instantané à partir de <uri
link="http://colinux.org/snapshots/">coLinux.org</uri>.
</p>

<note>
coLinux-20040417.exe a été employé dans le cadre de ce HOWTO. Puisque plusieurs
bogues ont été corrigés dans cet instantané, nous vous recommandons de
l'utiliser.
</note>

<p>
Le fichier .EXE est un programme d'installation capable de télécharger une
image d'une distribution de base à partir de Sourceforge (Gentoo/Debian/Fedora).
</p>

<p>
Lancez le .EXE, utilisez les valeurs proposées par défaut sauf, bien sûr, pour
le choix de la distribution où vous devriez choisir Gentoo.
</p>

<p>
L'image sera téléchargée dans le répertoire d'installation et sera nommée
<path>gentoo-i586-ext3-2g-deluxe.bz2</path>.
</p>

<p>
Ce nouveau fichier de partition virtuelle contient une installation Gentoo
stage3. En fait, c'est davantage qu'un stage3 puisque XFree86, XFCE4, FireFox,
gaim et xchat sont inclus. Cette partition virtuelle utilise le système de
fichiers ext3.
</p>

<ul>
  <li>
    Désarchivez ce fichier dans n'importe quel disque ayant assez de place pour
    un fichier de 2 gigaoctets.
  </li>
  <li>Il ne devrait pas y avoir d'espace dans le chemin d'accès du fichier.</li>
  <li>
    Si vous le souhaitez, vous pouvez supprimer le fichier .bz2 après le
    désarchivage.
  </li>
</ul>

<p>
Vous aurez sans doute besoin de winrar pour Windows pour le désarchivage.
Consultez <uri link="http://wiki.colinux.org/cgi-bin/NiceTools">coLinux
Nice Tools page</uri> pour trouver les outils pour l'extraction des fichiers
images et pour la création de partitions virtuelles de mémoire virtuelle.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Configuration</title>
<section>
<title>Modifier le fichier de configuration</title>
<body>

<p>
Il n'y a qu'un seul fichier de configuration&nbsp;; il se trouve dans le
répertoire d'installation et se nomme <path>default.colinux.xml</path>.
Ouvrez-le avec votre éditeur favori et éditez-le comme suit&nbsp;:
</p>

<pre caption="default.colinux.xml">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;colinux&gt;
    <comment>&lt;!-- Votre chemin d'accès peut varier quelque peu. --&gt;</comment>
    &lt;block_device index="0" path="\DosDevices\e:\gentoo-i586-ext3-2g-deluxe" enabled="true"&gt;&lt;/block_device&gt;
    &lt;bootparams&gt;root=/dev/cobd0&lt;/bootparams&gt;
    &lt;image path="vmlinux"&gt;&lt;/image&gt;
    <comment>&lt;!-- Ajustez la taille selon vos besoins. --&gt;</comment>
    &lt;memory size="256"&gt;&lt;/memory&gt;
    <comment>&lt;!-- Assurez-vous que name= le nom exact du périphérique TAP de vos Connexions réseaux ! --&gt;</comment>
    &lt;network index="0" type="tap" name="TAP"&gt;&lt;/network&gt;
&lt;/colinux&gt;
</pre>

<p>
Changez le chemin pour l'endroit où vous avez désarchivé l'image et configurez
la quantité de mémoire que vous souhaitez allouer à coLinux.
</p>

</body>
</section>
<section>
<title>Paramétrer le réseau</title>
<body>

<p>
Vous devriez maintenant pouvoir démarrer coLinux en double-cliquant sur
colinux-daemon.exe, mais, puisque la plupart des gens vondront aussi un accès
au réseau, nous allons d'abord configurer cet accès. Commencez par installer
l'adaptateur réseau virtuel&nbsp;:
</p>

<ul>
  <li>
    Choisissez «&nbsp;Ajout de matériel&nbsp;» dans le Panneau de
    configuration, puis cliquez sur «&nbsp;Suivant&nbsp;».
  </li>
  <li>
    Cliquez sur «&nbsp;Oui, j'ai déjà connecté le matériel.&nbsp;», puis
    cliquez sur «&nbsp;Suivant&nbsp;».
  </li>
  <li>
    Dans la fenêtre suivante, faites défiler la liste jusqu'à la fin,
    choisissez «&nbsp;Ajoutez un nouveau périphérique matériel.&nbsp;», puis
    cliquez sur «&nbsp;Suivant&nbsp;».
  </li>
  <li>
    Choisissez «&nbsp;Installer le matériel que je sélectionne manuellement
    dans la liste&nbsp;», puis cliquez sur «&nbsp;Suivant&nbsp;».
  </li>
  <li>
    Sélectionnez «&nbsp;Cartes réseau&nbsp;» puis cliquez sur
    «&nbsp;Suivant&nbsp;».
  </li>
  <li>
    Cliquez sur «&nbsp;Disque fourni...&nbsp;» et naviguez jusqu'à l'emplacement
    où vous avez désarchivé coLinux. Entrez dans le répertoire
    «&nbsp;netdriver&nbsp;». Un fichier devrait y être listé.
  </li>
  <li>Sélectionnez celui-ci, puis cliquez sur «&nbsp;Ouvrir&nbsp;».</li>
</ul>

<p>
Votre adaptateur réseau virtuel est maintenant installé&nbsp;! Vous pouvez le
configurer comme n'importe quel autre adaptateur sur votre système.
</p>

<ul>
  <li>
    Allez dans «&nbsp;Panneau de configuration -&gt; Connexions
    réseau&nbsp;»
  </li>
  <li>
    Cliquez sur votre connexion Internet, puis maintenez la touche contrôle
    enfoncée et cliquez sur votre nouvelle connexion réseau TAP.
  </li>
  <li>
    Cliquez avec le bouton droit et choisissez «&nbsp;Connexions de
    pont&nbsp;».
  </li>
</ul>

<p>
Windows devrait créer un pont réseau. Si vous avez toujours une connexion
active à Internet dans Windows, cela fonctionne probablement.
</p>

</body>
</section>
<section>
<title>Démarrer</title>
<body>

<p>
Maintenant, vous êtes prêt à ouvrir colinux-daemon.exe et à être transporté par
sa magie&nbsp;: vous êtes désormais dans une installation Gentoo de base avec
des programmes tels que XFree86, XFCE4, gaim, le noyau Linux 2.4.26 et d'autres
applications de base à votre disposition.
</p>

<p>
Une fois dans cet environnement, vous souhaiterez d'abord régler quelques
petites choses&nbsp;:
</p>

<ul>
  <li>
    Ouvrez une session en tant que root et définissez le mot de passe root.
  </li>
  <li>Vérifiez que le réseau fonctionne.</li>
  <li>
    Démarrez sshd, et utilisez le client ssh Putty pour vous y connecter.
    (Utilisez cygwin comme type de terminal.)
  </li>
</ul>

<p>
Vous voudrez sans doute mettre votre système à jour. Faisons-le
maintenant&nbsp;:
</p>

<pre caption="Finaliser l'installation">
# <i>emerge --sync</i>
# <i>env-update &amp;&amp; source /etc/profile</i>
<comment>(Si vous préférez utiliser vnc.)</comment>
# <i>emerge tightvnc</i>
</pre>

<p>
Maintenant, vous devez configurer X. Vous pouvez simplement copier le fichier
<path>/etc/X11/XF86Config</path> de votre installation Linux dans votre
installation coLinux (si c'est possible).
</p>

<note>
Vous ne pouvez utiliser que les pilotes fournis avec X (et non pas
nvidia-glx/kernel, par exemple). De plus, cela ne semble fonctionner qu'avec une
profondeur de couleurs de 16&nbsp;; vous devrez donc éditer vos fichiers
quelque peu. Souvenez-vous que vous n'avez pas d'accès direct au matériel vidéo
de Windows&nbsp;; vous devrez donc copier le fichier à partir d'une autre
source ou le créer manuellement. Alternativement, vous pouvez démarrer votre
machine avec Knoppix et laisser ce dernier créer un fichier
<path>XF86Config</path> pour vous.
</note>

<p>
Lorsque cela est terminé, créez <path>~/.vnc/xstartup</path>&nbsp;:
</p>

<pre caption="Exemple de fichier ~/.vnc/xstartup">
startxfce4 &amp;
</pre>

<p>
Maintenant, exécutez vncserver avec vos options. Un mot de passe vous sera
demandé&nbsp;; créez-en un et souvenez-vous en.
</p>

<pre caption="Démarrer vncserver">
$ <i>vncserver -geometry "1024x768" -depth 16</i>
</pre>

<p>
Tout ce dont vous avez besoin désormais, c'est de télécharger vnc pour Windows,
d'exécuter vncviewer et de fournir à ce dernier l'adresse IP de votre
adaptateur réseau (c-à-d. 192.168.0.X:1) ainsi que votre mot de passe. Si
tout va bien, vncviewer devrait maintenant lancer votre bureau XFCE4.
Amusez-vous comme un fou&nbsp;!
</p>

</body>
</section>
</chapter>
<chapter>
<title>Sujets avancés</title>
<section>
<title>Ajouter une partition de mémoire virtuelle</title>
<body>

<p>
Téléchargez un fichier de mémoire virtuelle
<uri link="http://gniarf.nerim.net/colinux/swap/">ici</uri> (le nom du fichier
indique sa taille). Désarchivez-le là où vous disposez de l'espace disque
nécessaire et ajoutez ce qui suit à votre
<path>default.colinux.xml</path>&nbsp;:
</p>

<pre caption="Ajouter une partition de mémoire virtuelle">
    <comment>&lt;-- index="1" signifie que la partition sera représentée par /dev/cobd1. --&gt;</comment>
    &lt;block_device index="1" path="\DosDevices\e:\swap-file" enabled="true"&gt;&lt;/block_device&gt;
</pre>

<p>
Maintenant, redémarrez coLinux et exécutez <c>mkswap</c>&nbsp;:
</p>

<pre caption="Régler votre partition de mémoire virtuelle">
# <i>mkswap /dev/cobd1</i>
</pre>

<p>
Vous devrez également modifier votre fichier <path>/etc/fstab</path>. Ajoutez-y
la ligne suivante&nbsp;:
</p>

<pre caption="Modifier /etc/fstab">
/dev/cobd1    none    swap    sw    0 0
</pre>

<p>
Maintenant, activez la mémoire virtuelle sans redémarrer&nbsp;!
</p>

<pre caption="Activer la mémoire virtuelle">
# <i>swapon -a</i>
</pre>

</body>
</section>
<section>
<title>Accéder à vos partitions Linux existantes à partir de coLinux</title>
<body>

<p>
Le site Web de coLinux fournit un document qui couvre les
<uri link="http://wiki.colinux.org/cgi-bin/GettingStarted">bases</uri> de
l'accès aux partitions Linux à partir de coLinux. Après cette lecture, vous
serez capable d'écrire une configuration semblable à celle-ci&nbsp;:
</p>

<pre caption="Nouveau default.colinux.xml">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;colinux&gt;
    &lt;block_device index="0" path="\DosDevices\e:\gentoo-i586-ext3-2g-deluxe" enabled="true"&gt;&lt;/block_device&gt;
    &lt;block_device index="1" path="\DosDevices\e:\swap-file" enabled="true"&gt;&lt;/block_device&gt;
    <comment>&lt;!-- Votre chemin d'accès peut varier selon la disposition de vos disques, etc. --&gt;</comment>
    &lt;block_device index="2" path="\Device\Harddisk0\Partition5" enabled="true"&gt;&lt;/block_device&gt;
    &lt;bootparams&gt;root=/dev/cobd0&lt;/bootparams&gt;
    &lt;image path="vmlinux"&gt;&lt;/image&gt;
    &lt;memory size="256"&gt;&lt;/memory&gt;
    &lt;network index="0" type="tap" name="TAP"&gt;&lt;/network&gt;
&lt;/colinux&gt;
</pre>


<p>
Vous devrez (re)démarrer coLinux pour que les changements soient pris en
considération. Vous devriez pouvoir accéder à
«&nbsp;\Device\Harddisk0\Partition5&nbsp;» dans coLinux par le biais du fichier
matériel /dev/cobd2.
</p>

<pre caption="Monter">
# <i>mount /dev/cobd2 /mnt/linux</i>
</pre>

<impo>
Souvenez-vous que cette prodécure ne fonctionne que pour les partitions que
Windows n'utilise pas. Si Windows utilise une partition, vous devrez employer
smbfs pour y accéder.
</impo>

</body>
</section>
</chapter>
<chapter>
<title>Questions et réponses</title>
<section>
<title>Quelles options USE devrais-je utiliser&nbsp;?</title>
<body>

<p>
Les options USE sont les mêmes que pour un système natif.
</p>

</body>
</section>
<section>
<title>Puis-je partager ma connexion par numérotation&nbsp;?</title>
<body>

<p>
C'est le partage de connexion Internet qui est utilisé pour connecter le réseau
Linux au réseau externe. Vous devriez donc pouvoir faire un pont entre la
connexion TAP et votre connexion PPP.
</p>

</body>
</section>
<section>
<title>Le noyau Linux peut-il toujours accéder au matériel&nbsp;?</title>
<body>

<p>
coLinux émule chaque type de matériel nécessaire. L'accès aux disques est
émulé, tout comme le réseau, etc. Le matériel USB, le rendu direct et les
cartes son ne sont pas encore supportés. La bonne nouvelle est que le travail
est en cours pour ajouter le support USB à coLinux (excluant les claviers et
souris USB).
</p>

</body>
</section>
<section>
<title>Y a-t-il des alternatives à coLinux&nbsp;?</title>
<body>

<p>
Oui&nbsp;!
</p>

<ul>
<li><uri link="http://www.vmware.com/">VMWare</uri></li>
<li><uri link="http://bochs.sourceforge.net/">Bochs</uri></li>
</ul>

</body>
</section>
<section>
<title>Est-ce que coLinux fonctionnera avec un noyau 2.6&nbsp;?</title>
<body>

<p>
Pour l'instant, non&nbsp;; un noyau de la série 2.4 est utilisé, modifié pour
permettre l'émulation du matériel et le partage de ressources avec Windows.
</p>

</body>
</section>
<section>
<title>Pourquoi X ne fonctionne-t-il pas&nbsp;?</title>
<body>

<p>
Il n'y a pas de support natif pour X. Vous devrez utiliser vnc ou Cygwin-X11.
Suivez les directives du présent HOWTO.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Conclusion</title>
<section>
<body>

<p>
Il existe une gamme énorme de possibilités pour coLinux. Vous pouvez exécuter
apache, samba, dhcp, mail, distcc, nfs ou <e>n'importe quel</e> serveur sous
coLinux. À l'exception du support du matériel et de l'accès aux disques, on ne
remarque même pas que Linux fonctionne dans Windows, ce qui est vraiment
renversant.
</p>

</body>
</section>
</chapter>
</guide>
