<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/Attic/ebuild-mistakes.xml,v 1.6 2004/06/28 22:36:08 neysx Exp $ -->
<guide link="/doc/fr/ebuild-mistakes.xml" lang="fr">
<title>Les erreurs fréquentes dans les ebuilds</title>
<author title="Auteur">
  <mail link="liquidx@gentoo.org">Alastair Tse</mail>
</author>
<author title="Traducteur">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>

<abstract>
Ce document liste les erreurs fréquemment rencontrées dans les ebuilds envoyés
par des développeurs ou des contributeurs.
</abstract>

<license/>

<version>1.0</version>
<date>10 février 2004</date>

<chapter>
<title>Les erreurs fréquentes dans les ebuilds</title>
<section>
<title>Introduction</title>
<body>

<p>
Ce document liste des erreurs fréquemment rencontrées dans les ebuilds proposés
par des utilisateurs. Veuillez vérifier vos ebuilds en fonction de celles-ci.
Avant de proposer un ebuild, vous devriez consulter la <uri
link="/doc/en/policy.xml">Gentoo Linux Development Policy</uri> et le <uri
link="/doc/fr/gentoo-howto.xml">HOWTO pour les développeurs Gentoo</uri>. Vous
devriez aussi vous inspirer des ebuilds officiels.
</p>

<p>
De plus, consulter des ebuilds officiels qui utilisent les eclass est aussi une
bonne idée. Le <uri link="/doc/en/eclass-howto.xml">Eclass HOWTO</uri> vous
sera utile. Enfin, vous devriez aussi lire le guide <uri
link="/doc/fr/ebuild-submit.xml">Proposer des ebuilds</uri> avant d'envoyer le
vôtre.
</p>

</body>
</section>
<section>
<title>En-têtes manquants ou invalides</title>
<body>

<p>
Quand vous envoyez votre ebuild, l'en-tête doit être <e>exactement</e> le même
que dans le fichier <path>/usr/portage/skel.ebuild</path>. Ne le modifiez
surtout pas et vérifiez bien que la ligne <c>$Header:&#36;</c> est telle quelle.
</p>

<p>
Les trois premières lignes <e>doivent</e> être ainsi&nbsp;:
</p>

<pre caption="En-tête valide">
# Copyright 1999-2004 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header:&#36;
</pre>

<p>
Dans le cas d'un patch ou d'une nouvelle version d'un même paquet, et
uniquement dans ce cas, il n'est pas nécessaire de modifier la ligne
<c>$Header: ... :&#36;</c> La ligne doit être présente, mais elle sera mise à
jour automatiquement par CVS quand nous l'enregistrerons dans l'arbre Portage.
</p>

</body>
</section>
<section>
<title>IUSE manquant</title>
<body>

<p>
L'erreur la plus fréquente est sans doute l'oubli de la variable IUSE. D'après
le guide <uri link="/doc/fr/gentoo-howto.xml">HOWTO pour les développeurs
Gentoo</uri>, vous devez spécifier cette variable, même si l'ebuild ne dépend
d'aucune option de la variable USE.
</p>

<pre caption="Exemple de IUSE vide">
IUSE=""
</pre>

</body>
</section>
<section>
<title>Redéfinition de P, PV, PN, PF</title>
<body>

<p>
Vous ne devriez jamais redéfinir ces variables. Utilisez toujours MY_P, MY_PN,
MY_PV, P0, etc.  Vous trouverez de nombreux exemples dans les ebuilds
officiels. Beaucoup d'ebuilds utilisent les substitutions de valeurs de bash
(«&nbsp;parameter expansion&nbsp;» en anglais). Veuillez consulter la page man 
de bash pour en comprendre le mécanisme.
</p>

<p>
À propos, si vous tombez sur un paquet qui rédéfinit une de ces valeurs, ne
copiez pas, envoyez plutôt un bogue pour le signaler.
</p>

</body>
</section>
<section>
<title>Utiliser le numéro de version dans SRC_URI et S</title>
<body>

<p>
Vous devriez éviter de mentionner le numéro de version dans les variables
SRC_URI et S. Utilisez plutôt ${PV} or ${P}. Cela facilite le passage aux
versions suivantes. Si le nom du fichier à télécharger ne correspond pas
exactement au nom de l'ebuild, utilisez la variable MY_P. Dans l'exemple
ci-dessous, l'ebuild du paquet dev-python/pyopenal doit télécharger une archive
nommée PyOpenAL.
</p>

<pre caption="Redéfinition d'une variable">
MY_P=${P/pyopenal/PyOpenAL}
SRC_URI="http://oomadness.tuxfamily.org/downloads/${MY_P}.tar.gz"
S=${WORKDIR}/${MY_P}
</pre>

</body>
</section>
<section>
<title>Erreurs de syntaxe dans DEPEND</title>
<body>

<p>
De nombreuses erreurs semblent se trouver dans les variables DEPEND et RDEPEND.
Voici quelques points importants que vous devriez vérifier&nbsp;:
</p>

<ul>
  <li>
    <e>Indiquez toujours la catégorie.</e><br />
    Par exemple, indiquez <c>&gt;=x11-libs/gtk+-2</c> au lieu de <c>&gt;=gtk+-2</c>.
  </li>
  <li>
    <e>Ne mettez pas d'étoile (*) pour les dépendances &gt;=.</e><br />
    Par exemple, précisez toujours <c>&gt;=x11-libs/gtk+-2</c> et pas
    <c>&gt;=x11-libs/gtk+-2*</c>.
  </li>
  <li><e>Spécifique à GTK&nbsp;: utilisez toujours =x11-libs/gtk+-1.2* pour les applications GTK+1.</e></li>
  <li>
    <e>Ne définissez jamais de dépendance sur des paquets virtuels.</e><br />
    N'indiquez pas de dépendance sur gnome-base/gnome, mais bien sur des bibliothèques précises
    comme libgnome.
  </li>
  <li>
    <e>Une dépendance par ligne.</e><br />
    Ne mettez pas plusieurs dépendances sur la même ligne, car cela rend le code plus difficile à lire.
  </li>
</ul>

</body>
</section>
<section>
<title>DEPEND est incomplet</title>
<body>

<p>
Une autre erreur fréquente est une variable DEPEND incomplète. L'ebuild
fonctionne pour l'utilisateur qui le propose, mais toutes les dépendances n'ont
pas été vérifiées. Voici quelques trucs pour déterminer les dépendances&nbsp;:
</p>

<ul>
  <li>
    <e>Regardez dans les fichiers configure.in ou configure.ac</e><br />
    Voyez si des paquets y sont détectés. Cherchez des appels à pkg-config ou
    des fonctions AM_* qui testent des versions particulières.
  </li>
  <li>
    <e>Regardez les fichiers inclus .spec</e><br />
    Les fichiers .spec contiennent des indications quant aux dépendances requises.
    Ne considérez pas qu'ils suffisent à toutes les déterminer.
  </li>
  <li>
    <e>Consultez le site de l'application ou de la bibliothèque</e><br />
    Certains projets mentionnent leurs dépendances sur leur page d'accueil.
  </li>
  <li>
    <e>Lisez les fichiers README et INSTALL du paquet.</e><br />
    Ils contiennent souvent des indications utiles sur la compilation et l'installation.
  </li>
  <li>
    <e>N'oubliez pas les dépendances autres que les programmes telles que pkg-config,
    la génération de documentation, etc.</e><br />
    Souvent, la procédure de compilation et d'installation a besoin d'outils tels que
    intltool, libtool, pkg-config, doxygen, scrollkeeper, gtk-doc, etc.
    Verifiez qu'ils sont bien mentionnés.
  </li>
</ul>

</body>
</section>
<section>
<title>LICENSE invalide</title>
<body>

<p>
Une autre erreur fréquente est de spécifier une licence invalide. Par exemple,
<c>GPL</c> n'est pas une licence valide. Vous devez spécifier <c>GPL-1</c> ou
<c>GPL-2</c>. La même remarque s'applique à la <c>LGPL</c>. Vérifiez que la
licence indiquée dans la variable <c>LICENSE</c> existe dans le répertoire
<path>/usr/portage/licenses</path>. La licence applicable est généralement
précisée dans le fichier <path>COPYING</path> du projet. Si aucune licence
n'est précisée, utilisez <c>GPL-1</c> ou <c>GPL-2</c>, il est probable que le
projet utilise <c>GPL-2</c>.
</p>

<p>
Si le projet est soumis à une licence particulière qui n'est pas mentionnée dans
<path>/usr/portage/licenses/</path>, vous devriez la fournir dans un fichier
séparé.
</p>

</body>
</section>
<section>
<title>Architectures non-testées</title>
<body>

<p>
N'indiquez pas d'architectures dans la variable KEYWORDS sur lesquelles vous
n'avez pas testé le paquet. De plus, tous les ebuilds doivent d'abord utilisez
~ARCH, en général ~x86. Quand vous proposez un ebuild pour une nouvelle
version d'un paquet, ajoutez un tilde (~) devant les architectures qui n'en
n'ont pas. Pour rappel, un <c>~</c> indique que l'ebuild doit encore subir des
tests.
</p>

</body>
</section>
<section>
<title>SLOT manquant</title>
<body>

<p>
Vérifiez que la variable SLOT est définie dans votre ebuild. Si vous ne
l'utilisez pas, attribuez-lui la valeur "0". 
</p>

<pre caption="Variable SLOT inutilisée">
SLOT="0"
</pre>

</body>
</section>
<section>
<title>Variables DESCRIPTION et HOMEPAGE incorrectes</title>
<body>

<p>
Veuillez vérifier que la variable HOMEPAGE contient bien l'adresse de la page
d'accueil du projet et que la variable DESCRIPTION le décrit très
succinctement&nbsp;; une courte phrase doit suffire.
</p>

</body>
</section>
<section>
<title>Espaces non remplacés par des tabulations </title>
<body>

<p>
Il est désagréable de devoir reformater des lignes parce que l'ebuild proposé
ne respecte pas les conventions d'usage qui demandent d'utiliser des TABS
plutôt que des espaces.
</p>

</body>
</section>
<section>
<title>Espaces en fin de ligne</title>
<body>

<p>
N'oubliez pas de soumettre vos ebuilds à l'outil repoman, il vous dira si des
espaces traînent en fin de ligne ou sur des lignes vides.
</p>

</body>
</section>
<section>
<title>Redondance S=${WORKDIR}/${P}</title>
<body>

<p>
Si <c>S=${WORKDIR}/${P}</c>, il n'est pas utile d'assigner la variable S, car
c'est le comportement par défaut. Ne définissez la variable S que si elle
diffère de <c>${WORKDIR}/${P}</c>.
</p>

</body>
</section>
<section>
<title>Documentation manquante</title>
<body>

<p>
Si le paquet contient de la documentation, vérifiez qu'elle est installée avec
la fonction <c>dodoc</c> ou en la copiant dans
<path>/usr/share/doc/${PF}</path>. N'oubliez pas de tester les codes d'erreur
que <c>dodoc</c> ou <c>doins</c> peuvent retourner.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Erreurs fréquentes lors de l'envoi d'ebuilds</title>
<section>
<title>Introduction</title>
<body>

<p>
Veuillez proposer vos ebuilds en respectant la procédure décrite dans le guide
<uri link="/doc/fr/ebuild-submit.xml">Proposer des scripts ebuilds</uri>.
</p>

</body>
</section>
<section>
<title>Ebuild dans une archive compressée</title>
<body>

<p>
Veuillez s'il vous plaît <b>ne pas</b> envoyer vos ebuilds dans une archive tar
ou dans un fichier compressé.  Ajoutez d'éventuels patchs séparément, cela
facilite grandement leur consultation en ligne.
</p>

</body>
</section>
<section>
<title>Ebuilds dans la description</title>
<body>

<p>
Ne copiez pas votre ebuild dans la zone de texte destinée à recevoir un
commentaire.
</p>

</body>
</section>
<section>
<title>Pas de description du paquet</title>
<body>

<p>
Veuillez préciser à quoi sert le paquet installé par votre ebuild et indiquez
l'URL de la page d'accueil du projet.
</p>

</body>
</section>
<section>
<title>Mises à jour sans description</title>
<body>

<p>
Si vous proposez une mise à jour d'un paquet, veuillez expliquer ce que vous
avez modifié ou ce qui a changé. Si une nouvelle fonctionnalité a été ajoutée,
par exemple, et qu'elle dépend d'une option de la variable USE, précisez-le, ne
nous forcez pas à le découvrir par nous-même.
</p>

<p>
Proposer un diff plutôt qu'une nouvelle copie pour une simple mise à jour est
une bonne idée. Utilisez la commande suivante&nbsp;:
</p>

<pre caption="Créer un diff d'un ebuild">
$ <i>diff -u le-paquet-0.1.0.ebuild le-paquet-0.2.0.ebuild &gt; ~/le-paquet-0.2.0.diff</i>
</pre>

</body>
</section>
<section>
<title>Simples mises à jour</title>
<body>

<p>
Si vous proposez une nouvelle version d'un paquet, pensez à vérifier que
l'ebuild actuel fonctionne et que les modifications sont bien installées par la
nouvelle version, y compris la documentation, par exemple. Si aucune
modification ne doit être apportée à l'ebuild, inutile d'envoyer une nouvelle
copie ou un diff, indiquez simplement qu'une nouvelle version est disponible,
que vous l'avez testée et qu'elle s'installe correctement.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Commentaires et suggestions</title>
<section>
<body>

<p>
Veuillez envoyer vos commentaires, corrections ou suggestions à <mail
link="liquidx@gentoo.org">Alastair Tse</mail> (en anglais).
</p>

</body>
</section>
</chapter>
</guide>
