<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: nvidia-guide.xml,v 1.25 2007/03/24 17:28:52 cam Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/nvidia-guide.xml" lang="fr">

<title>Guide nVidia pour Linux Gentoo</title>

<author title="Auteur">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Correcteur">
  <mail link="curtis119@gentoo.org">M Curtis Napier</mail>
</author>
<author title="Correcteur">
  <mail link="nightmorph@gentoo.org">Joshua Saddler</mail>
</author>
<author title="Correcteur">
  <mail link="wolf31o2@gentoo.org">Chris Gianelloni</mail>
</author>
<author title="Traducteur">
  <mail link="cam@gentoo.org">Camille Huot</mail>
</author>
<author title="Traducteur">
  <mail link="koppatroopa@yahoo.fr">Bertrand Coppa</mail>
</author>
<author title="Traducteur">
  <mail link="nuage_oort@hotmail.com">Sophie Leroy</mail>
</author>
<author title="Traducteur">
  <mail link="koreth@acissi.net">Sébastien Baudru</mail>
</author>

<abstract>
De nombreux Gentooistes possèdent une carte nVidia dans leur système. nVidia
fournit des pilotes Linux spécifiques pour améliorer les performances de votre
carte. Ce guide vous explique comment installer et configurer ces pilotes.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://createivecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.30</version>
<date>2007-03-23</date>

<chapter>
<title>Introduction</title>
<section>
<body>

<p>
Les pilotes nVidia présents dans l'arbre sont fournis par NVidia et sont
compilés en fonction de votre noyau Linux. Ils contiennent un binaire qui
s'occupe de la communication avec la carte. Ces pilotes sont constitués de deux
parties&nbsp;: un module noyau et un pilote X11, qui sont tous deux contenus
dans un unique paquet. En raison de la façon qu'a nVidia de construire ses
pilotes, vous aurez quelques choix à faire avant d'installer ceux-ci.
Actuellement, deux paquets sont présents dans l'arbre. Le premier,
<c>nvidia-drivers</c>, contient les derniers pilotes nVidia tandis que le
second, <c>nvidia-legacy-drivers</c> supporte les anciennes cartes, depuis la
TNT originelle jusqu'aux GeForce 6800. Vous ne devriez utiliser les
<c>nvidia-legacy-drivers</c> que si votre carte n'est pas reconnue par les
<c>nvidia-drivers</c>.
</p>

<note>
Auparavant, Gentoo fournissait deux paquets distincts&nbsp;: un pour le module
nVidia du noyau (<c>nvidia-kernel</c>) et un pour les bibliothèques GLX de X11
(<c>nvidia-glx</c>.) Ces ebuilds ont maintenant été retirés de l'arbre de
Portage au profit des paquets <c>nvidia-drivers</c> et
<c>nvidia-legacy-drivers</c>. Si vous utilisez <c>nvidia-kernel</c> et
<c>nvidia-glx</c>, vous devriez migrer vers les nouveaux paquets.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Compatibilité</title>
<section>
<title>nvidia-legacy-drivers</title>
<body>

<p>
Le paquet <c>nvidia-legacy-drivers</c> supporte les cartes nVidia les plus
anciennes qui ne sont plus supportées dans la dernière version des pilotes.
Cette branche est basée sur une base de code antérieure de nVidia et supporte
les dernières versions de noyaux et de X.Org. Vous devriez utiliser ces pilotes
si vous possédez une carte TNT, TNT2, GeForce ou GeForce 2. Vous trouverez une
liste des cartes compatibles dans l'appendice A de
<uri>http://download.nvidia.com/XFree86/Linux-x86/1.0-7184/README/readme.txt</uri>.
</p>

</body>
</section>
<section>
<title>nvidia-drivers</title>
<body>

<p>
La branche <c>nvidia-drivers</c> supporte les caractéristiques des cartes nVidia
les plus récentes. La dernière version de ces pilotes ne contient plus le
support pour les cartes à base de NV2x. Si vous possédez une carte des séries
GeForce 3 ou GeForce 4, vous devriez ajouter
<c>&gt;=x11-drivers/nvidia-drivers-1.0.9700</c> dans votre fichier
<path>/etc/portage/package.mask</path>. Cela évitera qu'une version récente du
pilote, incompatible avec votre carte, ne soit installée. Vous pouvez consulter
la liste de compatibilité à l'adresse
<uri>http://us.download.nvidia.com/XFree86/Linux-x86/1.0-9746/README/appendix-a.html</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configuration de votre carte</title>
<section>
<title>Configuration du noyau</title>
<body>

<p>
Les pilotes nVidia dont on vient de parler sont installés et exécutés en
fonction de votre noyau courant. Puisque le pilote consiste en un module, votre
noyau doit, logiquement, supporter le chargement de modules. Si vous utilisez
<c>genkernel all</c> pour la configuration de votre noyau, les paramètres
appropriés ont déjà été choisis pour vous. Autrement, vérifiez vous-même votre
configuration pour vous assurer que les options appropriées sont
sélectionnées&nbsp;:
</p>

<pre caption="Activation du chargement des modules du noyau">
Loadable module support ---&gt;
  [*] Enable loadable module support
</pre>

<p>
Vous devez aussi activer l'option <e>Memory Type Range Register</e>&nbsp;:
</p>

<pre caption="Activer MTRR">
Processor and Features ---&gt;
  [*] MTRR (Memory Type Range Register) support
</pre>

<p>
Si vous disposez d'une carte graphique AGP, vous pouvez aussi, optionnellement,
activer le support d'<c>agpgart</c> dans le noyau, soit en dur, soit en module.
Si vous n'utilisez pas le agppart du noyau, les pilotes utiliseront leur propre
implémentation, appelée <c>NvAGP</c>. Sur certains systèmes, cette
implémentation est plus performante que le agppart du noyau, et sur d'autres
systèmes, elle l'est moins. Pour obtenir la performance maximale, vous devrez
évaluer l'une ou l'autre de ces option sur vote propre système. Si vous n'êtes
pas sûr, utiliser la version agppart du noyau&nbsp;:
</p>

<pre caption="Activer agpgart">
Device Drivers ---&gt;
Character devices ---&gt;
&lt;*&gt; /dev/agpgart (AGP Support)
</pre>

<note>
Sur les AMD64, la configuration de l'AGPGART est contrôlée par le IOMMU.
</note>

</body>
</section>
<section>
<title>Remarques concernant certaines architectures</title>
<body>

<impo>
Pour les processeurs x86 et AMD64, il y a conflit entre le pilote interne du
noyau et le pilote binaire fourni par nVidia. Si vous compilez votre noyau pour
ces processeurs, il faut retirer complètement le support pour le pilote
interne&nbsp;:
</impo>

<pre caption="Retirer le pilote interne">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt; &gt;   nVidia Framebuffer Support
&lt; &gt;   nVidia Riva support
</pre>

<p>
Le pilote <c>VESA</c> est une bonne alternative pour le framebuffer&nbsp;:
</p>

<pre caption="Activer le support de VESA">
Device Drivers ---&gt;
Graphics Support ---&gt;
&lt;*&gt;   VESA VGA graphics support
</pre>

<p>
Ensuite, dans la section «&nbsp;VESA driver type&nbsp;», choisissez entre
<c>vesafb</c> ou <c>vesafb-tng</c>. Si vous avez un processeur AMD64,
choisissez <c>vesafb</c> plutôt que <c>vesafb-tng</c>&nbsp;:
</p>

<pre caption="Choisir un type de framebuffer">
(X) vesafb
( ) vesafb-tng
</pre>

<p>
Pour plus d'informations, vous pouvez lire
<path>/usr/src/linux/Documentation/fb/vesafb.txt</path> si vous utilisez
<c>vesafb</c> ou bien la documentation correspondant à votre pilote dans le
répertoire <path>/usr/src/linux/Documentation/fb/</path>.
</p>

</body>
</section>
<section>
<title>Poursuivre la configuration du noyau</title>
<body>

<p>
Les ebuilds <c>nvidia-drivers</c> et <c>nvidia-legacy-drivers</c> trouvent
automatiquement la version de votre noyau grâce au lien symbolique
<path>/usr/src/linux</path>. Assurez-vous que ce lien pointe vers les bonnes
sources et que votre noyau a été configuré correctement. Référez-vous à la
section «&nbsp;Configurer le noyau&nbsp;» du <uri
link="/doc/fr/handbook/">Manuel Gentoo Linux</uri> pour obtenir des
instructions détaillées sur la configuration de votre noyau.
</p>

<p>
Si vous utilisez <c>gentoo-sources-2.6.11-r6</c>, votre répertoire
<path>/usr/src/</path> pourrait ressembler à ce qui suit&nbsp;:
</p>

<pre caption="Vérifier le lien symbolique /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ls -l</i>
<comment>(Vérifiez que « linux » pointe vers le bon répertoire.)</comment>
lrwxrwxrwx   1 root root   22 Apr 23 18:33 linux -&gt; linux-2.6.11-gentoo-r6
drwxr-xr-x   4 root root  120 Apr  8 18:56 linux-2.4.26-gentoo-r4
drwxr-xr-x  18 root root  664 Dec 31 16:09 linux-2.6.10
drwxr-xr-x  18 root root  632 Mar  3 12:27 linux-2.6.11
drwxr-xr-x  19 root root 4096 Mar 16 22:00 linux-2.6.11-gentoo-r6
</pre>

<p>
Dans l'exemple ci-dessus, remarquez que le lien symbolique <c>linux</c> pointe
vers le noyau <c>linux-2.6.11-gentoo-r6</c>.
</p>

<p>
Si le lien ne pointe pas vers les sources appropriées, vous devez le mettre à
jour comme suit&nbsp;:
</p>

<pre caption="Créer ou mettre à jour le lien symbolique /usr/src/linux">
# <i>cd /usr/src</i>
# <i>ln -snf linux-2.6.11-gentoo-r6 linux</i>
</pre>

</body>
</section>
<section>
<title>Facultatif&nbsp;: vérification du support pour les anciennes cartes</title>
<body>

<note>
Malheureusement, certaines cartes graphiques un peu anciennes ne sont plus
supportées par les dernières versions de <c>nvidia-drivers</c>. nVidia fournit
une <uri link="http://www.nvidia.com/object/IO_18897.html">liste des cartes
supportées</uri>. Veuillez vérifier que votre carte s'y trouve bien avant
d'installer les pilotes.
</note>

<p>
Voici une liste de cartes anciennes qui <b>ne sont plus supportées</b>&nbsp;:
</p>

<pre caption="Cartes graphiques nVidia non supportées">
TNT
TNT2
TNT2 Pro
TNT2 Ultra
TNT2 Model 64 (M64)
TNT2 Model 64 (M64) Pro
Vanta
Vanta LT
GeForce 256
GeForce DDR
GeForce2 GTS
GeForce2 Pro
GeForce2 Ti
GeForce2 Ultra
GeForce2 MX Integrated graphics
Quadro
Quadro2 Pro
Quadro2 EX
</pre>

<p>
Si votre carte est dans cette liste, vous devrez installer le paquet
<c>nvidia-legacy-drivers</c> pour avoir le support 3D.
</p>

</body>
</section>
<section>
<title>Installer les pilotes appropriés</title>
<body>

<p>
Il est maintenant temps d'installer les pilotes.
</p>

<pre caption="Installation des modules nVidia">
<comment>(Si votre carte n'est pas dans la liste des cartes obsolètes :)</comment>
# <i>emerge nvidia-drivers</i>
<comment>(Si votre carte est listée parmi les cartes obsolètes :)</comment>
# <i>emerge nvidia-legacy-drivers</i>
</pre>

<impo>
Chaque fois que vous <uri link="/doc/fr/kernel-upgrade.xml">compilez un nouveau
noyau</uri> ou que vous recompilez votre noyau courant, vous devez exécuter
<c>emerge nvidia-drivers</c> ou <c>emerge nvidia-legacy-drivers</c> pour
réinstaller les modules nVidia.
</impo>

<p>
Lorsque l'installation est finie, lancez <c>modprobe nvidia</c> pour charger le
module du noyau en mémoire. S'il s'agit d'une mise à jour, vous devez
auparavant supprimer le module précédent.
</p>

<pre caption="Chargement du module du noyau">
# <i>lsmod | grep nvidia &amp;&amp; rmmod nvidia</i>
# <i>modprobe nvidia</i>
</pre>

<p>
Pour éviter d'avoir à charger le module à chaque démarrage, vous souhaiterez
sans doute automatiser ce processus. Pour ce faire, éditez le fichier
<path>/etc/modules.autoload.d/kernel-2.6</path> (ou <path>kernel-2.4</path> en
fonction de la version de votre noyau) et ajoutez-y <c>nvidia</c>. N'oubliez
pas d'exécuter <c>modules-update</c> par après&nbsp;:
</p>

<impo>
Si vous avez compilé <c>agpgart</c> en module, vous devrez l'ajouter à
<path>/etc/modules.autoload.d/kernel-2.6</path> (ou <path>kernel-2.4</path>
selon la version du noyau).
</impo>

<pre caption="Lancer modules-update">
# <i>modules-update</i>
</pre>

</body>
</section>
<section>
<title>Configuration du serveur X</title>
<body>

<p>
Une fois que les pilotes sont installés, vous devez configurer votre serveur X
pour qu'il utilise le pilote <c>nvidia</c> au lieu du pilote <c>nv</c> par
défaut.
</p>

<p>
Ouvrez <path>/etc/X11/xorg.conf</path> avec votre éditeur favori (<c>nano</c>
ou <c>vim</c> par exemple) et allez à la section <c>Device</c>. Dans cette
section, modifiez la ligne <c>Driver</c>&nbsp;:
</p>

<pre caption="Remplacement de nv par nvidia dans la configuration du serveur X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  <i>Driver     "nvidia"</i>
  VideoRam   65536
EndSection
</pre>

<p>
Ensuite, allez à la section <c>Module</c> et assurez-vous que le module
<c>glx</c> se charge tandis que le module <c>dri</c> ne se charge pas&nbsp;:
</p>

<pre caption="Mise à jour de la section Module">
Section "Module"
  <comment>(...)</comment>
  <i># Load  "dri"
  Load  "glx"</i>
  <comment>(...)</comment>
EndSection
</pre>

<p>
Puis, dans la section <c>Screen</c>, vérifiez que la directive
<c>DefaultDepth</c> indique 16 ou 24, ou qu'il n'y a pas de sous-section
<c>Display</c> avec des directives <c>Depth</c> qui valent autre chose que 16
ou 24. Si vous spécifiez d'autres profondeurs de couleurs que 16 ou 24, les
extensions nVidia GLX ne fonctionneront pas.
</p>

<pre caption="Mettre la section Screen à jour">
Section "Screen"
  <comment>(...)</comment>
  <i>DefaultDepth 16</i>
  Subsection "Display"
  <comment>(...)</comment>
EndSection
</pre>

<p>
Lancez <c>eselect</c> afin que le serveur X utilise les bibliothèques GLX
de nVidia&nbsp;:
</p>

<pre caption="Lancement de eselect">
# <i>eselect opengl set nvidia</i>
</pre>

</body>
</section>
<section>
<title>Ajouter des utilisateurs dans le groupe video</title>
<body>

<p>
Afin que vos utilisateurs puissent accéder aux fichiers de périphérique nVidia,
il faut les ajouter au groupe <c>video</c>&nbsp;:
</p>

<pre caption="Ajout d'un utilisateur au groupe video">
# <i>gpasswd -a nom_utilisateur video</i>
</pre>

<p>
Cela n'est pas forcément obligatoire si vous n'utilisez pas <c>udev</c> mais
cela ne vous fera pas de mal. De plus, votre système sera préparé pour
l'avenir.
</p>

</body>
</section>
<section>
<title>Test de la carte</title>
<body>

<p>
Pour tester votre carte nVidia, démarrez X et lancez <c>glxinfo</c> du paquet
<c>mesa-progs</c>. Cela devrait vous répondre que le rendu direct est
activé&nbsp;:
</p>

<pre caption="Vérification de l'état du rendu direct">
$ <i>glxinfo | grep direct</i>
direct rendering: Yes
</pre>

<p>
Pour obtenir votre taux de FPS (images par seconde), lancez <c>glxgears</c>.
</p>

</body>
</section>
<section>
<title>Activer le support nVidia</title>
<body>

<p>
Certains paquets comme <c>mplayer</c> ou <c>xine-lib</c> ont une option USE
locale «&nbsp;nvidia&nbsp;» qui permet d'activer le support XvMCNVIDIA, utile
notamment pour visionner des films en haute résolution. Vous pouvez définir
cette option dans la variable USE de votre fichier <path>/etc/make.conf</path>
ou bien l'ajouter pour les paquets <c>media-video/mplayer</c> et/ou
<c>media-libs/xine-lib</c> dans le fichier
<path>/etc/portage/package.use</path>.
</p>

<p>
Ensuite, exécutez <c>emerge -uD --newuse world</c> pour recompiler les
applications qui utilisent cette option.
</p>

</body>
</section>
<section>
<title>Utiliser les outils de configuration nVidia</title>
<body>

<p>
Depuis la version 1.0.6106 des pilotes nVidia, vous pouvez disposer d'un outil
configuration qui vous permet de modifier les réglages graphiques sans
redémarrer le serveur X. Cet outil est disponible dans Portage sous le nom de
<c>media-video/nvidia-settings</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Problèmes</title>
<section>
<title>Faire fonctionner la carte en 2D sur des machines avec 4&nbsp;Go de mémoire ou plus</title>
<body>

<p>
Si vous avez des problèmes avec l'accélération 2D, il est probable que
l'origine soit un problème d'écriture avec MTRR. Veuillez vérifier le contenu
du fichier <path>/proc/mtrr</path>&nbsp;:
</p>

<pre caption="Vérifier si l'option « write-combining » est activée">
# <i>cat /proc/mtrr</i>
</pre>

<p>
Chaque ligne doit contenir soit «&nbsp;write-back&nbsp;», soit
«&nbsp;write-combining&nbsp;». Si une ligne avec «&nbsp;uncachable&nbsp;»
apparaît, vous devez modifier une option de votre BIOS pour résoudre le
problème.
</p>

<p>
Redémarrez votre machine et cherchez l'option MTRR, en général, dans un menu
«&nbsp;CPU Settings&nbsp;». Changez cette option de «&nbsp;continuous&nbsp;»
en «&nbsp;discrete&nbsp;» et redémarrez Linux. Vous ne devriez plus voir
«&nbsp;uncachable&nbsp;» dans <path>/proc/mtrr</path> et l'accélération 2D
devrait mieux fonctionner.
</p>

</body>
</section>

<section>
<title>Lorsque j'essaie de charger le module noyau, je reçois un «&nbsp;no such
device&nbsp;»</title>
<body>

<p>
Cela arrive en général lorsque vous n'avez pas de carte graphique qui
corresponde. Assurez-vous de bien avoir une carte graphique nVidia (vous pouvez
vérifier avec <c>lspci</c>).
</p>

<p>
Si vous êtes sûr d'avoir une carte graphique nVidia, vérifiez que la directive
<e>Assign IRQ to VGA</e> est bien activée dans votre BIOS.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Configuration experte</title>
<section>
<title>Documentation</title>
<body>

<p>
Le paquet logiciel du pilote nVidia contient une documentation exhaustive. Elle
est installée dans le répertoire <path>/usr/share/doc</path> et peut être
consultée avec la commande suivante&nbsp;:
</p>

<pre caption="Consulter la documentation de nVidia">
<comment>(Pour nvidia-drivers)</comment>
$ <i>less /usr/share/doc/nvidia-drivers-*/README.gz</i>
<comment>(Pour nvidia-legacy-drivers)</comment>
$ <i>less /usr/share/doc/nvidia-legacy-drivers-*/README.gz</i>
</pre>

</body>
</section>
<section>
<title>Paramètres du module du noyau</title>
<body>

<p>
Le module du noyau <c>nvidia</c> accepte un éventail de paramètres (options)
qui permettent d'ajuster le comportement du pilote. La plupart sont mentionnés
dans la documentation. Pour ajouter ou modifier ces paramètres, éditez le
fichier <path>/etc/modules.d/nvidia</path>. Souvenez-vous d'exécuter
<c>modules-update</c> après ces modifications et gardez à l'esprit que vous
devrez recharger le module <c>nvidia</c> avant que ces modifications ne soient
prises en compte.
</p>

<pre caption="Ajuster la configuration nvidia">
<comment>(Éditez /etc/modules.d/nvidia avec votre éditeur de texte favori.)</comment>
# <i>nano -w /etc/modules.d/nvidia</i>
<comment>(Mettez à jour les fichiers des modules.)</comment>
# <i>modules-update</i>
<comment>Déchargez le module nvidia...)</comment>
# <i>modprobe -r nvidia</i>
<comment>(... et rechargez-le.)</comment>
# <i>modprobe nvidia</i>
</pre>

</body>
</section>
<section>
<title>Configuration avancée de X</title>
<body>

<p>
La couche logicielle GLX offre aussi une pléthore d'options de configuration.
Celles-ci contrôlent la sortie TV, l'utilisation simultanée de deux écrans, la
détection de la fréquence des moniteurs, etc. Ces options sont elles aussi
couvertes dans la documentation.
</p>

<p>
Si vous voulez utiliser certaines de ces options, vous devez les indiquer dans
la section Device appropriée de votre fichier de configuration de X
(habituellement <path>/etc/X11/xorg.conf</path>). Par exemple, supposons que
vous souhaitez désactiver le logo de démarrage&nbsp;:
</p>

<pre caption="Configuration avancée de nVidia dans X">
Section "Device"
  Identifier "nVidia Inc. GeForce2"
  Driver     "nvidia"
  <i>Option     "NoLogo" "true"</i>
  VideoRam   65536
EndSection
</pre>

</body>
</section>
</chapter>

</guide>
