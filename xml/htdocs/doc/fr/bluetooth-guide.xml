<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/bluetooth-guide.xml,v 1.2 2007/08/06 08:59:05 cam Exp $ -->

<guide link="/doc/fr/bluetooth-guide.xml" lang="fr">
<title>Guide du Bluetooth sous Gentoo Linux</title>

<author title="Auteur">
  <mail link="deathwing00@gentoo.org">Ioannis Aslanidis</mail>
</author>
<author title="Contributeur">
  <mail link="puggy@gentoo.org">Douglas Russell</mail>
</author>
<author title="Contributeur">
  <mail link="marcel@holtmann.org">Marcel Holtmann</mail>
</author>
<author title="Auteur">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Correcteur">
  <mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>
<author title="Traducteur">
  <mail link="freezbyy@hotmail.fr">Guillaume Bouzillé</mail>
</author>


<abstract>
Ce guide explique comment réussir l'installation de périphériques Bluetooth sur
son ordinateur, notamment la configuration du noyau. Il expose toutes les
possibilités qu'offre une connexion Bluetooth afin de profiter pleinement des
périphériques disposant de cette interface.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.9</version>
<date>2007-05-16</date>

<chapter id="introduction">
<title>Introduction</title>
<section>
<title>Qu'est-ce que Bluetooth&nbsp;?</title>
<body>

<p>
Bluetooth est une spécification industrielle permettant à l'utilisateur de
connecter et d'échanger des informations entre des périphériques tels des
ordinateurs, des assistants personnels (PDA) ou des téléphones portables.
L'utilisateur bénéficie ainsi d'une méthode sans fil abordable pour la
transmission de données entre des périphériques. Il est également possible de
créer de petits réseaux locaux et de synchroniser des périphériques via
Bluetooth.
</p>

</body>
</section>
<section>
<title>Contenu du guide</title>
<body>

<p>
La première partie de ce guide consistera à lister les périphériques
compatibles et non compatibles disposant de la technologie Bluetooth. Ainsi,
vous pourrez acquérir un périphérique Bluetooth connu pour fonctionner. Nous
configurerons ensuite le noyau Linux et nous identifierons les divers
périphériques Bluetooth connectés au système. Nous installerons enfin les
principaux outils nécessaires au fonctionnement du Bluetooth.
</p>

<p>
La seconde partie couvrira la détection des périphériques distants ainsi que
l'établissement d'une connexion entrante ou sortante pour ces périphériques.
Nous utiliserons pour ce faire une communication par fréquence radio (RFCOMM,
N.D.T.&nbsp;: Radio Frequency COMMunication) ou bien un réseau personnel (PAN,
N.D.T.&nbsp;: Personal Area Network).
</p>

<p>
La dernière partie détaillera les diverses applications qui peuvent tirer parti
de la technologie Bluetooth.
</p>

</body>
</section>
</chapter>

<chapter id="devices">
<title>Périphériques supportés</title>
<section>
<title>Périphériques compatibles et non compatibles disposant de la technologie
Bluetooth</title>
<body>

<impo>
Certains produits peuvent éventuellement fonctionner bien qu'ils ne soient pas
compatibles Bluetooth. Gentoo ne les supportent en aucun cas mais il n'est pas
exclu qu'ils puissent fonctionner.
</impo>

<p>
Une liste des périphériques actuellement supportés est disponible ici&nbsp;:
<uri
link="http://www.holtmann.org/linux/bluetooth/features.html">Caractéristiques
des périphériques Bluetooth maintenues par Marcel Holtmann</uri>.
</p>

</body>
</section>
</chapter>

<chapter id="kernel">
<title>Configuration du système</title>
<section>
<title>Configuration du noyau</title>
<body>

<p>
Nous n'expliquons ici que la configuration d'un noyau Linux 2.6. La plupart des
périphériques Bluetooth étant connectés à un port USB, le support de l'USB doit
également être activé. Veuillez vous référer pour cela au <uri
link="/doc/fr/usb-guide.xml">guide de l'USB sous Gentoo Linux</uri>.
</p>

<pre caption="Configuration pour un noyau 2.6">
Networking ---&gt;

&lt;*&gt; Bluetooth subsystem support  ---&gt;

--- Bluetooth subsystem support
&lt;M&gt;   L2CAP protocol support
&lt;M&gt;   SCO links support
&lt;M&gt;   RFCOMM protocol support
[*]     RFCOMM TTY support
&lt;M&gt;   BNEP protocol support
[*]     Multicast filter support
[*]     Protocol filter support
&lt;M&gt;   HIDP protocol support

Bluetooth device drivers  ---&gt;
&lt;M&gt; HCI USB driver
[*]   SCO (voice) support
&lt;M&gt; HCI UART driver
[*]   UART (H4) protocol support
[*]   BCSP protocol support
[*]   Transmit CRC with every BCSP packet
&lt;M&gt; HCI BCM203x USB driver
&lt;M&gt; HCI BPA10x USB driver
&lt;M&gt; HCI BlueFRITZ! USB driver
<comment>(Les quatre pilotes ci-dessous concernent les périphériques Bluetooth
connectés à un port PCMCIA et ne sont disponibles que si vous avez sélectionné
le support PCMCIA dans votre noyau.)</comment>
&lt;M&gt; HCI DTL1 (PC Card) driver
&lt;M&gt; HCI BT3C (PC Card) driver
&lt;M&gt; HCI BlueCard (PC Card) driver
&lt;M&gt; HCI UART (PC Card) device driver
<comment>(Le pilote ci-dessous est prévu pour les émulateurs HCI (Host Controller
Interface, N.D.T.&nbsp;: interface de contrôle de l'hôte).)</comment>
&lt;M&gt; HCI VHCI (Virtual HCI device) driver

<comment>(Retournez à section «&nbsp;Device Drivers&nbsp;» et vérifiez que le support
de l'USB soit coché. Cela est nécessaire si vous utilisez un dongle Bluetooth,
ceux-ci étant le plus souvent connectés via l'USB.)</comment>
USB support  ---&gt;

&lt;*&gt; Support for Host-side USB
--- USB Host Controller Drivers
&lt;M&gt; EHCI HCD (USB 2.0) support
[ ]   Full speed ISO transactions (EXPERIMENTAL)
[ ]   Root Hub Transaction Translators (EXPERIMENTAL)
&lt;*&gt; OHCI HCD support
&lt;*&gt; UHCI HCD (most Intel and VIA) support
&lt; &gt; SL811HS HCD support
</pre>

<p>
Nous pouvons maintenant redémarrer avec notre nouveau noyau. Si tout c'est bien
passé, notre sytème supporte à présent Bluetooth.
</p>

<impo>
Vos périphériques USB sont peut-être configurés par défaut pour utiliser le
mode HID plutôt que HCI. Si tel est le cas, utilisez <c>hid2hci</c> pour passer
au mode HCI. Votre système ne se souviendra pas de ce changement au prochain
redémarrage.
</impo>

<pre caption="Identifier les périphériques Bluetooth">
<comment>(Une façon d'identifier les périphériques Bluetooth.)</comment>
# <i>cat /proc/bus/usb/devices | grep -e^[TPD] | grep -e Cls=e0 -B1 -A1</i>
<comment>(Cls=e0(unk. ) correspond à l'adaptateur Bluetooth.)</comment>
T:  Bus=02 Lev=02 Prnt=03 Port=00 Cnt=01 Dev#=  4 Spd=12  MxCh= 0
D:  Ver= 1.10 Cls=e0(unk. ) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
P:  Vendor=0a12 ProdID=0001 Rev= 5.25
<comment>(Certains périphériques peuvent apparaître en utilisant la commande lsusb
disponible dans le paquet sys-apps/usbutils.)</comment>
# <i>lsusb</i>
Bus 003 Device 002: ID 046d:c00e Logitech, Inc. Optical Mouse
Bus 003 Device 001: ID 0000:0000
Bus 002 Device 002: ID 0db0:1967 Micro Star International Bluetooth Dongle
</pre>

</body>
</section>
</chapter>

<chapter id="bluez">
<title>BlueZ - La pile Bluetooth</title>
<section>
<title>Installer BlueZ</title>
<body>

<p>
Nos périphériques étant reconnus par le noyau, nous devons à présent installer
la couche logicielle nécessaire à la communication entre  les périphériques et
nos applications. BlueZ est la pile Bluetooth officielle pour Linux. Nous avons
donc besoin des ebuilds <c>bluez-libs</c> et <c>bluez-utils</c>. Les
périphériques qui  requièrent un microcode Broadcom ou similaire peuvent avoir
besoin du paquet <c>bluez-firmware</c>.
</p>

<pre caption="Installer bluez-libs et bluez-utils">
# <i>emerge net-wireless/bluez-libs net-wireless/bluez-utils</i>
</pre>

<warn>
N'installez pas <c>bluez-sdp</c> car il est incompatible avec
<c>bluez-utils</c>&nbsp;!
</warn>

</body>
</section>
<section>
<title>Configuration de BlueZ et pairage des codes PIN</title>
<body>

<p>
Il est temps de voir si les périphériques Bluetooth ont bien été détectés par
le système. Nous devons au préalable démarrer les services Bluetooth.
</p>

<pre caption="Lancement de hciconfig">
<comment>(Démarrage du Bluetooth.)</comment>
# <i>/etc/init.d/bluetooth start</i>
* Starting Bluetooth ...
*     Starting hcid ...                                                 [ ok ]
*     Starting sdpd ...                                                 [ ok ]
*     Starting rfcomm ...                                               [ ok ]

# <i>hciconfig</i>
hci0:   Type: USB
        BD Address: 00:01:02:03:04:05 ACL MTU: 192:8  SCO MTU: 64:8
        DOWN
        RX bytes:131 acl:0 sco:0 events:18 errors:0
        TX bytes:565 acl:0 sco:0 commands:17 errors:0
</pre>

<p>
Ceci montre que les périphériques Bluetooth ont été reconnus. Comme vous pouvez
le voir, le périphérique est pour l'instant <e>DOWN</e>. Configurons-le afin de
l'activer. Le fichier de configuration est
<path>/etc/bluetooth/hcid.conf</path>. Les modifications à apporter au fichier
de configuration vous sont indiquées ci-dessous. Pour de plus amples
informations, veuillez vous référer au manuel <c>man hcid.conf</c>.
</p>

<pre caption="Éditer /etc/bluetooth/hcid.conf">
<comment>(Les modifications recommandées à effectuer vous sont indiquées.)</comment>

# HCId options
options {
        # Automatically initialize new devices
        autoinit yes;

<comment>(Sélectionnez «&nbsp;auto&nbsp;» pour sécurité.)</comment>
        # Security Manager mode
        #   none - Security manager disabled
        #   auto - Use local PIN for incoming connections
        #   user - Always ask user for a PIN
        #
        security auto;

        # Pairing mode
        pairing multi;

<comment>(Vous n'avez besoin d'un assistant à la saisie du code PIN que si vous utilisez
&lt;=bluez-libs-2.x et &lt;=bluez-utils-2.x.)
(Modifier pin_helper afin d'utiliser /etc/bluetooth/pin-helper.)</comment>
        # PIN helper
        pin_helper /etc/bluetooth/pin-helper;
}

# Default settings for HCI devices
device {
<comment>(Spécifiez ici le nom de vos périphériques.
Vous pouvez choisir ce que vous voulez.)</comment>
        # Local device name
        #   %d - device id
        #   %h - host name
        name "BlueZ at %h (%d)";

        # Local device class
        class 0x3e0100;

        # Inquiry and Page scan
        iscan enable; pscan enable;

        # Default link mode
        lm accept;

        # Default link policy
        lp rswitch,hold,sniff,park;

<comment>(Laissez tel quel, sauf si vous savez exactement ce que vous faites.)</comment>
        # Authentication and Encryption (Security Mode 3)
        #auth enable;
        #encrypt enable;
}
</pre>

<p>
À présent, nous devons configurer le code PIN du périphérique Bluetooth. Cela
facilitera le pairage avec d'autres périphériques.
</p>

<pre caption="Éditer /etc/bluetooth/pin">
<comment>(Remplacez 123456 par le code PIN de votre choix.)</comment>
123456
</pre>

<impo>
Ce nombre (que vous avez choisi) doit impérativement être le même pour tous vos
ordinateurs accueillant des périphériques Bluetooth. De cette façon, ils
pourront être appariés. Ce nombre doit également être tenu secret car toute
personne l'ayant en sa possession pourra établir une connexion avec vos
périphériques.
</impo>

<note>
Si vous utilisez <c>&lt;=bluez-libs-2.x</c> et <c>&lt;=bluez-utils-2.x</c>,
vous pouvez choisir différents assistants à la saisie du code PIN selon ce que
vous souhaitez. Les assistants disponibles sont
<c>/usr/lib/kdebluetooth/kbluepin</c> (net-wireless/kdebluetooth),
<c>/usr/bin/bluepin</c> ou <c>/etc/bluetooth/pin-helper</c>, parmi d'autres.
</note>

<note>
À partir de <c>>=bluez-libs-3.x</c> et <c>>=bluez-utils-3.x</c>, les assistants
à la saisie du code PIN ont été remplacés par des gestionnaires de mots de
passe. Il existe un certain nombre de gestionnaires de mots de passe qui vous
aideront à gérer votre code PIN, <c>bluez-gnome</c> et <c>kdebluetooth</c> par
exemple. Vous pouvez également utiliser <c>passkey-agent</c> (fourni par
<c>bluez-utils</c>) en ligne de commande.
</note>

</body>
</section>
<section>
<title>Configuration des services</title>
<body>

<p>
Nous en avons terminé de la configuration de BlueZ, nous pouvons redémarrer les
services nécessaires.
</p>

<pre caption="Démarrer le démon Bluetooth">
# <i>/etc/init.d/bluetooth restart</i>
<comment>(Nous pouvons également l'ajouter au niveau d'exécution par défaut.)</comment>
# <i>rc-update add bluetooth default</i>
 * bluetooth added to runlevel default
 * rc-update complete.
</pre>

<p>
Vérifiez que les démons Bluetooth soient bien démarrés. Si <c>hcid</c> et
<c>sdpd</c> sont bien démarrés, alors vous avez correctement configuré
Bluetooth. Ceci étant fait, vous pouvez vérifier si vos périphériques sont bien
activés et qu'ils utilisent les paramètres que vous avez configuré.
</p>

<pre caption="Vérifier le bon démarrage des démons Bluetooth">
<comment>(Vérifiez que les services fonctionnent correctement.)</comment>
# <i>ps -ae | grep hcid</i>
26050 ?        00:00:00 hcid
# <i>ps -ae | grep sdpd</i>
26054 ?        00:00:00 sdpd

# <i>hciconfig -a</i>
hci0:   Type: USB
        BD Address: 00:0A:0B:0C:0D:0E ACL MTU: 192:8 SCO MTU: 64:8
        UP RUNNING PSCAN ISCAN
        RX bytes:125 acl:0 sco:0 events:17 errors:0
        TX bytes:565 acl:0 sco:0 commands:17 errors:0
        Features: 0xff 0xff 0x0f 0x00 0x00 0x00 0x00 0x00
        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
        Link policy: RSWITCH HOLD SNIFF PARK
        Link mode: SLAVE ACCEPT
        Name: 'BlueZ at bluehat (0)'
        Class: 0x3e0100
        Service Classes: Networking, Rendering, Capturing, Object Transfer,
        Audio
        Device Class: Computer, Uncategorized
        HCI Ver: 1.1 (0x1) HCI Rev: 0x1e7 LMP Ver: 1.1 (0x1) LMP Subver: 0x1e7
        Manufacturer: Cambridge Silicon Radio (10)
</pre>

</body>
</section>
</chapter>

<chapter id="detect">
<title>Détecter et se connecter aux périphériques distants</title>
<section>
<title>Détecter les périphériques Bluetooth des autres ordinateurs</title>
<body>

<p>
À ce stade, nous sommes en mesure de détecter les périphériques Bluetooth
installés sur d'autres machines. La détection est indépendante du système
d'exploitation sur lequel est installé le périphérique. Nous allons utiliser
pour cela la commande <c>hcitool</c>.
</p>

<pre caption="Détecter les périphériques locaux">
# <i>hcitool dev</i>
Devices:
        hci0    00:01:02:03:04:05
</pre>

<pre caption="Scanner les périphériques distants">
# <i>hcitool scan</i>
Scanning ...
        00:0A:0B:0C:0D:0E       Grayhat
</pre>

<pre caption="Récupérer les informations sur les périphériques distants">
# <i>hcitool inq</i>
Inquiring ...
        00:0A:0B:0C:0D:0E       clock offset: 0x5579    class: 0x72010c
</pre>

<p>
Nous connaissons maintenant l'adresse MAC des périphériques Bluetooth distants.
Nous pouvons donc vérifier si le pairage s'est effectué correctement.
</p>

<pre caption="Exécuter l2ping">
# <i>l2ping 00:0A:0B:0C:0D:0E</i>
Ping: 00:0A:0B:0C:0D:0E from 00:01:02:03:04:05 (data size 20) ...
20 bytes from 00:0A:0B:0C:0D:0E id 200 time 69.85ms
20 bytes from 00:0A:0B:0C:0D:0E id 201 time 9.97ms
20 bytes from 00:0A:0B:0C:0D:0E id 202 time 56.86ms
20 bytes from 00:0A:0B:0C:0D:0E id 203 time 39.92ms
4 sent, 4 received, 0% loss
</pre>

</body>
</section>
<section>
<title>Configurer la communication par fréquence radio (RFCOMM)</title>
<body>

<note>
Cette étape est facultative.
</note>

<p>
Il est possible d'établir une connexion par fréquence radio avec d'autres
périphériques Bluetooth grâce à la commande <c>rfcomm</c>. Cette étape ne sera
que plus simple si quelques modifications sont apportées au fichier
<path>/etc/bluetooth/rfcomm.conf</path>, en particulier pour ceux qui ont
plusieurs périphériques supportant Bluetooth.
</p>

<p>
La section commençant par <c>rfcomm0 {</c> et se terminant par <c>}</c> est
dédiée à la configuration du périphérique qui établira une connexion
apparaissant sous <path>/dev/rfcomm0</path>. Dans notre exemple n'apparaît la
connexion que pour un périphérique, mais vous pouvez en ajouter d'autres selon
vos besoins.
</p>

<pre caption="Éditer /etc/bluetooth/rfcomm.conf">
<comment>(Seules les modifications nécessaires sont indiquées.)</comment>
rfcomm0 {
        # Automatically bind the device at startup
        <comment>(Crée le noeud périphérique /dev/rfcomm0 au démarrage.)</comment>
        bind yes;

        # Bluetooth address of the device
        <comment>(Entrez l'adresse du périphérique auquel vous voulez vous connecter.)</comment>
        device 00:0A:0B:0C:0D:0E;

}
</pre>

<p>
La configuration de RFCOMM étant terminée, cela rend possible la connexion à
n'importe quel périphérique Bluetooth. Si l'étape de configuration du
fichier<path>/etc/bluetooth/rfcomm.conf</path> a été faite, il suffit
d'exécuter la commande ci-desous. Sinon, il existe une méthode alternative qui
vous est indiquée à la suite de la commande précédente.
</p>

<pre caption="Établir une connexion RFCOMM">
<comment>(Le «&nbsp;0&nbsp;» fait référence à rfcomm0 du fichier de configuration.)</comment>
# <i>rfcomm connect 0 </i>
Connected /dev/rfcomm0 to 00:0A:0B:0C:0D:0E on channel 1
Press CTRL-C for hangup

<comment>(Si /etc/bluetooth/rfcomm.conf n'a pas été édité.)</comment>
# <i>rfcomm connect 0 00:0A:0B:0C:0D:0E 1</i>
Connected /dev/rfcomm0 to 00:0F:DE:69:50:24 on channel 1
Press CTRL-C for hangup
</pre>

<p>
Le premier paramètre après la commande de connexion correspond au nœud
périphérique TTY qui sera utilisé pour RFCOMM (habituellement «&nbsp;0&nbsp;»).
Le second paramètre est l'adresse MAC du périphérique distant. Le troisième
paramètre est facultatif et indique quel canal doit être utilisé. Notez que la
connexion ne peut se faire que si le périphérique fait partie des connexions
entrantes. De ce fait, nous devons préciser explicitement qu'il faut écouter
les connexions entrantes. La communication peut être interrompue à tout moment
en appuyant sur CTRL+C.
</p>

<pre caption="Écouter les connexions RFCOMM entrantes">
# <i>rfcomm listen 0 1</i>
Waiting for connection on channel 1
</pre>

<p>
Tout comme la commande de connexion, la commande d'écoute peut recevoir deux
paramètres. Le premier indique quel nœud périphérique TTY doit être utilisé
(habituellement «&nbsp;0&nbsp;») pour accepter la connexion RFCOMM, le second
correspond au canal qui sera utilisé.
</p>

<p>
Chaque fois que vous utilisez la commande <c>rfcomm</c>, vous pouvez préciser
quel périphérique matériel vous voulez utiliser. Ci-dessous, un exemple
montrant comment indiquer le périphérique à utiliser pour les deux commandes
précédentes.
</p>

<pre caption="Spécifier les périphériques à utiliser pour les connexions RFCOMM">
# <i>rfcomm -i hci0 listen 0 1</i>
Waiting for connection on channel 1
<comment>(Pour écouter un périphérique spécifique.)</comment>
# <i>rfcomm -i hci0 connect 0 00:0A:0B:0C:0D:0E 1</i>
<comment>(Pour utiliser un périphérique spécifique lors de la
connexion à un autre périphérique.)</comment>
</pre>

</body>
</section>
<section>
<title>Configurer un réseau personnel (PAN)</title>
<body>

<note>
Notez que la configuration d'un réseau personnel est facultative. Cette section
décrit comment configurer et comment se connecter à un réseau personnel. La
configuration d'un réseau point à point (N.D.T.&nbsp;: Group Ad-Hoc Network)
suit la même démarche.
</note>

<p>
Avant tout, il est nécessaire de charger le module <c>bnep</c>. Il peut être
judicieux de le charger au démarrage de l'ordinateur.
</p>

<pre caption="Charger le module bnep">
# <i>modprobe bnep</i>
# <i>echo "bnep" &gt;&gt; /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<p>
Nous devons démarrer le démon <c>pand</c> chez l'ordinateur servant de point
d'accès au réseau (NAP, N.D.T.&nbsp;:&nbsp;Network Access Point). Nous devons
indiquer que nous voulons fournir un service NAP pour lequel cet ordinateur
sera le maître et par conséquent les autres ordinateurs les esclaves. Il est
également possible d'utiliser un service GN (Group ad-hoc Network,
N.D.T.&nbsp;:&nbsp;réseau point à point).
</p>

<pre caption="Exécuter le démon pand">
# <i>pand --listen --role NAP --master --autozap</i>
</pre>

<p>
Après avoir fait cela, nous avons un ordinateur qui écoute de telle façon que
les autres ordinateurs n'ont plus qu'à se connecter à celui-ci.
</p>

<pre caption="Se connecter au point d'accès au réseau">
# <i>pand --connect 00:0A:0B:0C:0D:0E --service NAP --autozap</i>
</pre>

<p>
Si tout fonctionne, nous pouvons passer à la configuration des addresses IP des
ordinateurs.
</p>

<pre caption="Configuration des adresses IP bnep">
host0 #<i> ifconfig bnep0 192.168.2.1</i>
host1 #<i> ifconfig bnep0 192.168.2.2</i>

host0 #<i> ifconfig bnep0</i>
bnep0     Link encap:Ethernet  HWaddr 00:0A:0B:0C:0D:0E
          inet addr:192.168.2.1  Bcast:192.168.2.255  Mask:255.255.255.0
          inet6 addr: fe80::210:60ff:fea3:cb41/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:5 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:208 (208.0 b)  TX bytes:188 (188.0 b)

host1 #<i> ifconfig bnep0</i>
bnep0     Link encap:Ethernet  HWaddr 00:01:02:03:04:05
          inet addr:192.168.2.2  Bcast:192.168.2.255  Mask:255.255.255.0
          inet6 addr: fe80::210:60ff:fea2:dd2a/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:5 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:208 (208.0 b)  TX bytes:188 (188.0 b)
</pre>

<p>
Pour terminer, nous pouvons tester le bon fonctionnement du réseau.
</p>

<pre caption="Pinguer les IP entre les interfaces bnep">
host1 #<i> ping 192.168.2.1</i>
PING 192.168.2.1 (192.168.2.1) 56(84) bytes of data.
64 bytes from 192.168.2.1: icmp_seq=1 ttl=64 time=34.0 ms
64 bytes from 192.168.2.1: icmp_seq=2 ttl=64 time=37.3 ms

--- 192.168.2.1 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1000ms
rtt min/avg/max/mdev = 34.045/35.690/37.336/1.656 ms
</pre>

</body>
</section>
</chapter>

<chapter id="apps">
<title>Applications de bureau pour Bluetooth</title>
<section>
<title>Introduction</title>
<body>

<p>
Un grand nombre d'applications de bureau pour Bluetooth sont disponibles. Nous
avons donc choisi de diviser ce chapitre en trois parties, une pour Gnome, une
pour KDE et une pour diverses applications.
</p>

</body>
</section>
<section>
<title>Applications pour Gnome</title>
<body>

<p>
Si vous êtes un utilisateur de Gnome, vous préférerez sûrement utiliser
<c>gnome-bluetooth</c>. Il permet les opérations de base les plus courantes,
comme vous pouvez le voir ci-dessous.
</p>

<ul>
  <li>
    <c>gnome-bluetooth-manager</c>&nbsp;: Gestion des périphériques Bluetooth
    distants.
  </li>
  <li>
    <c>gnome-obex-send</c>&nbsp;: Envoi de fichiers à d'autres périphériques.
  </li>
  <li><c>gnome-obex-server</c>&nbsp;: Réceptions de fichiers.</li>
</ul>

<pre caption="Installer gnome-bluetooth">
# <i>emerge gnome-bluetooth</i>
</pre>

<p>
Une entrée est rajoutée dans le menu Applications &gt; Outils système à partir
de laquelle vous pouvez facilement lancer «&nbsp;Bluetooth Manager&nbsp;» ou
«&nbsp;Bluetooth File Sharing&nbsp;» afin de transférer des fichiers entre des
périphériques.
</p>

<p>
Pour transférer des fichiers (la méthode simple)&nbsp;:
</p>

<ul>
  <li>
    Du téléphone vers l'ordinateur - Envoyez le fichier depuis le téléphone via
    Bluetooth, il sera systématiquement stocké dans votre <path>/home</path>.
  </li>
<!--FIXME : Doesn't work on Nautilus 2.10.x. Bug #103464 for details -->
<!--
  <li>
    De l'ordinateur vers le téléphone - Lancez <c>nautilus</c> puis
    sélectionnez le fichier que vous voulez envoyer par un clic droit.
    Choississez enfin l'option Envoyer puis Bluetooth et demandez à votre
    téléphone d'accepter le fichier.
  </li>
-->
</ul>

<p>
<c>gnome-phone-manager</c> est une fabuleuse application qui pourra vous servir
à envoyer des messages vers votre téléphone et à en recevoir depuis ce
dernier, tout cela uniquement à partir de votre ordinateur. Vous n'avez pas
besoin de toucher à votre téléphone pour recevoir ou envoyer des messages
puisque tout se passe au niveau de l'application. vous pouvez aussi être
informé de vos nouveaux messages sur votre écran, si vous avez activé l'option
dans Préférences. L'installation est comme toujours très simple.
</p>

<pre caption="Installer gnome-phone-manager">
# <i>emerge gnome-phone-manager</i>
</pre>

</body>
</section>
<section>
<title>Application pour KDE</title>
<body>

<p>
KDE utilise <c>kdebluetooth</c> qui, comme nous allons le voir, fournit plus
d'outils que son homologue pour Gnome.
</p>

<ul>
  <li><c>kbluetoothd</c>&nbsp;: Méta-serveur Bluetooth.</li>
  <li>
    <c>kbtsearch</c>&nbsp;: Utilitaire de recherche de périphériques/services
    Bluetooth.
  </li>
  <li><c>khciconfig</c>&nbsp;: Moniteur Bluetooth de KDE.</li>
  <li><c>kioclient</c>&nbsp;: Programme en ligne de commande pour KIO.</li>
  <li>
    <c>qobexclient</c>&nbsp;: Le couteau suisse pour tester/developper le
    protocole obex.
  </li>
  <li><c>kbtobexclient</c>&nbsp;: Le Framework Bluetooth de KDE.</li>
  <li><c>kioobex_start</c></li>
  <li><c>kbtserialchat</c></li>
  <li><c>kbemusedsrv</c>&nbsp;: Serveur Bemused de KDE.</li>
  <li><c>kbtobexsrv</c>&nbsp;: Serveur OBEX Push pour Bluetooth de KDE.</li>
  <li><c>kbluepin</c>&nbsp;: Une application KPart de KDE.</li>
  <li>
    <c>auth-helper</c>&nbsp;: Un assistant pour kbtobexsrv qui envoie une
    requête d'autentification pour un lien ACL donné.
  </li>
</ul>

<pre caption="Installer kdebluetooth">
# <i>emerge kdebluetooth</i>
</pre>

</body>
</section>
<section>
<title>Autres applications intéressantes</title>
<body>

<ul>
  <li>
    <c>app-mobilephone/obexftp</c>&nbsp;: Transfert de fichiers par OBEX pour
    des téléphones portables.
  </li>
  <li>
    <c>app-mobilephone/bemused</c>&nbsp;: Bemused est un système qui vous
    permet de contrôler la collection de musique de votre téléphone en
    utilisant Bluetooth.
  </li>
  <li>
    <c>app-pda/multisync</c>&nbsp;: Multisync vous permet de synchroniser les
    contacts, le calendrier et les notes de votre téléphone portable avec ceux
    de votre ordinateur grâce à une connexion Bluetooth (ou autre connexion).
    Il permet par exemple la sauvegarde et la restauration de ces informations
    et la synchronisation avec le client de courriel Evolution. Le support de
    Bluetooth par <c>multisync</c> nécessite le mot-clé <c>irmc</c> dans votre
    variable USE.
  </li>
  <li>
    <c>net-wireless/opd</c> et <c>net-wireless/ussp-push</c> sont des outils en
    ligne de commande (serveur et client) qui peuvent être utilisés pour
    envoyer des fichiers vers votre téléphone portable.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Remerciements</title>
<section>
<body>

<p>
Nous remercions particulièrement <mail link="marcel@holtmann.org">Marcel
Holtmann</mail> pour son temps et son dévouement consacré au développement de
Bluetooth et à la vérification de ce guide. Nous remercions également très
fortement <mail link="puggy@gentoo.org">Douglas Russell</mail> pour avoir
accompli des tests matériel complémentaires et amélioré ce guide.
</p>

</body>
</section>
</chapter>
</guide>
