<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/vi-guide.xml,v 1.11 2004/09/01 15:22:32 neysx Exp $ -->

<guide link="/doc/fr/vi-guide.xml" lang="fr">
<title>Apprendre vi, la technique de «&nbsp;la feuille de triche&nbsp;» </title>
<author title="Auteur">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Auteur">
  <mail link="stocke2@gentoo.org">Eric Stockbridge</mail>
</author>
<author title="Correcteur">
  <mail link="bennyc@gentoo.org">Benny Chuang</mail>
</author>
<author title="Traducteur">
  <mail link="sylvain.meilard@wanadoo.fr">Sylvain Meilard</mail>
</author>
<author title="Traducteur">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>

<abstract>
Ce guide va vous apprendre comment utiliser vi en utilisant une méthode de
feuille de triche pour accélerer le processus d'apprentissage. Ce sera le
premier guide pour vi dédié aux débutants.
</abstract>

<license/>
<version>1.1.5</version>
<date>26 août 2004</date>

<chapter>
<title>Pour démarrer</title>
<section>
<title>Introduction</title>
<body>

<p>
Ce tutoriel va vous montrer comment utiliser vi, un éditeur de texte puissant.
En utilisant une méthode spéciale accélérée de «&nbsp;feuille de triche&nbsp;», 
ce tutoriel est conçu pour faire de vous un utilisateur de vi compétent sans 
vous y faire passer trop de temps. Dans ce tutoriel sur vi, vous apprendrez 
comment vous déplacer, éditer du texte, utiliser le mode insertion, copier et 
coller du texte, et utiliser des extensions importantes de vi comme le mode 
visuel et l'édition multi-fenêtres.
</p>

<p>
Si vous ne savez pas vous servir de vi ou que vous n'y êtes pas à l'aise, vous
vous devez de lire ce tutoriel pour devenir efficace avec l'un des éditeurs de
texte les plus populaires et les plus puissants sous Linux/UNIX.
</p>
        
</body>
</section>
<section>
<title>À propos de ce guide</title>
<body>

<p>
Il y a une chose en particulier qui rend l'apprentissage de vi difficile&nbsp;:
vi a beaucoup de commandes.  Pour se servir de vi efficacement, vous avez
besoin d'en mémoriser quelques-unes. Ça peut prendre pas mal de temps et un des
objectifs de ce tutoriel est de ne pas vous prendre beaucoup de temps. Donc,
pour commencer, le défi&nbsp;: comment vais-je vous aider à mémoriser une foule
de commandes en peu de temps&nbsp;?
</p>

<p>
Pour relever ce défi, avec ce tutoriel, nous allons mettre au point
progressivement une «&nbsp;feuille de triche&nbsp;» pour vi. Cette feuille
contiendra toutes les commandes importantes. Quand vous aurez fini ce tutoriel,
vous pourrez vous y référer si vous avez oublié une commande en particulier.
Au fur et à mesure que vous mémoriserez des commandes, vous pourrez vous passer
progressivement de la feuille de triche.  En utilisant cette technique, vous
apprendrez vi plus vite qu'il n'a jamais été possible&nbsp;!
</p>

</body>
</section>
<section>
<title>Le processus d'apprentissage</title>
<body>

<p>
Dans ce guide, je vais utiliser plusieurs techniques pour vous aider à
apprendre.  D'abord, je vais vous montrer comment marche une commande en
particulier, comme vous vous y attendez. Ensuite, je vous demanderai d'essayer
d'utiliser cette commande dans vi (pour vous entraîner), puis de transcrire la
commande sur la feuille de triche (pour vous y référer plus tard). Si vous
voulez apprendre vi rapidement, il est important de suivre toutes ces étapes.
Essayer les commandes dans vi et les noter sur votre feuille de triche vous
aidera à les mémoriser.
</p>

</body>
</section>
<section>
<title>Présentation de vim</title>
<body>

<p>
Il existe plusieurs versions de vi et je vais vous montrer comment vous servir
d'une version de vi appelée <c>vim</c>. vim est très populaire et possède
quantité d'extensions qui le rendent encore meilleur. Chaque fois que
j'expliquerai une commande propre à vim, je le signalerai. Si vous avez besoin
d'installer vim, vous pouvez le récupérer sur <uri
link="http://www.vim.org/">www.vim.org</uri>. En plus du vi amélioré en ligne
de commande, vim inclut <c>gvim</c>, un éditeur graphique sympa qui peut être
configuré pour utiliser l'excellente librairie graphique GTK+. Voici une
capture d'écran de mon système&nbsp;:
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vishot.png" short="capture d'écran" caption="Capture d'écran de VIM"/>

<p>
Si vous débutez avec vi, essayez d'installer gvim sur votre système. Utiliser
vi à partir de l'interface graphique peut rendre les choses plus faciles pour
les débutants.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Premiers pas</title>
<section>
<title>Ouvrir un fichier</title>
<body>

<p>
Avant d'éditer des fichiers avec vi, vous devez savoir comment vous déplacer
dans un fichier. vi a beaucoup de commandes de déplacement et nous allons voir
beaucoup d'entre elles. Pour cette partie du tutoriel, cherchez un fichier
texte sans importance et chargez-le dans vi en tapant&nbsp;:
</p>

<pre caption="Ouvrir un fichier avec vi">
$ <i>vi monfichier.txt</i>
</pre>

<p>
Si vim est installé, tapez <c>vim monfichier.txt</c>. Si vous préferez utiliser
gvim, tapez <c>gvim monfichier.txt</c>. monfichier.txt est le nom du fichier
texte sur votre système.
</p>

</body>
</section>
<section>
<title>Dans vi</title>
<body>

<p>
Une fois vi lancé, vous devriez voir à l'écran une partie du fichier texte que
vous avez ouvert.  Félicitations, vous êtes dans vi&nbsp;! A la différence de
beaucoup d'éditeurs, quand vi démarre, il est dans un mode spécial appelé le
<e>mode commande</e>. Cela signifie que si vous appuyez sur <c>l</c> au
clavier, au lieu d'insérer un <c>l</c> dans le fichier à la position actuelle
du curseur, le curseur va se déplacer d'un caractère vers la doite. En mode
commande, les touches de votre clavier sont utilisées pour envoyer des
commandes à vi plutôt que d'insérer littéralement les caractères dans le texte.
Parmi les types de commandes les plus importantes, il y a les commandes de
déplacements&nbsp;; regardons-en quelques-unes.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Déplacements</title>
<section>
<title>Se déplacer dans vi, partie 1</title>
<body>

<p>
En mode de commande, vous pouvez utiliser les touches
<c>h</c>,<c>j</c>,<c>k</c> et <c>l</c> pour déplacer le curseur respectivement
à gauche, en bas, en haut et à droite. Si vous utilisez une version récente de
vi, vous pouvez également utiliser les touches fléchées pour ces déplacements.
Les touches <c>h</c>,<c>j</c>,<c>k</c> et <c>l</c> sont pratiques, car une
fois que vous serez à l'aise avec elles, vous n'aurez plus besoin de déplacer les
doigts vers les touches fléchées.  Essayez d'utiliser les touches
<c>h</c>,<c>j</c>,<c>k</c> et <c>l</c> (et les touches fléchées) pour vous
déplacer dans le  fichier texte.  Essayez de faire <c>h</c> jusqu'à ce que vous
soyez au début de la ligne. Remarquez que vi ne permet pas 
«&nbsp;d'enchaîner&nbsp;» vers la ligne précédente en appuyant sur <c>h</c> 
lorsque vous êtes sur le premier caractère. De même, vous ne pouvez pas passez à 
la ligne suivante en appuyant sur <c>l</c> à la fin d'une ligne.
</p>

</body>
</section>
<section>
<title>Se déplacer dans vi, partie 2</title>
<body>

<p>
vi offre des raccourcis spéciaux pour sauter au début ou à la fin de la ligne
courante. Vous pouvez appuyer sur <c>0</c> (zéro) pour sauter au premier
caractère de la ligne, et sur <c>$</c> pour sauter au dernier caractère de la
ligne.  Essayez pour voir. Comme vi a beaucoup de commandes de déplacement
pratiques, ça en fait un super «&nbsp;afficheur&nbsp;» (comme les commandes 
more ou less.) Utiliser vi comme afficheur vous aidera également à apprendre 
les commandes de déplacement très rapidement.
</p>

<p>
Vous pouvez également utiliser <c>&lt;CTRL&gt;F</c> et <c>&lt;CTRL&gt;B</c>
pour vous déplacer page par page.  Les versions modernes de vi (comme vim) vous
permettrons également d'utiliser les touches <c>Page suivante</c> et <c>Page
précédente</c> pour ces déplacements.
</p>

</body>
</section>
<section>
<title>Déplacements par mots, partie 1</title>
<body>

<p>
vi vous permet aussi de vous déplacer à droite ou à gauche d'un mot.  Pour vous
déplacer au <e>premier</e> caractère du mot suivant, appuyez sur <c>w</c>. Pour
le dernier caractère du mot suivant, appuyer sur <c>e</c>. Pour vous déplacer
au premier caractère du mot précédent, faite <c>b</c>. Testez ces commandes.
</p>

</body>
</section>
<section>
<title>Déplacements par mots, partie 2</title>
<body>

<p>
Après avoir joué avec les commandes de déplacement par mots, vous avez pu
constater que vi considère les mots du genre <c>foo-bar-oni</c> comme 5 mots
distincts&nbsp;! C'est parce que par défaut, vi délimite les mots par des
espaces <e>ou</e> des caractères de ponctuation. <c>foo-bar-ni</c> est donc
considéré comme cinq mots&nbsp;: <c>foo</c>, <c>-</c>, <c>bar</c>, <c>-</c>,
<c>oni</c>.
</p>

<p>
Parfois, c'est ce que vous voulez, et parfois pas. Heureusement, vi comprend
également le concept de «&nbsp;grand mot&nbsp;».  Par défaut, vi délimite les
grands mots par <e>des espaces et des retours à la ligne uniquement</e>.  Ça
veut dire que vi considère <c>foo-bar-oni</c> à la fois comme cinq mots et à la
fois comme un grand mot.
</p>

</body>
</section>
<section>
<title>Déplacements par mots, partie 3</title>
<body>

<p>
Pour vous déplacer au grand mot suivant ou précédent, vous pouvez utiliser la
version <e>capitalisée</e> de la commande de déplacement par mot. Utilisez
<c>W</c> pour vous déplacer au premier caractère du grand mot suivant, <c>E</c>
pour le dernier caractère du grand mot suivant et <c>B</c> pour vous déplacer
au premier caractère du grand mot précédent.  Testez cela, et comparez la
reconnaissance des mots et des grands mots par les commandes de déplacement
jusqu'à ce que vous ayez compris leurs différences.
</p>


</body>
</section>
<section>
<title>Déplacements plus importants</title>
<body>

<p>
Nous avons encore quelques commandes à parcourir avant qu'il soit temps de
commencer ensemble notre première feuille de triche. Vous pouvez utiliser les
caractères <c>(</c> et <c>)</c> pour vous déplacer au début de la phrase
précédente ou suivante. En plus, vous pouvez presser <c>{</c> ou <c>}</c> pour
sauter au début du paragraphe courant ou suivant.  Testez-les.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Quitter</title>
<section>
<body>

<p>
On a vu les commandes de déplacement de base, mais il y a quelques autres
commandes que vous avez besoin de connaître. Taper <c>:q</c> quittera vi.  Si
ça ne marche pas, c'est que vous avez probablement modifié accidentellement le
fichier, d'une manière ou d'une autre. Pour dire à vi de quitter en ignorant
les modifications, tapez <c>:!q</c>. Vous devriez revenir à l'invite de
commande.
</p>

<p>
Dans vi, toute commande commençant par un <c>:</c> est appelée commande
<e>ex-mode</e>. Ceci parce que vi a un éditeur non visuel intégré appelé
<e>ex</e>. On peut s'en servir de façon similaire à sed pour effectuer des
opérations d'édition par ligne. De plus, On peut aussi s'en servir pour
quitter, comme on vient de le voir. Dès que vous tapez <c>Q</c> en mode
commande, vous passerez en mode ex. Vous serez alors confronté à une invite
avec un «&nbsp;:&nbsp;», et appuyer sur entrée fera défiler tout l'écran vers
le haut.  Pour revenir au bon vieux mode vi, tapez simplement vi et tapez
entrée.
</p>

</body>
</section>
</chapter>

<chapter>
<title>La feuille de triche</title>
<section>
<title>Début de la feuille de triche</title>
<body>

<p>
Nous venons de voir pas mal de commandes et il est temps de les noter sur
notre feuille de triche. Pour ça, vous aurez besoin d'une feuille au format
lettre US ou A4 (nous y noterons beaucoup d'informations&nbsp;!) Voilà une 
image de la mienne après y avoir noté toutes les commandes vues jusqu'ici. 
Essayez de suivre le même modèle si possible pour qu'on arrive à tout y mettre.
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-first.png" short="Première partie de la feuille de triche" caption="Première partie de la feuille de triche"/>

</body>
</section>
<section>
<title>Divers vi</title>
<body>

<p>
Continuons notre survol des commandes. En mode commande, vous pouvez vous
déplacer vers une ligne en particulier en faisant <c>G</c>. Pour aller à la
première ligne d'un fichier, tapez <c>1G</c>. Remarquez que le <c>G</c> est en
majuscule.
</p>

<p>
Si vous voulez vous déplacer à la prochaine occurrence d'un motif particulier 
de texte, tapez <c>/&lt;regexp&gt;</c> puis entrée. Remplacez &lt;regexp&gt; 
par l'expression rationnelle que vous cherchez. Si vous ne connaissez pas les
expressions rationnelles, ne vous inquiétez pas, taper <c>/foo</c> vous
amènera à la prochaine occurrence de <e>foo</e>. La seule chose importante
à noter à ce sujet, c'est de faire attention quand vous utilisez les caractères
<c>^</c>, <c>.</c>, <c>$</c> ou <c>\</c>. Faites-les précéder d'un barre 
oblique arrière (<c>\</c>), et ça marchera. Par exemple, <c>/foo\.gif</c> 
recherchera la prochaine occurrence de <b>foo.gif</b>.
</p>

<p>
Pour poursuivre une recherche vers l'avant, faites <c>n</c>. Pour répéter la
recherche vers l'arrière, faite <c>N</c>. Comme toujours, testez ces commandes 
dans votre propre éditeur vi.  Vous pouvez aussi taper <c>//</c> pour répéter 
la dernière recherche.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Sauver et éditer</title>
<section>
<title>Sauver et sauver sous...</title>
<body>

<p>
Nous avons vu comment vous pouvez utiliser la commande <c>ex</c> <c>:q</c> pour
quitter vi. Si vous voulez sauver vos modifications, tapez <c>:w</c>. Si vous
voulez sauvegarder vos modifications dans un autre fichier, tapez <c>:w
nomfichier.txt</c> pour sauvegarder sous <e>nomfichier.txt</e>. Si vous voulez
sauver et quitter, faites <c>:x</c> ou <c>:wq</c>.
</p>

<p>
Dans vim (et d'autres éditeurs vi évolués, comme elvis), vous pouvez avoir
plusieurs fichiers ouverts simultanément. Pour ouvrir un fichier dans une
nouvelle fenêtre, tapez <c>:sp nomfichier.txt</c>. <path>nomfichier.txt</path>
apparaîtra dans une nouvelle fenêtre partagée. Pour vous déplacer entre les
fenêtres, tapez <c>&lt;CTRL&gt;w&lt;CTRL&gt;w</c> (Contrôle-w deux fois).
Toute commande <c>:q</c>, <c>:q!</c>, <c>:w</c> et <c>:x</c> que vous taperez
ne s'appliquera qu'à la fenêtre active.
</p>

</body>
</section>
<section>
<title>Edition simple</title>
<body>

<p>
Maintenant, il est temps d'apprendre quelques simples commandes d'édition. Les
commandes que nous allons voir sont considérées <e>simples</e> parce qu'elles
se font en mode commande. Les commandes d'édition plus complexes vous font
passer automatiquement en mode édition, un mode qui vous permet de saisir du
texte directement à partir du clavier. Nous verrons le mode édition et les
commandes complexes un peu plus loin.
</p>

<p>
Pour le moment, essayez de vous placer sur des caractères et d'appuyer
plusieurs fois sur <c>x</c>. Vous verrez que <c>x</c> supprime le caractère
sous le curseur. Maintenant, déplacez-vous au milieu d'un paragraphe n'importe
où dans votre fichier texte et faites <c>J</c> (en majuscule). Vous verrez que
la commande <c>J</c> dit à vi de concaténer la ligne suivante à la fin de la
ligne actuelle. Maintenant, placez-vous sur un caractère et tapez <c>r</c>,
puis un nouveau caractère&nbsp;; vous verrez que le caractère original a été
remplacé. Pour finir, placez-vous sur n'importe quelle ligne et tapez
<c>dd</c>. Vous verrez que <c>dd</c> supprime la ligne actuelle du texte.
</p>

</body>
</section>
<section>
<title>Répéter et supprimer</title>
<body>

<p>
Vous pouvez répéter n'importe quelle commande d'édition grace à la touche 
«&nbsp;<c>.</c>&nbsp;» (le point). Si vous essayez, vous verrez que taper 
<c>dd...</c> supprime 4 lignes, et que <c>J...</c> concatène 4 lignes. Comme 
d'habitude, vi fournit d'autres raccourcis pratiques.
</p>

<p>
Pour supprimer du texte, vous pouvez également utiliser la commande <c>d</c>
combinée avec n'importe quelle commande de déplacement.  Par exemple, <c>dw</c>
supprimera à partir de la position courante jusqu'au début du mot suivant&nbsp;;
<c>d)</c> supprimera jusqu'à la fin de la phrase suivante, et <c>d}</c>
supprimera la fin du paragraphe. Expérimentez la commande <c>d</c> et les
autres commandes d'édition jusqu'à ce que vous soyez à l'aise avec.
</p>

</body>
</section>
<section>
<title>Annuler&nbsp;!</title>
<body>

<p>
Maintenant que vous avez testé la suppression, c'est le bon moment pour regarder
comment annuler les modifications.  En appuyant sur <c>u</c>, la version
originale de vi permettait d'annuler la dernière édition uniquement. Par
contre, les versions modernes de vi comme vim vous permettront d'appuyer sur
<c>u</c> plusieurs fois pour continuer à annuler les modifications apportées au
fichier.  Essayez de combiner quelques commandes <c>d</c> et <c>u</c>
ensemble.
</p>

</body>
</section>
<section>
<title>Mise à jour de la feuille de triche</title>
<body>

<p>
C'est le moment de mettre à jour notre feuille de triche. Après y avoir ajouté
les commandes vues jusqu'à présent, votre feuille de triche devrait ressembler à
ça&nbsp;:
</p>

	<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-edit.png" short="Feuille de triche" caption="Feuille de triche avec les commandes d'édition"/>

</body>
</section>
</chapter>

<chapter>
<title>Mode insertion</title>
<section>
<title>Le mode insertion</title>
<body>

<p>
Jusqu'à présent, nous avons vu comment se déplacer dans vi, ouvrir et fermer
des fichiers et réaliser des opérations d'édition simples. Cependant, je ne
vous ai pas encore montré comment saisir du texte librement&nbsp;!  C'était
intentionnel, parce que le mode insertion est un peu compliqué au début.
Néanmoins, quand vous serez à l'aise avec le mode insertion, sa complexité (et
sa flexibilité) vous seront précieuses.
</p>

<p>
En <e>mode insertion</e>, vous pourrez entrer du texte directement, comme dans
beaucoup d'autres éditeurs de texte.  Une fois que vous avez saisi vos
modifications, appuyez sur Échap. pour revenir en <e>mode commande</e>. Vous
pouvez passer en mode insertion en appuyant sur <c>i</c> ou <c>a</c>. Si vous
faites <c>i</c>, votre texte sera <e>inséré</e> avant le caractère courant, et
si vous faites <c>a</c>, votre texte sera <e>ajouté</e> après le caractère
courant.  Souvenez-vous qu'après avoir saisi votre texte, il faut appuyer sur
<c>&lt;ESC&gt;</c> pour revenir en mode commande.
</p>

</body>
</section>
<section>
<title>Bénéfices du mode insertion</title>
<body>

<p>
Allons-y avec les commandes <c>a</c> et <c>i</c> .  Appuyez sur <c>a</c> ou
<c>i</c>, tapez du texte, puis pressez Échap. pour revenir en mode commande.
Après avoir appuyé sur <c>a</c> ou <c>i</c>, pressez <c>&lt;ENTER&gt;</c> et
regardez ce qui se passe. Essayez d'utiliser les touches fléchées et la touche
<c>&lt;DEL&gt;</c> pour voir comment le mode insertion fonctionne. En utilisant
ces touches, vous pouvez largement éditer du texte sans avoir à entrer et
sortir constamment du mode édition.
</p>

</body>
</section>
<section>
<title>Options d'insertion </title>
<body>

<p>
Voici quelques autres façons pratiques de passer en mode insertion. Appuyer sur
<c>A</c> (en majuscule) pour ajouter du texte à la fin de la ligne courante,
quelle que soit votre position sur la ligne. De même, appuyez sur <c>I</c> pour
insérer du texte au début de la ligne actuelle. Appuyer sur <c>o</c> crée une
ligne vide sous la ligne du curseur, dans laquelle vous pouvez insérer du
texte, et <c>O</c> (en majuscule) insère une ligne au dessus de la ligne du
curseur.  Pour remplacer complètement la ligne courante par une nouvelle ligne,
tapez <c>cc</c>. Pour tout remplacer à partir de la position courante du
curseur jusqu'à la fin de la ligne, faites <c>c$</c>. Pour tout remplacer du
début de la ligne à la position courante, tapez <c>c0</c>.
</p>

<p>
En plus de leur action spécifique, chacune de ces commande vous mettra en mode
insertion. Après avoir tapé votre texte, appuyez sur <c>&lt;ESC&gt;</c> pour
repasser en mode commande.
</p>

</body>
</section>
<section>
<title>Changer du texte</title>
<body>

<p>
Nous avons déjà utilisé plusieurs fois la commande <c>c</c> (changer), en
tapant <c>cc</c>, <c>c0</c> et <c>c$</c>. <c>cc</c> est une forme spéciale de
la commande de changement, similaire à <c>dd</c>. Les commandes <c>c0</c> et
<c>c$</c> sont des exemples d'utilisation de la commande de changement combinée
avec une commande de déplacement. Dans cette forme, <c>c</c> fonctionne de la
même manière que la commande <c>d</c>, sauf qu'elle vous laisse en mode
insertion pour que vous puissiez insérer du texte à la place du texte effacé.
Essayez de combiner des commandes de déplacement avec la commande <c>c</c> et
testez-les sur votre fichier (suggestions&nbsp;: <c>cW</c>, <c>ce</c>, 
<c>c(</c> .)
</p>

</body>
</section>
</chapter>

<chapter>
<title>Commandes composées</title>
<section>
<body>

<p>
vi devient <e>vraiment</e> très puissant quand vous commencez à utiliser des
commandes composées du genre <c>d{</c> et <c>cw</c>.  En plus de ces
commandes, vous pouvez combiner un nombre avec n'importe quelle commande de
déplacement, comme <c>3w</c> qui commande à vi de sauter 3 mots vers la
droite. Voici quelques autres exemples de commandes composées&nbsp;: <c>12b</c>,
<c>4j</c>.
</p>

<p>
En plus des combinaisons du genre (nombre)(commande de déplacement), vi permet
de combiner <c>d</c> ou <c>c</c> avec un nombre ou une commande de
déplacement. Donc, <c>d3w</c> effacera les 3 mots suivants, <c>d2j</c>
supprimera la ligne courante et les deux lignes suivantes, etc.  Testez
quelques commandes composées à base de <c>c</c> et <c>d</c> pour bien sentir à
quel point vi est précis et puissant. Une fois ces commandes parfaitement
maîtrisées, vous serez capables d'éditer des fichiers à une vitesse
impressionnante.
</p>

</body>
</section>
<section>
<title>Mise à jour de la feuille de triche</title>
<body>

<p>
Il est temps de remettre à jour la feuille de triche. Voici à quoi elle devrait
ressembler maintenant&nbsp;:
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-compound.png"
short="Feuille de triche" caption="Feuille de triche avec les commandes composées"/>

</body>
</section>
<section>
<title>Fonctionnalités pratiques</title>
<body>

<p>
Jusqu'à présent, nous avons vu comment se déplacer, sauvegarder et quitter,
réaliser des opérations de suppression et d'insertion simples.  Grâce à tout ce
que nous avons noté sur notre feuille de triche, vous devriez être capable
d'utiliser vi pour presque n'importe quelle tâche.
</p>

<p>
Cependant, vi dispose de bien d'autres commandes puissantes. Dans cette
section, je vais vous apprendre coment <e>couper</e>, <e>copier</e> et
<e>coller</e>, <e>rechercher</e> et <e>remplacer</e>, et utiliser les fonctions
<e>d'indentation automatique</e>. Ces commandes rendront vi plus amusant et
efficace.
</p>

</body>
</section>
<section>
<title>Mode visuel</title>
<body>

<p>
Le meilleur moyen de couper et coller est d'utiliser le <e>mode visuel</e>, un
mode spécial ajouté aux versions modernes de vi, comme vim ou elvis.  Vous
pouvez voir le mode visuel comme un mode où le texte peut être mis en
surbrillance.  Une fois le texte mis en surbrillance, il peut être coupé ou
copié, puis collé. Si vous utilisez gvim, vous pouvez mettre du texte en
surbrillance simplement en maintenant le bouton gauche de la souris enfoncé
puis en déplacant le curseur sur une région donnée du texte&nbsp;:
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vihighlight.png"
short="Texte mis en évidence" caption="VIM avec du texte mis en évidence"/>

<p>
De plus, vous pouvez également passer en mode visuel en pressant la touche
<c>v</c> (ça peut être la seule solution si vous utilisez vi en mode console.)
Ensuite, en déplaçant le curseur à l'aide des commandes de déplacement (par
exemple avec les touches fléchées), vous pourrez mettre une zone de texte en
surbrillance.  Une fois sélectionné, le texte peut être coupé ou copié.
</p>

<p>
Si vous voulez copier le texte, appuyez sur <c>y</c> (pour «&nbsp;yank&nbsp;» 
en anglais). Si vous préférez couper le texte, faites <c>d</c>.  Vous allez 
revenir en mode commande. Déplacez-vous maintenant là où vous voulez insérer le 
texte copié ou coupé, et pressez <c>p</c> pour l'insérer après le curseur ou 
<c>P</c> pour l'insérer avant. Voilà, le couper/copier et coller est fini&nbsp;! 
Testez plusieurs autres opérations de couper/copier et coller avant de passer 
à la section suivante.
</p>

</body>
</section>
<section>
<title>Remplacer du texte</title>
<body>

<p>
Pour remplacer des motifs de texte, nous utiliserons le mode <e>ex</e>. Si vous
voulez remplacer la première occurrence d'un motif dans la ligne courante,
tapez <c>:s/&lt;regexp&gt;/&lt;remplacement&gt;/</c> puis <c>&lt;ENTER&gt;</c>,
où &lt;regexp&gt; est le motif à remplacer et &lt;remplacement&gt; la chaîne de
caractères de remplacement. Pour remplacer toutes les occurrences d'un motif
dans la ligne courante, tapez <c>:s/&lt;regexp&gt;/&lt;remplacement&gt;/g</c>
puis entrée. Pour remplacer toutes les occurrences du motif dans votre fichier
(normalement, c'est ce que vous voulez), tapez
<c>:%s/&lt;regexp&gt;/&lt;remplacement&gt;/g</c>. Si vous voulez faire un
changement sur l'ensemble du fichier, mais que vi vous demande une confirmation
avant chaque changement, tapez
<c>:%s/&lt;regexp&gt;/&lt;remplacement&gt;/gc</c> («&nbsp;c&nbsp;» pour
«&nbsp;confirmer&nbsp;») puis appuyez sur <c>&lt;ENTER&gt;</c>.
</p>

</body>
</section>
<section>
<title>Indentation</title>
<body>

<p>
vi prend en charge l'indentation automatique, utile quand vous éditez du code
source.  La plupart des versions modernes de vi (comme vim) activeront
automatiquement ce mode quand vous éditerez un fichier source (un fichier .c
par exemple). Quand l'indentation automatique est activée, vous pouvez utiliser
<c>&lt;CTRL&gt;d</c> (control-d) pour indenter d'un cran de moins vers la
gauche, et <c>&lt;CTRL&gt;t</c> (control-t) pour indenter d'un cran de plus
vers la droite. Si l'indentation automatique n'a pas été activée
automatiquement, vous pouvez l'activer manuellement en tapant la commande du
mode <e>ex</e> <c>:set autoindent</c>. Vous pouvez également demander à vi de
configurer la taille d'une tabulation selon votre préférence en utilisant la
commande <c>:set tabstop</c>&nbsp;; La configuration <c>:set tabstop=4</c> est 
assez populaire.
</p>

</body>
</section>
<section>
<title>Notre feuille de triche finale</title>
<body>

<p>
Bon, nous arrivons à la fin du tutoriel sur vi&nbsp;!<br/>
Après avoir ajouté toutes les commandes d'éditions avancées à notre feuille de 
triche, elle devrait ressembler à ceci&nbsp;:
</p>

<figure link="http://www.ibiblio.org/web-gentoo/images/vicheat-final.png"
short="Feuille de triche terminée" caption="Feuille de triche terminée"/>

<p>
Conservez votre feuille de triche sous la main et commencez à éditer des
fichiers et à taper vos courriels sous vi.  Référez-vous à votre feuille de 
triche au besoin. Vous verrez que, d'ici une semaine, vous aurez mémorisé 
presque toutes les commandes et votre productivité sous vi se sera nettement 
améliorée.
</p>

<p>
Si vous voulez définir vi comme votre éditeur par défaut, vous devez modifier
<path>/etc/rc.conf</path> comme suit&nbsp;:
</p>


<pre caption="Définir vi comme éditeur par défaut">
<comment>(Attribuez le nom de votre éditeur préféré à EDITOR.)</comment>
#EDITOR="/bin/nano"
EDITOR="/usr/bin/vim"
#EDITOR="/usr/bin/emacs"
</pre>

</body>
</section>
<section>
<title>Ressources</title>
<body>

<p>
Voici quelques ressources que vous pourriez trouver utiles pour en apprendre
davantage sur vi&nbsp;:
</p>

<ul>
  <li>
    <uri link="http://www.thomer.com/thomer/vi/vi.html">Le site des amoureux de
    vi</uri>, une ressource excellente pour tout ce qui concerne vi.
  </li>
  <li>
    <uri link="http://www.vim.org/">Le site de VIM</uri> est le meilleur
    endroit où aller pour tout savoir sur vim.
  </li>
  <li>
    Si vous cherchez un bon vieux livre, <uri
    link="http://www.oreilly.com/catalog/vi6/">Learning the vi Editor, 6th
    Edition</uri> devrait être un excellent choix. Il couvre largement vi et
    ses clones.
  </li>
</ul>

</body>
</section>
<section>
<title>À propos de ce document</title>
<body>

<p>
La version originale de cet article a été publiée sur le site developerWorks 
d'IBM et est la propriété de Westtech Information Services. Ce document est
une mise à jour de l'article original et contient diverses améliorations faites
par l'équipe de documentation de Gentoo.
</p>

</body>
</section>
</chapter>
</guide>
