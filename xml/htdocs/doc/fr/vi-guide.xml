<?xml version="1.0" encoding="iso-8859-15"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<guide link = "/doc/en/vi-guide.xml">
<title>Apprendre vi -- la technique de  "la feuille de triche" </title>
<author title="Author"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title="Author"><mail link="stocke2@gentoo.org">Eric Stockbridge</mail></author>
<author title="Traducteur"><mail link="sylvain.meilard@wanadoo.fr">Sylvain Meilard</mail></author>
<abstract>Ce guide va vous apprendre comment utiliser vi, en utilisant une méthode de feuille de triche pour accélerer le processus d'apprentissage. Ce sera le premier guide pour vi dédié aux débutants.</abstract>
<version>1.1</version>
<date>15 Nov 2002</date>

<chapter>
<title>Pour démarrer</title>
<section>
<title>Introduction</title>
<body>
<p>
Ce tutoriel va vous montrer comment utiliser vi, un éditeur de texte puissant. En utilisant
une méthode spéciale accélérée de "feuille de triche", ce tutoriel et conçu pour faire de vous
un utilisateur de vi compétent sans vous y faire passer trop de temps. Dans ce tutoriel sur vi,
vous apprendrez comment vous déplacer, éditer du texte, utiliser le mode insertion, copier et coller
du texte, et utiliser des extensions importantes de vi comme le mode visuel et l'édition multi-fenêtres.

</p><p>
Si vous ne savez pas vous servir de vi ou que vous n'y êtes pas à l'aise, vous vous devez
de lire ce tutoriel pour devenir efficace avec l'un des éditeurs de texte le plus populaire et le plus puissant
sous Linux/UNIX.</p>
        
</body>
</section>
<section>
<title>A propos de ce guide</title>
<title>Apprendre vi -- survol</title>
<body>
<p>
Il y a une chose en particulier qui rend l'apprentissage de vi difficile -- vi a beaucoup de commandes.
Pour se servir de vi efficacement, vous avez besoin d'en mémoriser quelques une. Ca peut prendre pas mal de temps, et
un des objectifs de ce tutoriel est de ne pas vous prendre beaucoup de temps. Donc, pour commencer, le défi -- comment
vais-je vous aider à mémoriser pleins de commandes en peu de temps?
</p>
<p>
Pour relever ce défi, ce qu'on va faire dans ce tutoriel, ce sera de mettre au point ensemble progressivement
une "feuille de triche" pour vi. Cette feuille contiendra toutes les commandes importantes. Quand vous aurez fini
ce tutoriel, vous pourrez vous y référer si vous avez oublié une commande en particulier.
Au fur et à mesure que vous mémoriserez des commandes, vous pourrez vous passer progressivement de la feuille de triche.
En utilisant cette technique, vous apprendrez vi plus vite qu'il n'a jamais été possible!
</p>
</body>
</section>
<section>
<title>Le processus d'apprentissage</title>
<body>

<p>Dans ce guide, je vais utiliser plusieurs techniques pour vous aider à apprendre.
D'abord, je vais vous montrer comment marche une commande en particulier, comme vous vous y attendez. Ensuite je
vous demanderai d'essayer d'utiliser cette commande dans vi (pour s'entrainer), puis de transcrire
la commande sur la feuille de triche (pour vous y référer plus tard). Si vous voulez apprendre vi rapidement, il est important
de suivre toutes ces étapes. Essayer les commandes dans vi et les noter sur votre feuille de triche vous aidera à les mémoriser.
</p>
</body>
</section>
<section>
<title>Présentation de vim</title>
<body>

<p>Il existe plusieurs versions de vi, et je vais vous montrer comment vous servir d'une
version de vi appelée "vim". vim est très populaire et possède un nombre d'extensions
qui le rendent encore meilleur (chaque fois que j'expliquerai une commande propre à vim,
je le signalerai.) Si vous avez besoin d'installer vim, vous pouvez le récupérer sur
<uri href="http://www.vim.org">http://www.vim.org</uri>.
En plus du vi amélioré en ligne de commande, vim inclu gvim, un éditeur graphique sympa
qui peut être configuré pour utiliser l'excellente librairie graphique GTK+. Voici une capture d'écran de mon système:</p>

<figure link="http://www.ibiblio.org/pub/Linux/distributions/gentoo/images/vishot.png" short="capture d'écran" caption="capture d'écran de VIM"/>

<p>Si vous débutez avec vi, essayez d'installer gvim sur votre système. Utiliser vi
à partir de l'interface graphique peut rendre les choses plus faciles pour les débutants</p>

</body>
</section>
</chapter>
<chapter>
<title>Premiers Pas</title>
<section>
<title>Ouvrir un fichier</title>
<body>
<p>Avant d'éditer des fichiers avec vi, vous devez savoir comment vous déplacer
dans un fichier. vi a pleins de commandes de déplacement, et nous allons en voir
beaucoup d'entre elles. Pour cette partie du tutoriel, cherchez un fichier texte non important
et chargez le dans vi en tapant:</p>
<pre>
$ vi monfichier.txt
</pre><p>
Si vous avez vim d'installé, tappez "vim monfichier.txt". Si vous préferez utiliser gvim, tappez
"gvim monfichier.txt". monfichier.txt est le nom du fichier texte sur votre système.
</p>
</body>
</section>

<section>
<title>Dans vi</title>
<body>

<p>Une fois vi lancé, vous devriez voir à l'écran une partie du fichier texte que vous avez ouvert.
Félicitations -- vous êtes dans vi! A la différence de beaucoup d'éditeurs, quand vi démarre, il est
dans un mode spécial appelé le "mode commande". Cela signifie que si vous appuyez sur "l" au clavier,
au lieu d'insérer un "l" dans le fichier à la position actuelle du curseur, le curseur va se déplacer
d'un caractère vers la doite à la place. En mode commande, les touches de votre clavier sont utilisées
pour envoyer des commandes à vi plutot que d'insérer litéralement les caractères dans le texte.
Parmi les types de commandes les plus importantes, il y a les commandes de déplacements;
regardons en quelques une.</p>

</body>
</section>
</chapter>
<chapter>
<title>Déplacements</title>
<section>
<title>Se déplacer dans vi, partie 1</title>
<body>

	<p>En mode de commande, vous pouvez utiliser les touches <c>h</c>,<c>j</c>,<c>k</c> et <c>l</c> pour déplacer le curseur respectivement
à gauche, en bas, en haut et à droite. Si vous utilisez une version récente de vi, vous pouvez également
utiliser les touches fléchées pour ces déplacements. Les touches <c>h</c>,<c>j</c>,<c>k</c> et <c>l</c> sont pratiques, parce qu'une fois
que vous serez à l'aise avec, vous n'aurez plus besoin de déplacer les doigts vers les touches fléchées.
Essayez d'utiliser les touches <c>h</c>,<c>j</c>,<c>k</c> et <c>l</c> (et les touches fléchées) pour vous déplacer dans le  fichier texte.
Essayez de faire <c>h</c> jusqu'à ce que vous soyez au début de la ligne. Remarquez que vi ne permet pas "d'enchainer" vers la ligne précédente
en appuyant sur <c>h</c> et que vous êtes sur le premier caractère. De même, vous ne pouvez pas passez à la ligne suivante en appuyant sur <c>l</c>
à la fin d'une ligne.
</p>

</body>
</section>
<section>
<title>Se déplacer dans vi, partie 2</title>
<body>

<p>vi offre des raccourcis spéciaux pour sauter au début ou à la fin de la ligne courante. Vous pouvez
appuyer sur <c>0</c> (zéro) pour sauter au premier caractère de la ligne, et sur <c>$</c> pour sauter au dernier caractère de la ligne.
Essayez pour voir. Comme vi a pleins de commandes de déplacement pratiques, ça en fait un super "afficheur" (comme les commandes more ou less.)
Utiliser vi comme afficheur vous aidera également à apprendre les commandes de déplacement très rapidement.</p>

<p>Vous pouvez également utiliser <c>&lt;CTRL&gt;F</c> et <c>&lt;CTRL&gt;B</c> pour vous déplacer page par page.
Les versions modernes de vi (comme vim) vous permettrons également d'utiliser les touches PGUP et PGDOWN pour ces déplacements.
</p>

</body>
</section>
<section>
<title>Déplacements par mots, partie 1</title>
<body>
	<p>vi vous permet aussi de vous déplacer à droite ou à gauche d'un mot.  Pour vous déplacer au <i>premier</i> caractère du
	mot suivant, appuyez sur <c>w</c>. Pour le dernier caractère du mot suivant, appuyer sur <c>e</c>.Pour vous déplacer au
	premier caractère du mot précédent, faite <c>b</c>. Testez ces commandes.</p>
</body>
</section>

<section>
<title>Déplacements par mots, partie 2</title>
<body>
<p>Après avoir joué avec les commandes de déplacement par mots, vous avez pu constater que vi
considère les mots du genre "foo-bar-oni" comme 5 mots distincts! C'est parce que par défaut,
vi délimite les mots par des espaces <i>ou</i> des caractères de ponctuation. foo-bar-ni est donc considéré
comme cinq mots: "foo", "-", "bar", "-", "oni".</p>
<p>Parfois, c'est ce que vous voulez, et parfois pas. Heureusement, vi comprend également le concept de "grand mot".
Par défaut, vi délimite les grands mots par <i>des espaces et des retours à la ligne uniquement</i>.
Ca veut dire que vi considère foo-bar-oni à la fois comme cinq mots, et à la fois comme un grand mot.</p>

</body>
</section>
<section>
<title>Déplacements par mots, partie 3</title>
<body>
<p>Pour vous déplacer au grand mot suivant ou précédent, vous pouvez utiliser la version <i>capitalisée</i> de la
commande de déplacement par mot. Utilisez <c>W</c> pour vous déplacer au premier caractère du grand mot suivant, <c>E</c>
pour le dernier caractère du grand mot suivant, et <c>B</c> pour vous déplacer au premier caractère du grand mot précédent.
Testez ça, et comparez la reconnaissance des mots et des grands mots par les commandes de déplacement jusqu'à ce que vous ayez
compris leurs différences.
</p>


</body>
</section>
<section>
<title>Déplacements plus importants</title>
<body>
	<p>Nous avons encore quelques commandes à parcourir avant qu'il soit temps de commencer ensemble notre première
	feuille de triche. Vous pouvez utilisez les caractères <c>(</c> et <c>)</c> pour vous déplacer au début de la phrase
	précédente ou suivante. En plus, vous pouvez presser <c>{</c> ou <c>}</c> pour sauter au début du paragraphe courant ou suivant.
	Tester les.</p>

</body>
</section>
</chapter>
<chapter>
<title>quitter</title>
<section>
<title>Quitter</title>
<body>
<p>On a vu les commandes de déplacement de base, mais il y a quelques autres commandes que vous avez besoin
de connaitre. Tapper <c>:q</c> fera quitter vi. Si ça ne marche pas, c'est que vous avez probablement modifié accidentellemnt
le fichier, d'une manière ou d'une autre. Pour dire à vi de quitter, en ignorant les modifications, tappez <c>:!q</c>. Vous
devriez être revenu à l'invite de commande.</p>

<p>Dans vi, toute commande commençant par un ":" est appelée commande <i>ex-mode</i>. Ceci parce que vi a un éditeur
non visuel intégré appelé <e>ex</e>. On peut s'en servir de façon similaire à sed pour effectuer des opérations
d'édition par ligne. De plus, ça peut aussi servir à quitter, comme on vient de le voir. Si vous avez déjà appuyé sur <c>Q</c>
en mode commande, vous passerez en mode ex. Si jamais ceci vous arrive, vous serez confronté à une invite avec un ":", et appuyer sur
entrée fera défiler entièrement l'écran. Pour revenir au bon vieux mode de vi, tappez simplement vi et faites entrée.</p>

</body>
</section>
</chapter>
<chapter>
<title>La feuille de triche</title>
<section>
<title>Début de la feuille de triche</title>
<body>
<p>Nous venons de voir pas mal de commandes, et il est temps de les marquer sur notre feuille de triche. Pour ça,
vous aurez besoin d'une feuille au format lettre US ou a4 (nous y marquerons beaucoup d'informations!) Voilà une image
de la mienne après y avoir noté toutes les commandes vus jusque'ici. Essayez de suivre le même modèle si possible
pour qu'on arrive à tout y mettre.</p>

<figure link="http://www.ibiblio.org/pub/Linux/distributions/gentoo/images/vicheat-first.png" short="Première partie de la feuille de triche" caption="Feuille de triche"/>

</body>

</section>
<section>
<title>Divers vi</title>

<body>
<p>Continuons notre repérage des commandes. En mode commande, vous pouvez vous déplacer vers une ligne en particulier en faisant <c>G</c>. Pour aller à
la première ligne d'un fichier, tappez <c>1G</c>. Remarquez que le <c>G</c> est en majuscule.</p>
<p>Si vous voulez vous déplacer à la prochaine occurence d'un motif particulier de texte, tappez <c>/&lt;regexp&gt;</c> puis entrée. Remplacez &lt;regexp&gt; 
par l'expression régulière que vous cherchez. Si vous ne connaissez pas les expressions régulières, ne vous inquiétez pas -- tapper <c>/foo</c> vous amènera à
la prochaine occurence de <i>foo</i>. La seule chose à faire attention à ce sujet, c'est quand vous voudrez utiliser les caractères <i>^</i>, <i>.</i>,
<i>$</i> ou <i>\</i>. Faites les précéder d'un antislash (<i>\</i>), et ça marchera. Par exemple, <c>/foo\.gif</c> recherchera la prochaine occurence 
de "<i>foo.gif</i>".</p>
<p>Pour poursuivre cette recherche en avant, faites <c>n</c>. Pour répéter la recherche en arrière, faite <c>N</c>. Comme toujours, testez ces commandes
dans votre propre éditeur vi. Vous pouvez aussi tapper <c>//</c> pour répéter la dernière recherche.</p>

</body>
</section>
</chapter>
<chapter>
<title>Sauver et Editer</title>
<section>
<title>Sauver et sauver sous...</title>
<body>
<p>Nous avons vu comment vous pouvez utiliser la commande <i>ex</i> <c>:q</c> pour quitter vi. Si vous voulez sauver vos
modifications, tappez <c>:w</c>. Si vous voulez sauvegarder vos modifications dans un autre fichier, tappez <c>:w nomfichier.txt</c> pour
sauvegarder sous <e>nomfichier.txt</e>. Si vous voulez sauver et quitter, faites <c>:x</c> ou <c>:wq</c>.</p>
<p>Dans vim (et d'autres éditeurs vi évolués, comme elvis), vous pouvez avoir plusieurs fichiers ouverts simultanément. Pour ouvrir un fichier dans
une nouvelle fenêtre, tappez <c>:sp nomfichier.txt</c>. <e>nomfichier.txt</e> apparaitra dans une nouvelle fenêtre partagée. Pour vous déplacer entre
les fenêtres, tappez <c>&lt;CTRL&gt;w&lt;CTRL&gt;w</c> (control-w deux fois).  N'importe quelle commande <c>:q</c>, <c>:q!</c>, <c>:w</c> et <c>:x</c> que
vous tapperez ne s'appliquera qu'à la fenêtre active courante.</p>

</body>
</section>

<section>
<title>Edition simple</title>
<body>
<p>Maintenant, il est temps d'apprendre quelques commandes simple d'édition. Les commandes que
nous allons voir sont considérées comme "simple" parce qu'elles se font en mode commande. Les commandes
d'édition plus complexes vous font passer automatiquement en mode édition -- un mode qui vous permet
de saisir du texte directement à partir clavier. Nous allons voir ça.</p>
<p>Pour le moment, essayez de vous placer sur des caractères et d'appuyer plusieurs fois sur <c>x</c>. Vous
verrez que <c>x</c> supprime le caractère actuellement sous le curseur. Maintenant, déplacez vous  au milieu d'un paragraphe
n'importe où dans votre fichier texte, et faites <c>J</c> (en majuscule). Vous verrez que la commande <c>J</c> dit
à vi de concaténer la ligne suivante à la fin de la ligne actuelle. Maintenant, placez vous sur un caractère et tappez <c>r</c>,
puis un nouveau caractère; vous verrez que le caractère original a été remplacé. Pour finir, placez vous sur n'importe quelle ligne
et tappez <c>dd</c>. Vous verrez que <c>dd</c> supprime la ligne actuelle du texte.</p>

</body>
</section>
<section>
<title>Répéter et supprimer</title>
<body>
	<p>Vous pouvez répéter n'importe quelle commande d'édition grace à la touche<c>.</c> . Si vous essayez, vous verrez
	que tapper <c>dd...</c> supprime 4 lignes, et <c>J...</c> concatène 4 lignes. Comme d'habitude, vi fournit d'autres
	racourcis pratiques.
</p>
<p>Pour supprimer du texte, vous pouvez également utiliser la commande <c>d</c> combinée avec n'importe quelle commande de déplacement.  Par exemple,
<c>dw</c> supprimera à partir de la position courante, jusqu'au début du mot suivant; <c>d)</c> supprimera jusquà la fin de la phrase suivante,
et <c>d}</c> supprimera la fin du paragraphe. Expérimentez la commande <c>d</c> et les autres commandes d'édition jusquà ce que vous soyez à l'aise avec.</p>
</body>
</section>
<section>
<title>Annuler!</title>
<body>
<p>Maintenant que vous avez testé la supression, c'est le bon moment pour regarder comment annuler les modifications.
En apuyant sur <c>u</c>, la version originale de vi permettait d'annuler la dernière édition uniquement. Par contre, les versions modernes
de vi comme vim vous permettront d'appuyer sur <c>u</c> plusieurs fois pour continuer à annuler les modifications apportées au fichier.
Essayez de combiner quelques commandes <c>d</c> et <c>u</c> ensembles.
</p>
</body>
</section>

<section>
<title>Mise à jour de la feuille de triche</title>
<body>
<p>C'est le moment de mettre à jour notre feuille de triche! Après y avoir ajouté les commandes vues jusquà présent, votre
feuille de triche devrait ressembler à ça :</p>

	<figure link="http://www.ibiblio.org/pub/Linux/distributions/gentoo/images/vicheat-edit.png" short="Feuille de triche" caption="Feuille de triche evc les commandes d'édition"/>

</body>
</section>
</chapter>
<chapter>
<title>Mode insertion</title>
<section>
<title>Le mode insertion</title>

<body>
<p>Jusquà présent, nous avons vu comment se déplacer dans vi, ouvrir et fermer des fichiers, et réaliser
des opérations d'édition simples. Cependant, je ne vous ai pas encore montré comment saisir du texte  librement !
C'était intentionnel, parce que le mode insertion est un peu compliqué au début. Néanmoins, quand vous serez à
l'aise avec le mode insertion, sa complexité (et sa flexibilité) vous seront précieuses.
</p>
<p>En mode insertion sous vi, vous pourrez entrer du texte directement comme dans beaucoup d'autres éditeurs de texte.
Une fois que vous avez saisi vos modifications, appuyez sur Echap pour revenir en mode commande. Vous pouvez passer en mode insertion
en appuyant sur <c>i</c> ou <c>a</c>. Si vous faites <c>i</c>, votre texte sera <e>inséré</e> avant le caractère courant, et si vous faites
<c>a</c>, votre texte sera <e>ajouté</e> après le caractère courant. Souvenez vous qu'après avoir saisi votre texte, il faut
appuyer sur <c>&lt;ESC&gt;</c> pour revenir en mode commande.</p>
</body>
</section>
<section>
<title>Bénéfices du mode insertion</title>
<body>
	<p>Allons-y avec les commandes <c>a</c> et <c>i</c> .  Appuyez soit sur <c>a</c> ou <c>i</c>, tappez du texte, puis pressez
	Echap pour revenir en mode commande. Après avoir appuyé sur <c>a</c> ou <c>i</c>, pressez <c>&lt;ENTER&gt;</c> et regardez
	ce qui se passe. Essayez d'utiliser les touches fléchées et la touche <c>&lt;DEL&gt;</c> pour voir comment le mode insertion fonctionne.
	En utilisant ces touches, vous pouvez largement éditer du texte sans avoir à entrer et sortir constamment du mode édition.</p>

</body>
</section>
<section>
<title>Options d'insertion </title>
<body>
	<p>Voici quelques autre façons pratiques de passer en mode insertion. Appuyer sur <c>A</c> (en majuscule) pour
	ajouter du texte à la fin de la ligne courante, quelle que soit votre position sur la ligne. De même, appuyez sur <c>I</c>
	pour insérer du texte au début de la ligne actuelle. Appuyer sur <c>o</c> crée une ligne vide sous la ligne du curseur, dans
	laquelle vous pouvez insérer du texte, et <c>O</c> (en majuscule) insère une ligne au dessus de la ligne du curseur.
	Pour remplacer complètement la ligne courante par une nouvelle ligne, tappez <c>cc</c>. Pour tout remplacer à partir de la position
	courante du curseur jusquà la fin de la ligne, faites <c>c$</c>. Pour tout remplacer du début de la ligne à la position courante,
	tappez <c>c$</c>.</p>
	<p>En plus de leur action spécifique, chacune de ces commande vous mettra en mode insertion. Après avoir tappé votre texte, appuyer
	sur <c>&lt;ESC&gt;</c> pour repasser en mode commande.</p>

</body>
</section>
<section>
<title>Changer du texte</title>
<body>
	<p>Nous avons utilisé un peu la commande <c>c</c> (changer) jusqu'à présent, en tapant <c>cc</c>, <c>c0</c> et <c>c$</c>. <c>cc</c> est une
	forme spéciale de la commande de changement, similaire à <c>dd</c>. Les commandes <c>c0</c> et <c>c$</c> sont des exemples d'utilisation de la
	commande de changement combinée avec une commande de déplacement. Dans cette forme, <c>c</c> fonctionne de la même manière que la commande
	<c>d</c>, sauf qu'elle vous laisse en mode insertion pour que vous puissiez insérer du texte à la place du texte effacé. Essayez de combiner
	des commandes de déplacement avec la commande <c>c</c> et testez les sur votre fichier (suggestions : <c>cW</c>, <c>ce</c>, <c>c(</c> .)
</p>

</body>
</section>
</chapter>
<chapter>
<title>Commandes Composées</title>
<section>
<title>Commandes composées</title>
<body>
	<p>vi devient <e>vraiement</e> très puissant quand vous commencez à utiliser des commandes composées, du genre <c>d{</c> et <c>cw</c>.
	En plus de ces commandes, vous pouvez combiner un nombre avec n'importe quelle commande de déplacement, comme <c>3w</c>, qui commande à
	vi de sauter 3 mots vers la droite. Voisci quelques autres exemples de commandes composées : <c>12b</c>, <c>4j</c>.</p>
<p>En plus des combinaisons du genre (nombre)(commande de déplacement), vi permet également de combiner <c>d</c> ou <c>c</c> avec un nombre ou
une commande de déplacement. Donc, <c>d3w</c> effacera les 3 mots suivants, <c>d2j</c> supprimera la ligne courante, et les deux lignes suivantes, etc.
Testez quelques commandes composées à base de <c>c</c> et <c>d</c> pour bien sentir à quel point vi est précis et puissant. Une fois ces commandes
parfaitement maitrisées, vous serez capables d'éditer des fichiers à une vitesse impressionnante.</p>

</body>
</section>
<section>
<title>Mise à jour de la feuille de triche</title>
<body>
<p>Il est temps de remettre à jour la feuille de triche. Voici à quoi elle devrait ressembler maintenant :</p>
<p>
	<figure link="http://www.ibiblio.org/pub/Linux/distributions/gentoo/images/vicheat-compound.png" short="Cheat Sheet" caption="Cheat sheet with compound commands"/>

</p>
</body>
</section>
<section>
<title>Fonctionalités pratiques</title>

<body>
<p>Jusquà présent, nous avons vu comment se déplacer, sauvegarder et quitter, réaliser des opérations de suppression et d'insertion simples.
Grâce à tout ce que nous avons noté sur notre feuille de triche, vous devriez être capable d'utiliser vi pour presque n'importe quelle tâche.</p>
<p>Cependant, vi dispose de bien d'autres commandes puissantes. Dans cette section, je vais vous apprendre coment <e>couper</e>, <e>copier</e> et
<e>coller</e>, <e>rechercher</e> et <e>remplacer</e>, et utiliser les fonctions <e>d'auto-indentation</e>. Ces commandes vous rendront
vi plus amusant et efficace.</p>

</body>
</section>
<section>
<title>Mode visuel</title>
<body>
<p>Le meilleur moyen de couper et coller est d'utiliser le mode visuel, un mode spécial ajouté aux versions modernes de vi, comme vim ou elvis.
Vous pouvez voir le mode visuel comme un mode où le texte peut être mis en "vidéo inverse". Une fois le texte mis en vidéo inverse, il peut être
coupé ou copié, puis collé. Si vous utilisez gvim, vous pouvez mettre du texte en vidéo inverse simplement en cliquant gauche puis en se déplacant
sur une zone particulière:</p>
<p>
	<figure link="http://www.ibiblio.org/pub/Linux/distributions/gentoo/images/vihighlight.png" short="Highlighted text" caption="VIM with highlighted text"/>

</p>
</body>
</section>
<section>
<title></title>
<body>

	<p>De plus, vous pouvez également passer en mode visuel en pressant la touche <c>v</c> (ça peut être la
	seule solution si vous utiliser vi en mode console.) Ensuite, en déplaçant le curseur à l'aide des commandes de déplacement
	(typiquement, avec les touches fléchées), vous pourrez mettre en vidéo inverse une zone de texte. Une fois sélectionné, vous êtes
	prêt à couper ou copier ce texte.</p>

<p>Si vous voulez copier le texte, apuyez sur <c>y</c> (pour "yank" en anglais). Si vous préférez couper le texte, faites <c>d</c>.
Vous allez revenir en mode commande. Déplacez vous maintenant là où vous voulez insérer le texte copier ou coupé, et pressez <c>P</c> pour l'insérer
après le curseur, ou <c>p</c> pour l'insérer avant. Voilà, le couper/copier et coller est fini! Testez plusieurs autres opérations de couper/copier
et coller avant de passer à la section suivante.</p>

</body>
</section>
<section>
<title>Remplacer du texte</title>
<body>
	<p>Pour remplacer des motifs de texte, nous utilisons le mode <e>ex</e>. Si vous voulez remplacer le premier motif de la ligne
	courante, tappez <c>:s/&lt;regexp&gt;/&lt;remplacement&gt;/</c> puis <c>&lt;ENTER&gt;</c>, où &lt;regexp&gt; 
	est le motif à remplacer et &lt;remplacement&gt; la chaine de caractères de remplacement. Pour remplacer toutes les occurences de
	la ligne courante, tappez <c>:s/&lt;regexp&gt;/&lt;remplacement&gt;/g</c> puis entrée. Pour remplacer toutes les occurences du motif
	dans votre fichier (normalement, c'est ce que vous voulez), tappez <c>:%s/&lt;regexp&gt;/&lt;remplacement&gt;/g</c>.
	Si vous voulez faire un changement sur l'ensemble du fichier, mais que vi vous demande une confirmation avant chaque changement,
	tappez <c>:%s/&lt;regexp&gt;/&lt;remplacement&gt;/gc</c> ("c" pour "confirmer") puis appuyez sur <c>&lt;ENTER&gt;</c>.</p>

</body>
</section>
<section>
<title>Indentation</title>
<body>
<p>vi prend en charge l'auto-indentation, pour quand vous éditez du code source. La plupart des versions modernes de vi (comme vim)
activeront automatiquement ce mode quand vous éditerez un fichier source (un fichier .c par exemple) Quand l'auto-indentation est activée,
vous pouvez utiliser <c>&lt;CTRL&gt;d</c> (control-d) pour indenter d'un cran de moins vers la gauche, et <c>&lt;CTRL&gt;t</c> (control-t)
pour indenter d'un cran de plus vers la droite. Si l'auto-indentation n'était pas activée automatiquement, vous pouvez l'activer manuellement
en tapant la commande du mode <e>ex</e> <c>:set autoindent</c>. Vous pouvez également demander à vi de configurer la taille d'une tabulation
selon votre préférence en utilisant la commande <c>:set tabstop</c>; La configuration <c>:set tabstop=4</c> est assez populaire.</p>

</body>
</section>
<section>
<title>Notre feuille de triche finale</title>
<body>
<p>Bon, j'atteins la fin du tutoriel sur vi! Après y avoir ajouté toutes les commandes d'éditions avancées à notre feuille de triche, elle
devrait ressembler à ceci :</p>
<p>
	<figure link="http://www.ibiblio.org/pub/Linux/distributions/gentoo/images/vicheat-final.png" short="Cheat Sheet" caption="Final cheet sheet"/>

</p>

<p>Conservez votre feuille de triche sous la main, et commencez à éditer des fichiers et à tapper vos mails sous vi.
Référez vous à votre feuille de triche au besoin; Vous verrez que d'ici une semaine vous aurez mémorisé presque toutes les commandes,
et votre productivité sous vi traversera le plafond!</p>

</body>
</section>
<section>
<title>Ressources</title>
<body>
<p>Voici quelques ressources que vous pourrez trouver utiles pour en apprendre d'avantage sur vi:</p>
<ul>
<li><uri link="http://www.thomer.com/thomer/vi/vi.html">Le site des amoureux de vi</uri>, une ressource excellente pour tout ce qui concerne vi.</li>
<li><uri link="http://www.vim.org">Le site de VIM</uri> est le meilleur endroit où aller pour tous vos besoins liés à vi.</li>
<li>Si vous cherchez un bon vieux livre, <uri link="http://www.oreilly.com/catalog/vi6/">Learning the vi Editor, 6th Edition</uri> devrait être un excellent choix. Il couvre largement vi et ses clones.</li>
</ul>
</body>
</section>
</chapter>
</guide>
