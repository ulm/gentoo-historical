<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/vserver-howto.xml,v 1.2 2005/08/08 11:28:41 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/vserver-howto.xml" lang="fr">
<title>Guide Gentoo de Linux-VServer</title>

<author title="Auteur">
  <mail link="hollow@gentoo.org">Benedikt Boehm</mail>
</author>
<author title="Correcteur">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Traducteur">
  <mail link="djayweb@djayux.net">Gérald Fenoy</mail>
</author>

<abstract>
Dans ce guide, vous apprendrez à installer un serveur virtuel de base utilisant
la technologie Linux-VServer.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.0</version>
<date>2005-06-17</date>

<chapter>
<title>Introduction</title>
<section>
<title>Le concept de Linux-VServer</title>
<body>

<p>
Le concept au cœur de la solution Linux-VServer est de séparer l'environnement
de l'espace utilisateur en unités distinctes (parfois appelées Serveurs Privés
Virtuels) de telle manière que chaque SPV ressemble à s'y tromper à un vrai
serveur contenant ses propres processus.
</p>

</body>
</section>
<section>
<title>Termes utilisés dans ce guide</title>
<body>

<table>
<tr>
  <th>Terme</th>
  <th>Description</th>
</tr>
<tr>
  <th>Linux-VServer, VServer</th>
  <ti>
    Linux-VServer est le nom officiel du projet et est utilisé comme tel dans ce
    guide.
  </ti>
</tr>
<tr>
  <th>Serveur virtuel, vserver, système invité</th>
  <ti>
    Tous ces termes sont interchangeables et font référence à une instance d'un
    serveur (c'est-à-dire un serveur virtuel en particulier).
  </ti>
</tr>
<tr>
  <th>Système hôte, hôte</th>
  <ti>
    La machine physique tournant sous Gentoo Linux qui accueillera tous les
    serveurs virtuels.
  </ti>
</tr>
<tr>
  <th>Util-vserver, utilitaires vserver</th>
  <ti>
    Le paquet <c>util-vserver</c> contient tous les programmes nécessaires pour
    maintenir vos serveurs virtuels.
  </ti>
</tr>
</table>

</body>
</section>
</chapter>

<chapter>
<title>Créer un modèle de VServer</title>
<section>
<title>Installer un noyau VServer</title>
<body>

<pre caption="Installer les vserver-sources">
# <i>emerge vserver-sources</i>
</pre>

<p>
Une fois les vserver-sources installées, il est temps de les configurer en
utilisant la commande&nbsp;: <c>make menuconfig</c>.
</p>

<pre caption="Configuration de vserver-sources">
# <i>cd /usr/src/linux-&lt;KERNELVERSION&gt;-vserver-&lt;VSERVERVERSION&gt;</i>
# <i>make menuconfig</i>

Linux VServer ---&gt;
<comment>(Requis par les utilitaires actuels.)</comment>
  [*] Enable Legacy Kernel API
<comment>(Ne pas activer !)</comment>
  [ ] Disable Legacy Networking Kernel API
<comment>(Hautement recommandé.)</comment>
  [*] Enable Proc Security
  [ ] Enable Hard CPU Limits
        Persistent Inode Context Tagging (UID24/GID24)  ---&gt;
  [ ] Tag NFSD User Auth and Files
  [ ] Compile Debugging Code
</pre>

<p>
Après avoir compilé et installé votre noyau, mettez à jour votre chargeur de
démarrage et, pour finir, redémarrez la machine pour voir si le noyau démarre
correctement.
</p>

<pre caption="Installer le noyau">
<comment>(Compiler le noyau :)</comment>
# <i>make</i>
<comment>(Installer :)</comment>
# <i>make modules_install</i>
# <i>cp arch/i386/boot/bzImage /boot/kernel-&lt;KERNELVERSION&gt;-vs&lt;VSERVERVERSION&gt;</i>
<comment>(Éditer le fichier de configuration du chargeur de démarrage, puis :)</comment>
# <i>reboot</i>
</pre>

</body>
</section>
<section>
<title>Configurer l'environnement hôte</title>
<body>

<p>
Pour maintenir vos serveurs virtuels, vous avez besoin du paquet util-vserver
qui contient tous les programmes nécessaires et plusieurs dispositifs utiles.
</p>

<pre caption="Installer les utilitaires vserver">
# <i>emerge util-vserver</i>
</pre>

<p>
Si vous utilisez la Sécurité Proc vous devez «&nbsp;démasquer&nbsp;» certains
fichiers de votre répertoire <path>/proc</path> afin de les rendre accessibles à
partir des serveurs virtuels. Il y a un script nommé <c>vprocunhide</c> dans
<path>/usr/lib/util-vserver</path> qui permet de rendre accessibles les fichiers
spécifiés dans <path>/usr/lib/util-vserver/defaults/vprocunhide-files</path>.
L'ebuild util-vserver a installé un script d'initialisation qui utilise la
commande <c>vprocunhide</c>. Ajoutez-le à votre niveau d'exécution (runlevel).
</p>

<pre caption="Script d'initialisation vprocunhide">
# <i>rc-update add vprocunhide default</i>
# <i>/etc/init.d/vprocunhide start</i>
</pre>

<p>
Le script vshelper est utilisé pour arrêter et redémarrer correctement les
serveurs virtuels. Vous devez indiquer au noyau où se trouve le script vshelper.
</p>

<pre caption="Configuration de vshelper">
# <i>echo 'kernel.vshelper = /usr/lib/util-vserver/vshelper' &gt;&gt; /etc/sysctl.conf</i>
# <i>sysctl -p</i>
</pre>

</body>
</section>
<section>
<title>Squelette de configuration de base</title>
<body>

<p>
Vous devez créer certains répertoires et fichiers de configuration pour que vos
serveurs virtuels fonctionnent et soient actifs. Nous utilisons le mode de
fabrication de squelette du paquet util-vserver pour mettre en place notre
configuration de base.
</p>

<p>
Par défaut, le paquet util-vserver utilise le répertoire <path>/vservers</path>
pour stocker tous les serveurs virtuels. Vous pouvez mettre vos serveurs à un
autre endroit en spécifiant <c>--rootdir=/path/to/vserver/root</c> lors de
l'utilisation de la commande ci-dessous.
</p>

<p>
Il y a un nouvel ebuild baselayout-vserver dans portage qui supporte le modèle
d'initialisation plat, c'est-à-dire que vous n'avez plus à utiliser le mode
d'initialisation de Gentoo. Le mode d'initialisation plat utilise <c>init</c> et
<path>/etc/inittab</path> pour contrôler les niveaux d'exécution et les scripts
d'initialisation (il est jugé plus stable et il est dorénavant le mode par
défaut).
</p>

<p>
Vous devez choisir un identifiant (ID) de contexte pour votre vserver (les ID
dynamiques sont à proscrire), de même que les informations nécessaires
concernant les périphériques réseaux (dans notre exemple, eth0 est configuré
avec 192.168.1.254/24 et l'identifiant de contexte est équivalent aux deux
dernières parties de l'adresse IP du serveur virtuel).
</p>

<pre caption="Configuration de base">
# <i>vserver gentoo build -m skeleton \</i>
  <i>--hostname gentoo \</i>
  <i>--initstyle plain \</i>
  <i>--context 1253</i>
  <i>--interface gentoo=eth0:192.168.1.253/24</i>
</pre>

<impo>
Par défaut, le serveur virtuel est autorisé à attribuer lui-même un nom
d'hôte. Assurez-vous de changer votre <path>/etc/conf.d/hostname</path> dans
votre serveur virtuel afin qu'il coïncide avec le nom d'hôte ci-dessus.
</impo>

</body>
</section>
<section>
<title>Installer les fichiers d'installation Gentoo</title>
<body>

<p>
Nous créons un modèle Gentoo que nous pourrons copier plus tard afin d'avoir
facilement de multiples serveurs virtuels. Le script de fabrication de vserver
crée certains répertoires dans <path>/vservers/gentoo</path> qui sont installés
par un stage de toute manière&nbsp;; nous commençons donc par les supprimer.
</p>

<pre caption="Suppression des fichiers squelettes">
# <i>rm -rf /vservers/gentoo/*</i>
</pre>

<p>
Vous devez maintenant installer un système Gentoo normal. Vous pouvez suivre
la majeure partie du manuel de Gentoo avec certaines limites et ajouts&nbsp;:
</p>

<ul>
  <li>
    Remplacer <path>/mnt/gentoo</path> par <path>/vservers/gentoo</path>.
  </li>
  <li>
    Choisir le profil <path>vserver/x86</path> au <uri
    link="/doc/fr/handbook/handbook-x86.xml?part=1&amp;chap=6#doc_chap1_sect6">chapitre
    6.a</uri>.
  </li>
  <li>
    Utiliser les stages de vserver disponibles <uri
    link="http://dev.gentoo.org/~hollow/vserver/stages/">ici</uri>.
  </li>
</ul>

<p>
Maintenant, suivez le manuel de Gentoo du <uri
link="/doc/fr/handbook/handbook-x86.xml?part=1&amp;chap=5#doc_chap2">chapitre
5.b</uri> au chapitre 7.a et du <uri
link="/doc/fr/handbook/handbook-x86.xml?part=1&amp;chap=8#doc_chap3">chapitre
8.c</uri> au chapitre 9.c.
</p>

<note>
Afin de refléter votre configuration réseau, vous devriez changer vos fichiers
<path>/etc/conf.d/hostname</path>, <path>/etc/conf.d/domainname</path> et
<path>/etc/hosts</path> suivant vos besoins. Jetez un coup d'œil au <uri
link="/doc/fr/handbook/handbook-x86.xml?part=1&amp;chap=8#doc_chap2_sect1">chapitre
8.b.1</uri> et au <uri
link="/doc/fr/handbook/handbook-x86.xml?part=1&amp;chap=8#doc_chap2_sect4">chapitre
8.b.4</uri>. Le reste de vos configurations réseaux de vos serveurs virtuels
sera fait sur l'hôte.
</note>

</body>
</section>
<section>
<title>Changements nécessaires des fichiers des configuration</title>
<body>

<p>
Changez la valeur pour «&nbsp;source&nbsp;» dans
<path>/etc/syslog-ng/syslog-ng.conf</path> parce que nous n'avons pas la
permission de lire <path>/proc/kmsg</path> pour des raisons de sécurité et
supprimez la destination console.
</p>

<pre caption="Édition de /etc/syslog-ng/syslog-ng.conf">
<comment>(Changez ceci :)</comment>
source src { unix-stream("/dev/log"); internal(); pipe("/proc/kmsg"); };
<comment>(En cela :)</comment>
source src { unix-stream("/dev/log"); internal(); };

<comment>(Supprimez ces lignes :)</comment>
# By default messages are logged to tty12...
destination console_all { file("/dev/tty12"); };
# ...if you intend to use /dev/console for programs like xconsole
# you can comment out the destination line above that references /dev/tty12
# and uncomment the line below.
#destination console_all { file("/dev/console"); };

log { source(src); destination(console_all); };
</pre>

</body>
</section>
<section>
<title>Quitter l'environnement chrooté</title>
<body>

<p>
Votre système devrait être prêt. Quittez le chroot et démontez le système de
fichiers proc.
</p>

<pre caption="Quitter l'environnement chroot">
# <i>exit</i>
# <i>umount /vservers/gentoo/proc/</i>
</pre>

</body>
</section>
<section>
<title>Tester le serveur virtuel</title>
<body>

<p>
Vous devriez être capable de démarrer et d'entrer dans le vserver en utilisant
les commandes suivantes. Si vous n'avez pas les commandes telles que
<c>mount</c> ou <c>dmesg</c>, vous devriez installer l'ebuild util-linux dans
votre serveur virtuel, étant donné que, par défaut, le profil vserver ne
contient pas ce paquet.
</p>

<pre caption="Tester le serveur virtuel">
# <i>vserver gentoo start</i>
# <i>vserver-stat</i>
CTX   PROC    VSZ    RSS  userTIME   sysTIME    UPTIME NAME
0       90   1.4G 153.4K  14m00s11   6m45s17   2h59m59 root server
1253     2     3M   286    0m00s45   0m00s42   0m02s91 gentoo
# <i>vserver gentoo enter</i>
# <i>ps ax</i>
PID   TTY      STAT   TIME COMMAND
    1 ?        S      0:00 init [3]
22887 ?        Ss     0:00 /usr/sbin/syslog-ng
20496 pts/0    S      0:00 /bin/bash -login
20508 pts/0    R+     0:00 ps ax
# <i>halt</i>
Killed
</pre>

</body>
</section>
<section>
<title>Contact</title>
<body>

<p>
N'hésitez pas à contacter l'auteur ou à créer un rapport de bogue sur notre <uri
link="http://bugs.gentoo.org">Bugzilla</uri> en cas de problème.
</p>

</body>
</section>
</chapter>
</guide>
