<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/change-chost.xml,v 1.7 2013/09/01 06:30:54 jaaf Exp $ -->

<guide lang="fr" disclaimer="obsolete" redirect="https://wiki.gentoo.org/wiki/Changing_the_CHOST_variable/fr">

<title>Changement de la variable CHOST</title>

<author title="Auteur">
  <mail link="amne@gentoo.org">Wernfried Haas</mail>
</author>
<author title="Relecteur">
  <mail link="vapier@gentoo.org">Mike Frysinger</mail>
</author>
<author title='"Correcteur"'>
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>
<author title="Traducteur">
  <mail link="titefleur@gentoo.org">Marion Agé</mail>
</author>

<abstract>
Ce document explique comment changer la variable CHOST sur un système existant.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>3</version>
<date>2008-07-29</date>

<chapter>
<title>Introduction</title>
<section>
<body>

<p>
Le changement de la variable CHOST est un grand enjeu qui peut sérieusement
endommager votre système - par conséquent, pourquoi ce guide explique-t-il
cette procédure&nbsp;?
</p>

<p>
Il y a certaines situations où le changement de CHOST est inévitable. Par
exemple, vous voulez mettre à jour glibc vers la version 2.4 qui ne supporte
que nptl et vous découvrez que votre CHOST est i386, ce qui rend impossible
l'utilisation de nptl. Dans ce cas, vous n'avez pas beaucoup d'options et le
changement de CHOST est l'une d'entre elles.
</p>

<p>
Même après avoir suivi ces instructions, des problèmes peuvent surgir.
Veuillez vous assurer de les lire et de les exécuter très précautionneusement.
Dans cet exemple, le CHOST sera changé de i386 à i686, si vous faites d'autres
changements, veillez à changer les commandes en conséquence.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Changement de la variable CHOST</title>
<section>
<title>Établissement des paquets</title>
<body>

<p>
Pour commencer le changement de CHOST, éditez le fichier
<path>/etc/make.conf</path> et changez la valeur de <b>CHOST</b> selon ce que
vous désirez. Ensuite, reconstruisez les paquets suivants dans cet ordre&nbsp;: 
</p>

<pre caption="Reconstruction des outils importants du système">
# <i>emerge -av1 binutils gcc glibc</i>
</pre>

<impo>
Veuillez noter que les mises à jour majeures de gcc qui se déroulent en même
temps que le changement de CHOST (par exemple, commencer avec gcc 3.3 et le
CHOST i386 puis basculer vers gcc 4.1 et le CHOST i686) peuvent mener à de
graves effets secondaires.  Il peut ne pas être impossible de faire ceci, mais
il est difficile de prévoir quels problèmes peuvent potentiellement surgir et
de les documenter dans ce guide. Par conséquent, veuillez ne faire qu'une seule
chose à la fois, par exemple commencez par mettre à jour gcc selon notre <uri
link="/doc/fr/gcc-upgrading.xml">guide de mise à jour de gcc</uri>, puis
changez votre CHOST ensuite. Si vous êtes sur un système avec un CHOST=i386,
vous aurez besoin de masquer glibc 2.4 (et supérieur) durant la mise à jour de
gcc, car elle ne peut pas être utilisée avec le CHOST i386, puis de la
démasquer une fois que ce sera terminé.
</impo>

</body>
</section>
<section>
<title>Vérification du bon fonctionnement des choses</title>
<body>

<p>
Maintenant il est temps de s'assurer que votre <c>gcc-config</c> et que les
paramètres de <c>binutils-config</c> sont corrects et que vous n'avez pas
d'anciens restes dans <path>/etc/env.d</path>.
</p>

<p>
Les affichages de sortie de <c>gcc-config</c> et <c>binutils-config</c>
devraient ressembler à ceci (ils peuvent différer selon votre version de gcc et
votre CHOST, ici il s'agit de gcc 4.1.1 et d'un CHOST i686)&nbsp;:
</p>

<pre caption="Vérification de l'installation">
# <i>gcc-config -l</i>
 [1] i686-pc-linux-gnu-4.1.1 *
# <i>gcc-config -c</i>
i686-pc-linux-gnu-4.1.1

# <i>binutils-config -l</i>
 [1] i686-pc-linux-gnu-2.16.1 *
# <i>binutils-config -c</i>
i686-pc-linux-gnu-2.16.1
</pre>

<p>
Ensuite, regardez s'il y a des références à l'ancien CHOST dans 
<path>/etc/env.d/</path>&nbsp;:
</p>

<pre caption="Vérification des références à l'ancien CHOST">
# <i>cd /etc/env.d/</i>
# <i>grep 386 *</i>
05gcc-i386-pc-linux-gnu:PATH="/usr/i386-pc-linux-gnu/gcc-bin/4.1.1"
05gcc-i386-pc-linux-gnu:ROOTPATH="/usr/i386-pc-linux-gnu/gcc-bin/4.1.1"
</pre>

<note>
Cela peut ne pas se produire pour vous, mais dans ce cas
05gcc-i386-pc-linux-gnu contient des références à l'ancien CHOST. Les choses
peuvent être différentes sur votre système, selon votre CHOST de
départ/d'arrivée, ou même être tout simplement bonnes. En outre, le nom
pourrait être 05gcc-your_new_CHOST-pc-linux-gnu.
</note>

<p>
Avant de supprimer le fichier, vérifions les fichiers avec le nouveau
CHOST&nbsp;:
</p>

<pre caption="Vérification des fichiers avec le nouveau CHOST">
# <i>grep 686 *</i> 
05binutils:MANPATH=/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/man
05binutils:INFOPATH=/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/info
05binutils:LDPATH=/usr/i686-pc-linux-gnu/lib
05gcc:PATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
05gcc:ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
05gcc:MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/man"
05gcc:INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/info"
05gcc:LDPATH="/usr/lib/gcc/i686-pc-linux-gnu/4.1.1"
</pre>

<p>
Ceci semble correct car il y a toujours un fichier pour <c>gcc</c> dans
<path>/etc/env.d</path> (05gcc dans cet exemple), ainsi supprimons celui qui a
les mauvaises références&nbsp;:
</p>

<pre caption="Suppression des fichiers avec les mauvaises références">
# <i>rm 05gcc-i386-pc-linux-gnu</i>
</pre>

<p>
La même procédure est à appliquer à <c>binutils</c> - s'il y en a un
supplémentaire, regardez lequel est dépassé et supprimez-le. Ensuite, vérifiez
votre <path>/etc/env.d/binutils/</path>.
</p>

<pre caption="Vérification pour binutils">
# <i>cd /etc/env.d/binutils/</i>
# <i>ls -la</i>
total 8
-rw-r--r-- 1 root root  15 Sep  3 13:48 config-i686-pc-linux-gnu
-rw-r--r-- 1 root root 126 Sep  3 13:48 i686-pc-linux-gnu-2.16.1

# <i>cat config-i686-pc-linux-gnu</i>
CURRENT=2.16.1
# <i>cat i686-pc-linux-gnu-2.16.1</i>
TARGET="i686-pc-linux-gnu"
VER="2.16.1"
LIBPATH="/usr/lib/binutils/i686-pc-linux-gnu/2.16.1"
FAKE_TARGETS="i686-pc-linux-gnu"
</pre>

<p>
Cela semble bon, ces deux fichiers devraient effectivement être là. Il est
temps de se rendre dans le répertoire de gcc.
</p>

<pre caption="Vérification des bons paramètres pour gcc">
# <i>cd /etc/env.d/gcc</i>
# <i>ls -la</i>
total 12
-rw-r--r-- 1 root root  32 Sep  3 16:43 config
-rw-r--r-- 1 root root  32 Aug  3 14:25 config-i386-pc-linux-gnu
-rw-r--r-- 1 root root 292 Sep  3 16:43 i686-pc-linux-gnu-4.1.1

# <i>cat config</i>
CURRENT=i686-pc-linux-gnu-4.1.1

# <i>cat config-i386-pc-linux-gnu</i>
CURRENT=i386-pc-linux-gnu-4.1.1

# <i>cat i686-pc-linux-gnu-4.1.1</i>
PATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
ROOTPATH="/usr/i686-pc-linux-gnu/gcc-bin/4.1.1"
LDPATH="/usr/lib/gcc/i686-pc-linux-gnu/4.1.1"
GCCBITS="32"
MANPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/man"
INFOPATH="/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/info"
STDCXX_INCDIR="g++-v4"
</pre>

<p>
<path>config</path> et <path>i686-pc-linux-gnu-4.1.1</path> sont corrects, mais
<path>config-i386-pc-linux-gnu</path> est un autre reste qui a besoin d'être 
effacé.
</p>

<note>
De nouveau, les noms des fichiers qui contiennent des références à des versions
dépassées de gcc peuvent être différents, par exemple config-i686-pc-linux-gnu
même si vous changez vers i686. Il est important que vous identifiez le fichier
sur son contenu et non seulement sur son nom.
</note>

<pre caption="Suppression des fichiers erronés de gcc config">
# <i>rm config-i386-pc-linux-gnu</i>
</pre>

<p>
Maintenant, exécutez les commandes suivantes pour mettre à jour votre
environnement&nbsp;:
</p>

<pre caption="Mise à jour de l'environnement">
# <i>env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Ensuite, vérifiez que tout est bien établi&nbsp;:
</p>

<pre caption="Vérification de l'absence des références à l'ancien CHOST">
# <i>grep -r 386 /etc/env.d/</i>
</pre>

<p>
Si vous trouvez encore quelque chose, vous avez dû oublier quelques fichiers,
essayez de les dépister avant de continuer.
</p>

</body>
</section>
<section>
<title>Finalisation du changement</title>
<body>

<p>
Il est maintenant nécessaire de réinstaller <c>libtool</c> et d'exécuter
<c>/usr/share/gcc-data/$CHOST/&lt;gcc-version&gt;/fix_libtool_files.sh</c>.
Assurez-vous d'utiliser la bonne version de gcc (votre version courante, 4.1.1
ici, et l'ancienne architecture, i386 ici). Remplacez $CHOST par votre nouveau
CHOST et &lt;gcc-version&gt; par la version de gcc. Voici l'exemple d'un CHOST
i686&nbsp;:
</p>

<pre caption="S'assurer du bon équilibre des bibliothèques">
# <i>emerge -av1 libtool</i>
# <i>fix_libtool_files.sh 4.1.1 --oldarch i386-pc-linux-gnu</i>
# <i>/usr/share/gcc-data/i686-pc-linux-gnu/4.1.1/fix_libtool_files.sh 4.1.1 --oldarch i386-pc-linux-gnu</i>
</pre>

<p>
Vous pouvez vouloir reconstruire tous vos paquets&nbsp;:
</p>

<pre caption="Reconstruction de l'ensemble des paquets">
# <i>emerge -e world</i>
</pre>

<p>
Maintenant, en théorie, il ne devrait pas être nécessaire de faire cela, mais
il n'est pas garanti à 100% que ce soit effectivement le cas. Si vous ne
recompilez pas l'ensemble des paquets, je vous dis au moins les quelques
paquets qui ont besoin d'être recompilés, ainsi vous devrez faire&nbsp;:
</p>

<pre caption="Recompilation de Python">
# <i>emerge -av1 python</i>
</pre>

<p>
Tous les paquets utilisant Perl s'installent dans le répertoire CHOST et
nécessitent par conséquent d'être recompilés. Dans le cas où vous n'avez pas
installé <c>qfile</c>, vous aurez besoin d'installer
<c>app-portage/portage-utils</c> en premier.
</p>

<pre caption="Recompilation des paquets Perl">
# <i>emerge -av portage-utils</i>
# <i>emerge -av1 `qfile /usr/lib/perl* -Cq | sort -u`</i>
</pre>

<p>
Si vous rencontrez d'autres paquets qui ont besoin d'être recompilés, veuillez
le faire savoir à l'auteur de ce document.
</p>

</body>
</section>
<section>
<title>Problèmes courants</title>
<body>

<p>
Lors de la mise à jour de gcc depuis la version 3.3 vers la 4.1 simultanément
au changement de CHOST (veuillez ne pas faire cela de toute façon), des
utilisateurs ont reporté des paquets cassés qui nécessitaient d'être
recompilés, comme <c>groff</c> et <c>courier</c>&nbsp;:
</p>

<pre caption="Message d'erreur">
error while loading shared libraries: libstdc++.so.5: cannot open shared object file: No such file or directory  
</pre>

<p>
C'est un problème qui arrive parce que pendant la mise à jour, le CHOST ne
correspond pas exactement à CTARGET et le compilateur suppose une compilation
croisée. Par conséquent, LDPATH n'est pas inséré dans le fichier
<path>ld.so.conf</path>, ce qui produit cette erreur.
</p>

<p>
Veuillez consulter notre <uri link="/doc/fr/gcc-upgrading.xml">guide de mise à
jour de gcc</uri> pour savoir ce qu'il est nécessaire de recompiler après une
mise à jour de gcc.
</p>

<p>
Dans quelques rares cas, cela peut casser d'anciennes version de Python aussi.
Cela peut être corrigé en ajoutant
<path>/usr/lib/gcc-lib/i386-pc-linux-gnu/3.3.6</path> (adaptez selon votre
ancien CHOST et votre version de gcc) au fichier <path>/etc/ld.so.conf</path>,
exécutez <c>ldconfig</c> et enfin <c>emerge libstdc++-v3</c>. Néanmoins, comme
vous pouvez le constater, vous devez vraiment éviter de vous embarquer dans ce
problème - ne changez pas votre CHOST et votre version de gcc en même temps.
</p>

</body>
</section>
<section>
<title>Retours sur expérience</title>
<body>

<p>
Ce devrait être tout, les réactions (que cela fonctionne, échoue ou tout autre
problème que vous rencontrez) sont les bienvenues, veuillez envoyer un courrier
électronique à <mail>amne@gentoo.org</mail> ou soumettre un message dans <uri
link="http://forums.gentoo.org/viewtopic-t-494147.html">ce sujet du forum</uri>
(anglophone). La plupart de ce tutoriel vient de Vapier, merci à lui pour son
aide&nbsp;!
</p>

</body>
</section>
</chapter>
</guide>
