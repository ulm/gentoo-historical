<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/gentoo-sparc-netboot-howto.xml,v 1.5 2010/05/06 09:27:57 titefleur Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="fr">
<title>Manuel d'installation de serveur Netboot sous Gentoo Linux</title>

<author title="Développeur SPARC">
  <mail link="weeve"/>
</author>
<author title="Correcteur">
  <mail link="nightmorph"/>
</author>
<author title="Traducteur">
  <mail link="gerald@djayux.net">Gérald Fenoy</mail>
</author>
<author title="Traducteur">
  <mail link="clement@varaldi.org">Clément Varaldi</mail>
</author>
<author title="Traducteur">
  <mail link="titefleur"/>
</author>

<abstract>
Guide d'installation d'un serveur netboot pour utiliser l'image d'installation
netboot de Gentoo/SPARC.
</abstract>
<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.4</version>
<date>2010-03-02</date>

<chapter>
<title>Introduction</title>
<section>
<body>

<note>
Ce guide est, pour le moment, vraiment orienté SPARC et suppose que vous
installerez votre serveur netboot sur une machine déjà sous Gentoo.
</note>

<p>
Ce document décrira comment configurer un environnement démarrant par le réseau
pour un ordinateur de type Sun Microsystem SPARC ou UltraSPARC. Le document
suppose que vous ayez une machine avec un système Gentoo Linux pouvant servir
de serveur netboot.
</p>

<p>
Le serveur netboot et le client netboot devront appartenir au même sous-réseau,
du fait que le protocole ARP n'est typiquement pas transmis d'un sous-réseau à
un autre.
</p>

<p>
Voici une vue d'ensemble de ce qui se passe lors du processus de démarrage par
le réseau&nbsp;:
</p>

<ol>
  <li>
    La machine cliente envoie une requête Reverse ARP (RARP) afin d'obtenir une
    adresse IP.
  </li>
  <li>
    La machine serveur retourne une réponse au client, contenant l'adresse IP.
  </li>
  <li>
    Le client tente alors de télécharger l'image de démarrage du serveur RARP
    en utilisant le protocole TFTP.
  </li>
  <li>
    Une fois l'image téléchargée, le client netboot démarre alors sur l'image.
  </li>
</ol>

<p>
D'après cette vue d'ensemble, nous aurons besoin d'installer un démon
pour le reverse ARP et un serveur pour le TFTP.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installation des logiciels et configuration</title>
<section>
<title>Le serveur de Reverse ARP</title>
<body>


<p>
Vous pouvez choisir actuellement entre deux démons de Reverse ARP,
<c>net-misc/iputils</c> (installé en tant que partie du profil système) et
<c>net-misc/rarpd</c>.
</p>

<note>
Installer <c>net-misc/rarpd</c> remplacera l'exécutable <c>rarpd</c> et les
pages de manuel de <c>net-misc/iputils</c>.
</note>

<p>
<b>Configurer les éléments standards de rarpd&nbsp;:</b>
<path>/etc/ethers</path>
</p>

<p>
Quel que soit le démon <c>rarpd</c> que vous choisissez, vous aurez besoin de
configurer le fichier <path>/etc/ethers</path>. Ce fichier indique quels seront
les clients auxquels <c>rarpd</c> devra répondre lorsqu'une requête sera reçue
et quelle adresse envoyer en réponse.
</p>

<p>
Le fichier <path>/etc/ethers</path> contient l'adresse MAC de la machine depuis
laquelle on démarrera et le nom de la machine en question. Un espace délimite
l'adresse MAC du nom de la machine et chaque entrée a sa propre ligne.
L'exemple suivant est pour une machine nommée sparc-netboot.gentoo.org&nbsp;:
</p>

<pre caption="Fichier /etc/ethers d'exemple">
08:00:20:77:1f:3e sparc-netboot.gentoo.org
</pre>

<note>
Si un nombre hexadecimal donné de l'adresse MAC commence par ou est 0, vous
pouvez choisir de ne pas mettre le premier 0 (par exemple 08:00:20:77:1f:3e
devient 8:0:20:77:1f:3e).
</note>

<p>
Si vous désirez ajouter d'autres machines à /etc/ethers, vous n'avez pas besoin
de redémarrer le service <c>rarpd</c> puisque le fichier est vérifié à chaque
fois qu'une requête est reçue.
</p>

<p>
<b>Résoudre les noms de machine&nbsp;:</b> <path>/etc/hosts</path>
</p>

<p>
Puisque chaque entrée de <path>/etc/ethers</path> a un nom de machine, le
serveur netboot doit être capable de résoudre le nom de la machine par son
adresse IP. Cela peut être fait de deux façons, avec <path>/etc/hosts</path> ou
en utilisant le serveur de noms de domaine utilisé par le serveur netboot.
</p>

<p>
Une entrée dans <path>/etc/hosts</path> pour résoudre le nom de machine
ressemblera à l'une de celles qui existent probablement déjà depuis que vous
avez installé Gentoo sur le serveur netboot. Pour notre hôte exemple,
sparc-netboot.gentoo.org, nous supposerons qu'il a l'adresse IP 10.0.1.15. Donc
l'entrée dans <path>/etc/hosts</path> ressemblera à&nbsp;:
</p>

<pre caption="/etc/hosts">
10.0.1.15  sparc-netboot.gentoo.org
</pre>


<note>
Selon l'environnement, vous devrez peut-être consulter votre administrateur
réseau pour obtenir les adresses IP appropriées des clients qui utiliseront le
serveur netboot.
</note>

<p>
Si vous utilisez un serveur de noms, alors l'administrateur du serveur DNS
devra ajouter un enregistrement pour l'hôte, dans notre exemple
sparc-netboot.gentoo.org, pointant vers l'adresse IP appropriée. Merci de
consulter l'administrateur de votre serveur de noms et/ou la documentation des
logiciels de serveurs de noms pour y ajouter une entrée.
</p>

<note>
Si <path>/etc/hosts</path> et le serveur de noms ont une entrée pour l'hôte qui
doit être démarrée au travers du réseau, <path>/etc/hosts</path> sera utilisé
en premier (en supposant que l'ordre de <path>/etc/nsswitch.conf</path> n'ait
pas été changé par rapport à la configuration par défaut).
</note>

<p>
<b>Configurer le serveur rarpd de net-misc/iputils</b>
</p>

<p>
Premièrement, nous aurons besoin de déterminer les options à utiliser pour
<c>rarpd</c>. Même s'il y a plus d'options que celles que nous allons présenter
ici, ces options devraient vous permettre de commencer. Comme il n'y a
actuellement pas de script d'initialisation <path>init.d</path> pour la version
<c>net-misc/iputils</c> de <c>rarpd</c>, une entrée devra être ajoutée à
<path>/etc/conf.d/local.start</path> si vous souhaitez activer les services
<c>rarpd</c> au démarrage. Voici un exemple d'entrée&nbsp;:
</p>

<pre caption="/etc/conf.d/local.start">
/usr/sbin/rarpd -v -e eth0
</pre>

<p>
Une explication des options précédentes pour <c>rarpd</c> (issue de la page de
man)&nbsp;:
</p>

<ul>
  <li><c>-v</c> pour être verbeux.</li>
  <li>
    <c>-e</c> pour que le serveur ne vérifie pas la présence de l'image de
    démarrage et qu'il réponde si l'adresse MAC résout une adresse IP valide en
    utilisant la base de donnée <path>/etc/ethers</path> et le DNS.
  </li>
  <li>eth0 représente l'interface que <c>rarpd</c> devra écouter.</li>
</ul>

<p>
Pour plus d'options, consultez le manuel <c>man 8 rarpd</c>.
</p>

<p>
<b>Mettre en place net-misc/rarpd</b>
</p>

<p>
Tout d'abord, nous devons installer <c>rarpd</c> en utilisant la commande
suivante&nbsp;:
</p>

<pre caption="Installer rarpd">
# <i>emerge net-misc/rarpd</i>
</pre>

<p>
Ensuite, les options pour <c>rarpd</c> devront être mises dans
<path>/etc/conf.d/rarpd</path>. Pour une configuration équivalente à celle
utilisée précédemment pour le <c>rarpd</c> de <c>net-misc/iputils</c>, ajustez
<path>/etc/conf.d/rarpd</path> pour qu'il ressemble à ce qui suit&nbsp;:
</p>

<pre caption="/etc/conf.d/rarpd">
RARPD_OPTS="-v -i eth0"
</pre>

<p>
Une explication des options précédentes (issue de la page de manuel)&nbsp;:
</p>

<ul>
  <li>
    <c>-v</c> pour la verbosité. Montre les requêtes auxquelles le démon
    répond.
  </li>
  <li>
    <c>-i</c> pour que le démon écoute l'interface nommée. Par défaut
    <c>rarpd</c> écoute l'interface par défaut du type du système local, si
    disponible.
  </li>
</ul>

<p>
Pour plus d'options, consultez le manuel <c>man 8 rarpd</c> et <c>rarpd
--help</c>.
</p>

</body>
</section>
<section>
<title>Le démon tftpd</title>
<body>

<p>
Ici, il y a trois options pour le démon TFTP&nbsp;: <c>net-misc/atftp</c>,
<c>net-misc/netkit-tftp</c> et <c>net-misc/tftp-hpa</c>. N'en installez qu'un
seul, pour une configuration correcte.
</p>

<p>
<b>Mettre en place les éléments communs de tftpd</b>
</p>

<p>
Chaque démon TFTP aura besoin d'un répertoire depuis lequel seront servis les
fichiers aux clients tftp. Le répertoire que nous utiliserons dans ce manuel
sera <path>/tftpboot</path>. Il apparaîtra comme le répertoire racine
(<path>/</path>) pour les clients lorsque les requêtes sont reçues. De plus,
nous configurerons le démon TFTP pour être lancé avec le groupe et
l'utilisateur <c>nobody</c>.
</p>

<p>
Si le répertoire que vous avez choisi n'existe pas déjà, il devra être créé
avec la commande <c>mkdir</c>. La commande pour l'exemple
<path>/tftpboot</path> est&nbsp;:
</p>

<pre caption="Créer /tftpboot">
# <i>/bin/mkdir /tftpboot</i>
</pre>

<p>
Ensuite, nous devrons changer le propriétaire de <path>/tftpboot</path> de
telle manière qu'il appartienne à l'utilisateur <c>nobody</c> et au groupe
<c>nobody</c>&nbsp;:
</p>

<pre caption="Changement de propriétaire">
# <i>chown nobody:nobody /tftpboot</i>
</pre>

</body>
</section>
<section>
<title>Le serveur atftp</title>
<body>

<p>
Tout d'abord, installez le paquet <c>net-misc/atftp</c>&nbsp;:
</p>

<pre caption="Installer atftp">
# <i>emerge net-misc/atftp</i>
</pre>

<p>
Une fois le paquet <c>net-misc/atftp</c> installé, il vous faudra le
configurer. Si les services tftpd sont requis au démarrage de la machine, une
entrée dans <path>/etc/conf.d/local.start</path> devra être ajoutée puisque
<c>atftp</c> n'a pas de script <path>init.d</path>, ni <c>inetd</c> ou
<c>xinetd</c>. Si vous souhaitez utiliser <c>inetd</c> ou <c>xinetd</c> pour
contrôler le service tftpd, merci de lire leur page de manuel respectives.
</p>

<p>
Voici un exemple d'entrée pour <c>atftpd</c> dans
<path>/etc/conf.d/local.start</path>.
</p>

<pre caption="/etc/conf.d/local.start">
/usr/sbin/in.tftpd -v --daemon /tftpboot
</pre>

<p>
Une explication des options précédentes pour <c>atftpd</c> (issue de la page de
manuel)&nbsp;:
</p>

<ul>
  <li>
    <c>-v</c> Augmente ou attribue le niveau de journalisation. Le nombre
    d'arguments augmentera d'autant la valeur actuelle. Par défaut, c'est
    LOG_NOTICE, voir dans la page de manuel syslog(3) pour le niveau de
    journalisation. Les valeurs peuvent aller de 0 (LOG_EMERG) à 7 (LOG_DEBUG).
  </li>
  <li>
    <c>--daemon</c> Démarre comme un démon. Ne pas utiliser cette option si
    <c>atftp</c> est démarré par le biais d'inetd ou de xinetd.
  </li>
</ul>

<p>
Pour plus d'options, consultez le manuel <c>man 8 atftpd</c>.
</p>

</body>
</section>
<section>
<title>Le serveur netkit-tftp</title>
<body>

<p>
Tout d'abord, installez le paquet <c>net-misc/netkit-tftp</c>&nbsp;:
</p>

<pre caption="Installer netkit-tftp">
# <i>emerge net-misc/netkit-tftp</i>
</pre>

<p>
Ensuite, installez <c>sys-apps/xinetd</c> s'il n'est pas déjà présent. Une fois
les paquets <c>netkit-tftp</c> et <c>sys-apps/xinetd</c> installés,
<c>netkit-ftp</c> doit être configuré. <c>netkit-tftp</c> a besoin d'être
démarré depuis <c>xinetd</c>. Cependant, il ne fournit pas d'exemple de script.
Un exemple du fichier <c>xinetd</c> est fourni ci-dessous&nbsp;:
</p>

<pre caption="Exemple de fichier /etc/xinetd.d/tftp">
service tftp
{
    protocol        = udp
    port            = 69
    socket_type     = dgram
    wait            = yes
    user            = nobody
    group           = nobody
    server          = /usr/sbin/in.tftpd
    server_args     = /tftpboot
    only_from       = 10.0.1.0
    disable         = no
}
</pre>

<note>
Cet exemple de fichier de configuration de <c>xinetd</c> pour tftp utilise la
ligne <c>disable = no</c>, qui active le service par défaut. C'est l'inverse de
la méthode standard utilisée par les paquets Gentoo qui fournissent leurs
fichiers de configuration pour <c>xinetd</c> et qui ont la valeur <c>yes</c>
pour la variable <c>disable</c>.
</note>

<p>
Voici une explication des options précédentes qui peuvent être changées&nbsp;:
</p>

<ul>
  <li>
    <b>user</b>&nbsp;: l'utilisateur sous lequel les requêtes in.tftp sont
    manipulées.
  </li>
  <li>
    <b>group</b>&nbsp;: le groupe sous lequel les requêtes in.tftpd sont
    manipulées.
  </li>
  <li>
    <b>server_args</b>&nbsp;: le répertoire racine pour le démon TFTP depuis
    lequel les fichiers sont servis.
  </li>
  <li>
    <b>only_from</b>&nbsp;: indique à <c>xinetd</c> quels sont les hôtes à
    autoriser pour les connexions TFTP.
  </li>
</ul>

<p>
De plus amples informations sur les fichiers de configuration de <c>xinetd</c>
peuvent être trouvées dans le manuel <c>man 5 xinetd.conf</c>.
</p>

<p>
Si <c>xinetd</c> est démarré vous devez lui envoyer le signal HUP pour qu'il
relise ses fichiers de configuration&nbsp;:
</p>

<pre caption="Envoyer le signal HUP à xinetd">
# <i>/bin/killall -HUP xinetd</i>
</pre>

<p>
Si <c>xinetd</c> n'est pas démarré, démarrez-le avec la commande init.d&nbsp;:
</p>

<pre caption="Démarrer xinetd">
# <i>/etc/init.d/xinetd start</i>
</pre>

<p>
Pour plus d'informations, consultez le manuel <c>man 8 in.tftpd</c>.
</p>

</body>
</section>
<section>
<title>Le serveur tftp-hpa</title>
<body>

<p>
Tout d'abord, installez le paquet <c>tftp-hpa</c>&nbsp;:
</p>

<pre caption="Installer tftp-hpa">
# <i>emerge net-misc/tftp-hpa</i>
</pre>

<p>
<c>tftp-hpa</c> est fourni avec un script <path>init.d</path> et son fichier de
configuration associé pour <path>conf.d</path>. Assurez-vous que INIITFTPD_PATH
et INITFTP_OPTS dans <path>/etc/conf.d/in.tftpd</path> correspondent avec les
valeurs ci-dessous&nbsp;:
</p>

<pre caption="/etc/conf.d/in.tftpd">
INTFTPD_PATH="/tftpboot"
INTFTPD_OPTS="-s -v -l ${INTFTPD_PATH}"
</pre>

<p>
Le serveur TFTP peut être démarré via le script <path>init.d</path>&nbsp;:
</p>

<pre caption="Démarrer in.tftpd">
# <i>/etc/init.d/in.tftpd start</i>
</pre>

<p>
Pour plus d'informations, consultez le manuel <c>man 8 tftpd</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Préparer une image tftpboot utilisable par le client</title>
<section>
<body>

<p>
Assurez-vous d'avoir l'image que vous voulez utiliser avec netboot. Vérifiez
votre miroir <uri link="/main/en/mirrors.xml">local</uri> <uri
link="http://distfiles.gentoo.org/experimental/sparc/tftpboot/sparc64/">distfiles</uri>
pour l'image appropriée. Nous supposerons que vous avez décidé de démarrer en
utilisant l'image <path>gentoo-sparc64-20100128.tftpboot</path>.
</p>

<p>
Une fois que vous avez l'image, copiez la dans /tftpboot&nbsp;:
</p>

<pre caption="Copier l'image">
# <i>cp gentoo-sparc64-20100128.tftpboot /tftpboot</i>
# <i>chmod 644 /tftpboot/gentoo-sparc64-20100128.tftpboot</i>
</pre>

<p>
Maintenant, lorsque le client netboot émettra des requêtes TFTP, il cherchera
un fichier qui est le nombre hexadécimal correspondant à son adresse IP et, sur
certaines plates-formes, avec une extension <path>.ARCH</path>.
</p>

<p>
Pour notre adresse IP exemple, 10.0.1.15, regardons son équivalent en
hexadecimal&nbsp;:
</p>

<pre caption="Convertir en hexadécimal">
# <i>printf "%.2X%.2X%.2X%.2X\n" 10 0 1 15</i>
</pre>

<pre caption="Example IP address">
decimal       10  0   1   15
hexidecimal   0a  00  01  0f
</pre>

<p>
Pour l'exemple du client netboot, il va essayer de récupérer un fichier nommé
<path>0a00010f</path> lorsqu'il démarrera via tftp.
</p>

<p>
Si vous êtes vraiment vraiment feignant (comme moi), vous pouvez tenter
un netboot sur le client pour obtenir le nom du fichier que le client réclame
dans les fichiers de journalisation du server netboot.
</p>

<p>
Assurez-vous que les services <c>rarpd</c> et <c>tftpd</c> que vous aviez
choisis sont démarrés. Ensuite, démarrez la machine comme décrit dans <uri
link="#netbootingclient">Démarrer le client en netboot</uri>.
</p>

<p>
Le client va sembler s'arrêter après que la commande <c>boot net</c> soit
effectuée. Alors, sur le serveur netboot, vérifiez que les fichiers de
journalisation du système contiennent une entrée dans <c>in.tftpd</c>.
</p>

<p>
Un exemple d'entrée d'un serveur netboot utilisant <c>syslogd</c> et
<c>tftp-hpa</c> ressemble à&nbsp;:
</p>

<pre caption="Entrée dans les fichiers du serveur netboot">
Jan  3 22:48:59 stargazer in.tftpd[8368]: RRQ from 10.0.1.15 filename 0a00010f
</pre>

<p>
Le nom de fichier est visible juste après «&nbsp;filename&nbsp;» dans la ligne
de journalisation, qui est dans notre cas&nbsp;: <path>0a00010f</path>.
</p>

<p>
Pour conserver une trace de l'image netboot que vous utilisez et permettre à
plusieurs machines d'utiliser la même image netboot, vous pouvez utiliser un
lien symbolique afin de créer un fichier ayant pour nom la valeur décimale
désirée. Pour notre exemple d'un client SPARC64 et l'image
<path>gentoo-sparc64-20100128.tftpboot</path>, utilisez la commande
suivante&nbsp;:
</p>

<pre caption="Créez un lien vers le fichier image">
# <i>/bin/ln -s /tftpboot/gentoo-sparc64-20100128.tftpboot \
/tftpboot/0a00010f</i>
</pre>

<p>
Maintenant, tout doit être configuré correctement pour le netboot&nbsp;!
</p>

</body>
</section>
</chapter>

<chapter id="netbootingclient">
<title>Démarrer le client par le netboot</title>
<section>
<body>

<p>
Dans l'OpenBoot PROM (OBP) de votre machine SPARC, entrez la commande&nbsp;:
</p>

<pre caption="Démarrer depuis l'OBP">
ok <i>boot net</i>
</pre>

<p>
Autre méthode pour certaines machines&nbsp;:
</p>

<pre caption="Alternative de démarrage depuis l'OBP">
ok <i>boot net-tpe</i>
</pre>

<note>
Si votre système ne démarre pas sur l'OBP au démarrage, vous devrez soit
presser les touches Stop et A, soit envoyer le signal break via une console
série avant que le système ne démarre un système d'exploitation. Si votre
système ne peut pas trouver de système d'exploitation, il devrait essayer de
démarrer par le réseau (ce qui est ce que nous souhaitons) ou rester à l'invite
de commande de l'OBP.
</note>

<p>
Cela va initialiser le processus de démarrage par le réseau. Une chaîne de
caractères de chiffres en hexadécimal devrait apparaître, qui changera. Lorsque
l'image aura fini de se charger, le noyau prendra le relais et entamera le
processus de démarrage du système d'exploitation. Dans le cas de notre image
d'installation pour SPARC64, vous aurez alors une invite de commande shell, à
partir de laquelle vous pourrez commencer avec le processus d'installation.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Problèmes récurrents</title>
<section>
<body>

<p>
<b>Construire les logiciels prérequis</b>
</p>

<p>
Si le serveur netboot est un système Gentoo Linux et que vous avez rencontré
des problèmes après l'installation des paquets rarpd et tftpd, vérifiez dans
les <uri link="http://forums.gentoo.org">forums Gentoo</uri> et dans le <uri
link="http://bugs.gentoo.org">bugzilla Gentoo</uri> pour voir si le problème a
déjà été identifié par une autre personne. Si ce n'est pas le cas ou si les
solutions rencontrées ne fonctionnent pas, merci de créer un nouveau rapport de
bogue.
</p>

<p>
<b>J'ai rencontré des problèmes avec la commande boot net, qui semble se
bloquer.</b>
</p>

<p>
C'est probablement parce que le fichier que votre système essaye de charger sur
le serveur tftpboot n'est pas disponible. Sur un système SPARC, vous devriez
voir les lignes suivantes&nbsp;:
</p>

<pre caption="Un démarrage qui semble bloqué">
Rebooting with command: boot
Boot device: net  File and args:
</pre>

<p>
Vérifiez encore une fois que le fichier nécessaire pour votre client existe
vraiment dans <path>/tftpboot</path>. Vous pouvez vous assurer de cela en
regardant dans les fichiers de journalisation du système. De plus, une fois que
le fichier existe, le client essayera de le charger. Parfois, quand le fichier
manquait au départ, il se bloquera en chargeant le fichier dès qu'il
apparaîtra. Pour résoudre cela, retournez simplement à l'invite de commande OBP
et lancez la commande <c>boot net</c> une nouvelle fois. Le client devrait
désormais commencer à charger l'image tftpboot et démarrer sur le système
d'exploitation.
</p>

<p>
<b>J'essaye de démarrer par le netboot, mais tout ce que je vois, c'est des
messages «&nbsp;Timeout waiting for ARP/RARP packet&nbsp;».
</b>
</p>

<p>
Cela peut venir de plusieurs choses&nbsp;:
</p>

<ol>
  <li>
    Assurez-vous que l'entrée dans <path>/etc/ethers</path> existe pour le
    client en question. Si l'adresse MAC est incorrecte et/ou si le serveur
    netboot ne peut pas résoudre le nom du client, il ne pourra répondre à ses
    requêtes.
  </li>
  <li>
    Vérifiez que le hub ou switch réseau entre le serveur netboot et le client
    est connecté de manière à laisser passer librement le trafic RARP. Si la
    requête du client ne peut atteindre le serveur et vice-versa, alors le
    client ne pourra pas continuer.
  </li>
  <li>
    Personne ne répond aux requêtes RARP parce qu'aucun service n'écoute.
    Vérifiez que le serveur rarpd est prêt et en fonctionnement.
  </li>
  <li>
    Le client pense qu'il n'y a pas de lien entre son interface réseau et le
    hub/switch réseau sur lequel elle est connecté. Vérifiez que l'interface
    réseau et le port sur le hub/switch réseau ont bien une lumière allumée. Si
    la lumière de lien est allumée, vérifiez que la configuration de
    tpe-link-test? est dans l'OBP avec la commande&nbsp;: <c>printenv
    tpe-link-test?</c>. Vous devriez avoir une réponse du genre
    <path>tpe-link-test?   false     true</path>. La première colonne représente
    le nom du paramètre, la seconde la valeur actuelle pour ce paramètre et la
    troisième indique la valeur par défaut de celui-ci. Dans notre exemple, vous
    pouvez voir que la valeur par défaut est «&nbsp;false&nbsp;», ce qui
    signifie que le client ne vérifie pas si le client et le hub ou switch
    réseau peuvent dialoguer avant d'effectuer une requête RARP. C'est souvent
    ce point qui pose problème.
  </li>
</ol>

<p>
Pour changer la valeur de tpe-link-test? dans l'invite de commande, tapez la
commande suivante&nbsp;:
</p>

<pre caption="Changer la valeur de tpe-link-test">
ok <i>setenv tpe-link-test? true</i>
tpe-link-test? =      true
</pre>

<p>
Cela indique que la valeur de tpe-link-test? est maintenant «&nbsp;true&nbsp;».
Essayez maintenant de démarrer de nouveau avec le netboot.
</p>

</body>
</section>
</chapter>
</guide>
