<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/Attic/env.d-howto.xml,v 1.8 2003/12/31 21:55:13 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/doc/fr/env.d-howto.xml">
<title>Guide env.d</title>
<author title="Auteur">
<!--zhen@gentoo.org-->John P. Davis
</author>
<author title="Traducteur">
<mail link="arachne@frgentoo.net">Guillaume Morin</mail>
</author>
<author title="Traducteur">
<mail link="mat@frheaven.com">Matthieu Montaudouin</mail>
</author>

<abstract>
Ce guide décrit le concept et l'utilisation du répertoire
<path>/etc/env.d</path> et son contenu.
</abstract>

<license/>

<version>1.8</version>
<date>31 décembre 2003</date>

<chapter>

<title>Introduction à <c>env.d</c> et aux variables génériques</title>

<section>
<title>Variables d'environnement Gentoo de base</title>
<body>
<p>
Une question fréquemment posée par utilisateurs de Gentoo est "où sont mes variables
d'environnement et quelles sont leurs valeurs&nbsp;?" Pour comprendre cette
question, nous devons tout d'abord savoir ce qu'est une variable
d'environnement.  Une variable d'environnement est définie dès que la commande
<c>export</c> est utilisée.  Par exemple, si vous tapez <c>export
EDITOR="/usr/bin/vim" </c>, vous définissez une variable d'environnement qui
indique au système que votre éditeur de texte par défaut est vim.
Différentes sortes de variables d'environnement peuvent être définies sur
votre système Gentoo, en voici quelques exemples&nbsp;:
</p>

<note>
<c>export</c> définit une variable d'environnement dans le shell <e>et</e> tous ses
processus fils. Si vous voulez juste définir la variable sans affecter les
processus fils, tapez juste quelque chose comme <i>FOO="bar"</i>. 
</note>

<note>
Votre fichier <i>00basic</i> peut être différent. Ce n'est pas un problème, car
ces variables sont celles incluses par défaut dans Gentoo.
</note>

<info>Ces exemples peuvent être trouvés dans <path>/etc/env.d/00basic</path>.</info>

<table>
<tr>
  <th>Variable</th><th>Fonction</th>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>Définit le chemin (PATH) par défaut où trouver les programmes. Les
  répertoires sont délimités par ':'.  Une variable path ressemblerait à
  <c>PATH=/usr/local/bin:/opt/bin</c>.</ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>Cette variable ressemble à la précédente, mais définit le chemin par
  défaut où chercher les programmes de l'utilisateur <c>root</c>.
  Un exemple ressemblerait à <c>ROOTPATH=/usr/local/bin:/opt/bin</c>.</ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>Cette variable spécifie le chemin des bibliothèques à lier. Les
  répertoires sont aussi délimités par ':'.  Un exemple serait
  <c>LDPATH=/usr/local/lib</c>.</ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>Indique où les pages de manuel sont stockées sur votre machine. Elle
  ressemble à <i>PATH</i>, mais pour les pages de manuel. Exemple :
  <c>MANPATH=/usr/share/man:/usr/local/share/man</c>.</ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>Spécifie où sont conservés les fichiers info. Exemple :
  <c>INFODIR=/usr/share/info</c>.</ti>
</tr>
<tr>
  <ti>PAGER</ti>
  <ti>Définit le "pager" utilisé, par exemple less ou more. Ce pourrait être
  <c>PAGER=/usr/bin/less</c>.</ti>
</tr>
<tr>
  <ti>EDITOR</ti><ti>Indique au système quel est l'éditeur par défaut.
  Exemple&nbsp;: <c>EDITOR=/usr/bin/vim</c>.</ti>
</tr>
</table>

<p>
Ce qui suit est un exemple de fichier <i>00basic</i>, juste pour vous donner
une idée de son apparence.  Si votre fichier <c>00basic</c> est défectueux,
vous pouvez utiliser celui-ci&nbsp;!
</p>

<pre caption="00basic">
# /etc/env.d/00basic:
# $Header: /home/cvsroot/gentoo-src/rc-scripts/etc/env.d/00basic,v 1.11 2003/02/17 02:48:39 azarah Exp &#36;

PATH="/usr/local/bin:/opt/bin"
ROOTPATH="/usr/local/bin:/opt/bin"
LDPATH="/usr/local/lib"
MANPATH="/usr/share/man:/usr/local/share/man"
INFODIR="/usr/share/info"
INFOPATH="/usr/share/info"
CVS_RSH="ssh"
PAGER="/usr/bin/less"
LESSOPEN="|lesspipe.sh %s"
</pre>

</body>
</section>

<section>
<title>Format de env.d</title>

<body>
<p>
Les fichiers à l'intérieur de <c>env.d</c> sont organisés dans un ordre logique
afin que le script <c>env-update</c> puisse ordonner correctement les
variables. Les nombres au début des noms des fichiers indiquent l'ordre dans lequel ils
doivent être traités.  Donc <i>00basic</i> sera le premier, et ensuite
<i>01autre</i> et ainsi de suite. Le contenu de ces fichiers a un format
spécifique&nbsp;:
</p>

<pre caption="Format du contenu">
<comment># Ceci est un commentaire, comme en BASH</comment>
<i>VARIABLE1=/chemin/vers/quelquechose</i>
<comment># Quelques variables peuvent avoir plusieurs arguments délimités par ":".</comment>
<i>VAR1A=/chemin/vers/quelquechose:/chemin/vers/autrechose/</i>
<i>VARIABLE2=nom_de_quelquechose</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Variables spéciales et fonctionnement global</title>

<section>
<title>Variables spéciales</title>
<body>

<p>
Quelques variables spéciales sont incluses dans <c>env.d</c>&nbsp;: <i>KDEDIRS,
PATH, CLASSPATH, LDPATH, MANPATH, INFODIR, ROOTPATH, CONFIG_PROTECT,
CONFIG_PROTECT_MASK</i>. Elles subissent un traitement spécial expliqué plus
loin.
</p>

<note>
Quelques unes des variables mentionnées ci-dessous sont aussi contenues dans
<i>00basic</i>.  Cela est correct car elles peuvent être utilisées plus d'une
fois dans des fichiers séparés, comme expliqué plus bas.
</note>

<table>
<tr>
  <th>Variable</th><th>Fonction</th>
</tr>
<tr>
  <ti>KDEDIRS</ti>
  <ti>Chemin vers tous les fichiers de KDE.</ti>
</tr>
<tr>
  <ti>PATH</ti>
  <ti>Précédemment défini, délimité par ':' (voir plus haut).</ti>
</tr>
<tr>
  <ti>CLASSPATH</ti>
  <ti>Définit le chemin vers les classes Java, délimité par ':'.</ti>
</tr>
<tr>
  <ti>LDPATH</ti>
  <ti>Précédemment défini (voir plus haut).</ti>
</tr>
<tr>
  <ti>MANPATH</ti>
  <ti>Précédemment défini, délimité par ':' (voir plus haut).</ti>
</tr>
<tr>
  <ti>INFODIR</ti>
  <ti>Précédemment défini, délimité par ':' (voir plus haut).</ti>
</tr>
<tr>
  <ti>ROOTPATH</ti>
  <ti>Précédemment défini, délimité par ':' (voir plus haut).</ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT</ti>
  <ti>Spécifie quels fichiers de configuration dans <path>/etc</path> doivent
  être protégés lors de l'installation de nouveaux ebuilds, les arguments
  donnés sont délimités par
  des espaces.</ti>
</tr>
<tr>
  <ti>CONFIG_PROTECT_MASK</ti>
  <ti>C'est simplement l'inverse de CONFIG_PROTECT, elle enlève la protection
  des fichiers dans <path>/etc </path> que vous voulez laisser modifier
  automatiquement par emerge.</ti>
</tr>
</table>

</body>
</section>

<section>
<title> Fonctionnement global</title>
<body>

<p>
Bon, maintenant que j'ai tout défini, vous êtes probablement en train de vous
demander ce que cela a à voir avec vous et votre Gentoo. La puissance de
<i>env.d</i> réside dans le fait de pouvoir changer ces variables en ce dont
vous avez besoin.  Avec les définitions ci-dessus, vous devriez être capable de
le faire.
</p>

<p>
Maintenant que nous maîtrisons le sujet, il est temps
d'expliquer ce qui arrive à ces variables.  Quand <c>env-update</c> est appelé,
il traite tous ces fichiers dans l'ordre. Vous vous souvenez quand je disais
qu'il était possible d'avoir de multiples variables <i>PATH</i>
dans des fichiers différents&nbsp;? Ceci est dû au fait que
<c>env-update</c> parcourt les fichiers séquentiellement et fusionne les
chemins. Ainsi, si vous avez un <i>PATH</i> pour KDE, GNOME, votre
<i>PATH</i> par défaut et un autre pour X, <c>env-update</c> va concaténer
tous ces PATH ensemble, si bien que votre <i>PATH</i> par défaut deviendra tous
ces chemins combinés. Merveilleux n'est-ce pas&nbsp;? 
</p> 

<p>
Puisque ces variables sont liées, il est important de savoir où elles sont
stockées.
</p>

<note>Les fichiers ci-dessous sont créés par la commande <c>env-update</c>.</note>

<pre caption="Fichiers créés par l'addition de tous les fichiers dans env.d">
<i>LDPATH ----&gt; /etc/ld.so.conf </i>
<i>CONFIG_PROTECT et CONFIG_PROTECT_MASK ----&gt; /etc/profile.env (comme les variables exportées)</i>
<i>Speciales et Autres ----&gt; /etc/profile.env </i>
</pre>

<p>Si vous regardez dans <path>/etc/ld.so.conf</path>, vous pouvez voir clairement que <i>env.d</i> est la source des informations qu'il contient.</p>

<pre caption="/etc/ld.so.conf">
# ld.so.conf autogenerated by env-update; make all changes to
# contents of /etc/env.d directory
/usr/local/lib
/usr/lib/gcc-lib/i686-pc-linux-gnu/3.2
/usr/lib/opengl/nvidia/lib
/usr/lib/mozilla
/usr/X11R6/lib
/opt/blackdown-jdk-1.3.1/jre/lib/i386/
/opt/blackdown-jdk-1.3.1/jre/lib/i386/native_threads/
/usr/qt/3/lib
/usr/qt/2/lib
/usr/kde/3/lib
</pre>

<p>
Il est intéressant de savoir que <path>/etc/profile.env</path> est lu et exécuté
par votre session shell. C'est une bonne chose; la prochaine fois que vous vous
connecterez, vous pourrez utiliser toutes vos variables fraîchement définies.
</p>

<pre caption="Sequence d'événements de env-update">
<i>paramètres /etc/env.d  ---&gt; env-update ---&gt; /etc/profile.env ---&gt; /etc/profile 
---&gt; bash ---&gt; tous vos programmes</i>
</pre>

<p>
Maintenant que vous avez un fichier <i>profile.env</i> il devrait ressembler à
quelque chose comme ceci&nbsp;:
</p>

<pre caption="/etc/profile.env">
export CONFIG_PROTECT='/usr/kde/3/share/config /usr/share/config'
export KDEDIRS='/usr/kde/3:/usr'
export MANPATH='/usr/share/man:/usr/local/share/man:/usr/X11R6/man:/opt/blackdown-jdk-1.3.1/man'
export INFODIR='/usr/share/info:/usr/X11R6/info'
export PATH='/usr/local/bin:/opt/bin:/opt/rar/bin:/usr/X11R6/bin:/opt/blackdown-jdk-1.3.1/bin: \
/opt/blackdown-jdk-1.3.1/jre/bin:/usr/qt/3/bin:/usr/qt/2/bin:/usr/kde/3/bin'
export CONFIG_PROTECT_MASK='/etc/gconf'
export CLASSPATH='/opt/blackdown-jdk-1.3.1/jre/lib/rt.jar:.'
export ROOTPATH='/usr/local/bin:/opt/bin:/opt/rar:/usr/X11R6/bin:/opt/blackdown-jdk-1.3.1/bin: \
/opt/blackdown-jdk-1.3.1/jre/bin:/usr/qt/3/bin:/usr/qt/2/bin:/usr/kde/3/bin'
export KDEDIR='/usr/kde/3'
export VIMRUNTIME='/usr/share/vim/vim61'
export JDK_HOME='/opt/blackdown-jdk-1.3.1'
export JAVAC='/opt/blackdown-jdk-1.3.1/bin/javac'
export PAGER='/usr/bin/less'
export HOSTNAME='l00ser.muc.edu'
export QMAKESPEC='linux-g++'
export LESSOPEN='|lesspipe.sh %s'
export CVS_RSH='ssh'
export EDITOR='/usr/bin/vim'
export QTDIR='/usr/qt/3'
export JAVA_HOME='/opt/blackdown-jdk-1.3.1'
export XINITRC='/etc/X11/xinit/xinitrc'
export MOZILLA_FIVE_HOME='/usr/lib/mozilla'
</pre>

<p>Voilà, c'est tout ce que j'avais à dire, amusez-vous bien et ne cassez pas tout&nbsp;!</p>

</body>
</section>
</chapter>
</guide>
