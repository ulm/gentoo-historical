<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/usb-guide.xml,v 1.17 2008/07/16 09:32:18 titefleur Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/usb-guide.xml" lang="fr">
<title>Guide de l'USB sous Gentoo Linux</title>

<author title="Auteur">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Traducteur">
  <mail link="clement@varaldi.org">Clément Varaldi</mail>
</author>

<abstract>
L'objectif de ce document est d'aider les utilisateurs à configurer leur USB
sous Gentoo Linux et à utiliser un certain nombre de périphériques USB.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.14</version>
<date>2008-06-21</date>

<chapter>
<title>Introduction</title>
<section>
<title>Qu'est-ce que l'USB</title>
<body>

<p>
USB signifie Universal Serial Bus, soit Bus Série Universel. Pour faire
simple, il s'agit d'un standard d'interface externe qui permet la communication
entre l'ordinateur et plusieurs autres périphériques. Parmi les périphériques
les plus communément utilisés actuellement, il y a les claviers, les souris, les
mémoires USB, les appareils photos numériques, les graveurs de CD et DVD
externes, les imprimantes, etc.
</p>

<p>
Il existe actuellement deux versions de l'USB&nbsp;: USB 1.1 et USB 2.0. Dans la
mesure où l'USB a toujours proposé une compatibilité totale avec les
versions antérieures, l'USB 2.0 est compatible avec la version 1.1. Les derniers
périphériques USB sont en général compatibles avec l'USB 2.0. L'USB 2.0 permet
une vitesse de transmission des données maximale de 480&nbsp;Mb/s (ou
60&nbsp;Mo/s) et c'est là la plus grande différence entre les deux standards. Un
autre avantage de l'USB est que tous les périphériques peuvent être connectés et
déconnectés à chaud, ce qui signifie que vous n'avez pas besoin de redémarrer
votre système pour pouvoir les utiliser.
</p>

</body>
</section>

<section>
<title>Un aperçu technique</title>
<body>

<p>
Avant de commencer avec les options de configuration du noyau, il est bon d'en
apprendre encore un peu plus sur l'USB. Si vous êtes pressé ou si vous
souhaitez sauter ce chapitre, passez directement à la
<uri link="#kernel">configuration du noyau</uri>.
</p>

<p>
Un système USB est constitué d'un contrôleur hôte et de hubs, dont un <e>hub
principal</e>. Ces systèmes peuvent supporter jusqu'à 127 périphériques USB en
incluant les hubs. Le contrôleur USB fait seulement office d'interface
matérielle entre le périphérique USB et le système d'exploitation. Il existe une
poignée de HCI (Host Controller Interface pour Interface du Contrôleur Hôte)
actuellement en circulation&nbsp;: le OHCI (Open HCI) de Compaq, le UHCI
(Universal HCI) et le EHCI (Enhanced HCI), tous les deux d'Intel. UHCI et OHCI
sont les deux standards de l'industrie pour le support de l'USB 1.1. EHCI est
réservé pour l'USB 2.0.
</p>

<p>
Le dispositif matériel fournit une interface pour le programmeur qui permet
au système d'interagir avec le matériel&nbsp;: le HCD, ou Host Controller
Device (Dispositif de Contrôleur Hôte). C'est à travers le HCD que le
périphérique va interagir avec le logiciel du système. Le diagramme suivant
devrait vous aider à comprendre un peu mieux la chose.
</p>

<pre caption="Architecture générale de l'USB">
<comment>(La partie logicielle est constituée d'autres composants tels que les pilotes
des périphériques, mais, par souci de simplicité, ils ne sont pas détaillés.)</comment>

    + -----  Matériel  -----   + ----  Logiciel  ---- +
    |                          |                      |
    |  [Disp USB] -+-> {EHCI} -+--->  ( EHCD )        |
    |              |           |                      |  Utilisateur
    |              `-> {UHCI} -+--->  ( UHCD )        |
    |                          |                      |
    + -----  Matériel  -----   + ----  Logiciel  ---- +

</pre>

<p>
Le périphérique USB peut soit utiliser un pilote personnalisé, soit en utiliser
un déjà présent dans le système et qui est basé sur le concept de <e>classe</e>
de périphérique. Cela signifie que si un périphérique appartient à une certaine
<e>classe</e>, alors les autres périphériques appartenant à la même
<e>classe</e> peuvent utiliser le même pilote. Parmi ces <e>classes</e>, se
trouve la classe USB HID (Human Interface Devices pour Dispositif d'Interface
Homme-machine) qui rassemble des périphériques d'entrée comme les claviers et
les souris, la classe pour les périphériques USB Mass Storage (Stockage de
Masse) qui regroupe des périphériques comme les clefs USB, les appareils photos
numériques, les lecteurs audio, etc. et la classe USB CDC pour Communication
Devices Class (Classe de Dispositifs de Communication) qui regroupe
essentiellement les modems USB et autres périphériques de ce type.
</p>

</body>
</section>

<section>
<title>Qu'est-ce que contient votre machine&nbsp;?</title>
<body>

<p>
C'est très facile de savoir si votre machine dispose du support USB 2.0 ou non.
Pour le découvrir nous utiliserons la commande <c>lspci</c>.
</p>

<note>
L'outil <c>lspci</c> fait partie du paquet <c>sys-apps/pciutils</c>. Si vous ne
l'avez pas installé, faites-le avec <c>emerge pciutils</c>. Notez que vous
devez être root pour pouvoir utiliser la commande <c>lspci</c>.
</note>

<pre caption="Différents retours de lspci">
<comment>(Sur un système supportant l'USB 1.1, notez qu'il n'y a que l'UHCI.)</comment>

# <i>lspci -v | grep USB</i>
0000:00:04.2 USB Controller: Intel Corp. 82371AB/EB/MB PIIX4 USB (rev 01) (prog-if 00 [UHCI])

<comment>(Sur un système supportant l'USB 2.0,
notez que vous disposez de EHCI et UHCI.)</comment>

00:1d.0 USB Controller: Intel Corp. 82801DB USB (Hub #1) (rev 01) (prog-if 00 [UHCI])
00:1d.1 USB Controller: Intel Corp. 82801DB USB (Hub #2) (rev 01) (prog-if 00 [UHCI])
00:1d.2 USB Controller: Intel Corp. 82801DB USB (Hub #3) (rev 01) (prog-if 00 [UHCI])
00:1d.7 USB Controller: Intel Corp. 82801DB USB EHCI Controller (rev 01) (prog-if 20 [EHCI])
</pre>

<p>
Grâce à la commande <c>lspci</c>, nous pouvons découvrir si le système supporte
l'USB 2.0. C'est très utile dans la mesure où ça nous permettra d'activer les
bonnes options dans le noyau.
</p>

</body>
</section>
</chapter>

<chapter id="kernel">
<title>Configuration du noyau</title>
<section>
<title>Récupérer le noyau</title>
<body>

<p>
Tout d'abord installez les sources du noyau de votre choix. Dans ce guide, nous
utiliserons <c>gentoo-sources</c>. Pour plus d'informations sur les différents
noyaux disponibles dans Portage, jetez un œil sur le
<uri link="/doc/fr/gentoo-kernel.xml">Guide du noyau Gentoo Linux</uri>.
</p>

<pre caption="Récupérer les sources du noyau">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Maintenant, passons à la configuration du noyau.
</p>

<pre caption="Avant de commencer la configuration">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<note>
L'exemple ci-dessus suppose que <path>/usr/src/linux</path> est un lien
symbolique qui pointe vers les sources du noyau que vous souhaitez utiliser.
Assurez-vous que c'est bien le cas chez vous.
</note>

</body>
</section>

<section>
<title>Options de configuration pour le noyau</title>
<body>

<p>
Maintenant nous allons jeter un œil sur certaines des options que nous devrons
activer sur notre noyau pour assurer un support USB correct pour vos
périphériques.
</p>

<note>
Les exemples dans ce document vous montreront les options de configuration pour
un support de base de l'USB, ainsi que le support des périphériques les plus
communément utilisés, comme par exemple les périphériques de stockage de masse
USB (pour le support de la plupart des appareils photos et des clefs USB). Si
vous disposez d'un périphérique USB spécifique que vous devez configurer, lisez
votre manuel ou cherchez sur Internet pour savoir si ce périphérique dispose
d'un support intégré au noyau ou utilise ses propres pilotes. Notez que, pour
des raisons de simplicité, nous compilerons tout dans le noyau. Si vous
souhaitez un noyau modulaire, assurez-vous de bien noter les différents modules
et ajustez vos fichiers de configuration en fonction de ceux-ci.
</note>

<pre caption="Options dans le make menuconfig">
Device Drivers  ---&gt;
  SCSI device support  ---&gt;

<comment>(Même si le SCSI sera activé automatiquement en sélectionnant le support
de l'USB Mass Storage, vous devrez activer le support de disques.)</comment>
---   SCSI support type (disk, tape, CD-ROM)
&lt;*&gt;   SCSI disk support

<comment>(Puis passez au support USB)</comment>
USB support  ---&gt;

<comment>(C'est le hub principal et il est nécessaire pour le support USB.
Si vous voulez le compiler comme module, son nom est usbcore.)</comment>
&lt;*&gt; Support for Host-side USB

<comment>(Activez cette fonction pour voir vos périphériques USB dans /proc/bus/usb.
Nous vous le recommandons.)</comment>
 [*]   USB device filesystem

<comment>(Choisissez au moins l'un de ces HCD. Si vous n'êtes pas sûr,
sélectionnez-les tous.)</comment>
--- USB Host Controller Drivers
&lt;*&gt; EHCI HCD (USB 2.0) support
&lt; &gt; OHCI HCD support
&lt;*&gt; UHCI HCD (most Intel and VIA) support

<comment>(Plus bas, activons le support CDC et stockage de masse.)</comment>
&lt; &gt; USB Modem (CDC ACM) support
&lt;*&gt; USB Printer support
&lt;*&gt; USB Mass Storage support

<comment>(Si vous avez une carte réseau USB comme le RTL8150,
vous aurez besoin de ces éléments.)</comment>
USB Network Adapters  --->
    &lt;*&gt; USB RTL8150 based ethernet device support (EXPERIMENTAL)

<comment>(Si vous avez un convertisseur USB -&gt; port série comme le Prolific 2303
vous aurez besoin de ces éléments.)</comment>
USB Serial Converter support  --->
    &lt;*&gt; USB Serial Converter support
    &lt;*&gt; USB Prolific 2303 Single Port Serial Driver (NEW)
</pre>

<p>
Si vous possédez un périphérique d'entrée USB tel qu'un clavier, une souris ou
un joystick, vous avez besoin d'activer le support HID. Remontez d'un niveau,
dans «&nbsp;Device drivers&nbsp;» et activez le support HID comme ceci&nbsp;:
</p>

<pre caption="Activation du support HID">
Device Drivers ---&gt;
  [*] HID Devices  ---&gt;
&lt;*&gt;   USB Human Interface Device (full HID) support
</pre>

<p>
Maintenant que les options sont configurées, vous devez (re)compiler le noyau et
le support USB devrait être fonctionnel dès le prochain redémarrage sur votre
nouveau noyau.
</p>

</body>
</section>
</chapter>

<chapter id="postkern">
<title>Regarder l'USB travailler</title>
<section>
<title>Dmesg est votre ami</title>
<body>

<p>
Le temps est enfin venu de jouer avec vos périphériques USB. Dans ce chapitre,
nous verrons comment le système répond aux différents périphériques USB. Nous
commencerons par connecter une clef USB de 512&nbsp;Mo de mémoire. Vous pouvez
utiliser évidemment un périphérique similaire pour suivre l'exemple. Nous
commencerons par utiliser <c>dmesg</c> pour voir ce qui se passe et comment le
système répond à notre périphérique.
</p>

<note>
<c>dmesg</c> vous renverra une grosse quantité de messages avant d'arriver à
l'information voulue car il lit dans la mémoire tampon des messages du noyau qui
stocke tous les messages depuis le démarrage sur le système d'exploitation. Nous
avons sélectionné uniquement les portions qui nous intéressent pour plus de
lisibilité. Si cela est nécessaire utilisez <c>dmesg | more</c> ou <c>dmesg |
less</c> pour voir plus facilement les messages de sortie de votre système.
</note>

<pre caption="Sortie de dmesg pour la clef USB">
<comment>(Connectez votre clef USB sur un port USB libre puis...)</comment>
# <i>dmesg | less</i>

<comment>(Le périphérique est connecté en USB 1.1 et récupère une adresse.
Nous remarquons au passage quel HCD est utilisé.)</comment>
usb 1-1: new full speed USB device using uhci_hcd and address 2

<comment>(L'émulation SCSI est automatiquement activée.)</comment>
scsi0 : SCSI emulation for USB Mass Storage devices
usb-storage: device found at 2

<comment>(Viennent les informations relatives au périphérique,
notamment le numéro du modèle utilisé.)</comment>
usb-storage: waiting for device to settle before scanning
  Vendor: JetFlash  Model: TS512MJF2A        Rev: 1.00
  Type:   Direct-Access                      ANSI SCSI revision: 02
SCSI device sda: 1003600 512-byte hdwr sectors (514 MB)

<comment>(La protection d'écriture est un code expérimental sur les derniers noyaux.)</comment>
sda: Write Protect is off
sda: Mode Sense: 0b 00 00 08
sda: assuming drive cache: write through
SCSI device sda: 1003600 512-byte hdwr sectors (514 MB)
/dev/scsi/host0/bus0/target0/lun0: p1
Attached scsi removable disk sda at scsi0, channel 0, id 0, lun 0
Attached scsi generic sg0 at scsi0, channel 0, id 0, lun 0,  type 0
usb-storage: device scan complete
<comment>(Le périphérique est normalement accessible en montant /dev/sda1.)</comment>

<comment>(Quand le périphérique est déconnecté,
le système vous en informera également.)</comment>
usb 1-1: USB disconnect, address 2
</pre>

<p>
Une fois le périphérique connecté et monté, vous pouvez y accéder comme si
c'était un disque dur normal. Les opérations habituelles comme <c>cp</c>,
<c>mv</c>, <c>rm</c>, etc. fonctionneront bien. Vous pouvez également
initialiser un système de fichiers sur une clef USB.
</p>

<pre caption="Accéder à la mémoire de la clef USB">
# <i>mount /dev/sda1 /mnt/usb</i>
# <i>df -h</i>
Filesystem            Size  Used Avail Use% Mounted on
/dev/hda8             9.4G  7.5G  1.9G  80% /
/dev/hda9              11G  8.1G  2.4G  78% /usr
none                  189M     0  189M   0% /dev/shm
/dev/sda1             490M   34M  457M   7% /mnt/usb
</pre>

<note>
Les appareils photos numériques ont un mode d'accès similaire à celui des clefs
USB. Je possède un Nikon Coolpix 5200 et j'accède aux photos de la même manière.
L'appareil est reconnu comme étant un périphérique de stockage de masse USB
grâce au mode PTP que la plupart des appareils photos utilisent de nos jours. La
procédure est exactement la même, c'est pourquoi nous ne l'expliquons pas en
détails de nouveau. Notez que cela ne fonctionnera pas dans tous les cas, ni
pour tous les appareils photos disposant d'un support USB (N.d.T&nbsp;: en
réalité, les appareils photos suivent de plus en plus ce mode de fonctionnement
mais pour les appareils plus anciens ou certains modèles, le support sous Linux
peut être complètement inexistant).
</note>

<p>
Comment sera reconnue une souris USB pour le cas où vous en auriez une&nbsp;?
Elle sera reconnu comme étant un périphérique HID.
</p>

<pre caption="Une souris optique USB">
# <i>dmesg | grep USB</i>
drivers/usb/input/hid-core.c: v2.0:USB HID core driver
usb 1-1: new low speed USB device using address 2
input: USB HID v1.10 Mouse [Logitech USB-PS/2 Optical Mouse] on usb-0000:00:07.2-1
</pre>

<p>
Une autre commande très utile que vous pouvez utiliser pour voir le statut de
vos ports USB est <c>lsusb</c>. Elle fait partie du paquet
<c>sys-apps/usbutils</c>. Nous la présenterons dans le chapitre suivant.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Environnement utilisateur pour l'USB</title>
<section>
<title>Outils pratiques</title>
<body>

<p>
Nous avons vu jusqu'à présent à quel point le noyau et le système supportent
l'USB sur Linux. Maintenant, nous allons jeter un œil sur le support proposé par
Gentoo pour l'USB pour l'utilisateur.
</p>

<p>
L'un des outils les plus utiles est <c>lsusb</c>. Il permet de lister tous les
périphériques USB connectés au système. L'installer est un jeu d'enfant.
</p>

<pre caption="Installation de usbutils">
# <i>emerge usbutils</i>
</pre>

<p>
Une fois installé il vous suffit d'exécuter <c>lsusb</c> pour obtenir des
informations simples sur les périphériques USB connectés à votre machine.
</p>

<note>
Vous devez la plupart du temps être root pour pouvoir lancer la commande
<c>lsusb</c>.
</note>

<warn>
<c>lsusb</c> lit les informations concernant les périphériques USB dans le
répertoire <path>/proc/bus/usb</path>. Si vous n'avez pas activé cet élément
dans le noyau il y a des chances pour que <c>lsusb</c> ne fonctionne pas du
tout. Assurez-vous que le support du système de fichiers <path>/proc</path> est
activé dans le noyau et que <c>usbfs</c> est monté dans
<path>/proc/bus/usb</path> (ce qui devrait se faire automatiquement).
</warn>

<pre caption="lsusb au travail">
# <i>lsusb</i>
<comment>(Voici la clef USB de 512 Mo de chez Transcend.)</comment>
Bus 001 Device 003: ID 0c76:0005 JMTek, LLC. USBdisk
<comment>(Voici la souris optique.)</comment>
Bus 001 Device 002: ID 046d:c00e Logitech, Inc. Optical Mouse
<comment>(Et enfin le hub principal.)</comment>
Bus 001 Device 001: ID 0000:0000
</pre>

<p>
Si vous faites partie de ceux qui aiment avoir beaucoup d'informations, vous
pouvez utiliser l'option <c>lsusb -v</c>. Essayez pour voir la quantité
d'informations que vous obtiendrez. Une autre bonne option est d'obtenir une
copie de la hiérarchie physique actuelle de votre arborescence USB grâce à
<c>lsusb -t</c>. Par exemple&nbsp;:
</p>

<pre caption="lsusb obtenant la hiérarchie USB">
# <i>lsusb -t</i>
Bus#  1
`-Dev#   1 Vendor 0x0000 Product 0x0000
  |-Dev#   2 Vendor 0x046d Product 0xc00e
  `-Dev#   3 Vendor 0x0c76 Product 0x0005
</pre>

<p>
Vous pouvez alors facilement faire le lien entre les sorties de <c>lsusb</c> et
<c>lsusb -t</c> ce qui vous permet de faire du débogage et de comprendre comment
fonctionne l'USB.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Remerciements...</title>
<section>
<title>Références</title>
<body>

<p>
J'ai utilisé un bon nombre de documents sur Internet pour écrire celui-ci.
Certains d'entre eux sont très techniques mais vraiment intéressants. Je pense
qu'ils méritent tous une certaine attention.
</p>

<ul>
  <li>
    <uri link="http://www.usb.org">Le site officiel pour l'USB</uri>&nbsp;;
  </li>
  <li><uri link="http://www.usb.org/about/faq">La FAQ USB</uri>&nbsp;;</li>
  <li>
    <uri
    link="http://h18000.www1.hp.com/productinfo/development/openhci.html">Le
    standard OHCI de Compaq</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://developer.intel.com/technology/usb/uhci11d.htm">Le
    standard UHCI d'Intel</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://www.intel.com/technology/usb/ehcispec.htm">Le standard
    EHCI d'Intel</uri>.
  </li>
</ul>

</body>
</section>
<section>
<title>Autres liens intéressants</title>
<body>

<ul>
  <li>
    <uri link="/doc/fr/liveusb.xml">Guide de création d'un LiveUSB Gentoo
    Linux</uri>
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
