<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-ppc-kernel.xml,v 1.27 2005/08/02 23:35:09 neysx Exp $ -->

<sections>

<version>2.9</version>
<date>2005-07-04</date>

<section>
<title>Fuseau horaire</title>
<body>

<p>
Vous devez maintenant choisir votre fuseau horaire afin que votre système
sache où il se trouve. Cherchez votre fuseau horaire dans
<path>/usr/share/zoneinfo</path>, puis créez un lien symbolique nommé
<path>/etc/localtime</path> en utilisant <c>ln</c>&nbsp;:
</p>

<pre caption="Définir l'information relative au fuseau horaire">
# <i>ls /usr/share/zoneinfo</i>
<comment>(En supposant que vous utilisez l'heure de Paris)</comment>
# <i>ln -sf /usr/share/zoneinfo/Europe/Paris /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installer les sources</title>
<subsection>
<title>Choisir un noyau</title>
<body>

<p>
Le cœur autour duquel sont bâties toutes les distributions est le noyau (en
anglais «&nbsp;kernel&nbsp;») Linux. Ce noyau est l'interface entre les
programmes utilisateur et le matériel. Gentoo offre un choix de plusieurs
noyaux à ses utilisateurs.  Une liste complète, accompagnée de descriptions,
est disponible dans le <uri link="/doc/fr/gentoo-kernel.xml"> Guide du noyau
Gentoo Linux</uri>.
</p>

<p>
Pour des machines PPC, vous avez le choix entre les sources
<c>vanilla-sources</c> et <c>gentoo-sources</c> (disponible si vous faites une
installation sans réseau). Les deux sont des noyaux 2.6. Il existe aussi une
version adaptée aux machines Pegasos&nbsp;: <c>pegasos-sources</c> (noyau 2.6
aussi). Installez les sources de votre choix avec <c>emerge</c>&nbsp;:
</p>

<pre caption="Installer les sources du noyau">
# <i>emerge gentoo-sources</i>
</pre>

<note>
Les sources pour PowerPC sont basées sur un noyau 2.6.10 avec des corrections
liées à la sécurité importées de la version 2.6.11. Au moment de la sortie de
Gentoo, le noyau 2.6.11 posait des problèmes avec plusieurs machines PowerPC.
</note>

<p>
Si vous examinez le contenu de <path>/usr/src</path>, vous devriez voir un lien
symbolique nommé <path>linux</path> pointant vers les sources de votre noyau.
Supposons que vous avez installé les sources
<c>gentoo-sources-2.6.10-r8</c>&nbsp;:
</p>

<pre caption="Examiner le lien symbolique vers le noyau">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root    root     12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.10-r8
</pre>

<p>
Si ce n'est pas le cas (le lien symbolique pointe vers un noyau différent),
changez le lien avant de continuer.  <c>linux-2.6.10-gentoo-r8</c> est un
exemple, vous devez utiliser la bonne version&nbsp;:
</p>

<pre caption="Changer le lien symbolique vers les sources du noyau">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.6.10-r8 linux</i>
</pre>

<p>
Il est maintenant temps de configurer et de compiler votre noyau. La commande
<c>genkernel</c> est disponible. Cette commande
construira un noyau générique tel que celui utilisé par le CD d'installation. Toutefois,
nous expliquerons d'abord la configuration «&nbsp;manuelle&nbsp;», puisque
c'est la meilleure façon d'optimiser votre environnement.
</p>

<p>
Pour compiler votre noyau manuellement, poursuivez votre lecture avec la <uri
link="#manual">Par défaut&nbsp;: Configuration manuelle</uri>.  Si vous
souhaitez utiliser <c>genkernel</c>, vous devriez plutôt lire <uri
link="#genkernel">Alternative&nbsp;: utiliser genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Par défaut : configuration manuelle</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Configurer un noyau est parfois considéré comme la tâche la plus ardue que les
utilisateurs de Linux doivent accomplir. Rien n'est moins vrai... Après
avoir configuré quelques noyaux, vous ne vous rappellerez même plus que c'était
difficile ;)
</p>

<p>
Toutefois, une chose est vraie&nbsp;: vous devez connaître votre système pour
configurer manuellement un noyau. La majeure partie de cette information peut
être obtenue en utilisant la commande <c>lspci</c> qui est dans le paquet
pciutils (<c>emerge pciutils</c>). Vous pourrez désormais utiliser <c>lspci</c>
depuis votre environnement en chroot. Vous pouvez ignorer les avertissements
<e>pcilib</e> (comme par exemple&nbsp;: pcilib: cannot open
/sys/bus/pci/devices) que vous obtiendrez avec <c>lspci</c>. Vous pouvez
également exécuter <c>lspci</c> depuis un environnement <e>non chrooté</e>. Le
résultat est le même. Vous pouvez également exécuter <c>lsmod</c> pour voir les
modules du noyau utilisés par le CD-ROM d'installation (ce qui peut vous
donner des indices sur les fonctionnalités nécessaires).
</p>

<p>
Maintenant, allez dans le dossier des sources du noyau et exécutez <c>make
menuconfig</c>. Cela ouvrira un menu de configuration basé sur ncurses.
</p>

<pre caption="Lancer menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Plusieurs sections d'options de configuration s'afficheront. Nous allons
d'abord dresser la liste de certaines options que vous devez activer (sinon,
Gentoo ne fonctionnera pas, ou du moins pas sans quelques réglages
additionnels).
</p>

</body>
</subsection>
<subsection>
<title>Activer les options requises</title>
<body>

<p>
Avant toute chose, activez l'utilisation du code et des pilotes en
développement ou expérimentaux. C'est absolument nécessaire&nbsp;; si vous ne le
faites pas, des options très importantes ne seront pas affichées.
</p>

<pre caption="Sélectionner le code et les pilotes expérimentaux, et « hotplug »">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
General setup ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Allez à la section <c>File Systems</c> et activez le support nécessaire pour
les systèmes de fichiers que vous utilisez. Ne les compilez <e>pas</e> sous
forme de modules, sinon votre système Gentoo ne pourra pas monter vos
partitions. Activez aussi <c>Virtual memory</c> et <c>/proc file system</c> et
<e>pas</e> <c>/dev file system</c>.
</p>

<pre caption="Activer le support pour les systèmes de fichiers">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [ ] /dev file system support (OBSOLETE)
    [*] Virtual memory file system support (former shm fs)

 <comment>(Sélectionnez le(s) système(s) de fichiers dont vous avez besoin.)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Si vous utilisez PPPoE ou un modem classique pour vous connecter à Internet,
vous aurez besoin des options du noyau suivantes&nbsp;:
</p>

<pre caption="Sélection des pilotes PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Les deux options de compression ne vous feront pas de mal, mais ne sont pas
absolument nécessaires. L'option <c>PPP over Ethernet</c> n'est pas obligatoire
non plus, considérant qu'elle pourrait n'être utilisée que par <c>rp-pppoe</c>
lorsque ce dernier est configuré pour utiliser PPPoE en mode noyau.
</p>

<p>
Si vous en avez besoin, n'oubliez pas d'ajouter le support pour votre
carte ethernet.
</p>

<p>
Les utilisateurs de machines OldWorld souhaiteront activer le support de HFS
afin de pouvoir copier des noyaux compilés sur leur partition MacOS. Ceci
s'applique aussi aux machines NewWorld, car il est requis pour la partition
spéciale Apple_Bootstrap&nbsp;:
</p>

<pre caption="Activer le support HFS">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
Le noyau ne gère pas encore la préemption correctement sur des machines PPC.
L'activer peut entraîner des erreurs de compilation et des
«&nbsp;segfaults&nbsp;». Il est <e>très</e> recommandé de ne pas sélectionner
cette option.
</p>

<pre caption="Vérifier que la préemption n'est pas activée">
Platform options ---&gt;
  [ ] Preemptible Kernel
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compiler et installer</title>
<body>

<p>
Maintenant que votre noyau est configuré, il est temps de le compiler et de
l'installer. Quittez la configuration et exécutez les commandes pour compiler
le noyau&nbsp;:
</p>

<pre caption="Compiler le noyau">
# <i>make all &amp;&amp; make modules_install</i>
</pre>

<p>
Lorsque la compilation est terminée, copiez l'image du noyau dans
<path>/boot</path>. Sur un Pegasos, la partition qui héberge <path>/boot</path>
doit avoir été montée.
</p>

<pre caption="Installer le noyau">
<comment>Remplacez 2.6.10 par votre version du noyau.</comment>
(Apple/IBM)  # <i>cp vmlinux /boot/kernel-2.6.10</i>
(Pegasos)    # <i>cp arch/ppc/boot/images/zImage.chrp /boot/kernel-2.6.10</i>
</pre>

<p>
Il est également sage de copier la configuration du noyau dans
<path>/boot</path>. Juste au cas où... :)
</p>

<pre caption="Faire une copie de sécurité de la configuration du noyau">
# <i>cp .config /boot/config-2.6.1-gentoo-r8</i>
</pre>

<p>
Maintenant, poursuivez votre lecture avec <uri link="#kernel_modules">Installer
des modules du noyau individuels</uri>.
</p>

</body>
</subsection>
</section>

<section id="kernel_modules">
<title>Installer des modules du noyau individuels</title>
<subsection>
<title>Configurer les modules</title>
<body>

<p>
Vous devriez indiquer la liste des modules que vous souhaitez charger
automatiquement dans <path>/etc/modules.autoload.d/kernel-2.6</path>.
Vous pouvez également ajouter des options aux
modules si vous le souhaitez.
</p>

<p>
Pour dresser la liste des modules disponibles, exécutez la commande
<c>find</c> tel qu'indiqué ci-dessous. N'oubliez pas de substituer &lt;kernel
version&gt; par la version du noyau que vous venez juste de compiler&nbsp;:
</p>

<pre caption="Consulter la liste des modules disponibles">
# <i>find /lib/modules/&lt;version du noyau&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Par exemple, pour charger automatiquement le module <c>3c59x.o</c>, spécifiez-le
dans le fichier <path>kernel-2.6</path>.
</p>

<pre caption="Modifier le fichier /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="Exemple de fichier /etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Poursuivez l'installation avec <uri link="?part=1&amp;chap=8">Configurer
votre système</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternative&nbsp;: utiliser genkernel</title>
<body>

<p>
Si vous lisez cette section, vous avez choisi d'utiliser le script
<c>genkernel</c> pour configurer votre noyau pour vous.
</p>

<p>
Maintenant que l'arbre des sources de votre noyau est installé, il est temps de
compiler ce noyau à l'aide du script <c>genkernel</c> qui construira
automatiquement un noyau dont la configuration sera presque identique à celle
du noyau du CD d'installation. Cela signifie que si vous utilisez
<c>genkernel</c> pour construire votre noyau, votre système détectera
généralement tout votre matériel au moment de l'amorçage, à la manière du CD
d'installation. Puisque genkernel ne requiert aucune configuration manuelle, il
s'agit d'une solution idéale pour l'utilisateur rebuté par l'idée de compiler
son propre noyau.
</p>

<p>
Maintenant, voyons comment utiliser genkernel. D'abord, installez
genkernel comme suit&nbsp;:
</p>

<pre caption="Installer genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Puis, copiez les fichiers de configuration utilisés par le CD d'installation
vers le répertoire qui sera utilisé par genkernel.
</p>

<pre caption="Copier la configuration du noyau du CD">
# <i>zcat /proc/config.gz &gt; /usr/share/genkernel/ppc/kernel-config-2.6</i>
</pre>

<p>
Ensuite, compilez les sources du noyau en exécutant <c>genkernel --udev all</c>.
Puisque <c>genkernel</c> compile un noyau qui supporte presque n'importe quel
matériel, ne soyez pas surpris que la compilation demande un temps considérable.
</p>

<p>
Veuillez noter que si votre partition de démarrage utilise un autre système de
fichiers que ext2 ou ext3, vous devrez peut-être compiler le support pour ce
système de fichiers dans le noyau (donc pas comme module) avec la commande
<c>genkernel --menuconfig all</c>. Si vous utilisez EMVS2 ou LVM2, vous voudrez
sans doute ajouter les options <c>--evms2</c> ou <c>--lvm2</c>.
</p>

<pre caption="Exécuter genkernel">
# <i>genkernel --udev all</i>
</pre>

<p>
Lorsque <c>genkernel</c> aura fini son travail, un noyau, un ensemble complet
de modules et un «&nbsp;initial root disk&nbsp;» (initrd) auront été créés.  Le
noyau et le initrd seront utilisés plus tard lors de la configuration du
chargeur de démarrage. Notez bien les noms du noyau et du initrd puisque vous
devrez les spécifier lors de l'écriture du fichier de configuration du chargeur
de démarrage. Le initrd sera démarré immédiatement après l'amorçage afin de
réaliser l'autodétection du matériel (tout comme pour le CD d'installation)
avant que votre «&nbsp;véritable&nbsp;» système ne démarre. N'oubliez pas
d'indiquer les paramètres de démarrage requis sans quoi votre système ne
démarrera probablement pas.
</p>

<pre caption="Vérifier les noms de l'image du noyau et du fichier initrd">
# <i>ls /boot/kernel* /boot/initrd*</i>
</pre>

<p>
Afin d'obtenir un système plus semblable encore à celui du CD d'installation,
effectuons une dernière étape&nbsp;: l'installation de <c>coldplug</c>. Alors
que initrd autodétecte le matériel nécessaire au démarrage du système,
<c>coldplug</c> autodétecte tout le reste. Pour l'installer et l'activer,
utilisez les commandes suivantes&nbsp;:
</p>

<pre caption="Installer et activer coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

<p>
Poursuivez l'installation avec <uri link="?part=1&amp;chap=8">Configurer
votre système</uri>.
</p>

</body>
</section>
</sections>
