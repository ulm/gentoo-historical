<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-mips-disk.xml,v 1.11 2005/06/13 19:12:33 neysx Exp $ -->

<sections>

<version>1.9</version>
<date>2005-06-10</date>

<section>
<title>Introduction aux périphériques de bloc</title>
<subsection>
<title>Les périphériques de bloc</title>
<body>

<p>
Nous allons regarder de manière approfondie la question des disques sous Gentoo
Linux et sous Linux en général, y compris les systèmes de fichiers de Linux,
les partitions et les périphériques de bloc. Ensuite, une fois que vous serez
familiarisé avec les entrées et sorties des disques et des systèmes de
fichiers, vous serez guidé pour réaliser la mise en place des partitions et des
systèmes de fichiers pour votre installation de Gentoo Linux.
</p>

<p>
Pour commencer, nous allons présenter les <e>périphériques de bloc</e>. Le
plus célèbre étant certainement celui qui représente le premier disque dur SCSI
connu sous le nom <path>/dev/sda</path>.
</p>

<p>
Les périphériques de bloc cités ci-dessus représentent une interface abstraite
vers les disques. Les programmes utilisateur peuvent les utiliser pour
interagir avec votre disque sans devoir se tracasser si vos périphériques sont
IDE, SCSI ou autres. Le programme peut simplement utiliser l'espace sur le
disque comme un groupe de blocs continus de 512 octets accessibles
aléatoirement.
</p>

</body>
</subsection>
<subsection>
<title>Partitions</title>
<body>

<p>
Bien qu'il soit théoriquement possible d'utiliser un disque complet pour
héberger votre système Linux, ceci n'est pratiquement jamais fait. À la place,
les périphériques de bloc sont divisés pour être plus petits et plus facilement
gérables. Ces subdivisions sont appelées <e>partitions</e>.
</p>

</body>
</subsection>
</section>
<section>
<title>Concevoir un plan de partitionnement</title>
<subsection>
<title>Combien et de quelle taille&nbsp;?</title>
<body>

<p>
Le nombre de partitions dépend beaucoup de votre environnement. Par exemple,
si vous avez beaucoup d'utilisateurs, vous désirerez certainement avoir
votre <path>/home</path> séparé afin d'améliorer la sécurité et de simplifier
les sauvegardes. Si vous installez Gentoo comme serveur de courrier, votre
<path>/var</path> devrait être séparé étant donné que tous les courriels sont
stockés dans <path>/var</path>. Un bon choix de système de fichiers va vous
permettre d'améliorer les performances. Les serveurs de jeu auront un
<path>/opt</path> séparé étant donné que la plupart des serveurs de jeux sont
installés à cet endroit. La raison est la même que pour
<path>/home</path>&nbsp;: sécurité et sauvegarde.
Vous devriez consacrer suffisamment de place au répertoire <path>/usr</path>,
car il contient non seulement vos applications, mais aussi l'arbre Portage qui
prend 500&nbsp;Mo à lui seul et les sources des programmes que vous allez
installer.
</p>

<p>
Comme vous pouvez le voir, cela dépend beaucoup de ce que vous souhaitez faire.
Séparer les partitions ou volumes procure les avantages suivants&nbsp;:
</p>

<ul>
<li>
  Vous pouvez choisir le système de fichiers le plus performant pour chaque
  partition ou volume.
</li>
<li>
  Votre système entier ne risque pas d'arriver à court d'espace disque libre si
  un outil défectueux sature l'espace disque d'une partition ou d'un volume.
</li>
<li>
  Si nécessaire, les vérifications des systèmes de fichiers durent moins
  longtemps, vu que de multiples vérifications peuvent être faites en parallèle
  (quoique cet avantage est plus important avec plusieurs disques qu'avec
  plusieurs partitions).
</li>
<li>
  La sécurité peut être améliorée en montant certaines partitions ou volumes
  en lecture seulement, en utilisant nosuid (les bits suid sont ignorés) et
  noexec (les bits exécutables sont ignorés), etc.
</li>
</ul>

<p>
Cependant, de multiples partitions ont un gros désavantage&nbsp;: si elles ne
sont pas configurées correctement, vous risquez d'obtenir un système avec
beaucoup d'espace libre sur une partition et plus du tout sur une autre. Notez
également qu'il y a une limite de 15 partitions par disque SCSI ou SATA.
</p>

</body>
</subsection>
</section>

<section>
<title>Partitionner votre disque avec fdisk</title>
<subsection>
<title>Machines SGI : Création d'un label de disque SGI</title>
<body>

<p>
Tous les disques dans un système SGI nécessitent un <e>SGI Disk Label</e> qui
est similaire aux disklabels Sun et MS-DOS (etiquette de
disque). Les informations sur les partitions du disque y sont stockées. Créer
un nouveau SGI Disk Label va créer deux partitions spéciales sur le
disque&nbsp;:
</p>

<ul>
  <li>
    <!--<e>SGI Volume Header</e> (9e partition)&nbsp;: cette partition est
    importante. C'est là que sera copiée l'image du noyau. Pour stocker les
    images de noyau, vous allez utiliser l'outil connu sous le nom de
    <c>dvhtool</c> pour copier les images de noyau sur cette partition. Vous
    serez alors capable de démarrer des noyaux à partir de cette partition via
    le SGI PROM Monitor. -->
    <e>SGI Volume Header</e> (9ème partition) ou en-tête du volume SGI. Cette
    partition est importante car c'est là que le chargeur de démarrage arcboot
    sera installé.
   </li>
  <li>
    <e>SGI Volume</e> (11ème partition)&nbsp;: cette partition est
    similaire à la 3ème partition «&nbsp;Whole Disk&nbsp;» (disque entier) du
    «&nbsp;Sun Disklabel&nbsp;». Cette partition occupe le disque entier et doit
    rester telle quelle. Elle n'a pas d'autre but que d'assister la PROM dans
    certaines opérations non documentées (c'est utilisé par IRIX d'une manière
    ou d'une autre).
  </li>
</ul>

<warn>
Le «&nbsp;SGI Volume Header&nbsp;» (en-tête de volume SGI) <e>doit</e> commencer
au cylindre 0. Ne pas faire ceci signifie que vous ne pourrez pas démarrer à
partir du disque.
</warn>

<p>
La suite est un exemple tiré d'une session <c>fdisk</c>. Lisez-la et adaptez-la
à vos besoins.
</p>

<pre caption="Création d'un « SGI Disk label »">
# <i>fdisk /dev/sda</i>

Command (m for help): <i>x</i>

Expert command (m for help): <i>m</i>
Command action
   b   move beginning of data in a partition
   c   change number of cylinders
   d   print the raw data in the partition table
   e   list extended partitions
   f   fix partition order
   g   create an IRIX (SGI) partition table
   h   change number of heads
   m   print this menu
   p   print the partition table
   q   quit without saving changes
   r   return to main menu
   s   change number of sectors/track
   v   verify the partition table
   w   write table to disk and exit

Expert command (m for help): <i>g</i>
Building a new SGI disklabel. Changes will remain in memory only,
until you decide to write them. After that, of course, the previous
content will be unrecoverably lost.

Expert command (m for help): <i>r</i>

Command (m for help): <i>p</i>

Disk /dev/sda (SGI disk label): 64 heads, 32 sectors, 17482 cylinders
Units = cylinders of 2048 * 512 bytes

----- partitions -----
Pt#     Device  Info     Start       End   Sectors  Id  System
 9:  /dev/sda1               0         4     10240   0  SGI volhdr
11:  /dev/sda2               0     17481  35803136   6  SGI volume
----- Bootinfo -----
Bootfile: /unix
----- Directory Entries -----

Command (m for help):
</pre>

<note>
Si votre disque a déjà un «&nbsp;SGI Disklabel&nbsp;», fdisk ne vous
autorisera pas à créer un nouveau «&nbsp;label&nbsp;». Il y a deux moyens de
s'en sortir. Le premier est de créer un label Sun ou MS-DOS, écrire les
changements sur disque et relancer fdisk. L'autre est d'écraser la table de
partitions avec des données nulles avec la commande suivante&nbsp;: <c>dd
if=/dev/zero of=/dev/sda bs=512 count=1</c>.
</note>

<!-- Ce chapitre est désuet maintenant qu'on utilise arcboot
<p>Donner la bonne taille au «&nbsp;SGI Volume Header&nbsp;»</p>

<p>
Maintenant que le «&nbsp;SGI Disklabel&nbsp;» est créé, les partitions peuvent
être définies. Dans l'exemple précédent, il y a déjà deux partitions définies
pour vous. Ce sont les partitions spéciales mentionnées plus haut et elles ne
devraient normalement pas être altérées. Cependant, pour installer Gentoo, nous
devons charger plusieurs images de noyau directement dans le «&nbsp;volume
header&nbsp;» puisqu'il n'y a actuellement pas de chargeur de démarrage SGI
supporté dans  Portage. Le «&nbsp;header&nbsp;» de volume lui-même peut supporter
jusqu'à <e>huit</e> images de n'importe quelle taille, avec pour chaque image un
nom de maximum huit caractères.
</p>

<p>
Le processus pour rendre le «&nbsp;header&nbsp;» de volume plus grand n'est pas
exactement simple - il y a pas mal de bidouillage. On ne peut pas simplement
supprimer et rajouter le «&nbsp;volume header&nbsp;» à cause du comportement
bizarre de fdisk. Dans l'exemple fourni ci-dessous, nous allons créer un
«&nbsp;header&nbsp;» de volume de 50 Mo, et une partition de démarrage de 50 Mo.
Le plan actuel de notre disque peut varier, mais il ne s'agit ici que de propos
illustratifs.
</p>

<pre caption="Redimensionner le « SGI Volume Header » correctement">
Command (m for help): <i>n</i>
Partition number (1-16): <i>1</i>
First cylinder (5-8682, default 5): <i>51</i>
 Last cylinder (51-8682, default 8682): <i>101</i>

<comment>(Vous avez vu que fdisk n'autorise la partition #1 à être recréée qu'à partir du
cylindre 5 au minimum.</comment>
<comment>(Si vous avez essayé de supprimer et recréer le « SGI Volume Header » de cette
manière, vous devez avoir rencontré le même problème.)</comment>
<comment>(Dans notre exemple, nous voulons que /boot fasse 50 Mo, c'est pourquoi nous
commençons au cylindre 51 (souvenez-vous que le « Volume Header » doit commencer au
cylindre 0), et terminons au cylindre 101, ce qui fait plus ou moins 50 Mo, à 5 Mo près).</comment>

Command (m for help): <i>d</i>
Partition number (1-16): <i>9</i>

<comment>(Suppression de la partition #9 (« SGI Volume Header »))</comment>

Command (m for help): <i>n</i>
Partition number (1-16): <i>9</i>
First cylinder (0-50, default 0): <i>0</i>
 Last cylinder (0-50, default 50): <i>50</i>

<comment>(Recréation de la partition #9, se terminant juste avant la partition #1.</comment>
</pre>
-->

<p>
Si vous ne savez pas trop comment utiliser <c>fdisk</c>, jetez un coup d'œil
plus loin aux instructions de partitionnement pour serveurs Cobalt. Le
principe est exactement le même, souvenez-vous juste de laisser l'en-tête du
volume SGI et l'ensemble des partitions du disque seuls.
</p>

<p>
Maintenant que vos partitions ont bien été créées vous pouvez continuer au
chapitre <uri link="#filesystems">Création des systèmes de fichiers</uri>.
</p>

</body>
</subsection>

<subsection>
<title>Machines Cobalt : Partitionnement du disque</title>
<body>

<p>
Sur les machines Cobalt, le BOOTROM s'attend à voir un MBR MS-DOS donc le
partitionnement du disque dur est relativement classique. En fait, c'est le
même procédé qui est utilisé sur les machines Intel x86. <e>Cependant</e>, vous
devez tout de même faire attention à plusieurs points&nbsp;:
</p>

<ul>
  <li>
    Le firmware des Cobalt s'attend à avoir une partition <path>/dev/hda1</path>
    formatée en <e>EXT2 Revision 0</e>. <e>Les partitions EXT2 Revision 1 ne
    fonctionneront pas&nbsp;!</e> Le BOOTROM des Cobalt ne comprend que le
    format EXT2r0.
  </li>
  <li>
    Cette même partition doit contenir une image d'exécutable au format ELF
    archivée avec gzip, <path>vmlinux.gz</path>, dans la racine de cette
    partition, qui sera chargée comme étant le noyau Linux.
  </li>
</ul>

<p>
Pour cette raison, je vous recommande de créer une partition <path>/boot</path>
d'environ 20&nbsp;Mo formatée en EXT2r0 dans laquelle vous pourrez installer
CoLo et vos noyaux. Cela vous permet d'utiliser un système de fichiers moderne
(EXT3 ou ReiserFS) pour votre système de fichiers racine.
</p>

<p>
Je suppose ici que vous avez créé la partition <path>/dev/hda1</path> qui sera
montée plus tard en tant que partition <path>/boot</path>. Si vous voulez que
ce soit la racine <path>/</path> vous devrez garder les exigences du BOOTROM en
tête lors de la création.
</p>

<p>
Pour créer les partitions vous devez taper la commande <c>fdisk /dev/hda</c> à
l'invite de commandes. Les commandes principales qui vous seront utiles
sont&nbsp;:
</p>

<ul>
  <li>
    <c>o</c>&nbsp;: Efface l'ancienne table de partitions, en commençant par une
    nouvelle table de partition MS-DOS vide.
  </li>
  <li>
    <c>n</c>&nbsp;: Nouvelle partition.
  </li>
  <li>
    <c>t</c>&nbsp;: Change le type de la partition.
    <ul>
      <li>
        Utilisez le type <c>82</c> pour la mémoire virtuelle de Linux et
        <c>83</c> pour un système de fichiers Linux.
      </li>
    </ul>
  </li>
  <li>
    <c>d</c>&nbsp;: Supprime une partition.
  </li>
  <li>
    <c>p</c>&nbsp;: Affiche la table de partition.
  </li>
  <li>
    <c>q</c>&nbsp;: Quitte -- Garde l'ancienne table de partitions comme elle
    était.
  </li>
  <li>
    <c>w</c>&nbsp;: Quitte -- Écrit la nouvelle table de partitions sur le
    disque.
  </li>
</ul>

<pre caption="Partitionner le disque">
# <i>fdisk /dev/hda</i>

The number of cylinders for this disk is set to 19870.
There is nothing wrong with that, but this is larger than 1024,
and could in certain setups cause problems with:
1) software that runs at boot time (e.g., old versions of LILO)
2) booting and partitioning software from other OSs
   (e.g., DOS FDISK, OS/2 FDISK)

<comment>(Commencez par effacer toutes les partitions existantes.)</comment>
Command (m for help): <i>o</i>
Building a new DOS disklabel. Changes will remain in memory only,
until you decide to write them. After that, of course, the previous
content won't be recoverable.


The number of cylinders for this disk is set to 19870.
There is nothing wrong with that, but this is larger than 1024,
and could in certain setups cause problems with:
1) software that runs at boot time (e.g., old versions of LILO)
2) booting and partitioning software from other OSs
   (e.g., DOS FDISK, OS/2 FDISK)
Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)

<comment>(Vous pouvez maintenant vérifier que votre table de partitions est vide
en tapant la commande « p ».)</comment>

Command (m for help): <i>p</i>

Disk /dev/hda: 10.2 GB, 10254827520 bytes
16 heads, 63 sectors/track, 19870 cylinders
Units = cylinders of 1008 * 512 = 516096 bytes

   Device Boot      Start         End      Blocks   Id  System

<comment>(Créez la partition /boot.)</comment>

Command (m for help): <i>n</i>
Command action
   e   extended
   p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>

<comment>(Tapez Entrée ici pour accepter les valeurs par défaut.)</comment>

First cylinder (1-19870, default 1):
Last cylinder or +size or +sizeM or +sizeK (1-19870, default 19870): <i>+20M</i>

<comment>(Vérifiez que la nouvelle partition est bien là avec «p ».)</comment>
Command (m for help): <i>p</i>

Disk /dev/hda: 10.2 GB, 10254827520 bytes
16 heads, 63 sectors/track, 19870 cylinders
Units = cylinders of 1008 * 512 = 516096 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/hda1               1          40       20128+  83  Linux

<comment>(Pour le reste, je préfère le mettre sur une partition étendue.)</comment>

Command (m for help): <i>n</i>
Command action
   e   extended
   p   primary partition (1-4)
<i>e</i>
Partition number (1-4): <i>2</i>

<comment>(Encore une fois, les valeurs par défaut sont bien, tapez Entrée.)</comment>

First cylinder (41-19870, default 41):
Using default value 41

<comment>(Nous voulons utiliser tout l'espace disque, tapez Entrée encore une fois.)</comment>
Last cylinder or +size or +sizeM or +sizeK (41-19870, default 19870):
Using default value 19870

<comment>(Maintenant, la partition / peut être petite -- J'utilise des
partitions séparées pour /usr, /var, etc. Faites ce qui vous plaît ici.)</comment>

Command (m for help): <i>n</i>
Command action
   l   logical (5 or over)
   p   primary partition (1-4)
<i>l</i>
First cylinder (41-19870, default 41):<i>&lt;Tapez Entrée&gt;</i>
Using default value 41
Last cylinder or +size or +sizeM or +sizeK (41-19870, default 19870): <i>+500M</i>

<comment>(... Même chose pour les autres partitions...)</comment>

<comment>(Enfin, pour la mémoire virtuelle, je recommande un minimum
de 256 Mo et de préférence 1 Go)</comment>

Command (m for help): <i>n</i>
Command action
   l   logical (5 or over)
   p   primary partition (1-4)
<i>l</i>
First cylinder (17294-19870, default 17294): <i>&lt;Tapez Entrée&gt;</i>
Using default value 17294
Last cylinder or +size or +sizeM or +sizeK (1011-19870, default 19870): <i>&lt;Tapez Entrée&gt;</i>
Using default value 19870

<comment>(Maintenant, si vous jetez un coup d'œil à votre table de partitions, vous
devriez avoir quelque chose comme ceci...)</comment>

Command (m for help): <i>p</i>

Disk /dev/hda: 10.2 GB, 10254827520 bytes
16 heads, 63 sectors/track, 19870 cylinders
Units = cylinders of 1008 * 512 = 516096 bytes

Device Boot      Start         End      Blocks      ID  System
/dev/hda1               1          21       10552+  83  Linux
/dev/hda2              22       19870    10003896    5  Extended
/dev/hda5              22        1037      512032+  83  Linux
/dev/hda6            1038        5101     2048224+  83  Linux
/dev/hda7            5102        9165     2048224+  83  Linux
/dev/hda8            9166       13229     2048224+  83  Linux
/dev/hda9           13230       17293     2048224+  83  Linux
/dev/hda10          17294       19870     1298776+  83  Linux

<comment>(Vous avez vu hda10, notre partition d'échange est toujours de type 83)</comment>

Command (m for help): <i>t</i>
Partition number (1-10): <i>10</i>
Hex code (type L to list codes): <i>82</i>
Changed system type of partition 10 to 82 (Linux swap)

<comment>(Ça devrait faire l'affaire... Vérifions.)</comment>

Command (m for help): <i>p</i>

Disk /dev/hda: 10.2 GB, 10254827520 bytes
16 heads, 63 sectors/track, 19870 cylinders
Units = cylinders of 1008 * 512 = 516096 bytes

Device Boot      Start         End      Blocks      ID  System
/dev/hda1               1          21       10552+  83  Linux
/dev/hda2              22       19870    10003896    5  Extended
/dev/hda5              22        1037      512032+  83  Linux
/dev/hda6            1038        5101     2048224+  83  Linux
/dev/hda7            5102        9165     2048224+  83  Linux
/dev/hda8            9166       13229     2048224+  83  Linux
/dev/hda9           13230       17293     2048224+  83  Linux
/dev/hda10          17294       19870     1298776+  82  Linux Swap

<comment>(Nous pouvons maintenant écrire notre nouvelle table de partitions sur le
disque.)</comment>

Command (m for help): <i>w</i>
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.

#
</pre>

<p>
Et c'est tout ce qu'il y avait à faire. Vous pouvez maintenant passer à l'étape
suivante&nbsp;: <uri link="#filesystems">Création des systèmes de
fichiers</uri>.
</p>

</body>
</subsection>
</section>

<section id="filesystems">
<title>Création des systèmes de fichiers</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Maintenant que vos partitions sont créées, il est temps d'y installer un
système de fichiers. Si vous ne vous souciez pas de quel système de fichiers
choisir et êtes satisfait de ceux que nous utilisons par défaut dans ce manuel,
continuez avec <uri link="#filesystems-apply">Application d'un système de
fichiers à une partition</uri>. Sinon, continuez à lire pour en apprendre plus
sur les systèmes de fichiers disponibles.
</p>

</body>
</subsection>
<subsection>
<title>Systèmes de fichiers&nbsp;?</title>
<body>

<p>
De nombreux systèmes de fichiers sont disponibles. Reiserfs, Ext2 et ext3 sont
considérés stables sur des machines MIPS&nbsp;; les autres systèmes de fichiers
sont expérimentaux.
</p>

<p>
<b>ext2</b> est le système de fichiers original de Linux mais n'a pas de
metadonnées journalisées, ce qui signifie que la routine de vérification du
système de fichiers ext2 au démarrage peut prendre beaucoup de temps. À
présent, vous avez le choix entre plusieurs systèmes de fichiers journalisés
qui peuvent être vérifiés très rapidement et sont généralement préférés à leurs
homologues non journalisés. Les systèmes de fichiers journalisés évitent de
devoir attendre longtemps quand vous démarrez votre système et que vos systèmes
de fichiers sont dans un état instable.
</p>

<p>
<b>ext3</b> est la version journalisée du système de fichiers ext2, qui fournit
des metadonnées journalisées pour une récupération rapide en plus d'autres
modes journalisés comme la journalisation de données complètes et ordonnées.
ext3 est un très bon système de fichiers fiable. Il offre généralement des
performances décentes dans la plupart des conditions. Il offre de bonnes
performances dans la plupart des cas grâce à un arbre balancé indexé par clé de
hachage. En résumé, ext3 est un excellent système de fichiers.
</p>

<p>
<b>ReiserFS</b> est un système de fichiers basé sur les B*-tree qui a de très
bonnes performances et qui surpasse ext2 et ext3 dans le cas de l'utilisation
de petits fichiers (fichiers de moins de 4 ko), souvent avec un facteur allant
de 10 à 15. ReiserFS résiste aussi très bien à la montée en charge et a des
metadonnées journalisées. Depuis le noyau 2.4.18, ReiserFS est stable et peut
être utilisé aussi bien dans un système de fichiers destiné à une utilisation
générale et pour des cas extrêmes comme la création de grands systèmes de
fichiers et l'utilisation de nombreux petits fichiers ou de grands fichiers et
répertoires qui contiennent des dizaines de milliers de fichiers.
</p>

<p>
<b>XFS</b> est un système de fichiers avec des métadonnées journalisées qui
possède un ensemble de fonctionnalités robustes et qui est optimisé pour la mise
à l'échelle. Nous ne recommandons ce système de fichiers que pour des systèmes
équipés d'unités de stockage SCSI haut de gamme ou connectés à des serveurs de
stockage «&nbsp;Fibre Channel&nbsp;», et munis d'un onduleur. Puisque XFS
utilise énormément le cache pour des données transitoires en mémoire vive, les
programmes mal conçus (ceux qui ne prennent pas les précautions suffisantes
quand ils écrivent les fichiers sur disque, et il y en a quelques uns) peuvent
perdre beaucoup de données si le système s'interrompt de manière inattendue.
</p>

<p>
<b>JFS</b> est un système de fichiers journalisé à hautes performances d'IBM.
Il a été récemment déclaré prêt pour un usage en production, mais il n'y a pas
encore suffisamment d'information pour commenter sa stabilité générale de
manière positive ou négative.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Application d'un système de fichiers à une partition</title>
<body>

<p>
Pour créer un système de fichiers sur une partition ou un volume, chaque
système de fichiers fournit ses propres outils&nbsp;:
</p>

<table>
<tr>
  <th>Système de fichiers</th>
  <th>Commande de création</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Par exemple, pour formater la partition de démarrage (<path>/dev/sda1</path>
dans notre exemple) en ext2 et la partition principale (<path>/dev/sda3</path>
dans notre exemple) en ext3, nous utiliserons&nbsp;:
</p>

<pre caption="Application d'un système de fichiers sur une partition">
# <i>mke2fs /dev/sda1</i>
# <i>mke2fs -j /dev/sda3</i>
</pre>

<p>
À présent, créons les systèmes de fichiers sur nos partitions fraîchement
créées.
</p>

<warn>
Si vous êtes en train d'installer Gentoo sur un serveur Cobalt, souvenez-vous
que <path>/dev/hda1</path> DOIT être de type <e>EXT2 revision 0</e>&nbsp;; tout
autre type (par exemple EXT2 revision 1, EXT3, Reiserfs, XFS, JFS et autres)
<e>NE FONCTIONNERA PAS&nbsp;!</e> Vous pouvez formater la partition avec la
commande&nbsp;: <c>mke2fs -r 0 /dev/hda1</c>.
</warn>

<warn>
Souvenez-vous également que arcboot n'est actuellement pas capable de lire
d'autres systèmes de fichiers que EXT2, EXT3 et ISO9660 (pour les versions
récentes). De ce fait, <path>/boot</path> sur les machines SGI doit également
être sur une partition EXT2 ou EXT3.
</warn>

</body>
</subsection>
<subsection>
<title>Activation de la partition de mémoire virtuelle</title>
<body>

<p>
<c>mkswap</c> est la commande utilisée pour créer et initialiser la partition de
mémoire virtuelle&nbsp;:
</p>

<pre caption="Création d'une signature de mémoire virtuelle">
# <i>mkswap /dev/sda2</i>
</pre>

<p>
Pour activer la partition de mémoire virtuelle, utilisez <c>swapon</c>&nbsp;:
</p>

<pre caption="Activation de la partition de mémoire virtuelle">
# <i>swapon /dev/sda2</i>
</pre>

<p>
Créez et activez la partition de mémoire virtuelle avec les commandes
mentionnées plus haut.
</p>

</body>
</subsection>
</section>
<section>
<title>Monter les partitions</title>
<body>

<p>
Maintenant que nos partitions sont initialisées et contiennent un système de
fichiers, il est temps de les monter avec la commande <c>mount</c>. N'oubliez
pas de créer les points de montage nécessaires pour toutes les partitions que
vous avez créées. Par exemple, pour monter les partitions de démarrage et
racine&nbsp;:
</p>

<pre caption="Monter les partitions">
# <i>mount /dev/sda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/sda1 /mnt/gentoo/boot</i>
</pre>

<note>
Si vous installez <path>/tmp</path> sur une partition séparée, n'oubliez pas de
définir les permissions nécessaires après avoir monté la partition. Utilisez la
commande <c>chmod 1777 /mnt/gentoo/tmp</c>. La même remarque s'applique à
<path>/var/tmp</path>.
</note>

<p>
Nous devrons également monter le système de fichiers proc (une interface
virtuelle avec le noyau) sur <path>/proc</path>, mais nous devons d'abord placer
nos fichiers sur les partitions.
</p>

<p>
Continuez avec <uri link="?part=1&amp;chap=5">Installer les fichiers
d'installation de Gentoo</uri>.
</p>

</body>
</section>
</sections>
