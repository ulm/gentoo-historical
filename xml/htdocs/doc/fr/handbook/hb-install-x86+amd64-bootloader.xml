<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-x86+amd64-bootloader.xml,v 1.9 2013/03/04 19:47:19 swift Exp $ -->

<sections>

<abstract>
Plusieurs chargeurs sont disponibles. Chaque chargeur est configuré
différemment. Ce chapitre explique les différents choix qui s'offrent à vous et
décrit comment configurer le chargeur que vous aurez sélectionné.
</abstract>

<version>12</version>
<date>2012-09-11</date>

<section>
<title>Faites votre choix</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Maintenant que votre noyau est configuré et compilé et que les fichiers de
configuration du système sont correctement paramétrés, il est temps d'installer
le programme qui charge le noyau au démarrage de votre machine.
Un tel programme est appelé un <e>chargeur de démarrage</e>
(«&nbsp;bootloader&nbsp;» en anglais).
</p>

</body>
<body test="contains('AMD64 x86', func:keyval('arch'))">

<p>
Pour l'architecture <keyval id="arch"/>, vous avez le choix entre <uri
link="#grub">GRUB</uri> et <uri link="#lilo">LILO</uri>.
</p>


</body>
<body>

<p>
Avant d'installer le chargeur de démarrage, vous devriez
décider si vous allez utiliser le framebuffer. Ce dernier permet d'utiliser la
ligne de commande avec des fonctionnalités graphiques limitées. Vous pouvez par
exemple faire afficher le bel écran de démarrage (le «&nbsp;splash
screen&nbsp;») de Gentoo.
</p>

</body>
</subsection>
<subsection>
<title>Facultatif&nbsp;: le framebuffer</title>
<body>

<p>
<e>Si</e> vous avez configuré votre noyau avec le support pour le framebuffer
(ou si vous avez utilisé la configuration de noyau par défaut de
<c>genkernel</c>) vous pouvez l'activer en ajoutant <c>vga</c> et/ou
<c>video</c> au fichier de configuration de votre chargeur de démarrage.
</p>

<p>
Vous deveza avant tout savoir quel est le périphérique de framebuffer que vous utilisez.
Vous devriez avoir utilisé 
<c>uvesafb</c> en tant que <e>pilote VESA </e>.
</p>

<p>
L'instruction <c>video</c> gère les options d'affichage du périphérique de framebuffer. Il
faut  lui donner le pilote du framebuffer suivi des instructions de contrôle que vous voulez
activer. Toutes les variables sont listées dans <path>/usr/src/linux/Documentation/fb/uvesafb.txt</path>. Les options les plus employées sont&nbsp;:
</p>
<table>
<tr>
  <th>Contrôle</th>
  <th>Description</th>
</tr>
<tr>
  <ti>ywrap</ti>
  <ti>
    Indique que la carte graphique peut réutiliser sa mémoire (c'est-à-dire
    continuer au début quand elle approche de la fin).
  </ti>
</tr>
<tr>
  <ti>mtrr:<c>n</c></ti>
  <ti>
    Configure les registres MTRR où <c>n</c> est<br/>
      0 - désactivé<br/>
      1 - pas de cache<br/>
      2 - «&nbsp;write-back&nbsp;»<br/>
      3 - «&nbsp;write-combining&nbsp;»<br/>
      4 - «&nbsp;write-through&nbsp;»
  </ti>
</tr>
<tr>
  <ti><c>mode</c></ti>
  <ti>
  
    Configure la résolution, la profondeur de couleurs et le taux de
    rafraichissement. Vous pouvez par exemple utiliser <c>1024x768-32@85</c>
    pour une résolution de 1024x768, des couleurs 32&nbsp;bits et un
    rafraichissement de 85&nbsp;Hz.
  </ti>
</tr>
</table>

<p>
Un exemple de résultat pour ces deux paramètres pourrait être <c>video=uvesafb:mtrr:3,ywrap,1024x768-32@85</c>. Souvenez-vous de ces
configurations, nous en aurons besoin dans pas longtemps.
</p>
<p test="func:keyval('arch')='IA64'">
Maintenant vous devriez installer <uri link="#elilo">le chargeur de démarrage elilo</uri>.
</p>

<p test="not(func:keyval('arch')='IA64')">
Now continue by installing <uri link="#grub">GRUB</uri> <e>ou</e> <uri
link="#lilo">LILO</uri>.
</p>
</body>
</subsection>
</section>
<section id="grub" test="contains('AMD64 x86',func:keyval('arch'))">
<title>Par défaut&nbsp;: GRUB</title>
<subsection>
<title>Comprendre le vocabulaire de GRUB</title>
<body>

<p>
Pour bien comprendre GRUB, le plus important est de se familiariser avec la
manière qu'a GRUB de désigner les disques durs et les partitions. Votre
partition Linux <path>/dev/sda1</path> s'appelle généralement
<path>(hd0,0)</path> dans GRUB. Notez les parenthèses nécessaires autour de
<path>hd0,0</path>.
</p>

<p>
GRUB compte les disques durs à partir de zéro plutôt que de «&nbsp;a&nbsp;» et
les partitions à partir de zéro au lieu de un. Notez aussi que GRUB ne compte
que les disques durs et ignore les périphériques tels que les lecteurs ou
graveurs de CD-ROM. Les mêmes principes s'appliquent aux disques SCSI. Ces
derniers reçoivent en général des numéros supérieurs à ceux des disques IDE,
sauf quand le BIOS est configuré pour démarrer sur les disques SCSI. Si votre
machine démarre sur un autre disque (par exemple votre premier disque esclave),
c'est le disque sur lequel votre ordinateur démarre qui est considéré comme
<path>hd0</path>.
</p>

<p>
En supposant que vous ayez un disque dur <path>/dev/sda</path> et deux autres
sur <path>/dev/sdb</path> et <path>/dev/sdc</path>, alors <path>/dev/sdb7</path>
s'écrit <path>(hd1,6)</path> dans GRUB. Cela peut sembler compliqué, et ça
l'est, mais, comme vous le verrez, GRUB offre un système d'aide à la saisie bien
pratique si vous avez de nombreux disques durs avec beaucoup de partitions.
</p>

<p>
Après cette courte introduction, il est temps d'installer GRUB.
</p>

</body>
</subsection>
<subsection>
<title>Installation de GRUB</title>
<body>

<p>
Pour installer GRUB, il suffit d'une simple commande <c>emerge</c>.
</p>

<impo test="func:keyval('arch')='AMD64'">
si vous utilisez un <uri link="?part=1&amp;chap=6#doc_chap2">profil</uri>
non-multilib, n'installez pas grub mais plutôt <c>grub-static</c>. Si vous utilisez un profil non-multilib <e>et</e> que vous avez <e>désactivé</e>
IA-32 Emulation
  dans le noyau, vous devriez utiliser <c>Lilo</c>
</impo>

<pre caption="Installer GRUB">
# <i>emerge grub</i>
</pre>

<p>
Bien que GRUB soit maintenant installé, vous devez encore écrire son fichier de
configuration pour qu'il puisse démarrer votre noyau et l'installer dans le
secteur de démarrage (MBR) du système. Créez le fichier
<path>/boot/grub/grub.conf</path>&nbsp;:
</p>

<pre caption="Création de /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Nous allons maintenant écrire un fichier <path>grub.conf</path>. Assurez-vous d'utiliser 
<e>votre</e> nom d'image du noyau et, si approprié, <e>votre </e>
nom de fichier initrd.
</p>

<note>
Grub attribue les noms des disques depuis le BIOS. Si vous changez vos
paramètres du BIOS, les lettres et les numéros qui désignent vos disques
peuvent changer également. Cela signifie que si vous changez l'ordre de
démarrage de vos disques, vous aurez peut-être à changer la configuration de
grub.
</note>

<note>
Si vous avez utilisé le système de fichiers JFS, vous <e>devez</e> ajouter
«&nbsp;ro&nbsp;» à la ligne <c>kernel</c> pour que JFS puisse récupérer son
journal avant que le système de fichiers ne soit monté en lecture/écriture.
</note>

<pre caption="Exemple de grub.conf">
<comment># Entrée par défaut, 0 est la première, 1 la deuxième, etc.</comment>
default 0
<comment># Délai en secondes avant de lancer l'entrée par défaut</comment>
timeout 30
<comment># Jolie image «&nbsp;splash&nbsp;»
# Mettez la ligne suivante en commentaire
# si votre machine n'a pas de carte graphique.</comment>
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title Gentoo Linux <keyval id="kernel-version"/>
<comment># Partition qui contient l'image du noyau ( ou le système d'exploitation)</comment>
root (hd0,0)
kernel /boot/kernel-<keyval id="kernel-version"/> root=/dev/sda3

title Gentoo Linux <keyval id="kernel-version"/> (rescue)
<comment># Partition qui contient l'image du noyau</comment>
root (hd0,0)
kernel /boot/kernel-<keyval id="kernel-version"/> root=/dev/sda3 init=/bin/bb

<comment># Les lignes suivantes n'existe que si vous démarrez un système Windows en multi-boot.</comment>
<comment># Dans cet exemple, Windows est installé dans /dev/sda6.</comment>
title Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>
<p>
Si lors de la compilation du noyau, vous avez choisi d'inclure un disque virtuel de démarrage (initramfs) sur lequel démarrer,
 vous devez changer la configuration pour faire référence à ce disque virtuel et pour indiquer à initramfs, où se trouve le disque
 physique root&nbsp;:
</p>

<pre caption="Extrait de GRUB  pour une compilation incluant un initramfs">
title Gentoo Linux <keyval id="kernel-version"/>
root (hd0,0)
kernel /boot/<keyval id="kernel-version"/> <i>real_</i>root=/dev/sda3
<i>initrd /boot/<keyval id="genkernel-initrd"/></i>
</pre>
 
<!--
<pre caption="Exemple de grub.conf avec genkernel">
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title Gentoo Linux <keyval id="kernel-version"/>
root (hd0,0)
kernel /boot/<keyval id="genkernel-name"/> root=/dev/ram0 init=/linuxrc ramdisk=8192 real_root=/dev/sda3
initrd /boot/<keyval id="genkernel-initrd"/>

<comment># Uniquement pour démarrer un autre système.</comment>
title Windows XP
rootnoverify (hd0,5)
makeactive
chainloader +1
</pre>
-->
<p>
Si vos partitions sont organisées différemment ou si vous utilisez un autre
noyau, ajustez les commandes en conséquence. Assurez-vous de toujours utiliser
un chemin relatif au point de montage. En d'autres termes,
<path>(hd0,0)/grub/splash.xpm.gz</path> est en fait
<path>/boot/grub/splash.xpm.gz</path>, car <path>(hd0,0)</path> sera monté sur
<path>/boot</path>.
</p>

<p>
De plus, si vous avez décidé de partitionner votre disque sans partition
<path>/boot</path> séparée, le préfixe <path>/boot</path> est
<e>indispensable</e>. Par contre, Si vous avez créé une partition
<path>/boot</path> séparée, le préfixe <path>/boot</path> est facultatif et
fonctionne grâce à un lien symbolique. En résumé, les exemples ci-dessus
devraient fonctionner avec ou sans partition <path>/boot</path> séparée.
</p>

<p>
Si vous devez passer des options supplémentaires à votre noyau, ajoutez-les
simplement à la fin de la commande <c>kernel</c>. Nous lui passons déjà une
option (<c>root=/dev/sda3</c> ou <c>real_root=/dev/sda3</c>), mais vous pouvez
en ajouter (par exemple, les options <c>video</c> ou <c>vga</c> pour le
framebuffer mentionnées plus haut).
</p>
<p>
  Si le fichier de configuration de votre chargeur de démarrage contient le paramètre <e>real_root</e> (racine réelle),
    utilisez le paramètre <e>real_rootflags</e> pour définir les options de montage de système de fichiers root.

</p>

<p>
Si vous utilisez un noyau de version 2.6.7 ou supérieure et avez placé un
cavalier sur votre disque dur car le BIOS ne gère pas les disques de grande
capacité, alors vous devez ajouter <c>sdx=stroke</c> sur la ligne <c>kernel</c> (en remplaçant sdx par le répère du disque concerné).
</p>

<p>
Les utilisateurs de <c>genkernel</c> doivent savoir que leur noyau utilise les
mêmes options que celles utilisées sur le CD d'installation. Par exemple, si
vous avez des périphériques SCSI, vous devez ajouter l'option <c>doscsi</c>.
</p>

<p>
Enregistrez le fichier <path>grub.conf</path> et quittez votre éditeur. Il
faut encore installer GRUB dans votre secteur de démarrage, de manière à ce qu'il soit exécuté automatiquement au démarrage.
</p>

<p>
Les développeurs de GRUB conseillent d'utiliser la commande
<c>grub-install</c>. Cependant, si cette méthode échoue, vous devrez
l'installer manuellement.
</p>

<p>
Veuillez poursuivre avec soit l'<uri link="#grub-install-auto">installation
automatique de GRUB</uri> (par défaut), soit l'<uri
link="#grub-install-manual">installation manuelle de GRUB</uri> (alternative).
</p>

</body>
</subsection>
<subsection id="grub-install-auto">
<title>Par défaut : installation automatique de GRUB</title>
<body>

<p>
Le script <c>grub-install</c> installe GRUB automatiquement, mais, puisque vous
êtes dans un environnement «&nbsp;chroot&nbsp;», vous devez créer le fichier
<path>/etc/mtab</path> à jour. Ce dernier contient la liste des systèmes de
fichiers qui sont montés. Heureusement, il suffit d'utiliser une copie de
<path>/proc/mounts</path> en évitant la ligne <c>rootfs</c> (nécessaire si vous
n'avez pas de partition <path>/boot</path> séparée). La commande suivante
fonctionne avec ou sans partition <path>/boot</path> séparée&nbsp;:
</p>

<pre caption="Créer /etc/mtab">
# <i>grep -v rootfs /proc/mounts &gt; /etc/mtab</i>
</pre>

<p>
Ensuite, vous pouvez lancer le script <c>grub-install</c>&nbsp;:
</p>

<pre caption="Exécuter grub-install">
# <i>grub-install --no-floppy /dev/sda</i>
</pre>

<p>
Pour plus d'informations à propos de GRUB, vous pouvez consulter la <uri
link="http://www.gnu.org/software/grub/grub-faq.html">FAQ de GRUB</uri> ou le
<uri link="http://www.gnu.org/software/grub/manual/">manuel de GRUB</uri> (tous
deux en anglais).
</p>

<p>
Poursuivez avec le <uri link="#reboot">redémarrage du système</uri>.
</p>

</body>
</subsection>
<subsection id="grub-install-manual">
<title>Alternative : installation manuelle de GRUB</title>
<body>

<p>
Pour configurer GRUB, tapez <c>grub</c>. Vous recevrez l'invite GRUB
<path>grub&gt;</path> sur la ligne de commande. Vous devez ensuite entrer les
bonnes commandes pour installer le secteur de démarrage sur votre disque dur.
</p>

<pre caption="Lancer le shell GRUB">
# <i>grub --no-floppy</i>
</pre>

<note>
si votre système n'a pas de lecteur de disquettes, ajoutez l'option
<c>--no-floppy</c> à la commande ci-dessus pour empêcher grub de tenter
d'accéder au lecteur inexistant.
</note>

<p>
Dans notre exemple, nous voulons installer GRUB pour qu'il trouve l'information
dont il a besoin sur la partition de démarrage <path><keyval
id="/boot"/></path>. Nous voulons aussi installer GRUB dans le secteur MBR
(N.D.T.&nbsp;: «&nbsp;Master Boot Record&nbsp;», code initialement chargé par
le BIOS au démarrage du PC) pour que GRUB soit lancé dès le démarrage de la
machine. Évidemment, si vous ne suivez pas exactement notre exemple, vous
devez modifier les commandes en conséquence.
</p>

<p>
Le shell de GRUB contient un mécanisme d'aide à la saisie. Par exemple, si vous
tapez «&nbsp;<c>root (</c>&nbsp;» suivi de la touche &lt;TAB&gt;, GRUB affichera
une liste des périphériques possibles (<path>hd0</path> par exemple). Si vous
tapez «&nbsp;<c>root (hd0,</c>&nbsp;» suivi de la touche &lt;TAB&gt;, GRUB
affichera une liste des partitions disponibles (<path>hd0,0</path> par exemple).
</p>

<p>
Grâce à ce système, installer GRUB devient relativement facile.
Allons-y, installons GRUB.
</p>

<pre caption="Installer GRUB sur le MBR">
grub&gt; <i>root (hd0,0)</i>    <comment>(Indique où se trouve la partition /boot.)</comment>
grub&gt; <i>setup (hd0)</i>     <comment>(Écrit GRUB dans le MBR.)</comment>
grub&gt; <i>quit</i>            <comment>(Quitte le shell GRUB.)</comment>
</pre>

<note>
si vous voulez installer GRUB dans une partition au lieu du MBR, vous devez
indiquer la bonne partition à la commande <c>setup</c>. Par exemple, pour
installer GRUB dans <path>/dev/sda3</path>, la commande devient <c>setup
(hd0,2)</c>. Peu d'utilisateurs voudront faire cela.
</note>
<!--
<note>
quand vous recompilerez votre noyau, vous pourrez utiliser <c>make install</c>
au lieu de copier les fichiers manuellement. Cette commande copiera les
fichiers et mettra GRUB à jour pour vous.
</note>
-->
<p>
Pour plus d'informations à propos de GRUB, vous pouvez consulter la <uri
link="http://www.gnu.org/software/grub/grub-faq.html">FAQ de GRUB</uri> ou le
<uri link="http://www.gnu.org/software/grub/manual/">manuel de GRUB</uri> (tous
  deux en anglais), ou lire <c>info grub</c> dans votre terminal.
</p>

<p>
Poursuivez avec le <uri link="#reboot">redémarrage du système</uri>.
</p>

</body>
</subsection>
</section>
<section id="lilo" test="contains('AMD64 x86', func:keyval('arch'))">
<title>Alternative&nbsp;: LILO</title>
<subsection>
<title>Installer LILO</title>
<body>
<!--
<warn test="func:keyval('arch')='AMD64'">
l'utilisation de LILO sur l'architecture AMD64 n'est pas recommandée.
</warn>
-->
<p>
LILO (LInux LOader, ou chargeur Linux) est le chargeur historique de Linux, mais
il lui manque des fonctionnalités présentes dans GRUB, ce qui explique que GRUB
est en train de prendre le dessus. La raison pour laquelle LILO est encore
utilisé est que GRUB ne fonctionne pas sur certains systèmes, alors que LILO
fonctionne sur ces mêmes systèmes.
Évidemment, beaucoup d'utilisateurs connaissent mieux LILO que GRUB et veulent
le conserver. De toute façon, Gentoo supporte les deux, et vous avez
apparemment choisi LILO.
</p>

<p>
Installer LILO est enfantin&nbsp;; utilisez <c>emerge</c>.
</p>

<pre caption="Installer LILO">
# <i>emerge lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Configurer LILO</title>
<body>

<p>
Pour configurer LILO, vous devez créer le fichier <path>/etc/lilo.conf</path>.
Lancez votre éditeur préféré (notre exemple utilise <c>nano</c>) et créez le
fichier.
</p>

<pre caption="Créer /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Nous vous avions demandé de mémoriser le nom de l'image de votre noyau.
Ci-dessous, nous l'utilisons ainsi que les partitions créées plus
tôt dans ce manuel. Il convient de différencier deux cas&nbsp;:
</p>
<!--
<ul>
 <li>
   Les noyaux compilés sans <c>genkernel</c>.
 </li>
 <li>
   Les noyaux compilés avec <c>genkernel</c>.
 </li>
</ul>
-->
<p>
Utilisez le nom du fichier que vous avez utilisé quand vous avez copié l'image
de votre noyau. La même remarque s'applique à votre image initrd si vous avez
utilisé genkernel.
</p>

<note>
si vous avez utilisé le système de fichiers JFS, vous <e>devez</e> ajouter une ligne
<c>append="ro"</c>  après chaque item de démarrage (section) pour que JFS puisse récupérer son
journal avant que le système de fichiers ne soit monté en lecture/écriture.
</note>

<pre caption="Exemple de /etc/lilo.conf">
boot=/dev/sda             <comment># Installe LILO dans le MBR</comment>
prompt                    <comment># Donne à l'utilisateur la possibilité de choisir une autre section</comment>
timeout=50                <comment># Attendre 5 (cing) secondes avant de démarrer la section par défaut</comment>
default=gentoo            <comment># Quand le délai s'est écoulé démmarre la section "gentoo" </comment>

image=/boot/<keyval id="kernel-name"/>
  label=gentoo            <comment># Non donné à cette section</comment>
  read-only               <comment># Démarrer avec une racine en lecture seule. Ne pas changer!</comment>
  root=/dev/sda3          <comment># Emplacement du système de fichiers racine (root)</comment>

image=/boot/<keyval id="kernel-name"/>
  label=gentoo.rescue     <comment># Non donné à cette section</comment>
  read-only               <comment># Démarrer avec une racine en lecture seule. Ne pas changer!</comment>
  root=/dev/sda3          <comment># Emplacement du système de fichiers racine (root)</comment>
  append="init=/bin/bb"   <comment># Lancer le shell de secours de Gentoo</comment>

<comment># Les deux lignes qui suivent sont seulement pour un dual-boot avec un système Windows.</comment>
<comment># En l'occurrence Windows est implanté sur /dev/sda6.</comment>
other=/dev/sda6
  label=windows
</pre>

<note>
si vos partitions sont agencées d'une autre façon ou si vous utilisez un autre
noyau, ajustez les valeurs en conséquence.
</note>

<p>
Si lors de la compilation du noyau, vous avez choisi d'inclure un disque virtuel de démarrage (initramfs) sur lequel démarrer,
 vous devez changer la configuration pour faire référence à ce disque virtuel et pour indiquer à initramfs, où se trouve le disque
 physique root&nbsp;:
</p>

<pre caption="Extrait de LILO pour un noyau compilé avec initramfs activé">
image=/boot/<keyval id="kernel-name"/>
  label=gentoo
  read-only
  <i>append="real_root=/dev/sda3"</i>
  <i>initrd=/boot/<keyval id="genkernel-initrd" /></i>
</pre>


<p>
Si vous devez passer d'autres options à votre noyau, ajoutez une commande
<c>append</c> dans la section ad hoc. Par exemple, pour passer
<c>video</c> pour activer le framebuffer, faites&nbsp;:
</p>

<pre caption="Utiliser append pour passer une option au noyau">
image=/boot/<keyval id="kernel-name"/>
  label=gentoo
  read-only
  root=/dev/sda3
  <i>append="video=vesafb:mtrr,ywrap,1024x768-32@85"</i>
</pre>

<p>
Si vous utilisez un noyau de version 2.6.7 ou supérieure et avez placé un
cavalier sur votre disque dur car le BIOS ne gère pas les disques de grande
capacité, alors vous devez ajouter <c>append="sdx=stroke"</c> en remplaçant sdx par le
repère de disque approprié..
</p>

<p>
Les utilisateurs de <c>genkernel</c> doivent savoir que leur noyau utilise les
mêmes options de démarrage que le CD d'installation. Par exemple, si vous avez
des périphériques SCSI, vous devez passer l'option <c>doscsi</c>.
</p>

<p>
Enregistrez le fichier et quittez votre éditeur. Pour terminer, vous devez
lancer la commande <c>/sbin/lilo</c> pour que LILO prenne votre fichier
<path>/etc/lilo.conf</path> en compte (c'est-à-dire pour l'installer sur le
disque). Notez que vous devrez exécuter <c>/sbin/lilo</c> chaque fois que vous
installez un noyau ou faites des changement dans le menu.
</p>

<pre caption="Terminer l'installation de LILO">
# <i>/sbin/lilo</i>
</pre>

<p>
Veuillez consulter la page Wikipedia de <uri
link="http://en.wikipedia.org/wiki/LILO_(boot_loader)">LILO</uri> pour répondre
à vos éventuelles questions à son propos.
</p>

<p>
Poursuivez avec <uri link="#reboot">Redémarrage du système</uri>.
</p>

</body>
</subsection>
</section>
<section id="elilo" test="func:keyval('arch')='IA64'">
<title>Défaut&nbsp;: Installer elilo</title>
<body>

<p>
Sur plate-forme IA64, le chargeur de démarrage s'appelle elilo. Installez-le
d'abord sur la machine.
</p>

<pre caption="Installer elilo">
# <i>emerge elilo</i>
</pre>

<p>
Vous trouverez le fichier de configuration <path>/etc/elilo.conf</path> et un
exemple de fichier dans le répertoire
<path>/usr/share/doc/elilo-&lt;ver&gt;/</path>. Voici notre exemple de
configuration&nbsp;:
</p>

<pre caption="Exemple de fichier elilo.conf">
boot=/dev/sda1
delay=30
timeout=50
default=Gentoo
append="console=ttyS0,9600"
prompt

image=/vmlinuz
 label=Gentoo
 root=/dev/sda2
 read-only

image=/vmlinuz.old
 label=Gentoo.old
 root=/dev/sda2
 read-only
</pre>

<p>
La ligne <c>boot</c> indique à elilo où se trouve la partition amorçable (dans
notre cas, <path>/dev/sda1</path>). La ligne <c>delay</c> spécifie le nombre de
dixièmes de secondes avant de démarrer automatiquement sur le choix par défaut
lorsqu'on n'est pas en mode interactif. La ligne <c>timeout</c> est
l'équivalente de la ligne <c>delay</c> pour le mode interactif. La ligne
<c>default</c> indique quelle image démarrer par défaut. La ligne <c>append</c>
permet d'ajouter des paramètres au noyau. La ligne <c>prompt</c> active le mode
interactif d'elilo.
</p>

<p>
Les sections qui commencent par <c>image</c> définissent différentes images
amorçables. Chaque image possède une étiquette <c>label</c>, un système de
fichiers racine <c>root</c> et montera ce dernier en lecture seule
<c>read-only</c>.
</p>
<p>
Si lors de la compilation du noyau, vous avez choisi d'inclure un disque virtuel de démarrage (initramfs) sur lequel démarrer,
 vous devez changer la configuration pour faire référence à ce disque virtuel et pour indiquer à initramfs, où se trouve le disque
 physique root&nbsp;:
</p>

<pre caption="Extrait ELILO pour un noyau compilé avec initramfs activé">
image=/vmlinuz
	label=Gentoo
	<i>initrd=/<keyval id="genkernel-initrd"/></i>
	<i>append = "initrd=<keyval id="genkernel-initrd"/> real_root=/dev/sda2 console=ttyS0,9600"</i>
	read-only
</pre>
<p>
Lorsque la configuration est terminée, lancez juste <c>elilo --efiboot</c>.
L'option <c>--efiboot</c> ajoute une entrée pour Gentoo Linux dans le menu du
gestionnaire de démarrage EFI.
</p>

<pre caption="Appliquer la configuration d'elilo">
# <i>elilo --efiboot</i>
</pre>

<p>
Continuez maintenant avec le <uri link="#reboot">redémarrage du système</uri>.
</p>

</body>
</section>

<section id="reboot">
<title>Redémarrage du système</title>
<subsection>
<body>

<p>
Sortez de l'environnement «&nbsp;chroot&nbsp;» et démontez toutes les partitions
montées. Ensuite, tapez la commande magique tant attendue&nbsp;: <c>reboot</c>.
</p>

<pre caption="Sortie du « chroot », démontage des partitions et redémarrage"
test="func:keyval('arch')='IA64'">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount -l /mnt/gentoo/dev{/pts,/shm,}</i>
cdimage ~# <i>umount -l /mnt/gentoo{/boot,/sys,/proc,}</i>
cdimage ~# <i>reboot</i>
</pre>

<pre caption="Sortie du « chroot », démontage des partitions et redémarrage"
test="not(func:keyval('arch')='IA64')">
# <i>exit</i>
cdimage ~# <i>cd</i>
cdimage ~# <i>umount -l /mnt/gentoo/dev{/shm,/pts,}</i>
cdimage ~# <i>umount -l /mnt/gentoo{/boot,/proc,}</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Bien entendu, n'oubliez pas de retirer le CD du lecteur car sinon le système
amorcera le CD au lieu de démarrer sur votre nouveau système Gentoo.
</p>

<p test="func:keyval('arch')='IA64'">
Lors du redémarrage, vous devriez noter une nouvelle entrée dans le menu d'EFI
Boot Manager qui pourra démarrer Gentoo.
</p>

<p>
Une fois le système Gentoo démarré, concluez avec <uri
link="?part=1&amp;chap=11">Finaliser votre installation</uri>.
</p>

</body>
</subsection>
</section>

</sections>
