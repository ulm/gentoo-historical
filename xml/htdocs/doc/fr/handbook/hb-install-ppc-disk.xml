<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-ppc-disk.xml,v 1.1 2004/04/03 01:18:03 neysx Exp $ -->

<sections>
<section>
<title>Introduction aux périphériques de bloc</title>
<subsection>
<title>Les périphériques de bloc</title>
<body>

<p>
Nous allons regarder de manière approfondie la question des disques sous Gentoo
Linux et sous Linux en général, y compris les systèmes de fichiers de Linux,
les partitions et les périphériques de bloc.  Ensuite, une fois que vous serez
familiarisé avec les entrées et sorties des disques et des systèmes de
fichiers, vous serez guidé pour réaliser la mise en place des partitions et des
systèmes de fichiers pour votre installation de Gentoo Linux.
</p>

<p>
Pour commencer, nous allons présenter les <e>périphériques de bloc</e>.  Le
plus célèbre étant certainement celui qui représente le premier disque IDE dans
un système Linux, <path>/dev/hda</path>.  Si votre système utilise des disques
SCSI, alors votre premier disque dur devrait être <path>/dev/sda</path>.
</p>

<p>
Les périphériques de bloc cités ci-dessus représentent une interface abstraite
vers les disques. Les programmes utilisateur peuvent les utiliser pour
interagir avec votre disque sans devoir se tracasser si vos périphériques sont
IDE, SCSI ou autres.  Le programme peut simplement utiliser l'espace sur le
disque comme un groupe de blocs continus de 512 octets accessibles
aléatoirement.
</p>

</body>
</subsection>
<subsection>
<title>Partitions et slices</title>
<body>

<p>
Bien qu'il soit théoriquement possible d'utiliser un disque complet pour héberger
votre système Linux, ceci n'est pratiquement jamais fait.  À la place, les 
périphériques de bloc sont divisés pour être plus petits et plus facilement 
gérables.  Sur la plupart des systèmes, ils sont appelés <e>partitions</e>. 
D'autres architectures utilisent une technique similaire et les appellent
<e>slices</e> («&nbsp;tranches&nbsp;»).
</p>

</body>
</subsection>
</section>
<section>
<title>Concevoir un plan de partitionnement</title>
<subsection>
<title>Plan de partitionnement par défaut</title>
<body>

<p>
Si vous n'êtes pas intéressé par l'établissement d'un plan de partitionnement 
pour votre système, vous pouvez utiliser le  plan de partitionnement que
nous utilisons dans ce manuel&nbsp;: 
</p>

<p>
Pour ppc&nbsp;:
</p>

<table>
<tr>
  <th>Partition NewWorld</th>
  <th>Partition OldWorld</th>
  <th>Système de fichiers</th>
  <th>Taille</th>
  <th>Description</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti>(Pas nécessaire)</ti>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Partition de mémoire virtuelle</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda2</path></ti>
  <ti>ext3</ti>
  <ti>Reste du disque</ti>
  <ti>Partition principale</ti>
</tr>
</table>

<p>
Si vous êtes intéressé de savoir la taille qu'une partition
doit avoir, ou même de combien de partitions vous avez besoin,
poursuivez la lecture de ce chapitre. Sinon, poursuivez avec le chapitre
<uri link="#fdisk">Partitionner votre disque avec mac-fdisk</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Combien et de quelle taille&nbsp;?</title>
<body>

<p>
Le nombre de partitions dépend beaucoup de votre environnement.  Par exemple,
si vous avez beaucoup d'utilisateurs, vous désirerez essentiellement avoir
votre <path>/home</path> séparé afin d'améliorer la sécurité et de simplifier
les sauvegardes.  Si vous installez Gentoo comme serveur mail, votre
<path>/var</path> devrait être séparé étant donné que tous les mails sont
stockés dans <path>/var</path>.  Un bon choix de système de fichiers va vous
permettre d'améliorer les performances.  Les serveurs de jeu auront un
<path>/opt</path> séparé étant donné que la plupart des serveurs de jeux y sont
installés. La raison est la même que pour <path>/home</path>&nbsp;: sécurité et
sauvegarde.
</p>

<p>
Comme vous pouvez le voir, cela dépend beaucoup de ce que vous souhaitez faire.
Séparer les partitions ou volumes procure les avantages suivants&nbsp;: 
</p>

<ul>
<li>
  Vous pouvez choisir le système de fichiers le plus performant pour chaque partition
  ou volume.
</li>
<li>
  Votre système entier ne risque pas d'arriver à court d'espace disque libre si
  un outil défectueux sature l'espace disque d'une partition ou d'un volume.
</li>
<li>
  Si nécessaire, les vérifications des systèmes de fichiers durent moins longtemps, 
  vu que de multiples vérifications peuvent être faites en parallèle (quoique cet
  avantage est plus important avec plusieurs disques qu'avec plusieurs 
  partitions).
</li>
<li>
  La sécurité peut être améliorée en montant certaines partitions ou volumes
  en lecture seule, nosuid (les bits suid sont ignorés), noexec (les bits 
  exécutables sont ignorés), etc.
</li>
</ul>

<p>
Cependant, de multiples partitions ont un gros désavantage&nbsp;: si elles ne
sont pas configurées correctement, vous risquez d'obtenir un système avec
beaucoup d'espace libre sur une partition et plus du tout sur une autre.
</p>

</body>
</subsection>
</section>
<section id="fdisk">
<title>Partitionner votre disque avec mac-fdisk</title>
<body>

<p>
Créez maintenant vos partitions avec <c>mac-fdisk</c>&nbsp;:
</p>

<pre caption="Lancement de mac-fdisk">
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
D'abord, supprimez les partitions que vous aviez créées précédemment pour faire
de la place pour vos partitions Linux.  Utilisez <c>d</c> dans <c>mac-fdisk</c>
pour supprimer cette (ces) partition(s).  Il vous sera demandé le numéro de
partition à supprimer.
</p>

<p>
Ensuite, créez une partition <e>Apple_Bootstrap</e> en utilisant <c>b</c>.
Il vous sera demandé à partir de quel bloc vous souhaitez commencer.  Si vous
avez précédemment choisi <c>3</c> comme numéro de partition, entrez <c>3p</c>.
</p>

<note>
Cette partition <e>n'est pas</e> une partition de démarrage. Elle n'est
absolument pas utilisée par Linux. N'y placez aucun système de fichiers et ne
la montez jamais. Une machine PPC n'utilise pas de partition de démarrage.
</note>

<p>
À présent, créez une partition de swap en appuyant sur <c>c</c>.
<c>mac-fdisk</c> va encore vous demander à partir de quel bloc vous souhaitez
commencer cette partition.  Comme nous avons utilisé <c>3</c> auparavant pour
créer la partition Apple_Bootstrap, vous devez à présent entrer <c>4p</c>.
Quand on vous demande la taille, tapez <c>512M</c> (ou n'importe quelle taille
que vous souhaitez, mais 512 est recommandé).  Quand on vous demande un
nom, entrez <c>swap</c> (obligatoire).
</p>

<p>
Pour créer la partition principale, tapez <c>c</c>, suivi de <c>5p</c> pour
sélectionner à partir de quel bloc la partition doit commencer.  Quand on vous
demande la taille, tapez <c>5p</c> à nouveau.  <c>mac-fdisk</c> va interpréter
ceci comme "utiliser tout l'espace disponible".  Quand on vous demande le nom, 
tapez <c>root</c> (obligatoire).
</p>

<p>
Pour finir, écrivez les partitions sur le disque en utilisant <c>w</c> et 
<c>q</c> pour quitter <c>mac-fdisk</c>.
</p>

<p>
Maintenant que vos partitions sont créées, vous pouvez continuer avec 
<uri link="#filesystems">Création des sytèmes de fichiers</uri>.
</p>

</body>
</section>
<section id="filesystems">
<title>Création des sytèmes de fichiers</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Maintenant que vos partitions sont créées, il est temps d'y installer un
système de fichiers. Si vous ne vous souciez pas de quel système de fichiers
choisir et êtes satisfait de ceux que nous utilisons par défaut dans ce manuel,
continuez avec <uri link="#filesystems-apply">Application d'un système de
fichiers à une partition</uri>.  Sinon, continuez à lire pour en apprendre plus
sur les systèmes de fichiers disponibles.
</p>

</body>
</subsection>
<subsection>
<title>Systèmes de fichiers&nbsp;?</title>
<body>

<p>
De nombreux systèmes de fichiers sont disponibles. Ext2 et ext3 sont considérés
stables sur les machines PPC. Reiserfs et xfs en sont encore au stade
expérimental. Jfs n'est pas supporté.
</p>

<p>
<b>ext2</b> est le système de fichiers original de Linux mais n'a pas de
metadonnées journalisées, ce qui signifie que la routine de vérification du
système de fichiers ext2 au démarrage peut prendre beaucoup de temps. À
présent, vous avez le choix entre plusieurs systèmes de fichiers journalisés
qui peuvent être vérifiés très rapidement et sont généralement préférés à leurs
homologues non journalisés.  Les systèmes de fichiers journalisés évitent de
devoir attendre longtemps quand vous démarrez votre système et que vos systèmes
de fichiers sont dans un état instable.
</p>

<p>
<b>ext3</b> est la version journalisée du système de fichiers ext2, qui fournit
des metadonnées journalisées pour une récupération rapide en plus d'autres
modes journalisés comme la journalisation de données complètes et ordonnées.
ext3 est un très bon système de fichiers fiable. Il offre généralement des
performances décentes dans la plupart des conditions. Il offre de bonnes
performances dans la plupart des cas grâce à un arbre balancé indexé par clé de
hachage. En résumé, ext3 est un excellent système de fichiers.
</p>

<p>
<b>ReiserFS</b> est un système de fichiers basé sur les B*-tree qui a de très
bonnes performances et qui surpasse ext2 et ext3 dans le cas de l'utilisation
de petits fichiers (fichiers de moins de 4 ko), souvent avec un facteur allant
de 10 à 15.  ReiserFS résiste aussi très bien à la montée en charge et a des
metadonnées journalisées.  Depuis le noyau 2.4.18+, ReiserFS est stable et peut
être utilisé aussi bien dans un système de fichiers destiné à une utilisation
générale et pour des cas extrêmes comme la création de grands systèmes de
fichiers et l'utilisation de nombreux petits fichiers ou de grands fichiers et
répertoires qui contiennent des dizaines de milliers de fichiers.
</p>

<p>
<b>XFS</b> est un système de fichiers avec des métadonnées journalisées qui est
entièrement supporté sous Gentoo Linux avec le noyau xfs-sources.  Il est
fourni avec un riche ensemble de fonctionnalités et est optimisé pour bien
résister à la montée en charge. Nous ne recommandons ce système de fichiers que
pour des systèmes équipés d'unités de stockage SCSI haut de gamme ou connectés
à des serveurs de stockage Fibre Channel, et munis d'un onduleur. Puisque XFS
utilise énormément le cache pour des données transitoires en RAM, les programmes
mal réalisés (ceux qui ne prennent pas les précautions suffisantes quand ils
écrivent les fichiers sur disque, et il y en a quelques uns) peuvent perdre
beaucoup de données si le système s'interrompt de manière inattendue.
</p>

<p>
<b>JFS</b> est un système de fichiers journalisé à hautes performances d'IBM.
Il a été récemment déclaré prêt pour un usage en production, mais il n'y a pas
encore suffisamment d'information pour commenter sa stabilité générale de
manière positive ou négative.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Application d'un système de fichiers à une partition</title>
<body>

<p>
Pour créer un système de fichiers sur une partition ou un volume, chaque
système de fichiers fournit ses propres outils&nbsp;:
</p>

<table>
<tr>
  <th>Système de fichiers</th>
  <th>Commande de création</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mke2fs</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mke2fs -j</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Par exemple, pour formater la partition principale (<path>/dev/hda3</path>
dans notre exemple) en ext3, nous utiliserons&nbsp;:
</p>

<pre caption="Application d'un système de fichiers sur une partition">
# <i>mke2fs -j /dev/hda3</i>
</pre>

<p>
À présent, créons les systèmes de fichiers sur nos partitions fraîchement
créées.
</p>

</body>
</subsection>
<subsection>
<title>Activation de la partition de mémoire virtuelle</title>
<body>

<p>
<c>mkswap</c> est la commande utilisée pour initialiser la partition de mémoire
virtuelle&nbsp;:
</p>

<pre caption="Création d'une signature de swap">
# <i>mkswap /dev/hda2</i>
</pre>

<p>
Pour activer la partition de swap, utilisez <c>swapon</c>&nbsp;:
</p>

<pre caption="Activation de la partition de swap">
# <i>swapon /dev/hda2</i>
</pre>

<p>
Créez et activez la partition de swap maintenant.
</p>

</body>
</subsection>
</section>
<section>
<title>Monter les partitions</title>
<body>

<p>
Maintenant que nos partitions sont initialisées et contiennent un système de
fichiers, il est temps de les monter avec la commande <c>mount</c>.  N'oubliez
pas de créer les points de montage nécessaires pour toutes les partitions que
vous avez créées. Par exemple, pour monter les partitions de démarrage et
racine&nbsp;:
</p>

<pre caption="Monter les partitions">
# <i>mount /dev/hda3 /mnt/gentoo</i>
</pre>

<note>
Si vous installez <path>/tmp</path> sur une partition séparée, n'oubliez pas de
définir les permissions nécessaires après avoir monté la partition. Utilisez la
commande <c>chmod 1777 /mnt/gentoo/tmp</c>. La même remarque s'applique à
<path>/var/tmp</path>.
</note>

<p>
Nous devons également monter le système de fichiers proc (une interface virtuelle
avec le noyau) sur <path>/proc</path>.  Nous allons d'abord créer le point de
montage <path>/mnt/gentoo/proc</path> et ensuite le monter&nbsp;:
</p>

<pre caption="Création du point de montage /mnt/gentoo/proc">
# <i>mkdir /mnt/gentoo/proc</i>
# <i>mount -t proc none /mnt/gentoo/proc</i>
</pre>

<p>
À présent, continuez avec <uri link="?part=1&amp;chap=5">Installer les fichiers
d'installation de Gentoo</uri>.
</p>

</body>
</section>
</sections>
