<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-x86+amd64-kernel.xml,v 1.9 2008/04/02 13:36:46 cam Exp $ -->

<sections>

<abstract>
Le noyau Linux est au cœur de toutes les distributions. Ce chapitre explique
comment le configurer.
</abstract>

<version>6.0</version>
<date>2008-04-01</date>

<section>
<title>Fuseau horaire</title>
<body>

<p>
Vous devez maintenant choisir votre fuseau horaire afin que votre système sache
où il se trouve. Cherchez votre fuseau horaire dans
<path>/usr/share/zoneinfo</path>, puis copiez-le sur
<path>/etc/localtime</path>. Évitez les zones du type
<path>/usr/share/zoneinfo/Etc/GMT*</path>, car leur nom porte à confusion. En
effet, <path>GMT-2</path> signifie en fait GMT+2.
</p>

<pre caption="Définir l'information relative au fuseau horaire">
# <i>ls /usr/share/zoneinfo</i>
<comment>(En supposant que vous utilisiez l'heure de Paris.)</comment>
# <i>cp /usr/share/zoneinfo/Europe/Paris /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installer les sources</title>
<subsection>
<title>Choisir un noyau</title>
<body>

<p>
Le cœur autour duquel sont bâties toutes les distributions est le noyau (en
anglais «&nbsp;kernel&nbsp;») Linux. Ce noyau est l'interface entre les
programmes utilisateur et le matériel. Gentoo offre un choix de plusieurs noyaux
à ses utilisateurs. Une liste complète, accompagnée de descriptions, est
disponible dans le <uri link="/doc/fr/gentoo-kernel.xml">Guide du noyau Gentoo
Linux</uri>.
</p>

<p>
Pour les systèmes <keyval id="arch"/>, nous offrons, entre autres, les
<c>gentoo-sources</c> (un noyau modifié par l'ajout de fonctionnalités
supplémentaires.
</p>

<p>
Choisissez les sources à utiliser pour votre noyau et installez-les avec
<c>emerge</c>.
</p>

<pre caption="Installer les sources d'un noyau">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Si vous examinez le contenu de <path>/usr/src</path>, vous devriez voir un lien
symbolique nommé <path>linux</path> qui pointe vers les sources de votre noyau.
L'exemple suivant pointe vers <c>gentoo-sources-<keyval
id="kernel-version"/></c>, mais vous aurez sans doute installé une autre
version.
</p>

<pre caption="Examiner le lien symbolique vers le noyau">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx   1 root   root     12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
Il est maintenant temps de configurer et de compiler votre noyau. Vous pouvez
utiliser <c>genkernel</c>. Cette commande construira un noyau générique tel que
celui utilisé par le CD d'installation. Toutefois, nous expliquerons d'abord la
configuration «&nbsp;manuelle&nbsp;», puisque c'est la meilleure façon
d'optimiser votre environnement.
</p>

<p>
Si vous souhaitez configurer manuellement votre noyau, poursuivez votre lecture
avec <uri link="#manual">Par défaut&nbsp;: configuration manuelle</uri>. Si vous
souhaitez utiliser <c>genkernel</c>, vous devriez plutôt lire <uri
link="#genkernel">Alternative&nbsp;: utiliser genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Par défaut&nbsp;: configuration manuelle</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Configurer un noyau est parfois considéré comme la tâche la plus ardue que les
utilisateurs de Linux doivent accomplir. Rien n'est moins vrai... Après
avoir configuré quelques noyaux, vous ne vous rappellerez même plus que c'était
difficile ;)
</p>

<p>
Toutefois, une chose est vraie&nbsp;: vous devez connaitre votre système pour
configurer manuellement un noyau. La majeure partie des informations peut être
obtenue en utilisant la commande <c>lspci</c> qui est dans le paquet pciutils
(<c>emerge pciutils</c>). Vous pourrez désormais utiliser <c>lspci</c> depuis
votre environnement en chroot. Vous pouvez ignorer les avertissements
<e>pcilib</e> (comme par exemple&nbsp;: pcilib: cannot open
/sys/bus/pci/devices) que vous obtiendrez avec <c>lspci</c>. Vous pouvez
également exécuter <c>lspci</c> depuis un environnement <e>non chrooté</e>. Le
résultat est le même. Vous pouvez également exécuter <c>lsmod</c> pour voir les
modules du noyau utilisés par le CD-ROM d'installation (ce qui peut vous donner
des indices sur les fonctionnalités nécessaires).
</p>

<p>
Maintenant, allez dans le dossier des sources du noyau et exécutez <c>make
menuconfig</c>. Cela ouvrira un menu de configuration basé sur ncurses.
</p>

<pre caption="Lancer menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Plusieurs sections d'options de configuration s'afficheront. Nous allons
d'abord dresser la liste de certaines options que vous devez activer (sinon,
Gentoo ne fonctionnera pas ou, du moins, pas sans quelques réglages
additionnels).
</p>

</body>
</subsection>
<subsection>
<title>Activer les options requises</title>
<body>

<p>
Veuillez vérifier que tous les pilotes nécessaires au démarrage de votre système
tels que le pilote de votre carte SCSI sont compilés en dur et non comme
modules.
</p>

</body>
<body test="func:keyval('arch')='AMD64'">

<p>
Vous devez maintenant choisir exactement le bon type de processeur. Le
mainteneur de la partie x86_64 du noyau recommande fortement aux utilisateurs
d'activer les fonctionnalités MCE afin qu'ils soient tenus au courant en cas de
problème matériel. Sur x86_64, ces erreurs ne sont pas écrites dans le
<c>dmesg</c> comme sur les autres architectures, mais dans
<path>/dev/mcelog</path>. Cela nécessite le paquet <c>app-admin/mcelog</c>.
Assurez-vous d'avoir sélectionné «&nbsp;IA32 Emulation&nbsp;» si vous voulez
pouvoir lancer des programmes 32&nbsp;bits. Gentoo installera un système
multilib (calculs mixtes en 32&nbsp;bits et 64&nbsp;bits) par défaut, donc vous
voudrez probablement cette option.
</p>

<pre caption="Choisir le bon type et les bonnes fonctionnalités de processeur">
Processor type and features  --->
   [ ] Intel MCE Features
   [ ] AMD MCE Features
  Processor family (AMD-Opteron/Athlon64)  --->
    ( ) AMD-Opteron/Athlon64
    ( ) Intel EM64T
    ( ) Generic-x86-64
</pre>

</body>
<body test="func:keyval('arch')='x86'">

<p>
Vérifiez que vous compilez votre noyau pour le bon type de processeur&nbsp;:
</p>

<pre caption="Sélectionner le type de processeur">
Processor type and features ---&gt;
  <comment>(Sélectionnez le type de processeur.)</comment>
  (<i>Athlon/Duron/K7</i>) Processor family
</pre>

</body>
<body>

<p>
Allez à la section <c>File Systems</c> et activez le support nécessaire pour les
systèmes de fichiers que vous utilisez. Ne les compilez <e>pas</e> sous forme de
modules, sinon votre système Gentoo ne pourra pas monter vos partitions. Activez
aussi <c>Virtual memory</c> et <c>/proc file system</c>.
</p>

</body>
<body test="func:keyval('arch')='x86'">

<pre caption="Activer le support pour les systèmes de fichiers">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)
 <comment>(Sélectionnez le(s) système(s) de fichiers dont vous avez besoin.)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

</body>
<body test="func:keyval('arch')='AMD64'">

<pre caption="Activer le support pour les systèmes de fichiers">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

<comment>(Sélectionnez le(s) système(s) de fichiers dont vous avez besoin.)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

</body>
<body>

<p>
N'oubliez pas d'activer le support DMA pour vos disques&nbsp;:
</p>

<pre caption="Activer le support DMA">
Device Drivers ---&gt;
  ATA/ATAPI/MFM/RLL support ---&gt;
    [*] Generic PCI bus-master DMA support
</pre>

<p>
Si vous utilisez PPPoE ou un modem classique pour vous connecter à Internet,
vous aurez besoin des options du noyau suivantes&nbsp;:
</p>

<pre caption="Sélection des pilotes PPPoE" test="func:keyval('arch')='AMD64'">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<pre caption="Sélection des pilotes PPPoE" test="func:keyval('arch')='x86'">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Les deux options de compression ne vous feront pas de mal, mais ne sont pas
absolument nécessaires. L'option <c>PPP over Ethernet</c> n'est pas obligatoire
non plus, considérant qu'elle pourrait n'être utilisée que par <c>ppp</c>
lorsque ce dernier est configuré pour utiliser PPPoE en mode noyau.
</p>

<p>
Si vous en avez besoin, n'oubliez pas d'ajouter le support pour votre carte
Ethernet.
</p>

<p test="func:keyval('arch')='x86'">
Si vous avez un microprocesseur Intel qui supporte la technologie
HyperThreading™ ou si vous avez un système à plusieurs CPU, vous devriez activer
«&nbsp;Symmetric multi-processing support&nbsp;». Notez que chaque cœur compte
pour un processeur.
</p>

<p test="func:keyval('arch')='AMD64'">
Si vous avez un système Opteron multiprocesseurs ou multicœur (AMD64 X2 par
ex.), vous devriez activer «&nbsp;Symmetric multi-processing support&nbsp;».
Notez que chaque cœur compte pour un processeur.
</p>

<pre caption="Activer le support pour SMP">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Si vous utilisez des périphériques d'entrée USB (un clavier ou une souris par
exemple), n'oubliez pas les options suivantes&nbsp;:
</p>

<pre caption="Activer le support USB pour des périphériques d'entrée">
Device Drivers --->
  USB Support ---&gt;
    &lt;*&gt;   USB Human Interface Device (full HID) support
</pre>

</body>
<body test="func:keyval('arch')='x86'">

<p>
Si vous voulez utiliser le PCMCIA sur votre portable, n'oubliez pas d'activer le
support pour le type de carte PCMCIA de votre système.
</p>

<pre caption="Activer le support PCMCIA">
Bus options (PCI, PCMCIA, EISA, MCA, ISA)  ---&gt;
  PCCARD (PCMCIA/CardBus) support  ---&gt;
    &lt;*&gt; PCCard (PCMCIA/CardBus) support
<comment>(Cochez 16-bit pour des anciennes cartes PCMCIA. Requis dans la plupart des cas.)</comment>
    &lt;*&gt;   16-bit PCMCIA support
    [*]   32-bit CardBus support
<comment>(Cochez le type de bridge approprié)</comment>
    --- PC-card bridges
    &lt;*&gt; CardBus yenta-compatible bridge support (NEW)
    &lt;*&gt; Cirrus PD6729 compatible bridge support (NEW)
    &lt;*&gt; i82092 compatible bridge support (NEW)
    &lt;*&gt; i82365 compatible bridge support (NEW)
    &lt;*&gt; Databook TCIC host bridge support (NEW)
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec la
section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compiler et installer</title>
<body>

<p>
Maintenant que votre noyau est configuré, il est temps de le compiler et de
l'installer. Quittez la configuration et lancez la compilation&nbsp;:
</p>

<pre caption="Compiler le noyau">
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Lorsque la compilation est terminée, copiez l'image du noyau dans
<path>/boot</path>. Nommez votre noyau comme bon vous semble, mais retenez le
nom que vous lui donnez, car vous devrez l'utiliser quand vous configurerez
votre chargeur de démarrage. N'oubliez pas de remplacer <c><keyval
id="kernel-name"/></c> par le nom et la version de votre noyau.
</p>

<pre caption="Installer le noyau">
# <i>cp arch/<keyval id="arch-sub"/>/boot/bzImage /boot/<keyval id="kernel-name"/></i>
</pre>

<p>
Maintenant, poursuivez votre lecture avec <uri link="#kernel_modules">Les
modules du noyau</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternative&nbsp;: utiliser genkernel</title>
<body>

<p>
Si vous lisez cette section, vous avez choisi d'utiliser le script
<c>genkernel</c> pour configurer votre noyau pour vous.
</p>

<p>
Maintenant que l'arbre des sources de votre noyau est installé, il est temps de
compiler ce noyau à l'aide du script <c>genkernel</c> qui construira
automatiquement un noyau dont la configuration sera presque identique à celle du
noyau du CD d'installation. Cela signifie que si vous utilisez <c>genkernel</c>
pour construire votre noyau, votre système détectera généralement tout votre
matériel au moment de l'amorçage, à la manière du CD d'installation. Puisque
genkernel ne requiert aucune configuration manuelle, il s'agit d'une solution
idéale pour l'utilisateur rebuté par l'idée de compiler son propre noyau.
</p>

<p>
Maintenant, voyons comment utiliser genkernel. D'abord, installez genkernel
comme suit&nbsp;:
</p>

<pre caption="Installer genkernel">
# <i>emerge genkernel</i>
</pre>

</body>
<body test="func:keyval('arch')='x86'">

<p>
Puis, copiez les fichiers de configuration utilisés par le CD d'installation
vers le répertoire qui sera utilisé par genkernel.
</p>

<pre caption="Copier la configuration du noyau du CD">
# <i>zcat /proc/config.gz &gt; /usr/share/genkernel/x86/kernel-config-2.6</i>
</pre>

</body>
<body>

<p>
Ensuite, compilez les sources du noyau en exécutant <c>genkernel all</c>.
Puisque <c>genkernel</c> compile un noyau qui supporte presque n'importe quel
matériel, ne soyez pas surpris que la compilation demande un temps considérable.
</p>

<p>
Veuillez noter que si votre partition de démarrage utilise un autre système de
fichiers qu'ext2 ou ext3, vous devrez peut-être compiler le support pour ce
système de fichiers dans le noyau (donc pas comme module) avec la commande
<c>genkernel --menuconfig all</c>. Si vous utilisez EMVS2 ou LVM2, vous voudrez
sans doute ajouter les options <c>--evms2</c> ou <c>--lvm2</c>.
</p>

<pre caption="Exécuter genkernel">
# <i>genkernel all</i>
</pre>

<p>
Lorsque <c>genkernel</c> aura fini son travail, un noyau, un ensemble complet de
modules et un «&nbsp;initial root disk&nbsp;» (initrd) auront été créés. Le
noyau et l'initrd seront utilisés plus tard lors de la configuration du chargeur
de démarrage. Notez bien les noms du noyau et du initrd puisque vous devrez les
spécifier lors de l'écriture du fichier de configuration du chargeur de
démarrage. L'initrd sera démarré immédiatement après l'amorçage afin de réaliser
l'autodétection du matériel (tout comme pour le CD d'installation) avant que
votre «&nbsp;véritable&nbsp;» système ne démarre.
</p>

<pre caption="Vérifier les noms de l'image du noyau et du fichier initrd">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

</body>
</section>

<section id="kernel_modules">
<title>Les modules du noyau</title>
<subsection>

<include href="hb-install-kernelmodules.xml"/>

</subsection>
</section>
</sections>
