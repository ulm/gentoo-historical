<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/2005.0/hb-install-sparc-kernel.xml,v 1.4 2005/04/18 09:32:01 neysx Exp $ -->

<sections>

<version>4.1</version>
<date>2005-04-16</date>

<section>
<title>Fuseau horaire</title>
<body>

<p>
Vous devez maintenant choisir votre fuseau horaire afin que votre système
sache où il se trouve. Cherchez votre fuseau horaire dans
<path>/usr/share/zoneinfo</path>, puis créez un lien symbolique nommé
<path>/etc/localtime</path> en utilisant <c>ln</c>&nbsp;:
</p>

<pre caption="Définir l'information relative au fuseau horaire">
# <i>ls /usr/share/zoneinfo</i>
<comment>(En supposant que vous utilisez l'heure de Paris.)</comment>
# <i>ln -sf /usr/share/zoneinfo/Europe/Paris /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installer les sources</title>
<subsection>
<title>Choisir un noyau</title>
<body>

<p>
Le cœur autour duquel sont bâties toutes les distributions est le noyau (en
anglais «&nbsp;kernel&nbsp;») Linux. Ce noyau est l'interface entre les
programmes utilisateur et le matériel. Gentoo offre un choix de plusieurs
noyaux à ses utilisateurs.  Une liste complète, accompagnée de descriptions,
est disponible dans le <uri link="/doc/fr/gentoo-kernel.xml"> Guide du noyau
Gentoo Linux</uri>.
</p>

<p>
Pour les systèmes SPARC, nous offrons les <c>vanilla-sources</c> (le noyau par
défaut produit par les développeurs du noyau Linux) et les <c>sparc-sources</c>
(un noyau optimisé pour les utilisateurs de systèmes SPARC).
</p>

<p>
Choisissez les sources à utiliser pour votre noyau et installez-les avec
<c>emerge</c>.
</p>

<p>
L'exemple suivant détaille l'installation des <c>sparc-sources</c>
Bien sûr, substituez ces sources par celles de votre choix.
</p>

<pre caption="Installer les sources du noyau">
# <i>emerge sparc-sources</i>
</pre>

<p>
Si vous examinez le contenu de <path>/usr/src</path>, vous devriez voir un lien
symbolique nommé <path>linux</path> pointant vers les sources de votre
noyau&nbsp;:
</p>

<pre caption="Examiner le lien symbolique vers le noyau">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx   1 root   root    12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.29
</pre>

<p>
Si ce n'est pas le cas (le lien symbolique pointe vers un noyau différent),
changez le lien avant de continuer&nbsp;:
</p>

<pre caption="Changer le lien symbolique vers les sources du noyau">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.29 linux</i>
</pre>

<p>
Il est maintenant temps de configurer et de compiler votre noyau.
</p>

</body>
</subsection>
</section>
<section>
<title>Configuration manuelle</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Configurer un noyau est parfois considéré comme la tâche la plus ardue que les
utilisateurs de Linux doivent accomplir. Rien n'est moins vrai... Après
avoir configuré quelques noyaux, vous ne vous rappellerez même plus que c'était
difficile ;)
</p>

<p>
Toutefois, une chose est vraie&nbsp;: vous devez connaître votre système pour
configurer manuellement un noyau. La majeure partie de cette information peut
être obtenue en examinant le contenu de <path>/proc/pci</path> (ou en utilisant
<c>lspci</c>, s'il est disponible). Vous pouvez aussi exécuter <c>lsmod</c>
pour voir quels modules du noyau sont utilisés par le CD d'installation (ce qui peut vous
donner des indices sur les fonctionnalités nécessaires).
</p>

<p>
Maintenant, allez dans le dossier des sources du noyau et exécutez <c>make
menuconfig</c>. Cela ouvrira un menu de configuration basé sur ncurses.
</p>

<pre caption="Lancer menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Plusieurs sections d'options de configuration s'afficheront. Nous allons
d'abord dresser la liste de certaines options que vous devez activer (sinon,
Gentoo ne fonctionnera pas, ou du moins pas sans quelques réglages
additionnels).
</p>

</body>
</subsection>
<subsection>
<title>Activer les options requises</title>
<body>

<p>
Avant toute chose, activez l'utilisation du code et des pilotes en
développement ou expérimentaux. C'est absolument nécessaire&nbsp;; si vous ne le
faites pas, des options très importantes ne seront pas affichées.
</p>

<pre caption="Sélectionner le code et les pilotes expérimentaux">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Allez à la section <c>File Systems</c> et activez le support nécessaire pour
les systèmes de fichiers que vous utilisez. Ne les compilez <e>pas</e> sous
forme de modules, sinon votre système Gentoo ne pourra pas monter vos
partitions. Activez aussi <c>Virtual memory</c>, <c>/proc
file system</c> et <c>/dev file system</c> + <c>Automatically mount at boot</c>.
</p>

<pre caption="Activer le support pour les systèmes de fichiers">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

 <comment>(Sélectionnez le(s) système(s) de fichiers dont vous avez besoin.)</comment>
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; Second extended fs support
</pre>

<p>
Si vous utilisez PPPoE ou un modem classique pour vous connecter à Internet,
vous aurez besoin des options du noyau suivantes&nbsp;:
</p>

<pre caption="Sélection des pilotes PPPoE">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Les deux options de compression ne vous feront pas de mal, mais ne sont pas
absolument nécessaires. L'option <c>PPP over Ethernet</c> n'est pas obligatoire
non plus, considérant qu'elle pourrait n'être utilisée que par <c>rp-pppoe</c>
lorsque ce dernier est configuré pour utiliser PPPoE en mode noyau.
</p>

<p>
Ensuite, activez le support du bus approprié&nbsp;:
</p>

<pre caption="Activer SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers
      [*] Creator/Creator3D support     <comment>(Seulement pour le «&nbsp;UPA slot adapter&nbsp;» souvent présent dans les machines Ultra.)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Seulement pour le «&nbsp;SBUS slot adapter&nbsp;» souvent présent dans les machines SPARCStations.)</comment>
</pre>

<p>
Bien sûr, vous désirerez activer le support pour OBP&nbsp;:
</p>

<pre caption="Activer le support OBP">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
Vous aurez aussi besoin de pilotes SCSI spécifiques&nbsp;:
</p>

<pre caption="Activer les pilotes SCSI spécifiques">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Seulement pour l'adaptateur SCSI intégré SPARC ESP.)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Seulement pour les contrôleurs SCSI SBUS de PTI et QLogic.)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Seulement pour l'adaptateur SCSI intégré Ultra 60.)</comment>
</pre>

<p>
Pour le support de votre carte réseau, choisissez une des options
suivantes&nbsp;:
</p>

<pre caption="Activer le support réseau">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                  <comment>(Seulement pour les SPARCStation, les vieux systèmes Ultra et comme option Sbus.)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support <comment>(Seulement pour les Ultra&nbsp;; supporte aussi le «&nbsp;qfe quad-ethernet&nbsp;» sur PCI et Sbus.)</comment>
    &lt;*&gt; DECchip Tulip (dc21x4x) PCI support <comment>(Pour certains Netra, p.ex. N1)</comment>
  Ethernet (1000Mbit) ---&gt;
    &lt;*&gt; Broadcom Tigon3 support <comment>(Pour des Netra récents, les Sun Fire)</comment>
</pre>

<p>
Si votre machine est équipée de quatre ports Ethernet ((10/100 ou 10/100/1000),
l'ordre des ports est différents par rapport à Solaris. Vous pouvez utiliser
<c>sys-apps/ethtool</c> ou <c>mii-tool</c> pour connaître le statut des ports.
</p>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>. Après la
compilation, vérifiez la taille du noyau&nbsp;:
</p>

<pre caption="Vérifier la taille du noyau">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
Si la taille (sans compression) est supérieure à 2,5&nbsp;Mo (pour Sparc32) ou à
3,5&nbsp;Mo (pour Sparc64), reconfigurez votre noyau jusqu'à ce que sa taille ne
dépasse plus cette limite. Une des façons de faire est de compiler la plupart
des pilotes du noyau comme des modules. Si vous ignorez cette étape, vous
obtiendrez peut-être un noyau incapable de démarrer.
</p>

<p>
Toutefois, si votre noyau est un tout petit peu trop gros, vous pouvez essayer
la commande <c>strip</c> pour le raccourcir&nbsp;:
</p>

<pre caption="Raccourcir le noyau">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Compiler et installer</title>
<body>

<p>
Maintenant que votre noyau est configuré, il est temps de le compiler et de
l'installer. Quittez la configuration et exécutez <c>make dep &amp;&amp; make
vmlinux modules modules_install</c>&nbsp;:
</p>

<pre caption="Compiler le noyau">
<comment>(sparc32)</comment>
# <i>make dep &amp;&amp; make clean vmlinux modules modules_install</i>

<comment>(sparc64)</comment>
# <i>make dep &amp;&amp; make clean vmlinux image modules modules_install</i>
</pre>

<p>
Lorsque la compilation est terminée, copiez l'image du noyau dans
<path>/boot</path>.
</p>

<pre caption="Installer le noyau">
<comment>(sparc32)</comment>
# <i>cp vmlinux /boot/kernel-2.4.29</i>

<comment>(sparc64)</comment>
# <i>cp arch/sparc64/boot/image /boot/kernel-2.4.29</i>

<comment>(N'oubliez pas de copier le fichier System.map.)</comment>
# <i>cp System.map /boot</i>
</pre>

<p>
Il est également sage de copier la configuration du noyau dans
<path>/boot</path>. Juste au cas où... :)
</p>

<pre caption="Faire une copie de sécurité de la configuration du noyau">
# <i>cp .config /boot/config-2.4.29</i>
</pre>

<p>
Maintenant, poursuivez votre lecture avec <uri link="#kernel_modules">Installer
des modules du noyau individuels</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Installer des modules du noyau individuels</title>
<subsection>
<title>Configurer les modules</title>
<body>

<p>
Vous devriez indiquer la liste des modules que vous souhaitez charger
automatiquement dans <path>/etc/modules.autoload.d/kernel-2.4</path>.  Vous
pouvez également ajouter des options aux modules si vous le souhaitez.
</p>

<p>
Pour dresser la liste des modules disponibles, exécutez la commande
<c>find</c> tel qu'indiqué ci-dessous. N'oubliez pas de substituer &lt;kernel
version&gt; par la version du noyau que vous venez juste de compiler&nbsp;:
</p>

<pre caption="Consulter la liste des modules disponibles">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Par exemple, pour charger automatiquement le module <c>3c59x.o</c>, spécifiez-le
dans le fichier <path>kernel-2.4</path>.
</p>

<pre caption="Modifier le fichier /etc/modules.autoload.d/kernel-2.4">
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="Exemple de fichier /etc/modules.autoload.d/kernel-2.4">
3c59x
</pre>

<p>
Poursuivez l'installation avec <uri link="?part=1&amp;chap=8">Configurer
votre système</uri>.
</p>

</body>
</subsection>
</section>
</sections>
