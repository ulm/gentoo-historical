<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/2005.0/hb-install-ppc-disk.xml,v 1.4 2005/08/02 23:35:09 neysx Exp $ -->

<sections>

<version>4.2</version>
<date>2005-08-02</date>

<section>
<title>Introduction aux périphériques de bloc</title>
<subsection>
<title>Les périphériques de bloc</title>
<body>

<p>
Nous allons regarder de manière approfondie la question des disques sous Gentoo
Linux et sous Linux en général, y compris les systèmes de fichiers de Linux,
les partitions et les périphériques de bloc.  Ensuite, une fois que vous serez
familiarisé avec les entrées et sorties des disques et des systèmes de
fichiers, vous serez guidé pour réaliser la mise en place des partitions et des
systèmes de fichiers pour votre installation de Gentoo Linux.
</p>

<p>
Pour commencer, nous allons présenter les <e>périphériques de bloc</e>.  Le
plus célèbre étant certainement celui qui représente le premier disque IDE dans
un système Linux, <path>/dev/hda</path>.  Si votre système utilise des disques
SCSI ou SATA, alors votre premier disque dur devrait être <path>/dev/sda</path>.
</p>

<p>
Les périphériques de bloc cités ci-dessus représentent une interface abstraite
vers les disques. Les programmes utilisateur peuvent les utiliser pour
interagir avec votre disque sans devoir se tracasser si vos périphériques sont
IDE, SCSI ou autres.  Le programme peut simplement utiliser l'espace sur le
disque comme un groupe de blocs continus de 512 octets accessibles
aléatoirement.
</p>

</body>
</subsection>
<subsection>
<title>Partitions et slices</title>
<body>

<p>
Bien qu'il soit théoriquement possible d'utiliser un disque complet pour héberger
votre système Linux, ceci n'est pratiquement jamais fait.  À la place, les
périphériques de bloc sont divisés pour être plus petits et plus facilement
gérables.  Sur la plupart des systèmes, ils sont appelés <e>partitions</e>.
D'autres architectures utilisent une technique similaire et les appellent
<e>slices</e> (tranches).
</p>

</body>
</subsection>
</section>
<section>
<title>Concevoir un plan de partitionnement</title>
<subsection>
<title>Plan de partitionnement par défaut</title>
<body>

<p>
Si vous n'êtes pas intéressé par l'établissement d'un plan de partitionnement
pour votre système, vous pouvez utiliser le  plan de partitionnement que
nous utilisons dans ce manuel.
</p>

<p>
Pour ppc&nbsp;:
</p>

<table>
<tr>
  <th>Partition NewWorld</th>
  <th>Partition OldWorld</th>
  <th>Partition Pegasos</th>
  <th>Partition RS/6000</th>
  <th>Système de fichiers</th>
  <th>Taille</th>
  <th>Description</th>
</tr>
<tr>
  <ti><path>/dev/hda1</path></ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(Pas utilisable)</ti>
  <ti>(Pas utilisable)</ti>
  <ti>(Table des partitions)</ti>
  <ti>32k</ti>
  <ti>Apple_partition_map</ti>
</tr>
<tr>
  <ti><path>/dev/hda2</path></ti>
  <ti>(Pas nécessaire)</ti>
  <ti>(Pas utilisable)</ti>
  <ti>(Pas utilisable)</ti>
  <ti>(bootstrap)</ti>
  <ti>800k</ti>
  <ti>Apple_Bootstrap</ti>
</tr>
<tr>
  <ti>(Pas utilisable)</ti>
  <ti>(Pas utilisable)</ti>
  <ti>(Pas utilisable)</ti>
  <ti><path>/dev/sda1</path></ti>
  <ti>(PReP Boot)</ti>
  <ti>800k</ti>
  <ti>Type 0x41</ti>
</tr>
<tr>
  <ti>(Pas nécessaire)</ti>
  <ti>(Pas nécessaire)</ti>
  <ti><path>/dev/hda1</path></ti>
  <ti>(Pas nécessaire)</ti>
  <ti>ext2</ti>
  <ti>32MB</ti>
  <ti>Partition de démarrage</ti>
</tr>
<tr>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda2</path></ti>
  <ti><path>/dev/hda2</path></ti>
  <ti><path>/dev/sda2</path></ti>
  <ti>(swap)</ti>
  <ti>512M</ti>
  <ti>Partition de mémoire virtuelle, type 0x82</ti>
</tr>
<tr>
  <ti><path>/dev/hda4</path></ti>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/hda3</path></ti>
  <ti><path>/dev/sda3</path></ti>
  <ti>ext3, xfs</ti>
  <ti>Reste du disque</ti>
  <ti>Partition principale, type 0x83</ti>
</tr>
</table>

<note>
Vous pourriez voir des partitions telles que <path>Apple_Driver43,
Apple_Driver_ATA, Apple_FWDriver, Apple_Driver_IOKit, Apple_Patches</path>. Si
vous n'avez pas l'intention d'utiliser MacOS 9, vous pouvez les supprimer, car
ni MacOS X ni Linux ne les utilisent. Vous aurez sans doute besoin d'utiliser
<c>parted</c>, car <c>mac-fdisk</c> ne sait pas encore supprimer de telles
partitions.
</note>

<warn>
<c>parted</c> est capable de redimensionner des partitions. le CD
d'installation contient des correctifs qui permettent de redimensionner les
systèmes de fichiers HFS+. Malheureusement, il n'est pas possible de
redimensionner les systèmes de fichiers HFS+ journalisés même si la
journalisation a été désactivée sous Mac OS X. Ce que vous ferez en
redimensionnant ces partitions avec parted sera fait à vos propres
risques&nbsp;! Assurez-vous d'avoir une sauvegarde de vos données quelque
part&nbsp;!
</warn>

<p>
Si vous êtes intéressé de savoir la taille qu'une partition doit avoir, ou même
de combien de partitions vous avez besoin, poursuivez la lecture de ce
chapitre. Sinon, poursuivez avec le chapitre <uri link="#fdisk">Défaut&nbsp;:
partitionner votre disque avec mac-fdisk (Apple/IBM)</uri> ou <uri
link="#parted">Alternative&nbsp;: partitionner votre disque avec parted
(particulièrement Pegasos)</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Combien et de quelle taille&nbsp;?</title>
<body>

<p>
Le nombre de partitions dépend beaucoup de votre environnement.  Par exemple,
si vous avez beaucoup d'utilisateurs, vous désirerez certainement avoir
votre <path>/home</path> séparé afin d'améliorer la sécurité et de simplifier
les sauvegardes.  Si vous installez Gentoo comme serveur de courrier, votre
<path>/var</path> devrait être séparé étant donné que tous les courriels sont
stockés dans <path>/var</path>.  Un bon choix de système de fichiers va vous
permettre d'améliorer les performances.  Les serveurs de jeu auront un
<path>/opt</path> séparé étant donné que la plupart des serveurs de jeux sont
installés à cet endroit. La raison est la même que pour <path>/home</path>&nbsp;:
sécurité et sauvegarde.
Vous devriez consacrer suffisamment de place au répertoire <path>/usr</path>,
car il contient non seulement vos applications, mais aussi l'arbre Portage qui
prend 500&nbsp;Mo à lui seul et les sources des programmes que vous allez
installer.
</p>

<p>
Comme vous pouvez le voir, cela dépend beaucoup de ce que vous souhaitez faire.
Séparer les partitions ou volumes procure les avantages suivants&nbsp;:
</p>

<ul>
<li>
  Vous pouvez choisir le système de fichiers le plus performant pour chaque
  partition ou volume.
</li>
<li>
  Votre système entier ne risque pas d'arriver à court d'espace disque libre si
  un outil défectueux sature l'espace disque d'une partition ou d'un volume.
</li>
<li>
  Si nécessaire, les vérifications des systèmes de fichiers durent moins
  longtemps, vu que de multiples vérifications peuvent être faites en parallèle
  (quoique cet avantage est plus important avec plusieurs disques qu'avec
  plusieurs partitions).
</li>
<li>
  La sécurité peut être améliorée en montant certaines partitions ou volumes
  en lecture seulement, en utilisant nosuid (les bits suid sont ignorés) et
  noexec (les bits exécutables sont ignorés), etc.
</li>
</ul>

<p>
Cependant, de multiples partitions ont un gros désavantage&nbsp;: si elles ne
sont pas configurées correctement, vous risquez d'obtenir un système avec
beaucoup d'espace libre sur une partition et plus du tout sur une autre.  Notez
également qu'il y a une limite de 15 partitions par disque SCSI ou SATA.
</p>

</body>
</subsection>
</section>
<section id="fdisk">
<title>Partitionner votre disque avec mac-fdisk (Apple)</title>
<body>

<p>
Créez maintenant vos partitions avec <c>mac-fdisk</c>&nbsp;:
</p>

<pre caption="Lancement de mac-fdisk">
# <i>mac-fdisk /dev/hda</i>
</pre>

<p>
D'abord, supprimez les partitions que vous aviez créées précédemment pour faire
de la place pour vos partitions Linux.  Utilisez <c>d</c> dans <c>mac-fdisk</c>
pour supprimer cette (ces) partition(s). Le numéro de partition à supprimer
vous sera demandé. Généralement, la première partition sur des machines
NewWorld (Apple_partition_map) ne peut pas être supprimée.
</p>

<p>
Ensuite, créez une partition <e>Apple_Bootstrap</e> en utilisant <c>b</c>.  Il
vous sera demandé à partir de quel bloc vous souhaitez commencer. Entrez le
numéro de votre première partition libre suivi de <c>p</c>, par exemple,
<c>2p</c>.
</p>

<note>
Cette partition <e>n'est pas</e> une partition <path>/boot</path>. Elle n'est
absolument pas utilisée par Linux. N'y placez aucun système de fichiers et ne
la montez jamais. Une machine Apple n'a pas besoin de partition séparée pour
<path>/boot</path>.
</note>

<p>
À présent, créez une partition de mémoire virtuelle en appuyant sur <c>c</c>.
<c>mac-fdisk</c> va encore vous demander à partir de quel bloc vous souhaitez
commencer cette partition.  Comme nous avons utilisé <c>2</c> auparavant pour
créer la partition Apple_Bootstrap, vous devez à présent entrer <c>3p</c>.
Quand on vous demande la taille, tapez <c>512M</c> (ou n'importe quelle taille
que vous souhaitez, mais 512&nbsp;Mo est recommandé).  Quand on vous demande un
nom, entrez <c>swap</c> (obligatoire).
</p>

<p>
Pour créer la partition principale, tapez <c>c</c>, suivi de <c>4p</c> pour
sélectionner à partir de quel bloc la partition doit commencer.  Quand on vous
demande la taille, tapez <c>4p</c> à nouveau.  <c>mac-fdisk</c> va interpréter
ceci comme «&nbsp;utiliser tout l'espace disponible&nbsp;».  Quand on vous
demande le nom, tapez <c>root</c> (obligatoire).
</p>

<p>
Pour finir, écrivez les partitions sur le disque en utilisant <c>w</c> et
<c>q</c> pour quitter <c>mac-fdisk</c>.
</p>

<note>
Pour vérifier que tout a bien été enregistré, vous devriez relancer mac-fdisk
et vérifier que toutes vos partitions apparaissent. Si ce n'est pas le cas,
veuillez réinitialiser vos partitions en tapant <c>i</c> dans mac-fdisk. Notez
que cela supprimera toutes les partitions.
</note>

<p>
Maintenant que vos partitions sont créées, vous pouvez continuer avec
<uri link="#filesystems">Création des systèmes de fichiers</uri>.
</p>

</body>
</section>
<section id="parted">
<title>Alternative : partitionner votre disque avec parted (particulièrement Pegasos)</title>
<body>

<p>
<c>parted</c>, pour «&nbsp;Partition Editor&nbsp;», peut à présent manipuler
les partitions HFS+ utilisées par Mac OS et Mac OS X. Avec cet outil, vous
pouvez redimensionner vos partitions Mac et créer de l'espace pour vos
partitions Linux. Néanmoins, l'exemple ci-dessous décrit uniquement le
partitionnement pour les machines Pegasos.
</p>

<p>
Commençons par démarrer <c>parted</c> :
</p>

<pre caption="Exécuter parted">
# <i>parted /dev/hda</i>
</pre>

<p>
Si le disque n'est pas encore partitionné, lancez <c>mklabel amiga</c> pour
créer un nouveau «&nbsp;disklabel&nbsp;».
</p>

<p>
Vous pouvez utiliser <c>print</c> à tout moment pour afficher la table des
partitions qui est en mémoire. Si à un moment ou à un autre vous vous rendez
compte que vous avez fait une erreur ou que vous voulez faire autrement vous
pouvez taper <c>Ctrl-c</c> pour quitter sans sauver.
</p>

<p>
Si avez l'intention d'installer aussi MorphOS sur votre Pegasos, créez un
système de fichiers affs1 nommé «&nbsp;BI0&nbsp;» (BI zéro) au début du disque.
32&nbsp;Mo devraient suffire pour votre noyau MorphOS. Sur une machine Pegasos I
ou si vous voulez utiliser reiserfs, xfs ou jsf, vous devrez aussi installer votre
noyau Linux sur cette partition. Les machines Pegasos II savent démarrer depuis
des partitions ext2/ext3 ou affs1. Pour créer une partition, faites <c>mkpart
primary affs1 START END</c> et remplacez <c>START</c> et <c>END</c> par un
intervalle en méga-octets. Par exemple, <c>0 32</c> crée une partition de
32&nbsp;Mo qui commence à 0Mo et finit à 32Mo.
</p>

<p>
Pour Linux, vous devez créer deux partitions, une pour le système de fichiers
et une pour la mémoire virtuelle. Avant de créer le système de fichiers, vous
devez décider quel système utiliser. Les possibilités sont ext2, ext3,
reiserfs et xfs. Si vous ne savez pas lequel choisir, optez pour ext3.
Lancez <c>mkpart primary ext3 START END</c> pour créer une partition ext3 en
remplaçant <c>START</c> et <c>END</c> par un intervalle en méga-octets.
</p>

<p>
Il est généralement recommandé de créer une partition de mémoire virtuelle de
la même taille que la mémoire physique multipliée par deux. Une taille
inférieure ne devrait pas vous poser de problèmes sauf si vous essayez de
lancer de nombreuses applications en même temps. Un minimum de 512&nbsp; Mo est
souvent conseillé. Pour créer la partition de mémoire virtuelle, faites
<c>mkpart primary linux-swap START END</c>.
</p>

<p>
Notez les numéros mineurs des partitions, car vous en aurez besoin pendant
l'installation. Pour les afficher, faites <c>print</c>. Vos disques seront
reconnus comme <path>/dev/hdaX</path> où X est le numéro mineur de la
partition.
</p>

<p>
Quand vous avez terminé, faites <c>quit</c> pour enregistrer vos paramètres.
</p>

</body>
</section>
<section id="filesystems">
<title>Création des systèmes de fichiers</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Maintenant que vos partitions sont créées, il est temps d'y installer un
système de fichiers. Si vous ne vous souciez pas de quel système de fichiers
choisir et êtes satisfait de ceux que nous utilisons par défaut dans ce manuel,
continuez avec <uri link="#filesystems-apply">Application d'un système de
fichiers à une partition</uri>.  Sinon, continuez à lire pour en apprendre plus
sur les systèmes de fichiers disponibles.
</p>

</body>
</subsection>
<subsection>
<title>Systèmes de fichiers&nbsp;?</title>
<body>

<p>
De nombreux systèmes de fichiers sont disponibles&nbsp;: ext2, ext3 et XFS sont
considérés stables sur les machines PPC. jfs n'est pas supporté et ReiserFS
souffre encore de quelques problèmes et n'est donc pas supporté.
</p>

<p>
<b>ext2</b> est le système de fichiers original de Linux mais n'a pas de
metadonnées journalisées, ce qui signifie que la routine de vérification du
système de fichiers ext2 au démarrage peut prendre beaucoup de temps. À
présent, vous avez le choix entre plusieurs systèmes de fichiers journalisés
qui peuvent être vérifiés très rapidement et sont généralement préférés à leurs
homologues non journalisés.  Les systèmes de fichiers journalisés évitent de
devoir attendre longtemps quand vous démarrez votre système et que vos systèmes
de fichiers sont dans un état instable.
</p>

<p>
<b>ext3</b> est la version journalisée du système de fichiers ext2, qui fournit
des metadonnées journalisées pour une récupération rapide en plus d'autres
modes journalisés comme la journalisation de données complètes et ordonnées.
ext3 est un très bon système de fichiers fiable. Il offre généralement des
performances décentes dans la plupart des conditions. Il offre de bonnes
performances dans la plupart des cas grâce à un arbre balancé indexé par clé de
hachage. Pour activer cet arbre, vous devez ajouter l'option <c>-O
dir_index</c> sur la commande <c>mke2fs</c>. En résumé, ext3 est un excellent
système de fichiers.
</p>

<p>
<b>ReiserFS</b> est un système de fichiers basé sur les B*-tree qui a de très
bonnes performances et qui surpasse ext2 et ext3 dans le cas de l'utilisation
de petits fichiers (fichiers de moins de 4 ko), souvent avec un facteur allant
de 10 à 15.  ReiserFS résiste aussi très bien à la montée en charge et a des
metadonnées journalisées.  Depuis le noyau 2.4.18, ReiserFS est stable et peut
être utilisé aussi bien dans un système de fichiers destiné à une utilisation
générale et pour des cas extrêmes comme la création de grands systèmes de
fichiers et l'utilisation de nombreux petits fichiers ou de grands fichiers et
répertoires qui contiennent des dizaines de milliers de fichiers.
Malheureusement, ReiserFS souffre encore de quelques problèmes sur
l'architecture PPC et nous le déconseillons.
</p>

<p>
<b>XFS</b> est un système de fichiers avec des métadonnées journalisées qui
possède un ensemble de fonctionnalités robustes et qui est optimisé pour la mise
à l'échelle. Nous ne recommandons ce système de fichiers que pour des systèmes
équipés d'unités de stockage SCSI haut de gamme ou connectés à des serveurs de
stockage «&nbsp;Fibre Channel&nbsp;», et munis d'un onduleur. Puisque XFS utilise
énormément le cache pour des données transitoires en mémoire vive, les programmes
mal conçus (ceux qui ne prennent pas les précautions suffisantes quand ils
écrivent les fichiers sur disque, et il y en a quelques uns) peuvent perdre
beaucoup de données si le système s'interrompt de manière inattendue.
</p>

</body>
</subsection>
<subsection id="filesystems-apply">
<title>Application d'un système de fichiers à une partition</title>
<body>

<p>
Pour créer un système de fichiers sur une partition ou un volume, chaque
système de fichiers fournit ses propres outils&nbsp;:
</p>

<table>
<tr>
  <th>Système de fichiers</th>
  <th>Commande de création</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mkfs.ext2</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mkfs.ext3</c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkfs.reiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
</table>

<p>
Par exemple, pour formater la partition principale (<path>/dev/hda4</path>
dans notre exemple) en ext3, nous utiliserons&nbsp;:
</p>

<pre caption="Application d'un système de fichiers sur une partition">
# <i>mkfs.ext3 /dev/hda4</i>
</pre>

<p>
À présent, créons les systèmes de fichiers sur nos partitions fraîchement
créées.
</p>

<note>
Les machines OldWorld et les PegasosII ne peuvent charger des noyaux que sur
des partitions ext2 ou ext3.  Les machines NewWorld savent lire des noyaux sur
des partitions ext2, ext3, XFS, ReiserFS et même HFS/HFS+.
</note>

</body>
</subsection>
<subsection>
<title>Activation de la partition de mémoire virtuelle</title>
<body>

<p>
<c>mkswap</c> est la commande utilisée pour initialiser la partition de mémoire
virtuelle&nbsp;:
</p>

<pre caption="Création d'une signature de mémoire virtuelle">
# <i>mkswap /dev/hda3</i>
</pre>

<p>
Pour activer la partition de mémoire virtuelle, utilisez <c>swapon</c>&nbsp;:
</p>

<pre caption="Activation de la partition de mémoire virtuelle">
# <i>swapon /dev/hda3</i>
</pre>

<p>
Créez et activez la partition de mémoire virtuelle maintenant.
</p>

</body>
</subsection>
</section>
<section>
<title>Monter les partitions</title>
<body>

<p>
Maintenant que nos partitions sont initialisées et contiennent un système de
fichiers, il est temps de les monter avec la commande <c>mount</c>.  N'oubliez
pas de créer les points de montage nécessaires pour toutes les partitions que
vous avez créées. Par exemple, pour créer le point de montage et monter la
partition racine&nbsp;:
</p>

<warn>
À cause d'un bogue dans le paquet e2fsprogs, vous devez utiliser de manière
explicite l'option <c>mount -t ext3</c> si vous utilisez un système de fichiers
ext3.
</warn>

<pre caption="Monter la future partition racine">
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda4 /mnt/gentoo</i>
<comment>(Pour les partitions ext3 :)</comment>
# <i>mount -t ext3 /dev/hda4 /mnt/gentoo</i>
</pre>

<note>
Si vous installez <path>/tmp</path> sur une partition séparée, n'oubliez pas de
définir les permissions nécessaires après avoir monté la partition. Utilisez la
commande <c>chmod 1777 /mnt/gentoo/tmp</c>. La même remarque s'applique à
<path>/var/tmp</path>.
</note>

<p>
Nous devrons monter le système de fichiers proc (une interface virtuelle avec
le noyau) sur <path>/proc</path>, mais nous devons d'abord placer nos fichiers
sur les partitions.
</p>

<p>
Continuez avec <uri link="?part=1&amp;chap=5">Installer les fichiers
d'installation de Gentoo</uri>.
</p>

</body>
</section>
</sections>
