<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/Attic/hb-install-bootloader.xml,v 1.1 2004/01/09 15:10:01 neysx Exp $ -->

<sections>
<section>
<title>Faites votre choix</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Maintenant que votre noyau a été configuré et compilé, et que les fichiers de
configuration du système ont été correctement ajustés, il est temps d'installer
le programme qui le lance au démarrage de votre machine. Un tel programme est
appelé un <e>chargeur de démarrage</e> («bootloader» en anglais).  Avant de
commencer, évaluez les options disponibles.
</p>

<p>
Plusieurs chargeurs de démarrage sont disponibles pour Linux. Cependant, ils ne
fonctionnent qu'avec certaines architectures. Vous devez donc choisir un chargeur
supporté par votre architecture.
</p>

<p>
Le tableau ci-dessous liste les architectures et les chargeurs disponibles.
Choisissez un chargeur en fonction de votre architecture. Par exemple, si vous
avez un Pentium 4, votre architecture est <e>x86</e> et vous avez le choix entre
GRUB (recommandé) et LILO.
</p>

<table>
<tr>
  <th>Architecture</th>
  <th>Recommandé</th>
  <th>Alternatives</th>
</tr>
<tr>
  <th>x86</th>
  <ti><uri link="#doc_chap2">GRUB</uri></ti>
  <ti><uri link="#doc_chap3">LILO</uri></ti>
</tr>
<tr>
  <th>alpha</th>
  <ti><uri link="#doc_chap4">aBoot</uri></ti>
  <ti><uri link="#doc_chap5">MILO</uri></ti>
</tr>
<tr>
  <th>sparc</th>
  <ti><uri link="#doc_chap6">SILO</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>ppc</th>
  <ti>
    <uri link="#doc_chap8">yaBoot</uri> (NewWorld), 
    <uri link="#doc_chap9">BootX</uri> (OldWorld)
  </ti>
  <ti></ti>
</tr>
<tr>
  <th>hppa</th>
  <ti><uri link="#doc_chap7">PALO</uri></ti>
  <ti></ti>
</tr>
<tr>
  <th>mips</th>
  <ti><uri link="#doc_chap10">MIPS PROM</uri></ti>
  <ti></ti>
</tr>
</table>

</body>
</subsection>
<subsection>
<title>Facultatif : le framebuffer</title>
<body>

<note>
Cette partie intéressera uniquement les utilisateurs d'architectures x86, AMD64
et PPC qui ont activé le support du framebuffer dans leur noyau, ou qui ont
utilisé <c>genkernel</c>.
</note>

<p>
<e>Si</e> vous avez activé le support du framebuffer dans votre noyau, vous
devez ajouter l'option <c>vga</c> dans la configuration de votre chargeur de
démarrage si vous voulez utiliser le framebuffer.  Le tableau ci-dessous liste
les valeurs disponibles.  Dans notre exemple, nous utiliserons <e>800x600 @
16bpp</e>, donc <e>788</e>.
</p>

<table>
<tr>
  <ti></ti><th>640x480</th><th>800x600</th><th>1024x768</th><th>1280x1024</th>
</tr>
<tr>
  <th>8 bpp</th><ti>769</ti><ti>771</ti><ti>773</ti><ti>775</ti>
</tr>
<tr>
  <th>16 bpp</th><ti>785</ti><ti>788</ti><ti>791</ti><ti>794</ti>
</tr>
<tr>
  <th>32 bpp</th><ti>786</ti><ti>789</ti><ti>792</ti><ti>795</ti>
</tr>
</table>

<p>
Mémorisez (ou notez) la valeur qui vous convient, vous en aurez bientôt besoin.
</p>

<p>
Choisissez maintenant le chargeur que vous allez installer dans le tableau
mentionné précédemment.
</p>

</body>
</subsection>
</section>
<section>
<title>Par défaut : GRUB</title>
<subsection>
<title>Comprendre le vocabulaire de GRUB</title>
<body>

<impo>
GRUB n'est disponible que pour les architectures x86 et AMD64.
</impo>

<p>
Pour bien comprendre GRUB, le plus important est de se familiariser avec la
manière qu'a GRUB de désigner les disques durs et les partitions.  Votre
partition Linux <path>/dev/hda1</path> s'appelle <path>(hd0,0)</path> dans
GRUB. Notez les parenthèses nécessaires autour de <path>hd0,0</path>.
</p>

<p>
GRUB compte les disques durs à partir de zéro plutôt que "a" et les partitions
à partir de zéro au lieu de un. Remarquez aussi que GRUB ne compte que les
disques durs et ignore les périphériques tels que les lecteurs ou graveurs de
CD-ROM. Les mêmes principes s'appliquent aux disques SCSI. Ces derniers
reçoivent en général des numéros supérieurs à ceux des disques IDE, sauf quand
le BIOS est configuré pour démarrer dur les disques SCSI.)
</p>

<p>
En supposant que vous ayez un disque dur <path>/dev/hda</path>, un lecteur de
CDROM <path>/dev/hdb</path>, un graveur de CDROM <path>/dev/hdc</path>, un
second disque dur <path>/dev/hdd</path> et aucun disque SCSI,
<path>/dev/hdd7</path> s'écrit <path>(hd1,6)</path> dans GRUB. Cela peut
sembler compliqué, et ça l'est, mais, comme vous le verrez, GRUB offre un
système d'aide à la saisie bien pratique si vous avez de nombreux disques durs
avec beaucoup de partitions.
</p>

<p>
Après cette courte introduction, il est temps d'installer GRUB.
</p>

</body>
</subsection>
<subsection>
<title>Installer GRUB</title>
<body>

<p>
Pour installer GRUB, il suffit d'une simple commande <c>emerge</c>.  Il faut
installer <c>grub</c> pour les architectures x86 et <c>grub-static</c> pour
AMD64&#x00A0;:
</p>

<pre caption = "Installer GRUB">
<comment>(Pour les architectures x86 :)</comment>
# <i>emerge --usepkg grub</i>

<comment>(Pour l'architecture AMD64 :)</comment>
# <i>emerge --usepkg grub-static</i>
# <i>cp -Rpv /usr/share/grub/i386-pc/* /boot/grub</i>
</pre>

<p>
Pour configurer GRUB, tapez <c>grub</c>. Vous recevrez l'invite GRUB
<path>grub&gt;</path> sur la ligne de commande. Vous devez ensuite entrer les
bonnes commandes pour installer le secteur de démarrage sur votre disque dur.
</p>

<pre caption = "Lancer le shell GRUB">
# <i>grub</i>
</pre>

<p>
Dans notre exemple, nous voulons installer GRUB pour qu'il trouve l'information
dont il a besoin sur la partition de démarrage <path>/dev/hda1</path>. Nous
voulons aussi installer GRUB dans le secteur MBR (NdT:Master Boot Record, code
initialement chargé par le BIOS au démarrage du PC) pour que GRUB soit lancé
dès le démarrage de la machine.  Évidemment, si vous ne suivez pas exactement
notre exemple, vous devez modifier les commandes en conséquence.
</p>

<p>
GRUB comprend un mécanisme d'aide à la saisie. Par exemple, si vous tapez
"<c>root (</c>" suivi de la touche &lt;TAB&gt;, GRUB affichera une liste des
périphériques possibles (comme <path>hd0</path>). Si vous tapez "<c>root
(hd0,</c>" suivi de la touche &lt;TAB&gt;, GRUB affichera une liste des
partitions disponibles (comme <path>hd0,0</path>).
</p>

<p>
Grâce à ce système, installer GRUB devient relativement facile.
Allons-y, installons GRUB.
</p>

<pre caption = "Installer GRUB sur le MBR">
grub&gt; <i>root (hd0,0)</i>    <comment>(l'information est sur la partition de démarrage)</comment>
grub&gt; <i>setup (hd0)</i>     <comment>(écrire GRUB dans le MBR)</comment>
grub&gt; <i>quit</i>            <comment>(quitter le shell GRUB)</comment>
</pre>

<note>
Si vous voulez installer GRUB dans une partition au lieu du MBR, vous devez
indiquer la bonne partition à la commande <c>setup</c>. Par exemple, pour
installer GRUB dans <path>/dev/hda3</path>, la commande devient <c>setup
(hd0,2)</c>. Peu d'utilisateurs voudront faire cela.
</note>

<p>
Bien que GRUB soit maintenant installé, vous devez encore écrire son
fichier de configuration pour qu'il puisse démarrer votre noyau.
Créez le fichier <path>/boot/grub/grub.conf</path> avec <c>nano</c>, ou, si
disponible, avec un autre éditeur&#x00A0;:
</p>

<pre caption = "Créer /boot/grub/grub.conf">
# <i>nano -w /boot/grub/grub.conf</i>
</pre>

<p>
Vous trouverez un exemple de fichier <path>grub.conf</path> basé sur les
partitions utilisées dans ce guide ci-dessous. L'image du noyau compilé est
<path>kernel-2.4.22</path>.
</p>

<pre caption = "Exemple de grub.conf">
<comment># Entrée par défaut, 0 est la première, 1 la deuxième, etc.</comment>
default 0
<comment># Délai en secondes avant de lancer l'entrée par défaut</comment>        
timeout 30
<comment># Jolie image «splash»</comment>
splashimage=(hd0,0)/grub/splash.xpm.gz

title=Gentoo Linux
<comment># Partition qui contient l'image du noyau</comment>
root (hd0,0)                           
kernel (hd0,0)/kernel-2.4.22 root=/dev/hda3
<comment># Uniquement si vous utilisez genkernel. Autrement, supprimez cette ligne :</comment>
initrd (hd0,0)/initrd-2.4.22-gentoo-r2

<comment># Les lignes suivantes servent à démarrer un système windows</comment>
<comment># Dans cet exemple, Windows est installé dans /dev/hda6.</comment>
title=Windows XP
root (hd0,5)
chainloader +1
</pre>

<note>
Si vos partitions sont organisées différemment ou si vous utilisez un autre
noyau, ajustez les commandes en conséquence. Assurez-vous de toujours utiliser
un chemin relatif au point de montage. En d'autres mots,
<path>(hd0,0)/grub/splash.xpm.gz</path> est en fait
<path>/boot/grub/splash.xpm.gz</path>, car <path>(hd0,0)</path> sera monté sur
<path>/boot</path>.
</note>

<p>
Si vous devez passer des options supplémentaires à votre noyau, ajoutez-les
simplement à la fin de la commande <c>kernel</c>. Nous lui passons déjà une
option (<c>root=/dev/hda3</c>), mais vous pouvez en ajouter, par exemple,
l'option <c>vga</c> pour le framebuffer mentionnée plus haut.
</p>

<pre caption = "Ajouter l'option vga aux options du noyau">
title=Gentoo Linux
  root (hd0,0)
  kernel (hd0,0)/kernel-2.4.22 root=/dev/hda3 vga=788
</pre>

<p>
Les utilisateurs de <c>genkernel</c> doivent savoir que leur noyau utilise les
mêmes options que celles utilisées sur le LiveCD. Par exemple, si vous avez des
périphériques SCSI, vous devez ajouter l'option <c>doscsi</c>.
</p>

<p>
Enregistrez le fichier <path>grub.conf</path> et quittez votre éditeur.
GRUB est maintenant configuré et vous pouvez poursuivre avec <uri
link="?part=1&amp;chap=10">Installer les outils système</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternative : LILO</title>
<subsection>
<title>Installer LILO</title>
<body>

<impo>
LILO n'est disponible que pour des systèmes x86.
</impo>

<p>
LILO (LInux LOader, ou chargeur Linux) est le chargeur historique de Linux, mais
il lui manque des fonctionnalités présentes GRUB, ce qui explique que GRUB est
en train de prendre le dessus. La raison pour laquelle LILO est encore utilisé
est que GRUB ne fonctionne pas sur certains systèmes, mais LILO fonctionne.
Évidemment, beaucoup d'utilisateurs connaissent mieux LILO que GRUB et veulent
le conserver. De toute façon, Gentoo supporte les deux, et vous avez
apparemment choisi LILO.
</p>

<p>
Installer LILO est enfantin; utilisez <c>emerge</c>.
</p>

<pre caption = "Installer LILO">
# <i>emerge --usepkg lilo</i>
</pre>

</body>
</subsection>
<subsection>
<title>Configurer LILO</title>
<body>

<p>
Pour configurer LILO, vous devez créer le fichier <path>/etc/lilo.conf</path>.
Lancez votre éditeur préféré, notre exemple utilise <c>nano</c> et créez le
fichier.
</p>

<pre caption = "Créer /etc/lilo.conf">
# <i>nano -w /etc/lilo.conf</i>
</pre>

<p>
Nous vous avions demandé de mémoriser le nom de l'image de votre noyau. Dans
l'exemple suivant, nous supposons que c'est <path>kernel-2.4.22</path>. Nous
utilisons aussi les partitions telles que créées plus tôt dans ce manuel.
</p>

<pre caption = "Exemple de /etc/lilo.conf">
boot=/dev/hda             <comment># LILO installé dans le MBR</comment>
prompt                    <comment># Permet à l'utilisateur de sélectionner une autre entrée</comment>
timeout=50                <comment># Délai de 5 (cinq) secondes avant de démarrer l'entrée par défaut</comment>
default=gentoo            <comment># Définit l'entrée par défaut</comment>
<comment># uniquement si vous utilisez le framebuffer. Supprimez la ligne suivant dans le cas contraire.</comment>
vga=788                   <comment># Mode graphique du framebuffer</comment>

image=/boot/kernel-2.4.22
  label=gentoo            <comment># Nom que nous avons attribué à cette entrée</comment>
  read-only               <comment># Démarre avec root en lecture seulement. Ne pas modifier !</comment>
  root=/dev/hda3          <comment># Endroit où se trouve le système de fichier root</comment>
  <comment># Uniquement si vous utilisez genkernel. Supprimez la ligne suivant dans le cas contraire.</comment>
  initrd=/boot/initrd-2.4.22-gentoo-r2

<comment># Les lignes suivantes sont utilisées pour démarrer un système windows, le cas échéant.</comment>
<comment># Dans cet exemple, Windows est installé dans /dev/hda6.</comment>
other=/dev/hda6
  label=windows
</pre>

<note>
Si vos partitions sont agencées d'une autre façon ou si vous utilisez un autre
noyau, ajustez les valeurs en conséquence.
</note>

<p>
Si vous devez passer d'autres options à votre noyau, ajoutez une commande
<c>append</c> dans la section ad hoc. Par exemple, pour passer
<c>acpi=off</c> pour désactiver le support ACPI, faites&#x00A0;:
</p>

<pre caption = "Utiliser append pour passer une option au noyau">
image=/boot/kernel-2.4.22
  label=gentoo
  read-only
  root=/dev/hda3
  <i>append="acpi=off"</i>
</pre>

<p>
Les utilisateurs de <c>genkernel</c> 
doivent savoir que leur noyau utilise les mêmes options de démarrage
que le LiveCD. Par exemple, si vous avez des périphériques SCSI,
vous devez passer l'option <c>doscsi</c>.
</p>


<p>
Enregistrez le fichier et quitter votre éditeur. Pour terminer, vous devez
lancer la commande <c>/sbin/lilo</c> pour que LILO prenne votre fichier
<path>/etc/lilo.conf</path> en compte (c-à-d. pour l'installer sur le disque).
</p>

<pre caption = "Terminer l'installation de LILO">
# <i>/sbin/lilo</i>
</pre>

<p>
Vous pouvez maintenant poursuivre avec <uri
link="?part=1&amp;chap=10">Installer les outils système</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternative : aboot</title>
<body>

<impo>
aboot n'est disponible que pour les systèmes alpha.
</impo>

<p>
Installez d'abord aboot sur votre système avec <c>emerge</c>&#x00A0;:
</p>

<pre caption = "Installer aboot">
# <i>emerge --usepkg aboot</i>
</pre>

<p>
Ensuite, vous devez rendre votre disque démarrable de sorte que <c>aboot</c>
soit exécuté quand vous démarrez votre machine.  Pour cela, il faut écrire le
chargeur de démarrage <c>aboot</c> au début du disque.
</p>

<pre caption = "Rendre votre disque démarrable">
# <i>swriteboot -f3 /dev/sda /boot/bootlx</i> 
# <i>abootconf /dev/sda 2</i>
</pre>

<note>
Si l'agencement de vos partitions ne correspond pas à celui que nous utilisons
dans ce guide, vous devez modifiez les commandes en conséquence. Veuillez
consulter les pages «man» (<c>man 8 swriteboot</c> et <c>man 8 abootconf</c>).
</note>

<p>
De plus, vous pouvez faire démarrer Gentoo plus facilement en définissant le
fichier de configuration de aboot et la variable SRM boot_osflags.
Assurez-vous également que bootdef_dev est correctement défini (plus facile à
faire sur la console que dans Linux).
</p>

<pre caption = "Améliorer le démarrage de Gentoo">
# <i>echo '0:2/boot/vmlinux.gz root=/dev/sda2' &gt; /etc/aboot.conf</i>
# <i>echo -n 0 &gt; /proc/srm_environment/named_variables/boot_osflags</i>
# <i>echo -n '' &gt; /proc/srm_environment/named_variables/boot_file</i>
</pre>

<p>
Si vous installez via une console sur le port série, n'oubliez pas de
spécifier l'option pour le démarrage sur console série dans
<path>aboot.conf</path>. Vous trouverez un exemple dans
<path>/etc/aboot.conf.example</path>. De plus, vous devez autoriser les
utilisateurs à se connecter sur le port série&#x00A0;:
</p>

<pre caption = "Autoriser la connexion sur le port série">
# <i>echo tts/0 &gt;&gt; /etc/securetty</i>
# <i>echo 's0:12345:respawn:/sbin/agetty 9600 tts/0 vt100' &gt;&gt; /etc/inittab</i>
</pre>

<p>
Aboot est maintenant configuré. Vous pouvez poursuivre avec <uri
link="?part=1&amp;chap=10">Installer les outils système</uri>.
</p>

</body>
</section>
<section>
<title>Alternative : MILO</title>
<body>

<impo>
MILO n'est disponible que pour les systèmes alpha.
</impo>

<p>
Tout d'abord, vous devez décider comment vous allez utiliser MILO.  Nous
supposons que vous allez l'installer sur une disquette de démarrage.  Si vous
comptez l'installer sur une partition MS-DOS, modifiez les commandes pour en
tenir compte.
</p>

<p>
pour installer MILO, utilisez <c>emerge</c>.
</p>

<pre caption = "Installer MILO">
# <i>emerge --usepkg milo</i>
</pre>

<p>
Cela devrait créer des images MILO dans <path>/opt/milo</path>.  Les commandes
ci-dessous permettent de créer une disquette de démarrage pour MILO. N'oubliez
pas d'utiliser l'image qui correspond à votre système Aplha.
</p>

<pre caption = "Installer MILO sur une disquette">
<comment>(Insérez une disquette vierge)</comment>
# <i>fdformat /dev/fd0</i>
# <i>mformat a:</i>
# <i>mcopy /opt/milo/milo-2.2-18-gentoo-ruffian a:\milo</i>
# <i>mcopy /opt/milo/linload.exe a:\lilnload.exe</i>
<comment>(Uniquement si vous avez un Ruffian :</comment>     
  # <i>mcopy /opt/milo/ldmilo.exe a:\ldmilo.exe</i>
<comment>)</comment>
# <i>echo -ne '\125\252' | dd of=/dev/fd0 bs=1 seek=510 count=2</i>
</pre>

<p>
Votre disquette de démarrage est prête à démarrer Gentoo. Vous devrez peut-être
définir quelques variables d'environnement de votre firmware ARCS pour démarrer
MILO. Veuillez consulter le <uri
link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri> pour de plus amples
informations. Ce guide contient des exemples pour les systèmes courants et des
exemples de commandes à utiliser dans le mode interactif.
</p>

<p>
Ne pas lire le <uri link="http://tldp.org/HOWTO/MILO-HOWTO/">MILO-HOWTO</uri>
est une <e>mauvaise</e> idée.
</p>

<p>
Vous pouvez maintenant poursuivre avec <uri
link="?part=1&amp;chap=10">Installer les outils système</uri>.
</p>

</body>
</section>
<section>
<title>Alternative : SILO</title>
<body>

<p>
Installons le chargeur de démarrage amélioré pour Sparc <uri
link="http://www.sparc-boot.org">SILO</uri> (Sparc Improved boot LOader).
</p>

<pre caption = "Installer SILO">
# <i>emerge --usepkg silo</i>
</pre>

<p>
Ensuite, créez le fichier <path>/etc/silo.conf</path> avec votre éditeur favori
(notre exemple utilise <c>nano</c>).
</p>

<pre caption = "Créer le fichier /etc/silo.conf">
# <i>nano -w /etc/silo.conf</i>
</pre>

<p>
Vous trouverez un exemple de fichier <path>silo.conf</path> ci-dessous.  Nous
utilisons les partitions telles que créées plus tôt dans ce manuel et une image
de noyau nommée <path>kernel-2.4.22</path>.
</p>

<pre caption = "Exemple de /etc/silo.conf">
partition = 1         <comment># Partition de démarrage</comment>
root = /dev/hda4      <comment># Partition principale (root)</comment>
timeout = 15          <comment># Délai de 15 secondes avant de démarrer l'entrée par défaut</comment>

image = /boot/kernel-2.4.22
  label = linux
</pre>

<p>
Si vous utilisez l'exemple <path>silo.conf</path> installé par Portage, mettez
<e>toutes</e> les lignes que vous n'utilisez pas en commentaire.
</p>

<p>
Si vous utilisez une partition <path>/boot</path> séparée, copiez les fichiers
de configuration dans <path>/boot</path> et lancez <c>/sbin/silo</c>&#x00A0;:
</p>

<pre caption = "Uniquement si vous avez une partition /boot séparée">
# <i>cp /etc/silo.conf /boot</i>
# <i>/sbin/silo -C /boot/silo.conf</i>
/boot/silo.conf appears to be valid
</pre>

<p>
Si votre répertoire <path>/boot</path> a été créé dans votre partition root,
lancez simplement <c>/sbin/silo</c>&#x00A0;:
</p>

<pre caption = "Exécuter silo">
# <i>/sbin/silo</i>
/etc/silo.conf appears to be valid
</pre>

<p>
Vous pouvez maintenant poursuivre avec <uri
link="?part=1&amp;chap=10">Installer les outils système</uri>.
</p>

</body>
</section>
<section>
<title>Alternative : PALO</title>
<body>

<impo>
PALO n'est disponible que pour les systèmes HPPA.
</impo>

<p>
Sur la plate-forme PA-RISC, le chargeur de démarrage s'appelle palo.  Le
fichier de configuration est <path>/etc/palo.conf</path>. Voici un exemple de
configuration&#x00A0;:
</p>

<pre caption = "Exemple de /etc/palo.conf">
--commandline=2/vmlinux root=/dev/sdb2 HOME=/
--recoverykernel=/vmlinux.old
--init-partitioned=/dev/sdb
</pre>

<p>
La première ligne indique où se trouve le noyau et quels paramètres il doit
recevoir.  <c>2/vmlinux</c> signifie que le noyau nommé <c>/vmlinux</c> se
trouve sur la deuxième partition. Attention, le chemin vers le noyau est
relatif à la partition, pas au point de montage.
</p>

<p>
La deuxième ligne indique le noyau de secours. Si c'est votre première
installation et que vous n'avez pas de noyau de secours, mettez cette ligne en
commentaire.  La troisième ligne indique sur quel disque se trouve palo.
</p>

<p>
Une fois la configuration terminée, lancez simplement <c>palo</c>.
</p>

<pre caption = "Prendre la configuration de PALO en compte">
# <i>palo</i>
</pre>

<p>
Vous pouvez maintenant poursuivre avec <uri
link="?part=1&amp;chap=10">Installer les outils système</uri>.
</p>

</body>
</section>
<section>
<title>Alternative : yaBoot</title>
<subsection>
<title>Introduction</title>
<body>

<impo>
yaBoot n'est disponible que sur les systèmes PPC NewWorld.
</impo>

<p>
yaBoot peut être configuré de deux façons. Vous pouvez utiliser le récent
<c>yabootconfig</c> inclus dans <path>yaboot-1.3.8-r1</path> pour
configurer yaboot automatiquement. Si, pour une raison quelconque, vous ne
voulez pas utiliser <c>yabootconfig</c>, vous pouvez éditer le fichier de
configuration <path>/etc/yaboot.conf</path> déjà installé sur votre machine.
</p>

<ul>
  <li><uri link="#doc_chap8_sect2">Par défaut : utiliser yabootconfig</uri></li>
  <li>
    <uri link="#doc_chap8_sect3">Alternative : configuration manuelle de yaBoot</uri>
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Par défaut : utiliser yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> détectera automatiquement vos partitions et créera une
configuration pour des machines à deux ou trois systèmes d'exploitation Linux,
Mac OS ou Max OS X.
</p>

<p>
Pour utiliser <c>yabootconfig</c>, votre disque doit avoir une partition de
démarrage et le fichier <path>/etc/fstab</path> doit être configuré
correctement par rapport à vos partitions, ce qui devrait avoir été fait plus
tôt si vous avez suivi la procédure du manuel.  Vous devez lancer la commande
<c>emerge --update yaboot</c> pour vous assurer que vous utilisez la version la
plus récente, car il est possible que l'archive que vous utilisez ne soit plus
à jour.
</p>

<pre caption = "Installer yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Maintenant, lancez <c>yabootconfig</c>. Lors de son exécution, ce programme
confirmera l'endroit où se trouve la partition de démarrage. Tapez <c>Y</c>
pour valider, si vous n'êtes pas d'accord, vérifiez le fichier
<path>/etc/fstab</path>.  Ensuite, yabootconfig utilisera vos fichiers de
configuration pour créer sa propre configuration dans le fichier
<path>/etc/yaboot.conf</path> et exécutera <c>mkofboot</c> pour vous. Ce
dernier est utilisé pour formater la partition de démarrage et y installer les
fichiers de configuration de yaboot.
</p>

<p>
Vous voudrez peut-être vérifier le contenu du fichier
<path>/etc/yaboot.conf</path>.  Si vous le modifiez, par exemple pour changer
le système d'exploitation par défaut, vous devez relancer la commande <c>ybin
-v</c> pour enregistrer vos modifications dans la partition de démarrage.
</p>

<p>
Vous pouvez maintenant poursuivre avec <uri
link="?part=1&amp;chap=10">Installer les outils système</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Alternative : configuration manuelle de yaboot</title>
<body>

<p>
Installez d'abord la dernière version de <c>yaboot</c>&#x00A0;:
</p>

<pre caption = "Installer yaboot">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Vous trouverez un exemple complet du fichier de configuration
<path>yaboot.conf</path> ci-dessous, adaptez-le si nécessaire.
</p>

<pre caption = "Fichier /etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## run: "man yaboot.conf" for details. Do not make changes until you have!!
## see also: /usr/share/doc/yaboot/examples for example configurations.
##
## For a dual-boot menu, add one or more of:
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## our bootstrap partition:</comment>

boot=/dev/hda9

<comment>##hd: correspond à hda pour open firmware</comment>
device=hd:
partition=11

root=/dev/hda11
delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Recopiez cette section si vous avez plusieurs noyaux ou
## plusieurs jeu d'options de démarrage
#################</comment>
image=/boot/vmlinux
  label=Linux
  sysmap=/boot/System.map
  read-only
<comment>##################</comment>

macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Après avoir modifé le fichier <path>yaboot.conf</path>, vous devez lancer la
commande <c>mkofboot -v</c> pour enregistrer vos paramètres dans la partition
de démarrage. <e>N'oubliez pas cela&#x00A0;!</e> Si tout se passe bien et que
vous avez utilisé les mêmes options que ci-dessus, vous obtiendrez un menu à
cinq entrées lors du prochain démarrage de votre machine.  Si vous modifiez la
configuration de yaboot plus tard, vous ne devrez lancer que <c>ybin -v</c>
pour enregistrer vos changements, <c>mkofboot</c> n'est utilisé que lors de la
première installation.
</p>

<p>
Pour plus d'informations sur yaboot, veuillez consulter la <uri
link="http://penguinppc.org/projects/yaboot">page du projet yaboot</uri>.  Vous
pouvez maintenant poursuivre avec <uri link="?part=1&amp;chap=10">Installer les
outils système</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternative : BootX</title>
<body>

<impo>
BootX n'est disponible que pour les systèmes OldWorld PPC&#x00A0;!
</impo>

<p>
Si vous voulez utiliser BootX, vous n'avez rien à faire maintenant.  Cependant,
après avoir redémarré votre machine, vous devrez modifier quelques paramètres
dans le panneau de configuration de BootX dans MacOS.  Cette étape sera abordée
plus tard dans ce manuel.
</p>

<p>
Vous pouvez maintenant poursuivre avec <uri
link="?part=1&amp;chap=10">Installer les outils système</uri>.
</p>

</body>
</section>
<section>
<title>Alternative : PROM MIPS</title>
<subsection>
<body>

<p>
MIPS n'a pas besoin d'un chargeur de démarrage. La PROM MIPS se charge du
démarrage, mais vous devez la configurer pour que votre noyau Linux puisse être
lancé.
</p>

<p>
Installez d'abord <c>dvhtool</c> qui vous permettra de copier votre noyau dans
l'en-tête du volume SGI.
</p>

<pre caption="Installer dvhtool">
# <i>emerge dvhtool</i>
</pre>

<p>
Ensuite, copiez votre noyau dans l'en-tête du volume SGI. Par défaut,
<c>dvhtool</c> suppose que l'en-tête du volume SGI se trouve dans
<path>/dev/sda</path>.  Dans le cas contraire (par exemple si IRIX est installé
dans <path>/dev/sda</path> et Gentoo/MIPS dans <path>/dev/sdb</path>), vous
devez le spécifier sur la ligne de commande avec le paramètre <c>-d
&lt;device&gt;</c>.
</p>

<pre caption="Copier un noyau dans l'en-tête du volume SGI">
# <i>dvhtool --unix-to-vh &lt;nom du noyau dans /boot&gt; &lt;nom que vous attribuez dans l'en-tête &gt;</i>
</pre>

<p>
Pour afficher la liste des entrées dans le volume, utilisez
<c>--print-volume-directory</c>&#x00A0;:
</p>

<pre caption="Lister les entrées du volume">
# <i>dvhtool --print-volume-directory</i>
</pre>

<p>
Pour permettre à votre système de démarrer Gentoo/MIPS, vous devrez modifier
certains paramètres de la PROM MIPS. Cette étape sera abordée quand
l'installation sera terminée.
</p>

<p>
Vous pouvez maintenant poursuivre avec <uri
link="?part=1&amp;chap=10">Installer les outils système</uri>.
</p>

</body>
</subsection>
</section>
</sections>
