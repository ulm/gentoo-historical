<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-alpha-kernel.xml,v 1.36 2013/04/12 18:24:17 swift Exp $ -->

<sections>

<version>17</version>
<date>2013-04-06</date>

<section>
<title>Installer les sources</title>
<subsection>
<title>Choisir un noyau</title>
<body>

<p>
Le cœur autour duquel sont bâties toutes les distributions est le noyau (en
anglais «&nbsp;kernel&nbsp;») Linux. Ce noyau est l'interface entre les
programmes utilisateur et le matériel. Gentoo offre un choix de plusieurs
noyaux à ses utilisateurs. Une liste complète, accompagnée de descriptions,
est disponible dans le <uri link="/doc/fr/gentoo-kernel.xml">Guide du noyau
Gentoo Linux</uri>.
</p>

<p>
Pour les systèmes Alpha, nous offrons les <c>gentoo-sources</c>.
</p>

<pre caption="installer les sources d'un noyau">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Si vous examinez le contenu de <path>/usr/src</path>, vous devriez voir un lien
symbolique nommé <path>linux</path> pointant vers les sources de votre noyau.
Dans l'exemple suivant, le lien pointe vers <c>gentoo-sources-<keyval
id="kernel-version"/></c>, mais vous aurez sans doute installé une autre
version.
</p>

<pre caption="examiner le lien symbolique vers le noyau">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx   1 root   root    12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
Il est maintenant temps de configurer et de compiler votre noyau. Vous pouvez
utiliser <c>genkernel</c>. Cette commande construira un noyau générique tel que
celui utilisé par le CD d'installation. Toutefois, nous expliquerons d'abord la
configuration «&nbsp;manuelle&nbsp;», puisque c'est la meilleure façon
d'optimiser votre environnement.
</p>

<p>
Si vous souhaitez configurer manuellement votre noyau, poursuivez votre lecture
avec <uri link="#manual">Par défaut&nbsp;: configuration manuelle</uri>.  Si
vous souhaitez utiliser <c>genkernel</c>, vous devriez plutôt lire <uri
link="#genkernel">Alternative&nbsp;: utiliser genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Par défaut&nbsp;: configuration manuelle</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Configurer un noyau est parfois considéré comme la tâche la plus ardue que les
utilisateurs de Linux doivent accomplir. Rien n'est moins vrai... Après
avoir configuré quelques noyaux, vous ne vous rappellerez même plus que c'était
difficile ;)
</p>

<p>
Toutefois, une chose est vraie&nbsp;: vous devez connaitre votre système pour
configurer manuellement un noyau. La majeure partie de cette information peut
être obtenue en utilisant la commande <c>lspci</c> qui est dans le paquet
pciutils (<c>emerge pciutils</c>). Vous pourrez désormais utiliser <c>lspci</c>
depuis votre environnement en chroot. Vous pouvez ignorer les avertissements
<e>pcilib</e> (comme par exemple&nbsp;: pcilib: cannot open
/sys/bus/pci/devices) que vous obtiendrez avec <c>lspci</c>. Vous pouvez
également exécuter <c>lspci</c> depuis un environnement <e>non chrooté</e>. Le
résultat est le même. Vous pouvez également exécuter <c>lsmod</c> pour voir les
modules du noyau utilisés par le CD-ROM d'installation (ce qui peut vous
donner des indices sur les fonctionnalités nécessaires).
</p>

<p>
Maintenant, allez dans le dossier des sources du noyau et exécutez <c>make
menuconfig</c>. Cela ouvrira un menu de configuration basé sur ncurses.
</p>

<pre caption="lancer menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Plusieurs sections d'options de configuration s'afficheront. Nous allons
d'abord dresser la liste de certaines options que vous devez activer (sinon,
Gentoo ne fonctionnera pas ou, du moins, pas sans quelques réglages
additionnels).
</p>

</body>
</subsection>
<subsection>
<title>Activer les options requises</title>
<body>


<p>
Allez à la section <c>File Systems</c> et activez le support nécessaire pour
les systèmes de fichiers que vous utilisez. Ne  compilez <e>pas</e> le système de fichiers racine en module, sinon votre système Gentoo ne pourra pas monter votre partition. Activez aussi <c>Virtual memory</c>, <c>/proc file system</c>.
</p>

<pre caption="activer le support pour les systèmes de fichiers">
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)

 <comment>(Sélectionnez le(s) système(s) de fichiers dont vous avez besoin.)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Si vous utilisez PPPoE ou un modem classique pour vous connecter à Internet,
vous aurez besoin des options du noyau suivantes&nbsp;:
</p>

<pre caption="sélection des pilotes PPPoE">
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Les deux options de compression ne vous feront pas de mal, mais ne sont pas
absolument nécessaires. L'option <c>PPP over Ethernet</c> n'est pas obligatoire
non plus, considérant qu'elle pourrait n'être utilisée que par <c>ppp</c>
lorsque ce dernier est configuré pour utiliser PPPoE en mode noyau.
</p>

<p>
Si vous en avez besoin, n'oubliez pas d'ajouter le support pour votre carte
Ethernet.
</p>

<p>
Les options suivantes sont recommandées&nbsp;:
</p>

<pre caption="options recommandées">
General setup ---&gt;
  &lt;*&gt; SRM environment through procfs
  &lt;*&gt; Configure uac policy via sysctl

Plug and Play configuration ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;M&gt;   ISA Plug and Play support

SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; SYM53C8XX Version 2 SCSI support (NEW)
    &lt;*&gt; Qlogic ISP SCSI support

Network device support ---&gt;
  Ethernet (10 or 100 Mbit) ---&gt;
    &lt;M&gt; DECchip Tulip (dc21x4x) PCI support
    &lt;M&gt; Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA
    &lt;M&gt; EtherExpressPro/100 support (eepro100)
    &lt;M&gt; EtherExpressPro/100 support (e100)
  Ethernet (1000 Mbit) ---&gt;
    &lt;M&gt; Alteon AceNIC
      [*] Omit support for old Tigon I
    &lt;M&gt; Broadcom Tigon3
  [*] FDDI driver support
  &lt;M&gt; Digital DEFEA and DEFPA
  &lt;*&gt; PPP support
    &lt;*&gt; PPP Deflate compression

Character devices ---&gt;
  [*] Support for console on serial port
  [*] Direct Rendering Manager

File systems ---&gt;
  &lt;*&gt; Kernel automounter version 4 support
  Network File Systems ---&gt;
    &lt;*&gt; NFS
      [*] NFSv3 client
      &lt;*&gt; NFS server
      [*] NFSv3 server
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*] Alpha OSF partition support
  Native Language Support
    &lt;*&gt; NLS ISO 8859-1

Sound ---&gt;
  &lt;M&gt; Sound card support
    &lt;M&gt; OSS sound modules
      [*] Verbose initialisation
      [*] Persistent DMA buffers
      &lt;M&gt; 100% Sound Blaster compatibles
</pre>
<p>
Ensuite sélectionnez <e>Maintain a devtmpfs file system to mount at /dev</e> de telle manière que les fichiers de périphérique critiques soient disponibles précocément pendant la phase de démarrage.
</p>

<pre caption="activer la prise en charge de devtmpfs">
Device Drivers ---&gt;
  Generic Driver Options ---&gt;
    [*] Maintain a devtmpfs filesystem to mount at /dev
    [ ]   Automount devtmpfs at /dev, after the kernel mounted the rootfs
</pre>
<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compiler et installer</title>
<body>

<p>
Maintenant que votre noyau est configuré, il est temps de le compiler et de
l'installer. Quittez la configuration et lancez la compilation&nbsp;:
</p>

<pre caption="compiler le noyau">
# <i>make &amp;&amp; make modules_install</i>
# <i>make boot</i>
</pre>

<p>
Lorsque la compilation est terminée, copiez l'image du noyau dans
<path>/boot</path>. Certains noyaux récents créent <path>vmlinux</path> au lieu
de <path>vmlinux.gz</path>.
</p>

<pre caption="installer le noyau">
# <i>cp arch/alpha/boot/vmlinux.gz /boot/</i>
</pre>

</body>
</subsection>
<subsection>
<include href="hb-install-initramfs.xml"/>
</subsection>

</section>
<section id="genkernel">
<title>Alternative&nbsp;: utiliser genkernel</title>
<body>

<p>
Si vous lisez cette section, vous avez choisi d'utiliser le script
<c>genkernel</c> pour configurer votre noyau pour vous.
</p>

<p>
Maintenant que l'arbre des sources de votre noyau est installé, il est temps de
compiler ce noyau à l'aide du script <c>genkernel</c> qui construira
automatiquement un noyau dont la configuration sera presque identique à celle du
noyau du CD d'installation. Cela signifie que si vous utilisez <c>genkernel</c>
pour construire votre noyau, votre système détectera généralement tout votre
matériel au moment de l'amorçage, à la manière du CD d'installation. Puisque
genkernel ne requiert aucune configuration manuelle, il s'agit d'une solution
idéale pour l'utilisateur rebuté par l'idée de compiler son propre noyau.
</p>

<p>
Maintenant, voyons comment utiliser genkernel. D'abord, installez genkernel
comme suit&nbsp;:
</p>

<pre caption="installer genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Ensuite, compilez les sources du noyau en exécutant <c>genkernel all</c>.
Puisque <c>genkernel</c> compile un noyau qui supporte presque n'importe quel
matériel, ne soyez pas surpris que la compilation demande un temps considérable.
</p>

<p>
Veuillez noter que si votre partition de démarrage utilise un autre système de
fichiers qu'ext2 ou ext3, vous devez compiler le support de celui-ci dans le
noyau (donc pas comme module) avec la commande <c>genkernel --menuconfig
all</c>.
</p>

<pre caption="exécuter genkernel">
# <i>genkernel all</i>
</pre>

<p>
Lorsque <c>genkernel</c> aura fini son travail, un noyau, un ensemble complet de
modules et un <e>disque virtuel initial</e> (initramfs ou initrd) auront été créés.  Le
noyau et l'initrd seront utilisés plus tard lors de la configuration du chargeur
de démarrage. Notez bien les noms du noyau et du initrd puisque vous devrez les
spécifier lors de l'écriture du fichier de configuration du chargeur de
démarrage. L'initrd sera démarré immédiatement après l'amorçage afin de réaliser
l'autodétection du matériel (tout comme pour le CD d'installation) avant que
votre <e>véritable</e> système ne démarre.
</p>

<pre caption="vérifier les noms de l'image du noyau et du fichier initrd">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Kernel Modules</title>

<subsection>
<include href="hb-install-kernelmodules.xml"/>
</subsection>

</section>
</sections>
