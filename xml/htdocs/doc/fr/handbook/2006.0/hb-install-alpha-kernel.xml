<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/2006.0/hb-install-alpha-kernel.xml,v 1.1 2006/03/01 12:48:16 neysx Exp $ -->

<sections>

<version>5.5</version>
<date>2006-01-06</date>

<section>
<title>Fuseau horaire</title>
<body>

<p>
Vous devez maintenant choisir votre fuseau horaire afin que votre système sache
où il se trouve. Cherchez votre fuseau horaire dans
<path>/usr/share/zoneinfo</path>, puis copiez-le sur
<path>/etc/localtime</path>. Évitez les zones
<path>/usr/share/zoneinfo/Etc/GMT*</path>, car leur nom prête à confusion. En
effet, <path>GMT-8</path> siginifie en fait GMT+8.
</p>

<pre caption="Définir l'information relative au fuseau horaire">
# <i>ls /usr/share/zoneinfo</i>
<comment>(En supposant que vous utilisez l'heure de Paris.)</comment>
# <i>cp /usr/share/zoneinfo/Europe/Paris /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installer les sources</title>
<subsection>
<title>Choisir un noyau</title>
<body>

<p>
Le cœur autour duquel sont bâties toutes les distributions est le noyau (en
anglais «&nbsp;kernel&nbsp;») Linux. Ce noyau est l'interface entre les
programmes utilisateur et le matériel. Gentoo offre un choix de plusieurs
noyaux à ses utilisateurs.  Une liste complète, accompagnée de descriptions,
est disponible dans le <uri link="/doc/fr/gentoo-kernel.xml"> Guide du noyau
Gentoo Linux</uri>.
</p>

<p>
Pour les systèmes Alpha, nous offrons les <c>vanilla-sources</c> (le noyau 2.6
par défaut produit par les développeurs du noyau Linux)
</p>

<p>
Choisissez les sources à utiliser pour votre noyau et installez-les avec
<c>emerge</c>. On utilise <c>USE="-doc"</c> pour éviter d'éventuelles
dépendances telles que xorg-x11. De plus, <c>USE="symlink"</c> n'est pas
nécessaire pour une nouvelle installation, mais garantit que le lien symbolique
<path>/usr/src/linux</path> pointe vers les sources du noyau que vous
installez.
</p>

<p>
L'exemple suivant détaille l'installation des <c>vanilla-sources</c>.
Bien sûr, substituez ces sources par celles de votre choix.
</p>

<pre caption="Installer les sources d'un noyau">
# <i>USE="-doc symlink" emerge vanilla-sources</i>
</pre>

<p>
Si vous examinez le contenu de <path>/usr/src</path>, vous devriez voir un lien
symbolique nommé <path>linux</path> pointant vers les sources de votre noyau.
L'exemple ci-dessous utilise la version 2.6.11.2, mais vous aurez sans doute
installé une autre version.
</p>

<pre caption="Examiner le lien symbolique vers le noyau">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx   1 root   root    12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.11.2
</pre>

<p>
Il est maintenant temps de configurer et de compiler votre noyau. Vous pouvez
utiliser <c>genkernel</c>. Cette commande construira un noyau générique tel que
celui utilisé par le CD d'installation. Toutefois, nous expliquerons d'abord la
configuration «&nbsp;manuelle&nbsp;», puisque c'est la meilleure façon
d'optimiser votre environnement.
</p>

<p>
Si vous souhaitez configurer manuellement votre noyau, poursuivez votre lecture
avec <uri link="#manual">Par défaut&nbsp;: configuration manuelle</uri>.  Si
vous souhaitez utiliser <c>genkernel</c>, vous devriez plutôt lire <uri
link="#genkernel">Alternative&nbsp;: utiliser genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Par défaut&nbsp;: configuration manuelle</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Configurer un noyau est parfois considéré comme la tâche la plus ardue que les
utilisateurs de Linux doivent accomplir. Rien n'est moins vrai... Après
avoir configuré quelques noyaux, vous ne vous rappellerez même plus que c'était
difficile ;)
</p>

<p>
Toutefois, une chose est vraie&nbsp;: vous devez connaître votre système pour
configurer manuellement un noyau. Vous pouvez exécuter <c>lsmod</c> pour voir
quels modules du noyau sont utilisés par le CD d'installation (ce qui peut vous
donner des indices sur les fonctionnalités nécessaires).
</p>

<p>
Maintenant, allez dans le dossier des sources du noyau et exécutez <c>make
menuconfig</c>. Cela ouvrira un menu de configuration basé sur ncurses.
</p>

<pre caption="Lancer menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Plusieurs sections d'options de configuration s'afficheront. Nous allons
d'abord dresser la liste de certaines options que vous devez activer (sinon,
Gentoo ne fonctionnera pas, ou du moins pas sans quelques réglages
additionnels).
</p>

</body>
</subsection>
<subsection>
<title>Activer les options requises</title>
<body>

<p>
Avant toute chose, activez l'utilisation du code et des pilotes en
développement ou expérimentaux. C'est absolument nécessaire&nbsp;; si vous ne le
faites pas, des options très importantes ne seront pas affichées.
</p>

<pre caption="Sélectionner le code et les pilotes expérimentaux, et « hotplug »">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
General setup ---&gt;
  [*] Support for hot-pluggable devices
</pre>

<p>
Now go to <c>File Systems</c> and select support for the filesystems you use.
<e>Don't</e> compile them as modules, otherwise your Gentoo system will not be
able to mount your partitions. Also select <c>Virtual memory</c>, <c>/proc file
system</c>, (<c>/dev file system</c> + <c>Automatically mount at boot</c> only
for 2.4 kernel):
</p>

<p>
Allez à la section <c>File Systems</c> et activez le support nécessaire pour
les systèmes de fichiers que vous utilisez. Ne les compilez <e>pas</e> sous
forme de modules, sinon votre système Gentoo ne pourra pas monter vos
partitions. Activez aussi <c>Virtual memory</c> et <c>/proc file system</c>.
(pour les noyaux 2.4 uniquement, vous devez également activer <c>/dev file
system</c> et <c>Automatically mount at boot</c>).
</p>

<pre caption="Activer le support pour les systèmes de fichiers">
<comment>(Avec un noyau 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Avec un noyau 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] Virtual memory file system support (former shm fs)
 <comment>(Sélectionnez le(s) système(s) de fichiers dont vous avez besoin.)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Si vous utilisez PPPoE ou un modem classique pour vous connecter à Internet,
vous aurez besoin des options du noyau suivantes&nbsp;:
</p>

<pre caption="Sélection des pilotes PPPoE">
<comment>(Avec un noyau 2.4.x)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(Avec un noyau 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Les deux options de compression ne vous feront pas de mal, mais ne sont pas
absolument nécessaires. L'option <c>PPP over Ethernet</c> n'est pas obligatoire
non plus, considérant qu'elle pourrait n'être utilisée que par <c>rp-pppoe</c>
lorsque ce dernier est configuré pour utiliser PPPoE en mode noyau.
</p>

<p>
Si vous en avez besoin, n'oubliez pas d'ajouter le support pour votre
carte ethernet.
</p>

<p>
Les options suivantes sont recommandées&nbsp;:
</p>

<pre caption="Options recommandées">
General setup ---&gt;
  &lt;*&gt; SRM environment through procfs
  &lt;*&gt; Configure uac policy via sysctl

Plug and Play configuration ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;M&gt;   ISA Plug and Play support

SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; SYM53C8XX Version 2 SCSI support (NEW)
    &lt;*&gt; Qlogic ISP SCSI support

Network device support ---&gt;
  Ethernet (10 or 100 Mbit) ---&gt;
    &lt;M&gt; DECchip Tulip (dc21x4x) PCI support
    &lt;M&gt; Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA
    &lt;M&gt; EtherExpressPro/100 support (eepro100)
    &lt;M&gt; EtherExpressPro/100 support (e100)
  Ethernet (1000 Mbit) ---&gt;
    &lt;M&gt; Alteon AceNIC
      [*] Omit support for old Tigon I
    &lt;M&gt; Broadcom Tigon3
  [*] FDDI driver support
  &lt;M&gt; Digital DEFEA and DEFPA
  &lt;*&gt; PPP support
    &lt;*&gt; PPP Deflate compression

Character devices ---&gt;
  [*] Support for console on serial port
  [*] Direct Rendering Manager

File systems ---&gt;
  &lt;*&gt; Kernel automounter version 4 support
  Network File Systems ---&gt;
    &lt;*&gt; NFS
      [*] NFSv3 client
      &lt;*&gt; NFS server
      [*] NFSv3 server
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*] Alpha OSF partition support
  Native Language Support
    &lt;*&gt; NLS ISO 8859-1

Sound ---&gt;
  &lt;M&gt; Sound card support
    &lt;M&gt; OSS sound modules
      [*] Verbose initialisation
      [*] Persistent DMA buffers
      &lt;M&gt; 100% Sound Blaster compatibles
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compiler et installer</title>
<body>

<p>
Maintenant que votre noyau est configuré, il est temps de le compiler et de
l'installer. Quittez la configuration et lancez la compilation&nbsp;:
</p>

<pre caption="Compiler le noyau">
<comment>(pour les noyaux 2.4)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(Pour les noyaux 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>

<comment>(Et ensuite, quel que soit le noyau)</comment>
# <i>make boot</i>
</pre>

<p>
Lorsque la compilation est terminée, copiez l'image du noyau dans
<path>/boot</path>. Certains noyaux récents créent <path>vmlinux</path> au lieu
de <path>vmlinux.gz</path>.
</p>

<pre caption="Installer le noyau">
# <i>cp arch/alpha/boot/vmlinux.gz /boot/</i>
</pre>

<p>
Maintenant, poursuivez votre lecture avec <uri link="#kernel_modules">Installer
des modules du noyau individuels</uri>.
</p>

</body>
</subsection>
</section>
<section id="genkernel">
<title>Alternative&nbsp;: utiliser genkernel</title>
<body>

<p>
Si vous lisez cette section, vous avez choisi d'utiliser le script
<c>genkernel</c> pour configurer votre noyau pour vous.
</p>

<p>
Maintenant que l'arbre des sources de votre noyau est installé, il est
temps de compiler ce noyau à l'aide du script <c>genkernel</c> qui construira
automatiquement un noyau dont la configuration sera presque identique à celle
du noyau du CD d'installation. Cela signifie que si vous utilisez <c>genkernel</c> pour
construire votre noyau, votre système détectera généralement tout votre
matériel au moment de l'amorçage, à la manière du CD d'installation. Puisque genkernel ne
requiert aucune configuration manuelle, il s'agit d'une solution idéale pour
l'utilisateur rebuté par l'idée de compiler son propre noyau.
</p>

<p>
Maintenant, voyons comment utiliser genkernel. D'abord, installez
genkernel comme suit&nbsp;:
</p>

<pre caption="Installer genkernel">
# <i>emerge genkernel</i>
</pre>

<p>
Ensuite, compilez les sources du noyau en exécutant <c>genkernel all</c>.
Puisque <c>genkernel</c> compile un noyau qui supporte presque n'importe quel
matériel, ne soyez pas surpris que la compilation demande un temps considérable.
</p>

<p>
Veuillez noter que si votre partition de démarrage utilise un autre système de
fichiers que ext2 ou ext3, vous devez compiler le support de celui-ci dans le
noyau (donc pas comme module) avec la commande <c>genkernel --menuconfig
all</c>.
</p>

<pre caption="Exécuter genkernel">
# <i>genkernel all</i>
GenKernel v3.0.1_beta10
* ARCH: Alpha
* KERNEL VER: 2.6.11.2
* kernel: configuring source
* kernel: running mrproper
<comment>(La sortie du programme a été tronquée pour améliorer la lisibilité.)</comment>
* Kernel compiled successfully!
* Required Kernel Params:
*   : root=/dev/ram0 init=/linuxrc real_root=/dev/$ROOT
*     where $ROOT is the devicenode for your root partition as
*     you should have specified in /etc/fstab
*
* You MUST tell your bootloader to use the generated initrd
*
* Recommended Kernel Params:
*   : vga=0x317 splash=verbose
*
* Do NOT report kernel bugs (configs included) as genkernel bugs.
* Make sure you have the latest genkernel before reporting bugs
*
* For more info see /usr/share/genkernel/README
</pre>

<p>
Lorsque <c>genkernel</c> aura fini son travail, un noyau, un ensemble complet
de modules et un «&nbsp;initial root disk&nbsp;» (initrd) auront été créés.
Le noyau et le initrd seront utilisés plus tard lors de la configuration du
chargeur de démarrage. Notez bien les noms du noyau et du initrd puisque vous
devrez les spécifier lors de l'écriture du fichier de configuration du chargeur
de démarrage. Le initrd sera démarré immédiatement après l'amorçage afin de
réaliser l'autodétection du matériel (tout comme pour le CD d'installation) avant que
votre «&nbsp;véritable&nbsp;» système ne démarre.
</p>

<pre caption="Vérifier les noms de l'image du noyau et du fichier initrd">
# <i>ls /boot/kernel* /boot/initramfs*</i>
</pre>

<p>
Afin d'obtenir un système plus semblable encore à celui du CD d'installation,
effectuons une dernière étape&nbsp;: l'installation de <c>coldplug</c>. Alors
que initrd autodétecte le matériel nécessaire au démarrage du système,
<c>coldplug</c> autodétecte tout le reste. Pour l'installer et l'activer,
utilisez les commandes suivantes&nbsp;:
</p>

<pre caption="Installer et activer coldplug">
# <i>emerge coldplug</i>
# <i>rc-update add coldplug boot</i>
</pre>

</body>
</section>
<section id="kernel_modules">
<title>Installer des modules du noyau individuels</title>
<subsection>
<title>Installer des modules supplémentaires</title>
<body>

<p>
Si nécessaire, vous devrez installer les paquets appropriés pour le support du
matériel supplémentaire présent sur votre système. Voici une liste d'ebuilds
que vous pouvez utiliser pour installer ces paquets&nbsp;:
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>Ebuild</th>
  <th>But</th>
  <th>Commande</th>
</tr>
<tr>
  <ti>x11-drm</ti>
  <ti>
    Accélération graphique pour les cartes ATI Radeon jusqu'à 9200, Rage128,
    Matrox, Voodoo et d'autres cartes pour xorg-x11. Vous devriez vérifier la
    variable <c>IUSE_VIDEO_CARDS</c> dans l'ebuild
    <path>/usr/portage/x11-base/x11-drm</path> pour connaître les valeurs
    disponibles pour «&nbsp;votre_carte&nbsp;».
  </ti>
  <ti><c>VIDEO_CARDS="votre_carte" emerge x11-drm</c></ti>
</tr>
</table>

<p>
Faites attention, car certains de ces paquets ont de nombreuses dépendances.
Pour vérifier quels paquets seront installés lorsque vous utiliserez un
ebuild donné, utilisez <c>emerge --pretend</c>. Voici un exemple, avec le
paquet <c>x11-drm</c>&nbsp;:
</p>

<pre caption="Examiner la liste des paquets qui seront installés">
# <i>emerge --pretend x11-drm</i>
</pre>

</body>
</subsection>
<subsection>
<title>Configurer les modules</title>
<body>

<p>
Vous devriez indiquer la liste des modules que vous souhaitez charger
automatiquement dans <path>/etc/modules.autoload.d/kernel-2.4</path> (ou
<path>kernel-2.6</path>).  Vous pouvez également ajouter des options aux
modules si vous le souhaitez.
</p>

<p>
Pour dresser la liste des modules disponibles, exécutez la commande
<c>find</c> tel qu'indiqué ci-dessous. N'oubliez pas de substituer &lt;kernel
version&gt; par la version du noyau que vous venez juste de compiler&nbsp;:
</p>

<pre caption="Consulter la liste des modules disponibles">
# <i>find /lib/modules/&lt;version du noyau&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Par exemple, pour charger automatiquement le module <c>3c59x.o</c>, spécifiez-le
dans le fichier <path>kernel-2.4</path> ou <path>kernel-2.6</path> selon le
noyau que vous utilisez.
</p>

<pre caption="Modifier le fichier /etc/modules.autoload.d/kernel-2.4">
<comment>(Exemple pour un noyau 2.4.x)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="Exemple de fichier /etc/modules.autoload.d/kernel-2.4 ou kernel-2.6">
3c59x
</pre>

<p>
Poursuivez l'installation avec <uri link="?part=1&amp;chap=8">Configurer
votre système</uri>.
</p>

</body>
</subsection>
</section>
</sections>
