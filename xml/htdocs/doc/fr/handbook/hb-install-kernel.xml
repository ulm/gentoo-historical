<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/Attic/hb-install-kernel.xml,v 1.1 2004/01/09 15:10:01 neysx Exp $ -->

<sections>
<section>
<title>Installer les sources</title>
<subsection>
<title>Choisir un noyau</title>
<body>

<p>
Le cœur autour duquel sont bâties toutes les distributions est le noyau (en
anglais «&#x00A0;kernel&#x00A0;») Linux. Ce noyau est l'interface entre les
programmes utilisateur et le matériel. Gentoo offre un choix de plusieurs
noyaux à ses utilisateurs.  Une liste complète, accompagnée de descriptions,
est disponible dans le <uri link="/doc/fr/gentoo-kernel.xml"> Guide du noyau
Linux</uri>.
</p>

<p>
Pour les systèmes x86, nous offrons, en autres, les <c>vanilla-sources</c> (le
noyau par défaut produit par les développeurs du noyau Linux), les
<c>gentoo-sources</c> (un noyau modifié par l'ajout de fonctionnalités servant à
améliorer les performances), <c>xfs-sources</c> (un noyau avec le support
le plus récent possible pour XFS), <c>gs-sources</c> (un noyau modifié pour
l'utilisation sur des serveurs), <c>gaming-sources</c> (un noyau modifié pour
obtenir des performances optimales avec les jeux) ...
</p>

<p>
Pour les systèmes Alpha, nous offrons les <c>vanilla-sources</c> (le
noyau par défaut produit par les développeurs du noyau Linux), les
<c>alpha-sources</c> (un noyau optimisé pour les utilisateurs de systèmes
Alpha) et <c>compaq-sources</c> (le noyau utilisé par RedHat pour les systèmes
Alpha et développé par Compaq).
</p>

<p>
Pour les systèmes SPARC, nous offrons les <c>vanilla-sources</c> (le
noyau par défaut produit par les développeurs du noyau Linux) et les
<c>sparc-sources</c> (un noyau optimisé pour les utilisateurs de systèmes
SPARC).
</p>

<p>
Les systèmes MIPS peuvent être utilisés avec les <c>mips-sources</c> (le noyau
par défaut pour l'architecture MIPS) et les <c>mips-prepatch-sources</c> (le
noyau actuellement en développement pour MIPS).
</p>

<p>
Pour les systèmes AMD64, nous offrons les <c>gentoo-dev-sources</c> (les
sources du noyau 2.6 patchées avec des correctifs spécifiques pour AMD64 qui
améliorent la stabilité, les performances et le support matériel).
</p>

<p>
Pour les autres architectures, le noyau approprié spécialement optimisé devrait
être utilisé&#x00A0;: <c>hppa-sources</c> (HPPA) ou <c>ppc-sources</c>
(PowerPC).
</p>

<p>
Choisissez les sources à utiliser pour votre noyau et installez-les avec
<c>emerge</c>. À partir de maintenant, nous utiliserons <c>emerge --usepkg</c>,
ce qui installera des paquets précompilés si ces derniers sont disponibles
(c'est le cas pour les utilisateurs de la GRP) ou, sinon, téléchargera les
paquets. En d'autres termes, si vous n'utilisez pas de paquets précompilés,
vous pouvez omettre l'option <c>--usepkg</c> bien que ce ne soit pas
nécessaire. De plus, vous pouvez utiliser l'option abréviée <c>-k</c> au lieu
de <c>--usepkg</c>.
</p>

<p>
L'exemple suivant détaille l'installation des <c>vanilla-sources</c> (puisque
les <c>gentoo-sources</c> ne sont pas disponibles pour toutes les
architectures). Bien sûr, substituez ces sources par celles de votre choix.
</p>

<pre caption="Installer les sources d'un noyau">
# <i>emerge --usepkg vanilla-sources</i>
</pre>

<p>
Si vous examinez le contenu de <path>/usr/src</path>, vous devriez voir un lien
symbolique nommé <path>linux</path> pointant vers les sources de votre
noyau&#x00A0;:
</p>

<pre caption="Examiner le lien symbolique vers le noyau">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.22
</pre>

<p>
Si ce n'est pas le cas (le lien symbolique pointe vers un noyau différent),
changez le lien avant de continuer&#x00A0;:
</p>

<pre caption="Changer le lien symbolique vers les sources du noyau">
# <i>rm /usr/src/linux &amp;&amp; ln -s /usr/src/linux-2.4.22 /usr/src/linux</i>
</pre>

<p>
Il est maintenant temps de configurer et de compiler votre noyau. Pour tous les
systèmes basés sur l'architecture x86, vous pouvez utiliser <c>genkernel</c>
pour cette tâche. Celui-ci construira un noyau générique tel que celui utilisé
par le LiveCD. Toutefois, nous expliquerons d'abord la configuration 
«&#x00A0;manuelle&#x00A0;», puisque c'est la meilleure façon d'optimiser votre
environnement.
</p>

<p>
Si vous souhaitez configurer manuellement votre noyau, poursuivez votre
lecture avec <uri link="#doc_chap2">Par défaut&#x00A0;: configuration
manuelle</uri>.
Si vous avez un système x86 et souhaitez utiliser <c>genkernel</c>, vous
devriez plutôt lire <uri link="#doc_chap3">Alternative&#x00A0;: utiliser
genkernel</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Par défaut : configuration manuelle</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Configurer un noyau est parfois considéré comme la tâche la plus ardue que les
utilisateurs de Linux doivent accomplir. Rien n'est moins vrai&#x00A0;... Après
avoir configuré quelques noyaux, vous ne vous rappellerez même plus que c'était
difficile ;)
</p>

<p>
Toutefois, une chose est vraie&#x00A0;: vous devez connaître votre système pour
configurer manuellement un noyau. La majeure partie de cette information peut
être obtenue en examinant le contenu de <path>/proc/pci</path> (ou en utilisant
<c>lspci</c>, s'il est disponible). Vous pouvez aussi exécuter <c>lsmod</c>
pour voir quels modules du noyau sont utilisés par le LiveCD (ce qui peut vous
donner des indices sur les fonctionnalités nécessaires).
</p>

<p>
Maintenant, allez dans le dossier des sources du noyau et exécutez <c>make
menuconfig</c>. Cela ouvrira un menu de configuration basé sur ncurses.
</p>

<pre caption="Lancer menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Plusieurs sections d'options de configuration s'afficheront. Nous allons
d'abord dresser la liste de certaines options que vous devez activer (sinon,
Gentoo ne fonctionnera pas, ou du moins pas sans quelques réglages
additionnels).
</p>

</body>
</subsection>
<subsection>
<title>Activer les options requises</title>
<body>

<p>
Avant toute chose, activez l'utilisation du code et des pilotes en
développement ou expérimentaux. C'est absolument nécessaire&#x00A0;; si vous ne le
faites pas, des options très importantes ne seront pas affichées.
</p>

<pre caption="Sélectionnez le code et les pilotes expérimentaux">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers"
</pre>

<p>
Allez à la section <c>File Systems</c> et activez le support nécessaire pour
les systèmes de fichiers que vous utilisez. Ne les compilez <e>pas</e> sous
forme de modules, sinon votre système Gentoo ne pourra pas monter vos
partitions. Activez aussi <c>Virtual memory</c>, <c>/proc
file system</c> et <c>/dev file system</c> + <c>Automatically mount at boot</c>.
</p>

<pre caption="Activer le support pour les systèmes de fichiers">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot

<comment>(Déselectionnez l'option suivante, sauf si vous utilisez un noyau 2.6.)</comment>
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Sélectionnez une ou plusieurs des options suivantes selon les besoins de votre système.)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
Si vous utilisez un noyau 2.6, vous trouverez certaines des options mentionnées
ci-dessus dans la section<c>Pseudo filesystems</c> qui est une sous-section
de <c>File systems</c>.
</note>

<p>
Si vous utilisez PPPoE pour vous connecter à Internet, vous aurez besoin des
options du noyau suivantes&#x00A0;:
</p>

<pre caption="Sélection des pilotes PPPoE requis">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<note>
Si vous utilisez un noyau 2.6, vous trouverez certaines des options 
mentionnées ci-dessus dans <c>Networking support</c> qui est une sous-section
de <c>Device Drivers</c>.
</note>

<p>
Les deux options de compression ne vous feront pas de mal, mais ne sont pas
absolument nécessaires. L'option <c>PPP over Ethernet</c> n'est pas obligatoire
non plus, considérant qu'elle pourrait n'être utilisée que par <c>rp-pppoe</c>
lorsque ce dernier est configuré pour utiliser PPPoE en mode noyau.
</p>

<p>
Si vous utilisez LVM, vous devez l'activer dans le noyau&#x00A0;:
</p>

<pre caption="Sélection du support pour LVM">
Multi-device support (RAID and LVM) ---&gt;
  [*] Multiple devices driver support (RAID and LVM)
  &lt;*&gt;  Logical volume manager (LVM) support
</pre>

<note>
Si vous utilisez un noyau 2.6, vous trouverez les options mentionnées ci-dessus
dans <c>Device Drivers</c>.
</note>

<p>
Si vous en avez besoin, n'oubliez pas d'ajouter le support pour votre
carte ethernet.
</p>

<p>
Selon votre architecture, vous souhaiterez peut-être activer des options
supplémentaires&#x00A0;:
</p>

<ul>
<li>
<uri link="#doc_chap2_sect3">Activer les options recommandées pour x86</uri>
</li>
<li>
<uri link="#doc_chap2_sect4">Activer les options recommandées pour Alpha</uri>
</li>
<li>
<uri link="#doc_chap2_sect5">Activer les options recommandées pour HPPA</uri>
</li>
<li>
<uri link="#doc_chap2_sect6">Activer les options recommandées pour PPC</uri>
</li>
<li>
<uri link="#doc_chap2_sect7">Activer les options recommandées pour SPARC</uri>
</li>
<li>
<uri link="#doc_chap2_sect8">Activer les options recommandées pour MIPS</uri>
</li>
</ul>

</body>
</subsection>
<subsection>
<title>Activer les options recommandées pour x86</title>
<body>

<p>
Si vous avez un microprocesseur Intel qui supporte la technologie
HyperThreading™ ou si vous avez un système à plusieurs CPU, vous devriez
activer «&#x00A0;Symmetric multi-processing support&#x00A0;»&#x00A0;:
</p>

<pre caption="Activer le support pour SMP">
Processor type and features  ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Activer les options recommandées pour Alpha</title>
<body>

<p>
Les options suivantes sont recommandées pour les utilisateurs de systèmes 
Alpha&#x00A0;:
</p>

<pre caption="Options spécifiques aux systèmes Alpha">
General setup ---&gt;
  &lt;*&gt; SRM environment through procfs
  &lt;*&gt; Configure uac policy via sysctl

Plug and Play configuration ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;M&gt;   ISA Plug and Play support

SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; SYM53C8XX Version 2 SCSI support (NEW)
    &lt;*&gt; Qlogic ISP SCSI support

Network device support ---&gt;
  Ethernet (10 or 100 Mbit) ---&gt;
    &lt;M&gt; DECchip Tulip (dc21x4x) PCI support
    &lt;M&gt; Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA
    &lt;M&gt; EtherExpressPro/100 support (eepro100)
    &lt;M&gt; EtherExpressPro/100 support (e100)
  Ethernet (1000 Mbit) ---&gt;
    &lt;M&gt; Alteon AceNIC
      [*] Omit support for old Tigon I
    &lt;M&gt; Broadcom Tigon3
  [*] FDDI driver support
  &lt;M&gt; Digital DEFEA and DEFPA
  &lt;*&gt; PPP support
    &lt;*&gt; PPP Deflate compression

Character devices ---&gt;
  [*] Support for console on serial port
  [*] Direct Rendering Manager

File systems ---&gt;
  &lt;*&gt; Kernel automounter version 4 support
  Network File Systems ---&gt;
    &lt;*&gt; NFS
      [*] NFSv3 client
      &lt;*&gt; NFS server
      [*] NFSv3 server
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*] Alpha OSF partition support
  Native Language Support
    &lt;*&gt; NLS ISO 8859-1

Sound ---&gt;
  &lt;M&gt; Sound card support
    &lt;M&gt; OSS sound modules
      [*] Verbose initialisation
      [*] Persistent DMA buffers
      &lt;M&gt; 100% Sound Blaster compatibles
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Activer les options recommandées pour HPPA</title>
<body>

<p>
Si vous avez une souris ou un clavier HIL, n'oubliez pas de compiler le support
correspondant.
</p>

<pre caption="Activer le support HIL">
Input core support ---&gt;
  [*] Keyboard support
  [*] Mouse support
  [*] Event interface support
</pre>

<p>
Si vous n'avez pas de souris sur votre port HIL, utilisez seulement le support
de base&#x00A0;:
</p>

<pre caption="Support HIL de base">
HIL support ---&gt;
  [*] HIL Keyboard (basic) support
</pre>

<p>
Toutefois, si vous souhaitez un support HIL complet, sélectionnez les options
suivantes&#x00A0;:
</p>

<pre caption="Support HIL complet">
HIL support ---&gt;
  [*] HP System Device Controller i8042 Support
  [*] HIL MLC Support
  [*] HIL Keyboard (full) support
  [*] HIL Mouse &amp; Pointer support
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Activer les options recommandées pour PPC</title>
<body>

<p>
Avant tout, désactivez les «&#x00A0;ADB raw keycodes&#x00A0;»&#x00A0;:
</p>

<pre caption="Désactiver les «&#x00A0;ADB raw keycodes&#x00A0;»">
Macintosh Device Drivers ---&gt;
  [ ] Support for ADB raw keycodes
</pre>

<p>
Choisissez également le support RTC correct pour votre système.
(<e>Désactivez</e> l'option <c>Enhanced RTC</c>.)
</p>

<pre caption="Activer l'option RTC appropriée">
Character devices ---&gt;
  [ ] Enhanced RTC

General setup ---&gt;
  [*] Support for /dev/rtc
</pre>

<p>
Les utilisateurs de machines OldWorld souhaiteront activer le support de HFS
afin de pouvoir copier des noyaux compilés sur leur partition MacOS.
</p>

<pre caption="Activer le support HFS">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Activer les options recommandées pour SPARC</title>
<body>

<p>
D'abord, activez le support du bus approprié&#x00A0;:
</p>

<pre caption="Activer SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>(Seulement pour le « UPA slot adapter » souvent présent dans les machines Ultra.)</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Seulement pour le « SBUS slot adapter » souvent présent dans les machines SPARCStations.)</comment>
</pre>

<p>
Bien sûr, vous désirerez activer le support pour OBP&#x00A0;:
</p>

<pre caption="Activer le support OBP">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
Vous aurez aussi besoin de pilotes SCSI spécifiques&#x00A0;:
</p>

<pre caption="Activer les pilotes SCSI spécifiques">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>(Seulement pour l'adaptateur SCSI intégré SPARC ESP.)</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>(Seulement pour les contrôleurs SCSI SBUS de PTI et QLogic.)</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>(Seulement pour l'adaptateur SCSI intégré Ultra 60.)</comment>
</pre>

<p>
Pour le support de votre carte réseau, choisissez une des options 
suivantes&#x00A0;:
</p>

<pre caption="Activer le support réseau">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                  <comment>(Seulement pour les SPARCStation, les vieux systèmes Ultra et comme option Sbus.)</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support <comment>(Seulement pour les Ultra ; supporte aussi le « qfe quad-ethernet » sur PCI et Sbus.)</comment>
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>. Après la
compilation, vérifiez la taille du noyau :
</p>

<pre caption="Vérifier la taille du noyau">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
Si la taille (sans compression) est supérieure à 2,5&#x00A0;Mo (pour Sparc32) ou à
3,5&#x00A0;Mo (pour Sparc64), reconfigurez votre noyau jusqu'à ce que sa taille ne
dépasse plus cette limite. Une des façons de faire est de compiler la plupart
des pilotes du noyau comme des modules. Si vous ignorez cette étape, vous
obtiendrez peut-être un noyau incapable de démarrer.
</p>

<p>
Toutefois, si votre noyau est un tout petit peu trop gros, vous pouvez essayer
la commande <c>strip</c> pour le raccourcir&#x00A0;:
</p>

<pre caption="Raccourcir le noyau">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection>
<title>Activer les options recommandées pour MIPS</title>
<body>

<p>
Si vous utilisez un système Indy/Indigo2, vous devez activer le support pour
celui-ci&#x00A0;:
</p>

<pre caption="Activer SGI IP22">
Machine selection ---&gt;
  [*] Support for SGI IP22 (Indy/Indigo2)
</pre>

<p>
Si vous voulez utiliser des exécutables IRIX, ajoutez l'option suivante&#x00A0;:
</p>

<pre caption="Activer le support des exécutables IRIX">
General setup ---&gt;
  [*] Include IRIX binary compatibility
</pre>

<p>
Si vous avez des cartes ISA/EISA dans votre SGI Indigo2, activez le support
nécessaire à leur utilisation&#x00A0;:
</p>

<pre caption="Activer le support ISA/EISA pour SGI Indigo2">
General setup ---&gt;
  [*] Indigo-2 (IP22) EISA bus support
  [*]   ISA bus support
</pre>

<p>
Si vous avez un port parallèle SGI, vous pouvez activer le support pour ce
dernier. Si vous avez un port parallèle ISA, vous devriez plutôt choisir 
«&#x00A0;PC-Style hardware&#x00A0;».
</p>

<pre caption="Activer le support pour le port parallèle SGI">
Parallel port support  ---&gt;
  &lt;*&gt; Parallel port support
  &lt;*&gt;   SGI Indy/Indigo2 hardware (EXPERIMENTAL) (NEW)
  &lt;*&gt;   IEEE 1284 transfer modes (NEW)
</pre>

<p>
Si vous souhaitez utiliser les connecteurs ISA d'un Indigo2, activez le support 
«&#x00A0;plug and play&#x00A0;»&#x00A0;:
</p>

<pre caption="Activer le support PnP pour ISA">
Plug and Play configuration  ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;*&gt;   ISA Plug and Play support
</pre>

<p>
N'oubliez pas d'activer le support SCSI et d'utiliser le pilote SGI 
WD93C93&#x00A0;:
</p>

<pre caption="Activer le pilote WD93C93">
SCSI low-level drivers  ---&gt;
  &lt;*&gt; SGI WD93C93 SCSI Driver
</pre>

<p>
Pour vos cartes réseau, vous aurez probablement besoin du support pour le
contrôleur ethernet SGI Seeq&#x00A0;:
</p>

<pre caption="Activer le support pour SGI Seeq">
Network device support  ---&gt;
  Ethernet (10 or 100Mbit)  ---&gt;
    [*] Ethernet (10 or 100Mbit)
    [*]   SGI Seeq ethernet controller support
</pre>

<p>
N'oubliez pas d'activer le support de la console série et celui de SGI
Zilog85C30&#x00A0;:
</p>

<pre caption="Activer le support pour SGI Zilog85C30">
Character devices ---&gt;
  [*] Non-standard serial port support
  [*]   SGI Zilog85C30 serial support
</pre>

<p>
N'oubliez pas non plus d'activer le support du Indy/12 Watchdog ainsi que du
SGI DS1286 RTC&#x00A0;:
</p>

<pre caption="Activer le support de Watchdog et de RTC">
Character Devices ---&gt;
  [*] SGI DS1286 RTC support
  Watchdog Cards  ---&gt;
    [*] Watchdog Timer Support
    &lt;*&gt;   Indy/I2 Hardware Watchdog
</pre>

<p>
Vous devriez aussi activer le support pour les partitions SGI :)
</p>

<pre caption="Activer le support pour les partitions SGI">
File Systems ---&gt;
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*]   SGI partition support
</pre>

<p>
Si vous avez une carte SGI Newport (XL Gfx) et que vous souhaitez l'utiliser,
vous devriez activer le support correspondant&#x00A0;:
</p>

<pre caption="Activer le support de la carte SGI Newport">
Console drivers  ---&gt;
  &lt;*&gt; SGI Newport Console support (NEW)
</pre>

<p>
Si vous voulez avoir un support pour le son avec votre Indy/Indigo2, 
ajoutez-le :
</p>

<pre caption="Activer le support pour SGI HAL2">
Sound  ---&gt;
  &lt;*&gt; Sound card support
  &lt;*&gt;   SGI HAL2 sound (EXPERIMENTAL)
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Activer les options recommandées pour AMD64</title>
<body>

<p>
Si vous avez un système Opteron à plusieurs processeurs, activez l'option
«Symmetric multi-processing support»&#x00A0;:
</p>

<pre caption="Activer le support SMP">
Processor type and features ---&gt;
  [*] Symmetric multi-processing support
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>

<subsection id="compiling">
<title>Compiler et installer</title>
<body>

<p>
Maintenant que votre noyau est configuré, il est temps de le compiler et de
l'installer. Quittez la configuration et exécutez <c>make dep &amp;&amp; make
bzImage modules modules_install</c>&#x00A0;:
</p>

<pre caption="Compiler le noyau">
<comment>(Pour les systèmes x86, noyau 2.4)</comment>
# <i>make dep &amp;&amp; make bzImage modules modules_install</i>

<comment>(pour les autres systèmes, noyau 2.4)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(pour les systèmes AMD64, noyau 2.6)</comment>
# <i>make bzImage modules modules_install</i>

<comment>(Pour les autres systèmes, noyau 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Lorsque la compilation est terminée, copiez l'image du noyau dans
<path>/boot</path>. Dans l'exemple suivant, nous supposons que les
<c>vanilla-sources-2.4.22</c> ont été configurées puis compilées&#x00A0;:
</p>

<pre caption="Installer le noyau">
<comment>(Pour les sytèmes x86)</comment>
# <i>cp arch/i386/boot/bzImage /boot/kernel-2.4.22</i>
# <i>cp System.map /boot/System.map-2.4.22</i>

<comment>(pour les systèmes AMD64)</comment>
# <i>cp arch/x86_64/boot/bzImage /boot/kernel-2.4.22</i>

<comment>(Pour les autres systèmes)</comment>
# <i>cp vmlinux /boot/kernel-2.4.22</i>
# <i>cp System.map /boot/System.map-2.4.22</i>
</pre>

<p>
Il est également sage de copier la configuration du noyau dans 
<path>/boot</path>. Juste au cas où&#x00A0;... :)
</p>

<pre caption="Faire une copie de sécurité de la configuration du noyau">
# <i>cp .config /boot/config-2.4.22</i>
</pre>

<p>
Si vous utilisez MIPS et que votre système ne peut amorcer à partir des noyaux
ELF, compilez le noyau en utilisant <c>make vmlinux.ecoff</c> plutôt que <c>make
vmlinux</c>. L'image du noyau sera sauvegardée sous
<path>arch/mips/boot/vmlinux.ecoff</path> plutôt que sous <path>vmlinux</path>.
</p>

<p>
Maintenant, poursuivez votre lecture avec <uri link="#doc_chap4">Installer
des modules du noyau individuels</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Alternative : utiliser genkernel</title>
<body>

<p>
Si vous lisez cette section, vous avez choisi d'utiliser le script
<c>genkernel</c> pour configurer votre noyau pour vous. Toutefois, cela
implique que vous utilisez un système x86. Les autres architectures <e>ne sont
pas</e> supportées par <c>genkernel</c>. <!-- TODO: Add ppc as it should be
available with the first 2004 release -->
</p>

<p>
Maintenant que l'arborescence des sources de votre noyau est installée, il est
temps de compiler ce noyau à l'aide du script <c>genkernel</c> qui construira
automatiquement un noyau dont la configuration sera presque identique à celle
du noyau du LiveCD. Cela signifie que si vous utilisez <c>genkernel</c> pour
construire votre noyau, votre système détectera généralement tout votre
matériel au moment de l'amorçage, à la manière du LiveCD. Puisque genkernel ne
requiert aucune configuration manuelle, il s'agit d'une solution idéale pour
les utilisateurs rebutés par l'idée de compiler son propre noyau.
</p>

<p>
Maintenant, voyons comment utiliser genkernel. D'abord, installez
genkernel comme suit&#x00A0;:
</p>

<pre caption="Installer genkernel">
# <i>emerge --usepkg genkernel</i>
</pre>

<p>
Ensuite, compilez les sources du noyau en exécutant <c>genkernel</c>.
Puisque <c>genkernel</c> compile un noyau qui supporte presque n'importe quel
matériel, ne soyez pas surpris que la compilation demande un temps considérable.
</p>

<pre caption="Exécuter genkernel">
# <i>genkernel</i>
Gentoo Linux genkernel, version 1.4
Copyright 2003 Gentoo Technologies, Inc., Bob Johnson, Daniel Robbins
Distributed under the GNU General Public License version 2

Settings:
compile optimization: 1 processor(s)
source tree: /usr/src/linux-2.4.22
config: gentoo (customized)
config loc: /etc/kernels/config-2.4.22
initrd config: (default) /etc/kernels/settings

* Running "make oldconfig"...                                                                     [ ok ]
* Logging to /var/log/genkernel.log...                                                            [ ok ]
* Starting 2.4.22 build...                                                                        [ ok ]
* Running "make dep"...                                                                           [ ok ]
* Running "make bzImage"...                                                                       [ ok ]
* Running "make modules"...                                                                       [ ok ]
* Running "make modules_install"...                                                               [ ok ]
* Moving bzImage to /boot/kernel-2.4.22...                                                        [ ok ]
* Building busybox...                                                                             [ ok ]
* Creating initrd...                                                                              [ ok ]

* Build completed successfully!

* Please specify /boot/kernel-2.4.22 and /boot/initrd-2.4.22
* when customizing your boot loader configuration files.
</pre>

<p>
Lorsque <c>genkernel</c> aura fini son travail, un noyau, un ensemble complet
de modules et un «&#x00A0;initial root disk&#x00A0;» (initrd) auront été créés.
Le noyau et le initrd seront utilisés plus tard lors de la configuration du
chargeur de démarrage. Notez bien les noms du noyau et du initrd puisque vous
devrez les spécifier lors de l'écriture du fichier de configuration du chargeur
de démarrage. Le initrd sera démarré immédiatement après l'amorçage afin de
réaliser l'autodétection du matériel (tout comme pour le LiveCD) avant que
votre «&#x00A0;véritable&#x00A0;» système ne démarre.
</p>

<p>
Afin d'obtenir un système plus semblable encore à celui du LiveCD, effectuons
une dernière étape&#x00A0;: l'installation de <c>hotplug</c>. Alors que initrd 
autodétecte le matériel nécessaire au démarrage du système, <c>hotplug</c>
autodétecte tout le reste. Pour l'installer et l'activer, utilisez les commandes
suivantes&#x00A0;:
</p>

<pre caption="Installer et activer hotplug">
# <i>emerge --usepkg hotplug</i>
# <i>rc-update add hotplug default</i>
</pre>

</body>
</section>
<section>
<title>Installer des modules du noyau individuels</title>
<subsection>
<title>Installer des modules supplémentaires</title>
<body>

<p>
Si nécessaire, vous devrez installer les paquets appropriés pour le support du
matériel supplémentaire présent sur votre système. Voici une liste d'ebuilds
que vous pouvez utiliser pour installer ces paquets&#x00A0;:
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>ebuild</th>
  <th>Support fourni</th>
  <th>Commande</th>
</tr>
<tr>
  <ti>nvidia-kernel</ti>
  <ti>Accélération graphique pour les cartes NVIDIA (pour XFree86)</ti>
  <ti><c>emerge --usepkg nvidia-kernel</c></ti>
</tr>
<tr>
  <ti>nforce-net</ti>
  <ti>Contrôleur ethernet intégré aux cartes mères NVIDIA NForce(2)</ti>
  <ti><c>emerge nforce-net</c></ti>
</tr>
<tr>
  <ti>nforce-audio</ti>
  <ti>Périphérique de son intégré aux cartes mères NVIDIA NForce(2)</ti>
  <ti><c>emerge nforce-audio</c></ti>
</tr>
<tr>
  <ti>e100</ti>
  <ti>Adaptateurs e100 Fast Ethernet de Intel</ti>
  <ti><c>emerge e100</c></ti>
</tr>
<tr>
  <ti>e1000</ti>
  <ti>Adaptateurs e1000 Gigabit Ethernet de Intel</ti>
  <ti><c>emerge e1000</c></ti>
</tr>
<tr>
  <ti>emu10k1</ti>
  <ti>Cartes son Creative Sound Blaster Live!/Audigy</ti>
  <ti><c>emerge emu10k1</c></ti>
</tr>
<tr>
  <ti>ati-drivers</ti>
  <ti>
    Accélération graphique pour les cartes ATI Radeon 8500+/FireGl
    (pour XFree86)
  </ti>
  <ti><c>emerge ati-drivers</c></ti>
</tr>
<tr>
  <ti>xfree-drm</ti>
  <ti>
    Accélération graphique pour les cartes ATI Radeon jusqu'à 9200, Rage128,
    Matrox, Voodoo et d'autres cartes (pour XFree86)
  </ti>
  <ti><c>VIDEO_CARDS="votre_carte" emerge xfree-drm</c></ti>
</tr>
</table>

<p>
Faites attention, car certains de ces paquets ont de nombreuses dépendances.
Pour vérifier quels paquets seront installés lorsque vous utiliserez un
ebuild donné, utilisez <c>emerge --pretend</c>. Voici un exemple, avec le
paquet <c>emu10k1</c>&#x00A0;:
</p>

<pre caption="Examiner la liste des paquets qui seront installés">
# <i>emerge --pretend emu10k1</i>
</pre>

<p>
Si vous n'êtes pas satisfait des paquets qui seront installés, utilisez
<c>emerge --pretend --verbose</c> pour voir quelles options de la variable USE
ont une influence sur les dépendances.
</p>

<pre caption="Examiner l'effet des options de USE">
# <i>emerge --pretend --verbose emu10k1</i>
<comment>...</comment>
[ebuild  N    ] media-sound/aumix-2.8  +gpm +nls +gtk +gnome +alsa -gtk2
</pre>

<p>
Dans l'exemple précédent, vous pouvez voir que l'une des dépendances de
<c>emu10k1</c> (<c>aumix</c>) utilise les options <c>gtk</c> et <c>gnome</c>,
ce qui implique que gtk (qui, en retour, dépend de Xfree) sera compilé aussi.
</p>

<p>
Si vous ne voulez pas que tout cela soit compilé, désélectionnez toutes ces
options de USE&#x00A0;:
</p>

<pre caption="Installer emu10k1 avec toutes les options de USE déselectionnées">
# <i>USE="-gpm -nls -gtk -gnome -alsa" emerge --pretend emu10k1</i>
</pre>

<p>
Si vous êtes satisfait des résultats, enlevez l'option <c>--pretend</c> pour
débuter l'installation de <c>emu10k1</c>.
</p>

</body>
</subsection>
<subsection>
<title>Configurer les modules</title>
<body>

<p>
Si vous n'utilisez pas <c>hotplug</c>, vous devriez faire une liste des modules
que vous souhaitez charger automatiquement dans
<path>/etc/modules.autoload.d/kernel-2.4</path> (ou <path>kernel-2.6</path>).
Vous pouvez également ajouter des options aux modules si vous le souhaitez.
</p>

<p>
Pour dresser la liste des modules disponibles, exécutez la commande
<c>find</c> tel qu'indiqué ci-dessous. N'oubliez pas de substituer &lt;kernel
version&gt; par la version du noyau que vous venez juste de compiler&#x00A0;:
</p>

<pre caption="Consulter la liste des modules disponibles">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o'</i>
</pre>

<p>
Par exemple, pour charger automatiquement le module<c>3c59x.o</c> :
</p>

<pre caption="/etc/modules.autoload.d/kernel-2.4 ou kernel-2.6">
3c59x
</pre>

<p>
Exécutez maintenant <c>modules-update</c> pour incorporer vos changements au
fichier <path>/etc/modules.conf</path>&#x00A0;:
</p>

<pre caption="Exécuter modules-update">
# <i>modules-update</i>
</pre>

<p>
Poursuivez l'installation avec <uri link="?part=1&amp;chap=8">Configurer
votre système</uri>.
</p>

</body>
</subsection>
</section>
</sections>
