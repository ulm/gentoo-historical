<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-working-features.xml,v 1.15 2005/01/24 11:44:46 neysx Exp $ -->

<sections>

<version>1.24</version>
<date>2005-01-22</date>

<section>

<title>Les caractéristiques de Portage</title>
<body>

<p>
Portage offre un ensemble de fonctionnalités qui vous aident à mieux utiliser
Gentoo.  Certaines fonctionnalités sont basées sur des outils tiers qui
permettent d'améliorer les performances, la fiabilité, la sécurité, etc.
</p>

<p>
Pour activer ou désactiver certaines fonctionnalités, vous devez modifier la
variable <c>FEATURES</c> dans le fichier <path>/etc/make.conf</path>. Souvent,
vous devrez aussi installer l'outil requis pour utiliser la fonctionnalité
souhaitée.
</p>

<p>
Toutes les fonctionnalités disponibles ne sont pas reprises ici. Veuillez lire
la page man de <path>make.conf</path> pour en savoir plus.
</p>

<pre caption="Lire la page man de make.conf">
$ <i>man make.conf</i>
</pre>

<p>
Pour connaître les fonctionnalités qui sont actives sur votre système, utilisez
la commande <c>emerge --info</c> et regardez le contenu de la variable
«&nbsp;FEATURES&nbsp;».
</p>

<pre caption="Afficher les fonctionnalités actives">
$ <i>emerge --info | grep FEATURES</i>
</pre>

</body>
</section>
<section>
<title>Compilation distribuée</title>
<subsection>
<title>Utiliser distcc</title>
<body>

<p>
<c>distcc</c> est un programme qui permet de distribuer des compilations sur
plusieurs machines, pas nécessairement identiques, d'un réseau. Le client
<c>distcc</c> envoie toutes les données nécessaires aux serveurs distcc (qui
exécutent <c>distccd</c>) disponibles afin qu'ils puissent compiler des parties
du code source au profit du client. Le résultat est une compilation plus
rapide.
</p>

<p>
Vous trouverez une description plus élaborée de <c>distcc</c> (et des
informations sur la manière de le faire fonctionner avec Gentoo) dans notre
<uri link="/doc/fr/distcc.xml">Documentation Gentoo pour distcc</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Installation de distcc</title>
<body>

<p>
Distcc est fourni avec une interface graphique qui permet de suivre les tâches
de compilation que votre ordinateur envoie. Si vous utilisez Gnome, ajoutez
«&nbsp;gnome&nbsp;» à votre variable <c>USE</c>. Mais si vous n'utilisez pas
Gnome et souhaitez tout de même avoir une interface graphique, vous pouvez
ajouter «&nbsp;gtk&nbsp;» à votre variable <c>USE</c>.
</p>

<pre caption="Installer distcc">
# <i>emerge distcc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Activer le support distcc pour Portage</title>
<body>

<p>
Ajoutez le mot-clé <c>distcc</c> à la variable <c>FEATURES</c> du fichier
<path>/etc/make.conf</path>.  Ensuite, modifiez la variable <c>MAKEOPTS</c>
pour y ajouter <c>-jX</c> où <c>X</c> est le nombre de processeurs qui
exécutent <c>distccd</c> (l'hôte actuel inclus) plus un. Cette valeur
donne en général les meilleurs résultats, mais vous pouvez en essayer d'autres.
</p>

<p>
Ensuite, exécutez <c>distcc-config</c> et entrez la liste des serveurs distcc
disponibles. Pour donner un exemple simple, nous supposerons que les serveurs
distcc disponibles sont <c>192.168.1.102</c> (l'hôte actuel),
<c>192.168.1.103</c> et <c>192.168.1.104</c> (deux hôtes
«&nbsp;distants&nbsp;»)&nbsp;:
</p>

<pre caption="Configurer distcc pour qu'il utilise trois serveurs distcc">
# <i>distcc-config --set-hosts "192.168.1.102 192.168.1.103 192.168.1.104"</i>
</pre>

<p>
Bien entendu, n'oubliez pas de lancer le démon <c>distccd</c>&nbsp;:
</p>

<pre caption="Lancer le démon distccd">
# <i>rc-update add distccd default</i>
# <i>/etc/init.d/distccd start</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Utiliser un cache pour la compilation</title>
<subsection>
<title>À propos de ccache</title>
<body>

<p>
<c>ccache</c> est un cache rapide pour compilateur. Lorsque vous compilez un
programme, il mettra les résultats intermédiaires en cache afin que,
s'il vous arrive de recompiler le même programme, le temps de compilation soit
largement réduit. Avec des applications communes, cela peut entraîner des
compilations 5 à 10 fois plus rapides.
</p>

<p>
Si vous êtes intéressé par le fonctionnement interne de <c>ccache</c>, veuillez
visiter le <uri link="http://ccache.samba.org">site de ccache</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Installation de ccache</title>
<body>

<p>
Utilisez la commande <c>emerge ccache</c> pour installer <c>ccache</c>&nbsp;:
</p>

<pre caption="Installer ccache">
# <i>emerge ccache</i>
</pre>

</body>
</subsection>
<subsection>
<title>Activer le support ccache pour Portage</title>
<body>

<p>
Ajoutez le mot-clé <c>ccache</c> à la variable <c>FEATURES</c> du fichier
<path>/etc/make.conf</path>.  Ensuite, ajoutez la variable <c>CCACHE_SIZE</c>
qui définit la taille par défaut du cache utilisé par ccache. Une valeur de
2&nbsp;Go est recommandée.
</p>

<pre caption="Editer CCACHE_SIZE dans /etc/make.conf">
CCACHE_SIZE="2G"
</pre>

<p>
Pour vérifier que <c>ccache</c> fonctionne, vous pouvez exécuter <c>ccache
-s</c> pour afficher les statistiques de <c>ccache</c>&nbsp;:
</p>

<pre caption="Afficher les statistiques de ccache">
# <i>ccache -s</i>
</pre>

</body>
</subsection>
<subsection>
<title>Utilisation de ccache en dehors de Portage</title>
<body>

<p>
Si vous souhaitez utiliser ccache pour les compilations en dehors de celles de
Portage, vous pouvez ajouter <path>/usr/lib/ccache/bin</path> au début de votre
variable <c>PATH</c> (ou tout au moins avant <path>/usr/bin</path>). Pour cela,
éditez le fichier <path>/etc/profile</path>&nbsp;:
</p>

<pre caption="Modifier le fichier /etc/profile">
PATH="<i>/usr/lib/ccache/bin</i>:${PATH}"
</pre>

</body>
</subsection>
</section>
<section>
<title>Paquets binaires</title>
<subsection>
<title>Créer des paquets binaires</title>
<body>

<p>
Nous avons déjà parlé de l'utilisation de paquets précompilés, mais comment
crée-t-on son propre paquet précompilé&nbsp;?
</p>

<p>
Si le paquet est déjà installé, vous pouvez utiliser la commande
<c>quickpkg</c>. Si ce n'est pas le cas, utilisez les options
<c>--buildpkg</c> ou <c>--buildpkgonly</c> avec la commande <c>emerge</c>. La
deuxième option prépare un paquet binaire sans l'installer sur votre machine.
</p>

<p>
Si vous souhaitez que Portage construise par défaut des paquets binaires pour
tous les paquets que vous installez sur votre système, vous pouvez mettre le
mot-clé <c>builpkg</c> dans la variable <c>FEATURES</c> dans le fichier
<path>/etc/make.conf</path>.
</p>

<p>
Vous trouverez plus de détails à propos de la création de paquets binaires dans
la documentation de <c>catalyst</c> (en anglais)&nbsp;: <uri
link="/proj/en/releng/catalyst/reference.xml">Catalyst Reference Manual</uri>
et <uri link="/proj/en/releng/catalyst/catalyst-howto.xml">Catalyst
Howto</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Installer des paquets précompilés</title>
<body>

<p>
Bien que Gentoo ne fournisse pas de système centralisé de distribution de
paquets binaires, rien ne vous empêche d'en créer un. Vous pourriez très bien
stocker tous vos paquets binaires sur un serveur et utiliser celui-ci pour
mettre plusieurs machines à jour.  Pour utiliser un tel serveur, vous devez le
définir dans la variable <c>PORTAGE_BINHOST</c>. Si vous avez stocké vos
paquets sur un serveur ftp <path>ftp://buildhost/gentoo</path>, utilisez&nbsp;:
</p>

<pre caption="Définir PORTAGE_BINHOST dans /etc/make.conf">
PORTAGE_BINHOST="ftp://buildhost/gentoo"
</pre>

<p>
Quand vous voulez utliser un paquet binaire pour installer une application,
spécifiez l'option <c>--getbinpkg</c> en plus de <c>--usepkg</c> avec la
commande <c>emerge</c>.  La première option indique à Portage de télécharger
le paquet binaire depuis le serveur que vous avez défini plus tôt et la
seconde indique d'utiliser le même paquet binaire plutôt que de compiler
l'application.
</p>

<p>
Par exemple, pour installer <c>gnumeric</c> à partir de paquets binaires
précompilés&nbsp;:
</p>

<pre caption="Installer gnumeric en utilisant un paquet précompilé">
# <i>emerge --usepkg --getbinpkg gnumeric</i>
</pre>

<p>
La page man de <c>emerge</c> décrit l'utilisation des paquets précompilés plus
en détail.
</p>

<pre caption="Lire la page man de emerge">
$ <i>man emerge</i>
</pre>

</body>
</subsection>
</section>
</sections>
