<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-mips-kernel.xml,v 1.8 2004/11/04 12:30:27 neysx Exp $ -->

<sections>
<section>
<title>Fuseau horaire</title>
<body>

<p>
Vous devez maintenant choisir votre fuseau horaire afin que votre système
sache où il se trouve. Cherchez votre fuseau horaire dans
<path>/usr/share/zoneinfo</path>, puis créez un lien symbolique nommé
<path>/etc/localtime</path> en utilisant <c>ln</c>&nbsp;:
</p>

<pre caption="Définir l'information relative au fuseau horaire">
# <i>ls /usr/share/zoneinfo</i>
<comment>(En supposant que vous utilisez l'heure de Paris.)</comment>
# <i>ln -sf /usr/share/zoneinfo/Europe/Paris /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installer les sources</title>
<subsection>
<title>Choisir un noyau</title>
<body>

<p>
Le cœur autour duquel sont bâties toutes les distributions est le noyau (en
anglais «&nbsp;kernel&nbsp;») Linux. Ce noyau est l'interface entre les
programmes utilisateur et le matériel. Gentoo offre un choix de plusieurs
noyaux à ses utilisateurs.  Une liste complète, accompagnée de descriptions,
est disponible dans le <uri link="/doc/fr/gentoo-kernel.xml"> Guide du noyau
Gentoo Linux</uri>.
</p>

<p>
Les systèmes MIPS peuvent être utilisés avec les <c>mips-sources</c> (le noyau
par défaut pour l'architecture MIPS) et les <c>mips-prepatch-sources</c> (le
noyau actuellement en développement pour MIPS).
</p>

<p>
Choisissez les sources à utiliser pour votre noyau et installez-les avec
<c>emerge</c>.  Par exemple&nbsp;:
</p>

<pre caption="Installer les sources du noyau">
# <i>emerge mips-sources</i>
</pre>

<p>
Si vous examinez le contenu de <path>/usr/src</path>, vous devriez voir un lien
symbolique nommé <path>linux</path> pointant vers les sources de votre
noyau&nbsp;:
</p>

<pre caption="Examiner le lien symbolique vers le noyau">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.24
</pre>

<p>
Si ce n'est pas le cas (le lien symbolique pointe vers un noyau différent),
changez le lien avant de continuer&nbsp;:
</p>

<pre caption="Changer le lien symbolique vers les sources du noyau">
# <i>rm /usr/src/linux</i>
# <i>cd /usr/src</i>
# <i>ln -s linux-2.4.24 linux</i>
</pre>

<p>
Il est maintenant temps de configurer et de compiler votre noyau.
</p>

</body>
</subsection>
</section>
<section>
<title>Configuration manuelle</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Configurer un noyau est parfois considéré comme la tâche la plus ardue que les
utilisateurs de Linux doivent accomplir. Rien n'est moins vrai... Après
avoir configuré quelques noyaux, vous ne vous rappellerez même plus que c'était
difficile ;)
</p>

<p>
Toutefois, une chose est vraie&nbsp;: vous devez connaître votre système pour
configurer manuellement un noyau. La majeure partie de cette information peut
être obtenue en examinant le contenu de <path>/proc/pci</path> (ou en utilisant
<c>lspci</c>, s'il est disponible). Vous pouvez aussi exécuter <c>lsmod</c>
pour voir quels modules du noyau sont utilisés par le LiveCD (ce qui peut vous
donner des indices sur les fonctionnalités nécessaires).
</p>

<p>
Maintenant, allez dans le dossier des sources du noyau et exécutez <c>make
menuconfig</c>. Cela ouvrira un menu de configuration basé sur ncurses.
</p>

<pre caption="Lancer menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
Plusieurs sections d'options de configuration s'afficheront. Nous allons
d'abord dresser la liste de certaines options que vous devez activer (sinon,
Gentoo ne fonctionnera pas, ou du moins pas sans quelques réglages
additionnels).
</p>

</body>
</subsection>
<subsection>
<title>Activer les options requises</title>
<body>

<p>
Avant toute chose, activez l'utilisation du code et des pilotes en
développement ou expérimentaux. C'est absolument nécessaire&nbsp;; si vous ne le
faites pas, des options très importantes ne seront pas affichées.
</p>

<pre caption="Sélectionner le code et les pilotes expérimentaux">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Allez à la section <c>File Systems</c> et activez le support nécessaire pour
les systèmes de fichiers que vous utilisez. Ne les compilez <e>pas</e> sous
forme de modules, sinon votre système Gentoo ne pourra pas monter vos
partitions. Activez aussi <c>Virtual memory</c>, <c>/proc
file system</c> et <c>/dev file system</c> + <c>Automatically mount at boot</c>.
</p>

<pre caption="Activer le support pour les systèmes de fichiers">
<comment>(Avec un noyau 2.4.x)</comment>
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot
  [ ] /dev/pts file system for Unix98 PTYs

<comment>(Avec un noyau 2.6.x)</comment>
File systems ---&gt;
  Pseudo Filesystems ---&gt;
    [*] /proc file system support
    [*] /dev file system support (OBSOLETE)
    [*]   Automatically mount at boot
    [*] Virtual memory file system support (former shm fs)
 <comment>(Sélectionnez le(s) système(s) de fichiers dont vous avez besoin.)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<p>
Si vous utilisez PPPoE ou un modem classique pour vous connecter à Internet,
vous aurez besoin des options du noyau suivantes&nbsp;:
</p>

<pre caption="Sélection des pilotes PPPoE">
<comment>(Avec un noyau 2.4.x)</comment>
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports

<comment>(Avec un noyau 2.6.x)</comment>
Device Drivers ---&gt;
  Networking support ---&gt;
    &lt;*&gt; PPP (point-to-point protocol) support
    &lt;*&gt;   PPP support for async serial ports
    &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Les deux options de compression ne vous feront pas de mal, mais ne sont pas
absolument nécessaires. L'option <c>PPP over Ethernet</c> n'est pas obligatoire
non plus, considérant qu'elle pourrait n'être utilisée que par <c>rp-pppoe</c>
lorsque ce dernier est configuré pour utiliser PPPoE en mode noyau.
</p>

<p>
Si vous en avez besoin, n'oubliez pas d'ajouter le support pour votre
carte ethernet.
</p>

<p>
Si vous utilisez un système Indy/Indigo2, vous devez activer le support pour
celui-ci&nbsp;:
</p>

<pre caption="Activer SGI IP22">
Machine selection ---&gt;
  [*] Support for SGI IP22 (Indy/Indigo2)
</pre>

<p>
Si vous voulez utiliser des exécutables IRIX, ajoutez l'option suivante&nbsp;:
</p>

<pre caption="Activer le support des exécutables IRIX">
General setup ---&gt;
  [*] Include IRIX binary compatibility
</pre>

<p>
Si vous avez des cartes ISA/EISA dans votre SGI Indigo2, activez le support
nécessaire à leur utilisation&nbsp;:
</p>

<pre caption="Activer le support ISA/EISA pour SGI Indigo2">
General setup ---&gt;
  [*] Indigo-2 (IP22) EISA bus support
  [*]   ISA bus support
</pre>

<p>
Si vous avez un port parallèle SGI, vous pouvez activer le support pour ce
dernier. Si vous avez un port parallèle ISA, vous devriez plutôt choisir
«&nbsp;PC-Style hardware&nbsp;».
</p>

<pre caption="Activer le support pour le port parallèle SGI">
Parallel port support  ---&gt;
  &lt;*&gt; Parallel port support
  &lt;*&gt;   SGI Indy/Indigo2 hardware (EXPERIMENTAL) (NEW)
  &lt;*&gt;   IEEE 1284 transfer modes (NEW)
</pre>

<p>
Si vous souhaitez utiliser les connecteurs ISA d'un Indigo2, activez le support
«&nbsp;plug and play&nbsp;»&nbsp;:
</p>

<pre caption="Activer le support PnP pour ISA">
Plug and Play configuration  ---&gt;
  &lt;*&gt; Plug and Play support
  &lt;*&gt;   ISA Plug and Play support
</pre>

<p>
N'oubliez pas d'activer le support SCSI et d'utiliser le pilote SGI
WD93C93&nbsp;:
</p>

<pre caption="Activer le pilote WD93C93">
SCSI low-level drivers  ---&gt;
  &lt;*&gt; SGI WD93C93 SCSI Driver
</pre>

<p>
Pour vos cartes réseau, vous aurez probablement besoin du support pour le
contrôleur ethernet SGI Seeq&nbsp;:
</p>

<pre caption="Activer le support pour SGI Seeq">
Network device support  ---&gt;
  Ethernet (10 or 100Mbit)  ---&gt;
    [*] Ethernet (10 or 100Mbit)
    [*]   SGI Seeq ethernet controller support
</pre>

<p>
N'oubliez pas d'activer le support de la console série et celui de SGI
Zilog85C30&nbsp;:
</p>

<pre caption="Activer le support pour SGI Zilog85C30">
Character devices ---&gt;
  [*] Non-standard serial port support
  [*]   SGI Zilog85C30 serial support
</pre>

<p>
N'oubliez pas non plus d'activer le support du Indy/12 Watchdog ainsi que du
SGI DS1286 RTC&nbsp;:
</p>

<pre caption="Activer le support de Watchdog et de RTC">
Character Devices ---&gt;
  [*] SGI DS1286 RTC support
  Watchdog Cards  ---&gt;
    [*] Watchdog Timer Support
    &lt;*&gt;   Indy/I2 Hardware Watchdog
</pre>

<p>
Vous devriez aussi activer le support pour les partitions SGI :)
</p>

<pre caption="Activer le support pour les partitions SGI">
File Systems ---&gt;
  Partition Types ---&gt;
    [*] Advanced partition selection
    [*]   SGI partition support
</pre>

<p>
Si vous avez une carte SGI Newport (XL Gfx) et que vous souhaitez l'utiliser,
vous devriez activer le support correspondant&nbsp;:
</p>

<pre caption="Activer le support de la carte SGI Newport">
Console drivers  ---&gt;
  &lt;*&gt; SGI Newport Console support (NEW)
</pre>

<p>
Si vous voulez avoir un support pour le son avec votre Indy/Indigo2,
ajoutez-le&nbsp;:
</p>

<pre caption="Activer le support pour SGI HAL2">
Sound  ---&gt;
  &lt;*&gt; Sound card support
  &lt;*&gt;   SGI HAL2 sound (EXPERIMENTAL)
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compiler et installer</title>
<body>

<p>
Maintenant que votre noyau est configuré, il est temps de le compiler et de
l'installer. Quittez la configuration et exécutez <c>make dep &amp;&amp; make
vmlinux modules modules_install</c>&nbsp;:
</p>

<pre caption="Compiler le noyau">
<comment>(pour les noyaux 2.4)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(Pour les noyaux 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Lorsque la compilation est terminée, copiez l'image du noyau dans
<path>/boot</path>.
</p>

<pre caption="Installer le noyau">
# <i>cp vmlinux /boot/kernel-2.4.24</i>
# <i>cp System.map /boot/System.map-2.4.24</i>
</pre>

<p>
Il est également sage de copier la configuration du noyau dans
<path>/boot</path>. Juste au cas où... :)
</p>

<pre caption="Faire une copie de sécurité de la configuration du noyau">
# <i>cp .config /boot/config-2.4.24</i>
</pre>

<p>
Si votre système ne peut amorcer à partir des noyaux ELF, compilez le noyau en
utilisant <c>make vmlinux.ecoff</c> plutôt que <c>make vmlinux</c>. L'image du
noyau sera sauvegardée sous <path>arch/mips/boot/vmlinux.ecoff</path> plutôt
que sous <path>vmlinux</path>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Installer des modules du noyau individuels</title>
<subsection>
<title>Configurer les modules</title>
<body>

<p>
Vous devriez indiquer la liste des modules que vous souhaitez charger
automatiquement dans <path>/etc/modules.autoload.d/kernel-2.4</path> (ou
<path>kernel-2.6</path>).  Vous pouvez également ajouter des options aux
modules si vous le souhaitez.
</p>

<p>
Pour dresser la liste des modules disponibles, exécutez la commande
<c>find</c> tel qu'indiqué ci-dessous. N'oubliez pas de substituer &lt;kernel
version&gt; par la version du noyau que vous venez juste de compiler&nbsp;:
</p>

<pre caption="Consulter la liste des modules disponibles">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Par exemple, pour charger automatiquement le module <c>3c59x.o</c>, spécifiez-le
dans le fichier <path>kernel-2.4</path> ou <path>kernel-2.6</path> selon le
noyau que vous utilisez.
</p>

<pre caption="Modifier le fichier /etc/modules.autoload.d/kernel-2.4">
<comment>(Exemple pour un noyau 2.4.x)</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="Exemple de fichier /etc/modules.autoload.d/kernel-2.4 ou kernel-2.6">
3c59x
</pre>

<p>
Exécutez maintenant <c>modules-update</c> pour incorporer vos changements au
fichier <path>/etc/modules.conf</path>&nbsp;:
</p>

<pre caption="Exécuter modules-update">
# <i>modules-update</i>
</pre>

<p>
Poursuivez l'installation avec <uri link="?part=1&amp;chap=8">Configurer
votre système</uri>.
</p>

</body>
</subsection>
</section>
</sections>
