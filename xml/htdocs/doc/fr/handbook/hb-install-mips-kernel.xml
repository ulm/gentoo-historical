<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-mips-kernel.xml,v 1.19 2006/01/18 14:12:10 neysx Exp $ -->

<sections>

<version>1.15</version>
<date>2006-01-06</date>

<section>
<title>Fuseau horaire</title>
<body>

<p>
Vous devez maintenant choisir votre fuseau horaire afin que votre système sache
où il se trouve. Cherchez votre fuseau horaire dans
<path>/usr/share/zoneinfo</path>, puis copiez-le sur
<path>/etc/localtime</path>. Évitez les zones
<path>/usr/share/zoneinfo/Etc/GMT*</path>, car leur nom prête à confusion. En
effet, <path>GMT-8</path> siginifie en fait GMT+8.
</p>

<pre caption="Définir l'information relative au fuseau horaire">
# <i>ls /usr/share/zoneinfo</i>
<comment>(En supposant que vous utilisez l'heure de Paris :)</comment>
# <i>cp /usr/share/zoneinfo/Europe/Paris /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installer les sources</title>
<subsection>
<title>Choisir un noyau</title>
<body>

<p>
Le cœur autour duquel sont bâties toutes les distributions est le noyau (en
anglais «&nbsp;kernel&nbsp;») Linux. Ce noyau est l'interface entre les
programmes utilisateur et le matériel. Gentoo offre un choix de plusieurs
noyaux à ses utilisateurs. Une liste complète, accompagnée de descriptions,
est disponible dans le <uri link="/doc/fr/gentoo-kernel.xml">Guide du noyau
Gentoo Linux</uri>.
</p>

<p>
Les systèmes MIPS peuvent être utilisés avec les <c>mips-sources</c> (le noyau
par défaut pour l'architecture MIPS) et les <c>mips-prepatch-sources</c> (le
noyau actuellement en développement pour MIPS).
</p>

<p>
Choisissez les sources à utiliser pour votre noyau et installez-les avec
<c>emerge</c>. On utilise <c>USE="-doc"</c> pour éviter d'éventuelles
dépendances telles que xorg-x11. De plus, <c>USE="symlink"</c> n'est pas
nécessaire pour une nouvelle installation, mais garantit que le lien symbolique
<path>/usr/src/linux</path> pointe vers les sources du noyau que vous
installez.
</p>

<note>
Des correctifs spéciaux sont nécessaires pour le bon fonctionnement du noyau
sur les serveurs Cobalt. Le paramètre USE <c>cobalt</c> doit être défini pour
que <c>emerge</c> récupère et applique automatiquement les correctifs en
question.
</note>

<pre caption="Installer les sources du noyau">
<comment>(pour les machines SGI)</comment>
# <i>USE="-doc symlink" emerge mips-sources</i>

<comment>(Pour les machines Cobalt)</comment>
# <i>mkdir -p /etc/portage</i>
# <i>echo "sys-kernel/mips-sources cobalt" &gt;&gt; /etc/portage/package.use</i>
# <i>USE="-doc symlink" emerge mips-sources</i>
</pre>

<p>
Si vous examinez le contenu de <path>/usr/src</path>, vous devriez voir un lien
symbolique nommé <path>linux</path> pointant vers les sources de votre noyau.
L'exemple suivant utilise la version 2.4.24, mais vous aurez sans doute
installé une autre version.
</p>

<pre caption="Examiner le lien symbolique vers le noyau">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx   1 root   root    12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.24
</pre>

<p>
Il est maintenant temps de configurer et de compiler votre noyau.
</p>

</body>
</subsection>
</section>
<section>
<title>Compilation et installation du noyau</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Ce guide effectuait auparavant une configuration manuelle des codes source du
noyau. Pour simplifier le guide nous avons mis à disposition un certain nombre
d'exemples de configurations que vous pouvez utiliser. Il vous suffit de choisir
l'option la plus proche de votre système et de votre version de noyau. Vous
pourrez également trouver d'autres exemples de configuration dans les liens
qui suivent.
</p>

<table>
  <tr>
    <th>Système</th>
    <th>Version du noyau</th>
  </tr>
  <tr>
    <ti>SGI IP22 (Indy, Indigo 2, Challenge S)</ti>
    <ti>
      <uri link="http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config/2.4.29-mipscvs-20050130.gz">2.4.29</uri>
    </ti>
  </tr>
  <tr>
    <ti>Cobalt Qube/Raq 2800</ti>
    <ti>
      <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-2605.config">2.6.5</uri>
      <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-2606.config">2.6.6</uri>
      <uri link="http://dev.gentoo.org/~kumba/mips/cobalt/kernel/cobalt-config-2609">2.6.9</uri>
    </ti>
  </tr>
</table>

<ul>
  <li>
    Configurations IP22 (Indy, Indigo2, Challenge S)&nbsp;:
    <uri link="http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config">
      http://www.longlandclan.hopto.org/~stuartl/mips-linux/sgi/ip22/config
    </uri>
  </li>
  <li>
    Configurations de serveurs Cobalt&nbsp;:
    <uri link="http://dev.gentoo.org/~kumba/mips">
      http://dev.gentoo.org/~kumba/mips
    </uri>
  </li>
</ul>

<note>
Des exemples supplémentaires de configurations de noyau se trouvent dans une
base de données relative au support matériel Gentoo/MIPS que vous trouverez à
<uri>http://stuartl.longlandclan.hopto.org/gentoo/mips</uri>.
</note>

<p>
Une fois que vous avez trouvé la configuration qui vous convenait, téléchargez
le fichier et mettez-le dans le répertoire des codes source du noyau. Renommez
le fichier en <path>.config</path>. À partir de là, vous pouvez lancer la
commande <c>make oldconfig</c> pour tout mettre à jour et personnaliser un peu
plus la configuration avant de compiler le code.
</p>

<pre caption="Configurer le noyau">
# <i>cd /usr/src/linux</i>
# <i>cp /répertoire/vers/exemple-config .config</i>
# <i>make oldconfig</i>
<comment>(Appuyez simplement sur Entrée à chaque question pour accepter les valeurs
par défaut. Elles seront personnalisées plus tard.)</comment>
# <i>make menuconfig</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>Compiler et installer</title>
<body>

<p>
Maintenant que votre noyau est configuré, il est temps de le compiler et de
l'installer. Quittez la configuration et lancez la compilation&nbsp;:
</p>

<pre caption="Compiler le noyau">
<comment>(pour les noyaux 2.4)</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>(Pour les noyaux 2.6)</comment>
# <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Lorsque la compilation est terminée, copiez l'image du noyau dans
<path>/boot</path>.
</p>

<note>
Sur les serveurs Cobalt, le chargeur de démarrage s'attend à trouver une image
compressée. N'oubliez pas d'utiliser la commande <c>gzip -9</c> une fois le
noyau copié dans <path>/boot</path>. Nommez votre noyau comme bon vous semble,
mais retenez le nom que lui donnez, car vous devrez l'utiliser quand vous
configurerez votre chargeur de démarrage. Vous pourriez utiliser le numéro de
version, par exemple&nbsp;:
</note>

<pre caption="Installer le noyau">
# <i>cp vmlinux /boot/</i><comment>&lt;version&gt;</comment>
<comment>(Sur un Cobalt Server, compressez le noyau:)</comment>
# <i>gzip -9v /boot/</i><comment>&lt;version&gt;</comment>
</pre>

<!-- Désuet depuis qu'on utilise arcboot sur les SGI et CoLo sur Cobalt
<p>
Si votre système ne peut amorcer à partir des noyaux ELF, compilez le noyau en
utilisant <c>make vmlinux.ecoff</c> plutôt que <c>make vmlinux</c>. L'image du
noyau sera sauvegardée sous <path>arch/mips/boot/vmlinux.ecoff</path> plutôt
que sous <path>vmlinux</path>.
</p>
-->

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Installer des modules du noyau individuels</title>
<subsection>
<title>Configurer les modules</title>
<body>

<p>
Vous devez mettre en place une liste des modules que vous souhaitez charger
automatiquement sur votre système. Cette liste doit se trouver dans l'un des
fichiers suivants. Vous pouvez aussi ajouter des options supplémentaires aux
modules si vous le jugez nécessaire.
</p>

<ul>
  <li><path>/etc/modules.autoload.d/kernel-2.4</path> - Noyaux 2.4</li>
  <li><path>/etc/modules.autoload.d/kernel-2.6</path> - Noyaux 2.6</li>
  <li><path>/etc/modules.autoload</path> - Tous les noyaux</li>
</ul>

<p>
Donc si vous avez un module du noyau que vous souhaitez charger qui est en
commun aux deux versions 2.4 et 2.6 du noyau vous devez le mettre dans
<path>/etc/modules.autoload</path>. Sinon, vous devez le placer dans le fichier
approprié.
</p>

<p>
Pour dresser la liste des modules disponibles, exécutez la commande
<c>find</c> tel qu'indiqué ci-dessous. N'oubliez pas de substituer &lt;kernel
version&gt; par la version du noyau que vous venez juste de compiler&nbsp;:
</p>

<pre caption="Consulter la liste des modules disponibles">
# <i>find /lib/modules/&lt;version du noyau&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Par exemple, pour charger automatiquement le module <c>3c59x.o</c>, spécifiez-le
dans le fichier approprié.
</p>

<pre caption="Modifier le fichier /etc/modules.autoload.d/kernel-2.4">
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="Exemple de fichier /etc/modules.autoload.d/kernel-2.4 ou kernel-2.6">
3c59x
</pre>

<p>
La même chose en une seule ligne&nbsp;:
</p>

<pre caption="Ajouter un module -- la méthode en une ligne">
# <i>echo '3c59x' >> /etc/modules.autoload.d/kernel-2.4</i>
<comment>(ou kernel-2.6, ou /etc/modules.autoload...)</comment>
</pre>

<p>
Poursuivez l'installation avec <uri link="?part=1&amp;chap=8">Configurer
votre système</uri>.
</p>

</body>
</subsection>
</section>
</sections>
