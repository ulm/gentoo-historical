<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-x86+amd64-disk.xml,v 1.12 2014/03/17 08:31:42 jaaf Exp $ -->

<sections>

<abstract>
Pour installer Gentoo, vous devez créer les partitions requises. Ce chapitre
décrit comment préparer vos disques durs.
</abstract>


<version>32</version>
<date>2014-01-23</date>
<section>

<title>Introduction aux périphériques de blocs</title>
<subsection>

<include href="hb-install-blockdevices.xml"/>

</subsection>
<subsection>
<title>Partitions</title>
<body>

<p>
Bien qu'il soit théoriquement possible d'utiliser un disque complet pour
héberger votre système Linux, ceci n'est pratiquement jamais fait. À la place,
les périphériques de bloc sont divisés pour être plus petits et plus facilement
gérables. Sur les systèmes  <keyval id="arch"/> ces subdivisions sont appelées <e>partitions</e>. Il existe actuellement deux normes de partitionnement: MBR et GPT.
</p>
<p>
La morme <e>MBR (Master Boot Record  - Enregistrement d'amorçage maître)</e> utilise des identifiants 32 bits pour les partitions, et prend en charge trois types de partitions : <e>primaire</e>, <e>étendue</e> et <e>logique</e>. Les informations des partitions primaires sont stockées dans le MBR lui-même - un tout petit espace (ordinairement 512 bytes) au tout début d'un disque. À cause de la petitesse de cet espace, seulement quatres partitions primaires sont prises en charge (par exemple <path>/dev/sda1</path> à <path>/dev/sda4</path>
</p>
<p>
Pour prendre en charge un nombre plus important de partitions, l'une des partitions primaire peut être marquée comme étant une partition étendue. Ce type de partition peut contenir des partitions logique (une partition contenant des partitions).
</p>
<p>
Chacune des partitions est limitée à 2 TB (à cause des identifiants sur 32 bits). De plus, la configuratio MBR ne procure aucune sauvegarde du MBR, c'est pourquoi, si une application écrase le contenu du MBR, touts les informations sur les partitions sont perdues.
</p>
<p>
La norme <e>GPT (GUID Partition Table -Table des partitions GUID)</e> utilise des identifiants 64 bits pour les partitions. L'emplacement dans lequel sont rangés les informations sur les partitions est aussi beaucoup plus grand que 512 bytes, et il n'y a pas de limitation dans le nombre des partitions. De plus la taille des partitions est limitée à une valeur beaucoup plus élevée (plus de quelques ZB -oui zetabytes).
</p>
<p>
Lorsque l'interface logiciel entre le système d'exploitation et le microcode est UEFI au lieu de BIOS, GPT est quasi obligatoire car des problèmes de compatibilité avec le MBR apparaissent.
</p>
<p>
La GPT offre aussi l'avantage qu'il utilise une GPT de secours à la fin du disque, qui peut être utilisée pour récupérer suite à un endommagement de la GPT primaire en début de disque. La GPT possède également des sommes de vérifications CRC32 pour détecter les erreurs dans les entêtes et les tables de partitions.
</p>
</body>
</subsection>
<subsection id="gpt_or_mbr">
<title> Alors, GPT ou MBR ? </title>
<body>
<p>
À partir de la description précédente, on pourrait penser qu'utiliser GPT est toujours la meilleure approche. Il y a néanmoins quelques revers avec ça :
</p>
<p>
L'utilisation de GPT avec un ordinateur basé sur BIOS est possible, mais vous ne pouvez alors plus avoir un démarrage alternatif sur le système d'exploitation Microsoft Windows. La raison en est que Microsoft Windows va démarrer en mode EFI s'il détecte un partitionnement GPT.
</p>
<p>
Quelques BIOS ou EFI défectueux configurés pour démarrer dans le mode BIOS/CSM patrimonial peuvent également rencontrer des problèmes en démarrant sur des disques étiquetés GPT. Dans ce cas, vous devez pouvoir contourner le problème en ajoutant le drapeau boot/active sur la partition de  MBR protecteur, ce qui est réalisé avec <c>fdisk</c> (<c>parted</c> comprend les tables GPT et ne devrait pas montrer la partition de MBR protecteur):
</p>
<pre caption="activer le drapeau d'amorçage sur un MBR protecteur">
# <i>fdisk /dev/sda</i>
WARNING: GPT (GUID Partition Table) detected on '/dev/sda'! The util fdisk
doesn't support GPT. Use GNU Parted.
Command (m for help): <i>a</i>
Partition number (1-4): <i>1</i>
Command (m for help): <i>w</i>
</pre>
</body>
</subsection>

<subsection>
<title>Solutions de stockage avancées</title>
<body>

<p>
Les CD d'installation Gentoo pour <keyval id="arch"/> offrent le support des
systèmes LVM2. Les systèmes LVM2  permettent une plus grande
flexibilité dans l'organisation des disques. Le reste de ce guide utilise des
partitions normales, mais vous pouvez activer ces systèmes de stockage avancés
si vous le désirez.
</p>

</body>
</subsection>
</section>

<section>

  
<title>Concevoir un plan de partitionnement</title>
<subsection>
<title>Plan de partitionnement par défaut</title>
<body>

<p>
Si vous n'êtes pas intéressé par l'établissement d'un plan de partitionnement
pour votre système, vous pouvez utiliser le plan de partitionnement que nous
utilisons dans ce manuel&nbsp;:
</p>

<table>
<tr>
  <th>Partition</th>
  <th>Système de fichiers</th>
  <th>Taille</th>
  <th>Description</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>(bootloader)</ti>
  <ti>2M</ti>
  <ti>Partition d'amorçage BIOS</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>ext2</ti>
  <ti>>128M </ti>
  <ti>Partition d'amorçage</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>(swap)</ti>
  <ti>512M ou plus</ti>
  <ti>Partition de swap</ti>
</tr>
<tr>
 <ti><path>/dev/sda4</path></ti>
 <ti>ext4</ti>
 <ti>Reste du disque</ti>
 <ti>Partition racine</ti>
</tr>
</table>

<p>
Si vous souhaitez savoir la taille qu'une partition doit avoir, ou même
de combien de partitions vous avez besoin, poursuivez la lecture de ce
chapitre. Sinon, poursuivez avec le chapitre <uri link="#parted">Default: partitionner
votre disque avec parted</uri>  ou <uri link="#fdisk">Alternative: partitionner votre disque avecfdisk</uri>
(ce sont tous les deux des outils de partitionnement, <c>fdisk</c> est très connu et stable,
<c>parted</c> est un peu plus récent mais prend en charge des partitions de taille supérieure à 2TO).
</p>

</body>
</subsection>
<subsection>
<title>Combien et de quelle taille&nbsp;?</title>
<body>

<p>
Le nombre de partitions dépend beaucoup de votre environnement. Par exemple,
si vous avez beaucoup d'utilisateurs, vous désirerez certainement avoir votre partition
<path>/home</path> séparée afin d'améliorer la sécurité et de simplifier les
sauvegardes. Si vous installez Gentoo comme serveur de courrier, votre partition
<path>/var</path> devrait être séparée étant donné que tous les courriels sont
stockés dans <path>/var</path>. Un bon choix de système de fichiers va vous
permettre d'améliorer les performances. Les serveurs de jeux auront une partition 
<path>/opt</path> séparée étant donné que la plupart des serveurs de jeux sont
installés à cet endroit. La raison est la même que pour la partition
<path>/home</path>&nbsp;: sécurité et sauvegarde. Vous devriez consacrer
suffisamment de place au répertoire <path>/usr</path>, car il contient non
seulement vos applications, mais aussi l'arbre Portage (qui prend 500&nbsp;Mo à
lui seul) et les sources des programmes que vous allez installer.
</p>

<p>
Comme vous pouvez le voir, cela dépend beaucoup de ce que vous souhaitez faire.
Séparer les partitions ou volumes procure les avantages suivants&nbsp;:
</p>

<ul>
<li>
  Vous pouvez choisir le système de fichiers le plus performant pour chaque
  partition ou volume.
</li>
<li>
  Votre système entier ne risque pas d'arriver à court d'espace disque libre si
  un outil défectueux sature l'espace disque d'une partition ou d'un volume.
</li>
<li>
  Si nécessaire, les vérifications des systèmes de fichiers durent moins
  longtemps, vu que de multiples vérifications peuvent être faites en parallèle
  (quoique cet avantage est plus important avec plusieurs disques qu'avec
  plusieurs partitions).
</li>
<li>
  La sécurité peut être améliorée en montant certaines partitions ou volumes
    en lecture seulement, en utilisant <e>nosuid</e> (les bits suid sont ignorés) et
      <e>noexec</e> (les bits exécutables sont ignorés), etc.
</li>
</ul>

<p>
Cependant, avoir de multiples partitions présente un gros désavantage&nbsp;: si elles ne
sont pas configurées correctement, vous risquez d'obtenir un système avec
beaucoup d'espace libre sur une partition et plus du tout sur une autre. Un autre inconvénient est que des partitions séparées, en particulier
  pour des points de montage importants tels que <path>/usr</path> ou <path>/var</path> - requièrent que l'utilisateur amorce avec un <e>initramfs</e> pour 
 monter la partition avant que les scripts de démarrage ne soient lancés. Ce n'est pas toujours le cas cependant, ce qui fait que le résultat 
  peut varier.
</p>
<p>
Notez que les disques SCSI et SATA sont limités à  15-partitions sauf si vous utilisez  des étquettes GPT.
</p>


</body>
</subsection>
<subsection>
<title>Que dire sur la partition de mémoire virtuelle (swap) ?</title>
<body>

<p>
Il n'y a pas de taille parfaite pour la partition de mémoire virtuelle. Le but de l'espace de mémoire virtuelle est de fournir de l'espace disque au noyau lorsque la mémoire interne (RAM) est sous pression. Un espace de mémoire virtuelle permet au noyau de déplacer des pages mémoires auxquelles un accès prochain est peu probable sur le disque (échange ou sortie de page), libérant ainsi de la mémoire. Bien sûr, si cette mémoire est soudainement requise, ces pages doivent être rappatriées en mémoire (entrée de page) ce qui demandera un certain temps (car les disques sont beaucoup plus lent que la mémoire interne).
</p>

<p>
Si vous n'envisagez pas de faire tourner des applications gourmandes en mémoire ou si vous disposez de beaucoup de mémoire, vous n'avez probablement pas besoin de beaucoup d'espace de mémoire virtuelle. Néanmoins, l'espace de mémoire virtuelle est aussi utilisé pour stocker toute la mémoire lors de l'hibernation. Si vous envisagez l'utilisation de l'hibernation, vous aurez besoin d'un espace de mémoire virtuelle plus grand, au moins la taille de votre mémoire vive . 
</p>

</body>
</subsection>
<subsection>
<title>Qu'est que la partition de démarrage BIOS?</title>
<body>
<p>
Une partition de démarrage BIOS est une toute petite partition (de 1 à 2 MB) dans laquelle les chargeurs de démarrage tels que GRUB peuvent placer des données additionnelles qui ne rentrent pas dans  l'espace alloué (quelques centaines d'octets dans le cas de MBR) et qu'ils ne peuvent placer ailleurs.
</p>
<p>
De telles partitions ne sont pas toujours nécessaires, mais si on considère la faible consommation de place et les difficultés que vous auriez à documenter la pléthore de différences de partitionnement autrement, il est recommandé de la créer dans tous les cas.
</p>
<p>
Pour être complets, nous pouvons dire que la partition d'amorçage BIOS est requise lorsque le plan de partitionnement est utilisé avec GRUB2, ou lorsque le plan de partitionnement du MBR est utilisé avec GRUB2 quand la première partition débute avant le premier MB du disque.
</p>
</body>
</subsection>

	
</section>
<section id="parted">
<title>Defaut: utiliser parted pour partitionner votre disque</title>
<subsection>
<body>
<p>
Dans ce chapitre, nous vous guidons dans la création du plan de partitionnement évoqué plus haut dans les instructions. Nous le répétons pour commodité.
</p>
<table>
<tr>
  <th>Partition</th>
  <th>Description</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Partition d'amorçage BIOS</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>Partition de d'amorçage</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>Partition de mémoire virtuelle (swap)</ti>
</tr>
<tr>
  <ti><path>/dev/sda4</path></ti>
  <ti>Partition racine (Root)</ti>
</tr>
</table>
<p>
Modifiez ce plan de partitionnement selon vos besoin
</p>
</body>
</subsection>
<subsection>
<title>Visualiser le plan de partitionnement courant</title>
<body>
<p>
L'application  <c>parted</c> procure une interface simple pour partitionner votre disque et prend en charge des partitions de très grande taille (plus de 2 TB). Lancez <c>parted</c> sur votre disque (dans notre exemple, nous utilisons <path>/dev/sda</path>. Nous demanderons à <c>parted</c> d'utiliser l'alignement optimisé :
 </p>
<pre caption="lancer parted">
# <i>parted -a optimal /dev/sda</i>
GNU Parted 2.3
Using /dev/vda
Welcome to GNU Parted! Type 'help' to view a list of commands.
</pre>
<p>
Alignement signifie que les partitions commencent sur des limites bien connues sur le disque, de manière à ce que les opérations sur le disque depuis le niveau du système d'exploitation (comme retrouver une page) utilisent le minimun d'opérations de disque. Des partitions mal alignées peuvent nécessiter que l'on recherche deux pages même si une seule est requise. 
</p>
<p>
Pour connaître toutes les opérations prises en charge par <c>parted</c>, tapez <c>help</c> et faites <e>Entrée</e>.
</p>
</body>
</subsection>
<subsection>
<title>Mettre l'étiquette GPT en place</title>
<body>
<p>
Most disks on x86/amd64 are prepared using an <e>msdos</e> label. Using <c>parted</c>, we can put a GPT label on the disk using <c>mklabel gpt</c>:
</p>
<warn>
Changing the partition type will remove all partitions from your disk. All data
on the disk will be lost.
</warn>
<pre caption="Setting the GPT label">
(parted) <i>mklabel gpt</i>
</pre>
<p>
Si vous voulez que le disque utilise le plan de partitionnement du MBR, utilisez  <c>mklabel msdos</c>.
</p>
</body>
</subsection>
<subsection>
<title>Removing all Partitions</title>
<body>
<p>
Si cela n'est pas encore fait (par exemple via l'opération <c>mklabel</c> précédente, ou parce que le disque est fraîchement formaté), nous commencerons par retirer toutes les partitions existantes du disque. Tapez  <c>print</c> pour visualiser les partitions courantes et <c>rm &lt;number&gt;</c> où &lt;number&gt; est le numéro de la partition que vous voulez retirer.
</p>
<pre caption="Retirer une partition du disque">
(parted) <i>rm 2</i>
</pre>
<p>
Faites de même pour toutes les partitions dont vous n'avez plus besoin. Mais faites attention de ne pas faire d'erreur à ce stade, car <c>parted</c> applique les changements immédiatement (contrairement à <c>fdisk</c> qui planifie les tâches, permettant à l'utilisateur de "défaire" ses changements avant de sauvegarder ou de sortir de <c>fdisk</c>).
</p>
</body>
</subsection>
<subsection>
<title>Créer les partitions</title>
<body>
<p>
Maintenant créons les partitions mentionnées plus haut. La création d'une partition avec <c>parted</c>  n'est pas très difficile - tout ce que nous avons à faire est d'informer  <c>parted</c>
sur les réglages suivants :
</p>
<ul>
<li>
Le  <e>type de partition </e> à utiliser. Il s'agit ordinairement de  <e>primaire</e>.
Si vous utilisez l'étiquette de partition <e>msdos</e> , gardez à l'esprit que vous ne pouvez pas dépasser quatre partitions primaires. Si vous avez besoin de plus de quatre partitions, créez une partition  <e>étendue</e> et créez des partitions <e>logiques </e> dedans.
</li>
<li>
The start location of a partition (which can be expressed in MB or GB)
</li>
<li>
The end location of the partition (which can be expressed in MB or GB)
</li>
</ul>
<p>
First, we tell <c>parted</c> that the size unit we work with is megabytes
(actually mebibytes, abbreviated as MiB which is the "standard" notation):
</p>
<pre caption="Using MiB units">
(parted) <i>unit mib</i>
</pre>
<p>
Now create a 2 MB partition that will be used by the GRUB bootloader later.
We use the <c>mkpart</c> command for this, and inform <c>parted</c> to start
from 1 MB and end at 3 MB (creating a partition of 2 MB in size).
</p>
<pre caption="Creating a 128 MB partition">
(parted) <i>mkpart primary 1 3</i>
(parted) <i>name 1 grub</i>
(parted) <i>set 1 bios_grub on</i>
(parted) <i>print</i>
Model: Virtio Block Device (virtblk)
Disk /dev/sda: 20480MiB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Number   Start      End      Size     File system  Name   Flags
1       1.00MiB    3.00MiB  2.00MiB               grub   bios_grub
</pre>
<p>
Do the same for the boot partition (128 MB), swap partition (in the example,
512 MB) and the root partition that spans the remaining disk (for which the
end size is marked as <c>-1</c>, meaning the end of the disk minus one MB,
which is the farthest a partition can go).
</p>
<pre caption="Creating other partitions">
(parted) <i>mkpart primary 3 131</i>
(parted) <i>name 2 boot</i>
(parted) <i>mkpart primary 131 643</i>
(parted) <i>name 3 swap</i>
(parted) <i>mkpart primary 643 -1</i>
(parted) <i>name 4 rootfs</i>
</pre>

<p>

The end result looks like so:

</p>
<pre caption="Viewing the current partition layout">

(parted) <i>print</i>

Model: Virtio Block Device (virtblk)

Disk /dev/sda: 20480MiB

Sector size (logical/physical): 512B/512B

Partition Table: gpt

	 

Number   Start      End      Size     File system  Name   Flags

1       1.00MiB    3.00MiB  2.00MiB               grub   bios_grub
2       3.00MiB    131MiB   128MiB                boot
3       131MiB     643MiB   512MiB                swap
4       643MiB     20479MiB 19836MiB              rootfs
</pre>


<p>
Si vous êtes satisfait, utilisez la commande <c>quit</c> pour sortir de <c>parted</c>.
</p>
</body>
</subsection>
</section>

<section id="fdisk">
<title>Alternative : partitionner votre disque avec fdisk</title>
<subsection>
<body>
<impo>
si votre environnement met en œuvre des partitions plus grandes que 2 TB, suivez les instructions données par 
<uri link="#parted">Partitionner votre disque avec parted</uri>. L'application <c>fdisk</c> ne sait pas gérer d'aussi grosses partitions. <c>fdisk</c> utilise également le plan de partitionnement du MBR. Des applications alternatives à fdisk, comme gdisk (que Gentoo vous offre via le paquet gptfdisk) existent et prennent en charge GPT mais peuvent ne pas être incluses dans le média d'installation de Gentoo.
</impo>


<p>
Les parties suivantes expliquent comment créer le schéma de partition décrit
précédemment&nbsp; en utilisant <c>fdisk</c> :
</p>

<table>
<tr>
  <th>Partition</th>
  <th>Description</th>
</tr>
<tr>
  <ti><path>/dev/sda1</path></ti>
  <ti>Partition d'amorçage BIOS</ti>
</tr>
<tr>
  <ti><path>/dev/sda2</path></ti>
  <ti>Boot partition</ti>
</tr>
<tr>
  <ti><path>/dev/sda3</path></ti>
  <ti>Partition de mémoire virtuelle (swap)</ti>
</tr>
<tr>
  <ti><path>/dev/sda4</path></ti>
  <ti>Partition racine (root)</ti>
</tr>
</table>

<p>
Changez votre plan de partitionnement comme vous le souhaitez.
</p>

</body>
</subsection>

<subsection>
<title>Afficher le plan de partitionnement actuel</title>
<body>

<p>
<c>fdisk</c> est un outil populaire et puissant pour diviser votre disque en
partitions. Lancez <c>fdisk</c> sur votre disque (dans notre exemple, nous
utilisons <path>/dev/sda</path>)&nbsp;:
</p>

<pre caption="lancement de fdisk">
# <i>fdisk /dev/sda</i>
</pre>

<p>
Une fois dans <c>fdisk</c>, vous serez accueilli par une invite de commande
(«&nbsp;prompt&nbsp;») qui ressemble à ceci&nbsp;:
</p>

<pre caption="invite de commande de fdisk">
Command (m for help):
</pre>

<p>
Appuyez sur <c>p</c> pour afficher la configuration actuelle de vos partitions.
</p>

<pre caption="exemple de configuration de partition">
Command (m for help): <i>p</i>

Disk /dev/sda: 240 heads, 63 sectors, 2184 cylinders
Units = cylinders of 15120 * 512 bytes

Device Boot    Start       End    Blocks   Id  System
/dev/sda1   *         1        14    105808+  83  Linux
/dev/sda2            15        49    264600   82  Linux swap
/dev/sda3            50        70    158760   83  Linux
/dev/sda4            71      2184  15981840    5  Extended
/dev/sda5            71       209   1050808+  83  Linux
/dev/sda6           210       348   1050808+  83  Linux
/dev/sda7           349       626   2101648+  83  Linux
/dev/sda8           627       904   2101648+  83  Linux
/dev/sda9           905      2184   9676768+  83  Linux

Command (m for help):
</pre>

<p>
Ce disque est configuré pour héberger sept systèmes de fichiers Linux (chacun
avec une partition correspondante listée en tant que «&nbsp;Linux&nbsp;») ainsi qu'une partition de mémoire virtuelle (listée en tant que «&nbsp;Linux
swap&nbsp;»).
</p>

</body>
</subsection>

<subsection>
<title>Supprimer toutes les partitions</title>
<body>

<p>
Nous allons commencer par supprimer toutes les partitions existantes sur le
disque. Tapez <c>d</c> pour supprimer une partition. Par exemple, pour
supprimer un <path>/dev/sda1</path> existant&nbsp;:
</p>

<pre caption="suppression d'une partition">
Command (m for help): <i>d</i>
Partition number (1-4): <i>1</i>
</pre>

<p>
La partition a été programmée pour la suppression. Elle ne sera plus affichée
si vous tapez <c>p</c>, mais elle ne sera pas supprimée tant que vos changements n'auront pas été sauvegardés. Si vous faites une erreur et souhaitez annuler sans sauvegarder vos changements, tapez <c>q</c> immédiatement et appuyez sur Entrée, vos partitions ne seront pas supprimées.
</p>

<p>
Maintenant, en supposant que vous souhaitiez enlever toutes les partitions de
votre système, répétez la commande <c>p</c> pour afficher une liste des
partitions et puis tapez <c>d</c> ainsi que le numéro de la partition que vous
souhaitez supprimer. Finalement, vous vous retrouverez avec une table de
partitions vide&nbsp;:
</p>

<pre caption="une table de partitions vide">
Disk /dev/sda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 byte
Device Boot    Start       End    Blocks   Id  System
Command (m for help):
</pre>

<p>
Maintenant que la table de partitions en mémoire est vide, nous sommes prêts
à créer les partitions. Nous allons utiliser le plan de partitionnement par
défaut vu précédemment. Bien sûr, ne suivez pas ces instructions à la
lettre si vous n'utilisez pas le même plan de partitionnement&nbsp;!
</p>

</body>
</subsection>

<subsection>
<title>Création de la partition de démarrage BIOS</title>
<body>

<p>
Nous allons commencer par créer la partition de démarrage BIOS. Tapez <c>n</c> pour
créer une nouvelle partition, ensuite <c>p</c> pour choisir une partition
primaire, suivi par <c>1</c> pour sélectionner la première partition primaire.
Quand on vous demande le premier secteur, assurez-vous qu'il démarre de <c>2048</c> (ce qui est requis pour le chargeur de démarrage) et tapez Entrée. Quand on vous demande
le dernier secteur, tapez <c>+2M</c> pour créer une partition de 2&nbsp;Mo&nbsp;:
</p>
<note>
Le démarrage depuis le secteur 2048 est une façon d'assurer la sécurité en cas d'échec, c'est à dire dans le cas  où le chargeur de démarrage ne trouve pas cette partition comme disponible pour son propre usage.
</note>
<pre caption="création de la partition de démarrage BIOS">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>1</i>
First sector (64-10486533532, default 64): <i>2048</i>
Last sector, +sectors +size{M,K,G} (4096-10486533532, default 10486533532): <i>+2M</i>
</pre>


<p>
Marquez la partition à des fins  EFI :
</p>

<pre caption="marquer la  partition à des fins EFI">
Command (m for help): <i>t</i>
Selected partition 1
Hex code (type L to list codes): <i>ef</i>
Changed system type of partition 1 to ef (EFI (FAT-12/16/32))
</pre>

</body>
</subsection>
<subsection>
<title>Créer la partition de démarrage</title>
<body>

<p>
Nous allons maintenant créer une partition de démarrage. Tapez <c>n</c> pour créer une nouvelle  partition, puis  <c>p</c> pour définir une partition primaire, suivi de  <c>2</c> pour choisir la seconde  partition primaire. Lorsque vous êtes invité à saisir le premier secteur, acceptez la valeur par défaut en faisant <e>Entrée</e>. Lorsque vous êtes invité à saisir le dernier secteur , tapez  <c>+128M</c>  pour créer une partition de taille égale à 128 MO :
</p>

<pre caption="créer la partition de démarrage">
Command (m for help): <i>n</i>
Command action
  e   extended
  p   primary partition (1-4)
<i>p</i>
Partition number (1-4): <i>2</i>
First sector (5198-10486533532, default 5198): <comment>(Hit enter)</comment>
Last sector, +sectors +size{M,K,G} (4096-10486533532, default 10486533532): <i>+128M</i>
</pre>

<p>
Maintenant, lorsque vous tapez <c>p</c>, vous devriez obtenir l'impression suivante :
</p>

<pre caption="Created boot partition">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

   Device Boot    Start       End    Blocks   Id  System
/dev/sda1             1         3      5198+  ef  EFI (FAT-12/16/32)
/dev/sda2             3        14    105808+  83  Linux
</pre>

<p>
Nous devons rendre cette partition amorçable. Tapez <c>a</c> pour inverser le drapeau d'amorçage de la partition et choisissez <c>2</c>. Si vous pressez  <c>p</c> à nouveau, vous noterez qu'une étoile <e>*</e> apparaît dans la colonne "Boot".
</p>

</body>
</subsection>

<subsection>
<title>Création de la partition de mémoire virtuelle</title>
<body>

<p>
À présent, créons la partition de mémoire virtuelle. Pour ce faire, tapez
<c>n</c> pour créer une nouvelle partition, puis <c>p</c> pour dire à fdisk que
vous souhaitez une partition primaire. Ensuite, tapez <c>3</c> pour créer la
troisièe partition primaire, <path>/dev/sda3</path> dans notre cas. Quand on
vous demandera le premier secteur, tapez Entrée. Quand on vous demandera le
dernier secteur, tapez <c>+512M</c> (ou tout autre taille dont vous avez besoin pour votre partition de mémoire virtuelle) pour créer une partition de 512 Mo .</p>

<p>
Ensuite, tapez <c>t</c> pour choisir le type de partition, <c>3</c> pour
sélectionner la partition que vous venez juste de créer puis tapez <c>82</c>
pour choisir le type de partition «&nbsp;Linux swap&nbsp;».
</p>


</body>
</subsection>

<subsection>
<title>Création de la partition racine (Root)</title>
<body>

<p>
Pour finir, créons la partition principale. Pour ce faire, tapez <c>n</c> pour
créer une nouvelle partition, puis <c>p</c> pour dire à fdisk que vous
souhaitez une partition primaire. Ensuite, tapez <c>4</c> pour créer la
quatrième partition primaire, <path>/dev/sda4</path> dans notre cas. Quand on
vous demande le premier secteur, tapez Entrée. Quand on vous demande le
dernier secteur, tapez Entrée pour créer une partition qui prend le reste de
la place libre sur votre disque. Après avoir terminé ces étapes, taper
<c>p</c> devrait afficher une table de partitions qui ressemble à ceci&nbsp;:
</p>

<pre caption="Affichage des partitions après la création de la partition
racine">
Command (m for help): <i>p</i>

Disk /dev/sda: 30.0 GB, 30005821440 bytes
240 heads, 63 sectors/track, 3876 cylinders
Units = cylinders of 15120 * 512 = 7741440 bytes

   Device Boot    Start       End    Blocks   Id  System
/dev/sda1             1         3      5198+  ef  EFI (FAT-12/16/32)
/dev/sda2   *         3        14    105808+  83  Linux
/dev/sda3            15        81    506520   82  Linux swap
/dev/sda4            82      3876  28690200   83  Linux
</pre>

</body>
</subsection>

<subsection>
<title>Sauvegarder le plan de partitionnement</title>
<body>

<p>
Pour sauvegarder le plan de partitionnement et quitter <c>fdisk</c>, tapez <c>w</c>.
</p>

<pre caption="sauvegarder et quitter fdisk">
Command (m for help): <i>w</i>
</pre>

<p>
Maintenant que vos partitions sont créées, vous pouvez continuer avec
<uri link="#filesystems">Création des systèmes de fichiers</uri>.
</p>

</body>
</subsection>
</section>





<section id="filesystems">
<title>Création des systèmes de fichiers</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Maintenant que vos partitions sont créées, il est temps d'y installer un
système de fichiers. Si vous ne vous souciez pas de quel système de fichiers
choisir et êtes satisfait de ceux que nous utilisons par défaut dans ce manuel,
continuez avec <uri link="#filesystems-apply">Application d'un système de
fichiers à une partition</uri>. Sinon, continuez à lire pour en apprendre plus
sur les systèmes de fichiers disponibles.
</p>

</body>
</subsection>
<subsection>

<include href="hb-install-filesystems.xml"/>

</subsection>

<subsection id="filesystems-apply">
<title>Application d'un système de fichiers à une partition</title>
<body>

<p>
Pour créer un système de fichiers sur une partition ou un volume, chaque
système de fichiers fournit ses propres outils&nbsp;:
</p>

<table>
<tr>
  <th>Système de fichiers</th>
  <th>Commande de création</th>
</tr>
<tr>
  <ti>ext2</ti>
  <ti><c>mkfs.ext2</c></ti>
</tr>
<tr>
  <ti>ext3</ti>
  <ti><c>mkfs.ext3 </c></ti>
</tr>
<tr>
  <ti>ext4</ti>
  <ti><c>mkfs.ext4 </c></ti>
</tr>
<tr>
  <ti>reiserfs</ti>
  <ti><c>mkreiserfs</c></ti>
</tr>
<tr>
  <ti>xfs</ti>
  <ti><c>mkfs.xfs</c></ti>
</tr>
<tr>
  <ti>jfs</ti>
  <ti><c>mkfs.jfs</c></ti>
</tr>
</table>

<p>
Par exemple, pour formater la partition de démarrage (<path>/dev/sda2</path>
dans notre exemple) en ext2 et la partition principale (<path>/dev/sda4</path>
dans notre exemple) en ext4, nous utiliserons&nbsp;:
</p>

<pre caption="application d'un système de fichiers sur une partition">
# <i>mkfs.ext2 /dev/sda2</i>
# <i>mkfs.ext4 /dev/sda4</i>
</pre>

<p>
À présent, créons les systèmes de fichiers sur nos partitions (ou volumes
logiques) fraichement créées.
</p>

</body>
</subsection>

<subsection>
<title>Activation de la partition de mémoire virtuelle</title>
<body>

<p>
<c>mkswap</c> est la commande utilisée pour initialiser la partition de mémoire
virtuelle&nbsp;:
</p>

<pre caption="création d'une signature de mémoire virtuelle">
# <i>mkswap /dev/sda3</i>
</pre>

<p>
Pour activer la partition de mémoire virtuelle, utilisez <c>swapon</c>&nbsp;:
</p>

<pre caption="activation de la partition de mémoire virtuelle">
# <i>swapon /dev/sda3</i>
</pre>

<p>
Créez et activez la partition de mémoire virtuelle maintenant.
</p>

</body>
</subsection>

</section>




<section>
<title>Monter les partitions</title>
<body>

<p>
Maintenant que nos partitions sont initialisées et contiennent un système de
fichiers, il est temps de les monter avec la commande <c>mount</c>. N'oubliez
pas de créer les points de montage nécessaires pour toutes les partitions que
vous avez créées. Par exemple, pour monter les partitions de démarrage et
racine&nbsp;:
</p>

<pre caption="Monter les partitions">
# <i>mount /dev/sda4 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/sda2 /mnt/gentoo/boot</i>
</pre>

<note>
si vous installez <path>/tmp</path> sur une partition séparée, n'oubliez pas de
définir les permissions nécessaires après avoir monté la partition. Utilisez la
commande <c>chmod 1777 /mnt/gentoo/tmp</c>. La même remarque s'applique à
<path>/var/tmp</path>.
</note>

<p>
Nous devrons également monter le système de fichiers proc (une interface
virtuelle avec le noyau) sur <path>/proc</path>, mais nous devons d'abord placer
nos fichiers sur les partitions.
</p>

<p>
Continuez avec <uri link="?part=1&amp;chap=5">Installer les fichiers
d'installation de Gentoo</uri>.
</p>

</body>
</section>
</sections>
