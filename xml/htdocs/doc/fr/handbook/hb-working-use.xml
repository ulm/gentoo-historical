<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-working-use.xml,v 1.23 2007/03/20 10:19:32 cam Exp $ -->

<sections>

<abstract>
Les options USE sont une part très importante de Gentoo. Dans ce chapitre, vous
apprendrez à utiliser ces options et à comprendre comment ces options
interagissent avec votre système.
</abstract>

<version>1.36</version>
<date>2007-03-19</date>

<section>
<title>Que sont les paramètres USE&nbsp;?</title>
<subsection>
<title>Les notions sous-jacentes aux paramètres USE</title>
<body>

<p>
Losque vous installez Gentoo (ou n'importe quelle autre distribution, voire
système d'exploitation), vous faites des choix qui dépendent de l'environnement
dans lequel vous travaillez. La configuration d'un serveur est différente de
celle d'une station de travail. Une machine destinée aux jeux diffère d'une
station de travail pour du rendu 3D.
</p>

<p>
Cela s'applique non seulement au choix des paquets que vous comptez installer,
mais aussi aux fonctionnalités que chaque paquet devrait supporter. Si vous
n'avez pas besoin d'OpenGL, pourquoi prendre la peine d'installer OpenGL et de
construire la plupart de vos paquets avec support pour OpenGL&nbsp;? Si vous ne
souhaitez pas utiliser KDE, pourquoi compiler des paquets avec le support KDE
alors qu'ils fonctionneraient parfaitement sans ce support&nbsp;?
</p>

<p>
Pour aider les utilisateurs à déterminer ce qu'ils veulent installer ou
activer, nous souhaitions que l'utilisateur spécifie son environnement de
manière simple. Il est ainsi obligé de décider ce qu'il veut vraiment, et cela
facilite la tâche de Portage, notre gestionnaire de paquets, pour prendre les
décisions utiles.
</p>

</body>
</subsection>
<subsection>
<title>Définition des paramètres USE</title>
<body>

<p>
C'est ici qu'interviennent les paramètres USE. Un tel paramètre est un mot-clé
qui définit le support et les dépendances pour un concept donné. Si vous
définissez un paramètre USE donné, Portage saura que vous voulez avoir le
support correspondant au mot-clé choisi. Bien entendu, cela affecte aussi les
dépendances des paquets.
</p>

<p>
Considérons un exemple spécifique&nbsp;: le mot-clé <c>kde</c>. Si vous n'avez
pas ce mot-clé dans votre variable <c>USE</c>, tous les paquets qui offrent un
support <e>optionnel</e> pour KDE seront compilés <e>sans</e> ce support. Tous
les paquets qui possèdent des dépendances KDE <e>optionnelles</e> seront
installés <e>sans</e> installer les bibliothèques KDE (en tant que
dépendances). Si vous avez le mot-clé <c>kde</c>, alors ces paquets seront
compilés <e>avec</e> le support KDE et les bibliothèques KDE seront installées
en tant que dépendances.
</p>

<p>
Définir correctement ces mots-clés vous donnera finalement un système adapté
spécifiquement à vos besoins.
</p>

</body>
</subsection>
<subsection>
<title>Quels sont les paramètres USE disponibles&nbsp;?</title>
<body>

<p>
On distingue deux types de paramètres USE&nbsp;: les paramètres <e>globaux</e>
et les paramètres <e>locaux</e>.
</p>

<ul>
  <li>
    Un paramètre USE <e>global</e> est utilisé par plusieurs paquets dans
    l'ensemble du système. C'est ce que la plupart des gens considèrent comme
    les paramètres USE.
  </li>
  <li>
    Un paramètre USE <e>local</e> n'est utilisé que par un seul paquet et n'est
    utilisé que pour des décisions spécifiques à ce paquet.
  </li>
</ul>

<p>
Une liste des paramètres USE peut être trouvée <uri
link="/dyn/use-index.xml">en ligne</uri> ou localement dans
<path>/usr/portage/profiles/use.desc</path>.
</p>

<p>
La liste des paramètres USE locaux se trouve dans le fichier
<path>/usr/portage/profiles/use.local.desc</path>.
</p>

</body>
</subsection>
</section>
<section>
<title>Utiliser les paramètres USE</title>
<subsection>
<title>Déclarer des paramètres USE permanents</title>
<body>

<p>
Nous allons maintenant vous expliquer comment déclarer des paramètres USE, en
espérant que vous soyez convaincu de leur importance.
</p>

<p>
Comme mentionné plus haut, tous les paramètres USE sont déclarés dans la
variable <c>USE</c>. Pour permettre aux utilisateurs de trouver et choisir
facilement les paramètres USE, nous fournissons une configuration <e>par
défaut</e> de USE. Cette configuration est un ensemble de paramètres USE dont
nous pensons qu'ils sont communément employés par les utilisateurs de Gentoo.
Cette configuration par défaut est déclarée dans les fichiers
<path>make.defaults</path> de votre profil.
</p>

<p>
Le profil de votre système est défini par le fichier vers lequel pointe le lien
symbolique <path>/etc/make.profile</path>. Différents profils s'empilent les
uns sur les autres. Le profil le plus haut est <path>base</path>
(<path>/usr/portage/profiles/base</path>).
</p>

<p>
Voyons les valeurs par défaut d'un profil 2004.3&nbsp;:
</p>

<pre caption="Variable USE après cumul d'un profil 2004.3">
<comment>(Cet exemple est le résultat du cumul des options définies dans base, default-linux,
default-linux/x86 et default-linux/x86/2004.3)</comment>
USE="x86 oss apm arts avi berkdb bitmap-fonts crypt cups encode fortran f77
     foomaticdb gdbm gif gpm gtk imlib jpeg kde gnome libg++ libwww mad
     mikmod motif mpeg ncurses nls oggvorbis opengl pam pdflib png python qt
     quicktime readline sdl spell ssl svga tcpd truetype X xml2 xmms xv zlib"
</pre>

<p>
Comme vous pouvez le voir, cette variable contient déjà un bon nombre de
mots-clés. Ne modifiez <b>en aucun cas</b> les fichiers
<path>make.defaults</path> pour adapter la variable <c>USE</c> à vos
besoins&nbsp;: les changements effectués dans ce fichier seront effacés lorsque
vous mettrez Portage à jour&nbsp;!
</p>

<p>
Pour modifier cette configuration par défaut, vous devrez ajouter ou enlever
des mots-clés dans la variable <c>USE</c>. Cela est fait de manière globale en
définissant la variable <c>USE</c> dans <path>/etc/make.conf</path>. Dans cette
variable, vous ajouterez les paramètres USE que vous désirez et enlèverez ceux
que vous ne voulez pas. Cette dernière action est réalisée en préfixant le
mot-clé d'un signe moins ("-").
</p>

<p>
Par exemple, pour enlever le support pour KDE et QT, et ajouter le support pour
ldap, vous pourriez définir <c>USE</c> comme suit dans
<path>/etc/make.conf</path>&nbsp;:
</p>

<pre caption="Exemple de configuration USE dans /etc/make.conf">
USE="-kde -qt3 -qt4 ldap"
</pre>

</body>
</subsection>
<subsection>
<title>Déclarer des paramètres USE spécifiques à des paquets</title>
<body>

<p>
Parfois, vous voudrez déclarer certains paramètres USE pour une ou plusieurs
applications particulières mais pas pour l'ensemble du système. Pour cela, vous
devez créer le répertoire <path>/etc/portage</path> (s'il n'existe pas déjà) et
éditer le fichier <path>/etc/portage/package.use</path>.
</p>

<p>
Par exemple, si vous ne voulez pas du support global <c>berkdb</c> mais si vous
le voulez tout de même pour <c>mysql</c>, vous devrez y ajouter la ligne
suivante&nbsp;:
</p>

<pre caption="Exemple de /etc/portage/package.use">
dev-db/mysql berkdb
</pre>

<p>
Vous pouvez également <e>désactiver</e> explicitement un paramètre USE pour une
application particulière. Par exemple, si vous ne voulez pas du support
<c>java</c> dans PHP&nbsp;:
</p>

<pre caption="Second exemple de /etc/portage/package.use">
dev-php/php -java
</pre>

</body>
</subsection>
<subsection>
<title>Déclarer des paramètres USE temporaires</title>
<body>

<p>
Il peut arriver que vous ne souhaitiez définir un paramètre USE donné qu'en une
seule occasion. Plutôt qu'éditer <path>/etc/make.conf</path> deux fois (pour
faire puis défaire les changements), vous pouvez simplement déclarer USE comme
une variable d'environnement. Gardez toutefois à l'esprit que cette
modification de l'environnement sera probablement perdue lorsque vous
réinstallerez ou mettrez à jour cette application (soit explicitement, soit
lors d'une mise à jour du système).
</p>

<p>
Par exemple, nous allons retirer temporairement le support java de notre
configuration USE pendant l'installation de seamonkey.
</p>

<pre caption="Utilisation de USE comme une variable d'environnement">
# <i>USE="-java" emerge seamonkey</i>
</pre>

</body>
</subsection>
<subsection>
<title>Ordre de priorité</title>
<body>

<p>
Les différentes configurations de USE se conforment évidemment à un certain
ordre de priorité. Vous ne souhaitez sans doute pas déclarer <c>USE="-java"</c>
pour vous rendre compte après coup que <c>java</c> est déclaré malgré tout à
cause d'une valeur par défaut qui a priorité sur votre définition. Les
priorités dans les déclarations USE sont ordonnées comme suit (la première
déclaration a la plus faible priorité)&nbsp;:
</p>

<ol>
  <li>
    Déclaration par défaut dans les fichiers <path>make.defaults</path> de
    votre profil&nbsp;;
  </li>
  <li>
    Déclaration par l'utilisateur dans <path>/etc/make.conf</path>&nbsp;;
  </li>
  <li>
    Déclaration par l'utilisateur dans
    <path>/etc/portage/package.use</path>&nbsp;;
  </li>
  <li>
    Déclaration par l'utilisateur comme une variable d'environnement&nbsp;;
  </li>
</ol>

<p>
Pour voir la configuration finale de <c>USE</c> telle qu'elle est vue par
Portage, exécutez <c>emerge --info</c>. Cela listera toutes les variables
significatives (dont la variable <c>USE</c>) avec leur contenu tel qu'il est vu
par Portage.
</p>

<pre caption="Exécuter emerge --info">
# <i>emerge --info</i>
</pre>

</body>
</subsection>
<subsection>
<title>Reconfigurer votre système pour tenir compte des options USE</title>
<body>

<p>
Si vous avez modifié vos options de la variable USE et que vous voulez
reconfigurer votre système pour tenir compte de ces nouvelles options, utilisez
l'option <c>--newuse</c>&nbsp;:
</p>

<pre caption="Recompiler tout le système">
# <i>emerge --update --deep --newuse world</i>
</pre>

<p>
Ensuite, utilisez l'option <c>depclean</c> pour supprimer les dépendances
conditionnelles qui ne seraient plus utilisées.
</p>

<warn>
Exécuter <c>emerge --depclean</c> est une opération risquée qui ne devrait pas
être lancée à la légère. Vérifiez bien que la liste des paquets qui vont être
supprimés ne contient pas de paquet dont vous avez encore besoin. Dans
l'exemple ci-dessous, nous utilisons l'option <c>-p</c> pour afficher la liste
sans rien supprimer.
</warn>

<pre caption="Supprimer les paquets inutiles">
# <i>emerge -p --depclean</i>
</pre>

<p>
Quand cette opération est terminée, lancez <c>revdep-rebuild</c> pour
recompiler les applications qui avaient été liées dynamiquement avec les
paquets que vous venez de supprimer. La commande <c>revdep-rebuild</c> fait
partie du paquet <c>gentoolkit</c>&nbsp;; n'oubliez pas de l'installer.
</p>

</body>
</subsection>
</section>
<section>
<title>Paramètres USE spécifiques à un paquet</title>
<subsection>
<title>Savoir quels paramètres USE influencent un paquet</title>
<body>

<p>
Prenons l'exemple de <c>seamonkey</c>&nbsp;: à quels paramètres USE est-il
sensible&nbsp;? Pour le savoir, nous utilisons <c>emerge</c> avec les options
<c>--pretend</c> et <c>--verbose</c>&nbsp;:
</p>

<pre caption="Afficher les paramètres USE qui influencent un paquet">
# <i>emerge --pretend --verbose seamonkey</i>
These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild   R   ] www-client/seamonkey-1.0.7  USE="crypt gnome java -debug -ipv6
-ldap -mozcalendar -mozdevelop -moznocompose -moznoirc -moznomail -moznopango
-moznoroaming -postgres -xinerama -xprint" 0 kB
</pre>

<p>
<c>emerge</c> n'est pas le seul outil utilisable à cette fin. En effet, nous
disposons d'un outil dédié pour obtenir des informations sur les paquets. Il
s'appelle <c>equery</c> et appartient au paquet <c>gentoolkit</c>. Commencez
par installer <c>gentoolkit</c>&nbsp;:
</p>

<pre caption="Installer gentoolkit">
# <i>emerge gentoolkit</i>
</pre>

<p>
Exécutez maintenant <c>equery</c> avec l'argument <c>uses</c> pour afficher les
paramètres USE d'un paquet donné. Par exemple, pour le paquet
<c>gnumeric</c>&nbsp;:
</p>

<pre caption="Utiliser equery pour afficher les paramètres USE">
# <i>equery uses =gnumeric-1.6.3 -a</i>
[ Searching for packages matching =gnumeric-1.6.3... ]
[ Colour Code : <comment>set</comment> <i>unset</i> ]
[ Legend        : Left column  (U) - USE flags from make.conf  ]
[               : Right column (I) - USE flags packages was installed with ]
[ Found these USE variables for app-office/gnumeric-1.6.3 ]
 U I
- - <i>debug</i>   : Tells configure and the makefiles to build for debugging.
                     Effects vary across packages, but generally it will at
                     least add -g to CFLAGS.  Remember to set FEATURES=nostrip
                     too 
- - <i>gnome</i>   : Adds GNOME support
+ + <comment>python</comment>   : Adds support/bindings for the Python language
- - <i>static</i>   : !!do not set this during bootstrap!! Causes binaries to be
                     statically linked instead of dynamically
</pre>

</body>
</subsection>
</section>
</sections>
