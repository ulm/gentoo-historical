<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-ppc64-kernel.xml,v 1.14 2007/09/19 18:42:20 cam Exp $ -->
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>8.3</version>
<date>2007-08-12</date>

<section>
<title>Fuseau horaire</title>
<body>

<p>
Vous devez maintenant choisir votre fuseau horaire afin que votre système sache
où il se trouve. Cherchez votre fuseau horaire dans
<path>/usr/share/zoneinfo</path>, puis copiez-le sur
<path>/etc/localtime</path>. Évitez les zones
<path>/usr/share/zoneinfo/Etc/GMT*</path>, car leur nom prête à confusion. En
effet, <path>GMT-8</path> signifie en fait GMT+8.
</p>

<pre caption="Définir l'information relative au fuseau horaire">
# <i>ls /usr/share/zoneinfo</i>
<comment>(En supposant que vous utilisiez l'heure de Paris.)</comment>
# <i>cp /usr/share/zoneinfo/Europe/Paris /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>Installer les sources</title>
<subsection>
<title>Choisir un noyau</title>
<body>

<p>
Le cœur autour duquel sont bâties toutes les distributions est le noyau (en
anglais «&nbsp;kernel&nbsp;») Linux. Ce noyau est l'interface entre les
programmes utilisateur et le matériel. Gentoo offre un choix de plusieurs
noyaux à ses utilisateurs. Une liste complète, accompagnée de descriptions,
est disponible dans le <uri link="/doc/fr/gentoo-kernel.xml">Guide du noyau
Gentoo Linux</uri>.
</p>

<p>
Pour les systèmes PPC64, vous devez utiliser <c>gentoo-sources</c>.
</p>

<pre caption="Installer les sources d'un noyau">
# <i>emerge gentoo-sources</i>
</pre>

<p>
Si vous examinez le contenu de <path>/usr/src</path>, vous devriez voir un lien
symbolique nommé <path>linux</path> qui pointe vers les sources de votre noyau.
L'exemple suivant pointe vers <c>gentoo-sources-<keyval
id="kernel-version"/></c>, mais vous aurez sans doute installé une autre
version.
</p>

<pre caption="Examiner le lien symbolique vers le noyau">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx   1 root   root     12 Oct 13 11:04 /usr/src/linux -&gt; linux-<keyval id="kernel-version"/>
</pre>

<p>
Il est maintenant temps de configurer et de compiler votre noyau. Vous pourriez
utiliser <c>genkernel</c> qui vous construirait un noyau générique comme celui
qui se trouve sur le CD d'installation, mais il n'est pas complètement
fonctionnel sur les systèmes PPC64 actuellement.
</p>

<p>
Continuez donc la lecture avec la <uri link="#manual">Configuration
manuelle</uri>.
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>Configuration manuelle</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Configurer un noyau est parfois considéré comme la tâche la plus ardue que les
utilisateurs de Linux doivent accomplir. Rien n'est moins vrai... Après
avoir configuré quelques noyaux, vous ne vous rappellerez même plus que c'était
difficile ;)
</p>

<p>
Toutefois, une chose est vraie&nbsp;: vous devez connaitre votre système pour
configurer manuellement un noyau. La majeure partie de cette information peut
être obtenue en utilisant la commande <c>lspci</c> qui est dans le paquet
pciutils (<c>emerge pciutils</c>). Vous pourrez désormais utiliser <c>lspci</c>
depuis votre environnement en chroot. Vous pouvez ignorer les avertissements
<e>pcilib</e> (comme par exemple&nbsp;: pcilib: cannot open
/sys/bus/pci/devices) que vous obtiendrez avec <c>lspci</c>. Vous pouvez
également exécuter <c>lspci</c> depuis un environnement <e>non chrooté</e>. Le
résultat est le même. Vous pouvez également exécuter <c>lsmod</c> pour voir les
modules du noyau utilisés par le CD-ROM d'installation (ce qui peut vous
donner des indices sur les fonctionnalités nécessaires).
</p>

<pre caption="Lancer menuconfig">
# <i>cd /usr/src/linux</i>
<comment>(Important : si vous êtes dans un environnement 32&nbsp;bits, vous
devez modifier le Makefile dans /usr/src/linux et changer l'option
CROSS_COMPILE en CROSS_COMPILE ?= powerpc64-unknown-linux-gnu-. Vous devez
faire ceci avant de lancer make menuconfig sinon vous risquez d'avoir des
problèmes lors de la compilation.)</comment>
# <i>make menuconfig</i>
</pre>

<p>
Plusieurs sections d'options de configuration s'afficheront. Nous allons
d'abord dresser la liste de certaines options que vous devez activer (sinon,
Gentoo ne fonctionnera pas ou, du moins, pas sans quelques réglages
additionnels).
</p>

</body>
</subsection>
<subsection>
<title>Activer les options requises</title>
<body>

<p>
Avant toute chose, activez l'utilisation du code et des pilotes en
développement ou expérimentaux. C'est absolument nécessaire&nbsp;; si vous ne le
faites pas, des options très importantes ne seront pas affichées.
</p>

<pre caption="Sélectionner le code et les pilotes expérimentaux">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
Allez à la section <c>File Systems</c> et activez le support nécessaire pour
les systèmes de fichiers que vous utilisez. Ne les compilez <e>pas</e> sous
forme de modules, sinon votre système Gentoo ne pourra pas monter vos
partitions. Activez aussi <c>Virtual memory</c>, <c>/proc file system</c> et
<c>/dev/pts file system for Unix98 PTYs</c>&nbsp;:
</p>

<pre caption="Activer le support pour les systèmes de fichiers">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev/pts file system for Unix98 PTYs

 <comment>(Sélectionnez le(s) système(s) de fichiers dont vous avez besoin.)</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
Vous trouverez certaines des options mentionnées dans la partie <c>Pseudo
filesystems</c> qui est une sous-partie de <c>File systems</c>.
</note>

<p>
Si vous utilisez PPPoE ou un modem classique pour vous connecter à Internet,
vous aurez besoin des options du noyau suivantes (vous trouverez les options
mentionnées ici dans <c>Networking support</c> qui est une sous-partir de
<c>Device Drivers</c>)&nbsp;:
</p>

<pre caption="Sélection des pilotes PPPoE">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
Les deux options de compression ne vous feront pas de mal, mais ne sont pas
absolument nécessaires. L'option <c>PPP over Ethernet</c> n'est pas obligatoire
non plus, considérant qu'elle pourrait n'être utilisée que par <c>ppp</c>
lorsque ce dernier est configuré pour utiliser PPPoE en mode noyau.
</p>

<p>
Si vous en avez besoin, n'oubliez pas d'ajouter le support pour votre
carte Ethernet.
</p>

<p>
Désactivé le <c>ADB raw keycodes</c>&nbsp;:
</p>

<pre caption="Désactivé le support de ADB raw keycodes">
Macintosh Device Drivers ---&gt;
  [ ] Support for ADB raw keycodes
</pre>

<p>
Lorsque vous aurez terminé la configuration de votre noyau, poursuivez avec
la section <uri link="#compiling">Compiler et installer</uri>.
</p>

</body>
</subsection>
<subsection id="compiling">
<title>Compiler et installer</title>
<body>

<p>
Maintenant que votre noyau est configuré, il est temps de le compiler et de
l'installer. Quittez la configuration et lancez la compilation&nbsp;:
</p>

<pre caption="Compiler le noyau">
(Apple/IBM)  # <i>make &amp;&amp; make modules_install</i>
</pre>

<p>
Lorsque la compilation est terminée, copiez l'image du noyau dans
<path>/boot</path>. Nommez votre noyau comme bon vous semble, mais retenez le
nom que vous lui donnez, car vous devrez l'utiliser quand vous configurerez votre
chargeur de démarrage. Vous pourriez utiliser le numéro de version, par
exemple&nbsp;:
</p>

<pre caption="Installer le noyau">
(Apple/IBM)  # <i>cp vmlinux /boot/</i><comment>&lt;version&gt;</comment>
</pre>

<p>
Maintenant, poursuivez votre lecture avec <uri link="#kernel_modules">Configurer
les modules</uri>.
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>Configurer les modules</title>
<body>

<p>
Vous devez mettre une liste des modules que vous voulez charger automatiquement
dans <path>/etc/modules.autoload.d/kernel-2.6</path>. Vous pouvez ajouter des
options supplémentaires aux modules si vous le souhaitez.
</p>

<p>
Pour dresser la liste des modules disponibles, exécutez la commande
<c>find</c> telle qu'indiquée ci-dessous. N'oubliez pas de substituer &lt;kernel
version&gt; par la version du noyau que vous venez juste de compiler&nbsp;:
</p>

<pre caption="Consulter la liste des modules disponibles">
# <i>find /lib/modules/&lt;version du noyau&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
Par exemple, pour charger automatiquement le module <c>3c59x.ko</c>,
spécifiez-le dans le fichier <path>kernel-2.6</path>&nbsp;:
</p>

<pre caption="Modifier le fichier /etc/modules.autoload.d/kernel-2.6">
# <i>nano -w /etc/modules.autoload.d/kernel-2.6</i>
</pre>

<pre caption="Exemple de fichier /etc/modules.autoload.d/kernel-2.6">
3c59x
</pre>

<p>
Poursuivez l'installation avec <uri link="?part=1&amp;chap=8">Configurer votre
système</uri>.
</p>

</body>
</section>
</sections>
