<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-portage-files.xml,v 1.10 2007/10/28 21:30:26 titefleur Exp $ -->

<sections>

<abstract>
Maintenant que vous voulez en savoir plus sur Portage, il vous faut connaitre
où il stocke à la fois ses fichiers et ses données.
</abstract>

<version>1.11</version>
<date>2007-06-11</date>

<section>
<title>Les fichiers utilisés par Portage</title>
<subsection>
<title>Configurer Portage</title>
<body>

<p>
La configuration par défaut de Portage se trouve dans le fichier
<path>/etc/make.globals</path>. Vous remarquerez que toute la configuration de
Portage se fait grâce à des variables. Les variables et leur utilisation sont
décrites ci-dessous.
</p>

<p>
Puisque certaines directives de configuration diffèrent d'une architecture à
l'autre, Portage utilise aussi plusieurs fichiers de configuration qui font
partie de votre profil. Le profil sélectionné est celui vers qui le lien
<path>/etc/make.profile/make.defaults</path> pointe. La configuration de
Portage réside dans les différents fichiers <path>make.defaults</path> situés
dans l'arborescence qui mène au répertoire de votre profil. Nous aborderons les
profils et le répertoire <path>/etc/make.profile</path> plus loin dans ce
document.
</p>

<p>
Pour modifier une variable de configuration, <e>ne modifiez ni</e> le fichier
<path>/etc/make.globals</path>, <e>ni</e> les fichiers
<path>make.defaults</path>. Modifiez plutôt <path>/etc/make.conf</path> qui a
priorité sur les autres fichiers. Vous trouverez aussi un fichier
<path>/etc/make.conf.example</path>, un fichier d'exemple que vous pouvez
utiliser pour configurer votre propre <path>/etc/make.conf</path>.
</p>

<p>
Vous pouvez aussi définir ces variables dans votre environnement, mais nous ne
recommandons pas cette pratique.
</p>

</body>
</subsection>
<subsection>
<title>Informations spécifiques au profil</title>
<body>

<p>
Nous avons déjà mentionné le répertoire <path>/etc/make.profile</path>. Ce
n'est pas vraiment un répertoire, mais un lien symbolique vers un profil qui se
trouve, par défaut, dans <path>/usr/portage/profiles</path>&nbsp;; vous pouvez
créer des profils ailleurs. Ce lien symbolique définit le profil utilisé par
votre système.
</p>

<p>
Un profil contient des informations spécifiques pour chaque architecture telles
que la liste des paquets qui forment un système de base, une liste de paquets
qui ne fonctionnent pas ou qui sont masqués pour ce profil, etc.
</p>

</body>
</subsection>
<subsection>
<title>Configuration par l'utilisateur</title>
<body>

<p>
Pour influencer le comportement de Portage, vous devrez modifier des fichiers
dans le répertoire <path>/etc/portage</path>. Il est <e>vivement</e> recommandé
d'utiliser ces fichiers et de <e>ne pas</e> utiliser de variables
d'environnement.
</p>

<p>
Vous pouvez créer les fichiers suivants dans le répertoire
<path>/etc/portage</path>&nbsp;:
</p>

<ul>
  <li>
    <path>package.mask</path> contient la liste des paquets que vous voulez ne
    jamais installer.
  </li>
  <li>
    <path>package.unmask</path> contient la liste des paquets que vous voulez
    installer bien qu'ils aient été masqués par les développeurs Gentoo.
  </li>
  <li>
    <path>package.keywords</path> contient la liste des paquets que vous voulez
    installer même s'ils ne sont pas (encore) considérés stables pour votre
    architecture ou votre système.
  </li>
  <li>
    <path>package.use</path> contient la liste des options de la variable USE
    que vous voulez appliquer à certains paquets, mais que vous ne voulez pas
    utiliser pour tout votre système.
  </li>
</ul>

<p>
La page man contient une liste exhaustive des fichiers qui influencent le
comportement de Portage.
</p>

<pre caption="Lire la page man de Portage">
$ <i>man portage</i>
</pre>

</body>
</subsection>
<subsection>
<title>Déplacer les fichiers et les répertoires de Portage</title>
<body>

<p>
Les fichiers de configuration mentionnés ci-dessus ne peuvent pas se trouver
ailleurs. Portage les recherche toujours au même endroit. Cependant, Portage
peut être configuré pour utiliser d'autres répertoires pour certains
fichiers&nbsp;: le répertoire temporaire d'installation, les sources, l'arbre
Portage, etc.
</p>

<p>
Par défaut, tous ces fichiers sont stockés dans des répertoires bien connus,
mais ils peuvent être stockés ailleurs en fonction de variables définies dans
le fichier <path>/etc/make.conf</path>. Ce qui suit est consacré aux différents
répertoires utilisés par Portage et à la methode à utiliser pour les déplacer.
</p>

<p>
Ce document n'est pas une liste exhaustive de tous les répertoires disponibles.
Cette liste est disponible dans les pages man de Portage et de
<path>make.conf</path>&nbsp;:
</p>

<pre caption="Lire les pages man de Portage et de make.conf">
$ <i>man portage</i>
$ <i>man make.conf</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>Emplacemements des fichiers</title>
<subsection>
<title>L'arbre Portage</title>
<body>

<p>
Le répertoire par défaut pour l'arbre Portage est <path>/usr/portage</path>. La
variable PORTDIR peut être utilisée pour définir un autre emplacement.
N'oubliez pas de rediriger le lien symbolique <path>/etc/make.profile</path>
vers le répertoire ad hoc.
</p>

<p>
Si vous redéfinissez la variable PORTDIR, vous devriez sans doute redéfinir les
variables PKGDIR, DISTDIR et RPMDIR, car elles ne prendront pas la valeur de
PORTDIR en compte.
</p>

</body>
</subsection>
<subsection>
<title>Binaires précompilés</title>
<body>

<p>
Portage peut également utiliser des paquets précompilés lors des installations,
bien que cette fonctionnalité soit désactivée par défaut. Les paquets
précompilés sont placés dans le répertoire défini par la variable PKGDIR, qui
vaut <path>/usr/portage/packages</path> par défaut.
</p>

</body>
</subsection>
<subsection>
<title>Code source</title>
<body>

<p>
Le code source des applications est conservé dans
<path>/usr/portage/distfiles</path>. Cet emplacement est défini par la variable
DISTDIR.
</p>

</body>
</subsection>
<subsection>
<title>Le cache de Portage</title>
<body>

<p>
Le cache de Portage (contient les dates de modification, les paquets virtuels,
les informations de dépendance...) est stocké dans <path>/var/cache/edb</path>.
Ce n'est vraiment qu'un cache&nbsp;: vous pouvez l'effacer à un moment donné si
vous n'utilisez pas Portage à ce moment-là.
</p>

</body>
</subsection>
<subsection>
<title>La base de données de Portage</title>
<body>

<p>
Portage stocke l'état de votre système (quels paquets sont installés, quels
fichiers appartiennent à quel paquet...) dans <path>/var/db/pkg</path>. <e>Ne
modifiez pas</e> ces fichiers à la main&nbsp;! Cela pourrait complètement
déboussoler Portage vis-à-vis de votre système.
</p>

</body>
</subsection>
</section>
<section>
<title>Compiler les paquets</title>
<subsection>
<title>Fichiers temporaires</title>
<body>

<p>
Portage sauve ses fichiers temporaires dans <path>/var/tmp</path> par défaut.
La variable PORTAGE_TMPDIR définit cet emplacement.
</p>

<p>
Si vous redéfinissez la variable PORTAGE_TMPDIR, vous devriez aussi redéfinir
BUILD_PREFIX, car elle ne tient pas compte du changement automatiquement.
</p>

</body>
</subsection>
<subsection>
<title>Répertoire de compilation</title>
<body>

<p>
Portage crée un répertoire de compilation pour chaque paquet dans le répertoire
<path>/var/tmp/portage</path>. Cet emplacement est défini par la variable
BUILD_PREFIX.
</p>

</body>
</subsection>
<subsection>
<title>Localisation du système de fichiers principal</title>
<body>

<p>
Par défaut, Portage installe tous les fichiers sur le système de fichiers
courant (<path>/</path>), mais il peut copier les fichiers ailleurs si vous
redéfinissez la variable ROOT. Cela peut être utile si vous voulez construire
des nouvelles images d'installation pour d'autres systèmes.
</p>

</body>
</subsection>
</section>

<section>
<title>Fonctions de journalisation des événements</title>
<subsection>
<title>Les messages des ebuilds</title>
<body>

<p>
Portage peut journaliser les messages des événements relatifs aux ebuilds en
utilisant un fichier pour chaque ebuild, mais uniquement si la variable
PORT_LOGDIR correspond à un répertoire dans lequel Portage peut écrire
(l'utilisateur portage doit disposer des permissions nécessaires).
Par défaut, cette variable n'est pas définie.
Si PORT_LOGDIR n'est pas définie, vous ne recevrez pas les messages des
événements relatifs à la construction des paquets avec le système de journal
actuel, mais vous devriez en recevoir quelques-uns avec le nouveau système
appelé <c>elog</c>. Si PORT_LOGDIR est définie et que vous utilisez elog,
vous recevrez à la fois les messages de construction et tous ceux qui sont
sauvegardés par elog, comme expliqué plus loin.
</p>

<p>
Portage propose un contrôle fin de la tenue du journal des événements
<e>via</e> <c>elog</c>&nbsp;:
</p>

<ul>
  <li>
    PORTAGE_ELOG_CLASSES&nbsp;: Utilisez cette variable pour définir le type de
    message à enregistrer. Vous pouvez utiliser n'importe quelle combinaison à
    base d'<c>info</c>, <c>warn</c>, <c>error</c>, <c>log</c> et <c>qa</c>,
    séparés par des espaces.
    <ul>
      <li>
        <c>info</c>&nbsp;: Enregistre les messages «&nbsp;einfo&nbsp;» produits
        par un ebuild,
      </li>
      <li>
        <c>warn</c>&nbsp;: Enregistre les messages «&nbsp;ewarn&nbsp;» produits
        par un ebuild,
      </li>
      <li>
        <c>error</c>&nbsp;: Enregistre les messages «&nbsp;eerror&nbsp;»
        produits par un ebuild,
      </li>
      <li>
        <c>log</c>&nbsp;: Enregistre les messages «&nbsp;elog&nbsp;» que l'on
        trouve dans certains ebuilds,
      </li>
      <li>
        <c>qa</c>&nbsp;: Enregistre les messages «&nbsp;QA Notice&nbsp;»
        produits par un ebuild.
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_SYSTEM&nbsp;: Cette variable sert à choisir le ou les modules
    qui vont traiter les messages. L'enregistrement est désactivé si cette
    variable reste nulle. Vous pouvez utiliser n'importe quelle combinaison des
    modules <c>save</c>, <c>custom</c>, <c>syslog</c>, <c>mail</c>,
    <c>save_summary</c>, et <c>mail_summary</c>, séparés par un espace. Vous
    devez sélectionner au moins un module pour utiliser elog.
    <ul>
      <li>
        <c>save</c>&nbsp;: Ce module active la sauvegarde d'un enregistrement
        par paquet dans <path>$PORT_LOGDIR/elog</path>, ou
        <path>/var/log/portage/elog</path> si $PORT_LOGDIR n'est pas définie,
      </li>
      <li>
        <c>custom</c>&nbsp;: Transmet tous les messages à une commande définie
        par l'utilisateur dans $PORTAGE_ELOG_COMMAND (détaillée plus bas),
      </li>
      <li>
        <c>syslog</c>&nbsp;: Envoie tous les messages à l'outil de
        journalisation des événements du système (syslog-ng par exemple),
      </li>
      <li>
        <c>mail</c>&nbsp;: Envoie tous les messages à un serveur de mail défini
        dans $PORTAGE_ELOG_MAILURI, détaillée plus loin dans ce document. Cette
        fonction nécessite une version de Portage supérieure ou égale à 2.1.1,
      </li>
      <li>
        <c>save_summary</c>&nbsp;: Similaire à <c>save</c>, mais rassemble tous
        les messages dans <path>$PORT_LOGDIR/elog/summary.log</path>, ou
        <path>/var/log/portage/elog/summary.log</path> si $PORT_LOGDIR n'est pas
        définie,
      </li>
      <li>
        <c>mail_summary</c>: Similaire à <c>mail</c>, mais envoie tous les
        messages dans un seul mail quand emerge se termine.
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_COMMAND&nbsp;: Cette option n'est utile qu'avec le module
    <c>custom</c> activé. C'est ici que vous spécifiez la commande qui va
    traiter les événements. Vous pouvez utiliser deux variables pour
    personnaliser votre commande&nbsp;: ${PACKAGE}, qui est le nom et la version
    du paquet, et ${LOGFILE}, qui est le chemin absolu du fichier
    d'enregistrement. Voici un exemple d'utilisation&nbsp;:
    <ul>
      <li>
        PORTAGE_ELOG_COMMAND="/chemin/vers/mon/enregistreur -p '\${PACKAGE}'
        -f '\${LOGFILE}'"
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_MAILURI&nbsp;: Cette option sert à définir les paramètres du
    module <c>mail</c> tels que l'adresse, le nom d'utilisateur, le mot de
    passe, le serveur de mail et le numéro de port. Les paramètres par défaut
    sont "root@localhost localhost".
  </li>
  <li>
    Prenons l'exemple d'un serveur SMTP avec authentification basée sur le nom
    et le mot de passe et qui écoute sur un port particulier (par défaut, un
    serveur SMTP est configuré sur le port 25)&nbsp;:
    <ul>
      <li>
        PORTAGE_ELOG_MAILURI="utilisateur@mon.domaine
        nom_utilisateur:mot_de_passe@smtp.mon.domaine:995"
      </li>
    </ul>
  </li>
  <li>
    PORTAGE_ELOG_MAILFROM&nbsp;: Vous permet de modifier le champ
    «&nbsp;From&nbsp;» (expéditeur) des mails envoyés par elog. Par défaut, ces
    mails ont pour expéditeur «&nbsp;portage&nbsp;».
  </li>
  <li>
    PORTAGE_ELOG_MAILSUBJECT&nbsp;: Avec cette variable, vous changez le sujet
    des mails envoyés par elog. Notez que vous pouvez utiliser les variables
    ${PACKAGE} et ${HOST} pour afficher respectivement le couple nom/version du
    paquet et le nom de domaine de la machine hôte sur laquelle tourne Portage.
  </li>
  <li>
    Voici un exemple d'utilisation&nbsp;:
    <ul>
      <li>
        PORTAGE_ELOG_MAILSUBJECT="le paquet \${PACKAGE} a été construit sur
        \${HOST} accompagné de messages."
      </li>
    </ul>
  </li>
</ul>

<impo>
Si vous utilisiez <c>enotice</c> avec Portage-2.0.*, vous devez le désinstaller
complétement car enotice est incompatible avec elog.
</impo>

</body>
</subsection>
</section>
</sections>
