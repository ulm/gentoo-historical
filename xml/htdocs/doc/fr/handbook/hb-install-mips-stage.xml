<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-mips-stage.xml,v 1.7 2014/03/17 14:38:51 jaaf Exp $ -->

<sections>

<abstract>
L'installation de Gentoo utilise une archive d'étape 3. Dans ce chapitre, nous montrons comment extraire cette archive et comment configurer Portage.
</abstract>
<version>13</version>
<date>2013-12-17</date>

<section>
<title>Installer une archive d'étape</title>
<subsection>
<title>Régler la date et l'heure</title>
<body>

<p>
Avant de poursuivre, vous devez régler l'heure et la date de votre système. Si
l'horloge de votre machine n'est pas à l'heure et surtout à la bonne date, des
effets indésirables se produiront.
</p>

<p>
Pour afficher la date et l'heure, tapez <c>date</c>&nbsp;:
</p>

<pre caption="afficher la date et l'heure">
# <i>date</i>
Fri Mar 29 16:21:18 CEST 2013
</pre>

<p>
Pour changer la date et l'heure de votre système, utilisez <c>date
MMJJhhmmAAAA</c> (<b>M</b>ois, <b>J</b>our, <b>h</b>eure, <b>m</b>inute,
<b>A</b>nnée). Vous pourrez définir votre fuseau horaire plus tard. Par
exemple, pour le 29 mars 2013 à 16:21, utilisez&nbsp;:
</p>

<pre caption="régler la date et l'heure">
# <i>date 032916212013</i>
</pre>

</body>
</subsection>
<subsection>
<title>Choisir son archive d'étape</title>
<body>

<p>
La prochaine étape consiste à installer l'archive d'<e>étape</e> de votre
choix sur votre système.
</p>

</body>
</subsection>
</section>
<section>
<title>Télécharger l'archive depuis Internet</title>
<subsection>
<body>

<p>
Allez au point de montage Gentoo sur lequel vous avez monté vos systèmes de
fichiers (probablement <path>/mnt/gentoo</path>)&nbsp;:
</p>

<pre caption="aller au point de montage Gentoo">
# <i>cd /mnt/gentoo</i>
</pre>

<p>
Le tableau ci-dessous précise exactement quelle archive il vous faut pour votre
système. Les archives peuvent être téléchargées depuis un <uri
link="/main/en/mirrors.xml">miroir officiel Gentoo</uri> dans le répertoire
<path>experimental/mips/stages</path>.
</p>

<table>
<tr>
  <th>Endianness</th>
  <th>Processeur</th>
  <th>Notation</th>
</tr>
<tr>
  <ti>
    Big Endian<br />
    <e>(Utilisateurs SGI)</e>
  </ti>
  <ti>
    R4000<br />
    R4400<br />
    R4600
  </ti>
  <ti>mips3</ti>
</tr>
<tr>
  <ti>
    Big Endian<br />
    <e>(Utilisateurs SGI)</e>
  </ti>
  <ti>
    R5000<br />
    RM5200<br />
    RM7000<br />
    R10000<br />
    R12000<br />
    R14000
  </ti>
  <ti>mips4</ti>
</tr>
<tr>
  <ti>
    Little Endian<br />
    <e>(Utilisateurs Cobalt)</e>
  </ti>
  <ti>
    RM5230<br />
    RM5231
  </ti>
  <ti>mipsel4</ti>
</tr>
<tr>
  <ti>
    Little Endian<br />
    <e>(Autres)</e>
  </ti>
  <ti>Tous les types standards de CPU</ti>
  <ti>mipsel1</ti>
</tr>
</table>

<warn>
bien que nous fournissions des archives de stages pour MIPS1 Little Endian, le
support concernant les systèmes MIPS Little Endian est actuellement restreint à
la gamme de serveurs Cobalt. Ces archives sont fournies pour ceux qui
voudraient expérimenter Gentoo sur du matériel non supporté, auquel cas nous
supposons que vous savez bien ce que vous faites.
</warn>

<p>
Si vous devez passer par un serveur mandataire, vous devez définir les
variables d'environnement <c>http_proxy</c> et <c>ftp_proxy</c>&nbsp;:
</p>

<pre caption="définir un serveur mandataire pour wget">
# <i>export http_proxy="http://proxy.server.com:port"</i>
# <i>export ftp_proxy="http://proxy.server.com:port"</i>
</pre>

<p>
L'image d'amorçage réseau Gentoo/MIPS fournit <c>wget</c> pour télécharger des
fichiers. À cause des contraintes de place, il est impossible de founir un
navigateur plus puissant avec les images d'amorce réseau SGI. Les utilisateurs
du LiveCD peuvent utiliser <c>elinks</c>.
</p>

<pre caption="télécharger l'archive avec wget">
# <i>wget -c http://distfiles.gentoo.org/releases/mips/mips4/stage3-mips4-2007.0.tar.bz2</i>
</pre>

<p>
Vous pouvez utiliser les commandes <c>md5sum</c> ou <c>sha1sum</c> pour
vérifier l'intégrité de l'archive que vous venez de télécharger. Pour cela,
comparez le résultat affiché par la commande avec la somme de contrôle
disponible sur le miroir.  Par exemple, pour vérifier l'intégrité du fichier
stage pour mips4&nbsp;:
</p>

<pre caption="exemple de calcul de somme de contrôle d'une archive">
# <i>md5sum -c stage3-mips4-2008.0.tar.bz2.DIGESTS</i>
stage3-mips4-2008.0.tar.bz2: OK
# <i>sha1sum -c stage3-mips4-2008.0.tar.bz2.DIGESTS</i>
stage3-mips4-2008.0.tar.bz2: OK
</pre>

</body>
</subsection>
<subsection>
<title>Décompresser l'archive d'étape</title>
<body>

<p>
Ensuite, décompressez l'archive sur votre système. Nous utiliserons l'outil GNU
<c>tar</c>, car c'est la méthode la plus aisée.
</p>

<pre caption="décompressez l'archive">
# <i>tar xjpf stage?-*.tar.bz2</i>
</pre>

<p>
Faites bien attention à utiliser les mêmes options (<c>xjpf</c>). Le <c>x</c>
signifie <e>extraire</e>, le <c>j</c> <e>décompresser avec bzip2</e>, le
<c>p</c> <e>préserver les permissions</e> et le <c>f</c> veut dire que nous
désarchivons un fichier d'archive, pas l'entrée standard.
</p>

<p>
Maintenant que le «&nbsp;stage&nbsp;» a été décompressé, continuons avec le
chapitre <uri link="#compile_options">Configurer les options de compilation</uri>.
</p>

</body>
</subsection>
</section>



<section id="compile_options">
<title>Configurer les options de compilation</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Pour optimiser Gentoo, vous pouvez définir quelques variables qui influencent
le comportement de Portage. Toutes ces variables peuvent être définies comme
des variables d'environnement (en utilisant <c>export</c>), mais elles ne sont
dans ce cas pas permanentes. Pour conserver votre configuration, vous pouvez
utiliser <path>/etc/make.conf</path>, un fichier de configuration de Portage.
C'est ce fichier que nous allons éditer maintenant.
</p>

<note>
une liste commentée de toutes les variables de Portage se trouve dans le
fichier <path>/mnt/gentoo/etc/make.conf.example</path>. Pour installer Gentoo
avec succès, seules celles mentionnées ci-dessous sont indispensables.
</note>

<p>
Lancez votre éditeur préféré (dans ce guide, nous utiliserons <c>nano</c>, mais
<c>vi</c> est aussi fourni) pour modifier les variables d'optimisation décrites
ci-dessous.
</p>

<pre caption="ouvrir /etc/make.conf">
# <i>nano -w /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Comme vous l'avez sans doute remarqué, le fichier
<path>make.conf.example</path> est structuré de manière générique&nbsp;: les
lignes de commentaires commencent par un "#", les autres définissent des
variables en utilisant la syntaxe <c>VARIABLE="contenu"</c>. Le fichier
<path>make.conf</path> utilise la même syntaxe. Certaines variables sont
décrites ci-dessous.
</p>

</body>
</subsection>

<subsection>
<title>CFLAGS et CXXFLAGS</title>
<body>

<p>
Les variables <c>CFLAGS</c> et <c>CXXFLAGS</c> définissent les options
d'optimisation pour le compilateur <c>gcc</c>, respectivement en C et C++.
Bien que nous les définissions de manière générale ici, vous n'obtiendrez des
performances maximales qu'en définissant les optimisations individuellement
pour chaque programme. La raison est que chaque programme est différent.
</p>

<p>
Dans <path>make.conf</path>, vous devriez définir les options d'optimisation
qui, selon vous, donneront plus de rapidité à votre système <e>de manière
générale</e>. Ne mettez pas d'options expérimentales dans cette
variable&nbsp;: trop d'optimisations peut engendrer des comportements anormaux
dans certains programmes (plantage ou, pire, fonctionnement défectueux).
</p>

<p>
Nous n'allons pas expliquer toutes les options d'optimisations possibles.  Pour
les connaitre toutes, consultez <uri link="http://gcc.gnu.org/onlinedocs/">les
manuels en ligne GNU</uri> ou la page d'info de <c>gcc</c> (<c>info gcc</c>
&mdash; ne marche que sur un système Linux fonctionnel). Le fichier
<path>make.conf</path> lui-même contient de nombreux exemples et
renseignements&nbsp;; n'oubliez pas non plus de le lire.
</p>

<p>
Un premier paramètre est l'option <c>-march=</c> qui spécifie le nom de
l'architecture cible. Les options possibles sont décrites dans le fichier
<path>make.conf</path> (en commentaires). Il y a des exemples pour les couches
ISA (<c>mips1</c> ... <c>mips4</c>) et les modèles de processeurs
(<c>r4400</c>, <c>r4600</c> etc). Pour une architecture purement ISA, on peut
simplement spécifier <c>-mips3</c> plutôt que <c>-march=mips3</c>.
</p>

<pre caption="les paramètres -march et -mips# de GCC">
<comment>(Pour un système R4600...)</comment>
-march=r4600

<comment>(N'importe quel processeur de classe MIPS4...)</comment>
-march=mips4

<comment>(Ou bien on peut seulement spécifier la couche ISA...)</comment>
-mips4
</pre>

<p>
Un deuxième paramètre est l'option <c>-O</c> (la lettre O majuscule) qui
spécifie la classe d'optimisation de <c>gcc</c>. Les classes possibles sont
<c>s</c> (pour optimiser en taille), <c>0</c> (zéro, pour ne pas optimiser),
<c>1</c>, <c>2</c>, <c>3</c> pour plus d'optimisation de la vitesse
d'exécution (chacune de ces classes a les mêmes options que celle qui la
précède plus quelques autres). <c>-O2</c> est recommandée par défaut. <c>-O3</c>est connu comme posant des problèmes quand elle s'applique à tout le système&nbsp;; nous vous recommandons donc de vous en tenir à <c>-O2</c>.
</p>

<pre caption="le paramètre O de GCC">
-O2
</pre>

<p>
Un paramètre très important pour les MIPS, <c>-mabi=</c>.  Les MIPS ont trois
ABI différents&nbsp;: <c>32</c> (pur 32&nbsp;bits, idem <c>o32</c>), <c>64</c>
(pur 64&nbsp;bits, idem <c>n64</c>) et <c>n32</c> (un mélange de structures de
données 32&nbsp;bits et d'instructions 64&nbsp;bits). Ce paramètre définit
lequel de ces trois vous voulez utilisez. Veuillez prendre note que vous aurez
des bibliothèques correspondantes à l'ABI choisi. En d'autres termes, cela veut
dire que vous ne pouvez pas utiliser <c>-mabi=64</c> dans un environnement
32&nbsp;bits (ou bien même dans un environnement <c>n32</c>).
</p>

<p>
Une autre option d'optimisation populaire est <c>-pipe</c> (utilise des tubes
plutôt que des fichiers temporaires pour la communication entre les différentes
étapes de la compilation).
</p>

<p>
Veuillez remarquer que l'option <c>-fomit-frame-pointer</c> (qui permet de ne
pas garder le pointeur de cadre dans un registre pour les fonctions qui n'en
ont pas besoin) peut rendre le dépistage d'erreurs très difficile.
</p>

<p>
Lorsque vous définissez les variables <c>CFLAGS</c> et <c>CXXFLAGS</c>, vous
devez combiner plusieurs options d'optimisation, comme dans l'exemple
suivant&nbsp;:
</p>

<pre caption="définir les variables CFLAGS et CXXFLAGS">
CFLAGS="-mabi=32 -mips4 -pipe -O2"
CXXFLAGS="${CFLAGS}"   <comment># Utilise les mêmes paramètres pour les deux variables</comment>
</pre>
<note>
vous souhaiterz peut-être lire le  <uri
link="https://wiki.gentoo.org/wiki/GCC_optimization/fr">Optimisation de GCC</uri> pour plus d'information sur la manière dont les différentes options influent.
</note>
</body>
</subsection>
<subsection>
<title>MAKEOPTS</title>
<body>

<p>
Avec <c>MAKEOPTS</c>, vous pouvez définir le nombre de compilations à lancer en
parallèle.  Une valeur souvent utilisée est le nombre de processeurs (ou de cœurs) dans votre
système plus un, mais une autre valeur peut parfois mieux fonctionner.
</p>

<pre caption="MAKEOPTS pour un système classique à 1 processeur">
MAKEOPTS="-j2"
</pre>

</body>
</subsection>
<subsection>
<title>À vos marques, prêts, partez&nbsp;!</title>
<body>

<p>
Mettez à jour votre <path>/mnt/gentoo/etc/make.conf</path> comme vous le
souhaitez, et sauvez (<c>Ctrl-X</c> avec nano). Vous êtes maintenant prêt à
continuer avec <uri link="?part=1&amp;chap=6">Installer le système de base
Gentoo</uri>.
</p>

</body>
</subsection>
</section>
</sections>
