<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/handbook/hb-install-ppc-bootloader.xml,v 1.16 2005/04/19 09:21:24 neysx Exp $ -->

<sections>

<version>2.3</version>
<date>2005-04-11</date>

<section>
<title>Faites votre choix</title>
<subsection>
<title>Introduction</title>
<body>

<p>
Maintenant que votre noyau a été configuré et compilé, et que les fichiers de
configuration du système ont été correctement paramétrés, il est temps d'installer
le programme qui le lance au démarrage de votre machine. Un tel programme est
appelé un <e>chargeur de démarrage</e> («&nbsp;bootloader&nbsp;» en anglais).
Avant de commencer, évaluez les options disponibles.
</p>

<p>
Plusieurs chargeurs de démarrage sont disponibles pour Linux/PPC. Vous avez le
choix entre <uri link="#yaboot">yaboot</uri> pour les machines de type NewWorld
Apple ou IBM et <uri link="#bootx">BootX</uri> pour les machines de type
OldWorld Apple. Les machines Pegasos n'ont pas besoin de chargeur de
démarrage, mais vous pouvez utiliser <uri link="#bootcreator">BootCreator</uri>
pour créer un menu de démarrage «&nbsp;SmartFirmware&nbsp;».
</p>

</body>
</subsection>
</section>
<section id="yaboot">
<title>Par défaut&nbsp;: yaboot</title>
<subsection>
<title>Introduction</title>
<body>

<impo>
yaboot n'est disponible que sur les systèmes NewWorld Apple ou IBM.
</impo>

<p>
Commencez par créer un répertoire <path>/dev</path> à la racine du nouveau
système, car l'installation du chargeur de démarrage va en avoir besoin. Le
plus simple est de monter le système de fichiers <path>/dev</path> du
CD d'installation&nbsp;:
</p>

<pre caption="Monter et lier /dev">
<comment>(Quitter l'environnement chroot.)</comment>
# <i>exit </i>
# <i>mount -o bind /dev /mnt/gentoo/dev</i>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile </i>
</pre>

<p>
Yaboot peut être configuré de deux façons. Vous pouvez utiliser le
<c>yabootconfig</c> inclus pour configurer yaboot automatiquement.
Si vous ne voulez pas utiliser <c>yabootconfig</c>,
pour une raison quelconque ou si vous installez sur une machine G5
(<c>yabootconfig</c> ne fonctionne pas toujours sur un G5), vous pouvez éditer
le fichier de configuration <path>/etc/yaboot.conf</path> déjà installé sur
votre machine.
</p>

<note>
Vous devrez sans doute éditer le fichier yaboot.conf si vous utilisez genkernel.
Les arguments proposés par l'ebuild genkernel doivent être ajoutés comme des
options passés au noyau dans la partie de l'image noyau. La partie du fichier en
question est la suivante&nbsp;:
</note>

<pre caption="Ajouter les arguments de démarrage à yaboot.conf">
<comment>#################
## Cette section peut être dupliquée si vous avez plusieurs noyaux ou
## jeux d'options du noyau (remplacez 2.6.9 par votre version de noyau).
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/ram0                <comment># /dev/ram0 si vous utilisez genkernel</comment>
  partition=3
  sysmap=/boot/System.map-2.6.9
  append="real_root=/dev/hda3 init=/linuxrc"    <comment># Ajoutez des arguments ici</comment>
  read-only
<comment>##################</comment>
</pre>

<ul>
  <li>
    <uri link="#yabootconfig">Par défaut&nbsp;: utiliser yabootconfig</uri>
  </li>
  <li>
    <uri link="#manual_yaboot">Alternative&nbsp;: configuration manuelle de
    yaboot</uri>
  </li>
</ul>

</body>
</subsection>
<subsection id="#yabootconfig">
<title>Par défaut&nbsp;: utiliser yabootconfig</title>
<body>

<p>
<c>yabootconfig</c> détectera automatiquement vos partitions et créera une
configuration pour des machines à deux ou trois systèmes d'exploitation Linux,
Mac OS ou Max OS X.
</p>

<p>
Pour utiliser <c>yabootconfig</c>, votre disque doit avoir une partition de
type Apple_Bootstrap et le fichier <path>/etc/fstab</path> doit être configuré
correctement par rapport à vos partitions, ce qui devrait avoir été fait plus
tôt si vous avez suivi la procédure du manuel.  Vous devez vous assurer que
vous utilisez la version la plus récente de yaboot.
</p>

<pre caption = "Installer yaboot avec GRP">
# <i>emerge --usepkg --update yaboot</i>
</pre>

<p>
Maintenant, quittez l'environnement chroot et lancez la commande
<c>yabootconfig --chroot /mnt/gentoo</c>. Lors de son exécution, ce programme
confirmera l'endroit où se trouve la partition de démarrage. Tapez <c>Y</c>
pour valider&nbsp;; si vous n'êtes pas d'accord, vérifiez le fichier
<path>/etc/fstab</path>.  Ensuite, yabootconfig utilisera vos fichiers de
configuration pour créer sa propre configuration dans le fichier
<path>/etc/yaboot.conf</path> et exécutera <c>mkofboot</c> pour vous. Ce
dernier est utilisé pour formater la partition de type Apple_Bootstrap et y installer les
fichiers de configuration de yaboot. Ensuite, revenez dans l'environnement
chroot.
</p>

<pre caption="Retourner dans l'environnement chrooté">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>/usr/sbin/env-update &amp;&amp; source /etc/profile</i>
</pre>

<p>
Vous voudrez peut-être vérifier le contenu du fichier
<path>/etc/yaboot.conf</path>.  Si vous le modifiez, par exemple pour changer
le système d'exploitation par défaut, vous devez relancer la commande <c>ybin
-v</c> pour enregistrer vos modifications dans la partition de type Apple_Bootstrap.
</p>

<p>
Vous pouvez maintenant poursuivre avec le <uri
link="#reboot">redémarrage du système</uri>.
</p>

</body>
</subsection>
<subsection id="#manual_yaboot">
<title>Alternative&nbsp;: configuration manuelle de yaboot</title>
<body>

<p>
Installez d'abord la dernière version de <c>yaboot</c>&nbsp;:
</p>

<pre caption = "Installer yaboot">
# <i>emerge --update yaboot</i>
</pre>

<p>
Vous trouverez un exemple complet du fichier de configuration
<path>yaboot.conf</path> ci-dessous. Adaptez-le si nécessaire.  Si vous
utilisez une machine G5, sachez que vos disques durs sont de type SATA et que
ces derniers sont vus comme des disques SCSI par Linux. Remplacez donc
<path>/dev/hda</path> par <path>/dev/sda</path>.
</p>

<pre caption = "Fichier /etc/yaboot.conf">
<comment>## /etc/yaboot.conf
##
## Lisez « man yaboot.conf » pour plus de détails. Ne continuez pas avant de l'avoir fait !
## Consultez aussi : /usr/share/doc/yaboot/examples pour des exemples de configuration.
##
## Pour un menu « multiple-boot », ajoutez une ou plusieurs de ces options :
## bsd=/dev/hdaX, macos=/dev/hdaY, macosx=/dev/hdaZ

## our bootstrap partition:</comment>

boot=/dev/hda2

<comment>## ofboot indique la partition de démarrage selon openfirmware.
## Sans cela, yaboot échoue sur un G5 et sur certains G4
## (à moins que vous ne passiez les arguments
## nécessaires au programme mkofboot/ybin).
## hd:X signifie /dev/sdaX (ou /dev/hdaX).
##
## Pour un G5, décommentez la ligne suivante :

#ofboot=hd:2

##hd: correspond à hda pour openfirmware.</comment>
device=hd:

delay=5
defaultos=macosx
timeout=30
install=/usr/lib/yaboot/yaboot
magicboot=/usr/lib/yaboot/ofboot

<comment>#################
## Recopiez cette section si vous avez plusieurs noyaux ou plusieurs jeux
## d'options de démarrage. Remplacez 2.6.9 par votre version de noyau.
#################</comment>
image=/boot/kernel-2.6.9
  label=Linux
  root=/dev/hda3
  partition=3
  sysmap=/boot/System.map-2.6.9
  read-only
<comment>##################

## Pour un G5 et certains G4, utilisez les lignes ci-dessous
##   macos=hd:13
##   macosx=hd:12
## au lieu des lignes suivantes :</comment>
macos=/dev/hda13
macosx=/dev/hda12
enablecdboot
enableofboot
</pre>

<p>
Après avoir modifé le fichier <path>yaboot.conf</path>, vous devez lancer la
commande <c>mkofboot -v</c> pour enregistrer vos paramètres dans la partition
de démarrage. <e>Ne l'oubliez pas&nbsp;!</e> Confirmez quand <c>mkofboot</c>
propose la création d'un nouveau système de fichiers.
</p>

<p>
Si tout se passe bien et que vous avez utilisé les mêmes options que ci-dessus,
vous obtiendrez un menu à cinq entrées lors du prochain démarrage de votre
machine.  Si vous modifiez la configuration de yaboot plus tard, vous ne devrez
lancer que <c>ybin -v</c> pour enregistrer vos changements. <c>mkofboot</c>
n'est utilisé que lors de la première installation.
</p>

<p>
Pour plus d'informations sur yaboot, veuillez consulter la <uri
link="http://penguinppc.org/bootloaders/yaboot">page du projet yaboot</uri>.
Vous pouvez maintenant poursuivre avec le <uri link="#reboot">redémarrage du
système</uri>.
</p>

</body>
</subsection>
</section>
<section id="bootx">
<title>Alternative&nbsp;: BootX</title>
<body>

<impo>
BootX n'est disponible que pour les systèmes OldWorld Apple.
</impo>

<p>
Puisque BootX démarre Linux depuis MacOS, le noyau devra être copié
depuis une partition Linux sur la partition MacOS. Montez tout d'abord la
partition MacOS depuis l'extérieur du chroot. Utilisez <c>mac-fdisk -l</c> pour
trouver le numéro de la partition de MacOS, sda6 dans l'exemple. Une fois que
la partition est montée, nous allons copier le noyau sur le répertoire système
afin que BootX puisse le trouver.
</p>

<pre caption="Copier le noyau sur la partition MacOS">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/usr/src/linux/vmlinux "/mnt/mac/System Folder/Linux Kernels"</i>
</pre>

<p>
Si vous avez utilisé genkernel, le noyau est placé ailleurs et le fichier initrd
devra également être copié.
</p>

<pre caption="Copier le noyau et l'initrd de genkernel sur la partition MacOS">
# <i>exit</i>
cdimage ~# <i>mkdir /mnt/mac</i>
cdimage ~# <i>mount /dev/sda6 /mnt/mac -t hfs</i>
cdimage ~# <i>cp /mnt/gentoo/boot/kernel-* "/mnt/mac/System Folder/Linux Kernels"</i>
cdimage ~# <i>cp /mnt/gentoo/boot/initrd-* "/mnt/mac/System Folder"</i>
</pre>

<p>
Maintenant que le noyau est copié, démontez tous les systèmes de fichiers et
entrez la commande magique que vous attendiez avec impatience&nbsp;:
<c>reboot</c>.
</p>

<pre caption="Démonter les partitions et redémarrer la machine">
cdimage ~# <i>cd /</i>
cdimage ~# <i>umount /mnt/gentoo/proc /mnt/gentoo /mnt/mac</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Bien sûr n'oubliez pas d'enlever tous les dispositifs de démarrage pour que
MacOS puisse cette fois démarrer.
</p>

<p>
Maintenant que la machine a démarré MacOS, ouvrez le panneau de contrôle
de BootX et sélectionnez <c>Options</c> puis désactivez <c>Used specified
RAM disk</c> si vous n'utilisez pas genkernel. Dans le cas contraire, vérifiez
que l'initrd de genkernel est sélectionné à la place de celui du LiveCD. Si
vous n'utilisez pas genkernel vous devez maintenant spécifier dans une option le
disque et la partition racine de Linux. Remplissez les champs voulus par la
valeur appropriée. Selon la configuration du noyau vous devrez probablement
appliquer quelques arguments de démarrage au noyau.
</p>

<p>
BootX peut être configuré pour démarrer Linux au démarrage. Si vous choisissez
cette option la machine démarrera sur MacOS et lors du démarrage, elle chargera
BootX qui à son tour démarrera Linux. Lisez la page Internet de
<uri link="http://penguinppc.org/bootloaders/bootx/">BootX</uri> pour plus
d'informations.
</p>

<p>
Une fois le système Gentoo démarré, concluez avec la <uri
link="?part=1&amp;chap=11">Finaliser votre installation</uri>.
</p>

</body>
</section>
<section id="bootcreator">
<title>Alternative : BootCreator</title>
<body>

<impo>
BootCreator vous installe un joli menu SmartFirmware écrit en Forth pour le
Pegasos.
</impo>

<p>
Avant tout, veuillez installer la dernière version de <c>bootcreator</c> si
nécessaire&nbsp;:
</p>

<pre caption="Installer bootcreator">
# <i>emerge --usepkg --update bootcreator</i>
</pre>

<p>
Ensuite, copiez le fichier <path>/etc/bootmenu.example</path> dans
<path>/etc/bootmenu</path> et modifiez-le en fonction de vos besoins&nbsp;:
</p>

<pre caption="Modifier la configuration de bootcreator">
# <i>cp /etc/bootmenu.example /etc/bootmenu</i>
# <i>nano -w /etc/bootmenu</i>
</pre>

<p>
Un exemple complet de fichier de configuration <path>/etc/bootmenu</path>
ressemble à ce qui suit&nbsp;:
</p>

<pre caption="Fichier de configuration de bootcreator">
<comment>#
# Exemple de configuration pour bootcreator 1.1
#</comment>

[VERSION]
1

[TITLE]
Boot Menu

[SETTINGS]
AbortOnKey = false
Timeout    = 9
Default    = 1

[SECTION]
Local HD -> Morphos      (Normal)
ide:0 boot2.img ramdebug edebugflags="logkprintf"

[SECTION]
Local HD -> Linux 2.6.10 (Normal)
ide:0 linux-2.6.10 video=radeonfb:1024x768@70 root=/dev/hda3
</pre>

<p>
Ensuite, le fichier <path>bootmenu</path> doit être copié dans votre partition
de démarrage pour que SmartFirmware puisse le lire. On utilise l'outil
<c>bootcreator</c>&nbsp;:
</p>

<pre caption="Installer le menu de démarrage">
# <i>bootcreator /etc/bootmenu /boot/menu</i>
</pre>

<note>
Veuillez vérifier dans la configuration de SmartFirmware dès le redémarrage
suivant que le fichier <path>menu</path> est bien celui qui est utilisé par
défaut.
</note>

<p>
Veuillez poursuivre avec le <uri link="#reboot">redémarrage du système</uri>.
</p>

</body>
</section>
<section id="reboot">
<title>Redémarrage du système</title>
<subsection>
<body>

<p>
Sortez de l'environnement chroot et démontez toutes les partitions montées.
Ensuite, tapez la commande magique tant attendue&nbsp;: <c>reboot</c>.
</p>

<pre caption="Sortie du chroot, démontage des partitions et redémarrage">
# <i>exit</i>
cdimage ~# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
cdimage ~# <i>reboot</i>
</pre>

<p>
Une fois le système Gentoo démarré, concluez avec la <uri
link="?part=1&amp;chap=11">Finaliser votre installation</uri>.
</p>

</body>
</subsection>
</section>
</sections>
