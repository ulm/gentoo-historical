<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/Attic/portage-user.xml,v 1.4 2003/11/23 14:18:33 neysx Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/portage-user-new.html">
<title>Guide de l'utilisateur de Portage</title>

<author title="Concepteur">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Correcteur">
  <mail link="thomasfl@gentoo.org">Thomas Flavel</mail>
</author>
<author title="Correcteur">
  <!--zhen@gentoo.org-->John P. Davis
</author>
<author title="Correcteur">
  <mail link="carl@gentoo.org">Carl Anderson</mail>
</author>
<author title="Correcteur">
  <mail link="peesh@gentoo.org">Jorge Paulo</mail>
</author>
<author title="Correcteur">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Traducteur">
  <mail link="nohar@altern.org">Arnaud Cornet</mail>
</author>
<author title="Traducteur">
  <mail link="vincent.rubiolo@free.fr">Vincent Rubiolo</mail>
  </author>
<abstract>
Ce guide explique comment garder ses paquets à jour et comment maintenir son système.
</abstract>

<version>1.4</version>
<date>9 octobre 2003</date>

<license/>

<chapter>
<title>Démarrage</title>

<section>
<title>Maintenir Portage à jour</title>
<body>

<p>
Après avoir installé Gentoo Linux et exploré un peu, vous allez peut-être
rencontrer des bugs ou défaillances dans certains paquets, peut-être
voudrez-vous installer les derniers logiciels Gentoo Linux, ou encore mettre à
jour vos paquets actuels. Pour ce faire, vous devez télécharger notre arbre
Portage. Nous fournissons plusieurs serveurs rsync anonymes pour que vous
puissiez récupérer le dernier arbre Portage. Voici comment l'utiliser.
</p>

<p>
Veuillez utiliser la commande suivante pour synchroniser votre arbre Portage&nbsp;:
</p>

<pre caption="Mettre Portage à jour">
# <i>emerge sync</i>
</pre>

<p>
Veuillez noter que <c>emerge sync</c> utilise automatiquement l'option
<i>--clean</i> qui efface tous les changements que vous avez pu apporter au
repertoire <path>/usr/portage</path>. Si vous souhaitez conserver vos propres
fichiers ebuild en marge de l'arbre Portage principal, veuillez utiliser la
fonction <i>PORTDIR_OVERLAY</i>.
</p>

<pre caption="Utilisation de PORTDIR_OVERLAY">
<comment>Ajoutez cette ligne à <path>/etc/make.conf</path></comment>
PORTDIR_OVERLAY="Chemin/de/vos/fichiers/ebuild"
</pre>

<p>
Si vous modifiez une certaine quantité de fichiers ebuilds, corrigez des
bogues, etc., vous pourriez envisager dedevenir un membre à part entière de
l'équipe de développement Gentoo Linux. Veuillez contacter <mail
link="drobbins@gentoo.org">Daniel Robbins</mail> ou <mail
link="seemant@gentoo.org">Seemant Kulleen</mail> pour obtenir davantage
d'informations à ce propos.
</p>

</body>
</section>

<section>
<title>Mettre à jour Portage</title>
<body>
<p>
Avant d'utiliser notre arbre Portage, il est important de mettre Portage à jour
en faisant&nbsp;:
</p>

<pre caption="Mettre à jour Portage">
<comment>Ceci vous indiquera quels sont les paquets qui vont être mis à jour</comment>
# <c>emerge -up system</c>
<comment>Ceci met à jour les paquets nécessaires.</comment>
# <c>emerge -u system</c>
</pre>

<p>
Maintenant, vous allez utiliser la version la plus récente de Portage et vous
pouvez utiliser notre système d'ebuilds pour mettre à jour vos logiciels
installés.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Introduction à <c>emerge</c></title>
<section>
<title><c>emerge --pretend</c></title>
<body>

<p>
Avant d'installer un paquet, il est intéressant de regarder quelles sont les
dépendances qui vont être installées, quels sont les paquets qui doivent
être mis à jour, etc. <c>emerge --pretend</c> ou <c>emerge -p</c> le fait
pour vous.
</p>

<pre caption="Utiliser emerge">
# <i>emerge -p xchat</i>

These are the packages that I would emerge, in order.

Calculating dependencies......... done!
[ebuild   U] sys-libs/zlib-1.1.3-r2 to /
[ebuild   U] dev-libs/glib-1.2.10 to /
[ebuild N  ] media-libs/jpeg-6b-r2 to /
[ebuild N  ] x11-base/xfree-4.0.3-r3 to /
[ebuild N  ] x11-libs/gtk+-1.2.10-r1 to /
[ebuild N  ] media-libs/giflib-4.1.0-r3 to /
[ebuild N  ] media-libs/tiff-3.5.6_beta to /
[ebuild N  ] media-libs/imlib-1.9.10 to /
[ebuild N  ] net-irc/xchat-1.4.3 to /
</pre>

<p>
Dans ce cas particulier, nous tentons d'installer <path>xchat</path> sur une
machine où X n'est pas installé. De ce fait, <c>emerge --pretend</c> remarque à
juste titre que plusieurs dépendances doivent être satisfaites au préalable.
Plus spécifiquement, <path>sys-libs/zlib</path> et <path>dev-libs/glib</path>
doivent être mises à jour, et un bon nombre d'ebuilds (parmi lesquels
<path>x11-base/xfree</path>, évidemment) doivent être installés.
</p>
</body>
</section>

<section>
<title>USE et <c>emerge</c></title>
<body>
<p>
Ci-dessus, j'ai exécuté <c>emerge --pretend</c> sur un système qui n'a pas
l'option <c>gnome</c> définie dans la variable <c>USE</c> dans le fichier
<path>/etc/make.conf</path>. Cela signifie que le support optionnel de GNOME,
s'il existe, ne sera pas activé. Cependant, <path>xchat</path> <e>possède</e>
un support GNOME optionnel, regardons la sortie de <c>emerge --pretend</c>
après l'ajout de <c>gnome</c> à la variable d'environnement <c>USE</c> dans
<path>/etc/make.conf</path>&nbsp;:
</p>

<pre caption="Utilisation d'emerge avec les variables USE">
# <i>emerge -p xchat</i>

These are the packages that I would emerge, in order.

Calculating dependencies............................ done!
[ebuild N  ] media-libs/jpeg-6b-r2 to /
[ebuild N  ] gnome-base/libghttp-1.0.9 to /
[ebuild N  ] media-libs/audiofile-0.2.1 to /
[ebuild N  ] media-sound/esound-0.2.22-r2 to /
[ebuild N  ] gnome-base/gnome-env-1.0 to /
[ebuild N  ] gnome-base/libxml-1.8.11 to /
[ebuild N  ] gnome-base/ORBit-0.5.8 to /
[ebuild N  ] gnome-base/oaf-0.6.5 to /
[ebuild   U] dev-libs/glib-1.2.10 to /
[ebuild N  ] net-libs/libwww-5.3.2-r1 to /
[ebuild N  ] media-libs/giflib-4.1.0-r3 to /
[ebuild N  ] dev-util/guile-1.4-r3 to /
[ebuild   U] sys-libs/zlib-1.1.3-r2 to /
[ebuild N  ] x11-base/xfree-4.0.3-r3 to /
[ebuild N  ] x11-libs/gtk+-1.2.10-r1 to /
[ebuild N  ] media-libs/tiff-3.5.6_beta to /
[ebuild N  ] media-libs/imlib-1.9.10 to /
[ebuild N  ] gnome-base/gnome-libs-1.2.13 to /
[ebuild N  ] gnome-base/glibwww-0.2-r1 to /
[ebuild N  ] gnome-base/gdk-pixbuf-0.11.0 to /
[ebuild N  ] gnome-base/gconf-1.0.0 to /
[ebuild N  ] gnome-base/gnome-vfs-1.0.1 to /
[ebuild N  ] gnome-base/control-center-1.4.0.1 to /
[ebuild N  ] gnome-base/scrollkeeper-0.2 to /
[ebuild N  ] dev-util/xml-i18n-tools-0.8.1 to /
[ebuild N  ] gnome-base/libglade-0.16-r1 to /
[ebuild N  ] gnome-base/gnome-core-1.4.0.4 to /
[ebuild N  ] net-irc/xchat-1.4.3 to /
</pre>

<p>
Comme vous pouvez le constater, avec l'ajout de <c>gnome</c> à la variable
<c>USE</c>, emerge reconnaît que xchat devrait inclure le support optionnel
GNOME. Et bien sûr, pour que ce support optionnel GNOME puisse être compilé et
fonctionner correctement, GNOME doit d'abord être installé. <c>emerge</c>
déduit tout cela et ajoute les paquets requis par GNOME à sa liste d'ebuilds à
installer. Il se peut parfois que votre variable <c>USE</c> ne soit pas définie
correctement&nbsp;; dans ce cas <c>emerge</c> inclura ou exclura de façon
inattendue certaines extensions non désirées. C'est pourquoi je recommande de
toujours effectuer un <c>emerge --pretend</c> avant d'exécuter le vrai
<c>emerge</c>, en particulier pour les nouveaux ebuilds avec lesquels vous
n'êtes pas familier. Avec cette méthode, vous savez à quoi vous attendre :).
Une fois que tout a l'air correct, vous pouvez continuez avec le vrai
<c>emerge</c> en supprimant l'option <c>--pretend</c>&nbsp;:
</p>

<pre caption="Installer xchat">
# <i>emerge xchat</i>
</pre>

<p>
Après l'installation de toutes les dépendances, (si elles existent, certains
paquets n'en ont pas), les sources de xchat seront téléchargées (dans
<path>/usr/portage/distfiles</path>), vérifiées, extraites, compilées et
installées dans un répertoire temporaire appelé "bac à sable" (sandbox). Les
binaires obtenus seront ensuite insérés dans le système de fichiers local et
une base de données des paquets sera créée dans
<path>/var/db/pkg/net-irc/xchat-1.4.3/CONTENTS</path>. Elle contiendra les
informations relatives aux fichiers installés et aux sommes de contrôle md5
pour tous les fichiers.
</p>

<p>
Si vous souhaitez connaître les paramètres USE utilisables avec un certain
paquet ainsi que ceux activés sur votre système, utilisez l'option <c>-v</c> ou
<c>--verbose</c> de <c>emerge</c>&nbsp;:
</p>

<pre caption="Utilisation d'emerge avec --verbose">
# <i>emerge -pv gentoo-sources</i>

These are the packages I would emerge, in order :

Calculating dependencies ...done!
[ebuild    U ] sys-kernel/gentoo-sources-2.4.20-r5 -build +crypt -evms2 
-aavm -usagi 
</pre>

</body>
</section>

<section>
<title>Identifier ce qui a changé</title>
<body>

<p>
Si vous souhaitez trouver ce qui a changé entre la version d'un paquet installé
sur votre système et celle de Portage, utilisez l'option <c>--changelog</c> ou
<c>-l</c>&nbsp;:
</p>

<pre caption="Afficher le journal des changements (ChangeLog)">
# <i>emerge -pl mozilla</i>

These are the packages that I would emerge, in order:

Calculating dependencies ...done!
[ebuild    U ] net-www/mozilla-1.3-r1 [1.2.1-r5] 

*mozilla-1.3-r1

  22 Mar 2003; Martin Schlemmer &lt;azarah@gentoo.org&gt; mozilla-1.3-r1.ebuild :
  Add Gtk2 patch.  Add default/prefs/xft.js when Xft is enabled.  Some other
  long overdue cleanups.

*mozilla-1.3

  21 Mar 2003; Jay Kwak &lt;jayskwak@gentoo.org&gt; mozilla-1.3.ebuild :
  Add XIM input patch for GTK
             
  18 Mar 2003; Martin Schlemmer &lt;azarah@gentoo.org&gt; mozilla-1.3.ebuild :
  New version.

  13 Mar 2003; Olivier Reisch &lt;doctomoe@gentoo.org&gt; mozilla-1.2.1-r5.ebuild :
  Marked ppc stable

*mozilla-1.3_beta

  23 Feb 2003; Martin Schlemmer &lt;azarah@gentoo.org&gt; mozilla-1.3_beta.ebuild :
  New version.

</pre>

</body>
</section>
</chapter>
<chapter>
<title>Mettre à jour les paquets</title>
<section>
<body>

<p>
La manière classique pour mettre à jour un paquet de Portage
est d'utiliser <c>emerge --update</c> ou <c>emerge -u</c>
</p>

<pre caption="Utiliser emerge -u">
# <i>emerge -u xchat</i>
</pre>

<p>
Portage désinstalle de manière sûre&nbsp;; il ne va supprimer que les fichiers
originaux. Si un fichier a été réécrit ou modifié de n'importe quelle manière
que ce soit, il sera laissé tel quel sur le système de fichiers (vous avez sans
doute installé entre temps une version plus récente du paquet). Ainsi, si vous
désinstallez une vieille version de xchat après avoir installé une version
récente, l'exécutable xchat ne sera pas effacé puisqu'il est marqué comme plus
récent et qu'il a une somme de contrôle md5 différente.  Les désinstallations
sûres sont vraiment pratiques parce qu'elles assurent qu'une version du paquet
est disponible à tout moment. Si vous deviez le désinstaller d'abord, xchat ne
serait pas disponible pendant quelques minutes, lors du téléchargement, de la
compilation et de l'installation de la nouvelle version.
</p>

<impo>
Portage a maintenant une fonctionnalité spéciale appellée protection des
fichiers de configuration (config file protection). Elle permet l'installation
d'un nouveau paquet sans modifier les fichiers de configuration existants. Par
défaut, la protection est activée pour <path>/etc</path> et les répertoires de
configuration de KDE&nbsp;; d'autres pourront être ajoutés ultérieurement.
Tapez <c>emerge --help config</c> pour plus de détails.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Gérer les paquets bloqués</title>
<section>
<body>

<p>
Les paquets actuellement installés peuvent parfois empêcher l'installation
d'autres paquets. Ceci arrive quand une fonctionnalité d'un paquet est passée
dans un autre ou quand deux paquets sont incompatibles. Un paquet bloquant doit
être retiré du système pour que le paquet bloqué puisse être installé.
</p>

<pre caption="Installer un paquet bloqué">
# <i>emerge -pv libbonobo</i>

These are the packages that I would emerge, in order:

Calculating dependencies ...done!
[blocks B     ] gnome-base/bonobo-activation (from pkg gnome-base/libbonobo-2.4.0) 
[ebuild     U ] gnome-base/ORBit2-2.8.1 [2.6.3] -doc +ssl 
[ebuild     U ] gnome-base/libbonobo-2.4.0 [2.2.3] -doc 
</pre>

<p>
Dans l'exemple ci-dessus, le paquet bonobo-activation bloque l'installation de
libbonobo-2.4.0.
</p>

<pre caption="Retirer un paquet bloquant du système">
# <i>emerge -C bonobo-activation</i>
# <i>emerge libbonobo</i>
</pre>

<p>
Enlever bonobo-activation du système permet d'installer de libbonobo-2.4.0.
</p>

<impo>
Désinstaller un paquet à l'aide de <c>emerge -C</c> retirera le paquet, même si
d'autres paquets en dépendent. Ceci peut rendre le système inutilisable.
</impo>
</body>
</section>
</chapter>

<chapter>
<title>Contrôler le comportement de Portage</title>
<section>
<body>

<p>
Si vous voulez changer le comportement de Portage, vous devriez éditer
<path>/etc/make.conf</path>. Ce fichier contient des variables (ou des valeurs
par défaut de variables) que vous pouvez modifier pour changer le comportement
de Portage.  Par exemple, si vous souhaitez changer la manière dont Portage
télécharge le code source des paquets, adaptez la variable <c>FETCHCOMMAND</c>
selon vos besoins.
</p>

<p>
<path>/etc/make.conf</path> contient de nombreux exemples de réglages de
variables à partir desquels vous devriez pouvoir comprendre comment les
définir. Jetez également un oeil à la page man de <path>make.conf</path> et, si
vous souhaitez vous immerger davantage dans le monde de Portage, lisez le <uri
link="/doc/fr/portage-manual.xml">manuel de Portage</uri>.
</p>

<p>
Si vous souhaitez modifier une variable pour seulement une fois, vous pouvez la
définir comme variable d'environnement au lieu de la changer deux fois dans
<path>/etc/make.conf</path>. Par exemple, <c>AUTOCLEAN="no" emerge kde</c>
désactivera le nettoyage automatique (autoclean) seulement pour l'exécution
de <c>emerge kde</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Que sont les paquets masqués ?</title>
<section>
<body>
<p>
Des utilisateurs se demandent pourquoi un paquet nouvellement mis à disposition
n'est pas pris en compte lorsqu'ils appellent la commande <c>emerge -u
world</c>.  Un bon exemple est xfree-4.3.0 (version au moment de l'écriture de
ce manuel). Si vous avez effectué un <c>emerge sync</c> suivi d'un <c>emerge -u
world</c>, vous ne voyez pas xfree comme candidat à la mise à jour.
Pourquoi&nbsp;?
</p>
<p>
La raison est que certains paquets sont marqués comme "masqués", c'est-à-dire
que le paquet ne sera pas automatiquement mis à jour ou désinstallé sans action
spécifique de votre part. Veuillez vous référer à la <uri
link="http://forums.gentoo.org/viewtopic.php?t=33534">FAQ des paquets
masqués</uri> dans les <uri link="http://forums.gentoo.org/">Forums
Gentoo</uri> pour savoir comment autoriser l'installation des paquets masqués.
</p>

</body>
</section>
</chapter>

</guide>
