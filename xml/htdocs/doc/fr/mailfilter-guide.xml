<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/mailfilter-guide.xml,v 1.7 2005/08/06 15:36:12 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/mailfilter-guide.xml" lang="fr">
<title>Guide de configuration d'une passerelle de filtrage de courrier
électronique sous Gentoo</title>

<author title="Auteur">
  <mail link="jaervosz@gentoo.org">Sune Kloppenborg Jeppesen</mail>
</author>
<author title="Contributeur">
  <mail link="gentoo@hilli.dk">Jens Hilligsøe</mail>
</author>
<author title="Traducteur">
  <mail link="Clement@varaldi.org">Clément Varaldi</mail>
</author>

<abstract>
Ce guide explique pas à pas l'installation d'un système de filtrage anti-spam
pour Postfix, en utilisant notamment Amavisd-new couplé à Spamassassin et
ClamAV, un système de listes grises et SPF.
</abstract>

<!-- Le contenu de ce document est sous licence CC-BY-SA  -->
<!-- Voir   http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.7.10</version>
<date>2005-08-04</date>

<chapter>
<title>Introduction</title>
<section>
<body>

<p>
Nous allons décrire dans ce guide les étapes d'installation d'une passerelle de
filtrage de spam (N.D.T&nbsp;: courrier indésirable) et de virus. Vous pourrez
l'adapter facilement pour mettre en place une solution mettant en œuvre un
serveur seul.
</p>

</body>
</section>
<section>
<title>Présentation des acteurs</title>
<body>

<p>
Ce document indique comment mettre en place une passerelle de filtrage du
courrier électronique multi-domaines. Ce serveur devra se situer en amont des
serveurs de courrier électronique qui disposent des comptes de messagerie, comme
par exemple Microsoft Exchange ou Lotus Notes.
</p>

<p>
Nous avons choisi pour notre configuration des applications ayant des fichiers
de configuration lisibles et une bonne réputation au niveau de la sécurité.
L'agent de transport de courrier (MTA) choisi est postfix, parce qu'il répond
de manière convenable aux deux critères présentés. Postfix écoutera par défaut
le port 25 pour le courrier entrant. Après réception, il transmettra le courrier
à Amavisd-new sur le port 10024. Amavisd-new filtrera le courrier avec plusieurs
méthodes, avant de le rendre à postfix sur le port 10025. Enfin, Postfix se
chargera de transmettre le courrier au prochain serveur de courrier
électronique.
</p>

<p>
Amavisd-new est une plate-forme de filtrage de contenu qui, avec l'aide d'autres
applications, permet de filtrer le courrier contre les virus et le spam. Dans
notre configuration, nous utiliserons deux applications. ClamAV s'occupera de
filtrer les virus et Spamassassin le spam. Spamassassin peut à son tour
fonctionner comme une plate-forme de filtrage de contenu et utilisera les
applications DCC et Razor2 de Vipul.
</p>

<p>
Contrairement à d'autres technologies contre le spam, comme par exemple les RBL,
Spamassassin n'accepte ou ne rejette pas un courrier à partir d'un seul et
unique test, mais il utilise de nombreux tests internes et des applications
externes pour calculer un <b>score de spam</b> pour chaque courrier analysé.
Ce score est basé sur les tests suivants&nbsp;:
</p>

<ul>
  <li>Filtrage bayésien&nbsp;;</li>
  <li>Règles statiques basées sur des expressions rationnelles&nbsp;;</li>
  <li>Réseaux distribués collaboratifs&nbsp;:
  <ul>
    <li>RBL,</li>
    <li>Razor2,</li>
    <li>Pyzor,</li>
    <li>DCC.</li>
  </ul>
  </li>
</ul>

<p>
La première partie de ce guide (du chapitre 1 au 4) décrit la mise en place
d'une passerelle de filtrage de courrier électronique de base. Les chapitres
suivants peuvent être suivis individuellement, il n'y a aucune dépendance
entre les différents chapitres. Ils indiquent comment&nbsp;:
</p>

<ul>
  <li>
    Mettre en place des répertoires IMAP spéciaux pour l'apprentissage
    bayésien et pour soumettre les faux positifs et négatifs.
  </li>
  <li>
    Mettre en place des analyseurs de fichiers de journalisation pour créer des
    rapports quotidiens.
  </li>
  <li>Mettre en place un service de liste grise avec Postfix 2.1.</li>
  <li>
    Configurer amavisd-new pour conserver les préférences des utilisateurs dans
    une base MySQL.
  </li>
</ul>

<note>
Les répertoires IMAP utiliseront le format <e>maildir</e>. Ne placer qu'un seul
courrier par fichier permet de les manier plus facilement. Si vous utilisez le
format mbox, je vous suggère de tester tout de même le format maildir. Si vous
ne l'utilisez pas déjà, il faudra que vous installiez les outils nécessaires
avec la commande <c>emerge courier-imap</c>.
</note>

<p>
Une cinquième partie est prévue, qui contiendra divers trucs et astuces
concernant les performances et quelques points utiles (comme l'utilisation
d'environnements
<uri link="http://lea-linux.org/admin/chroot.html">chrootés</uri>, l'application
de restrictions sur postfix, etc.).
</p>

<note>
Déléguer un certain nombre de tâches à une tierce partie n'est pas sans risque.
Vous devez connaître et avoir confiance en celle-ci. Dans notre configuration,
la seule décision qui sera laissée à un tiers unique est la mise en quarantaine
des courriers électroniques contenant des virus. En utilisant le système de
scores de Spamassassin, la décision d'arrêter un courrier indésirable n'est pas
basée sur une seule autorité, sauf peut-être les règles statiques propres à
Spamassassin.
</note>

<warn>
Lorsque vous rejetez du spam au niveau du MTA, vous devez faire attention lors
de la sélection de la RBL que vous souhaitez utiliser. Par exemple, SpamCop est
une mauvaise liste RBL pour un MTA comme le nôtre, car il en résultera de
nombreux faux positifs. En effet, la liste est parfois tout simplement trop
agressive. Voici une explication sur <uri
link="http://www.geekcomix.com/cgi-bin/classnotes/wiki.pl?UNIX03/Realtime_Blackhole_Lists_Are_Bad">pourquoi
les listes RBL sont mauvaises</uri> et <uri
link="http://theory.whirlycott.com/~phil/antispam/rbl-bad/rbl-bad.html">que
penser des RBL pour le spam</uri>.
</warn>

</body>
</section>
<section>
<title>Préparation</title>
<body>

<p>
Avant de commencer, vous devez disposer d'une installation fonctionnelle de
Postfix qui vous permet déjà d'envoyer et de recevoir du courrier électronique.
Si vous n'avez aucune expérience de la configuration de postfix, les choses
risquent de se compliquer très rapidement dans le cas où vous vouliez tout
configurer rapidement. Si vous avez besoin d'aide, vous pouvez en trouver dans
l'excellent guide «&nbsp;<uri link="virt-mail-howto.xml">Mise en place d'un
système de messagerie multidomaine avec Postfix</uri>&nbsp;» de la <uri
link="/doc/fr/">documentation Gentoo</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Installer les programmes nécessaires</title>
<section>
<body>

<p>
Commençons par installer les programmes les plus importants&nbsp;: Amavisd-new,
Spamassassin et ClamAV.
</p>

<pre caption="Installer Amavis, Spamassassin et Clamav">
# <i>emerge amavisd-new spamassassin clamav</i>
</pre>

<note>
Comme indiqué précédemment, vous devez déjà disposer d'un serveur <c>postfix</c>
en état de marche sur votre machine. En gros, cela n'est pas bien plus compliqué
que <c>emerge postfix</c> <e>et</e> une connaissance générale du fonctionnement
global de Postfix.
</note>

</body>
</section>
<section>
<title>Mise en place des noms de domaine</title>
<body>

<note>
Si vous ne souhaitez pas mettre en place de serveur passerelle, c'est-à-dire que
vous voulez un unique serveur central avec l'ensemble des dispositifs sur la
même machine, vous n'avez qu'à créer un enregistrement DNS MX.
</note>

<p>
Pendant l'installation des programmes, ouvrez un nouveau terminal et créez les
champs MX nécessaires comme indiqué ci-dessous.
</p>

<p>
Commençons par créer un champ <c>MX</c> pour la passerelle de courrier et un
champ <c>A</c> pour la prochaine destination.
</p>

<pre caption="Mise en place des DNS">
<comment>(Créez un champ MX pour le serveur passerelle :)</comment>
                   MX      10      passerellemail.mondomaine.tld.
<comment>(Créez le champ A qui va avec :)</comment>
passerellemail     A       ip.de.la.passerelle
<comment>(Créez un champ A pour le prochain serveur de courrier contacté :)</comment>
mail               A       ip.du.prochain.serveurMail
</pre>

<note>
Certains fournisseurs d'accès de type ADSL bloquent le port 25 et vous obligent
à relayer le courrier via l'un de leurs serveurs. Vous devez alors créer un
champ MX secondaire comme <c>MX 20 sauvegarde-mx.un-FAI.tld</c>.
</note>

</body>
</section>
<section>
<title>Ouvrir les flux sur votre pare-feu</title>
<body>

<p>
En plus d'accepter le trafic usuel de courrier, certaines applications
nécessitent une autorisation d'accès au réseau que vous devez mettre en place
au niveau de votre pare-feu pour qu'elles puissent communiquer avec les
serveurs.
</p>

<table>
<tr>
  <th>Application</th><th>Protocole</th><th>Port</th>
</tr>
<tr>
  <ti>DCC</ti><ti>UDP</ti><ti>6277</ti>
</tr>
<tr>
  <ti>Razor (ping sortant)</ti><ti>TCP</ti><ti>7</ti>
</tr>
<tr>
  <ti>Razor</ti><ti>TCP</ti><ti>2703</ti>
</tr>
</table>

<p>
Razor utilise les pings pour trouver quels serveurs sont les plus proches.
</p>

</body>
</section>
<section>
<title>Configurer Postfix</title>
<body>

<p>
Nous allons tout d'abord indiquer à <c>postfix</c> d'écouter sur le port 10025,
ensuite nous supprimerons la plupart des restrictions, dans la mesure où
elles ont déjà été appliquées par l'instance de <c>postfix</c> qui tourne sur le
port 25. Enfin, nous nous assurerons que le port 10025 ne sera ouvert que sur
l'interface locale. Pour appliquer tout cela, vous devez ajouter les lignes
suivantes à la fin de votre fichier <path>/etc/postfix/master.cf</path>&nbsp;:
</p>

<pre caption="Modifier le fichier master.cf">
smtp-amavis     unix -        -       n     -       2  smtp
  -o smtp_data_done_timeout=1200
  -o smtp_send_xforward_command=yes
<comment># Si vous utilisez lmtp :
#smtp-amavis unix -     -       n       -       2       lmtp
#   -o lmtp_data_done_timeout=1200
#   -o lmtp_send_xforward_command=yes</comment>

127.0.0.1:10025 inet n        -       n     -       -  smtpd
  -o content_filter=
  -o local_recipient_maps=
  -o relay_recipient_maps=
  -o smtpd_restriction_classes=
  -o smtpd_client_restrictions=
  -o smtpd_helo_restrictions=
  -o smtpd_sender_restrictions=
  -o smtpd_recipient_restrictions=permit_mynetworks,reject
  -o mynetworks=127.0.0.0/8
  -o strict_rfc821_envelopes=yes
  -o smtpd_error_sleep_time=0
  -o smtpd_soft_error_limit=1001
  -o smtpd_hard_error_limit=1000

<comment># Si vous voulez utiliser un filtrage par proxy :
#smtp            inet n         -       n      -       8 smtpd
# -o smtpd_proxy_filter=127.0.0.1:10024
# -o smtpd_client_connection_count_limit=4
# Si vous ne voulez pas faire de vérification sur le mail sortant :
#10.0.0.2:smtp   inet n         -       n       -      - smtpd
#-o content_filter=</comment>
</pre>

<note>
La première ligne avec <c>smtp-amavis</c> indique qu'au maximum deux processus
pourront être exécutés en même temps. Vous pouvez modifier cette valeur pour
l'adapter à vos besoins. Faites seulement bien attention de reporter cette
modification dans la variable <c>$max_servers=</c> du fichier
<path>amavisd.conf</path>.
</note>

<note>
Si vous voulez rejeter le spam le plus rapidement possible, vous pouvez utiliser
la méthode «&nbsp;Before-Queue&nbsp;» (proxy) à la place de la méthode
«&nbsp;filter&nbsp;». Si vous décommentez les trois lignes correspondantes, vous
devrez mettre <c>content_filter=</c> dans votre fichier <path>main.cf</path>.
Cela n'est pas recommandé pour les serveurs à fort trafic, car le nombre de
connexions concurrentes est limité au nombre d'instances d'amavisd.
</note>

<warn>
La méthode «&nbsp;Before-Queue&nbsp;» (proxy) n'a pas été convenablement testée.
</warn>

<note>
Si vous souhaitez pour une raison ou pour une autre envoyer un courrier depuis
cette machine et que vous ne souhaitez pas qu'il soit vérifié, ajoutez une
autre instance de postfix en enlevant les commentaires des deux dernières lignes
et modifiez la direction IP pour utiliser la vôtre.
</note>

<p>
Le fichier <path>master.cf</path> indique au programme principal de postfix
comment exécuter chacun des processus de postfix. Pour plus d'information, vous
pouvez faire un <c>man 8 master</c>.
</p>

<p>
Ensuite, vous devez indiquer à l'instance principale de <c>postfix</c>, qui
tourne sur le port 25, qu'elle doit filtrer le courrier en utilisant
<c>amavisd-new</c> qui, lui, tourne sur le port 10024.
</p>

<p>
De plus, vous devez indiquer le nom du serveur de courrier destinataire.
Indiquez à Postfix de filtrer tout le courrier grâce à un filtre de contenu
externe, puis mettez en place un routage explicite pour lui permettre de savoir
à qui renvoyer le courrier.
</p>

<pre caption="Modifier /etc/postfix/main.cf">
biff = no
empty_address_recipient = MAILER-DAEMON
queue_minfree = 120000000

content_filter = smtp-amavis:[127.0.0.1]:10024
<comment># Si vous utilisez lmtp :
#content_filter = lmtp-amavis:[127.0.0.1]:10024

# TRANSPORT MAP
#
# Insert text from sample-transport.cf if you need explicit routing.</comment>
transport_maps = hash:/etc/postfix/transport

relay_domains = $transport_maps
</pre>

<p>
Postfix dispose d'un grand nombre d'options que vous pouvez configurer dans
<path>main.cf</path>. Pour plus d'explications sur ce fichier, veuillez vous
référer à la page de manuel <c>man 5 postconf</c> ou à la page web sur les
<uri link="http://www.postfix.org/postconf.5.html">paramètres de configuration
de Postfix</uri>.
</p>

<p>
Le format de ce fichier <path>transport</path> est le même que celui des
fichiers de hachage de Postfix. Les messages en destination du domaine inscrit
sur la gauche seront envoyés au serveur inscrit sur la droite.
</p>

<pre caption="/etc/postfix/transport">
mondomaine.tld                          smtp:mail.mondomaine.tld
</pre>

<p>
Après avoir édité ce fichier, vous devez lancer la commande <c>postmap</c>.
Postfix ne lit en fait pas directement ce fichier, il faut donc que vous le
convertissiez dans un format convenable, en faisant <c>postmap
/etc/postfix/transport</c>. Cela crée le fichier
<path>/etc/postfix/transport.db</path>. Il n'y a pas besoin de recharger postfix
dans la mesure où il prendra automatiquement en charge les modifications.
</p>

<note>
Si le prochain serveur de courrier contacté n'écoute pas le port 25, standard
pour le protocole SMTP, vous pouvez préciser le numéro du port, par
exemple <c>smtp:mail.mondomaine.tld:25000</c>.
</note>

</body>
</section>
<section>
<title>Configurer Amavisd-new</title>
<body>

<p>
Amavisd-new est utilisé pour gérer tout ce qui concerne le filtrage du courrier
et vous permet de rassembler facilement différentes technologies. À la réception
d'un courrier électronique, il extrait le contenu, le passe à travers
certains filtres personnalisés, utilise des listes noires et blanches,
filtre le courrier grâce à différents anti-virus et, finalement, le passe au
crible de SpamAssassin.
</p>

<p>
Amavisd-new en lui-même propose un certain nombre de fonctionnalités
supplémentaires&nbsp;:
</p>

<ul>
  <li>
    Il identifie les pièces jointes dangereuses et dispose de règles pour
    les gérer.
  </li>
  <li>
    Pour chaque utilisateur, chaque domaine et pour l'ensemble du système, il
    dispose de règles pour&nbsp;:
    <ul>
      <li>les listes blanches (whitelists)&nbsp;;</li>
      <li>les listes noires (blacklists)&nbsp;;</li>
      <li>la gestion de score de spam&nbsp;;</li>
      <li>la gestion de règles contre les virus et le spam.</li>
    </ul>
  </li>
</ul>

<p>
Mis à part <c>postfix</c> et <c>freshclam</c>, l'ensemble des applications
sera lancé par l'utilisateur <c>amavis</c>.
</p>

<!--
<pre caption="/etc/passwd">
amavis:x:1010:413:added by portage for amavisd-new:/var/amavis:/bin/bash
</pre>
-->

<p>
Créez un nouveau répertoire utilisateur et donnez-lui les bons droits.
</p>

<pre caption="Création du nouveau répertoire et modification des droits">
# <i>mkdir /var/amavis</i>
# <i>chown amavis:amavis /var/amavis</i>
# <i>chmod 750 /var/amavis</i>
</pre>

<p>
Éditez les lignes suivantes dans le fichier
<path>/etc/amavisd.conf</path>&nbsp;:
</p>

<pre caption="Éditer /etc/amavisd.conf">
<comment>(Insérer les domaines à vérifier :)</comment>
$mydomain = 'exemple.com';
<comment>(Écouter uniquement sur l'interface locale :)</comment>
$inet_socket_bind = '127.0.0.1';
<comment>(Renvoyer le courrier à Postfix sur le port 10025 :)</comment>
$forward_method = 'smtp:127.0.0.1:10025';
$notify_method = $forward_method;
<comment>(Définir le compte auquel envoyer les alertes en cas de courrier vérolé :)</comment>
$virus_admin = "alertevirus\@$mondomaine";
<comment>(Toujours ajouter les en-têtes de spam :)</comment>
$sa_tag_level_deflt  = -100;
<comment>(Ajouter l'en-tête X-Spam-Status: Yes pour le spam détecté :)</comment>
$sa_tag2_level_deflt = 5;
<comment>(Lancer une action d'échappement à ce niveau de spam :)</comment>
$sa_kill_level_deflt = $sa_tag2_level_deflt;
<comment>(Ne pas envoyer de notification de statut à l'envoyeur. Cela n'affecte
pas la réception du spam par le destinataire. Pour faire cela, utiliser le
kill_level.)</comment>
$sa_dsn_cutoff_level = 10;
<comment>(Ne pas passer le message et le mettre en quarantaine à la place :)</comment>
$final_virus_destiny      = D_DISCARD;  # (par défaut : D_DISCARD)
$final_banned_destiny     = D_DISCARD;  # (par défaut : D_BOUNCE)
$final_spam_destiny       = D_DISCARD;  # (par défaut : D_BOUNCE)
</pre>

<note>
Grâce à la ligne <c>$sa_tag2_level_deflt = 5;</c>, vous indiquez un score de
spam pour Spamassassin qui sera de 5. Cela peut être un peu faible. Comme vous
l'aviez peut-être remarqué, la valeur par défaut pour Amavisd-new est de
<c>6.3</c>.
Si vous ne souhaitez voir aucun spam dans votre répertoire de courrier,
choisissez <c>5</c>, mais si vous ne voulez pas avoir de faux positifs, gardez
la valeur de <c>6.3</c>.
</note>

<p>
Créer un répertoire de quarantaine pour les mails vérolés, dans la mesure où
nous ne souhaitons pas les délivrer à nos utilisateurs.
</p>

<pre caption="Créer le répertoire de quarantaine pour les mails vérolés">
# <i>mkdir /var/amavis/virusmails</i>
# <i>chown amavis:amavis /var/amavis/virusmails</i>
# <i>chmod 750 /var/amavis/virusmails</i>
</pre>

</body>
</section>
<section>
<title>Configurer ClamAV</title>
<body>

<p>
Pour la vérification des virus nous utilisons ClamAV, car il propose de bons
moyens de détection comparables aux offres commerciales. De plus, il est
très rapide et c'est un logiciel libre. Comme nous aimons utiliser les fichiers
de journalisation, vous allez configurer <c>clamd</c> pour utiliser
<c>syslog</c> et utiliser une journalisation verbeuse. Enfin, <c>clamd</c> ne
sera pas lancé en tant que <c>root</c>. Éditez le fichier
<path>/etc/clamd.conf</path>&nbsp;:
</p>

<pre caption="Éditer /etc/clamd.conf">
<comment>(Journalisation verbeuse avec syslog :)</comment>
LogSyslog
LogVerbose
LogFacility LOG_MAIL
<comment>(Changer la direction du fichier pid :)</comment>
PidFile /var/run/amavis/clamd.pid
<comment>(Fichier du socket de clamav :)</comment>
LocalSocket /var/amavis/clamd
<comment>(Fermer la connexion quand cette limite est dépassée :)</comment>
StreamMaxLength 10M
<comment>(Ne pas exécuter clamd en tant que root :)</comment>
User amavis
<comment>(Vous devez décommenter ces lignes avec les dernières versions :)</comment>
ScanMail
ScanArchive
</pre>

<note>
De plus, n'oubliez pas d'enlever l'exemple pour que ClamAV puisse fonctionner.
</note>

<p>
ClamAV est fourni avec le démon <c>freshclam</c>, qui permet de mettre à jour
les signatures des nouveaux virus. Au lieu de mettre à jour ces signatures deux
fois par jour, nous effectuerons une mise à jour de la base des signatures de
virus toutes les deux heures.
</p>

<pre caption="Éditer /etc/freshclam.conf">
<comment>(Journalisation avec syslog :)</comment>
LogSyslog
<comment>(Journalisation verbeuse :)</comment>
LogVerbose
<comment>(Abandonner explicitement les privilèges root :)</comment>
DatabaseOwner clamav
<comment>(Vérifier les mises à jour toutes les deux heures. C'est la
recommandation officielle :)</comment>
Checks 12
<comment>(Utilisez le miroir le plus proche de vous. Remplacer XY par le code
correspondant à votre pays :)</comment>
DatabaseMirror db.XY.clamav.net
</pre>

<p>
Faites lancer <c>clamd</c> et <c>freshclam</c> par les scripts d'initialisation
en modifiant le fichier <path>/etc/conf.d/clamd</path>.
</p>

<pre caption="Modifier /etc/conf.d/clamd">
START_CLAMD=yes
FRESHCLAM_OPTS="-d"
</pre>

<p>
Pour finir, modifiez le fichier <path>amavisd.conf</path> pour indiquer la bonne
location du socket.
</p>

<pre caption="Modifier /etc/amavisd.conf">
<comment>(Décommentez les lignes pour la vérification avec clamav et modifiez la
location du socket :)</comment>
['ClamAV-clamd',
\&amp;ask_daemon, ["CONTSCAN {}\n", "/var/amavis/clamd"],
  qr/\bOK$/, qr/\bFOUND$/,
  qr/^.*?: (?!Infected Archive)(.*) FOUND$/ ],
</pre>

<warn>
NE PAS modifier la variable <c>$unix_socketname</c> sauf si vous savez ce que
vous faites.
</warn>

</body>
</section>
<section>
<title>Configurer Razor de Vipul</title>
<body>

<p>
Razor2 est un réseau collaboratif et distribué d'identification de spam.
Installez-le grâce à <c>emerge razor</c> et créez les fichiers de configuration
nécessaires sous le compte <c>amavis</c> en utilisant <c>su - amavis</c>, puis
<c>razor-admin -create</c>.
</p>

<pre caption="Créer les fichiers de configuration nécessaires">
# <i>emerge razor</i>
<comment>(Définir temporairement un shell pour amavis.)</comment>
# <i>usermod -s /bin/bash amavis</i>
# <i>su - amavis</i>
$ <i>razor-admin -create</i>
$ <i>exit</i>
<comment>(Remettre le shell à /bin/false.)</comment>
# <i>usermod -s /bin/false amavis</i>
</pre>

</body>
</section>
<section>
<title>Configurer DCC (Distributed Checksum Clearinghouse)</title>
<body>

<p>
Tout comme Razor2, DCC est un réseau collaboratif et distribué d'identification
de spam. Son fonctionnement repose sur le nombre de personnes qui reçoivent un
mail donné en identifiant chacun d'eux avec une somme de contrôle.
</p>

<pre caption="Installer DCC">
# <i>emerge dcc</i>
</pre>

</body>
</section>
<section>
<title>Configurer Spamassassin</title>
<body>

<p>
Amavis utilise directement les bibliothèques Perl de Spamassasin, il n'y a donc
pas besoin de lancer le service de spamassassin. Cela génère quelques confusions
dans la configuration, vu que Spamassassin utilise le fichier de configuration
<path>/etc/mail/spamassassin/local.cf</path>, mais le fichier
<path>/etc/amavisd.conf</path> a priorité et remplace certaines de ces
configurations.
</p>

<pre caption="Créer le fichier /etc/mail/spamassassin/local.cf">
<comment># Activer le système bayésien </comment>
use_bayes               1

<comment># Activer toutes les vérifications de réseaux</comment>
skip_rbl_checks         0
use_razor2              1
use_dcc                 1
use_pyzor               1

<comment># Le courrier utilisant une langue de l'un de ces pays ne sera pas
# marqué comme étant du spam dans une langue étrangère.
# - français, anglais</comment>
ok_languages            fr en

<comment># Le courrier utilisant une localisation parmi celles-ci ne sera pas
# marqué comme pouvant être du spam dans une langue étrangère.</comment>
ok_locales              en

<comment># Utiliser un répertoire personnalisé pour le bayésien.</comment>
bayes_path              /var/amavis/.spamassassin/bayes
</pre>

<note>
Vous pouvez chercher de l'inspiration pour votre fichier <path>local.cf</path>
en utilisant le <uri link="http://www.yrex.com/spam/spamconfig.php">générateur
de configuration de Spamassassin</uri>.
</note>

<note>
Vous pouvez évidemment adapter vos variables <c>ok_languages</c> et
<c>ok_locales</c> à vos besoins.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Toute règle a également ses exceptions</title>
<section>
<body>

<p>
Lorsque les premiers courriers arriveront effectivement sur votre passerelle de
courrier, vous découvrirez probablement que la configuration ci-dessus n'est pas
parfaite. Par exemple, certains de vos clients souhaiteront probablement
recevoir des courriers que les autres ne voudront pas. Vous pouvez facilement
mettre en place des listes blanches et noires pour les expéditeurs. Décommentez
la ligne suivante dans le fichier de configuration <path>amavisd.conf</path>.
</p>

<pre caption="Modifier amavisd.conf pour attribuer des notes par expéditeurs">
read_hash("/var/amavis/sender_scores_sitewide"),
</pre>

<p>
Dans le fichier <path>sender_scores_sitewide</path>, vous pouvez préciser des
adresses complètes ou plus généralement des noms de domaine. Puis, vous leurs
attribuez une note positive ou négative, à ajouter au score de spam.
</p>

<pre caption="Exemple de fichier whitelist_sender">
<comment>(Mettre sur liste blanche tous les courriers provenant de cette adresse.)</comment>
postmaster@exemple.net     -3.0
<comment>(Mettre sur liste blanche tous les courriers provenant du domaine exemple.net, sauf ses sous-domaines.)</comment>
.exemple.net                1.0
</pre>

<note>
Voir <path>/etc/amavisd.conf</path> pour plus d'exemples.
</note>

<note>
Mettre ces adresses en dehors de <path>amavisd.conf</path> permet une
configuration plus propre et plus sûre.
</note>

<note>
Vous pouvez également faire la même chose en passant par le fichier de
configuration de Spamassassin <path>/etc/mail/spamassassin/local.cf</path>, mais
je pense que c'est plus propre de le faire dans <path>/etc/amavisd.conf</path>.
</note>

<note>
Dans une prochaine version de ce guide, nous devrions proposer une politique
de listes blanches et noires par utilisateur implémentée à l'aide de MySQL.
</note>

<p>
En attendant mieux, vous pouvez ajouter les lignes suivantes dans votre
<path>amavisd.conf</path> pour passer outre les vérifications de spam pour les
destinataires <c>postmaster</c> et <c>abuse</c>.
</p>

<pre caption="Ne pas filtrer contre le spam pour tous les courrier de postmaster et abuse">
map { $bypass_spam_checks{lc($_)}=1 } (qw(
        postmaster@
        abuse@
));
</pre>

<impo>
Tant qu'on en est à parler de <c>postmaster</c> et <c>abuse</c>, il ne faut
<e>jamais</e> supprimer automatiquement de courriers à destination de ces
adresses. Voir la <uri link="http://www.ietf.org/rfc/rfc2142.txt">RFC 2142
Mailbox names for common services, roles and functions</uri> (Noms de boîtes de
courrier pour des services communs, rôles et fonctions).
Sinon, votre domaine pourrait finir par être listé dans une des listes du mal
qu'on pourra retrouver sur le site <uri
link="http://www.rfc-ignorant.org/">rfc-ignorant.org</uri>.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Ajouter plus de règles</title>
<section>
<body>

<p>
Si vous souhaitez ajouter quelques-unes des règles proposées par le
<uri link="http://www.rulesemporium.com/">SpamAssassin Rules Emporium</uri>,
vous pouvez facilement le faire en en ajoutant ou en les mettant à jour grâce au
paquet <c>mail-filter/spamassassin-ruledujour</c>&nbsp;:
</p>

<pre caption="Installer rulesdujour">
# <i>echo "mail-filter/spamassassin-ruledujour  ~x86" &gt;&gt; /etc/portage/package.keywords</i>
# <i>emerge "mail-filter/spamassassin-ruledujour"</i>
</pre>

<p>
Maintenant, éditez le fichier <path>/etc/rulesdujour/config</path> pour relancer
Amavisd-new au lieu de spamd&nbsp;:
</p>

<pre caption="Modifier /etc/rulesdujour/config">
<comment>(Relancer amavisd-new au lieu de spamd.)</comment>
SA_RESTART="/etc/init.d/amavisd restart"
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Tester et finaliser</title>
<section>
<title>Tester la configuration</title>
<body>

<p>
Avant de lancer <c>freshclam</c> vous pouvez vérifier manuellement que le
service fonctionne.
</p>

<pre caption="Tester freshclam">
# <i>freshclam</i>
ClamAV update process started at Sun May  2 09:13:41 2004
Reading CVD header (main.cvd): OK
Downloading main.cvd [*]
main.cvd updated (version: 22, sigs: 20229, f-level: 1, builder: tkojm)
Reading CVD header (daily.cvd): OK
Downloading daily.cvd [*]
daily.cvd updated (version: 298, sigs: 1141, f-level: 2, builder: diego)
Database updated (21370 signatures) from database.clamav.net (193.1.219.100).
</pre>

<p>
Nous venons de mettre à jour les définitions de virus et nous sommes assurés au
passage que <path>freshclam.conf</path> fonctionne correctement.
</p>

<p>
Testez ensuite freshclam et amavisd en utilisant la CLI (l'interface en ligne de
commandes) avec des courriers de test d'amavisd. Lancez <c>clamd</c> et
<c>amavis</c> avec les commandes suivantes&nbsp;:
</p>

<pre caption="Lancer amavisd et clamd et recharger la configuration de postfix">
# <i>/etc/init.d/clamd start</i>
# <i>/etc/init.d/amavisd start</i>
# <i>/etc/init.d/postfix reload</i>
</pre>

<p>
Si tout va bien, <c>postfix</c> devrait écouter sur le port 25 pour la réception
de courrier et devrait les réinjecter sur le port 10024. Pour vous en assurer,
jetez un coup d'œil dans vos fichiers de journalisation.
</p>

<pre caption="Vérifier les fichiers de journalisation">
# <i>tail -f /var/log/mail.log</i>
</pre>

<note>
Selon votre configuration de journalisation, il se peut que le bon fichier soit
<path>/var/log/messages</path>.
</note>

<p>
Maintenant, si vous n'avez aucun message étrange dans le fichier de
journalisation, il est temps de faire les tests.
</p>

<p>
Utilisez <c>netcat</c> pour vous connecter manuellement à <c>amavisd</c> sur le
port 10024 et à <c>postfix</c> sur le port 10025.
</p>

<note>
Netcat peut être utilisé comme un remplacement amélioré de <c>telnet</c>. Pour
l'installer, vous devez faire <c>emerge netcat</c>.
</note>

<note>
Pour une raison inconnue, vous ne pouvez pas injecter manuellement un
courrier complet avec netcat dans <c>amavisd</c>. Utilisez <c>telnet</c> à la
place.
</note>

<pre caption="Vérification manuelle du fonctionnement d'amavisd et de postfix">
# <i>nc localhost 10024</i>
<comment>(Amavis fonctionne)</comment>
220 [127.0.0.1] ESMTP amavisd-new service ready
<i>nc localhost 10025</i>
<comment>(la réinjection de postfix fonctionne)</comment>
220 exemple.com ESMTP Postfix
</pre>

<note>
Si vous souhaitez visualiser l'intégralité des messages de retour avec
amavisd-new, lancez <c>amavisd debug-sa</c> avec le compte utilisateur
<c>amavis</c> et envoyez un courrier.
</note>

<p>
Ajoutez <c>amavisd</c> et <c>clamd</c> aux scripts à lancer par défaut au
démarrage.
</p>

<pre caption="Amavisd et clamd seront lancés par défaut au démarrage">
# <i>rc-update add clamd default</i>
# <i>rc-update add amavisd default</i>
</pre>

<note>
Nous ne mettons pas <c>spamd</c> dans les scripts de démarrage, dans la mesure
où <c>amavisd</c> utilise directement les bibliothèques en Perl de Spamassassin.
</note>

<note>
Vous verrez probablement des lignes comme <c>Net::Server: Couldn't POSIX::setuid
to ... []</c> dans vos fichiers de journalisation. D'après le
<uri link="http://www.ijs.si/software/amavisd/README.chroot">guide pour chrooter
amavis</uri>, si l'UID du processus est 0 (<c>root</c>), le programme
terminera. Du coup, vous pouvez considérer ce message comme simplement
informatif. C'est dû au fait que <c>POSIX::setuid()</c> retourne une chaîne de
caractère <c>0 but true</c>.
</note>

<impo>
Si vous avez permis la connexion de l'utilisateur amavis, n'oubliez pas de
remettre son shell de connexion dans <path>/etc/passwd</path> à
<c>/bin/false</c> pour le désactiver à nouveau.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Auto-apprentissage et mise en touche de courriers</title>
<section>
<title>Créer un utilisateur spamtrap</title>
<body>

<p>
Nous allons créer un compte spamtrap ainsi qu'un certain nombre de répertoires
utiles par la suite.
</p>

<pre caption="Création du compte spamtrap">
# <i>useradd -m spamtrap</i>
# <i>maildirmake /home/spamtrap/.maildir</i>
# <i>chown -R spamtrap:mailusers /home/spamtrap/.maildir</i>
<comment>(Donner à l'utilisateur spamtrap un bon mot de passe)</comment>
# <i>passwd spamtrap</i>
</pre>

<p>
Si vous voulez vérifier manuellement certains des courriers pour vous assurer
qu'il n'y a pas de faux positifs, vous pouvez utiliser la commande
<c>procmail</c> pour mettre à l'écart le spam trouvé dans différents répertoires
de courrier.
</p>

</body>
</section>
<section>
<title>Création du fichier .procmailrc</title>
<body>

<pre caption="Création de /home/spamtrap/.procmailrc">
<comment># Définition de quelques variables par défaut</comment>
MAILDIR=$HOME/.maildir

SPAM_FOLDER=$MAILDIR/.spam-found/

LIKELY_SPAM_FOLDER=$MAILDIR/.likely-spam-found/

<comment># Placer le courrier ayant un score de spam de plus de 7 dans le
# répertoire de spam.</comment>
:0:
* ^X-Spam-Status: Yes
* ^X-Spam-Level: \*\*\*\*\*\*\*
$SPAM_FOLDER

<comment># Placer le courrier ayant un score de spam entre 5 et 7 dans le
# répertoire de courrier a priori de type spam.</comment>
:0:
* ^X-Spam-Status: Yes
$LIKELY_SPAM_FOLDER

<comment># Placer le reste du courrier dans la boîte Inbox</comment>
:0
*
./
</pre>

<warn>
Si vous vous attendez à recevoir sur votre serveur de courrier une grande
quantité de courrier, il vaut mieux ne pas utiliser le dépôt pour le courrier
ayant un score entre 5 et 7. À la place, vous pouvez utiliser une valeur
suffisamment grande pour la variable <c>$sa_tag2_level_deflt</c> pour éviter les
faux positifs et vous les filtrerez alors directement dans le répertoire
<c>$SPAM_FOLDER</c>.
</warn>

<note>
Si vous n'avez pas encore installé <c>procmail</c>, vous devez le faire avec
<c>emerge procmail</c>.
</note>

<p>
Maintenant, assurez-vous que Postfix utilise <c>procmail</c> pour délivrer le
courrier.
</p>

<pre caption="Modification de /etc/postfix/main.cf">
mailbox_command = /usr/bin/procmail -a "DOMAIN"
</pre>

</body>
</section>
<section>
<title>Créer les répertoires de courrier</title>
<body>

<p>
Nous allons désormais créer des répertoires partagés pour le spam et le ham
(courrier indésirable et faux positifs).
</p>

<pre caption="Création des répertoires de courrier nécessaires">
# <i>maildirmake /var/amavis/.maildir</i>
# <i>maildirmake -S /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f spam /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f ham /var/amavis/.maildir/Bayes</i>
# <i>maildirmake -s write -f redeliver /var/amavis/.maildir/Bayes</i>
</pre>

<p>
Amavisd-new doit pouvoir lire ces fichiers ainsi que tous les fichiers de
courrier des utilisateurs. Ainsi, nous allons ajouter tous les utilisateurs
concernés ainsi que amavis au groupe mailusers.
</p>

<pre caption="Configuration des permissions d'accès">
# <i>groupadd mailusers</i>
# <i>usermod -G mailusers spamtrap</i>
# <i>chown -R amavis:mailusers /var/amavis/.maildir/</i>
# <i>chown amavis:mailusers /var/amavis/</i>
# <i>chmod -R 1733 /var/amavis/.maildir/Bayes/</i>
# <i>chmod g+rx /var/amavis/.maildir/</i>
# <i>chmod g+rx /var/amavis/.maildir/Bayes/</i>
</pre>

<warn>
Ces lignes donnent aux membres du groupe <c>mailusers</c> un accès au courrier
d'<c>amavis</c>.
</warn>

<p>
Ici, vous avez donné aux répertoires de spam et ham des droits d'écriture, mais
pas de lecture. De cette manière, les utilisateurs peuvent soumettre avec
confiance leurs faux positifs sans que les autres utilisateurs puissent les
lire.
</p>

<p>
Enfin, exécutez la commande suivante en tant qu'utilisateur
<c>spamtrap</c>&nbsp;:
</p>

<pre caption="Ajouter les répertoires partagés aux répertoires courrier des utilisateurs">
$ <i>maildirmake --add Bayes=/var/amavis/.maildir/Bayes $HOME/.maildir</i>
</pre>

<note>
Nous devons donner des droits de lecture pour le groupe sur le répertoire
<path>Bayes</path> avant que le client mail puisse lire les sous-répertoires
utilisés par IMAP.
</note>

</body>
</section>
<section>
<title>Ajouter des tâches périodiques</title>
<body>

<p>
Exécutez maintenant <c>crontab -u amavis -e</c> pour éditer la configuration
crontab de l'utilisateur amavis pour permettre un apprentissage automatique
des filtres bayésiens toutes les heures.
</p>

<pre caption="crontab d'amavis">
<comment># Auto-apprentissage</comment>
0 * * * *          /usr/bin/sa-learn --spam /var/amavis/.maildir/Bayes/.spam/{cur,new} \
                    > /dev/null 2>&amp;1
0 * * * *          /usr/bin/sa-learn --ham /var/amavis/.maildir/Bayes/.ham/{cur,new} > \
                   /dev/null 2>&amp;1
</pre>

<note>
<c>Amavis</c> doit être membre du groupe <c>cron</c> pour pouvoir exécuter
les tâches périodiques.
</note>

<note>
Il semble que les répertoires partagés de courrier obligeront à <c>sa-learn</c>
d'examiner tous les messages deux fois. Cela ne devrait pas être un problème.
En sortie, nous constaterons que le maximum de messages appris ainsi sera de la
moitié de ceux réellement examinés.
</note>

</body>
</section>
<section>
<title>Mofification de amavisd.conf</title>
<body>

<p>
Maintenant nous allons modifier amavis pour rediriger les courriers de spam
vers le compte <c>spamtrap</c> en gardant les en-têtes de spam.
</p>

<pre caption="Modification de /etc/amavisd.conf">
<comment>(Définir le compte à qui envoyer les spams et les courriers vérolés.)</comment>
$spam_quarantine_to = "spamtrap\@$myhostname";
</pre>

</body>
</section>
<section>
<title>Envoyer de nouveau les faux positifs</title>
<body>

<p>
Si, comme nous l'avons fait jusque là, vous rejetez le courrier ayant un score
de spam très bas, vous aurez très probablement quelques faux positifs. Ils sont
filtrés dans le répertoire <path>likely-spam</path>. Ils sont manuellement
vérifiés et tous les faux positifs sont déplacés dans le répertoire
<path>redeliver</path>. À partir de là, une première étape consiste à exécuter
<c>sa-learn --ham</c>, puis la soumission du courrier, en gardant tous les
en-têtes intacts, est effectuée en utilisant une version corrigée de
<uri link="http://www.engelschall.com/sw/smtpclient/">smtpclient</uri> par
Ralf S. Engelschall.
</p>

<p>
La version originale 1.0.0 de <c>smtpclient</c> est déjà dans Portage, mais pour
préserver tous les en-têtes, nous devons utiliser une version modifiée. Voici
comment installer cette version&nbsp;:
</p>

<pre caption="Installer une version modifiée de smtpclient">
<comment>(Aller dans votre OVERLAY de Portage)</comment>
# <i>wget http://home.coming.dk/files/smtpclient.tar.gz</i>
# <i>tar xzf smtpclient.tar.gz</i>
# <i>echo "mail-client/smtpclient    ~x86" &gt;&gt; /etc/portage/package.keywords</i>
# <i>echo "mail-client/smtpclient    fullheaders" &gt;&gt; /etc/portage/package.use</i>
# <i>emerge smtpclient</i>
</pre>

<p>
Vérifiez le courrier dans le répertoire <path>redeliver</path> toutes les
minutes en utilisant cron.
</p>

<pre caption="crontab d'amavis">
<comment># Renvoyer les faux positifs</comment>
* * * * *          find /var/amavis/.maildir/Bayes/.redeliver/cur/ -type f -name \
                   "[0-9]*" -exec cp {} /var/amavis/.maildir/Bayes/.ham/cur/ \; \
                   &amp;&amp; find /var/amavis/.maildir/Bayes/.redeliver/cur/ -type f \
                   -name "[0-9]*" -exec /usr/local/bin/redeliver.pl {} \;
</pre>

<p>
Maintenant, tout ce que vous avez à faire est de copier le fichier
<c>redeliver.pl</c> dans <path>/usr/local/bin/</path>.
<uri link="http://home.coming.dk/files/redeliver.pl">Télechargez-le</uri> ou
utilisez la version ci-dessous.
</p>

<pre caption="redeliver.pl">
<comment>#!/usr/bin/perl -w

# Renvoi le courrier en utilisant une version modifiée de smtpclient
# Par : Jens Hilligsoe &lt;gentoo@hilli.dk&gt;</comment>

use strict;

if(!($#ARGV == 0)) {
        die "Usage:\n$0 maildir_mail\n";
}

my $mail = $ARGV[0];
my $to = "";
my $from = "";

sub prunefile ( $ );

<comment># Récupère les champs To et From</comment>
open (MAIL, $mail) or die "Could not open $mail: $?\n";
while(&lt;MAIL&gt;) {
    if(($to eq "") || ($from eq "")) {
        chop;
        (my $key, my $value) = split (/:/);
        if($key eq "X-Envelope-To") {
            $to = $value;
            $to =~ s/[\&lt;\&gt;,]//g; # Supprime "&lt;", "&gt;" and ","
            $to =~ s/^\s+|\s+$//g; # Supprime les espaces avant et après
        }
        if($key eq "X-Envelope-From") {
            $from = $value;
            $from =~ s/[\&lt;\&gt;,]//g;
            $from =~ s/^\s+|\s+$//g;
            if($from eq "") {
                $from = "postmaster";
            }
        }
    }
}

if($to eq "") {
    prunefile($ARGV[0]); # Supprimez-le simplement s'il est vide
} else {
    my $redelivercmd = "cat $ARGV[0] | smtpclient -F -S 127.0.0.1 -P 10025 -f $from $to";
    unless (system($redelivercmd) == 0 ) {
        die "Unable to redeliver: $?";
    }
    prunefile($ARGV[0]); # Clean up
}

sub prunefile ( $ ) {
    my ($file) = @_;
    unless (unlink $file) {
        die "Unable to remove mail: $?";
    }
}
</pre>

</body>
</section>
<section>
<title>Nettoyage</title>
<body>

<p>
Vous ne voulez sans doute pas garder pour toujours le courrier dans les
répertoires, donc utilisez <c>tmpwatch</c> pour faire un nettoyage
régulier. Installez-le avec <c>emerge tmpwatch</c>. Seul l'utilisateur
<c>root</c> est capable d'exécuter <c>tmpwatch</c> donc vous devez éditer la
crontab <c>root</c>.
</p>

<pre caption="Modifier la crontab de root">
<comment># Nettoyage
# Garder les mails à virus pendant une semaine (24*7 hours)</comment>
15 0 * * *      /usr/sbin/tmpwatch -c -f -d --quiet 168 /var/amavis/virusmails/
<comment># Supprimer le spam et le ham après une semaine</comment>
15 0 * * *      /usr/sbin/tmpwatch -c -f -d --quiet 168 /var/amavis/.maildir/Bayes/
</pre>

</body>
</section>
</chapter>

<!--
<chapter>
<title>Analyseurs de fichiers de journalisation</title>
<section>
<title>Statistiques générales de Postfix</title>
<body>

<p>
Maintenant que nous avons configuré le serveur de courrier passerelle, il serait
bien de pouvoir le surveiller. Pour cela, nous allons installer deux petits
scripts Perl qui vous enverront un résumé par courrier sur les statistiques de
courrier et de spam. Téléchargeons et installons <c>pflogsumm</c>&nbsp;:
</p>

<pre caption="Téléchargement et installation de pflogsumm">
# <i>wget http://jimsun.linxnet.com/downloads/pflogsumm-1.1.0.tar.gz</i>
# <i>tar xzf pflogsumm-1.1.0.tar.gz</i>
# <i>cp pflogsumm-1.1.0/pflogsumm.pl /usr/local/bin/</i>
</pre>

</body>
</section>
<section>
<title>Statistiques de spam pour Postfix</title>
<body>

<p>
Ensuite, nous allons télécharger et installer le script qui génère des
statistiques sur le spam detecté&nbsp;:
</p>

<pre caption="Téléchargement et installation de spamreport">
# <i>wget http://www.flakshack.com/anti-spam/nosack-spamreport.pl</i>
# <i>mv nosack-spamreport.pl /usr/local/bin/</i>
# <i>chmod +x /usr/local/bin/nosack-spamreport.pl</i>
</pre>

<p>
Nous souhaitons un courrier journalier pour chacun de ces scripts, donc nous
ajoutons deux entrées au crontab <c>root</c>&nbsp;:
</p>

<pre caption="Ajouter les scripts de rapport au crontab root">
15 0 * * *      /usr/local/bin/pflogsumm.pl -d yesterday \
                /var/log/mail.log 2&gt;&amp;1 | /bin/mailx \
                -s "`uname -n` daily mail stats" postmaster
10 0 * * *      /usr/local/bin/nosack-spamreport.pl \
                /var/log/mail.log 2&gt;&amp;1 | /bin/mailx \
                -s "`uname -n` daily spam stats" postmaster
</pre>

<note>
Vous devrez probablement procéder aux installations <c>emerge Date-Calc</c> et
<c>emerge mailx</c>. Autrement, vous pouvez utiliser <c>mail</c> installé avec
<c>emerge mailutils</c>.
</note>

<note>
Si vous effectuez une rotation des fichiers de journalisation hebdomadaire
(comme je le fais) vous voudrez probablement exécuter les scripts juste avant la
rotation de la journalisation.
</note>

<note>
Actuellement nous réfléchissons à l'utilisation d'un autre analyseur de
journalisation pour amavis&nbsp;:
<uri link="http://homepages.hs-bremen.de/~renegat/amavislogsumm">amavislogsumm</uri>.
</note>
</body>
</section>
</chapter>
-->

<chapter>
<title>Listes grises</title>
<section>
<title>Introduction</title>
<body>

<p>
Les listes grises sont l'une des armes les plus récentes pour la lutte contre le
spam. Comme leur nom l'indique, c'est un mélange des listes blanches et des
listes noires. À chaque fois qu'un serveur de courriers inconnu essaye d'envoyer
du courrier, le courrier est rejeté avec un message <e>essaye plus tard</e>.
Cela signifie que le courrier sera retardé, mais aussi que les robots de spam
qui n'implémentent pas le protocole RFC refuseront de récupérer le spam et ne
le renverront pas. Avec le temps, les robots de spam seront probablement
modifiés pour tenir compte de cela, mais cela permet de gagner du temps pour
développer de nouvelles technologies pour identifier le spam.
</p>

<note>
Si votre fournisseur d'accès à Internet bloque le trafic entrant sur le port 25
et si tout le courrier vous est relayé à travers leur propre serveur de
courrier, les listes grises ne fonctionneront pas.
</note>

<p>
Postfix 2.1 est fourni avec un simple script Perl implémentant un tel serveur
qui gère les listes grises. Cependant, il donne des résultats imprévisibles
quand la partition contenant la base de données de listes grises manque d'espace
libre. Il existe une version améliorée qui ne souffre pas de ce problème. Nous
allons tout d'abord vous présenter comment installer le support des listes
grises fourni avec Postfix, puis nous vous montrerons comment configurer la
version plus robuste qui remplacera ce script.
</p>

<note>
D'autres serveurs de listes grises pour Postfix existent. Voyez par exemple
<uri link="http://www.gasmi.net/gld.html">Gld</uri> qui est dans Portage ou
<uri link="http://sqlgrey.sourceforge.net/">SQLgrey</uri>.  Certaines utilisent
des bases de données, le «&nbsp;listage blanc&nbsp;» automatique et d'autres
fonctionnalités.
</note>

</body>
</section>
<section>
<title>Listes grises simples</title>
<body>

<note>
Si vous préférez utiliser les listes grises améliorées de postgrey, vous pouvez
ignorer la section suivante.
</note>

<p>
Nous avons besoin du fichier <path>greylist.pl</path>, mais malheureusement
l'ebuild ne l'installe pas par défault.
</p>

<pre caption="Récupérer le fichier greylist.pl">
# <i>cp /usr/portage/distfiles/postfix-votre-version.tar.gz /root/</i>
# <i>tar xzf postfix-votre-version.tar.gz</i>
# <i>cp postfix-2.1.0/examples/smtpd-policy/greylist.pl /usr/bin/</i>
</pre>

<p>
Maintenant que nous disposons du fichier à l'endroit souhaité, nous devons créer
un répertoire pour placer la base de données de listes grises&nbsp;:
</p>

<pre caption="Création du répertoire pour la base de données de listes grises">
# <i>mkdir /var/mta</i>
# <i>chown nobody /var/mta</i>
</pre>

<warn>
Ne créez pas le répertoire de base de données de listes grises sur une partition
qui risque de manquer d'espace disque. Si Postfix peut gérer des situations où
il manque de l'espace disque pour les files d'attente de courrier et les boîtes
de courriers des utilisateurs, ce n'est pas le cas pour la base de données des
listes grises. Si le fichier est corrompu, vous ne pourrez plus recevoir du tout
de courrier tant que vous n'aurez pas supprimé le fichier en question à la
main.
</warn>

</body>
</section>
<section>
<title>Configurer les listes grises</title>
<body>

<p>
Maintenant que tout est prêt, tout ce qu'il nous reste à faire est d'ajouter
cette fonctionnalité à la configuration de Postfix. Tout d'abord, ajoutons les
informations nécessaires au fichier <path>master.cf</path>&nbsp;:
</p>

<pre caption="Modification de master.cf pour l'utilisation des listes grises">
policy-greylist  unix  -       n       n       -       -       spawn
   user=nobody argv=/usr/bin/perl /usr/bin/greylist.pl
</pre>

<p>
Le démon spawn de postfix tue normalement ses propres processus fils après 1000
secondes, mais ce temps est trop court pour le processus de listes grises, donc
nous allons devoir augmenter la limite de temps dans <path>main.cf</path>&nbsp;:
</p>

<pre caption="Modification de main.cf pour l'utilisation de listes grises">
policy-greylist_time_limit = 3600
<comment>(Dans smtpd_recipient_restrictions, ajouter :)</comment>
check_sender_access hash:/etc/postfix/sender_access
<comment>(Plus loin, ajouter :)</comment>
restriction_classes = greylist
greylist = check_policy_service unix:private/policy-greylist
</pre>

<warn>
Assurez-vous de bien définir <c>check_sender_access</c> APRÈS
<c>reject_unauth_destination</c> car sinon votre système pourrait devenir un
serveur relai de courrier ouvert.
</warn>

<note>
La base de données de listes grises se pollue rapidement d'adresses parasites.
Il est bon de protéger les vérifications de la liste grise en ajoutant d'autres
restrictions qui rejettent des expéditeurs et/ou destinataires inconnus.
</note>

<p>
Vous ne voudrez sans doute pas utiliser des listes grises pour tous les domaines
mais seulement ceux qui subissent fréquemment les assauts des spammeurs. Après
tout, les listes grises retardent la réception du courrier. Une <uri
link="http://www.monkeys.com/anti-spam/filtering/sender-domain-validate.in">liste
de domaines MAIL FROM fréquemment forgés pour le spam</uri> est disponible.
Ajoutez les domaines sur lesquels vous recevez beaucoup de spam à votre fichier
<path>/etc/postfix/sender_access</path>&nbsp;:
</p>

<pre caption="Format du fichier sender_access">
aol.com     greylist
hotmail.com greylist
bigfoot.com greylist
</pre>

<p>
Si vous souhaitez une liste plus complète&nbsp;:
</p>

<pre caption="Ajouter tous les domaines à sender_access">
# <i>wget http://www.monkeys.com/anti-spam/filtering/sender-domain-validate.in</i>
# <i>cat sender-domain-validate.in | sort | awk {'print $1 "\t\t greylist"'} > /etc/postfix/sender_access</i>
</pre>

<p>
Maintenant, nous n'avons plus qu'à initialiser la base de données
<path>sender_access</path>&nbsp;:
</p>

<pre caption="Initialiser sender_access">
# <i>postmap /etc/postfix/sender_access</i>
</pre>

<p>
La configuration du système de listes grises simples est terminée.
</p>

<warn>
J'ai testé cette configuration sur une machine gérant des milliers de courriers
par jour et le résultat a été un désastre complet. Après quatre jours, la
machine était surchargée de centaines de vieux processus <c>greylist.pl</c>.
</warn>

</body>
</section>
<section>
<title>Configurer une amélioration des listes grises avec postgrey</title>
<body>

<p>
Pour installer notre amélioration du serveur de politiques de listes grises,
vous devrez télécharger et installer un certain nombre d'ebuilds pour des
modules Perl à partir de votre OVERLAY de Portage.
</p>

<pre caption="Installer postgrey">
# <i>echo "mail-filter/postgrey  ~x86" &gt;&gt; /etc/portage/package.keywords</i>
# <i>emerge postgrey</i>
</pre>

<note>
Postgrey est maintenant dans Portage, mais pas encore dans la branche stable.
</note>

<note>
Si vous ne voulez pas faire confiance à l'ebuild IO-Multiplex, vous pouvez
choisir de l'installer avec <c>g-cpan.pl</c>, un script Perl qui télécharge
automatiquement la dernière version d'un module Perl, génère un ebuild
automatiquement et l'installe&nbsp;: <c>g-cpan.pl IO-Multiplex</c>. Cela
nécessite un environnement CPAN correctement configuré.
</note>

<p>
Après avoir installé <c>postgrey</c>, vous devez éditer le fichier
<path>main.cf</path>. Les modifications sont presque identiques à celles
utilisées précédemment.
</p>

<pre caption="Modification de main.cf pour utiliser des listes grises">
<comment>(Dans smtpd_recipient_restrictions ajouter :)</comment>
check_sender_access hash:/etc/postfix/sender_access
<comment>(Plus loin, ajouter :)</comment>
smtpd_restriction_classes = greylist
greylist = check_policy_service inet:127.0.0.1:10023
</pre>

<note>
La variable Postfix SMTPD_POLICY_README utilise uniquement
<c>restriction_classes</c> mais cela semble ne pas fonctionner.
</note>

<note>
Si vous souhaitez mettre en liste grise absolument tous les domaines, ajoutez à
la place&nbsp;: <c>check_policy_service inet:127.0.0.1:10023</c>.
</note>

<note>
Certaines personnes aiment récupérer rapidement leur courrier et dans ce cas les
listes grises sont inutiles. Cela dit, si vous utilisez un serveur courrier de
sauvegarde vous pouvez facilement mettre en place des listes grises dessus. Mon
expérience limitée m'a appris que cela peut supprimer jusqu'à un tiers du spam
reçu.
</note>

</body>
</section>
</chapter>
<chapter>
<title>SPF (Sender Policy Framework, ou Système de contrôle des expéditeurs)</title>
<section>
<title>Introduction</title>
<body>

<p>
SPF permet aux propriétaires de noms de domaines d'indiquer dans leurs registres
DNS quelles adresses IP ont le droit d'envoyer des courriers provenant de leurs
domaines. Cela empêche les spammeurs de manipuler le <c>Return-Path</c>.
</p>

<note>
Si votre fournisseur d'accès à Internet bloque le trafic entrant sur le port
25 et vous relaye tout le courrier depuis leur propre serveur de courrier, le
SPF ne fonctionnera pas.
</note>

<p>
Tout d'abord, les propriétaires de domaines doivent créer un enregistrement DNS
spécial nommé <c>TXT</c>. Ensuite, le MTA supportant le SPF pourra le lire et,
si le courrier provient d'un serveur qui n'est pas décrit dans les
enregistrements SPF, le courrier pourra être rejeté. Un exemple d'entrée SPF
ressemble à ceci&nbsp;:
</p>

<pre caption="Exemple d'enregistrement SPF">
exemple.com.  IN TXT  "v=spf1 a mx ptr -all"
</pre>

<p>
L'option <c>-all</c> signifie qu'il faut rejeter tout courrier par défaut et
autoriser le courrier provenant des enregistrements DNS <c>A</c> (<c>a</c>),
<c>MX</c> (<c>mx</c>) et <c>PTR</c> (<c>ptr</c>). Pour plus d'information,
consultez le chapitre des ressources à la fin du guide.
</p>

<note>
Si vous relayez le courrier sortant à votre fournisseur d'accès Internet, il
faudra que vous ajoutiez&nbsp;: <c>include:votrefai.com</c>.
</note>

<p>
Spamassassin 3.0 supporte le SPF, mais c'est encore en test pour le moment, et
le nouveau démon de Postfix gérant les politiques supporte le SPF, donc nous
installerons le support SPF proposé par Postfix.
</p>

</body>
</section>
<section>
<title>Préparations</title>
<body>

<p>
Nous allons tout d'abord devoir installer Postfix 2.1 comme vu précédemment.
Une fois que vous avez téléchargé les sources, récupérez le fichier
<path>spf.pl</path> ainsi&nbsp;:
</p>

<pre caption="Installer spf.pl">
# <i>cp postfix-2.1.0/examples/smtpd-policy/spf.pl /usr/bin/</i>
</pre>

<note>
Le script <path>spf.pl</path> fourni avec Postfix est assez bogué. Il vous
faudra trouver et décommenter la ligne suivante&nbsp;: <c>push
@HANDLERS, "sender_permitted_from"; use Mail::SPF::Query;</c>. Ensuite, à la
ligne 199 environ, remplacez <c>comemnt</c> par <c>comment</c>. Vous pouvez
également télécharger la
<uri link="http://spf.pobox.com/postfix-policyd.txt">version de
développement</uri>.
</note>

<p>
Ce script Perl nécessite également un certain nombre de bibliothèques qui ne
sont pas fournies dans Portage, mais leur installation reste assez simple&nbsp;:
</p>

<pre caption="Installer les bibliothèques Perl nécessaires">
# <i>echo "dev-perl/Mail-SPF-Query ~x86" &gt;&gt; /etc/portage/package.keywords</i>
# <i>echo "dev-perl/Net-CIDR-Lite ~x86" &gt;&gt; /etc/portage/package.keywords</i>
# <i>echo "dev-perl/Sys-Hostname-Long ~x86" &gt;&gt; /etc/portage/package.keywords</i>
# <i>emerge Mail-SPF-Query Net-CIDR-Lite Sys-Hostname-Long</i>
</pre>

<note>
Les bibliothèques installées ci-dessus sont maintenant dans Portage, mais pas
encore dans la branche stable.
</note>

<p>
Maintenant que tout est en place, il ne nous reste plus qu'à configurer Postfix
pour qu'il utilise cette nouvelle politique.
</p>

<pre caption="Modifier master.cf pour utiliser le SPF">
policy-spf  unix  -       n       n       -       -       spawn
   user=nobody argv=/usr/bin/perl /usr/bin/spf.pl
</pre>

<p>
Ajoutez maintenant la vérification SPF dans <path>main.cf</path>. Un SPF bien
configuré ne devrait pas poser de problème donc nous pouvons vérifier le SPF
pour tous les domaines&nbsp;:
</p>

<pre caption="Modifier main.cf pour utiliser le SPF">
<comment>(Après smtpd_recipient_restrictions, ajouter :)</comment>
check_policy_service unix:private/policy-spf
</pre>

<note>
Si vous rencontrez des problèmes avec le SPF, par exemple lors de l'utilisation
de <c>fetchmail</c>, il vous faudra probablement n'activer le SPF que pour
certains domaines.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Configurer amavisd-new pour utiliser MySQL</title>
<section>
<title>Configurer MySQL</title>
<body>

<note>
Cette configuration n'a pas été testée avec des versions supérieures à la 2.2.
Un retour d'expérience est le bienvenu :)
</note>

<p>
Pour des domaines importants, les valeurs par défaut que vous définissez dans
<path>amavisd.conf</path> peuvent ne pas convenir à tous les utilisateurs. Si
vous configurez amavisd-new avec le support de MySQL, vous pourrez avoir des
configurations personnalisées pour les utilisateurs ou pour des groupes
d'utilisateurs.
</p>

<pre caption="Création de la base de données MySQL et attribution des droits">
# <i>mysql -u root -p mysql</i>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 78 to server version: 4.0.18-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
mysql> <i>create database maildb;</i>
mysql> <i>GRANT ALL PRIVILEGES ON maildb.* TO 'mail'@'localhost' IDENTIFIED BY 'mot_de_passe_archi_secret';</i>
mysql> <i>use maildb;</i>
</pre>

<p>
Maintenant que la base de données a été créée, nous devons y ajouter les tables
nécessaires. Vous pouvez copier/coller les lignes suivantes dans l'invite de
commandes de mysql&nbsp;:
</p>

<pre caption="tables MySQL">
CREATE TABLE users (
    id         int unsigned NOT NULL auto_increment,
    priority   int          NOT NULL DEFAULT '7',  -- 0 est une priorité faible
    policy_id  int unsigned NOT NULL DEFAULT '1',
    email      varchar(255) NOT NULL,
    fullname   varchar(255) DEFAULT NULL,    -- non utilisé par amavisd-new
    local      char(1),     -- Y/N  (champ optionnel, voir la note plus bas)
    PRIMARY KEY (id),
    KEY email (email)
    );
CREATE UNIQUE INDEX users_idx_email ON users(email);

<comment>-- (Toute adresse courrier, externe ou locale, utilisée comme expéditeur dans wblist)</comment>
CREATE TABLE mailaddr (
   id         int unsigned NOT NULL auto_increment,
   priority   int          NOT NULL DEFAULT '7',  -- 0 est une priorité faible
   email      varchar(255) NOT NULL,
   PRIMARY KEY (id),
   KEY email (email)
   );
CREATE UNIQUE INDEX mailaddr_idx_email ON mailaddr(email);

<comment>-- (listes blanches et/ou noires par destinataires,</comment>
<comment>-- mettre les expéditeurs et destinataires à la bonne place)</comment>
(expéditeurs sur listes blanches ou noires)
CREATE TABLE wblist (
   rid        int unsigned NOT NULL,     -- destinataire : users.id
   sid        int unsigned NOT NULL,     -- expéditeur :    mailaddr.id
   wb         char(1) NOT NULL, -- W/Y (blanche), B/N (noir), espace=neutre
   PRIMARY KEY (rid,sid)
   );

CREATE TABLE policy (
   id               int unsigned NOT NULL auto_increment,
   policy_name      varchar(32),     -- non utilisé par amavisd-new
   virus_lover          char(1),     -- Y/N (Oui/Non)
   spam_lover           char(1),     -- Y/N  (champ optionnel)
   banned_files_lover   char(1),     -- Y/N  (champ optionnel)
   bad_header_lover     char(1),     -- Y/N  (champ optionnel)
   bypass_virus_checks  char(1),     -- Y/N
   bypass_spam_checks   char(1),     -- Y/N
   bypass_banned_checks char(1),     -- Y/N  (champ optionnel)
   bypass_header_checks char(1),     -- Y/N (champ optionnel)
   spam_modifies_subj   char(1),     -- Y/N (champ optionnel)
   spam_quarantine_to   varchar(64) DEFAULT NULL, -- (champ optionnel)
   spam_tag_level  float,  -- un score supérieur ajoute les en-têtes de spam
   spam_tag2_level float DEFAULT NULL,  -- un score supérieur ajoute les champs
               -- d'en-tête d'information 'déclaré comme spam'
   spam_kill_level float,  -- un score supérieur active des actions d'évasion
               -- comme rejet/oubli, quarantaine, ...
               -- (lié à la configuration de final_spam_destiny)
   PRIMARY KEY (id)
  );
</pre>

<note>
Si vous rencontrez des problèmes avec la copie de ces lignes, copiez-les
ailleurs puis supprimez les caractères inutiles.
</note>

<note>
Les vérifications pour essayer d'identifier une adresse de courrier sont
effectuées avec les adresses pures (rfc2821-unquoted and unbracketed) comme
clef, c'est-à-dire&nbsp;: <c>Jean «&nbsp;Pouet&nbsp;» Paul@exemple.com</c>.
</note>

<note>
Les vérifications sont effectuées dans l'ordre suivant&nbsp;: <c>SQL</c>,
<c>LDAP</c>, <c>hash</c>, <c>ACL</c>, <c>expressions rationnelles</c> et
<c>constantes</c>. Le premier à retourner une réponse définitive (autre que
<c>undef/NULL</c>) arrête le processus de recherche.
</note>

<p>
Si vous souhaitez utiliser les listes blanches et noires, vous devez ajouter
l'expéditeur et le destinataire dans <c>mailadr</c>. Après quoi, vous créerez
une relation entre les deux adresses dans la table <c>wblist</c> et indiquerez
s'il s'agit de liste blanche (<c>W</c>) ou de liste noire (<c>B</c>).
</p>

<p>
Maintenant que nous avons créé les tables, nous allons ajouter un utilisateur
de test et une politique de test&nbsp;:
</p>

<pre caption="Création d'un utilisateur et une politique de test">
INSERT INTO users
   SET
      id         =1,
      priority   =9,
      policy_id  =1,
      email      ="johndoe@exemple.com",
      fullname   ="John Doe",
      local      ="Y";

INSERT INTO policy
   SET
      id                     =1,
      policy_name            ="Politique de test 1",
      virus_lover            ="N",
      spam_lover             ="N",
      banned_files_lover     ="N",
      bad_header_lover       ="N",
      bypass_virus_checks    ="N",
      bypass_spam_checks     ="N",
      bypass_banned_checks   ="N",
      bypass_header_checks   ="N",
      spam_modifies_subj     ="N",
      spam_quarantine_to     =NULL,
      spam_tag_level         =-50.0,
      spam_tag2_level        =7.0,
      spam_kill_level        =10.0;
</pre>

<note>
Copiez ces lignes ailleurs et ajustez-les pour vous conformer à votre propre
environnement avant de les ajouter à votre base.
</note>

<note>
<c>local</c> devrait être initialisé à <c>Y</c> sinon le courrier ne sera pas
vérifié pour le spam.
</note>

<p>
Ces lignes ajoutent un utilisateur de test et une politique de test. Ajustez
ces exemples pour qu'ils s'adaptent à vos besoins. Vous pouvez trouver plus
d'information sur la configuration dans le fichier <path>amavisd.conf</path>.
</p>

</body>
</section>
<section>
<title>Configurer amavisd pour utiliser MySQL</title>
<body>

<p>
Maintenant que MySQL est prêt, nous allons demander à amavis de l'utiliser.
</p>

<pre caption="Modification de amavisd.conf">
@lookup_sql_dsn =
   ( ['DBI:mysql:maildb:host1', 'mail', 'mot_de_passe_secret']  );

<comment>(Pour plus de clarté, enlevez les commentaires par défaut.)</comment>
$sql_select_policy = 'SELECT *,users.id FROM users,policy'.
   ' WHERE (users.policy_id=policy.id) AND (users.email IN (%k))'.
   ' ORDER BY users.priority DESC';

<comment>(Si vous souhaitez des listes blanches/noires pour les expéditeurs :)</comment>
   $sql_select_white_black_list = 'SELECT wb FROM wblist,mailaddr'.
     ' WHERE (wblist.rid=?) AND (wblist.sid=mailaddr.id)'.
     '   AND (mailaddr.email IN (%k))'.
     ' ORDER BY mailaddr.priority DESC';
</pre>
</body>

</section>
</chapter>

<chapter>
<title>Configurer Spamassassin pour utiliser MySQL</title>
<section>
<body>

<p>
Depuis la version 3.0, Spamassassin permet de sauvegarder les données
bayésiennes et AWL dans une base de données MySQL. Nous allons présenter comment
configurer ça simplement.
</p>

<p>
Tout d'abord, créez le nouvel utilisateur MySQL, puis créez les tables
nécessaires.
</p>

<pre caption="Création d'un utilisateur et d'une base de données MySQL">
# <i>mysql -u root -p mysql</i>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 78 to server version: 4.0.18-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
mysql> <i>create database nombdd;</i>
mysql> <i>GRANT ALL PRIVILEGES ON nombdd.* TO 'dbuser'@'localhost' IDENTIFIED BY 'un_nouveau_mot_de_passe_super_secret';</i>
mysql> <i>use nombdd;</i>
</pre>

<p>
Maintenant que la base a été créée, nous allons créer les tables nécessaires.
Vous pouvez copier/coller les lignes suivantes dans votre invite de commande
mysql&nbsp;:
</p>

<pre caption="Structure des tables MySQL">
CREATE TABLE bayes_expire (
    id                    int(11)         NOT NULL default '0',
    runtime               int(11)         NOT NULL default '0',
    KEY bayes_expire_idx1 (id)
    ) TYPE=MyISAM;

CREATE TABLE bayes_global_vars (
    variable              varchar(30)     NOT NULL default '',
    value                 varchar(200)    NOT NULL default '',
    PRIMARY KEY           (variable)
    ) TYPE=MyISAM;

INSERT INTO bayes_global_vars VALUES ('VERSION','3');

CREATE TABLE bayes_seen (
    id                    int(11)         NOT NULL default '0',
    msgid                 varchar(200) binary NOT NULL default '',
    flag                  char(1)         NOT NULL default '',
    PRIMARY KEY           (id,msgid)
    ) TYPE=MyISAM;

CREATE TABLE bayes_token (
    id                    int(11)         NOT NULL default '0',
    token                 char(5)         NOT NULL default '',
    spam_count            int(11)         NOT NULL default '0',
    ham_count             int(11)         NOT NULL default '0',
    atime                 int(11)         NOT NULL default '0',
    PRIMARY KEY           (id, token)
    ) TYPE=MyISAM;

CREATE TABLE bayes_vars (
    id                    int(11)         NOT NULL AUTO_INCREMENT,
    username              varchar(200)    NOT NULL default '',
    spam_count            int(11)         NOT NULL default '0',
    ham_count             int(11)         NOT NULL default '0',
    token_count           int(11)         NOT NULL default '0',
    last_expire           int(11)         NOT NULL default '0',
    last_atime_delta      int(11)         NOT NULL default '0',
    last_expire_reduce    int(11)         NOT NULL default '0',
    oldest_token_age      int(11)         NOT NULL default '2147483647',
    newest_token_age      int(11)         NOT NULL default '0',
    PRIMARY KEY           (id),
    UNIQUE bayes_vars_idx1 (username)
    ) TYPE=MyISAM;

CREATE TABLE awl (
    username              varchar(100)    NOT NULL default '',
    email                 varchar(200)    NOT NULL default '',
    ip                    varchar(10)     NOT NULL default '',
    count                 int(11)         default '0',
    totscore              float           default '0',
    PRIMARY KEY           (username,email,ip)
    ) TYPE=MyISAM;
</pre>

<impo>
La ligne <c>INSERT</c> est nécessaire. Sans elle, Spamassassin ne fonctionnera
pas.
</impo>

<note>
Vous trouverez également ces lignes dans l'archive source, dans les fichiers
<path>awl_mysql.sql</path> et <path>bayes_mysql.sql</path>.
</note>

</body>
</section>
<section>
<title>Configurer Spamassassin pour utiliser l'interface MySQL</title>
<body>

<p>
Si vous avez une ancienne base de données bayésienne dans la base de données
DBM et que vous souhaitez la garder, suivez les instructions suivantes&nbsp;:
</p>

<pre caption="Convertir une base bayésienne depuis une base de données DBM">
# <i>su - amavis</i>
$ <i>sa-learn --sync</i>
$ <i>sa-learn --backup > sauvegarde.txt</i>
$ <i>sa-learn --restore sauvegarde.txt</i>
</pre>

<note>
Notez que la dernière étape ne doit être effectuée qu'une fois que la base
de données MySQL et <path>local.cf</path> ont été mis à jour.
</note>

<p>
Donnons maintenant à Spamassassin les informations nécessaires&nbsp;:
</p>

<pre caption="Modification de /etc/mail/spamassassin/local.cf">
<comment>(Indiquez à Spamassissin d'utiliser MySQL pour la base bayésienne.)</comment>
bayes_store_module              Mail::SpamAssassin::BayesStore::SQL
bayes_sql_dsn                   DBI:mysql:sa_bayes:localhost:3306
bayes_sql_username              nombdd
bayes_sql_password              un_nouveau_mot_de_passe_super_secret

<comment>(Indiquez à Spamassissin d'utiliser MySQL pour la base AWL.)</comment>
auto_whitelist_factory          Mail::SpamAssassin::SQLBasedAddrList
user_awl_dsn                    DBI:mysql:sa_bayes:localhost:3306
user_awl_sql_username           nombdd
user_awl_sql_password           un_nouveau_mot_de_passe_super_secret
</pre>

<note>
Pour créer un mot de passe correct, utilisez <c>emerge app-admin/makepasswd</c>
puis <c>makepasswd -chars=8</c>.
</note>

<p>
Tout ce qu'il reste à faire désormais est de lancer<c>/etc/init.d/amavisd
restart</c>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Problèmes rencontrés</title>
<section>
<title>Amavisd-new</title>
<body>

<p>
Pour déboguer amavisd-new, commencez par l'arrêter avec <c>/etc/init.d/amavisd
stop</c>, puis lancez le manuellement avec <c>amavisd debug</c>, puis cherchez
les anomalies dans les retours du programme.
</p>

</body>
</section>
<section>
<title>Spamassassin</title>
<body>

<p>
Pour déboguer Spamassassin, vous pouvez filtrer un courrier directement avec
<c>spamassassin -D &lt; courrier</c>. Pour vous assurer que ses en-têtes restent
intacts, vous pouvez le déplacer depuis une autre machine avec IMAP.
</p>

<note>
Si vous devez faire du débogage, vous devez permettre que l'utilisateur
<c>amavis</c> puisse se connecter en changeant le shell de connexion dans
<path>/etc/passwd</path> pour mettre <path>/bin/bash</path>.
</note>

<p>
Si vous le souhaitez, vous pouvez obtenir les mêmes informations, et même plus,
en utilisant la commande <c>amavisd debug-sa</c>.
</p>

</body>
</section>
<section>
<title>Obtenir de l'aide</title>
<body>

<p>
Si vous avez besoin d'aide, vous pouvez utiliser la liste de diffusion
amavis-user. Avant d'y envoyer une question, essayez de chercher une solution
dans les <uri link="http://marc.theaimsgroup.com/?l=amavis-user">archives
de la liste de diffusion amavis-user</uri>. Si vous ne trouvez pas de réponse
à votre question, vous pouvez vous inscrire à la
<uri link="https://lists.sourceforge.net/lists/listinfo/amavis-user">liste de
diffusion amavis-user</uri>.
</p>

<p>
Si votre question est spécifique à SpamAssassin, DCC, Razor ou
Postfix, référez-vous à leurs pages web respectives, indiquées plus bas.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Ressources</title>
<section>
<title>Pour plus d'informations</title>
<body>

<ul>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/INSTALL">Installation
    d'Amavisd-new</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/README.postfix">Lisez-moi
    d'Amavisd-new pour Postfix</uri>&nbsp;;
  </li>
  <li>
    <uri
    link="http://spamassassin.apache.org/full/3.0.x/dist/sql/README">Lisez-moi
    de Spamassassin pour le support SQL</uri>&nbsp;;
  </li>
  <li><uri link="http://www.greylisting.org">Listes grises</uri>&nbsp;;</li>
  <li>
    <uri link="http://www.postfix.org/FILTER_README.html">Postfix
    SMTPD_POLICY_README</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://www.unixwiz.net/techtips/postfix-HELO.html">Bloquer les
    spammeurs avec les contrôles HELO de Postfix</uri>&nbsp;;
  </li>
  <li>
    <uri
    link="http://www.linuxjournal.com/article.php?sid=7327">Aperçu du
    SPF</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://jimsun.linxnet.com/misc/postfix-anti-UCE.txt">Truc de Jim
    Seymour pour l'Anti-UCE avec Postfix</uri>.
  </li>
</ul>

</body>
</section>
<section>
<title>Ressources générales</title>
<body>

<ul>
  <li><uri link="http://www.spamassassin.org">Spamassassin</uri>&nbsp;;</li>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/">Amavisd-new</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://www.ijs.si/software/amavisd/amavisd-new-docs.html"
    >Documentation de Amavisd-new</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://razor.sourceforge.net/">Razor, de Vipul</uri>&nbsp;;
  </li>
  <li><uri link="http://pyzor.sourceforge.net/">Pyzor</uri>&nbsp;;</li>
  <li>
    <uri link="http://www.rhyolite.com/anti-spam/dcc/">Distributed Checksum
    Clearinghouse</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://www.renaissoft.com/projects/maia/">Surveillance du
    courrier avec Maia</uri>.
  </li>
</ul>
</body>
</section>
<section>
<title>Autres guides</title>
<body>

<ul>
  <li>
    <uri link="http://www.flakshack.com/anti-spam/">Passerelle relativement
    sûre pour l'Anti-SPAM en utilisant OpenBSD, Postfix, Amavisd-new,
    SpamAssassin, Razor et DCC</uri>.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
