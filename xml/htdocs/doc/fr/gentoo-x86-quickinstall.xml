<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: gentoo-x86-quickinstall.xml,v 1.37 2006/10/09 09:59:26 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/fr/gentoo-x86-quickinstall.xml" lang="fr">

<title>Guide d'installation rapide de Gentoo Linux x86</title>

<author title="Auteur">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Auteur">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Auteur">
  Steven Wagner
</author>
<author title="Traducteur">
  <mail link="ribosome@gentoo.org">Olivier Fisette</mail>
</author>
<author title="Traducteur">
  <mail link="pongten@gmail.com">Rémy Mainil</mail>
</author>

<abstract>
Le guide d'installation rapide présente le processus d'installation de Gentoo
Linux de façon concise. Son objectif est de permettre aux utilisateurs
d'effectuer une installation stage3 en un rien de temps. Une expérience
préalable avec l'installation de Gentoo est vivement recommandée pour suivre ce
guide.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>9</version>
<date>2006-10-08</date>

<chapter>
<title>Introduction</title>
<section>
<body>

<p>
Ce guide contient toutes les commandes nécessaires à une installation d'un
stage3 de Gentoo. Vous avez besoin d'une connexion à Internet pour télécharger
le stage3 et l'instantané de Portage.
</p>

<p>
Les commandes nécessitant plus de quelques secondes pour être réalisées sont
suivies du temps nécessaire à leur exécution. Ces commandes ont été
chronométrées sur un AMD 2000 1.66Ghz avec 512 Mo de RAM et deux disques SATA
connectés à un contrôleur matériel.
</p>

<pre caption="Caractéristiques de la machine de test">
<comment>(Les caractéristiques suivantes et les informations de chronométrage
devraient vous aider à estimer le temps nécessaire pour terminer votre
installation)</comment>

# <i>grep bogo /proc/cpuinfo</i>
 bogomips       : 3337.81

# <i>hdparm -tT /dev/sda</i>
 /dev/sda:
  Timing cached reads:   1100 MB in  2.00 seconds = 549.97 MB/sec
  Timing buffered disk reads:  224 MB in  3.01 seconds =  74.36 MB/sec

# <i>grep MemTotal /proc/meminfo</i>
 MemTotal:       509248 kB
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Guide d'installation rapide</title>
<section>
<title>Média pour l'installation</title>
<body>

<p>
Téléchargez un CD à partir de l'un de nos <uri
link="/main/en/mirrors.xml">miroirs</uri>. Vous trouverez l'image ISO du CD
d'installation <e>minimal</e> dans
<path>releases/x86/&lt;release&gt;/installcd</path> ou l'image ISO du
<e>LiveCD</e> dans <path>releases/x86/&lt;release&gt;/livecd</path>. Le CD
d'installation <e>minimal</e> ne sert que pour l'installation par le biais
d'Internet. Vous pouvez utiliser le <e>LiveCD</e> pour effectuer une
installation sans réseau, comme cela est décrit dans <uri
link="/doc/en/handbook/2006.1/handbook-x86.xml">Le manuel Gentoo Linux/x86
2006.1</uri>. Le CD d'installation <e>minimal</e> est recommandé.
</p>

<p>
<uri link="/doc/fr/faq.xml#isoburning">Gravez</uri> puis amorcez le CD.
</p>

</body>
</section>

<section>
<title>Amorçage du CD</title>
<body>

<p>
Appuyez sur <c>F2</c>lorsque s'affiche l'écran de démarrage afin de voir
quelles sont les options de démarrage disponibles. Vous pouvez soit démarrer
<c>gentoo</c> soit <c>gentoo-nofb</c>, ce dernier désactive le framebuffer. Si
vous avez démarré depuis le <e>LiveCD</e> n'oubliez pas d'ajouter l'option
<c>nox</c> pour empêcher l'environnement graphique X de démarrer. De nombreuses
options activent ou désactivent différentes fonctionnalités. Si tout se passe
bien, votre matériel sera détecté et tous les modules seront chargés.  Si le
noyau ne parvient pas à démarrer proprement ou si votre ordinateur plante
durant la procédure de démarrage, vous devrez peut-être tester différentes
configurations. La façon la plus sûre de procéder est probablement d'utiliser
l'option <c>nodetect</c> et ensuite de charger manuellement les modules
requis.
</p>

<pre caption="Démarrer avec le CD d'installation minimal">
Gentoo Linux Installation LiveCD                     http://www.gentoo.org
Enter to Boot; F1 for kernels  F2 for options.
boot: <i>gentoo-nofb</i>
<comment>(ou en cas de problème)</comment>
boot: <i>gentoo-nofb nodetect</i>
</pre>

</body>
</section>
<section>
<title>Facultatif&nbsp;: chargement de modules</title>
<body>

<p>
Si vous utilisez l'option <c>nodetect</c>, une fois démarré, chargez les
modules nécessaires. Vous devez activer une connexion réseau et avoir accès à
vos disques. La commande <c>lspci</c> peut vous aider à identifier votre
matériel.
</p>

<pre caption="Charger les modules nécessaires">
livecd root # <i>lspci</i>
<comment>(Utilisez la sortie de la commande lspci pour identifier les modules nécessaires)</comment>

<comment>(Ceci est un exemple, adaptez-le à votre matériel)</comment>
livecd root # <i>modprobe 3w-9xxx</i>
livecd root # <i>modprobe r8169</i>
</pre>

</body>
</section>
<section>
<title>Configuration du réseau</title>
<body>

<p>
Si votre réseau ne fonctionne pas déjà, vous pouvez utiliser <c>net-setup</c>
pour le configurer. Vous devrez peut-être utiliser <c>modprobe</c> pour charger
le support pour votre carte réseau avant de procéder à la configuration. Si
vous avez une connexion ADSL, utilisez <c>pppoe-setup</c> et
<c>pppoe-start</c>. Pour le support PPTP, éditez d'abord
<path>/etc/ppp/chap-secrets</path> et <path>/etc/ppp/options.pptp</path>, puis
exécutez <c>pptp &lt;server&nbsp;ip&gt;</c>.
</p>

<p>
Pour l'accès par réseau sans fil, utilisez <c>iwconfig</c> pour régler les
paramètres du sans fil, puis lancez <c>net-setup</c> à nouveau ou alors
exécutez manuellement <c>ifconfig</c>, <c>dhcpcd</c> et/ou <c>route</c>.
</p>

<p>
Si vous êtes situé derrière un serveur mandataire («&nbsp;proxy&nbsp;»),
n'oubliez pas de préparer votre système avec <c>export http_proxy</c>,
<c>ftp_proxy</c> et <c>RSYNC_PROXY</c>.
</p>

<pre caption="Guide pour configurer le réseau">
livecd root # <i>net-setup eth0</i>
</pre>

<p>
Alternativement, vous pouvez démarrer la connexion réseau manuellement.
L'exemple suivant attribue l'adresse IP 192.168.1.10 à votre PC et définit
192.168.1.1 comme votre routeur et serveur de noms.
</p>

<pre caption="Configurer manuellement une connexion réseau">
livecd root # <i>ifconfig eth0 192.168.1.10/24</i>
livecd root # <i>route add default gw 192.168.1.1</i>
livecd root # <i>echo nameserver 192.168.1.1 &gt; /etc/resolv.conf</i>
</pre>

<p>
Le CD d'installation vour permet de démarrer un serveur <c>sshd</c>, d'ajouter
des utilisateurs supplémentaires, d'exécuter <c>irssi</c> (un logiciel de chat
en ligne de commande) ainsi que de naviguer sur le web avec <c>lynx</c> ou
<c>links</c>.
</p>

</body>
</section>
<section>
<title>Facultatif&nbsp;: vous connecter à votre nouveau PC avec ssh</title>
<body>

<p>
Le dispositif le plus intéressant est évidemment <c>sshd</c>. Vous pouvez le
démarrer et vous y connecter depuis une autre machine et ainsi faire un
copier-coller des commandes depuis ce guide.
</p>

<pre caption="Démarrer sshd">
livecd root # <i>time /etc/init.d/sshd start</i>
 * Generating hostkey ...
<comment>(sshd génère une clé et affiche différentes informations)</comment>
 * starting sshd ...                            [ok]

 real   0m13.688s
 user   0m9.420s
 sys    0m0.090s
</pre>

<p>
Maintenant, initialisez le mot de passe root sur le liveCD de façon à pouvoir
vous y connecter depuis un autre PC. Notez qu'autoriser root à se connecter via
ssh n'est pas recommandé en temps normal. Si vous avez confiance en votre
réseau local, utilisez un mot de passe long et complexe, vous ne devriez
l'utiliser qu'une seule fois, car il disparaîtra après votre premier
redémarrage.
</p>

<pre caption="Initialiser le mot de passe root">
livecd root # <i>passwd</i>
New UNIX password: <comment>saisissez un mot de passe</comment>
Retype new UNIX password: <comment>saississez à nouveau le mot de passe</comment>
passwd: password updated successfully
</pre>

<p>
Maintenant, vous pouvez démarrer un terminal depuis un autre PC et vous
connecter à votre nouveau PC et ainsi suivre le reste de ce guide dans une
autre fenêtre et faire des copier/coller des commandes.
</p>

<pre caption="Vous connecter à votre nouveau PC depuis un autre PC">
<comment>(Utilisez l'adresse IP de votre nouveau PC)</comment>
$ <i>ssh root@192.168.1.10</i>
The authenticity of host '192.168.1.10 (192.168.1.10)' can't be established.
RSA key fingerprint is 96:e7:2d:12:ac:9c:b0:94:90:9f:40:89:b0:45:26:8f.
Are you sure you want to continue connecting (yes/no)? <i>yes</i>
Warning: Permanently added '192.168.1.10' (RSA) to the list of known hosts.
Password: <comment>Saississez le mot de passe</comment>
</pre>

</body>
</section>
<section>
<title>Préparer les disques</title>
<body>

<p>
Utilisez <c>fdisk</c> ou <c>cfdisk</c> pour appliquer votre plan de
partitionnement. Vous aurez besoin d'au moins une partition de mémoire
virtuelle (type 82) et une partition Linux (type 83). Le scénario suivant crée
une partition pour <path>/boot</path>, une pour la mémoire virtuelle et une
pour la partition principale comme dans ce guide. Le nom du périphérique a de
fortes chances d'être <path>/dev/sda</path> pour un disque SATA ou SCSI, ou
<path>/dev/hda</path> pour un disque IDE.
</p>

<pre caption="Créer les partitions">
livecd ~ # <i>fdisk /dev/sda</i>

<comment>(La suite de ce guide utilise le schéma de partitions suivant)</comment>
livecd ~ # <i>fdisk -l /dev/sda</i>

Disk /dev/sda: 599.9 GB, 599978409984 bytes
255 heads, 63 sectors/track, 72943 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

Device    Boot      Start         End      Blocks   Id  System
/dev/sda1               1          12       96358+  83  Linux
/dev/sda2              13         110      787185   82  Linux swap / Solaris
/dev/sda3             111       72943   585031072+  83  Linux
</pre>

<p>
Utilisez <c>mke2fs</c>, <c>mke2fs -j</c>, <c>mkreiserfs</c>, <c>mkfs.xfs</c> et
<c>mkfs.jfs</c> pour créer les systèmes de fichiers sur vos partitions Linux.
Initialisez votre partition de mémoire virtuelle avec <c>mkswap</c> et
<c>swapon</c>.
</p>

<pre caption="Créer le système de fichiers et activer la mémoire virtuelle">
<comment>(Le système de fichiers ext2 est suffisant pour la partition /boot)</comment>
livecd ~ # <i>mke2fs /dev/sda1</i>

<comment>(Utilisons le système de fichiers ext3 sur la partition principale)</comment>
livecd ~ # <i>mke2fs -j /dev/sda3</i>

<comment>(Créer et activer la mémoire virtuelle)</comment>
livecd ~ # <i>mkswap /dev/sda2 &amp;&amp; swapon /dev/sda2</i>
</pre>

<p>
Montez les systèmes de fichiers fraîchement créés sur <path>/mnt/gentoo</path>.
Créez les répertoires pour les divers points de montage (par exemple
<path>/mnt/gentoo/boot</path>) et montez-les.
</p>

<pre caption="Monter le système de fichiers">
livecd ~ # <i>mount /dev/sda3 /mnt/gentoo</i>
livecd ~ # <i>mkdir /mnt/gentoo/boot</i>
livecd ~ # <i>mount /dev/sda1 /mnt/gentoo/boot</i>
</pre>

</body>
</section>
<section>
<title>Préparer le stage</title>
<body>

<p>
D'abord, assurez-vous que la date de votre système est correcte en utilisant
<c>date MMJJhhmmAAAA</c>. Utilisez le temps UTC.
</p>

<pre caption="Préciser la date et l'heure UTC">
<comment>(Vérifiez l'horloge)</comment>
livecd ~ # <i>date</i>
Mon Mar  6 00:14:13 UTC 2006

<comment>(Préciser la date et l'heure actuelle, si nécessaire)</comment>
livecd ~ # <i>date 030600162006</i> <comment>(Format : MMJJhhmmAAAA)</comment>
Mon Mar  6 00:16:00 UTC 2006
</pre>

<p>
Ensuite, téléchargez une archive «&nbsp;stage&nbsp;» à partir d'un de nos <uri
link="/main/en/mirrors.xml">miroirs</uri>. Allez dans <path>/mnt/gentoo</path>
et désarchivez le stage avec la commande
<c>tar&nbsp;-xvjpf&nbsp;&lt;archive&nbsp;tar&gt;</c>.
</p>

<pre caption="Télécharger une archive «&nbsp;stage3&nbsp;»">
livecd ~ # <i>cd /mnt/gentoo</i>
livecd gentoo # <i>links http://www.gentoo.org/main/en/mirrors.xml</i>
<comment>(Choisissez un miroir, allez dans le répertoire releases/x86/current/stages,
sélectionnez le stage3 de votre choix, probablement stage3-i686-2006.1.tar.bz2
et appuyez sur D pour le télécharger)</comment>

<comment>(<b>Ou</b> télécharger le directement avec wget sans choisir un miroir proche)</comment>
livecd ~ # <i>cd /mnt/gentoo</i>
livecd gentoo # <i>wget http://gentoo.osuosl.org/releases/x86/current/stages/stage3-i686-2006.1.tar.bz2</i>
</pre>

<pre caption="Désarchiver l'archive «&nbsp;stage3&nbsp;»">
livecd gentoo # <i>time tar xjpf stage3*</i>

real  1m13.157s
user  1m2.920s
sys   0m7.230s
</pre>

<p>
Installez le dernier instantané de Portage. Pour ce faire, procédez comme pour
l'archive «&nbsp;stage3&nbsp;»&nbsp;: choississez un miroir proche depuis notre
<uri link="/main/en/mirrors.xml">liste</uri>, téléchargez l'instantané le plus
récent et désarchivez-le.
</p>

<pre caption="Télécharger l'instantané Portage le plus récent">
livecd gentoo # <i>cd /mnt/gentoo/usr</i>
livecd usr # <i>links http://www.gentoo.org/main/en/mirrors.xml</i>
<comment>(Choisissez un miroir, allez dans le répertoire snapshots/,
sélectionnez <b>portage-latest.tar.bz2</b> et appuyez sur D pour le
télécharger)</comment>

<comment>(<b>Ou</b> téléchargez le directement avec wget sans choisir un miroir proche)</comment>
livecd gentoo # <i>cd /mnt/gentoo/usr</i>
livecd usr # <i>wget http://gentoo.osuosl.org/snapshots/portage-latest.tar.bz2</i>
</pre>

<pre caption="Désarchiver l'instantané Portage">
livecd usr # <i>time tar xjf portage*</i>

real  0m51.523s
user  0m28.680s
sys   0m12.840s
</pre>

</body>
</section>
<section>
<title>Entrer dans le chroot</title>
<body>

<p>
Montez le système de fichiers <path>/proc</path>, copiez et remplacez le
fichier <path>/etc/resolv.conf</path>, puis utilisez <c>chroot</c> pour entrer
dans votre environnement Gentoo.
</p>

<pre caption="Exécution de chroot">
livecd usr # <i>cd /</i>
livecd / # <i>mount -t proc none /mnt/gentoo/proc</i>
livecd / # <i>cp -L /etc/resolv.conf /mnt/gentoo/etc/</i>
livecd / # <i>chroot /mnt/gentoo /bin/bash</i>
livecd / # <i>env-update</i> &amp;&amp; <i>source /etc/profile</i>
>>> Regenerating /etc/ld.so.cache...
</pre>

</body>
</section>
<section>
<title>Configuration de votre fuseau horaire</title>
<body>

<p>
Choisissez votre fuseau horaire en copiant le fichier approprié de
<path>/usr/share/zoneinfo</path> vers <path>/etc/localtime</path>.
</p>

<pre caption="Copier le fichier pour votre fuseau horaire">
<comment>(Utilisation de Brussels comme exemple)</comment>
livecd / # <i>cp /usr/share/zoneinfo/Europe/Brussels /etc/localtime</i>
livecd / # <i>date</i>
Wed Mar  8 00:46:05 CET 2006
</pre>

</body>
</section>
<section>
<title>Configurer votre nom d'hôte et votre nom de domaine</title>
<body>

<p>
Configurer votre nom de domaine dans <path>/etc/conf.d/hostname</path> et dans
<path>/etc/hosts</path>. Dans l'exemple suivant, nous utilisons <c>mybox</c>
comme nom d'hôte et <c>at.myplace</c> comme nom de domaine. Vous pouvez soit
éditer les fichiers de configuration avec <c>nano</c> ou utiliser les
commandes suivantes&nbsp;:
</p>

<pre caption="Configuration du nom d'hôte et du nom de domaine">
livecd / # <i>cd /etc</i>
livecd etc # <i>echo "127.0.0.1 mybox.at.myplace mybox localhost" > hosts</i>
livecd etc # <i>sed -i -e 's/HOSTNAME.*/HOSTNAME="mybox"/' conf.d/hostname</i>
<comment>(Utilisez le nom d'hôte défini précédemment et testez)</comment>
livecd etc # <i>hostname mybox</i>
livecd etc # <i>hostname -f</i>
mybox.at.myplace
</pre>

</body>
</section>
<section>
<title>Configuration du noyau</title>
<body>

<p>
Installez les sources d'un noyau de votre choix (habituellement
<c>gentoo-sources</c> ou <c>vanilla-sources</c>), configurez-le, compilez-le
puis copiez le fichier <path>arch/i386/boot/bzImage</path> dans
<path>/boot</path>.
</p>

<pre caption="Installer les sources d'un noyau, le compiler et l'installer">
livecd etc # <i>time emerge gentoo-sources</i>

real  2m51.435s
user  0m58.220s
sys   0m29.890s
livecd etc # <i>cd /usr/src/linux</i>
<comment>(Configurez votre noyau)</comment>
livecd linux # <i>make menuconfig</i>
<comment>(Compilez votre noyau)</comment>
livecd linux # <i>time make -j2</i>

<comment>(Le temps nécessaire varie fortement en fonction des options choisies)</comment>
real  3m51.962s
user  3m27.060s
sys   0m24.310s

livecd linux # <i>make modules_install</i>
livecd linux # <i>cp arch/i386/boot/bzImage /boot/kernel</i>
</pre>

</body>
</section>

<section>
<title>Configurer le système</title>
<body>

<p>
Éditez le fichier <path>/etc/fstab</path> et remplacez <c>/BOOT</c>,
<c>/ROOT</c> et <c>/SWAP</c> avec les noms effectivement donnés à vos
partitions. N'oubliez pas de vérifier que les systèmes de fichiers
correspondent à ceux mis en place.
</p>

<pre caption="Exemple de fichier fstab">
livecd linux # <i>cd /etc</i>
livecd etc # <i>nano -w fstab</i>
/dev/<i>sda1</i>   /boot     ext2    noauto,noatime     1 2
/dev/<i>sda3</i>   /         ext3    noatime            0 1
/dev/<i>sda2</i>   none      swap    sw                 0 0
</pre>

<p>
Configurez votre connexion réseau dans <path>/etc/conf.d/net</path>. Ajoutez le
script d'initialisation <c>net.eth0</c> au niveau d'exécution par défaut. Si
vous avez de multiples adaptateurs réseaux, faites-en des liens symboliques
vers le script <c>net.eth0</c> et ajoutez-les également au niveau d'exécution
par défaut. Vous pouvez soit éditer <path>/etc/conf.d/net</path> avec
<c>nano</c> soit utiliser les commandes suivantes&nbsp;:
</p>

<pre caption="Configurer le réseau">
livecd etc # <i>cd conf.d</i>
livecd conf.d # <i>echo 'config_eth0=( "192.168.1.10/24" )' >> net</i>
livecd conf.d # <i>echo 'routes_eth0=( "default via 192.168.1.1" )' >> net</i>
livecd conf.d # <i>rc-update add net.eth0 default</i>
<comment>(Si vous avez compilé le pilote de votre carte réseau comme module,
ajoutez-le dans /etc/modules.autoload.d/kernel-2.6)</comment>
livecd conf.d # <i>echo r8169 >> /etc/modules.autoload.d/kernel-2.6</i>
<comment>(Si vous voulez vous reconnecter par ssh après avoir redémarré votre nouveau PC :)</comment>
livecd conf.d # <i>rc-update add sshd default</i>
</pre>

<note>
Si vous en avez besoin, installez <c>pcmcia-cs</c> (utilisez <c>emerge</c>) et
ajoutez-le au niveau d'exécution par défaut.
</note>

<p>
Définissez le mot de passe <c>root</c> en utilisant <c>passwd</c>.
</p>

<pre caption="Définir le mot de passe root">
livecd conf.d # <i>passwd</i>
New UNIX password: <comment>Tapez le mot de passe</comment>
Retype new UNIX password: <comment>Tapez à nouveau le mot de passe</comment>
passwd: password updated successfully
</pre>

<p>
Vérifiez la configuration du système dans les fichiers
<path>/etc/rc.conf</path>, <path>/etc/conf.d/rc</path>,
<path>/etc/conf.d/keymaps</path> et <path>/etc/conf.d/clock</path> et
modifiez-les si nécessaire.
</p>

<pre caption="Facultatif : editer quelques fichiers de configuration">
livecd conf.d # <i>nano -w /etc/rc.conf</i>
livecd conf.d # <i>nano -w /etc/conf.d/rc</i>
livecd conf.d # <i>nano -w /etc/conf.d/keymaps</i>
livecd conf.d # <i>nano -w /etc/conf.d/clock</i>
</pre>

</body>
</section>
<section>
<title>Installer les outils système</title>
<body>

<p>
Installez un système de journalisation tel que <c>syslog-ng</c> et ajoutez-le
au niveau d'exécution par défaut. Faites la même chose pour un démon cron tel
que <c>vixie-cron</c>.
</p>

<note>
Les démons cron nécessitent un MTA. <c>mail-mta/ssmtp</c> sera installé comme
dépendance. Si vous désirez utiliser un MTA plus évolué, vous pouvez
l'installer maintenant. Si vous êtes pressé, laissez ssmtp être installé et
désinstallez-le plus tard en installant alors le MTA de votre choix.
</note>

<pre caption="Installer un système de journalisation et un démon cron">
livecd conf.d # <i>time emerge syslog-ng vixie-cron</i>

real  1m52.699s
user  1m1.630s
sys   0m35.220s
livecd conf.d # <i>rc-update add syslog-ng default</i>
livecd conf.d # <i>rc-update add vixie-cron default</i>
</pre>

<p>
Installez les outils système nécessaires (<c>xfsprogs</c>, <c>reiserfsprogs</c>
ou <c>jfsutils</c>) et les outils réseaux (<c>dhcpcd</c> ou <c>rp-pppoe</c>) si
vous en avez besoin.
</p>

<pre caption="Installer des outils supplémentaires si nécessaire">
livecd conf.d # <i>emerge xfsprogs</i>           <comment>(Si vous utilisez le
système de fichiers XFS)</comment>
livecd conf.d # <i>emerge jfsutils</i>           <comment>(Si vous utilisez le
système de fichiers JFS)</comment>
livecd conf.d # <i>emerge reiserfsprogs</i>      <comment>(Si vous utilisez le
système de fichiers Reiser)</comment>
livecd conf.d # <i>emerge dhcpcd</i>             <comment>(Si vous avez besoin
d'un client DHCP)</comment>
livecd conf.d # <i>USE="-X" emerge rp-pppoe</i>  <comment>(Si vous utilisez une
connexion ADSL)</comment>
</pre>

</body>
</section>
<section>
<title>Configurer le chargeur de démarrage</title>
<body>

<p>
Fait un emerge de <c>grub</c> ou de <c>lilo</c>. Éditez soit
<path>/boot/grub/grub.conf</path>, soit <path>/etc/lilo.conf</path> et
installez le chargeur de démarrage que vous avez choisi.
</p>

<p>
<b>1. Utiliser grub</b>
</p>

<pre caption="Installer Grub et éditer son fichier de configuration">
livecd conf.d # <i>time emerge grub</i>

real  1m8.634s
user  0m39.460s
sys   0m15.280s
livecd conf.d # <i>nano -w /boot/grub/grub.conf</i>
</pre>

<pre caption="Exemple de fichier grub.conf">
default 0
timeout 10
title=Gentoo
root (hd0,0)
kernel /boot/kernel root=/dev/sda3
</pre>

<pre caption="Installer grub">
livecd conf.d # <i>grub</i>
Probing devices to guess BIOS drives. This may take a long time.

grub> <i>root (hd0,0)</i>
Filesystem type is ext2fs, partition type 0x83

grub> <i>setup (hd0)</i>
 Checking if "/boot/grub/stage1" exists... yes
 Checking if "/boot/grub/stage2" exists... yes
 Checking if "/boot/grub/e2fs_stage1_5" exists... yes
 Running "embed /boot/grub/e2fs_stage1_5 (hd0)"...  16 sectors are embedded.
succeeded
 Running "install /boot/grub/stage1 (hd0) (hd0)1+16 p (hd0,0)/boot/grub/stage2
/boot/
grub/menu.lst"... succeeded
Done.

grub> <i>quit</i>
</pre>

<p>
Maintenant, sautez à la section <uri link="#reboot">redémarrage</uri>.
</p>

<p>
<b>2. Utiliser lilo</b>
</p>

<pre caption="Installer lilo et editer son fichier de configuration">
livecd conf.d # <i>time emerge lilo</i>

real  0m47.016s
user  0m22.770s
sys   0m5.980s
livecd conf.d # <i>nano -w /etc/lilo.conf</i>
</pre>

<pre caption="Exemple de fichier lilo.conf">
boot=/dev/sda
prompt
timeout=50
default=gentoo

image=/boot/kernel
label=Gentoo
read-only
root=/dev/sda3
</pre>

<pre caption="Installer lilo">
livecd conf.d # <i>lilo</i>
Added Gentoo *
</pre>
</body>
</section>
<section id="reboot">
<title>Redémarrage</title>
<body>

<p>
Quittez l'environnement chroot, démontez tous les systèmes de fichiers et
redémarrez.
</p>

<pre caption="Redémarrage">
livecd conf.d # <i>exit</i>
livecd / # <i>umount /mnt/gentoo/proc /mnt/gentoo/boot /mnt/gentoo</i>
livecd / # <i>reboot</i>
<comment>(N'oubliez pas d'éjecter le CD)</comment>
</pre>

</body>
</section>
<section id="after-reboot">
<title>Finaliser votre installation</title>
<body>

<note>
Sur notre machine de test, le temps <b>total</b> écoulé entre l'affichage de
l'invite de commande du CD minimal, et l'affichage de l'invite de connexion
après le redémarrage de la machine a été de <b>00:42:31</b>.  Oui, moins d'une
heure&nbsp;! Notez que ce délai comprend également les temps des
téléchargements de l'archive stage3, de l'instantané Portage et des différents
paquets installés ainsi que le temps passé à configurer le noyau.
</note>

<p>
Connectez-vous en tant qu'utilisateur <c>root</c> et ajoutez un ou plusieurs
utilisateurs pour l'utilisation quotidienne avec la commande <c>useradd</c>.
</p>

<pre caption="Vous connecter à votre nouvelle machine depuis un autre PC">
<comment>(Nettoyez votre fichier known_hosts étant donné que votre nouvelle
machine a généré une nouvelle et définitive hostkey)</comment>
$ <i>nano -w ~/.ssh/known_hosts</i>
<comment>(Trouvez l'adresse IP de votre nouveau PC et effacer la ligne, ensuite
sauvegardez le fichier et quittez nano)</comment>

<comment>(Utilisez l'adresse IP de votre nouvelle machine)</comment>
$ <i>ssh root@192.168.1.10</i>
The authenticity of host '192.168.1.10 (192.168.1.10)' can't be established.
RSA key fingerprint is 96:e7:2d:12:ac:9c:b0:94:90:9f:40:89:b0:45:26:8f.
Are you sure you want to continue connecting (yes/no)? <i>yes</i>
Warning: Permanently added '192.168.1.10' (RSA) to the list of known hosts.
Password: <comment>Saisissez le mot de passe</comment>
</pre>

<pre caption="Ajouter un nouvel utilisateur">
mybox ~ # <i>adduser -g users -G lp,wheel,audio,cdrom,portage,cron -m john</i>
mybox ~ # <i>passwd john</i>
New UNIX password: <comment>Saisissez le mot de passe de John</comment>
Retype new UNIX password: <comment>Saisissez à nouveau le mot de passe de John</comment>
passwd: password updated successfully
</pre>

</body>
</section>
<section>
<title>Touche finale pour la configuration</title>
<body>

<p>
Commencez par sélectionner un miroir proche de chez vous, soit en définissant
les variables <c>RSYNC</c> et <c>GENTOO_MIRRORS</c> dans le fichier
<path>/etc/make.conf</path>, soit en utilisant <c>mirrorselect</c>. Vous pouvez
également spécifier le nombre de compilations parallèles à ce stade.
</p>

<pre caption="Utilisation de mirrorselect et définition de MAKEOPTS">
mybox ~ # <i>emerge mirrorselect</i>
mybox ~ # <i>mirrorselect -i -o >> /etc/make.conf</i>
mybox ~ # <i>mirrorselect -i -r -o >> /etc/make.conf</i>
<comment>(Habituellement, (nombre de processeurs + 1) est une bonne valeur)</comment>
mybox ~ # <i>echo 'MAKEOPTS="-j2"' >> /etc/make.conf</i>
</pre>

<p>
C'est maintenant un moment idéal pour activer ou désactiver certaines options
USE. Exécutez <c>emerge -vpe world</c> pour afficher tous les paquets
actuellement installés ainsi que leurs options USE respectives. Editez le
fichier <path>/etc/make.conf</path>ou utilisez la commande suivante pour
définir la variable USE&nbsp;:
</p>

<pre caption="Connaître les options USE utilisées et en activer ou désactiver certaines">
mybox ~ # <i>emerge -vpe world</i>
<comment>(Portage affiche les paquets et leurs options USE. Par exemple,
désactivons ipv6 et fortran et activons userlocales et unicode)</comment>
mybox ~ # <i>echo 'USE="nptl nptlonly -ipv6 -fortran userlocales unicode"' >> /etc/make.conf</i>
</pre>

<p>
Si vous avez activé le USE flag <c>userlocales</c> pour les versions de glibc
qui le supportent encore, vous devriez éditer le fichier
<path>/etc/locales.build</path> et définir les locales que vous voulez
construire.
</p>

<p>
Les dernières versions de glibc ignorent l'option USE <c>userlocales</c> et
utilisent à la place le fichier <path>/etc/locale.gen</path>. Si vous effectuez
une mise à jour vers une telle version, vous devriez créer le fichier
<path>/etc/locale.gen</path> <e>et supprimer</e> le fichier
<path>/etc/locales.build</path>. Vérifiez la sortie de la commande <c>emerge
-vpe world</c> pour savoir si glibc supporte ou non l'option
<c>userlocales</c>.
</p>

<pre caption="Definir les locales">
mybox ~ # <i>cd /etc</i>
<comment>(Pour les version de glibc qui supportent l'option userlocales)</comment>
mybox etc # <i>nano -w locales.build</i>

<comment>(Pour les versions récentes de glibc, convertissez locales.build)</comment>
mybox etc # <i>grep '^[^#].*' locales.build | sed 's:/: :' >locale.gen</i>
mybox etc # <i>rm locales.build</i>
mybox etc # <i>nano -w locale.gen</i>
</pre>

<p>
Finalement, vous voudrez peut-être modifier la variable <c>CFLAGS</c> dans
votre fichier <path>/etc/make.conf</path> pour optimiser le code selon vos
propres besoins. Notez qu'utiliser une longue liste de flags est rarement
nécessaire et peut éventuellement mener à rendre le système inutilisable. Il
est recommandé de préciser le type de processeur via l'option <c>march</c> et
de s'en tenir à <c>-O2 -pipe</c>.
</p>

<p>
Vous pouvez également vouloir passer en <b>~x86</b>. Vous ne devriez faire cela
que si vous êtes prêt à affronter des comportements bizarres de la part de
certains paquets ou ebuilds. Si vous préférez garder votre système stable,
n'ajoutez pas la variable <c>ACCEPT_KEYWORDS</c>. Ajouter
<c>FEATURES="parallel-fetch ccache"</c> est également une bonne idée.
</p>

<pre caption="Dernière édition du fichier make.conf">
mybox etc # <i>nano -w make.conf</i>
<comment>(Spécifiez le type de votre CPU dans les CFLAGS au moyen de -march)</comment>
CFLAGS="-O2 -march=<i>athlon-xp</i> -pipe"
<comment>(Ajoutez la ligne suivante)</comment>
FEATURES="parallel-fetch ccache"
<comment>(N'ajoutez ceci que si vous savez ce que vous faites)</comment>
ACCEPT_KEYWORDS="~x86"
</pre>

<p>
Vous voudrez peut-être recompiler l'entièreté de votre système deux fois pour
utiliser pleinement les derniers changements apportés à la configuration. Cela
prend un long moment pour un faible gain de vitesse. Vous pouvez laisser votre
système s'optimiser au fur et à mesure que de nouvelles versions des paquets
sortiront. Cependant, recompiler reste une bonne idée du point de vue de la
cohérence du système. Voyez le <uri link="/doc/fr/gcc-upgrading.xml">Guide de
mise à jour de GCC</uri> pour de plus amples informations sur les bénéfices
qu'assurent un <c>system</c> et un <c>world</c> cohérents.
</p>

<p>
Recompiler uniquement les paquets qui ont déjà été mis à jour depuis leur
sortie ou ceux affectés par l'activation/désactivation de USE flags prend assez
de temps. Vous devrez peut-être également retirer certains paquets qui
bloquent vos mises à jour. Cherchez dans la sortie de la commande <c>emerge
-vpuD --newuse world</c> les paquets suivis de "[blocks <brite>B</brite>]" et
utilisez la commande <c>emerge -C</c> pour les supprimer.
</p>

<pre caption="Mettre vos paquets à jour">
<comment>(Installer ccache)</comment>
mybox etc # <i>emerge ccache</i>

<comment>(Veuillez noter que le fait de passer en ~x86 implique la mise à jour
de nombreux paquets)</comment>
mybox etc # <i>emerge -vpuD --newuse world</i>
<comment>(Vérifiez attentivement la liste des paquets et de leur options USE,
supprimez les paquets bloquants s'il y en a, et lancez la mise à jour)</comment>
mybox etc # <i>time emerge -vuD --newuse world</i>
<comment>(79 paquets ont été (re)compilés)</comment>

real  180m13.276s
user  121m22.905s
sys   36m31.472s

<comment>(Réinstallez libtool pour éviter de problèmes potentiels)</comment>
mybox etc # <i>emerge libtool</i>

<comment>(Mettez à jour les fichiers de configuration. Attention à <b>ne pas</b>
laisser etc-update mettre à jour des fichiers que vous avez édités)</comment>
mybox etc # <i>etc-update</i>

<comment>(Si perl a été mis à jour, vous devriez exécuter le script perl-cleaner)</comment>
mybox etc # <i>time perl-cleaner all</i>
real  1m6.495s
user  0m42.699s
sys   0m10.641s

<comment>(Dans le cas d'une mise à jour majeure de python,
vous devriez exécuter le script python-updater)</comment>
mybox etc # <i>python-updater</i>
</pre>

</body>
</section>
<section>
<title>Que faire ensuite ?</title>
<body>

<p>
Selon ce que votre nouvelle machine Gentoo est supposée faire, vous voudrez
probablement installer des programmes pour un serveur ou pour un ordinateur de
bureau. Comme exemple, <c>emerge gnome</c> et <c>emerge kde</c> ont été
chronométrés sur le système ~x86 décrit ci-dessus. Tous deux ont été installés
à partir du même point.
</p>

<p>
Vous devriez consulter <uri link="/doc/fr/">l'index de notre documentation</uri>
pour trouver comment installer et configurer les programmes de votre choix.
</p>

<impo>
Ce qui suit est uniquement présent à titre d'exemple et ne constitue pas une
référence.
</impo>

<pre caption="Emerge GNOME">
mybox etc # <i>emerge -vp gnome</i>
<comment>(Regardez la liste des paquets et de leurs options USE,
éditez ensuite le fichier make.conf si nécessaire)</comment>
mybox etc # <i>nano -w /etc/make.conf</i>
<comment>(Les options USE suivantes ont été définies)</comment>
USE="nptl nptlonly -ipv6 -fortran unicode svg hal dbus \
-kde -qt3 -qt4 -arts -eds -esd gnome gstreamer gtk -xmms firefox"

mybox etc # <i>time emerge gnome</i>
<comment>(326 paquets ont été installés)</comment>

real  520m44.532s
user  339m21.144s
 sys   146m22.337s
</pre>

<pre caption="Emerge KDE">
mybox etc # <i>emerge -vp kde-meta</i>
<comment>(Regardez la liste des paquets et de leurs options USE,
éditez ensuite le fichier make.conf si nécessaire)</comment>
mybox etc # <i>nano -w /etc/make.conf</i>
<comment>(Les options USE suivantes ont été définies)</comment>
USE="nptl nptlonly -ipv6 -fortran unicode svg hal dbus \
 kde qt3 qt4 -arts -eds -esd -gnome -gstreamer -gtk -xmms -firefox"

mybox etc # <i>time emerge kde-meta</i>
 <comment>(391 paquets ont été installés)</comment>

real  1171m25.318s
user  851m26.393s
sys   281m45.629s
</pre>

</body>
</section>
</chapter>
</guide>
