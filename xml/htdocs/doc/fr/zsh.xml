<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/zsh.xml,v 1.2 2011/08/29 11:00:03 cam Exp $ -->

<guide lang="fr">

<title>Guide sur l'installation et la configuration de zsh</title>

<author title="Auteur">
  <mail link="hekonsek@gmail.com">Henryk Konsek</mail>
</author>
<author title="Auteur">
  <mail link="morritt.andrew@gmail.com">Andrew Morritt</mail>
</author>
<author title="Correcteur">
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>
<author title="Correcteur">
  <mail link="welp@gentoo.org">Peter Weller</mail>
</author>
<author title="Traducteur">
  <mail link="guill.p@gmail.com">Guillaume Pujol</mail>
</author>

<abstract>
Ce guide explique comment installer et configurer zsh rapidement. Après avoir lu
ce document, vous serez capable d'utiliser la plupart des fonctionnalités de zsh
telles que l'auto-complétion avancée, la correction des commandes et la gestion
de l'invite de commandes.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>2</version>
<date>2006-10-18</date>

<chapter>
<title>Installation</title>
<section>
<title>Installation de zsh</title>
<body>

<p>
Pour obtenir <c>zsh</c> sous Gentoo, il suffit d'installer les deux paquets
<c>app-shells/zsh</c> (zsh proprement dit) et <c>app-shells/zsh-completion</c>
(les scripts d'auto-complétion).
</p>

<pre caption="Installation de zsh">
# <i>emerge zsh zsh-completion</i>
</pre>

</body>
</section>
<section>
<title>Lancement de zsh</title>
<body>

<p>
Si vous lancez <c>zsh</c> pour la première fois, vous obtiendrez le message
suivant. Vous pouvez ignorer ce menu puisque nous allons créer un fichier de
configuration à la main plus loin dans ce document.
</p>

<pre caption="Fermeture du menu de configuration initiale">
$ <i>zsh</i>
This is the Z Shell configuration function for new users, zsh-newuser-install.
You are seeing this message because you have no zsh startup files
(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory
~).  This function can help you with a few settings that should
make your use of the shell easier.

You can:

(q)  Quit and do nothing.  The function will be run again next time.

(0)  Exit, creating the file ~/.zshrc containing just a comment.
     That will prevent this function being run again.

(1)  Continue to the main menu.

--- Type one of the keys in parentheses --- <i>q</i>
</pre>

<p>
Dans la version utilisée au moment de l'écriture de ce document, ce menu
apparait en anglais, mais en voici la traduction&nbsp;:
</p>

<pre caption="Traduction du menu">
Ceci est le script de configuration du Z Shell pour les nouveaux
utilisateurs, zsh-newuser-install.
Vous voyez ce message car vous n'avez pas encore les fichiers d'initialisation de
zsh (ces fichiers sont .zshenv, .zprofile, .zshrc et .zlogin situés dans votre
répertoire ~). Ce script va vous aider à ajuster quelques paramètres qui
rendront votre utilisation du shell plus conviviale.

Vous pouvez&nbsp;:

(q) Quitter sans rien modifier. Ce message apparaitra à nouveau la prochaine
    fois.

(0) Terminer, en créant le fichier ~/.zshrc qui contiendra un simple
    commentaire. De cette façon, ce message n'apparaitra plus par la suite.

(1) Aller au menu principal.

--- Entrez l'un des raccourcis entre parenthèses ---
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Configuration</title>
<section>
<title>Introduction</title>
<body>

<p>
Pour lancer zsh depuis un autre shell, tapez <c>zsh</c>. Pour utiliser zsh
comme shell par défaut et sauvegarder vos paramètres de session en session,
consultez le chapitre <uri link="#savingsettings">Sauvegarde des
paramètres</uri>. Juste après l'installation, vous pourriez penser que
<c>zsh</c> n'est qu'un shell de base et limité sur le plan fonctionnel. Nous
allons changer cette impression grâce à quelques éléments à configurer.
</p>

</body>
</section>
<section>
<title>Auto-complétion avancée</title>
<body>

<p>
Pour activer le célèbre système d'auto-complétion de <c>zsh</c>, vous devrez
lancer les commandes suivantes&nbsp;:
</p>

<pre caption="Activation de l'auto-complétion">
% <i>autoload -U compinit</i>
% <i>compinit</i>
</pre>

<p>
Le style de complétion par défaut est plutôt moche et simple. Si vous
souhaitez améliorer son apparence, lancez les commandes suivantes&nbsp;:
</p>

<pre caption="Amélioration de l'apparence de l'auto-complétion">
% <i>zstyle ':completion:*:descriptions' format '%U%B%d%b%u'</i>
% <i>zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'</i>
</pre>

</body>
</section>
<section>
<title>Correction de commandes</title>
<body>

<p>
L'auto-correction de commandes est également une fonctionnalité qui vaut la
peine d'être activée&nbsp;:
</p>

<pre caption="Activation de la correction">
% <i>setopt correctall</i>
</pre>

</body>
</section>
<section>
<title>Invites de commandes</title>
<body>

<p>
L'invite de commande par défaut est plutôt classique, mais il suffit de quelques
manipulations pour l'améliorer. Commençons par activer le support des invites de
commande avancées&nbsp;:
</p>

<pre caption="Activation des invites de commandes avancées">
% <i>autoload -U promptinit</i>
% <i>promptinit</i>
</pre>

<p>
Un aperçu des invites de commande disponibles peut être affiché grâce à la
commande <c>prompt -p</c>. Vous pouvez ensuite activer celle que vous
préférez&nbsp;:
</p>

<pre caption="Activation de l'invite de commande personnalisée">
<comment>(Remplacez «&nbsp;gentoo&nbsp;» par l'identifiant de votre choix</comment>
% <i>prompt gentoo</i>
</pre>

<note>
Vous pouvez également lister les identifiants de chaque invite de commande
disponible sans afficher un aperçu de chacune d'entre elles, en utilisant la
commande <c>prompt -l</c>.
</note>

<p>
Une autre possibilité consiste à créer son propre prompt. Pour cela, vous devrez
utiliser la variable d'environnement <c>PS1</c>.
</p>

<pre caption="Une invite personnalisée simple">
% <i>export PS1="[Invite de Test] > "</i>
[Invite de Test] >
</pre>

<p>
En plus de la possibilité d'insérer des textes statiques dans votre invite
personnalisée, zsh fournit de nombreuses séquences d'échappement qui permettent
d'afficher des informations systèmes dans l'invite. Voici quelques-unes de ces
séquences&nbsp;:
</p>

<table>
<tr>
  <th>Séquence</th>
  <th>Affichage</th>
</tr>
<tr>
  <ti>%T</ti>
  <ti>Heure système (HH:MM)</ti>
</tr>
<tr>
  <ti>%*</ti>
  <ti>Heure système (HH:MM:SS)</ti>
</tr>
<tr>
  <ti>%D</ti>
  <ti>Date système (YY-MM-DD)</ti>
</tr>
<tr>
  <ti>%n</ti>
  <ti>Nom d'utilisateur</ti>
</tr>
<tr>
  <ti>%B - %b</ti>
  <ti>Balises de début - fin de l'affichage en gras</ti>
</tr>
<tr>
  <ti>%U - %u</ti>
  <ti>Balises de début - fin de l'affichage souligné</ti>
</tr>
<tr>
  <ti>%d</ti>
  <ti>Répertoire de travail courant</ti>
</tr>
<tr>
  <ti>%~</ti>
  <ti>Répertoire de travail courant, relatif à ~</ti>
</tr>
<tr>
  <ti>%M</ti>
  <ti>Nom d'hôte de l'ordinateur</ti>
</tr>
<tr>
  <ti>%m</ti>
  <ti>Nom d'hôte de l'ordinateur (jusqu'au premier . uniquement)</ti>
</tr>
<tr>
  <ti>%l</ti>
  <ti>Terminal courant</ti>
</tr>
</table>

<p>
Ces séquences d'échappement peuvent être insérées dans la variable
d'environnement <c>PS1</c>&nbsp;; zsh se chargera de les identifier et de les
remplacer automatiquement.
</p>

<pre caption="Une invite personnalisée plus complexe">
% <i>export PS1="[%* - %D] %d %% "</i>
[08:44:23 - 06-02-18] /home/nom_utilisateur %
</pre>

</body>
</section>
<section>
<title>Historique</title>
<body>

<p>
Malheureusement, la configuration par défaut de zsh dans Gentoo n'inclut pas le
support de l'historique des commandes. Pour l'activer, vous devrez entrer les
commandes suivantes&nbsp;:
</p>

<pre caption="Configuration simple de l'historique des commandes">
% <i>export HISTSIZE=2000</i>
% <i>export HISTFILE="$HOME/.history"</i>

<comment>(L'historique ne sera pas sauvegardé sans la commande suivante.)</comment>
% <i>export SAVEHIST=$HISTSIZE</i>
</pre>

<!-- does not work
<p>
It is very comfortable to search commands in history using the up/down arrow
keys, especially after typing the few first letters of the desired command.
</p>

<p>
To enable this feature, enter the following commands:
</p>

<pre caption="Setting context searching">
% <i>bindkey `tput kcuu1` history-beginning-search-backward >/dev/null 2>&amp;1</i>
% <i>bindkey `tput kcud1` history-beginning-search-forward >/dev/null 2>&amp;1 </i>
</pre>

<p>
To try the above feature, try the following commands:
</p>

TODO: use commands that *are* in the history, i.e. commands from above samples

<pre caption="History searching based on the first letters of the commands">
<comment>(Do not press Enter after typing)</comment>
% <i>vim /etc/</i>
<comment>(Now press up arrow key)</comment>
% <i>vim /etc/fstab</i>
<comment>(Press up arrow key once again)</comment>
% <i>vim /etc/X11/xorg.conf</i>
</pre>
-->

<p>
Pour éviter que l'historique n'enregistre des commandes entrées plusieurs fois
(comme plusieurs lignes <c>ls -l</c> tapées au cours de la même session de
terminal), vous pouvez activer l'option <c>hist_ignore_all_dups</c>&nbsp;:
</p>

<pre caption="Activation de l'anti-doublon dans l'historique">
% <i>setopt hist_ignore_all_dups</i>
</pre>

<p>
Une astuce utile qui permet d'éviter d'enregistrer certaines commandes dans
l'historique consiste à les faire précéder par au moins une espace. Pour que
cela fonctionne, vous devrez auparavant activer l'option
<c>hist_ignore_space</c>&nbsp;:
</p>

<pre caption="Activation de l'historique sélectif">
% <i>setopt hist_ignore_space</i>

<comment>(Cette commande ne sera pas enregistrée. Remarquez le caractère espace précédant cette commande.)</comment>
% <i> cat /proc/cpuinfo</i>
</pre>

</body>
</section>
<section>
<title>Paramètres divers</title>
<body>

<p>
Vous pouvez activer l'option <c>autocd</c> si vous souhaitez éviter d'avoir à
taper la commande <c>cd</c> lorsque vous changez de répertoire. Avec cette
option, taper simplement <c>/etc</c> est équivalent à taper <c>cd /etc</c>.
</p>

<pre caption="Activation de l'option autocd">
% <i>setopt autocd</i>
</pre>

<p>
Si les jokers de type bash (les caractères spéciaux comme «&nbsp;*&nbsp;» ou
«&nbsp;?&nbsp;») ne vous suffisent pas, vous pouvez activer l'option
<c>extendedglob</c> pour activer les jokers étendus (qui se rapprochent des
expressions rationnelles).
</p>

<pre caption="Activation des jokers étendus">
% <i>setopt extendedglob</i>
</pre>

<p>
Une fois cette option activée, vous pouvez utiliser des jokers tels que <c>cp
^*.(tar|bz2|gz)</c>.
</p>

</body>
</section>
</chapter>

<chapter id="savingsettings">
<title>Sauvegarde des paramètres</title>
<section>
<title>Sauvegarde des paramètres de zsh</title>
<body>

<p>
Une fois <c>zsh</c> configuré comme vous l'aimez, vous pouvez enregistrer ces
paramètres pour les utiliser par défaut pour toutes les sessions zsh. Une façon
de faire consiste à écrire votre configuration dans le script
<path>/etc/zsh/zshrc</path>. Sinon, vous pouvez aussi enregistrer ces paramètres
pour votre compte uniquement en éditant le fichier <path>~/.zshrc</path>.
</p>

<pre caption="Un exemple de fichier zshrc">
#!/bin/zsh

# completion
autoload -U compinit
compinit

# correction
setopt correctall

# prompt
autoload -U promptinit
promptinit
prompt gentoo
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Faire de zsh votre shell par défaut</title>
<section>
<title>Si vous avez les droits root</title>
<body>

<p>
Vous pouvez changer le shell par défaut pour un utilisateur donné en utilisant
la commande <c>usermod</c>.
</p>

<pre caption="Utilisation de usermod pour choisir zsh par défaut">
# <i>usermod -s /bin/zsh utilisateur</i>
</pre>

</body>
</section>
<section>
<title>Si vous n'avez pas les droits root</title>
<body>

<p>
Si votre administrateur système (malgré vos requêtes courtoises) refuse de vous
donner un shell zsh, vous pouvez configurer <c>bash</c> pour exécuter <c>zsh</c>
au démarrage. Pour cela, vous devrez simplement modifier votre fichier
<path>~/.bashrc</path>.
</p>

<pre caption="Exemple de ~/.bashrc">
<comment>(Ajoutez la ligne suivante à votre ~/.bashrc.)</comment>
exec zsh
</pre>

<p>
Une autre méthode pour changer le shell consiste à utiliser la commande
<c>chsh</c> (un utilitaire utilisé pour changer le shell par défaut pour un
utilisateur). Un utilisateur normal ne peut changer le shell que pour son
propre compte. En tant que root, vous pouvez changer le shell pour tous les
utilisateurs.
</p>

<pre caption="Utilisation de chsh pour choisir zsh par défaut">
<comment>(Remplacez « utilisateur » par votre propre nom d'utilisateur.)</comment>
$ <i>chsh -s /bin/zsh utilisateur</i>
</pre>

</body>
</section>
</chapter>
</guide>
