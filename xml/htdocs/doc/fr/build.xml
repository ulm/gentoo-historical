<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/build-fr.html">
<title>Instructions d'Installation de Gentoo Linux 1.2 </title>
<author title="Architecte en chef"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title="Auteur">Chris Houser</author>
<author title="Auteur"><mail link="jerry@gentoo.org">Jerry Alexandratos</mail></author>
<author title="Fantôme"><mail link="g2boojum@gentoo.org">Grant Goodyear</mail></author>
<author title="Traducteur"><mail link="julien.perrot@iie.cnam.fr">Julien
Perrot</mail></author>

<abstract>Ces instructions vous guident à travers le processus d'installation de
Gentoo Linux 1.2. Le processus d'installation de Gentoo Linux permet
différentes approches selon la partie du système que vous désirez construire à
partir de rien.</abstract>

<version>1.52</version>
<date>15 Juillet 2002 (mise à jour de la traduction le 31 août 2002)</date>

<chapter>
<title>A propos de l'installation</title>
<section>
<body>

<p>Ce nouveau CD de démarrage peut démarrer sur pratiquement tous les lecteurs
de CD-ROM IDE modernes, et aussi sur beaucoup de CD-ROMs SCSI. Sur le CD-ROM est
inclus le support Linux de l'IDE (intégré au noyau) et le support pour tous les
périphériques SCSI (disponibles comme modules). De plus, nous fournissons les
modules pour tous les types de carte réseau supportés par Linux, et également
les outils permettant de configurer votre réseau et d'établir des connexions
extérieures via <c>ssh</c> et de télécharger des fichiers. </p>

<p>Pour installer à partir du CD-ROM, il faut un processeur
486+ et idéallement au moins 64 MO de RAM. (Gentoo Linux a été compilé avec
succès avec 64MO de RAM + 64MO d'espace swap, mais le processus de compilation
est affreusement lent sous ces conditions). Pour commencer le processus
d'installation, récupérez d'abord une de nos images ISO de CD à partir de
<uri>http://www.ibiblio.org/gentoo/releases/build/</uri>. Pour l'instant, nous
avons deux CDs de disponibles. Notre premier CD est <uri
link="http://www.ibiblio.org/gentoo/releases/build/1.2/gentoo-ix86-1.2.iso">gentoo-ix86-1.2.iso</uri>;
cette image ISO est plutôt petite (16MO) et contient une image minimale
chrootable (<path>stage1-ix86-1.2.tbz2</path>) -- tout ce dont vous avez besoin
pour compiler un système Gentoo Linux à partir de zéro (les sources seront
automatiquement téléchargés via Internet). Notre second CD est <uri
link="http://www.ibiblio.org/gentoo/releases/build/1.2/gentoo-i686-1.2.iso">gentoo-i686-1.2.iso</uri>;
cette image ISO est un peu plus grosse (100+Mb) -- elle contient la même chose
que notre image de 16 MO, <e>plus</e> un système de base i686 pré-compilé
(<path>stage3-i686-1.2.tbz2</path>) et un système de base i686 semi-compilé
(<path>stage2-i686-1.2.tbz2</path>) dans une archive. Ces deux nouvelles
archives nécessitent un Pentium Pro ou un processeur plus récent (les K6 ne
conviennent pas). Si vous avez un système i686+, vous pouvez vraiment accélérer
l'installation si vous ne voulez pas tout compiler à partir de zéro.</p>

<p>Maintenant, passons rapidement en revue le processus d'installation. Nous
allons créer les partitions, créer nos systèmes de fichiers, et extraire soit
une archive stage1, stage2 ou stage3. Si nous utilisons une archive stage1 ou
stage2, nous franchirons les étapes appropriées pour amener notre système au
stage3. Une fois notre système au stage3, nous pourrons le configurer
(modifications des fichiers de configuration, installalation d'un gestionnaire de
démarrage, etc) et le démarrer et avoir un système Gentoo Linux complètement
fonctionnel. En fonction du stage à partir duquel vous commencez l'installation,
voici ce qui est requis pour l'installation:</p>

<table>
<tr><th>stage</th><th>étapes requises pour l'installation</th></tr>
<tr><ti>1</ti><ti>configuration des partitions/systèmes de fichiers, emerge
rsync, bootstrap, emerge system, emerge linux-source, configuration finale</ti></tr>
<tr><ti>2</ti><ti>configuration des partitions/systèmes de fichiers, emerge
rsync, emerge system, emerge linux-source, configuration finale</ti></tr>
<tr><ti>3</ti><ti>configuration des partitions/systèmes de fichiers, emerge
rsync (optionel), configuration finale</ti></tr>
</table>

</body>
</section>
</chapter>
<chapter>
<title>Démarrage</title>
<section>
<body>

<p>Après avoir choisi le CD que vous voulez utiliser, continuez et démarrez
dessus. Vous serez accueilli par des lignes de texte et une invite <c>boot:</c>
en bas de l'écran. A cette invite, appuyez sur entrée, et Linux commencera à se
charger à partir du CD.</p>

<p>Ensuite, vous serez accueilli par une petite liste des commandes disponibles
sur le CD de démarrage, incluant <c>nano</c> (un clone de l'éditeur pico) et des
instructions pour configurer le réseau. Puis, vous serez invités à choisir votre
keymap préféré, suivi par l'autodétection PCI. Ce processus d'autodétection
PCI va automatiquement charger les modules noyaux appropriés pour de nombreux
périphériques SCSI et ethernet. Après ceci, vous pouvez appuyer sur entrée pour
entrer dans l'environnement minimal Linux du CD de démarrage. Vous devez avoir
une invite root ("<c>#</c>") sur la console courante, et vous pouvez aussi
ouvrir de nouvelles consoles en tapant alt-f2, alt-f3, etc et en appuyant sur
entrée.</p>

</body>
</section>
</chapter>

<chapter>
<title>Chargement des modules noyaux</title>
<section>
<body>

<p>Nous sommes presque prêts à commencer l'installation de Gentoo Linux, mais
d'abord nous devons accomplir les étapes nécessaires pour que le noyau
reconnaisse nos cartes réseaux, et de manière facultative tout matériel SCSI de
notre système ayant échappé à l'autodétection PCI. Pour consulter une liste de
tous les modules réseaux disponibles, tapez <c>ls
/lib/modules/*/kernel/drivers/net/*</c>. Pour charger un module, tapez:</p>

<pre>
# <i>modprobe pcnet32</i>
	<comment>(replacez pcnet32 par le module de votre carte réseau)</comment>
</pre>

<p>Maintenant, si vous voulez avoir la possibilité d'accéder à un quelconque
matériel SCSI qui n'a pas été détecté pendant le processus d'autodétection PCI,
vous aurez besoin de charger le module approprié venant de /lib/modules,
également en utilisant <c>modprobe</c>:</p>

<pre>
# <i>modprobe aic7xxx</i>
# <i>modprobe sr_mod</i>
# <i>modprobe sd_mod</i>
</pre>

<p>Au dessus, nous chargeons le pilote SCSI <c>aic7xxx</c> et nous nous assurons
que les supports scsi CD-ROM (<c>sr_mod</c>) et disque (<c>sd_mod</c>) sont
chargés.</p>
<note><c>hdparm</c> est inclus dans l'image ISO de Gentoo. Si
n'importe lequel de vos disques demande une optimisation, c'est le bon moment
pour le faire. Sur du matériel raisonnablement moderne, <c>hdparm -d 1
/dev/hdx</c> devrait être sans danger. Vous pouvez utiliser <c>hdparm -v
/dev/hdx</c> pour vérifier les paramètres de votre disque dur et <c>hdparm -t
/dev/hdx</c> pour vérifier ses performances.</note>
</body>
</section>
</chapter>
<chapter>
<title>Chargement des modules noyaux PCMCIA</title>
<section>
<body>
<p>Si vous avez une carte réseau PCMCIA, vous devez faire quelques manipulations
supplémentaires.</p>
<pre>
# <i>insmod pcmcia_core</i>
# <i>insmod i82365</i>
# <i>insmod ds</i>
# <i>cardmgr -f</i>
</pre>
<p>Pendant que cardmgr détecte le matériel présent, votre haut-parleur devrait
émettre quelques beeps rassurants, et votre carte réseau PCMCIA devrait s'activer.
Vous pouvez bien sûr insérer la carte PCMCIA  après avoir chargé cardmgr si vous
le préférez. (Techniquement, vous n'avez pas besoin d'exécuter <i>cardmgr</i> si
vous savez exactement quel module nécessite votre carte PCMCIA. Mais si vous ne le savez pas, charger tous les modules PCMCIA pour trouver le bon module ne
fonctionnera pas car tous les modules se chargent sans réchigner en attendant la
carte PCMCIA qui leur correspond. <i>cardmgr</i> va aussi décharger le(s)
module(s) pour n'importe quelle carte lorsque vous la retirez.)
</p>

</body>
</section>
</chapter>
<chapter>
<title>Configuration du réseau d'installation</title>
<section>
<body>

<p>Les nouveaux CDs de démarrage -r11+ vous permettent de configurer un réseau
fonctionnel, vous permettant d'utiliser <c>ssh</c>, <c>scp</c> ou <c>wget</c> si
besoin est avant même de commencer le processus d'installation. Même si vous
n'avez pas besoin de ça maintenant, vous devriez continuer et configurer votre
réseau maintenant. Une fois installé, Portage sera capable d'utiliser votre
réseau quand vous serez dans votre environement chroot
(nécessaire pour installer Gentoo Linux).</p>
</body>
</section>

<section>
<title>DHCP</title>
<body>
<p>
La configuration réseau est simple avec DHCP ; si votre fournisseur d'accès
n'utilise pas DHCP, passez à la section configuration statique en dessous.
</p>

<pre caption="Configuration Réseau avec DHCP">
# <i>dhcpcd eth0</i> 
</pre>

<note>
Pour certains fournisseurs d'accès, il est nécessaire de fournir un hostname.
Pour cela, ajoutez un paramètre <c>-h monhostname</c> à la ligne de commande
dhcpd au dessus.
</note>

<p>Si vous recevez des avertissements <i>dhcpConfig</i>, ne paniquez pas; ces
erreurs sont certainement là pour faire joli. Passez au test du réseau
en-dessous.</p>
</body>
</section>
<section>
<title>Configuration statique</title>
<body>
<p>
Nous avons besoin de configurer le réseau pour pouvoir télécharger les sources
pour la compilation du système, et l'interface localhost. Tapez les commandes
suivantes en replaçant $IFACE par votre interface réseau (typiquement
<c>eth0</c>) , $IPNUM par votre adresse IP, $BCAST par votre adresse de
broadcast, et $NMASK par votre masque de réseau. Pour la commande <c>route</c>,
replacez $GTWAY par votre passerelle par défaut.
</p>
<pre>
# <i>/sbin/ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</i>
# <i>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1</i>
</pre>
<p>Maintenant, il est temps de créer le fichier <path>/etc/resolv.conf</path>
afin que la résolution de nom (trouver les sites Web/FTP par leur nom plutot que
par leurs adresses IP) fonctionne.</p>

<note>Pour le moment le seul éditeur installé par défaut est <c>nano</c>, un
éditeur visuel léger et très facile d'utilisation. Utilisez <c>nano</c> avec
l'option <c>-w</c> pour désactiver le retour à la ligne automatique.
</note>

<p>
Voici un template pour vous guider dans la création de votre fichier
/etc/resolv.conf:
</p>
<pre caption="template de /etc/resolv.conf">
domain mondomaine.com
nameserver 10.0.0.1
nameserver 10.0.0.2
</pre>
<p>Remplacez <c>10.0.0.1</c> et <c>10.0.0.2</c> par les adresses IP de vos
serveurs DNS primaire et secondaire respectivement.</p>
</body>
</section>
<section>
<title>Test du réseau</title>
<body>
<p>
Maintenant que votre réseau a été configuré, la commande <c>/sbin/ifconfig
-a</c> devrait afficher que votre carte réseau fonctionne
(cherchez <e>UP</e> et <e>RUNNING</e> dans la sortie).
</p>
<pre caption="/sbin/ifconfig pour une carte réseau en état de fonctionnement">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
</pre>
<!--
<note>
If you have a static ppp link, you can !!! do this...!!!
</note>
-->
</body>
</section>
<section>
<title>Le réseau est en route</title>
<body>
<p>Le réseau devrait être configuré et utilisable. Vous devriez avoir la
possibilité d'utiliser les commandes <c>ssh</c>, <c>scp</c> et <c>wget</c>
incluses pour vous connecter à d'autres machines de votre LAN ou à Internet.</p>
</body>
</section>
</chapter>
<chapter>
<title>Créer les partitions</title>
<section>
<body>

<p>Maintenant que le noyau a accès à notre carte et à nos contrôleurs disques,
il est temps de créer les partitions sur le disque pour Gentoo Linux.</p>

<p>Voici un bref aperçu de l'organisation standard des partitions sous Gentoo
Linux. Nous allons créer au moins trois partitions : une partition de swap, une
partition racine (qui contiendra l'essentiel de Gentoo Linux), et une partition
spéciale de boot. La partition boot sert à contenir les informations du
gestionnaire de démarrage GRUB et aussi votre noyau Linux. La partition boot
nous fournit un endroit sûr pour stocker tout ce qui est en relation avec le
démarrage de Linux. Lors d'un usage quotidien de Gentoo Linux, votre partition
boot devrait rester <e>non montée</e>. Cela empêche le fait que votre
noyau puisse ne plus être disponible pour GRUB (à cause d'une corruption d'un
système de fichiers) dans l'éventualité d'un crash système, cela permet d'éviter
le problème de l'oeuf et de la poule quand GRUB ne peut pas lire votre noyau
(car votre système de fichiers n'est pas consistant) et que vous ne pouvez pas
ramener votre système de fichiers à un état consistant (car vous ne pouvez plus
démarrer !) </p>

<p>Maintenant, passons aux différents systèmes de fichiers. Pour l'instant, vous
avez le choix entre quatre systèmes de fichiers : XFS, ext2, ext3 (journalisé)
et ReiserFS. ext2 est le système de fichiers le mieux testé et le vrai système
de fichiers Linux mais n'a pas une journalisation des méta-données. ext3 est la
nouvelle version d'ext2 avec journalisation des méta-données et des écritures de
données ordonnées, permettant également la journalisation des données de manière
efficace. ReiserFS est un système de fichiers basé sur un B*-tree promettant de
très bonnes performances avec les petits fichiers, et bat à la fois ext2 et ext3
quand il s'agit de petits fichiers (fichiers de taille inférieure à 4k), souvent
par un facteur de 10x-15x. ReiferFS a la journalisation des méta-données, mais pas de journalisation des données. XFS est un système de fichiers de haute
performance avec journalisation des données et complètement supporté sous Gentoo
Linux.
</p>

<p>
Si vous recherchez le système de fichiers le plus standard, utilisez ext2. Si
vous recherchez le système de fichiers le plus simple, utilisez ext3. Si vous
recherchez un système de fichiers de haute performance avec support de la
journalisation, utilisez XFS : à la fois ext3 et XFS sont matures. Tous les
systèmes de fichiers sont prêts pour être utilisés
dans un environement de production. Voici notre recommandation de base pour les
tailles et les types de système de fichiers:</p>

  <table>
  <tr>
  	<th>Partition</th>
	<th>Taille</th>
	<th>Type</th>
  	<th>exemple de périphérique</th>
  </tr>
  <tr>
  	<ti>partition boot, contenant le(s) noyau(x) et les informations de
    démarrage</ti>
	<ti>100 Mo</ti>
	<ti>ext2/3 fortement recommendé (le plus facile); Si ReiserFS alors à monter
    avec <c>-o notail</c></ti>
  	<ti>/dev/hda1</ti>
  </tr>
   <tr>
  	<ti>partition de swap (il n'y a plus la limite à 128 Mo)</ti>
	<ti>&gt;=2*quantité de ram dans votre système est recommendé mais n'est plus
    requis (pour le noyau 2.4.10)</ti>
	<ti>Linux swap</ti>
  	<ti>/dev/hda2</ti>
  </tr>
  <tr>
  	<ti>partition racine, contenant le système de fichiers principal (/usr, /home, etc)</ti>
	<ti>&gt;=1.5 Go</ti>
	<ti>XFS, ext3 recommandés; ext2 ok</ti>
  	<ti>/dev/hda3</ti>
  </tr>
 </table>

<note>Maintenant, créez les partitions à l'aide de fdisk. Notez que vos
partitions doivent être de type 0x82 pour une partition de swap et 0x83 pour les
autres partitions (que ce soit XFS, ReiserFS <e>ou</e> ext2).</note>

<p>Une fois que vous avez créé vos partitions avec <c>fdisk</c>, il est temps
d'initialiser les systèmes de fichiers . Initialisez le swap comme ci dessous:</p>
<pre>
# <i>mkswap /dev/hda2</i>
</pre>
<p>Vous pouvez utiliser la commande <c>mke2fs</c> pour créer vos systèmes de
fichiers ext2</p>
<pre>
# <i>mke2fs /dev/hda1</i>
</pre>
<p>Pour créer un système de fichiers XFS, utilisez la commande <c>mkfs.xfs</c> :</p>
<pre>
# <i>mkfs.xfs /dev/hda3</i>
</pre>
<note>
Vous pouvez ajouter certaines options additionnelles à la commande
<c>mkfs.xfs</c> : <c>-d agcount=3 -l size=32m</c>. L'option <c>-d agcount=3</c>
va diminuer le nombre de groupes d'allocation. XFS insistera pour utiliser au
moins 1 groupe d'allocation pour 4 Go de votre partition, ainsi, par exemple, si
vous avez une partition de 20 Go vous aurez besoin d'un agcount minimum de 5.
L'option <c>-l size=32m</c> augmente la taille du journal à 32Mo, améliorant les
performances.
</note>
<warn>
Si vous installez une partition XFS au dessus d'une précédente partition
ReiserFS, les tentatives de montage ultérieures peuvent échouer sans un
explicite <c>mount -t xfs</c>. Une solution est de remplir la partition de zéro avant
de créer le système de fichiers XFS : <c>dd if=/dev/zero of=/dev/hd<comment>x</comment> bs=1k</c>.
</warn>
<p>Si vous voulez utiliser ext3, vous pouvez créer les systèmes de fichiers ext3
avec <c>mke2fs -j</c>:</p>
<pre>
# <i>mke2fs -j /dev/hda3</i>
</pre>
<p>Pour créer des systèmes de fichiers  ReiserFS, utilisez la commande <c>mkreiserfs</c> :</p>
<pre>
# <i>mkreiserfs /dev/hda3</i>
</pre>

<note>A partir du noyau 2.4.18, le support de ReiserFS peut être considéré comme
stable.</note>
<note>Vous pouvez trouver plus d'informations sur l'utilisation d'ext3 sous
Linux 2.4 à <uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>.</note>
</body>
</section>
</chapter>
<chapter>
<title>Montage des partitions</title>
<section>
<body>
<p>
Maintenant, nous allons activer notre nouvelle partition swap car nous aurons
peut-être besoin de mémoire virtuelle additionnelle :
</p>
<pre>
# <i>swapon /dev/hda2</i>
</pre>
<p>Maintenant, nous allons créer les points de montage <path>/mnt/gentoo</path>
et <path>/mnt/gentoo/boot</path> et nous allons monter nos systèmes de fichiers
sur ces points de montages.
</p>
<pre>
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>
<p>Si vous installiez Gentoo Linux avec un <path>/usr</path> ou un
<path>/var</path> séparé, ils seraient montés sur <path>/mnt/gentoo/usr</path>
et <path>/mnt/gentoo/var</path> respectivement.
</p>
   <impo>Si votre partition <e>boot</e> (celle qui contient votre noyau) est
   une partition ReiserFS, assurez vous de la monter avec l'option <c>-o notail</c> 
   pour que GRUB puisse s'installer correctement. Assurez vous que <c>notail</c> soit aussi
   présent dans l'entrée de votre partition boot dans votre nouveau
   <path>/etc/fstab</path>.</impo> 
</body>
</section>
</chapter>

<chapter>
<title>Montage du CD-ROM</title>
<section>
<body>
<p>
Bien que vous ayez démarré sur le CD-ROM, le CD-ROM lui-même n'est pas monté
sous notre environnement minimal Linux de démarrage. Nous aurons besoin de le
monter pour avoir accès à l'archive de l'image contenue sur le CD-ROM. Pour
monter le CD-ROM, il faut généralement taper :
</p>
<pre>
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom -o ro -t iso9660</i>
</pre>
<p>Maintenant que le CD-ROM est monté, vous devriez être capable de voir le(s)
fichier(s) <c>stage???.tbz2</c> en tapant <c>ls /mnt/cdrom</c>.</p>
</body>
</section>
</chapter>

<chapter>
    <title>Décompressez le stage que vous voulez utiliser</title>
<section>
<body>

<p>Maintenant il est temps d'extraire l'archive compressée contenant le stage de
votre choix vers <path>/mnt/gentoo</path>. Ensuite, nous utiliserons la commande
<c>chroot</c> sur notre nouvelle installation de Gentoo Linux.
</p>

<impo>Assurez vous d'utiliser l'option <c>p</c> avec <c>tar</c>. Si vous oubliez
de le faire, certains fichiers auront des permissions incorrectes.</impo>

<impo>Si vous utilisez la méthode d'installation "tout construire à partir de
zéro", vous utiliserez l'image <path>stage1-ix86-1.2.tbz2</path>. Si vous
utilisez l'un de nos plus gros CDs, vous aurez aussi le choix entre une image
stage2 et une image stage3. Ces images vous permettent de gagner du temps au
détriment de la possibilité de configuration (nous avons déjà choisi les
optimisations du compilateur et les variables USE par défaut pour vous). L'image
stage3 contient aussi les sources linux complètes et une image de l'arborescence
Portage, éliminant la nécessité de faire un <c>emerge rsync</c> plus tard.
</impo>

<pre>
# <i>cd /mnt/gentoo</i>
# <i>tar -xvjpf /mnt/cdrom/stage?-*.tbz2</i>
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

<pre>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
# 
</pre>

<p>Après avoir exécuté ces commandes, vous serez à l'"intérieur" de votre nouvel
environement Gentoo Linux.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Rsync</title>
<section>
<body>
<p>Maintenant, vous devez exécuter <c>emerge rsync</c>. Si vous utilisez
l'archive Gentoo Linux 1.2+ stage3, <c>emerge rsync</c> est maintenant optionnel
car nous avons inclus une image de l'arborescence Portage pour votre confort.
<c>emerge rsync</c> va indiquer à <c>emerge</c> de se connecter à rsync.gentoo.org
et de télécharger la dernière version de l'arborescence de nos ports Portage :
</p>

<pre>
# <i>emerge rsync</i>
</pre>
<p>L'arborescence Portage va être téléchargée ; sa taille est d'environ
10Mo.</p>
<impo>L'adresse du serveur rsync est maintenant
rsync://rsync.gentoo.org/gentoo-portage. Si vous avez des problèmes pour accéder
au rsync Gentoo, assurez vous que vous utilisez effectivement cette adresse en
réglant la variable SYNC dans votre /etc/make.conf.
</impo>
<note>La commande rsync peut être configurée pour utiliser un proxy HTTP si vous
êtes derrière un firewall. Pour configurer ceci, régler
<i>RSYNC_PROXY="hostname:port"</i> dans <i>/etc/make.conf</i> ou régler la comme
une variable d'environnement.
</note>

</body>
</section>
</chapter>
<chapter>
<title>Passage de stage1 à stage2</title>
<section>
<body>

<impo>Si vous installez à partir de stage2 ou un stage3, alors nous avons déjà réalisé
l'opération de boostrap pour vous. Il n'y a aucune raison pour vous de refaire
cette opération, à moins que vous ayez décidé de faire un <c>emerge rsync</c> et
que vous vouliez vous assurer d'avoir le système Gentoo Linux le plus à jour
possible. La plupart des personnes utilisant les archives stage2 ou stage3 ne
voudront <i>pas</i> faire l'opération de bootstrap encore une fois puisqu'elle
peut prendre jusqu'à une heure même sur des machines très rapides.</impo>

<p>Maintenant que vous avez une copie fonctionnelle de l'arborescence de
Portage, les personnes utilisant stage1 pour l'installation auront besoin d'effectuer
l'opération de bootstrap de leur système Gentoo Linux comme ci-dessous.
D'abord, éditez le fichier <path>/etc/make.conf</path>. Dans ce fichier, vous
devriez configurer les paramètres <c>USE</c> qui spécifient les fonctionnalités
optionnelles que vous voulez utiliser pour compiler vos paquets ; généralement,
la valeur par défaut (une variable USE vide) est correcte. Vous devriez aussi
configurer les paramètres <c>CHOST</c>, <c>CFLAGS</c> et <c>CXXFLAGS</c> pour le
type de systèmes que vous créez (des exemples commentés peuvent être trouvés
plus bas dans le fichier.) Si nécessaire, vous pouvez aussi configurer les
informations du proxy si vous êtes derrière un firewall.</p>

<pre>
# <i>nano -w /etc/make.conf</i> <comment>(Configurer ces paramètres)</comment>
</pre>

<note>
Les personnes voulant vraiment optimiser le processus de compilation devraient
regarder le fichier <path>/etc/make.globals</path>. Ce fichier comprend les
valeurs par défaut de gentoo et ne devraient pas être modifiés. Si les valeurs
par défaut ne sont pas suffisantes, alors les nouvelles valeurs devraient être
placées dans le fichier <path>/etc/make.conf</path>, car les entrées de <path>make.conf</path>
sont <comment>prioritaires</comment> sur les entrées de
<path>make.globals</path>. Si vous êtes intéressés par la configuration des
paramètres USE, regardez dans le fichier
<path>/etc/make.profile/make.defaults</path>. Si vous voulez désactiver un
paramètre USE présent dans ce fichier, ajoutez le paramètre correspondant
<c>USE="-foo"</c> dans /etc/make.conf (pour désactiver le paramètre USE <c>foo</c>.)
</note>

<p>Maintenant, il est temps de démarrer le processus de "bootstrap". Ce
processus va durer environ 1 ou 2 heures en fonction de la vitesse de votre
machine : cela dure environ une heure avec mon système à base d'AMD Athlon 900Mhz. Pendant
ce temps, l'image décompressée sera préparée pour compiler le reste du système.
La collection de compilateurs GNU va être construite ainsi que la bibliothèque
GNU C. Ces compilations prennent beaucoup de temps et forment la partie
principale du processus de bootsrap : </p>
<pre>
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>
<p>Le processus de "bootstrap" va commencer.</p>

<note>
Portage utilise par défaut <c>/var/tmp</c> pendant la compilation de paquets,
et peut souvent utiliser des centaines de mégaoctets de stockage temporaire. Si vous
voulez changer l'endroit où Portage stocke ces fichiers temporaires, créez une
nouvelle variable PORTAGE_TMPDIR <e>avant</e> de démarrer le processus de
boostrap comme ci-dessous :
</note>

<pre>
# <i>export PORTAGE_TMPDIR="/otherdir/tmp"</i>
</pre>

<p>
Le script <c>bootstrap.sh</c> va construire <c>binutils</c>, <c>gcc</c>, <c>gettext</c>,
et <c>glibc</c>, puis reconstruire <c>binutils</c>, <c>gcc</c>, et
<c>gettext</c> une fois que <c>glibc</c> a été construit. Bien entendu, ce
processus dure un moment. Une fois ce processus terminé, votre système sera
un système "stage2".
</p>
</body>
</section>
</chapter>
<chapter>
<title>Passage de stage2 à stage3</title>
<section>
<body>

<p>Une fois que votre image a fini le processus de bootstrap et que vous êtes au
stage2 (une fois de plus, si vous utilisez une archive stage3 alors ces étapes
ne sont pas nécessaires), il est temps de construire ou d'installer le reste du
système de base comme ci-dessous :</p>

<pre>
# <i>export CONFIG_PROTECT=""</i>
# <i>emerge --pretend system</i>
	<comment>[liste des paquets devant être installés]</comment>
# <i>emerge system</i>
</pre>

<note>La ligne <c>export CONFIG_PROTECT=""</c> permet de s'assurer que de
nouveaux scripts installés dans <path>/etc</path> écraseront les anciens scripts
(stockés dans <path>sys-apps/baselayout</path>), contournant la gestion des
nouveaux fichiers de configuration de Portage. Tapez <c>emerge --help config</c>
pour plus de détails.
</note>

<p>Cela va prendre un moment avant que la construction du système de base
complet soit finie. Votre récompense est que votre système sera entièrement
optimisé pour votre machine. L'inconvénient est que vous devrez trouver un moyen
de vous occuper pendant tout ce temps. L'auteur suggère "Star
Wars - Super Bombad Racing" pour PS2. Lorsque <c>emerge system</c> sera terminé, vous
aurez un système Gentoo Linux stage3.</p>

</body>
</section>
</chapter>
<chapter>
<title>Etapes finales : timezone</title>
<section>
<body>

<p>A cette étape, vous devriez avoir un système stage3 qui est prêt pour une
configuration finale. Nous allons démarrer ce processus en configurant la zone
horaire. En configurant la zone horaire avant de construire le noyau, nous nous
assurons que les utilisateurs auront une sortie <c>uname -a</c> cohérente.</p>

<p>Cherchez votre zone horaire (timezone) (ou GMT si vous utilisez Greenwich
Mean Time) dans <path>/usr/share/zoneinfo</path>. Puis, faites un lien
symbolique en tapant:
</p>
<pre>
# <i>ln -sf /usr/share/zoneinfo/chemin/vers/fichiertimezone /etc/localtime</i>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Etapes finales : noyau et logger système</title>
<section>
<body>
<p>
Si vous installez une archive Gentoo Linux 1.1+ stage3, nous vous avons facilité
la tâche en incluant des sources Linux récentes dans
<path>/usr/src/linux</path>. Dans les autres cas, vous devez installer les
ebuilds des sources Linux. Voici les ebuilds à votre disposition en ce moment
:</p>

<table>
<tr><th>ebuild</th><th>description</th></tr>
<tr><ti><path>gentoo-sources</path></ti><ti>Notre propre noyau avec des
performances et des fonctionnalités améliorées basé sur -ac (avec maintenant le
support XFS)</ti></tr>
<tr><ti><path>xfs-sources</path></ti><ti>Une image de l'arborescence de Linux
SGI XFS CVS ; c'est le noyau à installer si vous voulez le support XFS le plus à
jour (pour l'instant la version recommandée pour XFS est gentoo-sources)</ti></tr>
<tr><ti><path>openmosix-sources</path></ti><ti>Une arborescence du noyau Linux
de base patché avec le support de la technologie <uri
link="http://www.openmosix.com">openMosix</uri> de répartition de
charge/clustering. </ti></tr>
<tr><ti><path>usermode-sources</path></ti><ti>Une arborescence du noyau Linux
de base patché avec le support de User-Mode Linux  (technologie "Linux inside Linux")</ti></tr>
<tr><ti><path>vanilla-sources</path></ti><ti>Une arborescence du noyau Linux
de base, identique à celle que vous pouvez récupérer sur kernel.org</ti></tr>
</table>

<p>Choisissez un noyau et récupérez les sources comme ci-dessous</p>

<pre>
# <i>emerge sys-kernel/gentoo-sources</i>
</pre>

<p>Maintenant que vous avez récupéré une arborescence Linux, il est temps de
compiler votre propre noyau personnalisé :
</p>
<pre>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
# <i>make dep &amp;&amp; make clean bzImage modules modules_install</i>
# <i>mv /boot/bzImage /boot/bzImage.orig</i> <comment>[Si /boot/bzImage existe
# déjà]</comment>
# <i>cp /usr/src/linux/arch/i386/boot/bzImage /boot</i>
</pre>

<warn>Pour que votre noyau fonctionne correctement, vous devez vous assurer que
certaines options soient directement dans le noyau -- c'est-à-dire qu'elles
doivent <i>être activées et non pas compilées comme module</i>. Vous aurez
besoin d'activer l'option <i>"Code maturity
level options --> Prompt for development and/or incomplete code/drivers"</i>
pour avoir accès à certaines de ces options. Dans la section "File systems",
assurez vous d'activer <i>"Device File System"</i> (notez que vous n'avez
<e>pas</e> besoin d'activer l'option "/dev/pts file system support"). Vous aurez
aussi besoin d'activer <i>"Virtual Memory Filesystem"</i>. Assurez vous
d'activer "ReiserFS" si vous avez des partitions ReiserFS ; même chose pour
"Ext3". Si vous utilisez XFS, activez l'option "SGI XFS filesystem support".
C'est toujours une bonne idée de laisser ext2 activé que vous l'utilisiez ou
pas. De plus, la plupart des personnes utilisant des disques durs IDE voudront
activer l'option "USE DMA by default" ; sinon les performances de vos disques
IDE pourraient être mauvaises. Bien sûr, pensez à activer le support "IDE disk"
aussi -- sinon votre noyau n'aura pas accès à vos disques IDE.
</warn>
<impo>
Si vous utilisez un graveur de CD IDE, alors vous devez activer l'émulation scsi
dans le noyau. Activer "ATA/IDE/MFM/RLL support" ---> "IDE, ATA and ATAPI Block 
devices" ---> "SCSI emulation support" (je le compile généralement comme
module), puis sous "SCSI support" activer "SCSI support", "SCSI CD-ROM support"
et "SCSI generic support" (de même, je les compile comme modules). Si vous
décidez également d'utiliser les modules alors faire <c>echo -e
"ide-scsi\nsg\nsr_mod" >> /etc/modules.autoload</c> pour qu'ils soient
automatiquement chargés au démarrage.
</impo>

<note>
Pour ceux qui le préfèrent, il est maintenant possible d'installer Gentoo Linux
avec un noyau 2.2. Vous gagnerez en stabilité mais vous perdrez de nombreuses
caractéristiques intéressantes qui sont seulement dans les noyaux 2.4 (comme les
systèmes de fichiers XFS et tmpfs, iptables, et bien plus), bien que les sources
du noyau 2.2 peuvent être patchées avec le support Reiserfs et devfs.
Les scripts de démarrage Gentoo Linux nécessitent soit le support tmpfs soit le
support ramdisk dans le noyau, donc les utilisateurs de noyau 2.2 doivent
s'assurer que le support ramdisk est compilé dans le noyau (pas en module). Il
est <comment>vital</comment> que le paramètre <e>gentoo=notmpfs</e> soit ajouté
à la ligne du noyau dans <path>/boot/grub/menu.lst</path> pour les noyaux 2.2
afin qu'un ramdisk soit monté pour les scripts de démarrage plutôt que tmpfs. Si
vous choisissez de ne pas utiliser devfs, alors <e>gentoo=notmpfs,nodevfs</e>
doit être utilisé à la place.
</note>

<p>
Votre nouveau noyau personnalisé (et les modules) sont maintenant installés.
Maintenant vous devez choisir le logueur système que vous voulez installer. Nous
mettons à votre disposition sysklogd, qui est l'ensemble de démons loggueurs système traditionnel. Nous avons aussi syslog-ng et metalog. Les
utilisateurs avancés semblent s'éloigner de sysklogd (qui n'a pas de très bonnes
performances) et s'orientent vers syslog-ng et metalog. Dans le doute, vous pouvez
essayer metalog qui semble être assez populaire. Pour installer le logueur de
votre choix, tapez <e>l'une</e> des trois lignes suivantes :
</p>

<pre>
# <i>emerge sys-apps/sysklogd</i>
# <i>rc-update add sysklogd default</i>
<comment>ou</comment>
# <i>emerge app-admin/syslog-ng</i>
# <i>rc-update add syslog-ng default</i>
<comment>ou</comment>
# <i>emerge app-admin/metalog</i>
# <i>rc-update add metalog default</i>
</pre>
<warn>
Dans le cas de syslog-ng vous devez créer le fichier
<path>/etc/syslog-ng/syslog-ng.conf</path>. Voir <path>/etc/syslog-ng</path>
pour un exemple de fichier de configuration.
</warn>
<impo>
Metalog écrit sa sortie sur le disque par blocs, donc les messages ne sont pas
immédiatement enregistrés dans les journaux systèmes. Si vous essayez de
débugguer un démon, ce comportement ne va pas vous faciliter la tâche. Quand
votre système Gentoo Linux est en cours de fonctionnement, vous pouvez envoyer à
metalog un signal USR1 pour désactiver temporairement ce comportement (ce qui
veut dire que <i>tail -f <path>/var/log/everything/current</path></i> 
va alors fonctionner en temps réel comme attendu) et un signal USR2 pour revenir au
comportement original.
</impo>

<p>Maintenant vous pouvez choisir de manière optionnelle un paquet cron que vous
aimeriez utiliser. Pour l'instant, nous vous offrons dcron, fcron et vcron. Si
vous ne savez pas lequel utiliser, vous pouvez installer vcron. Ils peuvent être
installés comme ci-dessous : </p>
<pre>
# <i>emerge sys-apps/dcron</i>
# <i>crontab /etc/crontab</i>
<comment>ou</comment>
# <i>emerge sys-apps/fcron</i>
# <i>crontab /etc/crontab</i>
<comment>ou</comment>
# <i>emerge sys-apps/vcron</i>
</pre>
<p>Pour plus d'informations sur le fonctionnement de cron sous Gentoo linux,
lire <uri
link="http://lists.gentoo.org/pipermail/gentoo-announce/2002-April/000151.html"></uri>ce
message.</p>
</body>
</section>
</chapter>
<chapter>
<title>Etapes finales : installation de paquets additionnels</title>
<section>
<body>
<p>
Vous devez peut-être installer quelques paquets additionnels dans l'arborescence
Portage si vous utilisez des caractéristiques optionnelles telles que XFS ou
LVM. Si vous utilisez XFS, vous devez installer l'ebuild <c>xfsprogs</c> :
</p>
<pre>
# <i>emerge sys-apps/xfsprogs</i>
</pre>
<p>Si vous voulez utiliser ReiserFS, vous devriez installer les outils ReiserFS
:</p>
<pre>
# <i> emerge sys-apps/reiserfsprogs</i>
</pre>
<p>
Si vous utilisez LVM, vous devez installer l'ebuild <c>lvm-user</c> :
</p>
<pre>
# <i>emerge --usepkg sys-apps/lvm-user</i>
</pre>
<p>
Si vous utilisez un ordinateur portable et que vous désirez utiliser vos ports
pcmcia à votre premier vrai redémarrage, vous devez vous assurer d'avoir
installé le paquet pcmcia-cs.
</p>
<pre>
# <i>emerge sys-apps/pcmcia-cs</i>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Etapes finales : /etc/fstab</title>
<section>
<body>
<p>Votre système Gentoo Linux est presque prêt à être utilisé. Tout ce qu'il
vous reste à faire est de configurer quelques fichiers systèmes importants et
installer le gestionnaire de démarrage GRUB. Le premier fichier à configurer est
<path>/etc/fstab</path>. Pensez à utiliser l'option <c>notail</c> pour votre
partition boot si vous avez choisi d'y créer un système de fichiers ReiserFS.
Pensez à spécifier les types de système de fichiers <c>ext2</c>, <c>ext3</c> ou
<c>reiserfs</c> correspondant à vos partitions.</p>

<p>Vous pouvez vous inspirer du <path>/etc/fstab</path> ci-dessous, mais bien
sûr assurez vous de remplacer "BOOT", "ROOT" et "SWAP" avec les périphériques
que vous utilisez (comme <c>hda1</c>, etc.)</p>
<pre>
<comment>
# /etc/fstab: static file system information.
#
# noatime turns of atimes for increased performance (atimes normally aren't
# needed; notail increases performance of ReiserFS (at the expense of storage
# efficiency).  It's safe to drop the noatime options if you want and to 
# switch between notail and tail freely.

# &lt;fs&gt;           &lt;mountpoint&gt;   &lt;type&gt;   &lt;opts&gt;          &lt;dump/pass&gt;

# NOTE: If your BOOT partition is ReiserFS, add the notail option to opts.
</comment>
/dev/BOOT           /boot       ext2	 noauto,noatime	 1 2
/dev/ROOT           /           ext3	 noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro       0 0
proc                /proc       proc	 defaults        0 0
</pre>

</body>
</section>
<section>
<title>Etapes finales : définir le mot de passe root</title>
<body>
<p>Avant d'oublier, définissez le mot de passe root en tapant : </p>
<pre>
# <i>passwd</i>
</pre>
</body>
</section>
<section>
<title>Etapes finales : /etc/hostname</title>
<body>
<p>Editez ce fichier pour qu'il contienne votre nom de domaine sur une ligne,
par exemple <c>mamachine.mondomaine.com</c>
</p>
</body>
</section>

<section>
<title>Etapes finales : /etc/hosts</title>
<body>
<p>Ce fichier contient une liste d'adresses IP et leur noms d'hôte associés. Il
est utilisé par le système pour résoudre les adresses IP de tous les noms
d'hôtes qui ne sont pas dans vos serveurs de noms. Voici un exemple de ce
fichier :
</p>
<pre>
127.0.0.1      localhost
<comment># la ligne suivante contient l'IP pour votre réseau local et le nom de
machine associé</comment>
192.168.1.1    mamachine.mondomaine.com mamachine
</pre>
</body>
</section>

<section>
<title>Configuration réseau finale</title>
<body>
<p>
Ajoutez les noms des modules qui sont nécessaires au bon fonctionnement de votre
système dans le fichier <path>/etc/modules.autoload</path> (vous pouvez aussi
ajouter n'importe quelles options dont vous avez besoin sur la même ligne.)
Quand Gentoo Linux démarrre, ces modules seront automatiquement chargés. Un
module particulièrement important est celui de votre carte réseau, si vous
l'avez compilé en tant que module :
</p>

<pre caption="/etc/modules.autoload">
3c59x
</pre>
<p>
Editez le script <path>/etc/conf.d/net</path> pour que votre réseau soit
configuré lors du premier démarrage
</p>
<pre>
# <i>nano -w /etc/conf.d/net</i>
# <i>rc-update add net.eth0 default</i>
</pre>
<p>
Si vous avez plusieurs cartes réseau vous devez créer un autre script
<path>net.eth<comment>x</comment></path> pour chaque carte (<comment>x</comment> = 1, 2, ...):
</p>
<pre caption="Plusieurs interfaces réseau">
# <i>cd /etc/init.d</i>
# <i>cp net.eth0 net.eth<comment>x</comment></i>
# <i>rc-update add net.eth<comment>x</comment> default</i>
</pre>
<p>
Si vous avez une carte PCMCIA installée, jetez un bref coup d'oeil dans
/etc/init.d/pcmcia pour vérifier que cela correspond à votre configuration puis
ajoutez
<pre>
depend() {
	need pcmcia
}
</pre>
au début de votre fichier <path>/etc/init.d/net.eth<comment>x</comment></path>
pour que les pilotes pcmcia soit chargés automatiquement quand votre réseau est
chargé.
</p>
</body>
</section>

<section>
<title>Etapes finales : configuration des paramètres de base (incluant la
configuration du clavier)</title>
<body>
<pre caption="configuration de base">
# <i>nano -w /etc/rc.conf</i>
</pre>
<p>
Suivez les instructions dans ce fichier pour configurer les paramètres de bases.
Tous les utilisateurs voudront s'assurer que <c>CLOCK</c> est configuré à leur
convenance. Les utilisateurs de claviers internationaux voudront définir la
variable <c>KEYMAP</c> (parcourir <path>/usr/share/keymaps</path> pour avoir la
liste des possibilités).
</p>
</body>
</section>

<section>
<title>Etapes finales : paramètres du disque dur</title>
<body>
<p>Malheureusement, les réglages d'hdparm que vous avez effectués au début de
l'installation ne sont stockés entre les redémarrages. Pour régler ça, il suffit
d'ajouter les réglages hdparm au fichier <path>/etc/conf.d/local.start</path> :
</p>
<pre>
# <i>nano -w /etc/conf.d/local.start</i>
</pre>
<pre caption="ajout des réglages hdparm à /etc/conf.d/local.start">
# This is a good place to load any misc.
# programs on startup ( 1>&amp;2 )

# turn on DMA on both harddrives
hdparm -d 1 /dev/hda
hdparm -d 1 /dev/hdb
</pre>
</body>
</section>

<section>
<title>Etapes finales : configuration de GRUB</title>
<body>
<p>
La partie la plus importante dans la compréhension de GRUB est d'être à l'aise
avec les notations qu'utilise GRUB pour se réfèrer aux disques durs et aux
partitions. Votre partition Linux <path>/dev/hda1</path> s'appelle
<path>(hd0,0)</path> sous GRUB. Notez les parenthèses autour de hd0,0 - elles
sont requises. La numérotation des disques durs commence à zero plutôt qu'à "a",
et les partitions commencent à zero plutôt qu'à un. Donc <path>/dev/hdb3</path>
devient <path>(hd1,2)</path> et <path>/dev/hdd7</path> devient
<path>(hd3,6)</path>. Quand vous pensez être à l'aise avec ces notations,
convertissez les noms de vos partitions boot et racine au format GRUB et
écrivez les sur papier. Maintenant il est temps d'installer GRUB.
</p>

<p>Le moyen le plus facile d'installer GRUB est de taper simplement <c>grub</c>
dans votre invite :
</p>
<pre>
# <i>grub</i>
</pre><p>Vous arrivez devant l'invite de grub. Maintenant, vous devez taper les
commandes correctes pour installer GRUB sur le secteur de démarrage de votre
disque dur. Dans mon exemple de configuration, je veux installer le secteur de
démarrage GRUB sur le secteur de démarrage maître (MBR) de mon disque dur pour
que la première chose que je voie quand j'allume mon ordinateur soit l'invite
GRUB. Dans mon cas, les commandes que je dois taper sont : </p>

<pre>grub&gt; <i>root (hd0,0)</i>
grub&gt; <i>setup (hd0)</i>
grub&gt; <i>quit</i>
</pre>

<p>Voici comment les deux commandes fonctionnent. La première commande <c>root
( )</c> indique l'emplacement de votre partition boot (dans notre exemple,
<path>/dev/hda1</path> ou <path>(hd0,0)</path> dans la terminologie GRUB).
Ensuite, la seconde commande <c>setup ( )</c> indique à GRUB où installer le
secteur de démarrage - il sera configuré pour rechercher ses fichiers spéciaux à
l'emplacement <c>root ( )</c> que vous avez spécififé. Dans mon cas, je veux le
secteur de démarrage sur le MBR du disque dur, donc j'ai simplement spécifié
<path>/dev/hda</path> (aussi connu comme <path>(hd0)</path>). Si j'utilisais un
autre gestionnaire de démarrage et si je voulais configurer GRUB en tant que
gestionnaire de démarrage secondaire, je pourrais installer GRUB sur le secteur
de démarrage d'une partition en particulier. Dans ce cas, j'aurais spécifié une
partition en particulier plutôt que le disque en entier. Une fois que le secteur
de démarrage de GRUB a été installé avec succès, vous pouvez taper <c>quit</c>
pour quitter GRUB. Gentoo Linux est installé mais nous avons besoin de créer le
fichier <path>/boot/grub/menu.lst</path> pour obtenir un sympathique menu de
démarrage GRUB après le redémarrage de l'ordinateur. Voici comment procéder.</p>

<p>Maintenant, créez le fichier menu.lst (<c>nano -w /boot/grub/menu.lst</c>) et
rajouter les lignes suivantes :</p>
<pre>
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=Mon exemple Gentoo Linux
root (hd0,0) 
kernel /boot/bzImage root=/dev/hda3 

<comment>#Les trois lignes ci-dessous sont nécessaires seulement en cas de
dual-boot</comment>
title=Windows NT Workstation
root (hd0,5) 
chainloader +1
</pre>
<note>
Le fichier <path>menu.lst</path> devrait se terminer en "lst" comme dans
"list", pas "1st" comme dans "first". De plus, (hd0,0) doit être écrit sans
espaces à l'intérieur des parenthèses.
</note>
<impo>
Si vous avez auparavant activé l'émulation scsi pour un graveur IDE, alors pour
que ce dernier fonctionne effectivement vous devez ajouter un paramètre "hdx=ide-scsi" à
la ligne du noyau dans menu.lst (où "hdx" est le périphérique correspondant à
votre graveur).
</impo>

<p>Après avoir sauvegardé ce fichier, l'installation de Gentoo Linux est
terminée. En choisissant la première option, votre système Gentoo Linux devrait
démarrer sans problème. La seconde partie de menu.lst est optionnelle et vous
montre comment vous pouvez utiliser GRUB pour démarrer sur une partition
Windows.</p>
<note>Au dessus, <path>(hd0,0)</path> devrait référencer votre partition "boot"
(<path>/dev/hda1</path> dans notre exemple de configuration ) et
<path>/dev/hda3</path> devrait référencer notre système de fichiers racine.
<path>(hd0,5)</path> contient le gestionnaire de démarrage XY.</note>

<p>De plus, si vous avez besoin de passer des options au noyau, ajoutez les
simplement à la fin de la commande <c>kernel</c>. Nous passons déjà une option
(<c>root=/dev/hda3</c>), mais vous pouvez en rajouter. En particulier, vous
pouvez désactiver devfs par défaut (non recommandé à moins de savoir ce que l'on
fait) en ajoutant l'option <c>gentoo=nodevfs</c> à la commande <c>kernel</c>.
<note>Contrairement aux versions précédentes de Gentoo Linux, vous n'avez plus
besoin d'ajouter <c>devfs=mount</c> à la fin de la ligne <c>kernel</c> pour
activer devfs. Depuis la rc6, devfs est activé par défaut.
</note>
</p>
</body>
</section>
</chapter>
<chapter>
<title>Installation terminée!</title>
<section>
<body>
<p>Maintenant, Gentoo Linux est installé. La dernière étape est de quitter
l'environnement chroot, de démonter proprement vos partitions et de redémarrer
le système : </p>
<pre>
# <i>exit</i> 
<codenote>Ceci permet de quitter l'environnement chroot ; vous pouvez aussi
taper <c>^D</c></codenote>
# <i>cd / </i>
# <i>umount /mnt/gentoo/boot</i>
# <i>umount /mnt/gentoo/proc</i>
# <i>umount /mnt/gentoo</i>
# <i>reboot</i>
</pre>

<note>
Après avoir redémarré, il est conseillé d'exécuter la commande
<c>update-modules</c> pour créer le fichier <path>/etc/modules.conf</path>.
Plutôt que de modifier ce fichier directement, vous devriez généralement
modifier les fichiers dans <path>/etc/modules.d</path>.
</note>

<p>Si vous avez des questions ou si vous voulez vous impliquer dans le
développement de Gentoo Linux, pensez à rejoindre nos listes de diffusion
gentoo-user et gentoo-dev (il y a un lien "click to subscribe" sur la <uri
link="http://www.gentoo.org">page principale</uri>). Nous avons aussi un <uri
link="/doc/desktop-fr.html">Guide de configuration d'une station</uri> pratique qui
vous aidera à continuer la configuration de votre nouveau système Gentoo Linux
et <uri link="/doc/portage-user-fr.html">Guide de l'utilisateur de Portage</uri>
pour vous aider à vous familiariser avec les bases de Portage. Bienvenue dans
Gentoo Linux !</p>
</body>
</section>
</chapter>
</guide>
