<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/fr/xen-guide.xml,v 1.5 2008/11/28 13:04:33 titefleur Exp $ -->

<guide link="/doc/fr/xen-guide.xml" lang="fr">
<title>Configurer Gentoo avec Xen</title>

<author title="Auteur">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>

<author title="Traducteur">
  <mail link="titefleur@gentoo.org">Marion Agé</mail>
</author>

<abstract>
Ce guide explique comment utiliser Xen sur votre système Gentoo.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.4</version>
<date>2008-08-11</date>

<chapter>
<title>Introduction</title>
<section>
<body>

<p>
La technologie <uri link="http://www.xensource.com/">Xen</uri> vous permet de
lancer plusieurs systèmes d'exploitation sur une même machine physique, de
contrôler les ressources utilisées et même les domaines émigrants (qui sont les
environnements virtuels dans lesquels un système d'explotation invité
fonctionne) depuis un système utilisant Xen vers un autre. Xen nécessite d'être
supporté par le système d'exploitation hôte (qui, dans notre cas, sera le noyau
Linux), tandis que les systèmes d'exploitation invités peuvent fonctionner sans
être modifiés <e>si</e> votre matériel supporte la technologie de
virtualisation Intel (VT-x) ou la technologie de virtualisation AMD (SVM).
Sinon votre système invité devra également posséder le support de Xen.
</p>

<p>
Ce guide va vous expliquer les étapes de configuration nécessaires afin de
faire fonctionner Xen sous Gentoo Linux. Nous ne parlerons pas de Xen en
lui-même (une <uri
link="http://www.cl.cam.ac.uk/research/srg/netos/xen/readmes/user">documentation</uri>
décente du projet Xen est disponible) ni des configurations spécialisées qui
pourraient être très intéressantes dans notre cas mais qui ne sont pas en
relation directe avec Xen (comme l'exportation de Portage à travers le NFS, le
démarrage de Linux en PXE, etc.).
</p>

</body>
</section>
</chapter>
<chapter>
<title>Préparation du domaine 0</title>
<section>
<title>Introduction</title>
<body>

<p>
Le <e>domaine 0</e> est le domaine primaire sous Xen, hébergeant le système
d'exploitation hôte qui régit tous les autres domaines. Dans ce chapitre, nous
allons préparer une installation existante de Gentoo à devenir le système
d'exploitation hôte de ce domaine et construire le noyau avec le support de Xen
afin que Gentoo soit prête à héberger d'autres domaines Xen.
</p>

</body>
</section>
<section>
<title>Refaire l'installation de Gentoo&nbsp;?</title>
<body>

<p>
Il est possible que vous vous retrouviez face à un «&nbsp;drame&nbsp;», celui
de devoir reconstruire entièrement l'installation de Gentoo avec un paramètre
<c>CFLAGS</c> différent.
Les systèmes d'exploitation invités fonctionnant sous Xen peuvent sinon subir
des dégradations importantes en terme de performances. Si toutefois vous
projetez de tester Xen plutôt que de l'installer à des fins de production et
que vous n'êtes pas emballé à l'idée de recompiler tous les programmes, vous
pouvez passer cette étape. Dans ce cas, vous pourrez utiliser Xen, mais vous
êtes averti des risques de dégradation de performances.
</p>

<impo>
Il est conseillé, si vous changer votre <c>CFLAGS</c> et que vous construisez
votre système avec une version de GCC inférieure à la version 4, de ne pas
mettre le paramètre <c>-Os</c> car il risque de corrompre des parties du code.
</impo>

<pre caption="Édition des CFLAGS et reconstruction de l'installation Gentoo">
~# <i>nano -w /etc/make.conf</i>
<comment>(Ajoutez -mno-tls-direct-seg-refs)</comment>
CFLAGS="-O2 -march=pentium4 -pipe <i>-mno-tls-direct-seg-refs</i>"

~# <i>emerge -e world</i>
</pre>

<p>
Si vous démarrez votre système en utilisant un disque RAM initialisé au
démarrage du système (initrd), vous avez besoin de reconstruire votre initrd
également (le meilleur moyen pour cela est d'exécuter toutes les étapes de
recompilation du noyau).
</p>

</body>
</section>
<section>
<title>Installation de Xen</title>
<body>

<p>
Xen contient en fait plusieurs composants, vous aurez donc besoin d'installer
plusieurs paquets. Comme ceux-ci sont toujours <uri
link="/doc/fr/handbook/handbook-x86.xml?part=3&amp;chap=3#doc_chap2">estampillés
en instable</uri>, vous devrez d'abord les démasquer en ajoutant les lignes
nécessaires au fichier <path>/etc/portage/package.keywords</path> avant de les
installer.
</p>

<pre caption="Démasquer et installer Xen">
~# <i>nano -w /etc/portage/package.keywords</i>
app-emulation/xen
app-emulation/xen-tools
sys-kernel/xen-sources

~# <i>emerge xen xen-tools xen-sources</i>
</pre>

</body>
</section>
<section>
<title>Compilation du noyau</title>
<body>

<p>
Ensuite, nous allons compiler le noyau Linux avec le support de Xen. Ce noyau,
dont les sources sont disponibles dans <path>/usr/src/linux-2.6.x.z-xen</path>,
sera notre noyau principal en fonctionnement (i.e. celui fonctionnant en
domaine 0). Dans la section <c>XEN</c>, vous trouverez les pilotes pour toutes
sortes de périphériques d'entrées/sorties, chaque pilote ayant une implémentation
<e>dorsale</e> et une implémentation <e>frontale</e> (N.D.T.&nbsp;:
<e>backend</e> et <e>frontend</e>)&nbsp;: ils sont utilisés par les autres
domaines (qui utilisent les pilotes <e>frontaux</e>) pour communiquer
directement avec le matériel.
</p>

<p>
Bien sûr, n'oubliez pas de sélectionner <c>Xen-compatible</c> dans la section
<c>Processor type and features</c>. Si vous vous interrogez au sujet du
réseau&nbsp;: chaque interface dans un domaine a une connexion point à point
vers une interface du domaine 0 (appelée <path>vifX.Y</path> où le X est le
numéro du domaine et le Y la Yème interface de ce domaine), ainsi vous pouvez
configurer votre réseau de la manière que vous voulez (pont réseau, NAT, etc.)
</p>

<pre caption="Activation du support de XEN pour les noyaux i386">
Processor type and features  ---&gt;
      Subarchitecture Type (Xen-compatible)
</pre>

<pre caption="Activation du support de XEN pour les noyaux x86_64">
Processor type and features  ---&gt;
      Subarchitecture Type (PC-compatible)
  [*] Enable Xen compatible kernel
</pre>

<pre caption="Configuration du noyau du Domaine 0">
Bus options (PCI etc.)  ---&gt;
  [*] PCI support
  [ ]     Xen PCI Frontend Debugging

Networking  ---&gt;
  Networking options  ---&gt;
    &lt;*&gt; 802.1d Ethernet Bridging
    <comment>Uniquement requis pour les ponts réseaux.</comment>

XEN  ---&gt;
  [*] Privileged Guest (domain 0)
  &lt;*&gt; Backend driver support
  &lt;*&gt;   Block-device backend driver
  &lt;*&gt;   Network-device backend driver
  &lt;*&gt;   PCI-device backend driver
        PCI Backend Mode (Virtual PCI) ---&gt;
  [*] Scrub memory before freeing it to Xen
  [*] Disable serial port drivers
      Xen version compatibility (3.0.4 and later)
</pre>

<pre caption="Configuration du noyau du Domaine U">
Bus options (PCI etc.)  ---&gt;
  [ ] PCI support

Device Drivers  ---&gt;
  SCSI device support  ---&gt;
    &lt; &gt; SCSI device support
    <comment>La désactivation du support SCSI libère les noms de périphériques
    /dev/sd* pour les utiliser en tant que périphériques de bloc virtuels
    Xen.</comment>

XEN  ---&gt;
  [ ] Privileged Guest (domain 0)
  &lt;*&gt; Block-device frontend driver
  &lt;*&gt; Network-device frontend driver
  [*] Scrub memory before freeing it to Xen
  [*] Disable serial port drivers
      Xen version compatibility (3.0.4 and later)
</pre>

<p>
Une bonne astuce est de laisser le noyau procéder au stockage de ses fichiers
d'exécution intermédiaires ailleurs, ainsi vous pourrez réutiliser le même
noyau pour construire les différentes configurations&nbsp;:
</p>

<pre caption="Compilation du noyau">
~# <i>mkdir -p ~/build/dom0 ~/build/domU</i>
~# <i>make O=~/build/dom0 menuconfig</i>
<comment>(Configurez le noyau)</comment>
~# <i>make O=~/build/dom0 &amp;&amp; make O=~/build/dom0 modules_install</i>
</pre>

<p>
Une fois que le noyau est compilé, vous trouverez son image directement dans le
répertoire de compilation (et non dans <path>arch/</path> ou ailleurs), appelée
<path>vmlinuz</path>. Copiez-la dans <path>/boot</path> puis configurez votre
chargeur de démarrage afin d'utiliser l'hyperviseur Xen (l'un des composants
installés précédemment) qui est enregistré comme <path>/boot/xen.gz</path>.
Dans la configuration du chargeur de démarrage, ajoutez votre noyau fraîchement
compilé en tant que noyau que Xen devra initialiser. Par exemple, pour
GRUB&nbsp;:
</p>

<pre caption="Configuration de GRUB pour Xen">
title Xen 3.0 / Gentoo Linux 2.6.x.y
root (hd0,0)
kernel /boot/xen.gz
module /boot/kernel-2.6.x.y-xen0 root=/dev/hda3
</pre>

<p>
À présent, réamorcez votre système dans Xen. Une fois que vous avez démarré,
vous devez charger le démon Xen&nbsp;:
</p>

<pre caption="Démarrage du démon Xen">
~# <i>/etc/init.d/xend start</i>
</pre>

<p>
À présent, vérifiez que vous pouvez faire tout ce que vous faites normalement
sur votre système. Si c'est le cas, vous pouvez éditer votre configuration du
chargeur de démarrage pour toujours démarrer dans Xen et ajouter le démon Xen
au niveau d'exécution «&nbsp;default&nbsp;», ainsi il sera lancé
automatiquement au prochain démarrage du système.
</p>

<note>
Si vous désirez démarrer les domaines invités automatiquement au démarrage,
ajoutez <c>xendomains</c> au niveau de démarrage «&nbsp;default&nbsp;»
également et créez un lien symbolique dans <path>/etc/xen/auto/</path> vers
les fichiers de configuration Xen pour les domaines que vous désirez démarrer.
</note>

</body>
</section>
</chapter>
<chapter>
<title>Création d'un domaine non privilégié</title>
<section>
<title>Compilation du noyau</title>
<body>

<p>
Rendez-vous dans le répertoire des sources du noyau Linux ayant le support de
Xen et mettez à jour la configuration. Il est sage de garder des options
similaires au noyau principal autant que possible à l'exception des paramètres
<c>XEN</c> dans lesquels les pilotes doivent maintenant avoir leur
implémentation <e>frontale</e> sélectionnée à la place de l'implémentation
<e>dorsale</e>. Ensuite, compilez le noyau et placez l'image
<path>vmlinuz</path> résultante où vous désirez (nous supposerons ici qu'elle
sera copiée dans <path>/mnt/data/xen/kernel</path>)&nbsp;:
</p>

<pre caption="Compilation du noyau invité">
~# <i>make O=~/build/domU</i>
~# <i>cp ~/build/domU/vmlinuz /mnt/data/xen/kernel/kernel-2.6.x.y-xen</i>
</pre>

<p>
Il est également possible de créer une seule image du noyau à la fois pour le
domaine principal et le domaine non privilégié. Le manuel de l'utilisateur Xen
propose plus d'informations à ce sujet.
</p>

</body>
</section>
<section>
<title>Création des disques du domaine</title>
<body>

<p>
Pour de meilleures performances, il est recommandé de dédier une partition (ou
un volume logique) à un domaine plutôt que d'utiliser un système de fichiers
basé sur un fichier. Toutefois, si vous souhaitez utiliser Xen dans un premier
temps pour faire des tests, l'utilisation d'un fichier a ses avantages
(particulièrement concernant la maintenance).
</p>

<p>
Vous pouvez créer un système de fichiers basé sur un fichier en utilisant
<c>dd</c> et <c>mke2fs</c> (ou tout autre utilitaire de création de système de
fichiers). Par exemple, pour créer un système de fichiers de 2&nbsp;Go en ext3&nbsp;:
</p>

<pre caption="Création d'un système de fichiers basé sur un fichier">
~# <i>dd if=/dev/zero of=/mnt/data/xen/disks/ext3root.img bs=1M count=2048</i>
~# <i>mke2fs -j /mnt/data/xen/disks/ext3root.img</i>
</pre>

</body>
</section>
<section>
<title>Configuration d'un domaine</title>
<body>

<p>
Ensuite, nous allons créer le fichier de configuration Xen pour un domaine.
Vous pouvez enregistrer ces fichiers de configuration où vous le désirez, par
exemple dans <path>/mnt/data/xen/configs</path>. À titre d'exemple, nous allons
créer un fichier de configuration pour un petit environnement Gentoo qui va
utiliser l'image disque créée précédemment&nbsp;:
</p>

<pre caption="Création du fichier de configuration d'un domaine">
~# <i>nano -w /mnt/data/xen/configs/gentoo</i>

kernel = "/mnt/data/xen/kernel/kernel-2.6.x.y-xen"
memory = 512
name   = "gentoo"
<comment>(Établissez l'image du disque sur le périphérique virtuel /dev/sda1)</comment>
disk   = ['file:/mnt/data/xen/disks/ext3root.img,sda1,w']
root   = "/dev/sda1 ro"
</pre>

<p>
Si vous utilisez un périphérique de bloc (en tant que volume LVM ou que
partition) pour le disque, utilisez 'phy:' à la place de 'file:' et laissez le
/dev. Par exemple&nbsp;:
</p>

<pre caption="Utilisation d'un périphérique de type bloc">
<comment>(Volume LVM)</comment>
disk = [ 'phy:lvm/xen-guest-root,sda1,w' ]

<comment>(Partition physique)</comment>
disk = [ 'phy:sdb6,sda1,w' ]
</pre>

<p>
Vous pouvez trouver quelques exemples de fichiers de configuration dans
<path>/etc/xen</path>.
</p>

</body>
</section>
<section>
<title>Démarrage du nouveau domaine</title>
<body>

<p>
À présent, nous avons tout paramétré et nous pouvons lancer le nouveau domaine.
Si l'image disque contient un système d'exploitation, on peut juste créer et
attacher le domaine en utilisant la commande <c>xm</c> (gestionnaire Xen)&nbsp;:
</p>

<pre caption="Création et démarrage du nouveau domaine">
~# <i>xm create /mnt/data/xen/configs/gentoo -c</i>
</pre>

<p>
Le domaine devra être démarré à l'intérieur du terminal depuis lequel vous
exécutez la commande. Toutefois, dans notre cas, l'image disque est vide donc
le domaine ne va pas initialiser quelque chose d'intéressant. Pour éviter cela,
vous pouvez monter l'image en boucle (N.D.T.&nbsp;: «&nbsp;loop-mount&nbsp;»)
et installer Gentoo comme vous en avez l'habitude.
</p>

<p>
Si vous voulez vous déconnecter du domaine, appuyez sur <path>Ctrl+]</path>.
Vous pouvez toujours vous reconnecter à la console des domaines en utilisant
<c>xm console gentoo</c>. Toutefois, il n'y a qu'une seule console par domaine,
n'utilisez donc cette commande que lorsque vous ne pouvez pas accéder au
domaine autrement (par exemple, à travers SSH).
</p>

</body>
</section>
</chapter>
<chapter>
<title>Le réseau sur les domaines non privilégiés</title>
<section>
<title>Introduction</title>
<body>

<p>
Xen propose au moins deux façons de configurer votre réseau (virtuel)&nbsp;:
<e>le routage</e> et <e>le pont réseau</e>.
</p>

<p>
En choisissant la méthode du <e>routage</e>, l'interface interne au domaine non
privilégié est connectée à l'interface virtuelle de votre domaine principal.
Sur votre domaine privilégié (domaine 0), l'interface virtuelle est reliée avec
<path>eth0</path>. L'interface de votre domaine non privilégié devra avoir une
adresse IP contenue dans le même réseau que l'interface de votre domaine 0.
Toute communication utilisant cette adresse IP peut seulement passer par le
domaine privilégié à moins que vous ayez défini des règles de routage
spécifiques.
</p>

<p>
Avec le mode <e>pont réseau</e>, votre interface réseau par défaut sur le
domaine principal devient un pont qui accepte les connexions aux domaines
virtuels ainsi qu'à l'adresse IP de votre domaine privilégié.
</p>

</body>
</section>
<section>
<title>Les interfaces routées</title>
<body>

<p>
Avant de paramétrer l'interface sur votre domaine non privilégié, assurez-vous
que les pilotes <path>netloop</path> et <path>netbk</path> de Xen sont chargés.
Un petit conseil&nbsp;: si vous avez mis <path>netloop</path> en tant que
module, chargez-le avec <c>nloopbacks=0</c> afin qu'il ne crée pas d'interfaces
inutiles vers le périphérique de boucle locale. Ensuite, éditez votre fichier
de configuration de domaine et ajoutez-lui une instruction <c>vif</c>.
</p>

<pre caption="Configuration d'une interface virtuelle">
~# <i>nano -w /mnt/data/xen/configs/gentoo</i>

<comment>(Ajout d'une instruction vif)</comment>
vif    = [ 'ip=192.168.1.101, vifname=veth1' ]
</pre>

<p>
Dans l'exemple ci-dessus, l'interface sera créée pour le domaine non privilégié
(dans lequel elle s'appellera <path>eth0</path>) et Xen va s'assurer que
l'adresse 192.168.1.101 est bien joignable depuis le domaine d'administration
à travers l'interface <path>veth1</path>.
</p>

<p>
Cela ne signifie pas que l'interface virtuelle <path>eth0</path> se verra
automatiquement assigner l'adresse IP 192.168.1.101, mais plutôt que si vous
ne lui donnez pas cette adresse IP, elle ne sera pas connectée au domaine
principal et donc ne sera pas joignable.
</p>

<p>
À présent, éditez le fichier <path>/etc/xen/xend-config.sxp</path> comme suit
afin de sélectionner la configuration du réseau par routage&nbsp;:
</p>

<pre caption="Édition du fichier xend-config.sxp">
~# <i>nano -w /etc/xen/xend-config.sxp</i>

<comment>(Commentez les lignes suivantes)</comment>
<i>#</i>(network-script network-bridge)
<i>#</i>(vif-script vif-bridge)

<comment>(Activez les lignes suivantes)</comment>
(network-script network-route)
(vif-script vif-route)
</pre>

</body>
</section>
<section>
<title>Les interfaces pontées</title>
<body>

<p>
Contrairement aux interfaces routées, vous avez besoin de charger le pilote
<path>netloop</path> avec <c>nloopbacks=1</c> (ou plus) ainsi que les pilotes
additionnels de boucle locale qui seront utilisés pour créer le pont réseau.
Pour les autres modules, vous avez encore besoin du module <path>netbk</path>
ainsi que des fonctionnalités de pont réseau (module <path>bridge</path> si
compilé en tant que tel).
</p>

<p>
Maintenant, éditez votre domaine virtuel et ajoutez-lui l'instruction
<c>vif</c>&nbsp;:
</p>

<pre caption="Configuration d'une interface virtuelle">
~# <i>nano -w /mnt/data/xen/configs/gentoo</i>

<comment>(Ajout de l'instruction vif)</comment>
vif    = [ 'ip=192.168.1.101, vifname=veth0' ]
</pre>

<p>
À présent, éditez <path>/etc/xen/xend-config.sxp</path> comme suit afin de
sélectionner la configuration par pont réseau&nbsp;:
</p>

<pre caption="Édition du fichier xend-config.sxp">
~# <i>nano -w /etc/xen/xend-config.sxp</i>

<comment>(Activez les lignes suivantes)</comment>
(network-script network-bridge)
(vif-script vif-bridge)

<comment>(Commentez les lignes suivantes si ce n'est pas déjà fait)</comment>
<i>#</i> (network-script network-route)
<i>#</i> (vif-script vif-route)
</pre>

<p>
Par défaut, le pont va contenir n'importe quelle interface qui est configurée
comme étant l'interface par défaut (le périphérique qui est listé sous la
passerelle par défaut à travers <c>ip route list</c>). Si vous voulez
éviter ce comportement, éditez le fichier <path>xend-config.sxp</path> comme
ceci&nbsp;:
</p>

<pre caption="Édition du fichier xend-config.sxp pour changer la configuration du pont réseau">
~# <i>nano -w /etc/xen/xend-config.sxp</i>

<comment>(Éditez la ligne network-script)</comment>
(network-script <i>'</i>network-bridge <i>netdev=eth0 bridge=xenbr0 vifnum=0'</i>)
</pre>

<p>
Une fois que la configuration est faite, redémarrez le script d'exécution
<c>xend</c> pour que Xen construise le pont réseau&nbsp;:
</p>

<pre caption="Redémarrage du démon xend">
~# <i>/etc/init.d/xend restart</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>Des ressources pour aller plus loin</title>
<section>
<title>Documentation de Xen</title>
<body>

<ul>
<li>
 <uri link="http://tx.downloads.xensource.com/downloads/docs/user/">Le manuel
 de l'utilisateur Xen</uri>
</li>
<li>
 <uri link="http://xen.xensource.com/documentation.html">La documentation de la
 communauté de Xen</uri>
</li>
<li>
 <uri link="http://wiki.xensource.com/xenwiki/">Le wiki de Xen</uri>
</li>
</ul>

</body>
</section>
<section>
<title>Les outils pour Xen</title>
<body>

<ul>
<li>
 <uri
 link="http://virt-manager.et.redhat.com/">app-emulation/virt-manager</uri>
 est un outil graphique permettant l'administration des machines virtuelles
</li>
</ul>

</body>
</section>
</chapter>
</guide>
