<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet href="../../xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/tw/java.xml">
<title>Gentoo Java Guide</title>
<author title="Author and Editor"><mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail></author>
<author title="Translator"><mail link="palatis@gentoo.org.tw">【Palatis】</mail></author>
<author title="Reviewer"><mail link="bennyc@gentoo.org">BennyC</mail></author>

<abstract>Gentoo 的 Java 使用和開發指南。</abstract>

<version>0.1.1</version>
<date>June 25, 2002</date>
<!-- Translate date : 19 April 2003 -->

<chapter>
	<title>安裝 JDK/JRE</title>
	<section>
		<title>導覽</title>
		<body>
		<p>Gentoo 提供幾種不同的 JDK 和 JRE。預設的是 Blackdown JDK/JRE，因為它們不需註冊就可以免費 (啤酒) 下載。</p>
		<note>如果 kaffe 變成了 JRE/JDK 的 "丟進來" 替代 (drop-in replacement)，它很有可能變成我們的預設值。</note>
		<p> Sun JDK/JRE 和 IBM JDK/JRE 一般都比較快，不過您得花更多功夫得到它們。它們要求您下載之前先同意一份合約 (IBM 還要求您註冊)。</p>
		<p>我們寫給 Sun 和 IBM JDK/JRE 的 ebuilds 會告訴您那裡可以下載它們。</p>
		</body>
	</section>

	<section>
		<title>安裝 Sun/IBM JDK/JREs</title>
		<body>
		<p>如果您執行 <c>emerge sun-jdk-1.3.1</c> 或 <c>emerge ibm-jdk-1.3.1</c>，您會被要求自己下載壓縮檔。這是由於 Sun JDK/JRE (線上同意授權) 以及 IBM JDK/JRE 的授權方法的關係。</p>
		<note>我們也提供 sun-jdk-1.4.0 的 ebuild，不過不是所有的套件都能正常地跟 Java 1.4 工作，所以您想使用 1.4.0 JDK 的話就得靠自己了。</note>
		<p>您應該將檔案下載至 <path>/usr/portage/distfiles</path>。下載完成後，您可以重新執行 emerge 命令，然後 JDK/JRE 就會正確的被安裝在 <path>/opt</path>。</p>
		</body>
	</section>
</chapter>

<chapter>
	<title>設定您的 JDK/JRE</title>

	<section>
		<title>導覽</title>
		<body>
		<p>Gentoo 擁有能夠讓您安裝多個 JDK 和 JRE 而且不會打架的特異功能。不過有幾點要注意的，如下列所示。</p>
		<p>使用 <c>java-config</c> 這個小工具，您可以設定系統的 Java 預設值，當然您得是根 (root) 使用者。使用者也可以用 <c>java-config</c> 來設定他們自己的個人預設值，如果和他們想使用系統預設值不同的 Java 的話。</p>
		</body>
	</section>

	<section>
		<title>設定預設的 JDK/JRE</title>
		<body>

		<p>執行 <c>java-config --list-available-vms</c> 可以列出目前系統上所有可用的 JRE 和 JDK，如下：</p>
<pre caption = "列出可用的虛擬機器">
[%1 ~] java-config --list-available-vms
[blackdown-jdk-1.3.1] Blackdown JDK 1.3.1 (/etc/env.d/java/20blackdown-jdk-1.3.1)
[blackdown-jre-1.3.1] Blackdown JRE 1.3.1 (/etc/env.d/java/20blackdown-jre-1.3.1)
[ibm-jdk-1.3.0] IBM JDK 1.3.0 (/etc/env.d/java/20ibm-jdk-1.3.0)
[ibm-jdk-1.3.1] IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
[ibm-jre-1.3.1] IBM JRE 1.3.1 (/etc/env.d/java/20ibm-jre-1.3.1)
[sun-jdk-1.4.0] Sun JDK 1.4.0 (/etc/env.d/java/20sun-jdk-1.4.0)
</pre>
		<p>在引號 <path>"[]"</path> 中的名稱是虛擬機器的詳細名稱和 ID。您將這些 ID 送給 <c>java-config --set-system-vm</c> 來設定想使用的虛擬機器，如下：</p>
<pre caption = "設定系統虛擬機器">
[#1 ~] java-config --set-system-vm=ibm-jdk-1.3.1
Now using IBM JDK 1.3.1 (/etc/env.d/java/20ibm-jdk-1.3.1)
</pre>
		<note>您必須以根 (root) 使用者的身份來執行 --set-system-vm。</note>
		<p>在您使用特定的虛擬機器 ID 執行 <c>java-config --set-system-vm</c> 之後，您必須重新建立您的 /etc/profile.env，如下：</p>
<pre caption = "重建 /etc/profile.env" >
[#1 ~] env-update
</pre>
		<p>在這之後，您可能會想重新登入，或者重新引入 <path>/etc/profile</path> 環境設定。</p>
		<p>如果您是普通使用者，您可以使用 <c>java-config --set-user-vm</c>，這將建立擁有所有必須環境變數的 <path>$HOME/.gentoo/java-env</path> 檔案。您可以普通的在殼 (shell) 的啟始命令稿中引入這個檔案 (我的是 <path>$HOME/.zshenv</path>)。</p>
		</body>
	</section>

	<section>
		<title>設定預設的 CLASSPATH</title>
		<body>
		<p><c>java-config</c>也可以用來設定系統預設的 CLASSPATH，當然也可以設定使用者個人的預設 CLASSPATH。</p>
		<p>首先，您可能會想看看有什麼函式庫可以放進您的 CLASSPATH，這樣：</p>
<pre caption = "列出類別">
[%1 ~] java-config --list-available-packages
[ant] No description (/usr/share/ant/classpath.env)
[java-gnome] No description (/usr/share/java-gnome/classpath.env)
[java-gtk] No description (/usr/share/java-gtk/classpath.env)
[log4j] "" (/usr/share/log4j/package.env)
</pre>
		<note>這些套件目前還沒有確切的敘述，這個是我們會再不久的將來加入的功能。</note>
		<p>再次的，在於 <path>"[]"</path> 中的名稱是您必須傳送給 <c>java-config --set-system-classpath</c> 的 ID，所以：</p>
<pre caption = "設定類別目錄">
java-config --set-system-classpath=log4j,java-gtk,java-gnome
</pre>
		<note>目前的目錄 (.) 不會出現在系統類別目錄中，它應該被加入根 (root) 使用者的登入設定裡。</note>
		<p>再次的，您必須執行 <c>env-update</c> 以更新您的系統環境設定，而您可能也會想重新登入或重新引入 <path>/etc/profile</path>。</p>
		<p>對一般使用者，<c>java-config --set-user-classpath</c> 會建立 <path>$HOME/.gentoo/java-env-classpath</path>，它會自動被 <path>$HOME/.gentoo/java-env</path> 引入。</p>
		</body>
	</section>
</chapter>

<chapter>
	<title>更多資源</title>
	<section>
		<title>離線資源</title>
		<body>
		<ul>
			<li>java-config 的男人頁 (man page)</li>
			<li><c>java-config --help</c></li>
			<li><path>/usr/bin/java-config</path> 命令稿本身</li>
		</ul>
		</body>
	</section>

	<section>
		<title>線上資源</title>
		<body>
		<ul>
			<li><uri link="http://lists.gentoo.org/pipermail/gentoo-dev/">gentoo-dev </uri>、<uri link="http://lists.gentoo.org/pipermail/gentoo-user/">gentoo-user</uri> 郵件列表存檔</li>
			<li>irc.openprojects.net 上的 #gentoo 頻道</li>
		</ul>
		</body>
	</section>
</chapter>

<chapter>
	<title>注意事項</title>
	<section>
		<title>大致上</title>
		<body>
		<p>如果您使用某個 JRE 作為預設的虛擬機器，您可能不會永遠有個順手的 <c>javac</c> ，除非您手動製作符號連結來解決這個問題。</p>
		<p>如果可以用的話，Jikes 會被用來編譯某些大型套件。我們希望以後能夠使用 Jikes 來編譯所有和 java 有關的套件，所以某些 JDK 的相依性可以用 JRE 的來取代。</p>
		<p>某些 Portage 版本，做 <c>emerge --world update</c> 的時候會安裝 JDK ，不管您有沒有安裝過它。這是個以知的臭蟲，而且會在以後的 Portage 版本改進。</p>
		</body>
	</section>
</chapter>
</guide>
