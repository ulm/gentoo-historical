<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/tw/handbook/Attic/hb-install-sparc-kernel.xml,v 1.2 2004/04/28 11:33:47 bennyc Exp $ -->

<!-- rev 1.2 by Benny -->

<sections>
<section>
<title>時區</title>
<body>

<p>
為了讓你的系統知道它的位置在那裡，你將需要設定你的系統時區。到
<path>/usr/share/zoneinfo</path> 尋找你的時區，然後使用 <c>ln</c> 建立一個連接到
<path>/etc/localtime</path>。
</p>

<pre caption="設定時區資訊">
# <i>ls /usr/share/zoneinfo</i>
<comment>（假設你要使用 GMT）</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>安裝核心原始碼</title>
<subsection>
<title>選擇一個核心</title>
<body>

<p>
Linux 的核心是所有版本的最中心，也是最重要的。他位於使用者程式和系統硬體之間。
Gentoo 提供使用者很多可用的核心原始碼。你可以到 <uri
link="/doc/tw/gentoo-kernel.xml">Gentoo 核心 指南</uri> 查看我們所提供的核心。
</p>

<p>
使用 sparc 系統的使用者，我們提供著 <c>vanilla-source</c> （常常被其他 Linux
開發者用來開發成其他核心的基礎版本），<c>development-sources</c>（預設的 2.6
核心原始碼）和 <c>sparc-sources</c> （針對 sparc 的使用者所調整過的原始碼）。
如果你是在無網路的狀況下安裝，你將需要使用 <c>vanilla-sources</c> 或是
<c>sparc-sources</c>。
</p>

<p>
選擇適合你的核心原始檔然後使用 <c>emerge</c> 安裝。
</p>

<p>
下面的例子我們將安裝 <c>vanilla-sources</c>（因為這個核心原始碼適合無網路
狀態的安裝）。當然，請更換為你想要安裝的核心：
</p>

<pre caption="安裝核心原始碼">
# <i>emerge vanilla-sources</i>
</pre>

<p>
當你查看 <path>/usr/src</path> 你將會看到一個 <path>linux</path> 的連接連到
你所選的核心：
</p>

<pre caption="觀看核心原始碼目錄連接">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.4.26
</pre>

<p>
如果你碰到的不是這樣（例：連接連到其他的核心目錄）你將需要在繼續往下之前更改連接
：
</p>

<pre caption="更改核心連接目錄">
# <i>rm /usr/src/linux &amp;&amp; ln -s /usr/src/linux-2.4.26 /usr/src/linux</i>
</pre>

<p>
現在我們該設定以及編譯你的核心了。
</p>

<p>
如果你想要手動編譯你的核心，請從 <uri link="#doc_chap3">預設：手動設定</uri> 
繼續。如果你想要使用 <c>genkernel</c> 請從 <uri 
link="#doc_chap4">其他選擇：使用 genkernel</uri> 繼續。
</p>

</body>
</subsection>
</section>
<section>
<title>手動設定</title>
<subsection>
<title>介紹</title>
<body>

<p>
手動設定核心常常被 Linux 使用者認為最難完成的步驟。雖然不假 -- 但是當你手動編譯
幾次核心後，你應該不會覺得它有多難 ;)
</p>

<p>
但是，<e>唯一</e> 的重點就是：你必須要了解你的系統才可以開始手動編譯。系統上多數
的資料可以從 <path>/proc/pci</path> （如果可以的話使用 <c>lspci</c>）查看。你也
可以執行 <c>lsmod</c> 看看 LiveCD 使用那些核心模組（這是一個不錯的暗示，教你該
開啟那個選項）。
</p>

<p>
現在到你的核心原始碼目錄然後執行 <c>make menuconfig</c>。這將會啟動一個
ncurses 的設定選單。
</p>

<pre caption="開始 menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
你將會看到一大串的設定部份。我們將列出一些你一定要啟用的選項（不然 Gentoo 無法
完善的工作）。
</p>

</body>
</subsection>
<subsection>
<title>必須開啟的選項</title>
<body>

<p>
首先，開啟 development and experimental code/drivers。你將需要這個，不然
你將無法看見一些其他重要的程式碼或是驅動程式。
</p>

<pre caption="選擇 experimental code/drivers">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
現在到 <c>File Systems</c> 然後選擇要支援的檔案系統。記得<e>不要</e>將它們編成模
組。還有 <c>Virtual memory</c>，<c>/proc file system</c>，<c>/dev file 
system</c> + <c>Automatically munt at boot</c>：
</p>

<pre caption="選擇相關檔案系統">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot

<comment>（除非你是用 2.6 的核心，記得不要選取這個功能：）</comment>
  [ ] /dev/pts file system for Unix98 PTYs

<comment>（按照你系統所需要的檔案系統開啟以下選項）</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
2.6 核心的使用者可以在 <c>File systems</c> 的子部份 <c>Pseudo filesystems</c> 
下內找到上面所談到的選項。
</note>

<p>
如果你需要透過 PPPoE 連線到網路或是數據機撥接，你將需要以下的核心選項：
</p>

<pre caption="選擇 PPPoE 相關驅動程式">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<note>
2.6 核心的使用者可以在 <c>Device Drivers</c> 的子部份 <c>Networking support</c>
找到上面所談到的選項。
</note>

<p>
雖然 <c>PPP over Ethernet</c> 選項只是有在 <c>rp-pppoe</c> 設定為核心 PPPoE
時需要，但是這兩個壓縮的選項不會造成錯誤。
</p>

<note>
2.6 核心的使用者可以在 <c>Device Drivers</c> 下找到上面所談到的選項。
</note>

<p>
如果你需要，不要忘了為你的網路卡加入核心的支援。
</p>

<p>
首先啟用正確的 bus 支援：
</p>

<pre caption="啟用 SBUS/UPA">
Console drivers ---&gt;
  Frame-buffer support ---&gt;
    [*] SBUS and UPA framebuffers             
      [*] Creator/Creator3D support     <comment>（只是用於多個 Ultras 的 UPA slot 介面卡）</comment>
    [*] CGsix (GX,TurboGX) support      <comment>(Only for SBUS slot adapter used in many SPARCStations)</comment>
</pre>

<p>
當然你也會要 OBP 的支援：
</p>

<pre caption="啟用 OBP 支援">
Misc Linux/SPARC drivers ---&gt;
  [*]  /dev/openprom device support
</pre>

<p>
你也需要 SCSI 相關的支援：
</p>

<pre caption="Activating SCSI-specific support">
SCSI support ---&gt;
  SCSI low-level drivers ---&gt;
    &lt;*&gt; Sparc ESP Scsi Driver             <comment>（只適用於 SPARC ESP 版上的 SCSI 介面卡）</comment>
    &lt;*&gt; PTI Qlogic, ISP Driver            <comment>（只適用於 PTI 或是 QLogic 上的 SBUS SCSI 控制卡）</comment>
    &lt;*&gt; SYM53C8XX Version 2 SCSI support  <comment>（只適用於 Ultra 60 版上的 SCSI 介面卡）</comment>
</pre>

<p>
要支援你的網路卡，選擇以下其中一個：
</p>

<pre caption="啟用網路卡支援">
Network device support ---&gt;
  Ethernet (10 or 100Mbit) ---&gt;
    &lt;*&gt; Sun LANCE support                   <comment>（只適用於 SPARCStation，老就一點的 Ultra 系統，和 Sbus 選項）</comment>
    &lt;*&gt; Sun Happy Meal 10/100baseT support  <comment>（只適用於 Ultra；也支援著在 PCI 和 Sbus 上的 "qfe" quad-ethernet）</comment>
</pre>

<p>
當你完成核心設定時，請從 <uri link="#compiling">編譯和安裝</uri>。完成編譯時請
檢察核心的檔案大小：
</p>

<pre caption="檢查核心的檔案大小">
# <i>ls -lh vmlinux</i>
-rw-r--r--    1 root     root         2.4M Oct 25 14:38 vmlinux
</pre>

<p>
如果（未壓縮的）檔案大小大於 2.5MB （Sparc32）或是 3.5Mb （Sparc64），你將需要
重新編譯你的核心直到檔案大小不會超過這些限制。其中的方法就是將其他非開機相關的選項
編為模組。
</p>

<note>
如果你使用 2.6.3 以後的核心，sparc64 可以支援高達 7.5 Mb的核心。
</note>

<p>
如果你的核心 tad 太大，你可以嘗試使用 <c>strip</c> 指令：
</p>

<pre caption="Strip 核心">
# <i>strip -R .comment -R .note vmlinux</i>
</pre>

</body>
</subsection>
<subsection id="compiling">
<title>編譯和安裝</title>
<body>

<p>
現在你的核心已經設定完成了，我們該來編譯然後安裝它。離開核心設定，然後執行
<c>make dep &amp;&amp; make vmlinux modules modules_install</c>：
</p>

<pre caption="編譯核心">
<comment>（針對核心 2.4，sparc32）</comment>
# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>

<comment>（針對核心 2.4，sparc64）</comment>
# <i>make dep &amp;&amp; make vmlinux image modules modules_install</i>

<comment>（針對核心 2.6，sparc32）</comment>
# <i>make &amp;&amp; make modules_install</i>

<comment>（針對核心 2.6，sparc64）</comment>
# <i>make &amp;&amp; make image modules_install</i>
</pre>

<p>
當核心完成編譯時，將核心映像檔複製到 <path>/boot</path>。
</p>

<pre caption="安裝核心">
<comment>（針對核心 2.4，sparc32）</comment>
# <i>cp vmlinux /boot/kernel-2.4.26</i>

<comment>（針對核心 2.4，sparc64）</comment>
# <i>cp arch/sparc64/boot/image /boot/kernel-2.4.26</i>

<comment>（針對核心 2.6，sparc32）</comment>
# <i>cp arch/sparc/boot/image /boot/kernel-2.6.5</i>

<comment>（針對核心 2.6，sparc64）</comment>
# <i>cp arch/sparc64/boot/image /boot/kernel-2.6.5</i>

<comment>（不要忘了將 System.map 的檔案複製過去）</comment>
# <i>cp System.map /boot</i>
</pre>

<p>
你也可以將你的核心設定檔備份到 <path>/boot</path>，以防萬一 :)
</p>

<pre caption="備份你的核心設定檔">
# <i>cp .config /boot/config-2.4.26</i>
</pre>

<p>
現在請從 <uri link="#kernel_modules">安裝分開的核心模組</uri>。
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>安裝分開的核心映像檔和模組</title>
<subsection>
<title>設定模組</title>
<body>

<p>
你將需要將想要開機時自動載入的模組放到
<path>/etc/modules.autoload.d/kernel-2.4</path> （或是
<path>kernel-2.6</path>）。你也可以加上模組的選項。
</p>

<p>
要查看所有可用的模組，執行 <c>find</c> 指令。不要忘了將 "&lt;kernel
version&gt;"更改為你剛剛編譯的版本：
</p>

<pre caption="查看所有可用的版本">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
舉例來說，要自動載入 <c>3c59x.o</c> 模組，編輯 <path>kernel-2.4</path> 或是 
<path>kernel-2.6</path>：
</p>

<pre caption="編輯 /etc/modules.autoload.d/kernel-2.4">
<comment>（2.4核心的範例）</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 或是 kernel-2.6">
3c59x
</pre>

<p>
現在執行 <c>modules-update</c> 來套用你的變更到 <path>/etc/modules.conf</path>：
</p>

<pre caption="執行 modules-update">
# <i>modules-update</i>
</pre>

<p>
現在請從 <uri link="?part=1&amp;chap=8">設定你的系統</uri> 繼續安裝。
</p>

</body>
</subsection>
</section>
</sections>
