<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/tw/handbook/Attic/hb-working-portage.xml,v 1.1 2004/03/06 07:16:01 bennyc Exp $ -->

<!-- reve 1.23 by Benny -->

<sections>
<section>
<title>索取套件資訊</title>
<subsection>
<title>所有工具之王：emerge</title>
<body>

<p>
大多數的使用者將會用的最主要的 Portage 工具，也就是 <c>emerge</c>。我們在安裝時已
經使用過了，但是我們只是簡單的介紹。這章將會更加詳細的解釋 <c>emerge</c> 然後教你
使用 <c>emerge</c> 修理所有相關的軟體需求。
</p>

<p>
<c>emerge</c> 是一個用來安裝，移除，查詢，和維護軟體套件的指令。他是一個
<c>ebuild</c> 的使用介面；有興趣成為 Gentoo 高手的人將需要了解稍後介紹的
<c>ebuild</c>。現在，我們將專心的討論 <c>ebuild</c> 沒有的 <c>emerge</c> 功能（
如解決相依性和搜尋 Portage Tree，等等。）。
</p>

<p>
<c>emerge</c> 是一個對於 Gentoo 使用者來說最為重要的工具，你可以執行 
<c>man emerge</c> 查看它包含的詳細說明。你也可以在文字介面執行 
<c>emerge --help</c> 查看。
文件
</p>

<pre caption="索取 emerge 的說明">
# <i>man emerge</i>
# <i>emerge --help</i>
</pre>

</body>
</subsection>
<subsection>
<title>Portage Tree</title>
<body>

<p>
在我們繼續介紹 <c>emerge</c> 之前，讓我們先看看 Portage Tree。到
<path>/usr/portage</path> 的目錄，你將會看到一清單的目錄。我們將使用 <c>ls
-classify</c> 然顯示出目錄的內容並且在目錄後面會加上 "/"。
</p>

<pre caption="觀看 Portage Tree">
# <i>cd /usr/portage; ls --classify</i>
app-admin/       dev-ml/            gnome-libs/     net-print/
app-arch/        dev-perl/          gnome-office/   net-wireless/
app-benchmarks/  dev-php/           header.txt      net-www/
app-cdr/         dev-python/        incoming/       net-zope/
app-crypt/       dev-ruby/          jython/         packages/
app-dicts/       dev-tcltk/         kde-apps/       profiles/
app-doc/         dev-tex/           kde-base/       releases/
app-editors/     dev-util/          kde-i18n/       scripts/
app-emacs/       distfiles/         kde-libs/       sec-policy/
app-emulation/   eclass/            licenses/       skel.ChangeLog
app-games/       experimental/      media-fonts/    skel.ebuild
app-gnustep/     files/             media-gfx/      skel.metadata.xml
app-i18n/        fresco-base/       media-libs/     snapshots/
app-misc/        games-action/      media-plugins/  sys-apps/
app-office/      games-arcade/      media-radio/    sys-build/
app-pda/         games-board/       media-sound/    sys-cluster/
app-portage/     games-emulation/   media-tv/       sys-devel/
app-sci/         games-engines/     media-video/    sys-fs/
app-shells/      games-fps/         metadata/       sys-kernel/
app-text/        games-kids/        net-analyzer/   sys-kmods/
app-vim/         games-misc/        net-apache/     sys-libs/
app-xemacs/      games-mud/         net-dialup/     unix2tcp/
berlin-base/     games-puzzle/      net-dns/        x11-base/
dev-ada/         games-roguelike/   net-firewall/   x11-libs/
dev-cpp/         games-rpg/         net-fs/         x11-misc/
dev-db/          games-server/      net-ftp/        x11-plugins/
dev-dotnet/      games-simulation/  net-im/         x11-terms/
dev-embedded/    games-sports/      net-irc/        x11-themes/
dev-games/       games-strategy/    net-libs/       x11-wm/
dev-haskell/     games-util/        net-mail/       xfce-base/
dev-java/        glep/              net-misc/       xfce-extra/
dev-lang/        gnome-apps/        net-nds/
dev-libs/        gnome-base/        net-news/
dev-lisp/        gnome-extra/       net-p2p/
</pre>

<p>
就如你所見，Portage tree 有多個子目錄。大多數的目錄都是 Gentoo 套件的 
<e>類別</e>，放著叫做 <e>ebuild</e> 的檔案。舉例來說，看看 
<path>app-office</path>：
</p>

<pre caption="查看一個類別">
# <i>cd app-office; ls --classify</i>
abiword/     gnotime/   kmymoney2/  ooodi/              plan/     timestamp.x
dia/         gnucash/   koffice/    oooqs/              qhacc/
dia2code/    gnumeric/  lxbank/     openoffice/         sc/
facturalux/  ical/      lyx/        openoffice-bin/     scribus/
gaby/        kbudget/   mdbtools/   openoffice-ximian/  siag/
gnofin/      khacc/     mrproject/  phprojekt/          texmacs/
</pre>

<p>
在這個類別內，你將可以找到所有適合放在這個目錄內的套件，其中各軟體將以子目錄的方
式分開。讓我們看看 <c>openoffice</c> 套件：
</p>

<pre caption="觀看一個套件">
# <i>cd openoffice; ls --classify</i>
ChangeLog  files/        openoffice-1.0.3-r1.ebuild  openoffice-1.1.0-r2.ebuild
Manifest   metadata.xml  openoffice-1.1.0-r1.ebuild  openoffice-1.1.0.ebuild
</pre>

<p>
還記得我們跟你說過一個 Gentoo 的套件是叫做 ebuild 嗎？在我們的範例目錄裡將會看到
四個 ebuild。他們的名字都是很明顯：他們不同的只是版本。你將可以查看這些套件：它
們只是程序。因為現在我們只討論如何使用 Gentoo 所以我們不會討論這些程序。
</p>

<p>
其他的檔案為 <path>ChangeLog</path>（一個包含某個套件的更新清單），
<path>Manifest</path> （包含著 checksum 和目錄裡面所有檔案的大小） 和
<path>metadata.xml</path> （ 包含著更多關於套件的資訊，如相關開發的團隊 -- 叫做
<e>herd</e> -- 其更多的介紹）。
</p>

<p>
在 <path>files</path> 的目錄，你將會找到其他檔案，這些為 Portage 所需要的：
digest（checksum 和個別套件的版本需要），補釘，和範例設定檔，等等。
</p>

<pre caption="觀看其他檔案">
# <i>cd files; ls --classify</i>
1.0.3/  digest-openoffice-1.0.3-r1  digest-openoffice-1.1.0-r1
1.1.0/  digest-openoffice-1.1.0     digest-openoffice-1.1.0-r2
# <i>cd 1.1.0; ls --classify</i>
fixed-gcc.patch      ooffice-wrapper-1.3
newstlportfix.patch  openoffice-1.1.0-linux-2.6-fix.patch
no-mozab.patch       openoffice-1.1.0-sparc64-fix.patch
nptl.patch
</pre>

<p>
如果你回到 Portage tree 的主目錄（<path>/usr/portage</path>）你將會發現還有其他非
套件的目錄。我們將在稍後解釋這點。
</p>

</body>
</subsection>
<subsection>
<title>搜尋套件</title>
<body>

<p>
如果你剛接觸到 Gentoo 或是 Linux，你或許不知道該用什麼工具完成什麼工作。要搜尋軟
體，<c>emerge</c> 可以透過 <e>套件名稱</e> 或是 <e>套件名稱</e> 加上 <e>說明</e>
來進行套件的搜尋。
</p>

<p>
要以名稱搜尋 Portage tree，使用 <c>emerge searc</c>。舉例來說，要搜尋 
<c>mozilla</c>：
</p>

<pre caption="顯示關於 mozilla 的資訊">
# <i>emerge search mozilla</i>
Searching...   
[ Results for search key : mozilla ]
[ Applications found : 5 ]
<comment>（為了方便閱讀，移除了一些部份）</comment>
*  net-www/mozilla
      Latest version available: 1.5-r1
      Latest version installed: 1.4-r3
      Size of downloaded files: 29,153 kB
      Homepage:    http://www.mozilla.org
      Description: The Mozilla Web Browser

*  net-www/mozilla-firebird
      Latest version available: 0.7
      Latest version installed: [ Not Installed ]
      Size of downloaded files: 37,850 kB
      Homepage:    http://www.mozilla.org/projects/firebird/
      Description: The Mozilla Firebird Web Browser
<comment>（﹍）</comment>
</pre>

<p>
如果你要依照介紹搜尋使用 <c>--searchdesc</c> 參數：
</p>

<pre caption="搜尋介紹">
# <i>emerge --searchdesc mozilla</i>
Searching...   
[ Results for search key : mozilla ]
[ Applications found : 10 ]
<comment>（為了方便閱讀，移除了一些部份）</comment>
*  dev-libs/nss-3.8
      Latest version available: 3.8
      Latest version installed: 3.8
      Size of downloaded files:  2,782 kB
      Homepage:    http://www.mozilla.org/projects/security/pki/nss/
      Description: Mozilla's Netscape Security Services Library that implements PKI support
</pre>

<p>
就如你所見，<c>emerge</c>
將會顯示出該類別和套件的名稱，可使用的版本，目前安裝的版本，下載檔案大小，網址和
簡介。
</p>

<p>
發現新東西了嗎？沒錯，<e>下載檔案</e>。當你告訴 Portage 要安裝一個套件，當然需要
下載原始碼（或是已編譯套件）。他將會先減查 <path>/usr/portage/distfiles</path>
（原始碼）是否有已存在的檔案 或是 <path>/usr/portage/packages/All</path> （已編
譯的套件）可用。如果沒有，它將會下載所有的相關檔案然後放入相關目錄。
</p>

<!--
<note>
Searching the Portage Tree, especially when using <c>- -searchdesc</c>, is very
time consuming. There are other, more performant tools available. We will
describe those in the chapter on <uri link="?part=2&amp;chap=7">Gentoolkit and
Other Tools</uri>.
</note>
-->

</body>
</subsection>
<subsection>
<title>觀看 ChangeLog</title>
<body>

<p>
當正在遊覽 Portage tree 時，你將會看到每個套件都會友一個 ChangeLog。你也可以使用
<c>emerge</c> 來查看這些版本跟版本之間的更動。使用 <c>--pretend --changelog</c>
（或使簡短的 <c>-pl</c>）選項。我們將使用 <c>gnumeric</c> 為這次的範例：
</p>

<pre caption="查看 gnumeric 的 ChangeLog">
# <i>emerge --pretend --changelog gnumeric</i>
<comment>（為了方便閱讀，移除了一些部份）</comment>
*gnumeric-1.2.2

  27 Nov 2003; foser &lt;foser@gentoo.org&gt; gnumeric-1.2.2.ebuild :
  New release, requested in #34492
  updated deps

  12 Nov 2003; Jason Wever &lt;weeve@gentoo.org&gt; gnumeric-1.2.0.ebuild:
  Marked stable on sparc, fixes bug #32405.

  14 Oct 2003; Jason Wever &lt;weeve@gentoo.org&gt; gnumeric-1.0.8.ebuild:
  Added ~sparc keyword.  Fixes bug #31150.
</pre>

</body>
</subsection>
</section>
<section>
<title>更新 Portage</title>
<subsection>
<title>介紹</title>
<body>

<p>
搜尋 Portage 是很不錯，但是如果你不常常更新你的 Portage Tree，你將會被限制於老舊
的版本。這代表著你的系統很快就會變得老舊因為你無法更新一些臭蟲或是安全性的漏洞。
</p>

<p>
更新 Portage Tree 有多個方法。最受歡迎的方法就是使用我們的 <uri
link="/main/en/mirrors.xml">rsync 對映站</uri>。另一個則是使用 Portage 快照（在
防火牆或是無法使用網路連到 rsync 伺服器的方式）。
</p>

</body>
</subsection>
<subsection>
<title>選擇 rsync 對映站</title>
<body>

<p>
我們建議你先選擇一個靠近你的 <uri link="/main/en/mirrors.xml">對映站</uri>。你可
手動的（設定 <path>/etc/make.conf</path> 裡面的 <c>SYNC</c> 變數）或是使用
<c>mirrorselect</c> 自動幫你完成此項工作。當 <c>SYNC</c> 的變數將在稍後講解，我
們現在先討論使用 <c>mirrorselect</c>。首先安裝 <c>mirrorselect</c>：
</p>

<pre caption="安裝 mirrorselect">
# <i>emerge --usepkg mirrorselect</i>
</pre>

<p>
現在執行 <c>mirrorselect</c> 來自動為你選擇對映站（它也會設定 Portage
使用原始碼）：
</p>

<pre caption="執行 mirrorselect">
# <i>mirrorselect -a -s3</i>
</pre>

</body>
</subsection>
<subsection>
<title>更新 Portage</title>
<body>

<p>
要使用 rsync 更新 Portage，只要執行 <c>emerge sync</c>：
</p>

<pre caption="使用 emerge sync 更新 Portage">
# <i>emerge sync</i>
</pre>

<p>
如果失敗（因為網路或是防火牆），你可以嘗試使用 <c>emerge-webrsync</c>，這將會
使用 <c>wget</c> 下載 Portage Tree 快照。這也代表著你可以使用我們在 Gentoo
安裝過程中討論過的代理伺服器。
</p>

<pre caption="使用 emerge-webrsync 更新 Portage">
# <i>emerge-webrsync</i>
</pre>

</body>
</subsection>
</section>
<section>
<title>維護軟體</title>
<subsection>
<title>編譯還是預編？</title>
<body>

<p>
如果你喜歡，Gentoo 提供著套件 ebuild。但是如果你想要安裝這種 ebuild，你可以選擇
<e>編譯</e> 或是 <e>預編</e> 的套件。它們個別有什麼優缺點，不同目標，還是可以一
起使用呢？
</p>

<p>
就如你所猜到的，編譯套件需要很多時間（特別是你有很少的資源或是很大的套件，如
<uri link="http://www.kde.org">KDE</uri>，<uri
link="http://www.openoffice.org">OpenOffice.org</uri>，等等。）。編譯這些套件時
，你可以使用 <c>USE</c> 設定來進行自訂的微調。當然，你也可以定義高效能的選項（在
<c>CFLAGS</c> 和 <c>CXXFLAGS</c> 的變數）來編譯這些套件。
</p>

<p>
使用預編的套件將縮短安裝時間（不需要任何編譯的動作），但是你將會缺少使用 
<c>USE</c> 和 <c>CFLAGS</c> &amp; <c>CXXFLAGS</c> 變數的優點。
</p>

<p>
就如剛剛所說的，預編套件將會被放在 <path>/usr/portage/packages/All</path>
的目錄，而原始碼將會被放在 <path>/usr/portage/distfiles</path>。如果你完成安裝一
個套件，你可以從相關目錄移除它的原始碼或是安裝套件。但是你或許想要保留最新版的套
件/原始碼，如此一來你就不需要在重新安裝的時候重新編譯或是下載了。
</p>

</body>
</subsection>
<subsection>
<title>從原始法安裝軟體</title>
<body>

<p>
好吧，不囉唆了。要安裝一個套件，你將需要使用到 <c>emerge</c> 的指令。如果你不想
要使用任何預編套件，你可以直接使用 <c>emerge &lt;套件名稱&gt;</c> 或是 <c>emerge
&lt;類別&gt;/&lt;套件名稱&gt;</c>。我們將安裝 <c>gnumeric</c> 為範例：
</p>

<pre caption="編譯 gnumeric">
# <i>emerge gnumeric</i>
</pre>

<p>
這將會下載原始碼，然後解開，編譯，然後安裝這個套件到你的系統上。它也會針對相依性
安裝一些依賴的套件。如果你想要查看它依賴著那些套件，使用 <c>--pretend</c> 參數
（或是簡短的 <c>-p</c>）：
</p>

<pre caption="假裝編譯 gnumeric">
# <i>emerge --pretend gnumeric</i>
</pre>

<p>
如果你想要先下載套件和依賴的相關檔案，但是不編譯，那就使用 <c>--fetchonly</c>
參數（或是簡短的 <c>-f</c>）：
</p>

<pre caption="只下載 gnumeric 的原始碼">
# <i>emerge --fetchonly gnumeric</i>
</pre>

<p>
如果你想要查看 <c>emerge</c> 從那裡下載原始碼，將 <c>--fetchonly</c> 和
<c>--pretend</c> 選項一起放入：
</p>

<pre caption="顯示 gnumeric 要下載的原始碼網址">
# <i>emerge --fetchonly --pretend gnumeric</i>
</pre>

<p>
你也可以選擇安裝某個版本的套件。舉例來說，你想要安裝一個比 gnumeric 1.2 還要老舊
的版本你將要輸入：
</p>

<pre caption="安裝一個特定的 gnumeric 版本">
# <i>emerge "&lt;gnumeric-1.2"</i>
</pre>

<p>
其他的選擇為 "&gt;" (之後的）和 "=" （一樣的版本）。
</p>

</body>
</subsection>
<subsection>
<title>安裝預編套件</title>
<body>

<p>
如果你想要安裝預編套件，你應該使用 <c>--usepkg</c> （或是簡短的 <c>-k</c>）選項
。這將會使用 <path>/usr/portage/packages/All</path> 裡面可用的二進位套件。但是
指在套件和版本一樣的情況下有效。
</p>

<pre caption="安裝預編的 gnumeric 套件">
# <i>emerge --usepkg gnumeric</i>
</pre>

<p>
如果你想要使用二進位的套件，也不在乎版本是否相同，你可以使用 <c>--usepkgonly</c>
（或是簡短的 <c>-K</c>）為參數。
</p>

<pre caption="安裝預編的 gnumeric 套件">
# <i>emerge --usepkgonly gnumeric</i>
</pre>

<p>
如果你的系統上沒有預編的套件，你可以從一個對映站使用 <c>emerge</c> 下載。這將會
在 <path>/etc/make.conf</path> 裡面的 <c>PORTAGE_BINHOST</c> 變數內定義。
</p>

<p>
如果你的系統上沒有需要的二進位套件，使用 <c>--getbinpkg</c> （或是簡短的 
<c>-g</c>）：
</p>

<pre caption="下載然後安裝二進位的 gnumeric">
# <i>emerge --getbinpkg gnumeric</i>
</pre>

<p>
這將會下載套件和依賴的套件，和需要安裝到你系統上的相關資訊。如果你想要查看那些
依賴的套件將會被安裝，使用 <c>--pretend</c> 選項 （或是簡短的 <c>-p</c>）：
</p>

<pre caption="假裝下載預編的 gnumeric 套件">
# <i>emerge --getbinpkg --pretend gnumeric</i>
</pre>

<p>
你也可以選擇要下載的預編套件（和套件相關資訊）而 <e>不用</e> 檢查你本地系統的資
料和 <e>不</e> 你系統上的使用預編套件，使用 <c>--getbinpkgonly</c> 選項 （
或是簡短的 <c>-G</c>）：
</p>

<pre caption="略過本地資料直接安裝預編套件">
# <i>emerge --getbinpkgonly gnumeric</i>
</pre>

<p>
你也可以選擇套件的版本。舉例來說，你要安裝一個比 gnumeric 1.2 還舊的版本，你將
要輸入：
</p>

<pre caption="安裝指定的 gnumeric 版本">
# <i>emerge --usepkg "&lt;gnumeric-1.2"</i>
</pre>

<p>
其他的選擇為 "&gt;" (之後的）和 "=" （一樣的版本）。
</p>


</body>
</subsection>
<subsection>
<title>使用相依性</title>
<body>

<p>
Portage 有很好的相依性支援。雖然你平常不需要顧慮到這點（因為相依性將會自動的被
Portage 管理），有些使用者或許想要知道如何使用 <c>emerge</c> 和相依性。
</p>

<p>
舉例來說，如果你要 Portage 假裝一個套件的相依性都沒有被安裝，你可以使用
<c>--emptytree</c> （或是簡短的 <c>-e</c>）。這個在 <c>--pretend</c> 的使用下將
非常好用，你將可以查看個別套件所需要的整個相依性清單。如果沒有 <c>--pretend</c>
，<c>emerge</c> 將會（重）編譯所有列出的套件。但是，<c>glibc</c> 將會因為安全考
量而 <e>不會</e> 被列為依賴的套件。
</p>

<pre caption="顯示所有 gnumeric 的相依性">
# <i>emerge --emptytree --pretend gnumeric</i>
</pre>

<p>
另外一個參數則是 <c>--nodeps</c>，這將會讓 Portage 在不管相依性的問題下常識編譯
這個套件。這有可能會讓編譯失敗。
</p>

<pre caption="不理會相依性問題編譯 gnumeric">
# <i>emerge --nodeps gnumeric</i>
</pre>

<p>
<c>--nodeps</c> 的先反就是 <c>--onlydeps</c>，這只會這個套件的相依性，而部會編譯
套件：
</p>

<pre caption="安裝 gnumeric 的相依套件">
# <i>emerge --onlydeps gnumeric</i>
</pre>

</body>
</subsection>
<subsection>
<title>更新你的系統</title>
<body>

<p>
Portage 知道兩個特別得標籤來管理軟體套件：<e>system</e> 和 <e>world</e>。如果你
不是從 <e>stage3</e> 開始安裝 Gentoo ，你將會看過這個標籤。<e>system</e> 為一整
套的 <e>核心</e> 套件，讓 Gentoo 基礎系統所用。
</p>

<p>
<e>world</e> 的標籤將會包4含著所有你安裝的套件加上 <e>system</e> 的套件。換句話
說，每次你使用 <c>emerge &lt;套件名稱&gt;</c> 來安裝軟體，這個
<c>&lt;套件名稱&gt;</c> 將會被註冊到 <e>world</e>
的檔案（<path>/var/cache/edb/workd</path>）。相依性不屬於這個 <e>world</e> 檔案
，但使我們將在稍後講解。
</p>

<p>
如果你想要更新 system 套件組，使用 <c>--update</c> 選項（或是簡短的 <c>-u</c>）
：
</p>

<pre caption="更新 system 套件">
# <i>emerge --update system</i>
</pre>

<p>
An identical approach can be used for the world packages:
另外可以使用 world 套件組：
</p>

<pre caption="更新整個系統">
# <i>emerge --update world</i>
</pre>

<p>
再一次的，如果你想要查看 <c>emerge</c> 會更新什麼，將 <c>--pretend</c> 和
<c>--update</c> 參數一起使用：
</p>

<pre caption="假裝更新整個系統">
# <i>emerge --pretend --update world</i>
<comment>（為了方便閱讀，移除了一些部份）</comment>
[ebuild     U ] net-misc/wget-1.9-r1 [1.9] 
[ebuild     UD] media-video/dvdauthor-0.5.0 [0.5.3] 
[ebuild     U ] net-analyzer/ethereal-0.9.16 [0.9.14] 
</pre>

<p>
在 "ebuild" 的旁邊你將會看到一個字母（或是一組字母）這將給你關於這個套件的資訊：
</p>

<ul>
  <li>
    <e>B</e>（阻擋，blocks）這個套件將阻擋你繼續套件的安裝
  </li>
  <li>
    <e>N</e>（新的，new）這個套件是新的，並且是第一次安裝
  </li>
  <li>
    <e>R</e>（重新安裝，reemerge）這個套件不是新的，但是需要重新安裝
  </li>
  <li>
    <e>F</e>（下載，fetch）這個套件需要你手動下載原始碼（使用執照相關問題）
  </li>
  <li>
    <e>U</e>（更新，update）這個套件已經存在你的系統上但需要更新
  </li>
  <li>
    <e>UD</e>（降低版本，downgrade）這個套件已經在你的系統上存在了但是需要降低版本
  </li>
  <li>
    <e>U-</e>（slot 警告）這個套件已經安裝到你的系統上，但是不能和其他版本共存，
    所以將會將你的套件升級然後移除舊的版本。
  </li>
</ul>

<p>
在某些例子李，一個更新代表著降低版本（例：安裝一個老舊一點的版本而不是更新的版本
）。如果你不想要這種狀況發生，使用 <c>--upgradeonly</c> 選項（或是簡短的 
<c>-U</c>）：
</p>

<pre caption="更新整給系統">
# <i>emerge --update --upgradeonly world</i>
</pre>

<p>
當然，我們在這邊所討論的是 <e>system</e> 和 <e>world</e>，但是你也可以一個一個
套件自行更新。
</p>

</body>
</subsection>
<subsection>
<title>移除軟體</title>
<body>

<p>
如果你想要移除系統上的軟體，你可以使用 <c>unmerge</c> 選項（或是簡短的 <c>-C</c>
大寫）：
</p>

<pre caption="移除軟體">
# <i>emerge unmerge gnumeric</i>
</pre>

<p>
如果你想要測試移除（但是不是真的執行），你可以使用 <c>--pretend</c>：
</p>

<pre caption="假裝移除軟體">
# <i>emerge --pretend unmerge gnumeric</i>
</pre>

<warn>
Portage 沒有辦法辨別一個套件是否違令一個套件所依賴的。他也不會在你移除 
<e>system</e> 內的套件時而警告你，例：需要某些軟體才能讓基礎系統完好的作用！
</warn>

<p>
當移除的動作開始時，你將會看到一個很長的屬於該套件的檔案清單。有些檔案的左邊將
會有一些旗標。這些旗標為 <c>!mtile</c>，<c>!empty</c> 和 <c>cfgpro</c> 將告訴你
那些檔案會被移除而那些部會。沒有旗標的檔案將會完整的從檔案系統內被移除。這三個
旗標代表著：
</p>

<ul>
  <li>
    <c>!mtile</c>：的旗標代表著這個檔案在安裝後變更過，或許是被你還是其他工具
  </li>
  <li>
    <c>!empty</c>：顯示的目錄不是空的
  </li>
  <li>
    <c>cfgpro</c>：這個檔案釋放再依個保護的目錄，為了安全起見將部會被更改
  </li>
</ul>

</body>
</subsection>
</section>
<section>
<title>可用的軟體</title>
<subsection>
<title>要不要依照硬體架構？</title>
<body>

<p>
Gentoo 將他的套件放在兩個可能的地方叫做 <e>ARCH</e> 和 <e>~ARCH</e>。這個將依照
你所用的架構而改變換句話說 x86 架構的系統將會使用 <e>x86</e> 和 <e>~x86</e>，
ppc 架構的使用者將會友 <e>ppc</e> 和 <e>~ppc</e> 等以此類推。
</p>

<p>
<e>~ARCH</e> 代表著這部份的套件正在測試中，還沒接受過許多測試，所以不能放到
<e>ARCH</e>。<e>ARCH</e> 的套件的問題通常比較少。
</p>

<p>
你的系統將會使用 <e>ARCH</e> 為預設。如果你想要嘗試並且不擔心損毀的套件，知道
如何到 <uri link="http://bugs.gentoo.org">bugs.gentoo.org</uri> 那你可以選擇使用
<e>~ARCH</e> 的套件。要將你的系統 "移到" 一個 <e>~ARCH</e> 的系統，將
<path>/etc/make.conf</path> 裡面的 <c>ACCEPT_KEYWORDS</c> 變數更改為 
<e>~ARCH</e>（再一次的：x86 系統：<e>~x86</e>，等以此類推。）。
</p>

<p>
你必須注意你無法從 <e>~ARCH</e> 的階段回到 <e>ARCH</e>。
</p>

<p>
如果你現在想要更新你的系統，你將會發現有 <e>非常多</e> 的套件等待更新！
</p>

</body>
</subsection>
<subsection>
<title>鎖住的套件（Masked）</title>
<body>

<p>
當你想要安裝一個套件，你或許會看到以下訊息：
</p>

<pre caption="關於封鎖註的套件訊息">
Calculating dependencies   
!!! <comment>all ebuilds that could satisfy </comment>&lt;your package&gt;<comment> have been masked.</comment>
</pre>

<p>
一個套件會被封鎖註有兩個原因：
</p>

<ol>
  <li>你如果正在使用 <e>ARCH</e>，而這個套件是 <e>~ARCH</e></li>
  <li>這個套件是被刻意鎖住的</li>
</ol>

<p>
如果是地衣個原因，而你 <e>非常</e> 想要安裝它，你可以暫時的接受 <e>~ARCH</e> 套
件：
</p>

<pre caption="暫時性的接受 ~ARCH 套件">
# <i>ACCEPT_KEYWORDS="~x86" emerge gnumeric</i>
</pre>

<p>
一個套件會被刻意鎖住將會被放在 <path>/usr/portage/profiles/protage.mask</path>。
如果你查看這個檔案，你將會看到這個套件會被刻意鎖住的原因（常常是加入為註解）。
如果你不管其他原因要安裝這個套件（有可能會造成系統極度不穩），你將需要建立一個
<path>/etc/portage/package.unmask</path> 檔案然後按照
<path>/usr/portage/profiles/portage.mask</path> 的格式放入你想要安裝的套件。
</p>

<p>
請 <e>不要</e> 更改 <path>/usr/portage/profiles/package.mask</path> 檔案，這個
檔案會在下次更新 Portage tree 時被復原。如果你需要封鎖一個套件，建立
<path>/etc/portage/package.mask</path> 然後按照以上類似的格式填入。
</p>

<!--
<p>
Another trick to circumvent the "masked package" problem is to install the
package using the full path. This will ignore both the <c>ACCEPT_KEYWORD</c> 
settings and the <path>package.mask</path> listing.
</p>

<pre caption="Installing a package without checking for stadium / masking">
# <i>emerge /usr/portage/app-office/gnumeric/gnumeric-1.2.0.ebuild</i>
</pre>
-->

</body>
</subsection>
<subsection>
<title>被阻擋的套件</title>
<body>

<p>
你將會碰到類似以下的錯誤狀況：
</p>

<pre caption="阻擋的套件">
[blocks B     ] gnome-base/bonobo-activation (from pkg gnome-base/libbonobo-2.4.0) 
</pre>

<p>
在以上的例子，<c>bonobo-activation</c> 套件正在阻擋著 emerge <c>libbonobo</c>
的動作。要解決這個問題，移除 <c>bonobo-activation</c>然後繼續：
</p>

<pre caption="解決阻擋的狀況">
# <i>emerge unmerge bonobo-activation</i>
</pre>

</body>
</subsection>
</section>
</sections>
