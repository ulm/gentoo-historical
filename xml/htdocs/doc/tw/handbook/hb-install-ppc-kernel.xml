<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/tw/handbook/Attic/hb-install-ppc-kernel.xml,v 1.2 2004/04/28 11:33:47 bennyc Exp $ -->

<!-- rev 1.2 by Benny -->

<sections>
<section>
<title>時區</title>
<body>

<p>
為了讓你的系統知道它的位置在那裡，你將需要設定你的系統時區。到
<path>/usr/share/zoneinfo</path> 尋找你的時區，然後使用 <c>ln</c> 建立一個連接到
<path>/etc/localtime</path>。
</p>

<pre caption="設定時區資訊">
# <i>ls /usr/share/zoneinfo</i>
<comment>（假設你要使用 GMT）</comment>
# <i>ln -sf /usr/share/zoneinfo/GMT /etc/localtime</i>
</pre>

</body>
</section>
<section>
<title>安裝核心原始碼</title>
<subsection>
<title>選擇一個核心</title>
<body>

<p>
Linux 的核心是所有版本的最中心，也是最重要的。他位於使用者程式和系統硬體之間。
Gentoo 提供使用者很多可用的核心原始碼。你可以到 <uri
link="/doc/tw/gentoo-kernel.xml">Gentoo 核心 指南</uri> 查看我們所提供的核心。
</p>

<p>
PPC 的使用者一定要使用 <c>ppc-sources</c>，<c>ppc-sources-benh</c>，
<c>ppcsources-dev</c>，<c>ppc-sources-crypto</c> 和
<c>ppc-development-sources</c>。如果你使用的是無網路的安裝，你只可以使用後者。所
以我們現在就使用 <c>emerge</c> 來安裝核心原始碼：
</p>

<pre caption="安裝核心原始碼">
# <i>emerge ppc-development-sources</i>
</pre>

<p>
當你查看 <path>/usr/src</path> 你將會看到一個 <path>linux</path> 的連接連到
你所選的核心：
</p>

<pre caption="觀看核心原始碼目錄連接">
# <i>ls -l /usr/src/linux</i>
lrwxrwxrwx    1 root     root           12 Oct 13 11:04 /usr/src/linux -&gt; linux-2.6.1
</pre>

<p>
如果你碰到的不是這樣（例：連接連到其他的核心目錄）你將需要在繼續往下之前更改連接
：
</p>

<pre caption="更改核心連接目錄">
# <i>rm /usr/src/linux &amp;&amp; ln -s /usr/src/linux-2.6.1 /usr/src/linux</i>
</pre>

<p>
現在我們該設定以及編譯你的核心了。所有架構的使用者都可以使用 <c>genkernel</c> 完
成此項步驟，並且將會以和 LiveCD 一樣的通用的方式進行編譯。我們將先解釋如何手動編
譯因為這是自訂你的環境的最佳方法。
</p>

<p>
現在請從 <uri link="#manual">手動設定</uri> 繼續。
</p>

</body>
</subsection>
</section>
<section id="manual">
<title>手動設定</title>
<subsection>
<title>介紹</title>
<body>

<p>
手動設定核心常常被 Linux 使用者認為最難完成的步驟。雖然不假 -- 但是當你手動編譯
幾次核心後，你應該不會覺得它有多難 ;)
</p>

<p>
但是，<e>唯一</e> 的重點就是：你必須要了解你的系統才可以開始手動編譯。系統上多數
的資料可以從 <path>/proc/pci</path> （如果可以的話使用 <c>lspci</c>）查看。你也
可以執行 <c>lsmod</c> 看看 LiveCD 使用那些核心模組（這是一個不錯的暗示，教你該
開啟那個選項）。
</p>

<p>
現在到你的核心原始碼目錄然後執行 <c>make menuconfig</c>。這將會啟動一個
ncurses 的設定選單。
</p>

<pre caption="開始 menuconfig">
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
</pre>

<p>
你將會看到一大串的設定部份。我們將列出一些你一定要啟用的選項（不然 Gentoo 無法
完善的工作）。
</p>

</body>
</subsection>
<subsection>
<title>必須開啟的選項</title>
<body>

<p>
首先，開啟 development and experimental code/drivers。你將需要這個，不然
你將無法看見一些其他重要的程式碼或是驅動程式。
</p>

<pre caption="選擇 experimental code/drivers">
Code maturity level options ---&gt;
  [*] Prompt for development and/or incomplete code/drivers
</pre>

<p>
現在到 <c>File Systems</c> 然後選擇要支援的檔案系統。記得<e>不要</e>將它們編成模
組。還有 <c>Virtual memory</c>，<c>/proc file system</c>，<c>/dev file 
system</c> + <c>Automatically munt at boot</c>：
</p>

<pre caption="選擇相關檔案系統">
File systems ---&gt;
  [*] Virtual memory file system support (former shm fs)
  [*] /proc file system support
  [*] /dev file system support (EXPERIMENTAL)
  [*]   Automatically mount at boot

<comment>（除非你是用 2.6 的核心，記得不要選取這個功能：）</comment>
  [ ] /dev/pts file system for Unix98 PTYs

<comment>（按照你系統所需要的檔案系統開啟以下選項）</comment>
  &lt;*&gt; Reiserfs support
  &lt;*&gt; Ext3 journalling file system support
  &lt;*&gt; JFS filesystem support
  &lt;*&gt; Second extended fs support
  &lt;*&gt; XFS filesystem support
</pre>

<note>
2.6 核心的使用者可以在 <c>File systems</c> 的子部份 <c>Pseudo filesystems</c> 
下內找到上面所談到的選項。
</note>

<p>
如果你需要透過 PPPoE 連線到網路或是數據機撥接，你將需要以下的核心選項：
</p>

<pre caption="選擇 PPPoE 相關驅動程式">
Network device support ---&gt;
  &lt;*&gt; PPP (point-to-point protocol) support
  &lt;*&gt;   PPP support for async serial ports
  &lt;*&gt;   PPP support for sync tty ports
</pre>

<p>
雖然 <c>PPP over Ethernet</c> 選項只是有在 <c>rp-pppoe</c> 設定為核心 PPPoE
時需要，但是這兩個壓縮的選項不會造成錯誤。
</p>

<note>
2.6 核心的使用者可以在 <c>Device Drivers</c> 下找到上面所談到的選項。
</note>

<p>
如果你需要，不要忘了為你的網路卡加入核心的支援。
</p>

<p>
關閉 ADB raw keycodes：
</p>

<pre caption="關閉 ADB raw keycodes">
Macintosh Device Drivers ---&gt;
  [ ] Support for ADB raw keycodes
</pre>

<p>
然後選擇正確的 RTC 支援（<e>關閉</e> <c>Enhanced RTC</c> 選項）：
</p>

<pre caption="啟用正確的 RTC 選項">
Character devices ---&gt;
  [ ] Enhanced RTC

General setup ---&gt;
  [*] Support for /dev/rtc
</pre>

<p>
OldWord 的使用者將需要 HFS 支援來讓他們可以複製編譯好的核心到 MacOS 分割區。
</p>

<pre caption="啟用 HFS 支援">
File Systems ---&gt;
  [*] HFS Support
</pre>

<p>
當你完成核心設定時，請從 <uri link="#compiling">編譯和安裝</uri> 繼續。
</p>

</body>
</subsection>
<subsection id="compiling">
<title>編譯和安裝</title>
<body>

<p>
現在你的核心已經設定完成了，我們該來編譯然後安裝它。離開核心設定，然後執行
<c>make dep &amp;&amp; make bzImage vmlinux modules_install</c> 或是 Pegasos 的
使用者執行 <c>make dep &amp;&amp; make zImage modules modules_install</c>：
</p>

<pre caption="編譯核心">
（Apple/IBM）# <i>make dep &amp;&amp; make vmlinux modules modules_install</i>
（Pegasos）# <i>make dep &amp;&amp; make zImage modules modules_install</i>
</pre>

<p>
當核心完成編譯時，將核心映像檔複製到 <path>/boot</path>。
</p>

<pre caption="安裝核心">
（Apple/IBM）# <i>cp vmlinux /boot/kernel-2.4.24</i>
（Pegasos）# <i>cp arch/ppc/boot/images/zImage.chrp /boot/kernel-2.4.24</i>
</pre>

<p>不要忘了將 system map 複製過去：</p>

<pre caption="複製 system map">
# <i>cp System.map /boot/System.map-2.4.24</i>
</pre>

<p>
你也可以將你的核心設定檔備份到 <path>/boot</path>，以防萬一 :)
</p>

<pre caption="備份你的核心設定檔">
# <i>cp .config /boot/config-2.4.24</i>
</pre>

<p>
現在請從 <uri link="#kernel_modules">安裝分開的核心模組</uri>。
</p>

</body>
</subsection>
</section>
<section id="kernel_modules">
<title>安裝分開的核心映像檔和模組</title>
<subsection>
<title>安裝多個模組</title>
<body>

<p>
如果適當，你應該要安裝系統上的硬體所需要的安裝程序。以下為一些你有可能用到的核心
相關的安裝程序：
</p>

<table>
<tcolumn width="1in"/>
<tcolumn width="4in"/>
<tcolumn width="2in"/>
<tr>
  <th>安裝程序（Ebuild）</th>
  <th>用意</th>
  <th>指令</th>
</tr>
<tr>
  <ti>xfree-drm</ti>
  <ti>
    XFree86 支援的 ATI Radeon 到 9200，Rage128，Matrox，Voodoo和其他顯示卡。請查
    看 <path>/usr/portage/x11-base/xfree-drm</path> 內的 <c>ISUE_VIDEO_CARDS</c> 
    變數查看你需要填入那種 <c>適用於你的顯示卡</c>。
  </ti>
  <ti><c>VIDEO_CARDS="適用於你的顯示卡" emerge xfree-drm</c></ti>
</tr>
</table>

<p>
請注意，有些安裝程序會碰到很多相依性的問題。要確定你會安裝到那些套件，使用
<c>emerge --pretend</c>。舉例來說，<c>xfree-drm</c> 套件：
</p>

<p>
套件需要用到什麼的 USE 參數：
</p>

<pre caption="查看使用的 USE 參數">
# <i>USE="-gpm -nls -gtk -gnome -alsa" emerge --pretend xfree-drm</i>
</pre>

</body>
</subsection>
<subsection>
<title>設定模組</title>
<body>

<p>
你將需要將想要開機時自動載入的模組放到
<path>/etc/modules.autoload.d/kernel-2.4</path> （或是
<path>kernel-2.6</path>）。你也可以加上模組的選項。
</p>

<p>
要查看所有可用的模組，執行 <c>find</c> 指令。不要忘了將 "&lt;kernel
version&gt;"更改為你剛剛編譯的版本：
</p>

<pre caption="查看所有可用的版本">
# <i>find /lib/modules/&lt;kernel version&gt;/ -type f -iname '*.o' -or -iname '*.ko'</i>
</pre>

<p>
舉例來說，要自動載入 <c>3c59x.o</c> 模組，編輯 <path>kernel-2.4</path> 或是 
<path>kernel-2.6</path>：
</p>

<pre caption="編輯 /etc/modules.autoload.d/kernel-2.4">
<comment>（2.4核心的範例）</comment>
# <i>nano -w /etc/modules.autoload.d/kernel-2.4</i>
</pre>

<pre caption="/etc/modules.autoload.d/kernel-2.4 或是 kernel-2.6">
3c59x
</pre>

<p>
現在執行 <c>modules-update</c> 來套用你的變更到 <path>/etc/modules.conf</path>：
</p>

<pre caption="執行 modules-update">
# <i>modules-update</i>
</pre>

<p>
現在請從 <uri link="?part=1&amp;chap=8">設定你的系統</uri> 繼續安裝。
</p>

</body>
</subsection>
</section>
</sections>
