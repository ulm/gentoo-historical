<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- This document was last synched to:
     cvs://gentoo/gentoo/xml/htdocs/doc/en/ebuild-mistakes.xml :: R1.4.
-->

<sections>
<section>
<title>Częste błędy podczas pisania ebuildów</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Dokument przedstawia listę często popełnianych w ebuildach błędów. Należy
upewnić się, że ebuildy jakie dodajemy nie zawierają żadnego z tych błędów.
Przed rozpoczęciem dodawania ebuildów konieczne jest zapoznanie się z <uri
link="?part=3&amp;chap=1">zasadami pisania ebuildów</uri> i z <uri
link="?part=2&amp;chap=1">Ebuild HOWTO</uri>.  Ponadto należy przejrzeć kilka
(więcej niż jeden lub dwa) ebuildy, aby poznać styl, w jakim są one pisane.
</p>

<p>
Warto również zapoznać się z ebuildami, które wykorzystują eclass i przeczytać
dokument <uri link="?part=2&amp;chap=2">Eclass HOWTO</uri>, aby zrozumieć
sposób ich działania. Poza tym konieczne jest szczegółowe zapoznanie się z
dokumentem opisującym <uri link="/doc/pl/ebuild-submit.xml">zasilanie zbioru
ebuildów</uri>, przed dodaniem jakiegokolwiek ebuilda.
</p>

</body>
</subsection>
<subsection>
<title>Brakujący/niepoprawny/popsuty nagłówek</title>
<body>

<p>
Dodając ebuild, należy upewnić się, że nagłówek jest <e>dokładnie</e> taki, jak
w pliku <path>/usr/portage/skel.ebuild</path>. Nie wolno modyfikować go w żaden
sposób, a w szczególności linia <c>&#36;Header: &#36;</c> musi pozostać
nietknięta.
</p>

<p>
Pierwsze trzy linie <e>muszą</e> wyglądać jak poniżej:
</p>

<pre caption="Poprawny nagłówek">
# Copyright 1999-2004 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# &#36;Header: &#36;
</pre>

<p>
Jeśli dodajemy łatkę lub nowszą wersję ebuilda, nie musimy modyfikować linii
<c>&#36;Header: &#36;</c>. Wciąż jednak linia ta musi być obecna. Gdy dodajemy
ebuild do repozytorium CVS, nagłówek zostanie automatycznie zmodyfikowany -
pojawią się w nim odpowiednie informacje o wersji i dacie. Nie ma więc żadnego
powodu, aby ręcznie zmieniać te dane.
</p>

</body>
</subsection>
<subsection>
<title>Brak IUSE</title>
<body>

<p>
Najczęściej brakującą zmienną w ebuildach jest IUSE. Musi ona zostać
dołączona (zgodnie z dokumentem <uri link="?part=2&amp;chap=1">Ebuild
HOWTO</uri>) nawet jeśli pakiet nie korzysta z żadnych flag USE. W takiej
sytuacji wystarczy dodać poniższą linię:
</p>

<pre caption="Pusta zmienna IUSE">
IUSE=""
</pre>

</body>
</subsection>
<subsection>
<title>Redefiniowanie zmiennych P, PV, PN, PF</title>
<body>

<p>
Nigdy nie należy redefiniować zmiennych P, PV, PN, PF. Zamiast tego zaleca się
korzystanie ze zmiennych MY_P, MY_PN, MY_PV, P0, itd. Aby uzyskać więcej
informacji na ten temat warto przejrzeć ebuildy w drzewie Portage, które używają
tych zmiennych. Większość ebuildów wykorzystuje ekspansję zmiennych. Warto
zapoznać się ze stronami man basha, aby zrozumieć jak ona przebiega.
</p>

<p>
Jeśli spotkamy jakiś pakiet, który redefiniuje wyżej wspomniane zmienne, należy
zgłosić raport o błędzie.
</p>

</body>
</subsection>
<subsection>
<title>Dołączanie oznaczenia wersji w zmiennych SRC_URI i S</title>
<body>

<p>
Zaleca się, aby unikać dodawania oznaczenia wersji w zmiennych SRC_URI i S.
Zawsze należy korzystać ze zmiennej ${PV} lub ${P}. Dzięki temu utrzymywanie
zbioru ebuildów jest znacznie łatwiejsze. Jeśli oznaczenie wersji nie jest stałe
w obrębie tarballa/źródeł, powinniśmy użyć zmiennej MY_P. Przykładowo
dev-python/pyopenal odwołuje się do tarballa o nazwie PyOpenAL, więc zmieniamy
ebuild do postaci:
</p>

<pre caption="Przykładowa redefinicja oznaczenia wersji">
MY_P=${P/pyopenal/PyOpenAL}
SRC_URI="http://oomadness.tuxfamily.org/downloads/${MY_P}.tar.gz"
S=${WORKDIR}/${MY_P}
</pre>

</body>
</subsection>
<subsection>
<title>Błędy składniowe w DEPEND</title>
<body>

<p>
Często występują błędy w sekcjach DEPEND i RDEPEND. Poniżej znajduje się kilka
spraw, o których należy pamiętać w czasie uzupełniania zależności programu.
</p>

<ul>
  <li>
    <e>Zawsze należy dołączyć kategorię.</e><br />
    Czyli np. wpisać <c>&gt;=x11-libs/gtk+-2</c> zamiast <c>&gt;=gtk+-2</c>.
  </li>
  <li>
    <e>Nie należy umieszczać gwiazdki (*) w zależnościach oznaczonych znakiem &gt;=.</e><br />
    Przykładowo poprawna jest forma <c>&gt;=x11-libs/gtk+-2</c>, a nie
    <c>&gt;=x11-libs/gtk+-2*</c>.
  </li>
  <li><e>Dla pakietów korzystających z GTK: konieczne jest stosowanie
  =x11-libs/gtk+-1.2* dla programów zależnych od GTK+1.</e></li>
  <li>
    <e>Zależnością nigdy nie może być metapakiet.</e><br />
    Nie można uzależnić programu od gnome-base/gnome, lecz od specyficznych
    bibliotek - na przykład libgnome.
  </li>
  <li>
    <e>Jedna zależność w linii.</e><br />
    Nie zaleca się umieszczania wielu zależności w jednej linii. Jest to trudne
    do czytania i obsługi.
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>DEPEND jest niekompletne</title>
<body>

<p>
Jest to kolejny bardzo częsty błąd. Osoba przesyłająca ebuild przekazuje nam
coś, co "po prostu działa", bez sprawdzenia, czy zależności są prawidłowe.
Poniżej znajduje się kilka porad jak prawidłowo określić zależności.
</p>

<ul>
  <li>
    <e>Sprawdźmy pliki configure.in lub configure.ac</e><br />
    Sprawdźmy czy jest tam sprawdzana obecność innych pakietów. Szczególnie
    poszukajmy testów pkg-config i funkcji AM_*, które sprawdzają obecność
    określonej wersji jakiegoś programu.
  </li>
  <li>
    <e>Sprawdźmy dołączone pliki .spec</e><br />
    Dobrym sposobem na odnalezienie zależności jest przejrzenie dołączonych
    plików .spec. Jednak trzeba pamiętać, że nie musi się w nich znajdować
    kompletna lista zależności.
  </li>
  <li>
    <e>Sprawdźmy stronę internetową programu/biblioteki</e><br />
    Poszukajmy na stronie internetowej programu jakie zależności określają jego
    twórcy.
  </li>
  <li>
    <e>Przeczytajmy pliki README i INSTALL</e><br />
    Zazwyczaj pliki te zawierają przydatne informacje o budowaniu i instalowaniu
    pakietu.
  </li>
  <li>
    <e>Pamiętajmy o niebinarnych zależnościach jak pkg-config, programy do
    generowania dokumentacji, itp.</e><br />
    Zazwyczaj w procesie budowania aplikacji potrzebne są pakiety takie jak
    intltool, libtool, pkg-config, doxygen, scrollkeeper, gtk-doc, itp.
    Upewnijmy się, że wymagania te zostały jasno określone.
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Niepoprawne LICENSE</title>
<body>

<p>
Innym częstym błędem w ebuildach użytkowników jest podawanie niepoprawnej
licencji. Przykładowo <c>GPL</c> nie jest poprawną wartością. Konieczne jest
sprecyzowanie czy chodzi o <c>GPL-1</c> czy <c>GPL-2</c>. Podobnie sprawa
wygląda w przypadku <c>LGPL</c>. Należy upewnić się, że licencja umieszczona w
<c>LICENSE</c> istnieje w katalogu <path>/usr/portage/licenses</path>. Licencję
na jakiej rozpowszechniany jest program można odnaleźć w <path>COPYING</path> w
tarballu z jego źródłami. Jeśli nie zostało sprecyzowane czy program korzysta z
licencji <c>GPL-1</c> czy <c>GPL-2</c>, zazwyczaj używa <c>GPL-2</c>.
</p>

<p>
Jeśli licencja na jakiej rozpowszechniany jest pakiet nie znajduje się w
katalogu <path>/usr/portage/licenses/</path>, konieczne jest dodanie tam
odpowiedniego pliku.
</p>

</body>
</subsection>
<subsection>
<title>Nieprzetestowane architektury w KEYWORDS</title>
<body>

<p>
Nie należy dodawać do KEYWORDS żadnych architektur, na których ebuild nie
został przetestowany. Ponadto wszystkie nowe ebuildy powinny zostać oznaczone
jako ~x86 lub adekwatnie do architektury - zawsze z uwzględnieniem, iż jest to
wersja testowa. Podnosząc wersję programu, zawsze oznaczamy stabilne
architektury znakiem <c>~</c>.
</p>

</body>
</subsection>
<subsection>
<title>Brakująca zmienna SLOT</title>
<body>

<p>
Wymagana jest obecność zmiennej SLOT w ebuildzie. Nawet jeśli nie planujemy jej
używać, nie usuwajmy jej. Przypiszmy jej wartość:
</p>

<pre caption="Domyślne ustawienie SLOT">
SLOT="0"
</pre>

</body>
</subsection>
<subsection>
<title>Niewłaściwe wartości zmiennych DESCRIPTION i HOMEPAGE</title>
<body>

<p>
Należy zweryfikować poprawność zmiennej HOMEPAGE. Adres w niej zawarty musi
prowadzić do właściwej strony, na wypadek gdyby użytkownicy chcieli uzyskać
więcej informacji o programie. Trzeba również sprawdzić, czy opis w zmiennej
DESCRIPTION nie jest zbyt długi. Dobry opis to taki, który przedstawia główne
funkcje pakietu w jednym zdaniu.
</p>

</body>
</subsection>
<subsection>
<title>Niewłaściwie użyte spacje zamiast znaków tabulacji</title>
<body>

<p>
Poprawianie formatowania linii tylko dlatego, że użytkownik przysyłający ebuild
nie postępował zgodnie ze wskazówkami dotyczącymi używania znaków tabulacji
zamiast spacji, nie sprawia nikomu przyjemności. Używanie znaków tabulacji jest
mocno zalecane.
</p>

</body>
</subsection>
<subsection>
<title>Nadmiarowe białe znaki</title>
<body>

<p>
Nadmiarowe białe znaki stanowią częsty problem. Pamiętajmy więc o użyciu
programu repoman, który wskaże niepotrzebne białe znaki na końcach linii i w
pustych liniach.
</p>

</body>
</subsection>
<subsection>
<title>Nadmiarowe definicje S=${WORKDIR}/${P}</title>
<body>

<p>
Jeśli <c>S=${WORKDIR}/${P}</c> jest prawidłowe dla danego ebuildu, nie należy
powtarzać tej definicji - jest ona standardowo zaimplementowana. Dodawanie
definicji zmiennej <c>S</c> jest zasadne tylko w sytuacji, gdy powinna ona
wskazywać na miejsce inne niż <c>${WORKDIR}/${P}</c>.
</p>

</body>
</subsection>
<subsection>
<title>Brakująca dokumentacja</title>
<body>

<p>
Jeśli pakiet zawiera dokumentację, należy ją zainstalować przy użyciu
<c>dodoc</c> lub do katalogu <path>/usr/share/doc/${PF}</path>. Pamiętajmy przy
tym, aby sprawdzić czy nie wystąpiły błędy w czasie użycia
<c>dodoc</c>/<c>doins</c>.
</p>

</body>
</subsection>
</section>
<section>
<title>Częste błędy podczas dodawania ebuildów</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Proces dodawania ebuildów należy przeprowadzać zgodnie z dokumentem <uri
link="/doc/pl/ebuild-submait.xml">Zasilanie zbioru ebuildów</uri> znajdującym
się w <uri link="/doc/pl/index.xml">dokumentacji Gentoo</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Ebuild w postaci tarballa</title>
<body>

<p>
Zdecydowanie nie zaleca się dodawania ebuildów w postaci tarballi. Łatki również
należy dodawać oddzielnie, co pozwala na ich łatwe sprawdzenie.
</p>

</body>
</subsection>
<subsection>
<title>Wstawianie zawartości ebuildów</title>
<body>

<p>
Nie należy kopiować zawartości ebuildów do pola komentarza w bugzilli.
</p>

</body>
</subsection>
<subsection>
<title>Brak opisu pakietu</title>
<body>

<p>
Konieczne jest dołączenie opisu pakietu i uzupełnienie pola URL adresem strony
domowej programu jeśli taka istnieje.
</p>

</body>
</subsection>
<subsection>
<title>Aktualizacja pakietu bez aktualizacji pliku ChangeLog</title>
<body>

<p>
Gdy dodajemy zaktualizowany pakiet, musimy określić jakie zmiany w nim
wprowadziliśmy. Przykładowo, jeśli pakiet zawiera nowe funkcje i są z nimi
związane flagi USE, należy napisać o tym w raporcie błędu, jaki tworzymy dodając
ebuild.
</p>

<p>
Znacznie bardziej roztropne jest dodanie pliku zawierającego różnice pomiędzy
poprzednią i aktualną wersją ebuilda, niż dodanie całego ebuilda. Różnice można
uzyskać w następujący sposób:
</p>

<pre caption="Generowanie różnic">
$ <i>diff -u some-package-0.1.0.ebuild some-package-0.2.0.ebuild &gt; ~/some-package-0.2.0.diff</i>
</pre>

</body>
</subsection>
<subsection>
<title>Dodawanie niezmienionych ebuildów dla nowych wersji programów</title>
<body>

<p>
Gdy dodajemy nową wersję programu do drzewa portage, upewnijmy się, że istniejący
ebuild działa i że odpowiednie zmiany zostały zarejestrowane w jego nowej wersji
(np. dodana dokumentacja). Jeśli nowa wersja programu nie wymaga zmian w
ebuildzie, nie należy dodawać jego niezmienionej wersji. Wystarczy w raporcie
błędu dodać informację, że starsza wersja ebuilda po przekopiowaniu działa
poprawnie.
</p>

</body>
</subsection>
</section>
<section>
<title>Komentarze i sugestie</title>
<subsection>
<body>

<p>
Komentarze, poprawki i sugestie powinny być przesyłane do <mail
link="liquidx@gentoo.org">Alastaira Tse</mail>.
</p>

</body>
</subsection>
</section>
</sections>
