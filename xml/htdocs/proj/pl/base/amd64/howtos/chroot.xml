<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/pl/base/amd64/howtos/chroot.xml,v 1.1 2005/09/16 23:41:55 rane Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.0.2</version>
<date>2005-08-31</date>

<section>
<title>Wprowadzenie</title>
<subsection>
<title>Wprowadzenie do 64-bitowego systemu</title>
<body>

<p>
Przewodnik dla 32-bitowego chroota w Gentoo Linux pomaga ustawić prawdziwy
32-bitowy chroot na systemie Gentoo/AMD64. 
</p>

<p>
Jak wiemy systemy 64-bitowe nie obsługują jeszcze 32-bitowych aplikacji
(przynajmniej nie z Portage), więc będziemy musieli skorzystać z bibliotek
emulacji by zmusić je do działania, bądź też stworzyć prawdziwy 32-bitowy
system wewnątrz chroota, by zainstalować i uruchamiać 32-bitowe aplikacje. Dla
zwykłych potrzeb nie musimy budować prawdziwego 32-bitowego systemu wewnątrz
chroota. Jednakże, jeżeli chcemy uruchamiać aplikacje, które nie posiadają
binariów umożliwiających pracę z 32-bitowymi bibliotekami, musimy skorzystać
32-bitowego chroota. Przewodnik ten uczy jak utworzyć 32-bitowy chroot oraz
jak zainstalować i uruchamiać w nim aplikacje.
</p>

</body>
</subsection>
</section>
<section>
<title>Instalacja</title>
<subsection>
<title>Instalacja 32-bitowego chroota</title>
<body>

<p>
By zainstalować 32-bitowy chroot podążamy radami jakimi kierujemy się podczas
instalacji Gentoo Linux na systemie x86. W tej chwili potrzebujemy najnowszego
stage3, dostępnego na <uri link="/main/en/mirrors.xml">serwerach lustrzanych
Gentoo</uri>.
</p>

<pre caption="Ściąganie stage3">
$ <i>cd /home/user/downloads</i>
$ <i>wget -c http://distfiles.gentoo.org/releases/x86/2005.0/stages/athlon-xp/stage3-athlon-xp-2005.0.tar.bz2</i>
</pre>

<note>
Należy zwrócić uwagę, że ściągamy wersję stage dla x86, <c>nie</c> dla AMD64.
</note>

<p>
Po ukończeniu ściągania musimy stworzyć miejsce dla nowego chroota.
</p>

<pre caption="Tworzenie katalogu dla 32-bitowego chroota">
$ <i>su root</i> <comment>wprowadzamy hasło root'a</comment>
# <i>cd /mnt</i>
# <i>mkdir gentoo32</i>
</pre>

<p>
Następnie przenosimy ściągnięty stage, rozpakowujemy i instalujemy go według
przykładu.
</p>

<pre caption="Instalacja ze stage3">
# <i>cd /mnt/gentoo32</i>
# <i>tar -xvjpf /home/user/downloads/stage3-athlon-xp-2005.0.tar.bz2</i>
# <i>cp -L /etc/resolv.conf /mnt/gentoo32/etc/</i>
# <i>cp -L /etc/passwd /mnt/gentoo32/etc/</i>
</pre>

<p>
W tej chwili mamy gotowy do tworzenia chroot. Kolejny rozdział pokazuje jak to
się odbywa.
</p>

</body>
</subsection>
</section>
<section>
<title>Tworzenie</title>
<subsection>
<title>Tworzenie 32-bitowego chroota</title>
<body>

<p>
Jeżeli nie napotkaliśmy żadnych błędów, możemy śmiało rozpocząć tworzenie i
sfinalizować instalację 32-bitowego chroota.
</p>

<p>
Kolejnym krokiem jest utworzenie nowego <c>/mnt/gentoo32/etc/make.conf</c>.
</p>

<pre caption="Konfiguracja nowego make.conf">
CFLAGS="-O2 -march=athlon-xp -msse2 -pipe -fomit-frame-pointer"
CHOST="i686-pc-linux-gnu"
CXXFLAGS="${CFLAGS}"
MAKEOPTS="-j2"
</pre>

<p>
Teraz montujemy różne fikcyjne systemy plików:
</p>

<pre caption="Montujemy wirtualne systemy plików">
# <i>mount -o bind /dev /mnt/gentoo32/dev</i>
# <i>mount -o bind /dev/pts /mnt/gentoo32/dev/pts</i>
# <i>mount -o bind /dev/shm /mnt/gentoo32/dev/shm</i>
# <i>mount -o bind /proc /mnt/gentoo32/proc</i>
# <i>mount -o bind /proc/bus/usb /mnt/gentoo32/proc/bus/usb</i>
# <i>mount -o bind /sys /mnt/gentoo32/sys</i>
</pre>

<p>
W tym momencie mamy prawdziwy 32-bitowy chroot zainstalowany na 64-bitowym
systemie, który jest już praktycznie gotowy do użycia. Następnie musimy
stworzyć link z portage dostępnego w 64-bitowym systemie do chroota. Dzięki
temu można wykonać aktualizację w jednej instalacji dla obydwu systemów zamiast
kopiować wiele danych.
</p>

<pre caption="Łączymy portage z /usr/portage wewnątrz 32-bitowego chroot'a">
# <i>mkdir -p /mnt/gentoo32/usr/portage/</i>
# <i>mount -o bind /usr/portage /mnt/gentoo32/usr/portage/</i>
</pre>

<note>
Za każdym razem gdy wykonamy aktualizację Portage poleceniem emerge sync,
uaktualnimy również portage 32-bitowego chrootaa.
</note>

<p>
Jeżeli chcemy uruchomić 32-bitowe aplikacje wymagające X, musimy zamontować
<path>/tmp</path>.
</p>

<pre caption="Montujemy /tmp dla aplikacji posiadających GUI">
# <i>mount -o bind /tmp /mnt/gentoo32/tmp</i>
</pre>

<p>
Teraz możemy przejść do wnętrza chroota.
</p>

<pre caption="Przechodzimy do środowiska utworzonego chroot'a">
<comment>(Krok ten wykonujemy tylko i wyłącznie wtedy, gdy nie mamy zainstalowanego linux32)</comment>
# <i>emerge linux32</i>
# <i>linux32 chroot /mnt/gentoo32 /bin/bash</i>
<comment>(Upewaniamy się czy nasza konfiguracja to i686)</comment>
# <i>uname -m</i>
Linux mysystem 2.6.12-gentoo-r1 #1 Mon Jun 27 02:41:55 GMT 2005 i686 AMD Athlon(tm) 64 Processor 3500+ AuthenticAMD GNU/Linux
</pre>

<warn>
Narzędzie <c>linux32</c> jest potrzebne do zmiany wartości CHOST. Jeżeli je
pominiemy, nie będzie możliwa kompilacja wewnątrz chroota.
</warn>

<p>
W tej chwili mamy w swoich rękach 32-bitowy chroot gotowy do aktualizacji.
Kolejne kroki przeprowadzą nas przez update.
</p>

<pre caption="Update nowego, 32-bitowego chroot'a">
# <i>source /etc/profile</i>
# <i>env-update</i>
# <i>emerge -au world</i>
</pre>

<p>
Po tej czynności mamy praktycznie gotowy 32-bitowy chroot. By dopasować
wszystkie opcje, utworzymy nowy plik w 64-bitowym systemie, by udostępnić
32-bitowy chroot podczas uruchamiania systemu.
</p>

<pre caption="Tworzymy nowy plik w /etc/init.d">
# nano -w /etc/init.d/gentoo32
#!/sbin/runscript

depend() {
   need localmount
   need bootmisc
}

start() {
    ebegin "Mounting 32bits chroot dirs"
    mount -o bind /dev /mnt/gentoo32/dev >/dev/null &amp;
    mount -o bind /dev/pts /mnt/gentoo32/dev/pts >/dev/null &amp;
    mount -o bind /dev/shm /mnt/gentoo32/dev/shm >/dev/null &amp;
    mount -o bind /proc /mnt/gentoo32/proc >/dev/null &amp;
    mount -o bind /proc/bus/usb /mnt/gentoo32/proc/bus/usb >/dev/null &amp;
    mount -o bind /sys /mnt/gentoo32/sys >/dev/null &amp;
    mount -o bind /tmp /mnt/gentoo32/tmp >/dev/null &amp;
    mount -o bind /usr/portage /mnt/gentoo32/usr/portage/ >/dev/null &amp;
    eend $? "An error occured while attempting to mount 32bit chroot directories"
    ebegin "Copying 32bits chroot files"
    cp -pf /etc/resolv.conf /mnt/gentoo32/etc >/dev/null &amp;
    cp -pf /etc/passwd /mnt/gentoo32/etc >/dev/null &amp;
    cp -pf /etc/shadow /mnt/gentoo32/etc >/dev/null &amp;
    cp -pf /etc/group /mnt/gentoo32/etc >/dev/null &amp;
    cp -pf /etc/gshadow /mnt/gentoo32/etc >/dev/null &amp;
    cp -pf /etc/hosts /mnt/gentoo32/etc > /dev/null &amp;
    cp -Ppf /etc/localtime /mnt/gentoo32/etc >/dev/null &amp;
    eend $? "An error occured while attempting to copy 32 bits chroot files."
}

stop() {
    ebegin "Unmounting 32bits chroot dirs"
    umount -f /mnt/gentoo32/dev/pts >/dev/null &amp;
    umount -f /mnt/gentoo32/dev/shm >/dev/null &amp;
    umount -f /mnt/gentoo32/dev >/dev/null &amp;
    umount -f /mnt/gentoo32/proc/bus/usb >/dev/null &amp;
    umount -f /mnt/gentoo32/proc >/dev/null &amp;
    umount -f /mnt/gentoo32/sys >/dev/null &amp;
    umount -f /mnt/gentoo32/tmp >/dev/null &amp;
    umount -f /mnt/gentoo32/usr/portage/ >/dev/null &amp;
    eend $? "An error occured while attempting to unmount 32bits chroot directories"
}
</pre>

<p>
Teraz wystarczy uruchomić <c>rc-update add gentoo32 default</c> by chroot
odpalał się przy starcie.
</p>

<p>
Jeżeli zechcemy przełączyć się do środowiska chroot, wystarczy skorzystać z
następującej komendy: <c>linux32 chroot /mnt/gentoo32 /bin/bash</c>.
</p>

<p>
Nasz 32-bitowy chroot jest w tej chwili przygotowany do instalacji nowych
aplikacji.
</p>

</body>
</subsection>
</section>
<section>
<title>Aplikacje</title>
<subsection>
<title>Instalowanie nowych aplikacji w chroot'cie</title>
<body>

<p>
Teraz, kiedy mamy w pełni funkcjonalny 32-bitowy chroot, możemy zainstalować
każdą 32-bitową aplikację. Sprawdźmy jak przebiega instalacja nowych pakietów.
</p>

<pre caption="Instalujemy foo wewnątrz chroot'a">
# <i>linux32 chroot /mnt/gentoo32 /bin/bash</i>
# <i>source /etc/profile</i>
# <i>env-update</i>
# <i>emerge foo</i>
</pre>

<note>
Należy pamiętać o wykonaniu <c>source /etc/profile</c> oraz <c>env-update</c>
po przełączeniu się na chroota.
</note>

<p>
Zainstalowaliśmy nowy pakiet na 32-bitowym chroocie. Jeżeli chcemy go
uruchomić, musimy zainicjować go wewnątrz chroota. Jeżeli chcemy uruchomić
aplikację korzystającą z X, najlepszym rozwiązaniem jest <c>xhost</c>. Za
każdym razem gdy chcemy uruchomić aplikację wykorzystującą X, wykonujemy
następujące polecenie w naszym 64-bitowym systemie:
</p>

<pre caption="Xhost">
# <i>xhost local:localhost</i>
</pre>

<p>
Po tym przechodzimy z powrotem do chroota i możemy uruchamiać każdą aplikację
wymagającą X, wcześniej skompilowaną wewnątrz chroota.
</p>

</body>
</subsection>
</section>
<section>
<title>Podsumowanie</title>
<subsection>
<title>Podsumowanie poradnika</title>
<body>

<p>
Dzięki chrootowi możemy instalować wiele pakietów normalnie dostępnych tylko
dla systemów x86. Niektóre pakiety takie jak <c>OpenOffice</c> mogą zostać
zainstalowane przy pomocy binariów dostępnych dla Gentoo/AMD64. Niektóre z
kodeków dostępnych dla programu <c>MPlayer</c> również wymagają 32-bitowego
chroota, więc umożliwia on instalację pakietu <c>win32codecs</c>.
</p>

</body>
</subsection>
</section>
</sections>
