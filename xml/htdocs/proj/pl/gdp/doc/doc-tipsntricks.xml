<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- Orig revision: 1.10 -->
<!-- Translator: edi15ta <edi15ta@gazeta.pl> -->
<!-- Status: Finished -->

<!-- $Id: doc-tipsntricks.xml,v 1.3 2005/10/10 02:21:21 rane Exp $ -->
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/pl/gdp/doc/doc-tipsntricks.xml,v 1.3 2005/10/10 02:21:21 rane Exp $ -->

<guide link="/proj/pl/gdp/doc/doc-tipsntricks.xml" lang="pl">
<title>Wskazówki dotyczące tworzenia dokumentacji Gentoo</title>

<author title="Autor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Redaktor">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Tłumaczenie">
  <mail link="edi15ta@gazeta.pl">Mateusz Kotyrba</mail>
</author>

<abstract>
Wskazówki, które ułatwią życie każdemu deweloperowi dokumentacji Gentoo (lub
uczynią jego pracę mniej ponurą).
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.17</version>
<date>2005-10-08</date>

<chapter>
<title>Tworzenie środowiska pracy</title>
<section>
<title>Lokalne środowisko dla współpracowników</title>
<body>

<p>
Tworzymy katalog poświęcony tylko i wyłącznie tworzeniu dokumentacji. Na
przykład <path>~/praca/gentoo/doc</path>. Wewnątrz tego katalogu tworzymy
podkatalog w którym będziemy przechowywali (aktualną) angielską dokumentację
(przykładowo <path>en/</path>).
</p>

<p>
Następnie ściągamy tarball z najświeższą angielską dokumentacją:
</p>

<pre caption="Ściąganie angielskiej dokumentacji">
$ <i>wget http://www.gentoo.org/dyn/doc-snapshots/docs-latest-en.tar.bz2</i>
</pre>

<p>
Wypakowujemy plik do katalogu <path>en/</path> i mamy najnowszy obraz
angielskiej dokumentacji. Za każdym razem kiedy chcemy uaktualnić nasz obraz,
należy ściągnąć tarball ponownie. Można również otworzyć określony dokument za
pomocą przeglądarki, dodając <path>?passthru=1</path> do adresu URL.
Przykładowo:
</p>

<pre caption="Aktualizacja angielskiego dokumentu">
$ <i>wget http://www.gentoo.org/doc/en/alsa-guide.xml?passthru=1 -O alsa-guide.xml</i>
</pre>

<p>
Jeśli chcemy pomóc w tłumaczeniu dokumentów, to należy stworzyć katalog
<path>pl/</path> w którym będziemy trzymać już przetłumaczone dokumenty:
</p>

<pre caption="Ściąganie obrazu polskiej dokumentacji">
$ <i>mkdir</i> <comment>pl</comment>
$ <i>cd</i> <comment>pl</comment>
$ <i>wget http://www.gentoo.org/dyn/doc-snapshots/docs-latest-pl.tar.bz2</i>
$ <i>tar xvjf docs-latest-pl.tar.bz2</i>
</pre>

<p>
Zanim zaktualizujemy jakiś dokument, należy zawsze skopiować starszą wersję z
<path>pl/</path> do katalogu <path>~/praca/gentoo/doc</path>, a następnie
zmienić skopiowany plik. Oryginał jest nam potrzebny do stworzenia łatki:
</p>

<pre caption="Tworzenie łatki dla aktualizacji">
$ <i>diff -uNt</i> <comment>pl</comment><i>/alsa-guide.xml
alsa-guide.xml</i> > alsa-guide.diff
</pre>

</body>
</section>
<section>
<title>Interaktywne repozytorium CVS</title>
<body>

<p>
Można korzystać z <uri link="/cgi-bin/viewcvs.cgi">interaktywnego repozytorium
CVS</uri>, aby zobaczyć zmiany pomiędzy poszczególnymi wersjami. Główne
angielskie repozytorium jest <uri
link="/cgi-bin/viewcvs.cgi/en/?root=doc&amp;sortby=date">dostępne dla
wszystkich</uri> i jest aktualizowane co godzinę.
</p>

</body>
</section>
<section>
<title>Lokalne repozytorium dla deweloperów</title>
<body>

<p>
Tworzymy katalog roboczy przeznaczony na dokumentację Gentoo; dla przykładu
<path>~/praca/gentoo/doc</path>. Następnie tworzymy podkatalog <path>cvs/</path>
w którym umieszczamy obraz CVS:
</p>

<pre caption="Uzyskiwanie obrazu CVS">
$ <i>mkdir cvs; cd cvs/</i>
$ <i>export CVSROOT=</i><comment>&lt;login&gt;</comment><i>@cvs.gentoo.org:/var/cvsroot</i>
$ <i>cvs co doc</i>
</pre>

<p>
Aby uaktualnić obraz CVS, należy wykonać polecenie <c>cvs update -dP</c> w
katalogu <path>cvs/doc</path>.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Testowanie GuideXML</title>
<section>
<title>Testowanie środowiska</title>
<body>

<p>
Najpierw tworzymy katalog <path>test/</path> w którym umieścimy pliki
<path>guide.xsl</path>, <path>main.css</path> oraz kilka obrazów:
</p>

<pre caption="Tworzenie środowiska do testowania">
$ <i>mkdir test</i>
$ <i>cd test</i>
$ <i>mkdir css images</i>
$ <i>wget -P css/ http://www.gentoo.org/css/main.css</i>
$ <i>wget -P images/ http://www.gentoo.org/images/gbot-s.gif \
http://www.gentoo.org/images/gridtest.gif \
http://www.gentoo.org/images/gtop-s.jpg \
http://www.gentoo.org/images/line.gif \
http://www.gentoo.org/images/netraverse-gentoo.gif</i>
</pre>

<p>
Po czym ściągamy specjalną wersję <path>guide.xsl</path> dostępną na <uri
link="http://dev.gentoo.org/~swift/gentoo/downloads/guide.xsl">stronie SwifTa
</uri>. Ta wersja jest przystosowana do przekształcenia GuideXML do HTML na
lokalnych systemach.
</p>

<pre caption="Ściąganie guide.xsl">
$ <i>wget http://dev.gentoo.org/~swift/gentoo/downloads/guide.xsl</i>
</pre>

<p>
Na koniec edytujemy plik <path>/etc/xml/catalog</path> dodając następującą
linię:
</p>

<pre caption="Załącznik do /etc/xml/catalog">
&lt;rewriteURI uriStartString="/dtd/" rewritePrefix="<i>/usr/portage/metadata/dtd/</i>"/&gt;
</pre>

<p>
Jeśli plik <path>/etc/xml/catalog</path> jest pusty lub nie zawiera żadnych
wpisów, konieczne będzie dodanie taga <c>&lt;rewriteURI&gt;</c> <e>wewnątrz</e>
elementu <c>&lt;catalog&gt;</c>:
</p>

<pre caption="Minimalny /etc/xml/catalog">
&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE catalog PUBLIC "-//OASIS//DTD Entity Resolution XML Catalog V1.0//EN"
"http://www.oasis-open.org/committees/entity/release/1.0/catalog.dtd"&gt;
&lt;catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog"&gt;
  &lt;rewriteURI uriStartString="/dtd/" rewritePrefix="<i>/usr/portage/metadata/dtd/</i>"/&gt;
&lt;/catalog&gt;
</pre>

<p>
Ponadto niektóre pliki mogą odwoływać się do DTD znajdującego się w sieci, na
przykład poprzez wpis <path>http://www.gentoo.org/dtd/guide.dtd</path>. W takim
przypadku warto również je przepisać i uniknąć spowalniającego pracę odwoływania
się do plików w Internecie.
</p>

<pre caption="Dodatek w /etc/xml/catalog">
&lt;rewriteURI uriStartString="/dtd/" rewritePrefix="<i>/usr/portage/metadata/dtd/</i>"/&gt;
</pre>

</body>
</section>
<section>
<title>Testowanie przewodnika Gentoo</title>
<body>

<p>
Aby przetestować przewodnik Gentoo, najpierw sprawdźmy czy używa on prawidłowej
składni XML:
</p>

<pre caption="Używanie xmllint do weryfikacji przewodników">
$ <i>xmllint --valid --noout alsa-guide.xml</i>
</pre>

<p>
Jeśli <c>xmllint</c> nic nie zwróci, oznacza to, że plik jest bez błędów
(przynajmniej tagi XML). Następnie przekształcamy go do HTML. Użytecznym
narzędziem jest też <c>xsltproc</c>:
</p>

<pre caption="Przekształcanie na HTML">
$ <i>xsltproc --novalid test/guide.xsl alsa-guide.xml > test/alsa-guide.html</i>
</pre>

<p>
Jeśli żaden błąd nie zostanie zwrócony, wystarczy otworzyć dokument za pomocą
przeglądarki. Znajduje się on pod adresem
<uri>file:///home/użytkownik/praca/gentoo/doc/test/alsa-guide.html</uri>. Jeśli
nie zadziałało, to należy tak długo naprawiać przewodnik aż proces się uda.
</p>

</body>
</section>
<section>
<title>Testowanie Podręcznika Gentoo</title>
<body>

<p>
Podręcznik Gentoo jest podzielony na rozdziały. Aby przetworzyć jeden z nich,
należy posłużyć się zarówno plikiem <path>handbook-x86.xml</path> jak i
wymaganym <path>hb-</path> (na przykład <path>hb-install-about.xml</path>).
Następnie dokument musi przejść przez <c>xsltproc</c> z tymi samymi parametrami
z którymi będzie przeglądany, mianowicie <c>part</c> i <c>chap</c>. Przykładowo,
aby sprawdzić poprawność <path>hb-install-about.xml</path>:
</p>

<pre caption="Sprawdzanie poprawności hb-install-about.xml">
$ <i>xmllint --valid --noout handbook-x86.xml</i>
$ <i>xmllint --valid --noout hb-install-about.xml</i>
$ <i>xsltproc --stringparam part 1 --stringparam chap 1 test/guide.xsl handbook-x86.xml > test/hb-install-about.html</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Używanie ustawień axkit</title>
<section>
<body>

<p>
Niektórzy deweloperzy dokumentacji preferują używanie ustawień axkit podobnych
do tych, które są na <uri>http://www.gentoo.org</uri>. Poniżej znajduje się
kilka wskaźników, które pomogą ustawić podobną konfigurację.
</p>

<warn>
Wygląda na to, że axkit jest bardzo wrażliwy na wersje pakietów, których używa,
szczególnie libxml2. Konfiguracja opisana poniżej działa. Każda inna kombinacja
pakietów może działać nieprawidłowo.
</warn>

<p>
Najpierw instalujemy wymagane pakiety:
</p>

<pre caption="Instalowanie specyficznych wersji wymaganych pakietów">
<comment>(Należy sprawdzić czy pakiety są dostępne w Portage)</comment>
# <i>emerge -vp =dev-libs/libxml2-2.6.17 =dev-libs/libxslt-1.1.12 \
=dev-perl/AxKit-1.6.1 =dev-perl/XML-XPath-1.13 =dev-perl/XML-LibXML-1.58 \
=dev-perl/XML-LibXSLT-1.57 =dev-perl/XML-Parser-2.34 \
=net-www/apache-1.3.33</i>

These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild R ] dev-libs/libxml2-2.x.17 -debug -ipv6 +python +readline 0 kB
[ebuild R ] dev-libs/libxslt-1.1.12 +crypt +python 0 kB
[ebuild R ] dev-perl/AxKit-1.6.1 +gnome 0 kB
[ebuild R ] dev-perl/XML-XPath-1.13 0 kB
[ebuild R ] dev-perl/XML-LibXML-1.58 0 kB
[ebuild R ] dev-perl/XML-LibXSLT-1.57 0 kB
[ebuild R ] dev-perl/XML-Parser-2.34 0 kB
[ebuild R ] net-www/apache-1.3.33 +pam 0 kB

<comment>(Instalacja pakietów)</comment>
# <i>emerge =dev-libs/libxml2-2.6.17 =dev-libs/libxslt-1.1.12 \
=dev-perl/AxKit-1.6.1 =dev-perl/XML-XPath-1.13 =dev-perl/XML-LibXML-1.58 \
=dev-perl/XML-LibXSLT-1.57 =dev-perl/XML-Parser-2.34 \
=net-www/apache-1.3.33</i>
</pre>

<p>
Po czym edytujemy następujące pliki konfiguracyjne:
</p>

<pre caption="/etc/apache/conf/commonapache.conf">
<comment>(Wewnątrz)</comment>
&lt;IfModule mod_dir.c>
<comment>(Do listy dodajemy index.xml)</comment>
DirectoryIndex index.xml index.html index.php index.php3 index.shtml
index.cgi index.pl index.htm Default.htm default.htm &lt;/IfModule>

<comment>(Dodajemy następujące wiersze)</comment>
&lt;IfDefine PERL>
LoadModule perl_module extramodules/libperl.so
# AddModule mod_perl.c
PerlModule AxKit
SetHandler perl-script
PerlHandler Apache::AxKit::StyleChooser::PathInfo AxKit
AddHandler axkit .xml .xsp
AxAddPlugin Apache::AxKit::StyleChooser::QueryString
AxAddXSPTaglib AxKit::XSP::Util
AxAddXSPTaglib AxKit::XSP::IfParam
AxAddXSPTaglib AxKit::XSP::Param
AxAddStyleMap application/x-xsp Apache::AxKit::Language::XSP
AxAddStyleMap text/xsl Apache::AxKit::Language::LibXSLT
&lt;AxStyleName "#default">
AxAddProcessor text/xsl /xsl/guide.xsl
&lt;/AxStyleName>
&lt;AxStyleName printable>
AxAddProcessor text/xsl /xsl/guide-print.xsl
&lt;/AxStyleName>
&lt;/IfDefine>

<comment>(Wewnątrz)</comment>
&lt;IfModule mod_alias.c>
Alias /icons/ /var/www/localhost/icons/
<comment>(Odkomentowujemy następującą linię)</comment>
#Alias /doc /usr/share/doc
</pre>

<pre caption="/etc/conf.d/apache">
<comment>(Dodajemy -D PERL do listy opcji)</comment>
  APACHE_OPTS="-D PERL"
</pre>

<p>
Następnie kopiujemy pliki dokumentacji łącznie z plikami DTD oraz arkuszami
styli do <path>/var/www/localhost/htdocs/</path>. Należy stworzyć katalogi
<path>css/</path>, <path>doc/</path>, <path>dtd/</path>, <path>images/</path> i
<path>xsl/</path>. Deweloperzy Gentoo mogą kopiować z lub tworzyć dowiązania
symboliczne do ich lokalnych kopii CVS. Inni wpółpracownicy powinni ściągnąć
pliki z naszego interfejsu <uri
link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/xml/htdocs/?root=gentoo">
viewCVS</uri>.
</p>

<p>
Wszystko co jeszcze potrzebujemy to uruchomienie serwera apache:
</p>

<pre caption="Uruchamianie apache">
# <i>/etc/init.d/apache start</i>
# <comment>(Jeśli chcemy uruchamiać go automatycznie podczas startu
systemu, to dodajemy go do domyślnego poziomu uruchamiania)</comment>
# <i>rc-update add apache default</i>
</pre>

<p>
Wpisujemy teraz do przeglądarki <uri>http://nasz_serwer/doc/en/</uri>
lub po prostu <uri>http://localhost/doc/en/</uri> jeśli zainstalowaliśmy, na
naszej stacji roboczej, axkit. Możemy sprawdzić
<path>/var/log/apache/access_log</path>, aby sprawdzić kto nas odwiedził lub
<path>/var/log/apache/error_log</path> jeśli wyskoczyły jakieś błędy.
</p>

<note>
Użytkownicy Mozilli powinni ustawić <c>keyword.enabled</c> na <c>false</c> na
stronie <uri>about:config</uri> używając lokalnego hosta.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Często zadawane pytania</title>
<section>
<title>Jak przekonwertować plik do UTF-8?</title>
<body>

<p>
Istnieje dość sporo narzędzi, które mogą nam w tym pomóc. Najpopularniejsze są
<c>app-text/recode</c> oraz <c>iconv</c>, który jest częścią pakietu
<c>sys-libs/glibc</c>.
</p>

<p>
Użycie recode jest bardzo proste. Mówimy mu jakie jest obecne kodowanie
dokumentu, a następnie jakie kodowanie chcielibyśmy uzyskać.
</p>

<p>
Przykładowo, aby przekonwertować dokument w ISO-8859-2 (standardowe polskie
kodowanie, Latin-2) na UTF-8, używamy:
</p>

<pre caption="Konwersja pliku">
<comment>(l2 = ISO-8859-2, u8 = UTF-8)</comment>
$ <i>recode l2..u8 file.xml</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Najczęściej popełnianie błędy</title>
<section>
<title>Zapominanie o aspekcie wielu architektur Podręcznika Gentoo</title>
<body>

<p>
Pliki w <path>[gentoo]/xml/htdocs/doc/en/handbook</path>, które nie kończą
się przyrostkiem "-&lt;ARCHITEKTURA&gt;.xml" są <e>wspólne</e> dla wszystkich
architektur.
</p>

<p>
Jeśli potrzebujemy dodać coś dotyczącego tylko wybranej architektury i nie
wiemy w jaki sposób to umieścić w tym pliku, wtedy należy poprosić o
rozwiązanie tego problemu pisząc na adres <mail>gentoo-doc@gentoo.org</mail>.
Czasami istnieje sposób modyfikacji pliku bez komplikowania życia użytkownikom
innych architektur.
</p>

</body>
</section>
<section>
<title>Nie wstawianie informacji o wersji i dacie lub czynienie tego w zły sposób</title>
<body>

<p>
<e>Trzeba</e> zmienić wersję i datę podczas dokonywania zmian (SwifT morduje
tych, którzy o tym zapomną). Wersja jest naszą wewnętrzną informacją ułatwiającą
tłumaczom dokumentacji śledzenie zmian w dokumentach, a data mówi użytkownikom
kiedy dokument był zmieniany po raz ostatni.
</p>

<p>
Podczas aktualizacji Podręcznika zmieniamy datę i wersję wyłącznie tych plików
które uaktualnialiśmy. Nie zmieniamy pliku handbook-<e>ARCHITEKTURA</e>.xml
jeśli nie zmienialiśmy jego zawartości.
</p>

<p>
Innym częstym błędem jest aktualizacja wersji tak jakby to była liczba
dziesiętna. A mianowicie ona nią nie jest. Po <c>3.9</c> powinno być
<c>3.10</c>, nie <c>4.0</c>, ani nie <c>3.91</c>.
</p>

</body>
</section>
</chapter>
</guide>
