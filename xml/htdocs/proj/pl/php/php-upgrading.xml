<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/pl/php/php-upgrading.xml,v 1.2 2006/05/12 18:46:33 shadoww Exp $ -->

<guide link="/proj/pl/php/php-upgrading.xml" lang="pl">
<title>Aktualizowanie PHP</title>

<author title="Autor">
 <mail link="akorthaus@web.de">Andreas Korthaus</mail>
</author>
<author title="Tłumaczenie">
  Adrian Spaleniak
</author>

<abstract>
Dokument opisuje procedurę postępowania, dzięki której użytkownicy mogą
bezpiecznie zaktualizować zainstalowane pakiety PHP.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.1</version>
<date>2006-03-19</date>

<chapter>
<title>Wprowadzenie</title>
<section>
<body>

<p>
W przeszłości wielokrotnie proszono nas o oznaczenie PHP5 jako stabilne w
drzewie Portage. Problemem nie było samo PHP5, powodem była duża ilość
pakietów, rozszerzeń i programów, które z PHP5 nie chciały działać, na co nie
mogliśmy nic poradzić. PHP5 nie jest w 100% kompatybilne z PHP4 i nie każdy
program w PHP4 może zostać przeniesiony i uruchomiony w PHP5. Wielu
użytkowników będzie zmuszonych do korzystania z PHP4 jeszcze przez długi czas.
</p>

<p>
Sposobem na rozwiązanie problemu jest połączenie PHP4 i PHP5 w jedno
zróżnicowane środowisko. Nie byłoby to jednak możliwe przy obecnym
rozmieszczeniu pakietów oraz eklasie PHP, z tego powodu włożono wiele pracy by
ebuildy i eklasy odpowiednio podzielić.
</p>

<p>
Dokument ten szczegółowo omawia proces aktualizacji.
</p>

<note>
Nowe pakiety PHP wymagają Apache, należy zapoznać się z tekstem <uri
link="/doc/pl/apache-upgrading.xml">Aktualizowanie Apache</uri> jeżeli jeszcze
nie zostało zaktualizowane.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Zmiany</title>
<section>
<title>Podstawowe zbiorcze pakiety PHP</title>
<body>

<p>
Wszystkie ebuildy PHP (<c>dev-php/php</c>, <c>dev-php/php-cgi</c> i
<c>dev-php/mod_php</c>) zostały połączone w jeden ebuild: <c>dev-lang/php</c>. 
</p>

<p>
Aby wybrać SAPI, używamy tych flag USE:
</p>

<ul>
  <li><c>cgi</c> - instaluje <path>/usr/bin/php-cgi</path></li>
  <li><c>cli</c> - instaluje <path>/usr/bin/php</path></li>
  <li>
    <c>apache</c> - instaluje <c>mod_php</c> dla Apache 1.3 (nowy projekt)
  </li>
  <li>
    <c>apache2</c> - instaluje <c>mod_php</c> dla Apache 2.0 (nowy projekt)
  </li>
</ul>

<p>
Można używać zamiennie tych flag USE, z tym wyjątkiem, że nie można mieć obu   
<c>apache</c> oraz <c>apache2</c> jednocześnie.
</p>

<p>
Dzięki tym ebuildom możemy posiadać jednocześnie zarówno PHP4 jak i PHP5.
</p>

<pre caption="Instalowanie PHP">
<comment>(Instaluje najnowszą wersję PHP wraz z modułami CLI oraz Apache2)</comment>
# <i>USE="cli apache2" emerge 'dev-lang/php'</i>

<comment>(Instaluje jedynie PHP4)</comment>
# <i>USE="cli apache2" emerge '=dev-lang/php-4*'</i>

<comment>(Instaluje zarówno PHP4 jak i PHP5)</comment>
# <i>USE="cli apache2" emerge '=dev-lang/php-4*' '=dev-lang/php-5*'</i>
</pre>

<note>
Flagi USE nie powinny być używane w ten sposób, na dłuższą metę należy
skorzystać z pliku <path>/etc/portage/package.use</path>, omówimy to później.
</note>
  
</body>
</section>
<section>
<title>Nowe kategorie w Portage</title>
<body>

<p>
Nowe ebuildy PHP przeniesiono z <c>dev-php</c> do <c>dev-lang/php</c>.  By
umożliwić niezależną instalację pakietów dla PHP4 i PHP5 dodano dwie nowe
kategorie w Portage: <c>dev-php4</c> oraz <c>dev-php5</c>.  Kategorie te są
używane głównie przez pakiety PECL takie jak: <c>pecl-pdo</c>, <c>pecl-apc</c>,
<c>php-java-bridge</c> i <c>xdebug</c>.
</p>

<p>
Instalowanie <c>pecl-apc</c>:
</p>

<pre caption="Instalacja rozszerzeń PHP takich jak PECL::APC (przykład)">
<comment>(Instaluje APC jedynie dla PHP4)</comment>
<i>emerge dev-php4/pecl-apc</i>

<comment>(Instaluje APC jedynie dla PHP5)</comment>
<i>emerge dev-php5/pecl-apc</i>

<comment>(Instaluje APC dla PHP4 oraz PHP5)</comment>
<i>emerge dev-php4/pecl-apc dev-php5/pecl-apc</i>
</pre>

</body>
</section>
<section>
<title>Nowe katalogi</title>
<body>

<ul>
  <li>
    Zawartość nowych ebuildów będzie się znajdować w <path>/usr/lib/php4</path>
    i <path>/usr/lib/php5</path> (moduły Apache umieszczone będą w odpowiednim
    dla nich miejscu).
  </li>
  <li>
    Pakiety PEAR będą położone w <path>/usr/share/php</path> (wcześniej
    <path>/usr/lib/php</path>).
  </li>
  <li>
    Pakietów PECL nie konfigurujemy już przez dodanie opcji do pliku
    <path>php.ini</path>, a przez skopiowanie pliku <path>[PACKAGE].ini</path>
    do katalogu <path>/etc/php/[SAPI]/ext</path>.
  </li>
</ul>

</body>
</section>
<section>
<title>Tworzenie dowiązań symbolicznych binariów PHP</title>
<body>

<p>
W przypadku gdy instalowane są obie wersje PHP:
</p>

<pre caption="Instalowanie PHP4 i PHP5">
# <i>USE="cgi cli apache2" emerge '=dev-lang/php-4*' '=dev-lang/php-5*'</i>
</pre>

<p>
Ebuildy utworzą dowiązania symboliczne w <path>/usr/bin</path> dla ostatniej
zainstalowanej wersji PHP. W tym przypadku PHP5, biorąc pod uwagę, że zostało
zainstalowane po PHP4. Jeśli chcemy by <path>/usr/bin/php</path>
lub <path>/usr/bin/php-cgi</path> było miejscem położenia dla PHP4 lub też
jedno dla PHP4, inne dla PHP5 itp. możemy <uri link="#doc_chap3_sect5">posłużyć
się narzędziem php-select</uri> z pakietu <c>app-admin/php-toolkit</c>, które w
znacznym stopniu ułatwia tworzenie dowiązań symbolicznych dla binariów.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Aktualizowanie poleceń</title>
<section>
<title>Szukanie pakietów wymagających uaktualnienia</title>
<body>

<p>
W pierwszej kolejności należy ustalić, które dodatkowe pakiety wymagają
aktualizacji. W tym celu można wykorzystać <c>equery</c>, który jest częścią
pakietu <c>app-portage/gentoolkit</c>: 
</p>

<pre caption="Lista pakietów zainstalowanych w dev-php">
$ <i>equery list 'dev-php/'</i>
[ Searching for all packages in 'dev-php' among: ]
 * installed packages
[I--] [  ] dev-php/php-4.4.0 (0)
[I--] [  ] dev-php/mod_php-4.4.0 (1)
[I--] [  ] dev-php/smarty-2.6.10 (0)
[I--] [  ] dev-php/PEAR-PEAR-1.3.5-r1 (0)
[I--] [  ] dev-php/PEAR-Mail-1.1.6 (0)
[I--] [  ] dev-php/PEAR-MDB-1.3.0 (0)
[I--] [  ] dev-php/PECL-apc-3.0.6 (0)
[I--] [  ] dev-php/PECL-imagick-0.9.11 (0)
[I--] [  ] dev-php/xdebug-2.0.0_beta3 (0)
</pre>

<impo>
Pakiety które zainstalowaliśmy mogą się znacznie różnić od tej listy, dlatego
należy się upewnić, że jest ona właściwa dla naszego systemu. Zachowujemy
wygenerowaną tak jak w powyższym przykładzie listę, by mieć pewność, że zostaną
zaktualizowane wszystkie pakiety. 
</impo>

<note>
Nie dotyczy to większości programów z kategorii webapp, ponieważ mają osobną
eklasę, która dba o to by były instalowane poprawnie. Warto jednak sprawdzić
czy nie ma jej nowej wersji.
</note>

<p>
Rozszerzenia PHP, takie jak:
</p>

<ul>
  <li><c>PECL-apc</c></li>
  <li><c>PECL-imagick</c></li>
  <li><c>xdebug</c></li>
</ul>

<p>
Podzielono na 2 osobne kategorie <c>dev-php4</c> oraz <c>dev-php5</c>, by
umożliwić ich niezależne użycie dla obu wersji PHP. Dodatkowo większość z nich
ma zmienione nazwy:
</p>

<p>
Przykłady nowych katalogów i ich nowego nazewnictwa:
</p>

<table>
  <tr>
    <th>Rozszerzenie PHP</th>
    <th>stare</th>
    <th>nowe PHP4</th>
    <th>nowe PHP5</th>
  </tr>
  <tr>
    <ti>APC</ti>
    <ti>dev-php/PECL-apc</ti>
    <ti>dev-php4/pecl-apc</ti>
    <ti>dev-php5/pecl-apc</ti>
  </tr>
  <tr>
    <ti>Imagick</ti>
    <ti>dev-php/PECL-imagick</ti>
    <ti>dev-php4/pecl-imagick</ti>
    <ti>dev-php5/pecl-imagick</ti>
  </tr>
  <tr>
    <ti>Xdebug</ti>
    <ti>dev-php/xdebug</ti>
    <ti>dev-php4/xdebug</ti>
    <ti>dev-php5/xdebug</ti>
  </tr>
</table>

<note>
Zanim zainstalujemy ponownie te rozszerzenia, należy przejrzeć
<path>/usr/portage</path>, by zobaczyć jak zostały nazwane poszczególne
pakiety.
</note>

</body>
</section>
<section>
<title>Usuwanie starych pakietów</title>
<body>

<p>
Wykonaliśmy wiele zmian w działaniu PHP w obrębie Gentoo. Zanim przystąpimy do
instalacji nowych pakietów, wymagane jest całkowite usunięcie starych pakietów:
</p>

<pre caption="Usuwanie starych pakietów (przykład)">
<comment>(Usuwanie pakietów PHP)</comment>
<i>emerge --unmerge php mod_php</i>

<comment>(Usuwanie rozszerzeń PHP)</comment>
<i>emerge --unmerge PECL-apc PECL-imagick xdebug</i>

<comment>(Usuwanie bibliotek/aplikacji PHP)</comment>
<i>emerge --unmerge PEAR-PEAR PEAR-Mail PEAR-MDB smarty</i>
</pre>

</body>
</section>
<section>
<title>Flagi USE</title>
<body>

<p>
Pewne flagi USE zostały już przez nas dodane, ale warto je przejrzeć i utworzyć
odpowiednie wpisy w <path>/etc/portage/package.use</path> (plik należy utworzyć
w przypadku gdy nie istnieje). 
</p>

<note>
<path>/etc/portage/package.use</path> ustawi oraz zapisze flagi USE dla PHP bez
konieczności globalnych zmian poprzez edycję pliku <path>make.conf</path>.
</note>

<p>
Ustawiamy flagi USE stosownie do instalacji PHP jaką chcemy otrzymać (zalecane
jest ustawienie przynajmniej jednej flagi USE <c>cli</c>):
</p>

<pre caption="Flagi USE dla dev-lang/php (przykład)">
dev-lang/php -* cli apache2 ctype expat fastbuild ftp gd hash iconv memlimit
mysql nls pcre pic pdo reflection session simplexml sockets spl ssl tokenizer
truetype unicode xml xsl zlib
</pre>

<note>
<c>-*</c> wyłączy wszystkie flagi USE (nawet te podstawowe dla PHP jak np.
Session-, PCRE-, gd- i MySQL-support!), należy więc sprecyzować każdą flagę USE
dla każdego rozszerzenia, którego będziemy używać. Szczegóły znajdują się w
tekście <uri
link="http://svn.gnqs.org/projects/gentoo-php-overlay/wiki/ManagingExtensions">
Zarządzanie rozszerzeniami</uri>. Trzeba również ustawić flagi USE dla
domyślnych wartości takich jak <c>pcre</c> jeśli chcemy używać <uri
link="http://svn.gnqs.org/projects/gentoo-php-overlay/wiki/PhpRefPcre"> preg_*
Functions</uri> lub <c>session</c>, jeśli będziemy używać <uri
link="http://svn.gnqs.org/projects/gentoo-php-overlay/wiki/PhpRefSession">
Session Handling Functions</uri>.
</note>

<p>
Jeżeli PHP4 i PHP5 będą instalowane równolegle, możemy użyć osobnych flag USE
dla każdej z wersji: 
</p>

<pre caption="Osobne flagi USE dla PHP4 i PHP5 (przykład)">
=dev-lang/php-4* -* cli cgi apache2 ctype expat fastbuild force-cgi-redirect
ftp gd iconv ipv6 memlimit mysql nls pcre pic posix session sockets ssl
tokenizer truetype unicode xml xsl zlib
=dev-lang/php-5* -* cli cgi apache2 ctype fastbuild force-cgi-redirect ftp gd
hash iconv ipv6 memlimit mysql nls pcre pic posix pdo reflection session
simplexml soap sockets spl sqlite ssl tokenizer truetype unicode xml xmlreader
xmlwriter xsl zlib
</pre>

<note>
Lista zalecanych flag USE <uri 
link="http://svn.gnqs.org/projects/gentoo-php-overlay/wiki/
CommonQuestions#DoYouRecommendAnyUSEFlags">Zalecane flagi USE</uri>.
Lista flag USE dostępnych dla PHP <uri 
link="http://svn.gnqs.org/projects/gentoo-php-overlay/wiki/NewUseFlags">Tabela
flag USE</uri> znajdująca się na wiki.
</note>

</body>
</section>
<section>
<title>Instalowanie PHP</title>
<body>

<p>
Teraz należy wybrać instalację, którą chcemy posiadać. Możemy wybrać tylko PHP4
lub PHP5 albo oba równolegle. Samo PHP4 instalujemy poprzez zemergowanie
<c>=dev-lang/php-4*</c>, by zainstalować PHP5 (najnowszą wersję) użyjemy
<c>dev-lang/php</c>, natomiast  obie wersje równolegle instalujemy przez
<c>=dev-lang/php-4*</c> oraz <c>=dev-lang/php-5*</c>.
</p>

<p>
Sprawdzanie ustawień flag USE:
</p>

<pre caption="Sprawdzenie flag USE (przykład)">
<comment>(Sprawdza pakiet PHP4)</comment>
<i>emerge --pretend --verbose '=dev-lang/php-4*'</i>

<comment>(Sprawdza pakiet PHP5)</comment>
<i>emerge --pretend --verbose '=dev-lang/php-5*'</i>

<comment>(Sprawdza rozszerzenia PHP dla PHP4)</comment>
<i>emerge --pretend --verbose dev-php4/pecl-apc dev-php4/pecl-imagick dev-php4/xdebug</i>

<comment>(Sprawdza rozszerzenia PHP dla PHP5)</comment>
<i>emerge --pretend --verbose dev-php5/pecl-apc dev-php5/pecl-imagick</i>

<comment>(Sprawdza biblioteki/aplikacje PHP)</comment>
<i>emerge --pretend --verbose PEAR-PEAR PEAR-Mail PEAR-MDB smarty</i>
</pre>

<p>
Jeśli wszystko jest w porządku, instalujemy PHP:
</p>

<pre caption="Instalowanie nowych pakietów (przykład)">
<comment>(Instalowanie pakietu PHP4)</comment>
<i>emerge '=dev-lang/php-4*'</i>

<comment>(Instalowanie pakietu PHP5)</comment>
<i>emerge '=dev-lang/php-5*'</i>

<comment>(Instalowanie rozszerzenia PHP dla PHP4)</comment>
<i>emerge dev-php4/pecl-apc dev-php4/pecl-imagick dev-php4/xdebug</i>

<comment>(Instalowanie rozszerzenia PHP dla PHP5)</comment>
<i>emerge dev-php5/pecl-apc dev-php5/pecl-imagick</i>

<comment>(Instalowanie bibliotek/aplikacji PHP)</comment>
<i>emerge PEAR-PEAR PEAR-Mail PEAR-MDB smarty</i>
</pre>

</body>
</section>
<section>
<title>PHP4 i PHP5 równolegle: wybór binariów do użycia z cli/cgi</title>
<body>

<p>
Po zemergowaniu będziemy mieli binaria dostępne dla <c>cli</c> i/lub <c>cgi</c>
w <path>/usr/lib/php4/bin</path> i/lub <path>/usr/lib/php5/bin</path>. Jeśli
zainstalowaliśmy oba pakiety, czyli PHP4 i PHP5, Portage nie zdecyduje za
nas,które z nich powinno być użyte jako domyślne i utworzy dowiązanie do
najnowszej zainstalowanej przez nas wersji PHP w <path>/usr/bin</path>.  Z tego
wynika, że jeśli jako ostatnie instalowaliśmy PHP5 to <path>/usr/bin/php</path>
będzie dowiązane do <path>/usr/lib/php5/bin/php</path>. Tak więc binaria
<c>cli</c> i/lub <c>cgi</c>, tak jak <c>php-devel</c> (odpowiedzialne za
utworzenie rozszerzeń PHP przez <c>phpize</c> i <c>php-config</c>) muszą być
dowiązane (do <path>/usr/bin</path>), można to prosto wykonać poprzez użycie
<c>php-select</c>, który jest częścią <c>app-admin/php-toolkit</c>.
</p>

<note>
Pakiet <c>dev-lang/php</c> jest zależny od <c>app-admin/php-toolkit</c> 
tak więc <c>php-select</c> powinno być automatycznie dostępne po 
zainstalowaniu nowych pakietów PHP.
</note>

<p>
Zakładając, ze zainstalowaliśmy <c>=dev-lang/php-4*</c> oraz 
<c>=dev-lang/php-5*</c>, wykonujemy polecenie <c>php-select</c> 
by pokazać obecnie wybrane wersje PHP:
</p>

<pre caption="Pokazuje obecnie wybrane wersje PHP">
<comment>(Dla cli)</comment>
<i>php-select php</i>

<comment>(Dla cgi)</comment>
<i>php-select php-cgi</i>

<comment>(Dla phpize, php-config)</comment>
<i>php-select php-devel</i>
</pre>

<p>
Powinniśmy zobaczyć coś w rodzaju:
</p>

<pre caption="Przykładowy listing programu php-select">
# <i>php-select php</i>
/usr/bin/php is set to /usr/lib/php5/bin/php
</pre>

<p>
Oznacza to, że domyślna ścieżka binariów cli <path>/usr/bin/php</path> jest
dowiązana do biblioteki PHP5 <path>/usr/lib/php5/bin/php</path>. Tak więc
skrypty PHP korzystające z <path>/usr/bin/php</path> będą wykonane przez PHP5.
</p>

</body>
</section>
<section>
<title>Użycie php-select do zmiany domyślnych wersji PHP</title>
<body>

<p>
Jeśli domyślne ustawienia wersji z poprzedniego rozdziału nie są
satysfakcjonujące, można ponownie użyć <c>php-select</c> by wybrać 
pożądane wersje:
</p>

<pre caption="Wybór interesującej nas wersji">
<comment>(Dla cli)</comment>
<i>php-select php php4</i>

<comment>(Dla cgi)</comment>
<i>php-select php-cgi php5</i>

<comment>(Dla phpize, php-config)</comment>
<i>php-select php-devel php5</i>
</pre>

<note>
Wpisanie <c>php-select -h</c> pokaże nam jak można jeszcze 
wykorzystać <c>php-select</c>.
</note>

<p>
Sprawdzanie dowiązań symbolicznych:
</p>

<pre caption="Sprawdza dowiązania">
# <i>stat /usr/bin/php /usr/bin/php-cgi /usr/bin/phpize /usr/bin/php-config | grep File</i>
 File: `/usr/bin/php' -> `/usr/lib/php4/bin/php'
 File: `/usr/bin/php-cgi' -> `/usr/lib/php5/bin/php-cgi'
 File: `/usr/bin/phpize' -> `/usr/lib/php5/bin/phpize'
 File: `/usr/bin/php-config' -> `/usr/lib/php5/bin/php-config'
</pre>

<note>
Zauważmy, że <c>php-select</c> zmienia jedynie domyślne wersje. Jeśli
zainstalowaliśmy PHP4 i PHP5 cgi/cli możemy zawsze użyć bezpośredniej ścieżki
jak <path>/usr/lib/php4/bin/php</path> i<path>/usr/lib/php5/bin/php</path>
by uruchomić skrytp PHP z określonymi wersjami. Można również użyć PHP4 i PHP5 
cgi w tym samym przykładzie/przypadku Apache, ale nie możemy korzystać z dwóch
różnych modułów PHP Apache w jednym przypadku/przykładzie. Więcej informacji
znajduje się w 
<uri link="php4-php5-configuration.xml">
Przewodniku konfiguracji PHP4 i PHP5</uri>.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Przenoszenie plików konfiguracyjnych</title>
<section>
<body>

<p>
Pliki konfiguracyjne pakietu PHP znajdują się w katalogu <path>/etc/php</path>,
który zawiera jeden podkatalog dla każdego SAPI dla każdej wersji PHP:
</p>

<pre caption="Listuje katalogi (z) konfiguracji/ą PHP">
$ <i>ls -1 /etc/php</i>
apache2-php4
apache2-php5
cli-php4
cli-php5
</pre>

<p>
Każdy podkatalog zawiera własne <path>php.ini</path>, tak jak stare pakiety.
</p>

</body>
</section>
<section>
<title>Zmiany w php.ini</title>
<body>

<p>
Zalecane jest użycie <c>etc-update</c> lub <c>dispatch-conf</c> i przejrzenie
różnic pomiędzy starymi a nowymi ustawieniami w <path>php.ini</path>.  Dwie
opcje/dyrektywy, które bezwzględnie powinny być sprawdzone to
<c>include_path</c> oraz <c>extension_dir</c>. Tutaj ostrożnie,
<c>extension_dir</c> różni się pomiędzy poszczególnymi wersjami PHP (również
pomiędzy 5.0, i 5.1!).
</p>

<p>
Przykład dla 5.1 w <path>/etc/php/apache2-php5/php.ini</path> i 
<path>/etc/php/cli-php5/php.ini</path>:
</p>

<pre caption="Stare ustawienia w php.ini">
include_path = ".:/usr/lib/php"
extension_dir = "/usr/lib/php/extensions/no-debug-non-zts-20050617/"
</pre>

<pre caption="Nowe ustawienia w php.ini">
include_path = ".:/usr/share/php"
extension_dir = "/usr/lib/php5/lib/php/extensions/no-debug-non-zts-20050617/"
</pre>

<warn>
Należy użyć <c>etc-update</c> lub <c>dispatch-conf</c> by mieć pewność co do 
poprawnych ustawień dla każdego z plików.
</warn>

</body>
</section>
<section>
<title>Zmiany w konfiguracji rozszerzeń PHP</title>
<body>

<p>
Nowy pakiet PHP nie przechowuje już konfiguracji z zewnętrznych (dzielonych)
rozszerzeń PHP w <path>php.ini</path>. Dyrektywy będą przechowywane w
specyficznych dla każdego rozszerzenia pliku konfiguracyjnym ulokowanym w
<path>/etc/php/*/ext</path>. W celu włączenia wspólnych rozszerzeń, używane są
dowiązania z <path>/etc/php/*/ext-active</path>. Jeśli chcemy włączyć
rozszerzenie, tworzymy dowiązanie symboliczne w
<path>/etc/php/*/ext-active</path> odpowiadające plikowi
<path>[EXTENSION].ini</path> w <path>/etc/php/*/ext/</path>.  Jeśli chcemy
usunąć/wyłączyć rozszerzenie, usuwamy dowiązanie.
</p>

<p>
Jeśli wcześniej było zainstalowane <c>dev-php/PECL-apc</c> to konfiguracja dla
APC znajduje się w <path>php.ini</path>. Jeśli pakiet <c>dev-php5/pecl-apc</c> 
został przez nas przeinstalowany to domyślna konfiguracja APC będzie zapisana 
do <path>/etc/php/*5/ext/apc.ini</path>.
</p>

<p>
Należy więc przenieść konfigurację APC z <path>/etc/php/*5/php.ini</path> do
<path>/etc/php/*5/ext/apc.ini</path> i utworzyć dowiązanie z
<path>/etc/php/*5/ext-active/apc.ini</path> do <path>/etc/php/*5/ext/apc.ini
</path>.
</p>

<note>
Jeśli instalujemy PHP jako moduł Apache, należy ponownie uruchomić Apache po 
zainstalowaniu i skonfigurowaniu.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Konfigurowanie Apache do pracy z PHP4 i PHP5</title>
<section>
<body>

<p>
Aby skłonić Apache do ładowania modułu (mod_php) PHP4 lub PHP5, wystarczy dodać
odpowiednio <c>-D PHP4</c> lub <c>-D PHP5</c> do zmiennej <c>-D PHP4</c>
respectively <c>-D PHP5</c> to <c>APACHE2_OPTS</c> w pliku
<path>/etc/conf.d/apache2</path>.
</p>

<pre caption="Konfiguranie ładowania mod_php w Apache">
<comment>(dla PHP4)</comment>
<i>APACHE2_OPTS="-D PHP4"</i>

<comment>(dla PHP5)</comment>
<i>APACHE2_OPTS="-D PHP5"</i>
</pre>

<p>
Istnieje wiele sposobów na to by Apache działał z dwiema równoległymi wersjami
PHP. Najłatwiej jest użyć PHP4 i PHP5 jako binarii cgi, albo cgi PHP4 i modułu
PHP5 (lub na odwrót). Nie jest możliwe jednoczesne korzystanie z modułów PHP4 i
PHP5 w jednym procesie Apache.
</p>

<p>
Stworzyliśmy przewodnik konfiguracji PHP4 i PHP5, które przedstawia część z
możliwych rozwiązań <uri link="php4-php5-configuration.xml">Przewodnik
konfiguracji PHP4 i PHP5</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Pomoc</title>
<section>
<body>

<p>
W razie jakichkolwiek problemów związanych z nowym pakietem Gentoo PHP, oto 
miejsca gdzie można znaleźć pomoc:
</p>

<ul>
  <li>
    <uri
    link="http://svn.gnqs.org/projects/gentoo-php-overlay/wiki/CommonQuestions">
    Ogólne pytania</uri> związane z PHP w Gentoo</li>
  <li>
    <uri link="http://svn.gnqs.org/projects/gentoo-php-overlay">Deweloperska
    strona PHP</uri>
  </li>
  <li>
    Kanał #gentoo-php w sieci irc.freenode.net. Miejsce spotkań autorów obsługi
    i użytkowników PHP w Gentoo.
  </li>
  <li>
    <uri link="http://forums.gentoo.org/">Forum Gentoo</uri> popularne miejsce
    do zadawania pytań. Wielu użytkowników korzysta z forum, jest to więc
    świetne miejsce do uzyskania w miare szybkiej pomocy.</li>
</ul>

<p>
Szczegółowe zastosowanie nowych pakietów znajdziemy na <uri
link="http://article.gmane.org/gmane.linux.gentoo.devel/30050">postach Stuarta
na listę gentoo-dev</uri> i w blogu Stuarta, zaczynając od <uri
link="http://stu.gnqs.org/diary/gentoo.php/2005/07/11/
radical_changes_for_php5_support">'Radical Changes for PHP5 Support'</uri>. 
</p>

<p>
Na  <uri
link="http://svn.gnqs.org/projects/gentoo-php-overlay">Development-Page</uri>
znajdziemy dokumentację i najnowsze ebuildy, które będą przeniesione do
oficjalnego drzewa portage w późniejszym czasie.
</p>

</body>
</section>
</chapter>

</guide>
