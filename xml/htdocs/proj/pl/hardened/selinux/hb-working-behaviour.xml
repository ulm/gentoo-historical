<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/pl/hardened/selinux/Attic/hb-working-behaviour.xml,v 1.2 2006/04/07 21:31:43 shadoww Exp $ -->

<sections>
<section>
<title>Ochrona plików konfiguracyjnych</title>
<subsection>
<title>Ochrona?</title>
<body>

<p>
Portage obsługuje koncepcję "plików chronionych". Oznacza to, że gdy
aktualizujemy oprogramowanie, dotychczasowe pliki nie zostaną nadpisane, lecz
zostaniemy jedynie poinformowani, iż pojawiły się ich nowsze wersje. Jest to
bardzo przydatne w przypadku plików konfiguracyjnych (tych, które rezydują w
katalogu <path>/etc</path>).
</p>

<p>
Zamiast nadpisywać pliki, Portage stworzy nowe pliki o nazwie
<path>._cfg0000_&lt;name&gt;</path>, gdzie <path>&lt;name&gt;</path> to
oryginalna nazwa pliku. Od użytkownika zależy, czy skorzysta on ze zmian w
nowszych wersjach plików konfiguracyjnych. Aby uprościć tę czynność można użyć
programu <c>etc-update</c>. Dokładniejsze informacje na jego temat znajdują się
w dalszej części tego dokumentu.
</p>

</body>
</subsection>
<subsection>
<title>Deklarowanie zmiennej CONFIG_PROTECT</title>
<body>

<p>
Portage nie może chronić poszczególnych plików. Zamiast tego obejmuje ochroną
całe katalogi. Używana jest do tego zmienna <c>CONFIG_PROTECT</c>, którą
zdefiniowano w pliku <path>/etc/make.globals</path>, jednak jeśli chcemy ją
zmodyfikować powinniśmy zadeklarować ją w pliku <path>/etc/make.conf</path> (dla
utrzymania spójności cała konfiguracja Portage odbywa się poprzez plik
<path>/etc/make.conf</path>).
</p>

<pre caption="Przykładowa wartość zmiennej CONFIG_PROTECT">
CONFIG_PROTECT="/etc /usr/share/config /usr/kde/3.1/share/config"
</pre>

<p>
Jeśli chcemy objąć ochroną jakiś katalog, ale nie chronić przy tym jego
podkatalogów, powinniśmy dodać te podkatalogi do zmiennej
<c>CONFIG_PROTECT_MASK</c>, której domyślna wartość jest określona w
pliku <path>/etc/make.globals</path>, jednak modyfikacje należy wprowadzać w
<path>/etc/make.conf</path>:
</p>

<pre caption="Przykładowa wartość zmiennej CONFIG_PROTECT_MASK">
CONFIG_PROTECT_MASK="/etc/init.d"
</pre>

<p>
Więcej informacji o ochronie plików konfiguracyjnych można uzyskać poprzez
pomoc programu <c>emerge</c>:
</p>

<pre caption="Informacje o ochronie plików konfiguracyjnych">
# <i>emerge --help config</i>
</pre>

</body>
</subsection>
<subsection>
<title>etc-update</title>
<body>

<p>
<c>etc-update</c> to narzędzie do łączenia dotychczasowych i nowych
(<path>._cfg0000_&lt;name&gt;</path>) plików konfiguracyjnych. Posiada ono
interaktywne opcje wprowadzania zmian, a także samodzielnie może wprowadzić
trywialne modyfikacje.
</p>

<p>
Uruchomienie <c>etc-update</c> jest bardzo proste:
</p>

<pre caption="Uruchamianie etc-update">
# <i>etc-update</i>
</pre>

<p>
Po automatycznym wprowadzeniu trywialnych zmian (np. różnic w rozmieszczeniu
pustych wierszy w pliku - przyp. tłum.), otrzymamy listę chronionych plików,
których nowe wersje są dostępne. Na końcu otrzymujemy poniższą informację o
możliwych do wykonania czynnościach:
</p>

<pre caption="Czynności do wykonania przez etc-update">
Please select a file to edit by entering the corresponding number.
              (-1 to exit) (-3 to auto merge all remaining files)
                           (-5 to auto-merge AND not use 'mv -i'): 
</pre>

<p>
Jeśli wybierzemy <c>-1</c>, to <c>etc-update</c> zakończy swoje działanie bez
wprowadzania żadnych zmian. Opcje <c>-3</c> i <c>-5</c> spowodują
zastąpienie <e>wszystkich</e> wylistowanych plików nowszymi wersjami. Bardzo
ważne jest wybranie plików, które nie powinny zostać zastąpione, przed
przeprowadzeniem automatycznego uaktualnienia pozostałych. Polega to na
wprowadzeniu numeru znajdującego się obok pliku.
</p>

<p>
Dla przykładu zajmiemy się plikiem <path>/etc/pear.conf</path>. Oto efekt
wpisania jego numeru z listy:
</p>

<pre caption="Aktualizacja wybranego pliku konfiguracyjnego">
Beginning of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
<comment>[...]</comment>
End of differences between /etc/pear.conf and /etc/._cfg0000_pear.conf
1) Replace original with update
2) Delete update, keeping original as is
3) Interactively merge original with update
4) Show differences again
</pre>

<p>
Zobaczymy różnice pomiędzy nowym i starym plikiem. Jeśli nowy plik
konfiguracyjny może zostać użyty bez żadnych przeciwskazań, wybieramy <c>1</c>.
W przypadku, gdy aktualizacja nie jest konieczna, lub nie wprowadza żadnych
nowych lub przydatnych informacji, wybieramy <c>2</c>. Opcja <c>3</c> pozwala na
interaktywne połączenie zawartości nowego i starego pliku konfiguracyjnego.
</p>

<p>
Nie ma sensu dalsze rozpisywanie się na temat interaktywnej aktualizacji.
Przedstawimy jedynie komendy, jakich można używać w jej czasie. Zobaczymy dwie
linie (oryginalną i proponowaną w nowym pliku) i będziemy mogli wybrać spośród
następujących opcji:
</p>

<pre caption="Komendy dostępne w czasie interaktywnej aktualizacji">
ed:     Edytuj i użyj obu wersji, każdą poprzedzając nagłówkiem.
eb:     Edytuj i użyj obu wersji.
el:     Edytuj i użyj wersji po lewej stronie.
er:     Edytuj i użyj wersji po prawej stronie.
e:      Edytuj nową wersję.
l:      Użyj wersji po lewej stronie.
r:      Użyj wersji po prawej stronie.
s:      Cicho dołącz podobe linie.
v:      Dołącz podobne linie w trybie opisowym.
q:      Wyjdź.
</pre>

<p>
Gdy skończymy aktualizację najważniejszych plików konfiguracyjnych, wszystkie
pozostałe możemy uaktualnić automatycznie. <c>etc-update</c> zakończy swoje
działanie jeśli nie znajdzie żadnych nowych wersji plików konfiguracyjnych.
</p>

</body>
</subsection>
</section>
<section>
<title>Opcje internetowe</title>
<subsection>
<title>Globalne serwery lustrzane</title>
<body>

<p>
Ze względu na wciąż rosnącą popularność Gentoo, zaleca się korzystanie z
serwerów lustrzanych. Portage wykorzystuje trzy zmienne zmiązane z serwerami
lustrzanymi: dla serwera rsync (wykorzystywany podczas aktualizacji drzewa
Portage), dla serwera distfiles (do pobierania kodów źródłowych) i dla serwera
prekompilowanych pakietów.
</p>

<p>
Wszystkie możliwe lustrzane serwery distfiles zostały wylistowane na stronie
<uri link="/main/en/mirrors.xml">Serwery lustrzane Gentoo</uri>. Można
skorzystać z programu <c>mirrorselect</c>, który pozwala na łatwe wybranie
serwerów lustrzanych dla naszego systemu. Zanim jednak to zrobimy przyjrzyjmy
się poszczególnym zmiennym.
</p>

<p>
Zmienna <c>SYNC</c> zawiera adres serwera rsync, jaki będzie
wykorzystywany. Przykładowo, aby korzystać z serwera
<uri>rsync://rsync.namerica.gentoo.org/gentoo-portage</uri>, należy zdefiniować
zmienną <c>SYNC</c> w pliku <path>/etc/make.conf</path> w następujący sposób:
</p>

<pre caption="Definiowanie zmiennej SYNC w pliku /etc/make.conf">
SYNC="rsync://rsync.namerica.gentoo.org/gentoo-portage"
</pre>

<p>
Zmienna <c>GENTOO_MIRRORS</c> zawiera listę serwerów distfiles. Aby używać
serwera <uri>ftp://ibiblio.org/pub/Linux/distributions/gentoo</uri> w pierwszej
kolejności i <uri>http://www.gtlib.cc.gatech.edu/pub/gentoo</uri>, jeśli
pierwszy nie będzie dostępny, należy dodać poniższy wpis do pliku
<path>/etc/make.conf</path>:
</p>

<pre caption="Definiowanie zmiennej GENTOO_MIRRORS w /etc/make.conf">
GENTOO_MIRRORS="ftp://ibiblio.org/pub/Linux/distributions/gentoo
                http://www.gtlib.cc.gatech.edu/pub/gentoo"
</pre>


<p>
Zmienna <c>PORTAGE_BINHOST</c> zawiera listę serwerów z prekompilowanymi
pakietami. Jeśli chcemy korzystać z serwera
<uri>ftp://login:pass@grp.mirror.site/pub/grp/i686/athlon-xp</uri>, powinniśmy
dodać następującą linię do <path>/etc/make.conf</path>:
</p>

<pre caption="Definiowanie PORTAGE_BINHOST w /etc/make.conf">
PORTAGE_BINHOST="ftp://login:pass@grp.mirror.site/pub/grp/i686/athlon-xp"
</pre>

</body>
</subsection>
<subsection>
<title>Serwery lustrzane z pakietami</title>
<body>

<p>
Wiele pakietów posiada zmienną SRC zawierającą <c>mirror://</c>. Takie pakiety
posiadają kody źródłowe na wielu serwerach (sourceforge, gnu, ...). Gdy Portage
natrafia na taki pakiet, przeszukuje plik <path>/etc/portage/mirrors</path>, a
jeśli nie znajdzie tam żadnego serwera sprawdza
<path>/usr/portage/profiles/thirdpartymirrors</path>.
</p>

<p>
Nasze ulubione serwery lustrzane możemy zadeklarować w pliku
<path>/etc/portage/mirrors</path>. Przykładowo, jeśli chcemy używać serwera
<uri>http://keihanna.dl.sourceforge.net</uri> za każdym razem gdy pakiet musi
zostać pobrany z sourceforge wpiszemy:
</p>

<pre caption="Przykładowy plik /etc/portage/mirrors">
sourceforge http://keihanna.dl.sourceforge.net
</pre>

<p>
Możemy także zadeklarować specjalne serwery <c>local</c>. Serwery te zostaną
<e>zawsze</e> sprawdzone w pierwszej kolejności, nawet jeśli pakiet nie posiada
'mirror://' w zmiennej SRC, lub został oznaczony jako taki, który nie powiniem
być przechowywany na serwerach lustrzanych.
</p>

</body>
</subsection>
<subsection>
<title>Mirrorselect</title>
<body>

<p>
Jeśli chcemy skorzystać w programu <c>mirrorselect</c>, musimy go zainstalować
(o ile nie zrobiliśmy tego dotychczas).
</p>

<pre caption="Instalacja mirrorselect">
# <i>emerge mirrorselect</i>
</pre>

<p>
Teraz możemy zdecydować czy <c>mirrorselect</c> ma wybrać automatycznie
najlepsze dla nas serwery lustrzane, czy też ręcznie wybierzemy je z listy. Aby
uzyskać więcej informacji na temat używania <c>mirrorselect</c>, wystarczy
wywołać go w linii poleceń - zobaczymy krótki opis jego funkcji.
</p>

<pre caption="Uruchamianie mirrorselect">
# <i>mirrorselect</i>
</pre>

</body>
</subsection>
<subsection>
<title>Pobieranie</title>
<body>

<p>
Program, którego Portage używa do pobierania archiwów, może zostać określony
poprzez zmienną <c>FETCHCOMMAND</c> oraz <c>RESUMECOMMAND</c>. W plikach
<path>/etc/make.conf.example</path> i <path>/etc/make.globals</path> znajdują
się przykładowe ustawienia tych zmiennych. Portage domyślnie korzysta z programu
<c>wget</c>:
</p>

<pre caption="Domyślne wartości FETCHCOMMAND &amp; RESUMECOMMAND">
FETCHCOMMAND="/usr/bin/wget -t 5 --passive-ftp -P \${DISTDIR} \${URI}"
RESUMECOMMAND="/usr/bin/wget -c -t 5 --passive-ftp -P \${DISTDIR} \${URI}"
</pre>

<p>
Zmienna <c>${DISTDIR}</c> przechowuje lokalizację, w której pobierane pliki są
zapisywane (standardowo <path>/usr/portage/distfiles</path>), podczas gdy
zmienna <c>${URI}</c> zawiera nazwę pliku, jaki musi zostać pobrany.
</p>

<p>
Ponieważ Portage używa domyślnie programu <c>wget</c>, można łatwo ustawić
wykorzystanie proxy poprzez zdefiniowanie zmiennych <c>http_proxy</c> i
<c>ftp_proxy</c> (pamiętajmy o  małych literach w ich nazwach). Można to zrobić
w pliku <path>/etc/make.conf</path>, jednak zmienne <c>http_proxy</c> i
<c>ftp_proxy</c> są wykorzystywane przez wiele aplikacji, a pliku
<path>/etc/make.conf</path> używa tylko Portage. Lepiej jest więc dokonać
ustawień bardziej globalnie. Warto zapoznać się z rozdziałem <uri
link="?part=2&amp;chap=5">Zmienne środowiskowe</uri>, dla uzyskania informacji o
deklaracji zmiennych systemowych obejmujących całe środowisko.
</p>

</body>
</subsection>
<subsection>
<title>Konfigurowanie rsync</title>
<body>

<p>
<c>rsync</c> jest wykorzystywany przez <c>emerge --sync</c> do aktualizacji
drzewa Portage. Istnieją trzy zmienne środowiskowe przeznaczone do modyfikowania
zachowanie programu <c>rsync</c>. Są to: <c>RSYNC_EXCLUDEFROM</c>,
<c>RSYNC_RETRIES</c> i <c>RSYNC_TIMEOUT</c>.
</p>

<p>
Aby ochronić ebuildy przez aktualizacją lub usunięciem w czasie wykonywania
<c>emerge --sync</c>, należy skorzystać ze zmiennej <c>RSYNC_EXCLUDEFROM</c>.
Powinna ona wskazywać na plik, którego używa <c>rsync</c> do objęcia określonych
plików ochroną. Standardowo jest to <path>/etc/portage/rsync_excludes</path>.
<e>Nie</e> zaleca się jednak stosowania tej metody, ponieważ można uszkodzić
system zależności, jeśli nie zachowa się ostrożności. W dalszej części powiemy o
zmiennej <c>PORTDIR_OVERLAY</c>, której użycie jest rekomendowaną metodą. Dla
uzyskania dodatkowych informacji należy zapoznać sie ze stronami man
programu <c>rsync</c>.
</p>

<pre caption="Zmienna RSYNC_EXCLUDEFROM">
RSYNC_EXCLUDEFROM="/etc/portage/rsync_excludes"
</pre>

<p>
Gdy <c>rsync</c> nie powiedzie się, następuje kilka prób połączenia, zanim
zostanie wykorzystany inny serwer. Ilość prób zdefiniowana jest w zmiennej
<c>RSYNC_RETRIES</c> i domyślnie wynosi <c>3</c>:
</p>

<pre caption="Zmienna RSYNC_RETRIES">
RSYNC_RETRIES="3"
</pre>

<p>
Jeśli korzystamy z (bardzo) wolnego serwera rsync, program <c>rsync</c> może
przerwać połaczenie, jeśli nie otrzymujemy danych przez określony czas. Okres
ten jest zdefiniowany ilością sekund, przechowywaną w zmiennej
<c>RSYNC_TIMEOUT</c> (domyślnie <c>180</c>):
</p>

<pre caption="Zmienna RSYNC_TIMEOUT">
RSYNC_TIMEOUT="180"
</pre>

</body>
</subsection>
</section>
<section>
<title>Lokalizacja katalogów</title>
<subsection>
<title>Wstęp</title>
<body>

<p>
Wszystko w Portage jest konfigurowalne, włączając w to katalogi używane do
różnych zadań. Aby zmienić domyślne lokalizacje (które określone są w
<path>/etc/make.globals</path>), musimy zdefiniować odpowiednie zmienne w -
gdzieżby indziej :) - pliku <path>/etc/make.conf</path>.
</p>

<warn>
Jeśli zdefiniujemy zmienną tak, aby wskazywała na inną lokalizację, <e>nigdy</e>
nie powinniśmy kończyć ścieżki ukośnikiem <path>/</path> !
</warn>

</body>
</subsection>
<subsection>
<title>Drzewo Portage</title>
<body>

<p>
Lokalizacja drzewa Portage określona jest w zmiennej <c>PORTDIR</c>. Domyślnie
wskazuje ona na katalog <path>/usr/portage</path>.
</p>

<pre caption="Zmienna PORTDIR">
PORTDIR="/usr/portage"
</pre>

<p>
Jeśli chcemy poza "oficjalną" wersją drzewa przechowywać również jego lokalną
wersję, musimy zdefiniować zmienną <c>PORTDIR_OVERLAY</c>. Na lokalizacje
określone w tej zmiennej nie ma wpływu <c>emerge --sync</c>: znajdujące się tam
ebuildy nie zostaną zaktualizowane bądź usunięte i pozostaną częścią lokalnego
drzewa Portage.
</p>

<pre caption="Zmienna PORTDIR_OVERLAY">
PORTDIR_OVERLAY="/usr/local/portage"
</pre>

</body>
</subsection>
<subsection>
<title>Pobrane kody źródłowe</title>
<body>

<p>
Lokalizacja pobieranych kodów źródłowych (określanych jako distfiles) jest
określona w zmiennej <c>DISTDIR</c>. Jej domyślna wartość to
<path>${PORTDIR}/distfiles</path>.
</p>

<pre caption="Zmienna DISTDIR">
DISTDIR="${PORTDIR}/distfiles"
</pre>

</body>
</subsection>
<subsection>
<title>Pakiety i  RPM-y</title>
<body>

<p>
Lokalizacja prekompilowanych pakietów jest określona w zmiennej <c>PKGDIR</c>.
Domyślnie jest to katalog <path>${PORTDIR}/packages</path>:
</p>

<pre caption="Zmienna PKGDIR">
PKGDIR="${PORTDIR}/packages"
</pre>

<p>
Lokalizacja RPM-ów (tak, niektóre pakiety są dostępne w formie RPM-ów) jest
określona w zmiennej <c>RPMDIR</c>. Domyślnie jest to katalog
<path>${PORTDIR}/rpm</path>:
</p>

<pre caption="Zmienna RPMDIR">
RPMDIR="${PORTDIR}/rpm"
</pre>

</body>
</subsection>
<subsection>
<title>Tymczasowe pliki Portage</title>
<body>

<p>
Portage do budowy ebuildów używa tymczasowej lokalizacji. Jest ona zdefiniowana
w zmiennej <c>PORTAGE_TMPDIR</c>. Domyślnie ma ona wartość
<path>/var/tmp</path>:
</p>

<pre caption="Zmienna PORTAGE_TMPDIR">
PORTAGE_TMPDIR="/var/tmp"
</pre>

<p>
Domyślnie Portage tworzy katalog <path>portage</path> w katalogu zdefiniowanym
w zmiennej <c>PORTAGE_TMPDIR</c>. Zachowanie to jest określone w zmiennej
<c>BUILD_PREFIX</c>:
</p>

<pre caption="Zmienna BUILD_PREFIX">
BUILD_PREFIX="${PORTAGE_TMPDIR}/portage"
</pre>

<p>
Jeśli zechcemy zmienić lokalizację tymczasowego katalogu, upewnijmy się, że
będzie się on znajdował na partycji z dużą ilością wolnego miejsca. Podczas
kompilowania pakietów zawierających duże aplikacje, katalog tymczasowy może
rozrosnąć się do wielkości 2 GB, a nawet więcej!
</p>

</body>
</subsection>
<subsection>
<title>Logi Portage</title>
<body>

<p>
<c>PORT_LOGDIR</c> to specjalna zmienna, która domyślnie nie jest zdefiniowana.
Jeśli przypiszemy jej ścieżkę do katalogu, Portage będzie tworzyć w nim pliki z
logami oddzielnie dla każdego ebuildu.
</p>

<pre caption="Zmienna PORT_LOGDIR">
PORT_LOGDIR="/var/log/portage"
</pre>

</body>
</subsection>
</section>
<section>
<title>Inne opcje Portage</title>
<subsection>
<title>"Poziom uprzejmości"</title>
<body>

<p>
Portage obsługuje pracę na różnych "poziomach uprzejmości" - poziomach
określających priorytet pracy. Jeśli chcemy aby Portage pracował na wyższym
"poziomie uprzejmości" (co efektuje mniejszym obciążeniem systemu, ale także
dłuższym czasem kompilacji), powinniśmy nadać zmiennej <c>PORTAGE_NICENESS</c>
dodatnią wartość:
</p>

<pre caption="Zmienna PORTAGE_NICENESS">
PORTAGE_NICENESS="3"
</pre>

</body>
</subsection>
<subsection>
<title>Zmienna SLOT i automatyczne sprzątanie</title>
<body>

<p>
W pewnych sytuacjach chcemy, aby w systemie zainstalowane były różne wersje
jakiegoś pakietu (także bibliotek). Portage obsługuje taką możliwość, poprzez
zdefiniowanie zmiennej <c>SLOT</c> w ebuildzie. Z punktu widzenia użytkownika
nie jest istotne w jaki sposób działa zmienna <c>SLOT</c>, natomiast ważne jest,
aby wiedzieć, iż jest ona obsługiwana.
</p>

<p>
Jeśli instalujemy nowszą wersję pakietu, Portage sprawdzi, czy zmienna
<c>SLOT</c> została zadeklarowna dla pakietu. Jeśli tak jest i zmienna
<c>SLOT</c> jest inna dla obu wersji pakietu, to Portage nie usunie starszej
wersji.
</p>

<p>
Jednak, jeśli zmienna <c>SLOT</c> ma taką samą wartość w obu wersjach pakietu (a
zazwyczaj tak właśnie jest), starsza wersja zostanie domyślnie usunięta. Aby dać
użytkownikowi możliwość pozostawienia starszej wersji w systemie, Portage będzie
odliczać przez określoną ilość sekund. Czas ten jest zdefiniowany w zmiennej
<c>CLEAN_DELAY</c> i domyślnie wynosi <c>5</c> sekund:
</p>

<pre caption="Zmienna CLEAN_DELAY">
CLEAN_DELAY="5"
</pre>

<p>
Jeśli nie chcemy, aby starsze wersje jakiegokolwiek pakietu były usuwane (proces
usuwania starszych wersji nazywany jest też sprzątaniem), musimy przypisać
zmiennej <c>AUTOCLEAN</c> wartość <c>no</c>:
</p>

<pre caption="Zmienna AUTOCLEAN">
AUTOCLEAN="no"
</pre>

</body>
</subsection>
<subsection>
<title>Zmienne związane z kompilacją</title>
<body>

<p>
Poznaliśmy już wiele zmiennych, jednak jeszcze nie wszystkie. Użytkownicy,
którzy istalowali Gentoo, więdzą o zmiennych <c>CHOST</c>, <c>CFLAGS</c> i
<c>CXXFLAGS</c>, używanych przez kompilator w celu optymalizacji pakietów.
</p>

<p>
Więcej informacji o tych zmiennych można znaleźć na stronach info <c>gcc</c>,
lub na stronie internetowej <uri link="http://gcc.gnu.org/onlinedocs/">GCC
Online Manuals</uri>.
</p>

<pre caption="Zbieranie informacji na temat CHOST, CFLAGS i CXXFLAGS">
# <i>info gcc</i>
<comment>(Wybieramy "Invoking gcc")</comment>
<comment>(Wybieramy "Optimize options")</comment>
</pre>

<p>
Jeśli zmienna <c>DEBUGBUILD</c> jest zdefiniowana, Portage nie dokona
przeplatania binariów i bibliotek, ułatwiając w ten sposób diagnostykę
programów. Spowalnia to działanie systemu i powoduje zwiększenie wielkości
plików programów.
</p>

<pre caption="Zmienna DEBUGBUILD">
<comment># Nie należy przypisywać wartości "false", zamiast tego konieczne jest</comment>
<comment># usunięcie definicji zmiennej. Portage nie sprawdza jaka jest wartość,</comment>
<comment># a jedynie czy zmienna została zdefiniowana.</comment>
DEBUGBUILD="true"
</pre>

<p>
Zmienna <c>MAKEOPTS</c> jest wykorzystywana przez program <c>make</c> -
narzędzie ułatwiające kompilację pakietów. Zazwyczaj jest ona tak zdefiniowana,
aby nakazać programowi <c>make</c> uruchomienie kilku kompilacji równolegle
(szczególnie jeśli posiadamy wieloprocesorowy system lub korzystamy z
<c>distcc</c>).
</p>

<p>
Aby <c>make</c> uruchamiał trzy kompilacje równolegle, zmiennej <c>MAKEOPTS</c>
należy przypisać wartość <c>-j3</c>:
</p>

<pre caption="Zmienna MAKEOPTS">
MAKEOPTS="-j3"
</pre>

<p>
Zmienna <c>ROOT</c> nie powinna być ustawiana w pliku
<path>/etc/make.conf</path>, lecz bezpośrednio przed instalacją programu, dla
którego chcemy zmienić jej domyślną wartość (czyli <path>/</path>). Przykładowo
pokażemy jak zainstalować program <c>gnumeric</c> w <path>/mnt/gentoo</path>
zamiast w działającym systemie:
</p>

<pre caption="Zmienna ROOT">
# <i>ROOT="/mnt/gentoo" emerge gnumeric</i>
</pre>

</body>
</subsection>
<subsection>
<title>Formatowanie wyjścia</title>
<body>

<p>
Domyślnie Portage koloruje swoje wyjście, aby zwiększyć czytelność informacji.
Jeśli nie chcemy kolorowania wyjścia, powinniśmy przypisać zmiennej
<c>NOCOLOR</c> wartość <c>true</c>:
</p>

<pre caption="Zmienna NOCOLOR">
NOCOLOR="true"
</pre>

</body>
</subsection>
</section>
<section>
<title>Źródła informacji</title>
<subsection>
<title>Strony man</title>
<body>

<p>
Jeśli szukamy krótkiego przeglądu wszystkich opisanych zmiennych, powinniśmy
przejrzeć stronę man <path>make.conf</path>:
</p>

<pre caption="Czytanie strony man make.conf">
# <i>man make.conf</i>
</pre>

</body>
</subsection>
<subsection>
<title>Przykłady z komentarzami</title>
<body>

<p>
Plik <path>/etc/make.conf.example</path> zawiera mnóstwo dobrze skomentowanych
przykładów, które mogą okazać się przydatne.
</p>

</body>
</subsection>
</section>
</sections>
