<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/pl/hardened/selinux/Attic/hb-install-system.xml,v 1.1 2006/04/07 21:35:54 shadoww Exp $ -->

<sections>
<section>
<title>Praca w środowisku chrootowanym</title>
<subsection>
<title>Opcjonalnie: Wybieranie serwerów lustrzanych.</title>
<body>

<p>
Jeśli instalacja jest prowadzona z Gentoo LiveCD można użyć narzędzia
<c>mirrorselect</c> i za jego pomocą wprowadzić do pliku
<path>/etc/make.conf</path> adresy serwerów, które będą używane zarówno do
synchronizacji drzewa Portage, jak i do pobierania źródeł programów (oczywiście
w przypadku gdy mamy połączenie sieciowe):
</p>

<pre caption="Wybieranie szybkich serwerów lustrzanych">
# <i>mirrorselect -a -s4 -o |grep 'GENTOO_MIRRORS=' &gt;&gt; /mnt/gentoo/etc/make.conf</i>
</pre>

<p>
Nie należy panikować jeśli z jakiegoś powodu <c>mirrorselect</c> zawiedzie.
Domyślne ustawienia są wystarczające, aby dokończyć instalację.
</p>

</body>
</subsection>
<subsection>
<title>Kopiowanie informacji o DNS</title>
<body>

<p>
Zanim zmienimy środowisko pracy musimy wykonać pewną bardzo ważną czynność. Jest
nią skopiowanie ustawień DNS z pliku <path>/etc/resolv.conf</path> do nowego
środowiska. Jest to konieczne, by sieć działała także tam. Plik
<path>/etc/resolv.conf</path> określa jakie serwery nazw będą używane podczas
pracy w sieci.
</p>

<pre caption="Kopiowanie informacji o DNS">
<comment>(Opcja "-L" jest konieczna - sprawia, że nie zostanie skopiowane dowiązanie symboliczne)</comment>
# <i>cp -L /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

</body>
</subsection>
<subsection>
<title>Montowanie systemu plików proc</title>
<body>

<p>
Następnie montujemy system plików <path>/proc</path> do
<path>/mnt/gentoo/proc</path>, aby umożliwić systemowi korzystanie z informacji
dostarczanych przez jądro także w środowisku chrootowanym.
</p>

<pre caption="Montowanie /proc">
# <i>mount -t proc none n/mnt/gentoo/proc</i>
</pre>

</body>
</subsection>
<subsection>
<title>Montowanie systemu plików SELinux</title>
<body>

<p>
Kolejnym krokiem jest zamontowanie systemu plików
<path>/selinux</path> w katalogu <path>/mnt/gentoo/selinux</path>, aby
możliwe było korzystanie z informacji dostarczanych przez jądro
wewnątrz środowiska chrootowanego.
</p>

<pre caption="Montowanie /selinux">
# <i>mount -t selinuxfs none /mnt/gentoo/selinux</i>
</pre>

</body>
</subsection>
<subsection>
<title>Zmiana środowiska</title>
<body>

<p>
Teraz, gdy wszystkie partycje są już założone, a podstawowe środowisko
zainstalowane, nadszedł czas wkroczenia do niego poprzez
<e>chroot</e>. Oznacza to przejście z systemu źródła instalacyjnego
(livecd lub innego) do systemu instalowanego (czyli na założone
partycje).
</p>

<p>
Przechodzenie odbywa sie w trzech etapach. Najpierw, używając polecenia
<c>chroot</c> zmieniamy katalog z <path>/</path> (na medium instalacyjnym) na
<path>/mnt/gentoo</path> (na założonych partycjach). Następnie tworzymy nowe
środowisko przy pomocy polecenia
<c>env-update</c>, które wyeksportuje nowe zmienne środowiskowe. Ostatecznie
wczytujemy te zmienne do pamięci poleceniem <c>source</c>.
</p>

<pre caption = "Chrootowanie do nowego środowiska">
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
 * Caching service dependencies...
# <i>source /etc/profile</i>
</pre>

<p>
Gratulacje! Znajdujemy się wewnątrz nowego systemu Gentoo Linux. Oczywiście do
końca jeszcze daleko i to jest powód, dla którego zostało jeszcze kilka
rozdziałów Podręcznika. :]
</p>

</body>
</subsection>

<subsection>
<!--
<title>Opcjonalnie: Aktualizacja drzewa Portage</title>
-->
<title>Aktualizacja drzewa Portage</title>
<body>

<p>
<!--
If you haven't installed a Portage snapshot in the previous chapter, you must 
-->
Musimy pobrać aktualną wersją drzewa Portage z internetu. Służy do
tego polecenie <c>emerge sync</c>.
<!--
Other users should skip this and continue with <uri 
link="#configure_USE">Configuring the USE variable</uri>.
-->
</p>

<pre caption="Aktualizacja drzewa Portage">
# <i>emerge sync</i>
</pre>

<p>
Portage wykorzystuje protokół RSYNC do aktualizacji swojego drzewa. Jeśli
powyższe polecenie zawiedzie ze względu na ustawienia naszego firewalla, możemy
użyć komendy <c>emerge-webrsync</c>, która pobierze aktualną wersję drzewa
Portage poprzez protokół HTTP.
</p>

<pre caption="Aktualizacja drzewa Portage przy użyciu emerge-webrsync">
# <i>emerge-webrsync</i>
</pre>

<p>
Jeśli otrzymamy ostrzeżenie, że dostępna jest nowa wersja programu Portage i
należy dokonać jego aktualizacji, możemy je zignorować. Portage zostanie
zaktualizowane nieco później.
</p>

</body>
</subsection>
<subsection id="configure_USE">
<title>Konfiguracja zmiennych USE</title>
<body>



<p>
<c>USE</c> to jedna z najważniejszych zmiennych w Gentoo. Niektóre programy mogą
być kompilowane z obsługą pewnych funkcji lub bez niej. Na przykład
możliwe jest budowanie różnych programów ze wsparciem dla bibliotek gtk lub qt.
Inne pakiety możemy z kolei wyposażyć w obsługę SSL, bądź też jej
pozbawić. Jeszcze inne mogą być kompilowane z obsługą bufora ramki (svgalib)
zamiast X11 (serwer X).
</p>

<p>
Większość dystrybucji kompiluje swoje pakiety z obsługą dla tak wielu
elementów, jak to tylko możliwe, powiększając rozmiar programów i czas ich
uruchamiania, nie wspominając o olbrzymiej liczbie zależności. W Gentoo możemy
zdecydować, z którymi opcjami dany pakiet powinien być budowany. I to właśnie
jest moment, kiedy <c>USE</c> wkracza do gry.
</p>

<p>
W zmiennych <c>USE</c> definiujemy słowa kluczowe zamieniane następnie na opcje
kompilowania. Na przykład dodanie do zmiennej <c>USE</c> słowa <e>ssl</e> włączy
obsługę SSL w programach, które mogą go wykorzystywać. <e>-X</e> usunie
wsparcie dla serwera X (należy zwrócić uwagę na znak minusa z przodu).
Ustawienie <e>gnome gtk -kde -qt</e> zaowocuje wsparciem dla GNOME (oraz gtk),
ale nie dla KDE (i związanym z nim ściśle), znakomicie przygotowując grunt
pod GNOME.
</p>

<p>
Domyślne ustawienia flag <c>USE</c> znajdują się w pliku
<path>/etc/make.profile/make.defaults</path>. Zmiany flag jakie umieścimy w
pliku <path>/etc/make.conf</path> są analizowane względem domyślnych
ustawień. Jeśli dopiszemy jakąś flagę, zostanie ona dodana do grona
domyślnych. Jeśli natomiast usuniemy flagę (poprzez dodanie znaku minusa przed
nią), zostanie ona usunięta z listy domyślnych (pod warunkiem, że kiedykolwiek
na niej była). <e>Nigdy</e> nie powinniśmy wprowadzać zmian w katalogu
<path>/etc/make.profile</path>, ponieważ zostaje on nadpisany w czasie
aktualizacji Portage.
</p>

<p>
Kompletny opis flag <c>USE</c> znajduje się w trzeciej części podręcznika
Gentoo, która zatytułowana jest <uri link="?part=3&amp;chap=1">Flagi
USE</uri>. Opis wszystkich dostępnych flag znajduje się w pliku
<path>/usr/portage/profiles/use.desc</path>.
</p>

<note>
Użytkownicy GCC w wersji hardened muszą dodać <c>pic</c> i <c>hardened</c> do
flag <c>USE</c>.
</note>

<impo>
Nie należy dodawać flagi <c>-*</c> w pliku <path>make.conf</path>, ponieważ
spowoduje to uaktywnienie funkcji, które nie są dostępne. Profil SELinux
uaktywnia znacznie mniej flag niż profil domyślny.
</impo>

<pre caption="Przegląd dostępnych flag USE">
# <i>less /usr/portage/profiles/use.desc</i>
<comment>(Przewijamy listę używając strzałek, wychodzimy wciskając klawisz q)</comment>
</pre>

<p>
Jako przykład przedstawimy flagi <c>USE</c> dla systemu bazującego na KDE ze
wsparciem dla DVD, ALSA i nagrywania CD:
</p>

<pre caption="Edytowanie /etc/make.conf">
# <i>nano -w /etc/make.conf</i>
</pre>

<pre caption="Ustawianie flag USE">
USE="-gtk -gnome qt kde dvd alsa cdr"
</pre>

</body>
</subsection>
<subsection>
<title>Opcjonalnie: Kompilacja rozproszona</title>
<body>

<p>
Jeśli jesteśmy zainteresowani wykorzystaniem kilku komputerów do pomocy w
kompilowaniu systemu, warto zapoznać się z przewodnikiem <uri
link="/doc/pl/distcc.xml">Praca z distcc w Gentoo</uri>. Dzięki <c>distcc</c>
możemy wykorzystać moc obliczeniową kilku maszyn i znacznie przyspieszyć cały
proces instalowania Gentoo.
</p>

</body>
</subsection>
</section>
<section>
<title>Różnice między Stage1, Stage2 i Stage3</title>
<body>

<p>
Usiądźmy teraz wygodnie i przemyślmy poprzednie czynności. Prosiliśmy o wybranie
<e>stage1</e>, <e>stage2</e> lub <e>stage3</e> i ostrzegaliśmy, że ten wybór
zadecyduje o dalszym przebiegu instalacji. W tym miejscu po raz pierwszy ma on
wpływ na nasze działania.
</p>

<ul>
  <li>
    Jeśli wybraliśmy <e>stage1</e> musimy wykonać <e>obydwa</e> kroki opisane
    w tym rozdziale (zaczynając od <uri link="#doc_chap3">Przechodzenia ze
    Stage1 do Stage2</uri>).
  </li>
  <li>
    Jeśli za początek instalacji obraliśmy <e>stage2</e>, możemy pominąć
    pierwszy krok i od razu przejść do drugiego (<uri
    link="#doc_chap4">Przechodzenie ze Stage2 do Stage3</uri>).
  </li>
  <li>
    Jeżeli zaczynamy od <e>stage3</e>, możemy pominąć obydwa kroki i przejść do
    następnego rozdziału, czyli <uri link="?part=1&amp;chap=7">Konfiguracji
    jądra</uri>.
  </li>
</ul>

</body>
</section>
<section>
<title>Przechodzenie ze Stage1 do Stage2</title>
<subsection>
<title>Wprowadzenie do procesu bootstrapowania</title>
<body>

<p>
Kompilujemy wszystko od podstaw? Nie ma sprawy :-)
</p>

<p>
W tym etapie wykonamy <e>bootstrap</e> Gentoo. Potrwa to stosunkowo długo, ale
utworzony system będzie zoptymalizowany i dostosowany do sprzętu i specyficznych
wymagań użytkownika.
</p>

<p>
<e>Proces bootstrap</e> to budowanie biblioteki GNU C, zestawu kompilatorów GNU
i kilku innych niezbędnych do programów systemowych.
</p>

<p>
Zanim zaczniemy bootstrap, poznamy możliwość, którą być może warto
wykorzystać. Jeśli nas ona nie interesuje, kontynuujmy instalację zgodnie z
paragrafem <uri link="#bootstrap">Bootstrap systemu</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Opcjonalnie: Wcześniejsze pobranie źródeł</title>
<body>

<p>
Jeśli wcześniej nie skopiowano kodu źródłowego na dysk, skrypt bootstrap
pobierze wszystkie potrzebne pliki. Chyba nie trzeba przypominać, że niezbędne
do tego jest działające połączenie sieciowe? Jeśli zamierzamy najpierw ściągnąć
źródła, a dopiero potem wykonać bootstrap systemu (np. dlatego, że nie chcemy
mieć otwartego połaczenia z siecią podczas kopiowania) używamy opcji
<e>-f</e> skryptu bootstrap, co spowoduje pobranie wszystkich niezbędnych
plików.
</p>

<pre caption = "Pobieranie niezbędnych źródeł">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh -f</i>
</pre>

</body>
</subsection>
<subsection id="bootstrap">
<title>Bootstrap systemu</title>
<body>

<p>
W porządku, zatem chwytamy klawiaturę i wstukujemy kilka kolejnych poleceń -
zaczynamy bootstrap. Następnie możemy poszukać rozrywki przy czymś innym,
ponieważ ukończeniu tego etapu zajmie mnóstwo czasu.
</p>

<pre caption = "Bootstrap systemu">
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>

<p>
Pora na kolejny etap, <uri link="#doc_chap4">Przechodzenie ze Stage2
do Stage3</uri>.
</p>

</body>
</subsection>
</section>
<section>
<title>Przechodzenie ze Stage2 do Stage3</title>
<subsection>
<title>Wprowadzenie</title>
<body>

<p>
Czytasz ten paragraf, bo wykonałeś bootstrap (ręcznie lub dzięki <e>stage2</e>).
Teraz nadeszła pora na zbudowanie pakietów należących do systemu.
</p>

<p>
Czy budujemy <e>wszystkie</e> pakiety systemowe? Nie, nie wszystkie. W tym
etapie budujemy tylko te, co do których nie mamy wyboru. Niektóre narzędzia
systemowe mają kilka alternatyw (choćby programy logujące). W Gentoo o wszystkim
możemy decydować samodzielnie, niniejszy podręcznik ma za zadanie jedynie pomóc
w dokonaniu wyboru, krótko omawiając każdą z możliwości.
</p>

</body>
</subsection>
<subsection>
<title>Opcjonalnie: Przeglądanie zadań do wykonania</title>
<body>

<p>
Aby dowiedzieć się jakie pakiety zostaną zainstalowane należy wykonać polecenie
<c>emerge --pretend system</c>. Otrzymamy spis wszystkich programów jakie
zostaną zbudowane. Ponieważ ta lista jest całkiem spora, warto użyć
programu stronicującego w rodzaju <c>less</c> lub <c>more</c>, pozwalającego
poruszać się w górę i w dół listy.
</p>

<pre caption = "Co zainstaluje emerge system?">
# <i>emerge --pretend system | less</i>
</pre>

</body>
</subsection>
<subsection>
<title>Opcjonalnie: Pobieranie źródeł</title>
<body>

<p>
Aby <c>emerge</c> pobrał źródła przed rozpoczęciem procesu budowy systemu
(jeśli na przykład nie chcemy mieć otwartego połączenia z Internetem
podczas kompilowania pakietów) używamy opcji
<e>--fetchonly</e> programu <c>emerge</c>. Spowoduje to ściągnięcie
potrzebnych plików.
</p>

<pre caption = "Pobieranie źródeł">
# <i>emerge --fetchonly system</i>
</pre>

</body>
</subsection>
<subsection>
<title>Budowanie systemu</title>
<body>

<p>
Aby rozpocząć budowanie systemu wpisujemy polecenie <c>emerge system</c>.
Następnie musimy znaleźć sobie jakieś inne zajęcie, bo ten etap trwa bardzo
długo.
</p>

<pre caption = "Budowanie systemu">
# <i>emerge system</i>
</pre>

<p>
Na tym etapie instalacji możemy bezpiecznie zignorować ostrzeżenia o nowych
wersjach plików konfiguracyjnych (i konieczność uruchomienia programu
<c>etc-update</c>).
</p>

<p>
Gdy proces budowania systemu zostanie ukończony, kontynuujemy instalację zgodnie
z rozdziałem <uri link="?part=1&amp;chap=7">Konfiguracja jądra</uri>.
</p>

</body>
</subsection>
</section>

</sections>
