<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/pl/desktop/gnome/howtos/gnome-2.12-upgrade.xml,v 1.2 2012/10/28 15:21:29 swift Exp $ -->

<guide lang="pl">
<title>Aktualizacja Gnome do wersji 2.12</title>

<author title="Autor">
  <mail link="allanonjl@gentoo.org">John N. Laliberte</mail>
</author>
<author title="Tłumaczenie">
  <mail link="prizman@o2.pl">Artur Czepiel</mail>
</author>

<abstract>
Ten przewodnik pokaże zalecaną drogę aktualizacji naszego środowiska GNOME do
wersji 2.12, zakładając, że GNOME 2.12 znajduje się w gałęzi niestabilnej i nie
pojawi się więcej w package.mask.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.2</version>
<date>2005-10-08</date>

<chapter>
<title>Co nowego (z perspektywy Gentoo)</title>
<section>
<body>

<p>
Co zmieniło się od wersji 2.12_rc1:
</p>

<ul>
  <li>Totem oraz librsvg używają gecko-sdk z flagą USE=nsplugin</li>
  <li>
    Pakiet evolution-exchange nie jest już włączony do meta-pakietów GNOME
  </li>
  <li>
    Flaga USE="firefox" została usunięta z Evolution (psuła kompatybilność z
    SSL i zostanie ponownie dodana później)
  </li>
</ul>

<p>
A co od wersji 2.10.2:
</p>

<ul>
  <li>
    Mozilla nie jest już pakietem wymaganym przez GNOME, natomiast epiphany
    może zastąpić firefoxa
  </li>
</ul>

</body>
</section>
</chapter>
  
<chapter>
<title>Przygotowanie</title>
<section>
<title>Odmaskowanie pakietów</title>
<body>

<p>
Zaczynamy od dodania części pakietów do pliku <path>package.unmask</path>.
Jeżeli mamy system z gałęzi niestabilnej, nie jest to wymagane.
</p>

<note>
Lista większości pakietów, które musimy dodać znajduje się w pliku <uri
link="http://dev.gentoo.org/~allanonjl/gnome/2.12.0/package.keywords">
package.keywords
</uri>
</note>

</body>
</section>
<section>
<title>Aktualizacja pythona</title>
<body>

<p>
Kolejny krok to aktualizacja pythona do wersji 2.4.
</p>

<pre caption="Aktualizacja pythona">
# <i>emerge -av python</i>
# <i>python-updater</i>
</pre>

</body>
</section>
<section>
<title>Kilka innych rzeczy które musimy sprawdzić</title>
<body>

<warn>
Jeżeli mamy zainstalowane gnome-doc-utils, jesteśmy zmuszeni je przeinstalować,
aby mieć przynajmniej wersję 0.4.1.
</warn>

</body>
</section>
<section>
<body>

<impo>
Opis automatycznego montowania USB oraz innych ciekawych funkcji Gnome znajduje
się w akapicie zatytułowanym "I co teraz", który znajduje się na końcu tego
dokumentu.
</impo>

</body>
</section>
</chapter>

<chapter>
<title>Aktualizacja do 2.12</title>
<section>
<body>

<p>
Teraz główna część artykułu. Aktualizacja do GNOME 2.12.
</p>

<pre caption="Aktualizacja do GNOME 2.12">
# <i>emerge -av gnome</i>
</pre>

<p>
Lub, jeżeli nie są nam potrzebne wszystkie pakiety GNOME:
</p>

<pre caption="Aktualizacja do GNOME 2.12 lite">
# <i>emerge -av gnome-light</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Uruchamianie revdep-rebuild</title>
<section>
<body>

<p>
Po pierwsze sprawdzimy czy uruchamianie revdep-rebuild jest niezbędne:
</p>

<pre caption="Uruchomienie revdep-rebuild">
# <i>revdep-rebuild -p</i>
</pre>

<p>
Jeśli polecenie to wyświetli jakieś pakiety, konieczne będzie ich
przebudowanie - za pomocą polecenia <c>revdep-rebuild</c> (bez opcji -p).
</p>

</body>
</section>
</chapter>

<chapter>
<title>I co dalej?</title>
<section>
<body>

<p>
Konieczne będzie ponowne uruchomienie GNOME.
</p>

</body>
</section>
<section>
<title>Kilka słów o automatycznym montowaniu</title>
<body>

<p>
Po pierwsze musimy dodać <c>hal</c> i <c>dbus</c> do naszych flag USE w pliku
<path>/etc/make.conf</path>.
</p>

<p>
Następnie upewnijmy się czy mamy odmaskowane pakiety hal, dbus, pmount i gamin
(jeżeli mamy system z gałęzi niestabilnej nie jest to konieczne). Aby móc
używać gmain, musimy mieć zaznaczoną opcję 'inotify' w jądrze.
</p>

<p>
Opcja inotify znajduje się w "File systems -> Inotify file change notification
support".
</p>

<p>
Jeśli używa się innej architektury niż x86, należy odpowiednio zmienić dla niej
poniższe polecenia.
</p>

<pre caption="Odmaskowanie pakietów">
# <i>echo "sys-apps/hal ~x86" >> /etc/portage/package.keywords</i>
# <i>echo "sys-apps/pmount ~x86" >> /etc/portage/package.keywords</i>
# <i>echo "sys-apps/dbus ~x86" >> /etc/portage/package.keywords</i>
# <i>echo "sys-fs/cryptsetup-luks ~x86" >> /etc/portage/package.keywords</i>
# <i>echo "app-admin/gamin ~x86" >> /etc/portage/package.keywords</i>
</pre>

<p>
Możliwe jest również, że mamy zainstalowany pakiet cryptsetup, który blokuje
crypsetup-luks, należy go więc najpierw odinstalować:
</p>

<pre caption="Usuwanie cryptsetup">
# <i>emerge unmerge cryptsetup</i>
</pre>

<p>
Jeżeli mamy zainstalowaną starszą wersję pakietu hal musimy wykonać <c>rm -rf
/etc/hal/device.d</c>, ponieważ podczas instalacji pakietu hal i tak dostaniemy
informacje, aby to zrobić.
</p>

<pre caption="Przygotowanie do instalcji hal">
# <i>rm -rf /etc/hal/device.d/</i>
</pre>

<p>
Musimy również sprawdzić czy nie mamy zainstalowanego pakietu app-admin/fam.
Jeżeli tak, wykonajmy poniższe instrukcje:
</p>

<pre caption="Usuwanie famd">
# <i>rc-update del famd</i>
# <i>emerge unmerge fam</i>
</pre>

<p>
Następnie zaktualizujmy pakiety z grupy world, kompilując je z naszymi nowymi
flagami USE, używając opcji --newuse <c>emerge -uDav --newuse world</c>.
</p>

<pre caption="Aktualizacja z uwzględnieniem nowych flag USE">
# <i>emerge -uDav --newuse world</i>
</pre>

<p>
Teraz musimy wystartować dbus i hal. Programy te muszą być uruchamiane przy
każdym starcie naszego systemu.
</p>

<pre caption="dbus, hal, gamin">
# <i>rc-update add hald default</i>
# <i>/etc/init.d/hald start</i>
</pre>

<p>
Nie zapomnijmy dodać naszego użytkownika do grupy plugdev w pliku
<path>/etc/group</path>.
</p>

<p>
Teraz powinniśmy być gotowi do uruchomienia <c>gnome-volume-manager</c> z linii
poleceń i podłączenia jakiegoś urządzenia do portu USB. Zobaczymy jak jest
automatycznie montowany i tworzy ikonę na naszym pulpicie.
</p>

<p>
Jedną z dróg skonfigurowania gnome-volume-managera tak aby automatycznie
uruchamiał się podczas logowania, jest dodanie go w 'Menu Opcji -> Sesje' na
zakładce "Startup Programs", Jeżeli chcesz zmienić opcje gnome-volume-managera,
uruchom <c>gnome-volume-properties</c> z linii poleceń.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Jeżeli coś nie chce się skompilować...</title>
<section>
<title>Czy ktoś jeszcze miał podobne problemy?</title>
<body>

<p>
Po pierwsze, czy twoje błędy wyglądają tak jak te poniższe?
</p>

<pre caption="Błędy">
 make[2]: Entering directory
 `/var/tmp/portage/gnome-desktop-2.11.90/work/gnome-desktop-2.11.90/desktop-docs'
 Making all in fdl
 C/fdl.xml:603: parser error : Entity 'copy' not defined
         Copyright copy; YEAR YOUR NAME.
                         ^
make[3]: Entering directory
`/var/tmp/portage/gnome-desktop-2.11.90/work/gnome-desktop-2.11.90/desktop-docs/fdl'
xsltproc -o fdl-C.omf --stringparam db2omf.basename fdl --stringparam
db2omf.format 'docbook' --stringparam db2omf.dtd "-//OASIS//DTD DocBook XML
V4.1.2//EN" --stringparam db2omf.lang C --stringparam db2omf.omf_dir
"/usr/share/omf" --stringparam db2omf.help_dir "/usr/share/gnome/help"
--stringparam db2omf.omf_in "`pwd`/./fdl.omf.in" `/usr/bin/pkg-config --variable
db2omf gnome-doc-utils` C/fdl.xml
compilation error: file C/fdl.xml line 15 element article
xsltParseStylesheetProcess : document is not a stylesheet
make[3]: *** [fdl-C.omf] Error 5
make[2]: *** [all-recursive] Error 1
make[1]: *** [all-recursive] Error 1
make: *** [all] Error 2
</pre>

<note>
Jeżeli pojawi się taki problem, należy zajrzeć na stronę
<uri>http://bugs.gentoo.org/103322</uri>.
</note>

<note>
Mówiąc krótko, do naprawienia tego problemu wystarczy przeinstalowanie
gnome-doc-utils.
</note>

<pre caption="Więcej błędów">
Traceback (most recent call last):
  File "/usr/bin/xml2po", line 34, in ?
      import libxml2
      ImportError: No module named libxml2
      make[2]: *** [de/file-roller.xml] Error 1
      make[2]: *** Waiting for unfinished jobs....
      Traceback (most recent call last):
        File "/usr/bin/xml2po", line 34, in ?
    import libxml2
    ImportError: No module named libxml2
make[2]: *** [es/file-roller.xml] Error 1
make[2]: Leaving directory
`/var/tmp/portage/file-roller-2.11.92/work/file-roller-2.11.92/help'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory
`/var/tmp/portage/file-roller-2.11.92/work/file-roller-2.11.92'
make: *** [all] Error 2
</pre>

<pre caption="Jeszcze więcej błędów">
ACCESS DENIED  unlink:    /usr/share/xml2po/docbook.pyc
ACCESS DENIED  open_wr:   /usr/share/xml2po/docbook.pyc
ACCESS DENIED  unlink:    /usr/share/xml2po/docbook.pyc
ACCESS DENIED  open_wr:   /usr/share/xml2po/docbook.pyc
</pre>

<note>
Rozwiązanie znajdziemy na <uri>http://bugs.gentoo.org/104088</uri>.
</note>

</body>
</section>
<section>
<title>Co zrobić jeśli pojawia się inny błąd?</title>
<body>

<p>
Należy sprawdzić bug 'GNOME 2.12 Tracker' i zobaczyć czy podobny problem został
już zgłoszony: <uri>http://bugs.gentoo.org/103197</uri>
</p>

<p>
Następnie, przeszukajmy bugzillę pod kątem pakietu, przy którym występują
problemy, aby sprawdzić czy ktoś już zgłosił błąd. Jeżeli po wieloletnim
szukaniu, nie możemy znaleźć podobnego błędu, możemy go zgłosić.
</p>

<p>
Jeżeli nie wiemy jak zgłosić błąd, musimy zajrzeć na stronę
<uri>http://www.gentoo.org/doc/pl/bugzilla-howto.xml</uri>
</p>

<p>
Można również zadać pytanie na IRCu (kanał #gentoo-desktop w sieci FreeNode)
</p>

</body>
</section>
</chapter>
</guide>
