<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/pl/desktop/x/x11/modular-x-howto.xml,v 1.4 2006/02/06 16:05:43 rane Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/proj/pl/desktop/x/x11/modular-x-howto.xml" lang="pl">
<title>Migracja na modularne X</title>

<author title="Autor">
  <mail link="spyderous@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Autor">
  <mail link="joshuabaergen@gentoo.org">Joshua Baergen</mail>
</author>
<author title="Tłumaczenie">
  <mail link="damjanek@gmail.com">Damian Szeluga</mail>
</author>

<abstract>
Ten dokument pomaga w migracji na modularne X.Org.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.1</version>
<date>2006-01-02</date>

<chapter>
<title>Wprowadzenie</title>

<section>
<title>Dlaczego modularne X?</title>
<body>

<p>
Dlaczego jeden wygodny pakiet zmienił się w 300 mniejszych? Proces ten jest
realizowany przez twórców X.Org. Rozdzielają oni wszystkie pakiety na
pomniejsze, a my jedynie podążamy za nimi.
</p>

<p>
Powodów, dla których pakiet został podzielony i zmienił się sposób jego
budowania budowania jest co najmniej kilka:
</p>

<ul>
  <li>
    Nowym deweloperom trudno dołączyć do projektu X, więc postanowiono przejść
    na autotools, który jest znacznie wygodniejszy dla większości ludzi.
  </li>
  <li>
    Jeśli korzysta się z autotools, jest możliwy podział zródeł programu,
    dzięki czemu cały projekt jest łatwiejszy do zarządzania dla deweloperów.
  </li>
  <li>
    Rzeczy, które niepotrzebnie stały się zależne od siebie w przeszłości,
    niejednokrotnie uniemożliwiają tworzenie poprawek. A jeśli już poprawki
    były tworzone, wymagało to przebudowywania całego X.Org. Na przykład błąd w
    sterownikach ATI musiał czekać 6 miesięcy do następnego wydania lub
    wymagał przebudowania czcionek, zupełnie bez powodu.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Migracja do modularnego X</title>
<section>
<title>Wstęp</title>
<body>

<p>
Aby stare pakiety nie wchodziły nam w drogę, najpierw pozbędziemy się starego
xorg-x11, a dopiero potem zainstalujemy modularne X. Nie jest to niezbędne, ale
ułatwi nam migrację.
</p>

</body>
</section>
<section>
<title>Krok pierwszy: pozbycie się starego X</title>
<body>
    
<pre caption="Wykonanie kopii zapasowej starego xorg-x11">
# <i>emerge gentoolkit</i>
# <i>quickpkg xorg-x11</i>
</pre>

<p>
Usuwamy starą, monolityczną instalację:
</p>

<pre caption="Usuwanie monolitycznej instalacji">
# <i>emerge -Ca xorg-x11 virtual/x11</i>
</pre>

<p>
Lepiej mieć kopię zapasową poprzedniej wersji, na wypadek gdyby wydarzyło się
coś złego.
</p>

<p>
Jeśli <path>/usr/X11R6</path> nie jest dowiązaniem do <path>/usr</path>,
usuwamy ten katalog i zaczynamy od początku. Najpierw jednak zapisujemy listę
pakietów tam zainstalowanych.
</p>

<pre caption="Tworzenie listy pakietów">
# <i>if [[ ! -L /usr/X11R6 ]]; \
        then equery belongs /usr/X11R6 > ~/usr-x11r6-packages \
        &amp;&amp; rm -rf /usr/X11R6; fi</i>
</pre>

</body>
</section>
<section>
<title>Krok drugi: instalacja modularnego X</title>
<body>
    
<p>
Najpierw dodamy listę wymaganych pakietów do pliku
<path>/etc/portage/package.unmask</path>. Otwieramy plik
<path>/usr/portage/profiles/package.mask</path> w naszym ulubionym edytorze i
przeklejamy pełną listę pakietów należących do modularnego X do pliku
<path>package.unmask</path>. To samo robimy z
<path>/etc/portage/package.keywords</path>, jeżeli korzystamy ze stabilnej
gałęzi drzewa Portage. Jeśli powyższe instrukcje są niezrozumiałe, polecamy
przeczytać rozdział Podręcznika dotyczący <uri
link="/doc/pl/handbook/handbook-x86.xml?part=3&amp;chap=3">instalacji
zamaskowanych pakietów</uri>.
</p>

<table>
<tr>
  <th>Inne pakiety, które wymagają dodania do package.keywords u osób
  korzystających ze stabilnej gałęzi drzewa portage</th> </tr>
<tr>
  <ti>&gt;=sys-apps/portage-2.1_pre4</ti>
</tr>
<tr>
  <ti>=sys-apps/man-1.6b-r2</ti>
</tr>
<tr>
  <ti>app-admin/eselect-opengl</ti>
</tr>
<tr>
  <ti>&gt;=app-admin/eselect-1.0_rc1</ti>
</tr>
<tr>
  <ti>media-video/nvidia-kernel</ti>
</tr>
<tr>
  <ti>media-video/nvidia-glx</ti>
</tr>
</table>

<p>
Aby korzystać z Direct Rendering, należy aktywować <c>dri</c> we flagach USE.
</p>

<p>
Następnie decydujemy, jakie sterowniki chcemy zainstalować. Są one zależne od
naszej konfiguracji sprzętowej. Jeśli posiadamy sprawny plik
<path>/etc/X11/xorg.conf</path>, wystarczy wykonać tylko poniższe polecenie, by
dowiedzieć się jakich sterowników potrzebujemy:
</p>

<pre caption="Sprawdzanie potrzebnych sterowników">
# <i>grep Driver /etc/X11/xorg.conf</i>
	Driver      "kbd"
	Driver      "mouse"
	Driver      "radeon"
</pre>

<pre caption="Checking available drivers">
# <i>emerge --verbose --pretend xorg-x11</i>
[ebuild   R   ] x11-base/xorg-x11-7.0-r1  USE="-xprint" INPUT_DEVICES="keyboard
mouse -acecad -aiptek -calcomp -citron -digitaledge -dmc -dynapro -elo2300
-elographics -evdev -fpit -hyperpen -jamstudio -joystick -magellan -magictouch
-microtouch -mutouch -palmax -penmount -spaceorb -summa -synaptics% -tek4957
-ur98 -vmmouse -void" VIDEO_CARDS="i128 mga savage -apm -ark -ati* -chips
-cirrus -cyrix -dummy -fbdev -fglrx% -glint -i740 -i810 -imstt -neomagic
-newport -nsc -nv -nvidia% -rendition -s3 -s3virge -siliconmotion -sis -sisusb
-sunbw2 -suncg14 -suncg3 -suncg6 -sunffb -sunleo -suntcx -tdfx -tga -trident
-tseng -v4l -vesa -vga -via -vmware -voodoo" 0 kB 
</pre>

<p>
INPUT_DEVICES i VIDEO_CARDS ustawiamy w <path>/etc/make.conf</path>, tak by
odpowiadały naszej konfiguracji. Minimalne ustawienia dla powyższego przykładu
byłby następujące: INPUT_DEVICES="<c>keyboard mouse</c>"
VIDEO_CARDS="<c>ati</c>". Jeśli nie ustawimy pierwszej lub drugej zmiennej,
xorg-x11 zainstaluje wszystkie możliwe sterowniki tego typu. Jako sterowniki
zapasowe, można dodać <c>vesa</c> i <c>fbdev</c> do VIDEO_CARDS.
</p>

<p>
Następnie instalujemy metapakiet. Spowoduje to instalację serwera X oraz
najczęściej używanych aplikacji, dając nam do dyspozycji sprawną implementację
X:
</p>

<pre caption="Instalacja modularnego metapakietu">
# <i>emerge xorg-x11</i>
# <i>etc-update</i>
</pre>


<p>
Należy pamiętać, że to polecenie spowoduje minimalną instalację i że rzeczy
takie jak xcursor-themes, nie będą instalowane standardowo. Na przykład, jeśli
zmienialiśmy nasz cursor na whiteglass, redglass lub handhelds, instalujemy
xcursor-themes. Jeśli korzystaliśmy z kursora gentoo, gentoo-blue lub
gentoo-silver, instalujemy gentoo-xcursor.
</p>


<note>
Jeżeli mamy zainstalowane modularne X, zewnętrzne sterowniki (takie jak
nvidia-glx i wacom oraz niektóre aplikacje vnc) mogą nie działać, jeżeli
instalują się do <path>/usr/lib/modules</path> zamiast do
<path>/usr/lib/xorg/modules</path>. Wiele z nich będzie miało możliwość
wykrywania modularnych X w procesie instalacyjnym, więc wymagają one jedynie
przeinstalowania po instalacji modularnego X.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Częste problemy</title>
<section>
<title>'emerge -u world' chce instalować xorg-x11 6.x lub virtual/x11</title>
<body>

<p>
Zdarza się to dlatego, że drzewo portage jeszcze nie jest w pełni przygotowane
do obsługi modularnych zależności. Można nas w tym wspomóc, czytając opis<uri
link="/proj/pl/desktop/x/x11/porting-modular-x-howto.xml">przenoszenia
programów na modularne X</uri> i nadsyłając poprawki do opiekunów
poszczególnych pakietów.  Opiekunowie są wylistowani w pliku
<path>metadata.xml</path> w tym samym katalogu, w którym jest pakiet, a program
<c>herdstat</c> pozwoli przyspieszyć ich wyszukiwanie.
</p>

</body>
</section>
<section>
<title>Co się stało ze wszystkimi flagami USE?</title>
<body>

<p>
Wiele flag USE z xorg-x11-6.8 zniknęło, kilka zostało przeniesionych na 7.0.
Pojawiło się również kilka nowych.
</p>

<table>
<tr>
  <th>Flaga USE</th>
  <th>Co się z nią stało w X 7.0?</th>
</tr>
<tr>
  <ti>3dfx</ti>
  <ti>W 7.0 powoduje dopisanie glide-v3 do zależności pakietu X</ti>
</tr>
<tr>
  <ti>3dnow, mmx, sse</ti>
  <ti>
    Te flagi są standardowo włączone w czasie budowania pakietu, ponieważ ich
    obsługa jest sprawdzana w momencie uruchomienia.
  </ti>
</tr>
<tr>
  <ti>bitmap-fonts, truetype-fonts, type1-fonts</ti>
  <ti>
    Metapakiet xorg-x11 instaluje tylko niewielką ilość najczęściej używanych i
    wymaganych czcionek. Można samodzielnie zainstalować dodatkowe czcionki z
    katalogu <path>media-fonts/</path>.
  </ti>
</tr>
<tr>
  <ti>cjk</ti>
  <ti>
    Należy zainstalować font-misc-misc i font-sony-misc z włączoną flagą nls,
    by uzyskać japońskie czcionki w JISX0201. Więcej znajduje się w pakiecie
    font-jis-misc. Chińskie czcionki są w font-isas-misc, koreańskie w
    font-daewoo-misc.
  </ti>
</tr>
<tr>
  <ti>dlloader</ti>
  <ti>
    X 7.0 standardowo używa dlloader, a elfloader nie działa
  </ti> 
</tr>
<tr>
  <ti>doc</ti>
  <ti>Przeniesione do app-doc/xorg-docs</ti>
</tr>
<tr>
  <ti>dmx</ti>
  <ti>Wbudowane w xorg-server, o ile nie użyto flagi minimal</ti>
</tr>
<tr>
  <ti>font-server</ti>
  <ti>Można samodzielnie doinstalować xfs</ti>
</tr>
<tr>
  <ti>ipv6</ti>
  <ti>
    Przeniesiono do oddzielnych pakietów korzystających z ipv6. Można również
    uruchomić flagę globalnie, jeśli zachodzi taka potrzeba.
  </ti>
</tr>
<tr>
  <ti>minimal</ti>
  <ti>
    By uzyskać ten sam efekt należy zainstalować pakiet xorg-server zamiast
    metapakietu xorg-x11. By uniknąć budowania Xdmx, Xvfb i Xnest można włączyć
    flagę minimal w xorg-server. Jeśli potrzebujemy czegoś jeszcze mniejszego,
    warto zainteresować się x11-base/kdrive.
  </ti>
</tr>
<tr>
  <ti>nls</ti>
  <ti>
    W 7.0 użycie flagi nls powoduje instalację wszystkich wersji czcionek
    różnych od ISO-8859-1.
  </ti>
</tr>
<tr>
  <ti>nocxx</ti>
  <ti>Nie ma jeszcze swojego odpowiednika w X 7.0</ti>
</tr>
<tr>
  <ti>opengl</ti>
  <ti>
    Zmienia nazwę na "dri" i wciąż uruchamia Direct Rendering w xorg-server i
    wielu sterownikach. Niezależnie czy DRI jest włączona, czy nie, wciąż jest
    zapewnione programowe wsparcie 3D przy pomocy Mesa.
  </ti>
</tr>
<tr>
  <ti>pam</ti>
  <ti>
    Przeniesione do indywidualnych pakietów korzystających z pam, takich jak
    xorg-server i xdm
  </ti> 
</tr>
<tr>
  <ti>sdk</ti>
  <ti>X 7.0 musi zainstalować SDK, w konsekwencji modularyzacji</ti> 
</tr>
<tr>
  <ti>static</ti>
  <ti>
    Nie ma sensu budować statycznego serwera, jeżeli cała reszta jest
    modularna, ponieważ sterownik by sobie z tym nie poradził.
  </ti>
</tr>
<tr>
  <ti>xprint</ti>
  <ti>
    Metapakiet instaluje libXp. W innych aplikacjach uruchamia wsparcie dla
    xprint. Większość osób nie chce tego uruchamiać.
  </ti>
</tr>
<tr>
  <ti>xv</ti>
  <ti>
    Przestała być opcjonalna, ponieważ nie zaoszczędza zbyt wiele miejsca i
    powoduje problemy z pakietami oczekującymi, że ta flaga będzie włączona.
  </ti>
</tr>
</table>

</body>
</section>
<section>
<title>Problemy ze sterownikami</title>
<body>

<p>
Zgłaszano nam, że:
</p>

<ul>
  <li>vesa zawiesza komputery z kartą Matrox</li>
  <li>vga tworzy bardzo dziwnie wyglądający ekran, podzielony na cztery części</li> 
</ul>

</body>
</section>
<section>
<title>Ponowne uruchomienie akceleracji 3D</title>
<body>

<p>
Programy te, zawarte są w pakiecie <c>x11-apps/mesa-progs</c>. <c>mesa-progs</c>
jest instalowane przez pakiet <c>x11-base/xorg-x11</c> automatycznie.
</p>

<pre caption="Włączanie informacji diagnostycznych">
# <i>grep -e EE -e WW /var/log/Xorg.0.log</i>
# <i>LIBGL_DEBUG=verbose glxinfo</i>
</pre>

</body>
</section>
<section>
<title>Automatyczne wykrywanie protokołu myszki</title>
<body>

<p>
Opcja <c>Protocol "auto"</c> w <path>xorg.conf</path> dla naszej myszy, może
nie zadziałać.  Należy ustawić <c>Protocol "ExplorerPS/2"</c> lub
<c>"IMPS/2"</c> by działało kółko myszki.
</p>

</body>
</section>
<section>
<title>Pojawiają się błędy dotyczące braku libbitmap lub libpcidata</title>
<body>

<p>
Należy przeinstalować <c>&gt;=xorg-server-0.99.1-r4</c>. Ten tymczasowy błąd w
ebuildzie polegał na kasowaniu katalogu po usunięciu pakietu.
<path>/usr/lib/xorg</path> powinno być usunięte tylko wtedy, gdy żaden
xorg-server nie pozostał w systemie.  
</p>

<p>
Należy się również upewnić, że wpis <c>ModulePath</c> istnieje w
<path>/etc/X11/xorg.conf</path>.
</p>

</body>
</section>
<section>
<title>Program gdm/kdm nie działa</title>
<body>

<p>
Jeżeli instalowaliśmy modularne X na nowej instalacji Gentoo, w systemie może
nie być obecne dowiązanie symboliczne <path>/usr/X11R6</path> -&gt;
<path>/usr</path>. Pakiet <c>x11-base/xorg-x11</c> upewni się, czy symlink
istnieje podczas procesu
instalacji.
</p>

<p>
Można nas wesprzeć w poprawianiu pakietów instalujących się w
<path>/usr/X11R6</path> poprzez tworzenie poprawek i nadsyłanie nam ich.
</p>

<pre caption="Pakiety, które instalują się w /usr/X11R6">
# <i>cat ~/usr-x11r6-packages</i>
# <i>emerge --pretend $(&lt; ~/usr-x11r6-packages )</i>
</pre>

</body>
</section>

<section>
<title>XKB nie działa, nie można zmienić VT, itd.</title>
<body>

<ul>
  <li>Wiele układów klawiatury z XKB zostało przeniesionych, połączonych, lub
  usuniętych. Radzimy zajrzeć do <path>/usr/share/X11/xkb/symbols/pc</path>, by
  zobaczyć, co stało się z naszym starym ustawieniem XkbLayout w xorg.conf. Na
  przykład, by zmienić stary układ "us_intl", dodajemy <c>"XkbLayout"
  "latin"</c> i <c>"XkbOptions" "lv3:ralt_switch"</c>. Zamiast "sk_qwerty"
  użyjemy <c>"XkbLayout" "sk"</c> i <c>"XkbVariant" "qwerty"</c>. Jako bardziej
  zaawansowany przykład, możemy użyć <c>"XkbLayout" "us,sk_qwerty"</c>, które
  zamienilibyśmy na <c>"XkbLayout" "us,sk"</c>. Teraz ważna część:
  <c>"XkbVariant" ",qwerty"</c>. Należy zwrócić uwagę na przecinek, ponieważ
  chcemy, by wariant dotyczył drugiego układu.
  </li>
</ul>

</body>
</section>

<section>
<title>Pozostałe sprawy</title>
<body>

<ul>
  <li>
    Pakiet <c>x11-base/xorg-x11</c> filtruje teraz wszystkie linie ModulePath i
    RgbPath w <path>/etc/X11/xorg.conf</path>, ponieważ obie te ścieżki zmieniły
    się od czasu poprzedniej wersji. Należy pamiętać o uruchomieniu
    <c>etc-update</c> w celu sfinalizowania tych zmian.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
