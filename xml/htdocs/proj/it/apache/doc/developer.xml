<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/it/apache/doc/developer.xml,v 1.2 2012/10/28 15:21:22 swift Exp $ -->

<guide lang="it">
<title>Documentazione per Sviluppatori di Apache</title>

<author title="Autore">
  <mail link="vericgar@gentoo.org">Michael Stewart</mail>
</author>
<author title="Redazione">
  <mail link="hollow@gentoo.org">Benedikt Böhm</mail>
</author>
<author title="Traduzione">
  <mail link="zanetti.massimo@gmail.com">Massimo Zanetti</mail>
</author>
<author title="Traduzione">
  <mail link="scen"/>
</author>

<abstract>
Questo documento fornisce dettagli sulle eclass disponibili per gli sviluppatori
di pacchetti relativi al webserver Apache.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>2.5</version>
<date>2008-03-02</date>

<chapter id="modulehowto">
<title>Guida ai Moduli Apache</title>
<section>
<title>Panoramica</title>
<body>

<p>
Questo capitolo guiderà uno sviluppatore attraverso la creazione di un'ebuild
usando uno dei pacchetti maggiormente complessi,
<c>www-apache/mod_ldap_userdir</c>, scelto come esempio. Tutti i moduli di
Apache hanno bisogno di usare <uri
link="apache-module.eclass.xml">apache-module.eclass</uri> per poter funzionare
correttamente con i futuri cambiamenti del nucleo di apache.
</p>

</body>
</section>
<section>
<title>Localizzazione Percorsi Apache</title>
<body>

<p>
Allo scopo di avvicinarsi al tipo di installazione fatto da apache.org e altre
distribuzioni, devono essere usati i seguenti percorsi come specificato in <uri
link="depend.apache.eclass.xml">depend.apache.eclass</uri>:
</p>

<table>
<tr>
  <th>Utilizzo</th>
  <th>Variabile</th>
  <th>Percorso</th>
</tr>
<tr>
  <ti>Server Root</ti>
  <ti><c>APACHE_BASEDIR</c></ti>
  <ti><path>/usr/lib/apache2/</path></ti>
</tr>
<tr>
  <ti>Directory della Configurazione</ti>
  <ti><c>APACHE_CONFDIR</c></ti>
  <ti><path>/etc/apache2/</path></ti>
</tr>
<tr>
  <ti>Configurazione Vhosts</ti>
  <ti><c>APACHE_VHOSTS_CONFDIR</c></ti>
  <ti><path>/etc/apache2/vhosts.d/</path></ti>
</tr>
<tr>
  <ti>Configurazione Moduli</ti>
  <ti><c>APACHE_MODULES_CONFDIR</c></ti>
  <ti><path>/etc/apache2/modules.d/</path></ti>
</tr>
<tr>
  <ti>Binari dei Moduli</ti>
  <ti><c>APACHE_MODULESDIR</c></ti>
  <ti><path>/usr/lib/apache2/modules/</path></ti>
</tr>
<tr>
  <ti>Directory File Include</ti>
  <ti><c>APACHE_INCLUDEDIR</c></ti>
  <ti><path>/usr/include/apache2/</path></ti>
</tr>
<tr>
  <ti>Binario Apache</ti>
  <ti><c>APACHE_BIN</c></ti>
  <ti><path>/usr/sbin/apache2</path></ti>
</tr>
<tr>
  <ti>Script Controllo Apache</ti>
  <ti><c>APACHE_CTL</c></ti>
  <ti><path>/usr/sbin/apache2ctl</path></ti>
</tr>
<tr>
  <ti>Binario APXS</ti>
  <ti><c>APXS</c></ti>
  <ti><path>/usr/sbin/apxs2</path></ti>
</tr>
</table>

<note>
Se il proprio pacchetto non è precisamente un modulo, ma ha solo bisogno di
conoscere i percorsi usati da Apache, eseguire <c>inherit depend.apache</c> ed
usare le variabili rese disponibili nella eclass. A tale proposito vedere la
documentazione relativa all'eclass <uri
link="depend.apache.eclass.xml">depend.apache.eclass</uri> .
</note>

</body>
</section>
<section>
<title>Panoramica sulle ebuild per i moduli di apache</title>
<body>

<ul>
  <li>In genere tutte le funzioni possono essere rimosse dall'ebuild</li>
  <li>
    Controllare se la funzione <c>src_compile</c> predefinita nell'eclass
    funziona. Altrimenti, impostare <c>APXS2_ARGS</c> per compilare altri file
    come richiesto.
  </li>
  <li>
    Sostituire qualsiasi occorrenza di <c>DEPEND</c> su Apache con una delle
    funzioni <c>need_apache*</c> descritte nella documentazione di <uri
    link="depend.apache.eclass.xml">depend.apache.eclass</uri>.
  </li>
  <li>
    Modificare il file di configurazione del modulo affinché usi gli
    <c>IfDefine</c> per caricare e configurare il modulo
  </li>
  <li>Aggiungere qualsiasi file di documentazione a <c>DOCFILES</c></li>
  <li>
    Specificare il file di configurazione che src_install deve installare:
    <c>APACHE2_MOD_CONF</c>
  </li>
  <li>
    Specificare la <c>IfDefine</c> che il modulo usa nel suo file di
    configurazione così che pkg_postinst possa dare informazioni all'utente su
    come abilitare il modulo: <c>APACHE2_MOD_DEFINE</c>
  </li>
</ul>

</body>
</section>
<section>
<title>Ebuild Globali</title>
<body>

<pre caption="mod_ldap_userdir-1.1.12 (modificato)">
inherit apache-module


DESCRIPTION="Modulo Apache che abilita ~/public_html from an LDAP directory."
HOMEPAGE="http://horde.net/~jwm/software/mod_ldap_userdir/"
SRC_URI="http://horde.net/~jwm/software/mod_ldap_userdir/${P}.tar.gz"

LICENSE="GPL-1"
SLOT="0"
KEYWORDS="~ppc ~x86"
IUSE="ssl"

DEPEND="ssl? ( dev-libs/openssl )
    net-nds/openldap"
RDEPEND="${DEPEND}"

DOCFILES="DIRECTIVES README user-ldif posixAccount-objectclass"

APXS2_ARGS="-lldap -llber -c ${PN}.c"
APACHE2_MOD_CONF="47_mod_ldap_userdir"
APACHE2_MOD_DEFINE="LDAP_USERDIR"

need_apache2_2
</pre>

<p>
Si è partiti da <c>inherit apache-module</c> che a sua volta eredita
<c>depend.apache</c>. <c>depend.apache</c> definisce le locazioni usate da
Apache e, più importante, le tre <c>DEPEND</c>s: <c>APACHE2_2_DEPEND</c> per
quei pacchetti che hanno bisogno di Apache-2.2*, <c>APACHE2_DEPEND</c> per
quei pacchetti che hanno bisogno di Apache-2*, e <c>APACHE_DEPEND</c> per quelli
che hanno bisogno di una qualsiasi delle due versioni di Apache.
</p>

<p>
L'<c>apache-module</c> fa la parte più pesante per i pacchetti del modulo
definendo impostazioni predefinite valide per <c>pkg_setup</c>,
<c>src_compile</c>,<c>src_install</c> e <c>pkg_postinst</c>.
</p>

<p>
<c>depend.apache</c> lavora aggiungendo il corretto Apache DEPEND al proprio
DEPEND (se si chiama una delle funzioni <c>need_apache*</c>) così che si possa
evitare la gestione del apache DEPEND nella propria ebuild.
</p>

<p>
<c>DOCFILES</c> è usato da <c>src_install</c> in <c>apache-modules</c> per
installare tutta la documentazione. <c>src_install</c> trova automaticamente i
file html e altri e usa sia <c>dodoc</c> che <c>dohtml</c> per installarli al
posto giusto.
</p>

<p>
<c>APACHE2_MOD_CONF</c> definisce il file di configurazione da installare per il
modulo. Questo è usato durante <c>src_install</c> e ha bisogno di essere
relativo a <c>FILESDIR</c>. Vedere la documentazione di <uri
link="apache-module.eclass.xml">apache-module.eclass</uri> per maggiori
dettagli.
</p>

<p>
<c>APACHE2_MOD_DEFINE</c> dice all'eclass quale <c>&lt;IfDefine
MODULENAME&gt;</c> usa il modulo. Serve per mostrare all'utente le istruzioni su
come abilitare il modulo.
</p>

</body>
</section>
<section>
<title>src_compile</title>
<body>

<p>
<c>src_compile</c> può servire se il modulo richiede speciali passi che l'eclass
non può gestire. Questo è un caso raro. Nella maggioranza dei casi, riguardare
il <path>Makefile</path> e aggiungere gli oggetti a <c>APXS2_ARGS</c> è
sufficiente.
</p>

<pre caption="mod_ldap_userdir-1.1.12 (modificato)">
src_compile() {
    econf || die "econf failed"
    use ssl &amp;&amp; APXS2_ARGS="${APXS2_ARGS} -DTLS=1"
    apache-module_src_compile
}
</pre>

<note>
In generale se APXS2_ARGS deve essere diverso, è definito nello spazio globale.
<path>mod_ldap_userdir</path> a questo riguardo è differente perché lo stato
della flag USE di ssl influenza quelle variabili ed è più efficiente
nell'impostare solamente quei valori in <c>src_compile</c> piuttosto che
eseguire il controllo USE durante ogni chiamata dell'ebuild.
</note>

</body>
</section>
<section>
<title>src_install</title>
<body>

<p>
Nella maggior parte dei casi, <c>src_install</c> non è necessario, eccetto
quando ci sono altre directory che hanno bisogno di essere installate o quando
i permessi sui file devono essere modificati.
</p>

<pre caption="mod_ldap_userdir-1.1.12 (modificato)">
src_install() {
    apache-module_src_install
    fperms 600 "${APACHE_MODULES_CONFDIR}"/47_mod_ldap_userdir.conf
}
</pre>

<p>
Come si può notare, nel <path>mod_ldap_userdir</path> bisogna impostare i
permessi corretti sui suoi file di configurazione. <c>apache-module</c> dà il
meglio di sé chiamando <c>apache-module_src_install</c> all'interno del proprio
<c>src_install</c>. Nella maggior parte dei casi <c>src_install</c> non è per
nulla necessario.
</p>

<p>
<c>src_install</c> gestisce correttamente e completamente l'installazione del
modulo, dei file di configurazione e della documentazione.
</p>

</body>
</section>
<section>
<title>Altre funzioni</title>
<body>

<p>
Nella maggioranza dei casi, non ci dovrebbe essere nessun pkg_postinst o
pkg_config, visto che l'eclass gestisce direttamente l'invio delle istruzioni
relative all'abilitazione di un modulo e la posizione del file di configurazione
dell'utente. Se ci fosse bisogno di istruzioni aggiuntive per la configurazione,
allora si può aggiungere <c>pkg_postinst</c>, ma si deve ugualmente far andare
<c>apache-module_pkg_postinst</c> al suo interno.
</p>

<p>
Con la nuova configurazione predefinita, gli utenti non hanno bisogno di
modificare <path>httpd.conf</path> per abilitare un modulo. Tutti i file
<path>*.conf</path> nella directory <path>modules.d</path> sono automaticamente
inclusi. Tutti i file dovrebbero essere inglobati in un blocco <c>&lt;IfDefine
MODULENAME&gt;</c>, in modo che le direttive in quel file siano usate solo se
l'utente aggiunge un <c>"-D MODULENAME"</c> al suo file
<path>/etc/conf.d/apache2</path>.
</p>

</body>
</section>
<section>
<title>File di configurazione</title>
<body>

<p>
La maggior parte dei file di configurazione non deve essere modificata. Bisogna
fare estrema attenzione nell'usare il percorso corretto quando si carica il
modulo:

Ogni file di configurazione dev'essere racchiuso nei blocchi <c>&lt;IfDefine
MODULENAME&gt;</c>. Se questo non viene fatto, allora Apache carica il modulo
predefinito, cosa che si vuole evitare. Il caricamento del modulo deve essere
controllato dall'utente usando il file <path>/etc/conf.d/apache2</path>.
</p>

<pre caption="file di configurazione d'esempio">
&lt;IfDefine LDAP_USERDIR&gt;
LoadModule ldap_userdir_module modules/mod_ldap_userdir.so

<comment># Inserire qui una buona configurazione predefinita:</comment>
LDAPUserDir             public_html
LDAPUserDirDNInfo       cn=root,dc=yourcompany,dc=com yourpassword
LDAPUserDirBaseDN       ou=People,dc=yourcompany,dc=com

&lt;/IfDefine&gt;
</pre>

</body>
</section>
</chapter>

</guide>
