<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/it/desktop/x/x11/modular-x-howto.xml,v 1.7 2007/07/23 21:19:28 scen Exp $ -->

<guide link="/proj/it/desktop/x/x11/modular-x-howto.xml" lang="it">
<title>Guida per la migrazione a X Modulare</title>

<author title="Autore">
  <mail link="dberkholz@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Autore">
  <mail link="joshuabaergen@gmail.com">Joshua Baergen</mail>
</author>
<author title="Traduzione">
  <mail link="scen@gentoo.org">Davide Cendron</mail>
</author>

<abstract>
Questa guida spiega come migrare ad X.org modulare.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.1.2</version>
<date>2006-11-05</date>

<chapter>
<title>Introduzione</title>

<section>
<title>Perché modulare?</title>
<body>

<p>
Probabilmente ci si meraviglierebbe se un singolo ed elementare pacchetto come
xorg-x11 venisse diviso in almeno 300 pacchetti separati. Questo cambiamento non
è qualcosa che Gentoo sta facendo indipendentemente dallo sviluppo di X.Org; gli
sviluppatori di questo software stanno suddividendo tutti i pacchetti in
versioni separate, e il gruppo degli sviluppatori di Gentoo sta seguendo la
stessa modalità.
</p>

<p>
Le ragioni dietro la divisione e alla modifica della struttura di X.Org sono
almeno tre:
</p>

<ul>
  <li>
    E' troppo difficile per i nuovi sviluppatori addentrarsi in X, perciò si è
    migrati ad autotools, un sistema di cui molte persone sono soddisfatte, se
    non addirittura felici.
  </li>
  <li>
    Seguendo questo spostamento, con autotools è possibile dividere i sorgenti,
    e questo rende X più facile da sviluppare.
  </li>
  <li>
    Le varie parti di X sono state tenute insieme senza motivo in passato, e ciò
    ha reso la risoluzione di bug spesso non possibile. Se si riusciva ad
    effettuare le correzioni, esse richiedevano la ricompilazione totale di
    XOrg. Per esempio, un bug nei driver ati significava aspettare 6 mesi fino
    al prossimo rilascio, oppure bisognava ricompilare tutto, anche i font, per
    risolvere il problema, senza nessuna ragione valida.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Migrare a X Modulare</title>
<section>
<title>Introduzione</title>
<body>

<p>
Per far sì che vecchi pacchetti non creino conflitti, verrà fatta pulizia di
tutti i file relativi al vecchio xorg-x11, prima di installare X modulare. Non è
assolutamente essenziale ciò, ma aiuterà ad effettuare una migrazione il più
trasparente possibile.
</p>

</body>
</section>

<section>
<title>Primo passaggio. Rimuovere completamente il vecchio X</title>
<body>

<pre caption="Fare una copia di sicurezza del vecchio xorg-x11">
# <i>emerge gentoolkit</i>
# <i>quickpkg xorg-x11</i>
</pre>

<p>
Liberarsi dell'installazione monolitica:
</p>

<pre caption="Rimuovere l'installazione monolitica">
# <i>emerge -Ca xorg-x11 virtual/x11</i>
</pre>

<p>
si potrebbe aver bisogno di una copia di sicurezza di xorg-x11 monolitico nel
caso in seguito si verificassero incidenti irreversibili. È consigliabile
installare un browser testuale come links o lynx per visualizzare questa guida
mentre X non è disponibile.
</p>

<p>
Se la propria directory <path>/usr/X11R6</path> non è un collegamento simbolico
a <path>/usr</path>, cancellarla e cominciare da zero. Ma prima di farlo,
salvare la lista di tutti i pacchetti installati dentro di essa. Il pacchetto
<c>gentoolkit</c> fornisce <c>equery</c>.
</p>

<pre caption="Creare una lista di pacchetti">
# <i>if [[ ! -L /usr/X11R6 ]]; \
  then equery belongs /usr/X11R6 > ~/usr-x11r6-packages \
  &amp;&amp; rm -rf /usr/X11R6; fi</i>
</pre>

</body>
</section>

<section>
<title>Secondo passaggio: Installare X modulare</title>
<body>

<p>
Per l'accelerazione grafica, attivare la flag USE <c>dri</c>.
</p>

<p>
Successivamente, installare i driver necessari. Questa operazione potrà variare
in base al proprio hardware video o di input. Se si possiede già un file di
configurazione <path>/etc/X11/xorg.con</path> funzionante, eseguire il seguente
comando per farsi un'idea di quale driver si avrà bisogno:
</p>

<pre caption="Trovare i driver dei quali si ha bisogno">
# <i>grep Driver /etc/X11/xorg.conf</i>
Driver      "kbd"
Driver      "mouse"
Driver      "radeon"
</pre>

<pre caption="Verificare i driver disponibili">
# <i>emerge --verbose --pretend xorg-x11</i>
[ebuild   R   ] x11-base/xorg-x11-7.0-r1  USE="-xprint" INPUT_DEVICES="keyboard
mouse -acecad -aiptek -calcomp -citron -digitaledge -dmc -dynapro -elo2300
-elographics -evdev -fpit -hyperpen -jamstudio -joystick -magellan -magictouch
-microtouch -mutouch -palmax -penmount -spaceorb -summa -synaptics% -tek4957
-ur98 -vmmouse -void" VIDEO_CARDS="i128 mga savage -apm -ark -ati* -chips
-cirrus -cyrix -dummy -fbdev -fglrx% -glint -i740 -i810 -imstt -neomagic
-newport -nsc -nv -nvidia% -rendition -s3 -s3virge -siliconmotion -sis -sisusb
-sunbw2 -suncg14 -suncg3 -suncg6 -sunffb -sunleo -suntcx -tdfx -tga -trident
-tseng -v4l -vesa -vga -via -vmware -voodoo" 0 kB
</pre>

<p>
Impostare INPUT_DEVICES e VIDEO_CARDS secondo le proprie esigenze in
<path>/etc/make.conf</path>. Le impostazioni minimail per l'esempio precedente
potrebbero essere INPUT_DEVICES="<c>keyboard mouse</c>"
VIDEO_CARDS="<c>ati</c>". Se non si imposta l'una o l'altra variabile, xorg-x11
farà installare tutti i possibili driver di quel tipo. Per avere dei driver di
scorta, si potrebbe aggiungere anche <c>vesa</c> e <c>fbdev</c> a VIDEO_CARDS.
</p>

<p>
A questo punto installare il metapacchetto, il quale installerà il server e le
applicazioni principali, fornendo una implementazione funzionante di X per il
desktop:
</p>

<pre caption="Installare il metapacchetto modulare">
# <i>emerge xorg-x11</i>
# <i>etc-update</i>
</pre>

<p>
Si noterà che questa installazione sarà alquanto minimale, poichè elementi come
xcursor-themes non verranno installati in modo predefinito. Per esempio,
si potrebbe voler installare xcursor-themes se è stata cambiata la
configurazione dei cursori su whiteglass, redglass o handhelds. Se si usano i
temi gentoo, gentoo-blue o gentoo-silver per i cursori, installare
gentoo-xcursors.
</p>

<note>
Con l'installazione modulare, driver esterni come nvidia-glx o wacom o
applicazioni vnc potrebbero non funzionare, se essi installano delle loro parti
in <path>/usr/lib/modules/</path> invece che in
<path>/usr/lib/xorg/modules</path>. Molti di questi pacchetti hanno una
rilevazione di X modulare inserita nel processo di installazione, di conseguenza
essi vanno reinstallati a seguito dell'installazione di X modulare.
</note>

</body>
</section>
</chapter>

<chapter>
<title>Avvertimenti/Problemi Comuni</title>
<section>
<title>'emerge -u world' vuole installare xorg-x11 6.x o virtual/x11</title>
<body>

<p>
Questo avviene perchè le dipendenze di alcuni pacchetti non sono ancora state
aggiornate per la versione modulare. È possibile dare una mano nel faticoso
compito di migrazione leggendo la <uri
link="/proj/it/desktop/x/x11/porting-modular-x-howto.xml">Guida per il porting
a X modulare</uri> e fornire le patch dei bug ai manutentori dei singoli
pacchetti. I manutentori saranno elencati in <path>metadata.xml</path> nella
stessa directory del pacchetto e il pacchetto <c>herdstat</c> velocizzerà la
loro interrogazione.
</p>

</body>
</section>

<section>
<title>Cos'è successo a tutte le flag USE?</title>
<body>

<p>
Diverse flag USE usate nella serie xorg-x11-6.8 sono state rimosse o spostate
nella 7.0. Qualche nuova flag USE è invece apparsa. Ecco il perchè:
</p>

<table>
<tr>
  <th>USE flag</th>
  <th>Cosa comporta in xorg 7.0?</th>
</tr>
<tr>
  <ti>3dfx</ti>
  <ti>
    Nella versione 7.0, aggiunge glide-v3 come dipendenza del metapacchetto
    xorg-x11
  </ti>
</tr>
<tr>
  <ti>3dnow, mmx, sse</ti>
  <ti>
    Abilitate in modo predefinito in fase di compilazione, perchè ci sono dei
    controlli in fase di esecuzione.
  </ti>
</tr>
<tr>
  <ti>bitmap-fonts, truetype-fonts, type1-fonts</ti>
  <ti>
    Il metapacchetto xorg-x11 installa un piccola selezione dei principali font
    usati o richiesti. Si potrà installarne di ulteriori tramite i pacchetti in
    media-fonts/.
  </ti>
</tr>
<tr>
  <ti>cjk</ti>
  <ti>
    USE=nls su font-misc-misc e font-sony-misc per ottenere i font JISX0201
    giapponesi. Molti altri sono in font-jis-misc. I font cinesi sono in
    font-isas-misc. I font coreani sono in font-daewoo-misc.
  </ti>
</tr>
<tr>
  <ti>dlloader</ti>
  <ti>
    la versione 7.0 usa il dllloader in modo predefinito, e l'elfloader non
    funziona.
  </ti>
</tr>
<tr>
  <ti>doc</ti>
  <ti>Spostato in app-doc/xorg-docs</ti>
</tr>
<tr>
  <ti>dmx</ti>
  <ti>Contenuto in xorg-server almeno che USE=minimal</ti>
</tr>
<tr>
  <ti>font-server</ti>
  <ti>È possibile installare manualmente xfs.</ti>
</tr>
<tr>
  <ti>ipv6</ti>
  <ti>
    Spostato nei singoli pacchetti che lo usano. Impostarlo globalmente in base
    alle proprie necessità.
  </ti>
</tr>
<tr>
  <ti>minimal</ti>
  <ti>
    Per avere lo stesso effetto, installare solamente xorg-server invece che
    xorg-x11. USE=minimal in xorg-server per evitare di compilare Xdmx, Xvfb e
    Xnest. Se serve qualcosa di ancora più minimale, dare un'occhiata in
    x11-base/kdrive.
  </ti>
</tr>
<tr>
  <ti>nls</ti>
  <ti>In 7.0, USE=nls installa tutte le versioni non-ISO8859-1 dei font.</ti>
</tr>
<tr>
  <ti>nocxx</ti>
  <ti>Non esiste ancora un equivalente in 7.0</ti>
</tr>
<tr>
  <ti>opengl</ti>
  <ti>
    Il nome è stato cambiato in "dri", il quale abilita il rendering diretto in
    xorg-server e diversi driver. Sia che USE=dri sia abilitato, sia che sia
    disabilitato, sarà possibile ottenere l'accelerazione 3D software tramite
    Mesa.
  </ti>
</tr>
<tr>
  <ti>pam</ti>
  <ti>Spostato nei singoli pacchetti che lo usano, come xorg-server e xdm</ti>
</tr>
<tr>
  <ti>sdk</ti>
  <ti>7.0 deve installare l'SDK come conseguenza della modularizzazione.</ti>
</tr>
<tr>
  <ti>static</ti>
  <ti>
    Nella maggior parte dei casi non ha molto senso provare a compilare un
    server statico in un mondo modulare, poichè i driver non verrebbero
    compilati al suo interno.
  </ti>
</tr>
<tr>
  <ti>xprint</ti>
  <ti>
    Nel metapacchetto, installa libXp. Nelle altre applicazion abilita il
    supporto a xprint. Molte persone non avranno bisogno di abilitare questa
    flag USE.
  </ti>
</tr>
<tr>
  <ti>xv</ti>
  <ti>
    Non più opzionale perchè non salva molto spazio e causa altri problemi con
    qualche pacchetto che si aspetta la sua presenza.
  </ti>
</tr>
</table>

</body>
</section>

<section>
<title>Cos'è successo a tutti i file di configurazione?</title>
<body>

<p>
Nel pacchetto X.Org 6.8 di Gentoo tutti i file di configurazione e gli script
risiedevano in <path>/etc/X11</path>. In X.Org modulare l'ubicazione di questi
file è stata cambiata dagli sviluppatori di X.Org stesso: in pratica i file di
configurazione sono ancora in <path>/etc/X11</path>, ma gli script e le
configurazioni predefinite ora risiedono in <path>/usr/lib/X11</path> (o
<path>/usr/lib64/X11</path>) e <path>/usr/share/X11</path>.
</p>

<p>
A causa della protezione delle configurazioni (CONFIG_PROTECT), probabilmente si
avranno ancora i vecchi file di configurazione di X.Org 6.8 in
<path>/etc/X11</path>, occuperanno spazio ma potranno risultare utili.
</p>

<p>
Siccome queste nuove directory non sono in CONFIG_PROTECT, è importante che ogni
modifica alle configurazioni predefinite venga fatta copiando i file necessari
in <path>/etc/X11</path> e aggiornando la configurazione appropriata in quella
posizione. In alternativa, ma non è consigliabile, la nuova ubicazione può
essere protetta. Di seguito vengono proposti alcuni esempi:
</p>

<pre caption="Personalizzare l'inizializzazione di XDM">
<comment>
Per prima cosa copiare il file Xsetup_0 in /etc così verrà incluso nella protezione delle configurazioni.
</comment>
# <i>cp -a /usr/lib/X11/xdm/Xsetup_0 /etc/X11/xdm/</i>
<comment>
Modificare il file e personalizzarlo a piacimento.
</comment>
<comment>
Infine, modificare xdm-config per aggiornare il percorso per questo file.
</comment>
# <i>nano /etc/X11/xdm/xdm-config</i>
<comment>
Cambiare la seguente sezione da così:
</comment>
! The following three resources set up display :0 as the console.
DisplayManager._0.setup:        /usr/lib/X11/xdm/Xsetup_0
DisplayManager._0.startup:      /usr/lib/X11/xdm/GiveConsole
DisplayManager._0.reset:        /usr/lib/X11/xdm/TakeConsole
<comment>
a così:
</comment>
! The following three resources set up display :0 as the console.
<i>DisplayManager._0.setup:        /etc/X11/xdm/Xsetup_0</i>
DisplayManager._0.startup:      /usr/lib/X11/xdm/GiveConsole
DisplayManager._0.reset:        /usr/lib/X11/xdm/TakeConsole
</pre>
<note>
Nei sistemi a 64 bit multilib con il profilo senza il collegamento simbolico, bisogna sostituire lib con lib64.
</note>

<p>
In questo esempio proposto da Joe Womack, verranno personalizzate alcune
impostazioni di <c>xterm</c> Ciò può essere fatto sia globalmente sia per
utente.
</p>

<pre caption="Personalizzare app-defaults/XTerm-color globalmente">
<comment>
Come sopra, creare una copia del file in /etc per includerlo nella protezione delle configurazioni:
</comment>
# <i>cp -a /usr/share/X11/app-defaults/XTerm-color /etc/X11/app-defaults/</i>
<comment>
Personalizzare il file a piacimento. A questo punto bisogna dire a Xt dove trovare i file tramite XFILESEARCHPATH. Inserire questa variabile in un file all'interno di /etc/env.d:
</comment>
# <i>echo '# Questo si applica alla configurazione globale.' >>
/etc/env.d/10xpaths</i>
# <i>echo 'XFILESEARCHPATH=/etc/X11/%T/%N:/usr/share/X11/%T/%N' >>
/etc/env.d/10xpaths</i>
</pre>

<pre caption="Personalizzare app-defaults/XTerm-color localmente">
<comment>Ci sono principalmente due modi per farlo:</comment>
<comment>1) Configurare una directory app-defaults per utente:</comment>
# <i>echo '# Questo si applica alla personalizzazione utente in $HOME/app-defaults.' >> /etc/env.d/10xpaths </i>
# <i>echo 'XUSERFILESEARCHPATH=$HOME/%T/%N' >> /etc/env.d/10xpaths</i>

<comment>
2) Creare un file .Xdefaults o .Xresources e copiare le impostazioni che si
vogliono modificare. Le modifiche di questo esempio fanno sì che tutti gli
Xterm abbiano un cursore aranciano, siano eseguiti come shell di login, abbiano
una barra di scorrimento come decorazione, e 1000 linee di buffer per lo scroll
all'indietro:
</comment>
# <i>echo '! Xterm defaults'               >> .Xresources</i>
# <i>echo 'XTerm*CursorColor:      orange' >> .Xresources</i>
# <i>echo 'XTerm*loginShell:       true'   >> .Xresources</i>
# <i>echo 'XTerm*scrollBar:        true'   >> .Xresources</i>
# <i>echo 'XTerm*saveLines:        1000'   >> .Xresources</i>

<comment>
Per applicare queste impostazione, riavviare X o eseguire:
</comment>
# <i>xrdb -merge $HOME/.Xresources</i>
</pre>

<note>
Vedere http://www.faqs.org/faqs/x-faq/part2/section-22.html per avere maggiori
dettagli nell'impostazione di XFILESEARCHPATH e XUSERFILESEARCHPATH. Vedere
http://tldp.org/HOWTO/XWindow-User-HOWTO/moreconfig.html#XRESOURCES per
ulteriori dettagli su .Xresources.
</note>

</body>
</section>

<section>
<title>Problemi dei driver</title>
<body>

<p>
Sono state ricevute alcune segnalazioni in cui:
</p>

<ul>
  <li>vesa blocca sistemi con schede video Matrox</li>
  <li>vga produce una schermata molto bizzarra, divisa in quattro parti</li>
</ul>

</body>
</section>

<section>
<title>Far funzionare di nuovo l'accellerazione 3D</title>
<body>

<p>
Per ottenere qualche informazione di debug da glxinfo per aiutare a far
funzionare il rendering diretto si può usare questo comando:
</p>

<pre caption="Ottenere delle informazioni di debug da glxinfo">
# <i>LIBGL_DEBUG=verbose glxinfo</i>
</pre>

</body>
</section>

<section>
<title>Autoriconoscimenti del protocollo del mouse</title>
<body>

<p>
Se è stato impostato <c>"Protocol" "auto"</c> in xorg.conf per il proprio mouse,
esso potrebbe non funzionare. Bisognerà specificare <c>"Protocol"
"ExplorerPS/2"</c> o <c>"IMPS/2"</c> per far sì che il proprio mouse funzioni
correttamente.
</p>

</body>
</section>

<section>
<title>Ricevo messaggi d'errore riguardo la mancanza di libbitmap o
libpcidata</title>
<body>

<p>
Reinstallare <c>&gt;=xorg-server-0.99.1-r4</c>. Questo è un bug temporaneo
nell'ebuild che causa questa cancellazione a seguito della rimozione di un
pacchetto. Invece, <path>/usr/lib/xorg</path> dovrebbe venire cancellato quando
non rimane nessun xorg-server nel sistema.
</p>

<p>
Inoltre, assicurarsi che nessuna voce <c>ModulePath</c> esista in
<path>/etc/X11/xorg.conf</path>.
</p>

</body>
</section>

<section>
<title>gdm/kdm non funzionano</title>
<body>

<p>
Se è stato installato X modulare in una nuova installazione di Gentoo, si
potrebbe non avere il collegamento simbolico <path>/usr/X11R6</path> -&gt;
<path>/usr</path>. il pacchetto <c>x11-base/xorg-x11</c> assicurerà che il
collegamento simbolico esista durante il processo di emerge.
</p>

<p>
Per aiutare nel tenere fuori le cose da <path>/usr/X11R6</path> si possono
corregge i pacchetti che vengono installati lì dentro e inserire i rispettivi
bug. Inoltre, ricordarsi di reinstallare i pacchetti.
</p>

<pre caption="Pacchetti che vengono installati in /usr/X11R6">
# <i>cat ~/usr-x11r6-packages</i>
# <i>emerge --pretend $(&lt; ~/usr-x11r6-packages )</i>
</pre>

</body>
</section>

<section>
<title>XKB non funziona, non posso spostarmi tra i VT, ecc.</title>
<body>

<ul>
<li>
Molte configurazioni di XKB sono state rimosse, spostate o consolidate.
Controllare in <path>/usr/share/X11/xkb/symbols/</path> per vedere cos'è
successo al vecchio parametro XkbLayout in xorg.conf. Per esempio, per
ripristinare la vecchia configurazione "us_intl", si dovrebbe mettere
<c>"XkbLayout" "latin"</c>, <c>"XkbOptions"	"lv3:ralt_switch"</c>. Per
ripristinare la vecchia configurazione "sk_qwerty", si dovrebbe mettere
<c>"XkbLayout" "sk"</c>, <c>"XkbVariant" "qwerty"</c>. Per fare un esempio
più complesso, si dovrebbe avere <c>"XkbLayout" "us,sk_qwerty"</c>. Per far sì
che funzioni, la nuova impostazione dovrebbe essere <c>"XkbLayout" "us,sk"</c>,
e il trucchetto è nella virgola presente nell'esempio seguente:
<c>"XkbVariant" ",qwerty"</c>, perchè in questo modo si applicherà la variante
solo alla seconda configurazione.
</li>
</ul>

<pre caption="Scovare i cambiamenti di XKB">
<comment>Controllare in /var/log/Xorg.0.log per individuare questo messaggio:</comment>
<comment>(WW) Couldn't load XKB keymap, falling back to pre-XKB keymap</comment>
<comment>Se non si ha questo errore, la propria installazione di XKB funziona già.</comment>
# <i>grep Xkb /etc/X11/xorg.conf</i>
Option "XkbModel"  "logibik"
Option "XkbLayout"  "dvorak"
Option "XkbOptions" "ctrl:swapcaps"
<comment>Per prima cosa, guardare cos'è cambiato per la configurazione in uso, spostandosi nella directory symbols/pc .</comment>
# <i>cd /usr/share/X11/xkb/symbols/</i>
<comment>Se è stato installato xkbdata invece di xkeyboard-config, spostatrsi nella sottodirectory pc/ .</comment>
# <i>ls *dvorak*</i>
<comment>OK, non è stato mostrato nulla.</comment>
<comment>Molti delle vecchie configurazioni sono state spostate nelle mappe caratteri codificate per paese</comment>
# <i>ls *us*</i>
us
<comment>A questo punto controllare l'esistenza di una variante xkb_symbols chiamata dvorak.</comment>
# <i>grep xkb_symbols.*dvorak us</i>
xkb_symbols "dvorak" {
<comment>Ciò significa che in xorg.conf ci sarò bisogno di Option "XkbLayout" "us" e Option "XkbVariant" "dvorak".</comment>

<comment>Ma quando si proverà a testare questa configurazione con setxkbmap, si otterrà ancora un errore</comment>
# <i>setxkbmap -model logibik -layout us -variant dvorak-option "ctrl:swapcaps"</i>
<comment>Il modello potrebbe anche essere cambiato.</comment>
# <i>cd /usr/share/X11/xkb/rules/</i>
# <i>grep logibik xorg.lst</i>
<comment>Nessun output da questo comando, per cui questo modello non esiste più. Si può comunque provare con dei modelli simili.</comment>
# <i>grep logi* xorg.lst</i>
logiaccess      Logitech Access Keyboard
logicdit        Logitech Cordless Desktop iTouch
logicdp         Logitech Cordless Desktop Pro
logicdpa        Logitech Cordless Desktop Pro (alternate option)
logicdpa2       Logitech Cordless Desktop Pro (alternate option2)
logicdo         Logitech Cordless Desktop Optical
logicfn         Logitech Cordless Freedom/Desktop Navigator
logicdn         Logitech Cordless Desktop Navigator
logidak         Logitech Deluxe Access Keyboard
logiitc         Logitech iTouch Cordless Keyboard (model Y-RB6)
logiik          Logitech Internet Keyboard
logiitc         Logitech iTouch Cordless Keyboard (model Y-RB6)
logiik          Logitech Internet Keyboard
logiink         Logitech Internet Navigator Keyboard
logiultrax      Logitech Ultra-X Keyboard
<comment>Bene! Il modello "logiik" sembra abbastanza simile, perciò testarlo con setxkbmap.</comment>
# <i>setxkbmap -model logiik -layout us -variant dvorak -option "ctrl:swapcaps"</i>
<comment>Funziona correttamente, per cui impostare la voce XkbModel a quel valore.</comment>
<comment>Dopo di ciò, tutto dovrebbe funzionare correttamente</comment>
</pre>

</body>
</section>

<section>
<title>Altri problemi</title>
<body>

<ul>
  <li>
    Il pacchetto <c>x11-base/xorg-x11</c> ora filtra tutte le voci ModulePath e
    RgbPath contenute in <path>/etx/X11/xorg.conf</path>, poichè entrambi i
    percorsi sono cambiati dalla versione precedente. Assicurarsi di eseguire
    <c>etc-update</c> per applicare questi cambiamenti.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>