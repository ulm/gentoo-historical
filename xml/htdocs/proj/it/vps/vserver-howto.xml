<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/it/vps/vserver-howto.xml,v 1.2 2008/01/18 20:33:33 scen Exp $ -->

<guide link="/proj/it/vps/vserver-howto.xml" lang="it">
<title>Guida a Linux-VServer con Gentoo</title>

<author title="Autore">
  <mail link="hollow"/>
</author>
<author title="Redazione">
  <mail link="fox2mike"/>
</author>
<author title="Traduzione">
  <mail link="swit@autistici.org">Matteo Carli</mail>
</author>
<author title="Traduzione">
  <mail link="scen"/>
</author>

<abstract>
In questa guida si impara a installare un semplice server virtuale usando la
tecnologia Linux-VServer
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.10</version>
<date>2007-03-26</date>

<chapter>
<title>Introduzione</title>
<section>
<title>Il concetto di Linux-VServer</title>
<body>

<p>
Il concetto alla base del progetto Linux-VServer è di separare l'ambiente
user-space in distinte unità (a volte chiamate Virtual Private Server) in modo
che ogni VPS sembri e si comporti come un vero server con i processi in esso
contenuti.
</p>

</body>
</section>
<section>
<title>Termini utilizzati in questa Guida</title>
<body>

<table>
<tr>
  <th>Termine</th>
  <th>Descrizione</th>
</tr>
<tr>
  <th>Linux-VServer, VServer</th>
  <ti>
    Linux-VServer è il nome ufficiale del progetto ed è usato in questa Guida
    con il medesimo significato
  </ti>
</tr>
<tr>
  <th>virtual server, vserver, guest system</th>
  <ti>
    Tutti questi termini sono sinonimi e si riferiscono ad una istanza del
    server (ad esempio un virtual server)
  </ti>
</tr>
<tr>
  <th>host system, host</th>
  <ti>
    La macchina fisica che monta Gentoo Linux e che ospita tutti i virtual
    server
  </ti>
</tr>
<tr>
  <th>util-vserver</th>
  <ti>
    Il pacchetto <c>util-vserver</c> contiene tutti i programmi necessari per la
    manutenzione dei virtual server
  </ti>
</tr>
</table>

</body>
</section>
</chapter>

<chapter>
<title>Configurazione del sistema host</title>
<section>
<title>Installare un VServer kernel</title>
<body>

<pre caption="Installare vserver-sources">
# <i>emerge vserver-sources</i>
</pre>

<p>
Dopo aver installato vserver-sources è il momento di configurarlo usando <c>make
menuconfig</c>. Qui sotto viene presentata una configurazione tipica per le
versioni 2.1.1 e successive. Se si sta utilizzando la versione 2.0.x alcune
opzioni di configurazione potrebbero non essere presenti.
</p>

<pre caption="Configurare vserver-sources">
# <i>cd /usr/src/linux-&lt;VERSIONEKERNEL&gt;-vserver-&lt;VERSIONEVSERVER&gt;</i>
# <i>make menuconfig</i>

Linux VServer ---&gt;
<comment>(Non abilitare le opzioni legacy)</comment>
  [ ] Enable Legacy Kernel API
  [ ] Enable Legacy Networking Kernel API
<comment>(Leggere il testo d'aiuto)</comment>
  [ ] Remap Source IP Address
  [*] Enable COW Immutable Link Breaking
  [ ] Enable Virtualized Guest Time
  [*] Enable Proc Security
  [*] Enable Hard CPU Limits
  [*]   Avoid idle CPUs by skipping Time
  [*]   Limit the IDLE task
      Persistent Inode Context Tagging (UID24/GID24)  ---&gt;
  [ ] Tag NFSD User Auth and Files
  [*] Enable Inode Tag Propagation
  [*] Honor Privacy Aspects of Guests
  [ ] Compile Debugging Code
</pre>

<note>
Se si usa reiserfs come filesystem, si deve abilitare l'opzione per gli
attributi estesi di reiserfs nella configurazione del kernel e successivamente
aggiungere <c>attrs</c> nelle opzioni in <path>/etc/fstab</path>.
</note>

<pre caption="Configurare le opzioni per reiserfs">
File systems  --->
  &lt;*&gt; Reiserfs support
  [*]   ReiserFS extended attributes
</pre>

<pre caption="Esempio di fstab con gli attributi estesi attivi">
/dev/hdb1 /vservers reiserfs noatime,attrs 0 0
</pre>

<p>
Dopo che il kernel è stato compilato e installato, è necessario aggiornare il
bootloader ed infine controllare se il kernel riesce ad avviarsi correttamente.
</p>

<pre caption="Installare il kernel">
<comment>(Compilare il kernel)</comment>
# <i>make</i>
<comment>(Installarlo)</comment>
# <i>make modules_install</i>
# <i>cp arch/&lt;arch&gt;/boot/bzImage /boot/kernel-&lt;KERNELVERSION&gt;-vserver-&lt;VSERVERVERSION&gt;</i>
<comment>(Modificare la configurazione del boot loader come richiesto e successivamente riavviare:)</comment>
# <i>reboot</i>
</pre>

</body>
</section>
<section>
<title>Configurare l'ambiente ospitante</title>
<body>

<p>
Per la manutenzione del virtual server è necessario il pacchetto util-vserver il
quale contiene tutti gli applicativi necessari e molte funzioni utili.
</p>

<pre caption="Installare util-vserver">
# <i>emerge >=sys-cluster/util-vserver-0.30.212</i>
</pre>

<p>
Si deve eseguire il comando <c>vprocunhide</c> dopo ogni riavvio per impostare
correttamente i permessi in <path>/proc</path> per i guest di vserver. Due
script di init verranno installati da util-vserver i quali eseguiranno il
comando <c>vprocunhide</c> al posto dell'utente e prendendosi in carico la
gestione dei server virtuali durante lo spegnimento dell'host.
</p>

<pre caption="script di init di util-vserver">
# <i>rc-update add vprocunhide default</i>
# <i>/etc/init.d/vprocunhide start</i>
# <i>rc-update add util-vserver default</i>
# <i>/etc/init.d/util-vserver start</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Creazione di un guest</title>
<section>
<title>Scaricare uno stage3/4 precompilato</title>
<body>

<p>
Siccome molti comandi relativi all'hardware non sono disponibili all'interno di
un server virtuale, esiste una versione modificata di baselayout chiamata
baselayout-vserver. Tuttavia, a partire da baselayout-1.13.0_alpha12, tutte le
modifiche necessarie sono state integrate nella versione normale di baselayout,
eliminando il bisogno di stage, profili e baselayout vserver separati. L'unico
svantaggio (temporaneo) è che baselayout-1.13 è ancora considerato in uno stato
primitivo di sviluppo e non ci sono ancora stage con tale versione di baselayout
disponibili nei mirror.
</p>

<p>
Appena baselayout diverrà stabile si potrà utilizzare uno stage3/4 precompilato
prendendolo da uno dei <uri link="/main/en/mirrors.xml">mirror di Gentoo</uri>.
Nel frattempo scaricare uno stage3/4 da <uri
link="http://people.linux-vserver.org/~hollow/stages/">qui</uri>. Siccome uno
stage3/4 contiene un filesystem completo di root è possibile usare il metodo di
creazione da modello di util-server. Tuttavia, questo metodo funziona in modo
affidabile solamente da util-vserver-0.30.213_rc5, pertanto assicurarsi di avere
installata la giusta versione.
</p>

<p>
Si deve scegliere un "context ID" per il vserver (si sconsiglia di usare context
ID dinamici) nonché le informazioni necessarie sui dispositivi di rete (in
questo esempio eth0 è configurata con 192.168.1.253/24 e il "context ID" sarà
equivalente agli ultimi due ottetti dell'indirizzo IP del vserver).
</p>

<note>
Il context ID dovrebbe essere 1 &lt; ID &lt; 49152.
</note>

</body>
</section>
<section>
<title>Usare il metodo di creazione da modello</title>
<body>

<p>
Per diverso tempo lo stile di init semplice era l'unico stile di init
disponibile per Gentoo, per esempio un normale processo di init verrà avviato
all'interno del guest, similmente a qualsiasi sistema Unix generico. Tuttavia
questo approccio ha alcune controindicazioni:
</p>

<ul>
<li>Nessuna possibilità di vedere l'output degli script di init/rc</li>
<li>Spreco di risorse per i processi di init inattivi in ciascun guest</li>
<li>Conflitti fastidiosi per <path>/etc/inittab</path></li>
</ul>

<p>
Perciò molti utenti hanno richiesto la re-implementazione dello stile init di
gentoo, che era stato abbandonato in quanto era un'implementazione molto sporca
e funzionava saltuariamente a causa di altre modifiche introdotte in baselayout
da allora. Tuttavia, da util-vserver-0.30.212 lo stile init di gentoo è stato
reintrodotto in maniera concisa e diverrà l'impostazione predefinita in futuro.
</p>

<note>
Se non c'è nessun valido motivo per usare un processo di init aggiuntivo per
ciascun guest o non si sa cosa fare in questo caso, è consigliabile optare per
lo stile init di gentoo.
</note>

<pre caption="Inizio installazione dello stage3">
# <i>vserver myguest build \</i>
  <i>--context 1253 \</i>
  <i>--hostname gentoo \</i>
  <i>--interface eth0:192.168.1.253/24 \</i>
  <i>--initstyle gentoo \</i> <comment>(sostituire se necessario)</comment>
  <i>-m template -- \</i>
  <i>  -d gentoo \</i>
  <i>  -t /path/to/stage4-&lt;arch&gt;-&lt;version&gt;.tar.bz2</i>
</pre>

<note>
Per rendere effettive le configurazioni di rete si deve modificare:
<path>/etc/conf.d/hostname</path>, <path>/etc/conf.d/domainname</path> e
<path>/etc/hosts</path> all'interno del guest system . Vedere il <uri
link="/doc/it/handbook/handbook-x86.xml?part=1&amp;chap=8#doc_chap2_sect1">
capitolo 8.b.1</uri> e il <uri
link="/doc/it/handbook/handbook-x86.xml?part=1&amp;chap=8#doc_chap2_sect4">
capitolo 8.b.4</uri>. Il resto delle configurazioni del vserver saranno fatte
sul sistema host.
</note>

<p>
Ora dovrebbe essere possibile avviare ed accedere al vserver usando i comandi
seguenti.
</p>

<pre caption="Testare il virtual server">
# <i>vserver myguest start</i>


Gentoo/Linux 1.13.0_alpha12; http://www.gentoo.org/
 Copyright 1999-2007 Gentoo Foundation; Distributed under the GPLv2

Press I to enter interactive boot mode

 * Using existing device nodes in /dev                    [ ok ]
 * root filesystem is mounted read-write - skipping
 * Checking all filesystems                               [ ok ]
 * Mounting local filesystems                             [ ok ]
 * Activating (possible) swap                             [ ok ]
 * Setting hostname to myguest                            [ ok ]
 * Updating environment                                   [ ok ]
 * Cleaning /var/lock, /var/run                           [ ok ]
 * Cleaning /tmp directory                                [ ok ]
 * Initializing random number generator                   [ ok ]
 * Setting system clock using the hardware clock [VPS]    [ ok ]
 * Starting syslog-ng                                     [ ok ]
 * Starting vixie-cron                                    [ ok ]
 * Starting local                                         [ ok ]
# <i>vserver-stat</i>
CTX   PROC    VSZ    RSS  userTIME   sysTIME    UPTIME NAME
0       90   1.4G 153.4K  14m00s11   6m45s17   2h59m59 root server
1252     2     3M   286    0m00s45   0m00s42   0m02s91 myguest
# <i>vserver myguest enter</i>
# <i>ps ax</i>
PID   TTY      STAT   TIME COMMAND
    1 ?        S      0:00 init [3]
22887 ?        Ss     0:00 /usr/sbin/syslog-ng
20496 pts/0    S      0:00 /bin/bash -login
20508 pts/0    R+     0:00 ps ax
# <i>logout</i>
</pre>

</body>
</section>
</chapter>


<chapter>
<title>Manutenzione semplificata</title>
<section>
<title>Avviare i sistemi guest al boot</title>
<body>

<p>
Si possono avviare, in modo sicuro, i sistemi guest al boot del sistema host. È
possibile specificare per ogni sistema guest un contrassegno chiamato MARK.
Adesso tutto quello che c'è da fare è assegnare un MARK ad ogni sistema guest
tramite la propria configurazione e aggiungere gli script di init appropriati al
runlevel default.
</p>

<pre caption="Configurazione dei MARK per ogni sistema guest">
<comment>(Ripetere questi comandi per ogni sistema guest da contrassegnare)</comment>
# <i>mkdir -p /etc/vservers/myguest/apps/init</i>
# <i>echo "default" > /etc/vservers/myguest/apps/init/mark</i>
</pre>

<pre caption="Aggiungere uno script di init al runlevel default">
 # <i>rc-update add vservers.default default</i>
 </pre>

</body>
</section>
<section>
<title>Sincronizzare portage</title>
<body>

<p>
Lo script <c>vesync</c> aiuterà a tenere sincronizzati la cache dei metadata con
gli overlay. <c>vemerge</c> permette di usare emerge con i sistemi guest.
</p>

<pre caption="Esempi">
<comment>(Sincronizzazione dei metadata per 'myguest')</comment>
# <i>vesync myguest</i>
<comment>(Sincronizzazione dei metadata per tutti i guest)</comment>
# <i>vesync -all</i>
<comment>(Sincronizzazione di 'myoverlay' per tutti i guest)</comment>
# <i>vesync -all \</i>
  <i>--overlay /usr/local/overlays/myoverlay \</i>
  <i>--overlay-host rsync://rsync.myhost.com/myoverlay \</i>
  <i>--overlay-only</i>
<comment>(Installazione di app-editors/vim in 'myguest')</comment>
# <i>vemerge myguest app-editors/vim -va</i>
</pre>

</body>
</section>
<section>
<title>Aggiornamento dei sistemi guest</title>
<body>

<p>
I sistemi guest, su Gentoo, possono condividere i pacchetti per evitare lunghi
tempi di compilazione. Per poter utilizzare la condivisione dei pacchetti è
necessario creare una cartella per centralizzare il salvataggio dei pacchetti
sul sistema host. Usare <path>/var/cache/vpackages</path> sul sistema host,
montandola in <path>/usr/portage/packages</path> per ogni sistema guest.
</p>

<pre caption="Aggiungere l'opzione bind per il mount">
# <i>mkdir -p /var/cache/vpackages</i>
# <i>$EDITOR /etc/vservers/myguest/fstab</i>
<comment>(Aggiungere questa linea alla fine del file)</comment>
/var/cache/vpackages /usr/portage/packages none bind,rw 0 0
</pre>

<p>
Adesso si può utilizzare <c>vupdateworld</c> per aggiornare tutti i sistemi
guest. Il comando è equivalente a qualcosa tipo <c>emerge --deep --update
--newuse world</c> ma dipende dalle opzioni passate da riga di comando.
</p>

<pre caption="esempi con vupdateworld">
<comment>(Simulare l'aggiornamento per 'myguest')</comment>
# <i>vupdateworld myguest -- -vp</i>
<comment>(Aggiornamento di 'myguest' usando i pacchetti binari)</comment>
# <i>vupdateworld myguest -- -k</i>
<comment>(Aggiornamento di tutti i sistemi guest usando i pacchetti binari)</comment>
# <i>vupdateworld -all -- -ka</i>
</pre>

<note>
Per poter ottenere pacchetti binari è necessario utilizzare PORTAGE_BINHOST
(vedere <c>man make.conf</c>) oppure impostare FEATURES="buildpkg" in uno o più
sistemi guest.
</note>

<p>
Dopo aver aggiornato con successo i sistemi guest è possibile aggiornare con
semplicità i file di configurazione con <c>vdispatch-conf</c>. Questo script
permette di usare <c>dispatch-conf</c> con i sistemi guest ereditandone le
caratteristiche.
</p>

<pre caption="esempi con vdispatch-conf">
<comment>(Aggiornare i file di configurazione di 'myguest')</comment>
# <i>vdispatch-conf myguest</i>
<comment>(Aggiornare i file di configurazione di tutti i guest system)</comment>
# <i>vdispatch-conf -all</i>
</pre>

</body>
</section>
<section>
<title>Contatti</title>
<body>

<p>
Si può contattare <mail link="hollow@gentoo.org">l'autore</mail> o aprire un
bug su <uri link="http://bugs.gentoo.org">Bugzilla</uri> in caso di problemi.
</p>

</body>
</section>
</chapter>
</guide>
