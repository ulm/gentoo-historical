<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/it/hardened/pax-quickstart.xml,v 1.1 2007/08/02 13:52:01 scen Exp $ -->

<guide link="/proj/it/hardened/pax-quickstart.xml" lang="it">
<title>Guida rapida per PaX su Gentoo Hardened</title>

<author title="Autore">
  <mail link="tseng@gentoo.org">Brandon Hale</mail>
</author>
<author title="Redazione">
  <mail link="blackace@gentoo.org">Blackace</mail>
</author>
<author title="Redazione">
  <mail link="solar@gentoo.org">solar</mail>
</author>
<author title="Traduzione">
  <mail link="liuju86@gmail.com">Ju Liu</mail>
</author>

<abstract>
Una guida veloce a PaX e a Gentoo Hardened.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->
<license/>

<version>1.3</version>
<date>2005-07-11</date>

<chapter>
<title>Che cos'è Gentoo Hardened?</title>
<section>
<body>

<p>
Gentoo Hardened è un progetto il cui scopo è rendere più sicuro un sistema
Gentoo. Sono supportate varie soluzioni differenti e presenta una buona dose di
flessibilità per personalizzare la propria installazione. Il cuore di una
normale installazione di Gentoo Hardened è <e>PaX</e>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Che cos'è PaX?</title>
<section>
<body>

<p>
PaX è una patch per il kernel Linux che aumenta la sicurezza in due modi.
</p>

<p>
Il primo, <e>ASKR</e> (Address Space Layout Randomization), consente di rendere
casuale lo schema di indirizzamento di tutti i dati caricati nella memoria.
Quando una applicazione è compilata come <e>PIE</e> (Position Independent
Executable), PaX è in grado inoltre di rendere casuale anche gli indirizzi
della base dell'applicazione.
</p>

<p>
La seconda protezione fornita da PaX è la memoria non eseguibile. Questo
previene una forma di attacco piuttosto comune in cui un attaccante inserisce
codice eseguibile nella memoria. Si possono trovare altre informazioni su
PaX in questa guida, ma la homepage del progetto è
<uri>http://pax.grsecurity.net</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Introduzione a PIE e a SSP</title>
<section>
<body>

<p>
Come si è accennato in precedenza, il complemento di PaX è PIE. Questa tecnica
per compilare applicazioni salva le informazione necessarie a spostare parti
dell'eseguibile nella memoria, da cui il nome <e>Position Independent</e>.
</p>

<p>
<e>SSP</e> (Stack Smashing Protector) è la seconda tecnologia complementare che
è introdotta in fase di compilazione dell'eseguibile. SSP fu originariamente
introdotto dalla IBM sotto il nome <e>ProPolice</e>. Esso modifica il
compilatore C per inserire codice di inizializzazione nelle funzioni che creano
un buffer nella memoria.
</p>

<note>
Nelle nuove versioni di SSP, è possibile applicare SSP a tutte le funzioni
aggiungendo una protezione alle funzioni i cui buffer normalmente avrebbero una
dimensione inferiore al limite imposto da SSP. Questo si può abilitare
attraverso la CFLAG -fstack-protector-all.
</note>

<p>
In fase di esecuzione, quando un buffer viene creato, SSP aggiunge un valore
casuale segreto, il canary, alla fine del buffer. Quando la funzione effettua il
return, SSP si accerta che il canary sia ancora intatto. Se un attaccante
volesse attuare un buffer overflow, sovrascriverebbe questo valore e farebbe
scattare lo stack smashing handler. Attualmente questo uccide il processo.
</p>

<p>
<uri link="http://www.trl.ibm.com/projects/security/ssp/">Ulteriori
informazioni su SSP.</uri>
</p>

</body>
</section>
</chapter>

<chapter>
<title>Compilare un kernel con PaX abilitato</title>
<section>
<body>

<p>
Diversi sorgenti dei kernel di Gentoo sono già modificati con PaX.
</p>

<p>
Per i sistemi 2.4/2.6, i kernel consigliati sono gli <c>hardened-sources</c>.
</p>

<p>
Si deve scegliere uno dei sorgenti consigliati oppure applicare la patch
corretta da <uri>http://pax.grsecurity.net</uri> al proprio alberto e
configurarlo come si farebbe normalmente per il proprio sistema.
</p>

<p>
In <c>Security Options -&gt; PaX</c>, attivare le seguenti opzioni.
</p>

<pre caption="Configurazione Kernel">
[*] Enable various PaX features

PaX Control -&gt;

 [ ] Support soft mode
 [*] Use legacy ELF header marking
 [*] Use ELF program header marking
     MAC system integration (none)  ---&gt;

Non-executable page -&gt;

 [*] Enforce non-executable pages
 [*]   Paging based non-executable pages
 [*]   Segmentation based non-executable pages
 [*] Emulate trampolines
 [*] Restrict mprotect()
 [ ]   Disallow ELF text relocations

Address Space Layout Randomization -&gt;

 [*] Address Space Layout Randomization
 [*]   Randomize kernel stack base
 [*]   Randomize user stack base
 [*]   Randomize mmap() base
 [*]     Randomize ET_EXEC base
</pre>

<p>
Si deve compilare questo kernel come si farebbe normalmente e installarlo in
<path>/boot</path>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Compilare un ambiente utente con PIE/SSP abilitato</title>
<section>
<body>

<p>
Gentoo Hardened supporta la compilazione PIE/SSP trasparente tramite lo specfile
di GCC. Questo implica che ogni utente che stia aggiornando una installazione
Hardened precedente debba rimuovere le LDFLAGS e le CFLAGS utilizzate per
attivare PIE/SSP. Inoltre, <c>hardened-gcc</c> è ora deprecato e si dovrebbe
rimuovere (la versione 5.0 è un pacchetto dummy). Per ottenere la versione
aggiornata di GCC, è necessario aggiungere <c>USE="hardened pic"</c> sa
<path>/etc/make.conf</path> se non si sta utilizzando il profilo hardened.
</p>

<p>
Per mantenere una toolchain corretta, prima è necessario un <c>emerge binutils
gcc virtual/libc</c>. In seguito, occorre ricompilare l'intero sistema con
<c>emerge -e world</c>. Tutti i pacchetti futuri saranno compilati con PIE/SSP.
</p>

<warn>
È noto che sia PIE che SSP possano provocare incompatibilità con qualche
pacchetto. Se si incontra un pacchetto la cui compilazione fallisce, si prega
di segnalare a <uri>http://bugs.gentoo.org/</uri> un bug report dettagliato che
includa un log della compilazione fallita e l'output di <c>emerge info</c>.
</warn>

<p>
Probabilmente è utile installare pax-utils. Spesso se un ELF presenta
spostamenti dell'eseguibile nel segmento di testo, questi possono causare
problemi. scanelf -BRylptq
</p>

</body>
</section>
</chapter>

<chapter>
<title>Quando le cose non funzionano correttamente (Controllo di PaX)</title>
<section>
<body>

<p>
Alcune applicazioni legittime proveranno a generare in fase di esecuzione codice
che viene eseguito al di fuori della memoria. Naturalmente, PaX non lo consente
e terminerà immediatamente l'applicazione.
</p>

<note>
Le applicazioni di questo tipo più comuni sono XFree/Xorg, mplayer e strumenti
multimediali che si basano sulle xine-lib. La soluzione più semplice a questi
problemi consiste nel disabilitare le protezioni PaX.
</note>

<p>
Fortunatamente esiste una utilità per abilitare le protezioni a seconda
dell'applicazione, <e>paxctl</e>. Come per ogni altro pacchetto Gentoo, si può
installare paxctl con il comando <c>emerge paxctl</c>. Le informazioni
sull'utilizzo di paxctl si possono vedere con <c>paxctl -h</c>.
</p>

<note>
Se si dispone di una vecchia versione di binutils, è necessario usare
<e>chpax</e>, che modifica le configurazioni precedenti di PaX. Si può usare
chpax quasi allo stesso modo di paxctl. Questo richiede che nel proprio kernel
sia built-in il supporto legacy marking. Versioni recenti di paxctl rendono
chpax obsoleto.
</note>

<pre caption="paxctl -h">
usage: paxctl &lt;options&gt; &lt;files&gt;

options:
        -p: disable PAGEEXEC            -P: enable PAGEEXEC
        -e: disable EMUTRMAP            -E: enable EMUTRMAP
        -m: disable MPROTECT            -M: enable MPROTECT
        -r: disable RANDMMAP            -R: enable RANDMMAP
        -x: disable RANDEXEC            -X: enable RANDEXEC
        -s: disable SEGMEXEC            -S: enable SEGMEXEC

        -v: view flags                  -z: restore default flags
        -q: suppress error messages     -Q: report flags in short format flags
</pre>

<p>
La prima opzione che si nota è <c>-v</c>, che può visualizzare le flag impostate
su un binario specifico.
</p>

<pre caption="paxctl -v">
shell user # paxctl -v /usr/bin/Xorg
PaX control v0.2
Copyright 2004 PaX Team &lt;pageexec@freemail.hu&gt;

- PaX flags: -p-sM--x-eR- [/usr/bin/Xorg]
        PAGEEXEC is disabled
        SEGMEXEC is disabled
        MPROTECT is enabled
        RANDEXEC is disabled
        EMUTRAMP is disabled
        RANDMMAP is enabled
</pre>

<p>
Questo mostra un binario XFree con tutte le protezioni disabilitate.
</p>

<p>
Per impostaere le flag su un binario, la flag <c>-z</c> è utile in quanto
riporta le flag alla configurazione iniziale.
</p>

<p>
Per disabilitare le protezioni su Xorg, si deve eseguire il comando <c>paxctl
-zpeMRxs /usr/bin/Xorg</c>.
</p>

<p>
Si può giocaread abilitare e disabilitare le protezioni per vedere le richieste
minime necessarie per far funzionare il sistema. Spesso si scoprirà che servirà
la combinazione -m -sp.
</p>

<p>
Uno script init/conf.d predefinito, che viene installato quando si installa il
pacchetto chpax, configura alcune impostazioni sensate sulle applicazioni note
per causare comportamenti non voluti. Se si vuole abilitare l'utilizzo di queste
impostazioni ad ogni avvio è necessario eseguire il seguente comando <c>emerge
chpax ; rc-update add chpax default ; /etc/init.d/chpax start</c>
</p>

</body>
</section>
</chapter>
</guide>