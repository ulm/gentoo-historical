<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<sections>

<date>2004-11-22</date>

<section>
<title>Introduzione</title>
<body>

<p>
Questa sezione ha lo scopo di spiegare la gerarchia dello sviluppo di Gentoo e dare agli sviluppatori una visione su come è strutturata la gestione dello sviluppo di Gento Linux.
</p>

</body>
</section>

<section>
<title>Il livello più alto della struttura della gestione</title>
<body>

<p>
Lo scopo della nuova gestione della struttura era quello di risolvere la gestione cronica, le questioni di coordinazione e comunicazione nei progetti di Gentoo Linux. In particolare, non avevamo chiaramente definito un livello alto della struttura dela gestione, e non c'erano incontri ufficiali e regolati per la comunicazione degli stati degli aggiornamenti tra i diversi sviluppatori che operano in ruoli critici. In generale, la maggior parte della comunicazione prende piede in IRC e irregolarmente via email. C'erano anche pochi responsabili, anche ad alto livello, per completare i progetti in tempo.
</p>

<p>
A causa di questo precedente stato, era difficile impostare degli obiettivi e controllare gli stati dei progetti. Questa mancanza della comunicazione e coordinazione rendeva difficile anche la gestione dei propri progetti degli sviluppatori di alto livello. In più, avevamo altri problemi cronici a causa della scarsa definizione di ruoli e scopi delle autorità di sviluppatori di alto livello, che risultavano in livelli troppo alti da dubitare se avevano anche l'autorità di gestire i propri progetti e sotto progetti. Siccome questo non è *mai* stata l'intenzione degli sviluppatori di alto livello, questo è stato il risultato sfortunato di un processo di sviluppo non strutturato: nessuno conosceva quello che stava succedendo, e tutti scaricavano tutte le decisione esecutive al capo dell'architettura.
</p>

<p>
Chiaramente era necessario un piano per cambiare e indirizzare permanentemente questi scopi incrementando la comunicazione, la coordinazione e le responsabilità. I ruoli e gli scopi delle decisioni esecutive delle autorità necessitano di essere definite per gli sviluppatori alti in modo che essi abbiano mandati chiari e le necessarie responsabilità per gestire i loro progetti e per assicurare che i progetti siano completati in tempo debito e schedulato.
</p>

<p>
Le seguenti liste delineano il sistema:
</p>

<ul>
  <li><b>Guida del livello più alto</b>: decide a riguardo degli scopi del progetto</li>
  <li><b>Guida del sotto progetto</b>: correla gli scopi del progetto con i teams</li>
  <li><b>Guida del team</b>: è il capo del proprio team e assicura la produttività</li>
  <li><b>Sviluppatore</b>: sviluppa e migliora Gentoo Linux!</li>
</ul>

</body>
</section>

<section>
<title>Guida del livello più alto e del sotto progetto</title>
<body>

<p>
La guida del livello più alto lavora per guidare i maggiori aspetti dello sviluppo come la coordinazione delle release ed è anche responsabile di delineare la direzione che devono prendere gli scopi dello sviluppo e come Gentoo deve migliorare usando i commenti degli utenti e degli sviluppatori.
</p>

<p>
I capi dei sotto progetti sono responsabili della coordinazione dei desideri della guida del livello più alto e della comunità di Gentoo: per esempio, le nuove linee guida per l'archittettura x86 dovrebbero migliorare il sistema base del gruppo e anche il cuore del gruppo che dovrebbe essere più coordinato da una guida di sotto progetto.
</p>

<p>
Le guide dei sotto progetti sono opzionali, così come le guide ad alto livello: in ogni caso, nella maggioranza delle circostanze i nostri team lavorano usualmente sotto le raccomandazioni della guida dell'architettura.
</p>
</body>
</section>

<section>
<title>Guide del team</title>
<body>
<p>
Le guide dei team sono responsabili di organizzare lo sviluppo nel proprio team e coordinare le release e anche risolvere le questioni interne del team, così come migliorare i prodotti sulla base dei feedback della comunità.
</p>

<p>
I teams non sono obbligati ad avere una guida, e alcuni team spesso lavorano solo al momento del bisogno e questa è forse la miglior soluzione in certe circostanze piuttosto che avere una guida del team. In ogni caso questa è una decisione che deve prendere il team.
</p>

<p>
La maggior parte dei teams sono parte di un branco, il quale ha lo scopo di organizzare gli scopi degli sviluppatori. Per favore, guarda il progetto Metadata per maggiori dettagli.
</p>

</body>
</section>

<section>
<title>Sviluppatori</title>
<body>

<p>
Gli sviluppatori sono responsabili dello sviluppo della distribuzione e lavorano ai proprio progetti. ALcuni sviluppatori possono far parte di un team, altri invece possono lavorare ad un progetto che non fa parte di nessun team o branco.
</p>

<p>
Se uno sviluppatore ha qualsiasi domanda, deve parlare con la propria guida del team, guida di alto livello o alternativamente può mandare una mail alla mailing list di gentoo-dev o gentoo-core con le richieste di consiglio o i commenti.
</p>

</body>
</section>

<!-- FIXME TODO...

<section>
<title>Decision making</title>
<body>
<p>
Currently, GLEPs (Gentoo Linux Enhancement Proposals) can be approved
or rejected by the appropriate top-level manager under which the GLEP
falls. If there is no clearly-defined manager under which the GLEP
falls, the GLEP will be voted upon by the Managers and Chief
Architect, and must be approved unanimously. In all cases, a public,
written explanation must be provided detailing why the GLEP was
approved or rejected, either by the manager who approved/rejected it,
or the head of the GLEP sub-project (Grant Goodyear) if the GLEP was
voted upon by the management team. This summary is meant to reflect
the decision that was made by some of the managers at an early manager
meeting.
</p>

<p>
Currently, there is no formal general voting procedure in place. In
the interim, any item to be voted upon must be approved by "votable"
by the Chief Architect. Before voting takes place, all managers must
have an opportunity to present their ideas before the other managers,
with the general originator(s) of the idea having the opportunity to
present first. After that, the Chief Architect and Managers can
present their ideas, with the Chief Architect having the opportunity
to present last. After this has happened, voting can take place, and
the item will be approved on an unanimous vote. Managers or the Chief
Architect can choose to abstain from voting, and the vote can still
pass with abstainers as long as at least 50% of the members have
voted. The voting must take place at an official managers
meeting. Non-attending managers are allowed to vote via email. The
vote must be officially tallied and posted to the managers list.
</p>

<p>
The reason for the "Chief Architect approval" clause it to prevent the
voting process from being abused by allowing voting items that make no
sense, such as those that begin with a "Should we continue to," where
a "nay" result would result in a change in existing policy, as well as
preventing managers for requesting that every small decision be voted
upon. We currently have no clear policy to determine what is a
"votable" item, and without this policy there needs to be some method
to determine what is "votable" and what affects some immutable part of
Gentoo.
</p>

<p>
This section is subject to additional clarification and refinement in
the future, as is the rest of this document. The purpose of this
section is to document our currently-existing procedures rather than
define ideal or "final" procedures.
</p>
</body>
</section>
-->

</sections>
