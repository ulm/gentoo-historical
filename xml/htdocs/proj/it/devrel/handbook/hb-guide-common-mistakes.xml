<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- This document was last synched to:
     cvs://gentoo/gentoo/xml/htdocs/doc/en/ebuild-mistakes.xml :: R1.4.
-->

<sections>
<section>
<title>Errori comuni nella scrittura di ebuild</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Qui c'è una lista di errori comuni fatti trovati negli ebuild fatti dagli
utenti. Per favore assicurati che l'ebuild di cui vuoi fare il submit non ne
contiene uno di questi. Prima di fare il submit di un qualsiasi ebuild,
asscurati di avere letto <uri link="?part=3&amp;chap=1">Ebuild policy</uri> e
<uri link="?part=2&amp;chap=1">Ebuild HOWTO</uri>. Assicurati anche di avere
letto un pò (esempio: più di uno o due) di ebuild del tree per essere sicuro
di conoscere lo stile con cui sono scritti.</p>


<p>
Può essere anche utile leggere un pò di ebuild che usano eclasses e capire
come usarle leggendo <uri link="?part=2&amp;chap=2">Eclass HOWTO</uri>. Per
finire, devi leggere attentamente <uri
link="/doc/en/ebuild-submit.xml">Contributing Ebuilds Guide</uri> prima di
fare il submit del/dei tuo/i ebuild(s).
</p>

</body>
</subsection>
<subsection>
<title>Header mancanti/non validi/corrotti</title>
<body>

<p>
Quando fai il submit di un ebuild, l'header deve essere <e>esattamente</e> lo
stesso come quello in <path>/usr/portage/skel.ebuild</path>. La cosa più
importante, è di non modificarlo in nessun modo e di assicurarti che la linea
<c>&#36;Header: &#36;</c> è intatta.
</p>

<p>
Le prime tre linee <e>devono</e> apparire come queste:
</p>

<pre caption="Valid Header">
# Copyright 1999-2004 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# &#36;Header: &#36;
</pre>

<p>
Solo se stai facendo il submit di un ebuild patchato o di un aumento di
versione di un ebuild, non necessiti di modificare la linea <c>&#36;Header:
&#36;</c>. Ma la linea deve essere comunque presente. Quando controlliamo
l'ebuild presente sul CVS, verrà modificato questo header con l'appropriata
versione e informazioni sulla data. In questo modo non è necessario per te di
modificarlo manualmente.
</p>

</body>
</subsection>
<subsection>
<title>Mancanza di IUSE</title>
<body>

<p>
Da sempre la mancanza più comune è la variabile IUSE. Devi (come spiega <uri
link="?part=2&amp;chap=1">Gentoo ebuild HOWTO</uri>) includere la variabile
IUSE anche se non ci sono USE flag in uso. Se non ci sono USE flag
supportate, allora aggiungi quanto segue:
</p>

<pre caption="Empty IUSE">
IUSE=""
</pre>

</body>
</subsection>
<subsection>
<title>P, PV, PN e PF ridefiniti</title>
<body>

<p>
Non devi mai ridefinire queste variabili. Usa sempre MY_P, MY_PN, MY_PV,P0,
etc. Per maggiori informazioni guarda altri ebuilds che fanno questo nel
portage. Per favore leggi le pagine man della bash per capire come lavorano i
"Parametri di espansione".
</p>

<p>
Se trovi un pacchetto che le ridefinisce, non copiarlo. Fai un submit del bug
di questo ebuild.
</p>

</body>
</subsection>
<subsection>
<title>Including version numbers in SRC_URI and S</title>
<body>

<p>
Devi provare a non includere il numero della versione in SRC_USI e S. Prova
sempre ad usare ${PV} o ${P}. Questo rende il mantenimento dell'ebuild più
semplice. Se un numero di versione non è consistente con il tarball/sorgente,
allora usa MY_P. Un esempio è dev-python/pyopenal che va a prendere un
tarball chiamato PyOpenAL, così lo ridefiniamo come:
</p>

<pre caption="Esempio ridefinizione di versione">
MY_P=${P/pyopenal/PyOpenAL}
SRC_URI="http://oomadness.tuxfamily.org/downloads/${MY_P}.tar.gz"
S=${WORKDIR}/${MY_P}
</pre>

</body>
</subsection>
<subsection>
<title>DEPEND ha errori sintattici</title>
<body>

<p>
Ci sono molte cose che vanno male con DEPEND e RDEPEND fatti dagli utenti.
Qui ci sono i punti più importanti quando scrivi la parte delle dipendenze.
</p>

<ul>
  <li>
		<e>Includi sempre la CATEGORY.</e><br /> Per esempio, usa
		<c>&gt;=x11-libs/gtk+-2</c> e non <c>&gt;=gtk+-2</c>.
  </li>
  <li>
		<e>Non mettere nessun asterisco (*) per &gt;= dependencies.</e><br /> Per
		esempio, deve essere <c>&gt;=x11-libs/gtk+-2</c> piuttosto che
		<c>&gt;=x11-libs/gtk+-2*</c>.
  </li>
  <li><e>Specifiche GTK. Usa sempre =x11-libs/gtk+-1.2* per applicazioni GTK+1.</e></li>
  <li>
		<e>Mai dipendere da un pacchetto meta.</e><br /> Così non dipendere da
		gnome-base/gnome, dipendere sempre dalla specifica libreria come
		libgnome.
  </li>
  <li>
		<e>Una dipendenza per linea.</e><br /> Non mettere dipendenze multiple
		sulla stessa linea. Questo è brutto da leggere e difficile da seguire.
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>DEPEND è incompleto</title>
<body>

<p>
QUesto è un altro errore molto comune. Viene fatto il submit di un ebuild che
"funziona" senza controllare se le dipendenze sono corrette. Qui ci sono
alcuni trucchi per come trovare le dipendenze corrette.
</p>

<ul>
  <li>
		<e>Guarda in configure.in o configure.ac</e><br /> Guarda per come
		controllare il pacchetto qui. Le cose da controllare sono pkg-config o le
		funzioni AM_* che controllano le versioni specifiche.
  </li>
  <li>
		<e>Guarda i files .spec inclusi</e><br /> Una buona indicazione delle
		dipendenze si può avere guardando i files .spec inclusi per le dipendeze
		rilevanti. Comunque, non prendere queste come la lista completa delle
		dipendeze.
	</li>
  <li>
		<e>Guarda il sito web dell'applicazione/libreria</e><br /> Controlla il
		sito web dell'applicazione per le possibili dipendenze che vengono
		indicate come necessarie.
  </li>
  <li>
		<e>Leggi il README e l'INSTALL del pacchetto</e><br /> Essi contengono
		normalmente anche informaazioni utili riguardo la compilazione
		el'installazione dei pacchetti.
  </li>
  <li>
		<e>Ricordati le dipendeze non binarie come pkg-config, programmi per la
		generazione della doc, ecc.</e><br /> Generalmente il processo
		dell'ebuild richiede alcune dipendeze come intltool, libtool, pkg-config,
		doxygen, scrollkeeper, gtk-doc, ecc. Assicurati che queste sono
		chiaramente menzionate.
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Invalida LICENSE</title>
<body>

<p>
Un altro errore comune degli utenti quando fanno il submit degli ebuild è la
fornitura di una licenza invalida. Per esempio, <c>GPL</c> non è una licenza
valida. Devi specificare <c>GPL-1</c> o <c>GPL-2</c>. Stessa cosa con
<c>LGPL</c>. Assicurati che la licenza in uso nel campo <c>LICENSE</c> sia
qualcosa che esiste in <path>/usr/portage/licenses</path>. Come trucco,
controlla <path>COPYING</path> in un tarball sorgente per la licenza. Se un
pacchetto non specifica una licenza, usa <c>GPL-1</c> o <c>GPL-2</c>, è molto
probabile che sia <c>GPL-2</c>.
</p>

<p>
Se la licenza per il pacchetto di cui fai il submit è unica e non in
<path>/usr/portage/licenses/</path>, allora devi fare il submit della nuova
licenza in un file separato.
</p>

</body>
</subsection>
<subsection>
<title>ARCHs non testate in KEYWORDS</title>
<body>

<p>
Per favore non aggiungere ARCHs in KEYWORDS a meno che l'ebuild è stato
testato su questa ARCH. Inoltre tutti i nuovi ebuild devono essere ~x86 o
qualsiasi sia la sua arichitettura.  Assicurati quando rilasci una nuova
versione, che le KEYWORDS stabili siano marcate come <c>~</c>.
</p>

</body>
</subsection>
<subsection>
<title>SLOT mancante</title>
<body>

<p>
Assicurati di avere la variabile SLOT nell'ebuild. Se non pianifichi di
usarla, non rimuoverla. Metti:
</p>

<pre caption="Variabile SLOT di default">
SLOT="0"
</pre>

</body>
</subsection>
<subsection>
<title>DESCRIPTION e HOMEPAGE scorrette</title>
<body>

<p>
Per favore controlla se la variabile HOMEPAGE è corretta e invia gli utenti
alla corretta pagina se vogliono trovare maggiori informazioni riguardo il
pacchetto. Assicurati anche che DESCRIPTION non è troppo lunga. Una buona
descrizione descriverà la funzione principale del pacchetto in una sola
frase.
</p>

</body>
</subsection>
<subsection>
<title>Uso scorretto di spazi piuttosto che TABS</title>
<body>

<p>
Non è divertente riformattare le linee degli ebuild perchè chi ha fatto il
submit non ha seguito le linee guida sull'uso del TABS piuttosto che gli
spazi. Quindi <e>per favore</e> usa i tabs!
</p>

</body>
</subsection>
<subsection>
<title>Spazi bianchi tralasciati</title>
<body>

<p>
Sono spesso colpevole di questo. Ricordati di eseguire repoman sul tuo ebuild
così ti può dire se ci sono degli spazi bianchi tralasciati alla fine delle
linee o nelle linee vuote.
</p>

</body>
</subsection>
<subsection>
<title>Aggiunta di S=${WORKDIR}/${P} ridontanti</title>
<body>

<p>
Se <c>S=${WORKDIR}/${P}</c>, allora non devi aggiungere esso all'ebuild.
Questo è così implicitamente, devi solo aggiungerlo se è qualcosa d'altro
diverso da <c>${WORKDIR}/${P}</c>.
</p>

</body>
</subsection>
<subsection>
<title>Documentazione mancante</title>
<body>

<p>
Se il tuo pacchetto ha documentazione, assicurati di installarla utilizzando
<c>dodoc</c> o in <path>/usr/share/doc/${PF}</path>. Ricordati di controllare
errori quado esegui <c>dodoc</c>/<c>doins</c>.
</p>

</body>
</subsection>
</section>

<section>
<title>Errori comuni durante il submit degli ebuild</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Per favore fai il submit di ebuild correttamente seguendo la guida <uri
link="/doc/it/ebuild-submit.xml">Contribuire agli ebuild</uri> su <uri
link="/doc/it/index.xml">Documentazione Gentoo Linux</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Creazione di tarball e ebuild</title>
<body>

<p>
Per favore, per favore, per favore non allegare ebuilds come tarballs.
Allegali separatamente in modo da poterli esaminare semplicemente.
</p>

</body>
</subsection>
<subsection>
<title>Ebuilds in linea</title>
<body>

<p>
Non fare copia incolla degli ebuild nei campi per i commenti di bugzilla.
</p>

</body>
</subsection>
<subsection>
<title>Nessuna descrizione su quello che è il pacchetto</title>
<body>

<p>
Per favore lasciaci a conoscenza di quello che è il pacchetto e copleta l'URL
con l'home page dell'applicazione, se ne esiste una.
</p>

</body>
</subsection>
<subsection>
<title>Aggiornamenti del pacchetto senza cambiare il ChangeLog</title>
<body>

<p>
Se fai il submit di un pacchetto aggiornato, allora assicurati di spiegare
che cambiamenti sono stati fatti all'ebuild. Per esempio, se un pacchetto
introduce nuove caratteristiche/opzioni e usi una flag USE, elencala nel tuo
bug. Non lasciarci a sconoscenza di questo.
</p>

<p>
E' saggio di fare il submit anche di un diff del pacchetto aggiornato
piuttosto che dell'intero ebuild. Il modo migliore per generarlo è:
</p>

<pre caption="Creazione di un diff">
$ <i>diff -u some-package-0.1.0.ebuild some-package-0.2.0.ebuild &gt; ~/some-package-0.2.0.diff</i>
</pre>

</body>
</subsection>
<subsection>
<title>Submit di ebuilds invariati per il rilascio di una nuova versione</title>
<body>

<p>
Se stai facendo il submit di una nuova versione di un pacchetto nel portage,
assicurati che l'ebuild esistente funziona e che i cambiamenti sono
incorporati nel nuovo ebuild (come documentazione aggiunta). Se non ci sono
cambiamenti necessari all'ebuild dalla precedente versione, allora non
allegare l'ebuild. Menziona soltanto nel report del bug che hai copiato
l'ebuild e verificato che il pacchetto funziona e viene installato
correttamente.
</p>

</body>
</subsection>
</section>
<section>
<title>Commenti e suggerimenti</title>
<subsection>
<body>

<p>
Commenti, correzioni e suggerimenti devono essere inviati a <mail
link="liquidx@gentoo.org">Alastair Tse</mail>.
</p>

</body>
</subsection>
</section>
</sections>

