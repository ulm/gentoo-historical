<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/it/devrel/handbook/Attic/hb-guide-common-mistakes.xml,v 1.7 2012/05/27 12:50:05 ago Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- This document was last synced to:
     cvs://gentoo/gentoo/xml/htdocs/doc/en/ebuild-mistakes.xml :: R1.4.
-->

<sections>
<version>1.0.2</version>
<date>2006-09-05</date>

<section>
<title>Errori comuni nella scrittura degli ebuild</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Viene presentata una lista di errori comuni frequentemente riscontrabili negli
ebuild proposti dagli utenti. Assicurarsi che l'ebuild che si vuole sottoporre
non ne contenga nessuno. Prima di sottoporre un qualsiasi ebuild, assicurarsi di
avere letto la <uri link="?part=3&amp;chap=1">Politica per gli Ebuild</uri> e
l'<uri link="?part=2&amp;chap=1">HOWTO sugli Ebuild</uri>. Inoltre, assicurarsi
anche di avere letto un numero sufficiente (esempio: più di uno o due) di ebuild
contenuti nel portage tree per avere la certezza di conoscere lo stile con cui
sono stati scritti.
</p>


<p>
Può anche essere utile leggere un po' di ebuild che usano le eclass e capire come
usarle leggendo l'<uri link="?part=2&amp;chap=2">HOWTO sulle Eclass</uri>.
Infine, leggere attentamente la guida <uri
link="/doc/it/ebuild-submit.xml">Contribuire agli Ebuild</uri> prima di
sottoporre il/i proprio/i ebuild.
</p>

</body>
</subsection>
<subsection>
<title>Intestazioni (header) mancanti/non valide/corrotte</title>
<body>

<p>
Quando si propone un ebuild, l'intestazione (header) deve essere
<e>esattamente</e> uguale a quella presente in
<path>/usr/portage/skel.ebuild</path>. La cosa più importante è di non
modificarla in nessun modo e di assicurarsi che la linea <c>&#36;Header:
&#36;</c> sia intatta.
</p>

<p>
Le prime tre linee <e>devono</e> apparire così:
</p>

<pre caption="Intestazione valido">
# Copyright 1999-2004 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# &#36;Header: &#36;
</pre>

<p>
Solo se si sta proponendo un ebuild patchato o con un incremento di versione,
non c'è la necessità di modificare la linea <c>&#36;Header: &#36;</c>. Ma la
linea deve essere comunque presente. Quando l'ebuild viene inserito nel CVS,
questa intestazione verrà modificata con le appropriate informazioni di versione
e data. In questo modo non è necessario modificarla manualmente.
</p>

</body>
</subsection>
<subsection>
<title>Mancanza di IUSE</title>
<body>

<p>
Da sempre la mancanza più comune è la variabile IUSE. Bisogna (come spiega
l'<uri link="?part=2&amp;chap=1">HOWTO sugli Ebuild</uri>) includere la
variabile IUSE anche se non ci sono flag USE utilizzate. Se non ci sono flag USE
supportate, basta aggiungere quanto segue:
</p>

<pre caption="IUSE vuota">
IUSE=""
</pre>

</body>
</subsection>
<subsection>
<title>P, PV, PN e PF ridefiniti</title>
<body>

<p>
Non bisogna mai ridefinire queste variabili. Usare sempre MY_P, MY_PN, MY_PV,
P0, ecc. Per maggiori informazioni guardare in portage altri ebuild che compiono
questa operazione. La maggior parte degli ebuild usa l'"Espansione dei
Parametri" di bash, per questo motivo si consiglia di leggere le pagine man di
bash per capire come funziona l'"Espansione dei Parametri".
</p>

<p>
A tal proposito, se si trova un pacchetto che effettua una ridefinizione, non
copiarlo, ma aprire un bug per il relativo ebuild.
</p>

</body>
</subsection>
<subsection>
<title>Includere numeri di versione in SRC_URI e S</title>
<body>

<p>
Cercare di non includere il numero della versione in SRC_USI e S, ma di
utilizzare sempre ${PV} o ${P}. Ciò semplifica il mantenimento dell'ebuild. Se
un numero di versione non è consistente con il tarball/sorgente, allora usare
MY_P. Un esempio è dev-python/pyopenal che recupera un tarball chiamato
PyOpenAL, perciò la ridefinizione avviene in questo modo:
</p>

<pre caption="Esempio ridefinizione di versione">
MY_P=${P/pyopenal/PyOpenAL}
SRC_URI="http://oomadness.tuxfamily.org/downloads/${MY_P}.tar.gz"
S=${WORKDIR}/${MY_P}
</pre>

</body>
</subsection>
<subsection>
<title>DEPEND contiene errori di sintassi</title>
<body>

<p>
I campi DEPEND e RDEPEND degli ebuild proposti dagli utenti solitamente
contengono diversi errori. Questi sono i punti più importanti da seguire durante
la scrittura della parte delle dipendenze.
</p>

<ul>
  <li>
    <e>Includere sempre la CATEGORIA.</e><br /> Per esempio, usare
    <c>&gt;=x11-libs/gtk+-2</c> e non <c>&gt;=gtk+-2</c>.
  </li>
  <li>
    <e>Non mettere nessun asterisco (*) per dipendenze di tipo &gt;=.</e><br />
    Per esempio, dovrebbe essere <c>&gt;=x11-libs/gtk+-2</c> invece di
    <c>&gt;=x11-libs/gtk+-2*</c>.
  </li>
  <li>
    <e>Specificare GTK. Usare sempre =x11-libs/gtk+-1.2* per applicazioni
    GTK+1.</e>
  </li>
  <li>
    <e>Mai mettere come dipendenza un meta-pacchetto.</e><br /> Per cui non
    dipendere da gnome-base/gnome, ma dipendere sempre da una libreria
    specifica, come libgnome.
  </li>
  <li>
    <e>Una dipendenza per riga.</e><br /> Non mettere dipendenze multiple su una
    stessa riga. Risultano difficili da leggere e da seguire.
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>DEPEND è incompleto</title>
<body>

<p>
Questo è un altro errore molto comune. Viene proposto un ebuild apparentemente
"funzionante" senza controllare se le dipendenze sono corrette. Vengono proposti
alcuni trucchi per trovare le dipendenze corrette.
</p>

<ul>
  <li>
    <e>Guardare in configure.in o configure.ac</e><br /> Controllare qui le
    eventuali verifiche dei pacchetti. Le cose da guardare sono i controlli
    di pkg-config o le funzioni AM_* che controllano una specifica versione.
  </li>
  <li>
    <e>Guardare i file .spec</e><br /> Una buona indicazione è guardare nei file
    .spec inclusi per le relative dipendenze. Tuttavia non farvi completamente
    affidamento, in quanto non è detto contengano l'elenco completo e definitivo
    delle dipendenze.
  </li>
  <li>
    <e>Guardare il sito web dell'applicazione/libreria</e><br /> Controllare il
    sito web dell'applicazione per possibili dipendenze elencate come
    necessarie.
  </li>
  <li>
    <e>Leggere gli eventuali file README e INSTALL del pacchetto</e><br /> Di
    solito contengono utili informazioni sulla compilazione e installazione dei
    pacchetti.
  </li>
  <li>
    <e>Ricordarsi le dipendenze non binarie come pkg-config, programmi per la
    generazione dei documenti, ecc.</e><br /> Solitamente il processo di
    compilazione richiede dipendenze come intltool, libtool, pkg-config,
    doxygen, scrollkeeper, gtk-doc, etc. Assicurarsi di specificarle
    chiaramente.
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>LICENSE invalida</title>
<body>

<p>
Un altro errore comune degli utenti quando sottopongono degli ebuild è la
fornitura di una licenza non valida. Per esempio, <c>GPL</c> non lo è, bisogna
specificare <c>GPL-1</c> o <c>GPL-2</c>; stessa discorso per <c>LGPL</c>.
Assicurarsi che la licenza in uso nel campo <c>LICENSE</c> esista in
<path>/usr/portage/licenses</path>. Un consiglio per verificare la licenza è
controllare il file <path>COPYING</path> contenuto nell'archivio dei sorgenti.
Se un pacchetto non specifica di usare <c>GPL-1</c> o <c>GPL-2</c>, è molto
probabile che utilizzi <c>GPL-2</c>.
</p>

<p>
Se la licenza per il pacchetto proposto è unica e non è presente in
<path>/usr/portage/licenses/</path>, allora bisogna sottoporre la nuova licenza
in un file separato.
</p>

</body>
</subsection>
<subsection>
<title>ARCHs non testate in KEYWORDS</title>
<body>

<p>
Si prega di non aggiungere altre ARCH in KEYWORDS a meno che l'ebuild sia stato
testato su questa ARCH. Inoltre tutti i nuovi ebuild dovrebbero essere marcati
"non stabili" (es. ~x86 o qualsiasi altra architettura). Assicurarsi che le
KEYWORDS stabili vengano marcate come <c>~</c> quando si effettua un incremento
di versione.
</p>

</body>
</subsection>
<subsection>
<title>SLOT mancante</title>
<body>

<p>
Assicurarsi che la variabile SLOT sia presente nell'ebuild. Se il suo utilizzo
non è pianificato, non rimuoverla, ma mettere:
</p>

<pre caption="Variabile SLOT predefinita">
SLOT="0"
</pre>

</body>
</subsection>
<subsection>
<title>DESCRIPTION e HOMEPAGE errate</title>
<body>

<p>
Controllare la correttezza della variabile HOMEPAGE, in modo che conduca gli
utenti alla pagina corretta, nel caso vogliano ricevere maggiori informazioni
riguardo al pacchetto. Inoltre assicurarsi che DESCRIPTION non sia troppo lunga.
Una buona descrizione descriverà la funzione principale del pacchetto in una
sola frase.
</p>

</body>
</subsection>
<subsection>
<title>Uso scorretto di spazi al posto di TABS (tabulazioni)</title>
<body>

<p>
Non è divertente riformattare le linee degli ebuild a causa della mancata
applicazione, da parte di chi ha sottoposto l'ebuild, delle linee guida sull'uso
dei TABS al posto degli spazi. Per cui <e>si prega</e> di usare le tabulazioni!
</p>

</body>
</subsection>
<subsection>
<title>Spazi bianchi a fine riga</title>
<body>

<p>
Anche l'autore di questa guida molte volte è colpevole di questo errore.
Ricordarsi di eseguire repoman su tutti i propri ebuild in modo da ricevere
eventuali avvisi riguardo l'esistenza di spazi inutili alla fine delle righe o
in righe vuote.
</p>

</body>
</subsection>
<subsection>
<title>Aggiunta di S=${WORKDIR}/${P} ridondanti</title>
<body>

<p>
Se <c>S=${WORKDIR}/${P}</c>, allora non bisogna aggiungere questa
inserire questa assegnazione nell'ebuild, in quanto è già implicita: aggiungerla
solo se $S differisce da <c>${WORKDIR}/${P}</c>.
</p>

</body>
</subsection>
<subsection>
<title>Documentazione mancante</title>
<body>

<p>
Se il proprio pacchetto contiene della documentazione, assicurarsi di
installarla utilizzando <c>dodoc</c> o in <path>/usr/share/doc/${PF}</path>.
Ricordarsi di verificare eventuali errori durante l'esecuzione di
<c>dodoc</c>/<c>doins</c>.
</p>

</body>
</subsection>
</section>

<section>
<title>Errori comuni quando si sottopongono degli ebuild</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Si prega di sottoporre correttamente gli ebuild seguendo la guida <uri
link="/doc/it/ebuild-submit.xml">Contribuire agli ebuild</uri> contenuta nella
<uri link="/doc/it/index.xml">pagina della Documentazione di Gentoo Linux</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Creazione di ebuild come archivi tarball</title>
<body>

<p>
Per favore, per favore, per favore non allegare ebuild come archivi tarball.
Allegare separatamente le patch in modo da poterle esaminare con facilità.
</p>

</body>
</subsection>
<subsection>
<title>Ebuild in linea</title>
<body>

<p>
Non copiare ed incollare un ebuild nel campo per i commenti di bugzilla.
</p>

</body>
</subsection>
<subsection>
<title>Nessuna descrizione riguardo al pacchetto</title>
<body>

<p>
Si prega di fornire delle informazioni riguardo al pacchetto, e di inserire
l'URL con l'home page dell'applicazione, se ne esiste una.
</p>

</body>
</subsection>
<subsection>
<title>Aggiornamenti del pacchetto senza cambiare il ChangeLog</title>
<body>

<p>
Se si sottopone un pacchetto aggiornato, assicurarsi di spiegare quali
cambiamenti sono stati fatti all'ebuild. Per esempio, se un pacchetto introduce
nuove caratteristiche/opzioni e viene usata una flag USE, elencarla nel proprio
bug. Non lasciare agli sviluppatori l'onere di andare alla ricerca di queste
cose.
</p>

<p>
E' saggio sottoporre le differenze (diff) dell'aggiornamento del pacchetto
piuttosto che l'intero ebuild. Il modo migliore per generarle è:
</p>

<pre caption="Creazione di un diff">
$ <i>diff -u some-package-0.1.0.ebuild some-package-0.2.0.ebuild &gt; ~/some-package-0.2.0.diff</i>
</pre>

</body>
</subsection>
<subsection>
<title>Sottoporre ebuild invariati per il rilascio di una nuova versione</title>
<body>

<p>
Se si sta sottoponendo una nuova versione di un pacchetto in portage,
assicurarsi che l'ebuild esistente funzioni e che i cambiamenti siano
incorporati nel nuovo ebuild (per esempio documentazione aggiuntiva). Se non ci
sono cambiamenti necessari all'ebuild dalla precedente versione, allora non
allegare l'ebuild. Menzionare soltanto nel report del bug che l'ebuild è stato
copiato e ne è stato verificato il corretto funzionamento ed installazione.
</p>

</body>
</subsection>
</section>
<section>
<title>Commenti e suggerimenti</title>
<subsection>
<body>

<p>
Commenti, correzioni e suggerimenti devono essere inviati a <mail
link="devrel@gentoo.org">Developer Relations</mail>.
</p>

</body>
</subsection>
</section>
</sections>

