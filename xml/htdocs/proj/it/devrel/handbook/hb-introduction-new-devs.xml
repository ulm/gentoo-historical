<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/it/devrel/handbook/hb-introduction-new-devs.xml,v 1.11 2012/05/27 18:16:35 ago Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>
<version>1.1</version>
<date>2010-04-26</date>

<section>
<title>Utilizzo del CVS</title>
<subsection>
<title>Introduzione</title>
<body>

<p>
Questa guida non vuole essere un manuale sull'utilizzo di CVS, per il quale è
preferibile consultare la relativa pagina info oppure
<uri>/doc/it/cvs-tutorial.xml</uri>. Invece essa si focalizza in modo specifico
sull'uso di CVS e di Repoman nell'ebuild tree di Gentoo.
</p>

</body>
</subsection>
<subsection>
<title>Configurazione</title>
<body>

<p>
Tipicamente, nel proprio <path>~/.cvsrc</path> dovranno esserci delle
voci simili a queste:
</p>

<pre caption="~/.cvsrc">
cvs -q -z0
diff -u -B
checkout -P
update -d -P
</pre>

<p>
Infine, ad alcuni utilizzatori di CVS piace usare la compressione (-z#).
Si chiede agli sviluppatori che non hanno una connessione dialup di usare -z0 -
con il contenuto del repository CVS Gentoo ed il carico di lavoro sullo stesso,
si noterà un effettivo <e>incremento</e> della velocità senza compressione.
</p>

</body>
</subsection>
<subsection>
<title>Recuperare i moduli CVS/SVN</title>
<body>

<p>
Ci sono alcuni moduli utili nel repository di CVS di Gentoo. Gli ebuild sono
contenuti nel modulo <path>gentoo-x86</path>. <path>gentoo</path> contiene i
file XML per il sito web, la documentazione, le cartelle e le immagini degli
sviluppatori, e altro ancora. <path>gentoo-projects</path> contiene diversi
progetti e generalmente rimpiazza il modulo cvs <path>gentoo-src</path>.
<path>gentoo-src</path> viene mantetenuto per ragioni storiche, per cui se lo si
sta ancora utilizzando si prega di migrare ad un modulo differente.
</p>

<pre caption="Recuperare gentoo-x86">
# <i>cvs -d username@cvs.gentoo.org:/var/cvsroot co gentoo-x86</i>
</pre>

<p>
Ogni volta, prima di lavorare nella struttura, è sempre una buona idea eseguire
un'aggiornamento per controllare i cambiamenti e prevenire eventuali conflitti.
È possibile aggiornare ogni singola sottocartella dell'albero nel caso non si
voglia attendere l'aggiornamento completo, però ogni tanto è buona prassi
aggiornare tutta la struttura:
</p>

<pre caption="Aggiornamento di gentoo-x86">
# <i>cd gentoo-x86</i>
# <i>cvs update</i>
</pre>

<p>
Inoltre Gentoo offre servizi subversion per tutti coloro che preferiscono SVN
rispetto a CVS. Diversi progetti fondamentali come <path>portage</path> e
<path>baselayout</path> adesso sono ospitati lì.
</p>

<pre caption="Recuperare il modulo portage">
# <i>svn co svn+ssh://username@cvs.gentoo.org/var/svnroot/portage</i>
</pre>

</body>
</subsection>

<subsection>
<title>Aggiornare Portage</title>
<body>

<p>
Se si vuole usare CVS come albero primario per Portage, aggiungere le seguenti
linee al proprio <path>/etc/make.conf</path>, rimpiazzando <c>you</c> con il
proprio nome utente:
</p>

<pre caption="Cambiamenti al /etc/make.conf per usare CVS">
SYNC="cvs://you@cvs.gentoo.org:/var/cvsroot"
CVSROOT=":ext:you@cvs.gentoo.org:/var/cvsroot"
</pre>

<p>
Sia che CVS venga utilizzato come albero primario di Portage, sia che non venga
utilizzato, è importante che <c>cvs</c> sia incluso nella variabile
<c>FEATURES</c> in <path>/etc/make.conf</path>. Ciò assicura che Portage
scarichi tutti i file elencati in <c>SRC_URI</c> all'interno dell'ebuild nel
momento in cui si effettua un digest.
</p>

<note>
Siccome il checkout cvs non ha una cache dei metadati, il proprio portage
potrebbe diventare veramente lento.
</note>

<p>
Nelle architetture supportate, bisogna anche avere <c>sandbox</c> nella propria
variabile <c>FEATURES</c> per assicurarsi che gli ebuild non modifichino
direttamente il filesystem root.
</p>

</body>
</subsection>
<subsection>
<title>Aggiungere/Rimuovere pacchetti</title>
<body>

<p>
Si presume di essere pronti per aggiungere un nuovo pacchetto, <c>foo</c>, in
app-misc:
</p>

<pre caption="Aggiungere un pacchetto">
<comment>(Sostituire CVSROOT con il percorso del proprio CVS tree recuperato.)</comment>
# <i>cd $CVSROOT/app-misc</i>
<comment>(Aggiornare sempre prima di lavorare in una parte dell'albero CVS!)</comment>
# <i>cvs update</i>
# <i>mkdir foo</i>
<comment>(A questo punto si aggiunge al repository CVS la directory per il pacchetto foo.)</comment>
# <i>cvs add foo</i>
# <i>cd foo</i>
<comment>(È meglio mantenere gli ebuild in lavorazione esternamente all'albero CVS.)</comment>
# <i>cp /path/to/foo-1.0.ebuild ./</i>
<comment>(Assicurarsi che PORTDIR_OVERLAY sia impostato alla directory di CVS durante la creazione dei manifest.)</comment>
# <i>repoman manifest</i>
# <i>${EDITOR} metadata.xml</i>
 <comment>Non è più necessario avere una directory files</comment>
# <i>cvs add foo-1.0.ebuild ChangeLog files</i>
<comment>[Non dimenticarsi di creare un ChangeLog - guardare la pagina man per echangelog.]</comment>
# <i>echangelog "New ebuild for foo. Ebuild written by me. Fixes bug#XXXXXX."</i>
</pre>

<p>
Guardare la sezione <uri link="?part=2&amp;chap=4">Gentoo Metadata</uri> per
maggiori informazioni su <path>metadata.xml</path>.
</p>

<p>
A questo punto, è possibile effettuare il commit (guardare la successiva sezione
Commit). Ma volendo rimuovere foo-1.0 nel momento in cui è disponibile foo-1.1?
</p>

<pre caption="Rimuovere le vecchie versioni">
# <i>cd $CVSROOT/app-misc/foo</i>
# <i>cvs update</i>
# <i>cvs remove -f foo-1.0.ebuild</i>
</pre>

<p>
Ora è possibile effettuare il commit (guardare la successiva sezione Commit).
</p>

</body>
</subsection>
<subsection>
<title>Commit</title>
<body>

<p>
Usare sempre <c>repoman commit</c> piuttosto che <c>cvs commit</c>. Repoman è
un'utilità di controllo della qualità (QA) che esegue controlli di base e crea i
file Manifest. Se una qualsiasi parte dell'output di repoman non è chiara,
consultare <c>man repoman</c>. In più, se si è stanchi di digitare la propria
password ripetutamente, keychain
(<uri>http://www.gentoo.org/doc/it/keychain-guide.xml</uri>) può essere d'aiuto.
</p>

<pre caption="Uso di repoman">
<comment>[Assicurarsi che non ci siano file appartenenti a root prima di avviare repoman!]</comment>
<comment>("scan" percorre la directory corrente per gli scopi di QA. "full" è più completo.)</comment>
# <i>repoman scan</i>
<comment>("commit" esegue uno scan, poi esegue il commit, intanto aggiorna anche il Manifest.
Assicurarsi di aggiungere un utile e dettagliato messaggio al ChangeLog di CVS...)</comment>
# <i>repoman commit</i>
</pre>

</body>
</subsection>
<subsection>
<title>Velocizzare CVS up</title>
<body>

<p>
Se si riscontra un'evidente latenza verso il server cvs, è possibile usare la
configurazione master slave di ssh, dove ci si connette all'altro server ssh
una volta sola e si fa in modo che esso esegua i comandi successivi su tale
connessione. In questo modo si risparmia l'overhead dovuto all'handshake
incrementando in toto le operazioni di checkout/commit di quasi 3 volte. Basta
aggiungere il pezzo di codice seguente alla propria configurazione
</p>

<pre caption="~/.ssh/config">
Host cvs.gentoo.org
ControlMaster auto
ControlPath ~/.ssh/master-%r@%h:%p
ControlPersist 3600
</pre>

</body>
</subsection>
</section>

<section>
<title>Informazioni varie</title>
<subsection>
<title>Posizionare i file sui mirror</title>
<body>

<p>
I distfile sono automaticamente prelevati dal sistema di Mirror di Gentoo.
Bisogna solamente tenere sotto controllo i propri distfile per eventuali errori
di scaricamento degli stessi. Leggere <uri
link="/proj/en/infrastructure/mirrors/overview-distfile.xml">Distfiles Overview
Guide</uri> per esaurienti istruzioni a riguardo.
</p>

</body>
</subsection>
<subsection>
<title>Mail e Web</title>
<body>

<p>
L'infrastruttura di Gentoo permette agli sviluppatori di gestire le proprie
email. <uri>http://www.gentoo.org/proj/it/infrastructure/dev-email.xml</uri>
contiene le istruzioni per la configurazione della propria email @gentoo.org.
</p>

<p>
Gli sviluppatori hanno accesso ad uno spazio web,
http://dev.gentoo.org/~$PROPRIONOME. Per ulteriori dettagli leggere <uri
link="/proj/it/infrastructure/dev-webspace.xml">Configurazione dello spazio web
su dev.gentoo.org</uri>.
</p>

</body>
</subsection>
</section>

</sections>