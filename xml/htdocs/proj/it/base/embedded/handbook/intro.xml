<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/it/base/embedded/handbook/intro.xml,v 1.5 2010/09/07 21:47:54 scen Exp $ -->

<sections>

<abstract>
Un'introduzione al mondo embedded, ai cross-compilatori e ai draghi.
</abstract>

<version>0.3</version>
<date>2010-04-13</date>

<section>
<title>Preludio</title>
<body>

<p>
Il cross development, sviluppare cioè su una piattaforma per eseguire ciò che è
stato generato su di un'altra, è solitamente considerata un'arte oscura, che
richiede molte ricerche, fatta di tentativi ed errori, alla cui base c'è la
perseveranza. Gli intrepidi sviluppatori devono affrontare la carenza di
documentazione e la mancanza di toolkit open source maturi e completi per lo
sviluppo multi piattaforma. Il lavoro portato avanti dal <uri
link="/proj/en/base/embedded/">Progetto Gentoo Embedded</uri>, dal <mail
link="toolchain@gentoo.org">Gruppo Gentoo Toolchain</mail> e da altri
partecipanti ha prodotto e continua a migliorare un ambiente di sviluppo basato
su Gentoo che semplifica notevolmente il cross sviluppo.
</p>

</body>
</section>
<section>
<title>La Toolchain</title>
<body>

<p>
Il termine "toolchain" si riferisce all'insieme dei pacchetti usati per creare
un sistema (i "tool", ossia gli strumenti, che sono usati nella catena, "chain",
di eventi composta dal prendere dati input e generare dati in output ). E' una
definizione imprecisa se si guarda a quali pacchetti nello specifico sono
considerati parte della toolchain, ma al fine di semplificare il concetto, si
considerano tutti quei componenti necessari a compilare del codice in qualcosa
di divertente e utilizzabile.
</p>

<p>
La toolchain è composta dai seguenti elementi:
</p>

<ul>
  <li>
    <c>binutils</c> - Strumenti essenziali per la manipolazione di binari
    (include l'assembler ed il linker)
  </li>
  <li>
    <c>gcc</c> - La Collezione di Compilatori GNU (il compilatore C e C++)
  </li>
  <li>
    <c>glibc</c> o <c>uclibc</c> o <c>newlib</c> - La libreria C di sistema
  </li>
  <li>
    <c>linux-headers</c> - Gli header del Kernel necessari alla libreria C di
    sistema
  </li>
  <li><c>gdb</c> - Il debugger GNU</li>
</ul>

<p>
Tutti i sistemi Gentoo correttamente configurati hanno installata una toolchain
come parte del sistema base. Tale toolchain è configurata per generare binari
per la medesima piattaforma dove è installata.
</p>

<p>
Per generare binari su un sistema e far sì che essi possano essere eseguiti su
una diversa piattaforma, si avrà bisogno di una toolchain speciale - una
cosiddetta <e>cross toolchain</e> - specifica per la piattaforma di
destinazione. Gentoo mette a disposizione per questo scopo un semplice ma
potente strumento chiamato <c>crossdev</c>. Crossdev può generare e installare
sul sistema un numero arbitrario di cross toolchain, purché supportate dal GCC.
Dal momento che Gentoo installa tutti i file delle toolchain in directory
specifiche per ogni architettura, tali toolchain non interferiranno con quella
nativa di sistema.
</p>

</body>
</section>
<section>
<title>Variabili d'Ambiente</title>
<body>

<p>
Alcune variabili d'ambiente usate dalla toolchain di Gentoo e da Portage possono
confondere sviluppatori non esperti di cross development. La seguente tabella
spiega alcune di queste ingannevoli variabili e fornisce dei valori tipo, basati
sugli esempi di cross development presentati in questa guida. Vedere <uri
link="#terminology">Ulteriori Terminologie e Variabili</uri> per altre
variabili insolite e relativi concetti.
</p>

<table>
<tr>
  <th>Variabile</th>
  <th>Significato quando si genera una Cross-Toolchain</th>
  <th>Significato quando si generano dei "Cross-Binari"</th>
</tr>
<tr>
  <th>CBUILD</th>
  <ti>Piattaforma su cui si sta compilando</ti>
  <ti>Piattaforma su cui si sta compilando</ti>
</tr>
<tr>
  <th>CHOST</th>
  <ti>Piattaforma su cui la cross-toolchain sarà eseguita</ti>
  <ti>
    Piattaforma su cui saranno eseguiti i binari compilati dalla cross-toolchain
  </ti>
</tr>
<tr>
  <th>CTARGET</th>
  <ti>
    Piattaforma su cui sarano eseguiti i binari compilati dalla cross-toolchain
  </ti>
  <ti>
    Piattaforma su cui sarano eseguiti i binari compilati dalla
    cross-toolchain. Ridondante, ma non c'è pericolo se si imposta questa
    variabile, e solo pochi binari si comportano allo stesso modo.
  </ti>
</tr>
<tr>
  <th>ROOT</th>
  <ti colspan="2">
    Percorso alla root virtuale (<path>/</path>) dove si andrà a installare
  </ti>
</tr>
<tr>
  <th>PORTAGE_CONFIGROOT</th>
  <ti colspan="2">
    Percorso alla root virtuale  (<path>/</path>) dove portage potrà trovare i
    suoi file di configurazione (come <path>/etc/make.conf</path>)
  </ti>
</tr>
</table>

<p>
Se, ad esempio, si avesse un desktop AMD64 con Gentoo e si desiderasse
sviluppare qualcosa per il proprio PDA, architettura ARM, la tabella illustrata
sopra apparirebbe così:
</p>

<table>
<tr>
  <th>Variabile</th>
  <th>Valore per Generare la Cross-Toolchain</th>
  <th>Valore per Generare i "Cross-Binari"</th>
</tr>
<tr>
  <th>CBUILD</th>
  <ti><c>x86_64-pc-linux-gnu</c></ti>
  <ti><c>x86_64-pc-linux-gnu</c></ti>
</tr>
<tr>
  <th>CHOST</th>
  <ti><c>x86_64-pc-linux-gnu</c></ti>
  <ti><c>arm-unknown-linux-gnu</c></ti>
</tr>
<tr>
  <th>CTARGET</th>
  <ti><c>arm-unknown-linux-gnu</c></ti>
  <ti><e>non impostato</e></ti>
</tr>
<tr>
  <th>ROOT</th>
  <ti>
    <e>non impostare -- Come impostazione predefinita punta a <path>/</path></e>
  </ti>
  <ti><c>/percorso/dove/verrà/installato</c></ti>
</tr>
<tr>
  <th>PORTAGE_CONFIGROOT</th>
  <ti>
    <e>non impostare -- Come impostazione predefinita punta a <path>/</path></e>
  </ti>
  <ti><c>/percorso/ambiente/portage/per/arm/</c></ti>
</tr>
</table>

</body>
</section>
<section id="terminology">
<title>Ulteriori Terminologie e Variabili</title>
<body>

<dl>
<dt><c>canadian cross</c></dt>
<dd>
  Il processo di generare un cross-compilatore che funzionerà su una piattaforma
  differente da quella dove è stato compilato (CBUILD != CHOST &amp;&amp;
  CHOST != CTARGET)
</dd>

<dt><c>sysroot: system root</c></dt>
<dd>
  La directory dove il compilatore cercherà i proprio header standard e le
  proprie librerie
</dd>

<dt><c>hardfloat</c></dt>
<dd>
  Il Sistema ha un'Unità a Virgola Mobile (Floating Point Unit (FPU)) per
  gestire calcoli matematici a virgola mobile
</dd>

<dt><c>softfloat</c></dt>
<dd>
  Il Sistema non è dotato di una FPU hardware, perciò tutte le operazioni a
  virgola mobile sono approssimate in virgola fissa
</dd>

<dt><c>PIE</c></dt>
<dd>Position Independent Executable (-fPIE -pie)</dd>

<dt><c>PIC</c></dt>
<dd>Position Independent Code (-fPIC)</dd>

<dt><c>CRT</c></dt>
<dd>C RunTime</dd>

<dt><c>Tuple</c></dt>
<dd>
  Per crossdev, è definito come una stringa nel formato
  <c>ARCH-VENDOR-OS-LIBC</c>. Vedere <c>crossdev -t help</c> per informarsi
  precise su come questa stringa può essere completata.
</dd>
</dl>

</body>
</section>
</sections>
