<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/it/base/embedded/handbook/tuples.xml,v 1.1 2008/04/06 15:57:55 scen Exp $ -->

<sections>

<abstract>
Stringhe di Sistema -- cosa sono e come interpretarle.
</abstract>

<version>0.1</version>
<date>2007-08-12</date>

<section>
<title>Retroscena</title>
<body>

<p>
Il progetto <uri link="http://savannah.gnu.org/projects/config">GNU config</uri>
esiste al fine di tener traccia di tutte le architetture conosciute e generare
una breve e specifica stringa che la descriva in tutti i suoi aspetti rilevanti
(per una toolchain).
</p>

<p>
La forma canonica è:
<b>architettura</b>-<b>produttore</b>-<b>kernel</b>-<b>sistema operativo</b>.
Molte stringhe omettono il campo del produttore (dal momento che è completamente
arbitrario). Il campo <b>sistema operativo</b> ha ampliato il proprio
significato nel corso del tempo fino ad indicare, oggi, il tipo di userland e/o
di ABI.
</p>

</body>
</section>
<section>
<title>Esempi</title>
<body>

<p>
Viene qui proposta una tabella (sicuramente incompleta) con alcune tra le più
comuni configurazioni. Da notare che non tutte le permutazioni potrebbero
funzionare in quanto certi campi (come <b>kernel</b> o <b>sistema operativo</b>)
avranno senso solo se effettivamente esiste un "porting"
dell'<b>architettura</b> su di essi.
</p>

<table>
<tr>
 <th>Architettura</th>
 <th>Produttore</th>
 <th>Kernel</th>
 <th>Sistema Operativo</th>
</tr>
<tr>
  <ti>
    alpha <br/>
    arm / armeb <br/>
    avr / avr32 <br/>
    bfin <br/>
    cris <br/>
    hppa / hppa1.1 / hppa2.0 / hppa64 <br/>
    ia64 <br/>
    i386 / i486 / i586 / i686 <br/>
    m68k <br/>
    mips / mipsel / mips64 / mips64el <br/>
    nios / nios2 <br/>
    powerpc / powerpc64 <br/>
    sparc / sparcv8 / sparcv9 / sparc64 <br/>
    s390 / s390x <br/>
    sh / sh3 / sh4 / sheb / sh3eb / sh4eb / sh64 <br/>
    vax <br/>
    x86_64 <br/>
  </ti>
  <ti>
    gentoo <br/>
    pc <br/>
    softfloat <c>[1]</c> <br/>
    unknown <br/>
  </ti>
  <ti>
    elf <c>[2]</c> <br/>
    freebsd6.2 <br/>
    linux <br/>
    mingw32 / mingw64 <br/>
    uclinux <c>[3]</c> <br/>
  </ti>
  <ti>
    gnu <c>[4]</c> <br/>
    gnueabi <c>[5]</c> <br/>
    uclibc <c>[6]</c> <br/>
    uclibceabi <br/>
  </ti>
</tr>
</table>

<ol>
  <li> <!-- [1] -->
    Ci si ricorda quando è stato detto che il campo <b>produttore</b> era
    totalmente arbitrario? Questo è del tutto vero. Nel mondo Gentoo, è stato
    scelto il valore <e>softfloat</e> per indicare softfloat toolchains. Se si
    ha bisogno di una toolchain che supporti il softfloat, assicurarsi di
    impostare il campo vendor con questo valore.
  </li>
  <li> <!-- [2] -->
    Quando si usa <e>elf</e> come sistema operativo, si sta specificando che non
    si vuole eseguire un sistema operativo, ma solo del codice sull'hardware.
    Questo è possibile unicamente tramite newlib (con l'aiuto di libgloss).
  </li>
  <li> <!-- [3] -->
    Usando  <e>uclinux</e> verranno generati dei binari PIATTI che saranno
    eseguiti su linux con la MMU disabilitata (chiamati anche no-mmu).
  </li>
  <li> <!-- [4] -->
    Specificando <e>gnu</e> si indicano le glibc come libc di sistema.
  </li>
  <li> <!-- [5] -->
    Il suffisso <e>eabi</e> funzionerà solo su un limitato numero di
    architetture embedded (al momento solo arm e ppc). Indica infatti alla
    toolchain di generare codice per la nuova Embedded ABI.
  </li>
  <li> <!-- [6] -->
    Specificando <e>uclibc</e> si indicano le uClibc come libc di sistema.
  </li>
</ol>

<p>
Alcuni veloci esempi per dare una visione d'insieme. Se si volesse un ambiente
glibc sotto Linux per un'architettura SuperH4, la stringa sarebbe semplicemente:
<e>sh4-unknown-linux-gnu</e>. O se si preferisse eseguire del codice
direttamente sull'hardware (senza sistema operativo), avendo un processore arm,
la stringa sarebbe: <e>arm-elf</e>.
</p>

</body>
</section>
<section>
<title>Architetture e Kernel</title>
<body>

<p>
Anche se in molti casi i valori usati da portage per <c>ARCH</c> e
<c>KEYWORDS</c> corrispondono con i valori utilizzati dal kernel, non sempre è
così. Non corrispondono esattamente neppure alla tabella riportata sopra. Col
tempo poi, il kernel potrebbe rinominare o unificare alcune architetture, per
questo non è possibile stilare una lista precisa senza tener traccia di ogni
singola versione.
</p>

<p>
Per avere la lista delle architetture, andare nella directory dei sorgenti del
kernel e poi nella sottodirectory <path>arch</path>. Tenere a mente che il
kernel mantiene sotto una stessa architettura diversi processori. Per cui anche
se si possiede un processore omap o strong arm o xscale, tutte queste cpu fanno
parte dell'architettura arm. Lo stesso vale per i processori i386, i486, i586 e
i686: ricadono tutti nell'architettura i386.
</p>

</body>
</section>
</sections>
