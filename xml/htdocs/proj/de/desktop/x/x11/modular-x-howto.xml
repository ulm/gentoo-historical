<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/de/desktop/x/x11/modular-x-howto.xml,v 1.1 2006/05/29 03:40:11 grahl Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- English CVS Version: 1.43 -->

<guide link="/proj/de/desktop/x/x11/modular-x-howto.xml" lang="de">
<title>Migrations-HOWTO zu modularem X</title>

<author title="Autor">
  <mail link="spyderous@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Autor">
  <mail link="joshuabaergen@gentoo.org">Joshua Baergen</mail>
</author>
<author title="Übersetzer">
  <mail link="stefangasten@web.de">Stefan Gasten</mail>
</author>

<abstract>
Dieser Leitfaden zeigt Ihnen, wie Sie zu modularem X.Org migrieren.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.1.1</version>
<date>2006-01-02</date>

<chapter>
<title>Einleitung</title>

<section>
<title>Warum modular?</title>
<body>

<p>
Sie fragen sich vielleicht warum aus einem einfachen xorg-x11-Paket beinahe 300
separate geworden sind. Das wäre auch ein ganz berechtigte Frage. =) Es handelt
sich dabei nicht um etwas, was Gentoo unabhängig von X.Orgs Entwicklung macht;
sie spalten die ganzen Pakete in separate Versionen und wir folgen diesem
Beispiel nur.
</p>

<p>
Für dieses Aufteilen und ändern des Build-Systems gibt es mindestens drei
Gründe:
</p>
<ul>
<li>
Für neue Entwickler ist es zu schwierig sich in X einzuarbeiten. Deswegen der
Wechsel zu automatischen Tools, an welche mehr Leute gewohnt sind.
</li>
<li>
Dementsprechend ist es auch möglich den Quelltext mit autotools aufzuteilen und
das macht es ebenfalls entwicklerfreundlicher.
</li>
<li>
Dinge sind unnötigerweise zusammengelegt worden, was dazu führte, dass Bugfixes
oft nicht entwickelt werden konnten. Und wenn sie entwickelt wurden, so war es
nötig XOrg vollständig neu zu übersetzen. Zum Beispiel müsste ein Bug im
ATI-Treiber entweder 6 Monate bis zur nächsten Version warten, oder man müsste
unnützerweise seine Schriftarten erneut erstellen.
</li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Migration zum modularem X</title>

<section>
<title>Einleitung</title>
<body>

<p>
Um zu verhinden, dass ein alte Pakete im Weg ist, werden wir überflüssigen Müll
vor der Installation von modularem X beseitigen. Dies ist nicht unbedingt
entscheident, aber es wird helfen eine sichere Migration zu garantieren.
</p>
</body>
</section>

<section>
<title>Erster Schritt: Das alte X bereinigen</title>
<body>

<p>
Erstellen Sie sich eine Sicherungskopie Ihres monolithischen xorg-x11 für den
Fall, dass das modulare X nicht zufriedenstellend funktioniert und Sie zu 6.x
zurückkehren möchten.
</p>

<pre caption="Sichern des alten xorg-x11">
# <i>emerge gentoolkit</i>
# <i>quickpkg xorg-x11</i>
</pre>

<p>
Die monolithische Installation loswerden:
</p>

<pre caption="Die monolithische Installation unmergen">
# <i>emerge -Ca xorg-x11 virtual/x11</i>
</pre>

<p>
Wenn Ihr <path>/usr/X11R6</path> kein symbolischer Link auf <path>/usr</path>
ist, löschen Sie diesen und beginnen Sie ganz von vorne. Sichern Sie aber
zunächst eine Liste aller Pakete, die dort installiert sind. Das
<c>gentoolkit</c> Paket stellt <c>equery</c> zur Verfügung.
</p>

<pre caption="Eine Paketliste anfertigen">
# <i>if [[ ! -L /usr/X11R6 ]]; \
	then equery belongs /usr/X11R6 > ~/usr-x11r6-packages \
	&amp;&amp; rm -rf /usr/X11R6; fi</i>
</pre>

</body>
</section>

<section>
<title>Zweiter Schritt: Modulares X installieren</title>
<body>

<p>
Wenn Sie ein stabiles System betreiben, fügen Sie die nötigen Pakete zu
<path>/etc/portage/package.keywords</path> hinzu. Laden Sie die <uri
link="/proj/en/desktop/x/x11/modular-x-packages.txt">Paketliste</uri> runter
und öffnen Sie sie in einem Texteditor Ihrer Wahl. Fügen Sie die komplette
Maske für modulares X in <path>package.keywords</path> ein. Wenn nichts davon
Sinn macht lesen Sie bitte das Handbuch <uri
link="/doc/de/handbook/handbook-x86.xml?part=3&amp;chap=3">Mischen von
Softwarezweigen</uri>.
</p>

<table>
<tr>
  <th>
  Andere Paket, die möglicherweise package.keywords für stabile Benutzer
  voraussetzen
  </th>
</tr>
<tr>
  <ti>&gt;=sys-apps/portage-2.1_pre4</ti>
</tr>
<tr>
  <ti>=sys-apps/man-1.6b-r2</ti>
</tr>
<tr>
  <ti>app-admin/eselect-opengl</ti>
</tr>
<tr>
  <ti>&gt;=app-admin/eselect-1.0_rc1</ti>
</tr>
<tr>
  <ti>media-video/nvidia-kernel</ti>
</tr>
<tr>
  <ti>media-video/nvidia-glx</ti>
</tr>
</table>

<p>
Für Direct Rendering setzen Sie bitte das <c>dri</c> USE-Flag. Es sollte
standardmäßig gesetzt sein.
</p>

<p>
Als nächstes entscheiden Sie, welche Treiber Sie installieren müssen. Dies
variiert basierend auf Ihrer Eingabe- und Video-Hardware. Wenn Sie bereits eine
funktionierende <path>/etc/X11/xorg.conf</path> haben, führen Sie folgenden
Befehl aus, um eine Vorstellung über die benötigten Treiber zu erhalten:
</p>

<pre caption="Herausfinden, welche Treiber gebraucht werden">
# <i>grep Driver /etc/X11/xorg.conf</i>
		Driver      "kbd"
		Driver      "mouse"
		Driver      "radeon"
</pre>

<pre caption="Verfügbare Treiber kontrollieren">
# <i>emerge --verbose --pretend xorg-x11</i>
[ebuild   R   ] x11-base/xorg-x11-7.0-r1  USE="-xprint" INPUT_DEVICES="keyboard
mouse -acecad -aiptek -calcomp -citron -digitaledge -dmc -dynapro -elo2300
-elographics -evdev -fpit -hyperpen -jamstudio -joystick -magellan -magictouch
-microtouch -mutouch -palmax -penmount -spaceorb -summa -synaptics% -tek4957
-ur98 -vmmouse -void" VIDEO_CARDS="i128 mga radeon savage -apm -ark -chips
-cirrus -cyrix -dummy -fbdev -fglrx% -glint -i740 -i810 -imstt -mach64 -neomagic
-newport -nsc -nv -nvidia% -r128 -rendition -s3 -s3virge -siliconmotion -sis
-sisusb -sunbw2 -suncg14 -suncg3 -suncg6 -sunffb -sunleo -suntcx -tdfx -tga
-trident -tseng -v4l -vesa -vga -via -vmware -voodoo" 0 kB
</pre>

<p>
Setzen Sie INPUT_DEVICES und VIDEO_CARDS Ihren Bedürfnissen entsprechend in
<path>/etc/make.conf</path>. Das Minimum der obigen Einstellungen wäre
INPUT_DEVICES="<c>keyboard mouse</c>" VIDEO_CARDS="<c>radeon</c>". Wenn Sie
keine der Variablen setzen, wird xorg-x11 alle möglichen Treiber diesen Typs
einbauen. Als Backup-Treiber sollten Sie vielleicht außerdem <c>vesa</c> und
<c>fbdev</c> zu VIDEO_CARDS hinzufügen.
</p>

<p>
Jetzt installieren Sie das Metabuild. Dies wird den Server und populäre
Anwendungen installieren und Ihnen eine funktionierende Desktop-Implementierung
von X zur Verfügung stellen.
</p>

<pre caption="Installieren des modularen Metabuilds">
# <i>emerge xorg-x11</i>
# <i>etc-update</i>
# <i>revdep-rebuild</i>
# <i>emerge $(&lt;~/usr-x11r6-packages)</i>
</pre>

<note>
Wenn Sie wirklich eine minimale Installation wollen, installieren Sie nur
<c>xorg-server</c>. Dies wird nur das einbauen, was zum Starten des X-Servers
notwendig ist.
</note>

<p>
Diese Installation versucht möglichst klein zu sein, sodass Dinge, wie
xcursor-themes standardmäßig nicht installiert werden. In diesem spezifischen
Beispiel werden Sie xcursor-themes wollen, wenn Sie Ihre Cursor-Einstellung zu
whiteglass, redglass, oder handhelds geändert haben. Wenn Sie die gentoo,
gentoo-blue, oder gentoo-silver Cursorthemes benutzen, installieren Sie
gentoo-xcursors.
</p>

<note>
Bei modularer Installation kann es sein, dass externe Treiber, wie nvidia-glx,
wacom und auch einige vnc-Applikationen nicht arbeiten, wenn diese ihre Sachen
nach <path>/usr/lib/modules</path> anstelle von
<path>/usr/lib/xorg/modules</path> installieren. Viele werden eine Erkennung
für modulares X in die Installationsroutinen eingebaut haben, wodurch sie nach
der Installation von modularem X erneut emerged werden müssen. Außerdem werden
Sie bei vielen Treibern das <c>dlloader</c> USE-Flag setzen müssen.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Vorbehalte/Gängige Probleme</title>
<section>
<title>'emerge -u world' will xorg-x11 6.x, oder virtual/x11 installieren</title>
<body>

<p>
Das kommt daher, dass der Portagetree bisher nicht an die modularen
Abhänigkeiten angepasst wurde. Sie können der Portierung helfen, indem Sie das
<uri link="/proj/en/desktop/x/x11/porting-modular-x-howto.xml">HOWTO zur
Portierung zum modularem X</uri> lesen und Bugs mit Patches für das jeweilige
Paket bei den Entwicklern einreichen. Die Entwickler werden in
<path>metadata.xml</path> aufgeführt werden, welche sich im selben Verzeichnis
wie das Paket befindet und das <c>herdstat</c> Paket wird die Anfragen darauf
beschleunigen.
</p>

<p>
Vor allem, wenn Sie modulares X auf einem anderweitig stabilen System
betreiben werden Sie mit dieser Angelegenheit konfrontiert werden. Viele
Pakete arbeiten nur in der ~arch-Version mit modularem X, also werden Sie
womöglich zusätzliche Pakete der <path>/etc/portage/package.keywords</path>
hinzufügen müssen.
</p>

</body>
</section>
<section>
<title>Was ist mit den ganzen USE-Flags passiert?</title>
<body>

<p>
Viele der USE-Flags in xorg-x11-6.8-Serie verschwanden oder verschoben sich in
7.0. Es erschienen neue USE-Flages. Und hier, wieso:
</p>

<table>
<tr>
  <th>USE-Flag</th>
  <th>Was passierte in 7.0?</th>
</tr>
<tr>
  <ti>3dfx</ti>
  <ti>In 7.0 beinhaltet das xorg-x11 Metabuild glide-v3</ti>
</tr>
<tr>
  <ti>3dnow, mmx, sse</ti>
  <ti>Standardmäßig beim Erstellen aktiviert, weil es Laufzeit-Checks gibt</ti>
</tr>
<tr>
  <ti>bitmap-fonts, truetype-fonts, type1-fonts</ti>
  <ti>
    Das xorg-x11 Metabuild beinhaltet eine geringe Auswahl der am meisten
    benutzten oder benötigten Schriften. Sie können zusätzlich alle weiteren
    vorhanden in media-fonts/ installieren.
  </ti>
</tr>
<tr>
  <ti>cjk</ti>
  <ti>
    Verwenden Sie USE=nls bei font-misc-misc und font-sony-misc um
    japanische JISX0201 Schriften zu erhalten. Weitere befinden sich in
    font-jis-misc. Chinesische Schriften sind in font-isas-misc. Koreanische
    Schriften sind in font-daewoo-misc.
  </ti>
</tr>
<tr>
  <ti>dlloader</ti>
  <ti>
    7.0 verwendet dlloader standardmäßig und der elfloader funktioniert nicht.
  </ti>
</tr>
<tr>
  <ti>doc</ti>
  <ti>Verschoben nach app-doc/xorg-docs</ti>
</tr>
<tr>
  <ti>dmx</ti>
  <ti>In xorg-server eingebaut, sofern nicht USE=minimal.</ti>
</tr>
<tr>
  <ti>font-server</ti>
  <ti>Sie können xfs manuell installieren.</ti>
</tr>
<tr>
  <ti>ipv6</ti>
  <ti>
    Verschoben in individuelle Pakete, welche dies verwenden. Setzen Sie es
    global, wenn Sie es wünschen.
  </ti>
</tr>
<tr>
  <ti>minimal</ti>
  <ti>
    Um den selben Effekt zu erzielen, installieren Sie einfach xorg-server
    anstelle von xorg-x11. USE=minimal beim xorg-server verhindert das
    Erstellen von Xdmx, Xvfb und Xnest. Wenn Sie etwas minimaleres wünschen,
    sehen Sie sich x11-base/kdrive an.
  </ti>
</tr>
<tr>
  <ti>nls</ti>
  <ti>
    In 7.0, installiert USE=nls alle nicht-ISO8859-1 Versionen der Schriften.
  </ti>
</tr>
<tr>
  <ti>nocxx</ti>
  <ti>Bisher nichts äquivalentes in 7.0</ti>
</tr>
<tr>
  <ti>opengl</ti>
  <ti>
    Hat den Namen zu "dri" gewechselt, welches Direct Rendering in xorg-server
    und vielen Treibern aktiviert. Ob USE=dri gesetzt ist, oder nicht, Sie
    sollten dennoch Software-3D mittels Mesa bekommen.
  </ti>
</tr>
<tr>
  <ti>pam</ti>
  <ti>
    Verschoben in individuelle Pakete, die dies verwenden, wie zum Beispiel
    xorg-server und xdm.
  </ti>
</tr>
<tr>
  <ti>sdk</ti>
  <ti>7.0 muss SDK, als eine Konsequenz der Modularisierung, installieren.</ti>
</tr>
<tr>
  <ti>static</ti>
  <ti>
    Normalerweise macht es nicht allzu viel Sinn einen statischen Server in
    einer modularen Umgebung zu erstellen, da der Treiber nicht eingebaut
    werden kann.
  </ti>
</tr>
<tr>
  <ti>xprint</ti>
  <ti>
    Beim Metabuild in libXp eingebaut. Bei anderen Applikationen wird
    xprint-Support eingebaut. Die meisten werden dies nicht aktivieren wollen.
  </ti>
</tr>
<tr>
  <ti>xv</ti>
  <ti>
    Nicht länger optional, da es nicht viel an Platz spart und in Verbindung
    mit anderen Paketen, die es voraussetzen, Probleme verursacht.
  </ti>
</tr>
</table>

</body>
</section>

<section>
<title>Treiberprobleme</title>
<body>

<p>
Ich habe Berichte erhalten, dass:
</p>

<ul>
  <li>vesa den Rechner bei Matrox-Karten einfriert</li>
  <li>
    vga einen eigenartigen Bildschirm produziert, der in Quadrate aufgeteilt
    ist
  </li>
</ul>
</body>
</section>
<section>
<title>3D-Beschleunigung wieder an's Laufen bekommen</title>
<body>

<p>
Um einige Debug-Informationen zu bekommen, die dabei helfen Direct Rendering
an's Laufen zu bekommen:
</p>

<pre caption="Einige Debug-Informationen erhalten">
# <i>grep -e EE -e WW /var/log/Xorg.0.log</i>
# <i>LIBGL_DEBUG=verbose glxinfo</i>
</pre>

</body>
</section>
<section>
<title>Maus-Protokoll Autoerkennung</title>
<body>

<p>
Wenn Sie <c>"Protocol" "auto"</c> in der xorg.conf für Ihre Maus gesetzt haben,
funktioniert sie möglicherweise nicht. Sie müssen eventuell
<c>"Protocol" "ExplorerPS/2"</c> oder <c>"IMPS/2"</c> eintragen damit Ihr
Mausrad funktioniert.
</p>

</body>
</section>
<section>
<title>Ich bekomme Fehlermeldungen, dass libbitmap oder libpcidata nicht gefunden werden konnten</title>
<body>

<p>
Stellen Sie sicher, dass kein <c>ModulePath</c> Eintrag in
<path>/etc/X11/xorg.conf</path> existiert.
</p>

</body>
</section>
<section>
<title>gdm/kdm funktionieren nicht</title>
<body>

<p>
Wenn Sie modulares X auf einer frischen Gentoo-Installation eingerichtet haben,
werden Sie womöglich keinen <path>/usr/X11R6</path> -&gt; <path>/usr</path>
Symlink haben. Das <c>x11-base/xorg-x11</c> Paket wird sicherstellen, dass der
symbolische Link während des emerge-Prozesses besteht.
</p>

<p>
Indem Sie die Pakete ausbessern, die sich dorthin installieren, können Sie
dabei helfen die Dinge aus <path>/usr/X11R6</path> zu entfernen. Vergessen Sie
außerdem nicht, diese Paket zu re-installieren.
</p>

<pre caption="Pakete, die nach /usr/X11R6 installieren">
# <i>cat ~/usr-x11r6-packages</i>
# <i>emerge --pretend $(&lt; ~/usr-x11r6-packages )</i>
</pre>

</body>
</section>

<section>
<title>XKB funktioniert nicht, ich kann nicht zwischen virtuellen Konsolen wechseln, usw.</title>
<body>

<ul>
  <li>
    Viele XKB-Layouts sind gewandert, konsolidiert oder verschwunden. Werfen
    Sie einen Blick auf <path>/usr/share/X11/xkb/symbols/</path>, um zu sehen,
    was mit Ihren alten XKB-Layouteinstellungen in xorg.conf passiert ist. Zum
    Beispiel: Um das alte "us_intl"-Layout zu ersetzen, würden Sie
    <c>"XkbLayout" "latin"</c>, <c>"XkbOptions"	"lv3:ralt_switch"</c>
    einsetzen. Um das alte "sk_qwerty"-Layout zu ersetzen, würden Sie
    <c>"XkbLayout" "sk"</c>, <c>"XkbVariant" "qwerty"</c> einsetzen. Ein
    detaillierteres Beispiel, Sie haben eventuell
    <c>"XkbLayout" "us,sk_qwerty"</c>: Um das an's Laufen zu bekommen wäre die
    neue Einstellung <c>"XkbLayout" "us,sk"</c> und der Trick ist das Komma in
    diesem Abschnitt hier: <c>"XkbVariant" ",qwerty"</c>, da Sie diese Variante
    dem zweiten Layout zuordnen.
  </li>
</ul>

<pre caption="XKB-Änderungen ausfindig machen">
<comment>Checken Sie /var/log/Xorg.0.log auf diese Nachricht:</comment>
<comment>(WW) Couldn't load XKB keymap, falling back to pre-XKB keymap</comment>
<comment>Wenn Sie diesen Fehler nicht haben, funktioniert Ihr XKB bereits.</comment>
# <i>grep Xkb /etc/X11/xorg.conf</i>
        Option "XkbModel"  "logibik"
        Option "XkbLayout"  "dvorak"
        Option "XkbOptions" "ctrl:swapcaps"
<comment>Betrachten Sie als erstes, was sich an Ihrem Layout geändert hat. Dies ist das symbols/pc Verzeichnis.</comment>
# <i>cd /usr/share/X11/xkb/symbols/</i>
<comment>Wenn Sie xkbdata anstelle von xkeyboard-config installiert haben, wechseln Sie in das pc/ Unterverzeichnis.</comment>
# <i>ls *dvorak*</i>
<comment>OK, nichts wird angezeigt.</comment>
<comment>Viele der alten Layouts wurden in in ihre regionalen Keymaps verschoben.</comment>
# <i>ls *us*</i>
us
<comment>Jetzt suchen wir eine xkb_symbols-Variante names dvorak.</comment>
# <i>grep xkb_symbols.*dvorak us</i>
xkb_symbols "dvorak" {
<comment>Dies bedeutet, dass wir in der xorg.conf die Optionen "XkbLayout" "us"</comment>
<comment>und "XkbVariant" "dvorak" benötigen.</comment>

<comment>Wenn wir dies jedoch mit setxkbmap testen, erhalten wir immernoch einen Fehler.</comment>
# <i>setxkbmap -model logibik -layout us -variant dvorak -option "ctrl:swapcaps"</i>
<comment>Vielleicht hat das Model sich ebenfalls geändert.</comment>
# <i>cd /usr/share/X11/xkb/rules/</i>
# <i>grep logibik xorg.lst</i>
<comment>Keine Ausgabe, also ist das Model weg. Was ist mit ähnlichen?</comment>
# <i>grep logi* xorg.lst</i>
  logiaccess      Logitech Access Keyboard
  logicdit        Logitech Cordless Desktop iTouch
  logicdp         Logitech Cordless Desktop Pro
  logicdpa        Logitech Cordless Desktop Pro (alternate option)
  logicdpa2       Logitech Cordless Desktop Pro (alternate option2)
  logicdo         Logitech Cordless Desktop Optical
  logicfn         Logitech Cordless Freedom/Desktop Navigator
  logicdn         Logitech Cordless Desktop Navigator
  logidak         Logitech Deluxe Access Keyboard
  logiitc         Logitech iTouch Cordless Keyboard (model Y-RB6)
  logiik          Logitech Internet Keyboard
  logiitc         Logitech iTouch Cordless Keyboard (model Y-RB6)
  logiik          Logitech Internet Keyboard
  logiink         Logitech Internet Navigator Keyboard
  logiultrax      Logitech Ultra-X Keyboard
<comment>Gut! Das "logiik"-Model sieht ähnlich aus, also testen Sie es mit setxkbmap.</comment>
# <i>setxkbmap -model logiik -layout us -variant dvorak -option "ctrl:swapcaps"</i>
<comment>Es funktioniert, also ändern Sie den XkbModel-Eintrag in dieses.</comment>
<comment>Danach funktioniert alles.</comment>
</pre>

</body>
</section>

<section>
<title>Andere Probleme</title>
<body>

<ul>
  <li>
    Das <c>x11-base/xorg-x11</c>-Paket filtert nun alle ModulePath- und
    RgbPath-Zeilen aus ihrer <path>/etc/X11/xorg.conf</path>, da beide
    dieser Pfade sich seit den früheren Versionen geändert haben. Stellen
    Sie sicher, dass Sie <c>etc-update</c> ausgeführt haben, um diese
    Änderungen abzuschließen. Wenn Sie aus irgendeinem Grund nicht
    rausgefiltert wurden, entfernen Sie sie selbst.
  </li>
</ul>

</body>
</section>
</chapter>
</guide>
