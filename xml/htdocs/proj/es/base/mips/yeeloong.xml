<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="es">
<title>Escritorio Gentoo para el netbook Lemote Yeeloong</title>
<author title="Autor">
  <mail link="blueness@gentoo.org">Anthony G. Basile</mail>
</author>
<author title="Traductor">
  <mail link="nimiux"/>
</author>

<abstract>
El objetivo del escritorio Gentoo para el miniportátil Lemote Yeeloong
es ofrecer un escritorio base XFCE4 preparado para instalar en el
ordenador Yeeloong.
</abstract>

<version>1.0</version>
<date>2012-08-19</date>

<chapter>
<title>Introducción</title>
<section>
<body>

<p>
El miniportátil Lemote Yeeloong está basado en un procesador MIPS de
64 bits (little endian), llamado el loongson2f, y que fabrica
<uri link="http://www.lemote.com/en/">lemote.com</uri>. Se jacta de
ser el único hardware del mercado que respeta su libertad, esto es,
hardware que corre de forma pura con software de código abierto a
todos los niveles. No contiene ningún objeto binario (blobs)
propietario que el hardware necesite para funcionar, incluso su
firmware de inicio (<uri link="http://www.pmon2000.com/">PMON</uri>)
se ha liberado bajo una licencia copyleft. Es el miniportátil elegido
por Richard Stallman. <uri link="http://freedomincluded.com/">Freedom
Included</uri> lo distribuye en los Estados Unidos. Eche un vistazo
a su página web para averiguar porqué la elección del hardware
es una decisión política y porqué la libertad importa.
</p>

<p>
La iniciativa "Escritorio Gentoo para el netbook Lemote Yeeloong" es
parte de una mayor dentro del proyecto Gentoo para dar soporte a los
sistemas basados en MIPS. Comenzamos todo esto porque el hecho de
compilar en el Yeeloong es lo suficientemente lento que es molesto
construir un sistema útil para cualquier usuario medio a partir de
una fichero tarball clásico de Gentoo. Podríamos realizar una
compilación cruzada en una arquitectura diferente y más rápida, sin
embargo, esto no siempre produce el mejor código nativo. Por lo tanto,
con un escritorio pre-construido, esperamos dar al usuario final una
base para producir un entorno con el que (esperamos) estén en mayor
medida conformes. Cualquier usuario podrá realizar su construcción
a partir de esta base. El lado malo de todo esto es que va en contra
del "estilo Gentoo" que trata de dar la mayor libertad de elección
al usuario, sin embargo, ofrecemos un stage3 para aquéllos que lo
deseen, por lo tanto ¡elija!.
</p>

<p>
Actualmente la elección del escritorio está basada en XFCE4. No
intentamos siquiera basarla en Gnome o KDE debido a su gran tamaño y
a que mucho de su software están en mal estado para la arquitectura
MIPS. El gran tamaño de estos proyectos, sin embargo, fue el factor
decisivo. Siempre podremos trabajar en los paquetes de Gnome para
que vuelvan a funcionar correctamente en una arquitectura MIPS, pero,
en un sistema con un procesador de unos 600MHz con 1GB de RAM.
¿Realmente necesitamos realizar un desarrollo con estos proyectos
gigantescos?. Podemos también expandir nuestro desarrollo hacia
otros sistemas de escritorio como LXDE. ¡Díganos lo que desea!.
</p>

<p>
También estamos trabajando con dos "sabores" de cada escritorio, el
llamado "vanilla" y el "hardened". Los dos son idénticos en lo que
a paquetes ofrecidos se refiere, salvo que la imagen hardened se
construye utilizando un juego de herramientas (toolchain) hardened
que es mantenido por el equipo Hardened Gentoo. Esto significa
que todos los binarios ELF son ET_DYN (no ET_EXE, por lo que el
espacio de direcciones se aleatoriza de forma más conveniente), tienen
SSP (Protección contra Ataques a la Pila y contra desbordamientos
de búfer), PIE (Código Independiente de la Posición, también con
una mejor aleatorización del espacio de direcciones) y
FORTIFY_SOURCES=2 (funciones de la librería glibc con protección
extra).  Los binarios también están enlazados con relro
(Relocalización de solo lectura) y lazos instantáneos (bind-now)
para evitar la redirección de símbolos.
</p>

<p>
Parece que hardened es un claro vencedor sobre vanilla, excepto que
posee una penalización en cuanto a rendimiento. No algo como en el
caso de la arquitectura i686 pero apreciable. Quizá una pérdida
entre un cinco y un diez por ciento, no hemos realizado una
medida correcta. Además, si está compilando sus propios binarios,
puede que encuentre algún fallo exótico en el sabor hardened que
no obtendrá con el vanilla. De nuevo, esto es menos común que en
la arquitectura i686. En estos casos, el problema radica en código
ensamblador escrito de forma incorrecta que no se adecúa a PIC/PIE.
Ya que está utilizando una arquitectura mips64el, lo más probable
es que el código ensamblador no se haya portado, por lo que ¡no
hay nada que se pueda romper!
</p>

<p>
Se recomienda utilizar el sabor hardened a los usuarios comunes. La
seguridad extra que ofrece compensará los otros factores.
</p>

<p>
Estamos realizando un desarrollando activo y todo sigue su camino,
cuando las cosas maduren, cambiaremos este párrafo. Tenemos algunas
cuestiones pendientes. Sin embargo, la más importante es el usuario.
¿Qué deberíamos incluir y qué no?.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Metas</title>
<section>
<body>

<p>
El propósito de al iniciativa "Escritorio Gentoo para Lemote Yeeloong"
es la construcción de escritorios basados en Gentoo preparados para
ser instalados en los miniportátiles Lemote Yeeloong para facilitar
el tedioso proceso de construir un sistema de escritorio completo desde
un fichero tarball stage3. Como meta secundaria, persigue portar los
juegos de herramientas hardened y las características del núcleo que
actualmente están disponibles en las arquitecturas amd64 y x86 a la
arquitectura mips.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Instalación</title>
<section>
<body>

<p>
En primer lugar, ¿Dónde podemos encontrar las imágenes que vamos a
necesitar?. Todo lo que necesita están en los
<uri link="http://www.gentoo.org/main/en/mirrors2.xml">servidores
réplica de Gentoo</uri>, bajo experimental/mips/desktop-loongson2f.
Necesitará dos imágenes, la de arranque, llamada netboot-yeeloong.img
y la del escritorio, un solo fichero tarball, llamado
desktop-loongson2f-[sabor]-[fecha].tar.lzma, donde [sabor] es bien
"hardened", bien "vanilla" y [fecha] es la fecha de liberación.
Vamos a intentar producir una nueva versión cada mes. Tal y como se
menciona arriba, esto es válido solo para XFCE4, sin embargo, en
caso de liberar más escritorios, lo notaremos de forma explicita
en el nombre de la imagen.
</p>

<p>
Y ahora, ¿Cómo instalo todo esto en mi Lemote Yeeloong?.
</p>

<ul>
  <li>
    Prepare la imagen de inicio: Obtenga el fichero llamado
    netboot-yeeloong.img y póngalo en un servidor tftp o en una memoria
    USB en algún camino/a/. Asegúrese de que la memoria USB tiene un
    sistema de ficheros FAT32, EXT2 o EXT3, pero <b>no</b> EXT4. PMON
    no reconoce EXT4.
  </li>
  <li>
    Inicie en sistema en un entorno de rescate, para ello, encienda
    el lemote y presione la tecla Supr (Del) varias veces. Debería
    ver un símbolo de espera de órdenes indicando PMON> probablemente
    con algunos caracteres basura, normalmente varias letras G. Presione
    la tecla de retroceso para eliminar esta basura.
  </li>
  <li>
    Si inicia el sistema desde la red mediante un servidor tftp, entonces
    teclee:
    <ul>
      <li>PMON> ifaddr rtl0 [mi_ip]</li>
      <li>PMON> load tftp://[tftp_ip]/path/to/netboot-yeeloong.img</li>
      <li>PMON> g</li>
    </ul>
    Cambie [mi_ip] por la dirección ip del lemote yeeloong y [tftp_ip]
    por la dirección ip de su servidor tftp.
  </li>
  <li>
    Por el contrario, si quiere iniciar el sistema desde una memoria
    USB, teclee:
    <ul>
      <li>PMON> load /dev/fs/ext2@usb0/camino/a/netboot-yeeloong.img</li>
      <li>PMON> g</li>
    </ul>
    En este punto obtendrá una imagen ramdisk con busybox y algunas
    utilidades para tener su sistema a punto. Presione la tecla Intro
    un par de veces si no obtiene un símbolo espera de órdenes del
    intérprete de comandos.
  </li>
  <li>
    Prepare una partición raíz y móntela:
    <ul>
      <li>Usando fdisk, prepare al menos estas particiones:
        <ul>
          <li>/dev/sda1 - ésta será /boot, asígnele unos 128 MB.</li>
          <li>
            /dev/sda2 - ésta será la partición de intercambio, asígnele
            al menos 1 GB.
          </li>
          <li>
            /dev/sda3 - ésta será root, asígnele una cantidad
            generosa, al menos 6 GB.
          </li>
        </ul>
          /boot únicamente tiene que contener uno o dos núcleos, por
          lo que puede hacerlo con menos espacio, sin embargo para
          las otras particiones se indican los mínimos necesarios.
          Yo utilizo 4GB para la partición de intercambio y 40GB para
          root.
      </li>
      <li>
        mdev necesita escanear de nuevo los dispositivos después de
        realizar el (re)particionamiento. Podría ahora reiniciar el
        sistema, pero es más sencillo, hacer simplemente:
        <ul>
          <li>mdev -s</li>
        </ul>
      </li>
      <li>Dé formato a las particiones:
        <ul>
          <li>
            mke2fs /dev/sda1 - no utilice EXT4 ya que PMON no lo
            comprende.
          </li>
          <li>mkswap /dev/sda2</li>
          <li>
            mkfs.ext4 /dev/sda3 - utilice el probado y auténtico EXT4
          </li>
        </ul>
      </li>
      <li>Móntelo
        <ul>
          <li>mkdir -p /mnt/gentoo</li>
          <li>mkdir -p /mnt/gentoo/boot</li>
          <li>mount /dev/sda3 /mnt/gentoo</li>
          <li>mount /dev/sda1 /mnt/gentoo/boot</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    Descargue y desempaquete las imágenes tarball:
    <ul>
      <li>cd /mnt/gentoo</li>
      <li>wget http:/[servidorréplica]/gentoo/experimental/mips/desktop-loongson2f/desktop-loongson2f-[sabor]-[fecha].tar.lzma</li>
      <li>tar xf desktop-loongson2f-[sabor]-[fecha].tar.lzma</li>
    </ul>
    Cambie [servidorréplica] por el nombre de dominio (FQDN) de su
    servidor réplica de Gentoo favorito, cambie [sabor] por "hardened"
    o "vanilla" y cambie [fecha] por la fecha de la versión.
  </li>
  <li>
    Si cambió cualquiera de los valores de arriba por /dev/sda* edite
    el fichero boot.cfg. Puede encontrarlo en /mnt/gentoo/boot/boot.cfg.
  </li>
  <li>
    Reinicie su yeeloong. PMON debería encontrar el núcleo, pero si no
    lo hace, entonces teclee:
    <ul>
      <li>PMON> load /dev/fs/ext2@wd0/boot/vmlinuz</li>
      <li>PMON> g console=tty root=/dev/sda3</li>
    </ul>
  </li>
  <li>
    Ingrese en el sistema y, ¡Disfrute!
    <ul>
      <li>user: gentoo</li>
      <li>pass: gentoo</li>
    </ul>
    o
    <ul>
      <li>user: root</li>
      <li>pass: root</li>
    </ul>
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Desarrolladores</title>
<section>
<body>

<table>
<tr>
  <th>Desarrollador</th>
  <th>Alias</th>
  <th>Rol</th>
</tr>
<tr>
  <ti>Anthony G. Basile</ti>
  <ti>blueness</ti>
  <ti>Responsable</ti>
</tr>
</table>

</body>
</section>
</chapter>

<chapter>
<title>Informe sobre errores</title>
<section>
<body>

<p>
Por favor, envíenos peticiones de mejoras e informes de errores a
<uri link="https://bugs.gentoo.org">bugs.gentoo.org</uri> y bloquee
con su informe la
<uri link="https://bugs.gentoo.org/show_bug.cgi?id=282265">
incidencia #282265</uri>. Asigne su informe a mips@gentoo.org.
</p>

</body>
</section>
</chapter>
</guide>
