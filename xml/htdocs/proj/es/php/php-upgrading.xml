<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/es/php/Attic/php-upgrading.xml,v 1.2 2007/11/06 00:12:40 chiguire Exp $ -->

<guide link="/proj/es/php/php-upgrading.xml" lang="es">
<title>Actualizando PHP</title>

<author title="Author">
 <mail link="akorthaus@web.de">Andreas Korthaus</mail>
</author>
<author title="Traductor">
  <mail link="warp3r@gmail.com">Jordi Molina</mail>
</author>

<abstract>
Este documento explica el procedimiento que un usuario final debería
seguir para actualizar con seguridad su instalación de PHP.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.2</version>
<date>2007-08-11</date>

<chapter>
<title>Introducción</title>
<section>
<body>

<p>
En el pasado han existido muchas peticiones sobre por qué PHP5 dentro
de Portage no está marcado todavía como estable. El problema no es el
propio paquete de PHP5, el principal motivo por el que PHP5 no estaba
marcado como aún estable es que existen diversas aplicaciones,
extensiones de PHP y otros paquetes en Portage, que no funcionan con
PHP5, y no hay nada que se pueda hacer al respecto. PHP5 no es 100%
retro-compatible con PHP4, y no todo programa PHP4 puede ser o será
portado a PHP5. Muchos usuarios van a seguir necesitando soporte para
PHP4 durante un tiempo.
</p>

<p>
La solución para solucionar todos estos problemas es proporcionar un
entorno mixto PHP4 / PHP5 en el mismo sistema y al mismo tiempo. Pero
esto no era posible con el esquema actual de paquetes PHP y eclasses,
de ahí la necesidad de hacer un gran esfuerzo en un nuevo esquema,
nuevas eclasses y nuevos ebuilds.
</p>

<p>
Este documento explica con detalle como actualizar tu sistema sin
destrozarlo.
</p>

<note>
Los nuevos paquetes de PHP requieren el nuevo esquema de Apache, así
que échale un vistazo a <uri
link="/doc/es/apache-upgrading.xml">Actualizando Apache</uri> si no
has actualizado todavía.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Cambios</title>
<section>
<title>Paquetes básicos de PHP consolidados</title>
<body>

<p>
Todos los ebuilds PHP <c>dev-php/php</c>, <c>dev-php/php-cgi</c> y
<c>dev-php/mod_php</c> han sido unidos en un solo ebuild:
<c>dev-lang/php</c>.
</p>

<p>
Para escoger el SAPI que quieres, usa los siguientes USE flags,
</p>

<ul>
  <li><c>cgi</c> - compila y instala <path>/usr/bin/php-cgi</path></li>
  <li><c>cli</c> - compila y instala <path>/usr/bin/php</path></li>
  <li><c>apache</c> - compila y instala <c>mod_php</c> for Apache 1.3  (
nuevo esquema)</li>
  <li><c>apache2</c> - compila y instala <c>mod_php</c> for Apache 2.0  
(nuevo esquema)</li>
</ul>

<p>
Puedes usar y combinar cualquiera de estas USE flags; con la excepción
de usar simultáneamente<c>apache</c> y <c>apache2</c>.
</p>

<p>
El principal objetivo de estos ebuilds es que puedas tener instalados
al mismo tiempo PHP4 y PHP5:
</p>

<pre caption="instalando PHP">
<comment>(instala la última versión de PHP con CLI y el módulo para Apache2)
</comment>
<i>USE="cli apache2" emerge 'dev-lang/php'</i>

<comment>(instala sólo PHP4)</comment>
<i>USE="cli apache2" emerge '=dev-lang/php-4*'</i>

<comment>(instalar ambos, PHP4 y PHP5)</comment>
<i>USE="cli apache2" emerge '=dev-lang/php-4*' '=dev-lang/php-5*'</i>
</pre>

<note>
Los parámetros USE no deberían utilizarse de esta forma, por favor,
usa <path>/etc/portage/package.use</path> como te explicamos después.
</note>
</body>
</section>

<section>
<title>Nuevas categorías en Portage</title>
<body>

<p>
Los nuevos ebuilds de PHP se han movido de <c>dev-php</c> a
<c>dev-lang/php</c>.  Para hacer posible la instalación independiente
de paquetes para PHP4 y PHP5, se han creado dos nuevas categorías de
portage: <c>dev-php4</c> y <c>dev-php5</c>. Estas categorías son
usadas principalmente pro paquetes PECL como <c>pecl-pdo</c>,
<c>pecl-apc</c>, <c>php-java-bridge</c> o <c>xdebug</c>.
</p>

<p>
Para instalar <c>pecl-apc</c>:
</p>

<pre caption="instalar una extension PHP como PECL::APC (ejemplo)">
<comment>(instalar APC para PHP4 solamente)</comment>
<i>emerge dev-php4/pecl-apc</i>

<comment>(instalar APC para PHP5 solamente)</comment>
<i>emerge dev-php5/pecl-apc</i>

<comment>(instalar APC para ambos, PHP4 y PHP5)</comment>
<i>emerge dev-php4/pecl-apc dev-php5/pecl-apc</i>
</pre>
</body>
</section>

<section>
<title>Nuevos directorios</title>
<body>

<ul>
  <li>
    Estos nuevos ebuilds instalan sus contenidos en
    <path>/usr/lib/php4</path> y <path>/usr/lib/php5</path> (los
    módulos Apache van al lugar adecuado para Apache).
  </li>
  <li>
    Los paquetes PEAR se instalan en <path>/usr/share/php</path>
    (antes <path>/usr/lib/php</path> ), si usas <c>pear</c> como USE
    flag.
  </li>
  <li>
    Los paquetes PECL no volverán a añadir directivas de configuración
    al archivo de configuración <path>php.ini</path>, a partir de
    ahora lo harán en archivos del tipo <path>[PACKAGE].ini</path> en
    la ruta <path>/etc/php/[SAPI]/ext</path>.
  </li>
</ul>
</body>
</section>

<section>
<title>Enlaces simbólicos de los binarios de PHP</title>
<body>

<p>
Si instalas más de una versión de PHP, p.ej.:
</p>

<pre caption="emerge PHP4 y PHP5">
<i>USE="cgi cli apache2" emerge '=dev-lang/php-4*' '=dev-lang/php-5*'</i>
</pre>

<p>
Los ebuilds crearán enlaces simbólicos en <path>/usr/bin</path> para
la última versión de PHP que hayas instalado, en este caso PHP5 ya que
se instaló después de PHP4.  Si quieres que <path>/usr/bin/php</path>
o <path>/usr/bin/php-cgi</path> apunten a PHP4 o uno a PHP4 y otro a
PHP5, etc.  puedes <uri link="#doc_chap3_sect6">usar la herramienta
php-select</uri> del ebuild
<c>app-admin/php-toolkit</c>. <c>php-select</c> simplifica crear
enlaces simbólicos de los binarios adecuados.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Instrucciones para la actualización</title>
<section>
<title>Encontrar los paquetes a actualizar</title>
<body>

<p>
Lo primero que necesitarás saber es que paquetes adicionales necesitas
actualizar. Puedes averiguar esto usando la herramienta <c>equery</c>,
parte del paquete <c>app-portage/gentoolkit</c>:
</p>

<pre caption="Lista los paquetes instalados en dev-php">
$ <i>equery list 'dev-php/'</i>
[ Searching for all packages in 'dev-php' among: ]
 * installed packages
[I--] [  ] dev-php/php-4.4.0 (0)
[I--] [  ] dev-php/mod_php-4.4.0 (1)
[I--] [  ] dev-php/smarty-2.6.10 (0)
[I--] [  ] dev-php/PEAR-PEAR-1.3.5-r1 (0)
[I--] [  ] dev-php/PEAR-Mail-1.1.6 (0)
[I--] [  ] dev-php/PEAR-MDB-1.3.0 (0)
[I--] [  ] dev-php/PECL-apc-3.0.6 (0)
[I--] [  ] dev-php/PECL-imagick-0.9.11 (0)
[I--] [  ] dev-php/xdebug-2.0.0_beta3 (0)
</pre>

<impo>
Los paquetes que puedas tener instalados son muy diferentes, asegurate
de que ejecutas este comando por ti mismo. Deberías también tomar nota
de la lista que genere dicho comando, para poder asegurarte de que
actualizas todos los paquetes.
</impo>

<note>
Algunas webapps no se ven afectadas, dado que muchas de ellas usan la
eclass webapp que se encarga de instalarlas correctamente. Seguramente
quieras comprobar si hay alguna nueva revisión.
</note>

<p>
Las extensiones PHP, como por ejemplo
</p>

<ul>
  <li><c>PECL-apc</c></li>
   <li><c>PECL-imagick</c></li>
   <li><c>xdebug</c></li>
</ul>

<p>
Se han dividido en 2 categorías separadas de portage: <c>dev-php4</c>
y <c>dev-php5</c>, para permitir usarlas independientemente en ambas
versiones.  Adicionalemente, muchos de estos paquetes han sido
renombrados:
</p>

<p>
Ejemplos de nuevos directorios y cambios de nombre:
</p>

<table>
  <tr>
    <th>Extensión PHP</th>
    <th>viejo</th>
    <th>nuevo en PHP4</th>
    <th>nuevo en PHP5</th>
  </tr>
  <tr>
    <ti>APC</ti>
    <ti>dev-php/PECL-apc</ti>
    <ti>dev-php4/pecl-apc</ti>
    <ti>dev-php5/pecl-apc</ti>
  </tr>
  <tr>
    <ti>Imagick</ti>
    <ti>dev-php/PECL-imagick</ti>
    <ti>dev-php4/pecl-imagick</ti>
    <ti>dev-php5/pecl-imagick</ti>
  </tr>
  <tr>
    <ti>Xdebug</ti>
    <ti>dev-php/xdebug</ti>
    <ti>dev-php4/xdebug</ti>
    <ti>dev-php5/xdebug</ti>
  </tr>
</table>

<note>
Antes de emerger estas extensiones de nuevo, deberías buscar en
<path>/usr/portage</path> como se han renombrado los paquetes.
</note>
</body>
</section>

<section>
<title>Eliminar los viejos paquetes</title>
<body>

<p>
Hemos hecho diversos cambios en como PHP trabaja dentro de
Gentoo. Debes eliminar todos tus antiguos paquetes de PHP antes de
empezar a instalar los nuevos:
</p>

<pre caption="eliminando los paquetes viejos (ejemplo)">
<comment>(desinstala los paquetes de PHP)</comment>
<i>emerge --unmerge php mod_php</i>

<comment>(desinstala las extensiones de PHP)</comment>
<i>emerge --unmerge PECL-apc PECL-imagick xdebug</i>

<comment>(desinstala las librerías/aplicaciones PHP)</comment>
<i>emerge --unmerge PEAR-PEAR PEAR-Mail PEAR-MDB smarty</i>
</pre>
</body>
</section>

<section>
<title>Configurar los USE flags</title>
<body>

<p>
Dado que se han añadido nuevas USE flags, posiblemente quieras
revisarlas y añadir las lineas apropiadas en
<path>/etc/portage/package.use</path> (deberás crearlo si no existe).
</p>

<note>
<path>/etc/portage/package.use</path> establecerá y recordará las USE
flags para tu instalación de PHP sin tener que añadirlas de forma
global en <path>make.conf</path>.
</note>

<p>
Por favor, configura las USE flags de acuerdo con lo que quieras que
tu instalación soporte (se recomienda como mínimo configurar la USE
flag <c>cli</c>):
</p>

<pre caption="USE flags para dev-lang/php (ejemplo)">
dev-lang/php -* cli apache2 ctype gd jpeg mysql pcre png session truetype xml xsl zlib
</pre>

<note>
<c>-*</c> desactivará todas las USE flags (incluyendo funcionalidad
básica PHP como Session-, PCRE-, gd- y el soporte para MySQL-!), así
que tendrás que especificar cada USE flag para cada
extensión/funcionalidad que quieras usar.  Visita <uri
link="http://overlays.gentoo.org/proj/php/wiki/ManagingExtensions">
Managing Extensions</uri> para obtener detalles. Debes poner la USE
flag <c>pcre</c> como se indica arriba si quieres usar <uri
link="http://overlays.gentoo.org/proj/php/wiki/PhpRefPcre"> funciones
preg_* </uri> o <c>session</c> si quieres usar <uri
link="http://overlays.gentoo.org/proj/php/wiki/PhpRefSession">
Funciones de gestión de sesión</uri>.
</note>

<p>
Si quieres instalar PHP4 y PHP5 en paralelo, puedes indicar diferentes
parámetros USE para cada versión:
</p>

<pre caption="diferentes USE flags para PHP4 y PHP5 (ejemplo)">
=dev-lang/php-4* -* cgi cli ctype gd jpeg mysql pcre pear png session truetype xml xsl zlib
=dev-lang/php-5* -* cli apache2 ctype gd jpeg mysql pcre pdo-external pear png session simplexml soap sqlite truetype xml xsl zlib
</pre>

<note>
Para una lista de los parámetros USE recomendadas, échale un vistazo a
<uri link="http://overlays.gentoo.org/proj/php/wiki/CommonQuestions">
USE flags recomendadas</uri>. Para una lista de los parámetros USE
disponibles para PHP mira la <uri
link="http://overlays.gentoo.org/proj/php/wiki/NewUseFlags">Tabla de
USE flags</uri> en el overlay del wiki.
</note>
</body>
</section>

<section>
<title>Emergiendo PHP</title>
<body>

<p>
Ahora tienes la opción de instalar sólo PHP4, sólo PHP5 o ambos en
paralelo.  Para instalar PHP4 solo tienes que hacer un emerge
<c>=dev-lang/php-4*</c>, para instalar PHP5 (la versión más reciente)
puedes usar <c>dev-lang/php</c>, y para instalar ambas en paralelo,
tienes que emerger <c>=dev-lang/php-4*</c> y <c>=dev-lang/php-5*</c>.
</p>

<p>
Comprobar la configuración de los parámetros USE:
</p>

<pre caption="Comprobar parámetros USE (ejemplo)">
<comment>(comprobar para PHP4)</comment>
<i>emerge --pretend --verbose '=dev-lang/php-4*'</i>

<comment>(comprobar para PHP5)</comment>
<i>emerge --pretend --verbose '=dev-lang/php-5*'</i>

<comment>(comprobar extensiones para PHP4)</comment>
<i>emerge --pretend --verbose dev-php4/pecl-apc dev-php4/pecl-imagick dev-php4/xdebug</i>

<comment>(comprobar extensiones para PHP5)</comment>
<i>emerge --pretend --verbose dev-php5/pecl-apc dev-php5/pecl-imagick</i>

<comment>(comprobar librerías/aplicaciones PHP)</comment>
<i>emerge --pretend --verbose PEAR-PEAR PEAR-Mail PEAR-MDB smarty</i>
</pre>

<p>
Emerge PHP si todo está correcto:
</p>

<pre caption="emerger nuevos paquetes (ejemplo)">
<comment>(emerger el paquete PHP4)</comment>
<i>emerge '=dev-lang/php-4*'</i>

<comment>(emerger el paquete PHP5)</comment>
<i>emerge '=dev-lang/php-5*'</i>

<comment>(emerger las extensiones PHP para PHP4)</comment>
<i>emerge dev-php4/pecl-apc dev-php4/pecl-imagick dev-php4/xdebug</i>

<comment>(emerger las extensiones PHP para PHP5)</comment>
<i>emerge dev-php5/pecl-apc dev-php5/pecl-imagick</i>

<comment>(emerger las librerías/aplicaciones PHP)</comment>
<i>emerge PEAR-PEAR PEAR-Mail PEAR-MDB smarty</i>
</pre>
</body>
</section>

<section>
<title>PHP4 y PHP5 en paralelo: escoger que binario cli/cgi va a
usarse</title>
<body>

<p>
Después de hacer el emerge, tendrás binarios para <c>cli</c> y/o
<c>cgi</c> en <path>/usr/lib/php4/bin</path> y/o
<path>/usr/lib/php5/bin</path>. Si has instalado ambos, PHP4 y PHP5,
portage no podrá decidir por ti que versión se usará por defecto y
establecerá el enlace simbólico a aquel que se haya instalado último
en <path>/usr/bin</path>. Así que si instalaste por último PHP5, verás
un enlace simbólico de <path>/usr/bin/php</path> a
<path>/usr/lib/php5/bin/php</path>. De esta forma, un binario
<c>cli</c> y/o un <c>cgi</c> además de <c>php-devel</c> (responsable
de construir extensiones PHP usando <c>phpize</c> y <c>php-config</c>)
debe ser enlazado simbólicamente (en <path>/usr/bin</path>), cosa que
se puede hacer con mayor facilidad usando <c>php-select</c>, que forma
parte de <c>app-admin/php-toolkit</c>.
</p>

<note>
Los paquetes <c>dev-lang/php</c> dependen de
<c>app-admin/php-toolkit</c> para que <c>php-select</c> esté
disponible automáticamente después de emerger los nuevos paquetes de
php.
</note>

<p>
Suponiendo que hayas emergido tanto <c>=dev-lang/php-4*</c> como
<c>=dev-lang/php-5*</c>, introduce los siguientes comandos
<c>php-select</c> para ver que versiones de php están actualmente
seleccionadas:
</p>

<pre caption="muestra las versiones actualmente seleccionadas de PHP">
<comment>(para el cli)</comment>
<i>php-select php</i>

<comment>(para cgi)</comment>
<i>php-select php-cgi</i>

<comment>(para phpize, php-config)</comment>
<i>php-select php-devel</i>
</pre>

<p>
Deberías ver algo parecido a:
</p>

<pre caption="ejemplo de salida del comando php-select">
# <i>php-select php</i>
/usr/bin/php is set to /usr/lib/php5/bin/php
</pre>

<p>
Que significa que la ruta por defecto al binario cli de PHP
<path>/usr/bin/php</path> esta enlazada al binario PHP5
<path>/usr/lib/php5/bin/php</path>. Así que los scripts que usen
<path>/usr/bin/php</path> serán ejecutados por PHP5.
</p>
</body>
</section>

<section>
<title>Usar php-select para cambiar la versión de PHP usada por
defecto</title>
<body>

<p>
Si no estás conforme con la configuración por defecto que has
encontrado en el punto anterior, puedes usar <c>php-select</c> de
nuevo para cambiar a la versión que tu quieras:
</p>

<pre caption="seleccionar la versión deseada">
<comment>(para cli)</comment>
<i>php-select php php4</i>

<comment>(para cgi)</comment>
<i>php-select php-cgi php5</i>

<comment>(para phpize, php-config)</comment>
<i>php-select php-devel php5</i>
</pre>

<note>
Por favor teclea <c>php-select -h</c> para saber que es lo que
<c>php-select</c> puede hacer.
</note>

<p>
Comprueba los enlaces:
</p>

<pre caption="Comprobando enlaces">
 # <i>stat /usr/bin/php /usr/bin/php-cgi /usr/bin/phpize /usr/bin/php-config | grep File</i>
 File: `/usr/bin/php' -> `/usr/lib/php4/bin/php'
 File: `/usr/bin/php-cgi' -> `/usr/lib/php5/bin/php-cgi'
 File: `/usr/bin/phpize' -> `/usr/lib/php5/bin/phpize'
 File: `/usr/bin/php-config' -> `/usr/lib/php5/bin/php-config'
</pre>

<note>
Ten en cuenta que <c>php-select</c> solo cambia las versiones por
defecto. Si tienes instalados tanto PHP4 como PHP5 cli/cgi siempre
puedes usar rutas directas como por ejemplo
<path>/usr/lib/php4/bin/php</path> y
<path>/usr/lib/php5/bin/php</path> para ejecutar un script PHP con una
versión específica. Puedes usar tanto los cgis de PHP4 y PHP5 en la
misma instancia de Apache, pero no puedes usar dos módulos Apache PHP
diferentes en una misma instancia Apache, échale un vistazo a <uri
link="/proj/en/php/php4-php5-configuration.xml"> Guia de configuración
PHP4 y PHP5</uri> para conocer los detalles.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Migración de los archivos de configuración</title>
<section>
<body>

<p>
El paquete Gentoo PHP almacena la configuración en
<path>/etc/php</path>, que contiene un subdirectorio para cada SAPI de
cada versión de PHP:
</p>

<pre caption="lista de los directorios de configuración PHP">
$ <i>ls -1 /etc/php</i>
apache2-php4
apache2-php5
cli-php4
cli-php5
</pre>

<p>
Cada subdirectorio contiene su propio <path>php.ini</path>, como los
paquetes antiguos.
</p>
</body>
</section>

<section>
<title>Cambios en php.ini</title>
<body>

<p>
Tendrías que usar <c>etc-update</c> o <c>dispatch-conf</c> para
arreglar las diferencias entre tus opciones viejas y nuevas en
<path>php.ini</path>. Dos directivas que debes comprobar son
<c>include_path</c> y <c>extension_dir</c>.  Pero ojo,
<c>extension_dir</c> es diferente para cada versión de PHP (¡también
entre las versiones 5.0 y 5.1!).
</p>

<p>
Ejemplo para PHP 5.1 en <path>/etc/php/apache2-php5/php.ini</path> y
<path>/etc/php/cli-php5/php.ini</path>:
</p>

<pre caption="antigua configuración en php.ini">
include_path = ".:/usr/lib/php"
extension_dir = "/usr/lib/php/extensions/no-debug-non-zts-20050617/"
</pre>

<pre caption="nueva configuración en php.ini">
include_path = ".:/usr/share/php"
extension_dir = "/usr/lib/php5/lib/php/extensions/no-debug-non-zts-20050617/"
</pre>

<warn>
Asegurate de usar <c>etc-update</c> o <c>dispatch-conf</c> para
comprobar las configuraciones correctas de cada archivo.
</warn>
</body>
</section>

<section>
<title>Cambios en la configuración de las extensiones PHP</title>
<body>

<p>
El nuevo paquete PHP ya no almacena las directivas de configuración
para las extensiones externas (compartidas) de PHP en
<path>php.ini</path>. Estas directivas tienen su configuración en su
archivo de configuración específico dentro de los directorios
<path>/etc/php/*/ext</path>. Para activar/desactivar las extensiones
compartidas, se usan enlaces simbólicos hacia
<path>/etc/php/*/ext-active</path>. Si quieres activar una extensión,
crea un enlace en <path>/etc/php/*/ext-active</path> que apunte hacia
el correspondiente archivo <path>[EXTENSION].ini</path> en
<path>/etc/php/*/ext/</path>. Si quieres deshabilitar una extensión,
elimina el enlace simbólico correspondiente.
</p>

<p>
Si tenías instalado anteriormente <c>dev-php/PECL-apc</c>, la
configuración APC se guarda en tu <path>php.ini</path>. Si reemerges
el nuevo paquete <c>dev-php5/pecl-apc</c>, la configuración por
defecto para APC se almacenará en
<path>/etc/php/*5/ext/apc.ini</path>.
</p>

<p>
De esta forma, tienes que mover tus directivas de configuración de APC
de <path>/etc/php/*5/php.ini</path> a
<path>/etc/php/*5/ext/apc.ini</path> y crear un symlink desde
<path>/etc/php/*5/ext-active/apc.ini</path> a
<path>/etc/php/*5/ext/apc.ini</path>.
</p>

<note>
Si instalaste PHP como módulo de Apache, asegurate de reiniciar Apache
después de la instalación y configuración de PHP.
</note>
</body>
</section>
</chapter>

<chapter>
<title>Configurar Apache para trabajar con PHP4 y PHP5</title>
<section>
<body>

<p>
Hay muchas formas de hacer trabajar a Apache con dos versiones de PHP
en paralelo. La forma más simple es usar PHP4 y PHP5 como cgi binario,
o usar PHP4 como cgi y PHP5 como módulo (o al revés).
</p>

<p>
Hemos creado una <uri
link="/proj/en/php/php4-php5-configuration.xml">Guía i de
configuración PHP4 y PHP5</uri> que explica algunas de las posibles
soluciones.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Soporte / Obteniendo Ayuda</title>
<section>
<body>

<p>
Si tienes problemas con los nuevos paquetes Gentoo PHP, puedes
conseguir ayuda a través de los siguientes recursos:
</p>

<ul>
  <li><uri
  link="http://overlays.gentoo.org/proj/php/wiki/CommonQuestions">
  Preguntas frecuentes</uri> sobre PHP en Gentoo</li>
  <li><uri link="http://overlays.gentoo.org/proj/php/">Página de los
  desarrolladores del PHP Overlay</uri></li>
  <li>#gentoo-php en irc.freenode.net; éste es el canal de chat donde
  los autores del nuevo esquema suelen estar. ¡Nos encantará verte
  aquí!</li>
  <li><uri link="http://forums.gentoo.org/">Foros Gentoo</uri> es un
  sitio popular donde acudir en busca de ayuda. Hay un montón de
  usuarios de Gentoo leyéndolos de forma simultánea, haciendo posible
  que puedas obtener ayuda en un momento.</li>
</ul>

<p>
Para detalles acerca de la implementación de los nuevos paquetes,
puedes leer a <uri
link="http://article.gmane.org/gmane.linux.gentoo.devel/30050">Stuarts
enviando correos a gentoo-dev</uri>. Tambien puede encontrar
interesante el <uri link="http://blog.stuartherbert.com/php/">
Stuart's PHP Blog</uri>.
</p>

<p>
En la <uri link="http://overlays.gentoo.org/proj/php/">Página de
desarrollo</uri> puedes encontrar mucha documentación y ebuilds más
recientes, que pueden ser movidos al árbol oficial de portage
posteriormente.
</p>
</body>
</section>
</chapter>
</guide>
