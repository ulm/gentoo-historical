<?xml version='1.0' encoding="utf-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/es/hardened/grsecurity.xml,v 1.7 2013/08/30 15:49:31 nimiux Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide redirect="https://wiki.gentoo.org/wiki/Project:Hardened/Grsecurity2_Quickstart" lang="es">

<title>Guía Grsecurity v2 de Gentoo</title>

<author title="Autor">
  <mail link="solar@gentoo.org">solar</mail>
</author>
<author title="Autor">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Traductor">
  <mail link="anpereir@gentoo.org">Andrés Pereira</mail>
</author>
<author title="Traductor">
  <mail link="nimiux"/>
</author>

<abstract>
Este documento describe los parches de seguridad grsecurity2, las
opciones soportadas por el núcleo y las herramientas ofrecidas por el
proyecto grsecurity para elevar la seguridad de su sistema a estándares
superiores.
</abstract>

<version>2</version>
<date>2012-12-31</date>

<chapter>
<title>Acerca de Grsecurity</title>
<section>
<title>El Proyecto Grsecurity</title>
<body>

<p>
El proyecto grsecurity, alojado en <uri>http://www.grsecurity.org</uri>,
ofrece varios parches al núcleo de Linux que mejoran la seguridad global
de su sistema. En el siguiente capítulo se discuten las variadas
características provistas por grsecurity, una lista completa de estas se
encuentra en la página de
<uri link="http://www.grsecurity.org/features.php">características de
grsecurity</uri>.
</p>

<p>
Como la características de grsecurity están basadas principalmente en el núcleo,
la mayor parte de este documento explica las diversas características del núcleo
y sus respectivos operandos "sysctl" (si es aplicable).
</p>

</body>
</section>
<section>
<title>Integración en Gentoo Hardened</title>
<body>

<p>
El <uri link="http://hardened.gentoo.org">Proyecto Gentoo Hardened</uri>
mantiene las características de mejoras de seguridad para Gentoo, incluyendo
pero no limitándose a grsecurity.
</p>

</body>
</section>
<section>
<title>Configuración del Núcleo</title>
<body>

<p>
A lo largo de este documento hablaremos sobre la configuración del núcleo
usando las variables de este, por ejemplo:
<c>CONFIG_GRKERNSEC_PAX_NO_ACL_FLAGS</c>.
Estas son las variables que usa el proceso de construcción del núcleo para
determinar si cierta característica necesita ser compilada.
</p>

<p>
Cuando configure su núcleo mediante <c>make menuconfig</c> o algo similar, puede
observar una interfaz de usuario a través de la cual puede seleccionar las
opciones del núcleo. Si elige el botón de <e>Ayuda (Help)</e> en alguna
característica del núcleo, verá en la parte superior que menciona el nombre de
la variable.
</p>

<p>
Por lo tanto, puede configurar su núcleo como guste - pensando un poco. Si no
puede encontrar cierta opción, siempre está la posibilidad de editar el
archivo <path>/usr/src/linux/.config</path> a mano :)
</p>

<p>
Por supuesto, para seleccionar las variadas opciones del núcleo de
grsecurity debe activarlo en su núcleo:
</p>

<pre caption="Activando grsecurity">
CONFIG_GRKERNSEC=y
CONFIG_GRKERNSEC_CUSTOM=y
</pre>

</body>
</section>
</chapter>

<chapter>
<title>PaX</title>
<section>
<title>Luchando contra la explotación de bugs en el software</title>
<body>

<p>
PaX introduce un par de mecanismos de seguridad que hacen más difíciles a los
atacantes explotar bugs de software que involucren corrupción de memoria (pero
note que PaX no protege contra todos los posibles bugs de software). El
<uri link="http://pax.grsecurity.net/docs/pax.txt">documento introductorio a
PaX</uri> habla sobre tres técnicas posibles de explotación:
</p>

<ol>
  <li>introducir/ejecutar código arbitrario</li>
  <li>ejecutar código existente fuera del orden del programa original</li>
  <li>ejecutar código existente en el orden original del programa con datos
  arbitrarios</li>
</ol>

<p>
Un método de prevención no permite que se almacene código ejecutable en la
memoria modificable (writable). Cuando miramos un proceso, este requiere de
cinco regiones de memoria:
</p>

<ol>
  <li>
    Una <e>sección de datos</e> que contiene los datos asignados estáticamente y
    los datos globales
  </li>
  <li>
    Una <e>región BSS</e> (Block Started by Symbol) que contiene información de
    los datos inicializados en cero del proceso
  </li>
  <li>
    Una <e>región de código</e>, también llamada <e>segmento de texto</e>, que
    contiene las instrucciones ejecutables
  </li>
  <li>
    El <e>heap</e> que contiene la memoria asignada dinámicamente
  </li>
  <li>
    Una <e>pila</e> que contiene las variables locales
  </li>
</ol>

<p>
El primer método de prevención de PaX, llamado <b>NOEXEC</b>, tiene como
objetivo dar control sobre la generación de código en tiempo de ejecución. Este
marca como "no ejecutable" a las páginas de memoria que no contienen código
ejecutable. Esto significa que el heap y la pila, que solamente contienen datos
variables y no deberían contener código ejecutable, sean marcadas como "no
ejecutables". Los exploits que coloque código en esas áreas con la intención de
ejecutarlo simplemente fallarán.
</p>

<p>
NOEXEC hace más que eso en realidad, los lectores interesados deberían enfocar
su atención a la <uri link="http://pax.grsecurity.net/docs/noexec.txt">
documentación de NOEXEC de PAX</uri> (en inglés).
</p>

<p>
El segundo método de prevención de PAX, denominado <b>ASLR</b> (Address Space
Layout Randomization, Aleatorización de Distribución del Espacio de
Memoria), aleatoriza las direcciones dadas a peticiones de memoria. ASLR
aleatoriza la asignación donde la memoria era previamente asignada contiguamente
(lo que significa que los exploits saben donde están situadas las regiones de
memoria de las tareas), haciendo inútiles las técnicas que dependen de esta
información.
</p>

<p>
Se puede encontrar más información sobre ASLR <uri
link="http://pax.grsecurity.net/docs/aslr.txt">en línea</uri>.
</p>

</body>
</section>
<section>
<title>Activando PaX</title>
<body>

<p>
La configuración del núcleo recomendada para PaX es:
</p>

<pre caption="Configuración del núcleo recomendada para PaX">
<comment>#
# PaX Control
#
# CONFIG_GRKERNSEC_PAX_SOFTMODE is not set</comment>
CONFIG_GRKERNSEC_PAX_EI_PAX=y
CONFIG_GRKERNSEC_PAX_PT_PAX_FLAGS=y
CONFIG_GRKERNSEC_PAX_NO_ACL_FLAGS=y
<comment># CONFIG_GRKERNSEC_PAX_HAVE_ACL_FLAGS is not set
# CONFIG_GRKERNSEC_PAX_HOOK_ACL_FLAGS is not set

#
# Address Space Protection
#</comment>
CONFIG_GRKERNSEC_PAX_NOEXEC=y
<comment># CONFIG_GRKERNSEC_PAX_PAGEEXEC is not set</comment>
CONFIG_GRKERNSEC_PAX_SEGMEXEC=y
CONFIG_GRKERNSEC_PAX_EMUTRAMP=y
CONFIG_GRKERNSEC_PAX_MPROTECT=y
<comment># CONFIG_GRKERNSEC_PAX_NOELFRELOCS is not set</comment>
CONFIG_GRKERNSEC_PAX_ASLR=y
CONFIG_GRKERNSEC_PAX_RANDKSTACK=y
CONFIG_GRKERNSEC_PAX_RANDUSTACK=y
CONFIG_GRKERNSEC_PAX_RANDMMAP=y
CONFIG_GRKERNSEC_PAX_RANDEXEC=y
<comment># CONFIG_GRKERNSEC_KMEM is not set
# CONFIG_GRKERNSEC_IO is not set</comment>
CONFIG_GRKERNSEC_PROC_MEMMAP=y
CONFIG_GRKERNSEC_HIDESYM=y
</pre>

<p>
Si está usando un sistema no x86, observará que no existe
CONFIG_GRKERNSEC_PAX_NOEXEC. Debería en cambio seleccionar
CONFIG_GRKERNSEC_PAX_PAGEEXEC ya que es la única implementación de NOEXEC que
hay por el momento.
</p>

</body>
</section>
<section>
<title>Controlando PaX</title>
<body>

<p>
No todas las aplicaciones de Linux están contentas con las restricciones de
seguridad de PaX. Entre estas están xorg-x11, java, mplayer, xmms y otros. Si
planea usarlas puede alzar las protecciones para esas aplicaciones usando
<c>chpax</c> y <c>paxctl</c>.
</p>

<pre caption="Instalando las herramientas chpax y paxctl">
# <i>emerge app-admin/chpax</i>
# <i>emerge app-admin/paxctl</i>
</pre>

<p>
chpax ofrece un guión de inicio que maneja la mayoría de configuraciones
de las aplicaciones más conocidas:
</p>

<pre caption="Agregando el guión de inicio chpax al nivel de ejecución default">
# <i>rc-update add chpax default</i>
</pre>

<p>
<c>pax-utils</c> en un pequeño conjunto de utilitarios que contiene aplicaciones
útiles para administrar un servidor que use PaX.
</p>

<pre caption="Instalando pax-utils">
# <i>emerge pax-utils</i>
</pre>

<p>
Entre sus interesantes herramientas están <c>scanelf</c> y <c>pspax</c>:
</p>

<ul>
  <li>
    Con <c>scanelf</c> puede revisar los directorios de bibliotecas y binarios y
    listar los diferentes permisos y tipos ELF relevantes para correr una
    configuración ideal de pax/grsec.
  </li>
  <li>
    Con <c>pspax</c> puede desplegar las banderas/capacidades/xattr PaX desde la
    perspectiva del núcleo.
  </li>
</ul>

</body>
</section>
<section>
<title>Verificando las configuraciones de PaX</title>
<body>

<p>
Peter Busser escribió una suite de pruebas de regresión llamada <c>paxtest</c>.
Esta herramienta chequeará diversos casos de posibles vectores de ataque y le
informa del resultado. Cuando la ejecuta, dejará un archivo de bitácora
denominado <path>paxtest.log</path> en el directorio de trabajo actual.
</p>

<pre caption="Instalando y corriendo paxtest">
# <i>emerge paxtest</i>

# <i>paxtest</i>
Executable anonymous mapping             : Killed
Executable bss                           : Killed
Executable data                          : Killed
Executable heap                          : Killed
Executable stack                         : Killed
Executable anonymous mapping (mprotect)  : Killed
Executable bss (mprotect)                : Killed
Executable data (mprotect)               : Killed
Executable heap (mprotect)               : Killed
Executable stack (mprotect)              : Killed
Executable shared library bss (mprotect) : Killed
Executable shared library data (mprotect): Killed
Writable text segments                   : Killed
Anonymous mapping randomisation test     : 16 bits (guessed)
Heap randomisation test (ET_EXEC)        : 13 bits (guessed)
Heap randomisation test (ET_DYN)         : 25 bits (guessed)
Main executable randomisation (ET_EXEC)  : 16 bits (guessed)
Main executable randomisation (ET_DYN)   : 17 bits (guessed)
Shared library randomisation test        : 16 bits (guessed)
Stack randomisation test (SEGMEXEC)      : 23 bits (guessed)
Stack randomisation test (PAGEEXEC)      : No randomisation
Return to function (strcpy)              : Vulnerable
Return to function (memcpy)              : Vulnerable
Return to function (strcpy, RANDEXEC)    : Killed
Return to function (memcpy, RANDEXEC)    : Killed
Executable shared library bss            : Killed
Executable shared library data           : Killed
</pre>

<p>
Del ejemplo mostrado arriba puede observar que:
</p>

<ul>
  <li>
    strcpy y memcpy se listan como <e>Vulnerables</e>. Esto es esperable y
    normal - simplemente muestra la necesidad de usar una tecnología como
    ProPolice/SSP.
  </li>
  <li>
    No hay aleatorización para PAGEEXEC. Esto es normal debido a que nuestra
    configuración recomendada para el núcleo x86 no activó la opción de
    PAGEEXEC. Sin embargo, en las arquitecturas que soporten (casi todas
    incluyendo x86_64) realmente el bit NX (no ejecutable), PAGEEXEC es el único
    método disponible para NOEXEWC y no afecta el rendimiento.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>RBAC</title>
<section>
<title>Control de Acceso Basado en Roles (Role Based Access Control)</title>
<body>

<p>
Existen dos tipos de mecanismos de control de acceso usados para prevenir el
acceso desautorizado a archivos (o información en general): DAC (Control de
Acceso Discrecional) y MAC (Control de Acceso Obligatorio). Linux usa por
defecto un mecanismo DAC: el creador del archivo puede definir quién tiene
acceso a este. Un sistema MAC por su parte fuerza a que todos sigan las reglas
establecidas por el administrador.
</p>

<p>
La implementación MAC que soporta grsecurity es llamada Control de Acceso Basado
en Roles. RSBAC asocia <e>roles</e> a cada usuario. Cada rol define qué
operaciones pueden ser llevadas a cabo sobre ciertos objetos. Dada una colección
bien escrita de roles y operaciones, sus usuarios estarán restringidos a hacer
solamente aquellas tareas que le dice que pueden hacer. La restricción
por defecto "deny-all" (negar todo) le asegura que un usuario no pueda realizar
una acción de la cual no haya pensado.
</p>

</body>
</section>
<section>
<title>Configurando el Núcleo</title>
<body>

<p>
La configuración del núcleo recomendada para RBAC es:
</p>

<pre caption="Configuración del núcleo recomendada para RBAC">
<comment>#
# Role Based Access Control Options
#</comment>
CONFIG_GRKERNSEC_ACL_HIDEKERN=y
CONFIG_GRKERNSEC_ACL_MAXTRIES=3
CONFIG_GRKERNSEC_ACL_TIMEOUT=30
</pre>

</body>
</section>
<section>
<title>Trabajando con gradm</title>
<body>

<p>
<c>gradm</c> es una herramienta que le permite administrar y
mantener una directriz para su sistema. Con ella puede activar o
desactivar el sistema RBAC, recargar los roles RBAC, cambiar su rol,
configurar un contraseña para el modo de administración, etcétera.
</p>

<p>
Cuando instala <c>gradm</c> se dejará la directriz por defecto en
<path>/etc/grsec/policy</path>:
</p>

<pre caption="Instalando gradm">
# <i>emerge gradm</i>
</pre>

<p>
Por defecto, las directrices RBAC no están activadas. Es tarea del
administrador y no de Gentoo determinar cuándo el sistema debería
poner en vigor una directriz RBAC. Antes de activar el sistema RBAC
debería ajustar una contraseña de administración.
</p>

<pre caption="Activando el sistema RBAC">
# <i>gradm -P</i>
Setting up grsecurity RBAC password
Password: <comment>(Ingrese una astuta contraseña)</comment>
Re-enter Password: <comment>(Ingrese la misma contraseña para confirmar)</comment>
Password written in /etc/grsec/pw
# <i>gradm -E</i>
</pre>

<p>
Para desactivar el sistema RBAC, ejecute <c>gradm -D</c>. Si no se le permite,
primero necesita cambiarse al rol de administrador:
</p>

<pre caption="Desactivando el sistema RBAC">
# <i>gradm -a admin</i>
Password: <comment>(Ingrese su contraseña del rol administrador)</comment>
# <i>gradm -D</i>
</pre>

<p>
Si desea salir del rol de administrador, ejecute <c>gradm -u admin</c>:
</p>

<pre caption="Saliendo del rol de administrador">
# <i>gradm -u admin</i>
</pre>

</body>
</section>
<section>
<title>Generando una Directriz</title>
<body>

<p>
El sistema RBAC viene con una excelente característica denominada
"modo de aprendizaje". Dicho modo puede generar una directriz
previsora de mínimos privilegios para su sistema. Esto permite
ahorros de tiempo y dinero para poder instalar múltiples servidores
seguros.
</p>

<p>
Para usar el modo de aprendizaje, actívelo usando <c>gradm</c>:
</p>

<pre caption="Activanado el modo de aprendizaje de RBAC">
# <i>gradm -F -L /etc/grsec/learning.log</i>
</pre>

<p>
Ahora use el sistema, haga las cosas que normalmente haría. Intente evitar
hacer una resincronización, ejecutar locate u otra operación de archivos
pesada en términos de E/S ya que esto realmente puede ralentizar el tiempo
de procesamiento.
</p>

<p>
Cuando crea que ha usado su sistema lo suficiente para obtener una buena
directriz, deje que <c>gradm</c> la procese y le preponga roles en
<path>/etc/grsec/learning.roles</path>:
</p>

<pre caption="Procesando las bitácoras del modo de aprendizaje">
# <i>gradm -F -L /etc/grsec/learning.log -O /etc/grsec/learning.roles</i>
</pre>

<note>
Necesitará deshabilitar el modo de aprendizaje de RBAC antes de hacer esto.
Puede usar <c>gradm -D</c> para conseguirlo.
</note>

<p>
Audite el archivo <path>/etc/grsec/learning.roles</path> y guárdelo como
<path>/etc/grsec/policy</path> (con permisos 0600) cuando esté listo.
</p>

<pre caption="Guardando las directrices">
# <i>mv /etc/grsec/learning.roles /etc/grsec/policy</i>
# <i>chmod 0600 /etc/grsec/policy</i>
</pre>

<p>
Ahora ya puede activar el sistema RBAC con su nueva e instruida
directriz.
</p>

</body>
</section>
<section>
<title>Refinando su Directriz</title>
<body>

<p>
Una interesante característica de grsecurity 2.x es el <e>Soporte de
Operación de Conjuntos</e> en el archivo de configuración. Actualmente
se reconocen uniones, intersecciones y diferencias de conjuntos (de
objetos en este caso).
</p>

<pre caption="Conjuntos de ejemplo">
define objset1 {
/root/blah rw
/root/blah2 r
/root/blah3 x
}

define somename2 {
/root/test1 rw
/root/blah2 rw
/root/test3 h
}
</pre>

<p>
Aquí hay un ejemplo de uso, y los objetos resultantes que serán añadidos a su
sujeto:
</p>

<pre caption="Ejemplo del operador interesección &amp;">
subject /somebinary o
$objset1 &amp; $somename2
</pre>

<p>
Lo de arriba se expandiría a:
</p>

<pre caption="Ajustes de resultado al sujeto">
subject /somebinary o
/root/blah2 r
</pre>

<p>
Este es el resultado del operador &amp; el cual toma ambos conjuntos y
retorna los archivos que existen en ambos conjuntos y los permisos
para esos archivos que existen en ambos conjuntos.
</p>

<pre caption="Ejemplo del operador unión |">
subject /somebinary o
$objset1 | $somename2
</pre>

<p>
Este ejemplo se expandiría a:
</p>

<pre caption="Ajustes de resultado al sujeto">
subject /somebinary o
/root/blah rw
/root/blah2 rw
/root/blah3 x
/root/test1 rw
/root/test3 h
</pre>

<p>
Este es el resultado del operador de unión "|" el cual toma ambos conjuntos y
entrega los archivos que existen en alguno de los conjuntos. Si un archivo
existe en ambos conjuntos también se retorna y el modo contiene las banderas que
existen en alguno de los conjuntos.
</p>

<pre caption="Ejemplo de diferencia -">
subject /somebinary o
$objset1 - $somename2
</pre>

<p>
Este ejemplo se expandiría a:
</p>

<pre caption="Ajustes de resultado al sujeto">
subject /somebinary o
/root/blah rw
/root/blah2 h
/root/blah3 x
</pre>

<p>
Este es el resultado del operador de diferencia "-" que toma dos conjuntos y
retorna los archivos que existen en el conjunto de la izquierda pero no en el
calce del archivo en el conjunto de la derecha. Si un archivo existe en el
conjunto izquierdo y se encuentra un calce en el de la derecha (ya sea que los
nombres de archivos son iguales, o el directorio padre existe en el conjunto de
la derecha) entonces se retorna el archivo y el modo del segundo conjunto se
borra del primero, y ese archivo se retorna.
</p>

<p>
En algún oscuro pseudo lenguaje podría ver esto como:
</p>

<pre caption="Explicación en Pseudolenguaje">
si ( (<i>$objset1</i> contiene <i>/tmp/blah rw</i>) y
     (<i>$objset2</i> contiene <i>/tmp/blah r</i>) )
entonces
  <i>$objset1 - $objset2</i> contendría <i>/tmp/blah w</i>

si ( (<i>$objset1</i> contiene <i>/tmp/blah rw</i>) y
     (<i>$objset2</i> contiene<i>/ rwx</i>) )
entonces
  <i>$objset1 - $objset2</i> contendría <i>/tmp/blah h</i>
</pre>

<p>
El orden de prioridad (de mayor a menor) es: "-, &amp; |".
</p>

<p>
Si no quiere preocuparse de recordar la precedencia, también se incluye
reconocimiento de paréntesis, así que puede hacer cosas como:
</p>

<pre caption="Ejemplo de uso de paréntesis">
(($set1 - $set2) | $set3) &amp; $set4
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Protección del Sistema de Archivos</title>
<section>
<title>Luchando contra el enjaulamiento (chroot) y abuso del sistema de archivos</title>
<body>

<p>
Grsecurity2 incluye muchos parches que prohiben a los usuarios de obtener
conocimiento innecesario acerca del sistema. Estos incluyen restricciones sobre
el uso de <path>/proc</path>, enjaulado (chrooting), enlazado, etcétera.
</p>

</body>
</section>
<section>
<title>Configuración del Núcleo</title>
<body>

<p>
Recomendamos la siguiente configuración de grsecurity en el núcleo para
protección del sistema de archivos:
</p>

<pre caption="Activando la protección del sistema de archivos">
<comment>#
# Filesystem Protections
#</comment>
CONFIG_GRKERNSEC_PROC=y
<comment># CONFIG_GRKERNSEC_PROC_USER is not set</comment>
CONFIG_GRKERNSEC_PROC_USERGROUP=y
CONFIG_GRKERNSEC_PROC_GID=10
CONFIG_GRKERNSEC_PROC_ADD=y
CONFIG_GRKERNSEC_LINK=y
CONFIG_GRKERNSEC_FIFO=y
CONFIG_GRKERNSEC_CHROOT=y
CONFIG_GRKERNSEC_CHROOT_MOUNT=y
CONFIG_GRKERNSEC_CHROOT_DOUBLE=y
CONFIG_GRKERNSEC_CHROOT_PIVOT=y
CONFIG_GRKERNSEC_CHROOT_CHDIR=y
CONFIG_GRKERNSEC_CHROOT_CHMOD=y
CONFIG_GRKERNSEC_CHROOT_FCHDIR=y
CONFIG_GRKERNSEC_CHROOT_MKNOD=y
CONFIG_GRKERNSEC_CHROOT_SHMAT=y
CONFIG_GRKERNSEC_CHROOT_UNIX=y
CONFIG_GRKERNSEC_CHROOT_FINDTASK=y
CONFIG_GRKERNSEC_CHROOT_NICE=y
CONFIG_GRKERNSEC_CHROOT_SYSCTL=y
CONFIG_GRKERNSEC_CHROOT_CAPS=y
</pre>

</body>
</section>
<section>
<title>Gatillando el mecanismo de seguridad</title>
<body>

<p>
Cuando está usando el núcleo compilado con las opciones mostradas arriba (o
similares), obtendrá la opción de activar/desactivar muchas de las opciones a
través del sistema de archivos <path>/proc</path> o vía <c>sysctl</c>.
</p>

<p>
El ejemplo a continuación muestra un extracto típico de
<path>/etc/sysctl.conf</path>:
</p>

<pre caption="Ejemplo de configuraciones dentro de /etc/sysctl.conf">
kernel.grsecurity.chroot_deny_sysctl = 1
kernel.grsecurity.chroot_caps = 1
kernel.grsecurity.chroot_execlog = 0
kernel.grsecurity.chroot_restrict_nice = 1
kernel.grsecurity.chroot_deny_mknod = 1
kernel.grsecurity.chroot_deny_chmod = 1
kernel.grsecurity.chroot_enforce_chdir = 1
kernel.grsecurity.chroot_deny_pivot = 1
kernel.grsecurity.chroot_deny_chroot = 1
kernel.grsecurity.chroot_deny_fchdir = 1
kernel.grsecurity.chroot_deny_mount = 1
kernel.grsecurity.chroot_deny_unix = 1
kernel.grsecurity.chroot_deny_shmat = 1
</pre>

<p>
Puede activar o desactivar a voluntad las opciones usando la orden
<c>sysctl</c>:
</p>

<pre caption="Activando las opciones vía sysctl">
<comment>(Activa la característica exec_logging)</comment>
# <i>sysctl -w kernel.grsecurity.exec_logging = 1</i>
<comment>(Desactiva la característica exec_logging)</comment>
# <i>sysctl -w kernel.grsecurity.exec_logging = 0</i>
</pre>

<p>
Existe una opción de configuración muy importante de sysctl, a saber,
<c>kernel.grsecurity.grsec_lock</c>. Cuando está activada, no es posible hacer
futuros cambios.
</p>

<pre caption="Cerrando la posibilidad de usar la interfaz sysctl">
# <i>sysctl -w kernel.grsecurity.grsec_lock = 1</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Auditando el Núcleo</title>
<section>
<title>Extendiendo las facilidades de generación de bitácoras (logging) de su
sistema</title>
<body>

<p>
grsecurity añade a su núcleo funcionalidad extra relativa a la generación de
bitácoras. Con la <e>Auditoría del Núcleo</e> de grsecurity, el núcleo le
informa cuando se inician las aplicaciones, si los dispositivos son
(des)montados, etc.
</p>

</body>
</section>
<section>
<title>Las diversas configuraciones de Auditoría del Núcleo</title>
<body>

<p>
La siguiente sección de configuración del núcleo puede ser usada para activar
las opciones de Auditoría del Núcleo de grsecurity:
</p>

<pre caption="Activando la Auditoría del Núcleo">
<comment>#
# Kernel Auditing
#
# CONFIG_GRKERNSEC_AUDIT_GROUP is not set</comment>
CONFIG_GRKERNSEC_EXECLOG=y
CONFIG_GRKERNSEC_RESLOG=y
CONFIG_GRKERNSEC_CHROOT_EXECLOG=y
CONFIG_GRKERNSEC_AUDIT_CHDIR=y
CONFIG_GRKERNSEC_AUDIT_MOUNT=y
CONFIG_GRKERNSEC_AUDIT_IPC=y
CONFIG_GRKERNSEC_SIGNAL=y
CONFIG_GRKERNSEC_FORKFAIL=y
CONFIG_GRKERNSEC_TIME=y
CONFIG_GRKERNSEC_PROC_IPADDR=y
CONFIG_GRKERNSEC_AUDIT_TEXTREL=y
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Restricciones a los procesos</title>
<section>
<title>Protección a los ejecutables</title>
<body>

<p>
Con grsecurity puede restringir los ejecutables. Debido a que la mayoría de los
exploits funcionan mediante uno o más procesos en ejecución, esta protección
puede salvar la salud de su sistema.
</p>

</body>
</section>
<section>
<title>Protección de la red</title>
<body>

<p>
La pila TCP/IP de Linux es vulnerable a ataques basados en predicciones.
Grsecurity incluye parches de aleatorización para contrarrestar esos ataques.
Aparte de esos parches, también puede activar restricciones a los sockets, con
lo que se prohibe completamente el acceso a la red a ciertos grupos.
</p>

</body>
</section>
<section>
<title>Configuraciones del Núcleo</title>
<body>

<p>
Las siguientes opciones del núcleo activan varias protecciones de red y
ejecutables:
</p>

<pre caption="Configuraciones del Núcleo">
<comment>#
# Executable Protections
#</comment>
CONFIG_GRKERNSEC_EXECVE=y
CONFIG_GRKERNSEC_DMESG=y
CONFIG_GRKERNSEC_RANDPID=y
CONFIG_GRKERNSEC_TPE=y
CONFIG_GRKERNSEC_TPE_ALL=y
CONFIG_GRKERNSEC_TPE_GID=100

<comment>#
# Network Protections
#</comment>
CONFIG_GRKERNSEC_RANDNET=y
CONFIG_GRKERNSEC_RANDISN=y
CONFIG_GRKERNSEC_RANDID=y
CONFIG_GRKERNSEC_RANDSRC=y
CONFIG_GRKERNSEC_RANDRPC=y
<comment># CONFIG_GRKERNSEC_SOCKET is not set</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>El toolchain de Hardened</title>
<section>
<body>

<p>
Aunque está fuera del alcance de este documento, mencionamos el uso
de la <uri link="hardenedfaq.xml#hardenedprofile">cadena de
herramientas de hardened</uri> que completa el modelo grsec/PaX
del espacio de usuario.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Recursos</title>
<section>
<body>

<ul>
  <li>
    <uri link="http://grsecurity.net/">Página Oficial de Grsecurity
    (en inglés)</uri>
  </li>
  <li>
    <uri link="http://forums.grsecurity.net/">Foros de Grsecurity</uri>
  </li>
  <li>
    <uri link="http://grsecurity.net/researchpaper.pdf">Incrementando el
    rendimiento y granularidad en Sistemas de Control de Acceso basados en
    Roles (en inglés)</uri>
  </li>
  <li>
    <uri link="/proj/es/hardened/capabilities.xml">
    Nombres y descripción de capacidades POSIX</uri>
  </li>
  <li>
    <uri link="http://grsecurity.net/quickstart.pdf">Guía de inicio rápido
    de Grsecurity (en inglés)</uri> (Nuevo archivo PDF)
  </li>
  <li>
    <uri link="/proj/es/hardened/pax-quickstart.xml">Guía de inicio rápido
    para usa PaX con Gentoo Hardened</uri> (NUEVO)
  </li>
  <li>
    <uri link="http://hardened.gentoo.org/grsecurity.xml">Grsecurity con
    Gentoo el sistema MAC 1.9.x (en inglés)</uri> (ANTIGUO)
  </li>
  <li>
    <uri link="http://grsecurity.net/PaX-presentation_files/frame.htm">
    PaX: El fin garantizado de ejecución de código arbitrario (en inglés)
    </uri>
  </li>
  <li>
    <uri link="http://pax.grsecurity.net">Documentación y página principal
    de PaX (en inglés)</uri>
  </li>
  <li>
    <uri link="/proj/en/infrastructure/tenshi">Tenshi (en inglés)</uri>
  </li>
</ul>

</body>
</section>
</chapter>

</guide>
