<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/es/hardened/pax-quickstart.xml,v 1.3 2012/04/26 20:42:41 nimiux Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="es">
<title>Guía de inicio rápido para usar PaX con Gentoo Hardened</title>

<author title="Autor">
  <mail link="tseng@gentoo.org">Brandon Hale</mail>
</author>
<author title="Editor">
  <mail link="blackace@gentoo.org">Blackace</mail>
</author>
<author title="Editor">
  <mail link="solar@gentoo.org">solar</mail>
</author>
<author title="Traductor">
  <mail link="nimiux"/>
</author>

<abstract>
Guía de inicio rápido que cubre PaX y Gentoo Hardened.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->
<license/>

<version>1.4</version>
<date>2007-09-11</date>

<chapter>
<title>¿Qué es Gentoo Hardened?</title>
<section>
<body>

<p>
Gentoo Hardened es un proyecto interesado en reforzar el sistema Gentoo.
Soportamos diferentes soluciones y existe una flexibilidad adecuada para
crear su propia configuración. En el corazón de la configuración de un
sistema Gentoo común está <e>PaX</e>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>¿Qué es PaX?</title>
<section>
<body>

<p>
PaX es un parche para el núcleo Linux que ofrece el reforzamiento del
mismo de dos formas:
</p>

<p>
La primera, <e>ASLR</e> (Address Space Layout Randomization o Esquema de
Aleatorización del Espacio de Direcciones) ofrece una forma de
aleatorizar la distribución de direcciones de todos los datos cargados
en memoria. Cuando se construye una aplicación como un <e>PIE</e>
(Position Independent Executable o Ejecutable Independiente de la
Posición), Pax puede aleatorizar las direcciones de la aplicación base.
</p>

<p>
La segunda forma de protección ofrecida por PaX es la memoria no
ejecutable. Esto impide una forma muy común de ataque en el cual
un atacante inserta código ejecutable en memoria. Se puede encontrar más
información sobre PaX en esta misma guía, pero la página oficial está en
<uri>http://pax.grsecurity.net</uri>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Una introducción a PIE y SSP</title>
<section>
<body>

<p>
Como se ha mencionado arriba, PaX se complementa con PIE. Este método
de construir ejecutables almacena información necesaria para relocalizar
partes del ejecutable en memoria, de ahí el nombre <e>Independiente de la
Posición</e>.
</p>

<p>
<e>SSP</e> (Stack Smashing Protector o Protector contra Ataques a la Pila)
es una tecnología que se añade al ejecutable en el momento de su
construcción. SSP fue originalmente introducida por IBM bajo el nombre
<e>ProPolice</e>. Modifica el compilador de C para insertar código de
inicialización en funciones que crean un buffer en memoria.
</p>

<note>
En las nuevas versiones de SSP, es posible aplicar SSP a todas las
funciones, añadiendo protección a funciones cuyo buffer normalmente
estaría por debajo del límite de tamaño para SSP. Esto es habilitado
mediante la CFLAG -fstack-protector-all.
</note>

<p>
Durante la ejecución, cuando se crea un buffer, SSP añade un valor
aleatorio secreto al final del buffer: el chivato. Cuando la función
retorna, SSP se asegura de que el chivato no ha sido modificado. Si un
atacante quisiera intentar un desbordamiento de buffer, sobreescribiría
este valor y esto desembocaría en un manejador de ataque a pila.
Consecuentemente esto causaría la finalización del proceso atacado.
</p>

<p>
<uri link="http://www.trl.ibm.com/projects/security/ssp/">Más información
sobre SSP.</uri>
</p>

</body>
</section>
</chapter>

<chapter>
<title>Construyendo un núcleo con PaX habilitado</title>
<section>
<body>

<p>
Varios árboles con el núcleo parcheado con PaX están disponibles en
Gentoo.
</p>

<p>
Para las máquinas basadas en 2.4/2.6, los núcleos recomendados son
<c>hardened-sources</c>
</p>

<p>
Obtenga uno de los árboles fuente recomendados, o aplique los parches
apropiados presentes en <uri>http://pax.grsecurity.net</uri> a su árbol
y configúrelo como normalmente lo haría para la máquina destino.
</p>

<p>
En <c>Security Options -&gt; PaX</c>, aplique las opciones que se
muestran abajo.
</p>

<pre caption="Configuración del núcleo">
[*] Enable various PaX features

PaX Control -&gt;

 [ ] Support soft mode
 [*] Use legacy ELF header marking
 [*] Use ELF program header marking
     MAC system integration (none)  ---&gt;

Non-executable page -&gt;

 [*] Enforce non-executable pages
 [*]   Paging based non-executable pages
 [*]   Segmentation based non-executable pages
 [*] Emulate trampolines
 [*] Restrict mprotect()
 [ ]   Disallow ELF text relocations

Address Space Layout Randomization -&gt;

 [*] Address Space Layout Randomization
 [*]   Randomize kernel stack base
 [*]   Randomize user stack base
 [*]   Randomize mmap() base
 [*]     Randomize ET_EXEC base
</pre>

<p>
Construya este núcleo como lo haría normalmente e instálelo en
<path>/boot</path>.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Construyendo una zona de usuario con PIE/SSP habilitado</title>
<section>
<body>

<p>
Gentoo Hardened ha añadido soporte para la construcción transparente
de PIE/SSP usando un fichero de especificación de GCC. Esto significa
que cualquier usuario que realice una actualización de instalaciones
anteriores de Hardened deberá eliminar cualquier LDFLAGS o CFLAGS
usadas para activar PIE/SSP. También, se debe tener en cuenta que
el paquete <c>hardened-gcc</c> es ahora obsoleto y debe ser
desinstalado (la versión 5.0 es una paquete inútil). Para obtener
la versión actual de GCC, añada <c>USE="hardened pic"</c> a
<path>/etc/make.conf</path> si no está usando el perfil hardened.
</p>

<p>
Para mantener un conjunto de herramientas consistente, primero haga
<c>emerge binutils gcc virtual/libc</c>. A continuación, reconstruya
el sistema completo haciendo <c>emerge -e world</c>. A partir de ese
momento todos los paquetes se construirán usando las tecnologías PIE/SSP.
</p>

<warn>
Tanto PIE como SSP pueden causar algún tipo de problema con algunos
paquetes. Si encuentra alguno que falle al compilar, por favor,
informe de una nueva y detallada incidencia incluyendo los datos
de la compilación que ha fallado y la salida de <c>emerge info</c> en
<uri>http://bugs.gentoo.org/</uri>.
</warn>

<p>
Probablemente quiera también hacer emerge de pax-utils.
A menudo, si un fichero ELF tiene relocalizaciones ejecutables en
el segmento de texto, éstas pueden causarnos problemas.
scanelf -BRylptq
</p>

</body>
</section>
</chapter>

<chapter>
<title>Cuando las cosas no van como debieran (PaX Control)</title>
<section>
<body>

<p>
Algunas aplicaciones legítimas intentarán generar código en tiempo de
ejecución, el cual se ejecuta fuera de memoria. Naturalmente, PaX no
lo permitirá y terminará las aplicaciones que intenten hacerlo.
</p>

<note>
La más notable de este tipo de aplicaciones es XFree/Xorg, mplayer y
herramientas multimedia basadas en xine-lib. La forma más fácil de
evitar estos problemas es desactivar las protecciones de PaX.
</note>

<p>
Afortunadamente existe una utilidad para activar o desactivar las
protecciones para un ejecutable: <e>paxctl</e>. Al igual que otros
paquetes en Gentoo, instale paxctl mediante el comando
<c>emerge paxctl</c>. El uso de esta utilidad se muestra mediante
<c>paxctl -h</c>.
</p>

<note>
Si tiene una versión antigua de binutils, necesitará usar <e>chpax</e>,
el cual edita las marcas de PaX con el formato antiguo. El uso de chpax
es muy parecido al de paxctl. Esto también requiere el soporte de marcas
construido en su núcleo.
Las nuevas versiones de paxctl hacen chpax obsoleto.
</note>

<pre caption="paxctl -h">
usage: paxctl &lt;options&gt; &lt;files&gt;

options:
        -p: disable PAGEEXEC            -P: enable PAGEEXEC
        -e: disable EMUTRMAP            -E: enable EMUTRMAP
        -m: disable MPROTECT            -M: enable MPROTECT
        -r: disable RANDMMAP            -R: enable RANDMMAP
        -x: disable RANDEXEC            -X: enable RANDEXEC
        -s: disable SEGMEXEC            -S: enable SEGMEXEC

        -v: view flags                  -z: restore default flags
        -q: suppress error messages     -Q: report flags in short format flags
</pre>

<p>
La primera opción que se suele usar es <c>-v</c>, la cual muestra los
ajustes realizados en un binario en particular.
</p>

<pre caption="paxctl -v">
shell user # paxctl -v /usr/bin/Xorg
PaX control v0.2
Copyright 2004 PaX Team &lt;pageexec@freemail.hu&gt;

- PaX flags: -p-sM--x-eR- [/usr/bin/Xorg]
        PAGEEXEC is disabled
        SEGMEXEC is disabled
        MPROTECT is enabled
        RANDEXEC is disabled
        EMUTRAMP is disabled
        RANDMMAP is enabled
</pre>

<p>
Esto muestra un binario XFree con todas las protecciones deshabilitadas.
</p>

<p>
Para activar una de estas protecciones en un binario, nos será útil la
opción <c>-z</c> ya que restaura el valor por defecto de esa protección.
</p>

<p>
Para desactivar las protecciones en Xorg, ejecute
<c>paxctl -zpeMRxs /usr/bin/Xorg</c>.
</p>

<p>
Puede probar a activar/desactivar varias protecciones para comprobar
cuáles son las mínimas para poder trabajar. A menudo se comprueba que
son necesarias las combinaciones -m -sp.
</p>

</body>
</section>
</chapter>
</guide>
