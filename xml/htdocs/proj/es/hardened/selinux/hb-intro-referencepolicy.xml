<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/es/hardened/selinux/hb-intro-referencepolicy.xml,v 1.2 2011/06/09 17:15:57 nimiux Exp $ -->

<sections>
<version>1</version>
<date>2011-06-02</date>

<section>
<title>Sobre las directrices de SELinux</title>
<subsection>
<title>El lenguaje de las directrices de SELinux</title>
<body>

<p>
Tal y como se ha descrito anteriormente, SELinux utiliza el forzado de
tipos para describir el estado de su sistema. Esto se realiza dando a
cada recurso de su sistema (bien sea un proceso, un puerto de red, un
fichero o un directorio) un tipo especifico y describiendo las reglas en
las que los tipos puede trabajar con otros tipos.
</p>

<p>
Por ejemplo, la regla que permite a todos los usuarios comunes (que están
en el dominio user_t) ejecutar ficheros con la etiqueta bin_t:
</p>

<pre caption="Regla para permitir el ejecución de ficheros bin_t">
allow user_t bin_t:file { read execute open };
</pre>

<p>
Otras reglas soportadas son:
</p>

<ul>
  <li>
    <e>dontaudit</e> deshabilita el registro del mensaje (o mensajes)
    de denegación.
  </li>
  <li>
    <e>auditallow</e> permite el acceso a la vez que realiza el registro
    del mismo (por defecto los registros de acceso no se guardan).
  </li>
  <li>
    <e>neverallow</e> fuerza a que una determinada regla no pueda ser
    concedida. Aunque SELinux es un modelo de seguridad positivo (usa
    listas blancas), en algunas ocasiones las reglas neverallow pueden
    ser necesarias. Generalmente estas reglas no se utilizan.
  </li>
</ul>

<p>
como puede imaginar, definir todas las reglas necesarias por un sistema
consume muchos recursos si se desea hacer correctamente. No solo
requiere un estudio en profundidad del funcionamiento del sistema, sino
también bastante tiempo para escribir y realizar pruebas. Pero quizás donde
se emplea más tiempo es en la escritura de las mismas reglas una y otra
vez para dominios distintos. Para ayudar a los desarrolladores en la
escritura de directrices, se ha creado una <e>directriz de referencia</e>
con las siguientes funcionalidades que son necesarias:
</p>

<ul>
  <li>
    el desarrollo de las reglas para las directrices de SELinux debe ser
    centralizado incluso para distintas distribuciones.
  </li>
  <li>
    Se debe soportar un lenguaje de macros que haga más sencillo escribir
    nuevas directrices.
  </li>
  <li>
    las directrices deben ser modulares, permitiendo añadir o eliminar
    nuevas reglas.
  </li>
</ul>

<p>
Centralizando el desarrollo de reglas para las directrices SELinux, los
usuarios de SELinux usarán el mismo convenio para el nombrado de dominios
en todas las distribuciones. Esto hace más fácil la depuración, realizando
bastante menos documentación y haciendo un poco más fácil que los usuarios
finales se familiaricen con SELinux.
</p>

</body>
</subsection>
<subsection>
<title>La directriz de referencia de Tresys</title>
<body>

<p>
La directriz de referencia por excelencia es la <uri
link="http://oss.tresys.com/projects/refpolicy">Directriz de Referencia
SELinux de Tresys</uri>. Esta directriz de referencia (actualmente
en su versión principal 2) es usada por prácticamente todas las
distribuciones que soportan SELinux, incluyendo Gentoo Hardened, Fedora,
RedHat Enterprise Linux, Debian, Ubuntu y otras. Esta implementación no
solo ofrece las directrices modulares que el usuario busca, sino que
también mejora la experiencia con SELinux mediante herramientas de
desarrollo que hacen más fácil trabajar con las directrices de SELinux en
su sistema.
</p>

<p>
La directriz de referencia comienza con una directriz <e>base</e> denominada
<path>base.pp</path>. Se trata de una colección de directrices necesarias
para tener un sistema preparado y en funcionamiento y que ofrece las
funciones necesarias para su orientación modular. En Gentoo Hardened, esta
directriz base se ofrece mediante <c>selinux-base-policy</c>.
</p>

<p>
Los módulos de directriz también utilizan la extensión <path>.pp</path> y
se nombran apropiadamente de acuerdo a lo que contienen. Por ejemplo, el
módulo de la directriz que contiene todas las reglas para la aplicación
<c>screen</c>, se llama <path>screen.pp</path>. Sin embargo, no todos los
módulos de directriz se denominan igual que la herramienta en cuestión:
el módulo de directriz que contiene las reglas especificas para
<c>wpa_supplicant</c> se denomina <path>networkmanager.pp</path>. En
Gentoo Hardened, los módulos de directriz están disponibles en la
categoría <path>sec-policy</path> y se llaman
<path>selinux-&lt;módulo&gt;</path>.
</p>

<p>
Para obtener una lista de los módulos que se están ejecutando, teclee la
orden <c>semodule</c>:
</p>

<pre caption="Listando las directrices modulares de SELinux que se hallan en ejecución">
~# <i>semodule -l</i>
dbus    1.14.0
dnsmasq 1.9.0
hal     1.13.0
[...]
</pre>

</body>
</subsection>
<subsection>
<title>Conmutar los estados de la directriz</title>
<body>

<p>
Debido a que las directrices se construyen bajo una perspectiva
"denegar todo", podrá imaginar que hay miles de reglas que ya están
disponibles en la directriz de referencia. En algunas ocasiones los
desarrolladores saben que ciertas reglas se han activado en un sistema
y desactivado en otros. Aunque esto se puede conseguir desarrollando
dos módulos distintos, en el desarrollo de SELinux se optó por
soportar <e>booleanos SELinux</e>.
</p>

<p>
Los booleanos SELinux permiten la aplicación condicional de las reglas,
basándose en los requisitos que imponga el administrador. Puede obtener
un listado de los booleanos soportados mediante <c>getsebool</c>:
</p>

<pre caption="Obteniendo una lista de booleanos soportados y su estado actual">
~# <i>getsebool -a</i>
allow_execheap --&gt; off
allow_execmem --&gt; off
[...]
fcron_crond --&gt; off
global_ssp --&gt; on
[...]
</pre>

<p>
Si necesita conmutar el valor de un booleano, puede usar
<c>togglesebool</c> o <c>setsebool</c> para indicar su valor
explícitamente:
</p>

<pre caption="Conmutando el estado de un  booleano">
~# <i>getsebool user_dmesg</i>
user_dmesg --&gt; off
~# <i>togglesebool user_dmesg</i>
user_dmesg: active
<comment>(Ahora, el estado se ha definido a 'activado')</comment>
~# <i>getsebool user_dmesg</i>
user_dmesg --&gt; on
<comment>(Definimos explícitamente el valor a 'desactivado')</comment>
~# <i>setsebool user_dmesg off</i>
</pre>

</body>
</subsection>
<subsection>
<title>Ficheros de directriz y sus localizaciones</title>
<body>

<p>
En Gentoo Hardened, los ficheros de directriz se almacenan en
<path>/usr/share/selinux/strict</path> o en
<path>/usr/share/selinux/targeted</path> (dependiendo de la configuración
de su sistema SELinux). En esta localización encontrará:
</p>

<ul>
  <li>
    un fichero llamado <path>base.pp</path>, el cual es la base de la
    directriz SELinux,
  </li>
  <li>
    uno o más ficheros con la extensión <path>.pp</path>, que son los
    módulos de directriz, y
  </li>
  <li>
    un directorio <path>include/</path> que contiene los ficheros
    necesarios para los desarrolladores de módulos SELinux para construir
    módulos adicionales para este sistema.
  </li>
</ul>

</body>
</subsection>
<subsection>
<title>Versiones de la directriz</title>
<body>

<p>
La infraestructura de la directriz de SELinux que se utiliza (esto es,
las capacidades y funcionalidades que ofrece) no está en su primera
versión. Si pudiera ejecutar ahora mismo <c>sestatus</c>, observaría que
estamos usando la versión 24 de la directriz. Cuando se añaden
nuevas funcionalidades o capacidades, se requieren cambios a la estructura
interna de la directriz compilada y se incremente el número de versión.
A continuación se muestra una vista rápida de la historia de las versiones
de la directriz.
</p>

<dl>
  <dt>Versión 12</dt>
  <dd>"Antigua API" para SELinux, la cual es ahora obsoleta</dd>
  <dt>Versión 15</dt>
  <dd>"Nueva API" para SELinux, integrada en el núcleo Linux 2.6.0 (hasta
  la versión 2.6.5)</dd>
  <dt>Versión 16</dt>
  <dd>Añadidas extensiones condicionales a la directriz (2.6.5)</dd>
  <dt>Versión 17</dt>
  <dd>Añadido soporte para IPV6 (2.6.6 - 2.6.7)</dd>
  <dt>Versión 18</dt>
  <dd>Añadido soporte para zócalos (sockets) de enlace de red con ajuste fino
  (2.6.8 - 2.6.11)</dd>
  <dt>Versión 19</dt>
  <dd>Mejorada la seguridad multinivel (2.6.12 - 2.6.13)</dd>
  <dt>Versión 20</dt>
  <dd>Optimizaciones en el acceso al tamaño de la tabla de vectores (2.6.14 -
  2.6.18)</dd>
  <dt>Versión 21</dt>
  <dd>Transiciones en rango de clases de objetos (2.6.19 - 2.6.24)</dd>
  <dt>Versión 22</dt>
  <dd>Capacidades de la directriz (características) (2.6.25)</dd>
  <dt>Versión 23</dt>
  <dd>Modo permisivo para cada dominio (2.6.26 - 2.6.27)</dd>
  <dt>Versión 24</dt>
  <dd>Jerarquía explícita (limites de tipos) (2.6.28 - 2.6.38)</dd>
  <dt>Versión 25</dt>
  <dd>Soporte de transiciones basadas en nombres de fichero (2.6.39)</dd>
  <dt>Versión 26</dt>
  <dd>Soporte de transición de roles para clases no-proceso (3.0)</dd>
</dl>

</body>
</subsection>
</section>
</sections>
