<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/es/hardened/selinux/hb-using-states.xml,v 1.4 2012/12/20 13:38:48 nimiux Exp $ -->

<sections>
<version>4</version>
<date>2012-12-20</date>

<section>
<title>Estados de SELinux</title>
<subsection>
<title>Introducción</title>
<body>

<p>
Cuando SELinux está disponible, normalmente se encontrará en uno de los
tres estados de su sistema: deshabilitado, permisivo o forzado.
</p>

</body>
</subsection>
<subsection>
<title>Deshabilitado</title>
<body>

<p>
Cuando la orden <c>getenforce</c> devuelve "Disabled", entonces SELinux
no está corriendo en su sistema. Incluso aunque está construido en
su núcleo, definitivamente está deshabilitado. Su sistema correrá con
los controles de acceso discrecionales normales (las reglas de permiso
usuales para los entornos Linux estándar), sin embargo, los controles
de acceso obligatorio no estarán activos.
</p>

<p>
Cuando SELinux está deshabilitado, esto significa que los ficheros,
directorios, etc que se modifican o crean no obtendrán el contexto SELinux
correcto que se les debe asignar. Cuando, más adelante, arranque su sistema
con SELinux habilitado (permisivo o forzado), algunos problemas podrán
surgir ya que el subsistema  SELinux no conoce qué etiquetas tienen los
ficheros (se usará una etiqueta por defecto que no es accesible por la
mayoría de los dominios).
</p>

<p>
La mejor forma de continuar en este caso es iniciar en modo permisivo y
etiquetar de nuevo todo el sistema de ficheros:
</p>

<pre caption="Etiquetar de nuevo todo el sistema de ficheros">
# <i>rlpkg -a -r</i>
</pre>

</body>
</subsection>
<subsection>
<title>Permisivo</title>
<body>

<p>
Cuando se activa SELinux en modo permisivo (<c>getenforce</c> devuelve
"Permissive"), entonces SELinux está habilitado y tiene cargada una
directriz. Cada acceso que realiza un proceso se comprueba en las
reglas de la directriz y, en caso de que un acceso no esté permitido,
éste se registrará (a menos que la denegación esté marcada como dontaudit)
pero <e>no</e> se prohibirá.
</p>

<p>
El modo permisivo es perfecto para familiarizarse con SELinux y preparar
el sistema para el modo "forzado" que se empleará en el futuro. Mientras
se trabaja en modo permisivo, las aplicaciones que <e>no están integradas
con SELinux</e> funcionará como si SELinux no estuviera instalado.
Esta situación es perfecta para validar si un problema es causado por
SELinux o no: si estando en modo permisivo el problema aún persiste,
entonces el problema no lo está causando SELinux.
</p>

<p>
Sin embargo, hay una salvedad: si la aplicación está
<e>integrada con SELinux</e> (es decir, sabe que está corriendo en un
entorno con SELinux activado y es capaz de hacer llamadas específicas
de SELinux) puede que reaccione de forma diferente. Aunque esto es
a menudo (pero no siempre) debido a unas malas prácticas en la
programación, algunas aplicaciones comprueban si SELinux está activado
y basan su flujo funcional en este resultado, independientemente si el
estado es permisivo o forzado.
</p>

<p>
Para averiguar si una aplicación está integrada o no con SELinux,
simplemente compruebe si está enlazada con libselinux (haciendo
<c>ldd</c> o <c>scanelf</c>, esto es parte del paquete
<path>app-misc/pax-utils</path>):
</p>

<pre caption="Comprobar si /bin/ls está integrada con SELinux">
# <i>scanelf -n /bin/ls</i>
 TYPE     NEEDED FILE
ET_DYN   libselinux.so.1,librt.so.1,libc.so.6   /bin/ls
</pre>

</body>
</subsection>
<subsection>
<title>Forzado</title>
<body>

<p>
Si la orden <c>getenforce</c> devuelve "Enforcing", entonces SELinux
esta cargado y actuará en base a la directriz. Cuando un proceso
intenta realizar alguna actividad que no está permitida por la
directriz, esta actividad será registrada (a menos que se defina
un dontaudit) y no se permitirá la continuidad de la actividad.
Este es el único modo en el que puede decir que SELinux está
verdaderamente activo, ya que es el único momento en que la directriz
está actuando.
</p>

</body>
</subsection>
<subsection>
<title>Cambiando entre estados</title>
<body>

<p>
Dependiendo de su configuración del núcleo Linux, puede conmutar entre
estados utilizando los siguientes métodos. La configuración del núcleo
puede, sin embargo, hacer que alguna de estas opciones estén
deshabilitadas (por ejemplo, un sistema hardened que no permita
deshabilitar SELinux de ningún modo).
</p>

<p>
Usar la orden <c>setenforce</c>:
</p>

<pre caption="Conmutar entre forzado y permisivo">
<comment>(Cambiar al modo permisivo)</comment>
# <i>setenforce 0</i>

<comment>(Cambiar al modo forzado)</comment>
# <i>setenforce 1</i>
</pre>

<p>
Usar la opción de inicio <c>enforcing</c> del núcleo:
</p>

<pre caption="Conmutar entre forzado y permisivo a través de opciones de inicio">
<comment>(La siguiente línea del cargador del núcleo GRUB, permitiría iniciar en modo permisivo)</comment>
kernel /kernel-2.6.39-hardened-r8 root=/dev/md3 rootflags=data=journal <i>enforcing=0</i>
</pre>

<p>
Usar la variable <c>SELINUX</c> <path>/etc/selinux/config</path>:
</p>

<pre caption="Ajuste SELinux /etc/selinux/config">
# <i>cat /etc/selinux/config</i>
# This file controls the state of SELinux on the system on boot.

# SELINUX can take one of these three values:
#       enforcing - SELinux security policy is enforced.
#       permissive - SELinux prints warnings instead of enforcing.
#       disabled - No SELinux policy is loaded.
<i>SELINUX=enforcing</i>

# SELINUXTYPE can take one of these four values:
#       targeted - Only targeted network daemons are protected.
#       strict   - Full SELinux protection.
#       mls      - Full SELinux protection with Multi-Level Security
#       mcs      - Full SELinux protection with Multi-Category Security
#                  (mls, but only one sensitivity level)
SELINUXTYPE=strict
</pre>

<p>
Cuando quiera cambiar del modo permisivo al forzado, se recomienda hacerlo
en el orden descrito arriba:
</p>

<ol>
  <li>
    En primer lugar inicie el sistema en modo permisivo, entre en él
    y verifique que su contexto es correcto (<c>id -Z</c>), luego
    conmute a forzado (<c>setenforce 1</c>). Puede comprobar ahora si
    su sistema está funcionado correctamente.
  </li>
  <li>
    A continuación, inicie el sistema con el parámetro del núcleo
    <c>enforcing=1</c> (a menos que inicie con un initramfs, lea más
    arriba en este mismo manual). De esta forma, sus sistema se iniciará
    en modo forzado, si las cosas van mal, simplemente reinicie, elimine
    la opción y volverá al modo permisivo.
  </li>
  <li>
    Finalmente, edite <path>/etc/selinux/config</path> para que los
    cambios sean persistentes.
  </li>
</ol>

</body>
</subsection>
<subsection>
<title>Modo Dominio permisivo</title>
<body>

<p>
Puede también optar por marcar un solo dominio permisivo mientras
ejecuta el resto del sistema en modo forzado. Por ejemplo, para marcar
mplayer_t como un dominio permisivo (lo que implica que SELinux no
forzará nada):
</p>

<pre caption="Marcar mplayer_t como permisivo">
# <i>semanage permissive -a mplayer_t</i>
</pre>

<p>
Con la opción <c>-d</c>, puede eliminar la marca permisiva de nuevo.
</p>

</body>
</subsection>
</section>

<section>
<title>Tipos de directriz SELinux</title>
<subsection>
<title>Introducción</title>
<body>

<p>
Aparte del estado de SELinux, también se ofrecen distintos tipos de
directriz. Estos tipos se diferencian entre ellos en que tienen
características específicas de SELinux habilitadas o deshabilitadas.
Dentro de Gentoo, se soportan tres (una cuarta también está disponible,
como veremos):
<c>targeted</c>, <c>strict</c>, <c>mcs</c> (y <c>mls</c>).
</p>

<p>
El tipo utilizado en un sistema se declara en
<path>/etc/selinux/config</path>:
</p>

<pre caption="La información SELINUXTYPE en /etc/selinux/config">
# <i>cat /etc/selinux/config</i>
# This file controls the state of SELinux on the system on boot.

# SELINUX can take one of these three values:
#       enforcing - SELinux security policy is enforced.
#       permissive - SELinux prints warnings instead of enforcing.
#       disabled - No SELinux policy is loaded.
SELINUX=enforcing

# SELINUXTYPE can take one of these four values:
#       targeted - Only targeted network daemons are protected.
#       strict   - Full SELinux protection.
#       mls      - Full SELinux protection with Multi-Level Security
#       mcs      - Full SELinux protection with Multi-Category Security
#                  (mls, but only one sensitivity level)
<i>SELINUXTYPE=strict</i>
</pre>

</body>
</subsection>
<subsection>
<title>strict (sin dominios no confinados)</title>
<body>

<p>
El tipo de directriz <c>strict</c> es aquél que se describió en
capítulos anteriores y casualmente se trata del tipo más fácil de
comprender. Con el tipo de directriz strict, todas y cada una de las
aplicaciones que se ejecutan lo hacen en un dominio que tiene privilegios
limitados. Aunque hay dominios altamente privilegiados, nunca son
ilimitados en sus privilegios.
</p>

</body>
</subsection>
<subsection>
<title>targeted (utilizando dominios no confinados)</title>
<body>

<p>
El tipo de directriz <c>targeted</c> es similar al strict con un
añadido importante: el soporte para dominios no confinados. Las
aplicaciones (o usuarios) que corren en un dominio no confinado
prácticamente no tienen límite en sus privilegios. Los dominios no
confinados se utilizan normalmente para los usuarios y las aplicaciones
de usuario, sin embargo, el inicio del sistema y otros dominios se
marcan también como "no confinados".
</p>

<p>
La idea detrás de la directriz targeted es que los servicios orientados
a red que están corriendo en dominios (confinados) regulares mientras
que el resto utiliza el control de acceso discrecional estándar que
ofrece Linux. Estos otros dominios corren como "no confinados".
</p>

</body>
</subsection>
<subsection>
<title>mcs (utiliza categorías múltiples)</title>
<body>

<p>
La introducción de <c>mls</c> y <c>mcs</c> ofrece la capacidad
<e>multi-tenancy</e>: varias instancias de la misma aplicación pueden
ejecutarse, pero cada instancia se debe confinar respecto a las otras
(en lugar de tener todos los procesos en el mismo dominio y por lo tanto
los mismo privilegios).
</p>

<p>
Un ejemplo sencillo es la virtualización: una máquina virtual que corre
en el dominio <c>qemu_t</c> necesita privilegios de escritura en el
fichero imagen que contiene el sistema operativo de la máquina virtual.
Sin embargo, si correo dos máquinas, no deseará que una de ellas escriba
en el fichero imagen de la otra y viceversa. Con dominios regulares,
necesitará ofrecer este comportamiento. Con <c>mcs</c>, puede darle
a cada instancia en ejecución una categoría específica (un número) y
únicamente conceder privilegios de escritura al fichero de la máquina
virtual con la categoría (el número) correcta.
</p>

</body>
</subsection>
<subsection>
<title>mls (utilizando múltiples niveles de seguridad)</title>
<body>

<p>
El tipo de directriz <c>mls</c> está disponible, pero aún no está soportado
por Gentoo Hardened. Con este tipo de directriz, es posible ofrecer
niveles de sensibilidad a ficheros y recursos así como a dominios. Los
niveles de sensibilidad se pueden expresar mejor en los términos
<e>public</e>, <e>private</e>, <e>confidential</e> o <e>strictly
confidential</e> (público, privado, confidencial o estrictamente
confidencial). Con MLS, puede marcar un fichero con un (o un conjunto)
nivel de sensibilidad y asegurarse de que únicamente los dominios con
el nivel de sensibilidad correcto puede acceder a él.
</p>

</body>
</subsection>
<subsection>
<title>Conmutando entre tipos</title>
<body>

<p>
No se recomienda conmutar entre tipos con frecuencia. En el mejor de
los casos, elegimos un tipo de directriz en el momento de instalar y
nos ajustamos a él. No es imposible (ni tampoco muy difícil) cambiar
entre tipos.
</p>

<p>
En primer lugar, cambie su sistema a modo permisivo utilizando
<c>setenforce 0</c> o, si su sistema no permite el cambio de modo,
edite <path>/etc/selinux/config</path> para que el sistema arranque
en modo permisivo. Si no puede utilizar <c>setenforce 0</c> entonces
necesitará reiniciar ahora de modo que el sistema funcione en modo
permisivo.
</p>

<p>
A continuación, edite <path>/etc/selinux/config</path> y cambie
la variable <c>SELINUXTYPE</c> de la directriz actual a la nueva.
Esto le indicará a SELinux que cargue la directriz correcta cuando
se inicie el sistema.
</p>

<p>
Ahora vaya a los módulos construidos para la directriz en
<path>/usr/share/selinux</path> ya que necesitamos cargar la nueva
directriz (ya que actualmente el sistema está corriendo con la
antigua). El ejemplo de abajo muestra como hacer esto si viene
de un tipo de directriz estricto <e>strict</e> y quiere ir al
tipo <e>mcs</e>:
</p>

<pre caption="Cargar la directriz mcs">
# <i>cd /usr/share/selinux/mcs</i>
# <i>semodule -b base.pp -i $(ls *.pp | grep -v base.pp | grep -v unconfined.pp)</i>
</pre>

<p>
Ahora su sistema está corriendo con la directriz mcs cargada, pero
observará que se producen múltiples denegaciones de acceso a la hora
de realizar cualquier acción en el sistema de ficheros, ya que los
ficheros de su sistema no están etiquetados correctamente: El tipo de
directriz mcs requiere a las etiquetas tener una etiqueta de
sensibilidad sobre ellas, lo cual no es el caso si utiliza la directriz
estricta. Por lo tanto, reetiquetemos completamente el sistema de
ficheros, incluyendo aquéllas localizaciones que podrían estar ocultas
debido a que otros sistemas de ficheros se han montado sobre ellas.
</p>

<pre caption="Reetiquetar completamente el sistema de ficheros">
# <i>rlpkg -a -r</i>
# <i>mount -o bind / /mnt/gentoo</i>
# <i>setfiles -r /mnt/gentoo /etc/selinux/strict/contexts/files/file_contexts /mnt/gentoo/dev</i>
# <i>setfiles -r /mnt/gentoo /etc/selinux/strict/contexts/files/file_contexts /mnt/gentoo/lib64</i>
# <i>umount /mnt/gentoo</i>
</pre>

<p>
Para terminar, edite <path>/etc/fstab</path> y actulice los parámetros
<c>rootcontext=</c> para incluir también una etiqueta de sensibilidad
(en caso de que cambiara a mcs o mls) o ninguna (en caso de que cambiara
a targeted o strict).
</p>

<pre caption="Cambiar /etc/fstab">
<comment># Ejemplo cuando cambiamos de strict a mcs</comment>
tmpfs  /tmp  tmpfs  defaults,noexec,nosuid,rootcontext=system_u:object_r:tmp_t<i>:s0</i>  0 0
</pre>

<p>
Una vez realizadas todas estas acciones, reinicie su sistema para
asegurarse de que funciona correctamente (también la secuencia de
arranque).
</p>

</body>
</subsection>
</section>

</sections>
