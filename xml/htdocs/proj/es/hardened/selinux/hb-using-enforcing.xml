<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/es/hardened/selinux/Attic/hb-using-enforcing.xml,v 1.1 2011/06/07 18:05:53 nimiux Exp $ -->

<sections>
<version>1</version>
<date>2011-03-02</date>

<section>
<title>Cambiar al modo forzado (enforcing)</title>
<subsection>
<title>Introducción</title>
<body>

<p>
El cambio al modo forzado (enforcing) no requiere que todas las directrices
estén completamente operacionales, tampoco requiere que el sistema se inicie
en modo forzado. Puede comenzar poco a poco, habilitando el modo forzado una
vez que su sistema se haya iniciado, y a continuación habilitarlo durante
el inicio (pero con la posibilidad de deshabilitarlo de nuevo cuando algo
vaya mal) y finalmente reconfigurar su núcleo de modo que la no sea posible
deshabilitar SELinux.
</p>

</body>
</subsection>
<subsection>
<title>Iniciar, cambiar de modo</title>
<body>

<p>
Para iniciar su sistema antes de habilitar el modo forzado, simplemente
inicie de la forma en que lo hace normalmente. Entonces, cuando crea que
puede corre su sistema en modo forzado, ejecute <c>setenforce 1</c>.
</p>

<pre caption="Habilitar el modo forzado">
~# <i>setenforce 1</i>
</pre>

<p>
Es prudente asegurarse de que ha iniciado el sistema pero que no ha
ingresado en él salvo con el usuario root. También verifique que la
sesión que está utilizando actualmente (como root) usa el contexto
<c>root:sysadm_r:sysadm_t</c> o el
<c>unconfined_u:unconfined_r:unconfined_t</c> (de lo contrario puede
que no funcione el cambio al modo forzado).
</p>

<p>
Cuando observe que las cosas van muy, pero que muy mal, deshabilite
SELinux usando <c>setenforce 0</c> e intente solventar los fallos.
</p>

</body>
</subsection>
<subsection>
<title>Arrancando en modo forzado (una sola vez)</title>
<body>

<p>
Cuando quiera arrancar en modo forzado, pero no quiere configurar SELinux
(aún) para correr siempre en modo forzado (dicho de otro modo, solo lo
quiere intentar una vez), añada <c>enforcing=1</c> a las opciones de
configuración del gestor de arranque.
</p>

<pre caption="Ejemplo de configuración de GRUB para arrancar en modo forzado">
kernel /vmlinuz root=/dev/md3 rootflags=data=journal <i>enforcing=1</i>
</pre>

</body>
</subsection>
<subsection>
<title>Arrancar en modo forzado</title>
<body>

<p>
Una vez que compruebe que puede (re)iniciar siempre que lo desee en modo
forzado, edite el fichero <path>/etc/selinux/config</path> y cambie
<c>SELINUX=permissive</c> a <c>SELINUX=enforcing</c>.
</p>

</body>
</subsection>
<subsection>
<title>Reconfigurar el núcleo</title>
<body>

<p>
Una vez esté seguro de que su sistema puede permanecer todo el tiempo en
modo forzado, reconfigure su núcleo de modo que SELinux no pueda ser
deshabilitado.
</p>

<pre caption="Reconfigurar el núcleo Linux">
[*] NSA SELinux Support
[ ]   NSA SELinux boot parameter
[ ]   NSA SELinux runtime disable
<comment># Asegúrese de que la siguiente opción está deshabilitada</comment>
<i>[ ]   NSA SELinux Development Support</i>
[ ]   NSA SELinux AVC Statistics
(1)   NSA SELinux checkreqprot default value
[ ]   NSA SELinux maximum supported policy format version
</pre>

</body>
</subsection>
</section>
<section>
<title>Analizando la AVC</title>
<subsection>
<title>Intrusión o no intrusión</title>
<body>

<p>
Una vez que el sistema esté corriendo en modo forzado, el uso que se le
da al fichero de registro <path>/var/log/avc.log</path> cambia. Mientras
que antes se usaba para informarle sobre denegaciones que podían causar
fallos en su sistema, ahora es usado como fuente de información sobre el
comportamiento de las aplicaciones, y en algunas ocasiones, de su
comportamiento errático.
</p>

<p>
Es importante saber leer los registros AVC, ya que en un futuro (cercano)
podría usar los registros AVC para identificar intentos de intrusión
potenciales. Digamos que está corriendo un servidor Web que atiende
peticiones procedentes de Internet y está contenido en su propio dominio
SELinux. De repente, comienza a obtener denegaciones extrañas de ese
dominio SELinux intentando leer ficheros que realmente no debería leer,
o tratando de escribir algo en una localización temporal en la cual
no debe. Esto puede ser un comportamiento completamente esperado, pero
puede tratarse también de un usuario malicioso que está intentando
ejecutar código malicioso en su servidor Web.
</p>

<p>
Puede considerar que el hecho de interpretar los registros AVC lleve mucho
tiempo si está obteniendo muchas denegaciones AVC que son cosméticas (pero
seguras). En primer lugar veremos si nos podemos deshacer de ellas...
</p>

</body>
</subsection>
<subsection>
<title>Ignorando eventos AVC cosméticos</title>
<body>

<p>
Cuando obtenga denegaciones AVC que considera inofensivas para su sistema,
puede crear un módulo de directriz que contenga la regla AVC exacta, pero
que usa la sentencia <e>dontaudit</e> en lugar de <e>allow</e>.
</p>

<p>
Considere la siguiente denegación AVC:
</p>

<pre caption="Ejemplo de denegación AVC inofensiva">
Jan  6 19:49:25 hpl kernel: [10482.016339] type=1400 audit(1294339765.865:1527):
avc:  denied  { use } for  pid=19421 comm="ifconfig" path="/dev/null" dev=tmpfs
ino=1552 scontext=system_u:system_r:ifconfig_t
tcontext=system_u:system_r:wpa_cli_t tclass=fd
</pre>

<p>
La denegación muestra que el proceso <c>ifconfig</c> está intentando usar
un descriptor de fichero en el dominio wpa_cli_t. El descriptor de fichero
destino apunta a <path>/dev/null</path>. Esto normalmente significa que el
proceso <c>ifconfig</c> se ha iniciado desde el dominio wpa_cli_t con
<c>&gt; /dev/null</c> para redirigir su salida al dispositivo
<path>/dev/null</path>. A pesar de que esto se deniega (por lo que la
salida no será redigirida a <path>/dev/null</path>), no tiene ningún
impacto funcional en el sistema ya que, de cualquier forma, la intención
era ignorar la salida.
</p>

<p>
Entonces, ¿Cómo podemos asegurar que esta regla no inunda nuestros
registros AVC?. Bien, necesitamos crear un módulo (al igual que vimos
anteriormente en <uri link="?part=2&amp;chap=3#create_module">
Crear reglas específicas de concesión</uri>):
</p>

<pre caption="Crear un módulo para ignorar estas denegaciones AVC">
~$ <i>cat ignoreavc.te</i>
module ignoreavc 1.0.0;

require {
  type ifconfig_t;
  type wpa_cli_t;

  class fd use;
}

dontaudit ifconfig_t wpa_cli_t:fd { use };

~$ <i>checkmodule -m -o ignoreavc.mod ignoreavc.te</i>
~$ <i>semodule_package -o ignoreavc.pp -m ignoreavc.mod</i>
~$ <i>semodule -i ignoreavc.pp</i>
</pre>

<p>
Una vez se carga el módulo, no debería volver a ver estas denegaciones en
su registro. Sin embargo, si alguna vez cree que está aplicando la
sentencia <e>dontaudit</e> demasiadas veces, siempre puede recargar las
directrices SELinux sin sentencias dontaudit:
</p>

<pre caption="Recargar las directrices SELinux sin dontaudit">
~# <i>semodule -R -D</i>
</pre>

<p>
Si está seguro de querer continuar con las sentencias dontaudit, ejecute el
mismo comando sin la opción <c>-D</c>.
</p>

<p>
Gentoo Hardened utiliza un booleano específico llamado
<c>gentoo_try_dontaudit</c> para mostrar u ocultar las denegaciones que
los desarrolladores creen que son cosméticas. Gracias a este enfoque,
puede, en primer lugar deshabilitar las sentencias dontaudit seleccionadas
por Gentoo antes de mostrarlas todas, las cuales pueden ser bastantes más.
</p>

</body>
</subsection>
</section>
</sections>
