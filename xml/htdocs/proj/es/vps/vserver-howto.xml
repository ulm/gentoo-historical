<?xml version = '1.0' encoding = 'UTF-8' ?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/es/vps/vserver-howto.xml,v 1.7 2012/12/10 12:34:23 nimiux Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="es">
<title>Cómo Gentoo Linux-VServer</title>

<author title="Autor">
  <mail link="hollow@gentoo.org">Benedikt Boehm</mail>
</author>
<author title="Editor">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Traductor">
  <mail link="chiguire@gentoo.org">John Christian Stoddart</mail>
</author>
<author title="Traductor">
  <mail link="yoswink@gentoo.org">José Luis Rivero</mail>
</author>
<author title="Traductor">
  <mail link="carles@carles.no-ip.info">Carles Ferrer Peris</mail>
</author>
<author title="Traductor">
  <mail link="nimiux"/>
</author>

<abstract>
En este Cómo aprenderemos a poner en marcha un servidor virtual básico
usando la Tecnología Linux-VServer
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.12</version>
<date>2012-10-10</date>

<chapter>
<title>Introducción</title>
<section>
<title>El concepto Linux-VServer</title>
<body>

<p>
El concepto básico de una solución Linux-VServer es dividir el entorno
de espacio de usuario en unidades separadas (llamadas a veces
Servidores Virtuales Privados, &quot;Virtual Private Servers&quot; en
inglés) de tal forma que cada VPS parece y se comporta como un
servidor verdadero de cara a los procesos contenidos dentro.
</p>

</body>
</section>
<section>
<title>Terminología usada en este Cómo</title>
<body>

<table>
<tr>
  <th>Término</th>
  <th>Descripción</th>
</tr>
<tr>
  <th>Linux-VServer, VServer</th>
  <ti>
    Linux-VServer es el nombre oficial del proyecto y es usado en este
    documento de la misma manera
  </ti>
</tr>
<tr>
  <th>servidor virtual, vserver, sistema huésped, guest</th>
  <ti>
    Son todos términos intercambiables y se refieren a una instancia
    de un servidor (es decir, un servidor virtual)
  </ti>
</tr>
<tr>
  <th>sistema anfitrión, host</th>
  <ti>
    La máquina física que ejecuta Gentoo Linux y albergará todos los
    servidores virtuales
  </ti>
</tr>
<tr>
  <th>util-vserver</th>
  <ti>
    El paquete <c>util-vserver</c> contiene todos los programas
    necesarios para mantener los servidores virtuales
  </ti>
</tr>
</table>

</body>
</section>
</chapter>

<chapter>
<title>Configuración del anfitrión</title>
<section>
<title>Instalación del núcleo VServer</title>
<body>

<pre caption="Instalación de vserver-sources">
# <i>emerge vserver-sources</i>
</pre>

<p>
Después de que las vserver-sources se hayan instalado es el momento de
configurarlas usando <c>make menuconfig</c>. A continuación se muestra
una configuración común para versiones 2.1.1 y posteriores. Si usa
2.0.x algunas opciones de configuración pude que no estén presentes.
</p>

<pre caption="Configuración de vserver-sources">
# <i>cd /usr/src/linux-&lt;KERNELVERSION>-vserver-&lt;VSERVERVERSION></i>
# <i>make menuconfig</i>

Linux VServer ---&gt;
<comment>(No habilite las opciones "legacy")</comment>
  [ ] Enable Legacy Kernel API
  [ ] Enable Legacy Networking Kernel API
<comment>(Lea la ayuda)</comment>
  [ ] Remap Source IP Address
  [*] Enable COW Immutable Link Breaking
  [ ] Enable Virtualized Guest Time
  [*] Enable Proc Security
  [*] Enable Hard CPU Limits
  [*]   Avoid idle CPUs by skipping Time
  [*]   Limit the IDLE tas
      Persistent Inode Context Tagging (UID24/GID24)  ---&gt;
  [ ] Tag NFSD User Auth and Files
  [*] Enable Inode Tag Propagation
  [*] Honor Privacy Aspects of Guests
  [ ] VServer Debugging Code
</pre>

<note>
Si utilizamos reiserfs como sistema de ficheros en la partición donde
se almacenan las imágenes de loa huéspedes, deberemos habilitar los
atributos extendidos de reiserfs en la configuración del núcleo y
adicionalmente añadir la opción <c>attrs</c> en
<path>/etc/fstab</path>.
</note>

<pre caption="Configurar las opciones de reiserfs">
File systems  --->
  &lt;*&gt; Reiserfs support
  [*]   ReiserFS extended attributes
</pre>

<pre caption="Ejemplo de fstab con atributos extendidos">
/dev/hdb1 /vservers reiserfs noatime,attrs 0 0
</pre>

<p>
Después de haber compilado e instalado el núcleo, hay que actualizar
el gestor de arranque y finalmente reiniciar para ver si el núcleo
arranca correctamente.
</p>

<pre caption="Instalación del núcleo">
<comment>(Compilar el núcleo)</comment>
# <i>make</i>
<comment>(Instalación)</comment>
# <i>make modules_install</i>
# <i>cp arch/&lt;arch&gt;/boot/bzImage /boot/kernel-&lt;KERNELVERSION&gt;-vserver-&lt;VSERVERVERSION&gt;</i>
<comment>(Editar el fichero de configuración del gestor de arranque como se necesite y)</comment>
# <i>reboot</i>
</pre>

</body>
</section>
<section>
<title>Configuración del entorno del anfitrión</title>
<body>

<p>
Para mantener los servidores virtuales se necesita el paquete
util-vserver que contiene todos los programas necesarios y algunas
utilidades prácticas.
</p>

<pre caption="Instalar util-vserver">
# <i>emerge >=sys-cluster/util-vserver-0.30.212</i>
</pre>

<p>
Se debe ejecutar la orden <c>vprocunhide</c> después de cada
reinicio para establecer los permisos adecuados en <path>/proc</path>
para los huéspedes vserver. util-vserver acaba de instalar dos guiones
de inicio que ejecutan la orden <c>vprocunhide</c> y tienen cuidado de
los servidores virtuales durante el apagado del anfitrión.
</p>

<pre caption="Guiones de inicio de util-vserver">
# <i>rc-update add vprocunhide default</i>
# <i>/etc/init.d/vprocunhide start</i>
# <i>rc-update add util-vserver default</i>
# <i>/etc/init.d/util-vserver start</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Creación de un huésped</title>
<section>
<title>Descargar un stage3 precompilado</title>
<body>

<p>
Puesto que muchas órdenes relacionadas con el hardware no están
disponibles dentro de un servidor virtual, se ha parcheado una versión
del baselayout llamada baselayout-vserver. Sin embargo, desde
baselayout-2/openrc, todos los cambios necesarios se han integrado,
eliminado la necesidad de tener stages, perfiles y baselayout de
vserver diferentes. Los ficheros tarball de stage se pueden descargar
desde <uri link="/main/en/mirrors.xml">nuestros servidores
réplica</uri>.
</p>

<p>
Debido a que el stage3 contiene un sistema de ficheros completo,
puede utilizar el método de construcción basado en plantillas de
util-vserver. Sin embargo, este método solo funciona correctamente
desde la versión util-vserver-0.30.213_rc5, por lo tanto, debe
asegurarse de que ha instalado la versión correcta.
</p>

<p>
Hay que elegir un ID de contexto para el vserver (no se aconsejan los
IDs de contexto dinámicos) así como la información necesaria para el
dispositivo de red (en este ejemplo eth0 se configura con
192.168.1.253/24 y el ID de contexto es igual a las dos últimas partes
de la IP de los servidores virtuales).
</p>

<note>
El ID de contexto debe ser 1 &lt; ID &lt; 49152.
</note>

</body>
</section>
<section>
<title>Uso del método de creación por plantilla</title>
<body>

<p>
Desde hace mucho tiempo, el único estilo de inicio disponible en
gentoo ha sido el estilo de inicio sencillo, es decir un proceso
normal de inicio será iniciado dentro del huésped, tal como se hace en
cualquier sistema Unix común. Sin embargo, este método tiene algunos
inconvenientes:
</p>

<ul>
  <li>No es posible ver la salida de los guiones init/rc</li>
  <li>Recursos malgastados para los procesos de inicio idle en cada huésped</li>
  <li>Molestos conflictos para <path>/etc/inittab</path></li>
</ul>

<p>
Por lo tanto, muchos usuarios han pedido que se implemente de nuevo
el estilo de inicio de Gentoo, que fue abandonado porque suponía una
implementación poco limpia y más o menos funcionaba por casualidad
debido a otras modificaciones hechas entonces en el baselayout.
Sin embargo, desde util-vserver-0.30.21 el estilo de inicio de Gentoo
ha sido puesto en práctica de nuevo de una manera concisa y será el
predeterminado en el futuro.
</p>

<note>
Si no hay una buena razón par usar un proceso de inicio suplementario por
cada huésped o si no sabe qué hacer aquí, debería utilizar el estilo de
inicio de gentoo.
</note>

<pre caption="Inicio de la instalación de un stage3">
# <i>vserver myguest build \</i>
  <i>--context 1253 \</i>
  <i>--hostname gentoo \</i>
  <i>--interface eth0:192.168.1.253/24 \</i>
  <i>--initstyle gentoo \</i> <comment>(cámbielo si lo necesita)</comment>
  <i>-m template -- \</i>
  <i>  -d gentoo \</i>
  <i>  -t /path/to/stage4-&lt;arch&gt;-&lt;version&gt;.tar.bz2</i>
</pre>

<note>
Para reflejar la configuración de red se deben cambiar dentro del
huésped <path>/etc/conf.d/hostname</path>,
<path>/etc/conf.d/domainname</path> y <path>/etc/hosts</path> tal como
se necesite. Se puede consultar el
<uri
link="/doc/es/handbook/handbook-x86.xml?part=1&amp;chap=8#doc_chap2_sect1">
capítulo 8.b.1</uri> y el
<uri
link="/doc/es/handbook/handbook-x86.xml?part=1&amp;chap=8#doc_chap2_sect4">
capítulo 8.b.4</uri>. El resto de la configuración de red del servidor
virtual se hará en el anfitrión.
</note>

<p>
Deberíamos poder iniciar y entrar en el servidor virtual usando las
siguientes órdenes.
</p>

<pre caption="Probar el servidor virtual">
# <i>vserver myguest start</i>

   OpenRC 0.4.3 is starting up Gentoo Linux (x86_64) [VSERVER]

Press I to enter interactive boot mode

* /proc is already mounted, skipping
* Setting hostname to myguest...                     [ ok ]
* Creating user login records...                     [ ok ]
* Cleaning /var/run...                               [ ok ]
* Wiping /tmp directory...                           [ ok ]
* Updating /etc/mtab...                              [ ok ]
* Initializing random number generator...            [ ok ]
* Starting syslog-ng...                              [ ok ]
* Starting fcron...                                  [ ok ]
* Starting Name Service Cache Daemon...              [ ok ]
* Starting local...                                  [ ok ]
# <i>vserver-stat</i>
CTX   PROC    VSZ    RSS  userTIME   sysTIME    UPTIME NAME
0       90   1.4G 153.4K  14m00s11   6m45s17   2h59m59 root server
1252     2     3M   286    0m00s45   0m00s42   0m02s91 myguest
# <i>vserver myguest enter</i>
# <i>ps ax</i>
  PID TTY      STAT   TIME COMMAND
    1 ?        Ss     0:04 init [3]
27637 ?        Ss     0:00 /usr/sbin/syslog-ng
27656 ?        Ss     0:00 /usr/sbin/fcron -c /etc/fcron/fcron.conf
27676 ?        Ssl    0:00 /usr/sbin/nscd
27713 ?        S+     0:00 login
27737 pts/15   Ss     0:00 /bin/bash
27832 pts/15   R+     0:00 ps ax
# <i>logout</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Mantenimiento sencillo</title>
<section>
<title>Arrancar huéspedes al inicio</title>
<body>

<p>
Podemos arrancar algunos huéspedes durante el inicio. Cada
<c>guest</c> puede tener asignada una MARCA (MARK). Entonces, todo lo
que hay que hacer es configurar esas MARCAs en la configuración de los
huéspedes y añadir los guiones de inicio apropiados al nivel de
ejecución default.
</p>

<pre caption="Configurar las MARCAs en cada huésped">
<comment>(Hay que hacer esto en cada huésped que se quiera
iniciar)</comment>
# <i>mkdir -p /etc/vservers/myguest/apps/init</i>
# <i>echo "default" > /etc/vservers/myguest/apps/init/mark</i>
</pre>

<pre caption="Añadir el guión de inicio al nivel de ejecución default">
# <i>rc-update add vservers.default default</i>
</pre>

</body>
</section>
<section>
<title>Mantener portage sincronizado</title>
<body>

<p>
El guión <c>vesync</c> nos ayudará a mantener la memoria temporal de
metadatos y recubrimiento sincronizada. <c>vemerge</c> es un simple
envoltorio para <c>emerge</c> en los huéspedes.
</p>

<pre caption="Ejemplos">
<comment>(Sincronizar los metadatos en 'myguest')</comment>
# <i>vesync myguest</i>
<comment>(Sincronizar los metadatos en todos los huéspedes)</comment>
# <i>vesync -all</i>
<comment>(Sincronizar 'myoverlay' en todos los huéspedes)</comment>
# <i>vesync -all \</i>
  <i>--overlay /usr/local/overlays/myoverlay \</i>
  <i>--overlay-host rsync://rsync.myhost.com/myoverlay \</i>
  <i>--overlay-only</i>
<comment>(emerge app-editors/vim en 'myguest')</comment>
# <i>vemerge myguest -- app-editors/vim -va</i>
</pre>

</body>
</section>
<section>
<title>Actualizar huéspedes</title>
<body>

<p>
Los huéspedes Gentoo pueden compartir paquetes para ahorrar tiempo de
compilación. Para usar paquetes compartidos, deberemos crear un
directorio centralizado para los paquetes en el anfitrión. Usaremos
<path>/var/cache/vpackages</path> en el anfitrión y lo montaremos en
cada huésped en <path>/usr/portage/packages</path>.
</p>

<pre caption="Enlazar la configuración del huésped">
# <i>mkdir -p /var/cache/vpackages</i>
# <i>$EDITOR /etc/vservers/myguest/fstab</i>
<comment>(Añadiremos esta línea al final)</comment>
/var/cache/vpackages /usr/portage/packages none bind,rw 0 0
</pre>

<p>
Ahora utilizaremos <c>vupdateworld</c> para actualizar cada
huésped. La orden es equivalente a algo como <c>emerge --deep
--update --newuse world</c>.
</p>

<pre caption="Ejemplos de vupdateworld">
<comment>(Prueba de actualización para 'myguest')</comment>
# <i>vupdateworld myguest -- -vp</i>
<comment>(Actualización de 'myguest' usando paquetes binarios)</comment>
# <i>vupdateworld myguest -- -k</i>
<comment>(Actualización de todos los huéspedes usando paquetes binarios)</comment>
# <i>vupdateworld --all -- -k</i>
</pre>

<note>
Para obtener paquetes binarios podemos usar, tanto PORTAGE_BINHOST
(ver <c>man make.conf</c>) o establecer FEATURES="buildpkg" en uno o
más huéspedes.
</note>

<p>
Después de haber actualizado con éxito, podemos actualizar fácilmente
todos los archivos de configuración con <c>vdispatch-conf</c>, que es
un simple envoltorio para <c>dispatch-conf</c>, comportándose de la
misma forma.
</p>

<pre caption="Ejemplos de vdispatch-conf">
<comment>(Actualizar los ficheros de configuración de 'myguest')</comment>
# <i>vdispatch-conf myguest</i>
<comment>(Actualizar los ficheros de configuración de todos los huéspedes)</comment>
# <i>vdispatch-conf --all</i>
</pre>

</body>
</section>
<section>
<title>Contacto</title>
<body>

<p>
No dude en contactar con el <mail
link="hollow@gentoo.org">autor</mail> o crear un bug en <uri
link="http://bugs.gentoo.org">Bugzilla</uri> en caso de cualquier
problema.
</p>

</body>
</section>
</chapter>
</guide>
