<?xml version='1.0' encoding="utf-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/proj/fr/hardened/grsecurity2.xml" lang="fr">

<title>Guide Gentoo Grsecurity version 2</title>

<author title="Auteur">
  <mail link="solar@gentoo.org">solar</mail>
</author>
<author title="Auteur">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Traducteur">
  <mail link="clement@varaldi.org">Clément Varaldi</mail>
</author>

<abstract>
Ce document propose un certain nombre de correctifs de sécurité grsecurity2, des
options de configuration supportées par le noyau et des outils mis à disposition
par le projet grsecurity pour améliorer la sécurité de votre système.
</abstract>

<version>0.4</version>
<date>2004-10-06</date>

<chapter>
<title>À propos de Grsecurity</title>
<section>
<title>Le projet Grsecurity</title>
<body>

<p>
Le projet grsecurity, hébergé sur le site <uri>http://www.grsecurity.org</uri>,
propose un certain nombre de correctifs pour le noyau Linux pour améliorer la
sécurité de l'ensemble de votre système. Dans le chapitre suivant nous
présenteront l'ensemble des fonctionnalités apportées par grsecurity. Une liste
complète est maintenue à jour sur la
<uri link="http://www.grsecurity.org/features.php">page des fonctionnalités de
grsecurity</uri>.
</p>

<p>
Dans la mesure où la plupart des fonctionnalités apportées par grsecurity sont
liées au noyau, une grande partie de ce document présente en détail certaines
fonctionnalités du noyau et leurs opérations «&nbsp;sysctl&nbsp;» (dans la
mesure du possible).
</p>

</body>
</section>
<section>
<title>Intégration au projet Gentoo Hardened</title>
<body>

<p>
Le <uri link="http://hardened.gentoo.org">projet Gentoo Hardened</uri>
maintient les améliorations liées à la sécurité sous Gentoo. Ce qui inclut,
mais n'est pas limité à grsecurity.
</p>

</body>
</section>
<section>
<title>Configuration du noyau</title>
<body>

<p>
Tout au long de ce document nous allons parler de la configuration du noyau en
utilisant des noms de variables comme <c>CONFIG_GRKERNSEC_PAX_NO_ACL_FLAGS</c>.
Ce sont des variables que le noyau utilise lors de la construction pour
déterminer quelles fonctionnalités doivent être compilées ou non.
</p>

<p>
Quand vous configurez votre noyau avec la commande <c>make menuconfig</c> (ou
similaire) vous disposez d'une interface utilisateur dans laquelle on vous
propose de choisir un certain nombre d'options du noyau. Si vous sélectionnez
le bouton <e>Help</e> pour une fonctionnalité donnée, vous pourrez voir que les
options correspondent en fait à ces mêmes variables du noyau.
</p>

<p>
Vous pouvez donc toujours configurer votre noyau comme vous le souhaitez, en
faisant bien sûr attention à ce que vous choisissez. Et si vous n'arrivez pas à
trouver une option spécifique, vous pouvez toujours éditer le
fichier<path>/usr/src/linux/.config</path> à la main.
</p>

<p>
Évidemment, pour pouvoir choisir parmi les options de noyau grsecurity vous
devez activer le support de grsecurity dans votre noyau&nbsp;:
</p>

<pre caption="Activer grsecurity">
CONFIG_GRKERNSEC=y
CONFIG_GRKERNSEC_CUSTOM=y
</pre>

</body>
</section>
</chapter>

<chapter>
<title>PaX</title>
<section>
<title>Combattre l'exploitation des bogues logiciels</title>
<body>

<p>
PaX introduit un certain nombre de mécanismes de sécurité qui rendent encore
plus difficile l'exploitation de bogues logiciels par les attaquants
lorsqu'elles concernent des corruptions de mémoire (ne croyez donc pas que PaX
vous protégera contre toutes les attaques possibles de bogues logiciels). Le
<uri link="http://pax.grsecurity.net/docs/pax.txt">document d'introduction de
PaX</uri> parle de trois techniques d'attaque possibles&nbsp;:
</p>

<ol>
  <li>Introduction et exécution de code arbitraire&nbsp;;</li>
  <li>
    Exécution d'un code existant en dehors du cadre d'exécution normal du
    programme&nbsp;;
  </li>
  <li>
    Exécution d'un code existant dans le cadre normal d'exécution de celui-ci,
    mais avec des données arbitraires.
  </li>
</ol>

<p>
Une méthode de prévention est d'interdire aux codes exécutables de se stocker
dans une mémoire en écriture. Lors de l'exécution d'un processus, celui-ci aura
besoin de cinq zones mémoires différentes&nbsp;:
</p>

<ol>
  <li>
    une <e>zone de données</e> qui contient des données allouées de manière
    statique ou globale&nbsp;;
  </li>
  <li>
    Une <e>zone BSS</e> (Block Started by Symbol, pour bloc commençant par un
    symbole) qui contient des informations à propos des données du processus
    initialisées à zéro&nbsp;;
  </li>
  <li>
    Une <e>zone de code</e>, aussi appelée le <e>segment texte</e>, qui contient
    des instructions exécutables&nbsp;;
  </li>
  <li>
    Un <e>tas</e> («&nbsp;heap&nbsp;») qui contient la mémoire allouée
    dynamiquement&nbsp;;
  </li>
  <li>
    Une <e>pile</e> («&nbsp;stack&nbsp;») qui contient les variables locales.
  </li>
</ol>

<p>
La première méthode de prévention utilisée par PaX appelée <b>NOEXEC</b> a pour
but de permettre le contrôle de la génération du code d'exécution. Elle marque
les pages mémoires qui ne contiennent pas de code exécutable comme étant des
zones non-exécutables. Cela signifie que le tas et la pile qui ne contiennent
que des données et ne devraient pas contenir de code exécutable seront marqués
comme non-exécutables. Les attaques qui mettent du code à exécuter dans ces
zones avec l'intention de les exécuter échoueront.
</p>

<p>
Pour dire vrai, NOEXEC va plus loin et les lecteurs intéressés devraient lire la
<uri link="http://pax.grsecurity.net/docs/noexec.txt">documentation de NOEXEC
pour PaX</uri>.
</p>

<p>
La seconde méthode de prévention employée par PaX s'appelle <b>ASLR</b> (Address
Space Layout Randomization, pour Allocation aléatoire de l'espace adressé). Elle
rend le processus d'allocation de la mémoire aléatoire pour chaque demande de
mémoire. Si auparavant la mémoire était assignée de manière contiguë (ce qui
signifie que les exploitations permettent de savoir où sont situées les zones
mémoire de chaque tâche), ASLR rend aléatoire cette assignation, ce qui rend
inutile l'utilisation de techniques utilisant ce type d'information.
</p>

<p>
Pour plus d'informations sur ASLR lisez
<uri link="http://pax.grsecurity.net/docs/aslr.txt">la documentation de
ASLR pour PaX</uri>.
</p>

</body>
</section>
<section>
<title>Activer PaX</title>
<body>

<p>
Les configurations noyau recommandées pour l'usage de PaX sont&nbsp;:
</p>

<pre caption="Configuration recommandée du noyau pour PaX">
<comment>#
# PaX Control
#
# CONFIG_GRKERNSEC_PAX_SOFTMODE is not set</comment>
CONFIG_GRKERNSEC_PAX_EI_PAX=y
CONFIG_GRKERNSEC_PAX_PT_PAX_FLAGS=y
CONFIG_GRKERNSEC_PAX_NO_ACL_FLAGS=y
<comment># CONFIG_GRKERNSEC_PAX_HAVE_ACL_FLAGS is not set
# CONFIG_GRKERNSEC_PAX_HOOK_ACL_FLAGS is not set

#
# Address Space Protection
#</comment>
CONFIG_GRKERNSEC_PAX_NOEXEC=y
<comment># CONFIG_GRKERNSEC_PAX_PAGEEXEC is not set</comment>
CONFIG_GRKERNSEC_PAX_SEGMEXEC=y
CONFIG_GRKERNSEC_PAX_EMUTRAMP=y
CONFIG_GRKERNSEC_PAX_MPROTECT=y
<comment># CONFIG_GRKERNSEC_PAX_NOELFRELOCS is not set</comment>
CONFIG_GRKERNSEC_PAX_ASLR=y
CONFIG_GRKERNSEC_PAX_RANDKSTACK=y
CONFIG_GRKERNSEC_PAX_RANDUSTACK=y
CONFIG_GRKERNSEC_PAX_RANDMMAP=y
CONFIG_GRKERNSEC_PAX_RANDEXEC=y
<comment># CONFIG_GRKERNSEC_KMEM is not set
# CONFIG_GRKERNSEC_IO is not set</comment>
CONFIG_GRKERNSEC_PROC_MEMMAP=y
CONFIG_GRKERNSEC_HIDESYM=y
</pre>

<p>
Si vous utilisez un système non-x86, vous n'aurez pas la variable
CONFIG_GRKERNSEC_PAX_NOEXEC. À la place vous devez sélectionner la variable
CONFIG_GRKERNSEC_PAX_PAGEEXEC qui est la seule implémentation de méthode de type
non-exécution disponible.
</p>

</body>
</section>
<section>
<title>Contrôler PaX</title>
<body>

<p>
Toutes les applications ne s'accordent pas bien avec les restrictions de
sécurité de PaX. Par exemple, xorg-x11, java, mplayer, xmms n'aiment pas PaX.
Si vous voulez pouvoir les utiliser vous pouvez augmenter leur protection en
utilisant les paquets <c>chpax</c> et <c>paxctl</c>.
</p>

<pre caption="Installer les outils chpax et paxctl">
# <i>emerge app-admin/chpax</i>
# <i>emerge app-admin/paxctl</i>
</pre>

<p>
<c>chpax</c> fournit un script d'initialisation qui gère la plupart des
configurations d'applications connues pour vous&nbsp;:
</p>

<pre caption="Ajouter le script chpax au niveau de lancement par défaut">
# <i>rc-update add chpax default</i>
</pre>

<p>
<c>pax-utils</c> est une petite boîte à outils qui inclut des applications très
pratiques pour administrer un serveur utilisant PaX.
</p>

<pre caption="Installer pax-utils">
# <i>emerge pax-utils</i>
</pre>

<p>
Les outils les plus intéressants sont <c>scanelf</c> et <c>pspax</c>&nbsp;:
</p>

<ul>
  <li>
    Avec <c>scanelf</c>, vous pouvez passer en revue les répertoires de binaires
    et de bibliothèques pour lister les différents droits d'exécution et les
    types de binaires ELF qui continueront de fonctionner dans une configuration
    idéale utilisant pax/grsec&nbsp;;
  </li>
  <li>
    Avec <c>pspax</c>, vous pouvez afficher les paramètres/capacités/xattr de
    PaX du point de vue du noyau.
  </li>
</ul>

</body>
</section>
<section>
<title>Vérifier la configuration de PaX</title>
<body>

<p>
Peter Busser a écrit une suite de tests de régression nommée <c>paxtest</c>. Cet
outil vérifiera plusieurs cas de vecteurs d'attaques possibles et vous informera
des résultats. Lorsque vous l'exécutez, il laisse un fichier de jounalisation
nommé <path>paxtest.log</path> dans le répertoire de travail courant.
</p>

<pre caption="Installation et exécution de paxtest">
# <i>emerge paxtest</i>

# <i>paxtest</i>
Executable anonymous mapping             : Killed
Executable bss                           : Killed
Executable data                          : Killed
Executable heap                          : Killed
Executable stack                         : Killed
Executable anonymous mapping (mprotect)  : Killed
Executable bss (mprotect)                : Killed
Executable data (mprotect)               : Killed
Executable heap (mprotect)               : Killed
Executable stack (mprotect)              : Killed
Executable shared library bss (mprotect) : Killed
Executable shared library data (mprotect): Killed
Writable text segments                   : Killed
Anonymous mapping randomisation test     : 16 bits (guessed)
Heap randomisation test (ET_EXEC)        : 13 bits (guessed)
Heap randomisation test (ET_DYN)         : 25 bits (guessed)
Main executable randomisation (ET_EXEC)  : 16 bits (guessed)
Main executable randomisation (ET_DYN)   : 17 bits (guessed)
Shared library randomisation test        : 16 bits (guessed)
Stack randomisation test (SEGMEXEC)      : 23 bits (guessed)
Stack randomisation test (PAGEEXEC)      : No randomisation
Return to function (strcpy)              : Vulnerable
Return to function (memcpy)              : Vulnerable
Return to function (strcpy, RANDEXEC)    : Killed
Return to function (memcpy, RANDEXEC)    : Killed
Executable shared library bss            : Killed
Executable shared library data           : Killed
</pre>

<p>
Dans l'exemple précédent, vous remarquerez que&nbsp;:
</p>

<ul>
  <li>
    strcpy et memcpy sont indiqués comme <e>vulnérables</e>. On s'y attendait et
    c'est normal, cela indique que vous avez besoin d'une technologie comme
    <uri link="/proj/en/hardened/propolice.xml">ProPolice/SSP</uri>&nbsp;;
  </li>
  <li>
    Il n'y a pas de processus aléatoire pour PAGEEXEC. C'est normal dans la
    mesure où la configuration du noyau x86 recommandée ne sélectionne pas la
    variable PAGEEXEC. Cependant, sur les architecture qui disposent du support
    d'un vrai bit NX (Non-eXécutable) (la plupart le supportent et notamment
    x86_64), PAGEXEC est la seule méthode disponible pour NOEXEC et n'aura pas
    de problème sur ce point.
  </li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>RBAC</title>
<section>
<title>Contrôle d'accès basé sur des rôles</title>
<body>

<p>
Deux types de base de mécanismes de contrôle d'accès sont utilisés pour
empêcher l'accès non autorisé aux fichiers (et de manière plus générale à toute
information)&nbsp;: DAC (Discretionary Access Control, pour contrôle d'accès
arbitraire) et MAC (Mandatory Access Control, pour contrôle d'accès
obligatoire). Par défaut, Linux utilise un mécanisme DAC&nbsp;: le créateur du
fichier peut définir qui a accès à ce fichier. Un système MAC en revanche oblige
tous les utilisateurs à suivre des règles dictées par l'administrateur.
</p>

<p>
Le support grsecurity pour l'implémentation de MAC est nommée RBAC (Role Based
Access Control). RBAC associé des <e>rôles</e> à chaque utilisateur. Chaque
rôle définit quelles opérations peuvent être effectuées sur certains objets.
Une fois que vous aurez un ensemble de rôles et d'opérations bien écrits, vos
utilisateurs seront limités uniquement aux tâches que vous leur aurez données.
Le rôle par défaut «&nbsp;deny-all&nbsp;» interdit aux utilisateurs d'effectuer
une action à laquelle vous n'auriez pas pensé.
</p>

</body>
</section>
<section>
<title>Configuration du noyau</title>
<body>

<p>
La configuration du noyau recommandée pour le support de RBAC est&nbsp;:
</p>

<pre caption="Configuration du noyau recommandée pour RBAC">
<comment>#
# Options RBAC
#</comment>
CONFIG_GRKERNSEC_ACL_HIDEKERN=y
CONFIG_GRKERNSEC_ACL_MAXTRIES=3
CONFIG_GRKERNSEC_ACL_TIMEOUT=30
</pre>

</body>
</section>
<section>
<title>Utilisation de gradm</title>
<body>

<p>
<c>gradm</c> est un outil qui vous permet d'administrer et de maintenir une
politique pour votre système. Vous pouvez activer ou désactiver le système
RBAC, recharger les rôles RBAC, configurer un mot de passe pour le mode
administrateur, etc.
</p>

<p>
À l'installation de <c>gradm</c>, une politique par défaut sera installée dans
<path>/etc/grsec/policy</path>&nbsp;:
</p>

<pre caption="Installation de gradm">
# <i>emerge gradm</i>
</pre>

<p>
Les politiques RBAC par défaut ne sont pas activées. C'est à l'administrateur
système de choisir si le système utilisera des politiques RBAC et non celles de
Gentoo. Avant d'activer le système RBAC, vous devez configurer un mot de passe
administrateur.
</p>

<pre caption="Activation du système RBAC">
# <i>gradm -P admin</i>
Setting up grsecurity RBAC password
Password: <comment>(Entrez un mot de passe bien choisi)</comment>
Re-enter Password: <comment>(Confirmez-le)</comment>
Password written in /etc/grsec/pw
# <i>gradm -E</i>
</pre>

<p>
Pour désactiver le système RBAC exécutez <c>gradm -D</c>. Si vous n'y êtes pas
autorisé, vous devez auparavant vous approprier les rôles administrateur&nbsp;:
</p>

<pre caption="Désactivation du système RBAC">
# <i>gradm -a admin</i>
Password: <comment>(Entrez votre mot de passe administrateur pour les rôles)</comment>
# <i>gradm -D</i>
</pre>

<p>
Si vous souhaitez abandonner le rôle administrateur, exécutez la commande
<c>gradm -u admin</c>&nbsp;:
</p>

<pre caption="Abandon du rôle administrateur">
# <i>gradm -u admin</i>
</pre>

</body>
</section>
<section>
<title>Génération d'une politique</title>
<body>

<p>
Le système RBAC propose unr fonctionnalité intéressante nommée «&nbsp;learning
mode&nbsp;» (mode d'apprentissage). Le mode d'apprentissage peut générer une
politique d'anticipation de privilèges pour votre système. Cela permet
d'économiser temps et argent en déployant rapidement de nombreux serveurs
sécurisés.
</p>

<p>
Pour utiliser le mode d'apprentissage vous devez l'activer en utilisant
<c>gradm</c>&nbsp;:
</p>

<pre caption="Activation du mode d'apprendissage RBAC">
# <i>gradm -F -L /etc/grsec/learning.log</i>
</pre>

<p>
Maintenant, utilisez votre système, faites ce que vous feriez normalement.
Essayez d'éviter de faire une synchronisation rsync, d'utiliser locate ou toute
autre opération impliquant une manipulation lourde de fichiers. En effet, cela
peut ralentir énormément votre système.
</p>

<p>
Quand vous pensez avoir utilisé votre système suffisamment pour obtenir une
bonne politique, indiquez à <c>gradm</c> qu'il peut commencer l'apprentissage
et proposer des rôles dans le fichier
<path>/etc/grsec/learning.roles</path>&nbsp;:
</p>

<pre caption="Effectuer l'apprentissage en utilisant le journal d'actions">
# <i>gradm -F -L /etc/grsec/learning.log -O /etc/grsec/learning.roles</i>
</pre>

<p>
Vérifiez le fichier <path>/etc/grsec/learning.roles</path> et sauvegardez-le
dans le fichier <path>/etc/grsec/policy</path> (avec les permissions 0600) une
fois que vous avez fini.
</p>

<pre caption="Sauvegarder les politiques">
# <i>mv /etc/grsec/learning.roles /etc/grsec/policy</i>
# <i>chmod 0600 /etc/grsec/policy</i>
</pre>

<p>
Vous devriez maintenant pouvoir activer le système RBAC en utilisant la
politique nouvellement apprise.
</p>

</body>
</section>
<section>
<title>Peaufiner votre politique</title>
<body>

<p>
Une fonctionnalité intéressante de grsecurity2 est le <e>Set Operation
Support</e> (Support de la mise en place d'opérations) pour le fichier de
configuration. Actuellement il supporte les unions, les intersections et les
différences de sets (ou objets dans notre cas).
</p>

<pre caption="Exemple de sets">
define setobj1 {
/root/titi rw
/root/toto2 r
/root/toto3 x
}

define unnom2 {
/root/test1 rw
/root/toto2 rw
/root/bars3 h
}
</pre>

<p>
Voici un exemple d'utilisation et les objets résultant seront ajoutés à votre
sujet&nbsp;:
</p>

<pre caption="Exemple de l'opérateur &amp;">
subject /unbinaire o
$setobj1 &amp; $unnom2
</pre>

<p>
Ce qui est équivalent à&nbsp;:
</p>

<pre caption="Configuration résultante">
subject /unbinaire o
/root/toto2 r
</pre>

<p>
C'est le résultat de l'opérateur &amp; qui récupère les deux sets et retourne
la liste des fichiers qui sont présents dans les deux sets et les permissions
de ces fichiers présentes dans les deux sets.
</p>

<pre caption="Exemple de l'opérateur |">
subject /unbinaire o
$setobj1 | $unnom2
</pre>

<p>
Cet exemple est équivalent à&nbsp;:
</p>

<pre caption="Configuration résultante">
subject /unbinaire o
/root/titi rw
/root/toto2 rw
/root/toto3 x
/root/test1 rw
/root/bars3 h
</pre>

<p>
C'est le résultat de l'opérateur | qui récupère les deux sets et retourne les
fichiers qui existent dans les deux. Si un fichier est dans les deux sets il
récupère les permissions qui existent dans l'un ou l'autre des deux sets.
</p>

<pre caption="Exemple de l'opérateur -">
subject /unbinaire o
$setobj1 - $unnom2
</pre>

<p>
Cet exemple est équivalent à&nbsp;:
</p>

<pre caption="Configuration résultante">
subject /unbinaire o
/root/titi rw
/root/toto2 h
/root/toto3 x
</pre>

<p>
C'est le résultat de l'opérateur - qui prend les deux sets et retourne les
fichiers existant dans le set de gauche mais pas dans le set de droite. Si un
fichier est présent dans les deux (ou bien un répertoire parent existe dans le
set de droite) il sera retourné et les permissions sur le fichier seront celles
du fichier de gauche auxquelles on aura retiré les permissions données dans le
second set.
</p>

<p>
Dans un pseudo langage, vous pourriez l'interpréter ainsi&nbsp;:
</p>

<pre caption="Explication avec un pseudo langage">
si ( (<i>$setobj1</i> contient <i>/tmp/toto rw</i>) et
     (<i>$setobj2</i> contient <i>/tmp/toto r</i>) )
alors
  <i>$setobj1 - $setobj2</i> doit contenir <i>/tmp/toto w</i>

si ( (<i>$setobj1</i> contient <i>/tmp/toto rw</i>) et
     (<i>$setobj2</i> contient <i>/ rwx</i>) )
alors 
  <i>$setobj1 - $setobj2</i> doit contenir <i>/tmp/toto h</i>
</pre>

<p>
L'ordre de priorité, de la plus forte à la plus faible, est le suivant&nbsp;:
-, &amp; |.
</p>

<p>
Si vous ne voulez pas vous encombrer l'esprit avec les priorités d'opérations,
le support des parenthèses est également fourni. Vous pouvez donc écrire, par
exemple&nbsp;:
</p>

<pre caption="Exemple d'utilisation des parenthèses">
(($set1 - $set2) | $set3) &amp; $set4
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Protection des systèmes de fichiers</title>
<section>
<title>Lutter contre le chroot et l'abus dans les systèmes de fichiers</title>
<body>

<p>
Grsecurity2 dispose de nombreux correctifs qui empêchent les utilisateurs
d'obtenir une connaissance inutile à propos du système. Cela inclut notamment
des restrictions sur l'utilisation de <path>/proc</path>, du chroot,
l'utilisation de liens symboliques, etc.
</p>

</body>
</section>
<section>
<title>Configuration du noyau</title>
<body>

<p>
Nous vous recommandons la configuration de la protection des systèmes de
fichiers suivante&nbsp;:
</p>

<pre caption="Activatiion de la protection des systèmes de fichiers">
<comment>#
# Filesystem Protections
#</comment>
CONFIG_GRKERNSEC_PROC=y
<comment># CONFIG_GRKERNSEC_PROC_USER is not set</comment>
CONFIG_GRKERNSEC_PROC_USERGROUP=y
CONFIG_GRKERNSEC_PROC_GID=10
CONFIG_GRKERNSEC_PROC_ADD=y
CONFIG_GRKERNSEC_LINK=y
CONFIG_GRKERNSEC_FIFO=y
CONFIG_GRKERNSEC_CHROOT=y
CONFIG_GRKERNSEC_CHROOT_MOUNT=y
CONFIG_GRKERNSEC_CHROOT_DOUBLE=y
CONFIG_GRKERNSEC_CHROOT_PIVOT=y
CONFIG_GRKERNSEC_CHROOT_CHDIR=y
CONFIG_GRKERNSEC_CHROOT_CHMOD=y
CONFIG_GRKERNSEC_CHROOT_FCHDIR=y
CONFIG_GRKERNSEC_CHROOT_MKNOD=y
CONFIG_GRKERNSEC_CHROOT_SHMAT=y
CONFIG_GRKERNSEC_CHROOT_UNIX=y
CONFIG_GRKERNSEC_CHROOT_FINDTASK=y
CONFIG_GRKERNSEC_CHROOT_NICE=y
CONFIG_GRKERNSEC_CHROOT_SYSCTL=y
CONFIG_GRKERNSEC_CHROOT_CAPS=y
</pre>

</body>
</section>
<section>
<title>Activation du mécanisme de sécurité</title>
<body>

<p>
Lorsque vous utilisez un noyau compilé avec les options indiquées plus haut
(ou des options similaires), vous pouvez activer ou désactiver plusieurs de
ces options en utilisant le système de fichiers <path>/proc</path> ou en
utilisant <c>sysctl</c>.
</p>

<p>
L'exemple ci-dessous montre un extrait classique du fichier
<path>/etc/sysctl.conf</path>&nbsp;:
</p>

<pre caption="Exemple de paramètres dans /etc/sysctl.conf">
kernel.grsecurity.chroot_deny_sysctl = 1
kernel.grsecurity.chroot_caps = 1
kernel.grsecurity.chroot_execlog = 0
kernel.grsecurity.chroot_restrict_nice = 1
kernel.grsecurity.chroot_deny_mknod = 1
kernel.grsecurity.chroot_deny_chmod = 1
kernel.grsecurity.chroot_enforce_chdir = 1
kernel.grsecurity.chroot_deny_pivot = 1
kernel.grsecurity.chroot_deny_chroot = 1
kernel.grsecurity.chroot_deny_fchdir = 1
kernel.grsecurity.chroot_deny_mount = 1
kernel.grsecurity.chroot_deny_unix = 1
kernel.grsecurity.chroot_deny_shmat = 1
</pre>

<p>
Vous pouvez activer ou non les options à volonté en utilisant la commande
<c>sysctl</c>&nbsp;:
</p>

<pre caption="Activer des paramètres avec sysctl">
<comment>(Activer la fonctionnalité exec_logging)</comment>
# <i>sysctl -w kernel.grsecurity.exec_logging = 1</i>
<comment>(Désactiver la fonctionnalité exec_logging)</comment>
# <i>sysctl -w kernel.grsecurity.exec_logging = 0</i>
</pre>

<p>
Une option très importante de sysctl appartenant à grsecurity&nbsp;:
<c>kernel.grsecurity.grsec_lock</c>. Quand elle est activée, vous ne pouvez
plus changer aucune option.
</p>

<pre caption="Protéger l'interface sysctl">
# <i>sysctl -w kernel.grsecurity.grsec_lock = 1</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Auditer le noyau</title>
<section>
<title>Étendre votre possibilités de journalisation du système</title>
<body>

<p>
grsecurity ajoute une fonctionnalité supplémentaire au noyau appartenant à la
journalisation. Avec l'<e>audit de noyau</e> de grsecurity, le noyau vous
informera quand les applications sont exécutées, les périphériques (dé)montés,
etc.
</p>

</body>
</section>
<section>
<title>Les différentes options d'audit du noyau</title>
<body>

<p>
La section de configuration du noyau suivante peut être utilisée pour activer
les options d'audit du noyau de grsecurity&nbsp;:
</p>

<pre caption="Activation de l'audit du noyau">
<comment>#
# Kernel Auditing
#
# CONFIG_GRKERNSEC_AUDIT_GROUP is not set</comment>
CONFIG_GRKERNSEC_EXECLOG=y
CONFIG_GRKERNSEC_RESLOG=y
CONFIG_GRKERNSEC_CHROOT_EXECLOG=y
CONFIG_GRKERNSEC_AUDIT_CHDIR=y
CONFIG_GRKERNSEC_AUDIT_MOUNT=y
CONFIG_GRKERNSEC_AUDIT_IPC=y
CONFIG_GRKERNSEC_SIGNAL=y
CONFIG_GRKERNSEC_FORKFAIL=y
CONFIG_GRKERNSEC_TIME=y
CONFIG_GRKERNSEC_PROC_IPADDR=y
CONFIG_GRKERNSEC_AUDIT_TEXTREL=y
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Restrictions des processus</title>
<section>
<title>Protection des fichiers exécutables</title>
<body>

<p>
Avec grsecurity vous pouvez restreindre les exécutables. Dans la mesure où la
plupart des exploitations de failles fonctionnent à l'aide d'un ou plusieurs
processus en exécution cette protection peut préserver la santé de votre
système.
</p>

</body>
</section>
<section>
<title>Protection du réseau</title>
<body>

<p>
La pile TCP/IP de Linux est vulnérable aux attaques basées sur la prédiction.
Grsecurity propose des correctifs utilisant des procédés aléatoires pour
contrer ces attaques. En plus de cela, vous pouvez également activer des
restrictions sur les sockets, interdisant l'accès au réseau à certains groupes.
</p>

</body>
</section>
<section>
<title>Configuration du noyau</title>
<body>

<p>
Les options du noyau présentées ci-dessous activent plusieurs protections sur
les exécutables et le réseau&nbsp;:
</p>

<pre caption="Configuration du noyau">
<comment>#
# Executable Protections
#</comment>
CONFIG_GRKERNSEC_EXECVE=y
CONFIG_GRKERNSEC_DMESG=y
CONFIG_GRKERNSEC_RANDPID=y
CONFIG_GRKERNSEC_TPE=y
CONFIG_GRKERNSEC_TPE_ALL=y
CONFIG_GRKERNSEC_TPE_GID=100

<comment>#
# Network Protections
#</comment>
CONFIG_GRKERNSEC_RANDNET=y
CONFIG_GRKERNSEC_RANDISN=y
CONFIG_GRKERNSEC_RANDID=y
CONFIG_GRKERNSEC_RANDSRC=y
CONFIG_GRKERNSEC_RANDRPC=y
<comment># CONFIG_GRKERNSEC_SOCKET is not set</comment>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>L'ensemble d'outils « Hardened »</title>
<section>
<body>

<p>
Même si ce n'est pas dans l'objectif de ce document, nous mentionnons
l'utilisation de l'ensemble des outils «&nbsp;hardened&nbsp;» qui complète le
modèle grsec/PaX du côté de l'espace utilisateur. Pour commencer rapidement,
vous pouvez exécuter les commandes suivantes&nbsp;:
</p>

<pre caption="Utiliser les outils proposés par le projet hardened">
# <i>cd /etc</i>
# <i>rm make.profile</i>
# <i>ln -s ../usr/portage/profiles/hardened/x86 make.profile</i>
# <i>emerge -e world</i>
</pre>

<p>
Si vous n'avez pas envie d'utiliser ce profil ajoutez les paramètres USE
<c>hardened pic pie</c> à votre variable USE dans le fichier
<path>/etc/make.conf</path>. 
</p>

</body>
</section>
</chapter>

<chapter>
<title>Ressources</title>
<section>
<body>

<ul>
  <li><uri link="http://grsecurity.net/">Page du projet grsecurity</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://forums.grsecurity.net/">Forums de
    grsecurity</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://grsecurity.net/researchpaper.pdf">Augmenter les
    performances et la granularité dans un système RBAC</uri>&nbsp;;
  </li>
  <li>
    <uri link="/proj/en/hardened/capabilities.xml">Noms et descriptions des
    fonctionnalités</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://grsecurity.net/quickstart.pdf">Guide de démarrage rapide
    pour grsecurity</uri> (nouveau .pdf)&nbsp;;
  </li>

  <li>
    <uri link="/proj/en/hardened/pax-quickstart.xml">Guide
    de démarrage rapide pour PaX sous Gentoo</uri> (nouveau)&nbsp;;
  </li>
  <li>
    <uri link="grsecurity.xml">grsecurity avec un
    système MAC pour Gentoo 1.9.x</uri> (ancien guide)&nbsp;;
  </li>
  <li>
   <uri link="http://grsecurity.net/PaX-presentation_files/frame.htm">PaX&nbsp;:
   La garantie de la fin de l'exécution arbitraire de code</uri>&nbsp;;
  </li>
  <li>
    <uri link="http://pax.grsecurity.net">Site de PaX et
    documentation</uri>&nbsp;;
  </li>
  <li>
   <uri link="/proj/en/infrastructure/tenshi">Tenshi</uri>.
  </li>
</ul>

</body>
</section>
</chapter>

</guide>
