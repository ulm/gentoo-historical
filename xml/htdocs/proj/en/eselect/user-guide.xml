<?xml version='1.0' encoding="UTF-8"?>

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/eselect/user-guide.xml,v 1.2 2005/06/13 07:57:31 fox2mike Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/proj/en/eselect/user-guide.xml">
<title>eselect User Guide</title>

<author title="Author">
	<mail link="ciaranm@gentoo.org">Ciaran McCreesh</mail>
</author>
<author title="Author">
	<mail link="kugelfang@gentoo.org">Danny van Dyk</mail>
</author>
<author title="Editor">
  <mail link="fox2mike@gmail.com">Shyam Mani</mail>
</author>

<abstract>
This document is a complete reference guide for the end user of the eselect
tool.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.0 -->
<license/>

<version>0.9.4.124</version>
<date>2005-06-13</date>

<chapter>
<title>Introduction</title>
<section>
<title>A Brief Overview</title>
<body>

<p>
eselect is a tool for administration and configuration on Gentoo systems. It
<e>will</e> modify the system's behaviour and should be used with care by the
system administrator. eselect is a modular framework for writing 
configuration utilities. It consists of:
</p>

<ul>
	<li>
	A main program called <c>eselect</c>.
	</li>
	<li>
	Various modules (*.eselect files) which carry out different tasks.
	</li>
	<li>
	Several libraries which help ensure consistent behaviour and simplify the
	creation of new modules.
	</li>
</ul>

<p>
A modules provides several actions. Actions typically either display some
information (<c>list</c> and <c>show</c> are common) or update the system
somehow (for example, <c>set</c> and <c>update</c>). Each module also provides
<c>help</c> and <c>usage</c> actions which explains how to use the module.
</p>

<p>
Some modules install symlinks to the main program. eselect handles these
intelligently. For example, it realises that <c>profile-config list</c> should
be treated as if the user had run <c>eselect profile list</c>.
</p>

</body>
</section>
<section>
<title>Advantages for end users and System Administrators</title>
<body>

<p>
For system administrators and end users, tools written as eselect modules offer
several advantages over the traditional "write each tool from scratch" approach:
</p>

<ul>
	<li>
	Consistent UI - eselect modules provide a consistent user interface. Thanks 
	to eselect's	action framework, there is no longer any need to remember or 
	look up dozens of	-x style switches for each tool. The output format used by 
	modules is also	standardised.
	</li>
	<li>
	Consistent Help format - All eselect modules provide easily accessible help 
	documentation via the	<c>help</c> and <c>usage</c> actions.
	</li>
	<li>
	Consistent tool naming - There is no need to remember dozens of foo-config 
	and update-blah names. To	see a list of available tools, simply run 
	<c>eselect</c> with no arguments. Of course the foo-config style are still 
	available (via symlinks) if you	prefer them.
	</li>
	<li>
	Guaranteed Support for <c>$ROOT</c> - For those of you using <c>$ROOT</c>, 
	you will not have to worry about whether a particular tool can handle it. 
	Support for <c>$ROOT</c> is required for all eselect modules.
	</li>
</ul>

</body>
</section>
<section>
<title>Advantages for Developers and Package Maintainers</title>
<body>

<p>
Writing your tool as an eselect module rather than starting freom scratch gives
you various benefits:
</p>

<ul>
	<li>
	Faster Development time - Much of the work has already been done for you.
	eselect provides a series of libraries for common tasks, and the main
	<c>eselect</c> program handles most of the hard work for you. All you need to
	do is provide the actions and any domain specific functions you require.
	</li>
	<li>
	Automatic Actions - The <c>help</c> and <c>usage</c> actions are automatically
	generated from your actions, so there is no need to spend time worrying about
	keeping these written up to date.
	</li>
	<li>
	Easy, Consistent Behaviour - Because most of the input, output and command
	line handling is split off into library functions, writing a "standard" module
	which behaves consistently with other tools is very simple.
	</li>
	<li>
	Familiar Format - For Gentoo developers, the eselect module format will be
	very familiar -- it is a bash file with a structure that is quite similar to
	ebuilds.
	</li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>Using eselect</title>
<section>
<title>Usage</title>
<body>

<p>
eselect should be called as shown below.
</p>

<pre caption="eselect - General Syntax">
# <i>eselect [&lt;global options&gt;] &lt;module&gt; &lt;action&gt; &lt;options&gt;</i>
</pre>

<p>
eselect features consistently name actions amongst most of its modules. There is
only one global option as of now; <c>--no-color</c>, which asks eselect to stop
showing colored output, which is the default. The following are the standard
action names -- each modules may provied a subset of these actions:
</p>

<ul>
	<li>
	<c>help</c> - Print the modules help screen.
	</li>
	<li>
	<c>usage</c> - Print information on how to invoke the modules actions.
	</li>
	<li>
	<c>version</c> - Print the modules version and other useful information.
	</li>
	<li>
	<c>list</c> - Prints a set of selectable options.
	</li>
	<li>
	<c>show</c> - Prints the currently active configuration(s).
	</li>
	<li>
	<c>set</c> - Select one of the options offered by <c>list</c>.
	</li>
	<li>
	<c>enable</c> - Enable one of the module specific features.
	</li>
	<li>
	<c>disable</c> - Disable one of the module specific features.
	</li>
	<li>
	<c>update</c> - Like <c>set</c>, but automatically selects an option rather 
	than taking a parameter.
	</li>
	<li>
	<c>scan</c> - Gather information about the system and store it for future 
	usage by the module.
	</li>
</ul>

<p>
A typical session will look like the following for most modules:
</p>

<pre caption="Example eselect session">
<comment>(Find out options for a module)</comment>
# <i>eselect &lt;module&gt; list</i>
These selections are available:
	[1]&lt;first&gt;
	[2]&lt;second&gt;
<comment>(Set an option)</comment>
# <i>eselect &lt;module&gt; set &lt;first&gt;</i>
<comment>(Display the current config)</comment>
# <i>eselect &lt;module&gt; show</i>
Active Selection:
	&lt;item1&gt;
</pre>

<p>
You can usually set items either by name or number.
</p>

</body>
</section>
</chapter>
</guide>



 
