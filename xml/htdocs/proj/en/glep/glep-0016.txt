GLEP: 16
Title: Gentoo Menu System
Version: $Revision: 1.2 $
Last-Modified: $Date: 2003/12/11 21:19:31 $
Author:	Heinrich Wendel <lanius@gentoo.org>,
Status: Draft
Type: Standards Track
Content-Type: text/x-rst
Created: 09-Sep-2003
Post-History: 04-Oct-2003, 11-Oct-2003

Definitions
============

   *APP*
      A graphical application that should be listed in the menus.
   *WM*
      A program containing a menu manager (i.e. a program that can display a menu, e.g. a windowmanager).



Abstract
========

This GLEP handles a proposal for the following two goals:

* Create a common menu layout, which would be independent of the WM.
  This point is quite important for those people who use more than one WM. 
* Provide a common way to add applications to the menus.



Motivation
==========

GNOME, KDE, Fluxbox, to name only a few, have all their own ways of handling
menus. There have been several requests [1]_ [2]_ [3]_ [4]_ [5]_ [6]_ from
users to streamline these menus. Furthermore there are several bug reports
about applications not having a menu entry [7]_, but since there is not
standard way to create such an entry, they are just sitting around in
bugzilla.



Rationale
=========

The idea of a common menu system is not new to the Linux world, every big
distribution (Debian, Mandrake, RedHat, Suse) has such a system. The big DE's,
KDE and GNOME, with the help of freedesktop.org [8]_, are also trying to
implement one standard. That will most likely happen in GNOME 2.6 and KDE 3.2
(Currently they are only implementing different versions of the
desktop-entry-spec, but interpreting it in an incompatible way).  But there
are still many other WM's that currently don't support these specs.  So we are
trying to base our work on the specifications GNOME and KDE are going to use.
(These are no official standards but evolving specifications). This has the
following advantages:

* follow specified standards
* i18n support
* provide the necessary flexibility and modularity 
* integrate with small changes to our ebuildtree.
* support for per system and per user menus



Specification
=============

We are trying to follow these specifications:

* Desktop Entry Specification [9]_
* Menu Specification [10]_
* Icon Theme Specification [11]_

There are two libraries that offer an API to these specifications:

* PyXDG [12]_ (written in python)
* Desktop File Utils [13]_ (written in C)

Our goal is to patch the WM's with the help of these libraries to support the
specifications. APP's then only have to install a .desktop entry [9]_ and
optionally an icon and will be listened in all menus. This installation could
easily be done by two portage commands (domenu, doicon).  Additionaly we
should provide a reference menu layout and icon theme and add a function to
repoman to validate .desktop files.



Credits
=======

Based on suggestions from former discussions on the gentoo bugzilla,
mailinglists and forums.



References
==========

.. [1] http://bugs.gentoo.org/show_bug.cgi?id=5510
.. [2] http://bugs.gentoo.org/show_bug.cgi?id=10429
.. [3] http://bugs.gentoo.org/show_bug.cgi?id=4884
.. [4] http://bugs.gentoo.org/show_bug.cgi?id=25797
.. [5] http://forums.gentoo.org/viewtopic.php?t=66754
.. [6] http://forums.gentoo.org/viewtopic.php?p=263106#263106
.. [7] http://bugs.gentoo.org/show_bug.cgi?id=25756
.. [8] http://www.freedesktop.org
.. [9] Desktop Entry Specification
   [http://www.freedesktop.org/standards/desktop-entry-spec/0.9.4/]
.. [10] Menu Specification
   [http://www.freedesktop.org/standards/menu-spec/0.8/]
.. [11] Icon Theme Specification
   [http://www.freedesktop.org/standards/icon-theme-spec/0.7/]
.. [12] PyXDG
   [http://www.freedesktop.org/software/pyxg]
.. [13] Desktop File Utils
   [http://www.freedesktop.org/software/desktop-file-utils]



Copyright
=========

This document has been placed in the public domain.
