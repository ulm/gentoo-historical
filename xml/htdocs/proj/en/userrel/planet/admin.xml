<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/userrel/planet/admin.xml,v 1.3 2010/11/01 22:26:59 tampakrap Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide>
<title>Planet and Blogs administration</title>

<author title="Author">
  <mail link="tampakrap" />
</author>

<abstract>
Instructions for Planet and Blogs administrators
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.0</version>
<date>2007-12-09</date>

<chapter>
<title>Introduction</title>
<section>
<title>Planet configuration files</title>
<body>

<p>
The software that powers Planet and Universe is <uri link="http://intertwingly.net/code/venus/">
Venus</uri>. It consists of the python code, a config file (which consists of the
site info and the list of the users aggregated) and the theme. It then parses the
feed URLs and creates a static HTML page. Planet and Universe configs are stored in
a git repository. The configs include the venus software configs, the Gentoo theme
for venus, and the configs with the users. The git repository is <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/planet-gentoo.git">here</uri>.
A more detailed explanation about its structure:
</p>

<ul>
  <li>
    archives: contains the index.php files that create and show the archives html files
  </li>
  <li>
    configs: the actual venus config files. the scripts/update-venus cron job
    merges all the files in that dir into two big files, one for planet and one
    for universe, named venus.{planet,universe}.ini
    <ul>
      <li>
        base/: site information
      </li>
      <li>
        planet/ universe/: each user's information
      </li>
    </ul>
  </li>
  <li>
    media: static css and image files 
  </li>
  <li>
    scripts: 
    <ul>
      <li>
        adduser.py: helper script to add new user
      </li>
      <li>
        gravatar.py: produces email md5 as requested by gravatar
      </li>
      <li>
        update-venus: the cron job that updates the site content,
      </li>
    </ul>
  </li>
  <li>
    templates: the gentoo venus theme    
  </li>
</ul>

<p>
In case you want to perform a local install for testing, the following steps
are sufficient:
</p>

<ul>
  <li>
    emerge -av venus
  </li>
  <li>
    webapp-config -I -h blogs.gentoo.org venus version
  </li>
  <li>
    git clone git://git.overlays.gentoo.org/proj/planet-gentoo.git
    /var/www/planet.gentoo.org/
  </li>
  <li>
    sh /var/www/planet.gentoo.org/planet-gentoo/scripts/update-venus
    (This will create the necessary symlinks and create the appropriate configs
    for planet)
  </li>
</ul>

</body>
</section>
<section>
<title>Blogs configuration</title>
<body>

<p>
The software that powers Gentoo Blogs is <uri link="http://wordpress.org">
WordPress</uri>, using its <uri link="http://codex.wordpress.org/Create_A_Network">
Network</uri> feature to support multiple blogs in a single installation.
Furthermore, we store the wp-content/{plugins,themes} dirs in a <uri 
link="http://git.overlays.gentoo.org/gitweb/?p=proj/planet-gentoo.git">git
repository</uri>, so that blogs admins can easily install/update them.
</p>

<p>
The WP Network supports a Super Admin, who can enable / disable plugins, create
/ delete users and blogs. Furthermore, each user can also be an admin of his own
blog (or more than one). Any configuration (users, blogs, permissions, plugins
etc) will be done through the admin web panel, which you can enter by typing
http://blogs.gentoo.org/wp-admin (for the topdir's one), or 
http://blogs.gentoo.org/$user/wp-admin to enter someone else's admin panel
(which you should avoid).
</p>

</body>
</section>
</chapter>
<chapter>
<title>Adding Users</title>
<section>
<title>...in planet</title>
<body>

<p>
To add a new user in planet, either create the config by hand (under
configs/{planet,universe}/nickname) or use the adduser.py script. Always check
the results of the script before committing your changes though.
</p>

</body>
</section>
<section>
<title>...in blogs</title>
<body>

<p>
Go to Super Admin panel -> Sites, and scroll to the bottom of the page
where the Add Site form is. Fill in the blanks, and the system will create
a new blog, and if the admin email doesn't exist (which should not), a new
user with the same name as the blog will be created. The user will get an
email with his password.
</p>

<p>
An additional step is required though. In order to enable wp-stats for the
user, you need to go to 
<c>https://blogs.gentoo.org/USER/wp-admin/options-general.php?page=wpstats</c>
(change the USER with a valid username) and add the wp API Key. If you
don't know it, ask for it from an infra or a planet team member.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Removing Users</title>
<section>
<title>...from planet</title>
<body>

<p>
To remove a user from planet/universe, just git rm his config(s)
</p>

</body>
</section>
<section>
<title>...from blogs</title>
<body>

<p>
We NEVER delete content from blogs.g.o. What should be done is to set a new
random password at his account, and disable comments for every post. For the
first go to Super Admin -> Users. Below is a python script that generates
random strings:
</p>

<pre caption="random password generator in python">
import string
from random import choice
''.join([choice(string.letters + string.digits) for i in range(10)])
</pre>

<p>
To disable the comments in all posts, ask an infra guy to run the following
SQL command (blog ID can be found under Super Admin -> Sites):
</p>

<pre caption="Disable comments in all posts of a specific blog">
UPDATE wp_ID_posts SET comment_status='closed', ping_status='closed' WHERE comment_status='open' OR ping_status='open';
</pre>

<impo>The above actions should be taken either by a user request, or when
the planet team is CC'd at a developer retirement bug</impo>

</body>
</section>
</chapter>
<chapter>
<title>Updating plugins/themes in wordpress</title>
<section>
<title>Adding a new plugin/themes</title>
<body>

<p>
To add a new plugin/theme, first commit it in the blogs-gentoo git repo,
and then ask from an infra guy to run git pull in
<c>/var/www/blogs.gentoo.org/blogs-gentoo</c>. For plugins, go to admin
panel go to Plugins -> Plugins and Network Activate it. For themes, go
to Super Admin -> Themes and Enable it.
</p>

</body>
</section>
<section>
<title>Removing a plugin/theme</title>
<body>

<p>
To remove a plugin, go to Plugins -> Plugins and deactivate it. To remove
a theme, go to Super Admin -> Themes and Disable it. Then, remove the
plugin/theme from the git repository and ask from an infra guy to update
the clone on the server. Finally, verify it is removed completely.
</p>

</body>
</section>
</chapter>
</guide>
