<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/project.xsl" type="text/xsl"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE project SYSTEM "/dtd/project.dtd"> 
<project>
	<name>Gentoo Programming Resources</name>
	<longname>Gentoo Resources for Programming Languages</longname>

	<date>11 Nov 2006</date>

	<author title="Developer">
		<mail link="george@gentoo.org">George Shapovalov</mail>
	</author>


	<description>
		Gentoo Specific Support for Programming Environments.
	</description>

	<longdescription>
		The project provides coverage for Gentoo specific issues associated with 
		various programming languages that can be found in portage. Right now the 
		top level is mostly a placeholder for all the individual subprojects. However
		common initiatives covering the topic are wellcome! Everybody interested is 
		invited to take a look at the
		<uri link="https://bugs.gentoo.org/show_bug.cgi?id=151118">bug #151118</uri>
		and take part in discussion.
	</longdescription>

	<goals>
		<p>
			The overal goal is to provide necessary resources supporting "The Gentoo Way" of dealing
			with programming environments. That is, flexible setup and, where it makes sense,
			coexisting multiple versions/realizations of compilers with an easy way to switch between those, 
			while automating mundane tasks.
		</p>

		<p>
			Often it happens that multiple compiler suits can be used to compile existing libraries.
			However the resulting libs are usually ABI incompatible, meaning that code utilizing 
			these libs should be compiled with the same compiler. This situation can be further 
			complicated by interdependencies between the provided libs. To address this situation
			it is necessary to introduce some kind of "ABI tracking" ability. Ideally this would be done
			by providing some extra dependency info and having portage deal with it. However this 
			requires support on the portage side and as it is not going to happen soon.
			There is a discussion under way on how this can be done now. Those interested please
			take a look at <uri link="https://bugs.gentoo.org/show_bug.cgi?id=151343">bug #151343</uri>.
		</p>

		<p>
			Another issue common to multiple language implementations is that quite a few of them
			have a compiler that is a gcc frontend. As such their build procedure is quite similar and 
			so it would make sense to work on a common eclass, possibly even combining everything with
			toolchain.eclass. The affected compilers that I had to deal with are: gpc (Pascal, in portage), 
			gdc (D, not in portage but has may interested users) and gnat (Ada). The last one in fact is 
			further subdivided into gnat-gcc for version produced by FSF and gnat-gpl produced by AdaCore.
			These gnat versions have a proper eclass common to all of them, and thus other compilers 
			can be based on that one.
		</p>

	</goals>
	
<dev role="lead">george</dev>


<subproject ref="/proj/en/prog_lang/ada/index.xml"/>


</project>
