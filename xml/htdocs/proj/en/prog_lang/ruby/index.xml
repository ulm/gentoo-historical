<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/project.xsl" type="text/xsl"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE project SYSTEM "/dtd/project.dtd"> 
<project>
    <name>Ruby</name>
    <longname>Gentoo Ruby Project</longname>
    <date>02 May 2010</date>

    <author title="Original author">
        <mail>nichoj</mail>
    </author>

    <author title="Author">
        <mail link="graaff@gentoo.org">Hans de Graaff</mail>
    </author>

    <author title="Author">
        <mail link="a3li@gentoo.org">Alex Legler</mail>
    </author>

    <description>This project provides support for the Ruby programming language.</description>

    <longdescription>
        <p>
            The Ruby project maintains packages for <uri link="http://www.ruby-lang.org/en/">Ruby
            </uri> implementations, libraries and development tools.
        </p>
        <p>
            This project also maintains the <uri link="http://rubygems.org/">RubyGems</uri> package,
            the de facto standard for packaging Ruby projects. Many Ruby packages currently in the
            Portage tree use this mechanism for installing.
        </p>
        <p>
            Highlighted packages include <uri link="http://rake.rubyforge.org">Rake</uri>,
            <uri link="http://rubyonrails.org/">Ruby on Rails</uri>,
            <uri link="http://www.capify.org/">Capistrano</uri>,
            and <uri link="http://rspec.info/">RSpec</uri>, to name a few.
        </p>
    </longdescription>

    <recruitment>
        <job>
            <summary>General package maintainer</summary>
            <details>
                General ruby package maintainer to help out managing
                packages in the herd. Revision bumping, bug
                filing/fixing, updating ebuilds per eclass or syntax
                changes, etc. This involves a mix of gem and source
                based ebuilds.
            </details>
            <requirements>
                Experience with ruby on Linux, ideally
                Gentoo. Knowledge of the gem repository system and its
                supporting software and experience with building ruby
                software using setup.rb and its many incarnations.
            </requirements>
            <contact>ruby@gentoo.org</contact>
        </job>
        <job>
            <summary>Ruby core package maintainer</summary>
            <details>
                Ruby core package maintainer to help out with the core
                ruby packages (dev-lang/ruby and
                dev-ruby/rubygems). Revision bumping, handling
                security bugs, patching packages to play nice with
                Gentoo, following upstream to handle changes and
                updates in a timely manner.
            </details>
            <requirements>
                Experience with ruby on Linux, ideally
                Gentoo. Knowledge of C and ruby. Experience with
                patching software.
            </requirements>
            <contact>ruby@gentoo.org</contact>
        </job>
    </recruitment>

    <resource link="irc://irc.freenode.org/#gentoo-ruby">#gentoo-ruby on irc.freenode.net</resource>
    <resource link="http://tinyurl.com/2le9ba">Ruby bugs</resource>
    <resource link="http://wiki.gentoo.org/wiki/Project:Ruby">Ruby information on the Gentoo Wiki</resource>
    <resource link="http://overlays.gentoo.org/proj/ruby/wiki">Ruby overlay and project wiki</resource>
    <resource link="http://gems.stingray.a3li.info/">RubyGem ebuilds needing an update</resource>

    <task id="ruby-1.9" finished="no" lead="a3li">
        <name>Ruby 1.9</name>
        <description>Support for all Ruby packages with 1.9</description>
        <longdescription>
            <p>
                Ruby 1.9.1 is going to be the first stable release of Ruby 1.9, to be released in January 2009.

                Our infrastructure is currently being updated, so we should have ebuilds in the near future.
            </p>
        </longdescription>
        <startdate>12-29-2007</startdate>
        <milestone finished="yes">
            <enddate></enddate>
            <description>Package Ruby 1.9</description>
        </milestone>
        <milestone finished="yes">
            <enddate></enddate>
            <description>Create new eclasses</description>
        </milestone>
        <milestone finished="yes">
            <enddate></enddate>
            <description>Have a working way to switch default symlinks. Done with eselect-ruby.</description>
        </milestone>
        <milestone finished="no">
            <enddate></enddate>
            <description>Verify USE_RUBY status for all packages in the tree</description>
        </milestone>
    </task>

    <extrachapter position="devs">
        <title>Supported Ruby implementations</title>
        <section>
            <title>Overview</title>
            <body>
                <p>
                    In Gentoo multiple Ruby implementations can co-exist. This
                    is supported through the <c>RUBY_TARGETS</c> mechanism. You can add
                    the <c>RUBY_TARGETS</c> variable to your <path>/etc/make.conf</path> file to select
                    which Ruby implementations you want packages to be installed for on your
                    system. By default only <c>ruby18</c> is selected.
                </p>

                <pre caption="/etc/make.conf">
<comment># Installs packages for Ruby 1.8 and 1.9.</comment>
<var>RUBY_TARGETS</var>=<const>"ruby18 ruby19"</const>
                </pre>
                <note>
                    Some packages do not support all Ruby targets mentioned below.
                    For example, even if your RUBY_TARGETS setting instructs Portage to install for
                    both Ruby 1.8 and 1.9, but the package only supports 1.8, the package will only
                    be installed for Ruby 1.8.
                    Review the output of <c>emerge -pv &lt;package&gt;</c> to see for which
                    Ruby versions the package is actually installed.
                </note>
            </body>
        </section>
        <section>
            <title>Ruby 1.8.x (aka MRI): ruby18</title>
            <body>
                <p>
                    This version of Ruby is our main implementation. It is
                    available as the 1.8 slot of <c>dev-lang/ruby</c>. It is
                    available in the stable tree, and almost all Ruby packages
                    in the tree are available for this implementation.
                </p>
                <impo>
                    Regular maintenance for this version will <uri link="http://www.ruby-lang.org/en/news/2011/10/06/plans-for-1-8-7/">stop in
                    June 2012</uri>. Upstream will continue to provide
                    security fixes until June 2013.
                </impo>
            </body>
        </section>
        <section>
            <title>Ruby 1.9.x (aka MRI/YARV): ruby19</title>
            <body>
                <p>
                    This version of Ruby is also stable and available
                    as the 1.9 slot of <c>dev-lang/ruby</c>. This
                    version will become the default ruby
                    implementation for Gentoo after the summer of 2012.
                </p>
            </body>
        </section>
        <section>
            <title>JRuby: jruby</title>
            <body>
                <p>
                    This version of Ruby is based on the Java Virtual
                    Machine. It is available as <c>dev-java/jruby</c>. It is
                    available in the stable tree.
                </p>
            </body>
        </section>
        <section>
            <title>Ruby Enterprise Edition 1.8.x: ree18</title>
            <body>
                <p>
                    This is an enhanced version of Ruby 1.8, featuring various
                    enhancements, most notably in that it requires less memory
                    to run. It is available as
                    <c>dev-lang/ruby-enterprise</c> It is available in
                    the stable tree.
                </p>
                <p>
                    For more information, visit <uri link="http://www.rubyenterpriseedition.com/">http://www.rubyenterpriseedition.com/</uri>.
                </p>
                <impo>
                    Upstream has indicated that they <uri link="http://blog.phusion.nl/2012/02/21/ruby-enterprise-edition-1-8-7-2012-02-released-end-of-life-imminent/">will no longer
                    support REE</uri>. Instead they suggest to use Ruby
                    1.9. We will likely mask and later remove REE from
                    Gentoo soonish, but with ample warning time.
                </impo>
            </body>
        </section>
        <section>
            <title>Rubinius: rbx</title>
            <body>
                <p>
                    Rubinius is currently available in the unstable
                    tree and should be considered experimental. There
                    are still a few packaging bugs that keep it from
                    being used more widely.
                </p>
            </body>
        </section>
    </extrachapter>

    <extrachapter>
        <title>Policy for adding new Ruby packages</title>
        <section>
            <title>Overview</title>
            <body>
                <p>
                    The ruby herd gets a fair amount of requests to add new packages to
                    the dev-ruby category in Portage. Unfortunately we often get a bit
                    defensive about this and the package requests just hang about. This
                    policy tries to outline our thinking on when to add new packages and
                    what you can do to enhance the chances of adding a new package.
                </p>
            </body>
        </section>
        <section>
            <title>Which packages should go to dev-ruby?</title>
            <body>
                <p>The dev-ruby category should <b>only</b> contain the following packages:</p>
                
                <ul>
                    <li>Library code (e.g. <c>dev-ruby/mime-types</c>)</li>
                    <li>Packages specific to the Ruby environment  (e.g. <c>dev-ruby/rake</c>)</li>
                </ul>

                <p>Specifically, <b>applications written in Ruby</b> should <b>not</b> go to the
                    dev-ruby category by default, and they would not normally be
                    maintained by the ruby herd. For example, recently cucumber has been
                    added to the dev-util category, even though it is written in Ruby and
                    started out as a spin of from the more Ruby-specific rspec. However,
                    it now also has support for Java and it provides an application, so it
                    is much better suited for a more targeted category of dev-util.</p>

                <p>For libraries and supporting code we tend to add these packages
                    only when they are a requirement for an application that gets added to
                    Gentoo, or a new requirement of said application.</p>

                <p>Other packages only get added when there is sufficient demand. We
                    determine this by looking at the number of votes for a package, so
                    feel free to open a bug for it and lobby a few folks to add their
                    votes.</p>
            </body>
        </section>
        <section>
            <title>Why not add more packages?</title>
            <body>
                <p>Having this policy may seem silly. Why not just add new packages as
                    people provide ebuilds for them?</p>

                <p>In part we are reluctant to add many packages because they should
                    really fall under the responsibility of someone else. For example,
                    sup, the ruby mail client, fits much better to the net-mail
                    herd. After all, not all packages written in C are part of the
                    (not even existing) c herd.</p>

                <p>In part we are also reluctant because once a package is added it
                    will increase our workload towards the future. Version bumps, security
                    issues, and QA within Gentoo must be kept up to date. On top of that
                    ruby has a bit of a reputation for code that sees a few frantic
                    releases and is than for all intents and purposes abandoned. Having
                    packages like that in the tree adds disproportionally to our
                    maintenance and takes away from providing you with an overall good
                    ruby experience on Gentoo.</p>
            </body>
        </section>
    </extrachapter>

    <extrachapter>
        <title>Version bumps for existing packages</title>
        <section>
            <title>gems-based packages</title>
            <body>
                <p>
                    We <uri
                    link="http://moving-innovations.com/~graaff/outdated-gems">automatically
                    track</uri> updates to gems-based ruby packages,
                    so please don't file bugs for these at all. (Note
                    that the list in question is generated on-demand
                    manually, so it may appear to be out of date.)
                </p>
                <p>
                    If a gems-based package has not been updated to
                    the latest version for some time then this usually
                    means there are issues with it. In that case the
                    best way to help us is to report a bug that
                    includes a fully tested version of an ebuild. The
                    ebuild should work correctly with FEATURES=test
                    and USE=doc on all the ruby implementations that
                    the ebuild supports.
                </p>
            </body>
        </section>

        <section>
            <title>Other ruby packages</title>
            <body>
                <p>
                    For other ruby packages we don't have a
                    centralized mechanism to track new versions, but
                    we still track a fair amount of them by other
                    means. If you find such a package that has not
                    been updated for a month then please feel free to
                    file a bug for it since we may not be actively
                    monitoring it. Please double-check that it is not
                    (also) distributed as a gem to avoid unnecessary
                    bugs.
                </p>
            </body>
        </section>

    </extrachapter>


    <dev role="lead">graaff</dev>
    <dev role="member">robbat2</dev>
    <dev role="member">a3li</dev>
    <dev role="member">gengor</dev>
    <dev role="member">mrueg</dev>
</project>
