<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/project.xsl" type="text/xsl"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE project SYSTEM "/dtd/project.dtd">
<project>

<name>gcloop</name>
<longname>Gentoo compressed loop</longname>

<description>
This project develops gcloop kernel module and userspace tools, which will be used to build official Gentoo LiveCDs
</description>

<longdescription>
This project develops gcloop kernel module and userspace tools, which will be used to build official Gentoo LiveCDs. The whole project aims to be completely compression algothm agnostic, even if the current development is focused on <uri link="http://www.oberhumer.com/opensource/ucl/">ucl</uri> nrv2e compressor.
</longdescription>

<goals>
<p>The goal of the gcloop project is to provide a robust framework for building compressed partition image</p>
</goals>

<dev role="lead" description="Main coder">lu_zero</dev>

<extrachapter position="bottom">
	<title>Resources</title>
	<section>
	<body>
	<p>Patches for 2.6 and 2.6-mm linux kernel: <uri>http://dev.gentoo.org/~lu_zero/gcloop/</uri></p>
	<p>UCL nrv2e compressor <uri>http://www.oberhumer.com/opensource/ucl/</uri></p>
	<p>Further resources will follow</p>
	</body>
	</section>
</extrachapter>

<extrachapter position="bottom">
	<title>Gcloop Installation and Usage Documentation</title>
	<section>
	<title>Installation</title>
	<body>
	<p>First get the kernel patch an the userspace tools from <uri>http://dev.gentoo.org/~lu_zero/gcloop/</uri> and the ucl lib from <uri>http://www.oberhumer.com/opensource/ucl/</uri>. Build and install ucl and then you can patch you kernel sources. </p>
	<pre caption="Patching">
	cd /usr/src/linux
	patch -p1 &lt;/where/you/unpacked/gcloop-0.99/gcloop-2.6-[date].patch
	</pre>
	<p>In order to use gcloop you have to set your .config in the following way</p>
	<pre caption=".config snip">
	CONFIG_BLK_DEV_LOOP=m
	CONFIG_BLK_DEV_CRYPTOLOOP=m
	CONFIG_BLK_DEV_COMPRESSLOOP=m
	CONFIG_CRYPTO=y
	CONFIG_CRYPTO_UCL=m
	</pre>
	<note>You can't load both cryptoloop and compressloop since they currently overlay each other, that is a known issue.</note>
	<p>To build the userspace tools you have just to type "make". Currently there are three different tools: two compressors and an unpacker/checker.</p>
	<table>
	<tr><th>Old name</th><th>New Name</th><th>description</th></tr>
	<tr><ti>create_compressed_ucl_fs</ti><ti>create_gcloop_ucl</ti><ti>Quick and dirty compressor, it doesn't have many options and stores the whole compressed image in memory</ti></tr>
	<tr><ti>compressloop_ucl</ti><ti>compress_gcloop_ucl</ti><ti>Smarter compressor, it has some more options and stores the compressed image block by block, it could be slower</ti></tr>
	<tr><ti>extract_compressed_ucl_fs</ti><ti>extract_gcloop_ucl</ti><ti>A simple unpacker that will output on stderr some statistics, usefull to access a gcloop image from a system without the kernel module and for checking the image consistency</ti></tr>
	</table>
	</body>
	</section>
	<section>
	<title>Creating a compressed image</title>
	<body>	
	<p>Fist of all you need an uncompressed image, usually you can use <c>dd</c> and <c>losetup</c> to build it or <c>mkisofs</c>. After that you can use <c>compress_gcloop_ucl</c> to generate it.</p>
	<pre caption="Creating an image">
	dd if=/dev/zero of=/tmp/image bs=1M count=700
	mke2fs /tmp/image
	mount -o loop /tmp/myimage /mnt/data
	cp -pr /tmp/mydata /mnt/data
	umount /mnt/data
	compress_gcloop_ucl -c 10 -b 131072 /tmp/image /tmp/image.ucl
	</pre>
	<p>That is enough to build a compressed image</p>
	</body>
	</section>
	<section>
	<title>Verify and extract a compressed image</title>
	<body>	
	<p>Once you built a compressed image you can use the <c>extract_gcloop_ucl</c> tool to verify the image in various ways. It will extract to stdout the image and outputs on stderr per block statistics. Errors will be notified with a short message.</p>
	<pre caption="Image checking using md5sum">
	extract_gcloop_ucl image.ucl | md5sum
	</pre>
	<p>A checksum program (like <c>md5sum</c>) could be useful for quick consistency tests.</p>
	<pre caption="Extracting an image">
	extract_gcloop_ucl image.ucl > image 2>image.log
	</pre>
	<p>The userspace tools can be compiled on every posix compliant environment. That way you can access the compressed image from foreing system</p>
	</body>
	</section>
	<section>
	<title>Mounting a compressed image</title>
	<body>	
	<p>After building your modules you can mount a previously created gcloop image using <c>losetup</c> provided by util-linux.</p>
	<pre caption="Mounting an image">
	mkdir /mnt/image
	modprobe compressloop
	echo " ">losetup -e ucl-0 -p0 /dev/loop0 /mnt/cdrom/image.ucl
	mount -o ro /dev/loop0 /mnt/image/
	</pre>
	<p>That is enough to read compressed image</p>
	</body>
	</section>
</extrachapter>

</project>
