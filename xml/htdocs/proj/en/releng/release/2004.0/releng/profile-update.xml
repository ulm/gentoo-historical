<?xml version='1.0' encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">


<guide link="/proj/en/releng/release/2004.0/x86/releng/profile-update.xml">
<title>System profile update procedure for 2004.0</title>

<author title="Author">
  <mail link="zhen@gentoo.org">John Davis</mail>
</author>

<abstract>
	This guide explains both the philosophy and the process behind the 2004.0 profile
	naming scheme change.
</abstract>

<license/>

<version>0.1</version>
<date>15 January 2004</date>

<chapter>
	<title>Philosophy</title>

	<section>
	<title>Background</title>
	<body>
		<p>Commonly refered to as system profiles, the Portage profiles that are located in
		<c>/usr/portage/profiles</c> serve as the building block for any Gentoo Linux system.
		Not only do the profiles specify what CFLAGS and arch KEYWORDS to use, they also lock
		the specific system to a certain range of package versions. The profile is read by Portage
		through the <c>/etc/make.profile</c> symlink which is created at stage building time. </p>

		<p>There exist two problems with the current profile system. First, the version stamp of 1.4
		that marks virtually all of Gentoo's modern profiles is out of date due to the new
		quarterly release scheme. Secondly, the current profile system does not scale well. The
		creation of a profile involves a lot of duplication. All profiles share common threads,
		but there is no current way to abstract or inherit that common data. </p>

		<p>The first problem is one that must be implemented before the release of 2004.0. The
		reason for the deadline is simple - users do not need to be using profiles that are
		version stamped wrong. The renaming procedure is necessary for good QA. The second problem
		is one that will be addressed after 2004.0, and hopefully implemented in 2004.1. </p>
	</body>
	</section>
</chapter>

<chapter>
	<title>Procedure</title>

	<section>
	<title>Profile change procedure</title>
	<body>
		<p>For 2004.0, a clean, fast, and robust fix is required. The easiest way that the profile
		switch can be done is to do the following: </p>

		<pre caption="Profile Change Procedure">
1. cp -a default-arch-1.4 default-arch-2004.0
2. echo "default-arch-1.4" > default-arch-1.4/deprecated
3. Tweak catalyst to use the new profile to build stages
4. Between the release dates, help users update their make.profile symlinks by implementing the profile
	deprecation functionality in Portage-2.0.50 (see number 2).
		</pre>

		<p>After the above is accomplished, the old profiles can begin to be phased out. </p>
	</body>
	</section>
</chapter>

</guide>
