<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/desktop/video/xine.xml,v 1.3 2005/10/14 14:43:17 flameeyes Exp $ -->

<guide link="/proj/en/desktop/video/xine.xml" lang="en">
<title>xine-lib and related</title>

<author title="Author">
  <mail link="flameeyes@gentoo.org">Diego Petten√≤</mail>
</author>

<abstract>
Maintainer notes about xine-lib package and its relatives.
</abstract>


<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.0</version>
<date>2005-10-14</date>

<chapter> <!-- xine-lib -->
<title>xine-lib</title>

<section> <!-- Introduction -->
<title>Introduction</title>

<body>

<p>
<c>media-libs/xine-lib</c> is the package that carries the core of xine video
player. Differently from <c>mplayer</c> that is a standalone program, xine
frontends uses <path>libxine</path> to play video files. This has the
disadvantages that a crash inside <path>libxine</path> shows up as a crash of
the frontend itself.
</p>

<p>
For this reason <c>xine-lib</c> package must be managed carefully, to avoid
adding dangerous crashes that might be difficult to reproduce (the same happened
in the past).
</p>

<p>
Here you'll find a lot of "why and how" about <c>xine-lib</c> and related
packages like <c>xine-ui</c>, <c>gxine</c> and so on. Hopefully, this guide will
be updated during the time, also when maintainer changes.
</p>

</body>
</section>

<section> <!-- Patches -->
<title>Patches</title>

<body>

<p>
<c>xine-lib</c> is classically heavy patched on Portage tree. The reason of this
is that the original <c>xine-lib</c> package had a lot of <e>automagic</e>
dependencies, so it autorecognized presence of some libraries enabling or
disabling extra plugins for them. As this is not good in an ebuild, a dirty
workaround of faking <c>autoconf</c> cache was used. Unfortunately this is quite
difficult to manage, so instead of using that, it was moved to patching the
<path>configure.ac</path> file to add the switches needed. The patches are being
merged upstream, so they can be dropped when new versions are released that have
them applied.
</p>

<p>
If a patch that is not Gentoo-specific is being added to the ebuild, is usually
suggested to send it to <path>xine-devel</path> mailing list on
<uri link="http://sourceforge.net/projects/xine/">xine project space</uri> to
be applied upstream.
</p>

</body>
</section>

<section> <!-- External and internal libraries -->
<title>External and internal libraries</title>

<body>
<p>
As many other multimedia programs, also <c>xine-lib</c> has dependencies on a
lot of libraries for format input and output. Most of them are optional, and
some of them are included inside the same source tarball as the library.
</p>

<p>
Usually upstream suggest to use internal libraries, but for maintaining reasons
is usually preferred to use the Portage-provided libraries. This might require
patching of sources to use external libraries, or to pass
<c>--with-external-<e>library</e></c> to the <c>configure</c> script. When
patching the source, is preferred to add the parameter to configure, so that the
patch can actually be applied upstream.
</p>

<note>
As also <path>libmad</path> is used external or not used at all, <c>xine-lib</c>
might not be able to decode mp3 audio without it.
</note>

<impo>
There is currently a problem with the patch that uses external libraries, for
some reason flac decoding seems to be broken using external dts, a52dec or mad.
The reason of this breakage doesn't seem to be clear.
</impo>

<p>
An exception to the above rules applies to <c>libdvdnav</c>. For unknown reasons
using the external library a lot of DVDs seems not to work at all on xine (while
they works fine on vlc using the same external library), so the internal library
is used.
</p>

<p>
A different treatment is used for <c>ffmpeg</c>. The included version is highly
suggested by upstream, and sometimes it's just the only practicable way, as the
snapshot on portage might be too updated or too outdated to be used. For this
reason, the default behavior should be to use the internal copy, and then the
<path>ffmpeg</path> useflag is used to choose the external copy of it. The
external copy is usually faster and supports extra formats or variations of some
specific video or audio format.
</p>

</body>

</section>

<section> <!-- CFLAGS -->
<title>CFLAGS</title>

<body>

<p>
As many other multimedia programs, also <c>xine-lib</c> has its own problems
with extremely riced flags. Actually, the original xine-lib configure uses by
itself quite extreme flags, on x86 and amd64 platforms. As these were causing
some bugs difficult to smash, Portage's version patches it to avoid adding extra
flags.
</p>

<p>
Unfortunately, because of the need to build <path>libxine</path> with PIC
enabled and the scarse quantity of registers in x86 platform, a few extra flags
needs to be pushed in. For example it's not possible to build <c>xine-lib</c>
without <c>-fomit-frame-pointer</c> in x86, and this makes difficult to handle
debug. Also, you cannot build it without any kind of <c>-O</c> flag, so if user
doesn't provide one, you should at least use <c>-O2</c>.
</p>

<impo>
As most of the problems with CFLAGS are relative only to x86 architecture, it's
preferred to mangle them only in a protected section run only on x86 systems.
This way you avoid changing the flags for people that might use them on better
architectures, where, for example <c>-fomit-frame-pointer</c> can be avoided.
</impo>

</body>
</section>

<section> <!-- useflags -->
<title>useflags</title>

<body>

<p>
<c>xine-lib</c> uses quite a few useflags. Almost every dependency has its own
useflag to enable or disable it. The useflags works basically as every other
useflag with the same name in other packages, but there are a couple that have
notes.
</p>

<p>
The first note is about <b>win32codecs</b> useflag. This is used to enable
the support for the binary win32 codecs that are emulated using a subset of
Wine functions. When disable, though, it also disable asf demuxing support. This
because the asf container (Microsoft's container used usually on MMS streams) is
unstable and lead to crashes when it's used with reverse engineered codecs like
ffmpeg's ones for WMV and WMA.
</p>

<p>
Also, the <b>xvmc</b> useflag and its conditioned useflags (<b>nvidia</b>,
<b>cle266</b> and <b>i8x0</b>) have a special treatment. The single <b>xvmc</b>
can't enable XvMC output plugin as it requires to know which library to use, 
that is specific to a single driver. The three other flags select the right
library, but only one of them can be enabled to have the output plugin. If more
than one of them is enabled, the XvMC output plugin is disabled.
</p>

</body>
</section>

</chapter>

</guide>

<!-- kate: space-indent on; indent-width 2; replace-tabs on; -->
