<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/desktop/kde/kde4-guide.xml,v 1.14 2009/01/30 04:42:07 jmbsvicetto Exp $ -->

<guide link="/proj/en/desktop/kde/kde4-guide.xml" lang="en">
<title>Gentoo KDE 4.X Guide</title>

<author title="Author">
  <mail link="scarabeus" />
</author>
<author title="Author">
  <mail link="jmbsvicetto"/>
</author>
<author title="Author">
  <mail link="cryos" />
</author>
<author title="Editor">
  <mail link="keytoaster" />
</author>

<abstract>
This guide demonstrates how to setup KDE 4.X using the ebuilds in the tree. Some
tools from the KDE team's git overlay (kde-testing) will be used.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.4</version>
<date>2009-01-30</date>

<chapter>
<title>Cleaning up</title>
<section>
<title>Removing old KDE versions</title>
<body>

<p>
In order to minimize issues, it is best to begin with a clean enviroment. You
will need to uninstall any beta or 4.0.X releases (this is needed if you are
moving from any overlay and in particular if you plan to use the -kdeprefix USE
flag - FHS install). Two possible ways of removing old KDE 4 installations are:
</p>

<pre caption="Unmerging commands">
# <i>emerge -C @kde-4.1 @kdebase-4.1</i> <comment>(only if you are coming from the kdesvn-portage or kde-testing overlay)</comment>
# <i>emerge -C $(qfile -C -q -e /usr/kde/%PREFIX%)</i> <comment>(replace %PREFIX% with your KDE version, eg. 4)</comment>
</pre>

<pre caption="Unmerging commands (only applicable if you are moving from an overlay)">
# <i>cd /path/to/old/overlay/</i>
# <i>emerge -C $(find ./ -name \*.ebuild |sed -e "s:.ebuild::" -e "s:./::" |awk -F'/' '{print "="$1"/"$3}')</i>
</pre>

<p>
As a final step you should remove the old overlay so that there are no conflicts
with the KDE ebuilds. You should remove the old unmask and/or keyword data, too.
</p>

<note>
Don't forget to run depclean in order to uninstall any dependant packages.
</note>

</body>
</section>
</chapter>
<chapter>
<title>Unmasking/Keywording</title>
<section>
<title>Using the package.keywords/kde file from the kde-testing overlay</title>
<body>

<p>
The KDE 4.2 ebuilds are masked for now until we get everything ready. So if you want
to test it before we unmask it, you'll need to use the package.unmask file from <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/kde.git;a=blob_plain;f=Documentation/package.unmask/kde-4.2.0;hb=master">
Documentation/package.unmask/kde-4.2.0</uri>.
The KDE 4.1 ebuilds are no longer masked so you won't need to use the package.unmask
file to be able to install them. 
If you are running the stable tree you will need to keyword the ebuilds,
otherwise skip this step. For those running the stable tree in Gentoo:
</p>

<p>
Get the appropriate package.keywords file from the <c>kde-testing</c>
overlay that can be used in your package.keywords file/directory. You
can find this file under <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/kde.git;a=blob_plain;f=Documentation/package.keywords/kde;hb=master">Documentation/package.keywords</uri>
</p>

<pre caption="Adding the file to the package.keywords directory">
# <i>cd /etc/portage/package.keywords</i>
# <i>cp /path/to/keywords/file .</i>
</pre>

<pre caption="Adding the file to the package.keywords file">
# <i>cd /etc/portage/</i>
# <i>cat /path/to/keywords/file >> package.keywords</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>Installation</title>
<section>
<title>The new kdeprefix USE flag</title>
<body>

<p>
The new kdeprefix USE flag allows users to choose between an FHS compliant
install (-kdeprefix) or a slotted install in the KDE prefix (+kdeprefix).
</p>

<p>
If kdeprefix is disabled (default) KDE is installed into the FHS compliant
location, i.e. /usr. That means that all of the files are put under /usr. This
is the desired behaviour for most users. The drawback of the FHS compliant
install is that it will not be possible to have more than one minor version of
KDE side by side (previous behaviour), e.g. KDE 4.1 and 4.2.
</p>

<note>
This restriction does not apply to KDE 3.5 (which uses different eclasses) or
live versions (as they will continue to be installed under
/usr/kde/${live-slot}. You can have a non-kdeprefix version of KDE
4.1, KDE 3.5 and a live version of KDE installed on the same system.
</note>

<p>
If kdeprefix is enabled then KDE is installed into /usr/kde/${SLOT},
which allows you to install KDE 4.1, 4.2, 4.3, etc. in /usr/kde/4.1,
/usr/kde/4.2, and /usr/kde/4.3 for example.
</p>

<warn>
If you want to move between kdeprefix and -kdeprefix (or vice-versa), it is
recommended that you unmerge all KDE packages and then emerge it with the
modified flag. If this is not done, KDE installations can have trouble finding
certain libraries/plugins.
</warn>

</body>
</section>
<section>
<title>Using sets</title>
<body>

<warn>
Portage 2.2_rcX is currently masked to allow 2.1.6 getting stable asap. So if
you want to use sets please unmask <c>~sys-apps/portage-2.2</c>.
</warn>

<p>
One of the new features provided by Portage 2.2 is sets.
</p>

<p>
Sets allow the KDE team to provide a complete replacement for the monolithic
packages, with the added bonus that users may choose to remove from the default
sets any packages they do not want. There is still some discussion going on
before we can put sets in the Portage tree. Thus, grab the sets from the
<c>kde-testing</c> overlay <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/kde.git;a=tree;f=sets;h=e44f270a37083da16da6f1b70c226169e44c4237;hb=master">sets
directory</uri> or grab them as a <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/kde.git;a=snapshot;h=5b2fc54fa5d1c8aeddaeb05f044bf28754bb18be;sf=tbz2">
tar.bz2 archive</uri> and put the ones you like in <e>/etc/portage/sets</e> --
you can browse the list of sets provided by the KDE team in the overlay
by using the first link.
</p>
<p>
Amongst others, there are sets for each KDE tarball - @kdeaccessibility,
@kdeadmin, @kdeartwork, @kdebase, @kdeedu, @kdegames, @kdegraphics,
@kdemultimedia, @kdenetwork, @kdepim, @kdesdk, @kdetoys, and @kdeutils. There is
also a set of sets (the equivalent to the old kde-meta package) @kde, and the
same for specific versions @kde-3.5 and @kde-4x, a set for KDE deps @kdedeps, a
set for optional packages @kdeoptional and a set for the split qt packages
@qt-split.
</p>

<p>
One can install the complete KDE by running <e>emerge -av @kde</e>. The specific
version equivalents are very useful to uninstall an old version, e.g. <e>emerge
-C @kde-3.5</e>, or to reinstall all packages from a specific version, e.g.
<e>emerge -av1 @kde-4x</e>. Advanced features, like removing any unwanted
packages from a set, will be supported in a future release of Portage -- you can
read more about it in <uri
link="http://planet.gentoo.org/developers/genone/2008/09/29/more_extensions_to_package_set_support">Marius
Mauch's (genone) blog</uri>. Part of this code has now been released in
portage-2.2_rc12 and so you can reinstall all installed packages of a set
with <c>emerge -av @&lt;set&gt;/@installled</c> or to have a
/etc/portage/sets/kdebase-unwanted set and then run <e>emerge -av
@kdebase-@kdebase-unwanted</e>.
</p>

<p>
We strongly recommend that you install the <c>kdebase</c> set in order to get a
full KDE 4 session. The example below would install the <c>kdebase</c> set and
the <c>kdegames</c> set.
</p>

<pre caption="Installing KDE">
# <i>emerge @kdebase @kdegames</i>
</pre>

<note>
If you want to check the list of sets known to Portage run the following:
<e>emerge --list-sets</e>
</note>

<note>
All >= KDE 4.1 ebuilds require <c>sys-apps/portage-2.1.6</c> or greater,
which has implemented everything in the new EAPI 2 specification used in
these ebuilds (<c>>=sys-apps/portage-2.2_rc12</c> is required to use sets).
</note>

</body>
</section>
<section>
<title>KDE meta packages</title>
<body>

<note>
This method is provided to ease the transition to the new sets. We had planned
not to have meta ebuilds for KDE 4.2, but as sets support isn't finalized yet,
that portage-2.2 is still hard masked and that we can't have sets in the tree,
we opted to offer metas for 4.2.
</note>

<pre caption="emerge meta packages">
# <i>emerge kde-meta:4.X</i>
</pre>

</body>
</section>
<section>
<title>Localization/Internationalization</title>
<body>

<p>
With new KDE there is new translators effort in Localization instead of
Internationalization. This cause some confusion but dont worry your translation
is shiped to you, just name has been changed so now for getting translations use
theese comands.
</p>
<pre caption="emerge translations for kde4 packages">
# <i>emerge kde-l10n</i>
</pre>
<pre caption="emerge translations for kde3 packages">
# <i>emerge kde-i18n</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>Configuration</title>
<section>
<body>

<p>
KDE stores its configuration files in the <e>~/.kde</e> directory by default. In
the Gentoo ebuilds this has been changed in KDE 4.1 and later to allow for better
integration of KDE 3.5 and 4.X when using the same user account. If you export
$KDEHOME this behaviour will be overridden. It is strongly recommended that you
do not do this. $KDEHOME will make KDE 3.5 and 4.X use the same configuration
directory which is usually not desired.
</p>

<p>
KDE 3.5 uses <e>~/.kde</e> and the default FHS (-kdeprefix) KDE 4.X uses
<e>~/.kde4</e>. If you install KDE 4.1 using the kdeprefix USE flag then the
configuration directory will default to <e>~/.kde4.1</e>, for KDE 4.2 it will
be <e>~/.kde4.2</e> and so on.
The advantage of this is that KDE 3.5 and 4.X can be run from the same user
account without clobbering settings. Moving backwards in version, i.e. 4.X to
3.5, is not supported.
</p>

<p>
Settings are not migrated by default. If you want to attempt to migrate your
settings you should copy your old configuration directory to the new location
before logging in. For example,
</p>

<pre caption="Copying the configuration directory">
$ <i>cp -r ~/.kde ~/.kde4</i>
</pre>

<p>
If this is successful, then your settings should all be migrated. If not, it is
possible to log out and remove the new configuration directory to start with a
clean configuration directory.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Migration from earlier releases</title>
<section>
<title>Getting blocks while trying to update to 4.2.0</title>
<body>

<p>
If you have KDE-4.0 or KDE-4.1 installed and get some blocks while trying to
update to 4.2.0, make sure you don't have kde versioned deps in the world* files.
</p>

<pre caption="Looking for kde deps">
# <i>grep kde /var/lib/portage/world*</i>
</pre>

<p>
If you have in your world file a versioned dep as konqueror-4.1.2 or kwrite:4.1,
you must replace it with konqueror and kwrite. If you're using sets and have
@kdebase-4.1 in your world_sets file, you need to replace it for @kdebase.
At the moment all plasmoids packages have a hard dep on libplasma that was removed
for 4.2.0 and so it's blocked from kdelibs-4.2.0. You'll need to remove them from
your system or at least remove them from your world file.
</p>

</body>
</section>
<section>
<title>Upgrading from the kde-testing overlay</title>
<body>

<p>
If you used the <c>kde-testing</c> overlay before the testing branch was merged
back into the master overlay, you're going to get collision-protection errors
when you try to update; the new ebuilds will show up as belonging to a new slot
[NS]. This is caused by a move from the <e>4</e> to <e>4.1</e> SLOT. You have 2
choices in this case:
</p>

</body>
</section>
<section>
<title>Unmerging all of KDE and installing it again</title>
<body>

<pre caption="Unmerging kde-4.1">
# <i>emerge -C @kde-4.1</i>
</pre>

</body>
</section>
<section>
<title>Changing the SLOT of the installed ebuilds in the VDB</title>
<body>

<p>
Changing the SLOT in the VDB may cause issues and is not recommended -- do it at
your own risk. You should instead do the above. If you really want to do that,
please grab <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/kde.git;a=blob_plain;f=Documentation/change_slot;hb=master">the
script</uri> from the <c>kde-testing</c> overlay. You should only run it if you
understand what it does and after you double checked it.
</p>

<note>
Be warned that this script is known to eat your kittens or steal all your
cookies.
</note>

<pre caption="Running change_slot to update the slot from 4 to 4.2">
# <i>change_slot kde 4 4.2</i>
# <comment>(After you confirm that it works as expected (you should see SLOTS as 4.2 and not 4))</comment>
# <i>change_slot kde 4 4.2 Y</i>
</pre>

</body>
</section>
<section>
<title>Removing KDE 3.5</title>
<body>

<pre caption="Unmerging KDE 3.5">
# <i>emerge -C @kde-3.5</i>
</pre>

<note>
Run depclean in order to remove all dependent packages.
</note>

</body>
</section>
<section>
<title>No Desktop icon</title>
<body>

<p>
KDE 4, as it moves towards a semantic desktop, did not bundle an icon for the
desktop.
</p>

<p>
The desktop icon can be replaced with the standard folder icon using the
following command.
</p>

<pre caption="sed command">
$ <i>sed -i -e "s:Icon=desktop:Icon=folder:g" ~/Desktop/.directory</i>
</pre>

</body>
</section>
<section>
<title>Missing icons in KDE4</title>
<body>
		
<p>
When you occur with this bug try first this command before opening bug.
</p>
<pre caption="emerge command">
# <i>emerge -1 kdebase-data &amp;&amp; emerge -1 hicolor-icon-theme kdebase-data</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>Hints</title>
<section>
<title>Plasmoids</title>
<body>

<p>
Plasmoids are new plasma tools which can enhance your desktop experience
to brand new level. We created kde-plasma/ section where we place every plasmoid
on which we get our nasty hands and find it workable enought. If you find out
that your favorite one is missing create bug and somebody might create it for
you.
If you are plasma person "want them all can't live without them" we have set
@plasmoids which contains all plasmoids currently availible.
</p>

</body>
</section>
<section>
<title>x11-themes/plasma-themes</title>
<body>

<p>
This ebuild contains various plasma themes. The procedure for requesting
additional themes is the same as that for plasmoids.
</p>

</body>
</section>
<section>
<title>x11-themes/gtk-engines-qt</title>
<body>

<p>
This ebuild should be used if you want your GTK applications to use a theme
similar to the Qt/KDE applications. Configuration can be found in
systemsetings->Appearance->GTK Styles and Fonts.
</p>

</body>
</section>

<section>
<title>x11-themes/gtk-engines-qtcurve</title>
<body>

<p>
This is another approach to making GTK/Qt 3/Qt 4 applications looks the same.
You must also install <c>x11-themes/qtcurve-qt4</c> for this to work with Qt
4/KDE 4 applications.
</p>

</body>
</section>

<section>
<title>Unable to find libopensync-0.30</title>
<body>

<p>
If you get an error building kitchensync or some other package about configure
being unable to find libopensync-0.30, be sure to either upgrade to the latest
testing version or to downgrade and mask the 9999 version. You can read more
about this in <uri link="https://bugs.gentoo.org/show_bug.cgi?id=240370">bug
240370</uri>.
</p>

</body>
</section>

<section>
<title>Flash in konqueror</title>
<body>

<p>
If you are interested in getting flash working in konqueror point your mind
to <uri link="kde-flash.xml" >guide</uri> which describes necessary steps for
getting it done.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Uninstalling KDE 4.X</title>
<section>
<title>Removing all KDE packages</title>
<body>

<p>
In order to remove all KDE 4 packages and dependant packages:
</p>

<pre caption="Unmerging commands">
# <i>emerge -C @kde-4x</i>
# <i>cd /path/to/our/overlay/</i>
# <i>emerge -C $(find ./ -name \*.ebuild |sed -e "s:.ebuild::" -e "s:./::" |awk -F'/' '{print "="$1"/"$3}')</i>
</pre>

</body>
</section>
<section>
<title>Rebuilding the application database</title>
<body>

<p>
To rebuild the KDE 3 application database run:
</p>

<pre caption="kbuildsycoca command">
# kbuildsycoca --noincremental
</pre>

</body>
</section>
</chapter>
</guide>
