<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/desktop/kde/kde4-guide.xml,v 1.6 2008/10/07 19:42:36 keytoaster Exp $ -->

<guide link="/proj/en/desktop/kde/kde4-guide.xml" lang="en">
<title>Gentoo KDE 4.1 Guide</title>

<author title="Author">
  <mail link="tomas.chvatal@gmail.com">Tomáš Chvátal</mail>
</author>
<author title="Author">
  <mail link="jmbsvicetto"/>
</author>
<author title="Author">
  <mail link="cryos" />
</author>
<author title="Editor">
  <mail link="keytoaster" />
</author>

<abstract>
This guide demonstrates how to setup KDE 4.1 using the ebuilds in the tree. Some
tools from the KDE team's git overlay (kde-testing) will be used.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.2</version>
<date>2008-09-28</date>

<chapter>
<title>Cleaning up</title>
<section>
<title>Removing old KDE versions</title>
<body>

<p>
In order to minimize issues, it is best to begin with a clean enviroment. You
will need to uninstall any beta or 4.0.X releases (this is needed if you are
moving from any overlay and in particular if you plan to use the -kdeprefix USE
flag - FHS install). Two possible ways of removing old KDE 4 installations are:
</p>

<pre caption="Unmerging commands">
# <i>emerge -C @kde-4.1 @kdebase-4.1</i> <comment>(only if you are coming from the kdesvn-portage or kde-testing overlay)</comment>
# <i>emerge -C $(qfile -C -q -e /usr/kde/%PREFIX%)</i> <comment>(replace %PREFIX% with your KDE version, eg. 4)</comment>
</pre>

<pre caption="Unmerging commands (only applicable if you are moving from an overlay)">
# <i>cd /path/to/old/overlay/</i>
# <i>emerge -C $(find ./ -name \*.ebuild |sed -e "s:.ebuild::" -e "s:./::" |awk -F'/' '{print "="$1"/"$3}')</i>
</pre>

<p>
As a final step you should remove the old overlay so that there are no conflicts
with the KDE ebuilds. You should remove the old unmask and/or keyword data, too.
</p>

<note>
Don't forget to run depclean in order to uninstall any dependant packages.
</note>

</body>
</section>
</chapter>
<chapter>
<title>Unmasking/Keywording</title>
<section>
<title>Using the package.keywords/kde file from the kde-testing overlay</title>
<body>

<p>
The KDE 4.1 ebuilds won't be masked for long (they're currently masked while
solving some issues with the co-existence of KDE 3.5 and  KDE 4.x). Until the
ebuilds are unmasked, get the package.unmask file from under <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/kde.git;a=blob_plain;f=Documentation/package.unmask/kde;hb=master">Documentation/package.unmask</uri>.
If you are running the stable tree you will need to keyword the ebuilds,
otherwise skip this step. For those running the stable tree in Gentoo:
</p>

<p>
Get the appropriate package.keywords file from the <c>kde-testing</c>
overlay that can be used in your package.keywords file/directory. You
can find this file under <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/kde.git;a=blob_plain;f=Documentation/package.keywords/kde;hb=master">Documentation/package.keywords</uri>.
Perform one of the following steps, depending on whether your
/etc/portage/package.keywords is a directory or a file:
</p>

<pre caption="Adding the file to the package.keywords directory">
# <i>cd /etc/portage/package.keywords</i>
# <i>cp /path/to/keywords/file .</i>
</pre>

<pre caption="Adding the file to the package.keywords file">
# <i>cd /etc/portage/</i>
# <i>cat /path/to/keywords/file >> package.keywords</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>Installation</title>
<section>
<title>The new kdeprefix USE flag</title>
<body>

<p>
The new kdeprefix USE flag allows users to choose between an FHS compliant
install (-kdeprefix) or a slotted install in the KDE prefix (+kdeprefix).
</p>

<p>
If kdeprefix is disabled (default) KDE is installed into the FHS compliant
location, i.e. /usr. That means that all of the files are put under /usr. This
is the desired behaviour for most users. The drawback of the FHS compliant
install is that it will not be possible to have more than one minor version of
KDE side by side (previous behaviour), e.g. KDE 4.1 and 4.2.
</p>

<note>
This restriction does not apply to KDE 3.5 (which uses different eclasses) or
live versions (as they will continue to be installed under
/usr/kde/${live-slot}. You can have a non-kdeprefix version of KDE
4.1, KDE 3.5 and a live version of KDE installed on the same system.
</note>

<p>
If kdeprefix is enabled then KDE is installed into /usr/kde/${SLOT},
which allows you to install KDE 4.1, 4.2, 4.3, etc. in /usr/kde/4.1,
/usr/kde/4.2, and /usr/kde/4.3 for example.
</p>

<warn>
If you want to move between kdeprefix and -kdeprefix (or vice-versa), it is
recommended that you unmerge all KDE packages and then emerge it with the
modified flag. If this is not done, KDE installations can have trouble finding
certain libraries/plugins.
</warn>

</body>
</section>
<section>
<title>Using sets</title>
<body>

<p>
One of the new features provided by Portage 2.2 is sets.
</p>

<p>
Sets allow the KDE team to provide a complete replacement for the monolithic
packages, with the added bonus that users may choose to remove from the default
sets any packages they do not want. There is still some discussion going on
before we can put sets in the Portage tree. Thus, grab the sets from the
<c>kde-testing</c> overlay <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/kde.git;a=tree;f=sets;h=e44f270a37083da16da6f1b70c226169e44c4237;hb=master">sets
directory</uri> and put the ones you like in <e>/etc/portage/sets</e> -- you
can browse the list of sets provided by the KDE team in the overlay.
</p>

<p>
Amongst others, there are sets for each KDE tarball - @kdeaccessibility,
@kdeadmin, @kdeartwork, @kdebase, @kdeedu, @kdegames, @kdegraphics,
@kdemultimedia, @kdenetwork, @kdepim, @kdesdk, @kdetoys, and @kdeutils. There is
also a set of sets (the equivalent to the old kde-meta package) @kde, and the
same for specific versions @kde-3.5 and @kde-4x, a set for KDE deps @kdedeps, a
set for optional packages @kdeoptional and a set for the split qt packages
@qt-split.
</p>

<p>
One can install the complete KDE by running <e>emerge -av @kde</e>. The specific
version equivalents are very useful to uninstall an old version, e.g. <e>emerge
-C @kde-3.5</e>, or to reinstall all packages from a specific version, e.g.
<e>emerge -av1 @kde-4x</e>. Advanced features, like removing any unwanted
packages from a set, will be supported in a future release of Portage -- you can
read more about it in <uri
link="http://planet.gentoo.org/developers/genone/2008/09/29/more_extensions_to_package_set_support">Marius
Mauch's (genone) blog</uri>. This code has already been committed to Portage's
SVN and will allow to reinstall all installed packages of a set with <c>emerge
-av @&lt;set&gt;/@installled</c> or to have a
/etc/portage/sets/kdebase-unwanted set and then run <e>emerge -av
@kdebase-@kdebase-unwanted</e>.
</p>

<p>
We strongly recommend that you install the <c>kdebase</c> set in order to get a
full KDE 4 session. The example below would install the <c>kdebase</c> set and
the <c>kdegames</c> set.
</p>

<pre caption="Installing KDE">
# <i>emerge @kdebase @kdegames</i>
</pre>

<note>
If you want to check the list of sets known to Portage run the following:
<e>emerge --list-sets</e>
</note>

<note>
All KDE 4.1 ebuilds require <c>sys-apps/portage-2.2_rc11</c> or greater, which
has implemented everything in the new EAPI 2 specification used in these
ebuilds.
</note>

</body>
</section>
<section>
<title>KDE meta packages</title>
<body>

<note>
This method is provided to ease the transition to the new sets. There will be no
meta ebuilds for KDE 4.2.
</note>

<pre caption="emerge meta packages">
# <i>emerge kde-meta:4.1</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>Configuration</title>
<section>
<body>

<p>
KDE stores its configuration files in the <e>~/.kde</e> directory by default. In
the Gentoo ebuilds this has been changed in KDE 4.1 to allow for better
integration of KDE 3.5 and 4.1 when using the same user account. If you export
$KDEHOME this behaviour will be overridden. It is strongly recommended that you
do not do this. $KDEHOME will make KDE 3.5 and 4.1 use the same configuration
directory which is usually not desired.
</p>

<p>
KDE 3.5 uses <e>~/.kde</e> and the default FHS (-kdeprefix) KDE 4.1 uses
<e>~/.kde4</e>. If you install KDE 4.1 using the kdeprefix USE flag then the
configuration directory will default to <e>~/.kde4.1</e>, <e>~/.kde4.2</e> etc.
The advantage of this is that KDE 3.5 and 4.1 can be run from the same user
account without clobbering settings. Moving backwards in version, i.e. 4.1 to
3.5, is not supported.
</p>

<p>
Settings are not migrated by default. If you want to attempt to migrate your
settings you should copy your old configuration directory to the new location
before logging in. For example,
</p>

<pre caption="Copying the configuration directory">
$ <i>cp -r ~/.kde ~/.kde4</i>
</pre>

<p>
If this is successful, then your settings should all be migrated. If not, it is
possible to log out and remove the new configuration directory to start with a
clean configuration directory.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Migration from earlier releases</title>
<section>
<title>Upgrading from the kde-testing overlay</title>
<body>

<p>
If you used the <c>kde-testing</c> overlay before the testing branch was merged
back into the master overlay, you're going to get collision-protection errors
when you try to update; the new ebuilds will show up as belonging to a new slot
[NS]. This is caused by a move from the <e>4</e> to <e>4.1</e> SLOT. You have 2
choices in this case:
</p>

</body>
</section>
<section>
<title>Unmerging all of KDE and installing it again</title>
<body>

<pre caption="Unmerging kde-4.1">
# <i>emerge -C @kde-4.1</i>
</pre>

</body>
</section>
<section>
<title>Changing the SLOT of the installed ebuilds in the VDB</title>
<body>

<p>
Changing the SLOT in the VDB may cause issues and is not recommended -- do it at
your own risk. You should instead do the above. If you really want to do that,
please grab <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/kde.git;a=blob_plain;f=Documentation/change_slot;hb=master">the
script</uri> from the <c>kde-testing</c> overlay. You should only run it if you
understand what it does and after you double checked it.
</p>

<note>
Be warned that this script is known to eat your kittens or steal all your
cookies.
</note>

<pre caption="Running change_slot to update the slot from 4 to 4.1">
# <i>change_slot kde 4 4.1</i>
# <comment>(After you confirm that it works as expected (you should see SLOTS as 4.1 and not 4))</comment>
# <i>change_slot kde 4 4.1 Y</i>
</pre>

</body>
</section>
<section>
<title>Removing KDE 3.5</title>
<body>

<pre caption="Unmerging KDE 3.5">
# <i>emerge -C @kde-3.5</i>
</pre>

<note>
Run depclean in order to remove all dependent packages.
</note>

</body>
</section>
<section>
<title>No Desktop icon</title>
<body>

<p>
KDE 4, as it moves towards a semantic desktop, did not bundle an icon for the
desktop.
</p>

<p>
The desktop icon can be replaced with the standard folder icon using the
following command.
</p>

<pre caption="sed command">
$ <i>sed -i -e "s:Icon=desktop:Icon=folder:g" ~/Desktop/.directory</i>
</pre>

</body>
</section>
</chapter>
<chapter>
<title>Hints</title>
<section>
<title>kde-misc/plasmoids</title>
<body>

<p>
This ebuild contains various plasmoids that were requested by users (if you find
others that would be useful to our user community please contact us, SVN version
will not be added and it must work with KDE 4.1).
</p>

</body>
</section>
<section>
<title>x11-themes/plasma-themes</title>
<body>

<p>
This ebuild contains various plasma themes. The procedure for requesting
additional themes is the same as that for plasmoids.
</p>

</body>
</section>
<section>
<title>x11-themes/gtk-engines-qt</title>
<body>

<p>
This ebuild should be used if you want your GTK applications to use a theme
similar to the Qt/KDE applications. Configuration can be found in
systemsetings->Appearance->GTK Styles and Fonts.
</p>

</body>
</section>
<section>
<title>x11-themes/gtk-engines-qtcurve</title>
<body>

<p>
This is another approach to making GTK/Qt 3/Qt 4 applications looks the same.
You must also install <c>x11-themes/qtcurve-qt4</c> for this to work with Qt
4/KDE 4 applications.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Uninstalling KDE 4.x</title>
<section>
<title>Removing all KDE packages</title>
<body>

<p>
In order to remove all KDE 4 packages and dependant packages:
</p>

<pre caption="Unmerging commands">
# <i>emerge -C @kde-4x</i>
# <i>cd /path/to/our/overlay/</i>
# <i>emerge -C $(find ./ -name \*.ebuild |sed -e "s:.ebuild::" -e "s:./::" |awk -F'/' '{print "="$1"/"$3}')</i>
</pre>

</body>
</section>
<section>
<title>Rebuilding the application database</title>
<body>

<p>
To rebuild the KDE 3 application database run:
</p>

<pre caption="kbuildsycoca command">
# kbuildsycoca --noincremental
</pre>

</body>
</section>
</chapter>
</guide>
