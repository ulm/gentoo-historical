<?xml version='1.0' encoding="UTF-8"?>


<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/proj/en/desktop/x/x11/maintaining.xml">
<title>Maintaining X</title>
<author title="Author">
   <mail link="spyderous@gentoo.org">Donnie Berkholz</mail>
</author>

<abstract>
This document outlines what needs to be done to successfully maintain X
implementations in Gentoo.
</abstract>

<version>1.1</version>
<date>05 October 2004</date>

<chapter>
<title>Introduction</title>
<section>
<body>
<p>
X is one of the more complex and critical maintainer's jobs in Gentoo. There's
a lot to figure out before one can do it properly. This guide attempts to lead
a new X maintainer down one path to keeping sanity.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Preparation</title>
<section>
<title>Mailing Lists</title>
<body>

<p>
The first thing to do is to get in contact with upstream. One of the pathways
is mailing lists. You'll want to subscribe to all of these.
</p>

<table>
<tr>
	<th>List</th>
	<th>Description</th>
	<th>Where/How to Subscribe</th>
</tr>
<tr>
	<ti>dri-devel@lists.sourceforge.net</ti>
	<ti>DRI (Direct Rendering Infrastructure) -- i.e., 3D acceleration</ti>
	<ti><uri>http://lists.sourceforge.net/lists/listinfo/dri-devel/</uri></ti>
</tr>
<tr>
	<ti>mesa3d-dev@lists.sourceforge.net</ti>
	<ti>X uses this graphics library for OpenGL</ti>
	<ti><uri>http://lists.sourceforge.net/lists/listinfo/mesa3d-dev/</uri></ti>
</tr>
<tr>
	<ti>cvs-commit@xfree86.org</ti>
	<ti>Got to watch what XFree86 is doing</ti>
	<ti><uri>http://www.xfree86.org/mailman/listinfo/cvs-commit/</uri></ti>
</tr>
<tr>
	<ti>xorg_arch@x.org</ti>
	<ti>X.Org Architecture Task Force</ti>
	<ti><uri>https://www.opengroup.org/sophocles/create_user.tpl?name=xorg_arch</uri></ti>
</tr>
<tr>
	<ti>xorg@freedesktop.org</ti>
	<ti>Primary X.Org list -- users and devs</ti>
	<ti><uri>http://freedesktop.org/mailman/listinfo/xorg/</uri></ti>
</tr>
<tr>
	<ti>xorg-commit@freedesktop.org</ti>
	<ti>CRITICAL to be on this list</ti>
	<ti><uri>http://freedesktop.org/mailman/listinfo/xorg-commit/</uri></ti>
</tr>
<tr>
	<ti>release-wranglers@freedesktop.org</ti>
	<ti>Work for X.Org releases</ti>
	<ti><uri>http://freedesktop.org/mailman/listinfo/release-wranglers/</uri></ti>
</tr>
<tr>
	<ti>x-packagers@freedesktop.org</ti>
	<ti>People like us</ti>
	<ti><uri>http://freedesktop.org/mailman/listinfo/x-packagers/</uri></ti>
</tr>
<tr>
	<ti>platform@freedesktop.org</ti>
	<ti>(Optional) Work for freedesktop.org platform releases</ti>
	<ti><uri>http://freedesktop.org/mailman/listinfo/platform/</uri></ti>
</tr>
</table>

</body>
</section>

<section>
<title>IRC Channels</title>
<body>

<p>
A great medium for generating some camaraderie with upstream and other
packagers is IRC. Making connections is a good way to get things accomplished.
Unless specified otherwise, all these are on irc.freenode.net.
</p>

<table>
<tr>
	<th>Channel</th>
	<th>Description</th>
</tr>
<tr>
	<ti>#xwin</ti>
	<ti>Remnant of the old xwin.org -- community of X programmers</ti>
</tr>
<tr>
	<ti>#freedesktop</ti>
	<ti>Many fd.o programmers hang out here.</ti>
</tr>
<tr>
	<ti>#xorg</ti>
	<ti>More user-oriented, although some devs are here too</ti>
</tr>
<tr>
	<ti>#dri</ti>
	<ti>(Optional) DRI user channel</ti>
</tr>
<tr>
	<ti>#dri-devel</ti>
	<ti>(Optional) DRI development channel -- if you like 3D, be here</ti>
</tr>
<tr>
	<ti>#ati</ti>
	<ti>(Optional) Mostly talk about the binary drivers, but some DRI mixed in</ti>
</tr>
<tr>
	<ti>#nvidia</ti>
	<ti>(Optional) Talk about the binary drivers</ti>
</tr>
</table>

</body>
</section>

<section>
<title>Who's Who in X Land?</title>
<body>

<p>
It's a good idea to know who's involved in X. When known and applicable, IRC
nicks are after their names.
</p>

<table>
<tr>
	<th>Who?</th>
	<th>What?</th>
</tr>
<tr>
	<ti>Stuart Anderson (anderson)</ti>
	<ti>X.Org guy. He's on IRC, but I've never seen him say anything.</ti>
</tr>
<tr>
	<ti>Eric Anholt (anholt)</ti>
	<ti>Jumped into X in the past couple of years. Mostly does DRI, radeon
		stuff. FreeBSD X maintainer.</ti>
</tr>
<tr>
	<ti>Kendall Bennett</ti>
	<ti>SciTech CEO. Upstream for the VESA code, and have their own drivers.
	</ti>
</tr>
<tr>
	<ti>Billy Biggs (vektor)</ti>
	<ti>tvtime developer, nice guy. Gets along well with Gentoo.</ti>
</tr>
<tr>
	<ti>Alan Coopersmith</ti>
	<ti>X guy at Sun. Wrote the IPv6 code.</ti>
</tr>
<tr>
	<ti>Michel Daenzer (MrCooper)</ti>
	<ti>Debian X guy and radeon PPC DRI dev, now works for ATI.</ti>
</tr>
<tr>
	<ti>David Dawes</ti>
	<ti>Lead of XFree86. He's called himself various titles over time, but he's
		always been the dictator.</ti>
</tr>
<tr>
	<ti>Thomas Dickey</ti>
	<ti>Maintains xterm, does some other misc. X and ncurses stuff.</ti>
</tr>
<tr>
	<ti>Egbert Eich</ti>
	<ti>SuSE X maintainer, X.Org board member. Was release manager for 6.7.0.
	</ti>
</tr>
<tr>
	<ti>Jim Gettys (jg)</ti>
	<ti>keithp's partner in crime, also at HP</ti>
</tr>
<tr>
	<ti>Mike Harris (mharris)</ti>
	<ti>Red Hat X maintainer. Also involved a little in DRI. A little bit
		quick-tempered, so watch your step.</ti>
</tr>
<tr>
	<ti>Matthieu Herrb</ti>
	<ti>OpenBSD X maintainer. Many commits are security-related, so watch them.
	</ti>
</tr>
<tr>
	<ti>Adam Jackson (ajax)</ti>
	<ti>Somewhat of a newbie in the X community, he's been contributing mostly
		to dlloader and DRI. He uses Gentoo and will help out. He's on the x11
		alias.</ti>
</tr>
<tr>
	<ti>Nolan Leake (nolan)</ti>
	<ti>Works for VMWare, maintains vmware driver</ti>
</tr>
<tr>
	<ti>Roland Mainz (nrubsig)</ti>
	<ti>Develops XPrint</ti>
</tr>
<tr>
	<ti>Kevin Martin</ti>
	<ti>Works for Red Hat. Release manager for 6.8.0</ti>
</tr>
<tr>
	<ti>Keith Packard (keithp)</ti>
	<ti>A leader of the "new wave" of X developers, works at HP</ti>
</tr>
<tr>
	<ti>Brian Paul</ti>
	<ti>Mesa maintainer</ti>
</tr>
<tr>
	<ti>Brandon Robinson (Overfiend)</ti>
	<ti>Debian X lead. Also quick-tempered.</ti>
</tr>
<tr>
	<ti>Ian Romanick (idr)</ti>
	<ti>Works for IBM. DRI guru.</ti>
</tr>
<tr>
	<ti>Daniel Stone (daniels)</ti>
	<ti>Been working on debrix: modularized, autotooled X. Maintains it in
		arch, so it's a pain to see what's going on. Debian developer, used to
		be on its X team before disputes with the leader.</ti>
</tr>
<tr>
	<ti>Mark Vojkovich</ti>
	<ti>Works for nVidia. Maintains nv driver in XFree86.</ti>
</tr>
<tr>
	<ti>Keith Whitwell</ti>
	<ti>A lead DRI developer, along with idr.</ti>
</tr>
</table>
</body>
</section>
</chapter>

<chapter>
<title>Handling Gentoo Bugs</title>
<section>
<title>Queries</title>
<body>
<p>
Before you can start dealing with bugs, you need to have good ways to find which
ones you want to deal with. I have two X-related queries saved in my Bugzilla
settings: <c>X</c> and <c>X enhancements</c>. The <c>X</c> query is: All bugs
with Status UNCONFIRMED NEW ASSIGNED REOPENED where severity is everything
except enhancement and bug owner is x11@gentoo.org. The <c>X enhancements</c>
query is the same but with the severity set only to enhancement.
</p>

<p>
You may wish to divide the bugs up better, but first realize this: Bug
severities are not well-triaged at this point in time (5 Oct. 2004), so
restricting the severity is a very artificial way to do things. After you
enter this search into the advanced page, you'll be able to save it from the
bottom of the results page.
</p>
</body>
</section>
<section>
<title>Triage</title>
<body>
<p>
As soon as you have time after reading your Bugzilla emails, you should go to
the bug URL and glance briefly over the bug. In this time, you should be able to
figure out whether: (a) the bug is assigned to the right people, (b) any other
people should be CC'd, (c) the bug is not obviously invalid and (d) the system
isn't overoptimized. From (d), it follows that you'll need `emerge info` to
diagnose the problem in nearly all cases, so you get CFLAGS and the toolchain.
</p>

<p>If the bug appears valid and should be assigned to us, then classify the
severity. The basis for this is:</p>

<table>
<tr>
	<th>Severity</th>
	<th>Description</th>
</tr>
<tr>
	<ti>blocker</ti>
	<ti>It breaks entire Gentoo systems, causes data loss, prevents booting, etc.
	</ti>
</tr>
<tr>
	<ti>critical</ti>
	<ti>Compilation failures that don't appear to be corner cases</ti>
</tr>
<tr>
	<ti>major</ti>
	<ti>Significant runtime issues that render X useless</ti>
</tr>
<tr>
	<ti>normal</ti>
	<ti>Most bugs will fall under this.</ti>
</tr>
<tr>
	<ti>minor</ti>
	<ti>Bugs that don't significantly affect use and have a workaround</ti>
</tr>
<tr>
	<ti>trivial</ti>
	<ti>Bugs that result in nearly no end-user or developer change. For
		example, prettifying some code in the ebuild, small docs typos, etc.
	</ti>
</tr>
<tr>
	<ti>enhancement</ti>
	<ti>Feature requests, new packages, etc. Version bumps do <e>not</e> fall
		under this. They should probably be "normal."</ti>
</tr>
</table>
</body>
</section>
</chapter>

<chapter>
<title>Patches</title>
<section>
<title>Where to Find Them</title>
<body>

<p>
Patches you'll add to Gentoo will come from basically two places:
<uri link="http://bugs.gentoo.org/">Gentoo's Bugzilla</uri> and
<uri link="http://bugs.freedesktop.org/">freedesktop.org's Bugzilla</uri>. They
may link to other places from there, but don't feel any pressure to go out
patch-hunting beyond those Bugzillas and the X mailing lists.
</p>

</body>
</section>

<section>
<title>Keeping Patches Organized</title>
<body>

<p>
I maintain all the <uri link="http://dev.gentoo.org/~spyderous/xorg-x11/patchsets/6.8.0/">
patchsets</uri> in my dev.gentoo.org <uri link="http://dev.gentoo.org/~spyderous/">
web space</uri>, at a path of <c>${PN}/patchsets/${PV}/patch-${PATCH_VER}/</c>
with corresponding tarballs at <c>${P}-patches-${PATCH_VER}.tar.bz2</c>. This
ensures that there will always be a patchset available, even instantly after I
commit the ebuild or if the mirrors lose it. The files tarballs and unpacked
source are available at the same location, but replace "patches" with "files."
</p>

<p>
Within each patchset are the patches, named ${NUMBER}_${ARCH}_${DESCRIPTION}.patch.
NUMBER is a four-digit number, ARCH is a valid architecture or "all" and
DESCRIPTION is a hyphenated description of the patch, usually in all lowercase.
When bulk patching, epatch() applies patches according to their number and arch.
We generally want as many patches as possible to <e>always</e> be applied, so
that there are less possible ways of patching the source and therefore less ways
to break. This also encourages patches that are suitable to be applied upstream;
that is a primary goal, to reduce our maintenance work and to give back to the
community.
</p>

<p>
There is also a file called PatchChangeLog, formatted like this:
</p>

<pre caption="PatchChangeLog format">
* 22 September 2004 Donnie Berkholz &lt;spyderous@gentoo.org&gt; Patchset 0.2.1

-Add 0430_all_6.8.0-sparc-add-mach64-to-devel-dri-drivers.patch (#63994). This
	plus other ebuild modifications from that bug should enable sparc guys to
	use 6.8.0-r1.
<codenote>
So, a hyphen, then a description, indented by a tab on later lines.
</codenote>
-Update patches:
	- 9360_all_6.7.99.2-ppc64-support-updates-v2.patch
	- 9355_all_6.7.99.2-xorgconfig-fontdir-fixes-v2.patch
	- 9010_all_6.7.99.1-logitech-ps2-plusplus-v2.patch
	- 5851_all_6.7.99.1-tdfx-dri-fix-low-texmem-hang.patch
<codenote>
When something applies to multiple patches, use this format.
</codenote>
-43 patches broken
<codenote>
For generic notes not related to a certain patch, use this.
</codenote>
</pre>

<impo>
Remember to only mention patch-related changes in the PatchChangeLog.
</impo>

<p>
When creating the package ChangeLog entry, simply copy and paste lines from the
PatchChangeLog. You may need to do this line-by-line to keep newlines out.
For any new PATCH_VER or FILES_VER, note that at the beginning of the ChangeLog
entry: "PATCH_VER 0.5. Add 1234_all_fix-foo.patch to stop broken video
(#123456). Define HardenedGccSpecs YES for USE=hardened."
</p>

</body>
</section>
</chapter>

<chapter>
<title>Ignore everything below this</title>
<section>
<title>Fooey</title>
<body>

<p>
This section provides the general guidelines on being a chairperson.

Prior to the meeting:
</p>
<ul>
<li>Receive agenda items of the forthcoming meeting from all attendees.</li>
<li>Email the core mailing list with the agenda of the forthcoming meeting no later than 24 hours in advance of the meeting.</li>
</ul>

<p>During the meeting:</p>
<ul>
<li>Keep the meeting flowing. This means maintaining focus on the agenda and
the objectives of the meeting.</li>
<li>Keep the meeting within its allotted time frame (usually one hour)</li>
<li>Allow the presentation of an agenda item by the person responsible for
that item, before any questions and discussion is undertaken.</li>
<li>Get responses from all members before moving onto the next agenda
item.</li>
<li>Briefly summarize unresolved business. This may include the result of
the discussion, specific actions that are to be taken, who's responsible for
working on what etc.</li>
<li>Allow all attendees to be able to discuss their concerns after the
agenda items have been discussed.</li>
</ul>

<p>After the meeting:</p>
<ul>
<li>Email the meeting log to the gentoo-core mailing list within a specified
period.</li>
</ul>
<p>
The Chairperson is expected tro maintain neutrality throughout the meeting.
If the chairperson feels, upon receipt of the agenda items (to be discussed
below), that they are strongly attached to the outcome of the discussion,
we leave it on their honour to remove themselves from the Chair and let
an alternate person chair the meeting.
</p>
</body>
</section>

<section>
<title>Managers' Roles</title>
<body>
<p>
Managers also have a role to play.  Their expectations are outlined below.

Prior to the meeting:
</p>
<ul>
<li>Pesent agenda items to the chairperson no later than 3 days in advance.
Special consideration to emergency items will be given, and at the
chairperson's discretion, last minute agenda items may be added.</li>
<li>Read agenda items of fellow attendees and prepare comments on them.
This may involve reading a <uri
link="http://glep.gentoo.org/">GLEP</uri>.</li>
<li>Clear calendar around meeting time, and arrive on time (Seemant!)</li>
</ul>

<p>During the meeting:</p>
<ul>
<li>Freely share their ideas on the topics at hand and be open to others'
perspectives.</li>
<li>Act in a friendly and professional manner. The meeting may give the
chairperson a lasting impression on how Gentoo is run, and will definitely
leave an impression on your fellow developers.</li>
<li>Understand that the chairperson is the governing authority for the
meeting.  When the chair has determined that the next agenda item should be
discussed, the managers should concede.  Any open items needing further
discussion may be rescheduled for a subsequent meeting or discussed more
widely on the gentoo-core mailing list.</li>
</ul>
</body>
</section>

<section>
<title>Attendees' Roles</title>
<body>
<p>
During the discussion, the channel will be moderated.  However, the final
agenda item for every single meeting is a free-flow question and answer
session.  This is the time for developers to query and discuss issues
brought up during the meeting.  Please be forthcoming about your concerns,
because as a developer, your voice is important!
</p>
<p>
If you have an urgent question or other input that hinges on the flow of the
current agenda item, please send an IRC /msg to the Chairperson, so that
they may forward your question onto the floor.
</p>
<p>
During the question and answer session, please be mindful that many people
will want to ask questions. That being the case, please avoid repetition of
questions.  Again, the rules of civility do govern all.
</p>
</body>
</section>

<section>
<title>Universal Expectations</title>
<body>
<p>The following rules apply to <b>everybody</b>.</p>

<ul>
<li>Do <b>NOT</b> criticize people.</li>
<li>Other's ideas should be respected. This doesn't mean that you have to
agree, but rather that you have to listen.</li>
<li>Keep an open mind.</li>
<li>Ask questions when you do not understand something and be tolerant of
those who ask questions.</li>
<li>Help the chairperson by keeping the discussion focused on the issues at
hand.  Digression should be minimised.</li>
<li>Do <b>NOT</b> leave issues hanging. Assign responsibility for each
action to be taken.</li>
</ul>
</body>
</section>
</chapter>
</guide>
