<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/desktop/x/x11/ati-migration-guide.xml,v 1.1 2009/07/13 09:17:44 scarabeus Exp $ -->

<guide link="/proj/en/desktop/x/x11/ati-migration-guide.xml" lang="en">
<title>Gentoo ATI Migration guide</title>

<author title="Author">
  <mail link="scarabeus" />
</author>

<abstract>
This guide demonstrates how to migrate from binary ati-drivers to open-source
driver (xf86-video-ati).
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.2</version>
<date>2009-07-09</date>

<chapter>
<title>Replacing binary driver with the open-source one</title>
<section>
<title>Removing old binary driver.</title>
<body>

<pre caption="Removing binary driver">
# <i>emerge -C x11-drivers/ati-drivers</i> <comment>(drop out the old binary)</comment>
</pre>

<warn>
Please note that ati-drivers are bad at uninstalling themselves and might leave
fglrx.ko module resident in your
<path>/lib/modules/*kernel*/video/</path>. If this file resides on your system
after uninstall, please remove it.
</warn>

</body>
</section>
<section>
<title>Getting the 2D acceleration to work</title>
<body>

<p>
So for 2D acceleration we have to add into <path>/etc/make.conf</path> line specifying what graphic card we use.
</p>
<pre caption="Adding radeon driver to the make.conf">
# <i>echo 'VIDEO_CARDS="radeon"' >> /etc/make.conf</i>
</pre>

<p>
Now when we have nice and set-up enviroment, reemerge of the packages that use the VIDEO_CARDS option has to follow.
</p>

<pre caption="Reemerging all required packages">
# <i>emerge -NDu world -av</i> <comment>(this also update your system, if you dont want to do so drop the -u option)</comment>
</pre>

<p>
Next step is a bit tricky, because we have to correctly configure the <path>/etc/X11/xorg.conf</path>.
</p>
<note>
If you are using x11-base/xorg-server newer than 1.6 you can just simply remove the xorg.conf as whole and skip this step with nearly no issues.
</note>

<p>
First open the file <path>/etc/X11/xorg.conf</path> in your favorite editor. Then search for the section where <c>Driver      "fglrx"</c> is written out.
Remove everything in this section expect the <c>Driver</c> and <c>Identifier</c> and then replace the <c>"fglrx"</c> with <c>"radeon"</c>.
More options for this driver can be found by simple <c>man radeon</c>.
</p>

<pre caption="Example snippet of advanced configuration">
<i>Section "Device"
	VendorName	"ATI"
	Identifier	"X700OS"
	Driver		"radeon"
	Option		"BusType"		"PCIE"
	Option		"EXAVSync"		"off"
	Option		"MonitorLayout"		"NONE, CRT"
	Option		"Monitor-LVDS"		"LCD"
	Option		"EnablePageFlip"	"on"
	Option		"AccelMethod"		"EXA"
	Option		"DMAForXv"		"on"
	Option		"ClockGating"		"on"
	Option		"DynamicPM"		"on"
	Option		"R4xxATOM"		"on"
	Option		"FBTexPercent"		"70"
EndSection</i>
</pre>

</body>
</section>
<section>
<title>Getting the 3D acceleration to work</title>
<body>

<p>
ATI binary driver uses its own kernel module and opengl implementation. In
opposite to that the open-source driver has the kernel module included in kernel
by default and needs just enabling.
</p>

<p>
For configuring the kernel simple run <c>make menuconfig</c> in <path>/usr/src/linux</path>. And enable the bellow options as modules.
</p>

<pre caption="Enabling the correct modules in kernel">
<i>    Device Drivers ->
        Graphics support ->
            [M] Direct Rendering Manager (XFree86 4.1.0 and Higher DRI support) ->
                [M] ATI Radeon</i>
</pre>

<p>
After enabling those options just quit the configuration manager and run <c>make modules &amp;&amp; make modules_install</c> to get those installed.
</p>

<p>
Now for simple usage of this module just type as root <c>modprobe radeon</c> or add the radeon module to autoloading modules (where to put it consult your initd system).
</p>

<warn>
If you had your fglrx module loaded you cant just rmmod it and load the radeon one. This leads to memory corruption and kernel panic. For getting rid of the fglrx module one has reboot his computer.
</warn>

</body>
</section>
</chapter>
</guide>
