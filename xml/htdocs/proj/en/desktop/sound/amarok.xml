<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/desktop/sound/Attic/amarok.xml,v 1.1 2006/09/09 00:32:31 flameeyes Exp $ -->

<guide link="/proj/en/desktop/sound/amarok.xml" lang="en">
<title>Amarok package maintenance</title>

<author title="Author">
  <mail link="flameeyes@gentoo.org">Diego Petten√≤</mail>
</author>

<abstract>
Guide to maintenance of Amarok package and related packages, to help new
maintainers to know the catch ups in these packages.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.0</version>
<date>2006-09-09</date>

<chapter>
<title>Amarok</title>

<section> <!-- Introduction -->
<title>Introduction</title>

<body>

<note>
This guide was last updated for Amarok release 1.4.3.
</note>

<p>
<uri link="http://amarok.kde.org/">Amarok</uri> is one of the most used music
players that uses the KDE libraries and framework. Its usage is not strictly
connected to the KDE desktop itself, although some of its features are only
available when running the KDE desktop.
</p>

<p>
The maintenance of Amarok package isn't difficult on its own, especially since
the release of upstream Amarok are scheduled in advance and usually ready on
time. This reduces the chance of users submitting version bump bugs, unless the
release isn't ready on time. There are a few quirks that needs to be taken care
of by the maintainers.of the Amarok ebuild.
</p>

</body>
</section>

<section> <!-- Version bumps -->
<title>Version bumps</title>
<body>

<p>
The only data that requires to be verified during every version bump is the
availability of translation and documentation, that might vary from release to
release. The easy way to get them is to run the following commands:
</p>

<pre caption="defining the current translations and documentation available">
amarok-${PV} $ <i>ls po | fgrep -v Makefile | xargs echo</i>
af ar ... zh_TW
amarok-${PV} $ <i>ls doc | egrep -v Makefile\|amarok | xargs echo</i>
da de ... sv
</pre>

<p>
at this point, they can easily updated inside the ebuild, by defining the LANGS
and LANGS_DOC variables at the top:
</p>

<pre caption="defining the available translations and documentation in ebuild">
LANGS="<i>az bg ... zh_TW</i>"
LANGS_DOC="<i>da de ... sv</i>"
</pre>

</body>
</section>

<section> <!-- Engines -->
<title>Engines</title>
<body>

<p>
Amarok was designed to support different engines for audio decoding and playing,
but after series 1.3, some of the unstable incomplete ones were dropped.
Currently, the available engines are the <b>xine</b> engine, the default one and
always built from ebuild (see the <uri link="/proj/en/desktop/video/xine.xml">
  xine maintainer's guide</uri>), the <b>Helix/RealPlayer</b> engine, that can
be enabled by the <b>real</b> useflag on x86 architecture, the MAS and the NMM
engines, that are strictly disabled because they are not in portage.
</p>

<p>
With version 1.4, Amarok requires either xine or Helix engine enabled, because
many users reported problems with incomplete and experimetnal engines. The
reason for which xine has been choosen as default and mandatory engine on
Gentoo is that xine is the portable alternative between it and Real.
</p>

<p>
As we don't have Helix Player on Gentoo anymore, and just have Real Player,
we also had to make the Helix engine only use RealPlayer. For this reason, the
only architecture where the engine can be built is x86.
</p>

<p>
For a series of reasons, from version 1.4.2 onward, Amarok requires a version
of xine that's in-between 1.1.1 and 1.1.2 to be able to play correctly FLAC
files.
</p>

</body>
</section>

<section> <!-- Databases -->
<title>Databases</title>
<body>

<p>
As well as different engines, Amarok can use also different database backends.
The default backend is sqlite, and as a special exception, Amarok does not use
the system sqlite version, because that has proven itself unstable. For this
reason only the internal version of sqlite is used, without changes from
upstream provision.
</p>

<p>
Other database backends that can be used are MySQL and PostgreSQL. Both require
user intervention to be set up, there's no way to configure them directly in
ebuilds.
</p>

</body>
</section>

<section> <!-- Media devices -->
<title>Media devices</title>
<body>

<p>
As a full-fledged media player, Amarok also provides support for transmitting
songs to and from media devices, like mp3 players and similars. Its architecture
allows to build plugins for special devices on request, which requires adding
more useflags to the ebuild to handle new media device plugins from release to
release.
</p>

<p>
Currently the supported media devices from the ebuild are the generic USB Mass
Storage (that requires no dependencies), the iPod devices (using libgpod),
the IFP-based devices, early iRivers (using libifp), and the Nomad devices
(using libnjb). MTP-based media devices are supported by Amarok using libmtp
since version 1.4.2 onward, but the support is not present in the ebuild because
no developer had way to check its support.
</p>

</body>
</section>

<section> <!-- Ruby dependency -->
<title>Ruby dependency</title>
<body>

<p>
Since version 1.4, Amarok ebuild requires <b>dev-lang/ruby</b> forcefully; this
is upon request by upstream, as the lyrics retrieval support, and the scoring
and rating algorithms are now implemented as Ruby scripts. Then in version 1.4.1
also the last.fm proxy support, to play last.fm streams, was implemented this
way, and the same applies for DAAP support in version 1.4.2. For this reason,
<b>ruby</b> is by all means a mandatory required dependency.
</p>

</body>
</section>

<section> <!-- Musicbrainz -->
<title>Musicbrainz</title>
<body>

<p>
Amarok supported for a long time the tag lookup through Musicbrainz by using
the tunepimp library. Unfortunately that library had different versions with
different APIs: 0.3, 0.4, 0.5, and all of them incompatible between them. The
current code, since verison 1.4.2, is supposed to work with the latest version
of tunepimp, 0.5, but it does crash on some files and it's thus disabled. The 
support for other versions was already dropped because of security issues.
</p>

</body>
</section>

</chapter>

</guide>

<!-- kate: space-indent on; indent-width 2; replace-tabs on; indent-mode normal; -->
