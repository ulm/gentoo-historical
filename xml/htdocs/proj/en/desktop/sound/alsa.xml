<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/desktop/sound/alsa.xml,v 1.5 2005/11/21 20:34:32 flameeyes Exp $ -->

<guide link="/proj/en/desktop/sound/alsa.xml" lang="en">
<title>ALSA package maintenance</title>

<author title="Author">
  <mail link="flameeyes@gentoo.org">Diego Petten√≤</mail>
</author>

<abstract>
Guide to maintenance of ALSA drivers and ALSA packages, to help new maintainers
to know the catch ups in its packages.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.4</version>
<date>2005-11-21</date>

<chapter> <!-- Advanced Linux Sound Architecture -->
<title>Advanced Linux Sound Architecture</title>

<section> <!-- Introduction -->
<title>Introduction</title>

<body>

<p>
ALSA is the "next generation" sound drivers suite for Linux, that supersedes the
old OSS (Open Sound System) drivers. The ALSA drivers are provided by kernels
2.6 inside the kernel's sources and are available as external package for those
who are still running 2.4 series kernels. The external package can be used with
2.6 kernels, too, and allows to run a different version of ALSA drivers than the
one shipped with the current kernel.
</p>

<p>
This guide is being wrote to help developers interested in maintenance of ALSA
related packages, as they might be tricky, and it's always useful to know a few
things that are not in the official documentation. It also shows the reasons why
the external ALSA drivers package can't be dropped for 2.6 kernels.
</p>

<p>
Expansion of this guide is really welcome as it might be a bit tricky sometimes
as details are often forgotten until you really need to remember them.
</p>

</body>
</section>

<section> <!-- Resources -->
<title>Resources</title>

<body>

<p>
It's important to know the resources that might be needed to get ALSA right, as
there can be lot of problems that might require one to dig through many
different sites and mailing lists.
</p>

<p>
The first important resource is, obviously, the main
<uri link="http://www.alsa-project.org">ALSA Project homepage</uri>. You can
find there a list of latest news with changelog for different version and a
simple box with latest releases for stable and development packages. As you'll
see later, sometimes development releases are needed to go in ~arch or even on
stable trees, depending on the kernel version used in those trees.
</p>

<p>
As many other projects, ALSA project has a <uri link="https://bugtrack.alsa-project.org/alsa-bug/main_page.php">bugtracker</uri>,
but that might be a bit difficult to get a hold of, as it's a Mantis tracker
instead of the more common Bugzilla. It's important to note the selector on
top right of the screen: if you select something there you mask all the other
projects' bug and looking for or reporting bugs becomes an hell.
</p>

<p>
Other important resources are the mailing list. ALSA project have different
mailing lists, but the main ones you need to subscribe if you're interested in
maintaining ALSA related packages are <c>alsa-announce</c> and
<c>alsa-devel</c>. You might also want to take a look to
<uri link="http://lkml.org">lkml</uri>, as ALSA drivers are also developed as
part of 2.6 series kernel.
</p>

<p>
When fixing software that uses <c>alsa-lib</c> or when looking at
<c>alsa-lib</c> itself, it might be useful to have at hand the
<uri link="http://www.alsa-project.org/alsa-doc/alsa-lib/">library reference</uri>
that contains the tech level documentation of the functions inside the library.
</p>

</body>
</section>
</chapter>

<chapter> <!-- The packages -->
<title>The packages</title>

<section> <!-- Overview -->
<title>Overview</title>

<body>

<p>
ALSA support in Linux is provided by a list of different packages; upstream
splits the different pieces of the framework as they might not be used in every
system: some might just need <c>alsa-lib</c>, other might want to use utilities
and tools, too. For this reason there are also different ebuilds for all of
them, distributed between <path>media-sound</path>, <path>media-libs</path> and
<path>media-plugins</path> categories.
</p>

<p>
It's important to note that, while you can use just some of the packages
provided by ALSA, when you use more than one of them, they should always be of
the same version; while some of them are told to be compatible, we had in the
past some problems (between moving from 1.0.8 to 1.0.9) with unaligned drivers
and library, that caused a lot of problems to users.
</p>

<p>
Usually it's anyway possible to use different patchlevels of the same version
without big problems, so different rc versions can work together without being
a problem to users.
</p>

</body>
</section>

<section> <!-- alsa-driver -->
<title>alsa-driver</title>

<body>

<p>
The most important piece of ALSA framework is for sure <c>alsa-driver</c>
package. This package is the only way to provide ALSA drivers to 2.4 kernels and
an alternative way to provide ALSA drivers to 2.6 kernels. The ebuild in portage
installs only the plain modules for the drivers, while the original version
would have also installed the headers for them (this is taken care of in the
following package).
</p>

<p>
The <c>alsa-driver</c> package should always remain supported and available for
2.6 kernels, as it provides more reliable drivers for many cases, as it doesn't
get changed by kernel's patches and similar. While
<uri link="/doc/en/alsa-guide.xml">the ALSA guide</uri> suggests to use the
in-kernel drivers for 2.6 kernels as it's simpler for the users. While being
simpler, we had a few cases in the past where people complained about problems
with ALSA due to in-kernel drivers.
</p>

<p>
When receiving bugs about alsa at <path>sound@gentoo.org</path> alias, it's
always the case, if the reporter didn't specify it, to ask if he's using the
in-kernel drivers or <c>alsa-driver</c> package. In the former case it's useful
to know the version of the drivers (can be found at
<path>/proc/asound/version</path>) and to try to reproduce the bug with
<c>alsa-driver</c>. If the problem is limited to the in-kernel drivers, re-route
the bug to <path>kernel@gentoo.org</path> devs.
</p>

<p>
<c>alsa-driver</c> uses a mix of autotools-fu and Kconfig to work fine on many
different setups with kernels that might be using incompatible APIs. To the
base drivers' sources found in the package (that are the ones found in the
development kernel at the moment of the release), they apply a series of patches
to become compatible with older kernels, when needed. For this reason, newer
versions of the drivers are usually compatible with older kernels, but the other
way around is not always true.
</p>

<note>
Some API changes specific to given patchsets, such as the ones in
<c>suspend2-sources</c> 2.6.12, are not considered by upstream worth of
detection. As changing the kernel API does anyway break the compatibility with
lots of modules, there's no actual reason for <c>alsa-driver</c> to support
them.
</note>

<p>
Kernels does not look at the status of ALSA drivers sources when releasing, at
least they don't look if they are release candidates or even beta versions; this
created lot of problems in the past. For this reason, while it's usually the
case to mask pre-release versions of ALSA framework, you might be required to
remove them from package masking if a new kernel is released and latest unmasked
version of the drivers does not build against, or the kernel is shipped with a
pre-release version of the drivers (see the notes about <c>alsa-lib</c> package).
</p>

<p>
When a new kernel is going to be marked stable, ALSA drivers that builds against
it must be marked stable, too. This is required to have a working tree. Usually
this also means that the other packages needs to be stabled at the same point.
With 1.0.10 release, a pre-release version (1.0.10_rc2) had to be marked stable
because of kernel 2.6.14 marked stable, too.
</p>

</body>
</section>

<section> <!-- alsa-headers -->
<title>alsa-headers</title>

<body>

<p>
The <c>alsa-headers</c> package is split out from <c>alsa-driver</c> upstream
package. This package is used to install the headers needed by both the drivers
and the library. It's used to allow people to install alsa-driver for many
different kernel versions without having problems with collision-protect
feature.
</p>

<p>
The ebuild is quite simple, as it does install only a series of header files.
The only catchup is that it needs a single patch to define <path>__user</path>
if it's not defined.
</p>

</body>
</section>

<section> <!-- alsa-lib -->
<title>alsa-lib</title>

<body>

<p>
As ALSA uses a way more complex interaction between software and driver, the use
of simple access to the devices as done by OSS is no more a viable option. Due
to the number of possible options, and the access to hardware options, the
<c>alsa-lib</c> package is the preferred way to access the sound devices.
</p>

<p>
In the past <c>alsa-lib</c> had a series of "generations" of API compatibility,
so many packages configure in different ways depending if they find a version
of alsa pre-0.5, 0.5 or 0.9. At the moment, portage provides only >=1.0
versions, so all the packages should configure with ALSA generation 0.9.
</p>

<p>
Beside the different generations stated above, <c>alsa-lib</c> should be API
and ABI stable inside the same generation. Unfortunately there are cases for
particular drivers that does not apply cleanly, for example the emu10k1 breakage
between versions 1.0.5 and 1.0.6.
</p>

<p>
There are some problems that the eubild should take care to fix. The first
problem is that there can be problems with development releases that are
sometimes incomplete, so the dependency on <c>alsa-jack</c> can't be done on
the full <path>${PV}</path> as it would have broke with 1.0.10 release
candidates for example.
</p>

<p>
The other important problem is with test. <c>alsa-lib</c> comes with a couple
of simple testcases to make sure that it works fine. Unfortunately upstream
does not seems to pay enough attention to them before release, so they are often
broken even in the final release. While disabling them is probably simpler, when
possible it's suggested to try fixing the tests and submitting the patches to
ALSA's bugzilla.
</p>

<p>
It's particularly important that <c>alsa-lib</c> and the drivers used (either
from kernel or <c>alsa-driver</c>) are the same version in a working system.
This to avoid problems in communication between the lib (and so forth all the
applications that uses it) and the drivers inside the kernel. Being the single
communication node between kernel and userspace, the library is the strategic
point for the rest of the framework. While it's possible to use an older or
newer init script for <path>alsasound</path> it's usually highly deprecated the
use of <c>alsa-lib</c> with a different version than the current running
drivers.
</p>

</body>
</section>

</chapter>

</guide>

<!-- kate: space-indent on; indent-width 2; replace-tabs on; -->
