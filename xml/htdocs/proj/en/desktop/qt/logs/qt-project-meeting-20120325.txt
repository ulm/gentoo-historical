<wired> !herd qt
<willikins> (qt) abcd, hwoarang, johu, pesa, spatz, tampakrap, wired
<wired> who's here? :)
-*- johu is here
-*- tampakrap 
-*- pesa here
-*- hwoarang mostly here
-*- yngwin 
<wired> tampakrap and yngwin are toying with unsupported ctcp actions it seems
<yngwin> :)
<wired> ABCD and spatz?
<johu> it seems not here
<hwoarang> spatz is never around. wonder why is still in the team. retirement
team is after him
<wired> lol
<wired> ok then
<wired> so, 1. qt5
<wired> who's working on it (hopefully someone is?)
<pesa> I am
<pesa> or well, I was
<hwoarang> pesa: working where? off the overlay?
<pesa> I'm closely following upstream MLs
<pesa> hwoarang: locally only atm
<pesa> upstream is a bit late with the alpha
<hwoarang> does it make sense to create a new branch on qting-edge and see
what we can come up with?
<pesa> there have been severl build failures
<johu> do we need more than new slot for it?
<yngwin> why new branch?
<pesa> hwoarang: too early I think
<yngwin> just new slot
<pesa> yeah, SLOT=5 of course
<hwoarang> yngwin: i presume the current eclass wont work with that, so we
need to work somewhere else instead of polluting the master branch
<pesa> then we have file collisions for stuff in /usr/bin
<yngwin> qt5-build.eclass
<pesa> I started a new eclass from scratch
<pesa> yngwin: exactly
<yngwin> not polluting anything then
<hwoarang> polluting the history
<yngwin> hm
<hwoarang> with random test/set/try commits
<johu> pesa: when do you expect to push something to the overlay?
<wired> pesa: is the build system really screwed --- altered compared to qt4 ?
<pesa> johu: I'm waiting for the alpha, git head is too unstable
<johu> ok
<johu> is there an release date?
<tampakrap> are they moving to the new build system? I don't recall the name
<pesa> wired: the alpha is totally different, no configure for example, it's
still qmake anyway
<pesa> tampakrap: qbs? not yet
<tampakrap> ok
<pesa> johu: nope, next week probably
<johu> yeah cool
<pesa> tampakrap: not for 5.0 at least
<pesa> so yeah, it's quite a different beast from 4.x
<johu> from kde point of view we need qt 5.0 in sometime in summer
<pesa> we're going to have more split ebuilds I think
<pesa> johu: after 5.0 final?
<johu> yes
<pesa> ok good
<wired> pesa: judging from a presentation i saw at fosdem they are planning to
do their own splitting now
<pesa> wired: yep (finally!)
<wired> imo we should stick to whatever they are doing
<wired> less work for us
<pesa> I agree
<wired> is your work in a pushable state? im sure the rest of the team would
like to take a peek and contribute without redoing your work
<pesa> so..I hope to be able to push something for the packaged alpha (after
it's released of course)
<pesa> but it's really too early for now
<pesa> things in the build system change radically from one day to another
<wired> hmm
<wired> so we can't start from live ebuilds and move back to releases?
<pesa> I dont think so
<pesa> I tried to do that, but I ended up wasting a lot of time trying to
following upstream development
<wired> i see
<pesa> thus I suggest waiting for the alpha
<wired> so we wait
<pesa> btw, alpha won't guarantee BC with the final release
<wired> sounds rational
<yngwin> but there will be ppl who will want the alpha
<wired> hard masked we can give em whatever they want :)
<johu> yes Sput requested it already
<johu> for quassel development
<pesa> yeah, it's just a warning, if you build stuff against the alpha you
*must* rebuild everything when updating to the beta or final release
<yngwin> yes, so i think we could do alpha ebuilds, hardmasked or unkeyworded
<pesa> sure
<Sput> \o/
<pesa> :D
<johu> all facts are on the table?
<yngwin> btw, is upstream going to do split tarballs?
<pesa> what about binaries?
<pesa> yngwin: not for the alpha, but it's planned for later releases
<yngwin> ok
<wired> yngwin: they're even doing split repos
<pesa> yep
<yngwin> then i suggest for those later releases we try to stick as close to
upstream's split packages as possible
<pesa> we're going to follow upstream splits, except  for qtbase
<wired> yeah, thats what we said
<yngwin> :)
<pesa> we'll split qtbase in qt-{core,gui,sql,dbus} I think
<Sput> you guys want to split qtbase?
<pesa> just as with qt4
<yngwin> i'd like to reduce splits
<wired> i'd like a gui-less qt option, yeah
<pesa> OR we could have USE=X or something like that
<yngwin> wired: that would always be possible with useflags
<wired> yeah
<wired> would keep things simpler
<yngwin> but if there are big independant things, we could still split those
off into their own packages
<yngwin> but we've seen with qt4 that interdependencies can be a pita
<wired> i guess we'll have to talk about this after upstream finalizes their
decisions
<Sput> mmh, widgets are still in qtbase..
<pesa> they're trying to keep things more separated in qt5
<pesa> basically there are different modules
<pesa> which should be self-contained
<yngwin> that sounds promising
<pesa> although that goal might nto be fully reached in 5.0
<pesa> *not
<pesa> http://qt-project.org/wiki/Qt-Essentials-Modules
<pesa> what about binaries like qmake? qt4 and qt5 versions will collide
<yngwin> they need to be slotted
<pesa> should we rename to qmake5 or qmake-qt5 or...?
<Sput> have a qmake-qt4 and qmake-qt5, and maybe an eselect?
<Sput> how did we handle this when we still had Qt3?
<Sput> how do other distros still shipping Qt3 do this?
<yngwin> i thought they wanted to get rid of qmake
<pesa> qt3 had a different path
<pesa> yngwin: nope
<wired> suffix the major version number and use eselect to choose the default
<wired> ?
<johu> hm
<pesa> that would solve the problem for users, what about qmake usage in
ebuilds?
<johu> could be usefull
<yngwin> eqmake5
<wired> pesa: adjust qt4-r2 and qt5
<wired> to use the right one
<Sput> they would have to specify the proper version
<wired> we'll have two different eclasses for ebuilds anyway
<Sput> "QT_QMAKE_EXECUTABLE NAMES qmake qmake4 qmake-qt4 qmake-mac" is what
FindQt4.cmake uses btw
<yngwin> eqmake5 would not use eselect, but directly the qmake5 binary
<wired> ^^ that
<Sput> and there's a comment saying that Debian uses qmake-qt4
<pesa> Sput: yep
<yngwin> we should probably version both qmake's then
<pesa> ok, eqmake{4,5} will do the job, but what happens if the packages uses
autotools to detect qmake presence?
<pesa> (just an example)
<pesa> in other words, how do we change the current qmake inside ebuilds?
<Sput> maybe just not have a binary called "qmake"?
<yngwin> do we have any ebuilds that use qmake but not eqmake?
<wired> ebuilds that call (if any) qmake directly should be fixed
<pesa> yngwin: there are a few which uses autoconf, or similar configure
scripts, yes
<yngwin> then we probably shouldnt have an eselect
<yngwin> just qmake{4,5}
<pesa> dunno if users will be happy
<yngwin> they can always make a symlink themselves
<yngwin> but most upstreams should start differentiating as well
<yngwin> so we should keep an eye on what other projects do (esp also other
distros)
<pesa> true
<johu> true
<wired> great
<wired> we'll revisit this in due time
<pesa> yeah
<wired> lets move to 2.
<wired> qt4.eclass deprecation
<wired> http://dev.gentoo.org/~wired/checks/qt4.eclass.html
<yngwin> i've been keeping an eye on
http://dev.gentoo.org/~wired/checks/qt4.eclass.html
<wired> its almost dead
<yngwin> its slowly dwindling, but there are still 60 ebuilds in the tree
<pesa> first of all we should reduce the testing ebuilds to 0
<yngwin> do we have a repoman warning?
<wired> afair yes
<johu> yes
<pesa> yes
<yngwin> ok
<yngwin> so we can start bugging maintainers
<johu> yeah filling bugs/stable request to get rid of it
<wired> many things have already left this list (like virtualbox), shouldn't
take long
<yngwin> i agree with pesa that we should first try to get the testing ebuilds
done
<wired> worst case, we just do it ourselves
<yngwin> i plan to do just that when i get my commit rights back
<yngwin> (i still have a 2nd quiz to do)
<pesa> that would be great
<wired> great
<johu> yngwin: do the quiz asap :P
<wired> off to 3.
<yngwin> johu: its such a drag
<yngwin> but yeah
<wired> Unmaintained/obsolete packages
<wired> wrt qgtkstyle, it is completely dead
<yngwin> isnt qgtkstyle duplicated in USE=gtkstyle ?
<pesa> afaik yes
<wired> yngwin: its masked and not available in recent versions anyway
<yngwin> ok
<yngwin> just treeclean it, i would say
<wired> it was a temporary fix until i managed to fix USE="gtkstyle"
<wired> yes
<pesa> so no longer needed right?
<wired> its long dead
<pesa> good, let's remove it :)
<johu> last rite sent?
<wired> johu: don't think we need to
<yngwin> i'd say just do it as a courtesy
<wired> just kill it, we have stable versions of qt
<wired> with USE=gtkstyle
<wired> no one will ever miss it
<wired> 4.7.4 doesn't even have it
<wired> while at it, we could clean some old qt versions
<hwoarang> you can't just kill it. you need to treeclean it properly with 30
days of notice
<johu> whats with the minor arches without 4.7?
<pesa> we have to keep 4.6.3
<pesa> 4.6.2 can be treecleaned I think
<yngwin> yeah 4.6.2 can be removed
<wired> hwoarang: doubt this case needs a notice. it has been masked for
months, doesn't have recent versions at all and functionality just went back
to qt-gui :) but do what you wish
<yngwin> and 4.7.2 as soon as arm moves
<hwoarang> i am not gonna do it. I am just saying that you need to follow the
policy for removing packages
<pesa> yeah, arm is blocked by a qdoc issue
<johu> how about last rite with shorter period?
<yngwin> on 4.7.4?
<pesa> johu: +1
<hwoarang> people complained in the past about sudden removals
<johu> 15 days?
<yngwin> i agree with hwoarang, just give a fair warning
<hwoarang> johu: people report to devrel such attitude
<johu> yes lets prevent the bikeshedding
<pesa> ok, let's send the lastrite, not a big deal anyway
<hwoarang> true
<johu> who?
<hwoarang> pesa
<hwoarang> hppa has a blocking bug on 4.7.X . they never replied back
<pesa> I know
<johu> dev-embedded/qvfb?
<pesa> qvfb is stuck at 4.6.3
-*- wired no idea
<wired> hm
<yngwin> any bugs for that version?
<pesa> and was maintained by haavardw
<johu> has only stable keywords for amd64, x86
<hwoarang> no bugs afaik
<pesa> we don't even get any bump requests..
<yngwin> lastrite to see if anyone steps up to maintain it?
<pesa> yes definitely
<pesa> I suspect no one uses it
<wired> i'd keep it around until we remove 4.6.3
<johu> !rdep qvfb
<hwoarang> embedded people probably uses it
<willikins> johu: No packages have a reverse RDEPEND on dev-embedded/qvfb.
<hwoarang> those who don't have X
<yngwin> ok, if no bugs, no need to remove it, i guess
<johu> not :)
<pesa> wired: works for me
<yngwin> put up for grabs then?
<pesa> yes
<johu> +1
<pesa> who is going to take care of qgtkstyle lastrite and qvfb?
<hwoarang> i will do it
<hwoarang> qvfb needs no announcement
<pesa> thanks
<hwoarang> just "fix" metadata and let people notice it from the treecleaners
page
<wired> great
<wired> 4. Get eclass translation handling into official tree
<yngwin> i think the translation handling we have is specific enough to qt to
keep it in our eclass
<yngwin> altho there was some discussion on dev ml about a generic eclass
<johu> as long there is no generic solution i would keep it in qt eclasses
<wired> +1
<pesa> I'll go even further
<pesa> it's *too* specific to be put in any eclasses
<pesa> imho
<yngwin> what do u mean
<pesa> different packages have different translations handling
<yngwin> we shouldnt have it in qt4-r2 ?
<pesa> no
<pesa> there are too many differences between qt-based packages for that code
to be useful
<yngwin> i ran into this preparing the qupzilla ebuild
<yngwin> i can just copy-paste the code
<hwoarang> the code is qt4-r2 only aims to cover limited cases
<yngwin> but i hate such duplication
<wired> pesa: we don't have to cover every case
<hwoarang> you can expand it when you notice a different translation handling
<pesa> e.g. translations dir, filenames, some build system already install all
translations
<pesa> hwoarang: problem is you can know which "code path" to use
<pesa> *you cannot
<pesa> lol
<yngwin> we use the overlay eclass code in several ebuilds, i think it works
well
<yngwin> i'd like to see it in the official tree, so we can use it in smplayer
and qupzilla ebuilds
<yngwin> and probably others
<pesa> I think it's going to be useful only in a limited subset of cases
<hwoarang> well, better than nothing
<wired> ++
<yngwin> if it's 3+ cases, its worth it imo
<pesa> yeah, that's true
<hwoarang> the code duplication regarding translations in qt4 ebuilds is
massive
<pesa> yeah we don't need to cover every possible case, you're right
<yngwin> and other ebuilds could benefit from it, where now the maintainers
are just lazily installing all translations
<yngwin> and i dont think localepurge even catches this
<johu> how about merging funcionality from edge into normal eclasses?
<johu> and get rid of it
<pesa> normal == qt4-r2 ?
<johu> yes
<johu> in kde we have 4 eclasses for both build types, release build and
bleeding edge
<pesa> the only difference is translation handling
<wired> I like our current setup
<wired> lets just move translations code from edge to -r2
<pesa> if we move translations handling to qt4-r2, I agree with removing -edge
<wired> i say we keep edge for the future
<yngwin> +1
<tampakrap> +1
<yngwin> i mean pesa +1
<tampakrap> me too
<pesa> I'd prefer to do like kde team
<pesa> have the same eclass name
<yngwin> wired: we could always reintroduce it, if needed
<wired> the only thing edge does is extend qt4-r2
<wired> we get the added bonus of not having to tell portage about eclass
overrides
<yngwin> but if we move translation code, then it doesnt extend in any way
<pesa> but you have to change ebuilds code
<yngwin> true
<pesa> e.g. qt4-r2_src_configure -> qt4-edge_src_configure
-*- hwoarang has to go. will read the logs later!
<pesa> that is very bad for diffs
<yngwin> o/
<wired> cu hwoarang
<pesa> hwoarang: cya
<johu> hwoarang: bye
<wired> well, i like our current setup, but if you guys don't like it, I can
live with the alternative
<tampakrap> I put some if else in the ebuilds to have the same ebuilds for
live and regular ones
<pesa> tampakrap: I do too, but having to do that for each eclass function is
too  much imho
<pesa> let's just have a qt4-r2 in the overlay, which overrides the portage
one
<yngwin> hm i dont like that
<yngwin> duplication again
<yngwin> i'd rather keep -edge then
<pesa> no, it's not duplication
<tampakrap> in kde we regularly sync the overlay eclasses to tree
<tampakrap> since we bump the versions based on the live ones
<pesa> I mean, we will put qt4-r2 on the overlay only when needed, e.g.
because we need to change it
<tampakrap> so we do the development in overlay, and just sync/move
ebuilds/eclasses in tree when a new release comes
<pesa> exactly
<pesa> ah another point, you can't change the behaviour of qt4-r2 from -edge,
you can only extend it, OR you must rewrite the whole function
<yngwin> well, u guys do more work on the eclasses than i do, so i can live
with whatever works for u :)
<pesa> we just have to remember to keep them in sync
<pesa> just like qt-* ebuilds for example
<tampakrap> actually no
<tampakrap> the development happens in overlay
<tampakrap> the bugfixes go in both
<tampakrap> so new releases don't loose any functionality (since they are
based on the live)
<tampakrap> and always get new features
<pesa> yeah, I meant that bugfixes must go in both
<tampakrap> true
<pesa> so they don't diverge
<tampakrap> that's what we do in qt
<tampakrap> in kde, sorry
<johu> in kde
<pesa> yeah, in qt sometimes we forget to apply the fix to the overlay
<tampakrap> I know, let's change the workflow
<pesa> I agree, it's an improvement imho
<johu> +1
<wired> i like that workflow as well
<wired> overlay as staging area
<tampakrap>
http://git.overlays.gentoo.org/gitweb/?p=proj/kde.git;a=blob;f=Documentation/maintainers/bump_new_revision.sh;h=5af1ddbbfdfe2f06b1c1a53ccca51eb4d8832d70;hb=HEAD
<tampakrap> this is the script that bumps the ebuilds based on the live ones
<yngwin> ok, to get back to the original topic, who will submit the
translation code to dev ml for review before moving it to qt4-r2 ?
<tampakrap> live ebuild from the currect branch, eg 4.8 branch
<pesa> yngwin: I should be able to find some time for that
<yngwin> great
<johu> please move on :)
<pesa> yeah bugs
<wired> bug 398885
<willikins> wired: https://bugs.gentoo.org/398885 "x11-libs/qt-assistant-4.7.4
qdoc3 loops forever on arm & ppc"; Gentoo Linux, Applications; CONF; maekke:qt
<pesa> blocking qt 4.7.4 stabilization on arm
<pesa> any ideas?
<johu> no
<pesa> it seems to affect ppc too, but they already stabilized 4.7.4, so it
happens only on some machines maybe?
<pesa> we should retry the out-of-portage build and see how it goes
<pesa> see comment #1
<pesa> needs more explanation though
<wired> agreed
<johu> +1
<pesa> this is a high priority bug, so please if you have time, try working on
it
<wired> bug 367583
<willikins> wired: https://bugs.gentoo.org/367583 "x11-libs/qt-dbus-4.7.2 -
../../include/QtCore/../../src/corelib/arch/qatomic_generic.h:197: error:
invalid conversion from ‘const void*’ to ‘void*’"; Gentoo Linux, Library;
CONF; jer:qt
<pesa> this is even higher priority
<pesa> and hppa team (jer) is responsive
<pesa> we have 2 candidate patches, both seem to work, we need to decide which
one to apply
<johu> as i can read from the comments guys patch is more promissing to go
upstream
<johu> so i would vote for that
<pesa> we can try asking upstream (on irc for example)
<yngwin> we already know upstream doesnt care
<pesa> well, upstream is not responsive on their bugzilla
<pesa> we should try irc imho
<pesa> thiago is usually helpful and he's the author of qt-dbus code btw
<pesa> so he might be able to comment on the second patch
<yngwin> ok
<pesa> any volunteers?
<yngwin> if u can get his opinion, that would be helpful
<pesa> sure
<yngwin> but either way, we should move soon, imo
<pesa> yep, that's an old bug
<wired> but 401557
<wired> lol
<wired> bug 401557
<willikins> wired: https://bugs.gentoo.org/401557 "x11-libs/qt-core-4.8 -
hint: qt-4.8 : add a ewarn to recompile cairo *after* qt-4.8"; Gentoo Linux,
Applications; UNCO; toralf.foerster:qt
<pesa> heh
<pesa> I don't care about this one, although a warning sounds useful for
"normal" users
<wired> i never hit this, but i don't mind a warning
<wired> i'll add it
<pesa> I think it should go in qt-gui
<yngwin> +1
<wired> ok
<wired> bug 398497
<willikins> wired: https://bugs.gentoo.org/398497
"/usr/include/qt4/Gentoo/gentoo-qconfig.h should be under package manager
control"; Gentoo Linux, Applications; UNCO; non7top:qt
<pesa> willikins: but please double check
<pesa> the summary says qt-core...dunno
<pesa> err... ^ wired
<pesa> lol
<wired> ok
<wired> :P
<pesa> does anyone know why gentoo-qconfig.h is not under PM control?
<wired> no idea
<pesa> I guess it was an oversight by the original eclass authors
<yngwin> i think we all agree it should be
<wired> ++
<pesa> ok
<pesa> next?
<wired> bug 372721
<willikins> wired: https://bugs.gentoo.org/372721 "[qt overlay]
x11-libs/libmeegotouch-9999 doesn't compile"; Gentoo Linux, Ebuilds; IN_P;
maxposedon:qt
<yngwin> >> nobody cares about this package, we should remove it
<pesa> +1
<johu> its only in overlay
<wired> +1
<johu> so just remove it +1
<pesa> great
<pesa> I'm removing it right now
<johu> and mark bug as wontfix
<wired> bug 388551
<willikins> wired: https://bugs.gentoo.org/388551 "x11-libs/qt-gui should
depend on gnome-base/libgnomeui-2 when USE="gtkstyle" is enabled"; Gentoo
Linux, Applications; UNCO; brad:qt
<wired> i think i should have added the elog but forgot
<pesa> "During our last meeting we decided to add an elog message, but nobody
actually did it."
<wired> so it's on me
<pesa> heh :P
<johu> yes i forget it
<johu> slap me
<wired> ;p
<wired> bug 285743
<willikins> wired: https://bugs.gentoo.org/285743 ""webkit" USE flag
standardization"; Gentoo Linux, Ebuilds; CONF; luke-jr+gentoobugs:qt
<wired> yes please
<yngwin> iirc that was already decided before i retired 2 years ago
<johu> and what was the decision?
<yngwin> yes
<pesa> ok for me
<wired> ++
<yngwin> yeah, i still think its a good idea
<pesa> keep the description generic enough
<wired> who's doing this?
<pesa> the flag has mainly 2 meanings: 1) add support for html rendering
engine, 2) build bindings for webkit
<pesa> (2) can be a local flag description
<wired> "Enable support for the Webkit html rendering engine"
<pesa> WebKit
<wired> yes
<pesa> capital K
<wired> saw it after \n
<wired> ;p
<pesa> sounds good
<yngwin> wired +1
<wired> k i'll send that to -dev
<pesa> thanks
<wired> bug 404283
<willikins> wired: https://bugs.gentoo.org/404283 "media-gfx/imagemagick -
convert: unable to close module `SVG': /usr/lib64/qt4/libQtGui.so.4: undefined
symbol: _ZN11QMetaObject11removeGuardEPP7QObject @
warning/module.c/UnregisterModule/1605."; Gentoo Linux, Applications; UNCO;
alienpenguin:qt
<pesa> heh... no idea on this one
<johu> full build log would be usefull
<johu> and emerge --info as well
<pesa> emerge --info is on the first comment
<johu> ups
<wired> --info is there, but yeah, log would be nice
<yngwin> what does -mno-avx do?
<yngwin> C{,XX}FLAGS
<pesa> disables AVX instruction set
<yngwin> shouldnt influence this, right?
<wired> can't rule it out, can we?
<yngwin> well, we dont have emerge --info on the duplicate bug
<yngwin> so we could ask for that
<wired> ++
<johu> request build.log and emerge --info in dup
<yngwin> it has build.log
<pesa> the missing symbol is qt-core stuff, I don't think avx has anything to
do with it
<wired> i don't see that flag in the dup
<wired> and the dup actually installs even tho it gets the error
<pesa> also ask for "emerge -pv imagemagick qt-core qt-gui"
<wired> who's doing this?
<wired> don't rush people
<wired> ;p
<wired> ok got it, i'll do it
<wired> so, next meeting
<wired> in two weeks?
<wired> same date/time?
<wired> day*
<johu> in 2 weeks?
<johu> there is eastern
<johu> -n
<yngwin> we could keep it on the last sunday of the month from now on
<wired> that could work as well
<wired> thought it would be nice to do it in 2 weeks if we have qt5 news
<pesa> yeah
<yngwin> if so, then we can always decide
<pesa> we can have a quick meeting for qt5
<pesa> I'll let you know
<johu> ok
<wired> easter is on the 15th here
<wired> we should also have a lead election at the end of april / start of may
<yngwin> no such thing here
<wired> i'll be leaving for army early may
<wired> no idea of availability
<yngwin> i guess i need to get my quizzes ready :)
<wired> could actually be better than now, but I won't know before june :)
<wired> heh
<yngwin> not that i'm looking forward to dealing with cvs again
<wired> heh
<wired> could be worse
<pesa> wired: ah...I'm sorry about that :/
<yngwin> sure, but this git migration has been in the works for years now
<wired> pesa: thanks, i'll live through it i guess :)
<pesa> wired: is military service still mandatory in greece?
<wired> I'm actually looking into getting a tablet I could smugle in there
<wired> pesa: yeah
<johu> meeting over?
<wired> 9months atm
<pesa> i see
<wired> johu: yeah, thanks for being here
<yngwin> pesa: as long as it has a border with turkey, yes
<johu> bye
<pesa> bye johu
<wired> cu :)
<pesa> ok, thanks a lot guys
