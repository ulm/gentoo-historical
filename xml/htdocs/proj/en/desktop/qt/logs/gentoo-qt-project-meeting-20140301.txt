Gentoo Qt project meeting 2014-03-01
Timestamps are UTC+4

[16:00:40] <Pinkbyte>	!herd qt
[16:00:41] <willikins>	Pinkbyte: (qt) kensington, pesa, pinkbyte, wired, yngwin, zlogene
[16:01:03] <Pinkbyte>	Let's start roll-call. Who's there? :-)
[16:03:44] <Pinkbyte>	guys? :-/
[16:04:44] *	pesa here
[16:06:55] <Pinkbyte>	pesa, it seems that here only two of us. Anyway first long-standing question is up to you, let's start, maybe others will join us later
[16:07:12] <pesa>	hmmm
[16:08:32] <pesa>	well not much to say actually, we (I) missed the "target" of 5.2.x
[16:09:08] <pesa>	5.3 is scheduled for late april IIRC
[16:09:53] <Pinkbyte>	pesa, well it is a bit unfortunate, but that's life. More interesting question(for me) - progress with moving qt4 binaries - cause this will speed up future integration
[16:10:11] <Pinkbyte>	Are you planning to wait for 4.8.6(if it will ever be)?
[16:10:23] <pesa>	that was the idea
[16:10:51] <pesa>	but I'd like to implement it on 4.9999 first and I haven't gotten around to it yet :(
[16:11:43] <Pinkbyte>	That's sad :-(. Moreover it is sad, that i can not help you with this. Qt buildsystem internals really scares me :-(
[16:11:53] <pesa>	there will definitely be a 4.8.6, upstream was talking about a february release but I guess they're late
[16:12:21] <pesa>	yeah it's a bit complex at times
[16:12:33] *	xhochy_ (sid11301@gateway/web/irccloud.com/x-ahgibhynnsnqgyiu) зашел на канал #gentoo-meetings
[16:12:33] <pesa>	and very hard to debug
[16:12:39] <Pinkbyte>	pesa, probably they will brought it with apropriate qt 5 release, but it's just a suggestion - i am not following Qt development so close
[16:16:33] <Pinkbyte>	pesa, ok. Do your job as usual. Next one - base eclass dependency in qt4-r2
[16:16:38] <pesa>	sure
[16:16:46] <Pinkbyte>	That's thing that i can help you with ;-)
[16:16:55] <pesa>	I hope Sonja can help and will join us :)
[16:17:02] <pesa>	*Sanja sorry
[16:17:17] <Pinkbyte>	Sanja? Do we have a recruit? ;-)
[16:17:31] <pesa>	the mail to qt@ a few days ago
[16:17:39] <pesa>	you replied to it :P
[16:18:21] <Pinkbyte>	pesa, ah. Well, we have no answer from him, so i have no false expecations.
[16:18:42] <pesa>	fair enough
[16:19:00] <Pinkbyte>	To be honest, that's not the first time when someone offered help and than - vanishes in the shadows
[16:19:09] <Pinkbyte>	i see that regularly in proxy maintainers :-(
[16:19:36] <pesa>	true
[16:19:40] <Pinkbyte>	Anyway, as QA team member, i have some responsibility for base eclass cleanup and i will be glad to do this, if you do not mind
[16:20:28] <pesa>	sure go ahead
[16:20:42] <pesa>	I can review you patch if you please
[16:20:45] <pesa>	your
[16:21:08] <pesa>	it should be straightforward
[16:22:07] <Pinkbyte>	pesa, ok then. When it would be ready, i will sent it to gentoo-dev@ as we usually do.
[16:22:27] <pesa>	absolutely
[16:23:10] <Pinkbyte>	pesa, now, question 3. What packages are you talking about? Main tree or overlay? Cause i have queried bugzilla and have found only 28 unresolved bugs with qt@ involvement
[16:23:29] <Pinkbyte>	and around 5 of them are new package requests, so they do not count
[16:23:58] <pesa>	so
[16:24:09] <pesa>	I don't have names
[16:24:15] <pesa>	but the question is this:
[16:24:29] <Pinkbyte>	pesa, ahh, really sorry for that. I have failed to do query properly. It's not 28, it's around 110
[16:24:36] <Pinkbyte>	so, yeah, pretty much
[16:25:06] <pesa>	when we were young and strong (hehehe) we added a lot of random packages to our herd, just because they were written with qt
[16:26:03] <pesa>	now, some (a few? a lot? I dunno) of those packages are scarcely maintained, not only by us but also by the upstream devs, and are bit-rotting
[16:26:30] <Pinkbyte>	pesa, well, i think we should drop to maintainer-needed@ only packages that are without our attention for a long time and have serious bugs
[16:26:33] <pesa>	from time to time a bug about one of them pops up and we discover that the package has been broken for months and so on
[16:26:44] <pesa>	it is clear that no one or very few people use them
[16:27:22] <pesa>	so I think they're a waste of time for the team
[16:27:28] <pesa>	well not all of them
[16:27:32] <pesa>	but some are
[16:29:18] <pesa>	maybe this problem is more personal than I thought, honestly there are very few packages in qt herd that I'm interested in (namely, all of dev-qt/, pyqt, qt-creator, libqxt, maybe pyside, and very few others)
[16:29:43] <Pinkbyte>	pesa, well, what's your proposal? I think about something like: if a bug stay unnoticed for a long time, someone from the team can drop to maintainer-needed@. But in any time we can vote for an ordinary package to be either transferred to maintainer-needed@ or have dedicated maintainer
[16:29:45] <pesa>	thus I'm considering removing myself from the herd and adding me as maintainer of just those pkgs
[16:30:34] <Pinkbyte>	pesa, please, do not do that. We have herds for a reason. If you want to tighten herd packages to a qt and some related libs - it's ok
[16:30:37] <Pinkbyte>	we can discuss this
[16:30:42] <Pinkbyte>	but do not remove yourself from herd
[16:30:47] <Pinkbyte>	please
[16:30:56] <pesa>	alright alright I won't :)
[16:31:42] <Pinkbyte>	pesa, anyway, i do not see such a big deal until bugs are really fixed
[16:32:14] <dilfridge>	kde herd also drops packages every now and then, not a big deal
[16:32:41] <pesa>	and there's one more thing, a few packages require more maintenance than others, e.g. eric requires frequent bumps and has open bugs, I think we should seek a dedicated maintainer for those
[16:32:46] <pesa>	outside qt I mean
[16:33:14] <pesa>	maybe it's just that other devs don't know this
[16:33:52] <Pinkbyte>	pesa, we have apropriate section in staffing needs. Maybe we should examples of such packages there?
[16:33:57] <pesa>	(we can keep qt@ as herd of course)
[16:34:07] <pesa>	yeah that's an idea
[16:34:09] <Pinkbyte>	IIRC, it says only that 'some packages needs dedicated pair of eyes'
[16:34:21] <pesa>	yeah we need a precise list
[16:34:43] <pesa>	I'll try and come up with one later
[16:35:09] <Pinkbyte>	good
[16:35:42] <pesa>	we should also announce that list to the ML
[16:36:01] <pesa>	"looking for dedicated maintainers"
[16:37:08] <Pinkbyte>	yep, that helps
[16:38:58] <pesa>	what's next?
[16:39:24] <Pinkbyte>	pesa,  open bugs section, just realized that i copied it by a mistake. Only one bug seems unresolved from there for now
[16:40:00] <pesa>	yeah not sure what the "open bugs" section is about honestly
[16:40:21] <pesa>	we have 116 open bugs so...
[16:40:43] <Pinkbyte>	pesa, well, it's for random bugs involving Qt, that are bringed to discussion about by some of the team members
[16:41:06] <Pinkbyte>	cause they think that they are more important than others and there is a field for discussion about how to resolve them
[16:41:41] <pesa>	yeah sure ok
[16:41:57] <pesa>	what I'm saying is that there's no reason to carry them over from meeting to meeting
[16:42:15] <pesa>	unless a team member specifically asks to re-discuss it
[16:43:20] <Pinkbyte>	pesa, makes sense. Let's merge this with our usual 'open floor' section and calls it that way
[16:43:40] <pesa>	ok
[16:44:40] <Pinkbyte>	So, if somebody wants to add something, it's the right time to do this. :-)
[16:44:49] <Sput>	hi
[16:45:10] <Sput>	pesa: I was wondering if the current QtDeclarative module should be split into QtQml and QtQuick
[16:45:19] <pesa>	hi Sput 
[16:45:22] <Sput>	(since this is how the modules are named, despite the wrong and historical repo name)
[16:45:29] <pesa>	I've been asking myself the same :)
[16:45:50] <pesa>	but I've tried and it's very hard to split them
[16:46:01] <Sput>	we recently had a discussion in some channel where people got really confused over QtDeclarative, QtQuick1, QtQuick and QtQml
[16:46:12] <Sput>	is it?
[16:46:21] <pesa>	our naming reflects the upstream repo and tarball naming
[16:46:32] <Sput>	yeah, which in this particular case goes wrong of course
[16:46:38] <Sput>	but I guess our eclasses assume that
[16:46:46] <pesa>	that's not the issue
[16:47:08] <pesa>	the issue is that modules in the same repo are not meant to be built separately
[16:47:14] <pesa>	and splitting them is hard
[16:47:34] <pesa>	(look at the qtbase mess)
[16:47:37] <pesa>	therefore I'm not planning to do it at this time
[16:48:16] <pesa>	but of course patches welcome as usual (with the requirement that they don't result in an unmaintainable mess)
[16:48:49] <Sput>	I'm not sure if this is true in this case, because upstream does consider them separate modules, don't they?
[16:49:03] <pesa>	they do
[16:49:12] <Sput>	only reason for the wrong repo name is that Gerrit makes it hard to rename repos :)
[16:49:17] <pesa>	exaclty like QtCore and QtGui are separate modules
[16:49:20] <Sput>	and Nokia had different fish to fry back then
[16:49:30] <Sput>	hmm
[16:49:44] <pesa>	well renaming is one thing, splitting is another
[16:50:07] <Sput>	well, I don't know enough about the build system to judge that, I'll leave that to the maintainer :)
[16:50:07] <pesa>	what's your naming proposal?
[16:50:13] <Sput>	qtquick and qtqml
[16:50:24] <pesa>	no, assuming they're kept together
[16:51:08] <Sput>	mmmh. that's a harder question; I would assume qtquick makes more sense because the things most developers will see are classes from the QtQuick module
[16:51:21] <Sput>	(there's no QDeclarative* classes in there, afaik)
[16:51:22] <pesa>	qtdeclarative -> qtquick and qtquick1 -> qtdeclarative ?
[16:51:45] <pesa>	correct I agree from a Qt c++ developer POV
[16:51:48] <Sput>	I think that would make more sense, however I am not sure if that would lead to even more confusion
[16:52:25] <pesa>	FTR, debian is following upstream repo names
[16:52:30] <pesa>	i.e. ours
[16:53:15] *	BlackNoxis (~blacknoxi@unaffiliated/blacknoxis) зашел на канал #gentoo-meetings
[16:54:23] <pesa>	mmm I dunno
[16:55:03] <pesa>	I'm not convinced by the current naming, but even less by the alternatives
[16:55:35] <pesa>	at least the current status is "we follow upstream, blame them"
[16:58:56] <Sput>	yeah
[16:59:08] <Pinkbyte>	pesa, +1. I am not very familiar with the problem itself, but i do not see why we should resolve it differently than in other distros.
[16:59:16] <Pinkbyte>	at lease - for now
[16:59:25] <Sput>	if we can't do the split to make it 100% right, following upstream may be the better approach
[17:00:02] <pesa>	agreed
[17:00:03] <Sput>	other thing, what's the state with doc generation? there's this guy who has an overlay with qt5 ebuilds that generate doc, is there any work going on to make that more official?
[17:00:09] <pesa>	the split would be best of course
[17:00:41] <pesa>	what are you talking about? :)
[17:00:50] <pesa>	who needs documentation btw? :P
[17:01:04] <Sput>	I would love to have a .qch for assistant...
[17:01:24] <pesa>	aah right
[17:02:02] <pesa>	was the cross-module linking problem solved?
[17:02:07] <Sput>	no clue
[17:02:22] <Pinkbyte>	for a record, we are talking about bug #457028 now?
[17:02:25] <willikins>	Pinkbyte: https://bugs.gentoo.org/457028 "Add support for building Qt5 documentation"; Gentoo Linux, Library; CONF; eugene.shalygin:qt
[17:02:28] <Pinkbyte>	s/a/the/
[17:02:32] <pesa>	yep
[17:02:57] <Sput>	ah yes, that's what I referred to
[17:03:43] <Sput>	he still maintains that overlay, too
[17:03:43] <pesa>	I'll look into it, as time permits
[17:03:56] <pesa>	maybe upstream solved the problem for us
[17:03:59] <Sput>	(last merge was done a couple days ago; I haven't tried actually building anything)
[17:04:10] <pesa>	ok good
[17:04:18] <Sput>	https://github.com/evsh/gentoo-qt5-with-docs ftr
[17:06:02] <pesa>	ah he has one single ebuild for qtbase docs
[17:06:25] <pesa>	that makes it way easier :)
[17:11:09] <Pinkbyte>	Ok, guys. Anything else?
[17:14:37] <Pinkbyte>	Suppose no. Meeting is over. pesa, thank you and shame on other slackers ;-). Sput, thank you too.
[17:14:51] <pesa>	yeah, thank you guys!
