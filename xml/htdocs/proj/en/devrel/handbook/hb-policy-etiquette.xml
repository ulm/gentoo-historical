<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/devrel/handbook/hb-policy-etiquette.xml,v 1.3 2004/07/18 22:56:42 plasmaroo Exp $ -->

<sections>
<section>
<title>Introduction and some simple rules</title>
<body>

<p>
These rules are designed to be a easy-to-follow guide to what <uri
link="/proj/en/devrel">Developer Relations</uri> would <e>expect</e>
to be good developer etiquette. These rules should cover most areas
and should be employed whereever they can be.</p>

<p>
That doesn't mean that we expect you to follow this guide to the
bullet point; nor do we expect you even agree with it - we do expect,
however that all developers maintain reasonable standards of
behaviour with our community - whether to other developers or users.
Developer Relations may consider taking sanctions if a reasonable
standard is not met.
</p>

<p>
By reasonable standards we don't require you to act in the most formal
manner ever heard of, or speak like a CEO. We just require you to be
equally respectful to developers and users alike, and to value the
opinion of everybody - even if you think it's totally wrong.
</p>

<p>
You should try to use good spelling, and grammar everywhere: whether
in a CVS commit message, a ChangeLog, or even on IRC if you want to be
really nice and make somebody's day. But don't worry; we won't really
mind if you don't. You might not not notice it, but by taking some
effort to clean things up, the amount of time it takes to read your
sentences is greatly lowered. However, it is also important not to
lose the rope at the same time and make something too eloquent that
takes too long to parse.
</p>

</body>
</section>

<section>
<title>What you should try not to do</title>
<body>

<p>
The <b>last</b> thing you want to do is to be rude, abusive, inpolite,
or stressful - all lead to even more stress. Occasionally, even an
extra sarcastic comment can give you grief by end-users and other
developers. If you are not sure about it, stay away from it. If you
think you might give somebody a bad feeling as a result of your
comment, and if you <e>really</e> need to say it, make sure people
understand that you are not trying to be offensive. So if you feel
stressed out, please do not take it out on the users; instead talk to
<uri link="/proj/en/devrel">Gentoo Developer Relations</uri> or the
<uri link="/proj/en/devrel/ombudsman">Gentoo Ombudsman</uri> who will
be happy to help you out.
</p>

<p>
If you somehow do manage to totally take it out on a user and are rude
or abusive in any really way, please be advised that
<uri link="/proj/en/devrel">Developer Relations</uri> may decide to
revoke your developer status, especially if you have been warned about
similar incidents previously. As a result, we recommend our developers
to monitor the politeness of what they say to our userbase as well as
to other fellow developers.
</p>

</body>
</section>

<section>
<title>Bad Day Factors</title>
<body>

<p>
Somebody might just have a bad day and might pass the effect on to
you. The last thing to do is to panic. Understand that end-users and
even developers might be <b>very</b> new to things. They might have no
clue on why that ebuild is failing or why their e-mail client has
problems with fetching mail. For all you know, that developer or
end-user might come in really handy later on for something you've got
no clue about.
</p>

</body>
</section>

<section>
<title>Relax</title>
<body>

<p>
You are also a person with your rights. If you feel abused,
overworked, or discriminated then please talk to 
<uri link="/proj/en/devrel">Developer Relations</uri>. If you feel
like you are being ordered around like a slave to do something, you
are wrong: you have your own free will and your own rights. Please
note that you also have your own responsibilities as well and that
<uri link="/proj/en/devrel">Developer Relations</uri> has the rights
 to give disciplinary action to you too.
</p>

<p>
If you get harassed by an end-user, or <b>any</b> developer, please
ignore them! If it persists, please report the problem. Don't start
another war. Breath slowly and relax.
</p>

</body>
</section>

<section>
<title>Tips</title>

<subsection>
<title>ChangeLogs</title>
<body>

<ul>
  <li>
    Make your ChangeLogs readable to the average end-user: try to keep
    things simple and short if you can but provide any critical
    information if you need to. Remember that ChangeLogs need to be
    written in good, "correct" English even if they are
    short. Punctuation is essential.
  </li>
  <li>
    Please don't use "Gentooified" language, except for
    accepted terms such as "ebuild" and "version bump". If you are being
    verbose, please use the correct punctuation and quote marks.
  </li>
</ul>
<ul>
  <li>
    Any function names should be encapsulated in quotation marks
    or speech marks.
  </li>
  <li>
    Be verbose: "Version bump." is good, however "Version bump;
    see bug #..." is even better. This not only helps users, but
    it also helps other developers as well.
  </li>
  <li>
    Don't use phrases such as "Tested for months, should work."
    or "I think this should fix the problems." as something either
    does its job or it doesn't. It is much better to inform users
    to test your package thoroughly and to report any bugs to you.
  </li>
  <li>
    When referring to ebuild sections such as the homepage variable,
    use "HOMEPAGE" remembering to add the quotes and to use the
    correct case. This makes things a bit more precise, namely
    telling the reader that you changed the variable; rather than
    the homepage your package might go to when it starts up, for
    example.
  </li>
  <li>
    When using acronyms, please use the proper cases. For example,
    "ALSA", not "alsa", "Win4Lin" not "win4lin".
  </li>
</ul>

</body>
</subsection>

<subsection>
<title>Ebuilds</title>
<body>

<ul>
  <li>
    Don't bump ebuilds continuously unless there really <b>is</b> a
    benefit or a security fix which is important. Unnecessary
    examples of bumping include situations where a patch for the support of a new
    kernel version is added, for example; unless the ebuild is out
    of date from the date of the bug report.
  </li>
  <li>
    Don't make ebuilds do unnecessary steps or do things outside of
    the package which may be un-needed: packaging unsupported
    patches as an "addition" is a bad idea unless they are either
    tested well by both you and your target audience and that they
    are code-checked for security.
  </li>
  <li>
    Ebuilds should be well commented if non-standard code or large
    chunks of code are used. Such ebuilds should also keep the user
    well informed: don't make the user wait for a long time during a
    long silent operation unless notification is given. At the same time,
    don't shower the user with a stream if information.
  </li>
  <li>
    Respect developers' coding preferences and don't change the
    ebuild syntax to remove stress on the CVS server, and to make
    things simpler for everybody unless you feel there is a real
    benefit in adding syntax cleanups - for example, faster
    compilation or a better more verbose output to the end-user.
  </li>
</ul>

</body>
</subsection>

<subsection>
<title>IRC</title>
<body>

<ul>
  <li>
    Be nice and respectful of everybody - even if they are
    bombarding you with messages.
  </li>
  <li>
    Do not abuse or discriminate users - whether as a joke or as
    sarcasm.
  </li>
  <li>
    Answer any questions to the best of your knowledge - it is best
    that you do not answer what you don't know to avoid
    confusion. There is no policy on any collateral damage caused
    by developers to users however: if the developer did any contact
    such as SSHing into a users' box, the developer would be held
    accountable for any screwups. As a result, we don't really recommend it.
  </li>
  <li>
    If you are a developer with operator powers, you must <b>not</b>
    abuse them - if you have a disagreement with a user resolve the
    issue peacefully and do not resort to kicking them or even
    kickbanning them unless the situation is really severe and other
    developers approve of critical measures.
  </li>
  <li>
    ``#gentoo-'' channels are clean-language channels. Since the
    founding of #gentoo we have prided ourselves on providing
    professional interactions with our users and other
    developers. If you are given operator powers, Developer
    Relations requires that they are used wisely when both developers
    and users cause problems and break up the cleanliness of the
    channels.
  </li>
</ul>

</body>
</subsection>

<subsection>
<title>Forums</title>
<body>

<ul>
  <li>
    Be nice and respectful of everybody - even if they are asking
    the most unimaginable questions. Either voice your opinion
    courteously, or voice no opinion.
  </li>
  <li>
    Follow the forum rules and try keeping to the discussion rather
    than veering off course.
  </li>
  <li>
    Try to be active in development. If users are asking why
    something was added, please explain it. If users are asking why
    something is missing, explain that. Use your knowledge and help
    out if you can. At the same time, if you don't know, don't confuse
    people.
  </li>
</ul>

</body>
</subsection>

<subsection>
<title>Mail</title>
<body>

<ul>
  <li>
    Don't use HTML mail - it can cause annoyances - and it is
    recommended that you use a word-wrapping mail client if sending
    out plain text messages. Some people also block HTML mail which
    may cause correspondance problems.
  </li>
  <li>
    If you use spam-filtering software, check your collection of
    spam every so often just in case a developer's or a user's mail
    gets tagged as spam.
  </li>
  <li>
    When replying to user or developer mail, be both courteous and
    don't simply refer the user along to another developer - try to
    explain why things are as they are if you can. An example of
    good, well thought reply goes along the lines of: "I am
    referring you to <c>&lt;insert name here&gt;</c>
    as <c>&lt;person&gt;</c> is now the maintainer of the
    package. Any further issues should be addressed
    to <c>&lt;person&gt;</c>. Sorry for any inconvinience."
  </li>
</ul>

</body>
</subsection>

</section>

<section>
<title>If something goes wrong</title>
<body>
<p>
If things do go wrong, we encourage you to talk to Developer
Relations: whether you might be having inter-developer conflicts, or
conflicts with end-users,
<uri link="/proj/en/devrel">Developer Relations</uri> would like to
help you with a peaceful resolution of the problem.
</p>
</body>
</section>

</sections>
