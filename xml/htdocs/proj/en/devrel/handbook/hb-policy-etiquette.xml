<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/devrel/handbook/hb-policy-etiquette.xml,v 1.10 2005/06/08 17:00:23 plasmaroo Exp $ -->

<sections>
<section>
<title>Introduction and some simple suggestions</title>
<body>

<p>
These suggestions are designed to be an easy-to-follow guide to what <uri
link="/proj/en/devrel">Developer Relations</uri> would <e>expect</e>
to be good developer etiquette. They should cover most areas
and should be employed wherever they can be.</p>

<p>
That doesn't mean that we expect you to follow this guide to the
bullet point; nor do we expect you even agree with it - we do expect,
however that all developers maintain reasonable standards of behaviour
with our community - whether to other developers or users.  However,
you may be subject to sanctions or a suspension if a resonable
standard is not met.
</p>

<p>
By reasonable standards we don't want you to feel that we are not
allowing you to say anything, rather, we believe that <e>how</e> you say it,
and the method and professionalism in how you express your opinion
defines whether you meet the reasonable standards or not, since, as a
developer, what you say and do reflects upon Gentoo and the project as
a whole. We just require you to be equally respectful to developers
and users alike, and to value the opinion of everybody - even if you
think it's totally wrong.
</p>

<p>
You should try to use good spelling and grammar everywhere: whether
in a CVS commit message, a ChangeLog, or even on IRC if you want to be
really nice and make somebody's day. But don't worry; we won't really
mind if you don't. You might not notice it, but by taking some
effort to clean things up, the amount of time it takes to read your
sentences is greatly lowered. However, it is also important not to
lose the rope at the same time and make something too eloquent that
takes too long to parse.
</p>

</body>
</section>

<section>
<title>What you should try not to do</title>
<body>

<p>
One should try to not be rude, abusive or impolite under any
circumstances. Sometimes, just one sarcastic comment can change the
tone to the reader. If you think you might give somebody a bad 
as a result of your comment, and if you <e>really</e> need to say it,
make sure people understand that you are not trying to be
offensive.
</p>

<p>
Please remember that you are an official representative of Gentoo. In
this capacity, you are expected to maintain a certain level of
professionalism and courtesy in your day-to-day interactions with
users and other developers.
</p>

</body>
</section>

<section>
<title>Tips</title>

<subsection>
<title>ChangeLogs</title>
<body>

<ul>
  <li>
    Make your ChangeLogs readable to the average end-user: try to keep
    things simple and short if you can, but provide any critical
    information as needed. Remember that ChangeLogs need to be
    written in good, "correct" English even if they are
    short. Punctuation is essential.
  </li>
  <li>
    Please don't use "Gentooified" language, except for
    accepted terms such as "ebuild" and "version bump". If you are being
    verbose, please use the correct punctuation and quote marks.
  </li>
</ul>
<ul>
  <li>
    Any function names should be encapsulated in quotation marks
    or speech marks.
  </li>
  <li>
    Be verbose: "Version bump." is good, however "Version bump;
    see bug #..." is even better. This not only helps users, but
    it also helps other developers as well.
  </li>
  <li>
    Don't use phrases such as "Tested for months, should work."
    or "I think this should fix the problems." as something either
    does its job or it doesn't. It is much better to inform users
    to test your package thoroughly and to report any bugs to you.
  </li>
  <li>
    When referring to ebuild sections such as the homepage variable,
    use "HOMEPAGE" remembering to add the quotes and to use the
    correct case. This makes things a bit more precise, namely
    telling the reader that you changed the variable; rather than
    the homepage your package might go to when it starts up, for
    example.
  </li>
  <li>
    When using acronyms, please use the proper cases. For example,
    "ALSA", not "alsa", "Win4Lin" not "win4lin".
  </li>
</ul>

</body>
</subsection>

<subsection>
<title>Ebuilds</title>
<body>

<ul>
  <li>
    Try to not bump ebuilds continuously unless there really <b>is</b> a
    benefit or a security fix which is important. Unnecessary examples
    of bumping include:
    <ul>
      <li>
        You change minor spelling errors in script file comments, script file
        indentation or something similar.
      </li>
      <li>
        You patch a non-kernel ebuild to support a new kernel version (or
        a new version of a library), allowing more users to install your ebuild,
        but not changing anything for existing users of the current revision.
      </li>
    </ul>
    As a general rule, fixes with non-trivial changes to any of the installed
    files of any ebuild warrant a revision bump. Put differently: If your fix
    changes the behaviour for existing users, you bump so that they know they
    can upgrade. See ebuild policy for more details.
  </li>
  <li>
    Respect developers' coding preferences. Unneccessarily changing
    the syntax of an ebuild increases the load on the CVS server and
    can cause complications for others. Syntax changes should only be
    done if there is a real benefit, such as faster compilation,
    improved information for the end user, or compliance to Gentoo
    policies.
  </li>
</ul>

</body>
</subsection>

<subsection>
<title>IRC</title>
<body>

<ul>
  <li>
    Be nice and respectful of everybody - even if they are
    bombarding you with messages.
  </li>
  <li>
    Do not abuse or discriminate users or developers - whether as a joke or as
    sarcasm.
  </li>
  <li>
    Answer any questions to the best of your knowledge - it is best
    that you do not answer what you don't know to avoid
    confusion. There is no policy on any collateral damage caused
    by developers to users however: if the developer did any contact
    such as SSHing into a users' box, the developer would be held
    accountable for any screwups. As a result, we don't really recommend it.
  </li>
  <li>
    If you are a developer with operator powers, you must <b>not</b>
    abuse them - if you have a disagreement with a user resolve the
    issue peacefully and do not resort to kicking them or even
    kickbanning them unless the situation is really severe and other
    developers approve of critical measures.
  </li>
  <li>
    #gentoo and #gentoo-dev are clean-language channels; other
    #gentoo- channels have policies set by their respective channel
    owners. Because the majority of traffic on #gentoo-dev is from
    Gentoo developers, people perceive this channel as officially
    representing Gentoo. In order for us to present Gentoo in a
    professional manner, we request that developers keep #gentoo-dev a
    'clean-language' channel.
  </li>
</ul>

</body>
</subsection>

<subsection>
<title>Forums</title>
<body>

<ul>
  <li>
    Be nice and respectful of everybody - even if they are asking
    the most unimaginable questions. Either voice your opinion
    courteously, or voice no opinion.
  </li>
  <li>
    Follow the forum rules and try keeping to the discussion rather
    than veering off course.
  </li>
  <li>
    Try to be active in development. If users are asking why
    something was added, please explain it. If users are asking why
    something is missing, explain that. Use your knowledge and help
    out if you can. At the same time, if you don't know, don't confuse
    people.
  </li>
</ul>

</body>
</subsection>

<subsection>
<title>Mail</title>
<body>

<ul>
  <li>
    Don't use HTML mail - it can cause annoyances - and it is
    recommended that you use a word-wrapping mail client if sending
    out plain text messages. Some people also block HTML mail which
    may cause correspondance problems.
  </li>
  <li>
    When replying to user or developer mail, be both courteous and
    don't simply refer the user along to another developer - try to
    explain why things are as they are if you can. An example of
    good, well thought reply goes along the lines of: "I am
    referring you to <c>&lt;insert name here&gt;</c>
    as <c>&lt;person&gt;</c> is now the maintainer of the
    package. Any further issues should be addressed
    to <c>&lt;person&gt;</c>. Sorry for any inconvenience."
  </li>
</ul>

</body>
</subsection>

</section>

</sections>
