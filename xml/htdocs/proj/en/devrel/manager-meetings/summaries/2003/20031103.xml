<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/proj/en/devrel/manager-meetings/summaries/2003/20031103.xml">
<title>Gentoo Managers' Meeting Summary</title>
<subtitle>3 Nov. 2003</subtitle>
<date>6 Nov. 2003</date>
<author title="Author">Grant Goodyear</author>
<author title="Editor">Tal Peer</author>

<abstract>This meeting began at 1804 UTC, and the guest chair was liquidx.  The end of
daylight-savings time caused some confusion, so attendence was a bit thinner
than usual. The raw log is available <uri link="/proj/en/devrel/manager-meetings/logs/2003/20031103.txt">here</uri>.</abstract>


<chapter>
<title>Project Status Updates</title>
<section><body><p>
Gentoo ombudsman g2boojum reported that he had been hearing "rumblings" by
developers that they were unsure of the direction that Gentoo was moving.  The
recent management restructuring (GLEP 4) was supposed to make navigating
Gentoo development easier, and g2boojum proposed that it would, in fact, do so
if the various top-level managers provided an update on what's happening with
their project every few months or so.  In fact, the docs and infrastructure
managers recently released updates to gentoo-core@gentoo.org that were very
nice.  Drobbins reported that there has been a push to get updates posted to
-dev, -core, and ultimately to the Gentoo project pages themselves.  He also
added that the managers have been communicating amongst themselves very well,
but status updates had previously been reported only to
gentoo-managers@gentoo.org.  G2boojum pointed out that the result of that
policy was that to devs and users it appeared that nothing was happening,
despite the fact that the various projects have, in fact, been incredibly
active.  Liquidx suggested some sort of project blog, while port001 suggested
something like http://qa.debian.org, and drobbins explained that pauldv was
already working on new XML to facilitate posting updates to the project
pages.  The net result is this issue is in the process of being solved.
</p></body></section>
</chapter>

<chapter>
<title>Portage-ng Strategy</title>
<section><body><p>
Drobbins outlined the strategy behind the development of a replacement to
portage currently named "portage-ng".  Drobbins began by explaining that, if
done right, portage-ng should be "beyond peoples' wildest expectations",
meaning that the goal is more than just a rewrite or a new version.  At the
moment, however, portage-ng is at the "blueprint stage", with the initial
planning being done by drobbins, carpaski, and pvdabeel.  
</p><p>
Drobbins went on to explain that one of the design goals of portage-ng is that
it would be a true community project.  He pointed out that the current
incarnation of portage is not a community project because the code is not very
modular.  Portage-ng, on the other hand, would have a "solid component or
'plug in' architecture" with a solid api for the various component.
Specifically, portage-ng itself would be lean, with the majority of the
functionality being located in components.  For example, config protection
would be a plugin, .keep files could be eliminated, policy plugins could
be written to ensure correct permissions, and one could even have a choice of
different dep-resolving plugins.  These plugins would likely be
written either in python (for rapid development) or in C (when required for
performance).
</p><p>
Having set up the overall goal, drobbins then made a prediction that the
portage-ng core would be written in a language that is "suitable for creating
an expert system", and that GNU prolog seems to be the most likely
language at the moment.  Liquidx asked about ocaml, and drobbins replied that
ocmal was, indeed, being considered, although drobbins noted that ocaml has
"limited native machine support".  The advantages of GNU prolog include the
facts that it can be compiled, or run bytecode, or run in an interpreter, and
that it has C and python APIs. In any event, the goal is to write the core in
a functional/logic programming language such that portage-ng would be an
expert system to operate on the metadata contained in ebuilds.  That said,
nothing is set in stone yet.  The plan is to have a roadmap and a portage-ng
page online before the end of the year.  An initial portage-ng architecture
schematic can be found at http://www.gentoo.org/~drobbins/portage-ng.pdf.
</p><p>
In passing, drobbins noted that portage-ng would have zeroconf (rendezvous)
support to detect rsync and distfiles mirrors on a LAN.  In fact, portage will
be patched with zeroconf support fairly soon.
</p><p>
Port001 asked about whether or not portage-ng would use a database, to which
carpaski replied "not necessarily".  Drobbins replied that databases will be
supported, but that there would also be a good "on-disk default".  
</p><p>
Further discussion about portage-ng will be on the
gentoo-portage-dev@gentoo.org mailing list.
</p></body></section>
</chapter>

<chapter>
<title>Open Floor</title>
<section><body><p>
The floor was opened for additional dev discussions, but no new substantive
issues were raised.
</p><p>
Meeting adjourned at 1902 UTC.
</p></body></section>
</chapter>
</guide>
