<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/infrastructure/cvs-migration.xml,v 1.1 2006/04/30 08:17:47 antarus Exp $ -->

<guide link="/proj/en/infrastructure/cvs-migration.xml" lang="en" disclaimer="draft">
<title>CVS Migration Tracking Page</title>

<author title="Author">
  <mail link="antarus@gentoo.org">Alec Warner</mail>
</author>

<abstract>
This page was created to track progress regarding the migration of Gentoo's
CVS repositories to another versioning control system.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.0</version>
<date>2006-04-30</date>
<chapter>
<title></title>
<section>
<title>Reasons for Migration</title>
<body>
<p>


</p>
</body>
</section>

<section>
<title>Milestones for success</title>
<body>
<ul>
    <li>Repoman Support:  Repoman and related tools need updating to whatever
	replacement VCS is decided on.</li>
    <li>Portage regen tools on the master mirror:  Presently some custom scripts
	generate the current tree as we know it ( cvs -> rsync ).  These tools must
	be adapted to use the new VCS.</li>
    <li>Developer Documentation:  New documentation on how to use the replacement VCS
	system.</li>
    <li>Developer Training:  Having a test checkout for Developeres to train on and learn
	with.  Time and sessions to train developers on the new features and benefits of
	the new VCS.</li>
    <li>Massive Testing:  Just mass testing by developers of the new VCS system to attempt
	to discover all issues prior to it entering a production state.</li>
</ul>
</body>
</section>
<section>
<title>Version Control Systems under consideration</title>
<body>
<table>
	<tr>
	    <th>System</th>
	    <th>Pros</th>
	    <th>Cons</th>
	    <th>Full Checkout</th>
	    <th>Space Considerations</th>
	    <th>Bandwidth Usage</th>
	    <th>Others?</th>
	</tr>
	<tr>
	    <ti>Subversion</ti>
	    <ti>Atomic Commits,
		Merging, Tagging, Branching is a copy operation,
		Versioned Metadata,Directory Versioning, Annotation</ti>
	    <ti>Twice the disk space</ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	</tr>
	<tr>
	    <ti>GIT</ti>
	    <ti>Annotation,
		Two, interchangeable, on-disk formats are used: 
		An efficient, packed format that saves space and network bandwidth.
		An unpacked format, optimized for fast writes and incremental work.</ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	</tr>
	<tr>
	    <ti>Mercurial</ti>
	    <ti>Atomic Commits,Annotation</ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	</tr>
	<tr>
	    <ti>Bazaar/BZR</ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	    <ti></ti>
	</tr>
</table>
</body>
</section>
</chapter>
</guide>
