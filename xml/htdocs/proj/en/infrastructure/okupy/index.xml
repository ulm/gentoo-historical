<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/project.xsl" type="text/xsl"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE project SYSTEM "/dtd/project.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/infrastructure/okupy/Attic/index.xml,v 1.1 2011/08/22 19:53:25 tampakrap Exp $ -->

<project>
 
  <name>okupy</name>
  <longname>Okupy Django CMS</longname>

  <date>22 Aug 2011</date>
  
  <author title="Author">
    <mail link="tampakrap"/>
  </author>

  <description>
  	A Django CMS for the Gentoo website, that offers an LDAP web interface,
	and Beacon as WYSIWYG editor to edit the XML files.
  </description>

  <longdescription>
    
    <p>
      <b>This is a Gentoo GSoC 2011 project.</b>
    </p>
    
    <p>
	A replacement for the gentoo.org web pages, that include the documentation,
	project, news and other informational pages, via a Django CMS.
    </p>

	<p>
	Currently Gentoo employs a number of websites with separate user accounts.
	LDAP servers are used for the developers only. Developers update their LDAP
	data through a perl script. Complaints about difficult handling of forgotten
	passwords occur frequently.	A web interface around LDAP will make LDAP more
	user friendly, plus it can be easily extended to support non-developers,
	just by adding a new schema and OU (organizational unit) for them.
	</p>

	<p>
	The choice of Django was made for several reasons. It is a web framework based
	on Python, that is a programming language very easy to learn and maintain.
	A Django project is equally easy to maintain and extend. In Django parlance,
	the term "project" refers to a collection of pluggable, modular applications,
	that together form a more complex web application, the project. This
	modularity will let the Gentoo Community easily write new Django applications
	on top of the main instance, in order to enhance its features. Apart from
	the above, the Django and Python upstream communities are doing a great
	job, notably by releasing often, especially for security reasons.
	</p>

	<p>
	Today, documentation is stored in XML files in a CVS repository. An XML to
	HTML converter (wrapped up with Ruby), called Gorg, is currently used to
	display the actual result. People who want to contribute to documentation
	or translations have to locally install a Gorg instance and check out the
	CVS repository, which can be rather cumbersome. Having a WYSIWYG editor
	embedded in the gentoo.org website would be preferred, as it will make it
	really easy to contribute to documentation, or even send improvements
	through bugzilla to the appropriate documentation or translation team.
	</p>

	<p>
	By all appearances Gorg has been abandoned as a project. This has resulted
	in difficulty in maintaining the Gentoo website, and also makes the work of
	updating the website's design or functionality all the more troublesome.
	Therefore, a complete redesign is easier than resurrecting the old system.
	The overall end result of the new system will be a complete rewrite of the
	old Gentoo website, including everything under www.gentoo.org
	</p>

  </longdescription>
  
  <dev role="member">tampakrap</dev>

  <resource link="http://git.overlays.gentoo.org/gitweb/?p=proj/okupy.git;a=summary">
    Git Repository
  </resource>
  <resource link="http://www.google-melange.com/gsoc/proposal/review/google/gsoc2011/tampakrap/1">
    Full GSoC Proposal
  </resource>
  <resource link="http://beaconeditor.org/">
    Beacon editor official website
  </resource>

</project>
