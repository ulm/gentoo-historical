<?xml version='1.0' encoding="utf-8"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/proj/en/hardened/selinux-quickstart.xml">
<title>Gentoo Linux SELinux Quick Start Guide</title>
<author title="Editor">
  <mail link="method@gentoo.org">Joshua Brindle</mail>
</author>
<author title="Author">
  <mail link="pebenito@gentoo.org">Chris PeBenito</mail>
</author>
<abstract>
This will provide instructions for getting an SELinux installation running.
</abstract>
<version>1.0</version>
<date>25 May 2003</date>

<chapter>
<title>SELinux QuickStart Guide</title>

<section>
<title>Installing SELinux</title>
<body>

<warn>SELinux is currently only developed on x86.</warn>

<p>First, remove your old profile, and enable the SELinux profile.</p>
<pre>
# rm -f /etc/make.profile
# ln -sf /usr/portage/profiles/selinux-x86-1.4 /etc/make.profile
</pre>
<p>Now configure the kernel.  Selinux-sources or hardened-sources must be used;
these are the only kernels that contain the linux security module patch and SELinux
security module.  The kernel must be compiled with security module support, SELinux
support, devfs and devpts.</p>
<pre caption="Location and required options under menuconfig">
<comment>Under "Security options"</comment>
[*] Enable different security models
[ ] Socket and Networking Security Hooks
&lt;*&gt; Capabilities Support
[*] NSA SELinux Support
[*]   NSA SELinux Development Support
[ ]   NSA SELinux MLS policy (EXPERIMENTAL)

<comment>Under  "File systems"</comment>
[*] /dev file system support (EXPERIMENTAL)
[*]   Automatically mount at boot
[ ]   Debug devfs
[*] /dev/pts file system for Unix98 PTYs
</pre>
<p>Now compile and install the kernel and modules, but do not reboot.
Enable devpts to mount at boot.  In /etc/fstab add:</p>
<pre>
none	/dev/pts	devpts	gid=5,mode=620	0 0
</pre>
<p>Merge the libraries, utilities and base-policy.  The /usr/src/linux
symbolic link must point to the selinux-sources or hardened-sources directory!</p>

<pre># emerge selinux-small</pre>

<p>Merge SELinux-patched packages:</p>

<pre># emerge coreutils findutils openssh procps psmisc tar util-linux</pre>
<note>coreutils is currently masked in package.mask, you must remove it</note>

<p>There are other packages that have SELinux patches, but are optional.  These
should be remerged if they are already installed, so the SELinux patches are
applied:</p>
<p>app-admin/logrotate<br/>
sys-apps/stat<br/>
dev-util/strace<br/>
sys-apps/vcron (currently the only cron patched for SELinux)</p>

<impo>If converting a mainline Gentoo machine to SELinux, unmerge pam-login, 
textutils, fileutils and sh-utils:</impo>

<pre caption="Remove unused packages from mainline Gentoo">
# emerge -C pam-login textutils fileutils sh-utils</pre>

<p>Compile and install policy, and label filesystems.</p>

<pre>
# cd /etc/security/selinux/src/policy
# make policy
# make install
# make relabel
</pre>
<p>Reboot using the new SELinux kernel.  Relabel again to ensure all files
are labeled correctly (some files may have been created during shutdown and
reboot)</p>
<pre>
# cd /etc/security/selinux/src/policy
# make relabel
</pre>
</body>
</section>
</chapter>
<chapter>
<title>FAQ/Troubleshooting</title>
<section>
<title>"My selinux-small compile fails with a message similar to this:"</title>
<body>
<pre>
 * Compiling checkpolicy
make -C checkpolicy LSMDIR=../../../lsm-2.4
make[1]: Entering directory
`/var/tmp/portage/selinux-small-2003011510-r3/work/selinux/module/checkpolicy'
make[1]: *** No rule to make target `ebitmap.o', needed by `checkpolicy'.  Stop.
make[1]: Leaving directory
`/var/tmp/portage/selinux-small-2003011510-r3/work/selinux/module/checkpolicy'
make: *** [all] Error 2

!!! ERROR: sys-apps/selinux-small-2003011510-r3 failed.
!!! Function src_compile, Line 54, Exitcode 2
!!! Checkpolicy compilation failed
</pre>

<p>Ebitmap.c exists in the kernel sources.  The /usr/src/linux symbolic link must point
to the installed selinux-sources or hardened-sources.  Newer versions of selinux-small
will now check for correct kernel sources.  To fix, create a symbolic link to
the correct kernel sources (selinux-sources-2.4.20-r4 in this example):</p>

<pre>
# rm -f /usr/src/linux
# ln -sf /usr/src/linux-2.4.20-selinux-r4 /usr/src/linux</pre>
</body>
</section>
<section>
<title>"I can log in at the console, but not over ssh."</title>
<body>
<p>The openssh is most likely not labeled correctly, so it isnt running in the
right context.  Relabel, then restart sshd.</p>
<pre>
# rlpkg openssh
# run_init /etc/init.d/sshd restart
</pre>
</body>
</section>
<section>
<title>"I cant 'newrole -r sysadm_r' from my user."</title>
<body>
<p>The user must be allowed to use the sysadm_r role.  Modify the users file
(/etc/security/selinux/src/policy/users).  To allow the user 'pebenito' the
ability to newrole to sysadm_r, add to the end of the file add something
like:</p>

<pre>user pebenito roles { user_r sysadm_r };</pre>

<p>Then reload the policy</p>
<pre>
# cd /etc/security/selinux/src/policy
# make policy
# make install
# make load
</pre>
</body>
</section>
</chapter>
</guide>
