<?xml version='1.0' encoding="utf-8"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/proj/en/hardened/selinux/selinux-faq.xml">
<title>SELinux HOWTO and FAQ</title>
<author title="Author">
  <mail link="pebenito@gentoo.org">Chris PeBenito</mail>
</author>
<abstract>
Frequently asked questions and HOWTOs for SELinux
</abstract>
<license/>
<version>1.1</version>
<date>16 October 2003</date>

<chapter><title>HOWTO: Load policy into a running SELinux kernel</title>
<section><body>
<p>
  This requires you to be in the <i>sysadm_r</i> role.
</p>
<pre>
# <c>cd /etc/security/selinux/src/policy</c>
# <c>make load</c>
# <c>make initrd</c>
</pre>
<p>
  The initrd does not have to be regenerated (third command) every time policy
  is loaded.  It does need to be done once before rebooting, to ensure the policy
  in the initrd is consistent, otherwise the old policy will be loaded.
</p>
</body></section>
</chapter>

<chapter><title>HOWTO: Change roles</title>
<section><body>
This requires your user have access to the target role.  This example
is for changing to the <i>sysadm_r</i> role.
<pre>
# <c>newrole -r sysadm_r</c>
</pre>
</body></section>
</chapter>

<chapter><title>HOWTO: Specify available roles for a user</title>
<section><body>
<p>
  The SELinux identity determines the roles available to a user.  Modify the
  users file (/etc/security/selinux/src/policy/users).  For example, to allow
  the user <i>pebenito</i> the ability to have roles <i>staff_r</i> and <i>sysadm_r</i>,
  add to the file:
</p>
<pre>user pebenito roles { staff_r sysadm_r };</pre>
<p>
  Then <uri link="#doc_chap1">load</uri> the policy.  See the 
  <uri link="selinux-policy.xml#doc_chap3">Selinux Policy Overview</uri> for
  additional information on SELinux identities.
</p>
</body></section>
</chapter>

<chapter><title>HOWTO: Relabel filesystems</title>
<section><body>
<p>
  This requires you to be in the <i>sysadm_r</i> role.
</p>
<pre>
# <c>cd /etc/security/selinux/src/policy</c>
# <c>make relabel</c>
</pre>
</body>
</section>
</chapter>

<chapter><title>HOWTO: Start daemons in the correct domain</title>
<section><body>
<p>
  Controlling daemons that have init scripts in /etc/init.d is slighly
  different in SELinux.  The <i>run_init</i> command must be used to run
  the scripts, to ensure they are ran in the correct domain.  The command
  can be ran normally, except the command is prefixed with <i>run_init</i>.
  This requires you to be in the <i>sysadm_r</i> role.
</p>
<pre caption="run_init examples">
# <c>run_init /etc/init.d/ntpd start</c>
# <c>run_init /etc/init.d/apache2 restart</c>
# <c>run_init /etc/init.d/named stop</c>
</pre>
</body></section>
</chapter>

<chapter><title>HOWTO: Install kernel modules into the SELinux initrd</title>
<section><title>Makefile initrd options</title><body>
<p>
   In the policy Makefile, under the comments at the beginning of the file
   are the configuration options for the initrd.  The default settings do not
   install any kernel modules into the initrd.  The settings must be altered
   to install the modules.
</p>
<pre caption="Default initrd options">
# initrd options
MKINITRD = /sbin/mkinitrd
# kernel version, defaults to current running kernel
KV = $(shell uname -r)
INITRD = /boot/initrd.gz
# extra options
EXTRAOPT = -f --omit-scsi-modules --omit-raid-modules --omit-lvm-modules
</pre>
</body></section>
<section><title>Set the initrd filename</title>
<body>
<p>
  First, the initrd filename must be modified to have a kernel version.
  Modify the <i>INITRD</i> line to add in the kernel version.
</p>
<pre>
# initrd options
MKINITRD = /sbin/mkinitrd
# kernel version, defaults to current running kernel
KV = $(shell uname -r)
INITRD = /boot/initrd<comment>-$(KV)</comment>.gz
# extra options
EXTRAOPT = -f --omit-scsi-modules --omit-raid-modules --omit-lvm-modules
</pre>
<p>
  During creation of the initrd, <i>$(KV)</i> will be replaced with the kernel
  version, resulting in the initrd having a name such as <i>initrd-2.4.21-selinux-r3.gz</i>.
</p>
</body></section>
<section><title>Enable the modules</title>
<body>
<p>
  Next, the appropriate modules must be enabled.  Remove the respective
  <i>--omit-*</i> options from the <i>EXTRAOPT</i> line.  Other available options
  can be found in the mkinitrd man page, and can be added to the
  <i>EXTRAOPT</i> line.
</p>
<pre>
# initrd options
MKINITRD = /sbin/mkinitrd
# kernel version, defaults to current running kernel
KV = $(shell uname -r)
INITRD = /boot/initrd-$(KV).gz
# extra options
EXTRAOPT = -f <comment>--omit-scsi-modules --omit-raid-modules --omit-lvm-modules</comment>
</pre>
<p>
  For example, to enable SCSI modules, remove the <i>--omit-scsi-modules</i>
  option.
</p>
</body></section>
<section><title>Build the initrd</title>
<body>
<p>
  Finally, the initrd can be built.  If the initrd is for the current running
  kernel, the initrd can be built as usual.  Otherwise, the version must be
  specified on the command line, using <i>KV=</i>.  Run one of the following
  in the policy directory:
</p>
<pre caption="Build options">
<comment>For building an initrd for the current running kernel:</comment>
# <c>make initrd</c>

<comment>For building for another kernel version, for example 2.4.21-selinux-r3:</comment>
# <c>make initrd KV=2.4.21-selinux-r3</c>
</pre>
<p>
  Now the bootloader will have to be modified to use the new initrd.  Each time
  a new kernel is installed, or the policy is changed, the initrd should be
  regenerated.
</p>
</body></section>
</chapter>

<chapter><title>FAQ: Cannot log in over ssh</title>
<section><title>"I can log in at the console, but not over ssh."</title>
<body>
<p>
  Openssh is most likely not labeled correctly, so it is not running in the
  right context.  Relabel openssh, then restart sshd.
</p>
<pre>
# <c>rlpkg openssh</c>
# <c>run_init /etc/init.d/sshd restart</c>
</pre>
<p>
  Also ensure your user has a valid shell.
</p>
</body></section>
</chapter>

<chapter><title>FAQ: Missing SELinux module during emerge</title>
<section><title>"I get this error when using emerge:"</title>
<body>
<pre>
!!! SELinux module not found. Please verify that it was installed.
</pre>
<p>
  This indicates that the portage SELinux module is missing or damaged.
  Remerge dev-python/python-selinux.
</p>
</body></section>
</chapter>

<!-- always keep this one as the bottom FAQ :) -->
<chapter><title>FAQ: Gentoo SELinux Demonstration Machine</title>
<section><body>
<p>
  This machine is not running user-mode linux, or in a chroot, it has SELinux
  mandatory access control.  No, you cannot install psybnc or an irc bot on the
  machine, unless you break the SELinux security and gain higher priviledge.
</p>
</body></section>
</chapter>
<!-- dont put anything below here, this demo machine faq should be the last one -->

</guide>
