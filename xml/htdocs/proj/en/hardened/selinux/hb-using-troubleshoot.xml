<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/hardened/selinux/hb-using-troubleshoot.xml,v 1.1 2011/10/23 13:00:13 swift Exp $ -->

<sections>
<version>0</version>
<date>2011-02-24</date>

<section>
<title>Unable To Load SELinux Policy</title>
<subsection>
<title>Problem Description</title>
<body>

<p>
If you notice that SELinux is not functioning at all, a quick run of
<c>sestatus</c> should give you closure if SELinux is enabled and loaded or not.
If you get the following output, no SELinux policy is loaded:
</p>

<pre caption="sestatus output">
SELinux status:                disabled
</pre>

<p>
If this is the case, read on in this section to find out how to troubleshoot and
resolve this.
</p>

</body>
</subsection>
<subsection>
<title>No Policy Installed</title>
<body>

<p>
One potential reason would be that there is no policy to load to begin with.
Take a look inside <path>/usr/share/selinux/strict</path> or
<path>/usr/share/selinux/targeted</path> (depending on your configuration) and
look for a file called <path>base.pp</path>. If no such file exists, you will
need to install the base policy. This policy is offered by the
<path>sec-policy/selinux-base-policy</path> package, but it is better to read up
on the chapter regarding <uri link="?part=2&amp;chap=1">Gentoo SELinux
Installation / Conversion</uri> as more important changes might be missing.
</p>

</body>
</subsection>
<subsection>
<title>Policy Not Loaded</title>
<body>

<p>
If the <path>base.pp</path> file exists in
<path>/usr/share/selinux/strict</path> (or <path>targeted/</path>), take a look
inside <path>/etc/selinux/strict/policy</path>. This location too should contain
a <path>base.pp</path> policy module (when a SELinux policy is loaded, it is
copied from the first location to the second).
</p>

<p>
If no <path>base.pp</path> file exists, install and load the policy:
</p>

<pre caption="Installing the base policy">
~# <i>semodule -n -B</i>
</pre>

<p>
This is a one-time operation - once installed and loaded, it will be reloaded
upon every reboot.
</p>

</body>
</subsection>
<subsection>
<title>Init Can Not Load the SELinux Policy</title>
<body>

<p>
During system boot, the <c>init</c> process is responsible for loading and
interacting with the SELinux policy in memory. If <c>init</c> does not support
SELinux, you will get no SELinux support in your environment.
</p>

<p>
To verify if <c>init</c> supports SELinux, we need to check if it uses the
<path>libselinux.so</path> shared object:
</p>

<pre caption="Checking if init supports SELinux">
~# <i>ldd /sbin/init</i>
        linux-vdso.so.1 =>  (0x00006ace30e84000)
	<comment>( You should see something similar to the following line: )</comment>
        libselinux.so.1 => /lib/libselinux.so.1 (0x00006ace30a46000)
        libc.so.6 => /lib/libc.so.6 (0x00006ace306e9000)
        libdl.so.2 => /lib/libdl.so.2 (0x00006ace304e5000)
        /lib64/ld-linux-x86-64.so.2 (0x00006ace30c68000)
</pre>

<p>
If this is not the case, make sure that <c>emerge --info</c> shows that the
selinux USE flag is in place, and reinstall <path>sys-apps/sysvinit</path>. If
the selinux USE flag is not in place, check your Gentoo profile and make sure it
points to a <path>selinux/v2refpolicy/...</path> profile.
</p>

</body>
</subsection>
</section>

<section>
<title>Unable to Log On</title>
<subsection>
<title>Problem Description</title>
<body>

<p>
If you are unable to log on in a particular situation (remote, local, as root,
as regular user, ...) there are a few possible problems which you might have
hit. However, to resolve them you'll need to be able to log on to the system as
<e>sysadm_r</e> in one way or the other.
</p>

<p>
If you can not log in as a <e>sysadm_r</e> user, disable SELinux (boot with
<c>enforcing=0</c>) so that no SELinux enforcements are made. Changes that you
make in permissive mode are equally effective as in enforcing mode.
</p>

</body>
</subsection>
<subsection>
<title>Incorrect Context</title>
<body>

<p>
In the majority of cases will you find that a security context is incorrect. Run
<c>sestatus -v</c> and compare the <e>Process contexts</e> or <e>File
contexts</e> that you see in the output with the next table.
</p>

<table>
<tr>
  <th>Process</th>
  <th>Context</th>
  <th>If wrong context...</th>
</tr>
<tr>
  <ti>Init context</ti>
  <ti>system_u:system_r:init_t</ti>
  <ti>
    First, verify that init itself is correclty labeled. Check the output of
    the previously run <c>sestatus -v</c> command for the
    <path>/sbin/init</path> file and make sure that it is set to
    system_u:object_r:init_exec_t. If that is not the case, relabel
    <path>sys-apps/sysvinit</path> using <c>rlpkg sysvinit</c>. Also make the
    same checks as in the <uri link="#doc_chap1">Unable To Load SELinux
    Policy</uri> section. Reboot your system and retry.
  </ti>
</tr>
<tr>
  <ti>agetty context</ti>
  <ti>system_u:system_r:getty_t</ti>
  <ti>
    Make sure that the <path>/sbin/agetty</path> binary is labeled
    system_u:object_r:getty_exec_t. If not, relabel the
    <path>sys-apps/util-linux</path> package using <c>rlpkg util-linux</c>. Then
    restart all the agetty processes using <c>pkill agetty</c> (they will
    automatically respawn).
  </ti>
</tr>
<tr>
  <th>File</th>
  <th>Context</th>
  <th>If wrong context...</th>
</tr>
<tr>
  <ti>/bin/login</ti>
  <ti>system_u:object_r:login_exec_t</ti>
  <ti>
    The login binary is part of <path>sys-apps/shadow</path>. Run <c>rlpkg
    shadow</c> to relabel the files of that package and retry logging in.
  </ti>
</tr>
<tr>
  <ti>/sbin/unix_chkpwd</ti>
  <ti>system_u:object_r:chkpwd_exec_t</ti>
  <ti>
    This binary is part of the <path>sys-libs/pam</path> package and is used by
    SSH when it is configured to use PAM for user authentication. Relabel the
    package using <c>rlpkg pam</c> and retry logging in.
  </ti>
</tr>
<tr>
  <ti>/etc/passwd</ti>
  <ti>system_u:object_r:etc_t</ti>
  <ti rowspan="2">
    The <path>/etc/passwd</path> and <path>/etc/shadow</path> must be labeled
    correctly, otherwise PAM will not be able to authenticate any user. Relabel
    the files through <c>restorecon /etc/passwd /etc/shadow</c> and retry
    logging in.
  </ti>
</tr>
<tr>
  <ti>/etc/shadow</ti>
  <ti>system_u:object_r:shadow_t</ti>
</tr>
<tr>
  <ti>/bin/bash</ti>
  <ti>system_u:object_r:shell_exec_t</ti>
  <ti>
    The users' shell (in this case, <c>bash</c>) must be labeled correctly so
    the user can transition into the user domain when logging in. To do so,
    relabel the <path>app-shells/bash</path> package using <c>rlpkg bash</c>.
    Then, try logging in again.
  </ti>
</tr>
</table>

</body>
</subsection>
</section>
</sections>
