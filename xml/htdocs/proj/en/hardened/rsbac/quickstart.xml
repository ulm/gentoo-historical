<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/proj/en/hardened/rsbac/quickstart.xml">

<title>Rule Set Based Access Control (RSBAC) for Linux - Quickstart</title>

<author title="Author">
  <mail link="albeiro@gentoo.pl">Michal Purzynski</mail>
</author> <author title="Editor">
  <mail link="kang@gentoo.org">Guillaume Destuynder</mail>
</author>

<abstract>This document will guide you through the installation of the
RSBAC on Gentoo Linux</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license
--> <!-- See http://creativecommons.org/licenses/by-sa/1.0 --> <license/>

<version>1.5</version>
<date>08 April 2005</date>

<chapter> <title>Introduction</title> <section> <body>

<p> This guide will help you to install RSBAC on
Gentoo Linux. It is assumed that the users have read
the <uri link="intro.xml">Introduction</uri> and the <uri
link="overview.xml">Overview</uri> already, so that they knows what is
RSBAC and its main concepts.  </p>

</body> </section> </chapter>

<chapter> <title>Installation of the RSBAC enabled kernel</title>
<section> <title>Emerging the RSBAC kernel</title> <body>

<p> This step is pretty straight forward, thanks to the way Gentoo
handles kernel installations. Start by emerging the rsbac-sources
kernel from your portage.  </p>

<note> There are two rsbac-sources kernel available: 
one is for the 2.4 kernel branch, the other is for the newer 2.6 kernel branch.	
</note>

<pre caption="RSBAC kernel installation (using the default profile and 2.6 kernel)">
# <i>emerge rsbac-sources</i>
</pre>

<pre caption="RSBAC kernel installation (using the 2.4 kernel, since Gentoo profile 2005.0)">
# <i>rm /etc/make.profile</i>
# <i>ln -s /usr/portage/profiles/default-linux/x86/2005.0/2.4/ /etc/make.profile</i>
# <i>emerge rsbac-sources</i>
</pre>

<impo> It is advised to enable softmode on your first RSBAC kernel. It
allows you to turn off the RSBAC enforcement in one reboot, for testing
or in case something goes wrong. Only turn it off once you are sure of
what you are doing, or of course, for a production kernel.  </impo>

</body> </section> <section> <title>Configuring the RSBAC kernel</title>
<body>

<p> We will now configure the kernel. It is recommended that you
enable the following options, in the "Rule Set Based Access Control
(RSBAC)" category: </p>

<pre caption="Configuring and compiling the RSBAC kernel">
<comment>Under "General RSBAC options"</comment>
[*] RSBAC proc support
[*] Check on init
[*] Support transactions
[*]   Randomize transaction numbers
[*] RSBAC debugging support
(400) RSBAC default security officer user ID

<comment>Under "User management"</comment>
[*] User management
<comment>Be sure to enable SHA1 in the Crypto API
Under "Cryptographic options" of the general kernel configuration, tick
[*]   SHA1 digest algorithm
</comment>
[*]     Use Crypto API Digest SHA1 (NEW)

<comment>Under "RSBAC networking options"</comment>
[*] RSBAC network support
[*]     Net device control
[ ]         Treat virtual devices as individuals
[*]         Individual network device logging
[*]     Net object control (sockets)
[*]         Control UNIX address family
[*] Also intercept network object read and write
[*]         Individual network object logging

<comment>(Do not turn on "RSBAC Maintenance Kernel", use softmode instead)</comment>

<comment>Under "Decision module (policy) options"</comment>
[*] Support for Registration of decision modules (REG)
[*]     Build REG sample modules
----------------------------
[*] RSBAC support for DAZuko policy <comment>(For malware/antivirus scanning)</comment>
DAZ Policy Options  --->
     (604800)     Scanning result lifetime in seconds

<comment>For each different policy/module you support you should check it's protection for AUTH module
and User Management module</comment>
[*] RSBAC support for FF policy
[*] RSBAC support for RC policy
[*] RSBAC support for AUTH policy
<comment>Please turn learning option off on production kernels. It is only used while setting up your RSBAC system.</comment>
AUTH Policy Options  --->
    [*]   AUTH learning mode support 
[*] RSBAC support for ACL policy
[*] RSBAC support for Linux Caps (CAP) policy
[*] RSBAC support for JAIL policy
[*] RSBAC support for PAX policy
[*] RSBAC support for System Resources (RES) policy

<comment>Under "Softmode and switching"</comment>
[ ] RSBAC policies switchable
[*] RSBAC soft mode <comment>(Turn that off on production kernels)</comment>
[*]     Individual module softmode support

<comment>Under "Logging": all except "Log to remote UDP network socket"
unless you want to log to remote machine</comment>

<comment>Under "RSBAC symlink redirection"</comment>
[*]   RSBAC symlink redirection
[*]       Add user ID number
[*]       Add RC role number

<comment>Under "Other RSBAC options"</comment>
[*] Intercept sys_read and sys_write
[*] Intercept Semaphore IPC operations
[*] Control DAC process owner (seteuid, setfsuid)
[*] Hide processes in /proc
[*] Support freezing of RSBAC configuration
[*] RSBAC check sys_syslog
</pre>

<note> If you plan to run a X Window server (such as X.org or XFree86),
please also enable <c>"[*] X support (normal user MODIFY_PERM access
to ST_ioports)"</c>.  
Please also see <uri link="http://www.gentoo.org/proj/en/hardened/hardenedxorg.xml">Using Xorg on Hardened Gentoo</uri></note>

<p> We will now configure PaX which is a complement of the RSBAC hardened
kernel. It is also recommended that you enable the following options,
in the "Security options ---> PaX" section.  </p>

<pre caption="Configuring PaX kernel options">
[*] Enable various PaX features
PaX Control  --->
    [*] Support soft mode <comment>(Turn that option off on a production kernel)</comment>
    [ ] Use legacy ELF header marking
        Use ELF program header marking MAC system integration (direct)  --->
        (X) direct

Non-executable pages  --->
    [*] Enforce non-executable pages (NEW)
    [*]   Paging based non-executable pages
<comment>(You usually want to select the PAGEEXEC method on x86 since on newer PaXs,
revert to SEGMEXEC if you are having issues)</comment>
    [*]   Segmentation based non-executable pages (NEW)
    [*] Restrict mprotect()
    [ ]   Disallow ELF text relocations <comment>(This option breaks too much applications as of now)</comment>

Address Space Layout Randomization  --->
    [*] Address Space Layout Randomization
    [*]   Randomize user stack base
    [*]   Randomize mmap() base
</pre>

<note> You should refer to the <uri
link="http://pax.grsecurity.net">PaX</uri> website for more information
about PaX.  </note> <note> You must use the RSBAC admin utilities
to manage PaX, instead of chpax or paxctl with your RSBAC kernel.
You will be able to move to the PaX item and set the usual PaX flags.
</note>

<pre caption="Managing PaX flags">
# <i>rsbac_fd_menu /path/to/the/target/item</i>
</pre>

<p> You can now compile and install the kernel as you would do with a
normal one concerning the other options.  </p>

<impo> It is strongly suggested to build a second kernel without
the softmode options, neither the AUTH option, in order to use in
a production environment. Only do that once you finished testing and
setting up policies, as it'll remove the possiblity of switching off
the access control system.  </impo>

</body> </section> </chapter>

<chapter> <title>Installation of the RSBAC admin utilities</title>
<section> <body>

<note> Please make sure you at least started to build your RSBAC kernel 
before emerging the RSBAC admin utilities, as you won't be able to do so
otherwise.</note>

<p> In order to administrate your RSBAC enabled Gentoo, some userspace
utilites are required. Those are included in the rsbac-admin package
and it needs to be installed.  </p>

<pre caption="Installing the RSBAC admin utilities">
# <i>emerge rsbac-admin</i>
</pre>

<p> Once emerged, the package will have created a new user account on your
system (secoff, with uid 400). He will become the security administrator
during the first boot. This is the only user, who is able to change the
RSBAC configuration. He will commonly be called the Security Officer.
</p>

<impo> Please set-up a <e>secure</e> password for the secoff user.
</impo>

<pre caption="Setting up a password for the Security Officer">
# <i>passwd secoff</i>
</pre>

</body> </section> </chapter>

<chapter> <title>First boot</title> <section> <body>

<p> At the first boot, login into the system won't be possible, due to the
AUTH module <e>restricting</e> the programs privileges. To overcome this
problem please boot into softmode using the following kernel parameter
(in your lilo or grub configuration): </p>

<pre caption="Softmode kernel parameter"> <i>rsbac_softmode</i> </pre>

<p> The login application is managing user logins on the system. It
needs rights to setuid, which we will now give: </p> <p> Login as the
Security Officer (secoff) and allow logins to be made by enterering the
following command: </p>

<pre caption="Allowing users to login">
# <i>attr_set_fd AUTH FILE auth_may_setuid 1 /bin/login</i>
</pre>

<p> As an alternative, if softmode isn't enabled, you can also use the
following kernel parameter in order to allow login at boot time: </p>

<pre caption="Allowing users to login with a kernel parameter">
<i>rsbac_auth_enable_login</i>
</pre>

</body> </section> </chapter>

<chapter> <title>Learning mode and the AUTH module</title> <section>
<title>Creating a policy for OpenSSH</title> <body>

<p> Because there is almost no policy made yet (except the one generated
during the first boot), the AUTH module does not allows uid changes.
</p> <p> Thanks to the intelligent learning mode there is an easy way to
alleviate this new problem: The AUTH module can automagically generate the
necessary policy by watching services while they start up, and note the
uids they are trying to switch to. For example to teach the AUTH module
about the uids needed by sshd (OpenSSH daemon), do the following: </p>

<impo>Make sure that sshd or the daemon you will use the learn mode with isn't running already before enabling learn mode.</impo>
<pre caption="Making a policy for sshd, using the learning
mode">
<comment>Enable the learning mode for sshd</comment>
# <i>attr_set_file_dir AUTH FILE `which sshd` auth_learn 1</i>

<comment>Start the service</comment>
# <i>/etc/init.d/sshd start</i>

<comment>Disable the learning mode</comment>
# <i>attr_set_file_dir AUTH FILE `which sshd` auth_learn 0</i>
</pre>

<note> One should also login to the system before switching the learning
mode off, because sshd will also attempt to change it's uids when the
user will login in.  </note>

<p> Now sshd should be working as expected again, <e>congratulations</e>,
you made your first policy :) The same procedure can be used on every
other daemon you will need.  </p>

<note> As an alternative to enable the learning mode for each daemon
of application you will need, you might want to enable the global
learning mode (which will learn about everything running, globally,
as it name tells).  </note>

<p> You can enable the global learning mode by issuing this kernel
parameter at boot time: </p>

<pre caption="Enabling the global learning mode">
<i>rsbac_auth_learn</i>
</pre>

</body> </section> </chapter>

<chapter> <title>Further information</title> <section> <body>

<p> It is also strongly suggested that you subscribe to the <uri
link="http://www.gentoo.org/main/en/lists.xml">gentoo-hardened
mailing-list</uri>. It is generally a low traffic list,
and RSBAC announcements for Gentoo will be available
there. We also recommend you to subscribe to the <uri
link="http://rsbac.org/mailman/listinfo/rsbac/">RSBAC mailing-list</uri>.
Please also check the <uri link="http://www.gentoo.org/proj/en/hardened/hardenedfaq.xml">hardened FAQ</uri> as your questions might already be covered in this document.
</p>

<table> <tr>
  <ti>Links:</ti>
  <ti><uri link="http://www.rsbac.org">RSBAC Official site</uri></ti>
  <ti><uri link="http://zhware.ath.cx/rsbac">RSBAC Wiki</uri></ti>
</tr> <tr>
  <ti>IRC channels:</ti> <ti><uri link="irc://irc.freenode.org/gentoo-hardened">#gentoo-hardened</uri></ti>
  <ti><uri link="irc://irc.freenode.org/rsbac">#rsbac</uri></ti>
</tr> </table>

</body> </section> </chapter>

</guide>
