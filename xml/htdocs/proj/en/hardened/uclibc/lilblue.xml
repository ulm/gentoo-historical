<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/project.xsl" type="text/xsl"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE project SYSTEM "/dtd/project.dtd">
<project>

<name>Lilblue</name>
<longname>Lilblue: A security-enhanced, fully featured XFCE4, amd64 Gentoo desktop,
built on uClibc</longname>

<description>
"Lilblue" is a security-enhanced, fully featured XFCE4, amd64 Gentoo desktop,
built on uClibc.
</description>

<longdescription>
<p>
"Lilblue", named after the <uri link="https://en.wikipedia.org/wiki/Little_Penguin">Little Blue Penguin</uri>
of New Zealand, a smaller cousin of the <uri link="https://en.wikipedia.org/wiki/Gentoo_Penguin">Gentoo</uri>,
is a security-enhanced, fully featured XFCE4, amd64 Gentoo desktop, built on uClibc.
</p>
<p>
The "security-enhancement" comes from a toolchain which builds all of userland
</p>
<ul>
<li>with <uri link="http://en.wikipedia.org/wiki/Stack-smashing_protection"> stack smashing protection </uri>
and <uri link="http://gcc.gnu.org/onlinedocs/gccint/Stack-Checking.html">stack-check</uri>,</li>
<li>as <uri link="https://en.wikipedia.org/wiki/Position-independent_code">position independent executables</uri>
--- even executables are marked ET_DYN</li>
<li>with hardened linking --- relocation read only and no lazy binding
(<uri link="https://isisblogs.poly.edu/2011/06/01/relro-relocation-read-only">relro and bindnow</uri>),</li>
<li>with a non-executable stack, only RW permitted on a GNU_STACK phdr,</li>
</ul>
<p>
and a kernel which provides:
</p>
<ul>
<li>various memory protection features for processes
	(<uri link="http://pax.grsecurity.net/docs/pageexec.txt">PAGEEXEC</uri>, 
	<uri link="http://pax.grsecurity.net/docs/mprotect.txt">MPROTECT</uri>,
	<uri link="http://pax.grsecurity.net/docs/randmmap.txt">RANDMMAP</uri>,
	<uri link="http://pax.grsecurity.net/docs/emutramp.txt">EMUTRAMP</uri>),</li>
<li>an <uri link="http://pax.grsecurity.net/docs/aslr.txt">enhanced address space layout
randomization </uri> in conjunction with PIE above,</li>
<li>numerous internal and kernel-userland surface hardening features,</li>
</ul>
<p>
See <uri link="http://pax.grsecurity.net/docs">PaX</uri> and
<uri link="https://secure.wikimedia.org/wikibooks/en/wiki/Grsecurity/Appendix/Grsecurity_and_PaX_Configuration_Options">grsecurity</uri>
for more information on the various hardening features in the kernel.  If you want
a <uri link="https://wiki.ubuntu.com/Security/Features">laundry list of security
features</uri>, you might consider what Ubuntu does.  Most of these features, or
some variation of them, are in Lilblue.  However, Lilblue goes further with
grsecurity/PaX which is a major boost to hardening.  There's a nice little utility
by Tobias Klein, <uri link="http://www.trapkit.de/tools/checksec.html">checksec.sh</uri>.
Run it against the latest Ubuntu and Lilblue for a comparison.
</p>
<p>
The "fully featured desktop" comes the fact that the system comes with over 800
packages covering most desktop needs.  XFCE4 was chosen because of its slim and
flexible nature.  These include:
</p>
<ul>
<li>ephiphany, claws, hexchat for browsing, email and IRC</li>
<li>abiword, evince, gcalctool, gtext for generic office software</li>
<li>gqview, smplayer for multimedia with many open codecs</li>
<li>transmission for bittorrent</li>
<li>and no! busybox does not provide most of the core utilities</li>
</ul>
<p>
Lilblue should not be thought of as an "embedded" system.  The major difference
between it and a stock Gentoo system built with the same package set is that uClibc
replaces glibc.  Work is on the way to make about 7000 packages available via binpkg
hosting.
</p>
<p>
Finally, why uClibc and why only amd64?  Let me address the latter first: almost
all desktop systems today support X86_64 architecture.  Factored in with time
constraints, mostly revolving around the difficulties maintaining hardening on
X86, this made the choice to only support amd64 seem reasonable.  The uClibc is
harder to justify, so may or may not accept the following reasons:
</p>
<ul>
<li>uClibc is a configurable standard C library aimed at embedded systems, and
it should remain so, but it is not just for embedded systems anymore!</li>
<li>uClibc is fast! Lilblue boots in 14 seconds off a SSD</li>
<li>uClibc is small ~400 KB for uClibc vs 1.7 MB</li>
<li>uClibc's "link surface" is half that of glibc: 1327 (or less) symbols for
uClibc vs 2188 for glibc (Gentoo users can compare the speed of revdep-rebuild)</li>
<li>It is not the mainstream and forces the developer to confront design principles
when building a "Standard C Library" and executables that link against it</li>
<li>I like working with the people who work on Gentoo and uClibc.  Its not a
reason to use Lilblue, but it was a motivation for me to do this</li>
</ul>
</longdescription>

<extrachapter position="top">
<title>Installation</title>
<section>
<body>
<p>
Okay, so you're curious.  Maybe not enough to install it on a real box, but
you'll give it a spin as a virtual machine.  Good!  Installation is manual, but
much easier than the full Gentoo installation described in the
<uri link="http://www.gentoo.org/doc/en/handbook/index.xml">Handbook</uri>.  Of
course, there are less choices to be made.  What we give below will most likely
"just work", but feel free to deviate from it if you want to try something different.
For instance, the kernel is compiled with lots of support.  Do you want to try
BTRFS instead of EXT4?
</p>
<p>
Here are the steps:
</p>
<p>
<b>1.</b> First let's prepare a boot device and boot into it.  Download the install ISO
image using
</p>
<pre caption=""><i>wget http://[mirror]/pub/linux/gentoo/releases/amd64/current-iso/install-amd64-minimal-[date].iso</i></pre>
<p>
Here [mirror] is any <uri link="http://www.gentoo.org/main/en/mirrors2.xml">Gentoo
mirror</uri> and [date] is whatever the date is of the latest release.  This is
just Gentoo's generic amd64 minimal install image.  Its glibcbased, but that's
okay, it won't prevent chrooting into the uClibc desktop which you have to do
later on.  If you are putting this on a physical box, then burn the ISO image to
a CD or DVD.  For a virtual machine, just aim its virtual CD/DVD device to the
ISO file.  Alternatively, you may want to boot from a pen drive.  Gentoo's install
ISO is not the best for this.  You may want to try
<uri link="http://www.sysresccd.org/SystemRescueCd_Homepage">SystemRescueCD</uri>,
a Gentoo-derived distro with lots of uses.  Or, if you already have a working
Linux system and you want to install Lilblue to another drive, just boot off
your current system and partition the other drive.  Whatever your choice, boot
off that device now.
</p>
<p>
<b>2.</b> Prepare root/boot/swap partitions, format and mount them.  Using
<uri link="http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?chap=4&amp;part=1#doc_chap3">
fdisk</uri>, prepare at least three partitions.  boot only has to hold a kernel
or two, so you can get away with less, but the others are reasonable minima:
</p>
<table>
	<tr><th>Partition</th><th>Mount Point</th><th>Size</th></tr>
	<tr><ti>/dev/sda1</ti><ti>/boot</ti><ti>128 MB</ti></tr>
	<tr><ti>/dev/sda2</ti><ti>swap</ti><ti>&gt;1 GB</ti></tr>
	<tr><ti>/dev/sda3</ti><ti> / </ti><ti>&gt;4 GB</ti></tr>
</table>
<p>
<b>3.</b> Format the partitions and mount them:
</p>
<pre caption="">
<i># mke2fs /dev/sda1</i>
<i># mkswap /dev/sda2</i>
<i># mkfs.ext4 /dev/sda3</i>

<i># mkdir -p /mnt/gentoo</i>
<i># mount /dev/sda3 /mnt/gentoo</i>

<i># mkdir -p /mnt/gentoo/boot</i>
<i># mount /dev/sda1 /mnt/gentoo/boot</i></pre>
<p>
<b>4.</b> Download and unpack the tarball image:
</p>
<pre caption="">
<i># cd /mnt/gentoo</i>
<i># wget http://[mirror]/pub/linux/gentoo/experimental/amd64/uclibc/desktop-amd64-uclibc-hardened-[date].tar.bz2</i>
<i># tar xf desktop-amd64-uclibc-hardened-[date].tar.bz2</i></pre>
<p>
<b>5.</b> Prepare the chroot and chroot into it.  Assuming you're still in the same directory as in the previous step, do
</p>
<pre caption="">
<i># mount --bind /dev dev/</i>
<i># mount --bind /dev/pts dev/pts</i>
<i># mount --bind /proc proc/</i>
<i># mount --bind /sys sys/</i>
<i># chroot . /bin/bash -l</i>
<i># source /etc/profile</i>
<i># env-update</i>
>>> Regenerating /etc/ld.so.cache...
/sbin/ldconfig: You should remove `/lib' from `/etc/ld.so.conf'
/sbin/ldconfig: You should remove `/usr/lib' from `/etc/ld.so.conf'
/sbin/ldconfig: skipping /usr/games/lib: No such file or directory</pre>
<p>
Don't worry about the warning messages generated by <c>ldconfig</c>, they are harmless issues.
</p>
<p>
If you changed any of the above values for /dev/sda*, or you're not installing
onto sda, then edit /etc/lilo.conf and /etc/fstab.  Change the values to what
you picked.  Finally, install lilo to your boot drive, exit the chroot and reboot:
</p>
<pre caption="">
<i># lilo</i>
Added Gentoo  +  *
<i># exit</i>
<i># reboot</i></pre>
<p>
<b>6. </b>Log in and enjoy!  You have one user account and root.  You can only log into the desktop
as user <b>gentoo</b>, but can <c>sudo</c> or <c>su</c> root.  
</p>
<table>
<tr><th>Username</th><th>Password</th></tr>
<tr><ti>gentoo</ti><ti>gentoo</ti></tr>
<tr><ti>root</ti><ti>root</ti></tr>
</table>
</body>
</section>
</extrachapter>

<extrachapter position="top">
<title>Working with Lilblue</title>
<section>
<body>
<p>
Lilblue <b>is</b> Gentoo, not a separate distro.  Gentoo covers many possibilities
and building all userland against uClibc is just one choice.  You can learn how to
work with a Gentoo system by reading the <uri link="http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml">Handbook</uri>.
Skip the section on "Installing Gentoo" since we've already done that; but take a
look at "Working with Gentoo", "Working with Portage" and "Gentoo Network Configuration".
</p>
</body>
</section>
</extrachapter>


<extrachapter position="top">
<title>Reporting Bugs and Feature Requests</title>
<section>
<body>
<ul>
<li>Submit bugs to: <uri link="http://bugs.gentoo.org">Gentoo's Bugzilla</uri></li>
<li>Assign to: blueness@gentoo.org</li>
<li>CC: hardened@gentoo.org</li>
</ul>
</body>
</section>
</extrachapter>

<dev role="lead">blueness</dev>

<extrachapter position="bottom">
<title>I Want to Participate</title>
<section>
<body>
<p>
To participate in the Hardened uClibc project join the mailing list at
<c>gentoo-hardened@gentoo.org</c> and visit our online IRC channel at
<c>#gentoo-hardened</c> on <c>irc.freenode.net</c>.
</p>
</body>
</section>
</extrachapter>


</project>
