<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/java/Attic/java-upgrade.xml,v 1.22 2006/10/15 20:46:15 nichoj Exp $ -->

<guide link="/proj/en/java/java-upgrade.xml" lang="en">
<title>Gentoo Java Upgrade Guide</title>

<author title="Author">
  <mail link="nichoj@gentoo.org">Joshua Nichols</mail>
</author>
<author title="Author">
  <mail link="kartk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>
<author title="Editor">
  <mail link="nightmorph@gentoo.org">Josh Saddler</mail>
</author>

<abstract>
This guide shows you how to upgrade Java to the new generation of Java on
Gentoo, along with related concepts and tools.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.0.11</version>
<date>2006-10-15</date>

<chapter>
<title>Introduction</title>

<section>
<body>
<p>
Hello and welcome. About now, you may be asking 'why would I want to upgrade my Java?' Or perhaps, you began the process and got directed to this page by an error during a merge? Regardless, the purpose of this document is to help you along with upgrading to the new Java system. Ah, but what is up with this new Java system?
</p>
</body>
</section>

<section>
<title>The new Java system</title>
<body>
<p>
For those not familar with the new Java system, here is a laundry list of new features:
</p>

<ul>
<li>Ability to switch the current VM on the fly</li>
<li>Changes to the user and system VM take effect immediately, and no longer are tied to the shell environment (ie no more running env-update &amp;&amp; source /etc/profile after switching the sytem VM)</li>
<li>Now has the concept of a 'build VM', which is used to emerge packages, and is configured independently of the system VM.</li>
<li>For each version of Java, ie 1.3, 1.4, 1.5, etc, the build vm can configured as to which vendor and version of a VM to use</li>
<li>The VM at emerge time will be switched on the fly according to its configuration, as well as the dependency of the package. For example, some packages won't compile with 1.5. In these cases, a 1.4 VM will be used at build time.</li>
<li>Java packages which build with ant will have their build.xml rewritten at build time, in order to ensure that the correct version of Java bytecode is compiled.</li>
<li>Java 1.5 is unmasked, after some time being package.masked</li>
<li>Java 1.6 will be made available as soon as it is released.</li>
</ul>
</body>
</section>

<section>
<title>Terminology / Concepts</title>
<body>

<p>
Now that you have an idea of what you're getting to... here are a few terms and concepts you might find useful before starting.
</p>

<dl>
  <dt>Generation</dt>
  <dd>
	This is a new concept. The idea is that a generation is a set of tools
	and eclasses for building Java packages. So at some point, we begin
	migrating from the existing generation to a new one. During this time,
	both generations coexist on your system and in the portage tree. So, for example, you would have a system vm
	set for Generation 1 <e>and</e> a system vm for Generation 2. By
	doing this, packages that use Generation 1 and Generation 2 can
	coexist while migrating to the new generation.
  </dd>
  <dt>Generation 1</dt>
  <dd>
	This generation consists of the existing eclasses (java-pkg, java-utils, and java) and
	<c>java-config-1.</c> Generation 1 is legacy system that is being phased out.
  </dd>
  <dt>Generation 2</dt>
  <dd>
	This generation consists of the new eclasses (java-pkg-2, java-pkg-opt-2, java-ant-2, and java-utils-2) and the new version of java-config. This is the generation that we are migrating towards.
  </dd>
  <dt>Generation 1 System VM</dt>
  <dd>
	This is the VM that is used to emerge Java packages using the eclasses
	from Generation 1. It is set using <c>java-config-1 --set-system-vm &lt;choice of
	vm&gt;</c>.
  </dd>
  <dt>Generation 2 System VM</dt>
  <dd>
	With Generation 2, the system VM is only used for root and for users
	that haven't set a user VM.
  </dd>
  <dt>Generation 2 Build VM</dt>
  <dd>
	Generation 2 introduces a new class of VM. The Build VM is used at
	merge time for building Java packages. It is changed as necessary
	depending on the package. For example, if a package only compiles
	with 1.4, a 1.4 VM will be used. Defaults are defined at
	<path>/usr/share/java-config-2/config/jdk-defaults.conf</path>.
	Additionally, the Build VM can be configured by
	<path>/etc/java-config-2/build/jdk.conf</path>. 
  </dd>
</dl>

</body>
</section>
</chapter>

<chapter>
<title>Update java-config</title>
<section>
<body>

<p>
A new package, <c>java-config-wrapper</c>, is blocked by old versions of
<c>java-config</c>, so we should remove that first:
</p>

<pre caption="Remove old java-config">
# <i>emerge -C java-config</i>
</pre>

<p>
Now we should install the new versions of <c>java-config</c>:
</p>

<pre caption="Install new java-config">
# <i>emerge -1 =java-config-1* =java-config-2*</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Check your environment</title>
<section>
<body>

<p>
We now provide a new script, <c>java-check-environment</c>.  This, as
the name may imply, checks the health of your system's Java environment. It then suggests what actions
that you should take to fix any problems found. So now run:
</p>

<pre caption="Check your environment">
# <i>java-check-environment</i>
</pre>

<p>
If java-check-environment encounters a problem, it will stop and tell you about it, and how to fix it. Follow the advice given, and then rerun java-check-environment until it does not find any other problems.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Upgrade... complete!</title>
<section>
<body>
<p>
If you've gotten this far, then you have succesfully upgraded to the new Java system. Congratulations!
</p>

<p>
Now that you've upgraded, you may want to take a look at our updated documentation:
</p>

<ul>
 <li><uri link="/doc/en/java.xml">User Guide</uri></li>
 <li><uri link="java-devel.xml">Developer Guide</uri></li>
</ul>
</body>

</section>
</chapter>

<chapter>
<title>Common Issues and Questions</title>
<section>
<body>
<p>
To address common problems experienced when upgrading, the Java team has
setup a wiki page <uri link="http://overlays.gentoo.org/proj/java/wiki/Common_Problems">here</uri>. Before seeking help or reporting
issues elsewhere, please refer to this page.
</p>
</body>

</section>
</chapter>
</guide>
