<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/java/Attic/tiger-faq.xml,v 1.7 2005/12/17 23:31:31 nichoj Exp $ -->

<guide link="/doc/en/guide.xml" lang="en">
<title>Gentoo Java 1.5 FAQ</title>

<author title="Author">
  <mail link="karltk@gentoo.org">Karl Trygve Kalleberg</mail>
</author>

<author title="Author">
  <mail link="axxo@gentoo.org">Thomas Mathijs</mail>
</author>

<author title="Author">
  <mail link="nichoj@gentoo.org">Joshua Nichols</mail>
</author>

<abstract>
This FAQ covers issues related to Java 1.5 support on Gentoo.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.0</version>
<date>2005-11-02</date>

<chapter>
<title>Why is Java 1.5 still hard-masked?</title>
<section>
<body>

<p>
  Java 1.5 is still hard masked because there are a few issues which make it 
  unsafe to use a 1.5 JDK as your system VM.
</p>

<p>
  The first issue with Java 1.5 is backwards compatibility. If 
  you compile packages with a 1.5 JDK, the default behavior is that 
  the compiled classes can only be used in a 1.5 or above VM.
</p>

<p>
  The Java herd is working on a solution to this which will compile classes for the lowest possible VM, as is detailed below.
</p>

<p>
  The other significant issue is that there are packages which are not 
  compatible with JDK 1.5, as they currently exist in portage. For 
  example, several abstract classes and interfaces now have new abstract 
  methods in 1.5. This means that packages would need to be patched to 
  override these abstract methods. Failing that, you could also try using 
  1.4 to compile the offending package.  However, due to the backwards 
  compatibility problem mentioned above, you wouldn't be able to use 
  external libraries, because they were compiled only for 1.5.
</p>

</body>
</section>
</chapter>


<chapter>
<title>How can I safely use Java 1.5 without breaking my system?</title>
<section>
<body>
<p>
As discussed already, you should not use a 1.5 JDK as your system VM. However, it is safe to use as your user's VM.
</p>

<p>
  The first step is to emerge sun-jdk-1.5 and any 1.4 JDK, if you have not already done so.
</p>

<pre caption="Emerge JDKs"><comment>You need to unmask sun-jdk-1.5 first.</comment>
# echo "=dev-java/sun-jdk-1.5*" >> /etc/portage/package.unmask
# emerge =sun-jdk-1.5*
<comment>Now emerge a 1.4 JDK. We'll use blackdown in this case.</comment>
# emerge =blackdown-jdk-1.4*
</pre>

<p>
  The next step is to ensure that your system VM is set to a 1.4 JDK.
</p>

<pre caption="Set system VM"><comment>Use java-config to list installed VMs</comment>
# java-config -L
[sun-jdk-1.5.0.05] "Sun JDK 1.5.0.05" (/etc/env.d/java/20sun-jdk-1.5.0.05)
[kaffe-1.1.6] "Kaffe 1.1.6" (/etc/env.d/java/20kaffe-1.1.6)
[blackdown-jdk-1.4.2.02] "Blackdown JDK 1.4.2.02" (/etc/env.d/java/20blackdown-jdk-1.4.2.02)

<comment>Set the system VM to use the 1.4 JDK</comment>
# java-config -S blackdown-jdk-1.4.2.02
System Virtual Machine set
You may want to update your enviroment by running:
        "/usr/sbin/env-update &amp;&amp; source /etc/profile"
# /usr/sbin/env-update &amp;&amp; source /etc/profile
</pre>

<p>
  Now we need to setup your user VM to sun-jdk-1.5
</p>

<pre caption="Set user VM"><comment>Use java-config to list installed VMs</comment>
$ java-config -L
[sun-jdk-1.5.0.05] "Sun JDK 1.5.0.05" (/etc/env.d/java/20sun-jdk-1.5.0.05)
[kaffe-1.1.6] "Kaffe 1.1.6" (/etc/env.d/java/20kaffe-1.1.6)
[blackdown-jdk-1.4.2.02] "Blackdown JDK 1.4.2.02" (/etc/env.d/java/20blackdown-jdk-1.4.2.02)

<comment>Set the user VM to sun-jdk-1.5</comment>
$ java-config -s sun-jdk-1.5.0.05
Env files in /home/someuser/.gentoo updated. Source these in your shell's profile.

<comment>Adjust your bash_profile to load Java settings at login</comment>
$ echo "source ~/.gentoo/java-env" >> ~/.bash_profile
<comment>Update the environment of the current terminal</comment>
$ source ~/.gentoo/java-env
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Is there any work being done to support 1.5 JDK as a system VM?</title>
<section>
<body>
  <p>
    The good news is that work is that support for 1.5 is coming. 
    Some major changes are needed to get Java 1.5 unmasked, and axxo 
    has been working on this in his overlay.
  </p>

  <p>
    The most significant changes include:
  </p>
    <ul>
      <li>
	    Merge-time VM switching (<uri link="http://bugs.gentoo.org/86900">#86900</uri>)
      </li>
      <li>
	    Merge-time build.xml rewriting (<uri link="http://bugs.gentoo.org/86903">#86903</uri>)
	  </li>
      <li>
	    axxo's branch of the java-config-ng started by compnerd
	  </li>
      <li>
	    Uses symlinks instead of PATH hacks to choose between user/system VM, 
		which is more flexible.
	  </li>
      <li>
	    Removal of jikes USE flag, so you can now easily choose between 
		javac, eclipse-ecj, or jikes
      </li>
    </ul>
  <p>
    A full list of bugs that this overlay addresses can be found
	<uri link="https://svn.gentooexperimental.org/svn/java/axxo-overlay/README/bugs-this-fixed">here</uri>.
    However, there is still some work that needs to be done. The most 
	up-to-date TODO list can be found <uri link="http://gentooexperimental.org/svn/java/axxo-overlay/README/todo">here</uri>
  </p>

  <p>
    The first thing to do is to checkout a local copy of the overlay.
  </p>

  <warn>
    Use of this overlay in addition to other Java overlays is not supported!
  </warn>

  <pre caption="Check out the 1.5 overlay"># mkdir -p /usr/local/overlays/java-experimental
# svn co https://svn.gentooexperimental.org/svn/java/axxo-overlay /usr/local/overlays/axxo-overlay</pre>


  <p>
    Next, it is neccessary to make a few changes to make.conf. The first bit tells 
	portage where the overlay lives. The second bit tells portage to use an
	rsync exclude-from file. This is used to prevent emerge sync
	from updating packages which are in the overlay. The overlay contains 
	packages modified from what is currently in portage, so this is needed 
	to prevent revisions from being installed from <path>/usr/portage</path> 
	which are in the overlay.
  </p>

  <pre caption="Update make.conf">
PORTDIR_OVERLAY="${PORTDIR_OVERLAY} /usr/local/overlays/axxo-overlay"
RSYNC_EXCLUDEFROM=/usr/local/overlays/axxo-overlay/rsync-exclude</pre>


  <p>
    The overlay requires a very recent of portage, in addition to a new java-config.
  </p>

<pre caption="Update portage and java-config">
# emerge portage java-config
</pre>

  <p>
    The JDKs, JREs, and Java compilers in the overlay now install additional metadata, which is needed to emerge Java packages. You must disable collision detection when doing this initially.
  </p>
  <pre caption="Update JRE/JDK and compilers">
<comment>If you have blackdown-jdk-1.4 and sun-jdk-1.5 installed...</comment>
# FEATURES="-collision-detect" emerge =blackdown-jdk-1.4* =sun-jdk-1.5*
<comment>And jikes and eclipse-ecj if you have those installed...</comment>
# emerge jikes eclipse-ecj</pre>

  <p>
    If you had previously set your user VM, you will need to delete the old config files.
  </p>

  <pre caption="Remove user-vm settings">
$ rm ~/.gentoo/java*
<comment>You must now update ~/.bashrc and ~/.bash_profile to not load ~/.gentoo/java-env</comment></pre>

  <p>
    You should now be all setup to use the overlay.
  </p>

  <p>
    The documentation has also been updated for the usage of this new overlay:
  </p>
    <ul>
      <li><uri link="http://gentooexperimental.org/svn/java/axxo-overlay/README/docs/java-user.html">User Guide</uri></li>
      <li><uri link="http://gentooexperimental.org/svn/java/axxo-overlay/README/docs/java-devel.html">Developer Guide</uri></li>
    </ul>


  <p>
    <mail link="axxo@gentoo.org">axxo</mail> and 
	<mail link="nichoj@gentoo.org">nichoj</mail> would really appreciate 
	any comments/suggestions/fixes/patches to improve any of these
  </p>

</body>
</section>

<section>
<title>Why do I need to update portage?</title>
<body>
  <p>
     We need hooks to the jdk used while emerging packages.  These hooks 
	 will be added to portage at latest with 2.0.54 but until then we 
	 need to provide a special version of portage in the overlay.
  </p>
</body>
</section>

<section>
<title>Why do digest validation fail sometimes?</title>
<body> 
  <p>
    Sometimes the developers forget to regenerate digest after changes
    so the validation fails. You can get around this by using
    FEATURES="-strict" or running ebuild manifest your self.
  </p>
</body>
</section>

<section>
<title>When will this be merged to the Portage tree?</title>
<body>
  <p>
    As the overlay needs hooks in Portage the earliest time we are able
    to deliver to stable users is after 2.0.54 is stable. No decision has
    yet been made if ~arch and arch will go in at the same time but that
    has been the dominant idea so far.
  </p>
</body>
</section>
</chapter>

<chapter>
<title>So I went and broke my system using a 1.5 JDK... how do I fix it?</title>
<section>
<body>
  <p>To repair things, you have to merge all Java based packages which you've merged with the JDK 1.5 with a JDK 1.4 again. You have to make sure that you do this in the right order. If there are, for example, 3 packages which you've merged with the JDK 1.5, package A, B and C, If package C depends on B and package B depends on A, then you would have to emerge package A first, then B, and lastly C. If you fail to do this, you'll probably get class version errors, because you'll be attempting to use 1.5 bytecode in a 1.4 VM.</p>

  <p>The following commands, which come from gentoolkit, will give you a list of packages which might need to be re-merged:</p>
  <pre caption="List Java packages installed">$ equery depends virtual/jre
$ equery depends virtual/jdk</pre> 



  <p>Below is a code snippet that should help re-emerge the packages that need to be fixed. The python script that gets downloaded is used to determine what version.</p>
  <pre caption="Fix packages built with Java 1.5">wget http://gentooexperimental.org/svn/java/javatoolkit/src/bsfix/class-version-verify.py; chmod +x class-version-verify.py;
emerge portage-utils; emerge -1 $(for jar in $(./class-version-verify.py -t 1.4 /usr/share/*/lib/*.jar -f); do qfile -C -q ${jar}; done)</pre>

  <p>nichoj has also been working on a script to further automate this process. It is available <uri link="http://dev.gentoo.org/~nichoj/scripts/java-1.5-fixer">here</uri>.</p>
</body>
</section>
</chapter>

</guide>
