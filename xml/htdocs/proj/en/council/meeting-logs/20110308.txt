[21:02:53] <ssuominen> scarabeus asked me to proxy if he's too much late
[21:03:04] * jmbsvicetto has changed topic for #gentoo-council to: "Next meeting: 20110308 2000 UTC - NOW | http://www.gentoo.org/proj/en/council/utctolocal.html?time=2000 | 20110201 Log and Summary now available | http://www.gentoo.org/proj/en/council/"
[21:03:07] <ssuominen> should be here in 15 mins or so
[21:03:15] <jmbsvicetto> So, who's here?
[21:03:20] <Betelgeuse> I
[21:03:21] -*- jmbsvicetto is present
[21:03:24] <a3li> <- for chainsaw
[21:03:24] -*- wired here
[21:03:34] -*- ssuominen in form of scarabeus I guess :P
[21:03:43] <ferringb> tempted to use my he-man nick for this meeting
[21:03:50] <ferringb> and yes, present obviously
[21:04:15] <jmbsvicetto> bonsaikitten: you're around, right?
[21:05:40] -*- wired hums
[21:05:42] <jmbsvicetto> so shall we start?
[21:05:49] <wired> please
[21:05:52] <jmbsvicetto> I'll chair the meeting until scarabeus shows up
[21:07:44] <scarabeus> ok guys
[21:07:47] <scarabeus> i was bit fater
[21:07:51] <jmbsvicetto> Did Tomas send the proposed text for using the latest EAPI when comitting to the tree?
[21:07:54] <jmbsvicetto> I can't find it
[21:07:57] <scarabeus> no i didnt sent it
[21:08:02] <scarabeus> i spent my time in that hospital
[21:08:05] <jmbsvicetto> scarabeus: ok, I'll leave it for you then
[21:08:06] <scarabeus> so nope
[21:08:19] <scarabeus> so we will skip that step with explanation : scarabeus slacked :
[21:08:24] <scarabeus> let me find agenda list :)
[21:09:01] <wired> http://archives.gentoo.org/gentoo-dev-announce/msg_cc43b3abbe1d56e7b1408c226a8820e9.xml
[21:09:05] <wired> scarabeus: ^^
[21:09:10] <scarabeus> yep
[21:09:11] <scarabeus> i have it
[21:09:14] <scarabeus> in bookmarks
[21:09:15] <scarabeus> :)
[21:09:17] <scarabeus> ok
[21:09:24] <Betelgeuse> Do we need anything more to vote on besides: When writing ebuilds that don't effect Portage upgrades for old machines, use the latest EAPI?
[21:09:43] <scarabeus> Betelgeuse: no just voting it on and updating devmanual so it is policy
[21:09:58] <scarabeus> i just didnt have time to write it in proper english
[21:10:13] <jmbsvicetto> Betelgeuse: do we want to make it a bit more clear? Something along, "unless the package in question is part of the system set"?
[21:10:23] <wired> + repoman warning if new version or new package?
[21:10:47] <ferringb> alternative line of questioning
[21:10:56] <ferringb> very, very simply phrased: why?
[21:11:10] <ferringb> someone answer that before we proceed with voting/devmanual
[21:11:22] <Betelgeuse> jmbsvicetto: not all of system set is needed for the upgrades to work
[21:11:44] <Betelgeuse> ferringb: makes it easier for new developers
[21:11:47] <ferringb> system set has a surprising tendrils.
[21:12:07] <ferringb> *surprising.  specifically, it can wind up pulling in/referencing a large amount of stuff
[21:12:19] <Arfrever> jmbsvicetto wanted to upgrade Python 2.6.6-r2 to EAPI="3" :) .
[21:12:29] <jmbsvicetto> Betelgeuse: sure, but that was an exception for a "mandate", so it doesn't prevent anyone from working on packages within the system set to choose the latest EAPI if they think it's appropriate - it just "lifts" the requirement
[21:12:39] <ferringb> as such trying to say "unless it's part of system set" is a bit daft- does this include the full graph w/ all flag permutations for system set (and it's deps) ?
[21:13:23] <jmbsvicetto> Arfrever: I wasn't thinking about that at this point.
[21:13:46] <jmbsvicetto> ferringb: ok, point taken. I drop my suggestion
[21:14:18] <jmbsvicetto> I'll leave it to someone who knows how to do it to find a repoman rule that applies when it "makes sense"
[21:14:20] <ferringb> Betelgeuse: your turn.  clarify to me how this makes it easier for new developers.
[21:14:38] <ferringb> because with the nature of the tree, they're going to have to work with all eapi's (exempting 1, which is probably going to die in the next 6 months)
[21:14:40] <scarabeus> ferringb: it clarifies my life when deprecating old eapis and support in eclasses for them :)
[21:14:44] <jmbsvicetto> ferringb: In my view it goes the same lines as being able to "deprecate" EAPI versions
[21:14:51] <ferringb> scarabeus: we're not talking about deprecating here
[21:15:21] <ferringb> scarabeus: presuming that all new ebuilds will automatically be upgraded to version foo of eapi isn't likely in light of revbumps and other such also
[21:15:27] <ferringb> and in light of eclasses.
[21:15:29] <Betelgeuse> ferringb: If we require people to use the lowest EAPI that has all the features new developers use then recruiting should be much more strict about knowing the differences between EAPIs
[21:15:43] <Betelgeuse> ferringb: If they can learn on a need to know basis it's somewhat easier.
[21:15:48] <ferringb> Betelgeuse: if they're working in the tree, especially if they touch eclasses, they have to know eapi differences
[21:15:54] -*- ferringb disagrees
[21:16:03] <ferringb> it might be easier for them, but it's more dangerous to the tree's QA
[21:16:18] <Betelgeuse> ferringb: big eclass changes should be peer reviewed
[21:16:26] <ferringb> drop the big
[21:16:27] <scarabeus> ferringb: even now it is mess
[21:16:39] <Betelgeuse> ferringb: depends on how you define big of course
[21:16:40] <ferringb> minor eclass changes can still slip by that are eapi sensitive
[21:16:41] <scarabeus> people use eapi2/3 cases in ebuilds wiht eapi1
[21:16:42] <scarabeus> and stuff
[21:16:48] <scarabeus> so it is problem even now
[21:16:53] <scarabeus> and this problem will grow
[21:16:58] <scarabeus> with numbers of eapis we introduce
[21:17:11] <bonsaikitten> jmbsvicetto: yes (lag ...)
[21:17:12] <ferringb> scarabeus: not denying controlling it is an issue
[21:17:31] <ferringb> scarabeus: what I'm specifically picking at is the justification for this "all new ebuilds must be eapi foo" as a supposed fix for that issue
[21:17:52] <jmbsvicetto> ferringb: I wouldn't worded it as "must" but instead as "should"
[21:17:59] <ferringb> think I pointed out fairly well that the logic that it's easier for new devs is wrong; they still need to know the eapi's that are in the tree else frankly we shouldn't be trusting their asses
[21:18:08] <wired> ferringb: any reasons people shouldn't use latest eapi then?
[21:18:21] <ferringb> jmbsvicetto: should becomes must in the hands of a few folk who want it that way ;)
[21:18:25] <jmbsvicetto> ferringb: so instead of making it "mandatory", I think we should make it a "suggestion"
[21:18:31] <scarabeus> ferringb: they can bump eapi when changing stuff
[21:18:49] <ferringb> wired: use what's appropriate to the eclass, appropriate to the dep chain's importance, and in relation to the stability of the eapi
[21:19:07] <ferringb> new != better for all cases, new == different
[21:19:14] <wired> ferringb: all those are obvious exceptions, but they dont cancel the generic suggestion
[21:19:29] <jmbsvicetto> ferringb: true, but if we approve it as "should" instead of "must", whenever someone tries to force it, they can be pointed to the policy and demonstrate it's "should" and not "must" ;)
[21:19:29] <ferringb> wired: I reiterate; what's the actual gain of it
[21:19:44] <ferringb> jmbsvicetto: doesn't work that way.  had a couple of wars with QA to that effect even ;)
[21:19:51] <Betelgeuse> ferringb: I don't think we should set the bar that high for people who don't work on anything core. We should rather recruit people who are aware of their skill limits than people who think they know it all.
[21:20:32] <ferringb> Betelgeuse: "think they know it all" is not what I said.  I expect them to know the formats they're dealing in.
[21:20:39] <ferringb> these are users systems that get impacted after all
[21:20:43] <ferringb> and we don't peer review every change
[21:20:51] <ferringb> thus they should know the basics of what they're touching at the very least.
[21:21:12] <scarabeus> ahem i sent for peer review or at least other team members review every eclass merge into main tree...
[21:21:12] <ferringb> it's a seperate discussion to this one
[21:21:18] <scarabeus> and it is separate issue :)
[21:21:24] <ferringb> scarabeus: ebuilds vastly outnumber eclasses in commit count
[21:21:51] <ferringb> even if you account for the portage "double tap" for manifest recommits ;)
[21:21:54] <ferringb> either way
[21:21:55] <jmbsvicetto> ferringb: I understand, but those cases can be brought to council
[21:22:01] <Betelgeuse> ferringb: I don't think it's important when EAPI 6 is out for all developers to know 1-5
[21:22:17] <scarabeus> yep i agree with Peteri
[21:22:43] <Betelgeuse> 0-5 but any way
[21:22:45] <ferringb> I rather strongly disagree
[21:22:53] <jmbsvicetto> I agree with ferringb that this falls into the "deprecate" EAPI discussion
[21:22:55] <ferringb> I'm not saying I expect people to know 8 different eapis
[21:23:10] <ferringb> as jmbsvicetto just mentioned, deprecate/remove eapi's from the tree if you want to keep the count down
[21:23:17] <jmbsvicetto> developers will have to know all EAPI versions in use at the tree at that time. I really hope there won't be 6, though
[21:23:38] <ferringb> but frankly, I expect new devs to know the eapi's that are in use in the tree- this is basic litmus test of the dev's knowledge before we let them near the tree
[21:23:41] <Betelgeuse> ferringb: So you want to rules for selecting an EAPI when writing ebuilds?
[21:23:59] <Betelgeuse> ferringb: Any rule that can result in any of the in use EAPIs requires developers to know all EAPIs.
[21:24:00] <ferringb> no ammount of arguement will convince me otherwise on the new dev angle btw, so just assume I'm being a stubborn ass on that one ;)
[21:24:16] <scarabeus> ferringb: but people opposing ot this always say "hey dont touch my eapi i am perfectly fine with eapi1 because it has all features my ebuild currently needs"
[21:24:18] <ferringb> Betelgeuse: what I'm trying to point out here is that the ruling that's being pushed is based on non-existant reasons
[21:24:27] <scarabeus> this way we wont ever deprecate anything
[21:24:46] <jmbsvicetto> ferringb: in any case, I still think we should drop the current policy that states that developers should use the lowest possible EAPI version that works and replace it with "developers are strongly urged to use the most recent EAPI version at the moment they commit that makes sense for the ebuild"
[21:24:46] <ferringb> scarabeus: frankly, we've not had need, and no one has actually been tracking the usage up until recently
[21:24:51] <scarabeus> with enforcing latest version it would somehow propagate itself quite conviniently and also you can see which stuff actually is updated
[21:25:03] <scarabeus> ferringb: ahwell we did it for quite long since eapi2
[21:25:07] <scarabeus> at least in x11 team
[21:25:25] <scarabeus> why do you think i had so much scripts around that i just bit adjusted to work with faster pkgcore ;)
[21:25:27] <wired> both sides have merit here, it is easier for the new dev to only know one EAPI, it is better for the tree (and possible the dev's future) if he knows all active EAPIs beforehand - otherwise he'll have to learn it later (hopefully)
[21:25:28] <Betelgeuse> ferringb: Also nudging people to bump things hopefully makes them think if there's something how the ebuild could be improved.
[21:25:29] <scarabeus> erm s/x11/kde/
[21:25:30] <scarabeus> \
[21:25:34] <Betelgeuse> ferringb: Instead of copying verbatim.
[21:25:52] <NeddySeagoon> jmbsvicetto, careful ... thats how we got the portage/python issue on old systems
[21:26:31] <ferringb> Betelgeuse: I could be wrong, but I suspect most devs are busy dev'ing then to be looking around for ways to polish their existing stable of ebuilds
[21:26:31] <Betelgeuse> jmbsvicetto: What I am not really sure if that's really codified anywhere or just an opinion of some people.
[21:26:33] <jmbsvicetto> NeddySeagoon: "that makes sense" - doing that to packages that pervent system's update, doesn't make sense to me
[21:27:00] <Betelgeuse> ferringb: This rule is not meant to apply to existing ebuilds.
[21:27:00] <jmbsvicetto> Betelgeuse: I recall at one point that was written in devmanual. I haven't looked in some time, though
[21:27:12] <wired> i think we should suggest using the latest eapi whenever possible to try and move forward, but the "what new developers have to learn" issue should be handled with eapi deprecation, not this suggestion
[21:27:21] <ferringb> Betelgeuse: heh, just the -r1 that appears to add a patch :P
[21:27:28] <ferringb> splitting a rather fin hair there
[21:27:37] <Betelgeuse> ferringb: that -r1 is not going directly to stable
[21:27:38] <ferringb> *fine.  sorry, keyboard's nearing time for a replacement again
[21:27:45] <jmbsvicetto> I think we have 3 issues going around:
[21:27:50] <jmbsvicetto> 1. deprecating "old" eapis
[21:27:50] <NeddySeagoon> jmbsvicetto, can you always tell?  Its one package today, something else next month and suddenly the update path has gone
[21:28:04] <jmbsvicetto> 2. setting a suggestion or rule about the EAPI version to use when commiting an ebuild
[21:28:28] <jmbsvicetto> 3. whether a non-maintainer might push an EAPI bump during a commit
[21:28:41] <ferringb> strike #3
[21:28:52] <jmbsvicetto> I think some people are worried about 3. In my view, we already have a general rule about 3 and shouldn't make special rules for EAPI
[21:29:01] <ferringb> non-maintainer pulling that without asking the maintainer is already across the line
[21:29:08] <Betelgeuse> indeed
[21:29:22] <scarabeus> #3 is banned
[21:29:32] <Amynka> hi
[21:29:34] <scarabeus> expect if council asks qa to deprecate some eapi as whole :)
[21:29:58] <ferringb> scarabeus: if deprecation of an eapi is desired... 1) gentoo-dev ml, 2) then council.
[21:30:01] <Betelgeuse> scarabeus: mass actions also have working policies already
[21:30:04] <ferringb> I'm not opposed to deprecating eapis also
[21:30:16] <ferringb> either way; potential compromise
[21:30:30] <ferringb> the "lowest version available" thing, punt it as far as I'm concerned
[21:30:38] <jmbsvicetto> NeddySeagoon: yes, but that raises another issue that has we've been circling around and have yet to make a decision. How strongly do we want to allow for long term system updates and what timeline do we want to set for it? The rule still in effect is 1 year, but I don't think anyone is making sure that is actually real
[21:30:45] <ferringb> controlling the population count of which eapi's are in use, leave it up to maintainers
[21:30:59] <ferringb> they know when it makes sense for their particular area to migrate forward to a new eapi
[21:31:21] <ferringb> and from a PM standpoint, we're not really that hard pressed to support the variations
[21:31:40] <NeddySeagoon> jmbsvicetto, its a related issue.  Sorry for the disruption
[21:32:06] <wired> ferringb: not necessarilly true, new eapi features dont ensure that devs will use them even if they are useful :)
[21:32:13] <jmbsvicetto> NeddySeagoon: no disruption and you're right. I just meant it's a separate issue, but it's tied to EAPI usage in tree
[21:32:16] <ferringb> wired: when the features are useful, yes
[21:32:30] <ferringb> wired: other times we're formalizing things or adding some bit that someone in particular needs
[21:32:34] <ferringb> eapi1 is a good example of that
[21:32:41] <jmbsvicetto> wired: I'd argue that if an EAPI is useful, people will want to use it.
[21:32:51] <ferringb> it was dead on arrival, and buried when eapi2 landed
[21:33:03] <ferringb> jmbsvicetto: that's kind of my view
[21:33:07] <jmbsvicetto> wired: Just because an EAPI as "whistles and bells" doesn't mean it's "useful" for particular developers and or teams
[21:33:15] <ferringb> arbitrary nudging people to go to latest presumes it's greatest
[21:33:26] <scarabeus> well it should be
[21:33:29] <ferringb> I presume not all EAPI's are created equal, let alone the PM support. ;)
[21:33:39] <ferringb> scarabeus: yeah, reality is a whole other thing however
[21:34:03] <jmbsvicetto> ferringb: up to this point I'd say 1 and 2 were the most useful
[21:34:05] <scarabeus> i am 8n ebuilds away from dropping support for eapi1 in cmake-utils :)
[21:34:13] <Betelgeuse> "When writing new ebuilds developers can choose whathever EAPI they think is the best. Using the features of the latest EAPI is encouraged."?
[21:34:13] <ferringb> either way, I'm fine w/ striking the "must be lowest that can do what they need", but I oppose changing it to the opposite end of the spectrum "should use latest it can"
[21:34:25] <jmbsvicetto> Betelgeuse: that sounds good to me
[21:34:28] <ferringb> jmbsvicetto: I'd like to see folk on 3 for prefix reasons, but that's a seperate discussion
[21:34:40] <jmbsvicetto> Betelgeuse: perhaps just adding "when it makes sense"
[21:35:08] <ferringb> Betelgeuse: += "... except for EAPI1.  it's the ginger child of the bunch."
[21:35:23] <ferringb> pardon to any redheads for that joke.
[21:35:35] <jmbsvicetto> ferringb: sure. 3 is very useful for prefix, but ignoring prefix, it didn't provide many useful features for me as an individual developer
[21:35:42] <ferringb> Betelgeuse: encouraged, but not required
[21:36:04] <scarabeus> ok lads
[21:36:07] <scarabeus> 30 mins passed
[21:36:12] <scarabeus> so lets move to next topic
[21:36:27] <scarabeus> but lets agree with dropping the deprecating that lowest preffered
[21:36:34] <scarabeus> and adding something among what peteri sent
[21:36:44] <ferringb> +1 for dropping lowest, +1 for text mentioned.
[21:36:46] <jmbsvicetto> I agree with both
[21:36:46] <ferringb> others?
[21:36:47] <wired> +1 on Peteri's wording
[21:37:06] <jmbsvicetto> wired: and droppping any mention to "oldest preferred"?
[21:37:25] <scarabeus> bonsaikitten: ^
[21:37:28] <wired> jmbsvicetto: yes
[21:37:37] <Betelgeuse> yes to both
[21:37:47] <ferringb> hm.  20m idle on bonsai...
[21:38:04] <jmbsvicetto> ferringb: he seems to be on a very slow link
[21:38:16] <jmbsvicetto> a3li: ^^
[21:38:17] <a3li> I'd say dropping the 'oldest' is fine as long as noone is forced to update just for the sake of updating. so betelguese's text sounds good
[21:38:24] <ferringb> jmbsvicetto: what, moon and back? ;)
[21:38:30] <jmbsvicetto> :)
[21:38:42] <wired> ferringb: mars
[21:38:55] <ferringb> wired: something like an hour, but I was thinking that route initially ;)
[21:38:59] <jmbsvicetto> scarabeus: you haven't expressed your vote yet
[21:39:07] <scarabeus> ah +1 on both
[21:39:30] <scarabeus> we can say then unanimous acceptance?
[21:39:36] <jmbsvicetto> so, 6 votes for both and we're just missing bonsaikitten?
[21:39:41] <scarabeus> oh patrick lacking
[21:39:57] <ferringb> bonsai is irrelevant at this point vote count wise
[21:40:02] <jmbsvicetto> scarabeus: let's move on. He can express his vote until the end of the meeting
[21:40:08] <ferringb> extract his +1/-1 later for official total
[21:40:17] <scarabeus> ok
[21:40:27] <scarabeus> step two will be Jorge doing lot of talk
[21:40:38] <scarabeus> as he is the mastermind for the stable arches discussions :)
[21:40:45] <jmbsvicetto> scarabeus: my talking won't be about that policy but about the discussion ;)
[21:40:49] <scarabeus> :DD
[21:40:53] <scarabeus> eeexcuses
[21:40:57] <jmbsvicetto> :)
[21:41:01] <jmbsvicetto> want me to start?
[21:41:17] <ferringb> just a thought... do we have the various arch leads available?
[21:41:37] <scarabeus> jmbsvicetto: sure go ahead
[21:41:45] <jmbsvicetto> ferringb: that would lead me to the following question: how many arches have been electing their leads as they should?
[21:41:54] <scarabeus> ferringb: i think some teams dont have lead or keep honorary one :)
[21:42:11] <ferringb> s/arch lead/arch sacrifical lamb/
[21:42:27] <jmbsvicetto> I think you must have noticed all the "flodding" I did to your inboxes
[21:42:29] <ferringb> meant moreso, someone who is active in an arch and can speak for it formally or informally
[21:42:32] <ferringb> yeah
[21:42:49] <wired> jmbsvicetto: you're being modest now :P
[21:43:02] <jmbsvicetto> I think the discussion has brought forward a few good points that I'll try to pursue until next meeting
[21:43:10] <jmbsvicetto> wired: ;)
[21:44:32] <jmbsvicetto> I think the council needs to discuss with arch teams, infra and trustees if we want new hardware, hardware specs and see what we can get
[21:45:29] <jmbsvicetto> There's also the issue of statistics and how to recruit, motivate and keep people working on arch teams
[21:45:55] <jmbsvicetto> I don't know if you're interested in the rest of the dicussion or if it should be left for arch teams, infra, trustees and interested developers
[21:46:29] <scarabeus> i dont think all of us needs to be in loop, i honestly tried to read all those mails tho :)
[21:46:35] <jmbsvicetto> Before we can discuss hardware, we must complete the discussion about hardware requirements
[21:46:51] <ferringb> jmbsvicetto: soft ice cream machine is desperatly needed
[21:46:53] <ferringb> (it's hardware)
[21:47:04] <jmbsvicetto> I don't mind reporting back conclusions of that discussion. In any case, you're CC'ed so you can be in the loop if you want
[21:47:13] <jmbsvicetto> ferringb: :)
[21:47:57] <ferringb> fine by me
[21:48:00] <jmbsvicetto> scarabeus: about the arches policies, given the current status of the discussion, I don't know if you want to hold it off a bit more, or if you want to set a few general rules that can be reviewed depending how the discussion turns out
[21:48:23] <jmbsvicetto> s/arches policies/slacking arches policy/
[21:49:08] <jmbsvicetto> Does any of you want to get involved in the statistics and or developer burnout points?
[21:49:23] <scarabeus> jmbsvicetto: those things are quite interesting
[21:49:30] <ferringb> what, to provide ourselves as examples of burnouts? ;)
[21:49:32] <scarabeus> so -project should be hit with those numbers
[21:49:55] <jmbsvicetto> we don't have numbers yet. The discussion is about how to get those numbers
[21:50:14] <jmbsvicetto> in any case, I think we should move some of those discussions to project to see what comes out of them
[21:50:20] <ferringb> yep
[21:50:47] <jmbsvicetto> unless you want any more details, I think that's what I have to say at this point about the ongoing discussion
[21:51:05] <wired> jmbsvicetto: Id like to get involved with that
[21:51:33] <scarabeus> wired: whats preventing you? (sorry this just hit my mind first when you wrote that)
[21:51:50] <wired> hahah
[21:52:00] <jmbsvicetto> wired: what part? all of it?
[21:52:01] <wired> (lack of) time with most of the things id like to do
[21:52:28] <wired> jmbsvicetto: ideally everything, but I was referring to the statistics
[21:52:36] <jmbsvicetto> wired: Feel free to step in at any time
[21:52:42] <jmbsvicetto> wired: great :)
[21:53:14] <jmbsvicetto> Oh, I forgot one point which is the testing platform / framework / whatever
[21:53:38] <wired> jmbsvicetto: thats what we need the most /me thinks
[21:53:44] <jmbsvicetto> I'll try to start a discussion from releng with infra, QA and interested developers (grobian I didn't forgot you) and then move it to the mls
[21:54:09] <jmbsvicetto> That's something I really want to be involved in
[21:54:21] <ferringb> have at it as far as I'm concerned.
[21:54:32] <wired> +automated
[21:54:35] <jmbsvicetto> yes
[21:54:40] <jmbsvicetto> *automated*
[21:54:57] <scarabeus> so alles?
[21:55:00] <wired> ideally every commit would have to go through that system
[21:55:02] <wired> :p
[21:55:19] <scarabeus> ha-ha
[21:55:24] <scarabeus> stable tinderbox would be cool :)
[21:55:29] <ferringb> next point?
[21:55:33] <jmbsvicetto> stable and testing ;)
[21:55:34] <scarabeus> yep
[21:55:40] <ferringb> thanks.  work and such.
[21:55:56] <scarabeus> yeah jorge writes hell lot of mails nowdays :P
[21:55:59] <scarabeus> thanks for that :D
[21:56:07] <jmbsvicetto> hehe
[21:56:16] <scarabeus> so QA glepie update
[21:56:23] <scarabeus> thats probably me talkking
[21:56:27] <scarabeus> so the diff: http://dev.gentoo.org/~scarabeus/glep-0048.diff
[21:56:40] <scarabeus> and ignore the whitespace, it is not part of it
[21:56:57] <scarabeus> wording was updated at fosdem to please many
[21:57:15] <ferringb> wordings fine.
[21:57:20] <ferringb> anyone have issues with it?
[21:57:21] <scarabeus> so some really oppsing voices against this, or can we vote on it
[21:57:34] <scarabeus> *opposing
[21:57:47] <scarabeus> (i need new keyboard, someone wants to donate me one? :))
[21:58:07] <ferringb> scarabeus: you can have my (soon to be) old laptop keyboard.  have fun w/ the l, g, and h key.
[21:58:27] <jmbsvicetto> scarabeus: I'm fine with that wording
[21:58:31] <ferringb> +1 from me.
[21:58:48] <scarabeus> +1 from me obviously
[21:59:00] <scarabeus> bonsaikitten, Betelgeuse, wired
[21:59:10] <a3li> why was that 4-month rule removed? because the new recruiting rules imply the lead will enforce that anway?
[21:59:26] <ferringb> because someone got bitchy about a candidate who was 3.75 months showing up.
[21:59:26] <wired> the deputy thingie sounds weird and I still think the whole thing could use some rethinking, but +1 for now
[21:59:32] <ferringb> and 4 months is an arbitrary period.
[22:00:11] -*- ferringb notes the 4 months isn't going to stop someone from behaving as QA anyways
[22:00:11] <jmbsvicetto> a3li: the idea was to drop the "time" requirement and replace it with the "knowledge" requirement
[22:00:19] <ferringb> it just means that an actual QA member has to follow them around and back them up
[22:00:37] <a3li> jmbsvicetto: sounds reasonable
[22:00:48] <Betelgeuse> scarabeus: I still don't think it's wise to hardcode infra.
[22:01:01] <Betelgeuse> I don't see why Infra needs to be involved.
[22:01:24] <ferringb> I prefer infra
[22:01:47] <Betelgeuse> ferringb: How does it matter who does it?
[22:01:58] <ferringb> I'd frankly much more prefer it if QA/devrel/infra were equivalent in power, rather than lumping things in so that devrel is the decider, infra the implementer, and qa the recommendor
[22:02:28] <ferringb> Betelgeuse: if it's not explict they can go through infra, then the channel they'll get stuck with is devrel
[22:02:34] <ferringb> as said, I don't like that many eggs in one basket
[22:02:48] <Betelgeuse> ferringb: My points it should rather be anyone with ability to suspend access.
[22:02:53] <Betelgeuse> s/points/point/
[22:03:19] <ferringb> then hard code devrel or infra.
[22:03:21] <jmbsvicetto> ferringb: I agree with Betelgeuse that leaving it up to "anyone" who can do it doesn't impose any "limites"
[22:03:30] <jmbsvicetto> sorry, s/"limites"/"limits"
[22:03:52] <ferringb> jmbsvicetto: I'd say to some degree it does- in the past if it wasn't codified, it defaulted to devrel
[22:04:05] <ferringb> either way
[22:04:10] <ferringb> I want it explicit either can do it
[22:04:37] <ferringb> seems we're agreed, I'm just pushing for explicit "infra can pull the trigger if asked"- grok?
[22:05:25] <scarabeus> so wording should be what
[22:05:37] <jmbsvicetto> ferringb: I agree with either one can do it
[22:05:55] <ferringb> scarabeus: "either infra or devrel, and they don't have to agree"
[22:06:20] <ferringb> and yes, that opens up a fun question there ;)
[22:07:24] <ferringb> comments?
[22:07:35] <scarabeus> ... suspended by anyone with such privileges, pending analy...
[22:07:36] <ferringb> or has all the EU folk passed out ;)
[22:07:45] <scarabeus> i was inventing wording
[22:08:05] <scarabeus> ??
[22:08:07] <ferringb> ...suspended by anyone with such privileges (currently infra and devrel), pending...
[22:08:18] <ferringb> note the 'explicit' part I'm being a stubborn mule about
[22:08:22] <jmbsvicetto> ^^ +1
[22:08:25] <a3li> k
[22:08:33] <wired> sounds good
[22:09:01] <ferringb> +1 from me obviously
[22:09:14] <jmbsvicetto> ferringb: I know this might create some "tension" in the future between QA and devrel, but I think it can also help us to react quicker in "extreme cases"
[22:09:23] <scarabeus> se upated link
[22:09:39] <scarabeus> see
[22:09:51] <a3li> then, there's me asking stupid questions again: why was the lead-or-two-members thing made?
[22:10:11] <ferringb> jmbsvicetto: I'm not saying they should be at each others throats, but I don't hugely mind them being seperated and not always agreeing.  I get concerned when it's concentrated in one, or they're both ran by the same person/cadre
[22:10:16] <wired> a3li: quicker response iirc
[22:10:23] <scarabeus> a3li: because we can just say shut him without providing any feedback or reason
[22:10:25] <a3li> wired: well, there's a lead and a deputy
[22:10:33] <scarabeus> a3li: and do it later
[22:10:38] <jmbsvicetto> scarabeus: +1 from me
[22:10:44] <jmbsvicetto> ferringb: I understand and agree
[22:11:11] <a3li> scarabeus: revoking permissions without needing to provide a reason sounds prone to abuse to me
[22:11:28] <jmbsvicetto> a3li: the reason was to speed up reaction in case the lead and deputy aren't available at one point
[22:11:41] <ferringb> a3li: someone may abuse their rights, yes.
[22:11:42] <scarabeus> a3li: just imagine we would not have good reason, council would eat up qa for dinner in such case
[22:11:54] <ferringb> a3li: it's a fair bet they'll get their asses spanked 5 minutes later by the rest of us however
[22:12:17] <scarabeus> (i wrote that sentence as qa member)
[22:12:20] <ferringb> can't make it perfect, have to rely on some checks/balances
[22:12:38] <a3li> jmbsvicetto: well two leads is a sufficient rate of availability imo
[22:12:48] <jmbsvicetto> a3li: in the past it wasn't
[22:12:48] <a3li> ferringb: how about explicitly stating action in case of abuse in there then?
[22:13:23] <scarabeus> a3li: we can update the wording if it gets abused, come on, we dont plan to suspend acess for 11 people tomorow :D
[22:13:23] <jmbsvicetto> a3li: I don't think that's needed. Besides council being able to review the policy, any such abuses will constitute matter for a devrel process
[22:13:38] <a3li> that goes in line with my question 2b) what happens if QA fails to provide reasoning in these 14 days?
[22:13:52] <a3li> or that analysis
[22:15:02] <scarabeus> usually we don't use the what if cases in those documents so far i could see, but common sense gives us pretty angry devrel on one side, angry developer on other, and really fcked up qa in the middle
[22:15:17] <jmbsvicetto> My opinion is that would lead to an immediate reversal of the commit privileges removal and a devrel case
[22:15:38] <jmbsvicetto> but there are ways to deal with that already
[22:15:49] <scarabeus> where devrel already have some rules how to proceed when someone abuses power, so the qa member whom did froze it and didnt provide rest stuff is going to be deep fried
[22:16:11] <a3li> scarabeus: have a link handy?
[22:17:04] <ferringb> a3li: qa fails to provide cause in 14 days, and frankly no one cares, well, there is your answer
[22:17:18] <ferringb> a3li: qa fails to provide cause in 14 days, people care, one way or another devrel/council winds up involved
[22:17:35] <ferringb> (by "no one cares" I mean "no one cares nor disagress")
[22:18:19] <a3li> ferringb: it's a bit too implicit for me as well, given that the rest of the thing is rather verbose
[22:18:25] <ferringb> a3li: here's the thing
[22:18:41] <ferringb> a3li: you start trying to lock everything down into rules, you provide manuevering room for trolls to play games
[22:18:48] <Betelgeuse> If we want a fully documented way of acting then just leave it to devrel like currently: http://www.gentoo.org/proj/en/devrel/policy.xml
[22:18:50] <ferringb> it makes a bad situation worse
[22:19:22] <ferringb> a3li: enough is there imo to run with it, and make it work- and if it *doesn't* work, there are feedback mechanisms implicitly in place that means people will get very, very pissed
[22:19:40] <ferringb> said pissed people will be sorting it (devrel/council among others)
[22:20:11] <ferringb> that's, in my experience having been around these occurences, better than trying to codify each/every scenario
[22:20:13] <jmbsvicetto> scarabeus: Did you count the votes?
[22:20:18] <ferringb> if you still disagree, then go read some godel :P
[22:20:24] <ferringb> count's 4 if memory serves
[22:20:31] <scarabeus> yeah i have 4x aye
[22:20:43] <ferringb> scarabeus: you were a +1?
[22:20:44] <scarabeus> but i preffer to have all ayes possible
[22:20:50] <jmbsvicetto> who's missing?
[22:20:51] <ferringb> yeah, full tally is needed
[22:21:01] <jmbsvicetto> a3li, Betelgeuse, bonsaikitten?
[22:21:01] <ferringb> bonsai on both votes, betelgeuse in this case
[22:21:36] <scarabeus> ah it is 3, a3li didnt vote too :)
[22:21:41] <scarabeus> so what jorge said
[22:22:00] <jmbsvicetto> scarabeus: then were missing 4: wired?
[22:22:00] <ferringb> jmbsvicetto, me, wired.
[22:22:03] <ferringb> scarabeus: your vote?
[22:22:10] <scarabeus> i said previously +1
[22:22:12] <scarabeus> so yep
[22:22:21] <ferringb> wired: "sounds good" == +1?
[22:22:29] <wired> yes +1
[22:22:31] <a3li> ferringb: well, having everything set in stone is no good indeed. I find that part to be important though
[22:22:36] <jmbsvicetto> a3li / Betelgeuse: what about you?
[22:22:56] <ferringb> a3li: you should tangle someday with a troll who should've been a lawyer then
[22:23:01] <ferringb> a3li: it'll break you of that view. :)
[22:23:10] <a3li> as for voting, is there something like like abstention?
[22:23:12] <scarabeus> ferringb: hehehe :)
[22:23:16] <scarabeus> a3li: there is :)
[22:23:22] <a3li> then that'll be my vote
[22:23:44] <ferringb> mmm. crap.
[22:23:48] <ferringb> inconclusive count
[22:23:57] <Betelgeuse> scarabeus: Is the text meant to say that devrel will do the follow up by their own rules?
[22:23:59] <ferringb> oh right, 4
[22:24:04] <scarabeus> jorge, brian, alex, tomas = yes
[22:24:04] <scarabeus> alex = abstain
[22:24:07] <scarabeus> == accepted
[22:24:19] <Betelgeuse> I am not sure what compromise would mean in practise.
[22:24:30] <Betelgeuse> It implies some kind of acceptance from QA too.
[22:24:37] <scarabeus> Betelgeuse: it is then handled by you
[22:24:46] <jmbsvicetto> Betelgeuse: iirc, QA will make its case and present it to devrel.
[22:24:57] <jmbsvicetto> scarabeus: ^^ wasn't that the proposal?
[22:25:07] <scarabeus> yes
[22:25:08] <Betelgeuse> scarabeus: Maybe we change the text to "Devrel will then handle it according to their own policyt" ?
[22:25:35] <ferringb> I'm not a fan of devrel reversing QA opinion according to their own policies
[22:25:42] <ferringb> it's contrary to purposes
[22:25:54] <Betelgeuse> ferringb: Why involve devrel if they can't do anything?
[22:26:02] <ferringb> Betelgeuse: I'm not saying they can't be involved
[22:26:07] <ferringb> I'm just stating my main concern here, grok?
[22:26:13] <scarabeus> Betelgeuse: devrel should then review just if qa didnt violate some dev rights but technical standpoint is basis for qa decision
[22:26:42] <ferringb> alternatively, what do qa/devrel want their relationship/handling in this case to be?
[22:26:47] <ferringb> (agreed to by both sides)
[22:27:01] <ferringb> they're the ones who have to live by it after all
[22:27:12] <jmbsvicetto> ferringb: if QA doesn't like the way devrel proceeds, they can always approach council
[22:27:18] <jmbsvicetto> ferringb: checks and balances
[22:27:46] <ferringb> jmbsvicetto: I'd rather they sort this particular channel out themselves and get the sign off on council, rather than council saying "here's how it is, enjoy" and having them come back
[22:27:52] <scarabeus> Betelgeuse: i thought it more like devrel reviews what qa did and look if they didnt do big screwup :)
[22:28:45] <Betelgeuse> scarabeus: the current text doesn't say that
[22:28:51] <ferringb> yeah, I was noticing that
[22:29:05] <scarabeus> ok so how do you read current one
[22:29:07] <ferringb> last action didn't go that route if memory serves, but I could be wrong (and the doc could've changed since)
[22:29:23] <Betelgeuse> scarabeus: revoke or find something that QA agrees to
[22:29:54] <ferringb> doesn't really handle the case of devrel converting something into a suspension
[22:30:11] <ferringb> although again, I strongly think the two groups should sort this out themselves since they have to live by it
[22:30:24] <Betelgeuse> ferringb: That's I made the point of just using DevRel policy which addresses things like suspension
[22:30:26] <ferringb> we sign off if it's sane, but they figure out the working relationship for that case.
[22:30:49] <scarabeus> Betelgeuse: we can discuss this off between us two how to handle it cause we are up time for this section :)
[22:30:55] <ferringb> Betelgeuse: with respect, QA hasn't seemed all that happy w/ devrel policy in application here
[22:31:03] <Betelgeuse> ferringb: they haven't
[22:31:11] <scarabeus> we weren't
[22:31:15] <ferringb> thus... go figure it out
[22:31:27] <ferringb> come back when one of y'all has beat the other one up, or you've got a working proposal
[22:31:53] <ferringb> dictacting terms just means this goes boom the next time QA has to move on something (or devrel thinks QA is being powermad)
[22:31:57] <Betelgeuse> i am fine with what scarabeus said.
[22:32:35] <ferringb> qa owns the tech, devrel makes sure they're not being power mad; basically?
[22:32:56] <Betelgeuse> ferringb: Cases like this are about never just about tech.
[22:33:07] <ferringb> aware
[22:33:27] <ferringb> but usually one can point to some pretty fucked up commits (tech) backing the claim of bad behaviour/not caring
[22:33:33] <ferringb> eenie meenie
[22:33:36] <jmbsvicetto> I need to leave now. I'll read the backlog later
[22:33:47] <jmbsvicetto> I vonlunteer for being chair for next meeting
[22:34:06] <scarabeus> ook if we wont find anyone else you will be :P
[22:34:09] <wired> can we set a date before you go?
[22:34:28] <scarabeus> i would go with 5.4.?
[22:34:33] <ferringb> err
[22:34:37] <ferringb> right, EU
[22:34:43] -*- ferringb prefers 04/01
[22:34:53] <scarabeus> mm/dd?
[22:34:56] <ferringb> yep
[22:35:02] <scarabeus> friday
[22:35:02] <ferringb> many possibilities.
[22:35:05] <wired> friday?
[22:35:10] <scarabeus> PUB!?!?
[22:35:16] <ferringb> awww
[22:35:39] <scarabeus> but i can jus tbe there so no bigge
[22:35:45] <scarabeus> 1. works for me, at this time
[22:35:53] <scarabeus> ferringb: or you would preffer different time too ?
[22:36:03] <ferringb> scarabeus: this one, I'm more intent to have it land on april fools day
[22:36:11] <ferringb> purely for the 04/01 angle
[22:36:12] <wired>  the first of the month could be an issue for me, but I cant tell now
[22:36:13] <wired> hahahah
[22:36:20] <wired> ferringb: nice ;p
[22:37:13] -*- ferringb is fine with the 20 utc time if needs be, date's flexible
[22:37:17] <ferringb> Betelgeuse: still around?
[22:37:58] <scarabeus> ferringb: ok i am for it :)
[22:38:02] <scarabeus> sounds fun
[22:38:37] <ferringb> well, just a notion- will try to bring it up in the coming weeks
[22:38:56] <Betelgeuse> ferringb: yes
[22:38:57] <ferringb> QA's gleppified in terms of role/purpose
[22:39:12] <ferringb> Betelgeuse: I'd like to extract the current devrel version of it y'all have into a glep
[22:39:28] <Betelgeuse> ferringb: yeah I started a thread about that on gentoo-project
[22:39:33] <ferringb> 'k, thanks
[22:39:44] <Betelgeuse> ferringb: So we could put it to the next meeting
[22:39:49] <scarabeus> yep sounds nice
[22:39:54] <ferringb> not looking to lock down all details, just lock down the boundaries/range same as has been done for QA
[22:40:07] <scarabeus> Betelgeuse: and we two need to talk about the wording of last sentence to reflect what i said and ment,
[22:40:12] <scarabeus> any wordings anyone?
[22:40:19] <scarabeus> i sucks in expressing my thoughts obviously
[22:40:30] <scarabeus> (i sucks even in my native language, its not limited to english :D)
[22:40:41] <ferringb> scarabeus: go with pseudocode
[22:40:56] <scarabeus> ferringb: that i do so often :D
[22:41:25] <scarabeus> anyway lets close this since we agreed on this topic and only tiny stuff is needed to be delt with between me and Peteri
[22:41:35] <scarabeus> and move to the bugs
[22:41:40] <scarabeus> which is actualy A bug
[22:41:46] <scarabeus> which involves you Brian
[22:41:51] <scarabeus> bug 344479
[22:41:55] <willikins> scarabeus: https://bugs.gentoo.org/344479 "Slacker point for ferringb"; Gentoo Linux, Unspecified; NEW; tove:council
[22:41:55] <ferringb> scarabeus: you, or diego?
[22:42:09] <ferringb> eh?
[22:42:15] <scarabeus> ferringb: that deputy part is done so i can act as lead if you didnt figure out yet :D
[22:42:22] <Betelgeuse> scarabeus: Any objections from QA to just fall on DevRel policy?
[22:43:32] <ferringb> if I'm going to get a slacker point for forgetting an email, well, y'all are going down with me
[22:43:47] <ferringb> (not because I'll take you down, but because it happens a lot... meaning we should automate the fucking thing)
[22:43:52] <scarabeus> ferringb: i am not saying that, i want to see what to do with it :)
[22:43:55] <ferringb> either way, y'all decide if you want to spank me
[22:43:59] <scarabeus> ferringb: and i deserve the same
[22:44:00] <ferringb> <-- work
[22:44:08] <scarabeus> ferringb: i sent it 3 days in advance so i violated it too
[22:44:32] <ferringb> think a better notion is to just automate the bugger rather than trying to spank folk
[22:44:38] <scarabeus> Betelgeuse: well if you guys will take into effect the qa resolution and act upon it
[22:44:41] <ferringb> although that requires calendaring
[22:44:51] <ferringb> either way, want to get lunch prior to meeting, thus...
[22:44:52] <ferringb> <-- work
[22:44:58] <Betelgeuse> I don't think we can give a slacker mark in the sense of GLEP 39
[22:45:04] <Betelgeuse> But you can do some slapping around.
[22:45:15] <ferringb> might just enjoy it.
[22:45:21] <ferringb> beware the creepy guy.
[22:45:37] -*- wired slaps ferringb around
[22:46:01] <scarabeus> ok i think we wont do any resolution apart from "happens and should not" for now
[22:46:08] <ferringb> hmm. gimp nick is in use.
[22:46:08] <scarabeus> and someone should close the bug
[22:46:24] <scarabeus> i would go with ferringb himself should close it and explain/appologise :P
[22:46:29] <ferringb> scarabeus: council calendaring + automated emails is the dependency there
[22:46:31] <scarabeus> till next meeting
[22:47:10] <Betelgeuse> scarabeus: I am not really sure how the GLEP 48 vote ended
[22:47:17] <Betelgeuse> any way I get to inspect the summary I guess :)
[22:47:38] <scarabeus> :-)
[22:47:57] -*- wired has to go
[22:48:16] <scarabeus> Betelgeuse: it was accepted 4 to 7; but i will postprone it for rewording the last sentence maybe somehow to reflect what i said :)
[22:48:26] <scarabeus> ok open floor is on list
[22:48:27] <wired> I say we talk about the next meeting date over email
[22:48:33] <wired> for finalization
[22:48:34] <scarabeus> wired: sounds sane
[22:48:41] <scarabeus> wired: could you sent starting mail?
[22:48:45] <wired> i'll be back in >=30m
[22:48:46] <wired> scarabeus: sure
[22:48:48] <scarabeus> ok
[22:48:58] <wired> thanks, c ya soon
[22:49:03] <scarabeus> ok open floor
[22:49:10] <scarabeus> anyone wants anything from us?
[22:50:14] <scarabeus> oh and i would like to, as council, give big Thanks and icecream to idl0r/a3li for making the bugzie4 :)
[22:51:04] <a3li> you're most welcome
[22:52:27] <scarabeus> ok i think thats all given the silence,
[22:52:27] <scarabeus> so council members feel released from duty!
[22:52:27] <scarabeus> </meeting>