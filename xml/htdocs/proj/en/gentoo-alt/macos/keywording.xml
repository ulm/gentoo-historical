<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/gentoo-alt/macos/Attic/keywording.xml,v 1.2 2005/10/14 20:34:06 grobian Exp $ -->

<guide link="/proj/en/gentoo-alt/macos/keywording.xml" lang="en">
  <title>Gentoo/OSX Temporary Keywording Policy</title>

  <author title="Author">
    <mail link="grobian@gentoo.org">Fabian Groffen</mail>
  </author>

  <abstract>
    This page deals with the current keywording strategy within the
    Gentoo for OSX project.
  </abstract>


  <!-- The content of this document is licensed under the CC-BY-SA license -->
  <!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
  <license/>

  <version>1.0</version>
  <date>2005-10-08</date>

  <chapter> <!-- Keywording -->
    <title>Keywording</title>

    <section> <!-- Background -->
      <title>Background</title>
      <body>

        <impo>
          This document describes a <e>temporary</e> policy in use by
          the Gentoo for Mac OSX team.  It is by no means meant as
          a permanent deviation from the normal Gentoo policies on
          keywording.
        </impo>

        <p>
          Before an ebuild can actually be emerged on an Gentoo for OSX
          system, such ebuild first has to be keyworded using the
          <c>ppc-macos</c> keyword.  This keywording can be done in two
          flavours: unstable and stable.<br />
          An ebuild that is <e>unstable</e> has the <c>~ppc-macos</c>
          keyword, while a stable ebuild has the <c>ppc-macos</c>.
        </p>

        <p>
          Usually within Gentoo, ebuilds first go in unstable, for a
          testing period.  After this period, such ebuilds are usually
          marked stable, till they are too old and get removed.
        </p>

        <p>
          This document describes why, how and when the Gentoo for Mac
          OSX team deviates from this standard approach.
        </p>

      </body>
    </section>

    <section> <!-- Why? -->
      <title>Why does Gentoo for OSX differ?</title>
      <body>

        <p>
          Gentoo for Mac OSX unforunately is far from perfect in the
          sense of package management.  Unlike all other projects that
          are in the live portage tree today, the OSX project has a
          <e>foreign host OS</e>, which basically means that portage
          does not control the complete environment it lives in.
          Instead, it has to rely on what's offered by the host OS
          (mainly through <path>package.provided</path>).  Because the
          foreign host OS is an entity that most users don't want
          portage to mess with -- considering portage doesn't know much
          about it -- this often results in collisions, where portage
          wants to install a newer version of a package that is already
          provided by the host OS.
        </p>

        <p>
          A collision of a package with the host OS' provided package,
          mainly means that the package cannot be installed without
          sacrifying the integrity of the host OS.  Portage, however is
          built on the assumption that it controls itself what is being
          installed and what not.  Version X of package Y can be
          provided by the host OS, but have some extra packages, making
          it behave a little bit different than the same version X of
          package Y that is in portage.  This leads us to the conclusion
          that there is no way to reliable say something is
          <e>stable</e>.
        </p>

        <p>
          As long as portage is not able to supply itself with its own
          goods on OSX -- something that is being worked on -- a
          different keywording scheme applies that tries to reduce the
          problems that are current and keep popping up.
        </p>

      </body>
    </section>

    <section> <!-- What problems? -->
      <title>Problems of packages on OSX</title>

      <body>

        <p>
          The first problem we experience is <e>host OS version</e>.
          Currently Gentoo for OSX supports the latest Panther (10.3)
          and Tiger (10.4) releases, but basically noone is a frequent
          Panther tester.  Something that works on Tiger is not
          guaranteed to work on Panther and vice versa.  Applications
          that are provided on Tiger are absent on Panther.  And so on,
          there is a big difference between the two, and for many of us
          it is impossible to test a package on Panther before marking
          it stable.
        </p>

        <p>
          A second problem lies in the abnormality of compilation and
          linking techniques on Mac OSX.  Abnormality in the sense that
          it is not like on Linux.  Many developers not on the OSX team
          bump packages, copy over the ~ppc-macos keyword and do not
          realise that the newer version of such package doesn't compile
          on OSX.  There are even examples of packages that were marked
          stable on OSX by non-OSX members which were completely broken.
        </p>

        <p>
          Finally, security issues or simply cleanup actions require
          ebuilds to get updated for the client.  This is usually done
          using keywording stable of a newer version of the ebuild.
          This is not always possible, since newer versions can have
          more requirements which make the package collide with the host
          OS.  Since nobody on the staff tests these colliding packages,
          it is hard to mark them stable and both make sense.
        </p>

      </body>
    </section>

    <section> <!-- rules -->
      <title>Keywording rules</title>

      <body>

        <p>
          For short the following rules apply when keywording:
        </p>
        <ol>
          <li>
            Only keyword new packages ~ppc-macos; don't stable them
            after a month
          </li>
          <li>
            Only stable new ebuilds if this is required by security or
            cleanup bugs and we have an older ebuild that is stable
          </li>
        </ol>
        <p>
          Deviation of these rules should be discussed on the
          <c>gentoo-osx</c> mailing list first.
        </p>

        <p>
          Considering the given two rules, the following comments can be
          made:
        </p>
        <ul>
          <li>
            Not stabling packages means no worries on keeping track of
            them
          </li>
          <li>
            With the userbase we have (feedback), it feels
            unreasonable to mark anything stable after a month hearing
            nothing on it, you don't even know if someone tried it!
          </li>
          <li>
            By keeping stuff unstable we underline the experimental
            nature of Portage on OSX and perhaps slow down broad use
            of Portage till we have a better solution
          </li>
          <li>
            Slowing down further use is good at the moment, because
            when a new Portage will give us the proper handles, every
            current user has to switch somehow, and for us big things
            will change, so better have people starting from scratch
            then
          </li>
          <li>
            We are simply in many cases not able to offer an
            alternative to fink and DP quality wise, we're working
            hard, but lack the proper setup (think of missing/lacking
            perl, gtk+, etc)
          </li>
          <li>
            We greatly reduce running the risk of having a broken
            stable package in portage
          </li>
          <li>
            We will be better prepared to let portage 'force' doing
            many updates once we stable them if we have a better
            Portage infrastructure
          </li>
        </ul>

        <p>
          The three problems described above are (partly) tackled by
          this scheme because now we ultimately never mark stable, so
          should not have broken packages that are marked stable.  Since
          only the unstable keyword is used, we don't have to bump the
          keyword on security bugs, or are the last ones keeping a
          package in portage because we didn't bump our stable keyword.
        </p>

        <p>
          Of course there is a lot in portage that is already stable.
          This will continue to give us problems, but for everything we
          add, this guide should make sure we get less problems with
          those packages.  Afterall this strategy is far from a real
          solution, but only an temporal solution to make things easier.
        </p>

      </body>
    </section>

  </chapter>

</guide>

<!-- vim: set expandtab ts=2 sw=2: -->
<!-- kate: space-indent on; indent-width 2; replace-tabs on; -->
