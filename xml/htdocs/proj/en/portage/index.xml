<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/project.xsl" type="text/xsl"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE project SYSTEM "/dtd/project.dtd">


<project>
	<name>Gentoo Portage</name>

	<longname>Gentoo Linux Portage Development</longname>

	<description>
		The Portage Development Project is devoted to maintaining
		and updating portage's core functionality and utilities.
	</description>

	<longdescription><p>
		The Portage Development Project works to provide a continuously
		expanding and developing tool for the management and installation
		of packages. The developers work on providing a coherent system
		that is as trouble free as possible (backwards compatible, automated,
		and simple). Bugs are tracked and fixed from the
		<uri link="http://bugs.gentoo.org">Gentoo bug tracker</uri> and
		developer-developer correspondence is maintained on the
		gentoo-portage-dev mailing list.</p>
	</longdescription>

	<goals>
		<p>The goal of the Portage Development Project stands at providing
		a seamless integration of developer and user tools to aid the growth
		and maintenance of the Gentoo Linux Portage Tree.
		</p>
	</goals>
	
	<extraproject name="Sandbox" lead="azarah">
		<p>The development and maintenance of sandboxing-related tools and
		libraries. These exist as a control method that allows portage to
		be assured that all files executed operate only in monitored locations
		and can be tracked in portage's database for later reversing.
		</p>
	</extraproject>

	<extraproject name="Repoman">
		<p>The maintenance of the 'repoman' tool. Repoman provides the
		checking and commit services necessary to ensure that ebuilds are
		proper before entering into circulation.
		</p>
	</extraproject>

	<extraproject name="Portage" lead="carpaski">
		<p>Maintenance of the back end modules and functionality of the
		portage system. Providing APIs to the raw databases used to interact
		with the installed and available packages provided through the
		portage system.
		</p>
	</extraproject>

	<extraproject name="Documentation">
		<p>Updating and Creating documentation for the tools of portage.</p>
	</extraproject>

	<dev role="Operational Manager" description="Gentoo Linux Portage TLP, portage-ng co-lead">carpaski</dev>
	<dev role="Coordinator/Manager" description="Portage/portage-ng roadmap/design">drobbins</dev>
	<dev role="Coordinator/Manager" description="Portage/portage-ng roadmap/design">pvdabeel</dev>
	<dev role="subproject lead" description="Sandbox">azarah</dev>
	<dev role="member" description="Portage">nakano</dev>
	<dev role="member" description="Portage">aether</dev>
	<dev role="member" description="Sandbox">scox</dev>
	<dev role="member" description="Repoman">puggy</dev>
	<dev role="member" description="Misc">genone</dev>
	<dev role="member" description="Documentation">vapier</dev>

<extrachapter position="top">
	<title>Portage(-ng) roadmap</title>
	<section>
	<body>
	<table>
	<tr><th>target date</th><th>description</th></tr>
	<tr><ti>24 Nov 2003</ti><ti><b>portage-ng:</b> completion of portage-ng exploratory prototype</ti></tr>
	<tr><ti>01 Dec 2003</ti><ti><b>portage:</b> public development roadmap (including <uri link="/proj/en/gentoo-alt/macos-1.xml">MacOS/pathspec</uri> integration plan)</ti></tr>
	<tr><ti>24 Dec 2003</ti><ti><b>portage-ng:</b> public initial comprehensive requirements and design goals document</ti></tr>
	<tr><ti>01 Mar 2003</ti><ti><b>portage-ng:</b> initial implementation roadmap</ti></tr>
	</table>
	</body>
	</section>
</extrachapter>

<extrachapter position="bottom">
<title>How to Participate</title>
<section>
<body>
<p>
Involvement in portage development starts with learning some aspect of
portage. If something in particular strikes your fancy, then peruse the
code and try to figure out how it works. Work out your idea and either
present it in #gentoo-portage or on the mailing list 
<uri link="http://www.gentoo.org/main/en/lists.xml">gentoo-portage-dev</uri>
(please don't post to the list unless you've made a concerted effort to
figure out or work up an idea or plan -- High volume lists tend to get
ignored when they become more trouble than benefit).
</p>
<p>
The primary reason ideas or patches are ignored or discarded relates to
how well the design is drawn. Patches that create very tight (limited and
simple) changes to add a feature set or enhance code are quite welcome, but
quite often patches haphazardly change portions of code that is not
necessary or explained for the desired result. The simpler you can make
the design the better.
</p>
<p>
Using 
<uri link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/portage/?cvsroot=gentoo-src">
viewcvs</uri>
one can see the current portage tree and any extra files that
are not part of the distributed set of portage. The
<uri link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/portage/ChangeLog?rev=HEAD&amp;cvsroot=gentoo-src&amp;content-type=text/vnd.viewcvs-markup">
ChangeLog
</uri>
and the
<uri link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/portage/TODO?rev=HEAD&amp;cvsroot=gentoo-src&amp;content-type=text/vnd.viewcvs-markup">
TODO
</uri>
files denote the majority of the recent work for portage. The
<uri link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/portage/TODO?rev=HEAD&amp;cvsroot=gentoo-src&amp;content-type=text/vnd.viewcvs-markup">
TODO
</uri>
lists the major works desired for the portage system. They are generally
major efforts but piecewise patches can be great helps.
</p>
<p>
If you are interested in helping, but don't have a niche that you are
interested in filling, you can always look through
<uri link="http://bugs.gentoo.org">bugs.gentoo.org</uri>. There
are many many bugs waiting to be found and fixed and many enhancements
looking to find someone to code them. Figure out a fix, implement it,
test it, and then keep trying to make the patch smaller. Post it for
review on <uri link="http://bugs.gentoo.org">bugs.gentoo.org</uri>, and
keep working on it. If it seems ignored, make a new comment in the bug
and/or mention it in #gentoo-portage.
</p>
</body>
</section>
</extrachapter>
<extrachapter position="bottom">
<title>Submitting Patches</title>
<section>
<body>
<p>
It's very important that submitted patches follow the proper guidelines.
Python is very picky about whitespace and the easier it is to understand
what the patch does from the start, the more likely it will be looked into.
</p>

<ul>
<li>Use TABS. Some people like 8 spaces, some people like 4, and some
like 2. Tabs are the happy medium.</li>
<li>Always submit patches. Never submit complete files unless the file
has changed completely or is new. VERBOSELY explain why a complete
rewrite was necessarily or what the new file does.</li>
<li>All python (and preferably everything else) patches should be
committed with '-u' or '-ur' as the only option to diff. b and B will
most likely cause a patch to be rejected.</li>
<li>All patches must be against a current release version or a current
cvs version. Please list which version it is against.</li>
<li>Only submit clean patches. Do not include other patches in a
submitted patch. If the code found in a patch does not match the
description of the patch, it will be rejected.</li>
<li>Describe exactly what the changes do and why they are required. Even
if they are obvious the description should still be there.</li>
</ul>
</body>
</section>
</extrachapter>
</project>
