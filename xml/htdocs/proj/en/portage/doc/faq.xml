<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/portage/doc/faq.xml,v 1.26 2007/09/22 00:47:30 zmedico Exp $ -->

<guide link="/proj/en/portage/doc/faq.xml" lang="en">
<title>Portage Frequently Asked Questions (FAQ)</title>

<author title="Author">
  <mail link="antarus@gentoo.org">Alec Warner</mail>
  <mail link="zmedico@gentoo.org">Zac Medico</mail>
</author>
<author title="GuideXML">
  <mail link="chriswhite@gentoo.org">Chris White</mail>
</author>

<abstract>
FAQ Frequently Asked Questions about Portage.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.0</version>
<date>2006-04-04</date>
<chapter>
<title>Frequently Asked Questions</title>
<section>
<title>Why is it that emerge does not update all packages?</title>
<body>

<p>
By default, the dependency graph may not include some packages. For example,
it will not include any packages that are listed in the output of
<c>emerge --pretend --depclean</c>. It will also not include any build time
dependencies for installed packages or binary packages. If you would like to
include such build time dependencies even though they are not strictly
required, use <c>--with-bdeps=y</c>. You can set
<c>EMERGE_DEFAULT_OPTS="--with-bdeps=y"</c> in <path>/etc/make.conf</path> if
you would like this option to be enabled by default.
If you would like a specific package to be updated in any case, you can use
<c>emerge --noreplace &lt;atom&gt;</c> to have it added to the world set.
</p>
<p>
After running <c>emerge --deep --with-bdeps=y world</c>, it is a good idea to
use <c>emerge --pretend --depclean</c> to see if there are any packages that
it would remove. If that command shows a package that you would like to keep,
use <c>emerge --noreplace &lt;atom&gt;</c> to have it added to the world set.
</p>
<warn>When you use <c>emerge --depclean</c> to remove unwanted packages, it is
a good idea to run <c>revdep-rebuild</c> (from the gentoolkit package)
afterwards.</warn>
<note>Run <c>man emerge</c> to view the manual page which documents all
<c>emerge</c> options.</note>

</body>
</section>

<section>
<title>Can I mount the portage tree ( /usr/portage ) via NFS?</title>
<body>

<p>
Mounting <path>/usr/portage</path> over NFS is possible.  However you must be
careful to run <c>emerge --metadata</c> on all clients who are mounting the tree 
over NFS.  Otherwise their Portage cache's will be stable and Portage will run rather
slowly. You need not run <c>emerge --sync</c> on every client.  If you encounter
problems with an NFS setup it is important that you ensure you have the proper locking
daemons on both the NFS client machines and the NFS server machine.  Portage uses
hardlinks over NFS in an attempt to lock files; if the locking daemon fails to lock
files Portage may complain about failed or stale locks.  There is a script 
<path>/usr/lib/portage/bin/clean_locks</path> that can be used to clean out old lockfiles.
</p>

</body>
</section>
</chapter>
</guide>
