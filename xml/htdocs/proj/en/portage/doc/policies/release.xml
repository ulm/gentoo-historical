<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/proj/en/portage/doc/policies/release.xml">
<title>Portage release policy</title>
<author>
  <mail link="genone@gentoo.org">Marius Mauch</mail>
  <mail link="jstuubs@gentoo.org">Jason Stubbs</mail>
</author>

<abstract>
Rules and guidelines hot to create a portage release.
</abstract>

<license/>

<version>0.1</version>
<date>02 Jul 2006</date>

<chapter>
<title>Making a portage release</title>

<section>
<title>Release steps</title>
<body><warn>The following is based on an old mail by former portage release coordinator Jason Stubbs, it might not reflect current practice</warn>
<pre caption="steps to create a release">cd ${TRUNK}
svn up
svn diff
# confirm that there are no changed files
cp -R ${TRUNK} ${RELEASES_DIR}/portage-${RELEASE_VER}
cd ${RELEASES_DIR}/portage-${RELEASE_VER}
kill-unneeded.sh
# replace VERSION in pym/portage.py with ${RELEASE_VER}
diff -uNr ${RELEASES_DIR}/${PREVIOUS_RELEASE} ${RELEASES_DIR}/portage-${RELEASE_VER} | less
# check through to make sure there are no extra files and no strange commits
cd ${TRUNK}/..
svn cp trunk tags/${RELEASE_VER}
# check ${RELEASES_DIR}/${PREVIOUS_RELEASE}/ChangeLog for the last revision number
cd ${TRUNK}
LANG=C svn -v -r ${LAST_REVISION+1}:HEAD log > ${RELEASES_DIR}/trunk.log
cd ${RELEASES_DIR}
parse_log.py > portage-${RELEASE_VER}/ChangeLog
cat ${PREVIOUS_RELEASE}/ChangeLog >> ${RELEASE_VER}/ChangeLog
# edit portage-${RELEASE_VER}/ChangeLog, copy and adjust the release header
tar jcf portage-${RELEASE_VER}.tar.bz2 portage-${RELEASE_VER}
# upload to dev space and /space/distfiles-local
# wait for the file to propogate
# commit new ebuild
</pre>
</body>
</section>

</chapter>

</guide>
