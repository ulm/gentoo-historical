<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/portage/doc/testing.xml,v 1.12 2014/11/24 22:50:59 zmedico Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide lang="en" disclaimer="obsolete" redirect="http://wiki.gentoo.org/wiki/Project:Portage#Testing_multiple_Portage_versions">

<title>How to obtain and test development versions of Portage</title>

<author>
  <mail link="genone@gentoo.org">Marius Mauch</mail>
</author>

<abstract>
This document some notes about how interested users and developers can get
get access to our Subversion repository and how to use it without replacing 
their main Portage installation.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.1</version>
<date>2007-06-14</date>

<chapter>
<title>Access to Portage GIT repositories</title>
<section>
<body>
<p>The Portage sourcecode is maintained within a GIT repository on
<uri link="http://git.overlays.gentoo.org/">git.overlays.gentoo.org</uri>. 
If you are a dev: The main repository is located at
<uri>git+ssh://git@git.overlays.gentoo.org/proj/portage.git</uri>,
please note that it is subject to strict access controls, only people listed
in the developers section on the portage project page are able to commit to it.</p>
<note>It is assumed you know how to work with GIT.</note>
<note>The repository can be viewed over
<uri link="http://git.overlays.gentoo.org/gitweb/?p=proj/portage.git;a=summary">GitWeb</uri>
</note>
<p>
The repository currently contains the following branches (incomplete list):
</p>

<ul>
<li>master: the current main development line</li>
<li>prefix: experimental branch with support for prefix installs</li>
<li>2.1.7: current stable maintenance branch</li>
</ul>

<note>The old SVN repository still exists, but is not updated anymore or used in any other way.</note>

</body>
</section>
</chapter>

<chapter>
<title>Creating snapshots from Portage GIT repositories</title>
<section>
<body>
<pre caption="creating a snapshot from portage master branch">
git clone git://git.overlays.gentoo.org/proj/portage.git
snapshot_version=$(git describe --tags | sed -e 's|-\([0-9]\+\)-.\+$|_p\1|')
cd portage
./mkrelease.sh ${snapshot_version#v}
</pre>
</body>
</section>
</chapter>

<chapter>
<title>Testing multiple Portage versions</title>
<section>
<body>
<note>This section only applies to Portage 2.1.2 or later</note>
<p>There are various reasons why you'd want to have multiple versions of portage 
available at the same time without having to install them as system default.
Examples would be to check which versions are affected by a specific bug, to
test new features before deploying a new version or have a GIT checkout available
for testing while keeping a stable release for normal operation.</p>
<p>As of Portage-2.1.2 one can have and use an arbitrary number of Portage 
installations parallel to each other by adjusting the two environment variables
<e>PATH</e> and <e>PYTHONPATH</e>. For example if you have a checkout of the
master branch at <path>/checkouts/portage</path> you'd set them like this:</p>
<pre caption="settings to use portage master branch">
export PYTHONPATH="/checkouts/portage/pym${PYTHONPATH:+:}${PYTHONPATH}"
export PATH="/checkouts/portage/bin:${PATH}"
</pre>
<p>With those settings calling tools like <c>emerge</c>, <c>repoman</c> or 
<c>ebuild</c> will pickup the correct locations to import libraries. External 
tools like gentoolkit or porthole may or may not respect those settings though.
Setting <e>PATH</e> isn't even necessary if you always call the commands by their full 
name (e.g. <c>/checkouts/portage/bin/emerge</c> instead of <c>emerge</c>).</p>
</body>
</section>
</chapter>
</guide>
