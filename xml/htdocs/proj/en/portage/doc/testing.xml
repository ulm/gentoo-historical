<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/portage/doc/testing.xml,v 1.2 2007/06/14 02:26:07 genone Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/proj/en/portage/doc/testing.xml">

<title>How to obtain and test development versions of Portage</title>

<author>
  <mail link="genone@gentoo.org">Marius Mauch</mail>
</author>

<abstract>
This document some notes about how interested users and developers can get
get access to our Subversion repository and how to use it without replacing 
their main Portage installation.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>0.1</version>
<date>2007-06-14</date>

<chapter>
<title>Access to Portage SVN repositories</title>
<section>
<body>
<p>The Portage sourcecode is maintained within a SVN repository on the Gentoo SVN server. 
This server is only accessible for Gentoo developers, for anonymous access see <uri>http://anonsvn.gentoo.org/</uri>.
If you are a dev: The main repository is located at <uri>svn+ssh://cvs.gentoo.org/var/svnroot/portage/main</uri>,
please note that it is subject to strict access controls, only people listed
in the developers section on the portage project page are able to commit to it.</p>
<note>It is assumed you know how to work with Subversion.</note>
<note>The repository can be viewed over <uri link="http://sources.gentoo.org/viewcvs.py/portage/main/">viewcvs</uri></note>
<p>
The repository currently contains the following branches (incomplete list):
</p>

<ul>
<li>trunk: the current main development line</li>
<li>branches/2.1-experimental: the former development line, now abandoned (don't use it unless you want to backport stuff)</li>
<li>branches/prefix: experimental branch with support for prefix installs</li>
<li>branches/2.0.54: old stable maintenance branch, nothing happens here anymore</li>
<li>branches/2.1.2: current stable maintenance branch</li>
</ul>

<note>The old CVS repository still exists, but is not updated anymore or used in any other way.</note>

</body>
</section>
</chapter>

<chapter>
<title>Testing multiple Portage versions</title>
<section>
<body>
<note>This section only applies to Portage 2.1.2 or later</note>
<p>There are various reasons why you'd want to have multiple versions of portage 
available at the same time without having to install them as system default.
Examples would be to check which versions are affected by a specific bug, to
test new features before deploying a new version or have a svn checkout available
for testing while keeping a stable release for normal operation.</p>
<p>As of Portage-2.1.2 one can have and use an arbitrary number of Portage 
installations parallel to each other by adjusting the two environment variables
<e>PATH</e> and <e>PYTHONPATH</e>. For example if you have a checkout of the
trunk branch at <path>/checkouts/portage/trunk</path> you'd set them like this:</p>
<pre caption="settings to use portage trunk">
export PYTHONPATH="/checkouts/portage/trunk/pym:${PYTHONPATH}"
export PATH="/checkouts/portage/trunk/bin:${PATH}"
</pre>
<p>With those settings calling tools like <c>emerge</c>, <c>repoman</c> or 
<c>ebuild</c> will pickup the correct locations to import libraries. External 
tools like gentoolkit or porthole may or may not respect those settings though.
Setting <e>PATH</e> isn't even necessary if you always call the commands by their full 
name (e.g. <c>/checkouts/portage/trunk/bin/emerge</c> instead of <c>emerge</c>).</p>
</body>
</section>
</chapter>
</guide>
