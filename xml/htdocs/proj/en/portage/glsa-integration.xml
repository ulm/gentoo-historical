<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide link="/proj/en/portage/glsa-integration.xml">
<title>Portage GLSA integration</title>
<author>
  <mail link="genone@gentoo.org">Marius Mauch</mail>
</author>

<abstract>
This document attempts to collect all information regarding the upcoming 
integration of Gentoo Linux Security Advisories into portage.
</abstract>

<license/>

<version>0.2</version>
<date>06 Oct 2004</date>


<chapter>
<title>Overview</title>

<section>
<title>General information</title>
<body>
<p>This page is meant to document the implementation of 
<uri link="http://www.gentoo.org/proj/en/glep/glep-0014.html">GLEP 14</uri>
which deals with the design for a security-only update feature for <c>emerge</c>.
</p>
</body>
</section>

<section>
<title>Roadmap</title>
<body>
<p>The implementation will take place in the following order:</p>
<ol>
	<li>distribute GLSAs in the portage tree (completed)</li>
	<li>release a beta version of the GLSA handling code in gentoolkit (in progress)</li>
	<li>move dependency handling code from emerge to portage.py</li>
	<li>add glsa.py to portage</li>
	<li>integrate functions from glsa-check in emerge and equery</li>
</ol>
<note>This list might be expanded in the future</note>
</body>
</section>

</chapter>


<chapter>
<title>Current status</title>

<section>
<body>
<p>Currently we have a testing version of the proposed implementation released
in <e>gentoolkit</e> (versions 0.2.0_pre7 and higher). This implementation consists of
the general handling code (in <c>glsa.py</c>) and an interface script <c>glsa-check</c>.
While <c>glsa.py</c> will later be included in portage the interface script is only
temporary, its functionality will later be included in <c>emerge</c> and/or <c>equery</c>.</p>
</body>
</section>

<section>
<title>Known problems</title>
<body>
<p>Currently the following problems are known in the GLSA handling code:</p>
<ul>
	<li>The 200402-02 GLSA regarding xfree requires some functionality not
		present in portage. Because of that many systems will be shown as affected
		when they are not. As a workaround inject this GLSA.</li>
	<li>Some of the kernel GLSAs have a similar problem, if <c>glsa-check</c> wants 
		to update your kernel and you think it's not needed please unmerge old 
		kernel sources first. If that doesn't fix the problem you can also inject 
		those GLSAs.</li>
	<li><c>glsa-check</c> is not SLOT-aware. This might result in false positives.
		Please check your system for old versions that are in a different SLOT.</li>
	<li>GLSAs that were released in 2003 don't follow the current DTD which is 
		required for the portage integration. Until they are converted to the new 
		DTD they will be ignored by <c>glsa-check</c>.(fixed)</li>
	<li>glsa-check currently doesn't check the given arguments for correct syntax,
		so if you give it a malformed argument it will likely create a traceback.</li>
	<li><c>glsa-check</c> fails when you try to fix, inject, pretend or dump a GLSA that is 
		using the old DTD (which is always the case when you use the all or new 
		keywords). This is caused by a missing check. Will be fixed in the next 
		release.(fixed)</li>
	<li>On some systems <c>glsa.py</c> won't find the portage module as I forgot to
		add the portage python path. Fixed in the next release.(fixed)</li>
	<li><c>glsa.py</c> apparently has some compability issues when you're using
		python-2.2 and/or pyxml. Please upgrade to python-2.3 and unmerge pyxml
		if you get a traceback.</li>
	<li>Portage can't handle unicode which is passed to it creating a traceback.
		To fix this <c>glsa.py</c> will convert all strings that are passed to
		portage functions to ascii format in the next release. All known GLSAs 
		have been adjusted to not contain non-ascii characters.</li>
</ul>
</body>
</section>

<section>
<title>glsa-check</title>
<body>
<p><c>glsa-check</c> is included in <e>gentoolkit</e> from version 0.2.0_pre7 on.</p>
</body>
</section>

<section>
<title>emerge</title>
<body>
<p>The integration into <c>emerge</c> is depending on positive test results from 
<c>glsa-check</c> and a code reorganization in <c>emerge</c> itself. This reorganization is
mandatory to avoid redundant and wasted work and to reduce complexity.</p>
</body>
</section>

<section>
<title>equery</title>
<body>
<p>The <c>equery</c> implementation depends on including <c>glsa.py</c> in portage
and has therefore not been started yet.</p>
</body>
</section>

</chapter>


</guide>
