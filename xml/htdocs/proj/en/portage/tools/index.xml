<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/xsl/project.xsl" type="text/xsl"?>
<?xml-stylesheet href="/xsl/guide.xsl" type="text/xsl"?>
<!DOCTYPE project SYSTEM "/dtd/project.dtd">
<project>
	<name>Gentoo Portage Tools</name>

	<longname>Utilities related to Portage administration</longname>

	<author>genone</author>
	<author>karltk</author>
	
	<description>
		The Tools subproject deals with portage related tools that are not
		included in the core portage package. This covers maintaining ebuilds 
		for external packages as well as developing and improving our own 
		utilities and scripts.
	</description>

	<longdescription>
		<p>The Tools subproject deals with portage related tools that are not
		included in the core portage package. This covers maintaining ebuilds 
		for external packages as well as developing and improving our own 
		utilities and scripts.</p>
	</longdescription>

	<goals>
		<p>The major goal of this subproject is to provide Gentoo users a set of
		userfriendly tools to make portage easier to use. This includes config
		utilities (both GUI and console), programs to create and maintain ebuilds
		and scripts to control portage beyond what <c>emerge</c> can do.
		</p>
	</goals>

	<dev role="subproject lead">karltk</dev>
	<dev role="member">genone</dev>
	<!-- possible members, not definite yet:
	<dev role="member">pythonhead</dev>
	<dev role="member">port001</dev>
	-->
	<herd name="tools-portage"/>

	<task lead="karltk" finished="no">
		<name>Gentoolkit reorganization</name>
		<description>
			Most or all tools in gentoolkit will be rewritten in Python 
			or refactored.
		</description>
		<longdescription>
			<p>It was becoming evident from maintaining the collection of 
			tools in Gentoolkit that a lot of code duplication is performed, 
			which does not benefit the end-users.</p>

			<p>As an example, we have no less than three tools (etcat, epm, 
			qpkg) that can perform queries on the Portage application database, 
			and all have their own database parsing code, which not always 
			agrees with the canonical information given by Portage itself.</p>

			<p>Furthermore, the level of documentation, bug fixing reponsiveness 
			and ease of maintainenance is not up to par.</p>

			<p>We have therefore refactored the tools (or are in the middle of 
			doing so), in order to provide a unified back-end for queries to 
			Portage, improved front-ends for users, better documentation, and 
			easier maintainenance and better bug-fixing reponse times.</p>

			<p>As part of this rewrite, some tools will be decomissioned, but 
			their functionality will naturally live on in whatever tools survive 
			the pruning.</p>
		</longdescription>
		<startdate>2003-07-01</startdate>
	</task>
	<task lead="karltk" finished="no">
		<name>User interfaces</name>
		<description>
			Developing curses, GTK and QT interfaces for interactive tools.
		</description>
		<longdescription>
			<p>Some of the auxiliary administration tools, such as etc-update, 
			require user interaction. Also, there have been many non-completed 
			attempts at making an interactive front-end to Portage itself.</p>

			<p>A common trait between all earlier attempts (KPortage, Gentool, 
			...) are that the original upstream maintainer has abandonded the 
			project, and none of the Gentoo developers were able/interested 
			in doing further maintenance.</p>

			<p>We are investigating how to proceed on this one to ensure that 
			whichever technical solution adopted in the end will be maintained 
			properly in the future.</p>
		</longdescription>
		<startdate>2004-01-01</startdate>
	</task>
	<task lead="genone" finished="no">
		<name>Portage interface</name>
		<description>
			Change tools from accessing files directly to using the portage API.
		</description>
		<longdescription>
			<p>As portage is a moving target implementation details and file 
			formats might change, so accessing files directly and using 
			implementation details can break without notice. To avoid this all 
			tools have to use portage functions to get information or perform
			actions and should not rely	on the current implementation.</p>
			
			<p>This heavily relates to the Gentoolkit rewrite. We will first 
			gain some experience with such a common API internally for the 
			Gentoolkit tools before we venture into publishing any APIs for 
			external parties to employ.</p>
		</longdescription>
		<startdate>2004-01-01</startdate>
	</task>
</project>
