<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/Python/python-r1/policy-guide.xml,v 1.1 2012/12/20 19:31:23 mgorny Exp $ -->

<guide lang="en">
<title>python-r1 Policy Guide</title>

<author title="Author">
	<mail link="mgorny@gentoo.org">Michał Górny</mail>
</author>

<author title="Editor">
	<mail link="idella4@gentoo.org">Ian Delaney</mail>
</author>

<abstract>
	This guide lists the rules and policies for maintaining Python
	packages.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/3.0/ -->
<license version="3.0"/>

<version>1</version>
<date>2012-12-20</date>

<chapter id="Common_policies">
	<title>Common policies</title>

	<section id="cp_State_of_Python_implementation_support_in_Gentoo">
		<title>State of Python implementation support in Gentoo</title>

		<body>
			<p>
				The Python implementations supported by the python-r1 suite can
				be divided into three groups:
			</p>

			<ol>
				<li>
					current stable implementations — the implementations which
					are enabled by the default value of <c>PYTHON_TARGETS</c>,
				</li>

				<li>
					supported implementations — the new versions being tested
					as well as the old ones being still supported,
				</li>

				<li>
					unsupported implementations — the implementations which
					are being phased out.
				</li>
			</ol>

			<p>
				The state of Python implementations is listed in the following
				table:
			</p>

			<table>
				<tr><th>Implementation</th><th>State</th></tr>
				<tr><ti>CPython 2.5</ti><ti>supported</ti></tr>
				<tr><ti>CPython 2.6</ti><ti>supported</ti></tr>
				<tr><ti>CPython 2.7</ti><ti>current stable</ti></tr>
				<tr><ti>CPython 3.1</ti><ti>supported</ti></tr>
				<tr><ti>CPython 3.2</ti><ti>current stable</ti></tr>
				<tr><ti>CPython 3.3</ti><ti>supported</ti></tr>
				<tr><ti>PyPy 1.8</ti><ti>supported</ti></tr>
				<tr><ti>PyPy 1.9</ti><ti>supported</ti></tr>
				<tr><ti>Jython 2.5</ti><ti>unsupported</ti></tr>
			</table>

		</body>
	</section>

	<section id="cp_Adding_implementations_to_PYTHON_COMPAT">
		<title>Adding implementations to PYTHON_COMPAT</title>

		<body>
			<p>
				The <c>PYTHON_COMPAT</c> variable should be treated
				with respect similar to what is required for <c>KEYWORDS</c>.
				No implementation should ever be listed without prior testing.
			</p>

			<p>
				Any developer is allowed to enable additional implementations
				in an ebuild of his own accord or upon a user's request.
				However, the package should be tested with an adequate level
				of scrutiny on at least one of the keyworded architectures.
				The testing may involve running a test suite, testing
				the package's Python scripts, or a basic subset of package's
				API.
			</p>

			<p>
				The list of enabled implementation in stable packages must
				not be changed. Therefore, if a package is stable, it should
				be revision-bumped, the new implementation added to the new,
				non-stable ebuild.
			</p>

			<p>
				When a Python package is being submitted for stabilization, some
				of the supported implementations may lack stable keywords.
				In that case, the ebuild should be revision-bumped
				and the conflicting Python implementations removed
				from the ebuild being stabilized.
			</p>

			<p>
				When a new Python package is being added to a repository, it
				must be tested with at least both current stable
				implementations.  The developers are encouraged to test more
				of the supported implementations. The unsupported
				implementations must not be added without prior permission
				from the Python team.
			</p>
		</body>
	</section>
</chapter>

<!-- vim:se tw=72 ts=2 sts=2 sw=2 :-->
</guide>
