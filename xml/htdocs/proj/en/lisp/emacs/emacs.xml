<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/lisp/emacs/emacs.xml,v 1.126 2010/05/14 15:23:36 ulm Exp $ -->

<guide link="/proj/en/lisp/emacs/emacs.xml" lang="en">
<title>GNU Emacs on Gentoo</title>

<author title="Author">
  <mail link="ulm@gentoo.org">Ulrich MÃ¼ller</mail>
</author>
<author title="Author">
  <mail link="fauli@gentoo.org">Christian Faulhammer</mail>
</author>

<abstract>
This document describes how GNU Emacs and associated packages are made
available in Gentoo.  These guidelines also describe the philosophy
how the packages are maintained.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.36</version>
<date>2010-05-14</date>

<chapter>
<title>Introduction</title>
<section id="emacs">
<title>What is Emacs?</title>
<body>

<p> 
<uri link="http://www.gnu.org/software/emacs/">Emacs</uri> is the
extensible, customizable, self-documenting real-time display editor.
Large parts are written in the Lisp dialect Emacs Lisp, with which
extensions can be easily developed.  Apart from its editing features,
GNU Emacs provides a whole environment to manage your system, mail,
IRC chats and texts (be it correspondence or programming).
</p>

</body>
</section>
</chapter>

<chapter id="available_versions">
<title>Maintaining the editor itself</title>
<section>
<title>Available versions</title>
<body>
<p>
Currently the following Emacs versions are available:
</p>
<table>
<tr>
  <th>Package</th>
  <th>Version</th>
  <th>Type</th>
  <th>SLOT</th>
  <th>eselect name</th>
  <th>Remarks</th>
</tr>
<tr>
<ti>emacs</ti>
  <ti>18.59</ti>
  <ti>released</ti>
  <ti>18</ti>
  <ti>emacs-18</ti>
  <ti></ti>
</tr>
<tr>
  <ti>emacs</ti>
  <ti>21.4</ti>
  <ti>released</ti>
  <ti>21</ti>
  <ti>emacs-21</ti>
  <ti></ti>
</tr>
<tr>
  <ti>emacs</ti>
  <ti>22.3</ti>
  <ti>released</ti>
  <ti>22</ti>
  <ti>emacs-22</ti>
  <ti></ti>
</tr>
<tr>
  <ti>emacs</ti>
  <ti>23.2</ti>
  <ti>released</ti>
  <ti>23</ti>
  <ti>emacs-23</ti>
  <ti></ti>
</tr>
<tr>
  <ti>emacs-vcs</ti>
  <ti>23.2.9999</ti>
  <ti>Bazaar (emacs-23 branch)</ti>
  <ti>23</ti>
  <ti>emacs-23-vcs</ti>
  <ti></ti>
</tr>
<tr>
  <ti>emacs-vcs</ti>
  <ti>24.0.9999</ti>
  <ti>Bazaar (trunk)</ti>
  <ti>24</ti>
  <ti>emacs-24</ti>
  <ti></ti>
</tr>
</table>

</body>
</section>

<section id="location">
<title>Locations of files</title>
<body>
<p>
The following files are installed in different locations or under a
different name (as compared to vanilla GNU Emacs):
</p>

<ul>
  <li>Emacs executable: <path>/usr/bin/emacs-<e>suffix</e></path>,
      where <e>suffix</e> is normally equal to the Emacs major version</li>
  <li>Auxiliary programs (e.g., <path>ctags</path>):
      <path>/usr/bin/ctags-emacs-<e>suffix</e></path></li>
  <li>Man pages are named accordingly</li>
  <li>Info files of Emacs are installed in directory
      <path>/usr/share/info/emacs-<e>suffix</e>/</path></li>
</ul>

<p>
  The programs are symlinked to their original names by the Emacs
  <uri link="#eselect">eselect module</uri>, apart from <path>ctags</path>
  and <path>etags</path> which have their own modules.
</p>
</body>
</section>

<section>
<title>USE flags</title>
<body>
<p>
Emacs has many USE flags, most are easy to understand what they are
good for, others have some hidden "features" one should know about.
</p>
<table>
<tr>
  <th>Flag</th>
  <th>Description</th>
  <th>Notes</th>
</tr>
<tr>
  <ti>alsa</ti>
  <ti>Determine if ALSA should be used</ti>
  <ti>Emacs autodetects ALSA.  That test is removed by the ebuild if the flag
  is not set.  This is for cases where ALSA is installed but the user
  does not wish support for it in Emacs.</ti>
</tr>
<tr>
  <ti>dbus</ti>
  <ti>Make Emacs D-Bus aware (Emacs 23 only).</ti>
  <ti></ti>
</tr>
<tr>
  <ti>gconf</ti>
  <ti>Use gconf to read the system font name (emacs-vcs only).</ti>
  <ti></ti>
</tr>
<tr>
  <ti>gif</ti>
  <ti>Support for GIF images.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>gpm</ti>
  <ti>Support for console-based mouse driver (Emacs 23 only).</ti>
  <ti></ti>
</tr>
<tr>
  <ti>gtk</ti>
  <ti>Use the GIMP Toolkit (GTK+) as windowing toolkit (menu bar etc.)</ti>
  <ti>When this toolkit is activated along with alternative ones (see
  other USE flags), GTK+ is chosen. This is in sync with upstream's
  wishes.</ti>
</tr>
<tr>
  <ti>gzip-el</ti>
  <ti>Zip up all el files.</ti>
  <ti>The zip binary is autodetected.  So even when this USE flag is
  disabled but the binary is found, all el files will be compressed.
  The ebuild takes of that care by confusing the configure script.</ti>
</tr>
<tr>
  <ti>hesiod</ti>
  <ti>Use the Hesiod name service system.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>jpeg</ti>
  <ti>Support for JPEG images.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>kerberos</ti>
  <ti>Support for the Kerberos network authentication protocol.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>leim</ti>
  <ti>Extended methods for input encodings (Emacs 21 only).</ti>
  <ti></ti>
</tr>
<tr>
  <ti>m17n-lib</ti>
  <ti>Use the m17n-lib multilingual library for complex text layout,
  e.g. for Indic scripts (Emacs 23 only).</ti>
  <ti>Only available if "xft" is enabled too.</ti>
</tr>
<tr>
  <ti>motif</ti>
  <ti>A windowing toolkit.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>png</ti>
  <ti>Support for PNG images.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>sendmail</ti>
  <ti>Build with support for mail transfer agent (Emacs 21 only).</ti>
  <ti></ti>
</tr>
<tr>
  <ti>sound</ti>
  <ti>Control the availability of sound support.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>source</ti>
  <ti>Install the C source files and make them available in the
  internal documentation system of GNU Emacs.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>svg</ti>
  <ti>Support for SVG images (Emacs 23 only).</ti>
  <ti></ti>
</tr>
<tr>
  <ti>tiff</ti>
  <ti>Support for TIFF images.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>toolkit-scroll-bars</ti>
  <ti>Instead of the internal scroll bars, the ones from the
  windowing toolkit are used.</ti>
  <ti>You will lose some functionality (split windows by clicking on
  the scroll bar for example).</ti>
</tr>
<tr>
  <ti>X</ti>
  <ti>Let Emacs use an X session if available.  Text mode can always
  be forced.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>Xaw3d</ti>
  <ti>A windowing toolkit.</ti>
  <ti></ti>
</tr>
<tr>
  <ti>xft</ti>
  <ti>Choose an alternative font renderer (Emacs 23 only).</ti>
  <ti></ti>
</tr>
<tr>
  <ti>xpm</ti>
  <ti>Support for XPM images.</ti>
  <ti>If disabled, all logos, icons etc. in Emacs are displayed in
  grayscale.  This flag is forced through EAPI 1 features.</ti>
</tr>
</table>
</body>
</section>
</chapter>

<chapter>
<title>Packages</title>
<section id="need_emacs">
<title>Depending on a specific Emacs version</title>
<body>
<note>
The documentation of the functions provided is to be found in the
<uri link="#eclasses">eclasses</uri> itself.
</note>
<p>
If a package needs at least a specific version of GNU Emacs, you can tell
the <path>elisp.eclass</path> by
giving <c>NEED_EMACS=<e>version_number</e></c> before
the <c>inherit</c> line.  Undefined the default dependency is on <path>virtual/emacs-21</path>.
</p>
</body>
</section>

<section>
<title>The site-lisp directory and package loading</title>
<body>
<p>
The regular location for Emacs lisp packages in Gentoo
is <path>/usr/share/emacs/site-lisp/<e>package</e>/</path>.  All Elisp
files (<path>.el</path>) and compiled Elisp files (<path>.elc</path>)
should go there.
</p>
<p>
Emacs packages normally need to be activated or loaded when a certain
condition is met (like c-mode for C source files).
</p>
<p>
In Gentoo every package has a site initialisation file that holds
the needed commands.  The file is located in <c>${FILESDIR}</c> and
starts with a two-digit number, followed by the package name
and <path>-gentoo</path>.  The <c>elisp-install</c> function puts
this file in the directory
<path>/usr/share/emacs/site-lisp/site-gentoo.d/</path>.
</p>
<p>
When calling <c>elisp-site-regen</c> in an ebuild, the global site
file <path>/usr/share/emacs/site-lisp/site-gentoo.el</path> is
regenerated, which holds the contents of all individual site init
files in one.  They are read in alphabetical order, so the numbers
determine which comes first, the lowest is to be found at the
beginning.  That means: Packages depending on each other need to have rising
order for site initialisation, too.
</p>

<p>
Some time ago all those initialisations were added
to <path>/usr/share/emacs/site-lisp/site-start.el</path>, which is
always loaded at Emacs start-up!  Today you can individually control
which user will activate all installed Elisp packages by adding a line like
</p>
<p>
<c>(require 'site-gentoo)</c>
</p>
<p>
to a file read by Emacs on start-up (usually <path>~/.emacs</path>).
</p>
<p>
  Historically site-init files were read from the
  <path>/usr/share/emacs/site-lisp/</path> directory, which is still
  supported by the eclasses, but a remerge/update will put them in the
  <path>site-gentoo.d/</path> subdirectory.
  Package <path>app-admin/emacs-updater</path> installs a script that
  checks for needed rebuilds, called <path>emacs-updater</path>.
</p>
<impo>
A <c>load</c> command for site initialisations is only acceptable for
a few packages.  If used, it always loads the whole package and makes
Emacs start-up really slow, so the autoload mechanism is the preferred
way.  The <path>elisp-common</path> eclass has functions to generate
an autoload file if none is shipped with the package but the
functionality is available in the source nonetheless.  For more
information about the mechanism see the
<uri link="http://www.gnu.org/software/emacs/manual/html_node/elisp/Autoload.html#Autoload">
Elisp manual</uri>.  Also manual keybindings directly in the site-file
are discouraged to not disturb the user as he could have bound exactly
that keys himself.  Keep pollution low but provide sane default settings
out of the box so even a novice can start working fast.
</impo>
</body>
</section>

<section id="eclasses">
<title>Eclasses</title>
<body>
<p>
Packages that have support for or rely on GNU Emacs can use two
eclasses to do some recurring tasks in a simple way.  The
documentation of the functions are provided in the eclasses, so they
are not repeated here!  Format of documentation is to allow man-page
generation from source with the
package <path>app-portage/eclass-manpages</path>.
</p>
<table>
<tr>
  <th>Name</th>
  <th>Purpose</th>
</tr>
<tr>
  <ti><path>elisp-common.eclass</path></ti>
  <ti>Provides functions to handle Elisp files.  Compilation,
  installation and generation of autoloads is covered here in a
  general way.  Packages with optional Emacs support must rely on this eclass.</ti>
</tr>
<tr>
  <ti><path>elisp.eclass</path></ti>
  <ti>The functions from <path>elisp-common.eclass</path> are used to
  construct the default functions
  (<c>src_unpack</c>, <c>src_compile</c> and friends) for packages in
  the <path>app-emacs</path> hierarchy of ebuilds.  It pulls in an
  appropriate version of Emacs (meaning a
  version of <path>virtual/emacs</path>, controlled
  by the <uri link="#need_emacs">NEED_EMACS</uri> variable) and
  is <e>not</e> intended for packages with optional (via USE flag)
  support for GNU Emacs.</ti>
</tr>
</table>
</body>
</section>

<section id="eselect">
<title>Emacs eselect module</title>
<body>
<p>
Having several Emacs versions simultaneously installed on a system,
needs some caution by maintainers.  Usual pitfalls are file collisions
and installations of one slot using data from another.  As
described <uri link="#location">earlier</uri>, the executables are
suffixed with their corresponding version number.  All data files go
to similar directories, also distinguished by a version suffix.
</p>
<p>
To be independent of the installed version, the eselect module
from <path>app-admin/eselect-emacs</path> guarantees
that <path>/usr/bin/emacs</path> always points to the Emacs you want.
All ebuilds for the editor check if the symlink is set, and change it
to the highest available in the case where it does not exist.  If no
GNU Emacs is found, but XEmacs, all helper programs are symlinked to
the variants shipped with XEmacs.
</p>
<p>
The module file has some comments about how the code works.  For more
information how an eselect module is set up, consult the
<uri link="http://www.gentoo.org/proj/en/eselect/dev-guide.xml">documentation</uri>.
</p>
</body>
</section>

<section>
<title>Provided virtuals</title>
<body>
<p>
Sometimes the same functionality is available through different
packages.  To not force a subjective choice the maintainer made,
virtuals check if one of the alternatives is installed on the user's
system.
</p>
<dl>
<dt>virtual/editor</dt>
<dd>Just makes sure you have an editing capability available on your
  system, Emacs is one choice out of many.</dd>
<dt>virtual/emacs</dt>
<dd>This gives you the choice between several version of Emacs.
  Elisp packages can choose which virtual version is the minimum they
  need through the elisp.eclass.</dd>
<dt>virtual/emacs-cedet</dt>
<dd>The Collection of Emacs Development Environment Tools was
  traditionally available as a separate package
  <path>app-emacs/cedet</path>.  It is also shipped with Emacs
  versions from 23.2 on.</dd>
<dt>virtual/emacs-flim</dt>
<dd>There are several libraries that provide encoding functions for
  other packages.  If they are compatible to
  <path>app-emacs/flim</path>, they should provide the emacs-flim
  virtual.</dd> 
</dl>
</body>
</section>

<section>
<title>Where Emacs team is upstream</title>
<body>
<p>
Not all packages maintained by the Emacs team are developed by people
from outside the Gentoo project (they are usually called upstream).
Most of those exceptions are for proper operation of GNU Emacs in the
Gentoo environment.
</p>
<p>
Sources of these packages are kept in the
<uri link="http://sources.gentoo.org/viewcvs.py/emacs/">
Emacs SVN repository</uri>.
They are released and brought to the Emacs overlay or to the Portage
tree when they have proven stable.
</p>
<table>
<tr>
  <th>Package name</th>
  <th>Purpose</th>
</tr>
<tr>
  <ti><path>app-admin/eselect-emacs</path></ti>
  <ti>Setting the correct man page locations, Info documentation paths
  and target for <path>/usr/bin/emacs</path>, see the separate
  <uri link="#eselect">section</uri>.</ti>
</tr>
<tr>
  <ti><path>app-admin/eselect-ctags</path></ti>
  <ti>There are several implementations of the ctags binary, all with
  a different feature set. This eselect module lets you choose the
  variant you need.</ti>
</tr>
<tr>
  <ti><path>app-admin/emacs-updater</path></ti>
  <ti>Ships the <path>emacs-updater</path> script, which makes the
  transition from the old location of the site-init files to the new
  one.  Another purpose is to byte-compile all installed Emacs
  support files again, e.g. after a major upgrade of Emacs.</ti>
</tr>
<tr>
  <ti><path>app-emacs/emacs-common-gentoo</path></ti>
  <ti>Installs common files needed by all GNU Emacs versions. These include
  <path>subdirs.el</path> and a default <path>site-start.el</path> file.
  With <c>USE=X</c> also desktop files (which provide file associations
  for many desktop environments) and icons for Emacs and Emacsclient are
  installed.</ti>
</tr>
<tr>
  <ti><path>app-emacs/emacs-daemon</path></ti>
  <ti>Contains the init script to start Emacs as a background service
  in server mode.  The <path>emacsclient</path> executable then uses
  this to connect to.</ti>
</tr>
<tr>
  <ti><path>app-emacs/gentoo-syntax</path></ti>
  <ti>A collection of Emacs major modes that help you edit ebuilds and
  other Gentoo specific files.  This is developed in cooperation with
  the XEmacs team, so we share the same source.</ti>
</tr>
</table>
</body>
</section>

<section>
<title>A sample ebuild</title>
<body>
<p>
We present an ebuild that introduces the canonical form regarding
variable ordering in global scope and implementation along an example.
</p>
<pre caption="Sample ebuild">
<comment># Copyright 1999-2009 Gentoo Foundation</comment>
<comment># Distributed under the terms of the GNU General Public License v2</comment>
<comment># &#36;Header: &#36;</comment>

<keyword>inherit</keyword> elisp

<ident>DESCRIPTION</ident>=<const>"ReStructuredText support for Emacs"</const>
<ident>HOMEPAGE</ident>=<const>"http://www.emacswiki.org/cgi-bin/wiki/reStructuredText"</const>
<ident>SRC_URI</ident>=<const>"mirror://sourceforge/docutils/docutils-<var>${PV}</var>.tar.gz"</const>

<ident>LICENSE</ident>=<const>"GPL-2"</const>
<ident>SLOT</ident>=<const>"0"</const>
<ident>KEYWORDS</ident>=<const>"alpha amd64 arm hppa ia64 ppc ppc64 s390 sh sparc ~sparc-fbsd x86 ~x86-fbsd"</const>
<ident>IUSE</ident>=<const>""</const>

<ident>S</ident>=<const>"<var>${WORKDIR}</var>/docutils-<var>${PV}</var>/tools/editors/emacs"</const>
<ident>DOCS</ident>=<const>"README.txt"</const>
<ident>ELISP_PATCHES</ident>=<const>"<var>${P}</var>-lazy-lock-mode-fix.patch"</const>
<ident>SITEFILE</ident>=<const>"50<var>${PN}</var>-gentoo.el"</const>
</pre>
<p>
The first lines from inherit to IUSE are standard Gentoo ebuild
variables and thus outside the scope of this text.
</p>
</body>
</section>
</chapter>

<chapter>
<title>Resources</title>
<section>
<body>
<table>
<tr>
  <th>Resource</th>
  <th>Comment</th>
</tr>
<tr>
  <ti>
    <e>Various authors</e>; <uri link="http://www.gentoo.org/proj/en/devrel/handbook/handbook.xml">Gentoo Developer Handbook</uri>
  </ti>
  <ti>
    First steps as Gentoo developer plus an Ebuild HowTo with a good
    overview.
  </ti>
</tr>
<tr>
  <ti>
    <e>Various authors</e>;
    <uri link="http://devmanual.gentoo.org/">Gentoo Development Guide</uri>
  </ti>
  <ti>
    Extensive reference about how development is organised in Gentoo,
    plus style advises for ebuild authors.
  </ti>
</tr>
<tr>
  <ti>
    <e> Robert J. Chassell</e>;
    <uri link="http://www.gnu.org/software/emacs/emacs-lisp-intro/">
      An Introduction to Programming in Emacs Lisp</uri>;
    ISBN 1-882114-56-6; GNU Press
  </ti>
  <ti>
    A primer on Elisp programming (very basic, but very good).
  </ti>
</tr>
<tr>
  <ti>
    <e>Richard M. Stallman</e>;
    <uri link="http://www.gnu.org/software/emacs/manual/emacs.html">
      GNU Emacs Manual</uri>; 16th edition (for version 22);
    ISBN 1-882114-86-8; GNU Press
  </ti>
  <ti>
    The official handbook of Emacs, also shipped with the editor.
    This covers the usage of Emacs, not the programming or deep internals.
  </ti>
</tr>
<tr>
  <ti>
    <e>Various authors</e>;
    <uri link="http://www.gnu.org/software/emacs/manual/elisp.html">
      GNU Emacs Lisp Reference Manual</uri>
  </ti>
  <ti>
    All information needed for Elisp programming, dense and extensive,
    but not for beginners.
  </ti>
</tr>
<tr>
  <ti>
    <e>Craig A. Finseth</e>;
    <uri link="http://www.finseth.com/craft/">The Craft of Text Editing:
    Emacs for the Modern World</uri>; ISBN 0-387-97616-7; Springer-Verlag
  </ti>
  <ti>
    Background information about user interfaces and the ergonomics of
    text editing.
  </ti>
</tr>
</table>
</body>
</section>
</chapter>
</guide>
