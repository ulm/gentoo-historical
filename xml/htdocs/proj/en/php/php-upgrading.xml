<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/php/php-upgrading.xml,v 1.9 2012/10/28 15:21:10 swift Exp $ -->

<guide lang="en">
<title>Upgrading PHP</title>

<author title="Author">
 <mail link="akorthaus@web.de">Andreas Korthaus</mail>
 <mail link="mabi@gentoo.org">Matti Bickel</mail>
 <mail link="olemarkus@gentoo.org">Ole Markus With</mail>
</author>

<abstract>
	This document describes how PHP is set up in Gentoo.
</abstract>


<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.7</version>
<date>2011-06-05</date>

<chapter>
<title>PHP package</title>
<section>
<title>Basic PHP Packages Consolidated</title>

<body>

<p>
There is only one php package (as opposed to one package for each SAPI like
cgi, cli or apache). You can enable the SAPIs you want via USE flags in
<c>dev-lang/php</c>. A list of available SAPIs is included below.
You can combine them as you wish, but obviously you need at least one of
them to make any use of your php installation.
</p>

<p>
To choose the SAPI you want, use these USE flags:
</p>

<ul>

<li><c>cgi</c> - builds &amp; installs <path>/usr/bin/php-cgi</path></li>
<li><c>cli</c> - builds &amp; installs <path>/usr/bin/php</path></li>
<li><c>apache2</c> - builds &amp; installs <c>mod_php</c> for Apache 2</li>
<li><c>fpm</c> - builds &amp; installs the PHP FastCgi Process Manager (only available in PHP-5.3 and newer)</li>
<li><c>embed</c> - builds &amp; installs the embedded PHP client</li>

</ul>

</body>
</section>
</chapter>

<chapter>
<title>Slotting</title>

<section>
<title>Minor version slotting</title>

<body><p>
The php team decided to ease the transition between PHP-5.2 and PHP-5.3 by
allowing users to install both versions concurrently.  Using the cgi or FPM
SAPI, you can even serve web pages utilizing PHP-5.2 and PHP-5.3 (or PHP-5.4
once it's released) at the same time.  </p>

<p> For implementing minor version slotting, we chose an approach similar to
that of the ruby team --- you can set a global variable <c>PHP_TARGETS</c> to
control which slots you want and manage the active version via an eselect
module (see <uri link="#doc_chap3">chapter 3</uri>) </p></body>

</section>
</chapter>

<chapter>
<title>Switching from major to minor version slotting</title>

<section>
<title>Preperations</title>

<body>
<note>Due to popular demand it is now possible to upgrade from major to minor
version slotting without uninstalling php first</note>

<note>If you always want PHP extensions compiled for the last stable PHP version,
you can skip the first step.</note>

<p>Decide which versions of PHP you want extensions compiled for and set them
in your <path>/etc/make.conf</path>.  </p>

<pre caption="Setting PHP_TARGETS in /etc/make.conf">
<comment># Run PHP 5.3 and PHP 5.2 in parallel</comment>
<var>PHP_TARGETS="php5-3 php5-2"</var>
</pre>

<p> You can set the targets in any order. Note that the php slot is named "5.3"
and the corresponding <c>PHP_TARGETS</c> setting is <c>php5-3</c>. This is due
to current restrictions on USE names.<br /> You can also set <c>PHP_TARGETS</c>
per package like so: </p>

<pre caption="Setting PHP_TARGETS in package.use">
<comment>; compile mailparse only for php-5.3</comment>
dev-php5/mailparse php_targets_php5-3
</pre>

<p>Next, install the PHP versions you want: </p>

<pre caption="Installing both PHP-5.2 and -5.3">
emerge dev-lang/php:5.2 dev-lang/php:5.3
</pre>

<p> Note that using <c>emerge php</c> is enough to always get the latest stable
version.  </p>

<p>Update your extensions. If you have installed PHP extensions such as suhosin
or mailparse, you need to reinstall them.<br /> The php team has provided a
minor version slotting compatible version of every package in the
<c>dev-php5</c> category. </p>

<pre caption="Reinstalling all extensions">
emerge -av $(equery depends dev-lang/php | egrep -v 'dev-php/|/php' | sed -e 's:^:=:')
</pre>

<warn>Running both PHP versions with different USE flags is not supported.
You may be able to install packages with differing configurations, but do not file bugs about it breaking.<br />
The php team is working on a solution that will automate this in the future.
</warn>

<p> Note that <c>PHP_TARGETS</c> is displayed as a USE-expand variable.<br />
Some extensions are not available for all slots (e.g. have not been updated to
work with PHP-5.3). They will indicate this via the <c>USE_PHP</c> variable
like this: </p>

<pre caption="Ebuild for an extension that supports PHP-5.2 only">
EAPI=2
USE_PHP="php5-2" # default would be "php5-2 php5-3"

inherit php-ext-source-r2
[...]
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Minor version slotting in detail</title>
<section>
<title>Symlinking of PHP binaries</title>

<body><p>
The first time you install a minor version slotted PHP, the new eselect php
module is automatically called to set symlinks in <path>/usr/bin</path> to the
PHP binaries in <path>/usr/lib/php5.3/bin</path> (assuming you installed
php-5.3 first). There is one symlink for each fpm, cgi or cli SAPI you enabled
via USE flags. Additionally, a symlink to the apache module in
<path>/usr/lib/php5.3/apache2/</path> is placed in your apache module directory
if you installed php with USE="apache2".  </p>

<p>Ole Markus With kindly provided an eselect module
(<c>app-admin/eselect-php</c>) to manage the symlinks. You can list and update
the active PHP version for each SAPI seperatly. Here is an example using the
apache2 SAPI:
</p>

<pre caption="Using the PHP eselect module when you have PHP-5.2 and 5.3 installed">
# <i>eselect php list apache2</i>
[1]   php5.2
[2]   php5.3 *

# <i>eselect php set apache2 1</i>
You have to run `/etc/init.d/apache2 restart' for the changes to take effect
</pre>

<p> The eselect module currently supports fpm, apache2, cli and cgi SAPIs </p></body>

</section>

<section>
<title>Configuration files</title>

<body><p>
The Gentoo PHP Package stores configuration in <path>/etc/php</path>, which
contains one subdirectory for each SAPI for each PHP version, e.g.
configuration files for the PHP-5.3 apache2 SAPI are installed in
<path>/etc/php/apache2-php5.3</path> </p>

<pre caption="list PHP config directories">
$ <i>ls -1 /etc/php</i>
apache2-php5
cli-php5
cgi-php5
</pre>

<p>Every subdirectory contains an own <path>php.ini</path>, but external
(shared) extension are now kept in their own
<path>/etc/php/&amp;sapi>-&amp;slot>/ext</path> directory. To enable/ disable
shared extensions, symlinks from <path>/etc/php/*/ext-active</path> are used.
If you want to enable an extension, create a symlink in
<path>/etc/php/*/ext-active</path> to the corresponding
<path>&amp;extension>.ini</path> file in <path>/etc/php/*/ext/</path>. If you
want to disable an extension, remove the symlink.  </p>

<note> If you install PHP as an Apache module, make sure to restart Apache
after installation and configuration.  </note>

</body>
</section>

<section>
<title>Configure Apache to work with PHP5</title>

<body><p>
To configure Apache to load your PHP5 module (mod_php), you have to add <c>-D
PHP5</c> to <c>APACHE2_OPTS</c> variable in <path>/etc/conf.d/apache2</path>.
</p>

<pre caption="Configure Apache to load mod_php">
<comment>(settings for PHP5)</comment>
<i>APACHE2_OPTS="-D PHP5"</i>
</pre>

<note>You can not use two different PHP modules with Apache at the same time.</note>

</body>
</section>
</chapter>


<chapter>
<title>Support / Getting Help</title>
<section>

<body><p>
If you run into problems with the new Gentoo PHP packages, here's where you
can get help: 
</p>

<ul>
<li>
<uri link="http://overlays.gentoo.org/proj/php/wiki/CommonQuestions">Common
Questions</uri> about PHP on Gentoo
</li>
<li>
<uri link="http://overlays.gentoo.org/proj/php/">Development-Page of the PHP
Overlay</uri>
</li>
<li>
#gentoo-php on irc.freenode.net; this is the chatroom where the overlay's
regular authors hang out. We'd love to see you there!
</li>
<li>
<uri link="http://forums.gentoo.org/">Gentoo Forums</uri> are a popular
place to ask for help. There are plenty of other Gentoo users reading the
Forums round the clock, making it a great place to get help in a hurry.
</li>
</ul>

<p> On the <uri link="http://overlays.gentoo.org/proj/php/">Development-Page</uri>
you'll find a lot of documentation and <uri
link="http://git.overlays.gentoo.org/gitweb/?p=proj/php.git">our git
repository</uri> provides a test ground for packages, which will be moved
to the official Portage tree later.  </p>

</body>
</section>
</chapter>
</guide>
