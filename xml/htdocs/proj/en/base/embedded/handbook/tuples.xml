<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/base/embedded/handbook/tuples.xml,v 1.4 2007/12/24 21:47:41 vapier Exp $ -->

<sections>

<abstract>
System tuples -- what are they and how to parse them.
</abstract>

<version>0.1</version>
<date>2007-08-12</date>

<section>
<title>Background</title>

<body>
<p>
The <uri link="http://savannah.gnu.org/projects/config">GNU config</uri> project
exists to take all known systems out there and generate a short string which
describes all relevant aspects (from a toolchain/build perspective) of a system
in question.
</p>

<p>
The canonicalized form is: <b>machine</b>-<b>vendor</b>-<b>kernel</b>-<b>operating system</b>.
Many tuples may actually omit the vendor field (since it is completely arbitrary).
The <b>operating system</b> field has also expanded its meaning over time to
indicate the userland and/or userland ABI.
</p>
</body>
</section>

<section>
<title>Examples</title>

<body>
<p>
Here is a (by no means complete) table of many common configurations.  Note
that not all permutations will work as some fields (like <b>kernel</b> or
<b>operating system</b>) imply someone has actually ported the relevant
<b>machine</b> to it which may not be the case.
</p>

<table>
<tr>
 <th>Machine</th>
 <th>Vendor</th>
 <th>Kernel</th>
 <th>Operating System</th>
</tr>
<tr>
 <ti>
	alpha <br/>
	arm / armeb <br/>
	avr / avr32 <br/>
	bfin <br/>
	cris <br/>
	hppa / hppa1.1 / hppa2.0 / hppa64 <br/>
	ia64 <br/>
	i386 / i486 / i586 / i686 <br/>
	m68k <br/>
	mips / mipsel / mips64 / mips64el <br/>
	nios / nios2 <br/>
	powerpc / powerpc64 <br/>
	sparc / sparcv8 / sparcv9 / sparc64 <br/>
	s390 / s390x <br/>
	sh / sh3 / sh4 / sheb / sh3eb / sh4eb / sh64 <br/>
	vax <br/>
	x86_64 <br/>
 </ti>
 <ti>
	gentoo <br/>
	pc <br/>
	softfloat <c>[1]</c> <br/>
	unknown <br/>
 </ti>
 <ti>
	elf <c>[2]</c> <br/>
	freebsd6.2 <br/>
	linux <br/>
	mingw32 / mingw64 <br/>
	uclinux <c>[3]</c> <br/>
 </ti>
 <ti>
	gnu <c>[4]</c> <br/>
	gnueabi <c>[5]</c> <br/>
	uclibc <c>[6]</c> <br/>
	uclibceabi <br/>
 </ti>
</tr>
</table>

<ol>
<li> <!-- [1] -->
Remember that part where we said the <b>vendor</b> field was completely
arbitrary?  That's almost completely true.  In the Gentoo world, we've
allocated the field <e>softfloat</e> to indicate softfloat toolchains.
If you need a softfloat toolchain, make sure to set the vendor field
in your tuple with this in it.
</li>
<li> <!-- [2] -->
When you use <e>elf</e> as the operating system, you're actually saying you do
not want to run an operating system at all, but just some code directly on the
hardware.  This is almost exclusively accomplished with newlib (with help from
libgloss).
</li>
<li> <!-- [3] -->
The <e>uclinux</e> field produces FLAT binaries which run on Linux with the
MMU disabled (so called no-mmu).
</li>
<li> <!-- [4] -->
The <e>gnu</e> field indicates glibc as the system libc.
</li>
<li> <!-- [5] -->
The <e>eabi</e> suffix will work on only a few embedded architectures (arm and
ppc at the moment).  This tells the toolchain to generate code for the newer
Embedded ABI.
</li>
<li> <!-- [6] -->
The <e>uclibc</e> field indicates uClibc as the system libc.
</li>
</ol>

<p>
Some quick examples of bringing it all together.  Say you want to run a glibc
environment under Linux on a SuperH4 machine.  The tuple there would simply be:
<e>sh4-unknown-linux-gnu</e>.  Or perhaps you'd like to run some code directly
on the hardware (no operating system) with an arm processor.  The tuple there
would be: <e>arm-elf</e>.
</p>

</body>
</section>

<section>
<title>Kernel Arches</title>
<body>

<p>
While in many cases, the value portage uses for <c>ARCH</c> and <c>KEYWORDS</c>
matches the value used by the kernel, this is not always the case.  It also
does not match exactly the machine list in the table above.  Over time, the
kernel may even rename/unify some architectures, so an exact list is not
possible without tracking every version!
</p>

<p>
To find the current list of architectures, simply peek in the <path>arch</path>
subdirectory of your kernel sources.  Keep in mind that the kernel will have
many processors unified under a single architecture.  So while you may have an
omap or strong arm or xscale processor, these cpus are all part of the same
arm architecture.  The same goes for i386, i486, i586, and i686 processors.
These all fall under the i386 architecture.
</p>

</body>
</section>

</sections>
