<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/base/pam/upgrade-0.99.xml,v 1.8 2007/07/12 09:16:43 flameeyes Exp $ -->

<guide link="/proj/en/base/pam/upgrade-0.99.xml" lang="en">
<title>Linux-PAM 0.99 upgrade guide</title>

<author title="Author">
  <mail link="flameeyes@gentoo.org">Diego Petten√≤</mail>
</author>

<abstract>
This guide will help you through the upgrade path for Linux-PAM from 0.78 (or
older) to Linux-PAM 0.99.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.4</version>
<date>2007-07-12</date>

<chapter>
<title>Upgrade guide</title>
<section>
<title>Introduction</title>

<body>

<p>
This guide is written to help you through the process of upgrading from older
Linux-PAM versions to the new versions based on 0.99 series. With 0.99, Gentoo
does not use RedHat/Fedora patches anymore, and thus some features previously
supported are no more available (on the other hand, even RedHat stopped
supporting and providing some of these features).
</p>

<p>
For this reason, the upgrade from the old Linux-PAM to the new one is not
straightforward, and might require changing the authentication configuration for
the system or for services if it wasn't updated automatically during that time.
Also some modules were removed from the <c>sys-libs/pam</c> package, and moved
to separate packages, so you might need to merge them if you are relying on
them.
</p>

<note>
Don't be scared of this guide: if you installed your system after about
September 2005, the upgrade path should be quite painless, and this guide will
just be an interesting read to you. If your system is older, but you upgraded
regularly, and didn't configure PAM manually, you should also be fine, as most
of the configuration files would have been upgraded already for you. If you
customised your PAM configuration, you will probably have to upgrade it
manually, but then you should already know how to handle that.
</note>

<p>
Please note that there is no loss of functionality coming from the update: most
of the RedHat patches are currently implemented in Linux-PAM through slightly
different methods, like the <c>include</c> directive replacing the deprecated
<c>pam_stack</c> module. The modules were moved to their own packages to
maintain the clean design of the ebuild, and to allow packages whose default
configuration requires these optional modules to just depend on them.
</p>

<p>
It is important to keep Linux-PAM up to date, because it is an important piece
in a system, as it's the default authentication provider for Gentoo Linux. For
this reason, the upgrade to Linux-PAM 0.99 is suggested as an high priority to
keep the system safe and secure.
</p>

<impo>
After upgrading PAM, from any version to any version, you have to restart those
services that are using it to avoid internal ABI mismatches. This includes
<c>sshd</c>, <c>vixie-cron</c> (and probably any other cron service), mail
servers, and in general almost every service that accepts users.
</impo>

<p>
All the changes described have to be applied to each file in the
<path>/etc/pam.d/</path> directory (the PAM configuration files). Please make
sure you remove eventual backup files (<path>*~</path>) before trying to update
<c>sys-libs/pam</c>, or the emerge process will fail as a safety measure.
</p>

</body>
</section>
<section>
<title>What are the main changes?</title>
<body>

<p>
As we said, the main change between 0.78 and 0.99 is that the RedHat patches
aren't applied anymore, but this does not explain what really changed for users.
To a minimum, the following modules are not available anymore: <c>pam_stack</c>,
<c>pam_pwdb</c> &amp; <c>pam_radius</c> (ex-<b>pwdb</b> USE flag), and
<c>pam_timestamp</c>.
</p>

<p>
The <b>pam_chroot</b> USE flag is no more present, as the module (previously
coming from RedHat patches) is no more built in <c>sys-libs/pam</c>, and has
been moved in <c>sys-auth/pam_chroot</c>.
</p>

<p>
Additionally, the <b>berkdb</b> USE flag, used to build the <c>pam_userdb</c>
module was removed; in its stead you will have to manually merge the
<c>sys-auth/pam_userdb</c> package that provides the module with the same name.
The same goes for <b>pam_console</b>, although this one is also deprecated; see its
own section for more details.
</p>

<p>
For all the missing modules, besides <c>pam_stack</c>, please feel free to ask
about their destiny on Bugzilla, providing a use case for them, and they might
be resurrected in their own packages too.
</p>

</body>
</section>
<section>
<title>The case against pam_console</title>
<body>

<p>
The <c>pam_console</c> module was designed by RedHat to allow setting different
permissions on devices for users logging in via hardware access (either in X
through the various graphical login applications, or through the console login).
This approach caused more than a few problems in the past with users unable to
get their devices working, and was then disabled by default, linked to a
<b>pam_console</b> USE flag for those needing it.
</p>

<p>
As of version 0.99 of Linux-PAM the whole RedHat patchset was dropped.
<c>pam_console</c> is no longer shipped with the main package; for the people
needing it, it's available in <c>sys-auth/pam_console</c>, although the need for
this is being reduced gradually, as HAL switched to a
<c>pam_consolekit</c>-based approach (in <c>sys-auth/consolekit</c>).
</p>

<p>
Nothing more than using <c>sys-auth/pam_console</c> is required for users
needing this module.
</p>

</body>
</section>
<section>
<title>Moved modules</title>
<body>

<p>
The <c>pam_userdb</c> module, used to provide authentication against a simple
Berkeley DB file, was previously available through the <b>berkdb</b> USE flag.
As this module requires a static inline copy of Berkeley DB to work correctly,
it was moved to its own package to simplify maintenance of PAM, and to reduce
the risk of problems. The package is <c>sys-auth/pam_userdb</c>.
</p>

<p>
It is important to note that even though the module's code is updated, taken
from the last PAM release, the Berkeley DB copy is still at 4.3; no upgrade of
this is planned, as such upgrades usually are not backwards compatible. For this
reason, unless a security bug is found, you'll still need to use Berkeley DB
4.3 tools to manipulate the users' database.
</p>

<p>
Nothing more than using <c>sys-auth/pam_userdb</c> is required for users needing
this module.
</p>

<p>
The same holds true for the <c>pam_chroot</c> module that is now available as
<c>sys-auth/pam_chroot</c>, just use the new package and that will be fine for
you.
</p>

</body>
</section>
<section>
<title>pam_stack and the include directive</title>
<body>

<p>
PAM was designed to allow configuring different software and services with
different authentication facilities, for instance accepting local users through
the usual Unix authentication facilities, but also allowing mail users
authenticate against a database. For most desktop users and for those servers
who don't expect connections from non-system users (like HTTP servers) though,
most of the services would just use the same authentication against the system
password database.
</p>

<p>
For this reason, to avoid managing multiple copies of the same exact PAM
configuration file, many Linux distributions started writing extensions to them
to allow keeping a single <e>system</e> or more commonly <e>system-auth</e>
configuration, and then telling the other services to use that one to
authenticate.
</p>

<p>
Up to version 0.77, Linux-PAM itself didn't provide any of such extensions, and
Gentoo's package followed RedHat's solution through the <c>pam_stack</c> module
that hijacked PAM's internals to get a second pass over a different service
configuration. This method was not standard, not portable, and required heavy
patching of the internal library structure.
</p>

<p>
An alternative solution was instead designed by ALTlinux for OpenPAM, and was to
use an <c>include</c> directive, that would be handled internally by the PAM
implementation, effectively loading the configuration for that service and
passing through the equivalent class's modules. This is the same extension
implemented by Linux-PAM 0.78 and later, and the current only supported option
for Gentoo (as it works on both the supported implementations).
</p>

<p>
To convert an old configuration file that uses <c>pam_stack</c> into an updated
one that works with the <c>include</c> directive, you just need to replace the
lines as shown:
</p>

<pre caption="Replace pam_stack usage with the include directive">
<comment>(The old configuration)</comment>
auth    required     pam_stack.so    service=system-auth

<comment>(Replace it with this)</comment>
<i>auth    include      system-auth</i>
</pre>

<impo>
There are four facilities in PAM configuration: <c>auth</c>, <c>account</c>,
<c>password</c> and <c>session</c>. You need to update the configuration files
for all of them, not just auth.
</impo>

<p>
Please note that you might also need to reorder the calls when making this
change, as sometimes modules like <c>pam_nologin</c> were listed after
<c>pam_stack</c>, even though they now need to be listed before the
<c>include</c> directive.
</p>

<pre caption="Handling multiple-modules with pam_stack">
<comment>(Old way)</comment>
auth    required     pam_stack.so    service=system-auth
auth    required     pam_nologin.so

<comment>(New way)</comment>
auth    required     pam_nologin.so
auth    include      system-auth
</pre>

<p>
This change will not result in feature loss (<path>pam_stack</path> didn't work
with anything but the <c>required</c> directive), and it should always be safe.
All the recent PAM configurations installed by ebuilds in the Portage tree are
updated to use the new syntax.
</p>

</body>
</section>
</chapter>
</guide>
