<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/base/x86/chroot.xml,v 1.3 2006/05/02 04:29:33 halcy0n Exp $ -->

<guide link="/proj/en/base/x86/chroot.xml">
<title>Gentoo x86 Chroot Setup Guide</title>

<author title="Author">
  <mail link="tsunam@gentoo.org">Joshua Jackson</mail>
</author>
<author title="Author">
  <mail link="david.morgan@wadham.oxford.ac.uk">David Morgan</mail>
</author>
<author title="Editor">
  <mail link="fox2mike@gentoo.org">Shyam Mani</mail>
</author>
<author title="Editor">
  <mail link="halcy0n@gentoo.org">Mark Loeser</mail>
</author>

<abstract>
This guide will show you how to create chroots to assist in testing packages
for stablization.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.2</version>
<date>2006-05-02</date>

<chapter>
<title>X86 Chroot Howto</title>
<section>
<title>What is a Chroot?</title>
<body>

<p>
A chroot is a operation to change the root directory of the current process and
the children spawned from it. In the simplest terms, it allows us to setup a
completely separate install inside the one that you are already running.
</p>

</body>
</section>
<section>
<title>Setting up your Chroot for a new install</title>
<body>

<p>
The first thing that you need to do is create a directory for your chroot to
reside.
</p>

<pre caption="Creation of a directory for your chroot to reside">
<comment>Create a directory that has enough space for a second install. foo is our example</comment>
# <i>mkdir /foo</i>
</pre>


<p>
The next step is to download a stage three tarball to the chroot and untar it. 
</p>

<pre caption="Going to the Chroot mountpoint">
<comment>Stage filename shown below is an example, actual filename may vary</comment>
# <i>mv stage3-x86.tar.bz2 /foo</i>
# <i>cd /foo</i>
# <i>tar xvjpf stage3-x86.tar.bz2</i>
</pre>

<p>
To actually proceed with the install at this point, you need to mount a few
directories from your live system to the chroot.
</p>

<warn>
You might have to create some of the directories in your chroot to be able to
mount them, as you'll get the mount point does not exist.
</warn>

<pre caption="Directories needing to be mounted in your chroot">
<comment>Mount the following directories to their appropriate area within your chroot.</comment>
# <i>mount -t proc none /foo/proc</i>
# <i>mount -o bind /dev /foo/dev</i>
# <i>mount -o bind /usr/portage /foo/usr/portage</i>
# <i>mount -o bind /usr/src/linux /foo/usr/src/linux</i>
# <i>mount -o bind /lib/modules /foo/lib/modules</i>
# <i>mount -o bind /sys /foo/sys</i>
# <i>cp /etc/resolv.conf /foo/etc/resolv.conf</i>
<comment>Finally, if you want one /tmp for both</comment>
# <i>mount -o bind /tmp /foo/tmp</i>
</pre>

<note>
You might want to create a simple bash script you can run before you chroot to
the directories for the future. It makes it a easier task to run one script
then having to remember what each mount you need to do. 
</note>

<p>
As you will notice this is by no means a secure chroot but for what we need it doesn't
need to be. With all that mounted you can actually go into your new setup.
</p>

<pre caption="Entering your Chroot">
# <i>chroot /foo /bin/bash</i>
</pre>

<p>
As you are now in your new chroot, you can start a standard install from <uri
link="/doc/en/handbook/handbook-x86.xml?part=1&amp;chap=6#doc_chap2">Configuring
Portage.
</uri>

</p>
</body>
</section>

<section>
<title>Running X apps inside your chroot</title>
<body>

<p>
In order to be able to launch applications with a GUI from inside your
chroot when your X session was started outside the chroot, there are a
few extra steps you must follow.
</p>

<p>
First, you must be using <c>/tmp</c> from outside the chroot (see above).
Second, since <c>/dev/pts</c> is a separate filesystem to <c>/dev</c> you
will need to mount that as well.
</p>

<pre caption="Mounting /dev/pts">
# <i>mount -o bind /dev/pts /foo/dev/pts</i>
</pre>

<p>
You will also need to copy your <c>~/.xauth</c> file to the home directory of
your user in the chroot.
</p>

<pre caption="Copying .Xauthority">
# <i>cp /home/user/.Xauthority /foo/home/chroot_user/</i>
</pre>

<note>
You will need to redo this everytime you restart X.
</note>

<p>
Finally, when you are inside your chroot, you need to set the
<c>DISPLAY</c> environment variable.
</p>

<pre caption="Setting DISPLAY">
# <i>export DISPLAY=":0.0"</i>
</pre>

</body>
</section>

</chapter>
</guide>
