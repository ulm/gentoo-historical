<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/proj/en/base/systemd/systemd-install-guide.xml">
	<title>systemd installation guide</title>

	<author title="Author">
		<mail link="mgorny@gentoo.org">Michał Górny</mail>
	</author>

	<abstract>
		This document provides a quick guide on systemd installation in Gentoo.
	</abstract>

	<!-- The content of this document is licensed under the CC-BY-SA license -->
	<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
	<license/>

	<version>0.1</version>
	<date>2011-06-22</date>

	<chapter>
		<title>Before installing</title>

		<section>
			<title>What is supported and what is not?</title>

			<body>
				<warn>Please note this guide is incomplete ATM.</warn>

				<p>Before you decide to install systemd, you should be aware
					that systemd in Gentoo is fairly fresh, incomplete and not
					officially supported.</p>

				<p>Although a number of packages already supports systemd, there
					are a lot more not doing so. Don't be surprised if you end
					up having to request support and/or install unit files
					manually for your favorite programs.</p>

				<!-- XXX: add a link for qa-scripts/packages-inheriting-eclasses.py
					systemd.txt output when it's all set up -->

				<p>If you're using stable keywords, you should be prepared to
					unmask a real lot of packages. That includes unstable OpenRC
					(stable one conflicts with systemd), dbus, udev and any
					other package which you'd like to provide unit files.</p>
			</body>
		</section>

		<!-- XXX: Prerequisities section, with kernel magic and so on -->
	</chapter>

	<chapter>
		<title>Installation</title>

		<section>
			<title>Installing systemd</title>

			<body>
				<p>The systemd ebuilds can be found in the tree as
					<path>sys-apps/systemd</path>. If using portage
					as the package manager, you can install it using:</p>

				<pre caption="Installing systemd using portage">
					# <i>emerge -v systemd</i>
				</pre>

				<p>You may need to use the <c>--autounmask</c> option or
					a keywording tool like <path>app-portage/flaggie</path>.</p>
			</body>
		</section>

		<section>
			<title>Enabling services</title>

			<body>
				<p>The first step after systemd installation would be to enable
					all the necessary services. To list the available services,
					call:</p>

				<pre caption="Listing available services">
					$ <i>ls /lib/systemd/system/*.service</i>
				</pre>

				<p>In order to enable a particular service, type in:</p>

				<pre caption="Enabling a standard service">
					# <i>systemctl enable <const>foo.service</const></i>
				</pre>

				<p>If a service filename ends with a <path>@</path> (at sign),
					it is called a <e>unit template</e> and needs to be provided
					an argument. For example, the <path>xdm@.service</path>
					expects a tty to run on. Such a services have to enabled
					manually:</p>

				<pre caption="Enabling a template service">
					# <i>ln -s /lib/systemd/system/<const>xdm@.service</const> /etc/systemd/system/<const>graphical.target.wants</const>/<const>xdm@tty7.service</const></i>
				</pre>

				<!-- XXX: describe targets -->

				<p>Services not having an <e>Install</e> section have to be
					installed manually too. In case of such a unit,
					<c>systemctl</c> will report the following error:</p>

				<pre caption="Trying to enable a service without the Install section">
					# <i># systemctl enable <const>foo.service</const></i>
					Unit files contain no applicable installation information. Ignoring.
				</pre>

				<p>It can be enabled manually using:</p>

				<pre caption="Enabling a simple unit manually">
					# <i>ln -s /lib/systemd/system/<const>foo.service</const> /etc/systemd/system/<const>graphical.target.wants</const>/</i>
				</pre>
			</body>
		</section>

		<!-- XXX: targets -->

		<section>
			<title>Booting systemd</title>

			<body>
				<p>In order to boot systemd, you need to pass
					<path>/bin/systemd</path> as the init implementation
					on the kernel command line.</p>

				<p>If you're using genkernel, you should change the <e>real_init</e>
					parameter to your kernel:</p>

				<!-- examples copypasted from gentoo-wiki,
					XXX: revise them -->

				<pre caption="Example grub config for genkernel &amp; systemd">
					<ident>title</ident>=<const>My Gentoo with systemd</const>
					<ident>root</ident> <const>(hd0,0)</const>
					<ident>kernel</ident> <const>/my-genkernel...</const> <ident>root</ident>=<const>/dev/hda3</const> <ident>real_init</ident>=<const>/bin/systemd</const>
					<ident>initrd</ident> <const>/initramfs-genkernel-x86-2.6.32-gentoo-r7</const>
				</pre>

				<p>For own kernel builds, the paramter is called <e>init</e>:</p>

				<pre caption="Example grub config for own kernel &amp; systemd">
					<ident>title</ident>=<const>My Gentoo with systemd</const>
					<ident>root</ident> <const>(hd0,0)</const>
					<ident>kernel</ident> <const>/vmlinuz.bin</const> <ident>root</ident>=<const>/dev/hda3</const> <ident>init</ident>=<const>/bin/systemd</const>
				</pre>
			</body>
		</section>
	</chapter>
</guide>
