<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/doc/en/faq.xml,v 1.104 2006/02/13 
15:36:26 neysx Exp $ -->
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/doc/en/blubb.xml">
<title>Emulation Packages</title>
<author title="Author">
  <mail link="blubb@gentoo.org">Simon Stelling</mail>
</author>

<abstract>
This document describes how to maintain the emul-packages.
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.4</version>
<date>2009-02-24</date>

<chapter>
<title>Emulation Packages</title>
<section id="policy">
<title>Policy</title>
<body>

	<warn>This guide is deprecated!</warn>

<ol>
  <li>Don't just copy the version number of the 'main' package (e.g. gtk+ for 
gtklibs). It will create problems with updates.</li>
  <li>For complete new emul-packages, bump the major version number</li>
  <li>For selective updates to the <e>real</e> packages (i.e. the ones in 
<c>SRC_URI</c>), bump the minor version number</li>
  <li>For changes that only affect the ebuild, bump the revision number</li>
  <li>Don't ever apply manual changes to the <c>SRC_URI</c> packages. 
Everything must be changed in the ebuilds directly.</li>
</ol>

</body>
</section>
<section id="howto-create">
<title>How to create emul-packages</title>
<body>

<p>
First, you have to set up a emul-chroot. Note that this is not the same as an 
ordinary 32bit-chroot. Here's how to create one:
</p>

<ol>
  <li>Get an <b>amd64 stage2</b> tarball and unpack it to the chroot 
location</li>
  <li>Do all the bind-mounts (<path>/dev</path>, <path>/proc</path>, 
<path>/sys</path>, <path>/usr/portage</path>)</li>
  <li>Chroot in</li>
  <li>run <c>find /usr/lib64 /lib64 -exec touch {} \;</c></li>
  <li>Remove the <c>CHOST=...</c> line from <path>/etc/make.conf</path> and set 
<c>FEATURES="noman noinfo -unmerge-orphans"</c>, <c>USE="bindist"</c></li>
  <li>Change the <path>/etc/make.profile</path> link to 
<path>profiles/default/linux/amd64/dev/32bit-userland</path></li>
  <li>Run <c>emerge --nodeps portage &amp;&amp; rm -rf /usr/lib64/portage &amp;&amp; source /etc/profile</c></li>
  <li>Run <c>emerge -e world</c></li>
</ol>

<p>
Once you have set up your emul-chroot, you can merge the packages you want in 
the emul-package. Make sure you have <c>FEATURES="buildpkg"</c> set. The 
binpkgs you just created serve as <c>SRC_URI</c> for the emul-package. Don't 
modify them! Double-check that the dependencies between the existing 
emul-packages are still fulfilled, repoman won't warn you about this and it can 
cause major borkage!
</p>

<p>
Now you can create an ebuild for the emul-package. Have a look at the existing ebuilds to get an idea what it should look like. Remove all the files that are not ABI-specific or would collide with the 
64bit package.
</p>

</body>
</section>
<section>
<title>How to update emul-packages</title>
<body>

<p>
There are a few dangerous things that are easily forgotten when updating 
emul-packages, most critical are the dependencies. To minimize the risk of 
breakage, follow this procedure when upgrading an emul-package:
</p>

<ol>
  <li>Chroot into your emul-chroot</li>
  <li>Clean out <path>/usr/portage/packages</path></li>
  <li><c>emerge -DuF $emul_package</c></li>
  <li>Copy the just fetched distfiles into 
<path>/usr/portage/packages/All</path></li>
  <li>Emerge all of them using <c>emerge -K</c></li>
  <li>Emerge the packages you want to update (don't forget 
<c>FEATURES=buildpkg)</c></li>
  <li>Bump the emul-package ebuild and use the just generated binpkgs as 
<c>SRC_URI</c> for it</li>
</ol>

<warn>
Make sure you update the <uri 
link="http://amd64.gentoo.org/emul/content.xml">content listing</uri>.
</warn>

</body>
</section>
<section>
<title>Known glitches</title>
<body>

<p>
Make sure you get the dependencies right. Check all installed .so files if there are any unsatisfied deps and either remove them (if not needed) or include the needed dep: <c>for a in $(equery f emul-linux-x86-??? | grep "\.so") ; do [[ -z $(ldd $a | grep "not found") ]] || echo $a ; done</c> helps
</p>

<p>
Some ebuilds also have the bad habit of creating files in <c>pkg_postinst</c>. buildpkg/quickpkg doesn't cover these, so you'll have to copy that function to the emul-ebuild.
</p>

<p>
If <c>sys-apps/shadow</c> complains that it can't find <c>libcrack</c>, try upgrading to <c>=sys-devel/libtool-1.5.23b</c> or <c>rm /usr/lib64/libcrack.la</c>.
</p>

<p>
<c>sys-devel/gcc</c> and <c>sys-libs/glibc</c> are known to fail. Just ignore it, they are multilib-aware themselves anyway and you have all the libraries in both 32/64bit versions already.
</p>

</body>
</section>
</chapter>

</guide>
