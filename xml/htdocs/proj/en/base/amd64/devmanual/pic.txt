Position Independend Code
=========================

Gentoo Policy says that all shared objects should be compiled with ``-fPIC``
in ``CFLAGS``. Since this is only a rule, you *can* break it. On most arches,
you won't even notice it. On AMD64, this is a law, if shared objects aren't
built with support for position independend code, the build process bails out
with an error message like this: ::

	foo.o: relocation R_X86_64_32 can not be used when making a shared
	object; recompile with -fPIC

TODO: Anyone familiar with the processor's interna and can actually explain
*why* we need to enable -fPIC?

How to fix this TODO: Better title
----------------------------------

There are several ways to enforce ``-fPIC`` on shared objects, each with it's
pros and contras.

``sed``'ing the Makefile
''''''''''''''''''''''''

Sometimes, a simple ``sed`` command is enough to fix it, however, the statements
normally aren't very readable and may fail when upstream changes the file.
Please verify that you only change the ``CFLAGS`` for *shared* objects, not for
the whole package.

Patching ``Makefile.in``/``configure``
''''''''''''''''''''''''''''''''''''''

This is more readable, and easier to send upstream.

How **not** to fix this TODO: Better title
------------------------------------------

Do **not** patch the ``Makefile`` itself, since it is usually generated by the
``configure`` script and may vary heavily, so the patch could fail. Also, this
doesn't help upstream at all.

Another bad idea is to (ab)use ``append-flags`` function from
``flag-o-matic.eclass``. Applying ``-fPIC`` on all objects will slow down the
binaries in a drastic way.
