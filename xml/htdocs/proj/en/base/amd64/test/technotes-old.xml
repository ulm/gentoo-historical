<?xml version='1.0' encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/base/amd64/test/Attic/technotes-old.xml,v 1.1 2004/02/23 02:12:10 brad_mssw Exp $ -->
<!DOCTYPE guide SYSTEM "http://www.gentoo.org/dtd/guide.dtd">

<guide link="/proj/en/base/AMD64/technotes.xml">
<title>Gentoo/AMD64 Technical Notes</title>

<author title="Author">Brad House</author>
<author title="Editor">Jason Huebel</author>

<abstract>
The Gentoo/AMD64 Technotes provide important information about the Gentoo/AMD64
distribution.  This should be the documentation you read first before starting
an installation of Gentoo on the AMD64 platform.
</abstract>

<version>2004.0</version>
<date>21 Feb 2004</date>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/license/by-sa/1.0 -->
<license/>

<section><title>Additional Documentation</title>
<body>
<p>
The AMD64 port of Gentoo Linux is very similar to the x86 version. Please use
the <uri link="http://www.gentoo.org/doc/en/handbook/handbook.xml">Gentoo
Handbook</uri> for the basis of your installation. Most install points have been
integrated into that guide at this time for AMD64.  However, since the
Gentoo/AMD64 distribution is in constant development, these technotes are the
definitive answer of issues concerning AMD64.
</p>
</body>
</section>

<section><title>Downloading LiveCD Images And Stages</title>
<body>
<p>
The Gentoo/AMD64 LiveCD images are available from <uri
link="http://www.gentoo.org/main/en/mirrors.xml">Official Gentoo Mirrors</uri>.
Since the AMD64 platform is still in the experimental stages, you can find the
<path>/experimental/AMD64/</path> directory of those mirrors.  The latest
available stage and LiveCD downloads are currently:
</p>
<table>
<tr>
	<th>Description:</th>
	<th>Version:</th>
	<th>Filename:</th>
</tr>
<tr>
	<ti>LiveCD ISO</ti>
	<ti>2004.0-rc1-20040201</ti>
	<ti><path>livecd-AMD64-2004.0-rc1-20040201.iso</path></ti>
</tr>
<tr>
	<ti>Stage Tarballs</ti>
	<ti>20040201</ti>
	<ti><path>stage{1,2,3}-AMD64-20040201.tar.bz2</path></ti>
</tr>
</table>
</body>
</section>

</chapter>

<chapter><title>Software Issues</title>

<section><title>Available Kernels</title>
<body>
<p>
<impo>Please use sys-kernel/gentoo-dev-sources line of kernels! It
has AMD64-specific patches, as well as additional enhancements.</impo>
</p>
<p>
 Please view the currently submitted kernel patches that Gentoo users have found
necessary/useful here:
<uri>http://dev.gentoo.org/~brad_mssw/kernel_patches/</uri>. These patches are
already included in gentoo-dev-sources, so you needn't apply these yourself.
 </p>
<p>
 The 2.4.x kernel line is being deprecated for AMD64. As of 2.4.23-pre7, devfs
has been disabled (hardcoded in kernel), stating memory corruption as the
reason.  We at gentoo have not experienced any such problems, but 2.4 is not a
good solution on Gentoo without devfs.
</p>
<p>
<note>nForce3 users, please refer to the above nForce3 issues section.</note>
</p>
</body>
</section>

<section><title>Kernel Panics At Boot</title>
<body>
<p>
If you're having kernel panics on boot, please try passing <c>idle=poll</c> as a
boot option. There is a problem with many BIOS's out there and seems to mainly
affect VIA chipset motherboards. You should only try passing that boot option
<e>after</e> updating to the latest BIOS available by your motherboard
manufacturer. You may also be able to solve this by disabling Legacy USB support
in your BIOS. If you are forced to use the <c>idle=poll</c> option, please
contact your motherboard manufacturer/BIOS vendor for a fix for the CPU Errata
#93. 
</p>
 <p>
 For a little more info on this topic, see these mailing list archives:
 </p>
 <p>
 <ul>
 
<li><uri>http://lists.suse.com/archive/suse-AMD64/2003-Dec/0031.html</uri></li>
 
<li><uri>http://lists.suse.com/archive/suse-AMD64/2003-Dec/0034.html</uri></li>
 </ul>
 </p>
 <p>
 And you can see it's not a Gentoo-specific problem!
 </p>
 </body>
 </section>
 <section><title>LiveCD Lockups At Shutdown</title>
 <body>
 <p>
 Sometimes, the LiveCD will not shutdown or reboot properly after "Remounting
remaining filesystems readonly". This is a bug that also happens on x86.  Just
reboot the computer the hard way and it should cause no problems.
 </p>
 </body>
 </section>
 
 <section><title>Filesystem Support</title>
 <body>
 <p>
 We strongly recommend sticking with ext2/3 for now. We have had random reported
problems with reiserfs on AMD64 and have heard of major problems with running
JFS on 64-bit systems (which definately seems odd considering it was designed
for 64-bit systems initially). However, we have had successful reports of XFS.
 </p>
 <table>
 <tr>
 	<th>Filesystem:</th>
	<th>Status:</th>
</tr>
<tr>
	<ti>ext2</ti>
	<ti>STABLE</ti>
</tr>
<tr>
	<ti>ext3</ti>
	<ti>STABLE</ti>
</tr>
<tr>
	<ti>XFS</ti>
	<ti>KNOWN TO WORK</ti>
</tr>
<tr>
	<ti>JFS</ti>
	<ti>UNSTABLE</ti>
</tr>
<tr>
	<ti>reiserfs</ti>
	<ti>UNSTABLE</ti>
</tr>
</table>
<p>
 Please report any problems with any filesystem to me on AMD64.  Also let me
know if you have success with one that is marked as bad here. 
</p>
<p>
 <note>The reiserfs problems only appear to happen when you copy files
from a reiserfs partition to an ext3 partition, e.g. copying a kernel to
<path>/boot</path>. It causes a kernel panic. This has been reported by many
people.</note>
 </p>
 </body>
 </section>
 
 <section><title>The Bootloader: Using <path>grub-static</path></title>
 <body>
 <p>
 Grub will not build in a pure 64-bit environment. We have also experienced
problems building GRUB when using the <c>-m32</c> CFLAGS on AMD64. Currently,
the best solution is to install the pre-compiled, 32-bit static version of
GRUB. It can be installed by following these steps, then continuing on with GRUB
as described in the x86 install guide.
</p>
<pre>
emerge grub-static
cp -Rpv /usr/share/grub/i386-pc/* /boot/grub
 </pre>
 </body>
 </section>
 
 <section><title>GRP Packages Are Currently Not Available</title>
 <body>
 <p>
There is currently no GRP available on AMD64. Packages have to be compiled by
hand.  However, you can build your own binary pacakges for later use by
including the <c>--buildpkg</c> option during an emerge.
 </p>
 </body>
 </section>
 
 <section><title>Many Packages Are Still Masked</title>
 <body>
 <p>
 Many packages which are unmasked on other architectures are still masked on
AMD64. This doesn't mean that they don't work. It simply means that no Gentoo
developer has been able to test them on an AMD64 machine. Please test masked
applications and <uri link="http://bugs.gentoo.org">submit a bug report</uri>
letting the developers know whether a package works or not.
 </p>
 </body>
 </section>
 
 <section><title>Packages That Don't Work</title>
 <body>
 <p>
 Don't currently work: 
 </p>
 <p>
<ul>
	<li>Firebird (the database, NOT the browser)</li>
	<li>DirectFB or anything that requires it</li>
</ul>
</p>
 <p>
Things that won't work in 64-bit mode, but WILL work in 32-bit mode (assuming
app-emulation/emul-linux-x86-baselibs and friends are installed):
</p>
<p>
<ul>
	<li>Java (blackdown-jdk and blackdown-jre work in 32-bit mode)</li>
	<li>Any program that uses 32-bit dlls from windows (such as mplayer/xine support
for some proprietary formats)</li>
	<li>Any programs that require 32-bit assembly</li>
</ul>
</p>
<p>
<note>There is now a 64-bit java server VM from Blackdown and is in portage
1.4.2_rc1.</note>
</p>
</body>
</section>

<section><title>Java Support</title>
<body>
<p>
Blackdown recently released a native 64-bit Java for Linux on AMD64. It is a release candidate so do not expect it to be perfect. It is in portage as <path>blackdown-jdk-1.4.2_rc1</path> and <path>blackdown-jre-1.4.2_rc1</path>. Previous to this we required the 32-bit emul libraries to be installed in order to use java.
 </p>
 <p>
 Some people have noted that the 64-bit Java VM is slower than the 32-bit Java VM. Juergen Kreileder of Blackdown was kind enough to respond:
 </p>
<pre>
Actually the 64-bit VM is faster than the 32-bit VM in allmost all
benchmarks.

The difference they see is more likely to come from the different
VMs:
The i386 version comes with the HotSpot Client VM and the HotSpot
Server VM, the Client VM gets used by default.  The AMD64 version
only comes with the Server VM, the Client VM has not been ported yet.

In general the Server VM is the faster VM.  Its compiler does more
optimizations and is more aggressive than the Client VM's compiler.
It usually generates much better code.
The downside is that doing this optimizations takes CPU time and
memory.  Because of this running GUI code in the Client VM often
is faster (at least initially) than running it in the Server VM.

In other words: It's not fair to compare i386-client with
AMD64-server.  You have to compare i386-server (ie. "java -server
...") with AMD64-server.
</pre>
<p>
 Also, he answered a question about a potential timeline that the client VM might be accomplished in:
 </p>
 <pre>
It won't be in the final 1.4.2 release.  It's unlikely for 1.5.0 (both
Sun and Blackdown), Sun is happy with the Server VM port and not
really interested in getting the Client VM ported (the other 64-bit
VMs, for IA64 &amp; SPARC64, are Server VM-only too).  And it's just too
much work (I'd estimate 10-13 man weeks) to do it without payment.
</pre>
<p>
 So if you're going to run benchmarks, to be fair, run java -server on both arches, and don't expect the client vm to be done anytime too soon. ;-)
 </p>
 </body>
 </section>
 
 <section><title>Properly Setting CFLAGS</title>
 <body>
 <p>
 The name of the CPU is "k8", but you don't need to put it as a -march=k8 since there is only one x86-64 CPU out there anyways. GCC version before 3.4 will not recognize -march=k8 and will FAIL if it is set. 
</p>
<p>
 There used to be issues with the lack of <c>-fPIC</c> being specified when building shared objects, the reasoning is in this mailing list post: 
 <uri link="http://www.x86-64.org/lists/discuss/msg02621.html">Porting to Hammer</uri> -- scan down to "Shared libraries must be compiled with -fPIC". If you find any packages that complain about needing <c>-fPIC</c> to run/link properly, please notify us immediately, as we need to update that package. Please do not specify <c>-fPIC</c> in your global CFLAGS as that is not an acceptable solution and just a workaround.
</p>
<p>
 Please do not add <c>-m32</c> to your USE flags, as you do not want to compile the system in 32-bit mode, and by default Gentoo does not support compiling 32-bit binaries. Use of the <c>-m64</c> flag is irrelevant as the compiler defaults to 64-bit mode and could have negative effects on code that may supply <c>-m32</c> internally to compile 32-bit assembly (such as newer releases of grub will do).
 </p>
 </body>
 </section>
 
 <section><title>USE Flags That Are Ignored</title>
 <body>
 <p>
 The <c>mmx</c>, <c>3dnow</c>, <c>sse</c> and <c>sse2</c> USE flags are ignored on AMD64, since all AMD64 processors support those instruction sets. The are ignored because on many packages they enable assembly optimisation which are 32-bit only.
 </p>
 </body>
 </section>
 
 <section><title>Running 32-bit Programs</title>
 <body>
 <p>
 <impo>YOU MUST HAVE "IA32 Emulation" TURNED ON UNDER "Executable File Formats" IN YOUR KERNEL!</impo>
 </p>
 <p>
 Many changes are in progress at the moment, and the easiest way to set up a 32-bit environment is to install emulation libraries. 
</p>
<pre>
emerge app-emulation/emul-linux-x86-baselibs
emerge app-emulation/emul-linux-x86-xlibs
</pre>
<p> 
The emulation libraries will create the /emul/linux/x86 directory and install most of the appropriate libraries you will need to run pre-compiled 32-bit applications. It will also create 2 symlinks, /lib32, and /usr/lib32 which point back to the proper /emul directories. It will also create a symlink in /lib to ld-linux.so.2 from /emul/linux/x86/lib/ld-linux.so.2, as the 64-bit variant is known as ld-linux-x86-64.so.2.
</p>
<p>
 Having those 2 packages installed should allow you to run most 32-bit precompiled applications. (e.g. Java, Oracle 9i, Opera) 
</p>
</body>
</section>

<section><title>Compiling 32-bit Applications From A 64-bit Environment (using multilib)</title>
<body>
<p>
 You must first have the standard 32-bit environment up and running from the previous section. Then you need to add <c>multilib</c> to your USE flags in <path>/etc/make.conf</path> and emerge or re-emerge <path>gcc-3.3.1-r5</path> or higher. This will build GCC with multilib support, which will allow you to create 32-bit binaries by using the <c>-m32</c> CFLAGS setting. Having multilib installed should not affect 64-bit compilations (though you can pass <c>-m64</c> if you want to be certain for some reason).
 </p>
 <p>
 <note>We strongly discourage our users from <e>ever</e> adding <c>-m32</c> to <path>/etc/make.conf</path> or using <c>-m32</c> with portage in any form what-so-ever, and recommend that to do 32-bit compiles they should be by hand and not via the portage system. Not paying attention to this could seriously mess up your dependancy structure. Don't ask us how to fix this, it's your fault.</note>
 </p>
</body>
</section>

<section><title>Creating a 32-bit <c>chroot</c> Environment</title>
<body>
<p>
 Since the kernel actually does the 32-bit emulation, you can extract the stage1 tarball for i686 to a private directory and chroot into it (use <c>linux32 chroot /mychrootdir</c>, linux32 will make uname print 'uname -m' as i686 instead of x86_64), then update portage, compile the entire system as a normal x86 system, and have a complete second environment, 32-bit-only inside of your 64-bit sytem. Unfortunately this is extremely wasteful, as you'd end up having duplicates of the same 32-bit executables, and most people only need a single application or two to work in 32-bit. Also, if you wanted to use those libraries for 32-bit emulation from within your 64-bit environment without chrooting, you'd need to edit many .so files within your emulation usr/lib directory, as especially for libc.so, libpthread.so, and librt.so, they are not actual shared object files, but have text pointing them (ld scripts) to the real .so (like a symlink, but not). That text would try to point to your native 64-bit libraries, and cause your 32-bit executables to bug out when trying to load.
 </p>
 <p>
 Please refer to Tester's original AMD64 documentation at the end of this document for more information on the chroot environment. 
 </p>
 </body>
 </section>
 
 <section><title>Reporting Bugs And Submitting Patches</title>
 <body>
 <p>
 If you an application that you've had problems with, have a patch to solve problems, or want to report a successful build so we can mark it as such in portage, please post a bug report on <uri link="http://uri.gentoo.org">bugs.gentoo.org</uri>.
</p>
<p>
 <note>You may also CC: <mail>brad_mssw@gentoo.org</mail> if you wish.</note>
 </p>
 <p>
 <note>To submit a patch, you must first submit a bug report, then go back to the bug report and select "Create a new attachment".</note>
 </p>
 </body>
 </section>
 </chapter>

 
</guide>