<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/base/amd64/howtos/Attic/2005.0-upgrade-amd64.xml,v 1.20 2005/09/10 17:38:28 eradicator Exp $ -->

<!-- The context of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommonds.org/licenses/by-sa/1.0 -->

<sections>

<version>1.3.4</version>
<date>2005-09-10</date>

<section>
<title>Updating to 2005.0 multilib</title>
<body>
<p>
Multilib is now forced on in the base 2005.0 profile.  If you wish to have a pure-64bit system, you can use the 2005.0/no-multilib profile.  This guide will show you how to upgrade a prior installation to a system that uses our new profile. There are two ways of upgrading: the easy and scripted way, or the longer way by hand.
</p>
</body>

<subsection>
<title>Scripted upgrade</title>
<body>
<p>
We recommend using the upgrade script to make this process easier.
</p>
<pre caption="Scripted Upgrade">
# <i>cd /usr/portage/profiles/default-linux/amd64/2005.0/scripts</i>
# <i>sh ./2004.3-2005.0upgrade.sh</i>
# <i>emerge -upv system</i>
# <i>emerge -uv system</i>
</pre>
</body>
</subsection>

<subsection>
<title>Upgrading by hand</title>
<body>
<p>
If you currently have USE=-multilib, you need to set multilib in USE and re-emerge gcc.
</p>
<pre caption="Emerge a multilib compiler">
# <i>USE=multilib emerge gcc</i>
<comment>If you get an error about not having a multilib sandbox, you need to set FEATURES=-sandbox</comment>
# <i>FEATURES=-sandbox USE=multilib emerge gcc</i>
</pre>

<p>
Additionally, you need to make sure you have the required versions of toolchain/portage packages as these are needed to properly rebuild glibc after switching the profile.
</p>
<pre caption="Ensure youu have a multilib toolchain">
# <i>emerge -v --oneshot '>=sys-apps/portage-2.0.51-r9'</i>
# <i>emerge -v --oneshot 'sys-apps/sandbox'</i> <comment>Only if you are in ~amd64</comment>
# <i>emerge -v --oneshot '>=sys-devel/gcc-config-1.3.9'</i>
# <i>emerge -v --oneshot '>=sys-devel/distcc-2.18.3-r1'</i>
# <i>emerge -v --oneshot '>=linux-headers-2.6.8.1-r4'</i>
</pre>
<p>
Next, make sure our 32bit glibc version is up to date.  This version is needed to bootstrap the 32bit glibc build after the profile switch.
</p>
<pre caption="Get the latest 32bit glibc">
# <i>emerge -v --oneshot '>=emul-linux-x86-glibc-2.3.4.20041102'</i>
</pre>
<p>
2005.0 doesn't use symlinks from /lib32 and /usr/lib32 to the emul directories, so we need to change them into directories and copy over some important files.
</p>
<pre caption="Manually prepare /lib32 and /usr/lib32">
# <i>rm /lib32 /usr/lib32</i>
# <i>mkdir /lib32 /usr/lib32</i>
# <i>cp /emul/linux/x86/lib32/libsandbox.so /usr/lib32</i> <comment>If you are using the stable branch</comment>
# <i>cp /emul/linux/x86/usr/lib32/libsandbox.so /usr/lib32</i> <comment>If you are in ~amd64</comment>
# <i>cp /emul/linux/x86/usr/lib32/libc.so /usr/lib32</i>
# <i>cp /emul/linux/x86/usr/lib32/libpthread.so /usr/lib32</i>
# <i>cp /emul/linux/x86/usr/lib32/*crt*.o /usr/lib32</i>
# <i>env-update</i>
</pre>
<p>
Now, we need to make sure our baselayout is up to date, so we can gurantee /etc/env.d/04multilib exists.
</p>
<pre caption="Update baselayout">
# <i>emerge -v --oneshot baselayout</i>
</pre>
<p>
We are now ready to actually switch the profile to 2005.0
</p>
<pre caption="Change your profile">
# <i>rm /etc/make.profile</i>
# <i>ln -s /usr/portage/profiles/default-linux/amd64/2005.0 /etc/make.profile</i>
</pre>
<p>
Now just build glibc, unmerge the (obsolete) emul-linux-x86-glibc and update the base system.  You should emerge the same version of glibc as the one currently on your system to avoid possible compilation problems (which result in emerge exiting with an error message).
</p>
<pre caption="Finish the update">
# <i>emerge -v --oneshot emerge -v --oneshot sys-libs/glibc</i>
# <i>emerge unmerge emul-linux-x86-glibc</i>
# <i>rm /emul/linux/x86/usr/lib/libsandbox.*</i>
# <i>emerge -upv system</i>
# <i>emerge -uv system</i>
</pre>
</body>
</subsection>

<subsection>
<title>Common Problems</title>
<body>
<p><b>USE=multilib emerge gcc (or sandbox) gives 'skipping incompatible /usr/lib/libc.so when searching for -lc'</b></p>
<p>The linker is not locating a 32bit glibc.  You probably have a broken 32bit emul lib setup.  /lib32 and /usr/lib32 should be symlinks into /emul, and you should have a 32bit libc.so in /usr/lib32 (which would mean it's really in /emul/...  This problem could stem from the fact that the lib32 symlinks are not present or are directories.  If they are directories, you should move the contents into the correct location in /emul and fix the symlinks, then continue.</p>
<p><b>Cannot compute sizeof (long double)</b></p>
<p>If you get a problem when ./configure is running on glibc, and it dies at 'checking size of long double... configure: error: cannot compute sizeof (long double), 77', check the config.log, and look for the error.  This is the first time your toolchain is used to create and execute a 32bit application.  The problems and associated causes you will see are:</p>
<pre caption="cannot compute size of long double">
<comment>Can't find libc.so</comment>
	Something is messed up with your installed emul-linux-x86-glibc.
	Follow these steps:
		# <i>rm -rf /lib32 /usr/lib32</i>
		# <i>rm /etc/make.profile</i>
		# <i>ln -s /usr/portage/profiles/default-linux/amd64/2004.3 /etc/make.profile</i> <comment>Or 2003.4/lib64 if that was your original profile</comment>
		# <i>emerge --sync</i> <comment>You need a portage snapshot from atleast July 12, 2200 UTC</comment>
		# <i>emerge -v --oneshot '>=emul-linux-x86-glibc-2.3.4.20041102'</i>

		<comment>If using the scripted upgrade:</comment>
		# <i>rm /var/tmp/2005.0_upgrade/step[34]</i>
		# <i>cd /usr/portage/profiles/default-linux/amd64/2005.0/scripts</i>
		# <i>sh ./2004.3-2005.0upgrade.sh</i>

		<comment>If using the manual upgrade:</comment>
		Continue from the codeblock where you remove the /lib32 and /usr/lib32 symlinks.

<comment>Can't find libsandbox.so</comment>
	You probably don't have a multilib sandbox or portage.  The easiest
	way around this is to use FEATURES=-sandbox for the duration of the
	upgrade, then emerge portage and sandbox after completion.

<comment>./conftest: cannot execute binary file</comment>
	You probably need to enable support for 32bit executables in your
	kernel.
</pre>
<p><b>Unresolved symbols during compilation/linking of glibc</b></p>
<p>If you get unresolved sybmols during an emerge of glibc, emerge --sync and try again.  You'll need a portage snapshot of atleast Aug 20, 2005.  If you are stuck with a snapshot before Aug 20, just emerge the same version of glibc as is already on your system, then upgrade to a newer glibc version after completing the 2005.0 upgrade.</p>
</body>
</subsection>

</section>

<section>
<title>Updating to the 2005.0/no-multilib (64bit only) profile</title>
<body>
<p>
Use this profile if you don't want any 32bit applications installed on your system.  This means you won't be able to play x86 games, use openoffice-bin, mplayer-bin, mozilla-bin (flash), acroread, etc.
</p>
<pre caption="Switch profile and update system">
# <i>rm /etc/make.profile</i>
# <i>ln -s /usr/portage/profiles/default-linux/amd64/2005.0/no-multilib /etc/make.profile</i>
# <i>emerge -upv system</i>
# <i>emerge -uv system</i>
</pre>
</body>
</section>

</sections>
