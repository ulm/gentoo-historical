<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/gdp/doc/doc-tipsntricks.xml,v 1.6 2004/12/24 11:11:41 neysx Exp $ -->

<guide link="doc-tipsntricks.xml">
<title>Documentation Development Tips &amp; Tricks</title>
<author title="Author">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
    <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>

<abstract>
Some tips &amp; tricks that make the life for a Gentoo Documentation Developer
easier (or more miserable :)
</abstract>

<license/>

<version>0.12</version>
<date>2004-12-20</date>

<chapter>
<title>Setting up your local environment</title>
<section>
<title>Local environment for contributors</title>
<body>

<p>
Create a dedicated directory for the sole purpose of developing documentation.
As an example we take <path>~/work/gentoo/doc</path>. Inside this directory,
create a subdirectory in which you will keep the (up to date) English
documentation (for instance, <path>en/</path>).
</p>

<p>
Download the tarball with the most recent English documentation:
</p>

<pre caption="Downloading the English documentation">
# <i>wget http://www.gentoo.org/dyn/doc-snapshots/docs-latest-en.tar.bz2</i>
</pre>

<p>
Unpack the documentation in the <path>en/</path> directory. You now have an
up to date snapshot of the English documentation. Every time you want to update
your snapshot, you can download the tarball again, but you can also surf to the
document and add <path>?passthru=1</path> to the URL. For instance:
</p>

<pre caption="Updating an English document">
# <i>wget http://www.gentoo.org/doc/en/alsa-guide.xml?passthru=1 -O alsa-guide.xml</i>
</pre>

<p>
In case you want to help translating documents, create a directory for your 
language in which you keep the at that time current translations:
</p>

<pre caption="Downloading the snapshot for your language">
# <i>mkdir </i><comment>${LANG}</comment>
# <i>cd </i><comment>${LANG}</comment>
# <i>wget http://www.gentoo.org/dyn/doc-snapshots/docs-latest-</i><comment>${LANG}</comment><i>.tar.bz2</i>
# <i>tar xvjf docs-latest-*.tar.bz2</i>
</pre>

<p>
When you update a document, always copy your document from
<path>${LANG}/</path> to the root dir (<path>~/work/gentoo/doc</path>) first,
then adjust the copied version. You need to keep the original one to create a
patch:
</p>

<pre caption="Creating a patch for an update">
# <i>diff -uNt </i><comment>${LANG}</comment><i>/alsa-guide.xml alsa-guide.xml</i> > alsa-guide.diff
</pre>

</body>
</section>
<section>
<title>Online CVS Repository</title>
<body>

<p>
You can request our <uri link="/cgi-bin/viewcvs.cgi">Online CVS
Repository</uri> to provide the differences between individual versions. The
main English repository is <uri
link="/cgi-bin/viewcvs.cgi/en/?root=doc&amp;sortby=date">fully
available</uri>.  Also, the online CVS repository is updated every hour.
</p>

</body>
</section>
<section>
<title>Local repository for developers</title>
<body>

<p>
Create a working directory dedicated to Gentoo; for instance
<path>~/work/gentoo/doc</path>. Then create a subdir called <path>cvs/</path>
in which you will place the CVS snapshot:
</p>

<pre caption="Getting the CVS snapshot">
# <i>mkdir cvs; cd cvs/</i>
# <i>export CVSROOT=</i><comment>&lt;your nick&gt;</comment><i>@cvs.gentoo.org:/var/cvsroot</i>
# <i>cvs co doc</i>
</pre>

<p>
To update the CVS snapshot, run <c>cvs update -dP</c> in the
<path>cvs/doc</path> directory.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Testing GuideXML</title>
<section>
<title>Testing Environment</title>
<body>

<p>
First create a <path>test/</path> directory in which you place the
<path>guide.dtd</path>, <path>main.css</path> and some images:
</p>

<pre caption="Creating the test environment">
# <i>mkdir test</i>
# <i>cd test</i>
# <i>mkdir css images</i>
# <i>wget -P css/ http://www.gentoo.org/css/main.css</i>
# <i>wget -P images/ http://www.gentoo.org/images/gbot-s.gif \
  http://www.gentoo.org/images/gridtest.gif \
  http://www.gentoo.org/images/gtop-s.jpg \
  http://www.gentoo.org/images/line.gif \
  http://www.gentoo.org/images/netraverse-gentoo.gif</i>
</pre>

<p>
Now download a special version of <path>guide.xsl</path> available on <uri
link="http://dev.gentoo.org/~swift/local/guide.xsl">SwifT's webspace</uri>. This
version is adapted to transform GuideXML to HTML on local systems.
</p>

<pre caption="Downloading guide.xsl">
# <i>wget http://dev.gentoo.org/~swift/local/guide.xsl</i>
</pre>

<p>
Finally, edit <path>/etc/xml/catalog</path> and add the following line:
</p>

<pre caption="/etc/xml/catalog addendum">
&lt;rewriteURI uriStartString="/dtd" rewritePrefix="<i>/usr/portage/metadata/dtd/</i>"/&gt;
</pre>

</body>
</section>
<section>
<title>Test a Gentoo Guide</title>
<body>

<p>
To test a Gentoo Guide, first check if it uses correct XML:
</p>

<pre caption="Using xmllint to verify guides">
# <i>xmllint --valid --noout alsa-guide.xml</i>
</pre>

<p>
If <c>xmllint</c> returns without showing anything,  then the file is
error-free (or at least concerning XML-tags). Next you need to convert it to
HTML. <c>xsltproc</c> is the tool needed for that:
</p>

<pre caption="Converting to HTML">
# <i>xsltproc --novalid test/guide.xsl alsa-guide.xml &gt; test/alsa-guide.html</i>
</pre>

<p>
If no errors are displayed, you should be able to point your browser to
<uri>file:///home/user/work/gentoo/doc/test/alsa-guide.html</uri> to view the
resulting document. If not, fix your guide until it works.
</p>

</body>
</section>
<section>
<title>Test the Gentoo Handbook</title>
<body>

<p>
The Gentoo Handbook is divided in chapters. To process a certain chapter, you
must use both the <path>handbook-x86.xml</path> file as the required
<path>hb-</path> file (such as <path>hb-install-about.xml</path>). Then you
must pass <c>xsltproc</c> the same parameters that are used while browsing the
online handbook, namely <c>part</c> and <c>chap</c>. For instance, to validate
<path>hb-install-about.xml</path>:
</p>

<pre caption="Validating hb-install-about.xml">
# <i>xmllint --valid --noout handbook-x86.xml</i>
# <i>xmllint --valid --noout hb-install-about.xml</i>
# <i>xsltproc --stringparam part 1 --stringparam chap 1 test/guide.xsl handbook-x86.xml &gt; test/hb-install-about.html</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Using an axkit setup</title>
<section>
<body>

<p>
Some doc developers prefer to use an axkit setup similar to the one running on
<uri>http://www.gentoo.org</uri>.  Here are a few pointers to help you setup a similar
configuration.
</p>

<warn>
It seems that axkit is very sensitive to the versions of the packages it uses,
especially libxml2. The configuration described below is known to work. Any
other combination of packages might break.
</warn>

<p>
First, install the required packages:
</p>

<pre caption="emerging specific versions on required packages">
<comment>(Test if packages are available to portage)</comment>
# <i>emerge -vp =libxml2-2.5.8 =libxslt-1.0.33 =AxKit-1.6.1 =XML-XPath-1.13 \
 =XML-LibXML-1.54-r1 =XML-LibXSLT-1.53 =XML-Parser-2.31-r1 =apache-1.3.29-r1</i>

These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild   R   ] dev-libs/libxml2-2.5.8  -ipv6 +python +readline  0 kB 
[ebuild   R   ] dev-libs/libxslt-1.0.33  +python  0 kB 
[ebuild   R   ] dev-perl/AxKit-1.6.1  +gnome  0 kB 
[ebuild   R   ] dev-perl/XML-XPath-1.13   0 kB 
[ebuild   R   ] dev-perl/XML-LibXML-1.54-r1   0 kB 
[ebuild   R   ] dev-perl/XML-LibXSLT-1.53   0 kB 
[ebuild   R   ] dev-perl/XML-Parser-2.31-r1   0 kB
[ebuild   R   ] net-www/apache-1.3.29-r1  +pam  0 kB

<comment>(Install packages)</comment>
# <i>emerge -v =libxml2-2.5.8 =libxslt-1.0.33 =AxKit-1.6.1 =XML-XPath-1.13 \
 =XML-LibXML-1.54-r1 =XML-LibXSLT-1.53 =XML-Parser-2.31-r1 =apache-1.3.29-r1</i>
</pre>

<p>
Then, edit the following config files:
</p>

<pre caption="/etc/apache/conf/commonapache.conf">
<comment>(Inside)</comment>
&lt;IfModule mod_dir.c&gt;
  <comment>(Add index.xml to the list)</comment>
  DirectoryIndex index.xml index.html index.php index.php3 index.shtml index.cgi index.pl index.htm Default.htm default.htm
&lt;/IfModule&gt;

<comment>(Add the following lines)</comment>
&lt;IfDefine PERL&gt;
  LoadModule perl_module extramodules/libperl.so
#  AddModule mod_perl.c
  PerlModule AxKit
  SetHandler perl-script
  PerlHandler Apache::AxKit::StyleChooser::PathInfo AxKit
  AddHandler axkit .xml .xsp
  AxAddPlugin Apache::AxKit::StyleChooser::QueryString
  AxAddXSPTaglib AxKit::XSP::Util
  AxAddXSPTaglib AxKit::XSP::IfParam
  AxAddXSPTaglib AxKit::XSP::Param
  AxAddStyleMap application/x-xsp Apache::AxKit::Language::XSP
  AxAddStyleMap text/xsl Apache::AxKit::Language::LibXSLT
  &lt;AxStyleName "#default"&gt;
    AxAddProcessor text/xsl /xsl/guide.xsl
  &lt;/AxStyleName&gt;
  &lt;AxStyleName printable&gt;
    AxAddProcessor text/xsl /xsl/guide-print.xsl
  &lt;/AxStyleName&gt;
&lt;/IfDefine&gt;

<comment>(Inside)</comment>
&lt;IfModule mod_alias.c&gt;
    Alias /icons/ /var/www/localhost/icons/
<comment>(Comment out the following line)</comment>
    #Alias /doc /usr/share/doc
</pre>

<pre caption="/etc/conf.d/apache">
<comment>(Add -D PERL to the list of options)</comment>
APACHE_OPTS="-D PERL"
</pre>

<p>
Then, copy the documentation files including the DTDs and stylesheets to
<path>/var/www/localhost/htdocs/</path>. You need the <path>css/</path>,
<path>doc/</path>, <path>dtd/</path>, <path>images/</path> and
<path>xsl/</path> directories. Gentoo developers can copy from or symlink to
their CVS local copy. Other contributors will need to download the files from
our <uri
link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/xml/htdocs/?root=gentoo">viewCVS</uri>
interface.
</p>

<p>
All there is left to do is start your apache server with:
</p>

<pre caption="Launching apache">
# <i>/etc/init.d/apache start</i>
# <comment>(Add it to your runlevel if you want to start it automatically at boot time)</comment>
# <i>rc-update add apache default</i>
</pre>

<p>
Point now your browser to <uri>http://your_server/doc/en/</uri> or simply
<uri>http://localhost/doc/en/</uri> if you installed axkit on your workstation.
You can check <path>/var/log/apache/access_log</path> for accesses and
<path>/var/log/apache/error_log</path> for errors.
</p>

<note>
Mozilla users might need to set <c>keyword.enabled</c> to <c>false</c> in their
<uri>about:config</uri> page when using localhost.
</note>

</body>
</section>

</chapter>

<chapter>
<title>Frequently Asked Questions</title>
<section>
<title>How do I convert a file to UTF-8?</title>
<body>

<p>
There are quite a few tools that help you. A popular one is
<c>app-text/recode</c>. Another one is <c>iconv</c>, part of
<c>sys-libs/glibc</c>.
</p>

<p>
Recode's use is pretty straightforward. You tell it what character encoding is
currently used by the document and to what encoding you want to convert the
document.
</p>

<p>
For instance, to convert a document from ISO-8859-15 (also known as Latin-9) to
UTF-8, you can use:
</p>

<pre caption="Recoding a file">
<comment>(l9 = ISO-8859-15, u8 = UTF-8)</comment>
$ <i>recode l9..u8 file.xml</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Commonly or Dangerous Made Mistakes</title>
<section>
<title>Forgetting the all-arch-aspect of the Gentoo Handbook</title>
<body>

<p>
The files in <path>[gentoo]/xml/htdocs/doc/en/handbook</path> that do not end
with a &quot;-&lt;arch&gt;.xml&quot; suffix are read by <e>all</e> handbooks,
which means that whatever is listed inside must be cross-architectural.
</p>

<p>
If you need to make modifications regarding your own architecture and you're
afraid you need to place this in such a file, you might want to ask on
<c>gentoo-doc@gentoo.org</c> first how to solve this. Sometimes there is a way
without making it more difficult for other architectural users.
</p>

</body>
</section>
<section>
<title>Not bumping version/date or doing it the wrong way</title>
<body>

<p>
Conforming the policy, you <e>must</e> bump a version/date when you make certain
changes (most actually). Although the version is less important (SwifT will
still kill you if you forget it) the date tells our users when the document was
altered for the last time.
</p>

<p>
When updating the handbook, only bump the date and version of the files you
changed. Don't bump the handbook-<e>ARCH</e>.xml unless you actually changed
its content.
</p>

<p>
Another common mistake is to update the version number as if it were a decimal
number. It's not. <c>3.9</c> should become <c>3.10</c>, not <c>4.0</c>, nor
<c>3.91</c>.
</p>

</body>
</section>
</chapter>

</guide>
