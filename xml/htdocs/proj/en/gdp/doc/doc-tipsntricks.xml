<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/en/gdp/doc/doc-tipsntricks.xml,v 1.21 2006/11/03 16:53:07 neysx Exp $ -->

<guide link="/proj/en/gdp/doc/doc-tipsntricks.xml">
<title>Documentation Development Tips &amp; Tricks</title>

<author title="Author">
  <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="Author">
  <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>

<abstract>
Some tips &amp; tricks that make the life for a Gentoo Documentation Developer
easier (or more miserable :)
</abstract>

<license/>

<version>0.26</version>
<date>2006-11-03</date>

<chapter>
<title>Setting up your local environment</title>
<section>
<title>Local environment for contributors</title>
<body>

<p>
Create a dedicated directory for the sole purpose of developing documentation.
As an example we take <path>~/work/gentoo/doc</path>. Inside this directory,
create a subdirectory in which you will keep the (up to date) English
documentation (for instance, <path>en/</path>).
</p>

<p>
Download the tarball with the most recent English documentation:
</p>

<pre caption="Downloading the English documentation">
$ <i>wget http://www.gentoo.org/dyn/doc-snapshots/docs-latest-en.tar.bz2</i>
</pre>

<p>
Unpack the documentation in the <path>en/</path> directory. You now have an
up to date snapshot of the English documentation. Every time you want to update
your snapshot, you can download the tarball again, but you can also surf to the
document and add <path>?passthru=1</path> to the URL. For instance:
</p>

<pre caption="Updating an English document">
$ <i>wget http://www.gentoo.org/doc/en/alsa-guide.xml?passthru=1 -O alsa-guide.xml</i>
</pre>

<p>
In case you want to help translating documents, create a directory for your
language in which you keep the at that time current translations:
</p>

<pre caption="Downloading the snapshot for your language">
$ <i>mkdir </i><comment>${LANG}</comment>
$ <i>cd </i><comment>${LANG}</comment>
$ <i>wget http://www.gentoo.org/dyn/doc-snapshots/docs-latest-</i><comment>${LANG}</comment><i>.tar.bz2</i>
$ <i>tar xvjf docs-latest-*.tar.bz2</i>
</pre>

<p>
When you update a document, always copy your document from
<path>${LANG}/</path> to the root dir (<path>~/work/gentoo/doc</path>) first,
then adjust the copied version. You need to keep the original one to create a
patch:
</p>

<pre caption="Creating a patch for an update">
$ <i>diff -U6 </i><comment>${LANG}</comment><i>/alsa-guide.xml alsa-guide.xml</i> > alsa-guide.diff
</pre>

</body>
</section>
<section>
<title>Online CVS Repository</title>
<body>

<p>
You can request our <uri link="http://sources.gentoo.org/">Online CVS
Repository</uri> to provide the differences between individual versions. The
main English repository is <uri
link="http://sources.gentoo.org/gentoo/xml/htdocs/doc/en/">fully
available</uri>. Also, the online CVS repository is updated every hour.
</p>

</body>
</section>
<section>
<title>Local repository for developers</title>
<body>

<p>
Create a working directory dedicated to Gentoo; for instance
<path>~/work/gentoo/doc</path>. Then create a subdir called <path>cvs/</path>
in which you will place the CVS snapshot:
</p>

<pre caption="Getting the CVS snapshot">
$ <i>mkdir cvs; cd cvs/</i>
$ <i>export CVSROOT=</i><comment>&lt;your nick&gt;</comment><i>@cvs.gentoo.org:/var/cvsroot</i>
$ <i>cvs co doc</i>
</pre>

<p>
To update the CVS snapshot, run <c>cvs update -dP</c> in the
<path>cvs/doc</path> directory.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Testing GuideXML</title>
<section>
<title>Testing Environment</title>
<body>

<p>
First create a <path>test/</path> directory in which you place the
<path>guide.xsl</path>, <path>main.css</path> and some images:
</p>

<pre caption="Creating the test environment">
$ <i>mkdir -p test/{css,images}</i>
$ <i>cd test</i>
$ <i>wget -P css/ http://www.gentoo.org/css/main.css</i>
$ <i>wget -P images/ http://www.gentoo.org/images/gridtest.gif \
  http://www.gentoo.org/images/gentoo-new.gif \
  http://www.gentoo.org/images/gtop-www.jpg</i>
</pre>

<p>
Now download a special version of <path>guide.xsl</path> available on <uri
link="http://dev.gentoo.org/~neysx/guide.xsl">neysx's webspace</uri>. This
version is adapted to transform GuideXML to HTML on local systems and supports
quite a few languages. A <uri
link="http://dev.gentoo.org/~neysx/guide-en.xsl">much shorter version</uri>
that supports only English is also available.
</p>

<pre caption="Downloading guide.xsl">
$ <i>wget http://dev.gentoo.org/~neysx/guide.xsl</i>
<comment>( <b>Or</b>, if English is all you need)</comment>
$ <i>wget -O guide.xsl http://dev.gentoo.org/~neysx/guide-en.xsl</i>
</pre>

<p>
Finally, edit <path>/etc/xml/catalog</path> as root and add the following line:
</p>

<pre caption="/etc/xml/catalog addendum">
&lt;rewriteURI uriStartString="/dtd/" rewritePrefix="<i>/usr/portage/metadata/dtd/</i>"/&gt;
</pre>

<p>
If your <path>/etc/xml/catalog</path> is empty or does not contain any entry,
you need to <e>insert</e> the <c>&lt;rewriteURI&gt;</c> element <e>inside</e>
the <c>&lt;catalog&gt;</c> element:
</p>

<pre caption="Minimal /etc/xml/catalog">
&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE catalog PUBLIC "-//OASIS//DTD Entity Resolution XML Catalog V1.0//EN" "http://www.oasis-open.org/committees/entity/release/1.0/catalog.dtd"&gt;
&lt;catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog"&gt;
  &lt;rewriteURI uriStartString="/dtd/" rewritePrefix="<i>/usr/portage/metadata/dtd/</i>"/&gt;
&lt;/catalog&gt;
</pre>

<p>
Besides, some files may specify the on-line DTD with an uri like
<path>http://www.gentoo.org/dtd/guide.dtd</path>. You can also rewrite those
references and avoid slow accesses to the net:
</p>

<pre caption="Extra /etc/xml/catalog addendum">
&lt;rewriteURI uriStartString="http://www.gentoo.org/dtd/" rewritePrefix="<i>/usr/portage/metadata/dtd/</i>"/&gt;
</pre>

</body>
</section>
<section>
<title>Test a Gentoo Guide</title>
<body>

<p>
To test a Gentoo Guide, first use <c>xmllint</c> (from <c>dev-libs/libxml2</c>)
to check if it uses correct XML:
</p>

<pre caption="Using xmllint to verify guides">
$ <i>xmllint --valid --noout alsa-guide.xml</i>
</pre>

<p>
If <c>xmllint</c> returns without showing anything,  then the file is
error-free (or at least concerning XML-tags). Next you need to convert it to
HTML, using <c>xsltproc</c> (from <c>dev-libs/libxslt</c>):
</p>

<pre caption="Converting to HTML">
$ <i>xsltproc test/guide.xsl alsa-guide.xml &gt; test/alsa-guide.html</i>
</pre>

<p>
If no errors are displayed, you should be able to point your browser to
<uri>file:///home/user/work/gentoo/doc/test/alsa-guide.html</uri> to view the
resulting document. If not, fix your guide until it works.
</p>

</body>
</section>
<section>
<title>Test the Gentoo Handbook</title>
<body>

<p>
The Gentoo Handbook is divided in chapters. To process a certain chapter almost
as it would on our web server, you must use both the
<path>handbook-x86.xml</path> file as the required <path>hb-</path> file (such
as <path>hb-install-about.xml</path>). Then you must pass <c>xsltproc</c> the
same parameters that are used while browsing the online handbook, namely
<c>part</c> and <c>chap</c>. Follows an example of how you can validate
<path>hb-install-about.xml</path>. Please note that you need all the files that
the hanbook includes.
</p>

<pre caption="Validating and converting hb-install-about.xml">
$ <i>xmllint --valid --noout handbook-x86.xml</i>
$ <i>xmllint --valid --noout hb-install-about.xml</i>
$ <i>xsltproc --stringparam part 1 --stringparam chap 1 test/guide.xsl handbook-x86.xml &gt; test/hb-install-about.html</i>
</pre>

<p>
Alternatively, you can also process a handbook chapter like any other guide
document, but links to other chapters will not be generated.
</p>

<pre caption="Validating and converting hb-install-about.xml the easy way">
$ <i>xmllint --valid --noout hb-install-about.xml</i>
$ <i>xsltproc test/guide.xsl hb-install-about.xml &gt; test/hb-install-about.html</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Frequently Asked Questions</title>
<section>
<title>How do I convert a file to UTF-8?</title>
<body>

<p>
There are quite a few tools that help you. A popular one is
<c>app-text/recode</c>. Another one is <c>iconv</c>, part of
<c>sys-libs/glibc</c>.
</p>

<p>
Recode's use is pretty straightforward. You tell it what character encoding is
currently used by the document and to what encoding you want to convert the
document.
</p>

<p>
For instance, to convert a document from ISO-8859-15 (also known as Latin-9) to
UTF-8, you can use:
</p>

<pre caption="Recoding a file">
<comment>(l9 = ISO-8859-15, u8 = UTF-8)</comment>
$ <i>recode l9..u8 file.xml</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>Documentation Submission Tips</title>
<section>
<title>Check for correct &lt;guide&gt; tags</title>
<body>

<p>
Make sure that the &lt;guide link&gt; attribute points to the correct location
for the guide. This is generally <path>/doc/${LANG}/filename.xml</path>. If you
have a translated document, always specify the absolute path to the document
(e.g. <path>/doc/${LANG}/</path>). If you are writing a guide that uses the
<c>guide</c> or <c>book</c> DTD, you may use either
<path>/doc/${LANG}/filename.xml</path> or <path>filename.xml</path>. Generally,
the GDP recommends the former specification.
</p>

</body>
</section>
<section>
<title>Check links</title>
<body>

<p>
You <e>must</e> verify that all hyperlinks in your document work. If it is a
translated document, make sure that any links to other translated documents
point to the existing files.
</p>

</body>
</section>
<section>
<title>Check for tabs</title>
<body>

<p>
Tabs are absolutely forbidden in GuideXML documents except when required (e.g.
if the document instructs the user to use tabs). To check a document for tabs,
run <c>grep "CTRL+V&lt;TAB&gt;" file.xml</c>. Fix any lines that <c>grep</c>
prints out.
</p>

</body>
</section>
<section>
<title>Bugzilla</title>
<body>

<p>
Once you have finished your document, submit it to the Documentation Team using
<uri
link="http://bugs.gentoo.org/enter_bug.cgi?product=Documentation">Bugzilla</uri>.
You don't have to mention information like platform, <c>emerge info</c>
output, arch, steps to reproduce, etc. If you have a translated document, be
sure to select the <uri
link="http://bugs.gentoo.org/enter_bug.cgi?product=Doc%20Translations">Doc
Translations</uri> component for your bug. Also, include a helpful summary
for your translation using the preferred format: "[fr] New translation:
/doc/fr/gnupg-user.xml". Replace <b>[fr]</b> with the two-letter code for your
language.
</p>

<p>
By default, <mail>docs-team@gentoo.org</mail> is the assignee of your bug;
there's no need to change the assignee field.
</p>

<p>
Attach files and patches to the bug using the "plain text (text/plain)"
selection.  Do <e>not</e> select "XML source (application/xml)", even if you
are submitting a <path>.xml</path> file. Patches should have the "Patch" option
checked. Do not submit tarballs full of documents; attach each document and
patch individually.
</p>

</body>
</section>
</chapter>

<chapter>
<title>Commonly or Dangerous Made Mistakes</title>
<section>
<title>Forgetting the all-arch-aspect of the Gentoo Handbook</title>
<body>

<p>
The files in <path>[gentoo]/xml/htdocs/doc/en/handbook</path> that do not end
with a &quot;-&lt;arch&gt;.xml&quot; suffix are read by <e>all</e> handbooks,
which means that whatever is listed inside must be cross-architectural.
</p>

<p>
If you need to make modifications regarding your own architecture and you're
afraid you need to place this in such a file, you might want to ask on
<c>gentoo-doc@gentoo.org</c> first how to solve this. Sometimes there is a way
without making it more difficult for other architectural users.
</p>

</body>
</section>
<section>
<title>Not bumping version/date or doing it the wrong way</title>
<body>

<p>
Conforming to the policy, you <e>must</e> bump a version/date when you make
certain changes (most actually). Although the version is less important (SwifT
will still kill you if you forget it) the date tells our users when the
document was last modified.
</p>

<p>
If you are making a <e>content</e> change to a document (such as instructions,
code examples, etc.), then you must increment the version. For
<e>non-content</e> changes (e.g. typo or GuideXML fixes), version bumping is
usually unnecessary.
</p>

<p>
When updating the handbook, only bump the date and version of the files you
changed. Don't bump the handbook-<e>ARCH</e>.xml unless you actually changed
its content.
</p>

<p>
Another common mistake is to update the version number as if it were a decimal
number. It's not. <c>3.9</c> should become <c>3.10</c>, not <c>4.0</c>, nor
<c>3.91</c>.
</p>

</body>
</section>
</chapter>

</guide>
