<?xml version='1.0' encoding="UTF-8"?>

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link = "gdp-docdev.xml">
<title>HOWTO for Documentation Developers</title>
<author title="Author">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<abstract>
This guide has some interesting points concerning being a documentation
developer for Gentoo.
</abstract>
<version>1.1.1</version>
<date>September 1, 2003</date>
<chapter>
<title>Getting Settled</title>
<section>
<title>Preliminaries</title>
<body>
<p>
Being a documentation developer for Gentoo is a timeconsuming and important 
job. You should be very motivated and have free time to do so. If you
cannot, you are always welcome to help with the documents when you have some
free time and work your way through <uri>http://bugs.gentoo.org</uri> to help
the documentation development so that the documentation team does not
fall behind on schedule.
</p>
<p>
Before you continue, be sure to read all important documents, such as the <uri
link="http://www.gentoo.org/doc/en/doc-policy.xml">Gentoo Linux
Documentation Policy</uri>, the <uri
link="http://www.gentoo.org/doc/en/policy.xml">Gentoo Linux Development
Policy</uri> (less important for documents but you must read this
anyway), the <uri link="http://www.gentoo.org/doc/en/xml-guide.xml">XML
Guide</uri> and, if you have or are going to have CVS access, the <uri
link="http://www.gentoo.org/doc/en/cvs-tutorial.xml">CVS Tutorial</uri>.
</p>
</body>
</section>
<section>
<title>Becoming a full-time documentation developer</title>
<body>
<note>
If you plan on contributing to the Gentoo documentation but not
delivering your life (well, free time is also sufficient) you can skip
this section.
</note>
<p>
First contact the one in charge of new developers for the Gentoo
Documentation Team. This person is listed on
<uri>http://www.gentoo.org/doc/en/doc-policy.xml</uri>. Currently this
person is <mail link="swift@gentoo.org">SwifT</mail>.
</p>
<p>
This person will answer all questions you have concerning this
responsability. If he thinks you're indeed a good candidate, he will
make contact with the responsible for adding new developers to Gentoo.
</p>
<impo>
We do not accept people who have not contributed to the Gentoo
Documentation before on a regular basis. Being a full-time documentation
developer is <e>not</e> a lightweight task. You must be able to take on
documentation-tasks you are perhaps less happy with, follow a strict
<uri link="http://www.gentoo.org/doc/en/doc-policy.xml">policy</uri> and
most of all: be <e>very</e> motivated :)
</impo>
<p>
You need to provide the following information to the responsible person:
</p>
<ul>
<li>Real Name, e.g. "Jhon Do"</li>
<li>Nickname, registered to freenode's NickServ, e.g. "JhoDo"</li>
<li>Location, e.g. "Brussels, Belgium"</li>
<li>E-mail address, e.g. "jhon.do@kickme.net"</li>
<li>Task you want to furfill in the documentation team</li>
</ul>
<p>
You will also be asked to provide your SSH public key for access to the
cvs.gentoo.org website. More information on SSH-keys <uri
link="http://www.gentoo.org/proj/en/infrastructure/sshkeys.xml">here</uri>. 
You must also have GPG for e-mail encryption and signing. We have an excellent 
<uri link="http://www.gentoo.org/doc/en/gnupg-user.xml">guide</uri> on that
subject.
</p>
<p>
Afterwards, you will be given commit access to the appropriate CVS
modules whenever your mentor deems it appropriate so you can commit your 
documents, changes or translations...
</p>
</body>
</section>
</chapter>
<chapter>
<title>Working as a documentation developer</title>
<section>
<title>Setting up a local environment</title>
<body>
<note>
This is a suggestion, not a mandatory guideline. It is based on personal
experiences which work out well.
</note>
<p>
First of all, we're going to download the CVS repository. If you have (read) 
access to the cvs repository then you can use <c>cvs</c> to download. If you 
do not, please use the <uri 
link="http://www.gentoo.org/dyn/arch/xml-guide-latest.tar.gz">daily
generated tarball</uri>.
</p>
<pre caption = "Setting up the local repository: cvs">
$ <i>mkdir work/gentoo/doc/cvs</i>
$ <i>cd work/gentoo/doc/cvs</i>
$ <i>export CVSROOT=yournick@cvs.gentoo.org:/home/cvsroot</i>
$ <i>cvs co htdocs</i>
</pre>
<pre caption = "Setting up the local repository: tarball">
$ <i>mkdir work/gentoo/doc/cvs</i>
$ <i>cd work/gentoo/doc/cvs</i>
$ <i>wget http://www.gentoo.org/dyn/arch/xml-guide-latest.tar.gz</i>
$ <i>tar xvzf xml-guide-latest.tar.gz</i>
</pre>
<p>
You will now have an up-to-date snapshot of the htdocs module of the 
CVS repository, which is where all document-related stuff is placed.
</p>
<note>
If you have a local repository based on the tarball content, and you
receive CVS access, remove the <path>work/gentoo/doc/cvs</path>
directory completely and setup the repository again, using the cvs
method.
</note>
<p>
Now we will make a test-zone where new documents will be tested. You
will need to copy over some stuff from the local repository and download
a special guide.xsl which allows you to transform xml to html without
loosing stylesheet information, images, ...
</p>
<pre caption = "Making the testzone">
$ <i>cd ~/work/gentoo/doc</i>
$ <i>cp -r cvs/htdocs/css .</i>
$ <i>wget http://dev.gentoo.org/~swift/images.tar.gz</i>
$ <i>tar xvzf images.tar.gz</i>
$ <i>rm images.tar.gz</i>
$ <i>cp cvs/htdocs/dtd/guide.dtd .</i>
$ <i>wget http://dev.gentoo.org/~swift/guide.xsl</i>
</pre>
</body>
</section>
<section>
<title>Updating the local repository</title>
<body>
<p>
If you work with a CVS-backed local repository, updating is as simple as
this:
</p>
<pre caption = "Updating the local repository: cvs">
$ <i>cd ~/work/gentoo/doc/cvs/htdocs</i>
$ <i>cvs update -dP</i>
</pre>
<p>
If you have a tarball-backed local repository, it is adviseable to only
update the documents you are really interested in. Download them from
our online CVS repository (<uri
link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/xml/htdocs/doc/en/?cvsroot=gentoo">here</uri>)
which is synchronised daily with the "real" CVS repository. 
</p>
</body>
</section>
<section>
<title>Editing documents</title>
<body>
<p>
Now what you need to do is put all your own documents (or the documents
you are working on) in <path>work/gentoo/doc</path>. Suppose you want to 
edit the <path>xml-guide.xml</path> file, then you update your local repository
and copy the file from the English repository. Make a backup of the
original document -- we are going to need that later when we create a
patch.
</p>
<pre caption = "Making a local copy">
$ <i>cd ~/work/gentoo/doc</i>
$ <i>cp cvs/htdocs/doc/en/xml-guide.xml .</i>
$ <i>cp xml-guide.xml xml-guide.xml.orig</i>
</pre>
<p>
Now you can start editing the document. Don't forget to add your
credentials on top of the document. For instance, for translators:
</p>
<pre caption = "Adding the credits on top">
&lt;author title="Translator"&gt;
   &lt;mail link="the.email@address.com"&gt;Your Name&lt;/mail&gt;
&lt;/author&gt;
</pre>
<p>
Depending on what you do, you add:
</p>
<ul>
<li><e>Translator</e> if you are translating a guide to your native language</li>
<li><e>Reviewer</e> if you are reviewing changes proposed by another editor</li>
<li><e>Editor</e> if you are making changes based on bugreports or similar</li>
<li><e>Contributor</e> if you are adding content off your head to enlighten the document</li>
<li><e>Author</e> if you are the author of the document</li>
</ul>
<note>
If you are making a translation, it is advised that you put a comment on top of
the xml translation mentioning to which revision the translation is
based. This will help you keep track of all translations to know if they
are up to date or need updating. In order to know what revision a
certain document is, go to <uri
link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/xml/htdocs/doc/en/?cvsroot=gentoo#dirlist">this
page</uri>. Update this comment every time you update the translation!
<pre caption = "Adding revision information">
&lt;!-- 
    Translation based on English doc rev. 1.12
--&gt;
</pre>
</note>
<p>
After editing, you must make sure there are no syntactical errors in
it. You can check this with <c>xmllint</c>:
</p>
<pre caption = "Checking for syntactical correctness">
$ <i>xmllint xml-guide.xml</i>
</pre>
<p>
If it outputs errors, correct them. If it outputs the file itself, then
there are no syntactical errors.
</p>
<p>
Next, make sure that the guide-link is correct. For instance, for Dutch
translation of the xml-guide:
</p>
<pre caption = "Setting guide-link correct">
&lt;guide link = "<i>/doc/nl/xml-guide.xml</i>"&gt;
</pre>
<p>
If you are editing an existing document, this guide-link needs no
change.
</p>
<p>
To test the guide before committing, we use <c>xsltproc</c>. However,
because we're going to use this one frequently, you can write a Makefile
which does everything for you. Here is a snippet of mine:
</p>
<pre caption = "Snippet of Makefile">
gentoo-howto:
        xsltproc guide.xsl gentoo-howto.xml &gt; test.html 2&gt;/dev/null

cvs-tutorial:
        xsltproc guide.xsl cvs-tutorial.xml &gt; test.html 2&gt;/dev/null

eclass-howto:
        xsltproc guide.xsl eclass-howto.xml &gt; test.html 2&gt;/dev/null
</pre>
<p>
This makes life very easy. To test <path>xml-guide.xml</path>, I just
issue <c>make xml-guide</c> (which, with tab autocompletion, is
much faster than <c>xsltproc guide.xsl xml-guide.xml &gt; test.html
2&gt;/dev/null</c>). The reason for <c>2&gt;/dev/null</c> is to surpress
a warning we don't care about -- if the xml file runs through
<c>xmllint</c> perfectly and the above mentioned guide-link fine, so
will be our document.
</p>
<note>
We cannot use the full filename as the Makefile trigger, so we have to
remove the .xml extension manually.
</note>
<pre caption = "Testing xml-guide.xml">
$ <i>make xml-guide</i>
</pre>
<p>
You now have a file called <path>test.html</path>. Fire up a browser,
<e>bookmark this page</e> and view it. It should show up the way you've
intended it to show up.
</p>
<p>
If you're not into this <path>Makefile</path> stuff, you can also opt
for a small script. Lets call it <path>xlocal</path>. It contains the
following:
</p>
<pre caption = "xlocal content">
#!/bin/sh

xsltproc guide.xsl ${1} &gt; test.html
</pre>
<p>
With this, you can execute the following to generate the
<path>test.html</path> file:
</p>
<pre caption = "Running xlocal for the xml-guide.xml document">
$ <i>./xlocal xml-guide.xml</i>
</pre>
</body>
</section>
<section>
<title>Providing patches to bugs.gentoo.org</title>
<body>
<p>
When you have updated a guide, you should attach the patch to the
document on the correct bugreport. If you have created a new guide, or a
translation, you should attach the full guide ofcourse.
</p>
<p>
To create a patch, use the <c>diff</c> command with the <c>-uNt</c>
options:
</p>
<pre caption = "Creating a patch">
$ <i>diff -uNt xml-guide.xml.orig xml-guide.xml &gt; xml-guide.diff</i>
</pre>
<p>
Ofcourse, substitute <path>xml-guide.xml.orig</path> and
<path>xml-guide.xml</path> with the correct filenames.
</p>
<p>
Review the patch one final time (you will be surprised how many errors
you can find when reviewing a patch :) and then submit it to the
bugreport.
</p>
</body>
</section>
<section>
<title>Reviewing documents</title>
<body>
<p>
If you want to review a document-change, the provided patch should be
sufficient to say "yay" or "nay" :) However, it is adviseable that you
run the patch on a local document just to make sure that the document
renders correctly:
</p>
<pre caption = "Patching a local document">
$ <i>cp cvs/htdocs/doc/en/xml-guide.xml .</i>
$ <i>patch &lt; xml-guide.diff</i>
patching file xml-guide.xml
Hunk #1 succeeded at 122 (offset 27 lines).
</pre>
<p>
In the above example, the patch succeeded, but <c>patch</c> needed to
apply the patch 27 lines lower -- probably because the used
<path>xml-guide.xml</path> is newer than the one used to create
the patch with.
</p>
<p>
If you approve, make sure to add your name as <e>Reviewer</e> on the
document: edit the created document, add your credentials, create a
patch and submit that patch to the bugreport.
</p>
<p>
You can also approve the patch using a comment on
<uri>http://bugs.gentoo.org</uri> and ask for the committer to add your
name to the document as reviewer. It all depends on how nice this
committer is :)
</p>
</body>
</section>
<section>
<title>Committing documents</title>
<body>
<note>
This section is only for full-time documentation developers with CVS
access.
</note>
<p>
Patch <e>the latest revision</e> of the document with the provided patch
from the bugreport. If some hunks fail, check out why and, if
appropriate, apply them manually.
</p>
<p>
If you are certain the file is errorfree, the content has been reviewed
and you want to commit it, follow the next steps. We are going to use a 
translation as an example; <e>don't type in the same commands</e> or you'll
overwrite my translations! :) 
</p>
<p>
To add a new document:
</p>
<pre caption = "Adding a new document">
$ <i>cp xml-guide.xml cvs/htdoc/doc/nl</i>
$ <i>cd cvs/htdoc/doc/nl</i>
$ <i>cvs add xml-guide.xml -m 'New Translation coming up'</i>
$ <i>cvs commit xml-guide.xml -m 'New dutch translation'</i>
</pre>
<p>
To update an existing document:
</p>
<pre caption = "Updating an existing document">
$ <i>cp xml-guide.xml cvs/htdocs/doc/nl</i>
$ <i>cd cvs/htdocs/doc/nl</i>
$ <i>cvs commit xml-guide.xml -m 'Fix #12345'</i>
</pre>
<note>
Don't forget to remove the files from your local testenvironment
afterwards -- the file has been committed, so there is no need to have
them laying around.
</note>
<p>
The <c>-m 'New dutch translation'</c> adds the text "New dutch
translation" to the CVS logs. If it isn't a new translation, you can use
some line to mention to what revision you have updated the translation,
for instance <c>-m 'Synched with rev 1.13'</c>, or mention what bugs
this commit fixes, for instance <c>-m 'Fix #12345'</c>, or mention
whatever you want, as long as it is clear and concise.
</p>
<p>
If you want to tell more in the logs, don't use the <c>-m</c> switch.
CVS will then pop up your favorite editor in which you can say whatever
you want.
</p>
<p>
Now if this is a new document, you should have it listed on the main
documentation page. I advise you to do the following steps <e>after</e>
waiting for the file to come up on the website (which is on :20h every
time -- the website does a cvs update then). So go to
<uri>http://www.gentoo.org/doc/nl/xml-guide.xml</uri> (substitute for
your document) and be sure that the file renders correctly. It is better
to wait now than to receive bugs later.
</p>
<p>
To list the document on the main document page, edit
<path>cvs/htdocs/main/en/docs.xml</path>. For instance, for our
<path>xml-guide.xml</path> translation, we search for the right place and add 
the following:
</p>
<pre caption = "Listing the new translation on the main page">
&lt;uri link="/doc/it/xml-guide.xml"&gt;Italiano&lt;/uri&gt;|
&lt;uri link="/doc/ja/xml-guide.xml"&gt;Japanese&lt;/uri&gt;|
&lt;uri link="/doc/kr/xml-guide.xml"&gt;Korean&lt;/uri&gt;|
<i>&lt;uri link="/doc/nl/xml-guide.xml"&gt;Nederlands&lt;/uri&gt;|</i>
&lt;uri link="/doc/ru/xml-guide.xml"&gt;Russian&lt;/uri&gt;&lt;/p&gt;
</pre>
<p>
As you can see
</p>
<ul>
<li>the languages are in alphabetical order</li>
<li>you list the <e>xml</e> file (do not use an .html extension)</li>
<li>the last language closes off with <c>&lt;/p&gt;</c> and without an
"|"</li>
<li>the languages are mentioned in their own language but with Western
characters -- we're working on changing this</li>
</ul>
<p>
If it is a new document that you are adding, go to the correct section
in <path>docs.xml</path> where you want to add a paragraph for your
document, and add it. This should be fairly trivial by just copy/pasting
another paragraph and editing it to your needs.
</p>
<p>
Check the file for syntactical correctness (<e>very important, you can
make the whole Gentoo Documentation Page vanish if you've made a
mistake</e>):
</p>
<pre caption = "Checking syntactical correctness">
$ <i>xmllint docs.xml</i>
</pre>
<p>
If it turns out fine, commit the file to CVS:
</p>
<pre caption = "Committing the file to CVS">
$ <i>cvs commit docs.xml -m 'New translation added: nl/xml-guide.xml'</i>
<comment>or</comment>
$ <i>cvs commit docs.xml -m 'New document added: The FooBar Guide'</i>
</pre>
</body>
</section>
<section>
<title>Keeping translations up-to-date</title>
<body>
<p>
Personally, I have a file called <path>LATEST</path> in which I list 
what the latest English document is (with it's revision) to which I 
have checked my translations. Currently, this is:
</p>
<pre caption = "The LATEST file">
$ <i>cat LATEST</i>
source_mirrors.xml : 1.10
</pre>
<p>
So I know that any change to the repository since 
<path>source_mirrors.xml</path> has reached revision 1.10 should be 
checked.
</p>
<p>
Go to <uri link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/xml/htdocs/doc/en/?cvsroot=gentoo&amp;sortby=date#dirlist">this page</uri>
(bookmark this page -- it is very handy) and see what documents have
changed since <path>source_mirrors.xml</path> has become revision 1.10.
The page lists all changed documents in order of the latest change, so
just search for the <path>source_mirrors.xml</path>; any file above
it has been changed since. If <path>source_mirrors.xml</path> has been
changed, you have to search a little more (deeper) until you have found
an English document to which you know you are up-to-date with (hint:
<c>head the-file.xml</c> will show you the comment on top of it in which
you've listed the latest revision of translation).
</p>
<p>
To view what has changed between 2 revisions, select it on the
beforementioned <uri link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/xml/htdocs/doc/en/?cvsroot=gentoo&amp;sortby=date#dirlist">page</uri>
and then select the <b>top</b> <e>Diff to previous 1.XYZ</e>. If you want 
all changes between 2 non-succeeding revisions, edit the URL you receive 
so that the <c>r1=</c> line mentions the revision you want to know all 
updates from.
</p>
<p>
Now update all translations that need updating, following the steps
above. When you have finished, update <path>LATEST</path> so that it
reads the most recently changed document (meaning the top document of
<uri
link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/xml/htdocs/doc/en/?cvsroot=gentoo&amp;sortby=date#dirlist">this</uri>
page) together with it's revision number.
</p>
</body>
</section>
</chapter>
</guide>
