<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sections SYSTEM "/dtd/book.dtd">
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/ja/base/amd64/howtos/chroot.xml,v 1.1 2006/04/01 03:34:18 idani Exp $ -->

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->

<sections>

<version>1.0.2</version>
<date>2005-08-31</date>
<!-- Original revision: 1.5 -->

<section>
<title>はじめに</title>
<subsection>
<title>64bitシステムの紹介</title>
<body>
<p>
このGentoo Linux 32bit chrootガイドは、Gentoo/AMD64システムで、本当の32bit chrootを設定するお手伝いをします。
</p>
<p>
ご存じの通り、64bitシステムは32bitアプリケーションをネイティブで実行しません(少なくともportageとは)。
32bitアプリケーションを動作させるために、エミュレーションライブラリを使う必要があります。もしくは、ネイティブ32bitアプリケーションをインストールして実行するためのchroot内に、真の32bitシステムを作成する必要があります。
もっとも一般的な使用では、32bit chrootシステムを構築する必要はありません。
しかしながら、もし実行したいアプリケーションが32bitライブラリと動作するバイナリがない場合は32bit chrootが必要になります。 このガイドは、32bit chrootを設定して、そのchroot内でどうやってアプリケーションをインストール、そして実行するかを、お教えします。
</p>
</body>
</subsection>
</section>

<section>
<title>インストール</title>
<subsection>
<title>32bit chrootをインストールする</title>
<body>
<p>
32bit chrootをインストールするためには、Gentoo Linuxをx86コンピュータにインストールするための多くの手順を踏まなくてはなりません。
今回は、<uri link="http://www.gentoo.org/main/en/mirrors.xml">ミラー</uri>にある最新のstage3が必要です。
</p>
<pre caption="Gentooミラーからstage3をダウンロードする">
$ cd /home/user/downloads
$ wget -c http://distfiles.gentoo.org/releases/x86/2005.0/stages/athlon-xp/stage3-athlon-xp-2005.0.tar.bz2
</pre>
<note>ダウンロードするのは、x86のstageです、AMD64<c>ではありません</c>。</note>
<p>
stage3をダウンロードした後に、新しいchrootを構築するための新しいディレクトリを作成する必要があります。
</p>
<pre caption="32bit chrootのためのディレクトリを作成する">
$ su root <i>あなたのrootパスワードを挿入</i>
# cd /mnt
# mkdir gentoo32
</pre>
<p>
そして、ダウンロードしたstageを移動します。
例のように、展開して設定します。
</p>
<pre caption="stage3からインストールする">
# cd /mnt/gentoo32
# tar -xvjpf /home/user/downloads/stage3-athlon-xp-2005.0.tar.bz2
# cp -L /etc/resolv.conf /mnt/gentoo32/etc/
# cp -L /etc/passwd /mnt/gentoo32/etc/
</pre>
<p>
これでセットアップ用のchrootの準備が出来ました。
次の章を読んでセットアップ方法に関して学んでください。
</p>
</body>
</subsection>
</section>

<section>
<title>セットアップ</title>
<subsection>
<title>新しい32bit chrootのための設定を行う</title>
<body>
<p>
もし、ここまですべてうまくいっていれば、新しい32bit chrootの設定が出来るようになり、このchrootのインストールも完了です。
</p>
<p>
次のステップは新しい<c>/mnt/gentoo32/etc/make.conf</c>を設定します。
</p>
<pre caption="新しいmake.confを設定する">
CFLAGS="-O2 -march=athlon-xp -msse2 -pipe -fomit-frame-pointer"
CHOST="i686-pc-linux-gnu"
CXXFLAGS="${CFLAGS}"
MAKEOPTS="-j2"
</pre>
<p>
複数の仮想のファイルシステムをマウントします。
</p>
<pre caption="仮のファイルシステムのマウント">
# mount -o bind /dev /mnt/gentoo32/dev
# mount -o bind /dev/pts /mnt/gentoo32/dev/pts
# mount -o bind /dev/shm /mnt/gentoo32/dev/shm
# mount -o bind /proc /mnt/gentoo32/proc
# mount -o bind /proc/bus/usb /mnt/gentoo32/proc/bus/usb
# mount -o bind /sys /mnt/gentoo32/sys
</pre>
<p>
これであなたの64bitシステムには、だいたい使用可能な本当の32bit chrootがインストールされました。
次に、あなたのchrootに64bitシステムにあるportageからリンクを作成する必要があります。
この方法で、たくさんのデータを複製する代わりに一つのインストールされたシステムをアップデートするだけになります。
</p>
<pre caption="32bit chrootの中に/usr/portageをリンクする">
# mkdir -p /mnt/gentoo32/usr/portage/
# mount -o bind /usr/portage /mnt/gentoo32/usr/portage/
</pre>
<note>
emerge syncを実行して、partageをアップデートするたびに、32bit chrootのportageもアップデートされます。
</note>
<p>
もし、Xを使用する32bitアプリケーションを実行したい場合、/tmpもマウントする必要があります。
</p>
<pre caption="GUIがあるアプリケーションのために/tmpをマウントする">
# mount -o bind /tmp /mnt/gentoo32/tmp
</pre>
<p>
これで、chrootの中へ切り替わる準備が出来ました。
</p>
<pre caption="chrootの中へ切り替わる">
<i>(linux32をすでにインストールしていない場合にだけ実行してください</i>
# emerge linux32
# linux32 chroot /mnt/gentoo32 /bin/bash
<i>(i686設定になっていることを確認してください)</i>
# uname -m
Linux mysystem 2.6.12-gentoo-r1 #1 Mon Jun 27 02:41:55 GMT 2005 i686 AMD Athlon(tm) 64 Processor 3500+ AuthenticAMD GNU/Linux
</pre>
<warn>
CHOSTの値を変更するために<c>linux32</c>ユーティリティは必要です。
もし、あなたが忘れてしまったなら、ほぼ間違いなくchroot内環境ではコンパイルすることは出来ないでしょう。
</warn>
<p>
これで、新しい32bit chrootはアップデートされる準備が出来ました。
次の手順でアップデートしてください。
</p>
<pre caption="新しい32bit chrootをアップデートする">
# source /etc/profile
# env-update
# emerge -au world
</pre>
<p>
この後は、基本的に32bit chrootの設定を完了したものとして説明します。
もうすこし便利にするために、われわれは64bitシステムに新しいファイルを設定して起動時に32bit chrootが有効になるようにします。
</p>
<pre caption="/etc/init.dに新しいファイルを作成する">
# nano -w /etc/init.d/gentoo32
#!/sbin/runscript

depend() {
   need localmount
   need bootmisc
}

start() {
    ebegin "Mounting 32bits chroot dirs"
    mount -o bind /dev /mnt/gentoo32/dev >/dev/null &amp;
    mount -o bind /dev/pts /mnt/gentoo32/dev/pts >/dev/null &amp;
    mount -o bind /dev/shm /mnt/gentoo32/dev/shm >/dev/null &amp;
    mount -o bind /proc /mnt/gentoo32/proc >/dev/null &amp;
    mount -o bind /proc/bus/usb /mnt/gentoo32/proc/bus/usb >/dev/null &amp;
    mount -o bind /sys /mnt/gentoo32/sys >/dev/null &amp;
    mount -o bind /tmp /mnt/gentoo32/tmp >/dev/null &amp;
    mount -o bind /usr/portage /mnt/gentoo32/usr/portage/ >/dev/null &amp;
    eend $? "An error occured while attempting to mount 32bit chroot directories"
    ebegin "Copying 32bits chroot files"
    cp -pf /etc/resolv.conf /mnt/gentoo32/etc >/dev/null &amp;
    cp -pf /etc/passwd /mnt/gentoo32/etc >/dev/null &amp;
    cp -pf /etc/shadow /mnt/gentoo32/etc >/dev/null &amp;
    cp -pf /etc/group /mnt/gentoo32/etc >/dev/null &amp;
    cp -pf /etc/gshadow /mnt/gentoo32/etc >/dev/null &amp;
    cp -pf /etc/hosts /mnt/gentoo32/etc > /dev/null &amp;
    cp -Ppf /etc/localtime /mnt/gentoo32/etc >/dev/null &amp;
    eend $? "An error occured while attempting to copy 32 bits chroot files."
}

stop() {
    ebegin "Unmounting 32bits chroot dirs"
    umount -f /mnt/gentoo32/dev/pts >/dev/null &amp;
    umount -f /mnt/gentoo32/dev/shm >/dev/null &amp;
    umount -f /mnt/gentoo32/dev >/dev/null &amp;
    umount -f /mnt/gentoo32/proc/bus/usb >/dev/null &amp;
    umount -f /mnt/gentoo32/proc >/dev/null &amp;
    umount -f /mnt/gentoo32/sys >/dev/null &amp;
    umount -f /mnt/gentoo32/tmp >/dev/null &amp;
    umount -f /mnt/gentoo32/usr/portage/ >/dev/null &amp;
    eend $? "An error occured while attempting to unmount 32bits chroot directories"
}
</pre>
<p>
これで、<c>rc-update add gentoo32 default</c>を実行するだけで、起動時に実行されます。
</p>
<p>
chroot環境に切り替えたい時はいつも、<c>linux32 chroot /mnt/gentoo32 /bin/bash</c>コマンドを実行するだけでかまいません。
</p>
<p>
これで、新しいアプリケーションをインストールするための32bit chrootが出来ました。
</p>
</body>
</subsection>
</section>

<section>
<title>アプリケーション</title>
<subsection>
<title>chrootに新しいアプリケーションをインストールする</title>
<body>
<p>
これで、あなたは、すべての32bitモードでのアプリケーションをインストールすることが出来る十分に機能している32bit chrootを持っています。
あなたの32bit chrootにどうやって新しいパッケージをインストールできるか見てみましょう。
</p>
<pre caption="chroot内にfooをインストールする">
# linux32 chroot /mnt/gentoo32 /bin/bash
# source /etc/profile
# env-update
# emerge foo
</pre>
<note>
chroot内に切り替わったら常に、<c>source /etc/profile</c>と<c>env-update</c>を実行することを覚えておいてください。
</note>
<p>
これで32bit chrootに新しいパッケージをインストールしました。
もし、新しいパッケージを実行したいなら、chroot内で実行する必要があります。
もし、Xアプリケーションを実行したいなら、最適なソリューションは<c>xhost</c>トリックを使用して実行します。
Xアプリケーションを実行する場合は常に、このコマンドを64bit環境で実行してください。
</p>
<pre caption="Xhostトリック">
# xhost local:localhost
</pre>
<p>
この後に、chroot内に再び入り、32bit chroot内で構築したすべてのXアプリケーションを実行することが出来るはずです。
</p>
</body>
</subsection>
</section>

<section>
<title>結論</title>
<subsection>
<title>このガイドの結論</title>
<body>
<p>
このchrootで、多くのx86アーキテクチャにしかないパッケージをインストールすることが出来ます。
<c>OpenOffice</c>のような、いくつかのアプリケーションは、Gentoo/AMD64向けのバイナリを使用してインストールすることも出来ます。
いくつかの<c>MPlayer</c>のコーデックは、この32bit chrootが必要で、このchrootで、<c>win32codecs</c>をインストールすることが出来ます。
</p>
</body>
</subsection>
</section>

</sections>
