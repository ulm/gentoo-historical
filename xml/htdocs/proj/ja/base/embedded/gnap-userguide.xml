<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">
<guide>
<title>Gentoo Network APpliance User Guide</title>
<author title="Author">
  <mail link="koon@gentoo.org">Koon</mail>
</author>
<author title="翻訳者">
  <mail link="masatsugu@fujinaka.info">藤中 正次</mail>
</author>

<abstract>
この文書は、GNAPとはなにか、どのように構築するか、そしてどうやって使うかを説明します。
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->
<license/>

<version>1.5</version>
<date>April 6, 2005</date>
<!-- Original revision: 1.5 -->

<chapter>
<title>なぜGNAP?</title>
<section>
<title>名称</title>
<body>

<p>
GNAPとは、Gentoo Network APplianceの頭字語です。
</p>

</body>
</section>
<section>
<title>その必要性</title>
<body>

<p>
GNAPは、完全なインストールをする必要のない内部ルータやファイヤウォールなど、古いPCをベースにしたネットワーク装置を立ち上げる必要性から生まれました。
わたしは、壊れそうな部品を載せた何台もの古いPCを持っており、故障した場合は簡単に交換できるようにしたいのです。
経験上、設定済みの取り外し可能なメディアが一番柔軟性がある方法です。
PCが故障したときは、その設定済みのメディアを別の装置に載せるだけでいいのです。
</p>

<p>
わたしはFDへのインストールを基本としたファイアウォール機能を持つ<uri link="http://leaf.sourceforge.net/mod.php?mod=userpage&amp;menu=910&amp;page_id=36">LEAF Bering-uClibc</uri>から使い始めましたが、メディアの脆さ、フロッピーの自動作成の難しさ、拡張性のなさといった問題ですぐに私の中の評価は下がりました。
わたしはウェブインタフェースでISOイメージが自動生成可能な<uri link="http://leaf.sourceforge.net/doc/guide/bubooting.html#id2572755">CDへのインストールに設定された</uri>LEAF Bering-uClibcに切り替えました。
これは、ほとんどの問題を解決しましたが、拡張性に問題が残りましたし、ウェブアプリをメンテするとという作業が悪夢になりつつありました。
</p>

<p>
わたしは、ようやく<uri link="http://www.gentoo.org/proj/en/releng/catalyst/">Gentoo Catalyst</uri>を活用することに決めました。
Gentoo CatalystはカスタムLiveCDを作成することができ、拡張性の問題と標準的でない保守作業の両方の問題を解決することができます。
考え方としては、一度作成したら何処でも使用可能な一般的な最小限のLiveCDコアを作成し、装置の用途に応じてカスタマイズした特別な設定で上書きをしたCDを作成することです。
これでCD作成を簡単にして、特別なLiveCDをカスタマイズするための、すべてのCatalyst手順を実行する必要がありません。
</p>

</body>
</section>
</chapter>
<chapter>
<title>GNAPを使ってカスタムネットワーク装置LiveCDを作成する方法</title>
<section>
<title>要件</title>
<body>

<p>
<uri link="http://dev.gentoo.org/~koon/gnap/gnap-tools-current.tar.bz2">GNAP Tools</uri>と<uri link="http://dev.gentoo.org/~koon/gnap/gnap-core-current.tar">GNAP Core tarball</uri>、そしてapp-cdr/cdrtoolsパッケージが必要なだけです。
カスタムGNAP LiveCDを作成するためにrootである必要はありません。
</p>

</body>
</section>

<section>
<title>どのように動作するのか?</title>
<body>

<p>
gnap_overlayスクリプトはGNAPコアtarballと一つかそれ以上の上書き用のソース(ディレクトリかconfletファイル)を使用して、ブータブルLiveCD ISOファイルか取り外し可能なディスクデバイスにブータブルファイルシステムを作成します。
</p>

<note>
訳注: 後で説明が出てきますが、confletはディレクトリを含むtar.bz2ファイルのことです。
</note>

<figure link="gnap_overlay.png" short="gnap_overlayの考え方"
        caption="gnap_overlayがどのようにして動作するか"/>

</body>
</section>
<section>
<title>overlay.confファイル</title>
<body>

<p>
overlay.confファイルは一般的なカスタマイズオプションを設定します。
overlay.confは、上書きソース(etc/overlay.confとして)に必ず用意するか、<c>-c</c>パラメータで直接指定します。
このファイルのなかで、ローカライゼーションとカスタムLiveCD上で、どの機能を有効にするか決定します。
</p>

<table>
<tr>
 <th>オプション</th>
 <th>値</th>
 <th>Default</th>
</tr>
<tr>
 <ti>TIMEZONE</ti>
 <ti><uri link="http://leaf.sourceforge.net/doc/guide/buci-tz.html">uclibc準拠 timezone code</uri></ti> 
 <ti>empty (UTC)</ti>
</tr>
<tr>
 <ti>KEYMAP</ti>
 <ti>端末キーマップ値、例: <c>fr</c></ti>
 <ti><c>us</c></ti>
</tr>
<tr>
 <ti>NBCARDS</ti>
 <ti>起動させたい接続されたネットワークカードの数</ti>
 <ti><c>1</c></ti>
</tr>
<tr>
 <ti>IP_RELAY</ti>
 <ti>IPリレーを起動時に有効にするか?</ti>
 <ti><c>no</c></ti>
</tr>
<tr>
 <ti>NET_CONFIG</ti>
 <ti>ネットワークはファイルにて設定されているか、それともDHCPか? 例: <c>dhcp</c></ti>
 <ti><c>static</c></ti>
</tr>
<tr>
 <ti>USE_PPPOE</ti>
 <ti><c>yes</c>設定で起動時にrp-ppoeデーモンを起動する。</ti>
 <ti><c>no</c> (起動しない)</ti>
</tr>
<tr>
 <ti>USE_SSH</ti>
 <ti><c>yes</c>設定で起動時にOpenSSHデーモンを起動する。 鍵が生成されていなければ、起動時に生成されます。</ti>
 <ti><c>no</c> (起動しない)</ti>
</tr>
<tr>
 <ti>USE_FW</ti>
 <ti><c>yes</c>設定で起動時にファイアウォールスクリプトを起動する。
     FW_TYPEオプションをみてください。 
     defaultでないオプションを設定するには<path>etc/shorewall</path>か<path>etc/firehol</path>ディレクトリに上書きファイルをおいてください。
</ti>
 <ti><c>no</c> (起動しない)</ti>
</tr>
<tr>
 <ti>FW_TYPE</ti>
 <ti>あなたが使用したいファイアウォールの種類によって<c>shorewall</c>か<c>firehol</c>を設定してください。</ti>
 <ti><c>shorewall</c></ti>
</tr>
<tr>
 <ti>USE_TC</ti>
 <ti><c>yes</c>を設定して起動時にトラフィックコントロールのスクリプトを起動する。
     TC_TYPEオプションをみてください。 使用する設定ファイルを<path>etc/cbqinit</path>か<path>etc/htbinit</path>に上書きしてください。
 </ti>
 <ti><c>no</c> (起動しない)</ti>
</tr>
<tr>
 <ti>TC_TYPE</ti>
 <ti>あなたが使用するトラフィックコントロールの種類によって<c>cbqinit</c>か<c>htbinit</c>を設定してくださ。
 </ti>
 <ti><c>cbqinit</c></ti>
</tr>
<tr>
 <ti>USE_VPN</ti>
 <ti><c>yes</c>を設定して起動時にOpenVPNデーモンを起動します。
     使用するOpenVPN設定ファイルを<path>etc/openvpn</path>に上書きしてください。
 </ti>
 <ti><c>no</c> (起動しない)</ti>
</tr>
<tr>
 <ti>USE_DNSDHCP</ti>
 <ti><c>yes</c>を設定して起動時にDNSMasqデーモンを起動します。
     使用するDNSMasq設定ファイルを<path>etc/dnsmasq.conf</path>に上書きしてください。
 </ti>
 <ti><c>no</c> (起動しない)</ti>
</tr>
<tr>
 <ti>USE_HTTP</ti>
 <ti><c>yes</c>を設定して起動時にBoaデーモンを起動します。
     使用するBoa設定ファイルを<path>etc/boa</path>ディレクトリに上書きしてください。
 </ti>
 <ti><c>no</c> (起動しない)</ti>
</tr>
<tr>
 <ti>NTPSERVER</ti>
 <ti>時刻同期先のNTPサーバの名前</ti>
 <ti>empty (NTPを使って時刻同期を行わない)</ti>
</tr>
</table>
</body>
</section>
<section>
<title>オーバーレイソース</title>
<body>

<p>
バージョン1.3から、複数の上書きソースを指定することが可能になりました(<c>-o</c>オプション)。
上書きソースは、ディレクトリもしくはディレクトリを含むtar.bz2ファイル(confletと呼びます)のどちらかです。
上書きディレクトリとconfletは起動直後のLiveCDルートファイルシステムのdefaultファイルを置き換えるファイルを含んでいます。
</p>

<p>
主に置き換えられるファイルには、ホストネームを設定する<path>etc/conf.d/hostname</path>、ルートパスワードを設定する<path>etc/shadow</path>やネットワーク情報を設定する<path>etc/conf.d/net</path>が含まれます。
</p>

<note>
GNAPツールの<path>examples/</path>サブディレクトリには、様々な目的のための典型的な上書きディレクトリとconflet例を見つけることができます。
</note>

<note>
GNAP上書きスクリプトはCVSサブディレクトリを無視します。 
これは必要のないものをGNAPシステムに取り入れることなくあなたの上書きファイルをCVSを使って簡単にバージョン管理を行うためです。
</note>

</body>
</section>
<section>
<title>生成とCDの作成</title>
<body>

<p>
gnap-toolsパッケージの<c>gnap_overlay</c>スクリプトを使ってください。
たとえば、<path>gnap-core-1.3.tar</path> GNAPコアと<path>overlays/myfirewall</path>上書きディレクトリを使って<path>myfirewall.iso</path> LiveCDを作成します。
</p>

<pre caption="gnap_overlay使用例">
$ ./gnap_overlay -i myfirewall.iso -g gnap-core-1.3.tar -o overlays/myfirewall
</pre>

<note>
この例では、<path>etc/overlay.conf</path>が<path>overlays/myfirewall</path>ディレクトリにあるべきです。
または、<c>-c</c>オプションを使って、特定のoverlay.confを指定してください。
</note>

<p>
次にISOファイルをメディア(CD-RWを推奨します)に記録しテストます。
</p>

</body>
</section>
<section>
<title>生成、ハードディスクやCFに記録する</title>
<body>

<p>
gnap-toolsパッケージの<c>gnap_overlay</c>スクリプトは、GNAP設定が書き込まれた起動可能なハードディスクを作成するのにも使われます。
ハードディスクだけでなく、DiskOnModuleやCFカードにも書き込むことが可能です。
まず、対象のメディアが正常に設定されている必要があります。
Master Boot Record(MBR)をインストールする必要があります。
</p>

<pre caption="/dev/sdaデバイスにMBRを作成する">
# dd if=mbr/mbr.bin of=/dev/sda bs=512 count=1
</pre>

<p>
fdiskを使用して有効なパーティションをデバイス上に作成する必要があります。
そして、<c>-d</c>オプションを使用してgnap_overlayを呼び出してディスクに書き込みます(rootである必要があります)。
デバイスを書き込むホスト上での、書き込み先のパーティション名を知っておく必要があります。
またデバイス上でブートする(<c>-r</c>)GNAPシステムから見えるパーティション名も知っておく必要があります。
たとえば、CFカードは/dev/sdb1ですがSoekrisシステムでは/dev/hda1になります。
</p>

<pre caption="GNAPをディスクに書き込む">
# ./gnap_overlay -d /dev/sda1 -g gnap-core-1.3.tar -o overlays/myfirewall -r hda1 -m
</pre>

<note>
複数の読み込みアクセスによるデバイスの疲弊をさけるために<c>-m</c>を使ってGNAPに起動後に、squashfsファイルシステムをキャッシュすることも可能です。
</note>

</body>
</section>
</chapter>
<chapter>
<title>GNAPコアをどうやって再構築するか</title>

<section>
<body>

<warn>
GNAPコアの内容を変更(または最近のPortageスナップショットで標準コアを再構築)したいと考える上級者のみが本章を読むべきでしょう。
コアの再構築は時間がかかる上に最近追加されたパッケージのバージョンによって引き起こされた問題に対応する必要が出てきます。
</warn>

</body>
</section>
<section>
<title>前提条件</title>
<body>

<p>
GNAPコアを構築するために、root権限が必要です。 これはCatalystを使用するためです。
次のパッケージもインストールされている必要があります。
</p>

<ul>
<li>dev-util/catalyst (1.1.8でテストされています)</li>
<li>sys-fs/squashfs-tools (2.0でテストされています)</li>
</ul>

<p>
最後にシードステージとしてuclibc/hardened stage2 tarballが必要です。
現在は、<path>stage2-x86-uclibc-hardened-2004.3.tar.bz2</path>となっており、<uri link="http://gentoo.osuosl.org/experimental/x86/embedded/stages/">ここで</uri>ダウンロード可能です。
</p>

</body>
</section>
<section>
<title>最初からGNAPコアを構築する</title>
<body>

<p>
現在のバージョンのGNAPに使われる<c>gnap_make</c>ビルドスクリプト、Catalyst設定ファイル、Portage設定、カーネル設定が<uri link="http://dev.gentoo.org/~koon/gnap/gnap-sources-current.tar.bz2">GNAP Sources</uri>に含まれています。
</p>

<p>
<c>-s</c>パラメータを使用してstage2 tarballシード指定し、<c>-e</c>パラメータでスペックディレクトリのフルパスを指定し、<c>gnap_make</c>を走らせてCatalyst stageとtarballの生成を行います(<c>-t all</c>)。
</p>

<pre caption="新しいGNAPコアtarballを1ステップで構築する">
# ./gnap_make -t all -s ../stage2-x86-uclibc-hardened-2004.3.tar.bz2 -e /root/gnap-1.5/specs
</pre>

<p>
これを終了するためには、<e>非常に</e>長い時間がかかります。
現在の日付がバージョンになっているGNAPコアtarballができあがるはずです。
</p>

<p>
もし以前に構築されたPortage snapshot(か公式ダウンロード版)を再利用したい場合は、portage-YYYYMMDD.tar.bz2ファイルを<path>/var/tmp/catalyst/snapshots</path>サブディレクトリにコピーして、<c>-p</c>オプションを指定します。
</p>

<pre caption="20040101 snapshotから構築する">
# ./gnap_make -t all -s ../stage2-x86-uclibc-hardened-2004.3.tar.bz2 -p 20040401 -e /root/gnap-1.5/specs
</pre>
<p>
もし失敗した場合や最後の段階を再度実行したい場合は、どのCatalystステージを呼び出すかgnap_makeで指定したいはずです。。
これは、次のパラメータを使用することで可能です。
再利用するGNAPタイムスタンプバージョン(<c>-v</c>)、stage名(<c>snapshot</c>, <c>stage3</c>, <c>livecd-stage1</c>,<c>livecd-stage2</c>)もしくは対象となる特別な(最終的にGNAPコアtarballになる)<c>tarball</c>(<c>-t</c>)。
</p>

<pre caption="構築済み20041008 Portage snapshotを使用して二つの20041012 GNAPビルドを呼び出す">
# ./gnap_make -p 20041008 -v 20041012 -t livecd-stage2 -t tarball -e /root/gnap-1.5/specs
</pre>

</body>
</section>
<section>
<title>GNAPコアをカスタマイズする</title>
<body>

<p>
GNAPコアのカーネルソースを変更したくなるかもしれません(設定済みのソースがPortageにない場合は変更は必須になるでしょう)。
<path>specs/common.conf</path>ファイルを編集して正しいソース名を指定し、<path>specs/kernel.config</path>のカーネル設定ファイルを変更して使用してください。
</p>

<p>
<path>specs/common.conf</path>ファイルを編集することで、GNAPコアを構築するために使われているsubarchとprofileを変更することも可能です。
デフォルトでは、<e>x86</e> subarchと<e>uclibc/x86/hardened</e> profileが使われています。
</p>

<p>
新しいソフトウェアパッケージを追加するときは、<path>specs/packages.conf</path>ファイルに追加してください。
defaultで新しいデーモンを開始するには、<path>specs/livecd.conf</path>ファイルの<c>livecd/rcadd</c>に追加してください。
</p>

</body>
</section>
</chapter>
</guide>