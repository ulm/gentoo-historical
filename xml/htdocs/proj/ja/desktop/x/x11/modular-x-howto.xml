<?xml version="1.0" encoding="UTF-8"?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/ja/desktop/x/x11/modular-x-howto.xml,v 1.8 2006/09/09 16:02:27 idani Exp $ -->

<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<guide link="/proj/ja/desktop/x/x11/modular-x-howto.xml" lang="ja">
<title>モジュラー化されたXへの移行手引き</title>

<author title="Author">
	<mail link="dberkholz@gentoo.org">Donnie Berkholz</mail>
</author>
<author title="Author">
	<mail link="joshuabaergen@gentoo.org">Joshua Baergen</mail>
</author>
<author title="翻訳">
  <mail link="igarashi@gentoo.gr.jp">五十嵐 正尚</mail>
</author>
<author title="翻訳">
  <mail link="tma@gside.org">Takeshi Matsuba</mail>
</author>
<author title="翻訳">
  <mail link="shindo@gentoo.gr.jp">Shindo Naoaki</mail>
</author>

<abstract>
このガイドはモジュラー化されたX.Orgに移行する方法を示します。
</abstract>

<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/2.5 -->
<license/>

<version>1.1.1</version>
<date>2006-01-02</date>

<!-- Original revision: 1.55 -->

<chapter>
<title>はじめに</title>

<section>
<title>なぜモジュラー化なの?</title>
<body>

<p>
1つでよかった簡単なxorg-x11パッケージが、一体どうしておよそ300の別々のものに切り替わってしまったのかと不思議に思うかもしれません。
そして、きっと納得するでしょう。=)
これはGentooが上流のX.Orgと関係なく行っていることではありません。
X.Orgはすべてのパッケージを個別のリリースに分割しており、Gentooはそれに従っただけです。
</p>

<p>
ビルドシステムの変更と分割の根拠には、少なくとも以下の3つがあります。
</p>
<ul>
<li>
新規の開発者がXを習得するは極めて困難です。よって、たとえ気に入らなくても、より多くの人々が快適になるシステム、autotoolsへ移行しました。
</li>
<li>
移行にともなってautotoolsを使ってソースの分割が可能になり、そして開発者が扱いやすいようにもなります。
</li>
<li>
これまでは不必要なものも一緒になっており、しばしばバグ修正することができなくなっていました。
修正できたとしても、XOrgのすべてを再構築する必要がありました。
例えば、atiドライバのバグは、まったくそれをする理由がなくても、次のリリースまで6ヶ月待たなければいけないか、それを修正するがためにフォントを再構築する必要がありました。
</li>
</ul>

</body>
</section>
</chapter>

<chapter>
<title>モジュラー化Xへの移行</title>

<section>
<title>はじめに</title>
<body>

<p>
古いパッケージへの介入を防止するために、モジュラー化Xをインストールする前に、すべての古いxorg-x11のゴミを一掃します。
これはまったく重要なことではありませんが、円滑に移行がしやすくなります。
</p>
</body>
</section>

<section>
<title>第一段階: 古いXの一掃</title>
<body>

<p>
モジュラー化されたXが満足に動作しなかった場合や、バージョン6.xに戻りたい場合に備えて、
分割されていないxorg-x11のバックアップを作成します。
</p>
		
<pre caption="古いxorg-x11のバックアップ">
# <i>emerge gentoolkit</i>
# <i>quickpkg xorg-x11</i>
</pre>

<p>
インストール済みの分割されていない方を取り除いてください。
クラッシュやハード的なロックの危険性をさけるため、
X.orgをアンインストールするまえに、起動しているXセッションを停止したほうがよいでしょう。
</p>

<pre caption="分割されていないXorgのunmerge">
# <i>emerge -Ca xorg-x11 virtual/x11</i>
</pre>

<p>
<path>/usr/X11R6</path>が<path>/usr</path>へのシンボリックリンクでないなら、それを削除してゼロから始めてください。
ですが、まずそこにインストールしてあるすべてのパッケージのリストを記録してください。<c>equery</c>は<c>gentoolkit</c>パッケージにあります。
</p>

<pre caption="パッケージリストの作成">
# <i>if [[ ! -L /usr/X11R6 ]]; \
	then equery belongs /usr/X11R6 &gt; ~/usr-x11r6-packages \
	&amp;&amp; rm -rf /usr/X11R6; fi</i>
</pre>

<p>
<path>/usr/lib/X11/xkb</path>
(64bitユーザの場合は<path>/usr/lib64/X11/xkb</path>)
が存在する場合には、最後に削除してください。
削除は<c>xkeyborad-config</c>パッケージのインストール要件です。
</p>

</body>
</section>

<section>
<title>第二段階: モジュラー化Xのインストール</title>
<body>

<p>
stable環境で動かしていて、希望のモジュラーXのバージョンが使用しているアーキテクチャ上でまだstableになっていない場合、
必要なパッケージを<path>/etc/portage/package.keywords</path>に加えてください。
<uri link="/proj/en/desktop/x/x11/modular-x-packages.txt">パッケージリスト</uri>をダウンロードし、好みのエディタで開いてください。
そして、モジュラー化されたXの全てのマスクされているパッケージを<path>package.keywords</path>にコピー・ペーストしてください。
意味がわからないなら、<uri link="/doc/en/handbook/handbook-x86.xml?part=3&amp;chap=3">マスクに関するハンドブックのセクション</uri><uri link="/doc/ja/handbook/handbook-x86.xml?part=3&amp;chap=3">(日本語訳)</uri>を読んでください。
</p>		


<note>
もしバイナリドライバを使っている、もしくはバージョン7.0ではなく7.1を使う何らか理由がないのであれば、
上記の作業は行わないでください。バイナリドライバはまだ、X.Org 7.1と互換性がありません。
</note>


<table>
<tr>
	<th>stable環境のユーザがpackage.keywordsに必要なその他パッケージ</th>
</tr>
<tr>
	<ti>&gt;=sys-apps/portage-2.1_pre4</ti>
</tr>
<tr>
	<ti>=sys-apps/man-1.6b-r2</ti>
</tr>
<tr>
	<ti>app-admin/eselect-opengl</ti>
</tr>
<tr>
	<ti>&gt;=app-admin/eselect-1.0_rc1</ti>
</tr>
<tr>
	<ti>media-video/nvidia-kernel</ti>
</tr>
<tr>
	<ti>media-video/nvidia-glx</ti>
</tr>
</table>

<p>
ダイレクトレンダリングを使用するには、<c>dri</c>のUSEフラグを有効にしてください。
デフォルトでは有効になっているはずです。
</p>

<p>
次に、どのドライバのインストールが必要か判定してください。
使用環境の入力装置とvideoハードウェアによってさまざまです。
すでに動作している<path>/etc/X11/xorg.conf</path>があるなら、どのドライバが必要かを把握するために以下のコマンドを実行してください。
</p>

<pre caption="どのドライバが必要かを調査">
# <i>grep Driver /etc/X11/xorg.conf</i>
		Driver      "kbd"
		Driver      "mouse"
		Driver      "radeon"
</pre>

<pre caption="利用可能なドライバの確認">
# <i>emerge --verbose --pretend xorg-x11</i>
[ebuild   R   ] x11-base/xorg-x11-7.0-r1  USE="-xprint" INPUT_DEVICES="keyboard
mouse -acecad -aiptek -calcomp -citron -digitaledge -dmc -dynapro -elo2300
-elographics -evdev -fpit -hyperpen -jamstudio -joystick -magellan -magictouch
-microtouch -mutouch -palmax -penmount -spaceorb -summa -synaptics% -tek4957
-ur98 -vmmouse -void" VIDEO_CARDS="i128 mga radeon savage -apm -ark -chips
-cirrus -cyrix -dummy -fbdev -fglrx% -glint -i740 -i810 -imstt -mach64 -neomagic
-newport -nsc -nv -nvidia% -r128 -rendition -s3 -s3virge -siliconmotion -sis
-sisusb -sunbw2 -suncg14 -suncg3 -suncg6 -sunffb -sunleo -suntcx -tdfx -tga
-trident -tseng -v4l -vesa -vga -via -vmware -voodoo" 0 kB
</pre>

<p>
<path>/etc/make.conf</path>に必要なものをINPUT_DEVICESとVIDEO_CARDSに設定してください。
上記の例での最小限の設定は、INPUT_DEVICES="<c>keyboard mouse</c>" VIDEO_CARDS="<c>radeon</c>"です。
これらの変数のどちらか一方を設定しないと、xorg-x11はその種類のドライバすべてを取り込みます。
予備のドライバとして、<c>vesa</c>と<c>fbdev</c>をVIDEO_CARDSに追加してください。
</p>

<p>
ここで以下のようにしてmetabuildをインストールしてください。
これはサーバとXのデスクトップ機能を提供する主要なアプリケーションをインストールします。
</p>

<pre caption="モジュール化metabuildのインストール">
# <i>emerge xorg-x11</i>
# <i>etc-update</i>
# <i>revdep-rebuild</i>
# <i>[[ -e ~/usr-x11r6-packages ]] &amp;&amp; emerge  $(&lt;~/usr-x11r6-packages)</i>
</pre>

<note>
最小構成が必要なだけなら<c>xorg-server</c>のみをインストールしてください。
これにより、Xサーバを起動するのに必要なものだけに抑えることができます。
</note>

<p>
xorg-x11のemergeでは、より最小構成にしようとするので、xcursor-themesのようなものはデフォルトではインストールされません。一つの例としては、カーソル設定をwhiteglassやredglassやhandheldsに変更していたなら、xcursor-themesが必要でしょう。
gentooを使うなら、gentoo-blueやgentoo-silberのカーソルテーマがある、gentoo-xcursorsをインストールしましょう。
</p>

<note>
モジュラー化でインストールすると、いくつかのvncアプリもnvidia-glxやwacomのような外部ドライバも、<path>/usr/lib/xorg/modules</path>の代わりに<path>/usr/lib/modules</path>に何かをインストールしていると、動作しないでしょう。
これらのうちの多くは、インストール処理にモジュラー化Xの検知処理が追加されています。
したがってモジュラー化Xをインストールした後に再度mergeされる必要があります。
加えて、多くの外部ドライバには<c>dlloader</c> USEフラグがあり、
有効にしドライバをリビルドする必要があります。
</note>
</body>
</section>
</chapter>

<chapter>
<title>注意事項/よくある問題</title>
<section>
<title>'emerge -u world'をするとxorg-x11 6.x やvirtual/x11をインストールしようとします</title>
<body>

<p>
まだportageツリーがモジュラー化の依存関係に修正されていないためです。

<uri link="porting-modular-x-howto.xml">Portingto Modular X HowTo</uri>を読んで、
各パッケージのメンテナにパッチを添えたバグを提出することでポーティング作業を手伝うことができます。
メンテナはパッケージと同じディレクトリにある<path>metadata.xml</path>に記述されています。<c>herdstat</c>パッケージでメンテナをより早く検索できます。
</p>

<p>
特にstable環境以外でモジュラー化Xを動かしている場合、これにまつわる問題に遭遇するかもしれません。
多くのパッケージは、~archバージョンでしかモジュラー化Xとともに動作しません。
よって、<path>/etc/portage/package.keywords</path>に別途必要なパッケージを追加する必要があるでしょう。
</p>

</body>
</section>
<section>
<title>すべてのUSEフラグはどうなりましたか?</title>
<body>

<p>
xorg-x11-6.8系での多くのUSEフラグは、7.0では廃止されたか移動になりました。
いくつかの新しいUSEフラグが以下の理由により登場しました。
</p>

<table>
<tr>
	<th>USEフラグ</th>
	<th>7.0でどうなったか</th>
</tr>
<tr>
	<ti>3dfx</ti>
	<ti>7.0では、xorg-x11 metabuildからglide-v3を取り込みます</ti>
</tr>
<tr>
	<ti>3dnow、mmx、sse</ti>
	<ti>実行時のチェックがあるので、デフォルトでビルド時に有効にされています。</ti>
</tr>
<tr>
	<ti>bitmap-fonts、truetype-fonts、type1-fonts</ti>
	<ti>
		xorg-x11 metabuildはよく使用される小さなフォント集や必要なフォントを取り込みます。
		他のものはすべてmedia-fonts/に追加でインストールしてください。
	</ti>
</tr>
<tr>
	<ti>cjk</ti>
	<ti>
		font-misc-miscやfont-sony-miscでUSE=nlsを使用すると日本語JISX0201フォントを取得します。
		さらにはfont-jis-miscにあります。
		中国語フォントはfont-isas-miscにあります。
		韓国語フォントはfont-daewoo-miscにあります。
	</ti>
</tr>
<tr>
	<ti>dlloader</ti>
	<ti>7.0はデフォルトでdlloaderを使用し、elfloaderは動作しません。</ti>
</tr>
<tr>
	<ti>doc</ti>
	<ti>app-doc/xorg-docsに移動されました</ti>
</tr>
<tr>
	<ti>dmx</ti>
	<ti>USE=minimalでなければxorg-serverに組み込まれています</ti>
</tr>
<tr>
	<ti>font-server</ti>
	<ti>手動でxfsをインストールしてください。</ti>
</tr>
<tr>
	<ti>ipv6</ti>
	<ti>これを使う個々のパッケージに移動されました。必要ならグローバルにセットしてください。</ti>
</tr>
<tr>
	<ti>minimal</ti>
	<ti>
		同じ効果を得るには、xorg-x11ではなくxorg-serverをインストールしてください。
		Xdmx、Xvfd、Xnestをビルドしないためにはxorg-serverでUSE=minimalを使用してください。
		より最小構成なものが必要なら、x11-base/kdriveを調べてください。
	</ti>
</tr>
<tr>
	<ti>nls</ti>
	<ti>7.0では、USE=nlsはフォントの非ISO885901バージョンのすべてをインストールします。</ti>
</tr>
<tr>
	<ti>nocxx</ti>
	<ti>7.0ではまだ同等ではありません</ti>
</tr>
<tr>
	<ti>opengl</ti>
	<ti>
		xorg-serverと多くのドライバにダイレクトレンダリング機能を有効にする"dri"に名前が変更になりました。
		USE=driの有無にかかわらず、まだMesaによるソフトウェア3Dを使うべきです。
	</ti>
</tr>
<tr>
	<ti>pam</ti>
	<ti>xorg-serverやxdmのような、これを使用する個々のパッケージに移動されました</ti>
</tr>
<tr>
	<ti>sdk</ti>
	<ti>モジュラー化の結果として7.0はSDKをインストールしなければいけません。</ti>
</tr>
<tr>
	<ti>static</ti>
	<ti>
		ドライバが組み込まれることはないので、モジュラー化された状況では、たいていはそれほどスタティックサーバをビルドする意味がありません。
	</ti>
</tr>
<tr>
	<ti>xprint</ti>
	<ti>
		metabuildにlibXpが組み込まれています。
		他のアプリケーションではxprintサポート付でビルドされます。
		ほとんどの人はこれを有効にしようとは思わないでしょう。
	</ti>
</tr>
<tr>
	<ti>xv</ti>
	<ti>
		それほどサイズを節約しないし、これを期待するいくつかのパッケージで問題が起きるので、もうオプションではありません。
	</ti>
</tr>
</table>

</body>
</section>

<section>
<title>全ての設定ファイルはどうなりましたか?</title>
<body>

<p>
GentooのX.Org 6.8パッケージでは、すべての設定ファイルやスクリプトは、/etc/X11に配置されていました。
モジュラー化されたX.Orgでは、これらのファイルが配置される場所が変更されました。
設定ファイルはまだ/etc/X11内にありますが、スクリプトやデフォルトの設定は今、/usr/lib/X11 (または lib64)や/usr/share/X11内にあります。
</p>

<p>
設定の保護 (CONFIG_PROTECT)のため、おそらくX.Org 6.8からの全ての古い設定ファイルがまだ/etc/X11にあるでしょう。
それらは、場所を取るが役に立つように見えます。
</p>

<p>
これらのディレクトリがCONFIG_PROTECTから外れた後は、デフォルト設定に対する変更は、関係するファイルを/etc/X11にコピーし、適切な設定ファイルを更新することにより行われる事は重要です。
代わりに、推奨されませんが、新しい場所をCONFIG_PROTECTの対象にすることはできます。
以下に二つの例を示します。
</p>

<pre caption="XDMの初期化をカスタマイズする">
<comment>
最初にファイルXsetup_0を/etcにコピーしCONFIG_PROTECTの対象にします。
</comment>
# <i>cp -a /usr/lib/X11/xdm/Xsetup_0 /etc/X11/xdm/</i>
<comment>
ファイルを編集し、望みのカスタマイズを行ってください。
</comment>
<comment>
xdm-configを編集し、パスがこのファイルを指すようアップデートしてください。
</comment>
# <i>nano /etc/X11/xdm/xdm-config</i>
<comment>
このファイルを編集して、
</comment>
	! The following three resources set up display :0 as the console.
	DisplayManager._0.setup:        /usr/lib/X11/xdm/Xsetup_0
	DisplayManager._0.startup:      /usr/lib/X11/xdm/GiveConsole
	DisplayManager._0.reset:        /usr/lib/X11/xdm/TakeConsole
<comment>
以下のようにします。
</comment>
	! The following three resources set up display :0 as the console.
	<i>DisplayManager._0.setup:        /etc/X11/xdm/Xsetup_0</i>
	DisplayManager._0.startup:      /usr/lib/X11/xdm/GiveConsole
	DisplayManager._0.reset:        /usr/lib/X11/xdm/TakeConsole
</pre>
<note>
amd64のmultilibシステムをno-symlinksプロファイル上で用いている場合、libをlib64へ変更する必要があります。
</note>

<pre caption="app-defaults/XTerm-colorをカスタマイズする">
<comment>
/etc/X11内の設定ファイルで、app-defaults のパスが定義されている場所がわからなかったので、
</comment>
<comment>
XTerm-colorへの変更を保護するために
</comment>
<comment>
/usr/share/X11/app-defaultsをCONFIG_PROTECTの対象にします。
</comment>
<comment>
/etc/make.confを編集します。
</comment>
# <i>nano /etc/make.conf</i>
<comment>
そして適切にCONFIG_PROTECTを設定します。
</comment>
	CONFIG_PROTECT="/usr/share/X11/app-defaults"
</pre>

</body>
</section>

<section>
<title>ドライバの問題</title>
<body>

<p>
以下の報告を受けています。
</p>

<ul>
	<li>Matroxカードでvesaドライバを使用すると固まります</li>
	<li>vgaドライバは、4分割されたおかしな画面になります。</li>
	<li>バイナリドライバがX.Org 7.1では動作しないことがしられています。しかし、7.0 では動作します。</li>
</ul>
</body>
</section>
<section>
<title>再度3Dアクセラレーション機能を有効にする</title>
<body>

<p>
ダイレクトレンダリング機能させるのに役立つデバッグ情報を見るには、以下のようにします。
</p>

<pre caption="デバッグ情報の取得">
# <i>grep -e EE -e WW /var/log/Xorg.0.log</i>
# <i>LIBGL_DEBUG=verbose glxinfo</i>
</pre>

</body>
</section>
<section>
<title>マウスのプロトコル自動検出</title>
<body>

<p>
マウスのためにxorg.conf<c>に"Protocol" "auto"</c>を設定している場合、それは動作しないでしょう。
ホイールを動作させるには<c>"Protocol" "ExplorerPS/2"</c>か<c>"IMPS/2"</c>を指定する必要があるでしょう。
</p>

</body>
</section>
<section>
<title>libbitmapかlibpcidataが見つからないことに関するエラーメッセージが表示されました</title>
<body>

<p>
<path>/etc/X11/xorg.conf</path>に<c>ModulePath</c>項目が存在しないことを確認してください。
</p>

</body>
</section>
<section>
<title>gdm/kdmが動作しません</title>
<body>

<p>
新規にインストールされたGentoo上にモジュラー化Xをインストールした場合は、<path>/usr/X11R6</path> -&gt; <path>/usr</path>のシンボリックリンクがないかもしれません。
<c>x11-base/xorg-x11</c>パッケージはemergeの処理中にシンボリックリンクの存在を確認します。
</p>

<p>
<path>/usr/X11R6</path>にインストールするパッケージを修正してバグを提出することで、<path>/usr/X11R6</path>以外の情報を得やすくなります。
そして、これらのパッケージを再インストールすることを忘れないで下さい。
</p>

<pre caption="/usr/X11R6にインストールされるパッケージ">
# <i>cat ~/usr-x11r6-packages</i>
# <i>emerge --pretend $(&lt; ~/usr-x11r6-packages )</i>
</pre>

</body>
</section>

<section>
<title>XKBが動作しません、VT(仮想端末)を切り替えることができません、など</title>
<body>

<ul>
	<li>
		多くのXKBレイアウトは、統合されるか消去されてあちこちに散らばりました。
		xorg.confの古いXkbLayout設定がどうなったかを確認するには<path>/usr/share/X11/xkb/symbols/</path>内を探してください。
		例えば、旧"us_intl"レイアウトを置き換えるには<c>"XkbLayout" "latin"</c>、<c>"XkbOptions"	"lv3:ralt_switch"</c>にします。
		旧"sk_qwerty"レイアウトを置き換えるには<c>"XkbLayout" "sk"</c>、<c>"XkbVariant"	"qwerty"</c>にします。
		もっと上級な例では、<c>"XkbLayout" "us,sk_qwerty"</c>の設定をしているかもしれません。
		それを動作させるには、新しい設定は<c>"XkbLayout" "us,sk"</c>になります。
		次のようなコンマには注意を必要とする役割があります: <c>"XkbVariant" ",qwerty"</c>。
		これはvariantを2つ目のレイアウトに適用させたい場合です。
	</li>
</ul>

<pre caption="XKBの変更を追跡する">
<comment>以下のメッセージがないか/var/log/Xorg.0.logをチェックしてください。</comment>
<comment>(WW) Couldn't load XKB keymap, falling back to pre-XKB keymap</comment>
<comment>このエラーがなければ、XKBはすでに動作しています。</comment>
# <i>grep Xkb /etc/X11/xorg.conf</i>
        Option "XkbModel"  "logibik"
        Option "XkbLayout"  "dvorak"
        Option "XkbOptions" "ctrl:swapcaps"
<comment>最初に、レイアウトで何が変更になったかを確認してください。symbols/pcディレクトリです。</comment>
# <i>cd /usr/share/X11/xkb/symbols/</i>
<comment>xkeyboard-configの代わりにxkbdataがインストールされているなら、サブディレクトリpc/に移動してください。</comment>
# <i>ls *dvorak*</i>
<comment>はい。何も表示されません。</comment>
<comment>多くの古いレイアウトはその国を示すキーマップに移動されました。</comment>
# <i>ls *us*</i>
us
<comment>ここで、xkb_symbols用のdvorakというvariantを確認します。</comment>
# <i>grep xkb_symbols.*dvorak us</i>
xkb_symbols "dvorak" {
<comment>これはxorg.confにOption "XkbLayout" "us"とOption "XkbVariant" "dvorak"が</comment>
<comment>必要であることを意味します。</comment>

<comment>しかし、setxkbmapでこれをテストしてみると、まだエラーになります。</comment>
# <i>setxkbmap -model logibik -layout us -variant dvorak -option "ctrl:swapcaps"</i>
<comment>たぶんモデルも変更になっています。</comment>
# <i>cd /usr/share/X11/xkb/rules/</i>
# <i>grep logibik xorg.lst</i>
<comment>そのモデルはなくなったので、何も表示されません。似ているものについてはどうだろう。</comment>
# <i>grep logi* xorg.lst</i>
  logiaccess      Logitech Access Keyboard
  logicdit        Logitech Cordless Desktop iTouch
  logicdp         Logitech Cordless Desktop Pro
  logicdpa        Logitech Cordless Desktop Pro (alternate option)
  logicdpa2       Logitech Cordless Desktop Pro (alternate option2)
  logicdo         Logitech Cordless Desktop Optical
  logicfn         Logitech Cordless Freedom/Desktop Navigator
  logicdn         Logitech Cordless Desktop Navigator
  logidak         Logitech Deluxe Access Keyboard
  logiitc         Logitech iTouch Cordless Keyboard (model Y-RB6)
  logiik          Logitech Internet Keyboard
  logiitc         Logitech iTouch Cordless Keyboard (model Y-RB6)
  logiik          Logitech Internet Keyboard
  logiink         Logitech Internet Navigator Keyboard
  logiultrax      Logitech Ultra-X Keyboard
<comment>よし、"logiik"モデルが近いようなので、setxkbmapで実際に試してみます。</comment>
# <i>setxkbmap -model logiik -layout us -variant dvorak -option "ctrl:swapcaps"</i>
<comment>動きました。よってXkbModelエントリをそのように変更します。</comment>
<comment>これでうまく動作します。</comment>
</pre>

</body>
</section>

<section>
<title>その他の問題</title>
<body>

<ul>
	<li>
		現在の<c>x11-base/xorg-x11</c>パッケージは、<path>/etc/X11/xorg.conf</path>からModulePathとRgbPathのすべての行が取り除かれています。
		それら両方のパスが以前のバージョンから変更になっているためです。
		これらの変更を行うために<c>etc-update</c>を必ず実行してください。
		何らかの理由により、これらが取り除かれていない場合は、自分で取り除いてください。
	</li>
</ul>

</body>
</section>
</chapter>
</guide>
