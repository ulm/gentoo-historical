<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">

<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/proj/ja/gdp/doc/doc-tipsntricks.xml,v 1.2 2005/06/20 13:36:01 idani Exp $ -->

<guide link="doc-tipsntricks.xml">
<title>ドキュメント開発のTips &amp; Tricks</title>
<author title="Author">
    <mail link="swift@gentoo.org">Sven Vermeulen</mail>
</author>
<author title="Editor">
    <mail link="neysx@gentoo.org">Xavier Neys</mail>
</author>
<author title="翻訳">
    <mail link="ikeda@cs.comp.kyutech.ac.jp">池田 健吾</mail>
</author>

<abstract>
Gentooドキュメント開発者の開発時間を短縮(あるいは、より延長:)するtips &amp; tricksです。
</abstract>

<license/>

<version>0.15</version>
<date>2005-04-08</date>
<!-- Original revision: 1.10 -->
<chapter>
<title>ローカル環境の設定</title>
<section>
<title>貢献者のためのローカル環境</title>
<body>

<p>
ドキュメント開発のためだけに、専用のディレクトリを作成してください。
例として<path>~/work/gentoo/doc</path>というディレクトリを作成します。
このディレクトリの中に、(最新の)英語ドキュメントを保持するためのサブディレクトリ(例えば<path>en/</path>)を作成します。
</p>

<p>
最新の英語ドキュメントのtarballをダウンロードしてください。
</p>

<pre caption="英語ドキュメントのダウンロード">
# <i>wget http://www.gentoo.org/dyn/doc-snapshots/docs-latest-en.tar.bz2</i>
</pre>

<p>
ドキュメントを<path>en/</path>に展開してください。
これであなたは英語ドキュメントの最新のスナップショットを手に入れました。


スナップショットを更新したい場合は、毎回tarballをダウンロードすることになりますが、<path>?passthru=1</path>をURLに追加してドキュメントを見ることもできます。

例えば、次のようにします。
</p>

<pre caption="英語ドキュメントの更新">
# <i>wget http://www.gentoo.org/doc/en/alsa-guide.xml?passthru=1 -O alsa-guide.xml</i>
</pre>

<p>
ドキュメントの翻訳作業を手助けしたい場合、
最新版の母国語ドキュメントを保持するディレクトリ(訳注：例えばja/)を作成してください。
</p>

<pre caption="母国語ドキュメントのスナップショットをダウンロード">
# <i>mkdir </i><comment>${LANG}</comment>
# <i>cd </i><comment>${LANG}</comment>
# <i>wget http://www.gentoo.org/dyn/doc-snapshots/docs-latest-</i><comment>${LANG}</comment><i>.tar.bz2</i>
# <i>tar xvjf docs-latest-*.tar.bz2</i>
</pre>

<p>
ドキュメントを更新したいときは必ずまず最初に、<path>${LANG}/</path>からルートディレクトリ(<path>~/work/gentoo/doc</path>)へドキュメントをコピーするようにしてください。
コピーしたバージョンを修正するようにしましょう。
パッチを作成するために、オリジナルのバージョンを保持する必要があります。
</p>

<pre caption="更新用パッチの作成">
# <i>diff -uNt </i><comment>${LANG}</comment><i>/alsa-guide.xml alsa-guide.xml</i> > alsa-guide.diff
</pre>

</body>
</section>
<section>
<title>オンラインCVSリポジトリ</title>
<body>

<p>
個々のバージョン間の違いを提供するために<uri link="/cgi-bin/viewcvs.cgi">オンラインCVSリポジトリ</uri>を利用することができます。
中心的な英語リポジトリは、<uri link="/cgi-bin/viewcvs.cgi/en/?root=doc&amp;sortby=date">すべて利用可能</uri>です。
また、オンラインCVSリポジトリは一時間ごとに更新されます。
</p>

</body>
</section>
<section>
<title>開発者用のローカルリポジトリ</title>
<body>

<p>
Gentoo専用の作業ディレクトリを作成してください。
例えば、<path>~/work/gentoo/doc</path>とします。
それからCVSスナップショットを置くための、<path>cvs/</path>というサブディレクトリを作成してください。
</p>

<pre caption="CVSスナップショットの入手">
# <i>mkdir cvs; cd cvs/</i>
# <i>export CVSROOT=</i><comment>&lt;your nick&gt;</comment><i>@cvs.gentoo.org:/var/cvsroot</i>
# <i>cvs co doc</i>
</pre>

<p>
CVSスナップショットを更新するために、
<path>cvs/doc</path>ディレクトリで<c>cvs update -dP</c>を実行してください
</p>

</body>
</section>
</chapter>
<chapter>
<title>GuideXMLのテスト</title>
<section>
<title>環境テスト</title>
<body>

<p>
まず、<path>guide.xsl</path>，
<path>main.css</path>といくつかの画像を置く<path>test/</path>ディレクトリを作成してください。
</p>

<pre caption="テスト環境の作成">
# <i>mkdir test</i>
# <i>cd test</i>
# <i>mkdir css images</i>
# <i>wget -P css/ http://www.gentoo.org/css/main.css</i>
# <i>wget -P images/ http://www.gentoo.org/images/gbot-s.gif \
  http://www.gentoo.org/images/gridtest.gif \
  http://www.gentoo.org/images/gtop-s.jpg \
  http://www.gentoo.org/images/line.gif \
  http://www.gentoo.org/images/netraverse-gentoo.gif</i>
</pre>

<p>
<path>guide.xsl</path>の特製バージョンは、<uri link="http://dev.gentoo.org/~swift/gentoo/downloads/guide.xsl">SwifT's webspace</uri>で入手可能です。
このバージョンは、ローカルシステム上でのGuideXMLからHTMLへの変換に対応しています。
</p>

<pre caption="guide.xslのダウンロード">
# <i>wget http://dev.gentoo.org/~swift/gentoo/downloads/guide.xsl</i>
</pre>

<p>
最後に、<path>/etc/xml/catalog</path>を編集して次の行を追加します。
</p>

<pre caption="/etc/xml/catalogへの追加">
&lt;rewriteURI uriStartString="/dtd" rewritePrefix="<i>/usr/portage/metadata/dtd/</i>"/&gt;
</pre>

</body>
</section>
<section>
<title>Gentooガイドのテスト</title>
<body>

<p>
Gentooガイドをテストするためには、まず正しいXMLを使っているかどうかを確認しましょう。
</p>

<pre caption="ガイドの正当性を確認するためにxmllintを使う">
# <i>xmllint --valid --noout alsa-guide.xml</i>
</pre>

<p>
<c>xmllint</c>が目に見える形で何も返さない場合、そのファイルには（少なくともXMLタグに関しては）エラーがありません。
次に、そのファイルをHTMLに変換する必要があります。
<c>xsltproc</c>は、そのための変換ツールです。
</p>

<pre caption="HTMLへの変換">
# <i>xsltproc --novalid test/guide.xsl alsa-guide.xml &gt; test/alsa-guide.html</i>
</pre>

<p>
エラーが無ければ、結果として出力されたドキュメントを見るために<uri>file:///home/user/work/gentoo/doc/test/alsa-guide.html</uri>へブラウザを案内しましょう。
エラーがあれば、動作するまでガイドを修正しましょう。
</p>

</body>
</section>
<section>
<title>Gentooハンドブックのテスト</title>
<body>

<p>
Gentooハンドブックは章に分かれています。
ある章を処理するには、必須の<path>hb-</path>ファイル(例：<path>hb-install-about.xml</path>)と<path>handbook-x86.xml</path>ファイルを利用する必要があります。
それから<c>xsltproc</c>に、オンラインハンドブックに目を通している間に見られる同じ名前のパラメータ、すなわち<c>part</c>や<c>chap</c>を渡さなければいけません。
例えば、<path>hb-install-about.xml</path>の正当性を確かめるには以下を実行してください。
</p>

<pre caption="hb-install-about.xmlの正当性の確認">
# <i>xmllint --valid --noout handbook-x86.xml</i>
# <i>xmllint --valid --noout hb-install-about.xml</i>
# <i>xsltproc --stringparam part 1 --stringparam chap 1 test/guide.xsl handbook-x86.xml &gt; test/hb-install-about.html</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>axkit setupの使用</title>
<section>
<body>

<p>
<uri>http://www.gentoo.org</uri>で実行しているのと同じようなaxkit setupを好んで使うドキュメント開発者もいます。
これと同じような設定にするためのポインタをいくつか紹介します。
</p>

<warn>
axkitは、特にlibxml2といった利用するパッケージのバージョンにとても注意しなければならないようです。
下に記述した設定は動作することが知られています。
パッケージの組み合わせがこれと違うと壊れる可能性があります。
</warn>

<p>
まず、必須のパッケージをインストールしてください。
</p>

<pre caption="必須パッケージの特定バージョンをemergeする">
<comment>(パッケージがPortageで利用可能かどうかテストします)</comment>
# <i>emerge -vp =dev-libs/libxml2-2.6.17 =dev-libs/libxslt-1.1.12 \
=dev-perl/AxKit-1.6.1 =dev-perl/XML-XPath-1.13 =dev-perl/XML-LibXML-1.58 \
=dev-perl/XML-LibXSLT-1.57 =dev-perl/XML-Parser-2.34 =net-www/apache-1.3.33</i>

These are the packages that I would merge, in order:

Calculating dependencies ...done!
[ebuild   R   ] dev-libs/libxml2-2.x.17  -debug -ipv6 +python +readline  0 kB 
[ebuild   R   ] dev-libs/libxslt-1.1.12  +crypt +python  0 kB 
[ebuild   R   ] dev-perl/AxKit-1.6.1  +gnome  0 kB 
[ebuild   R   ] dev-perl/XML-XPath-1.13   0 kB 
[ebuild   R   ] dev-perl/XML-LibXML-1.58   0 kB 
[ebuild   R   ] dev-perl/XML-LibXSLT-1.57   0 kB 
[ebuild   R   ] dev-perl/XML-Parser-2.34   0 kB
[ebuild   R   ] net-www/apache-1.3.33  +pam  0 kB

<comment>(パッケージのインストール)</comment>
# <i>emerge =dev-libs/libxml2-2.6.17 =dev-libs/libxslt-1.1.12 \
=dev-perl/AxKit-1.6.1 =dev-perl/XML-XPath-1.13 =dev-perl/XML-LibXML-1.58 \
=dev-perl/XML-LibXSLT-1.57 =dev-perl/XML-Parser-2.34 =net-www/apache-1.3.33</i>
</pre>

<p>
それから、次の設定ファイルを編集します。
</p>

<pre caption="/etc/apache/conf/commonapache.conf">
<comment>(内側)</comment>
&lt;IfModule mod_dir.c&gt;
  <comment>(index.xmlをリストに追加してください)</comment>
  DirectoryIndex index.xml index.html index.php index.php3 index.shtml index.cgi index.pl index.htm Default.htm default.htm
&lt;/IfModule&gt;

<comment>(次の行を追加してください)</comment>
&lt;IfDefine PERL&gt;
  LoadModule perl_module extramodules/libperl.so
#  AddModule mod_perl.c
  PerlModule AxKit
  SetHandler perl-script
  PerlHandler Apache::AxKit::StyleChooser::PathInfo AxKit
  AddHandler axkit .xml .xsp
  AxAddPlugin Apache::AxKit::StyleChooser::QueryString
  AxAddXSPTaglib AxKit::XSP::Util
  AxAddXSPTaglib AxKit::XSP::IfParam
  AxAddXSPTaglib AxKit::XSP::Param
  AxAddStyleMap application/x-xsp Apache::AxKit::Language::XSP
  AxAddStyleMap text/xsl Apache::AxKit::Language::LibXSLT
  &lt;AxStyleName "#default"&gt;
    AxAddProcessor text/xsl /xsl/guide.xsl
  &lt;/AxStyleName&gt;
  &lt;AxStyleName printable&gt;
    AxAddProcessor text/xsl /xsl/guide-print.xsl
  &lt;/AxStyleName&gt;
&lt;/IfDefine&gt;

<comment>(内側)</comment>
&lt;IfModule mod_alias.c&gt;
    Alias /icons/ /var/www/localhost/icons/
<comment>(次の行のコメントを外してください)</comment>
    #Alias /doc /usr/share/doc
</pre>

<pre caption="/etc/conf.d/apache">
<comment>(オプションのリストに-D PERLを追加してください)</comment>
APACHE_OPTS="-D PERL"
</pre>

<p>
そして、DTDやスタイルシートを含むドキュメントファイルを<path>/var/www/localhost/htdocs/</path>へコピーしてください。
<path>css/</path>、<path>doc/</path>、<path>dtd/</path>、<path>images/</path>、<path>xsl/</path>ディレクトリが必要になります。
Gentoo開発者は、シンボリックリンクからCVSのローカルコピーへコピーできます。
他の貢献者は、<uri link="http://www.gentoo.org/cgi-bin/viewcvs.cgi/xml/htdocs/?root=gentoo">viewCVS</uri>インタフェースからファイルをダウンロードする必要があるでしょう。
</p>

<p>
あとは、apacheサーバを起動するだけです。
</p>

<pre caption="apacheの起動">
# <i>/etc/init.d/apache start</i>
# <comment>(ブート時に自動的に起動したい場合はapacheをランレベルに追加してください)</comment>
# <i>rc-update add apache default</i>
</pre>

<p>
ワークステーションにaxkitをインストールした場合、ブラウザに<uri>http://your_server/doc/en/</uri>あるいは単に<uri>http://localhost/doc/en/</uri>と入力してください。
アクセスログは<path>/var/log/apache/access_log</path>、エラーログは<path>/var/log/apache/error_log</path>で確認できます。
</p>

<note>
Mozillaユーザは、localhostを利用する際に<uri>about:config</uri>ページで<c>keyword.enabled</c>を<c>false</c>に設定する必要があるかもしれません。
</note>

</body>
</section>

</chapter>

<chapter>
<title>よくある質問</title>
<section>
<title>ファイルをUTF-8に変換するにはどうしたらいいですか？</title>
<body>

<p>
あなたの助けとなるツールは数多くあります。
有名なものには<c>app-text/recode</c>がありますし、他にも<c>sys-libs/glibc</c>の一部分である<c>iconv</c>なんてのもあります。
</p>

<p>
Recodeの使い方はとても簡単です。ドキュメントに使われている現在の文字コードと、ドキュメントの文字コードをどれに変換するかをRecodeに教えます。
</p>

<p>
例えば、ISO-8859-15(Latin-9としても知られています)からUTF-8へ変換するために利用することができます。
</p>

<pre caption="ファイルを再変換する">
<comment>(l9 = ISO-8859-15, u8 = UTF-8)</comment>
$ <i>recode l9..u8 file.xml</i>
</pre>

</body>
</section>
</chapter>

<chapter>
<title>一般に危険な人為的ミス</title>
<section>
<title>Gentooハンドブックがすべてのアーキテクチャに対応する点を忘れている</title>
<body>

<p>

<path>[gentoo]/xml/htdocs/doc/en/handbook</path>内のファイルで名前の末尾が&quot;-&lt;arch&gt;.xml&quot;でないものは、すべてのハンドブックで読み込まれます。
つまりこの場合、ファイルに記載されている内容はすべてクロスアーキテクチャでなければいけません。
</p>

<p>
自分のアーキテクチャに関して修正が必要で、そのようなファイルにこれを掲載する必要がある場合、これを解決するには、まず<c>gentoo-doc@gentoo.org</c>に問い合わせるとよいでしょう。
他のアーキテクチャのユーザが、より困難な修正をしなくて済む方法があるかもしれません。
</p>

</body>
</section>
<section>
  <title>バージョンや日付を進めない、もしくは間違った方法で進めている</title>
<body>

<p>
ポリシーに従って、(ほぼ実質的な)変更があったときにはバージョンや日付を進め<e>なければいけません</e>。
バージョンはさほど重要ではありませんが(ただ、忘れた場合にはSwifTに殺されるでしょうね)、日付は、ドキュメントが最後に変更された時間をユーザに教えてくれます。
</p>

<p>
ハンドブックを更新するとき、変更したファイルの日付とバージョンだけ進めます。
実際に中身を変更しない限り、handbook-<e>ARCH</e>.xmlを進めないでください。
</p>

<p>
他によくある間違いは、十進数であるかのようにバージョン番号を更新してしまうことです。
<c>3.9</c>は、<c>3.10</c>ではなく<c>4.0</c>もしくは<c>3.91</c>とするべきです。
</p>

</body>
</section>
</chapter>

</guide>
