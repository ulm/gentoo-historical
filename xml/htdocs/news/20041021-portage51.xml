<?xml version='1.0'?>

<!DOCTYPE news SYSTEM "/dtd/guide.dtd">

<news gentoo="yes" category="gentoo">
<poster>swift</poster>
<date>21 October 2004</date>
<title>Portage 2.0.51 released</title>

<summary>
The Gentoo Portage team is proud to present Portage version 2.0.51 to the world!
Changes include improved support for cascading profiles, dynamic handling
of virtuals, rebuilding on USE-flag changes, gpg verification and more.
</summary>

<body>
<p>
The Gentoo Portage team has traveled an interesting road on the way to
releasing Portage 2.0.51. Myths about the changes and new features have been
told in numerous circles, so allow us to mute the discussions and provide you 
with a list of changes and new features.
</p>

<p><b>Rebuilding on USE flag changes</b></p>

<p>
Portage now supports automated emerging (and reemerging) of packages affected by
a USE flag change. To use it, run <c>emerge</c> with the <c>--newuse</c> option:
</p>

<pre caption="Keeping your applications USE-aware">
# <i>emerge --newuse --update --deep world</i>
</pre>

<p><b>Initial GPG verification support</b></p>

<p>
Each Gentoo package has a <path>Manifest</path> file that contains the checksum
and filesize of the files in Portage pertaining to that package (not to be
mistaken with the <path>digest-*</path> files which does the same for the
downloaded sources of that package).
</p>

<p>
Portage now supports verification of the GPG signatures included in the more
recent Manifest files. This means that a hacker who's been able to tamper with
the rsync mirror you used can hardly do any damage on your system if you do
strict GPG checking of the Manifest files. This is of course due to the fact
that the hacker cannot change the GPG signature without invalidating it.
</p>

<p>
This is all handled transparently if you have <c>gpg</c> in your FEATURES 
variable. Depending on the other features Portage will handle it with minimal 
trust (no additional feature), marginal trust (<c>strict</c>) or fully trusted
(<c>severe</c>) which requires that the GPG keys are signed as well.
</p>

<pre caption="Enabling GPG verification in /etc/make.conf">
FEATURES="gpg"                <comment>(For minimal checking, or...)</comment>
FEATURES="gpg strict"         <comment>(... For strict checking, or...)</comment>
FEATURES="gpg severe strict"  <comment>(... For severe checking)</comment>
</pre>

<p><b>FHS compliance</b></p>

<p>
This new Portage release introduces some file relocations:
</p>

<ul>
  <li>
    The virtuals file (<path>/var/cache/edb/virtuals</path>) is no longer used.
    It is now calculated transparently.
  </li>
  <li>
    The world-file is now located inside <path>/var/lib/portage</path> instead
    of <path>/var/cache/edb</path>.
  </li>
  <li>
    <path>/etc/portage/profile/virtuals</path> is for <e>user</e> configurations
    only.
  </li>
</ul>

<p>
Thanks to the relocation of the world-file and dynamic checking of the virtuals,
Portage is now FHS-compliant. For instance, data within <path>/var/cache</path>
can be removed at will - it is actually cache data now.
</p>

<p><b>Successful Package Compilation Verification</b></p>

<p>
New ebuilds can define certain tests to be ran after an emerge to verify if 
the compile process has finished successfully. This allows ebuilds to verify 
certain aspects of the compilation process.
</p>

<pre caption="Enabling merge tests in /etc/make.conf">
FEATURES="maketest"
</pre>

<p><b>Improved handling of injected packages</b></p>

<p>
The use of <c>--inject</c> is deprecated for the time being. Injecting 
packages should now be done by adding the package to
<path>/etc/portage/profile/package.provided</path> using the full name
(&lt;category&gt;/&lt;name&gt;-&lt;version&gt;) instead.
</p>

<p><b>Massive Speedups</b></p>

<p>
A frequently heard complaint is that Portage is slow. Well, yes, but work is
being put in this area :) Dependency calculations are already about 33% of that
of 2.0.50!
</p>

<p><b>Improved support for embedded systems</b></p>

<p>
Through the <c>autoconfig</c> feature Portage will now automatically handle the
building of uclibc-based systems by automatically updating the
gnuconfig-provided files. This is <e>no</e> feature that will automatically
configure applications for you!
</p>

<pre caption="Enabling uclibc-based building in /etc/make.conf">
FEATURES="autoconfig"
</pre>

<p><b>Improved Locking</b></p>

<p>
Portage now uses lockfiles for many aspects of it's software management. 
This allows for correct parallel working (including parallel fetching and 
merging).
</p>

<p><b>Eye-candy</b></p>

<p>
When you activate the "candy" feature you'll notice that Portage uses a brand
new, cooler spinner:
</p>

<pre caption="Getting a cooler spinner">
FEATURES="candy"
</pre>

<p>
You also don't want to miss <c>moo</c>. And that's all we have to say about it!
</p>

</body>
</news>
