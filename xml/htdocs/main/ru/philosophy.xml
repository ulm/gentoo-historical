<?xml version='1.0' encoding='utf-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/main/ru/philosophy.xml,v 1.2 2005/11/14 21:49:26 achumakov Exp $-->
<!DOCTYPE mainpage SYSTEM "/dtd/guide.dtd">

<mainpage id="contract">
<title>Философия Gentoo</title>
<author title="автор">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="переводчик">
  <mail link="achumakov@gentoo.org">Алексей Чумаков</mail>
</author>

<abstract>
В этом документе описывается философия, лежащая в основе Gentoo.
</abstract>

<version>1.1</version>
<date>2003-10-27</date>

<chapter>
<title>Общественный договор Gentoo Linux</title>
<section>
<body>

<p>
Четкое описание общих принципов разработки и стандартов команды разработки 
Gentoo Linux содержится в нашем <b><uri 
link="/main/ru/contract.xml">общественном договоре</uri></b>.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Философия Gentoo</title>
<section>
<body>

<p>
Я создал Gentoo, потому что не смог найти дистрибутива Linux, который мне бы
понравился. В дистрибутивах Linux преобладала такая черта: &laquo;средства 
установки&raquo;, управляющие всей системой, те самые, что должны были 
облегчить мне жизнь, в действительности требовали много внимания и лишь 
преграждали мне путь. Я пытался сказать <e>им</e>, что я хочу, а их больше 
интересовало то, как бы указать <e>мне</e>, что <e>им</e> от меня требуется.
</p>

<p>
Итак, я создал Gentoo Linux, и задумал систему сборки Portage такой, чтобы 
она стала совершеннее всех тех, что были до нее. С этой целью я создал ее 
достаточно гибкой, чтобы позволять мне делать то, что я хочу, и попытался
сделать ее настолько гибкой, чтобы дать и другим возможность делать то, 
что, как я думал, они могли бы захотеть.
</p>

<p>
При желании выяснить, как происходит сборка пакета, они могли бы заглянуть в
относительно понятный сборочный файл (ebuild) и все узнать из него. Желая 
подстроить процесс сборки, они применяли бы флаги использования (USE). 
При желании добавить пакет, они бы создавали новый сборочный файл, включаемый 
в общее дерево. При желании использовать пакет, они бы просто говорили: 
&laquo;Явись!&raquo; (emerge), &mdash; а все связанные с ним пакеты 
настраивались бы автоматически.
</p>

<p>
Людям понравилась концепция Portage, и Gentoo Linux стал быстро развиваться. Мы
получили известность как дистрибутив &laquo;из исходников&raquo;, но суть 
концепции Gentoo &mdash; не в этом. &laquo;Из исходников&raquo; &mdash; важный 
и ключевой аспект Gentoo, который был и останется необходимым, но не 
единственный и не главный. <e>Основополагающая задача &mdash; создание 
технологии, позволяющей как нам, так и другим делать то, что хочется, без 
ограничений.</e>
</p>

<p>
Чтобы подытожить суть Gentoo, представим себе пользователя, сидящего перез 
системой Linux. Чего он или она захочет сделать? Философия Gentoo &mdash; 
позволить этому пользователю делать то, что он или она пожелает, не вставая на 
его пути.
</p>

<p>
Во то время, когда был рожден Gentoo, камнем преткновения было отсутствие 
легкого способа сборки пакетов из исходных текстов в соответствии с 
указаниями пользователя. Сейчас этот вопрос мы хорошо отработали, а что еще не
слишком развито &mdash; это поддержка заранее собранных пакетов, хотя Portage 
поддерживает сборку готовых двоичных пакетов почти с самого начала. Именно этим 
мы занимаемся сейчас.
</p>

<p>
Важно, чтобы наши инструменты поддерживали двоичные пакеты, поскольку те 
широко используются и очень востребованы в сообществе Linux. Без поддержки 
двоичных пакетов мы не могли бы заявлять, что наш инструментарий создан, чтобы 
давать пользователю возможность сделать все, что он захочет. Целенаправленно 
исключив поддержку двоичных пакетов, мы попытались бы вмешаться в подход 
пользователя к решению конкретных задач, взамен навязывая свою собственную волю 
или взгляд на то, как ему следует подходить к решению. А избегая сборки 
двоичных пакетов сами, мы не приблизились бы к уверенности в том, что наши 
инструменты хорошо с ними работают, не смогли бы ручаться, что другие тоже 
смогут собирать двоичные пакеты, и даже не смогли бы <e>продемонстрировать</e>, 
что наши инструменты хорошо работают с двоичными пакетами. Кроме этих 
философских причин, есть много чисто практических соображений, чтобы создавать 
двоичные пакеты.
</p>

<p>
Философия Gentoo в одном абзаце такова. Каждому пользователю приходится 
выполнять определенную работу. Цель Gentoo &mdash; разработка инструментов и 
систем, позволяющих пользователям заниматься своим делом как можно эффективнее 
и в свое удовольствие, так, как <e>они</e> сочтут нужным. Наши инструменты 
должны приносить радость и помогать пользователю воспринять все богатство Linux 
и сообщества свободного программного обеспечения, а также гибкость свободных 
программ. Это возможно только тогда, когда инструмент создается, чтобы отражать 
и проводить волю пользователя, оставляя для него открытыми все возможности до 
самого последнего сырья (исходного кода). Когда инструмент заставляет 
пользователя действовать определенным образом, инструмент работает против него, 
а не на него. Все мы сталкивались с ситуациями, когда инструменты стремились 
навязать нам свою собственную волю. Такой подход &mdash; полная 
противоположность, несовместимая с философией Gentoo. 
</p>

<p>
Другими словами, философия Gentoo &mdash; создание лучших инструментов. Когда 
инструмент в совершенстве выполняет свою задачу, вы можете даже не замечать его 
присутствия, потому что он не перечит вам, не проявляет себя, и не заставляет 
вас возиться с ним, когда вам совершенно не до этого. Инструмент служит 
пользователю, а не пользователь &mdash; инструменту.
</p>

<p>
Будущая задача Gentoo &mdash; продолжать борьбу за создание инструментов, 
близких к идеалу. Инструментов, удовлетворяющих нужды множества различных 
пользователей (каждого &mdash; со своими разнообразными целями) с простотой, 
идущей рука об руку с непревзойденной мощью. Разве вы не любите пользоваться 
инструментами, которые отлично подходят для ваших нужд? Разве это не 
великолепное ощущение? Наша цель &mdash; передать это чувство как можно 
большему числу людей.
</p>

<p>
Дэниел Робинс<br/>
предыдущий главный архитектор
</p>

</body>
</section>
</chapter>
</mainpage>
