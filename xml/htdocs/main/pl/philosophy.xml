<?xml version='1.0' encoding='utf-8'?>
<!-- $Header: /var/cvsroot/gentoo/xml/htdocs/main/pl/philosophy.xml,v 1.1 2005/09/27 01:39:22 rane Exp $-->
<!DOCTYPE mainpage SYSTEM "/dtd/guide.dtd">

<mainpage id="contract">
<title>Filozofia Gentoo</title>

<author title="Autor">
  <mail link="drobbins@gentoo.org">Daniel Robbins</mail>
</author>
<author title="Tłumaczenie">
  <mail link="rane@gentoo.org">Łukasz Damentko</mail>
</author>

<abstract>
Filozofia powstania i rozwoju Gentoo.
</abstract>

<version>1.1</version>
<date>2003-10-27</date>

<chapter>
<title>Umowa społeczna Gentoo</title>
<section>
<body>

<p>
W naszej <b><uri link="/main/pl/contract.xml">Umowie społecznej</uri></b>
znajdują się podstawowe informacje o zasadach i standardach tworzenia Gentoo.
</p>

</body>
</section>
</chapter>
<chapter>
<title>Filozofia Gentoo</title>
<section>
<body>

<p>
Stworzyłem Gentoo, ponieważ nie mogłem znaleźć dystrybucji Linuksa, która by mi
odpowiadała. Powszechnym zjawiskiem w systemach operacyjnych jest fakt, że
narzędzia dla nich specyficzne, te które służą do zarządzania systemem i które
mają <e>ułatwiać</e> pracę, wymagają poświęcania ogromnych ilości czasu i wręcz
przeszkadzają w wykonywaniu codziennych zadań w sposób, w jaki chcemy je
wykonywać. To ja chcę decydować co mają robić, tymczasem to one mną dyrygują,
zmuszając do wykonywania zadań przez nie narzucanych.
</p>

<p>
Stworzyłem Gentoo i zaprojektowałem Portage, aby było znacznie wygodniejszym
narzędziem niż te, które istniały przed nim. Osiągnąłem to dzięki temu, że
uczyniłem je maksymalnie elastycznym, co pozwaliło mi na wykonywanie
codziennych zadań w sposób jaki mi odpowiadał. Dodałem też funkcje, które
miałem nadzieję, że będą użyteczne dla innych ludzi.
</p>

<p>
Jeśli użytkownik zechce dowiedzieć się w jaki sposób budowany jest określony
pakiet, wystarczy, że przeczyta plik ebuild, w którym znajdują się wszystkie
informacje na ten temat. Jeśli zapragnie dostosować program do swoich
indywidualnych potrzeb, może to uczynić zmieniając ustawienia flag USE. Jeśli
zechce dodać nowy pakiet, doda ebuild do istniejącego drzewa. Jeśli zapragnie
skorzystać z jakiegoś programu, zainstaluje go za pomocą polecenia emerge,
które jednocześnie zadba o spełnienie wszystkich zależności tego programu.
</p>

<p>
Ludziom spodobał się pomysł Portage i Gentoo rozwijało się w zawrotnym tempie.
Stało się znane jako dystrybucja "oparta na źródłach", ale nie to było naszym
głównym celem. Oczywiście własnoręczne kompilowanie programów jest jednym z
najważniejszych pomysłów w Gentoo, ale znacznie bardziej liczy się dla nas to,
abyśmy zarówno my, jak i użytkownicy naszej dystrybucji mogli robić dokładnie
to co zechcemy, bez żadnych ograniczeń.
</p>

<p>
Podsumowując, wyobraźmy sobie użytkownika pracującego z Linuksem. Na czym mu
zależy? Nasza filozofia zakłada, że będzie mógł wykonać wszystko, czego tylko
zapragnie.
</p>

<p>
W chwili gdy rodziło się Gentoo, nie było prostej metody budowania programów ze
źródeł i dostosowywania ich do indywidualnych potrzeb każdego użytkownika.
Udało nam się stworzyć taki system, ale nie powiodły się plany połączenia go z
systemem prekompilowanych pakietów, chociaż zaimplementowaliśmy taką obsługę w
Portage. Teraz jest to jednym z naszych planów na przyszłość.
</p>

<p>
Obsługa prekompilowanych pakietów jest ważną częścią naszego oprogramowania,
ponieważ takie pakiety są bardzo popularne i domaga się ich bardzo wielu
użytkowników. Jeżeli nasze narzędzia nie będą współpracowały z takimi
pakietami, nie będziemy mogli mówić o tym, że dajemy użytkownikom możliwość
wyboru. Kiedy świadomie usuniemy taką obsługę, podejmiemy decyzję w imieniu
użytkownika, zamiast wskazać mu kilka możliwości i pozwolić na wybranie tej,
która mu najbardziej odpowiada. Ponadto jeśli nie będziemy budować programów,
nie będziemy w stanie sprawdzić czy nasze narzędzia dobrze to robią. Poza
argumentami ideologicznymi mamy zatem również argumenty praktyczne na
potwierdzenie tezy, że obsługa prekompilowanych pakietów jest potrzebna.
</p>

<p>
W skrócie nasza filozofia wygląda następująco. Użytkownik ma do wykonania
określone zadania. Celem Gentoo jest stworzenie narzędzi i systemów, które
pozwolą mu wykonać tę pracę w komfortowych warunkach i możliwie wydajnie. Nasze
oprogramowanie musi być przyjemne w pracy i ma pomagać użytkownikom w
docenieniu bogactwa zasobów Linuksa i ogólnie wolnego oprogramowania. Dokonanie
tego jest możliwe tylko wtedy, gdy narzędzia projektuje się tak, aby spełniały
wszystkie życzenia użytkowników, przedstawiając im cały wachlarz możliwości
rozwiązania ich problemów. Gdy narzędzie wymusza na użytkowniku określone
zachowanie, wtedy jest narzędziem, które przeszkadza mu w pracy zamiast w niej
pomagać. Wszyscy znamy przykłady narzędzi, które podejmują decyzje w imieniu
użytkowników. Są one przeciwieństwem filozofii Gentoo.
</p>

<p>
Filozofia Gentoo opiera się zatem na projektowaniu lepszych narzędzi. Kiedy
narzędzie doskonale spełnia zadania przed nim stawiane, można nawet nie
zauważać jego obecności, ponieważ nie zmusza ono do po żadnego wysiłku, po
prostu spełniając wszystkie życzenia użytkownika. Narzędzie służy wtedy
użytkownikowi, nie na odwrót.
</p>

<p>
Przyszłość Gentoo to dążenie do tworzenia niemal idealnych narzędzi. Narzędzi,
które zaspokoją potrzeby wielu różnych użytkowników  w sposób prosty, ale
bardzo kompleksowy. To wspaniałe uczucie, gdy znajduje się program, który
potrafi po prostu spełnić zadania, jakie się przed nim stawia.  Naszą misją
jest tworzenie właśnie takich programów.
</p>

<p>
Daniel Robbins<br/>
dawny Główny Architekt Gentoo.
</p>

</body>
</section>
</chapter>
</mainpage>
