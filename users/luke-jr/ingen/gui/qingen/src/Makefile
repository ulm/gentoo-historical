#############################################################################
# Makefile for building: qingen
# Generated by qmake (1.05a) (Qt 3.1.2) on: Sat Apr 26 03:35:29 2003
# Project:  qingen.pro
# Template: app
# Command: $(QMAKE) -o Makefile qingen.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2  -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -W -O2  -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/mkspecs/linux-g++ -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS)  -Wl,-rpath,$(QTDIR)/lib -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = 
SOURCES = main.cpp \
		ui/objects.cpp
OBJECTS = main.o \
		objects.o \
		wizard.o
FORMS = ui/wizard.ui
UICDECLS = ui/wizard.h
UICIMPLS = ui/wizard.cpp
SRCMOC   = ui/moc_wizard.cpp
OBJMOC = moc_wizard.o
DIST	   = qingen.pro
QMAKE_TARGET = qingen
DESTDIR  = 
TARGET   = qingen

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: qingen.pro  $(QTDIR)/mkspecs/linux-g++/qmake.conf 
	$(QMAKE) -o Makefile qingen.pro
qmake: 
	@$(QMAKE) -o Makefile qingen.pro

dist: 
	@mkdir -p .tmp/qingen && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/qingen/ && $(COPY_FILE) --parents ui/wizard.ui.h .tmp/qingen/ && ( cd `dirname .tmp/qingen` && $(TAR) qingen.tar qingen && $(GZIP) qingen.tar ) && $(MOVE) `dirname .tmp/qingen`/qingen.tar.gz . && $(DEL_FILE) -r .tmp/qingen

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS) 
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp ui/wizard.h \
		main.h

objects.o: ui/objects.cpp ui/objects.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objects.o ui/objects.cpp

ui/wizard.h: ui/wizard.ui 
	$(UIC) ui/wizard.ui -o ui/wizard.h

ui/wizard.cpp: ui/wizard.h ui/wizard.ui 
	$(UIC) ui/wizard.ui -i wizard.h -o ui/wizard.cpp

wizard.o: ui/wizard.cpp ui/wizard.ui.h \
		ui/wizard.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wizard.o ui/wizard.cpp

moc_wizard.o: ui/moc_wizard.cpp ui/wizard.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_wizard.o ui/moc_wizard.cpp

ui/moc_wizard.cpp: $(MOC) ui/wizard.h
	$(MOC) ui/wizard.h -o ui/moc_wizard.cpp

####### Install

install: all 

uninstall: 

