#!/usr/bin/perl
package main;
use vars qw($libpath);
use Getopt::Long;

# For debugging needs
#use diagnostics;

BEGIN {
    $libpath = $0;
    $libpath =~ s!/[^/]+$!!;
    $libpath =~ s!/bin$!/lib/bugger!;
    if ( !-e $libpath ) {
        die _("Can't find required files in ") . $libpath . "\n";
    }
}

use lib "$libpath";


our $help     = '';
our $tk = '';
our $show     = '';
our $add      = '';
our $selfname = $0;
our $cclist   = '';
our $list     = '';
our $update   = '';
our $change   = '';
our $attach   = '';
our $grab     = '';
GetOptions(
    'help'     => \$help,
    'tk'	=> \$tk,
    'flat'	=> \$flat,
        'cclist=s' => \$cclist,
    'list=s'   => \$list,
    'add'      => \$add,
    'update=s' => \$update,
    'change=s' => \$change,
    'attach=s' => \$attach,
    'grab=s'   => \$grab,
    'show=s'   => \$show,
);

if    ($help)   { helpme() }
sub helpme {
    print "Usage: $selfname\n";
    print "\t\t--tk\tStart in tk mode, overriding default\n";
    print "\t\t--flat\tStart in flat text mode, overriding default\n";
    print "\n";
    print "Flat mode allows the following when set as default:\n";
    print "\t\t--list=loginID\tList bugs assigned to given loginID\n";
    print "\t\t--cclist=loginID\tList bugs with a CC: to given loginID\n";
    print "\t\t--add\tAdd a new bug\n";
    print "\t\t--update=BugID\tUpdate (comment on) given bug\n";
    print "\t\t--change=BugID\tChange bug status (fixed,invalid,etc)\n";
    print "\t\t--attach=BugID\tAdd an attachment to a bug\n";
    print "\t\t--show=BugID\tShow the contents of bug BugID\n";
    print "\t\t--grab=BugID\tGrab attachments from bug BugID\n";
    print "\t\t--help\tPrint this sad usage info\n";
    print "\n\nStill need to add nice die messages...\n\n";
}

if ($tk)
{
require "bugger-tk";
my $child;
unless ( $child = fork ) {
    die "cannot fork: $~" unless defined $child;
    start();
}
}
else {
require "bugger-flat";
start();
}
exit;
