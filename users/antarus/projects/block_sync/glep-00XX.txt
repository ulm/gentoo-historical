GLEP: XX
Title: Sync Control for Developers
Version: $Revision: 1.3 $
Last-Modified: $Date: 2007/03/21 06:36:59 $
Author: Alec Warner <antarus@gentoo.org>
Author: Robbin Johnson <robbat2@gentoo.org>
Status: Draft
Type: Standards Track
Content-Type: text/x-rst
Created: 15-Jan-2007
Post-History: 


Credits
=======

Abstract
========

This GLEP proposes a method for providing Gentoo developers who have gentoo-x86
commit access the ability to stop the CVS -> RSYNC propagation process for a 
predefined period of time.

Motivation
==========

Situations may `arise`_ when a developers require the CVS -> RSYNC propagation
to be turned off for a predefined period of time.

Rationale
=========

There are times when stopping the CVS -> RSYNC propagation is necessary.
Sometimes it is difficult to find an infrastruction developer with sufficient
permissions to do so (or alternatively, developers have no idea whom to
ask to have this done and assume it is not allowed.)  An example of when this
maybe be opportune is if a developer makes a mistaken commit that is
non-trivial to fix, propagation may be halted to address the issue properly.
This also aids in preventing a worse hack to 'fix it before the propagation'
which some people are prone to suggesting from time to time.

Perhaps a better example is a large commit of a package such as Xorg or KDE.
Often the ebuilds are commited in package.mask and then unmasked afterwards;
this gets around the time window restrictions nicely, but it does not account
for developers who are stabling packages.  If a large package is not fully
keyworded during one propagation cycle users may recview a half-keyworded
set of ebuilds.  Delaying the propation in this case ensures a fully keyworded
package.

Specification
=============

block_sync File
---------------

There will exist a file that can be placed in gentoo-x86; its name shall be 
'block_sync'.

The block_sync file will not remain in cvs, the developers will place a set
of headers in the file to disable CVS -> RSYNC propagation and then remove the
file when the propagation is ready to be re-enabled.

block_sync File Entries
-----------------------

``Entry-Date:``
	This denotes the date the entry was added to the file.  It should
	contain	an RFC 822 style date (Thu, 11 Jan 2007 21:45:23 +0000).  This
	field is mandatory.
``Start-Date:``
	This denotes the start time of the CVS -> RSYNC downtime.  It should
	contain an RFC 822 style date (Thu, 11 Jan 2007 21:45:23 +0000).  This
	field is mandatory.
``Completion-Date:``
	This denotes the ending time of the CVS -> RSYNC downtime.  It should
	contain an RFC 822 style date (Thu, 11 Jan 2007 21:45:23 +0000).  This
	field is mandatory.
``Signed-Off-By:``
	This denotes who to contact about the downtime.  A changelog-like
	syntax should be used (Alec Warner <antarus@gentoo.org>).  This field
	is mandatory.
``References:``
	This field may contain any references that the downtime is for; this
	could include a bug report, a forums thread, an e-mail thread, etc...
	This field is optional.
``Reason:``
	This field contains the reason for the CVS -> RSYNC downtime.  Please
	be concise in your reasoning.  This field is required.

block_sync Entry Example
------------------------

A sample entry is below::

	Entry-Date: Thu, 11 Jan 2007 21:45:23 +0000
	Start-Date: Thu, 11 Jan 2007 22:00:00 +0000
	Completion-Date: Thu, 11 Jan 2007 23:00:00 +0000
	Signed-Off-By: Robin H. Johnson <robbat2 <at> gentoo.org>
	References: http://article.gmane.org/gmane.linux.gentoo.devel/45310
	Reason: The following is an example of a block for the block_sync file.
	 This is a continuation line. Notice the leading space. It is still part
	 of the Reason header.
	# The above is the example block

block_sync Multiple Entries (Entry Termination)
-----------------------------------------------

In the event that someone has already scheduled a block for the rsync tree
a developer may wish to add their own scheduled block in addition to the
existing one.  This necessitates multiple entries in the block_sync file.
To enabled this entries in the block_sync file may be delimeted by a
line filled with 72 (seventy two) equal signs ('=').

Implementation
==============

A template file will be placed online that developers can then fetch and commit
to cvs with the relevant fields filled in.  The gmirror script will test for
the existance of the block_sync file and if it finds that the file exists and
has proper RFC 822 headers it will abort the sync.

gmirror will also attempt to check the ``Completion-Date`` header in the
block_sync file.  If the current time is greater than the ``Completion Date``
field than the script may e-mail infra or delete the block_sync file, either
at Infrastructure's option.

Backwards Compatibility
=======================

I believe there are no known backwards compatability issues.

Reference Implementation
========================

Please see `block_sync.py`_

References
==========

.. _arise: http://article.gmane.org/gmane.linux.gentoo.devel/45314/match=block+sync
.. _block_sync.py: http://sources.gentoo.org/viewcvs.py/gentoo/users/antarus/projects/block_sync/block_sync.py?rev=1.1&view=log

Copyright
=========

This document has been placed in the public domain.
