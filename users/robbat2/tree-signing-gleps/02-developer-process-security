GLEP: xx+2
Title: Security of distribution of Gentoo software - Developer process security
Version: $Revision: 1.1 $
Last-Modified: $Date: 2006/10/12 12:37:12 $
Author: Robin Hugh Johnson <robbat2@gentoo.org>, 
Status: Draft
Type: Standards Track
Content-Type: text/plain
Created: October 2006
Post-History: ...

Abstract
========

Motivation
==========

Specification
=============
Two competing options:

Full-Manifest signing
---------------------
- Existing code in Portage.
- On changes, regenerate complete Manifest and sign.
- Old signatures lost to users.
- Presents problems for shared locations (eclasses, profiles) where you don't
  want to sign somebody else's work.
- Requires use of VCS history during investigative work.
- Potential for bad code to slip into a signed Manifest (consider the case were
  a developer works, then does repoman ci, which does a cvs update, pulling in
  an unsigned commit, which is then signed. Now make the unsigned commit some
  malicious code in an eclass).

Manifest fragments
------------------
- Only the changes are signed, and they are then appended to the existing
  Manifest file.
- Unneeded changesets are removed from the Manifest when no longer needed.
- Provides gradual verification of the entire tree.
- Allows multiple workers in a shared location (eclasses, profiles) to prove
  that they only touched specific files.
- Highest verificable level.

Backwards Compatibility
=======================
- No issues for the complete-signed manifest variation.
- Testing needed for the fragment signing case (Manifest2 files with hashs of various ages for the same file).

Copyright
=========
Copyright (c) 2006 by Robin Hugh Johnson. This material may be
distributed only subject to the terms and conditions set forth in the
Open Publication License, v1.0.

vim: tw=72 ts=2 expandtab:
