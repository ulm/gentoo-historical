# GRP instructions 
# by drobbins@gentoo.org, 14 Jul 2003

IMPORTANT: Be sure to read README.stager first

How to use GRP
==============

Quick answer: ensure you have an appropriate stage3 tarball and type:

./stager x86 grp 20030712 20030712

This will tell stager to use stage3-x86-20030712.tar.bz2 and the 20030712
Portage snapshot to build a GRP package set for x86.

What is GRP?
============

Before going into technical details, it would be a good idea to review what
"GRP" is. GRP stands for "the Gentoo Reference Platform." It consists of the
following items:

1) a set of stage tarballs
2) a Portage tree snapshot
3) a set of pre-built binary packages
4) a set of sources for things that need to be built from source
(kernel-dependent stuff like external modules)

What is the purpose of GRP?
===========================

GRP has several important purposes. It allows:

1) Users to install Gentoo easily without an Internet connection;

2) Users to install Gentoo quickly by using pre-built packages;

3) VARs and users to set up Gentoo systems that are configured correctly.
GRP helps by providing a Gentoo system with a reasonable default set of USE
vars and optimizations, allowing for pre-installed Gentoo systems to be
configured consistently whether a computer system ships from Foo, Inc., Bar,
Inc. or is installed at home by a user.

How it GRP implemented?
=======================

For the 1.4 release, GRP is intended to be placed on a 2-CD set for each
specific build. The first CD consists of:

1) a bootable LiveCD runtime image
2) a set of stages ("generic" stage1 and "specific" stage2/3)
3) a set of sources (for kernel-dependent stuff like external modules)
4) a set of "base" .tbz2 packages (which may include xfree, space
permitting)

Using the first CD, a user will be able to boot their system using the CD
and install Gentoo Linux with or without a network connection. Using this
CD, the user will be able to get their system fully configured and get X
installed. After Gentoo and X are installed, the user can then reboot. At
this point, the user can mount the second CD, which contains:

1) the remaining .tbz2 packages (GNOME, KDE, openoffice-bin, mozilla, etc.)

Yes, this means that CD 2 is simply a normal non-bootable CD. After it's
mounted, a user can install any desired package using an export PKGDIR= and
a emerge --usepkg command.

Note that while the first CD is required for installation, the second CD is
not. It is only required for those who are interested in installing KDE,
GNOME, openoffice-bin, etc from .tbz2s. 

Inside GRP
==========

So, how does GRP work? Let's look at the important files for PC stages in
the "grp/" directory:

x86.conf
x86.pkg.cd1
x86.pkg.cd2
x86.src

So, what are these files for? Well, to start, they contain information that
tells stager how to build stages for the "x86" arch -- that includes all
optimizations, including i686, pentium3, pentium4, athlon-xp, x86 (generic,)
etc.

Note: example locations below use the sample command:
./stager pentium3 grp 20030101 20030712

x86.pkg.cd1
===========

This file contains a list of packages that should be built to be included on
CD 1 of the 2-CD GRP set. You would find these packages in
packages/grp-2003712/cd1/All after GRP building completes.

x86.pkg.cd2
===========

This file contains a list of packages that should be built to be included on 
CD 2 of the 2-CD GRP set. You would find these packages in
packages/grp-20030712/cd2/All after GRP building completes.

x86.src
=======

This file contains a list of packages that should not be pre-built, but
whose sources should be downloaded instead. Stuff that is kernel-dependent
should be listed here. You would find these files in dists/20030712 after
GRP building completes.


x86.conf
========

x86.conf is a very important file to understand. By building the packages
listed in x86.pkg.cd1 and x86.pkg.cd2, certain USE variables will be
automatically enabled by Portage's "auto-use" system. For example, when
mozilla is enabled, the "mozilla" USE variable is normally automatically
enabled.

But rather than allow these USE variables to be auto-used, we want to
enable them from the start. That way, *all* the .tbz2s will have mozilla
support enabled, not just those that happened to get built after mozilla.

How do you determine what USE variables to enable? First, go into your
stage3 and look at your USE setting:

./stager enter pentium3 3 20030101 20030712 
emerge info | grep USE

Now, record this information to a file.

Next, after you build your first GRP set, enter the GRP build directory:

./stager enter pentium3 grp 20030101 20030712
emerge info | grep USE

Record this information to a second file.

Now, see what USE variables are not set in the first file but are in the
second file. Then add these USE variables to the x86.conf file. Next, wipe
out the already-built GRP .tbz2s and repeat your GRP build. Now, all of
the .tbz2s will have those USE variables enabled, not just those that were
built after a particular package was built.

