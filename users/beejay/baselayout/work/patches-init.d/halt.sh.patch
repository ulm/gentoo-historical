--- /home/benni/gentoo_ev/baselayout/etc/init.d.old/halt.sh	2003-08-10 23:25:23.000000000 +0200
+++ /home/benni/gentoo_ev/baselayout/etc/init.d.new/halt.sh	2003-12-22 01:32:13.000000000 +0100
@@ -1,21 +1,23 @@
 # Copyright 1999-2003 Gentoo Technologies, Inc.
 # Distributed under the terms of the GNU General Public License v2
 # $Header: /var/cvsroot/gentoo/users/beejay/baselayout/work/patches-init.d/halt.sh.patch,v 1.1 2003/12/31 20:35:54 beejay Exp $
+TEXTDOMAINDIR=/etc/gentoo/locale
+TEXTDOMAIN=baselayout
 
 
 # We need to properly terminate devfsd to save the permissions
 if [ -n "`ps --no-heading -C 'devfsd'`" ]
 then
-	ebegin "Stopping devfsd"
+	ebegin $"Stopping devfsd"
 	killall -15 devfsd &> /dev/null
 	eend $?
 fi
 
-ebegin "Sending all processes the TERM signal"
+ebegin $"Sending all processes the TERM signal"
 killall5 -15 &> /dev/null
 eend $?
 sleep 5
-ebegin "Sending all processes the KILL signal"
+ebegin $"Sending all processes the KILL signal"
 killall5 -9 &> /dev/null
 eend $?
 
@@ -25,7 +27,7 @@
 
 if [ -n "`swapon -s 2> /dev/null`" ]
 then
-	ebegin "Deactivating swap"
+	ebegin $"Deactivating swap"
 	swapoff -a &> /dev/null
 	eend $?
 fi
@@ -54,13 +56,13 @@
 	do
 		if [ "${retry}" -lt 3 ]
 		then
-			ebegin "Unmounting loopback filesystems (retry)"
+			ebegin $"Unmounting loopback filesystems (retry)"
 			umount -d ${remaining} &> /dev/null
-			eend $? "Failed to unmount filesystems this retry"
+			eend $? $"Failed to unmount filesystems this retry"
 		else
-			ebegin "Unmounting loopback filesystems"
+			ebegin $"Unmounting loopback filesystems"
 			umount -d ${remaining} &> /dev/null
-			eend $? "Failed to unmount filesystems"
+			eend $? $"Failed to unmount filesystems"
 		fi
 		
 		remaining="`awk '!/^#/ && $1 ~ /^\/dev\/loop/ && $2 != "/" {print $2}' /proc/mounts | sort -r`"
@@ -76,7 +78,7 @@
 # Try to unmount all filesystems (no /proc,tmpfs,devfs,etc).
 # This is needed to make sure we dont have a mounted filesystem
 # on a LVM volume when shutting LVM down ...
-ebegin "Unmounting filesystems"
+ebegin $"Unmounting filesystems"
 no_unmount="`mount | awk '{ if (($5 ~ /^(proc|sysfs|devfs|tmpfs|usb(dev)?fs)$/) ||
                              ($1 ~ /^(rootfs|\/dev\/root)$/) ||
                              ($3 = "/"))
@@ -104,9 +106,9 @@
 if [ -x /sbin/vgchange ] && [ -f /etc/lvmtab -o -d /etc/lvm ] && \
    [ -d /proc/lvm  -o "`grep device-mapper /proc/misc 2>/dev/null`" ]
 then
-	ebegin "Shutting down the Logical Volume Manager"
+	ebegin $"Shutting down the Logical Volume Manager"
 	/sbin/vgchange -a n > /dev/null
-	eend $? "Failed to shut LVM down"
+	eend $? $"Failed to shut LVM down"
 fi
 
 # This is a function because its used twice below this line as:
@@ -114,15 +116,15 @@
 ups_kill_power() {
 	if [ -x /sbin/upsdrvctl ]
 	then
-		ewarn "Signalling ups driver(s) to kill the load!"
+		ewarn $"Signalling ups driver(s) to kill the load!"
 		/sbin/upsdrvctl shutdown
-		ewarn "Halt system and wait for the UPS to kill our power"
+		ewarn $"Halt system and wait for the UPS to kill our power"
 		/sbin/halt -id
 		while [ 1 ]; do sleep 60; done
 	fi
 }
 
-ebegin "Remounting remaining filesystems readonly"
+ebegin $"Remounting remaining filesystems readonly"
 # Get better results with a sync and sleep
 sync;sync
 sleep 1
@@ -150,11 +152,11 @@
 if [ -f /fastboot ]
 then
 	echo
-	ewarn "Fsck will be skipped on next startup"
+	ewarn $"Fsck will be skipped on next startup"
 elif [ -f /forcefsck ]
 then
 	echo
-	ewarn "A full fsck will be forced on next startup"
+	ewarn $"A full fsck will be forced on next startup"
 fi
 
 [ -f /etc/killpower ] && ups_kill_power
