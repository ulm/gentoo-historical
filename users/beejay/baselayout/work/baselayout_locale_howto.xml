<?xml version='1.0' encoding="UTF-8"?>
<!DOCTYPE guide SYSTEM "/dtd/guide.dtd">


<guide link="baselayout_locale_howto.xml">
<title>Localisation of baselayout (HOWTO)</title>

<author title="Author">
  <mail link="beejay@gentoo-ev.org">Benjamin Judas</mail>
</author>

<abstract>
	This tutorial is a little tutorial of how to automatically
	localize baselayout. This is just an overview, but it should explain
	things quite well.
</abstract>

<version>0.1</version>
<date>December 22nd 2003</date>

<chapter>
	<title>Rules</title>
	<section>
		<title>How to assemble the files?</title>
		<body>
			<p>
				You create <u>ONE</u> .mo-File for all scripts in <path>/etc/init.d</path> so all scripts use
				the same .mo-file.
			</p>
		</body>
	</section>
</chapter>

<chapter>
	<title>Quick Description</title>
	<section>
		<title>Preparing the scripts</title>
		<body>
			<p>
				<ul>
					<li>Open the script you want to be localized in a text-editor (assuming <path>/etc/init.d/modules</path> here)</li>
					<li>Change all strings that are script-output from <e>"blablabla"</e> to <e>$"blablabla"</e> (The $ before the string will tell bash to use the localized string when executing the script)</li>
					<li>Save the script</li>
				</ul>
			</p>
		</body>
	</section>

	<section>
		<title>Creating the localisazion files</title>
		<body>
			<p>
				<ul>
				<li>Run:<br/>
<pre caption = "String extraction">
bash $ bash --dump-po-strings modules >> baselayout.po
</pre></li>

					<li>Open modules.po in an editor. You see all the strings you just changed by adding the $ as a prefix in
					this file. Below every line is an empty string. This is where you put the translated string.</li>
					<li>Translate every string like this, then save the file and quit the editor.</li>
					<li>Run:<br/>
<pre caption = "Creation of .mo-files">
bash $ msgfmt -o baselayout.mo baselayout.po
</pre><br/>
					This will create the final locale-file (called .mo-file from now on) based on the .po-file.</li>
					<li>now create a directory /etc/gentoo/locale</li>
					<li>In this directory create a directory named the same as your locale - for me as a german this
					would be de_DE. For you maybe fr, es, us and so on. Then in this directory create a directory called LC_MESSAGES.</li>
					<li>If you've done this, it should look similar to: <path>/etc/gentoo/locale/de_DE/LC_MESSAGES/</path></li>
					<li>Copy the .mo-File you created into this directory.</li>
				</ul>
			</p>
		</body>
	</section>

	<section>
		<title>Make localisazion active</title>
		<body>
			<p>
				<ul>
					<li>Open the Script again and add the following two lines at the beginning:<br/>
<pre caption = "Activate localisazion">
TEXTDOMAINDIR=/etc/gentoo/locale
TEXTDOMAIN=baselayout
</pre><br/>
					Now run the script. All Outputs should now appear according to your locale.
  					Or better: According to your translation of the strings in the .po-file ;)</li>
				</ul>
			</p>
		</body>
	</section>
</chapter>

<chapter>
	<title>Gotchas</title>
	<section>
		<title>Duplicate Entries</title>
		<body>
			<p>
				msgfmt sometimes complains about duplicate keys. This happens if you have
				an original string appearing in the .po-file more than one time. Simply
				comment the 2nd appearance. (Note: When translating the scripts in
				/etc/init.d this will happen a few times)
			</p>
		</body>
	</section>
	<section>
		<title>$LANG/$LC_ALL</title>
		<body>
			<p>
				At the time when init/rc is called, no LANG or LC_ALL-Variable is set, so we need to
				set it manually in some scripts. Candidates for this are <e>/sbin/runscript.sh</e>,
				<e>/sbin/functions.sh</e>, <e>/sbin/rc</e> and <e>/etc/init.d/checkroot</e>. I'm
				still experimenting with this, but I didn't get localisazion working from the beginning
				of init/rc. Translated strings first appear at "caching service dependencies". I'm still
				trying to examine why LANG/LC_ALL don't have an Effect before this point.
			</p>
		</body>
	</section>
</chapter>

<chapter>
	<title>Useful hints</title>
	<section>
		<title>Create one .po-file directly out of all scripts</title>
		<body>
			<p>
				You can make creation of the .po-files a lot easyier by simply using this
  				bash-construct:<br/>

<pre caption = "Activate localisazion">
cd /etc/init.d<br/>
for x in *; do<br/>
  bash --dump-po-strings $x >> baselayout.po<br/>
done<br/>
</pre>
  				You have to edit the scripts before that, of course
			</p>
		</body>
	</section>
</chapter>
</guide>
