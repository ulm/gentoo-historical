--- runscript.sh	2003-07-28 03:23:46.000000000 +0200
+++ ../sbin.new/runscript.sh	2003-12-22 21:23:54.000000000 +0100
@@ -3,6 +3,13 @@
 # Distributed under the terms of the GNU General Public License v2
 # $Header: /var/cvsroot/gentoo/users/beejay/baselayout/work/patches-sbin/runscript.sh.patch,v 1.1 2003/12/31 20:35:54 beejay Exp $
 
+export LANG=$(/bin/cat /etc/gentoo/locale/locale)
+export LC_ALL=$(/bin/cat /etc/gentoo/locale/locale)
+
+TEXTDOMAINDIR=/etc/gentoo/locale
+TEXTDOMAIN=baselayout
+
+set -a
 
 # Common functions
 [ "${RC_GOT_FUNCTIONS}" != "yes" ] && source /sbin/functions.sh
@@ -58,10 +65,10 @@
 
 usage() {
 	local IFS="|"
-	myline="Usage: ${myservice} { $* "
+	myline=$"Usage: ${myservice} { $* "
 	echo
-	eerror "${myline}}"
-	eerror "       ${myservice} without arguments for full help"
+	eerror $"${myline}}"
+	eerror $"       ${myservice} without arguments for full help"
 }
 
 stop() {
@@ -70,7 +77,7 @@
 }
 
 start() {
-	eerror "ERROR:  \"${myservice}\" does not have a start function."
+	eerror $"ERROR:  \"${myservice}\" does not have a start function."
 	# Return failure so the symlink doesn't get created
 	return 1
 }
@@ -95,7 +102,7 @@
 	then
 		if [ "${RC_QUIET_STDOUT}" != "yes" ]
 		then
-			eerror "ERROR:  \"${myservice}\" has not yet been started."
+			eerror $"ERROR:  \"${myservice}\" has not yet been started."
 			return 1
 		else
 			return 0
@@ -115,7 +122,7 @@
 	   [ "${SOFTLEVEL}" != "reboot" -a "${SOFTLEVEL}" != "shutdown" -a \
 	     "${SOFTLEVEL}" != "single" ]
 	then
-		ewarn "WARNING:  you are stopping a boot service."
+		ewarn $"WARNING:  you are stopping a boot service."
 	fi
 	
 	if [ "${svcpause}" != "yes" ]
@@ -194,8 +201,8 @@
 
 	if [ "${retval}" -ne 0 ]
 	then
-		eerror "ERROR:  problems stopping dependent services."
-		eerror "        \"${myservice}\" is still up."
+		eerror $"ERROR:  problems stopping dependent services."
+		eerror $"        \"${myservice}\" is still up."
 	else
 		# Now that deps are stopped, stop our service
 		(filter_environ; stop)
@@ -301,17 +308,17 @@
 		
 		if [ "${startfail}" = "yes" ]
 		then
-			eerror "ERROR:  Problem starting needed services."
-			eerror "        \"${myservice}\" was not started."
+			eerror $"ERROR:  Problem starting needed services."
+			eerror $"        \"${myservice}\" was not started."
 			retval=1
 		fi
 		
 		# Start service
 		if [ "${retval}" -eq 0 ] && broken "${myservice}" &>/dev/null
 		then
-			eerror "ERROR:  Some services needed are missing.  Run"
-			eerror "        './${myservice} broken' for a list of those"
-			eerror "        services.  \"${myservice}\" was not started."
+			eerror $"ERROR:  Some services needed are missing.  Run"
+			eerror $"        './${myservice} broken' for a list of those"
+			eerror $"        services.  \"${myservice}\" was not started."
 			retval=1
 		elif [ "${retval}" -eq 0 ] && ! broken "${myservice}" &>/dev/null
 		then
@@ -336,7 +343,7 @@
 	else
 		if [ "${RC_QUIET_STDOUT}" != "yes" ]
 		then
-			ewarn "WARNING:  \"${myservice}\" has already been started."
+			ewarn $"WARNING:  \"${myservice}\" has already been started."
 		fi
 		
 		return 0
@@ -364,14 +371,14 @@
 	then
 		if [ "${RC_QUIET_STDOUT}" != "yes" ]
 		then
-			einfo "status:  started"
+			einfo $"status:  started"
 		else
 			return 0
 		fi
 	else
 		if [ "${RC_QUIET_STDOUT}" != "yes" ]
 		then
-			eerror "status:  stopped"
+			eerror $"status:  stopped"
 		else
 			return 1
 		fi
@@ -381,7 +388,7 @@
 }
 
 wrap_rcscript "${myscript}" || {
-	eerror "ERROR:  \"${myscript}\" has syntax errors in it; not executing..."
+	eerror $"ERROR:  \"${myscript}\" has syntax errors in it; not executing..."
 	exit 1
 }
 
@@ -417,7 +424,7 @@
 	done
 	
 	# If we're here, then the function wasn't in $opts.
-	eerror "ERROR:  wrong args. (  "${arg}" / $* )"
+	eerror $"ERROR:  wrong args. (  "${arg}" / $* )"
 	# Do not quote this either ...
 	usage ${opts}
 	exit 1
@@ -426,7 +433,7 @@
 shift
 if [ "$#" -lt 1 ]
 then
-	eerror "ERROR:  not enough args."
+	eerror $"ERROR:  not enough args."
 	usage ${opts}
 	exit 1
 fi
@@ -460,7 +467,7 @@
 	zap)
 		if service_started "${myservice}"
 		then
-			einfo "Manually resetting ${myservice} to stopped state."
+			einfo $"Manually resetting ${myservice} to stopped state."
 			mark_service_stopped "${myservice}"
 		fi
 		;;
@@ -480,9 +487,9 @@
 			     -z "$(egrep 'svc_start' "/etc/init.d/${myservice}")" ]
 			then
 				echo
-				ewarn "Please use 'svc_stop; svc_start' and not 'start; stop' to"
-				ewarn "restart the service in its custom 'restart()' function."
-				ewarn "Run ${myservice} without arguments for more info."
+				ewarn $"Please use 'svc_stop; svc_start' and not 'start; stop' to"
+				ewarn $"restart the service in its custom 'restart()' function."
+				ewarn $"Run ${myservice} without arguments for more info."
 				echo
 				svc_restart
 			else
