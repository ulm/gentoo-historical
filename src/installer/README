Gentoo Linux Installer README
Copyright 2004 Gentoo Technologies, Inc.
$Header: /var/cvsroot/gentoo/src/installer/README,v 1.3 2004/04/11 21:47:21 esammer Exp $

The Gentoo Linux Installer (or GLI) is a consistent installer for all
architectures supported by Gentoo itself. The final installer will support
multiple UIs including plain text, curses, GTK, Qt, and others.

Project pages and information:

http://www.gentoo.org/proj/en/releng/installer/

Reporting bugs:

Please file all bug reports at http://bugs.gentoo.org
Please make sure you select "Gentoo Linux" as the product and "GLI" as the
component. (GLI is for Gentoo Linux Installer.) Make sure you include as much
relevant information as possible about your system.

Contacting Us:

Most of the time, the developers can be found on irc.freenode.net in the
#gentoo-installer channel. Come by and chat.

There is also an official mailing list for discussion. Send an email to
gentoo-installer@lists.gentoo.org to subscribe. Follow the directions you
receive back.

Coding Guidelines:

If you'd like to contribute code, we ask that certain coding guidelines be
followed to keep all code consistent, neat, and clean. These are not to
punish or be overly controlling, but to promote readability and overall
consistency. The following are the current "rules of engagement" when
dealing with code:

1. Class names should be StudlyCaps using complete words such as
InstallProfile, or ClientConfiguration. All classes should be "new style"
Python classes (inherit from "object").

2. All source files should be in the form of GLISomeClassName.py. This is
to keep our modules and classes separate.

3. All source files should have a header like that of
src/GLIInstallProfile.py which is already in the tree.

4. All instance variables should be "private" such as _filename or
_username and use underscores ('_') to separate words such as
_chroot_directory or _syslog_daemon. All instance variables should be
nouns (check exceptions with devs in #gentoo-installer).

5. Methods should use the same capitalization and word separation as
instance variables. If a method is an accessor (gets or sets a specific
instance variable) it should use the get_<instance var name> and
set_<instance var name> naming. All method names should be verbs (check
exceptions with devs in #gentoo-installer).

6. Public instance variables are bad. Please encapsulate all code.

7. Instance variables should be defined (or bound) as class scope and
initialized in __init__ as appropriate. Please keep all dynamic and
decentralized definitions to a minimum.

8. Keep abbreviations to a minimum - what is obvious to you is not to
everyone else. Please be aware that not all developers and users are
native English speakers.

9. When in doubt, check with the other devs in #gentoo-installer.

10. There are always exceptions to the rules, but please do not assume
your code is the exception. New guidelines will be listed here.

