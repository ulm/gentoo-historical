<? include /webgli/common.pyhtml ?>
<?
error_msg = ""
if self.post_params:
	cflags = ""
	features = ""
	etc_files = self.shared_info.install_profile.get_etc_files()
	if etc_files.has_key("make.conf"):
		make_conf = etc_files['make.conf']
		if "CFLAGS" in make_conf:
			cflags = make_conf['CFLAGS']
		if "FEATURES" in make_conf:
			features = make_conf['FEATURES']
	else:
		make_conf = {}
	if self.post_params['proc'] and self.post_params['m_thing']:
		cflags += " "+self.post_params['m_thing']+"="+self.post_params['proc']
	if self.post_params['optim1']:
		cflags += " "+self.post_params['optim1']
	if self.post_params['optim2']:
		if isinstance(self.post_params['optim2'], list):
			for param in self.post_params['optim2']:
				cflags += " "+param
		else:
			cflags += " "+self.post_params['optim2']
	if self.post_params['optim3']:
		cflags += " "+self.post_params['optim3']
	make_conf['CFLAGS'] = cflags
	if self.post_params['chost']:
		make_conf['CHOST'] = self.post_params['chost']
	if self.post_params['unstable']:
		make_conf['ACCEPT_KEYWORDS'] = "~" + self.shared_info.client_profile.get_architecture_template()
	if self.post_params['features']:
		if isinstance(self.post_params['features'], list):
			features = " ".join(self.post_params['features'])
		else:
			features = self.post_params['features']
	if self.post_params['manfeatures']:
		features += " "+self.post_params['manfeatures']
	if "distcc" in features:
		#Add distcc to the services list.
		if self.shared_info.install_profile.get_services():
			services = self.shared_info.install_profile.get_services()
			if isinstance(services, str):
				services = services.split(',')
		else:
			services = []
		if not "distccd" in services:
			services.append("distccd")
		try:
			services = ",".join(services)
			if services:
				self.shared_info.install_profile.set_services(None, services, None)
		except:
			error_msg = _(u"ERROR! Could not set the services list.")
		#Set the distcc flag to emerge earlier than other packages.
		try:
			self.shared_info.install_profile.set_install_distcc(None, True, None)
		except:
			error_msg = _(u"ERROR! Could not set the install distcc flag!")
		if self.post_params['distcc']:
			try:
				make_conf['DISTCC_HOSTS'] = self.post_params['distcc']
			except:
				error_msg = "ERROR! Could not set the distcc hosts!"
	make_conf['FEATURES'] = features
	if self.post_params['makeopts']:
		make_conf['MAKEOPTS'] = self.post_params['makeopts']
	try:
		if make_conf:
			etc_files['make.conf'] = make_conf
			self.shared_info.install_profile.set_etc_files(etc_files)
	except:
		error_msg = _(u"ERROR! Could not set the make_conf correctly!")
	if not error_msg:
		error_msg = "Values saved successfully"

arch_procs = { 'x86': ("i386", "i486", "i586", "pentium", "pentium-mmx", "i686", "pentiumpro", "pentium2", "pentium3", "pentium3m", "pentium-m", "pentium4", "pentium4m", "prescott", "nocona", "k6", "k6-2", "k6-3", "athlon", "athlon-tbird", "athlon-4", "athlon-xp", "athlon-mp", "k8", "opteron", "athlon64", "athlon-fx", "winchip-c6", "winchip2", "c3", "c3-2") }
etc_files = self.shared_info.install_profile.get_etc_files()
if etc_files.has_key("make.conf"):
	make_conf = etc_files['make.conf']
else:
	make_conf = {}
procs = arch_procs[self.shared_info.client_profile.get_architecture_template()]
?>
<b>Make.conf Settings:</b><br>
<: if error_msg:
<br><% error_msg %><br><br>
:>
<: if self.shared_info.install_profile.get_dynamic_stage3():
<b>You have selected a dynamic stage3 installation.  This setting forbids you from changing some make.conf settings until after the installation to prevent breaking the stage3 creation process.</b>
:>
<b>NOTE: Your old values are NOT loaded here.  Do not save these settings without making sure all values are what you want.  To keep your old values just skip this step.</b>
<form action="/webgli/makedotconf.pyhtml" method="POST" enctype="multipart/form-data">
<h3>CFLAGS Settings: </h3>
(only show these if not dynamic):
<table width="100%" border="1">
  <tr>
    <td scope="col"><div align="left">Processor:<select name="proc" id="proc">
<: for proc in procs:
      <option value="<% proc %>"><% proc %></option>
:>
      </select><br><input type="radio" name"m_thing" value="-march">-march <input type="radio" name"m_thing" value="-mcpu">-mcpu <input type="radio" name"m_thing" value="-mtune">-mtune </div></td>
    <td scope="col">Optimizations: <select name="optim1" id="optim1">
<: for i in range(1, 9):
      <option value="-O<% str(i) %>">-O<% str(i) %><? if i == 2: print " (Recommended)" ?></option>
:>
      </select></td>
  </tr>
  <tr>
    <td>Common CFLAGS:<br><input name="optim2" type="checkbox" id="optim2" value="-pipe">-pipe<br><input name="optim2" type="checkbox" id="optim2" value="-fomit-frame-pointer">-fomit-frame-pointer</td>
    <td>Additional CFLAGS: <input name="optim3" type="text" id="optim3" size="60"></td>
  </tr>
</table>
<hr>
<h3>CHOST Setting:</h3>
<select name="chost" size="4" id="chost" <? if self.shared_info.install_profile.get_dynamic_stage3(): print "disabled" ?>>
<?
arch_chost_options = { "x86": ('i386-pc-linux-gnu', 'i486-pc-linux-gnu', 'i586-pc-linux-gnu', 'i686-pc-linux-gnu'),
                       "amd64": ('x86_64-pc-linux-gnu',),
                       "alpha": ('alpha-unknown-linux-gnu',),
                       "ppc": ('powerpc-unknown-linux-gnu',),
                       "ppc64": ('powerpc64-unknown-linux-gnu',),
                       "sparc": ('sparc-unknown-linux-gnu',),
                       "sparc64": ('sparc-unknown-linux-gnu',),
                       "hppa": ('hppa1.1-unknown-linux-gnu', 'hppa2.0-unknown-linux-gnu'),
                       "mips": ('mips-unknown-linux-gnu',) }
?>
<: for arch_chost_option in arch_chost_options[self.shared_info.client_profile.get_architecture_template()]:
<option value="<% arch_chost_option %>"><% arch_chost_option %></option>
:>
</select>
<hr>
<table width="100%"  border="1">
  <tr>
    <td scope="col"><input name="unstable" type="checkbox" id="unstable" value="unstable" <? if self.shared_info.install_profile.get_dynamic_stage3(): print "disabled" ?>>	Use unstable (~arch) </td>
    <td scope="col"><input name="features" type="checkbox" id="binary" value="buildpkg"> Build binary packages (buildpkg)</td>
    <td scope="col"><input name="features" type="checkbox" id="ccache" value="ccache"> ccache</td>
    <td scope="col"><input name="features" type="checkbox" id="sandbox" value="sandbox"> sandbox</td>
  </tr>
  <tr>
    <td scope="col"><input name="features" type="checkbox" id="distlocks" value="distlocks"> distlocks</td>
    <td scope="col"><input name="features" type="checkbox" id="prelink" value="prelink"> prelink</td>
    <td scope="col">More Features: <input name="manfeatures" type="text" id="manfeatures" size="10"></td>
    <td scope="col">MAKEOPTS: <input name="makeopts" type="text" id="makeopts" value="-j2" size="10" maxlength="5"></td>
  </tr>
  <tr>
    <td scope="col"><input name="features" type="checkbox" id="distcc" value="distcc"> Distcc</td>
    <td>Distcc Config Line:<input name="distcc" type="text" size="80"></td>
  </tr>
</table>
<p>
<input name="savemakeconf" type="submit" id="savemakeconf" value="Save Make.Conf Settings">
</p>
</form>
<? return_content = self.wrap_in_webgli_template(return_content) ?>
