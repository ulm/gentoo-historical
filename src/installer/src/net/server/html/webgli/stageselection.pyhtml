<? include /webgli/common.pyhtml ?>
<?
error_msg = ""
if self.post_params:
	if 'savestage' in self.post_params:
#		print "YES I CLICKED SAVE<br>"
		if 'stage' in self.post_params:
#			print "YES THERE IS A STAGE<br>"
			if self.post_params['stage'] == "3+GRP":
				self.post_params['stage'] = "3"
				try:
					self.shared_info.install_profile.set_grp_install(None, True,None)
				except:
					error_msg = "ERROR COULD NOT SET GRP INSTALL"
			else:
				try:
					self.shared_info.install_profile.set_grp_install(None, False,None)
				except:
					error_msg = "ERROR COULD NOT SET GRP INSTALL"
			try:
				self.shared_info.install_profile.set_install_stage(None, self.post_params['stage'], None)
#				data += "Stage set<br>"
			except:
				error_msg = "ERROR: could not set the install stage"
		if 'tarballuri' in self.post_params and self.post_params['tarballuri']:
			try:
				self.shared_info.install_profile.set_stage_tarball_uri(None, self.post_params['tarballuri'], None)
#				data += "Set the tarball uri<br>"
			except:
				error_msg = "ERROR: Could not set the tarball URI"
		if 'dynamic' in self.post_params:
			try:
				self.shared_info.install_profile.set_dynamic_stage3(None, True, None)
				self.shared_info.install_profile.set_portage_tree_sync_type(None,"snapshot", None)
				cd_snapshot_uri = GLIUtility.get_cd_snapshot_uri()
				self.shared_info.install_profile.set_portage_tree_snapshot_uri(None, cd_snapshot_uri, None)
			except:
				error_msg = "ERROR: Could not set dynamic stage 3."
		else:
			try:
				self.shared_info.install_profile.set_dynamic_stage3(None, False, None)
			except:
				error_msg = "ERROR: Could not set dynamic stage 3.<br>\n"

stage = self.shared_info.install_profile.get_install_stage()
grp_install = self.shared_info.install_profile.get_grp_install()
dynamic = self.shared_info.install_profile.get_dynamic_stage3()
tarball = self.shared_info.install_profile.get_stage_tarball_uri()
?>
<h4>Stage selection:</h4>
<: if error_msg:
<br><br><% error_msg %><br><br>
:>
<: if stage:
FOUND A STAGE<% str(stage) %>
:>
<form name="stage" action="/webgli/stageselection.pyhtml" method="POST" enctype="multipart/form-data">
<p>Which stage do you want to start at?</p>
<table width="100%"  border="1">
  <tr>
    <td><input name="stage" type="radio" value="1" <? if stage == 1: print 'checked' ?>>1</td>
    <td>Stage1 is used when you want to bootstrap&amp;build from scratch.</td>
  </tr>
  <tr>
    <td><input name="stage" type="radio" value="2" <? if stage == 2: print 'checked' ?>>2</td>
    <td>Stage2 is used for building from a bootstrapped semi-compiled state.</td>
  </tr>
  <tr>
    <td><input name="stage" type="radio" value="3" <? if (stage == 3) and not grp_install: print 'checked' ?>>3</td>
    <td>Stage3 is a basic system that has been built for you (no compiling).</td>
  </tr>
  <tr>
    <td><input name="stage" type="radio" value="3+GRP" <?if (stage == 3) and grp_install: print 'checked' ?>>3 + GRP </td>
    <td>A Stage3 install but using binaries from the LiveCD when able.</td>
  </tr>
</table>
<p>  
<input name="dynamic" type="checkbox" id="dynamic" value="true" <? if dynamic: print "checked" ?>>
Generate a dynamic stage3 on the fly using the files on the LiveCD? (faster for slow Internet connections, slower for fast connections and slow drives) </p>
<p>Stage Tarball URI: <input name="tarballuri" type="text" id="tarballuri" size="90" value="<% tarball %>"> or 
<input type="button" value="Browse the mirrors for the URL" onClick="window.open('/webgli/URIBrowser?screen=stage&baseuri=' + document.stage.tarballuri.value, 'uribrowser', 'width=500,height=500,toolbars=no,statusbar=no,menubar=no,scrollbars=yes')">
(requires net connectivity)</p>
<p><input type="submit" name="savestage" value="Save Stage Selection">
</form>
<? return_content = self.wrap_in_webgli_template(return_content) ?>
