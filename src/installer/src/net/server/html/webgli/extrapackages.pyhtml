	def extrapackages(self):
		data = ""
		grp_list = GLIUtility.get_grp_pkgs_from_cd()
		if self.post_params['packages']:
			try:
				packages = string.join(self.post_params['packages'], ' ')
				if packages:
					self.shared_info.install_profile.set_install_packages(None, packages, None)
			except:
				data += _(u"ERROR! Could not set the install packages! <br>\n")
		if self.post_params['manualpackages']:
			try:
				packages = self.post_params['manualpackages']
				if packages:
					self.shared_info.install_profile.set_install_packages(None, packages, None)
			except:
				data += _(u"ERROR! Could not set the manual install packages! <br>\n")
		if self.shared_info.install_profile.get_install_packages():
			install_packages = self.shared_info.install_profile.get_install_packages()
			if isinstance(install_packages, str):
				install_packages = install_packages.split()
		else:
			install_packages = []
		
		package_list = self.shared_info.install_profile.get_install_package_list()
		highlevel_menu = []
		for group in package_list:
			highlevel_menu.append( (group, package_list[group][0]) )
				
		data += """
		<script>
		</script>
		<form name="packages" action="/webgli/ExtraPackages" method="POST" enctype="multipart/form-data">
		"""
		for param in self.get_params:
			if "show" in param:  #this means it's a param referring to a group to show.  include it as a hidden so it'll get shown next time too.
				data += '<input type="hidden" name="'+param+'" value="'+self.get_params[param]+"\">\n"
		for param in self.post_params:
			if "show" in param:  #this means it's a param referring to a group to show.  include it as a hidden so it'll get shown next time too.
				if type(self.post_params[param]) == list:
					self.post_params[param] = self.post_params[param][-1]
				data += '<input type="hidden" name="'+param+'" value="'+self.post_params[param]+"\">\n"
		#Start the table
		data += "<h2>Extra Packages</h2>Your current package list is: "+string.join(install_packages, ',')
		data += '<table width="100%"  border="1">'
		for group_pair in highlevel_menu:
			group = group_pair[0]
			pkgs = package_list[group][1]
			#FIXME ADD x of y SELECTED TO HEADER
			if self.post_params['show_'+group] == "Expand":
				data += '<tr><th scope="col"><input type="submit" name="show_'+group+'" value="Collapse"></th><td><input type="checkbox" name="all_'+group+'" value="checkbox" '
				#CALCULATE IF ALL PACKAGES IN GROUP ARE IN INSTALL PACKAGES
				allpkgsfound = True
				for pkg in pkgs:
					if not pkg in install_packages:
						allpkgsfound = False
				if allpkgsfound:
					data += "checked"
				data += '>All</td><th scope="col">'+group+": "+group_pair[1]+"</th></tr>\n"
			
			else:   #show plus sign for group and no table.
				data += '<tr><th scope="col"><input type="submit" name="show_'+group+'" value="Expand"></th><td><input type="checkbox" name="all_'+group+'" value="checkbox" '
				#CALCULATE IF ALL PACKAGES IN GROUP ARE IN INSTALL PACKAGES
				allpkgsfound = True
				for pkg in pkgs:
					if not pkg in install_packages:
						allpkgsfound = False
				if allpkgsfound:
					data += "checked"
				data += '>All</td><th scope="col">'+group+": "+group_pair[1]+"</th></tr>\n"
			#now show the packages in the group
			if self.post_params['show_'+group] == "Expand" or self.get_params['show_'+group] == "Expand":
				for pkg in pkgs:
					data += '<tr><td></td>'
					data += '<td> <input type="checkbox" name="packages" value="'+pkg+'" '
					if pkg in install_packages:
						data += "checked"
					data += '>'+pkg+'</td><td>'+pkgs[pkg]+"</td></tr>\n"
			else:
				for pkg in pkgs:
					if pkg in install_packages:
						data += '<tr><td></td><td> <input type="checkbox" name="packages" value="'+pkg+'" checked>'+pkg+'</td><td>'+pkgs[pkg]+"</td></tr>\n"
			data += "\n</table>"
			data += '<br>Manually specify a list of packages (overwrites checked list):<input type="text" name="manualpackages"><br>'
			data += '<input type="submit" name="SavePackages" value="Save Packages"></form>'
		return self.wrap_in_webgli_template(data)
	def savepackages(self):
		data = ""
		return self.wrap_in_webgli_template(data)
	def users(self):
		data = """
		<script>
		function change_edituser() {
			for(i=0;i<document.Users.elements.length;i++) {
			if(document.Users.elements[i].name == "edituser" && document.Users.elements[i].checked) {
				location.replace('/webgli/Users?edituser='+ document.Users.elements[i].value);
						}
					}
		}
		function verify_pass() {
			if(document.Users.rootpass1.value != document.Users.rootpass2.value) {
				alert("Passwords DO NOT match!");
			}
			else {
				alert("Passwords match.");
			}
		}
		</script>"""
		users = {}
		for user in self.shared_info.install_profile.get_users():
			print str(user[0]) + "	 " + str(user[1]) + "		" + str(user[2]) + "	 " + str(user[3])
			users[user[0]] = (user[0], user[1], user[2], user[3], user[4], user[5], user[6])
		data += "<p>User Settings:</p>\n"
		data += '<form name="Users" method="post" action="/webgli/saveusers" enctype="multipart/form-data">'
		data += """<p>Users:</p>
			<table width="100%"  border="1">
			<tr>
				<th scope="col">Username</th>
				<th scope="col">Groups</th>
				<th scope="col">Shell</th>
				<th scope="col">Home Directory </th>
				<th scope="col">UserID</th>
				<th scope="col">Comment</th>
			</tr>"""
		for user in users:
			data += '<tr><td><input name="edituser" type="radio" value="'+users[user][0]+'">'
			data += users[user][0]+"</td><td>"
			for group in users[user][2]:
				data += group + ", "
			data += "</td><td>"+users[user][3]+"</td><td>"+users[user][4]+"</td><td>"+users[user][5]+"</td><td>"+users[user][6]+"</td></tr>\n"
		
		data += """</table><br>
				<input name="usereditsubmit" type="button" value="EDIT" onclick="change_edituser()">
				<input name="userdelsubmit" type="submit" value="DELETE">"""
		root_pass = self.shared_info.install_profile.get_root_pass_hash()
		if not root_pass:
			data += """<p>Root Password is not yet set! Please set it:<br>
				<input name="rootpass1" type="password" id="rootpass1">
			and retype to verify: 
			<input name="rootpass2" type="password" id="rootpass2">
			<input name="verifyrootpass" type="button" id="verifyrootpass" value="Verify!" onclick="verify_pass()">
			<input name="setrootpassword" type="submit" value="Set"></p>"""
		else:
			data += """<p>Root Password is set. 
				<input name="setrootpass" type="submit" id="setrootpass" value="Reset Root Password"></p>"""
		if self.get_params['edituser']:
			username = self.get_params['edituser']
			data += """
				<p>Edit user """+username+""":</p>
				<table width="100%"  border="1">
					<tr>
