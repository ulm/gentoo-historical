<? include /webgli/common.pyhtml ?>
<?
error_msg = ""
if self.post_params:
	if self.post_params['packages']:
		try:
			packages = " ".join(self.post_params['packages'])
			if packages:
				self.shared_info.install_profile.set_install_packages(None, packages, None)
		except:
			error_msg = _(u"ERROR! Could not set the install packages!")
	if self.post_params['manualpackages']:
		try:
			packages = self.post_params['manualpackages']
			if packages:
				self.shared_info.install_profile.set_install_packages(None, packages, None)
		except:
			error_msg = _(u"ERROR! Could not set the manual install packages!")
	if not error_msg:
		error_msg = "Values saved successfully"

if self.shared_info.install_profile.get_install_packages():
	install_packages = self.shared_info.install_profile.get_install_packages()
	if isinstance(install_packages, str):
		install_packages = install_packages.split()
else:
	install_packages = []
grp_list = GLIUtility.get_grp_pkgs_from_cd()
package_list = self.shared_info.install_profile.get_install_package_list()
highlevel_menu = []
for group in package_list:
	highlevel_menu.append( (group, package_list[group][0]) )
?>				
<form name="packages" action="/webgli/extrapackages.pyhtml" method="POST" enctype="multipart/form-data">
<: for param in self.get_params:
<: if "show" in param:  #this means it's a param referring to a group to show.  include it as a hidden so it'll get shown next time too.
<input type="hidden" name="<% param %>" value="<% self.get_params[param] %>">
:>
:>
<: for param in self.post_params:
<: if "show" in param:  #this means it's a param referring to a group to show.  include it as a hidden so it'll get shown next time too.
<? if type(self.post_params[param]) == list: self.post_params[param] = self.post_params[param][-1] ?>
<input type="hidden" name="<% param %>" value="<% self.post_params[param] %>">
:>
:>
<h2>Extra Packages</h2>
<: if error_msg:
<br><% error_msg %><br><br>
:>
Your current package list is: <% ",".join(install_packages) %>
<table width="100%" border="1">
<?
for group_pair in highlevel_menu:
	group = group_pair[0]
	pkgs = package_list[group][1]
	#FIXME ADD x of y SELECTED TO HEADER
	if self.post_params['show_'+group] == "Expand":
		print '<tr><th scope="col"><input type="submit" name="show_'+group+'" value="Collapse"></th><td><input type="checkbox" name="all_'+group+'" value="checkbox" '
		#CALCULATE IF ALL PACKAGES IN GROUP ARE IN INSTALL PACKAGES
		allpkgsfound = True
		for pkg in pkgs:
			if not pkg in install_packages:
				allpkgsfound = False
		if allpkgsfound:
			print "checked"
		print '>All</td><th scope="col">'+group+": "+group_pair[1]+"</th></tr>\n"
	else:   #show plus sign for group and no table.
		print '<tr><th scope="col"><input type="submit" name="show_'+group+'" value="Expand"></th><td><input type="checkbox" name="all_'+group+'" value="checkbox" '
		#CALCULATE IF ALL PACKAGES IN GROUP ARE IN INSTALL PACKAGES
		allpkgsfound = True
		for pkg in pkgs:
			if not pkg in install_packages:
				allpkgsfound = False
		if allpkgsfound:
			print "checked"
		print '>All</td><th scope="col">'+group+": "+group_pair[1]+"</th></tr>\n"
	#now show the packages in the group
	if self.post_params['show_'+group] == "Expand" or self.get_params['show_'+group] == "Expand":
		for pkg in pkgs:
			print '<tr><td></td>'
			print '<td> <input type="checkbox" name="packages" value="'+pkg+'" '
			if pkg in install_packages:
				print "checked"
			print '>'+pkg+'</td><td>'+pkgs[pkg]+"</td></tr>\n"
	else:
		for pkg in pkgs:
			if pkg in install_packages:
				print '<tr><td></td><td> <input type="checkbox" name="packages" value="'+pkg+'" checked>'+pkg+'</td><td>'+pkgs[pkg]+"</td></tr>\n"
# This was indented one level further...probably wrong AG
print "\n</table>"
print '<br>Manually specify a list of packages (overwrites checked list):<input type="text" name="manualpackages"><br>'
print '<input type="submit" name="SavePackages" value="Save Packages"></form>'
?>
<? return_content = self.wrap_in_webgli_template(return_content) ?>
