	def savelocaluse(self):
		data = ""
		temp_use = " "
		if self.post_params['flags']:
			if isinstance(self.post_params['flags'], list):
				use_local_flags = self.post_params['flags']
				for flag in use_local_flags:
					temp_use += flag + " "
			else:
				tempuse += self.post_params['flags'] + " "
		#get the make.conf
		etc_files = self.shared_info.install_profile.get_etc_files()
		if etc_files.has_key("make.conf"):
			make_conf = etc_files['make.conf']
		else:
			make_conf = {}
		make_conf["USE"] = self.shared_info.temp_use + temp_use
		etc_files['make.conf'] = make_conf
		self.shared_info.install_profile.set_etc_files(etc_files)
		return self.wrap_in_webgli_template(data)
	def makedotconf(self):
		data = "<b>Make.conf Settings:</b><br>\n"
		if self.shared_info.install_profile.get_dynamic_stage3():
			data += "<b>You have selected a dynamic stage3 installation.  This setting forbids you from changing some make.conf settings until after the installation to prevent breaking the stage3 creation process.</b>"
		data += "<b>NOTE: Your old values are NOT loaded here.  Do not save these settings without making sure all values are what you want.  To keep your old values just skip this step.</b>\b"
		data += '<form action="/webgli/savemakedotconf" method="POST" enctype="multipart/form-data">'
		arch_procs = { 'x86': ("i386", "i486", "i586", "pentium", "pentium-mmx", "i686", "pentiumpro", "pentium2", "pentium3", "pentium3m", "pentium-m", "pentium4", "pentium4m", "prescott", "nocona", "k6", "k6-2", "k6-3", "athlon", "athlon-tbird", "athlon-4", "athlon-xp", "athlon-mp", "k8", "opteron", "athlon64", "athlon-fx", "winchip-c6", "winchip2", "c3", "c3-2") }
		etc_files = self.shared_info.install_profile.get_etc_files()
		if etc_files.has_key("make.conf"):
			make_conf = etc_files['make.conf']
		else:
			make_conf = {}
		
		data += '<h3>CFLAGS Settings: </h3>(only show these if not dynamic):<table width="100%"  border="1"><tr><td scope="col"><div align="left">Processor:<select name="proc" id="proc">'
		procs = arch_procs[self.shared_info.client_profile.get_architecture_template()]
		for proc in procs:
			data += "<option value=\""+proc+"\">"+proc+"</option>\n"
		data += """
					</select>
					<br>
					<input type="radio" name"m_thing" value="-march">-march 
					<input type="radio" name"m_thing" value="-mcpu">-mcpu 
					<input type="radio" name"m_thing" value="-mtune">-mtune 

			</div></td>
			<td scope="col">Optimizations: 
				<select name="optim1" id="optim1">
					<option value="-O1">-O1</option>
					<option value="-O2" selected>-O2 (Recommended)</option>
					<option value="-O3">-O3</option>
					<option value="-O4">-O4</option>
					<option value="-O5">-O5</option>
					<option value="-O6">-O6</option>
					<option value="-O7">-O7</option>
					<option value="-O8">-O8</option>
					<option value="-O9">-O9 (You crazy fool!)</option>
						</select> </td>
		</tr>
		<tr>
			<td>Common CFLAGS:<br> 
				<input name="optim2" type="checkbox" id="optim2" value="-pipe">
-pipe<br>
<input name="optim2" type="checkbox" id="optim2" value="-fomit-frame-pointer">-fomit-frame-pointer</td>
			<td>Additional CFLAGS:
			<input name="optim3" type="text" id="optim3" size="60"></td>
		</tr>
	</table><hr>
	<h3>CHOST Setting:</h3>
		<select name="chost" size="4" id="chost" """
		if self.shared_info.install_profile.get_dynamic_stage3():
			data += "disabled>"
		else:
			data += ">"
		if self.shared_info.client_profile.get_architecture_template() == "x86":
			data += "<option value=\"i386-pc-linux-gnu\">i386-pc-linux-gnu</option>\n"
			data += "<option value=\"i486-pc-linux-gnu\">i486-pc-linux-gnu</option>\n"
			data += "<option value=\"i586-pc-linux-gnu\">i586-pc-linux-gnu</option>\n"
			data += "<option value=\"i686-pc-linux-gnu\">i686-pc-linux-gnu</option>\n"
		if self.shared_info.client_profile.get_architecture_template() == "amd64":
			data += "<option value=\"x86_64-pc-linux-gnu\">x86_64-pc-linux-gnu</option>\n"
		if self.shared_info.client_profile.get_architecture_template() == "alpha":
			data += "<option value=\"alpha-unknown-linux-gnu\">alpha-unknown-linux-gnu</option>\n"
		if self.shared_info.client_profile.get_architecture_template() == "ppc":
			data += "<option value=\"powerpc-unknown-linux-gnu\">powerpc-unknown-linux-gnu</option>\n"		
		if self.shared_info.client_profile.get_architecture_template() == "ppc64":
			data += "<option value=\"powerpc64-unknown-linux-gnu\">powerpc64-unknown-linux-gnu</option>\n"		
		if self.shared_info.client_profile.get_architecture_template() in ["sparc", "sparc64"]:
			data += "<option value=\"sparc-unknown-linux-gnu\">sparc-unknown-linux-gnu</option>\n"		
		if self.shared_info.client_profile.get_architecture_template() == "hppa":
			data += "<option value=\"hppa-unknown-linux-gnu\">hppa-unknown-linux-gnu</option>\n"
			data += "<option value=\"hppa1.1-unknown-linux-gnu\">hppa1.1-unknown-linux-gnu</option>\n"
			data += "<option value=\"hppa2.0-unknown-linux-gnu\">hppa2.0-unknown-linux-gnu</option>\n"
		if self.shared_info.client_profile.get_architecture_template() == "mips":
			data += "<option value=\"mips-unknown-linux-gnu\">mips-unknown-linux-gnu</option>\n"
		data += """</select>
<hr>
	<table width="100%"  border="1">
		<tr>
			<td scope="col"><input name="unstable" type="checkbox" id="unstable" value="unstable" """
		if self.shared_info.install_profile.get_dynamic_stage3():
			data += "disabled"
		data += """>
			Use unstable (~arch) </td>
			<td scope="col"><input name="features" type="checkbox" id="binary" value="buildpkg">
			Build binary packages (buildpkg)</td>
			<td scope="col"><input name="features" type="checkbox" id="ccache" value="ccache">
			ccache</td>
			<td scope="col"><input name="features" type="checkbox" id="sandbox" value="sandbox">
			sandbox</td></tr><tr>
			<td scope="col"><input name="features" type="checkbox" id="distlocks" value="distlocks">
			distlocks</td>
			<td scope="col"><input name="features" type="checkbox" id="prelink" value="prelink">
			prelink</td>
			<td scope="col">More Features:
			<input name="manfeatures" type="text" id="manfeatures" size="10"></td>
			<td scope="col">MAKEOPTS:			 
			<input name="makeopts" type="text" id="makeopts" value="-j2" size="10" maxlength="5"></td>
		</tr>
		<tr><td scope="col"><input name="features" type="checkbox" id="distcc" value="distcc">
			Distcc</td><td>Distcc Config Line:<input name="distcc" type="text" size="80"></td>
		</tr>
	</table>
	<p>
		<input name="savemakeconf" type="submit" id="savemakeconf" value="Save Make.Conf Settings">
</p>
</form>"""
		return self.wrap_in_webgli_template(data)
	def savemakedotconf(self):
		data = ""
		cflags = ""
		features = ""
		etc_files = self.shared_info.install_profile.get_etc_files()
		if etc_files.has_key("make.conf"):
			make_conf = etc_files['make.conf']
			if "CFLAGS" in make_conf:
				cflags = make_conf['CFLAGS']
			if "FEATURES" in make_conf:
				features = make_conf['FEATURES']
		else:
			make_conf = {}
		if self.post_params['proc'] and self.post_params['m_thing']:
			cflags += " "+self.post_params['m_thing']+"="+self.post_params['proc']
		if self.post_params['optim1']:
			cflags += " "+self.post_params['optim1']
		if self.post_params['optim2']:
			if isinstance(self.post_params['optim2'], list):
				for param in self.post_params['optim2']:
					cflags += " "+param
			else:
				cflags += " "+self.post_params['optim2']
		if self.post_params['optim3']:
