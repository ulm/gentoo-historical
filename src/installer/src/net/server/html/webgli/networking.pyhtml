<? include /webgli/common.pyhtml ?>
<?
error_msg = ""
interfaces = self.shared_info.install_profile.get_network_interfaces()
if not interfaces:
	interfaces = {}
if self.post_params:
	if self.post_params['savenetwork']:
		try:
			self.shared_info.install_profile.set_network_interfaces(interfaces)
		except:
			error_msg = "ERROR: Could not set the network interfaces!<br>\n"
	elif self.post_params['AddIfaceSubmit']:
		#network interface
		if self.post_params['ifacemanual']:
			newnic = self.post_params['ifacemanual']
		elif self.post_params['ifacelist']:
			newnic = self.post_params['ifacelist']
		else:
			error_msg = "ERROR: No Network device selected<br>\n"
		#network type
		if self.post_params['Network_Type'] == "dhcp":
			if self.post_params['dhcp_options']:
				interfaces[newnic] = ('dhcp', self.post_params['dhcp_options'], None)
			else:
				interfaces[newnic] = ('dhcp', "",None)
			try:
				self.shared_info.install_profile.set_network_interfaces(interfaces)
			except:
				error_msg = "ERROR: Could not set interface DHCP<br>\n"
		elif self.post_params['Network_Type'] == "static":
			if 'ip' in self.post_params:
				newip = self.post_params['ip']
			if 'broadcast' in self.post_params:
				newbroadcast = self.post_params['broadcast']
			if 'netmask' in self.post_params:
				newnetmask = self.post_params['netmask']
			if 'gateway' in self.post_params:
				newgateway = self.post_params['gateway']
			try:
				interfaces[newnic] = (newip, newbroadcast, newnetmask)
				self.shared_info.install_profile.set_network_interfaces(interfaces)
			except:
				error_msg = "ERROR: Could not add the new interface."
	elif self.post_params['DelIfaceSubmit']:
		if self.post_params['EditIface']:
			try:
				iface = self.post_params['EditIface']
				del interfaces[iface]
				self.shared_info.install_profile.set_network_interfaces(interfaces)
			except:
				error_msg = "ERROR: Could not delete the interface.<BR>\n"	
		else:
			error_msg = "ERROR: No device selected to delete!<br>\n"
	if 'dnsserver' in self.post_params:
		try:
			self.shared_info.install_profile.set_dns_servers(None, self.post_params['dnsserver'], None)
		except:
			error_msg = "ERROR: Could not set the DNS Server<BR>\n"
	if 'http_proxy' in self.post_params:
		try:
			self.shared_info.install_profile.set_http_proxy(None, self.post_params['http_proxy'], None)
		except:
			error_msg = "ERROR: Could not set the HTTP Proxy IP<BR>\n"
	if 'ftp_proxy' in self.post_params:
		try:
			self.shared_info.install_profile.set_ftp_proxy(None, self.post_params['ftp_proxy'], None)
		except:
			error_msg = "ERROR: Could not set the FTP Proxy IP<BR>\n"
	if 'rsync_proxy' in self.post_params:
		try:
			self.shared_info.install_profile.set_rsync_proxy(None, self.post_params['rsync_proxy'], None)
		except:
			error_msg = "ERROR: Could not set the RSYNC Proxy IP<BR>\n"
	if not error_msg:
		error_msg = "Values saved successfully"

#interfaces = self.shared_info.install_profile.get_network_interfaces()
CC_iface = self.shared_info.client_profile.get_network_interface()
if CC_iface and (CC_iface not in interfaces):
	#The CC has a network config that's not already there.	Preload it.
	CC_net_type = self.shared_info.client_profile.get_network_type()
	if CC_net_type == 'dhcp':
		try:
			interfaces[CC_iface] = ('dhcp', self.shared_info.client_profile.get_network_dhcp_options(), None)
		except:
			pass
	else:
		try:
			interfaces[CC_iface] = (self.shared_info.client_profile.get_network_ip(), self.shared_info.client_profile.get_network_broadcast(), self.shared_info.client_profile.get_network_netmask())
		except:
			pass
?>
<script>
function change_editiface() {
  for(i=0;i<document.Networking.elements.length;i++) {
    if(document.Networking.elements[i].name == "EditIface" && document.Networking.elements[i].checked) {
      location.replace('/webgli/Networking?editiface='+ document.Networking.elements[i].value);
    }
  }
}
</script>
<: if error_msg:
<br><% error_msg %><br><br>
:>
<p>Devices:</p>
<form name="Networking" method="post" action="/webgli/networking.pyhtml" enctype="multipart/form-data">
<table width="100%" border="1">
  <tr>
    <th scope="col">Device</th>
    <th scope="col">IP Address </th>
    <th scope="col">Broadcast</th>
    <th scope="col">Netmask</th>
    <th scope="col">Gateway</th>
    <th scope="col">DHCP Options </th>
  </tr>
<: for iface in interfaces:
  <tr>
    <td><input type="radio" name="EditIface" value="<% iface %>"><% iface %></td>
<: if interfaces[iface][0] == 'dhcp':
    <td>DHCP</td>
    <td>x</td>
    <td>x</td>
    <td>x</td>
    <td><% interfaces[iface][1] %></td>
<: else:
    <td><% interfaces[iface][0] %></td>
    <td><% interfaces[iface][1] %></td>
    <td><% interfaces[iface][2] %></td>
    <td></td>
    <td>x</td>
:>
  </tr>
:>
</table>
<input name="EditIfaceSubmit" type="button" id="EditIfaceSubmit" value="EDIT" onclick="change_editiface()">
<input name="DelIfaceSubmit" type="submit" id="DelIfaceSubmit" value="DELETE">
<: if self.get_params['editiface']:
<? iface = self.get_params['editiface'] ?>
<input type="hidden" name="ifacemanual" value="<% iface %>">
<h3>Edit Interface <% iface %></h3>
<table>
  <tr>
    <td><select name="Network_Type" size="3"><option value="dhcp" <? if interfaces[iface][0] == "dhcp": print "selected" ?>>DHCP</option><option value="static" <? if interfaces[iface][0] != "dhcp": print "selected" ?>>Manual Config</option></select></td>
    <td>Networking Info for Manual Configurations:<br>
      Enter your IP address: <input name="ip" type="text" length="50" maxlength="15" value="<? if interfaces[iface][0] != "dhcp": print interfaces[iface][0] ?>"><br>
      Enter your Broadcast address: <input name="broadcast" type="text" length="50" maxlength="15" value="<? if interfaces[iface][0] != "dhcp": print interfaces[iface][1] ?>"><br>
      Enter your Netmask: <input name="netmask" type="text" length="50" maxlength="15" value="<? if interfaces[iface][0] != "dhcp": print interfaces[iface][2] ?>"><br>
    </td>
  </tr>
</table>
<input type="submit" value="Edit Network Device" name="AddIfaceSubmit">
<: else:
<h3>Add a new Interface:</h3>
<p>
<select name="ifacelist" id="ifacelist">
<: for device in GLIUtility.get_eth_devices():
<: if device not in interfaces:
<option value="<% device %>"><% device %>: <% GLIUtility.get_interface_realname(device) %></option>
:>
:>
</select> or type your own: <input name="ifacemanual" type="text" id="ifacemanual" size="10"></p>
<hr>
<table>
  <tr>
    <td><select name="Network_Type" size="3"><option value="dhcp">DHCP</option><option value="static">Manual Config</option></select></td>
    <td>Networking Info for Manual Configurations:<br>
      Enter your IP address: <input name="ip" type="text" length="50" maxlength="15" value="192.168."><br>
      Enter your Broadcast address: <input name="broadcast" type="text" length="50" maxlength="15" value=".255"><br>
      Enter your Netmask: <input name="netmask" type="text" length="50" maxlength="15" value="255.255.255.0"><br>
      <hr>Info for DHCP Configurations:<br>DHCP Options: <input type="text" name="dhcp_options" length="50">
    </td>
  </tr>
</table>
<input type="submit" value="Add Network Device" name="AddIfaceSubmit">
<hr>
:>
Enter your default gateway:
<table>
<?
default_gateway = self.shared_info.install_profile.get_default_gateway()
if default_gateway:
	gway_ip = default_gateway[1]
	gway_iface = default_gateway[0]
else:
	gway_iface = None
	gway_ip = ""
?>
<: if not interfaces:
You must configure a device first in order to set the default Gateway!<br>
:>
<: for iface in interfaces:
  <tr>
    <td><input type="radio" name="GatewayIface" value="<% iface %>" <? if iface == gway_iface: print "checked" ?>><% iface %></td>
  </tr>
:>
  <tr>
    <td>Address:<input name="gateway" type="text" length="50" maxlength="15" value="<% gway_ip %>"><br>
        Enter your DNS servers (space-separated): <input name="dnsserver" type="text" length="70" value="<% " ".join(self.shared_info.install_profile.get_dns_servers()) %>">
        <hr>Proxy Information (if necessary):<br>
        HTTP Proxy URI: <input name="http_proxy" type="text" length="70" value=""><br>
        FTP Proxy URI: <input name="ftp_proxy" type="text" length="70"  value=""><br>
        RSYNC Proxy URI: <input name="rsync_proxy" type="text" length="70"  value="">
        <p>Wireless stuff here. ESSID: Key:  </p>
        <p>Hostname: <input name="hostname" type="text" id="hostname"> </p>
        <p>Domainname: <input name="domainname" type="text" id="domainname"> </p>
        <p>NIS Domainname:  <input name="nisdomainname" type="text" id="nisdomainname"> </p>
        <p> <input name="savenetwork" type="submit" id="savenetwork" value="Save Network Information"></p>
    </td>
  </tr>
</table>
</form>
<? return_content = self.wrap_in_webgli_template(return_content) ?>
