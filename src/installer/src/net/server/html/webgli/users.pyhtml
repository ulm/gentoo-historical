	def users(self):
		data = """
		<script>
		function change_edituser() {
			for(i=0;i<document.Users.elements.length;i++) {
			if(document.Users.elements[i].name == "edituser" && document.Users.elements[i].checked) {
				location.replace('/webgli/Users?edituser='+ document.Users.elements[i].value);
						}
					}
		}
		function verify_pass() {
			if(document.Users.rootpass1.value != document.Users.rootpass2.value) {
				alert("Passwords DO NOT match!");
			}
			else {
				alert("Passwords match.");
			}
		}
		</script>"""
		users = {}
		for user in self.shared_info.install_profile.get_users():
			print str(user[0]) + "	 " + str(user[1]) + "		" + str(user[2]) + "	 " + str(user[3])
			users[user[0]] = (user[0], user[1], user[2], user[3], user[4], user[5], user[6])
		data += "<p>User Settings:</p>\n"
		data += '<form name="Users" method="post" action="/webgli/saveusers" enctype="multipart/form-data">'
		data += """<p>Users:</p>
			<table width="100%"  border="1">
			<tr>
				<th scope="col">Username</th>
				<th scope="col">Groups</th>
				<th scope="col">Shell</th>
				<th scope="col">Home Directory </th>
				<th scope="col">UserID</th>
				<th scope="col">Comment</th>
			</tr>"""
		for user in users:
			data += '<tr><td><input name="edituser" type="radio" value="'+users[user][0]+'">'
			data += users[user][0]+"</td><td>"
			for group in users[user][2]:
				data += group + ", "
			data += "</td><td>"+users[user][3]+"</td><td>"+users[user][4]+"</td><td>"+users[user][5]+"</td><td>"+users[user][6]+"</td></tr>\n"
		
		data += """</table><br>
				<input name="usereditsubmit" type="button" value="EDIT" onclick="change_edituser()">
				<input name="userdelsubmit" type="submit" value="DELETE">"""
		root_pass = self.shared_info.install_profile.get_root_pass_hash()
		if not root_pass:
			data += """<p>Root Password is not yet set! Please set it:<br>
				<input name="rootpass1" type="password" id="rootpass1">
			and retype to verify: 
			<input name="rootpass2" type="password" id="rootpass2">
			<input name="verifyrootpass" type="button" id="verifyrootpass" value="Verify!" onclick="verify_pass()">
			<input name="setrootpassword" type="submit" value="Set"></p>"""
		else:
			data += """<p>Root Password is set. 
				<input name="setrootpass" type="submit" id="setrootpass" value="Reset Root Password"></p>"""
		if self.get_params['edituser']:
			username = self.get_params['edituser']
			data += """
				<p>Edit user """+username+""":</p>
				<table width="100%"  border="1">
					<tr>
					<td scope="col"><p>Username:
						<input name="newusername" type="text" id="newusername" """
			data += 'value="'+username+'">'
			data += '</p><p>Password (you must retype this):<input name="newuserpass" type="password"></p>'
			data += '<p>Shell (optional): <input name="newusershell" type="text" value="'+users[username][3]+'"></p>'
			data += '<p>Home Directory (optional): <input name="newuserhomedir" type="text" value="'+users[username][4]+'"></p>'
			data += '<p>UserID Number (optional): <input name="newuserid" type="text" value="'+users[username][5]+'"></p>'
			data += '<p>Comment (optional): <input name="newusercomment" type="text" value="'+users[username][6]+"\"></p></td>\n"
			data += '<td scope="col"><p>Groups:</p>'
			groups = string.join(users[username][2], ",")
			data += '<p>Manually specify (comma-separate)<input name="newusergroupsmanual" type="text" value="'+groups+'">'
			data += """
						</p>
						<input name="addnewuser" type="submit" id="addnewuser" value="Save Changes">
					</td>
					</tr>
				</table>"""
		else:
			data += """
				<p>Add a new user:</p>
				<table width="100%"  border="1">
					<tr>
					<td scope="col"><p>Username:
						<input name="newusername" type="text" id="newusername">
					</p>
					<p>Password:
						<input name="newuserpass" type="password" id="newuserpass">
					</p>
					<p>Shell (optional): 
						<input name="newusershell" type="text" id="newusershell">
					</p>
					<p>Home Directory (optional): 
						<input name="newuserhomedir" type="text" id="newuserhomedir">
					</p>
					<p>UserID Number (optional): 
						<input name="newuserid" type="text" id="newuserid">
					</p>
					<p>Comment (optional): 
						<input name="newusercomment" type="text" id="newusercomment">
					</p></td>
					<td scope="col"><p>Groups:</p>
						<p><input name="newusergroups" type="checkbox" id="newusergroups" value="users"> users<br>
						<input name="newusergroups" type="checkbox" id="newusergroups" value="wheel"> wheel<br>
						<input name="newusergroups" type="checkbox" id="newusergroups" value="audio"> audio<br>
						Manually specify (comma-separate)<input name="newusergroupsmanual" type="text" id="newusergroupsmanual">
						</p>
						<input name="addnewuser" type="submit" id="addnewuser" value="Add New User">
					</td>
					</tr>
				</table>"""
		data += "</form>"
		return self.wrap_in_webgli_template(data)
	def saveusers(self):
		data = ""
		users = {}
		for user in self.shared_info.install_profile.get_users():
			users[user[0]] = (user[0], user[1], user[2], user[3], user[4], user[5], user[6])
		if self.post_params['addnewuser']:
			if self.post_params['newusername'] and self.post_params['newuserpass']:
				newuser = self.post_params['newusername']
				newuserpass = self.post_params['newuserpass']
				groups = ()
				if self.post_params['newusergroupsmanual']:
					groups = string.split(self.post_params['newusergroupsmanual'], ",")
				elif self.post_params['newusergroups']:
					groups = self.post_params['newusergroups']
				if self.post_params['newusercomment']:
					newusercomment = self.post_params['newusercomment']
				else:
					newusercomment = ""
				if self.post_params['newuserid']:
					newuserid = self.post_params['newuserid']
				else:
					newuserid = ""
				if self.post_params['newuserhomedir']:
					newuserhomedir = self.post_params['newuserhomedir']
				else:
					newuserhomedir = "/home/"+newuser
				if self.post_params['newusershell']:
					newusershell = self.post_params['newusershell']
				else:
					newusershell = "/bin/bash"
				try:
					new_user = [newuser, GLIUtility.hash_password(newuserpass), groups, newusershell, newuserhomedir, newuserid, newusercomment]
					users[newuser] = new_user
					tmpusers = []
					for user in users:
						tmpusers.append(users[user])
					self.shared_info.install_profile.set_users(tmpusers)	
