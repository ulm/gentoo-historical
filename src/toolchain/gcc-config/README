gcc-config 2.0

gcc-config 2.0 is incompatible with previous versions of gcc-config.  A
migration path has not been implemented yet.

With gcc-config 2.0, the configuration options have expanded.  The wrapper now
uses the configuration find the execuatble to fork off rather than searching through
the $PATH.  Each CTARGET has a profile associated with it.  The CTARGET used by the wrapper
is determined by the first matching criteria:

1) If the executable is called with a prefix, it is used.
2) If the CHOST environment variable is set, it is used.
3) The default CTARGET is used.

configuration directory: /etc/gcc-config
All configuration information is stored in this directory.  The current config
format is as follows, but it is subject to change before release.

The selection file (/etc/gcc-config/selection.conf) lists the currently selected
profiles for each CTARGET handled by gcc-config.  It is formatted as follows:
[global]
	native_ctarget = <*default ctarget>
	scan_path = <0 or 1>
	use_abi = <0 or 1>

[<ctarget 1>]
	profile = <*version>/<*profile>

[<ctarget 2>]
...

Configuration file (for each installed gcc package) is named /etc/gcc-config/<version>.conf formatted as follows:
[global]
	version = <*version>
	binpath = <*binpath>
	infopath = <infopath>
	manpath = <manpath>
	stdcxx_incdir = <c++ include dir>
	alias_<alias> = <exec>
	bin_prefix = <prefix to binaries>

[<profile 1>]
	ctarget = <*default CTARGET>
	specs = <gcc spec file>
	ldpath = <path to add to ld.so.conf>
	cflags = <additional CFLAGS to prepend to the command line>

[<profile 2>]
...

Note that the <default CTARGET> in the profile section is only used as a way to tell the user what
this profile is used for.  It is the header under which this profile falls when the user issues 'gcc-config -l',
but it can be overwridden with the --ctarget=<ctarget> command line option to set <ctarget> in the selection.conf.
The <ctarget> set in selection.conf determines how the binaries act.  The <default ctarget> in selection.conf
determines how the binaries 'gcc', 'g++', etc (that is the ones without a prefix) behave.  Options with asterisks
next to them are required.  Empty values will be assumed for the rest if absent.

If bin_prefix is not set, it is assumed to be the ctarget of the first profile.

Example /etc/gcc-config/selection.conf:
[global]
	native_ctarget = i686-pc-linux-gnu

[i686-pc-linux-gnu]
	profile=i686-pc-linux-gnu-3.4.4/vanilla

Example /etc/gcc-config/i686-pc-linux-gnu-3.4.4.conf:
[global]
	version=i686-pc-linux-gnu-3.4.4
	binpath=/usr/i686-pc-linux-gnu/gcc-bin/3.4.4
	manpath=/usr/share/gcc-data/i686-pc-linux-gnu/3.4.4/man
	infopath=/usr/share/gcc-data/i686-pc-linux-gnu/3.4.4/info
	stdcxx_incdir = g++-v3
	bin_prefix=i686-pc-linux-gnu
	alias_cc = gcc

[vanilla]
	ctarget=i686-pc-linux-gnu
	ldpath=/usr/lib/gcc/i686-pc-linux-gnu/3.4.4
	specs=/usr/lib/gcc/i686-pc-linux-gnu/3.4.4/vanilla.spec

[hardened]
	ctarget=i686-pc-linux-gnu
	ldpath=/usr/lib/gcc/i686-pc-linux-gnu/3.4.4
	specs=/usr/lib/gcc/i686-pc-linux-gnu/3.4.4/hardened.spec
