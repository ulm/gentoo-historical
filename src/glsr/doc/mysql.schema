CREATE DATABASE {DB_NAME};

CREATE TABLE {TBL_PREFIX}user (
  user_id       MEDIUMINT(5) unsigned NOT NULL auto_increment,
  user_alias    VARCHAR(25)  NOT NULL,
  user_fullname VARCHAR(40)  NOT NULL,
  user_passwd   VARCHAR(32)  NOT NULL,
  user_email    VARCHAR(50)  NOT NULL,
  user_rank     MEDIUMINT(5) NOT NULL default '0',
  user_type     TINYINT(1)   unsigned NOT NULL default '0',
  user_joined   DATE         NOT NULL,
  user_lastip   VARCHAR(15)  NULL,
  user_language VARCHAR(100) NULL,
  user_location VARCHAR(100) NULL,
  user_website  VARCHAR(100) NULL,
  PRIMARY KEY(user_id),
  KEY category_id(category_id)
);

CREATE TABLE {TBL_PREFIX}category (
  category_id        SMALLINT(3)  unsigned NOT NULL auto_increment,
  category_name      VARCHAR(50)  NOT NULL,
  category_descr     VARCHAR(100) NULL,
  category_parent_id SMALLINT(3)  unsigned NOT NULL default '0',
  PRIMARY KEY(category_id),
  KEY category_id(category_id)
);

#
# Language Table
# This table stores programming languages and their settings.
#
CREATE TABLE {TBL_PREFIX}language (
  language_id             SMALLINT(3)  unsigned NOT NULL auto_increment,
  language_name           VARCHAR(50)  NOT NULL,
  language_descr          VARCHAR(100) NULL,
  language_def_keywords   VARCHAR(100) NULL,
  language_def_expr       VARCHAR(100) NULL,
  language_clo_expr       VARCHAR(100) NULL,
  language_clo_s_keywords VARCHAR(100) NULL,
  PRIMARY KEY(language_id),
  KEY language_id(language_id)
);

#
# Comment Table
# The comment table contains user submitted comments to scripts.
#
CREATE TABLE {TBL_PREFIX}comment (
  comment_id           MEDIUMINT(6) unsigned NOT NULL auto_increment,
  comment_submitter_id MEDIUMINT(5) unsigned NOT NULL,
  comment_script_id    MEDIUMINT(6) unsigned NOT NULL,
  comment_subscript_id INT(10)      unsigned NULL,
  comment_date         DATETIME     NULL,
  comment_lastedited   DATETIME     NULL,
  comment_subject      VARCHAR(30)  NULL,
  comment_body         TEXT         NOT NULL,
  PRIMARY KEY(comment_id),
  KEY comment_id(comment_id)
);

CREATE TABLE {TBL_PREFIX}script (
  script_id           MEDIUMINT(7) unsigned NOT NULL auto_increment,
  script_submitter_id MEDIUMINT(5) unsigned NOT NULL,
  script_category_id  SMALLINT(3)  unsigned NOT NULL,
  script_language_id  SMALLINT(3)  unsigned NOT NULL,
  script_rank         TINYINT(1)   NOT NULL default '0',
  script_name         VARCHAR(30)  NOT NULL,
  script_descr        VARCHAR(100) NOT NULL,
  PRIMARY KEY(script_id),
  KEY script_id(script_id)
);

CREATE TABLE {TBL_PREFIX}subscript (
  subscript_id         INT(10)      unsigned NOT NULL auto_increment,
  subscript_parent_id  MEDIUMINT(7) unsigned NOT NULL,
  subscript_version    VARCHAR(10)  NOT NULL,
  subscript_body       TEXT         NOT NULL,
  subscript_changelog  TEXT         NOT NULL,
  subscript_date       DATETIME     NULL,
  subscript_status     ENUM('draft', 'pending', 'published') DEFAULT 'draft',
  subscript_approved   TINYINT(1)   NOT NULL default '-1',
  subscript_approvedby MEDIUMINT(5) unsigned NULL,
  PRIMARY KEY(subscript_id),
  KEY subscript_id(subscript_id)
);

CREATE TABLE {TBL_PREFIX}session (
  session_id       VARCHAR(30)  NOT NULL,
  session_user_id  MEDIUMINT(5) unsigned NOT NULL,
  session_time     INT(10)      NOT NULL,
  session_keep     TINYINT(1)   unsigned NOT NULL default '0',
  session_restrict TINYINT(1)   unsigned NOT NULL default '0',
  PRIMARY KEY(session_id),
  KEY session_id(session_id)
);

#
# News Table
# This table stores news items that will be displayed on the front page
# of the repository when users visit the site.
#
CREATE TABLE {TBL_PREFIX}news (
  news_id        INT(10)      unsigned NOT NULL auto_increment,
  news_author_id MEDIUMINT(5) unsigned NOT NULL,
  news_date      DATETIME     NOT NULL,
  news_subject   VARCHAR(100) NOT NULL,
  news_body      TEXT         NOT NULL,
  PRIMARY KEY(news_id),
  KEY news_id(news_id)
);

CREATE TABLE {TBL_PREFIX}state (
  state_table_opt DATE NOT NULL
);

###############################################################################
# Data Insertions
# Do not modify the begin/end comments as they are used by the setup script as
# guides for data parsing.

# begin state-data-insert
INSERT INTO {TBL_PREFIX}state SET state_table_opt = now();
# end state-data-insert

# begin language-data-insert
{LOOP LANGUAGE_LOOP}
INSERT INTO {TBL_PREFIX}language (language_name, language_descr, language_def_keywords, language_def_expr, language_clo_expr, language_clo_s_keywords) VALUES ({LANGUAGE_LOOP.name}, {LANGUAGE_LOOP.descr}, {LANGUAGE_LOOP.def_keywords}, {LANGUAGE_LOOP.def_expr}, {LANGUAGE_LOOP.clo_expr}, {LANGUAGE_LOOP.clo_s_keywords});
{!LOOP}
# end language-data-insert

# begin user-data-insert
{LOOP USER_LOOP}
INSERT INTO {TBL_PREFIX}user (user_alias, user_fullname, user_passwd, user_email, user_rank, user_type, user_joined) VALUES ({USER_LOOP.alias}, {USER_LOOP.fullname}, {USER_LOOP.passwd}, {USER_LOOP.email}, {USER_LOOP.type}, {USER_LOOP.rank}, {USER_LOOP.joined})
{!LOOP}
# end user-data-insert