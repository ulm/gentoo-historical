Feature List:
----

User Features:

Note that each user type (i.e. Guest, Member, Admin) has all of the
functionality available to them that a less privileged member had (i.e. a
Member has all functionality that a Guest has, and an Admin has all of the
functionality that a Member has, plus their own).

 Guest:
  * Search Scripts
  * View Scripts
  * Download Scripts
   - Download a set of scripts by category
   - Download all revisions of a script.
   - Download only the head revision of a script
  * Create user account
  
 Member:
  * Login
  * Logout
  * Script Management
   - Add scripts
   - Change script categories and languages
   - Change script status
   - Delete Scripts?
  * Script rating
   - A member can rate a script. This gives scripts a rank.
  * Script monitoring
   - This would allow users to get notified when a new revision of a script
     is released or a comment is added to a script that they are monitorinig.
   - They would have a list of script 'favorites' or maybe some other term
     because 'favorites' makes me think of IE.
  * Add comments to scripts
  
 Admin
  * Script management (for other members' scripts and their own)
   - Delete scripts
   - Delete script comments
   - Re-categorize scripts and alter a scripts attributes, i.e. language
  * Script monitoring
   - The admin would be able to view who is monitoring which scripts and which
     scripts have the most people monitoring them and such.
  * Category management (add, remove, modify)
  * Language management (add, remove, modify)
  * Repo Configuration
   - Allow anonymous comments
   - Scripts require approval
   - etc.

----
Script Repository Features:

 Scripts
  * Each script will have the following attributes associated with it (items
    marked with a * (star) are not user editable):
   - Script ID*   
   - Submitter ID*
   - Revision number*
   - Creation Date*
   - Rank*
   - Name
!  - Obsoleted by (a new script that obsoletes this one)
   - Category (multiple?)
   - Language (multiple?)
   - Description

 Subscripts
  * Each script will have at least one subscript. A subscript is basically just
    a script revision. A subscript can be approved by an admin. Each subscript
    has the following attributes:
   - Body
   - Changelog
   - Date
   - Status (draft, pending, published)
   - Approved (Y/N)
   - Approved By (the user id of the admin who approved the script)

 Comments
  * Each script can have a number of user submitted comments. A comment is
    associated with a script, not a subscript. So when a script version changes
    the comments will stay the same.
  * A comment can be edited multiple times. It can only be edited by the
    original author or an admin.

 News
  * The script repository will allow news articles to be posted on the front
    page. This should probably be a configurable feature.
  * A news article is just a simple object with an author, date, subject, and
    body.
    
----

Other features:

 * Syntax highlighting
    I'm not certain how our current method of syntax highlighting works, but
    I think the general idea is that in the database we describe the languages
    keywords and such and then those are parsed.

    I suggest that we take a different approach. The MoinMoin wiki tool can
    handle syntax highlighting already. I suggest that we base our syntax
    highlighting implementation closely to moinmoin's. They already have
    highlighting ability for C++, Java, Pascal, and Python.

    I'll need to look a bit closer at their implementation, but it seems like
    it would be a relatively trivial task.

 * Syntax checking
   Some scripting languages already allow syntax checking. All compiled
   languages do this at compile time.
   - Python: I don't think the python interpreter can verify syntax, but
     pylint can to an extent.
   - Perl: 'perl -c' checks syntax only.

