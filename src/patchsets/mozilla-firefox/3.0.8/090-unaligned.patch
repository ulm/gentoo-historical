diff -ur mozilla.orig/toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp mozilla/toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp
--- mozilla.orig/toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp	2009-04-01 12:47:52.000000000 +0000
+++ mozilla/toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp	2009-04-01 12:48:38.000000000 +0000
@@ -332,7 +332,9 @@
             (mHaveComplete && mCompleteHash < entry.mCompleteHash));
   }
 
-  PRInt64 mId;
+  char __dummy_to_make_mid_aligned[4];
+
+  PRInt64 mId __attribute__ ((packed));
 
   nsUrlClassifierDomainHash mKey;
 
@@ -2023,8 +2025,9 @@
           return NS_ERROR_FAILURE;
         }
         const nsCSubstring& str = Substring(chunk, start, 4);
-        const PRUint32 *p = reinterpret_cast<const PRUint32*>(str.BeginReading());
-        entry->mAddChunkId = PR_ntohl(*p);
+        PRUint32 p;
+        memcpy(&p, reinterpret_cast<const PRUint32*>(str.BeginReading()), 4);
+        entry->mAddChunkId = PR_ntohl(p);
         if (entry->mAddChunkId == 0) {
           NS_WARNING("Received invalid chunk number.");
           return NS_ERROR_FAILURE;
@@ -2052,8 +2055,9 @@
 
         if (chunkType == CHUNK_SUB) {
           const nsCSubstring& str = Substring(chunk, start, 4);
-          const PRUint32 *p = reinterpret_cast<const PRUint32*>(str.BeginReading());
-          entry->mAddChunkId = PR_ntohl(*p);
+          PRUint32 p;
+          memcpy(&p, reinterpret_cast<const PRUint32*>(str.BeginReading()), 4);
+          entry->mAddChunkId = PR_ntohl(p);
           if (entry->mAddChunkId == 0) {
             NS_WARNING("Received invalid chunk number.");
             return NS_ERROR_FAILURE;
