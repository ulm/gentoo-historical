This patch removes the whole handling of altivec-optimized code in libmpeg2.
The code was generated by GCC 2.95 and it's suboptimal compared with current
compilers output, this way it allows to fix a few problems elseway present.

Thanks to Steffen Strobel for reporting and to PaX team for suggesting me the
way to fix this.
Index: xine-lib-1.1.2cvs20060328/src/libmpeg2/idct_altivec.c
===================================================================
--- xine-lib-1.1.2cvs20060328.orig/src/libmpeg2/idct_altivec.c
+++ xine-lib-1.1.2cvs20060328/src/libmpeg2/idct_altivec.c
@@ -489,7 +489,11 @@ void mpeg2_idct_add_altivec (int16_t * b
 	 );
 }
 
-static const int16_t constants[5][8] ATTR_ALIGN(16) = {
+static const int16_t constants[5][8] ATTR_ALIGN(16)
+#ifdef __GNUC__
+__attribute__((used))
+#endif
+= {
     {23170, 13573, 6518, 21895, -23170, -21895, 32, 31},
     {16384, 22725, 21407, 19266, 16384, 19266, 21407, 22725},
     {22725, 31521, 29692, 26722, 22725, 26722, 29692, 31521},
@@ -501,8 +505,6 @@ void mpeg2_idct_altivec_init (void)
 {
     int i, j;
 
-    i = constants[0][0];	/* just pretending - keeps gcc happy */
-
     /* the altivec idct uses a transposed input, so we patch scan tables */
     for (i = 0; i < 64; i++) {
 	j = mpeg2_scan_norm[i];
Index: xine-lib-1.1.2cvs20060328/src/libmpeg2/cpu_state.c
===================================================================
--- xine-lib-1.1.2cvs20060328.orig/src/libmpeg2/cpu_state.c
+++ xine-lib-1.1.2cvs20060328/src/libmpeg2/cpu_state.c
@@ -39,133 +39,6 @@ static void state_restore_mmx (cpu_state
 }
 #endif
 
-#if defined (ARCH_PPC) && defined (ENABLE_ALTIVEC)
-
-#ifndef HOST_OS_DARWIN
-
-static void state_save_altivec (cpu_state_t * state)
-{
-    asm ("						\n"
-	"	li		%r9,  16		\n"
-	"	stvx		%v20, 0,    %r3		\n"
-	"	li		%r11, 32		\n"
-	"	stvx		%v21, %r9,  %r3		\n"
-	"	li		%r9,  48		\n"
-	"	stvx		%v22, %r11, %r3		\n"
-	"	li		%r11, 64		\n"
-	"	stvx		%v23, %r9,  %r3		\n"
-	"	li		%r9,  80		\n"
-	"	stvx		%v24, %r11, %r3		\n"
-	"	li		%r11, 96		\n"
-	"	stvx		%v25, %r9,  %r3		\n"
-	"	li		%r9,  112		\n"
-	"	stvx		%v26, %r11, %r3		\n"
-	"	li		%r11, 128		\n"
-	"	stvx		%v27, %r9,  %r3		\n"
-	"	li		%r9,  144		\n"
-	"	stvx		%v28, %r11, %r3		\n"
-	"	li		%r11, 160		\n"
-	"	stvx		%v29, %r9,  %r3		\n"
-	"	li		%r9,  176		\n"
-	"	stvx		%v30, %r11, %r3		\n"
-	"	stvx		%v31, %r9,  %r3		\n"
-	 );
-}
-
-static void state_restore_altivec (cpu_state_t * state)
-{
-    asm ("						\n"
-	"	li		%r9,  16		\n"
-	"	lvx		%v20, 0,    %r3		\n"
-	"	li		%r11, 32		\n"
-	"	lvx		%v21, %r9,  %r3		\n"
-	"	li		%r9,  48		\n"
-	"	lvx		%v22, %r11, %r3		\n"
-	"	li		%r11, 64		\n"
-	"	lvx		%v23, %r9,  %r3		\n"
-	"	li		%r9,  80		\n"
-	"	lvx		%v24, %r11, %r3		\n"
-	"	li		%r11, 96		\n"
-	"	lvx		%v25, %r9,  %r3		\n"
-	"	li		%r9,  112		\n"
-	"	lvx		%v26, %r11, %r3		\n"
-	"	li		%r11, 128		\n"
-	"	lvx		%v27, %r9,  %r3		\n"
-	"	li		%r9,  144		\n"
-	"	lvx		%v28, %r11, %r3		\n"
-	"	li		%r11, 160		\n"
-	"	lvx		%v29, %r9,  %r3		\n"
-	"	li		%r9,  176		\n"
-	"	lvx		%v30, %r11, %r3		\n"
-	"	lvx		%v31, %r9,  %r3		\n"
-	 );
-}
-
-#else /* HOST_OS_DARWIN */
-
-#define LI(a,b) "li r" #a "," #b "\n\t"
-#define STVX0(a,b,c) "stvx v" #a ",0,r" #c "\n\t"
-#define STVX(a,b,c) "stvx v" #a ",r" #b ",r" #c "\n\t"
-#define LVX0(a,b,c) "lvx v" #a ",0,r" #c "\n\t"
-#define LVX(a,b,c) "lvx v" #a ",r" #b ",r" #c "\n\t"
-
-static void state_save_altivec (cpu_state_t * state)
-{
-    asm (LI (9, 16)
-	 STVX0 (20, 0, 3)
-	 LI (11, 32)
-	 STVX (21, 9, 3)
-	 LI (9, 48)
-	 STVX (22, 11, 3)
-	 LI (11, 64)
-	 STVX (23, 9, 3)
-	 LI (9, 80)
-	 STVX (24, 11, 3)
-	 LI (11, 96)
-	 STVX (25, 9, 3)
-	 LI (9, 112)
-	 STVX (26, 11, 3)
-	 LI (11, 128)
-	 STVX (27, 9, 3)
-	 LI (9, 144)
-	 STVX (28, 11, 3)
-	 LI (11, 160)
-	 STVX (29, 9, 3)
-	 LI (9, 176)
-	 STVX (30, 11, 3)
-	 STVX (31, 9, 3));
-}
-
-static void state_restore_altivec (cpu_state_t * state)
-{
-    asm (LI (9, 16)
-	 LVX0 (20, 0, 3)
-	 LI (11, 32)
-	 LVX (21, 9, 3)
-	 LI (9, 48)
-	 LVX (22, 11, 3)
-	 LI (11, 64)
-	 LVX (23, 9, 3)
-	 LI (9, 80)
-	 LVX (24, 11, 3)
-	 LI (11, 96)
-	 LVX (25, 9, 3)
-	 LI (9, 112)
-	 LVX (26, 11, 3)
-	 LI (11, 128)
-	 LVX (27, 9, 3)
-	 LI (9, 144)
-	 LVX (28, 11, 3)
-	 LI (11, 160)
-	 LVX (29, 9, 3)
-	 LI (9, 176)
-	 LVX (30, 11, 3)
-	 LVX (31, 9, 3));
-}
-#endif /* HOST_OS_DARWIN */
-
-#endif /* defined (ARCH_PPC) && defined (ENABLE_ALTIVEC) */
-
 void mpeg2_cpu_state_init (uint32_t mm_accel)
 {
 #if defined(ARCH_X86) || defined(ARCH_X86_64)
@@ -173,11 +46,5 @@ void mpeg2_cpu_state_init (uint32_t mm_a
 	mpeg2_cpu_state_restore = state_restore_mmx;
     }
 #endif
-#if defined (ARCH_PPC) && defined (ENABLE_ALTIVEC)
-    if (mm_accel & MM_ACCEL_PPC_ALTIVEC) {
-	mpeg2_cpu_state_save = state_save_altivec;
-	mpeg2_cpu_state_restore = state_restore_altivec;
-    }
-#endif
 }
 
Index: xine-lib-1.1.2cvs20060328/src/libmpeg2/idct.c
===================================================================
--- xine-lib-1.1.2cvs20060328.orig/src/libmpeg2/idct.c
+++ xine-lib-1.1.2cvs20060328/src/libmpeg2/idct.c
@@ -303,17 +303,6 @@ void mpeg2_idct_init (uint32_t mm_accel)
 	mpeg2_idct_mmx_init ();
     } else
 #endif
-#if defined (ARCH_PPC) && defined (ENABLE_ALTIVEC)
-    if (mm_accel & MM_ACCEL_PPC_ALTIVEC) {
-#ifdef LOG
-	fprintf (stderr, "Using altivec for IDCT transform\n");
-#endif
-	mpeg2_idct_copy = mpeg2_idct_copy_altivec;
-	mpeg2_idct_add = mpeg2_idct_add_altivec;
-	mpeg2_idct_altivec_init ();
-	mpeg2_idct       = mpeg2_idct_c;
-    } else
-#endif
 #ifdef LIBMPEG2_MLIB
     if (mm_accel & MM_ACCEL_MLIB) {
 	char * env_var;
Index: xine-lib-1.1.2cvs20060328/src/libmpeg2/Makefile.am
===================================================================
--- xine-lib-1.1.2cvs20060328.orig/src/libmpeg2/Makefile.am
+++ xine-lib-1.1.2cvs20060328/src/libmpeg2/Makefile.am
@@ -11,11 +11,9 @@ xineplug_decode_mpeg2_la_SOURCES = \
 	decode.c \
 	header.c \
 	idct.c \
-	idct_altivec.c \
 	idct_mlib.c \
 	idct_mmx.c \
 	motion_comp.c \
-	motion_comp_altivec.c \
 	motion_comp_mmx.c \
 	motion_comp_mlib.c \
 	motion_comp_vis.c \
Index: xine-lib-1.1.2cvs20060328/src/libmpeg2/motion_comp.c
===================================================================
--- xine-lib-1.1.2cvs20060328.orig/src/libmpeg2/motion_comp.c
+++ xine-lib-1.1.2cvs20060328/src/libmpeg2/motion_comp.c
@@ -60,14 +60,6 @@ void mpeg2_mc_init (uint32_t mm_accel)
 	mpeg2_mc = mpeg2_mc_mmx;
     } else
 #endif
-#if defined (ARCH_PPC) && defined (ENABLE_ALTIVEC)
-    if (mm_accel & MM_ACCEL_PPC_ALTIVEC) {
-#ifdef LOG
-	fprintf (stderr, "Using altivec for motion compensation\n");
-#endif
-	mpeg2_mc = mpeg2_mc_altivec;
-    } else
-#endif
 #ifdef ARCH_SPARC
     if (mm_accel & MM_ACCEL_SPARC_VIS) {
 #ifdef LOG
Index: xine-lib-1.1.2cvs20060328/src/libmpeg2/mpeg2_internal.h
===================================================================
--- xine-lib-1.1.2cvs20060328.orig/src/libmpeg2/mpeg2_internal.h
+++ xine-lib-1.1.2cvs20060328/src/libmpeg2/mpeg2_internal.h
@@ -242,25 +242,6 @@ void mpeg2_idct_mmx (int16_t * block);
 void mpeg2_zero_block_mmx (int16_t * block);
 void mpeg2_idct_mmx_init (void);
 
-/* idct_altivec.c */
-#ifndef HOST_OS_DARWIN
-void mpeg2_idct_copy_altivec (int16_t * block, uint8_t * dest, int stride);
-void mpeg2_idct_add_altivec (int16_t * block, uint8_t * dest, int stride);
-#else /* HOST_OS_DARWIN */
-# ifdef ENABLE_ALTIVEC
-void mpeg2_idct_copy_altivec (vector signed short * block, unsigned char * dest,
-			      int stride);
-void mpeg2_idct_add_altivec (vector signed short * block, unsigned char * dest,
-			     int stride);
-# else /* ! ENABLE_ALTIVEC */
-void mpeg2_idct_copy_altivec (signed short * block, unsigned char * dest,
-			      int stride);
-void mpeg2_idct_add_altivec (signed short * block, unsigned char * dest,
-			     int stride);
-# endif /* ENABLE_ALTIVEC */
-#endif /* HOST_OS_DARWIN */
-void mpeg2_idct_altivec_init (void);
-
 /* motion_comp.c */
 void mpeg2_mc_init (uint32_t mm_accel);
 
@@ -281,7 +262,6 @@ extern mpeg2_mc_t mpeg2_mc_c;
 extern mpeg2_mc_t mpeg2_mc_mmx;
 extern mpeg2_mc_t mpeg2_mc_mmxext;
 extern mpeg2_mc_t mpeg2_mc_3dnow;
-extern mpeg2_mc_t mpeg2_mc_altivec;
 extern mpeg2_mc_t mpeg2_mc_mlib;
 extern mpeg2_mc_t mpeg2_mc_vis;
 
