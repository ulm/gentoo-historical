? build.log
? po/stamp-po
? src/libffmpeg/xine_decoder.loT
? src/libffmpeg/libavcodec/i386/cputest.loT
Index: xine-lib-1.1.2_pre20060630/src/xine-engine/io_helper.c
===================================================================
--- xine-lib-1.1.2_pre20060630.orig/src/xine-engine/io_helper.c
+++ xine-lib-1.1.2_pre20060630/src/xine-engine/io_helper.c
@@ -315,18 +315,24 @@ static off_t xio_rw_abort(xine_stream_t 
   off_t total = 0;
   int sret;
   int state = 0;
+  xine_cfg_entry_t cfgentry;
+  unsigned int timeout;
 
   if ((cmd == XIO_TCP_READ) || (cmd == XIO_FILE_READ)) {
     state = XIO_READ_READY;
   } else {
     state = XIO_WRITE_READY;
   }
+
+  if (xine_config_lookup_entry (stream->xine, "media.network.timeout", &cfgentry)) {
+    timeout = cfgentry.num_value * 1000;
+  } else {
+    timeout = 30000; /* 30K msecs = 30 secs */
+  }
   
   while (total < todo) {
 
-    do {
-      sret = _x_io_select(stream, fd, state, 500); /* 500 ms */
-    } while (sret == XIO_TIMEOUT);
+    sret = _x_io_select(stream, fd, state, timeout);
     
     if (sret != XIO_READY)
       return -1;
Index: xine-lib-1.1.2_pre20060630/src/xine-engine/xine.c
===================================================================
--- xine-lib-1.1.2_pre20060630.orig/src/xine-engine/xine.c
+++ xine-lib-1.1.2_pre20060630/src/xine-engine/xine.c
@@ -1547,6 +1547,18 @@ void xine_init (xine_t *this) {
       XINE_CONFIG_SECURITY, NULL, this);
 
   /*
+   * timeout for network I/O to avoid freezes
+   */
+  this->config->register_num(this->config,
+      "media.network.timeout", 30,
+      _("Timeout for network stream reading (in seconds)"),
+      _("Specifies the timeout when reading from network streams, in seconds."
+	"Too low values might stop streaming when the source is slow or the"
+	"bandwidth is occupied, too high values will freeze the player if the"
+	"connection is lost."),
+      0, NULL, this);
+
+  /*
    * keep track of all opened streams
    */
   this->streams = xine_list_new();
