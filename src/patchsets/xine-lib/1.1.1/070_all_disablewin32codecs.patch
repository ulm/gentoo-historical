This patch is needed to actually disable the win32codecs support also when the
architecture supports them. This way make sure that the plugin is not built
for example on hardened systems.

Index: xine-lib-1.1.1/configure.ac
===================================================================
--- xine-lib-1.1.1.orig/configure.ac
+++ xine-lib-1.1.1/configure.ac
@@ -1868,10 +1868,25 @@ DEBUG_CFLAGS="-D_REENTRANT -D_FILE_OFFSE
 
 AC_OPTIMIZATIONS
 
-enable_w32dll="no"
 enable_ffmmx="no"
 enable_armv4l="no"
 
+AC_ARG_ENABLE([w32dll],
+	AC_HELP_STRING([--disable-w32dll], [Disable Win32 DLL support]))
+
+AC_MSG_CHECKING([whether to enable Win32 DLL support])
+case "$host_or_hostalias" in
+  *-mingw* | *-cygwin)
+    enable_w32dll="no"
+    ;;
+  i?86-* | k?-* | athlon-* | pentium*-)
+    enable_w32dll="$enable_w32dll"
+    ;;
+  *)
+    enable_w32dll="no"
+esac
+AC_MSG_RESULT([$enable_w32dll])
+
 case "$host_or_hostalias" in
   i?86-* | k?-* | athlon-* | pentium*-)
     dnl enable x86 specific parts of the code
@@ -1883,14 +1898,11 @@ case "$host_or_hostalias" in
     AC_DEFINE_UNQUOTED(ARCH_X86,,[Define this if you're running x86 architecture])
     AC_DEFINE(FPM_INTEL,1,[Define to select libmad fixed point arithmetic implementation])
     enable_ffmmx="yes"
-    enable_w32dll="yes"
 
     case "$host_or_hostalias" in
       *-*-mingw*)
-        enable_w32dll="no" 
         ;;
       *-*-cygwin) 
-        enable_w32dll="no" 
         LIBS="$LIBS @INTLLIBS@ -lkernel32"
         ;;
     esac
@@ -1977,8 +1989,8 @@ esac
 
 AM_CONDITIONAL(HOST_OS_DARWIN, test x"$HOST_OS_DARWIN" = "x1")
 
-AM_CONDITIONAL(HAVE_W32DLL, test x"$enable_w32dll" = "xyes")
-if test x"$enable_w32dll" = "xyes"; then
+AM_CONDITIONAL(HAVE_W32DLL, test x"$enable_w32dll" != "xno")
+if test x"$enable_w32dll" != "xno"; then
    W32DLL_DEP=""
 else 
    W32DLL_DEP="#"
