Index: xine-lib-1.1.1/src/dxr3/dxr3_decode_spu.c
===================================================================
--- xine-lib-1.1.1.orig/src/dxr3/dxr3_decode_spu.c
+++ xine-lib-1.1.1/src/dxr3/dxr3_decode_spu.c
@@ -519,7 +519,7 @@ static void dxr3_spudec_decode_data(spu_
     uint32_t vpts32;
     
     vpts = this->stream->metronom->got_spu_packet(this->stream->metronom, buf->pts);
-    llprintf(LOG_PTS, "pts = %lld vpts = %lld\n", buf->pts, vpts);
+    llprintf(LOG_PTS, "pts = %"PRId64" vpts = %"PRId64"\n", buf->pts, vpts);
     vpts32 = vpts;
     if (ioctl(this->fd_spu, EM8300_IOCTL_SPU_SETPTS, &vpts32))
       xprintf(this->stream->xine, XINE_VERBOSITY_DEBUG, 
Index: xine-lib-1.1.1/src/dxr3/dxr3_decode_video.c
===================================================================
--- xine-lib-1.1.1.orig/src/dxr3/dxr3_decode_video.c
+++ xine-lib-1.1.1/src/dxr3/dxr3_decode_video.c
@@ -583,7 +583,7 @@ static void dxr3_decode_data(video_decod
     
     delay = vpts - this->class->clock->get_current_time(
       this->class->clock);
-    llprintf(LOG_PTS, "SETPTS got %lld\n", vpts);
+    llprintf(LOG_PTS, "SETPTS got %"PRId64"\n", vpts);
     /* SETPTS only if less then one second in the future and
      * either buffer has pts or sync_every_frame is set */
     if ((delay > 0) && (delay < 90000) &&
@@ -597,13 +597,13 @@ static void dxr3_decode_data(video_decod
     
     if (delay >= 90000)   /* frame more than 1 sec ahead */
       xprintf(this->stream->xine, XINE_VERBOSITY_DEBUG,
-	      "dxr3_decode_video: WARNING: vpts %lld is %.02f seconds ahead of time!\n",
+	      "dxr3_decode_video: WARNING: vpts %"PRId64" is %.02f seconds ahead of time!\n",
 	      vpts, delay/90000.0);
     if (delay < 0)
       xprintf(this->stream->xine, XINE_VERBOSITY_DEBUG, "dxr3_decode_video: WARNING: overdue frame.\n");
   }
   else if (buf->pts)
-    llprintf(LOG_PTS, "skip buf->pts = %lld (no vpts)\n", buf->pts);
+    llprintf(LOG_PTS, "skip buf->pts = %"PRId64" (no vpts)\n", buf->pts);
   
   /* now write the content to the dxr3 mpeg device and, in a dramatic
    * break with open source tradition, check the return value
Index: xine-lib-1.1.1/src/xine-engine/load_plugins.c
===================================================================
--- xine-lib-1.1.1.orig/src/xine-engine/load_plugins.c
+++ xine-lib-1.1.1/src/xine-engine/load_plugins.c
@@ -794,8 +794,8 @@ static void save_plugin_list(FILE *fp, x
 
     file = node->file;
     fprintf(fp, "[%s]\n", file->filename );
-    fprintf(fp, "size=%llu\n", (uint64_t) file->filesize );
-    fprintf(fp, "mtime=%llu\n", (uint64_t) file->filemtime );
+    fprintf(fp, "size=%"PRIu64"\n", (uint64_t) file->filesize );
+    fprintf(fp, "mtime=%"PRIu64"\n", (uint64_t) file->filemtime );
     fprintf(fp, "type=%d\n", node->info->type );
     fprintf(fp, "api=%d\n", node->info->API );
     fprintf(fp, "id=%s\n", node->info->id );
@@ -913,10 +913,10 @@ static void load_plugin_list(FILE *fp, x
         }
       } else if (node) {
         if( !strcmp("size",line) ) {
-          sscanf(value," %llu",&llu);
+          sscanf(value," %"PRIu64,&llu);
           file->filesize = (off_t) llu;
         } else if( !strcmp("mtime",line) ) {
-          sscanf(value," %llu",&llu);
+          sscanf(value," %"PRIu64,&llu);
           file->filemtime = (time_t) llu;
         } else if( !strcmp("type",line) ) {
           sscanf(value," %d",&i);
Index: xine-lib-1.1.1/src/xine-utils/memcpy.c
===================================================================
--- xine-lib-1.1.1.orig/src/xine-utils/memcpy.c
+++ xine-lib-1.1.1/src/xine-utils/memcpy.c
@@ -526,7 +526,7 @@ void xine_probe_fast_memcpy(xine_t *xine
     t = rdtsc(config_flags) - t;
     memcpy_method[i].time = t;
 
-    xprintf(xine, XINE_VERBOSITY_LOG, "\t%s : %lld\n", memcpy_method[i].name, t);
+    xprintf(xine, XINE_VERBOSITY_LOG, "\t%s : %"PRId64"\n", memcpy_method[i].name, t);
 
     if( best == 0 || t < memcpy_method[best].time )
       best = i;
Index: xine-lib-1.1.1/src/demuxers/demux_avi.c
===================================================================
--- xine-lib-1.1.1.orig/src/demuxers/demux_avi.c
+++ xine-lib-1.1.1/src/demuxers/demux_avi.c
@@ -2145,7 +2145,7 @@ static int demux_avi_seek_internal (demu
    * position we've already found, so we won't be seeking though the
    * file much at this point. */
 
-  xprintf(this->stream->xine, XINE_VERBOSITY_DEBUG, "video_pts = %lld\n", video_pts);
+  xprintf(this->stream->xine, XINE_VERBOSITY_DEBUG, "video_pts = %"PRId64"\n", video_pts);
 
   /* FIXME ? */
   audio_pts = 77777777;
Index: xine-lib-1.1.1/src/demuxers/demux_film.c
===================================================================
--- xine-lib-1.1.1.orig/src/demuxers/demux_film.c
+++ xine-lib-1.1.1/src/demuxers/demux_film.c
@@ -311,7 +311,7 @@ static int open_film_file(demux_film_t *
         if (film->sample_table[j].pts > largest_pts)
           largest_pts = film->sample_table[j].pts;
 
-        llprintf(DEBUG_FILM_LOAD, "sample %4d @ %8" PRIxMAX ", %8X bytes, %s, pts %lld, duration %lld%s\n",
+        llprintf(DEBUG_FILM_LOAD, "sample %4d @ %8" PRIxMAX ", %8X bytes, %s, pts %"PRId64", duration %"PRId64"%s\n",
           j,
           (intmax_t)film->sample_table[j].sample_offset,
           film->sample_table[j].sample_size,
@@ -473,7 +473,7 @@ static int demux_film_send_chunk(demux_p
       if (!remaining_sample_bytes)
         buf->decoder_flags |= BUF_FLAG_FRAME_END;
 
-      llprintf(DEBUG_FILM_DEMUX, "sending video buf with %d bytes, %lld pts, %d duration\n",
+      llprintf(DEBUG_FILM_DEMUX, "sending video buf with %d bytes, %"PRId64" pts, %d duration\n",
         buf->size, buf->pts, buf->decoder_info[0]);
       this->video_fifo->put(this->video_fifo, buf);
     }
@@ -517,7 +517,7 @@ static int demux_film_send_chunk(demux_p
       if (!remaining_sample_bytes)
         buf->decoder_flags |= BUF_FLAG_FRAME_END;
 
-      llprintf(DEBUG_FILM_DEMUX, "sending video buf with %d bytes, %lld pts, %d duration\n",
+      llprintf(DEBUG_FILM_DEMUX, "sending video buf with %d bytes, %"PRId64" pts, %d duration\n",
         buf->size, buf->pts, buf->decoder_info[0]);
       this->video_fifo->put(this->video_fifo, buf);
     }
@@ -577,7 +577,7 @@ static int demux_film_send_chunk(demux_p
       if (!remaining_sample_bytes)
         buf->decoder_flags |= BUF_FLAG_FRAME_END;
 
-      llprintf(DEBUG_FILM_DEMUX, "sending mono audio buf with %d bytes, %lld pts, %d duration\n",
+      llprintf(DEBUG_FILM_DEMUX, "sending mono audio buf with %d bytes, %"PRId64" pts, %d duration\n",
         buf->size, buf->pts, buf->decoder_info[0]);
       this->audio_fifo->put(this->audio_fifo, buf);
 
@@ -648,7 +648,7 @@ static int demux_film_send_chunk(demux_p
       if (!remaining_sample_bytes)
         buf->decoder_flags |= BUF_FLAG_FRAME_END;
 
-      llprintf(DEBUG_FILM_DEMUX, "sending stereo audio buf with %d bytes, %lld pts, %d duration\n",
+      llprintf(DEBUG_FILM_DEMUX, "sending stereo audio buf with %d bytes, %"PRId64" pts, %d duration\n",
         buf->size, buf->pts, buf->decoder_info[0]);
       this->audio_fifo->put(this->audio_fifo, buf);
     }
Index: xine-lib-1.1.1/src/demuxers/demux_iff.c
===================================================================
--- xine-lib-1.1.1.orig/src/demuxers/demux_iff.c
+++ xine-lib-1.1.1/src/demuxers/demux_iff.c
@@ -927,7 +927,7 @@ static int demux_iff_send_chunk(demux_pl
           buf->decoder_flags           |= BUF_FLAG_FRAME_END;
 
         xprintf (this->stream->xine, XINE_VERBOSITY_LOG,
-                 "sending audio buf with %d bytes, %lld pts, %d duration\n",
+                 "sending audio buf with %d bytes, %"PRId64" pts, %d duration\n",
                  buf->size, buf->pts, buf->decoder_info[0]);
         this->audio_fifo->put(this->audio_fifo, buf);
       }
Index: xine-lib-1.1.1/src/demuxers/demux_matroska.c
===================================================================
--- xine-lib-1.1.1.orig/src/demuxers/demux_matroska.c
+++ xine-lib-1.1.1/src/demuxers/demux_matroska.c
@@ -1672,7 +1672,7 @@ static int parse_block (demux_matroska_t
 
   if (!find_track_by_id(this, (int)track_num, &track)) {
      xprintf(this->stream->xine, XINE_VERBOSITY_LOG,
-             "demux_matroska: invalid track id: %lld\n", track_num);
+             "demux_matroska: invalid track id: %"PRId64"\n", track_num);
      return 0;
   }
 
Index: xine-lib-1.1.1/src/demuxers/demux_slave.c
===================================================================
--- xine-lib-1.1.1.orig/src/demuxers/demux_slave.c
+++ xine-lib-1.1.1/src/demuxers/demux_slave.c
@@ -123,7 +123,7 @@ static int demux_slave_next (demux_slave
     int64_t    disc_off;  /* discontinuity offset                                  */
     uint32_t   decoder_flags; /* stuff like keyframe, is_header ... see below      */
 
-    if( sscanf(s,"fifo=%10s size=%d type=%u pts=%lld disc=%lld flags=%u",
+    if( sscanf(s,"fifo=%10s size=%d type=%u pts=%"PRId64" disc=%"PRId64" flags=%u",
                fifo_name, &size, &type, &pts, &disc_off, &decoder_flags) != 6 ) {
       lprintf("'buffer' command error\n");
       this->status = DEMUX_FINISHED;
Index: xine-lib-1.1.1/src/demuxers/ebml.c
===================================================================
--- xine-lib-1.1.1.orig/src/demuxers/ebml.c
+++ xine-lib-1.1.1/src/demuxers/ebml.c
@@ -231,7 +231,7 @@ int ebml_read_uint(ebml_parser_t *ebml, 
 
   if ((elem->len < 1) || (elem->len > 8)) {
     xprintf(ebml->xine, XINE_VERBOSITY_LOG,
-            "ebml: Invalid integer element size %lld\n", size);
+            "ebml: Invalid integer element size %"PRId64"\n", size);
     return 0;
   }
   
@@ -253,7 +253,7 @@ int ebml_read_sint (ebml_parser_t *ebml,
 
   if ((elem->len < 1) || (elem->len > 8)) {
     xprintf(ebml->xine, XINE_VERBOSITY_LOG,
-            "ebml: Invalid integer element size %lld\n", size);
+            "ebml: Invalid integer element size %"PRId64"\n", size);
     return 0;
   }
   
@@ -281,7 +281,7 @@ int ebml_read_float (ebml_parser_t *ebml
 
   if ((size != 4) && (size != 8) && (size != 10)) {
     xprintf(ebml->xine, XINE_VERBOSITY_LOG,
-            "ebml: Invalid float element size %lld\n", size);
+            "ebml: Invalid float element size %"PRId64"\n", size);
     return 0;
   }
 
Index: xine-lib-1.1.1/src/input/input_dvb.c
===================================================================
--- xine-lib-1.1.1.orig/src/input/input_dvb.c
+++ xine-lib-1.1.1/src/input/input_dvb.c
@@ -2406,7 +2406,7 @@ static off_t dvb_plugin_read (input_plug
       return 0;
   dvb_event_handler (this);
   xprintf(this->class->xine,XINE_VERBOSITY_DEBUG,
-	  "input_dvb: reading %lld bytes...\n", len);
+	  "input_dvb: reading %"PRId64" bytes...\n", len);
 
 #ifndef DVB_NO_BUFFERING
   nbc_check_buffers (this->nbc); 
@@ -2459,7 +2459,7 @@ static off_t dvb_plugin_read (input_plug
 	  } 
 
       xprintf(this->class->xine,XINE_VERBOSITY_DEBUG,
-	      "input_dvb: got %lld bytes (%lld/%lld bytes read)\n", 
+	      "input_dvb: got %"PRId64" bytes (%"PRId64"/%"PRId64" bytes read)\n", 
 	      n, total,len);
     
       if (n > 0){  
@@ -2517,7 +2517,7 @@ static off_t dvb_plugin_seek (input_plug
 
   dvb_input_plugin_t *this = (dvb_input_plugin_t *) this_gen;
 
-  xprintf(this->class->xine,XINE_VERBOSITY_DEBUG,"seek %lld bytes, origin %d\n", offset, origin);
+  xprintf(this->class->xine,XINE_VERBOSITY_DEBUG,"seek %"PRId64" bytes, origin %d\n", offset, origin);
 
   /* only relative forward-seeking is implemented */
 
Index: xine-lib-1.1.1/src/input/input_pvr.c
===================================================================
--- xine-lib-1.1.1.orig/src/input/input_pvr.c
+++ xine-lib-1.1.1/src/input/input_pvr.c
@@ -646,7 +646,7 @@ static int pvr_rec_file(pvr_input_plugin
   pos = (off_t)(this->rec_blk - this->page_block[this->rec_page]) * PVR_BLOCK_SIZE;
   if( lseek (this->rec_fd, pos, SEEK_SET) != pos ) {
     xprintf(this->stream->xine, XINE_VERBOSITY_DEBUG, 
-	    "input_pvr: error setting position for writing %lld\n", pos);
+	    "input_pvr: error setting position for writing %"PRId64"\n", pos);
     return 0;
   }
   if( this->rec_fd != -1 ) {
@@ -772,7 +772,7 @@ static int pvr_play_file(pvr_input_plugi
       pos = (off_t)(this->play_blk - this->page_block[this->play_page]) * PVR_BLOCK_SIZE;
       if( lseek (this->play_fd, pos, SEEK_SET) != pos ) {
         xprintf(this->stream->xine, XINE_VERBOSITY_DEBUG,
-		"input_pvr: error setting position for reading %lld\n", pos);
+		"input_pvr: error setting position for reading %"PRId64"\n", pos);
         return 0;
       }
       if( read(this->play_fd, buffer, PVR_BLOCK_SIZE) < PVR_BLOCK_SIZE ) {
Index: xine-lib-1.1.1/src/input/net_buf_ctrl.c
===================================================================
--- xine-lib-1.1.1.orig/src/input/net_buf_ctrl.c
+++ xine-lib-1.1.1/src/input/net_buf_ctrl.c
@@ -121,8 +121,8 @@ static void display_stats (nbc_t *this) 
   char *buffering[2] = {"   ", "buf"};
   char *enabled[2]   = {"off", "on "};
   
-  printf("net_buf_ctrl: vid %3d%% %4.1fs %4lldkbps %1d, "\
-	 "aud %3d%% %4.1fs %4lldkbps %1d, %s %s\r",
+  printf("net_buf_ctrl: vid %3d%% %4.1fs %4"PRId64"kbps %1d, "\
+	 "aud %3d%% %4.1fs %4"PRId64"kbps %1d, %s %s\r",
 	 this->video_fifo_fill,
 	 (float)(this->video_fifo_length / 1000),
 	 this->video_br / 1000,
