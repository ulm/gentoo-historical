--- elisp-manual-19-2.4.2-orig/debugging.texi
+++ elisp-manual-19-2.4.2/debugging.texi
@@ -185,5 +185,5 @@
 @code{debug-on-entry} does nothing.
 
-  @strong{Note:} if you redefine a function after using
+  @strong{Warning:} if you redefine a function after using
 @code{debug-on-entry} on it, the code to enter the debugger is lost.
 
--- elisp-manual-19-2.4.2-orig/eval.texi
+++ elisp-manual-19-2.4.2/eval.texi
@@ -110,5 +110,5 @@
 property list.  On these occasions, use the @code{eval} function.
 
-  @strong{Note:} it is generally cleaner and more flexible to call
+  It is generally cleaner and more flexible to call
 functions that are stored in data structures, rather than to evaluate
 expressions stored in data structures.  Using functions provides the
--- elisp-manual-19-2.4.2-orig/os.texi
+++ elisp-manual-19-2.4.2/os.texi
@@ -1307,5 +1307,5 @@
 @kbd{C-s} and @kbd{C-\} and the characters @kbd{C-q} and @kbd{C-^}.
 Subsequently, typing @kbd{C-\} has all the usual effects of typing
-@kbd{C-s}, and vice versa.  (@xref{Flow Control} for more information on
+@kbd{C-s}, and vice versa.  (@xref{Flow Control}, for more information on
 this subject.)
 
--- elisp-manual-19-2.4.2-orig/positions.texi
+++ elisp-manual-19-2.4.2/positions.texi
@@ -82,5 +82,5 @@
 current buffer.  This is @code{(1+ (buffer-size))}, unless narrowing is
 in effect, in which case it is the position of the end of the region
-that you narrowed to.  (@xref{Narrowing}).
+that you narrowed to.  (@xref{Narrowing}.)
 @end defun
 
--- elisp-manual-19-2.4.2-orig/strings.texi
+++ elisp-manual-19-2.4.2/strings.texi
@@ -703,5 +703,5 @@
 The definition of a word is any sequence of consecutive characters that
 are assigned to the word constituent syntax class in the current syntax
-table (@xref{Syntax Class Table}).
+table (@pxref{Syntax Class Table}).
 
 When the argument to @code{capitalize} is a character, @code{capitalize}
--- elisp-manual-19-2.4.2-orig/variables.texi
+++ elisp-manual-19-2.4.2/variables.texi
@@ -1204,5 +1204,5 @@
 Displays}.
 
-@strong{Note:} do not use @code{make-local-variable} for a hook
+@strong{Warning:} do not use @code{make-local-variable} for a hook
 variable.  Instead, use @code{make-local-hook}.  @xref{Hooks}.
 @end deffn
@@ -1215,5 +1215,5 @@
 The value returned is @var{variable}.
 
-@strong{Note:} It is a mistake to use @code{make-variable-buffer-local}
+@strong{Warning:} It is a mistake to use @code{make-variable-buffer-local}
 for user-option variables, simply because users @emph{might} want to
 customize them differently in different buffers.  Users can make any
