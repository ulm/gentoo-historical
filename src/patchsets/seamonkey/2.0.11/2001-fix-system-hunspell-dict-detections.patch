--- a/mozilla/extensions/spellcheck/Makefile.in
+++ b/mozilla/extensions/spellcheck/Makefile.in
@@ -42,13 +42,19 @@
 include $(DEPTH)/config/autoconf.mk
 
 MODULE		= spellchecker
+ifndef MOZ_NATIVE_HUNSPELL
 DIRS		= idl locales
+else
+DIRS		= idl
+endif
 
 ifeq (camino,$(MOZ_BUILD_APP))
 DIRS		+= osxspell
 else
+ifndef MOZ_NATIVE_HUNSPELL
 DIRS		+= hunspell
 endif
+endif
 
 DIRS += src
 
--- a/mozilla/extensions/spellcheck/hunspell/src/mozHunspell.cpp
+++ b/mozilla/extensions/spellcheck/hunspell/src/mozHunspell.cpp
@@ -63,6 +63,9 @@
 #include "nsISimpleEnumerator.h"
 #include "nsIDirectoryEnumerator.h"
 #include "nsIFile.h"
+#ifdef MOZ_NATIVE_HUNSPELL
+#include "nsILocalFile.h"
+#endif
 #include "nsDirectoryServiceUtils.h"
 #include "nsDirectoryServiceDefs.h"
 #include "mozISpellI18NManager.h"
@@ -307,7 +310,16 @@
     return;
 
   nsCOMPtr<nsIFile> dictDir;
-  rv = dirSvc->Get(DICTIONARY_SEARCH_DIRECTORY,
+  #ifdef MOZ_NATIVE_HUNSPELL
+    nsCOMPtr<nsILocalFile>  localFile;
+    rv = NS_NewNativeLocalFile(nsDependentCString("/usr/share/myspell"),PR_TRUE, getter_AddRefs(localFile));
+    if (localFile && NS_SUCCEEDED(rv)) {
+      localFile->QueryInterface(NS_GET_IID(nsIFile), getter_AddRefs(dictDir));
+      LoadDictionariesFromDir(dictDir);
+    }
+    else {
+  #endif
+    rv = dirSvc->Get(DICTIONARY_SEARCH_DIRECTORY,
                    NS_GET_IID(nsIFile), getter_AddRefs(dictDir));
   if (NS_SUCCEEDED(rv)) {
     LoadDictionariesFromDir(dictDir);
@@ -332,6 +344,9 @@
       LoadDictionariesFromDir(appDir);
     }
   }
+#ifdef MOZ_NATIVE_HUNSPELL
+  }
+#endif
 
   nsCOMPtr<nsISimpleEnumerator> dictDirs;
   rv = dirSvc->Get(DICTIONARY_SEARCH_DIRECTORY_LIST,
--- a/mozilla/extensions/spellcheck/src/Makefile.in
+++ b/mozilla/extensions/spellcheck/src/Makefile.in
@@ -63,9 +63,15 @@
 		  txtsvc \
 		  uconv \
 		  unicharutil \
+		  xulapp \
 		  $(NULL)
 
-CPPSRCS		= \
+ifdef MOZ_NATIVE_HUNSPELL
+CPPSRCS         += mozHunspell.cpp \
+		mozHunspellDirProvider.cpp
+endif
+
+CPPSRCS		+= \
 		mozSpellCheckerFactory.cpp	\
 		mozSpellChecker.cpp		\
 		mozPersonalDictionary.cpp	\
@@ -80,8 +86,15 @@
 SHARED_LIBRARY_LIBS += ../osxspell/src/$(LIB_PREFIX)osxspell_s.$(LIB_SUFFIX)
 LOCAL_INCLUDES += -I$(srcdir)/../osxspell/src
 else
+ifndef MOZ_NATIVE_HUNSPELL
 SHARED_LIBRARY_LIBS += ../hunspell/src/$(LIB_PREFIX)hunspell_s.$(LIB_SUFFIX)
 LOCAL_INCLUDES += -I$(srcdir)/../hunspell/src
+else
+LOCAL_INCLUDES += $(MOZ_HUNSPELL_CFLAGS) \
+		-I$(srcdir)/../hunspell/src \
+		-DMOZ_NATIVE_HUNSPELL \
+		$(NULL)
+endif
 endif
 
 EXTRA_DSO_LDOPTS = \
@@ -96,3 +109,11 @@
 LOCAL_INCLUDES += \
 	-I$(topsrcdir)/xpcom/io \
 	$(NULL)
+
+ifdef MOZ_NATIVE_HUNSPELL
+export:: $(srcdir)/../hunspell/src/mozHunspell.cpp $(srcdir)/../hunspell/src/mozHunspellDirProvider.cpp
+	$(INSTALL) $(srcdir)/../hunspell/src/mozHunspell.* $(srcdir)/../hunspell/src/mozHunspellDirProvider.* .
+GARBAGE += mozHunspell.$(OBJ_SUFFIX) mozHunspell.cpp mozHunspellDirProvider.$(OBJ_SUFFIX) mozHunspellDirProvider.cpp
+clean::
+	rm -f mozHunspell.* mozHunspellDirProvider.*
+endif
