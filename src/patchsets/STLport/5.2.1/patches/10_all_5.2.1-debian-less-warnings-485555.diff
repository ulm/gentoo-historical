Index: stlport5.2-5.2.1/stlport/stl/_algobase.c
===================================================================
--- stlport5.2-5.2.1.orig/stlport/stl/_algobase.c	2008-12-10 10:56:51.000000000 +0100
+++ stlport5.2-5.2.1/stlport/stl/_algobase.c	2009-06-29 19:30:21.000000000 +0200
@@ -326,7 +326,7 @@
 template <class _InputIter, class _ForwardIter, class _Tp1, class _Tp2>
 inline _InputIter __find_first_of_aux1(_InputIter __first1, _InputIter __last1,
                                        _ForwardIter __first2, _ForwardIter __last2,
-                                       _Tp1* __pt1, _Tp2* __pt2) {
+                                       _Tp1*, _Tp2* __pt2) {
   typedef _STLP_TYPENAME _STLP_STD::_IsIntegral<_Tp1>::_Ret _IsIntegral;
   typedef _STLP_TYPENAME _STLP_PRIV _IsCharLikeType<_Tp2>::_Ret _IsCharLike;
   typedef _STLP_TYPENAME _STLP_STD::_Land2<_IsIntegral, _IsCharLike>::_Ret _UseStrcspnLikeAlgo;
@@ -451,7 +451,7 @@
 
 template <class _ForwardIter, class _Tp, class _Compare1, class _Compare2, class _Distance>
 _ForwardIter __lower_bound(_ForwardIter __first, _ForwardIter __last, const _Tp& __val,
-                           _Compare1 __comp1, _Compare2 __comp2, _Distance*) {
+                           _Compare1 __comp1, _Compare2 _STLP_VERBOSE_PARAM(__comp2), _Distance*) {
   _Distance __len = _STLP_STD::distance(__first, __last);
   _Distance __half;
   _ForwardIter __middle;
Index: stlport5.2-5.2.1/stlport/stl/_hashtable.c
===================================================================
--- stlport5.2-5.2.1.orig/stlport/stl/_hashtable.c	2008-12-10 10:56:51.000000000 +0100
+++ stlport5.2-5.2.1/stlport/stl/_hashtable.c	2009-06-29 19:30:21.000000000 +0200
@@ -166,12 +166,12 @@
 
   typename _BucketVector::const_iterator __bcur(__bpos);
   _BucketType *__pos_node = __pos._M_node;
-  for (--__bcur; __pos_node == *__bcur; --__bcur);
+  for (--__bcur; __pos_node == *__bcur; --__bcur) ;
 
   __n = __bcur - __buckets.begin() + 1;
   _ElemsIte __cur(*__bcur);
   _ElemsIte __prev = __cur++;
-  for (; __cur != __pos; ++__prev, ++__cur);
+  for (; __cur != __pos; ++__prev, ++__cur) ;
   return __prev;
 }
 
@@ -345,7 +345,7 @@
   else {
     _ElemsIte __last(_M_buckets[++__f_bucket]);
     __prev = __cur++;
-    for (; (__cur != __last) && (__cur != __first._M_ite); ++__prev, ++__cur);
+    for (; (__cur != __last) && (__cur != __first._M_ite); ++__prev, ++__cur) ;
   }
   size_type __erased = 0;
   //We do not use the slist::erase_after method taking a range to count the
@@ -464,7 +464,7 @@
     _ElemsIte __ite(__cur), __before_ite(__cur);
     for (++__ite;
          __ite != __last && _M_equals(_M_get_key(*__cur), _M_get_key(*__ite));
-         ++__ite, ++__before_ite);
+         ++__ite, ++__before_ite) ;
     size_type __prev_bucket = __new_bucket;
     _ElemsIte  __prev = _S_before_begin(__tmp_elems, __tmp, __prev_bucket)._M_ite;
     __tmp_elems.splice_after(__prev, _M_elems, _M_elems.before_begin(), __before_ite);
Index: stlport5.2-5.2.1/stlport/stl/_hashtable.h
===================================================================
--- stlport5.2-5.2.1.orig/stlport/stl/_hashtable.h	2008-12-10 10:56:51.000000000 +0100
+++ stlport5.2-5.2.1/stlport/stl/_hashtable.h	2009-06-29 19:30:21.000000000 +0200
@@ -499,7 +499,7 @@
     size_type __n = _M_bkt_num_key(__key);
     _ElemsIte __first(_M_buckets[__n]);
     _ElemsIte __last(_M_buckets[__n + 1]);
-    for ( ; (__first != __last) && !_M_equals(_M_get_key(*__first), __key); ++__first);
+    for ( ; (__first != __last) && !_M_equals(_M_get_key(*__first), __key); ++__first) ;
     if (__first != __last)
       return __first;
     else
@@ -523,7 +523,7 @@
         size_type __result = 1;
         for (++__cur;
              __cur != __last && _M_equals(_M_get_key(*__cur), __key);
-             ++__result, ++__cur);
+             ++__result, ++__cur) ;
         return __result;
       }
     }
@@ -539,7 +539,7 @@
          __first != __last; ++__first) {
       if (_M_equals(_M_get_key(*__first), __key)) {
         _ElemsIte __cur(__first);
-        for (++__cur; (__cur != __last) && _M_equals(_M_get_key(*__cur), __key); ++__cur);
+        for (++__cur; (__cur != __last) && _M_equals(_M_get_key(*__cur), __key); ++__cur) ;
         return _Pii(__first, __cur);
       }
     }
@@ -555,7 +555,7 @@
          __first != __last; ++__first) {
       if (_M_equals(_M_get_key(*__first), __key)) {
         _ElemsIte __cur(__first);
-        for (++__cur; (__cur != __last) && _M_equals(_M_get_key(*__cur), __key); ++__cur);
+        for (++__cur; (__cur != __last) && _M_equals(_M_get_key(*__cur), __key); ++__cur) ;
         return _Pii(__first, __cur);
       }
     }
Index: stlport5.2-5.2.1/stlport/stl/_list.c
===================================================================
--- stlport5.2-5.2.1.orig/stlport/stl/_list.c	2008-12-10 10:56:51.000000000 +0100
+++ stlport5.2-5.2.1/stlport/stl/_list.c	2009-06-29 19:30:21.000000000 +0200
@@ -95,7 +95,7 @@
 void list<_Tp, _Alloc>::resize(size_type __new_size, const _Tp& __x) {
   iterator __i = begin();
   size_type __len = 0;
-  for ( ; __i != end() && __len < __new_size; ++__i, ++__len);
+  for ( ; __i != end() && __len < __new_size; ++__i, ++__len) ;
 
   if (__len == __new_size)
     erase(__i, end());
Index: stlport5.2-5.2.1/stlport/stl/_string.c
===================================================================
--- stlport5.2-5.2.1.orig/stlport/stl/_string.c	2008-12-10 10:56:51.000000000 +0100
+++ stlport5.2-5.2.1/stlport/stl/_string.c	2009-06-29 19:30:21.000000000 +0200
@@ -110,7 +110,7 @@
 template <class _InputIter, class _CharT, class _Tp, class _Traits>
 inline _InputIter __str_find_first_not_of_aux2(_InputIter __first1, _InputIter __last1,
                                                const _CharT* __first2, const _CharT* __last2,
-                                               _Tp* __pt, _Traits* __traits) {
+                                               _Tp*, _Traits* __traits) {
   typedef typename _IsIntegral<_Tp>::_Ret _IsIntegral;
   typedef typename _IsCharLikeType<_CharT>::_Ret _IsCharLike;
   typedef typename _Land2<_IsIntegral, _IsCharLike>::_Ret _UseStrcspnLikeAlgo;
Index: stlport5.2-5.2.1/stlport/stl/_string_base.h
===================================================================
--- stlport5.2-5.2.1.orig/stlport/stl/_string_base.h	2008-12-10 10:56:51.000000000 +0100
+++ stlport5.2-5.2.1/stlport/stl/_string_base.h	2009-06-29 19:30:21.000000000 +0200
@@ -69,7 +69,7 @@
   _Tp* _M_End()
   { return _M_using_static_buf() ? _M_buffers._M_static_buf + _DEFAULT_SIZE : _M_buffers._M_end_of_storage; }
   size_type _M_capacity() const
-  { return _M_using_static_buf() ? _DEFAULT_SIZE : _M_buffers._M_end_of_storage - _M_start_of_storage._M_data; }
+  { return _M_using_static_buf() ? _DEFAULT_SIZE + 0 : _M_buffers._M_end_of_storage - _M_start_of_storage._M_data; }
   size_type _M_rest() const
   { return  _M_using_static_buf() ? _DEFAULT_SIZE - (_M_finish - _M_buffers._M_static_buf) : _M_buffers._M_end_of_storage - _M_finish; }
 #else
Index: stlport5.2-5.2.1/stlport/stl/debug/_debug.h
===================================================================
--- stlport5.2-5.2.1.orig/stlport/stl/debug/_debug.h	2009-06-29 19:29:13.000000000 +0200
+++ stlport5.2-5.2.1/stlport/stl/debug/_debug.h	2009-06-29 19:30:21.000000000 +0200
@@ -438,6 +438,7 @@
 
 #else
 #  define _STLP_VERBOSE_ASSERT(expr, diagnostic)
+#  define _STLP_VERBOSE_PARAM(param)
 #  define _STLP_DEBUG_CHECK(expr)
 #endif /* _STLP_DEBUG */
 
