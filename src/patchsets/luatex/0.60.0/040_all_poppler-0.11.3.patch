Index: luatex-beta-0.60.0/source/texk/web2c/luatexdir/image/pdftoepdf.cc
===================================================================
--- luatex-beta-0.60.0.orig/source/texk/web2c/luatexdir/image/pdftoepdf.cc
+++ luatex-beta-0.60.0/source/texk/web2c/luatexdir/image/pdftoepdf.cc
@@ -471,7 +471,8 @@ read_pdf_info(image_dict * idict, int mi
     int rotate;
     char *checksum;
     PDFRectangle *pagebox;
-    float pdf_version_found, pdf_version_wanted, xsize, ysize, xorig, yorig;
+    float xsize, ysize, xorig, yorig;
+    int minor_pdf_version_found, major_pdf_version_found;
     assert(idict != NULL);
     assert(img_type(idict) == IMG_TYPE_PDF);
     assert(readtype == IMG_CLOSEINBETWEEN);     // only this is implemented
@@ -494,15 +495,15 @@ read_pdf_info(image_dict * idict, int mi
     // this works only for PDF 1.x -- but since any versions of PDF newer
     // than 1.x will not be backwards compatible to PDF 1.x, pdfTeX will
     // then have to changed drastically anyway.
-    pdf_version_found = pdf_doc->doc->getPDFVersion();
-    pdf_version_wanted = 1 + (minor_pdf_version_wanted * 0.1);
-    if (pdf_version_found > pdf_version_wanted + 0.01) {
+    minor_pdf_version_found = pdf_doc->doc->getPDFMinorVersion();
+    major_pdf_version_found = pdf_doc->doc->getPDFMajorVersion();
+    if (major_pdf_version_found > 1 || minor_pdf_version_found > minor_pdf_version_wanted) {
         char msg[] =
-            "PDF inclusion: found PDF version <%.1f>, but at most version <%.1f> allowed";
+            "PDF inclusion: found PDF version <%d.%d>, but at most version <1.%d> allowed";
         if (pdf_inclusion_errorlevel > 0) {
-            pdftex_fail(msg, pdf_version_found, pdf_version_wanted);
+            pdftex_fail(msg, major_pdf_version_found, minor_pdf_version_found, minor_pdf_version_wanted);
         } else {
-            pdftex_warn(msg, pdf_version_found, pdf_version_wanted);
+            pdftex_warn(msg, major_pdf_version_found, minor_pdf_version_found, minor_pdf_version_wanted);
         }
     }
     img_totalpages(idict) = pdf_doc->doc->getCatalog()->getNumPages();
