#! /bin/sh /usr/share/dpatch/dpatch-run
## 35_gtkmozembed_change_toplevel.dpatch by Mike Hommey <glandium@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix drop-down menus when gtkmozembed is moved from different toplevel. 
## DP: Patch from bz#296002

@DPATCH@

=== widget/src/gtk2/nsWindow.cpp
==================================================================
--- xulrunner/widget/src/gtk2/nsWindow.cpp	(revision 118)
+++ xulrunner/widget/src/gtk2/nsWindow.cpp	(local)
@@ -116,6 +116,9 @@
 static int    is_parent_grab_leave(GdkEventCrossing *aEvent);
 
 /* callbacks from widgets */
+static void     hierarchy_changed_cb      (GtkWidget *container,
+					   GtkWidget *previous_toplevel,
+					   nsWindow *window);
 static gboolean expose_event_cb           (GtkWidget *widget,
                                            GdkEventExpose *event);
 static gboolean configure_event_cb        (GtkWidget *widget,
@@ -261,6 +264,7 @@
 nsWindow::nsWindow()
 {
     mContainer           = nsnull;
+    mParentContainer     = nsnull;
     mDrawingarea         = nsnull;
     mShell               = nsnull;
     mWindowGroup         = nsnull;
@@ -432,6 +436,15 @@
         mDrawingarea = nsnull;
     }
 
+    if (mParentContainer) {
+        g_object_remove_weak_pointer(G_OBJECT (mParentContainer),
+                                     (void**) &mParentContainer);
+        g_signal_handlers_disconnect_by_func
+            (mParentContainer, (void*)hierarchy_changed_cb, this);
+
+        mParentContainer = nsnull; 
+    }
+
     OnDestroy();
 
 #ifdef ACCESSIBILITY
@@ -2341,18 +2354,14 @@
         }
         else if (mWindowType == eWindowType_popup) {
             mShell = gtk_window_new(GTK_WINDOW_POPUP);
-            if (topLevelParent) {
-                gtk_window_set_transient_for(GTK_WINDOW(mShell),
-                                            topLevelParent);
-                mTransientParent = topLevelParent;
+            SetTransientParent(topLevelParent);
 
-                if (topLevelParent->group) {
-                    gtk_window_group_add_window(topLevelParent->group,
-                                            GTK_WINDOW(mShell));
-                    mWindowGroup = topLevelParent->group;
-                }
-            }
-        }
+            mParentContainer = parentMozContainer;
+            g_object_add_weak_pointer(G_OBJECT(mParentContainer),
+                                      (void**)&mParentContainer);
+            g_signal_connect(parentMozContainer, "hierarchy-changed",
+                             G_CALLBACK(hierarchy_changed_cb), this);
+	}
         else { // must be eWindowType_toplevel
             mShell = gtk_window_new(GTK_WINDOW_TOPLEVEL);
             SetDefaultIcon();
@@ -3236,6 +3245,25 @@
     return w;
 }
 
+void
+nsWindow::SetTransientParent(GtkWindow *aParent)
+{
+    if (mTransientParent && mTransientParent->group) {
+        gtk_window_group_remove_window(mTransientParent->group,
+                                       GTK_WINDOW(mShell));
+      mWindowGroup = nsnull;
+    }
+
+    mTransientParent = aParent;
+    gtk_window_set_transient_for(GTK_WINDOW(mShell), aParent);
+
+    if (aParent && aParent->group) {
+        gtk_window_group_add_window(aParent->group,
+                                    GTK_WINDOW(mShell));
+        mWindowGroup = aParent->group;
+    }
+}
+
 NS_IMETHODIMP
 nsWindow::MakeFullScreen(PRBool aFullScreen)
 {
@@ -3605,6 +3633,16 @@
 // gtk callbacks
 
 /* static */
+void
+hierarchy_changed_cb(GtkWidget *container, GtkWidget *previous_toplevel, nsWindow *window)
+{
+  GtkWidget *toplevelCandidate = gtk_widget_get_toplevel (container);
+  GtkWidget *toplevel = GTK_WIDGET_TOPLEVEL (toplevelCandidate) ? toplevelCandidate : nsnull;
+
+  window->SetTransientParent (GTK_WINDOW (toplevel));
+}
+
+/* static */
 gboolean
 expose_event_cb(GtkWidget *widget, GdkEventExpose *event)
 {
=== widget/src/gtk2/nsWindow.h
==================================================================
--- xulrunner/widget/src/gtk2/nsWindow.h	(revision 118)
+++ xulrunner/widget/src/gtk2/nsWindow.h	(local)
@@ -154,6 +154,8 @@
     void               LoseFocus();
     gint               ConvertBorderStyles(nsBorderStyle aStyle);
 
+    void               SetTransientParent(GtkWindow *aParent);
+
     // event callbacks
     gboolean           OnExposeEvent(GtkWidget *aWidget,
                                      GdkEventExpose *aEvent);
@@ -294,6 +296,7 @@
 
     GtkWidget          *mShell;
     MozContainer       *mContainer;
+    MozContainer       *mParentContainer;
     MozDrawingarea     *mDrawingarea;
 
     GtkWindowGroup     *mWindowGroup;
