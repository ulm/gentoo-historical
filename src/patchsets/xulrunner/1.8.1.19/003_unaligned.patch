# Upstream: https://bugzilla.mozilla.org/show_bug.cgi?id=161826
# Fix unaligned access
diff -ur mozilla.orig/intl/unicharutil/util/nsUnicharUtils.cpp mozilla/intl/unicharutil/util/nsUnicharUtils.cpp
--- mozilla.orig/intl/unicharutil/util/nsUnicharUtils.cpp	2007-12-29 12:43:10.000000000 +0000
+++ mozilla/intl/unicharutil/util/nsUnicharUtils.cpp	2007-12-29 12:44:08.000000000 +0000
@@ -348,3 +348,15 @@
     return result;
 }
 
+void
+SetUnichar(void *ptr, PRUnichar aChar)
+{
+#if NEED_STRICT_ALIGNMENT
+    *((char *) ptr) = *((char *) &aChar);
+    *((char *) ptr + 1) = *((char *) &aChar + 1);
+#else
+    *((PRUnichar *) ptr) = aChar;
+#endif
+}
+
+
diff -ur mozilla.orig/intl/unicharutil/util/nsUnicharUtils.h mozilla/intl/unicharutil/util/nsUnicharUtils.h
--- mozilla.orig/intl/unicharutil/util/nsUnicharUtils.h	2007-12-29 12:43:10.000000000 +0000
+++ mozilla/intl/unicharutil/util/nsUnicharUtils.h	2007-12-29 12:44:31.000000000 +0000
@@ -82,6 +82,10 @@
 PRUnichar ToUpperCase(PRUnichar);
 PRUnichar ToLowerCase(PRUnichar);
 
+#define NEED_STRICT_ALIGNMENT defined(__sparc__) || defined(__alpha__) || defined(__mips__)
+
+void SetUnichar(void *, PRUnichar);
+
 inline PRBool IsUpperCase(PRUnichar c) {
     return ToLowerCase(c) != c;
 }
diff -ur mozilla.orig/layout/generic/nsTextFrame.cpp mozilla/layout/generic/nsTextFrame.cpp
--- mozilla.orig/layout/generic/nsTextFrame.cpp	2007-12-29 12:43:02.000000000 +0000
+++ mozilla/layout/generic/nsTextFrame.cpp	2007-12-29 12:46:16.000000000 +0000
@@ -5123,18 +5123,27 @@
 };
 
 // Transforms characters in place from ascii to Unicode
-static void
+static PRUnichar *
 TransformTextToUnicode(char* aText, PRInt32 aNumChars)
 {
   // Go backwards over the characters and convert them.
   unsigned char*  cp1 = (unsigned char*)aText + aNumChars - 1;
-  PRUnichar*      cp2 = (PRUnichar*)aText + (aNumChars - 1);
+  PRUnichar*      cp2;
+  PRUnichar*      ret;
+
+  if ((unsigned long) aText & 0x1)
+    cp2 = ((PRUnichar*)(aText + 1));
+  else
+    cp2 = (PRUnichar*)aText;
   
-  while (aNumChars-- > 0) {
-    // XXX: If you crash here then you may see the issue described
-    // in http://bugzilla.mozilla.org/show_bug.cgi?id=36146#c44
-    *cp2-- = PRUnichar(*cp1--);
-  }
+  ret = cp2;
+
+  cp2 += (aNumChars - 1);
+
+  while (aNumChars-- > 0)
+    SetUnichar(cp2--, PRUnichar(*cp1--));
+
+  return ret;
 }
  
 PRUint32
@@ -5702,7 +5711,7 @@
             // The text transform buffer contains ascii characters, so
             // transform it to Unicode
             NS_ASSERTION(wordBufLen >= PRUint32(lastWordLen), "no room to transform in place");
-            TransformTextToUnicode((char*)lastWordPtr, lastWordLen);
+            pWordBuf = TransformTextToUnicode((char*)lastWordPtr, lastWordLen);
           }
 
           // Look ahead in the text-run and compute the final word
@@ -6232,7 +6241,7 @@
   for (; aBuffer < end; aBuffer++) {
     PRUnichar ch = *aBuffer;
     if (ch == ' ') {
-      *aBuffer = CH_NBSP;
+      SetUnichar(aBuffer, CH_NBSP);
     }
   }
 }
