Index: xine-ui-0.99.4/src/xitk/actions.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/actions.c
+++ xine-ui-0.99.4/src/xitk/actions.c
@@ -1054,7 +1054,7 @@ void gui_direct_change_audio_channel(xit
 }
 
 void gui_change_audio_channel(xitk_widget_t *w, void *data) {
-  int dir = (int)data;
+  long dir = (long)data;
   int channel;
   
   channel = xine_get_param(gGui->stream, XINE_PARAM_AUDIO_CHANNEL_LOGICAL);
@@ -1074,7 +1074,7 @@ void gui_direct_change_spu_channel(xitk_
 }
 
 void gui_change_spu_channel(xitk_widget_t *w, void *data) {
-  int dir = (int)data;
+  long dir = (long)data;
   int channel;
   
   channel = xine_get_param(gGui->stream, XINE_PARAM_SPU_CHANNEL);
@@ -1089,12 +1089,12 @@ void gui_change_spu_channel(xitk_widget_
 
 void gui_change_speed_playback(xitk_widget_t *w, void *data) {
 
-  if(((int)data) == GUI_NEXT) {
+  if(((long)data) == GUI_NEXT) {
     if (xine_get_param(gGui->stream, XINE_PARAM_SPEED) > XINE_SPEED_PAUSE)
       xine_set_param (gGui->stream, XINE_PARAM_SPEED, 
 		      (xine_get_param(gGui->stream, XINE_PARAM_SPEED)) / 2);
   }
-  else if(((int)data) == GUI_PREV) {
+  else if(((long)data) == GUI_PREV) {
     if (xine_get_param (gGui->stream, XINE_PARAM_SPEED) < XINE_SPEED_FAST_4) {
       if (xine_get_param (gGui->stream, XINE_PARAM_SPEED) > XINE_SPEED_PAUSE)
 	xine_set_param (gGui->stream, XINE_PARAM_SPEED, 
@@ -1103,14 +1103,14 @@ void gui_change_speed_playback(xitk_widg
 	xine_set_param (gGui->stream, XINE_PARAM_SPEED, XINE_SPEED_SLOW_4);
     }
   }
-  else if(((int)data) == GUI_RESET) {
+  else if(((long)data) == GUI_RESET) {
     xine_set_param (gGui->stream, XINE_PARAM_SPEED, XINE_SPEED_NORMAL);
   }
   osd_update_status();
 }
 
 static void *_gui_set_current_position(void *data) {
-  int  pos = (int) data;
+  long pos = (long) data;
   int  update_mmk = 0;
   
   pthread_detach(pthread_self());
@@ -1195,7 +1195,7 @@ static void *_gui_set_current_position(v
 }
 
 static void *_gui_seek_relative(void *data) {
-  int off_sec = (int)data;
+  long off_sec = (long)data;
   int sec, pos;
   
   pthread_detach(pthread_self());
@@ -1250,7 +1250,7 @@ static void *_gui_seek_relative(void *da
   return NULL;
 }
 
-void gui_set_current_position (int pos) {
+void gui_set_current_position (long pos) {
   int        err;
   pthread_t  pth;
 
@@ -1269,7 +1269,7 @@ void gui_set_current_position (int pos) 
 
 }
 
-void gui_seek_relative (int off_sec) {
+void gui_seek_relative (long off_sec) {
   int        err;
   pthread_t  pth;
   
@@ -1421,7 +1421,7 @@ void gui_direct_nextprev(xitk_widget_t *
   if(mmk && mediamark_got_alternate(mmk))
     mediamark_unset_got_alternate(mmk);
 
-  if(((int)data) == GUI_NEXT) {
+  if(((long)data) == GUI_NEXT) {
 
     if(by_chapter) {
 
@@ -1475,7 +1475,7 @@ void gui_direct_nextprev(xitk_widget_t *
       }
     }
   }
-  else if(((int)data) == GUI_PREV) {
+  else if(((long)data) == GUI_PREV) {
     
     if(by_chapter) {
 
Index: xine-ui-0.99.4/src/xitk/actions.h
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/actions.h
+++ xine-ui-0.99.4/src/xitk/actions.h
@@ -63,8 +63,8 @@ void gui_change_audio_channel(xitk_widge
 void gui_direct_change_spu_channel(xitk_widget_t *w, void *data, int value);
 void gui_change_spu_channel(xitk_widget_t *w, void *data);
 void gui_change_speed_playback(xitk_widget_t *w, void *data);
-void gui_set_current_position (int pos);
-void gui_seek_relative (int off_sec) ;
+void gui_set_current_position (long pos);
+void gui_seek_relative (long off_sec) ;
 void gui_dndcallback (char *filename);
 void gui_change_skin(xitk_widget_t *w, void *data);
 void gui_direct_nextprev(xitk_widget_t *w, void *data, int value);
Index: xine-ui-0.99.4/src/xitk/event.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/event.c
+++ xine-ui-0.99.4/src/xitk/event.c
@@ -1644,7 +1644,7 @@ void gui_init_imlib (Visual *vis) {
   
   gGui->icon = XCreateBitmapFromData (gGui->display, 
 				      gGui->imlib_data->x.root,
-				      icon_datas, 40, 40);
+				      (char*)icon_datas, 40, 40);
 }
 
 /*
Index: xine-ui-0.99.4/src/xitk/event_sender.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/event_sender.c
+++ xine-ui-0.99.4/src/xitk/event_sender.c
@@ -181,7 +181,7 @@ static void event_sender_select(xitk_wid
 }
 
 static void event_sender_menu(xitk_widget_t *w, void *data) {
-  int event     = (int) data;
+  long event     = (long) data;
   int events[7] = {
     XINE_EVENT_INPUT_MENU1, XINE_EVENT_INPUT_MENU2, XINE_EVENT_INPUT_MENU3,
     XINE_EVENT_INPUT_MENU4, XINE_EVENT_INPUT_MENU5, XINE_EVENT_INPUT_MENU6,
@@ -192,7 +192,7 @@ static void event_sender_menu(xitk_widge
 }
 
 static void event_sender_num(xitk_widget_t *w, void *data) {
-  int event      = (int) data;
+  long event     = (long) data;
   int events[11] = { 
     XINE_EVENT_INPUT_NUMBER_0, XINE_EVENT_INPUT_NUMBER_1, XINE_EVENT_INPUT_NUMBER_2,
     XINE_EVENT_INPUT_NUMBER_3, XINE_EVENT_INPUT_NUMBER_4, XINE_EVENT_INPUT_NUMBER_5,
@@ -204,7 +204,7 @@ static void event_sender_num(xitk_widget
 }
 
 static void event_sender_angle(xitk_widget_t *w, void *data) {
-  int event      = (int) data;
+  long event     = (long) data;
   int events[11] = { 
     XINE_EVENT_INPUT_ANGLE_NEXT, XINE_EVENT_INPUT_ANGLE_PREVIOUS
   };
@@ -406,7 +406,8 @@ void event_sender_reparent(void) {
 void event_sender_panel(void) {
   GC                         gc;
   xitk_labelbutton_widget_t  lb;
-  int                        x, y, i;
+  int                        x, y;
+  long                       i;
   xitk_widget_t             *w;
 
   eventer = (_eventer_t *) xine_xmalloc(sizeof(_eventer_t));
@@ -549,7 +550,7 @@ void event_sender_panel(void) {
     char number[2];
     
     memset(&number, 0, sizeof(number));
-    snprintf(number, sizeof(number), "%d", i);
+    snprintf(number, sizeof(number), "%ld", i);
 
     lb.button_type       = CLICK_BUTTON;
     lb.label             = number;
@@ -586,7 +587,7 @@ void event_sender_panel(void) {
     i = 10;
     
     memset(&number, 0, sizeof(number));
-    snprintf(number, sizeof(number), "+ %d", i);
+    snprintf(number, sizeof(number), "+ %ld", i);
     
     lb.button_type       = CLICK_BUTTON;
     lb.label             = number;
Index: xine-ui-0.99.4/src/xitk/main.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/main.c
+++ xine-ui-0.99.4/src/xitk/main.c
@@ -1984,7 +1984,7 @@ int main(int argc, char *argv[]) {
     if(xine_config_lookup_entry(gGui->xine, "media.files.origin_path", &cfg_entry))
       snprintf(gGui->curdir, sizeof(gGui->curdir), "%s", cfg_entry.str_value);
     else
-      (void *) getcwd(&(gGui->curdir[0]), XITK_PATH_MAX);
+      (void) getcwd(&(gGui->curdir[0]), XITK_PATH_MAX);
 
   }
 
Index: xine-ui-0.99.4/src/xitk/mediamark.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/mediamark.c
+++ xine-ui-0.99.4/src/xitk/mediamark.c
@@ -876,6 +876,7 @@ static mediamark_t **guess_toxine_playli
 			mmkf.end        = -1;
 			mmkf.av_offset  = 0;
 			mmkf.spu_offset = 0;
+			mmkf.mrl        = NULL;
 
 			mmkf_members[0] = 0;  /* ident */
 			mmkf_members[1] = -1; /* mrl */
@@ -3199,7 +3200,7 @@ static void mmkeditor_select_sub(xitk_wi
   else
     open_path = gGui->curdir;
   
-  (void *) create_filebrowser(_("Pick a subtitle file"), open_path, hidden_file_cb, &cbb, NULL, NULL);
+  (void) create_filebrowser(_("Pick a subtitle file"), open_path, hidden_file_cb, &cbb, NULL, NULL);
 }
 
 void mmk_edit_mediamark(mediamark_t **mmk, apply_callback_t callback, void *data) {
Index: xine-ui-0.99.4/src/xitk/menus.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/menus.c
+++ xine-ui-0.99.4/src/xitk/menus.c
@@ -119,7 +119,7 @@ static void menu_event_sender(xitk_widge
   gui_execute_action_id(ACTID_EVENT_SENDER);
 }
 static void menu_menus_selection(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int event     = (int) data;
+  long event     = (long) data;
   int events[7] = {
     XINE_EVENT_INPUT_MENU1, XINE_EVENT_INPUT_MENU2, XINE_EVENT_INPUT_MENU3,
     XINE_EVENT_INPUT_MENU4, XINE_EVENT_INPUT_MENU5, XINE_EVENT_INPUT_MENU6,
@@ -141,7 +141,7 @@ static void menu_subtitle_selector(xitk_
   gui_execute_action_id(ACTID_SUBSELECT);
 }
 static void menu_playback_ctrl(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int ctrl = (int) data;
+  long ctrl = (long) data;
 
   switch(ctrl) {
 
@@ -178,12 +178,12 @@ static void menu_playback_ctrl(xitk_widg
     break;
 
   default:
-    printf("%s(): unknown control %d\n", __XINE_FUNCTION__, ctrl);
+    printf("%s(): unknown control %ld\n", __XINE_FUNCTION__, ctrl);
     break;
   }
 }
 static void menu_playlist_ctrl(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int ctrl = (int) data;
+  long ctrl = (long) data;
 
   switch(ctrl) {
 
@@ -229,7 +229,7 @@ static void menu_playlist_ctrl(xitk_widg
     break;
 
   default:
-    printf("%s(): unknown control %d\n", __XINE_FUNCTION__, ctrl);
+    printf("%s(): unknown control %ld\n", __XINE_FUNCTION__, ctrl);
     break;
   }
 }
@@ -268,7 +268,7 @@ static void menu_playlist_from(xitk_widg
   }
 }
 static void menu_stream(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int info = (int) data;
+  long info = (long) data;
 
   switch(info) {
   case STREAM_OSDI:
@@ -281,7 +281,7 @@ static void menu_stream(xitk_widget_t *w
   }
 }
 static void menu_audio_ctrl(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int ctrl = (int) data;
+  long ctrl = (long) data;
 
   switch(ctrl) {
   case AUDIO_MUTE:
@@ -325,33 +325,33 @@ static void menu_audio_ctrl(xitk_widget_
     break;
 
   default:
-    printf("%s(): unknown control %d\n", __XINE_FUNCTION__, ctrl);
+    printf("%s(): unknown control %ld\n", __XINE_FUNCTION__, ctrl);
     break;
   }
 }
 
 static void menu_audio_viz(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int viz = (int) data;
+  long viz = (long) data;
   
   config_update_num("gui.post_audio_plugin", viz);
 }
 static void menu_audio_chan(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int channel = (int) data;
+  long channel = (long) data;
 
   gui_direct_change_audio_channel(NULL, NULL, channel);
 }
 static void menu_spu_chan(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int channel = (int) data;
+  long channel = (long) data;
 
   gui_direct_change_spu_channel(NULL, NULL, channel);
 }
 static void menu_aspect(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int aspect = (int) data;
+  long aspect = (long) data;
   
   gui_toggle_aspect(aspect);
 }
 static void menu_video_ctrl(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int ctrl = (int) data;
+  long ctrl = (long) data;
 
   switch(ctrl) {
 
@@ -388,12 +388,12 @@ static void menu_video_ctrl(xitk_widget_
     break;
     
   default:
-    printf("%s(): unknown control %d\n", __XINE_FUNCTION__, ctrl);
+    printf("%s(): unknown control %ld\n", __XINE_FUNCTION__, ctrl);
     break;
   }
 }
 static void menu_settings(xitk_widget_t *w, xitk_menu_entry_t *me, void *data) {
-  int sets = (int) data;
+  long sets = (long) data;
 
   switch(sets) {
 
@@ -422,7 +422,7 @@ static void menu_settings(xitk_widget_t 
     break;
     
   default:
-    printf("%s(): unknown setting %d\n", __XINE_FUNCTION__, sets);
+    printf("%s(): unknown setting %ld\n", __XINE_FUNCTION__, sets);
     break;
   }
 }
@@ -845,7 +845,7 @@ void video_window_menu(xitk_widget_list_
     const char        **viz_names = post_get_audio_plugins_names();
 
     if(viz_names && *viz_names) {
-      int                 i = 0;
+      long                 i = 0;
       char               *location = _("Audio/Visualization");
       char                buffer[2048];
 
@@ -871,7 +871,7 @@ void video_window_menu(xitk_widget_list_
 
   { /* Audio channels */
     xitk_menu_entry_t   menu_entry;
-    int                 i;
+    long                i;
     char               *location = _("Audio/Channel");
     char                buffer[2048];
     int                 channel = xine_get_param(gGui->stream, XINE_PARAM_AUDIO_CHANNEL_LOGICAL);
@@ -900,7 +900,7 @@ void video_window_menu(xitk_widget_list_
 	if(i == 0) {
 	  for(i = 0; i < 15; i++) {
 	    memset(&menu_entry, 0, sizeof(xitk_menu_entry_t));
-	    snprintf(buffer, sizeof(buffer), "%s/%d", location, i);
+	    snprintf(buffer, sizeof(buffer), "%s/%ld", location, i);
 	    menu_entry.menu      = buffer;
 	    menu_entry.type      = IS_CHANNEL_CHECKED(channel, i);
 	    menu_entry.cb        = menu_audio_chan;
@@ -925,7 +925,7 @@ void video_window_menu(xitk_widget_list_
 
   { /* SPU channels */
     xitk_menu_entry_t   menu_entry;
-    int                 i;
+    long                i;
     char               *location = _("Subtitle/Channel");
     char                buffer[2048];
     int                 channel = xine_get_param(gGui->stream, XINE_PARAM_SPU_CHANNEL);
@@ -954,7 +954,7 @@ void video_window_menu(xitk_widget_list_
 	if(i == 0) {
 	  for(i = 0; i < 15; i++) {
 	    memset(&menu_entry, 0, sizeof(xitk_menu_entry_t));
-	    snprintf(buffer, sizeof(buffer), "%s/%d", location, i);
+	    snprintf(buffer, sizeof(buffer), "%s/%ld", location, i);
 	    menu_entry.menu      = buffer;
 	    menu_entry.type      = IS_CHANNEL_CHECKED(channel, i);
 	    menu_entry.cb        = menu_spu_chan;
@@ -990,7 +990,7 @@ void video_window_menu(xitk_widget_list_
       _("Audio"), _("Angle"), _("Part"), NULL
     };
     char              **menu = default_menu;
-    int                 i;
+    long                i;
     
     if((!strncmp(gGui->mmk.mrl, "dvd:/", 5)) || (!strncmp(gGui->mmk.mrl, "dvdnav:/", 8)))
       menu = dvd_menu;
@@ -1057,7 +1057,7 @@ void audio_lang_menu(xitk_widget_list_t 
 
   { /* Audio channels */
     xitk_menu_entry_t   menu_entry;
-    int                 i;
+    long                i;
     char                buffer[2048];
     int                 channel = xine_get_param(gGui->stream, XINE_PARAM_AUDIO_CHANNEL_LOGICAL);
     
@@ -1085,7 +1085,7 @@ void audio_lang_menu(xitk_widget_list_t 
 	if(i == 0) {
 	  for(i = 0; i < 15; i++) {
 	    memset(&menu_entry, 0, sizeof(xitk_menu_entry_t));
-	    snprintf(buffer, sizeof(buffer), "%d", i);
+	    snprintf(buffer, sizeof(buffer), "%ld", i);
 	    menu_entry.menu      = buffer;
 	    menu_entry.type      = IS_CHANNEL_CHECKED(channel, i);
 	    menu_entry.cb        = menu_audio_chan;
@@ -1133,7 +1133,7 @@ void spu_lang_menu(xitk_widget_list_t *w
 
   { /* SPU channels */
     xitk_menu_entry_t   menu_entry;
-    int                 i;
+    long                i;
     char                buffer[2048];
     int                 channel = xine_get_param(gGui->stream, XINE_PARAM_SPU_CHANNEL);
     
@@ -1160,7 +1160,7 @@ void spu_lang_menu(xitk_widget_list_t *w
 	if(i == 0) {
 	  for(i = 0; i < 15; i++) {
 	    memset(&menu_entry, 0, sizeof(xitk_menu_entry_t));
-	    snprintf(buffer, sizeof(buffer), "%d", i);
+	    snprintf(buffer, sizeof(buffer), "%ld", i);
 	    menu_entry.menu      = buffer;
 	    menu_entry.type      = IS_CHANNEL_CHECKED(channel, i);
 	    menu_entry.cb        = menu_spu_chan;
Index: xine-ui-0.99.4/src/xitk/network.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/network.c
+++ xine-ui-0.99.4/src/xitk/network.c
@@ -1,4 +1,4 @@
-#warning IMPLEMENT POST SUPPORT
+/* #warning IMPLEMENT POST SUPPORT TODO */
 /*
  * Copyright (C) 2000-2004 the xine project
  * 
@@ -224,7 +224,7 @@ struct client_info_s {
 
   int                   finished;
 
-  int                   socket;
+  long                  socket;
   struct sockaddr_in    sin;
   char                **actions;
 
@@ -2550,7 +2550,7 @@ static void do_halt(commands_t *cmd, cli
 }
 
 static void network_messenger(void *data, char *message) {
-  int socket = (int) data;
+  long socket = (long) data;
   
   sock_write(socket, message);
 }
Index: xine-ui-0.99.4/src/xitk/oxine/mediamarks.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/oxine/mediamarks.c
+++ xine-ui-0.99.4/src/xitk/oxine/mediamarks.c
@@ -440,7 +440,7 @@ static int file_is_m3u(const char *mrl) 
 static void parse_m3u(const char *mrl, list_t *items) {
   FILE *file;
   char **line;
-  int *n;
+  size_t *n;
   int a;
 
   file = fopen(mrl, "r");
Index: xine-ui-0.99.4/src/xitk/oxine/oxine.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/oxine/oxine.c
+++ xine-ui-0.99.4/src/xitk/oxine/oxine.c
@@ -58,15 +58,18 @@ struct menuitem_s {
 };
 
 
+#if 0
 static void main_menu_cb(void *data);
 static void media_stop_cb(void *data);
 static void media_info_cb(void *data);
 static void media_pause_cb(void *data, int i);
+#endif
 
 //static void event_delay(void *data);
 
 const char *playpause_strings[] = { "<", ">" };
 
+#if 0
 static void media_pause_cb(void *data, int i) {
   oxine_t *oxine = (oxine_t*) data;
  
@@ -99,7 +102,6 @@ static void media_tracks_list_cb(void *d
   odk_open_and_play(oxine->odk, mrl);
 }
 
-/*
 static void media_tracks_quit(void *data) {
   oxine_t *oxine = (oxine_t*) data;
 
@@ -110,7 +112,6 @@ static void media_tracks_quit(void *data
   oxine->pauseplay = NULL;
   otk_clear(oxine->otk); 
 }
-*/
 
 static void media_tracks_cb(void *data) {
   oxine_t *oxine = (oxine_t *) data;
@@ -136,7 +137,6 @@ static void media_tracks_cb(void *data) 
   otk_draw_all(oxine->otk);
 }
 
-#if 0
 static void info_button_time(void *data) {
   oxine_t *oxine = (oxine_t *)data;
   int ret, pos_time, length;
@@ -167,6 +167,7 @@ static void media_info_close_cb(void *da
   if (oxine->lines[2]) ho_free(oxine->lines[2]);
 }
 
+#if 0
 static void media_info_cb(void *data) {
   oxine_t *oxine = (oxine_t*) data;
   int pos_time, length, ret;
@@ -263,6 +264,7 @@ static void media_info_cb(void *data) {
 
   schedule_job(5000, media_info_close_cb, oxine);
 }
+#endif
 
 static void shutdown_cb (void *data) {
   gui_execute_action_id(ACTID_QUIT);
@@ -307,7 +309,7 @@ static void autoplay_cb (void *data) {
   }
 }  
 
-
+#if 0
 static void playing_menu_update(void *data) {
   oxine_t *oxine = (oxine_t *) data;
   int pos_time, length;
@@ -319,7 +321,6 @@ static void playing_menu_update(void *da
     }
 }
 
-#if 0
 static void playing_menu_cb(void *data) {
    oxine_t *oxine = (oxine_t *) data;
    otk_widget_t *b, *l;
Index: xine-ui-0.99.4/src/xitk/oxine/utils.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/oxine/utils.c
+++ xine-ui-0.99.4/src/xitk/oxine/utils.c
@@ -297,9 +297,9 @@ struct postfix_tag_s {
 static prefix_tag_t* heap_head=NULL;
 
 
-void static AddToLinkedList      ( prefix_tag_t* );
-void static RemoveFromLinkedList ( prefix_tag_t* );
-void static RenderDesc           ( prefix_tag_t*, char* );
+static void AddToLinkedList      ( prefix_tag_t* );
+static void RemoveFromLinkedList ( prefix_tag_t* );
+static void RenderDesc           ( prefix_tag_t*, char* );
 
 
 void *_gen_malloc(size_t wSize, const char* tag, char* lpFile, int nLine) {
@@ -435,7 +435,7 @@ void heapstat(void) {
 }
 
 
-void static AddToLinkedList(prefix_tag_t* lpAdd) {
+static void AddToLinkedList(prefix_tag_t* lpAdd) {
     /*--- Add before current head of list ---*/
     if (heap_head) {
         lpAdd->prev = heap_head->prev;
@@ -454,7 +454,7 @@ void static AddToLinkedList(prefix_tag_t
     heap_head = lpAdd;
 }
 
-void static RemoveFromLinkedList(prefix_tag_t* lpRemove) {
+static void RemoveFromLinkedList(prefix_tag_t* lpRemove) {
 
     /*--- Remove from doubly linked list ---*/
     (lpRemove->prev)->next = lpRemove->next;
@@ -467,7 +467,7 @@ void static RemoveFromLinkedList(prefix_
         }
 }
 
-int static ho_is_ok(void* content)
+static int ho_is_ok(void* content)
 {
     return ((content) && (!((long)content&(ALIGNMENT-1))));
 }
@@ -490,9 +490,9 @@ int ho_verify(void *content) {
 }
 
 
-void static RenderDesc(prefix_tag_t* prefix, char* lpBuffer) {
+static void RenderDesc(prefix_tag_t* prefix, char* lpBuffer) {
   if (prefix->content==&prefix[1]) {
-    sprintf( lpBuffer, "%i words @ 0x%08lx:", prefix->size, (unsigned long)prefix->content );
+    sprintf( lpBuffer, "%ld words @ 0x%08lx:", prefix->size, (unsigned long)prefix->content );
     if (prefix->filename) {
       sprintf( lpBuffer+strlen(lpBuffer), "%s:%ld ",
 	  prefix->filename, prefix->line );
Index: xine-ui-0.99.4/src/xitk/playlist.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/playlist.c
+++ xine-ui-0.99.4/src/xitk/playlist.c
@@ -307,7 +307,7 @@ void playlist_move_current_updown(xitk_w
     int          start = xitk_browser_get_current_start(playlist->playlist);
     int          max_vis_len = xitk_browser_get_num_entries(playlist->playlist);
 
-    if(((int)data) == DIRECTION_UP && (j > 0)) {
+    if(((long)data) == DIRECTION_UP && (j > 0)) {
       mmk = gGui->playlist.mmk[j - 1];
       
       if(j == gGui->playlist.cur)
@@ -317,7 +317,7 @@ void playlist_move_current_updown(xitk_w
       gGui->playlist.mmk[j] = mmk;
       j--;
     }
-    else if(((int)data) == DIRECTION_DOWN && (j < (gGui->playlist.num - 1))) {
+    else if(((long)data) == DIRECTION_DOWN && (j < (gGui->playlist.num - 1))) {
       mmk = gGui->playlist.mmk[j + 1];
       
       if(j == gGui->playlist.cur)
Index: xine-ui-0.99.4/src/xitk/xine-toolkit/browser.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/xine-toolkit/browser.c
+++ xine-ui-0.99.4/src/xitk/xine-toolkit/browser.c
@@ -68,7 +68,7 @@ static void paint(xitk_widget_t *w) {
 	bh += xitk_get_widget_height(private_data->item_tree[WSLID]);
 	(void) xitk_set_widget_pos(private_data->item_tree[WBDN], x + itemw, y + bh);
 	if(private_data->need_h_slider) {
-#warning NEED
+/* #warning NEED TODO */
 
 	}
 	
@@ -81,7 +81,7 @@ static void paint(xitk_widget_t *w) {
 	xitk_show_widget(private_data->item_tree[WBRT]);
 
 	if(private_data->need_h_slider) {
-#warning NEED
+/* #warning NEED TODO */
 	}
 
 	for(i = WBSTART; i < (private_data->max_length+WBSTART); i++) {
Index: xine-ui-0.99.4/src/xitk/xine-toolkit/cursors.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/xine-toolkit/cursors.c
+++ xine-ui-0.99.4/src/xitk/xine-toolkit/cursors.c
@@ -692,7 +692,7 @@ static void _cursors_create_cursor(Displ
     {
       XColor black = xitk_get_black_pixel_color();
       
-      cursor->p      = XCreateBitmapFromData(display, DefaultRootWindow(display), no_data, 8, 8);
+      cursor->p      = XCreateBitmapFromData(display, DefaultRootWindow(display), (char*)no_data, 8, 8);
       cursor->cursor = XCreatePixmapCursor(display, cursor->p, cursor->p, &black, &black, 0, 0);
     }
     break;
Index: xine-ui-0.99.4/src/xitk/xine-toolkit/font.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/xine-toolkit/font.c
+++ xine-ui-0.99.4/src/xitk/xine-toolkit/font.c
@@ -837,7 +837,7 @@ void xitk_font_draw_string(xitk_font_t *
     xr_color.alpha = (short)-1;
     xft_draw       = XftDrawCreate(xtfs->display, pix, visual, colormap);
     XftColorAllocValue(xtfs->display, visual, colormap, &xr_color, &xcolor);
-    XftDrawStringUtf8(xft_draw, &xcolor, xtfs->font, x, y, encoded_text, strlen(encoded_text));
+    XftDrawStringUtf8(xft_draw, &xcolor, xtfs->font, x, y, (unsigned char*)encoded_text, strlen(encoded_text));
     XftColorFree(xtfs->display, visual, colormap, &xcolor);
     XftDrawDestroy(xft_draw);
 
@@ -1093,7 +1093,7 @@ void xitk_font_text_extent(xitk_font_t *
   free(foo_text);
   
   XLOCK(xtfs->display);
-  XftTextExtentsUtf8(xtfs->display, xtfs->font, encoded_text, nbytes, &xft_extents);
+  XftTextExtentsUtf8(xtfs->display, xtfs->font, (unsigned char*)encoded_text, nbytes, &xft_extents);
   XUNLOCK(xtfs->display);
   free(encoded_text);
 
Index: xine-ui-0.99.4/src/xitk/xine-toolkit/mrlbrowser.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/xine-toolkit/mrlbrowser.c
+++ xine-ui-0.99.4/src/xitk/xine-toolkit/mrlbrowser.c
@@ -46,6 +46,8 @@
 
 #undef DEBUG_MRLB
 
+void gui_handle_event (XEvent *event, void *data);
+
 static xitk_mrlbrowser_filter_t __mrl_filters[] = {
   { "All"                 , "*"            },
   { "*.vob"               , "vob"          }, /* mpeg block */
@@ -836,11 +838,11 @@ static void mrlbrowser_select_mrl(mrlbro
     xitk_browser_release_all_buttons(private_data->mrlb_list);
 
     if(add_callback && private_data->add_callback)
-      private_data->add_callback(NULL, (void *) j, 
+      private_data->add_callback(NULL, (void *)(long)j, 
 				 private_data->mc->filtered_mrls[j]);
     
     if(play_callback && private_data->play_callback)
-      private_data->play_callback(NULL, (void *) j,
+      private_data->play_callback(NULL, (void *)(long)j,
 				  private_data->mc->filtered_mrls[j]);
   }
 }
Index: xine-ui-0.99.4/src/xitk/xine-toolkit/skin.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/xine-toolkit/skin.c
+++ xine-ui-0.99.4/src/xitk/xine-toolkit/skin.c
@@ -107,7 +107,7 @@ static void skin_free_cache(xitk_skin_co
 /*
  *
  */
-#warning FIXME
+/* #warning FIXME */
 static char *_expanded(xitk_skin_config_t *skonfig, char *cmd) {
   char *p;
   char *ret = NULL;
Index: xine-ui-0.99.4/src/xitk/xine-toolkit/xitk.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/xine-toolkit/xitk.c
+++ xine-ui-0.99.4/src/xitk/xine-toolkit/xitk.c
@@ -1746,7 +1746,7 @@ void xitk_xevent_notify(XEvent *event) {
     else
       FXUNLOCK(fx);
     
-#warning FIXME
+/* #warning FIXME */
     if(gXitk->modalw != None) {
       fx = (__gfx_t *) xitk_list_next_content(gXitk->gfx);
 
