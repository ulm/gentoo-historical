Index: xine-ui-0.99.4/src/common/utils.c
===================================================================
--- xine-ui-0.99.4.orig/src/common/utils.c
+++ xine-ui-0.99.4/src/common/utils.c
@@ -195,7 +195,7 @@ int mkdir_safe(char *path) {
   pp = buf;
   while((p = xine_strsep(&pp, "/")) != NULL) {
     if(p && strlen(p)) {
-      sprintf(buf2, "%s/%s", buf2, p);
+      sprintf(buf2+strlen(buf2), "/%s", p);
       if(!_mkdir_safe(buf2))
 	return 0;
     }
Index: xine-ui-0.99.4/src/fb/osd.c
===================================================================
--- xine-ui-0.99.4.orig/src/fb/osd.c
+++ xine-ui-0.99.4/src/fb/osd.c
@@ -392,34 +392,34 @@ void osd_stream_infos(void) {
     len = strlen(buffer);
     switch(audiochannel) {
     case -2:
-      sprintf(buffer, "%soff", buffer);
+      strcat(buffer, "off");
       break;
     case -1:
       if(!xine_get_audio_lang (fbxine.stream, audiochannel, &buffer[len]))
-	sprintf(buffer, "%sauto", buffer);
+	strcat(buffer, "auto");
       break;
     default:
       if(!xine_get_audio_lang (fbxine.stream, audiochannel, &buffer[len]))
-	sprintf(buffer, "%s%3d", buffer, audiochannel);
+	sprintf(&buffer[len], "%3d", audiochannel);
       break;
     }
 
-    sprintf(buffer, "%s, Spu: ", buffer);
+    strcat(buffer, ", Spu: ");
     len = strlen(buffer);
     switch (spuchannel) {
     case -2:
-      sprintf(buffer, "%soff", buffer);
+      strcat(buffer, "off");
       break;
     case -1:
       if(!xine_get_spu_lang (fbxine.stream, spuchannel, &buffer[len]))
-	sprintf(buffer, "%sauto", buffer);
+	strcat(buffer, "auto");
       break;
     default:
       if(!xine_get_spu_lang (fbxine.stream, spuchannel, &buffer[len]))
-        sprintf(buffer, "%s%3d", buffer, spuchannel);
+        sprintf(&buffer[len], "%3d", spuchannel);
       break;
     }
-    sprintf(buffer, "%s.", buffer);
+    strcat(buffer, ".");
     xine_osd_draw_text(fbxine.osd.sinfo, x, y, buffer, XINE_OSD_TEXT1);
     xine_osd_get_text_size(fbxine.osd.sinfo, buffer, &w, &h);
     if(w > osdw)
Index: xine-ui-0.99.4/src/xitk/file_browser.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/file_browser.c
+++ xine-ui-0.99.4/src/xitk/file_browser.c
@@ -983,7 +983,7 @@ static void fb_delete_file_cb(xitk_widge
       snprintf(buf, sizeof(buf), "%s", fb->current_dir);
       if(strlen(fb->current_dir) > 1)
 	strcat(buf, "/");
-      sprintf(buf, "%s%s", buf, fb->norm_files[sel].name);
+      strcat(buf, fb->norm_files[sel].name);
       
       if((unlink(buf)) == -1)
 	xine_error(_("Unable to delete file '%s': %s."), buf, strerror(errno));
@@ -1006,7 +1006,7 @@ static void fb_delete_file(xitk_widget_t
     snprintf(buf, sizeof(buf), _("Do you really want to delete the file: '%s'"), fb->current_dir);
     if(strlen(fb->current_dir) > 1)
       strcat(buf, "/");
-    sprintf(buf, "%s%s' ?.", buf, fb->norm_files[sel].name);
+    sprintf(buf+strlen(buf), "%s' ?", fb->norm_files[sel].name);
     
     fb_deactivate(fb);
     xitk_window_dialog_yesno(gGui->imlib_data, _("Confirm deletion ?"),
@@ -1025,7 +1025,7 @@ static void fb_rename_file_cb(xitk_widge
   snprintf(buf, sizeof(buf), "%s", fb->current_dir);
   if(strlen(fb->current_dir) > 1)
     strcat(buf, "/");
-  sprintf(buf, "%s%s", buf, fb->norm_files[sel].name);
+  strcat(buf, fb->norm_files[sel].name);
   
   if((rename(buf, newname)) == -1)
     xine_error(_("Unable to rename file '%s' to '%s': %s."), buf, newname, strerror(errno));
@@ -1044,7 +1044,7 @@ static void fb_rename_file(xitk_widget_t
     snprintf(buf, sizeof(buf), "%s", fb->current_dir);
     if(strlen(fb->current_dir) > 1)
       strcat(buf, "/");
-    sprintf(buf, "%s%s", buf, fb->norm_files[sel].name);
+    strcat(buf, fb->norm_files[sel].name);
     
     fb_deactivate(fb);
     fb_create_input_window(_("Rename file"), buf, fb_rename_file_cb, fb);
Index: xine-ui-0.99.4/src/xitk/kbindings.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/kbindings.c
+++ xine-ui-0.99.4/src/xitk/kbindings.c
@@ -596,12 +596,12 @@ static void _kbindings_check_redundancy(
 	    char *header = _("The following key bindings pairs are identical:\n\n");
 	    len += strlen(header);
 	    kmsg = (char *) xine_xmalloc(len + 1);
-	    sprintf(kmsg, "%s%s%c%s%c%s", header, action1,' ', dna, ' ', action2);
+	    sprintf(kmsg, "%s%s %s %s", header, action1, dna, action2);
 	  }
 	  else {
 	    len += 2;
 	    kmsg = (char *) realloc(kmsg, strlen(kmsg) + len + 1);
-	    sprintf(kmsg, "%s%s%s%c%s%c%s", kmsg, ", ", action1, ' ', dna, ' ', action2);
+	    sprintf(kmsg+strlen(kmsg), ", %s %s %s", action1, dna, action2);
 	  }
 	}
       }
@@ -613,7 +613,7 @@ static void _kbindings_check_redundancy(
     char          *footer = _(".\n\nWhat do you want to do ?\n");
     
     kmsg = (char *) realloc(kmsg, strlen(kmsg) + strlen(footer) + 1);
-    sprintf(kmsg, "%s%s", kmsg, footer);
+    strcat(kmsg, footer);
 
     dump_error(gGui->verbosity, kmsg);
 
@@ -1013,16 +1013,14 @@ static void _kbindings_display_kbindings
     
     for(k = kbt->entry, i = 0; k[i]->action != NULL; i++) {
       if(!k[i]->is_alias) {
-	sprintf(buf, "# %s\n", k[i]->comment);
-	sprintf(buf, "%sbegin\n", buf);
-	sprintf(buf, "%s\tremote = xxxxx\n", buf);
-	sprintf(buf, "%s\tbutton = xxxxx\n", buf);
-	sprintf(buf, "%s\tprog   = xine\n", buf);
-	sprintf(buf, "%s\trepeat = 0\n", buf);
-	sprintf(buf, "%s\tconfig = %s\n", buf, k[i]->action);
-	sprintf(buf, "%send\n\n", buf);
-	fputs(buf, stream);
-	memset(&buf, 0, sizeof(buf));
+	fprintf(stream, "# %s\n"
+	                "begin\n"
+	                "\tremote = xxxxx\n"
+	                "\tbutton = xxxxx\n"
+	                "\tprog   = xine\n"
+	                "\trepeat = 0\n"
+	                "\tconfig = %s\n"
+	                "end\n\n", k[i]->comment, k[i]->action);
       }
     }
     fprintf(stream, "##\n# End of xine key bindings.\n##\n");
@@ -1034,33 +1032,31 @@ static void _kbindings_display_kbindings
     fprintf(stream, "# Automatically generated by %s version %s.\n##\n\n", PACKAGE, VERSION);
 
     for(k = kbt->entry, i = 0; k[i]->action != NULL; i++) {
-      snprintf(buf, sizeof(buf), "# %s\n", k[i]->comment);
+      fprintf(stream, "# %s\n", k[i]->comment);
 
       if(k[i]->is_alias) {
-	sprintf(buf, "%sAlias {\n", buf);
-	sprintf(buf, "%s\tentry = %s\n", buf, k[i]->action);
+	fprintf(stream, "Alias {\n"
+	                "\tentry = %s\n", k[i]->action);
       }
       else
-	sprintf(buf, "%s%s {\n", buf, k[i]->action);
+	fprintf(stream, "%s {\n", k[i]->action);
 
-      sprintf(buf, "%s\tkey = %s\n", buf, k[i]->key);
-      sprintf(buf, "%s%s", buf, "\tmodifier = ");
+      fprintf(stream, "\tkey = %s\n", k[i]->key);
+      strcpy(buf, "\tmodifier = ");
       if(k[i]->modifier == KEYMOD_NOMOD)
-	sprintf(buf, "%s%s, ", buf, "none");
+	strcat(buf, "none, ");
       if(k[i]->modifier & KEYMOD_CONTROL)
-	sprintf(buf, "%s%s, ", buf, "control");
+	strcat(buf, "control, ");
       if(k[i]->modifier & KEYMOD_META)
-	sprintf(buf, "%s%s, ", buf, "meta");
+	strcat(buf, "meta, ");
       if(k[i]->modifier & KEYMOD_MOD3)
-	sprintf(buf, "%s%s, ", buf, "mod3");
+	strcat(buf, "mod3, ");
       if(k[i]->modifier & KEYMOD_MOD4)
-	sprintf(buf, "%s%s, ", buf, "mod4");
+	strcat(buf, "mod4, ");
       if(k[i]->modifier & KEYMOD_MOD5)
-	sprintf(buf, "%s%s, ", buf, "mod5");
-      buf[strlen(buf) - 2] = '\n';
-      buf[strlen(buf) - 1] = '\0';
-      sprintf(buf, "%s%s", buf, "}\n\n");
-      fprintf(stream, "%s", buf);
+	strcat(buf, "mod5, ");
+      buf[strlen(buf) - 2] = '\0';
+      fprintf(stream, "%s\n}\n\n", buf);
       memset(&buf, 0, sizeof(buf));
     }
     fprintf(stream, "##\n# End of xine key bindings.\n##\n");
@@ -1273,31 +1269,35 @@ static char *_kbindings_get_shortcut_fro
     memset(&shortcut, 0, sizeof(shortcut));
     
     if(gGui->shortcut_style == 0) {
-      if(kbe->modifier & KEYMOD_CONTROL)
-	sprintf(shortcut, "%s%s+", shortcut, _("Ctrl"));
-      if(kbe->modifier & KEYMOD_META)
-	sprintf(shortcut, "%s%s+", shortcut, _("Alt"));
+      if(kbe->modifier & KEYMOD_CONTROL) {
+	strcat(shortcut, _("Ctrl"));
+	strcat(shortcut, "+");
+      }
+      if(kbe->modifier & KEYMOD_META) {
+	strcat(shortcut, _("Alt"));
+	strcat(shortcut, "+");
+      }
       if(kbe->modifier & KEYMOD_MOD3)
-	sprintf(shortcut, "%s%s+", shortcut, "M3");
+	strcat(shortcut, "M3+");
       if(kbe->modifier & KEYMOD_MOD4)
-	sprintf(shortcut, "%s%s+", shortcut, "M4");
+	strcat(shortcut, "M4+");
       if(kbe->modifier & KEYMOD_MOD5)
-	sprintf(shortcut, "%s%s+", shortcut, "M5");
+	strcat(shortcut, "M5+");
     }
     else {
       if(kbe->modifier & KEYMOD_CONTROL)
-	sprintf(shortcut, "%s%s-", shortcut, "C");
+	strcat(shortcut, "C-");
       if(kbe->modifier & KEYMOD_META)
-	sprintf(shortcut, "%s%s-", shortcut, "M");
+	strcat(shortcut, "M-");
       if(kbe->modifier & KEYMOD_MOD3)
-	sprintf(shortcut, "%s%s-", shortcut, "M3");
+	strcat(shortcut, "M3-");
       if(kbe->modifier & KEYMOD_MOD4)
-	sprintf(shortcut, "%s%s-", shortcut, "M4");
+	strcat(shortcut, "M4-");
       if(kbe->modifier & KEYMOD_MOD5)
-	sprintf(shortcut, "%s%s-", shortcut, "M5");
+	strcat(shortcut, "M5-");
     }
     
-    sprintf(shortcut, "%s%s", shortcut, kbe->key);
+    strcat(shortcut, kbe->key);
     
     return shortcut;
   }
@@ -2492,23 +2492,23 @@ int main(int argc, char **argv) {
 	  sprintf(buf, "%s", "\\fBC\\fP");
 	if(k[i]->modifier & KEYMOD_META) {
 	  if(strlen(buf))
-	    sprintf(buf, "%s%s", buf, "\\-");
-	  sprintf(buf, "%s%s", buf, "\\fBM\\fP");
+	    strcat(buf, "\\-");
+	  strcat(buf, "\\fBM\\fP");
 	}
 	if(k[i]->modifier & KEYMOD_MOD3) {
 	  if(strlen(buf))
-	    sprintf(buf, "%s%s", buf, "\\-");
-	  sprintf(buf, "%s%s", buf, "\\fBM3\\fP");
+	    strcat(buf, "\\-");
+	  strcat(buf, "\\fBM3\\fP");
 	}
 	if(k[i]->modifier & KEYMOD_MOD4) {
 	  if(strlen(buf))
-	    sprintf(buf, "%s%s", buf, "\\-");
-	  sprintf(buf, "%s%s", buf, "\\fBM4\\fP");
+	    strcat(buf, "\\-");
+	  strcat(buf, "\\fBM4\\fP");
 	}
 	if(k[i]->modifier & KEYMOD_MOD5) {
 	  if(strlen(buf))
-	    sprintf(buf, "%s%s", buf, "\\-");
-	  sprintf(buf, "%s%s", buf, "\\fBM5\\fP");
+	    strcat(buf, "\\-");
+	  strcat(buf, "\\fBM5\\fP");
 	}
 	printf("%s\\-", buf);
       }
Index: xine-ui-0.99.4/src/xitk/kbindings_man.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/kbindings_man.c
+++ xine-ui-0.99.4/src/xitk/kbindings_man.c
@@ -596,12 +596,12 @@ static void _kbindings_check_redundancy(
 	    char *header = _("The following key bindings pairs are identical:\n\n");
 	    len += strlen(header);
 	    kmsg = (char *) xine_xmalloc(len + 1);
-	    sprintf(kmsg, "%s%s%c%s%c%s", header, action1,' ', dna, ' ', action2);
+	    sprintf(kmsg, "%s%s %s %s", header, action1, dna, action2);
 	  }
 	  else {
 	    len += 2;
 	    kmsg = (char *) realloc(kmsg, strlen(kmsg) + len + 1);
-	    sprintf(kmsg, "%s%s%s%c%s%c%s", kmsg, ", ", action1, ' ', dna, ' ', action2);
+	    sprintf(kmsg+strlen(kmsg), ", %s %s %s", action1, dna, action2);
 	  }
 	}
       }
@@ -613,7 +613,7 @@ static void _kbindings_check_redundancy(
     char          *footer = _(".\n\nWhat do you want to do ?\n");
     
     kmsg = (char *) realloc(kmsg, strlen(kmsg) + strlen(footer) + 1);
-    sprintf(kmsg, "%s%s", kmsg, footer);
+    strcat(kmsg, footer);
 
     dump_error(gGui->verbosity, kmsg);
 
@@ -1013,16 +1013,14 @@ static void _kbindings_display_kbindings
     
     for(k = kbt->entry, i = 0; k[i]->action != NULL; i++) {
       if(!k[i]->is_alias) {
-	sprintf(buf, "# %s\n", k[i]->comment);
-	sprintf(buf, "%sbegin\n", buf);
-	sprintf(buf, "%s\tremote = xxxxx\n", buf);
-	sprintf(buf, "%s\tbutton = xxxxx\n", buf);
-	sprintf(buf, "%s\tprog   = xine\n", buf);
-	sprintf(buf, "%s\trepeat = 0\n", buf);
-	sprintf(buf, "%s\tconfig = %s\n", buf, k[i]->action);
-	sprintf(buf, "%send\n\n", buf);
-	fputs(buf, stream);
-	memset(&buf, 0, sizeof(buf));
+	fprintf(stream, "# %s\n"
+	                "begin\n"
+	                "\tremote = xxxxx\n"
+	                "\tbutton = xxxxx\n"
+	                "\tprog   = xine\n"
+	                "\trepeat = 0\n"
+	                "\tconfig = %s\n"
+	                "end\n\n", k[i]->comment, k[i]->action);
       }
     }
     fprintf(stream, "##\n# End of xine key bindings.\n##\n");
@@ -1034,33 +1032,31 @@ static void _kbindings_display_kbindings
     fprintf(stream, "# Automatically generated by %s version %s.\n##\n\n", PACKAGE, VERSION);
 
     for(k = kbt->entry, i = 0; k[i]->action != NULL; i++) {
-      snprintf(buf, sizeof(buf), "# %s\n", k[i]->comment);
+      fprintf(stream, "# %s\n", k[i]->comment);
 
       if(k[i]->is_alias) {
-	sprintf(buf, "%sAlias {\n", buf);
-	sprintf(buf, "%s\tentry = %s\n", buf, k[i]->action);
+	fprintf(stream, "Alias {\n"
+	                "\tentry = %s\n", k[i]->action);
       }
       else
-	sprintf(buf, "%s%s {\n", buf, k[i]->action);
+	fprintf(stream, "%s {\n", k[i]->action);
 
-      sprintf(buf, "%s\tkey = %s\n", buf, k[i]->key);
-      sprintf(buf, "%s%s", buf, "\tmodifier = ");
+      fprintf(stream, "\tkey = %s\n", k[i]->key);
+      strcpy(buf, "\tmodifier = ");
       if(k[i]->modifier == KEYMOD_NOMOD)
-	sprintf(buf, "%s%s, ", buf, "none");
+	sprintf(buf+strlen(buf), "%s, ", "none");
       if(k[i]->modifier & KEYMOD_CONTROL)
-	sprintf(buf, "%s%s, ", buf, "control");
+	sprintf(buf+strlen(buf), "%s, ", "control");
       if(k[i]->modifier & KEYMOD_META)
-	sprintf(buf, "%s%s, ", buf, "meta");
+	sprintf(buf+strlen(buf), "%s, ", "meta");
       if(k[i]->modifier & KEYMOD_MOD3)
-	sprintf(buf, "%s%s, ", buf, "mod3");
+	sprintf(buf+strlen(buf), "%s, ", "mod3");
       if(k[i]->modifier & KEYMOD_MOD4)
-	sprintf(buf, "%s%s, ", buf, "mod4");
+	sprintf(buf+strlen(buf), "%s, ", "mod4");
       if(k[i]->modifier & KEYMOD_MOD5)
-	sprintf(buf, "%s%s, ", buf, "mod5");
-      buf[strlen(buf) - 2] = '\n';
-      buf[strlen(buf) - 1] = '\0';
-      sprintf(buf, "%s%s", buf, "}\n\n");
-      fprintf(stream, "%s", buf);
+	sprintf(buf+strlen(buf), "%s, ", "mod5");
+      buf[strlen(buf) - 2] = '\0';
+      fprintf(stream, "%s\n}\n\n", buf);
       memset(&buf, 0, sizeof(buf));
     }
     fprintf(stream, "##\n# End of xine key bindings.\n##\n");
@@ -1273,31 +1269,35 @@ static char *_kbindings_get_shortcut_fro
     memset(&shortcut, 0, sizeof(shortcut));
     
     if(gGui->shortcut_style == 0) {
-      if(kbe->modifier & KEYMOD_CONTROL)
-	sprintf(shortcut, "%s%s+", shortcut, _("Ctrl"));
-      if(kbe->modifier & KEYMOD_META)
-	sprintf(shortcut, "%s%s+", shortcut, _("Alt"));
+      if(kbe->modifier & KEYMOD_CONTROL) {
+	strcat(shortcut, _("Ctrl"));
+	strcat(shortcut, "+");
+      }
+      if(kbe->modifier & KEYMOD_META) {
+	strcat(shortcut, _("Alt"));
+	strcat(shortcut, "+");
+      }
       if(kbe->modifier & KEYMOD_MOD3)
-	sprintf(shortcut, "%s%s+", shortcut, "M3");
+	strcat(shortcut, "M3+");
       if(kbe->modifier & KEYMOD_MOD4)
-	sprintf(shortcut, "%s%s+", shortcut, "M4");
+	strcat(shortcut, "M4+");
       if(kbe->modifier & KEYMOD_MOD5)
-	sprintf(shortcut, "%s%s+", shortcut, "M5");
+	strcat(shortcut, "M5+");
     }
     else {
       if(kbe->modifier & KEYMOD_CONTROL)
-	sprintf(shortcut, "%s%s-", shortcut, "C");
+	strcat(shortcut, "C-");
       if(kbe->modifier & KEYMOD_META)
-	sprintf(shortcut, "%s%s-", shortcut, "M");
+	strcat(shortcut, "M-");
       if(kbe->modifier & KEYMOD_MOD3)
-	sprintf(shortcut, "%s%s-", shortcut, "M3");
+	strcat(shortcut, "M3-");
       if(kbe->modifier & KEYMOD_MOD4)
-	sprintf(shortcut, "%s%s-", shortcut, "M4");
+	strcat(shortcut, "M4-");
       if(kbe->modifier & KEYMOD_MOD5)
-	sprintf(shortcut, "%s%s-", shortcut, "M5");
+	strcat(shortcut, "M5-");
     }
     
-    sprintf(shortcut, "%s%s", shortcut, kbe->key);
+    strcat(shortcut, kbe->key);
     
     return shortcut;
   }
@@ -2492,23 +2492,23 @@ int main(int argc, char **argv) {
 	  sprintf(buf, "%s", "\\fBC\\fP");
 	if(k[i]->modifier & KEYMOD_META) {
 	  if(strlen(buf))
-	    sprintf(buf, "%s%s", buf, "\\-");
-	  sprintf(buf, "%s%s", buf, "\\fBM\\fP");
+	    strcat(buf, "\\-");
+	  strcat(buf, "\\fBM\\fP");
 	}
 	if(k[i]->modifier & KEYMOD_MOD3) {
 	  if(strlen(buf))
-	    sprintf(buf, "%s%s", buf, "\\-");
-	  sprintf(buf, "%s%s", buf, "\\fBM3\\fP");
+	    strcat(buf, "\\-");
+	  strcat(buf, "\\fBM3\\fP");
 	}
 	if(k[i]->modifier & KEYMOD_MOD4) {
 	  if(strlen(buf))
-	    sprintf(buf, "%s%s", buf, "\\-");
-	  sprintf(buf, "%s%s", buf, "\\fBM4\\fP");
+	    strcat(buf, "\\-");
+	  strcat(buf, "\\fBM4\\fP");
 	}
 	if(k[i]->modifier & KEYMOD_MOD5) {
 	  if(strlen(buf))
-	    sprintf(buf, "%s%s", buf, "\\-");
-	  sprintf(buf, "%s%s", buf, "\\fBM5\\fP");
+	    strcat(buf, "\\-");
+	  strcat(buf, "\\fBM5\\fP");
 	}
 	printf("%s\\-", buf);
       }
Index: xine-ui-0.99.4/src/xitk/main.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/main.c
+++ xine-ui-0.99.4/src/xitk/main.c
@@ -466,11 +466,12 @@ static void print_formatted(char *title,
     len = strlen(buffer);
     
     if((len + (strlen(plugin) + 3)) < 80) {
-      sprintf(buffer, "%s%s%s", buffer, (strlen(buffer) == strlen(blanks)) ? "" : ", ", plugin);
+      if (len != strlen(blanks))
+        strcat(buffer, ", ");
+      strcat(buffer, plugin);
     }
     else {
-      printf("%s", buffer);
-      printf(",\n");
+      printf("%s,\n", buffer);
       snprintf(buffer, sizeof(buffer), "%s%s", blanks, plugin);
     }
     
@@ -1107,9 +1108,9 @@ static void event_listener(void *user_da
 		 "%s:", _("*drum roll*, xine lib wants to take your attention "
 			  "to deliver an important message to you ;-):"));
 	if(data->explanation)
-	  sprintf(buffer, "%s %s %s", buffer, (char *) data + data->explanation, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), " %s %s", (char *) data + data->explanation, (char *) data + data->parameters);
 	else
-	  sprintf(buffer, "%s %s", buffer, _("No Information available."));
+	  sprintf(buffer+strlen(buffer), " %s", _("No Information available."));
 	  
 	break;
 
@@ -1118,14 +1119,14 @@ static void event_listener(void *user_da
 	snprintf(buffer, sizeof(buffer), "%s", _("The host you're trying to connect is unknown.\n"
 						 "Check the validity of the specified hostname."));
 	if(data->explanation)
-	  sprintf(buffer, "%s (%s)", buffer, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), " (%s)", (char *) data + data->parameters);
 	break;
 	
 	/* (device name) */
       case XINE_MSG_UNKNOWN_DEVICE:
 	snprintf(buffer, sizeof(buffer), "%s", _("The device name you specified seems invalid."));
 	if(data->explanation)
-	  sprintf(buffer, "%s (%s)", buffer, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), " (%s)", (char *) data + data->parameters);
 	break;
 
 	/* none */
@@ -1133,21 +1134,21 @@ static void event_listener(void *user_da
 	snprintf(buffer, sizeof(buffer), "%s", _("The network looks unreachable.\nCheck your network "
 						 "setup and/or the server name."));
 	if(data->explanation)
-	  sprintf(buffer, "%s (%s)", buffer, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), " (%s)", (char *) data + data->parameters);
 	break;
 
 	/* (host name) */
       case XINE_MSG_CONNECTION_REFUSED:
 	snprintf(buffer, sizeof(buffer), "%s", _("The connection was refused.\nCheck the host name."));
 	if(data->explanation)
-	  sprintf(buffer, "%s (%s)", buffer, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), " (%s)", (char *) data + data->parameters);
 	break;
 
 	/* (file name or mrl) */
       case XINE_MSG_FILE_NOT_FOUND:
 	snprintf(buffer, sizeof(buffer), "%s", _("The specified file or mrl is not found. Please check it twice."));
 	if(data->explanation)
-	  sprintf(buffer, "%s (%s)", buffer, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), " (%s)", (char *) data + data->parameters);
 	break;
 
 	/* (device/file/mrl) */
@@ -1156,27 +1157,27 @@ static void event_listener(void *user_da
 						 "rights for this, or source doesn't contain data "
 						 "(e.g: not disc in drive)."));
 	if(data->explanation)
-	  sprintf(buffer, "%s (%s)", buffer, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), " (%s)", (char *) data + data->parameters);
 	break;
 	
 	/* (library/decoder) */
       case XINE_MSG_LIBRARY_LOAD_ERROR:
 	snprintf(buffer, sizeof(buffer), "%s", _("A problem occur while loading a library or a decoder"));
 	if(data->explanation)
-	  sprintf(buffer, "%s: %s", buffer, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), ": %s", (char *) data + data->parameters);
 	break;
 
 	/* none */
       case XINE_MSG_ENCRYPTED_SOURCE:
 	snprintf(buffer, sizeof(buffer), "%s", _("The source seems encrypted, and can't be read."));
 	if(!strncasecmp(gGui->mmk.mrl, "dvd:/", 5)) {
-	  sprintf(buffer, "%s%s", buffer, _("\nYour DVD is probably crypted. "
-					    "According to your country laws, you can or can't "
-					    "install/use libdvdcss to be able to read this disc, "
-					    "which you bought."));
+	  strcat(buffer, _("\nYour DVD is probably crypted. "
+			   "According to your country laws, you can or can't "
+			   "install/use libdvdcss to be able to read this disc, "
+			   "which you bought."));
 	}
 	if(data->explanation)
-	  sprintf(buffer, "%s (%s)", buffer, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), " (%s)", (char *) data + data->parameters);
 	break;
 
 	/* (warning message) */
@@ -1197,17 +1198,17 @@ static void event_listener(void *user_da
       default:
 	snprintf(buffer, sizeof(buffer), "%s", _("*sight*, unkown error."));
 	if(data->explanation)
-	  sprintf(buffer, "%s (%s %s)", buffer, (char *) data + data->explanation, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), " (%s %s)", (char *) data + data->explanation, (char *) data + data->parameters);
 	break;
       }
       
       if(gGui->verbosity >= XINE_VERBOSITY_DEBUG) {
-	sprintf(buffer, "%s\n\n[", buffer);
+	strcat(buffer, "\n\n[");
 	
 	if(data->explanation)
-	  sprintf(buffer, "%s'%s' '%s'", buffer, (char *) data + data->explanation, (char *) data + data->parameters);
+	  sprintf(buffer+strlen(buffer), "'%s' '%s'", (char *) data + data->explanation, (char *) data + data->parameters);
 	
-	sprintf(buffer, "%s]", buffer);
+	strcat(buffer, "]");
       }
       
       if(strlen(buffer))
Index: xine-ui-0.99.4/src/xitk/mediamark.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/mediamark.c
+++ xine-ui-0.99.4/src/xitk/mediamark.c
@@ -561,7 +561,7 @@ static mediamark_t **guess_m3u_playlist(
 		    if((buffer[strlen(buffer) - 1] == '/') && (*ln == '/'))
 		      buffer[strlen(buffer) - 1] = '\0';
 		    
-		    sprintf(buffer, "%s%s", buffer, ln);
+		    strcat(buffer, ln);
 		    
 		    if(_file_exist(buffer))
 		      entry = buffer;
@@ -681,7 +681,7 @@ static mediamark_t **guess_sfv_playlist(
 			  if((buffer[strlen(buffer) - 1] == '/') && (*ln == '/'))
 			    buffer[strlen(buffer) - 1] = '\0';
 			  
-			  sprintf(buffer, "%s%s", buffer, ln);
+			  strcat(buffer, ln);
 			  
 			  if(_file_exist(buffer))
 			    entry = buffer;
@@ -774,7 +774,7 @@ static mediamark_t **guess_raw_playlist(
 		  if((buffer[strlen(buffer) - 1] == '/') && (*ln == '/'))
 		    buffer[strlen(buffer) - 1] = '\0';
 		  
-		  sprintf(buffer, "%s%s", buffer, ln);
+		  strcat(buffer, ln);
 		  
 		  if(_file_exist(buffer))
 		    entry = buffer;
@@ -1125,7 +1125,7 @@ static mediamark_t **xml_asx_playlist(pl
 		  sprintf(real_title, "%s", atitle);
 		    
 		  if(aauthor && strlen(aauthor))
-		    sprintf(real_title, "%s (%s)", real_title, aauthor);
+		    sprintf(real_title+strlen(real_title), " (%s)", aauthor);
 		}
 		  
 		mmk = (mediamark_t **) realloc(mmk, sizeof(mediamark_t *) * (entries_asx + 2));
Index: xine-ui-0.99.4/src/xitk/network.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/network.c
+++ xine-ui-0.99.4/src/xitk/network.c
@@ -550,7 +550,7 @@ static int __sock_write(int socket, int 
   /* Each line sent is '\n' terminated */
   if(cr) {
     if((buf[strlen(buf)] == '\0') && (buf[strlen(buf) - 1] != '\n'))
-      sprintf(buf, "%s%c", buf, '\n');
+      strcat(buf, "\n");
   }
   
   return _sock_write(socket, buf, strlen(buf));
@@ -746,15 +746,15 @@ static void client_help(session_t *sessi
   while(session_commands[i]->command != NULL) {
     if(session_commands[i]->enable) {
       if((curpos + maxlen) >= 80) {
-	sprintf(buf, "%s\n       ", buf);
+	strcat(buf, "\n       ");
 	curpos = 7;
       }
       
-      sprintf(buf, "%s%s", buf, session_commands[i]->command);
+      strcat(buf, session_commands[i]->command);
       curpos += strlen(session_commands[i]->command);
       
       for(j = 0; j < (maxlen - strlen(session_commands[i]->command)); j++) {
-	sprintf(buf, "%s ", buf);
+	strcat(buf, " ");
 	curpos++;
       }
     }
@@ -1111,10 +1111,9 @@ static void session_single_shot(session_
   memset(&buf, 0, sizeof(buf));
 
   for(i = 0; i < num_commands; i++) {
-    if(strlen(buf))
-      sprintf(buf, "%s %s", buf, commands[i]);
-    else
-      snprintf(buf, sizeof(buf), "%s", commands[i]);
+    if(i)
+      strcat(buf, " ");
+    strcat(buf, commands[i]);
   }
 
   client_handle_command(session, buf);
@@ -1709,11 +1708,11 @@ static void do_commands(commands_t *cmd,
   
   while(commands[i].command != NULL) {
     if(commands[i].public) {
-      sprintf(buf, "%s\t%s", buf, commands[i].command);
+      sprintf(buf+strlen(buf), "\t%s", commands[i].command);
     }
     i++;
   }
-  sprintf(buf, "%s.\n", buf);
+  strcat(buf, ".\n");
   sock_write(client_info->socket, buf);
 }
 
@@ -1744,22 +1743,22 @@ static void do_help(commands_t *cmd, cli
     while(commands[i].command != NULL) {
       if(commands[i].public) {
 	if((curpos + maxlen) >= 80) {
-	  sprintf(buf, "%s\n       ", buf);
+	  strcat(buf, "\n       ");
 	  curpos = 7;
 	}
 	
-	sprintf(buf, "%s%s", buf, commands[i].command);
+	strcat(buf, commands[i].command);
 	curpos += strlen(commands[i].command);
 	
 	for(j = 0; j < (maxlen - strlen(commands[i].command)); j++) {
-	  sprintf(buf, "%s ", buf);
+	  strcat(buf, " ");
 	  curpos++;
 	}
       }
       i++;
     }
     
-    sprintf(buf, "%s\n", buf);
+    strcat(buf, "\n");
     sock_write(client_info->socket, buf);
   }
   else {
@@ -2091,11 +2090,11 @@ static void do_get(commands_t *cmd, clie
 	status = xine_get_status(gGui->stream);
 	
 	if(status <= XINE_STATUS_QUIT)
-	  sprintf(buf, "%s%s", buf, status_struct[status].name);
+	  strcat(buf, status_struct[status].name);
 	else
-	  sprintf(buf, "%s%s", buf, "*UNKNOWN*");
+	  strcat(buf, "*UNKNOWN*");
 	
-	sprintf(buf, "%s%c", buf, '\n');
+	strcat(buf, "\n");
 	sock_write(client_info->socket, buf);
       }
       else if(is_arg_contain(client_info, 1, "speed")) {
@@ -2111,11 +2110,11 @@ static void do_get(commands_t *cmd, clie
 	}
 	
 	if(i < ((sizeof(speeds_struct) / sizeof(speeds_struct[0])) - 1))
-	  sprintf(buf, "%s%s", buf, speeds_struct[i].name);
+	  strcat(buf, speeds_struct[i].name);
 	else
-	  sprintf(buf, "%s%s", buf, "*UNKNOWN*");
+	  strcat(buf, "*UNKNOWN*");
 	
-	sprintf(buf, "%s%c", buf, '\n');
+	strcat(buf, "\n");
 	sock_write(client_info->socket, buf);
       }
       else if(is_arg_contain(client_info, 1, "position")) {
@@ -2149,26 +2148,26 @@ static void do_get(commands_t *cmd, clie
 
 	switch(gGui->playlist.loop) {
 	case PLAYLIST_LOOP_NO_LOOP:
-	  sprintf(buf, "%s%s", buf, "'No Loop'");
+	  strcat(buf, "'No Loop'");
 	  break;
 	case PLAYLIST_LOOP_LOOP:
-	  sprintf(buf, "%s%s", buf, "'Loop'");
+	  strcat(buf, "'Loop'");
 	  break;
 	case PLAYLIST_LOOP_REPEAT:
-	  sprintf(buf, "%s%s", buf, "'Repeat'");
+	  strcat(buf, "'Repeat'");
 	  break;
 	case PLAYLIST_LOOP_SHUFFLE:
-	  sprintf(buf, "%s%s", buf, "'Shuffle'");
+	  strcat(buf, "'Shuffle'");
 	  break;
 	case PLAYLIST_LOOP_SHUF_PLUS:	
-	  sprintf(buf, "%s%s", buf, "'Shuffle forever'");
+	  strcat(buf, "'Shuffle forever'");
 	  break;
 	default:
-	  sprintf(buf, "%s%s", buf, "'!!Unknown!!'");
+	  strcat(buf, "'!!Unknown!!'");
 	  break;
 	}
 
-	sprintf(buf, "%s.\n", buf);
+	strcat(buf, ".\n");
 	sock_write(client_info->socket, buf);
       }
     }
Index: xine-ui-0.99.4/src/xitk/osd.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/osd.c
+++ xine-ui-0.99.4/src/xitk/osd.c
@@ -361,34 +361,34 @@ void osd_stream_infos(void) {
     len = strlen(buffer);
     switch(audiochannel) {
     case -2:
-      sprintf(buffer, "%s%s", buffer, "off");
+      strcat(buffer, "off");
       break;
     case -1:
       if(!xine_get_audio_lang (gGui->stream, audiochannel, &buffer[len]))
-	sprintf(buffer, "%s%s", buffer, "auto");
+	strcat(buffer, "auto");
       break;
     default:
       if(!xine_get_audio_lang (gGui->stream, audiochannel, &buffer[len]))
-	sprintf(buffer, "%s%3d", buffer, audiochannel);
+	sprintf(buffer+strlen(buffer), "%3d", audiochannel);
       break;
     }
 
-    sprintf(buffer, "%s%s", buffer, ", Spu: ");
+    strcat(buffer, ", Spu: ");
     len = strlen(buffer);
     switch (spuchannel) {
     case -2:
-      sprintf(buffer, "%s%s", buffer, "off");
+      strcat(buffer, "off");
       break;
     case -1:
       if(!xine_get_spu_lang (gGui->stream, spuchannel, &buffer[len]))
-	sprintf(buffer, "%s%s", buffer, "auto");
+	strcat(buffer, "auto");
       break;
     default:
       if(!xine_get_spu_lang (gGui->stream, spuchannel, &buffer[len]))
-        sprintf(buffer, "%s%3d", buffer, spuchannel);
+        sprintf(buffer+strlen(buffer), "%3d", spuchannel);
       break;
     }
-    sprintf(buffer, "%s.", buffer);
+    strcat(buffer, ".");
     xine_osd_draw_text(gGui->osd.sinfo.osd[0], x, y, buffer, XINE_OSD_TEXT1);
     xine_osd_get_text_size(gGui->osd.sinfo.osd[0], buffer, &w, &h);
     if(w > osdw)
@@ -407,12 +407,12 @@ void osd_stream_infos(void) {
       int totaldays;
       
       totaldays  = totaltime / (3600 * 24);
-      sprintf(buffer, "%s(%.0f%%) %s ", buffer, ((float)playedtime / (float)totaltime) * 100, _("of"));
+      sprintf(buffer+strlen(buffer), "(%.0f%%) %s ", ((float)playedtime / (float)totaltime) * 100, _("of"));
       
       if(totaldays > 0)
-	sprintf(buffer, "%s%d::%02d", buffer, totaldays, totaltime / 3600);
+	sprintf(buffer+strlen(buffer), "%d::%02d", totaldays, totaltime / 3600);
       else
-	sprintf(buffer, "%s%d:%02d:%02d", buffer, totaltime / 3600, (totaltime % 3600) / 60, totaltime % 60);
+	sprintf(buffer+strlen(buffer), "%d:%02d:%02d", totaltime / 3600, (totaltime % 3600) / 60, totaltime % 60);
     }
     
     xine_osd_draw_text(gGui->osd.sinfo.osd[0], x, y, buffer, XINE_OSD_TEXT1);
Index: xine-ui-0.99.4/src/xitk/stream_infos.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/stream_infos.c
+++ xine-ui-0.99.4/src/xitk/stream_infos.c
@@ -265,11 +265,11 @@ char *stream_infos_get_ident_from_stream
     if((aartist && strlen(aartist)) || (aalbum && strlen(aalbum))) {
       strcat(ident, " (");
       if(aartist && strlen(aartist))
-	sprintf(ident, "%s%s", ident, aartist);
+	strcat(ident, aartist);
       if((aartist && strlen(aartist)) && (aalbum && strlen(aalbum)))
 	strcat(ident, " - ");
       if(aalbum && strlen(aalbum))
-	sprintf(ident, "%s%s", ident, aalbum);
+	strcat(ident, aalbum);
       strcat(ident, ")");
     }
   }
Index: xine-ui-0.99.4/src/xitk/viewlog.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/viewlog.c
+++ xine-ui-0.99.4/src/xitk/viewlog.c
@@ -229,7 +229,7 @@ static void viewlog_change_section(xitk_
 	    break;
 	    
 	  default:
-	    sprintf(buf, "%s%c", buf, *p);
+	    sprintf(buf+strlen(buf), "%c", *p);
 	    break;
 	  }
 	  
Index: xine-ui-0.99.4/src/xitk/xine-remote.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/xine-remote.c
+++ xine-ui-0.99.4/src/xitk/xine-remote.c
@@ -550,7 +550,7 @@ static int __sock_write(int socket, int 
   /* Each line sent is '\n' terminated */
   if(cr) {
     if((buf[strlen(buf)] == '\0') && (buf[strlen(buf) - 1] != '\n'))
-      sprintf(buf, "%s%c", buf, '\n');
+      strcat(buf, "\n");
   }
   
   return _sock_write(socket, buf, strlen(buf));
@@ -746,15 +746,15 @@ static void client_help(session_t *sessi
   while(session_commands[i]->command != NULL) {
     if(session_commands[i]->enable) {
       if((curpos + maxlen) >= 80) {
-	sprintf(buf, "%s\n       ", buf);
+	strcat(buf, "\n       ");
 	curpos = 7;
       }
       
-      sprintf(buf, "%s%s", buf, session_commands[i]->command);
+      strcat(buf, session_commands[i]->command);
       curpos += strlen(session_commands[i]->command);
       
       for(j = 0; j < (maxlen - strlen(session_commands[i]->command)); j++) {
-	sprintf(buf, "%s ", buf);
+	strcat(buf, " ");
 	curpos++;
       }
     }
@@ -1111,10 +1111,9 @@ static void session_single_shot(session_
   memset(&buf, 0, sizeof(buf));
 
   for(i = 0; i < num_commands; i++) {
-    if(strlen(buf))
-      sprintf(buf, "%s %s", buf, commands[i]);
-    else
-      snprintf(buf, sizeof(buf), "%s", commands[i]);
+    if(i)
+      strcat(buf, " ");
+    strcat(buf, commands[i]);
   }
 
   client_handle_command(session, buf);
@@ -1709,11 +1708,11 @@ static void do_commands(commands_t *cmd,
   
   while(commands[i].command != NULL) {
     if(commands[i].public) {
-      sprintf(buf, "%s\t%s", buf, commands[i].command);
+      sprintf(buf+strlen(buf), "\t%s", commands[i].command);
     }
     i++;
   }
-  sprintf(buf, "%s.\n", buf);
+  strcat(buf, ".\n");
   sock_write(client_info->socket, buf);
 }
 
@@ -1744,22 +1743,22 @@ static void do_help(commands_t *cmd, cli
     while(commands[i].command != NULL) {
       if(commands[i].public) {
 	if((curpos + maxlen) >= 80) {
-	  sprintf(buf, "%s\n       ", buf);
+	  strcat(buf, "\n       ");
 	  curpos = 7;
 	}
 	
-	sprintf(buf, "%s%s", buf, commands[i].command);
+	strcat(buf, commands[i].command);
 	curpos += strlen(commands[i].command);
 	
 	for(j = 0; j < (maxlen - strlen(commands[i].command)); j++) {
-	  sprintf(buf, "%s ", buf);
+	  strcat(buf, " ");
 	  curpos++;
 	}
       }
       i++;
     }
     
-    sprintf(buf, "%s\n", buf);
+    strcat(buf, "\n");
     sock_write(client_info->socket, buf);
   }
   else {
@@ -2091,11 +2090,11 @@ static void do_get(commands_t *cmd, clie
 	status = xine_get_status(gGui->stream);
 	
 	if(status <= XINE_STATUS_QUIT)
-	  sprintf(buf, "%s%s", buf, status_struct[status].name);
+	  strcat(buf, status_struct[status].name);
 	else
-	  sprintf(buf, "%s%s", buf, "*UNKNOWN*");
+	  strcat(buf, "*UNKNOWN*");
 	
-	sprintf(buf, "%s%c", buf, '\n');
+	strcat(buf, "\n");
 	sock_write(client_info->socket, buf);
       }
       else if(is_arg_contain(client_info, 1, "speed")) {
@@ -2111,11 +2110,11 @@ static void do_get(commands_t *cmd, clie
 	}
 	
 	if(i < ((sizeof(speeds_struct) / sizeof(speeds_struct[0])) - 1))
-	  sprintf(buf, "%s%s", buf, speeds_struct[i].name);
+	  strcat(buf, speeds_struct[i].name);
 	else
-	  sprintf(buf, "%s%s", buf, "*UNKNOWN*");
+	  strcat(buf, "*UNKNOWN*");
 	
-	sprintf(buf, "%s%c", buf, '\n');
+	strcat(buf, "\n");
 	sock_write(client_info->socket, buf);
       }
       else if(is_arg_contain(client_info, 1, "position")) {
@@ -2149,26 +2148,26 @@ static void do_get(commands_t *cmd, clie
 
 	switch(gGui->playlist.loop) {
 	case PLAYLIST_LOOP_NO_LOOP:
-	  sprintf(buf, "%s%s", buf, "'No Loop'");
+	  strcat(buf, "'No Loop'");
 	  break;
 	case PLAYLIST_LOOP_LOOP:
-	  sprintf(buf, "%s%s", buf, "'Loop'");
+	  strcat(buf, "'Loop'");
 	  break;
 	case PLAYLIST_LOOP_REPEAT:
-	  sprintf(buf, "%s%s", buf, "'Repeat'");
+	  strcat(buf, "'Repeat'");
 	  break;
 	case PLAYLIST_LOOP_SHUFFLE:
-	  sprintf(buf, "%s%s", buf, "'Shuffle'");
+	  strcat(buf, "'Shuffle'");
 	  break;
 	case PLAYLIST_LOOP_SHUF_PLUS:	
-	  sprintf(buf, "%s%s", buf, "'Shuffle forever'");
+	  strcat(buf, "'Shuffle forever'");
 	  break;
 	default:
-	  sprintf(buf, "%s%s", buf, "'!!Unknown!!'");
+	  strcat(buf, "'!!Unknown!!'");
 	  break;
 	}
 
-	sprintf(buf, "%s.\n", buf);
+	strcat(buf, ".\n");
 	sock_write(client_info->socket, buf);
       }
     }
Index: xine-ui-0.99.4/src/xitk/xine-toolkit/image.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/xine-toolkit/image.c
+++ xine-ui-0.99.4/src/xitk/xine-toolkit/image.c
@@ -1334,7 +1334,7 @@ static void _draw_frame(ImlibData *im, x
       /* Cut title, add three dots a the end */
       nchar -= 4;
       snprintf(buf, nchar, "%s", title);
-      sprintf(buf, "%s%s", buf, "...");
+      strcat(buf, "...");
     }
     else
       sprintf(buf, "%s", title);
Index: xine-ui-0.99.4/src/xitk/xine-toolkit/skin.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/xine-toolkit/skin.c
+++ xine-ui-0.99.4/src/xitk/xine-toolkit/skin.c
@@ -149,44 +149,44 @@ static char *_expanded(xitk_skin_config_
 		snprintf(ppath, sizeof(ppath), "%s", skonfig->path);
 		if((z = strrchr(ppath, '/')) != NULL) {
 		  *z = '\0';
-		  sprintf(buf2, "%s%s", buf2, ppath);
+		  strcat(buf2, ppath);
 		}
 	      }
 	    }
 	    else if(!strncmp("SKIN_VERSION", var, strlen(var))) {
 	      if(skonfig->version >= 0)
-		sprintf(buf2, "%s%d", buf2, skonfig->version);
+		sprintf(buf2+strlen(buf2), "%d", skonfig->version);
 	    }
 	    else if(!strncmp("SKIN_AUTHOR", var, strlen(var))) {
 	      if(skonfig->author)
-		sprintf(buf2, "%s%s", buf2, skonfig->author);
+		strcat(buf2, skonfig->author);
 	    }
 	    else if(!strncmp("SKIN_PATH", var, strlen(var))) {
 	      if(skonfig->path)
-		sprintf(buf2, "%s%s", buf2, skonfig->path);
+		strcat(buf2, skonfig->path);
 	    }
 	    else if(!strncmp("SKIN_NAME", var, strlen(var))) {
 	      if(skonfig->name)
-		sprintf(buf2, "%s%s", buf2, skonfig->name);
+		strcat(buf2, skonfig->name);
 	    }
 	    else if(!strncmp("SKIN_DATE", var, strlen(var))) {
 	      if(skonfig->date)
-		sprintf(buf2, "%s%s", buf2, skonfig->date);
+		strcat(buf2, skonfig->date);
 	    }
 	    else if(!strncmp("SKIN_URL", var, strlen(var))) {
 	      if(skonfig->url)
-		sprintf(buf2, "%s%s", buf2, skonfig->url);
+		strcat(buf2, skonfig->url);
 	    }
 	    else if(!strncmp("HOME", var, strlen(var))) {
 	      if(skonfig->url)
-		sprintf(buf2, "%s%s", buf2, xitk_get_homedir());
+		strcat(buf2, xitk_get_homedir());
 	    }
 	    /* else ignore */
 	  }
 	  break;
 	  
 	default:
-	  sprintf(buf2, "%s%c", buf2, *p);
+	  sprintf(buf2+strlen(buf2), "%c", *p);
 	  break;
 	}
 	p++;
Index: xine-ui-0.99.4/src/xitk/xine-toolkit/xitk.c
===================================================================
--- xine-ui-0.99.4.orig/src/xitk/xine-toolkit/xitk.c
+++ xine-ui-0.99.4/src/xitk/xine-toolkit/xitk.c
@@ -1851,7 +1851,7 @@ void xitk_init(Display *display, XColor 
 	    gXitk->use_xshm = 0;
 	  else {
 	    XShmDetach(display, &shminfo);
-	    sprintf(buffer, "%s%s", buffer, "[XShm]");
+	    strcat(buffer, "[XShm]");
 	  }
 	  
 	  XDestroyImage(xim);
@@ -1867,12 +1867,12 @@ void xitk_init(Display *display, XColor 
 #endif
 
 #ifdef WITH_XFT
-  sprintf(buffer, "%s%s", buffer, "[XFT]");
+  strcat(buffer, "[XFT]");
 #elif defined(WITH_XMB)
-  sprintf(buffer, "%s%s", buffer, "[XMB]");
+  strcat(buffer, "[XMB]");
 #endif
   
-  sprintf(buffer, "%s%s", buffer, " ]-");
+  strcat(buffer, " ]-");
 
   if(verbosity)
     printf("%s", buffer);
