Index: xine-ui-0.99.4/configure.ac
===================================================================
--- xine-ui-0.99.4.orig/configure.ac
+++ xine-ui-0.99.4/configure.ac
@@ -569,7 +569,7 @@ dnl
 dnl
 dnl
 AC_CHECK_LIB(posix4, nanosleep)
-AC_CHECK_FUNCS(vsnprintf snprintf strpbrk strsep nanosleep)
+AC_CHECK_FUNCS(vsnprintf snprintf strpbrk strsep nanosleep strndup getline)
 AC_CHECK_HEADER(stdarg.h, AC_DEFINE(HAVE_STDARGS,,[Define this is you have stdarg.h header file installed]))
 AC_CHECK_HEADERS(string.h strings.h alloca.h linux/kd.hb execinfo.h)
 
Index: xine-ui-0.99.4/src/common/utils.c
===================================================================
--- xine-ui-0.99.4.orig/src/common/utils.c
+++ xine-ui-0.99.4/src/common/utils.c
@@ -1,5 +1,7 @@
 /* 
  * Copyright (C) 2000-2004 the xine project
+ * Portions of this file are copyright (c) 2005 Andrew Tridgell
+ * Portions of this file are copyright (c) 2003 ETC s.r.o.
  * 
  * This file is part of xine, a unix video player.
  * 
@@ -851,3 +853,107 @@ void dump_info(int verbosity, char *msg)
     fprintf(stderr, "%s", "\n------------------- (END OF INFO) ------------------\n\n");
   }
 }
+
+#ifndef HAVE_STRNLEN
+/**
+ Some platforms don't have strnlen
+**/
+ size_t strnlen(const char *s, size_t n)
+{
+        int i;
+        for (i=0; s[i] && i<n; i++)
+                /* noop */ ;
+        return i;
+}
+#endif
+
+#ifndef HAVE_STRNDUP
+/**
+ Some platforms don't have strndup.
+**/
+ char *strndup(const char *s, size_t n)
+{
+  char *ret;
+
+  n = strnlen(s, n);
+  ret = malloc(n+1);
+  if (!ret)
+    return NULL;
+  memcpy(ret, s, n);
+  ret[n] = 0;
+
+  return ret;
+}
+#endif
+
+#ifndef HAVE_GETDELIM
+
+#define GETDELIM_BUFFER 128
+
+ssize_t
+getdelim( char **lineptr, size_t *n, int delimiter, FILE *stream )
+{
+        char *p;
+        int c;
+        size_t len = 0;
+
+        if (!lineptr || !n || (!*lineptr && *n))
+                return -1;
+
+        /* allocate initial buffer */
+        if (!*lineptr || !*n) {
+                char *np;
+                np = realloc( *lineptr, GETDELIM_BUFFER );
+                if (!np)
+                        return -1;
+                *n = GETDELIM_BUFFER;
+                *lineptr = np;
+        }
+
+        p = *lineptr;
+
+        /* read characters from stream */
+        while ((c = fgetc( stream )) != EOF) {
+                if (len >= *n) {
+                        char *np = realloc( *lineptr, *n * 2 );
+                        if (!np)
+                                return -1;
+                        p = np + (p - *lineptr);
+                        *lineptr = np;
+                        *n *= 2;
+                }
+                *p++ = (char) c;
+                len++;
+                if (delimiter == c)
+                        break;
+        }
+
+        /* end of file without any bytes read */
+        if ((c == EOF) && (len == 0))
+                return -1;
+
+        /* trailing '\0' */
+        if (len >= *n) {
+                char *np = realloc( *lineptr, *n + 1 );
+                if (!np)
+                        return -1;
+                p = np + (p - *lineptr);
+                *lineptr = np;
+                *n += 1;
+        }
+        *p = '\0';
+
+        return len;
+}
+
+#endif /* HAVE_GETDELIM */
+
+#ifndef HAVE_GETLINE
+
+ssize_t
+getline( char **lineptr, size_t *n, FILE *stream )
+{
+        return getdelim( lineptr, n, '\n', stream );
+}
+
+#endif /* HAVE_GETLINE */
Index: xine-ui-0.99.4/src/common/utils.h
===================================================================
--- xine-ui-0.99.4.orig/src/common/utils.h
+++ xine-ui-0.99.4/src/common/utils.h
@@ -95,4 +95,16 @@ void dump_xfree_info(Display *display, i
 void dump_error(int verbosity, char *msg);
 void dump_info(int verbosity, char *msg);
 
+#ifndef HAVE_STRNDUP
+char *strndup(const char *s, size_t n);
+#endif
+
+#ifndef HAVE_GETDELIM
+ssize_t getdelim( char **lineptr, size_t *n, int delimiter, FILE *stream );
+#endif
+
+#ifndef HAVE_GETLINE
+ssize_t getline( char **lineptr, size_t *n, FILE *stream );
+#endif
+
 #endif
