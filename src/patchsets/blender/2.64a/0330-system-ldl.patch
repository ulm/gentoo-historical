Index: blender-2.64a/build_files/scons/tools/Blender.py
===================================================================
--- blender-2.64a.orig/build_files/scons/tools/Blender.py
+++ blender-2.64a/build_files/scons/tools/Blender.py
@@ -295,6 +295,7 @@ def setup_syslibs(lenv):
         syslibs.append(lenv['BF_EXPAT_LIB'])
     if lenv['WITH_BF_COLAMD']:
         syslibs += Split(lenv['BF_COLAMD_LIB'])
+    syslibs += ['ldl']
 
     if lenv['WITH_BF_JEMALLOC']:
         if not lenv['WITH_BF_STATICJEMALLOC']:
Index: blender-2.64a/extern/libmv/SConscript
===================================================================
--- blender-2.64a.orig/extern/libmv/SConscript
+++ blender-2.64a/extern/libmv/SConscript
@@ -26,7 +26,6 @@ src += env.Glob('libmv/simple_pipeline/*
 src += env.Glob('libmv/tracking/*.cc')
 src += env.Glob('third_party/fast/*.c')
 src += env.Glob('third_party/gflags/*.cc')
-src += env.Glob('third_party/ldl/Source/*.c')
 src += env.Glob('third_party/ssba/Geometry/*.cpp')
 src += env.Glob('third_party/ssba/Math/*.cpp')
 
@@ -63,7 +62,7 @@ else:
         ccflags_libmv += Split(env['REL_CCFLAGS'])
         cxxflags_libmv += Split(env['REL_CXXFLAGS'])
 
-incs += ' ./third_party/ssba ./third_party/ldl/Include'
+incs += ' ./third_party/ssba'
 
 env.BlenderLib ( libname = 'extern_libmv', sources=src, includes=Split(incs), defines=defs, libtype=['extern', 'player'], priority=[20,137], compileflags=cflags_libmv, cc_compileflags=ccflags_libmv, cxx_compileflags=cxxflags_libmv )
 
