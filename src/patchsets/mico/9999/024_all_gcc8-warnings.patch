From 46fdd7c91bf78353004f8dbc7c8f15e1cd887af1 Mon Sep 17 00:00:00 2001
From: Michael Haubenwallner <michael.haubenwallner@ssi-schaefer.com>
Date: Wed, 22 May 2019 15:30:37 +0200
Subject: [PATCH 19/19] fix some gcc-8 compiler warnings

cexp.y:532:20: warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]
      if (!pedantic < spec_long)
                    ^
cexp.y:532:10: note: add parentheses around left hand side expression to silence this warning
      if (!pedantic < spec_long)
          ^~~~~~~~~
          (        )
cexp.y: In function 'yylex':
cexp.y:687:16: warning: type defaults to 'int' in declaration of 'num_chars' [-Wimplicit-int]
       register num_chars = 0;
---
 cpp/cexp.y | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/cpp/cexp.y b/cpp/cexp.y
index 133539f..6d83155 100644
--- a/cpp/cexp.y
+++ b/cpp/cexp.y
@@ -529,7 +529,7 @@ parse_number (olen)
       while (1) {
 	if (c == 'l' || c == 'L')
 	  {
-	    if (!pedantic < spec_long)
+	    if ((!pedantic) < spec_long))
 	      yyerror ("too many `l's in integer constant");
 	    spec_long++;
 	  }
@@ -684,7 +684,7 @@ yylex ()
        It is mostly copied from c-lex.c.  */
     {
       register HOST_WIDE_INT result = 0;
-      register num_chars = 0;
+      register int num_chars = 0;
       unsigned width = MAX_CHAR_TYPE_SIZE;
       int max_chars;
       char *token_buffer;
-- 
2.19.2

