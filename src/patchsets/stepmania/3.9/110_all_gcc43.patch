--- src/ModelTypes.h	2004-08-19 10:29:16.000000000 +0200
+++ src/ModelTypes.h.new	2008-04-04 03:48:01.000000000 +0200
@@ -6,6 +6,7 @@
 #define MS_MAX_NAME             32
 
 #include "RageTypes.h"
+#include <cstring>
 
 struct msTriangle
 {
--- src/crypto51/filters.h	2004-05-13 08:02:27.000000000 +0200
+++ src/crypto51/filters.h.new	2008-04-04 03:50:33.000000000 +0200
@@ -7,6 +7,7 @@
 #include "smartptr.h"
 #include "queue.h"
 #include "algparam.h"
+#include <memory>
 
 NAMESPACE_BEGIN(CryptoPP)
 
--- src/crypto/CryptSH512.h	2004-06-08 07:30:52.000000000 +0200
+++ src/crypto/CryptSH512.h.new	2008-04-04 03:50:24.000000000 +0200
@@ -1,6 +1,8 @@
 #ifndef SSH_SHA512_H
 #define SSH_SHA512_H
 
+#include <cstring>
+
 typedef struct
 {
 	unsigned long hi, lo;
--- src/crypto/CryptSHA.h	2004-06-08 07:30:52.000000000 +0200
+++ src/crypto/CryptSHA.h.new	2008-04-04 03:53:07.000000000 +0200
@@ -1,6 +1,8 @@
 #ifndef SSHSHA_H
 #define SSHSHA_H
 
+#include <cstring>
+
 typedef struct {
 	uint32_t h[5];
 	unsigned char block[64];
--- src/crypto/CryptRand.h	2004-06-08 07:30:52.000000000 +0200
+++ src/crypto/CryptRand.h.new	2008-04-04 03:52:58.000000000 +0200
@@ -1,6 +1,8 @@
 #ifndef SSH_RAND_H
 #define SSH_RAND_H
 
+#include <cstring>
+
 void random_init();
 void random_add_noise( const CString &noise );
 unsigned char random_byte();
--- src/crypto/CryptBn.h	2004-06-08 07:30:52.000000000 +0200
+++ src/crypto/CryptBn.h.new	2008-04-04 03:52:51.000000000 +0200
@@ -1,6 +1,8 @@
 #ifndef SSHBN_H
 #define SSHBN_H
 
+#include <cstring>
+
 #if defined __GNUC__ && defined __i386__
 typedef unsigned long BignumInt;
 typedef unsigned long long BignumDblInt;
--- src/NetworkSyncServer.h	2008-04-04 03:46:16.000000000 +0200
+++ src/NetworkSyncServer.h.new	2008-04-04 03:52:43.000000000 +0200
@@ -7,6 +7,8 @@
 #include "ezsockets.h"
 #define NETMAXBUFFERSIZE 1020
 
+#include <cstring>
+
 class LanPlayer
 {
 public:
--- src/RageSurface.h	2004-09-06 01:37:04.000000000 +0200
+++ src/RageSurface.h.new	2008-04-04 03:52:33.000000000 +0200
@@ -3,6 +3,8 @@
 #ifndef RAGE_SURFACE_H
 #define RAGE_SURFACE_H
 
+#include <cstring>
+
 /* XXX remove? */
 struct RageSurfaceColor 
 {
--- src/RageSoundReader.h	2004-08-21 09:01:54.000000000 +0200
+++ src/RageSoundReader.h.new	2008-04-04 03:52:25.000000000 +0200
@@ -5,6 +5,8 @@
 #ifndef RAGE_SOUND_READER_H
 #define RAGE_SOUND_READER_H
 
+#include <cstring>
+
 class SoundReader
 {
 	mutable string error;
--- src/RageFile.h	2004-07-24 05:01:23.000000000 +0200
+++ src/RageFile.h.new	2008-04-04 03:52:18.000000000 +0200
@@ -5,6 +5,8 @@
 #ifndef RAGE_FILE_H
 #define RAGE_FILE_H
 
+#include <cstring>
+
 class RageFileObj;
 
 class RageFile
--- src/archutils/Unix/LinuxThreadHelpers.h	2004-09-08 06:45:16.000000000 +0200
+++ src/archutils/Unix/LinuxThreadHelpers.h.new	2008-04-04 03:52:08.000000000 +0200
@@ -1,6 +1,8 @@
 #ifndef PID_THREAD_HELPERS_H
 #define PID_THREAD_HELPERS_H
 
+#include <cstring>
+
 CString ThreadsVersion();
 
 /* Get the current thread's ThreadID. */
--- src/archutils/Unix/AssertionHandler.cpp	2004-06-16 05:32:46.000000000 +0200
+++ src/archutils/Unix/AssertionHandler.cpp.new	2008-04-04 03:52:00.000000000 +0200
@@ -4,6 +4,7 @@
 #include "archutils/Unix/EmergencyShutdown.h"
 #include <unistd.h>
 #include <assert.h>
+#include <cstring>
 
 /* We can define this symbol to catch failed assert() calls.  This is only used
  * for library code that uses assert(); internally we always use ASSERT, which
--- src/arch/Sound/RageSoundDriver.h	2004-09-09 10:51:07.000000000 +0200
+++ src/arch/Sound/RageSoundDriver.h.new	2008-04-04 03:51:53.000000000 +0200
@@ -1,6 +1,8 @@
 #ifndef RAGE_SOUND_DRIVER
 #define RAGE_SOUND_DRIVER
 
+#include <cstring>
+
 class RageSoundBase;
 class RageSoundDriver
 {
--- src/PlayerOptions.h	2004-08-29 23:26:51.000000000 +0200
+++ src/PlayerOptions.h.new	2008-04-04 03:51:45.000000000 +0200
@@ -3,6 +3,8 @@
 #ifndef PLAYER_OPTIONS_H
 #define PLAYER_OPTIONS_H
 
+#include <cstring>
+
 class Song;
 class Steps;
 class Course;
--- src/NoteDataUtil.h	2004-08-29 23:26:51.000000000 +0200
+++ src/NoteDataUtil.h.new	2008-04-04 03:51:37.000000000 +0200
@@ -6,6 +6,7 @@
 #include "GameConstantsAndTypes.h"	// for RadarCategory
 #include "NoteTypes.h"
 #include "NoteData.h"
+#include <cstring>
 
 struct PlayerOptions;
 struct RadarValues;
--- src/Game.h	2004-09-06 04:48:04.000000000 +0200
+++ src/Game.h.new	2008-04-04 03:51:29.000000000 +0200
@@ -6,6 +6,7 @@
 #include "GameInput.h"
 #include "MenuInput.h"
 #include "GameConstantsAndTypes.h"
+#include <cstring>
 
 
 const int MAX_STYLES_PER_GAME = 10;
--- src/CodeDetector.h	2004-06-01 00:42:11.000000000 +0200
+++ src/CodeDetector.h.new	2008-04-04 03:51:09.000000000 +0200
@@ -4,6 +4,7 @@
 #define CODEDETECTOR_H
 
 #include "GameInput.h"
+#include <cstring>
 
 struct CodeItem
 {
--- src/ScreenMiniMenu.h	2004-08-11 09:30:41.000000000 +0200
+++ src/ScreenMiniMenu.h.new	2008-04-04 03:51:01.000000000 +0200
@@ -8,6 +8,7 @@
 #include "Transition.h"
 #include "Quad.h"
 #include "RandomSample.h"
+#include <cstring>
 
 
 #define MAX_MENU_ROWS  40
--- src/HighScore.h	2004-08-22 19:23:07.000000000 +0200
+++ src/HighScore.h.new	2008-04-04 03:50:50.000000000 +0200
@@ -7,6 +7,7 @@
 #include "GameConstantsAndTypes.h"
 #include "RadarValues.h"
 #include "DateTime.h"
+#include <cstring>
 
 struct XNode;
 
--- src/RageUtil.h	2008-04-04 03:46:16.000000000 +0200
+++ src/RageUtil.h.new	2008-04-04 03:50:41.000000000 +0200
@@ -4,6 +4,7 @@
 #define RAGEUTIL_H
 
 #include <map>
+#include <climits>
 
 #define SAFE_DELETE(p)       { if(p) { delete (p);     (p)=NULL; } }
 #define SAFE_DELETE_ARRAY(p) { if(p) { delete[] (p);   (p)=NULL; } }
--- src/crypto/CryptMD5.h	2004-06-08 07:30:52.000000000 +0200
+++ src/crypto/CryptMD5.h.new	2008-04-04 03:50:16.000000000 +0200
@@ -1,6 +1,8 @@
 #ifndef SSHMD5_H
 #define SSHMD5_H
 
+#include <cstring>
+
 typedef struct {
 	uint32_t h[4];
 } MD5_Core_State;
--- src/ezsockets.h	2005-10-01 05:32:45.000000000 +0200
+++ src/ezsockets.h.new	2008-04-04 03:50:08.000000000 +0200
@@ -18,6 +18,7 @@
 #include <vector>
 #include <fcntl.h>
 #include <ctype.h>
+#include <cstring>
 
 #if defined(_XBOX)
 // Summary : WinsockX is bad, XTL is good.
--- src/RageSoundResampler.h	2004-07-24 03:22:10.000000000 +0200
+++ src/RageSoundResampler.h.new	2008-04-04 03:49:52.000000000 +0200
@@ -1,6 +1,8 @@
 #ifndef RAGE_SOUND_RESAMPLER_H
 #define RAGE_SOUND_RESAMPLER_H
 
+#include <cstring>
+
 class RageSoundResampler
 {
 	int InputRate, OutputRate, Channels;
--- src/RageSound.h	2004-08-21 09:01:54.000000000 +0200
+++ src/RageSound.h.new	2008-04-04 03:49:44.000000000 +0200
@@ -6,6 +6,7 @@
 #include "RageTimer.h"
 #include "RageUtil_CircularBuffer.h"
 #include "RageSoundPosMap.h"
+#include <cstring>
 
 class SoundReader;
 
--- src/archutils/Unix/CrashHandler.h	2004-09-08 09:34:38.000000000 +0200
+++ src/archutils/Unix/CrashHandler.h.new	2008-04-04 03:49:38.000000000 +0200
@@ -1,6 +1,8 @@
 #ifndef CRASH_HANDLER_H
 #define CRASH_HANDLER_H
 
+#include <cstring>
+
 void ForceCrashHandler( const char *reason );
 struct BacktraceContext;
 void ForceCrashHandlerDeadlock( CString reason, uint64_t CrashHandle );
--- src/archutils/Unix/SignalHandler.h	2004-05-15 10:27:42.000000000 +0200
+++ src/archutils/Unix/SignalHandler.h.new	2008-04-04 03:49:30.000000000 +0200
@@ -3,6 +3,7 @@
 
 #include <csignal>
 #include <ucontext.h>
+#include <cstring>
        
 class SaveSignals
 {
--- src/arch/Lights/LightsDriver.h	2004-07-07 22:11:30.000000000 +0200
+++ src/arch/Lights/LightsDriver.h.new	2008-04-04 03:49:22.000000000 +0200
@@ -4,6 +4,7 @@
 #define LightsDriver_H
 
 #include "LightsManager.h"
+#include <cstring>
 
 struct LightsState;
 
--- src/NotesLoader.h	2004-09-13 10:02:16.000000000 +0200
+++ src/NotesLoader.h.new	2008-04-04 03:49:05.000000000 +0200
@@ -3,6 +3,7 @@
 
 #include "RageUtil.h"
 #include <set>
+#include <cstring>
 
 class Song;
 
--- src/LyricsLoader.h	2004-06-01 00:42:12.000000000 +0200
+++ src/LyricsLoader.h.new	2008-04-04 03:48:52.000000000 +0200
@@ -3,6 +3,8 @@
 #ifndef LYRICS_LOADER_H
 #define LYRICS_LOADER_H
 
+#include <cstring>
+
 class Song;
 
 class LyricsLoader
--- src/DateTime.h	2004-10-13 04:43:19.000000000 +0200
+++ src/DateTime.h.new	2008-04-04 03:48:41.000000000 +0200
@@ -2,6 +2,7 @@
 #define DATE_TIME_H
 
 #include <ctime>
+#include <cstring>
 
 const int NUM_LAST_DAYS = 7;
 const int NUM_LAST_WEEKS = 52;
--- src/ScreenOptionsMasterPrefs.cpp	2004-09-06 00:10:58.000000000 +0200
+++ src/ScreenOptionsMasterPrefs.cpp.new	2008-04-04 03:48:29.000000000 +0200
@@ -69,7 +69,7 @@
 }
 
 template<>
-static void MoveData( int &sel, bool &opt, bool ToSel )
+void MoveData( int &sel, bool &opt, bool ToSel )
 {
 	if( ToSel )	sel = opt;
 	else		opt = !!sel;
--- src/EditCoursesSongMenu.h	2004-05-26 04:48:21.000000000 +0200
+++ src/EditCoursesSongMenu.h.new	2008-04-04 03:48:17.000000000 +0200
@@ -10,6 +10,7 @@
 #include "Course.h"
 #include "ScreenMessage.h"
 #include "song.h"
+#include <cstring>
 
 
 class EditCoursesSongMenu: public ActorFrame 
--- src/InputFilter.h	2004-09-10 00:14:33.000000000 +0200
+++ src/InputFilter.h.new	2008-04-04 04:23:14.000000000 +0200
@@ -4,6 +4,7 @@
 #define INPUTFILTER_H
 
 #include "RageInputDevice.h"
+#include <cstring>
 
 enum InputEventType
 {
