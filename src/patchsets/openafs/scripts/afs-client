#!/sbin/runscript
# Copyright 1999-2005 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

depend() {
	need net
	after afs-server
	use logger dns
}

choose_afsdoptions() {
	CACHESIZE=$(cut -d ':' -f 3 /etc/openafs/cacheinfo)
	if [ -z "$OPTIONS" -o "$OPTIONS" = "AUTOMATIC" ]; then
		if [ $CACHESIZE -lt 131072 ]; then
			OPTIONS=$SMALL
		elif [ $CACHESIZE -lt 524288 ]; then
			OPTIONS=$MEDIUM
		elif [ $CACHESIZE -lt 1048576 ]; then
			OPTIONS=$LARGE
		elif [ $CACHESIZE -lt 2097152 ]; then
			OPTIONS=$XLARGE
		else
			OPTIONS=$XXLARGE
		fi
	fi
	AFSD_OPTIONS="$OPTIONS $VERBOSE"
	[ "$ENABLE_AFSDB" = "yes" ] && AFSD_OPTIONS="$AFSD_OPTIONS -afsdb"
	[ "$ENABLE_DYNROOT" = "yes" ] && AFSD_OPTIONS="$AFSD_OPTIONS -dynroot"
}

start() {
	ebegin "Starting AFS client"
	failed=1

	eindent

	# Check if afsd is already running
	if pgrep -u 0 afsd &> /dev/null; then
		eerror "afsd already running, not attempting to restart"
		eend 1
	else
		if ! modprobe -r libafs; then
			eerror "AFS module was loaded, unloading failed"
			eend 1
		elif ! modprobe libafs; then
			eerror "Failed cleanly (re)loading the afs kernel module"
			eend 1
		else
			choose_afsdoptions
			/sbin/start-stop-daemon --quiet \
				--start --exec /usr/sbin/afsd \
				-- ${AFSD_OPTIONS}
			failed=$?
			eend $failed
		fi
	fi
		
	eoutdent

	if [ $failed != 0 ]; then
		return 1
	fi
}

stop() {
	ebegin "Stopping AFS client"
	failed=1

	eindent

	# Firstly unmount /afs
	if ! umount /afs; then
		eerror "Unmounting /afs failed.  Aborting"
		eend 1
	else
		start-stop-daemon -o --quiet --stop --exec /usr/sbin/afsd
		failed=$?
		eend $failed
		
		if [ $failed = 0 ]; then
			ebegin "Unloading AFS module"
			modprobe -r libafs
			failed=$?
			eend $failed
		fi
	fi

	eoutdent

	if [ $failed != 0 ]; then
		return 1
	fi
}

