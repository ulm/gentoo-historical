#!/sbin/runscript
# Copyright 1999-2005 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

depend() {
	need net
	use logger
}

choose_afsdoptions() {
	if [ -z "$OPTIONS" -o "$OPTIONS" = "AUTOMATIC" ]; then
		if [ $CACHESIZE -lt 131072 ]; then
			OPTIONS=$SMALL
		elif [ $CACHESIZE -lt 524288 ]; then
			OPTIONS=$MEDIUM
		elif [ $CACHESIZE -lt 1048576 ]; then
			OPTIONS=$LARGE
		elif [ $CACHESIZE -lt 2097152 ]; then
			OPTIONS=$XLARGE
		else
			OPTIONS=$XXLARGE
		fi
	fi
	AFSD_OPTIONS="$OPTIONS $VERBOSE"
	[ "$ENABLE_AFSDB" = "yes" ] && AFSD_OPTIONS="$AFSD_OPTIONS -afsdb"
	[ "$ENABLE_DYNROOT" = "yes" ] && AFSD_OPTIONS="$AFSD_OPTIONS -dynroot"
}

is_on() {
	if [ "$1" = "on" ]; then
		return 0
	fi
	return 1
}

start() {
	if is_on "$AFS_SERVER"; then
		ebegin "Starting AFS BOS server"
		failed=1

		eindent

		if ! /sbin/start-stop-daemon --quiet --start --exec /usr/sbin/bosserver; then
			eerror "BosServer was already running, continuing without restart"
			eend 1
		else
			eend 0
			failed=0
		fi

		eoutdent

		if [ $failed != 0 ]; then
			return 1
		fi
	fi

	if is_on "$AFS_CLIENT"; then
		ebegin "Starting AFS client"
		failed=1

		eindent

		# Check if afsd is already running
		if pgrep -u 0 afsd &> /dev/null; then
			eerror "afsd already running, not attempting to restart"
			eend 1
		else
			if ! modprobe -r libafs; then
				eerror "AFS module was loaded, unloading failed"
				eend 1
			elif ! modprobe libafs; then
				eerror "Failed cleanly (re)loading the afs kernel module"
				eend 1
			else
				choose_afsdoptions
				/sbin/start-stop-daemon --quiet \
					--start --exec /usr/sbin/afsd \
					-- ${AFSD_OPTIONS}
				failed=$?
				eend $failed
			fi
		fi
			
		eoutdent

		if [ $failed != 0 ]; then
			return 1
		fi
	fi
}

stop() {
	if is_on "$AFS_CLIENT"; then
		ebegin "Stopping AFS client"
		failed=1

		eindent

		# Firstly unmount /afs
		if ! umount /afs; then
			eerror "Unmounting /afs failed.  Aborting"
			eend 1
		else
			start-stop-daemon -o --quiet --stop --exec /usr/sbin/afsd
			failed=$?
			eend $failed
			
			if [ $failed = 0 ]; then
				ebegin "Unloading AFS module"
				modprobe -r libafs
				failed=$?
				eend $failed
			fi
		fi

		eoutdent

		if [ $failed != 0 ]; then
			return 1
		fi
	fi

	if is_on "$AFS_SERVER"; then
		ebegin "Stopping AFS BOS server"
		failed = 1

		eindent

		# This kindly kills all server processes
		if ! /usr/bin/bos shutdown localhost -localauth -wait; then
			eend 1
		else
			start-stop-daemon -o --quiet --stop --exec /usr/sbin/bosserver
			failed=$?
			eend $failed
		fi

		eoutdent

		if [ $failed != 0 ]; then
			return 1
		fi
	fi
}

