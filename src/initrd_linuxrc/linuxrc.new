#!/bin/sh
# Daniel Robbins <drobbins@gentoo.org>
# Copyright 2003 Gentoo Technologies, Inc.
# Distributed under the GPL

source /etc/livecd.defaults
mount -o remount,rw /
mount /proc

echo "${GOOD} Initial RAMDISK Loading Starting..."

for x in "${CMDLINE}"
do
	case "${x}" in
		real_root=*)
			REAL_ROOT=`parse_opt "${x}"`
		;;
		cdroot)
			CDROOT=1
			REAL_ROOT=""
		;;
		*)
		;;
	esac
done

findcdmount() {
	if [ "$#" -gt "1" ]
	then
		for x in "$*"
		do
			mount -t iso9660 -r ${x} /newroot/mnt/cdrom > /dev/null 2>&1
			if [ "$?" = "0" ]
			then
				REAL_ROOT="${x}"
				break
			fi
		done
		if [ "${REAL_ROOT}" != "" ]
		then
			echo -e "${HILITE}---- CD medium found on $1${NORMAL}"
		fi
	fi
}

mkdir /newroot

if [ "${CDROOT}" -eq "1" ]
then
	mount -t tmpfs tmpfs /newroot
	mkdir /newroot/dev /newroot/mnt /newroot/mnt/cdrom /newroot/mnt/.init.d /newroot/mnt/gentoo
	[ ! -e /newroot/dev/.devfsd ] && mount -t devfs devfs /newroot/dev
	findcdmount /newroot/dev/cdroms/*
	if [ "${REAL_ROOT}" = "" ]
	then
		umount /newroot/dev/
		umount /newroot
		# shouldn't be anything in here b/c it was on tmpfs
		rm -rf /newroot/*
		CDROOT=0
		echo "Could not find CD to boot, gonna need something else"
	fi
fi

# Don't do else b/c we set CDROOT=0 if it fails to detect
if [ "${CDROOT}" -eq "0" ]
then
	[ ! -e /dev/.devfsd ] && mount -t devfs devfs /dev
fi

while true
do
	while [ "${got_good_root}" != "1" ]
	do
		
		if [ "${REAL_ROOT}" = "shell" ]
		then
			/bin/ash
			#set REAL_ROOT to "" so we get a prompt for the real root after the shell exits.
			REAL_ROOT=""
		elif [ "${REAL_ROOT}" = "" ]
		then
			#no REAL_ROOT determined/specified. Prompt user for root block device.
			echo "Root block device unspecified or not detected."
			echo "Please specify a device to boot, or \"shell\" for a shell."
			echo -n "# "
			read REAL_ROOT
		elif [ -b "${REAL_ROOT}" ]
		then
			got_good_root=1
		else
		fi
	done

	if [ "${CDROOT}" -eq "1" -a "${got_good_root}" = "1" ]
	then
		break
	else
		mount ${REAL_ROOT} /newroot
		if [ "$?" = "0" ]
		then
			break
		else
			echo "Could not mount specified ROOT, try again"
			got_good_root=0
			REAL_ROOT=""
		fi
	fi
done

if [ "${CDROOT}" = "1" ]
then
	cd /newroot
	for x in ${ROOT_LINKS}
	do
		ln -s "mnt/cdrom/${x}" "${x}"
	done
	mkdir initrd proc tmp sys
	chmod 1777 tmp
	(cd /newroot/mnt/cdrom; cp -a ${ROOT_TREES} /newroot)
else
	umount /proc
	umount /dev
	mkdir /newroot/initrd
fi

cd /newroot
pivot_root . initrd
exec chroot . /sbin/init </dev/console >/dev/console 2>&1
