diff -urN /usr/src/linux-2.6.7-hardened/drivers/net/Kconfig linux-2.6.7-hardened/drivers/net/Kconfig
--- /usr/src/linux-2.6.7-hardened/drivers/net/Kconfig	2004-06-30 01:11:09.536167840 -0400
+++ linux-2.6.7-hardened/drivers/net/Kconfig	2004-06-29 17:47:26.000000000 -0400
@@ -104,6 +104,22 @@
 
 	  If you don't know what to use this for, you don't need it.
 
+config NET_RANDOM
+	bool "Allow Net Devices to contribute to /dev/random"
+	depends on NETDEVICES && EXPERIMENTAL
+	---help---
+    	  If you say Y here, network device interrupts will contribute to the
+          kernel entropy pool. Normally, block devices and some other devices
+          feed the pool. Some systems, such as those that are headless or diskless,
+          need additional entropy sources.  Some people, however, feel that network
+          devices should not contribute to /dev/random because an external attacker
+          could observe incoming packets in an attempt to learn the entropy pool's
+          state.  If you say N, no network device will contribute entropy.
+
+          If you believe there is a chance of your network packets being observed
+          and you doubt the security of the entropy pool's one-way hash, do not
+	  enable this.  If unsure, say N.
+
 config ETHERTAP
 	tristate "Ethertap network tap"
 	depends on NETDEVICES && EXPERIMENTAL && NETLINK_DEV
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-alpha/signal.h linux-2.6.7-hardened/include/asm-alpha/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-alpha/signal.h	2004-06-30 01:11:09.537167688 -0400
+++ linux-2.6.7-hardened/include/asm-alpha/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -121,8 +121,15 @@
 #define SA_PROBE		SA_ONESHOT
 #define SA_SAMPLE_RANDOM	SA_RESTART
 #define SA_SHIRQ		0x40000000
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 #define SIG_BLOCK          1	/* for blocking signals */
 #define SIG_UNBLOCK        2	/* for unblocking signals */
 #define SIG_SETMASK        3	/* for setting the signal mask */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-arm/signal.h linux-2.6.7-hardened/include/asm-arm/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-arm/signal.h	2004-06-30 01:11:09.538167536 -0400
+++ linux-2.6.7-hardened/include/asm-arm/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -126,8 +126,15 @@
 #define SA_SAMPLE_RANDOM	0x10000000
 #define SA_IRQNOMASK		0x08000000
 #define SA_SHIRQ		0x04000000
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 #define SIG_BLOCK          0	/* for blocking signals */
 #define SIG_UNBLOCK        1	/* for unblocking signals */
 #define SIG_SETMASK        2	/* for setting the signal mask */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-cris/signal.h linux-2.6.7-hardened/include/asm-cris/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-cris/signal.h	2004-06-30 01:11:09.538167536 -0400
+++ linux-2.6.7-hardened/include/asm-cris/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -120,8 +120,15 @@
 #define SA_PROBE		SA_ONESHOT
 #define SA_SAMPLE_RANDOM	SA_RESTART
 #define SA_SHIRQ		0x04000000
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 #define SIG_BLOCK          0	/* for blocking signals */
 #define SIG_UNBLOCK        1	/* for unblocking signals */
 #define SIG_SETMASK        2	/* for setting the signal mask */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-i386/signal.h linux-2.6.7-hardened/include/asm-i386/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-i386/signal.h	2004-06-30 01:11:09.566163280 -0400
+++ linux-2.6.7-hardened/include/asm-i386/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -121,8 +121,15 @@
 #define SA_PROBE		SA_ONESHOT
 #define SA_SAMPLE_RANDOM	SA_RESTART
 #define SA_SHIRQ		0x04000000
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 #define SIG_BLOCK          0	/* for blocking signals */
 #define SIG_UNBLOCK        1	/* for unblocking signals */
 #define SIG_SETMASK        2	/* for setting the signal mask */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-ia64/signal.h linux-2.6.7-hardened/include/asm-ia64/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-ia64/signal.h	2004-06-30 01:11:09.585160392 -0400
+++ linux-2.6.7-hardened/include/asm-ia64/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -126,6 +126,12 @@
 #define SA_SHIRQ		0x04000000
 #define SA_PERCPU_IRQ		0x02000000
 
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
+#endif
+
 #endif /* __KERNEL__ */
 
 #define SIG_BLOCK          0	/* for blocking signals */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-m68k/signal.h linux-2.6.7-hardened/include/asm-m68k/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-m68k/signal.h	2004-06-30 01:11:09.601157960 -0400
+++ linux-2.6.7-hardened/include/asm-m68k/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -116,8 +116,15 @@
 #define SA_PROBE		SA_ONESHOT
 #define SA_SAMPLE_RANDOM	SA_RESTART
 #define SA_SHIRQ		0x04000000
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 #define SIG_BLOCK          0	/* for blocking signals */
 #define SIG_UNBLOCK        1	/* for unblocking signals */
 #define SIG_SETMASK        2	/* for setting the signal mask */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-mips/signal.h linux-2.6.7-hardened/include/asm-mips/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-mips/signal.h	2004-06-30 01:11:09.617155528 -0400
+++ linux-2.6.7-hardened/include/asm-mips/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -111,6 +111,12 @@
 #define SA_SAMPLE_RANDOM	SA_RESTART
 #define SA_SHIRQ		0x02000000
 
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
+#endif
+
 #endif /* __KERNEL__ */
 
 #define SIG_BLOCK	1	/* for blocking signals */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-parisc/signal.h linux-2.6.7-hardened/include/asm-parisc/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-parisc/signal.h	2004-06-30 01:11:09.631153400 -0400
+++ linux-2.6.7-hardened/include/asm-parisc/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -100,6 +100,12 @@
 #define SA_SAMPLE_RANDOM	SA_RESTART
 #define SA_SHIRQ		0x04000000
 
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
+#endif
+
 #endif /* __KERNEL__ */
 
 #define SIG_BLOCK          0	/* for blocking signals */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-ppc/signal.h linux-2.6.7-hardened/include/asm-ppc/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-ppc/signal.h	2004-06-29 17:47:26.000000000 -0400
+++ linux-2.6.7-hardened/include/asm-ppc/signal.h	2004-06-30 01:07:33.000000000 -0400
@@ -111,6 +111,13 @@
 #define SA_PROBE		SA_ONESHOT
 #define SA_SAMPLE_RANDOM	SA_RESTART
 #define SA_SHIRQ		0x04000000
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM  SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM  0
+#endif
+
 #endif /* __KERNEL__ */
 
 #define SIG_BLOCK          0	/* for blocking signals */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-ppc64/signal.h linux-2.6.7-hardened/include/asm-ppc64/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-ppc64/signal.h	2004-06-30 01:11:09.659149144 -0400
+++ linux-2.6.7-hardened/include/asm-ppc64/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -107,8 +107,15 @@
 #define SA_PROBE		SA_ONESHOT
 #define SA_SAMPLE_RANDOM	SA_RESTART
 #define SA_SHIRQ		0x04000000
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 #define SIG_BLOCK          0	/* for blocking signals */
 #define SIG_UNBLOCK        1	/* for unblocking signals */
 #define SIG_SETMASK        2	/* for setting the signal mask */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-s390/signal.h linux-2.6.7-hardened/include/asm-s390/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-s390/signal.h	2004-06-30 01:11:09.671147320 -0400
+++ linux-2.6.7-hardened/include/asm-s390/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -129,8 +129,15 @@
 #define SA_PROBE                SA_ONESHOT
 #define SA_SAMPLE_RANDOM        SA_RESTART
 #define SA_SHIRQ                0x04000000
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 #define SIG_BLOCK          0    /* for blocking signals */
 #define SIG_UNBLOCK        1    /* for unblocking signals */
 #define SIG_SETMASK        2    /* for setting the signal mask */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-sh/signal.h linux-2.6.7-hardened/include/asm-sh/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-sh/signal.h	2004-06-30 01:11:09.687144888 -0400
+++ linux-2.6.7-hardened/include/asm-sh/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -120,8 +120,15 @@
 #define SA_PROBE		SA_ONESHOT
 #define SA_SAMPLE_RANDOM	SA_RESTART
 #define SA_SHIRQ		0x04000000
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 #define SIG_BLOCK          0	/* for blocking signals */
 #define SIG_UNBLOCK        1	/* for unblocking signals */
 #define SIG_SETMASK        2	/* for setting the signal mask */
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-sparc/signal.h linux-2.6.7-hardened/include/asm-sparc/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-sparc/signal.h	2004-06-30 01:11:09.720139872 -0400
+++ linux-2.6.7-hardened/include/asm-sparc/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -176,8 +176,15 @@
 #define SA_PROBE SA_ONESHOT
 #define SA_SAMPLE_RANDOM SA_RESTART
 #define SA_STATIC_ALLOC		0x80
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 /* Type of a signal handler.  */
 #ifdef __KERNEL__
 typedef void (*__sighandler_t)(int, int, struct sigcontext *, char *);
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-sparc64/signal.h linux-2.6.7-hardened/include/asm-sparc64/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-sparc64/signal.h	2004-06-30 01:11:09.731138200 -0400
+++ linux-2.6.7-hardened/include/asm-sparc64/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -182,8 +182,15 @@
 #define SA_PROBE SA_ONESHOT
 #define SA_SAMPLE_RANDOM SA_RESTART
 #define SA_STATIC_ALLOC		0x80
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 /* Type of a signal handler.  */
 #ifdef __KERNEL__
 typedef void (*__sighandler_t)(int, struct sigcontext *);
diff -urN /usr/src/linux-2.6.7-hardened/include/asm-x86_64/signal.h linux-2.6.7-hardened/include/asm-x86_64/signal.h
--- /usr/src/linux-2.6.7-hardened/include/asm-x86_64/signal.h	2004-06-30 01:11:09.753134856 -0400
+++ linux-2.6.7-hardened/include/asm-x86_64/signal.h	2004-06-29 17:47:26.000000000 -0400
@@ -128,8 +128,15 @@
 #define SA_PROBE		SA_ONESHOT
 #define SA_SAMPLE_RANDOM	SA_RESTART
 #define SA_SHIRQ		0x04000000
+
+#ifdef CONFIG_NET_RANDOM
+#define SA_NET_RANDOM	SA_SAMPLE_RANDOM
+#else
+#define SA_NET_RANDOM	0
 #endif
 
+#endif /* __KERNEL__ */
+
 #define SIG_BLOCK          0	/* for blocking signals */
 #define SIG_UNBLOCK        1	/* for unblocking signals */
 #define SIG_SETMASK        2	/* for setting the signal mask */
