diff -urN linux-2.6.4.orig/arch/i386/kernel/apm.c linux-2.6.4/arch/i386/kernel/apm.c
--- linux-2.6.4.orig/arch/i386/kernel/apm.c	Fri Mar 19 13:08:15 2004
+++ linux-2.6.4/arch/i386/kernel/apm.c	Fri Mar 19 13:32:34 2004
@@ -628,7 +628,7 @@
 	cpu_gdt_table[cpu][0x40 / 8] = save_desc_40;
 
 #ifdef CONFIG_PAX_KERNEXEC
-	pax_close_kernel(flags);
+	pax_close_kernel(flags, cr3);
 #endif
 
 	put_cpu();
diff -urN linux-2.6.4.orig/arch/i386/kernel/process.c linux-2.6.4/arch/i386/kernel/process.c
--- linux-2.6.4.orig/arch/i386/kernel/process.c	Fri Mar 19 13:08:15 2004
+++ linux-2.6.4/arch/i386/kernel/process.c	Fri Mar 19 13:32:34 2004
@@ -445,9 +445,8 @@
 int dump_task_regs(struct task_struct *tsk, elf_gregset_t *regs)
 {
 	struct pt_regs ptregs;
-	
-	ptregs = *(struct pt_regs *)
-		((unsigned long)tsk->thread_info+THREAD_SIZE - sizeof(ptregs));
+
+	ptregs = *(struct pt_regs *)(tsk->thread.esp0 - sizeof(ptregs));
 	ptregs.xcs &= 0xffff;
 	ptregs.xds &= 0xffff;
 	ptregs.xes &= 0xffff;
diff -urN linux-2.6.4.orig/arch/ppc/mm/fault.c linux-2.6.4/arch/ppc/mm/fault.c
--- linux-2.6.4.orig/arch/ppc/mm/fault.c	Fri Mar 19 13:08:15 2004
+++ linux-2.6.4/arch/ppc/mm/fault.c	Fri Mar 19 13:32:35 2004
@@ -32,6 +32,7 @@
 #include <linux/pagemap.h>
 #include <linux/compiler.h>
 #include <linux/binfmts.h>
+#include <linux/unistd.h>
 
 #include <asm/page.h>
 #include <asm/pgtable.h>
diff -urN linux-2.6.4.orig/fs/proc/array.c linux-2.6.4/fs/proc/array.c
--- linux-2.6.4.orig/fs/proc/array.c	Thu Mar 11 11:14:48 2004
+++ linux-2.6.4/fs/proc/array.c	Fri Mar 19 13:32:35 2004
@@ -271,6 +271,19 @@
 			    cap_t(p->cap_effective));
 }
 
+#if defined(CONFIG_PAX_NOEXEC) || defined(CONFIG_PAX_ASLR)
+static inline char *task_pax(struct task_struct *p, char *buffer)
+{
+	return buffer + sprintf(buffer, "PaX:\t%c%c%c%c%c%c\n",
+				p->flags & PF_PAX_PAGEEXEC ? 'P' : 'p',
+				p->flags & PF_PAX_EMUTRAMP ? 'E' : 'e',
+				p->flags & PF_PAX_MPROTECT ? 'M' : 'm',
+				p->flags & PF_PAX_RANDMMAP ? 'R' : 'r',
+				p->flags & PF_PAX_RANDEXEC ? 'X' : 'x',
+				p->flags & PF_PAX_SEGMEXEC ? 'S' : 's');
+}
+#endif
+
 extern char *task_mem(struct mm_struct *, char *);
 int proc_pid_status(struct task_struct *task, char * buffer)
 {
@@ -289,6 +302,11 @@
 #if defined(CONFIG_ARCH_S390)
 	buffer = task_show_regs(task, buffer);
 #endif
+
+#if defined(CONFIG_PAX_NOEXEC) || defined(CONFIG_PAX_ASLR)
+	buffer = task_pax(task, buffer);
+#endif
+
 	return buffer - orig;
 }
 
