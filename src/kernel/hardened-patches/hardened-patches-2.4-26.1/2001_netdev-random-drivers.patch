diff -urN linux-2.4.26-pre5/drivers/net/3c501.c linux-2.4.26-pre5-netdev-drivers/drivers/net/3c501.c
--- linux-2.4.26-pre5/drivers/net/3c501.c	Sat Dec  6 08:14:45 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/3c501.c	Sun Mar 21 10:15:13 2004
@@ -422,7 +422,8 @@
 	if (el_debug > 2)
 		printk(KERN_DEBUG "%s: Doing el_open()...", dev->name);
 
-	if ((retval = request_irq(dev->irq, &el_interrupt, 0, dev->name, dev)))
+	if ((retval = request_irq(dev->irq, &el_interrupt,
+				SA_NET_RANDOM, dev->name, dev)))
 		return retval;
 
 	spin_lock_irqsave(&lp->lock, flags);
diff -urN linux-2.4.26-pre5/drivers/net/3c503.c linux-2.4.26-pre5-netdev-drivers/drivers/net/3c503.c
--- linux-2.4.26-pre5/drivers/net/3c503.c	Sat Dec  6 08:14:45 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/3c503.c	Sun Mar 21 10:15:13 2004
@@ -341,14 +341,15 @@
 
 	outb(EGACFR_NORM, E33G_GACFR);	/* Enable RAM and interrupts. */
 	do {
-	    if (request_irq (*irqp, NULL, 0, "bogus", dev) != -EBUSY) {
+	    if (request_irq (*irqp, NULL, SA_NET_RANDOM, 
+				    "bogus", dev) != -EBUSY) {
 		/* Twinkle the interrupt, and check if it's seen. */
 		unsigned long cookie = probe_irq_on();
 		outb_p(0x04 << ((*irqp == 9) ? 2 : *irqp), E33G_IDCFR);
 		outb_p(0x00, E33G_IDCFR);
 		if (*irqp == probe_irq_off(cookie)	/* It's a good IRQ line! */
 		    && ((retval = request_irq(dev->irq = *irqp, 
-		    ei_interrupt, 0, dev->name, dev)) == 0))
+		    ei_interrupt, SA_NET_RANDOM, dev->name, dev)) == 0))
 		    break;
 	    }
 	} while (*++irqp);
@@ -357,7 +358,7 @@
 	    return retval;
 	}
     } else {
-	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {
+	if ((retval = request_irq(dev->irq, ei_interrupt, SA_NET_RANDOM, dev->name, dev))) {
 	    return retval;
 	}
     }
diff -urN linux-2.4.26-pre5/drivers/net/3c505.c linux-2.4.26-pre5-netdev-drivers/drivers/net/3c505.c
--- linux-2.4.26-pre5/drivers/net/3c505.c	Sat Dec  6 08:14:45 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/3c505.c	Sun Mar 21 10:15:13 2004
@@ -906,7 +906,8 @@
 	/*
 	 * install our interrupt service routine
 	 */
-	if ((retval = request_irq(dev->irq, &elp_interrupt, 0, dev->name, dev))) {
+	if ((retval = request_irq(dev->irq, &elp_interrupt,
+					SA_NET_RANDOM, dev->name, dev))) {
 		printk(KERN_ERR "%s: could not allocate IRQ%d\n", dev->name, dev->irq);
 		return retval;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/3c507.c linux-2.4.26-pre5-netdev-drivers/drivers/net/3c507.c
--- linux-2.4.26-pre5/drivers/net/3c507.c	Sat Dec  6 08:14:45 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/3c507.c	Sun Mar 21 10:15:14 2004
@@ -373,7 +373,8 @@
 
 	irq = inb(ioaddr + IRQ_CONFIG) & 0x0f;
 
-	irqval = request_irq(irq, &el16_interrupt, 0, dev->name, dev);
+	irqval = request_irq(irq, &el16_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (irqval) {
 		printk ("unable to get IRQ %d (irqval=%d).\n", irq, irqval);
 		retval = -EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/3c509.c linux-2.4.26-pre5-netdev-drivers/drivers/net/3c509.c
--- linux-2.4.26-pre5/drivers/net/3c509.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/3c509.c	Sun Mar 21 10:15:14 2004
@@ -609,7 +609,8 @@
 	outw(RxReset, ioaddr + EL3_CMD);
 	outw(SetStatusEnb | 0x00, ioaddr + EL3_CMD);
 
-	i = request_irq(dev->irq, &el3_interrupt, 0, dev->name, dev);
+	i = request_irq(dev->irq, &el3_interrupt,
+			SA_NET_RANDOM, dev->name, dev);
 	if (i) return i;
 
 	EL3WINDOW(0);
diff -urN linux-2.4.26-pre5/drivers/net/3c515.c linux-2.4.26-pre5-netdev-drivers/drivers/net/3c515.c
--- linux-2.4.26-pre5/drivers/net/3c515.c	Sat Dec  6 08:14:45 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/3c515.c	Sun Mar 21 10:15:14 2004
@@ -806,11 +806,13 @@
 		/* Corkscrew: Cannot share ISA resources. */
 		if (dev->irq == 0
 		    || dev->dma == 0
-		    || request_irq(dev->irq, &corkscrew_interrupt, 0,
-				   vp->product_name, dev)) return -EAGAIN;
+		    || request_irq(dev->irq, &corkscrew_interrupt,
+			       SA_NET_RANDOM,
+			       vp->product_name, dev)) return -EAGAIN;
 		enable_dma(dev->dma);
 		set_dma_mode(dev->dma, DMA_MODE_CASCADE);
-	} else if (request_irq(dev->irq, &corkscrew_interrupt, SA_SHIRQ,
+	} else if (request_irq(dev->irq, &corkscrew_interrupt, 
+			       SA_SHIRQ | SA_NET_RANDOM,
 			       vp->product_name, dev)) {
 		return -EAGAIN;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/3c523.c linux-2.4.26-pre5-netdev-drivers/drivers/net/3c523.c
--- linux-2.4.26-pre5/drivers/net/3c523.c	Sat Dec  6 08:14:45 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/3c523.c	Sun Mar 21 10:15:14 2004
@@ -290,8 +290,8 @@
 
 	elmc_id_attn586();	/* disable interrupts */
 
-	ret = request_irq(dev->irq, &elmc_interrupt, SA_SHIRQ | SA_SAMPLE_RANDOM,
-			  dev->name, dev);
+	ret = request_irq(dev->irq, &elmc_interrupt,
+		SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (ret) {
 		printk(KERN_ERR "%s: couldn't get irq %d\n", dev->name, dev->irq);
 		elmc_id_reset586();
diff -urN linux-2.4.26-pre5/drivers/net/3c527.c linux-2.4.26-pre5-netdev-drivers/drivers/net/3c527.c
--- linux-2.4.26-pre5/drivers/net/3c527.c	Sat Dec  6 08:14:45 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/3c527.c	Sun Mar 21 10:15:14 2004
@@ -411,7 +411,7 @@
 	 *	Grab the IRQ
 	 */
 
-	i = request_irq(dev->irq, &mc32_interrupt, SA_SHIRQ, dev->name, dev);
+	i = request_irq(dev->irq, &mc32_interrupt, SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (i) {
 		release_region(dev->base_addr, MC32_IO_EXTENT);
 		printk(KERN_ERR "%s: unable to get IRQ %d.\n", dev->name, dev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/3c59x.c linux-2.4.26-pre5-netdev-drivers/drivers/net/3c59x.c
--- linux-2.4.26-pre5/drivers/net/3c59x.c	Sat Dec  6 08:14:45 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/3c59x.c	Sun Mar 21 10:15:14 2004
@@ -1599,7 +1599,8 @@
 
 	/* Use the now-standard shared IRQ implementation. */
 	if ((retval = request_irq(dev->irq, vp->full_bus_master_rx ?
-				&boomerang_interrupt : &vortex_interrupt, SA_SHIRQ, dev->name, dev))) {
+			&boomerang_interrupt : &vortex_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev))) {
 		printk(KERN_ERR "%s: Could not reserve IRQ %d\n", dev->name, dev->irq);
 		goto out;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/7990.c linux-2.4.26-pre5-netdev-drivers/drivers/net/7990.c
--- linux-2.4.26-pre5/drivers/net/7990.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/7990.c	Sun Mar 21 10:15:14 2004
@@ -464,7 +464,7 @@
         DECLARE_LL;
         
         /* Install the Interrupt handler. Or we could shunt this out to specific drivers? */
-        if (request_irq(lp->irq, lance_interrupt, 0, lp->name, dev))
+        if (request_irq(lp->irq, lance_interrupt, SA_NET_RANDOM, lp->name, dev))
                 return -EAGAIN;
 
         res = lance_reset(dev);
diff -urN linux-2.4.26-pre5/drivers/net/8139cp.c linux-2.4.26-pre5-netdev-drivers/drivers/net/8139cp.c
--- linux-2.4.26-pre5/drivers/net/8139cp.c	Fri Feb 20 07:38:28 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/8139cp.c	Sun Mar 21 10:15:14 2004
@@ -1166,7 +1166,8 @@
 
 	cp_init_hw(cp);
 
-	rc = request_irq(dev->irq, cp_interrupt, SA_SHIRQ, dev->name, dev);
+	rc = request_irq(dev->irq, cp_interrupt,
+			SA_NET_RANDOM | SA_SHIRQ, dev->name, dev);
 	if (rc)
 		goto err_out_hw;
 
diff -urN linux-2.4.26-pre5/drivers/net/8139too.c linux-2.4.26-pre5-netdev-drivers/drivers/net/8139too.c
--- linux-2.4.26-pre5/drivers/net/8139too.c	Sat Mar 20 10:08:18 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/8139too.c	Sun Mar 21 10:15:14 2004
@@ -1299,7 +1299,8 @@
 	int retval;
 	void *ioaddr = tp->mmio_addr;
 
-	retval = request_irq (dev->irq, rtl8139_interrupt, SA_SHIRQ, dev->name, dev);
+	retval = request_irq (dev->irq, rtl8139_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (retval)
 		return retval;
 
diff -urN linux-2.4.26-pre5/drivers/net/82596.c linux-2.4.26-pre5-netdev-drivers/drivers/net/82596.c
--- linux-2.4.26-pre5/drivers/net/82596.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/82596.c	Sun Mar 21 10:15:14 2004
@@ -1007,13 +1007,13 @@
 
 	DEB(DEB_OPEN,printk(KERN_DEBUG "%s: i596_open() irq %d.\n", dev->name, dev->irq));
 
-	if (request_irq(dev->irq, &i596_interrupt, 0, "i82596", dev)) {
+	if (request_irq(dev->irq, &i596_interrupt, SA_NET_RANDOM, "i82596", dev)) {
 		printk(KERN_ERR "%s: IRQ %d not free\n", dev->name, dev->irq);
 		return -EAGAIN;
 	}
 #ifdef ENABLE_MVME16x_NET
 	if (MACH_IS_MVME16x) {
-		if (request_irq(0x56, &i596_error, 0, "i82596_error", dev))
+		if (request_irq(0x56, &i596_error, SA_NET_RANDOM, "i82596_error", dev))
 			return -EAGAIN;
 	}
 #endif
diff -urN linux-2.4.26-pre5/drivers/net/a2065.c linux-2.4.26-pre5-netdev-drivers/drivers/net/a2065.c
--- linux-2.4.26-pre5/drivers/net/a2065.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/a2065.c	Sun Mar 21 10:15:14 2004
@@ -501,8 +501,8 @@
 	ll->rdp = LE_C0_STOP;
 
 	/* Install the Interrupt handler */
-	ret = request_irq(IRQ_AMIGA_PORTS, lance_interrupt, SA_SHIRQ,
-			  dev->name, dev);
+	ret = request_irq(IRQ_AMIGA_PORTS, lance_interrupt,
+			  SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (ret) return ret;
 
 	load_csrs (lp);
diff -urN linux-2.4.26-pre5/drivers/net/ac3200.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ac3200.c
--- linux-2.4.26-pre5/drivers/net/ac3200.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ac3200.c	Sun Mar 21 10:15:14 2004
@@ -173,7 +173,8 @@
 		printk(", assigning");
 	}
 
-	retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev);
+	retval = request_irq(dev->irq, ei_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (retval) {
 		printk (" nothing! Unable to get IRQ %d.\n", dev->irq);
 		goto out1;
diff -urN linux-2.4.26-pre5/drivers/net/acenic.c linux-2.4.26-pre5-netdev-drivers/drivers/net/acenic.c
--- linux-2.4.26-pre5/drivers/net/acenic.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/acenic.c	Sun Mar 21 10:15:14 2004
@@ -1446,7 +1446,7 @@
 		goto init_error;
 	}
 
-	ecode = request_irq(pdev->irq, ace_interrupt, SA_SHIRQ,
+	ecode = request_irq(pdev->irq, ace_interrupt, SA_SHIRQ | SA_NET_RANDOM,
 			    dev->name, dev);
 	if (ecode) {
 		printk(KERN_WARNING "%s: Requested IRQ %d is busy\n",
diff -urN linux-2.4.26-pre5/drivers/net/aironet4500_card.c linux-2.4.26-pre5-netdev-drivers/drivers/net/aironet4500_card.c
--- linux-2.4.26-pre5/drivers/net/aironet4500_card.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/aironet4500_card.c	Sun Mar 21 10:15:14 2004
@@ -213,7 +213,7 @@
 	dev->watchdog_timeo = AWC_TX_TIMEOUT;
 	
 
-	i = request_irq(dev->irq,awc_interrupt, SA_SHIRQ | SA_INTERRUPT, dev->name, dev);
+	i = request_irq(dev->irq,awc_interrupt, SA_SHIRQ | SA_INTERRUPT | SA_NET_RANDOM, dev->name, dev);
 	if (i) {
 		kfree(dev->priv);
 		dev->priv = NULL;
@@ -419,7 +419,8 @@
 		
 		netif_start_queue (dev);
 		
-		request_irq(dev->irq,awc_interrupt , SA_SHIRQ | SA_INTERRUPT ,"Aironet 4X00",dev);
+		request_irq(dev->irq,awc_interrupt , 
+				SA_SHIRQ | SA_INTERRUPT | SA_NET_RANDOM ,"Aironet 4X00",dev);
 
 		awc_private_init( dev);
 
diff -urN linux-2.4.26-pre5/drivers/net/am79c961a.c linux-2.4.26-pre5-netdev-drivers/drivers/net/am79c961a.c
--- linux-2.4.26-pre5/drivers/net/am79c961a.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/am79c961a.c	Sun Mar 21 10:15:14 2004
@@ -268,7 +268,8 @@
 
 	memset (&priv->stats, 0, sizeof (priv->stats));
 
-	ret = request_irq(dev->irq, am79c961_interrupt, 0, dev->name, dev);
+	ret = request_irq(dev->irq, am79c961_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (ret)
 		return ret;
 
diff -urN linux-2.4.26-pre5/drivers/net/amd8111e.c linux-2.4.26-pre5-netdev-drivers/drivers/net/amd8111e.c
--- linux-2.4.26-pre5/drivers/net/amd8111e.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/amd8111e.c	Sun Mar 21 10:15:14 2004
@@ -1183,8 +1183,8 @@
 {
 	struct amd8111e_priv *lp = (struct amd8111e_priv *)dev->priv;
 
-	if(dev->irq ==0 || request_irq(dev->irq, amd8111e_interrupt, SA_SHIRQ,
-					 dev->name, dev)) 
+	if(dev->irq ==0 || request_irq(dev->irq, amd8111e_interrupt, 
+				SA_SHIRQ | SA_NET_RANDOM, dev->name, dev)) 
 		return -EAGAIN;
 
 	spin_lock_irq(&lp->lock);
diff -urN linux-2.4.26-pre5/drivers/net/apne.c linux-2.4.26-pre5-netdev-drivers/drivers/net/apne.c
--- linux-2.4.26-pre5/drivers/net/apne.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/apne.c	Sun Mar 21 10:15:14 2004
@@ -279,7 +279,8 @@
     dev->base_addr = ioaddr;
 
     /* Install the Interrupt handler */
-    i = request_irq(IRQ_AMIGA_PORTS, apne_interrupt, SA_SHIRQ, dev->name, dev);
+    i = request_irq(IRQ_AMIGA_PORTS, apne_interrupt,
+		    SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
     if (i) return i;
 
     /* Allocate dev->priv and fill in 8390 specific dev fields. */
diff -urN linux-2.4.26-pre5/drivers/net/appletalk/cops.c linux-2.4.26-pre5-netdev-drivers/drivers/net/appletalk/cops.c
--- linux-2.4.26-pre5/drivers/net/appletalk/cops.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/appletalk/cops.c	Sun Mar 21 10:15:14 2004
@@ -304,7 +304,8 @@
 
 	/* Reserve any actual interrupt. */
 	if(dev->irq) {
-		retval = request_irq(dev->irq, &cops_interrupt, 0, dev->name, dev);
+		retval = request_irq(dev->irq, &cops_interrupt,
+				SA_NET_RANDOM, dev->name, dev);
 		if (retval)
 			goto err_out;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/appletalk/ltpc.c linux-2.4.26-pre5-netdev-drivers/drivers/net/appletalk/ltpc.c
--- linux-2.4.26-pre5/drivers/net/appletalk/ltpc.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/appletalk/ltpc.c	Sun Mar 21 10:15:14 2004
@@ -1200,7 +1200,8 @@
 
 	if (irq) {
 		/* grab it and don't let go :-) */
-		(void) request_irq( irq, &ltpc_interrupt, 0, "ltpc", dev);
+		(void) request_irq(irq, &ltpc_interrupt,
+			SA_NET_RANDOM, "ltpc", dev);
 		(void) inb_p(io+7);  /* enable interrupts from board */
 		(void) inb_p(io+7);  /* and reset irq line */
 	} else {
diff -urN linux-2.4.26-pre5/drivers/net/arcnet/arc-rimi.c linux-2.4.26-pre5-netdev-drivers/drivers/net/arcnet/arc-rimi.c
--- linux-2.4.26-pre5/drivers/net/arcnet/arc-rimi.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/arcnet/arc-rimi.c	Sun Mar 21 10:15:14 2004
@@ -121,7 +121,8 @@
 	int mirror_size;
 
 	/* reserve the irq */  {
-		if (request_irq(dev->irq, &arcnet_interrupt, 0, "arcnet (RIM I)", dev))
+		if (request_irq(dev->irq, &arcnet_interrupt,
+				SA_NET_RANDOM, "arcnet (RIM I)", dev))
 			BUGMSG(D_NORMAL, "Can't get IRQ %d!\n", dev->irq);
 		return -ENODEV;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/arcnet/com20020.c linux-2.4.26-pre5-netdev-drivers/drivers/net/arcnet/com20020.c
--- linux-2.4.26-pre5/drivers/net/arcnet/com20020.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/arcnet/com20020.c	Sun Mar 21 10:15:14 2004
@@ -199,7 +199,8 @@
 	outb(dev->dev_addr[0], _XREG);
 
 	/* reserve the irq */
-	if (request_irq(dev->irq, &arcnet_interrupt, shared,
+	if (request_irq(dev->irq, &arcnet_interrupt,
+			shared | SA_NET_RANDOM,
 			"arcnet (COM20020)", dev)) {
 		BUGMSG(D_NORMAL, "Can't get IRQ %d!\n", dev->irq);
 		return -ENODEV;
diff -urN linux-2.4.26-pre5/drivers/net/arcnet/com90io.c linux-2.4.26-pre5-netdev-drivers/drivers/net/arcnet/com90io.c
--- linux-2.4.26-pre5/drivers/net/arcnet/com90io.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/arcnet/com90io.c	Sun Mar 21 10:15:14 2004
@@ -236,7 +236,8 @@
 	int ioaddr = dev->base_addr;
 
 	/* Reserve the irq */
-	if (request_irq(dev->irq, &arcnet_interrupt, 0, "arcnet (COM90xx-IO)", dev)) {
+	if (request_irq(dev->irq, &arcnet_interrupt,
+			SA_NET_RANDOM, "arcnet (COM90xx-IO)", dev)) {
 		BUGMSG(D_NORMAL, "Can't get IRQ %d!\n", dev->irq);
 		return -ENODEV;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/arcnet/com90xx.c linux-2.4.26-pre5-netdev-drivers/drivers/net/arcnet/com90xx.c
--- linux-2.4.26-pre5/drivers/net/arcnet/com90xx.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/arcnet/com90xx.c	Sun Mar 21 10:15:14 2004
@@ -472,7 +472,8 @@
 	dev->dev_addr[0] = readb(lp->mem_start + 1);
 
 	/* reserve the irq */
-	if (request_irq(airq, &arcnet_interrupt, 0, "arcnet (90xx)", dev)) {
+	if (request_irq(airq, &arcnet_interrupt, SA_NET_RANDOM,
+			"arcnet (90xx)", dev)) {
 		BUGMSG(D_NORMAL, "Can't get IRQ %d!\n", airq);
 		goto err_unmap;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/ariadne.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ariadne.c
--- linux-2.4.26-pre5/drivers/net/ariadne.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ariadne.c	Sun Mar 21 10:15:14 2004
@@ -313,8 +313,8 @@
 
     netif_start_queue(dev);
 
-    i = request_irq(IRQ_AMIGA_PORTS, ariadne_interrupt, SA_SHIRQ,
-                    dev->name, dev);
+    i = request_irq(IRQ_AMIGA_PORTS, ariadne_interrupt,
+		    SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
     if (i) return i;
 
     lance->RAP = CSR0;		/* PCnet-ISA Controller Status */
diff -urN linux-2.4.26-pre5/drivers/net/arlan.c linux-2.4.26-pre5-netdev-drivers/drivers/net/arlan.c
--- linux-2.4.26-pre5/drivers/net/arlan.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/arlan.c	Sun Mar 21 10:15:14 2004
@@ -1299,7 +1299,8 @@
 		return ret;
 
 	arlan = ((struct arlan_private *) dev->priv)->card;
-	ret = request_irq(dev->irq, &arlan_interrupt, 0, dev->name, dev);
+	ret = request_irq(dev->irq, &arlan_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (ret)
 	{
 		printk(KERN_ERR "%s: unable to get IRQ %d .\n",
diff -urN linux-2.4.26-pre5/drivers/net/at1700.c linux-2.4.26-pre5-netdev-drivers/drivers/net/at1700.c
--- linux-2.4.26-pre5/drivers/net/at1700.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/at1700.c	Sun Mar 21 10:15:14 2004
@@ -438,7 +438,8 @@
 	lp->jumpered = is_fmv18x;
 	lp->mca_slot = slot;
 	/* Snarf the interrupt vector now. */
-	ret = request_irq(irq, &net_interrupt, 0, dev->name, dev);
+	ret = request_irq(irq, &net_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (ret) {
 		printk ("  AT1700 at %#3x is unusable due to a conflict on"
 				"IRQ %d.\n", ioaddr, irq);
diff -urN linux-2.4.26-pre5/drivers/net/atarilance.c linux-2.4.26-pre5-netdev-drivers/drivers/net/atarilance.c
--- linux-2.4.26-pre5/drivers/net/atarilance.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/atarilance.c	Sun Mar 21 10:15:14 2004
@@ -546,7 +546,8 @@
 	if (lp->cardtype == PAM_CARD ||
 		memaddr == (unsigned short *)0xffe00000) {
 		/* PAMs card and Riebl on ST use level 5 autovector */
-		request_irq(IRQ_AUTO_5, lance_interrupt, IRQ_TYPE_PRIO,
+		request_irq(IRQ_AUTO_5, lance_interrupt,
+		            IRQ_TYPE_PRIO | SA_NET_RANDOM,
 		            "PAM/Riebl-ST Ethernet", dev);
 		dev->irq = (unsigned short)IRQ_AUTO_5;
 	}
@@ -560,7 +561,8 @@
 			printk( "Lance: request for VME interrupt failed\n" );
 			return( 0 );
 		}
-		request_irq(irq, lance_interrupt, IRQ_TYPE_PRIO,
+		request_irq(irq, lance_interrupt,
+		            IRQ_TYPE_PRIO | SA_NET_RANDOM,
 		            "Riebl-VME Ethernet", dev);
 		dev->irq = irq;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/atp.c linux-2.4.26-pre5-netdev-drivers/drivers/net/atp.c
--- linux-2.4.26-pre5/drivers/net/atp.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/atp.c	Sun Mar 21 10:15:14 2004
@@ -439,7 +439,8 @@
 	/* The interrupt line is turned off (tri-stated) when the device isn't in
 	   use.  That's especially important for "attached" interfaces where the
 	   port or interrupt may be shared. */
-	ret = request_irq(dev->irq, &atp_interrupt, 0, dev->name, dev);
+	ret = request_irq(dev->irq, &atp_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (ret)
 		return ret;
 
diff -urN linux-2.4.26-pre5/drivers/net/au1000_eth.c linux-2.4.26-pre5-netdev-drivers/drivers/net/au1000_eth.c
--- linux-2.4.26-pre5/drivers/net/au1000_eth.c	Fri Feb 20 07:38:28 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/au1000_eth.c	Sun Mar 21 10:15:14 2004
@@ -1449,7 +1449,7 @@
 	}
 	netif_start_queue(dev);
 
-	if ((retval = request_irq(dev->irq, &au1000_interrupt, 0, 
+	if ((retval = request_irq(dev->irq, &au1000_interrupt, SA_NET_RANDOM, 
 					dev->name, dev))) {
 		printk(KERN_ERR "%s: unable to get IRQ %d\n", 
 				dev->name, dev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/b44.c linux-2.4.26-pre5-netdev-drivers/drivers/net/b44.c
--- linux-2.4.26-pre5/drivers/net/b44.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/b44.c	Sun Mar 21 10:15:14 2004
@@ -1216,7 +1216,8 @@
 	if (err)
 		return err;
 
-	err = request_irq(dev->irq, b44_interrupt, SA_SHIRQ, dev->name, dev);
+	err = request_irq(dev->irq, b44_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (err)
 		goto err_out_free;
 
diff -urN linux-2.4.26-pre5/drivers/net/bagetlance.c linux-2.4.26-pre5-netdev-drivers/drivers/net/bagetlance.c
--- linux-2.4.26-pre5/drivers/net/bagetlance.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/bagetlance.c	Sun Mar 21 10:15:14 2004
@@ -622,7 +622,8 @@
 	if (lp->cardtype == PAM_CARD ||
 		memaddr == (unsigned short *)0xffe00000) {
 		/* PAMs card and Riebl on ST use level 5 autovector */
-		request_irq(BAGET_LANCE_IRQ, lance_interrupt, IRQ_TYPE_PRIO,
+		request_irq(BAGET_LANCE_IRQ, lance_interrupt,
+		            IRQ_TYPE_PRIO | SA_NET_RANDOM,
 		            "PAM/Riebl-ST Ethernet", dev);
 		dev->irq = (unsigned short)BAGET_LANCE_IRQ;
 	}
@@ -636,7 +637,8 @@
 			printk( "Lance: request for VME interrupt failed\n" );
 			return( 0 );
 		}
-		request_irq(irq, lance_interrupt, IRQ_TYPE_PRIO,
+		request_irq(irq, lance_interrupt, 
+			    IRQ_TYPE_PRIO | SA_NET_RANDOM,
 		            "Riebl-VME Ethernet", dev);
 		dev->irq = irq;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/bmac.c linux-2.4.26-pre5-netdev-drivers/drivers/net/bmac.c
--- linux-2.4.26-pre5/drivers/net/bmac.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/bmac.c	Sun Mar 21 10:15:14 2004
@@ -1414,17 +1414,20 @@
 	init_timer(&bp->tx_timeout);
 	/*     bp->timeout_active = 0; */
 
-	ret = request_irq(dev->irq, bmac_misc_intr, 0, "BMAC-misc", dev);
+	ret = request_irq(dev->irq, bmac_misc_intr, SA_NET_RANDOM,
+			"BMAC-misc", dev);
 	if (ret) {
 		printk(KERN_ERR "BMAC: can't get irq %d\n", dev->irq);
 		goto err_out_iounmap_rx;
 	}
-	ret = request_irq(bmac->intrs[1].line, bmac_txdma_intr, 0, "BMAC-txdma", dev);
+	ret = request_irq(bmac->intrs[1].line, bmac_txdma_intr,
+			SA_NET_RANDOM, "BMAC-txdma", dev);
 	if (ret) {
 		printk(KERN_ERR "BMAC: can't get irq %d\n", bmac->intrs[1].line);
 		goto err_out_irq0;
 	}
-	ret = request_irq(bmac->intrs[2].line, bmac_rxdma_intr, 0, "BMAC-rxdma", dev);
+	ret = request_irq(bmac->intrs[2].line, bmac_rxdma_intr,
+			SA_NET_RANDOM, "BMAC-rxdma", dev);
 	if (ret) {
 		printk(KERN_ERR "BMAC: can't get irq %d\n", bmac->intrs[2].line);
 		goto err_out_irq1;
diff -urN linux-2.4.26-pre5/drivers/net/cirrus.c linux-2.4.26-pre5-netdev-drivers/drivers/net/cirrus.c
--- linux-2.4.26-pre5/drivers/net/cirrus.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/cirrus.c	Sun Mar 21 10:15:14 2004
@@ -350,7 +350,8 @@
 	}
 
 	/* install interrupt handler */
-	if ((result = request_irq (dev->irq,&cirrus_interrupt,0,dev->name,dev)) < 0) {
+	if ((result = request_irq (dev->irq,&cirrus_interrupt,
+					 SA_NET_RANDOM, dev->name,dev)) < 0) {
 		printk (KERN_ERR "%s: could not register interrupt %d\n",dev->name,dev->irq);
 		return (result);
 	}
diff -urN linux-2.4.26-pre5/drivers/net/cs89x0.c linux-2.4.26-pre5-netdev-drivers/drivers/net/cs89x0.c
--- linux-2.4.26-pre5/drivers/net/cs89x0.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/cs89x0.c	Sun Mar 21 10:15:14 2004
@@ -1126,7 +1126,7 @@
 
 		for (i = 2; i < CS8920_NO_INTS; i++) {
 			if ((1 << i) & lp->irq_map) {
-				if (request_irq(i, net_interrupt, 0, dev->name, dev) == 0) {
+				if (request_irq(i, net_interrupt, SA_NET_RANDOM, dev->name, dev) == 0) {
 					dev->irq = i;
 					write_irq(dev, lp->chip_type, i);
 					/* writereg(dev, PP_BufCFG, GENERATE_SW_INTERRUPT); */
@@ -1158,7 +1158,8 @@
 		writereg(dev, PP_BusCTL, ENABLE_IRQ | MEMORY_ON);
 #endif
 		write_irq(dev, lp->chip_type, dev->irq);
-		ret = request_irq(dev->irq, &net_interrupt, 0, dev->name, dev);
+		ret = request_irq(dev->irq, &net_interrupt,
+				SA_NET_RANDOM, dev->name, dev);
 		if (ret) {
 			if (net_debug)
 				printk(KERN_DEBUG "cs89x0: request_irq(%d) failed\n", dev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/de4x5.c linux-2.4.26-pre5-netdev-drivers/drivers/net/de4x5.c
--- linux-2.4.26-pre5/drivers/net/de4x5.c	Fri Feb 20 07:38:28 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/de4x5.c	Sun Mar 21 10:15:14 2004
@@ -1404,11 +1404,12 @@
     lp->state = OPEN;
     de4x5_dbg_open(dev);
     
-    if (request_irq(dev->irq, (void *)de4x5_interrupt, SA_SHIRQ, 
-		                                     lp->adapter_name, dev)) {
+    if (request_irq(dev->irq, (void *)de4x5_interrupt,
+            SA_SHIRQ | SA_NET_RANDOM, lp->adapter_name, dev)) {
 	printk("de4x5_open(): Requested IRQ%d is busy - attemping FAST/SHARE...", dev->irq);
-	if (request_irq(dev->irq, de4x5_interrupt, SA_INTERRUPT | SA_SHIRQ,
-			                             lp->adapter_name, dev)) {
+	if (request_irq(dev->irq, de4x5_interrupt,
+                SA_INTERRUPT | SA_SHIRQ | SA_NET_RANDOM,
+     	        lp->adapter_name, dev)) {
 	    printk("\n              Cannot get IRQ- reconfigure your hardware.\n");
 	    disable_ast(dev);
 	    de4x5_free_rx_buffs(dev);
diff -urN linux-2.4.26-pre5/drivers/net/de600.c linux-2.4.26-pre5-netdev-drivers/drivers/net/de600.c
--- linux-2.4.26-pre5/drivers/net/de600.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/de600.c	Sun Mar 21 10:15:14 2004
@@ -344,7 +344,8 @@
 static int
 de600_open(struct net_device *dev)
 {
-	int ret = request_irq(DE600_IRQ, de600_interrupt, 0, dev->name, dev);
+	int ret = request_irq(DE600_IRQ, de600_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (ret) {
 		printk ("%s: unable to get IRQ %d\n", dev->name, DE600_IRQ);
 		return ret;
diff -urN linux-2.4.26-pre5/drivers/net/de620.c linux-2.4.26-pre5-netdev-drivers/drivers/net/de620.c
--- linux-2.4.26-pre5/drivers/net/de620.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/de620.c	Sun Mar 21 10:15:14 2004
@@ -446,7 +446,8 @@
  */
 static int de620_open(struct net_device *dev)
 {
-	int ret = request_irq(dev->irq, de620_interrupt, 0, dev->name, dev);
+	int ret = request_irq(dev->irq, de620_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (ret) {
 		printk (KERN_ERR "%s: unable to get IRQ %d\n", dev->name, dev->irq);
 		return ret;
diff -urN linux-2.4.26-pre5/drivers/net/declance.c linux-2.4.26-pre5-netdev-drivers/drivers/net/declance.c
--- linux-2.4.26-pre5/drivers/net/declance.c	Fri Feb 20 07:38:28 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/declance.c	Sun Mar 21 10:15:14 2004
@@ -783,15 +783,16 @@
 	netif_start_queue(dev);
 
 	/* Associate IRQ with lance_interrupt */
-	if (request_irq(dev->irq, &lance_interrupt, 0, "lance", dev)) {
+	if (request_irq(dev->irq, &lance_interrupt,
+			SA_NET_RANDOM, "lance", dev)) {
 		printk("%s: Can't get IRQ %d\n", dev->name, dev->irq);
 		return -EAGAIN;
 	}
 	if (lp->dma_irq >= 0) {
 		unsigned long flags;
 
-		if (request_irq(lp->dma_irq, &lance_dma_merr_int, 0,
-				"lance error", dev)) {
+		if (request_irq(lp->dma_irq, &lance_dma_merr_int,
+				SA_NET_RANDOM, "lance error", dev)) {
 			free_irq(dev->irq, dev);
 			printk("%s: Can't get DMA IRQ %d\n", dev->name,
 				lp->dma_irq);
diff -urN linux-2.4.26-pre5/drivers/net/defxx.c linux-2.4.26-pre5-netdev-drivers/drivers/net/defxx.c
--- linux-2.4.26-pre5/drivers/net/defxx.c	Sun Dec 23 16:23:44 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/defxx.c	Sun Mar 21 10:15:14 2004
@@ -1218,7 +1218,8 @@
 	
 	/* Register IRQ - support shared interrupts by passing device ptr */
 
-	ret = request_irq(dev->irq, (void *)dfx_interrupt, SA_SHIRQ, dev->name, dev);
+	ret = request_irq(dev->irq, (void *)dfx_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (ret) {
 		printk(KERN_ERR "%s: Requested IRQ %d is busy\n", dev->name, dev->irq);
 		return ret;
diff -urN linux-2.4.26-pre5/drivers/net/depca.c linux-2.4.26-pre5-netdev-drivers/drivers/net/depca.c
--- linux-2.4.26-pre5/drivers/net/depca.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/depca.c	Sun Mar 21 10:15:14 2004
@@ -771,7 +771,8 @@
 
 	depca_dbg_open(dev);
 
-	if (request_irq(dev->irq, &depca_interrupt, 0, lp->adapter_name, dev)) {
+	if (request_irq(dev->irq, &depca_interrupt, SA_NET_RANDOM,
+				lp->adapter_name, dev)) {
 		printk("depca_open(): Requested IRQ%d is busy\n", dev->irq);
 		status = -EAGAIN;
 	} else {
diff -urN linux-2.4.26-pre5/drivers/net/dgrs.c linux-2.4.26-pre5-netdev-drivers/drivers/net/dgrs.c
--- linux-2.4.26-pre5/drivers/net/dgrs.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/dgrs.c	Sun Mar 21 10:15:14 2004
@@ -1178,7 +1178,8 @@
 	if (priv->plxreg)
 		OUTL(dev->base_addr + PLX_LCL2PCI_DOORBELL, 1);
 	
-	rc = request_irq(dev->irq, &dgrs_intr, SA_SHIRQ, "RightSwitch", dev);
+	rc = request_irq(dev->irq, &dgrs_intr, SA_SHIRQ | SA_NET_RANDOM, 
+			"RightSwitch", dev);
 	if (rc)
 		goto err_out;
 
diff -urN linux-2.4.26-pre5/drivers/net/dl2k.c linux-2.4.26-pre5-netdev-drivers/drivers/net/dl2k.c
--- linux-2.4.26-pre5/drivers/net/dl2k.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/dl2k.c	Sun Mar 21 10:15:14 2004
@@ -436,7 +436,8 @@
 	int i;
 	u16 macctrl;
 	
-	i = request_irq (dev->irq, &rio_interrupt, SA_SHIRQ, dev->name, dev);
+	i = request_irq (dev->irq, &rio_interrupt, 
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (i)
 		return i;
 	
diff -urN linux-2.4.26-pre5/drivers/net/dmfe.c linux-2.4.26-pre5-netdev-drivers/drivers/net/dmfe.c
--- linux-2.4.26-pre5/drivers/net/dmfe.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/dmfe.c	Sun Mar 21 10:15:14 2004
@@ -500,7 +500,8 @@
 
 	DMFE_DBUG(0, "dmfe_open", 0);
 
-	ret = request_irq(dev->irq, &dmfe_interrupt, SA_SHIRQ, dev->name, dev);
+	ret = request_irq(dev->irq, &dmfe_interrupt,
+		SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (ret)
 		return ret;
 
diff -urN linux-2.4.26-pre5/drivers/net/e100/e100_main.c linux-2.4.26-pre5-netdev-drivers/drivers/net/e100/e100_main.c
--- linux-2.4.26-pre5/drivers/net/e100/e100_main.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/e100/e100_main.c	Sun Mar 21 10:15:14 2004
@@ -1023,7 +1023,8 @@
 		netif_start_queue(dev);
 
 	e100_start_ru(bdp);
-	if ((rc = request_irq(dev->irq, &e100intr, SA_SHIRQ,
+	if ((rc = request_irq(dev->irq, &e100intr, 
+			      SA_SHIRQ | SA_NET_RANDOM,
 			      dev->name, dev)) != 0) {
 		del_timer_sync(&bdp->watchdog_timer);
 		goto err_exit;
diff -urN linux-2.4.26-pre5/drivers/net/e1000/e1000_ethtool.c linux-2.4.26-pre5-netdev-drivers/drivers/net/e1000/e1000_ethtool.c
--- linux-2.4.26-pre5/drivers/net/e1000/e1000_ethtool.c	Sat Mar 20 10:08:18 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/e1000/e1000_ethtool.c	Sun Mar 21 10:15:14 2004
@@ -584,8 +584,8 @@
 	*data = 0;
 
 	/* Hook up test interrupt handler just for this test */
-	if(request_irq(adapter->pdev->irq, &e1000_test_intr, SA_SHIRQ,
-	   netdev->name, netdev)) {
+	if(request_irq(adapter->pdev->irq, &e1000_test_intr,
+		       SA_SHIRQ | SA_NET_RANDOM, netdev->name, netdev)) {
 		*data = 1;
 		return -1;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/e2100.c linux-2.4.26-pre5-netdev-drivers/drivers/net/e2100.c
--- linux-2.4.26-pre5/drivers/net/e2100.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/e2100.c	Sun Mar 21 10:15:14 2004
@@ -187,7 +187,8 @@
 	if (dev->irq < 2) {
 		int irqlist[] = {15,11,10,12,5,9,3,4}, i;
 		for (i = 0; i < 8; i++)
-			if (request_irq (irqlist[i], NULL, 0, "bogus", NULL) != -EBUSY) {
+			if (request_irq (irqlist[i], NULL, 
+					SA_NET_RANDOM, "bogus", NULL) != -EBUSY) {
 				dev->irq = irqlist[i];
 				break;
 			}
@@ -261,7 +262,8 @@
 	short ioaddr = dev->base_addr;
 	int retval;
 
-	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev)))
+	if ((retval = request_irq(dev->irq, ei_interrupt,
+			SA_NET_RANDOM, dev->name, dev)))
 		return retval;
 
 	/* Set the interrupt line and memory base on the hardware. */
diff -urN linux-2.4.26-pre5/drivers/net/eepro.c linux-2.4.26-pre5-netdev-drivers/drivers/net/eepro.c
--- linux-2.4.26-pre5/drivers/net/eepro.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/eepro.c	Sun Mar 21 10:15:14 2004
@@ -898,7 +898,7 @@
 
 		eepro_sw2bank0(ioaddr); /* Switch back to Bank 0 */
 
-		if (request_irq (*irqp, NULL, SA_SHIRQ, "bogus", dev) != EBUSY) {
+		if (request_irq (*irqp, NULL, SA_SHIRQ | SA_NET_RANDOM, "bogus", dev) != EBUSY) {
 			/* Twinkle the interrupt, and check if it's seen */
 			autoirq_setup(0);
 
@@ -965,7 +965,7 @@
 		return -EAGAIN;
 	}
 
-	if (request_irq(dev->irq , &eepro_interrupt, 0, dev->name, dev)) {
+	if (request_irq(dev->irq , &eepro_interrupt, SA_NET_RANDOM, dev->name, dev)) {
 		printk(KERN_ERR "%s: unable to get IRQ %d.\n", dev->name, dev->irq);
 		return -EAGAIN;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/eepro100.c linux-2.4.26-pre5-netdev-drivers/drivers/net/eepro100.c
--- linux-2.4.26-pre5/drivers/net/eepro100.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/eepro100.c	Sun Mar 21 10:15:14 2004
@@ -997,7 +997,8 @@
 	sp->in_interrupt = 0;
 
 	/* .. we can safely take handler calls during init. */
-	retval = request_irq(dev->irq, &speedo_interrupt, SA_SHIRQ, dev->name, dev);
+	retval = request_irq(dev->irq, &speedo_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (retval) {
 		return retval;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/eexpress.c linux-2.4.26-pre5-netdev-drivers/drivers/net/eexpress.c
--- linux-2.4.26-pre5/drivers/net/eexpress.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/eexpress.c	Sun Mar 21 10:15:14 2004
@@ -433,7 +433,8 @@
 	if (!dev->irq || !irqrmap[dev->irq])
 		return -ENXIO;
 
-	ret = request_irq(dev->irq,&eexp_irq,0,dev->name,dev);
+	ret = request_irq(dev->irq,&eexp_irq,SA_NET_RANDOM,
+			dev->name,dev);
 	if (ret) return ret;
 
 	if (!request_region(ioaddr, EEXP_IO_EXTENT, "EtherExpress")) {
diff -urN linux-2.4.26-pre5/drivers/net/epic100.c linux-2.4.26-pre5-netdev-drivers/drivers/net/epic100.c
--- linux-2.4.26-pre5/drivers/net/epic100.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/epic100.c	Sun Mar 21 10:15:14 2004
@@ -676,7 +676,8 @@
 	/* Soft reset the chip. */
 	outl(0x4001, ioaddr + GENCTL);
 
-	if ((retval = request_irq(dev->irq, &epic_interrupt, SA_SHIRQ, dev->name, dev)))
+	if ((retval = request_irq(dev->irq, &epic_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev)))
 		return retval;
 
 	epic_init_ring(dev);
diff -urN linux-2.4.26-pre5/drivers/net/es3210.c linux-2.4.26-pre5-netdev-drivers/drivers/net/es3210.c
--- linux-2.4.26-pre5/drivers/net/es3210.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/es3210.c	Sun Mar 21 10:15:14 2004
@@ -212,7 +212,8 @@
 		printk(" assigning IRQ %d", dev->irq);
 	}
 
-	if (request_irq(dev->irq, ei_interrupt, 0, "es3210", dev)) {
+	if (request_irq(dev->irq, ei_interrupt, SA_NET_RANDOM,
+			"es3210", dev)) {
 		printk (" unable to get IRQ %d.\n", dev->irq);
 		retval = -EAGAIN;
 		goto out;
diff -urN linux-2.4.26-pre5/drivers/net/eth16i.c linux-2.4.26-pre5-netdev-drivers/drivers/net/eth16i.c
--- linux-2.4.26-pre5/drivers/net/eth16i.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/eth16i.c	Sun Mar 21 10:15:14 2004
@@ -521,7 +521,8 @@
 
 	/* Try to obtain interrupt vector */
 
-	if ((retval = request_irq(dev->irq, (void *)&eth16i_interrupt, 0, dev->name, dev))) {
+	if ((retval = request_irq(dev->irq, (void *)&eth16i_interrupt,
+			SA_NET_RANDOM, dev->name, dev))) {
 		printk(KERN_WARNING "%s: %s at %#3x, but is unusable due conflicting IRQ %d.\n", 
 		       dev->name, cardname, ioaddr, dev->irq);
 		goto out;
diff -urN linux-2.4.26-pre5/drivers/net/ewrk3.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ewrk3.c
--- linux-2.4.26-pre5/drivers/net/ewrk3.c	Sat May 10 11:36:01 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ewrk3.c	Sun Mar 21 10:15:14 2004
@@ -657,7 +657,8 @@
 	STOP_EWRK3;
 
 	if (!lp->hard_strapped) {
-		if (request_irq(dev->irq, (void *) ewrk3_interrupt, 0, "ewrk3", dev)) {
+		if (request_irq(dev->irq, (void *) ewrk3_interrupt,
+				SA_NET_RANDOM, "ewrk3", dev)) {
 			printk("ewrk3_open(): Requested IRQ%d is busy\n", dev->irq);
 			status = -EAGAIN;
 		} else {
diff -urN linux-2.4.26-pre5/drivers/net/fc/iph5526.c linux-2.4.26-pre5-netdev-drivers/drivers/net/fc/iph5526.c
--- linux-2.4.26-pre5/drivers/net/fc/iph5526.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/fc/iph5526.c	Sun Mar 21 10:15:14 2004
@@ -3811,7 +3811,7 @@
 		int irqval = 0;
 			/* Found it, get IRQ.
 			 */
-			irqval = request_irq(pci_irq_line, &tachyon_interrupt, pci_irq_line ? SA_SHIRQ : 0, fi->name, host);
+			irqval = request_irq(pci_irq_line, &tachyon_interrupt, pci_irq_line ? SA_SHIRQ : 0 | SA_NET_RANDOM, fi->name, host);
 			if (irqval) {
 				printk("iph5526.c : Unable to get IRQ %d (irqval = %d).\n", pci_irq_line, irqval);
 				scsi_unregister(host);
diff -urN linux-2.4.26-pre5/drivers/net/fealnx.c linux-2.4.26-pre5-netdev-drivers/drivers/net/fealnx.c
--- linux-2.4.26-pre5/drivers/net/fealnx.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/fealnx.c	Sun Mar 21 10:15:14 2004
@@ -885,7 +885,8 @@
 
 	writel(0x00000001, ioaddr + BCR);	/* Reset */
 
-	if (request_irq(dev->irq, &intr_handler, SA_SHIRQ, dev->name, dev))
+	if (request_irq(dev->irq, &intr_handler,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev))
 		return -EAGAIN;
 
 	init_ring(dev);
diff -urN linux-2.4.26-pre5/drivers/net/fmv18x.c linux-2.4.26-pre5-netdev-drivers/drivers/net/fmv18x.c
--- linux-2.4.26-pre5/drivers/net/fmv18x.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/fmv18x.c	Sun Mar 21 10:15:14 2004
@@ -200,7 +200,8 @@
 	}
 
 	/* Snarf the interrupt vector now. */
-	retval = request_irq(irq, &net_interrupt, 0, dev->name, dev);
+	retval = request_irq(irq, &net_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (retval) {
 		printk ("FMV-18x found at %#3x, but it's unusable due to a conflict on"
 				"IRQ %d.\n", ioaddr, irq);
diff -urN linux-2.4.26-pre5/drivers/net/gmac.c linux-2.4.26-pre5-netdev-drivers/drivers/net/gmac.c
--- linux-2.4.26-pre5/drivers/net/gmac.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/gmac.c	Sun Mar 21 10:15:14 2004
@@ -1081,7 +1081,8 @@
 		return -EIO;
 
 	/* Get our interrupt */
-	ret = request_irq(dev->irq, gmac_interrupt, 0, dev->name, dev);
+	ret = request_irq(dev->irq, gmac_interrupt,
+			SA_NET_RANDOM, dev->name, dev);
 	if (ret) {
 		printk(KERN_ERR "%s can't get irq %d\n", dev->name, dev->irq);
 		return ret;
diff -urN linux-2.4.26-pre5/drivers/net/gt96100eth.c linux-2.4.26-pre5-netdev-drivers/drivers/net/gt96100eth.c
--- linux-2.4.26-pre5/drivers/net/gt96100eth.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/gt96100eth.c	Sun Mar 21 10:15:14 2004
@@ -1099,7 +1099,8 @@
 	}
 
 	if ((retval = request_irq(dev->irq, &gt96100_interrupt,
-				  SA_SHIRQ, dev->name, dev))) {
+				  SA_SHIRQ | SA_NET_RANDOM, 
+				  dev->name, dev))) {
 		err("unable to get IRQ %d\n", dev->irq);
 		MOD_DEC_USE_COUNT;
 		return retval;
diff -urN linux-2.4.26-pre5/drivers/net/hamachi.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hamachi.c
--- linux-2.4.26-pre5/drivers/net/hamachi.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hamachi.c	Sun Mar 21 10:15:14 2004
@@ -860,7 +860,8 @@
 	u32 rx_int_var, tx_int_var;
 	u16 fifo_info;
 
-	i = request_irq(dev->irq, &hamachi_interrupt, SA_SHIRQ, dev->name, dev);
+	i = request_irq(dev->irq, &hamachi_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (i)
 		return i;
 
diff -urN linux-2.4.26-pre5/drivers/net/hamradio/baycom_ser_fdx.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/baycom_ser_fdx.c
--- linux-2.4.26-pre5/drivers/net/hamradio/baycom_ser_fdx.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/baycom_ser_fdx.c	Sun Mar 21 10:15:14 2004
@@ -433,8 +433,9 @@
 	outb(0, FCR(dev->base_addr));  /* disable FIFOs */
 	outb(0x0d, MCR(dev->base_addr));
 	outb(0, IER(dev->base_addr));
-	if (request_irq(dev->irq, ser12_interrupt, SA_INTERRUPT | SA_SHIRQ,
-			"baycom_ser_fdx", dev)) {
+	if (request_irq(dev->irq, ser12_interrupt,
+		SA_INTERRUPT | SA_SHIRQ | SA_NET_RANDOM,
+		"baycom_ser_fdx", dev)) {
 		release_region(dev->base_addr, SER12_EXTENT);
 		return -EBUSY;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/hamradio/baycom_ser_hdx.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/baycom_ser_hdx.c
--- linux-2.4.26-pre5/drivers/net/hamradio/baycom_ser_hdx.c	Sun Mar  3 17:17:06 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/baycom_ser_hdx.c	Sun Mar 21 10:15:14 2004
@@ -485,7 +485,8 @@
 	outb(0, FCR(dev->base_addr));  /* disable FIFOs */
 	outb(0x0d, MCR(dev->base_addr));
 	outb(0, IER(dev->base_addr));
-	if (request_irq(dev->irq, ser12_interrupt, SA_INTERRUPT | SA_SHIRQ,
+	if (request_irq(dev->irq, ser12_interrupt,
+			SA_INTERRUPT | SA_SHIRQ | SA_NET_RANDOM,
 			"baycom_ser12", dev))
 		return -EBUSY;
 	request_region(dev->base_addr, SER12_EXTENT, "baycom_ser12");
diff -urN linux-2.4.26-pre5/drivers/net/hamradio/dmascc.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/dmascc.c
--- linux-2.4.26-pre5/drivers/net/hamradio/dmascc.c	Sun Mar  3 17:17:06 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/dmascc.c	Sun Mar 21 10:15:14 2004
@@ -713,7 +713,7 @@
 
   /* Request IRQ if not already used by other channel */
   if (!info->irq_used) {
-    if (request_irq(dev->irq, scc_isr, 0, "dmascc", info)) {
+    if (request_irq(dev->irq, scc_isr, SA_NET_RANDOM, "dmascc", info)) {
       MOD_DEC_USE_COUNT;
       return -EAGAIN;
     }
diff -urN linux-2.4.26-pre5/drivers/net/hamradio/scc.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/scc.c
--- linux-2.4.26-pre5/drivers/net/hamradio/scc.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/scc.c	Sun Mar 21 10:15:14 2004
@@ -1769,7 +1769,7 @@
 				
 			if (!Ivec[hwcfg.irq].used && hwcfg.irq)
 			{
-				if (request_irq(hwcfg.irq, scc_isr, SA_INTERRUPT, "AX.25 SCC", NULL))
+				if (request_irq(hwcfg.irq, scc_isr, SA_INTERRUPT | SA_NET_RANDOM, "AX.25 SCC", NULL))
 					printk(KERN_WARNING "z8530drv: warning, cannot get IRQ %d\n", hwcfg.irq);
 				else
 					Ivec[hwcfg.irq].used = 1;
diff -urN linux-2.4.26-pre5/drivers/net/hamradio/soundmodem/sm_sbc.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/soundmodem/sm_sbc.c
--- linux-2.4.26-pre5/drivers/net/hamradio/soundmodem/sm_sbc.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/soundmodem/sm_sbc.c	Sun Mar 21 10:15:14 2004
@@ -407,7 +407,8 @@
 		kfree(sm->dma.obuf);
 		return -EBUSY;
 	}
-	if (request_irq(dev->irq, sbc_interrupt, SA_INTERRUPT, 
+	if (request_irq(dev->irq, sbc_interrupt,
+			SA_INTERRUPT | SA_NET_RANDOM, 
 			sm->hwdrv->hw_name, dev)) {
 		free_dma(dev->dma);
 		kfree(sm->dma.obuf);
@@ -786,7 +787,8 @@
 		free_dma(dev->dma);
 		return -EBUSY;
 	}
-	if (request_irq(dev->irq, sbcfdx_interrupt, SA_INTERRUPT, 
+	if (request_irq(dev->irq, sbcfdx_interrupt,
+			SA_INTERRUPT | SA_NET_RANDOM, 
 			sm->hwdrv->hw_name, dev)) {
 		kfree(sm->dma.ibuf);
 		kfree(sm->dma.obuf);
diff -urN linux-2.4.26-pre5/drivers/net/hamradio/soundmodem/sm_wss.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/soundmodem/sm_wss.c
--- linux-2.4.26-pre5/drivers/net/hamradio/soundmodem/sm_wss.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/soundmodem/sm_wss.c	Sun Mar 21 10:15:14 2004
@@ -443,7 +443,8 @@
 		kfree(sm->dma.obuf);
 		return -EBUSY;
 	}
-	if (request_irq(dev->irq, wss_interrupt, SA_INTERRUPT, 
+	if (request_irq(dev->irq, wss_interrupt,
+			SA_INTERRUPT | SA_NET_RANDOM,
 			sm->hwdrv->hw_name, dev)) {
 		free_dma(dev->dma);
 		kfree(sm->dma.obuf);
@@ -797,7 +798,8 @@
 		free_dma(dev->dma);
 		return -EBUSY;
 	}
-	if (request_irq(dev->irq, wssfdx_interrupt, SA_INTERRUPT, 
+	if (request_irq(dev->irq, wssfdx_interrupt,
+			SA_INTERRUPT | SA_NET_RANDOM,
 			sm->hwdrv->hw_name, dev)) {
 		kfree(sm->dma.ibuf);
 		kfree(sm->dma.obuf);
diff -urN linux-2.4.26-pre5/drivers/net/hamradio/yam.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/yam.c
--- linux-2.4.26-pre5/drivers/net/hamradio/yam.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hamradio/yam.c	Sun Mar 21 10:15:14 2004
@@ -866,7 +866,7 @@
 		goto out_release_base;
 	}
 	outb(0, IER(dev->base_addr));
-	if (request_irq(dev->irq, yam_interrupt, SA_INTERRUPT | SA_SHIRQ, dev->name, dev)) {
+	if (request_irq(dev->irq, yam_interrupt, SA_INTERRUPT | SA_SHIRQ | SA_NET_RANDOM, dev->name, dev)) {
 		printk(KERN_ERR "%s: irq %d busy\n", dev->name, dev->irq);
 		ret = -EBUSY;
 		goto out_release_base;
diff -urN linux-2.4.26-pre5/drivers/net/hp-plus.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hp-plus.c
--- linux-2.4.26-pre5/drivers/net/hp-plus.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hp-plus.c	Sun Mar 21 10:15:14 2004
@@ -253,7 +253,8 @@
 	int option_reg;
 	int retval;
 
-	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {
+	if ((retval = request_irq(dev->irq, ei_interrupt,
+			SA_NET_RANDOM, dev->name, dev))) {
 	    return retval;
 	}
 
diff -urN linux-2.4.26-pre5/drivers/net/hp.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hp.c
--- linux-2.4.26-pre5/drivers/net/hp.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hp.c	Sun Mar 21 10:15:14 2004
@@ -157,8 +157,7 @@
 				/* Twinkle the interrupt, and check if it's seen. */
 				outb_p(irqmap[irq] | HP_RUN, ioaddr + HP_CONFIGURE);
 				outb_p( 0x00 | HP_RUN, ioaddr + HP_CONFIGURE);
-				if (irq == probe_irq_off(cookie)		 /* It's a good IRQ line! */
-					&& request_irq (irq, ei_interrupt, 0, dev->name, dev) == 0) {
+				if (irq == probe_irq_off(cookie) /* It's a good IRQ line! */ && request_irq (irq, ei_interrupt,	SA_NET_RANDOM, dev->name, dev) == 0) {
 					printk(" selecting IRQ %d.\n", irq);
 					dev->irq = *irqp;
 					break;
diff -urN linux-2.4.26-pre5/drivers/net/hp100.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hp100.c
--- linux-2.4.26-pre5/drivers/net/hp100.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hp100.c	Sun Mar 21 10:15:14 2004
@@ -1153,8 +1153,9 @@
 
 	/* New: if bus is PCI or EISA, interrupts might be shared interrupts */
 	if (request_irq(dev->irq, hp100_interrupt,
-			lp->bus == HP100_BUS_PCI || lp->bus ==
-			HP100_BUS_EISA ? SA_SHIRQ : SA_INTERRUPT,
+			(lp->bus == HP100_BUS_PCI || lp->bus ==
+			HP100_BUS_EISA ? SA_SHIRQ : SA_INTERRUPT) |
+			SA_NET_RANDOM,
 			lp->id->name, dev)) {
 		printk("hp100: %s: unable to get IRQ %d\n", dev->name, dev->irq);
 		return -EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/hydra.c linux-2.4.26-pre5-netdev-drivers/drivers/net/hydra.c
--- linux-2.4.26-pre5/drivers/net/hydra.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/hydra.c	Sun Mar 21 10:15:14 2004
@@ -129,8 +129,8 @@
     dev->irq = IRQ_AMIGA_PORTS;
 
     /* Install the Interrupt handler */
-    if (request_irq(IRQ_AMIGA_PORTS, ei_interrupt, SA_SHIRQ, "Hydra Ethernet",
-		    dev))
+    if (request_irq(IRQ_AMIGA_PORTS, ei_interrupt,
+            SA_SHIRQ | SA_NET_RANDOM, "Hydra Ethernet", dev))
 	return -EAGAIN;
 
     /* Allocate dev->priv and fill in 8390 specific dev fields. */
diff -urN linux-2.4.26-pre5/drivers/net/ibmlana.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ibmlana.c
--- linux-2.4.26-pre5/drivers/net/ibmlana.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ibmlana.c	Sun Mar 21 10:15:14 2004
@@ -856,7 +856,7 @@
 
 	result =
 	    request_irq(priv->realirq, irq_handler,
-			SA_SHIRQ | SA_SAMPLE_RANDOM, dev->name, dev);
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (result != 0) {
 		printk("%s: failed to register irq %d\n", dev->name,
 		       dev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/ioc3-eth.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ioc3-eth.c
--- linux-2.4.26-pre5/drivers/net/ioc3-eth.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ioc3-eth.c	Sun Mar 21 10:15:14 2004
@@ -1332,7 +1332,8 @@
 {
 	struct ioc3_private *ip = dev->priv;
 
-	if (request_irq(dev->irq, ioc3_interrupt, SA_SHIRQ, ioc3_str, dev)) {
+	if (request_irq(dev->irq, ioc3_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, ioc3_str, dev)) {
 		printk(KERN_ERR "%s: Can't get irq %d\n", dev->name, dev->irq);
 
 		return -EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/irda/ali-ircc.c linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/ali-ircc.c
--- linux-2.4.26-pre5/drivers/net/irda/ali-ircc.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/ali-ircc.c	Sun Mar 21 10:15:14 2004
@@ -1339,7 +1339,8 @@
 	iobase = self->io.fir_base;
 	
 	/* Request IRQ and install Interrupt Handler */
-	if (request_irq(self->io.irq, ali_ircc_interrupt, 0, dev->name, dev)) 
+	if (request_irq(self->io.irq, ali_ircc_interrupt,
+			SA_NET_RANDOM, dev->name, dev)) 
 	{
 		WARNING("%s, unable to allocate irq=%d\n", driver_name, 
 			self->io.irq);
diff -urN linux-2.4.26-pre5/drivers/net/irda/au1k_ir.c linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/au1k_ir.c
--- linux-2.4.26-pre5/drivers/net/irda/au1k_ir.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/au1k_ir.c	Sun Mar 21 10:15:14 2004
@@ -388,14 +388,14 @@
 	}
 
 	if ((retval = request_irq(AU1000_IRDA_TX_INT, &au1k_irda_interrupt, 
-					0, dev->name, dev))) {
+					SA_NET_RANDOM, dev->name, dev))) {
 		printk(KERN_ERR "%s: unable to get IRQ %d\n", 
 				dev->name, dev->irq);
 		MOD_DEC_USE_COUNT;
 		return retval;
 	}
 	if ((retval = request_irq(AU1000_IRDA_RX_INT, &au1k_irda_interrupt, 
-					0, dev->name, dev))) {
+					SA_NET_RANDOM, dev->name, dev))) {
 		free_irq(AU1000_IRDA_TX_INT, dev);
 		printk(KERN_ERR "%s: unable to get IRQ %d\n", 
 				dev->name, dev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/irda/donauboe.c linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/donauboe.c
--- linux-2.4.26-pre5/drivers/net/irda/donauboe.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/donauboe.c	Sun Mar 21 10:15:14 2004
@@ -1415,7 +1415,8 @@
     return 0;
 
   if (request_irq (self->io.irq, toshoboe_interrupt,
-                   SA_SHIRQ | SA_INTERRUPT, dev->name, (void *) self))
+                   SA_SHIRQ | SA_INTERRUPT | SA_NET_RANDOM, 
+		   dev->name, (void *) self))
     {
       return -EAGAIN;
     }
diff -urN linux-2.4.26-pre5/drivers/net/irda/irport.c linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/irport.c
--- linux-2.4.26-pre5/drivers/net/irda/irport.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/irport.c	Sun Mar 21 10:15:14 2004
@@ -781,8 +781,8 @@
 
 	iobase = self->io.sir_base;
 
-	if (request_irq(self->io.irq, self->interrupt, 0, dev->name, 
-			(void *) dev)) {
+	if (request_irq(self->io.irq, self->interrupt, 
+			SA_NET_RANDOM, dev->name, (void *) dev)) {
 		IRDA_DEBUG(0, "%s(), unable to allocate irq=%d\n",
 			 __FUNCTION__, self->io.irq);
 		return -EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/irda/nsc-ircc.c linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/nsc-ircc.c
--- linux-2.4.26-pre5/drivers/net/irda/nsc-ircc.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/nsc-ircc.c	Sun Mar 21 10:15:14 2004
@@ -1983,7 +1983,8 @@
 	
 	iobase = self->io.fir_base;
 	
-	if (request_irq(self->io.irq, nsc_ircc_interrupt, 0, dev->name, dev)) {
+	if (request_irq(self->io.irq, nsc_ircc_interrupt,
+			SA_NET_RANDOM, dev->name, dev)) {
 		WARNING("%s, unable to allocate irq=%d\n", driver_name, 
 			self->io.irq);
 		return -EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/irda/sa1100_ir.c linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/sa1100_ir.c
--- linux-2.4.26-pre5/drivers/net/irda/sa1100_ir.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/sa1100_ir.c	Sun Mar 21 10:15:14 2004
@@ -864,7 +864,8 @@
 
 	si->speed = 9600;
 
-	err = request_irq(dev->irq, sa1100_irda_irq, 0, dev->name, dev);
+	err = request_irq(dev->irq, sa1100_irda_irq,
+			SA_NET_RANDOM, dev->name, dev);
 	if (err)
 		goto err_irq;
 
diff -urN linux-2.4.26-pre5/drivers/net/irda/toshoboe.c linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/toshoboe.c
--- linux-2.4.26-pre5/drivers/net/irda/toshoboe.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/toshoboe.c	Sun Mar 21 10:15:14 2004
@@ -524,7 +524,8 @@
     return 0;
 
   if (request_irq (self->io.irq, toshoboe_interrupt,
-                   SA_SHIRQ | SA_INTERRUPT, dev->name, (void *) self))
+                   SA_SHIRQ | SA_INTERRUPT | SA_NET_RANDOM,
+		   dev->name, (void *) self))
     {
 
       return -EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/irda/vlsi_ir.c linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/vlsi_ir.c
--- linux-2.4.26-pre5/drivers/net/irda/vlsi_ir.c	Sun Dec 23 16:23:45 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/vlsi_ir.c	Sun Mar 21 10:15:14 2004
@@ -832,8 +832,8 @@
 
 	outb(IRINTR_INT_MASK, ndev->base_addr+VLSI_PIO_IRINTR);
 
-	if (request_irq(ndev->irq, vlsi_interrupt, SA_SHIRQ,
-			drivername, ndev)) {
+	if (request_irq(ndev->irq, vlsi_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, drivername, ndev)) {
 		printk(KERN_ERR "%s: couldn't get IRQ: %d\n",
 			__FUNCTION__, ndev->irq);
 		pci_release_regions(pdev);
diff -urN linux-2.4.26-pre5/drivers/net/irda/w83977af_ir.c linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/w83977af_ir.c
--- linux-2.4.26-pre5/drivers/net/irda/w83977af_ir.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/irda/w83977af_ir.c	Sun Mar 21 10:15:14 2004
@@ -1218,8 +1218,8 @@
 	
 	iobase = self->io.fir_base;
 
-	if (request_irq(self->io.irq, w83977af_interrupt, 0, dev->name, 
-			(void *) dev)) {
+	if (request_irq(self->io.irq, w83977af_interrupt,
+			SA_NET_RANDOM, dev->name, (void *) dev)) {
 		return -EAGAIN;
 	}
 	/*
diff -urN linux-2.4.26-pre5/drivers/net/isa-skeleton.c linux-2.4.26-pre5-netdev-drivers/drivers/net/isa-skeleton.c
--- linux-2.4.26-pre5/drivers/net/isa-skeleton.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/isa-skeleton.c	Sun Mar 21 10:15:14 2004
@@ -216,7 +216,8 @@
 		dev->irq = 9;
 
 	{
-		int irqval = request_irq(dev->irq, &net_interrupt, 0, cardname, dev);
+		int irqval = request_irq(dev->irq, &net_interrupt,
+				SA_NET_RANDOM, cardname, dev);
 		if (irqval) {
 			printk("%s: unable to get IRQ %d (irqval=%d).\n",
 				   dev->name, dev->irq, irqval);
@@ -341,7 +342,7 @@
 	 * This is used if the interrupt line can turned off (shared).
 	 * See 3c503.c for an example of selecting the IRQ at config-time.
 	 */
-	if (request_irq(dev->irq, &net_interrupt, 0, cardname, dev)) {
+	if (request_irq(dev->irq, &net_interrupt, SA_NET_RANDOM, cardname, dev)) {
 		return -EAGAIN;
 	}
 	/*
diff -urN linux-2.4.26-pre5/drivers/net/lance.c linux-2.4.26-pre5-netdev-drivers/drivers/net/lance.c
--- linux-2.4.26-pre5/drivers/net/lance.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/lance.c	Sun Mar 21 10:15:14 2004
@@ -672,7 +672,8 @@
 	int i;
 
 	if (dev->irq == 0 ||
-		request_irq(dev->irq, &lance_interrupt, 0, lp->name, dev)) {
+		request_irq(dev->irq, &lance_interrupt,
+				SA_NET_RANDOM, lp->name, dev)) {
 		return -EAGAIN;
 	}
 
diff -urN linux-2.4.26-pre5/drivers/net/lasi_82596.c linux-2.4.26-pre5-netdev-drivers/drivers/net/lasi_82596.c
--- linux-2.4.26-pre5/drivers/net/lasi_82596.c	Sun Jun 29 11:49:31 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/lasi_82596.c	Sun Mar 21 10:15:14 2004
@@ -1025,7 +1025,8 @@
 
 	MOD_INC_USE_COUNT;
 
-	if (request_irq(dev->irq, &i596_interrupt, 0, "i82596", dev)) {
+	if (request_irq(dev->irq, &i596_interrupt, SA_NET_RANDOM,
+			"i82596", dev)) {
 		printk("%s: IRQ %d not free\n", dev->name, dev->irq);
 		goto out;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/lne390.c linux-2.4.26-pre5-netdev-drivers/drivers/net/lne390.c
--- linux-2.4.26-pre5/drivers/net/lne390.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/lne390.c	Sun Mar 21 10:15:14 2004
@@ -197,7 +197,8 @@
 	}
 	printk(" IRQ %d,", dev->irq);
 
-	if ((ret = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {
+	if ((ret = request_irq(dev->irq, ei_interrupt, SA_NET_RANDOM,
+			dev->name, dev))) {
 		printk (" unable to get IRQ %d.\n", dev->irq);
 		kfree(dev->priv);
 		dev->priv = NULL;
diff -urN linux-2.4.26-pre5/drivers/net/lp486e.c linux-2.4.26-pre5-netdev-drivers/drivers/net/lp486e.c
--- linux-2.4.26-pre5/drivers/net/lp486e.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/lp486e.c	Sun Mar 21 10:15:14 2004
@@ -844,7 +844,8 @@
 i596_open(struct net_device *dev) {
 	int i;
 
-	i = request_irq(dev->irq, &i596_interrupt, SA_SHIRQ, dev->name, dev);
+	i = request_irq(dev->irq, &i596_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (i) {
 		printk("%s: IRQ %d not free\n", dev->name, dev->irq);
 		return i;
diff -urN linux-2.4.26-pre5/drivers/net/mac8390.c linux-2.4.26-pre5-netdev-drivers/drivers/net/mac8390.c
--- linux-2.4.26-pre5/drivers/net/mac8390.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/mac8390.c	Sun Mar 21 10:15:14 2004
@@ -528,7 +528,8 @@
 static int mac8390_open(struct net_device *dev)
 {
 	ei_open(dev);
-	if (request_irq(dev->irq, ei_interrupt, 0, "8390 Ethernet", dev)) {
+	if (request_irq(dev->irq, ei_interrupt,
+				SA_NET_RANDOM, "8390 Ethernet", dev)) {
 		printk ("%s: unable to get IRQ %d.\n", dev->name, dev->irq);
 		return -EAGAIN;
 	}	
diff -urN linux-2.4.26-pre5/drivers/net/mac89x0.c linux-2.4.26-pre5-netdev-drivers/drivers/net/mac89x0.c
--- linux-2.4.26-pre5/drivers/net/mac89x0.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/mac89x0.c	Sun Mar 21 10:15:14 2004
@@ -329,7 +329,8 @@
 	writereg(dev, PP_BusCTL, readreg(dev, PP_BusCTL) & ~ENABLE_IRQ);
 
 	/* Grab the interrupt */
-	if (request_irq(dev->irq, &net_interrupt, 0, "cs89x0", dev))
+	if (request_irq(dev->irq, &net_interrupt, SA_NET_RANDOM,
+			"cs89x0", dev))
 		return -EAGAIN;
 
 	/* Set up the IRQ - Apparently magic */
diff -urN linux-2.4.26-pre5/drivers/net/mace.c linux-2.4.26-pre5-netdev-drivers/drivers/net/mace.c
--- linux-2.4.26-pre5/drivers/net/mace.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/mace.c	Sun Mar 21 10:15:14 2004
@@ -241,13 +241,14 @@
 
 	mace_reset(dev);
 
-	if (request_irq(dev->irq, mace_interrupt, 0, "MACE", dev))
+	if (request_irq(dev->irq, mace_interrupt, SA_NET_RANDOM,
+			"MACE", dev))
 		printk(KERN_ERR "MACE: can't get irq %d\n", dev->irq);
-	if (request_irq(mace->intrs[1].line, mace_txdma_intr, 0, "MACE-txdma",
-			dev))
+	if (request_irq(mace->intrs[1].line, mace_txdma_intr,
+			SA_NET_RANDOM, "MACE-txdma", dev))
 		printk(KERN_ERR "MACE: can't get irq %d\n", mace->intrs[1].line);
-	if (request_irq(mace->intrs[2].line, mace_rxdma_intr, 0, "MACE-rxdma",
-			dev))
+	if (request_irq(mace->intrs[2].line, mace_rxdma_intr,
+			SA_NET_RANDOM, "MACE-rxdma", dev))
 		printk(KERN_ERR "MACE: can't get irq %d\n", mace->intrs[2].line);
 
 	mp->next_mace = mace_devs;
diff -urN linux-2.4.26-pre5/drivers/net/macmace.c linux-2.4.26-pre5-netdev-drivers/drivers/net/macmace.c
--- linux-2.4.26-pre5/drivers/net/macmace.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/macmace.c	Sun Mar 21 10:15:14 2004
@@ -308,7 +308,8 @@
 	mb->plscc = PORTSEL_AUI;
 	/* mb->utr = RTRD; */
 
-	if (request_irq(dev->irq, mace_interrupt, 0, dev->name, dev)) {
+	if (request_irq(dev->irq, mace_interrupt,
+				SA_NET_RANDOM, dev->name, dev)) {
 		printk(KERN_ERR "%s: can't get irq %d\n", dev->name, dev->irq);
 		return -EAGAIN;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/mv64340_eth.c linux-2.4.26-pre5-netdev-drivers/drivers/net/mv64340_eth.c
--- linux-2.4.26-pre5/drivers/net/mv64340_eth.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/mv64340_eth.c	Sun Mar 21 10:15:14 2004
@@ -694,7 +694,7 @@
 
 	retval =
 	    request_irq(ETH_PORT0_IRQ_NUM + port_num, mv64340_eth_int_handler,
-			(SA_INTERRUPT | SA_SAMPLE_RANDOM), dev->name, dev);
+			(SA_INTERRUPT | SA_NET_RANDOM), dev->name, dev);
 
 	if (retval != 0) {
 		printk(KERN_ERR "Can not assign IRQ number to MV64340_eth%d\n",
diff -urN linux-2.4.26-pre5/drivers/net/myri_sbus.c linux-2.4.26-pre5-netdev-drivers/drivers/net/myri_sbus.c
--- linux-2.4.26-pre5/drivers/net/myri_sbus.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/myri_sbus.c	Sun Mar 21 10:15:14 2004
@@ -1064,7 +1064,8 @@
 	/* Register interrupt handler now. */
 	DET(("Requesting MYRIcom IRQ line.\n"));
 	if (request_irq(dev->irq, &myri_interrupt,
-			SA_SHIRQ, "MyriCOM Ethernet", (void *) dev)) {
+			SA_SHIRQ | SA_NET_RANDOM, "MyriCOM Ethernet",
+			(void *) dev)) {
 		printk("MyriCOM: Cannot register interrupt handler.\n");
 		goto err;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/natsemi.c linux-2.4.26-pre5-netdev-drivers/drivers/net/natsemi.c
--- linux-2.4.26-pre5/drivers/net/natsemi.c	Sat Mar 20 10:08:18 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/natsemi.c	Sun Mar 21 10:15:14 2004
@@ -1087,7 +1087,8 @@
 	/* Reset the chip, just in case. */
 	natsemi_reset(dev);
 
-	i = request_irq(dev->irq, &intr_handler, SA_SHIRQ, dev->name, dev);
+	i = request_irq(dev->irq, &intr_handler,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (i) return i;
 
 	if (netif_msg_ifup(np))
diff -urN linux-2.4.26-pre5/drivers/net/ne.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ne.c
--- linux-2.4.26-pre5/drivers/net/ne.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ne.c	Sun Mar 21 10:15:14 2004
@@ -427,7 +427,8 @@
 
 	/* Snarf the interrupt now.  There's no point in waiting since we cannot
 	   share and the board will usually be enabled. */
-	ret = request_irq(dev->irq, ei_interrupt, 0, name, dev);
+	ret = request_irq(dev->irq, ei_interrupt, SA_NET_RANDOM,
+			name, dev);
 	if (ret) {
 		printk (" unable to get IRQ %d (errno=%d).\n", dev->irq, ret);
 		goto err_out_kfree;
diff -urN linux-2.4.26-pre5/drivers/net/ne2.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ne2.c
--- linux-2.4.26-pre5/drivers/net/ne2.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ne2.c	Sun Mar 21 10:15:14 2004
@@ -439,7 +439,8 @@
 
 	/* Snarf the interrupt now.  There's no point in waiting since we cannot
 	   share and the board will usually be enabled. */
-	retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev);
+	retval = request_irq(dev->irq, ei_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (retval) {
 		printk (" unable to get IRQ %d (irqval=%d).\n", 
 				dev->irq, retval);
diff -urN linux-2.4.26-pre5/drivers/net/ne2k-pci.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ne2k-pci.c
--- linux-2.4.26-pre5/drivers/net/ne2k-pci.c	Sat Mar 20 10:08:18 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ne2k-pci.c	Sun Mar 21 10:15:14 2004
@@ -385,7 +385,8 @@
 
 static int ne2k_pci_open(struct net_device *dev)
 {
-	int ret = request_irq(dev->irq, ei_interrupt, SA_SHIRQ, dev->name, dev);
+	int ret = request_irq(dev->irq, ei_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (ret)
 		return ret;
 
diff -urN linux-2.4.26-pre5/drivers/net/ne3210.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ne3210.c
--- linux-2.4.26-pre5/drivers/net/ne3210.c	Sun Aug  4 12:05:02 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ne3210.c	Sun Mar 21 10:15:14 2004
@@ -189,7 +189,8 @@
 	}
 	printk(" IRQ %d,", dev->irq);
 
-	retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev);
+	retval = request_irq(dev->irq, ei_interrupt,
+			SA_NET_RANDOM, dev->name, dev);
 	if (retval) {
 		printk (" unable to get IRQ %d.\n", dev->irq);
 		goto out1;
diff -urN linux-2.4.26-pre5/drivers/net/ni5010.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ni5010.c
--- linux-2.4.26-pre5/drivers/net/ni5010.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ni5010.c	Sun Mar 21 10:15:14 2004
@@ -354,7 +354,8 @@
 
 	PRINTK2((KERN_DEBUG "%s: entering ni5010_open()\n", dev->name)); 
 	
-	if (request_irq(dev->irq, &ni5010_interrupt, 0, boardname, dev)) {
+	if (request_irq(dev->irq, &ni5010_interrupt, SA_NET_RANDOM,
+				boardname, dev)) {
 		printk(KERN_WARNING "%s: Cannot get irq %#2x\n", dev->name, dev->irq);
 		return -EAGAIN;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/ni52.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ni52.c
--- linux-2.4.26-pre5/drivers/net/ni52.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ni52.c	Sun Mar 21 10:15:14 2004
@@ -265,7 +265,8 @@
 	startrecv586(dev);
 	ni_enaint();
 
-	ret = request_irq(dev->irq, &ni52_interrupt,0,dev->name,dev);
+	ret = request_irq(dev->irq, &ni52_interrupt,SA_NET_RANDOM,
+			dev->name,dev);
 	if (ret)
 	{
 		ni_reset586();
diff -urN linux-2.4.26-pre5/drivers/net/ni65.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ni65.c
--- linux-2.4.26-pre5/drivers/net/ni65.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ni65.c	Sun Mar 21 10:15:14 2004
@@ -269,7 +269,7 @@
 static int ni65_open(struct net_device *dev)
 {
 	struct priv *p = (struct priv *) dev->priv;
-	int irqval = request_irq(dev->irq, &ni65_interrupt,0,
+	int irqval = request_irq(dev->irq, &ni65_interrupt,SA_NET_RANDOM,
                         cards[p->cardno].cardname,dev);
 	if (irqval) {
 		printk ("%s: unable to get IRQ %d (irqval=%d).\n",
diff -urN linux-2.4.26-pre5/drivers/net/ns83820.c linux-2.4.26-pre5-netdev-drivers/drivers/net/ns83820.c
--- linux-2.4.26-pre5/drivers/net/ns83820.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/ns83820.c	Sun Mar 21 10:15:14 2004
@@ -1824,8 +1824,8 @@
 	setup_ee_mem_bitbanger(&dev->ee, (long)dev->base + MEAR, 3, 2, 1, 0,
 		0);
 
-	err = request_irq(pci_dev->irq, ns83820_irq, SA_SHIRQ,
-			  dev->net_dev.name, dev);
+	err = request_irq(pci_dev->irq, ns83820_irq,
+		SA_SHIRQ | SA_NET_RANDOM, dev->net_dev.name, dev);
 	if (err) {
 		printk(KERN_INFO "ns83820: unable to register irq %d\n",
 			pci_dev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/oaknet.c linux-2.4.26-pre5-netdev-drivers/drivers/net/oaknet.c
--- linux-2.4.26-pre5/drivers/net/oaknet.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/oaknet.c	Sun Mar 21 10:15:14 2004
@@ -183,7 +183,8 @@
 	/* Attempt to get the interrupt line */
 
 	ret = -EAGAIN;
-	if (request_irq(dev->irq, ei_interrupt, 0, name, dev)) {
+	if (request_irq(dev->irq, ei_interrupt, SA_NET_RANDOM,
+				name, dev)) {
 		printk("%s: unable to request interrupt %d.\n",
 		       dev->name, dev->irq);
 		goto out_priv;
diff -urN linux-2.4.26-pre5/drivers/net/pci-skeleton.c linux-2.4.26-pre5-netdev-drivers/drivers/net/pci-skeleton.c
--- linux-2.4.26-pre5/drivers/net/pci-skeleton.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/pci-skeleton.c	Sun Mar 21 10:15:14 2004
@@ -1086,7 +1086,8 @@
 
 	DPRINTK ("ENTER\n");
 
-	retval = request_irq (dev->irq, netdrv_interrupt, SA_SHIRQ, dev->name, dev);
+	retval = request_irq (dev->irq, netdrv_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (retval) {
 		DPRINTK ("EXIT, returning %d\n", retval);
 		return retval;
diff -urN linux-2.4.26-pre5/drivers/net/pcmcia/axnet_cs.c linux-2.4.26-pre5-netdev-drivers/drivers/net/pcmcia/axnet_cs.c
--- linux-2.4.26-pre5/drivers/net/pcmcia/axnet_cs.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/pcmcia/axnet_cs.c	Sun Mar 21 10:15:14 2004
@@ -692,7 +692,8 @@
     link->open++;
     MOD_INC_USE_COUNT;
 
-    request_irq(dev->irq, ei_irq_wrapper, SA_SHIRQ, dev_info, dev);
+    request_irq(dev->irq, ei_irq_wrapper,
+                SA_SHIRQ | SA_NET_RANDOM, dev_info, dev);
 
     info->link_status = 0x00;
     info->watchdog.function = &ei_watchdog;
diff -urN linux-2.4.26-pre5/drivers/net/pcmcia/pcnet_cs.c linux-2.4.26-pre5-netdev-drivers/drivers/net/pcmcia/pcnet_cs.c
--- linux-2.4.26-pre5/drivers/net/pcmcia/pcnet_cs.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/pcmcia/pcnet_cs.c	Sun Mar 21 10:15:14 2004
@@ -1130,7 +1130,7 @@
     MOD_INC_USE_COUNT;
 
     set_misc_reg(dev);
-    request_irq(dev->irq, ei_irq_wrapper, SA_SHIRQ, dev_info, dev);
+    request_irq(dev->irq, ei_irq_wrapper, SA_SHIRQ | SA_NET_RANDOM, dev_info, dev);
 
     info->phy_id = info->eth_phy;
     info->link_status = 0x00;
diff -urN linux-2.4.26-pre5/drivers/net/pcmcia/xircom_cb.c linux-2.4.26-pre5-netdev-drivers/drivers/net/pcmcia/xircom_cb.c
--- linux-2.4.26-pre5/drivers/net/pcmcia/xircom_cb.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/pcmcia/xircom_cb.c	Sun Mar 21 10:15:14 2004
@@ -447,7 +447,7 @@
 	int retval;
 	enter("xircom_open");
 	printk(KERN_INFO "xircom cardbus adaptor found, registering as %s, using irq %i \n",dev->name,dev->irq);
-	retval = request_irq(dev->irq, &xircom_interrupt, SA_SHIRQ, dev->name, dev);
+	retval = request_irq(dev->irq, &xircom_interrupt, SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (retval) {
 		leave("xircom_open - No IRQ");
 		return retval;
diff -urN linux-2.4.26-pre5/drivers/net/pcmcia/xircom_tulip_cb.c linux-2.4.26-pre5-netdev-drivers/drivers/net/pcmcia/xircom_tulip_cb.c
--- linux-2.4.26-pre5/drivers/net/pcmcia/xircom_tulip_cb.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/pcmcia/xircom_tulip_cb.c	Sun Mar 21 10:15:14 2004
@@ -798,7 +798,8 @@
 {
 	struct xircom_private *tp = dev->priv;
 
-	if (request_irq(dev->irq, &xircom_interrupt, SA_SHIRQ, dev->name, dev))
+	if (request_irq(dev->irq, &xircom_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev))
 		return -EAGAIN;
 
 	xircom_init_ring(dev);
diff -urN linux-2.4.26-pre5/drivers/net/pcnet32.c linux-2.4.26-pre5-netdev-drivers/drivers/net/pcnet32.c
--- linux-2.4.26-pre5/drivers/net/pcnet32.c	Sat Mar 20 10:08:19 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/pcnet32.c	Sun Mar 21 10:15:14 2004
@@ -1116,7 +1116,8 @@
 
     if (dev->irq == 0 ||
 	request_irq(dev->irq, &pcnet32_interrupt,
-		    lp->shared_irq ? SA_SHIRQ : 0, lp->name, (void *)dev)) {
+		    lp->shared_irq ? SA_SHIRQ : 0 | SA_NET_RANDOM,
+		    lp->name, (void *)dev)) {
 	return -EAGAIN;
     }
 
diff -urN linux-2.4.26-pre5/drivers/net/r8169.c linux-2.4.26-pre5-netdev-drivers/drivers/net/r8169.c
--- linux-2.4.26-pre5/drivers/net/r8169.c	Sat Mar 20 10:08:19 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/r8169.c	Sun Mar 21 10:15:14 2004
@@ -659,7 +659,8 @@
 	u32 TxPhyAddr, RxPhyAddr;
 
 	retval =
-	    request_irq(dev->irq, rtl8169_interrupt, SA_SHIRQ, dev->name, dev);
+	    request_irq(dev->irq, rtl8169_interrupt, 
+			    SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (retval) {
 		return retval;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/rcpci45.c linux-2.4.26-pre5-netdev-drivers/drivers/net/rcpci45.c
--- linux-2.4.26-pre5/drivers/net/rcpci45.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/rcpci45.c	Sun Mar 21 10:15:14 2004
@@ -317,7 +317,8 @@
 	}
 
 	/* Request a shared interrupt line. */
-	error = request_irq (dev->irq, RCinterrupt, SA_SHIRQ, dev->name, dev);
+	error = request_irq (dev->irq, RCinterrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (error) {
 		printk (KERN_ERR "%s: unable to get IRQ %d\n", 
 				dev->name, dev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/rrunner.c linux-2.4.26-pre5-netdev-drivers/drivers/net/rrunner.c
--- linux-2.4.26-pre5/drivers/net/rrunner.c	Sat May 10 11:36:01 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/rrunner.c	Sun Mar 21 10:15:14 2004
@@ -1227,7 +1227,8 @@
 	writel(readl(&regs->HostCtrl)|HALT_NIC|RR_CLEAR_INT, &regs->HostCtrl);
 	spin_unlock_irqrestore(&rrpriv->lock, flags);
 
-	if (request_irq(dev->irq, rr_interrupt, SA_SHIRQ, rrpriv->name, dev))
+	if (request_irq(dev->irq, rr_interrupt, SA_SHIRQ | SA_NET_RANDOM,
+			rrpriv->name, dev))
 	{
 		printk(KERN_WARNING "%s: Requested IRQ %d is busy\n",
 		       dev->name, dev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/saa9730.c linux-2.4.26-pre5-netdev-drivers/drivers/net/saa9730.c
--- linux-2.4.26-pre5/drivers/net/saa9730.c	Mon Apr 21 22:41:03 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/saa9730.c	Sun Mar 21 10:15:14 2004
@@ -786,8 +786,8 @@
 	    (struct lan_saa9730_private *) dev->priv;
 
 	/* Associate IRQ with lan_saa9730_interrupt */
-	if (request_irq(dev->irq, &lan_saa9730_interrupt, 0, "SAA9730 Eth",
-			dev)) {
+	if (request_irq(dev->irq, &lan_saa9730_interrupt, SA_NET_RANDOM,
+			"SAA9730 Eth", dev)) {
 		printk("lan_saa9730_open: Can't get irq %d\n", dev->irq);
 		return -EAGAIN;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/sb1000.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sb1000.c
--- linux-2.4.26-pre5/drivers/net/sb1000.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sb1000.c	Sun Mar 21 10:15:14 2004
@@ -992,7 +992,8 @@
 	lp->rx_frame_id[1] = 0;
 	lp->rx_frame_id[2] = 0;
 	lp->rx_frame_id[3] = 0;
-	if (request_irq(dev->irq, &sb1000_interrupt, 0, "sb1000", dev)) {
+	if (request_irq(dev->irq, &sb1000_interrupt, SA_NET_RANDOM,
+			"sb1000", dev)) {
 		return -EAGAIN;
 	}
 
diff -urN linux-2.4.26-pre5/drivers/net/sb1250-mac.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sb1250-mac.c
--- linux-2.4.26-pre5/drivers/net/sb1250-mac.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sb1250-mac.c	Sun Mar 21 10:15:14 2004
@@ -2432,7 +2432,8 @@
 	 */
 
 	SBMAC_READCSR(sc->sbm_isr);
-	if (request_irq(dev->irq, &sbmac_intr, SA_SHIRQ, dev->name, dev)) {
+	if (request_irq(dev->irq, &sbmac_intr,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev)) {
 		MOD_DEC_USE_COUNT;
 		return -EBUSY;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/seeq8005.c linux-2.4.26-pre5-netdev-drivers/drivers/net/seeq8005.c
--- linux-2.4.26-pre5/drivers/net/seeq8005.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/seeq8005.c	Sun Mar 21 10:15:14 2004
@@ -299,7 +299,8 @@
 
 #if 0
 	{
-		 int irqval = request_irq(dev->irq, &seeq8005_interrupt, 0, "seeq8005", dev);
+		 int irqval = request_irq(dev->irq, &seeq8005_interrupt,
+				 SA_NET_RANDOM, "seeq8005", dev);
 		 if (irqval) {
 			 printk ("%s: unable to get IRQ %d (irqval=%d).\n", dev->name,
 					 dev->irq, irqval);
@@ -347,7 +348,7 @@
 	struct net_local *lp = (struct net_local *)dev->priv;
 
 	{
-		 int irqval = request_irq(dev->irq, &seeq8005_interrupt, 0, "seeq8005", dev);
+		 int irqval = request_irq(dev->irq, &seeq8005_interrupt, SA_NET_RANDOM, "seeq8005", dev);
 		 if (irqval) {
 			 printk ("%s: unable to get IRQ %d (irqval=%d).\n", dev->name,
 					 dev->irq, irqval);
diff -urN linux-2.4.26-pre5/drivers/net/sgiseeq.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sgiseeq.c
--- linux-2.4.26-pre5/drivers/net/sgiseeq.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sgiseeq.c	Sun Mar 21 10:15:14 2004
@@ -619,7 +619,8 @@
 		goto err_out_free_dev;
 	}
 
-	if (request_irq(irq, sgiseeq_interrupt, 0, sgiseeqstr, dev)) {
+	if (request_irq(irq, sgiseeq_interrupt,
+			SA_NET_RANDOM, sgiseeqstr, dev)) {
 		printk(KERN_ERR "Seeq8003: Can't get irq %d\n", dev->irq);
 		err = -EAGAIN;
 		goto err_out_free_page;
diff -urN linux-2.4.26-pre5/drivers/net/sis900.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sis900.c
--- linux-2.4.26-pre5/drivers/net/sis900.c	Sat Mar 20 10:08:19 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sis900.c	Sun Mar 21 10:15:14 2004
@@ -927,7 +927,9 @@
 	pci_read_config_byte(sis_priv->pci_dev, PCI_CLASS_REVISION, &revision);
 	sis630_set_eq(net_dev, revision);
 
-	ret = request_irq(net_dev->irq, &sis900_interrupt, SA_SHIRQ, net_dev->name, net_dev);
+	ret = request_irq(net_dev->irq, &sis900_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM,
+			net_dev->name, net_dev);
 	if (ret)
 		return ret;
 
diff -urN linux-2.4.26-pre5/drivers/net/sk98lin/skge.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sk98lin/skge.c
--- linux-2.4.26-pre5/drivers/net/sk98lin/skge.c	Sat Mar 20 10:08:19 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sk98lin/skge.c	Sun Mar 21 10:15:14 2004
@@ -955,10 +955,11 @@
 	spin_unlock_irqrestore(&pAC->SlowPathLock, Flags);
 
 	if (pAC->GIni.GIMacsFound == 2) {
-		 Ret = request_irq(dev->irq, SkGeIsr, SA_SHIRQ, pAC->Name, dev);
+		Ret = request_irq(dev->irq, SkGeIsr,
+			SA_SHIRQ | SA_NET_RANDOM, pAC->Name, dev);
 	} else if (pAC->GIni.GIMacsFound == 1) {
-		Ret = request_irq(dev->irq, SkGeIsrOnePort, SA_SHIRQ,
-			pAC->Name, dev);
+		Ret = request_irq(dev->irq, SkGeIsrOnePort,
+			SA_SHIRQ | SA_NET_RANDOM, pAC->Name, dev);
 	} else {
 		printk(KERN_WARNING "sk98lin: Illegal number of ports: %d\n",
 		       pAC->GIni.GIMacsFound);
diff -urN linux-2.4.26-pre5/drivers/net/sk_g16.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sk_g16.c
--- linux-2.4.26-pre5/drivers/net/sk_g16.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sk_g16.c	Sun Mar 21 10:15:14 2004
@@ -947,7 +947,8 @@
 
 	do
 	{
-	  irqval = request_irq(irqtab[i], &SK_interrupt, 0, "sk_g16", dev);
+	  irqval = request_irq(irqtab[i], &SK_interrupt, SA_NET_RANDOM,
+			  "sk_g16", dev);
 	  i++;
 	} while (irqval && irqtab[i]);
 
@@ -964,7 +965,7 @@
     }
     else if (dev->irq == 2) /* IRQ2 is always IRQ9 */
     {
-	if (request_irq(9, &SK_interrupt, 0, "sk_g16", dev))
+	if (request_irq(9, &SK_interrupt, SA_NET_RANDOM, "sk_g16", dev))
 	{
 	    printk("%s: unable to get IRQ 9\n", dev->name);
 	    return -EAGAIN;
@@ -985,7 +986,8 @@
 
 	/* check if IRQ free and valid. Then install Interrupt handler */
 
-	if (request_irq(dev->irq, &SK_interrupt, 0, "sk_g16", dev))
+	if (request_irq(dev->irq, &SK_interrupt,
+				SA_NET_RANDOM, "sk_g16", dev))
 	{
 	    printk("%s: unable to get selected IRQ\n", dev->name);
 	    return -EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/sk_mca.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sk_mca.c
--- linux-2.4.26-pre5/drivers/net/sk_mca.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sk_mca.c	Sun Mar 21 10:15:14 2004
@@ -861,7 +861,7 @@
 	/* register resources - only necessary for IRQ */
 	result =
 	    request_irq(priv->realirq, irq_handler,
-			SA_SHIRQ | SA_SAMPLE_RANDOM, "sk_mca", dev);
+			SA_SHIRQ | SA_NET_RANDOM, "sk_mca", dev);
 	if (result != 0) {
 		printk("%s: failed to register irq %d\n", dev->name,
 		       dev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/skfp/skfddi.c linux-2.4.26-pre5-netdev-drivers/drivers/net/skfp/skfddi.c
--- linux-2.4.26-pre5/drivers/net/skfp/skfddi.c	Sun Aug  4 12:05:03 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/skfp/skfddi.c	Sun Mar 21 10:15:14 2004
@@ -776,8 +776,8 @@
 
 	PRINTK(KERN_INFO "entering skfp_open\n");
 	/* Register IRQ - support shared interrupts by passing device ptr */
-	if (request_irq(dev->irq, (void *) skfp_interrupt, SA_SHIRQ,
-			dev->name, dev)) {
+	if (request_irq(dev->irq, (void *) skfp_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev)) {
 		printk("%s: Requested IRQ %d is busy\n", dev->name, dev->irq);
 		return (-EAGAIN);
 	}
diff -urN linux-2.4.26-pre5/drivers/net/smc-mca.c linux-2.4.26-pre5-netdev-drivers/drivers/net/smc-mca.c
--- linux-2.4.26-pre5/drivers/net/smc-mca.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/smc-mca.c	Sun Mar 21 10:15:14 2004
@@ -325,7 +325,8 @@
 	int ioaddr = dev->base_addr - ULTRA_NIC_OFFSET; /* ASIC addr */
 	int retval;
 
-	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev)))
+	if ((retval = request_irq(dev->irq, ei_interrupt,
+			SA_NET_RANDOM, dev->name, dev)))
 		return retval;
 
 	outb(ULTRA_MEMENB, ioaddr); /* Enable memory */
diff -urN linux-2.4.26-pre5/drivers/net/smc-ultra.c linux-2.4.26-pre5-netdev-drivers/drivers/net/smc-ultra.c
--- linux-2.4.26-pre5/drivers/net/smc-ultra.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/smc-ultra.c	Sun Mar 21 10:15:14 2004
@@ -329,7 +329,8 @@
 	unsigned char irq2reg[] = {0, 0, 0x04, 0x08, 0, 0x0C, 0, 0x40,
 				   0, 0x04, 0x44, 0x48, 0, 0, 0, 0x4C, };
 
-	retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev);
+	retval = request_irq(dev->irq, ei_interrupt, SA_NET_RANDOM,
+			dev->name, dev);
 	if (retval)
 		return retval;
 
diff -urN linux-2.4.26-pre5/drivers/net/smc-ultra32.c linux-2.4.26-pre5-netdev-drivers/drivers/net/smc-ultra32.c
--- linux-2.4.26-pre5/drivers/net/smc-ultra32.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/smc-ultra32.c	Sun Mar 21 10:15:14 2004
@@ -256,6 +256,8 @@
 	int irq_flags = (inb(ioaddr + ULTRA32_CFG5) & 0x08) ? 0 : SA_SHIRQ;
 	int retval;
 
+	irq_flags |= SA_NET_RANDOM;
+
 	retval = request_irq(dev->irq, ei_interrupt, irq_flags, dev->name, dev);
 	if (retval)
 		return retval;
diff -urN linux-2.4.26-pre5/drivers/net/smc9194.c linux-2.4.26-pre5-netdev-drivers/drivers/net/smc9194.c
--- linux-2.4.26-pre5/drivers/net/smc9194.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/smc9194.c	Sun Mar 21 10:15:14 2004
@@ -998,7 +998,7 @@
 	ether_setup(dev);
 
 	/* Grab the IRQ */
-      	retval = request_irq(dev->irq, &smc_interrupt, 0, dev->name, dev);
+      	retval = request_irq(dev->irq, &smc_interrupt, SA_NET_RANDOM, dev->name, dev);
       	if (retval) {
 		printk("%s: unable to get IRQ %d (irqval=%d).\n", dev->name,
 			dev->irq, retval);
diff -urN linux-2.4.26-pre5/drivers/net/sonic.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sonic.c
--- linux-2.4.26-pre5/drivers/net/sonic.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sonic.c	Sun Mar 21 10:15:14 2004
@@ -42,8 +42,8 @@
  * this glue works ok under all situations.
  */
 //    if (sonic_request_irq(dev->irq, &sonic_interrupt, 0, "sonic", dev)) {
-	if (sonic_request_irq(dev->irq, &sonic_interrupt, SA_INTERRUPT,
-	                      "sonic", dev)) {
+	if (sonic_request_irq(dev->irq, &sonic_interrupt,
+			SA_INTERRUPT | SA_NET_RANDOM, "sonic", dev)) {
 		printk("\n%s: unable to get IRQ %d .\n", dev->name, dev->irq);
 		return -EAGAIN;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/starfire.c linux-2.4.26-pre5-netdev-drivers/drivers/net/starfire.c
--- linux-2.4.26-pre5/drivers/net/starfire.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/starfire.c	Sun Mar 21 10:15:14 2004
@@ -1058,7 +1058,8 @@
 
 	COMPAT_MOD_INC_USE_COUNT;
 
-	retval = request_irq(dev->irq, &intr_handler, SA_SHIRQ, dev->name, dev);
+	retval = request_irq(dev->irq, &intr_handler,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (retval) {
 		COMPAT_MOD_DEC_USE_COUNT;
 		return retval;
diff -urN linux-2.4.26-pre5/drivers/net/stnic.c linux-2.4.26-pre5-netdev-drivers/drivers/net/stnic.c
--- linux-2.4.26-pre5/drivers/net/stnic.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/stnic.c	Sun Mar 21 10:15:14 2004
@@ -135,7 +135,7 @@
 
   /* Snarf the interrupt now.  There's no point in waiting since we cannot
      share and the board will usually be enabled. */
-  i = request_irq (dev->irq, ei_interrupt, 0, dev->name, dev);
+  i = request_irq(dev->irq, ei_interrupt, SA_NET_RANDOM, dev->name, dev);
   if (i)  {
       printk (KERN_EMERG " unable to get IRQ %d.\n", dev->irq);
       unregister_netdev(dev);
diff -urN linux-2.4.26-pre5/drivers/net/sun3_82586.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sun3_82586.c
--- linux-2.4.26-pre5/drivers/net/sun3_82586.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sun3_82586.c	Sun Mar 21 10:15:14 2004
@@ -190,7 +190,8 @@
 	startrecv586(dev);
 	sun3_enaint();
 
-	ret = request_irq(dev->irq, &sun3_82586_interrupt,0,dev->name,dev);
+	ret = request_irq(dev->irq, &sun3_82586_interrupt,
+			SA_NET_RANDOM,dev->name,dev);
 	if (ret)
 	{
 		sun3_reset586();
diff -urN linux-2.4.26-pre5/drivers/net/sun3lance.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sun3lance.c
--- linux-2.4.26-pre5/drivers/net/sun3lance.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sun3lance.c	Sun Mar 21 10:15:14 2004
@@ -325,7 +325,8 @@
 
 	REGA(CSR0) = CSR0_STOP; 
 
-	request_irq(LANCE_IRQ, lance_interrupt, 0, "SUN3 Lance", dev);
+	request_irq(LANCE_IRQ, lance_interrupt, SA_NET_RANDOM,
+			"SUN3 Lance", dev);
 	dev->irq = (unsigned short)LANCE_IRQ;
 
 
diff -urN linux-2.4.26-pre5/drivers/net/sunbmac.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sunbmac.c
--- linux-2.4.26-pre5/drivers/net/sunbmac.c	Sun Aug  4 12:05:03 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sunbmac.c	Sun Mar 21 10:15:14 2004
@@ -905,7 +905,8 @@
 	struct bigmac *bp = (struct bigmac *) dev->priv;
 	int ret;
 
-	ret = request_irq(dev->irq, &bigmac_interrupt, SA_SHIRQ, dev->name, bp);
+	ret = request_irq(dev->irq, &bigmac_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, bp);
 	if (ret) {
 		printk(KERN_ERR "BIGMAC: Can't order irq %d to go.\n", dev->irq);
 		return ret;
diff -urN linux-2.4.26-pre5/drivers/net/sundance.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sundance.c
--- linux-2.4.26-pre5/drivers/net/sundance.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sundance.c	Sun Mar 21 10:15:14 2004
@@ -860,7 +860,8 @@
 
 	/* Do we need to reset the chip??? */
 
-	i = request_irq(dev->irq, &intr_handler, SA_SHIRQ, dev->name, dev);
+	i = request_irq(dev->irq, &intr_handler,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (i)
 		return i;
 
diff -urN linux-2.4.26-pre5/drivers/net/sungem.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sungem.c
--- linux-2.4.26-pre5/drivers/net/sungem.c	Sat Mar 20 10:08:19 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sungem.c	Sun Mar 21 10:15:14 2004
@@ -2360,7 +2360,7 @@
 	 * on the controller
 	 */
 	if (request_irq(gp->pdev->irq, gem_interrupt,
-			SA_SHIRQ, dev->name, (void *)dev)) {
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, (void *)dev)) {
 		printk(KERN_ERR "%s: failed to request irq !\n", gp->dev->name);
 
 		spin_lock_irq(&gp->lock);
diff -urN linux-2.4.26-pre5/drivers/net/sunhme.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sunhme.c
--- linux-2.4.26-pre5/drivers/net/sunhme.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sunhme.c	Sun Mar 21 10:15:14 2004
@@ -2201,7 +2201,7 @@
 	 */
 	if ((hp->happy_flags & (HFLAG_QUATTRO|HFLAG_PCI)) != HFLAG_QUATTRO) {
 		if (request_irq(dev->irq, &happy_meal_interrupt,
-				SA_SHIRQ, dev->name, (void *)dev)) {
+				SA_SHIRQ | SA_NET_RANDOM, dev->name, (void *)dev)) {
 			HMD(("EAGAIN\n"));
 #ifdef __sparc__
 			printk(KERN_ERR "happy_meal(SBUS): Can't order irq %s to go.\n",
@@ -2607,7 +2607,7 @@
 
 		err = request_irq(sdev->irqs[0],
 				  quattro_sbus_interrupt,
-				  SA_SHIRQ, "Quattro",
+				  SA_SHIRQ | SA_NET_RANDOM, "Quattro",
 				  qp);
 		if (err != 0) {
 			printk(KERN_ERR "Quattro: Fatal IRQ registery error %d.\n", err);
diff -urN linux-2.4.26-pre5/drivers/net/sunlance.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sunlance.c
--- linux-2.4.26-pre5/drivers/net/sunlance.c	Sun Jun 29 11:49:31 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sunlance.c	Sun Mar 21 10:15:14 2004
@@ -926,7 +926,8 @@
 
 	STOP_LANCE(lp);
 
-	if (request_irq(dev->irq, &lance_interrupt, SA_SHIRQ,
+	if (request_irq(dev->irq, &lance_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM,
 			lancestr, (void *) dev)) {
 		printk(KERN_ERR "Lance: Can't get irq %s\n", __irq_itoa(dev->irq));
 		return -EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/sunqe.c linux-2.4.26-pre5-netdev-drivers/drivers/net/sunqe.c
--- linux-2.4.26-pre5/drivers/net/sunqe.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/sunqe.c	Sun Mar 21 10:15:14 2004
@@ -883,7 +883,8 @@
 	 * for it now.
 	 */
 	if (request_irq(sdev->irqs[0], &qec_interrupt,
-			SA_SHIRQ, "QuadEther", (void *) qecp)) {
+			SA_SHIRQ | SA_NET_RANDOM,
+			"QuadEther", (void *) qecp)) {
 		printk(KERN_ERR "QuadEther: Can't register QEC master irq handler.\n");
 		res = EAGAIN;
 		goto qec_free_devs;
diff -urN linux-2.4.26-pre5/drivers/net/tc35815.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tc35815.c
--- linux-2.4.26-pre5/drivers/net/tc35815.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tc35815.c	Sun Mar 21 10:15:14 2004
@@ -879,7 +879,8 @@
 	 */
 
 	if (dev->irq == 0  ||
-	    request_irq(dev->irq, &tc35815_interrupt, SA_SHIRQ, cardname, dev)) {
+	    request_irq(dev->irq, &tc35815_interrupt, 
+		    SA_SHIRQ | SA_NET_RANDOM, cardname, dev)) {
 		return -EAGAIN;
 	}
 
diff -urN linux-2.4.26-pre5/drivers/net/tg3.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tg3.c
--- linux-2.4.26-pre5/drivers/net/tg3.c	Sat Mar 20 10:08:19 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tg3.c	Sun Mar 21 10:15:14 2004
@@ -5240,7 +5240,7 @@
 		return err;
 
 	err = request_irq(dev->irq, tg3_interrupt,
-			  SA_SHIRQ, dev->name, dev);
+			  SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 
 	if (err) {
 		tg3_free_consistent(tp);
diff -urN linux-2.4.26-pre5/drivers/net/tlan.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tlan.c
--- linux-2.4.26-pre5/drivers/net/tlan.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tlan.c	Sun Mar 21 10:15:14 2004
@@ -924,7 +924,8 @@
 	int		err;
 	
 	priv->tlanRev = TLan_DioRead8( dev->base_addr, TLAN_DEF_REVISION );
-	err = request_irq( dev->irq, TLan_HandleInterrupt, SA_SHIRQ, TLanSignature, dev );
+	err = request_irq( dev->irq, TLan_HandleInterrupt,
+			SA_SHIRQ | SA_NET_RANDOM, TLanSignature, dev );
 	
 	if ( err ) {
 		printk(KERN_ERR "TLAN:  Cannot open %s because IRQ %d is already in use.\n", dev->name, dev->irq );
diff -urN linux-2.4.26-pre5/drivers/net/tokenring/3c359.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/3c359.c
--- linux-2.4.26-pre5/drivers/net/tokenring/3c359.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/3c359.c	Sun Mar 21 10:15:14 2004
@@ -577,7 +577,8 @@
 
 	u16 switchsettings, switchsettings_eeprom  ;
  
-	if(request_irq(dev->irq, &xl_interrupt, SA_SHIRQ , "3c359", dev)) {
+	if(request_irq(dev->irq, &xl_interrupt, 
+			SA_SHIRQ | SA_NET_RANDOM, "3c359", dev)) {
 		return -EAGAIN;
 	}
 
diff -urN linux-2.4.26-pre5/drivers/net/tokenring/abyss.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/abyss.c
--- linux-2.4.26-pre5/drivers/net/tokenring/abyss.c	Sun Mar  3 17:17:07 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/abyss.c	Sun Mar 21 10:15:14 2004
@@ -123,8 +123,8 @@
 		goto err_out_trdev;
 	}
 		
-	ret = request_irq(pdev->irq, tms380tr_interrupt, SA_SHIRQ,
-			  dev->name, dev);
+	ret = request_irq(pdev->irq, tms380tr_interrupt,
+			  SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (ret)
 		goto err_out_region;
 		
diff -urN linux-2.4.26-pre5/drivers/net/tokenring/ibmtr.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/ibmtr.c
--- linux-2.4.26-pre5/drivers/net/tokenring/ibmtr.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/ibmtr.c	Sun Mar 21 10:15:14 2004
@@ -662,7 +662,8 @@
 
 	/* The PCMCIA has already got the interrupt line and the io port, 
 	   so no chance of anybody else getting it - MLP */
-	if (request_irq(dev->irq = irq, &tok_interrupt, 0, "ibmtr", dev) != 0) {
+	if (request_irq(dev->irq = irq, &tok_interrupt,
+			SA_NET_RANDOM, "ibmtr", dev) != 0) {
 		DPRINTK("Could not grab irq %d.  Halting Token Ring driver.\n",
 					irq);
 		iounmap(t_mmio);
diff -urN linux-2.4.26-pre5/drivers/net/tokenring/lanstreamer.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/lanstreamer.c
--- linux-2.4.26-pre5/drivers/net/tokenring/lanstreamer.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/lanstreamer.c	Sun Mar 21 10:15:14 2004
@@ -595,7 +595,8 @@
 	        rc=streamer_reset(dev);
 	}
 
-	if (request_irq(dev->irq, &streamer_interrupt, SA_SHIRQ, "lanstreamer", dev)) {
+	if (request_irq(dev->irq, &streamer_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, "lanstreamer", dev)) {
 		return -EAGAIN;
 	}
 #if STREAMER_DEBUG
diff -urN linux-2.4.26-pre5/drivers/net/tokenring/madgemc.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/madgemc.c
--- linux-2.4.26-pre5/drivers/net/tokenring/madgemc.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/madgemc.c	Sun Mar 21 10:15:14 2004
@@ -333,8 +333,9 @@
 		 */ 
 		outb(0, dev->base_addr + MC_CONTROL_REG0); /* sanity */
 		madgemc_setsifsel(dev, 1);
-		if(request_irq(dev->irq, madgemc_interrupt, SA_SHIRQ,
-			       "madgemc", dev)) 
+		if(request_irq(dev->irq, madgemc_interrupt,
+				SA_SHIRQ | SA_NET_RANDOM,
+				"madgemc", dev)) 
 			goto getout;
 		
 		madgemc_chipset_init(dev); /* enables interrupts! */
diff -urN linux-2.4.26-pre5/drivers/net/tokenring/olympic.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/olympic.c
--- linux-2.4.26-pre5/drivers/net/tokenring/olympic.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/olympic.c	Sun Mar 21 10:15:14 2004
@@ -431,7 +431,8 @@
 
 	DECLARE_WAITQUEUE(wait,current) ; 
 
-	if(request_irq(dev->irq, &olympic_interrupt, SA_SHIRQ , "olympic", dev)) {
+	if(request_irq(dev->irq, &olympic_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, "olympic", dev)) {
 		return -EAGAIN;
 	}
 
diff -urN linux-2.4.26-pre5/drivers/net/tokenring/smctr.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/smctr.c
--- linux-2.4.26-pre5/drivers/net/tokenring/smctr.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/smctr.c	Sun Mar 21 10:15:14 2004
@@ -544,7 +544,8 @@
 			dev->irq = 15;
                		break;
 	}
-	if(request_irq(dev->irq, smctr_interrupt, SA_SHIRQ, smctr_name, dev))
+	if(request_irq(dev->irq, smctr_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, smctr_name, dev))
                 return (-ENODEV);
 
 	/* Get RAM base */
@@ -1083,7 +1084,8 @@
                         return(-1);
          }
 
-        if(request_irq(dev->irq, smctr_interrupt, SA_SHIRQ, smctr_name, dev))
+        if(request_irq(dev->irq, smctr_interrupt, 
+			SA_SHIRQ | SA_NET_RANDOM, smctr_name, dev))
                 return (-ENODEV);
 
         /* Get 58x Rom Base */
diff -urN linux-2.4.26-pre5/drivers/net/tokenring/tmsisa.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/tmsisa.c
--- linux-2.4.26-pre5/drivers/net/tokenring/tmsisa.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/tmsisa.c	Sun Mar 21 10:15:14 2004
@@ -184,8 +184,8 @@
 		for(j = 0; irqlist[j] != 0; j++)
 		{
 			dev->irq = irqlist[j];
-			if (!request_irq(dev->irq, tms380tr_interrupt, 0, 
-				isa_cardname, dev))
+			if (!request_irq(dev->irq, tms380tr_interrupt,
+				SA_NET_RANDOM, isa_cardname, dev))
 				break;
                 }
 		
@@ -210,8 +210,8 @@
 			tmsdev_term(dev);
 			return -1;
 		}
-		if (request_irq(dev->irq, tms380tr_interrupt, 0, 
-			isa_cardname, dev))
+		if (request_irq(dev->irq, tms380tr_interrupt,
+				SA_NET_RANDOM, isa_cardname, dev))
 		{
                         printk("%s: Selected IRQ %d not available\n", 
 				dev->name, dev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/tokenring/tmspci.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/tmspci.c
--- linux-2.4.26-pre5/drivers/net/tokenring/tmspci.c	Sun Mar  3 17:17:07 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tokenring/tmspci.c	Sun Mar 21 10:15:14 2004
@@ -123,8 +123,8 @@
 		goto err_out_trdev;
 	}
 
-	ret = request_irq(pdev->irq, tms380tr_interrupt, SA_SHIRQ,
-			  dev->name, dev);
+	ret = request_irq(pdev->irq, tms380tr_interrupt,
+			  SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (ret)
 		goto err_out_region;
 
diff -urN linux-2.4.26-pre5/drivers/net/tulip/tulip_core.c linux-2.4.26-pre5-netdev-drivers/drivers/net/tulip/tulip_core.c
--- linux-2.4.26-pre5/drivers/net/tulip/tulip_core.c	Sat Mar 20 10:08:19 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/tulip/tulip_core.c	Sun Mar 21 10:15:14 2004
@@ -524,7 +524,9 @@
 	int retval;
 	MOD_INC_USE_COUNT;
 
-	if ((retval = request_irq(dev->irq, &tulip_interrupt, SA_SHIRQ, dev->name, dev))) {
+	if ((retval = request_irq(dev->irq, &tulip_interrupt,
+					SA_SHIRQ | SA_NET_RANDOM,
+					dev->name, dev))) {
 		MOD_DEC_USE_COUNT;
 		return retval;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/typhoon.c linux-2.4.26-pre5-netdev-drivers/drivers/net/typhoon.c
--- linux-2.4.26-pre5/drivers/net/typhoon.c	Sat Mar 20 10:08:19 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/typhoon.c	Sun Mar 21 10:15:14 2004
@@ -2108,8 +2108,9 @@
 		goto out_sleep;
 	}
 
-	err = request_irq(dev->irq, &typhoon_interrupt, SA_SHIRQ,
-				dev->name, dev);
+	err = request_irq(dev->irq, &typhoon_interrupt, 
+			SA_SHIRQ | SA_NET_RANDOM,
+			dev->name, dev);
 	if(err < 0)
 		goto out_sleep;
 
diff -urN linux-2.4.26-pre5/drivers/net/via-rhine.c linux-2.4.26-pre5-netdev-drivers/drivers/net/via-rhine.c
--- linux-2.4.26-pre5/drivers/net/via-rhine.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/via-rhine.c	Sun Mar 21 10:15:14 2004
@@ -1131,7 +1131,8 @@
 	/* Reset the chip. */
 	writew(CmdReset, ioaddr + ChipCmd);
 
-	i = request_irq(np->pdev->irq, &via_rhine_interrupt, SA_SHIRQ, dev->name, dev);
+	i = request_irq(np->pdev->irq, &via_rhine_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (i)
 		return i;
 
diff -urN linux-2.4.26-pre5/drivers/net/wan/8253x/8253xini.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/8253x/8253xini.c
--- linux-2.4.26-pre5/drivers/net/wan/8253x/8253xini.c	Sun Aug  4 12:05:03 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/8253x/8253xini.c	Sun Mar 21 10:15:14 2004
@@ -2422,7 +2422,7 @@
 		if((AuraBoardESCC2IrqRoot[intr_val] != NULL) || (AuraBoardESCC8IrqRoot[intr_val] != NULL) ||
 		   (AuraBoardMCSIrqRoot[intr_val] != NULL))
 		{
-			if (request_irq(intr_val, sab8253x_interrupt, SA_SHIRQ,
+			if (request_irq(intr_val, sab8253x_interrupt, SA_SHIRQ | SA_NET_RANDOM,
 					"sab8253x", &AuraBoardESCC2IrqRoot[intr_val]) == 0) 
 				/* interrupts on perboard basis
 				 * cycle through chips and then
diff -urN linux-2.4.26-pre5/drivers/net/wan/c101.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/c101.c
--- linux-2.4.26-pre5/drivers/net/wan/c101.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/c101.c	Sun Mar 21 10:15:14 2004
@@ -277,7 +277,7 @@
 	}
 	memset(card, 0, sizeof(card_t));
 
-	if (request_irq(irq, sca_intr, 0, devname, card)) {
+	if (request_irq(irq, sca_intr, SA_NET_RANDOM, devname, card)) {
 		printk(KERN_ERR "c101: could not allocate IRQ\n");
 		c101_destroy_card(card);
 		return(-EBUSY);
diff -urN linux-2.4.26-pre5/drivers/net/wan/comx-hw-comx.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/comx-hw-comx.c
--- linux-2.4.26-pre5/drivers/net/wan/comx-hw-comx.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/comx-hw-comx.c	Sun Mar 21 10:15:14 2004
@@ -469,8 +469,8 @@
 		if (!request_region(dev->base_addr, hw->io_extent, dev->name)) {
 			return -EAGAIN;
 		}
-		if (request_irq(dev->irq, COMX_interrupt, 0, dev->name, 
-		   (void *)dev)) {
+		if (request_irq(dev->irq, COMX_interrupt, SA_NET_RANDOM,
+				dev->name, (void *)dev)) {
 			printk(KERN_ERR "comx-hw-comx: unable to obtain irq %d\n", dev->irq);
 			release_region(dev->base_addr, hw->io_extent);
 			return -EAGAIN;
@@ -581,7 +581,8 @@
 	if (ch->twin && (twin_ch = ch->twin->priv) && 
 	    (twin_ch->init_status & HW_OPEN)) {
 		/* Pass the irq to the twin */
-		if (request_irq(dev->irq, COMX_interrupt, 0, ch->twin->name, 
+		if (request_irq(dev->irq, COMX_interrupt, 
+				SA_NET_RANDOM, ch->twin->name, 
 		   (void *)ch->twin) == 0) {
 			twin_ch->init_status |= IRQ_ALLOCATED;
 		}
diff -urN linux-2.4.26-pre5/drivers/net/wan/comx-hw-locomx.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/comx-hw-locomx.c
--- linux-2.4.26-pre5/drivers/net/wan/comx-hw-locomx.c	Sun Aug  4 12:05:03 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/comx-hw-locomx.c	Sun Mar 21 10:15:14 2004
@@ -170,8 +170,8 @@
 	hw->board.chanA.irqs=&z8530_nop;
 	hw->board.chanB.irqs=&z8530_nop;
 
-	if(request_irq(dev->irq, z8530_interrupt, SA_INTERRUPT, 
-	    dev->name, &hw->board)) {
+	if(request_irq(dev->irq, z8530_interrupt,
+		SA_INTERRUPT | SA_NET_RANDOM, dev->name, &hw->board)) {
 		printk(KERN_ERR "%s: unable to obtain irq %d\n", dev->name, 
 			dev->irq);
 		ret=-EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/wan/comx-hw-mixcom.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/comx-hw-mixcom.c
--- linux-2.4.26-pre5/drivers/net/wan/comx-hw-mixcom.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/comx-hw-mixcom.c	Sun Mar 21 10:15:14 2004
@@ -518,8 +518,8 @@
 	}
 
 	if(hw->channel==0 && !(ch->init_status & IRQ_ALLOCATED)) {
-		if (request_irq(dev->irq, MIXCOM_interrupt, 0, 
-		    dev->name, (void *)dev)) {
+		if (request_irq(dev->irq, MIXCOM_interrupt,
+				SA_NET_RANDOM, dev->name, (void *)dev)) {
 			printk(KERN_ERR "MIXCOM: unable to obtain irq %d\n", dev->irq);
 			ret = -EAGAIN;
 			goto err_release_region;
diff -urN linux-2.4.26-pre5/drivers/net/wan/cosa.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/cosa.c
--- linux-2.4.26-pre5/drivers/net/wan/cosa.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/cosa.c	Sun Mar 21 10:15:14 2004
@@ -541,7 +541,8 @@
 	cosa->nchannels = 2;	/* FIXME: how to determine this? */
 
 	request_region(base, is_8bit(cosa)?2:4, cosa->type);
-	if (request_irq(cosa->irq, cosa_interrupt, 0, cosa->type, cosa))
+	if (request_irq(cosa->irq, cosa_interrupt, SA_NET_RANDOM,
+			cosa->type, cosa))
 		goto bad1;
 	if (request_dma(cosa->dma, cosa->type)) {
 		free_irq(cosa->irq, cosa);
diff -urN linux-2.4.26-pre5/drivers/net/wan/cycx_main.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/cycx_main.c
--- linux-2.4.26-pre5/drivers/net/wan/cycx_main.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/cycx_main.c	Sun Mar 21 10:15:14 2004
@@ -214,7 +214,8 @@
 	/* Allocate IRQ */
 	irq = conf->irq == 2 ? 9 : conf->irq;	/* IRQ2 -> IRQ9 */
 
-	if (request_irq(irq, cycx_isr, 0, wandev->name, card)) {
+	if (request_irq(irq, cycx_isr, SA_NET_RANDOM,
+			wandev->name, card)) {
 		printk(KERN_ERR "%s: can't reserve IRQ %d!\n",
 				wandev->name, irq);
 		goto out;
diff -urN linux-2.4.26-pre5/drivers/net/wan/dscc4.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/dscc4.c
--- linux-2.4.26-pre5/drivers/net/wan/dscc4.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/dscc4.c	Sun Mar 21 10:15:14 2004
@@ -740,7 +740,8 @@
 
 	priv = (struct dscc4_pci_priv *)pci_get_drvdata(pdev);
 
-	if (request_irq(pdev->irq, &dscc4_irq, SA_SHIRQ, DRV_NAME, priv->root)){
+	if (request_irq(pdev->irq, &dscc4_irq, SA_SHIRQ | SA_NET_RANDOM, 
+		DRV_NAME, priv->root)){
 		printk(KERN_WARNING "%s: IRQ %d busy\n", DRV_NAME, pdev->irq);
 		goto err_out_free1;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/wan/farsync.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/farsync.c
--- linux-2.4.26-pre5/drivers/net/wan/farsync.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/farsync.c	Sun Mar 21 10:15:14 2004
@@ -1602,7 +1602,8 @@
         card->state = FST_RESET;
 
         /* Register the interrupt handler */
-        if ( request_irq ( card->irq, fst_intr, SA_SHIRQ, FST_DEV_NAME, card ))
+        if ( request_irq ( card->irq, fst_intr, SA_SHIRQ | SA_NET_RANDOM,
+			FST_DEV_NAME, card ))
         {
 
                 printk_err ("Unable to register interrupt %d\n", card->irq );
diff -urN linux-2.4.26-pre5/drivers/net/wan/hostess_sv11.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/hostess_sv11.c
--- linux-2.4.26-pre5/drivers/net/wan/hostess_sv11.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/hostess_sv11.c	Sun Mar 21 10:15:14 2004
@@ -254,7 +254,9 @@
 	/* We want a fast IRQ for this device. Actually we'd like an even faster
 	   IRQ ;) - This is one driver RtLinux is made for */
 	   
-	if(request_irq(irq, &z8530_interrupt, SA_INTERRUPT, "Hostess SV/11", dev)<0)
+	if(request_irq(irq, &z8530_interrupt,
+			SA_INTERRUPT | SA_NET_RANDOM,
+			"Hostess SV/11", dev)<0)
 	{
 		printk(KERN_WARNING "hostess: IRQ %d already in use.\n", irq);
 		goto fail1;
diff -urN linux-2.4.26-pre5/drivers/net/wan/lmc/lmc_main.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/lmc/lmc_main.c
--- linux-2.4.26-pre5/drivers/net/wan/lmc/lmc_main.c	Sat Dec  1 18:27:13 2001
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/lmc/lmc_main.c	Sun Mar 21 10:15:14 2004
@@ -1178,7 +1178,8 @@
     lmc_softreset (sc);
 
     /* Since we have to use PCI bus, this should work on x86,alpha,ppc */
-    if (request_irq (dev->irq, &lmc_interrupt, SA_SHIRQ, dev->name, dev)){
+    if (request_irq (dev->irq, &lmc_interrupt,
+		SA_SHIRQ | SA_NET_RANDOM, dev->name, dev)){
         printk(KERN_WARNING "%s: could not get irq: %d\n", dev->name, dev->irq);
         lmc_trace(dev, "lmc_open irq failed out");
         return -EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/wan/n2.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/n2.c
--- linux-2.4.26-pre5/drivers/net/wan/n2.c	Fri Feb 20 07:38:29 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/n2.c	Sun Mar 21 10:15:14 2004
@@ -365,7 +365,7 @@
 	}
 	card->io = io;
 
-	if (request_irq(irq, &sca_intr, 0, devname, card)) {
+	if (request_irq(irq, &sca_intr, SA_NET_RANDOM, devname, card)) {
 		printk(KERN_ERR "n2: could not allocate IRQ\n");
 		n2_destroy_card(card);
 		return(-EBUSY);
diff -urN linux-2.4.26-pre5/drivers/net/wan/sbni.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/sbni.c
--- linux-2.4.26-pre5/drivers/net/wan/sbni.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/sbni.c	Sun Mar 21 10:15:14 2004
@@ -1163,7 +1163,8 @@
 			}
 	}
 
-	if( request_irq(dev->irq, sbni_interrupt, SA_SHIRQ, dev->name, dev) ) {
+	if( request_irq(dev->irq, sbni_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev) ) {
 		printk( KERN_ERR "%s: unable to get IRQ %d.\n",
 			dev->name, dev->irq );
 		return  -EAGAIN;
diff -urN linux-2.4.26-pre5/drivers/net/wan/sdla.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/sdla.c
--- linux-2.4.26-pre5/drivers/net/wan/sdla.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/sdla.c	Sun Mar 21 10:15:14 2004
@@ -1471,7 +1471,8 @@
 	}
 	dev->irq = map->irq;
 
-	if (request_irq(dev->irq, &sdla_isr, 0, dev->name, dev)) 
+	if (request_irq(dev->irq, &sdla_isr, SA_NET_RANDOM,
+			dev->name, dev)) 
 		return(-EAGAIN);
 
 	if (flp->type == SDLA_S507)
diff -urN linux-2.4.26-pre5/drivers/net/wan/sdlamain.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/sdlamain.c
--- linux-2.4.26-pre5/drivers/net/wan/sdlamain.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/sdlamain.c	Sun Mar 21 10:15:14 2004
@@ -495,8 +495,7 @@
 		/* when using the S514 PCI adapter */
 		
        		if(request_irq(irq, sdla_isr, 
-		      (card->hw.type == SDLA_S514) ? SA_SHIRQ : 0, 
-		       wandev->name, card)){
+		      (card->hw.type == SDLA_S514) ? SA_SHIRQ : 0 | SA_NET_RANDOM, wandev->name, card)){
 
 			printk(KERN_INFO "%s: Can't reserve IRQ %d!\n", wandev->name, irq);
 			return -EINVAL;
diff -urN linux-2.4.26-pre5/drivers/net/wan/sealevel.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/sealevel.c
--- linux-2.4.26-pre5/drivers/net/wan/sealevel.c	Sun Aug  4 12:05:03 2002
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wan/sealevel.c	Sun Mar 21 10:15:14 2004
@@ -280,7 +280,8 @@
 	/* We want a fast IRQ for this device. Actually we'd like an even faster
 	   IRQ ;) - This is one driver RtLinux is made for */
    
-	if(request_irq(irq, &z8530_interrupt, SA_INTERRUPT, "SeaLevel", dev)<0)
+	if(request_irq(irq, &z8530_interrupt,
+			SA_INTERRUPT | SA_NET_RANDOM, "SeaLevel", dev)<0)
 	{
 		printk(KERN_WARNING "sealevel: IRQ %d already in use.\n", irq);
 		goto fail1_1;
diff -urN linux-2.4.26-pre5/drivers/net/wavelan.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wavelan.c
--- linux-2.4.26-pre5/drivers/net/wavelan.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wavelan.c	Sun Mar 21 10:15:14 2004
@@ -3910,7 +3910,8 @@
 		return -ENXIO;
 	}
 
-	if (request_irq(dev->irq, &wavelan_interrupt, 0, "WaveLAN", dev) != 0) 
+	if (request_irq(dev->irq, &wavelan_interrupt, SA_NET_RANDOM,
+				"WaveLAN", dev) != 0) 
 	{
 #ifdef DEBUG_CONFIG_ERROR
 		printk(KERN_WARNING "%s: wavelan_open(): invalid IRQ\n",
diff -urN linux-2.4.26-pre5/drivers/net/wd.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wd.c
--- linux-2.4.26-pre5/drivers/net/wd.c	Sun Jan 26 10:12:42 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wd.c	Sun Mar 21 10:15:14 2004
@@ -266,7 +266,8 @@
 
 	/* Snarf the interrupt now.  There's no point in waiting since we cannot
 	   share and the board will usually be enabled. */
-	i = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev);
+	i = request_irq(dev->irq, ei_interrupt,
+			SA_NET_RANDOM, dev->name, dev);
 	if (i) {
 		printk (" unable to get IRQ %d.\n", dev->irq);
 		kfree(dev->priv);
diff -urN linux-2.4.26-pre5/drivers/net/winbond-840.c linux-2.4.26-pre5-netdev-drivers/drivers/net/winbond-840.c
--- linux-2.4.26-pre5/drivers/net/winbond-840.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/winbond-840.c	Sun Mar 21 10:15:14 2004
@@ -692,7 +692,8 @@
 	writel(0x00000001, ioaddr + PCIBusCfg);		/* Reset */
 
 	netif_device_detach(dev);
-	i = request_irq(dev->irq, &intr_handler, SA_SHIRQ, dev->name, dev);
+	i = request_irq(dev->irq, &intr_handler,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (i)
 		goto out_err;
 
diff -urN linux-2.4.26-pre5/drivers/net/wireless/airo.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wireless/airo.c
--- linux-2.4.26-pre5/drivers/net/wireless/airo.c	Sat Mar 20 10:08:19 2004
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wireless/airo.c	Sun Mar 21 10:15:14 2004
@@ -2216,7 +2216,8 @@
 	dev->irq = irq;
 	dev->base_addr = port;
 
-	rc = request_irq( dev->irq, airo_interrupt, SA_SHIRQ, dev->name, dev );
+	rc = request_irq( dev->irq, airo_interrupt,
+		SA_SHIRQ | SA_NET_RANDOM, dev->name, dev );
 	if (rc) {
 		printk(KERN_ERR "airo: register interrupt %d failed, rc %d\n", irq, rc );
 		goto err_out_unlink;
diff -urN linux-2.4.26-pre5/drivers/net/wireless/airport.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wireless/airport.c
--- linux-2.4.26-pre5/drivers/net/wireless/airport.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wireless/airport.c	Sun Mar 21 10:15:14 2004
@@ -227,7 +227,7 @@
 	/* Reset it before we get the interrupt */
 	hermes_init(hw);
 
-	if (request_irq(dev->irq, orinoco_interrupt, 0, "Airport", dev)) {
+	if (request_irq(dev->irq, orinoco_interrupt, SA_NET_RANDOM, "Airport", dev)) {
 		printk(KERN_ERR "airport: Couldn't get IRQ %d\n", dev->irq);
 		goto failed;
 	}
diff -urN linux-2.4.26-pre5/drivers/net/wireless/orinoco_plx.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wireless/orinoco_plx.c
--- linux-2.4.26-pre5/drivers/net/wireless/orinoco_plx.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wireless/orinoco_plx.c	Sun Mar 21 10:15:14 2004
@@ -243,7 +243,7 @@
 			HERMES_IO, HERMES_16BIT_REGSPACING);
 	pci_set_drvdata(pdev, dev);
 
-	err = request_irq(pdev->irq, orinoco_interrupt, SA_SHIRQ, dev->name, dev);
+	err = request_irq(pdev->irq, orinoco_interrupt, SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (err) {
 		printk(KERN_ERR "orinoco_plx: Error allocating IRQ %d.\n", pdev->irq);
 		err = -EBUSY;
diff -urN linux-2.4.26-pre5/drivers/net/wireless/orinoco_tmd.c linux-2.4.26-pre5-netdev-drivers/drivers/net/wireless/orinoco_tmd.c
--- linux-2.4.26-pre5/drivers/net/wireless/orinoco_tmd.c	Sat Sep 13 07:57:25 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/wireless/orinoco_tmd.c	Sun Mar 21 10:15:14 2004
@@ -135,8 +135,8 @@
 			HERMES_IO, HERMES_16BIT_REGSPACING);
 	pci_set_drvdata(pdev, dev);
 
-	err = request_irq(pdev->irq, orinoco_interrupt, SA_SHIRQ, dev->name,
-			  dev);
+	err = request_irq(pdev->irq, orinoco_interrupt, 
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (err) {
 		printk(KERN_ERR "orinoco_tmd: Error allocating IRQ %d.\n",
 		       pdev->irq);
diff -urN linux-2.4.26-pre5/drivers/net/yellowfin.c linux-2.4.26-pre5-netdev-drivers/drivers/net/yellowfin.c
--- linux-2.4.26-pre5/drivers/net/yellowfin.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/yellowfin.c	Sun Mar 21 10:15:14 2004
@@ -626,7 +626,8 @@
 	/* Reset the chip. */
 	outl(0x80000000, ioaddr + DMACtrl);
 
-	i = request_irq(dev->irq, &yellowfin_interrupt, SA_SHIRQ, dev->name, dev);
+	i = request_irq(dev->irq, &yellowfin_interrupt,
+			SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
 	if (i) return i;
 
 	if (yellowfin_debug > 1)
diff -urN linux-2.4.26-pre5/drivers/net/znet.c linux-2.4.26-pre5-netdev-drivers/drivers/net/znet.c
--- linux-2.4.26-pre5/drivers/net/znet.c	Mon Apr 21 22:41:05 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/znet.c	Sun Mar 21 10:15:14 2004
@@ -252,7 +252,8 @@
 	zn.lock = SPIN_LOCK_UNLOCKED;
 
 	/* These should never fail.  You can't add devices to a sealed box! */
-	if (request_irq(dev->irq, &znet_interrupt, 0, "ZNet", dev)
+	if (request_irq(dev->irq, &znet_interrupt, SA_NET_RANDOM,
+	                "ZNet", dev)
 		|| request_dma(zn.rx_dma,"ZNet rx")
 		|| request_dma(zn.tx_dma,"ZNet tx")) {
 		printk(KERN_WARNING "%s: Not opened -- resource busy?!?\n", dev->name);
diff -urN linux-2.4.26-pre5/drivers/net/zorro8390.c linux-2.4.26-pre5-netdev-drivers/drivers/net/zorro8390.c
--- linux-2.4.26-pre5/drivers/net/zorro8390.c	Sat Dec  6 08:14:46 2003
+++ linux-2.4.26-pre5-netdev-drivers/drivers/net/zorro8390.c	Sun Mar 21 10:15:14 2004
@@ -194,7 +194,8 @@
     dev->irq = IRQ_AMIGA_PORTS;
 
     /* Install the Interrupt handler */
-    i = request_irq(IRQ_AMIGA_PORTS, ei_interrupt, SA_SHIRQ, dev->name, dev);
+    i = request_irq(IRQ_AMIGA_PORTS, ei_interrupt, 
+		    SA_SHIRQ | SA_NET_RANDOM, dev->name, dev);
     if (i) return i;
 
     /* Allocate dev->priv and fill in 8390 specific dev fields. */
